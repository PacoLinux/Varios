BEGIN    COMMENT HERE BEGINS THE TULGEY WOOD. RESEQED 9/27/68;          00001000
DEFINE   VFINISHED      = 00#;                                          00001100
DEFINE   VHELLO         = 01#;                                          00001200
DEFINE   VBREAK         = 02#;                                          00001300
DEFINE   VWRU           = 03#;                                          00001400
DEFINE   VLINECLEAR     = 04#;                                          00001500
DEFINE   VDISKCHUNK     = 05#;                                          00001600
DEFINE   VDISCONNECT    = 06#;                                          00001700
DEFINE   VINPUTDATA     = 07#;                                          00001800
DEFINE   VBREAKCLEAR    = 08#;                                          00001900
DEFINE   VRESTARTIT     = 09#;                                          00001950
DEFINE   VMCPUSE        = 10#;                                          00002000
DEFINE   VMCPMSG        = 14#;                                          00002100
DEFINE   VCOOLIT        = 15#;                                          00002110
DEFINE   VMCPOK         = 16#;                                          00002120
DEFINE   VTEACHER       = 25#;                                          00002200
DEFINE   VINPUT         = 26#;                                          00002300
DEFINE   VDISPATCH      = 27#;                                          00002400
DEFINE   VDISKREAD      = 28#;                                          00002500
DEFINE   VRESTART       = 29#;                                          00002600
DEFINE   VOOPS          = 30#;                                          00002700
DEFINE   VDOGCATCHER    = 31#;                                          00002800
DEFINE   VCOMPILEIT     = 32#;                                          00002900
DEFINE   VSETUPFILES    = 33#;                                          00003000
DEFINE   VERROR         = 34#;                                          00003100
DEFINE   VCLOSEWORKTABLE= 35#;                                          00003200
DEFINE   VCHNGPSWD      = 36#;                                          00003300
DEFINE   VTIME          = 37#;                                          00003301
DEFINE   VCC            = 38#;                                          00003310
DEFINE   VCHNGNAME      = 39#;                                          00003312
DEFINE   VMONITORR      = 40#;                                          00003314
DEFINE   VSET           = 41#;                                          00003316
DEFINE   VSSFILE        = 42#;                                          00003318
DEFINE   VEQUATE        = 43#; % LABEL EQUATION                         00003320
DEFINE   VSSMSG         = 50#;                                          00003400
DEFINE   VPDIT          = 51#;                                          00003500
DEFINE   VCOPY          = 52#;                                          00003600
DEFINE   VSEQ           = 53#;                                          00003700
DEFINE   VBYE           = 54#;                                          00003800
DEFINE   VMAKE          = 55#;                                          00003900
DEFINE   VLIST          = 56#;                                          00004000
DEFINE   VRUN           = 57#;                                          00004100
DEFINE   VLOAD          = 58#;                                          00004200
DEFINE   VSAVE          = 59#;                                          00004300
DEFINE   VCOMPILE       = 60#;                                          00004400
DEFINE   VREMOVE        = 61#;                                          00004500
DEFINE   VCHANGE        = 62#;                                          00004600
DEFINE   VRENAME        = 63#;                                          00004700
DEFINE   VWHATS         = 64#;                                          00004800
DEFINE   VTYPE          = 65#;                                          00004900
DEFINE   VEXECUTE      = 66#;                                           00005000
DEFINE   VGUARD         = 67#;                                          00005100
DEFINE   VLOCK          = 68#;                                          00005200
DEFINE   VTAPE          = 69#;                                          00005300
DEFINE   VPRINT         = 70#;                                          00005400
DEFINE   VCHARGE        = 71#;                                          00005450
DEFINE   VSCHEDULE      = 72#;                                          00005500
DEFINE   VSTATUSSTOP    = 73#;                                          00005600
DEFINE   VLFILES        = 74#;                                          00005700
DEFINE   VUPDATE        = 75#;                                          00006390
DEFINE   VREPLACE       = 76 #;                                         00006395
DEFINE        CALL(CALL1)=IAM:=0#;  % FOR UNUSED CASE STMTS             00006400
        %                                                               00006500
INTEGER       COMMON;                                                   00006600
SAVE ARRAY L[0:30];                                                     00006700
DEFINE        STUFF=L#;                                                 00006800
DEFINE        FF = [18:15]#, CF = [33:15]#;      %F FIELD & C FIELD     00007600
DEFINE        CR=0#, LF=..100001#, CRLF=1#, NOCRLF=..100000#;           00007700
DEFINE        NO = NOT#;                                                00007800
DEFINE        MAXLINES =48 #;     % NO OF LOGICAL LINES TO BE HANDLED.  00007900
DEFINE        IDLETIME = 360000#;                                       00008000
DEFINE        LLWORDS  =100#;     % NO OF WORDS PER LOGICAL LINE.       00008100
DEFINE        TBLSZ =20#;         % WRKTBL SEGS MAX (17+CHKPOINT).      00008200
REAL          DISKBOTTOM;         % FOR DIRECTORY SEARCHES.             00008300
                                                                        00008400
DEFINE        NUMOFVERBS = 49#,                                         00008500
              NUMOFTYPES =11#,      % NUMBER. OF TYPE WORDS             00008600
     % VOID                                                             00008700
     % VOID                                                             00008750
              NUMOFRESWRDS = 26 #;     %  NO. OF RESERVED WORDS(NOT VBS)00008800
BOOLEAN       FLAGS, DCP;                                               00008900
        %                                                               00009000
DEFINE        WECANUSEDATA = FLAGS.[1:1] #                              00009100
            , NODATA       = FLAGS.[2:1] #                              00009200
            , NODATAREQUESTED = FLAGS.[3:1] #                           00009300
            , NOFILES        = FLAGS.[4:1] #                            00009400
            , NOTANKS        = FLAGS.[5:1] #                            00009500
            , WENEEDTOCOOLIT = FLAGS.[6:1]#                             00009510
            , TIMETOOKLINES  = FLAGS.[7:1]#                             00009520
 ;BOOLEAN DOGSAROUND %%%%%%%%%%%%%%%%%%  TEMP  %%%%%%%%%%%%%%%%%%%%%    00009600
              ;                                                         00009700
DEFINE        TELETYPE  = 0#,                                           00009730
              CONRAC    = 1#,                                           00009740
              TC500     = 2#,                                           00009750
              BIDS      = 3#;                                           00009760
%PAGE                                                                   00009800
        %                                                               00009900
SAVE    ARRAY TTYINPUT [0:29];         % INPUT DATA FROM LINEMTNCE.     00010000
SAVE ARRAY    WORK [0:59];              % I/0 PROCESSING AREA           00010100
REAL          DATAOFFSETT,  DATAWORDS,  DATADISKLOC;                    00010200
REAL          ROWINUSE,DOGCATCHERS,ROWCOUNT,TIMENOW;                    00010300
REAL         NUDCOUNT;                                                  00010350
REAL          MSGFILELOC;    % CONTAINS ABS DISK LOC MESAGES.           00010400
REAL          TANKFILE;  % DISK ADDR OF TANK/DISK.                      00010500
REAL          TANKSIZE;  % ROW SIZE OF TANK FILE.                       00010600
     % VOID                                                             00010700
REAL          LL       ,     % LOGICAL LINE NO CURRENTLY BEING HANDLED. 00010800
              LLPREV   ,     % LOGICAL LINE NO PREVIOUSLY HANDLED.      00010900
              CLOCK    ,     % CONTAINS PROCESSOR TIME USED.            00011000
              CLOCKPREV,     % PREVIOUS PROCESSOR TIME USED.            00011100
              WAITBIT  ,     % WAIT INDICATOR FOR NEXTEVENT.            00011200
              REASON   ,     % REASON FOR THIS EVENT ENTRY.             00011300
              ASTOR    ,     % CONTAINS # FOR TTY RESPONSE              00011400
              DATE     ,     % DATE--MM/DD/YY                           00011500
              SPOCNTRL ,     % SPO CONTROL VARIABLE                     00011600
              IAM      ,     % CALLING PROCEDURE NO. OR NEXT OPERATION. 00011700
              DOING    ,     % CALLER"S CASE OR SWITCH VALUE.           00011800
              WANT     ,     % REQUESTED OPERATION NO.                  00011900
              ERRSW    ,     % IF AN ERROR IS ENCOUNTERED.              00012000
              BASE     ,     % BASE OF LL SCRATCH AREA.                 00012100
              TEMP     ,     % TEMPORARY WORDS USED BY A PROCEDURE.     00012200
              PARAM    ,     % PARAMETER COUNT BEING PASSED TO PROCEDURE00012300
              WAITFOR  ,     % CONDITION REQD BEFORE RETURNING.         00012400
              PREVRCW  ,     % POINTS AT LATEST RCW FOR THIS LINE.      00012500
              SREG      ;    %"STACK" REGISTER FOR ACCESSING ARRAY WDS. 00012600
        %                                                               00012700
REAL          SCW, RCW;   %  STACK CONTROL WORD, RETURN CONTROL WORD.   00012800
REAL          STACKSIZE,PROCESSLIMIT,IOLIMIT,CORESIZE,COMMONVALUE;      00012810
REAL          WORKADRS,WORKENDADRS; % POINTERS TO WORK ARRAY            00012820
DEFINE  %                                                               00012900
              SCWWAITBITS =  [10:7] #, %                                00013000
              SCWWAIT  = SCW.[10:7] #, %                                00013100
              SCWPREV  = SCW.[17:8] #, %                                00013200
              SCWBASE  = SCW.[25:8] #, %                                00013300
              SCWDOING = SCW.[33:7] #, %                                00013400
              SCWIAM   = SCW.[40:8] #, %                                00013500
        %                                                               00013600
              RCWSREG  = RCW.[03:8] #, %                                00013700
              RCWPARAM = RCW.[11:7] #, %                                00013800
              RCWTEMP  = RCW.[18:7] #, %                                00013900
              RCWBASE  = RCW.[25:8] #, %                                00014000
              RCWDOING = RCW.[33:7] #, %                                00014100
              RCWIAM   = RCW.[40:8] #; %                                00014200
DEFINE ESPTABLESIZE = 40#; % INCREASE THIS IF "NO ROOM" ERRORS          00014300
ARRAY ESPTABLE[0:ESPTABLESIZE]; % ESP SEGMENTS FOR LABEL EQUATION       00014310
ARRAY         ASCII[0:15];                                              00014400
ARRAY         CTRANDBASE [0:15];                                        00014500
ARRAY         DOGHOUSE [0:MAXLINES];                                    00014600
ALPHA ARRAY   VERBTABLE [0:2|NUMOFVERBS],                               00014700
              TYPETABLE [0:NUMOFTYPES],                                 00014800
              RESWRDTABLE [0:2|NUMOFRESWRDS];                           00014900
REAL    ARRAY EVENTS    [0:4];                   % OUR EVENT AREA.      00015000
REAL    ARRAY EVENT     [0:20];                   % MCP EVENT AREA.     00015100
REAL    ARRAY USRBASE   [0:20]; % DISK ADDRESSES OF USERS/CANDE FILE    00015110
DEFINE  USROWSIZE = USRBASE[20]#; % SEGMENTS/ROW FOR USERS/CANDE FILE   00015120
DEFINE  %                                                               00015200
              EVENTLL     = EVENTS[0].[25:8] #                          00015300
            , EVENTREASON = EVENTS[0].[18:7] #                          00015400
              ; %                                                       00015500
REAL    ARRAY LINE      [0:MAXLINES,0:LLWORDS];  % LOGICAL LINE  INFO.  00015600
COMMENT:      THE FOLLOWING DEFINES ARE USED TO ACCESS LINE ARRAYWORDS; 00015700
DEFINE        TBASE =0#;   % BASE FOR TBL ENTRIES                       00015800
DEFINE        SBASE = 49#; % PROCEDURE STACK BASE                       00015900
DEFINE  %                                                               00016000
              LLINFO    = A[11] #,     % LINE CONTROL INFORMATION.      00016100
              LLDISKREAD= A[12] #,     % ADDRESS OF DISK SEG TO BE READ.00016200
              WAITINGSCW= A[13] #,     % HOLDS CURR SCW DURING A WAIT.  00016300
              MSGPOINTER= A[14] #,     %                                00016400
              MSGPTR    = A[14] #,     %                                00016500
              USERLOC   = A[15] #,     % ADDR OF USER REC               00016600
              USERCODE  = A[16] #,     %                                00016700
              UCLOC      = 16#,                                         00016800
              RLCW      = A[17] #,     % STORED VALUE OF CURRENT LCW    00016900
              CHARGE    = A[18] #,     % CHARGE CODE IF USED.           00017000
              LOGONTIME = A[19] #,     %                                00017100
              PTIME     = A[20] #,     % PROCESSOR TIME USED ON THIS LL.00017200
              PTLOC     =   20  #,     % LOCATION OF THIS LINES PTIME.  00017300
              INPUTCTR  = A[21] #,     % NUMBER OF INPUTS WE RECVD.     00017400
              FILENAME  = A[22] #,     %  NAME OF THE "WORK" FILE       00017500
              DEVICE    = A[23] #,     % TYPE OF REMOTE TERMINAL        00017600
              PREVMSG   = A[24] #,     % MESSAGE BEFORE NO DISK OCCURRED00017650
              INCREMENT = A[24] #,     %                                00017700
              SEQLAST   = A[25] #,                                      00017800
              SEQIN     = A[26] #,                                      00017900
              LASTRECORD= A[27] #,     % DATA FILE RECORD COUNT         00018000
              TABLEINFO = A[28] #,     %  CONTROL WORD FOR WORK TABLE   00018100
              UPDATEBIT = A[28].[23:1] #, % UPDATE IN PROGRESS          00018110
              TPDKREL   = TABLEINFO.[24:6] #,    % REL SEG ADDR         00018200
              TPREC     = TABLEINFO.[30:2]#,     %  ID WD REC IN SEG    00018300
              TPENTRY   = TABLEINFO.[32:4]#,     %  WHICH OF 10 IN REC  00018400
              TPCOUNT   = TABLEINFO.[36:12]#,    %  NUMBER OF ENTRIES   00018500
              WRKTBLADR = A[29] #,     % ABS DISK ADDR FOR WORK FILE    00018600
              TPDKADR   = WRKTBLADR + TPDKREL #, % CURR WRK FILE ADDR   00018700
              FILETYPE  = A[30] #,     %  TYPE OF FILE WORKING ON       00018800
              SOURCEFILE= A[31] #,     % NAME OF CURRENT SOURCE FILE    00018900
              ESP1      = A[32] #,     %  ADDRESS OF FIRST ESP SEG      00019000
              ESP2      = A[33] #,     %  SECOND ESP SEGMENT            00019100
              RUN1      = A[34] #,     %  FIRST NAME OF THING RUNNING   00019200
              RUN2      = A[35] #,     %  LAST NAME OF THING RUNNING    00019300
              OBJECTFILE= A[36] #,     %  NAME OF CURRENT OBJECT FILE   00019400
              LIBMSGCTR = A[37] #,     % NO OF LIBMTNCE MSGS.           00019500
              ETIME     = A[38] #,     % EXECUTION TIME.                00019550
              TIMELIMITS= A[39] #, % AUTHORIZED TIME PERIOD             00019600
              NOTIFYBIT = A[39].[2:1] #, % "ON" WHEN NOTIFIED           00019602
              NOTIFIED  = BOOLEAN(NOTIFYBIT) #,                         00019604
              NOTIFYTIME  = A[40] #,                                    00019606
              TIMERESTRICTBIT = A[39].[3:1] #,                          00019608
              RESTRICTEDLANGUAGES   = A[41] #,                          00019610
              RESTRICTEDVERBS = A[42]#, % AND A[43]                     00019620
              GRACEPERIOD = 0.25 #,                                     00019622
              IOTOT = A[44] #, % TOTAL IO TIME FOR THIS LL              00019624
              COMMONCELL = A[45] #,                                     00019626
              CHKSEQNMBR = A[46] #, % NEXT SEQ NO. FOR BLOCK XMISSN     00019627
              OPTIONBITS = A[47] #, % USERS "SPECIAL" OPTIONS           00019628
              ESPWORD    = A[48] #, % LABEL EQUATION INFO               00019630
              ESPFLAG    = ESPWORD.[1:1]#,                              00019632
              ESPCOUNT   = ESPWORD.[2:8]#,                              00019634
              FIRSTESP   = ESPWORD.[20:28]#;                            00019636
        %                                                               00019700
BOOLEAN ARRAY LLCONTROL [0:MAXLINES];            % LOGICAL LINE CONTROL.00019800
COMMENT:      THE FOLLOWING DEFINES ACCESS LLCONTROL;                   00019900
DEFINE        LCW       = LLCONTROL[LL] #,  % LINE CONTROL WORD.        00020000
              LOGGEDON           = LCW.[01:1] #  %                      00020100
            , ALLDONE            = LCW.[02:1] #  %                      00020200
            , BUSYLINE           = LCW.[03:1] #  %                      00020300
            , IDLELINE           = NOT BUSYLINE #%                      00020400
            , INITIATEDWHILEBUSY = LCW.[04:1] #  %                      00020500
            , SEQMODE            = LCW.[05:1] #  %                      00020600
            , EQUATED            = LCW.[06:1] #  % LABEL EQUATED        00020700
            , DATAENABLED        = LCW.[07:1] #  %                      00020800
            , INQUIRY            = LCW.[08:1] #  %                      00020900
            , RESTARTNEEDED      = LCW.[09:1] #  %                      00021000
            , WRITEASTERISK      = LCW.[10:1] #  %                      00021100
            , FILESOK            = LCW.[11:1] #  %                      00021200
            , GOODOBJ            = LCW.[12:1] #  %                      00021300
            , BOJMSG             = LCW.[13:1] #  %                      00021400
            , EOJMSG             = LCW.[14:1] #  %                      00021500
            , RUNNING            = LCW.[15:1] #  %                      00021600
            , COMPILING          = LCW.[16:1] #  %                      00021700
            , LIBMTNCE           = LCW.[17:1] #  %                      00021800
            , ALLMCPMSG          = LCW.[13:5] #  %                      00021900
            , DISCONNECTING      = LCW.[18:1] #  %                      00022000
            , BREAKORWRU         = LCW.[19:1] #  %                      00022100
            % :15                :34          :47:50                    00022200
            , RESTART            = LCW.[20:1] #  %                      00022300
            , SAVEDWHILEINITBUSY = LCW.[21:1] #  %                      00022400
            , DOGLICENSE         = LCW.[22:1] #  %                      00022500
            , LOGGINGON          = LCW.[23:1] #  %                      00022510
            , NODISKMCP          = LCW.[24:1] #  %                      00022520
            , CONTINUEBIT        = LCW.[25:1] #                         00022530
            , MONITORBIT         = LCW.[26:1] #                         00022540
            , NOSTOP             = LCW.[26:1] #  %DONT STOP SCHD. ON ERR00022550
            , SCHEDULINE         = LCW.[28:1] #  %                      00022580
            , SCHEDULINR         = REAL(SCHEDULINE) #  %                00022585
            , NOSAVE             = LCW.[29:1] #  %                      00022590
            , ALLTHINGS          = LCW.[30:18]#  %                      00022600
            , THINGSLAST         = LCW.[30:06]#  %                      00022700
            , THINGSLINK         = LCW.[36:06]#  %                      00022800
            , THINGSTODO         = LCW.[42:6] #  %                      00022900
              ;                                                         00023000
DEFINE        B = BOOLEAN #;                                            00023100
DEFINE        R = REAL    #;                                            00023200
DEFINE        CONCISEBIT     = OPTIONBITS.[1:1]#,                       00023202
              CONCISE        = B(CONCISEBIT)#,                          00023204
              HELPFULBIT     = OPTIONBITS.[2:1]#,                       00023206
              HELPFUL        = B(HELPFULBIT)#,                          00023208
              QUICKLOGBIT    = OPTIONBITS.[3:1]#,                       00023210
              QUICKLOG       = B(QUICKLOGBIT)#,                         00023212
              QUICKBYEBIT    = OPTIONBITS.[4:1]#,                       00023214
              QUICKBYE       = B(QUICKBYEBIT)#,                         00023216
              ALLOWMSGBIT    = OPTIONBITS.[5:1]#,                       00023218
              ALLOWMSG       = B(ALLOWMSGBIT)#;                         00023220
DEFINE        LEFTARROW = "~" #;                                        00023300
DEFINE        QMARK = 12 #;            % 12 = 14 OCT = QUESTION MARK    00023400
DEFINE        WORDS = "W" #,  CHARS = "C" #;                            00023500
DEFINE        INC(INC1)= INC1:= INC1+1 #;                               00023600
DEFINE        UPS = SI := SI + 1 #,                                     00023700
              UPD = DI := DI + 1 #,                                     00023800
              UPT = TALLY := TALLY + 1 #;                               00023900
DEFINE        INCB(INCB1) = INCB1 := BOOLEAN (REAL (INCB1) + 1) #;      00024000
DEFINE        DECR(DECR1) = DECR1 := DECR1 - 1 #;                       00024100
DEFINE        DECB(DECB1) = DECB1 := BOOLEAN (REAL (DECB1) - 1) #;      00024200
DEFINE        MATCH(MATCH1,MATCH2)= IF REAL(BOOLEAN(MATCH1)             00024300
                                       EQV BOOLEAN(MATCH2))             00024400
                                     = REAL(NOT FALSE) THEN #;          00024500
DEFINE     COMPAR(COMPAR1,COMPAR2) =                                    00024510
           REAL(BOOLEAN(COMPAR1) EQV BOOLEAN(COMPAR2))=REAL(NOT FALSE)#;00024520
DEFINE        TEN8 = 100000000 #;  %  TEN TO THE EIGHTH                 00024600
DEFINE        GOERR(GOERR1,GOERR2)=BEGIN ERRSW:=GOERR1;MSGPOINTER:=%    00024700
                GOERR2; WANT:=WAITFOR:=0; IAM:=VERROR; GO EXIT; END#;   00024800
DEFINE SCRAMBLE(SCRAMBLE1,SCRAMBLE2)=(-2|                               00025000
    ((SCRAMBLE1.[1:23]+SCRAMBLE1.[24:24]) MOD MODULUS | MODULUS +       00025100
     (SCRAMBLE2.[1:23]+SCRAMBLE2.[24:24]) MOD MODULUS)+                 00025200
    DISKBOTTOM)#,                                                       00025300
  MODULUS=13#, DIRMOD=169#;                                             00025400
         BEGIN % TO SEGMENT THE INIT CODE.                              00029900
         ARRAY SCANPTR[0:(LLWORDS-SBASE)]; % POINTERS TO WORK ARRAY     00029910
%**********************************************************************%00030000
PROCEDURE     DISKIO (REASON)      " 33:7=REASON NO, 40:8= LOGICAL LINE.00030100
                   "(READFLAG)     " 1 = READ,  0 = WRITE.              00030200
                    "(A)           " DISK I/O AREA.                     00030300
                   "(OFFSET)       " OFFSET INTO I/O AREA.              00030400
                    "(SIZE)        " NO OF WORDS TO READ/WRITE.         00030500
                    "(DISKADDRESS);                                     00030600
        %                                                               00030700
VALUE         REASON, READFLAG, OFFSET, SIZE, DISKADDRESS;              00030800
REAL          REASON, READFLAG, OFFSET, SIZE, DISKADDRESS;              00030900
REAL          A;   % ARRAY[0] + OFFSET = AREA WHERE I/O STARTS.         00031000
      %NOTE%       % IF OFFSET NEQ 0 THEN A+OFFSET-1 GETS DESTROYED.****00031100
              COMMUNICATE (-1);                                         00031200
%**********************************************************************%00031300
PROCEDURE     NEXTEVENT (WAITBIT,CLOCK,A);  % A[0]= 0:1-FLAG BIT = 0.   00031400
              %                             %       1:1-SIGN BIT = 0.   00031500
REAL          WAITBIT, CLOCK;               %       2:2-DO NOT TOUCH.   00031600
ARRAY         A[0];                         %      18:7-REASON NO.      00031700
              COMMUNICATE (-2);             %      25:8-LOGICAL LINE.   00031800
COMMENT       %                                                         00031900
              WHEN THIS PROCEDURE IS CALLED:                            00032000
                   WAITBIT MUST BE 1 IF WE WILL WAIT FOR AN EVENT,      00032100
                                   0 IF WE DO NOT WISH TO WAIT.         00032200
              WHEN THE MCP RETURNS TO THE PROGRAM:                      00032300
                   WAITBIT WILL BE 1 IF AN EVENT IS BEING RETURNED,     00032400
                                   0 IF NO EVENT AND NO WAIT;           00032500
%**********************************************************************%00032600
REAL PROCEDURE GETESPDISK;  COMMUNICATE (-3);                           00032700
%**********************************************************************%00032800
PROCEDURE FORGETESPDISK(ADDR); VALUE ADDR; REAL ADDR; COMMUNICATE(-4);  00032900
%**********************************************************************%00033000
PROCEDURE REQUESTINPUT(BUFF); ARRAY BUFF[0]; COMMUNICATE(-5);           00033100
%**********************************************************************%00033200
REAL PROCEDURE GETUSERDISK (N); VALUE N; REAL N; COMMUNICATE (-6);      00033300
%**********************************************************************%00033400
PROCEDURE FORGETUSERDISK (A,N); VALUE A,N; REAL A,N; COMMUNICATE (-7);  00033500
%**********************************************************************%00033600
PROCEDURE DISKWAIT(IO,AREA,WDS,ADDR);                                   00033700
          VALUE    IO,WDS,ADDR;                                         00033800
          REAL     IO,WDS,ADDR;                                         00033900
          ARRAY    AREA[0];                                             00034000
          COMMUNICATE (-8);                                             00034100
%**********************************************************************%00034200
PROCEDURE CONTROLCARD (R,A); VALUE R; ARRAY A[0]; REAL R;               00034300
                      COMMUNICATE (-9); % R=REASON 33:7, LL 40:8.       00034400
%**********************************************************************%00034500
PROCEDURE     SETUSER (CODE); VALUE CODE; REAL CODE; COMMUNICATE(-10);  00034600
%**********************************************************************%00034700
DEFINE   DISKOUT(DISKOUT1,DISKOUT2)= %                                  00034800
         DISKIO(LL&13[33:41:7],0,WORK[0],0,DISKOUT2,DISKOUT1)#;         00034900
%**********************************************************************%00035000
DEFINE        DISKWRITE(DISKWRITE1) = %                                 00035100
                  DISKIO(LL&13[33:41:7],00,WORK[0],00,30,DISKWRITE1) #; 00035200
%********************************************************************%  00035300
PROCEDURE TWXOUT (R,A,N,T); VALUE R,N,T; REAL R,A,N,T;                  00035400
          IF NOT DISCONNECTING THEN % WRITES ARE O.K.                   00035500
             COMMUNICATE (-12);  % T.CF=# OF LFS,T.FF=1 FOR NO CR       00035600
%********************************************************************%  00035700
PROCEDURE     LITOUT (X,CR);  VALUE X,CR;  REAL X,CR;                   00035800
%****************************************************************       00035900
         BEGIN                                                          00036000
STREAM PROCEDURE BLANK(X);                                              00036100
         BEGIN DI:=X; SI:=X; IF SC = "0" THEN DS :=LIT" "; END;         00036200
              BLANK(X);  TWXOUT (LL, X, 8, CR);                         00036300
         END  LITOUT;                                                   00036400
%******************************************************%                00036500
PROCEDURE  CC15 (R,F,N,L,U,T,X); VALUE R,F,N,L,U,T,X;                   00036600
           REAL R,F,N,L,U,T,X;                                          00036700
            COMMUNICATE (-15);                                          00036800
DEFINE COM15(COM151,COM152,COM153,COM154,COM155,COM156)                 00036820
       =CC15(COM151,COM152,COM153,COM154,COM155,COM156,0)#;             00036840
DEFINE COM157=CC15#;                                                    00036860
%***********************************************************************00036900
DEFINE FIND(FIND1,FIND2,FIND3,FIND4,FIND5)                              00037000
       =COM15(FIND1,FIND2,FIND3,FIND4,FIND5,15)#;                       00037100
%---------------------------------------------------------------------- 00037200
   COMMENT--ON RETURN:                                                  00037300
   EVENTS[1]= PROTECT CODE (SAME AS ALGOL SEARCH)                       00037400
         [2].[1:1]= INTERLOCK                                           00037500
            .[18:15]= HEADER ADDR                                       00037600
            .[36:6]= FILE TYPE                                          00037700
            .[42:6]= OPEN COUNT                                         00037800
         [3]= EOF COUNT                                                 00037900
         [4]= ADDR OF 1ST RECORD;                                       00038000
%******************************************************%                00038100
DEFINE  MAKEFILE =COM15#;                                               00038200
   %  EVENTS[1]= ADDR OF 1ST RECORD                                     00038300
   %  EVENTS[2]= HEADER ADDR                                            00038400
%******************************************************************     00038500
%*******************************************************                00038900
PROCEDURE LOGON (LCW,A);  BOOLEAN LCW;  ARRAY A[0];                     00039000
          BEGIN  LOGGEDON := TRUE;                                      00039100
          LOGONTIME := TIME(1);  % SAVE START TIME.                     00039150
          ESP1 := GETESPDISK;  ESP2 := GETESPDISK;                      00039200
              IF NOT SCHEDULINE THEN % LET SCHED CALL LOGON.            00039290
          COM15(LL&13[33:41:7],2,USERCODE,CHARGE,0,IDLETIME);           00039300
          END  LOGON;                                                   00039400
%******************************************************************     00039500
PROCEDURE LOGOFF(LCW,A);  BOOLEAN LCW;  ARRAY A[0];                     00039600
          BEGIN                                                         00039610
          IF LOGGEDON THEN %ESP TO GIVE BACK.                           00039620
          BEGIN  LOGGEDON := FALSE;                                     00039700
          IF ESP1 NEQ 0 THEN FORGETESPDISK(ESP1);                       00039800
          IF ESP2 NEQ 0 THEN FORGETESPDISK(ESP2);                       00039900
          COM15(LL&13[33:41:7],2,USERCODE,CHARGE.[1:41],1,3600);        00040000
          END IF LOGGEDON;                                              00040050
          END  LOGOFF;                                                  00040100
%***********************************************************************00040200
DEFINE  SCHEDGOTO(SCHEDGOTO1)=                                          00040205
          COM15(LL&13[33:41:7],9,SCHEDGOTO1,0,0,0)#;                    00040210
%***********************************************************************00040215
DEFINE  REQUESTIP(REQUESTIP1)=                                          00040220
          COM15(REQUESTIP1&13[33:41:7],10,0,0,0,0)#;                    00040225
%***********************************************************************00040230
DEFINE  SCHEDSTAT(SCHEDSTAT1)=                                          00040235
          COM15(LL&IAM[33:41:7],11,SCHEDSTAT1,USERCODE,0,0)#;           00040240
%***********************************************************************00040245
DEFINE  SCHEDSTOP(SCHEDSTOP1)=                                          00040250
          COM15(LL&IAM[33:41:7],12,SCHEDSTOP1,USERCODE,0,0)#;           00040255
%***********************************************************************00040260
PROCEDURE DISCONNECTED(LL); VALUE LL; REAL LL; COMMUNICATE (-16);       00040300
 PROCEDURE RUNJOB(L,A,D); VALUE L,D; REAL L,A,D; COMMUNICATE(-19);      00040400
PROCEDURE READTAPE(R,N,F,U);VALUE R,N,F,U; REAL R,N,F,U;                00040500
               COMMUNICATE(-15);                                        00040600
%********************************************************************   00040700
 DEFINE REMOVEFILE(REMOVEFILE1,REMOVEFILE2,REMOVEFILE3)=                00040800
   COM15(REMOVEFILE1,3,REMOVEFILE2,REMOVEFILE3,0,0)#;                   00040900
%***********************************************************************00041000
 DEFINE CHANGEFILE(CHANGEFILE1,CHANGEFILE2,CHANGEFILE3,                 00041100
   CHANGEFILE4,CHANGEFILE5)=COM15(CHANGEFILE1,5,CHANGEFILE2,            00041200
   CHANGEFILE3,CHANGEFILE4,CHANGEFILE5)#;                               00041300
%***********************************************************************00041400
 DEFINE REPLACE(REPLACE1,REPLACE2,REPLACE3,REPLACE4,REPLACE5,REPLACE6)= 00041500
   COM157(REPLACE1,4,REPLACE2,REPLACE3,REPLACE4,REPLACE5,REPLACE6)#;    00041600
%******************************************************                 00041700
DEFINE  SECURE(SECURE1,SECURE2,SECURE3)%                                00041800
            =COM157(LL&14[33:41:7],7,SECURE1,USERCODE,USERCODE,         00041900
               SECURE2,SECURE3)#;                                       00042000
%******************************************************************     00049900
STREAM   PROCEDURE MOVE (N)"NO  OF"(WC)"W=WDS, C=CHR FROM"(A)" TO "(B); 00050000
%**********************************************************************%00050100
VALUE         N, WC;                                                    00050200
         BEGIN                                                          00050300
LOCAL         T;                                                        00050400
              SI~LOC N; SI~SI+6; DI~LOC T; DI~DI+7; DS~CHR;             00050500
              DI~ B; SI~LOC WC; SI~SI+7;                                00050600
              IF SC= "W" THEN                                           00050700
         BEGIN   SI~ A; DS~ N WDS;                                      00050800
                 T(DS~32 WDS; DS~32 WDS);                               00050900
         END  OF WORD MOVER                                             00051000
              ELSE                                                      00051100
         BEGIN   SI~ A; DS~ N CHR;                                      00051200
                 T(DS~32 CHR; DS~32 CHR);                               00051300
         END  OF CHAR MOVER                                             00051400
         END  OF MOVE;                                                  00051500
%*****************************************************************      00051600
STREAM PROCEDURE BLANK(X);                                              00051700
%*****************************************************************      00051800
       BEGIN                                                            00051900
            DI:=X;  SI:=X;                                              00052000
          7(IF SC="0" THEN ELSE JUMP OUT; DS:=LIT" "; UPS;)             00052100
       END  STREAM BLANK;                                               00052200
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%                  00052300
 STREAM PROCEDURE SQUASH(A,C); VALUE C;                                 00052400
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%                  00052500
     BEGIN LABEL E,L;                                                   00052600
       SI:=A; DI:=A;                                                    00052700
       2(36(IF SC = " " THEN                                            00052800
   L:      BEGIN SI:=SI+1;                                              00052900
            IF SC = " " THEN GO TO L;                                   00053000
            SI:=SI-1;                                                   00053100
           END;                                                         00053200
          IF SC = C THEN SI:=SI+19;                                     00053300
          IF SC = LEFTARROW THEN JUMP OUT 2 TO E;                       00053400
          DS:=CHR));                                                    00053500
   E:  2(DS:=36LIT" ");                                                 00053600
     END;                                                               00053700
%**********************************************************************%00053800
INTEGER  STREAM PROCEDURE OCTCONV (DECV);                               00053900
VALUE         DECV;                                                     00054000
         BEGIN SI~LOC DECV; DI~LOC OCTCONV; DS~8 OCT;                   00054100
         END  OF OCTAL CONVERT;                                         00054200
%**********************************************************************%00054300
INTEGER  STREAM PROCEDURE DECCONV (OCTV);                               00054400
VALUE         OCTV;                                                     00054500
         BEGIN SI~LOC OCTV; DI~LOC DECCONV; DS~8 DEC;                   00054600
         END  OF DECIMAL CONVERT;                                       00054700
%***********************************************************************00054800
PROCEDURE BLACKOUT;                                                     00054900
%***********************************************************************00055000
   BEGIN REAL I;                                                        00055100
   STREAM PROCEDURE BO(I,W); VALUE I;                                   00055200
      BEGIN                                                             00055300
      SI:=LOC I; SI:=SI+7; DI:=W; DS:=CHR;                              00055400
       7(SI:=SI-1; DS:=CHR);                                            00055500
      END STREAM PROCEDURE BO;                                          00055600
   FOR I:="M","W","#","$","@" DO                                        00055700
      BEGIN                                                             00055800
      BO(I,WORK);                                                       00055900
      TWXOUT(LL,WORK[0],8,0);                                           00056000
      END;                                                              00056100
   END PROCEDURE BLACKOUT;                                              00056200
%*****************************************************************%     00056300
STREAM PROCEDURE   CLEAR(A,N);   VALUE N;                               00056400
%*****************************************************************%     00056500
         BEGIN                                                          00056600
COMMENT  CLEARS A + N WORDS STARTING AT A + 1;                          00056700
              DI:=A;  DS:=8 LIT "0000";  SI:=A;  DS:=N WDS;             00056800
         END  CLEAR;                                                    00056900
%*****************************************************************      00057000
STREAM PROCEDURE TIMEUSED(W,HMSTX); VALUE HMSTX;                        00057100
%*****************************************************************      00057200
         BEGIN LOCAL SV;                                                00057300
              DI:=W;  SI:=LOC HMSTX;                                    00057400
              DS:=2 CHR;  DS:=6 LIT " HRS, ";                           00057500
              DS:=2 CHR;  DS:=6 LIT " MIN, ";                           00057600
              DS:=2 CHR;  DS:=1 LIT ".";                                00057700
              DS:=1 CHR ;  DS:=5 LIT " SEC.";                           00057800
              DS:=25LIT" ";                                             00057900
              DI:=W; DS:=18FILL; SV:=DI;                                00058000
              SI:=SV; DI:=W; DS:=LIT" "; DS:=25CHR; DS:=LIT LEFTARROW;  00058100
   % VOID                                                               00058200
         END  TIMEUSED;                                                 00058300
%*****************************************************************      00058400
STREAM PROCEDURE TIMEOFDAY(W,HMSTX);  VALUE HMSTX;                      00058500
%*****************************************************************      00058600
         BEGIN                                                          00058700
              DI:=W;  DS:=LIT" ";  SI:=LOC HMSTX;                       00058800
              DS:=2 CHR;  DS:=LIT ":";  DS:=2 CHR;                      00058900
              SI:=SI+3;                                                 00059000
              IF SC="A" THEN DS:=4 LIT" AM." ELSE DS:=4 LIT" PM.";      00059100
              DI:=W; DS:=2FILL;                                         00059200
         END  TIMEOFDAY;                                                00059300
%*****************************************************************      00059400
REAL PROCEDURE TIMECONV(T,B);  VALUE T,B;  REAL T;  BOOLEAN B;          00059500
%*****************************************************************      00059600
         BEGIN                                                          00059700
REAL          AP;                                                       00059800
INTEGER       HRS, MIN, SEC, TSEC;                                      00059900
REAL STREAM PROCEDURE ST(H,M,S,T,X);                                    00060000
       BEGIN                                                            00060100
            DI:=LOC ST; SI:=H; DS:=2 DEC; SI:=M; DS:=2 DEC;             00060200
            SI:=S; DS:=2 DEC; SI:=T; DS:=1 DEC;                         00060300
            SI:=X; SI:=SI+7; DS:=CHR;                                   00060400
       END  STREAM ST;                                                  00060500
              HRS := T DIV 216000;                                      00060600
              MIN :=(T DIV   3600) MOD 60;                              00060700
              SEC :=(T DIV     60) MOD 60;                              00060800
              TSEC:=(T DIV      6) MOD 10;                              00060900
              IF HRS GTR 11 THEN AP:= "P" ELSE AP:= "A";                00061000
              IF HRS GTR 12 THEN HRS:=HRS-12;                           00061100
              IF B THEN IF HRS LSS 01 THEN HRS:= 12;                    00061200
              TIMECONV:=ST(HRS,MIN,SEC,TSEC,AP);                        00061300
         END  TIMECONV;                                                 00061400
%**********************************************************************%00061800
REAL STREAM PROCEDURE  MAKEFN (FT, LL);                                 00061900
%*****************************************************************      00062000
    VALUE     LL, FT;                                                   00062100
         BEGIN                                                          00062200
              SI := LOC FT;  SI := SI + 5;                              00062300
              DI := LOC MAKEFN; DS := 3 CHR;                            00062400
              SI := LOC LL;                                             00062500
              DS := 3 DEC;                                              00062600
              DS := 2 LIT "  ";                                         00062700
         END  MAKEAFN;                                                  00062800
%****************************************************%                  00062900
PROCEDURE   CHKPT (A);  ARRAY A[0];                                     00063000
%***************************************************%                   00063100
  BEGIN                                                                 00063200
   RLCW := REAL(LCW); % SAVE TOGGLES IN STACK                           00063210
   MOVE(40,WORDS,A[TBASE],WORK[10|TPREC]);                              00063300
   DISKOUT(TPDKADR,10|TPREC+40);                                        00063400
  END  CHKPT;                                                           00063500
%*****************************************************                  00063600
PROCEDURE  CANCELCKPT(A);  ARRAY A[0];                                  00063700
  BEGIN                                                                 00063800
  RLCW := REAL(LCW); % SAVE TOGGLES IN STACK                            00063810
   TABLEINFO := 0;                                                      00063900
   A[TBASE+10] := TEN8;                                                 00064000
   MOVE(30,WORDS,A[TBASE+10],WORK[0]);                                  00064100
   DISKWRITE(WRKTBLADR);                                                00064200
  END  CANCELCKPT;                                                      00064300
%*****************************************************************      00066900
PROCEDURE     MAKEDATE;                                                 00067000
%*****************************************************************      00067100
         BEGIN                                                          00067200
REAL              MM,DD,YY;                                             00067300
              MM:=TIME(0);  DD:=OCTCONV(MM.[30:18]);                    00067400
              YY:=OCTCONV(MM.[18:12]);                                  00067500
              IF DD GEQ 60 THEN                                         00067600
                 IF YY.[46:2] NEQ 0 THEN                                00067700
                    DD := DD + 1;                                       00067800
              FILL WORK[*] WITH                                         00067900
                   0,31,60,91,121,152,182,213,244,274,305,335,366;      00068000
              YY:=MM.[18:12];  MM:=0;                                   00068100
              DO MM:=MM+1 UNTIL DD LEQ WORK[MM];                        00068200
              DD:=DECCONV (DD-WORK[MM-1]);                              00068300
              MM:=DECCONV (MM);                                         00068400
              DATE:="0/00/00"&MM[1:37:11]&DD[18:36:12]&YY[36:36:12];    00068500
         END  MAKEDATE;                                                 00068600
%********************************************************************%  00068700
REAL STREAM PROCEDURE  FNONLY(W1,W2,F,S); VALUE F,S;                    00068800
%*************************************************************%         00068900
  BEGIN                                                                 00069000
LABEL  SPRED, EXIT;                                                     00069100
   DI := W1;                                                            00069200
   DS := 5 LIT "FILE:";                                                 00069300
   SI := LOC F; UPS;                                                    00069400
   TALLY := 5;                                                          00069500
   CI := CI + S;                                                        00069600
   GO TO SPRED;                                                         00069700
   DS := 6 CHR;                                                         00069800
   TALLY := 11;                                                         00069900
   GO TO EXIT;                                                          00070000
 SPRED:                                                                 00070100
   6(IF SC = ALPHA THEN ELSE JUMP OUT;                                  00070200
       DS := CHR; UPT);                                                 00070300
 EXIT:                                                                  00070400
   DS := 2 LIT " -";  TALLY := TALLY + 2;                               00070500
   FNONLY := TALLY;                                                     00070600
   S := DI;                                                             00070700
   SI := LOC S;                                                         00070800
   DI := W2;                                                            00070900
   DS := WDS;                                                           00071000
  END  OF  FNONLY;                                                      00071100
%********************************************************%              00071200
REAL STREAM PROCEDURE  TYPEONLY (W,T,S); VALUE W,T,S;                   00071300
%***********************************************************%           00071400
  BEGIN                                                                 00071500
LABEL  SPRED, EXIT;                                                     00071600
LOCAL  X;                                                               00071700
   DI :=W;                                                              00071800
   DS:=6 LIT " TYPE:";  TALLY := 10;                                    00071900
   SI := LOC T;                                                         00072000
   UPS;                                                                 00072100
   CI := CI + S;                                                        00072200
   GO TO SPRED;                                                         00072300
   DS := 7 CHR;                                                         00072400
   TALLY := 17;                                                         00072500
   GO TO EXIT;                                                          00072600
 SPRED:                                                                 00072700
   7(IF SC = ALPHA THEN ELSE JUMP OUT;                                  00072800
       DS := CHR; UPT);                                                 00072900
              DS := LIT " ";                                            00073000
 EXIT:                                                                  00073100
   DS := 4 LIT " -- ";                                                  00073200
   TYPEONLY := TALLY;                                                   00073300
  END  OF  TYPEONLY;                                                    00073400
%******************************************************%                00073500
PROCEDURE    GENFILINE (FN, FT); VALUE  FN, FT; REAL FN, FT;            00073600
%**********************************************************%            00073700
  BEGIN                                                                 00073800
REAL  X, D;                                                             00073900
   X := FNONLY (L[0], D, FN, 0);                                        00074000
   X := X + TYPEONLY (D, FT, 0);                                        00074100
   TWXOUT (LL, L[0], X, ..100000);                                      00074200
         END  OF GENFILINE;                                             00074300
%**********************************************************************%00078500
PROCEDURE     ERROR(S,LCW,A);  VALUE S; REAL S; BOOLEAN LCW; ARRAY A[0];00078600
%**********************************************************************%00078700
              FORWARD;                                                  00078800
%*****************************************************************      00078900
REAL PROCEDURE DOGSLOOSE;                                               00079000
%****************************************************************       00079100
         BEGIN                                                          00079200
REAL          LL,T;                                                     00079300
LABEL         COLLECT,EXIT;                                             00079400
              FOR LL:=MAXLINES STEP -1 UNTIL 0 DO                       00079600
              IF T:=DOGHOUSE[LL] NEQ 0 THEN                             00079700
                 IF CTRANDBASE[ROWINUSE] NEQ T THEN                     00079800
                    IF NO DOGLICENSE THEN GO TO COLLECT;                00079900
              DOGSAROUND := DOGCATCHERS GTR 0;                          00080000
              WECANUSEDATA := NO DOGSAROUND;                            00080100
              IF WECANUSEDATA THEN % O.K. TO RETURN DISK.               00080200
         BEGIN  %  FIXUP TANK/DISK HEADER.                              00080300
              DISKWAIT(1,WORK[*],30,TANKFILE);                          00080400
              CLEAR(WORK[10],15);                                       00080500
              WORK[ROWINUSE+10]:=CTRANDBASE[ROWINUSE];                  00080600
              WORK[6] := ROWINUSE & (ROWCOUNT:=1) [18:33:15];           00080700
              DISKWAIT(0,WORK[*],30,TANKFILE);                          00080800
              FOR T:=0 STEP 1 UNTIL 15 DO                               00080900
         BEGIN  %  DONT GIVE AWAY THE CURRENT ROW.                      00081000
              IF T NEQ ROWINUSE AND CTRANDBASE[T] NEQ 0 THEN            00081100
         BEGIN  %  GIVE BACK UNUSED DISK.                               00081200
              FORGETUSERDISK(CTRANDBASE[T],TANKSIZE);                   00081300
              CTRANDBASE[T] := 0;                                       00081400
         END  GIVEBACK;                                                 00081500
         END  FOR LOOP;                                                 00081600
         END  FIXUP TANK HEADER;                                        00081700
              GO EXIT;                                                  00081800
    COLLECT:                                                            00081900
              DOGCATCHERS := DOGCATCHERS+1;                             00082000
              DOGLICENSE  := TRUE;                                      00082100
              DOGSLOOSE   := LL;                                        00082200
    EXIT:END  DOGSLOOSE;                                                00082300
%***********************************************************************00082400
REAL STREAM PROCEDURE FINDALETTER(WORD,TABLE,TABLESIZE);                00082500
%***********************************************************************00082600
VALUE WORD,TABLESIZE;                                                   00082700
% ROUTINE COMPARES "WORD" WITH ENTRIES IN ARRAY "TABLE"                 00082800
% 1ST CHR.OF EACH "TABLE" ENTRY=NO.OF CHRS.IN WORD ([1:1]=1 IF COMPILER)00082900
% "TABLE" SHOULD BE "TABLE[1]" TO USE RETURNED VALUE AS INDEX TO "TABLE"00083000
   BEGIN LOCAL SV,T,SGN; LABEL FOUND,EXIT;;                             00083100
   SI:=TABLE; SV:=SI; TALLY:=1;                                         00083200
   TABLESIZE(DI:=LOC SGN; DS:=ZON; % SAVE ZONE BITS                     00083300
   SI:=SV; SI:=SI+1; DI:=LOC WORD; DI:=DI+1; % POINT TO 1ST CHRS.       00083400
   IF SC = DC THEN JUMP OUT TO FOUND;                                   00083500
   TALLY:=TALLY+1; SI:=SV; SI:=SI+8; SV:=SI);                           00083600
   TALLY:=0; FINDALETTER:=TALLY; GO TO EXIT; % IF NOT FOUND             00083700
FOUND:                                                                  00083800
   T:=TALLY; SI:=LOC T; DI:=LOC FINDALETTER; DS:=WDS;                   00083900
   SI:=LOC SGN; DI:=LOC FINDALETTER; DS:=ZON; % TRANSFER SIGN           00084000
EXIT:                                                                   00084100
   END STREAM PROCEDURE FINDAWORD;                                      00084200
%***********************************************************************00084300
REAL STREAM PROCEDURE FINDAWORD(WORD,TABLE,TABLESIZE);                  00084400
%***********************************************************************00084500
VALUE WORD,TABLESIZE;                                                   00084600
% ROUTINE COMPARES "WORD" WITH ENTRIES IN ARRAY "TABLE"                 00084700
% 1ST CHR.OF EACH "TABLE" ENTRY=NO.OF CHRS.IN WORD ([1:1]=1 IF COMPILER)00084800
% 1ST CHR. OF "WORD" = NO. OF CHRS. INPUT BY USER ( MAX. = 7 )          00084900
% "TABLE" SHOULD BE "TABLE[1]" TO USE RETURNED VALUE AS INDEX TO "TABLE"00085000
   BEGIN LOCAL SV,WRDSIZ,TBLSIZ,SGN; LABEL FOUND,EXIT;;                 00085100
   SI:=LOC WORD; DI:=LOC WRDSIZ; DI:=DI+7; DS:=CHR; % WORD SIZE         00085200
   SI:=TABLE; SV:=SI; TALLY:=1;                                         00085300
   TABLESIZE(DI:=LOC SGN; DS:=ZON; % SAVE ZONE BITS                     00085400
   SI:=SV; DI:=LOC TBLSIZ; DI:=DI+7; DS:=NUM; % LENGTH OF TABLE ENTRY   00085500
   SI:=LOC WRDSIZ; SI:=SI+7; DI:=LOC TBLSIZ; DI:=DI+7;                  00085600
   IF SC GEQ DC THEN % WRDSIZ AT LEAST AS LARGE AS TBLSIZ               00085700
      BEGIN                                                             00085800
      SI:=SV; SI:=SI+1; DI:=LOC WORD; DI:=DI+1; % POINT TO ACTUAL CHRS. 00085900
      IF WRDSIZ SC = DC THEN JUMP OUT TO FOUND;                         00086000
      END;                                                              00086100
   TALLY:=TALLY+1; SI:=SV; SI:=SI+8; SV:=SI);                           00086200
   TALLY:=0; FINDAWORD:=TALLY; GO TO EXIT; % IF NOT FOUND               00086300
FOUND:                                                                  00086400
   WRDSIZ:=TALLY; SI:=LOC WRDSIZ; DI:=LOC FINDAWORD; DS:=WDS;           00086500
   SI:=LOC SGN; DI:=LOC FINDAWORD; DS:=ZON; % TRANSFER SIGN             00086600
EXIT:                                                                   00086700
   END STREAM PROCEDURE FINDAWORD;                                      00086800
%***********************************************************************00086900
STREAM PROCEDURE SCANPSWD(W,S,EADRS); VALUE EADRS;                      00086950
%***********************************************************************00087000
   BEGIN LOCAL SV,DV;                                                   00087050
   SI:=W;                                                               00087100
   DI:=S; DS:=8LIT"0       "; DI:=DI-7;                                 00087150
   7(IF SC = LEFTARROW THEN                                             00087200
      BEGIN                                                             00087250
      SV:=SI; SI:=LOC SV; SI:=SI+5;                                     00087300
      DV:=DI; DI:=LOC EADRS; DI:=DI+5;                                  00087350
      IF 3SC=DC THEN JUMP OUT;                                          00087400
      SI:=SV; DI:=DV;                                                   00087450
      END;                                                              00087500
   IF SC="," THEN JUMP OUT; DS:=CHR);                                   00087550
   END STREAM PROCEDURE SCANPSWD;                                       00087600
%***********************************************************************00087602
PROCEDURE ENTERESP(LL,ADRS,A);VALUE LL,ADRS; REAL LL,ADRS; ARRAY A[0];  00087603
%***********************************************************************00087604
% THIS PROCEDURE IS USED TO KEEP TRACK OF ESP DISK SEGMENTS ALLOCATED   00087605
% FOR LABEL EQUATION USEAGE. EACH LOGICAL LINE HAS A VARIABLE CALLED    00087606
% "ESPWORD" WHICH IS COMPRISED OF:                                      00087607
%          ESPFLAG = ESPWORD.[1:1] ( ON WHEN ESPTABLE IS FULL )         00087608
%          ESPCOUNT= ESPWORD.[2:8] ( NUMBER OF ENTRIES IN ESPTABLE )    00087609
%          FIRSTESP= ESPWORD.[20:28] (1ST ESP ADDRESS FOR LBL. EQN. )   00087610
% EACH ENTRY IN "ESPTABLE" IS COMPRISED OF:                             00087611
%          ESPTABLE[I].[1:1] (MARKS THIS WORD IN USE )                  00087612
%          ESPTABLE[I].[2:8] (LOGICAL LINE USING THIS WORD )            00087613
%          ESPTABLE[I].[20:28] (ADDRESS OF ESP SEGMENT IN USE )         00087614
% "ESPTABLE" IS DECLARED [0:ESPTABLESIZE]                               00087615
% WHEN A POSITIVE VALUE FOR LL IS PASSED TO THIS PROCEDURE, AN          00087616
% ENTRY IS PLACED IN ESPTABLE FOR THAT LINE AND ESPCOUNT IS INCREMENTED.00087617
% ESPFLAG IS TURNED ON IN THE EVENT THAT THE ESPTABLE IS COMPLETELY     00087618
% FILLED. WHEN A NEGATIVE VALUE FOR LL IS PASSED TO THIS PROCEDURE,     00087619
% AND A NON-NEGATIVE VALUE FOR ADRS IS PASSED, THE ENTRIES FOR THE      00087620
% SPECIFIED LINE ARE REMOVED FROM THE TABLE, AND ESPWORD IS RESET       00087621
% TO ZERO. WHEN BOTH LL AND ADRS ARE NEGATIVE, THE ENTRIES FOR THE      00087622
% SPECIFIED LINE ARE REMOVED FROM THE TABLE AND THE ESP SEGEMENTS       00087623
% ADDRESSED BY EACH TABLE ENTRY ARE RETURNED TO THE SYSTEM. ESPWORD     00087624
% IS ALSO RE-SET TO ZERO.                                               00087625
   BEGIN                                                                00087626
   BOOLEAN DELINK,FORGET; REAL I,WORD; LABEL EXIT;                      00087628
   DELINK := BOOLEAN(LL.[1:1]); LL:=ABS(LL);                            00087630
   FORGET := BOOLEAN(ADRS.[1:1]); ADRS:=ABS(ADRS);                      00087632
   FOR I:=0 STEP 1 UNTIL ESPTABLESIZE DO                                00087634
   IF DELINK THEN                                                       00087636
      BEGIN                                                             00087638
      IF BOOLEAN((WORD:=ESPTABLE[I]).[1:1]) THEN % VALID ENTRY          00087640
      IF WORD.[2:8]=LL THEN % ENTRY FOR THIS LINE                       00087642
         BEGIN                                                          00087644
         ESPCOUNT := ESPCOUNT - 1;                                      00087646
         IF FORGET THEN                                                 00087648
         IF (WORD:=WORD.[20:28]) NEQ 0 THEN FORGETESPDISK(WORD);        00087650
         ESPTABLE[I]:=0;                                                00087652
         IF ESPCOUNT = 0 THEN % NO MORE ENTRIES FOR THIS LINE           00087654
            BEGIN                                                       00087656
            ESPWORD := 0; GO TO EXIT;                                   00087658
            END;                                                        00087660
         END; % IF ENTRY FOR THIS LINE                                  00087662
      END % IF DELINK                                                   00087664
   ELSE                                                                 00087666
      BEGIN % ENTERING NEW VALUE IN TABLE                               00087668
      IF NOT BOOLEAN(ESPTABLE[I].[1:1]) THEN % AVAILABLE WORD           00087670
         BEGIN                                                          00087672
         ESPTABLE[I] := -ADRS & LL[2:40:8];                             00087674
         ESPCOUNT := ESPCOUNT + 1;                                      00087676
         GO TO EXIT;                                                    00087678
         END; % IF AVAILABLE WORD                                       00087680
      END; % IF ENTERING NEW VALUE                                      00087682
   ESPFLAG := 1; % NO ROOM IN TABLES                                    00087684
EXIT:                                                                   00087686
   END PROCEDURE ENTERESP;                                              00087688
%***********************************************************************00087700
REAL STREAM PROCEDURE SCAN(PTR,STACKWORD,COMPVALUE,WORKENDADRS,PNTR);   00087800
%***********************************************************************00087900
VALUE COMPVALUE,WORKENDADRS;                                            00088000
   BEGIN LOCAL SV,DV,T; LABEL BLNKS,EXIT;                               00088100
   % PUTS A TOKEN INTO STACKWORD                                        00088200
   % RETURNS 1,2,3 OR 5 FOR ALPHANUMERIC,NUMERIC,SPECIAL,END OF RECORD  00088300
   DI:=WORKENDADRS; DS:=LIT LEFTARROW; % MARK END OF RECORD             00088400
   SI:=PTR; SI:=SI+5; SI:=SC; % STARTING ADDRESS FOR SCAN               00088500
% VOID                                                                  00088600
BLNKS:                                                                  00088700
   IF SC=" " THEN % IGNORE ALL BLANKS                                   00088800
      BEGIN                                                             00088900
      SI:=SI+1; GO TO BLNKS;                                            00089000
      END;                                                              00089100
   IF SC="," THEN % IGNORE ALL COMMAS                                   00089200
      BEGIN                                                             00089300
      SI:=SI+1; GO TO BLNKS;                                            00089400
      END;                                                              00089500
   SV:=SI; SI:=LOC SV; DI:=PNTR; DS:=WDS; SI:=SV; DI:=STACKWORD;        00089510
   IF SC = LEFTARROW THEN % CHECK FOR END OF RECORD                     00089600
      BEGIN                                                             00089700
      SV:=SI;     SI:=LOC SV;      SI:=SI+5;                            00089800
      DV:=DI; DI:=LOC WORKENDADRS; DI:=DI+5;                            00089900
      IF 3 SC = DC THEN % END OF RECORD                                 00090000
         BEGIN                                                          00090100
         DI:=DV; DS:=7LIT"8000000"; DS:=LIT LEFTARROW;                  00090200
         TALLY:=5; SCAN := TALLY; SI:=SV; GO TO EXIT;                   00090300
         END; %                                                         00090400
      SI:=SV; DI:=DV;                                                   00090500
      END; % IF LEFTARROW                                               00090600
   IF SC=ALPHA THEN IF SC LEQ "9" THEN % LETTER OR DIGIT                00090700
      BEGIN                                                             00090800
      IF SC GEQ "0" THEN IF SC LEQ "9" THEN;                            00090900
      IF TOGGLE THEN % DIGIT STRING                                     00091000
         BEGIN                                                          00091100
         TALLY:=2; SCAN := TALLY; % CODE FOR DIGIT STRING               00091200
         TALLY:=1; SI:=SI+1;                                            00091300
         7(IF SC GEQ "0" THEN IF SC LEQ "9" THEN;                       00091400
         IF TOGGLE THEN ELSE JUMP OUT;                                  00091500
         SI:=SI+1; TALLY:=TALLY+1);                                     00091600
         T:=TALLY; SI:=SI-T; DS:= T OCT; GO TO EXIT;                    00091700
         END; % IF DIGIT STRING                                         00091800
      TALLY:=1; SCAN := TALLY; % CODE FOR ALPHANUMERIC STRING           00091900
      DV:=DI; DS:=8LIT"0       "; DI:=DI-7; TALLY:=0;                   00092000
      7(IF SC = ALPHA THEN ELSE JUMP OUT;                               00092100
      IF SC GTR COMPVALUE THEN JUMP OUT;                                00092200
      DS:=CHR; TALLY:=TALLY+1);                                         00092300
      T:=TALLY; SV:=SI; SI:=LOC T; SI:=SI+7; DI:=DV; DS:=CHR; % LENGTH  00092400
      SI:=SV;                                                           00092500
      63(IF SC=ALPHA THEN ELSE JUMP OUT;                                00092600
      IF SC GTR COMPVALUE THEN JUMP OUT; SI:=SI+1);                     00092700
      GO TO EXIT;                                                       00092800
      END; % IF ALPHA                                                   00092900
   TALLY:=3; SCAN := TALLY; % CODE FOR SPECIAL CHARACTER                00093000
   DS:=7LIT"8000000"; DS:=CHR; % RIGHT JUSTIFIED                        00093100
EXIT:                                                                   00093200
   SV:=SI; SI:=LOC SV; DI:=PTR; DS:=WDS; % NEXT ADDRESS                 00093300
   END STREAM PROCEDURE SCAN;                                           00093400
%***********************************************************************00093500
BOOLEAN STREAM PROCEDURE YOUFINDAVERB(STACK, VERBLOC, NUMOFVERBS);      00093600
%***********************************************************************00093700
VALUE                     NUMOFVERBS;                                   00093800
   BEGIN                                                                00093900
   LABEL         FOUND, AWAY;                                           00094000
   LOCAL         T, SAVD;                                               00094100
   DI := VERBLOC; SI := STACK;                                          00094200
   NUMOFVERBS(IF SC GEQ DC THEN                                         00094300
      BEGIN SAVD := DI; SI:=SI-1; DI := LOC T; DI := DI + 7;            00094400
      DS := CHR; DI := SAVD;                                            00094500
      IF T SC = DC THEN JUMP OUT TO FOUND;                              00094600
      DI := SAVD;                                                       00094700
      END;                                                              00094800
   SI := STACK;                                                         00094900
   DI := DI + 15);                                                      00095000
   GO AWAY;                                                             00095100
FOUND: SI := SAVD; SI := SI + 7; DI := STACK;                           00095200
   DS := WDS; TALLY := 1;   % REPLACE VERB WITH DEFINITION              00095300
   YOUFINDAVERB := TALLY;   % AND SET PROC TO TRUE                      00095400
AWAY: END OF YOUFINDAVERB;                                              00095500
%***********************************************************************00095600
REAL STREAM PROCEDURE ADDRESS(W);                                       00095700
   BEGIN SI:=W; ADDRESS:=SI; END;                                       00095800
%***********************************************************************00095900
STREAM PROCEDURE STICK(P,A,ENDADRS); VALUE P,ENDADRS;                   00096000
%***********************************************************************00096100
   BEGIN LOCAL SV,DV; LABEL EXIT;                                       00096200
   % TRANSFERS SS MESSAGE FROM WORK ARRAY                               00096300
   DI:=A; DS:=8LIT" "; SI:=A; DS:=14 WDS; % BLANK 15 WORDS              00096400
   DI:=ENDADRS; % INSERT RECORD MARKER DS:=LIT LEFTARROW;               00096500
   SI:=P; DI:=A;                                                        00096600
   2(60(IF SC=LEFTARROW THEN                                            00096700
      BEGIN                                                             00096800
      SV:=SI; SI:=LOC SV; SI:=SI+5;                                     00096900
      DV:=DI; DI:=LOC ENDADRS; DI:=DI+5;                                00097000
      IF 3SC=DC THEN JUMP OUT 2 TO EXIT; % END OF RECORD                00097100
      SI:=SV; DI:=DV;                                                   00097200
      END;                                                              00097300
   DS:=CHR));                                                           00097400
EXIT:                                                                   00097500
   END STREAM PROCEDURE STICK;                                          00097600
%***********************************************************************00097610
BOOLEAN STREAM PROCEDURE FIXERROR(SADRS,EADRS); VALUE SADRS,EADRS;      00097612
%***********************************************************************00097614
% SADRS IS STARTING ADDRESS OF USERS INPUT RECORD                       00097616
% EADRS IS ADDRESS OF END OF USERS INPUT                                00097618
% ROUTINE CHECKS SYNTAX OF "FIX" REQUESTS                               00097620
   BEGIN LOCAL SV,D; LABEL EXIT;                                        00097622
   SI:=SADRS; TALLY:=1;                                                 00097624
   20(IF SC LSS "0" THEN SI:=SI+1 ELSE JUMP OUT); % SCAN TO DIGIT       00097626
   IF TOGGLE THEN GO EXIT; % NO DIGITS                                  00097628
   8(IF SC LSS "0" THEN JUMP OUT;IF SC GTR "9" THEN JUMP OUT; SI:=SI+1);00097630
   20(IF SC=" " THEN SI:=SI+1 ELSE JUMP OUT); % SCAN TO CHR.            00097632
   IF TOGGLE THEN GO TO EXIT; % EMPTY FIELD                             00097634
   DI:=LOC D; DI:=DI+7; DS:=CHR; % SAVE DELIMITER                       00097636
   IF SC=D THEN GO TO EXIT; % NO STRING                                 00097638
   IF SC = LEFTARROW THEN                                               00097640
      BEGIN                                                             00097642
      SV:=SI; SI:=LOC SV; SI:=SI+5; DI:=LOC EADRS; DI:=DI+5;            00097644
      IF 3SC=DC THEN % LEFT ARROW REPLACEMENT                           00097646
         BEGIN TALLY:=0; GO EXIT; END ELSE SI:=SV;                      00097648
      END; % IF LEFTARROW                                               00097650
   63(IF SC=LEFTARROW THEN % CHECK FOR END OF RECORD                    00097652
      BEGIN                                                             00097654
      SV:=SI; SI:=LOC SV; SI:=SI+5; DI:=LOC EADRS; DI:=DI+5;            00097656
      IF 3SC=DC THEN JUMP OUT TO EXIT ELSE SI:=SV;                      00097658
      END;                                                              00097660
   IF SC NEQ D THEN SI:=SI+1 ELSE JUMP OUT);                            00097662
   IF TOGGLE THEN GO EXIT; % MISSING 2ND DELIMITER                      00097664
   TALLY:=0;                                                            00097666
EXIT:                                                                   00097668
   FIXERROR:=TALLY;                                                     00097670
   END STREAM PROCEDURE FIXERROR;                                       00097672
%***********************************************************************00097700
PROCEDURE SCANNER(STRTADRS,A,LCW,ENDADRS); VALUE STRTADRS,ENDADRS;      00097800
%***********************************************************************00097900
REAL STRTADRS,ENDADRS; BOOLEAN LCW; ARRAY A[0];                         00098000
   BEGIN                                                                00098100
   % MAIN CANDE SCANNER                                                 00098200
   % RETURNS TYPE OF INPUT IN A[BASE].[3:3] -                           00098300
   %   0 = COMMENT ( INPUT STARTS WITH QUOTE )                          00098400
   %   1 = VERB    ( INPUT STARTS WITH A VERB )                         00098500
   %   2 = NUMBER  ( INPUT STARTS WITH A NUMBER )                       00098600
   %   3 = SPECIAL ( INPUT STARTS WITH A SPECIAL CHARACTER )            00098700
   %   4 = SSMSG   ( INPUT IS AN SS MESSAGE )                           00098800
   %   5 = NULL INPUT                                                   00098900
   % WHEN INPUT TYPE = 2 ( NUMBER ) -                                   00099000
   %   A[BASE+1] = OCTAL NUMBER                                         00099100
   %   A[BASE+2] =                                                      00099200
   %      0 = MORE INFORMATION FOLLOWS NUMBER                           00099300
   %      1 = NO INFORMATION FOLLOWS NUMBER ( DELETION )                00099400
   %      3 = A "FIX" REQUEST                                           00099500
   % RETURNS NUMBER OF TOKENS IN STACK IN A[BASE].[33:15]               00099600
   % RETURNS NUMBER OF "VERBS" FOUND IN A[BASE].[18:15]                 00099700
   % FOR EACH VERB -                                                    00099800
   %   A [VERBLOCATION ].[33:15] = NUMERIC CODE ASSOCIATED WITH VERB    00099900
   %   A [VERBLOCATION ].[18:15] = NUMBER OF PARAMETERS FOR THE VERB    00100000
   REAL I, K, P, S, MS, TYPE, VERBS, PLUSORMINUS;                       00100100
   BOOLEAN ERRFLG,PLUS;                                                 00100200
   LABEL NULL,STARTCOM,LOOKFERPARAMS,TOOLONG,SNEAKIN,GENSEQ,            00100300
   FIXCHECK,SETERROR,FINISH,EXIT;                                       00100400
   DEFINE ERRV = ..3000000000000036#;                                   00100500
   DEFINE SEQV = ..3000060000000065#;                                   00100600
   MS := S := BASE + 1; % INITIALIZE STACK INDICES                      00100700
   P := STRTADRS; % ADDRESS OF WORK[1];                                 00100800
NULL:                                                                   00100900
   IF TYPE:=SCAN(P,A[S],"Z",ENDADRS,SCANPTR[S-SBASE])=5 THEN % EOR      00101000
      BEGIN                                                             00101100
      A[BASE] := 0 & 5[3:45:3]; % NULL RECORD                           00101200
      GO TO EXIT;                                                       00101300
      END;                                                              00101400
   IF TYPE=2 THEN % INPUT STARTS WITH NUMBER                            00101500
      BEGIN % CHECK FOR DELETION (NUMBER FOLLOWED BY END OF RECORD)     00101600
      K:=P; A[S:=S+1] :=                                                00101700
      IF SCAN(P,I,"Z",ENDADRS,SCANPTR[S-SBASE])=5 AND K=P THEN 1 ELSE 0;00101710
      A[BASE] := 2 & 2[3:45:3]; % OCTAL NUMBER CODE AND STACK SIZE      00101800
      GO TO EXIT;                                                       00101900
      END; % IF RECORD STARTS WITH NUMBER                               00102000
   %....................................................................00102100
   IF TYPE=1 THEN % ALPHANUMERIC TOKEN                                  00102200
      BEGIN                                                             00102300
STARTCOM:                                                               00102400
      PLUSORMINUS:=0;                                                   00102500
      IF YOUFINDAVERB(A[S],VERBTABLE[0],NUMOFVERBS) THEN % C&E VERB     00102600
         BEGIN                                                          00102700
         MS := S; % SAVE STACK LOCATION OF VERB                         00102800
         VERBS := VERBS + 1; % INCREMENT VERB COUNT                     00102900
         IF A[S].[33:15]=VSSMSG THEN % SS MESSAGE                       00103000
            BEGIN                                                       00103100
            IF VERBS NEQ 1 THEN GO TO SETERROR; % MUST BE FIRST VERB    00103200
            IF SCAN(P,A[S:=S+1],"9",ENDADRS,SCANPTR[S-SBASE]) GTR 2 THEN00103300
            GO TO SETERROR;                                             00103310
            STICK(P,L,ENDADRS); % TRANSFER MESSAGE TO ARRAY "L"         00103400
            A[BASE] := 0 & 4[3:45:3]; % CODE FOR SSMSG                  00103500
            GO TO EXIT;                                                 00103600
            END; % IF SS MESSAGE                                        00103700
         IF BOOLEAN(A[S].[8:1]) THEN % "SPECIAL" VERB - STOP SCANNING   00103800
         IF VERBS NEQ 1 THEN % "SPECIAL" VERBS NOT ALLOWED AFTER ";"    00103900
            BEGIN                                                       00103910
            A[S]:=VERBTABLE[A[S].[9:9]]; GO TO SETERROR;                00103920
            END ELSE GO TO FINISH;                                      00103930
LOOKFERPARAMS:                                                          00104000
         IF (S:=S+1) GEQ PREVRCW THEN % DONT CLOBBER STACK              00104100
            BEGIN                                                       00104200
TOOLONG:    ERRSW := "TOOMUCH";                                         00104300
            MSGPTR := 30;                                               00104400
            GO TO SETERROR;                                             00104500
            END;                                                        00104600
         IF TYPE:=SCAN(P,A[S],"9",ENDADRS,SCANPTR[S-SBASE])=5 THEN      00104700
         GO TO FINISH;                                                  00104710
         IF TYPE=3 THEN % PARAMETER IS SPECIAL CHARACTER                00104800
            BEGIN                                                       00104900
            PLUSORMINUS := 0;                                           00105000
            IF A[S] = ";" THEN % END OF LOGICAL REQUEST                 00105100
               BEGIN                                                    00105200
SNEAKIN:       IF TYPE:=SCAN(P,A[S],"Z",ENDADRS,SCANPTR[S-SBASE])=5 THEN00105300
               GO TO SETERROR;                                          00105310
               IF TYPE=1 THEN % ALPHANUMERIC TOKEN FOLLOWS ";"          00105400
                  BEGIN                                                 00105500
                  A[MS] := A[MS] & (S-MS-1)[18:33:15]; % PARAMETER COUNT00105600
                  MS := S; % NEXT VERB LOCATION                         00105700
                  GO TO STARTCOM;                                       00105800
                  END; % IF ALPHANUMERIC STRING FOLLOWS ";"             00105900
               IF TYPE=3 THEN % SPECIAL CHARACTER FOLLOWS ";"           00106000
                  BEGIN                                                 00106100
                  IF A[S]=";" THEN GO TO SNEAKIN; % REDUNDANT           00106200
                  IF A[S]=""" THEN GO TO FINISH; % COMMENT AFTER ";"    00106300
                  IF A[S]="+" THEN GO TO GENSEQ; % RESEQ SHORTHAND      00106400
                  END; % IF SPECIAL CHARACTER FOLLOWS ";"               00106500
               GO TO SETERROR; % NOTHING ELSE ALLOWED AFTER ";"         00106600
               END; % IF PARAMETER = ";"                                00106700
            IF A[S]="-" THEN PLUSORMINUS:=2 ELSE                        00106800
            IF A[S]="+" THEN PLUSORMINUS:=3;                            00106850
            GO LOOKFERPARAMS; % SAVE ALL SPECIAL CHARACTERS             00106900
            END; % IF PARAM IS A SPECIAL CHARACTER                      00106950
         IF TYPE=1 THEN % ALPHANUMERIC PARAMETER                        00107000
            BEGIN                                                       00107050
            PLUSORMINUS:=0;                                             00107100
            GO LOOKFERPARAMS;                                           00107150
            END; % IF ALPHANUMERIC PARAMETER                            00107200
         % TYPE = 2 , NUMERIC PARAMETER                                 00107250
         IF PLUSORMINUS GTR 0 THEN % SIGNED NUMBER                      00107300
            BEGIN                                                       00107350
            A[S] := A[S] & PLUSORMINUS[1:46:2]; % SIGNED NUMBER         00107400
            IF NOT PLUS THEN A[S:=S-1] := A[S+1]; PLUS := FALSE;        00107450
            END;                                                        00107500
         PLUSORMINUS := 0;                                              00107550
         GO LOOKFERPARAMS;                                              00107600
         END; % IF A CANDE VERB                                         00107650
      MATCH(A[S].[6:42],"FIX    ") GO TO FIXCHECK;                      00107700
      GO TO SETERROR; % ALPHA STRING NOT A VERB OR A "FIX"              00107750
      END; % IF TOKEN IS ALPHANUMERIC                                   00107800
   IF TYPE=3 THEN % TOKEN IS A SPECIAL CHARACTER                        00107850
      BEGIN                                                             00107900
      IF A[S]="+" THEN % SEQUENCE REQUEST                               00107950
         BEGIN                                                          00108000
GENSEQ:  PLUSORMINUS := 3; % NEXT PARAM WILL BE INCREMENT               00108050
         MS := S; % MARK STACK LOCATION OF "SEQ" VERB                   00108100
         VERBS := VERBS + 1; PLUS := TRUE;                              00108150
         A[S] := SEQV; % REPLACE "+" WITH SEQUENCE VERB CODE            00108200
         GO LOOKFERPARAMS;                                              00108250
         END; % IF; "+"                                                 00108300
      IF A[S]="*" THEN % A "FIX" REQUEST                                00108350
         BEGIN                                                          00108400
FIXCHECK:                                                               00108450
         IF TYPE:=SCAN(P,A[S],"9",ENDADRS,SCANPTR[S-SBASE]) NEQ 2 THEN  00108500
         GO TO SETERROR;                                                00108510
         IF (S:=S+1) GEQ PREVRCW THEN GO TO TOOLONG;                    00108550
         A[S] := 3; % DENOTES A "FIX"                                   00108600
         A[BASE] := 2 & 2[3:45:3]; % "FIX" CODE AND PARAM. COUNT        00108650
         GO TO EXIT;                                                    00108700
         END; % IF "FIX"                                                00108750
      IF A[S]=";" THEN GO TO NULL; % INPUT STARTS WITH ";"              00108800
      IF A[S]=""" THEN % COMMENT                                        00108850
         BEGIN                                                          00108900
         A[BASE] := 0;                                                  00108950
         GO TO EXIT;                                                    00109000
         END;                                                           00109050
SETERROR:                                                               00109100
      A[MS+1] := A[S]; % PLACE ERRONEOUS TOKEN IN 1ST PARAM. POSITION   00109150
      A[MS] := ERRV; % CALL ON ERROR ROUTINE                            00109200
      VERBS := VERBS + 1;                                               00109250
      ERRFLG := TRUE;                                                   00109300
      S := MS + 2; % ADJUST FOR CORRECT PARAMETER COUNT                 00109350
      END; % IF TOKEN IS A SPECIAL CHARACTER                            00109400
FINISH:                                                                 00109450
   A[MS] := A[MS] & (S-MS-1)[18:33:15]; % PARAMETER COUNT               00109500
   A[BASE] := (S-BASE-1) & VERBS[18:33:15] &                            00109550
   REAL(ERRFLG)[17:47:1] & 1[3:45:3];                                   00109600
EXIT:                                                                   00109650
   END PROCEDURE SCANNER;                                               00109700
BOOLEAN STREAM PROCEDURE CHECKBIT(N,LST); VALUE N;                      00109800
BEGIN SI:=LST; SKIP SB; SKIP N SB; IF SB THEN TALLY:=1;                 00109900
CHECKBIT:=TALLY; END STREAM PROCEDURE CHECKBIT;                         00110000
%*************************************************************          00111000
%**********************************************************************%00200000
REAL PROCEDURE  CHANGEWHICH(A);  ARRAY A[0];                            00200100
  BEGIN                                                                 00200200
REAL  T, S, WHICH;                                                      00200300
LABEL  BADPARAM,GETYPE,BADTYPE,BADWORD,EXIT;                            00200400
BOOLEAN SRC,OBJ;                                                        00200410
  IF T := A[SREG:=BASE-A[BASE]].FF = 0 THEN                             00200500
  BEGIN  WHICH := 0; A[BASE] := "NOPARAM";                              00200600
     SREG := BASE; MSGPTR := 10;                                        00200700
     GO EXIT                                                            00200800
  END;                                                                  00200900
   S := SREG;                                                           00201000
   INC(SREG);                                                           00201100
   IF T = 1 THEN                                                        00201200
  BEGIN                                                                 00201300
   MATCH(T:=0&A[SREG][6:6:42],"PASSWOR") WHICH:=5                       00201400
   ELSE MATCH(T,"NAME   ") WHICH:=6                                     00201500
   ELSE                                                                 00201600
  BEGIN                                                                 00201700
 BADPARAM:                                                              00201800
     WHICH := 0; MSGPTR := 8;                                           00201900
  END;                                                                  00202000
   T:=1;  GO EXIT;                                                      00202100
  END;                                                                  00202200
   MATCH(A[SREG].[6:42],"TYPE   ")                                      00202300
  BEGIN  WHICH := 1;                                                    00202400
 GETYPE:                                                                00202500
   MATCH(A[INC(SREG)].[6:42],"TO     ") INC(SREG);                      00202600
   IF A[SREG].[3:3] NEQ 0 THEN                                          00202700
  BEGIN                                                                 00202800
     IF A[BASE+1] := ABS(FINDAWORD(A[SREG],TYPETABLE[1],                00202900
        NUMOFTYPES)) = 0 THEN                                           00203000
  BEGIN                                                                 00203100
 BADTYPE:                                                               00203200
     WHICH := 0; MSGPTR := 20;                                          00203300
     GO EXIT                                                            00203400
  END                                                                   00203500
  END  ELSE                                                             00203600
   IF A[SREG] = ":" THEN                                                00203700
  BEGIN                                                                 00203800
     IF A[BASE+1] := ABS(FINDALETTER(A[INC(SREG)],                      00203900
                          TYPETABLE[1], NUMOFTYPES))                    00204000
           = 0 THEN GO BADTYPE;                                         00204100
  END  ELSE  GO BADPARAM;                                               00204200
   GO EXIT                                                              00204300
  END;     % OF TYPE ANALYSIS                                           00204400
   IF A[SREG].[3:3] = 0 THEN GO BADPARAM;                               00204500
   MATCH(A[SREG].[6:42],"SOURCE ")                                      00204510
  BEGIN                                                                 00204515
   IF OBJ THEN GO BADPARAM;                                             00204520
   SRC := TRUE; INC(SREG);                                              00204525
  END;                                                                  00204530
   MATCH(A[SREG].[6:42],"OBJECT ")                                      00204535
  BEGIN                                                                 00204540
   IF SRC THEN GO BADPARAM;                                             00204545
   OBJ := TRUE; INC(SREG);                                              00204550
  END;                                                                  00204555
   IF FINDAWORD(A[SREG], RESWRDTABLE[1],                                00204600
         NUMOFRESWRDS) NEQ 0 THEN                                       00204700
 BADWORD:                                                               00204800
  BEGIN  WHICH := 0; ERRSW := A[SREG];  MSGPTR := 29;                   00204900
   GO EXIT                                                              00205000
  END;                                                                  00205100
   A[BASE] := A[SREG].[6:42]; % MUST BE FILE NAME                       00205200
   WHICH := 2;                                                          00205300
   MATCH(A[INC(SREG)].[6:42],"TYPE   ") GO GETYPE;                      00205400
   MATCH(A[SREG].[6:42],"LOCK   ")                                      00205500
  BEGIN  WHICH := 4;                                                    00205600
     INC(SREG);                                                         00205700
  END  ELSE  WHICH := 3;                                                00205800
   MATCH(A[SREG].[6:42],"TO     ")  INC(SREG);                          00205900
   IF A[SREG].[3:3] = 0 THEN GO BADPARAM;                               00206000
   IF FINDAWORD(A[SREG], RESWRDTABLE[1],                                00206100
          NUMOFRESWRDS) NEQ 0 THEN GO BADWORD;                          00206200
   MATCH(A[SREG].[6:42],"FACTOR ")                                      00206210
  BEGIN INC(SREG); WHICH := 7; % CHANGING SAVE FACTOR                   00206215
   MATCH(A[SREG].[6:42],"TO     ") INC(SREG); % OPTIONAL WORD           00206220
   A[BASE+1]:=IF SRC THEN 1 ELSE IF OBJ THEN 2 ELSE 0;                  00206225
   IF A[SREG].[3:3] = 0 THEN % NUMBER                                   00206230
  BEGIN A[BASE+2] := A[SREG]; GO TO EXIT;                               00206235
  END ELSE GO BADPARAM;                                                 00206240
  END; % IF "FACTOR"                                                    00206245
   IF (A[BASE+1]:=A[SREG].[6:42]).[42:6] NEQ " " THEN % TOO LONG        00206300
      BEGIN                                                             00206310
      WHICH:=0; ERRSW:=A[SREG]; MSGPTR:=42; GO TO EXIT;                 00206320
      END;                                                              00206330
 EXIT:                                                                  00206400
   IF WHICH NEQ 0 THEN                                                  00206500
   IF T NEQ SREG - S THEN                                               00206600
  BEGIN  WHICH := 0;  SREG := S+T;                                      00206700
     MSGPTR := 10;                                                      00206800
  END;                                                                  00206900
   ERRSW := A[SREG];                                                    00207000
   CHANGEWHICH := WHICH;                                                00207100
COMMENT COMPILER CHECK;                                                 00207110
  IF WHICH EQL 1 OR WHICH EQL 2 THEN % COMPILER NAME SPECIFIED          00207112
  IF CHECKBIT((A[BASE+1]-1) DIV 1, RESTRICTEDLANGUAGES) THEN            00207114
   BEGIN CHANGEWHICH := 0; MSGPTR :=49; END;                            00207116
  END  OF  CHANGEWHICH;                                                 00207200
%***********************************************************************00210000
REAL PROCEDURE DOWHICH(A,NUM); VALUE NUM; ARRAY A[0]; REAL NUM;         00210100
%***********************************************************************00210200
   BEGIN                                                                00210300
   REAL I,T,PC,WORD,WHICH;                                              00210400
   BOOLEAN LIB,HAVEWITH,STACK,CORE,IO,PROCESS,COMN;                     00210500
   LABEL PUTTYPE,LOOKFORNUMBER,ERR,EXIT;                                00210600
   COMMENT                                                              00210700
   VALUE RETURNED TO DOWHICH:                                           00210800
   0 (ERROR)                                                            00210900
   1 ([VERB])                                                           00211000
   2 ([VERB] COMPILERNAME)                                              00211100
   3 ([VERB] FILENAME)                                                  00211200
   4 ([VERB] FILENAME COMPILERNAME)                                     00211300
   5 ([VERB] FILENAME/USERNAME)                                         00211400
   END OF COMMENT;                                                      00211500
   CLEAR(A[BASE+1],6);                                                  00211600
   PC := A[SREG:=BASE-A[BASE]].FF;                                      00211700
   WHILE I LSS PC DO % PICK UP ALL PARAMETERS                           00211800
      BEGIN                                                             00211900
      I := I + 1; SREG := SREG + 1;                                     00212000
      IF A[SREG].[3:3] NEQ 0 THEN % ALPHABETIC STRING                   00212100
         BEGIN                                                          00212200
         IF HAVEWITH THEN % "WITH" PRECEEDED THIS WORD                  00212300
            BEGIN                                                       00212400
            WORD := A[SREG].[6:42];                                     00212500
            MATCH(WORD,"STACK  ") STACK := TRUE                         00212600
            ELSE MATCH(WORD,"PROCESS") PROCESS := TRUE                  00212700
            ELSE MATCH(WORD,"IO     ") IO := TRUE                       00212800
            ELSE MATCH(WORD,"CORE   ") CORE := TRUE                     00212900
            ELSE MATCH(WORD,"COMMON ") COMN:=TRUE                       00212910
            ELSE GO TO ERR;                                             00213000
LOOKFORNUMBER:                                                          00213100
            IF I:=I+1 GTR PC THEN GO TO ERR;                            00213200
            IF A[SREG:=SREG+1].[1:2]=1 THEN                             00213300
            IF A[SREG].[42:6] = "=" THEN GO LOOKFORNUMBER;              00213400
            IF A[SREG].[1:5] NEQ 0 THEN GO ERR; % NOT A NUMBER          00213500
            IF STACK THEN % STACK SIZE                                  00213600
               BEGIN A[BASE+3]:=A[SREG].[36:12]; STACK:=FALSE; END      00213700
            ELSE IF PROCESS THEN                                        00213800
               BEGIN A[BASE+4] := A[SREG]|60; PROCESS := FALSE; END     00213900
            ELSE IF IO THEN                                             00214000
               BEGIN A[BASE+5] := A[SREG]|60; IO:=FALSE; END            00214100
            ELSE IF CORE THEN                                           00214200
               BEGIN A[BASE+6]:=A[SREG].[33:15]; CORE:=FALSE; END       00214300
            ELSE % COMMON                                               00214310
               BEGIN A[BASE+7]:=A[SREG]; COMN:=FALSE; END               00214320
            END % IF HAVEWITH                                           00214400
         ELSE MATCH(A[SREG].[6:42],"WITH   ") HAVEWITH := TRUE          00214500
         ELSE MATCH(A[SREG].[6:42],"LIBRARY") LIB := TRUE               00214600
         ELSE IF T := FINDAWORD(A[SREG],TYPETABLE[1],NUM) NEQ 0 THEN    00214700
            BEGIN                                                       00214800
PUTTYPE:                                                                00214900
            A[BASE+2] := T; % FILE TYPE                                 00215000
            WHICH := WHICH + 1;                                         00215100
            END                                                         00215200
         ELSE                                                           00215300
            BEGIN % INTERPRET AS FILE NAME                              00215400
            WHICH := WHICH + 2;                                         00215500
            IF (A[BASE+1+REAL(LIB)]:=A[SREG]).[42:6] NEQ " " THEN       00215600
            IF NOT LIB THEN                                             00215610
               BEGIN                                                    00215620
               WHICH:=0; MSGPTR := 42; GO TO EXIT;                      00215630
               END;                                                     00215640
            LIB := FALSE;                                               00215700
            END;                                                        00215800
         END % IF A[SREG].[3:3] NEQ 0                                   00215900
      ELSE IF A[SREG] = "/" THEN LIB := TRUE                            00216000
      ELSE IF A[SREG] = ":" THEN                                        00216100
         BEGIN                                                          00216200
         IF I:=I+1 GTR PC THEN GO ERR;                                  00216300
         IF T:=FINDALETTER(A[SREG:=SREG+1],TYPETABLE[1],NUM) NEQ 0 THEN 00216400
         GO PUTTYPE ELSE GO ERR;                                        00216500
         END ELSE GO TO ERR;                                            00216600
      END WHILE STATEMENT;                                              00216700
   IF WHICH:=WHICH+1 GTR 5 THEN                                         00216800
      BEGIN                                                             00216900
      MSGPTR := 16; % TOO MANY PARAMETERS                               00217000
      WHICH := 0;                                                       00217100
      GO TO EXIT;                                                       00217200
      END;                                                              00217300
   IF WHICH=2 OR WHICH=4 THEN % COMPILER NAME SPECIFIED                 00217400
   IF CHECKBIT(ABS(A[BASE+2])-1,RESTRICTEDLANGUAGES) THEN               00217500
      BEGIN                                                             00217600
      WHICH := 0;                                                       00217700
      MSGPTR := 49;                                                     00217800
      END;                                                              00217900
   GO TO EXIT;                                                          00218000
ERR:                                                                    00218100
   WHICH := 0;                                                          00218200
   MSGPTR := 8;                                                         00218300
   GO TO EXIT;                                                          00218400
EXIT:                                                                   00218500
   ERRSW := A[SREG];                                                    00218600
   DOWHICH := WHICH;                                                    00218700
   END PROCEDURE DOWHICH;                                               00218800
%#************************************************************          00224400
BOOLEAN PROCEDURE TIMECHK(LCW,A); BOOLEAN LCW; ARRAY A[0];              00224500
%**************************************************************         00224600
COMMENT CHECK USERS TIME PERIOD FROM 24 BIT STRING;                     00224700
BEGIN INTEGER TIM1,TIM2,SKP; BOOLEAN OK; LABEL EXIT;                    00224800
     %**********************************                                00224900
BOOLEAN STREAM PROCEDURE TIMCK(STRG,SKP,TIM1); VALUE STRG;              00225000
     %**********************************                                00225100
BEGIN LOCAL SK; LABEL EXIT;                                             00225200
  SI:=LOC STRG; SI:=SI+4; % POINT TO 24 BIT "TIME" STRING               00225300
  DI:=LOC STRG; DS:=4 CHR; % EXTEND TO 48 BITS                          00225400
  SI:=SKP; DI:=LOC SK; DS:=WDS; % NO OF BITS TO SKIP (CRNT.TIME)        00225500
  SI:=LOC STRG; SKIP SK SB; % POINT TO CURRENT HOUR                     00225600
  IF SB THEN TALLY:=1; TIMCK:=TALLY; TALLY:=SK;                         00225700
  24(IF SB THEN JUMP OUT ELSE % FIND 1ST "ON" BIT POSITION              00225800
    BEGIN SKIP SB; TALLY:=TALLY+1; END); % COUNT EACH BIT SKIPPED       00225900
  IF TOGGLE THEN ELSE GO TO EXIT; % NO BITS "ON"                        00226000
  SK:=TALLY; SI:=LOC SK; DI:=TIM1; DS:=WDS; % 1ST "ON" BIT POSITION     00226100
  TALLY:=TALLY+1; % POSITION OF NEXT BIT                                00226200
  SK:=TALLY; SI:=LOC SK; DI:=SKP; DS:=WDS;                              00226300
EXIT: END STREAM PROCEDURE TIMCK;                                       00226400
     %**********************************                                00226500
REAL STREAM PROCEDURE NEXTIME(STRG,SKP,REM); VALUE STRG,SKP,REM;        00226600
     %**********************************                                00226700
BEGIN SI:=LOC STRG; SI:=SI+4; DI:=LOC STRG; DS:=4CHR; %EXTEND           00226800
  DI:=LOC NEXTIME; SI:=LOC STRG; SKIP SKP SB; % POINT TO NEXT BIT       00226900
  REM(IF SB THEN BEGIN SKIP SB; TALLY:=TALLY+1; END                     00227000
    ELSE JUMP OUT); % FIND NEXT "0" BIT                                 00227100
  TALLY:=TALLY+SKP; NEXTIME:=TALLY;                                     00227200
END STREAM PROCEDURE NEXTIME;                                           00227300
     %**********************************                                00227400
PROCEDURE TIMEMSG(STRTIME,FINTIME,OK);                                  00227500
     %**********************************                                00227600
VALUE STRTIME,FINTIME,OK; INTEGER STRTIME,FINTIME; BOOLEAN OK;          00227700
BEGIN                                                                   00227800
     %***********************************                               00227900
STREAM PROCEDURE MSG1(WORK);                                            00228000
     %**********************************                                00228100
BEGIN DI:=WORK;                                                         00228200
  DS:=49LIT"SORRY,YOU ARE NOT SCHEDULED FOR TIME AT THIS HOUR";         00228300
END MSG1;                                                               00228400
     %***********************************                               00228500
STREAM PROCEDURE MSG2(WORK,STRTIME,FINTIME); VALUE STRTIME,FINTIME;     00228600
     %**********************************                                00228700
BEGIN DI:=WORK;                                                         00228800
  DS:=33LIT"YOUR NEXT SCHEDULED TIME IS FROM ";                         00228900
  SI:=LOC STRTIME; DS:=4 DEC; DS:=4 LIT " TO ";                         00229000
  SI:=LOC FINTIME; DS:=4 DEC;                                           00229100
END MSG2;                                                               00229200
     %***********************************                               00229300
STREAM PROCEDURE MSG3(WORK);                                            00229400
     %**********************************                                00229500
BEGIN DI:=WORK;                                                         00229600
  DS:=40LIT"PLEASE CALL BACK AT YOUR SCHEDULED TIME.";                  00229700
END MSG3;                                                               00229800
     %***********************************                               00229900
STREAM PROCEDURE MSG4(WORK,FINTIME); VALUE FINTIME;                     00230000
     %**********************************                                00230100
BEGIN DI:=WORK;                                                         00230200
  DS:=42LIT"YOU ARE SCHEDULED TO USE THE SYSTEM UNTIL ";                00230300
  SI:=LOC FINTIME; DS:=4 DEC;                                           00230400
END MSG4;                                                               00230500
     %***********************************                               00230600
  IF OK THEN                                                            00230700
    BEGIN MSG4(WORK,FINTIME); TWXOUT(LL,WORK[0],46,2); END ELSE         00230800
    BEGIN MSG1(WORK); TWXOUT(LL,WORK[0],49,2);                          00230900
    MSG2(WORK,STRTIME,FINTIME); TWXOUT(LL,WORK[0],45, 2);               00231000
    MSG3(WORK); TWXOUT(LL,WORK[0],40,2); END;                           00231100
END TIMEMSG;                                                            00231200
     %***********************************                               00231300
     %**********************************                                00231400
  IF REAL(BOOLEAN(TIMELIMITS.[24:24]) EQV                               00231500
    BOOLEAN(REAL(NOT FALSE).[24:24])) EQL REAL(NOT FALSE) % ALL ON      00231600
  OR TIMELIMITS.[24:24] EQL 0 THEN % NO BITS ON                         00231700
    BEGIN TIMECHK:=TRUE; TIMERESTRICTBIT:=REAL(FALSE); GO EXIT; END;    00231800
  TIM1:=0; TIM2:=SKP:=TIME(1)/216000 - 0.5; % CURRENT TIME              00231900
  OK:=TIMCK(TIMELIMITS,SKP,TIM1); TIM1:=(TIM1 MOD 24) | 100;            00232000
  TIM2:=(NEXTIME(TIMELIMITS,SKP,TIM2:=24-SKP+TIM2) MOD 24)|100;         00232100
  TIMEMSG(TIM1,TIM2,OK); % SEND APPROPRIATE MESSAGE                     00232200
  TIMERESTRICTBIT := REAL(TRUE); NOTIFYBIT := REAL(FALSE);              00232300
  NOTIFYTIME := 0; TIMECHK := OK;                                       00232400
EXIT: END PROCEDURE TIMECHK;                                            00232500
%#************************************************************          00232600
STREAM PROCEDURE PLSLOGOFF(WORK);                                       00232700
%*************************************************************          00232800
BEGIN DI:=WORK;                                                         00232900
  DS:=45LIT"YOUR SCHEDULED TIME IS UP. PLEASE LOG OFF AS ";             00233000
  DS:=17LIT"SOON AS POSSIBLE.";                                         00233100
END PLSLOGOFF;                                                          00233200
%*************************************************************          00233300
STREAM PROCEDURE TELLHIMBYE(WORK);                                      00233400
%*************************************************************          00233500
BEGIN DI:=WORK;                                                         00233600
  DS:=47LIT"SORRY,BUT YOU ARE PAST YOUR SCHEDULED TIME AND ";           00233700
  DS:=23LIT"WE MUST DISCONNECT YOU.";                                   00233800
END PLSLOGOFF;                                                          00233900
%*************************************************************          00234000
BOOLEAN STREAM PROCEDURE TIMEOK(N,A); VALUE N,A;                        00234100
%*************************************************************          00234200
BEGIN SI:=LOC A; SI:=SI+4; N(SKIP SB);                                  00234300
  IF SB THEN TALLY:=1; TIMEOK:=TALLY;                                   00234400
END TIMEOK;                                                             00234500
%***********************************************************************00234600
STREAM PROCEDURE SEQNMBRS(L,WORK,N,DBLTOG); VALUE N,DBLTOG;             00234700
%***********************************************************************00234800
COMMENT                                                                 00234900
ROUTINE PLACES "N" SEQUENCE NUMBER STRINGS FROM ARRAY "L"               00235000
(ARRAY "L" CONTAINS OCTAL VALUES FOR SEQUENCE NUMBERS)                  00235100
INTO ARRAY "WORK" FOR OUTPUT TO REMOTE DEVICE.                          00235200
EACH SEQUENCE NUMBER IS PRECEEDED BY A "SHIFT OUT" CONTROL CHARACTER,   00235300
AND IS FOLLOWED BY A "SHIFT IN" CONTROL CHARACTER AND                   00235400
...A) A CARRIAGE RETURN IF DBLTOG IS FALSE,                             00235500
...B) A CARRIAGE RETURN AND LINE FEED IF DBLTOG IS TRUE;                00235600
   BEGIN LOCAL SV,DV;                                                   00235700
   SI:=L; DI:=WORK; DS:=2LIT",>"; % "CLEAR,HOME,SHIFT OUT"              00235800
   N(DS:=LIT"!"; DV:=DI; DS:=8DEC; DI:=DV; DS:=7FILL;                   00235900
   SV:=SI; SI:=DV; DI:=DV;                                              00236000
   8(IF SC=" " THEN SI:=SI+1 ELSE DS:=CHR); DS:=LIT"!";                 00236100
   DS:=2RESET; DS:=2SET; DS:=2RESET; DS:=LIT"-"; % QMK, CR              00236200
   DBLTOG(DS:=LIT"*"); DS:=LIT">"; SI:=SV);                             00236300
   DI:=DI-2; DI:=DI-DBLTOG; DS:=3LIT"4>!";  % HOME, 1ST. SEQ. NO.       00236400
   SI:=WORK; SI:=SI+3; 8(IF SC="!" THEN JUMP OUT ELSE DS:=CHR);         00236500
   DS:=LIT"!"; DS:=2RESET; DS:=2SET; DS:=2RESET; DS:=LIT"~";            00236600
   END STREAM PROCEDURE SEQNMBRS;                                       00236700
%***********************************************************************00236800
PROCEDURE OUTPUTNUMBERS(LCW,A); BOOLEAN LCW; ARRAY A[0];                00236900
%***********************************************************************00237000
   BEGIN REAL I,K,LST,INC;                                              00237100
   LST := SEQLAST; INC := INCREMENT; K := -1;                           00237200
   FOR I := 0 STEP 1 UNTIL 9 DO L[K:=K+1]:=LST:=LST+INC;                00237300
   CHKSEQNMBR := LST;                                                   00237400
   SEQNMBRS(L,WORK,10,TRUE); % SEQUENCE NUMBERS WITH CR/LF              00237500
   TWXOUT(LL,WORK[0],200,-1);                                           00237600
   END PROCEDURE OUTPUTNUMBERS;                                         00237700
%***********************************************************************00900000
%    FORWARD DECLARATIONS GO HERE.                                      00900100
%*********************************************************************  00900200
PROCEDURE BYE(LCW,A);  BOOLEAN LCW;  ARRAY A[0];  FORWARD;              00900300
PROCEDURE  GETSOMETHINGTODO(LCW,A); BOOLEAN LCW; ARRAY A[0]; FORWARD;   00900400
PROCEDURE  SSMSG;  FORWARD;                                             00900500
PROCEDURE  REMEMBERTHIS(LCW); BOOLEAN LCW; FORWARD;                     00900600
PROCEDURE     MCPMSG(LCW,A);  BOOLEAN LCW;  ARRAY A[0]; FORWARD;        00900700
PROCEDURE  LINECLEAR(LCW,A); BOOLEAN LCW; ARRAY A[0]; FORWARD;          00900800
PROCEDURE  SETUPFILES(LCW,A); BOOLEAN LCW; ARRAY A[0]; FORWARD;         00900900
%***********************************************************************00901000
REAL STREAM PROCEDURE GETPSWD(WORK,STACK,MAX,EADRS); VALUE MAX,EADRS;   00901005
%***********************************************************************00901010
COMMENT SPECIAL SCANNER FOR OBTAINING PASSWORD AND/OR CHARGE            00901015
WHICH MAY START WITH A DIGIT AND CONTAIN SPECIAL CHARACTERS;            00901020
   BEGIN LOCAL SV,DV,DN,H,N; LABEL LOOP,EXIT;                           00901025
   DI:=EADRS; DS:=LIT LEFTARROW; % END OF RECORD MARK                   00901030
   SI:=WORK; DI:=STACK; DN:=DI;                                         00901035
   63(IF SC=" " THEN SI:=SI+1 ELSE JUMP OUT);                           00901040
   IF TOGGLE THEN GO TO EXIT; % BLANK RECORD                            00901045
   IF SC="H" THEN % CHECK FOR "HELLO"                                   00901050
      BEGIN                                                             00901055
      DI:=LOC H; DS:=5LIT"HELLO"; DI:=DI-5;                             00901060
      IF 5SC=DC THEN ELSE SI:=SI-5;                                     00901065
      END;                                                              00901070
   MAX(DI:=DN; DS:=8LIT"0       "; DI:=DI-7;                            00901075
LOOP:                                                                   00901080
   IF SC=" " THEN BEGIN SI:=SI+1; GO TO LOOP; END;                      00901085
   IF SC="," THEN BEGIN SI:=SI+1; GO TO LOOP; END;                      00901090
   IF SC=LEFTARROW THEN % CHECK FOR END OF RECORD                       00901095
      BEGIN                                                             00901100
      SV:=SI; SI:=LOC SV; SI:=SI+5;                                     00901105
      DV:=DI; DI:=LOC EADRS; DI:=DI+5;                                  00901110
      IF 3SC=DC THEN JUMP OUT TO EXIT;                                  00901115
      SI:=SV; DI:=DV;                                                   00901120
      END;                                                              00901125
   DS:=CHR; TALLY:=1;                                                   00901130
   6(IF SC=" " THEN JUMP OUT; IF SC="," THEN JUMP OUT;                  00901135
     IF SC=LEFTARROW THEN                                               00901140
         BEGIN                                                          00901145
         SV:=SI; SI:=LOC SV; SI:=SI+5;                                  00901150
         DV:=DI; DI:=LOC EADRS; DI:=DI+5;                               00901160
         IF 3SC=DC THEN;                                                00901170
         SI:=SV; DI:=DV; IF TOGGLE THEN JUMP OUT;                       00901180
         END;                                                           00901190
      DS:=CHR; TALLY:=TALLY+1);                                         00901200
   H:=TALLY; SV:=SI; SI:=LOC H; SI:=SI+7; DI:=DN; DS:=CHR; % SIZE       00901210
   DI:=DI+7; DN:=DI; SI:=SV;                                            00901220
   TALLY:=N; TALLY:=TALLY+1; N:=TALLY); % END "MAX" LOOP                00901230
EXIT:                                                                   00901240
   TALLY:=N; GETPSWD:=TALLY;                                            00901250
   END STREAM PROCEDURE GETPSWD;                                        00901260
%****************************************************************%      01000000
PROCEDURE     HITHERE (LCW, A); BOOLEAN LCW; ARRAY A[0];                01000100
%*****************************************************************%     01000200
   BEGIN                                                                01000300
   REAL STREAM PROCEDURE   WHEREIS(NAME);                               01000400
   COMMENT RETURNS ABSOLUTE ADDRESS OF NAME;                            01000500
      BEGIN                                                             01000600
      SI := NAME; WHEREIS := SI;                                        01000700
      END  OF WHEREIS;                                                  01000800
   STREAM PROCEDURE  ANS(W);                                            01000900
      BEGIN  DI := W;                                                   01001000
      DS := 24 LIT "ENTER USER CODE, PLEASE-";                          01001100
      END  ANS;                                                         01001200
   STREAM PROCEDURE LNO(W,T,UC,LL); VALUE T,LL;                         01001300
      BEGIN                                                             01001400
      LABEL  AFT,EVE;                                                   01001500
      DI := W;                                                          01001600
      SI := LOC T; SI := SI+7;                                          01001700
      IF SC = "A" THEN DS := 14 LIT "GOOD MORNING, "                    01001800
      ELSE                                                              01001900
         BEGIN  SI := LOC T;                                            01002000
         IF SC LSS "1" THEN                                             01002100
            BEGIN  UPS;                                                 01002200
            IF SC LSS "6" THEN                                          01002300
AFT:        DS := 16 LIT "GOOD AFTERNOON, "                             01002400
            ELSE                                                        01002500
EVE:        DS := 14 LIT "GOOD EVENING, "                               01002600
            END                                                         01002700
         ELSE                                                           01002800
            BEGIN                                                       01002900
            UPS;                                                        01003000
            IF SC = "2" THEN GO AFT ELSE GO EVE;                        01003100
            END;                                                        01003200
         END;                                                           01003300
      SI := UC; SI := SI + 1;                                           01003400
      DS := 15 CHR;                                                     01003500
      DS := 18 LIT " YOU HAVE STATION ";                                01003600
      SI := LOC LL; DS := 2 DEC;                                        01003700
      DS := 4 LIT " ";                                                  01003800
      END  OF  LNO;                                                     01003900
   STREAM PROCEDURE  PSWRD (W);                                         01004000
      BEGIN                                                             01004100
      LOCAL  T;                                                         01004200
      DI := W;                                                          01004300
      DS:=17LIT"AND YOUR PASSWORD";                                     01004400
   % VOID                                                               01004500
      END  PSWRD;                                                       01004600
   STREAM PROCEDURE  CHRG(W);                                           01004700
      BEGIN                                                             01004800
      DI := W;                                                          01004900
      DS := 18 LIT "ENTER CHARGE CODE-";                                01005000
      END  CHRG;                                                        01005100
   LABEL START,ERR,BAD,EXIT,SCHED,CASE4,STARTANEW;                      01005200
LABEL WINDUP,PSWD,LOGGON,CHARG,NEXTBLOCK;                               01005300
   INTEGER       I;                                                     01005400
   REAL T,USR,FIL;                                                      01005500
   BOOLEAN MTCH;                                                        01005510
   CASE DOING OF                                                        01005600
      BEGIN                                                             01005700
         BEGIN   % CASE 0 ..............................................01005800
         IF LOGGEDON THEN                                               01005900
            BEGIN                                                       01006000
            IF SCHEDULINE THEN  GOERR("HELLO  ",40);                    01006100
            IF FILENAME NEQ 0 THEN                                      01006110
             IF TPCOUNT NEQ 0 OR FILENAME NEQ SOURCEFILE THEN           01006120
              IF NOT NOSAVE THEN                                        01006130
                 BEGIN                                                  01006140
                 NOSAVE:=TRUE; GOERR("NO SAVE",48);                     01006150
                 END;                                                   01006160
            CLEAR(A[BASE],3); % ZERO OUT 4 WORDS OF STACK               01006170
            T:=GETPSWD(WORK[1],A[BASE+1],3,WORKENDADRS); % "HELLO" INPUT01006200
            IF T GTR 0 THEN % GOT SOMETHING AFTER "HELLO"               01006300
            COMMENT PROCEDURE "BYE" DOES NOT DISCONNECT WHEN            01006400
            A[BASE] GEQ 50, DOES NOT PRINT MESSAGES WHEN                01006500
            A[BASE] GEQ 100;                                            01006600
               BEGIN A[BASE]:=124+T;                                    01006700
               BYE(LCW,A[*]); LOGOFF(LCW,A[*]);                         01006800
               GO TO PSWD;                                              01006900
               END;  % IF PARAMETERS TO HELLO                           01007000
            A[BASE] := 75; % FLAG AS HELLO                              01007100
            BYE(LCW, A[*]);  LOGOFF(LCW,A[*]);                          01007200
            IAM := VHELLO;                                              01007300
            WANT := WAITFOR := 0;                                       01007400
            END; % IF HELLO                                             01007500
         IOTOT := ETIME := PTIME := INPUTCTR := 0;                      01007600
         IF SCHEDULINE THEN                                             01007700
            BEGIN                                                       01007800
            LOGON(LCW,A[*]);                                            01007900
            GO TO SCHED;                                                01008000
            END; % IF LOGGEDON                                          01008100
START:   IF NOT(LOGGINGON OR DCP) THEN                                  01008200
            BEGIN                                                       01008300
STARTANEW:  ANS(WORK);                                                  01008400
            TWXOUT(LL, WORK[0], 24, ..100000);                          01008500
            LOGGINGON := TRUE;                                          01008600
            END;                                                        01008700
         DOING := 1;                                                    01008800
         FILESOK := FALSE;                                              01008900
         WAITFOR := VINPUT;                                             01009000
         A[BASE]:=TEMP:=5;                                              01009100
         END  OF CASE 0; % .............................................01009200
         BEGIN  % CASE 1   .............................................01009300
         CLEAR(A[BASE],3); % ZERO OUT 4 WORDS OF STACK                  01009310
         T:=GETPSWD(WORK[1],A[BASE+1],3,WORKENDADRS); LOGGINGON:=TRUE;  01009400
         IF T = 0 THEN GO TO ERR; % NO INPUT                            01009500
         IF YOUFINDAVERB (A[BASE+1],VERBTABLE[0],NUMOFVERBS) THEN       01009600
            BEGIN IF A[BASE+1].CF NEQ VHELLO THEN                       01009700
            IF A[BASE+1].CF = VBYE THEN                                 01009800
               BEGIN                                                    01009900
               IAM := VBYE; USERCODE := "GONE   ";                      01010000
               IOTOT := ETIME := PTIME := INPUTCTR := 0;                01010100
               DOING := A[BASE] := 0;                                   01010200
               GO EXIT                                                  01010300
               END % IF BYE                                             01010400
            ELSE                                                        01010500
            LITOUT("FUNNY..",1); % IF NOT HELLO                         01010600
ERR:        MSGPTR := 21;                                               01010700
            GO TO STARTANEW;                                            01010800
            END; % IF A VERB ( OR NO INPUT )                            01010900
         A[BASE] := 124 + T;                                            01011000
         IF T LSS 2 THEN % NO PASSWORD GIVEN YET                        01011100
            BEGIN PSWRD(WORK);                                          01011200
            TWXOUT(LL,WORK[0],17,1);                                    01011300
PSWD:       IF A[BASE] LSS 126 THEN % NO PASSWORD GIVEN YET             01011400
            BLACKOUT;                                                   01011500
            END;                                                        01011600
         I:= ((A[BASE+1].[6:21] + A[BASE+1].[27:21]) MOD 29) + 1;       01011700
NEXTBLOCK:                                                              01011710
         LLDISKREAD := USRBASE[0] + I;                                  01011800
         DOING := 2;                                                    01011900
         WANT := VDISKREAD;                                             01012000
         TEMP := 7;                                                     01012100
         END  CASE  1; %  ..............................................01012200
         BEGIN   % CASE 2 ..............................................01012300
         FOR T := 0 STEP 2 UNTIL 28 DO                                  01012400
         MATCH(WORK[T],A[BASE+1].[6:42])                                01012500
            BEGIN                                                       01012600
            USR := WORK[T+1].[33:15]; % RELATIVE DISK ADDRESS           01012700
            USERLOC:=USRBASE[USR DIV USROWSIZE]+(I:=USR MOD USROWSIZE); 01012710
            LLDISKREAD := USERLOC;                                      01012720
            WANT := VDISKREAD;                                          01012800
            DOING := 3;                                                 01012900
            GO EXIT                                                     01013000
            END;                                                        01013100
         IF (I:=WORK[1].[18:15]) GTR 0 THEN GO TO NEXTBLOCK; %LINK      01013110
         WORK[1] := "*******"; % IF NOT MATCHED                         01013200
         DOING := 3;                                                    01013300
         END  CASE  2; %  ..............................................01013400
         BEGIN   % CASE 3 ..............................................01013500
         USERCODE := WORK[1];                                           01013600
         A[BASE+6]:=WORK[2]; % SAVE PASSWORD                            01013700
         CHARGE   := WORK[3];                                           01013800
         TIMELIMITS := WORK[7];                                         01013900
         RESTRICTEDLANGUAGES := WORK[8];                                01014000
         MOVE(2,WORDS,WORK[9],RESTRICTEDVERBS);                         01014100
         OPTIONBITS := WORK[11]; % USERS "SPECIAL" OPTIONS              01014110
         MOVE(2,WORDS,WORK[4],A[BASE+4]);                               01014200
         IF A[BASE] GTR 125 THEN GO TO CASE4; % HAVE PASSWORD           01014300
% VOID                                                                  01014400
         DOING := 4;                                                    01014500
         WAITFOR := VINPUT;                                             01014600
         END  CASE  3; %  ..............................................01014700
         BEGIN   % CASE 4 ..............................................01014800
         IF A[BASE] LSS 126 THEN % NO PASSWORD GIVEN YET                01014900
         A[BASE]:=125+GETPSWD(WORK[1],A[BASE+2],2,WORKENDADRS);         01015000
CASE4:   LOGGINGON := FALSE;                                            01015100
         MATCH(USERCODE,A[BASE+1].[6:42])                               01015200
         MATCH(A[BASE+6],A[BASE+2].[6:42]) % PASSWORD                   01015300
            BEGIN                                                       01015400
            MATCH(A[SBASE],USERCODE) MTCH := TRUE;                      01015500
            IF RESTART AND NOT MTCH THEN % SCRATCH "OLD" WRK FILES      01015600
               BEGIN                                                    01015605
               USR:=A[SBASE]; T:=LL&13[33:41:7]; FIL:=MAKEFN("1S",LL);  01015610
               REMOVEFILE(T,FIL,USR);                                   01015615
               REMOVEFILE(T,FIL.[6:36],USR);                            01015620
               REMOVEFILE(T,FIL&"P"[12:42:6],USR);                      01015625
               REMOVEFILE(T,FIL&"T"[12:42:6],USR);                      01015630
               END;                                                     01015635
            IF NOT RESTART OR RESTART AND NOT MTCH THEN % CHECK TIME    01015700
            IF NOT TIMECHK(LCW,A) THEN                                  01015800
               BEGIN WORK[0]:="$0     "; WORK[0].[12:6]:=LEFTARROW;     01015900
               TWXOUT(LL,WORK[0],3,-1); % DISCONNECT THE LINE           01016000
               IAM:=WANT:=WAITFOR:=0; GO TO EXIT;                       01016100
               END;                                                     01016200
            IF CHARGE = 0 THEN % CHARGE CODE NEEDED                     01016300
               BEGIN IF A[BASE] = 127 THEN % CHARGE ALREADY INPUT       01016400
                  BEGIN CHARGE := A[BASE+3].[6:42];                     01016500
                  GO TO LOGGON;                                         01016600
                  END % IF A[BASE]=127                                  01016700
               ELSE % ASK FOR IT                                        01016800
                  BEGIN                                                 01016900
CHARG:            CHRG(WORK); TWXOUT(LL,WORK[0],18,NOCRLF);             01017000
                  WAITFOR:=VINPUT;                                      01017100
                  DOING := 5;                                           01017200
                  GO EXIT;                                              01017300
                  END; % ASKING FOR CHARGE                              01017400
               END % IF CHARGE = 0                                      01017500
            ELSE GO TO LOGGON;                                          01017600
            END; % IF MATCHED                                           01017700
BAD:     USERCODE := 0;                                                 01017800
         LITOUT("BADCODE",1);                                           01017900
         MSGPTR := 21;                                                  01018000
         GO TO STARTANEW;                                               01018100
         END CASE4; %   ................................................01018200
         BEGIN % CASE 5 ................................................01018300
         T:=GETPSWD(WORK[1],CHARGE,1,WORKENDADRS); CHARGE.[1:5]:=0;     01018400
         IF T = 0 THEN GO TO CHARG; % MUST INPUT SOMETHING              01018500
LOGGON:  LOGON(LCW,A[*]);                                               01018600
         IOTOT := ETIME := PTIME := INPUTCTR := 0;                      01018700
         FIND(LL&IAM[33:41:7],0,"NEWS   ","CANDE  ",USERCODE);          01018800
         WAITFOR := IAM;                                                01018900
         DOING := 6;                                                    01019000
         END CASE5; %    ...............................................01019100
         BEGIN  % CASE 6 ...............................................01019200
         IF EVENTS[1] LEQ 0 THEN GO TO WINDUP; % NO FILE                01019300
         LLDISKREAD := EVENTS[4];                                       01019400
         WANT := VDISKREAD;                                             01019500
         DOING := 7;                                                    01019600
         END CASE6; %    ...............................................01019700
         BEGIN  % CASE 7 ...............................................01019800
         TWXOUT(LL,WORK[0],72,CRLF);                                    01019900
WINDUP:  IF QUICKLOG THEN GO TO SCHED; % DONT PRINT GREETINGS           01019910
         WORK[0] := DATE;                                               01020000
         TIMEOFDAY(WORK[1],T:=TIMECONV(LOGONTIME,TRUE));                01020100
         TWXOUT(LL,WORK[0],18,1);                                       01020200
         LNO(WORK[0],T,A[BASE+4],LL);                                   01020300
              TWXOUT(LL,WORK[0],52,2);                                  01020400
SCHED:   IF NOT RESTART THEN LINECLEAR(LCW,A[*]);                       01020500
         WRITEASTERISK:=TRUE; NOSTOP:=FALSE;                            01020600
         FILENAME := 0;                                                 01020700
         DOING := WANT := 0;                                            01020800
         SOURCEFILE := 0;                                               01020900
         IAM := IF RESTART THEN 0 ELSE VSETUPFILES;                     01021000
         GO EXIT                                                        01021100
         END  CASE  7; % ...............................................01021200
      END  ALL CASES;                                                   01021300
EXIT:                                                                   01021400
   END  OF  HITHERE;                                                    01021500
%*************************************************%                     02000000
PROCEDURE  BREAK(LCW,A);  BOOLEAN LCW;  ARRAY A[0];                     02000100
%*************************************************%                     02000200
         BEGIN                                                          02000300
LABEL  T;                                                               02000350
              WRITEASTERISK := TRUE;                                    02000400
              IF R(ALLMCPMSG) = 0 THEN LINECLEAR(LCW,A[*]) ELSE         02000500
              IAM := 0;                                                 02000600
         END  BREAK;                                                    02000700
%*************************************************%                     03000000
PROCEDURE  WRU(LCW,A);  BOOLEAN LCW;  ARRAY A[0];                       03000100
%*************************************************%                     03000200
         BEGIN                                                          03000300
LABEL  T;                                                               03000350
              WRITEASTERISK := TRUE;                                    03000400
              INITIATEDWHILEBUSY := TRUE;                               03000500
              BREAKORWRU:=TRUE;% WANT:=WAITFOR:=VLINECLEAR;             03000600
              IF REAL(ALLMCPMSG)=0 THEN IAM:=0 ELSE                     03000700
              MATCH(RUN2,"CANDE  ") IAM:=0 ELSE                         03000800
              WANT:=WAITFOR:=VMCPMSG;                                   03000810
         END  WRU;                                                      03000900
%**********************************************************************%04000000
PROCEDURE  LINECLEAR(LCW,A);  BOOLEAN LCW;  ARRAY A[0];                 04000100
%**********************************************************************%04000200
   BEGIN                                                                04000300
   LABEL EXIT;                                                          04000400
   IF RUNNING THEN MATCH(RUN2,"CANDE  ") GO EXIT;                       04000410
   BUSYLINE                := FALSE;                                    04000500
   INITIATEDWHILEBUSY      := FALSE;                                    04000600
   SAVEDWHILEINITBUSY      := FALSE;                                    04000700
   RESTARTNEEDED           := FALSE;                                    04000800
   ALLMCPMSG               := FALSE;                                    04000900
   DISCONNECTING           := FALSE;                                    04001000
   RESTART                 := FALSE;                                    04001100
   SEQMODE                 := FALSE;                                    04001200
 % VOID                                                                 04001300
   DATAENABLED             := FALSE;                                    04001400
   BREAKORWRU              := FALSE;                                    04001500
   INQUIRY := FALSE; CONTINUEBIT:=FALSE;                                04001600
   SCWPREV := PREVRCW := LLWORDS; BASE := SBASE;                        04001700
   WANT := WAITFOR := WAITINGSCW := LLINFO := 0;                        04001800
   WHILE REAL(THINGSTODO) GTR 0 DO GETSOMETHINGTODO(LCW,A[*]);          04001900
   CLEAR(A[SBASE],30); % FOR REPLACIT                                   04002000
   IF EQUATED THEN ENTERESP(-LL,-0,A[*]); % GIVE BACK ESP DISK          04002010
   EQUATED := FALSE;                                                    04002020
   MSGPTR := 18;                                                        04002100
EXIT: IAM:=0;                                                           04002200
   END PROCEDURE LINECLEAR;                                             04002300
%**********************************************************************%05000000
PROCEDURE INITIALIZECTRANDBASE;                                         05000100
%**********************************************************************%05000200
         BEGIN                                                          05000300
STREAM PROCEDURE USERSDATE(L,DAT);                                      05000310
   BEGIN                                                                05000315
   DI:=L; DS:=23LIT"USERS/CANDE FILE DATED ";                           05000320
   SI:=DAT; DS:=8CHR; DS:=LIT"~";                                       05000325
   END USERSDATE;                                                       05000330
REAL USERFILEHEADER;                                                    05000350
              CLEAR(CTRANDBASE[0],15);  %    REMOVE                     05000400
              CLEAR(WORK[0],59);        % ANY GARBAGE.                  05000500
              MSGFILELOC := EVENTS[2].[20:28];                          05000600
              TANKFILE   := ABS(EVENTS[3]);                             05000700
              USERFILEHEADER := EVENTS[2].[5:15];                       05000800
             DCP:=BOOLEAN(EVENTS[2].[1:1]); % DCP SYSTEM TOGGLE         05000850
              ROWINUSE   := 15;                                         05000900
              NOFILES    := FALSE;                                      05001000
              USERSDATE(L,EVENTS[4]); TWXOUT(0,L[0],32,1); % ACCESS DATE05001010
              DISKWAIT(1,WORK[*],30,USERFILEHEADER);                    05001020
              USROWSIZE:=(WORK[8] DIV WORK[0].[42:6])|WORK[0].[42:6];   05001030
              MOVE(20,WORDS,WORK[10],USRBASE[*]); % DISK ROW ADDRESSES  05001040
              IF EVENTS[3] GTR 0 THEN % OLD TANKS EXIST.                05001100
         BEGIN                                                          05001200
              DISKWAIT(1,WORK[*],30,TANKFILE);                          05001300
              MOVE(16,WORDS,WORK[10],CTRANDBASE[0]);                    05001400
              TANKSIZE := WORK[8];                                      05001500
              ROWINUSE := WORK[6].CF;                                   05001600
              ROWCOUNT := WORK[6].FF;                                   05001700
              NOTANKS := FALSE;                                         05001750
         END;                                                           05001800
         END  INITIALIZECTRANDBASE;                                     05001900
%**********************************************************************%05002000
PROCEDURE     DISKCHUNK;                                                05002100
%**********************************************************************%05002200
         BEGIN                                                          05002300
REAL          XTRADSK;                                                  05002400
BOOLEAN       TANKNOTPRESENT;                                           05002500
              IF NOFILES THEN % SET UP THE FILE ADDRESSES.              05002700
         BEGIN                                                          05002800
              TANKNOTPRESENT := EVENTS[3] LEQ 0;                        05002900
              INITIALIZECTRANDBASE;                                     05003000
         END  ELSE TANKNOTPRESENT := TRUE;                              05003100
              IF CTRANDBASE[ROWINUSE] NEQ EVENTS[1] THEN                05003200
         BEGIN  %  MUST REALLY BE A NEW CHUNK.                          05003300
              ROWINUSE.[44:4] := ROWINUSE + 1;                          05003400
              IF CTRANDBASE[ROWINUSE] NEQ 0 THEN                        05003500
         BEGIN                                                          05003600
              XTRADSK := CTRANDBASE[ROWINUSE];                          05003700
              ROWCOUNT := ROWCOUNT -1;                                  05003800
         END;                                                           05003900
              CTRANDBASE[ROWINUSE] := EVENTS[1];                        05004000
              ROWCOUNT   := ROWCOUNT + 1;                               05004100
              IF TANKNOTPRESENT THEN DISKWAIT(1,WORK[*],30,TANKFILE);   05004200
              WORK[6] := ROWINUSE & ROWCOUNT [18:33:15];                05004300
              MOVE(16,WORDS,CTRANDBASE[0],WORK[10]);                    05004400
              TANKSIZE:=WORK[8];  DISKWAIT(0,WORK[*],30,TANKFILE);      05004500
         END  REMEMBERING NEW CHUNK;                                    05004600
              DOGSAROUND:=DOGSAROUND OR ROWCOUNT GTR 13;                05004700
              IF XTRADSK GTR 0 THEN % GIVE IT BACK.                     05004800
                 FORGETUSERDISK(XTRADSK,TANKSIZE);%                     05004900
              IAM := 0;                                                 05005000
         END  OF NEW DISK CHUNK;                                        05005200
%**********************************************************************%06000000
PROCEDURE  DISCONNECT(LCW,A);  BOOLEAN LCW;  ARRAY A[0];                06000100
%**********************************************************************%06000200
         BEGIN                                                          06000300
BOOLEAN STREAM PROCEDURE SPECIAL(N,W,T);  VALUE N,T;                    06000400
         BEGIN                                                          06000500
              SI := LOC T; SI := SI+1; DI := W;                         06000600
              IF N SC = DC THEN TALLY := 1;                             06000700
              SPECIAL := TALLY;                                         06000800
         END  SPECIAL;                                                  06000900
              IF NOT BOOLEAN (DOING) THEN                               06001000
         BEGIN                                                          06001100
              WHILE R(THINGSTODO) GTR 0 DO GETSOMETHINGTODO(LCW,A[*]);  06001200
              DISCONNECTING := B(DOING := 1);                           06001300
              BREAKORWRU := TRUE;                                       06001400
         END;                                                           06001500
              IF REASON = VTEACHER THEN                                 06001600
                 IF SPECIAL(3,WORK[1],"BYE----") THEN                   06001700
                    DEVICE := REAL(NOT FALSE);                          06001800
              IF REASON = VMCPMSG THEN                                  06001900
         BEGIN                                                          06002000
              SREG:=BASE+LIBMSGCTR;                                     06002100
              MCPMSG(LCW,A[*]);                                         06002200
              IAM := VDISCONNECT;                                       06002300
         END  MCPMSG;                                                   06002400
               IF (WAITFOR:=REAL(NOT(FALSE))= DEVICE                    06002500
                    AND REAL(ALLMCPMSG)=0 )                             06002550
                  OR SCHEDULINE                                         06002600
               THEN                                                     06002650
         BEGIN                                                          06002700
              LINECLEAR(LCW,A[*]);  DISCONNECTING := FALSE;             06002800
              IF USERCODE NEQ 0 THEN                                    06002900
         BEGIN                                                          06002910
              IF NOT SCHEDULINE THEN                                    06002920
         BEGIN                                                          06002930
              A[BASE] := 150;  BYE(LCW,A[*]); % SCRATCH WORK FILES      06002940
         END BYEING OFF;                                                06002950
              LOGOFF(LCW,A[*]);                                         06002960
         END LOGGING OFF;                                               06002970
              USERCODE := 0;  LCW := FALSE;                             06003000
              IAM := 0;  DISCONNECTED(LL);                              06003100
         END  IF DONE WITH THIS LINE;                                   06003200
         END  DISCONNECT;                                               06003300
%**********************************************************************%07000000
PROCEDURE INPUTDATA (LCW,A);                                            07000100
%**********************************************************************%07000200
         BOOLEAN LCW; ARRAY A[0] ;                                      07000300
         BEGIN                                                          07000400
LABEL  T;                                                               07000450
              WECANUSEDATA   := NO DOGSAROUND;                          07000500
              NODATAREQUESTED:= TRUE ;                                  07000600
              DATAOFFSETT    := EVENTS [1];                             07000700
              DATAWORDS      := EVENTS [2];                             07000800
              DATADISKLOC    := EVENTS [3] & ROWINUSE [36:44:4];        07000900
              NODATA:=(DATAWORDS LEQ 0 OR DATAOFFSETT GEQ 29);          07001000
              IAM := WANT :=0;                                          07001100
         END  KLUDGE INPUTDATA;                                         07001400
%**********************************************************************%07001500
PROCEDURE     BUILDADATAEVENT;                                          07001600
%**********************************************************************%07001700
         BEGIN                                                          07001800
DEFINE        INPUTLL=[10:8]#, INPUTCHAR=[33:15]#, INPUTQMARK=[1:1]#;   07001900
LABEL         EXIT;                                                     07002000
REAL COUNT;                                                             07002010
BOOLEAN STREAM PROCEDURE FLAGBIT(W);                                    07002100
         BEGIN                                                          07002200
              SI:=W; IF SB THEN TALLY:=1; FLAGBIT:=TALLY;               07002300
         END  FLAGBIT;                                                  07002400
STREAM PROCEDURE INCOMPLETEMSG(WORK);                                   07002410
BEGIN DI:=WORK; DS:=27LIT"YOUR REQUEST IS INCOMPLETE."; END;            07002420
              IF FLAGBIT(TTYINPUT[DATAOFFSETT]) THEN                    07002500
                 BEGIN  LL:=0; REASON:=13; GO EXIT END;                 07002600
              IF DOGSAROUND THEN % BAD NEWS.                            07002700
         BEGIN                                                          07002800
              EVENTREASON := REASON := VDOGCATCHER;                     07002900
              EVENTLL     := LL     := DOGSLOOSE;                       07003000
              IF LL GTR 0 THEN GO EXIT;                                 07003100
         END  DOGSAROUND;                                               07003200
         BEGIN                                                          07003300
              LL := (ERRSW := TTYINPUT[DATAOFFSETT]).INPUTLL;           07003400
              EVENTS[3]:= DATADISKLOC;                                  07003500
              EVENTS[2]:= REASON:=((WORK[0]:=ERRSW.INPUTCHAR)+7).[40:5];07003600
              EVENTS[1]:= DATAOFFSETT:= DATAOFFSETT + 1;                07003700
              MOVE (REASON, WORDS, TTYINPUT[DATAOFFSETT], WORK[1]);     07003800
              WORKADRS := ADDRESS(WORK[1]);                             07003820
              COUNT := (WORK[0]-1).[39:9];                              07003840
              WORKENDADRS:=(WORKADRS+COUNT.[40:5])&COUNT[30:45:3];      07003850
              NODATA:=(DATAOFFSETT := DATAOFFSETT + REASON) GEQ 29;     07003900
              IF (DATAWORDS:= DATAWORDS - REASON - 1) LSS 1 THEN        07004000
                 NODATA := TRUE;                                        07004100
              EVENTS[0].[18:15]:= %                                     07004200
               (ERRSW & (REASON:= VINPUT-ERRSW.INPUTQMARK)[3:41:7])     07004300
                                       .[3:15];                         07004400
               IF REASON = VTEACHER AND CONTINUEBIT THEN % NO DISKREAD  07004410
                 BEGIN INCOMPLETEMSG(WORK); TWXOUT(LL,WORK[0],27,1);    07004420
                 LL:=0; REASON := 13; END; % IF WAITING                 07004430
              IF REASON = VTEACHER AND SEQMODE THEN REASON:=VINPUT;     07004440
  IF LL GTR MAXLINES THEN BEGIN  LL:=0; REASON:=13; END;                07004800
         END  NO DOGS AROUND;                                           07004900
 EXIT:   END OF BUILDING A DATA EVENT;                                  07005000
%*************************************************%                     08000000
PROCEDURE  BREAKCLEAR(LCW,A);  BOOLEAN LCW;  ARRAY A[0];                08000100
%*************************************************%                     08000200
         BEGIN                                                          08000300
LABEL  T;                                                               08000400
              MSGPTR := 18;  % I AM THE GENIE ...                       08000600
              IAM:=WANT:=WAITFOR:=0;                                    08000700
         END  BREAKCLEAR;                                               08000900
%**************************************************************         09000000
PROCEDURE  RESTARTIT(LCW,A); BOOLEAN LCW; ARRAY A[0];                   09000100
%**************************************************************         09000200
  BEGIN                                                                 09000300
REAL  T;                                                                09000400
LABEL BAD,FINDCHKPT,MAKESURE,CASE7,EXIT;                                09000500
BOOLEAN STREAM PROCEDURE FINDFLAG(SEGMENT);                             09000502
   BEGIN LOCAL SV; LABEL EXIT; SI:=SEGMENT;                             09000504
   30(SV:=SI; IF SB THEN                                                09000506
      BEGIN TALLY:=1; FINDFLAG:=TALLY; JUMP OUT TO EXIT; END;           09000508
      SI:=SV; SI:=SI+8);                                                09000510
EXIT: END STREAM PROCEDURE FINDFLAG;                                    09000512
STREAM PROCEDURE FLAGMESSAGE(WORK,FILNAM,USERCODE,DISKADDRESS);         09000514
VALUE FILNAM,USERCODE,DISKADDRESS;                                      09000516
   BEGIN                                                                09000518
   DI:=WORK; DS:=14LIT"FLAG BIT:FILE ";                                 09000520
   SI:=LOC FILNAM; 2(SI:=SI+1; DS:=7CHR; DS:=LIT"/"); DI:=DI-1;         09000522
   DS:=17LIT" AT DISK ADDRESS "; DS:=8DEC;                              09000524
   DS:=16LIT" FILE DISCARDED.";                                         09000526
   END STREAM PROCEDURE FLAGMESSAGE;                                    09000528
STREAM PROCEDURE  OK(W);                                                09000600
  BEGIN                                                                 09000700
   DI := W;                                                             09000800
   DS:=12 LIT "WORKFILE OK.";                                           09000900
  END OK;                                                               09001000
STREAM PROCEDURE SPEC(WRK,SEQ,FIX);  VALUE SEQ,FIX;                     09001010
       BEGIN                                                            09001020
          DI:=WRK; DS:=20 LIT "INPUT RESTORED THRU ";                   09001030
          FIX(DS:=7 LIT "FIX AT ");                                     09001040
          SI:=LOC SEQ;  FIX:=DI;  DS:=8 DEC;                            09001050
          DI:=FIX; DS:=7 FILL; DI:=FIX; SI:=FIX;                        09001060
          8(IF SC=" " THEN SI:=SI+1 ELSE DS:=CHR);                      09001070
          DS:=16 LIT "    ";                                            09001080
       END STREAM;                                                      09001090
   CASE DOING OF                                                        09001100
  BEGIN                                                                 09001200
  BEGIN   % CASE 0                                                      09001300
               IF BOOLEAN(EVENTS[1].[2:1]) THEN                         09001310
               BEGIN                                                    09001320
               SCHEDULINE := TRUE;                                      09001322
               USERCODE   := EVENTS[1].[6:42];                          09001324
               DEVICE     := TELETYPE;                                  09001326
             END                                                        09001328
            ELSE DEVICE := EVENTS[2];                                   09001330
               IF EVENTS[1].[1:2]=1 THEN %SCHEDULE LOG ON (NOT RESTART) 09001340
                    IAM:=VHELLO                                         09001350
               ELSE                                                     09001360
   IF NOTANKS THEN                                                      09001400
    IAM := VHELLO                                                       09001500
   ELSE                                                                 09001600
  BEGIN                                                                 09001700
 FILESOK := FALSE; BASE := SBASE;                                       09001800
               A[BASE]:=EVENTS[1].[6:42];   % SAVE USERCODE             09001900
   RESTART := TRUE;                                                     09002000
   TEMP := DOING := 1;                                                  09002100
   WANT := VHELLO;                                                      09002200
  END;                                                                  09002300
  END  CASE  0;                                                         09002400
  BEGIN   % CASE 1   GOT HIM LOGGED IN                                  09002500
COMMENT CHECK TIME RESTRICTIONS (NOT CHECKED IN HITHERE ON RESTART);    09002510
  IF R(B(TIMELIMITS.[24:24]) EQV B(R(NOT FALSE).[24:24])) EQL           09002511
  R(NOT FALSE) OR TIMELIMITS.[24:24] EQL 0 THEN ELSE                    09002512
  TIMERESTRICTBIT := REAL(TRUE);                                        09002513
   RESTART := FALSE;                                                    09002600
   IF USERCODE NEQ A[BASE] THEN                                         09002700
  BEGIN                                                                 09002800
    IAM := VSETUPFILES;                                                 09002900
    DOING := TEMP := 0;                                                 09003000
    GO EXIT                                                             09003100
  END;                                                                  09003200
               IF SCHEDULINE THEN                                       09003210
                 %TEMPORARY UNTIL WE KNOW WHAT TO DO                    09003220
                   GOERR("P*L*O*P",40);                                 09003230
   A[TBASE+10] := TEN8;                                                 09003300
   T := MAKEFN("1P",LL);                                                09003400
   FIND(LL&IAM[33:41:7],0,T,USERCODE,USERCODE);                         09003500
   DOING := 2;                                                          09003600
   WAITFOR := IAM;                                                      09003700
  END  CASE  1;                                                         09003800
  BEGIN   % CASE 2                                                      09003900
   IF EVENTS[1] NEQ 7 THEN                                              09004000
  BEGIN                                                                 09004100
 BAD:                                                                   09004200
   FILENAME := DOING := WAITFOR := 0;                                   09004300
    IAM := VSETUPFILES;                                                 09004400
    GO EXIT                                                             09004500
  END;                                                                  09004600
   A[BASE] := (WRKTBLADR:=EVENTS[4])-1;     % ADDR OF FIRST REC         09004700
   A[BASE+1] := 0;                                                      09004800
 FINDCHKPT:                                                             09004900
   LLDISKREAD := A[BASE] + INC(A[BASE+1]);                              09005000
   TEMP := 2;                                                           09005100
   DOING := 3;                                                          09005200
   WANT := VDISKREAD;                                                   09005300
  END  CASE  2;                                                         09005400
  BEGIN   % CASE 3                                                      09005500
   IF FINDFLAG(WORK) THEN                                               09005510
      BEGIN                                                             09005515
      FLAGMESSAGE(WORK,MAKEFN("1P",LL),USERCODE,(A[BASE]+A[BASE+1]));   09005520
      TWXOUT(0,WORK[0],70,1);                                           09005525
      GO TO BAD;                                                        09005530
      END;                                                              09005535
   A[BASE+2] := 0;                                                      09005600
   IF WORK[0] = TEN8 THEN                                               09005700
  BEGIN                                                                 09005800
    GOODOBJ := BOOLEAN(WORK[7].[12:1]);                                 09005810
    FILENAME := WORK[12];                                               09005900
    INCREMENT := WORK[14];                                              09006000
    SEQLAST := WORK[15];                                                09006100
    SEQIN := WORK[16];                                                  09006200
              LASTRECORD := WORK[17] + 1; % RECORD COUNT                09006250
    TABLEINFO := WORK[18];                                              09006300
    FILETYPE := WORK[20];                                               09006400
    SOURCEFILE := WORK[21];                                             09006500
    GO MAKESURE;                                                        09006600
  END;                                                                  09006700
   IF WORK[10] NEQ TEN8 THEN                                            09006800
    IF WORK[20] NEQ TEN8 THEN                                           09006900
     IF A[BASE+1] GEQ TBLSZ THEN GO BAD                                 09007000
      ELSE                                                              09007100
  BEGIN                                                                 09007200
      MOVE(10,WORDS,WORK[20],A[TBASE]);                                 09007300
      GO FINDCHKPT                                                      09007400
  END                                                                   09007500
    ELSE                                                                09007600
  BEGIN                                                                 09007700
     A[BASE+2] := 20;                                                   09007800
     MOVE(10,WORDS,WORK[10],A[TBASE]);                                  09007900
     GOODOBJ := BOOLEAN(WORK[27].[12:1]);                               09007910
  END                                                                   09008000
   ELSE                                                                 09008100
  BEGIN                                                                 09008200
   MOVE(10,WORDS,WORK[0],A[TBASE]);                                     09008300
    A[BASE+2] := 10;                                                    09008400
    GOODOBJ := BOOLEAN(WORK[17].[12:1]);                                09008410
    FILENAME := WORK[22];                                               09008500
   INCREMENT := WORK[24];                                               09008600
   SEQLAST := WORK[25];                                                 09008700
   SEQIN := WORK[26];                                                   09008800
              LASTRECORD := WORK[27] + 1; % RECORD COUNT                09008850
    TABLEINFO := WORK[28];                                              09008900
  END;                                                                  09009000
   LLDISKREAD := A[BASE] + INC(A[BASE+1]);                              09009100
   TEMP := 3;                                                           09009200
   DOING := 4;                                                          09009300
   WANT := VDISKREAD;                                                   09009400
  END  CASE  3;                                                         09009500
  BEGIN   % CASE 4                                                      09009600
   IF A[BASE+2] = 20 THEN                                               09009700
  BEGIN                                                                 09009800
    FILENAME := WORK[2];                                                09009900
    INCREMENT := WORK[4];                                               09010000
    SEQLAST := WORK[5];                                                 09010100
    SEQIN := WORK[6];                                                   09010200
              LASTRECORD := WORK[7] + 1;  % RECORD COUNT                09010250
    TABLEINFO := WORK[8];                                               09010300
    FILETYPE := WORK[10];                                               09010400
    SOURCEFILE := WORK[11];                                             09010500
  END  ELSE                                                             09010600
  BEGIN                                                                 09010700
    FILETYPE := WORK [0];                                               09010800
    SOURCEFILE := WORK[1];                                              09010900
  END;                                                                  09011000
 MAKESURE:                                                              09011100
   OBJECTFILE := 0;                                                     09011200
   FIND[LL&IAM[33:41:7],0,SOURCEFILE,USERCODE,USERCODE);                09011300
   DOING := 5;                                                          09011400
   WAITFOR := IAM;                                                      09011500
  END  CASE  4;                                                         09011600
  BEGIN   % CASE 5                                                      09011700
   IF EVENTS[1] NEQ 7 THEN GO BAD;                                      09011800
   T := MAKEFN("1T",LL);                                                09011900
   FIND(LL&IAM[33:41:7],0,T,USERCODE,USERCODE);                         09012000
   WAITFOR := IAM;                                                      09012100
   DOING := 6;                                                          09012200
  END  CASE  5;                                                         09012300
  BEGIN   % CASE 6                                                      09012400
   IF EVENTS[1] NEQ 7 THEN GO BAD;                                      09012500
   IF GOODOBJ THEN                                                      09012510
      BEGIN                                                             09012520
      FIND(LL&IAM[33:41:7],0,SOURCEFILE.[6:36],USERCODE,USERCODE);      09012530
      DOING := 7; WAITFOR := IAM;                                       09012540
      END ELSE GO TO CASE7;                                             09012550
   END CASE 6;                                                          09012560
   BEGIN % CASE 7                                                       09012570
  IF EVENTS[1]=7 THEN OBJECTFILE:=SOURCEFILE.[6:36] ELSE GOODOBJ:=FALSE;09012580
CASE7:                                                                  09012590
   OK(WORK);                                                            09012600
   TWXOUT(LL,WORK[0],12,1);                                             09012700
   IF TPCOUNT NEQ 0 THEN                                                09012710
  BEGIN % TELL USER LINE NUMBER.                                        09012720
     T:=TPENTRY;                                                        09012730
     T:=IF A[T]=TEN8 THEN A[T-1] ELSE A[T];                             09012740
     SPEC(WORK,T.[21:27],REAL(T.[1:2] EQL 3));                          09012750
     TWXOUT(LL,WORK[0],36,2);                                           09012760
  END TELLING LINE NUMBER;                                              09012770
   LINECLEAR(LCW,A[*]);                                                 09012800
   IF SOURCEFILE = FILENAME THEN                                        09012900
  BEGIN                                                                 09013000
    T := MAKEFN("1S",LL);                                               09013100
    MAKEFILE(LL&13[33:41:7],1,T,USERCODE,FILETYPE,-2);                  09013200
  END;                                                                  09013300
   FILESOK := TRUE;                                                     09013400
  END CASE 7;                                                           09013500
  END  ALL  CASES;                                                      09013600
 EXIT:                                                                  09013700
   END  RESTARTIT;                                                      09013800
%**********************************************************************%14000000
PROCEDURE     MCPMSG (LCW,A);  BOOLEAN LCW; ARRAY A[0];                 14000100
%**********************************************************************%14000200
         BEGIN                                                          14000300
BOOLEAN       LIBMSG;                                                   14000400
    LABEL EXIT;                                                         14000450
STREAM PROCEDURE MAKEBOJMSG(W,N);  VALUE N;                             14000500
         BEGIN                                                          14000600
              DI:=W;  DS:=11 LIT " RUNNING.  ";                         14000700
            N(DI:=DI-10; DS:=10 LIT "COMPILING.");                      14000800
         END  STREAM;                                                   14000900
              IF NOT BOOLEAN(DOING) THEN                                14001000
         BEGIN                                                          14001100
              SREG:=BASE+LIBMSGCTR-A[BASE];                             14001200
              DOING := 1;                                               14001300
         END;                                                           14001400
% EVENTS[1] = 0 FOR EOJ SYNTAX ERRORS.                                  14001500
%             1 FOR EOJ O.K.                                            14001600
%             2 FOR EOJ DS-ED.                                          14001700
%             3 FOR DS-ED MESSAGE.                                      14001800
%             4 FOR BOJ.                                                14001900
%             5 FOR LIBMTNCE IGNORED.                                   14002000
%             6 FOR LIBMTNCE REMOVED.                                   14002100
%             7 FOR LIBMTNCE CHANGED.                                   14002200
%             8 FOR SECURED FILE.                                       14002300
%             9 FOR ZIP-ERROR.                                          14002400
%            10 FOR NOT ON DISK.                                        14002500
%            11 FOR NOT OBJECT CODE FILE.                               14002600
              IF EVENTS[1] = 4 THEN                                     14002700
         BEGIN                                                          14002800
              IF BOJMSG THEN                                            14002900
         BEGIN                                                          14003000
              MAKEBOJMSG(WORK[0],COMPILING);                            14003100
              BOJMSG:=FALSE;  TWXOUT(LL,WORK[0],11,1);                  14003200
         END  BOJMSG;                                                   14003300
              IF CONCISE THEN MATCH(RUN2,"CANDE  ") ELSE                14003310
                 BEGIN                                                  14003320
                 LITOUT("-BOJ-  ",NOCRLF); LITOUT(RUN1,CRLF);           14003330
                 END;                                                   14003340
              MATCH(RUN1,"PAPER  ") MATCH(RUN2,"CANDE  ")               14003350
                 BEGIN                                                  14003360
                 READTAPE(LL&13[33:41:7],8,0,USERCODE);                 14003370
 % VOID                                                                 14003380
                 END;                                                   14003390
         END  BOJ  ELSE                                                 14003400
              IF EVENTS[1] GEQ 5 AND EVENTS[1] LEQ 7 THEN               14003500
         BEGIN                                                          14003600
              IF LIBMTNCE THEN                                          14003700
         BEGIN                                                          14003800
              A[SREG-LIBMSGCTR]:=EVENTS[IF EVENTS[1]=5 THEN 4 ELSE 1];  14003900
              IF LIBMSGCTR:=LIBMSGCTR-1 LEQ 0 THEN IAM := 0;            14004000
         END  IF LIBMTNCE ELSE IAM := 0;                                14004100
         END  LIBMSG  ELSE                                              14004200
              IF EVENTS[1] = 3 THEN                                     14004300
                 BEGIN                                                  14004400
              TWXOUT(LL,WORK[0],0,1);     % CRLF BEFORE MSG             14004450
              SQUASH (WORK[0],":");                                     14004500
              TWXOUT (LL,WORK[0],72,1);                                 14004600
                 END                                                    14004700
               ELSE                                                     14004800
              IF EVENTS[1] GEQ 8 THEN                                   14004900
                 BEGIN                                                  14005000
                    ERRSW:=RUN1; MSGPTR:=EVENTS[1]+16;                  14005100
                    ALLMCPMSG := FALSE;                                 14005200
                    RUN1 := RUN2 := IAM := 0;                           14005300
              IF NOT BREAKORWRU THEN IAM:=VERROR;                       14005400
              GO TO EXIT;                                               14005500
                 END;                                                   14005600
              IF EVENTS[1] LEQ 2 THEN  % EOJ FOR THIS GUY.              14005700
         BEGIN                                                          14005800
              ETIME := ETIME + EVENTS[3].[16:32];                       14005850
              IOTOT := IOTOT + EVENTS[4].[16:32];                       14005860
              COMMONCELL := WORK[8];                                    14005870
              IF EVENTS[1] NEQ 1 AND NOT BREAKORWRU THEN % BAD          14005900
         BEGIN                                                          14006000
              MSGPTR:=IF COMPILING THEN 12 ELSE 28;                     14006100
              SCWPREV:=PREVRCW:=LLWORDS;                                14006200
              INITIATEDWHILEBUSY:=FALSE;                                14006300
         END  BAD NEWS  ELSE                                            14006400
         BEGIN  MSGPTR := 0;                                            14006405
              IF A[BASE+1] := WORK[12] NEQ 0 THEN                       14006410
         BEGIN  WANT := VDISPATCH;                                      14006415
                IF A[BASE+1].[42:6] NEQ " " THEN GOERR(A[BASE+1],42);   14006416
                A[BASE+1]:=A[BASE+1].[6:36]; A[BASE+2]:=WORK[13];       14006420
         END                                                            14006425
         END;                                                           14006430
              TWXOUT(LL,LL,0,2-CONCISEBIT);                             14006450
              IF EOJMSG OR EVENTS[1] NEQ 1 THEN % TELL HIM.             14006500
         BEGIN                                                          14006600
 % VOID                                                                 14006700
              WRITEASTERISK := FALSE;                                   14006800
              WORK[0]:=IF EVENTS[1]=1 THEN "END    "ELSE"ERR    ";      14006900
              MATCH(RUN2,"CANDE  ") WORK[1]:=RUN1 ELSE                  14007000
         BEGIN                                                          14007100
              WORK[1]:=IF COMPILING THEN "COMPILE" ELSE                 14007200
                       IF RUN1.[12:6]=1 THEN FILENAME ELSE RUN1;        14007300
         END  MATCH CANDE;                                              14007400
              TIMEUSED(WORK[2],TIMECONV(EVENTS[3].[16:32],FALSE));      14007500
 % VOID                                                                 14007600
              BLANK(WORK[1]); SQUASH(WORK[0],"""); BLANK(WORK[0]);      14007700
              TWXOUT(LL,WORK[0],48,2);                                  14007800
              IF SCHEDULINE THEN IF NOT NOSTOP THEN                     14007810
              IF EVENTS[1] NEQ 1 THEN SCHEDGOTO(-1);                    14007820
         END  IF EOJMSG;                                                14007900
              IAM := 0;                                                 14008000
         END  EOJ STUFF;                                                14008100
              IF WANT = VDISPATCH THEN                                  14008110
         BEGIN  RUN1 := A[BASE+1];                                      14008120
                RUN2 := A[BASE+2];                                      14008130
         END  ELSE                                                      14008140
              IF WAITFOR:=IAM = 0 THEN                                  14008200
         BEGIN                                                          14008300
              ALLMCPMSG := B(LIBMSGCTR:=RUN1:=RUN2:=0);                 14008400
         END  IF ALL DONE;                                              14008500
    EXIT:                                                               14008550
         END  OF MCPMSG;                                                14008600
%***********************************************************************15000000
PROCEDURE COOLIT(A);   ARRAY A[0];                                      15001000
%***********************************************************************15002000
BEGIN                                                                   15003000
    STREAM PROCEDURE NODISKMESS(WORK,AMOUNT);  VALUE AMOUNT;            15004000
    BEGIN LOCAL A,B;                                                    15005000
         LABEL L;                                                       15005500
         DI := LOC A; SI := LOC AMOUNT; DS := 8 DEC;                    15006000
         DI:=WORK; SI:=LOC A;                                           15007000
         TALLY := 8;                                                    15008000
    L:   8(IF SC="0" THEN BEGIN SI := SI+1; TALLY := TALLY+63 END       15009000
           ELSE JUMP OUT);                                              15010000
         B := TALLY; DS := B CHR;                                       15011000
         DS:=35LIT" SEGMENTS OF DISK ARE NOT AVAILABLE";                15012000
         DS:=8LIT" ";                                                   15012100
    END;                                                                15013000
    IF LL=0 THEN                                                        15014000
    BEGIN WENEEDTOCOOLIT := TRUE;                                       15015000
         INC(NUDCOUNT);                                                 15016000
    END ELSE                                                            15017000
    BEGIN NODISKMESS(WORK,EVENTS[2]);                                   15018000
         TWXOUT(LL,WORK[0],43,1);                                       15019000
         PREVMSG := MSGPOINTER;                                         15020000
         MSGPOINTER := 47;                                              15021000
    END;                                                                15022000
    IAM := WANT := WAITFOR := 0;                                        15023000
END;                                                                    15024000
%***********************************************************************16000000
PROCEDURE MCPOK(A);   ARRAY A[0];                                       16001000
%***********************************************************************16002000
BEGIN                                                                   16003000
    STREAM PROCEDURE OKMESS(WORK);                                      16004000
    BEGIN DI := WORK;                                                   16005000
         DS:=41LIT"DISK SPACE FOUND. YOU ARE RUNNING AGAIN  ";          16006000
    END;                                                                16007000
    IF LL=0 THEN                                                        16008000
    IF (DECR(NUDCOUNT))=0 THEN                                          16009000
    BEGIN TIMETOOKLINES := TRUE;                                        16010000
         WENEEDTOCOOLIT := FALSE;                                       16011000
    END ELSE                                                            16012000
    IF NUDCOUNT LSS 0 THEN NUDCOUNT := 0 ELSE ELSE                      16013000
    BEGIN OKMESS(WORK);                                                 16014000
         TWXOUT(LL,WORK[0],41,CRLF);                                    16015000
         MSGPOINTER := PREVMSG;                                         16016000
         PREVMSG := 0;                                                  16017000
    END;                                                                16018000
    IAM := 0;                                                           16019000
END;                                                                    16020000
%***********************************************************************16500000
BOOLEAN PROCEDURE MAKEOKEVENT;                                          16501000
%***********************************************************************16502000
BEGIN                                                                   16503000
    STREAM PROCEDURE OKMESS(WORK);                                      16504000
    BEGIN DI := WORK;                                                   16505000
         DS := 28 LIT"SYSTEM OK - YOU MAY PROCEED~";                    16506000
    END;                                                                16507000
    DEFINE A[A1] = LINE[LL,A1]#;                                        16507500
    LABEL EXIT;                                                         16508000
    FOR LL := LLPREV+1 STEP 1 UNTIL MAXLINES DO                         16509000
    IF NODISKMCP THEN                                                   16510000
    BEGIN                                                               16511000
         EVENTS[0] := 0&LL[33:33:15]&VMCPOK[41:33:7];                   16512000
         OKMESS(WORK);                                                  16513000
         TWXOUT(LL,WORK[0],29,CRLF);                                    16514000
         MAKEOKEVENT := TRUE;                                           16515000
         GO TO EXIT;                                                    16516000
    END;                                                                16517000
    TIMETOOKLINES := MAKEOKEVENT := FALSE;                              16518000
 EXIT:                                                                  16519000
END;                                                                    16520000
%***********************************************************************25000000
PROCEDURE TEACHER(LCW,A); BOOLEAN LCW; ARRAY A[0];                      25000100
%***********************************************************************25000200
   BEGIN                                                                25000300
   REAL T,PTR,INDX,X;                                                   25000400
   LABEL MESAGE, QUIT, EXIT;                                            25000500
   IF SEQMODE OR NOT LOGGEDON THEN GO QUIT;                             25000600
   IF NOT BOOLEAN(DOING) THEN % CASE 0                                  25000700
      BEGIN                                                             25000800
      PTR := WORKADRS; INDX := 1; CLEAR(A[BASE+1],2);                   25000900
      WHILE T NEQ 4 AND INDX LEQ 2 DO % SCAN INPUT RECORD               25001000
         BEGIN                                                          25001100
         T := SCAN(PTR,A[BASE+INDX],"Z",WORKENDADRS,X);                 25001200
         IF A[BASE+1] NEQ QMARK THEN INDX:=INDX+1;                      25001300
         END; % SCAN                                                    25001400
      T := A[BASE+1].[6:42]; % FIRST INPUT AFTER QMK                    25001500
      MATCH(T,"CONTINU") GO QUIT; % IGNORE "CONTINUE" INPUT             25001600
      MATCH(T,"DATA   ") % SUCCEEDING INPUT GOES TO DATA FILE           25001700
         BEGIN                                                          25001800
         IF RUNNING OR COMPILING THEN GO TO MESAGE;                     25001900
         IF FILENAME = 0 THEN GOERR("NO FILE",1);                       25002000
         IF FILETYPE NEQ 8 THEN GOERR(T,60); % WRONG TYPE FILE          25002100
         DATAENABLED := TRUE; LITOUT("OK     ",1); GO QUIT;             25002200
         END;                                                           25002300
      MATCH(T,"END    ") % RETURN TO COMMAND MODE                       25002400
         BEGIN                                                          25002500
         IF RUNNING OR COMPILING THEN GO TO MESAGE;                     25002600
         IF NOT DATAENABLED THEN GOERR(T,8);                            25002700
         DATAENABLED := FALSE; WRITEASTERISK:=TRUE; GO QUIT;            25002800
         END;                                                           25002900
      IF NOT SCHEDULINE THEN                                            25003000
         BEGIN                                                          25003100
         MATCH(T,"TO     ") % SS MESSAGE                                25003200
            BEGIN                                                       25003300
            IF A[BASE+2].[1:2] GTR 0 THEN GOERR(A[BASE+2],8);           25003400
            STICK(PTR,L,WORKENDADRS);                                   25003500
            SSMSG; LITOUT("$      ",1); GO QUIT;                        25003600
            END;                                                        25003700
         MATCH(T,"TAPE   ") % SWITCH TO PAPER TAPE MODE                 25003800
            BEGIN                                                       25003900
            MATCH(RUN2,"CANDE  ") GOERR("NO PRGM",8);                   25003910
            IF NOT RUNNING THEN GOERR("NOPRGRM",8);                     25003920
            IF DEVICE = CONRAC THEN GOERR(T,56);                        25004000
            % PUT YOUR FUNNY TERMINALS HERE                             25004100
                                                                        25004200
                                                                        25004300
            READTAPE(LL&13[33:41:7],8,0,USERCODE); GO QUIT;             25004400
            END;                                                        25004500
         END; % IF NOT SCHEDULINE                                       25004600
MESAGE:                                                                 25004700
      IF PREVRCW - BASE LEQ 35 THEN % NOT ENOUGH ROOM                   25004710
      IF INITIATEDWHILEBUSY THEN % ORIGINAL REQUEST INCOMPLETE          25004715
         BEGIN                                                          25004720
         IF RUNNING THEN LITOUT("RUNNING",1) ELSE                       25004725
         IF COMPILING THEN LITOUT("CMPILNG",1) ELSE                     25004730
            BEGIN                                                       25004735
            L[0]:=" STATUS"; BLANK(L[0]); L[1]:="OK     "; BLANK(L[1]); 25004740
            TWXOUT(LL,L[0],11,2-CONCISEBIT);                            25004745
            END;                                                        25004750
         GO TO QUIT;                                                    25004755
         END;                                                           25004760
      IF DATAENABLED THEN MSGPTR:=68;% YOU ARE IN DATA MODE             25004770
      LLDISKREAD := MSGPTR DIV 3 + MSGFILELOC;                          25004800
      DOING := 1;                                                       25004900
      WANT := VDISKREAD;                                                25005000
      END % CASE 0                                                      25005100
   ELSE                                                                 25005200
      BEGIN                                                             25005300
      IF T := MSGPTR MOD 3 NEQ 0 THEN MOVE(10,WORDS,WORK[T|10],WORK[0]);25005400
      TWXOUT(LL,WORK[0],64,2 - CONCISEBIT); INQUIRY := FALSE;           25005500
      MSGPTR := REAL(RUNNING OR COMPILING) | MSGPTR;                    25005600
      IF SCHEDULINE THEN IF NOT NOSTOP THEN SCHEDGOTO(-1);              25005700
QUIT: IAM:=0; INQUIRY:=FALSE;                                           25005800
      END; % CASE 1                                                     25005900
EXIT:                                                                   25006000
   END PROCEDURE TEACHER;                                               25006100
%**********************************************************************%26000000
PROCEDURE     INPUT(LCW,A,TTYINPUT,DKOFFSET,DISKLOC);                   26000100
%**********************************************************************%26000200
VALUE         DKOFFSET,DISKLOC;                                         26000300
REAL          DKOFFSET,DISKLOC,TTYINPUT;                                26000400
BOOLEAN       LCW;                                                      26000500
ARRAY         A[0];                                                     26000600
         BEGIN                                                          26000700
REAL STREAM PROCEDURE OUTSUPR(INPUT,OUTPUT); VALUE INPUT;               26000710
   BEGIN                                                                26000720
   DI:=LOC INPUT; DS:=7FILL;                                            26000730
   SI:=LOC INPUT; DI:=OUTPUT;                                           26000740
   8(IF SC=" " THEN SI:=SI+1 ELSE                                       26000750
      BEGIN DS:=CHR; TALLY:=TALLY+1; END);                              26000760
   OUTSUPR:=TALLY;                                                      26000770
   END STREAM PROCEDURE OUTSUPR;                                        26000780
STREAM PROCEDURE PLSWAIT(WORK);                                         26000790
   BEGIN                                                                26000792
   DI:=WORK; DS:=26LIT"PLEASE WAIT - NO USER DISK";                     26000794
   END STREAM PROCEDURE PLSWAIT;                                        26000795
COMMENT       THIS PROCEDURE SCANS THE INPUT USING SCANNER AND          26000800
              THEN CONTROLS THE PROCESS OF WHAT IS FOUND.               26000900
              IT BUILDS THE TABLES FOR DATA LINES, AND                  26001000
              CALLS ON THE VERB PROCESSORS FOR COMMAND LINES.           26001100
              END COMMENT;                                              26001200
STREAM PROCEDURE FIXERRORMSG(SEQ,L); VALUE SEQ;                         26001210
   BEGIN                                                                26001220
   DI:=LOC SEQ; DS:=7FILL; SI:=LOC SEQ; DI:=L;                          26001230
   DS:=16LIT"FIX SYNTX ERR @ ";                                         26001240
   8(IF SC=" " THEN SI:=SI+1 ELSE DS:=CHR); DS:=8LIT" ";                26001250
   END STREAM PROCEDURE FIXERRORMSG;                                    26001260
DEFINE        VERBV     = A[SREG].[40:8] #,                             26001300
              PAR       = A[SREG].[25:8] #,                             26001400
              SWDS      = A[BASE].[40:8] #,                             26001500
              TBLTODK = 2#,                                             26001600
              MOREVERBS = 1 #;                                          26001700
LABEL         CENTRAL,SCAN1,NODISK,EXIT;                                26001800
REAL          T,E;                                                      26001900
DEFINE        TAB[TAB1] = WORK[TAB1] #;                                 26002000
    CENTRAL:  CASE DOING OF                                             26002100
         BEGIN                                                          26002200
         BEGIN          %  CASE 0                                       26002300
              IF NOT LOGGEDON THEN                                      26002400
         BEGIN                                                          26002500
                IAM := VHELLO;  DOING := 1;                             26002600
    % VOID                                                              26002650
                GO EXIT                                                 26002700
         END;                                                           26002800
              IF SEQMODE THEN % COULD BE LEFTARROW OR DATA LINE.        26002900
         BEGIN  % CHECK LEFT ARROW.                                     26003000
              IF WORK[0] GTR 1 THEN                                     26003100
         BEGIN  % SEQMODE DATA LINE.                                    26003200
              T:=2;  A[BASE]:=SEQIN:=SEQLAST:=SEQLAST+INCREMENT;        26003300
              IF SCHEDULINE THEN                                        26003310
         BEGIN %SEND OUT SEQ NUMBER. THE MCP WILL NOT DO IT             26003320
              E := OUTSUPR(DECCONV(SEQLAST+INCREMENT),WORK[0]);         26003330
              TWXOUT(LL,WORK[0],E,NOCRLF);                              26003340
         END;                                                           26003350
              IF DEVICE = CONRAC THEN                                   26003360
              IF SEQLAST=CHKSEQNMBR THEN OUTPUTNUMBERS(LCW,A[*]);       26003370
         END ELSE T := 5; % NULL INPUT                                  26003400
         END  ELSE                                                      26003500
              IF DATAENABLED THEN % INPUT TO DATA FILE                  26003510
         BEGIN                                                          26003520
              A[BASE] := LASTRECORD := LASTRECORD + 1;                  26003530
              T := 2;                                                   26003540
         END ELSE                                                       26003550
         BEGIN  % NOT SEQ MODE.                                         26003600
             SCANNER(WORKADRS,A[*],LCW,WORKENDADRS);                    26003700
              SREG := BASE + 1;                                         26003800
              T:=A[BASE].[3:3];                                         26003900
         END;                                                           26004000
              CASE T OF  % HANDLE THE INPUT LINE.                       26004100
         BEGIN                                                          26004200
         BEGIN          %  OOPS: SCANNER RETURNED ZERO                  26004300
                        %  WHICH MEANS THERE WAS A COMMENT,             26004400
                        %  SO JUST SKIP IT                              26004500
              IAM:=WANT:=0;                                             26004600
         END SCANNER CASE 0;                                            26004700
         BEGIN          %  SCANNER = 1 : WE HAVE A VERB                 26004800
COMMENT VERB CHECK;                                                     26004810
  IF CHECKBIT(A[SREG].[9:9] DIV 2,RESTRICTEDVERBS) THEN                 26004820
   BEGIN ERRSW:=VERBTABLE[A[SREG].[9:9]]; WANT:=VERROR; MSGPTR:=49;     26004830
    GO TO EXIT; END; % USER IS NOT PERMITTED TO USE VERB;               26004840
               WRITEASTERISK := TRUE;                                   26004900
              TEMP:= 1;                                                 26005000
              PARAM := SWDS;                                            26005100
              IF WENEEDTOCOOLIT THEN                                    26005120
              BEGIN DOING := 3;                                         26005140
                   GO TO NODISK;                                        26005160
              END;                                                      26005180
    SCAN1:    WANT := VERBV;                                            26005200
              IF VERBV  =  VSEQ THEN IAM:=0 ELSE                        26005250
              IF A[BASE].[18:15] GTR 1 THEN DOING := MOREVERBS          26005300
              ELSE  IAM := 0;                                           26005400
         END SCANNER CASE 1;                                            26005500
         BEGIN          %  SCANNER = 2: WE HAVE A SEQ NUMBER,           26005600
              IF FILENAME = 0 OR                                        26005700
                 NOT FILESOK THEN GOERR("NO FILE",1);                   26005800
              E := A[SREG]& DISKLOC[4:36:12]                            26005900
                   & DKOFFSET[16:43:5];                                 26006000
              IF SEQMODE OR DATAENABLED THEN T := 2                     26006100
              ELSE BEGIN T:=A[SREG+1]; SEQIN:=A[SREG]; END;             26006200
              E.[1:2] := T;                                             26006300
              IF T=3 THEN IF FIXERROR(WORKADRS,WORKENDADRS) THEN        26006310
                 BEGIN                                                  26006320
                 FIXERRORMSG(DECCONV(A[SREG]),L); TWXOUT(LL,L[0],24,1); 26006330
                 MSGPTR := 21; IAM := 0; GO TO EXIT;                    26006340
                 END;                                                   26006350
              COMMENT   NOW PUT PUT ENTRY INTO TABLE;                   26006400
              NOSAVE := FALSE;                                          26006450
              GOODOBJ := FALSE;   % OBJ DOES NOT MATCH SOURCE           26006500
              IF DOGHOUSE[LL] LEQ 0 THEN % FIRST DOG.                   26006600
                 DOGHOUSE[LL] :=CTRANDBASE[ROWINUSE];                   26006700
              A[TBASE + TPENTRY] := E;                                  26006800
              INC (TPCOUNT);                                            26006900
              IF TPENTRY LSS 9 THEN                                     26007000
         BEGIN INC (TPENTRY);                                           26007100
              A[TPENTRY] := TEN8;                                       26007200
              IAM := DOING := WANT := 0;                                26007300
         END ELSE                                                       26007400
         BEGIN                                                          26007500
              DOING := TBLTODK;                                         26007600
              IF TPREC GTR 0 THEN % GET BACK WHAT WAS WRITTEN BEFORE.   26007700
         BEGIN                                                          26007800
              LLDISKREAD := TPDKADR;                                    26007900
              TEMP := 3; WANT := VDISKREAD;                             26008000
         END  ELSE GO TO CENTRAL;                                       26008100
         END;                                                           26008200
         END SCANNER CASE 2;                                            26008300
         BEGIN          % SCANNER = 3: WE HAVE A SPEC CHAR              26008400
              IAM := 0;                                                 26009200
         END SCANNER CASE 3;                                            26009300
         BEGIN   % SCANNER = 4: ITS AN SS MSG                           26009400
              WRITEASTERISK := TRUE;                                    26009500
              SSMSG;                                                    26009600
              IAM := 0;                                                 26009700
         END  CASE  4;                                                  26009800
         BEGIN % CASE 5 - NULL INPUT                                    26009810
              WRITEASTERISK := SEQMODE; % RESPOND IF ENDING SEQ. MODE   26009820
              SEQMODE := FALSE;                                         26009830
              IAM := 0;                                                 26009840
         END CASE 5;                                                    26009850
         END  SCANNER CASES;                                            26009900
         END  CASE 0;                                                   26010000
         BEGIN          %  CASE 1: MOREVERBS                            26010100
              IF WENEEDTOCOOLIT THEN                                    26010110
    NODISK:   BEGIN PLSWAIT(WORK);                                      26010120
                   TWXOUT(LL,WORK[0],26,1);                             26010130
                   WAITFOR := VMCPOK;                                   26010140
                   NODISKMCP := TRUE;                                   26010150
                   MSGPOINTER := 46;                                    26010160
                   GO TO EXIT;                                          26010170
              END;                                                      26010180
              SREG := SREG + (T := PAR + 1);                            26010200
              TEMP := TEMP + T;                                         26010300
              PARAM := PARAM - T;                                       26010400
              WANT  := VERBV;                                           26010500
              IF CHECKBIT(A[SREG].[9:9] DIV 2,RESTRICTEDVERBS) THEN     26010510
                 BEGIN                                                  26010520
                 ERRSW := VERBTABLE[A[SREG].[9:9]];                     26010530
                 WANT := VERROR; MSGPTR := 49;                          26010540
                 GO TO EXIT;                                            26010550
                 END;                                                   26010560
              IF SWDS = TEMP + PAR THEN IAM := DOING := 0;              26010600
         END  CASE 1;                                                   26010700
         BEGIN          %  CASE 2: TBLTODK                              26010800
              CHKPT(A[*]);                                              26010900
              IF TPREC LSS 2 THEN                                       26011000
                INC(TPREC)                                              26011100
              ELSE                                                      26011200
         BEGIN                                                          26011300
              TPREC := 0;                                               26011400
              INC(TPDKREL);                                             26011500
              IF TPDKREL GTR 14 THEN                                    26011520
                 BEGIN LITOUT("(WAIT)",1); WANT:=VUPDATE END;           26011550
         END;                                                           26011600
              TPENTRY := IAM := 0;                                      26011700
         END  CASE 2;                                                   26011800
         GO TO SCAN1;   % CASE 3                                        26011850
         END  ALL CASES;                                                26011900
    EXIT:                                                               26012000
         END  USER INPUT;                                               26012100
%**********************************************************************%27000000
PROCEDURE     DISPATCH (LCW,A);        % FIRES UP A JOB.                27000100
%**********************************************************************%27000200
BOOLEAN       LCW ;                                                     27000300
ARRAY         A[0];                                                     27000400
         BEGIN                                                          27000500
LABEL  T;                                                               27000550
              CLEAR(WORK[0],30);                                        27000600
              WORK[0]:=WORK[14]:=RUN1;     %FIRST NAME.                 27000700
              WORK[1]:=WORK[3]:=RUN2;      %SECOND NAME                 27000800
              WORK[2]:=0&2[8:38:10];       %EXECUTE CODE                27000900
              WORK[16] :=                                               27001000
              IF PROCESSLIMIT GTR 0 THEN PROCESSLIMIT ELSE 54000;       27001010
              WORK[17] :=                                               27001020
              IF IOLIMIT GTR 0 THEN IOLIMIT ELSE 54000;                 27001030
              WORK[20] :=                                               27001040
              IF CORESIZE GTR 0 THEN CORESIZE ELSE 0;                   27001050
              WORK[21]:=256;               %STACK SIZE                  27001100
              WORK[24]:=USERCODE;          %USER CODE                   27001200
              IAM := 0;  WANT := WAITFOR := VMCPMSG;                    27001300
              MATCH(RUN2.[6:42],"CANDE  ")                              27001400
         BEGIN  % CANDY TYPE JOB TO RUN.                                27001500
              WORK[0].[2:1]:=1; WORK[1]:=ERRSW;                         27001600
              MSGPTR := 45;                                         %DCS27001650
               WORK[18]:=1&SCHEDULINR[46:47:1]; WORK[19]:=ESP1;         27001700
         END  ELSE                                                      27001800
         BEGIN  % MUST BE USER TYPE JOB.                                27001900
              WORK[21] := STACKSIZE; % COMPILER EST. OR SPEC. VALUE     27002000
              WORK[19]:=COMMONVALUE;                                    27002010
              WORK[18] := 4 + REAL(SCHEDULINE);                         27002100
              EOJMSG := NOT CONCISE; WRITEASTERISK := CONCISE;          27002110
              IF RUN1.[6:6] = 0 THEN                                    27002200
         BEGIN  % NEEDS SHIFTING.                                       27002300
              WORK[0]:=IF RUN1.[12:6]=1 THEN                            27002400
                       FILENAME ELSE " "&RUN1[6:12:36];                 27002500
         END  SHIFT;                                                    27002600
              IF NOT CONCISE THEN LITOUT("RUNNING",..100002);           27002700
              MSGPTR := 44;                                         %DCS27002750
         END  IF NOT CANDE TYPE JOB;                                    27002800
              WORK[2].[33:15]:=WORK[18];   %PRIORITY                    27002900
              RUNNING := TRUE;                                          27003100
             STACKSIZE:=PROCESSLIMIT:=IOLIMIT:=CORESIZE:=COMMONVALUE:=0;27003150
              IF EQUATED THEN                                           27003160
              IF NOT( (COMPAR(RUN2,"CANDE  ")) OR                       27003165
                      (COMPAR(RUN2,"DISK   "))) THEN                    27003170
                 BEGIN                                                  27003175
                 WORK[13]:=FIRSTESP; % LABEL EQUATION                   27003180
                 ENTERESP(-LL,0,A[*]); % SCRATCH TABLE ENTRIES          27003185
                 EQUATED := FALSE;                                      27003190
                 END;                                                   27003195
              RUNJOB(LL&WAITFOR[33:41:7],WORK[0],0);                    27003200
         END  OF  DISPATCH;                                             27003300
%**********************************************************************%28000000
PROCEDURE     DISKREAD(LCW, A);       BOOLEAN  LCW;   ARRAY  A[0];      28000100
%**********************************************************************%28000200
         BEGIN                                                          28000300
LABEL  T;                                                               28000350
              IF NOT B(DOING) THEN  % DO READ INITIATE.                 28000400
         BEGIN                                                          28000500
              IF PREVRCW - BASE LEQ 33 THEN % AREA IS TOO SMALL.        28000600
         BEGIN                                                          28000700
              ERRSW := "TOOLONG";                                       28000800
              MSGPOINTER := 9;                                          28000900
              ERROR(SREG,LCW,A[*]);                                     28001000
         END  IF NOT ENOUGH ROOM                                        28001100
              ELSE                                                      28001200
         BEGIN                                                          28001300
              TEMP := 31;                                               28001400
              SREG := (DOING:=1) + SREG;                                28001500
              WAITFOR := IAM;                                           28001600
              DISKIO(LL&IAM[33:41:7],1,A[0],SREG,30,LLDISKREAD);        28001700
         END  OF READ INITIATE                                          28001800
         END  ELSE                                                      28001900
         BEGIN  %  READ IS COMPLETE NOW MOVE IT TO WORK.                28002000
              MOVE(30,WORDS,A[SREG],WORK[0]);                           28002100
              IAM := 0;                                                 28002200
         END  IF READ COMPLETE;                                         28002300
         END  OF DISKREAD;                                              28002400
%***************************************************************        30000000
PROCEDURE     OOPS (LCW, A); BOOLEAN LCW; ARRAY A[0];                   30000100
%*****************************************************************      30000200
         BEGIN                                                          30000300
LABEL  T;                                                               30000350
              SREG := BASE - A[BASE];                                   30000400
              ERRSW := A[INC(SREG)];                                    30000500
              MSGPOINTER := 13;                                         30000600
              ERROR (SREG, LCW, A[*]);                                  30000700
         END  OF  OOPS;                                                 30000800
%**************************************************************         31000000
PROCEDURE DOGCATCHER(LCW,A);  BOOLEAN LCW;  ARRAY A[0];                 31000100
%**************************************************************         31000200
         BEGIN                                                          31000300
LABEL  T;                                                               31000350
              IF NOT BOOLEAN (DOING) THEN                               31000400
         BEGIN  % COLLECT TANK RECORDS.                                 31000500
              DOING := TEMP := 1; DOGHOUSE[LL]:=0;                      31000600
              LITOUT("(WAIT) ",NOCRLF);                                 31000700
              IF TPCOUNT NEQ 0 THEN WANT := VUPDATE;                    31000800
         END                                                            31000900
              ELSE % COLLECTION FINISHED.                               31001000
         BEGIN                                                          31001100
              DOGLICENSE := FALSE;  IAM := 0;                           31001200
              DOGCATCHERS:= DOGCATCHERS -1;                             31001300
              WECANUSEDATA:=DOGCATCHERS LEQ 0;                          31001400
              LITOUT("PROCEED",CRLF);                                   31001500
         END  IF;                                                       31001600
         END  DOGCATCHER;                                               31001700
%***********************************************************            32000000
PROCEDURE     COMPILEIT(LCW,A);  BOOLEAN LCW;  ARRAY A[0];              32000100
%***********************************************************            32000200
         BEGIN                                                          32000300
LABEL  T;                                                               32000350
%                                                                       32000400
%             GENERATE THE LABEL EQUATIONS FOR THE COMPILER.            32000500
%                                                                       32000600
              CLEAR(WORK[0],59);                                        32000700
              WORK[0]:=(WORK[14]:=RUN1).[6:36]; %FIRST NAME             32000800
              WORK[1]:=WORK[15]:=USERCODE;      %SECND NAME             32000900
              WORK[3]:=10;   WORK[17]:=12;      %FILES TYPE             32001000
              WORK[4] :="CODE   "&4[1:43:5];                            32001100
              WORK[18]:="CARD   "&4[1:43:5];                            32001200
              DISKWRITE(ESP2);  CLEAR(WORK[0],29);                      32001300
%                                                                       32001400
%             GENERATE THE OBJECT SKELETON ON THE DISK.                 32001500
%                                                                       32001600
              WORK[16]:=WORK[17]:=..7777777777; %TIME LIMITS            32001700
              WORK[18]:=4;                      %PRIORITY               32001800
              WORK[20]:=-1;                     %NO CORE EST            32001900
              WORK[21]:=512;                    %STACK SIZE             32002000
              DISKWRITE(ESP1);  CLEAR(WORK[0],29);                      32002100
%                                                                       32002200
%             GENERATE THE COMPILER CALLOUT.                            32002300
%                                                                       32002400
              WORK[14]:=ABS(WORK[0]:=RUN2&16[1:43:5]);%-COMPILER.       32002500
              WORK[01]:=IF RUN1.[6:12]="1S" THEN                        32002600
                           FILENAME ELSE RUN1;  %FILENAME.              32002700
              WORK[02]:=4&4[8:38:10]&ESP1[18:33:15];%OBJ.S              32002800
              WORK[3]:="DISK   "; WORK[13]:=ESP2;%LBL EQN               32002900
               WORK[18]:=4+SCHEDULINR; WORK[19]:=3;   % PR & COMMON     32003000
              WORK[22]:=8; WORK[24]:=USERCODE;  %SAVE&USER              32003100
              WORK[16] :=                                               32003110
              IF PROCESSLIMIT GTR 0 THEN PROCESSLIMIT ELSE ..7777777777;32003120
              WORK[17] :=                                               32003130
              IF IOLIMIT GTR 0 THEN IOLIMIT ELSE ..7777777777;          32003140
              WORK[21] :=                                               32003150
              IF STACKSIZE GTR 0 THEN STACKSIZE ELSE 512;               32003160
             STACKSIZE:=PROCESSLIMIT:=IOLIMIT:=CORESIZE:=COMMONVALUE:=0;32003170
%                                                                       32003200
%             NOW TELL CANDE & THE MCP.                                 32003300
%                                                                       32003400
              COMPILING := TRUE; WRITEASTERISK := CONCISE;              32003500
              BOJMSG := NOT CONCISE; EOJMSG := NOT CONCISE;             32003510
              MSGPTR := 43;                                         %DCS32003550
              IAM:=0;  WANT:=WAITFOR:=VMCPMSG;                          32003600
              RUNJOB(LL&WAITFOR[33:41:7],WORK[0],0);                    32003700
              ESP1:=GETESPDISK;  ESP2:=GETESPDISK;                      32003800
         END  OF COMPILEIT;                                             32003900
%*******************************************************                33000000
PROCEDURE  SETUPFILES(LCW,A); BOOLEAN LCW; ARRAY A[0];                  33000100
%*******************************************************                33000200
  BEGIN                                                                 33000300
REAL  T;                                                                33000400
   CASE DOING OF                                                        33000500
  BEGIN                                                                 33000600
  BEGIN   % CASE 0                                                      33000700
   FILESOK := FALSE;                                                    33000800
              T := MAKEFN("1T",LL);                                     33000900
              MAKEFILE(LL&IAM[33:41:7],1,T,USERCODE,0,2);               33001000
              T := T&"P"[12:42:6];                                      33001100
              MAKEFILE(LL&IAM[33:41:7],1,T,USERCODE,0,TBLSZ);           33001200
              A[BASE] := LASTRECORD := 0;                               33001300
              TABLEINFO := ..10000;                                     33001400
              TEMP := 1;                                                33001500
              DOING := 1;                                               33001600
              WAITFOR := IAM;                                           33001700
         END  CASE  0;                                                  33001800
         BEGIN   % CASE 1                                               33001900
   IF INC(A[BASE]) = 1 THEN                                             33002000
   IF EVENTS[1] = 0 THEN INC(A[BASE]) ELSE                              33002050
  BEGIN  WORK[0] := 0;  WORK[1] := TEN8;                                33002100
     DISKWRITE(EVENTS[1]);  WAITFOR := IAM;                             33002200
  END  ELSE                                                             33002300
  BEGIN IF EVENTS[1] = 0 OR A[BASE]=3 THEN        % NO USER DISK        33002310
  BEGIN MSGPOINTER := 46;                                               33002320
     FILENAME := SOURCEFILE := 0;                                       33002330
     REMOVEFILE(T:=LL&13[33:41:7],MAKEFN("1T",LL),USERCODE);            33002340
     REMOVEFILE(T,MAKEFN("1P",LL),USERCODE);                            33002350
  END ELSE                                                              33002360
  BEGIN  A[TBASE+10] := TEN8;  WRKTBLADR := EVENTS[1];                  33002400
     CANCELCKPT(A[*]);                                                  33002500
   FILESOK := TRUE;                                                     33002600
  END;                                                                  33002650
   IAM := 0;                                                            33002700
  END;                                                                  33002800
  END  CASE  1;                                                         33002900
  END  ALL  CASES;                                                      33003000
  END  SETUPFILES;                                                      33003100
%**********************************************************************%34000000
PROCEDURE     ERROR(S,LCW,A);  VALUE S; REAL S; BOOLEAN LCW; ARRAY A[0];34000100
%**********************************************************************%34000200
   BEGIN                                                                34000300
   REAL          T;                                                     34000400
   REAL STREAM PROCEDURE MKER(ERRSW,L,CHRTOG,STRTOG,MINTOG,PLSTOG);     34000500
   VALUE ERRSW,CHRTOG,STRTOG,MINTOG,PLSTOG;                             34000600
      BEGIN LABEL EXIT;                                                 34000700
      SI:=LOC ERRSW; DI:=L; DS:=5LIT"ERR: "; TALLY:=5;                  34000800
      CHRTOG(SI:=SI+7; DS:=1CHR; TALLY:=TALLY+1; JUMP OUT TO EXIT);     34000900
      STRTOG(SI:=SI+1; DS:=7CHR; TALLY:=TALLY+7; JUMP OUT TO EXIT);     34001000
      MINTOG(DS:=LIT"-"; TALLY:=TALLY+1);                               34001100
      PLSTOG(DS:=LIT"+"; TALLY:=TALLY+1);                               34001200
      MINTOG:=DI; DS:=8 DEC; DI:=MINTOG; DS:=7FILL;                     34001300
      SI:=MINTOG; DI:=MINTOG;                                           34001400
      8(IF SC=" " THEN SI:=SI+1 ELSE                                    34001500
         BEGIN DS:=CHR; TALLY:=TALLY+1; END);                           34001600
EXIT:                                                                   34001700
      MKER := TALLY;                                                    34001800
      END STREAM PROCEDURE MKER;                                        34001900
   %....................................................................34002000
   T:=MKER(ERRSW.[6:42],L,(ERRSW.[1:2]=1),(ERRSW.[6:12] GTR 0),         34002100
   (ERRSW.[1:2]=2),(ERRSW.[1:2]=3));                                    34002200
   TWXOUT(LL,L[0],T,1);                                                 34002300
   WRITEASTERISK := FALSE;                                              34002400
   T := MSGPTR;                                                         34002500
   LINECLEAR(LCW,A[*]);                                                 34002600
   MSGPTR := T;                                                         34002700
IF SCHEDULINE OR HELPFUL THEN                                           34002800
      BEGIN % TERMINATE SCHEDULE I/P & EXPLAIN WHY                      34002900
      IAM := VTEACHER; DOING := 1; % DONT SCAN INPUT                    34003000
      LLDISKREAD := MSGPTR DIV 3 + MSGFILELOC;                          34003100
      WANT := VDISKREAD;                                                34003200
      WRITEASTERISK := TRUE;                                            34003300
      END;                                                              34003400
   END ERROR PROCEDURE;                                                 34003500
%*******************************************************%               35000000
PROCEDURE     CLOSEWORKTABLE (LCW, A); BOOLEAN LCW; ARRAY A[0];         35000100
%*******************************************************%               35000200
         BEGIN                                                          35000300
LABEL          CASE1, EXIT;                                             35000400
              CASE DOING OF                                             35000500
         BEGIN                                                          35000600
         BEGIN          %  CASE 0                                       35000700
              IF GOODOBJ THEN                                           35000800
                GOODOBJ := TPCOUNT = 0;                                 35000900
              IF NOT FILESOK THEN GOERR("NO FILE",1);                   35001000
              IF TPENTRY LSS 9 THEN A[TBASE+TPENTRY] := TEN8;           35001100
              IF TPREC GTR 0 THEN                                       35001200
         BEGIN                                                          35001300
              LLDISKREAD := TPDKADR;                                    35001400
              DOING := 1;                                               35001500
              WANT  := VDISKREAD;                                       35001600
         END  ELSE GO TO CASE1                                          35001700
         END  CASE 0;                                                   35001800
    CASE1:                                                              35001900
         BEGIN          %  CASE 1                                       35002000
   CHKPT(A[*]);                                                         35002100
     % VOID                                                             35002200
   IAM := 0;                                                            35002300
  END  CASE  1;                                                         35002400
  END  ALL  CASES;                                                      35002500
 EXIT:                                                                  35002600
  END  CLOSEWORKTABLE;                                                  35002700
%***********************************************************************36000000
PROCEDURE     CHNGPSWD(LCW,A);   BOOLEAN LCW;   ARRAY A[0];             36000100
%***********************************************************************36000200
BEGIN                                                                   36000300
LABEL ERR,EXIT;                                                         36000400
STREAM PROCEDURE  OLDPSWD(W);                                           36000500
   BEGIN DI:=W; DS:=30LIT"PLEASE ENTER YOUR OLD PASSWORD"; END;         36000600
STREAM PROCEDURE  NEWPSWD(W);                                           36000700
   BEGIN DI:=W; DS:=28LIT"NEXT ENTER YOUR NEW PASSWORD"; END;           36000800
STREAM PROCEDURE  VFYPSWD(W);                                           36000900
   BEGIN DI:=W; DS:=31LIT"PLEASE REPEAT YOUR NEW PASSWORD"; END;        36001000
%.......................................................................36001100
CASE DOING OF                                                           36001200
   BEGIN                                                                36001300
      BEGIN % CASE 0 - REQUESTING CURRENT PASSWORD                      36001400
      IF SCHEDULINE THEN GOERR("CHANGE ",40);                           36001500
      OLDPSWD(WORK); TWXOUT(LL,WORK[0],30,1);                           36001600
      BLACKOUT;                                                         36001700
      CLEAR(A[BASE],2); TEMP:=3; DOING:=1;                              36001800
      WAITFOR := VINPUT;                                                36001900
      END CASE 0;                                                       36002000
   %....................................................................36002100
      BEGIN % CASE 1 - SCANNING FOR CURRENT PASSWORD                    36002200
      SCANPSWD(WORK[1],A[BASE],WORKENDADRS);                            36002300
      MATCH(A[BASE].[6:42],"       ") GO ERR;                           36002400
      NEWPSWD(WORK); TWXOUT(LL,WORK[0],28,1);                           36002500
      BLACKOUT;                                                         36002600
      DOING := 2;                                                       36002700
      WAITFOR := VINPUT;                                                36002800
      END CASE 1;                                                       36002900
   %....................................................................36003000
      BEGIN % CASE 2 - SCANNING FOR NEW PASSWORD                        36003100
      SCANPSWD(WORK[1],A[BASE+1],WORKENDADRS);                          36003200
      MATCH(A[BASE+1].[6:42],"       ") GO ERR;                         36003300
      VFYPSWD(WORK); TWXOUT(LL,WORK[0],31,1);                           36003400
      BLACKOUT;                                                         36003500
      DOING := 3;                                                       36003600
      WAITFOR := VINPUT;                                                36003700
      END CASE 2;                                                       36003800
   %....................................................................36003900
      BEGIN % CASE 3 - SCANNING FOR VERIFICATION                        36004000
      SCANPSWD(WORK[1],A[BASE+2],WORKENDADRS);                          36004100
      MATCH(A[BASE+1],A[BASE+2]) ELSE GO ERR;                           36004200
      LLDISKREAD := USERLOC;                                            36004300
      WANT := VDISKREAD;                                                36004400
      DOING := 4;                                                       36004500
      END CASE 3;                                                       36004600
   %....................................................................36004700
      BEGIN % CASE 4 - USERS/CANDE RECORD IN CORE                       36004800
      MATCH(A[BASE].[6:42],WORK[2]) ELSE GO ERR;                        36004900
      WORK[2]:=A[BASE+1].[6:42];                                        36005000
      DISKWRITE(USERLOC);                                               36005100
      LLDISKREAD := USRBASE[0]; % USERS/CANDE RECORD ZERO               36005200
      WANT := VDISKREAD;                                                36005300
      DOING := 5;                                                       36005400
      END CASE 4;                                                       36005500
   %....................................................................36005600
      BEGIN % CASE 5 - PUT NEW DATE IN USERS/CANDE FILE                 36005700
      WORK[2]:=DATE;                                                    36005800
      DISKWRITE(USRBASE[0]);                                            36005900
      IAM := 0;                                                         36006000
      END CASE 5;                                                       36006100
   END ALL CASES;                                                       36006200
GO TO EXIT;                                                             36006300
ERR:                                                                    36006400
LITOUT("BADCODE",1); MSGPTR:=21; LINECLEAR(LCW,A[*]);                   36006500
EXIT:                                                                   36006600
END PROCEDURE CHANGEPASSWORD;                                           36006700
%********************************************************************** 37001000
PROCEDURE     THYME(LCW,A);                                             37001100
%********************************************************************** 37001200
BOOLEAN       LCW;                                                      37001300
ARRAY         A[0];                                                     37001400
         BEGIN                                                          37001500
              WORK[0] := "USER IS";     BLANK(WORK[0]);                 37001600
              WORK[1] := USERCODE;      BLANK(WORK[1]);                 37001700
              WORK[2]:=DECCONV(LL); WORK[2]:=WORK[2]&"LINE "[6:18:30];  37001710
              BLANK(WORK[2]);                                           37001720
              TWXOUT(LL,WORK[0],24,CRLF);                               37001800
              WORK[0] := "TIME IS";     BLANK(WORK[0]);                 37001900
              TIMEOFDAY(WORK[1],TIMECONV(TIME(1),TRUE));                37002000
              TWXOUT(LL,WORK[0],18,CRLF);                               37002100
              WORK[0] := "C&E USE";     BLANK(WORK[0]);                 37002200
              TIMEUSED(WORK[1],TIMECONV(PTIME,FALSE));                  37002300
              TWXOUT(LL,WORK[0],33,1);                                  37002400
              WORK[0] := "EXECUTE"; BLANK(WORK[0]);                     37002500
              TIMEUSED(WORK[1],TIMECONV(ETIME,FALSE));                  37002600
              TWXOUT(LL,WORK[0],33,1);                                  37002700
              WORK[0] := "IO TIME"; BLANK(WORK[0]);                     37002800
              TIMEUSED(WORK[1],TIMECONV(IOTOT,FALSE));                  37002900
              TWXOUT(LL,WORK[0],33,1);                                  37003000
              WORK[0] := DATE;                                          37003100
              TWXOUT(LL,WORK[0],8,2);                                   37003200
              IAM := 0;                                                 37003300
          END OF THYME;                                                 37003400
%*********************************************************              38000000
PROCEDURE  CARRIAGE(LCW,A); BOOLEAN LCW; ARRAY A[0];                    38000100
%*********************************************************              38000200
           BEGIN                                                        38000300
PROCEDURE  CCCOM(LL,UC,C);VALUE LL,UC,C;REAL LL,UC,C;                   38000400
                 COMMUNICATE(-17);                                      38000500
LABEL         EXIT;                                                     38000600
REAL          T;                                                        38000700
              IF DEVICE=CONRAC OR DEVICE=TC500 OR DCP THEN              38000710
                 GOERR("CC     ",56);                                   38000720
              IF A[SREG:=BASE-A[BASE]].FF GEQ 1 THEN                    38000800
                 MATCH(A[INC(SREG)].[6:42],"LONG   ") T:=1              38000900
                 ELSE MATCH(A[SREG].[6:42],"SHORT  ")                   38001000
                 ELSE GOERR(A[SREG],8);                                 38001100
              CCCOM(LL,USERCODE,T);                                     38001200
              WRITEASTERISK := TRUE;                                    38001300
              IAM := 0;                                                 38001400
    EXIT:END  CARRIAGE;                                                 38001500
%***********************************************************            39000000
PROCEDURE  CHNGNAME(LCW,A);  BOOLEAN LCW;  ARRAY A[0];                  39000100
%***********************************************************            39000200
     BEGIN                                                              39000300
STREAM PROCEDURE NEWNAME(A);                                            39000400
     BEGIN                                                              39000500
          DI:=A; DS:=20LIT"ENTER YOUR NEW NAME-";                       39000600
     END  STREAM;                                                       39000700
STREAM PROCEDURE SAVENAME(F,T,EADRS); VALUE EADRS;                      39000800
     BEGIN                                                              39000900
LOCAL SV,DV; LABEL L;                                                   39001000
          SI:=F; DI:=T; DS:=LIT"0"; DS:=15LIT" "; DI:=DI-15;            39001100
     L:   IF SC=" " THEN BEGIN SI:=SI+1; GO L  END;                     39001200
          15(IF SC=LEFTARROW THEN                                       39001300
             BEGIN                                                      39001310
             SV:=SI; SI:=LOC SV; SI:=SI+5;                              39001320
             DV:=DI; DI:=LOC EADRS; DI:=DI+5;                           39001330
             IF 3SC=DC THEN JUMP OUT;                                   39001340
             SI:=SV; DI:=DV;                                            39001350
             END;                                                       39001360
          DS:=CHR);                                                     39001370
     END  STREAM;                                                       39001400
LABEL         EXIT;                                                     39001500
              IF SCHEDULINE THEN GOERR("CHANGE ",40);                   39001600
              CASE DOING OF                                             39001700
         BEGIN                                                          39001800
         BEGIN  %  CASE 0.                                              39001900
              NEWNAME(WORK);                                            39002000
              TWXOUT(LL,WORK[0],20,NOCRLF);                             39002100
              DOING:=1; WAITFOR:=VINPUT;                                39002200
         END  CASE 0;                                                   39002300
         BEGIN  %  CASE 1.                                              39002400
              SAVENAME(WORK[1],A[BASE],WORKENDADRS);                    39002500
              DOING:=TEMP:=2;                                           39002600
              LLDISKREAD:=USERLOC;                                      39002700
              WANT:=VDISKREAD;                                          39002800
         END  CASE 1;                                                   39002900
         BEGIN  %  CASE 2.                                              39003000
              MOVE(2,WORDS,A[BASE],WORK[4]);                            39003100
              DISKWRITE(USERLOC);                                       39003200
              IAM := 0;                                                 39003300
         END  CASE 2;                                                   39003400
         END  ALL CASES;                                                39003500
    EXIT:END  CHANGE NAME;                                              39003600
%***********************************************************************40000000
PROCEDURE MONITORR(LCW,A); BOOLEAN LCW; ARRAY A[0];                     40000100
%***********************************************************************40000200
BEGIN                                                                   40000300
REAL PC,WORD;                                                           40000400
LABEL EXIT;                                                             40000500
TEMP := 3;                                                              40000600
CASE DOING OF                                                           40000700
   BEGIN                                                                40000800
   %....................................................................40000900
      BEGIN % CASE 0 - SYNTAX CHECK                                     40001000
      PC := A[ SREG:=BASE-A[BASE] ].[18:15]; % PARAMETER COUNT          40001100
      WORD := A[SREG:=SREG+1]; % FIRST PARAMETER                        40001200
      IF PC NEQ 1 THEN % WRONG NUMBER OF PARAMETERS                     40001300
         BEGIN                                                          40001400
         IF PC=0 THEN GOERR("FILENAM",6); % FILE NAME REQUIRED          40001500
         GOERR(WORD,8); % ILLEGAL PARAMETER                             40001600
         END;                                                           40001700
      IF WORD.[3:3]=0 THEN GOERR(WORD,8); % NOT A FILE NAME             40001800
      IF WORD.[3:3] GTR 6 THEN GOERR(WORD,42); % 6 CHARACTERS MAX       40001900
      IF FINDAWORD(WORD,RESWRDTABLE[1],NUMOFRESWRDS) NEQ 0 THEN         40002000
      GOERR(WORD,29);                                                   40002100
      A[BASE] := WORD := WORD.[6:42]; % STORE FILE NAME                 40002200
      A[BASE+1] := A[BASE+2] := 0; % RESET EVENTS COUNTER AND ERR. LOC. 40002300
      FIND(LL&IAM[33:41:7],0,WORD,USERCODE,USERCODE);                   40002400
      FIND(LL&IAM[33:41:7],0,WORD.[6:36],USERCODE,USERCODE);            40002500
      DOING := 1; WAITFOR := IAM;                                       40002600
      END; % CASE 0                                                     40002700
   %....................................................................40002800
      BEGIN % CASE 1 - RESULTS OF DIRECTORY SEARCH                      40002900
      IF EVENTS[1] GEQ 0 THEN % FILE WAS IN DIRECTORY                   40003000
      IF A[BASE+1]=0 THEN   % THIS IS FIRST FILE FOUND                  40003100
      IF A[BASE+2]=0 THEN A[BASE+1]:=A[BASE] % SOURCE VERSION           40003200
      ELSE A[BASE+1]:=A[BASE].[6:36]; % OBJECT VERSION                  40003300
      IF A[BASE+2]:=A[BASE+2]+1 LSS 2 THEN WAITFOR:=IAM ELSE            40003400
      IF A[BASE+1] NEQ 0 THEN GOERR(A[BASE+1],3) ELSE                   40003500
         BEGIN                                                          40003600
         MAKEFILE(LL&IAM[33:41:7],1,A[BASE],USERCODE,8,200);            40003700
         DOING:=2; WAITFOR:=IAM;                                        40003800
         END;                                                           40003900
      END; % CASE 1                                                     40004000
   %....................................................................40004100
      BEGIN % CASE 2 - ADJUST NEW FILE HEADER                           40004200
      IF EVENTS[1] = 0 THEN GOERR("NO DISK",46);                        40004300
      LLDISKREAD:=A[BASE+1]:=EVENTS[2]; % HEADER ADDRESS                40004400
      DOING := 3; WANT := VDISKREAD;                                    40004500
      END; % CASE 2                                                     40004600
   %....................................................................40004700
      BEGIN % CASE 3 - HEADER IN CORE                                   40004800
      WORK[0]:=10 & 30[30:36:12] & 300[15:33:15] & 10[1:34:14];         40004900
      WORK[3].[2:10] := 7; % SAVE FACTOR                                40005000
      WORK[7] := -1; % EOF POINTER                                      40005100
      WORK[9].[43:5] := 20; % NUMBER OF ROWS                            40005200
      DISKWRITE(A[BASE+1]); % REPLACE HEADER                            40005300
      LLDISKREAD:=USERLOC; % USERS/CANDE RECORD ADDRESS                 40005400
      DOING := 4; WANT := VDISKREAD;                                    40005500
      END; % CASE 3                                                     40005600
   %....................................................................40005700
      BEGIN % CASE 4 - USERS/CANDE RECORD IN CORE                       40005800
      MONITORBIT := TRUE;                                               40005900
      WORK[12] := A[BASE]; % MONITOR FILE NAME                          40006100
      DISKWRITE(USERLOC); % REPLACE RECORD                              40006200
      IAM := 0;                                                         40006300
      END; % CASE 4                                                     40006400
   END ALL CASES;                                                       40006500
EXIT:                                                                   40006600
END PROCEDURE MONITORR;                                                 40006700
%***********************************************************************41000000
PROCEDURE SETIT(LCW,A); BOOLEAN LCW; ARRAY A[0];                        41000100
%***********************************************************************41000200
BEGIN                                                                   41000300
REAL I,H1,H2,NC,PTR,CHAR,WORD,MAXPTR,NCHRS,TYPE,CLASS,MAXCHARS,SETBIT,X;41000400
REAL PRM1,PRM2,PRM3,LLUSED;                                             41000500
BOOLEAN HEX,XMIT,RECV;                                                  41000600
DEFINE ERR(ERR1,ERR2,ERR3)=                                             41000700
   BEGIN                                                                41000800
   ERRSW := ERR1 & ERR2[1:43:5]; MSGPTR := ERR3;                        41000900
   IAM := VERROR; GO TO EXIT;                                           41001000
   END#;                                                                41001100
LABEL CASE2,CASE5,CHARACTERS,NUMBERS,NAMES,STOP1,STOP2,STOP3,COMM,EXIT; 41001200
LABEL SPO;                                                              41001210
PROCEDURE DCPCOMM(LL,P1,P2,P3); VALUE LL,P1,P2,P3; REAL LL,P1,P2,P3;    41001220
COMMUNICATE(-17);                                                       41001230
%.......................................................................41001300
REAL STREAM PROCEDURE LOOKUP(ASCII,CHAR); VALUE CHAR;                   41001400
%.......................................................................41001500
   BEGIN % CONVERSION TABLE - BCL TO ASCII                              41001600
   SI:=ASCII; DI:=LOC LOOKUP; DI:=DI+6; CHAR(SI:=SI+2); DS:=2CHR;       41001700
   END;                                                                 41001800
%.......................................................................41001900
BOOLEAN STREAM PROCEDURE NEXTCHRS(PTR,WORD,NCHRS,FRST,MAXPTR);          41002000
%.......................................................................41002100
VALUE NCHRS,FRST,MAXPTR;                                                41002200
% GET NEXT CHARACTERS FROM INPUT STRING AND STORE RIGHT JUSTIFIED       41002300
% RETURNS A VALUE OF FALSE AT END OF RECORD - OTHERWISE, TRUE           41002400
% SKIP LEADING BLANKS WHEN "FRST" IS TRUE                               41002500
   BEGIN LOCAL SV,DV; LABEL LBL,EXIT;                                   41002600
   SI:=PTR; SI:=SI+5; SI:=SC;                                           41002700
   FRST(LBL: IF SC NEQ " " THEN JUMP OUT; SI:=SI+1; GO LBL);            41002800
   DI:=WORD; DS:=8LIT"0"; NCHRS(DI:=DI-1);                              41002900
   NCHRS(IF SC=LEFTARROW THEN % CHECK FOR END OF RECORD                 41003000
      BEGIN                                                             41003100
      SV:=SI; SI:=LOC SV; SI:=SI+5;                                     41003200
      DV:=DI; DI:=LOC MAXPTR; DI:=DI+5;                                 41003300
      IF 3SC=DC THEN                                                    41003400
         BEGIN                                                          41003500
         SI:=SV; DI:=DV; DS:=LIT LEFTARROW; JUMP OUT TO EXIT;           41003600
         END;                                                           41003700
      SI:=SV; DI:=DV;                                                   41003800
      END;                                                              41003900
   IF SC=" " THEN JUMP OUT TO EXIT; % MUST BE VISIBLE CHARACTER         41004000
   DS:=CHR);                                                            41004100
   TALLY:=1;                                                            41004200
EXIT:                                                                   41004300
   SV:=SI; SI:=LOC SV; DI:=PTR; DS:=WDS;                                41004400
   NEXTCHRS:=TALLY;                                                     41004500
   END STREAM PROCEDURE NEXTCHARS;                                      41004600
%.......................................................................41004700
%.......................................................................41004800
CASE DOING OF                                                           41004900
   BEGIN                                                                41005000
   %....................................................................41005100
      BEGIN % CASE 0 - SYNTAX ANALYSIS                                  41005200
      PTR:=WORKADRS; MAXPTR:=WORKENDADRS; NC:=0; LLUSED:=LL; % SETUP    41005300
      WHILE (TYPE:=SCAN(PTR,WORD,"9",MAXPTR,X)) NEQ 5 DO                41005400
         BEGIN                                                          41005500
         IF TYPE NEQ 1 THEN  % NOT ALPHA STRING                         41005600
            BEGIN                                                       41005610
            IF TYPE=2 AND LL=0 AND DCP THEN % LINE OR STATION FROM SPO  41005620
               BEGIN                                                    41005630
               LLUSED := WORD & 1[2:47:1]; % ASSUME STATION NUMBER      41005640
               GO TO SPO;                                               41005680
               END; % SPECIAL SPO INSTRUCTION                           41005690
            ERR(WORD,WORD.[1:5],8); % INVALID IF NOT SPO AND NUMBER     41005700
            END;                                                        41005710
         NC := NC + 1; WORD.[1:5] := 0;                                 41005730
         MATCH(WORD,"SET    ") SETBIT := 1                              41005800
         ELSE MATCH(WORD,"RESET  ") SETBIT := 0                         41005900
         ELSE MATCH(WORD,"CONCISE") CONCISEBIT := SETBIT                41006000
         ELSE MATCH(WORD,"HELPFUL") HELPFULBIT := SETBIT                41006100
         ELSE MATCH(WORD,"QUICKLO") QUICKLOGBIT:= SETBIT                41006200
         ELSE MATCH(WORD,"QUICKBY") QUICKBYEBIT:= SETBIT                41006300
         ELSE MATCH(WORD,"NOSTOP ")                                     41006400
            BEGIN NOSTOP:=BOOLEAN(SETBIT); IAM:=0; GO EXIT; END         41006410
         ELSE MATCH(WORD,"ALLOWMS") ALLOWMSGBIT:=SETBIT                 41006500
         %                                                              41006600
         %                                                              41006700
         %                                                              41006800
         ELSE MATCH(WORD,"MONITOR") GO TO CASE2 % SET/RESET MONITOR FILE41006900
         ELSE IF DCP THEN GO TO CASE5 % DCP                             41007000
         ELSE ERR(WORD,7,8);                                            41007100
         END WHILE STATEMENT;                                           41007200
      IF NC LSS 2 THEN ERR("INCMPLT",7,8);                              41007300
      LLDISKREAD := USERLOC; % USERS/CANDE RECORD ADDRESS               41007400
      WANT := VDISKREAD;                                                41007500
      DOING := 1;                                                       41007600
      END CASE 0;                                                       41007700
   %....................................................................41007800
      BEGIN % CASE 1 - USERS/CANDE RECORD IN CORE                       41007900
      WORK[11] := OPTIONBITS; % PUT NEW SETTINGS IN RECORD              41008000
      DISKWRITE(USERLOC); % REPLACE USERS/CANDE RECORD                  41008100
      IAM := 0;                                                         41008200
      WRITEASTERISK := TRUE;                                            41008300
      END CASE 1;                                                       41008400
   %....................................................................41008500
      BEGIN % CASE 2 - MONITOR SET/RESET REQUEST                        41008600
CASE2: IF NOT BOOLEAN(SETBIT) THEN % RESET MONITOR                      41008700
         BEGIN                                                          41008800
         MONITORBIT := FALSE;                                           41008900
         IAM := 0;                                                      41009000
         WRITEASTERISK := TRUE;                                         41009100
         GO TO EXIT;                                                    41009200
         END;                                                           41009300
      LLDISKREAD := USERLOC; % USERS/CANDE RECORD ADDRESS               41009400
      WANT := VDISKREAD;                                                41009500
      DOING := 3;                                                       41009600
      END CASE 2;                                                       41009700
   %....................................................................41009800
      BEGIN % CASE 3 - USERS/CANDE RECORD IN CORE                       41009900
      IF WORK[12]=0 THEN ERR("MON.FIL",7,2); % NO FILE NAME LISTED      41010000
      A[BASE] := WORK[12]; % SAVE MONITOR FILE NAME                     41010100
      FIND(LL&IAM[33:41:7],0,A[BASE],USERCODE,USERCODE); % SEARCH       41010200
      TEMP := 2; DOING := 4; WAITFOR := IAM;                            41010300
      END CASE 3;                                                       41010400
   %....................................................................41010500
      BEGIN % CASE 4 - RESULTS OF DIRECTORY SEARCH                      41010600
      IF EVENTS[1] LEQ 0 THEN ERR(A[BASE],6,2); % NOT ON DISK           41010700
      MONITORBIT := TRUE;                                               41010800
      LITOUT(A[BASE],NOCRLF); LITOUT(" MONITR",CRLF);                   41010900
      IAM := 0;                                                         41011000
      END CASE 4;                                                       41011100
   %....................................................................41011200
      BEGIN % CASE 5 - DCP REQUESTS                                     41011300
SPO:  WHILE(TYPE:=SCAN(PTR,WORD,"9",MAXPTR,X)) NEQ 5 DO                 41011400
         BEGIN                                                          41011500
         IF TYPE NEQ 1 THEN % NOT ALPHA STRING                          41011600
            BEGIN                                                       41011700
            IF LL=0 THEN % MESSAGE FROM SPO (LINE AND STATION)          41011800
               BEGIN                                                    41011900
               IF TYPE=2 THEN LLUSED:=-0&LLUSED[24:40:8]&WORD[32:40:8]; 41012000
               GO TO SPO;                                               41012100
               END; % IF SPO MESSAGE                                    41012200
            ERR(WORD,WORD.[1:5],8); % NOT FROM SPO                      41012300
            END ELSE WORD.[1:5]:=0;                                     41012400
CASE5:   MATCH(WORD,"STATION") % OPTIONAL WORD                          41012500
         ELSE MATCH(WORD,"TRANSMI") RECV:=NOT(XMIT:=TRUE)               41012600
         ELSE MATCH(WORD,"RECEIVE") XMIT:=NOT(RECV:=TRUE)               41012700
         ELSE MATCH(WORD,"NUMBER ")                                     41012800
            BEGIN CLASS := 17; MAXCHARS := 3; GO TO NUMBERS;    END     41012900
         ELSE MATCH(WORD,"INTERRU")                                     41013000
            BEGIN CLASS := 1;  MAXCHARS := 1; GO TO CHARACTERS; END     41013100
         ELSE MATCH(WORD,"END    ")                                     41013200
            BEGIN CLASS := 2;  MAXCHARS := 1; GO TO CHARACTERS; END     41013300
         ELSE MATCH(WORD,"BACKSPA")                                     41013400
            BEGIN CLASS := 3;  MAXCHARS := 1; GO TO CHARACTERS; END     41013500
         ELSE MATCH(WORD,"DELETE ")                                     41013600
            BEGIN CLASS := 4;  MAXCHARS := 1; GO TO CHARACTERS; END     41013700
         ELSE MATCH(WORD,"ABORT  ")                                     41013800
            BEGIN CLASS := 5;  MAXCHARS := 1; GO TO CHARACTERS; END     41013900
         ELSE MATCH(WORD,"EOR    ")                                     41014000
            BEGIN CLASS := 6;  MAXCHARS := 1; GO TO CHARACTERS; END     41014100
         ELSE IF LL=0 THEN                                              41014200
         MATCH(WORD,"ADDRESS")                                          41014300
            BEGIN CLASS := 26; MAXCHARS := 3; GO TO CHARACTERS; END     41014400
         ELSE MATCH(WORD,"ADAPTER")                                     41014500
            BEGIN CLASS := 25;                GO TO NAMES;      END     41014600
         ELSE MATCH(WORD,"TYPE   ")                                     41014700
            BEGIN CLASS := 14;                GO TO NAMES;      END;    41014800
         ERR(WORD,7,8);                                                 41014900
         END WHILE STATEMENT;                                           41015000
      ERR("INCMPLT",7,8);                                               41015100
CHARACTERS:                                                             41015200
      I := PTR; % SAVE POINTER ADDRESS                                  41015300
      IF NOT(RECV OR XMIT) THEN RECV:=TRUE; % DEFAULT OPTION            41015400
      IF TYPE:=SCAN(I,WORD,"9",MAXPTR,X)=5 THEN ERR("INCMPLT",7,8);     41015500
      IF TYPE = 1 THEN % ALPHA WORD                                     41015600
         BEGIN                                                          41015700
         MATCH(WORD.[6:42],"TO     ") % OPTIONAL WORD                   41015800
            BEGIN PTR := I; GO TO CHARACTERS; END;                      41015900
         MATCH(WORD.[6:42],"HEX    ")                                   41016000
            BEGIN PTR:=I; HEX:=TRUE; GO TO CHARACTERS; END;             41016100
         END; % IF ALPHA WORD                                           41016200
      WORD := NCHRS := 0; NC:=1+REAL(HEX); % INITIALIZE                 41016300
      FOR I:=1 STEP 1 UNTIL MAXCHARS DO % SCAN INPUT CHARACTERS         41016400
         BEGIN                                                          41016500
         IF NOT NEXTCHRS(PTR,CHAR,NC,(I=1),MAXPTR) THEN GO STOP1;       41016600
         NCHRS := NCHRS + 1;                                            41016700
         IF HEX THEN % HEXADECIMAL INPUT                                41016800
            BEGIN                                                       41016900
            IF (H1:=CHAR.[36:6]) GTR 7 THEN ERR(H1,8,8); % NOT 7 BIT CD 41017000
            IF (H2:=CHAR.[42:6]) GTR 9 THEN % NOT DIGIT                 41017100
            IF NOT (H2 GTR 16 AND H2 LSS 23) THEN ERR(H2,8,8) % NOT HEX 41017200
            ELSE H2 := H2 - 7; % HEX EQUIVALENT OF LETTERS              41017300
            WORD := H2 & H1[40:44:4] & WORD[16:24:24];                  41017400
            END % IF HEX                                                41017500
         ELSE WORD := LOOKUP(ASCII,CHAR) & WORD[16:24:24];              41017600
         END I LOOP;                                                    41017700
STOP1: IF NCHRS=0 THEN ERR("INCMPLT",7,8);                              41017800
      IF CLASS LSS 7 THEN % SET STATION CHARACTERS - CLASS 18           41017900
         BEGIN                                                          41018000
         PRM1 := 0 & 18[1:41:7] & (REAL(NOT FALSE))[16:40:8];           41018100
         IF CLASS=1 THEN % INTERRUPT CHARACTER                          41018200
            BEGIN PRM2 := 0 & WORD[01:41:7]; PRM1.[18:1]:=0; END        41018300
         ELSE IF CLASS=2 THEN % EOT CHARACTER                           41018400
            BEGIN PRM2 := 0 & WORD[08:40:8]; PRM1.[19:1]:=0; END        41018500
         ELSE IF CLASS=3 THEN % BACKSPACE CHARACTER                     41018600
            BEGIN PRM2 := 0 & WORD[16:40:8]; PRM1.[20:1]:=0; END        41018700
         ELSE IF CLASS=4 THEN % DELETION CHARACTER                      41018800
            BEGIN PRM2 := 0 & WORD[24:40:8]; PRM1.[21:1]:=0; END        41018900
         ELSE IF CLASS=5 THEN % ABORT CHARACTER                         41019000
            BEGIN PRM2 := 0 & WORD[32:40:8]; PRM1.[22:1]:=0; END        41019100
         ELSE IF CLASS=6 THEN % EOR CHARACTER                           41019200
            BEGIN PRM2 := 0 & WORD[40:40:8]; PRM1.[23:1]:=0; END;       41019300
         GO TO COMM;                                                    41019400
         END; % IF CLASS LSS 7                                          41019500
      IF CLASS=26 THEN % SET STATION ADDRESS                            41019600
         BEGIN                                                          41019700
         PRM1 := 0 & CLASS[1:41:7] & REAL(NOT FALSE)[16:40:8] &         41019800
         REAL(NOT XMIT)[22:47:1] & REAL(NOT RECV)[23:47:1];             41019900
         IF XMIT THEN PRM2:=WORD ELSE PRM3:=WORD;                       41020000
         GO TO COMM;                                                    41020100
         END; % IF SETTING STATION ADDRESS                              41020200
NUMBERS:                                                                41020300
      I := PTR; % SAVE POINTER ADDRESS                                  41020400
      IF NOT(RECV OR XMIT) THEN RECV:=TRUE; % DEFAULT OPTION            41020500
      IF TYPE:=SCAN(I,WORD,"9",MAXPTR,X)=5 THEN ERR("INCMPLT",7,8);     41020600
      IF TYPE=1 THEN MATCH(WORD.[6:42],"TO     ") % OPTIONAL WORD       41020700
         BEGIN PTR := I; GO TO NUMBERS; END;                            41020800
      WORD := NCHRS := 0;                                               41020900
      FOR I:=1 STEP 1 UNTIL MAXCHARS DO % SCAN INPUT CHARACTERS         41021000
         BEGIN                                                          41021100
         IF NOT NEXTCHRS(PTR,CHAR,1,(I=1),MAXPTR) THEN GO STOP2;        41021200
         NCHRS := NCHRS + 1;                                            41021300
         IF CHAR GTR 9 THEN ERR(CHAR,8,8); % NOT A DIGIT                41021400
         WORD := LOOKUP(ASCII,CHAR) & WORD[16:24:24];                   41021500
         END I LOOP;                                                    41021600
STOP2: IF NCHRS = 0 THEN ERR("INCMPLT",7,8);                            41021700
      PRM1 := 0 & CLASS[1:41:7] & REAL(NOT FALSE)[16:40:8] &            41021800
      REAL(NOT XMIT)[22:47:1] & REAL(NOT RECV)[23:47:1];                41021900
      PRM2:=IF RECV THEN WORD ELSE 0 & WORD[1:25:23];                   41022000
      GO TO COMM;                                                       41022100
NAMES:                                                                  41022200
      IF TYPE:=SCAN(PTR,WORD,"9",MAXPTR,X)=5 THEN ERR("INCMPLT",7,8);   41022300
      IF TYPE=1 THEN MATCH(WORD.[6:42],"TO     ") GO NAMES; % OPTIONAL  41022400
      IF TYPE NEQ 2 THEN ERR(WORD,WORD.[1:5],8); % NOT A NUMBER         41022500
      PRM1 := 0 & CLASS[1:41:7] & REAL(NOT FALSE)[16:40:8];             41022600
      PRM2 := WORD.[6:42];                                              41022700
COMM:                                                                   41022800
      DCPCOMM(LLUSED,PRM1,PRM2,PRM3);                                   41022900
      WRITEASTERISK:=TRUE;                                              41023000
      IAM := 0;                                                         41023100
      END CASE 5;                                                       41023200
   END ALL CASES;                                                       41023300
EXIT:                                                                   41023400
END PROCEDURE SETIT;                                                    41023500
%***********************************************************************42000000
PROCEDURE SSFILE(LCW,A); BOOLEAN LCW; ARRAY A[0];                       42000100
%***********************************************************************42000200
BEGIN % PRINT CONTENTS OF SPECIFIED FILE ON TERMINALS                   42000300
REAL I,LIN,PC,REKS,LINMAX,WORD,MAXSREG;                                 42000400
LABEL EXIT;                                                             42000500
CASE DOING OF                                                           42000600
   BEGIN                                                                42000700
      BEGIN % CASE 0 - SYNTAX ANALYSIS                                  42000800
      IF LL NEQ 0 THEN GOERR("SSFILE ",13);                             42000900
      SREG := BASE - A[BASE];                                           42001000
      PC := A[SREG].[18:15]; MAXSREG := SREG + PC;                      42001100
      A[BASE+3] := 999; % FLAG FOR LINE NUMBER INPUT                    42001200
      FOR SREG := SREG+1 STEP 1 UNTIL MAXSREG DO                        42001300
         BEGIN % PICK UP THE PARAMETERS                                 42001400
         WORD:=A[SREG];                                                 42001500
         IF WORD.[1:5]=0 THEN % LINE NUMBER GIVEN                       42001600
            BEGIN                                                       42001700
            IF WORD GTR MAXLINES THEN GOERR("NOT ON ",8);               42001800
            IF LINE[WORD,UCLOC]=0 THEN GOERR("NOT ON ",8);              42001900
            A[BASE+3] := WORD;                                          42002000
            END                                                         42002100
         ELSE IF WORD.[3:3] GTR 0 THEN % FILE NAME                      42002200
            BEGIN                                                       42002300
            IF (REKS:=REKS+1) GTR 2 THEN GOERR(WORD,8);                 42002400
            A[BASE+REKS] := WORD.[6:42];                                42002500
            END                                                         42002600
         ELSE IF WORD NEQ "/" THEN GOERR(WORD,8);                       42002700
         END FOR STATEMENT;                                             42002800
      IF REKS NEQ 2 THEN GOERR("FIL NAM",8);                            42002900
      FIND(LL&IAM[33:41:7],0,A[BASE+1],A[BASE+2],"SITE   ");            42003000
      TEMP := 4; DOING := 1; WAITFOR := IAM;                            42003100
      END CASE 0;                                                       42003200
   %....................................................................42003300
      BEGIN % CASE 1 - RESULTS OF DIRECTORY SEARCH                      42003400
      IF EVENTS[1] LSS 0 THEN % NOT ON DISK                             42003500
         BEGIN                                                          42003600
         WORK[0]:=A[BASE+1]; WORK[1]:=A[BASE+2];                        42003700
         WORK[2]:=" NOT ON"; WORK[3]:="DISK   ";                        42003800
         FOR I:=0,1,2,3 DO BLANK(WORK[I]);                              42003900
         TWXOUT(LL,WORK[0],32,1);                                       42004000
         IAM := 0;                                                      42004100
         GO EXIT;                                                       42004200
         END IF NO FILE;                                                42004300
      LLDISKREAD:=EVENTS[2].[18:15]; % HEADER ADDRESS                   42004400
      WANT := VDISKREAD;                                                42004500
      DOING := 2;                                                       42004600
      END CASE 1;                                                       42004700
   %....................................................................42004800
      BEGIN % CASE 2 - HEADER IN CORE                                   42004900
      IF (SPOCNTRL:=WORK[7]+1) GTR (I:=WORK[8]|3) THEN SPOCNTRL:=I;     42005000
      IF (A[BASE]:=WORK[10])=0 OR SPOCNTRL=0 THEN % NO RECORDS          42005100
         BEGIN IAM:=0; GO EXIT; END;                                    42005200
      A[BASE+1]:=0; % INITIALIZE SEGMENT POINTER                        42005300
      LLDISKREAD := A[BASE]; % ADDRESS OF FIRST SEGMENT                 42005400
      WANT := VDISKREAD;                                                42005500
      DOING := 3;                                                       42005600
      END CASE 2;                                                       42005700
   %....................................................................42005800
      BEGIN % CASE 3 - READ DISKFILE                                    42005900
      A[BASE+1] := A[BASE+1] + 1; % INCREMENT SEGMENT COUNTER           42006000
      REKS:=IF (SPOCNTRL:=SPOCNTRL-3) GEQ 0 THEN 3 ELSE 3+SPOCNTRL;     42006100
      LIN := 1; LINMAX := MAXLINES;                                     42006200
      IF A[BASE+3] LSS 999 THEN LIN:=LINMAX:=A[BASE+3]; % NUMBER GIVEN  42006300
      FOR LIN:=LIN STEP 1 UNTIL LINMAX DO IF LINE[LIN,UCLOC] NEQ 0 THEN 42006400
        FOR I:=1 STEP 1 UNTIL REKS DO                                   42006500
          IF I=1 THEN TWXOUT(LIN,WORK[00],72,1) ELSE                    42006600
          IF I=2 THEN TWXOUT(LIN,WORK[10],72,1) ELSE                    42006700
          IF I=3 THEN TWXOUT(LIN,WORK[20],72,1);                        42006800
      IF SPOCNTRL LEQ 0 THEN % END OF FILE OR DISK ROW                  42006900
         BEGIN IAM:=0; GO EXIT; END;                                    42007000
      LLDISKREAD := A[BASE] + A[BASE+1]; % NEXT SEGMENT ADDRESS         42007100
      WANT := VDISKREAD;                                                42007200
      END CASE 3;                                                       42007300
   END ALL CASES;                                                       42007400
EXIT:                                                                   42007500
END PROCEDURE SSFILE;                                                   42007600
%***********************************************************************43000000
PROCEDURE EQUATE(LCW,A); BOOLEAN LCW; ARRAY A[0];                       43000100
%***********************************************************************43000200
   BEGIN                                                                43000300
   REAL I,WORD,UNIT,TYPE,NAM,NAM1,NAM2,VERBV,MAXSREG;                   43000400
   BOOLEAN DSK,OBJ,BKUP,EQLTOG,FILTOG,LIBTOG,CHECKTYPE;                 43000500
   LABEL WAIT,ERR,EXIT;                                                 43000600
   DEFINE ENTRY = A[BASE+1]#, THISESP = A[BASE+2]#;                     43000700
   %....................................................................43000800
   STREAM PROCEDURE FILEID(ADRS,ARAY); VALUE ADRS;                      43000900
   %....................................................................43001000
   BEGIN                                                                43001100
   SI:=ADRS; DI:=ARAY; DI:=DI+1;                                        43001200
   63(IF SC=ALPHA THEN ELSE JUMP OUT; DS:=CHR; TALLY:=TALLY+1);         43001300
   ADRS:=TALLY; SI:=LOC ADRS; SI:=SI+7; DI:=ARAY; DS:=CHR;              43001400
   END STREAM PROCEDURE FILEID;                                         43001500
CASE DOING OF                                                           43001600
BEGIN                                                                   43001700
BEGIN % CASE 0 .........................................................43001800
   IF NOT CONTINUEBIT THEN % FIRST CALL ON THE ROUTINE                  43001900
      BEGIN                                                             43002000
      CONTINUEBIT := TRUE;                                              43002100
      FIRSTESP:=THISESP:=ESP1; % SAVE FIRST ESP RECORD ADDRESS          43002200
      ENTRY:=0; TEMP:=3; CLEAR(L[0],29); L[14]:=..14;                   43002300
      SREG := BASE - A[BASE]; MAXSREG := SREG + A[SREG].[18:15];        43002400
      END % IF FIRST CALL                                               43002500
   ELSE                                                                 43002600
      BEGIN                                                             43002700
      BASE := BASE + 3; % SHIFT UP TO SAVE STACK VALUES                 43002800
      SCANNER(WORKADRS,A[*],LCW,WORKENDADRS);                           43002900
      BASE := (I:=BASE) -3; % RE-ADJUST BASE FOR THIS PROCEDURE         43003000
      IF BOOLEAN(A[I].[17:1]) THEN % ERROR DURING SCAN                  43003100
         BEGIN                                                          43003200
         WORD := A[I+2]; MSGPTR := 65; GO TO ERR;                       43003300
         END;                                                           43003400
      IF (TYPE:=A[I].[3:3]) NEQ 1 THEN % NOT A VERB                     43003500
         BEGIN                                                          43003600
         IF TYPE=0 OR TYPE=5 THEN GO WAIT; % COMMENT OR NULL            43003700
         IF TYPE=4 THEN % SSMSG                                         43003800
            BEGIN                                                       43003900
            BASE:=I; SSMSG; BASE:=I-3; LITOUT("#      ",1); GO WAIT;    43004000
            END;                                                        43004100
         WORD:=IF TYPE=2 THEN A[I+1] ELSE A[I+2]; % NUMBER OR SPEC CHR  43004200
         MSGPTR := 65; GO TO ERR;                                       43004300
         END; % IF NOT A VERB                                           43004400
      IF (VERBV := A[I+1].[40:8]) = VRUN OR VERBV = VEXECUTE THEN       43004500
         BEGIN                                                          43004600
         PARAM := A[I+1].[18:15]+1; TEMP := 1;                          43004700
         MOVE(PARAM+1,WORDS,A[I],A[BASE]); % SHIFT LEFT FOR "DOIT"      43004800
         WANT := VERBV; IAM := 0; CONTINUEBIT:=FALSE;                   43004900
         DOING := IF VERBV=VRUN THEN 4 ELSE 0;                          43005000
         GO TO EXIT;                                                    43005100
         END;                                                           43005200
      IF VERBV NEQ VEQUATE THEN % WRONG VERB                            43005300
         BEGIN                                                          43005400
         WORD := VERBTABLE[A[I+1].[9:9]]; MSGPTR := 65;                 43005500
         GO TO ERR;                                                     43005600
         END;                                                           43005700
      IF ENTRY=0 THEN % STARTING NEW SEGMENT                            43005800
         BEGIN                                                          43005900
         DISKWAIT(1,L,30,THISESP);                                      43006000
         L[29]:=ESP1; % ESTABLISH LINK TO NEXT SEGMENT                  43006100
         DISKWAIT(0,L,30,THISESP);                                      43006200
         CLEAR(L[0],29); L[14]:=..14;                                   43006300
         THISESP:= ESP1; % ADDRESS OF NEXT SEGMENT TO BE USED           43006400
         END % IF ENTRY = 0                                             43006500
      ELSE DISKWAIT(1,L,30,THISESP); % RECOVER PREVIOUS VALUES          43006600
      SREG := I+1; MAXSREG := SREG+A[SREG].[18:15];                     43006700
      END; % IF NOT THE FIRST CALL                                      43006800
   %............................................SYNTAX CHECK............43006900
   UNIT := 12; MSGPTR := 8; FILTOG:=TRUE; % INITIALIZE VALUES           43007000
   FOR SREG := SREG + 1 STEP 1 UNTIL MAXSREG DO                         43007100
      BEGIN % EXAMINE INPUT STRING                                      43007200
      %.......................................NUMERIC...................43007300
      IF (WORD:=A[SREG]).[1:5]=0 THEN % NUMERIC PARAMETER               43007400
         BEGIN                                                          43007500
         IF EQLTOG AND WORD=0 THEN OBJ:=TRUE ELSE GO ERR;               43007600
         END % IF NUMERIC                                               43007700
      %.......................................ALPHA.....................43007800
      ELSE IF WORD.[3:3] GTR 0 THEN % ALPHA STRING                      43007900
         BEGIN                                                          43008000
         WORD := (NAM:=WORD).[6:42];                                    43008100
         IF FILTOG THEN % LOOKING FOR INTERNAL NAME                     43008200
            BEGIN                                                       43008300
            FILEID(SCANPTR[SREG-SBASE],L[ENTRY+4]); % INTERNAL NAME     43008400
            FILTOG := FALSE;                                            43008500
            END % IF FILTOG                                             43008600
         ELSE IF EQLTOG THEN % "=" PRECEEDED THIS WORD                  43008700
            BEGIN                                                       43008800
            L[ENTRY+1]:=IF OBJ THEN WORD.[6:36] ELSE WORD;              43008900
            NAM2:=NAM; L[ENTRY]:=0; % ASSUME ENTRY IS FID               43009000
            EQLTOG := NOT(CHECKTYPE:=TRUE);                             43009100
            END % IF EQLTOG                                             43009200
         ELSE IF LIBTOG THEN % "/" PRECEEDED THIS WORD                  43009300
            BEGIN                                                       43009400
            L[ENTRY]:=L[ENTRY+1]; NAM1:=NAM2;                           43009500
            L[ENTRY+1]:=WORD; NAM2:=NAM;                                43009600
            LIBTOG := FALSE;                                            43009700
            END % IF LIBTOG                                             43009800
         ELSE IF CHECKTYPE THEN % CHECK HARDWARE TYPE                   43009900
            BEGIN                                                       43010000
                 MATCH(WORD,"BACKUP ") BKUP:=TRUE                       43010100
            ELSE MATCH(WORD,"BACK   ")                                  43010200
               BEGIN                                                    43010300
               IF SREG LSS MAXSREG THEN                                 43010400
               IF A[SREG+1].[3:3]=2 THEN                                43010500
               MATCH(A[SREG+1].[6:42],"UP     ")                        43010600
                  BEGIN                                                 43010700
                  BKUP:=TRUE; SREG:=SREG+1;                             43010800
                  END;                                                  43010900
               END % IF "BACK UP"                                       43011000
            ELSE MATCH(WORD,"REMOTE ") UNIT:=14                         43011100
            ELSE MATCH(WORD,"DISK   ")                                  43011200
               BEGIN                                                    43011300
               UNIT := IF BKUP THEN 15 ELSE 12;                         43011400
               BKUP := FALSE;                                           43011500
               END                                                      43011600
            ELSE MATCH(WORD,"SERIAL ") UNIT := 12                       43011700
            ELSE MATCH(WORD.[6:30],"PRINT") UNIT:=1                     43011800
            ELSE MATCH(WORD,"PUNCH  ") UNIT := 0                        43011900
            ELSE MATCH(WORD,"CARD   ") UNIT := 0                        43012000
            ELSE MATCH(WORD,"RANDOM ") UNIT := 10                       43012100
            ELSE MATCH(WORD,"UPDATE ") UNIT := 13                       43012200
            ELSE MATCH(WORD,"PAPER  ") UNIT := 7                        43012300
            ELSE MATCH(WORD,"SPO    ") UNIT := 11                       43012400
            ELSE MATCH(WORD,"TAPE   ")                                  43012500
               BEGIN                                                    43012600
               IF UNIT NEQ 7 THEN % PAPER TAPE                          43012700
               UNIT := IF BKUP THEN 6 ELSE 2;                           43012800
               BKUP := FALSE;                                           43012900
               END % IF TAPE                                            43013000
            ELSE GO ERR;                                                43013100
            END % IF CHECKTYPE                                          43013200
         ELSE GO ERR;                                                   43013300
         END % IF ALPHA STRING                                          43013400
      ELSE                                                              43013500
      %.......................................SPECIAL CHR...............43013600
         BEGIN                                                          43013700
         IF WORD = "=" THEN EQLTOG := TRUE                              43013800
         ELSE IF WORD="/" THEN LIBTOG := TRUE                           43013900
         ELSE GO ERR;                                                   43014000
         END; %IF SPECIAL CHARACTER                                     43014100
      END WHILE STATEMENT;                                              43014200
   %..........................................END SCAN..................43014300
   IF NOT CHECKTYPE THEN % INCOMPLETE REQUEST                           43014400
      BEGIN                                                             43014500
      WORD:="INCMPLT"; MSGPTR := 66; GO ERR;                            43014600
      END;                                                              43014700
   L[ENTRY+3] := UNIT;                                                  43014800
   IF DSK:=(UNIT=10 OR UNIT=12 OR UNIT=13) THEN % DISK                  43014900
      BEGIN                                                             43015000
      IF L[ENTRY]=0 THEN % MUST HAVE BOTH NAMES FOR DISK                43015100
         BEGIN                                                          43015200
         L[ENTRY]:=L[ENTRY+1]; NAM1:=NAM2;                              43015300
         L[ENTRY+1]:=NAM2:=USERCODE;                                    43015400
         END;                                                           43015500
      IF (WORD:=L[ENTRY]).[42:6] NEQ " " THEN                           43015600
      IF WORD.[6:6] NEQ 0 THEN                                          43015700
         BEGIN                                                          43015800
         MSGPTR := 42; GO TO ERR;                                       43015900
         END;                                                           43016000
 %                                                                      43016100
      IF FINDAWORD(NAM1,RESWRDTABLE[1],NUMOFRESWRDS) NEQ 0 THEN         43016200
         BEGIN MSGPTR := 29; GO TO ERR; END;                            43016300
      END; % IF DISK                                                    43016400
   DISKWAIT(0,L,30,THISESP); % WRITE OUT THIS SEGMENT                   43016500
   IF ENTRY=0 THEN % STARTING NEW SEGMENT                               43016600
      BEGIN                                                             43016700
      ENTERESP(LL,THISESP,A[*]); % ENTER SEGMENT ADDRESS IN TABLE       43016800
      IF BOOLEAN(ESPFLAG) THEN % NO ROOM IN ESPTABLE FOR THIS ENTRY     43016900
         BEGIN                                                          43017000
         WORD:="NO ROOM"; MSGPTR := 64; GO ERR;                         43017100
         END;                                                           43017200
      THISESP := ESP1; ESP1 := GETESPDISK; EQUATED := TRUE;             43017300
      END; % IF STARTING NEQ SEGMENT                                    43017400
   ENTRY := IF ENTRY=0 THEN 14 ELSE 0; % 2 EQUATIONS PER SEGMENT        43017500
   IF DSK THEN MATCH(NAM2.[6:42],USERCODE) ELSE % OUTSIDE FILE          43017600
      BEGIN                                                             43017700
      FIND(LL&IAM[33:41:7],0,NAM1,NAM2,USERCODE);                       43017800
      A[BASE]:=NAM1;                                                    43017900
      DOING := 1; WAITFOR := IAM; GO TO EXIT;                           43018000
      END;                                                              43018100
WAIT:                                                                   43018200
   WAITFOR := VINPUT;                                                   43018300
   IF SCHEDULINE THEN REQUESTIP(LL);                                    43018400
   GO TO EXIT;                                                          43018500
   END; % CASE 0                                                        43018600
   %....................................................................43018700
   BEGIN % CASE 1 - RESULTS OF DIRECTORY SEARCH                         43018800
   IF EVENTS[1] LSS 0 THEN % FILE NOT IN DIRECTORY                      43018900
      BEGIN                                                             43019000
      WORD:=A[BASE]; MSGPTR := 67; GO TO ERR;                           43019100
      END;                                                              43019200
   DOING := 0; GO TO WAIT;                                              43019300
   END; % CASE 1                                                        43019400
   END ALL CASES;                                                       43019500
ERR:                                                                    43019600
   ERRSW := WORD;                                                       43019700
   IF EQUATED THEN ENTERESP(-LL,-0,A[*]); % GIVE BACK ESP DISK          43019800
   IAM := VERROR;                                                       43019900
   EQUATED := FALSE; CONTINUEBIT := FALSE;                              43020000
EXIT:                                                                   43020100
   END PROCEDURE EQUATE;                                                43020200
 %********************                                                  50000000
PROCEDURE  SSMSG;                                                       50000100
  BEGIN                                                                 50000200
DEFINE  A[A1]=LINE[LL,A1]#;                                             50000300
STREAM PROCEDURE  FRM(F,T,UC,LL); VALUE UC,LL;                          50000400
  BEGIN                                                                 50000500
     SI := LOC UC; UPS;                                                 50000600
     DI := T;                                                           50000700
     DS := 8 LIT "** FROM ";                                            50000800
     DS := 7 CHR;                                                       50000900
   DS := 2 LIT " (";                                                    50001000
   SI := LOC LL;                                                        50001100
   DS := 2 DEC;                                                         50001200
   DS := 5 LIT ")    ";                                                 50001300
     SI := F;                                                           50001400
   DS:=15 WDS;                                                          50001500
   END FRM;                                                             50001600
PROCEDURE  SPOUT(LCW,A,T); VALUE T; BOOLEAN LCW; ARRAY A[0];            50001700
                     REAL T;                                            50001800
   BEGIN                                                                50001900
LABEL XIT;                                                              50002000
STREAM PROCEDURE  BZY(W,UC,LL); VALUE UC,LL;                            50002100
  BEGIN                                                                 50002200
   DI := W;                                                             50002300
   SI := LOC UC;                                                        50002400
   UPS;                                                                 50002500
   DS := 7 CHR;                                                         50002600
   DS := LIT "(";                                                       50002700
   SI := LOC LL;                                                        50002800
   DS := 2 DEC;                                                         50002900
   DS := 6 LIT ") BUSY";                                                50003000
  END  BZY;                                                             50003100
     IF IDLELINE OR ALLOWMSG THEN TWXOUT(LL,WORK[0],144,2)              50003200
     ELSE                                                               50003300
  BEGIN                                                                 50003400
   IF RUNNING THEN MATCH("CANDE  ",RUN2) ELSE                           50003500
  BEGIN                                                                 50003600
    BZY(WORK[20],USERCODE,LL);                                          50003700
    TWXOUT(T,WORK[20],16,1);                                            50003800
   GO XIT                                                               50003900
  END;                                                                  50004000
   EVENTS[0] := 0&LL[25:40:8]&VSSMSG[18:41:7];                          50004100
   MOVE (4,WORDS,WORK[10],EVENTS[1]);                                   50004200
     REMEMBERTHIS(LCW);                                                 50004300
   END;                                                                 50004400
 XIT:                                                                   50004500
   END SPOUT;                                                           50004600
LABEL  ERR, EXIT;                                                       50004700
BOOLEAN  GOTONE;                                                        50004800
REAL  T,WORD;                                                           50004900
     %*************: START HERE                                         50005000
   FRM(L,WORK,USERCODE,LL);                                             50005100
   T := LL;                                                             50005200
    IF (WORD:=A[BASE+2]).[3:3] = 0 THEN                                 50005300
  BEGIN                                                                 50005400
   IF LL := WORD GTR MAXLINES THEN GO ERR;                              50005500
   IF LOGGEDON THEN SPOUT(LCW,A[*],T) ELSE GO ERR;                      50005600
   GO EXIT                                                              50005700
  END;                                                                  50005800
   IF T = 0 THEN                                                        50005900
     MATCH(WORD.[6:42], "ALL    ")                                      50006000
  BEGIN                                                                 50006100
     FOR LL := 1 STEP 1 UNTIL MAXLINES DO                               50006200
   IF USERCODE NEQ 0 THEN                                               50006300
  BEGIN                                                                 50006400
   SPOUT(LCW,A[*],T);                                                   50006500
   GOTONE := TRUE;                                                      50006600
  END;                                                                  50006700
   IF NOT GOTONE THEN GO ERR;  GO EXIT                                  50006800
  END;                                                                  50006900
   FOR LL := 0 STEP 1 UNTIL MAXLINES DO                                 50007000
   IF LOGGEDON THEN                                                     50007100
    MATCH(WORD.[6:42], LINE[LL, UCLOC])                                 50007200
  BEGIN  SPOUT(LCW,A[*],T);                                             50007300
     GOTONE := TRUE;                                                    50007400
  END;                                                                  50007500
   IF GOTONE THEN GO EXIT;                                              50007600
 ERR:                                                                   50007700
   LL := T;                                                             50007800
   LITOUT("NOT ON ",1);                                                 50007900
   WRITEASTERISK := FALSE;                                              50008000
 EXIT:                                                                  50008100
   LL := T;                                                             50008200
  END  SSMSG;                                                           50008300
%******************************************************%                51000000
PROCEDURE  PDIT (LCW, A); BOOLEAN LCW; ARRAY A[0];                      51000100
%*******************************************************%               51000200
  BEGIN                                                                 51000300
LABEL  GETIT, EXIT;                                                     51000400
INTEGER       I;                                                        51000500
REAL STREAM PROCEDURE FORM(T,F);                                        51000600
     BEGIN                                                              51000700
          SI := F;  DI := T;  UPS;                                      51000800
          IF SC LSS "0" THEN                                            51000900
     BEGIN                                                              51000950
          DS:=LIT" "; DS:=7CHR; TALLY:=1;                               51001000
     END  ELSE                                                          51001010
          IF SC EQL "0" THEN % OBJECTFILE.                              51001020
     BEGIN  UPS;                                                        51001030
          IF SC LSS "0" THEN % NOT WRKFILE                              51001040
          BEGIN DS:=2LIT" *"; DS:=6CHR; TALLY:=1; END;                  51001050
     END  IF OBJECT FILE;                                               51001060
          FORM:=TALLY;                                                  51001090
     END OF FORM;                                                       51001100
              CASE DOING OF                                             51001200
         BEGIN                                                          51001300
         BEGIN % CASE 0.                                                51001400
              A[BASE]:=MODULUS; DOING:=1;                               51001500
              A[BASE+1] := 0;     % USED FOR ADDR SECOND HALF.          51001600
              A[BASE+2] := 0;     % USED FOR ADDR LINK.                 51001700
              SREG      := BASE+3;% BUFFER POINTER.                     51001800
              TEMP      := 11;    % ALLOW 8 WDS BUFFER.                 51001900
         END  CASE 0;                                                   51002000
         BEGIN % CASE 1. (FIRST HALF OF BLOCK)                          51002100
              A[BASE]   :=(I:=A[BASE])-1;                               51002200
              IF I=0 THEN GO EXIT;                                      51002300
              LLDISKREAD:=A[BASE+1]:=I:=SCRAMBLE(I,USERCODE);           51002400
              WANT :=VDISKREAD;                                         51002500
              DOING:=2;                                                 51002600
         END  CASE 1;                                                   51002700
         BEGIN % CASE 2. (FIRST HALF IN).                               51002800
              A[BASE+2]:=WORK[2].FF; % ADDR LINK                        51002900
              A[BASE+1]:=A[BASE+1]+1;% ADDR SECOND HALF.                51003000
              GO GETIT;                                                 51003100
         END  CASE 2;                                                   51003200
         BEGIN % CASE 3. (ANY HALF IN).                                 51003300
    GETIT:                                                              51003400
              FOR I:=0 STEP 3 UNTIL 27 DO                               51003500
              IF WORK[I+1]=USERCODE THEN                                51003600
         BEGIN                                                          51003700
              SREG:=FORM(A[SREG],WORK[I])+SREG;                         51003800
              IF SREG-BASE GTR 10 THEN                                  51003900
         BEGIN % PRINT THE LINE.                                        51004000
              SREG:=BASE+3;                                             51004100
              MOVE(8,WORDS,A[SREG],L[0]);                               51004200
              TWXOUT(LL,L[0],64,1);                                     51004300
         END  PRINTING;                                                 51004400
         END  FOR;                                                      51004500
              IF LLDISKREAD:=A[BASE+1] GTR 1000 THEN                    51004600
         BEGIN % GET SECOND HALF BLOCK.                                 51004700
              A[BASE+1]:=0;                                             51004800
              DOING:=3;                                                 51004900
              WANT:=VDISKREAD;                                          51005000
         END  ELSE                                                      51005100
              IF LLDISKREAD:=A[BASE+2] GTR 1000 THEN                    51005200
         BEGIN                                                          51005300
              A[BASE+2]:=0;                                             51005400
              A[BASE+1]:=LLDISKREAD;                                    51005500
              DOING:=2;                                                 51005600
              WANT:=VDISKREAD;                                          51005700
         END  ELSE DOING:=1;                                            51005800
         END  CASE 3;                                                   51005900
         BEGIN % CASE 4.  (WRAPUP).                                     51006000
    EXIT:     IF SREG-BASE GTR 3 THEN                                   51006100
         BEGIN                                                          51006200
              I:=SREG-BASE-3; SREG:=BASE+3;                             51006300
              MOVE(I,WORDS,A[SREG],L[0]);                               51006400
              TWXOUT(LL,L[0],(I|8),CRLF);                               51006500
         END  IF LEFTOVERS;                                             51006600
              IAM:=0;                                                   51006700
         END  CASE 4;                                                   51006800
         END  ALL CASES;                                                51006900
         END  OF  PDIT;                                                 51007000
%***********************************************************************52000000
PROCEDURE COPYIT(LCW,A); BOOLEAN LCW; ARRAY A[*];                       52000100
%***********************************************************************52000200
BEGIN                                                                   52000300
COMMENT HANDLES CANDE VERBS:                                            52000400
   APPEND,  COPY,  DELETE,  MERGE,  PUNCH,  RESEQ,  RMERGE;             52000500
REAL  INPCOUNT,  OUTCOUNT,  PREVNUMBER,  WORD,  UNIT,  UNITNUMBER,      52000600
FILNAM1,  FILNAM2,  FILNAM3,  SAVEWORD,  NPARAMS,  VERB;                52000700
LABEL  NEGATIVE,  UNSIGNED,  EXIT,  ERROR;                              52000800
BOOLEAN  TOGWORD;                                                       52000900
DEFINE                                                                  52001000
REVERSETOG     = TOGWORD.[01:1]#, RESEQVERB      = TOGWORD.[02:1]#,     52001100
RESEQPARAM     = TOGWORD.[03:1]#, HAVEMINUS      = TOGWORD.[04:1]#,     52001200
HARDCOPY       = TOGWORD.[05:1]#, NOTWORKFILE    = TOGWORD.[06:1]#,     52001300
HAVEINPUTFILE  = TOGWORD.[07:1]#, LIBTOG         = TOGWORD.[08:1]#,     52001400
SAVETOG        = TOGWORD.[09:1]#, HAVERESEQRANGE = TOGWORD.[10:1]#,     52001500
HAVEINCREMENT  = TOGWORD.[11:1]#, HAVENEWBASE    = TOGWORD.[12:1]#,     52001600
HAVEOUTPUTFILE = TOGWORD.[13:1]#, LASTPARAM      = TOGWORD.[14:1]#;     52001700
CASE DOING OF                                                           52001800
   BEGIN                                                                52001900
      BEGIN % CASE 0                                                    52002000
      NPARAMS := (A[SREG:=BASE-A[BASE]]).FF; % PARAMETER COUNT          52002100
      VERB := IF A[BASE]=0 THEN "COPY   " ELSE                          52002200
      VERBTABLE[A[SREG].[9:9]].[6:42]; % GET VERB NAME FROM TABLE       52002300
      MATCH(VERB,"DELETE ") % SEE IF REFERS TO WORK FILE FIRST          52002400
      IF NPARAMS=0 OR NPARAMS=1 AND A[SREG+1].[6:42]="ALL    " THEN     52002500
         BEGIN % SCRATCH THE WORKFILE                                   52002600
         DOING := OBJECTFILE := 0; GOODOBJ := FALSE;                    52002700
         SOURCEFILE := MAKEFN("1S",LL); % "1S" FILE NAME                52002800
         MAKEFILE(LL&13[33:41:7],1,SOURCEFILE,USERCODE,FILETYPE,0);     52002900
         IAM := VSETUPFILES; WRITEASTERISK := TRUE; GO TO EXIT;         52003000
         END; % IF DELETING THE WORKFILE                                52003100
      MATCH(VERB,"PUNCH  ") % PAPER TAPE                                52003200
         BEGIN                                                          52003300
         IF SCHEDULINE THEN GOERR("PUNCH  ",40);                        52003400
         IF DEVICE=CONRAC THEN GOERR("PUNCH  ",56);                     52003500
         % PUT YOUR FUNNY TERMINALS HERE                                52003600
                                                                        52003700
                                                                        52003800
         HARDCOPY := TRUE;                                              52003900
         END; % IF PUNCH VERB                                           52004000
      IF FILETYPE=8 THEN % TYPE DATA FILE                               52004100
         BEGIN                                                          52004200
         MATCH(VERB,"MERGE  ") GOERR("MERGE  ",57);                     52004300
         MATCH(VERB,"RMERGE ") GOERR("RMERGE ",57);                     52004400
         END; % IF DATA FILE                                            52004500
      IF TPCOUNT GTR 0 THEN % WORK FILE NEEDS UPDATING                  52004600
         BEGIN                                                          52004700
         LITOUT("WAIT.  ",NOCRLF); TEMP:=1; WANT:=VUPDATE;              52004800
         GO TO EXIT;                                                    52004900
         END;                                                           52005000
      MATCH(VERB,"RMERGE ") % REVERSE MERGE                             52005100
         BEGIN                                                          52005200
         REVERSETOG := TRUE; VERB := "MERGE  ";                         52005300
         END;                                                           52005400
      CLEAR(WORK[0],29); % ZERO OUT THE "WORK" ARRAY                    52005500
      MATCH(VERB,"RESEQ  ") % SET DEFAULT OPTIONS                       52005600
         BEGIN                                                          52005700
         RESEQVERB := TRUE;                                             52005800
         WORK[5] := -1; % DEFAULT LOWER BOUND FOR RESEQ                 52005900
         WORK[6] := 100000000; % DEFAULT UPPER BOUND FOR RESEQ          52006000
         WORK[7] :=  WORK[8] := 100; % DEFAULT BASE AND INCR. FOR RESEQ.52006100
         END;                                                           52006200
      WORK[9] := MAKEFN("1S",LL); % DEFAULT OUTPUT FILE NAME            52006300
      FILNAM1 := WORK[10] := SOURCEFILE; % DEFAULT SOURCE FILE NAME     52006400
      FILNAM2 := WORK[2] := USERCODE;                                   52006500
      INPCOUNT := 0; OUTCOUNT := 20; PREVNUMBER := -1;                  52006600
      %.................................................................52006700
      WHILE INPCOUNT LSS NPARAMS DO % PICK UP ALL PARAMETERS            52006800
      %.................................................................52006900
         BEGIN                                                          52007000
         SREG := SREG + 1; % ADVANCE "STACK" POINTER                    52007100
         INPCOUNT := INPCOUNT + 1; % COUNT THIS PARAMETER               52007200
         WORD := A[SREG]; %  TRANSFER PARAMETER                         52007300
         %..............................................................52007400
         IF WORD.[3:3] GTR 0 THEN % PARAMETER IS A LETTER STRING        52007500
         %..............................................................52007600
            BEGIN                                                       52007700
            WORD.[1:5] := 0; % ZERO OUT "CODE" PORTION                  52007800
            MATCH(WORD,"END    ") % CONVERT TO EOFMARK                  52007900
               BEGIN                                                    52008000
               WORD := 100000000;                                       52008100
               GO TO UNSIGNED;                                          52008200
               END;                                                     52008300
            MATCH(WORD,"PRINTER") UNIT := 2 ELSE                        52008400
            MATCH(WORD,"PUNCH  ") UNIT := 3 ELSE                        52008500
            MATCH(WORD,"TAPE   ") UNIT := 4 ELSE                        52008600
            UNIT := 0;                                                  52008700
            IF UNIT GTR 0 THEN % HARD COPY REQUESTED                    52008800
               BEGIN                                                    52008900
               MATCH(VERB,"COPY   ") ELSE GO ERROR;                     52009000
               IF HARDCOPY THEN GO ERROR; % REDUNDANT                   52009100
               IF NOT HAVEMINUS THEN GO ERROR; % MISSING "TO"           52009200
               IF HAVEOUTPUTFILE THEN GO ERROR;                         52009300
               UNITNUMBER := UNIT; % SAVE UNIT NUMBER                   52009400
               HARDCOPY := TRUE;                                        52009500
               HAVEMINUS := FALSE;                                      52009600
               END % IF UNIT GTR 0                                      52009700
            ELSE MATCH(WORD,"RESEQ  ")                                  52009800
               BEGIN                                                    52009900
               IF RESEQVERB OR RESEQPARAM THEN GO ERROR;                52010000
               RESEQPARAM := TRUE;                                      52010100
               WORK[5] := -1; % DEFAULT LOWER BOUND FOR RESEQ           52010200
               WORK[6] := 100000000; % DEFAULT UPPER BOUND FOR RESEQ    52010300
               WORK[7] := WORK[8] := 100; % DEFAULT BASE AND INCR.      52010400
               PREVNUMBER := -1; % RESET COMPARISON VALUE               52010500
               IF SAVETOG THEN % NUMBER STORED IN SAVEWORD              52010600
                  BEGIN                                                 52010700
                  IF OUTCOUNT := OUTCOUNT+1 GTR 29 THEN                 52010800
                  GOERR("TOOMANY",30);                                  52010900
                  WORK[OUTCOUNT] := SAVEWORD;                           52011000
                  SAVETOG := FALSE;                                     52011100
                  END; % IF SAVETOG;                                    52011200
               END % IF "RESEQ"                                         52011300
            ELSE MATCH(WORD,"TO     ")                                  52011400
               BEGIN                                                    52011500
               IF HAVEMINUS THEN GO ERROR; % REDUNDANT                  52011600
               HAVEMINUS := TRUE;                                       52011700
               END % IF "TO"                                            52011800
            ELSE MATCH(WORD,"LIBRARY")                                  52011900
               BEGIN                                                    52012000
               IF LIBTOG THEN GO ERROR; % REDUNDANT                     52012100
               IF NOT HAVEINPUTFILE THEN GOERR(WORD,55); % NO FIRST NAME52012200
               LIBTOG := TRUE;                                          52012300
               END % IF "LIBRARY"                                       52012400
            ELSE IF LIBTOG THEN % SHOULD BE SECOND NAME OF FILE         52012500
               BEGIN                                                    52012600
               MATCH(VERB,"DELETE ") GOERR(WORD,39); % OUTSIDE FILE     52012700
               MATCH(VERB,"RESEQ  ") GOERR(WORD,39); % OUTSIDE FILE     52012800
               IF HAVEOUTPUTFILE THEN GOERR(WORD,39);                   52012900
               FILNAM2 := WORD; % SAVE SECOND NAME OF FILE              52013000
               LIBTOG := FALSE;                                         52013100
               END % IF LIBTOG                                          52013200
            ELSE IF HAVEINPUTFILE THEN % MIGHT BE OUTPUT FILE           52013300
               BEGIN                                                    52013400
               MATCH(VERB,"COPY   ") ELSE GO ERROR;                     52013500
               IF NOT HAVEMINUS THEN GO ERROR ELSE HAVEMINUS:=FALSE;    52013600
               IF HARDCOPY THEN GO ERROR;                               52013700
               IF HAVEOUTPUTFILE THEN GO ERROR;                         52013800
               IF (FILNAM3:=WORD).[42:6] NEQ " " THEN GOERR(WORD,42);   52013900
               HAVEOUTPUTFILE := TRUE;                                  52014000
               NOTWORKFILE := TRUE;                                     52014100
               END % IF HAVEINPUTFILE                                   52014200
            ELSE                                                        52014300
               BEGIN % SHOULD BE INPUT FILE NAME                        52014400
               IF HAVEMINUS THEN GO ERROR;                              52014500
               IF COMPAR(VERB,"DELETE ") OR COMPAR(VERB,"RESEQ  ") THEN 52014510
                  BEGIN                                                 52014520
                  IF COMPAR(WORD,FILENAME) THEN GOERR("WRKFILE",62);    52014600
                  NOTWORKFILE := TRUE;                                  52014700
                  END;                                                  52014800
               FILNAM1 := WORD;                                         52014810
               HAVEINPUTFILE := TRUE;                                   52014900
               END; % IF FILENAME                                       52015000
            END % IF PARAMETER IS A "STRING"                            52015100
         ELSE                                                           52015200
         %..............................................................52015300
         IF WORD.[1:2]=1 THEN % PARAMETER IS A "SPECIAL" CHARACTER      52015400
         %..............................................................52015500
            BEGIN                                                       52015600
            IF WORD.[42:6]="/" THEN                                     52015700
               BEGIN                                                    52015800
               IF LIBTOG THEN GO ERROR; LIBTOG:=TRUE;                   52015900
               END                                                      52016000
            ELSE  IF WORD.[42:6]="-" THEN                               52016100
               BEGIN                                                    52016200
               IF HAVEMINUS THEN GO ERROR; HAVEMINUS:=TRUE;             52016300
               END                                                      52016400
            ELSE GO ERROR; % FUNNY CHARACTER                            52016500
            END % IF A SPECIAL CHARACTER                                52016600
         ELSE                                                           52016700
         %..............................................................52016800
         IF WORD.[1:5]=0 THEN % AN UNSIGNED NUMBER                      52016900
         %..............................................................52017000
            BEGIN                                                       52017100
UNSIGNED:                                                               52017200
            IF HAVEMINUS THEN % SHOULD BE NEGATIVE NUMBER               52017300
               BEGIN                                                    52017400
               WORD := -WORD; HAVEMINUS := FALSE; GO TO NEGATIVE;       52017500
               END;                                                     52017600
            IF SAVETOG THEN % ALREADY HAVE A NUMBER STORED IN "SAVEWORD"52017700
               BEGIN                                                    52017800
               IF RESEQPARAM THEN                                       52017900
                  BEGIN                                                 52018000
                  IF HAVERESEQRANGE THEN GOERR(WORD,59);                52018100
                  IF LASTPARAM THEN WORK[7]:=SAVEWORD                   52018200
                  ELSE GOERR(WORD,59);                                  52018300
                  END % IF RESEQPARAM                                   52018400
               ELSE IF RESEQVERB THEN % BASE OR RANGE L.B.              52018500
                  BEGIN                                                 52018600
                  IF HAVERESEQRANGE AND HAVENEWBASE THEN GOERR(WORD,59);52018700
                  IF HAVERESEQRANGE OR LASTPARAM THEN                   52018800
                     BEGIN                                              52018900
                     WORK[7] := SAVEWORD;                               52019000
                     HAVENEWBASE := TRUE;                               52019100
                     END                                                52019200
                  ELSE                                                  52019300
                     BEGIN                                              52019400
                     WORK[5] := WORK[6] := SAVEWORD; % RESEQ ONE RECORD 52019500
                     HAVERESEQRANGE := TRUE;                            52019600
                     END;                                               52019700
                  END % IF RESEQVERB                                    52019800
               ELSE                                                     52019900
                  BEGIN                                                 52020000
                  OUTCOUNT := OUTCOUNT + 1;                             52020100
                  IF OUTCOUNT GTR 29 THEN GOERR("TOOMANY",30);          52020200
                  WORK[OUTCOUNT] := SAVEWORD;                           52020300
                  END;                                                  52020400
               END; % IF SAVETOG                                        52020500
            SAVEWORD := WORD; % SAVE THIS NUMBER                        52020600
            SAVETOG := TRUE;                                            52020700
            END % IF PARAMETER IS AN UNSIGNED NUMBER                    52020800
         ELSE                                                           52020900
         %..............................................................52021000
         IF WORD.[1:2]=2 THEN % PARAMETER IS A NEGATIVE NUMBER          52021100
         %..............................................................52021200
            BEGIN                                                       52021300
NEGATIVE:                                                               52021400
            IF NOT SAVETOG THEN GOERR(WORD,11); % MISSING LOWER BOUND   52021500
            IF PREVNUMBER GEQ SAVEWORD THEN GOERR(SAVEWORD,58);         52021600
            IF SAVEWORD GEQ ABS(WORD) THEN GOERR(WORD,58);              52021700
            IF RESEQVERB OR RESEQPARAM THEN                             52021800
               BEGIN                                                    52021900
               IF HAVERESEQRANGE THEN GO ERROR;                         52022000
               WORK[5] := SAVEWORD; % LOWER BOUND FOR RESEQ             52022100
               WORK[7] := SAVEWORD; % BASE FOR RESEQ;                   52022200
               SAVETOG := FALSE;                                        52022300
               WORK[6] := ABS(WORD); % UPPER BOUND FOR RESEQ            52022400
               HAVERESEQRANGE := TRUE;                                  52022500
               END % IF RESEQVERB OR RESEQPARAM                         52022600
            ELSE                                                        52022700
               BEGIN                                                    52022800
               IF OUTCOUNT:=OUTCOUNT+1 GTR 28 THEN GOERR("TOOMANY",30); 52022900
               WORK[OUTCOUNT] := SAVEWORD;                              52023000
               SAVETOG :=FALSE;                                         52023100
               PREVNUMBER := ABS(WORK[OUTCOUNT:=OUTCOUNT+1]:=WORD);     52023200
               END; % IF NOT A RESEQ PARAMETER                          52023300
            END % IF PARAMETER IS A NEGATIVE NUMBER                     52023400
         ELSE                                                           52023500
         %..............................................................52023600
         IF WORD.[1:2]=3 THEN % PARAMETER IS A "+" NUMBER               52023700
         %..............................................................52023800
            BEGIN                                                       52023900
            IF NOT(RESEQVERB OR RESEQPARAM) THEN GO ERROR;              52024000
            IF HAVEINCREMENT THEN GO ERROR; % REDUNDANT                 52024100
            IF SAVETOG THEN % HAVE AN UNSIGNED NUMBER IN "SAVEWORD"     52024200
               BEGIN                                                    52024300
               IF RESEQPARAM AND HAVERESEQRANGE THEN GOERR(SAVEWORD,59);52024400
               WORK[7] := SAVEWORD; % NEW BASE                          52024500
               SAVETOG := FALSE;                                        52024600
               HAVENEWBASE := TRUE;                                     52024700
               END; % IF SAVETOG                                        52024800
            WORK[8] := WORD.[6:42]; % RESEQ INCREMENT                   52024900
            HAVEINCREMENT := TRUE;                                      52025000
            END; % IF PARAMETER IS A "+" NUMBER                         52025100
      %.................................................................52025200
         END WHILE STATEMENT; % NO MORE PARAMETERS                      52025300
      %.................................................................52025400
      IF SAVETOG THEN IF NOT LASTPARAM THEN % NUMBER LEFT IN SAVEWORD   52025500
         BEGIN LASTPARAM := TRUE; GO TO UNSIGNED; END;                  52025600
      IF RESEQVERB OR RESEQPARAM THEN IF WORK[5]=0 THEN WORK[5]:=-1;    52025610
      IF HARDCOPY THEN % OUTPUT TO PERIPHERIAL UNIT                     52025700
         BEGIN                                                          52025800
         WORK[9] := 0 & UNITNUMBER[6:42:6] &                            52025900
         (IF HAVEINPUTFILE THEN FILNAM1 ELSE FILENAME)[12:6:36];        52026000
         END % IF HARDCOPY ("PUNCH" VERB ASSUMES REMOTE OUTPUT)         52026100
      ELSE IF NOTWORKFILE THEN % WORKING WITH EXTERNAL FILE             52026200
      WORK[9]:=IF HAVEOUTPUTFILE THEN FILNAM3 ELSE FILNAM1              52026300
      ELSE                                                              52026400
         BEGIN % USING THE WORKFILE                                     52026500
         IF FILENAME=0 THEN GOERR("NO FILE",1);                         52026600
         IF NOT HAVEINPUTFILE THEN % CHECK VERBS REQUIRING FILES        52026700
            BEGIN                                                       52026800
            MATCH(VERB,"MERGE  ") GOERR(VERB,6);                        52026900
            MATCH(VERB,"APPEND ") GOERR(VERB,6);                        52027000
            END;                                                        52027100
         IF RESEQVERB AND FILETYPE=8 THEN GOERR("RESEQ  ",57);          52027200
         IF RESEQVERB AND FILETYPE=1 THEN % RESEQ BASIC FILE            52027210
         IF HAVENEWBASE AND HAVERESEQRANGE THEN GOERR("BASIC  ",15);    52027220
         END; % IF USING THE WORKFILE                                   52027300
      WORK[3] := FILNAM1;                                               52027400
      WORK[4] := FILNAM2;                                               52027500
      OUTCOUNT := OUTCOUNT - 20; % ACTUAL PARAMETER COUNT               52027600
      IF RESEQVERB THEN                                                 52027700
      IF HAVERESEQRANGE AND HAVENEWBASE THEN % CALL MERGE, NOT RESEQ    52027800
         BEGIN                                                          52027900
         WORK[11]:=WORK[5]; % DELETION RANGE                            52028000
         WORK[21]:=IF WORK[5]=-1 THEN 0 ELSE WORK[5];                   52028010
         WORK[22] := -WORK[12] := WORK[6];                              52028100
         VERB := "MERGE  "; WORK[10] := FILNAM1;                        52028200
         OUTCOUNT := 2;                                                 52028300
         REVERSETOG := TRUE;                                            52028400
         END;                                                           52028500
    WORK[1]:=LL&VMCPMSG[33:41:7]&OUTCOUNT[27:42:6]&R(FILETYPE=8)[3:47:1]52028600
    &R(REVERSETOG)[5:47:1]&R(NOT HAVEINPUTFILE)[6:47:1]                 52028700
    & (CONCISEBIT)[8:47:1];                                             52028710
      RUN1 := VERB; RUN2 := "CANDE  "; ERRSW := USERCODE; TEMP := 4;    52028800
      LITOUT("WAIT.  ",NOCRLF); A[BASE+3]:=REAL(TOGWORD);               52028900
      IF HAVEINPUTFILE OR HAVEOUTPUTFILE THEN % SEARCH DIRECTORY        52029000
         BEGIN                                                          52029100
         IF HAVEINPUTFILE THEN                                          52029200
            BEGIN                                                       52029300
            A[BASE] := 2; A[BASE+1] := FILNAM1;                         52029400
            FIND(LL&IAM[33:41:7],0,FILNAM1,FILNAM2,USERCODE);           52029500
            END;                                                        52029600
         IF HAVEOUTPUTFILE THEN                                         52029700
            BEGIN                                                       52029800
            A[BASE]:=1+2|REAL(HAVEINPUTFILE);                           52029900
            A[BASE+2] := FILNAM3;                                       52030000
            END;                                                        52030100
         DOING := 1;                                                    52030200
         WAITFOR := IAM;                                                52030300
         END % IF INPUT/OUTPUT FILES SPECIFIED                          52030400
      ELSE                                                              52030500
         BEGIN % REFERS TO WORK FILE                                    52030600
         IF RESEQVERB AND FILETYPE=1 THEN RUN1:="RESEQB ";              52030700
     % VOID                                                             52030800
     % VOID                                                             52030900
     % VOID                                                             52031000
         WANT := VDISPATCH;                                             52031100
         A[BASE]:=RUN1;                                                 52031200
         DOING := 2;                                                    52031300
         END;                                                           52031400
      EOJMSG := NOT CONCISE;                                            52031500
      WRITEASTERISK := CONCISE;                                         52031600
      DISKWRITE(ESP1);                                                  52031700
      END; % CASE 0                                                     52031800
   %....................................................................52031900
      BEGIN  % CASE 1                                                   52032000
      TOGWORD := BOOLEAN(A[BASE+3]); % RECOVER TOGGLES                  52032100
      IF A[BASE] NEQ 1 THEN % INPUT FILE SEARCH                         52032200
         BEGIN                                                          52032300
         IF EVENTS[1] LEQ 0 THEN GOERR(A[BASE+1],2);                    52032400
         IF EVENTS[2].[36:6] = 8 THEN                                   52032500
            BEGIN                                                       52032600
            MATCH(RUN1,"RESEQ  ") GOERR(A[BASE+1],57);                  52032700
            MATCH(RUN1,"MERGE  ") GOERR(A[BASE+1],57);                  52032800
            END;                                                        52032900
         IF EVENTS[2].[36:6]=1 AND RESEQVERB THEN % BASIC RESEQ         52033000
            BEGIN                                                       52033010
            IF HAVERESEQRANGE AND HAVENEWBASE THEN GOERR("BASIC  ",15); 52033020
            RUN1:="RESEQB ";                                            52033030
            END;                                                        52033040
         IF A[BASE]=3 THEN % WAITFOR OUTPUT FILE SEARCH                 52033100
            BEGIN                                                       52033200
            FIND(LL&IAM[33:41:7],0,A[BASE+2],USERCODE,USERCODE);        52033300
            A[BASE] := 1; WAITFOR := IAM; GO TO EXIT;                   52033400
            END; % IF WAITING FOR OUTPUT FILE                           52033500
         END % IF A[BASE] NEQ 1                                         52033600
      ELSE                                                              52033700
         BEGIN  % CHECKING OUTPUT FILE                                  52033800
         IF EVENTS[1] GTR 0 THEN GOERR(A[BASE+2],3);                    52033900
         END; % IF A[BASE] = 1;                                         52034000
      ERRSW := USERCODE;                                                52034100
      WANT := VDISPATCH;                                                52034200
      A[BASE] := RUN1;                                                  52034300
      DOING := 2;                                                       52034400
      END CASE 1;                                                       52034500
   %....................................................................52034600
      BEGIN % CASE 2 - ADJUST AFTER CANDE JOB EOJ                       52034700
      IF EVENTS[1]=1 THEN % EOJ OK                                      52034800
         BEGIN                                                          52034810
         VERB:=A[BASE]; TOGWORD := BOOLEAN(A[BASE+3]);                  52034820
         IF NOT ( HARDCOPY OR NOTWORKFILE) THEN % WORK FILE ALTERATION  52034830
            BEGIN                                                       52034840
            IF FILETYPE=8 THEN % TYPE DATA FILE                         52034850
            MATCH(VERB,"APPEND ") LASTRECORD :=                         52034860
            LASTRECORD + COMMONCELL.[21:27] ELSE                        52034870
            MATCH(VERB,"COPY   ") LASTRECORD:=COMMONCELL.[21:27];       52034880
            SOURCEFILE := MAKEFN("1S",LL); GOODOBJ := FALSE;            52034890
            END;                                                        52034900
         END; % IF EOJ OK                                               52035000
      IAM:=0; IF BREAKORWRU THEN LINECLEAR(LCW,A[*]);                   52035100
      END; % CASE 2                                                     52035200
   END ALL CASES;                                                       52035300
GO TO EXIT;                                                             52035400
ERROR: GOERR(WORD,8);                                                   52035500
EXIT:                                                                   52035600
END PROCEDURE COPYIT;                                                   52035700
%**********************************************************************%53000000
PROCEDURE     SEQ(LCW,A);  BOOLEAN LCW;  ARRAY A[0];                    53000100
%**********************************************************************%53000200
         BEGIN                                                          53000300
REAL STREAM PROCEDURE OUTSUPR(INPUT,OUTPUT); VALUE INPUT;               53000400
   BEGIN                                                                53000450
   DI:=LOC INPUT; DS:=7FILL;                                            53000500
   SI:=LOC INPUT; DI:=OUTPUT;                                           53000550
   8(IF SC=" " THEN SI:=SI+1 ELSE                                       53000600
      BEGIN DS:=CHR; TALLY:=TALLY+1; END);                              53000700
   OUTSUPR:=TALLY;                                                      53000800
   END STREAM PROCEDURE OUTSUPR;                                        53000900
PROCEDURE     SEQCOM(LL,SEQWORD); VALUE LL, SEQWORD; REAL LL, SEQWORD;  53001000
              COMMUNICATE (-14);                                        53001100
REAL          PC, I, WORD, SEQNO, INCR, SEQOUT;                         53001200
LABEL         ERR, EXIT;                                                53001300
              ERRSW := "SEQ    ";  MSGPTR := 8; SEQNO:=INCR:=-1;        53001400
              IF FILENAME = 0 THEN GOERR("NO FILE",1);                  53001500
              IF DEVICE = TC500 THEN GOERR("SEQUENC",56);               53001520
              IF FILETYPE=8 THEN GOERR("DATA   ",57);                   53001540
              IF PC := A[SREG:=BASE-A[BASE]].FF GEQ 3 THEN              53001600
                 BEGIN MSGPTR := 16;  GO ERR;  END;                     53001700
              WHILE I LSS PC DO                                         53001800
         BEGIN                                                          53001900
              I := I + 1;                                               53002000
              IF (WORD := A[INC(SREG)]).[2:4] = 0 THEN                  53002100
                 SEQNO := WORD.[21:27]                                  53002200
              ELSE IF WORD.[1:2] = 3 THEN                               53002300
                 INCR := WORD.[21:27]                                   53002400
              ELSE GO ERR;                                              53002500
         END  WHILE I;                                                  53002600
              IF SEQNO = 0 OR INCR GTR 500000 OR INCR = 0 THEN GO ERR;  53002700
              IF INCR NEQ -1 THEN                                       53002800
                 BEGIN INCREMENT := INCR;  SEQLAST := SEQIN;  END;      53002900
              IF SEQNO NEQ -1 THEN SEQOUT := SEQNO                      53003000
                 ELSE  SEQOUT := SEQLAST + INCREMENT;                   53003100
              SEQLAST := SEQOUT - INCREMENT;                            53003150
              IF SCHEDULINE THEN                                        53003200
         BEGIN %SEND OUT SEQ NUMBER FOR SCHEDULE LINES                  53003250
              I := OUTSUPR(DECCONV(SEQOUT),WORK[0]);                    53003300
              TWXOUT(LL,WORK[0],I,NOCRLF);                              53003350
         END                                                            53003400
              ELSE IF DEVICE=CONRAC THEN % SEND SEQUENCE STRING         53003410
              OUTPUTNUMBERS(LCW,A[*])                                   53003420
              ELSE SEQCOM(LL,SEQOUT&INCREMENT[2:29:19]);                53003500
    % VOID                                                              53003600
              WRITEASTERISK := FALSE;                                   53003700
              SEQMODE := TRUE;  IAM := 0;  GO EXIT;                     53003800
    ERR:      ERROR(SREG,LCW,A[*]);                                     53003900
    EXIT:END  SEQ VERB;                                                 53004000
%*****************************************************************      54000000
PROCEDURE BYE (LCW,A);   BOOLEAN LCW;   ARRAY A[0];                     54000100
%*****************************************************************      54000200
         BEGIN                                                          54000300
LABEL SKIP, EXIT;                                                       54000400
REAL       T;                                                           54000500
              IF A[BASE] LSS 100 THEN                                   54000550
         BEGIN      % NOT A HELLO[NEWUSER] CALL                         54000560
              IF USERCODE=IAM:=0 THEN GO EXIT;                          54000600
              IF FILENAME NEQ 0 THEN                                    54000610
               IF TPCOUNT NEQ 0 OR FILENAME NEQ SOURCEFILE THEN         54000620
                IF NOT NOSAVE THEN                                      54000630
         BEGIN                                                          54000640
              NOSAVE:=TRUE; GOERR("NO SAVE",48);                        54000650
         END;                                                           54000660
              IF QUICKBYE THEN                                          54000670
                 BEGIN                                                  54000675
                 LITOUT("BYE    ",1); GO SKIP;                          54000680
                 END;                                                   54000690
              WORK[0] := "ON FOR ";  BLANK(WORK[0]);                    54000700
              TIMEUSED(WORK[1],TIMECONV(TIME(1)-LOGONTIME,FALSE));      54000800
               IF NOT SCHEDULINE THEN                                   54000890
              TWXOUT(LL,WORK[0],33,CRLF);                               54000900
              WORK[0] := "C&E USE";  BLANK(WORK[0]);                    54001000
              TIMEUSED(WORK[1],CHARGE:=TIMECONV(PTIME,FALSE));          54001050
              TWXOUT(LL,WORK[0],33,CRLF);                               54001100
              WORK[0] := "EXECUTE";  BLANK(WORK[0]);                    54001150
              TIMEUSED(WORK[1],TIMECONV(ETIME,FALSE));                  54001200
              TWXOUT(LL,WORK[0],33,CRLF);                               54001250
               WORK[0] := "IO TIME"; BLANK(WORK[0]);                    54001260
               TIMEUSED(WORK[1],TIMECONV(IOTOT,FALSE));                 54001270
              TWXOUT(LL,WORK[0],33,CRLF);                               54001280
              WORK[0] := "OFF AT ";  BLANK(WORK[0]);                    54001300
              TIMEOFDAY(WORK[1],TIMECONV(TIME(1),TRUE));                54001400
               IF NOT SCHEDULINE THEN                                   54001490
              TWXOUT(LL,WORK[0],18,CRLF);                               54001500
              WORK[0] := "GOODBYE";  BLANK(WORK[0]);                    54001600
              WORK[1] := USERCODE;   BLANK(WORK[1]);                    54001700
              TWXOUT(LL,WORK[0],16,CRLF);                               54001800
              WORK[0]:=DATE;                                            54001810
   % VOID                                                               54001820
              TWXOUT(LL,WORK[0],8,11);                                  54001830
SKIP:         WRITEASTERISK:=FALSE; WORK[0]:="$~     ";                 54001900
              IF A[BASE] LSS 50 THEN   % NOT HELLO                      54002000
                 BEGIN                                                  54002050
                 TWXOUT(LL,WORK[0],3,-1); % DISCONNECT THE LINE         54002100
                 IF NOT SCHEDULINE THEN GO EXIT; % REM.WK.FIL IN DISCNCT54002110
                 END;                                                   54002120
         END;                                                           54002150
               CHARGE := TIMECONV(PTIME,FALSE);                         54002175
              T:=LL&13[33:41:7];                                        54002200
              REMOVEFILE(T,SOURCEFILE:=MAKEFN("1S",LL),USERCODE);       54002300
              REMOVEFILE(T,SOURCEFILE.[6:36],USERCODE);                 54002400
              REMOVEFILE(T,SOURCEFILE&"P"[12:42:6],USERCODE);           54002500
              REMOVEFILE(T,SOURCEFILE&"T"[12:42:6],USERCODE);           54002600
              REMOVEFILE(T,SOURCEFILE&"Q"[12:42:6],USERCODE);           54002700
              SOURCEFILE.[36:12] := 01;                                 54002800
              REMOVEFILE(T,SOURCEFILE&"P"[12:42:6],USERCODE);           54002900
               IF SCHEDULINE THEN DISCONNECT(LCW,A);                    54002950
              FILESOK := B(FILENAME:=0); TPCOUNT := 0;                  54003000
    EXIT: END  BYE;                                                     54003100
%**********************************************************************%55000000
PROCEDURE     MAKENEWFILE (A);  ARRAY A[0];                             55000100
%**********************************************************************%55000200
         BEGIN                                                          55000300
LABEL         EXIT;                                                     55000400
STREAM PROCEDURE  MSG (W, T); VALUE T;                                  55000500
  BEGIN                                                                 55000600
LABEL  BAD, DONE;                                                       55000700
   DI := W;                                                             55000800
   CI := CI + T;                                                        55000900
   GO TO BAD;                                                           55001000
   DS := 8 LIT" CREATED";                                               55001100
   GO TO DONE;                                                          55001200
 BAD:                                                                   55001300
   DS := 15 LIT " DUPLICATE NAME";                                      55001400
 DONE:                                                                  55001500
  END  OF  MSG;                                                         55001600
REAL          T;                                                        55001700
DEFINE        SUBB =SREG#;                                              55001800
              CASE DOING OF                                             55001900
         BEGIN                                                          55002000
         BEGIN   % CASE 0                                               55002100
              IF FILENAME NEQ 0 THEN                                    55002110
               IF TPCOUNT NEQ 0 OR FILENAME NEQ SOURCEFILE THEN         55002120
                IF NOT NOSAVE THEN                                      55002130
         BEGIN                                                          55002140
              NOSAVE:=TRUE; GOERR("NO SAVE",48);                        55002150
         END;                                                           55002160
              IF T := DOWHICH(A[*],NUMOFTYPES) = 0 THEN                 55002200
         BEGIN                                                          55002300
                IAM := VERROR;                                          55002400
                GO EXIT                                                 55002500
         END;                                                           55002600
              IF T = 3 THEN FILETYPE := 7   % DEFAULT IS SEQ            55002700
              ELSE IF T = 4 THEN FILETYPE := ABS(A[BASE+2])             55002800
              ELSE IF T LSS 3 THEN GOERR("NO NAME",6)                   55002900
              ELSE GOERR(A[BASE+2],8);                                  55003000
              IF FINDAWORD(A[BASE+1], RESWRDTABLE[1],                   55003100
                      NUMOFRESWRDS) NEQ 0 THEN GOERR(A[BASE+1],29);     55003200
              T := " "&A[BASE+1][6:6:36];                               55003300
              GENFILINE (T, TYPETABLE[FILETYPE]);                       55003400
              FIND (LL&IAM[33:41:7],0,T,USERCODE,USERCODE);             55003500
              FIND(LL&IAM[33:41:7],0,T.[6:36],USERCODE,USERCODE);       55003560
              FILESOK := FALSE;                                         55003600
              TEMP := 2;                                                55003650
              DOING:=1;  WAITFOR:=IAM;                                  55003700
              A[BASE] := -0;                                            55003750
         END  CASE  0;                                                  55003800
         BEGIN   % CASE 1                                               55003900
              IF EVENTS[1] GEQ 0 THEN A[BASE] := ABS(A[BASE]);          55003910
              IF A[BASE] = 0 THEN                                       55003920
         BEGIN  A[BASE].[47:1]:=1; WAITFOR:=IAM; TEMP:=2;               55003925
         END  ELSE                                                      55003930
         BEGIN                                                          55003940
              MSG(WORK[0], T:=A[BASE].[1:1]);                           55004000
              WRITEASTERISK := FALSE;                                   55004100
              IF B(T) THEN                                              55004200
                TWXOUT (LL, WORK[0], 8, 1)                              55004300
              ELSE                                                      55004400
         BEGIN                                                          55004500
              TWXOUT (LL, WORK[0], 15, 1);                              55004600
              LINECLEAR(LCW,A[*]);   % KILL ANY OTHER COMMANDS          55004650
              MSGPTR := 3;                                              55004700
              WRITEASTERISK := FALSE;                                   55004750
              IF SCHEDULINE THEN IF NOT NOSTOP THEN SCHEDGOTO(-1);      55004775
              GO EXIT;                                                  55004800
         END;                                                           55004900
              FILENAME := " "&A[BASE+1][6:6:36];                        55004950
              LASTRECORD := 0; % FOR DATA FILES                         55004960
              SOURCEFILE := MAKEFN("1S",LL);                            55005000
              MAKEFILE(LL&13[33:41:7],1,SOURCEFILE,                     55005100
                 USERCODE,FILETYPE,-2);                                 55005200
              GOODOBJ := FALSE;                                         55005300
              OBJECTFILE := 0;                                          55005400
              SEQLAST:=SEQIN:=0;  INCREMENT:=100;                       55005500
              IAM := VSETUPFILES;                                       55005600
              DOING := 0;                                               55005700
         END;                                                           55005750
         END  CASE  1;                                                  55005800
         END ALL CASES;                                                 55005900
    EXIT:                                                               55006000
         END  MAKENEWFILE;                                              55006100
%**********************************************************************%56000000
PROCEDURE     LISTIT (LCW,A);     BOOLEAN  LCW;  ARRAY  A[0];           56000100
%**********************************************************************%56000200
BEGIN                                                                   56000300
LABEL  PRNT,  CASES,  CASE4,  ERR,  EXIT;                               56000400
REAL     PREVW,  WORD,  TYPE,  CHAR,  PC,  I,  WI;                      56000500
BOOLEAN  LIB,  SQUASH,  CHANGES,  NUMBERED,  DISPLAY;                   56000600
STREAM PROCEDURE NOCHGMSG(WORK);                                        56000700
   BEGIN                                                                56000800
   DI:=WORK; DS:=29LIT"NO CHANGES SINCE LAST UPDATE.";                  56000900
   END;                                                                 56001000
CASE DOING OF                                                           56001100
   BEGIN                                                                56001200
   %....................................................................56001300
      BEGIN   % DOING = 0                                               56001400
      PREVW := -1; % ALLOW 0 AS PARAMETER.                              56001500
      WORK[2]:=WORK[4]:=USERCODE; WORK[3]:=SOURCEFILE;                  56001600
      PC := A[ SREG := BASE - A[BASE]].FF;                              56001700
      MATCH(VERBTABLE[A[SREG].[9:9]].[6:42],"DISPLAY")                  56001710
         BEGIN DISPLAY := TRUE; GO TO PRNT; END;                        56001720
      IF IAM = VPRINT THEN                                              56001800
         BEGIN                                                          56001900
PRNT:    IAM := VLIST;                                                  56002000
         A[BASE] := 0;                                                  56002100
         WRITEASTERISK := TRUE;                                         56002200
         END;                                                           56002300
      WI:=21;                                                           56002400
      WHILE I LSS PC DO % PICK UP ALL PARAMETERS                        56002500
         BEGIN  INC(I);                                                 56002600
         WORD := A[INC(SREG)];                                          56002700
         IF WORD.[2:4] = 0 THEN TYPE := 0   % NUMBER OR -NUMBER.        56002800
       ELSE                                                             56002900
         IF WORD.[1:2] = 3 THEN TYPE := 1   % +NUMBER.                  56003000
       ELSE                                                             56003100
         IF WORD.[1:2] = 1 THEN TYPE := 2   % SPECIAL CHARACTER.        56003200
       ELSE                                                             56003300
         TYPE := 3;  % ALPHA WORD.                                      56003400
CASES:   CASE TYPE OF                                                   56003500
            BEGIN                                                       56003600
            %...........................................................56003700
               BEGIN  % TYPE = 0.                                       56003800
               IF PREVW GEQ PREVW:=ABS(WORD) THEN GO ERR;               56003900
               WORK[WI]:=IF CHAR="-" THEN CHAR:=-ABS(WORD) ELSE WORD;   56004000
               IF INC(WI) GTR 30 THEN GO ERR;                           56004100
               END  CASE 0;                                             56004200
            %...........................................................56004300
            GO TO ERR;  % TYPE = 1                                      56004400
            %...........................................................56004500
               BEGIN   % TYPE = 2.                                      56004600
               LIB:=(CHAR:=WORD.CF)="/";                                56004700
               IF CHAR = "*" THEN SQUASH   := TRUE                      56004800
             ELSE                                                       56004900
               IF CHAR = "#" THEN NUMBERED := TRUE                      56005000
             ELSE                                                       56005100
               IF CHAR = "$" THEN CHANGES  := TRUE;                     56005200
               END  CASE 2;                                             56005300
            %...........................................................56005400
               BEGIN   % TYPE = 3. ALPHA WORD.                          56005500
               WORD.[1:5]:= 0;                                          56005600
               MATCH(WORD, "END    ")                                   56005700
                  BEGIN                                                 56005800
                  A[SREG] := WORD := TEN8;                              56005900
                  TYPE := 0;                                            56006000
                  GO TO CASES;                                          56006100
                  END;                                                  56006200
               MATCH (WORD, "FILES  ")    % LIST FILES                  56006300
                  BEGIN                                                 56006400
                  IAM := VLFILES;                                       56006500
                  COMMONCELL := PC-I;                                   56006600
                  GO EXIT;                                              56006700
                  END;                                                  56006800
               MATCH(WORD,"TO     ") CHAR := "-"                        56006900
             ELSE                                                       56007000
               MATCH(WORD,"CHANGES") CHANGES:=TRUE                      56007100
             ELSE                                                       56007200
               MATCH(WORD,"SQUASHE") SQUASH :=TRUE                      56007300
             ELSE                                                       56007400
               MATCH(WORD,"NUMBERE") NUMBERED :=TRUE                    56007500
             ELSE                                                       56007600
                  BEGIN % NOT SPECIAL WORD - MUST BE FILE NAME.         56007700
                  WORK[3 + REAL(LIB)] := WORD;                          56007800
                  LIB := FALSE;                                         56007900
                  WORK[2] := 0;                                         56008000
                  END  HANDLING FILE NAME;                              56008100
               END    OF CASE 3;                                        56008200
            %...........................................................56008300
            END   ALL CASES;                                            56008400
         END   ALL PARAMETERS;                                          56008500
      IF WORK[3] = 0 THEN GOERR("NOFILE ", 1);                          56008600
      IF (PC:=WI-21)=0 THEN                                             56008700
         BEGIN                                                          56008800
         IF TPCOUNT = 0 THEN % UPDATE NOT REQUIRED                      56008900
            BEGIN                                                       56009000
            IF CHANGES THEN % NO CHANGES IF TPCOUNT=0                   56009100
               BEGIN                                                    56009200
               NOCHGMSG(WORK);                                          56009300
               TWXOUT(LL,WORK[0],29,1);                                 56009400
               IAM := 0;                                                56009500
               GO TO EXIT;                                              56009600
               END;                                                     56009700
            END % IF TPCOUNT = 0                                        56009800
         ELSE IF NOT CHANGES THEN % LIST PROGM. NEEDS PARAMS            56009900
            BEGIN                                                       56010000
            WORK[21] := 0;                                              56010100
            WORK[22] := TEN8 & 3[1:46:2];                               56010200
            PC := 2;                                                    56010300
            END;                                                        56010400
         END; % IF PC = 0                                               56010500
      MOVE (16,WORDS,CTRANDBASE[0],WORK[5]);                            56010600
      DOGHOUSE[LL] := WORK[0] := 0;                                     56010700
      WORK[1]:=LL & VMCPMSG[33:41:7] & PC[27:42:6] & R(CHANGES)[1:47:1] 56010800
               & R(SQUASH)[2:47:1] & R(FILETYPE=8)[3:47:1]              56010900
               & R(NUMBERED)[4:47:1] & R(WORK[2] NEQ 0)[6:47:1]         56011000
               & R(DISPLAY)[7:47:1] & R(MONITORBIT)[9:47:1];            56011010
      IF WORK[2] NEQ 0 AND TPCOUNT GTR 0 THEN WORK[4]:=USERLOC;         56011020
      DISKWRITE(ESP1);                                                  56011100
      RUN1 := IF TPCOUNT=0 OR WORK[2]=0 THEN "QUIKLST" ELSE "LIST   ";  56011200
      RUN2 := "CANDE  "; ERRSW := USERCODE;                             56011300
      IF WORK[2] NEQ 0 THEN   % MEANS LIST THE WORKFILE.                56011400
         BEGIN                                                          56011500
         WANT := VCLOSEWORKTABLE;                                       56011600
         ERRSW := FILENAME;                                             56011700
         DOING := 1;                                                    56011800
         IF TPCOUNT NEQ 0 THEN UPDATEBIT := 1; % UPDATE IN PROGRESS     56011900
         IF A[BASE] NEQ 0 THEN % PRINT HEADING                          56012000
            BEGIN                                                       56012100
            TWXOUT (LL,WORK[0],0,2);                                    56012200
            GENFILINE (FILENAME, TYPETABLE[FILETYPE]);                  56012300
            GO TO CASE4;                                                56012400
            END;                                                        56012500
         END % IF WORKFILE                                              56012600
      ELSE                                                              56012700
         BEGIN % FILE NAME GIVEN                                        56012800
         FIND(LL&IAM[33:41:7],0,WORK[3],WORK[4],USERCODE);              56012900
         A[BASE+1] := WORK[3]; % SAVE FILE NAME                         56013000
         TEMP := DOING := 3;                                            56013100
         WAITFOR := IAM;                                                56013200
         GO TO EXIT;                                                    56013300
         END;                                                           56013400
      END  CASE  0;                                                     56013500
   %....................................................................56013600
      BEGIN   % DOING = 1                                               56013700
      WANT := VDISPATCH; ERRSW := USERCODE;                             56013800
      DOING := 2;                                                       56013900
      END  CASE  1;                                                     56014000
   %....................................................................56014100
      BEGIN   % DOING = 2                                               56014200
      IF BOOLEAN(UPDATEBIT) AND EVENTS[1] = 1 THEN % UPDATE OK          56014210
         BEGIN                                                          56014220
         CANCELCKPT(A[*]); SOURCEFILE := MAKEFN("1S",LL);               56014300
         END;                                                           56014310
      IAM:=0; IF BREAKORWRU THEN LINECLEAR(LCW,A[*]);                   56014400
      END  CASE 2;                                                      56014500
   %....................................................................56014600
      BEGIN  % DOING = 3                                                56014700
      IF EVENTS[1] LEQ 0 THEN GOERR(A[BASE+1], 2);                      56014800
      IAM := VDISPATCH; ERRSW := USERCODE;                              56014900
      IF A[BASE] NEQ 0 THEN % PRINT HEADING                             56015000
         BEGIN                                                          56015100
         TWXOUT(LL,WORK[0],0,2);                                        56015200
         I := FNONLY(L[0],PC,ERRSW:=A[BASE+1],1);                       56015300
         TWXOUT(LL,L[0],I,..100000);                                    56015400
         GO TO CASE4;                                                   56015500
         END;                                                           56015600
      END CASE 3;                                                       56015700
   %....................................................................56015800
      BEGIN  % DOING = 4 (DUMMY CASE)                                   56015900
CASE4:                                                                  56016000
      EOJMSG:=TRUE;  WRITEASTERISK:=FALSE;                              56016100
      TIMEOFDAY(WORK[1],TIMECONV(TIME(1),TRUE));                        56016200
      WORK[0]:=DATE;  TWXOUT(LL,WORK[0],18,2);                          56016300
      END CASE 4;                                                       56016400
   %....................................................................56016500
   END  ALL  CASES;                                                     56016600
GO EXIT;                                                                56016700
ERR: GOERR(WORD,8);                                                     56016800
EXIT:                                                                   56016900
END OF LISTIT;                                                          56017000
%***************************************************                    57000000
PROCEDURE   DOIT(LCW, A); BOOLEAN LCW; ARRAY A[0];                      57000100
%***************************************************                    57000200
  BEGIN                                                                 57000300
LABEL  DOALL,MAKEWORK,MAKETYPE,RUNIT,EXIT;                              57000400
REAL  T;                                                                57000500
TEMP := 8;                                                              57000600
   CASE DOING OF                                                        57000700
  BEGIN                                                                 57000800
  BEGIN   % CASE 0 - EXECUTE - - - - - - - -                            57000900
   IF T := DOWHICH(A[*],NUMOFTYPES) = 0 THEN                            57001000
  BEGIN                                                                 57001100
   IAM := VERROR;                                                       57001200
   GO EXIT                                                              57001300
  END;                                                                  57001400
   IF T = 1 THEN                                                        57001500
     IF OBJECTFILE = 0 THEN GOERR("NO OBJ.",17);                        57001600
 DOALL:                                                                 57001700
   IF TPCOUNT NEQ 0 THEN                                                57001800
  BEGIN                                                                 57001900
   A[BASE] := T;                                                        57002000
    WANT := VUPDATE;                                                    57002100
    LITOUT("WAIT.  ",NOCRLF);                                           57002200
   DOING := 7;                                                          57002300
    GO EXIT                                                             57002400
  END;                                                                  57002500
   RUN1 := IF T LSS 3 THEN OBJECTFILE ELSE A[BASE+1].[6:36];            57002600
   RUN2 := IF T = 5 THEN A[BASE+2].[6:42] ELSE USERCODE;                57002700
   IAM := 0;                                                            57002800
   WANT := VDISPATCH;                                                   57002900
    STACKSIZE := A[BASE+3]; PROCESSLIMIT := A[BASE+4];                  57002910
    IOLIMIT := A[BASE+5]; CORESIZE := A[BASE+6]; COMMONVALUE:=A[BASE+7];57002920
  END  EXECUTE;                                                         57003000
  BEGIN   % CASE 1 - COMPILE - - - - - - - - - - -                      57003100
   IAM := VEXECUTE;                                                     57003200
   T := DOWHICH(A[*],NUMOFTYPES);                                       57003300
   A[BASE] := 0;                                                        57003400
   CASE T OF                                                            57003500
  BEGIN                                                                 57003600
  BEGIN   % WHICH = 0                                                   57003700
   IAM := VERROR;                                                       57003800
   GO EXIT                                                              57003900
  END;                                                                  57004000
  BEGIN   % WHICH = 1 - WORKFILE                                        57004100
 MAKEWORK:                                                              57004200
   A[BASE+2] := FILETYPE&TYPETABLE[FILETYPE][1:1:1];                    57004300
 MAKETYPE:                                                              57004400
   A[BASE+1] := IF TPCOUNT = 0 THEN                                     57004500
        SOURCEFILE ELSE MAKEFN("1S",LL);                                57004600
   IF FILENAME = 0 THEN GOERR("NO FILE",1);                             57004700
   IF A[BASE] = 0 THEN                                                  57004800
     A[BASE] := 3                                                       57004900
   ELSE        % COMPILE & GO                                           57005000
       IF GOODOBJ THEN                                                  57005100
  BEGIN                                                                 57005200
         T := 1;  GO DOALL                                              57005300
  END;                                                                  57005400
   GO RUNIT;                                                            57005500
  END;                                                                  57005600
   GO MAKETYPE;  % WHICH=2 - TYPE ONLY                                  57005700
  BEGIN   % WHICH = 3 - NAME ONLY                                       57005800
   FIND (LL&IAM[33:41:7],0,A[BASE+1].[6:42],USERCODE,USERCODE);         57005900
   WAITFOR := IAM;                                                      57006000
   DOING := 3;                                                          57006100
  END;                                                                  57006200
  GO RUNIT;   % WHICH = 4 - NAME & TYPE                                 57006300
   GOERR(A[SREG],8);       % NAME/NAME                                  57006400
  END  WHICH  CASES;                                                    57006500
  END  CASE  1;                                                         57006600
  BEGIN   % CASE 2 - WORKFILE SORTED                                    57006700
 RUNIT:                                                                 57006800
   IF TPCOUNT NEQ 0 THEN                                                57006900
  BEGIN                                                                 57007000
    WANT := VUPDATE;                                                    57007100
    LITOUT("WAIT.  ",NOCRLF);                                           57007200
    DOING := 2;                                                         57007300
    GO EXIT                                                             57007400
  END;                                                                  57007500
   IF A[BASE+2] GEQ 0 THEN GOERR("TYPE   ",19) % NOT COMPILER           57007600
   ELSE A[BASE+2]:=ABS(A[BASE+2]);                                      57007700
   RUN1:=A[BASE+1].[6:42]; RUN2:=TYPETABLE[A[BASE+2]];                  57007800
   IF A[BASE] = 0 THEN IAM := 0 ELSE DOING := 6;                        57007900
    STACKSIZE := A[BASE+3]; PROCESSLIMIT := A[BASE+4];                  57007910
    IOLIMIT := A[BASE+5]; CORESIZE := A[BASE+6]; COMMONVALUE:=A[BASE+7];57007920
   WANT := VCOMPILEIT;                                                  57008000
  END;                                                                  57008100
  BEGIN   % CASE 3 - IS THERE A SOURCE                                  57008200
   IF EVENTS[1] NEQ 7 THEN GOERR(A[SREG],2);                            57008300
   A[BASE+2]:=IF (T:=EVENTS[2].[36:6]) GTR NUMOFTYPES THEN 0 ELSE       57008400
   T&TYPETABLE[T][1:1:1];                                               57008450
   GO RUNIT                                                             57008500
  END;                                                                  57008600
  BEGIN   % CASE 4 - RUN - - - - - - - - -                              57008700
   IAM := VEXECUTE;                                                     57008800
   IF T := DOWHICH(A[*],NUMOFTYPES) = 0 THEN                            57008900
  BEGIN                                                                 57009000
   IAM := VERROR;                                                       57009100
   GO EXIT                                                              57009200
  END;                                                                  57009300
   A[BASE] := T;                                                        57009400
   IF T = 1 THEN GO MAKEWORK;                                           57009500
   IF T = 2 THEN GO MAKETYPE;                                           57009600
   T := IF T = 5 THEN A[BASE+2].[6:42] ELSE USERCODE;                   57009700
   FIND(LL&IAM[33:41:7],0,A[BASE+1].[6:36],T,USERCODE);                 57009800
   DOING := 5;                                                          57009900
   WAITFOR := IAM;                                                      57010000
  END;                                                                  57010100
  BEGIN   % CASE 5 - LOOKING FOR OBJ                                    57010200
   IF EVENTS[1] GTR 0 THEN      % FOUND OBJ                             57010300
  BEGIN                                                                 57010400
     T := A[BASE];                                                      57010500
     GO DOALL                                                           57010600
  END;                                                                  57010700
   IF T := A[BASE] = 5 THEN GOERR("NO OBJ.",26);   % NAME/NAME          57010800
     A[BASE] := 4;                                                      57010900
   IF T = 3 THEN                                                        57011000
  BEGIN          % GET TYPE FROM HEADER                                 57011100
   FIND(LL&IAM[33:41:7],0,A[BASE+1].[6:42],USERCODE,USERCODE);          57011200
   DOING := 3;                                                          57011300
   WAITFOR := IAM;                                                      57011400
  END                                                                   57011500
   ELSE  GO RUNIT;     % NAME & TYPE                                    57011600
  END;                                                                  57011700
  BEGIN   % CASE 6 - AFTER COMPILE                                      57011800
   IF T := A[BASE] = 4 THEN GO DOALL;                                   57011900
   OBJECTFILE := SOURCEFILE.[6:36];                                     57012000
   GOODOBJ := TRUE;                                                     57012100
   CANCELCKPT(A[*]);                                                    57012110
   IF T LSS 3 THEN GO DOALL;                                            57012200
   IAM := 0;                                                            57012300
  END;                                                                  57012400
  BEGIN   % CASE 7                                                      57012500
   T := A[BASE];                                                        57012600
   GO DOALL;                                                            57012700
  END;                                                                  57012800
  END  ALL  CASES;                                                      57012900
 EXIT:                                                                  57013000
   END  OF  DOIT;                                                       57013100
%**********************************************************************%58000000
PROCEDURE     LOADIT (LCW, A);                                          58000100
%**********************************************************************%58000200
    BOOLEAN   LCW;                                                      58000300
    ARRAY     A[0];                                                     58000400
         BEGIN                                                          58000500
LABEL     CASE3, SKIP,  EXIT;                                           58000600
REAL          T, D;                                                     58000700
              CASE DOING OF                                             58000800
         BEGIN                                                          58000900
         BEGIN   % CASE 0                                               58001000
              IF FILENAME NEQ 0 THEN                                    58001010
               IF TPCOUNT NEQ 0 OR FILENAME NEQ SOURCEFILE THEN         58001020
                IF NOT NOSAVE THEN                                      58001030
         BEGIN                                                          58001040
              NOSAVE:=TRUE; GOERR("NO SAVE",48);                        58001050
         END;                                                           58001060
              SREG := BASE - A[BASE];                                   58001100
              IF A[SREG].FF NEQ 1 THEN                                  58001200
                GOERR ("NAME   ", 6);                                   58001300
              IF A[INC(SREG)].[3:3] = 0 THEN GOERR(A[SREG],8);          58001400
              IF FINDAWORD(A[SREG], RESWRDTABLE[1],                     58001500
                   NUMOFRESWRDS) NEQ 0 THEN GOERR(A[SREG],29);          58001600
              IF A[SREG].[3:3] GTR 6 THEN GOERR(A[SREG],42);            58001700
              FIND(LL&IAM[33:41:7],0,A[SREG].[6:42],                    58001800
                       USERCODE,USERCODE);                              58001900
              DOING := 1;                                               58002000
              WAITFOR := IAM;                                           58002100
         END  CASE  0;                                                  58002200
         BEGIN   % CASE 1                                               58002300
              IF EVENTS[1] NEQ 7 THEN                                   58002400
         BEGIN                                                          58002500
              FILENAME := IAM := 0;                                     58002600
              GOERR(A[SREG],2);                                         58002700
           END;                                                         58002800
              FILENAME:=A[SREG].[6:42];                                 58002850
              IF FILETYPE := EVENTS[2].[36:6] GTR NUMOFTYPES            58002900
                 THEN FILETYPE := 0;                                    58003000
              LASTRECORD := EVENTS[3] + 1; % RECORD COUNT               58003010
         IF NOT CONCISE THEN GENFILINE(FILENAME,TYPETABLE[FILETYPE]);   58003100
              EOJMSG := NOT CONCISE;                                    58003200
              WRITEASTERISK := CONCISE;                                 58003300
              FIND (LL&IAM[33:41:7],0,FILENAME.[6:36],                  58003400
                     USERCODE,USERCODE);                                58003500
              WAITFOR := IAM;                                           58003600
              DOING := 2;                                               58003700
              TEMP := 1;                                                58003710
              A[BASE] := 0;                                             58003720
         END  CASE  1;                                                  58003800
         BEGIN   % CASE 2                                               58003900
              GOODOBJ := (EVENTS[1] = 7);                               58004000
              IF GOODOBJ THEN                                           58004100
                OBJECTFILE := FILENAME.[6:36];                          58004200
              GO TO CASE3;                                              58004300
         END  CASE  2;                                                  58004400
         BEGIN   % CASE 3                                               58004500
    CASE3:                                                              58004600
              SOURCEFILE := FILENAME;                                   58004700
              IF FILESOK THEN CANCELCKPT(A[*])                          58004800
              ELSE                                                      58004900
              BEGIN IF NOT BOOLEAN(A[BASE]) THEN                        58005000
                   BEGIN A[BASE] := 1;                                  58005010
                        WANT := VSETUPFILES; DOING := 3;                58005020
                   END ELSE                           % NO USER DISK    58005030
                   BEGIN LITOUT("NOTDONE",CRLF);                        58005040
                        IAM := WANT := WAITFOR := 0;                    58005050
                   END;                                                 58005060
                   GO EXIT;                                             58005070
              END;                                                      58005100
              IF NOT CONCISE THEN LITOUT("LOADING",NOCRLF);             58005150
              IF FILETYPE = 8 THEN % TYPE DATA FILE                     58005162
         BEGIN                                                          58005164
              IF NOT CONCISE THEN                                       58005165
         BEGIN                                                          58005166
              TWXOUT(LL,L[0],0,2);                                      58005167
              L[0] := "ND LOAD" & "E"[1:43:5];                          58005168
              TWXOUT(LL,L[0],8,1);                                      58005170
         END;                                                           58005171
              WRITEASTERISK := TRUE;                                    58005172
              GO TO SKIP;                                               58005174
         END;                                                           58005176
              WORK[3] := ERRSW := FILENAME;                             58005200
              WORK[0] := 0;                                             58005300
              WORK[1] := LL & VMCPMSG[33:41:7] & CONCISEBIT[8:47:1];    58005400
              WORK[2] := WORK[4] := USERCODE;                           58005500
              RUN1 := "LOAD   ";                                        58005600
              RUN2 := "CANDE  ";                                        58005700
              WANT := VDISPATCH;                                        58005800
              DISKWRITE(ESP1);                                          58005900
SKIP:                                                                   58005950
              SEQLAST:=SEQIN:=0;  INCREMENT:=100;                       58006000
              T:=MAKEFN("1S",LL);                                       58006100
              MAKEFILE(LL&13[33:41:7],1,T,USERCODE,FILETYPE,0);         58006200
              IAM := 0;                                                 58006300
         END  CASE  3;                                                  58006400
         END  ALL  CASES;                                               58006500
    EXIT:                                                               58006600
         END  LOADIT;                                                   58006700
%***********************************************************************59000000
PROCEDURE SAVER(LCW,A); BOOLEAN LCW; ARRAY A[0];                        59000100
%***********************************************************************59000200
BEGIN                                                                   59000300
LABEL ERR,CASE1,FINISHED,EXIT;                                          59000400
REAL T,F;                                                               59000500
DEFINE DEFAULTSAVEFACTOR = 7#;                                          59000600
CASE DOING OF                                                           59000700
   BEGIN                                                                59000800
      BEGIN % CASE 0 - SYNTAX ANALYSIS                                  59000900
      IF FILENAME=0 THEN % NO WORK FILE                                 59001000
         BEGIN                                                          59001100
         ERRSW:="NO FILE"; MSGPTR := 1; GO TO ERR;                      59001200
         END;                                                           59001300
      IF (T:=A[SREG:=BASE-A[BASE]].[18:15]) GTR 1 THEN % TOO MANY PARAMS59001400
         BEGIN                                                          59001500
         ERRSW:= A[SREG+2]; MSGPTR := 4; GO TO ERR;                     59001600
         END;                                                           59001700
      IF T=0 THEN A[BASE] := -1 ELSE                                    59001800
      IF (A[BASE]:=A[SREG+1]).[1:5] NEQ 0 THEN % NOT UNSIGNED NUMBER    59001900
         BEGIN                                                          59002000
         ERRSW := A[BASE+1]; MSGPTR := 4; GO TO ERR;                    59002100
         END;                                                           59002200
      TEMP := 1;                                                        59002300
      IF TPCOUNT = 0 THEN GO TO CASE1; % WORK FILE ALREADY UPDATED      59002400
      WANT := VUPDATE;                                                  59002500
      DOING := 1;                                                       59002600
      LITOUT("WAIT-  ",NOCRLF);                                         59002700
      END; % CASE 0                                                     59002800
   %....................................................................59002900
      BEGIN % CASE 1 - WORKFILE UPDATED                                 59003000
CASE1:                                                                  59003100
      IF NOT CONCISE THEN GENFILINE(FILENAME,TYPETABLE[FILETYPE]);      59003200
      MATCH(FILENAME,SOURCEFILE) % FILE ALREADY SAVED                   59003300
         BEGIN                                                          59003400
         FIND(LL&IAM[33:41:7],0,FILENAME,USERCODE,USERCODE);            59003500
         DOING := 3;                                                    59003600
         WAITFOR := IAM;                                                59003700
         END                                                            59003800
      ELSE                                                              59003900
         BEGIN                                                          59004000
         T:=LL&VMCPMSG[33:41:7];                                        59004100
         F:=IF A[BASE] LSS 0 THEN DEFAULTSAVEFACTOR ELSE A[BASE];       59004200
         REPLACE(T,SOURCEFILE,USERCODE,                                 59004300
           FILENAME,USERCODE,F&FILETYPE[32:42:6]);                      59004400
         IF GOODOBJ THEN                                                59004500
         REPLACE(T,SOURCEFILE.[6:36],USERCODE,                          59004600
           FILENAME.[6:36],USERCODE,F&FILETYPE[32:42:6])                59004700
         ELSE REMOVEFILE(T,FILENAME.[6:36],USERCODE);                   59004800
         WANT:=WAITFOR:=VMCPMSG;                                        59004900
         DOING := PARAM := LIBMSGCTR := 2;                              59005000
         LIBMTNCE := TRUE;                                              59005100
         END;                                                           59005200
      END; % CASE 1                                                     59005300
   %....................................................................59005400
      BEGIN % CASE 2 - RESULTS OF FILE REPLACE                          59005500
      IF A[BASE+1] NEQ 7 THEN % NOT REPLACED - PROBABLY FILE IN USE     59005600
         BEGIN                                                          59005700
         ERRSW:="IGNORED"; MSGPTR := 22; GO TO ERR;                     59005800
         END;                                                           59005900
      T:=MAKEFN("1S",LL);                                               59006000
      MAKEFILE(LL&13[33:41:7],1,T,USERCODE,FILETYPE,0);                 59006100
      SOURCEFILE:=FILENAME;                                             59006200
      IF GOODOBJ THEN OBJECTFILE:=FILENAME.[6:36];                      59006300
      IF FILESOK THEN CANCELCKPT(A[*]);                                 59006400
FINISHED:                                                               59006500
      LITOUT("SAVED. ",2-CONCISEBIT);                                   59006600
      WRITEASTERISK := FALSE;                                           59006700
      IAM := 0;                                                         59006800
      END; % CASE 2                                                     59006900
   %....................................................................59007000
      BEGIN % CASE 3 - RESULTS OF DIRECTORY SEARCH                      59007100
      IF EVENTS[1] LEQ 0 THEN                                           59007200
         BEGIN                                                          59007300
         ERRSW := FILENAME; MSGPTR := 67; GO TO ERR;                    59007400
         END;                                                           59007500
     IF EVENTS[2].[36:6] NEQ FILETYPE OR A[BASE] GEQ 0 THEN % CHANGE HDR59007600
         BEGIN                                                          59007700
         LLDISKREAD := A[BASE+1] := EVENTS[2].[18:15]; % HEADER ADDRESS 59007800
         WANT := VDISKREAD;                                             59007900
         TEMP := 2;                                                     59008000
         DOING := 4;                                                    59008100
         END                                                            59008200
      ELSE GO TO FINISHED;                                              59008300
      END; % CASE 3                                                     59008400
   %....................................................................59008500
      BEGIN % CASE 4 - HEADER IN CORE                                   59008600
      WORK[4].[36:6]:=FILETYPE;                                         59008700
      IF A[BASE] GEQ 0 THEN WORK[3].[2:10]:=A[BASE]; % SAVE FACTOR      59008800
      DISKWRITE(A[BASE+1]);                                             59008900
      IF GOODOBJ AND A[BASE] GEQ 0 THEN % CHANGE OBJECT HEADER          59009000
         BEGIN                                                          59009100
         FIND(LL&IAM[33:41:7],0,FILENAME.[6:36],USERCODE,USERCODE);     59009200
         DOING := 5;                                                    59009300
         WAITFOR := IAM;                                                59009400
         END                                                            59009500
      ELSE GO TO FINISHED;                                              59009600
      END; % CASE 4                                                     59009700
   %....................................................................59009800
      BEGIN % CASE 5 - RESULTS OF OBJECT DIRECTORY SEARCH               59009900
      IF EVENTS[1] LEQ 0 THEN GO TO FINISHED;                           59010000
      LLDISKREAD := A[BASE+1] := EVENTS[2].[18:15];                     59010100
      WANT := VDISKREAD;                                                59010200
      DOING := 6;                                                       59010300
      END; % CASE 5;                                                    59010400
   %....................................................................59010500
      BEGIN % CASE 6 - OBJECT HEADER IN CORE                            59010600
      WORK[3].[2:10]:=A[BASE];                                          59010700
      DISKWRITE(A[BASE+1]);                                             59010800
      GO TO FINISHED;                                                   59010900
      END; % CASE 6                                                     59011000
   END ALL CASES;                                                       59011100
GO TO EXIT;                                                             59011200
ERR:                                                                    59011300
WANT:=WAITFOR:=0; IAM:=VERROR;                                          59011400
EXIT:                                                                   59011500
END PROCEDURE SAVER;                                                    59011600
%**********************************************************************%61000000
PROCEDURE     REMOVE(LCW,A);      BOOLEAN LCW;   ARRAY A[0];            61000100
%**********************************************************************%61000200
         BEGIN                                                          61000300
BOOLEAN        S, O;                                                    61000400
REAL          WC,PC,I,X;                                                61000500
LABEL         WRKFILE,ERR,EXIT;                                         61000600
              IF BOOLEAN(DOING) THEN %CHECK RESULTS.                    61000610
         BEGIN   WC:=A[SREG];                                           61000618
              FOR I:=0 STEP 1 UNTIL WC DO                               61000626
         BEGIN                                                          61000634
              IF X:=A[BASE+I] NEQ 6 THEN                                61000642
              IF X.[6:6] NEQ 0 THEN                                     61000650
         BEGIN                                                          61000658
              LITOUT("ERR:   ",NOCRLF);                                 61000666
              LITOUT(X,CRLF);  MSGPTR:=2;                               61000674
         END  IF;  END FOR;                                             61000682
              IAM:=0;  GO EXIT;                                         61000690
         END  CHECKING RESULTS;                                         61000698
              S := O := B(WC:=1);                                       61000700
              IF PC := A[SREG:=BASE-A[BASE]].FF = 0 THEN                61000800
         BEGIN                                                          61000900
    WRKFILE:    FILENAME := IAM := 0;                                   61001000
                TPCOUNT:=SOURCEFILE:=0;                                 61001100
                GO EXIT;                                                61001200
         END;                                                           61001300
              IF PC GTR 10 THEN A[SREG+1] := "TOOMANY";                 61001400
              WHILE I LSS PC DO                                         61001500
         BEGIN                                                          61001600
              I := I+1;  X:=A[SREG+I].[6:42];                           61001700
              IF X.[42:6] NEQ " " THEN % ILLEGAL PARAMETER.             61001800
         BEGIN                                                          61001900
              ERRSW := X;                                               61002000
              MSGPOINTER := 42; % 6 CHRS MAX                            61002100
    ERR:      ERROR(SREG+I,LCW,A[*]);                                   61002200
              GO EXIT;                                                  61002300
         END  IF ILLEGAL PARAMETER;                                     61002400
              MATCH(X,"SOURCE ")BEGIN S:=TRUE; O:=FALSE; END ELSE       61002500
              MATCH(X,"OBJECT ")BEGIN O:=TRUE; S:=FALSE; END ELSE       61002600
         BEGIN % IF WE GOT HERE WORD IS NOT SOURCE OR OBJECT.           61002700
              MATCH(X, SOURCEFILE) GOERR("WRKFILE", 14);                61002800
              IF S THEN BEGIN A[BASE+WC]:=X;        INC(WC); END;       61002900
              IF O THEN BEGIN A[BASE+WC]:=X.[6:36]; INC(WC); END;       61003000
         END  IF A LEGAL PARAMETER;                                     61003100
         END  OF ALL PARAMETERS;                                        61003200
              IF WC LEQ 1 THEN %NO FILE NAMES SPECIFIED                 61003210
         BEGIN                                                          61003220
              IF O THEN GOODOBJ:=B(OBJECTFILE:=0)                       61003230
              ELSE GO TO WRKFILE;                                       61003240
              IAM:=0; GO EXIT;                                          61003250
         END;                                                           61003260
              DOING:=1;  WANT:=WAITFOR:=VMCPMSG;                        61003900
              LIBMTNCE:=TRUE; A[INC(SREG)]:=WC:=PARAM:=LIBMSGCTR:=WC-1; 61004000
              FOR I:=1 STEP 1 UNTIL WC DO                               61004100
                 REMOVEFILE(LL&WAITFOR[33:41:7],A[BASE+I],              61004200
                     USERCODE);                                         61004300
    EXIT:                                                               61004400
         END  OF REMOVE PROCEDURE;                                      61004500
%**********************************************************************%62000000
PROCEDURE     CHANGE(LCW,A);   BOOLEAN LCW;   ARRAY A[0];               62000100
  BEGIN                                                                 62000200
%*********  START OF CHANGE  CODE                                       62000300
LABEL  EXIT;                                                            62000400
REAL T;                                                                 62000410
   TEMP := 4;                                                           62000500
   CASE DOING OF                                                        62000600
  BEGIN                                                                 62000700
  BEGIN   % CASE 0                                                      62000800
   CASE CHANGEWHICH(A[*]) OF                                            62000900
BEGIN                                                                   62001000
  BEGIN                                                                 62001100
   IAM := VERROR;                                                       62001200
   GO EXIT                                                              62001300
  END;                                                                  62001400
  BEGIN   % WHICH=1--WORKFILE TYPE                                      62001500
   IF FILENAME = 0 THEN GOERR("NO FILE",1);                             62001600
    IF FILETYPE=8 AND A[BASE+1] NEQ 8 THEN GOERR("DATA   ",61);         62001650
   FILETYPE := A[BASE+1];                                               62001700
   TEMP := MAKEFN("1S",LL);                                             62001800
   FIND(LL&IAM[33:41:7],0,TEMP,USERCODE,USERCODE);                      62001900
   TEMP := 3;                                                           62002000
   DOING := 5;                                                          62002100
   WAITFOR := IAM;                                                      62002200
  END;                                                                  62002300
  BEGIN   % WHICH=2--FILENAME TYPE                                      62002400
   FIND(LL&IAM[33:41:7],0,A[BASE],USERCODE,USERCODE);                   62002500
   DOING := 1;                                                          62002600
   WAITFOR := IAM;                                                      62002700
  END;                                                                  62002800
  BEGIN   % WHICH=3--NAME TO NAME                                       62002900
   FIND(LL&IAM[33:41:7],0,A[BASE+1],USERCODE,USERCODE);                 62003000
   DOING := 3;  WAITFOR := IAM;                                         62003100
  END;                                                                  62003200
  BEGIN   % WHICH=4--LOCK                                               62003300
   GOERR("LOCK   ",15);                                                 62003400
   COMMENT                                                              62003500
     PUT                                                                62003600
       LOCK                                                             62003700
         STUFF                                                          62003800
           HERE;                                                        62003900
  END;                                                                  62004000
  BEGIN   % WHICH=5--PASSWORD                                           62004100
   IAM := VCHNGPSWD;                                                    62004200
   DOING := 0;                                                          62004300
   GO EXIT                                                              62004400
  END;                                                                  62004500
  BEGIN  % WHICH=6 -- CHANGE NAME...                                    62004520
       IAM:=VCHNGNAME; GO EXIT;                                         62004540
  END CASE 6;                                                           62004560
  BEGIN  % WHICH = 7, CHANGE SAVE "FACTOR"                              62004562
   IF A[BASE+1]=2 THEN A[BASE]:=0&A[BASE][12:6:36];                     62004564
   FIND(LL&IAM[33:41:7],0,A[BASE],USERCODE,USERCODE);                   62004566
   DOING := 7;                                                          62004568
   WAITFOR := IAM;                                                      62004570
  END;                                                                  62004572
  END  WHICH  CASES;                                                    62004600
  END  CASE  0;                                                         62004700
  BEGIN   % CASE 1- GET HEADER(CHANGE TYPE)                             62004800
   IF EVENTS[1] NEQ 7 THEN GOERR(A[BASE],2);                            62004900
   LLDISKREAD := A[BASE+2] := EVENTS[2].FF;                             62005000
   WANT := VDISKREAD;                                                   62005100
   DOING := 2;  TEMP := 3;                                              62005200
  END  CASE  1;                                                         62005300
BEGIN   % CASE 2                                                        62005400
   WORK[4].[36:6] := A[BASE+1];                                         62005500
   DISKWRITE(A[BASE+2]);                                                62005600
   MATCH(A[BASE],FILENAME) IF FILETYPE NEQ 8 THEN                       62005700
  BEGIN  FILETYPE := A[BASE+1];                                         62005800
   MATCH(FILENAME,SOURCEFILE)                                           62005900
   ELSE                                                                 62006000
  BEGIN  FIND(LL&IAM[33:41:7],0,SOURCEFILE,USERCODE,USERCODE);          62006100
     DOING := 5;  WAITFOR := IAM;                                       62006200
     GO EXIT                                                            62006300
  END;                                                                  62006400
  END;   IAM := 0;                                                      62006500
  END  CASE  2;                                                         62006600
  BEGIN   % CASE 3 - CHANGING NAMES                                     62006700
   IF EVENTS[1] GEQ 0 THEN GOERR(A[BASE+1],3);                          62006800
   A[BASE+4] := (A[BASE+2] := A[BASE+1]).[6:36];                        62006900
   A[BASE+3] := (A[BASE+1] := A[BASE]).[6:36];                          62007000
   CHANGEFILE(LL&VMCPMSG[33:41:7],A[BASE+1],USERCODE,                   62007100
     A[BASE+2],USERCODE);                                               62007200
   CHANGEFILE(LL&VMCPMSG[33:41:7],A[BASE+3],USERCODE,                   62007300
     A[BASE+4],USERCODE);                                               62007400
   TEMP := 3;                                                           62007500
   WANT := WAITFOR := VMCPMSG;                                          62007600
   LIBMTNCE := TRUE;                                                    62007700
   PARAM := LIBMSGCTR := 2;                                             62007800
   DOING := 4;                                                          62007900
  END  CASE  3;                                                         62008000
  BEGIN   % CASE 4                                                      62008100
   IF A[BASE+3] NEQ 7 THEN GOERR("CANNOT ",2);                          62008200
   MATCH(FILENAME,A[BASE+1])                                            62008300
  BEGIN                                                                 62008400
     FILENAME := A[BASE+2];                                             62008500
     MATCH(A[BASE+1],SOURCEFILE)                                        62008600
  BEGIN  SOURCEFILE := A[BASE+2];                                       62008700
       TEMP := MAKEFN("1S",LL);                                         62008800
       MAKEFILE(LL&13[33:41:7],1,TEMP,USERCODE,FILETYPE,0);             62008900
       IF GOODOBJ THEN OBJECTFILE := A[BASE+4];                         62009000
  END;                                                                  62009100
  END;                                                                  62009200
   IAM := 0;                                                            62009300
  END  CASE  4;                                                         62009400
  BEGIN   % CASE 5 - CHANGING SOURCEFILE TYPE                           62009500
   IF EVENTS[1] NEQ 7 THEN GOERR("ARRGH  ",24);                         62009600
   LLDISKREAD := A[BASE+2] := EVENTS[2].FF;                             62009700
   WANT := VDISKREAD;                                                   62009800
   DOING := 6;  TEMP := 3;                                              62009900
  END  CASE  5;                                                         62010000
  BEGIN   % CASE 6 - FINISH SOURCEFILE TYPE                             62010100
   WORK[4].[36:6] := A[BASE+1];                                         62010200
   DISKWRITE(A[BASE+2]);                                                62010300
   IAM := 0;                                                            62010400
  END  CASE  6;                                                         62010500
  BEGIN  % CASE 7 - CHANGING SAVE FACTOR                                62010600
   IF EVENTS[1] NEQ 7 THEN GOERR(A[BASE],2);                            62010700
   LLDISKREAD := A[BASE+3] := EVENTS[2].FF; % SAVE ADDRESS              62010800
   WANT := VDISKREAD;                                                   62010900
   DOING := 8;                                                          62011000
  END; % CASE 7                                                         62011100
  BEGIN  % CASE 8 - HEADER NOW IN CORE                                  62011200
   WORK[3].[2:10] := A[BASE+2]; % REPLACE SAVE FACTOR                   62011300
   DISKWRITE(A[BASE+3]); % REPLACE HEADER                               62011400
   IF A[BASE+1] NEQ 0 THEN                                              62011500
  BEGIN IAM := 0; GO TO EXIT;                                           62011600
  END;                                                                  62011700
   T := 0 & A[BASE][12:6:36]; % OBEJCT FILE NAME                        62011800
   FIND(LL&IAM[33:41:7],0,T,USERCODE,USERCODE);                         62011900
   WAITFOR := IAM;                                                      62012000
   DOING := 9;                                                          62012100
  END; % CASE 8                                                         62012200
  BEGIN  % CASE 9                                                       62012300
   IF EVENTS[1] NEQ 7 THEN % NO OBJECT VERSION                          62012400
  BEGIN IAM := 0; GO TO EXIT;                                           62012500
  END;                                                                  62012600
   LLDISKREAD := A[BASE+3] := EVENTS[2].FF; % SAVE ADDRESS              62012700
   WANT := VDISKREAD;                                                   62012800
   DOING := 10;                                                         62012900
  END; % CASE 9;                                                        62013000
  BEGIN  % CASE 10 - HEADER NOW IN CORE                                 62013100
   WORK[3].[2:10] := A[BASE+2]; % REPLACE SAVE FACTOR                   62013200
   DISKWRITE(A[BASE+3]); % REPLACE HEADER                               62013300
   IAM := 0;                                                            62013400
  END; % CASE 10                                                        62013500
  END ALL CASES;                                                        62013600
EXIT:                                                                   62013700
END CHANGE VERB;                                                        62013800
%********************************************************************%  63000000
PROCEDURE     RENAMEIT (LCW, A);  BOOLEAN LCW;  ARRAY A[0];             63000100
%********************************************************************%  63000200
         BEGIN                                                          63000300
LABEL         EXIT;                                                     63000400
              CASE DOING OF                                             63000500
         BEGIN                                                          63000600
         BEGIN   % CASE 0                                               63000700
              IF FILENAME = 0 THEN  GOERR   ("NOFILE ", 1);             63000800
              SREG := BASE - A[BASE];                                   63000900
              IF A[SREG].FF=0 THEN GOERR("FILENAM",6);                  63001000
              IF A[INC(SREG)].[3:3] = 0 THEN GOERR(A[SREG],8);          63001100
              IF A[SREG].[3:3]=7 THEN GOERR(A[SREG],42);                63001150
              IF FINDAWORD(A[SREG], RESWRDTABLE[1],                     63001200
                   NUMOFRESWRDS) NEQ 0 THEN GOERR(A[SREG],29);          63001300
              FIND (LL&IAM[33:41:7],0,A[SREG].[6:42],                   63001400
                          USERCODE, USERCODE);                          63001500
              DOING := 1;                                               63001600
              WAITFOR := IAM;                                           63001700
         END  CASE  0;                                                  63001800
         BEGIN   % CASE 1                                               63001900
              IF EVENTS[1] GEQ 0 THEN GOERR(A[SREG],3);                 63002000
              MATCH(FILENAME,SOURCEFILE)                                63002100
         BEGIN                                                          63002200
                WANT := VCOPY;                                          63002300
         END;                                                           63002400
               FILENAME := A[SREG].[6:42]&" "[42:42:6];                 63002500
              IAM := 0;                                                 63002600
         END  CASE  1;                                                  63002700
         END  ALL  CASES;                                               63002800
    EXIT:                                                               63002900
         END  OF  RENAMEIT;                                             63003000
%***********************************************************************64000000
PROCEDURE WHATSIT(LCW,A); BOOLEAN LCW; ARRAY A[0];                      64000100
%***********************************************************************64000200
BEGIN                                                                   64000300
LABEL CASE1,EXIT;                                                       64000400
REAL TM,TP,DATE;                                                        64000500
%....................................................................   64000600
STREAM PROCEDURE MSG(L,FILNAM,WRKTOG,TYPE,NREKS,DATE,TM,SAVEF);         64000700
%....................................................................   64000800
VALUE FILNAM,WRKTOG,TYPE,NREKS,DATE,TM,SAVEF;                           64000900
   BEGIN LOCAL SV; LABEL EXIT;                                          64001000
   DI:=L; DS:=8LIT" "; SI:=L; DS:=9WDS;                                 64001100
   DI:=L; DS:=5LIT"FILE "; SI:=LOC FILNAM; SI:=SI+1;                    64001200
   7(IF SC=" " THEN JUMP OUT ELSE DS:=CHR);                             64001300
   WRKTOG(DS:=11LIT" (WORKFILE)");                                      64001400
   DS:=7LIT", TYPE "; SI:=LOC TYPE; SI:=SI+1;                           64001500
   7(IF SC=" " THEN JUMP OUT ELSE DS:=CHR);                             64001600
   DS:=2LIT", "; SV:=DI;                                                64001700
   SI:=LOC NREKS; DS:=8DEC; DI:=SV; DS:=7FILL; SI:=SV; DI:=SV;          64001800
   8(IF SC=" " THEN SI:=SI+1 ELSE DS:=CHR);                             64001900
   DS:=8LIT" RECORDS";                                                  64002000
   WRKTOG(JUMP OUT TO EXIT);                                            64002100
   DS:=10LIT", CREATED "; SI:=LOC DATE; DS:=8CHR;                       64002200
   SI:=LOC TM; DS:=2LIT" ("; SV:=DI; DS:=4DEC;                          64002300
   DI:=SV; DS:=3FILL; SI:=SV; DI:=SV;                                   64002400
   4(IF SC=" " THEN SI:=SI+1 ELSE DS:=CHR); DS:=2LIT") ";               64002500
   DS:=3LIT"SF="; SV:=DI;                                               64002600
   SI:=LOC SAVEF; DS:=4DEC; DI:=SV; DS:=3FILL; SI:=SV; DI:=SV;          64002700
   4(IF SC=" " THEN SI:=SI+1 ELSE DS:=CHR);                             64002800
EXIT: DS:=8LIT" ";                                                      64002900
   END STREAM PROCEDURE MSG;                                            64003000
%....................................................................   64003100
PROCEDURE DATECONV(DATE); REAL DATE;                                    64003200
%....................................................................   64003300
   BEGIN                                                                64003400
   REAL M,D,Y;                                                          64003500
   FILL L[*] WITH 0,31,60,91,121,152,182,213,244,274,305,335,366;       64003600
   M:=DECCONV(DATE); D:=OCTCONV(M.[30:18]); Y:=OCTCONV(M.[18:12]);      64003700
   IF D GTR 60 THEN IF Y.[46:2] NEQ 0 THEN D:=D+1;                      64003800
   Y:=M.[18:12]; M:=0; DO M:=M+1 UNTIL D LEQ L[M];                      64003900
   D:=DECCONV(D-L[M-1]); M:=DECCONV(M);                                 64004000
   DATE:="0/00/00"&M[1:37:11]&D[18:36:12]&Y[36:36:12];                  64004100
   END PROCEDURE DATECONV;                                              64004200
%....................................................................   64004300
CASE DOING OF                                                           64004400
   BEGIN                                                                64004500
      BEGIN   % CASE 0                                                  64004600
      SREG := BASE - A[BASE];                                           64004700
      TEMP := 2;                                                        64004800
      IF A[BASE] := A[SREG].FF = 0 THEN % NO PARAMS, WANTS WRKFIL       64004900
         BEGIN                                                          64005000
         IF FILENAME = 0 THEN GOERR("NO FILE",1); % NO WORKFILE         64005100
         IF TPCOUNT GTR 0 THEN % UPDATE REQUIRED                        64005200
            BEGIN                                                       64005300
            WANT := VUPDATE;                                            64005400
            LITOUT("WAIT.  ",1);                                        64005500
            DOING := 1;                                                 64005600
            GO TO EXIT;                                                 64005700
            END % IF WORKFILE NEEDS UPDATE                              64005800
         ELSE A[BASE+1] := SOURCEFILE;                                  64005900
         END % IF WORKFILE REQUESTED                                    64006000
      ELSE IF A[BASE] GTR 1 THEN % CHECK FOR "OBJECT"                   64006100
      MATCH(A[SREG:=SREG+1].[6:42],"OBJECT ")                           64006200
      A[BASE+1]:=0 & A[SREG+1][12:6:36] ELSE GOERR(A[SREG],8)           64006300
      ELSE A[BASE+1] := A[SREG+1].[6:42];                               64006400
      GO TO CASE1;                                                      64006500
      END; % CASE 0                                                     64006600
   %....................................................................64006700
      BEGIN  % CASE 1                                                   64006800
      A[BASE+1] := SOURCEFILE;                                          64006900
CASE1:                                                                  64007000
      FIND(LL&IAM[33:41:7],0,A[BASE+1],USERCODE,USERCODE);              64007100
      WAITFOR := IAM;                                                   64007200
      DOING := 2;                                                       64007300
      END; % CASE 1                                                     64007400
   %....................................................................64007500
      BEGIN  % CASE 2                                                   64007600
      IF EVENTS[1] LEQ 0 THEN GOERR(A[BASE+1],2);                       64007700
      LLDISKREAD := EVENTS[2].FF; % HEADER ADDRESS                      64007800
      WANT := VDISKREAD;                                                64007900
      DOING := 3;                                                       64008000
      END; % CASE 2                                                     64008100
   %....................................................................64008200
      BEGIN  % CASE 3,  HEADER NOW IN CORE                              64008300
      DATE := WORK[3].[30:18]; DATECONV(DATE);                          64008400
      IF TP:=WORK[4].[36:6] GTR NUMOFTYPES THEN TP:=0;                  64008500
      TM:=WORK[1].[25:23]; % CREATION TIME                              64008600
      TM:=TM DIV 216000|100+TM DIV 3600 MOD 60 DIV 1;                   64008700
      IF A[BASE] = 0 THEN % WANTS WORKFILE SPECS                        64008800
      MSG(L,FILENAME,TRUE,TYPETABLE[FILETYPE],WORK[7]+1,                64008900
      DATE,TM,WORK[3].[2:10])                                           64009000
      ELSE % WANTS NAMED FILE SPECS                                     64009100
      MSG(L,A[BASE+1],FALSE,TYPETABLE[TP],WORK[7]+1,                    64009200
      DATE,TM,WORK[3].[2:10]);                                          64009300
      TWXOUT(LL,L[0],80,1);                                             64009400
      IAM := 0;                                                         64009500
      END CASE 3;                                                       64009600
   END ALL CASES;                                                       64009700
EXIT:                                                                   64009800
END PROCEDURE WHATSIT;                                                  64009900
%*****************************************************%                 65000000
PROCEDURE    TYPEIT (LCW, A); BOOLEAN LCW; ARRAY A[0];                  65000100
%*******************************************************%               65000200
  BEGIN                                                                 65000300
LABEL  EXIT;                                                            65000400
REAL  T;                                                                65000500
   IF T := DOWHICH(A[*],NUMOFTYPES) = 0 THEN                            65000600
  BEGIN                                                                 65000700
    IAM := VERROR;                                                      65000800
    GO EXIT                                                             65000900
  END;                                                                  65001000
   IF T NEQ 2 THEN GOERR(A[SREG],8);                                    65001100
   A[BASE+2]:=ABS(A[BASE+2]);                                           65001140
   IF FILETYPE=8 AND A[BASE+2] NEQ 8 THEN GOERR(A[SREG],61);            65001150
   FILETYPE := A[BASE+2];                                               65001200
   IAM := 0;                                                            65001300
 EXIT:                                                                  65001400
  END  OF  TYPEIT;                                                      65001500
%*******************************************************                67000000
PROCEDURE  GUARDIT(LCW,A); BOOLEAN LCW; ARRAY A[0];                     67000100
%*******************************************************                67000200
  BEGIN                                                                 67000300
LABEL  T;                                                               67000350
   IF TPCOUNT NEQ 0 THEN                                                67000400
  BEGIN                                                                 67000500
     LITOUT("WAIT.  ",NOCRLF);                                          67000600
     WANT := VUPDATE;                                                   67000700
  END  ELSE                                                             67000800
  BEGIN                                                                 67000900
     RUN1 := "GUARD  ";                                                 67001000
     RUN2 := "DISK   ";                                                 67001100
     IAM := VDISPATCH;                                                  67001200
  END;                                                                  67001300
  END  GUARDIT;                                                         67001400
%***********************************************************************68000000
PROCEDURE LOCKIT(LCW,A); BOOLEAN LCW; ARRAY A[0];                       68000100
%***********************************************************************68000200
BEGIN                                                                   68000300
REAL I,PC,IMAX,WORD;                                                    68000400
BOOLEAN LOK,UNLK,PUB,WORKFILE,NAM1,NAM2,SRC,OBJ,WTH;                    68000500
LABEL RESTRT,SELECT,SECUR,CHECK,ERR1,ERR2,EXIT;                         68000600
CASE DOING OF                                                           68000700
   BEGIN                                                                68000800
      BEGIN % CASE 0 - SYNTAX ANALYSIS                                  68000900
      PC := A[SREG:=BASE-A[BASE]].[18:15]; % PARAMETER COUNT            68001000
      I := VERBTABLE[A[SREG].[9:9]].[6:42]; % VERB NAME                 68001100
      MATCH(I,"UNLOCK ") UNLK := TRUE ELSE                              68001110
      MATCH(I,"PUBLIC ") PUB  := TRUE ELSE LOK := TRUE;                 68001120
      MATCH(FILENAME,0) ELSE % GOOD WORKFILE                            68001200
         BEGIN                                                          68001300
         A[BASE+1] := FILENAME; % DEFAULT FILE NAME                     68001400
         WORKFILE := TRUE;                                              68001500
         END;                                                           68001600
      IF PC=0 THEN % NO PARAMETERS                                      68001700
         BEGIN                                                          68001800
         IF NOT WORKFILE THEN GOERR("NOFILE ",1); % NO WORK FILE        68001900
         NAM1:=TRUE; A[BASE]:=0; % ASSUME WORK FILE NAME                68002000
         GO TO SELECT; % NO FURTHER SYNTAX ANALYSIS                     68002100
         END;                                                           68002200
       A[BASE]:=(I:=SREG+1)&(IMAX:=SREG+PC)[18:33:15]&                  68002300
       R(PUB)[15:47:1]&R(LOK)[16:47:1]&R(UNLK)[17:47:1];                68002310
RESTRT:                                                                 68002320
      FOR I:=I STEP 1 UNTIL IMAX DO                                     68002400
         BEGIN                                                          68002500
         IF A[I].[3:3]=0 THEN GO ERR1; % NO LETTER STRING               68002600
         WORD := A[I].[6:42];                                           68002700
         MATCH(WORD,"SOURCE ")                                          68002800
            BEGIN                                                       68002900
            IF SRC OR OBJ OR WTH THEN GO ERR1; % INVALID PARAMETER      68003000
            SRC := TRUE;                                                68003100
            END                                                         68003200
         ELSE MATCH(WORD,"OBJECT ")                                     68003300
            BEGIN                                                       68003400
            IF SRC OR OBJ OR WTH THEN GO ERR1; % INVALID PARAMETER      68003500
            OBJ := TRUE;                                                68003600
            END                                                         68003700
         ELSE MATCH(WORD,"WITH   ")                                     68003800
            BEGIN                                                       68003900
            IF UNLK OR PUB OR WTH THEN GO ERR1; % INVALID PARAMETER     68004000
            IF NOT(NAM1 OR WORKFILE) THEN GOERR("NOFILE ",1);           68004100
            NAM1 := WTH := TRUE; % LOCK THE WORK FILE IF NAME NOT GIVEN 68004200
            END                                                         68004300
         ELSE IF WTH THEN % LOOKING FOR GUARD FILE NAME                 68004400
            BEGIN                                                       68004500
            IF NAM2 THEN GO ERR1; % NAME ALREADY GIVEN                  68004600
            A[BASE+2] := WORD; % SAVE GUARD FILE NAME                   68004700
            NAM2 := TRUE;                                               68004800
            END                                                         68004900
         ELSE IF NOT NAM1 THEN % NAME OF FILE TO BE LOCKED              68005000
            BEGIN                                                       68005100
            A[BASE+1] := WORD;                                          68005200
            NAM1 := TRUE;                                               68005300
            END                                                         68005400
         ELSE                                                           68005500
            BEGIN                                                       68005510
            A[BASE].[33:15]:=I; GO TO SELECT;                           68005520
            END;                                                        68005530
         END I LOOP;                                                    68005600
      A[BASE]:=0; % END OF PARAMETER LIST                               68005610
SELECT:                                                                 68005700
      IF NOT NAM1 OR (WTH AND NOT NAM2) THEN GOERR("INCMPLT",6);        68005800
      IF UNLK THEN A[BASE+3]:=A[BASE+4]:=..14 ELSE                      68005900
      IF LOK  THEN A[BASE+3]:=A[BASE+4]:=   0 ELSE                      68005910
         BEGIN                                                          68005920
         A[BASE+3]:=..14; A[BASE+4]:=0;                                 68005930
         END;                                                           68005940
      IF WTH THEN % CHECK FOR GUARD FILE                                68006000
         BEGIN                                                          68006100
         A[BASE+5] := REAL(SRC) & REAL(OBJ)[46:1]; % SAVE TOGGLES       68006200
         FIND(LL&IAM[33:7],0,A[BASE+2],USERCODE,USERCODE);              68006300
         TEMP := 6;                                                     68006400
         DOING := 1;                                                    68006500
         WAITFOR := IAM;                                                68006600
         GO TO EXIT;                                                    68006700
         END; % IF "WTH"                                                68006800
SECUR:                                                                  68006900
      IF NOT OBJ THEN SECURE(A[BASE+1],A[BASE+3],A[BASE+4]); % SOURCE   68007000
      IF NOT SRC THEN SECURE(A[BASE+1].[6:36],A[BASE+3],A[BASE+4]); %OBJ68007100
      TEMP := 1;                                                        68007200
      PARAM := IF SRC OR OBJ THEN 1 ELSE 2;                             68007300
      LIBMSGCTR := PARAM;                                               68007400
      LIBMTNCE := TRUE;                                                 68007500
      DOING := 2;                                                       68007600
      WANT := WAITFOR := VMCPMSG;                                       68007700
      GO TO EXIT;                                                       68007800
      END CASE 0;                                                       68007900
   %....................................................................68008000
      BEGIN % CASE 1 - RESULTS OF DIRECTORY SEARCH                      68008100
      IF EVENTS[1] NEQ 7 THEN % GUARD FILE NOT PRESENT                  68008200
         BEGIN                                                          68008300
         WORD := -A[BASE+2];                                            68008400
         MSGPTR := 36;                                                  68008500
         GO ERR2;                                                       68008600
         END;                                                           68008700
      IF EVENTS[2].[36:6] NEQ 9 THEN % NOT "LOCK" FILE                  68008800
         BEGIN                                                          68008900
         WORD := -A[BASE+2];                                            68009000
         MSGPTR := 63;                                                  68009100
         GO ERR2;                                                       68009200
         END;                                                           68009300
      OBJ := BOOLEAN(A[BASE+5].[46:1]);                                 68009400
      SRC := BOOLEAN(A[BASE+5].[47:1]);                                 68009500
      A[BASE+3] := -A[BASE+2]; % GUARD FILE FIRST NAME                  68009600
      A[BASE+4] := USERCODE;  % GUARD FILE SECOND NAME                  68009700
      GO TO SECUR;                                                      68009800
      END CASE 1;                                                       68009900
   %....................................................................68010000
      BEGIN % CASE 2 - RESULTS OF LIBRARY MAINTENANCE                   68010100
      IF A[BASE+1] NEQ 7 THEN % SECURITY MAINTENANCE IGNORED            68010200
         BEGIN                                                          68010300
         WORD := A[BASE+1];                                             68010400
         MSGPTR := 36;                                                  68010500
         GO ERR2;                                                       68010600
         END;                                                           68010700
CHECK:                                                                  68010710
      IF A[BASE]=0 THEN IAM:=0 ELSE                                     68010800
         BEGIN                                                          68010810
         I:=A[BASE].[33:15]; IMAX:=A[BASE].[18:15];                     68010820
         PUB :=B(A[BASE].[15:1]); LOK:=B(A[BASE].[16:1]);               68010830
         UNLK:=B(A[BASE].[17:1]);                                       68010840
         GO TO RESTRT;                                                  68010850
         END;                                                           68010860
      GO TO EXIT;                                                       68010900
      END CASE 2;                                                       68011000
   END ALL CASES;                                                       68011100
ERR1:                                                                   68011200
ERRSW := A[I];                                                          68011300
MSGPTR := 8;                                                            68011400
IAM := VERROR;                                                          68011500
GO TO EXIT;                                                             68011600
ERR2:                                                                   68011700
LITOUT("ERR:   ",NOCRLF);                                               68011800
LITOUT(WORD,CRLF);                                                      68011900
GO TO CHECK; % CHECK FOR MORE PARAMETERS                                68012000
EXIT:                                                                   68012100
END PROCEDURE LOCKIT;                                                   68012200
%***********************************************************************69000000
PROCEDURE  TAPEIT(LCW,A); BOOLEAN LCW; ARRAY A[0];                      69000100
%***********************************************************************69000200
BEGIN                                                                   69000300
REAL  T,WORD;                                                           69000400
BOOLEAN  SQ;                                                            69000500
LABEL  EXIT;                                                            69000600
IF SCHEDULINE THEN  GOERR("TAPE   ",40);                                69000700
IF DEVICE = CONRAC THEN GOERR("TAPE   ",56);                            69000800
CASE DOING OF                                                           69000900
   BEGIN                                                                69001000
   %....................................................................69001100
      BEGIN   % CASE 0                                                  69001200
      IF FILENAME = 0 THEN GOERR("NO FILE",1);                          69001300
      A[BASE+2] := A[BASE+1] := 100; % SEQ. PARAMETERS                  69001400
      IF T := A[SREG:=BASE-A[BASE]].FF NEQ 0 THEN % PARAMETERS GIVEN    69001500
         BEGIN                                                          69001600
            DO BEGIN                                                    69001700
            IF (WORD:=A[INC(SREG)]).[3:3] NEQ 0 THEN %CHR. STRING       69001800
            MATCH(WORD.[6:42],"SEQ    ") SQ := TRUE                     69001900
            ELSE  GOERR(WORD,8)                                         69002000
            ELSE IF WORD.[1:2] = 0 THEN A[BASE+1] := WORD.[21:27]       69002100
            ELSE IF WORD.[1:2] = 3 THEN A[BASE+2] := WORD.[30:18]       69002200
            ELSE GOERR("       "&WORD[6:42:6],8);                       69002300
            END  UNTIL DECR(T) LEQ 0;                                   69002400
         IF NOT SQ THEN GOERR("WHAT.  ",34);                            69002500
         END;                                                           69002600
      WORK[0] := 0;                                                     69002700
      WORK[1] := LL&VMCPMSG[33:41:7]&(REAL(FILETYPE=8))[3:47:1];        69002800
      WORK[2] := USERCODE;                                              69002900
      WORK[3] := SOURCEFILE;                                            69003000
      WORK[7] := IF SQ THEN A[BASE+1] ELSE 0; % BASE FOR SEQ;           69003100
      WORK[8] := A[BASE+2]; % INCREMENT FOR SEQ                         69003200
      DISKWRITE(ESP1);                                                  69003300
      RUN1 := "PAPER  ";                                                69003400
      RUN2 := "CANDE  ";                                                69003500
      ERRSW := USERCODE;                                                69003600
      WANT := VDISPATCH;                                                69003700
      DOING := 1;                                                       69003800
      END; % CASE 0                                                     69003900
   %....................................................................69004000
      BEGIN % CASE 1                                                    69004100
      IF EVENTS[1] = 1 THEN % EOJ OK                                    69004200
         BEGIN                                                          69004300
         SOURCEFILE := MAKEFN("1S",LL);                                 69004400
         GOODOBJ := FALSE;                                              69004500
         END;                                                           69004600
      IAM := MSGPTR := 0;                                               69004700
      WRITEASTERISK := TRUE;                                            69004800
 % VOID                                                                 69004900
      END; % CASE 1                                                     69005000
   END ALL CASES;                                                       69005100
EXIT:                                                                   69005200
END PROCEDURE TAPEIT;                                                   69005300
%*********************************************************              71000000
PROCEDURE  CHARGEIT(LCW,A); BOOLEAN LCW; ARRAY A[0];                    71000100
%*********************************************************              71000200
           BEGIN                                                        71000300
 % VOID                                                                 71000400
 % VOID                                                                 71000500
LABEL         EXIT;                                                     71000600
REAL          T;                                                        71000700
              IF SCHEDULINE THEN GOERR("CHARGE ",40);                   71000750
              IF A[SREG:=BASE-A[BASE]].FF NEQ 1 THEN                    71000800
                   GOERR("NO CODE",7);                                  71000900
              T := IF A[INC(SREG)].[3:3] = 0 THEN                       71001000
                   DECCONV(A[SREG].[21:27]) ELSE  A[SREG].[6:42];       71001100
              CHARGE := TIMECONV(PTIME,FALSE);                          71001150
              LOGOFF(LCW,A[*]);                                         71001160
              LOGONTIME := TIME(1);                                     71001170
              CHARGE := T;                                              71001180
              PTIME := 0;                                               71001190
              LOGON(LCW,A[*]);                                          71001200
              WRITEASTERISK := TRUE;                                    71001300
              IAM := 0;                                                 71001400
    EXIT:                                                               71001500
         END  CHARGEIT;                                                 71001600
%*****************************************************************      72000000
PROCEDURE SCHEDULE(LCW,A);    BOOLEAN LCW;  ARRAY A[0];                 72000100
%****************************************************************       72000200
BEGIN                                                                   72000300
LABEL     ERR, EXIT;                                                    72000400
BOOLEAN   AFTER, LIB, TOIT;                                             72000500
REAL      WORD, TYPE, PC, I;                                            72000600
          CASE DOING OF                                                 72000700
     BEGIN  % CASES.                                                    72000800
     BEGIN   % CASE 0                                                   72000900
              IF TPCOUNT NEQ 0 THEN   % NEED MERGE.                     72001000
         BEGIN                                                          72001100
              LITOUT("WAIT.  ",NOCRLF);                                 72001200
               TEMP:=1; WANT:=VUPDATE;                                  72001300
         END  ELSE                                                      72001400
         BEGIN                                                          72001500
              CLEAR(WORK[0],29);                                        72001600
              WORK[1] := LL&VMCPMSG[33:41:7];                           72001700
              WORK[5]:=SOURCEFILE;                                      72001800
              WORK[4]:=WORK[6]:=USERCODE;                               72001900
              WORK[7] := MAKEFN("9S",LL);                               72002000
              WORK[9]:=CHARGE;                                          72002050
              PC:=A[SREG:=BASE-A[BASE]].FF;                             72002100
              WHILE I LSS PC DO    % PICK UP ALL PARAMETERS.            72002200
         BEGIN                                                          72002300
              INC(I);  WORD:=A[INC(SREG)];                              72002400
              TYPE := IF WORD.[2:4] = 0 THEN 0  % N OR -N.              72002500
              ELSE    IF WORD.[1:2] = 3 THEN 1  % +N.                   72002600
              ELSE    IF WORD.[1:2] = 1 THEN 2  % SPECIAL CHAR.         72002700
              ELSE 3;                           % ALPHA WORD.           72002800
              CASE TYPE OF                                              72002900
         BEGIN                                                          72003000
         BEGIN  % PARAM IS  N, -N                                       72003100
              IF NOT AFTER THEN  GOERR(DECCONV(ABS(WORD)),8);           72003200
              IF WORD LSS 800 OR WORD GTR 2400 OR                       72003300
                   DECCONV(WORD).[36:6] GTR 5 THEN  GOERR("TIME   ",41);72003400
              WORK[8] := WORD;  AFTER := FALSE;                         72003500
         END N CASE;                                                    72003600
              GOERR(DECCONV(WORD),8);  % PARAM IS  +N                   72003700
         BEGIN           % CASE 2.   (SPECIAL CHAR)                     72003800
              IF (LIB:=(WORD.CF="/")) AND TOIT THEN GOERR("NO USER",39);72003900
         END CASE 2;                                                    72004000
         BEGIN           % CASE 3.   (ALPHA WORD)                       72004100
              WORD := WORD.[6:42];                                      72004200
              MATCH(WORD,"TO     ")  AFTER:=LIB:=NOT (TOIT:=TRUE)       72004300
         ELSE                                                           72004400
              MATCH(WORD,"AFTER  ")  LIB:=TOIT:=NOT (AFTER:=TRUE)       72004500
         ELSE                                                           72004600
              MATCH(WORD,"CHARGE ")                                     72004620
                   BEGIN INC(I); WORD:=A[INC(SREG)];                    72004640
                   WORK[9]:=IF WORD.[3:3] GTR 0 THEN % ALPHA            72004645
                   WORD.[6:42] ELSE DECCONV(WORD.[6:42]); END           72004650
         ELSE %                                                         72004660
              IF TOIT THEN  WORK[3] := WORD                             72004700
         ELSE IF LIB  THEN  WORK[6] := WORD                             72004800
         ELSE               WORK[5] := WORD;                            72004900
         END CASE 3;                                                    72005000
         END ALL CASES;                                                 72005100
         END ALL PARAMS;                                                72005200
              IF WORK[5] = 0 THEN  GOERR("NO FILE",1);                  72005300
              IF WORK[3] = 0 THEN  GOERR("NO FILE",38);                 72005400
              IF WORK[3].[42:6] ! " " THEN GOERR(WORK[3],42);           72005450
              FIND(LL&IAM[33:41:7],0,A[BASE]:=WORK[5],WORK[6],USERCODE);72005500
              A[BASE+1] := WORK[3];  DISKWRITE(ESP1);                   72005600
              TEMP := 2;  DOING := 1;  WAITFOR := IAM;                  72005700
         END IF TPCOUNT;                                                72005800
     END DOING 0;                                                       72005900
     BEGIN   % DOING = 1,  RETURN AFTER FIND ON INPUT FILE.             72006000
          IF EVENTS[1] LSS 0 THEN  GOERR(A[BASE],2);  % DOES NOT EXIST. 72006100
          IF EVENTS[1] = 0 THEN  GOERR(A[BASE],24);  % SECURED FILE.    72006200
          FIND(LL&IAM[33:41:7],0,A[BASE+1],USERCODE,USERCODE);          72006300
          DOING := 2;  WAITFOR := IAM;                                  72006400
     END DOING 1;                                                       72006500
     BEGIN   % DOING = 2,  RETURN AFTER FIND ON OUTPUT FILE.            72006600
          IF EVENTS[1] GEQ 0 THEN  GOERR(A[BASE+1],3);                  72006700
              LITOUT("WAIT.  ",NOCRLF);                                 72006750
              EOJMSG := NOT CONCISE; WRITEASTERISK := CONCISE;          72006760
          RUN1 := "SCHEDUL";  RUN2 := "CANDE  ";  IAM := VDISPATCH;     72006800
          ERRSW:=USERCODE; % USED BY DISPATCH.                          72006850
     END  DOING 2;                                                      72006900
     END ALL CASES DOING OF;                                            72007000
EXIT:     END OF SCHEDULE;                                              72007100
%*********************************************************************: 73000000
PROCEDURE  SCHEDSTATUS (LCW,A);  BOOLEAN LCW;  ARRAY A[0];              73000100
%********************************************************************:: 73000200
BEGIN                                                                   73000300
REAL T;                                                                 73000400
LABEL EXIT;                                                             73000500
%....................................................................   73000600
REAL STREAM PROCEDURE STMESS(W,N,E1,E2); VALUE E1,E2;                   73000700
%....................................................................   73000800
     BEGIN LOCAL DV; LABEL ERR,SCH,RUN,EXT;                             73000900
     DI:=W; CI:=CI+E1; GO ERR; GO ERR; GO SCH; GO RUN; % ELSE "DONE"    73001000
     DS:=5LIT"DONE.";       TALLY:=5;  GO TO EXT;                       73001100
SCH: DS:=10LIT"SCHEDULED."; TALLY:=10; GO TO EXT;                       73001200
RUN: DS:=8LIT"RUNNING(";    TALLY:=9;  DV:=DI;                          73001300
     DI:=LOC E2; DS:=7FILL; DI:=DV; SI:=LOC E2;                         73001400
     8(IF SC=" " THEN SI:=SI+1 ELSE                                     73001500
        BEGIN DS:=CHR; TALLY:=TALLY+1; END);                            73001600
     DS:=LIT")"; GO TO EXT;                                             73001700
ERR: DS:=4LIT"ERR:"; SI:=N; SI:=SI+1; DS:=7CHR; TALLY:=11;              73001800
EXT: STMESS := TALLY;                                                   73001900
     END STREAM PROCEDURE STMESS;                                       73002000
   CASE DOING OF                                                        73002100
      BEGIN                                                             73002200
         BEGIN   % CASE 0                                               73002300
         IF (T:=A[SREG:=BASE-A[BASE]]).FF NEQ 1 OR                      73002400
         A[INC(SREG)].[3:3] = 0 THEN  GOERR("NAME   ",6);               73002500
         A[SREG].[1:5] := 0;                                            73002600
         MATCH(VERBTABLE[T.[9:9]].[6:42],"STATUS ")                     73002700
         SCHEDSTAT(A[SREG])  ELSE  SCHEDSTOP(A[SREG]);                  73002800
         WAITFOR := IAM;  DOING := 1;                                   73002900
         END CASE 0;                                                    73003000
      %.................................................................73003100
         BEGIN   % CASE 1                                               73003200
         IF EVENTS[1] LEQ 1 THEN                                        73003300
            BEGIN                                                       73003400
            MSGPOINTER := EVENTS[1] + 36;                               73003500
            END;                                                        73003600
         WRITEASTERISK:=FALSE;                                          73003700
         T:=STMESS(WORK[0],A[SREG],EVENTS[1],DECCONV(EVENTS[2]));       73003800
         TWXOUT(LL,WORK[0],T,1);                                        73003900
         IAM := 0;                                                      73004000
         END CASE 1;                                                    73004100
      END ALL CASES;                                                    73004200
EXIT:                                                                   73004300
   END OF SCHEDSTAT;                                                    73004400
%***********************************************************************74000000
PROCEDURE LISTFILE(LCW,A); BOOLEAN LCW; ARRAY A[0];                     74000100
%***********************************************************************74000200
BEGIN                                                                   74000300
DEFINE                                                                  74000400
UNK = SPECS.[ 1:1]#,  BAS = SPECS.[ 2:1]#,  ALG = SPECS.[ 3:1]#,        74000500
COB = SPECS.[ 4:1]#,  FTR = SPECS.[ 5:1]#,  TSP = SPECS.[ 6:1]#,        74000600
XAL = SPECS.[ 7:1]#,  SEQ = SPECS.[ 8:1]#,  DAT = SPECS.[ 9:1]#,        74000700
LOK = SPECS.[10:1]#,  INF = SPECS.[11:1]#,  C68 = SPECS.[12:1]#;        74000800
DEFINE                                                                  74000900
SRC = SPECS.[47:1]#,  OBJ = SPECS.[46:1]#,  LKD = SPECS.[45:1]#,        74001000
UNL = SPECS.[44:1]#,  SOL = SPECS.[43:1]#,  PUB = SPECS.[42:1]#;        74001100
BOOLEAN FROM, TOO, SPECS, LITERAL, HAVELITERAL, HAVEOUTPUT,             74001200
HAVEUSER;                                                               74001300
REAL I, PC, WORD, NAMECOUNT;                                            74001400
LABEL RUNIT, GETOBJECT, ERR, EXIT;                                      74001500
%.......................................................................74001600
REAL PROCEDURE DATECONV(DATE); VALUE DATE; REAL DATE;                   74001700
%.......................................................................74001800
   BEGIN                                                                74001900
   REAL M,D,Y; ARRAY L[0:15];                                           74002000
   FILL L[*] WITH 0,31,60,91,121,152,182,213,244,274,305,335,366;       74002100
   M:=DECCONV(DATE); D:=OCTCONV(M.[30:18]); Y:=OCTCONV(M.[18:12]);      74002200
   IF D GTR 60 THEN IF Y.[46:2] NEQ 0 THEN D:=D+1;                      74002300
   Y:=M.[18:12]; M:=0; DO M:=M+1 UNTIL D LEQ L[M] OR M=12;              74002400
   D:=DECCONV(D-L[M-1]); M:=DECCONV(M);                                 74002500
   DATE:="0/00/00"&M[1:37:11]&D[18:36:12]&Y[36:36:12];                  74002600
   DATECONV := DATE;                                                    74002700
   END PROCEDURE DATECONV;                                              74002800
%.......................................................................74002900
STREAM PROCEDURE HEADING(WORK);                                         74003000
%.......................................................................74003100
   BEGIN                                                                74003200
   DI:=WORK; DS:=39LIT"NAME    TYPE     RECS SEGS   CREATED   ";        74003300
   DS:=41LIT"ACCESSED  W/R  W/B  S-F LOCKD BY         ";                74003400
   END STREAM PROCEDURE HEADING;                                        74003500
%.......................................................................74003600
STREAM PROCEDURE OUTFORMAT                                              74003700
(WORK,FILNAM,FILTYP,RECS,SEGS,CDAT,ADAT,WPR,WPB,SAVFAC,SECNAM,AFLG);    74003800
%.......................................................................74003900
VALUE FILNAM,FILTYP,RECS,SEGS,CDAT,ADAT,WPR,WPB,SAVFAC,SECNAM,AFLG;     74004000
   BEGIN LOCAL DV;                                                      74004100
   DI:=WORK; SI:=LOC FILNAM;                                            74004200
   2(SI:=SI+1; DS:=7CHR; DS:=LIT" "); % FILE NAME AND TYPE              74004300
   2(DS:=5DEC; DV:=DI; DI:=DI-5; DS:=4FILL; DI:=DV); % RECS AND SEGS    74004400
   DS:=2LIT" "; DS:=8CHR; % CREATION DATE                               74004500
   DS:=3LIT" "; AFLG(DI:=DI-3; DS:=3LIT" * ");                          74004600
   DS:=8CHR; % ACCESSED DATE                                            74004700
   3(DS:=5DEC; DV:=DI; DI:=DI-5; DS:=4FILL; DI:=DV);                    74004800
   SI:=SI+1; DS:=2LIT" "; DS:=7CHR; DS:=9LIT" "; % SECURITY NAME        74004900
   END STREAM PROCEDURE OUTFORMAT;                                      74005000
%.......................................................................74005100
PROCEDURE PRINTIT(FILNAM,FILTYP);VALUE FILNAM,FILTYP;REAL FILNAM,FILTYP;74005200
%.......................................................................74005300
   BEGIN REAL I, SECNAM;                                                74005400
   SECNAM := IF BOOLEAN(WORK[5].[1:1]) THEN WORK[5].[6:42] % LOCKED     74005500
   ELSE IF WORK[5]=12 AND WORK[6] NEQ 12 THEN "PUBLIC "                 74005600
   ELSE IF WORK[5]=12 AND WORK[6]=12 THEN "UNLOCKD"                     74005610
   ELSE "       ";                                                      74005620
   I := 10; WHILE WORK[I] NEQ 0 AND I LSS 29 DO I:=I+1;                 74005700
   OUTFORMAT(L,FILNAM,FILTYP,(WORK[7]+1),((I-10)|WORK[8]),              74005800
   DATECONV(WORK[3].[30:18]),DATECONV(WORK[3].[12:18]),                 74005900
   WORK[0].[1:14],WORK[0].[15:15],WORK[3].[2:10],SECNAM,FALSE);         74006000
   TWXOUT(LL,L[0],72,1);                                                74006100
   END PROCEDURE PRINTIT;                                               74006200
%....................................................................   74006300
REAL STREAM PROCEDURE CHK(FIELD); VALUE FIELD;                          74006400
%.......................................................................74006500
   BEGIN % COUNT NUMBER OF BITS ON IN FIELD                             74006600
   SI:=LOC FIELD; SI:=SI+5;                                             74006700
   18(IF SB THEN TALLY:=TALLY+1; SKIP SB);                              74006800
   CHK:=TALLY;                                                          74006900
   END STREAM PROCEDURE CHK;                                            74007000
%.......................................................................74007100
CASE DOING OF                                                           74007200
   BEGIN                                                                74007300
   BEGIN % CASE 0 - SYNTAX ANALYSIS                                     74007400
   LABEL DUMMY;                                                         74007410
   PC := COMMONCELL; % TRANSFERRED FROM PROCEDURE "LISTIT"              74007500
   CLEAR(WORK,29); % ZERO OUT WORK ARRAY                                74007600
   WORK[2]:=WORK[4]:=USERCODE; WORK[6]:="TELETYP"; % DEFAULT OPTIONS    74007700
   NAMECOUNT := 20; % POINTER FOR FILE NAMES                            74007800
   WHILE I LSS PC DO                                                    74007900
      BEGIN                                                             74008000
      I := I + 1;                                                       74008100
      IF (WORD:=A[SREG:=SREG+1]).[1:2]=1 THEN                           74008200
         IF WORD="/" THEN WORD:="FROM   " & 4[3:45:3];                  74008300
      IF WORD.[3:3]=0 THEN GO ERR ELSE WORD.[1:5]:=0;                   74008400
      MATCH(WORD,"LITERAL")                                             74008500
         IF HAVELITERAL THEN GO ERR ELSE LITERAL:=TRUE                  74008600
      ELSE MATCH(WORD,"TO     ")                                        74008700
         IF HAVEOUTPUT THEN GO ERR ELSE TOO:=TRUE                       74008800
      ELSE MATCH(WORD,"FROM   ")                                        74008900
         IF HAVEUSER THEN GO ERR ELSE FROM:=TRUE                        74009000
      ELSE IF TOO THEN                                                  74009100
         IF HAVEOUTPUT THEN GO ERR ELSE                                 74009200
           BEGIN WORK[6]:=WORD; TOO:=NOT(HAVEOUTPUT:=TRUE); END         74009300
      ELSE IF FROM THEN                                                 74009400
         IF HAVEUSER THEN GO ERR ELSE                                   74009500
           BEGIN WORK[4]:=WORD; FROM:=NOT(HAVEUSER:=TRUE); END          74009600
      ELSE IF LITERAL THEN                                              74009700
         IF HAVELITERAL THEN GO ERR ELSE                                74009800
           BEGIN WORK[5]:=WORD; LITERAL:=NOT(HAVELITERAL:=TRUE); END    74009900
      ELSE MATCH(WORD,"PRINTER")                                        74010000
         IF HAVEOUTPUT THEN GO ERR ELSE                                 74010100
           BEGIN WORK[6]:=WORD; HAVEOUTPUT :=TRUE; END                  74010200
      ELSE MATCH(WORD,"SOURCE ") SRC:=TRUE                              74010300
      ELSE MATCH(WORD,"OBJECT ") OBJ:=TRUE                              74010400
      ELSE MATCH(WORD,"LOCKED ") LKD:=TRUE                              74010500
      ELSE MATCH(WORD,"UNLOCKE") UNL:=TRUE                              74010600
      ELSE MATCH(WORD,"PUBLIC ") PUB:=TRUE                              74010610
      ELSE MATCH(WORD,"SOLEUSE") SOL:=TRUE                              74010700
      ELSE MATCH(WORD,"UNKNOWN") UNK:=TRUE                              74010800
      ELSE MATCH(WORD,"BASIC  ") BAS:=TRUE                              74010900
      ELSE MATCH(WORD,"ALGOL  ") ALG:=TRUE                              74011000
      ELSE MATCH(WORD,"COBOL  ") COB:=TRUE                              74011100
      ELSE MATCH(WORD,"FORTRAN") FTR:=TRUE                              74011200
      ELSE MATCH(WORD,"TSPOL  ") TSP:=TRUE                              74011300
      ELSE MATCH(WORD,"XALGOL ") XAL:=TRUE                              74011400
      ELSE MATCH(WORD,"SEQ    ") SEQ:=TRUE                              74011500
      ELSE MATCH(WORD,"DATA   ") DAT:=TRUE                              74011600
      ELSE MATCH(WORD,"LOCK   ") LOK:=TRUE                              74011700
      ELSE MATCH(WORD,"INFO   ") INF:=TRUE                              74011800
      ELSE MATCH(WORD,"COBOL68") C68:=TRUE                              74011810
      ELSE % ASSUME IT IS A FILE NAME                                   74011900
         BEGIN                                                          74012000
         IF (NAMECOUNT:=NAMECOUNT+1) GTR 29 THEN GOERR("TOOMANY",30);   74012100
         WORK[NAMECOUNT] := WORD; % SAVE FILE NAME                      74012200
         END;                                                           74012300
      END WHILE STATEMENT;                                              74012400
   IF   FROM  THEN GOERR("FROM   ",8);                                  74012500
   IF   TOO   THEN GOERR("TO     ",8);                                  74012600
   IF LITERAL THEN GOERR("LITERAL",8);                                  74012700
   IF CHK(SPECS.[1:12]) GTR 1 THEN GOERR("FILTYPE",31);                 74012800
   IF CHK(SPECS.[42:4]) GTR 1 THEN GOERR("SECURTY",8);                  74012900
   IF CHK(SPECS.[46:2]) GTR 1 THEN GOERR("SRC-OBJ",8);                  74013000
   TEMP := 7;                                                           74013100
   IF (NAMECOUNT:=NAMECOUNT-21) = 0 THEN % ONE FILENAME SPECIFIED       74013200
   IF (PREVRCW-BASE) GTR 41 THEN % ENOUGH ROOM IN STACK                 74013300
      BEGIN % LET CANDE DO THE I/O                                      74013400
      A[BASE] := 7; % LOOP COUNTER                                      74013500
      A[BASE+1] := WORK[21]; % SAVE FILE NAME IN STACK                  74013600
      A[BASE+7] := WORK[4];  % SAVE USERNAME                            74013700
      FIND(LL&IAM[33:41:7],0,WORK[21],WORK[4],USERCODE); % SRC          74013800
      FIND(LL&IAM[33:41:7],0,WORK[21].[6:36],WORK[4],USERCODE); % OBJ   74013900
      DOING := 2;                                                       74014000
      WAITFOR := IAM;                                                   74014100
      GO TO EXIT;                                                       74014200
      END;                                                              74014300
   WORK[3] := REAL(SPECS);                                              74014400
   WORK[7] := NAMECOUNT;                                                74014500
   DISKWRITE(ESP1);                                                     74014600
   IF HAVEOUTPUT THEN % OUTPUT MEDIA SPECIFIED                          74014700
   MATCH(WORK[6],"PRINTER") ELSE                                        74014800
   MATCH(WORK[6],"TELETYP") ELSE                                        74014900
      BEGIN % DISK FILE NAME                                            74015000
      FIND(LL&IAM[33:41:7],0,WORK[6],USERCODE,USERCODE);                74015100
      A[BASE+1] := WORK[6]; % SAVE OUTPUT FILE NAME                     74015200
      DOING := 1;                                                       74015300
      WAITFOR := IAM;                                                   74015400
      GO TO EXIT;                                                       74015500
      END;                                                              74015600
   GO RUNIT; % TO PRINTER OR TELETYPE                                   74015700
   END; % CASE 0                                                        74015800
%....................................................................   74015900
   BEGIN % CASE 1 - SEARCH FOR OUTPUT FILE ON DISK                      74016000
   IF EVENTS[1] GEQ 0 THEN GOERR(A[BASE+1],3); % ALREADY PRESENT        74016100
RUNIT:                                                                  74016200
   RUN1 := "LFILES "; RUN2 := "CANDE  "; ERRSW := USERCODE;             74016300
   IAM := VDISPATCH;                                                    74016400
   EOJMSG := NOT CONCISE;                                               74016500
   WRITEASTERISK := CONCISE;                                            74016600
   GO TO EXIT;                                                          74016700
   END; % CASE 1                                                        74016800
%....................................................................   74016900
   BEGIN % CASE 2 - SEARCH FOR FILE NAME                                74017000
   I := A[BASE] := A[BASE] - 2;                                         74017100
   A[BASE+I] := EVENTS[1]; A[BASE+I+1] := EVENTS[2].[18:15]; % HDR ADRS.74017200
   IF I GTR 3 THEN % WAIT FOR OBJECT FILE RESULT                        74017300
      BEGIN                                                             74017400
      WAITFOR := IAM;                                                   74017500
      GO TO EXIT;                                                       74017600
      END;                                                              74017700
   IF A[BASE+3] LEQ 0 AND A[BASE+5] LEQ 0 THEN GOERR(A[BASE+1],2);      74017800
   TIMEOFDAY(WORK[2],TIMECONV(TIME(1),TRUE));                           74017900
   WORK[0] := DATE; WORK[1] := A[BASE+7];  BLANK(WORK[1]); % USERNAME   74018000
   TWXOUT(LL,WORK[0],26,1);                                             74018100
   HEADING(WORK); TWXOUT(LL,WORK[0],72,1);                              74018200
   WRITEASTERISK := TRUE;                                               74018300
   IF A[BASE+5] LEQ 0 THEN GO GETOBJECT; % SOURCE VERSION NOT ON DISK   74018400
   LLDISKREAD := A[BASE+6];                                             74018500
   WANT := VDISKREAD;                                                   74018600
   DOING := 3;                                                          74018700
   GO EXIT;                                                             74018800
   END; % CASE 2                                                        74018900
%....................................................................   74019000
   BEGIN % CASE 3 - SOURCE FILE HEADER IN CORE                          74019100
   IF (I:=WORK[4].[36:6]) GTR NUMOFTYPES THEN I:=0;                     74019200
   PRINTIT(A[BASE+1],TYPETABLE[I]);                                     74019300
   IF A[BASE+3] LEQ 0 THEN                                              74019400
      BEGIN                                                             74019500
      IAM := 0; GO TO EXIT;                                             74019600
      END;                                                              74019700
GETOBJECT:                                                              74019800
   LLDISKREAD := A[BASE+4];                                             74019900
   WANT := VDISKREAD;                                                   74020000
   DOING := 4;                                                          74020100
   GO TO EXIT;                                                          74020200
   END; % CASE 3                                                        74020300
%.....................................................................  74020400
   BEGIN % CASE 4 - OBJECT HEADER IN CORE                               74020500
   IF (I:=WORK[4].[36:6]) GTR NUMOFTYPES THEN I := 0;                   74020600
   I := "OBJ( ) " & TYPETABLE[I][30:6:6];                               74020700
   PRINTIT(A[BASE+1],I);                                                74020800
   IAM := 0;                                                            74020900
   GO TO EXIT;                                                          74021000
   END CASE 4;                                                          74021100
   END ALL CASES;                                                       74021200
ERR: ERRSW := A[SREG]; MSGPTR := 8; IAM := VERROR;                      74021300
EXIT:                                                                   74021400
END PROCEDURE LISTFILES;                                                74021500
%****************************************************************       75000000
PROCEDURE UPDATE(LCW,A);  BOOLEAN LCW;  ARRAY A[0];                     75000100
%****************************************************************       75000200
BEGIN                                                                   75000300
          CASE DOING OF                                                 75000400
     BEGIN                                                              75000500
          IF TPCOUNT=0 THEN IAM:=0 ELSE % CASE 0.                       75000600
     BEGIN   % CASE 0                                                   75000700
          WORK[0] := DOGHOUSE[LL] := 0;                                 75000800
          WORK[1] := LL&VMCPMSG[33:41:7]&R(FILETYPE=8)[3:47:1]          75000900
          &R(MONITORBIT)[9:47:1];                                       75000910
          WORK[2]:=USERCODE; WORK[4]:=USERLOC;                          75001000
          WORK[3] := SOURCEFILE;                                        75001100
          MOVE(16,WORDS,CTRANDBASE[0],WORK[5]);                         75001200
          ERRSW := FILENAME;                                            75001300
          RUN1 := "LIST   ";  RUN2 := "CANDE  ";                        75001400
          WANT := VCLOSEWORKTABLE;  DOING := 1;                         75001500
          DISKWRITE(ESP1);                                              75001600
     END CASE 0;                                                        75001700
     BEGIN   % CASE 1                                                   75001800
          WANT := VDISPATCH;  DOING := 2; ERRSW := FILENAME;            75001900
     END CASE 1;                                                        75002000
     BEGIN   % CASE 2                                                   75002100
     IF EVENTS[1] = 1 THEN % EOJ OK                                     75002200
        BEGIN                                                           75002210
        SOURCEFILE := MAKEFN("1S",LL);                                  75002220
        CANCELCKPT(A[*]);                                               75002300
        END;                                                            75002310
     IAM:=0; IF BREAKORWRU THEN LINECLEAR(LCW,A[*]);                    75002320
     END CASE 2;                                                        75002400
     END ALL CASES;                                                     75002500
END CLEANWORKFILE;                                                      75002600
%***********************************************************************76000000
REAL STREAM PROCEDURE SPECSCAN                                          76000100
   (IADR,OADR,SIZ,VOCAB,VSIZE,WHICH,FTOG,EADRS);                        76000110
%***********************************************************************76000200
VALUE VSIZE,FTOG,EADRS;                                                 76000300
BEGIN LOCAL T,SV,DV,COMA; LABEL NEXT,LETTER,NUMBR,FIIL,EXIT;            76000400
COMMENT SPECIAL SCANNER FOR "FIND/REPLACE" INSTRUCTIONS.                76000500
  RETURNS A VALUE ( TO SPECSCAN ) OF:                                   76000600
    1 = "INSTRUCTION"                                                   76000700
    2 = DELIMITED STRING                                                76000800
    3 = SEQUENCE NUMBER,                                                76000900
    4 = SEQUENCE NUMBER FOLLOWED BY "-" ( SEQUENCE RANGE ),             76001000
    5 = END OF RECORD WITH CONTINUATION CHARACTER (",")                 76001100
    6 = END OF STATEMENT                                                76001200
    7 = FILE NAME                                                       76001210
    10= ERROR (MISSING STRING DELIMETER OR STRING TOO LONG)             76001300
    11= ERROR (FIND/REPLACE "INSTRUCTION" TOO LONG)                     76001400
    12= ERROR (FIND/REPLACE "INSTRUCTION" NOT RECOGNIZED)               76001500
    13= ERROR (SEQUENCE NUMBER TOO LONG)                                76001600
    14=MISSING FILE NAME                                                76001610
  POSITION OF "INSTRUCTION" RETURNED TO "WHICH":                        76001700
    0 = "FIND"                                                          76001800
    1 = "REPLACE"                                                       76001900
    2 = "FIRST"                                                         76002000
    3 = "LITERAL"                                                       76002100
    4 = "WITH"                                                          76002200
    5 = "ARROW"                                                         76002300
    6 = "PRINT"                                                         76002400
    7 = "END"                                                           76002500
    8 = "SEQUENCE"                                                      76002600
    9 = "TEXT"                                                          76002700
    10= "FILE"                                                          76002710
    11= "SITE"                                                          76002720
END OF COMMENT;                                                         76002800
  SI:=IADR; SI:=SI+5; SI:=SC; TALLY:=6; COMA:=TALLY;                    76002900
NEXT: IF SC=" " THEN BEGIN SI:=SI+1; GO NEXT; END; % SKIP OVER BLANKS   76003000
  IF SC=LEFTARROW THEN % END OF RECORD                                  76003100
    BEGIN                                                               76003200
    SV:=SI; SI:=LOC SV; SI:=SI+5;                                       76003210
    DV:=DI; DI:=LOC EADRS; DI:=DI+5;                                    76003220
    IF 3 SC=DC THEN % END OF RECORD                                     76003230
      BEGIN                                                             76003240
      TALLY:=COMA; SPECSCAN:=TALLY; GO TO EXIT;                         76003250
      END;                                                              76003260
   SI:=SV; DI:=DV;                                                      76003270
   END;                                                                 76003280
  IF SC="," THEN % COULD BE A CONTINUATION CHARACTER                    76003300
    BEGIN TALLY:=5; COMA:=TALLY; SI:=SI+1; GO TO NEXT; END;             76003400
  TALLY:=6; COMA:=TALLY; % NOT A CONTINUATION                           76003500
  FTOG(JUMP OUT TO FIIL); % JUMP TO FILENAME SCANNER                    76003550
  IF SC=ALPHA THEN % COULD BE ALPHABET, DIGIT OR "QMARK"                76003600
    BEGIN IF SC LSS "0" THEN GO TO LETTER;                              76003700
    IF SC GTR "9"  THEN ELSE GO TO NUMBR;                               76003800
    END IF ALPHA;                                                       76003900
     %..................................................................76004000
  % MUST BE A DELIMITER                                                 76004100
  DI:=LOC T; DI:=DI+7; DS:=CHR; % SAVE THE DELIMETER                    76004200
  SV:=SI; SI:=LOC SV; DI:=OADR; DS:=WDS; % STARTING ADDRESS             76004300
  SI:=SV; TALLY:=10; SPECSCAN:=TALLY; TALLY:=0;                         76004400
  63(IF SC=LEFTARROW THEN                                               76004500
     BEGIN                                                              76004510
     SV:=SI; SI:=LOC SV; SI:=SI+5; DI:=LOC EADRS; DI:=DI+5;             76004520
     IF 3SC=DC THEN JUMP OUT TO EXIT ELSE SI:=SV;                       76004530
     END;                                                               76004550
  IF SC=T THEN JUMP OUT; % 2ND DELIMITER                                76004600
     TALLY:=TALLY+1; SI:=SI+1);                                         76004700
  IF TOGGLE THEN ELSE % TOO LONG                                        76004800
    BEGIN TALLY:=10; SPECSCAN:=TALLY; GO EXIT; END;                     76004900
  SI:=SI+1; SV:=SI; % SKIP OVER 2ND DELIMITER, SAVE ADDRESS             76005000
  T:=TALLY; SI:=LOC T; DI:=SIZ; DS:=WDS; % SIZE                         76005100
  SI:=LOC SV; DI:=IADR; DS:=WDS; % NEXT ADDRESS                         76005200
  TALLY:=2; SPECSCAN:=TALLY; % CODE FOR DELIMITED STRING                76005300
  GO TO EXIT;                                                           76005400
     %..................................................................76005500
LETTER: % SHOULD BE AN "INSTRUCTION"                                    76005600
  SV:=SI; TALLY:=0; % SAVE STARTING ADDRESS                             76005700
  SI:=LOC SV; DI:=OADR; DS:=WDS; SI:=SV;                                76005800
  9(IF SC LEQ "9" THEN ELSE JUMP OUT;                                   76005900
    IF SC=ALPHA THEN ELSE JUMP OUT; SI:=SI+1; TALLY:=TALLY+1);          76006000
  IF TOGGLE THEN % TOO LONG                                             76006100
    BEGIN TALLY:=11; SPECSCAN:=TALLY; GO EXIT; END;                     76006200
  DV:=SI; SI:=LOC DV; DI:=IADR; DS:=WDS; % NEXT ADDRESS                 76006300
  T:=TALLY; SI:=LOC T; SI:=SI+7; % SIZE OF "INSTRUCTION"                76006400
  IF SC LSS "3" THEN % 3 CHARACTERS MINIMUM                             76006500
    BEGIN TALLY:=12; SPECSCAN:=TALLY; GO EXIT; END;                     76006600
  % NOW CHECK INPUT STRING AGAINST VOCABULARY                           76006700
  DI:=VOCAB; DV:=DI; TALLY:=0;                                          76006800
  VSIZE(SI:=SV; IF T SC = DC THEN JUMP OUT;                             76006900
        DI:=DV; DI:=DI+8; DV:=DI; TALLY:=TALLY+1);                      76007000
  IF TOGGLE THEN ELSE % NO MATCH                                        76007100
    BEGIN TALLY:=12; SPECSCAN:=TALLY; GO EXIT; END;                     76007200
  T:=TALLY; SI:=LOC T; DI:=WHICH; DS:=WDS;                              76007300
  TALLY:=1; SPECSCAN:=TALLY; % CODE FOR "INSTRUCTION";                  76007400
  GO TO EXIT;                                                           76007500
     %..................................................................76007600
NUMBR: % SHOULD BE A SEQUENCE NUMBER                                    76007700
  SV:=SI; SI:=LOC SV; DI:=OADR; DS:=WDS; % STARTING ADDRESS             76007800
  SI:=SV; TALLY:=0;                                                     76007900
  9(IF SC GTR "9"  THEN JUMP OUT;                                       76008000
    IF SC LSS "0" THEN JUMP OUT; SI:=SI+1; TALLY:=TALLY+1);             76008100
  IF TOGGLE THEN ELSE % TOO LONG                                        76008200
    BEGIN TALLY:=13; SPECSCAN:=TALLY; GO EXIT; END;                     76008300
  T:=TALLY; 63(IF SC=" " THEN SI:=SI+1 ELSE JUMP OUT);                  76008400
  IF SC="-" THEN % SEQUENCE RANGE SPECIFIED                             76008500
    BEGIN SI:=SI+1; TALLY:=4; END ELSE TALLY:=3;                        76008600
  SV:=SI; SI:=LOC SV; DI:=IADR; DS:=WDS; % NEXT ADDRESS                 76008700
  SI:=LOC T; DI:=SIZ; DS:=WDS; % SIZE OF FIELD                          76008800
  SPECSCAN:=TALLY; GO TO EXIT;                                          76008900
  %...................................................................  76008905
FIIL:  % LOOKING FOR A FILE NAME                                        76008910
  SV:=SI; SI:=LOC SV; DI:=OADR; DS:=WDS; % START OF STRING              76008915
  SI:=SV; TALLY:=0;                                                     76008920
  IF SC=ALPHA THEN ELSE % MISSING FILE NAME                             76008925
    BEGIN TALLY:=14; SPECSCAN:=TALLY; GO TO EXIT; END;                  76008930
  7(IF SC=ALPHA THEN ELSE JUMP OUT; SI:=SI+1; TALLY:=TALLY+1);          76008935
  IF SC="/" THEN % SECOND NAME GIVEN                                    76008945
    BEGIN SI:=SI+1; TALLY:=TALLY+1; % SKIP OVER "/"                     76008950
    7(IF SC=ALPHA THEN ELSE JUMP OUT; SI:=SI+1; TALLY:=TALLY+1);        76008960
    END;                                                                76008965
  SV:=SI; SI:=LOC SV; DI:=IADR; DS:=WDS; % NEXT ADDRESS                 76008970
  T:=TALLY; SI:=LOC T; DI:=SIZ; DS:=WDS; % SIZE OF FILE NAME            76008975
  TALLY:=7; SPECSCAN:=TALLY; GO EXIT; % CODE FOR FILE NAME              76008980
EXIT:                                                                   76009000
END STREAM PROCEDURE SPECSCAN;                                          76009100
%***********************************************************************76009200
PROCEDURE REPLACEIT(LCW,STACK); BOOLEAN LCW; ARRAY STACK[0];            76009300
%***********************************************************************76009400
BEGIN                                                                   76009500
COMMENT ROUTINE TO CHECK SYNTAX AND PACK INFORMATION INTO STACK.        76009600
  STACK CODE:                                                           76009700
    STACK[BASE+1].[01:01] (1 = "FILE    " INSTRUCTION RECEIVED)         76009710
    STACK[BASE+1].[02:01] (1 = INPUT  FILE SPECIFIED )                  76009720
    STACK[BASE+1].[03:01] (1 = OUTPUT FILE SPECIFIED )                  76009730
    STACK[BASE+1].[04:01] (1 = "SITE    " INSTRUCTION RECEIVED)         76009740
    STACK[BASE+1].[05:01] (1 = "FIND    " INSTRUCTION RECEIVED)         76009800
    STACK[BASE+1].[06:01] (1 = "REPLACE " INSTRUCTION RECEIVED)         76009900
    STACK[BASE+1].[07:011 (1 = "FIRST   " INSTRUCTION RECEIVED)         76010000
    STACK[BASE+1].[08:01] (1 = "LITERAL " INSTRUCTION RECEIVED)         76010100
    STACK[BASE+1].[11:01] (1 = "PRINT   " INSTRUCTION RECEIVED)         76010200
    STACK[BASE+1].[12:01] (1 = "SEQUENCE" INSTRUCTION RECEIVED)         76010300
    STACK[BASE+1].[17:01] (1 = "TEXT    " INSTRUCTION RECEIVED)         76010400
    STACK[BASE+1].[18:01] (1 = REPLACE OR FIND STATEMENT COMPLETE)      76010500
    STACK[BASE+1].[19:01] (1 = FIRST REPLACE INSTRUCTION RECVD)         76010600
    STACK[BASE+1].[20:04] ( STRING COUNT )                              76010700
    STACK[BASE+1].[24:24] ( TOTAL SIZE OF STATEMENT ( NO. OF CHARACTERS 76010800
  4 CHARACTER CODE PRECEEDS EACH "STRING" IN STACK:                     76010900
    1ST CHARACTER = TYPE OF STRING ( 2, 3 OR 4 )                        76011000
    2ND CHARACTER = 1 IF "FIRST" ONLY, 0 IF ALL ( FOR REPLACE )         76011100
    3RD CHARACTER = 1 IF "LITERAL" COMPARISON, 0 IF NOT                 76011200
    4TH CHARACTER = SIZE ( NO OF CHARACTERS IN STRING ).                76011300
  THE ROUTINE USES MESAGE/CANDE RECORDS MSGVAL THRU MSGVAL+6            76011400
END OF COMMENT;                                                         76011500
DEFINE WRD  = STACK[BASE+1] #,                                          76011600
       FTOG = WRD.[01:01] #,                                            76011610
      INFIL = WRD.[02:01] #,                                            76011620
     OUTFIL = WRD.[03:01] #,                                            76011630
       SITE = WRD.[04:01] #,                                            76011640
       FND  = WRD.[05:01] #,                                            76011700
       REP  = WRD.[06:01] #,                                            76011800
       FRST = WRD.[07:01] #,                                            76011900
       LIT  = WRD.[08:01] #,                                            76012000
       PRNT = WRD.[11:01] #,                                            76012100
       SEQ  = WRD.[12:01] #,                                            76012200
       TEXT = WRD.[17:01] #,                                            76012300
       OK   = WRD.[18:01] #,                                            76012400
       FREP = WRD.[19:01] #,                                            76012500
    STRGCNT = WRD.[20:04] #,                                            76012600
       TSIZ = WRD.[24:24] #,                                            76012700
       PREV = STACK[BASE] #;                                            76012800
ARRAY VOCAB[0:12];                                                      76012900
DEFINE MSGVAL = 50 #, A = STACK #;                                      76013000
INTEGER X;                                                              76013100
REAL IADR,OADR,AROADR,ENDADR,TYPE,SIZ,VSIZ,WHICH;                       76013200
LABEL LOOP,STRING,ERROR,EXIT,CASE1;                                     76013300
     %******************************************************************76013400
REAL STREAM PROCEDURE ERRVALUE(OADR); VALUE OADR;                       76013500
     %******************************************************************76013600
BEGIN % EXTRACT STRING FOR ERROR MESSAGE                                76013700
  SI:=OADR; DI:=LOC ERRVALUE; DS:=8LIT"0       "; DI:=DI-7;             76013800
  7(IF SC=ALPHA THEN DS:=CHR ELSE JUMP OUT);                            76013900
END STREAM PROCEDURE ERRVALUE;                                          76014000
     %******************************************************************76014100
REAL STREAM PROCEDURE CNVERT(OADR,SIZ); VALUE OADR,SIZ;                 76014200
     %******************************************************************76014300
BEGIN SI:=OADR; DI:=LOC CNVERT; DS:=SIZ OCT;                            76014400
END STREAM PROCEDURE CNVERT;                                            76014500
     %******************************************************************76014600
STREAM PROCEDURE CLEARSTACK(STACK,TSIZ); VALUE TSIZ;                    76014700
     %******************************************************************76014800
BEGIN % ZERO OUT THE STACK TO AVOID POSSIBLE FLAG BIT ERRORS;           76014900
LOCAL T1,T2;                                                            76015000
  SI:=LOC TSIZ; SI:=SI+6;                                               76015100
  DI:=LOC T1; DI:=DI+7; DS:=CHR; DI:=LOC T2; DI:=DI+7; DS:=CHR;         76015200
  DI:=STACK; % SHOULD POINT TO STACK[BASE+2]                            76015300
  T1(2(DS:=32LIT"0")); T2(DS:=LIT"0");                                  76015400
END STREAM PROCEDURE CLEARSTACK;                                        76015500
     %******************************************************************76015600
STREAM PROCEDURE SETL(L,AROADRS,ENDADRS);                               76015700
     %******************************************************************76015800
BEGIN LOCAL SV;                                                         76015900
  DI:=L; DS:=8LIT"9"; DS:= LIT LEFTARROW;                               76016000
  SI:=L; SV:=SI; SI:=LOC SV; DI:=ENDADRS; DS:=WDS;                      76016100
  SI:=SV; SI:=SI+8; SV:=SI; SI:=LOC SV; DI:=AROADRS; DS:=WDS;           76016200
END STREAM PROCEDURE SETL;                                              76016300
     %******************************************************************76016400
STREAM PROCEDURE SAVEIT(STACK,OLDSIZ,OADR,ADDSIZ,TYPE,NEWSIZ);          76016500
     %******************************************************************76016600
VALUE OLDSIZ,OADR,ADDSIZ,TYPE,NEWSIZ;                                   76016700
COMMENT SAVE STRING AND PREFIX IN STACK;                                76016800
BEGIN LOCAL T1,T2,LT;                                                   76016900
  SI:=LOC OLDSIZ; SI:=SI+6; % CHARACTERS TO SKIP OVER                   76017000
  DI:=LOC T1; DI:=DI+7; DS:=CHR; DI:=LOC T2; DI:=DI+7; DS:=CHR;         76017100
  DI:=STACK; DI:=DI+16; % SKIP OVER 1ST 2 WORDS                         76017200
  T1(2(DI:=DI+32)); DI:=DI+T2; % SKIP OVER PREVIOUS STRINGS             76017300
  SI:=LOC TYPE; SI:=SI+7; DS:=CHR; % STRING TYPE ( 2,3,4 OR 7 )         76017400
  SI:=STACK; SI:=SI+9;                                                  76017500
  SKIP SB; IF SB THEN DS:=LIT"1" ELSE DS:=LIT"0"; % "FIRST" CODE        76017600
  LT:=DI; SKIP SB; IF SB THEN DS:=LIT"1" ELSE DS:=LIT"0"; % "LITERAL"   76017700
  SI:=LOC ADDSIZ; SI:=SI+7; DS:=CHR; % SIZE OF STRING                   76017800
  SI:=OADR; DS:=ADDSIZ CHR; % TRANSFER STRING                           76017900
  SI:=LOC NEWSIZ; SI:=SI+4; DI:=STACK; DI:=DI+12; DS:=4 CHR;            76018000
 % CHECK FOR ALL BLANKS IN TYPE 1 STRINGS                               76018010
  SI:=LOC TYPE; SI:=SI+7; IF SC="1" THEN                                76018020
    BEGIN SI:=OADR; ADDSIZ(IF SC=" " THEN SI:=SI+1 ELSE JUMP OUT);      76018030
    IF TOGGLE THEN % ALL BLANKS, MUST BE IN "LITERAL" MODE              76018040
      BEGIN DI:=LT; DS:=LIT"1"; END;                                    76018050
    END;                                                                76018060
END STREAM PROCEDURE SAVEIT;                                            76018100
     %******************************************************************76018200
STREAM PROCEDURE SETVOCAB(VOCAB);                                       76018300
     %******************************************************************76018400
BEGIN DI:=VOCAB;  DS:=32LIT"FIND    REPLACE FIRST   LITERAL ";          76018500
  DS:=48LIT"WITH    ARROW   PRINT   END     SEQUENCETEXT    ";          76018600
  DS:=16LIT"FILE    SITE    ";                                          76018610
END STREAM PROCEDURE SETVOCAB;                                          76018700
     %******************************************************************76018800
REAL STREAM PROCEDURE ADRES(V); BEGIN SI:=V; ADRES:=SI; END;            76018900
     %******************************************************************76019000
CASE DOING OF                                                           76019100
BEGIN                                                                   76019200
BEGIN % CASE 0                                                          76019300
 % VOID                                                                 76019400
  IF NOT CONTINUEBIT THEN % FIRST CALL ON THE ROUTINE                   76019500
    BEGIN STACK[BASE+1]:=0; CONTINUEBIT:=TRUE; PREV:=-1; END;           76019600
  IF PREVRCW - BASE LEQ 34 THEN % NOT ENOUGH ROOM                       76019700
    BEGIN CLEARSTACK(STACK[BASE+2],TSIZ);                               76019800
    GOERR("NO ROOM",MSGVAL);                                            76019900
    END;                                                                76020000
  IADR:=ADRES(WORK[1]); % ADDRESS OF INPUT RECORD                       76020100
  SETVOCAB(VOCAB); VSIZ:=12; % SET UP "VOCABULARY"                      76020200
  SETL(L,AROADR,ENDADR); % LOCATION OF 8 NINES AND LEFT ARROW           76020300
LOOP: % START OF SYNTAX CHECK                                           76020400
  TYPE:=SPECSCAN(IADR,OADR,SIZ,VOCAB,VSIZ,WHICH,FTOG,WORKENDADRS);%SNTX 76020500
  MSGPTR := MSGVAL ; % "ERROR IN FIND/REPLACE STATEMENT                 76020600
  IF TYPE=1 THEN % AN "INSTRUCTION"                                     76020700
    BEGIN IF WHICH LSS 2 THEN % "FIND" OR "REPLACE"                     76020800
      BEGIN IF FND+REP NEQ 0 THEN GO ERROR; % REDUNDANT                 76020900
      IF WHICH=0 THEN IF FREP=1 THEN GO ERROR ELSE FND:=1               76021000
      ELSE % WHICH = 1                                                  76021100
        BEGIN REP:=1; FREP:=1; END;                                     76021200
      FRST:=0; LIT:=0; OK:=0;                                           76021300
      END % IF WHICH LSS 2                                              76021400
    ELSE IF WHICH LSS 6 THEN % "FIRST","LITERAL","WITH" OR "ARROW"      76021500
      BEGIN IF REP+FND NEQ 1 THEN GO ERROR;                             76021600
      IF WHICH LSS 4 THEN % "FIRST" OR "LITERAL"                        76021700
        BEGIN IF STRGCNT NEQ 0 THEN GO TO ERROR;                        76021800
        IF WHICH=2 THEN IF FRST=1 THEN GO TO ERROR ELSE FRST:=1         76021900
        ELSE IF LIT=1 THEN GO TO ERROR ELSE LIT:=1;                     76022000
        END % IF WHICH LSS 4                                            76022100
      ELSE IF WHICH=4 THEN GO TO LOOP % "WITH" (OPTIONAL WORD )         76022200
      ELSE % WHICH = 5 ( "ARROW" )                                      76022300
        BEGIN OADR:=AROADR; SIZ:=1; TYPE:=2; GO TO STRING;              76022400
        END % IF WHICH = 5                                              76022500
      END % IF WHICH LSS 6                                              76022600
    ELSE IF WHICH=6 THEN % "PRINT"                                      76022700
      BEGIN IF PRNT=1 THEN GO TO ERROR; PRNT:=1; TEXT:=0; SEQ:=0;       76022800
      END % IF WHICH = 6                                                76022900
    ELSE IF WHICH=7 THEN % "END"                                        76023000
      BEGIN OADR:=ENDADR; SIZ:=8; TYPE:=3; GO TO STRING;                76023100
      END % IF WHICH=7                                                  76023200
    ELSE IF SEQ+TEXT NEQ 0 AND WHICH LSS 10 THEN GO TO ERROR            76023300
    ELSE IF WHICH=8 THEN SEQ := 1                                       76023400
    ELSE IF WHICH=9 THEN TEXT:= 1                                       76023405
    ELSE IF WHICH=10 THEN % FILE INSTRUCTION                            76023410
      BEGIN IF FREP=1 THEN GO ERROR; FTOG:=1;                           76023415
      IF INFIL=0 AND PRNT=0 THEN INFIL:=1                               76023420
      ELSE IF OUTFIL=0 THEN OUTFIL:=1                                   76023425
      ELSE GO TO ERROR; % TOO MANY FILES SPECIFIED                      76023430
      END % IF WHICH = 10                                               76023435
    ELSE IF WHICH = 11 THEN SITE := 1;                                  76023440
    GO TO LOOP;                                                         76023500
  END % IF TYPE=1                                                       76023600
  ELSE IF TYPE LSS 5 THEN % A STRING OR SEQUENCE NUMBER                 76023700
STRING:                                                                 76023800
    BEGIN IF TYPE=2 THEN % A STRING                                     76023900
      BEGIN IF FND+REP NEQ 1 THEN GO TO ERROR;                          76024000
      IF REP=1 THEN % A REPLACE STRING                                  76024100
        BEGIN STRGCNT:=STRGCNT + 1;                                     76024200
        IF SIZ=0 AND STRGCNT=1 THEN GO TO ERROR;                        76024210
        TYPE := STRGCNT; % TELL SAVEIT WHETHER OLD OR NEW STRING        76024300
        IF STRGCNT=2 THEN % HAVE BOTH OLD AND NEW STRINGS               76024400
          BEGIN REP:=0; STRGCNT:=0; OK:=1; END;                         76024500
        END % IF A REPLACE STRING                                       76024600
      ELSE OK:=1; % IF A "FIND" STRING                                  76024700
      END % IF TYPE = 2                                                 76024800
    ELSE % A SEQUENCE NUMBER, TYPE = 3 OR 4                             76024900
      BEGIN X:=CNVERT(OADR,SIZ);                                        76025000
      IF X LEQ PREV THEN GO TO ERROR ELSE PREV:=X; % CHECK NUMBER       76025100
      END IF A SEQ NO;                                                  76025200
    X:=TSIZ + SIZ + 4; % TOTAL NO. OF CHARACTERS TO BE ADDED            76025300
    IF X GTR 230 THEN % NOT ENOUGH ROOM                                 76025400
      BEGIN CLEARSTACK(STACK[BASE+2],TSIZ); CONTINUEBIT := FALSE;       76025500
      GOERR("TOOLONG",MSGVAL);                                          76025600
      END % IF X GTR 230                                                76025700
    ELSE SAVEIT(STACK[BASE],TSIZ,OADR,SIZ,TYPE,X); % STORE STRING       76025800
    GO TO LOOP;                                                         76025900
    END % IF TYPE LSS 5                                                 76026000
  ELSE IF TYPE = 5 THEN % A CONTINUATION CHARACTER AND LEFT ARROW       76026100
    BEGIN TEMP := 32; WAITFOR := VINPUT;                                76026200
    IF SCHEDULINE THEN REQUESTIP(LL); GO TO EXIT;                       76026210
    END % IF TYPE = 5                                                   76026300
  ELSE IF TYPE = 6 THEN % CALL OUT THE PROGRAM                          76026400
    BEGIN                                                               76026500
    CONTINUEBIT := FALSE;                                               76026600
    IF SOURCEFILE=0 AND INFIL=0 THEN                                    76026610
      BEGIN CLEARSTACK(STACK[BASE+2],TSIZ); GOERR("NO FILE",MSGVAL);    76026620
      END;                                                              76026630
    TEMP := 3;                                                          76026700
    IF NOT BOOLEAN(OK) THEN                                             76026800
      BEGIN CLEARSTACK(STACK[BASE+2],TSIZ);                             76026900
      GOERR("INCOMPL",MSGVAL);                                          76027000
      END;                                                              76027100
    CLEAR(WORK[0],29);                                                  76027200
    MOVE(30, WORDS, STACK[BASE+1], WORK[0]);                            76027300
    DISKWRITE(ESP2);                                                    76027400
    CLEARSTACK(STACK[BASE+2],TSIZ);                                     76027500
    IF TPCOUNT NEQ 0 THEN                                               76027600
      BEGIN                                                             76027700
      LITOUT("WAIT.  ",NOCRLF);                                         76027800
      DOING := 1;                                                       76027900
      WANT := VUPDATE;                                                  76028000
      GO TO EXIT;                                                       76028100
      END                                                               76028200
    ELSE GO TO CASE1;                                                   76028300
    END % IF TYPE = 6                                                   76028400
  ELSE IF TYPE=7 THEN % FILE NAME                                       76028410
    BEGIN                                                               76028415
    X := TSIZ + SIZ + 4; % NO OF CHARACTERS TO BE ADDED                 76028420
    IF X GTR 230 THEN % NOT ENOUGH ROOM                                 76028425
      BEGIN CLEARSTACK(STACK[BASE+2],TSIZ); CONTINUEBIT:=FALSE;         76028430
      GOERR("TOOLONG",MSGVAL);                                          76028435
      END % IF X GTR 230                                                76028440
    ELSE SAVEIT(STACK[BASE],TSIZ,OADR,SIZ,TYPE,X);                      76028445
    FTOG:=0;                                                            76028450
    GO TO LOOP;                                                         76028455
    END % IF TYPE = 7                                                   76028460
  ELSE % MUST BE AN ERROR                                               76028500
    BEGIN                                                               76028600
    MSGPTR := MSGVAL + TYPE - 9;                                        76028700
ERROR:                                                                  76028800
    TEMP := 3;                                                          76028900
    CLEARSTACK(STACK[BASE+2],TSIZ);                                     76029000
    CONTINUEBIT := FALSE;                                               76029100
    GOERR(ERRVALUE(OADR),MSGPTR);                                       76029200
    END IF AN ERROR;                                                    76029300
END CASE 0;                                                             76029400
BEGIN % CASE 1                                                          76029500
CASE1:                                                                  76029600
    CLEAR(WORK[0],29);                                                  76029700
    WORK[0]:=ESP2;                                                      76029800
    WORK[3]:=MAKEFN("1S",LL);                                           76029900
    WORK[4]:=WORK[6]:=USERCODE;                                         76030000
    WORK[5]:=SOURCEFILE;                                                76030100
    WORK[7] := FILETYPE; % CHECK FOR TYPE DATA FILES                    76030150
    RUN1:=IF BOOLEAN(FND) THEN "FIND   " ELSE "REPLACE";                76030200
    RUN2:=IF BOOLEAN(FND) THEN "DISK   " ELSE "CANDE  ";                76030300
    ERRSW:=USERCODE;                                                    76030400
    DISKWRITE(ESP1);                                                    76030500
    IF BOOLEAN(FND) THEN                                                76030600
        BEGIN                                                           76030700
        IAM:=VDISPATCH; COMMONVALUE:=ESP1;                              76030710
        END                                                             76030720
     ELSE                                                               76030730
        BEGIN                                                           76030740
       WANT:=VDISPATCH;DOING:=2;IF NOT CONCISE THEN LITOUT("WAIT.  ",1);76030750
        END;                                                            76030760
   EOJMSG := NOT CONCISE; WRITEASTERISK := CONCISE;                     76030800
 % VOID                                                                 76030900
    GO TO EXIT;                                                         76031000
END CASE 1;                                                             76031100
BEGIN % CASE 2                                                          76031200
  IF COMMONCELL.[2:1] = 0 THEN % NORMAL EOJ                             76031300
    BEGIN                                                               76031400
    IF BOOLEAN(FREP) THEN                                               76031500
     IF COMMONCELL.[21:27] NEQ 0 THEN % SUBSTITUTIONS MADE              76031600
      BEGIN                                                             76031700
      SOURCEFILE := MAKEFN("1S",LL);                                    76031800
      GOODOBJ := FALSE;                                                 76031900
      CANCELCKPT(A[*]);                                                 76032000
      END;                                                              76032100
    WRITEASTERISK:=TRUE;                                                76032200
    END % IF EOJ OK                                                     76032300
  ELSE                                                                  76032400
    BEGIN % ERROR EOJ                                                   76032500
    IF SCHEDULINE AND BOOLEAN(FREP) AND NOT NOSTOP THEN SCHEDGOTO(-1);  76032600
    LINECLEAR(LCW,A[*]);                                                76032700
    MSGPTR := MSGVAL;                                                   76032800
    WRITEASTERISK := FALSE;                                             76032900
    END ; % IF ERROR EOJ                                                76033000
  IAM := WANT := WAITFOR := 0;                                          76033100
END CASE 2;                                                             76033200
END ALL CASES;                                                          76033300
EXIT:                                                                   76033400
END PROCEDURE REPLACIT;                                                 76033500
%****************************************************************       90000000
COMMENT       DOCUMENT                                                  90001000
              THE ARRAY TOBEDONE IS USED TO STORE THINGS THAT HAVE TO BE90002000
              DONE FOR A LINE BUT MUST WAIT BECAUSE THE LINE IS BUSY AND90003000
              CANNOT HANDLE THIS INFO NOW.                              90004000
              TOBECONTROL = CONTROL WORD AS FOLLOWS                     90005000
              3:6 = COUNT OF NUMBER OF ROWS USED.                       90006000
              12:36= BITS INDICATING ROW USED IF ON. BIT 47 = ROW 0.    90007000
              EACH ROW CONTAINS:                                        90008000
              WORD 0 = 3:6 = NEXT ROW WITH INFO FOR THIS LOGICAL LINE.  90009000
                      12:36= AND WORD TO TURN OFF BIT IN TOBECONTROL.   90010000
                 1-15= 10 WORDS INPUTDATA AND 5 WORDS OF EVENTS INFO.   90011000
              ;                                                         90012000
REAL          TOBECONTROL;                                              90013000
REAL     ARRAY TOBEDONE [0:35,0:15];                                    90014000
              %                                                         90015000
%**********************************************************************%90016000
PROCEDURE     REMEMBERTHIS (LCW);                                       90017000
%**********************************************************************%90018000
BOOLEAN       LCW;                                                      90019000
         BEGIN                                                          90020000
DEFINE        CTR = [3:6] #, USEDOROPEN = [12:36] #;                    90021000
REAL STREAM PROCEDURE   BITNUMBER (T);                                  90022000
VALUE         T;                                                        90023000
         BEGIN                                                          90024000
LABEL         L;                                                        90025000
              SI:= LOC T;    SI:= SI+2;                                 90026000
            6(IF SC= """ THEN BEGIN SI:=SI+1; TALLY:=TALLY+6; END       90027000
              ELSE                                                      90028000
            6(IF SB THEN BEGIN SKIP 1 SB; TALLY:=TALLY+1; END           90029000
              ELSE                                                      90030000
              JUMP OUT 2 TO L));                                        90031000
    L:        BITNUMBER:= TALLY;                                        90032000
         END  STREAM;                                                   90033000
              %                                                         90034000
REAL          LINK, W, T,S;                                             90035000
              S := TOBECONTROL;                                         90036000
              TOBECONTROL.USEDOROPEN:= R(B(W:= TOBECONTROL.USEDOROPEN)  90037000
                          OR NOT B(T:=R(NOT B(W+1) OR B(W))));          90038000
              IF LINK:= 35 - BITNUMBER (T) LSS 0 THEN                   90039000
         BEGIN                                                          90040000
              LITOUT("NOTDONE",CRLF);  TOBECONTROL := S;                90041000
         END  IF NOTREMEMBERED ELSE                                     90042000
         BEGIN                                                          90043000
              THINGSTODO := B(W := R(THINGSTODO) + 1);                  90044000
              IF W GTR 1 THEN TOBEDONE[R(THINGSLAST),0].CTR := LINK;    90045000
              TOBEDONE[LINK,0]           := T&LINK[1:40:8];             90046000
              THINGSLAST:= B(LINK);                                     90047000
              IF W = 1 THEN THINGSLINK:= B(LINK);                       90048000
              MOVE (15,WORDS,WORK[0],TOBEDONE[LINK,1]);                 90049000
              MOVE (5,WORDS,EVENTS[0],TOBEDONE[LINK,11]);               90050000
              INC(TOBECONTROL.CTR);                                     90051000
              IF TOBECONTROL.CTR GTR 20 THEN WECANUSEDATA := FALSE;     90052000
         END  IF REMEMBERED;                                            90053000
         END  OF REMEMBERTHIS;                                          90054000
%**********************************************************************%90055000
PROCEDURE     GETSOMETHINGTODO (LCW,A);  BOOLEAN LCW;  ARRAY A[0];      90056000
%**********************************************************************%90057000
         BEGIN                                                          90058000
DEFINE        CTR = [3:6] #, USEDOROPEN = [12:36] #;                    90059000
REAL          LINK, W, TL, I,  COUNT;                                   90060000
LABEL         AGAIN, EXIT;                                              90061000
     AGAIN:                                                             90062000
              TL := REAL(THINGSLAST);                                   90063000
              LINK:=R(THINGSLINK);DECB(THINGSTODO);                     90064000
              THINGSLINK:=B(I:=(W:=TOBEDONE[LINK,0]).CTR);              90065000
              TOBECONTROL.USEDOROPEN:= % TURN OFF THE BIT FOR ROW[LINK] 90066000
                        R(B(TOBECONTROL.USEDOROPEN) AND B(W));          90067000
              MOVE (15,WORDS,TOBEDONE[LINK,01],WORK[0]);                90068000
              MOVE (05,WORDS,TOBEDONE[LINK,11],EVENTS[0]);              90069000
              IF EVENTREASON=VINPUT OR EVENTREASON=VTEACHER THEN        90069010
                 BEGIN                                                  90069020
                 WORKADRS := ADDRESS(WORK[1]);                          90069030
                 COUNT := (WORK[0]-1).[39:9];                           90069040
                 WORKENDADRS:=(WORKADRS+COUNT.[40:5])&COUNT[30:45:3];   90069050
                 END;                                                   90069060
              DECR(TOBECONTROL.CTR);                                    90070000
              IF TOBECONTROL.CTR LEQ 20 THEN WECANUSEDATA := TRUE;      90071000
              REASON:= EVENTREASON;                                     90072000
              IF SAVEDWHILEINITBUSY THEN                                90073000
         BEGIN  %  GET THAT ONE FIRST.                                  90074000
              IF REASON LSS VINPUT OR REASON = WAITINGSCW.SCWWAITBITS   90075000
              THEN SAVEDWHILEINITBUSY := FALSE ELSE                     90076000
         BEGIN  %  THIS ISNT IT.                                        90077000
              REMEMBERTHIS(LCW);  GO AGAIN;                             90078000
         END;                                                           90079000
              WHILE I NEQ TL DO                                         90080000
              IF W:=TOBEDONE[I,11].[18:7] LSS VINPUT                    90081000
              OR W = WAITINGSCW.SCWWAITBITS THEN                        90082000
                 BEGIN                                                  90083000
                      SAVEDWHILEINITBUSY:=TRUE;  GO EXIT;               90084000
                 END  ELSE I:=TOBEDONE[I,0].CTR;                        90085000
         END  IF SAVEDWHILEINITBUSY;                                    90086000
  EXIT:  END  OF GETSOMETHINGTODO;                                      90087000
%**********************************************************************%90088000
PROCEDURE FINISHED (LCW, A);  BOOLEAN LCW;  ARRAY A[0];                 90089000
%**********************************************************************%90090000
         BEGIN                                                          90091000
LABEL         RESTRT, EXIT;                                             90092000
              ALLDONE        := TRUE ;                                  90093000
  IF BOOLEAN(TIMERESTRICTBIT) THEN % USER HAS RESTRICTED TIME PERIOD    90093100
  IF NOT TIMEOK(ENTIER(TIMENOW:=TIME(1)/216000),TIMELIMITS) THEN        90093200
  IF NOT NOTIFIED THEN % USER IS NOT AWARE HIS TIME IS UP               90093300
    BEGIN PLSLOGOFF(WORK); TWXOUT(LL,WORK[0],62,2);                     90093400
    NOTIFYBIT := REAL(TRUE); NOTIFYTIME := TIMENOW; END                 90093500
  ELSE                                                                  90093520
    BEGIN IF TIMENOW - NOTIFYTIME GTR GRACEPERIOD THEN                  90093600
      BEGIN TELLHIMBYE(WORK); TWXOUT(LL,WORK[0],70,2); NOSAVE:=TRUE;    90093700
     LINECLEAR(LCW,A[*]); A[BASE]:=0;  BYE(LCW,A[*]); GO EXIT; END; END;90093800
              IF INITIATEDWHILEBUSY THEN                                90094000
         BEGIN                                                          90095000
              IF LLINFO NEQ 0 THEN WAITINGSCW := LLINFO                 90096000
                 ELSE WAITINGSCW.SCWWAITBITS := 0;                      90097000
              INITIATEDWHILEBUSY := BOOLEAN(LLINFO:=0);                 90098000
              IF SAVEDWHILEINITBUSY THEN GO RESTRT ELSE GO EXIT;        90099000
         END;                                                           90100000
              BUSYLINE       := FALSE;                                  90101000
     % VOID                                                             90102000
    % VOID                                                              90103000
              IF REAL (THINGSTODO) = 0 THEN                             90104000
         BEGIN                                                          90105000
               ALLMCPMSG := FALSE;                                      90106000
               LIBMSGCTR := 0;                                          90107000
               IF SCHEDULINE THEN REQUESTIP(LL)                         90107100
               ELSE                                                     90107200
               IF WRITEASTERISK THEN                                    90108000
                 TWXOUT(LL,ASTOR,1,1);                                  90109000
               WRITEASTERISK:=FALSE;  GO EXIT;                          90110000
         END;                                                           90111000
         COMMENT: SOMETHING HAS BEEN REMEMBERED;                        90112000
    RESTRT:   RESTARTNEEDED := TRUE;                                    90113000
              GETSOMETHINGTODO(LCW,A[*]);                               90114000
    EXIT:END;                                                           90115000
                                                                        90116000
%**********************************************************************%90117000
DEFINE        BUILDSCW =SCW:=0&WAITFOR[10:41:7]&PREVRCW[17:40:8]&BASE   90118000
                        [25:40:8]&DOING[33:41:7]&IAM[40:40:8]&1[1:46:2] 90119000
                        #;                                              90120000
DEFINE        BUILDRCW =RCW:=SCW&SREG[03:40:8]&PARAM[11:41:7]&TEMP      90121000
                        [18:41:7]&DOING[33:41:7]&IAM[40:40:8]&2[1:46:2] 90122000
                        #;                                              90123000
DEFINE        STORERCW =A[PREVRCW:=SCWPREV-1]:= RCW #;                  90124000
                        %                                               90125000
DEFINE        RECALLRCW=BEGIN RCW    :=A[PREVRCW:=SCWPREV];             90126000
                              PARAM  :=RCWPARAM;                        90127000
                              TEMP   :=RCWTEMP ;                        90128000
                              BASE   :=RCWBASE ;                        90129000
                              DOING  :=RCWDOING;                        90130000
                              IAM    :=RCWIAM  ;                        90131000
                              SREG   :=RCWSREG;                         90132000
                              PREVRCW:=PREVRCW +1;                      90133000
                              WANT   :=WAITFOR:=0;                      90134000
                        END OF RECALLRCW #;                             90135000
%PAGE                                                                   90136000
              %                                                         90137000
%**********************************************************************%90138000
BOOLEAN  PROCEDURE ANOTHEROPERATION (LCW, A);                           90139000
%**********************************************************************%90140000
BOOLEAN       LCW;                                                      90141000
ARRAY         A[0];                                                     90142000
         BEGIN                                                          90143000
LABEL         L1;                                                       90144000
              IF IAM NEQ 0 THEN                                         90145000
    L1:  BEGIN   COMMENT THIS PROCEDURE WILL BE RECALLED;               90146000
              BUILDRCW; STORERCW;                                       90147000
         END  %  PROCEDURE IS NOW IDLE AND CAN BE RESTARTED;            90148000
              ELSE                                                      90149000
              DOING := 0;                                               90150000
              SREG:=BASE := BASE + TEMP + PARAM;                        90151000
              IAM := WANT;                                              90152000
              BUILDSCW;                                                 90153000
              IF WANT NEQ 0 THEN                                        90154000
         BEGIN   COMMENT A NEW PROCEDURE IS TO BE GIVEN CONTROL;        90155000
              A [BASE] := PARAM;                                        90156000
              DOING := WANT := 0;                                       90157000
         END     THE NEW PROCEDURE IS NOW READY TO BE CALLED;           90158000
              TEMP := PARAM := 0;                                       90159000
              IF WAITFOR NEQ 0 THEN                                     90160000
         BEGIN   COMMENT WE MUST WAIT BEFORE THIS LINE CAN CONTINUE;    90161000
              IF IAM NEQ 0 THEN GO TO L1; COMMENT MAKE LINE IDLE;       90162000
              ANOTHEROPERATION := FALSE;                                90163000
              WAITINGSCW       := SCW;                                  90164000
         END     LINE WILL NOW WAIT ON EVENTQUE                         90165000
              ELSE                                                      90166000
         BEGIN   COMMENT NO WAIT IS REQUIRED;                           90167000
              IF (ANOTHEROPERATION := NOT ALLDONE) AND IAM EQL 0 THEN   90168000
         BEGIN   COMMENT RESET RETURN INFO;                             90169000
              RECALLRCW;  WAITINGSCW:=BUILDSCW;                         90170000
         END     WE CAN NOW RETURN TO THE LAST UNFINISHED PROCEDURE;    90171000
         END     IF LINE DID NOT HAVE TO WAIT;                          90172000
         END     OF ANOTHEROPERATION;                                   90173000
%**********************************************************************%90174000
PROCEDURE     HANDLETHISLINE(LCW, A);                                   90175000
%**********************************************************************%90176000
BOOLEAN       LCW;                                                      90177000
ARRAY         A[0];                                                     90178000
         BEGIN                                                          90179000
LABEL        RESTART, AGAIN, EXIT;                                      90180000
    RESTART:                                                            90181000
              IAM := WANT := WAITFOR := TEMP := PARAM := 0;             90182000
              ALLDONE := FALSE;                                         90183000
              RESTARTNEEDED := FALSE;                                   90184000
              IF WAITINGSCW.SCWWAITBITS = REASON                        90185000
              OR WAITINGSCW.SCWWAITBITS = R(NOT FALSE).[41:7]           90186000
              THEN                                                      90187000
         BEGIN   COMMENT: SOMEONE IS WAITING FOR THIS EVENT;            90188000
              SCW := WAITINGSCW;                                        90189000
              WAITINGSCW := 0;                                          90190000
              PREVRCW := SCWPREV;                                       90191000
         END                                                            90192000
              ELSE                                                      90193000
         BEGIN   COMMENT: WE WERE NOT WAITING FOR IT SO;                90194000
              WANT := REASON;                                           90195000
              IF IDLELINE THEN                                          90196000
         BEGIN   COMMENT: MUST BE A NEW EVENT FOR THIS LINE;            90197000
              IF NOT LOGGEDON THEN                                      90198000
         BEGIN                                                          90199000
              IF LL = 0 THEN LOGGEDON := TRUE;                          90200000
              CHARGE:= -1;                                              90201000
         END  LOGGING ON THE SYSTEM;                                    90202000
              BUSYLINE := TRUE;                                         90203000
              BASE     := SBASE;                                        90204000
              PREVRCW  := LLWORDS;                                      90205000
         END                                                            90206000
              ELSE                                                      90207000
         BEGIN                                                          90208000
              IF REASON=VTEACHER THEN % DONT PERMIT MULTIPLE INQUIRIES  90208100
                 IF INQUIRY THEN GO EXIT ELSE INQUIRY := TRUE;          90208200
              IF REASON LSS VINPUT AND NOT INITIATEDWHILEBUSY THEN      90209000
         BEGIN                                                          90210000
              INITIATEDWHILEBUSY := TRUE;                               90211000
              LLINFO := SCW := WAITINGSCW;                              90212000
              BASE    := SCWBASE + 1;                                   90213000
              PREVRCW := SCWPREV - 1;                                   90214000
         END                                                            90215000
              ELSE                                                      90216000
         BEGIN                                                          90217000
              IF R(THINGSTODO) GTR 2 THEN                               90218000
         BEGIN                                                          90219000
              LITOUT("NOTDONE",CRLF);                                   90220000
         END  ELSE                                                      90221000
         BEGIN                                                          90222000
              REMEMBERTHIS (LCW);                                       90223000
              IF REASON = LLINFO.SCWWAITBITS                            90224000
              OR REASON LSS VINPUT THEN SAVEDWHILEINITBUSY := TRUE;     90225000
         END  IF REMEMBERED;                                            90226000
              GO EXIT;                                                  90227000
         END     REASON VS 15;                                          90228000
         END     IDLE OR NOT;                                           90229000
              BUILDSCW;                                                 90230000
              A[PREVRCW] := BUILDRCW;                                   90231000
         END     WAITING OR NOT;                                        90232000
%-----------------------------------------------------------------------90233000
    AGAIN:                                                              90234000
              IF NOT ANOTHEROPERATION (LCW, A[*]) THEN GO EXIT;         90235000
                 COMMENT: IF WE GOT TO HERE IT MEANS THERE IS SOMETHING 90236000
                          THAT CAN BE INITIATED FOR THIS LINE NOW.      90237000
                          "IAM" IS SET TO THE CASE VALUE WHICH WILL CALL90238000
                          OUT THE APPROPRIATE PROCEDURE, SO- LETS TRYIT;90239000
              CASE IAM OF                                               90240000
         BEGIN                                                          90241000
              FINISHED(LCW, A[*]);% 00 - LAST THING DONE ON LINE.       90242000
              HITHERE(LCW,A[*]);  % 01 - DIAL UP.                       90243000
              BREAK   (LCW,A[*]); % 02 - BREAK OCCURRED.                90244000
              WRU     (LCW,A[*]); % 03 - WHO ARE YOU RECD.              90245000
              LINECLEAR(LCW,A[*]);% 04 - CLEAR LINE AFTER 02 OR 03.     90246000
              DISKCHUNK;          % 05 - NEW CHUNK OF DISK.             90247000
              DISCONNECT(LCW,A[*]);%06 - DISCONNECT OCCURRED.           90248000
              INPUTDATA(LCW,A[*]);% 07 - INPUT DATA IS IN OUR BUFFER.   90249000
              BREAKCLEAR(LCW,A[*]);    % 08 - BREAK FINISHED.           90250000
              RESTARTIT(LCW,A[*]);    % 09 - AFTER H/L SAVE WRKFILE     90251000
              IAM:=WAITFOR:=EVENTS[1]; % 10 - MCP USE.                  90252000
              MAKEDATE;                % 11 - DATE CHANGED.             90253000
              CALL(NOTUSED);      % 12 -                                90254000
              CALL(NOTUSED);      % 13 -                                90255000
              MCPMSG(LCW,A[*]);   % 14 - HANDLES MCP MESSAGES ABOUT JOBS90256000
              COOLIT(A[*]);            % 15                             90257000
              MCPOK(A[*]);             % 16                             90258000
              CALL(NOTUSED);           % 17 -                           90259000
              CALL(NOTUSED);           % 18 -                           90260000
              CALL(NOTUSED);           % 19 -                           90261000
              CALL(NOTUSED);           % 20 -                           90262000
              CALL(NOTUSED);           % 21 -                           90263000
              CALL(NOTUSED);           % 22 -                           90264000
              CALL(NOTUSED);           % 23 -                           90265000
              CALL(NOTUSED);           % 24 -                           90266000
              TEACHER(LCW,A[*]);       % 25 - WANTS ELABORATION.        90267000
              INPUT(LCW,A[*],WORK[1],EVENTS[1],EVENTS[3]); % USER INPUT 90268000
              DISPATCH(LCW, A[*]);     % 27 - FIRES UP RUNNERS.         90269000
              DISKREAD (LCW, A[*]);    % 28 - READS DISK FOR PROCEDURES 90270000
              CALL(NOTUSED);           % 29 -                           90271000
              OOPS(LCW,A[*]);          % 30 - ERR DURING SCAN           90272000
              DOGCATCHER(LCW,A[*]);    % 31 - DOGCATCHER.               90273000
              COMPILEIT(LCW,A[*]);     % 32 - COMPILE IT.               90274000
              SETUPFILES(LCW,A[*]);    % 33 - SET UP ON HELLO           90275000
              ERROR(SREG,LCW,A[*]);    % 34 - ERROR HANDLER             90276000
              CLOSEWORKTABLE(LCW,A[*]);% 35 - TO MAKE SURE TABLE IS TIDY90277000
              CHNGPSWD(LCW,A[*]);      % 36 - CHANGE PASSWORD           90278000
              THYME(LCW,A[*]);         % 37 - TIME                      90279000
              CARRIAGE(LCW,A[*]);      % 38 - CARRIAGE CONTROL.         90280000
              CHNGNAME(LCW,A[*]);      % 39 - CHANGENAME                90281000
              MONITORR(LCW,A[*]);      % 40 -                           90282000
              SETIT(LCW,A[*]);        % 41 - "SET" & "RESET"            90283000
              SSFILE(LCW,A[*]);        % 42 TRANSMIT FILE               90284000
              EQUATE(LCW,A[*]);        % LABEL EQUATION                 90285000
              CALL(NOTUSED);           % 44 -                           90286000
              CALL(NOTUSED);           % 45 -                           90287000
              CALL(NOTUSED);           % 46 -                           90288000
              CALL(NOTUSED);           % 47 -                           90289000
              CALL(NOTUSED);           % 48 -                           90290000
              CALL(NOTUSED);           % 49 -                           90291000
         BEGIN                         % 50 - SEND SS MSGS              90292000
              MOVE (4,WORDS,EVENTS[1],WORK[10]);                        90293000
              TWXOUT(LL,WORK[0],112,2);                                 90294000
              IAM := 0;                                                 90295000
         END;                                                           90296000
              PDIT(LCW,A[*]);          % 51 - LIST FILES                90297000
              COPYIT (LCW,A[*]);       % 52 - COPY.                     90298000
              SEQ(LCW,A[*]);             % 53 - WANTS SEQ #S.           90299000
%             :15                      :40                              90300000
              BYE (LCW,A[*]);          % 54 - BYE.                      90301000
              MAKENEWFILE(A[*]);       % 55 - MAKE                      90302000
              LISTIT (LCW, A[*]);      % 56 - LIST                      90303000
         BEGIN                                                          90304000
              DOING:=4;DOIT(LCW,A[*]); % 57 - RUN.                      90305000
         END;                                                           90306000
              LOADIT (LCW, A[*]);      % 58 - LOAD                      90307000
              SAVER  (LCW, A[*]);      % 59 - SAVE                      90308000
         BEGIN                                                          90309000
              DOING:=1;DOIT(LCW,A[*]); % 60 - COMPILE.                  90310000
         END;                                                           90311000
              REMOVE (LCW, A[*]);      % 61 - REMOVE                    90312000
              CHANGE(LCW,A);           % 62 - CHANGE.                   90313000
              RENAMEIT  (LCW, A[*]);   % 63 - RENAME                    90314000
              WHATSIT (LCW, A[*]);     % 64 - PRINT FILE TYPE           90315000
              TYPEIT (LCW, A[*]);      % 65 - CHANGE TYPE               90316000
              DOIT (LCW, A[*]);        % 66 - EXECUTE                   90317000
              GUARDIT(LCW,A[*]);       % 67 - GUARD(MAKE LOCK)          90318000
              LOCKIT(LCW,A[*]);        % 68 - LOCK OR UNLOCK            90319000
              TAPEIT(LCW,A[*]);        % 69 - PAPER TAPE                90320000
              LISTIT(LCW,A[*]);        % 70 - PRINT(NO HDING)           90321000
              CHARGEIT(LCW,A[*]);      % 71 - CHARGE CODE               90322000
              SCHEDULE(LCW,A[*]);      % 72 - SCHEDULE A TASK.          90322100
              SCHEDSTATUS(LCW,A[*]);     % 73 - SCHED STATUS/STOP       90322200
              LISTFILE(LCW,A[*]);      % 74 - LIST FILES.               90322300
              UPDATE(LCW,A[*]);        % 75 - UPDATE WORK FILE          90322400
              REPLACEIT(LCW,A[*]);     % 76 - REPLACEMENT ROUTINE       90322500
         END  OF CASE   SOMETHING MORE MAY BE NEEDED;                   90323000
              IF RESTARTNEEDED THEN GO RESTART ELSE GO AGAIN;           90324000
    EXIT:                                                               90325000
         END  OF HANDLETHISLINE;                                        90326000
%************************************************************           90327000
PROCEDURE   RUNCANDE;                                                   90328000
%********************************************************               90329000
         BEGIN                                                          90330000
LABEL         HAVEVENT;                                                 90331000
              DO             %  THE LOOP STARTS HERE                    90332000
         BEGIN                                                          90333000
              IF NODATA AND WECANUSEDATA THEN                           90334000
              IF NODATAREQUESTED THEN                                   90335000
         BEGIN                                                          90336000
              REQUESTINPUT (TTYINPUT [*]);                              90337000
              NODATAREQUESTED := FALSE;                                 90338000
         END;                                                           90339000
              IF TIMETOOKLINES THEN                                     90339100
              IF MAKEOKEVENT THEN GO TO HAVEVENT;                       90339200
              WAITBIT:=REAL(NODATA);                                    90340000
              NEXTEVENT (WAITBIT, CLOCK, EVENT [*]);                    90341000
              IF BOOLEAN (WAITBIT) THEN                                 90342000
         BEGIN                                                          90343000
              MOVE (5,WORDS,EVENT[0],EVENTS[0]);                        90344000
              LL    :=EVENTLL;                                          90345000
              IF REASON:=EVENTREASON = VMCPMSG THEN                     90346000
% VOID 90347001.                                                        90347000
                  MOVE(15,WORDS,EVENT[4],WORK[0]);                      90348000
              IF REASON=VHELLO THEN                                     90348100
                IF LINE[LL,13].SCWWAITBITS NEQ REASON THEN              90348200
                   LINE[LL,23] := EVENTS[2]; % TERMINAL TYPE            90348300
         END  ELSE BUILDADATAEVENT;                                     90349000
              IF LL GTR MAXLINES THEN                                   90350000
         BEGIN LL:=0; REASON:=13; END; %BAD LINE NUMBER                 90351000
              IF REASON=VHELLO AND LOGGINGON THEN                       90352000
         BEGIN LL:=0; REASON:=13; END;                                  90353000
 HAVEVENT:                                                              90353500
              IF LLPREV NEQ LL THEN                                     90354000
         BEGIN   COMMENT A DIFFERENT USER IS GOING TO USE TIME;         90355000
              IF LLPREV NEQ  0 THEN                                     90356000
         BEGIN   COMMENT CHARGE PREV USER FOR HIS TIME;                 90357000
              LINE[LLPREV,PTLOC]:=CLOCK-CLOCKPREV+LINE[LLPREV,PTLOC];   90358000
         END     IF USER TO BE CHARGED;                                 90359000
              LLPREV:=LL;                                               90360000
              CLOCKPREV:=CLOCK;                                         90361000
         END     IF NEW USER TO BE HANDLED;                             90362000
              IF REASON NEQ 13 THEN % THROW AWAY #13,BAD LUCK.          90363000
              HANDLETHISLINE(LCW,LINE[LL,*]);                           90364000
         END  OF LOOP UNTIL FALSE;                                      90365000
         END  RUNCANDE;                                                 90366000
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%90367000
              MAKEDATE;                                                 90368000
COMMENT VERBTABLE[WORD].[6:3] IS USED AS A FLAG FOR                     90368010
 SCANNER ( FOR "SPECIAL" VERB );                                        90368020
              FILL VERBTABLE[*] WITH                                    90369000
                   "1LIST   ", ..3000000000000070,  % #56               90370000
                   "1RUN    ", ..3000020000000071,  % #57               90371000
                   "4SAVE   ", ..3000040000000073,  % #59               90372000
                   "1SEQ    ", ..3000060000000065,  % #53               90373000
                   "1EXECUTE", ..3000100000000102,  % #66               90374000
                   "2DO     ", ..3000100000000102,  % 66, ALSO          90375000
                   "4MAKE   ", ..3000140000000067,  % #55               90376000
                   "4LOAD   ", ..3000160000000072,  % #58               90377000
                   "1COMPILE", ..3000200000000074,  % #60               90378000
                   "6REMOVE ", ..3000220000000075,  % #61               90379000
                   "6CHANGE ", ..3000240000000076,  % #62               90380000
                   "6RENAME ", ..3000260000000077,  % #63               90381000
                   "4FILES  ", ..3000300000000063,  % #51               90382000
                   "5WHATS  ", ..3000320000000100,  % #64 ALSO          90383000
                   "6CREATE ", ..3000340000000067,  % #55 ALSO          90384000
                   "5HELLO  ", ..3010360000000001, % 01                 90385000
                   "4TYPE   ", ..3000400000000101,  % #65               90386000
                   "3BYE    ", ..3000420000000066,  % #54.              90387000
                   "4COPY   ", ..3000440000000064,  % #52               90388000
                   "5MERGE  ", ..3000460000000064,  % #52, ALSO         90389000
                   "5RESEQ  ", ..3000500000000064,  % #52, ALSO         90390000
                   "6DELETE ", ..3000520000000064,  % #52, ALSO         90391000
                   "6APPEND ", ..3000540000000064,  % #52, ALSO         90392000
                   "3ADD    ", ..3000540000000064,  % 52,ALSO           90393000
                   "2TO     ", ..3000600000000062,  % 50                90394000
                   "2SS     ", ..3000620000000062,  % 50,ALSO           90395000
                   "5GUARD  ", ..3000640000000103,  % 67                90396000
                   "4LOCK   ", ..3000660000000104,  % 68                90397000
                   "6UNLOCK ", ..3000700000000104,  % 68,ALSO           90398000
                   "4TAPE   ", ..3000720000000105,  % 69                90399000
                   "1PRINT  ", ..3000740000000106,  % 70                90400000
                   "5PUNCH  ", ..3000760000000064,  % 52,ALSO           90401000
                   "6CHARGE ", ..3001000000000107,  % 71                90402000
                   "3SCHEDUL", ..3001020000000110,  %72                 90402100
                   "6STATUS ", ..3001040000000111,  %73                 90402200
                   "4STOP   ", ..3001060000000111,  %73, ALSO           90402300
                   "4TIME   ", ..3001100000000045,  %37                 90402400
                   "1UPDATE ", ..3001120000000113,  % 75                90402860
                   "3REPLACE", ..3011140000000114, % 76                 90402870
                   "4FIND   ", ..3011160000000114, % 76 ALSO            90402880
                   "2CC     ", ..3001200000000046,  % 38                90402890
                   "6RMERGE ", ..3001220000000064,  % 52 ALSO           90403000
                   "1DISPLAY", ..3001240000000070, % 56                 90403100
                   "3SET    ", ..3011260000000051, % 41                 90403200
                   "5RESET  ", ..3011300000000051, % 41 ALSO            90403300
                   "7MONITOR", ..3001320000000050, % 40                 90403400
                   "6SSFILE ", ..3001340000000052, % 42                 90403410
                   "2EQUATE ", ..3001360000000053, % 43                 90403420
                   "6PUBLIC ", ..3001400000000104, % 68 ALSO            90403430
                   "7*******", 0; % LAST ENTRY                          90403900
              FILL TYPETABLE[*] WITH "7UNKNOWN",                        90404000
              "EBASIC  ",                                               90405000
              "EALGOL  ",                                               90406000
              "ECOBOL  ",                                               90407000
              "GFORTRAN",                                               90408000
              "ETSPOL  ",                                               90409000
              "FXALGOL ",                                               90410000
              "3SEQ    ",                                               90411000
              "4DATA   ",                                               90412000
              "4LOCK   ",                                               90413000
              "4INFO   ",                                               90413100
              "GCOBOL68";                                               90413900
   FILL RESWRDTABLE[*] WITH "7*******",   % 0 DONT COUNT                90414000
   "5ALGOL  ",                                                          90415000
   "5BASIC  ",                                                          90416000
   "4CARDS  ",                                                          90417000
   "5COBOL  ",                                                          90418000
   "4DATA   ",                                                          90419000
   "4DISK   ",                                                          90420000
   "3END    ",                                                          90421000
   "5ERRORS ",                                                          90422000
   "4FILES  ",                                                          90423000
   "7FORTRAN",                                                          90424000
   "4FROM   ",                                                          90425000
   "7LIBRARY",                                                          90426000
   "4LOCK   ",                                                          90427000
   "6OBJECT ",                                                          90428000
   "7PRINTER",                                                          90429000
   "5PUNCH  ",                                                          90430000
   "5RESEQ  ",                                                          90431000
   "3SEQ    ",                                                          90432000
   "6SOURCE ",                                                          90433000
   "4TAPE   ",                                                          90434000
   "1TO     ",                                                          90435000
   "5TSPOL  ",                                                          90436000
   "4TYPE   ",                                                          90437000
   "4WITH   ",                                                          90438000
   "6XALGOL ",                                                          90438100
   "7COBOL68",                                                          90438200
   "7*******";                                                          90439000
               ASTOR.[1:5] := "#";                                      90440000
              LINE[0,UCLOC] := "SPO    ";                               90441000
              FLAGS := (NOT FALSE) & FALSE[6:6:2];                      90442000
              WORK[0]:=0; DISKWAIT(1,WORK[*],30,0);                     90442100
              DISKBOTTOM:=WORK[4]-2; %INITIALIZE IT.                    90442200
              WORK[0]:=0; WORKADRS:=ADDRESS(WORK[1]);                   90442300
              WORKENDADRS := ADDRESS(WORK[9]);                          90442400
FILL ASCII[*] WITH % ASCII EQUIVALENTS OF BCL CHARACTERS                90442500
  ..0060006100620063,  ..0064006500660067,  ..0070007100430100,         90442510
  ..0077007200760041,  ..0053010101020103,  ..0104010501060107,         90442520
  ..0110011100560133,  ..0046005000740137,  ..0134011201130114,         90442530
  ..0115011601170120,  ..0121012200440052,  ..0055005100730047,         90442540
  ..0040005701230124,  ..0125012601270130,  ..0131013200540045,         90442550
  ..0136007501350042;                                                   90442560
              RUNCANDE;                                                 90443000
         END;                                                           90444000
  END.                                                                  90445000
END;END.        LAST CARD ON 0CRDING TAPE                               99999999
