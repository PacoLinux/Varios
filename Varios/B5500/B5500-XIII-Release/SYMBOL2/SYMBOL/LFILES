BEGIN                                                                   00010000
REAL COMMON;                                                            00010100
%%% LFILES/CANDE SOURCE PROGRAM. 8-70.  %%%                             00010200
FILE LPA 1(2,15);                                                       00010300
FILE DSK DISK SERIAL [20:100] (2,10,300,SAVE 1);                        00010400
SAVE ARRAY A[0:60],WORK[0:15],NAMES[0:20];                              00010500
ARRAY DAYS[0:12],TYPETABLE[0:11],DIR[0:1022];                           00010600
REAL CTR,  DISKBOTTOM,  FID,  I,  INCREMENT,  K,  LITWORD,  LL,  MASK,  00010700
MAXPTR,  NAME,  NAMECOUNT,  NI,  PTR,  RECS,  SECNAME,  SEGS,           00010800
SPECS,  TABLESIZE,  TDATE,  TFILES,  TYPE,  TRECS,  TSEGS,              00010900
TYPEFIELD,  USER,  USERNAME,  LINK;                                     00011000
BOOLEAN ALL, BRAAK,  LITERAL,  LOCKED,  OBJECT,  PRINTER,  RESTART,     00011100
SECURITYCHECK,  SOLEUSER,  SOURCE,  TELETYPE,  UNLOCKED,  PUBLIC;       00011200
LABEL COMPARE,  CYCLE,  ENDFID,  ENDSORT,  EXIT,  FOUND,  PRINTIT,      00011300
SKIP,  SKIPIT,  SORTT;                                                  00011400
INTEGER S;                                                              00011500
DEFINE MATCH(MATCH1,MATCH2)=                                            00011600
REAL(BOOLEAN(MATCH1) EQV BOOLEAN(MATCH2))=REAL(NOT FALSE)#;             00011700
DEFINE MODULUS=13#,DIRMOD=169#,NUMOFTYPES=11#;                          00011800
%***********************************************************************00011900
REAL STREAM PROCEDURE OCTCONV(DECV); VALUE DECV;                        00012000
   BEGIN SI:=LOC DECV; DI:=LOC OCTCONV; DS:=8OCT; END;                  00012100
%***********************************************************************00012200
REAL STREAM PROCEDURE DECCONV(OCTV); VALUE OCTV;                        00012300
   BEGIN SI:=LOC OCTV; DI:=LOC DECCONV; DS:=8DEC; END;                  00012400
%***********************************************************************00012500
STREAM PROCEDURE BLANK(WORD);                                           00012600
   BEGIN DI:=WORD; DS:=LIT" "; END;                                     00012700
%***********************************************************************00012800
STREAM PROCEDURE BLANKS(WORK);                                          00012900
   BEGIN DI:=WORK; DS:=8LIT" "; SI:=WORK; DS:=9WDS; END;                00013000
%***********************************************************************00013100
PROCEDURE TWXOUT(A,N,T); VALUE N,T; REAL A,N,T;                         00013200
   BEGIN COMMUNICATE(-11); BRAAK:=BOOLEAN(T); END;                      00013300
%***********************************************************************00013400
STREAM PROCEDURE MOVE(N,A,B); VALUE N;                                  00013500
   BEGIN SI:=A; DI:=B; DS:=N WDS; END;                                  00013600
%***********************************************************************00013700
PROCEDURE DISKWAIT(IOBIT,AREA,SIZE,DISKADDRESS);                        00013800
VALUE IOBIT,SIZE,DISKADDRESS;REAL IOBIT,SIZE,DISKADDRESS; ARRAY AREA[0];00013900
COMMUNICATE(-8);                                                        00014000
%***********************************************************************00014100
REAL STREAM PROCEDURE SETBIT(N); VALUE N;                               00014200
   BEGIN DI:=LOC SETBIT; SKIP DB; N(SKIP DB); DS:=SET; END;             00014300
%***********************************************************************00014400
BOOLEAN STREAM PROCEDURE LITCOMP(A,B); VALUE A,B;                       00014500
%***********************************************************************00014600
   BEGIN LOCAL N,SV;                                                    00014700
   SI:=LOC B; SI:=SI+1; TALLY:=7;                                       00014800
   IF SC="0" THEN                                                       00014900
      BEGIN                                                             00015000
      SI:=SI+1; TALLY:=6;                                               00015100
      END;                                                              00015200
   SV:=SI; SI:=LOC A; SI:=SI+1; DI:=SV;                                 00015300
   N:=TALLY; TALLY:=1;                                                  00015400
   N(IF SC NEQ DC THEN                                                  00015500
      BEGIN                                                             00015600
      SI:=SI-1; IF SC NEQ " " THEN TALLY:=0; JUMP OUT;                  00015700
      END);                                                             00015800
   LITCOMP:=TALLY;                                                      00015900
   END STREAM PROCEDURE LITCOMP;                                        00016000
%***********************************************************************00016100
BOOLEAN STREAM PROCEDURE COMPANDSWAP(A,B);                              00016200
%***********************************************************************00016300
   BEGIN LOCAL T1,T2;                                                   00016400
   % ROUTINE COMPARES WDS "A" AND "B"                                   00016500
   % IF "B" IS GREATER THAN "A", WDS "A" AND "A+1" ARE                  00016600
   % EXCHANGED WITH WDS "B" AND "B+1".                                  00016700
   % THE WORD AT "A" ( AND "B" ) IS A FILE NAME, AND                    00016800
   % THE WORD AT "A+1" ( AND "B+1" ) IS THE ADDRESS ASSOCIATED          00016900
   % WITH THAT NAME.                                                    00017000
   SI:=A; SI:=SI+1; DI:=B; DI:=DI+1;                                    00017100
   IF 7SC GTR DC THEN                                                   00017200
      BEGIN                                                             00017300
      TALLY:=1; COMPANDSWAP:=TALLY;                                     00017400
      SI:=A; DI:=LOC T2; DS:=2WDS;                                      00017500
      SI:=B; DI:=A;      DS:=2WDS;                                      00017600
      SI:=LOC T2; DI:=B; DS:=2WDS;                                      00017700
      END;                                                              00017800
   END STREAM PROCEDURE COMPANDSWAP;                                    00017900
%***********************************************************************00018000
REAL PROCEDURE TIMECONV;                                                00018100
%***********************************************************************00018200
   BEGIN                                                                00018300
   INTEGER HRS,MIN,TIM;                                                 00018400
   REAL STREAM PROCEDURE ST(H,M,X);                                     00018500
      BEGIN                                                             00018600
      DI:=LOC ST; SI:=H; DS:=2 DEC; DS:=LIT":";                         00018700
      SI:=M; DS:=2DEC;                                                  00018800
      SI:=X; SI:=SI+5; DS:=3CHR;                                        00018900
      END  STREAM ST;                                                   00019000
   TIM := TIME(1);                                                      00019100
   HRS := TIM DIV 216000;                                               00019200
   MIN := (TIM DIV 3600) MOD 60;                                        00019300
   TIM := IF HRS GTR 11 THEN " PM" ELSE " AM";                          00019400
   IF HRS GTR 12 THEN HRS := HRS - 12;                                  00019500
   IF HRS LSS 1 THEN HRS := 12;                                         00019600
   TIMECONV := ST(HRS,MIN,TIM);                                         00019700
   END  TIMECONV;                                                       00019800
%***********************************************************************00019900
REAL PROCEDURE MAKEDATE(DATE); VALUE DATE; REAL DATE;                   00020000
%***********************************************************************00020100
   BEGIN                                                                00020200
   REAL MM,DD,YY;                                                       00020300
   MM:=DECCONV(DATE);  DD:=OCTCONV(MM.[30:18]);                         00020400
   YY:=OCTCONV(MM.[18:12]);                                             00020500
   IF DD GEQ 60 THEN                                                    00020600
   IF YY.[46:2] NEQ 0 THEN                                              00020700
   DD := DD + 1;                                                        00020800
   YY:=MM.[18:12];  MM:=0;                                              00020900
   DO MM:=MM+1 UNTIL DD LEQ DAYS[MM] OR MM=12;                          00021000
   DD:=DECCONV (DD-DAYS[MM-1]);                                         00021100
   MM:=DECCONV (MM);                                                    00021200
   MAKEDATE:="0/00/00"&MM[1:37:11]&DD[18:36:12]&YY[36:36:12];           00021300
   END  MAKEDATE;                                                       00021400
%***********************************************************************00021500
STREAM PROCEDURE PRINTING(WORK);                                        00021600
   BEGIN DI:=WORK; DS:=10LIT"PRINTING.."; END;                          00021700
%***********************************************************************00021800
STREAM PROCEDURE HEADING(WORK);                                         00021900
%***********************************************************************00022000
   BEGIN                                                                00022100
   DI:=WORK; DS:=39LIT"NAME    TYPE     RECS SEGS   CREATED   ";        00022200
   DS:=41LIT"ACCESSED  W/R  W/B  S-F LOCKD BY         ";                00022300
   END STREAM PROCEDURE HEADING;                                        00022400
%***********************************************************************00022500
STREAM PROCEDURE TRAILER(WORK,NFIL,NSEG,NREC); VALUE NFIL,NSEG,NREC;    00022600
%***********************************************************************00022700
   BEGIN LOCAL DV;                                                      00022800
   DI:=WORK; DS:=8LIT" "; SI:=WORK; DS:=9WDS; DI:=WORK;                 00022900
   DI:=DI+10; DS:=8LIT"FILES   ";                                       00023000
   DI:=DI+10; DS:=8LIT"SEGMENTS";                                       00023100
   DI:=DI+10; DS:=8LIT"RECORDS ";                                       00023200
   DI:=WORK; SI:=LOC NFIL;                                              00023300
   3(DS:=8DEC; DV:=DI; DI:=DI-8; DS:=7FILL; DI:=DV; DI:=DI+10);         00023400
   END STREAM PROCEDURE HEADING;                                        00023500
%***********************************************************************00023600
STREAM PROCEDURE OUTFORMAT                                              00023700
(WORK,FILNAM,FILTYP,RECS,SEGS,CDAT,ADAT,WPR,WPB,SAVFAC,SECNAM,AFLG);    00023800
%***********************************************************************00023900
VALUE FILNAM,FILTYP,RECS,SEGS,CDAT,ADAT,WPR,WPB,SAVFAC,SECNAM,AFLG;     00024000
   BEGIN LOCAL DV;                                                      00024100
   DI:=WORK; SI:=LOC FILNAM;                                            00024200
   2(SI:=SI+1; DS:=7CHR; DS:=LIT" "); % FILE NAME AND TYPE              00024300
   2(DS:=5DEC; DV:=DI; DI:=DI-5; DS:=4FILL; DI:=DV); % RECS AND SEGS    00024400
   DS:=2LIT" "; DS:=8CHR; % CREATION DATE                               00024500
   DS:=3LIT" "; AFLG(DI:=DI-3; DS:=3LIT" * ");                          00024600
   DS:=8CHR; % ACCESSED DATE                                            00024700
   3(DS:=5DEC; DV:=DI; DI:=DI-5; DS:=4FILL; DI:=DV);                    00024800
   SI:=SI+1; DS:=2LIT" "; DS:=7CHR; DS:=9LIT" "; % SECURITY NAME        00024900
   END STREAM PROCEDURE OUTFORMAT;                                      00025000
%***********************************************************************00025100
STREAM PROCEDURE TYPEFILE(FIIL,TYPE); VALUE TYPE;                       00025200
%***********************************************************************00025300
   BEGIN LOCAL SV;                                                      00025400
   SI:=FIIL;  3(SI:=SI-8); DI:=LOC FIIL; DS:=WDS;                       00025500
   SI:=FIIL; 14(SI:=SI+8); DI:=LOC FIIL; DS:=WDS;                       00025600
   DI:=FIIL;  4(DI:=DI+8); DI:=DI+6;                                    00025700
   SI:=LOC TYPE; SI:=SI+7; DS:=CHR;                                     00025800
   END STREAM PROCEDURE TYPEFILE;                                       00025900
%***********************************************************************00026000
%***********************************************************************00026100
TDATE := OCTCONV(TIME(0));                                              00026200
FILL DAYS[*] WITH 0,31,60,91,121,152,182,213,244,274,305,335,366;       00026300
FILL TYPETABLE[*] WITH "UNKNOWN","BASIC  ","ALGOL  ","COBOL  ",         00026400
"FORTRAN","TSPOL  ","XALGOL ","SEQ    ","DATA   ","LOCK   ",            00026500
"INFO   ","COBOL68";                                                    00026600
A[0] := 0; DISKWAIT(1,A,30,COMMON); % GET ESP RECORD                    00026700
USER     := A[2]; % USER CODE                                           00026800
SPECS    := A[3]; % SELECTION INSTRUCTIONS                              00026900
USERNAME := A[4]; % USER NAME ASSOCIATED WITH FILES                     00027000
LITWORD  := A[5]; % "LITERAL" VALUE                                     00027100
IF (NAMECOUNT:=A[7]) GTR 0 THEN % FILE NAMES GIVING                     00027200
   BEGIN                                                                00027300
   MOVE(NAMECOUNT+1,A[21],NAMES[0]);                                    00027400
   FOR I:=0 STEP 1 UNTIL NAMECOUNT DO                                   00027500
   NAMES[NAMECOUNT+I+1] := NAMES[I].[6:36]; % OBJECT FILE NAMES         00027600
   NAMECOUNT := NAMECOUNT | 2 + 1;                                      00027700
   END;                                                                 00027800
ALL := MATCH(SPECS,0); % NO RESTRICTIONS                                00027900
SECURITYCHECK := NOT(MATCH(USER,USERNAME)); % NOT PRIMARY USER          00028000
LITERAL := NOT ( MATCH(LITWORD,0) ); % EMPTY LITERAL WORD               00028100
IF MATCH(A[6],"TELETYP") THEN TELETYPE := TRUE ELSE                     00028200
IF MATCH(A[6],"PRINTER") THEN PRINTER := TRUE ELSE                      00028300
FILL DSK WITH A[6],USER; % OUTPUT TO DISK FILE                          00028400
BLANKS(WORK); WORK[0] := MAKEDATE(TDATE);                               00028500
WORK[1] := USERNAME; BLANK(WORK[1]);                                    00028600
WORK[2] := "       "; BLANK(WORK[2]); WORK[3] := TIMECONV;              00028700
IF TELETYPE THEN TWXOUT(WORK[0],32,1)                                   00028800
ELSE IF PRINTER THEN WRITE(LPA[DBL],10,WORK[*])                         00028900
ELSE WRITE(DSK,10,WORK[*]);                                             00029000
% SEARCH THE BYPASS DIRECTORY                                           00029100
DISKWAIT(1,A[*],30,0); % GET SEGMENT ZERO                               00029200
DISKBOTTOM := A[4] - 2;                                                 00029300
RESTART := FALSE;                                                       00029400
FOR FID := MODULUS -1 STEP -1 UNTIL 0 DO                                00029500
   BEGIN % TRY ALL POSSIBLE SCRAMBLE BLOCKS                             00029600
   S := DISKBOTTOM -                                                    00029700
   2 | ((FID.[1:23]+FID.[24:24]) MOD MODULUS | MODULUS +                00029800
   (USERNAME.[1:23]+USERNAME.[24:24]) MOD MODULUS);                     00029900
      DO BEGIN                                                          00030000
      DISKWAIT(1,A[*],60,S); % GET DIRECTORY RECORD                     00030100
      FOR I := 0 STEP 3 UNTIL 57 DO % SEARCH DIRECTORY SEGMENT          00030200
      IF (NAME:=A[I]) NEQ "7" THEN % VALID ENTRY                        00030300
      IF MATCH(A[I+1],USERNAME) THEN % ENTRY FOR THIS USER              00030400
         BEGIN                                                          00030500
         IF NAME.[6:12] LEQ 9 THEN GO TO SKIP; % NOT CANDE FILE         00030600
         IF (K:=NAME.[6:6]) LEQ 9 AND K GEQ 1 THEN GO SKIP; % WK FIL    00030700
         IF LITERAL THEN IF NOT LITCOMP(LITWORD,NAME) THEN GO SKIP;     00030800
         IF NAMECOUNT GEQ 0 THEN % FILE NAMES SPECIFIED                 00030900
            BEGIN                                                       00031000
            FOR K:=0 STEP 1 UNTIL NAMECOUNT DO                          00031100
            IF MATCH(NAME,NAMES[K]) THEN GO TO FOUND;                   00031200
            GO TO SKIP; % NOT MATCHED                                   00031300
            END; % IF NAMES SPECIFIED                                   00031400
FOUND:   DIR[NI] := NAME;                                               00031500
         DIR[NI+1] := A[I+2].[33:15]; % HEADER ADDRESS                  00031600
         NI := NI + 2;                                                  00031700
SKIP:    END; % I LOOP                                                  00031800
      IF NI GTR 960 THEN % LIST FILES IN 2 SECTIONS                     00031900
         BEGIN                                                          00032000
         RESTART := TRUE; LINK:=A[2]; GO TO SORTT;                      00032100
         END;                                                           00032200
ENDFID:                                                                 00032300
      END UNTIL ( S:=A[2].[18:15] ) = 0;                                00032400
   END; % FID LOOP                                                      00032500
SORTT:                                                                  00032600
TABLESIZE := NI/2;                                                      00032700
INCREMENT := (TABLESIZE+1) DIV 2;                                       00032800
MAXPTR := TABLESIZE - INCREMENT;                                        00032900
CTR := PTR := 0;                                                        00033000
GO TO COMPARE;                                                          00033100
CYCLE:                                                                  00033200
IF (CTR:=CTR+1) GTR MAXPTR THEN % HALVE THE INCREMENT                   00033300
   BEGIN                                                                00033400
   IF (INCREMENT := INCREMENT DIV 2) = 0 THEN GO TO ENDSORT;            00033500
   MAXPTR := TABLESIZE - INCREMENT;                                     00033600
   CTR := 0;                                                            00033700
   END;                                                                 00033800
PTR := CTR;                                                             00033900
COMPARE:                                                                00034000
IF COMPANDSWAP(DIR[PTR|2],DIR[(PTR+INCREMENT)|2]) THEN                  00034100
IF (PTR:=PTR-INCREMENT) GEQ 0 THEN GO TO COMPARE;                       00034200
GO TO CYCLE;                                                            00034300
ENDSORT: NI:=NI-2;                                                      00034400
IF NOT TELETYPE THEN                                                    00034500
   BEGIN PRINTING(WORK); TWXOUT(WORK[0],10,1); END;                     00034600
HEADING(WORK);                                                          00034700
IF TELETYPE THEN TWXOUT(WORK[0],72,1) ELSE                              00034800
IF PRINTER THEN WRITE(LPA[DBL],9,WORK[*]) ELSE                          00034900
WRITE(DSK,10,WORK[*]);                                                  00035000
FOR I:=0 STEP 2 UNTIL NI DO                                             00035100
   BEGIN                                                                00035200
   DISKWAIT(1,A[*],30,DIR[I+1]); % GET FILE HEADER                      00035300
   UNLOCKED := MATCH(A[5],12) AND MATCH(A[6],12);                       00035400
   PUBLIC   := MATCH(A[5],12) AND NOT(MATCH(A[6],12));                  00035410
   IF SECURITYCHECK THEN IF NOT(UNLOCKED OR PUBLIC) THEN GO SKIPIT;     00035500
   LOCKED := BOOLEAN(A[5].[1:1]);                                       00035600
   SOLEUSER := MATCH(A[5],0) AND MATCH(A[6],0);                         00035700
   SOURCE := NOT (OBJECT := BOOLEAN(A[4].[10:1]));                      00035800
   IF (TYPEFIELD:=A[4].[36:6]) GTR NUMOFTYPES THEN TYPEFIELD:=0;        00035900
   IF ALL THEN GO TO PRINTIT;                                           00036000
   % BUILD COMPARISON MASK                                              00036100
   MASK := SETBIT(TYPEFIELD)   &                                        00036200
   REAL(SOURCE)      [47:47:1] &                                        00036300
   REAL(OBJECT)      [46:47:1] &                                        00036400
   REAL(LOCKED)      [45:47:1] &                                        00036500
   REAL(UNLOCKED)    [44:47:1] &                                        00036600
   REAL(SOLEUSER)    [43:47:1] &                                        00036700
   REAL(PUBLIC  )    [42:47:1];                                         00036710
   % IF "SPECS" BIT IS ON, CORRESPONDING "MASK" BIT *MUST* BE ON        00036800
   IF REAL( BOOLEAN(SPECS) IMP BOOLEAN(MASK) ) NEQ                      00036900
   REAL(NOT FALSE) THEN GO TO SKIPIT;                                   00037000
PRINTIT:                                                                00037100
   K := 10;                                                             00037200
   WHILE A[K] NEQ 0 AND K LSS 29 DO K := K + 1;                         00037300
   TRECS := TRECS + (RECS:=A[7]+1);                                     00037400
   TSEGS := TSEGS + (SEGS:=(K-10)|A[8]);                                00037500
   TFILES := TFILES + 1;                                                00037600
   NAME := DIR[I];                                                      00037700
   TYPE := TYPETABLE[TYPEFIELD];                                        00037800
   IF OBJECT THEN                                                       00037900
      BEGIN                                                             00038000
      NAME := " " & NAME[6:12:36];                                      00038100
      TYPE := "OBJ( ) " & TYPE[30:6:6];                                 00038200
      END;                                                              00038300
   SECNAME := IF LOCKED THEN A[5].[6:42] ELSE                           00038400
   IF UNLOCKED THEN "UNLOCKD" ELSE                                      00038500
   IF PUBLIC THEN "PUBLIC " ELSE "       ";                             00038510
   OUTFORMAT(WORK,                                                      00038600
   NAME,                   % FILENAME                                   00038700
   TYPE,                   % FILE TYPE                                  00038800
   RECS,                   % NUMBER OF RECORDS                          00038900
   SEGS,                   % NUMBER OF SEGMENTS                         00039000
   MAKEDATE(A[3].[30:18]), % CREATION DATE                              00039100
   MAKEDATE(A[3].[12:18]), % ACCESS DATE                                00039200
   A[0].[1:14],            % WORDS PER RECORD                           00039300
   A[0].[15:15],           % WORDS PER BLOCK                            00039400
   A[3].[2:10],            % SAVE FACTOR                                00039500
   SECNAME,                % SECNAME                                    00039600
   (A[3].[12:18]=TDATE));  % ACCESS FLAG                                00039700
   IF TELETYPE THEN TWXOUT(WORK[0],72,1) ELSE                           00039800
   IF PRINTER THEN WRITE(LPA[DBL],9,WORK[*]) ELSE                       00039900
   WRITE(DSK,10,WORK[*]);                                               00040000
   IF BRAAK THEN GO TO EXIT; % QUIT ON BREAK                            00040100
SKIPIT:                                                                 00040200
   END I LOOP;                                                          00040300
IF RESTART THEN                                                         00040400
   BEGIN NI:=0; A[2]:=LINK; RESTART:=FALSE; GO TO ENDFID; END;          00040500
TRAILER(WORK,TFILES,TSEGS,TRECS);                                       00040600
IF TELETYPE THEN TWXOUT(WORK[0],54,1) ELSE                              00040700
IF PRINTER THEN WRITE(LPA[DBL],9,WORK[*]) ELSE                          00040800
WRITE(DSK,10,WORK[*]);                                                  00040900
IF NOT(PRINTER OR TELETYPE) THEN IF TFILES GTR 0 THEN                   00041000
   BEGIN                                                                00041100
   TYPEFILE(DSK,8); LOCK(DSK,*);                                        00041200
   END;                                                                 00041300
EXIT:                                                                   00041400
END PROGRAM.                                                            00041500
END;END.        LAST CARD ON 0CRDING TAPE                               99999999
