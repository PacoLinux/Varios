                    STARTER DECKS                                       00010000
                 MAY 1969   BY P.E.G.                                   00020000
$OMIT    00040050,IF COOL;                                              00030000
                   B-5500 COLD START PROGRAM                            00040000
$INCLUDE 00060050,IF COOL;                                              00050000
                   B-5500 COOL START PROGRAM                            00060000
 BEGIN DEFINE P=POLISH#,M=MEMORY#;                                      00070000
         REAL CORE,READBACK,LOADER,J,I,DISKTOP,CARD,TYPE,MN,YR;         00080000
         ARRAY INFO[*],SHAR[*],BUFFER[*],TEMMP[*],FILEX[*];             00090000
         ARRAY FILEH[*];                                                00100000
         ARRAY LABELS[*];                                               00110000
         INTEGER DY,LOADED,QX,XY,N,T,K,SYSNO,NUMWDS;                    00120000
      LABEL    READCARD,FENCE ,ESU,DATE,FILE,USE,DKA,DKB,STOP,EXIT,TIMER00130000
              ,ERROR,START,READNEXT,TART,OPTN,COMUSE,DIRECT,DIRECTORYTOP00140000
              ,MRCLEAN,XLOADED,HANDLE,SYSTEMS;                          00150000
$INCLUDE  00170050,IF COOL;                                             00160000
    DEFINE REMOVE = BEGIN REMOVER; GO TO REMOVED END#;                  00169000
    LABEL QUIT,REMOVED;                                                 00170000
       SWITCH TYPESWITCH~ERROR,FILE,FENCE,STOP,ESU,USE,DATE,USE,OPTN    00180000
                         ,DIRECT,DIRECTORYTOP,SYSTEMS,XLOADED;          00190000
    ARRAY MONTHS[12]~ 0,31,59,90,120,151,181,212,243,273,304,334;       00200000
    ARRAY FIRST[13] ~ 0,                                                00210000
              "FILE0000",                                               00220000
              "FENCE000",                                               00230000
              "STOP0000",                                               00240000
              "ESU00000",                                               00250000
              "USE00000",                                               00260000
              "DATE0000",                                               00270000
              "TYPE0000",                                               00280000
              "OPTN0000",                                               00290000
              "DIRECTOR",                                               00300000
              "DRCTRYTP",                                               00310000
              "SYSTEMS0",                                               00320000
              "~0000000";                                               00330000
    ARRAY OPTIONS[54] ~ 0,                                              00340000
              "DRA00000",    %47, USE DRUM A                            00350000
              "DRB00000",    %46, USE DRUM B                            00360000
              "BOJ00000",    %45                                        00370000
              "EOJ00000",    %44                                        00380000
              "OPEN0000",    %43, TYPE FILE OPEN                        00390000
              "TERMNATE",    %42, CALL TERMINATE PROCEDURE              00400000
              "DATE0000",    %41, INITIALIZE DATE @ H/L                 00410000
              "TIME0000",    %40, INITIALIZE TIME @ H/L                 00420000
              "ONEBREAK",    %39, USE ONLY ONE BREAKOUT TAPE            00430000
              "AUTOPRNT",    %38, AUTOMATICALLY PRINT PBT               00440000
              "CLEARWRS",    %37, CLEAR WRITE READY STATUS @ TERMINAL   00450000
              "DISCONDC",    %36, WRITE DISC. CODE ON TERMINAL          00460000
              "CMPLFILE",    %35, TYPE WHEN COMPILER FILES OPEN & CLOSE 00470000
              "CLOSE000",    %34, TYPE FILE CLOSE                       00480000
              "ERRORMSG",    %33, ERROR MSGS WHEN PROGR RECOVERY USED   00490000
              "RET00000",    %32, TYPE MT RETENTION MESSAGES            00500000
              "LIBMSG00",    %31, TYPE LIBRARY MESSAGES                 00510000
              "SCHEDMSG",    %30, TYPE SCHEDULE MESSAGES                00520000
              "SECMSG00",    %29, TYPE FILE SECURITY MESSAGES           00530000
              "DSKTOG00",    %28, PREVENT I/O BELOW USER DISK AREA      00540000
              "RELTOG00",    %27, PREVENT DISK RELEASE STATEMENT        00550000
              "PBDREL00",    %26, PRINTER BACKUP DISK RELEASE           00560000
              "CHECK000",    %25, CHECK MEMORY LINKS                    00570000
              "DISKMSG0",    %24, TYPE DISK ERROR MESSAGES              00580000
              "DISKLOG0",    %23  DISK LOGGING                          00590000
              "LIBERR00",    %22  SUPPRESS LIBRARY ERROR MESSAGES       00600000
              "PBDONLY0",    %21  GO TO PRINTER BACK-UP ONLY            00610000
              "SAVEPBT0",    %20  DONT STACK FILES ON PB TAPES          00620000
              "RSMSG000",    %19  PRINT SET OR RESET MESSAGES           00630000
              "AUTOUNLD",    %18  NO USER DISK WILL UNLOAD EXPIRED      00640000
              "RNALL000",    %17  RUN ALL DECKS(SHAREDISK)              00650000
              "CODEOLAY",    %16  OLAY CODE TO ECM(AUXMEM)              00660000
              "COREST00",    %15  JOB CORE ESTIMATES(STATISTICS)        00670000
              "DATAOLAY",    %14  OLAY DATA TO ECM(AUXMEM)              00680000
              "HALT0000",    %13  MAKES SYSTM HANG ON-SHOULD HL MSG     00690000
              "REMOTE00",    %12  ENABLES DATACOM(TSS, IF NOT DCP)      00700000
              "CEMESS00",    %11  LIBRARY MESSAGES FOR CANDE            00710000
              "BATCHZIP",    %10  ZIP DECKS TO RUN ON BATCH(SHAREDISK)  00720000
              "NOBATCH0",    %9  CONTROLS RUNNING OF BATCH JOBS ON TSS  00730000
              "00000000",    %8   UNUSED                                00740000
              "00000000",    %7   UNUSED                                00750000
              "00000000",    %6   UNUSED                                00760000
              "00000000",    %5   UNUSED                                00770000
              "00000000",    %4   UNUSED                                00780000
              "00000000",    %3   UNUSED                                00790000
              "MOD3IOS0",    %2  MODEL III I/O CHANNELS                 00800000
              "00000000",    %1   UNUSED                                00810000
              "OPTN0000",    %0                                         00820000
              "~0000000";                                               00870000
    ARRAY MESSAGE[12] ~                                                 00880000
              "DIRECTRY",                                               00890000
$OMIT      00910050,IF COOL;                                            00900000
              " BUILT~ ",                                               00910000
$INCLUDE 00930050,IF COOL;                                              00920000
              " CHECKD~",                                               00930000
              "INCORREC",                                               00940000
              "T CARD~0",                                               00950000
              "    ERRO",                                               00960000
              "R ~     ",                                               00970000
              "DIRECTOR",                                               00980000
              "YTOP NOT",                                               00990000
              " SET~   ",                                               01000000
              "LOADER L",                                               01010000
              "OADED AL",                                               01020000
              "READY~  ";                                               01030000
 ARRAY LOADBUTTON[15]~                                                  01040000
                             OCT0441000401570421,  %  1    20           01050000
                             OCT0157000000104411,  %  2    21           01060000
                             OCT0211001441310055,  %  3    22           01070000
                             OCT4155124500004425,  %  4    23           01080000
                             OCT0060013101600064,  %  5    24           01090000
                             OCT4441010402530305,  %  6    25           01100000
                             OCT0100023441310055,  %  7    26           01110000
                             OCT0062011441310055,  %  8    27           01120000
                             OCT0066013441310055,  %  9    30           01130000
                             OCT0072015441310055,  % 10    31           01140000
                             OCT0076017441310055,  % 11    32           01150000
                             OCT5140000047700200,  % 12    33           01160000
                             OCT0441100401004441,  % 13    34           01170000
                             OCT0253010420527405,  % 14    35           01180000
                             OCT7405005101002411;  % 15    36           01190000
 REAL STREAM PROCEDURE SEARCH(CARD,FIRST,N); VALUE CARD,N;              01200000
         BEGIN LABEL L,EXIT;                                            01210000
              SI ~ CARD; SI ~ SI-N; CARD ~ SI;                          01220000
         L:   SI ~ FIRST; SI ~ SI+8; TALLY ~ TALLY+1;                   01230000
              IF SC = "~" THEN BEGIN TALLY ~ 0; GO TO EXIT END;         01240000
              DI ~ FIRST; DI ~ DI+8; FIRST ~ DI;                        01250000
              SI ~ CARD;                                                01260000
              IF N SC ! DC THEN GO TO L;                                01270000
         EXIT:SEARCH ~ TALLY;                                           01280000
         END;                                                           01290000
 REAL STREAM PROCEDURE ISOLATE(CARD);                                   01300000
         BEGIN LABEL L,A,X,E;                                           01310000
              LOCAL T;                                                  01320000
              SI ~ CARD; SI ~ SI+5; SI ~ SC;                            01330000
         L:   IF SC = " " THEN BEGIN SI ~ SI+1; GO TO L END;            01340000
              IF SC = """ THEN                                          01350000
                   BEGIN SI ~ SI+1;                                     01360000
                       17(SI ~SI+1; TALLY ~ TALLY+1;                    01370000
                             IF SC = """ THEN                           01380000
                                  BEGIN T ~ SI; DI ~ T; DS ~ LIT " ";   01390000
                                       JUMP OUT TO X                    01400000
                                  END;);                                01410000
         E:             TALLY ~ 0; GO TO X;                             01420000
                   END;                                                 01430000
              IF SC = ALPHA THEN BEGIN                                  01440000
             17(SI~SI+1; TALLY ~ TALLY+1;                               01450000
                   IF SC = ALPHA THEN GO TO A;                          01460000
                   JUMP OUT TO X; A:;);                                 01470000
              GO TO E;                                                  01480000
              END ELSE BEGIN SI ~ SI+1; TALLY ~ 1 END;                  01490000
         X:   ISOLATE ~ TALLY;                                          01500000
              T ~ SI;                                                   01510000
              DI ~ CARD; SI ~ LOC T; DS ~ WDS;                          01520000
         END;                                                           01530000
 SAVE PROCEDURE SPECIAL(C); VALUE C; REAL C;                            01540000
         BEGIN IF ISOLATE(CARD) ! 1 THEN GO TO ERROR;                   01550000
              STREAM(C:CARD);                                           01560000
                   BEGIN SI ~ CARD; SI ~ SI-1;                          01570000
                        DI ~ LOC C; DI ~ DI+7;                          01580000
                        IF SC ! DC THEN TALLY ~ 1;                      01590000
                        C ~ TALLY;                                      01600000
                   END;                                                 01610000
              IF P THEN GO TO ERROR;                                    01620000
         END;                                                           01630000
 SAVE PROCEDURE IOERR(IOD); VALUE IOD; REAL IOD; FORWARD;               01640000
 SAVE REAL PROCEDURE EOM; FORWARD;                                      01650000
 SAVE PROCEDURE IO(ADDRESS,IOD); VALUE ADDRESS,IOD; REAL ADDRESS,IOD;   01660000
         BEGIN REAL T;                                                  01670000
              LABEL L;                                                  01680000
              IOD ~ ADDRESS INX IOD;                                    01690000
         L:   P([IOD],IIO);                                             01700000
              T ~ EOM;                                                  01710000
              IF T.[30:3] ! 0 THEN                                      01720000
                   IF QX THEN GO TO L ELSE QX := 2;                     01730000
              IF ADDRESS } 0 THEN                                       01735000
              IF T.[26:4] ! 0 THEN                                      01740000
                   IF T.[29:1] AND T.[3:5]=6 AND M[ADDRESS]=@40 THEN    01750000
                   BEGIN M[ADDRESS] := 0;                               01760000
                         M[ADDRESS+1] := 0;                             01770000
                         GO TO L;                                       01780000
                   END ELSE                                             01790000
                   IF T.[29:1] AND T.[3:5]=10 AND M[ADDRESS]=0 THEN ELSE01800000
                        BEGIN                                           01810000
                        IOERR(IOD);                                     01820000
                        GO TO L;                                        01830000
                        END;                                            01840000
         END;                                                           01850000
 SAVE PROCEDURE IOERR(IOD); VALUE IOD; REAL IOD;                        01860000
         BEGIN REAL T;                                                  01870000
              LABEL EXIT,HANG;                                          01880000
              IOD ~ IOD.[3:5];                                          01890000
              T ~ IF IOD=30 THEN "SPO" ELSE                             01900000
                  IF IOD=10 THEN "CRA" ELSE                             01910000
                  IF IOD= 6 THEN "DKA" ELSE                             01920000
                  IF IOD= 4 THEN "DRA" ELSE "XXX";                      01930000
              STREAM(T,A~[MESSAGE[4]]);                                 01940000
                   BEGIN SI ~ LOC T; SI ~ SI+5; DS ~ 3CHR; END;         01950000
              IO([MESSAGE[4]] INX 0,@740000000000000);                  01960000
              IF IOD =10 THEN                                           01970000
                   BEGIN DO UNTIL P(RRR).[24:1] = 0;                    01980000
                        DO UNTIL P(RRR).[24:1];                         01990000
                   END ELSE                                             02000000
         HANG: GO TO HANG;                                              02010000
         EXIT: END;                                                     02020000
 SAVE PROCEDURE DISKIO(A,C); VALUE A;                                   02030000
         ARRAY C[*];                                                    02040000
         REAL A;                                                        02050000
         BEGIN BOOLEAN R;                                               02060000
              C := C INX NOT 0;                                         02070000
              IF R:=A.[1:1] THEN A := ABS (A);                          02080000
              STREAM(A,X~FLAG(C));                                      02090000
                   BEGIN SI ~ LOC A; DS ~ 8 DEC END;                    02100000
              IF R THEN IO(C,@140360140100000&NUMWDS[8:38:10]           02110000
                     &((NUMWDS+29)DIV 30)[27:42:6]) ELSE                02120000
              BEGIN                                                     02130000
                   IO(C,@140360100100000);                              02140000
                   M[READBACK] ~ M[C];                                  02150000
                   IO(READBACK,@140360140100000);                       02160000
                   STREAM(READBACK:X~FLAG(C));                          02170000
                   BEGIN SI ~ READBACK; SI ~ SI+8; DI ~ DI+8;           02180000
                        5(IF 48 SC ! DC THEN TALLY ~ 1);                02190000
                        READBACK ~ TALLY;                               02200000
                   END;                                                 02210000
                   IF P THEN IOERR(@140000000000000);                   02220000
              END;                                                      02230000
         END;                                                           02240000
 SAVE REAL PROCEDURE SCANWORD(TABLE); ARRAY TABLE[*];                   02250000
         BEGIN REAL T;                                                  02260000
              T:= IF (M[CARD] EQV 0)= NOT 0 THEN 12 ELSE ISOLATE(CARD); 02270000
              SCANWORD ~ IF T = 12 THEN 12 ELSE SEARCH(CARD,TABLE,T);   02280000
         END;                                                           02290000
 SAVE REAL PROCEDURE SCANUMBER;                                         02300000
         BEGIN REAL T;                                                  02310000
              T ~ ISOLATE(CARD);                                        02320000
              STREAM(R~0:T,CARD);                                       02330000
                   BEGIN DI~DI-T; CARD ~ DI;                            02340000
                        SI ~ CARD;                                      02350000
                        DI ~ LOC R;                                     02360000
                        DS ~ T OCT;                                     02370000
                   END;                                                 02380000
              SCANUMBER ~ P;                                            02390000
         END;                                                           02400000
%                                                                       02410000
SAVE INTEGER PROCEDURE PACKER;                                          02420000
     BEGIN;                                                             02430000
          STREAM (A:=[BUFFER[9]],B:=[PACKER]);                          02440000
           BEGIN SI := A; SI := SI + 4;                                 02450000
                 DI := B; DI := DI + 6;                                 02460000
               4(SKIP 3 SB; 3(IF SB THEN DS:=SET ELSE SKIP DB;SKIP SB));02470000
           END;                                                         02480000
     END;                                                               02490000
%                                                                       02500000
SAVE PROCEDURE LOADERS;                                                 02510000
         BEGIN          LABEL TOPPER;                                   02520000
              IF LOADED THEN                                            02530000
              BEGIN IO([MESSAGE[9]]INX 0,@740000000000000);             02540000
                    DO UNTIL FALSE;                                     02550000
              END;                                                      02560000
     TOPPER:   STREAM(B:=[BUFFER[1]],A:=BUFFER[9].[6:9],                02570000
                    D~PACKER INX BUFFER);                               02580000
                   BEGIN  SI ~B; DS ~ A WDS; END;                       02590000
              IO(BUFFER INX 0,@240120040000000);                        02600000
              IF BUFFER[0].[4:44]=0 THEN GO TO TOPPER;                  02610000
              TEMMP := BUFFER;                                          02620000
              BUFFER := 111 INX BUFFER;                                 02630000
              BUFFER[0] := 1;                                           02640000
              LOADED := TRUE;                                           02650000
              IO(BUFFER INX 0,@140000007700000);                        02660000
              BUFFER := TEMMP;                                          02670000
         END;                                                           02680000
SAVE PROCEDURE REMOVER;                                                 02690000
    BEGIN                                                               02700000
         STREAM(A:=[LABELS[I]],MONTHS);                                 02710000
         BEGIN SI:=A;SI:=SI+1;DS:=7 CHR;DS:=LIT"/";SI:=SI+1;            02720000
              DS:=7 CHR;DS:=9 LIT" REMOVED~";                           02730000
         END;                                                           02740000
         LABELS[I]:=@14;                                                02750000
         IO(MONTHS INX 0,@740000000000000);                             02760000
    END;                                                                02770000
 SAVE REAL PROCEDURE EOM;                                               02780000
         BEGIN GO TO TIMER END;                                         02790000
%***********************START HERE****************************          02800000
    TART      :@20: QX ~ 1; GO TO START;                                02810000
    TIMER     :@22:P(INI); GO TO TIMER; % TIME INTERVAL                 02820000
              :@24:GO TO TIMER; % KEYBOARD REQUEST                      02830000
              :@25:GO TO TIMER; % LPA FINISHED                          02840000
              :@26:GO TO TIMER; % LPB FINISHED                          02850000
              :@27:P(@14,LOD,RTN); % I/O #1 FINISHED                    02860000
              :@30:P(@15,LOD,RTN); % I/O #2 FINISHED                    02870000
              :@31:P(@16,LOD,RTN); % I/O #3 FINISHED                    02880000
              :@32:P(@17,LOD,RTN); % I/O #4 FINISHED                    02890000
              :@34:GO TO TIMER; % INQUIRY REQUEST                       02900000
%**********************CODE STARTS HERE***************************      02910000
    START:*:  P(64,STS);                                                02920000
              DISKTOP ~ -1;                                             02930000
              NUMWDS := 30;                                             02940000
              CORE ~ P(.EOM,LOD).[33:15]+3;                             02950000
              STREAM(CORE);                                             02960000
                   BEGIN DS ~ 8 LIT "0"; SI ~ CORE;                     02970000
                        32(DS ~ 32 WDS);                                02980000
                   END;                                                 02990000
              SHAR := [M[CORE]]&31[8:38:10];                            03000000
              CORE := CORE +31;                                         03010000
              LOADER ~ CORE;                                            03020000
              CORE ~ CORE+30;                                           03030000
              INFO ~ [M[CORE]]&30[8:38:10];                             03040000
              CORE ~ CORE+40;                                           03050000
              FILEH ~ [M[CORE]]&30[8:38:10];                            03060000
              CORE ~ CORE+40;                                           03070000
              FILEX := [M[CORE]]&450[8:38:10];                          03080000
              CORE := CORE + 450;                                       03090000
              LABELS ~ [M[CORE]]&30[8:38:10];                           03100000
              CORE ~ CORE+40;                                           03110000
              READBACK ~ CORE;                                          03120000
              CORE ~ CORE+40;                                           03130000
$INCLUDE 03200050,IF COOL;                                              03140000
              DISKIO(-0,SHAR);                                          03150000
              FOR I := 13 STEP 5 UNTIL 28                               03160000
                     DO SHAR[I] := SHAR[I+1] := 0; %CLEAR ALL INT       03170000
              INFO[0] := @40;                                           03180000
              INFO[1] ~ 0;                                              03185000
              IO(-(INFO INX 0),@140004000000000);                       03190000
              SYSNO := INFO[1].[4:2]; %GET SYSTEM NUMBER                03200000
              I ~ 0;                                                    03210000
              P(ZP1);                                                   03220000
              BUFFER := [M[CORE]]&10[8:38:10];                          03230000
%                                                                       03240000
READCARD:     CARD ~ CORE;                        %READ CARD            03250000
              IO(CARD,@240000040000000);                                03260000
HANDLE:       STREAM (C:=CARD+10); DS := 2 LIT "%-";                    03270000
              GO TYPESWITCH [TYPE:=SCANWORD(FIRST)];                    03280000
%                                                                       03290000
ERROR::       IO([MESSAGE[2]] INX 0,@740000000000000);                  03300000
              DO UNTIL P(RRR).[24:1] = 0;                               03310000
              DO UNTIL P(RRR).[24:1];                                   03320000
              P(64,STS);                                                03330000
              GO TO READNEXT;                                           03340000
%                                                                       03350000
XLOADED:      LOADERS; %LOAD LOADER DECK                                03360000
              CARD := CORE;                                             03370000
              GO TO HANDLE;                                             03380000
%                                                                       03390000
SYSTEMS:      SPECIAL ("=");                                            03400000
              SHAR[0] := SCANUMBER ;                                    03410000
              IF SHAR[0] GTR 4 OR  SHAR[0] LSS 1 THEN                   03420000
              BEGIN SHAR[0] := 1;                                       03430000
                    GO TO ERROR;                                        03440000
              END;                                                      03450000
              GO TO READCARD;                                           03460000
%                                                                       03470000
DIRECTORYTOP: DISKTOP ~ SCANUMBER;                                      03480000
              J ~ DISKTOP+19;                                           03490000
$ INCLUDE 03510001, IF COOL;                                            03500000
              DISKIO(-(DISKTOP-SYSNO),INFO);                            03510000
              GO TO READCARD;                                           03520000
%                                                                       03530000
DIRECT:       INFO[4] ~ SHAR[4]~SCANUMBER;                              03540000
              GO TO READCARD;                                           03550000
%                                                                       03560000
FENCE:        SPECIAL("=");                                             03570000
              INFO[19]~@100000-(P(DUP)-SCANUMBER) DIV 1024|1024;        03580000
              IF INFO[19]<@20000 THEN INFO[19]~@20000 ELSE              03590000
              IF INFO[19]>@70000 THEN INFO[19]~@70000;                  03600000
              GO TO READCARD;                                           03610000
%                                                                       03620000
 ESU:         INFO[2] ~ SCANUMBER;                                      03630000
              GO TO READNEXT;                                           03640000
%                                                                       03650000
 DATE:        MN ~ SCANUMBER;                                           03660000
              IF MN < 1 OR MN > 12 THEN GO TO ERROR;                    03670000
              SPECIAL("/");                                             03680000
              DY ~ SCANUMBER;                                           03690000
              SPECIAL("/");                                             03700000
              YR ~ SCANUMBER;                                           03710000
              DY ~ MONTHS[MN-1]+DY;                                     03720000
              IF YR MOD 4 = 0 AND (YR MOD 100 ! 0 OR YR MOD 400 = 0)    03730000
                   AND MN } 3 THEN DY ~ DY+1;                           03740000
              DY ~ YR MOD 100 | 1000+DY;                                03750000
              STREAM(D~[DY],I~[INFO[1]]);                               03760000
                   BEGIN SI ~ D; DS ~ 8 DEC END;                        03770000
%                                                                       03780000
 READNEXT:    SPECIAL("%");                                             03790000
              GO TO READCARD;                                           03800000
%                                                                       03810000
 USE:         XY ~ SCANWORD(OPTIONS);                                   03820000
              IF XY GTR 48 THEN XY := XY - 40;                          03830000
              GO TO COMUSE;                                             03840000
%                                                                       03850000
 OPTN:        XY ~ 48-SCANUMBER;                                        03860000
 COMUSE:      IF XY = 0 THEN GO TO ERROR;                               03870000
              T ~ 1;                                                    03880000
              FOR K ~ 2 STEP 1 UNTIL XY DO T ~ 0&T[1:2:46];             03890000
              INFO[0] ~ INFO[0] OR T;                                   03900000
              GO TO READNEXT;                                           03910000
%                                                                       03920000
FILE:                                                                   03930000
$INCLUDE 03950050,IF COOL;                                              03940000
         GO TO ERROR;                                                   03950000
$OMIT    04370050,IF COOL;                                              03960000
         FOR K ~ 0 STEP 1 UNTIL 1 DO                                    03970000
              BEGIN T ~ ISOLATE(CARD);                                  03980000
                   IF T > 7 THEN GO TO ERROR;                           03990000
                   STREAM(CARD,T,D~[LABELS[28-I+K]]);                   04000000
                        BEGIN SI ~ CARD; SI ~ SI-T;                     04010000
                             DS ~ 8 LIT "0       ";                     04020000
                             DI ~ DI-7; DS ~ T CHR;                     04030000
                        END;                                            04040000
                   SPECIAL(IF K=0 THEN "/" ELSE ",");                   04050000
              END;                                                      04060000
                   IF DISKTOP < 0 THEN BEGIN                            04070000
                   IO([MESSAGE[6]] INX 0,@740000000000000);             04080000
                   GO TO ERROR; END;                                    04090000
         FILEH[9]~ SCANUMBER;                                           04100000
         SPECIAL("|");                                                  04110000
         FILEH[8]~ SCANUMBER;                                           04120000
         SPECIAL(",");                                                  04130000
         FILEH[3]~-DY&DY[12:30:18]&SCANUMBER[2:38:10];                  04140000
         FILEH[4]~0;                                                    04150000
         N ~ FILEH[9];                                                  04160000
         SPECIAL("%");                                                  04170000
         FOR K ~ 1 STEP 1 UNTIL N DO                                    04180000
              BEGIN CARD ~ CORE;                                        04190000
                   IO(CARD,@240000040000000);                           04200000
                   IF SCANWORD(FIRST) ! 0 THEN GO TO ERROR;             04210000
                   CARD ~ CORE;                                         04220000
                   FILEH[9+K] ~ SCANUMBER;                              04230000
                   SPECIAL("%");                                        04240000
              END;                                                      04250000
         FOR K ~ K STEP 1 UNTIL 20 DO                                   04260000
              FILEH[9+K] ~ 0;                                           04270000
              FILEH[0] ~ "11";                                          04280000
              FILEH[7] ~ FILEH[8]|N-1;                                  04290000
         I ~ I+2;                                                       04300000
         DISKIO(J-(I DIV 2),FILEH);                                     04310000
         IF I = 30 THEN                                                 04320000
              BEGIN DISKIO(J,LABELS);                                   04330000
                   J ~ J+16;                                            04340000
                   I ~ 0                                                04350000
              END;                                                      04360000
         GO TO READCARD;                                                04370000
 %::::::::::::::::::::::NO MORE CARDS:::::::::::::::::::::::::::::      04380000
STOP:         IF INFO[4] < 1500 THEN INFO[4]~1500;                      04390000
              INFO[16]:=15;                                             04395000
              IF DISKTOP < 0 THEN                                       04400000
                   BEGIN                                                04410000
                   IO([MESSAGE[6]] INX 0,@740000000000000);             04420000
                   GO TO ERROR;                                         04430000
                   END;                                                 04440000
              SHAR[1] ~ DISKTOP;                                        04450000
              IF SHAR[0] GTR 4 OR SHAR[0] LSS 1 THEN SHAR[0] := 1;      04460000
              DISKIO(0,SHAR); %                                         04470000
$OMIT    04510050,IF COOL;                                              04480000
              LABELS[28-I] ~ @114;                                      04490000
              LABELS[29-I] ~ 0;                                         04500000
              FOR I:=0 STEP 1 UNTIL(SHAR[0]-1)DO DISKIO(DISKTOP-I,INFO);04510000
$INCLUDE 04530050,IF COOL;                                              04520000
              DISKIO(DISKTOP-SYSNO,INFO);                               04530000
              N := 50 ;%START CLEAN ESPDISK                             04540000
MRCLEAN:      IF N LSS (DISKTOP-SHAR[0]) THEN                           04550000
              BEGIN ;STREAM(B:=N,X:=FILEH);                             04560000
                          BEGIN SI:=LOC B;DS:=8 DEC;END;                04570000
                     P(N);                                              04580000
                     IF (N:=(DISKTOP-SHAR[0]-N))GEQ 63 THEN             04590000
                        IO(FILEH INX 0,@140000007700000)                04600000
                     ELSE                                               04610000
                        IO(FILEH INX 0,@140000000000000&N[27:42:6]);    04620000
                     N := P + 63;                                       04630000
                     GO TO MRCLEAN;                                     04640000
              END;                                                      04650000
              STREAM (B:=DISKTOP+1,X:=FILEH);                           04660000
                       BEGIN SI:=LOC B;DS:=8 DEC;END;                   04670000
              IO(FILEH INX 0,@141320000300000);                         04680000
$INCLUDE 05120050,IF COOL;                                              04685000
              N~(((INFO[4]-DISKTOP+3) DIV (35/2))|16) + J;              04690000
         FOR J~J STEP 16 UNTIL N DO                                     04700000
         BEGIN                                                          04710000
              NUMWDS := 480;                                            04720000
              DISKIO(-(J-15),FILEX);                                    04730000
              FOR I:=0 STEP 2 UNTIL 28 DO                               04740000
              BEGIN                                                     04750000
                   STREAM(A:=0:D:=[LABELS[I]]);                         04760000
                   BEGIN SI:=D;IF SC!"0" THEN TALLY:=1;                 04770000
                        SI:=SI+8;IF SC!"0" THEN TALLY:=1;               04780000
                         A:=TALLY;                                      04790000
                   END;                                                 04800000
                   IF P THEN REMOVE;                                    04810000
              END;                                                      04820000
              FOR I~28 STEP -2 UNTIL 0 DO                               04830000
                   IF LABELS[I]=@114 THEN GO QUIT ELSE                  04840000
                   IF LABELS[I]!@14 THEN                                04850000
                   BEGIN                                                04860000
                        IF (LABELS[I] EQV "DECK   ")=NOT 0 THEN         04870000
                        IF ((LABELS[I+1] AND @77000000007777) EQV       04880000
                             @12000000003714)=NOT 0 THEN                04890000
                             BEGIN                                      04900000
                                  LABELS[I+1]~(P(DUP,LOD) AND           04910000
                                       @77777777770000) OR @6060;       04920000
                             REMOVE;                                    04930000
                        END;                                            04940000
                         FILEH := ((NUMWDS:=I|15)INX FILEX)&30[8:38:10];04950000
                        FILEH[9]:=(*P(DUP)) AND 31;                     04960000
                        STREAM(T~0:FILEH);                              04970000
                        BEGIN SI~FILEH; 30(IF SB THEN BEGIN TALLY~1;    04980000
                             JUMP OUT END ELSE SI~SI+8); T~TALLY;       04990000
                        END;                                            05000000
                        IF P OR (FILEH[9] GTR 20) THEN REMOVE;          05010000
                        FOR T:=FILEH[9]+9 STEP -1 UNTIL 10 DO           05020000
                             IF FILEH[T]!0 THEN                         05030000
                             IF FILEH[T]<DISKTOP OR                     05040000
                             FILEH[T]}INFO[2]|1000000 THEN REMOVE;      05050000
                   FOR T:=FILEH[9]+10 STEP 1 UNTIL 29 DO                05060000
                             IF FILEH[T]!0 THEN REMOVE;                 05070000
REMOVED:                                                                05071000
                   END;                                                 05080000
              DISKIO(J,LABELS);                                         05090000
         END;                                                           05100000
         LABELS[0]~@114;                                                05110000
QUIT:                                                                   05120000
         DISKIO(J,LABELS);                                              05130000
         FOR I ~ 0 STEP 1 UNTIL 29 DO INFO[I] ~ 0;                      05160000
         IO([MESSAGE[0]] INX 0,@740000000000000);                       05170000
         QX ~ 0;                                                        05180000
         IO(LOADER,@240000540000000);                                   05190000
         IF QX ! 2 THEN                                                 05200000
            STREAM(L~LOADER,A~16); BEGIN SI~L; DS~20 WDS END            05210000
         ELSE                                                           05220000
            STREAM(LOADBUTTON,A~@20); BEGIN SI~LOADBUTTON;DS~15 WDS END;05230000
         P(0,STS,0,STF);                                                05240000
         GO TO TART;                                                    05250000
         DO UNTIL FALSE;                                                05260000
END OF WARM LOADER.                                                     05270000
