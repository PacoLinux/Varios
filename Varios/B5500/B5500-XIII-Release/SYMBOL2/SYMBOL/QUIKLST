BEGIN                                                                   00010000
%% QUIKLST/CANDE SOURCE PROGRAM. 6-70. %%                               00010100
REAL COMMON;                                                            00010200
FILE IN SOURCE DISK SERIAL (2,0,0);                                     00010300
SAVE ARRAY A,B[0:30],PARAMS[0:10];                                      00010400
BOOLEAN  BRAAK,  PRNT,  SQUASHED,  SFLG,  NUMBERED,  NOFMT;             00010500
REAL A1,  ADJ,  B1,  B4,  HRANGE,  LRANGE,  LREC,  MAX,                 00010600
PC,  NPARAMS,  REC,  RECSZ,  SEQ,  TYPE,  RECWDS;                       00010700
LABEL  NEXTPARAM,  RANDOMRD,  SERIALRD,  PRINT,  EOF;                   00010800
DEFINE LEFTARROW = "~"#;                                                00010900
%***********************************************************************00011000
PROCEDURE DISKWAIT(I,A,S,D);                                            00011100
VALUE I,S,D; ARRAY A[*]; REAL I,S,D; COMMUNICATE(-8);                   00011200
%***********************************************************************00011300
PROCEDURE TWXOUT(A,N,T);                                                00011400
%***********************************************************************00011500
VALUE N,T;                                                              00011600
REAL A,N,T;                                                             00011700
   BEGIN                                                                00011800
   COMMUNICATE(-11);                                                    00011900
   BRAAK:=BRAAK OR BOOLEAN(T); % MCP RETURNS 1 IF BREAK OCCURRED;       00012000
   END;                                                                 00012100
%***********************************************************************00012200
REAL STREAM PROCEDURE OCTCONV(ADRS); VALUE ADRS;                        00012300
   BEGIN SI:=ADRS; DI:=LOC OCTCONV; DS:= 8 OCT; END;                    00012400
%***********************************************************************00012500
REAL STREAM PROCEDURE HDR(F,N); VALUE N;                                00012600
%***********************************************************************00012700
   BEGIN                                                                00012800
   SI:=F;  3(SI:=SI-8); DI:=LOC F; DS:=WDS;                             00012900
   SI:=F; 14(SI:=SI+8); DI:=LOC F; DS:=WDS;                             00013000
   SI:=F;  N(SI:=SI+8); DI:=LOC HDR; DS:=WDS;                           00013100
   END STREAM PROCEDURE HDR;                                            00013200
%***********************************************************************00013300
STREAM PROCEDURE MOVE(N,A,B); VALUE N;                                  00013400
   BEGIN SI:=A; DI:=B; DS:= N WDS; END;                                 00013500
%***********************************************************************00013600
REAL STREAM PROCEDURE WHEREIS(X);                                       00013700
   BEGIN SI:=X; WHEREIS:=SI; END;                                       00013800
%***********************************************************************00013900
STREAM PROCEDURE OUTFORMAT(A1,B1,B4,SQSH,SFLG,PRNT);                    00014000
%***********************************************************************00014100
COMMENT A1 IS ADDRESS OF A[0], B1 IS ADDRESS OF B[0],                   00014200
B4 IS ADDRESS OF B[9] IF NOT TYPE DATA, OF B[10] IF TYPE DATA,          00014300
SQSH IS TRUE IF "SQUASHED" OPTION SET.                                  00014400
SFLG=TRUE IF NOT TYPE DATA FILE, PRNT=TRUE IF NOT "DISPLAY" VERB        00014500
ROUTINE REFORMATS RECORD FOR OUTPUT TO REMOTE STATION;                  00014600
VALUE A1,B1,B4,SQSH,SFLG,PRNT;                                          00014700
   BEGIN LOCAL SV,SEQ; LABEL EXIT;                                      00014800
   DI:=A1; DS:=8LIT" "; SI:=A1; DS:=10WDS; DI:=A1; % BLANK RCRD         00014900
   SFLG(SI:=B4; DI:=LOC SEQ; DS:=WDS; % SAVE SEQ. NUMBER                00015000
   PRNT(DI:=LOC SEQ; DS:=7FILL); SI:=LOC SEQ; DI:=A1;                   00015100
   8(IF SC=" " THEN SI:=SI+1 ELSE DS:=CHR);                             00015200
   PRNT(DS:=LIT" "); SV:=DI; DI:=B4; DS:=8LIT" "; DI:=SV);              00015300
   SI:=B1;                                                              00015400
   SQSH(                                                                00015500
   2(40( IF SC=" " THEN                                                 00015600
      BEGIN SI:=SI+1; IF SC NEQ " " THEN DS:=LIT" "; END                00015700
   ELSE DS:=CHR));                                                      00015800
   JUMP OUT TO EXIT);                                                   00015900
   2(DS:=40 CHR); DS:=LIT" ";                                           00016000
EXIT:                                                                   00016100
   END STREAM PROCEDURE OUTFORMAT;                                      00016200
%***********************************************************************00016300
STREAM PROCEDURE REKNUMBER(A1,LREC); VALUE A1,LREC;                     00016400
%***********************************************************************00016500
   BEGIN                                                                00016600
   SI:=LOC LREC; DI:=A1; DS:=8DEC; DI:=A1; DS:=7FILL;                   00016700
   SI:=A1; DI:=A1; 8(IF SC=" " THEN SI:=SI+1 ELSE DS:=CHR);             00016800
   DS:=8LIT" ";                                                         00016900
   END STREAM PROCEDURE REKNUMBER;                                      00017000
%***********************************************************************00017100
A[0]:=0; A1:=WHEREIS(A[0]); % FIXED ADDRESSES                           00017200
B[0]:=0; B1:=WHEREIS(B[0]); B4:=WHEREIS(B[9]);                          00017300
DISKWAIT(1,A,30,COMMON); % GET ESP RECORD                               00017400
                                                                        00017500
PRNT := A[1].[7:1] = 0; % ON, IF "DISPLAY" VERB                         00017600
FILL SOURCE WITH A[3],A[4];                                             00017700
READ SEEK(SOURCE[0]);                                                   00017800
IF (MAX:=HDR(SOURCE,7)) LSS 0 THEN GO TO EOF;                           00017810
IF A[1].[6:1] = 1 THEN % WORKFILE                                       00017900
   BEGIN                                                                00018000
   SFLG:=A[1].[3:1]=0; % GET FILE TYPE FROM CANDE                       00018100
   NUMBERED := A[1].[4:1]=1 AND NOT SFLG;                               00018200
   RECWDS:=10; RECSZ:=81; % STANDARD RECORD SIZE                        00018300
   END                                                                  00018400
ELSE                                                                    00018500
   BEGIN % NOT THE WORKFILE                                             00018600
   TYPE:=HDR(SOURCE,4).[36:6]; % FILE TYPE                              00018700
   NOFMT := (RECWDS:=HDR(SOURCE,0).[1:14]) NEQ 10 OR TYPE=10;           00018710
   SFLG := (TYPE LSS 8 OR TYPE GEQ 10) AND RECWDS = 10;                 00018800
   NUMBERED := A[1].[4:1]=1 AND NOT SFLG;                               00018900
   RECSZ := IF SFLG AND TYPE NEQ 10 THEN 81 ELSE                        00019000
   IF TYPE=10 THEN 72 ELSE % TYPE INFO                                  00019100
   IF RECWDS GTR 15 THEN (RECWDS:=15)|8 ELSE RECWDS|8;                  00019200
   END;                                                                 00019300
SQUASHED:=A[1].[2:1]=1 AND TYPE NEQ 10; % "SQUASHED" OPTION             00019310
IF NPARAMS:=A[1].[27:6] GTR 0 THEN % PARAMETERS SPECIFIED               00019400
   BEGIN                                                                00019500
   MOVE(9,A[21],PARAMS); % SAVE PARAMETERS                              00019600
   REC:=0; NPARAMS:=NPARAMS-1; SEQ:=PC:=-1; LREC:=1;                    00019700
NEXTPARAM:                                                              00019800
   LREC := LREC -1;                                                     00019900
   LRANGE:=HRANGE:=PARAMS[PC:=PC+1];                                    00020000
   IF LRANGE=100000000 THEN % "END"                                     00020100
      BEGIN                                                             00020200
      READ(SOURCE[MAX],RECWDS,B[*]); READ(SOURCE); LREC := MAX+1;       00020300
      GO TO PRINT;                                                      00020400
      END;                                                              00020500
   IF PC LSS NPARAMS THEN % MORE PARAMETERS AVAILABLE                   00020600
   IF PARAMS[PC+1].[1:1]=1 THEN % RANGE SPECIFIED                       00020700
   HRANGE:=PARAMS[PC:=PC+1].[21:27];                                    00020800
   IF NOT SFLG THEN % RECORD LOCATION SPECIFIED                         00020900
      BEGIN                                                             00021000
      READ SEEK(SOURCE[LREC:=(LRANGE-1)|REAL(LRANGE NEQ 0)]);           00021100
      GO TO SERIALRD; % SKIP BINARY SEARCH                              00021200
      END;                                                              00021300
   IF SEQ=LRANGE THEN                                                   00021400
      BEGIN LREC:=LREC+1; GO TO PRINT; END;                             00021500
   IF (MAX-LREC) LSS 30 THEN GO TO SERIALRD; % SKIP BINARY SEARCH       00021600
   REC:=LREC+(MAX-LREC) DIV 2; % START IN THE CENTER OF RANGE           00021700
   GO TO RANDOMRD;                                                      00021800
      DO BEGIN                                                          00021900
      IF LRANGE LSS SEQ THEN % MOVE BACK, NOT LSS 0                     00022000
      REC:=(REC:=REC-ADJ)|REAL(REC.[1:1]=0) ELSE % MOVE UP              00022100
      IF REC:=(LREC:=REC)+ADJ GTR MAX THEN REC:=MAX; % NOT MORE THAN MAX00022200
RANDOMRD:                                                               00022300
      READ(SOURCE[REC],RECWDS,B[*]);                                    00022400
      SEQ:=OCTCONV(B4);                                                 00022500
      IF SEQ=LRANGE THEN % MATCHING RECORD                              00022600
         BEGIN LREC:=REC; READ(SOURCE); GO TO PRINT; END;               00022700
      ADJ:=(REC-LREC) DIV 2;                                            00022800
      END UNTIL ADJ LEQ 1;                                              00022900
   READ SEEK(SOURCE[LREC]); % NOT FOUND IN BINARY SEARCH, GO BACK       00023000
SERIALRD:                                                               00023100
   READ(SOURCE,RECWDS,B[*])[EOF];                                       00023200
   LREC:=LREC+1; % POINTS TO THE NEXT RECORD                            00023300
   SEQ:=IF SFLG THEN OCTCONV(B4) ELSE LREC;                             00023400
   IF SEQ LSS LRANGE THEN GO TO SERIALRD; % TOO LOW                     00023500
   IF SEQ GTR HRANGE THEN % TOO HIGH                                    00023600
   IF PC LSS NPARAMS THEN GO NEXTPARAM ELSE GO EOF;                     00023700
PRINT:                                                                  00023800
   IF NUMBERED THEN % PRINT OUT RECORD LOCATION                         00023900
      BEGIN                                                             00024000
      REKNUMBER(A1,LREC);                                               00024100
      TWXOUT(A[0],9,1);                                                 00024200
      END;                                                              00024300
   IF NOFMT THEN MOVE(RECWDS,B,A) ELSE                                  00024310
   OUTFORMAT(A1,B1,B4,SQUASHED,SFLG,PRNT);                              00024400
   TWXOUT(A[0],RECSZ,1);                                                00024500
   IF BRAAK THEN GO TO EOF; % STOP PRINTING                             00024600
   GO TO SERIALRD;                                                      00024700
   END % IF PARAMETERS SPECIFIED                                        00024800
ELSE                                                                    00024900
   DO BEGIN % READ FILE SERIALLY                                        00025000
   READ(SOURCE,RECWDS,B[*])[EOF];                                       00025100
   LREC := LREC + 1;                                                    00025200
   IF NUMBERED THEN % PRINT OUT RECORD LOCATION                         00025300
      BEGIN                                                             00025400
      REKNUMBER(A1,LREC);                                               00025500
      TWXOUT(A[0],9,1);                                                 00025600
      END;                                                              00025700
   IF NOFMT THEN MOVE(RECWDS,B,A) ELSE                                  00025710
   OUTFORMAT(A1,B1,B4,SQUASHED,SFLG,PRNT);                              00025800
   TWXOUT(A[0],RECSZ,1);                                                00025900
   END UNTIL BRAAK; % OR END-OF-FILE                                    00026000
EOF:                                                                    00026100
CLOSE(SOURCE);                                                          00026200
END PROGRAM.                                                            00026300
END;END.        LAST CARD ON 0CRDING TAPE                               99999999
