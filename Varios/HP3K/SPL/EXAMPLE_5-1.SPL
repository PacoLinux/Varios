Input/Output
============

INPUT AN ASCII STRING
ABCDEFGHIJKLMNOPORSTUVWXYZ01234567890!""#$%&'()ASDFGHJ1234567
ABCDEFGHIJKLMNOPORSTUVWXYZ
01234567890
INPUT AN ASCII STRING
ABCDEF123GHIJKL456MNOPORS789IUVWXYZ0
ABCDEFGHIJKLMNOPORSTUVWXYZ
1234567890
INPUT AN ASCII STRING
126CRANKSHAFT0014932#
CRANKSHAFT
1260014932

BEGIN 	<<EXAMPLE 5-1. SYMBOL TYPE SORTER>>
COMMENT:
		THE PROGRAM INPUTS AN ASCII DATA RECORD (LENGTH <= 72
		CHARACTERS). ALPHABETIC AND NUMERIC CHARACIERS ARE MOVED
		TO SEPARATE BUFFERS FOR OUTPUT. CALL LOWER CASE ALPHABETIC
		CHARACTERS ARE UPSHIFTED AND MOVED.) WHEN A SPECIAL
		CHARACTER IS FOUND, PROCESSING STOPS AND BOTH BUFFERS ARE
		OUTPUT.
		NOTE: "INPUT AND "OUTPUT ARE DUMMY PROCEDURES WHICH SIMULATE
		INPUT, OUTPUI, AND CONVERSION - THEY ARE NOT PART OF SPL /3000;
BYTE ARRAY REQST(0:20):="INPUT AN ASCII STRING":
BYTE ARRAY DATA(0:72):= 73 (%15):
BYTE ARRAY ALPHADATA(0:72):= 73(" ");
BYTE ARRAY NUMBRDATA(0:72):= 73(" "):
BYTE POINTER DPNIR:=@DATA,
			APNIR:=@ALPHADATA,
			NPNIR:=@NUMBRDATA;
LABEL SCANR;
<<END OF DECLARATIONS>>
		OUTPUT(REQST);	<<REQUEST RECORD INPUT>>
		INPUT(DATA);	<<READ RECORD>>
SCANR:	MOVE APNTR:=DPNTR WHILE AS,0; <<MOVE ALPHABETIC-UPSHIFT>>
		@DPNIR:=TOS;
		@APNIR:=TOS;
		MOVE NPNTR:=DPNTR WHILE N,0;	<<MOVE NUMERIC>>
		@DPNIR:=TOS;
		@NPNIR:=TOS;
		IF = THEN GOTO SCAN:	<<LAST CHARACTER ALPHABETIC>>
		OUTPUT(ALPHADATA);		<<PRINT ALPHA STRING>>
		OUTPUT(NUMBRDATA):		<<PRINT NUMBER STRING>>
END	<<SYMBOL TYPE SORTER>>.



