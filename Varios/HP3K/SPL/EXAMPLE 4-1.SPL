Input/Output
============

ENTER 10 INTEGER VALUES
123
+987
-32768
g
+32767
90
-87
-2
1
17
OUTPUT DATA
-32768
-87
~2.
0
1
1 7
90
123
987
32767
ENTER UP TO 10 NUMBERS, OR /E
-1
642
%100
9999
0
123
45
/E
OUTPUT DATA
-1
0
45
64
123
642
9999





LISTING
========


BEGIN <<EXAMPLE 4-1. INTEGER SORT>>
COMMENT:
		THIS PROGRAM WILL ORDER AN INTEGER ARRAY WITH SUBSCRIPTS
		RUNNING FROM ZERO TO "SIZE". THE ARRAY ELEMENTS WILL BE
		ORDERED ALGEBRAICALLY - SMALLEST VALUE TO LARGEST VALUE.
		NOTE: "INPUT AND "OUTPUT" ARE DUMMY PROCEDURES WHICH SIMULATE
		INPUT, OUTPUT, AND CONVERSION - THEY ARE NOT PART OF SPL/3000;
EQUATE SIZE=9;
BYTE ARRAY ASCIIBUF(0:23):="ENTER 10 INTEGER VALUES ";
BYTE ARRAY OUT(0:11):="OUTPUT DATA ";
INTEGER ARRAY SORTO:SIZE);
INTEGER SAVE,
		J,K,
		TEMP;
<<END OF DECLARATIONS>>
		OUTPUT(ASCIIBUF);		<<OUTPUT INSTRUCTIONS>>
		FOR J:=0 UNTIL SIZE DO 	<<INPUT DATA LOOP>>
		INPUI(SORT(J)); 		<<INPUT A VALUE>>
COMMENT:
		ORDER THE ARRAY
;
		FOR K:=0 STEP 1 UNTIL SIZE-1 DO 	<<OUTER LOOP>>
		  FOR J:=K+1 STEP I UNTIL SIZE DO 	<<INNER LOOP>>
		    IF SORT(K) > SORT(J) THEN		<<NOT IN ORDER>>
			  BEGIN
				SAVE:=SORT(K);	<<EXCHANGE VALUES>>
				SORT (K):=SORT(J);
				SORT(J):=SAVE;
			  END;
		OUTPUT(OUT);			<<PRINT HEADING>>
		FOR X:=0 UNTIL SIZE DO	<<OUTPUT LOOP>>
		OUTPUT (SORT (K)):		<<PRINT A VALUE>>
END								<<INTEGER SORT>>.