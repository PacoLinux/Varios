/* Search_pattern.plp, Dutil, JEW, 12-Mar-81
   This routine returns record addresses in an order optimum for disk
   searches.  The first parameter (ra) is for this routine's use only.

   The second parameter (n) should be initially set to 1 and then never
   modified.

   The third parameter is a var for this routine's use only.

   The fourth and fifth parameters are the range of records to be returned.

*/

search_pattern: proc (ra, n, times_out_of_range, start, end) returns (bin(31));

dcl
   ra    bin(31),
   n     bin,
   times_out_of_range  bin,
   start bin(31),
   end   bin(31);

dcl
   offset_table (27) static bin init (
      0,3,6,1,4,7,2,5,8,
      3,6,0,4,7,1,5,8,2,
      6,0,3,7,1,4,8,2,5),
   trial_ra    bin(31);


   if n = 1 then       /* initial call */
      do;
      ra = divide (start, 9, 15) * 9;
      times_out_of_range = 0;
      end;

try_again:

   if mod (n-1, 9) = 0 & n ^= 1 then      /* cross tracks */
      do;
      ra = ra + 9;
      if n = 28 then    /* wraparound to top of table */
         n = 2;
      else
         n = n + 1;
      end;
   else       /* still on same track */
      n = n + 1;

   trial_ra = ra + offset_table (n-1);
   if start <= trial_ra & trial_ra <= end then
      return (trial_ra);
   else             /* this address is out of search range */
      do;
      times_out_of_range = times_out_of_range + 1;
      if times_out_of_range = 9 then
         return (-1);     /* indicate end of search */
      else
         goto try_again;
      end;

end;
