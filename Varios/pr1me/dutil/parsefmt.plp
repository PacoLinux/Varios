/* Parsefmt.plp, Dutil, JEW, 8-Feb-81
   Parse a possible format string.

   A format string is made up of three elements in any order:

   <mode>    Print mode, either H, A, O, or D for Hex, Ascii, Octal, or Decimal
   <length>  Either null (1 word format) or L (2-words per element printed)
   <ele>     Integer representing number of elements to print per line

   A null string is invalid.

*/

parsefmt: proc (fs, my_format, status);

$Insert *>insert>global.plp.ins

dcl
   fs       char(10) var,         /* format string */
   1  my_format like print_format,       /* results placed here */
   status   bin;

dcl
   mode  bin,     /* hold for mode */
   els_per_line   bin,
   words    bin,
   left   bin,        /* characters left in format string */
   (mx, nx, nex, px)  bin,      /* search indexes */
   pictures(8) char(10) static init (       /* 1 and 2 word formats */
      '%4:0H %$',  '%2C %$',  '%6:0O %$',  '%6:0D %$',
      '%8:3H %$',  '%4C %$',  '%12:3O %$', '%11:3D %$');


   status = 1;     /* assume bad */
   left = length (fs);
   if left = 0 then
      return;

   mx = search (fs, 'HAOD');
   if mx ^= 0 then
      do;
      left = left - 1;
      mode = index ('HAOD', substr (fs, mx, 1));
      end;

   nx = search (fs, '0123456789');
   if nx > 0 then
      do;

      /* parse out a number (elements per line) */

      nex = verify (substr (fs, nx), '0123456789');
      if nex = 0 then
         nex = length (fs) - nx + 1;
      else
         nex = nex - 1;
      els_per_line = bin (substr (fs, nx, nex));
      left = left - nex;
      end;

   if index (fs, 'L') ^= 0 then
      do;
      left = left - 1;
      words = 2;
      end;
   else
      words = 1;

   /* was a good format string given? left should be zero */

   if left = 0 then
      do;

      /* format was ok, setup format structure */

      px = mode;
      if words = 2 then
         px = px + 4;
      my_format.picture = pictures (px);
      my_format.words = words;
      my_format.mode = mode;
      my_format.els_per_line = els_per_line;

      status = 0;
      end;

end;    /* parsefmt */
