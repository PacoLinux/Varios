/* Findbra.plp, Dutil, JEW, 13-Feb-81
   Find a treename in the file system and return its bra.
*/

Findbra: proc (my_rec, pathname, bra, ignore_del, status);

$Insert *>insert>global.plp.ins

dcl
   1 my_rec like disk_record,
   pathname     char(120) var,
   bra      bin(31),
   ignore_del bit,
   status   bin;

dcl
   parse_name entry (char(*) var, bin) returns (char(32) var),
   name_search entry (1, 2, 3 bin(31), 3 bin(31), 3 bin, 3 bin, 3 bin(31),
                      3 bin(31), 3 bin, 3 (5) bin, 2 (0:1023) bin,
                      bin(31), char(*) var, bin(31), bit) returns (bit);

dcl
   entryname   char(32) var,
   mybra       bin(31),
   nextra      bin(31),
   px          bin,
   searching   bit;


   status = 0;
   px = 1;       /* parsing index */

   entryname = parse_name (pathname, px);
   if entryname = '*' then           /* relative treename */
      do;
      if rec.back ^= 0 then
         nextra = rec.bra;            /* "rewind" ufd */
      else
         nextra = rec.cra;

      entryname = parse_name (pathname, px);
      end;
   else
      nextra = 1;           /* not relative, start search at Mfd */

   searching = true;
   do while (entryname ^= '' & searching);

      if name_search (my_rec, nextra, entryname, mybra, ignore_del) then
         do;
         entryname = parse_name (pathname, px);
         nextra = mybra;
         end;
      else
         searching = false;        /* didn't find entryname in this ufd */

   end;

   bra = mybra;
   status = ^searching;      /* 0 if searching (name found), 1 if not searching */

end;     /* Findbra */
