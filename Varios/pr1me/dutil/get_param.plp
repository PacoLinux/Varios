/* Get_param.plp, Dutil, JEW, 13-Mar-81
   Prompt and get a response.  4 input formats are supported:
      1 - Hex
      2 - Varying character string
      3 - Octal
      4 - Decimal

   If only a <cr> is typed, input_given will be false and the routine
   will return; otherwise input_given will be true.
*/

get_param: proc (key, prompt, value, input_given);

$Insert *>insert>cl.plp.ins
$Insert *>insert>global.plp.ins

dcl
   key         bin,
   prompt      char(80) var,
   value       bin(31),
   input_given bit;

dcl
   ch$fx2 entry (char(*) var, bin(31), bin),
   ch$hx2 entry (char(*) var, bin(31), bin),
   ch$oc2 entry (char(*) var, bin(31), bin),
   cl$get entry (char(*) var, bin, bin),
   exit entry,
   ioa$   entry options (variable);

dcl
   bcv         char(cl_sz) var based;


try_again:

   call ioa$ ('%v%$', -1, prompt);
   input_given = false;

   /* get a line */

   call cl$get (cl, cl_sz, status);
   if length (cl) > 0 then
      do;
      select (key);

         when (1)
            call ch$hx2 (cl, value, status);

         when (2)
            do;
            status = 0;
            addr (value) -> bcv = cl;    /* return command line for ascii */
            end;

         when (3)
            call ch$oc2 (cl, value, status);

         when (4)
            call ch$fx2 (cl, value, status);

         otherwise
            do;
            call ioa$ ('Bad key in call to get_param.%.', -1);
            call exit;
            end;
         end;

      if status ^= 0 then
         do;
         call ioa$ ('Input must be a%$', -1);
         select (key);
            when (1) call ioa$ (' hex%$', -1);
            when (3) call ioa$ ('n octal%$', -1);
            when (4) call ioa$ (' decimal%$', -1);
            end;
         call ioa$ (' integer.%.', -1);
         goto try_again;
         end;

      input_given = true;
      end;       /* if length (cl) */

end;      /* get_param */
