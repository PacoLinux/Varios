C PUSAGE, METERS>PUSAGE, 11/30/78.
C READS PB-HISTOGRAM STATISTICS AND DISPLAYS THEM.
C
C 11/30/78 HAMPSON ADDED CONTROL ARG "-FREQ N" FOR DELAY CYCLE.
C 10/24/78 DOSANI INITIAL CODING.
C
       LOGICAL FIRST,MAPSUP,DSPLAY,NAMEQV
       INTEGER *4 BUFF(1030),OBUFF(1024),M,TM,NUMTIM,TEMP2,NETHIT
       INTEGER SN,NOSEGN,PART,NODIV,LNTHPT,WN,TEMP,ENDWN,LNTBLK
       INTEGER COMBUF(11),TUSR,INFO(8),KEYBUF(4),NAMBUF(16)
       EQUIVALENCE (BUFF(1025),COMBUF)
       INTEGER CODE,MACODE,RDCODE
       INTEGER I,J,K,L,N,Q,P,CUR, TABLSZ
       INTEGER *4 TOTFRE(8)
       REAL TOTPER(8), TOTINP(8)
       INTEGER * 2 NAMECN,NAME(400),MAPNAM(17),NAMLEN
       INTEGER * 2 MAPWN,MAPEWN
       REAL PERC,OUTPER,INPER
       INTEGER*4 SLP

       INTEGER LINE(6),SNLINE(6)
       INTEGER ENDLIN(6),BLKLIN(6)
       DATA LINE/'1 2 3 4 5 6 '/
       DATA ENDLIN/'1 2 3 4 5 6 '/
       DATA BLKLIN/'1 2 3 4 5 6 '/
       DATA SNLINE/'1 2 3 4 5 6 '/

        FIRST=.TRUE.
       MAPSUP = .FALSE.
       DSPLAY = .FALSE.
       SLP = 0  /* NO DELAY INITIALLY

C         SEG #PUSAGE [ -MAP mapname ] [ -DISPLAY n]
400     CALL RDTK$$(1,INFO,KEYBUF,4,RDCODE)
       IF (RDCODE .NE.0 ) GOTO 1000
       IF (NAMEQV(KEYBUF,'-MAP    ')) GOTO 500
       IF (NAMEQV(KEYBUF,'-DISPLAY ')) GOTO 600
       IF (NAMEQV (KEYBUF, '-FREQ')) GOTO 1700
       GOTO 1000
500    CALL RDTK$$(1,INFO,NAMBUF,16,RDCODE)
       IF(RDCODE .NE. 0 )GOTO 1000
       IF(INFO(2) .EQ.0) GOTO 1000    /* ZERO LENGTH
       MAPSUP = .TRUE.
       MAPNAM(1) = INFO(2)
       J = INFO(2)
       DO 300 I = 1 , J
       MAPNAM(I+1) = NAMBUF(I)
300    CONTINUE
       GOTO 400
600    CALL RDTK$$(1,INFO,NAMBUF,16,RDCODE)
       IF(RDCODE .NE. 0 )GOTO 1000
       IF(INFO(1) .NE. 1 ) GOTO 1000   /* NOT A NORMAL TOKEN
       IF (INFO(4) .GT. 0 ) DSPLAY = .TRUE.
        PART= INFO(4)
       GOTO 400
1700   CALL RDTK$$ (1, INFO, NAMBUF, 16, RDCODE)
       IF (RDCODE .NE. 0) GOTO 1000
       IF (INFO(1) .NE. 1) GOTO 1000
       SLP = INTL (INFO(4)) * 1000   /* NUMBER MILLISEC TO DELAY
       GOTO 400
1000   CONTINUE
       IF (MAPSUP) CALL PARSE(MAPNAM,MACODE)
       NAMECN = 200
C
50     CALL PBINFO(LOC(BUFF),2059,CODE)
       NOSEGN=COMBUF(3)
       TUSR=RS((COMBUF(1)-:100000),6)
       IF(COMBUF(1).EQ.0)TUSR=0
       TABLSZ = 1024
       TM =0
       DO 80 I = 1,8
       TOTFRE(I) = 0
       TOTPER(I) = 0.0
       TOTINP(I) = 0.0
80     CONTINUE
       DO 100 I = 1,TABLSZ
        TM = TM + BUFF(I) - OBUFF(I)
100     CONTINUE

C        IF (TM .EQ. 0 ) TM = 1
       J = 1
       WN = 0
       CUR = 1
       NUMTIM = BUFF(1)-OBUFF(1)
       NETHIT=TM-NUMTIM
C        IF (NETHIT.EQ.0 ) NETHIT = 1
       INPER = 0.0
       IF(TM .NE.0) OUTPER = 100.*(BUFF(1)-OBUFF(1))/TM
       IF(TM .EQ.0) OUTPER=0
C
       TEMP=NOSEGN
       NODIV = TABLSZ/(2**LOG2(TEMP))
       IF (.NOT. DSPLAY) PART = NODIV
       TEMP=PART
       PART=2**LOG2(TEMP)
       IF (PART .GT. NODIV) PART = NODIV
       IF (PART .LE. NODIV) J = NODIV / PART
       LNTHPT =1024/PART
       LNTBLK=LNTHPT
       CALL CBTOO(LNTBLK,BLKLIN)
C
        IF(FIRST) GOTO 120
       WRITE (1,440)TM
       WRITE (1,450)NUMTIM
       WRITE (1,451)OUTPER
       WRITE (1,453)BLKLIN
       IF(TUSR .NE.0) WRITE(1,470)TUSR
       IF(TUSR .EQ.0) WRITE(1,480)
120    CONTINUE
       IF(TM .EQ.0)GOTO 960

       TEMP2=BUFF(1)
       BUFF(1) = 0.0
       OBUFF(1)=0.0

C
C            FOR EVERY SEGMENT, ADD CONSECUTIVE COUNTERS IF NECESSARY
C            AND DISPLAY FREQUENCY AND PERCENTAGE OF TIMES PB WAS
C            IN THAT SECTION OF THE CODE
C
       IF(FIRST) GOTO 460
440     FORMAT(10X,' THE NO. OF SAMPLES TAKEN ',20X,I12)
450     FORMAT(10X,' THE NO. OF TIMES PB WAS OUT OF RANGE',9X,I12)
451    FORMAT(10X,' % OF TIMES PB WAS OUT OF RANGE ',11X,F15.2)
453    FORMAT(10X,' LENGTH (IN WORDS) OF EACH SECTION OF CODE',8X,
     X6A1,'00')
470    FORMAT(10X,' USER NO. OF PROCESS MONITORED',18X,I10)
480    FORMAT(10X,' USER NO. OF PROCESS MONITORED',25X,'ALL')
460       DO 900 I = 1,NOSEGN
       IF(FIRST) GOTO 660
       WRITE (1,650)
650     FORMAT(/'SEGMENT NO.'5X'WORD NUMBER'8X'FREQUENCY'6X
     T'PERCENT'8X' % IN RANGE' )
660       SN = COMBUF(3+I)
       CALL CBTOO(SN,SNLINE)
          WN = 0
      ENDWN = LNTHPT - 1
       N = CUR + NODIV - 1
       DO 800 K = CUR, N, J
       M = 0
       Q = J - 1
       DO 700 L = 0, Q
       P = K + L
       M = M+BUFF(P)-OBUFF(P)
700    CONTINUE
       PERC = (M*100.)/ TM
      IF (NETHIT .NE. 0 ) INPER=100.*M/NETHIT
       TOTFRE(I) = TOTFRE(I) + M
       TOTPER(I) = TOTPER(I) + PERC
       TOTINP(I) = TOTINP(I) + INPER
C
C            CONVERT BINARY WORD NO  TO OCTAL
C
       CALL CBTOO(WN,LINE)
       CALL CBTOO(ENDWN,ENDLIN)
       IF(FIRST) GOTO 760
C      IF(K .EQ. CUR ) GOTO 720
      IF(PERC.EQ.0) GOTO 760
720    WRITE(1,750)
     X SNLINE,LINE,ENDLIN,
     X M,PERC,INPER
750   FORMAT(6A1,6X 6A1,'00','  -',6A1,'77',I10,F15.2,2X,F15.2 /)
       MAPWN = LS(WN,6)
       MAPEWN = OR(LS(ENDWN,6) , :77 )
       IF (.NOT. MAPSUP)GOTO 760
       IF (MACODE .EQ.0) CALL MAP(SN,MAPWN,MAPEWN,NAMECN,NAME)
760       WN = WN + LNTHPT
        ENDWN = ENDWN + LNTHPT
800    CONTINUE
       CUR = CUR+NODIV
900    CONTINUE
       BUFF(1)=TEMP2    /*  SETTING BUFF(1) BACK TO ORIGINAL VALUE */
       DO 950 I = 1,TABLSZ
       OBUFF(I) = BUFF(I)
950     CONTINUE
       IF (FIRST) GOTO 960
       WRITE(1,970)
970    FORMAT(/,10X, '*********  SUMMARY OF THE SAMPLING  *********'/)
       WRITE(1,975)
975    FORMAT(4X,'SN',6X,'TOTAL FREQUENCY',10X,'PERC',12X,
     X 'PERC IN RANGE')
       DO 980 I = 1,NOSEGN
       SN = COMBUF(3+I)
       CALL CBTOO (SN,SNLINE)
       WRITE(1,990) SNLINE, TOTFRE(I), TOTPER(I), TOTINP(I)
990    FORMAT(6A1,5X, I10,5X, F15.2, 5X, F15.2)
980    CONTINUE
960     CONTINUE
       IF (SLP .EQ. 0) CALL EXIT  /* NO DELAY
       IF (SLP .NE. 0) CALL SLEEP$ (SLP)  /* ELSE SLEEP AWHILE
       FIRST=.FALSE.
       GOTO 50
       END
      SUBROUTINE CBTOO(N,LINE)
      INTEGER LINE(6),N,J,I
      J=15
      DO 10 I=1,6
      LINE(I)=LS(AND(RS(N,J),7),8)+'0'
      J=J-3
10    CONTINUE
       DO 20 I=1,6
       IF(RS(LINE(I),8) .NE. :260)GOTO 25
       LINE(I)=:120240
20     CONTINUE
25    RETURN
      END

       SUBROUTINE LOG2(X)
       INTEGER X,Z
       REAL*8 Y
       Y=X
       Z=(DLOG2(Y))
       IF(2**Z.NE.X)Z=Z+1
       X=Z
       RETURN
       END
