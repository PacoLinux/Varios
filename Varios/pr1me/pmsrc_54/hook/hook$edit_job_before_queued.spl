/* HOOK$EDIT_JOB_BEFORE_QUEUED.SPL, PrintMaster, Jim Wilcoxson, January 6, 1985*/
/* User hook to edit a job keyword list before it is queued.                  */
/* The hook is called with a pointer to the complete job keyword list, except */
/* for information added after a queue and job entry are selected.  This      */
/* means that keywords such as -QUEUE, -JOBID, etc. are NOT in the keyword    */
/* list yet.   The hook can modify the job by inserting keywords, changing    */
/* existing keywords, or deleting keywords.  System keywords such as -USER    */
/* must NEVER be deleted, as this will cause other parts of PrintMaster to    */
/* screw up.                                                                  */
/*                                                                            */
/* If the hook does not want to allow the job to be queued, the "reason"      */
/* argument should be set to some error message explaining why (unless an     */
/* error message has already been printed) and the hook should return false.  */
/* The hook can also call ERR$ directly to prevent the job from being queued. */
/* If the job should be queued, the hook should return true.                  */
/*                                                                            */
/* Copyright (C) 1984 J.E. Wilcoxson, J.L. Hostetler.  All rights reserved.   */
/******************************************************************************/

hook$edit_job_before_queued : procedure (job_kwl, reason) returns (bit);

%nolist;
%include '*>insert>gbl.ins.spl';
%include '*>entry>kwl$.ins.spl';
%list;

dcl
   job_kwl        ptr,                      /* ptr to job kwl (in/out) */
   reason         char(*) var;              /* reason job can't be queued (out) */


/*
/* EXAMPLE HOOK:  adds a scheduling keyword -LOGIN_ID with
/*                the user's id as its value.  This should
/*                only be done when the job is added and not when
/*                it is changed.  (We don't want the value to be
/*                user id of the operator.)
/* */
/* dcl
/*    li_kw             ptr,
/*    ei                like kwl$expand_info,
/*    flags             like kwl$flags;
/*
/* if ^kwl$find_kw ('LOGIN_ID', job_kwl, li_kw) then do;
/*    string(ei) = kwl$default_expand_info;
/*    ei.wp_use_acl = true;                 /* Set :p from the MASTER kwl */
/*    string(flags) = kwl$default_flags;
/*    call kwl$insert_kw ('LOGIN_ID', li_kw, job_kwl, ei, flags, flags);
/*    call kwl$add_value (li_kw, gbl.my_user_id);
/*    end;
/* return (true);
/* */

/*
/* EXAMPLE HOOK:  checks values of the keyword -AT
/*
/* dcl at_kw ptr;
/* dcl at_value char(kwl$chars_in_value) var;
/*
/* if kwl$find_kw ('AT', job_kwl, at_kw) then
/*    if kwl$get_nth_value (at_kw, 1, at_value) then
/*       if at_value = 'ABC' | at_value = 'DEF' then
/*          return (true);
/*       else
/*          reason = 'Value of keyword -AT must be ABC or DEF.';
/*    else
/*       reason = 'Keyword -AT must be followed by a value.';
/* else
/*     reason = 'Keyword -AT must be used on all jobs.';
/*
/* return (false);
/*
*/

   return (true);

end hook$edit_job_before_queued;
