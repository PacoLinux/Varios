/* ERR$ABORT_PROGRAM.SPL, PrintMaster, Jim Wilcoxson, August 11, 1983         */
/* Does a DMSTK command to trace the error, non-local goto to main program    */
/* error label.                                                               */
/* Copyright (C) 1984 J.E. Wilcoxson, J.L. Hostetler.  All rights reserved.   */
/******************************************************************************/

err$abort_program : procedure;

%nolist;
%include '*>insert>gbl.ins.spl';
%include '*>insert>err.ins.spl';
%include '*>entry>comm$.ins.spl';
%include '*>entry>primos.ins.spl';
%include '*>entry>gp$.ins.spl';
%list;

dcl
   access_violation$ condition,
   illegal_segno$ condition,
   status         bin,
   total_users    bin;

   /* later, put this trace in a system log file */

   on condition (access_violation$)
      goto forget_it;
   on condition (illegal_segno$)
      goto forget_it;

   if gbl.trace_on | (psv.system_inited & ^gbl.I_am_user) then
      call cp$ ('dmstk -all', status, status);

   if gbl.I_am_monitor then
      psv.monitor_user = 0;
   if psv.shared_area_owner ^= 0 then do;   /* check to see if I have lock */
      if ^gbl.user_inited then
         call user$ (gbl.my_user_nr, total_users);
      if psv.shared_area_owner = gbl.my_user_nr then do;
         psv.shared_area_owner = 0;
         call sem$nf (gbl.area_semaphore, status);
         end;
      end;

forget_it:
   if gbl.abort_label_set then
      goto gbl.abort_label;
   call setrc$ (1);
   call exit;

end err$abort_program;
