/* ERR$MAP_CLEARING_CODES.SPL, PrintMaster, Jim Wilcoxson, February 11, 1984  */
/* Maps network clearing code/diagnostic bytes to messages.                   */
/* Copyright (C) 1984 J.E. Wilcoxson, J.L. Hostetler.  All rights reserved.   */
/******************************************************************************/

err$map_clearing_codes : procedure (cc, ccode_msg, cdiag_msg);

%nolist;
%include '*>insert>gbl.ins.spl';
%include '*>entry>primos.ins.spl';
%include '*>entry>err$.ins.spl';
%list;

dcl
   cc like err$es.clearing_codes,
   ccode_msg         char(*) var,
   cdiag_msg         char(*) var;

dcl
   code_bin          bin;

   /* clearing diagnostics are in the right byte */

   code_bin = cc.cdiag;                     /* convert to bin */
   select (code_bin);
      when (cd$mft) cdiag_msg = 'Missing user network segment';
      when (cd$tcr) cdiag_msg = 'Timeout on clear request';
      when (cd$trs) cdiag_msg = 'Timeout on reset request';
      when (cd$tca) cdiag_msg = 'Timeout on call request';
      when (cd$rtd) cdiag_msg = 'route-through server down';
      when (cd$mem) cdiag_msg = 'routed-through not enough memory';
      when (cd$tmo) cdiag_msg = 'routed-through circuit timeout';
      when (cd$lop) cdiag_msg = 'routed-through call request looping';
      when (cd$rte) cdiag_msg = 'route-through protocol error';
      when (cd$nsv) cdiag_msg = 'network server logged out';
      when (cd$lpe) cdiag_msg = 'local procedure error';
      when (cd$dwn) cdiag_msg = 'host is down';
      when (cd$iad) cdiag_msg = 'illegal address';
      when (cd$nru) cdiag_msg = 'no remote users';
      when (cd$bsy) cdiag_msg = 'no vc''s left to accept call with';
      when (cd$snu) cdiag_msg = 'system not up yet (no set time)';
      when (cd$pna) cdiag_msg = 'port not assigned';
      otherwise     cdiag_msg = 'unknown diag (' || cc.cdiag || ')';
      end;

   /* the clearing code keys are setup for comparison with fixed bins,
      so change the clearing code to a fixed bin in the left byte */

   code_bin = cc.ccode * 256;
   select (code_bin);
      when (cc$iad) ccode_msg = 'illegal or unknown address';
      when (cc$nob) ccode_msg = 'not obtainable';
      when (cc$net) ccode_msg = 'network congestion';
      when (cc$lpe) ccode_msg = 'local procedure error';
      when (cc$bar) ccode_msg = 'access barred';
      when (cc$bad) ccode_msg = 'invalid call';
      when (cc$rrc) ccode_msg = 'callee refuses collect call';
      when (cc$rpe) ccode_msg = 'remote procedure error';
      when (cc$dwn) ccode_msg = 'dte out of order';
      when (cc$bsy) ccode_msg = 'dte busy';
      when (cc$clr) ccode_msg = 'dte clearing';
      otherwise     ccode_msg = 'unknown code (' || cc.ccode || ')';
      end;

end err$map_clearing_codes;
