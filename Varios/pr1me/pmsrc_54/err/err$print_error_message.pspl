/* ERR$PRINT_ERROR_MESSAGE.SPL, PrintMaster, Jim Wilcoxson, August 19, 1983   */
/* Prints error messages for current error message.                           */
/* Can be called by any error handler (in case it doesn't know what to do).   */
/* Copyright (C) 1984 J.E. Wilcoxson, J.L. Hostetler.  All rights reserved.   */
/******************************************************************************/

err$print_error_message : procedure;

%nolist;
%include '*>insert>gbl.ins.spl';
%include '*>insert>err.ins.spl';
%include '*>entry>primos.ins.spl';
%include '*>entry>err$display_error.ins.spl';
%include '*>entry>err$map_clearing_codes.ins.spl';
%include '*>entry>err$net_error_text.ins.spl';
dcl err$ entry (bin, char(*), bin, bin, bin);

%list;

dcl
   ccode_msg         char(25) var,
   cdiag_msg         char(25) var,
   err_msg           char(50) var,
   err_type          char(10) var,
   bad_error_type    bin,
   status1           bin,
   status2           bin;


   select (err$es.type);
      when (err$no_et) ;

      when (err$primos_et) do;
         if err$es.warning then
            err_type = 'warning';
         else
            err_type = 'error';
         call err$display_error ('Primos '||err_type||' - '
                                  ||err$es.system_message
                                  ||' - occurred in '||err$es.subr);
         call display_user_message;
         end;

      when (err$network_et) do;
         call err$display_error ('Network error - '||err$es.system_message
                                  ||' - detected in '||err$es.subr);
         call err$net_error_text (err$es.status1, err_msg);
         call err$display_error ('   VC status is "'||err_msg||'"');
         if err$es.status2 ^= 0 then do;
            call err$net_error_text (err$es.status2, err_msg);
            call err$display_error ('  Buffer status is "'||err_msg||'"');
            end;
         if string(err$es.clearing_codes) ^= '0'b then do;
            call err$map_clearing_codes (err$es.clearing_codes, ccode_msg,
                                         cdiag_msg);
            call err$display_error ('  Clearing code is "'||ccode_msg||
                                    '"');
            call err$display_error ('  Clearing diag is "'||cdiag_msg||
                                    '"');
            end;
         call display_user_message;
         end;

      when (err$coding_et)
         call err$display_error ('Coding error - '||err$es.user_message
                                  ||' - detected in '||err$es.subr);

      when (err$user_et)
         if length (err$es.user_message) ^= 0 then
            call err$display_error ((err$es.user_message));

      otherwise do;
         bad_error_type = err$es.type;
         err$es.type = err$no_et;           /* prevents recursive error */
         call err$ (err$coding_et,
                    'bad error key is '||bad_error_type, 0, 0, 0);
         end;
      end;

   /* now, a kludge to cause to comoutput buffer to be written to disk */

   if gbl.I_am_monitor then
      call cp$ ('COMO -PAUSE;COMO -CONTINUE', status1, status2);


   display_user_message : procedure;

      if length (err$es.user_message) ^= 0 then
         call err$display_error ('   (' || err$es.user_message || ')');

   end display_user_message;

end err$print_error_message;
