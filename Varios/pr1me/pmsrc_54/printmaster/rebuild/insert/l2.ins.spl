/* L2.INS.SPL, PrintMaster, Jeff Hostetler, March 6, 1984                     */
/* Common used by Line oriented level 2 (L2) procedures.                      */
/* NOTE:  Variables in L2 structure may be referenced by device driver L3$    */
/*        procedure, but may only be set by L2 routines.                      */
/* Copyright (C) 1984 J.E. Wilcoxson, J.L. Hostetler.  All rights reserved.   */
/******************************************************************************/

%include '*>insert>l2$keys.ins.spl';

%replace
   l2$max_hdr_line   by 122,  /* chars */   /* normal page width - length of page string */
   l2$mark_size      by  78,  /* wds */     /* DOES include length wd */
   l2$max_letter_width by 32, /* chars */   /* in big letter file */

   /* print modes */

   l2$no_fmt_mode    by 0,
   l2$ftn_mode       by 1,
   l2$paged_mode     by 2,
   l2$binary_mode    by 3,

   /* Values for PASD (Pause, Abort, Suspend, Drop) L2 driver. */

   l2$nothing_pasd            by 0,
   l2$abort_pasd              by 1,
   l2$drop_copy_pasd          by 2,
   l2$drop_job_pasd           by 3,
   l2$pause_pasd              by 4,
   l2$suspend_pasd            by 5;

   /* device types indicate low-level procedure to use for device I/O */

%replace
   l2$unknown_dt        by 0,
   l2$parallel_dt       by 1,               /* use T$LMPC */
   l2$versatec_dt       by 2,               /* use T$VG */
   l2$amlc_dt           by 3,               /* use T$AMLC */
   l2$terminal_dt       by 4,               /* use TNOUA */
   l2$centronics_dt     by 5,               /* use ASR command and TNOUA */
   l2$magtape_dt        by 6,               /* use T$MT */
   l2$file_dt           by 7,               /* use PRWF$$ */
   l2$network_dt        by 8;               /* use IPCF (X$xxxx) */

%replace
   /* keys for calls to level 2 accounting procedure */
   l2$page     by 1,
   l2$eoj      by 2,

   /* return codes for l3 drivers */

   l2$unrecognized_func_rc    by 11111,
   l2$func_handled_rc         by 11112,
   l2$func_not_handled_rc     by 11113,

   /* key for calls to l2$scan_print_line */

   l2$noop_key by 0,
   l2$notrim_key by 0,
   l2$nopad_key by 0,
   l2$trim_key by -32768,
   l2$pad_key  by  16384,
   l2$invalid_scan_key by -1;

dcl
   1  l2$static_external static external,
   2  l2,
      3  device_status           bin,       /* printing or paused */
      3  device_type             bin,       /* routine to use for I/O */
      3  l3_driver               entry (bin, char(*), bin)
                                 returns (bin) variable,
      3  accounting              entry (bin, bin) variable,
      3  ignore_next_eject    bit aligned,  /* reset after any device output */
      3  suppress_output      bit aligned,  /* don't send anything to device */

      3  print_line_len          bin,
      3  pc_mark,
         4  mark_size            bin,       /* in words, including mark_size */
         4  mark_type            bin,       /* always 1 for now */
         4  print_mode           bin,       /* nofmt, FTN, paged */
         4  print_file_position  bin(31),   /* wordno of current line or page */
         4  paper_pos            bin,       /* line number printer should be on */
         4  first_print_pos      bin,       /* index of first char in line on */
                                            /* page (this is non-zero only if */
                                            /* the line contains a character */
                                            /* which causes a page eject) */
         4  paged_mode_counters,
            5  pm_chars_per_line             bin,     /* for "Page #" string */
            5  pm_lines_per_page             bin,     /* nr of text lines in paged mode */
            5  pm_lines_printed_this_page    bin,     /* nr of text lines printed so far */
            5  pm_last_page_nr_printed       bin(31),
         4  paged_and_nofmt_mode_counters,
            5  last_line_nr_printed          bin(31),
         4  total_pages_printed              bin(31), /*in job */
         4  page_header_line     char(l2$max_hdr_line) var,
      3  request_info,
         4  pasd_action          bin,       /* nothing, pause, abort, suspend,
                                            /* drop job, drop copy */
         4  pasd_page_count      bin(31),   /* pages left until above action */
         4  advance_pc_save      bin(31),   /* page mark when advance started */
         4  advance_page_count   bin(31),   /* pages left before enabling output */
         4  first_alignment_page bin(31),   /* page each stop/start will go to*/
         4  last_alignment_page  bin(31),   /* last page to align */
      3  line_numbers         bit aligned,
      3  no_header            bit aligned,
      3  wrap_around_enabled  bit aligned,
      3  suppress_accounting  bit aligned,  /* accounting calls are NOP */
      3  in_align_mode        bit aligned,
      3  need_to_realign      bit aligned,
      3  quiet                bit aligned,  /* don't print big messages */
      3  banner_printed       bit aligned,  /* true if banner printed */
      3  big_letters (160:255),             /* letter array (space to del) */
         4  maxwidth    bin,                /* max width any line in letter */
         4  firstline   ptr,                /* ptr to first line */

/* Communications area between level 2 and level 3 line oriented procedures.
   Level 3 drivers are allowed to set variables in this area. */

   3  l23,
      4  func_implemented (l2$first_device_key:l2$last_device_key) bit aligned,
      4  form_characteristics,
         5  chars_per_line       bin,       /* physical nr of chars on a line */
         5  lines_per_page       bin,       /* physical nr of lines on page */
      4  call_status             bin,
      4  max_channel_skip        bin,       /* maximum channel for skip func */
      4  scan_key                bin,       /* for l3$scan_print_line */
      4  pad_char                char;      /* for l3$scan_print_line */

/* End of insert file L2$DEVICE_INFO.INS.SPL                                  */
/******************************************************************************/
