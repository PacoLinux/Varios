/* KWL$.INS.SPL, PrintMaster, Jeff Hostetler, August 15, 1983                 */
/* kwl formats and all associated variables                                   */
/* Copyright (C) 1984 J.E. Wilcoxson, J.L. Hostetler.  All rights reserved.   */
/******************************************************************************/

%replace

   /* legal characters in keywords */
   kwl$valid_kw_begin_chars   by 'ABCDEFGHIJKLMNOPQRSTUVWXYZ.$',
   kwl$valid_kw_chars         by 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._$',

   /* keyword & value sizes */
   kwl$chars_in_kw            by 32,
   kwl$wds_in_kw              by 17,        /* char(32) var */
   kwl$chars_in_value         by 128,
   kwl$wds_in_value           by 65,        /* char(128) var */
   kwl$chars_in_flags         by 16,        /* nr flags visible (1 char/flag) */

   /* required suffix for KWL files */
   kwl$kwl_suffix             by '.KF',
   kwl$text_suffix            by '.TF',

   /* name of SA's list which lists all User Defined kw's */
   kwl$master_kwl             by 'PRINTMASTER*>MASTER',

   /* name of default kwl for all users */
   kwl$system_wide_defaults   by 'PRINTMASTER*>SYSTEM_DEFAULTS',

   /* system defined pathnames */
   /* NOTE:  The first name in this pathname must match "gbl$system_dir" */
   kwl$project_default_dir    by  'PRINTMASTER*>PROJECT_DEFAULTS',
   kwl$user_default_dir       by  'PRINTMASTER*>USER_DEFAULTS',
   kwl$library_directory      by  'PRINTMASTER*>LIBRARY',

   /* Keyword & Value delimiters in Text files */
   kwl$kw_end_marker by ':',                /* <kw>:<flags> */

   /* system defined keywords */

   kw$copies         by 'COPIES',           /* copies requested, for user's */
                                            /* information only !! */
   kw$copies_left    by 'COPIES_LEFT',
   kw$copies_started by 'COPIES_PRINTING',
   kw$copies_completed  by 'COPIES_COMPLETED',
   kw$copyfile       by 'COPYFILE',         /* present if file was moved to */
                                            /* queue */
   kw$defer          by 'DEFER',
   kw$deadline       by 'DEADLINE',
   kw$dt_spooled     by 'DATE_QUEUED',
   kw$dt_modified    by 'DATE_MODIFIED',
   kw$dt_backed_up   by 'DATE_BACKED_UP',
   kw$device_speed   by 'DEVICE_SPEED',
   kw$hold_job       by 'HOLD',             /* until operator releases it */
   kw$inuse_ok       by 'NO_WAIT',          /* print before file closes (RJE) */
   kw$job_id         by 'JOBID',
   kw$tran_id        by 'TRANID',
   kw$job_name       by 'JOB_NAME',         /* user supplied "banner name" */
   kw$parallel_ok    by 'PARALLEL',         /* ok to print multiple copies */
                                            /* on different printers */
   kw$delete_user_file by 'DL',             /* delete after printing */
   kw$notify         by 'NOTIFY',           /* notify user after printing */
   kw$opened         by 'OPENED',           /* job was opened in queue */
   kw$pathname       by 'PATHNAME',         /* where the file came from */
   kw$job_system     by 'JOB_SYSTEM',       /* where file came from */
   kw$priority       by 'PRIORITY',         /* unused at present */
   kw$project_id     by 'PROJECT',
   kw$q_partition    by 'QUEUE',
   kw$q_system       by 'QUEUE_SYSTEM',     /* system job's queue is on */
   kw$resume_ok      by 'SUSPENDABLE',      /* job can be suspended */
   kw$size           by 'SIZE',             /* file size in disk records, */
                                            /* value will be 32767 for open */
                                            /* jobs. */
   kw$size_limit     by 'JOB_SIZE_LIMIT',   /* job size limit for device */
   kw$user_system    by 'USER_SYSTEM',      /* where the user is */
   kw$unique_id      by 'UNIQUE_ID',        /* job's unique id */
   kw$user_id        by 'USER',
   kw$using          by 'USING',

/* expand_info & flags */
   kwl$default_expand_info    by '8000'b4,
   kwl$accept_as_is_ei        by '0000'b4,  /* convert kwl as is */

   kwl$default_flags          by '0000'b4;

dcl
   1  kwl$flags         based,           /* kw flag template */
      2  wp             bit,             /*   write protect */
      2  info           bit,             /*   info only, (non-scheduling) */
      2  abbrev         bit,
      2  mbz            bit(13),

   1  kwl$expand_info   based,           /* expand template */
      2  verify_kws     bit,             /*   check kw's */
      2  special_kwl    bit,             /*   is kwl either: internal list */
                                         /*                 or master list */
      2  expand         bit,             /*   do we expand "using" when seen? */
      2  wp_use_acl     bit,             /*   determines how wp flag is set*/
      2  info_use_skwl  bit,             /*   determines how info flag is set */
      2  mbz            bit(11);

/* Kwl File Status Words */
%replace
   kwl$kwl_incomplete   by    -1,
   kwl$kwl_complete     by     0;

/* Internal KWL Format */
%replace
   kw_entry_size        by 25;

dcl
   1  kw_entry          based,           /* structure of kw entry */
      2  kw             char(kwl$chars_in_kw) var,    /* keyword */
      2  flags          like kwl$flags,
      2  nr_value       bin,
      2  pf_value       pointer,         /* to first value for keyword */
      2  next           pointer;         /* forward link */

%replace
   value_entry_size     by 68;
dcl
   1  value_entry       based,           /* structure of value entry */
      2  value          char(kwl$chars_in_value) var,   /* value */
      2  next           pointer;         /* forward link */

/* conditions & external variables */

dcl
   1  kwl$static_external static external bin,
   1  kwl based (extloc.kwl_address),
      3  kwl_info_bits,
         4  in_edit_kwl             bit,
         4  check_wp_from_ikwl_only bit,    /* To allow operators to change */
                                            /* protected kw's in SPL$CJ. */
         4  mbz                     bit(14),
      3  master_kwl_not_found_printed bit,

   kwl$expand_print_info_cond condition,    /* Print history of files expanded*/
   kwl$expand_continue_cond   condition,    /* Skip this file, continue       */
   kwl$cond_cont_conversion   condition;    /* Error somewhere in the process */
                                            /*   of converting a kwl into     */
                                            /*   internal form.  Skip the     */
                                            /*   current kw (and it's values) */
                                            /*   and continue. */

/* End of insert file KWL$.INS.SPL                                            */
/******************************************************************************/
