/* MSG$.INS.SPL, PrintMaster, Jim Wilcoxson, March 10, 1984                   */
/* Message types, lengths, and structures.                                    */
/* Copyright (C) 1984 J.E. Wilcoxson, J.L. Hostetler.  All rights reserved.   */
/******************************************************************************/

%replace
   mt$reply                      by 1,      /* this is a reply to a message */
   mt$disconnect                 by 2,      /* clear connection please */
   mt$device_state               by 3,      /* device is reporting state */
   mt$disk_list                  by 4,      /* monitor reporting disk list */
   mt$job                        by 5,      /* add/change job */
   mt$device_kwl                 by 6,      /* device reporting kwl */
   mt$startup_device             by 7,      /* request to startup a device */
   mt$device_command             by 8,      /* command request to device */
   mt$start_job                  by 9,      /* request to start a job */
   mt$delete_job                 by 10,     /* request to delete job */
   mt$resend_job                 by 11,     /* master request job info again */
   mt$master_check               by 12,     /* check for another master */
   mt$takeover                   by 13,     /* someone taking over as master */
   mt$device_response            by 14,     /* from device to operator */
   mt$device_status_reply        by 15,     /* from device to operator */
   mt$device_config_reply        by 16,     /* from device to operator */
   mt$device_idle                by 17;     /* from master to device */

   /* in the following, negative lengths indicate variable length messages;
      the absolute value is the length of the fixed part */

%replace
   ml$reply                      by -0,
   ml$disconnect                 by 0,      /* no message */
   ml$device_state               by 48,
   ml$disk_list                  by -2,     /* fixed part only */
   ml$job                        by -0,
   ml$device_kwl                 by -34,
   ml$startup_device             by -34,    /* fixed part only */
   ml$device_command             by -0,
   ml$start_job                  by 44,
   ml$delete_job                 by 8,
   ml$resend_job                 by 44,
   ml$master_check               by -6,     /* fixed part only */
   ml$takeover                   by 0,      /* no message */
   ml$device_response            by -40,    /* 6 + 2 + kwl$chars_in_kw */
   ml$device_status_reply        by -316,   /* fixed part only */
   ml$device_config_reply        by -74,    /* fixed part only */
   ml$device_idle                by 0;

dcl
   alloc_disk_entries      bin,             /* for allocating disk list msg */
   alloc_text_length       bin,             /* for allocating text msg */
   alloc_kwl_size          bin,             /* for allocating kwl messages */
   alloc_status_lines      bin,             /* for allocating status display */
   alloc_status_width      bin,             /* for allocating status display */
   alloc_load_names        bin,             /* for allocating status load names */
   alloc_system_entries    bin;             /* for allocating master check  */

dcl
   /* mt$reply has variable format */

   /* mt$disconnect has no message */

   1  ms$device_state         based,
      2  device_id            char(32) var,
      2  current_job_uid      char(8),
      2  job_completion_code  bin,
      2  job_transaction_id   bin,
      2  state                bin,

   1  ms$disk_list   based,
      2  nr_disks    bin,
      2  disk_info (0:alloc_disk_entries),
         3  system_id      char(32) var,
         3  partition      char(32) var,

   1  ms$job         based,
      2  kwl_buf (alloc_kwl_size)   bin,

   1  ms$device_kwl  based,
      2  device_id                  char(32) var,
      2  kwl_buf (alloc_kwl_size)   bin,

   1  ms$startup_device based,
      2  device_name                char(32) var,
      2  kwl_buf (alloc_kwl_size)   bin,

   1  ms$device_command       based,
      2  kwl_buf (alloc_kwl_size)   bin,

   1  ms$start_job   based,
      2  partition   char(32) var,
      2  job_nr      bin,
      2  uid         char(8),

   1  ms$delete_job  based,
      2  uid         char(8),

   1  ms$resend_job  based,
      2  partition   char(32) var,
      2  job_nr      bin,
      2  uid         char(8),

   1  ms$master_check   based,
      2  time_logged_in                bin(31),  /* in quadseconds */
      2  system_list_size              bin,
      2  system_list(alloc_system_entries) char(32) var,

   /* mt$takeover has no message */

   1  ms$device_response   based,
      2  command_status    bin,
      2  kw                char(32) var,    /* must be = kwl$chars_in_kw! */
      2  message           char(alloc_text_length) var,

   1  ms$device_status_reply based,
      2  version              char(6),      /* of device driver */
      2  device_id            char(32) var,
      2  system_id            char(32) var,
      2  state                bin,
      2  current_job_uid      char(8),
      2  job_queue            char(32) var,
      2  job_id               bin,
      2  job_name             char(32) var,
      2  job_pathname         char(128) var,
      2  copies_requested     bin,
      2  copy_printing        bin,
      2  file_size            bin,          /* disk records */
      2  current_record       bin,          /* disk record */
      2  current_page         bin,
      2  pages_per_minute     bin,
      2  elapsed_print_time   bin,          /* minutes */
      2  estimated_time_left  bin,          /* minutes */
      2  estimated_pages_left bin,
      2  action_when_idle     bin,
      2  action_after_eoj     bin,
      2  reinit_pending       bit aligned,
      2  number_loads_pending bin,
      2  when_loads_pending   bit,          /* ds$do_at_eoj, ds$do_when_idle */
      2  status_display_size,               /* from level 2 driver */
         3  width             bin,          /* width of each line */
         3  lines             bin,          /* number of lines */
      2  status_display (alloc_status_lines) char(alloc_status_width) var,
      2  load_pathnames (alloc_load_names) char(128) var,

   1  ms$device_config_reply based,
      2  version              char(6),
      2  device_id            char(32) var,
      2  system_id            char(32) var,
      2  kwl_buf (alloc_kwl_size) bin;      /* device current keyword list */

   /* ms$device_idle has no message */

/* Internal format of messages (including header and status words) */

%replace
   max_msg_length    by 8000,               /* bytes; ~4K word msg maximum */
   msg_status_length by 6,                  /* bytes */
   msg_hdr_length    by 96;                 /* bytes */

dcl
   alloc_msg_length           bin;          /* for allocating msg buffers */

dcl
   1  msg based,
      2  status,
         3  buffer_status  bin,
         3  buffer_level   bin,
         3  buffer_length  bin,
      2  header,
         3  next              ptr options(short),
         3  msg_type          bin,
         3  msg_length        bin,          /* message length in bytes */
         3  target_system     char(6) var,  /* Primenet system id */
         3  target_id         char(32) var, /* destination id that is */
         3  target_user_nr    bin,
         3  sender_system     char(6) var,
         3  sender_id         char(32) var, /* destination id that is */
         3  sender_user_nr    bin,
      2  user_data            char(alloc_msg_length);

/* End of insert file MSG$.INS.SPL                                            */
/******************************************************************************/
