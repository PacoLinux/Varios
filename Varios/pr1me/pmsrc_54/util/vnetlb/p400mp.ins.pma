* P400MP.INS.PMA, PRINETSRC>VNETLB, OS GROUP, 12/05/79
* PRIMOS MACRO DEFINITIONS
* COPYRIGHT (C) 1980, PRIME COMPUTER, INC., WELLESLEY, MA 02181
       NLST
*
* 11/06/79 SMR ADDED MACROS FOR NEW INH-ENB INSTRUCTIONS
* 11/02/79 NIM MAKE FS= EVEN.
* 03/09/79 DEJ ADDED F_ARG7
* 02/16/79 BLS ADDED PSWKEYS
* 02/12/79 JCF ADDED FCODE,FADDR TO CRS LIST.
*
         NLST
* P400 REGISTER DEFS
*
ABSREG   EQU   '40000
*
PB       EQU   PB%+'14
PBA      EQU   PB+ABSREG+'100
SB       EQU   PB%+'15
LB       EQU   PB%+'16
XB       EQU   PB%+'17
*
DTAR0    EQU   PB%+'23
DTAR0A   EQU   DTAR0+ABSREG+'100
DTAR1    EQU   PB%+'22
DTAR1A   EQU   DTAR1+ABSREG+'100
DTAR2    EQU   PB%+'21
DTAR2A   EQU   DTAR2+ABSREG+'100
DTAR3    EQU   PB%+'20
DTAR3A   EQU   DTAR3+ABSREG+'100
*
KEYS     EQU   PB%+'24
KEYSA    EQU   KEYS+ABSREG+'100
OWNER    EQU   PB%+'25
OWNERA   EQU   OWNER+ABSREG+'100
FCODE    EQU   PB%+'26
FADDR    EQU   PB%+'27
TIMER    EQU   PB%+'30
CPUNUM   EQU   PB%+'33
*
DMACH    EQU   PB%+ABSREG+'40
*
PSWPB    EQU   PB%+ABSREG+'30
PSWKEYS  EQU   PB%+ABSREG+'31
PPA      EQU   PB%+ABSREG+'32
PPB      EQU   PB%+ABSREG+'33
APPTR    EQU   PPB
*
DSWRMA   EQU   PB%+ABSREG+'34
DSWSTAT  EQU   PB%+ABSREG+'35
DSWPB    EQU   PB%+ABSREG+'36
DSWPAR   EQU   PB%+ABSREG+'27
RSVREG   EQU   PB%+ABSREG+'37
*
* STACK-FRAME DEFS
*
F_FLAG   EQU   SB%+0
F_ROOT   EQU   SB%+1
F_PB     EQU   SB%+2
F_PBL    EQU   SB%+3
F_SB     EQU   SB%+4
F_SBL    EQU   SB%+5
F_LB     EQU   SB%+6
F_LBL    EQU   SB%+7
F_KEYS   EQU   SB%+8
F_PBCL   EQU   SB%+9
F_ARG    EQU   SB%+10        DEFAULT LOC OF 1ST ARG
F_ARG1   EQU   F_ARG
F_ARG2   EQU   F_ARG1+3
F_ARG3   EQU   F_ARG2+3
F_ARG4   EQU   F_ARG3+3
F_ARG5   EQU   F_ARG4+3
F_ARG6   EQU   F_ARG5+3
F_ARG7   EQU   F_ARG6+3
*
F_FCODE  EQU   SB%+10
F_FADDR  EQU   SB%+11
F_TMP1   EQU   SB%+10
F_TMP2   EQU   SB%+12
*
* ECB MACRO EXAMPLE:    ECB   START,ARG1,NARGS   ROOT= SN, FS= FRAME-SIZE
*
ECB       MAC    (ROOT=)= 100,(FS=)= 101,(KEYS=)= 102
       XSET  D$=0
       XSET  D$64R='4000
       XSET  D$64V='14000
<0> LSMD:LSTM: (ECB)  <1>,,<2>,<3>
     LSMD: IFN   <100>+0
     LSMD:ORG    <0>+3
    LSMD: DATA   <100>+0
          ENDC
          IFN   <101>+0
          ORG   <0>+2
    LSMD: DATA  <101>+1.AND.'177776
          ENDC
          IFN   D$<102>
          ORG   <0>+8
    LSMD: DATA  D$<102>
          ENDC
          ORG    <0>+9
          ENDM
*
RTS    MAC
 LSMD: DATA  '511
       ENDM
*
STTM   MAC
 LSMD: DATA '510
       ENDM
*
INHL   MAC                   Inhibit this CPU(local inhibit)
<0>  LSMD:  DATA  '1001
       ENDM
*
INHM   MAC                   Inhibit this CPU and obtain mutual exclution lock
<0>  LSMD:  DATA  '1000
       ENDM
*
INHP   MAC                   Inhibit this CPU and obtain process exchange lock
<0>  LSMD:  DATA  '1002
       ENDM
*
INH    MAC
<0>  LSMD:  DATA  '1000
       FAIL
       ENDM
*
ENBL   MAC                   This ENB matches INHL
<0>  LSMD:  DATA  '401
       ENDM
*
ENBM   MAC                   This ENB matches INHM
<0>  LSMD:  DATA  '400
       ENDM
*
ENBP   MAC                   This ENB matches INHP
<0>  LSMD:  DATA  '402
       ENDM
*
ENB    MAC
<0>  LSMD:  DATA  '400
       FAIL
       ENDM
*
*
         LIST
