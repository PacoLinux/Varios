* L2$SCAN_PRINT_LINE.PMA, PrintMaster, Jim Wilcoxson, April 12, 1984
* Scans a print line for form feeds, trims trailing blanks (optional), and
* pad the line to a word boundary (optional)
* Copyright (C) 1984 J.E. Wilcoxson, J.L. Hostetler.  All rights reserved.
*
*
*    call l2$scan_print_line (line, linelen, ffpos, flags, pad_char);
*
*    dcl
*      line          char(linelen),        /* print line (in/out) */
*      linelen       bin,                  /* line length (in/out) */
*      ffpos         bin,                  /* position of form feed (out) */
*      1 flags,                            /* control flags (in) */
*        2 do_trim   bit,                  /* trim trailing blanks */
*        2 do_pad    bit,                  /* pad string to word boundary */
*      pad_char      char;                 /* character to use for padding */
*
*
       SEG
       SYML
       RLIT
       SUBR    L2$SCAN_PRINT_LINE, ECB

L2$SCAN_PRINT_LINE ARGT

       EAFA    0,LINE,*        FAR0 = CHARACTER STRING DATA
       LDA     LINELEN,*       GET CURRENT LINE LENGTH
       XCA
       TLFL    0               PUT IN FLR0

       LDX     =0
       STX     FFPOS,*         DON'T HAVE FORM FEED YET
       STX     LAST_NONBLANK   LAST NONBLANK ON LINE

LOOP   EQU     *
       LDC     0               GET A CHARACTER
       BCEQ    ENDSCN          END OF SCAN
       IRX                     X IS CHARACTER POSITION
       CAS     =R' '           IS THIS A BLANK?
       JMP#    *+2             NO
       JMP#    LOOP            YES
       STX     LAST_NONBLANK   NON-BLANK; SAVE POSITION
       ANA     ='177           IS IT A FORM FEED (DISREGARD PARITY)?
       SUB     ='14
       BNE     LOOP            NOT A FORM FEED

       LDA     FFPOS,*         HAS A FORM FEED ALREADY BEEN SEEN?
       BNE     LOOP            YEP, IGNORE SUBSEQUENT ONES
       STX     FFPOS,*         THIS IS THE FIRST FORM FEED
       JMP     LOOP

ENDSCN EQU     *
       LDA     FLAGS,*
       BGE     NOTRIM          IF TRIMMING BLANKS,
       LDX     LAST_NONBLANK
       STX     LINELEN,*       MODIFY LINE LENGTH

NOTRIM EQU     *
       SAS     2               IF NOT PADDING,
       PRTN                    QUIT

       LDA     LINELEN,*       CURRENT LENGTH
       SAS     16              IF NOT ODD,
       PRTN                    QUIT

       EAFA    0,LINE,*        SETUP FAR AND FLR 0 TO PAD THE STRING
       XCA                     CHANGE CURRENT LENGTH TO LONG INT
       LLS     3               CHANGE FROM BYTES TO BITS
       ALFA    0               ADVANCE FAR0 TO END OF STRING
       LFLI    0,1
       LDA     PAD_CHAR,*      GET PAD CHARACTER (IN LEFT BYTE)
       ICL                     PUT IN RIGHT BYTE
       STC     0               STORE IT
       IRS     LINELEN,*       INCREMENT STRING LENGTH
       PRTN

       DYNM    LINE(3), LINELEN(3), FFPOS(3), FLAGS(3), PAD_CHAR(3)
       DYNM    LAST_NONBLANK

       LINK
ECB    ECB     L2$SCAN_PRINT_LINE,,LINE,5
       END
