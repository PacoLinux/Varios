/* COMM$SERVICE_IPC..SPL, PrintMaster, Jim Wilcoxson, August 5, 1983           */
/* Fetch all messages out of my IPC message queue and place on receive list.  */
/* Copyright (C) 1984 J.E. Wilcoxson, J.L. Hostetler.  All rights reserved.   */
/******************************************************************************/

comm$service_ipc : procedure;

%nolist;
%include '*>insert>gbl.ins.spl';
%include '*>insert>comm.ins.spl';
%include '*>entry>comm$dequeue_ipc_message.ins.spl';
%include '*>entry>comm$destroy_msg.ins.spl';
%include '*>entry>comm$queue_message.ins.spl';
%include '*>entry>comm$xmit.ins.spl';
%include '*>entry>err$.ins.spl';
%include '*>entry>primos.ins.spl';
%list;

dcl
   okay           bit,
   status         bin,
   msgp           ptr;

   do while (comm$dequeue_ipc_message(gbl.my_user_nr, msgp));
      if msgp->msg.target_system = psv.my_system_id
       & (msgp->msg.target_id = gbl.my_id
         | (msgp->msg.target_id = 'user' & msgp->msg.target_user_nr = gbl.my_user_nr)
         | (msgp->msg.target_id = 'master' & gbl.I_am_monitor)) then
         call comm$queue_message (comm.receive_list_bol,
                                  comm.receive_list_eol, msgp);
      else

         /* a message was given to me, but I'm not the correct destination;
            if I am the monitor, route the msg to the correct destination;
            otherwise, ignore the message */

         if gbl.I_am_monitor then
            if comm$xmit (msgp) then ;
            else
               call comm$destroy_msg (msgp);
         else do;
            call err$ (err$log_event_et, 'Message lost?', 0, 0, 0);
            call comm$destroy_msg (msgp);
            end;

      end; /* do while */

end comm$service_ipc;
