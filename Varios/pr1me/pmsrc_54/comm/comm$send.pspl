/* COMM$SEND.SPL, PrintMaster, Jim Wilcoxson, August 5, 1983                  */
/* Send a message.  Returns true if message was sent; this does not mean the  */
/* message has been (or will be) received.                                    */
/* Copyright (C) 1984 J.E. Wilcoxson, J.L. Hostetler.  All rights reserved.   */
/******************************************************************************/

comm$send : procedure (msg_type, target_system, target_id, user_msgp,
                       user_msg_length) returns (bit);

%nolist;
%include '*>insert>gbl.ins.spl';
%include '*>insert>comm.ins.spl';
%include '*>insert>based_vars.ins.spl';
%include '*>entry>err$.ins.spl';
%include '*>entry>primos.ins.spl';
%include '*>entry>comm$create_msg.ins.spl';
%include '*>entry>comm$destroy_msg.ins.spl';
%include '*>entry>comm$xmit.ins.spl';
%list;

dcl
   msg_type          bin,                   /* message type (in) */
   target_system     char(32) var,          /* of target system (in) */
   target_id         char(32) var,          /* of target user (in) */
   user_msgp         ptr,                   /* pointer to message (in) */
   user_msg_length   bin;                   /* length of message (in) */

dcl
   real_target       char(32) var,
   msgp              ptr;                   /* pointer to new message */

   if target_id = 'user' then
      call err$ (err$coding_et, 'Can''t send directly to a user', 0, 0, 0);

   /* validate system name */

   if gbl.I_am_user & length (target_system) ^= 0 then do;
      real_target = translate (trim (target_system, '11'b),
                               uppercase, lowercase);
      if real_target ^= psv.my_system_id then
         call validate_system;
      end;
   else
      real_target = target_system;

   msgp = comm$create_msg (msg_type, real_target, target_id, 0, user_msgp,
                           user_msg_length);
   if comm$xmit (msgp) then
      return (true);

   call comm$destroy_msg (msgp);
   return (false);


validate_system : procedure;

dcl
   status      bin;

   call r$cknt (real_target, status);
   if status ^= 0 then
      call err$ (err$user_et, '"'||target_system||'" is not a known network node.',
                 err$unknown_network_node_ue, 0, 0);

end validate_system;

end comm$send;
