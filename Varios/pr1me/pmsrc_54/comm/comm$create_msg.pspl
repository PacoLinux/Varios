/* COMM$CREATE_MSG.SPL, PrintMaster, Jim Wilcoxson, March 10, 1984            */
/* Creates a message and fills in the header.                                 */
/* Copyright (C) 1984 J.E. Wilcoxson, J.L. Hostetler.  All rights reserved.   */
/******************************************************************************/

comm$create_msg : procedure (msg_type, system_id, user_id, user_nr, user_msgp,
                             user_msg_length) returns (ptr);

%nolist;
%include '*>insert>gbl.ins.spl';
%include '*>insert>comm.ins.spl';
%include '*>entry>err$.ins.spl';
%include '*>entry>gp$.ins.spl';
%include '*>entry>primos.ins.spl';
%list;

dcl
   msg_type    bin,                         /* message type (in) */
   system_id   char(32) var,                /* of target system (in) */
   user_id     char(32) var,                /* of target user (in) */
   user_nr     bin,                         /* of target user (in) */
   user_msgp   ptr,                         /* pointer to message (in) */
   user_msg_length bin;                     /* length of message (in) */

dcl
   msgp                 ptr;                /* pointer to new message */


   if user_msg_length < 0 | user_msg_length > max_msg_length then
      call err$ (err$coding_et, 'Bad message length', 0,0,0);

   alloc_msg_length = user_msg_length;
   allocate msg set(msgp);

   /* fill in the message */

   msgp->msg.buffer_status = maxint;        /* not valid */
   msgp->msg.buffer_level = xt$lv0;         /* level 0 packet */
   msgp->msg.buffer_length = user_msg_length+msg_status_length+msg_hdr_length;

   msgp->msg.next = null;
   msgp->msg.msg_type = msg_type;
   msgp->msg.msg_length = user_msg_length;
   msgp->msg.target_system  = system_id;
   msgp->msg.target_id = user_id;
   msgp->msg.target_user_nr = user_nr;
   msgp->msg.sender_system = psv.my_system_id;
   msgp->msg.sender_user_nr = gbl.my_user_nr;
   msgp->msg.sender_id = gbl.my_id;

   if user_msg_length ^= 0 then
      call gp$copy (user_msgp, addr(msgp->msg.user_data), user_msg_length);
   return (msgp);

end comm$create_msg;
