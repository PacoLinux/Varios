/* KWL$SORT_KWL.SPL, PrintMaster, Jeff Hostetler, March 6, 1984               */
/* Procedure to sort a kwl.                                                   */
/******************************************************************************/

kwl$sort_kwl: proc (p_kwl);

%nolist;
%include '*>insert>gbl.ins.spl';
%include '*>insert>kwl.ins.spl';
%list;

   dcl
      p_kwl       ptr,                      /* (in/out) */

      (p_kw, pp, p_new_kwl, p)  ptr;

   if p_kwl = null then
      return;

   p_new_kwl = p_kwl;
   p_kwl = p_kwl->kw_entry.next;
   p_new_kwl->kw_entry.next = null;

   do while (p_kwl ^= null);
      if p_kwl->kw_entry.kw < p_new_kwl->kw_entry.kw then do;
         p = p_kwl->kw_entry.next;
         p_kwl->kw_entry.next = p_new_kwl;
         p_new_kwl = p_kwl;
         p_kwl = p;
         end;
      else do;
         pp = p_new_kwl;
         do p_kw = p_new_kwl->kw_entry.next repeat p_kw->kw_entry.next while (p_kw ^= null);
            if p_kwl->kw_entry.kw < p_kw->kw_entry.kw then do;
               p = p_kwl->kw_entry.next;
               p_kwl->kw_entry.next = p_kw;
               pp->kw_entry.next = p_kwl;
               p_kwl = p;
               goto end_of_else_do;
               end;
            pp = p_kw;
            end;
         p = p_kwl->kw_entry.next;
         p_kwl->kw_entry.next = null;
         pp->kw_entry.next = p_kwl;
         p_kwl = p;

end_of_else_do:
         end;
      end;

   p_kwl = p_new_kwl;
   return;
   end kwl$sort_kwl;
