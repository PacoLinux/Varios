/* CPL$COMO_STATE.SPL, PrintMaster, Jeff Hostetler, September 29, 1984        */
/* Procedure to enable/disable TTY output and to return the old state.        */
/* Copyright (C) 1984 J.E. Wilcoxson, J.L. Hostetler.  All rights reserved.   */
/******************************************************************************/

main: procedure (cl, com_status);

%nolist;
%include '*>insert>gbl.ins.spl';
%include '*>entry>err$.ins.spl';
%include '*>entry>gp$.ins.spl';
%include '*>entry>primos.ins.spl';
%list;

   dcl
      cl          char(max_cl) var,
      com_status  bin,

      old_setting          bin,
      1  struc,
         2  set_given      bit(1) aligned,
         2  setting        bin(31);

   call parse_cl;
   com_status = gp$como_state (bin(struc.setting,15));
   return;

error_exit:
   com_status = e$barg;
   return;

%page;
/* cpl$como_state.parse_cl, PrintMaster, Jeff Hostetler, September 29, 1984   */
/******************************************************************************/

   parse_cl: proc;

      %replace
         cl$pix_keys    by '000A'b4,        /* keep quotes, pl1, print */
         caller_name    by 'cpl$como_state',
         pixel_size     by 22;

      dcl
         pix_index      bin,
         bad_index      bin,
         ns_code        bin,
         pic char(pixel_size) var static init ('-s, -set dec = -1; end');

      call cl$pix (cl$pix_keys, caller_name, addr (pic), pixel_size,
                   cl, addr(struc), pix_index, bad_index, ns_code, null);
      if ns_code ^= 0 then
         call error_ ('');

      return;
      end parse_cl;

%page;
/* cpl$como_state.error_, PrintMaster, Jeff Hostetler, September 29, 1984     */
/******************************************************************************/

   error_: proc (msg);

      dcl
         msg   char(*) var;

      if length (msg) ^= 0 then
         call ioa$er ('%v%.', -1, msg);
      goto error_exit;
      end error_;

end main;
