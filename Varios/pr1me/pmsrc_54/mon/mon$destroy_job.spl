/* MON$DESTROY_JOB.SPL, PrintMaster, Jim Wilcoxson, January 18, 1984          */
/* Destroys a job entry (and associated data structures e.g., keyword lists)  */
/* Copyright (C) 1984 J.E. Wilcoxson, J.L. Hostetler.  All rights reserved.   */
/******************************************************************************/

mon$destroy_job : procedure (jep);

%nolist;
%include '*>insert>gbl_ext.ins.spl';
%include '*>insert>mon.ins.spl';
%include '*>entry>kwl$.ins.spl';
%list;

dcl
   alloc_path_length   bin,                 /* length of pathname to free */
   based_path char(alloc_path_length) var based,  /* template for free */
   (p,q)    ptr,
   jep      ptr;                            /* job entry pointer (in/out) */


   /* find job on the job list */

   q = null;
   do p = mon.job_bol repeat p->je.next while (p ^= null);
      if p = jep then
         leave;
      else
         q = p;
      end;

   /* if job was on the list, remove it */

   if p ^= null then
      if q = null then
         mon.job_bol = p->je.next;
      else
         q->je.next = p->je.next;

   /* destroy all job data structures */

   call kwl$destroy_kwl (jep->je.kwlp);
   if jep->je.pathname_ptr ^= null then do;
      alloc_path_length = length (jep->je.pathname_ptr->based_path);
      free jep->je.pathname_ptr->based_path;
      end;
   free jep->je;
   jep = null;

end mon$destroy_job;
