/* MON$RESEND_JOB.SPL, PrintMaster, Jim Wilcoxson, January 19, 1984           */
/* Re-queues a job causing it to be sent to the master later.                 */
/* Copyright (C) 1984 J.E. Wilcoxson, J.L. Hostetler.  All rights reserved.   */
/******************************************************************************/

mon$resend_job : procedure (partition, job_id, uid);

%nolist;
%include '*>insert>gbl_ext.ins.spl';
%include '*>insert>mon.ins.spl';
%include '*>entry>err$.ins.spl';
%include '*>entry>primos.ins.spl';
%include '*>entry>spl$.ins.spl';
%include '*>entry>mon$create_job.ins.spl';
%include '*>entry>mon$queue_job.ins.spl';
%list;

dcl
   partition   char(32) var,                /* partition the queue is on (in) */
   job_id      bin,                         /* job number (in) */
   uid         char(8);                     /* unique id (in) */

dcl
   dt                bin(31),               /* current date/time */
   kwlp              ptr,                   /* keyword list pointer */
   jep               ptr,                   /* job entry pointer */
   kwp               ptr;

   on condition (err$condition_after_msg)
      goto end_resend;

   /* spl$lj always signals when errors occur since the monitor has
      already been initialized */

   if spl$lj (partition, job_id, kwlp, false) then do;
      jep = mon$create_job (kwlp);          /* convert to job entry */
      dt = date$();
      if jep->je.deferred_date < dt+resend_interval then
         jep->je.deferred_date = dt+resend_interval;
      call mon$queue_job (jep);
      end;

end_resend:
   return;

end mon$resend_job;
