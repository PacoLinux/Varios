.dn  {{Keyword Lists}}
A keyword list is a group of keywords, along with their values and
flags.  The list can come from keywords on the command line, from
keyword files, or from system programs.  There is no limit on the
number of keywords in a keyword list.  Keyword lists are ideal for
representing jobs and devices, since keywords can be added and
deleted dynamically, and any kind of information can be stored in
keyword values.
.dd  {{What are keyword lists used for?}}
Keyword lists are used in PrintMaster to represent print jobs and
printer devices.  A job's keyword list has all of the information
about the job, such as: the pathname of the file to print, file size,
date last modified, user spooling the file, and the system the file
was spooled from.  Device keyword lists have information describing
the Primos device used (PR0, PR1, etc.), whether the device has
lowercase characters, and the current form type and attributes.  Each
piece of information is associated with a particular keyword; the
job's pathname is the value of the keyword -PATHNAME; the device's
current form type is the value of the keyword -FORM.  Keyword lists
are also used to determine which devices jobs can be printed on.  A
job's keyword list must {{match}} a device's keyword list before it
can be printed on that device.  The matching process is explained
later.
.dn  {{What do keyword lists look like?}}
PrintMaster keyword lists have three representations: command line
format is used on Primos command lines; text format is used when
keyword lists are printed; and disk format is used to store keyword
lists efficiently in disk files.
.dd  {{Keyword Lists - Command Line Format}}
This is the most familiar form for keyword lists, and the simplest.
Keywords are listed one after another in command line format.  Each
keyword's name, flags, and values can be specified.  Flags are only
used by the System Administrator when editing the master keyword
file; it is an error for users to put flags on keywords.  Some
examples of keyword lists in command line format:

    -form white -ftn -device_name pr0 pr1 pr2 -copyfile

    -select_jobs -form stock -user jimmy -select_kw -jobid -job_name

    -job 1 2 3 -notify now -dl -at Kansas

    -priority:ip 10 -form:p stock blank standard default -copyfile

In the first example, the -FORM keyword has one value, WHITE;
-DEVICE_NAME has three values: PR0, PR1, and PR2;  the -COPYFILE
keyword has no values associated with it.  The last example shows how
flags are put on keywords in command line format.  Again, these can
only be used by the System Administrator when editing the master
keyword file.  Since Primos treats some characters special on the
command line, such as the comma and space, a value may have to be
quoted with single quotes if it contains punctuation marks.  These
quotes are not part of the value.  If quotes are not used, all
letters in the value are changed to uppercase.  So, -FORM WHITE is
the same as -form 'WHITE', but not the same as -FORM 'white'.

In command line format abbreviations may be used for the name of the
keyword.  For example, if -NF is a valid abbreviation for the keyword
-NO_FORMAT and -AS is an abbreviation for -JOB_NAME then the command
line:

    -as my_report -nf

would be converted to:

    -job_name my_report -no_format

(See KEYWORD ABBREVIATIONS for more information.)
.dn  {{Keyword Lists - Text Format}}
Keyword lists are printed in text format when they are listed for
inspection or editing.  Many programs, such as the keyword file
editor, queue lister, and device command program, print keyword lists
in this form.  It is similar to command line format, except keywords
and values are listed on separate lines rather than one after
another.  Flags are listed immediately following the keyword, as in
the command line format.  An example of a keyword list in text format
is:

   -CARRIAGE_TAPE standard tape
   -WRAP:i
   -CHARS_PER_LINE:i 132
   -FORM:p
   XXSL01
   SESL01
   PRSL01
   VMSL01
   SSSL01
   -LEFT_EDGE_LINEUP -8
   -LINES_PER_INCH:i 6
   -LINES_PER_PAGE 66

This keyword list has seven keywords.  Three (-WRAP, -FORM, and
-LINES_PER_INCH) have flags on them.  All but -WRAP have values.  The
first value may be listed immediately after the keyword (and one
space) or on the next line.  The entire line (except for the keyword)
is taken as the value.  For example, the keyword -CARRIAGE_TAPE only
has one value, standard tape.  In command line format, this would be
considered two separate values, since it is not quoted.  The second
and subsequent values are listed on the following lines, one per line,
and {{do not}} begin with a dash. The -FORM keyword in this example
has five values.  If a keyword list in TEXT format is displayed on the
terminal, the information keywords are printed first followed by the
non-information or scheduling keywords.  Each group is sorted
alphabetically.  Keywords are indented a few spaces and any values
appearing on separate lines are indented three spaces more than the
keywords.  However, when a keyword list in TEXT format is written to a
file, the order is not changed and no indenting is done.  Files
containing keyword lists in TEXT format always have the .TF suffix.
.dn  {{Keyword Lists - Disk Format}}
Keyword lists are stored on disk in a format that uses little space
and is easy (for computers) to access.  Keyword files are stored this
way.  The actual format is not important, but it is important that
programs such as ED are not used to modify them, as they will make
the file unreadable.  Only the PrintMaster keyword file editor EKF
can modify keyword lists in disk format.  Job keyword lists in the
print queue are also stored in disk format.  When keyword lists in
DISK format are written to a file, the filename always has the .KF
suffix.
.du
.dn  {{Matching Keyword Lists}}
Earlier it was mentioned that the job and device keyword lists must
match for a job to be printed on a device.  This means that all of
the job's scheduling keywords (not information-only; remember the :i
flag) are in the device's keyword list, and the corresponding values
also match.  Values match if either the device or job keyword has no
values, or one of the job keyword's values is listed among the device
keyword's values.  For example, a job with the keyword -FORM (no
values) would match any device with the -FORM keyword, no matter what
values (if any) it had; a job with the keyword -FORM STOCK would
match a device with -FORM (no values), -FORM STOCK, or -FORM STOCK
LARGE DEFAULT (3 values);  a job with the keyword -FORM STOCK LARGE
(2 values) would match a device with -FORM (no values) or -FORM with
either STOCK or LARGE among its values.  It is important to realize
that keyword list matching is not symmetric, and that job keyword
lists have to match device keyword lists, not the reverse.  For
example, if a device has the keyword -FORM ABC DEF (2 values) and a
job doesn't have the -FORM keyword, the job matches the device.  But,
if the job has the keyword -FORM ABC DEF and the device doesn't have
the -FORM keyword, the job doesn't match the device; the device DOES
match the job, but this has no practical use.  Keyword list matching
is an important feature used to implement PrintMaster's job
scheduling flexibility.
.dn  {{Editing Keyword Lists}}
Another operation performed on keyword lists, besides matching, is
editing.  This is where one keyword list called the edit list is used
to modify, or edit, another keyword list called the original list.
The edit list is processed left to right, and each edit keyword is
either inserted in or removed from the original list.
.dd  {{Inserting Keywords into a Keyword List}}
If the keyword in the edit keyword list was already in the original
list, it is removed first, along with all values.  The edit keyword
and its values are then added to the original list.  Here are some
examples of how keyword list editing works:

    Original List           Edit List        Result

    -STATUS -TRASH          -FORM ABC        -STATUS -TRASH -FORM ABC
    -FORM JUNK MAIL -TRASH  -FORM ABC        -TRASH -FORM ABC
    -FORM JUNK MAIL -TRASH  -FORM A B C      -TRASH -FORM A B C
    -AT SYS1 -FORM X Y      -FORM A B C      -AT SYS1 -FORM A B C
    -FTN -NO_HEADER         -FORM            -FTN -NO_HEADER -FORM
    -FORM XYZ -FTN          -FORM            -FTN -FORM

.dn  {{Removing Keywords from a Keyword List}}
To remove keywords from a keyword list, a special form of the keyword
is used in the edit list: the dash is followed by a carot (^), then
the keyword name.  When this is used, the keyword and all of its
values are removed from the keyword list.  For example,

     Original List        Edit List                Result

    -CHECK -NO_FORMAT    -DL -^CHECK -^WRAP       -DL -NO_FORMAT
    -CHECK STUB -FTN     -FORM ABC -^CHECK -XYZ   -FORM ABC -XYZ -FTN

No error message is printed if the keyword to be deleted is not found
in the original list.  In the last example, -CHECK and its values
have been removed.  The keywords -FORM and -XYZ were inserted, since
they did not have a carot following the dash.
.dn  {{Write-protected Keywords}}
The keyword flag :p means a keyword is protected.  This prevents
modification of the keyword during editing.  If the original keyword
list is -FORM:p ABC -FILL, and the edit list is -^FORM or -FORM DEF,
an error will occur, since the -FORM keyword is protected and cannot
be changed or deleted.  Unfortunately, an error is also printed if
-FORM ABC is used to edit -STATE -FORM:p ABC -WAIT, even though the
keyword is not being removed, and the value is the same.  To make
this less of a problem, it is okay to {{change}} a protected keyword
that has no values, but it cannot be {{deleted}}.  This allows a
protected keyword to be specified more than once, something that is
important when system, project, and user default keyword files are
used.  These files are discussed in the next section.  Remember, the
System Administrator sets keyword flags in the master keyword file;
users cannot unprotect a protected keyword.
.du 2
