.dn  {{Creating New Keywords}}
Some installations will want to take full advantage of the
flexibility of the keyword system and create their own site-defined
keywords.  These can be used to control job scheduling and for
operator or user-written device driver information.  For example,
suppose a site wants to print all payroll print jobs, then all budget
jobs in two separate batches.  A new keyword CLASS is created to
represent the job's classification, either BUDGET or PAYROLL.  First,
the keyword is added to the master keyword file:

    OK, ekf -master -edit -class
    [Edit Keyword File 2.0]
    OK,

Since this will be a scheduling keyword, no :i flag followed -CLASS.
Now, when a payroll user adds a new print job, he uses the following
command:

    OK, apj <dskb>pay>pay_report -class payroll
    [Add Print Job 2.0]
    Job 15 PAY_REPORT added to queue SYS.
    OK,

Budget users would use:

    OK, apj <dskc>budget>budget_report -class budget
    [Add Print Job 2.0]
    Job 16 BUDGET_REPORT added to queue SYS.
    OK,

The payroll report will now only print on a device with the keyword
-CLASS and the value PAYROLL.  This could be part of a form type
mounted by the System Operator with the DC -LOAD command, or the
System Operator could insert this keyword directly with the DC
command:

    OK, dc pr0 -edit -class payroll
    [Device Command 2.0]
    OK,

This would allow device PR0 to print jobs in the PAYROLL class (or
jobs with no -CLASS keyword).  It is important to realize that jobs
without the -CLASS keyword would also be printed on PR0.  Usually,
this type of keyword, along with -FORM and -AT, will have to be put
in the system, project, or user default keyword files to insure, for
example, that {{only}} payroll jobs would be printed if the device
had the -CLASS PAYROLL attribute.  See the section on job scheduling
for a complete explanation of how job and device keyword lists are
matched.
.dn  {{Creating new keyword abbreviations}}

Abbreviations for commonly used keywords may be created by the System
Adminstrator.  An abbreviation is simply a keyword, with one value,
that may be used in place of another keyword when entering a keyword
list in command line format.  The value of an abbreviation is the
name of the keyword that will be inserted whenever the abbreviation is
used.  Abbreviations are created in the master keyword file and are
designated by the :a flag.  The following sequence shows how to create
abbreviations for the keywords:  -JOB_NAME, -LINE_NUMBERS, and
-COPIES:

    OK, ekf -m -edit
    [Edit Keyword File 3.2]
    > -as:a job_name
    > -ln:a line_numbers
    > -c:a copies
    >
    OK,

Note, EKF does not check to see if the value given is a valid keyword;
instead, the value is checked when the abbreviation is expanded.

The following abbreviations have already been included in the master
keyword file:

    Abbreviation     Keyword
    -AS              -JOB_NAME
    -CF              -COPYFILE
    -CP              -COPIES
    -FM              -FORM
    -LN              -LINE_NUMBERS
    -NB              -NO_BANNER
    -NF              -NO_FORMAT
    -PH              -PAGE_HEADER
    -SB              -SINGLE_BANNER
