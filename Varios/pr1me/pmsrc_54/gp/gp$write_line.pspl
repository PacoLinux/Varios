/* GP$WRITE_LINE.SPL, PrintMaster, Jim Wilcoxson, January 19, 1984            */
/* Writes a varying character string to a (lined) file.                       */
/* Copyright (C) 1984 J.E. Wilcoxson, J.L. Hostetler.  All rights reserved.   */
/******************************************************************************/

gp$write_line : procedure (unit, line);

%nolist;
%include '*>insert>gbl.ins.spl';
%include '*>insert>based_vars.ins.spl';
%include '*>entry>primos.ins.spl';
%include '*>entry>err$.ins.spl';
%list;

dcl
   unit        bin,                         /* file unit (in) */
   line        char(*) var;                 /* line to write (in) */

dcl
   line_len    bin,                         /* length in bytes of line */
   save_ch     char,                        /* place to maybe hold last char */
   nr_words    bin,                         /* number of words to write */
   status      bin;                         /* Primos return code */

   if unit = 0 then do;                     /* output to terminal */
      call ioa$ ('%v%.', -1, line);
      return;
      end;

   /* if there are an odd number of bytes to write, replace last byte
      with a space then put back original character */

   line_len = length(line);
   nr_words = divide (line_len+1, 2, 15);
   save_ch = ' ';
   if nr_words*2 ^= line_len then do;       /* odd length line */
      save_ch = substr (addr(line)->bvs.chars, line_len+1, 1);
      substr (addr(line)->bvs.chars, line_len+1, 1) = ' ';
      end;

   call wtlin$ (unit, addr(line)->bvs.chars, nr_words, status);
   if save_ch ^= ' ' then
      substr (addr(line)->bvs.chars, line_len+1, 1) = save_ch;
   if status ^= 0 then
      call err$ (err$primos_et, 'Writing to unit ' || unit, status, 0, 0);

end gp$write_line;
