/* GP$GET_DTM.SPL, PrintMaster, Jeff Hostetler, December 16, 1983             */
/* Procedure to get the date/time last modified and last backed up.           */
/* NOTE: Procedure will abort if the file does not exist or pathname is bad.  */
/* Copyright (C) 1984 J.E. Wilcoxson, J.L. Hostetler.  All rights reserved.   */
/******************************************************************************/

gp$get_dtm: proc (path, dtm_mod, dtm_bk);

%nolist;
%include '*>insert>gbl.ins.spl';
%Include '*>insert>based_vars.ins.spl';
%Include '*>entry>gp$close.ins.spl';
%Include '*>entry>gp$open_curdir.ins.spl';
%include '*>entry>err$.ins.spl';
%include '*>entry>primos.ins.spl';
%list;

dcl
   path                 char(*) var,
   (dtm_mod, dtm_bk)    char(28) var,

   is_path              bit,
   status               bin,
   entry_buf            like fs$entry_format,
   unit                 bin,
   type                 bin,
   dow                  bin;

   unit = 0;
   on condition (CLEANUP$)
      begin;
      call gp$close (unit);
      call at$hom (status);
      end;

   is_path = (index (path, '>') ^= 0);
   if is_path then do;
      call tatch$(path$(path), status);
      if status ^= 0 then
         call err$ (err$primos_et, 'Attaching to ' || xpswd$(path), status, 0, 0);
      end;

   unit = gp$open_curdir ();
   call ent$rd (unit, entry$(path), addr(entry_buf), fs$wds_in_file_entry, status);
   if status ^= 0 then
      call err$ (err$primos_et, 'Reading entry ' || entry$(path), status, 0, 0);

   call gp$close (unit);

   call cv$fdv (entry_buf.dtm_mod, dow, dtm_mod);
   call cv$fdv (entry_buf.dtm_backed_up, dow, dtm_bk);

end gp$get_dtm;
