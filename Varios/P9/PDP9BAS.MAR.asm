	.TITLE	PDP-9 BASIC INTERPRETER
	.NAME	BASO
	.STITL	DEFINITIONS
*
*	DEFINITION -- PSEUDO OPS
*
RET	.OPDEF	JMP+20000	RETURN -- JMP **;X
*
*	DEFINITION -- PROGRAM CONSTANTS
*
	.HEAD	S		S FOR STORAGE
UNIT	.EQU	1		ARITHMETIC PRECISION
*
*	DEFINITION -- AUTO INDEX REGISTERS
*
	.HEAD	T		T FOR TTY
TTYX	.EQU	10		XR=0 USED FOR TTY I/O
CHRX	.EQU	11		XR=1 GLOBAL INPUT POINTER
SBUF	.EQU	17		XR=7 USED FOR SOURCE BUFFER POINTER
	.HEAD	O,P,I,T
X	.EQU	12		LOCAL
Y	.EQU	13		LOCAL
Z	.EQU	14		LOCAL
*
*	DEFINITION -- USEFUL MACROS
*
SOS	.DEFINT			SUBSTRACT ONE FROM STORAGE
	CLC			C(AC) := 777777
	TAD	#1		C(AC) := C(MEM)-1
	DAC	#1		C(MEM) := C(AC)
	.ENDM	SOS
*
*	PROGRAM ORIGIN
*
*	.LOC	100
	.LOC	16000-1
	JMP	SUP		A CONVENIENT RESTART LOCATION
	.LOC	16000-4227
	.HEAD	T		T FOR TTY
	.STITL	TTY PRINT ROUTINE -- PRINT
*
*	THIS ROUTINE PRINTS A SINGLE CHARACTER TO THE TTY.
*
*	ENTER WITH CHARACTER IN R-AC.
*
*	DEFINITION -- 'PRINT' -- PRINT CHARACTER MACRO
*
PRINT	.DEFIN
	JMS	T$PRINT		CALL THE PRINT ROUTINE
	.ENDM	PRINT
*
*	T$PRINT
*
PRINT	0
	TSF			***
	JMP	.-1		* PRINT THE CHARACTER WHEN THE TTY IS READY
	TLS			***
	RET	PRINT		RETURN

	.STITL MESSAGE PRINTING ROUTINE -- MESS
*
*	THIS ROUTINE IS CALLED TO PRINT A MESSAGE ON THE TTY.
*
*	ENTER WITH THE MESSAGE FOLLOWING THE CALL. THE END OF THE
*	MESSAGE IS FLAGGED WITH A WORD OF -1.
*
*	DEFINITION -- 'MESS' --MESSAGE MACRO
*
MESS	.DEFIN			<MESSAGE>
	JMS	T$MESS		CALL THE MESSAGE ROUTINE
	.TXT	\#1\
	.IFE	'#2','CRLF',1
	.DATA	15,12		GIVE CARRIAGE RETURN/LINE-FEED IF WANTED
	777777			FLAG THE END OF THE MESSAGE
	.ENDM	MESS
*
*	T$MESS
*
MESS	0
	LAC	MESS		***
	DAC	TTYX		* SET UP POINTER TO MESSAGE
	LAC	MESS,X		***
M$A	...
	$AD	NONE		CHECK FOR END OF MESSAGE (EOM) FLAG
	JMP	M$X		EOM -- RETURN
	PRINT			PRINT THE CHARACTER
	LAC	TTYX,X		FETCH THE NEXT CHARACTER
	JMP	M$A		AND LOOP
M$X	...
	LAC	FILL		SEND A FILL
	PRINT			TO DELAY A LITTLE
	RET	TTYX,X		THEN RETURN

	.STITL	TTY READ ROUTINE -- READ
*
*	THIS ROUTINE IS CALLED TO READ A LINE FROM THE TTY.
*
*	IT PLACES THE LINE ONE CHARACTER TO A WORD IN T$IBUF, AFTER
*	PERFORMING SEVERAL ELEMENTARY EDITING OPERATIONS:
*
*	CTRL-X		DELETE THE LINE
*	BACKARROW	DELETE THE PRECEDING CHARACTER
*
READ	0
	LAC	IBLN		GET THE BUFFER LENGTH
	DAC	IBCNT		SAVE FOR COUNTING
	LAC	IBFPT		GET INITIAL POINTER
	DAC	CHRX		SAVE IN LOCAL AUTO INDEX REGISTER
*
*	READ THE ACTUAL CHARACTER
*
RDA	...
	KSF			***
	JMP	.-1		* READ THE CHARACTER
	KRB			***
*
*	CHECK FOR AN EDITING CHARACTER
*
	AND	FILL		MASK OFF PARITY BIT
	SAD	(30)		CHECK FOR CTRL-X
	JMP	CTRLX		YES -- DELETE THE LINE
	SAD	(137)		CHECK FOR BACKARROW
	JMP	BACK		YES -- BACK UP
	SAD	(5)		CHECK FOR CTRL-E
	JMP	WRU		TELL HIM WHO WE ARE
	DAC	CHRX,X		SAVE THE CHARACTER IN THE BUFFER
	SAD	(15)		SEE IF THE END OF LINE
	JMP	EOL		YES -- CLEAN US UP
	ISZ	IBCNT		COUNT THE NEW CHARACTER
	JMP	RDA		IF MORE ROOM -- GET ANOTHER CHARACTER
	.EJECT
*
*	LINE TOO LONG -- GIVE MESSAGE AND DELETE IT
*
	JMS	T$MESS		CAN'T USE THE MESSAGE MACRO BECAUSE OF CR/LF
	.DATA	15,12		CR/LF

	.TEXT	\LINE TOO LONG -- \



	777777			END FLAG

	.EJECT
*
*	DELETE LINE ROUTINE
*
CTRLX	...
	MESS	<DELETED>,CRLF
	JMP	READ+1		TRY AGAIN
*
*	BACKARROW ROUTINE
*
BACK	...
	LAC	MONE		GET -1
	TAD	CHRX		AND GET THE POINTER LESS ONE IN R-AC
	SAD	(IBUF-2)	SEE IF TOO FAR
	JMP	CTRLX		IF SO -- SAY DELETED
	DAC	CHRX		RESTORE POINTER
	LAC	MONE		***
	TAD	IBCNT		* DECREMENT THE COUNTER BY ONE
	DAC	IBCNT		***
	JMP	RDA		AND READ ANOTHER CHARACTER
*
*	END OF LINE ROUTINE
*
EOL	...
	LAC	(12)		SEND A LINE-FEED
	PRINT			FOR GOOD MEASURE
	DAC	CHRX,X		SAVE IN BUFFER
	LAC	MONE		GET IN EOM FLAG
	DAC	CHRX,X		SAVE IN BUFFER
	LAC	IBFPT		SET UP A POINTR
	DAC	CHRX		FOR THE CALLER
	RET	READ		AND RETURN
*
*	WHO ARE YOU? ROUTINE
*
WRU	...
	MESS	<BASIC>,CRLF
	JMP	RDA



	.EJECT
*
*	INPUT BUFFER AND STORAGE
*
FILL	177			ASCII FILL/PARITY MASK
IBN	.EQU	100		LENGTH OF VISIBLE BUFFER
IBLN	.DATA	-IBN-1		LENGTH TO INITIALIZE COUNTER
IBFPT	.DATA	IBUF-1		INITIAL POINTER TO THE BUFFER
IBCNT	.BLOCK	1		COUNTER
MONE	777777			A MINUS ONE
IBUF	.BLOCK	IBN+2		INPUT BUFFER


	.STITL	TTY READ -- CHAR
*
*	THIS ROUTINE IS CALLED TO PICK UP A CHARACTER FROM
*	THE SOURCE LINE.
*
*	DEFINITION -- 'CHAR' -- GET CHARACTER MACRO
*
CHAR	.DEFIN
	JMS	T$CHAR		CALL THE SUBROUTINE
	.ENDM	CHAR
*
*	T$CHAR
*
CHAR	0










