CONIO                           - CONSOLE INPUT OUTPUT ROUTINES           3-JAN-2020 23:03:22  VAX MACRO V5.4-3            Page   1
V04-000                                                                   3-JAN-2020 23:03:13  [PEPE.VMS.BOOTS.SRC]CONIO.MAR;11  (1)

                                     0000     1         .title CONIO - CONSOLE INPUT OUTPUT ROUTINES
                                     0000     2         .ident /V04-000/
                                     0000     3
                                     0000     4 ;
                                     0000     5 ;****************************************************************************
                                     0000     6 ;*                                                                          *
                                     0000     7 ;*  COPYRIGHT (c) 1978, 1980, 1982, 1984 BY                                 *
                                     0000     8 ;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.                  *
                                     0000     9 ;*  ALL RIGHTS RESERVED.                                                    *
                                     0000    10 ;*                                                                          *
                                     0000    11 ;*  THIS  SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED  *
                                     0000    12 ;*  ONLY  IN  ACCORDANCE WITH  THE  TERMS  OF   SUCH LICENSE  AND WITH THE  *
                                     0000    13 ;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE  OR  ANY  OTHER  *
                                     0000    14 ;*  COPYES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE  TO ANY  *
                                     0000    15 ;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS   HEREBY  *
                                     0000    16 ;*  TRANSFERED.                                                             *
                                     0000    17 ;*                                                                          *
                                     0000    18 ;*  THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT NOTICE  *
                                     0000    19 ;*  AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMINMENT BY DIGITAL EQUIPMENT  *
                                     0000    20 ;*  CORPORATION.                                                            *
                                     0000    21 ;*                                                                          *
                                     0000    22 ;*  DIGITAL ASSUMES NO RESPONSIBITITY FOR THE USE  OR  RELIABILITY  OF ITS  *
                                     0000    23 ;*  SOFTWARE ON EQUIPMENT WICH IS NOT SUPPLIED  BY DIGITAL.                 *

                                     0000    24 ;*                                                                          *
                                     0000    25 ;****************************************************************************
                                     0000    26 ;
                                     0000    27 ; Facility: system bootstrapping
                                     0000    28 ;
                                     0000    29 ; Abstract: CONI0 provides basic console read, readprompt and write facilities.
                                     0000    30 ;
                                     0000    31 ; Author: Richard I. Mustvedt, creation date: 27-apr-1978
                                     0000    32 ;
                                     0000    33 ; Modified by:
                                     0000    34 ;
                                     0000    35 ;       V03-002 WH0001          Bill Matthews           9-Jul-84
                                     0000    36 ;
                                     0000    37 ;               Add generalized alternate console terminal support
                                     0000    38 ;
                                     0000    39 ;       V03-001 DNC0001         David N. Cutler         29-Dec-83
                                     0000    40 ;
                                     0000    41 ;               Add support for OVSS as the console terminal on Microvax 1.
                                     0000    42 ;
                                     0000    43 ; Include files:
                                     0000    44 ;
                                     0000    45
                                     0000    46         $prdef                                  ; define processor registers
                                     0000    47         $ssdef                                  ; define status code values
                                     0000    48
                                     0000    49 ;
                                     0000    50 ; Equated symbols:
                                     0000    51 ;
                           0000000D  0000    52         cr = 13                         ; character code for carriage return
                           0000000A  0000    53         lf = 10                         ; character code for line feed
                           00000015  0000    54         control_u = 21                  ; character code for  control-u
                           00000013  0000    55         control_s = 19                  ; control s (xoff)
                           00000011  0000    56         control_q = 17                  ; control q (xon)
                           0000007F  0000    57         rubout    = 127                 ; charactrer code for rubout













CONIO                           - CONSOLE INPUT OUTPUT ROUTINES           3-JAN-2020 23:03:22  VAX MACRO V5.4-3            Page   2
V04-000                                                                   3-JAN-2020 23:03:13  [PEPE.VMS.BOOTS.SRC]CONIO.MAR;11  (1)

                           00000000  0000    58         v_rub     = 0                   ; rubout sequence in progress
                                     0000    59
                                     0000    60         .sbttl boo$readprompt - prompt and read input string
                                     0000    61 ;+
                                     0000    62 ;
                                     0000    63 ;       boo$readpropt outputs the specified asciz prompt string on the
                                     0000    64 ;       console terminal then checks the count of characters to be read.
                                     0000    65 ;       If zero it exits, otherwise it reads the console terminal until
                                     0000    66 ;       either a carriage return is encountered or the character count
                                     0000    67 ;       is satisfied. The specified buffer is filled with an ascic
                                     0000    68 ;       string containing the characters read but not including the
                                     0000    69 ;       terminating carriage return.
                                     0000    70 ;
                                     0000    71 ; Calling sequence:
                                     0000    72 ;
                                     0000    73 ;       callx arglist,boo$readprompt
                                     0000    74 ;
                                     0000    75 ; Input parameters:
                                     0000    76 ;
                                     0000    77 ;
                                     0000    78 ;       prompt(ap) - address of asciz prompt string
                           00000004  0000    79         prompt =  4
                                     0000    80 ;
                                     0000    81 ;       size(ap)   - maximum length of input string
                           00000008  0000    82         prompt =  8
                                     0000    83
                                     0000    84 ;                       note: if size is zero, then nothing is read
                                     0000    85 ;                               and only the prompt string is written.
                                     0000    86 ;
                                     0000    87 ;       buf(ap)    - address of input buffer
                           0000000C  0000    88         buf    = 12
                                     0000    89 ;
                                     0000    90 ;
                                     0000    91 ; Output parameters:
                                     0000    92 ;
                                     0000    93 ;       rO - completion status code (always ss$-normal)
                                     0000    94 ;
                                     0000    95 ;       Buffer located by bufl(ap) will be filled with the string
                                     0000    96 ;       read as an ascic string.
                                     0000    97 ;
                                     0000    98
                                 00000000    99         .psect  $conio,byte
                               0314  0000   100         .entry  boo$readprompt,^m<r2,r4,r8,r9>
                    58   08 AC   D0  0002   101 10$:    movl      prompt(ap),r8         ;get prompt string address
                            54   D4  0006   102         clrl      r4                            ;clear control flags
                       50   88   9A  0008   103 20$:    movzbl    (r8)+,r0                      ;get next output character
                            05   13  000B   104         beql      30$                           ;if eql none
                          0076   30  000D   105         bsbw      con$putchar                   ;put character
                            F6   11  0010   106         brb       20$                           ;
                                     0012   107
                  52   0000'CC   9A  0012   108 30$:    movzbl    size(ap),r2                   ;maximum number of characters to read
                            60   13  0017   109         beql      120$                          ;if eql none
                    59   0C AC   D0  0019   110         movl      buf(ap),r9                    ;set address of input buffer
                            89   94  001D   111         clrb      (r9)+                         ;initialize string count
                         02 52   F5  001F   112         sobgtr    r2,40$                        ;decrement and test character count
                            42   11  0022   113         brb       110$                          ;end of read
                                     0024   114














CONIO                           - CONSOLE INPUT OUTPUT ROUTINES           3-JAN-2020 23:03:22  VAX MACRO V5.4-3            Page   3
V04-000                         boo$readprompt - prompt and read input s  3-JAN-2020 23:03:13  [PEPE.VMS.BOOTS.SRC]CONIO.MAR;11  (1)

                          008F   30  0024   115 40$:    bsbw      con$getchar                   ;get a character
               58   50   80 8F   8B  0027   116         bicb3     #^x80,r0,r8                   ;clear parity bit
                    58   7F 8F   91  002C   117         cmpb      #rubout,r8                    ;rubout?
                            11   12  0030   118         bneq      80$                           ;if neq no
                       58   79   9A  0032   119         movzbl    -(r9),r8                      ;get character to rubout
                                     0035   120
                            DB   13  0035   121         beql      30$                           ;if eql none
                    02 54   00   E2  0037   122         bbss      #v_rub,r4,70$                 ;set start of rubout sequence
                            40   10  003B   123         bsbb      outbslsh                      ;output back slash
                            44   10  003D   124 70$:    bsbb      outr8                         ;ouput rubbed out character
                            52   D6  003F   125         incl      r2                            ;adjust remaining character count
                            E1   11  0041   126         brb       40$                           ;
                                     0043   127
                    02 54   00   E5  0043   128 80$:    bbcc      #v_rub,r4,90$                 ;terminate rubout sequence
                            34   10  0047   129         bsbb      outbslsh                      ;output backslash
                       58   15   91  0049   130 90$:    cmpb      #control_u,r8                 ;control u?
                            B4   13  004C   131         beql      10$                           ;if eql yes
                    03 58   06   E1  004E   132         bbc       #6,r8,100$                    ;if clr, then graphic
                       58   20   8A  0052   133         bicb      #32,r8                        ;convert to upper case
                       58   0D   91  0055   134 100$:   cmpb      #cr,r8                        ;carriage return?
                            0C   13  0058   135         beql      110$                          ;if eql yes
                            52   D5  005A   136         tstl      r2                            ;any space  left in the buffer?
                            C6   13  005C   137         beql      40$                           ;if eql no
                            23   10  005E   138         bsbb      outr8                         ;echo character
                       89   58   90  0060   139         movb      r8,(r9)+                      ;buffer new character
                         BE 52   F4  0063   140         sobgeq    r2,40$                        ;reduce space remaining (alwais loop)
                                     0066   141
                       58   0D   9A  0066   142 110$:   movzbl    #cr,r8                        ;set carriage return character
                            1B   10  0069   143         bsbb      con$putchar                   ;
                       50   0A   9A  006B   144         movzbl    #lf,r0                        ;yes send line feed also
                            16   10  006E   145         bsbb      con$putchar                   ;output character in r0
                    59   0C AC   C2  0070   146         subl      buf(ap),r9                    ;compute character count + 1
               0C BC   59   01   83  0074   147         subb3     #1,r9,@buf(ap)                ;set actual character count
                       50   01   3C  0079   148 120$:   movzwl    #ss$_normal,r0                ;return normal completion status
                                 04  007C   149         ret                                     ;
                                     007D   150
                                     007D   151 outbslsh:                                       ;output back slash
                    50   5C 8F   9A  007D   152         movzbl    #^a%\%,r0                     ;set character code
                            03   11  0081   153         brb       con$putchar                   ;       and output it
                                     0083   154
                       50   58   9A  0083   155 outr8:  movzbl    r8,r0                         ;get character to output
                                     0086   156
                                     0086   157 con$putchar::                                   ;output character in r0
                          0000   31  0086   158         brw       w^10$                         ;console terminal output vector
                                     0089   159
                       51   20   DB  0089   160 10$:    mfpr      #pr$_rxcs,r1                  ;receiver ready?
                    1B 51   07   E1  008C   161         bbc       #7,r1,30$                     ;if clr, receiver not ready
                       51   21   DB  0090   162         mfpr      #pr$_rxdb,r1                  ;read input character
             13   51   07   00   ED  0093   163         cmpzv     #0,#7,r1,#control_s           ;control-s?
                            11   12  0098   164         bneq      30$                           ;if new no
                       51   20   DB  009A   165 20$:    mfpr      #pr$_rxcs,r1                  ;receiver ready?
                    F9 51   07   E1  009D   166         bbc       #7,r1,20$                     ;if clr, receiver not ready
                       51   21   DB  00A1   167         mfpr      #pr$_rxdb,r1                  ;read input character
             11   51   07   00   ED  00A4   168         cmpzv     #0,#7,r1,#control_q           ;is it a control-q?
                            EF   12  00A9   169         bneq      20$                           ;no, wait for another character.
                       51   22   DB  00AB   170 30$:    mfpr      #pr$_txcs,r1                  ;transmitter done?
                    F9 51   07   E1  00AE   171         bbc       #7,r1,30$                     ;if clr, transmitter not done














CONIO                           - CONSOLE INPUT OUTPUT ROUTINES           3-JAN-2020 23:03:22  VAX MACRO V5.4-3            Page   4
V04-000                         boo$readprompt - prompt and read input s  3-JAN-2020 23:03:13  [PEPE.VMS.BOOTS.SRC]CONIO.MAR;11  (1)

                       23   50   DA  00B2   172         mtpr      r0,#pr$_txdb                  ;write output character
                                 05  00B5   173         rsb                                     ;return
                                     00B6   174
                                     00B6   175 con$getchar::
                          0000   31  00B6   176         brw       w^10$                         ;console terminal input vector
                       50   20   DB  00B9   177 10$:    mfpr      #pr$_rxcs,r0                  ;receiver ready?
                    F9 50   07   E1  00BC   178         bbc       #7,r0,10$                     ;if clr, receiver not ready
                       50   21   DB  00C0   179         mfpr      #pr$_rxdb,r0                  ;read input character
                                 05  00C3   180         rsb                                     ;return
                                     00C4   181
                                     00C4   182 con$owncty::                                    ;these routines are noops in SYSBOOT
                                     00C4   183 con$releasecty::
                                 05  00C4   184         rsb
                                     00C5   185         .end




















CONIO                           - CONSOLE INPUT OUTPUT ROUTINES           3-JAN-2020 23:03:22  VAX MACRO V5.4-3            Page   5
Symbol table                                                              3-JAN-2020 23:03:13  [PEPE.VMS.BOOTS.SRC]CONIO.MAR;11  (1)

BOO$READPROMPT                   00000000 RG    02
BUF                            = 0000000C
CON$GETCHAR                      000000B6 RG    02
CON$OWNCTY                       000000C4 RG    02
CON$PUTCHAR                      00000086 RG    02
CON$RELEASECTY                   000000C4 RG    02
CONTROL_Q                      = 00000011
CONTROL_S                      = 00000013
CONTROL_U                      = 00000015
CR                             = 0000000D
LF                             = 0000000A
OUTBSLSH                         0000007D R     02
OUTR8                            00000083 R     02
PR$_RXCS                       = 00000020
PR$_RXDB                       = 00000021
PR$_TXCS                       = 00000022
PR$_TXDB                       = 00000023
PROMPT                         = 00000008
RUBOUT                         = 0000007F
SIZE                             ********   X   02
SS$_NORMAL                     = 00000001
V_RUB                          = 00000000

                                                +----------------+
                                                ! Psect synopsis !
                                                +----------------+

PSECT name                      Allocation          PSECT No.  Attributes
----------                      ----------          ---------  ----------
.  ABS  .                       00000000  (    0.)  00 (  0.)  NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT NOVEC BYTE
$ABS$                           00000000  (    0.)  01 (  1.)  NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT NOVEC BYTE
$CONIO                          000000C5  (  197.)  02 (  2.)  NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT NOVEC BYTE

                                             +------------------------+
                                             ! Performance indicators !
                                             +------------------------+

Phase                    Page faults    CPU Time       Elapsed Time
-----                    -----------    --------       ------------
Initialization                   31     00:00:00.01    00:00:00.01
Command processing              914     00:00:00.06    00:00:00.08
Pass 1                          551     00:00:01.01    00:00:01.02
Symbol table sort                 0     00:00:00.16    00:00:00.16
Pass 2                           74     00:00:00.11    00:00:00.13
Symbol table output               4     00:00:00.00    00:00:00.00
Psect synopsis output             4     00:00:00.00    00:00:00.00
Cross-reference output            0     00:00:00.00    00:00:00.00
Assembler run totals           1600     00:00:01.35    00:00:01.40

The working set limit was 1112 pages.














CONIO                           - CONSOLE INPUT OUTPUT ROUTINES           3-JAN-2020 23:03:22  VAX MACRO V5.4-3            Page   6
VAX-11 Macro Run Statistics                                               3-JAN-2020 23:03:13  [PEPE.VMS.BOOTS.SRC]CONIO.MAR;11  (1)


                                            +--------------------------+
                                            ! Macro library statistics !
                                            +--------------------------+

Macro library name                           Macros defined
------------------                           --------------
SYS$COMMON:[SYSLIB]STARLET.MLB;3                        5

1052 GETS were required to define 5 macros.

There were no errors, warnings or information messages.

MACRO CONIO/LIST
$
There were 60 pages of symbol table space allocated to hold 1005 non-local and 14 local symbols.
185 source lines were read in Pass 1, producing 17 object records in Pass 2.
9 pages of virtual memory were used to define 8 macros.

















CONIO                           - CONSOLE INPUT OUTPUT ROUTINES           3-JAN-2020 23:03:22  VAX MACRO V5.4-3        Page   6
VAX-11 Macro Run Statistics                                               3-JAN-2020 23:03:13  [PEPE.VMS.BOOTS.SRC]CONIO.MAR;11  (1)
                                            +--------------------------+
                                            ! Macro library statistics !
                                            +--------------------------+

Macro library name                           Macros defined
------------------                           --------------
SYS$COMMON:[SYSLIB]STARLET.MLB;3                        5

1052 GETS were required to define 5 macros.

There were no errors, warnings or information messages.

MACRO CONIO/LIST
$














CONIO                           - CONSOLE INPUT OUTPUT ROUTINES           3-JAN-2020 23:03:22  VAX MACRO V5.4-3            Page   6
VAX-11 Macro Run Statistics                                               3-JAN-2020 23:03:13  [PEPE.VMS.BOOTS.SRC]CONIO.MAR;11  (1)


                                            +--------------------------+
                                            ! Macro library statistics !
                                            +--------------------------+

Macro library name                           Macros defined
------------------                           --------------
SYS$COMMON:[SYSLIB]STARLET.MLB;3                        5

1052 GETS were required to define 5 macros.

There were no errors, warnings or information messages.

MACRO CONIO/LIST
$