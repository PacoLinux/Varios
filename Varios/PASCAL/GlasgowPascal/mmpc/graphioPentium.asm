%ifndef graphio
%define graphio ; defined by walker;0
%define definedunit$graphio$base ; defined by walker;0
section .text  ;0
; procedure generated by code generator class ilcg.tree.PentiumCG;0
label121f7f0daf7a54:;0
;	 loadbmpfile;0
; entering a procedure at lexical level 1;0
 enter spaceforloadbmpfilel107-4*1,1;0
; #182;0
 mov BYTE  [  ebp+     -5],  0;0
; #183;0
 lea eax,[  ebp+     8];0
 push eax;0
 lea eax,[  ebp+     -148];0
 push eax;0
%ifndef definedassign;0
%define definedassign ; defined by walker;0
EXTERN	 assign;0
%endif;0
 call assign; imported;4
 add esp, 8;0
; #184;0
 lea eax,[  ebp+     -148];0
 push eax;0
%ifndef definedreset;0
%define definedreset ; defined by walker;0
EXTERN	 reset;0
%endif;0
 call reset; imported;4
 add esp, 4;0
; #216;0
%ifndef definedioresult;0
%define definedioresult ; defined by walker;0
EXTERN	 ioresult;0
%endif;0
 call ioresult; imported;4
 mov DWORD  [ ebp+     -152],eax;0
  cmp DWORD  [  ebp+     -152],      0;0
 jnz near  label121f7f0dbe0a96;0
; #191;0
 lea eax,[  ebp+     -148];0
 push eax;0
%ifndef definedfilesize;0
%define definedfilesize ; defined by walker;0
EXTERN	 filesize;0
%endif;0
 call filesize; imported;4
 add esp, 4;0
 mov DWORD  [ ebp+     -228],eax;0
 mov eax,DWORD  [  ebp+     -228];0
 mov DWORD  [ ebp+     -116],eax;0
; #192;0
 mov DWORD  [  ebp+     -120],     54;0
; #193;0
 lea eax,[  ebp+     -144];0
 push eax;0
 push DWORD  [  ebp+     -120];0
 lea eax,[  ebp+     -108];0
 push eax;0
 lea eax,[  ebp+     -148];0
 push eax;0
%ifndef definedblockread;0
%define definedblockread ; defined by walker;0
EXTERN	 blockread;0
%endif;0
 call blockread; imported;4
 add esp, 16;0
; #215;0
 lea eax,[  ebp+     -94];0
 mov DWORD  [ ebp+     -232],eax;0
; #196;0
 push DWORD      36;0
 push DWORD  [  ebp+     168];0
%ifndef definedgetmem;0
%define definedgetmem ; defined by walker;0
EXTERN	 getmem;0
%endif;0
 call getmem; imported;4
 add esp, 8;0
 mov eax,DWORD  [  ebp+     168];0
 mov eax,DWORD  [ eax];0
 mov DWORD  [  eax+     4],     0;0
 mov eax,DWORD  [  ebp+     168];0
 mov eax,DWORD  [ eax];0
 mov DWORD  [  eax+     8],     2;0
 mov eax,DWORD  [  ebp+     168];0
 mov eax,DWORD  [ eax];0
 mov DWORD  [  eax+     16],     0;0
 mov eax,DWORD  [  ebp+     168];0
 mov eax,DWORD  [ eax];0
 mov ebx,DWORD  [  ebp+     -232];0
 mov ebx,DWORD  [  ebx+     8];0
 lea ebx,[  ebx+     -1];0
 mov DWORD  [ eax+     20],ebx;0
 mov eax,DWORD  [  ebp+     168];0
 mov eax,DWORD  [ eax];0
 mov DWORD  [  eax+     28],     0;0
 mov eax,DWORD  [  ebp+     168];0
 mov eax,DWORD  [ eax];0
 mov ebx,DWORD  [  ebp+     -232];0
 mov ebx,DWORD  [  ebx+     4];0
 lea ebx,[  ebx+     -1];0
 mov DWORD  [ eax+     32],ebx;0
 push DWORD      1;0
 push DWORD      3;0
 push DWORD  [  ebp+     168];0
%ifndef definedinitvec;0
%define definedinitvec ; defined by walker;0
EXTERN	 initvec;0
%endif;0
 call initvec; imported;4
 add esp, 12;0
; #197;0
 push DWORD      36;0
 lea eax,[  ebp+     -112];0
 push eax;0
%ifndef definedgetmem;0
%define definedgetmem ; defined by walker;0
EXTERN	 getmem;0
%endif;0
 call getmem; imported;4
 add esp, 8;0
 mov eax,DWORD  [  ebp+     -112];0
 mov DWORD  [  eax+     4],     0;0
 mov eax,DWORD  [  ebp+     -112];0
 mov ebx,DWORD  [  ebp+     -232];0
 mov ebx,DWORD  [  ebx+     8];0
 lea ebx,[  ebx+     -1];0
 mov DWORD  [ eax+     8],ebx;0
 mov eax,DWORD  [  ebp+     -112];0
 mov DWORD  [  eax+     16],     0;0
 mov eax,DWORD  [  ebp+     -112];0
 mov ebx,DWORD  [  ebp+     -232];0
 mov ebx,DWORD  [  ebx+     4];0
 lea ebx,[  ebx+     -1];0
 mov DWORD  [ eax+     20],ebx;0
 mov eax,DWORD  [  ebp+     -112];0
 mov DWORD  [  eax+     28],     0;0
 mov eax,DWORD  [  ebp+     -112];0
 mov DWORD  [  eax+     32],     2;0
 push DWORD      1;0
 push DWORD      3;0
 lea eax,[  ebp+     -112];0
 push eax;0
%ifndef definedinitvec;0
%define definedinitvec ; defined by walker;0
EXTERN	 initvec;0
%endif;0
 call initvec; imported;4
 add esp, 12;0
; #212;0
 mov eax,DWORD  [  ebp+     -232];0
 mov bx,WORD  [  eax+     14];0
 movsx eax, WORD   bx;0
  cmp DWORD eax,      8;0
 jz near  label121f7f0dc02aa6;0
 mov eax,DWORD  [  ebp+     -232];0
 mov bx,WORD  [  eax+     14];0
 movsx eax, WORD   bx;0
  cmp DWORD eax,      24;0
 jz near  label121f7f0dc0aaaa;0
 jmp  label121f7f0dc0aaac;0
 label121f7f0dc0aaaa:;0
; #204;0
 mov eax,DWORD  [  ebp+     168];0
 mov eax,DWORD  [ eax];0
 mov eax,DWORD  [  eax+     8];0
 lea eax,[  eax+     1];0
 mov ebx,DWORD  [  ebp+     168];0
 mov ebx,DWORD  [ ebx];0
 mov ebx,DWORD  [  ebx+     32];0
 lea ebx,[  ebx+     1];0
 imul  eax,ebx;0
 mov DWORD  [ ebp+     -116],eax;0
; #205;0
 push DWORD      4;0
 push DWORD  [  ebp+     -116];0
 call label121f7f0c8561b0;4
 add esp, 8;0
 mov DWORD  [ ebp+     -260],eax;0
  cmp DWORD  [  ebp+     -260],      0;0
 jnz near  label121f7f0dc10aae;0
 jmp  label121f7f0dc10ab0;0
 label121f7f0dc10aae:;0
 push DWORD      4;0
 push DWORD  [  ebp+     -116];0
 call label121f7f0c8561b0;4
 add esp, 8;0
 mov DWORD  [ ebp+     -264],eax;0
 mov eax,DWORD  [  ebp+     -116];0
 lea eax,[  eax+     4];0
 sub eax, [  ebp+     -264];0
 mov DWORD  [ ebp+     -116],eax;0
 label121f7f0dc10ab0:;0
; #208;0
 mov eax,DWORD  [  ebp+     168];0
 mov eax,DWORD  [ eax];0
 mov eax,DWORD  [  eax+     20];0
 mov DWORD  [ ebp+     -268],eax;0
 xor eax,eax;0
 cmp eax,dword    [  ebp+     -268];0
 jle near  label121f7f0dc14ab2;0
 jmp  label121f7f0dc14ab4;0
 label121f7f0dc14ab2:;0
 mov DWORD  [  ebp+     -120],     0;0
 label121f7f0db78a8a:;0
  cmp DWORD  [  ebp+     -120],      0;0
 jl near  label121f7f0dc15ab6;0
 mov eax,DWORD  [  ebp+     -120];0
 mov ebx,DWORD  [  ebp+     -112];0
 cmp eax,dword    [  ebx+     8];0
 jg near  label121f7f0dc15ab6;0
 jmp  label121f7f0dc15ab8;0
 label121f7f0dc15ab6:;0
 int     5;0
 label121f7f0dc15ab8:;0
 xor eax,eax;0
 mov ebx,DWORD  [  ebp+     -112];0
 cmp eax,dword    [  ebx+     20];0
 jg near  label121f7f0dc16aba;0
 jmp  label121f7f0dc16abc;0
 label121f7f0dc16aba:;0
 int     5;0
 label121f7f0dc16abc:;0
 xor eax,eax;0
 mov ebx,DWORD  [  ebp+     -112];0
 cmp eax,dword    [  ebx+     32];0
 jg near  label121f7f0dc16abe;0
 jmp  label121f7f0dc16ac0;0
 label121f7f0dc16abe:;0
 int     5;0
 label121f7f0dc16ac0:;0
 lea eax,[  ebp+     -144];0
 push eax;0
 push DWORD  [  ebp+     -116];0
 mov eax,DWORD  [  ebp+     -120];0
 mov ebx,DWORD  [  ebp+     -112];0
 imul  eax, [  ebx+     12];0
 mov ebx,DWORD  [  ebp+     -112];0
 mov ebx,DWORD  [ ebx];0
 lea eax,[  eax+ebx];0
 push eax;0
 lea eax,[  ebp+     -148];0
 push eax;0
%ifndef definedblockread;0
%define definedblockread ; defined by walker;0
EXTERN	 blockread;0
%endif;0
 call blockread; imported;4
 add esp, 16;0
 mov eax,DWORD  [  ebp+     -120];0
 cmp eax,dword    [  ebp+     -268];0
 jz near  label121f7f0db78a88;0
 inc DWORD  [  ebp+     -120];0
 jmp  label121f7f0db78a8a;0
 label121f7f0db78a88:;0
 label121f7f0dc14ab4:;0
; #209;0
 mov eax,DWORD  [  ebp+     168];0
 mov eax,DWORD  [ eax];0
 mov eax,DWORD  [  eax+     8];0
 mov DWORD  [ ebp+     -424],eax;0
 mov eax,DWORD  [  ebp+     168];0
 mov eax,DWORD  [ eax];0
 mov eax,DWORD  [  eax+     20];0
 mov DWORD  [ ebp+     -420],eax;0
 mov eax,DWORD  [  ebp+     168];0
 mov eax,DWORD  [ eax];0
 mov eax,DWORD  [  eax+     32];0
 mov DWORD  [ ebp+     -416],eax;0
 mov DWORD  [  ebp+     -320],     0;0
 label121f7f0dc1dac4:;0
 mov eax,DWORD  [  ebp+     -320];0
 cmp eax,dword    [  ebp+     -424];0
 jg near  label121f7f0dc1dac6;0
 mov DWORD  [  ebp+     -324],     0;0
 label121f7f0dc20ac8:;0
 mov eax,DWORD  [  ebp+     -324];0
 cmp eax,dword    [  ebp+     -420];0
 jg near  label121f7f0dc20aca;0
 mov DWORD  [  ebp+     -328],     0;0
 label121f7f0dc22acc:;0
 mov eax,DWORD  [  ebp+     -328];0
 cmp eax,dword    [  ebp+     -416];0
 jg near  label121f7f0dc22ace;0
 mov eax,DWORD  [  ebp+     -112];0
 mov eax,DWORD  [  eax+     8];0
 cmp eax,dword   [  ebp+     -324];0
 jl near  label121f7f0dc22ad0;0
 jmp  label121f7f0dc22ad2;0
 label121f7f0dc22ad0:;0
 int     5;0
 label121f7f0dc22ad2:;0
 mov eax,DWORD  [  ebp+     -112];0
 mov eax,DWORD  [  eax+     20];0
 cmp eax,dword   [  ebp+     -328];0
 jl near  label121f7f0dc23ad4;0
 jmp  label121f7f0dc23ad6;0
 label121f7f0dc23ad4:;0
 int     5;0
 label121f7f0dc23ad6:;0
 mov eax,DWORD  [  ebp+     -112];0
 mov eax,DWORD  [  eax+     32];0
 cmp eax,dword   [  ebp+     -320];0
 jl near  label121f7f0dc24ad8;0
 jmp  label121f7f0dc24ada;0
 label121f7f0dc24ad8:;0
 int     5;0
 label121f7f0dc24ada:;0
 mov eax,DWORD  [  ebp+     -320];0
 mov ebx,DWORD  [  ebp+     168];0
 mov ebx,DWORD  [ ebx];0
 imul  eax, [  ebx+     12];0
 mov ebx,DWORD  [  ebp+     -324];0
 mov edx,DWORD  [  ebp+     168];0
 mov edx,DWORD  [ edx];0
 imul  ebx, [  edx+     24];0
 mov edx,DWORD  [  ebp+     -328];0
 lea ebx,[  ebx+edx];0
 lea eax,[  eax+ebx];0
 mov ebx,DWORD  [  ebp+     168];0
 mov ebx,DWORD  [ ebx];0
 mov ebx,DWORD  [ ebx];0
 lea eax,[  eax+ebx];0
 mov DWORD  [ ebp+     -432],eax;0
 mov eax,DWORD  [  ebp+     -324];0
 mov ebx,DWORD  [  ebp+     -112];0
 imul  eax, [  ebx+     12];0
 mov ebx,DWORD  [  ebp+     -328];0
 mov edx,DWORD  [  ebp+     -112];0
 imul  ebx, [  edx+     24];0
 mov edx,DWORD  [  ebp+     -320];0
 lea ebx,[  ebx+edx];0
 lea eax,[  eax+ebx];0
 mov ebx,DWORD  [  ebp+     -112];0
 mov ebx,DWORD  [ ebx];0
 movzx eax, BYTE   [  eax+ebx];0
 lea ebx,[  eax+     -128];0
 mov BYTE  [  ebp+     -425],bl;0
 mov eax,DWORD  [  ebp+     -432];0
 mov bl,BYTE  [  ebp+     -425];0
 mov BYTE  [ eax],bl;0
 inc DWORD  [  ebp+     -328];0
 jmp  label121f7f0dc22acc;0
 label121f7f0dc22ace:;0
 inc DWORD  [  ebp+     -324];0
 jmp  label121f7f0dc20ac8;0
 label121f7f0dc20aca:;0
 inc DWORD  [  ebp+     -320];0
 jmp  label121f7f0dc1dac4;0
 label121f7f0dc1dac6:;0
; #211;0
 mov BYTE  [  ebp+     -5],  -1;0
; #212;0
 label121f7f0dc0aaac:;0
 jmp  label121f7f0dc02aa8;0
 label121f7f0dc02aa6:;0
; #199;0
 mov BYTE  [  ebp+     -5],  0;0
; #200;0
 push DWORD  label121f7f0db77a86;0
%ifndef definedlength;0
%define definedlength ; defined by walker;0
EXTERN	 length;0
%endif;0
 call length; imported;4
 add esp, 4;0
 mov DWORD  [ ebp+     -256],eax;0
 push DWORD      5;0
 push DWORD  [  ebp+     -256];0
 push DWORD  label121f7f0db77a86;0
 push DWORD  [   unit$system$base+     -24];0
%ifndef definedprintstring;0
%define definedprintstring ; defined by walker;0
EXTERN	 printstring;0
%endif;0
 call printstring; imported;4
 add esp, 16;0
 push DWORD  [   unit$system$base+     -24];0
%ifndef definedprintln;0
%define definedprintln ; defined by walker;0
EXTERN	 println;0
%endif;0
 call println; imported;4
 add esp, 4;0
; #201;0
 label121f7f0dc02aa8:;0
; #213;0
 push DWORD      36;0
 mov eax,DWORD  [  ebp+     -112];0
 push eax;0
%ifndef definedfreemem;0
%define definedfreemem ; defined by walker;0
EXTERN	 freemem;0
%endif;0
 call freemem; imported;4
 add esp, 8;0
; #214;0
 lea eax,[  ebp+     -148];0
 push eax;0
%ifndef definedpasclose;0
%define definedpasclose ; defined by walker;0
EXTERN	 pasclose;0
%endif;0
 call pasclose; imported;4
 add esp, 4;0
; #215;0
; #216;0
 jmp  label121f7f0dbe0a98;0
 label121f7f0dbe0a96:;0
; #185;0
 mov BYTE  [  ebp+     -5],  0;0
; #186;0
 push DWORD  label121f7f0db74a84;0
%ifndef definedlength;0
%define definedlength ; defined by walker;0
EXTERN	 length;0
%endif;0
 call length; imported;4
 add esp, 4;0
 mov DWORD  [ ebp+     -176],eax;0
 lea eax,[  ebp+     8];0
 push eax;0
%ifndef definedlength;0
%define definedlength ; defined by walker;0
EXTERN	 length;0
%endif;0
 call length; imported;4
 add esp, 4;0
 mov DWORD  [ ebp+     -200],eax;0
%ifndef definedioresult;0
%define definedioresult ; defined by walker;0
EXTERN	 ioresult;0
%endif;0
 call ioresult; imported;4
 mov DWORD  [ ebp+     -224],eax;0
 push DWORD      5;0
 push DWORD  [  ebp+     -176];0
 push DWORD  label121f7f0db74a84;0
 push DWORD  [   unit$system$base+     -24];0
%ifndef definedprintstring;0
%define definedprintstring ; defined by walker;0
EXTERN	 printstring;0
%endif;0
 call printstring; imported;4
 add esp, 16;0
 push DWORD      5;0
 push DWORD  [  ebp+     -200];0
 lea eax,[  ebp+     8];0
 push eax;0
 push DWORD  [   unit$system$base+     -24];0
%ifndef definedprintstring;0
%define definedprintstring ; defined by walker;0
EXTERN	 printstring;0
%endif;0
 call printstring; imported;4
 add esp, 16;0
 push DWORD      5;0
 push DWORD      12;0
 push DWORD  [  ebp+     -224];0
 push DWORD  [   unit$system$base+     -24];0
%ifndef definedprintint;0
%define definedprintint ; defined by walker;0
EXTERN	 printint;0
%endif;0
 call printint; imported;4
 add esp, 16;0
 push DWORD  [   unit$system$base+     -24];0
%ifndef definedprintln;0
%define definedprintln ; defined by walker;0
EXTERN	 println;0
%endif;0
 call println; imported;4
 add esp, 4;0
; #187;0
 label121f7f0dbe0a98:;0
; #217;0
 label121f7f0db73a82:;0
 movsx eax,BYTE    [  ebp+     -5];0
spaceforloadbmpfilel107 equ 432;0
loadbmpfilel107exit:;0
leave;0
 ret 0;4
section .text  ;0
; procedure generated by code generator class ilcg.tree.PentiumCG;0
label121f7f0daf7a4e:;0
;	 storebmpfile;0
; entering a procedure at lexical level 1;0
 enter spaceforstorebmpfilel108-4*1,1;0
; #151;0
 lea eax,[  ebp+     8];0
 push eax;0
 lea eax,[  ebp+     -144];0
 push eax;0
%ifndef definedassign;0
%define definedassign ; defined by walker;0
EXTERN	 assign;0
%endif;0
 call assign; imported;4
 add esp, 8;0
; #152;0
 lea eax,[  ebp+     -144];0
 push eax;0
%ifndef definedrewrite;0
%define definedrewrite ; defined by walker;0
EXTERN	 rewrite;0
%endif;0
 call rewrite; imported;4
 add esp, 4;0
; #154;0
 push DWORD  [  ebp+     1032];0
 lea eax,[  ebp+     -108];0
 push eax;0
 call label121f7f0daf8a5a;4
 add esp, 8;0
; #155;0
 lea eax,[  ebp+     -140];0
 push eax;0
 push DWORD      54;0
 lea eax,[  ebp+     -108];0
 push eax;0
 lea eax,[  ebp+     -144];0
 push eax;0
%ifndef definedblockwrite;0
%define definedblockwrite ; defined by walker;0
EXTERN	 blockwrite;0
%endif;0
 call blockwrite; imported;4
 add esp, 16;0
; #156;0
 push DWORD      36;0
 lea eax,[  ebp+     -12];0
 push eax;0
%ifndef definedgetmem;0
%define definedgetmem ; defined by walker;0
EXTERN	 getmem;0
%endif;0
 call getmem; imported;4
 add esp, 8;0
 mov eax,DWORD  [  ebp+     -12];0
 mov DWORD  [  eax+     4],     0;0
 mov eax,DWORD  [  ebp+     -12];0
 mov ebx,DWORD  [  ebp+     1032];0
 mov ebx,DWORD  [  ebx+     20];0
 mov DWORD  [ eax+     8],ebx;0
 mov eax,DWORD  [  ebp+     -12];0
 mov DWORD  [  eax+     16],     0;0
 mov eax,DWORD  [  ebp+     -12];0
 mov ebx,DWORD  [  ebp+     1032];0
 mov ebx,DWORD  [  ebx+     32];0
 mov DWORD  [ eax+     20],ebx;0
 mov eax,DWORD  [  ebp+     -12];0
 mov DWORD  [  eax+     28],     0;0
 mov eax,DWORD  [  ebp+     -12];0
 mov ebx,DWORD  [  ebp+     1032];0
 mov ebx,DWORD  [  ebx+     8];0
 mov DWORD  [ eax+     32],ebx;0
 push DWORD      1;0
 push DWORD      3;0
 lea eax,[  ebp+     -12];0
 push eax;0
%ifndef definedinitvec;0
%define definedinitvec ; defined by walker;0
EXTERN	 initvec;0
%endif;0
 call initvec; imported;4
 add esp, 12;0
; #160;0
 mov eax,DWORD  [  ebp+     -12];0
 mov eax,DWORD  [  eax+     8];0
 mov DWORD  [ ebp+     -256],eax;0
 mov eax,DWORD  [  ebp+     -12];0
 mov eax,DWORD  [  eax+     20];0
 mov DWORD  [ ebp+     -252],eax;0
 mov eax,DWORD  [  ebp+     -12];0
 mov eax,DWORD  [  eax+     32];0
 mov DWORD  [ ebp+     -248],eax;0
 mov DWORD  [  ebp+     -148],     0;0
 label121f7f0dc65afc:;0
 mov eax,DWORD  [  ebp+     -148];0
 cmp eax,dword    [  ebp+     -256];0
 jg near  label121f7f0dc65afe;0
 mov DWORD  [  ebp+     -152],     0;0
 label121f7f0dc66b00:;0
 mov eax,DWORD  [  ebp+     -152];0
 cmp eax,dword    [  ebp+     -252];0
 jg near  label121f7f0dc66b02;0
 mov DWORD  [  ebp+     -156],     0;0
 label121f7f0dc68b04:;0
 mov eax,DWORD  [  ebp+     -156];0
 cmp eax,dword    [  ebp+     -248];0
 jg near  label121f7f0dc68b06;0
 mov eax,DWORD  [  ebp+     1032];0
 mov eax,DWORD  [  eax+     8];0
 cmp eax,dword   [  ebp+     -156];0
 jl near  label121f7f0dc69b08;0
 jmp  label121f7f0dc69b0a;0
 label121f7f0dc69b08:;0
 int     5;0
 label121f7f0dc69b0a:;0
 mov eax,DWORD  [  ebp+     1032];0
 mov eax,DWORD  [  eax+     20];0
 cmp eax,dword   [  ebp+     -148];0
 jl near  label121f7f0dc6ab0c;0
 jmp  label121f7f0dc6ab0e;0
 label121f7f0dc6ab0c:;0
 int     5;0
 label121f7f0dc6ab0e:;0
 mov eax,DWORD  [  ebp+     1032];0
 mov eax,DWORD  [  eax+     32];0
 cmp eax,dword   [  ebp+     -152];0
 jl near  label121f7f0dc6ab10;0
 jmp  label121f7f0dc6ab12;0
 label121f7f0dc6ab10:;0
 int     5;0
 label121f7f0dc6ab12:;0
 mov eax,DWORD  [  ebp+     -148];0
 mov ebx,DWORD  [  ebp+     -12];0
 imul  eax, [  ebx+     12];0
 mov ebx,DWORD  [  ebp+     -152];0
 mov edx,DWORD  [  ebp+     -12];0
 imul  ebx, [  edx+     24];0
 mov edx,DWORD  [  ebp+     -156];0
 lea ebx,[  ebx+edx];0
 lea eax,[  eax+ebx];0
 mov ebx,DWORD  [  ebp+     -12];0
 mov ebx,DWORD  [ ebx];0
 lea eax,[  eax+ebx];0
 mov DWORD  [ ebp+     -324],eax;0
 mov eax,DWORD  [  ebp+     -156];0
 mov ebx,DWORD  [  ebp+     1032];0
 imul  eax, [  ebx+     12];0
 mov ebx,DWORD  [  ebp+     -148];0
 mov edx,DWORD  [  ebp+     1032];0
 imul  ebx, [  edx+     24];0
 mov edx,DWORD  [  ebp+     -152];0
 lea ebx,[  ebx+edx];0
 lea eax,[  eax+ebx];0
 mov ebx,DWORD  [  ebp+     1032];0
 mov ebx,DWORD  [ ebx];0
 mov bl,BYTE  [  eax+ebx];0
 add  BYTE bl,  -128;0
 mov BYTE  [  ebp+     -317],bl;0
 mov eax,DWORD  [  ebp+     -324];0
 mov bh,BYTE  [  ebp+     -317];0
 mov BYTE  [ eax],bh;0
 inc DWORD  [  ebp+     -156];0
 jmp  label121f7f0dc68b04;0
 label121f7f0dc68b06:;0
 inc DWORD  [  ebp+     -152];0
 jmp  label121f7f0dc66b00;0
 label121f7f0dc66b02:;0
 inc DWORD  [  ebp+     -148];0
 jmp  label121f7f0dc65afc;0
 label121f7f0dc65afe:;0
; #164;0
 mov eax,DWORD  [  ebp+     1032];0
 mov eax,DWORD  [  eax+     8];0
 lea eax,[  eax+     1];0
 mov ebx,DWORD  [  ebp+     1032];0
 mov ebx,DWORD  [  ebx+     32];0
 lea ebx,[  ebx+     1];0
 imul  eax,ebx;0
 mov DWORD  [ ebp+     -112],eax;0
; #165;0
 push DWORD      4;0
 push DWORD  [  ebp+     -112];0
 call label121f7f0c8561b0;4
 add esp, 8;0
 mov DWORD  [ ebp+     -260],eax;0
  cmp DWORD  [  ebp+     -260],      0;0
 jnz near  label121f7f0dc93b14;0
 jmp  label121f7f0dc93b16;0
 label121f7f0dc93b14:;0
 push DWORD      4;0
 push DWORD  [  ebp+     -112];0
 call label121f7f0c8561b0;4
 add esp, 8;0
 mov DWORD  [ ebp+     -264],eax;0
 mov eax,DWORD  [  ebp+     -112];0
 lea eax,[  eax+     4];0
 sub eax, [  ebp+     -264];0
 mov DWORD  [ ebp+     -112],eax;0
 label121f7f0dc93b16:;0
; #168;0
 mov eax,DWORD  [  ebp+     1032];0
 mov eax,DWORD  [  eax+     20];0
 mov DWORD  [ ebp+     -268],eax;0
 xor eax,eax;0
 cmp eax,dword    [  ebp+     -268];0
 jle near  label121f7f0dc96b18;0
 jmp  label121f7f0dc96b1a;0
 label121f7f0dc96b18:;0
 mov DWORD  [  ebp+     -116],     0;0
 label121f7f0db14a7a:;0
  cmp DWORD  [  ebp+     -116],      0;0
 jl near  label121f7f0dc97b1c;0
 mov eax,DWORD  [  ebp+     -116];0
 mov ebx,DWORD  [  ebp+     -12];0
 cmp eax,dword    [  ebx+     8];0
 jg near  label121f7f0dc97b1c;0
 jmp  label121f7f0dc97b1e;0
 label121f7f0dc97b1c:;0
 int     5;0
 label121f7f0dc97b1e:;0
 xor eax,eax;0
 mov ebx,DWORD  [  ebp+     -12];0
 cmp eax,dword    [  ebx+     20];0
 jg near  label121f7f0dc97b20;0
 jmp  label121f7f0dc97b22;0
 label121f7f0dc97b20:;0
 int     5;0
 label121f7f0dc97b22:;0
 xor eax,eax;0
 mov ebx,DWORD  [  ebp+     -12];0
 cmp eax,dword    [  ebx+     32];0
 jg near  label121f7f0dc98b24;0
 jmp  label121f7f0dc98b26;0
 label121f7f0dc98b24:;0
 int     5;0
 label121f7f0dc98b26:;0
 lea eax,[  ebp+     -140];0
 push eax;0
 push DWORD  [  ebp+     -112];0
 mov eax,DWORD  [  ebp+     -116];0
 mov ebx,DWORD  [  ebp+     -12];0
 imul  eax, [  ebx+     12];0
 mov ebx,DWORD  [  ebp+     -12];0
 mov ebx,DWORD  [ ebx];0
 lea eax,[  eax+ebx];0
 push eax;0
 lea eax,[  ebp+     -144];0
 push eax;0
%ifndef definedblockwrite;0
%define definedblockwrite ; defined by walker;0
EXTERN	 blockwrite;0
%endif;0
 call blockwrite; imported;4
 add esp, 16;0
 mov eax,DWORD  [  ebp+     -116];0
 cmp eax,dword    [  ebp+     -268];0
 jz near  label121f7f0db14a78;0
 inc DWORD  [  ebp+     -116];0
 jmp  label121f7f0db14a7a;0
 label121f7f0db14a78:;0
 label121f7f0dc96b1a:;0
; #171;0
 push DWORD      36;0
 mov eax,DWORD  [  ebp+     -12];0
 push eax;0
%ifndef definedfreemem;0
%define definedfreemem ; defined by walker;0
EXTERN	 freemem;0
%endif;0
 call freemem; imported;4
 add esp, 8;0
; #172;0
 lea eax,[  ebp+     -144];0
 push eax;0
%ifndef definedpasclose;0
%define definedpasclose ; defined by walker;0
EXTERN	 pasclose;0
%endif;0
 call pasclose; imported;4
 add esp, 4;0
; #174;0
 label121f7f0db09a76:;0
spaceforstorebmpfilel108 equ 324;0
storebmpfilel108exit:;0
leave;0
 ret 0;4
section .text  ;0
; procedure generated by code generator class ilcg.tree.PentiumCG;0
label121f7f0daf8a5a:;0
;	 initbmpheader;0
; entering a procedure at lexical level 1;0
 enter spaceforinitbmpheaderl109-4*1,1;0
; #91;0
 mov eax,DWORD  [  ebp+     8];0
 mov BYTE  [ eax],  66;0
; #92;0
 mov eax,DWORD  [  ebp+     8];0
 mov BYTE  [  eax+     1],  77;0
; #96;0
 mov eax,DWORD  [  ebp+     8];0
 mov ebx,DWORD  [  ebp+     12];0
 mov ebx,DWORD  [  ebx+     32];0
 lea ebx,[  ebx+     1];0
 mov edx,DWORD  [  ebp+     12];0
 mov edx,DWORD  [  edx+     8];0
 lea edx,[  edx+     1];0
 imul  ebx,edx;0
 mov edx,DWORD  [  ebp+     12];0
 mov edx,DWORD  [  edx+     20];0
 lea edx,[  edx+     1];0
 imul  ebx,edx;0
 lea ebx,[  ebx+     54];0
 mov DWORD  [ eax+     2],ebx;0
; #97;0
 mov DWORD  [  ebp+     -8],     0;0
 label121f7f0dcafb2e:;0
  cmp DWORD  [  ebp+     -8],      3;0
 jg near  label121f7f0dcafb30;0
 mov eax,DWORD  [  ebp+     8];0
 mov ebx,DWORD  [  ebp+     -8];0
 mov BYTE  [  eax+ebx +     6],  0;0
 inc DWORD  [  ebp+     -8];0
 jmp  label121f7f0dcafb2e;0
 label121f7f0dcafb30:;0
; #98;0
 mov eax,DWORD  [  ebp+     8];0
 mov DWORD  [  eax+     10],     54;0
; #138;0
 mov eax,DWORD  [  ebp+     8];0
 lea eax,[  eax+     14];0
 mov DWORD  [ ebp+     -32],eax;0
; #128;0
 mov eax,DWORD  [  ebp+     -32];0
 mov DWORD  [ eax],     40;0
; #129;0
 mov eax,DWORD  [  ebp+     -32];0
 mov ebx,DWORD  [  ebp+     12];0
 mov ebx,DWORD  [  ebx+     32];0
 lea ebx,[  ebx+     1];0
 mov DWORD  [ eax+     4],ebx;0
; #130;0
 mov eax,DWORD  [  ebp+     -32];0
 mov ebx,DWORD  [  ebp+     12];0
 mov ebx,DWORD  [  ebx+     20];0
 lea ebx,[  ebx+     1];0
 mov DWORD  [ eax+     8],ebx;0
; #131;0
 mov eax,DWORD  [  ebp+     -32];0
 mov WORD  [  eax+     12],   1;0
; #132;0
 mov eax,DWORD  [  ebp+     -32];0
 mov ebx,DWORD  [  ebp+     12];0
 mov ebx,DWORD  [  ebx+     8];0
 lea ebx,[  ebx+     1];0
 imul ebx,DWORD ebx,    8;0
 mov WORD  [ eax+     14],bx;0
; #133;0
 mov eax,DWORD  [  ebp+     -32];0
 mov DWORD  [  eax+     16],     0;0
; #134;0
 mov eax,DWORD  [  ebp+     -32];0
 mov DWORD  [  eax+     24],     3780;0
; #135;0
 mov eax,DWORD  [  ebp+     -32];0
 mov DWORD  [  eax+     28],     3780;0
; #136;0
 mov eax,DWORD  [  ebp+     -32];0
 mov DWORD  [  eax+     32],     0;0
; #137;0
 mov eax,DWORD  [  ebp+     -32];0
 mov DWORD  [  eax+     36],     0;0
; #138;0
; #141;0
 label121f7f0daf8a5e:;0
spaceforinitbmpheaderl109 equ 32;0
initbmpheaderl109exit:;0
leave;0
 ret 0;4
section .text  ;0
; procedure generated by code generator class ilcg.tree.PentiumCG;0
label121f7f0dbb6a8c:;0
;	 unit$graphio;0
; entering a unit at lexical level 0;0
%define definedunit$unit$graphio$base;0
unit$graphio:;0
 enter  0,0;0
 call unit$system;4
cmp byte[unit$graphioready],1;0
 jnz unit$graphioinit;0
 jmp unit$graphiol110exit;0
unit$graphioinit:mov byte[unit$graphioready],1;0
 label121f7f0daf7a56:;0
spaceforunit$graphiol110 equ 0;0
unit$graphiol110exit:;0
leave;0
 ret 0;4
	SECTION .bss;0
	alignb 16;0
resb spaceforunit$graphiol110;0
	alignb 16;0
unit$graphio$base:;0
	SECTION .data;0
unit$graphioready dd 0;0
 label121f7f0dafaa6e:;0
 db  0;0
 label121f7f0dafaa6c:;0
 db  0;0
 label121f7f0dafaa6a:;0
 db  0;0
 label121f7f0dafaa68:;0
 db  0;0
 label121f7f0dafaa66:;0
 db  0;0
 label121f7f0dafaa64:;0
 db  0;0
 label121f7f0dafaa62:;0
 db  0;0
 label121f7f0dafaa60:;0
 db  0;0
 label121f7f0db74a84:;0
 dw   10;0
 dw   99;0
 dw   97;0
 dw   110;0
 dw   116;0
 dw   32;0
 dw   111;0
 dw   112;0
 dw   101;0
 dw   110;0
 dw   32;0
 label121f7f0db77a86:;0
 dw   30;0
 dw   32;0
 dw   56;0
 dw   32;0
 dw   98;0
 dw   105;0
 dw   116;0
 dw   32;0
 dw   98;0
 dw   109;0
 dw   112;0
 dw   32;0
 dw   102;0
 dw   105;0
 dw   108;0
 dw   101;0
 dw   115;0
 dw   32;0
 dw   110;0
 dw   111;0
 dw   116;0
 dw   32;0
 dw   115;0
 dw   117;0
 dw   112;0
 dw   112;0
 dw   111;0
 dw   114;0
 dw   116;0
 dw   101;0
 dw   100;0
%include "/users/staff/wpc/src/VectorPascal/mmpc/systemPentium.asm"
%endif
