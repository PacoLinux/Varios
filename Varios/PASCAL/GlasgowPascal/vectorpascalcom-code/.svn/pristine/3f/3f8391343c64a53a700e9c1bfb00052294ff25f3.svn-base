#LyX 1.2 created this file. For more info see http://www.lyx.org/
\lyxformat 2.15
\textclass book
\paperfontsize 10
\language english
\options  
\inputencoding latin1
\makeindex
\fontscheme helvet
\paperpackage a4wide
\fontscheme times

\layout Standard

/* 
\layout Section

ILCG grammar
\layout Standard

This is a definition of the grammer of ILCG using the Sable grammar specificatio
n
 lanaguage.
 It is input to Sable to generate a parser for machine descriptions in ilcg
 
\layout Standard


\latex latex 

\backslash begin{verbatim}
\newline 
*/
\newline 

\newline 

\newline 

\newline 

\newline 
Package ilcg;
\newline 
/*
\backslash end{verbatim}
\latex default 

\layout Subsection

Helpers
\layout Standard

Helpers are regular expressions macros used in the definition of terminal
 symbols of the grammar. 
\latex latex 

\backslash begin{verbatim}*/
\newline 
Helpers
\newline 
  letter = [['A'..'Z']+['a'..'z']];
\newline 
  digit = ['0'..'9'];
\newline 
  alphanum = [letter+['0'..'9']];
\newline 
  cr = 13;
\newline 
  lf = 10;
\newline 
  tab = 9;
\newline 
    digit_sequence = digit+;
\newline 
    fractional_constant = digit_sequence? '.' digit_sequence | digit_sequence '.';
\newline 
    sign = '+' | '-';
\newline 
    exponent_part = ('e' | 'E') sign? digit_sequence;
\newline 
    floating_suffix = 'f' | 'F' | 'l' | 'L';
\newline 
  eol = cr lf | cr | lf;        // This takes care of different platforms
\newline 
  not_cr_lf = [[32..127] - [cr + lf]];
\newline 
  exponent = ('e'|'E');
\newline 
  quote = ''';
\newline 
  all =[0..127];
\newline 
  schar = [all-'''];
\newline 
  not_star = [all - '*'];
\newline 
  not_star_slash = [not_star - '/'];
\newline 
/*
\backslash end{verbatim}
\latex default 

\layout Subsection

Tokens
\layout Standard

The tokens section defines the terminal symbols of the grammar. 
\latex latex 

\backslash begin{verbatim}
\newline 
*/
\newline 
Tokens
\newline 
  floating_constant = fractional_constant exponent_part? floating_suffix? |
\newline 
        digit_sequence exponent_part floating_suffix?;
\newline 
 /* 
\backslash end{verbatim}
\latex default 
 terminals specifying data formats 
\latex latex 

\backslash begin{verbatim}
\newline 
*/
\newline 
 void ='void';
\newline 
 octet = 'octet'; int8 = 'int8'; uint8 = 'uint8';
\newline 
 halfword = 'halfword'; int16 = 'int16' ; uint16 = 'uint16' ;
\newline 
 word = 'word'; int32 = 'int32' ; 
\newline 
 uint32 = 'uint32' ; ieee32 = 'ieee32';
\newline 
 doubleword = 'doubleword'; int64 = 'int64' ; 
\newline 
 uint64 = 'uint64'; ieee64 = 'ieee64';
\newline 
 quadword = 'quadword';
\newline 
/*
\backslash end{verbatim}
\latex default 
 terminals describing reserved words 
\latex latex 

\backslash begin{verbatim}*/
\newline 
 function= 'function';
\newline 
 flag = 'flag';
\newline 
 location = 'loc';
\newline 
 procedure='instruction';
\newline 
 returns ='returns';
\newline 
 label = 'label';
\newline 
 goto='goto';
\newline 
 fail ='interrupt';
\newline 
 for ='for';
\newline 
 to='to';
\newline 
 step='step';
\newline 
 do ='do';
\newline 
 ref='ref';
\newline 
 const='const';
\newline 
 reg= 'register';
\newline 
 operation = 'operation';
\newline 
 alias = 'alias';
\newline 
 instruction = 'instruction';
\newline 
 address = 'address';
\newline 
 vector ='vector';
\newline 
 stack = 'stack';
\newline 
 sideeffect='sideeffect';
\newline 
 if ='if';
\newline 
 reserved='reserved';
\newline 
 precondition ='precondition';
\newline 

\newline 
 instructionset='instructionset';
\newline 
/* 
\backslash end{verbatim}
\latex default 
terminals for describing new patterns
\latex latex 

\backslash begin{verbatim} */
\newline 
 pattern = 'pattern';
\newline 
 means = 'means';
\newline 
 assembles = 'assembles'; 
\newline 

\newline 
/*
\backslash end{verbatim}
\latex default 
 terminals specifying operators 
\latex latex 

\backslash begin{verbatim}*/
\newline 
 colon = ':';
\newline 
 semicolon= ';';
\newline 
 comma = ',';
\newline 
 dot = '.' ;
\newline 
 bra ='(';
\newline 
 
\newline 
 ket =')';
\newline 
 plus = '+';
\newline 
 satplus = '+:';
\newline 
 satminus = '-:';
\newline 
 satmult ='*:';
\newline 
 map='->';
\newline 
 equals = '=';
\newline 
 le = '<=';
\newline 
 ge='>=';
\newline 
 ne='<>';
\newline 
 shl='<<';
\newline 
 shr='>>';
\newline 
 lt='<';
\newline 
 gt='>';
\newline 
 minus = '-';
\newline 
 times = '*';
\newline 
 exponentiate = '**';
\newline 
 divide = 'div';
\newline 
 replicate = 'rep';
\newline 
 and = 'AND';
\newline 
 or = 'OR' ;
\newline 
 xor = 'XOR';
\newline 
 not = 'NOT';
\newline 
 sin='SIN';
\newline 
 cos='COS';
\newline 
 abs='ABS';
\newline 
 tan='TAN';
\newline 
 ln='LN';
\newline 
 min='MIN';
\newline 
 max='MAX';
\newline 
 sqrt='SQRT';
\newline 
 trunc='TRUNCATE';
\newline 
 round='ROUND';
\newline 
 float='FLOAT';
\newline 
 remainder = 'MOD';
\newline 
 extend= 'EXTEND';
\newline 
 store = ':=';
\newline 
 deref = '^';
\newline 
 push ='PUSH';
\newline 
 pop ='POP';
\newline 
 call='APPLY';
\newline 
 full='FULL';
\newline 
 empty='EMPTY';
\newline 
 subscript='SUBSCRIPT'; 
\newline 
 intlit = digit+;
\newline 
 
\newline 
 vbar = '|';
\newline 
 sket=']';
\newline 
 sbra='[';
\newline 
 end='end';
\newline 
 typetoken='type';
\newline 
 mem='mem';
\newline 
 string = quote schar+ quote;
\newline 
/*
\backslash end{verbatim}
\latex default 

\layout Standard

identifiers come after reserved words in the grammar 
\latex latex 

\backslash begin{verbatim}
\newline 

\newline 
*/
\newline 
 identifier = letter alphanum*;  
\newline 
 blank = (' '|cr|lf|tab)+;
\newline 
 comment = '/*' not_star* '*'+ (not_star_slash not_star* '*'+)* '/';
\newline 

\newline 
Ignored Tokens 
\newline 
	blank,comment;
\newline 
/*
\backslash end{verbatim}
\latex default 

\layout Subsection

Non terminal symbols
\layout Standard


\latex latex 

\backslash begin{verbatim}
\newline 
*/
\newline 
Productions
\newline 
 program = statementlist instructionlist;
\newline 
 instructionlist =instructionset sbra alternatives sket;
\newline 
/*
\backslash end{verbatim}
\latex default 
 non terminals specifying data formats 
\latex latex 

\backslash begin{verbatim}*/
\newline 
 format = {octet} octet| {halfword} halfword |
\newline 
          {word} word | {doubleword} doubleword |
\newline 
          {quadword} quadword;
\newline 
 
\newline 
 
\newline 
/*
\backslash end{verbatim}
\latex default 
 non terminals corresponding to type descriptions 
\latex latex 

\backslash begin{verbatim}*/
\newline 
 reference =   ref type ;
\newline 
 array = vector bra number ket;
\newline 
 aggregate={stack} stack bra number ket |{vector}array |{non};
\newline 
 predeclaredtype =   {format} format|{tformat}tformat ;
\newline 
 typeprim=	{typeid}  typeid| {predeclaredtype}predeclaredtype;
\newline 
type= 	{predeclaredtype}predeclaredtype|
\newline 
	{typeid}  typeid|	
\newline 
	{array}typeprim array|
\newline 
 	{cartesian}sbra type cartesian* sket|
\newline 
	{reftype}reference|		
\newline 
	{map}bra [arg]:type map [result]:type ket;
\newline 
 cartesian =  comma type;
\newline 
 
\newline 
 tformat = {signed} signed|{unsigned}unsigned|{ieee32}ieee32|{ieee63}ieee64;
\newline 
 signed = int32 | {int8} int8 | {int16} int16 | {int64} int64;
\newline 
 unsigned = uint32 | {uint8} uint8 | {uint16} uint16 | 
\newline 
            {uint64} uint64;
\newline 
   
\newline 

\newline 
/*
\backslash end{verbatim}
\latex default 
 non terminals corresponding to typed values 
\latex latex 

\backslash begin{verbatim}*/
\newline 
 value = /*{refval}refval |      */
\newline 
 	{rhs}rhs|
\newline 
 	{loc}loc|
\newline 
 	{void}void|
\newline 
 	{cartval}cartval|
\newline 
	{dyadic} dyadic bra [left]:value comma [right]:value ket|
\newline 
	{monadic}monadic bra value ket;
\newline 
/*
\backslash end{verbatim}
\latex default 
 value corresponding to a cartesian product type e.g.
 record initialisers 
\latex latex 

\backslash begin{verbatim}*/
\newline 
 cartval=sbra value carttail* sket;
\newline 
 carttail = comma value;
\newline 
/*
\backslash end{verbatim}
\latex default 
 conditions used in defining control structures 
\latex latex 

\backslash begin{verbatim}*/
\newline 
condition={dyadic} dyadic bra [left]:condition comma [right]:condition ket|
\newline 
	{monadic}monadic bra condition ket |
\newline 
	{id}identifier|
\newline 
	{number}number;
\newline 
 rhs=	{number}number|
\newline 
 	{cast}bra type ket value|
\newline 
 	{const}const identifier |
\newline 
  	{deref}deref  bra  refval ket;
\newline 
 
\newline 
 refval = loc|
\newline 
 	{refcast} bra type ket loc;
\newline 
 loc = 	{id}identifier|
\newline 
 	{memory}mem bra value ket ;
\newline 
 
\newline 

\newline 
/*predeclaredregister = {fp}fp|{gp}gp;*/
\newline 
 number =  {reallit} optionalsign reallit|
\newline 
           {integer} optionalsign intlit;
\newline 
 optionalsign = |{plus}plus|{minus}minus;
\newline 
 reallit= floating_constant;
\newline 
/*
\backslash end{verbatim}
\latex default 
 operators 
\latex latex 

\backslash begin{verbatim}*/ 
\newline 
dyadic  = {plus} plus|
\newline 
	{minus} minus |
\newline 
	{identifier} identifier|
\newline 
	{exp}exponentiate|
\newline 
 	{times} times |
\newline 
 	{divide}  divide|
\newline 
	{replicate} replicate|
\newline 
 	{lt}lt|
\newline 
 	{gt}gt|
\newline 
 	{call}call|
\newline 
	{le}le|
\newline 
	{ge}ge|
\newline 
	{eq}equals|
\newline 
	{ne}ne|
\newline 
	{min}min|{max}max|
\newline 
	{push}push|
\newline 
	{subscript}subscript|
\newline 
	{satplus}satplus|
\newline 
	{satmult}satmult|
\newline 
	{satminus}satminus|
\newline 
		{shl}shl|
\newline 
		{shr}shr|
\newline 
             	{remainder} remainder|
\newline 
             	{or}or|
\newline 
             	{and}and|
\newline 
             	{xor}xor;
\newline 
monadic={not}not|{full}full|{empty}empty|{pop}pop|{sin}sin|
\newline 
		{trunc}trunc|{round}round|{float}float| {extend}extend|
\newline 
		{cos}cos|{tan}tan|{abs}abs|{sqrt}sqrt |{ln}ln;
\newline 
/*
\backslash end{verbatim}
\latex default 
 register declaration 
\latex latex 

\backslash begin{verbatim}*/
\newline 
registerdecl= reservation reg aggregate type identifier assembles sbra string sket  ;
\newline 
reservation = {reserved}reserved|{unreserved}; 
\newline 

\newline 
aliasdecl =
\newline 
alias reg aggregate type
\newline 
          [child]:identifier equals [parent]:identifier bra [lowbit]:intlit colon [highbit]:intlit ket
\newline 
          assembles sbra string sket;
\newline 
	 
\newline 
opdecl = operation identifier means operator assembles sbra string sket;
\newline 
operator = 	{plus}plus|
\newline 
		{minus}minus|
\newline 
		{times}times|
\newline 
		{lt}lt|
\newline 
		{gt}gt|
\newline 
		{min}min|
\newline 
		{max}max|
\newline 
		{shl}shl|
\newline 
		{shr}shr|
\newline 
 		{le}le|
\newline 
		{ge}ge|
\newline 
		{eq}equals|
\newline 
		{ne}ne|
\newline 
		{divide} divide|
\newline 
           	{remainder}remainder|
\newline 
		{or}or|
\newline 
		{and}and|
\newline 
		{xor}xor;
\newline 

\newline 
/*
\backslash end{verbatim}
\latex default 
 pattern declarations 
\latex latex 

\backslash begin{verbatim}*/
\newline 
assign =  refval store value ;
\newline 
meaning = {value}value|
\newline 
	{assign}assign|
\newline 
	{goto}goto value|
\newline 
	{fail}fail value|
\newline 
	{if}if bra value ket meaning|
\newline 
	{for} for refval store [start]:value to [stop]:value step [increment]:value do meaning|
\newline 
  	{loc}location value;
\newline 
patterndecl = pattern identifier paramlist means sbra meaning sket assemblesto sideeffects precond
\newline 
               |
\newline 
              {alternatives} pattern identifier means sbra alternatives sket;
\newline 

\newline 
paramlist = bra param paramtail* ket|{nullparam}bra ket;
\newline 
param = typeid identifier|{typeparam} typetoken identifier|{label}label identifier;
\newline 
typeid = identifier;
\newline 
paramtail = comma param;
\newline 
alternatives = type alts*; 
\newline 
alts = vbar type;
\newline 
precond = precondition sbra condition sket|{unconditional};
\newline 
asideeffect=   sideeffect  returnval;
\newline 
sideeffects = asideeffect*;
\newline 
assemblesto=assembles sbra assemblypattern sket;
\newline 
assemblypattern = assemblertoken*;
\newline 
assemblertoken = {string} string | {identifier} identifier;
\newline 
returnval = returns identifier;
\newline 
/*
\backslash end{verbatim}
\latex default 
 statements 
\latex latex 

\backslash begin{verbatim}*/
\newline 
statement = {aliasdecl} aliasdecl|
\newline 
            {registerdecl} registerdecl |	    
\newline 
		{addressmode} address patterndecl|
\newline 
		{instructionformat}procedure patterndecl|
\newline 
		{opdecl}opdecl|
\newline 
		{flag} flag identifier equals intlit| 
\newline 
		{typerename}typetoken predeclaredtype     equals identifier|
\newline 
		{patterndecl} patterndecl;
\newline 
statementlist = statement semicolon statements*;
\newline 
statements =  statement  semicolon;
\newline 

\newline 

\newline 
// 
\backslash end{verbatim}
\latex default 

\the_end
