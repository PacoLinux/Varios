lexeme=(dummy_sy, { all valid lexemes > 0  so we put in a dummy }
BRACE_SY,
RBRACE_SY,
STAR_SY,
DOLLAR_SY,
PLUS_SY,
DPLUS_SY,
MINUS_SY,
ARROW_SY,
up_arrow_sy,
LT_SY,
LE_SY,
EQ_SY,
GT_SY,
GE_SY,
BRA_SY,
KET_SY,
DOT_SY,
DDOT_SY,
ABORT_SY,
ADDRESS_SY,
ALIEN_SY,
AND_SY,
array_sy,
B_AND_SY,
BASETYPE_SY,
B_OR_SY,
BEGIN_SY,
CBOOL_SY,
BOOL_SY,
BY_SY,
CASE_SY,
CHAR_SY,
CHR_SY,
CLASS_SY,
CLAUSE_SY,
COLOUR_SY,
COMMENT_SY,
CONDITION_SY,
const_sy,
DEFAULT_SY,
DIV_SY,
DO_SY,
ELSE_SY,
END_SY,
EXP1_SY,
EXP2_SY,
EXP3_SY,
EXP4_SY,
EXP5_SY,
EXPORT_SY,
EXPRESSION_SY,
EXTERNAL_SY,
FALSE_SY,
CFILE_SY,
FILE_SY,
FOR_SY,
forward_sy,
FROM_SY,
FUNCTION_SY,
IF_SY,
IMPORT_SY,
IMPLEMENTATION_SY,
IN_SY,
INCLUDE_SY,
CINT_SY,
INT_SY,
INTERFACE_SY,
IS_SY,
ISNT_SY,
LET_SY,
LISTON_SY,
LISTOFF_SY,
LWB_SY,
NAME_SY,
NIL_SY,
OF_SY,
opcode_sy,
OR_SY,
ORD_SY,
PEEK_SY,
PNTR_SY,
PID_SY,
PROCEDURE_SY,
program_sy,
READ_SY,
READLN_SY,
REAL_SY,
RECORD_SY,
rem_SY,
REPEAT_SY,
ROTATE_SY,
SCALE_SY,
SEGMENT_SY,
SET_SY,
SHIFT_SY,
SHIFT_L_SY,
SHIFT_R_SY,
CSTRING_SY,
STRING_SY,
SUBSCRIPT_SY,
TAG_,
TEXT_SY,
THEN_SY,
TO_SY,
TRACEON_SY,
TRACEOFF_SY,
TRANS_SY,
TRUE_SY,
type_sy,
until_sy,
UPB_SY,
USES_SY,
var_sy,
VECTOR_SY,
WHILE_SY,
WRITE_SY,
WRITELN_SY,
CUR_SY,
LEY_SY,
TILDE_SY,
NEQ_SY,
SLASH_SY,
INT_LIT,
REAL_LIT,
STRING_LIT,
IDENTIFIER,
newline_sy,
bar_sy,
semicolon_sy,
colon_sy,
dcolon_sy,
assign_sy,
comma_sy,
at_sy,
question_sy,
void_sy,
UNDEFINED
);
const endofsource_sy = UNDEFINED;