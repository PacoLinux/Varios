\begin{tabbing}
***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=\kill
\parbox{14cm}{\textsf{\textbf{unit}  \textit{bloomfilter} ;}}\\
\end{tabbing}
This unit provides a set of library routines for creating and manipulating
index-sets for indexing the words in documents.
\begin{tabbing}
***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=\kill
\\
\+\parbox{14cm}{\textsf{\textbf{interface} }}\\
\+\parbox{14cm}{\textsf{\textbf{const} }}\\
\parbox{14cm}{\textsf{\textit{maxhash} =1023;}}\\
\parbox{14cm}{\textsf{\textit{bloomdepth} =8;}}\\
\end{tabbing}
The above constants control overall dimensions of the index-sets. {\sf Maxhash} defines
highest ordinal number in the set, {\sf bloomdepth} defines how many index sets are
to be used for each file
\begin{tabbing}
***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=\kill
\+ \+ \\
\<\parbox{14cm}{\textsf{\textbf{type} }}\\
\parbox{14cm}{\textsf{\textit{hashcode}  =0..\textit{maxhash} ;}}\\
\parbox{14cm}{\textsf{\textit{bloomrange}  = 1..\textit{bloomdepth} ;}}\\
\parbox{14cm}{\textsf{\textit{filter}  = \textbf{set}  \textbf{of}  \textit{hashcode} ;}}\\
\end{tabbing}
A {\sf filter} is a single index set, these are then
grouped into a :
\begin{tabbing}
***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=\kill
\+ \+ \\
\parbox{14cm}{\textsf{\textit{bloom}  = \textbf{array} [\textit{bloomrange} ] \textbf{of}  \textit{filter} ;}}\\
\end{tabbing}
A lexeme will be hashed to a hash vector, a vector of independently computed
hash codes
\begin{tabbing}
***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=\kill
\+ \+ \\
\parbox{14cm}{\textsf{\textit{hashvector}  = \textbf{array}  [\textit{bloomrange} ] \textbf{of}  \textit{integer} ;}}\\
\end{tabbing}
Each text file is then described by a {\sf filefilter} which encodes information
about the words in the file along with the filename
\begin{tabbing}
***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=\kill
\+ \+ \\
\+\parbox{14cm}{\textsf{\textit{filefilter}  = \textbf{record} }}\\
\parbox{14cm}{\textsf{\textit{wordset} : \textit{bloom}}; }\\
\parbox{14cm}{\textsf{\textit{filename} : \textit{string}}; }\\
\<\-\parbox{14cm}{\textsf{\textbf{end} ;}}\\
\<\textsf{\textbf{procedure}  \textit{hashword} \textit{(} \textbf{var}  \textit{theword} :\textbf{string} ; \textbf{var}  \textit{codes} :\textit{hashvector} );} (see Section \ref{sec:bloomfilterhashword} )\\
\<\textsf{\textbf{procedure}  \textit{setfilter} \textit{(} \textbf{var}  \textit{theword} :\textbf{string} ; \textbf{var}  \textit{f} :\textit{bloom} );} (see Section \ref{sec:bloomfiltersetfilter} )\\
\<\textsf{\textbf{function}  \textit{testfilter} \textit{(} \textbf{var}  \textit{theword} :\textbf{string} ; \textbf{var}  \textit{f} :\textit{bloom} ):\textit{boolean} ;} (see Section \ref{sec:bloomfiltertestfilter} )\\
\<\parbox{14cm}{\textsf{\textbf{implementation} }}\\
\\
\<\textsf{\textbf{procedure}  \textit{hashword} \textit{(} \textbf{var}  \textit{theword} :\textbf{string} ; \textbf{var}  \textit{codes} :\textit{hashvector} );} (see Section \ref{sec:bloomfilterhashword} )\\
\<\textsf{\textbf{procedure}  \textit{setfilter} \textit{(} \textbf{var}  \textit{theword} :\textbf{string} ; \textbf{var}  \textit{f} :\textit{bloom} );} (see Section \ref{sec:bloomfiltersetfilter} )\\
\<\textsf{\textbf{function}  \textit{testfilter} \textit{(} \textbf{var}  \textit{theword} :\textbf{string} ; \textbf{var}  \textit{f} :\textit{bloom} ):\textit{boolean} ;} (see Section \ref{sec:bloomfiltertestfilter} )\\
\-\<\+\parbox{14cm}{\textsf{\textbf{begin} }}\\
\<\-\parbox{14cm}{\textsf{\textbf{end} .}}\\
\\
\\
\end{tabbing}
\section{hashword}\label{sec:bloomfilterhashword}

\begin{tabbing}
***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=\kill
\parbox{14cm}{\textsf{\textbf{procedure}  \textit{hashword} \textit{(} \textbf{var}  \textit{theword} :\textbf{string} ; \textbf{var}  \textit{codes} :\textit{hashvector} );}}\\
\end{tabbing}
This procedure performs parallel hashes on {\sf theword} to yield a
a vector of hashcodes in {\sf codes}. It uses for this purpose
the vector of prime numbers:
\begin{tabbing}
***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=\kill
\\
\+\parbox{14cm}{\textsf{\textbf{const} }}\\
\parbox{14cm}{primes: \textbf{ array } \textsf{[\textit{bloomrange} ] } \textbf{ of } \textsf{ \textit{integer} =\textit{(} 7,11,13,17,19,23,29,31);}}\\
\<\parbox{14cm}{\textsf{\textbf{var} }}\\
\parbox{14cm}{\textsf{Let \textit{i}, \textit{l} $\in$ integer;}}\\
\parbox{14cm}{\textsf{Let \textit{j} $\in$ hashcode;}}\\
\-\<\+\parbox{14cm}{\textsf{\textbf{begin} }}\\
\parbox{14cm}{\textsf{\textit{l}$\leftarrow$ \textit{length} (\textit{theword})}; }\\
\parbox{14cm}{\textsf{\textit{codes}$\leftarrow$ 0}; }\\
\+\parbox{14cm}{\textsf {\textbf {for } \textsf{\textit{i}$\leftarrow$ 1} \textbf{ to } \textsf{\textit{l}} \textbf{ do } }}\\
\<\parbox{14cm}{\textsf{\textbf{begin} }}\\
\parbox{14cm}{\textsf{\textit{j}$\leftarrow$ \textbf{ord}(\textit{theword}$_{\textit{i}}$)}; }\\
\end{tabbing}
The following line has the effect of computing the
polynomials
$$c_1p_1^{l-1}+c_2p_1^{l-2}...+c_{l-1}p_1+c_l$$
$$c_1p_2^{l-1}+c_2p_2^{l-2}...+c_{l-1}p_2+c_l$$
$$c_1p_3^{l-1}+c_2p_3^{l-2}...+c_{l-1}p_3+c_l$$
etc\\
where
$c_j$ is the $j$th character in the string and
$p_i$ is the $i$the prime in the vector of primes.
Where the instructionsets allow it will be computed
in parallel.
\begin{tabbing}
***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=\kill
\+ \+ \\
\parbox{14cm}{\textsf{\textit{codes}$\leftarrow$ \textit{codes} $\times$ \textit{primes} + \textit{j}}; }\\
\<\-\parbox{14cm}{\textsf{\textbf{end} ;}}\\
\end{tabbing}
Constrain the result to be in the appropriate range
\begin{tabbing}
***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=\kill
\+ \\
\parbox{14cm}{\textsf{\textit{codes}$\leftarrow$ \textit{codes} $\wedge$ \textit{maxhash}}; }\\
\<\-\parbox{14cm}{\textsf{\textbf{end} ;}}\\
\end{tabbing}
\section{setfilter}\label{sec:bloomfiltersetfilter}

\begin{tabbing}
***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=\kill
\parbox{14cm}{\textsf{\textbf{procedure}  \textit{setfilter} \textit{(} \textbf{var}  \textit{theword} :\textbf{string} ; \textbf{var}  \textit{f} :\textit{bloom} );}}\\
\end{tabbing}
Compute the hash vector for the word and insert the
hashed elements into all of the filters in the bloom.
\begin{tabbing}
***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=\kill
\\
\+\parbox{14cm}{\textsf{\textbf{var} }}\\
\parbox{14cm}{\textsf{Let \textit{codes} $\in$ hashvector;}}\\
\parbox{14cm}{\textsf{Let \textit{i} $\in$ integer;}}\\
\-\<\+\parbox{14cm}{\textsf{\textbf{begin} }}\\
\parbox{14cm}{\textsf{\textit{hashword} (\textit{theword}, \textit{codes})}; }\\
\parbox{14cm}{\textsf{\textit{f}$\leftarrow$ \textit{f} + \textit{}[codes]}; }\\
\<\-\parbox{14cm}{\textsf{\textbf{end} ;}}\\
\end{tabbing}
\section{testfilter}\label{sec:bloomfiltertestfilter}

\begin{tabbing}
***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=\kill
\parbox{14cm}{\textsf{\textbf{function}  \textit{testfilter} \textit{(} \textbf{var}  \textit{theword} :\textbf{string} ; \textbf{var}  \textit{f} :\textit{bloom} ):\textit{boolean} ;}}\\
\end{tabbing}
Compute the hash vector for the word and test if the
coresponding elements are present in all the filters of the bloom.
Note the use of and-reduction on the vector of booleans that
results from the expression {\sf codes in f}.
\begin{tabbing}
***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=***\=\kill
\\
\+\parbox{14cm}{\textsf{\textbf{var} }}\\
\parbox{14cm}{\textsf{Let \textit{codes} $\in$ hashvector;}}\\
\-\<\+\parbox{14cm}{\textsf{\textbf{begin} }}\\
\parbox{14cm}{\textsf{\textit{hashword} (\textit{theword}, \textit{codes})}; }\\
\parbox{14cm}{\textsf{\textit{testfilter}$\leftarrow$ \textbf{ $\backslash \wedge$  } (\textit{codes} $\in$ \textit{f}) }; }\\
\<\-\parbox{14cm}{\textsf{\textbf{end} ;}}\\
\end{tabbing}
