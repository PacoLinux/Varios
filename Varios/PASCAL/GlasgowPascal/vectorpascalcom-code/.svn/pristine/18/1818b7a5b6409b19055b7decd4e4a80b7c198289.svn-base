<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Frameset//EN""http://www.w3.org/TR/REC-html40/frameset.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Tue Apr 23 15:07:06 BST 2002 -->
<TITLE>
: Class  Tokens
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="../stylesheet.css" TITLE="Style">
</HEAD>
<BODY BGCOLOR="white">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../VPTeX/Tab.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../VPTeX/VpLex.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Tokens.html" TARGET="_top"><B>NO FRAMES</B></A></FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY: &nbsp;INNER&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL: &nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
VPTeX</FONT>
<BR>
Class  Tokens</H2>
<PRE>
java.lang.Object
  |
  +--<B>VPTeX.Tokens</B>
</PRE>
<HR>
<DL>
<DT>public class <B>Tokens</B><DT>extends java.lang.Object</DL>

<P>
Class to tokenize a line of text, with pascal syntax and tex
<P>
<HR>

<P>
<!-- ======== INNER CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->


<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../VPTeX/Tokens.html#Tokens()">Tokens</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../VPTeX/Tokens.html#containsTexToken(java.lang.String)">containsTexToken</A></B>(java.lang.String&nbsp;S)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../VPTeX/Tokens.html#containsToken(java.lang.String)">containsToken</A></B>(java.lang.String&nbsp;S)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return truw if contains token</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../VPTeX/Tokens.html#containsTokenAndLast(java.lang.String)">containsTokenAndLast</A></B>(java.lang.String&nbsp;S)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the tokinized line contains a token and it is the last</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../VPTeX/Tokens.html#containsTokenAndNotLast(java.lang.String)">containsTokenAndNotLast</A></B>(java.lang.String&nbsp;S)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the tokinized line contains a token and it followed by a ; ie a statment</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../VPTeX/Tokens.html#containsTokens(java.lang.String, java.lang.String)">containsTokens</A></B>(java.lang.String&nbsp;S1,
               java.lang.String&nbsp;S2)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return true if contains two tokens one after the other</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../VPTeX/Tokens.html#firstTokenEquals(java.lang.String)">firstTokenEquals</A></B>(java.lang.String&nbsp;S)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true if tokenized line fist token is S</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../VPTeX/Tokens.html#getTexTokenAfter(java.lang.String)">getTexTokenAfter</A></B>(java.lang.String&nbsp;S)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the first tex token after S which is inside {}, excluding spaces and tabs, returns empty string if token does not exist</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../VPTeX/Tokens.html#getTokenAfter(java.lang.String)">getTokenAfter</A></B>(java.lang.String&nbsp;S)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the first token after S, excluding spaces and tabs, returns empty string if token does not exist</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Vector</CODE></FONT></TD>
<TD><CODE><B><A HREF="../VPTeX/Tokens.html#split(java.lang.String)">split</A></B>(java.lang.String&nbsp;S)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Splits the tokinzed line across the token S</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../VPTeX/Tokens.html#tokenizeLine(java.lang.String)">tokenizeLine</A></B>(java.lang.String&nbsp;S)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tokinize the line</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../VPTeX/Tokens.html#tokenizeTexLine(java.lang.String)">tokenizeTexLine</A></B>(java.lang.String&nbsp;S)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tokinze a tex line</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../VPTeX/Tokens.html#toString()">toString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->


<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="Tokens()"><!-- --></A><H3>
Tokens</H3>
<PRE>
public <B>Tokens</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" CELLPADDING="3" CELLSPACING="0" WIDTH="100%">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="tokenizeLine(java.lang.String)"><!-- --></A><H3>
tokenizeLine</H3>
<PRE>
public void <B>tokenizeLine</B>(java.lang.String&nbsp;S)</PRE>
<DL>
<DD>Tokinize the line<DD><DL>
<DT><B>Parameters:</B><DD><CODE>S</CODE> - string to be tokinized</DL>
</DD>
</DL>
<HR>

<A NAME="tokenizeTexLine(java.lang.String)"><!-- --></A><H3>
tokenizeTexLine</H3>
<PRE>
public void <B>tokenizeTexLine</B>(java.lang.String&nbsp;S)</PRE>
<DL>
<DD>Tokinze a tex line<DD><DL>
<DT><B>Parameters:</B><DD><CODE>S</CODE> - string to be tokinized</DL>
</DD>
</DL>
<HR>

<A NAME="containsTokenAndNotLast(java.lang.String)"><!-- --></A><H3>
containsTokenAndNotLast</H3>
<PRE>
public boolean <B>containsTokenAndNotLast</B>(java.lang.String&nbsp;S)</PRE>
<DL>
<DD>Returns true if the tokinized line contains a token and it followed by a ; ie a statment<DD><DL>
<DT><B>Parameters:</B><DD><CODE>S</CODE> - the token to search for<DT><B>Returns:</B><DD>if contains token and not last</DL>
</DD>
</DL>
<HR>

<A NAME="containsTokenAndLast(java.lang.String)"><!-- --></A><H3>
containsTokenAndLast</H3>
<PRE>
public boolean <B>containsTokenAndLast</B>(java.lang.String&nbsp;S)</PRE>
<DL>
<DD>Returns true if the tokinized line contains a token and it is the last<DD><DL>
<DT><B>Parameters:</B><DD><CODE>S</CODE> - the token to search for<DT><B>Returns:</B><DD>if contains token and last</DL>
</DD>
</DL>
<HR>

<A NAME="containsTokens(java.lang.String, java.lang.String)"><!-- --></A><H3>
containsTokens</H3>
<PRE>
public boolean <B>containsTokens</B>(java.lang.String&nbsp;S1,
                              java.lang.String&nbsp;S2)</PRE>
<DL>
<DD>Return true if contains two tokens one after the other<DD><DL>
<DT><B>Parameters:</B><DD><CODE>S1</CODE> - the first token<DD><CODE>S2</CODE> - the second token<DT><B>Returns:</B><DD>true if contains the two tokens</DL>
</DD>
</DL>
<HR>

<A NAME="containsToken(java.lang.String)"><!-- --></A><H3>
containsToken</H3>
<PRE>
public boolean <B>containsToken</B>(java.lang.String&nbsp;S)</PRE>
<DL>
<DD>return truw if contains token<DD><DL>
<DT><B>Parameters:</B><DD><CODE>S</CODE> - the token to seearch for<DT><B>Returns:</B><DD>true if contains token</DL>
</DD>
</DL>
<HR>

<A NAME="containsTexToken(java.lang.String)"><!-- --></A><H3>
containsTexToken</H3>
<PRE>
public boolean <B>containsTexToken</B>(java.lang.String&nbsp;S)</PRE>
<DL>
</DL>
<HR>

<A NAME="firstTokenEquals(java.lang.String)"><!-- --></A><H3>
firstTokenEquals</H3>
<PRE>
public boolean <B>firstTokenEquals</B>(java.lang.String&nbsp;S)</PRE>
<DL>
<DD>return true if tokenized line fist token is S<DD><DL>
<DT><B>Parameters:</B><DD><CODE>S</CODE> - token to search for<DT><B>Returns:</B><DD>true if contains token</DL>
</DD>
</DL>
<HR>

<A NAME="getTokenAfter(java.lang.String)"><!-- --></A><H3>
getTokenAfter</H3>
<PRE>
public java.lang.String <B>getTokenAfter</B>(java.lang.String&nbsp;S)</PRE>
<DL>
<DD>Return the first token after S, excluding spaces and tabs, returns empty string if token does not exist<DD><DL>
<DT><B>Parameters:</B><DD><CODE>S</CODE> - token to search for<DT><B>Returns:</B><DD>the token to return</DL>
</DD>
</DL>
<HR>

<A NAME="getTexTokenAfter(java.lang.String)"><!-- --></A><H3>
getTexTokenAfter</H3>
<PRE>
public java.lang.String <B>getTexTokenAfter</B>(java.lang.String&nbsp;S)</PRE>
<DL>
<DD>Return the first tex token after S which is inside {}, excluding spaces and tabs, returns empty string if token does not exist<DD><DL>
<DT><B>Parameters:</B><DD><CODE>S</CODE> - token to search for<DT><B>Returns:</B><DD>the token to return</DL>
</DD>
</DL>
<HR>

<A NAME="toString()"><!-- --></A><H3>
toString</H3>
<PRE>
public java.lang.String <B>toString</B>()</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>toString</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="split(java.lang.String)"><!-- --></A><H3>
split</H3>
<PRE>
public java.util.Vector <B>split</B>(java.lang.String&nbsp;S)</PRE>
<DL>
<DD>Splits the tokinzed line across the token S<DD><DL>
<DT><B>Parameters:</B><DD><CODE>S</CODE> - the token to split across<DT><B>Returns:</B><DD>the split lines</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../VPTeX/Tab.html"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../VPTeX/VpLex.html"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Tokens.html" TARGET="_top"><B>NO FRAMES</B></A></FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY: &nbsp;INNER&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL: &nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>

</BODY>
</HTML>
