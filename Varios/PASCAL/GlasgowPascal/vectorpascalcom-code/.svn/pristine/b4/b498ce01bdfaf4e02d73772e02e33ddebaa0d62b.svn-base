#LyX 1.2 created this file. For more info see http://www.lyx.org/
\lyxformat 2.15
\textclass book
\paperfontsize 10
\language english
\options  
\inputencoding latin1
\makeindex
\fontscheme helvet
\paperpackage a4wide
\fontscheme times

\layout Chapter

Elements of the language
\layout Section

Alphabet
\layout Standard

Vector Pascal has a base alphabet drawn from the ASCII characterset which
 is sufficient to encode all of the grammatical constructs of the language.
 It also has an extended alphabet drawn from the Unicode characterset.
 The extended characterset can be used to define identifiers using Russian,
 Greek, Japanese or Chinese characters.
 The base characteset used is shown in tables 
\begin_inset LatexCommand \ref{letters}

\end_inset 

, 
\begin_inset LatexCommand \ref{digits}

\end_inset 


\layout Standard

Vector Pascal programs are encoded either as ASCII files, or as UTF-8 encoded
 unicode files.
\layout Standard


\begin_float tab 

\layout Caption

The letters of Vector Pascal
\begin_inset LatexCommand \label{letters}

\end_inset 

.
\layout Standard


\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
4 13 0 0 0 0 0 0
1 2 0 0
0 1 0 0
0 1 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

A
\newline 
 B
\newline 
 C
\newline 
 D
\newline 
 E
\newline 
 F
\newline 
 G
\newline 
 H
\newline 
 I
\newline 
 J
\newline 
 K
\newline 
 L
\newline 
 M
\newline 
N
\newline 
 O
\newline 
 P
\newline 
 Q
\newline 
 R
\newline 
 S
\newline 
 T
\newline 
 U
\newline 
 V
\newline 
 W
\newline 
 X
\newline 
 Y
\newline 
 Z
\newline 
a
\newline 
 b
\newline 
 c
\newline 
 d
\newline 
 e
\newline 
 f
\newline 
 g
\newline 
 h
\newline 
 i
\newline 
 j
\newline 
 k
\newline 
 l
\newline 
 m
\newline 
n
\newline 
 o
\newline 
 p
\newline 
 q
\newline 
 r
\newline 
 s
\newline 
 t
\newline 
 u
\newline 
 v
\newline 
 w
\newline 
 x
\newline 
 y
\newline 
 z
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\end_float 

 The digits are shown in table 
\begin_inset LatexCommand \ref{digits}

\end_inset 

. 
\begin_float tab 

\layout Caption

The digits of Vector Pascal.
\begin_inset LatexCommand \label{digits}

\end_inset 


\layout Standard


\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 10 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

0
\newline 
 1
\newline 
 2
\newline 
 3
\newline 
 4
\newline 
 5
\newline 
 6
\newline 
 7
\newline 
 8
\newline 
 9
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\end_float 

 The special symbols are shown in table
\begin_inset LatexCommand \ref{specials}

\end_inset 

 . 
\begin_float tab 

\layout Caption

Special symbols
\begin_inset LatexCommand \label{specials}

\end_inset 


\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
11 3 0 0 0 0 0 0
1 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

+
\newline 
 :
\newline 
 (
\newline 
-
\newline 
 '
\newline 
 )
\newline 
*
\newline 
 =
\newline 
 [
\newline 
/
\newline 
 <>
\newline 
 ]
\newline 
:=
\newline 
 <
\newline 
 {
\newline 
.
\newline 
 <=
\newline 
 }
\newline 
,
\newline 
 >=
\newline 

\latex latex 
 
\backslash textasciicircum{}
\latex default 

\newline 
;
\newline 
 >
\newline 
 ..
\newline 
+:
\newline 
 @
\newline 
 *)
\newline 
-:
\newline 
 $
\newline 
 (*
\newline 
_
\newline 
 **
\newline 

 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 

\backslash vspace{0.3cm}
\latex default 

\end_float 


\layout Section

Reserved words
\layout Standard


\begin_inset LatexCommand \label{resw}

\end_inset 

 The reserved words are  
\family typewriter 
ABS, ADDR, AND, ARRAY,
\family default 

\layout Standard


\family typewriter 
BEGIN, BYTE2PIXEL,
\family default 

\layout Standard


\family typewriter 
CASE, CAST, CDECL, CHR, CONST, COS,
\family default 

\layout Standard


\family typewriter 
DISPOSE, DIV, DO, DOWNTO,
\family default 

\layout Standard


\family typewriter 
END, ELSE, EXIT, EXTERNAL,
\family default 

\layout Standard


\family typewriter 
FALSE, FILE, FOR, FUNCTION,
\family default 

\layout Standard


\family typewriter 
GOTO,
\family default 

\layout Standard


\family typewriter 
IF, IMPLEMENTATION, IN, INTERFACE, IOTA,
\family default 

\layout Standard


\family typewriter 
LABEL, LIBRARY, LN,
\family default 

\layout Standard


\family typewriter 
MAX, MIN, MOD,
\family default 

\layout Standard


\family typewriter 
NAME, NDX, NEW, NOT,
\family default 

\layout Standard


\family typewriter 
OF, OR, ORD, OTHERWISE,
\family default 

\layout Standard


\family typewriter 
PACKED, PERM, PIXEL2BYTE, POW, PRED,
\family default 

\newline 

\family typewriter 
PROCEDURE, PROGRAM,
\family default 
 
\family typewriter 
PROTECTED ,
\family default 

\layout Standard


\family typewriter 
RDU, READ, READLN, RECORD, REPEAT, ROUND,
\family default 

\layout Standard


\family typewriter 
SET, SHL, SHR, SIN, SIZEOF, STRING, SQRT, SUCC,
\family default 

\layout Standard


\family typewriter 
TAN, THEN, TO, TRANS, TRUE, TYPE,
\family default 

\layout Standard


\family typewriter 
VAR,
\family default 

\layout Standard


\family typewriter 
WITH, WHILE, WRITE, WRITELN,
\family default 
 
\family typewriter 
UNIT, UNTIL, USES 
\family default 
 
\layout Standard

Reserved words may be written in either lower case or upper case letters,
 or any combination of the two.
\layout Section

Comments
\layout Standard

The comment
\begin_inset LatexCommand \index{comment}

\end_inset 

 construct
\layout Standard


\family typewriter 
{
\begin_inset LatexCommand \index{}

\end_inset 


\family default 
 < any sequence of characters not containing 
\begin_inset Quotes eld
\end_inset 

}
\begin_inset Quotes erd
\end_inset 

 > 
\family typewriter 
}
\family default 

\layout Standard

may be inserted between any two identifiers, special symbols, numbers or
 reserved words without altering the semantics or syntactic correctness
 of the program.
 The bracketing pair 
\family typewriter 
(* *)
\begin_inset LatexCommand \index{*)}

\end_inset 


\family default 
 may substitute for 
\family typewriter 
{ }
\family default 
.
 Where a comment starts with 
\family typewriter 
{
\family default 
 it continues until the next 
\family typewriter 
}
\family default 
.
 Where it starts with 
\family typewriter 
(*
\begin_inset LatexCommand \index{(*}

\end_inset 


\family default 
 it must be terminated by 
\family typewriter 
*)
\family default 

\begin_float footnote 

\layout Standard

Note this differs from ISO Pascal which allows a comment starting with { to terminate with *) and vice versa. 
\end_float 

.
\layout Section

Identifiers
\layout Standard

Identifiers are used to name values, storage locations, programs, program
 modules, types, procedures and functions.
 An identifier
\begin_inset LatexCommand \index{identifier}

\end_inset 

 starts with a letter followed by zero or more letters, digits or the special
 symbol 
\family typewriter 
_
\family default 
.
 Case is not significant in identifiers.
\layout Section

Literals
\layout Subsection

Integer numbers
\layout Standard

Integer numbers are formed of a sequence of decimal digits, thus 
\family typewriter 
1
\family default 
, 
\family typewriter 
23
\family default 
, 
\family typewriter 
9976
\family default 
 etc, or as hexadecimal
\begin_inset LatexCommand \index{hexadecimal}

\end_inset 

 numbers, or as numbers of any base between 2 and 36.
 A hexadecimal number takes the form of a 
\family typewriter 
$
\family default 
 followed by a sequence of hexadecimal digits thus 
\family typewriter 
$01, $3ff, $5A
\family default 
.
 The letters in a hexadecimal number may be upper or lower case and drawn
 from the range 
\family typewriter 
a..f
\family default 
 or 
\family typewriter 
A..F. 
\family default 

\layout Standard

A based integer
\begin_inset LatexCommand \index{integer}

\end_inset 

 is written with the base first followed by a # character and then a sequence of letters or digits.
 Thus 
\family typewriter 
2#1101
\family default 
 is a binary number 
\family typewriter 
8#67
\family default 
 an octal
\begin_inset LatexCommand \index{octal}

\end_inset 

 number and 
\family typewriter 
20#7i
\family default 
 a base 20 number.
\layout Standard

The default precision for integers is 32 bits
\begin_float footnote 

\layout Standard

The notation used for grammar definition is a tabularised BNF .
 Each boxed table defines a production, with the production name in the
 left column.
 Each line in the right column is an alternative for the production.
 The metasymbol + indicates one or more repetitions of what immediately
 preceeds it.
 The Kleene star * is used for zero or more repetitions.
 Terminal symbols are in single quotes.
 Sequences in brackets [ ] are optional. 
\end_float 

.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<digit sequence>
\newline 
 <digit> +
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<decimal integer>
\newline 
 <digit sequence>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<hex integer>
\newline 
 `$'<hexdigit>+
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<based integer> 
\newline 
 <digit sequence>'#'<alphanumeric>+
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
3 2 0 0 0 0 0 0
1 0 0 0
0 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<unsigned integer>
\newline 
 <decimal integer>
\newline 

\newline 
 <hex integer>
\newline 

\newline 
 <based integer>
 


\layout Standard


\begin_float tab 

\layout Caption

The hexadecimal digits of Vector Pascal.
\layout Standard


\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
3 17 0 0 0 0 0 0
1 1 0 0
0 1 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

Value
\newline 
 0
\newline 
 1
\newline 
 2
\newline 
 3
\newline 
 4
\newline 
 5
\newline 
 6
\newline 
 7
\newline 
 8
\newline 
 9
\newline 
 10
\newline 
 11
\newline 
 12
\newline 
 13
\newline 
 14
\newline 
 15
\newline 
Notation 1
\newline 
 0
\newline 
 1
\newline 
 2
\newline 
 3
\newline 
 4
\newline 
 5
\newline 
 6
\newline 
 7
\newline 
 8
\newline 
 9
\newline 
 A
\newline 
 B
\newline 
 C
\newline 
 D
\newline 
 E
\newline 
 F
\newline 
Notation 2
\newline 

\newline 

\newline 

\newline 

\newline 

\newline 

\newline 

\newline 

\newline 

\newline 

\newline 
 a
\newline 
 b
\newline 
 c
\newline 
 d
\newline 
 e
\newline 
 f
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 
 . 
\end_float 


\latex latex 
 
\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Subsection

Real numbers
\layout Standard

Real numbers are supported in floating point notation, thus 
\family typewriter 
14.7
\family default 
, 
\family typewriter 

\latex latex 

\backslash  
\latex default 
9.99e5
\family default 
, 
\family typewriter 
38E3,
\family default 

\latex latex 
 
\backslash  {}
\latex default 
 
\family typewriter 
3.6e-4
\family default 
 are all valid denotations for real
\begin_inset LatexCommand \index{real}

\end_inset 

 numbers.
 The default precision for real numbers is also 32 bit, though intermediate
 calculations may use higher precision.
 The choice of 32 bits as the default precision is influenced by the fact
 that 32 bit floating point vector operations are well supported in multi-media
\begin_inset LatexCommand \index{media}

\end_inset 

 instructions.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
2 2 0 0 0 0 0 0
1 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<exp>
\newline 
 `e'
\newline 

\newline 
 `E'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<scale factor>
\newline 
 [<sign>] <unsigned integer>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
2 2 0 0 0 0 0 0
1 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<sign>
\newline 
 `-'
\newline 

\newline 
 `+'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
3 2 0 0 0 0 0 0
1 0 0 0
0 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<unsigned real>
\newline 
 <decimal integer> `.' <digit sequence>
\newline 

\newline 
 <decimal integer>` .' <digit sequence> <exp><scale factor> 
\newline 

\newline 
 <decimal integer><exp> <scale factor>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Subsubsection

Fixed point numbers
\layout Standard

In Vector Pascal pixels
\begin_inset LatexCommand \index{pixels}

\end_inset 

 are represented as signed fixed point fractions in the range -1.0 to 1.0.
 Within this range, fixed point literals have the same syntactic form as
 real numbers.
\layout Subsection

Character strings
\layout Standard

Sequences of characters enclosed by quotes are called literal
\begin_inset LatexCommand \index{literal}

\end_inset 

 strings.
 Literal strings
\begin_inset LatexCommand \index{strings}

\end_inset 

 consisting of a single character are constants of the standard type char.
 If the string is to contain a quote character this quote character must
 be written twice.
\layout Standard


\size small 

\family typewriter 
'A' 'x' 'hello' 'John
\begin_inset Quotes erd
\end_inset 

s house'
\size default

\family default 

\size small 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout Standard

are all valid literal strings.
 The allowable characters in literal strings are any of the 7 bit printable
 ISO characters.
\layout Chapter

Declarations
\layout Standard

Vector Pascal is a language supporting nested declaration
\begin_inset LatexCommand \index{declaration}

\end_inset 

 contexts.
 A declaration context is either a program context, and unit interface or
 implementation context, or a procedure or function context.
 A resolution context determines the meaning of an identifier.
 Within a resolution context, identifiers can be declared to stand for constants
,
 types, variables, procedures or functions.
 When an identifier is used, the meaning taken on by the identifier is that
 given in the closest containing resolution context.
 Resolution contexts are any declaration context or a 
\family typewriter 
with
\family default 
 statement context.
 The ordering of these contexts when resolving an identifier is:
\layout Enumerate

The declaration context identified by any 
\family typewriter 
with
\family default 
 statements which nest the current occurrence of the identifier.
 These 
\family typewriter 
with
\family default 
 statement contexts are searched from the innermost to the outermost. 
\layout Enumerate

The declaration context of the currently nested procedure
\begin_inset LatexCommand \index{procedure}

\end_inset 

 declarations.
 These procedure contexts are searched from the innermost to the outermost.
 
\layout Enumerate

The declaration context of the current unit
\begin_inset LatexCommand \index{unit}

\end_inset 

 or program
\begin_inset LatexCommand \index{program}

\end_inset 

. 
\layout Enumerate

The interface declaration contexts of the units mentioned in the use list
 of the current unit or program.
 These contexts are searched from the rightmost unit mentioned in the use
 list to the leftmost identifier in the use list. 
\layout Enumerate

The interface declaration context of the System
\begin_inset LatexCommand \index{System}

\end_inset 

 unit. 
\layout Enumerate

The pre-declared identifiers of the language. 
\layout Section

Constants
\layout Standard

A constant definition introduces an identifier as a synonym for a constant.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
2 2 0 0 0 0 0 0
1 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<constant declaration>
\newline 
 <identifier>=<expression>
\newline 

\newline 
 <identifier>':'<type>'='<typed constant>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

Constants can be simple constants or typed constants.
 A simple constant must be a constant expression whose value is known at
 compile time.
 This restricts it to expressions for which all component identifiers are
 other constants, and for which the permitted operators
\begin_inset LatexCommand \index{operators}

\end_inset 

 are given in table
\begin_inset LatexCommand \ref{MMConst}

\end_inset 

 .
 This restricts simple constants to be of scalar or string types.
\layout Standard


\begin_float tab 

\layout Caption

The operators permitted in Vector Pascal constant expressions.
\begin_inset LatexCommand \label{MMConst}

\end_inset 


\layout Standard


\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 10 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

+
\newline 
 -
\newline 
 *
\newline 
 /
\newline 
 div
\newline 
 mod
\newline 
 shr
\newline 
 shl
\newline 
 and
\newline 
 or
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\end_float 

 Typed constants provide the program with initialised variables which may
 hold array types.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
2 2 0 0 0 0 0 0
1 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<typed constant>
\newline 
 <expression>
\newline 

\newline 
 <array constant>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Subsection

Array constants
\layout Standard

Array constants are comma separated lists of constant expressions enclosed
 by brackets.
 Thus
\layout Standard


\family typewriter 
tr:array[1..3] of real =(1.0,1.0,2.0);
\family default 

\layout Standard

is a valid array constant declaration, as is:
\layout Standard


\size small 

\family typewriter 
t2:array[1..2,1..3] of real=((1.0,2.0,4.0),(1.0,3.0,9.0));
\family default 

\size default

\layout Standard

The array constant
\begin_inset LatexCommand \index{constant}

\end_inset 


\begin_inset LatexCommand \index{array constant}

\end_inset 

 must structurally match the type
\begin_inset LatexCommand \index{type}

\end_inset 

 given to the identifier.
 That is to say it must match with respect to number of dimensions, length
 of each dimension, and type of the array elements.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<array constant>
\newline 
 '(' <typed constant> [,<typed constant>]* ')'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Subsection

Pre-declared constants
\begin_inset LatexCommand \index{constants}

\end_inset 


\layout List

\labelwidthstring 00.00.0000

\family typewriter 
maxint
\begin_inset LatexCommand \index{maxint}

\end_inset 


\family default 
 The largest supported integer value. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
pi
\begin_inset LatexCommand \index{pi}

\end_inset 


\family default 
 A real numbered approximation to 
\begin_inset Formula \(  \pi  \)
\end_inset 


\layout List

\labelwidthstring 00.00.0000

\family typewriter 
maxchar
\begin_inset LatexCommand \index{maxchar}

\end_inset 


\family default 
 The highest character in the character set. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
maxstring
\begin_inset LatexCommand \index{maxstring}

\end_inset 


\family default 
 The maximum number of characters allowed in a string. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
maxreal
\begin_inset LatexCommand \index{maxreal}

\end_inset 


\family default 
 The highest representable real. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
minreal
\begin_inset LatexCommand \index{minreal}

\end_inset 


\family default 
 The smallest representable positive real number. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
epsreal
\begin_inset LatexCommand \index{epsreal}

\end_inset 


\family default 
 The smallest real number which when added to 1.0 yields a value distinguishable
 from 1.0. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
maxdouble
\begin_inset LatexCommand \index{maxdouble}

\end_inset 


\family default 
 The highest representable double precision real number. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
mindouble
\begin_inset LatexCommand \index{mindouble}

\end_inset 


\family default 
 The smallest representable positive double precision real number. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
complexzero
\begin_inset LatexCommand \index{complexzero}

\end_inset 


\family default 
 A complex number with zero real and imaginary parts. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
complexone
\family default 

\begin_inset LatexCommand \index{complexone}

\end_inset 

 A complex number with real part 1 and imaginary part 0. 
\layout Section

Labels
\layout Standard

Labels are written as digit sequences.
 Labels must be declared before they are used.
 They can be used to label the start of a statement and can be the destination
 of a 
\family typewriter 
goto
\begin_inset LatexCommand \index{goto}

\end_inset 


\family default 
 statement.
 A 
\family typewriter 
goto
\family default 
 statement must have as its destination a label
\begin_inset LatexCommand \index{label}

\end_inset 

 declared within the current innermost declaration context.
 A statement can be prefixed by a label followed by a colon.
\layout Standard

Example
\layout Standard


\family typewriter 
label 99;
\family default 

\layout Standard


\family typewriter 
begin read(x); if x>9 goto 99; write(x*2);99: end;
\family default 

\layout Section

Types
\layout Standard

A type declaration determines the set of values that expressions of this
 type may assume and associates with this set an identifier.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
3 2 0 0 0 0 0 0
1 0 0 0
0 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<type>
\newline 
 <simple type>
\newline 

\newline 
 <structured type>
\newline 

\newline 
 <pointer type>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<type definition>
\newline 
 <identifier>'='<type> 
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Subsection

Simple types
\layout Standard

Simple types are either scalar, standard, subrange or dimensioned types.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
5 2 0 0 0 0 0 0
1 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<simple type>
\newline 
 <scalar type>
\newline 

\newline 
 <integral type>
\newline 

\newline 
 <subrange type>
\newline 

\newline 
 <dimensioned type>
\newline 

\newline 
 <floating point type>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Subsubsection

Scalar types
\layout Standard

A scalar
\begin_inset LatexCommand \index{scalar}

\end_inset 

 type
\begin_inset LatexCommand \index{type}

\end_inset 

 defines an ordered set of identifier by listing these identifiers.
 The declaration takes the form of a comma separated list of identifiers
 enclosed by brackets.
 The identifiers in the list are declared simultaneously with the declared
 scalar type to be constants of this declared scalar type.
 Thus 
\latex latex 

\backslash begin{verbatim}
\newline 
colour = (red,green,blue);
\newline 
day=(monday,tuesday,wednesday,thursday,
\newline 
     friday,saturday,sunday);
\newline 

\backslash end{verbatim}
\latex default 
 are valid scalar type declarations.
\layout Subsubsection

Standard types
\layout Standard


\begin_inset LatexCommand \label{auxtypes}

\end_inset 


\layout Standard

The following types are provided as standard in Vector Pascal: 
\begin_float tab 

\layout Caption

Categorisation of the standard types.
\layout Standard


\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
11 2 0 0 0 0 0 0
1 2 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

type
\newline 
 category
\newline 
real
\newline 
 floating point
\newline 
double
\newline 
 floating point
\newline 
byte
\newline 
 integral
\newline 
pixel
\newline 
 fixed point
\newline 
shortint
\newline 
 integral
\newline 
word
\newline 
 integral
\newline 
integer
\newline 
 integral
\newline 
cardinal
\newline 
 integral
\newline 
boolean
\newline 
 scalar
\newline 
char
\newline 
 scalar
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\end_float 


\layout List

\labelwidthstring 00.00.0000

\family typewriter 
integer
\begin_inset LatexCommand \index{integer}

\end_inset 


\family default 
 The numbers are in the range -maxint to +maxint. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
real
\begin_inset LatexCommand \index{real}

\end_inset 


\family default 
 These are a subset of the reals constrained by the IEEE 32 bit floating
 point format. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
double
\begin_inset LatexCommand \index{double}

\end_inset 


\family default 
 These are a subset of the real numbers constrained by the IEEE
\begin_inset LatexCommand \index{IEEE}

\end_inset 

 64 bit floating point format. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
pixel
\begin_inset LatexCommand \index{pixel}

\end_inset 


\family default 
 These are represented as fixed
\begin_inset LatexCommand \index{fixed}

\end_inset 

 point
\begin_inset LatexCommand \index{point}

\end_inset 

 binary
\begin_inset LatexCommand \index{binary}

\end_inset 

 fractions
\begin_inset LatexCommand \index{fractions}

\end_inset 

 in the range -1.0 to 1.0. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
boolean
\begin_inset LatexCommand \index{boolean}

\end_inset 


\family default 
 These take on the values 
\family typewriter 
(false
\begin_inset LatexCommand \index{false}

\end_inset 

,true
\begin_inset LatexCommand \index{true}

\end_inset 

)
\family default 
 which are ordered such that 
\family typewriter 
true<false
\family default 
. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
char
\begin_inset LatexCommand \index{char}

\end_inset 


\family default 
 These include the characters from 
\family typewriter 
chr(0)
\family default 
 to 
\family typewriter 
charmax
\family default 

\begin_inset LatexCommand \index{charmax}

\end_inset 

.
 All the allowed characters for string literals are in the type char, but
 the character-set may include other characters whose printable form is
 country specific. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
pchar
\family default 

\begin_inset LatexCommand \index{pchar}

\end_inset 

 Defined as 
\family typewriter 

\latex latex 

\backslash textasciicircum{}
\latex default 
char
\family default 
. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
byte
\begin_inset LatexCommand \index{byte}

\end_inset 


\family default 
 These take on the positive integers between 0 and 255. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
shortint
\begin_inset LatexCommand \index{shortint}

\end_inset 


\family default 
 These take on the signed values between -128 and 127. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
word
\begin_inset LatexCommand \index{word}

\end_inset 


\family default 
 These take on the positive integers from 0 to 65535. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
cardinal
\begin_inset LatexCommand \index{cardinal}

\end_inset 


\family default 
 These take on the positive integers form 0 to 4292967295, i.e., the most
 that can be represented in a 32 bit unsigned number. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
longint
\begin_inset LatexCommand \index{longint}

\end_inset 


\family default 
 A 32 bit integer, retained for compatibility with Turbo Pascal. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
int
\begin_inset LatexCommand \index{int64}

\end_inset 

64
\family default 
 A 64 bit integer. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
complex
\begin_inset LatexCommand \index{complex}

\end_inset 


\family default 
 A complex number with the real and imaginary parts held to 32 bit precision.
 
\layout Subsubsection

Subrange types
\layout Standard

A type may be declared as a subrange
\begin_inset LatexCommand \index{subrange}

\end_inset 

 of another scalar
\begin_inset LatexCommand \index{scalar}

\end_inset 

 or integer
\begin_inset LatexCommand \index{integer}

\end_inset 

 type by indicating the largest and smallest value in the subrange.
 These values must be constants known at compile time.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<subrange type>
\newline 
 <constant> '..' <constant>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

Examples: 1..10, 'a'..'f', monday..thursday.
\layout Subsubsection

Pixels
\layout Standard

The 
\emph on 
conceptual model
\emph default 
 of pixels in Vector Pascal is that they are real numbers in the range 
\begin_inset Formula \(  -1.0..1.0 \)
\end_inset 

.
 As a signed representation it lends itself to subtraction.
 As an unbiased representation, it makes the adjustment of contrast easier.
 For example, one can reduce contrast 50% simply by multiplying an image by 0.5 
\begin_float footnote 

\layout Standard

When pixels are represented as integers in the range 0..255, a 50% contrast reduction has to be expressed as 
\begin_inset Formula \(  ((p-128)\div 2)+128 \)
\end_inset 

. 
\end_float 

.
 Assignment to pixel variables in Vector Pascal is defined to be saturating
 - real numbers outside the range 
\begin_inset Formula \(  -1..1 \)
\end_inset 

 are clipped to it.
 The multiplications involved in convolution operations fall naturally into
 place.
\layout Standard

The 
\emph on 
implementation model
\emph default 
 of pixels used in Vector Pascal is of 8 bit signed integers treated as
 fixed point binary fractions.
 All the conversions necessary to preserve the monotonicity of addition,
 the range of multiplication etc, are delegated to the code generator which,
 where possible, will implement the semantics using efficient, saturated
 multi-media arithmetic instructions.
\layout Subsubsection

Dimensioned types
\layout Standard

These provide a means by which floating point types can be specialised to
 represent dimensioned numbers as is required in physics calculations.
 For example:
\layout Standard


\family typewriter 
kms =(mass,distance,time);
\family default 

\layout Standard


\family typewriter 
meter=real of distance;
\family default 

\layout Standard


\family typewriter 
kilo=real of mass;
\family default 

\layout Standard


\family typewriter 
second=real of time;
\family default 

\layout Standard


\family typewriter 
newton=real of mass * distance * time POW -2;
\family default 

\layout Standard


\family typewriter 
meterpersecond = real of distance *time POW -1;
\family default 

\layout Standard

The grammar is given by:
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<dimensioned type>
\newline 
 <real type> <dimension >['*' <dimension>]*
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
2 2 0 0 0 0 0 0
1 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<real type>
\newline 
 'real'
\newline 

\newline 
 'double'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<dimension>
\newline 
 <identifier> ['POW' [<sign>] <unsigned integer>]
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

The identifier
\begin_inset LatexCommand \index{identifier}

\end_inset 

 must be a member of a scalar type, and that scalar type is then referred
 to as the basis space of the dimensioned type.
 The identifiers of the basis
\begin_inset LatexCommand \index{basis}

\end_inset 

 space are referred to as the dimensions of the dimensioned type
\begin_inset LatexCommand \index{type}

\end_inset 

.
 Associated with each dimension of a dimensioned type there is an integer
 number referred to as the power of that dimension.
 This is either introduced explicitly at type declaration time, or determined
 implicitly for the dimensional type of expressions.
\layout Standard

A value of a dimensioned type is a dimensioned value.
 Let 
\begin_inset Formula \(  \log _{d}t \)
\end_inset 

 of a dimensioned type 
\begin_inset Formula \(  t \)
\end_inset 

 be the power to which the dimension 
\begin_inset Formula \(  d \)
\end_inset 

 of type 
\begin_inset Formula \(  t \)
\end_inset 

 is raised.
 Thus for 
\begin_inset Formula \(  t= \)
\end_inset 

newton in the example above, and 
\begin_inset Formula \(  d= \)
\end_inset 

time, 
\begin_inset Formula \(  \log _{d}t=-2 \)
\end_inset 


\layout Standard

If 
\begin_inset Formula \(  x \)
\end_inset 

 and 
\begin_inset Formula \(  y \)
\end_inset 

 are values of dimensioned
\begin_inset LatexCommand \index{dimensioned}

\end_inset 

 types 
\begin_inset Formula \(  t_{x} \)
\end_inset 

and 
\begin_inset Formula \(  t_{y} \)
\end_inset 

respectively, then the following operators are only permissible if 
\begin_inset Formula \(  t_{x}=t_{y} \)
\end_inset 


\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 8 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

+
\newline 
 -
\newline 
 <
\newline 
 >
\newline 
 <>
\newline 
 =
\newline 
 <=
\newline 
 >=
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

For + and -, the dimensional
\begin_inset LatexCommand \index{dimensional}

\end_inset 

 type of the result is the same as that of the arguments.
 The operations
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

*
\newline 
 /
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

are permitted if the types 
\begin_inset Formula \(  t_{x} \)
\end_inset 

and 
\begin_inset Formula \(  t_{y} \)
\end_inset 

 share the same basis space, or if the basis space of one of the types is
 a subrange of the basis space of the other.
\layout Standard

The operation 
\family typewriter 
POW
\family default 
 is permitted between dimensioned types and integers.
\layout Paragraph*

Dimension deduction rules
\layout Enumerate

If 
\begin_inset Formula \(  x=y*z \)
\end_inset 

 for 
\begin_inset Formula \(  x:t_{1},y:t_{2},z:t_{3} \)
\end_inset 

 with basis space 
\begin_inset Formula \(  B \)
\end_inset 

 then
\begin_deeper 
\layout Description


\begin_inset Formula \(  \forall _{d\in B}\log _{d}t_{1}=\log _{d}t_{2}+\log _{d}t_{3} \)
\end_inset 

. 
\protected_separator 

\end_deeper 
\layout Enumerate

If 
\begin_inset Formula \(  x=y/z \)
\end_inset 

 for 
\begin_inset Formula \(  x:t_{1},y:t_{2},z:t_{3} \)
\end_inset 

 with basis space 
\begin_inset Formula \(  B \)
\end_inset 

 then
\begin_deeper 
\layout Description


\begin_inset Formula \(  \forall _{d\in B}\log _{d}t_{1}=\log _{d}t_{2}-\log _{d}t_{3} \)
\end_inset 

. 
\protected_separator 

\end_deeper 
\layout Enumerate

If 
\begin_inset Formula \(  x=y \)
\end_inset 

 
\family typewriter 
POW
\family default 
 
\begin_inset Formula \(  z \)
\end_inset 

 for 
\begin_inset Formula \(  x:t_{1},y:t_{2},z:integer \)
\end_inset 

 with basis space for 
\begin_inset Formula \(  t_{2} \)
\end_inset 

, 
\begin_inset Formula \(  B \)
\end_inset 

 then
\begin_deeper 
\layout Description


\begin_inset Formula \(  \forall _{d\in B}\log _{d}t_{1}=\log _{d}t_{2}\times z \)
\end_inset 

. 
\protected_separator 

\end_deeper 
\layout Subsection

Structured types
\layout Subsubsection

Static Array
\begin_inset LatexCommand \index{array}

\end_inset 


\begin_inset LatexCommand \index{array, static}

\end_inset 

 types
\layout Standard

An array type is a structure consisting of a fixed number of elements all
 of which are the same type.
 The type of the elements is referred to as the element type.
 The elements of an array value are indicated by bracketed indexing expressions.
 The definition of an array
\begin_inset LatexCommand \index{array}

\end_inset 

 type
\begin_inset LatexCommand \index{type}

\end_inset 

 simultaneously defines the permitted type of indexing expression and the
 element type.
\layout Standard

The index
\begin_inset LatexCommand \index{index}

\end_inset 

 type
\begin_inset LatexCommand \index{type}

\end_inset 

 of a static
\begin_inset LatexCommand \index{static}

\end_inset 

 array
\begin_inset LatexCommand \index{array, static}

\end_inset 

 must be a scalar
\begin_inset LatexCommand \index{scalar}

\end_inset 

 or subrange
\begin_inset LatexCommand \index{subrange}

\end_inset 

 type.
 This implies that the bounds of a static array are known at compile time.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<array type>
\newline 
 'array' '[' <index type>[,<index type>]* ']' 'of' <type>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
3 2 0 0 0 0 0 0
1 0 0 0
0 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<index type>
\newline 
 <subrange type>
\newline 

\newline 
 <scalar type>
\newline 

\newline 
 <integral type>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

Examples
\layout Standard


\family typewriter 
array[colour] of boolean;
\family default 

\layout Standard


\family typewriter 
array[1..100] of integer;
\family default 

\layout Standard


\family typewriter 
array[1..2,4..6] of byte;
\family default 

\layout Standard


\family typewriter 
array[1..2] of array[4..6] of byte;
\family default 

\layout Standard

The notation [
\emph on 
b,c
\emph default 
] in an array declaration is shorthand for the notation [
\emph on 
b
\emph default 
] 
\family typewriter 
of array
\family default 
 [ 
\emph on 
c
\emph default 
 ].
 The number of dimensions of an array type is referred to as its rank.
 Scalar types have rank 0.
\layout Subsubsection

String types
\layout Standard

A string
\begin_inset LatexCommand \index{string}

\end_inset 

 type denotes the set of all sequences of characters up to some finite length
 and must have the syntactic form:
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
2 2 0 0 0 0 0 0
1 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<string-type>
\newline 
 'string[' <integer constant>']'
\newline 

\newline 
 'string'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

the integer constant indicates the maximum number of characters that may
 be held in the string type.
 The maximum number of characters that can be held in any string is indicated
 by the pre-declared constant 
\family typewriter 
maxstring
\family default 
.
 The type 
\family typewriter 
string
\family default 
 is shorthand for 
\family typewriter 
string[maxstring]
\family default 
.
\layout Subsubsection

Record types
\layout Standard

A record type defines a set of similar data structures.
 Each member of this set, a record instance, is a Cartesian product of number
 of components or 
\emph on 
fields
\emph default 
 specified in the record
\begin_inset LatexCommand \index{record}

\end_inset 

 type definition.
 Each field has an identifier and a type.
 The scope of these identifiers is the record itself.
\layout Standard

A record type may have as a final component a 
\emph on 
variant
\begin_inset LatexCommand \index{variant}

\end_inset 

 part
\emph default 
.
 The variant part, if a variant part exists, is a union of several variants,
 each of which may itself be a Cartesian product of a set of fields.
 If a variant part exists there may be a tag field whose value indicates
 which variant is assumed by the record instance.
\layout Standard

All field identifiers even if they occur within different variant parts,
 must be unique within the record type.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<record type>
\newline 
 'record' <field list> 'end'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
3 2 0 0 0 0 0 0
1 0 0 0
0 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<field list>
\newline 
 <fixed part>
\newline 

\newline 
 <fixed part>';' <variant part>
\newline 

\newline 
 <variant part>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<fixed part>
\newline 
 <record section> [ ';' <record section.]*
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
2 2 0 0 0 0 0 0
1 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<record section>
\newline 
 <identifier>[',' <identifier>]* ':' <type>
\newline 

\newline 
 <empty>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<variant part>
\newline 
 'case' [<tag field> ':'] <type identifier> 'of'<variant>[';' <variant>]*
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
2 2 0 0 0 0 0 0
1 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<variant>
\newline 
 <constant> [',' <constant>]*':' '(' <field list> ')'
\newline 

\newline 
 <empty>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Subsubsection

Set types
\layout Standard

A set
\begin_inset LatexCommand \index{set}

\end_inset 

 type defines the range of values which is the power-set of its base type.
 The base type must be a scalar type, a character type, integer type or
 a subrange thereof.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<set type>
\newline 
 'set' 'of' <base type>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Subsection

Dynamic
\begin_inset LatexCommand \index{Dynamic}

\end_inset 

 types
\layout Standard

Variables declared within the program are accessed by their identifier.
 These variables exist throughout the existence of the scope within which
 they are declared, be this unit, program or procedure.
 These variables are assigned storage locations whose addresses, either
 absolute or relative to some register, can be determined at compile time.
 Such locations a referred to as static
\begin_inset LatexCommand \index{static}

\end_inset 


\begin_float footnote 

\layout Standard

The Pascal concept of static variables should not be equated with the notion
 of static variables in some other languages such as C or Java.
 In Pascal a variable is considered static if its offset either relative
 to the stack base or relative to the start of the global segment can be
 determined at compile/link time.
 In C a variable is static only if its location relative to the start of
 the global segment is known at compile time. 
\end_float 

.
 Storage locations may also be allocated dynamically.
 Given a type 
\family typewriter 
t
\family default 
, the type of a pointer
\begin_inset LatexCommand \index{pointer}

\end_inset 

 to an instance of type 
\family typewriter 
t
\family default 
 is 
\family typewriter 

\latex latex 

\backslash textasciicircum{}
\latex default 
t
\family default 
.
\layout Standard

A pointer of type 
\family typewriter 

\latex latex 

\backslash textasciicircum{}
\latex default 
t
\family default 
 can be initialised to point to a new store location of type t by use of
 the built in procedure 
\family typewriter 
new
\family default 
.
 Thus if 
\family typewriter 
p:
\latex latex 

\backslash textasciicircum{}
\latex default 
t
\family default 
,
\layout Standard


\family typewriter 
new(p);
\family default 

\layout Standard

causes 
\family typewriter 
p
\family default 
 to point at a store location of type 
\family typewriter 
t
\family default 
.
\layout Subsubsection*

Pointers to dynamic
\begin_inset LatexCommand \index{dynamic}

\end_inset 


\begin_inset LatexCommand \index{dynamic array}

\end_inset 

 arrays
\begin_inset LatexCommand \index{array, dynamic}

\end_inset 


\begin_inset LatexCommand \index{array}

\end_inset 


\layout Standard

The types pointed to by pointer types can be any of the types mentioned
 so far, that is to say, any of the types allowed for static
\begin_inset LatexCommand \index{static}

\end_inset 

 variables.
 In addition however, pointer types can be declared to point at dynamic
 arrays.
 A dynamic array is an array whose bounds are determined at run time.
\layout Standard

Pascal
\begin_inset LatexCommand \index{Pascal90}

\end_inset 

 90
\begin_inset LatexCommand \cite{ISO90}

\end_inset 

 introduced the notion of schematic or parameterised types as a means of
 creating dynamic arrays.
 Thus where 
\family typewriter 
r
\family default 
 is some integral or ordinal type one can write
\layout Standard


\family typewriter 
type z(a,b:r)=array[a..b] of t;
\family default 

\layout Standard

If 
\family typewriter 
p:
\latex latex 

\backslash textasciicircum{}
\latex default 
z
\family default 
, then
\layout Standard


\family typewriter 
new(p,n,m)
\family default 

\layout Standard

where 
\family typewriter 
n,m:r
\family default 
 initialises 
\family typewriter 
p
\family default 
 to point to an array of bounds 
\family typewriter 
n..m
\family default 
.
 The bounds of the array can then be accessed as 
\family typewriter 
p
\latex latex 

\backslash textasciicircum{}
\latex default 
.a, p
\latex latex 

\backslash textasciicircum{}
\latex default 
.b
\family default 
.
 Vector Pascal currently allows dynamic but not static
\begin_inset LatexCommand \index{static}

\end_inset 

 parameterised types.
\layout Section

File types
\layout Standard

A type may be declared to be a file of a type.
 This form of definition is kept only for backward compatibility.
 All file types are treated as being equivalent.
 A file type corresponds to a handle to an operating system file.
 A file variable must be associated with the operating system file by using
 the procedures 
\family typewriter 
assign, rewrite, append
\family default 
, and 
\family typewriter 
reset
\family default 
 provided by the system unit.
 A pre-declared file type 
\family typewriter 
text
\family default 
 exists.
\layout Section

Variables
\begin_inset LatexCommand \index{Variables}

\end_inset 


\layout Standard

Variable declarations consist of a list of identifiers denoting the new
 variables, followed by their types.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<variable declaration>
\newline 
 <identifier> [',' <identifier>]* ':' <type><extmod>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

Variables are abstractions over values.
 They can be either simple identifiers, components or ranges of components
 of arrays, fields of records or referenced dynamic variables.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
5 2 0 0 0 0 0 0
1 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<variable>
\newline 
 <identifier>
\newline 

\newline 
 <indexed variable>
\newline 

\newline 
 <indexed range>
\newline 

\newline 
 <field designator>
\newline 

\newline 
 <referenced variable>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

Examples
\layout Standard


\family typewriter 
x,y:real;
\family default 

\layout Standard


\family typewriter 
i:integer;
\family default 

\layout Standard


\family typewriter 
point:
\latex latex 

\backslash textasciicircum{}
\latex default 
real;
\family default 

\layout Standard


\family typewriter 
dataset:array[1..n]of integer;
\family default 

\layout Standard


\family typewriter 
twoDdata:array[1..n,4..7] of real;
\family default 

\layout Subsection

External Variables
\layout Standard

A variable may be declared to be external by appending the external modifier.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<extmod>
\newline 
 ';' 'external' 'name' <stringlit>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

This indicates that the variable is declared in a non Vector Pascal external
 library.
 The name by which the variable is known in the external library is specified
 in a string literal.
\layout Standard

Example
\layout Standard


\family typewriter 
count:integer; external name '_count';
\family default 

\layout Subsection

Entire Variables
\layout Standard


\begin_inset LatexCommand \label{entire}

\end_inset 


\layout Standard

An entire variable is denoted by its identifier.
 Examples 
\family typewriter 
x,y,point
\family default 
,
\layout Subsection

Indexed Variables
\layout Standard

A component of an 
\emph on 
n
\emph default 
 dimensional array variable is denoted by the variable followed by 
\emph on 
n
\emph default 
 index expressions in brackets.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<indexed variable>
\newline 
 <variable>'[' <expression>[','<expression>]* ']'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

The type of the indexing expression must conform to the index type of the
 array variable.
 The type of the indexed variable is the component type of the array.
\layout Standard

Examples
\layout Standard


\family typewriter 
twoDdata[2,6]
\family default 

\layout Standard


\family typewriter 
dataset[i]
\family default 

\layout Standard

Given the declaration
\layout Standard


\family typewriter 
a=array[p] of q
\family default 

\layout Standard

then the elements of arrays of type 
\family typewriter 
a
\family default 
, will have type 
\family typewriter 
q
\family default 
 and will be identified by indices
\begin_inset LatexCommand \index{indices}

\end_inset 

 of type 
\family typewriter 
p
\family default 
 thus:
\layout Standard


\family typewriter 
b[i]
\family default 

\layout Standard

where 
\family typewriter 
i:p
\family default 
, 
\family typewriter 
b:a
\family default 
.
\layout Standard

Given the declaration
\layout Standard


\family typewriter 
z = string[x]
\family default 

\layout Standard

for some integer x 
\family typewriter 

\begin_inset Formula \(  \leq  \)
\end_inset 

maxstring
\family default 
, then the characters within strings
\begin_inset LatexCommand \index{strings}

\end_inset 

 of type 
\family typewriter 
z
\family default 
 will be identified by indices in the range 
\family typewriter 
1..x,
\family default 
 thus:
\layout Standard


\family typewriter 
y[j]
\family default 

\layout Standard

where 
\family typewriter 
y:z
\family default 
, 
\family typewriter 
j:1..x
\family default 
.
\layout Subsection

Indexed Ranges
\layout Standard

A range of components of an array variable are denoted by the variable followed
 by a range expression in brackets.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<indexed range>
\newline 
 <variable> '[' <range expression>[',' <range expression>]* ']'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<range expression>
\newline 
 <expression> '..' <expression>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

The expressions within the range
\begin_inset LatexCommand \index{range}

\end_inset 

 expression must conform to the index type of the array variable.
 The type of a range expression 
\family typewriter 
a[i..j]
\family default 
 where 
\family typewriter 
a: array[p..q] of t
\family default 
 is 
\family typewriter 
array[0..j-i] of t.
\family default 

\layout Standard

Examples:
\layout Standard


\family typewriter 
dataset[i..i+2]:=blank;
\family default 

\layout Standard


\family typewriter 
twoDdata[2..3,5..6]:=twoDdata[4..5,11..12]*0.5;
\family default 

\layout Standard

Subranges
\begin_inset LatexCommand \index{Subranges}

\end_inset 

 may be passed in as actual parameters to procedures whose corresponding
 formal parameters
\begin_inset LatexCommand \index{parameters}

\end_inset 

 are declared as variables of a schematic
\begin_inset LatexCommand \index{schematic}

\end_inset 

 type.
 Hence given the following declarations:
\layout Standard


\family typewriter 
type image(miny,maxy,minx,maxx:integer)=array[miny..maxy,minx..maxx] of byte;
\family default 

\layout Standard


\family typewriter 
procedure invert(var im:image);begin im:=255-im; end;
\family default 

\layout Standard


\family typewriter 
var screen:array[0..319,0..199] of byte;
\family default 

\layout Standard

then the following statement would be valid:
\layout Standard


\family typewriter 
invert(screen[40..60,20..30]);
\family default 

\layout Subsection

Virtual
\begin_inset LatexCommand \index{Virtual}

\end_inset 

 array variables
\layout Standard

If an array
\begin_inset LatexCommand \index{array}

\end_inset 

 variable occurs on the right hand side of an assignment statement, there
 is a further form of indexing possible.
 An array may be indexed by another array.
 If 
\family typewriter 
x:array[t0] of t1
\family default 
 and 
\family typewriter 
y:array[t1] of t2
\family default 
, then 
\family typewriter 
y[x]
\family default 
 denotes the virtual array of type 
\family typewriter 
array[t0] of t2
\family default 
 such that 
\family typewriter 
y[x][i]=y[x[i]]
\family default 
.
 This construct is useful for performing permutations.
 To fully understand the following example refer to sections 
\begin_inset LatexCommand \ref{iota}

\end_inset 

,
\begin_inset LatexCommand \ref{manimplicitindices}

\end_inset 

.
\layout Paragraph

Example
\layout Standard

Given the declarations
\layout Standard


\family typewriter 
const perm:array[0..3] of integer=(3,1,2,0);
\family default 

\layout Standard


\family typewriter 
var ma,m0:array[0..3] of integer; 
\family default 

\layout Standard

then the statements
\layout Standard


\family typewriter 
m0:= (iota 0)+1;
\family default 

\layout Standard


\family typewriter 
write('m0=');for j:=0 to 3 do write(m0[j]);writeln;
\family default 

\layout Standard


\family typewriter 
ma:=m0[perm]; 
\family default 

\layout Standard


\family typewriter 
write('perm=');for j:=0 to 3 do write(perm[j]);writeln; 
\family default 

\layout Standard


\family typewriter 
writeln('ma:=m0[perm]');for j:=0 to 3 do write(ma[j]);writeln;
\family default 

\layout Standard

would produce the output
\layout LyX-Code

m0=
\protected_separator 
1
\protected_separator 
2
\protected_separator 
3
\protected_separator 
4
\layout LyX-Code

perm=
\protected_separator 

\protected_separator 
3
\protected_separator 
1
\protected_separator 
2
\protected_separator 
0
\protected_separator 

\layout LyX-Code

ma:=m0[perm]
\protected_separator 

\layout LyX-Code

4
\protected_separator 
2
\protected_separator 
3
\protected_separator 
1 
\layout Subsection

Field
\begin_inset LatexCommand \index{Field}

\end_inset 

 Designators
\layout Standard

A component of an instance of a record type, or the parameters of an instance
 of a schematic type are denoted by the record or schematic type instance
 followed by the field or parameter name.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<field designator>
\newline 
 <variable>'.'<identifier>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Subsection

Referenced Variables
\begin_inset LatexCommand \index{Variables}

\end_inset 


\layout Standard

If 
\family typewriter 
p:
\latex latex 

\backslash textasciicircum{}
\latex default 
t
\family default 
, then 
\family typewriter 
p
\latex latex 

\backslash textasciicircum{}
\latex default 

\family default 
 denotes the dynamic variable of type 
\family typewriter 
t
\family default 
 referenced by 
\family typewriter 
p
\family default 
.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<referenced variable>
\newline 
 <variable> '
\latex latex 

\backslash textasciicircum{}
\latex default 
'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Section

Procedures and Functions
\layout Standard

Procedure and function declarations allow algorithms to be identified by
 name and have arguments associated with them so that they may be invoked
 by procedure statements or function calls.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<procedure declaration>
\newline 
 <procedure heading>';'[<proc tail>]
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
3 3 0 0 0 0 0 0
1 2 0 0
0 1 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<proc tail>
\newline 
 'forward'
\newline 
 must be followed by definition of procedure body
\newline 

\newline 
 'external'
\newline 
 imports a non Pascal procedure
\newline 

\newline 
 <block>
\newline 
 procedure implemented here
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<paramlist>
\newline 
 '('<formal parameter section>[';'<formal parameter section>]*')'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
2 2 0 0 0 0 0 0
1 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<procedure heading> 
\newline 
 'procedure' <identifier> [<paramlist>]
\newline 

\newline 
 'function'<identifier> [<paramlist>]':'<type>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<formal parameter section>
\newline 
 ['var']<identifier>[','<identifier>]':'<type>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

The parameters declared in the procedure heading are local to the scope
 of the procedure.
 The parameters in the procedure heading are termed formal
\begin_inset LatexCommand \index{formal parameter}

\end_inset 

 parameters.
 If the identifiers in a formal parameter section are preceded by the word
 
\family typewriter 
var
\family default 
, then the formal parameters are termed variable parameters.
 The block
\begin_float footnote 

\layout Standard

see section 
\begin_inset LatexCommand \ref{block}

\end_inset 

. 
\end_float 

 of a procedure or function constitutes a scope local to its executable
 compound statement.
 Within a function declaration there must be at least one statement assigning
 a value to the function identifier.
 This assignment determines the result of a function, but assignment to
 this identifier does not cause an immediate return from the function.
\layout Standard

Function return values can be scalars, pointers, records, strings or sets.
 Arrays may not be returned from a function.
\layout Paragraph

Examples
\layout Standard

The function sba is the mirror image of the abs function.
\layout Standard


\family typewriter 
function sba(i:integer):integer; 
\family default 

\layout Standard


\family typewriter 
begin if i>o then sba:=-i else sba:=i end;
\family default 

\layout Standard


\family typewriter 
type stack:array[0..100] of integer;
\family default 

\layout Standard


\family typewriter 
procedure push(var s:stack;i:integer);
\family default 

\layout Standard


\family typewriter 
begin s[s[0]]:=i;s[0]:=s[0]+1; end;
\family default 

\layout Chapter

Algorithms
\layout Section

Expressions
\begin_inset LatexCommand \index{Expressions}

\end_inset 


\layout Standard

An expression is a rule for computing a value by the application of operators
 and functions to other values.
 These operators can be 
\emph on 
monadic
\emph default 
 - taking a single argument, or 
\emph on 
dyadic
\emph default 
 - taking two arguments.
\layout Subsection

Mixed type expressions
\layout Standard

The arithmetic operators are defined over the base types integer and real.
 If a dyadic operator that can take either real
\begin_inset LatexCommand \index{real}

\end_inset 

 or integer
\begin_inset LatexCommand \index{integer}

\end_inset 

 arguments is applied to arguments one of which is an integer and the other
 a real, the integer argument is first implicitly converted to a real before
 the operator is applied.
 Similarly, if a dyadic operator is applied to two integral numbers of different
 precision, the number of lower precision is initially converted to the
 higher precisions, and the result is of the higher precision.
 Higher precision of types 
\emph on 
t,u
\emph default 
 is defined such that the type with the greater precision is the one which
 can represent the largest range of numbers.
 Hence reals
\begin_inset LatexCommand \index{reals}

\end_inset 

 are taken to be higher precision than longints even though the number of
 significant bits in a real may be less than in a longint.
\layout Standard

When performing mixed type arithmetic between pixels and another numeric
 data type, the values of both types are converted to reals before the arithmeti
c
 is performed.
 If the result of such a mixed type expression is subsequently assigned
 to a pixel
\begin_inset LatexCommand \index{pixel}

\end_inset 

 variable, all values greater than 1.0 are mapped to 1.0 and all values
 below -1.0 are mapped to -1.0.
\layout Subsection

Primary expressions
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
10 2 0 0 0 0 0 0
1 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<primary expression> 
\newline 
 '(' <expression> ')'
\newline 

\newline 
 <literal string>
\newline 

\newline 
 'true'
\newline 

\newline 
 'false'
\newline 

\newline 
 <unsigned integer>
\newline 

\newline 
 <unsigned real>
\newline 

\newline 
 <variable>
\newline 

\newline 
 <constant id>
\newline 

\newline 
 <function call>
\newline 

\newline 
 <set construction>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

The most primitive expressions are instances of the literals defined in
 the language: literal strings, boolean literals, literal reals and literal
 integers.
 'Salerno', 
\family typewriter 
true
\family default 
, 12, $ea8f, 1.2e9 are all primary expressions.
 The next level of abstraction is provided by symbolic identifiers for values.
 
\family typewriter 
X
\family default 
, 
\family typewriter 
left
\family default 
, 
\family typewriter 
a.max
\family default 
, 
\family typewriter 
p
\latex latex 

\backslash textasciicircum{}
\latex default 
.next
\family default 
, 
\family typewriter 
z[1]
\family default 
, 
\family typewriter 
image[4..200,100..150]
\family default 
 are all primary expressions provided that the identifiers have been declared
 as variables or constants.
\layout Standard

An expression surrounded by brackets 
\family typewriter 
( )
\family default 
 is also a primary expression.
 Thus if 
\emph on 
e
\emph default 
 is an expression so is 
\family typewriter 
(
\family default 
 
\emph on 
e
\emph default 
 
\family typewriter 
)
\family default 
.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<function call>
\newline 
 <function id> [ '(' <expression> [,<expression>]* ')' ]
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
2 2 0 0 0 0 0 0
1 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<element>
\newline 
 <expression>
\newline 

\newline 
 <range expression>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

Let 
\emph on 
e
\emph default 
 be an expression of type 
\begin_inset Formula \(  t_{1} \)
\end_inset 

 and if 
\family typewriter 
f
\family default 
 is an identifier of type 
\family typewriter 
function
\begin_inset LatexCommand \index{function}

\end_inset 

(
\begin_inset Formula \(  t_{1} \)
\end_inset 

 ):
\begin_inset Formula \(  t_{2} \)
\end_inset 


\family default 
, then 
\family typewriter 
f(
\family default 
 
\emph on 
e
\emph default 
 
\family typewriter 
)
\family default 
 is a primary expression of type 
\begin_inset Formula \(  t_{2} \)
\end_inset 

.
 A function which takes no parameters is invoked without following its identifie
r
 by brackets.
 It will be an error if any of the actual parameters supplied to a function
 are incompatible with the formal parameters declared for the function.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<set construction>
\newline 
 '[' [<element>[,<element>]*] ']'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

Finally a primary expression may be a set construction.
 A set construction is written as a sequence of zero or more elements enclosed
 in brackets 
\family typewriter 
[ ]
\family default 
 and separated by commas.
 The elements themselves are either expressions evaluating to single values
 or range expressions denoting a sequence of consecutive values.
 The type of a set construction is deduced by the compiler from the context
 in which it occurs.
 A set construction occurring on the right hand side of an assignment inherits
 the type of the variable to which it is being assigned.
 The following are all valid set constructions:
\layout Standard


\family typewriter 
[], [1..9], [z..j,9], [a,b,c,]
\family default 

\layout Standard


\family typewriter 
[]
\family default 
 denotes the empty set.
\layout Subsection

Unary expressions
\layout Standard

A unary expression is formed by applying a unary operator to another unary
 or primary expression.
 The unary operators supported are 
\family typewriter 
+, -, *, /, div
\begin_inset LatexCommand \index{div}

\end_inset 

, mod
\begin_inset LatexCommand \index{mod}

\end_inset 

, and
\begin_inset LatexCommand \index{and}

\end_inset 

, or
\begin_inset LatexCommand \index{or}

\end_inset 

, not
\begin_inset LatexCommand \index{not}

\end_inset 

, round
\begin_inset LatexCommand \index{round}

\end_inset 

, sqrt
\begin_inset LatexCommand \index{sqrt}

\end_inset 

, sin
\begin_inset LatexCommand \index{sin}

\end_inset 

, cos
\begin_inset LatexCommand \index{cos}

\end_inset 

, tan
\begin_inset LatexCommand \index{tan}

\end_inset 

, abs
\begin_inset LatexCommand \index{abs}

\end_inset 

, ln
\begin_inset LatexCommand \index{ln}

\end_inset 

, ord
\begin_inset LatexCommand \index{ord}

\end_inset 

, chr
\begin_inset LatexCommand \index{chr}

\end_inset 

, byte2pixel
\begin_inset LatexCommand \index{pixel}

\end_inset 

, pixel2byte
\begin_inset LatexCommand \index{byte}

\end_inset 

, succ
\begin_inset LatexCommand \index{succ}

\end_inset 

, pred
\begin_inset LatexCommand \index{pred}

\end_inset 

, iota
\begin_inset LatexCommand \index{iota}

\end_inset 

, trans
\begin_inset LatexCommand \index{trans}

\end_inset 

, addr
\begin_inset LatexCommand \index{addr}

\end_inset 


\family default 
 and 
\family typewriter 
@
\family default 

\begin_inset LatexCommand \index{@}

\end_inset 

.
\layout Standard

Thus the following are valid unary expressions
\family typewriter 
: -1
\family default 
, 
\family typewriter 
+b, not true
\family default 
, 
\family typewriter 
sqrt abs x
\family default 
, 
\family typewriter 
sin theta.
\family default 

\begin_inset LatexCommand \label{primfns}

\end_inset 

 In standard Pascal some of these operators are treated as functions,.
 Syntactically this means that their arguments must be enclosed in brackets,
 as in 
\family typewriter 
sin(theta)
\family default 
.
 This usage remains syntactically correct in Vector Pascal.
\layout Standard

The dyadic operators 
\family typewriter 
+, -, *, /, div, mod , and or
\family default 
 are all extended to unary context by the insertion of an implicit value
 under the operation.
 Thus just as 
\family typewriter 
-a = 0-a
\family default 
 so too 
\family typewriter 
/2 = 1/2
\family default 
.
 For sets the notation 
\family typewriter 
-s
\family default 
 means the complement of the set 
\family typewriter 
s
\family default 
.
 The implicit value inserted are given below.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
10 3 0 0 0 0 0 0
1 2 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

type
\newline 
 operator
\family typewriter 
s
\family default 

\newline 
 
\family typewriter 
implicit value
\family default 

\newline 

\family typewriter 
number
\family default 

\newline 
 
\family typewriter 
+,-
\family default 

\newline 
 0
\newline 
string
\newline 
 
\family typewriter 
+
\family default 

\newline 
 
\begin_inset Quotes erd
\end_inset 


\newline 
set
\begin_inset LatexCommand \index{set}

\end_inset 


\newline 
 
\family typewriter 
+
\family default 

\newline 
 empty set
\newline 
set
\newline 
 
\family typewriter 
-,*
\family default 

\newline 
 full-set
\newline 
number
\newline 
 
\family typewriter 
*,/ ,div,mod
\family default 

\newline 
 1
\newline 
number
\newline 
 
\family typewriter 
max
\family default 

\newline 
 lowest representable number of the type
\newline 
number
\newline 
 
\family typewriter 
min
\family default 

\newline 
 highest representable number of the type
\newline 
boolean
\begin_inset LatexCommand \index{boolean}

\end_inset 


\newline 
 
\family typewriter 
and
\family default 

\newline 
 true
\newline 
boolean
\newline 
 
\family typewriter 
or
\family default 

\newline 
 false
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

A unary operator can be applied to an array
\begin_inset LatexCommand \index{array}

\end_inset 

 argument and returns an array result.
 Similarly any user declared function over a scalar
\begin_inset LatexCommand \index{scalar}

\end_inset 

 type can be applied to an array type and return an array.
 If 
\family typewriter 
f
\family default 
 is a function or unary operator mapping from type 
\family typewriter 
r
\family default 
 to type 
\family typewriter 
t
\family default 
 then if 
\family typewriter 
x
\family default 
 is an array of 
\family typewriter 
r,
\family default 
 and 
\family typewriter 
a
\family default 
 an array of 
\family typewriter 
t
\family default 
, then 
\family typewriter 
a:=f(x)
\family default 
 assigns an array of 
\family typewriter 
t
\family default 
 such that 
\family typewriter 
a[i]=f(x[i])
\family default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
33 3 0 0 0 0 0 0
1 1 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 2 "" ""
2 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""
0 2 1 1 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 2 0 1 0 0 0 "" ""


\size small 
lhs 
\size default

\newline 
 
\size small 
rhs
\size default

\newline 
 
\size small 
meaning
\size default

\newline 

\size small 
<unaryop>
\size default

\newline 
 
\size small 
'+'
\size default

\newline 
 
\size small 
+x = 0+x identity operator
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'-'
\size default

\newline 
 
\size small 
-x = 0-x, 
\size default

\newline 

\newline 

\newline 
 
\size small 
note: this is defined on integer, real and complex
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'*'
\size default

\newline 
 
\size small 
*x=1*x identity operator
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'/'
\size default

\newline 
 
\size small 
/x=1.0/x 
\size default

\newline 

\newline 

\newline 
 
\size small 
note: this is defined on integer, real and complex
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'div'
\size default

\newline 
 
\size small 
div x =1 div x
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'mod'
\size default

\newline 
 
\size small 
mod x = 1 mod x
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'and'
\size default

\newline 
 
\size small 
and x = true and x
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'or'
\size default

\newline 
 
\size small 
or x = false or x
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'not'
\size default

\newline 
 
\size small 
complements booleans
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'round'
\size default

\newline 
 
\size small 
rounds a real to the closest integer
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'sqrt'
\size default

\newline 
 
\size small 
returns square root as a real
\begin_inset LatexCommand \index{real}

\end_inset 

 number.
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'sin'
\size default

\newline 
 
\size small 
sine of its argument.
 Argument in radians.
 Result is real.
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'cos'
\size default

\newline 
 
\size small 
cosine of its argument.
 Argument in radians.
 Result is real.
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'tan'
\size default

\newline 
 
\size small 
tangent of its argument.
 Argument in radians.
 Result is real.
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'abs'
\size default

\newline 
 
\size small 
if x<0 then abs x = -x else abs x= x
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'ln'
\size default

\newline 
 
\size small 

\begin_inset Formula \(  \log _{e} \)
\end_inset 

 of its argument.
 Result is real.
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'ord'
\size default

\newline 
 
\size small 
argument scalar type, returns ordinal 
\size default

\newline 

\newline 

\newline 
 
\size small 
number of the argument.
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'chr'
\size default

\newline 
 
\size small 
converts an integer
\begin_inset LatexCommand \index{integer}

\end_inset 

 into a character
\begin_inset LatexCommand \index{character}

\end_inset 

.
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'succ'
\size default

\newline 
 
\size small 
argument scalar type,
\size default

\newline 

\newline 

\newline 
 
\size small 
returns the next scalar in the type.
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'pred'
\size default

\newline 
 
\size small 
argument scalar type, 
\size default

\newline 

\newline 

\newline 
 
\size small 
returns the previous scalar in the type.
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'iota'
\size default

\newline 
 
\size small 
iota i returns the ith current index
\begin_inset LatexCommand \index{index}

\end_inset 


\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'trans'
\size default

\newline 
 
\size small 
transposes a matrix
\begin_inset LatexCommand \index{matrix}

\end_inset 

 or vector
\begin_inset LatexCommand \index{vector}

\end_inset 


\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'pixel2byte'
\size default

\newline 
 
\size small 
convert pixel in range -1.0..1.0 to byte in range 0..255
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'byte2pixel'
\size default

\newline 
 
\size small 
convert a byte in range 0..255 to a pixel in
\size default

\newline 

\newline 

\newline 
 
\size small 
the range -1.0..1.0
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'@','addr'
\size default

\newline 
 
\size small 
Given a variable, this returns an
\size default

\newline 

\newline 

\newline 
 
\size small 
untyped pointer
\begin_inset LatexCommand \index{pointer}

\end_inset 

 to the variable.
\size default

 


\layout Standard


\size small 

\latex latex 

\backslash par{}
\latex default 

\size default

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
5 2 0 0 0 0 0 0
1 0 0 0
0 0 0 0
0 0 0 0
0 1 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<unary expression>
\newline 
 <unaryop> <unary expression>
\newline 

\newline 
 'sizeof' '(' <type> ')'
\newline 

\newline 
 <operator reduction>
\newline 

\newline 
 <primary expression>
\newline 

\newline 
 'if'<expression> 'then' <expression> 'else' <expression>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Subsubsection

sizeof
\layout Standard

The construct 
\family typewriter 
sizeof
\begin_inset LatexCommand \index{sizeof}

\end_inset 

(
\family default 
 
\emph on 
t
\emph default 
 
\family typewriter 
)
\family default 
 where 
\emph on 
t
\emph default 
 is a type, returns the number of bytes
\begin_inset LatexCommand \index{bytes}

\end_inset 

 occupied by an instance of the type.
\layout Subsubsection

iota
\begin_inset LatexCommand \label{iota}

\end_inset 


\layout Standard

The operator iota i returns the ith current implicit index
\begin_float footnote 

\layout Standard

See section 
\begin_inset LatexCommand \ref{manimplicitindices}

\end_inset 

. 
\end_float 

.
\layout Paragraph

Examples
\layout Standard

Thus given the definitions
\layout Standard


\family typewriter 
var v1:array[1..3]of integer; 
\family default 

\layout Standard


\family typewriter 
v2:array[0..4] of integer;
\family default 

\layout Standard

then the program fragment
\layout Standard


\family typewriter 
v1:=iota 0;
\family default 

\layout Standard


\family typewriter 
v2:=iota 0 *2;
\family default 

\family default 

\layout Standard


\family typewriter 
for i:=1 to 3 do write( v1[i]); writeln; 
\family default 

\layout Standard


\family typewriter 
writeln('v2'); 
\family default 

\layout Standard


\family typewriter 
for i:=0 to 4 do write( v2[i]); writeln; 
\family default 

\layout Standard

would produce the output
\layout LyX-Code

v1
\layout LyX-Code

1
\protected_separator 
2
\protected_separator 
3
\protected_separator 

\layout LyX-Code

v2
\protected_separator 

\layout LyX-Code

0
\protected_separator 
2
\protected_separator 
4
\protected_separator 
6
\protected_separator 
8 
\layout Standard

whilst given the definitions
\layout Standard


\family typewriter 
m1:array[1..3,0..4] of integer;m2:array[0..4,1..3]of integer;
\family default 

\layout Standard

then the program fragment
\layout Standard


\family typewriter 
m2:= iota 0 +2*iota 1; 
\family default 

\layout Standard


\family typewriter 
writeln('m2:= iota 0 +2*iota 1 '); 
\family default 

\layout Standard


\family typewriter 
for i:=0 to 4 do begin for j:=1 to 3 do write(m2[i,j]); writeln; end; 
\family default 

\layout Standard

would produce the output
\layout LyX-Code

m2:=
\protected_separator 
iota
\protected_separator 
0
\protected_separator 
+2*iota
\protected_separator 
1
\protected_separator 

\layout LyX-Code

2
\protected_separator 
4
\protected_separator 
6
\protected_separator 

\layout LyX-Code

3
\protected_separator 
5
\protected_separator 
7
\protected_separator 

\layout LyX-Code

4
\protected_separator 
6
\protected_separator 
8
\protected_separator 

\layout LyX-Code

5
\protected_separator 
7
\protected_separator 
9
\protected_separator 

\layout LyX-Code

6
\protected_separator 
8
\protected_separator 
10
\protected_separator 

\protected_separator 

\layout Standard

The argument to 
\family typewriter 
iota
\family default 

\begin_inset LatexCommand \index{iota}

\end_inset 

 must be an integer known at compile time within the range of implicit indices
 in the current context.
 The reserved word 
\family typewriter 
ndx
\begin_inset LatexCommand \index{ndx}

\end_inset 


\family default 
 is a synonym for 
\family typewriter 
iota
\family default 
.
\layout Paragraph

perm
\layout Standard

A generalised permutation of the implicit indices is performed using the
 syntactic form:
\layout Quote


\family typewriter 
perm
\family default 

\family typewriter 
[
\family default 

\family typewriter 

\shape italic 
index-sel[,index-sel]* ]expression 
\shape default 

\family default 

\layout Standard

The 
\shape italic 
index-sel
\shape default 
s are integers known at compile time which specify a permutation on the
 implicit indices.
 Thus in 
\begin_inset Formula \(  e \)
\end_inset 

 evaluated in context 
\family typewriter 
perm
\family default 

\family typewriter 
[
\begin_inset Formula \(  i,j,k \)
\end_inset 

]
\begin_inset Formula \(  e \)
\end_inset 


\family default 
, then:
\layout Quote


\family typewriter 
iota 0 = iota
\family default 
 
\family typewriter 

\begin_inset Formula \(  i, \)
\end_inset 


\family default 
 
\family typewriter 
iota 1= iota
\family default 
 
\family typewriter 

\begin_inset Formula \(  j, \)
\end_inset 


\family default 
 
\family typewriter 
iota 2= iota
\family default 
 
\family typewriter 

\begin_inset Formula \(  k \)
\end_inset 


\family default 

\layout Standard

This is particularly useful in converting between different image formats.
 Hardware frame buffers typically represent images with the pixels in the
 red, green, blue, and alpha channels adjacent in memory.
 For image processing it is convenient to hold them in distinct planes.
 The 
\family typewriter 
perm
\family default 
 operator provides a concise notation for translation between these formats:
 
\latex latex 

\backslash begin{verbatim}
\newline 
type rowindex=0..479;
\newline 
     colindex=0..639;
\newline 
var channel=red..alpha;
\newline 
    screen:array[rowindex,colindex,channel] of pixel;
\newline 
    img:array[channel,colindex,rowindex] of pixel;
\newline 
...
\newline 
screen:=perm[2,0,1]img;
\newline 

\backslash end{verbatim}
\latex default 

\layout Standard


\family typewriter 
trans
\begin_inset LatexCommand \index{trans}

\end_inset 


\family default 
 and 
\family typewriter 
diag
\family default 
 
\begin_inset LatexCommand \label{diag}

\end_inset 

 provide shorthand notions for expressions in terms of 
\family typewriter 
perm
\family default 

\begin_inset LatexCommand \index{perm}

\end_inset 

.
 Thus in an assignment context of rank 2, 
\family typewriter 
trans = perm[1,0]
\family default 
 and 
\family typewriter 
diag = perm[0,0]
\family default 
.
\layout Subsubsection

trans
\layout Standard

The operator trans
\begin_inset LatexCommand \index{trans}

\end_inset 

 transposes a vector or matrix.
 It achieves this by cyclic rotation of the implicit indices
\begin_inset LatexCommand \index{indices}

\end_inset 


\begin_inset LatexCommand \index{implicit indices}

\end_inset 

.
 Thus if 
\family typewriter 
trans
\family default 
 
\emph on 
e
\emph default 
 is evaluated in a context with implicit indices
\layout Standard


\family typewriter 
iota
\family default 
 
\emph on 
0
\emph default 
.. 
\family typewriter 
iota
\family default 
 
\emph on 
n 
\emph default 

\layout Standard

then the expression e is evaluated in a context with implicit indices
\layout Standard


\family typewriter 
iota
\family default 
'
\emph on 
0
\emph default 
.. 
\family typewriter 
iota
\family default 
'
\emph on 
n
\emph default 

\layout Standard

where
\layout Standard


\family typewriter 
iota
\family default 
'
\emph on 
x
\emph default 
 = 
\family typewriter 
iota
\family default 
 ( (
\emph on 
x+1
\emph default 
)
\family typewriter 
mod
\family default 
 
\emph on 
n+1
\emph default 
)
\layout Standard

It should be noted that transposition is generalised to arrays of rank greater
 than 2.
\layout Paragraph

Examples
\layout Standard

Given the definitions used above in section 
\begin_inset LatexCommand \ref{iota}

\end_inset 

, the program fragment:
\layout Standard


\family typewriter 
m1:= (trans v1)*v2; 
\family default 

\layout Standard


\family typewriter 
writeln('(trans v1)*v2'); 
\family default 

\layout Standard


\family typewriter 
for i:=1 to 3 do begin for j:=0 to 4 do write(m1[i,j]); writeln; end; 
\family default 

\layout Standard


\family typewriter 
m2 := trans m1; 
\family default 

\layout Standard


\family typewriter 
writeln('transpose 1..3,0..4 matrix'); 
\family default 

\layout Standard


\family typewriter 
for i:=0 to 4 do begin for j:=1 to 3 do write(m2[i,j]); writeln; end;
\family default 

\layout Standard

will produce the output:
\layout LyX-Code

(trans
\protected_separator 
v1)*v2
\protected_separator 

\layout LyX-Code

0
\protected_separator 

\protected_separator 
2
\protected_separator 

\protected_separator 
4
\protected_separator 

\protected_separator 
6
\protected_separator 

\protected_separator 
8
\protected_separator 

\layout LyX-Code

0
\protected_separator 

\protected_separator 
4
\protected_separator 

\protected_separator 
8
\protected_separator 
12
\protected_separator 
16
\protected_separator 

\layout LyX-Code

0
\protected_separator 

\protected_separator 
6
\protected_separator 
12
\protected_separator 
18
\protected_separator 
24
\protected_separator 

\layout LyX-Code

transpose
\protected_separator 
1..3,0..4
\protected_separator 
matrix
\protected_separator 

\layout LyX-Code

0
\protected_separator 

\protected_separator 
0
\protected_separator 

\protected_separator 
0
\protected_separator 

\layout LyX-Code

2
\protected_separator 

\protected_separator 
4
\protected_separator 

\protected_separator 
6
\protected_separator 

\layout LyX-Code

4
\protected_separator 

\protected_separator 
8
\protected_separator 
12
\protected_separator 

\layout LyX-Code

6
\protected_separator 
12
\protected_separator 
18
\protected_separator 

\layout LyX-Code

8
\protected_separator 
16
\protected_separator 
24 
\layout Subsection

Operator Reduction
\layout Standard

Any dyadic operator can be converted to a monadic
\begin_inset LatexCommand \index{monadic}

\end_inset 

 reduction
\begin_inset LatexCommand \index{reduction}

\end_inset 

 operator by the functional 
\backslash 
.
 Thus if 
\family typewriter 
a
\family default 
 is an array, 
\family typewriter 

\backslash 
+a
\family default 
 denotes the sum over the array.
 More generally 
\begin_inset Formula \(  \setminus \Phi x \)
\end_inset 

 for some dyadic operator 
\begin_inset Formula \(  \Phi  \)
\end_inset 

 means 
\begin_inset Formula \(  x_{0}\Phi (x_{1}\Phi ..(x_{n}\Phi \iota )) \)
\end_inset 

 where 
\begin_inset Formula \(  \iota  \)
\end_inset 

 is the implicit value given the operator and the type.
 Thus we can write 
\backslash 
+ for 
\begin_inset Formula \(  \sum  \)
\end_inset 

, 
\backslash 
* for 
\begin_inset Formula \(  \prod  \)
\end_inset 

 etc.
 The dot product of two vectors can thus be written as
\layout Standard


\family typewriter 
x:= 
\backslash 
+ y*z;
\family default 

\layout Standard

instead of
\layout Standard


\family typewriter 
x:=0;
\family default 

\layout Standard


\family typewriter 
for i:=0 to n do x:= x+ y[i]*z[i];
\family default 

\layout Standard

A reduction operation takes an argument of rank
\begin_inset LatexCommand \index{rank}

\end_inset 

 
\emph on 
r
\emph default 
 and returns an argument of rank 
\emph on 
r-1
\emph default 
 except in the case where its argument is of rank 0, in which case it acts
 as the identity operation.
 Reduction is always performed along the last array
\begin_inset LatexCommand \index{array}

\end_inset 

 dimension
\begin_inset LatexCommand \index{dimension}

\end_inset 

 of its argument.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<operator reduction>
\newline 
 '
\backslash 
'<dyadic op> <multiplicative expression>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
3 2 0 0 0 0 0 0
1 0 0 0
0 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<dyadic op>
\newline 
 <expop>
\newline 

\newline 
 <multop>
\newline 

\newline 
 <addop>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

The reserved word 
\family typewriter 
rdu
\begin_inset LatexCommand \index{rdu}

\end_inset 


\family default 
 is available as a lexical alternative to 
\backslash 
, so 
\backslash 
+ is equivalent to 
\family typewriter 
rdu
\family default 
+.
\layout Subsection

Complex conversion
\layout Standard

Complex
\begin_inset LatexCommand \index{Complex}

\end_inset 

 numbers can be produced from reals using the function 
\family typewriter 
cmplx
\family default 

\begin_inset LatexCommand \index{cmplx}

\end_inset 

. 
\family typewriter 
cmplx(
\family default 

\emph on 
re,im
\emph default 

\family typewriter 
)
\family default 
 is the complex number with real part 
\emph on 
re
\emph default 
, and imaginaray part 
\emph on 
im
\emph default 
.
\layout Standard

The real and imaginary parts of a complex number can be obtained by the
 functions 
\family typewriter 
re
\family default 
 and 
\family typewriter 
im
\family default 
. 
\family typewriter 
re
\family default 
(
\emph on 
c
\emph default 
) is the real part of the complex number 
\emph on 
c
\emph default 
. 
\family typewriter 
im
\family default 
(
\emph on 
c
\emph default 
) is the imaginary part of the complex number 
\emph on 
c
\emph default 
.
\layout Subsection

Conditional expressions
\layout Standard

The conditional expression allows two different values to be returned depenent
 upon a boolean expression.
\layout Standard


\latex latex 

\backslash begin{verbatim}
\newline 
var a:array[0..63] of real;
\newline 
... 
\newline 

\newline 
a:=if a>0 then a else -a; 
\newline 

\newline 
...
\newline 

\backslash end{verbatim}
\latex default 

\layout Standard

The 
\family typewriter 
if
\family default 
 expression can be compiled in two ways:
\layout Enumerate

Where the two arms of the if expression are parallelisable, the condition
 and both arms are evaluated and then merged under a boolean mask.
 Thus, the above assignment would be equivalent to:
\begin_deeper 
\layout Standard


\family typewriter 
a:= (a and (a
\begin_inset Formula \(  > \)
\end_inset 

0))or(not (a
\begin_inset Formula \(  > \)
\end_inset 

0) and -a);
\family default 

\layout Standard

were the above legal Pascal
\begin_float footnote 

\layout Standard

This compilation strategy requires that true is equivalent to -1 and false
 to 0.
 This is typically the representation of booleans returned by vector comparison
 instructions on SIMD instruction sets.
 In Vector Pascal this representation is used generally and in consequence,
 
\family typewriter 
true
\family default 

\begin_inset Formula \(  < \)
\end_inset 


\family typewriter 
false
\family default 
. 
\end_float 

.
\end_deeper 
\layout Enumerate

If the code is not paralleliseable it is translated as equivalent to a standard
 if statement.
 Thus, the previous example would be equivalent to:
\begin_deeper 
\layout Standard


\family typewriter 
for i:=0 to 63 do if a[i]
\begin_inset Formula \(  > \)
\end_inset 

0 then a[i]:=a[i] else a[i]:=-a[i];
\family default 

\layout Standard

Expressions are non parallelisable if they include function calls.
\end_deeper 
\layout Standard

The dual compilation strategy allows the same linguistic construct to be
 used in recursive function definitions and parallel data selection.
\layout Subsection

Factor
\begin_inset LatexCommand \index{Factor}

\end_inset 


\layout Standard

A factor is an expression that optionally performs exponentiation.
 Vector Pascal supports exponentiation either by integer exponents or by
 real exponents.
 A number 
\emph on 
x
\emph default 
 can be raised to an integral power 
\emph on 
y
\emph default 
 by using the construction 
\emph on 
x
\emph default 
 
\family typewriter 
pow
\begin_inset LatexCommand \index{pow}

\end_inset 


\family default 
 
\emph on 
y
\emph default 
.
 A number can be raised to an arbitrary real power by the 
\family typewriter 
**
\family default 
 operator.
 The result of 
\family typewriter 
**
\begin_inset LatexCommand \index{**}

\end_inset 


\family default 
 is always real valued.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
2 2 0 0 0 0 0 0
1 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<expop>
\newline 
 'pow'
\newline 

\newline 
 '**'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<factor>
\newline 
 <unary expression> [ <expop> <unary expression>]
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Subsection

Multiplicative expressions
\layout Standard

Multiplicative expressions consist of factors linked by the multiplicative
 operators 
\family typewriter 
*, /, div
\begin_inset LatexCommand \index{div}

\end_inset 

, mod
\begin_inset LatexCommand \index{mod}

\end_inset 

, shr
\begin_inset LatexCommand \index{shr}

\end_inset 

, shl
\begin_inset LatexCommand \index{shl}

\end_inset 

 and
\family default 

\begin_inset LatexCommand \index{and}

\end_inset 

.
 The use of these operators is summarised in table 
\begin_inset LatexCommand \ref{multop}

\end_inset 

.
\layout Standard


\begin_float tab 

\layout Caption

Multiplicative operators
\begin_inset LatexCommand \label{multop}

\end_inset 


\layout Standard


\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
13 5 0 0 0 0 0 0
0 1 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 1 0 0
8 0 0 "" ""
8 0 0 "" ""
8 0 0 "" ""
8 0 0 "" ""
8 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

 
\size small 
Operator
\size default

\newline 
 
\size small 
Left
\size default

\newline 
 
\size small 
Right
\size default

\newline 
 
\size small 
Result
\size default

\newline 
 
\size small 
Effect of
\size default
 
\emph on 

\size small 
a
\size default

\emph default 
 
\family typewriter 

\size small 
op
\size default

\family default 
 
\emph on 

\size small 
b
\size default

\emph default 

\size small 

\size default

\newline 

\family typewriter 

\size small 
*
\size default

\family default 

\size small 

\size default

\newline 
 
\size small 
integer
\size default

\newline 
 
\size small 
integer
\size default

\newline 
 
\size small 
integer
\size default

\newline 
 
\size small 
multiply
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
real
\size default

\newline 
 
\size small 
real
\size default

\newline 
 
\size small 
real
\size default

\newline 
 
\size small 
multiply
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
complex
\size default

\newline 
 
\size small 
complex
\size default

\newline 
 
\size small 
complex
\size default

\newline 
 
\size small 
multiply
\size default

\newline 
 
\family typewriter 

\size small 
/
\size default

\family default 

\size small 

\size default

\newline 
 
\size small 
integer
\size default

\newline 
 
\size small 
integer
\size default

\newline 
 
\size small 
real
\size default

\newline 
 
\size small 
division
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
real
\size default

\newline 
 
\size small 
real
\size default

\newline 
 
\size small 
real
\size default

\newline 
 
\size small 
division
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
complex
\size default

\newline 
 
\size small 
complex
\size default

\newline 
 
\size small 
complex
\size default

\newline 
 
\size small 
division
\size default

\newline 
 
\family typewriter 

\size small 
div
\size default

\family default 

\size small 

\size default

\newline 
 
\size small 
integer
\size default

\newline 
 
\size small 
integer
\size default

\newline 
 
\size small 
integer
\size default

\newline 
 
\size small 
division
\size default

\newline 
 
\family typewriter 

\size small 
mod
\size default

\family default 

\size small 

\size default

\newline 
 
\size small 
integer
\size default

\newline 
 
\size small 
integer
\size default

\newline 
 
\size small 
integer
\size default

\newline 
 
\size small 
remainder
\size default

\newline 
 
\family typewriter 

\size small 
and
\size default

\family default 

\size small 

\size default

\newline 
 
\size small 
boolean
\size default

\newline 
 
\size small 
boolean
\size default

\newline 
 
\size small 
boolean
\size default

\newline 
 
\size small 
logical and
\size default

\newline 
 
\family typewriter 

\size small 
shr
\size default

\family default 

\size small 

\size default

\newline 
 
\size small 
integer
\size default

\newline 
 
\size small 
integer
\size default

\newline 
 
\size small 
integer
\size default

\newline 
 
\size small 
shift
\size default
 
\emph on 

\size small 
a
\size default

\emph default 
 
\size small 
by
\size default
 
\emph on 

\size small 
b
\size default

\emph default 
 
\size small 
bits right
\size default

\newline 
 
\family typewriter 

\size small 
shl
\size default

\family default 

\size small 

\size default

\newline 
 
\size small 
integer
\size default

\newline 
 
\size small 
integer
\size default

\newline 
 
\size small 
integer
\size default

\newline 
 
\size small 
shift
\size default
 
\emph on 

\size small 
a
\size default

\emph default 
 
\size small 
by
\size default
 
\emph on 

\size small 
b
\size default

\emph default 
 
\size small 
bits left
\size default

\newline 
 
\family typewriter 

\size small 
in
\size default

\family default 

\size small 

\size default

\newline 
 
\emph on 

\size small 
t
\size default

\emph default 

\size small 

\size default

\newline 
 
\family typewriter 

\size small 
set of
\size default

\family default 
 
\emph on 

\size small 
t
\size default

\emph default 

\size small 

\size default

\newline 
 
\size small 
boolean
\size default

\newline 
 
\size small 
true if
\size default
 
\emph on 

\size small 
a
\size default

\emph default 
 
\size small 
is member of
\size default
 
\emph on 

\size small 
b
\size default

\emph default 

 


\layout Standard


\size small 

\latex latex 

\backslash par{}
\latex default 

\size default

\end_float 


\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
7 2 0 0 0 0 0 0
1 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<multop>
\newline 
 '*'
\newline 

\newline 
 '/'
\newline 

\newline 
 'div'
\newline 

\newline 
 'shr'
\newline 

\newline 
 'shl'
\newline 

\newline 
 'and'
\newline 

\newline 
 'mod'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
2 2 0 0 0 0 0 0
1 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<multiplicative expression>
\newline 
 <factor> [ <multop> <factor> ]*
\newline 

\newline 
 <factor>'in'<multiplicative expression>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Subsection

Additive expressions
\layout Standard

An additive expression allows multiplicative expressions to be combined
 using the addition operators 
\family typewriter 
+
\begin_inset LatexCommand \index{+}

\end_inset 

, -
\begin_inset LatexCommand \index{-}

\end_inset 

, or, +:
\begin_inset LatexCommand \index{+:}

\end_inset 


\begin_inset LatexCommand \index{or}

\end_inset 

,max
\begin_inset LatexCommand \index{max}

\end_inset 

, min
\begin_inset LatexCommand \index{min}

\end_inset 

, -:
\family default 

\begin_inset LatexCommand \index{-:}

\end_inset 

, 
\latex latex 

\backslash verb+><+
\latex default 

\begin_inset LatexCommand \index{
\latex latex 

\backslash verb+><+
\latex default 
}

\end_inset 

.
 The additive operations are summarised in table
\begin_inset LatexCommand \ref{addops}

\end_inset 

 .
\layout Standard


\begin_float tab 

\layout Caption

Addition operations
\begin_inset LatexCommand \label{addops}

\end_inset 


\layout Standard


\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
20 6 0 0 0 0 0 0
1 2 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 1 0 0
8 0 0 "" ""
8 0 0 "" ""
8 0 0 "" ""
8 0 0 "" ""
8 0 0 "" ""
8 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""


\size small 

\size default

\newline 
 
\size small 
Left
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
Right
\size default

\newline 
 
\size small 
Result
\size default

\newline 
 
\size small 
Effect of
\size default
 
\emph on 

\size small 
a
\size default

\emph default 
 
\family typewriter 

\size small 
op
\size default

\family default 
 
\emph on 

\size small 
b
\size default

\emph default 

\size small 

\size default

\newline 

\family typewriter 

\size footnotesize 
+
\size default

\family default 

\size footnotesize 

\size default

\newline 
 
\size footnotesize 
integer
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
integer
\size default

\newline 
 
\size footnotesize 
integer
\size default

\newline 
 
\size footnotesize 
sum of
\size default
 
\emph on 

\size footnotesize 
a
\size default

\emph default 
 
\size footnotesize 
and
\size default
 
\emph on 

\size footnotesize 
b
\size default

\emph default 

\size footnotesize 

\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
real
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
real
\size default

\newline 
 
\size footnotesize 
real
\size default

\newline 
 
\size footnotesize 
sum of
\size default
 
\emph on 

\size footnotesize 
a
\size default

\emph default 
 
\size footnotesize 
and
\size default
 
\emph on 

\size footnotesize 
b
\size default

\emph default 

\size footnotesize 

\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
complex
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
complex
\size default

\newline 
 
\size footnotesize 
complex
\size default

\newline 
 
\size footnotesize 
sum of
\size default
 
\emph on 

\size footnotesize 
a
\size default

\emph default 
 
\size footnotesize 
and
\size default
 
\emph on 

\size footnotesize 
b
\size default

\emph default 

\size footnotesize 

\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
set
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
set
\size default

\newline 
 
\size footnotesize 
set
\size default

\newline 
 
\size footnotesize 
union of
\size default
 
\emph on 

\size footnotesize 
a
\size default

\emph default 
 
\size footnotesize 
and
\size default
 
\emph on 

\size footnotesize 
b
\size default

\emph default 

\size footnotesize 

\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
string
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
string
\size default

\newline 
 
\size footnotesize 
string
\size default

\newline 
 
\size footnotesize 
concatenate
\begin_inset LatexCommand \index{concatenate}

\end_inset 


\size default
 
\emph on 

\size footnotesize 
a
\size default

\emph default 
 
\size footnotesize 
with
\size default
 
\emph on 

\size footnotesize 
b
\size default

\emph default 
 
\size footnotesize 
'ac'+'de'='acde'
\size default

\newline 
 
\family typewriter 

\size footnotesize 
-
\size default

\family default 

\size footnotesize 

\size default

\newline 
 
\size footnotesize 
integer
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
integer
\size default

\newline 
 
\size footnotesize 
integer
\size default

\newline 
 
\size footnotesize 
result of subtracting
\size default
 
\emph on 

\size footnotesize 
b
\size default

\emph default 
 
\size footnotesize 
from
\size default
 
\emph on 

\size footnotesize 
a
\size default

\emph default 

\size footnotesize 

\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
real
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
real
\size default

\newline 
 
\size footnotesize 
real
\size default

\newline 
 
\size footnotesize 
result of subtracting
\size default
 
\emph on 

\size footnotesize 
b
\size default

\emph default 
 
\size footnotesize 
from
\size default
 
\emph on 

\size footnotesize 
a
\size default

\emph default 

\size footnotesize 

\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
complex
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
complex
\size default

\newline 
 
\size footnotesize 
complex
\size default

\newline 
 
\size footnotesize 
result of subtracting
\size default
 
\emph on 

\size footnotesize 
b
\size default

\emph default 
 
\size footnotesize 
from
\size default
 
\emph on 

\size footnotesize 
a
\size default

\emph default 

\size footnotesize 

\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
set
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
set
\size default

\newline 
 
\size footnotesize 
set
\size default

\newline 
 
\size footnotesize 
complement
\begin_inset LatexCommand \index{complement}

\end_inset 

 of
\size default
 
\emph on 

\size footnotesize 
b
\size default

\emph default 
 
\size footnotesize 
relative to
\size default
 
\emph on 

\size footnotesize 
a
\size default

\emph default 

\size footnotesize 

\size default

\newline 
 
\family typewriter 

\size footnotesize 
+:
\size default

\family default 

\size footnotesize 

\size default

\newline 
 
\size footnotesize 
0..255
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
0..255
\size default

\newline 
 
\size footnotesize 
0..255
\size default

\newline 
 
\size footnotesize 
saturated + clipped to 0..255 
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
-128..127
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
-128..127
\size default

\newline 
 
\size footnotesize 
-128..127
\size default

\newline 
 
\size footnotesize 
saturated + clipped to -128..127
\size default

\newline 
 
\family typewriter 

\size footnotesize 
-:
\size default

\family default 

\size footnotesize 

\size default

\newline 
 
\size footnotesize 
0..255
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
0..255
\size default

\newline 
 
\size footnotesize 
0..255
\size default

\newline 
 
\size footnotesize 
saturated
\begin_inset LatexCommand \index{saturated}

\end_inset 

 - clipped to 0..255
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
-128..127
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
-128..127
\size default

\newline 
 
\size footnotesize 
-128..127
\size default

\newline 
 
\size footnotesize 
saturated - clipped to -128..127
\size default

\newline 
 
\family typewriter 

\size footnotesize 
min
\begin_inset LatexCommand \index{min}

\end_inset 


\size default

\family default 

\size footnotesize 

\size default

\newline 
 
\size footnotesize 
integer
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
integer
\size default

\newline 
 
\size footnotesize 
integer
\size default

\newline 
 
\size footnotesize 
returns the lesser of the numbers
\size default

\newline 

\newline 
 
\size footnotesize 
real
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
real
\size default

\newline 
 
\size footnotesize 
real
\size default

\newline 
 
\size footnotesize 
returns the lesser of the numbers
\size default

\newline 
 
\family typewriter 

\size footnotesize 
max
\begin_inset LatexCommand \index{max}

\end_inset 


\size default

\family default 

\size footnotesize 

\size default

\newline 
 
\size footnotesize 
integer
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
integer
\size default

\newline 
 
\size footnotesize 
integer
\size default

\newline 
 
\size footnotesize 
returns the greater of the numbers
\size default

\newline 

\newline 
 
\size footnotesize 
real
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
real
\size default

\newline 
 
\size footnotesize 
real
\size default

\newline 
 
\size footnotesize 
returns the greater of the numbers
\size default

\newline 
 
\family typewriter 

\size footnotesize 
or
\size default

\family default 

\size footnotesize 

\size default

\newline 
 
\size footnotesize 
boolean
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
boolean
\size default

\newline 
 
\size footnotesize 
boolean
\size default

\newline 
 
\size footnotesize 
logical or
\size default

\newline 
 
\latex latex 
 
\backslash verb+><+
\latex default 

\newline 
 
\size footnotesize 
set
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
set
\size default

\newline 
 
\size footnotesize 
set
\size default

\newline 
 
\size footnotesize 
symetric difference
\size default

 


\layout Standard


\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\end_float 


\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
7 2 0 0 0 0 0 0
1 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""


\size footnotesize 
<addop>
\size default

\newline 
 
\size footnotesize 
'+'
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
'-'
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
'or'
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
'max'
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
'min'
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
'+:'
\size default

\newline 
 
\size footnotesize 

\size default

\newline 
 
\size footnotesize 
'-:'
\size default

 


\layout Standard


\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""


\size footnotesize 
<additive expression>
\size default

\newline 
 
\size footnotesize 
<multiplicative expression> [ <addop> <multiplicative expression> ]*
\size default

 


\layout Standard


\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""


\size footnotesize 
<expression>
\size default

\newline 
 
\size footnotesize 
<additive expression> <relational operator> <expression>
\size default

 


\layout Standard


\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Subsection

Expressions
\layout Standard

An expression can optionally involve the use of a relational operator to
 compare the results of two additive expressions.
 Relational operators always return boolean results and are listed in table
 
\begin_inset LatexCommand \ref{relop}

\end_inset 

. 
\begin_float tab 

\layout Caption

Relational operators
\layout Standard


\begin_inset LatexCommand \label{relop}

\end_inset 


\latex latex 

\backslash center
\newline 

\latex default 

\layout Standard



\LyXTable
multicol5
6 2 0 0 0 0 0 0
1 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 1 0 0
8 0 0 "" ""
8 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""


\latex latex 

\backslash verb+<+
\latex default 

\newline 
 Less than
\newline 

\latex latex 
 
\backslash verb+>+
\latex default 

\newline 
 Greater than
\newline 

\latex latex 
 
\backslash verb+<=+
\latex default 

\newline 
 Less than or equal to
\newline 

\latex latex 
 
\backslash verb+>=+
\latex default 

\newline 
 Greater than or equal to
\newline 

\latex latex 
 
\backslash verb+<>+
\latex default 

\newline 
 Not equal to
\newline 

\latex latex 
 
\backslash verb+=+
\latex default 

\newline 
 Equal to
 


\end_float 


\layout Subsection

Operator overloading
\layout Standard

The dyadic operators
\begin_inset LatexCommand \index{operator}

\end_inset 

 
\begin_inset LatexCommand \index{operator, overloadin}

\end_inset 

 can be extended to operate on new types by operator overloading.
 Figure 
\begin_inset LatexCommand \ref{complex}

\end_inset 

 shows how arithmetic on the type 
\family typewriter 
complex
\family default 
 required by Extended Pascal 
\begin_inset LatexCommand \cite{ISO90}

\end_inset 

 is defined in Vector Pascal.
 Each operator is associated with a semantic function and if it is a non-relatio
nal
 operator, an identity element.
 The operator symbols must be drawn from the set of predefined Vector Pascal
 operators, and when expressions involving them are parsed, priorities are
 inherited from the predefined operators.
 The type signature of the operator is deduced from the type of the function
\begin_float footnote 

\layout Standard

Vector Pascal allows function results to be of any non-procedural type.
 
\end_float 

.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
3 2 0 0 0 0 0 0
1 0 0 0
0 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""


\size footnotesize 
<operator-declaration>
\size default

\newline 
 
\size footnotesize 
'operator' 'cast' '=' <identifier>
\size default

\newline 

\newline 

\size footnotesize 
'operator' <dyadicop> '=' <identifier>','<identifier>
\size default

\newline 

\newline 

\size footnotesize 
'operator' <relational operator> '=' <identifier>
\size default

 


\layout Standard


\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\begin_float fig 

\size small 

\begin_inset Include \input{complex.lyx}

\end_inset 


\size default

\layout Caption

Defining operations on complex numbers
\layout Standard


\begin_inset LatexCommand \label{complex}

\end_inset 


\size small 
Note that only the function headers are given here as this code comes from
 the interface part of the system unit.
 The function bodies and the initialisation of the variables complexone
 and complexzero are handled in the implementation part of the unit.
\size default

\size small 

\latex latex 

\backslash par{}
\latex default 

\size default

\end_float 

 When parsing expressions, the compiler first tries to resolve operations
 in terms of the predefined operators of the language, taking into account
 the standard mechanisms allowing operators to work on arrays.
 Only if these fail does it search for an overloaded operator whose type
 signature matches the context.
\layout Standard

In the example in figure 
\begin_inset LatexCommand \ref{complex}

\end_inset 

, complex numbers are defined to be records containing an array of reals,
 rather than simply as an array of reals.
 Had they been so defined, the operators 
\family typewriter 
+,*,-,/
\family default 
 on reals would have masked the corresponding operators on complex numbers.
\layout Standard

The provision of an identity element for complex addition and subtraction
 ensures that unary minus, as in 
\begin_inset Formula \(  -x \)
\end_inset 

 for 
\begin_inset Formula \(  x: \)
\end_inset 

complex, is well defined, and correspondingly that unary / denotes complex
 reciprocal.
 Overloaded operators can be used in array maps and array reductions.
\layout Subsubsection

Implicit casts
\layout Standard


\begin_inset LatexCommand \index{cast}

\end_inset 

 The Vector Pascal language already contains a number of implicit type conversio
ns
 that are context determind.
 An example is the promotion of integers to reals in the context of arithmetic
 expressions.
 The set of implicit casts can be added to by declaring an operator to be
 a cast as is shown in the line:
\layout Standard


\latex latex 

\backslash parbox{14cm}{
\latex default 

\family typewriter 

\shape italic 
operator
\shape default 
 
\shape italic 
cast
\shape default 
 = 
\shape italic 
real2cmplx
\shape default 
 ;
\family default 

\latex latex 
}
\latex default 

\newline 

\layout Standard

Given an implict cast from type 
\begin_inset Formula \( t_{0}\rightarrow t_{1}\)
\end_inset 

, the function associated with the implicit cast is then called on the result
 of any expression 
\begin_inset Formula \( e:t_{0} \)
\end_inset 

 whose expression context requires it to be of type 
\begin_inset Formula \( t_{1}\)
\end_inset 

. 
\layout Section

Statements
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
14 2 0 0 0 0 0 0
1 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<statement>
\newline 
 
\size small 
<variable>':='<expression>
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
<procedure statement>
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
<empty statement>
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'goto' <label>;
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'exit'['('<expression>')']
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'begin' <statement>[;<statement>]*'end'
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'if'<expression>'then'<statement>['else'<statement>]
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
<case statement>
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'for' <variable>:= <expression> 'to' <expression> 'do' <statement>
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'for' <variable>:= <expression> 'downto' <expression> 'do' <statement>
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'repeat' <statement> 'until' <expression>
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'with' <record variable> 'do' < statement>
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
<io statement>
\size default

\newline 
 
\size small 

\size default

\newline 
 
\size small 
'while' <expression> 'do' <statement>
\size default

 


\layout Standard


\size small 

\latex latex 

\backslash par{}
\latex default 

\size default

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Subsection

Assignment
\begin_inset LatexCommand \label{assignment}

\end_inset 


\layout Standard

An assignment replaces the current value of a variable by a new value specified
 by an expression.
 The assignment operator
\begin_inset LatexCommand \index{operator}

\end_inset 

 is
\begin_inset LatexCommand \index{is}

\end_inset 

 :=
\begin_inset LatexCommand \index{:=}

\end_inset 

.
 Standard Pascal allows assignment
\begin_inset LatexCommand \index{assignment}

\end_inset 

 of whole arrays
\begin_inset LatexCommand \index{array}

\end_inset 

.
 Vector Pascal extends this to allow consistent use of mixed rank
\begin_inset LatexCommand \index{rank}

\end_inset 

 expressions on the right hand side of an assignment.
 Given
\layout Standard


\family typewriter 
r0:real; r1:array[0..7] of real; 
\family default 

\layout Standard


\family typewriter 
r2:array[0..7,0..7] of real
\family default 

\layout Standard

then we can write
\layout Enumerate

r
\family typewriter 
1:= r2[3]; { supported in standard Pascal }
\family default 

\layout Enumerate


\family typewriter 
r1:= /2; { assign 0.5 to each element of r1 }
\family default 

\layout Enumerate


\family typewriter 
r2:= r1*3; { assign 1.5 to every element of r2}
\family default 

\layout Enumerate


\family typewriter 
r1:= 
\backslash 
+ r2; { r1 gets the totals along the rows of r2}
\family default 

\layout Enumerate


\family typewriter 
r1:= r1+r2[1];{ r1 gets the corresponding elements of row 1 of r2 added to it}
\family default 

\layout Standard

The assignment of arrays is a generalisation of what standard Pascal allows.
 Consider the first examples above, they are equivalent to:
\layout Enumerate


\family typewriter 
for i:=0 to 7 do r1[i]:=r2[3,i];
\family default 

\layout Enumerate


\family typewriter 
for i:=0 to 7 do r1[i]:=/2;
\family default 

\layout Enumerate


\family typewriter 
for i:=0 to 7 do
\begin_deeper 
\layout Standard


\family typewriter 
for j:=0 to 7 do r2[i,j]:=r1[j]*3;
\family default 

\end_deeper 
\layout Enumerate


\family typewriter 
for i:=0 to 7 do
\begin_deeper 
\layout Standard


\family typewriter 
begin
\layout Standard


\family typewriter 

\latex latex 

\backslash  
\latex default 
t:=0;
\layout Standard


\family typewriter 

\latex latex 

\backslash  
\latex default 
for j:=7 downto 0 do t:=r2[i,j]+t;
\layout Standard


\family typewriter 

\latex latex 

\backslash  
\latex default 
r1[i]:=t;
\layout Standard


\family typewriter 
end;
\family default 

\end_deeper 
\layout Enumerate


\family typewriter 
for i:=0 to 7 do r1[i]:=r1[i]+r2[1,i];
\family default 

\layout Standard

In other words the compiler has to generate an implicit loop
\begin_inset LatexCommand \index{loop}

\end_inset 

 over the elements of the array being assigned to and over the elements
 of the array acting as the data-source.
 In the above 
\family typewriter 
i,j,t
\family default 
 are assumed to be temporary variables not referred to anywhere else in
 the program.
 The loop variables are called implicit indices
\begin_inset LatexCommand \index{indices}

\end_inset 


\begin_inset LatexCommand \index{implicit indices}

\end_inset 

 
\begin_inset LatexCommand \label{manimplicitindices}

\end_inset 

and may be accessed using 
\family typewriter 
iota
\family default 
.
\layout Standard

The variable on the left hand side of an assignment defines an array
\begin_inset LatexCommand \index{array}

\end_inset 

 context within which expressions on the right hand side are evaluated.
 Each array context has a rank given by the number of dimensions
\begin_inset LatexCommand \index{dimensions}

\end_inset 

 of the array on the left hand side.
 A scalar variable has rank
\begin_inset LatexCommand \index{rank}

\end_inset 

 0.
 Variables occurring in expressions with an array context of rank 
\emph on 
r
\emph default 
 must have 
\emph on 
r
\emph default 
 or fewer dimensions.
 The 
\emph on 
n
\emph default 
 bounds of any 
\emph on 
n
\emph default 
 dimensional array variable, with 
\begin_inset Formula \(  n\leq r \)
\end_inset 

 occurring within an expression evaluated in an array context of rank 
\emph on 
r
\emph default 
 must match with the rightmost 
\emph on 
n
\emph default 
 bounds of the array on the left hand side of the assignment statement.
\layout Standard

Where a variable is of lower rank than its array context, the variable is
 replicated to fill the array context
\begin_inset LatexCommand \index{array context}

\end_inset 

.
 This is shown in examples 2 and 3 above.
 Because the rank of any assignment is constrained by the variable on the
 left hand side, no temporary arrays, other than machine registers, need
 be allocated to store the intermediate array results of expressions.
\layout Subsection

Procedure statement
\layout Standard

A procedure statement executes a named procedure
\begin_inset LatexCommand \index{procedure}

\end_inset 

.
 A procedure statement may, in the case where the named procedure has formal
 parameters, contain a list of actual parameters.
 These are substituted in place of the formal parameters contained in the
 declaration.
 Parameters may be value parameters or variable parameters.
\layout Standard

Semantically the effect of a value parameter is that a copy is taken of
 the actual parameter
\begin_inset LatexCommand \index{parameter}

\end_inset 

 and this copy substituted into the body of the procedure.
 Value parameters may be structured values such as records and arrays.
 For scalar values, expressions may be passed as actual parameters.
 Array expressions are not currently allowed as actual parameters.
\layout Standard

A variable parameter is passed by reference, and any alteration of the formal
 parameter induces a corresponding change in the actual parameter.
 Actual variable parameters must be variables.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
2 3 0 0 0 0 0 0
1 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 2 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<parameter>
\newline 
 <variable>
\newline 
 for formal parameters declared as var
\newline 

\newline 
 <expression>
\newline 
 for other formal parameters 
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
2 2 0 0 0 0 0 0
1 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<procedure statement>
\newline 
 <identifier>
\newline 

\newline 
 <identifier> '(' <parameter> [','<parameter>]* ')'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Paragraph

Examples
\layout Enumerate


\family typewriter 
printlist;
\family default 

\layout Enumerate


\family typewriter 
compare(avec,bvec,result);
\family default 

\layout Subsection

Goto statement
\layout Standard

A goto statement transfers control to a labelled statement.
 The destination label must be declared in a label
\begin_inset LatexCommand \index{label}

\end_inset 

 declaration.
 It is illegal to jump into or out of a procedure.
\layout Paragraph

Example
\layout Standard


\family typewriter 
goto
\begin_inset LatexCommand \index{goto}

\end_inset 

 99;
\family default 

\layout Subsection

Exit
\begin_inset LatexCommand \index{Exit}

\end_inset 

 Statement
\layout Standard

An exit statement transfers control to the calling point of the current
 procedure or function.
 If the exit statement is within a function then the exit statement can
 have a parameter: an expression whose value is returned from the function.
\layout Paragraph

Examples
\layout Enumerate


\family typewriter 
exit;
\family default 

\layout Enumerate


\family typewriter 
exit(5);
\family default 

\layout Subsection

Compound statement
\layout Standard

A list of statements separated by semicolons may be grouped into a compound
 statement by bracketing them with 
\family typewriter 
begin
\family default 
 and 
\family typewriter 
end
\family default 
 .
\layout Paragraph

Example
\layout Standard


\family typewriter 
begin
\begin_inset LatexCommand \index{begin}

\end_inset 

 a:=x*3; b:=sqrt a end
\begin_inset LatexCommand \index{end}

\end_inset 

;
\family default 

\layout Subsection

If statement
\layout Standard

The basic control flow construct is the if statement.
 If the boolean expression between 
\family typewriter 
if
\begin_inset LatexCommand \index{if}

\end_inset 


\family default 
 and 
\family typewriter 
then
\begin_inset LatexCommand \index{then}

\end_inset 


\family default 
 is true then the statement following 
\family typewriter 
then
\family default 
 is followed.
 If it is false and an else part is present, the statement following 
\family typewriter 
else
\begin_inset LatexCommand \index{else}

\end_inset 


\family default 
 is executed.
\layout Subsection

Case statement
\layout Standard

The case
\begin_inset LatexCommand \index{case}

\end_inset 

 statement specifies an expression which is evaluated and which must be
 of integral or ordinal type.
 Dependent upon the value of the expression control transfers to the statement
 labelled by the matching constant.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<case statement>
\newline 
 'case'<expression>'of'<case actions>'end'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
3 2 0 0 0 0 0 0
1 0 0 0
0 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<case actions>
\newline 
 <case list>
\newline 

\newline 
 <case list> 'else' <statement>
\newline 

\newline 
 <case list> 'otherwise' <statement>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<case list>
\newline 
 <case list element>[';'<case list element.]*
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<case list element>
\newline 
 <case label>[',' <case label>]':'<statement>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
2 2 0 0 0 0 0 0
1 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<case label>
\newline 
 <constant>
\newline 

\newline 
 <constant> '..' <constant>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Paragraph

Examples
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash raggedright 
\latex default 

\layout Standard



\LyXTable
multicol5
5 2 0 0 0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
2 0 0 "" ""
2 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""

 
\family typewriter 
case
\family default 
 i 
\family typewriter 
of
\family default 

\newline 
 
\family typewriter 
case
\family default 
 c 
\family typewriter 
of
\family default 

\newline 
 
\family typewriter 
1:s:=abs s;
\family default 

\newline 
 
\family typewriter 
'a':write('A');
\family default 

\newline 
 
\family typewriter 
2:s:= sqrt s;
\family default 

\newline 
 
\family typewriter 
'b','B':write('B');
\family default 

\newline 
 
\family typewriter 
3: s:=0
\family default 

\newline 
 
\family typewriter 
'A','C'..'Z','c'..'z':write(' ');
\family default 

\newline 
 
\family typewriter 
end
\family default 

\newline 
 
\family typewriter 
end
\family default 

\newline 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Subsection

With statement
\layout Standard

Within the component statement of the with
\begin_inset LatexCommand \index{with}

\end_inset 

 statement the fields of the record variable can be referred to without
 prefixing them by the name of the record variable.
 The effect is to import the component statement into the scope defined
 by the record
\begin_inset LatexCommand \index{record}

\end_inset 

 variable declaration so that the field-names appear as simple variable
 names.
\layout Paragraph

Example
\layout Standard


\family typewriter 
var s:record x,y:real end;
\family default 

\layout Standard


\family typewriter 
begin
\family default 

\layout Standard


\family typewriter 
with s do begin x:=0;y:=1 end ;
\family default 

\layout Standard


\family typewriter 
end
\family default 

\layout Subsection

For statement
\layout Standard

A for
\begin_inset LatexCommand \index{for}

\end_inset 

 statement executes its component statement repeatedly under the control
 of an iteration
\begin_inset LatexCommand \index{iteration}

\end_inset 

 variable.
 The iteration variable must be of an integral or ordinal type.
 The variable is either set to count up through a range or down through
 a range.
\layout Standard


\family typewriter 
for i:= e1 to
\begin_inset LatexCommand \index{to}

\end_inset 

 e2 do s
\family default 

\layout Standard

is equivalent to
\layout Standard


\family typewriter 
i:=e1; temp:=e2;while i<=temp do s;
\family default 

\layout Standard

whilst
\layout Standard


\family typewriter 
for i:= e1 downto
\begin_inset LatexCommand \index{downto}

\end_inset 

 e2 do s
\family default 

\layout Standard

is equivalent to
\layout Standard


\family typewriter 
i:=e1; temp:=e2;while i>= temp do s;
\family default 

\layout Subsection

While statement
\layout Standard

A while
\begin_inset LatexCommand \index{while}

\end_inset 

 statement executes its component statement whilst its boolean expression
 is true.
 The statement
\layout Standard


\family typewriter 
while e do s
\family default 

\layout Standard

is equivalent to
\layout Standard


\family typewriter 
10: if not e then goto 99; s; goto 10; 99:
\family default 

\layout Subsection

Repeat statement
\layout Standard

A repeat
\begin_inset LatexCommand \index{repeat}

\end_inset 

 statement executes its component statement at least once, and then continues
 to execute the component statement until its component expression becomes
 true.
\layout Standard


\family typewriter 
repeat s until e
\family default 

\layout Standard

is equivalent to
\layout Standard


\family typewriter 
10: s;if e then goto 99; goto 10;99:
\family default 

\layout Section

Input Output 
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
4 2 0 0 0 0 0 0
1 0 0 0
0 0 0 0
0 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<io statement>
\newline 
 'writeln'[<outparamlist>]
\newline 

\newline 
 'write'<outparamlist>
\newline 

\newline 
 'readln'[<inparamlist>]
\newline 

\newline 
 'read'<inparamlist>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<outparamlist>
\newline 
 '('<outparam>[','<outparam>]*')'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<outparam>
\newline 
 <expression>[':' <expression>] [':'<expression>]
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<inparamlist>
\newline 
 '('<variable>[','<variable>]*')'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

Input and output are supported from and to the console and also from and
 to files.
\layout Subsection

Input
\layout Standard

The basic form of input is the 
\family typewriter 
read
\family default 
 statement.
 This takes a list of parameters the first of which may optionally be a
 file variable.
 If this file variable is present it is the input file.
 In the absence of a leading file variable the input file is the standard
 input stream.
 The parameters take the form of variables into which appropriate translations
 of textual representations of values in the file are read.
 The statement
\layout Standard


\family typewriter 
read
\begin_inset LatexCommand \index{read}

\end_inset 

(
\family default 

\emph on 
a,b,c
\emph default 

\family typewriter 
) 
\family default 

\layout Standard

where 
\emph on 
a,b,c
\emph default 
 are non file parameters is exactly equivalent to the sequence of statements
\layout Standard


\family typewriter 
read(
\family default 

\emph on 
a
\emph default 

\family typewriter 
);read(
\family default 

\emph on 
b
\emph default 

\family typewriter 
);read(
\family default 

\emph on 
c
\emph default 

\family typewriter 
) 
\family default 

\layout Standard

The 
\family typewriter 
readln
\family default 

\begin_inset LatexCommand \index{readln}

\end_inset 

 statement has the same effect as the read statement but finishes by reading
 a new line from the input file.
 The representation of the new line is operating system dependent.
 The statement
\layout Standard


\family typewriter 
readln(
\family default 

\emph on 
a,b,c
\emph default 

\family typewriter 
) 
\family default 

\layout Standard

where 
\emph on 
a,b,c
\emph default 
 are non file parameters is thus exactly equivalent to the sequence of statement
s
\layout Standard


\family typewriter 
read(
\family default 

\emph on 
a
\emph default 

\family typewriter 
);read(
\family default 

\emph on 
b
\emph default 

\family typewriter 
);read(
\family default 

\emph on 
c
\emph default 

\family typewriter 
);readln; 
\family default 

\layout Standard

Allowed typed for read statements are: integers, reals, strings and enumerated
 types.
\layout Subsection

Output 
\layout Standard

The basic form of output is the 
\family typewriter 
write
\begin_inset LatexCommand \index{write}

\end_inset 


\family default 
 statement.
 This takes a list of parameters the first of which may optionally be a
 file variable.
 If this file variable is present it is the output file.
 In the absence of a leading file variable the output file is the console.
 The parameters take the form of expressions whose values whose textual
 representations are written to the output file.
 The statement
\layout Standard


\family typewriter 
write(
\family default 

\emph on 
a,b,c
\emph default 

\family typewriter 
) 
\family default 

\layout Standard

where 
\emph on 
a,b,c
\emph default 
 are non file parameters is exactly equivalent to the sequence of statements
\layout Standard


\family typewriter 
write(
\family default 

\emph on 
a
\emph default 

\family typewriter 
);write(
\family default 

\emph on 
b
\emph default 

\family typewriter 
);write(
\family default 

\emph on 
c
\emph default 

\family typewriter 
) 
\family default 

\layout Standard

The 
\family typewriter 
writeln
\begin_inset LatexCommand \index{writeln}

\end_inset 


\family default 
 statement has the same effect as the write statement but finishes by writing
 a new line to the output file.
 The representation of the new line is operating system dependent.
 The statement
\layout Standard


\family typewriter 
writeln(
\family default 

\emph on 
a,b,c
\emph default 

\family typewriter 
) 
\family default 

\layout Standard

where 
\emph on 
a,b,c
\emph default 
 are non file parameters is thus exactly equivalent to the sequence of statement
s
\layout Standard


\family typewriter 
write(
\family default 

\emph on 
a
\emph default 

\family typewriter 
);write(
\family default 

\emph on 
b
\emph default 

\family typewriter 
);write(
\family default 

\emph on 
c
\emph default 

\family typewriter 
);writeln; 
\family default 

\layout Standard

Allowed types for write statements are integers, reals, strings and enumerated
 types.
\layout Subsubsection

Parameter formating
\begin_inset LatexCommand \index{formating}

\end_inset 

 
\layout Standard

A non file parameter can be followed by up to two integer expressions prefixed
 by colons which specify the field widths to be used in the output.
 The write parameters can thus have the following forms:
\layout Standard


\emph on 
e e
\emph default 
:
\emph on 
m e
\emph default 
:
\emph on 
m
\emph default 
:
\emph on 
n 
\emph default 

\layout Enumerate

If 
\emph on 
e
\emph default 
 is an integral type its decimal expansion will be written preceeded by
 sufficient blanks to ensure that the total textual field width produced
 is not less than 
\emph on 
m
\emph default 
. 
\layout Enumerate

If 
\emph on 
e
\emph default 
 is a real its decimal expansion will be written preceeded by sufficient
 blanks to ensure that the total textual field width produced is not less
 than 
\emph on 
m
\emph default 
.
 If 
\emph on 
n
\emph default 
 is present the total number of digits after the decimal point will be 
\emph on 
n
\emph default 
.
 If 
\emph on 
n
\emph default 
 is omitted then the number will be written out in exponent and mantissa
 form with 6 digits after the decimal point 
\layout Enumerate

If 
\emph on 
e
\emph default 
 is boolean the strings 'true' or 'false' will be written into a field of
 width not less than m. 
\layout Enumerate

If 
\emph on 
e
\emph default 
 is a string then the string will be written into a field of width not less
 than 
\emph on 
m
\emph default 
. 
\layout Chapter

Programs and Units
\layout Standard


\begin_inset LatexCommand \label{progunit}

\end_inset 

 Vector Pascal supports the popular system of separate compilation units
\begin_inset LatexCommand \index{units}

\end_inset 

 found in Turbo
\begin_inset LatexCommand \index{Turbo Pascal}

\end_inset 

 Pascal.
 A compilation unit can be either a program, a unit or a library
\begin_inset LatexCommand \index{library}

\end_inset 

.
\layout Standard


\latex latex 

\backslash vspace{0.3cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<program>
\newline 
 'program' <identifier>';'[<uses>';']<block>'.'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<invocation>
\newline 
 <identifier>['(' <type identifier>[','<type identifier>]*')']
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.2cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<uses>
\newline 
 'uses' <invocation>[','<invocation>]*
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.2cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.2cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""


\begin_inset LatexCommand \label{block}

\end_inset 

<block>
\newline 
 [<decls>';']*'begin' <statement>[';'<statement>]*'end'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.2cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
5 2 0 0 0 0 0 0
1 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<decls>
\newline 
 'const' <constant declaration>[';'<constant declaration>]*
\newline 

\newline 
 'type'<type definition>[';'<type definition>]*
\newline 

\newline 
 'label' <label>[',' <label>]
\newline 

\newline 
 <procedure declaration>
\newline 

\newline 
 'var' <variable declaration>[ ';' <variable declaration> ]
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.2cm}
\latex default 

\latex latex 
 
\backslash vspace{0.2cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
1 2 0 0 0 0 0 0
1 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 1 0 0 0 "" ""
0 8 1 1 0 0 0 "" ""

<unit>
\newline 
 <unit header> <unit body>
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.2cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
2 2 0 0 0 0 0 0
1 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<unit body>
\newline 
 'interface'[<uses>][<decls>] 'implementation'<block>'.'
\newline 

\newline 
 'interface'[ <uses>][<decls>] 'in' <invocation> ';'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.2cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
2 2 0 0 0 0 0 0
1 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<unit header>
\newline 
 <unit type><identifier>
\newline 

\newline 
'unit' <identifier> '(' <type identifier> [',' <type identifier>]* ')'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.2cm}
\latex default 

\layout Standard


\latex latex 

\backslash vspace{0.2cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
2 2 0 0 0 0 0 0
1 0 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
0 8 1 0 0 0 0 "" ""
0 8 1 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

<unit type>
\newline 
 'unit'
\newline 

\newline 
 'library'
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.2cm}
\latex default 

\layout Standard

An executable compilation unit must be declared as a program
\begin_inset LatexCommand \index{program}

\end_inset 

.
 The program can use several other compilation units all of which must be
 either units or libraries.
 The units or libraries that it directly uses are specified by a list of
 identifiers in an optional use list at the start of the program.
 A unit or library has two declaration portions and an executable block.
\layout Section

The export of identifiers from units
\layout Standard

The first declaration portion is the interface part and is preceded by the
 reserved word 
\family typewriter 
interface
\family default 

\begin_inset LatexCommand \index{interface}

\end_inset 

.
\layout Standard

The definitions in the interface section of unit files constitute a sequence
 of enclosing scopes, such that successive units in the with list ever more
 closely contain the program itself.
 Thus when resolving an identifier, if the identifier can not be resolved
 within the program scope, the declaration of the identifier within the
 interface section of the rightmost unit in the uses list is taken as the
 defining occurrence.
 It follows that rightmost occurrence of an identifier definition within
 the interface parts of units on the uses list overrides all occurrences
 in interface parts of units to its left in the uses list.
\layout Standard

The implementation part of a unit consists of declarations
\begin_inset LatexCommand \index{declarations}

\end_inset 

, preceded by the reserved word 
\family typewriter 
implementatio
\family default 
n
\begin_inset LatexCommand \index{implementation}

\end_inset 

 that are private to the unit with the exception that a function or procedure
 declared in an interface context can omit the procedure body, provided
 that the function or procedure is redeclared in the implementation part
 of the unit.
 In that case the function or procedure heading given in the interface part
 is taken to refer to the function or procedure of the same name whose body
 is declared in the implementation part.
 The function or procedure headings sharing the same name in the interface
 and implementation parts must correspond with respect to parameter types,
 parameter order and, in the case of functions, with respect to return types.
\layout Standard

A unit may itself contain a use list, which is treated in the same way as
 the use lists of a program.
 That is to say, the use list of a unit makes accessible identifiers declared
 within the interface parts of the units named within the use list to the
 unit itself.
\layout Subsection

The export of procedures from libraries.
\layout Standard

If a compilation unit is prefixed by the reserved word 
\family typewriter 
library
\family default 
 rather than the words 
\family typewriter 
program
\family default 
 or 
\family typewriter 
unit
\family default 
, then the procedure and function declarations in its interface part are
 made accessible to routines written in other languages.
\layout Subsection

The export of Operators from units
\layout Standard

A unit can declare a type and export operators for that type.
\layout Section

Unit parameterisation and generic functions
\layout Standard

Standard Pascal provides es some limited support for polymorphism
\begin_inset LatexCommand \index{polymorphism}

\end_inset 

 in its 
\family typewriter 
read
\family default 
 and 
\family typewriter 
write
\family default 
 functions.
 Vector Pascal allows the writing of polymorphic functions and procedures
 through the use of parameteric units.
\layout Standard

A unit header can include an optional parameter list.
 The parameters identifiers which are interepreted as type names.
 These can be used to declare polymorphic procedures and functions, parameterise
d
 by these type names.
 This is shown in figure 
\begin_inset LatexCommand \ref{unit:genericsort}

\end_inset 

.
\layout Standard


\begin_float fig 

\layout Standard


\latex latex 

\backslash begin{tabbing}
\newline 
***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash ={
\backslash kill
\newline 
}
\backslash parbox{3.5cm}{
\backslash scriptsize{}}
\backslash '{
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{unit}  
\backslash textit{genericsort(t)}  ;}}}
\backslash 
\backslash 
\newline 

\backslash +
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{interface} }}
\backslash 
\backslash 
\backslash <
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{type} }}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{dataarray} 
\backslash textit{(} 
\backslash textit{n} ,
\backslash textit{m} :
\backslash textit{integer} )=
\backslash textbf{array} [
\backslash textit{n} ..
\backslash textit{m} ] 
\backslash textbf{of}  
\backslash textit{t} ;}}
\backslash 
\backslash 
\newline 

\backslash <
\backslash textsf{
\backslash textbf{procedure}  
\backslash textit{sort} 
\backslash textit{(} 
\backslash textbf{var}  
\backslash textit{a} :
\backslash textit{dataarray} );} (see Figure 
\backslash ref{sec:./genericsortsort} )
\backslash 
\backslash 
\newline 

\backslash 
\backslash 
\newline 

\backslash <
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{implementation} }}
\backslash 
\backslash 
\newline 

\backslash 
\backslash 
\newline 

\backslash <
\backslash textsf{
\backslash textbf{procedure}  
\backslash textit{sort} 
\backslash textit{(} 
\backslash textbf{var}  
\backslash textit{a} :
\backslash textit{dataarray} );} (see Figure 
\backslash ref{sec:./genericsortsort} )
\backslash 
\backslash 
\newline 

\backslash -
\backslash <
\backslash +
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{begin} }}
\backslash 
\backslash 
\newline 

\backslash <
\backslash -
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{end} .}}
\backslash 
\backslash 
\newline 

\backslash end{tabbing}
\latex default 

\layout Caption

A polymorphic sorting unit.
\layout Standard


\begin_inset LatexCommand \label{unit:genericsort}

\end_inset 


\end_float 


\layout Standard


\begin_float fig 

\layout Standard


\latex latex 

\backslash begin{tabbing}
\newline 
***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash ={
\backslash kill
\newline 
}
\backslash parbox{14cm}{
\backslash textsf {
\backslash textbf {procedure } 
\backslash textsf{ 
\backslash textit{sort} 
\backslash textit{(} } 
\backslash textbf{ var } 
\backslash textsf{ 
\backslash textit{a} :
\backslash textit{dataarray} );}}}
\backslash 
\backslash 
\newline 

\backslash +
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{var} }}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{Let 
\backslash textit{i}, 
\backslash textit{j} 
\backslash (
\backslash in
\backslash ) integer;}}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{Let 
\backslash textit{temp} 
\backslash (
\backslash in
\backslash ) t;}}
\backslash 
\backslash 
\newline 

\backslash -
\backslash <
\backslash +
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{begin} }}
\backslash 
\backslash 
\newline 

\backslash +
\backslash parbox{14cm}{
\backslash textsf {
\backslash textbf {for } 
\backslash textsf{
\backslash textit{i}
\backslash (
\backslash leftarrow
\backslash ) 
\backslash textit{a.n}} 
\backslash textbf{ to } 
\backslash textsf{
\backslash textit{a.m} - 1} 
\backslash textbf{ do } }}
\backslash 
\backslash 
\newline 

\backslash +
\backslash parbox{14cm}{
\backslash textsf {
\backslash textbf {for } 
\backslash textsf{
\backslash textit{j}
\backslash (
\backslash leftarrow
\backslash ) 
\backslash textit{a.n}} 
\backslash textbf{ to } 
\backslash textsf{
\backslash textit{a.m} - 1} 
\backslash textbf{ do } }}
\backslash 
\backslash 
\newline 

\backslash +
\backslash <
\backslash parbox{14cm}{
\backslash textsf {
\backslash textbf {if } 
\backslash textsf{
\backslash textit{a}
\backslash (_{
\backslash textit{j}}
\backslash ) 
\backslash (>
\backslash ) 
\backslash textit{a}
\backslash (_{
\backslash textit{j} + 1}
\backslash )} 
\backslash textbf{ then } 
\backslash textsf{
\backslash textit{begin}} 
\backslash textbf{ begin } }}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{temp}
\backslash (
\backslash leftarrow
\backslash ) 
\backslash textit{a}
\backslash (_{
\backslash textit{j}}
\backslash )}; }
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{a}
\backslash (_{
\backslash textit{j}}
\backslash ) 
\backslash (
\backslash leftarrow
\backslash ) 
\backslash textit{a}
\backslash (_{
\backslash textit{j} + 1}
\backslash )}; }
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{a}
\backslash (_{
\backslash textit{j} + 1}
\backslash ) 
\backslash (
\backslash leftarrow
\backslash ) 
\backslash textit{temp}}; }
\backslash 
\backslash 
\newline 

\backslash <
\backslash -
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{end} ;}}
\backslash 
\backslash 
\newline 

\backslash <
\backslash -
\backslash <
\backslash -
\backslash <
\backslash -
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{end} ;}}
\backslash 
\backslash 
\newline 

\backslash end{tabbing}
\latex default 

\layout Caption

procedure sort
\layout Standard


\begin_inset LatexCommand \label{sec:./genericsortsort}

\end_inset 


\end_float 


\layout Section

The invocation of programs and units
\layout Standard

Programs and units contain an executable block
\begin_inset LatexCommand \index{block}

\end_inset 

.
 The rules for the execution of these are as follows:
\layout Enumerate

When a program is invoked by the operating system, the units or libraries
 in its use list are invoked first followed by the executable block of the
 program itself. 
\layout Enumerate

When a unit or library is invoked, the units or libraries in its use list
 are invoked first followed by the executable block of the unit or library
 itself. 
\layout Enumerate

The order of invocation of the units or libraries in a use list is left
 to right with the exception provided by rule 4. 
\layout Enumerate

No unit or library may be invoked more than once. 
\layout Standard

Note that rule 4 implies that a unit 
\emph on 
x
\emph default 
 to the right of a unit 
\emph on 
y
\emph default 
 within a use list, may be invoked before the unit 
\emph on 
y,
\emph default 
 if the unit 
\emph on 
y
\emph default 
 or some other unit to 
\emph on 
y
\emph default 
's left names 
\emph on 
x
\emph default 
 in its use list.
\layout Standard

Note that the executable part of a library will only be invoked if the library
 in the context of a Vector Pascal program.
 If the library is linked to a main program in some other language, then
 the library and any units that it uses will not be invoked.
 Care should thus be taken to ensure that Vector Pascal libraries to be
 called from main programs written in other languages do not depend upon
 initialisation code contained within the executable blocks of units.
\layout Section

The compilation of programs and units.
\layout Standard

When the compiler
\begin_inset LatexCommand \index{compiler}

\end_inset 

 processes the use list of a unit or a program then, from left to right,
 for each identifier in the use list it attempts to find an already compiled
 unit whose filename prefix is equal to the identifier.
 If such a file exists, it then looks for a source
\begin_inset LatexCommand \index{source}

\end_inset 

 file whose filename prefix is equal to the identifier, and whose suffix
\begin_inset LatexCommand \index{suffix}

\end_inset 

 is 
\family typewriter 
.pas
\family default 

\begin_inset LatexCommand \index{'.pas'}

\end_inset 

.
 If such a file exists and is older than the already compiled file, the
 already compiled unit, the compiler loads the definitions contained in
 the pre-compiled unit.
 If such a file exists and is newer than the pre-compiled unit, then the
 compiler attempts to re-compile the unit source file.
 If this recompilation proceeds without the detection of any errors the
 compiler loads the definitions of the newly compiled unit.
 The definitions in a unit are saved to a file with the suffix 
\family typewriter 
.mpu,
\family default 
 and prefix given by the unit name.
 The compiler also generates an assembler file for each unit compiled.
\layout Subsection

Linking to external libraries
\layout Standard

It is possible to specify to which external libraries - that is to say libraries
 written in another languge, a program should be linked by placing in the
 main program linkage directives.
 For example
\layout Standard


\family typewriter 
{$linklib ncurses}
\family default 

\layout Standard

would cause the program to be linked to the ncurses library.
\layout Section

Instantiation of parametric units
\layout Standard

Instantiation of a parametric unit refers to the process by which the unbound
 type variables introduced in the parameter list of the unit are bound to
 actual types.
 In Vector Pascal all instantiation of parametric units and all type polymorphis
m
 are resolved
\begin_inset LatexCommand \index{polymorphism}

\end_inset 

 at compile time.
 Two mechanisms are provided by which a parametric unit may be instantiated.
 
\layout Subsection

Direct instantiation
\layout Standard

If a generic unit is invoked in the use list of a program or unit, then
 the unit name must be followed by a list of type identifiers.
 Thus given the generic sort unit in figure 
\begin_inset LatexCommand \ref{unit:genericsort}

\end_inset 

, one could instantiate it to sort arrays of reals by writing
\layout Standard


\series bold 

\family sans 
uses 
\series default 
 
\shape italic 
genericsort
\shape default 
(
\shape italic 
real
\shape default 
);
\family default 

\layout Standard

at the head of a program.
 Following this header, the procedure 
\family sans 

\shape italic 
sort
\shape default 

\family default 
 would be declared as operating on arrays of reals. 
\layout Subsection

Indirect instantiation
\layout Standard

A named unit file can indirectly instantiate a generic unit where its unit
 body uses the syntax
\layout Standard

'interface' <uses><decls> 'in' <invocation> ';'
\layout Standard

For example
\layout Standard


\latex latex 

\backslash begin{tabbing}
\newline 
***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash ={
\backslash kill
\newline 
}
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{unit}  
\backslash textit{intsort} ;}}
\backslash 
\backslash 
\newline 

\backslash +
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{interface} }}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf {
\backslash textbf {in } 
\backslash textsf{
\backslash textit{genericsort} (
\backslash textit{integer})}; }}
\backslash 
\backslash 
\newline 

\backslash 
\backslash 
\newline 

\backslash end{tabbing}
\latex default 
 would create a named unit to sort integers.
 The naming of the parametric units allows more than one instance of a given
 parametric unit to be used in a program.
 The generic sort unit could be used to provide both integer and real sorting
 procedures.
 The different variants of the procedures would be distinquished by using
 fully qualified names - e.g., 
\family sans 

\shape italic 
 intsort.sort
\shape default 

\family default 
. 
\layout Section

The System Unit
\layout Standard


\begin_inset LatexCommand \label{sysunit}

\end_inset 

 All programs and units include by default the unit system.pas as an implicit
 member of their with list.
 This contains declarations of private run time routines needed by Vector
 Pascal and also the following user accessible routines.
\layout Standard

\SpecialChar \-

\layout List

\labelwidthstring 00.00.0000

\family typewriter 
procedure
\family default 
 
\family typewriter 
append
\begin_inset LatexCommand \index{append}

\end_inset 

(var f:file);
\family default 
 This opens a file in append mode. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
procedure
\family default 
 
\family typewriter 
assign
\begin_inset LatexCommand \index{assign}

\end_inset 

(var f:file;var fname:string);
\family default 
 Associates a file name with a file.
 It does not open the file. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
procedure
\family default 
 
\family typewriter 
blockread
\begin_inset LatexCommand \index{blockread}

\end_inset 

(var f:file;var buf;count:integer; var resultcount:integer);
\family default 
 Trys to read count bytes from the file into the buffer.
 Resultcount contains the number actually read. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
LatexCommand
\family default 
 
\family typewriter 

\backslash 
index{blockwrite}procedure blockwrite(var f:file;var buf;count:integer; var resultcount:integer);
\family default 
 Write count bytes from the buffer.
 Resultcount gives the number actually read. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
procedure
\family default 
 
\family typewriter 
close
\family default 

\begin_inset LatexCommand \index{close}

\end_inset 

(var f:file); Closes a file. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
function
\family default 
 
\family typewriter 
eof
\family default 

\begin_inset LatexCommand \index{eof}

\end_inset 

(var f:file):boolean; True if we are at the end of file f. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
procedure
\family default 
 
\family typewriter 
erase
\family default 

\begin_inset LatexCommand \index{erase}

\end_inset 

(var f:file); Delete file f. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
function
\family default 
 
\family typewriter 
eoln
\family default 

\begin_inset LatexCommand \index{eoln}

\end_inset 

(var f:file):boolean; True if at the end of a line. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
function
\family default 
 
\family typewriter 
exp
\family default 

\begin_inset LatexCommand \index{exp}

\end_inset 

(d:real):real; Return 
\begin_inset Formula \(  e^{x} \)
\end_inset 


\layout List

\labelwidthstring 00.00.0000

\family typewriter 
function
\family default 
 
\family typewriter 
filesize
\family default 

\begin_inset LatexCommand \index{filesize}

\end_inset 

(var f: fileptr):integer; Return number of bytes in a file. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
function
\family default 
 
\family typewriter 
filepos
\family default 

\begin_inset LatexCommand \index{filepos}

\end_inset 

(var f:fileptr):integer; Return current position in a file. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
procedure
\family default 
 
\family typewriter 
freemem
\begin_inset LatexCommand \index{freemem}

\end_inset 

(var p:pointer; num:integer);
\family default 
 Free num bytes of heap store.
 Called by dispose. 
\layout List

\labelwidthstring 00.00.0000
\SpecialChar \-
bold procedure getmem
\begin_inset LatexCommand \index{getmem}

\end_inset 

(var p:pointer; num:integer); Allocate num bytes of heap.
 Called by new. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
procedure
\family default 
 
\family typewriter 
gettime
\begin_inset LatexCommand \index{gettime}

\end_inset 

(var hour,min,sec,hundredth:integer);
\family default 
 Return time of day. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 

\family default 
 Return the integer part of r as a real. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
function
\family default 
 
\family typewriter 
ioresult:integer;
\family default 
 Returns a code indicating if the previous file operation completed ok.
 Zero if no error occurred. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
function
\family default 
 
\family typewriter 
length
\begin_inset LatexCommand \index{length}

\end_inset 

(var s:string):integer;
\family default 
 Returns the length of s. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
procedure
\family default 
 
\family typewriter 
pascalexit
\begin_inset LatexCommand \index{pascalexit}

\end_inset 

(code:integer);
\family default 
 Terminate the program with code. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
\SpecialChar \-

\family default 
 Time in 1/100 seconds since program started. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
function
\family default 
 
\family typewriter 
random
\begin_inset LatexCommand \index{random}

\end_inset 

:integer;
\family default 
 Returns a random integer. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
procedure
\family default 
 
\family typewriter 
randomize
\begin_inset LatexCommand \index{randomize}

\end_inset 

;
\family default 
 Assign a new time dependent seed to the random number generator. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
procedure
\family default 
 
\family typewriter 
reset
\begin_inset LatexCommand \index{reset}

\end_inset 

(var f:file);
\family default 
 Open a file for reading. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
procedure
\family default 
 
\family typewriter 
rewrite
\begin_inset LatexCommand \index{rewrite}

\end_inset 

(var f :file);
\family default 
 Open a file for writing. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
function
\family default 
 
\family typewriter 
trunc(r:real):integer;
\family default 
 Truncates a real to an integer. 
\layout Chapter

Implementation issues
\layout Standard

The compiler is implemented in java to ease portability between operating
 systems.
\layout Section

Invoking the compiler
\layout Standard

The compiler is invoked with the command 
\begin_inset LatexCommand \label{commandline}

\end_inset 


\layout LyX-Code

vpc
\begin_inset LatexCommand \index{vpc}

\end_inset 


\protected_separator 
filename 
\layout Standard

where filename is the name of a Pascal program or unit.
 For example
\layout LyX-Code

vpc
\protected_separator 
test 
\layout Standard

will compile the program test.pas and generate an executable file 
\family typewriter 
test
\family default 
, (
\family typewriter 
test.exe
\family default 
 under windows).
\layout Standard

The command 
\family typewriter 
vpc
\family default 
 is a shell script which invokes the java runtime system to execute a 
\family typewriter 
.jar
\family default 
 file containing the compiler classes.
 Instead of running vpc the java interpreter can be directly invoked as
 follows
\layout LyX-Code

java
\protected_separator 
-jar
\protected_separator 
mmpc.jar
\protected_separator 
filename 
\layout Standard

The 
\family typewriter 
vpc
\family default 
 script sets various compiler options appropriate to the operating system
 being used.
\layout Subsection

Environment variable
\layout Standard

The environment variable 
\family typewriter 
mmpcdir
\begin_inset LatexCommand \index{mmpcdir}

\end_inset 


\family default 
 must be set to the directory which contains the 
\family typewriter 
mmpc
\begin_inset LatexCommand \index{mmpc}

\end_inset 

.jar
\family default 
 file, the runtime library 
\family typewriter 
rtl.o
\family default 
 and the 
\family typewriter 
system.pas
\family default 
 file.
\layout Subsection

Compiler options
\layout Standard


\begin_inset LatexCommand \label{comp:opt}

\end_inset 

 The following flags
\begin_inset LatexCommand \index{flags}

\end_inset 

 can be supplied to the compiler :
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
-L
\family default 
 Causes a latex listing to be produced of all files compiled.
 The level of detail can be controled using the codes -L1 to -L3, otherwise
 the maximum detail level is used. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
-OPT
\latex latex 
$
\latex default 
n
\latex latex 
$
\latex default 

\family default 
 Sets the optimisation level attempted.
 -OPT0 is no optimisation, -OPT3 is the maximum level attempted.
 The default is -OPT1. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
-Afilename
\begin_inset LatexCommand \index{-Afilename}

\end_inset 


\family default 
 Defines the assembler file to be created.
 In the absence of this option the assembler file is 
\family typewriter 
p.asm.
\family default 

\layout List

\labelwidthstring 00.00.0000

\family typewriter 
-Ddirname
\begin_inset LatexCommand \index{-Ddirname}

\end_inset 


\family default 
 Defines the directory in which to find 
\family typewriter 
rtl.o
\family default 
 and 
\family typewriter 
system.pas
\family default 
. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
-BOEHM
\family default 

\begin_inset LatexCommand \index{-BOEHM}

\end_inset 


\begin_inset LatexCommand \index{garbage
\protected_separator 
collection}

\end_inset 

 Causes the program to be linked with the Boehm conservative garbage collector.
 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
-V
\begin_inset LatexCommand \index{-V}

\end_inset 


\family default 
 Causes the code generator to produce a verbose diagnostic listing to 
\family typewriter 
foo.lst
\family default 
 when compiling 
\family typewriter 
foo.pas
\family default 
. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
-oexefile
\begin_inset LatexCommand \index{-oexefile}

\end_inset 


\family default 
 Causes the linker to output to 
\family typewriter 
exefile
\family default 
 instead of the default output of 
\family typewriter 
p.exe.
\family default 

\layout List

\labelwidthstring 00.00.0000

\family typewriter 
-U
\begin_inset LatexCommand \index{-U}

\end_inset 


\family default 
 Defines whether references to external procedures in the assembler file
 should be preceded by an under-bar '_'.
 This is required for the coff object format but not for elf. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
-S
\begin_inset LatexCommand \index{-S}

\end_inset 


\family default 
 Suppresses assembly and linking of the program.
 An assembler file is still generated. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
-fFORMAT
\begin_inset LatexCommand \index{-fFORMAT}

\end_inset 


\family default 
 Specifies the object format to be generated by the assembler.
 The object formats currently used are elf when compiling under Unix or
 when compiling under windows using the cygwin version of the gcc linker,
 or coff when using the djgpp version of the gcc linker.
 for other formats consult the NASM documentation. 
\layout List

\labelwidthstring 00.00.0000

\family typewriter 
-cpuCGFLAG
\begin_inset LatexCommand \index{-cpuCGFLAG}

\end_inset 


\family default 
 Specifies the code generator to be used.
 Currently the code generators shown in table 
\begin_inset LatexCommand \ref{cgs}

\end_inset 

 are supported. 
\layout List

\labelwidthstring 00.00.0000

\begin_float tab 

\begin_deeper 
\layout Caption

Code generators supported
\begin_inset LatexCommand \label{cgs}

\end_inset 


\end_deeper 
\layout List


\latex latex 

\backslash centering 
\latex default 

\layout List



\LyXTable
multicol5
13 2 0 0 0 0 0 0
1 2 0 0
0 0 0 0
0 1 0 0
0 0 0 0
0 2 0 0
0 0 0 0
0 1 0 0
0 0 0 0
0 1 0 0
0 0 0 0
0 1 0 0
0 0 0 0
0 1 0 0
8 1 1 "" ""
2 0 1 "" ""
0 8 1 2 0 0 0 "" ""
0 2 1 2 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 2 0 1 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 2 0 0 0 "" ""
0 2 0 2 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 2 0 1 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 2 0 1 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 2 0 1 0 0 0 "" ""
0 8 0 0 0 0 0 "" ""
0 2 0 0 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 2 0 1 0 0 0 "" ""


\family typewriter 
CGFLAG
\family default 

\newline 
 
\family typewriter 
description
\family default 

\newline 

\family typewriter 
IA
\begin_inset LatexCommand \index{IA32}

\end_inset 

32
\family default 

\newline 
 generates code for the Intel 486 instruction-set
\newline 

\newline 
uses the NASM assembler
\newline 

\family typewriter 
Pentium
\begin_inset LatexCommand \index{Pentium}

\end_inset 


\family default 

\newline 
 generates code for the Intel P6 with MMX instruction-set
\newline 

\newline 
 uses the NASM 
\begin_inset LatexCommand \index{NASM}

\end_inset 

 assembler
\newline 
gnuPentium
\begin_inset LatexCommand \index{Pentium}

\end_inset 


\family default 

\newline 
generates code for the Intel P6 with MMX instruction-set
\newline 

\newline 
using the as
\family default 

\begin_inset LatexCommand \index{as}

\end_inset 

assembler in the gcc package
\newline 
K6
\begin_inset LatexCommand \index{K6}

\end_inset 


\family default 

\newline 
generates code for the AMD
\begin_inset LatexCommand \index{AMD}

\end_inset 

K6 instruction-set, use for Athlon
\newline 

\newline 
uses the NASM assembler
\newline 
P3
\begin_inset LatexCommand \index{P3}

\end_inset 


\family default 

\newline 
generates code for the Intel
\begin_inset LatexCommand \index{Intel}

\end_inset 

PIII processor family
\family default 

\newline 

\newline 
uses the NASM assembler
\newline 
P4
\family default 

\newline 
generates code for the Intel PIV family and Athlon XP
\newline 

\newline 
uses the NASM assembler
 


\layout List


\latex latex 

\backslash par{}
\latex default 

\end_float 


\layout Subsection

Dependencies
\layout Standard

The Vector Pascal compiler depends upon a number of other utilities which
 are usually pre-installed on Linux systems, and are freely available for
 Windows systems.
\layout List

\labelwidthstring 00.00.0000
NASM The net-wide assembler.
 This is used to convert the output of the code generator to linkable modules.
 It is freely available on the web for Windows.
 For the Pentium processor it is possible to use the 
\family typewriter 
as
\family default 
 assembler instead. 
\layout List

\labelwidthstring 00.00.0000
gcc The GNU C Compiler, used to compile the run time library and to link
 modules produced by the assembler to the run time library. 
\layout List

\labelwidthstring 00.00.0000
java The java virtual machine must be available to interpret the compiler.
 There are number of java interpreters and just in time compilers are freely
 available for Windows. 
\layout Section

Calling conventions
\layout Standard

Procedure parameters are passed using a modified C calling convention to
 facilitate calls to external C procedures.
 Parameters are pushed on to the stack from right to left.
 Value parameters are pushed entire onto the stack, var parameters are pushed
 as addresses.
\layout Paragraph

Example 
\layout LyX-Code


\size small 

\family typewriter 
unit
\protected_separator 
callconv;
\size default

\family roman 

\family default 

\size small 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\size small 

\family typewriter 
interface
\size default

\family roman 

\family default 

\size small 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\size small 

\family typewriter 
type
\protected_separator 
intarr=
\protected_separator 
array[1..8]
\protected_separator 
of
\protected_separator 
integer;
\size default

\family roman 

\family default 

\size small 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\size small 

\family typewriter 
procedure
\protected_separator 
foo(var
\protected_separator 
a:intarr;
\protected_separator 
b:intarr;
\protected_separator 
c:integer);
\size default

\family roman 

\family default 

\size small 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\size small 

\family typewriter 
implementation
\size default

\family roman 

\family default 

\size small 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\size small 

\family typewriter 
procedure
\protected_separator 
foo(var
\protected_separator 
a:intarr;
\protected_separator 
b:intarr;
\protected_separator 
c:integer);
\size default

\family roman 

\family default 

\size small 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\size small 

\family typewriter 
begin
\size default

\family roman 

\family default 

\size small 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\size small 

\family typewriter 
end;
\size default

\family roman 

\family default 

\size small 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\size small 

\family typewriter 
var
\protected_separator 
x,y:intarr;
\size default

\family roman 

\family default 

\size small 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\size small 

\family typewriter 
begin
\size default

\family roman 

\family default 

\size small 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family roman 

\family typewriter 

\size small 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
foo(x,y,3);
\size default

\family roman 

\family default 

\size small 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\size small 

\family typewriter 
end.
\size default

\family roman 

\family default 

\size small 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout Standard

This would generate the following code for the procedure foo.
\layout LyX-Code


\size footnotesize 

\family typewriter 
;
\protected_separator 
procedure
\protected_separator 
generated
\protected_separator 
by
\protected_separator 
code
\protected_separator 
generator
\protected_separator 
class
\protected_separator 
ilcg.tree.PentiumCG
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\size footnotesize 

\family typewriter 
le8e68de10c5:
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\size footnotesize 

\family typewriter 
;
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
foo
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
enter
\protected_separator 

\protected_separator 

\protected_separator 
spaceforfoo-4*1,1
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\size footnotesize 

\family typewriter 
;8
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
le8e68de118a:
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\size footnotesize 

\family typewriter 
spaceforfoo
\protected_separator 
equ
\protected_separator 
4
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\size footnotesize 

\family typewriter 
;....
\protected_separator 
code
\protected_separator 
for
\protected_separator 
foo
\protected_separator 
goes
\protected_separator 
here
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\size footnotesize 

\family typewriter 
fooexit:
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\size footnotesize 

\family typewriter 
leave
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
ret
\protected_separator 
0
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout Standard

and the calling code is
\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
push
\protected_separator 
DWORD
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
3
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
push
\protected_separator 
rightmost
\protected_separator 
argument
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
lea
\protected_separator 
esp,[
\protected_separator 

\protected_separator 
esp-32]
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
create
\protected_separator 
space
\protected_separator 
for
\protected_separator 
the
\protected_separator 
array
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
mov
\protected_separator 
DWORD
\protected_separator 

\protected_separator 
[
\protected_separator 

\protected_separator 
ebp
\protected_separator 
-52],0
\protected_separator 

\protected_separator 
;
\protected_separator 
for
\protected_separator 
loop
\protected_separator 
to
\protected_separator 
copy
\protected_separator 
the
\protected_separator 
array
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
le8e68de87fd:
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
the
\protected_separator 
loop
\protected_separator 
is
\protected_separator 

\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
unrolled
\protected_separator 
twice
\protected_separator 
and
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
cmp
\protected_separator 
DWORD
\protected_separator 

\protected_separator 
[
\protected_separator 

\protected_separator 
ebp-52],
\protected_separator 
7
\protected_separator 

\protected_separator 
;
\protected_separator 
parallelised
\protected_separator 
to
\protected_separator 
copy
\protected_separator 

\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
16
\protected_separator 
bytes
\protected_separator 
per
\protected_separator 
cycle
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
jg
\protected_separator 
near
\protected_separator 

\protected_separator 
le8e68de87fe
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
mov
\protected_separator 
ebx,DWORD
\protected_separator 

\protected_separator 
[
\protected_separator 

\protected_separator 
ebp
\protected_separator 

\protected_separator 
-52]
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
imul
\protected_separator 

\protected_separator 

\protected_separator 
ebx,
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
4
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
movq
\protected_separator 
MM1,
\protected_separator 
[
\protected_separator 

\protected_separator 
ebx+
\protected_separator 
le8e68dddaa2-48]
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
movq
\protected_separator 

\protected_separator 
[
\protected_separator 

\protected_separator 
esp+ebx],MM1
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
mov
\protected_separator 
eax,DWORD
\protected_separator 

\protected_separator 
[
\protected_separator 

\protected_separator 
ebp+
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
-52]
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
lea
\protected_separator 
ebx,[
\protected_separator 

\protected_separator 
eax+
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
2]
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
imul
\protected_separator 

\protected_separator 

\protected_separator 
ebx,
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
4
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
movq
\protected_separator 
MM1,
\protected_separator 
[
\protected_separator 

\protected_separator 
ebx+
\protected_separator 
le8e68dddaa2
\protected_separator 
-48]
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
movq
\protected_separator 

\protected_separator 
[
\protected_separator 

\protected_separator 
esp+ebx],MM1
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
lea
\protected_separator 
ebx,[
\protected_separator 

\protected_separator 
ebp+
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
-52]
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
add
\protected_separator 

\protected_separator 
DWORD
\protected_separator 

\protected_separator 
[
\protected_separator 
ebx],
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
4
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
jmp
\protected_separator 

\protected_separator 
le8e68de87fd
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
le8e68de87fe:
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
end
\protected_separator 
of
\protected_separator 
array
\protected_separator 

\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
copying
\protected_separator 
loop
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
push
\protected_separator 
DWORD
\protected_separator 

\protected_separator 
le8e68dddaa2-32
\protected_separator 
;
\protected_separator 
push
\protected_separator 
the
\protected_separator 
address
\protected_separator 
of
\protected_separator 
the
\protected_separator 

\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
var
\protected_separator 
parameter
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
EMMS
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
clear
\protected_separator 
MMX
\protected_separator 
state
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 

\protected_separator 
call
\protected_separator 
le8e68de10c5
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
call
\protected_separator 
the
\protected_separator 
local
\protected_separator 

\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
label
\protected_separator 
for
\protected_separator 
foo
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
add
\protected_separator 
esp,
\protected_separator 
40
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
free
\protected_separator 
space
\protected_separator 
on
\protected_separator 
the
\protected_separator 
stack
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout Subsubsection

Function results
\layout Standard

Function results are returned in registers for scalars following the C calling
 convention for the operating system on which the compiler is implemented.
 Records, strings and sets are returned by the caller passing an implicit
 parameter containing the address of a temporary buffer in the calling environme
nt
 into which the result can be assigned.
 Given the following program
\layout Standard


\family typewriter 
program
\family default 

\layout Standard


\family typewriter 
type t1= set of char;
\family default 

\layout Standard


\family typewriter 
var x,y:t1;
\family default 

\layout Standard


\family typewriter 
function bar:t1;begin bar:=y;end;
\family default 

\layout Standard


\family typewriter 

\protected_separator 

\family default 

\layout Standard


\family typewriter 
begin
\family default 

\layout Standard


\family typewriter 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
x:=bar;
\family default 

\layout Standard


\family typewriter 
end.
\family default 

\layout Standard

The call of bar would generate
\layout LyX-Code


\protected_separator 

\size footnotesize 

\size default

\family typewriter 

\size footnotesize 
push
\protected_separator 
ebp
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
add
\protected_separator 

\protected_separator 
dword[esp]
\protected_separator 
,
\protected_separator 
-128
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
address
\protected_separator 
of
\protected_separator 
buffer
\protected_separator 
on
\protected_separator 
stack
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
call
\protected_separator 
le8eb6156ca8
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
call
\protected_separator 
bar
\protected_separator 
to
\protected_separator 
place
\protected_separator 

\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
result
\protected_separator 
in
\protected_separator 
buffer
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
add
\protected_separator 
esp,
\protected_separator 
4
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
discard
\protected_separator 
the
\protected_separator 
address
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
mov
\protected_separator 
DWORD
\protected_separator 

\protected_separator 
[
\protected_separator 

\protected_separator 
ebp+
\protected_separator 
-132],
\protected_separator 
0;
\protected_separator 
for
\protected_separator 
loop
\protected_separator 
to
\protected_separator 
copy
\protected_separator 

\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
the
\protected_separator 
set
\protected_separator 
16
\protected_separator 
bytes
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
le8eb615d99f:
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
at
\protected_separator 
a
\protected_separator 
time
\protected_separator 
into
\protected_separator 
x
\protected_separator 
using
\protected_separator 
the
\protected_separator 

\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
;
\protected_separator 
MMX
\protected_separator 
registers
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
cmp
\protected_separator 
DWORD
\protected_separator 

\protected_separator 
[
\protected_separator 

\protected_separator 
ebp+
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
-132],
\protected_separator 

\protected_separator 
31
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
jg
\protected_separator 
near
\protected_separator 

\protected_separator 
le8eb615d9910
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
mov
\protected_separator 
ebx,DWORD
\protected_separator 

\protected_separator 
[
\protected_separator 

\protected_separator 
ebp+
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
-132]
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
movq
\protected_separator 
MM1,
\protected_separator 
[
\protected_separator 

\protected_separator 
ebx+ebp
\protected_separator 
+
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
-128]
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
movq
\protected_separator 

\protected_separator 
[
\protected_separator 

\protected_separator 
ebx+ebp
\protected_separator 
+
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
-64],MM1
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
mov
\protected_separator 
eax,DWORD
\protected_separator 

\protected_separator 
[
\protected_separator 

\protected_separator 
ebp+
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
-132]
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
lea
\protected_separator 
ebx,[
\protected_separator 

\protected_separator 
eax+
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
8]
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
movq
\protected_separator 
MM1,
\protected_separator 
[
\protected_separator 

\protected_separator 
ebx+ebp
\protected_separator 
+
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
-128]
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
movq
\protected_separator 

\protected_separator 
[
\protected_separator 

\protected_separator 
ebx+ebp
\protected_separator 
+
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
-64],MM1
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
lea
\protected_separator 
ebx,[
\protected_separator 

\protected_separator 
ebp+
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
-132]
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
add
\protected_separator 

\protected_separator 
DWORD
\protected_separator 

\protected_separator 
[
\protected_separator 
ebx],
\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 

\protected_separator 
16
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
jmp
\protected_separator 

\protected_separator 
le8eb615d99f
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout LyX-Code


\protected_separator 

\family typewriter 

\size footnotesize 
le8eb615d9910:
\size default

\family default 

\size footnotesize 

\latex latex 

\backslash par{}
\latex default 

\size default

\layout Section

Array representation
\layout Standard

The maximum number of array dimensions supported in the compiler is 5.
\layout Standard

A static
\begin_inset LatexCommand \index{static}

\end_inset 

 array
\begin_inset LatexCommand \index{array, static}

\end_inset 

 is represented simply by the number of bytes required to store the array
 being allocated in the global segment or on the stack.
\layout Standard

A dynamic array
\begin_inset LatexCommand \index{array}

\end_inset 


\begin_inset LatexCommand \index{array, dynamic}

\end_inset 

 is always represented on the heap
\begin_inset LatexCommand \index{heap}

\end_inset 

.
 Since its rank
\begin_inset LatexCommand \index{rank}

\end_inset 

 is known to the compiler what needs to be stored at run time are the bounds
 and the means to access it.
 For simplicity we make the format of dynamic and conformant arrays the
 same.
 Thus for schema
\begin_inset LatexCommand \index{schema}

\end_inset 


\layout Standard


\family typewriter 
s(a,b,c,d:integer)= array[a..b,c..d] of integer 
\family default 

\layout Standard

whose run time bounds are evaluated to be 2..4,3..7 we would have the following
 structure:
\layout Standard


\latex latex 

\backslash vspace{0.2cm}
\latex default 
 
\latex latex 

\backslash centering 
\latex default 

\layout Standard



\LyXTable
multicol5
7 3 0 0 0 0 0 0
1 2 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0
8 1 1 "" ""
8 0 1 "" ""
8 0 1 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 1 2 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""
0 8 0 1 0 0 0 "" ""

address
\newline 
 field
\newline 
 value
\newline 
x
\newline 
 base of data
\newline 
 address of first integer in the array
\newline 
x+4
\newline 
 a
\newline 
 2
\newline 
x+8
\newline 
 b
\newline 
 4
\newline 
x+12
\newline 
 step
\newline 
 20
\newline 
x+16
\newline 
 c
\newline 
 3
\newline 
x+20
\newline 
 d
\newline 
 7
 


\layout Standard


\latex latex 

\backslash par{}
\latex default 

\latex latex 
 
\backslash vspace{0.3cm}
\latex default 

\layout Standard

The base address for a schematic array on the heap, will point at the first
 byte after the array header show.
 For a conformant array, it will point at the first data byte of the array
 or array range
\begin_inset LatexCommand \index{range}

\end_inset 

 being passed as a parameter.
 The step field specifies the length of an element of the second dimension
 in bytes.
 It is included to allow for the case where we have a conformant
\begin_inset LatexCommand \index{conformant}

\end_inset 

 array
\begin_inset LatexCommand \index{array, conformant}

\end_inset 

 formal parameter
\layout Standard


\family typewriter 
x:array[a..b:integer,c..d:integer] of integer
\family default 

\layout Standard

to which we pass as actual parameter
\begin_inset LatexCommand \index{parameter}

\end_inset 

 the range
\layout Standard


\family typewriter 
p[2..4,3..7] 
\family default 

\layout Standard

as actual parameter, where 
\family typewriter 
p:array[1..10,1..10] of integer
\family default 

\layout Standard

In this case the base address would point at @p[2,3] and the step would be 40 - the length of 10 integers.
\layout Subsection

Range
\begin_inset LatexCommand \index{range}

\end_inset 

 checking
\layout Standard

When arrays are indexed, the compiler plants run time checks to see if the
 indices are within bounds
\begin_inset LatexCommand \index{bounds}

\end_inset 

.
 In many cases the optimiser is able to remove these checks, but in those
 cases where it is unable to do so, some performance degradation can occur.
 Range checks can be disabled or enabled by the compiler directives.
\layout Standard

{$r-} { disable range checks }
\layout Standard

{$r+} { enable range checks }
\layout Standard

Performance can be further enhanced by the practice of declaring arrays
 to have lower bounds of zero.
 The optimiser is generally able to generate more efficient code for zero
 based arrays.
\the_end
