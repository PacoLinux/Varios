#LyX 1.2 created this file. For more info see http://www.lyx.org/
\lyxformat 2.15
\textclass article
\paperfontsize 10
\papersize a4paper
\options  

\layout Standard


\latex latex 

\backslash begin{tabbing}
\newline 
***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash ={
\backslash kill
\newline 
}
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{unit}  
\backslash textit{bloomfilter} ;}}
\backslash 
\backslash 
\newline 

\backslash end{tabbing}
\latex default 
 This unit provides a set of library routines for creating and manipulating
 index-sets for indexing the words in documents. 
\latex latex 

\backslash begin{tabbing}
\newline 
***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash ={
\backslash kill
\newline 
}
\backslash 
\backslash 
\newline 

\backslash +
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{interface} }}
\backslash 
\backslash 
\newline 

\backslash +
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{const} }}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{maxhash} =1023;}}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{bloomdepth} =8;}}
\backslash 
\backslash 
\newline 

\backslash end{tabbing}
\latex default 
 The above constants control overall dimensions of the index-sets. 
\family sans 
Maxhash
\family default 
 defines highest ordinal number in the set, 
\family sans 
bloomdepth
\family default 
 defines how many index sets are to be used for each file 
\latex latex 

\backslash begin{tabbing}
\newline 
***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash ={
\backslash kill
\newline 
}
\backslash + 
\backslash + 
\backslash 
\backslash 
\newline 

\backslash <
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{type} }}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{hashcode}  =0..
\backslash textit{maxhash} ;}}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{bloomrange}  = 1..
\backslash textit{bloomdepth} ;}}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{filter}  = 
\backslash textbf{set}  
\backslash textbf{of}  
\backslash textit{hashcode} ;}}
\backslash 
\backslash 
\newline 

\backslash end{tabbing}
\latex default 
 A 
\family sans 
filter
\family default 
 is a single index set, these are then grouped into a : 
\latex latex 

\backslash begin{tabbing}
\newline 
***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash ={
\backslash kill
\newline 
}
\backslash + 
\backslash + 
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{bloom}  = 
\backslash textbf{array} [
\backslash textit{bloomrange} ] 
\backslash textbf{of}  
\backslash textit{filter} ;}}
\backslash 
\backslash 
\newline 

\backslash end{tabbing}
\latex default 
 A lexeme will be hashed to a hash vector, a vector of independently computed
 hash codes 
\latex latex 

\backslash begin{tabbing}
\newline 
***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash ={
\backslash kill
\newline 
}
\backslash + 
\backslash + 
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{hashvector}  = 
\backslash textbf{array}  [
\backslash textit{bloomrange} ] 
\backslash textbf{of}  
\backslash textit{integer} ;}}
\backslash 
\backslash 
\newline 

\backslash end{tabbing}
\latex default 
 Each text file is then described by a 
\family sans 
filefilter
\family default 
 which encodes information about the words in the file along with the filename
 
\latex latex 

\backslash begin{tabbing}
\newline 
***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash ={
\backslash kill
\newline 
}
\backslash + 
\backslash + 
\backslash 
\backslash 
\newline 

\backslash +
\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{filefilter}  = 
\backslash textbf{record} }}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{wordset} : 
\backslash textit{bloom}}; }
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{filename} : 
\backslash textit{string}}; }
\backslash 
\backslash 
\newline 

\backslash <
\backslash -
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{end} ;}}
\backslash 
\backslash 
\newline 

\backslash <
\backslash textsf{
\backslash textbf{procedure}  
\backslash textit{hashword} 
\backslash textit{(} 
\backslash textbf{var}  
\backslash textit{theword} :
\backslash textbf{string} ; 
\backslash textbf{var}  
\backslash textit{codes} :
\backslash textit{hashvector} );} (see Section 
\backslash ref{sec:bloomfilterhashword} )
\backslash 
\backslash 
\newline 

\backslash <
\backslash textsf{
\backslash textbf{procedure}  
\backslash textit{setfilter} 
\backslash textit{(} 
\backslash textbf{var}  
\backslash textit{theword} :
\backslash textbf{string} ; 
\backslash textbf{var}  
\backslash textit{f} :
\backslash textit{bloom} );} (see Section 
\backslash ref{sec:bloomfiltersetfilter} )
\backslash 
\backslash 
\newline 

\backslash <
\backslash textsf{
\backslash textbf{function}  
\backslash textit{testfilter} 
\backslash textit{(} 
\backslash textbf{var}  
\backslash textit{theword} :
\backslash textbf{string} ; 
\backslash textbf{var}  
\backslash textit{f} :
\backslash textit{bloom} ):
\backslash textit{boolean} ;} (see Section 
\backslash ref{sec:bloomfiltertestfilter} )
\backslash 
\backslash 
\newline 

\backslash <
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{implementation} }}
\backslash 
\backslash 
\newline 

\backslash 
\backslash 
\newline 

\backslash <
\backslash textsf{
\backslash textbf{procedure}  
\backslash textit{hashword} 
\backslash textit{(} 
\backslash textbf{var}  
\backslash textit{theword} :
\backslash textbf{string} ; 
\backslash textbf{var}  
\backslash textit{codes} :
\backslash textit{hashvector} );} (see Section 
\backslash ref{sec:bloomfilterhashword} )
\backslash 
\backslash 
\newline 

\backslash <
\backslash textsf{
\backslash textbf{procedure}  
\backslash textit{setfilter} 
\backslash textit{(} 
\backslash textbf{var}  
\backslash textit{theword} :
\backslash textbf{string} ; 
\backslash textbf{var}  
\backslash textit{f} :
\backslash textit{bloom} );} (see Section 
\backslash ref{sec:bloomfiltersetfilter} )
\backslash 
\backslash 
\newline 

\backslash <
\backslash textsf{
\backslash textbf{function}  
\backslash textit{testfilter} 
\backslash textit{(} 
\backslash textbf{var}  
\backslash textit{theword} :
\backslash textbf{string} ; 
\backslash textbf{var}  
\backslash textit{f} :
\backslash textit{bloom} ):
\backslash textit{boolean} ;} (see Section 
\backslash ref{sec:bloomfiltertestfilter} )
\backslash 
\backslash 
\newline 

\backslash -
\backslash <
\backslash +
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{begin} }}
\backslash 
\backslash 
\newline 

\backslash <
\backslash -
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{end} .}}
\backslash 
\backslash 
\newline 

\backslash 
\backslash 
\newline 

\backslash 
\backslash 
\newline 

\backslash end{tabbing}
\latex default 

\layout Section

hashword
\layout Standard


\begin_inset LatexCommand \label{sec:bloomfilterhashword}

\end_inset 


\layout Standard


\latex latex 

\backslash begin{tabbing}
\newline 
***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash ={
\backslash kill
\newline 
}
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{procedure}  
\backslash textit{hashword} 
\backslash textit{(} 
\backslash textbf{var}  
\backslash textit{theword} :
\backslash textbf{string} ; 
\backslash textbf{var}  
\backslash textit{codes} :
\backslash textit{hashvector} );}}
\backslash 
\backslash 
\newline 

\backslash end{tabbing}
\latex default 
 This procedure performs parallel hashes on 
\family sans 
theword
\family default 
 to yield a a vector of hashcodes in 
\family sans 
codes
\family default 
.
 It uses for this purpose the vector of prime numbers: 
\latex latex 

\backslash begin{tabbing}
\newline 
***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash ={
\backslash kill
\newline 
}
\backslash 
\backslash 
\newline 

\backslash +
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{const} }}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{primes: 
\backslash textbf{ array } 
\backslash textsf{[
\backslash textit{bloomrange} ] } 
\backslash textbf{ of } 
\backslash textsf{ 
\backslash textit{integer} =
\backslash textit{(} 7,11,13,17,19,23,29,31);}}
\backslash 
\backslash 
\newline 

\backslash <
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{var} }}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{Let 
\backslash textit{i}, 
\backslash textit{l} 
\backslash (
\backslash in
\backslash ) integer;}}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{Let 
\backslash textit{j} 
\backslash (
\backslash in
\backslash ) hashcode;}}
\backslash 
\backslash 
\newline 

\backslash -
\backslash <
\backslash +
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{begin} }}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{l}
\backslash (
\backslash leftarrow
\backslash ) 
\backslash textit{length} (
\backslash textit{theword})}; }
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{codes}
\backslash (
\backslash leftarrow
\backslash ) 0}; }
\backslash 
\backslash 
\newline 

\backslash +
\backslash parbox{14cm}{
\backslash textsf {
\backslash textbf {for } 
\backslash textsf{
\backslash textit{i}
\backslash (
\backslash leftarrow
\backslash ) 1} 
\backslash textbf{ to } 
\backslash textsf{
\backslash textit{l}} 
\backslash textbf{ do } }}
\backslash 
\backslash 
\newline 

\backslash <
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{begin} }}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{j}
\backslash (
\backslash leftarrow
\backslash ) 
\backslash textbf{ord}(
\backslash textit{theword}
\backslash (_{
\backslash textit{i}}
\backslash ))}; }
\backslash 
\backslash 
\newline 

\backslash end{tabbing}
\latex default 
 The following line has the effect of computing the polynomials 
\begin_inset Formula \[ c_{1}p_{1}^{l-1}+c_{2}p_{1}^{l-2}...+c_{l-1}p_{1}+c_{l}\]
\end_inset 

 
\begin_inset Formula \[ c_{1}p_{2}^{l-1}+c_{2}p_{2}^{l-2}...+c_{l-1}p_{2}+c_{l}\]
\end_inset 

 
\begin_inset Formula \[ c_{1}p_{3}^{l-1}+c_{2}p_{3}^{l-2}...+c_{l-1}p_{3}+c_{l}\]
\end_inset 

 etc
\newline 
 where 
\begin_inset Formula \( c_{j}\)
\end_inset 

 is the 
\begin_inset Formula \( j\)
\end_inset 

th character in the string and 
\begin_inset Formula \( p_{i}\)
\end_inset 

 is the 
\begin_inset Formula \( i\)
\end_inset 

the prime in the vector of primes.
 Where the instructionsets allow it will be computed in parallel. 
\latex latex 

\backslash begin{tabbing}
\newline 
***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash ={
\backslash kill
\newline 
}
\backslash + 
\backslash + 
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{codes}
\backslash (
\backslash leftarrow
\backslash ) 
\backslash textit{codes} 
\backslash (
\backslash times
\backslash ) 
\backslash textit{primes} + 
\backslash textit{j}}; }
\backslash 
\backslash 
\newline 

\backslash <
\backslash -
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{end} ;}}
\backslash 
\backslash 
\newline 

\backslash end{tabbing}
\latex default 
 Constrain the result to be in the appropriate range 
\latex latex 

\backslash begin{tabbing}
\newline 
***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash ={
\backslash kill
\newline 
}
\backslash + 
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{codes}
\backslash (
\backslash leftarrow
\backslash ) 
\backslash textit{codes} 
\backslash (
\backslash wedge
\backslash ) 
\backslash textit{maxhash}}; }
\backslash 
\backslash 
\newline 

\backslash <
\backslash -
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{end} ;}}
\backslash 
\backslash 
\newline 

\backslash end{tabbing}
\latex default 

\layout Section

setfilter
\layout Standard


\begin_inset LatexCommand \label{sec:bloomfiltersetfilter}

\end_inset 


\layout Standard


\latex latex 

\backslash begin{tabbing}
\newline 
***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash ={
\backslash kill
\newline 
}
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{procedure}  
\backslash textit{setfilter} 
\backslash textit{(} 
\backslash textbf{var}  
\backslash textit{theword} :
\backslash textbf{string} ; 
\backslash textbf{var}  
\backslash textit{f} :
\backslash textit{bloom} );}}
\backslash 
\backslash 
\newline 

\backslash end{tabbing}
\latex default 
 Compute the hash vector for the word and insert the hashed elements into
 all of the filters in the bloom. 
\latex latex 

\backslash begin{tabbing}
\newline 
***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash ={
\backslash kill
\newline 
}
\backslash 
\backslash 
\newline 

\backslash +
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{var} }}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{Let 
\backslash textit{codes} 
\backslash (
\backslash in
\backslash ) hashvector;}}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{Let 
\backslash textit{i} 
\backslash (
\backslash in
\backslash ) integer;}}
\backslash 
\backslash 
\newline 

\backslash -
\backslash <
\backslash +
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{begin} }}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{hashword} (
\backslash textit{theword}, 
\backslash textit{codes})}; }
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{f}
\backslash (
\backslash leftarrow
\backslash ) 
\backslash textit{f} + 
\backslash textit{}[codes]}; }
\backslash 
\backslash 
\newline 

\backslash <
\backslash -
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{end} ;}}
\backslash 
\backslash 
\newline 

\backslash end{tabbing}
\latex default 

\layout Section

testfilter
\layout Standard


\begin_inset LatexCommand \label{sec:bloomfiltertestfilter}

\end_inset 


\layout Standard


\latex latex 

\backslash begin{tabbing}
\newline 
***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash ={
\backslash kill
\newline 
}
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{function}  
\backslash textit{testfilter} 
\backslash textit{(} 
\backslash textbf{var}  
\backslash textit{theword} :
\backslash textbf{string} ; 
\backslash textbf{var}  
\backslash textit{f} :
\backslash textit{bloom} ):
\backslash textit{boolean} ;}}
\backslash 
\backslash 
\newline 

\backslash end{tabbing}
\latex default 
 Compute the hash vector for the word and test if the coresponding elements
 are present in all the filters of the bloom.
 Note the use of and-reduction on the vector of booleans that results from
 the expression 
\family sans 
codes in f
\family default 
. 
\latex latex 

\backslash begin{tabbing}
\newline 
***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash =***
\backslash ={
\backslash kill
\newline 
}
\backslash 
\backslash 
\newline 

\backslash +
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{var} }}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{Let 
\backslash textit{codes} 
\backslash (
\backslash in
\backslash ) hashvector;}}
\backslash 
\backslash 
\newline 

\backslash -
\backslash <
\backslash +
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{begin} }}
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{hashword} (
\backslash textit{theword}, 
\backslash textit{codes})}; }
\backslash 
\backslash 
\newline 

\backslash parbox{14cm}{
\backslash textsf{
\backslash textit{testfilter}
\backslash (
\backslash leftarrow
\backslash ) 
\backslash textbf{ 
\backslash (
\backslash backslash 
\backslash wedge
\backslash )  } (
\backslash textit{codes} 
\backslash (
\backslash in
\backslash ) 
\backslash textit{f}) }; }
\backslash 
\backslash 
\newline 

\backslash <
\backslash -
\backslash parbox{14cm}{
\backslash textsf{
\backslash textbf{end} ;}}
\backslash 
\backslash 
\newline 

\backslash end{tabbing}
\latex default 

\the_end
