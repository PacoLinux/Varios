package ilcg.tree;
/**
 *  A class that overides the automatically produced class IA32 and code
 *  generates code for the basic ia32 architecture with a FPU but not MMX
 *  extensions. It requires gcc and nasmw as linker and assembler to be
 *  installed
 *
 *@author     wpc
 *@created    June 21, 2001
 */

public class IA32CG extends IA32 {

/**
	 *  Create a pentium code generator and overide the rollback buffer with an
	 *  intel peephole optimizer
	 */
	public IA32CG() {
		buf = new IntelPeep();
	}

    boolean usestackfor(String type){ 
		if(type.equals(Node.ieee32) || type.equals(Node.ieee64) || type.equals(Node.int64))return true;
		return false;
	}

	/**
	 *  Overide this to provide the mmx parallelism
	 *
	 *@param  elementType  Description of Parameter
	 *@return              The parallelism value
	 */
	public int getParallelism(String elementType) {
		if (elementType.equals(Node.int32)) {
			return 1;
		}
		if (elementType.equals(Node.int16)) {
			return 1;
		}
		if (elementType.equals(Node.int8)) {
			return 1;
		}
		if (elementType.equals(Node.uint32)) {
			return 1;
		}
		if (elementType.equals(Node.uint16)) {
			return 1;
		}
		if (elementType.equals(Node.uint8)) {
			return 1;
		}
		return 1;
	}



