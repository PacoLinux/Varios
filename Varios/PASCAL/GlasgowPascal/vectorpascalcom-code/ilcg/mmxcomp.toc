\contentsline {chapter}{\numberline {1}Multi-media instruction-sets}{3}
\contentsline {section}{\numberline {1.1}The SIMD model}{3}
\contentsline {section}{\numberline {1.2}The MMX register architecture}{4}
\contentsline {section}{\numberline {1.3}MMX data-types}{5}
\contentsline {section}{\numberline {1.4}3D Now!}{8}
\contentsline {section}{\numberline {1.5}Streaming SIMD}{9}
\contentsline {subsection}{\numberline {1.5.1}Cache optimisation}{10}
\contentsline {chapter}{\numberline {2}Possible programming techniques for MMX and Streaming SIMD}{12}
\contentsline {section}{\numberline {2.1}Direct use of assembler code}{12}
\contentsline {subsection}{\numberline {2.1.1}The example program}{13}
\contentsline {section}{\numberline {2.2}Use of assembler intrinsics}{14}
\contentsline {section}{\numberline {2.3}Use of C++ classes}{15}
\contentsline {section}{\numberline {2.4}High level language expressions of data parallelism}{16}
\contentsline {chapter}{\numberline {3}ILCG as a notation for describing instuctionsets}{19}
\contentsline {section}{\numberline {3.1}Supported types}{20}
\contentsline {subsection}{\numberline {3.1.1}Data formats}{20}
\contentsline {subsection}{\numberline {3.1.2}Typed formats}{20}
\contentsline {subsection}{\numberline {3.1.3}Ref types}{20}
\contentsline {section}{\numberline {3.2}Supported operations}{20}
\contentsline {subsection}{\numberline {3.2.1}Type coercions}{20}
\contentsline {subsection}{\numberline {3.2.2}Arithmetic}{21}
\contentsline {subsection}{\numberline {3.2.3}Memory}{21}
\contentsline {subsection}{\numberline {3.2.4} Assignment }{22}
\contentsline {subsection}{\numberline {3.2.5} Dereferencing}{22}
\contentsline {section}{\numberline {3.3}Machine description}{22}
\contentsline {subsection}{\numberline {3.3.1}Registers }{22}
\contentsline {subsubsection}{Aliasing}{22}
\contentsline {subsection}{\numberline {3.3.2}Register sets}{23}
\contentsline {subsection}{\numberline {3.3.3}Register Arrays}{23}
\contentsline {subsection}{\numberline {3.3.4}Register Stacks}{23}
\contentsline {paragraph}{PUSH}{23}
\contentsline {paragraph}{POP}{24}
\contentsline {subsection}{\numberline {3.3.5}Instruction formats}{24}
\contentsline {section}{\numberline {3.4}The package ilcg.tree}{24}
\contentsline {chapter}{\numberline {4}The ILCG code-generator generator}{26}
\contentsline {chapter}{\numberline {5}The grammer for processor definition}{27}
\contentsline {section}{\numberline {5.1}ILCG grammar}{27}
\contentsline {subsection}{\numberline {5.1.1}Helpers}{27}
\contentsline {subsection}{\numberline {5.1.2}Tokens}{28}
\contentsline {subsection}{\numberline {5.1.3}Non terminal symbols}{31}
\contentsline {section}{\numberline {5.2}Pentium machine description}{34}
\contentsline {subsection}{\numberline {5.2.1}Declare types to correspond to internal ilcg types }{34}
\contentsline {subsection}{\numberline {5.2.2}compiler configuration flags }{34}
\contentsline {subsection}{\numberline {5.2.3}Register declarations}{35}
\contentsline {subsection}{\numberline {5.2.4}Operator definition}{35}
\contentsline {subsection}{\numberline {5.2.5}Data formats}{36}
\contentsline {subsection}{\numberline {5.2.6}Choice of effective address}{37}
\contentsline {subsection}{\numberline {5.2.7} Formats for all memory addresses}{38}
\contentsline {subsection}{\numberline {5.2.8}Instruction patterns for the 386}{38}
\contentsline {subsection}{\numberline {5.2.9}Multi Instruction Templates}{40}
\contentsline {subsection}{\numberline {5.2.10}Intel fpu instructions}{41}
\contentsline {subsection}{\numberline {5.2.11}MMX registers and instructions}{43}
\contentsline {subsubsection}{Registers}{43}
\contentsline {subsubsection}{Addressing modes}{43}
\contentsline {subsubsection}{MMX instructions}{44}
