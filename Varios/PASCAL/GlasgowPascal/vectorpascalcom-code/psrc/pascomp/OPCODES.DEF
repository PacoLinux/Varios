;  opcodes .def file of abstract machine instructions
;  for the salgol compiler
;  this is to serve as input to the program cgengen.exe

=0
addresssize
add_eax_ecx
add_eax_tos
and_eax_ecx
assindireax
assindirb
assindirc
assindiri
assindirp
assindirr
assindir_al
cmp_eax_ecx
cmpoppntr
cwdop
dupi
dupp
end_write
enterframe
exitframe
forprep
heappntr
heappopp
heappopreal
heappushp
heappushreal
idiv_ecx
imul_ecx
int18
int21
lindirb
lindirc
lindiri
lindirp
lindirr
minusop
movp
movr
mov_eax_esesi
mov_eax_esi
mov_ax_sp
mov_bp_sp
mov_bx_sp
mov_edi_eax
mov_es_dx
mov_es_ss
mov_esi_eax
multop
neg_op
not_op
no_op
or_eax_ecx
outbyte
plusop
popesesi
popes_movesieax
popp
popreal
pop_eax
pop_bx
pop_cx
pop_ecx
pop_es
pop_esi
procsize
prolog86
pushc_esesi
pushc_sssi
pushdisp
pushp
pushreal
push_eax
push_cs
push_bp
push_bx
push_edx
push_esesi
push_ss
push_sssi
realsize
shl_eax_cl
shrink
shr_eax_cl
stackpntr
start_paramsi
start_paramsp
start_paramsr
start_paramsv
start_write
stridesize
sub_eax_ecx
=1
assindiril
llint
pluslint
subsassi
subsassr
subsi
subsr
lindira
assindira
call_glob
call_loc
add_eax
lea_eax
mov_eax
add_l_tos
add_sp
cmp_eax
ldsesi
dw
epilog
globali
globaleax
globaladdr
globalp
globalproc
globalr
lea_eax_glob
lea_esi_glob
locali
localeax
locplusi
locminusi
localaddr
localaddr_esi
localp
localproc
localr
getlev
globalassi
globalassr
globalassp
localassi
localassr
localassp
localmovi
localmovr
localmovp
discard_globali
pop_es_edi
push_es_esi
add_edi
add_esi
=2
loadi
loadaddr
loadr
loadp
loadproc
assi
assr
assp
=2
call_
=4
prolog
db
assindirbl
=5
jump
jumpt
jumptt
cjump
fortest
forstep
minfortest
minforstep
=6
jl
jle
jg
jge
je
jnz
=7
call_static
sspushfarpntr
llreal_op
cslea_eax
;------------------------------- Calls to C library
=5
calld
;----------------------
=0
intsize
;------------------- optimisations
; first 2 instructions replaced by 3rd
; parameters replaced as specified on 4th line
=8
globaladdr
lindiri
globali
1 2
=8
localaddr
pop_esi
localaddr_esi
1 2
=8
localaddr
lindiri
locali
1 2
=8
localaddr
lindirc
localproc
1 2
=8
globaladdr
lindirc
globalproc
1 2
=8
push_eax
pop_eax
no_op
1 2
=8
push_eax
pop_esi
mov_esi_eax
1 2
=8
mov_esi_eax
pop_es
popes_movesieax
1 2
=8
llint
pop_eax
mov_eax
1 2
=8
no_op
pop_ecx
pop_ecx
1 2
=8
locali
plusop
locplusi
1 2
=8
locali
pop_eax
localeax
1 2
=8
globali
pop_eax
globaleax
1 2
=8
push_eax
assindiri
assindireax
1 2
=8
mov_eax
assindir_al
assindirbl
1 2
=8
locali
minusop
locminusi
1 2
=8
pop_ecx
add_eax_ecx
add_eax_tos
1 2
=8
mov_eax
add_eax_tos
add_l_tos
1 2
=8
push_eax
add_l_tos
add_eax
3 4
=8
push_esesi
pop_eax
mov_eax_esesi
1 2
=8
push_ss
pop_es
mov_es_ss
1 2
=8
mov_es_ss
pushc_esesi
pushc_sssi
1 2
=8
llint
plusop
pluslint
1 2
=8
lea_eax_glob
mov_esi_eax
lea_esi_glob
1 2
*