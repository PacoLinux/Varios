Automatic SIMD and Multi-core parallelisation in an imperative 
language.

Paul Cockshott, Tamerlan Tajadinov

1 Hardware Context

Mention current tendancy to have both SIMD and multi-core. 
Describe standard production intel chips and the forthcomming 
Larabee. --- TAMERLAN

2 The Example Language

Quick outline of the language Vector Pascal. Mention that it is 
targeted particularly at image processing applications. Refer to 
previous publications on it. Explain its relationship to standard 
pascal. Explain that lessons from this can be extended easily to 
Fortran 95, ZPL or possible MATLAB compilers. --- TAMERLAN

3 Parsing and Automatic Raising of Operators and Functions

Discuss the semantics of the array extension to Pascal. Explain 
how the parser does this, how it avoids creating intermediate 
results. --- PAUL

4 Opportunities to Parallelise Array Assignments

Explain why SIMD code is particularly appropriate for vectors or 
for the 2nd dimension of matrices. Explain why multi core can 
readily operate on 1st dimension of matrices. Explain the best 
assignment of processors to rows of the matrix -- doing alternate 
rows instead of the first half then the 2nd half. == Tamerlan

5 Transformation for SIMD Parallelism

Explain the code sequence transformations from sequention to 
vectorised loops === Paul

6 Transformation for Multi-core Parallelism

Paul to do this

7 Task Parallelism Problems with Block Structure

Paul to do this explain how it is necessary for the tasks on 
other stacks to access intermediate frames on the main stack. 
==Paul

Show the code sequence that implements the task execute on the 
Pentium ===Tamerlan

8 The PURE Function Extension

Tamerlan

9 An Example Program

Give 3 versions of Mandelbrot, the current Mandelbrot1a, the 
Mandlebrot2 and a mandelbrot3 derived from 1a but with the use of 
a Pure function.

10 Performance Comparisons

Compare versions against number of processors and against 
instructionsets

Compare also with a good C version 

Tamerlan to do this.

