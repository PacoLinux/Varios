
; Bliss-32 7.352	Saturday 22-AUG-1978 02:57:33	DBB3:[PATCH.SRC]PATBAS.B32;18					Page 1
; Digital Equipment Corporation
;
;	0001	MODULE PATBAS (%IF %VARIANT EQL 1
;     L 0002			%THEN
;	0003				ADDRESSING_MODE (EXTERNAL = LONG_RELATIVE,
;	0004						 NONEXTERNAL = LONG_RELATIVE),
;	0005			%FI
;	0006			IDENT = 'X01.17') =
;	0007	BEGIN
;	0008	
;	0009	! Copyright (C) 1976
;	0010	! Digital Equipment Corporation, Maynard, Massachusetts 01754
;	0011	!
;	0012	! This software is furnished under a license for use only on a
;	0013	! single computer system and may be copied only with the inclusion
;	0014	! of the above copyright notice. This software, or any
;	0015	! other copies thereof, may not be provided or otherwise made
;	0016	! available to any other person except for use on such system
;	0017	! and to one who agrees to these license terms. Title to and
;	0018	! ownership of the software shall at all times remain in DEC.
;	0019	!
;	0020	! The information in this software is subject to change without
;	0021	! notice and should not be construed as a commitment by Digital
;	0022	! Equipment Corporation.
;	0023	!
;	0024	! DEC assumes no responsibility for the use or reliability of
;	0025	! its software on equipment which is not supplied by DEC.
;	0026	!
;	0027	! FACILITY:	PATCH
;	0028	!
;	0029	! FUNCTIONAL DESCRIPTION:
;	0030	!	INITIALIZATION ROUTINES FOR PATCH.
;	0031	!
;	0032	! Version:	X01.17
;	0033	!
;	0034	! History:
;	0035	!	Author:
;	0036	!		Carol Peters, 12 Aug 1976: Version 01
;	0037	!
;	0038	!
;	0039	! MODIFICATIONS:
;	0040	!
;	0041	!  NO	DATE		PROGRAMMER		PURPOSE
;	0042	!  --	----		----------		-------
;	0043	!
;	0044	!  00	17-OCT-77	K.D. MORSE		ADAPT VERSION 54 FOR PATCH.
;	0045	!  01	4-JAN-78	K.D. MORSE		NO CHANGES FOR 55-82.
;	0046	!  02	24-JAN-78	K.D. MORSE		NO CHANGES FOR 83-84.
;	0047	!  03	28-FEB-78	K.D. MORSE		NO CHANGES FOR 85-86.
;	0048	!  04	01-MAR-78	K.D. MORSE		ADD CONTEXT BIT RESET FOR /ALL.
;	0049	!  05	01-MAR-78	K.D. MORSE		NO CHANGES FOR 87.
;	0050	!  06	24-MAR-78	K.D. MORSE		NO CHANGES FOR 88-91.
;	0051	!  07	04-APR-78	K.D. MORSE		NO CHANGES FOR 92-93.
;	0052	!  08	14-APR-78	K.D. MORSE		NO CHANGES FOR 94.
;	0053	!  09	18-APR-78	K.D. MORSE		ADD LITERAL_BIT AND OPN_COM_FILE.
;	0054	!  10	25-APR-78	K.D. MORSE		CONVERT TO NATIVE COMPILER.
;	0055	!  11	18-MAY-78	K.D. MORSE		NO CHANGES FOR VERS 95.

; Bliss-32 7.352	Saturday 22-AUG-1978 02:57:33	DBB3:[PATCH.SRC]PATBAS.B32;18					Page 1-1
; Digital Equipment Corporation
;
;	0056	!  12	18-MAY-78	K.D. MORSE		NO CHANGES FOR VERS 96-97.
;	0057	!  13	06-JUN-78	K.D. MORSE		INITIALIZE LISTHEADS FOR
;	0058	!						OLD AND NEW LABELS, PAT$GL_OLDLABLS
;	0059	!						AND PAT$GL_NEWLABLS.
;	0060	!  14	13-JUN-78	K.D. MORSE		ADD FAO COUNTS TO SIGNALS.
;	0061	!  15	16-JUN-78	K.D. MORSE		INITIALIZE APPENDED COMMAND
;	0062	!						TEXT BUFFERS.
;	0063	!  16	19-JUN-78	K.D. MORSE		NO CHANGES FOR VERS 98-99.
;	0064	!  17	28-JUN-78	K.D. MORSE		NO CHANGES FOR VERS 100-102.
;	0065	!
;	0066	!--

; Bliss-32 7.352	Saturday 22-AUG-1978 02:57:33	DBB3:[PATCH.SRC]PATBAS.B32;18					Page 2
; Digital Equipment Corporation
;
;	0067	FORWARD ROUTINE
;	0068		PAT$SET_CONTEXT: NOVALUE,				! Routine to initialize context bits
;	0069		PAT$INIT: NOVALUE;					! Routine to initialize PATCH
;	0070	
;	0071	LIBRARY 'SYS$LIBRARY:STARLET.L32';
;	0072	REQUIRE 'SRC$:VXSMAC.REQ';
;	0112	REQUIRE 'SRC$:PATPCT.REQ';					! Defines PSECTS
;	0128	REQUIRE 'SRC$:PATGEN.REQ';
;	0307	REQUIRE 'SRC$:BSTRUC.REQ';
;	0358	REQUIRE 'SRC$:DLLNAM.REQ';
;	0391	REQUIRE 'LIB$:PATMSG.REQ';
;	0549	REQUIRE 'SRC$:PREFIX.REQ';
;	0732	REQUIRE 'SRC$:PATPRE.REQ';
;	0872	
;	0873	EXTERNAL ROUTINE
;	0874		PAT$FREEZ,						! Routine to allocate a block of free storage
;	0875		PAT$FREEINIT,						! Routine to initialize free storage
;	0876		PAT$RESET_DEF;						! Sets up default mode settings
;	0877	
;	0878	EXTERNAL
;	0879		PAT$GB_ECOLVL: BYTE,					! ECO level for current patch
;	0880		PAT$GB_ERRNAME,						! Logical error channel name
;	0881		PAT$GB_INPNAME,						! Logical input channel name
;	0882		PAT$GB_OUTNAME,						! Logical output channel name
;	0883		PAT$GL_CONTEXT: BITVECTOR,		 		! PATCH command context bits
;	0884		PAT$GL_INPFAB: BLOCK [, BYTE],				! FAB for command input stream
;	0885		PAT$GL_INPRAB: BLOCK [, BYTE],				! RAB for command input stream
;	0886		PAT$GL_OUTFAB: BLOCK [, BYTE],				! FAB for command output stream
;	0887		PAT$GL_OUTRAB: BLOCK [, BYTE],				! RAB for command output stream
;	0888		PAT$GL_ERRFAB: BLOCK [, BYTE],				! FAB for error messages
;	0889		PAT$GL_ERRRAB: BLOCK [, BYTE],				! RAB for error messages
;	0890		PAT$GL_SYMHEAD,						! Listhead for user-defined symbol table
;	0891		PAT$GL_SYMTBPTR,					! Pointer to default symbol table
;	0892		PAT$GL_OLDLABLS,					! Listhead for old contents instruction labels
;	0893		PAT$GL_NEWLABLS,					! Listhead for new contents un-relocated instruction labels
;	0894		PAT$GL_RLCLABLS,					! Listhead for newcontents relocated instruction labels
;	0895		PAT$GL_ERRCODE,						! Error code
;	0896		PAT$GL_TXTFREE,						! Pointer to next free byte in last text buffer
;	0897		PAT$GL_TXTLHD : REF BLOCK[,BYTE],			! Pointer to first text buffer
;	0898		PAT$GL_TXTTAIL;						! Pointer to last text buffer
;	0899	
;	0900	EXTERNAL LITERAL
;	0901		PAT$K_ERRNAMLNG,					! Length of error channel name
;	0902		PAT$K_OUTNAMLNG,					! Length of output channel name
;	0903		PAT$K_INPNAMLNG;					! Length of input channel name

; Bliss-32 7.352	Saturday 22-AUG-1978 02:57:33	DBB3:[PATCH.SRC]PATBAS.B32;18					Page 3
; Digital Equipment Corporation
;
;	0904	GLOBAL ROUTINE PAT$SET_CONTEXT : NOVALUE =
;	0905	
;	0906	!++
;	0907	! FUNCTIONAL DESCRIPTION:
;	0908	!
;	0909	!	Initializes context bits that are necessary for command
;	0910	!	processing. These bits are valid only during the processing
;	0911	!	of a single command. They are all reset after each command.
;	0912	!
;	0913	! CALLING SEQUENCE:
;	0914	!
;	0915	!	PAT$SET_CONTEXT ()
;	0916	!
;	0917	! INPUTS:
;	0918	!
;	0919	!	none
;	0920	!
;	0921	! IMPLICIT INPUTS:
;	0922	!
;	0923	!	The names of the context bits that are to be turned off.
;	0924	!
;	0925	! OUTPUTS:
;	0926	!
;	0927	!	none
;	0928	!
;	0929	! IMPLICIT OUTPUTS:
;	0930	!
;	0931	!	none
;	0932	!
;	0933	! ROUTINE VALUE:
;	0934	!
;	0935	!	NOVALUE
;	0936	!
;	0937	! SIDE EFFECTS:
;	0938	!
;	0939	!	The context bits are set to FALSE.
;	0940	!--
;	0941	
;	0942	BEGIN
;	0943	
;	0944	PAT$GL_CONTEXT [OVERRIDE] = FALSE;
;	0945	PAT$GL_CONTEXT [MODE_BIT] = FALSE;
;	0946	PAT$GL_CONTEXT [SET_NOT_ECO] = FALSE;
;	0947	PAT$GL_CONTEXT [EXAMINE_BIT] = FALSE;
;	0948	PAT$GL_CONTEXT [VERIFY_BIT] = FALSE;
;	0949	PAT$GL_CONTEXT [INSERT_BIT] = FALSE;
;	0950	PAT$GL_CONTEXT [DELETE_BIT] = FALSE;
;	0951	PAT$GL_CONTEXT [SET_ECO] = FALSE;
;	0952	PAT$GL_CONTEXT [SCOPE_BIT] = FALSE;
;	0953	PAT$GL_CONTEXT [MODULE_BIT] = FALSE;
;	0954	PAT$GL_CONTEXT [ALIGN_LONG] = FALSE;
;	0955	PAT$GL_CONTEXT [ALIGN_WORD] = FALSE;
;	0956	PAT$GL_CONTEXT [ALIGN_QUAD] = FALSE;
;	0957	PAT$GL_CONTEXT [ALIGN_BYTE] = FALSE;
;	0958	PAT$GL_CONTEXT [ALIGN_PAGE] = FALSE;

; Bliss-32 7.352	Saturday 22-AUG-1978 02:57:33	DBB3:[PATCH.SRC]PATBAS.B32;18					Page 3-1
; Digital Equipment Corporation
;
;	0959	PAT$GL_CONTEXT [PAT_AREA_BIT] = FALSE;
;	0960	PAT$GL_CONTEXT [INST_SUBST] = FALSE;
;	0961	PAT$GL_CONTEXT [LITERAL_BIT] = FALSE;
;	0962	PAT$GL_CONTEXT [OPN_COM_FILE] = FALSE;
;	0963	END;


							    .TITLE  PATBAS
							    .IDENT  \X01.17\

						    ISE$C_SIZE==	20
						    TXT$C_SIZE==	4
						    PAL$C_SIZE==	16
						    ASD$C_SIZE==	9
						    FWR$C_SIZE==	24
							    .GLOBL  PAT$FREEZ, PAT$FREEINIT, PAT$RESET_DEF, PAT$GB_ECOLVL
							    .GLOBL  PAT$GB_ERRNAME, PAT$GB_INPNAME, PAT$GB_OUTNAME
							    .GLOBL  PAT$GL_CONTEXT, PAT$GL_INPFAB, PAT$GL_INPRAB, PAT$GL_OUTFAB
							    .GLOBL  PAT$GL_OUTRAB, PAT$GL_ERRFAB, PAT$GL_ERRRAB, PAT$GL_SYMHEAD
							    .GLOBL  PAT$GL_SYMTBPTR, PAT$GL_OLDLABLS, PAT$GL_NEWLABLS
							    .GLOBL  PAT$GL_RLCLABLS, PAT$GL_ERRCODE, PAT$GL_TXTFREE
							    .GLOBL  PAT$GL_TXTLHD, PAT$GL_TXTTAIL, PAT$K_ERRNAMLNG
							    .GLOBL  PAT$K_OUTNAMLNG, PAT$K_INPNAMLNG
							    .WEAK   ACCESS_CHECK

							    .PSECT  _PAT$CODE,NOWRT,2

					 0000 00000 	    .ENTRY  PAT$SET_CONTEXT, Save nothing			      ; 0904
	      00000000G  EF 03FD05FF   8F  CA 00002 	    BICL2   #66913791, PAT$GL_CONTEXT				      ; 0962
					   04 0000D 	    RET     							      ; 0904

; Routine Size:  14 bytes



; Bliss-32 7.352	Saturday 22-AUG-1978 02:57:33	DBB3:[PATCH.SRC]PATBAS.B32;18					Page 4
; Digital Equipment Corporation
;
;	0964	GLOBAL ROUTINE PAT$INIT: NOVALUE =
;	0965	
;	0966	!++
;	0967	! FUNCTIONAL DESCRIPTION:
;	0968	!
;	0969	!	Sets up local context for PATCH.  If the logical devices SYS$INPUT
;	0970	!	and SYS$OUTPUT cannot be set up, the routine SIGNALS an error;
;	0971	!	otherwise it returns.  Initializes symbol tables and PATCH command
;	0972	!	text buffers.
;	0973	!
;	0974	! CALLING SEQUENCE:
;	0975	!
;	0976	!	PAT$INIT()
;	0977	!
;	0978	! INPUTS:
;	0979	!
;	0980	!	none
;	0981	!
;	0982	! IMPLICIT INPUTS:
;	0983	!
;	0984	!	The FABs and RABs for input and output.
;	0985	!	Addresses of context blocks that are to be set by the initialization.
;	0986	!	PAT$GL_TXTFREE - Pointer to first free byte of text buffer in last block
;	0987	!	PAT$GL_TXTLHD  - Pointer to first block of text buffer
;	0988	!	PAT$GL_TXTTAIL - Pointer to last block of text buffer
;	0989	!
;	0990	! OUTPUTS:
;	0991	!
;	0992	!
;	0993	!	none
;	0994	!
;	0995	! IMPLICIT OUTPUTS:
;	0996	!
;	0997	!
;	0998	!	The communication channels are open.
;	0999	!
;	1000	! ROUTINE VALUE:
;	1001	!
;	1002	!	NOVALUE
;	1003	!
;	1004	!
;	1005	! SIDE EFFECTS:
;	1006	!
;	1007	!
;	1008	!	Context, input and output modes, etc. are set up.
;	1009	!	The symbol table listheads are set up and the first block for
;	1010	!	appended patch command text is allocated.
;	1011	!--
;	1012	
;	1013	BEGIN
;	1014	
;	1015	LOCAL
;	1016		STATUS;
;	1017	
;	1018	!++

; Bliss-32 7.352	Saturday 22-AUG-1978 02:57:33	DBB3:[PATCH.SRC]PATBAS.B32;18					Page 4-1
; Digital Equipment Corporation
;
;	1019	! If the OPENs and CONNECTs cannot be done successfully for logical devices
;	1020	! SYS$ERROR, 'SYS$INPUT,' and 'SYS$OUTPUT', then SIGNAL a fatal error.
;	1021	! This causes a return to the command line interpreter.
;	1022	!--
;	1023	PAT$GL_ERRCODE = $OPEN (FAB = PAT$GL_ERRFAB);
;	1024	IF NOT .PAT$GL_ERRCODE 
;	1025	THEN
;	1026		SIGNAL(PAT$_OPNERR,3,.PAT$GL_ERRCODE,PAT$K_ERRNAMLNG,PAT$GB_ERRNAME);
;	1027	
;	1028	PAT$GL_ERRCODE = $CONNECT (RAB = PAT$GL_ERRRAB);
;	1029	IF NOT .PAT$GL_ERRCODE
;	1030	THEN
;	1031		SIGNAL(PAT$_CNTERR,3,.PAT$GL_ERRCODE,PAT$K_ERRNAMLNG,PAT$GB_ERRNAME);
;	1032	
;	1033	PAT$GL_ERRCODE = $OPEN (FAB = PAT$GL_INPFAB);
;	1034	IF NOT .PAT$GL_ERRCODE 
;	1035	THEN
;	1036		SIGNAL(PAT$_OPNERR,3,.PAT$GL_ERRCODE,PAT$K_INPNAMLNG,PAT$GB_INPNAME);
;	1037	
;	1038	PAT$GL_ERRCODE = $CONNECT (RAB = PAT$GL_INPRAB);
;	1039	IF NOT .PAT$GL_ERRCODE
;	1040	THEN
;	1041		SIGNAL(PAT$_CNTERR,3,.PAT$GL_ERRCODE,PAT$K_INPNAMLNG,PAT$GB_INPNAME);
;	1042	
;	1043	PAT$GL_ERRCODE = $OPEN (FAB = PAT$GL_OUTFAB);
;	1044	IF NOT .PAT$GL_ERRCODE
;	1045	THEN
;	1046		SIGNAL(PAT$_OPNERR,3,.PAT$GL_ERRCODE,PAT$K_OUTNAMLNG,PAT$GB_OUTNAME);
;	1047	
;	1048	PAT$GL_ERRCODE = $CONNECT (RAB = PAT$GL_OUTRAB);
;	1049	IF NOT .PAT$GL_ERRCODE
;	1050	THEN
;	1051		SIGNAL(PAT$_CNTERR,3,.PAT$GL_ERRCODE,PAT$K_OUTNAMLNG,PAT$GB_OUTNAME);
;	1052	
;	1053	!++
;	1054	! Initialize an area of free storage, and give the name of the
;	1055	! PATCH error reporting mechanism as the name of the routine that
;	1056	! the free storage package can call to report errors.
;	1057	!--
;	1058	PAT$FREEINIT ();
;	1059	
;	1060	!++
;	1061	! Set the default mode settings.
;	1062	!--
;	1063	PAT$RESET_DEF ();
;	1064	
;	1065	!++
;	1066	! Set all the single command context bits to FALSE.  These bits
;	1067	! refer to context that is valid only during a single command,
;	1068	! not across multiple commands.
;	1069	!--
;	1070	PAT$SET_CONTEXT ();
;	1071	
;	1072	!++
;	1073	! Initialize the symbol chain by allocating storage for the header

; Bliss-32 7.352	Saturday 22-AUG-1978 02:57:33	DBB3:[PATCH.SRC]PATBAS.B32;18					Page 4-2
; Digital Equipment Corporation
;
;	1074	! link and setting the pointers to point to the link.
;	1075	!--
;	1076	PAT$GL_SYMHEAD = PAT$FREEZ (OVERHEAD_SYM);
;	1077	DLL_RLINK (.PAT$GL_SYMHEAD) = .PAT$GL_SYMHEAD;
;	1078	DLL_LLINK (.PAT$GL_SYMHEAD) = .PAT$GL_SYMHEAD;
;	1079	SYM_VALUE (.PAT$GL_SYMHEAD) = 0;
;	1080	SYM_CSTRING (.PAT$GL_SYMHEAD) = 0;
;	1081	PAT$GL_SYMTBPTR = .PAT$GL_SYMHEAD;
;	1082	
;	1083	!++
;	1084	! Initialize the old contents label symbol chain by allocating storage for
;	1085	! the header link and setting the pointers to point to the link.
;	1086	!--
;	1087	PAT$GL_OLDLABLS = PAT$FREEZ (OVERHEAD_SYM);
;	1088	DLL_RLINK (.PAT$GL_OLDLABLS) = .PAT$GL_OLDLABLS;
;	1089	DLL_LLINK (.PAT$GL_OLDLABLS) = .PAT$GL_OLDLABLS;
;	1090	SYM_VALUE (.PAT$GL_OLDLABLS) = 0;
;	1091	SYM_CSTRING (.PAT$GL_OLDLABLS) = 0;
;	1092	
;	1093	!++
;	1094	! Initialize the new contents un-relocated label symbol chain by allocating
;	1095	! storage for the header link and setting the pointers to point to the link.
;	1096	!--
;	1097	PAT$GL_NEWLABLS = PAT$FREEZ (OVERHEAD_SYM);
;	1098	DLL_RLINK (.PAT$GL_NEWLABLS) = .PAT$GL_NEWLABLS;
;	1099	DLL_LLINK (.PAT$GL_NEWLABLS) = .PAT$GL_NEWLABLS;
;	1100	SYM_VALUE (.PAT$GL_NEWLABLS) = 0;
;	1101	SYM_CSTRING (.PAT$GL_NEWLABLS) = 0;
;	1102	
;	1103	!++
;	1104	! Initialize the new contents relocated label symbol chain by allocating
;	1105	! storage for the header link and setting the pointers to point to the link.
;	1106	!--
;	1107	PAT$GL_RLCLABLS = PAT$FREEZ (OVERHEAD_SYM);
;	1108	DLL_RLINK (.PAT$GL_RLCLABLS) = .PAT$GL_RLCLABLS;
;	1109	DLL_LLINK (.PAT$GL_RLCLABLS) = .PAT$GL_RLCLABLS;
;	1110	SYM_VALUE (.PAT$GL_RLCLABLS) = 0;
;	1111	SYM_CSTRING (.PAT$GL_RLCLABLS) = 0;
;	1112	
;	1113	!++
;	1114	! Allocate the first buffer for the appended patch command text and
;	1115	! initialize the pointers.
;	1116	!--
;	1117	PAT$GL_TXTLHD = PAT$FREEZ((A_PAGE + 3)/4);
;	1118	PAT$GL_TXTTAIL = .PAT$GL_TXTLHD;
;	1119	PAT$GL_TXTFREE = .PAT$GL_TXTLHD + TXT$C_SIZE;
;	1120	
;	1121	!++
;	1122	! Initialize the ECO level for this patch.  This ECO level byte is
;	1123	! set to an ECO level by the "SET ECO" command and re-initialized by
;	1124	! the "UPDATE" command.
;	1125	!--
;	1126	PAT$GB_ECOLVL = 0;
;	1127	
;	1128	!++

; Bliss-32 7.352	Saturday 22-AUG-1978 02:57:33	DBB3:[PATCH.SRC]PATBAS.B32;18					Page 4-3
; Digital Equipment Corporation
;
;	1129	! Initialization is complete and successful. Return TRUE.
;	1130	!--
;	1131	RETURN(TRUE);
;	1132	END;



							    .GLOBL  SYS$OPEN, SYS$CONNECT

					 0FFC 0000E 	    .ENTRY  PAT$INIT, Save R2,R3,R4,R5,R6,R7,R8,R9,R10,R11	      ; 0964
		         52 00000000G  8F  D0 00010 	    MOVL    #PAT$K_INPNAMLNG, R2				      ;
		         53 00000000G  EF  9E 00017 	    MOVAB   PAT$GB_INPNAME, R3					      ;
		         54 00000000G  8F  D0 0001E 	    MOVL    #PAT$K_ERRNAMLNG, R4				      ;
		         55 00000000G  EF  9E 00025 	    MOVAB   PAT$GB_ERRNAME, R5					      ;
		         56 00000000G  EF  9E 0002C 	    MOVAB   PAT$GL_TXTLHD, R6					      ;
		         57 00000000G  9F  9E 00033 	    MOVAB   @#SYS$CONNECT, R7					      ;
		         58 00000000G  9F  9E 0003A 	    MOVAB   @#SYS$OPEN, R8					      ;
		         59 00000000G  EF  9E 00041 	    MOVAB   PAT$FREEZ, R9					      ;
		         5A 00000000G  00  9E 00048 	    MOVAB   LIB$SIGNAL, R10					      ;
		         5B 00000000G  EF  9E 0004F 	    MOVAB   PAT$GL_ERRCODE, R11					      ;
			    00000000G  EF  9F 00056 	    PUSHAB  PAT$GL_ERRFAB					      ; 1023
		         68	       01  FB 0005C 	    CALLS   #1, SYS$OPEN					      ;
		         6B	       50  D0 0005F 	    MOVL    R0, PAT$GL_ERRCODE					      ;
		         0F	       6B  E8 00062 	    BLBS    PAT$GL_ERRCODE, 1$					      ; 1024
				       30  BB 00065 	    PUSHR   #^M<R4,R5>						      ; 1026
				       6B  DD 00067 	    PUSHL   PAT$GL_ERRCODE					      ;
				       03  DD 00069 	    PUSHL   #3							      ;
			    006D81CC   8F  DD 0006B 	    PUSHL   #7176652						      ;
		         6A	       05  FB 00071 	    CALLS   #5, LIB$SIGNAL					      ;
			    00000000G  EF  9F 00074 1$:     PUSHAB  PAT$GL_ERRRAB					      ; 1028
		         67	       01  FB 0007A 	    CALLS   #1, SYS$CONNECT					      ;
		         6B	       50  D0 0007D 	    MOVL    R0, PAT$GL_ERRCODE					      ;
		         0F	       6B  E8 00080 	    BLBS    PAT$GL_ERRCODE, 2$					      ; 1029
				       30  BB 00083 	    PUSHR   #^M<R4,R5>						      ; 1031
				       6B  DD 00085 	    PUSHL   PAT$GL_ERRCODE					      ;
				       03  DD 00087 	    PUSHL   #3							      ;
			    006D8164   8F  DD 00089 	    PUSHL   #7176548						      ;
		         6A	       05  FB 0008F 	    CALLS   #5, LIB$SIGNAL					      ;
			    00000000G  EF  9F 00092 2$:     PUSHAB  PAT$GL_INPFAB					      ; 1033
		         68	       01  FB 00098 	    CALLS   #1, SYS$OPEN					      ;
		         6B	       50  D0 0009B 	    MOVL    R0, PAT$GL_ERRCODE					      ;
		         0F	       6B  E8 0009E 	    BLBS    PAT$GL_ERRCODE, 3$					      ; 1034
				       0C  BB 000A1 	    PUSHR   #^M<R2,R3>						      ; 1036
				       6B  DD 000A3 	    PUSHL   PAT$GL_ERRCODE					      ;
				       03  DD 000A5 	    PUSHL   #3							      ;
			    006D81CC   8F  DD 000A7 	    PUSHL   #7176652						      ;
		         6A	       05  FB 000AD 	    CALLS   #5, LIB$SIGNAL					      ;
			    00000000G  EF  9F 000B0 3$:     PUSHAB  PAT$GL_INPRAB					      ; 1038
		         67	       01  FB 000B6 	    CALLS   #1, SYS$CONNECT					      ;
		         6B	       50  D0 000B9 	    MOVL    R0, PAT$GL_ERRCODE					      ;
		         0F	       6B  E8 000BC 	    BLBS    PAT$GL_ERRCODE, 4$					      ; 1039
				       0C  BB 000BF 	    PUSHR   #^M<R2,R3>						      ; 1041
				       6B  DD 000C1 	    PUSHL   PAT$GL_ERRCODE					      ;
				       03  DD 000C3 	    PUSHL   #3							      ;
			    006D8164   8F  DD 000C5 	    PUSHL   #7176548						      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 02:57:33	DBB3:[PATCH.SRC]PATBAS.B32;18					Page 4-4
; Digital Equipment Corporation
;
		         6A	       05  FB 000CB 	    CALLS   #5, LIB$SIGNAL					      ;
			    00000000G  EF  9F 000CE 4$:     PUSHAB  PAT$GL_OUTFAB					      ; 1043
		         68	       01  FB 000D4 	    CALLS   #1, SYS$OPEN					      ;
		         6B	       50  D0 000D7 	    MOVL    R0, PAT$GL_ERRCODE					      ;
		         19	       6B  E8 000DA 	    BLBS    PAT$GL_ERRCODE, 5$					      ; 1044
			    00000000G  EF  9F 000DD 	    PUSHAB  PAT$GB_OUTNAME					      ; 1046
			    00000000G  8F  DD 000E3 	    PUSHL   #PAT$K_OUTNAMLNG					      ;
				       6B  DD 000E9 	    PUSHL   PAT$GL_ERRCODE					      ;
				       03  DD 000EB 	    PUSHL   #3							      ;
			    006D81CC   8F  DD 000ED 	    PUSHL   #7176652						      ;
		         6A	       05  FB 000F3 	    CALLS   #5, LIB$SIGNAL					      ;
			    00000000G  EF  9F 000F6 5$:     PUSHAB  PAT$GL_OUTRAB					      ; 1048
		         67	       01  FB 000FC 	    CALLS   #1, SYS$CONNECT					      ;
		         6B	       50  D0 000FF 	    MOVL    R0, PAT$GL_ERRCODE					      ;
		         19	       6B  E8 00102 	    BLBS    PAT$GL_ERRCODE, 6$					      ; 1049
			    00000000G  EF  9F 00105 	    PUSHAB  PAT$GB_OUTNAME					      ; 1051
			    00000000G  8F  DD 0010B 	    PUSHL   #PAT$K_OUTNAMLNG					      ;
				       6B  DD 00111 	    PUSHL   PAT$GL_ERRCODE					      ;
				       03  DD 00113 	    PUSHL   #3							      ;
			    006D8164   8F  DD 00115 	    PUSHL   #7176548						      ;
		         6A	       05  FB 0011B 	    CALLS   #5, LIB$SIGNAL					      ;
	      00000000G  EF	       00  FB 0011E 6$:     CALLS   #0, PAT$FREEINIT					      ; 1058
	      00000000G  EF	       00  FB 00125 	    CALLS   #0, PAT$RESET_DEF					      ; 1063
		  FECF   CF	       00  FB 0012C 	    CALLS   #0, PAT$SET_CONTEXT					      ; 1070
				       04  DD 00131 	    PUSHL   #4							      ; 1076
		         69	       01  FB 00133 	    CALLS   #1, PAT$FREEZ					      ;
	      00000000G  EF	       50  D0 00136 	    MOVL    R0, PAT$GL_SYMHEAD					      ;
		         50 00000000G  EF  D0 0013D 	    MOVL    PAT$GL_SYMHEAD, R0					      ; 1077
		         60	       50  D0 00144 	    MOVL    R0, (R0)						      ;
		    04   A0	       50  D0 00147 	    MOVL    R0, 4(R0)						      ; 1078
				  08   A0  7C 0014B 	    CLRQ    8(R0)						      ; 1079
	      00000000G  EF	       50  D0 0014E 	    MOVL    R0, PAT$GL_SYMTBPTR					      ; 1081
				       04  DD 00155 	    PUSHL   #4							      ; 1087
		         69	       01  FB 00157 	    CALLS   #1, PAT$FREEZ					      ;
	      00000000G  EF	       50  D0 0015A 	    MOVL    R0, PAT$GL_OLDLABLS					      ;
		         50 00000000G  EF  D0 00161 	    MOVL    PAT$GL_OLDLABLS, R0					      ; 1088
		         60	       50  D0 00168 	    MOVL    R0, (R0)						      ;
		    04   A0	       50  D0 0016B 	    MOVL    R0, 4(R0)						      ; 1089
				  08   A0  7C 0016F 	    CLRQ    8(R0)						      ; 1090
				       04  DD 00172 	    PUSHL   #4							      ; 1097
		         69	       01  FB 00174 	    CALLS   #1, PAT$FREEZ					      ;
	      00000000G  EF	       50  D0 00177 	    MOVL    R0, PAT$GL_NEWLABLS					      ;
		         50 00000000G  EF  D0 0017E 	    MOVL    PAT$GL_NEWLABLS, R0					      ; 1098
		         60	       50  D0 00185 	    MOVL    R0, (R0)						      ;
		    04   A0	       50  D0 00188 	    MOVL    R0, 4(R0)						      ; 1099
				  08   A0  7C 0018C 	    CLRQ    8(R0)						      ; 1100
				       04  DD 0018F 	    PUSHL   #4							      ; 1107
		         69	       01  FB 00191 	    CALLS   #1, PAT$FREEZ					      ;
	      00000000G  EF	       50  D0 00194 	    MOVL    R0, PAT$GL_RLCLABLS					      ;
		         50 00000000G  EF  D0 0019B 	    MOVL    PAT$GL_RLCLABLS, R0					      ; 1108
		         60	       50  D0 001A2 	    MOVL    R0, (R0)						      ;
		    04   A0	       50  D0 001A5 	    MOVL    R0, 4(R0)						      ; 1109
				  08   A0  7C 001A9 	    CLRQ    8(R0)						      ; 1110
		         7E	  80   8F  9A 001AC 	    MOVZBL  #128, -(SP)						      ; 1117
		         69	       01  FB 001B0 	    CALLS   #1, PAT$FREEZ					      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 02:57:33	DBB3:[PATCH.SRC]PATBAS.B32;18					Page 4-5
; Digital Equipment Corporation
;
		         66	       50  D0 001B3 	    MOVL    R0, PAT$GL_TXTLHD					      ;
	      00000000G  EF	       66  D0 001B6 	    MOVL    PAT$GL_TXTLHD, PAT$GL_TXTTAIL			      ; 1118
00000000G  EF	         66	       04  C1 001BD 	    ADDL3   #4, PAT$GL_TXTLHD, PAT$GL_TXTFREE			      ; 1119
			    00000000G  EF  94 001C5 	    CLRB    PAT$GB_ECOLVL					      ; 1126
					   04 001CB 	    RET     							      ; 0964

; Routine Size:  446 bytes



; Bliss-32 7.352	Saturday 22-AUG-1978 02:57:33	DBB3:[PATCH.SRC]PATBAS.B32;18					Page 5
; Digital Equipment Corporation
;
;	1133	END
;	1134	ELUDOM




							    .GLOBL  LIB$SIGNAL

;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  _PAT$CODE      	   460  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $CODE$         	     0  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]STARLET.L32;1		      2688         6         0       111





; Size:		460 code + 0 data bytes
; Run Time:	00:26.3
; Elapsed Time:	00:41.1
; Memory Used:	247 pages
; Compilation Complete
