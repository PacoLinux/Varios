CRFPREFIX                                                        22-AUG-1978 04:40:08   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      41  DECLARATIONS
   (2)     184  DECLARATIONS
   (3)     204  CRF$INSRTREF 
CRFINSREF                                                        22-AUG-1978 04:40:08   VAX-11 MACRO X0.3-11               Page   1
X01.01          DECLARATIONS                                                                                                     (1)

                                     0000     1 	.TITLE	CRFINSREF 
                                     0000     2 	.IDENT	/X01.01/
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977,1978
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 
                                     0000    24 ;++
                                     0000    25 ; FACILITY:  CROSS REFERENCE PROGRAM
                                     0000    26 ;
                                     0000    27 ; ABSTRACT:  THIS ROUTINE INSERTS A REFERENCE TO A KEY INTO THE
                                     0000    28 ;		REFERENCE LIST, BUILDING THE B-TREE ENTRY FOR THE KEY IF
                                     0000    29 ;		NECESSARY.
                                     0000    30 ;
                                     0000    31 ;
                                     0000    32 ; ENVIRONMENT:  IT IS PART OF A LINKABLE IMAGE.
                                     0000    33 ;
                                     0000    34 ; AUTHOR:  K.D. MORSE, CREATION DATE:  6-MAY-77
                                     0000    35 ;
                                     0000    36 ; MODIFIED BY:
                                     0000    37 ;
                                     0000    38 ;	K.D. MORSE, 20-JUN-78, X01.01
                                     0000    39 ;	CRF$INSRTREF IS NOW DECLARED .ENTRY TO MAKE CRF A SHARABLE IMAGE.
                                     0000    40 ;
                                     0000    41 ; 01	- 
                                     0000    42 ;--
CRFINSREF                                                        22-AUG-1978 04:40:08   VAX-11 MACRO X0.3-11               Page   2
X01.01          DECLARATIONS                                                                                                     (2)

                                     0000    44 	.SBTTL	DECLARATIONS
                                     0000    45 ;
                                     0000    46 ; INCLUDE FILES:
                                     0000    47 ;
                                     0000    48 
                                     0000    49 ;
                                     0000    50 ; MACROS:
                                     0000    51 ;
                                     0000    52 
                                     0000    53 	$CRFDEF					; DEFINE ARGUMENT LIST
                                     0000    54 
                                     0000    55 ;
                                     0000    56 ; EQUATED SYMBOLS:
                                     0000    57 ;
                                     0000    58 
                           00000020  0000    59 SPACE = 32.					; ASCII SPACE
                                     0000    60 ;
                                     0000    61 ; OWN STORAGE:
                                     0000    62 ;
CRFINSREF                                                        22-AUG-1978 04:40:08   VAX-11 MACRO X0.3-11               Page   3
X01.01          CRF$INSRTREF                                                                                                     (3)

                                     0000    64 	.SBTTL	CRF$INSRTREF 
                                     0000    65 ;++
                                     0000    66 ; FUNCTIONAL DESCRIPTION:
                                     0000    67 ;
                                     0000    68 ;	THIS ROUTINE ADDS ANOTHER REFERENCE INDICATOR TO THE LIST OF
                                     0000    69 ;	REFERENCE INDICATORS LINKED OFF AN ENTRY IN THE B-TREE.  IF
                                     0000    70 ;	THIS PARTICULAR REFERENCE IS A DEFINITION REFERENCE, THEN THE
                                     0000    71 ;	BECOMES PART OF THE ACTUAL B-TREE ENTRY, NOT A LINK IN THE LIST.
                                     0000    72 ;	IF THE KEY THIS INDICATOR REFERENCES IS NOT IN THE B-TREE, THEN
                                     0000    73 ;	AN ENTRY IS CREATED IN THE B-TREE FOR THE KEY.
                                     0000    74 ;
                                     0000    75 ; CALLING SEQUENCE:
                                     0000    76 ;
                                     0000    77 ;	CALLS	#5,CRF$INSRTREF
                                     0000    78 ;
                                     0000    79 ; INPUT PARAMETERS:
                                     0000    80 ;
                                     0000    81 ;	CRF$L_IR_CTLTBL(AP) - CONTAINS THE ADDRESS OF THE CRF CONTROL TABLE
                                     0000    82 ;	CRF$L_IR_KEYADR(AP) - CONTAINS THE ADDRESS OF THE KEY
                                     0000    83 ;	CRF$L_IR_REFADR(AP) - CONTAINS THE ADDRESS OF THE REFERENCE INDICATOR
                                     0000    84 ;	CRF$W_IR_REFLAG(AP) - CONTAINS THE REFERENCE FLAGS
                                     0000    85 ;	CRF$B_IR_DEFIND(AP) - IS THE DEFINITION/REFERENCE INDICATOR
                                     0000    86 ;			1 INDICATES THIS IS THE DEFINING REFERENCE
                                     0000    87 ;			0 INDICATES THIS IS NOT THE DEFINING REFERENCE
                                     0000    88 ;
                                     0000    89 ; IMPLICIT INPUTS:
                                     0000    90 ;
                                     0000    91 ;	NONE
                                     0000    92 ;
                                     0000    93 ; OUTPUT PARAMETERS:
                                     0000    94 ;
                                     0000    95 ;	NONE
                                     0000    96 ;
                                     0000    97 ; IMPLICIT OUTPUTS:
                                     0000    98 ;
                                     0000    99 ;	SUCCESS:
                                     0000   100 ;		R0 - HAS LOW BIT SET
                                     0000   101 ;	FAILURE:
                                     0000   102 ;		R0 - HAS LOW BIT CLEAR
                                     0000   103 ;
                                     0000   104 ; COMPLETION CODES:
                                     0000   105 ;
                                     0000   106 ;	R0 CONTAINS ONE OF THE FOLLOWING:
                                     0000   107 ;
                                     0000   108 ;	CRF$_KEYPRVENTR - KEY PREVIOUSLY ENTERED IN B-TREE
                                     0000   109 ;	CRF$_HISTOVRFLO - HISTORY LIST OVERFLOWED
                                     0000   110 ;	CRF$_REFLNG - ILLEGAL REFERENCE INDICATOR LENGTH
                                     0000   111 ;	CRF$_BLKWTHINBL - DEALLOCATE BLOCK ERROR
                                     0000   112 ;	CRF$_EXPREGFAIL - EXPAND PROGRAM REGION FAILURE
                                     0000   113 ;	CRF$_FAILINSRT - FAILURE TO INSERT KEY IN B-TREE
                                     0000   114 ;	CRF$_ILLBLKSIZ - ILLEGAL ALLOCATE BLOCK SIZE
                                     0000   115 ;
                                     0000   116 ; SIDE EFFECTS:
                                     0000   117 ;
                                     0000   118 ;	R1 - IS WIPED OUT
                                     0000   119 ;
                                     0000   120 ;--
CRFINSREF                                                        22-AUG-1978 04:40:08   VAX-11 MACRO X0.3-11               Page   4
X01.01          CRF$INSRTREF                                                                                                     (3)

                                     0000   121 
                                     0000   122 
                                     0000   123 
                                     0000   124 	.ENABL	LSB
                                 00000000   125 	.PSECT	CRF$CODE,RD,NOWRT,EXE,SHR,PIC
                               03FC' 0000   126 	.ENTRY	CRF$INSRTREF, ^M<R2,R3,R4,R5,R6,R7,R8,R9>
                                     0002   127 ;
                                     0002   128 ; CHECK LENGTH OF REFERENCE INDICATOR.
                                     0002   129 ;
            56         04 AC     D0  0002   130 	MOVL	CRF$L_IR_CTLTBL(AP),R6		; GET CRF CONTROL TBL
            53         0C BC     9A  0006   131 	MOVZBL	@CRF$L_IR_REFADR(AP),R3		; GET LENGTH OF REF INDICATOR
                          05     15  000A   132 	BLEQ	1$				; BRANCH ON LENGTH <=0
            53            0F     91  000C   133 	CMPB	#REF$K_SIZE-REF$T_REFNAME,R3	; CHECK IF TOO LARGE
                          0A     1E  000F   134 	BGEQU	2$				; BRANCH ON OK
            50   0065805A 8F     D0  0011   135 1$:	MOVL	#CRF$_REFLNG,R0			; SET ERROR CODE
                          00E3   31  0018   136 	BRW	ERROR_EXIT			; RETURN
                                     001B   137 ;
                                     001B   138 ; CREATE A REFERENCE INDICATOR ENTRY IF THIS IS NOT THE DEFINER.
                                     001B   139 ;
                       14 AC     95  001B   140 2$:	TSTB	CRF$B_IR_DEFIND(AP)		; IS THIS DEFINER?
                          24     12  001E   141 	BNEQ	22$				; BRANCH ON YES
            50            16     9A  0020   142 	MOVZBL	#REF$K_SIZE,R0			; GET SIZE OF REF ENTRY
   00000000'EF            00     FB  0023   143 	CALLS	#0,CRF$ALBLK			; ALLOCATE A REF ENTRY
            03            50     E8  002A   144 	BLBS	R0,5$				; BRANCH ON SUCCESS
                          00CE   31  002D   145 	BRW	ERROR_EXIT			; BRANCH ON FAILURE
            59            51     D0  0030   146 5$:	MOVL	R1,R9				; REMEMBER REF ADDR
                          61     D4  0033   147 	CLRL	REF$L_FLINK(R1)			; CLEAR FORWARD LINK
         04 A1         10 AC     B0  0035   148 	MOVW	CRF$W_IR_REFLAG(AP),REF$W_REFFLAG(R1) ; STORE REFERENCE FLAGS
            51            06     C0  003A   149 20$:	ADDL2	#REF$B_REFLNG,R1		; GET ADDR OF KEY
                          53     D6  003D   150 	INCL	R3				; INCLUDE COUNT BYTE
         0C BC            53     28  003F   151 	MOVC3	R3,@CRF$L_IR_REFADR(AP),(R1)	; MOVE IN REF INDICATOR
                          61         0043       
            54       0000'CF     9E  0044   152 22$:	MOVAB	W^CRF_HISTORY,R4		; GET THE HISTORY LIST
            55         08 AC     D0  0049   153 	MOVL	CRF$L_IR_KEYADR(AP),R5		; GET KEY ADDRESS
   00000000'EF            00     FB  004D   154 	CALLS	#0,SRCH_INSRT			; FIND KEY IN B-TREE
            0A            50     E8  0054   155 	BLBS	R0,23$				; BRANCH ON HIST LIST OK
            50   00658062 8F     D0  0057   156 	MOVL	#CRF$_HISTOVRFLO,R0		; SET HISTORY LIST OVERFLOW CODE
                          009D   31  005E   157 	BRW	ERROR_EXIT			; RETURN
            55            51     D0  0061   158 23$:	MOVL	R1,R5				; KEY IN B-TREE?
                          58     13  0064   159 	BEQL	40$				; NO, GO INSERT IT
                       14 AC     95  0066   160 	TSTB	CRF$B_IR_DEFIND(AP)		; IS IT DEFINING REF?
                          05     13  0069   161 	BEQL	24$				; NO, GO SEARCH REF LIST
                          6F     10  006B   162 	BSBB	INS_DEF				; YES, INSERT DEF
                          00A2   31  006D   163 	BRW	INSRT_EXIT			; RETURN
                                     0070   164 ;
                                     0070   165 ; KEY ENTRY WAS IN TABLE.  NOW SEARCH THROUGH REFERENCE LIST.
                                     0070   166 ;
            57         10 A1     9E  0070   167 24$:	MOVAB	KEY$L_REFLIST(R1),R7		; GET REF LISTHEAD
            58         06 A9     9A  0074   168 	MOVZBL	REF$B_REFLNG(R9),R8		; GET LENGTH OF NEW REF
            55         07 A9     9E  0078   169 	MOVAB	REF$T_REFNAME(R9),R5		; GET ADDR OF NEW REF
            54            57     D0  007C   170 25$:	MOVL	R7,R4				; R4 = PREV ENTRY ADDR
            57            64     D0  007F   171 	MOVL	REF$L_FLINK(R4),R7		; R7 = NEXT ENTRY IN LIST
                          15     13  0082   172 	BEQL	28$				; BRANCH ON END OF LIST
            50         06 A7     9A  0084   173 	MOVZBL	REF$B_REFLNG(R7),R0		; GET LENGTH OF REF ENTRY
            51         07 A7     9E  0088   174 	MOVAB	REF$T_REFNAME(R7),R1		; GET ADDR OF REF ENTRY NAME
            65            58     2D  008C   175 	CMPC5	R8,(R5),#SPACE,R0,(R1)		; COMPARE NEW TO OLD
            50            20         008F       
CRFINSREF                                                        22-AUG-1978 04:40:08   VAX-11 MACRO X0.3-11               Page   5
X01.01          CRF$INSRTREF                                                                                                     (3)

                          61         0091       
                          E8     14  0092   176 	BGTR	25$				; KEEP LOOKING
                          0F     13  0094   177 	BEQL	35$				; REF INDICATOR ALREADY THERE
            69            64     D0  0096   178 	MOVL	REF$L_FLINK(R4),REF$L_FLINK(R9)	; PNT NEW TO NEXT
            64            59     D0  0099   179 28$:	MOVL	R9,REF$L_FLINK(R4)		; PNT TO NEW ENTRY
            50   00658001 8F     D0  009C   180 	MOVL	#CRF$_SUCCESS,R0		; SET SUCCESS CODE
                          6D     11  00A3   181 30$:	BRB	INSRT_EXIT			; RETURN
            51            59     D0  00A5   182 35$:	MOVL	R9,R1				; GET REF ENTRY ADDR
            50            16     9A  00A8   183 	MOVZBL	#REF$K_SIZE,R0			; GET SIZE OF ENTRY
   00000000'EF            00     FB  00AB   184 	CALLS	#0,CRF$DEALBLK			; DEALLOCATE ENTRY
            49            50     E9  00B2   185 	BLBC	R0,ERROR_EXIT			; RETURN ON DEALLOCATE ERROR
            50   00658019 8F     D0  00B5   186 	MOVL	#CRF$_REFPRVENTR,R0		; SET CODE REF ALREADY THERE
                          54     11  00BC   187 	BRB	INSRT_EXIT			; RETURN
                                     00BE   188 ;
                                     00BE   189 ; INSERT KEY INTO TREE AS NOT ALREADY THERE.
                                     00BE   190 ;
            50            0A     9A  00BE   191 40$:	MOVZBL	#KEY$K_SIZE/4,R0		; GET SIZE OF KEY ENTRY
            55       0000'CF     9E  00C1   192 	MOVAB	W^CRF$L_TEMPKEY,R5		; GET ADDR TO BUILD TEMP ENTRY
            51            55     D0  00C6   193 	MOVL	R5,R1				; GET ENTRY ADDR FOR INSERT
                          81     7C  00C9   194 41$:	CLRQ	(R1)+				; CLEAR NEW ENTRY
            FB            50     F5  00CB   195 	SOBGTR	R0,41$				; REPEAT FOR ALL OF ENTRY
         08 A5         08 AC     D0  00CE   196 	MOVL	CRF$L_IR_KEYADR(AP),KEY$L_KEYADDR(R5) ; SET KEY ADDR IN ENTRY
                       14 AC     95  00D3   197 	TSTB	CRF$B_IR_DEFIND(AP)		; IS THIS DEFINING REFERENCE?
                          18     13  00D6   198 	BEQL	42$				; BRANCH ON NO
                          02     10  00D8   199 	BSBB	INS_DEF				; INSERT REF INTO KEY ENTRY
                          18     11  00DA   200 	BRB	43$				; GO INSERT KEY IN B-TREE
                                     00DC   201 ;
                                     00DC   202 ; INSERT DEFINING REFERENCE INDICATOR.
                                     00DC   203 ;
                                     00DC   204 INS_DEF:
         16 A5         10 AC     B0  00DC   205 	MOVW	CRF$W_IR_REFLAG(AP),KEY$W_DEFFLAG(R5) ; SET DEF FLAGS
            52         0C AC     D0  00E1   206 	MOVL	CRF$L_IR_REFADR(AP),R2		; OFFSET TO DEF INDIC LNG
            59         18 A5     9E  00E5   207 	MOVAB	KEY$B_DEFLNG(R5),R9		; GET ADDR OF REF INDIC LNG
            89            82     90  00E9   208 50$:	MOVB	(R2)+,(R9)+ 			; MOVE IN DEF INDICATOR
            FA            53     F4  00EC   209 	SOBGEQ	R3,50$				; REPEAT TO MOVE REF INDIC
                                 05  00EF   210 	RSB					; RETURN TO MAIN INSERTION
                                     00F0   211 
         10 A5            59     D0  00F0   212 42$:	MOVL	R9,KEY$L_REFLIST(R5)		; SET REF LISTHEAD
   00000000'EF            00     FB  00F4   213 43$:	CALLS	#0,INSRT_KEY			; INSERT KEY INTO B-TREE
            14            50     E8  00FB   214 	BLBS	R0,INSRT_EXIT			; BRANCH ON SUCCESS
                                     00FE   215 
                                     00FE   216 ERROR_EXIT:
            51         65 8F     9A  00FE   217 	MOVZBL	#CRF$K_FACILCOD,R1		; GET CRF FACILITY CODE
            10            51     F0  0102   218 	INSV	R1,#16,#8,R0			; BUILD ERROR CODE
            50            08         0105       
            51         0C A6     D0  0107   219 	MOVL	CRF$L_ERROR(R6),R1		; GET ERROR ROUTINE ADDR
                          05     13  010B   220 	BEQL	INSRT_EXIT			; RETURN ON NO ROUTINE
                          50     DD  010D   221 	PUSHL	R0				; PUSH ERROR CODE
            61            01     FB  010F   222 	CALLS	#1,(R1)				; CALL ERROR ROUTINE
                                     0112   223 
                                     0112   224 INSRT_EXIT:
                                 04  0112   225 	RET					; RETURN
                                     0113   226 	.END
CRFINSREF                                                        22-AUG-1978 04:40:08   VAX-11 MACRO X0.3-11               Page   6
SYMBOL TABLE                                                                                                                     (3)

BIT...         = 006580AA            DMY$W_LAST     = 00000002            
CRF$ALBLK        ********   X   03   DMY$W_NUMFREE  = 0000000C            
CRF$B_FLAGS      00000009            ERROR_EXIT       000000FE R     03   
CRF$B_IR_DEFIND  00000014            FLD$B_MAXLNG   = 00000003            
CRF$B_KEYTYPE    00000008            FLD$B_SET_CLR  = 00000002            
CRF$B_OU_PAG1    0000000C            FLD$K_LENGTH   = 0000000C            
CRF$B_OU_PRTIND  00000014            FLD$L_FAODSC   = 00000004            
CRF$B_OU_SAVIND  00000018            FLD$W_MASK     = 00000000            
CRF$B_OU_SUCPAG  00000010            GBL...         = 00000000            
CRF$DEALBLK      ********   X   03   HIS$K_ENTRYSIZE= 00000010            
CRF$INSRTREF     00000000 RG    03   HIS$K_LISTSIZE = 00000070            
CRF$K_FACILCOD = 00000065            HIS$L_FATHER   = FFFFFFF0            
CRF$L_ERROR      0000000C            HIS$L_FATHROFF = FFFFFFF4            
CRF$L_IK_CTLTBL  00000004            HIS$L_LEFTBRO  = FFFFFFF8            
CRF$L_IK_KEYADR  00000008            HIS$L_LEFTSON  = 00000008            
CRF$L_IK_VALADR  0000000C            HIS$L_LINKUP   = 00000008            
CRF$L_IR_CTLTBL  00000004            HIS$L_LINKUPOFF= 0000000C            
CRF$L_IR_KEYADR  00000008            HIS$L_NODE     = 00000000            
CRF$L_IR_REFADR  0000000C            HIS$L_NTH      = 0000000C            
CRF$L_K1FMTBL    00000014            HIS$L_OFFSET   = 00000004            
CRF$L_K2FMTBL    00000018            HIS$L_RIGHTBRO = FFFFFFFC            
CRF$L_OUTPUT     00000010            HIS$L_RIGHTSON = 0000000C            
CRF$L_OU_CTLTBL  00000004            HIS$L_TOP      = 00000004            
CRF$L_OU_LINWID  00000008            INSRT_EXIT       00000112 R     03   
CRF$L_R1FMTBL    00000024            INSRT_KEY        ********   X   03   
CRF$L_R2FMTBL    00000028            INS_DEF          000000DC R     03   
CRF$L_ROOT       00000000            KEY$B_DEFLNG   = 00000018            
CRF$L_TEMPKEY    ********   X   03   KEY$K_DATASIZE = 0000001C            
CRF$L_V1FMTBL    0000001C            KEY$K_SIZE     = 00000028            
CRF$L_V2FMTBL    00000020            KEY$L_DATA     = 0000000C            
CRF$W_ENTSIZE    00000004            KEY$L_KEYADDR  = 00000008            
CRF$W_ERRSTS     0000000A            KEY$L_LINKUP   = 00000004            
CRF$W_IK_VALFLG  00000010            KEY$L_REFLIST  = 00000010            
CRF$W_IR_REFLAG  00000010            KEY$L_VALADDR  = 0000000C            
CRF$W_NODSIZE    00000006            KEY$T_DEFNAME  = 00000019            
CRF$_BLDNODFAIL= 00658052            KEY$W_DEFFLAG  = 00000016            
CRF$_BLKWTHINBL= 00658072            KEY$W_NEXT     = 00000000            
CRF$_EXPREGFAIL= 0065806A            KEY$W_PREV     = 00000002            
CRF$_FAILINSRT = 0065807A            KEY$W_VALFLAG  = 00000014            
CRF$_FAOFAIL   = 0065809A            NOD$K_1STFREE  = 00000010            
CRF$_FOUNDKEY  = 00658021            NOD$K_NUMFREE  = 0000000C            
CRF$_HISTOVRFLO= 00658062            NOD$K_SIZE     = 000001F0            
CRF$_ILLBLKSIZE= 00658082            REF$B_REFLNG   = 00000006            
CRF$_KEY1STENTR= 00658011            REF$K_SIZE     = 00000016            
CRF$_KEYPRVENTR= 00658009            REF$L_FLINK    = 00000000            
CRF$_KEYTYPE   = 006580A2            REF$T_REFNAME  = 00000007            
CRF$_LINELNG   = 00658092            REF$W_REFFLAG  = 00000004            
CRF$_NO_OUTRTN = 0065808A            SPACE          = 00000020            
CRF$_REFLNG    = 0065805A            SRCH_INSRT       ********   X   03   
CRF$_REFPRVENTR= 00658019            
CRF$_SUCCESS   = 00658001            
CRF_HISTORY      ********   X   03   
DMY$K_SIZE     = 00000010            
DMY$L_KEYADDR  = 00000008            
DMY$L_LINKUP   = 00000004            
DMY$W_1STFREE  = 0000000E            
DMY$W_FIRST    = 00000000            
CRFINSREF                                                        22-AUG-1978 04:40:08   VAX-11 MACRO X0.3-11               Page   7
PROGRAM SECTION SYNOPSIS                                                                                                         (3)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            0000002C      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
CRF$CODE         00000113      03       PIC   USR   CON   REL   LCL   SHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
23566. BYTES LEFT IN FREE MEMORY POOL.
1194. BYTES OF RECLAIMED MEMORY.
OBJ$:CRFINSREF,LIS$:CRFINSREF/-SP=LIB$:CRF/ML,SRC$:CRFPREFIX,CRFINSREF
16 MLB DIR RDS - 149 GETS TO DEFINE 8 MACROS. 9 INTER. FILE WRITES. 
