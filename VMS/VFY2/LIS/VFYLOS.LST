VFYLOS M0106, VFY - LOST COMMAN	MACRO M1110  22-AUG-78 00:37
TABLE OF CONTENTS

     7-    1	**** VFYLOS VERSION M0106 ****
     8-   37	SCAN FOR LOST FILES COMMAND
     9-  101	SCAN ALL DIRECTORY FILES
    13-  380	FORMAT STRINGS
VFYLOS M0106, VFY - LOST COMMAN	MACRO M1110  22-AUG-78 00:37  PAGE 7


      1						.TITLE	VFYLOS M0106, VFY - LOST COMMAND
						.SBTTL	**** VFYLOS VERSION M0106 ****
						.IDENT	/M0106/
      2					;
      3					; COPYRIGHT (C) 1977
      4					; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
      5					;
      6					; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
      7					; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
      8					; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
      9					; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
     10					; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
     11					; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
     12					; REMAIN IN DEC.
     13					;
     14					; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
     15					; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
     16					; CORPORATION.
     17					;
     18					; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
     19					; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
     20
     21					;
     22					; PETER H. LIPMAN 28-OCT-74
     23					; ANDREW C. GOLDSTEIN  7-AUG-78  10:59
     24					;
     25						.MCALL	CALL,RETURN,FDAT$R,FDRC$R,FDOP$R
     26						.MCALL	GET$,PUT$,OPNS$R,OPNT$D,CLOSE$
     27						.MCALL	FHDL2$,HMBL2$	;FILE HEADER & HOME BLOCK OFFSETS.
     28	000000					FHDL2$	DEF$L		;DEFINE FILE HEADER OFFSETS LOCALLY.
     29	000000					HMBL2$	DEF$L		;DEFINE HOME BLOCK OFFSETS LOCALLY.
     30
     31	000000					IMPURE
     32
     33	000000				DLEVEL:	.BLKW	1		;DIRECTORY LEVEL COUNTER
     34	000002					PURE.I
VFYLOS M0106, VFY - LOST COMMAN	MACRO M1110  22-AUG-78 00:37  PAGE 8
**** VFYLOS VERSION M0106 ****

     36
     37						.SBTTL	SCAN FOR LOST FILES COMMAND
     38	000000				LOST::	FDAT$R	#TBTMAP,#R.FIX,#0,#512.
     39	000024					FDRC$R	R0,#FD.RAN,,#512.
     40	000040					OPNT$D	R0		;CREATE A TEMPORARY FILE
     41	000060	103556 				BCS	80$
     42	000062	016701 	000000G			MOV	IBVBN,R1
     43	000066	066701 	000000G			ADD	SINXBT,R1	;R1 = NO. OF BLOCKS NEEDED
     44	000072	005301 				DEC	R1		; NORMALIZE.
     45	000074	005002 				CLR	R2		;NON CONTIGUOUS ALLOCATION
     46	000076					CALL	.EXTND		;EXTEND THE FILE TO THE DESIRED SIZE
     47	000102	103550 				BCS	85$		;BRANCH IF ERROR
     48					;
     49					; COPY THE INDEX FILE BIT MAP TO THE TEMP FILE
     50	000104	016767 	000000G	000000C		MOV	IBVBN,INDEX+F.RCNM+2
     51	000112	016767 	000000G	000000C		MOV	IBVBN,TBTMAP+F.RCNM+2
     52	000120	016701 	000000G			MOV	SINXBT,R1		;R1 = NO. OF BLOCKS
     53	000124				30$:	GET$	#INDEX,,,RDERR
     54	000142					PUT$	#TBTMAP,INDEX+F.NRBD+2,,WRTERR
     55	000166					SOB	R1,30$
     56	000172	012701 	000002 			MOV	#2,R1
     57	000176	012702 	000000G			MOV	#BITWRD,R2
     58	000202					CALL	SETREC			; SET TEMP FILE TO 1 WORD RECORDS
     59	000206	016767 	000000G	000000G		MOV	IBVBN,MAPOFF		; INDEX BIT MAP VBN TO MAP OFFSET.
     60	000214	005367 	000000G			DEC	MAPOFF			; ADJUST TO # OF PRECEDING BLOCKS.
     61	000220	000367 	000000G			SWAB	MAPOFF			; MULTIPLY IT BY 256. TO GET REC #.
     62	000224	005267 	000000G			INC	MAPOFF			; # OF RECORDS BEFORE FIRST MAP RECORD + 1.
     63					;
     64					; SET UP TO USE THE BITMAP FDB FOR READING THE DIRECTORY FILES
     65					;
     66	000230					FDRC$R	#BITMAP,#FD.PLC
     67	000242	012701 	000000G			MOV	#INDEX,R1
     68	000246	016160 	000000G	000000G		MOV	F.DVNM(R1),F.DVNM(R0) ;USE INDEX FILE DEVICE
     69	000254	016160 	000000G	000000G		MOV	F.UNIT(R1),F.UNIT(R0)
     70	000262	016160 	000000C	000000C		MOV	F.FNB+N.DID(R1),F.FNB+N.FID(R0) ;WANT TO OPEN MFD
     71	000270	016160 	000000C	000000C		MOV	F.FNB+N.DID+2(R1),F.FNB+N.FID+2(R0)
     72	000276	016160 	000000C	000000C		MOV	F.FNB+N.DID+4(R1),F.FNB+N.FID+4(R0)
     73	000304	005067 	000000'			CLR	DLEVEL		;INIT DIRECTORY LEVEL COUNT
     74	000310					CALL	DIRSCN		;SCAN ALL DIRECTORIES
     75					;
     76					; AT THIS POINT, ALL BITS STILL SET IN THE BIT MAP IN THE TEMP FILE
     77					; ARE LOST FILES.
     78					; PREPARE TO USE BITMAP FOR ENTERING FILES IN THE LOST FILE DIRECTORY
     79	000314	016002 	000000G			MOV	F.DSPT(R0),R2
     80	000320	012762 	000005 	000000G		MOV	#LSDRSZ,N.DIRD(R2) ;SET DIRECTORY STRING
     81	000326	012762 	000000'	000002G		MOV	#LSDRMG,N.DIRD+2(R2)
     82	000334	012701 	000000C			MOV	#BITMAP+F.FNB,R1
     83	000340	005003 				CLR	R3
     84	000342					CALL	.PARSE
     85	000346	103002 				BCC	40$		;BRANCH IF DIRECTORY FOUND
     86	000350	005061 	000000G			CLR	N.DID(R1)	;INDICATE DIRECTORY NOT AVAILABLE
     87	000354				40$:	FDOP$R	R0,,#0,R1
     88	000364	012767 	177777 	000000G		MOV	#-1,LOSTCT
     89	000372	012700 	000000G			MOV	#TBTMAP,R0
     90	000376	012701 	001000 			MOV	#512.,R1
     91	000402	012702 	000000G			MOV	#INXBIT,R2
     92	000406					CALL	SETREC		;SET TMP FILE TO 1 BLOCK RECORDS
VFYLOS M0106, VFY - LOST COMMAN	MACRO M1110  22-AUG-78 00:37  PAGE 8-1
SCAN FOR LOST FILES COMMAND

     93	000412	000167 	000000G			JMP	INXSCN
     94					;
     95					; FAILED TO OPEN TEMP FILE
     96	000416				80$:	ERROUX	ER03,0,0
	000416	104427 				TRAP	X
	000420	000000G				.WORD	ER03SZ
	000422	000000G				.WORD	ER03MG
     97					;
     98					; FAILED TO EXTEND TEMP FILE
     99	000424				85$:	ERROUX	ER04,0,0
	000424	104427 				TRAP	X
	000426	000000G				.WORD	ER04SZ
	000430	000000G				.WORD	ER04MG
VFYLOS M0106, VFY - LOST COMMAN	MACRO M1110  22-AUG-78 00:37  PAGE 9
SCAN ALL DIRECTORY FILES

    101						.SBTTL	SCAN ALL DIRECTORY FILES
    102					;+
    103					; OPEN AND SCAN THE DIRECTORY FILE SET UP IN THE BITMAP FDB
    104					; INPUTS:
    105					;	BITMAP FDB SET UP WITH FILE ID, DEVICE AND UNIT.
    106					; OUTPUTS:
    107					;	RESETS THE BIT IN THE INDEX FILE BIT MAP (TEMP FILE)
    108					;	FOR EACH FILE ID ENCOUNTERED
    109					; OPERATION:
    110					;	CALLED RECURSIVELY EACH TIME A FILE IS FOUND WITH THE TYPE
    111					; "DIR".  IF THE BIT FOR THAT FILE WAS ALREADY RESET, THEN THAT
    112					; DIRECTORY HAS ALREADY BEEN SCANNED.  IT IS ASSUMED THAT ALL FILES
    113					; OF TYPE "DIR" WHICH HAVE VARIABLE LENGTH RECORDS ARE DIRECTORIES
    114					;-
    115	000432	012700 	000000G		DIRSCN:	MOV	#BITMAP,R0
    116	000436					CALL	OPDIR			; OPEN THE DIRECTORY FILE
    117	000442	103002 				BCC	5$			; CONTINUE IF OPENED OK.
    118	000444	000167 	000572 			JMP	75$			; TOO FAR FOR A BRANCH.
    119	000450	122760 	000000G	000000G	5$:	CMPB	#R.VAR,F.RTYP(R0)	; VARIABLE LENGTH RECORDS ?
    120	000456	001024 				BNE	7$			; BR IF NOT.
    121					;
    122					; TEST TO SEE THAT THIS FILE REALLY IS A DIRECTORY FILE.
    123					; WE MUST DO A READ ATTRIBUTES QIO IN ORDER TO ACCESS THE
    124					; FILE CHARACTERISTICS BITS.
    125					;
    126	000460	005046 				CLR	-(SP)			; CREATE AN ATTRIBUTE BUFFER.
    127	000462	010604 				MOV	SP,R4			; SAVE ADDR OF ATTRIB BUFF.
    128					;
    129					; CREATE AN ATTRIBUTE LIST ON THE STACK.
    130					;
    131	000464	005046 				CLR	-(SP)			; A ZERO WORD TO END THE LIST.
    132	000466	010446 				MOV	R4,-(SP)		; ADDR OF ATTRIB BUFF TO ATTRIB LIST.
    133	000470	012746 				MOV	(PC)+,-(SP)		; ATTRIBUTE TYPE AND LENGTH TO ATTRIBUTE
    134	000472	   375 	   002 			.BYTE	-3,2			; LIST. 2 BYTES OF CHARACTERISTICS.
    135					;
    136					; CREATE DPB PARAMETER WORDS ONE AND TWO ON THE STACK.
    137					;
    138	000474	010603 				MOV	SP,R3			; INTER MODEL COMPATIBILITY KLUDGE.
    139	000476	010346 				MOV	R3,-(SP)		; ADDR OF ATTRIB LIST TO PARAMETER TWO.
    140	000500	005046 				CLR	-(SP)			; NO FILE ID PTR NEEDED FOR PARAMETER ONE.
    141					;
    142					; SET UP REGISTERS TO INTERFACE TO FCS .XQIO FUNCTION.
    143					;
    144	000502	010603 				MOV	SP,R3			; ADDR OF PARAMETER LIST TO R3.
    145	000504	012702 	000002 			MOV 	#2,R2			; SIZE OF PARAMETER LIST TO R2.
    146	000510	012701 	000000G			MOV	#IO.RAT,R1		; IO FUNCT CODE TO R1 (READ ATTRIBUTES).
    147	000514					CALL	.XQIO			; EXECUTE QIO.
    148					;
    149					; FINALLY WE CAN TEST THE DIRECTORY CHARACTERISTIC BIT.
    150					;
    151	000520	010406 				MOV	R4,SP			; CLEAN STACK, BUT KEEP ATTRIB BUFFER.
    152	000522	032726 	020000 			BIT	#<SC.DIR*256.>,(SP)+	; TEST CHARACTERISTICS AND DISCARD.
    153	000526	001002 				BNE	10$
    154	000530	000167 	000456 		7$:	JMP	60$			; BR IF NOT A DIRECTORY FILE.
VFYLOS M0106, VFY - LOST COMMAN	MACRO M1110  22-AUG-78 00:37  PAGE 10
SCAN ALL DIRECTORY FILES

    156	000534	012700 	000000G		10$:	MOV	#BITMAP,R0
    157	000540				15$:	GET$	R0
    158	000544	103002 				BCC	16$
    159	000546	000167 	000430 			JMP	50$			; BRANCH IF EOF OR ERROR
    160					;
    161					; POSITION R3 AT THE START OF THE VERSION/FILE ID VECTOR.
    162					;
    163	000552	016003 	000002G		16$:	MOV	F.NRBD+2(R0),R3		; ADDR OF RECORD TO R3.
    164	000556	010304 				MOV	R3,R4			; SAVE IT FOR COMPUTING LIMIT ADDR BELOW.
    165	000560	005046 				CLR	-(SP)			; MAKE A TEMP.
    166	000562	062703 	000003 			ADD	#3,R3			; POINT TO NAME BYTE COUNT
    167	000566	152316 				BISB	(R3)+,(SP)		; CONV NAME SIZE TO A WORD VALUE.
    168	000570	005216 				INC	(SP)			; ROUND IT UP IF IT
    169	000572	042716 	000001 			BIC	#1,(SP)			; IS ODD.
    170	000576	012702 	000000G			MOV	#MOPRM,R2		; SET UP ERROR MESSAGE NOW
    171	000602	011622 				MOV	(SP),(R2)+		; NAME LENGTH
    172	000604	010322 				MOV	R3,(R2)+		; NAME ADDRESS
    173	000606	016722 	000000G			MOV	DIRID,(R2)+		; STORE DIRECTORY ID
    174	000612	016722 	000002G			MOV	DIRID+2,(R2)+
    175	000616	060316 				ADD	R3,(SP)			; POINT TO END OF NAME
    176					;
    177					; COMPUTE ADDRESS OF ONE BEYOND END OF RECORD.
    178					;
    179	000620	066004 	000000G			ADD	F.NRBD(R0),R4		; ADD THE RECORD SIZE TO RECORD'S ADDRESS.
    180					;
    181					; SEARCH THE NAME STRING FOR THE DOT. IF NOT FOUND, THIS ENTRY IS NO GOOD.
    182					;
    183	000624	122327 	000056 		17$:	CMPB	(R3)+,#'.		; CHECK IF DOT
    184	000630	001412 				BEQ	18$			; BRANCH IF SO
    185	000632	020316 				CMP	R3,(SP)			; CHECK FOR END OF STRING
    186	000634	103773 				BLO	17$			; AND LOOP
    187
    188	000636	012702 	000000G			MOV	#MOPRM,R2		; POINT TO START OF PARAMETER BLOCK
    189	000642	012701 	000525'			MOV	#LO36MG,R1		; GET MESSAGE TEXT
    190	000646					CALL	OUT1			; PRINT MESSAGE
    191	000652	005726 				TST	(SP)+			; CLEAN THE STACK
    192	000654	000727 				BR	10$			; AND TRY THE NEXT DIRECTORY ENTRY
    193
    194	000656	010367 	000000G		18$:	MOV	R3,TYPADR		; SAVE ADDRESS OF FILE TYPE
    195	000662	012603 				MOV	(SP)+,R3		; POINT TO FIRST VERSION ENTRY
VFYLOS M0106, VFY - LOST COMMAN	MACRO M1110  22-AUG-78 00:37  PAGE 11
SCAN ALL DIRECTORY FILES

    197					;
    198					; PROCESS EACH VERSION/FILE ID ELEMENT IN THE VECTOR.
    199					;
    200	000664	020304 			20$:	CMP	R3,R4			; ANY MORE VERSIONS ?
    201	000666	103042 				BHIS	30$			; BR IF NO MORE.
    202	000670	010346 				MOV	R3,-(SP)		; SAVE POSITION IN RECORD.
    203	000672	016303 	000002 			MOV	2(R3),R3		; GET THE FILE NUMBER.
    204					;
    205					; UPDATE THE TEMPORARY BIT MAP I.E. SHUT OFF THE BIT FOR THIS FILE.
    206					;
    207	000676	005002 				CLR	R2
    208	000700	005303 				DEC	R3			; BECAUSE FILE ID'S BEGIN AT 1
    209	000702					CALL	IBMBIT
    210	000706	012700 	000000G			MOV	#TBTMAP,R0
    211	000712					CALL	BITREC
    212	000716					GET$	R0,,,RDERR
    213	000730	005005 				CLR	R5
    214	000732	030167 	000000G			BIT	R1,BITWRD		; RESET THE BIT UNLESS IT ALREADY IS ZERO
    215	000736	001412 				BEQ	25$			; BR IF PUT$ IS NOT NEEDED.
    216	000740	005205 				INC	R5			; SET FILE PRESENT FLAG
    217	000742					CALL	BITREC
    218	000746	040167 	000000G			BIC	R1,BITWRD
    219	000752					PUT$	R0,,,WRTERR
    220	000764	012603 			25$:	MOV	(SP)+,R3		; RESTORE POSITION IN RECORD.
    221	000766	062703 	000010 			ADD	#8.,R3			; ADVANCE TO NEXT VERSION.
    222	000772	000734 				BR	20$			; GO DO NEXT ONE.
    223					;
    224					; CHECK TO SEE IF THIS DIRECTORY RECORD DESCRIBES A DIRECTORY.
    225					; IF SO, SAVE CONTEXT AND RECALL DIRSCN: RECURSIVELY.
    226					;
    227	000774	005705 			30$:	TST	R5			; IF WE HAVE SEEN THIS FILE ID BEFORE
    228	000776	001656 				BEQ	10$			; DON'T LOOK AT IT AGAIN
    229
    230	001000	012700 	000000G			MOV	#BITMAP,R0
    231	001004	016701 	000000G			MOV	TYPADR,R1		; ADDR OF FILE TYPE TO R1.
    232	001010	122721 	000104 			CMPB	#'D,(R1)+		; IS IT "DIR" ?
    233	001014	001247 				BNE	10$			; BR IF NOT.
    234	001016	122721 	000111 			CMPB	#'I,(R1)+
    235	001022	001244 				BNE	10$
    236	001024	122711 	000122 			CMPB	#'R,(R1)
    237	001030	001241 				BNE	10$
    238	001032	022763 	000001 	177770 		CMP	#1,-8.(R3)		; SEE IF VERSION NUMBER WAS 1
    239	001040	001235 				BNE	10$
    240	001042	010304 				MOV	R3,R4			; SAVE POSITION IN RECORD FOR BELOW.
    241	001044	026727 	000000'	000012 		CMP	DLEVEL,#10.		; LIMIT IS 10 (IS ALL THE STACK WE HAVE)
    242	001052	103063 				BHIS	70$			; BRANCH IF OVER
    243	001054	005267 	000000'			INC	DLEVEL			; COUNT A DIRECTORY LEVEL
    244	001060					CALL	.MARK			; GET FILE CONTEXT IN R1,R2,R3.
    245	001064	010346 				MOV	R3,-(SP)		; SAVE RECORD'S BYTE OFFSET.
    246	001066	010246 				MOV	R2,-(SP)		; SAVE RECORDS LOW VBN.
    247	001070	010146 				MOV	R1,-(SP)		; SAVE RECORDS HIGH VBN.
    248	001072	016046 	000000C			MOV	F.FNB+N.FID(R0),-(SP)
    249	001076	016046 	000000C			MOV	F.FNB+N.FID+2(R0),-(SP)
    250	001102	016046 	000000C			MOV	F.FNB+N.FID+4(R0),-(SP)
    251	001106					CLOSE$	R0
    252	001112	103456 				BCS	78$
    253	001114	014460 	000000C			MOV	-(R4),F.FNB+N.FID+4(R0)
VFYLOS M0106, VFY - LOST COMMAN	MACRO M1110  22-AUG-78 00:37  PAGE 11-1
SCAN ALL DIRECTORY FILES

    254	001120	014460 	000000C			MOV	-(R4),F.FNB+N.FID+2(R0)
    255	001124	014460 	000000C			MOV	-(R4),F.FNB+N.FID(R0)
    256	001130					CALL	DIRSCN
    257					;
    258					; SET UP TO RESTORE CONTEXT AND REOPEN PREVIOUS FILE
    259	001134	012660 	000000C			MOV	(SP)+,F.FNB+N.FID+4(R0)
    260	001140	012660 	000000C			MOV	(SP)+,F.FNB+N.FID+2(R0)
    261	001144	012660 	000000C			MOV	(SP)+,F.FNB+N.FID(R0)
    262	001150	012601 				MOV	(SP)+,R1		; RECORD'S HIGH VBN TO R1.
    263	001152	012602 				MOV	(SP)+,R2		; RECORDS LOW VBN TO R2.
    264	001154	012603 				MOV	(SP)+,R3		; RECORD'S BYTE OFFSET TO R3.
    265	001156	005367 	000000'			DEC	DLEVEL
    266	001162					CALL	OPDIR			; OPEN THE DIRECTORY FILE
    267	001166	103425 				BCS	75$
    268	001170					CALL	.POINT			; REPOSITION FILE TO NEXT DIRECTORY RECORD.
    269	001174	103402 				BCS	50$
    270	001176	000167 	177336 			JMP	15$			;CONTINUE SCANNING THIS FILE
    271					;
    272					; ERROR READING DIRECTORY FILE - PROBABLY EOF
    273					;
    274	001202	122760 	000000G	000000G	50$:	CMPB	#IE.EOF,F.ERR(R0)
    275	001210	001026 				BNE	85$		;BRANCH IF REAL ERROR
    276	001212				60$:	CLOSE$	R0
    277	001216	103420 				BCS	80$
    278	001220					RETURN
    279					;
    280					; DIRECTORY LEVEL LIMIT EXCEEDED
    281					;
    282	001222	012701 	000603'		70$:	MOV	#LO37MG,R1
    283	001226	012702 	000000G			MOV	#MOPRM,R2
    284	001232					CALL	OUT1
    285	001236	000167 	177272 			JMP	10$
    286					;
    287					; FAILED TO OPEN DIRECTORY FILE
    288	001242	012701 	000063'		75$:	MOV	#LO24MG,R1
    289	001246	000411 				BR	90$
    290					;
    291					; FAILED TO CLOSE DIRECTORY FILE
    292	001250	005367 	000000'		78$:	DEC	DLEVEL
    293	001254	062706 	000010 			ADD	#8.,SP
    294	001260	012701 	000121'		80$:	MOV	#LO25MG,R1
    295	001264	000402 				BR	90$
    296					;
    297					; I/O ERROR READING DIRECTORY FILE
    298	001266	012701 	000160'		85$:	MOV	#LO26MG,R1
    299	001272	010046 			90$:	MOV	R0,-(SP)
    300	001274	005002 				CLR	R2
    301	001276					CALL	OUT1
    302	001302	011600 				MOV	(SP),R0
    303	001304	012701 	000465'			MOV	#LO35MG,R1
    304	001310	012702 	000000G			MOV	#MOPRM,R2
    305	001314	116003 	000000G			MOVB	F.ERR(R0),R3
    306	001320	010312 				MOV	R3,(R2)
    307	001322	016762 	000000G	000002 		MOV	DIRID,2(R2)
    308	001330	016762 	000002G	000004 		MOV	DIRID+2,4(R2)
    309	001336					CALL	OUT1
    310	001342	012600 				MOV	(SP)+,R0
VFYLOS M0106, VFY - LOST COMMAN	MACRO M1110  22-AUG-78 00:37  PAGE 11-2
SCAN ALL DIRECTORY FILES

    311	001344					CLOSE$	R0
    312	001350					RETURN
    313					;
    314					; OPEN THE DIRECTORY FILE, SAVING IT'S FILE ID FOR ERROR PRINTOUT
    315					;
    316	001352	016067 	000000C	000000G	OPDIR:	MOV	F.FNB+N.FID(R0),DIRID
    317	001360	016067 	000000C	000002G		MOV	F.FNB+N.FID+2(R0),DIRID+2
    318	001366					OPNS$R	R0
    319	001400					RETURN
VFYLOS M0106, VFY - LOST COMMAN	MACRO M1110  22-AUG-78 00:37  PAGE 12
SCAN ALL DIRECTORY FILES

    321					;
    322					; INDICATE THAT THIS FILE WAS LOST, AND PUT IT IN LOST FILE DIRECTORY
    323	001402				ENTERL::
    324	001402	016704 	000000C			MOV	INDEX+F.NRBD+2,R4 ; R4 = ADDRESS OF HEADER BLOCK
    325	001406	105764 	000004 			TSTB	H.FSEG(R4)	; CHECK EXTENSION SEQMENT NUMBER
    326	001412	001401 				BEQ	10$
    327	001414					RETURN			; RETURN IF NON-ZERO, SINCE
    328									; EXTENSION HEADERS DO NOT
    329									; CONSTITUTE LOST FILES
    330	001416	005267 	000000G		10$:	INC	LOSTCT
    331	001422	001025 				BNE	30$
    332					; FIRST LOST FILE, PUT OUT HEADER MESSAGE
    333	001424	012701 	000005'			MOV	#LO23MG,R1
    334	001430	005002 				CLR	R2
    335	001432					CALL	OUT1
    336	001436	012702 	000000G			MOV	#MOPRM,R2
    337	001442	012712 	000005 			MOV	#LSDRSZ,@R2
    338	001446	012762 	000000'	000002 		MOV	#LSDRMG,2(R2)
    339	001454	012701 	000221'			MOV	#LO27MG,R1
    340	001460	005767 	000000C			TST	BITMAP+F.FNB+N.DID ;DIRECTORY AVAILABLE?
    341	001464	001002 				BNE	20$		;BRANCH IF YES
    342	001466	012701 	000272'			MOV	#LO28MG,R1	;SAY DIRECTORY NOT AVAILABLE
    343	001472				20$:	CALL	OUT1
    344	001476				30$:	CALL	HDROUT
    345	001502	005767 	000000C			TST	BITMAP+F.FNB+N.DID ;IF NO DIRECTORY ID
    346	001506	001451 				BEQ	80$		;DON'T TRY TO ENTER THESE FILES
    347	001510	012700 	000000C			MOV	#BITMAP+F.FNB,R0
    348					; SET UP FILE ID, NAME, TYPE, AND VERSION FROM FILE HEADER
    349	001514	016704 	000000C			MOV	INDEX+F.NRBD+2,R4
    350	001520	016420 	000010 			MOV	H.FNUM(R4),(R0)+ ;SET FILE ID
    351	001524	016420 	000012 			MOV	H.FSEQ(R4),(R0)+
    352	001530	005020 				CLR	(R0)+
    353	001532					CALL	MVFNAM		;SET UP FILE NAME
    354	001536	012700 	000000G			MOV	#BITMAP,R0
    355	001542	012701 	000000C			MOV	#BITMAP+F.FNB,R1
    356	001546				35$:	CALL	.ENTER
    357	001552	103021 				BCC	50$		;BRANCH IF ENTER WORKED OK
    358					;
    359					; FAILED TO ENTER  - IF DUPLICATE, ZERO THE VERSION AND TRY AGAIN
    360	001554	122760 	000000G	000000G		CMPB	#IE.DUP,F.ERR(R0)
    361	001562	001003 				BNE	40$
    362	001564	005061 	000000G			CLR	N.FVER(R1)
    363	001570	000766 				BR	35$
    364					;
    365					; ERROR ON ENTER
    366	001572	116003 	000000G		40$:	MOVB	F.ERR(R0),R3
    367	001576	012702 	000000G			MOV	#MOPRM,R2
    368	001602	010312 				MOV	R3,@R2
    369	001604	012701 	000355'			MOV	#LO29MG,R1
    370	001610					CALL	OUTC
    371	001614	000406 				BR	80$
    372					;
    373					; SUCCESSFULLY ENTERED
    374	001616	012701 	000424'		50$:	MOV	#LO30MG,R1
    375	001622	012702 	000000C			MOV	#BITMAP+F.FNAM,R2
    376	001626					CALL	OUTC		;TELL ENTERED NAME OF FILE
    377	001632				80$:	CALL	TRMOUT
VFYLOS M0106, VFY - LOST COMMAN	MACRO M1110  22-AUG-78 00:37  PAGE 12-1
SCAN ALL DIRECTORY FILES

    378	001636					RETURN
VFYLOS M0106, VFY - LOST COMMAN	MACRO M1110  22-AUG-78 00:37  PAGE 13
FORMAT STRINGS

    380						.SBTTL	FORMAT STRINGS
    381
    382	000000					.PSECT
    383	000000					MSG	LSDR,<[1,3]>	;LOST FILE DIRECTORY
    384	000000					MSGZ	LO23,<THE FOLLOWING FILES WERE NOT IN ANY DIRECTORY>
    385	000000					MSGZ	LO24,<FAILED TO OPEN DIRECTORY FILE>
    386	000000					MSGZ	LO25,<FAILED TO CLOSE DIRECTORY FILE>
    387	000000					MSGZ	LO26,<I/O ERROR READING DIRECTORY FILE>
    388	000000					MSGZ	LO27,<	THEY HAVE BEEN ENTERED IN DIRECTORY %VA>
    389	000000					MSG	LO28,<	THEY ARE STILL LOST, COULD NOT FIND DIRECTORY>
    390	000000					MSGZ	,< %VA>
    391	000000					MSGZ	LO29,<	FAILED TO ENTER FILE - ERROR CODE %D.>
    392	000000					MSGZ	LO30,<	FILE SUCCESSFULLY ENTERED AS %X>
    393	000000					MSGZ	LO35,<	ERROR CODE %D. - FILE ID %P,%P>
    394	000000					MSGZ	LO36,<INVALID DIRECTORY ENTRY "%VA" - FILE ID %P,%P>
    395	000000					MSGZ	LO37,<TOO MANY DIRECTORY LEVELS AT "%VA" - FILE ID %P,%P>
    396						.EVEN
    397					;
    398					;
    399		000001 				.END
VFYLOS M0106, VFY - LOST COMMAN	MACRO M1110  22-AUG-78 00:37  PAGE 13-1
SYMBOL TABLE

BITMAP= ****** GX	H.AHLB= 000004   	H.RPRO= 000102   	LO23SZ= 000056   	R$$DPB= 000001
BITREC= ****** GX	H.AHVB= 000022   	H.RSOF= 000003   	LO24MG= 000063R     004	R$$DYM= 000001
BITWRD= ****** GX	H.CHK1= 000072   	H.RSVF= 000042   	LO24SZ= 000036   	R$$EIS= 000000
DIRID = ****** GX	H.CHK2= 000776   	H.RVN = 000046   	LO25MG= 000121R     004	R$$MSG= 000000
DIRSCN  000432R     003	H.CKSM= 000776   	H.SBCL= 000016   	LO25SZ= 000037   	R$$11M= 000001
DLEVEL  000000R     002	H.DFPR= 000066   	H.SCHA= 000065   	LO26MG= 000160R     004	R.FIX = ****** GX
ENTERL  001402RG    003	H.DRPR= 000070   	H.SEMK= 000104   	LO26SZ= 000041   	R.VAR = ****** GX
ER03MG= ****** GX	H.DVTY= 000044   	H.SMMX= 000110   	LO27MG= 000221R     004	SC.BAD= 000100
ER03SZ= ****** GX	H.EFNU= 000016   	H.SNAM= 000714   	LO27SZ= 000051   	SC.DIR= 000040
ER04MG= ****** GX	H.EFSQ= 000020   	H.UCHA= 000064   	LO28MG= 000272R     004	SC.MDL= 000200
ER04SZ= ****** GX	H.ERVN= 000022   	H.UFAT= 000024   	LO28SZ= 000056   	SETREC= ****** GX
FA.SHR= ****** GX	H.FCHA= 000064   	H.USE = 000072   	LO29MG= 000355R     004	SINXBT= ****** GX
FA.TMP= ****** GX	H.FIEX= 000106   	H.VCHA= 000052   	LO29SZ= 000047   	SZ    = 000005
FD.PLC= ****** GX	H.FLEV= 000006   	H.VDAT= 000074   	LO30MG= 000424R     004	S.HDHD= 000114
FD.RAN= ****** GX	H.FMAX= 000034   	H.VLEV= 000014   	LO30SZ= 000041   	S.IDHD= 000202
FO.RD = ****** GX	H.FNUM= 000010   	H.VOWN= 000054   	LO35MG= 000465R     004	S.MPHD= 000000
FO.WRT= ****** GX	H.FOWN= 000074   	H.VPRO= 000064   	LO35SZ= 000040   	TBTMAP= ****** GX
FP.DEL= 000010   	H.FPRO= 000100   	H.VSMX= 000060   	LO36MG= 000525R     004	TRMOUT= ****** GX
FP.EXE= 000004   	H.FRVN= 000014   	H.WISZ= 000104   	LO36SZ= 000056   	TYPADR= ****** GX
FP.RDV= 000001   	H.FSEG= 000004   	IBMBIT= ****** GX	LO37MG= 000603R     004	UC.CON= 000200
FP.WRV= 000002   	H.FSEQ= 000012   	IBVBN = ****** GX	LO37SZ= 000063   	UC.DLK= 000100
F.DFNB= ****** GX	H.HBLB= 000000   	IE.DUP= ****** GX	LSDRMG= 000000R     004	WRTERR= ****** GX
F.DSPT= ****** GX	H.HBVB= 000020   	IE.EOF= ****** GX	LSDRSZ= 000005   	X     = 000027
F.DVNM= ****** GX	H.IBLB= 000030   	INDEX = ****** GX	MAPOFF= ****** GX	$$$T1 = 000067
F.ERR = ****** GX	H.IBSZ= 000040   	INXBIT= ****** GX	MG    = 000350R     004	.CLOSE= ****** G
F.FACC= ****** GX	H.IBVB= 000026   	INXSCN= ****** GX	MOPRM = ****** GX	.ENTER= ****** GX
F.FNAM= ****** GX	H.IDOF= 000000   	IO.RAT= ****** GX	MVFNAM= ****** GX	.EXTND= ****** GX
F.FNB = ****** GX	H.IHLB= 000010   	I.BKDT= 000052   	NB.NXD= 020000   	.GET  = ****** G
F.NRBD= ****** GX	H.IHVB= 000024   	I.CRDT= 000022   	N.DID = ****** GX	.MARK = ****** GX
F.RACC= ****** GX	H.INDF= 000760   	I.EXDT= 000042   	N.DIRD= ****** GX	.MRKDL= ****** GX
F.RATT= ****** GX	H.INDN= 000730   	I.FNAM= 000000   	N.FID = ****** GX	.OPEN = ****** G
F.RCNM= ****** GX	H.INDO= 000744   	I.RVDT= 000032   	N.FVER= ****** GX	.PARSE= ****** GX
F.RSIZ= ****** GX	H.LRUC= 000105   	I.RVNO= 000020   	OPDIR   001352R     003	.POINT= ****** GX
F.RTYP= ****** GX	H.MPOF= 000001   	I.ULAB= 000062   	OUTC  = ****** GX	.PUT  = ****** G
F.UNIT= ****** GX	H.NVOL= 000050   	LOST    000000RG    003	OUT1  = ****** GX	.XQIO = ****** GX
F.URBD= ****** GX	H.PRIV= 000073   	LOSTCT= ****** GX	PAR$$$= 000000   	...GBL= 000000
HDROUT= ****** GX	H.PROG= 000074   	LO23MG= 000005R     004	RDERR = ****** GX	...TPC= 001000
H.ACOF= 000002   	H.PROJ= 000076

. ABS.	000000	   000
      	000000	   001
IMPURE	000002	   002
PURE$I	001640	   003
MSGSTR	000666	   004
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  6038 WORDS  ( 24 PAGES)
DYNAMIC MEMORY:  6996 WORDS  ( 26 PAGES)
ELAPSED TIME:  00:00:38
EXE$:VFYLOS,LIS$:VFYLOS/-SP=SRC$:PIPMAC,VFYLOS
