VFYRCK M0107, VFY - READ CHECK 	MACRO M1110  22-AUG-78 00:39
TABLE OF CONTENTS

     7-    1	**** VFYRCK VERSION M0107 ****
     7-   34	RDFIL - READ THE DATA BLOCKS OF THE FILE - READ CHECK
     8-  124	RDBLK - READ VIRTUAL BLOCK(S) OF FILE
     9-  181	RDCKER - REPORT READ CHECK ERROR
    10-  259	READ CHECK HEADER OUTPUT MESSAGE
    10-  312	FORMAT STRINGS
VFYRCK M0107, VFY - READ CHECK 	MACRO M1110  22-AUG-78 00:39  PAGE 7


      1						.TITLE	VFYRCK M0107, VFY - READ CHECK LOGIC
						.SBTTL	**** VFYRCK VERSION M0107 ****
						.IDENT	/M0107/
      2					; ALTERED:
      3					; ANDREW C. GOLDSTEIN  8-AUG-78  22:29
      4					;
      5					; COPYRIGHT (C) 1977
      6					; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
      7					;
      8					; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
      9					; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
     10					; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
     11					; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
     12					; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
     13					; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
     14					; REMAIN IN DEC.
     15					;
     16					; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
     17					; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
     18					; CORPORATION.
     19					;
     20					; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
     21					; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
     22
     23					;
     24					; PETER H. LIPMAN 28-OCT-74
     25					; ALTERED FRIDAY 10-JAN-75 14:50
     26					;
     27						.MCALL	CALL,CALLR,RETURN,OPNS$R,CLOSE$,WSIG$S
     28						.MCALL	FHDL2$,HMBL2$	;FILE HEADER & HOME BLOCK OFFSETS.
     29	000000					FHDL2$	DEF$L		;DEFINE FILE HEADER OFFSETS LOCALLY.
     30	000000					HMBL2$	DEF$L		;DEFINE HOME BLOCK OFFSETS LOCALLY.
     31
     32	000000					PURE.I
     33
     34						.SBTTL	RDFIL - READ THE DATA BLOCKS OF THE FILE - READ CHECK
     35					;+
     36					;
     37					; ** RDFIL - READ ALL THE BLOCK OF THE FILE SPECIFIED BY THE HEADER
     38					;		IN THE INDEX FILE FDB RECORD POINTER
     39					;
     40					; INPUTS:
     41					;
     42					;	INDEX+F.NRBD+2 CONTAINS THE ADDRESS OF THE FILE HEADER (FID)
     43					;	INDEX+F.DVNM, F.UNIT CONTAIN THE DEVICE AND UNIT
     44					;
     45					; OUTPUTS:
     46					;
     47					;	ALL REGISTERS PRESERVED
     48					;
     49					;	THE ROUTINE OPENS THE SPECIFIED FILE AND READS ALL THE
     50					; DATA BLOCKS, REPORTING ANY ERRORS AS IT GOES.
     51					;
     52					;-
     53	000000				RDFIL::	CALL	$SAVAL
     54	000004	012700 	000000G			MOV	#RDCHK,R0	;R0=READ CHECK FDB
     55	000010	012701 	000000C			MOV	#RDCHK+F.FNB,R1	;R1=FNB PORTION OF THE FDB
VFYRCK M0107, VFY - READ CHECK 	MACRO M1110  22-AUG-78 00:39  PAGE 7-1
RDFIL - READ THE DATA BLOCKS OF THE FILE - READ CHECK

     56	000014	016702 	000000C			MOV	INDEX+F.NRBD+2,R2 ;R2=ADDRESS OF HEADE
     57	000020	016261 	000010 	000000G		MOV	H.FNUM(R2),N.FID(R1) ;SET UP TO OPEN BY FILE ID
     58	000026	016261 	000012 	000002G		MOV	H.FSEQ(R2),N.FID+2(R1) ;STORING FILE NUMBER AND FILE SEQUENCE
     59	000034	016761 	000000C	000000G		MOV	INDEX+F.FNB+N.DVNM,N.DVNM(R1) ;STORE DEVICE NAME
     60	000042	016761 	000000C	000000G		MOV	INDEX+F.FNB+N.UNIT,N.UNIT(R1) ;STORE UNIT
     61	000050	012703 	000000G			MOV	#STBLK,R3	;R3=ADDRESS OF STATISTICS BLOCK
     62	000054	010360 	000000G			MOV	R3,F.STBK(R0)	;READ STATISTICS BLOCK ON OPEN
     63	000060					OPNS$R	R0,,,#FD.RWM	;OPEN THE FILE IN READ/WRITE MODE
     64	000100	103503 				BCS	100$		;BRANCH IF FAILED
     65	000102					CALL	FIXEOF
     66	000106	022323 				CMP	(R3)+,(R3)+	;POINT TO 3RD WORD OF STATISTICS BLOCK
     67	000110	012360 	000000G			MOV	(R3)+,F.HIBK(R0) ;USE REAL SIZE OF FILE
     68	000114	012360 	000002G			MOV	(R3)+,F.HIBK+2(R0)
     69					;
     70					; MOVE THE ATTRIBUTES TO THE HEADER SO THAT RCHDOU CAN PRINT THEM
     71					; IF AN ERROR OCCURS.
     72					;
     73	000120	010001 				MOV	R0,R1		;R1=ADDRESS OF RECORD ATTRIBUTES TO MOVE
     74	000122	062702 	000024 			ADD	#H.UFAT,R2	;R2=ADDRESS OF RECORD ATTRIBUTES IN HEADER
     75	000126	012705 	000000C			MOV	#S.FATT/2,R5	;R5=NO. OF WORDS TO MOVE
     76	000132	012122 			5$:	MOV	(R1)+,(R2)+	;MOVE THE ATTRIBUTES
     77	000134					SOB	R5,5$
     78					;
     79					; NOW USE THE STATISTICS BLOCK AS A 5 WORD PARAMETER BLOCK FOR
     80					; THE QIO READ VIRTUAL BLOCK.  INITIALIZE IT NOW
     81					;
     82	000140	012713 	000001 			MOV	#1,(R3)		;SET VBN 1
     83	000144	005043 				CLR	-(R3)
     84	000146	005043 				CLR	-(R3)		;NO CARRIAGE CONTROL
     85	000150	005043 				CLR	-(R3)		;COUNT FIELD
     86	000152	016743 	000000G			MOV	.DYBUF,-(R3)	;BUFFER ADDRESS
     87					;
     88					; R3 NOW POINTS TO THE FRONT OF THE PARAMETER BLOCK FOR THE QI/O READ
     89					;
     90	000156	016705 	000000G		10$:	MOV	.RCBLK,R5	;R5=NO. OF BLOCKS TO BE READ IN EACH QI/O
     91	000162	005760 	000000G		20$:	TST	F.HIBK(R0)	;IF HIGH ORDER COUNT NON ZERO, XFER MAX
     92	000166	001006 				BNE	40$
     93	000170	020560 	000002G			CMP	R5,F.HIBK+2(R0) ;IF FEWER BLOCKS LEFT THAN MAX
     94	000174	101403 				BLOS	40$
     95	000176	016005 	000002G			MOV	F.HIBK+2(R0),R5	;USE WHAT'S LEFT
     96	000202	001446 				BEQ	110$		;BRANCH IF NONE LEFT, ALL DONE
     97	000204				40$:	CALL	RDBLK		;READ THE VIRTUAL BLOCK(S)
     98	000210	103034 				BCC	70$		;DO THE NEXT CHUNK IF SUCCESSFUL
     99	000212	012701 	000065'			MOV	#LO49MG,R1	;FORMAT STRING FOR ERROR MESSAGE
    100	000216	022705 	000001 			CMP	#1,R5		;IF BLOCKING FACTOR IS 1
    101	000222	001002 				BNE	45$
    102	000224	012701 	000157'			MOV	#LO51MG+1,R1	;USE THE OTHER MESSAGE MINUS THE 1ST TAB
    103	000230				45$:	CALL	RDCKER		;OUTPUT THE ERROR MESSAGE
    104	000234	022705 	000001 			CMP	#1,R5		;BLOCKING FACTOR OF 1?
    105	000240	001420 				BEQ	70$		;BRANCH IF YES, SKIP THE SINGLE READS
    106	000242	010546 				MOV	R5,-(SP)	;SAVE THE NO. OF BLOCKS TOREAD 1 AT A TIME
    107	000244	012705 	000001 			MOV	#1,R5		;USE BLOCKING FACTOR OF 1
    108	000250				50$:	CALL	RDBLK		;READ THE NEXT BLOCK
    109	000254	103004 				BCC	60$		;BRANCH IF THIS ONE'S OK
    110	000256	012701 	000156'			MOV	#LO51MG,R1	;FORMAT STRING FOR ERROR MESSAGE
    111	000262					CALL	RDCKER		;OUTPUT THE ERROR MESSAGE
    112	000266				60$:	CALL	RCNXT		;SET UP FOR NEXT BLOCKS TO BE READ
VFYRCK M0107, VFY - READ CHECK 	MACRO M1110  22-AUG-78 00:39  PAGE 7-2
RDFIL - READ THE DATA BLOCKS OF THE FILE - READ CHECK

    113	000272	005316 				DEC	(SP)		;ANY MORE BLOCKS TO XFER?
    114	000274	003365 				BGT	50$		;BRANCH IF YES, GO XFER ANOTHER
    115	000276	005726 				TST	(SP)+		;POP THE EXHAUSTED COUNT
    116	000300	000726 				BR	10$		;AND GO GET THE NEXT CHUNK OF VBN'S
    117	000302				70$:	CALL	RCNXT		;SET UP FOR NEXT BLOCKS TO BE READ
    118	000306	000725 				BR	20$		;AND GO READ THEM
    119	000310	012701 	000000'		100$:	MOV	#LO48MG,R1	;FAILED TO OPEN THE FILE
    120	000314					CALL	HDRERR
    121	000320				110$:	CLOSE$	#RDCHK
    122	000330					CALLR	TRMOUT
VFYRCK M0107, VFY - READ CHECK 	MACRO M1110  22-AUG-78 00:39  PAGE 8
RDBLK - READ VIRTUAL BLOCK(S) OF FILE

    124						.SBTTL	RDBLK - READ VIRTUAL BLOCK(S) OF FILE
    125					;+
    126					;
    127					; ** RDBLK - READ THE SPECIFIED NO. OF BLOCKS OF THE FILE
    128					;
    129					; INPUTS:
    130					;
    131					;	R0=FDB FOR OPEN FILE
    132					;	R3=PARAMETER BLOCK FOR QI/O READ VIRTUAL BLOCK
    133					;		EVERYTHING IS FILLED IN BUT BYTE COUNT TO READ
    134					;	R5= NUMBER OF BLOCKS TO READ
    135					;
    136					; OUTPUTS:
    137					;
    138					;	C=0 IF SUCCESSFUL, C=1 IF ERROR
    139					;	R0,R3,R5 PRESERVED, R1,R2,R4 ALTERED
    140					;
    141					;-
    142	000334	010504 			RDBLK::	MOV	R5,R4		;CALCULATE BYTE COUNT TO BE READ
    143	000336	000304 				SWAB	R4
    144	000340	006304 				ASL	R4
    145	000342	010463 	000002 			MOV	R4,2(R3)	;AND STORE IT IN THE QI/O PARAMETER BLOCK
    146	000346	012701 	000000G		20$:	MOV	#IO.RVB,R1	;I/O FUNCTION CODE FOR READ VIRTUAL
    147	000352	012702 	000005 			MOV	#5,R2		;PARAMETER BLOCK IN R3 HAS 5 PARAMS
    148	000356					CALL	.XQIO		;ISSUE THE QI/O AND WAIT
    149	000362	103011 				BCC	40$		;BRANCH IF SUCCESSFUL
    150	000364	022760 	000000C	000000G		CMP	#IE.NOD&377,F.ERR(R0) ;NO DYNAMIC MEMORY AVAILABLE?
    151	000372	001004 				BNE	30$		;BRANCH IF SOME OTHER ERROR
    152	000374					WSIG$S			;WAIT FOR A SIGNIFICANT EVENT
    153	000402	000761 				BR	20$		;AND TRY AGAIN
    154	000404	000261 			30$:	SEC
    155	000406				40$:	RETURN
    156					;
    157					;+
    158					;
    159					; ** RCNXT - SET UP FOR NEXT BLOCK(S) TO READ CHECK
    160					;
    161					; INPUTS:
    162					;
    163					;	R0=FDB ADDRESS
    164					;	R3=ADDRESS OF PARAMETER BLOCK FOR QI/O READ VIRTUAL
    165					;	R5=NO. OF BLOCKS JUST READ
    166					;
    167					; OUTPUTS:
    168					;
    169					;	ALL REGISTERS PRESERVED
    170					;	SUBTRACT BLOCK COUNT FROM F.HIBK(R0), F.HIBK+2(R0)
    171					;		I.E. NUMBER OF BLOCKS REMAINING TO READ
    172					;	ADD BLOCK COUNT TO 6(R3), 10(R3) - NEXT VBN TO READ
    173					;
    174					;-
    175	000410	160560 	000002G		RCNXT:	SUB	R5,F.HIBK+2(R0)
    176	000414	005660 	000000G			SBC	F.HIBK(R0)	;UPDATE NO. OF BLOCKS LEFT TO BE READ
    177	000420	060563 	000010 			ADD	R5,10(R3)
    178	000424	005563 	000006 			ADC	6(R3)		;AND NEXT VBN TO BE READ
    179	000430					RETURN
VFYRCK M0107, VFY - READ CHECK 	MACRO M1110  22-AUG-78 00:39  PAGE 9
RDCKER - REPORT READ CHECK ERROR

    181						.SBTTL	RDCKER - REPORT READ CHECK ERROR
    182					;
    183					;+
    184					;
    185					; ** RDCKER - REPORT READ CHECK ERROR
    186					;
    187					; INPUTS:
    188					;
    189					;	R0=FDB OF FILE WITH ERROR
    190					;	R1=FORMAT STRING FOR THE OUTPUT MESSAGE
    191					;	R3=PARAMETER BLOCK TO QIO READ VIRTUAL BLOCK
    192					;	INDEX+F.NRBD+2=HEADER ADDRESS FOR THE FILE
    193					;
    194					; OUTPUTS:
    195					;
    196					;	R0,R3,R5 PRESERVED, R1,R2,R4 ALTERED
    197					;
    198					;	THIS ROUTINE LISTS THE VIRTUAL BLOCK, THE LOGICAL BLOCK, AND
    199					; THE ERROR CODE OF THE BLOCK THAT COULD NOT BE READ.  A HEADER LINE IS
    200					; LISTED FOR THE FIRST ERROR PER FILE IDENTIFYING THE FILE BY ID AND NAME
    201					;
    202					;-
    203	000432	010046 			RDCKER:	MOV	R0,-(SP)	;SAVE R0
    204	000434	010346 				MOV	R3,-(SP)	;SAVE R3
    205	000436	010546 				MOV	R5,-(SP)	;AND R5 TOO
    206	000440	010146 				MOV	R1,-(SP)	;SAVE FORMAT STRING ADDRESS
    207	000442	012701 	000000G			MOV	#MOPRM,R1	;R1=PARAMETER LIST FOR EDTMG
    208	000446	016302 	000006 			MOV	6(R3),R2	;R2,R3 =VBN
    209	000452	016303 	000010 			MOV	10(R3),R3
    210	000456	010221 				MOV	R2,(R1)+	;STORE VBN IN PARAMETER LIST
    211	000460	010321 				MOV	R3,(R1)+
    212	000462	005021 				CLR	(R1)+		;SAVE ROOM AND ZERO THE LBN
    213	000464	005021 				CLR	(R1)+
    214	000466	116000 	000000G			MOVB	F.ERR(R0),R0
    215	000472	010021 				MOV	R0,(R1)+	;STORE ERROR CODE FROM FCS
    216	000474	010221 				MOV	R2,(R1)+	;VBN FOR TEMP STORE
    217	000476	010311 				MOV	R3,(R1)		;(R1)=LOW ORDER, -2(R1)=HIGH ORDER
    218					;
    219					; CONVERT VBN TO CORRESPONDING LBN.
    220					;
    221	000500	016700 	000000C			MOV	INDEX+F.NRBD+2,R0  ;GET THE FILE HEADER BASE ADDR.
    222	000504	005046 				CLR	-(SP)		;COMPUTE MAP AREA ADDR IN R0.
    223	000506	156016 	000001 			BISB	H.MPOF(R0),(SP)	;MAP AREA OFFSET TO (SP).
    224	000512	006316 				ASL	(SP)		;CONVERT TO A BYTE OFFSET.
    225	000514	062600 				ADD	(SP)+,R0
    226	000516				20$:	CALL	GET1RP		;RETURN NEXT RETRIEVAL POINTER
    227	000522	103425 				BCS	60$		;BRANCH IF NONE LEFT
    228					;
    229					; R4,R5 = BLOCK COUNT FROM RP. R2,R3 = LBN FROM RP.
    230					;
    231	000524	020461 	177776 			CMP	R4,-2(R1)	;CMP HIGH ORDER COUNT TO HIGH ORDER VBN.
    232	000530	001001 				BNE	30$		;BR IF THEY DIFFER. NO NEED TO CMP LOW ORDER.
    233	000532	020511 				CMP	R5,(R1)		;DOES THIS RTRV PTR CONTAIN THE VBN?
    234	000534	103006 			30$:	BHIS	40$		;BRANCH IF YES
    235	000536	160511 				SUB	R5,(R1)		;DISCOUNT VBN'S JUST PASSED
    236	000540	005661 	177776 			SBC	-2(R1)		;DOUBLE PRECISION SUBTRACT.
    237	000544	160461 	177776 			SUB	R4,-2(R1)
VFYRCK M0107, VFY - READ CHECK 	MACRO M1110  22-AUG-78 00:39  PAGE 9-1
RDCKER - REPORT READ CHECK ERROR

    238	000550	000762 				BR	20$		;AND TRY NEXT RETRIEVAL POINTER
    239					;
    240					; FORM ACTUAL LBN BY ADDING RESIDUE FROM VBN TO LBN FROM RP.
    241					;
    242	000552	162711 	000001 		40$:	SUB	#1,(R1)		;VBN START AT 1, LBN START AT 0.
    243	000556	005661 	177776 			SBC	-2(R1)
    244	000562	061103 				ADD	(R1),R3		;FORM LBN+LEFT OVER COUNT -1
    245	000564	005502 				ADC	R2
    246	000566	064102 				ADD	-(R1),R2	;ADD IN HIGH ORDER COUNT
    247	000570	005741 				TST	-(R1)		;BACK UP TO LBN FIELD
    248	000572	010341 				MOV	R3,-(R1)	;AND STORE THE LBN
    249	000574	010241 				MOV	R2,-(R1)
    250	000576	012702 	000000G		60$:	MOV	#MOPRM,R2
    251	000602	012601 				MOV	(SP)+,R1	;R1=FORMAT STRING ADDRESS
    252	000604					CALL	OUTC		;OUTPUT THE ERROR MESSAGE
    253	000610	012605 				MOV	(SP)+,R5	;RESTORE R5
    254	000612	012603 				MOV	(SP)+,R3	;RESTORE R3
    255	000614	012600 				MOV	(SP)+,R0	;AND R0
    256	000616					RETURN			;AND EXIT
    257
VFYRCK M0107, VFY - READ CHECK 	MACRO M1110  22-AUG-78 00:39  PAGE 10
READ CHECK HEADER OUTPUT MESSAGE

    259						.SBTTL	READ CHECK HEADER OUTPUT MESSAGE
    260					;
    261					;+
    262					;
    263					; ** RCHDOU - READ CHECK HEADER MESSAGE OUTPUT
    264					;
    265					; INPUTS:
    266					;
    267					;	INDEX+F.NRBD+2 = ADDRESS OF HEADER
    268					;
    269					; OUTPUTS:
    270					;
    271					;	ALL REGISTERS ALTERED
    272					;
    273					; OPERATION:
    274					;
    275					;	THE OUTPUT APPEARS AS FOLLOWS
    276					; FILE ID N1,N2  NAME.TYP;VER SPACE USED/ALLOCATED
    277					;
    278					;-
    279	000620	016700 	000000G		RCHDOU::MOV	.DYBUF,R0
    280	000624	010002 				MOV	R0,R2		;USE THIS SPACE FOR PARAMETERS BLOCK
    281	000626	016704 	000000C			MOV	INDEX+F.NRBD+2,R4 ;ADDRESS OF HEADER
    282	000632	016446 	000010 			MOV	H.FNUM(R4),-(SP) ;USE FILE NUMBER FROM FILE HEADER
    283	000636	032767 	000000G	000000G		BIT	#HDROK,OUTCTL	;ASSUMING HEADER IS OK
    284	000644	001002 				BNE	5$		;BRANCH IF IT IS
    285	000646	016716 	000000G			MOV	NXTFID,(SP)	;OTHERWISE USE FILE NUMBER FROM NXTFID
    286	000652	012620 			5$:	MOV	(SP)+,(R0)+	;STORE THE FILE NUMBER
    287	000654	016420 	000012 			MOV	H.FSEQ(R4),(R0)+ ;FILE SEQUENCE NUMBER
    288	000660					CALL	MVFNAM		;FILE NAME
    289	000664	016700 	000000C			MOV	FDBOUT+F.NRBD+2,R0
    290	000670	012701 	000247'			MOV	#LO70MG,R1
    291	000674					CALL	$EDMSG		;CONVERT THIS MUCH TO A STRING
    292	000700	010401 				MOV	R4,R1		;HEADER ADDRESS
    293	000702	062701 	000024G			ADD	#H.UFAT+F.EFBK,R1 ;ADDRESS OF DBL PRECISION EOF BLOCK NO.
    294	000706	005764 	000024G			TST	H.UFAT+F.FFBY(R4) ;IF FFBY = 0
    295	000712	001004 				BNE	10$
    296	000714	162761 	000001 	000002 		SUB	#1,2(R1)	;EFBK IS ONE TOO BIG
    297	000722	005611 				SBC	(R1)
    298	000724	005002 			10$:	CLR	R2		;ZERO SUPPRESS
    299	000726					CALL	$CDDMG		;CONVERT DBL PRECISION DECIMAL
    300	000732	112720 	000056 			MOVB	#'.,(R0)+	;PUT IN DECIMAL POINT
    301	000736	112720 	000057 			MOVB	#'/,(R0)+	;"/"
    302	000742	010401 				MOV	R4,R1
    303	000744	062701 	000024G			ADD	#H.UFAT+F.HIBK,R1 ;ADDRESS OF DBL PRECISION LAST VBN
    304	000750	005002 				CLR	R2
    305	000752					CALL	$CDDMG		;CONVERT DBL PRECISION DECIMAL
    306	000756	112720 	000056 			MOVB	#'.,(R0)+	;ADD A DECIMAL POINT
    307	000762	010001 				MOV	R0,R1		;CALCULATE SIZE OF MESSAGE
    308	000764	166701 	000000C			SUB	FDBOUT+F.NRBD+2,R1
    309	000770					CALLR	OUT2		;OUTPUT THE MESSAGE AND RETURN
    310
    311
    312						.SBTTL	FORMAT STRINGS
    313	000000					.PSECT
    314
    315	000000					MSGZ	LO48,<	FAILED TO OPEN FILE FOR READ CHECK - ERROR CODE %D.>
VFYRCK M0107, VFY - READ CHECK 	MACRO M1110  22-AUG-78 00:39  PAGE 10-1
FORMAT STRINGS

    316	000000					MSG	LO49,<	ERROR STARTING AT VBN %O,%P, LBN %O,%P>
    317	000000					MSGZ	,< - ERROR CODE %D.>
    318	000000					MSG	LO51,<	         ERROR AT VBN %O,%P, LBN %O,%P>
    319	000000					MSGZ	,< - ERROR CODE %D.>
    320	000000					MSG1	LO70,<<12>^FILE ID %P,%P  %X  ^<0>>
    321						.EVEN
    322					;
    323					;
    324		000001 				.END
VFYRCK M0107, VFY - READ CHECK 	MACRO M1110  22-AUG-78 00:39  PAGE 10-2
SYMBOL TABLE

FA.SHR= ****** GX	H.DVTY= 000044   	H.PROG= 000074   	I.RVDT= 000032   	RDFIL   000000RG    002
FDBOUT= ****** GX	H.EFNU= 000016   	H.PROJ= 000076   	I.RVNO= 000020   	R$$DPB= 000001
FD.RWM= ****** GX	H.EFSQ= 000020   	H.RPRO= 000102   	I.ULAB= 000062   	R$$DYM= 000001
FIXEOF= ****** GX	H.ERVN= 000022   	H.RSOF= 000003   	LO48MG= 000000R     003	R$$EIS= 000000
FO.RD = ****** GX	H.FCHA= 000064   	H.RSVF= 000042   	LO48SZ= 000065   	R$$MSG= 000000
FP.DEL= 000010   	H.FIEX= 000106   	H.RVN = 000046   	LO49MG= 000065R     003	R$$11M= 000001
FP.EXE= 000004   	H.FLEV= 000006   	H.SBCL= 000016   	LO49SZ= 000047   	SC.BAD= 000100
FP.RDV= 000001   	H.FMAX= 000034   	H.SCHA= 000065   	LO51MG= 000156R     003	SC.DIR= 000040
FP.WRV= 000002   	H.FNUM= 000010   	H.SEMK= 000104   	LO51SZ= 000047   	SC.MDL= 000200
F.EFBK= ****** GX	H.FOWN= 000074   	H.SMMX= 000110   	LO70MG= 000247R     003	STBLK = ****** GX
F.ERR = ****** GX	H.FPRO= 000100   	H.SNAM= 000714   	LO70SZ= 000025   	SZ    = 000022
F.FACC= ****** GX	H.FRVN= 000014   	H.UCHA= 000064   	MG    = 000225R     003	S.FATT= ****** GX
F.FFBY= ****** GX	H.FSEG= 000004   	H.UFAT= 000024   	MOPRM = ****** GX	S.HDHD= 000114
F.FNB = ****** GX	H.FSEQ= 000012   	H.USE = 000072   	MVFNAM= ****** GX	S.IDHD= 000202
F.HIBK= ****** GX	H.HBLB= 000000   	H.VCHA= 000052   	NB.NXD= 020000   	S.MPHD= 000000
F.NRBD= ****** GX	H.HBVB= 000020   	H.VDAT= 000074   	NXTFID= ****** GX	TRMOUT= ****** GX
F.RACC= ****** GX	H.IBLB= 000030   	H.VLEV= 000014   	N.DVNM= ****** GX	UC.CON= 000200
F.STBK= ****** GX	H.IBSZ= 000040   	H.VOWN= 000054   	N.FID = ****** GX	UC.DLK= 000100
GET1RP= ****** GX	H.IBVB= 000026   	H.VPRO= 000064   	N.UNIT= ****** GX	$CDDMG= ****** GX
HDRERR= ****** GX	H.IDOF= 000000   	H.VSMX= 000060   	OUTC  = ****** GX	$EDMSG= ****** GX
HDROK = ****** GX	H.IHLB= 000010   	H.WISZ= 000104   	OUTCTL= ****** GX	$SAVAL= ****** GX
H.ACOF= 000002   	H.IHVB= 000024   	IE.NOD= ****** GX	OUT2  = ****** GX	.CLOSE= ****** G
H.AHLB= 000004   	H.INDF= 000760   	INDEX = ****** GX	PAR$$$= 000027   	.DYBUF= ****** GX
H.AHVB= 000022   	H.INDN= 000730   	IO.RVB= ****** GX	RCHDOU  000620RG    002	.OPEN = ****** G
H.CHK1= 000072   	H.INDO= 000744   	I.BKDT= 000052   	RCNXT   000410R     002	.RCBLK= ****** GX
H.CHK2= 000776   	H.LRUC= 000105   	I.CRDT= 000022   	RDBLK   000334RG    002	.XQIO = ****** GX
H.CKSM= 000776   	H.MPOF= 000001   	I.EXDT= 000042   	RDCHK = ****** GX	...GBL= 000000
H.DFPR= 000066   	H.NVOL= 000050   	I.FNAM= 000000   	RDCKER  000432R     002	...TPC= 001000
H.DRPR= 000070   	H.PRIV= 000073

. ABS.	000000	   000
      	000000	   001
PURE$I	000774	   002
MSGSTR	000274	   003
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  5310 WORDS  ( 21 PAGES)
DYNAMIC MEMORY:  5940 WORDS  ( 22 PAGES)
ELAPSED TIME:  00:00:26
EXE$:VFYRCK,LIS$:VFYRCK/-SP=SRC$:PIPMAC,VFYRCK
