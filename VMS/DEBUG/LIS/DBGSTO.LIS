
; Bliss-32 7.352	Saturday 22-AUG-1978 04:34:49	DBB3:[DEBUG.SRC]DBGSTO.B32;6					Page 1
; Digital Equipment Corporation
;
;	0001	MODULE DBGSTO (	! global storage for DEBUG
;	0002			ADDRESSING_MODE (EXTERNAL = LONG_RELATIVE),
;	0003			IDENT = '000060') =
;	0004	BEGIN
;	0005	
;	0006	! Copyright (C) 1976
;	0007	! Digital Equipment Corporation, Maynard, Massachusetts 01754
;	0008	!
;	0009	! This software is furnished under a license for use only on a
;	0010	! single computer system and may be copied only with the inclusion
;	0011	! of the above copyright notice. This software, or any
;	0012	! other copies thereof, may not be provided or otherwise made
;	0013	! available to any other person except for use on such system
;	0014	! and to one who agrees to these license terms. Title to and
;	0015	! ownership of the software shall at all times remain in DEC.
;	0016	!
;	0017	! The information in this software is subject to change without
;	0018	! notice and should not be construed as a commitment by Digital
;	0019	! Equipment Corporation.
;	0020	!
;	0021	! DEC assumes no responsibility for the use or reliability of
;	0022	! its software on equipment which is not supplied by DEC.
;	0023	!
;	0024	! FACILITY:	DEBUG
;	0025	!
;	0026	!++
;	0027	! FUNCTIONAL DESCRIPTION:
;	0028	!	DECLARES GLOBAL VARIABLES FOR DEBUG FACILITY
;	0029	!
;	0030	! Version:	60
;	0031	!
;	0032	! History:
;	0033	!	Author:
;	0034	!		Carol Peters, 03 Jul 1976: Version 01
;	0035	!
;	0036	!	Modified by:
;	0037	!		Dale Roedger, 14 July 1978:	60
;	0038	!
;	0039	! Revision history:
;	0040	!	20	24-MAR-77	KGP	-TOOK OUT COUNTED_STRING MACRO
;	0041	!	21	30-MAR-77	KGP	-CHANGED REFERENCES TO THE MODE
;	0042	!					 DATA STRUCTURES TO REFLECT THE
;	0043	!					 FACT THAT WE NOW HAVE ONLY 1 MODE.
;	0044	!	22	31-MAR-77	KGP	-ADDED A DEFINITION FOR DBG$CP_OUT_STR,
;	0045	!					THE POINTER WHICH SEVERAL ROUTINES WILL
;	0046	!					USE TO DO I/O TO AN OUTPUT BUFFER.
;	0047	!	23	11-04-77	CP	Add globals for FABs and RABs.
;	0048	!					Delete ENAB_SWT.
;	0049	!	24	14-04-77	CP	Add DBG$GL_BUF_SIZ for count
;	0050	!					in output buffer while calling
;	0051	!					DBG$FAO_PUT.
;	0052	!	25	20-04-77	CP	Change VAXDEB.BEG to be named
;	0053	!					DBGGEN.BEG. Also, add DBGPCT.BEG
;	0054	!					for PSECT declarations.
;	0055	!	26	29-04-77	CP	Remove DBG$GB_PARS_MOR. This

; Bliss-32 7.352	Saturday 22-AUG-1978 04:34:49	DBB3:[DEBUG.SRC]DBGSTO.B32;6					Page 1-1
; Digital Equipment Corporation
;
;	0056	!					is now a local in the parser.
;	0057	!					Add DBG$GL_OPCODE from DBGMAC.
;	0058	!	27	06-05-77	CP	Remove DBG$GL_OPCODE, sigh. It
;	0059	!					has been eliminated. Now ENC and
;	0060	!					MAC have no globals.
;	0061	!					Order global declarations so that
;	0062	!					longwords are clumped, bytes
;	0063	!					are clumped, etc. since this 
;	0064	!					saves space.
;	0065	!	28	10-06-77	CP	Declare two global literals,
;	0066	!					DBG$_NORMAL and DBG$_CANT_WRITE.
;	0067	!	29	05-07-77	CP	Change REQUIRE files for system
;	0068	!					definitions to those on NEW,
;	0069	!					STARDE, etc.
;	0070	!	30	14-07-77	CP	Remove symbol dbg$gb_noaction
;	0071	!					It was used for a flag to say
;	0072	!					that breakpoint actions were
;	0073	!					being collected. It is no longer
;	0074	!					necessary since no lexical scanning
;	0075	!					of the breakpoint action string
;	0076	!					is done until the string is
;	0077	!					executed. Also remove dbg$gl_lex_ptr
;	0078	!					since this for the same reasons
;	0079	!					is unnecessary. Add dbg$gl_csp_ptr
;	0080	!					for current path name pointer.
;	0081	!	31	22-aug-77	KGP	-Changed names for DEBUG's logical
;	0082	!					 input/output assignments to the
;	0083	!					 new BL4 ones. (DBG$INPUT,DBG$OUTPUT).
;	0084	!	32	09-aug-77	CP	Add the CVT characteristic to the
;	0085	!					input RAB so that lower case is
;	0086	!					translated to upper case.
;	0087	!	33	07-09-77	CP	Remove static declarations of
;	0088	!					FAB/RAB connections and prompt
;	0089	!					string address so that code is
;	0090	!					PIC. Change REQUIRE declarations
;	0091	!					to LIBRARY declarations for
;	0092	!					system-wide files.
;	0093	!	34	09-09-77	CP	Remove CVT characteristic.
;	0094	!	35	11-09-77	CP	Add two globals, DBG$gl_partbptr
;	0095	!					which is a vector of addresses of
;	0096	!					parsing tables, and dbg$gl_reduc_rt,
;	0097	!					which is the name of the current
;	0098	!					set of action routines.
;	0099	!					dbg$gl_keyw_tbl is name of current
;	0100	!					keyword table.
;	0101	!	36	13-sept-77	KGP	-Moved the RST global declarations
;	0102	!					 from DBGRST to here.
;	0103	!	37	13-09-77	CP	Add the variable dbg$gl_get_lex.
;	0104	!					Holds the address of the current
;	0105	!					lexical scanner routine.
;	0106	!	38	07-10-77	CP	Add a global pointer to the 
;	0107	!					current input buffer.
;	0108	!	39	12-10-77	CP	Add a global vector that holds
;	0109	!					FORTRAN array dimensions. Allocate
;	0110	!					only if multiple language 

; Bliss-32 7.352	Saturday 22-AUG-1978 04:34:49	DBB3:[DEBUG.SRC]DBGSTO.B32;6					Page 1-2
; Digital Equipment Corporation
;
;	0111	!					debugger or FORTRAN debugger.
;	0112	!	40	27-10-77	CP	Add a global pointer to the
;	0113	!					call frame used to call a user
;	0114	!					routine specified with the CALL
;	0115	!					command. Delete gl_bractptr since
;	0116	!					it's not used. Also delete
;	0117	!					global literals. Remove tail_lst
;	0118	!					since it doesn't need to be global.
;	0119	!	41	31 oct 77	KGP	-Added an INITIAL(0) to the declaration
;	0120	!					 of DBG$GL_SAT_PTR and _LVT_PTR because
;	0121	!					 the BLD module (routine RENEW) relies
;	0122	!					 on this.
;	0123	!	42	2 nov 77	KGP	-Added DBG$_RST_BEGIN since we can
;	0124	!					 no longer have it in DBGRST.BEG
;	0125	!	43	02-11-77	CP	Remove dbg$gl_start_ad.
;	0126	!	44	07-11-77	CP	Remove gl_uregs, gl_frameptr.
;	0127	!					Add gl_runframe, gl_step_num.
;	0128	!	45	09-11-77	CP	In the output FAB, ask for CRLF
;	0129	!					before every output line.
;	0130	!	46	06-12-77	CP	Make the length of the parsing
;	0131	!					stacks max_stack_ptr *
;	0132	!					dbg$k_stelmsize.
;	0133	!	47	12-dec-77	KGP	-Took out now-defunct RST pointers
;	0134	!					 to the SAT and LVT.
;	0135	!	48	09-JAN-78	DAR	Added global byte to hold the language
;	0136	!					type.  DBG$GB_LANGUAGE
;	0137	!	49	10-JAN-78	DAR	Added "NIL" attribute to file sharing
;	0138	!					"SHR" parameter for DBG$OUTPUT.
;	0139	!	50	3-feb-78	KGP	-New global DBG$GB_ALL_FLAG variable,
;	0140	!					 to be set when "/ALL" is encountered.
;	0141	!	51	02-MAR-78	DAR	Set 'CR' bit in the output FAB.
;	0142	!	52	29-MAR-78	DAR	Made GBG$GL_CONTEXT a LONGWORD.
;	0143	!					Added the character table require file
;	0144	!					to this module as a GLOBAL table
;	0145	!					DBG$CHAR_TABLE.
;	0146	!	53	30-MAR-78	DAR	Added the token table used in the
;	0147	!					lexical routines to this module.
;	0148	!					It was formerly in DBGLEX.
;	0149	!					Also added require file COMTER to provide
;	0150	!					the definitions.
;	0151	!	54	31-MAR-78	DAR	Removed the character table DBG$CHAR_TABLE
;	0152	!					require file CHRKEY and added the table
;	0153	!					to the source.
;	0154	!	55	11-APR-78	DAR	Extended the vector DBG$GL_LIST to 3
;	0155	!					longwords.
;	0156	!	56	13-APR-78	DAR	Made require and library file names
;	0157	!					uppercase.
;	0158	!	57	19-apr-78	KGP	-Added declaration of STEP TYPE structures.
;	0159	!	58	27-APR-78	DAR	Modified require and library directives
;	0160	!					for native build.
;	0161	!	59	19-jun-78	KGP	-dimen_lst is now 2 words longer to
;	0162	!					 accomodate CHARACTER type in FORTRAN
;	0163	!	60	14-JUL-78	DAR	Added global variable DBG$GL_ASCI_LEN to
;	0164	!					hold the length for ascii string output
;	0165	!--

; Bliss-32 7.352	Saturday 22-AUG-1978 04:34:49	DBB3:[DEBUG.SRC]DBGSTO.B32;6					Page 1-3
; Digital Equipment Corporation
;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:34:49	DBB3:[DEBUG.SRC]DBGSTO.B32;6					Page 2
; Digital Equipment Corporation
;
;	0166	! INCLUDE FILES
;	0167	!
;	0168	%IF %VARIANT		! True for TEN.
;     L 0169	%THEN
;     U 0170	LIBRARY 'NEW:STARLE';
;     U 0171	
;     U 0172	REQUIRE 'DBGPCT.REQ';
;     U 0173	REQUIRE 'DBGGEN.REQ';
;     U 0174	REQUIRE 'VXSMAC.REQ';
;     U 0175	REQUIRE 'DBGRST.REQ';
;     U 0176	REQUIRE 'VXPALT.REQ';
;     U 0177	REQUIRE 'SYSLIT.REQ';
;     U 0178	REQUIRE 'DBGMSG.REQ';
;     U 0179	REQUIRE 'COMTER.REQ';
;     U 0180	%ELSE
;	0181	LIBRARY 'SYS$LIBRARY:STARLET.L32';
;	0182	
;	0183	REQUIRE 'SRC$:DBGPCT.REQ';
;	0195	REQUIRE 'SRC$:DBGGEN.REQ';
;	0445	REQUIRE 'SRC$:VXSMAC.REQ';
;	0485	REQUIRE 'SRC$:DBGRST.REQ';
;	1632	REQUIRE 'SRC$:VXPALT.REQ';
;	1656	REQUIRE 'SRC$:SYSLIT.REQ';
;	1679	REQUIRE 'LIB$:DBGMSG.REQ';
;	1958	REQUIRE 'SRC$:COMTER.REQ';
;	2050	%FI
;	2051	
;	2052	GLOBAL LITERAL
;	2053				! The base of RST storage.  Some of the RST
;	2054				! data structures base 'pointers' off this.
;	2055		
;	2056		DBG$_RST_BEGIN	= %X'7FFF0000';
;	2057	
;	2058	LITERAL
;	2059		macro_syntax	= TRUE,		! MACRO debugger
;	2060		fortran_syntax	= TRUE,		! FORTRAN debugger
;	2061		bliss_syntax	= FALSE;	! BLISS debugger
;	2062	
;	2063	
;	2064	!++
;	2065	! THE dbg$char_table associates each ASCII character with a value
;	2066	! from 0 to n. The meaning of the numeric value can be seen in
;	2067	! literal definitions declared in SCALIT.BEG (for example, 1 is bound
;	2068	! to alpha).
;	2069	!--
;	2070	GLOBAL BIND
;	2071		dbg$char_table = UPLIT BYTE (
;	2072	
;	2073		6,  0,  0,  0,  0,  0,  0,  0,	!000-007	treat null char as lf
;	2074		0,  4,  6,  6,  6,  6,  0,  0,	!010-017	tab, lf, vtab, ff, cr
;	2075		0,  0,  0,  0,  0,  0,  0,  0,	!020-027
;	2076		0,  0,  0,  0,  0,  0,  0,  0,	!030-037
;	2077		4,  5, 16, 28,  1, 29,  0, 16,	!040-047	space ! " # $ % & '
;	2078		9, 10, 21, 11, 24, 12, 20, 13,	!050-057	( ) * + , - . /
;	2079		2,  2,  2,  2,  2,  2,  2,  2,	!060-067	0 1 2 3 4 5 6 7

; Bliss-32 7.352	Saturday 22-AUG-1978 04:34:49	DBB3:[DEBUG.SRC]DBGSTO.B32;6					Page 2-1
; Digital Equipment Corporation
;
;	2080		2,  2, 14, 15, 22, 25, 23,  0,	!070-077	8 9 : ; < = > ?
;	2081		19, 3,  3,  3,  3,  3,  3,  1,	!100-107	@ A B C D E F G
;	2082		1,  1,  1,  1,  1,  1,  1,  1,	!110-117	H I J K L M N O
;	2083		1,  1,  1,  1,  1,  1,  1,  1,	!120-127	P Q R S T U V W
;	2084		1,  1,  1, 26, 18, 27, 17,  1,	!130-137	X Y Z [ \ ] ^ _
;	2085		0,  8,  8,  8,  8,  8,  8,  7,	!140-147	` a b c d e f g
;	2086		7,  7,  7,  7,  7,  7,  7,  7,	!150-157	h i j k l m n o
;	2087		7,  7,  7,  7,  7,  7,  7,  7,	!160-167	p q r s t u v w
;	2088		7,  7,  7,  0,  0,  0,  0,  0	!170-177	x y z { | } ~ delete
;	2089	
;	2090			) : VECTOR [,BYTE];
;	2091	
;	2092	GLOBAL BIND
;	2093		dbg$token_table = UPLIT BYTE (
;	2094				op_paren_token,
;	2095				cl_paren_token,
;	2096				plus_token,
;	2097				minus_token,
;	2098				slash_token,
;	2099				colon_token,
;	2100				semicolon_token,
;	2101				quote_token,
;	2102				up_arrow_token,
;	2103				backslash_token,
;	2104				at_sign_token,
;	2105				period_token,
;	2106				asterisk_token,
;	2107				langle_token,
;	2108				rangle_token,
;	2109				comma_token,
;	2110				equals_token,
;	2111				lsquare_token,
;	2112				rsquare_token,
;	2113				hash_token,
;	2114				percent_token ) : VECTOR [, BYTE];
;	2115	
;	2116	GLOBAL
;	2117		!++
;	2118		! declare the FAB and RAB blocks for terminal I/O.
;	2119		!--
;	2120		dbg$gl_inpfab:	$FAB (FAC=GET
;     P 2121					, MRS=no_of_inp_chars
;     P 2122					),
;	2123		dbg$gl_outpfab:	$FAB (FAC=PUT
;     P 2124					, MRS=tty_out_width
;     P 2125					, RAT=<CR>
;     P 2126					, SHR=<NIL>
;     P 2127					),
;	2128		dbg$gl_inprab:	$RAB (USZ=no_of_inp_chars
;     P 2129					, ROP=<PMT>
;     P 2130					),
;	2131		dbg$gl_outprab:	$RAB (),
;	2132	
;	2133		!++
;	2134		! This the only bitvector.

; Bliss-32 7.352	Saturday 22-AUG-1978 04:34:49	DBB3:[DEBUG.SRC]DBGSTO.B32;6					Page 2-2
; Digital Equipment Corporation
;
;	2135		!--
;	2136		dbg$gl_context: BITVECTOR [context_bits],			! context LONGWORD
;	2137	
;	2138		!++
;	2139		! The only two byte vectors are used to contain the
;	2140		! 'mode' and 'step type' data structures.
;	2141		!--
;	2142		dbg$gb_def_mod: VECTOR [mode_levels * mode_lvl_size, BYTE],	! DEFAULT MODE BLOCK
;	2143		dbg$gb_def_stp: VECTOR [step_levels * step_lvl_size, BYTE],	! DEFAULT STEP BLOCK
;	2144	
;	2145		!++
;	2146		! These are global bytes.
;	2147		!--
;	2148		dbg$gb_language: BYTE,						! HOLDS LANGUAGE INDEX
;	2149		dbg$gb_debug: BYTE,						! SAYS DEBUG OR USER CONTEXT
;	2150		dbg$gb_enab_ast: BYTE,						! BOOLEAN, TRUE IF ASTS ARE ENABLED
;	2151		dbg$gb_exit_dbg: BYTE,						! EXIT FROM DEBUG
;	2152		dbg$gb_loc_type: BYTE,						! TELLS WHAT SORT OF END RANGE LOCATION
;	2153		dbg$gb_resignal: BYTE,						! BOOLEAN, TRUE IF RESIGNALING ALL EXCEPTIONS
;	2154		dbg$gb_take_cmd: BYTE,						! BOOLEAN, TRUE IF ANOTHER COMMAND WILL BE READ
;	2155		dbg$gb_tbit_ok: BYTE,						! TBITS ARE LEGAL
;	2156	
;	2157		!++
;	2158		! Now refs to byte vectors. Don't confuse these with byte
;	2159		! vectors.
;	2160		!--
;	2161		dbg$cp_inp_str : BLOCK [8, BYTE] INITIAL (0, 0),		! input line stg descriptor
;	2162		dbg$cp_out_str : REF VECTOR [, BYTE],				! POINTS INTO CURRENT OUTPUT BUFFER.
;	2163		dbg$gb_mod_ptr: REF VECTOR [, BYTE],				! POINTER TO CURRENT MODE LEVEL
;	2164		dbg$gb_stp_ptr: REF VECTOR [, BYTE],				! POINTER TO CURRENT STEP type
;	2165	
;	2166		!++
;	2167		! REFs to more complicated (or more general)
;	2168		! things than the above BYTE vectors.
;	2169		! (The defn of the following 'types' is why
;	2170		!  DBGRST.BEG is included in this module.)
;	2171		!--
;	2172	
;	2173					! pointer to current scope vector (CSP)
;	2174		DBG$GL_CSP_PTR	: REF PATHNAME_VECTOR,
;	2175	
;	2176					! Pointer to the Module Chain (MC).
;	2177		DBG$GL_MC_PTR	: REF MC_RECORD,
;	2178	
;	2179					! Pointer to the name table (NT) hash vector.
;	2180		DBG$GL_NT_HASH	: REF RST_POINTER,
;	2181	
;	2182		!++
;	2183		! Normal longword vectors.
;	2184		!--
;	2185	
;	2186	%IF fortran_syntax
;     L 2187	%THEN
;	2188		dbg$gl_dimenlst : VECTOR [10],					! dimensions for FORTRAN array
;	2189	%FI

; Bliss-32 7.352	Saturday 22-AUG-1978 04:34:49	DBB3:[DEBUG.SRC]DBGSTO.B32;6					Page 2-3
; Digital Equipment Corporation
;
;	2190	
;	2191		dbg$gl_list: VECTOR [3],					! LIST FOR COMMAND ARGUMENTS
;	2192		dbg$gl_partbptr: VECTOR [5],					! addresses of parse tables
;	2193		dbg$gl_seman1: VECTOR [max_stack_ptr * dbg$k_stelmsize],	! SEMANTIC STACK FOR TOKENS
;	2194		dbg$gl_seman2: VECTOR [max_stack_ptr * dbg$k_stelmsize],	! SEMANTIC STACK FOR POINTERS TO STRINGS
;	2195	
;	2196		!++
;	2197		! And finally the global scalar longwords.
;	2198		!--
;	2199		dbg$gl_asci_len : INITIAL (4),					! Number of ascii characters to output
;	2200		dbg$gl_bpthead,							! POINTER TO HEAD OF BREAKPOINT CHAIN
;	2201		dbg$gl_buf_siz,							! character count in output buffer
;	2202		dbg$gl_get_lex,							! current lexical lexeme routine
;	2203		dbg$gl_head_lst,						! HEAD OF LINKED LIST
;	2204		dbg$gl_keyw_tbl,						! name of current keyword table
;	2205		dbg$gl_last_loc,						! LAST LOCATION DISPLAYED
;	2206		dbg$gl_last_val,						! LAST VALUE DISPLAYED
;	2207		dbg$gl_next_loc,						! NEXT LOCATION TO DISPLAY
;	2208		dbg$gl_reduc_rt,						! name of current action routines
;	2209		dbg$gl_runframe,						! pointer to current run frame
;	2210		dbg$gl_step_num,						! number of steps in stepping
;	2211		dbg$gl_symhead;							! POINTER TO HEAD OF SYMBOL TABLE
;	2212	
;	2213	END
;	2214	ELUDOM


							    .TITLE  DBGSTO
							    .IDENT  \000060\

							    .PSECT  DBG$PLIT,NOWRT,  SHR,  PIC,0

					      00000 P.AAA:  .BYTE   6, 0, 0, 0, 0, 0, 0, 0, 0, 4, 6, 6, 6, 6, 0, 0, 0, 0, 0, -;
								    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 5, 16, 28, 1, - ;
								    29, 0, 16, 9, 10, 21, 11, 24, 12, 20, 13, 2, 2, 2, 2, 2, -;
								    2, 2, 2, 2, 2, 14, 15, 22, 25, 23, 0, 19, 3, 3, 3, 3, 3, -;
								    3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -;
								    1, 1, 26, 18, 27, 17, 1, 0, 8, 8, 8, 8, 8, 8, 7, 7, 7, -  ;
								    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, -;
								    0, 0, 0						      ;
					      00080 P.AAB:  .BYTE   76, 63, 79, 72, 86, 64, 84, 80, 87, 62, 61, 78, 60, 70, - ;
								    82, 65, 67, 71, 83, 68, 77				      ;
					      00095	    .BLKB   3

							    .PSECT  DBG$GLOBAL,NOEXE,  PIC,2

					      00000 DBG$GL_INPFAB::
							    .BYTE   3							      ;
					      00001 	    .BYTE   80							      ;
					      00002 	    .WORD   0							      ;
					      00004 	    .LONG   0							      ;
					      00008 	    .LONG   0							      ;
					      0000C 	    .LONG   0							      ;
					      00010 	    .LONG   0							      ;
					      00014 	    .WORD   0							      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:34:49	DBB3:[DEBUG.SRC]DBGSTO.B32;6					Page 2-4
; Digital Equipment Corporation
;
					      00016 	    .BYTE   2							      ;
					      00017 	    .BYTE   0							      ;
					      00018 	    .LONG   0							      ;
					      0001C 	    .BYTE   0							      ;
					      0001D 	    .BYTE   0							      ;
					      0001E 	    .BYTE   0							      ;
					      0001F 	    .BYTE   2							      ;
					      00020 	    .LONG   0							      ;
					      00024 	    .LONG   0							      ;
					      00028 	    .LONG   0							      ;
					      0002C 	    .LONG   0							      ;
					      00030 	    .LONG   0							      ;
					      00034 	    .BYTE   0							      ;
					      00035 	    .BYTE   0							      ;
					      00036 	    .WORD   132							      ;
					      00038 	    .LONG   0							      ;
					      0003C 	    .WORD   0							      ;
					      0003E 	    .BYTE   0							      ;
					      0003F 	    .BYTE   0							      ;
					      00040 	    .LONG   0							      ;
					      00044 	    .LONG   0							      ;
					      00048 	    .LONG   0, 0						      ;
					      00050 DBG$GL_OUTPFAB::
							    .BYTE   3							      ;
					      00051 	    .BYTE   80							      ;
					      00052 	    .WORD   0							      ;
					      00054 	    .LONG   0							      ;
					      00058 	    .LONG   0							      ;
					      0005C 	    .LONG   0							      ;
					      00060 	    .LONG   0							      ;
					      00064 	    .WORD   0							      ;
					      00066 	    .BYTE   1							      ;
					      00067 	    .BYTE   32							      ;
					      00068 	    .LONG   0							      ;
					      0006C 	    .BYTE   0							      ;
					      0006D 	    .BYTE   0							      ;
					      0006E 	    .BYTE   2							      ;
					      0006F 	    .BYTE   2							      ;
					      00070 	    .LONG   0							      ;
					      00074 	    .LONG   0							      ;
					      00078 	    .LONG   0							      ;
					      0007C 	    .LONG   0							      ;
					      00080 	    .LONG   0							      ;
					      00084 	    .BYTE   0							      ;
					      00085 	    .BYTE   0							      ;
					      00086 	    .WORD   132							      ;
					      00088 	    .LONG   0							      ;
					      0008C 	    .WORD   0							      ;
					      0008E 	    .BYTE   0							      ;
					      0008F 	    .BYTE   0							      ;
					      00090 	    .LONG   0							      ;
					      00094 	    .LONG   0							      ;
					      00098 	    .LONG   0, 0						      ;
					      000A0 DBG$GL_INPRAB::
							    .BYTE   1							      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:34:49	DBB3:[DEBUG.SRC]DBGSTO.B32;6					Page 2-5
; Digital Equipment Corporation
;
					      000A1 	    .BYTE   68							      ;
					      000A2 	    .WORD   0							      ;
					      000A4 	    .LONG   1073741824						      ;
					      000A8 	    .LONG   0							      ;
					      000AC 	    .LONG   0							      ;
					      000B0 	    .WORD   0, 0, 0						      ;
					      000B6 	    .WORD   0							      ;
					      000B8 	    .LONG   0							      ;
					      000BC 	    .WORD   0							      ;
					      000BE 	    .BYTE   0							      ;
					      000BF 	    .BYTE   0							      ;
					      000C0 	    .WORD   132							      ;
					      000C2 	    .WORD   0							      ;
					      000C4 	    .LONG   0							      ;
					      000C8 	    .LONG   0							      ;
					      000CC 	    .LONG   0							      ;
					      000D0 	    .LONG   0							      ;
					      000D4 	    .BYTE   0							      ;
					      000D5 	    .BYTE   0							      ;
					      000D6 	    .BYTE   0							      ;
					      000D7 	    .BYTE   0							      ;
					      000D8 	    .LONG   0							      ;
					      000DC 	    .LONG   0							      ;
					      000E0 	    .LONG   0							      ;
					      000E4 DBG$GL_OUTPRAB::
							    .BYTE   1							      ;
					      000E5 	    .BYTE   68							      ;
					      000E6 	    .WORD   0							      ;
					      000E8 	    .LONG   0							      ;
					      000EC 	    .LONG   0							      ;
					      000F0 	    .LONG   0							      ;
					      000F4 	    .WORD   0, 0, 0						      ;
					      000FA 	    .WORD   0							      ;
					      000FC 	    .LONG   0							      ;
					      00100 	    .WORD   0							      ;
					      00102 	    .BYTE   0							      ;
					      00103 	    .BYTE   0							      ;
					      00104 	    .WORD   0							      ;
					      00106 	    .WORD   0							      ;
					      00108 	    .LONG   0							      ;
					      0010C 	    .LONG   0							      ;
					      00110 	    .LONG   0							      ;
					      00114 	    .LONG   0							      ;
					      00118 	    .BYTE   0							      ;
					      00119 	    .BYTE   0							      ;
					      0011A 	    .BYTE   0							      ;
					      0011B 	    .BYTE   0							      ;
					      0011C 	    .LONG   0							      ;
					      00120 	    .LONG   0							      ;
					      00124 	    .LONG   0							      ;
					      00128 DBG$GL_CONTEXT::
							    .BLKB   4
					      0012C DBG$GB_DEF_MOD::
							    .BLKB   36
					      00150 DBG$GB_DEF_STP::

; Bliss-32 7.352	Saturday 22-AUG-1978 04:34:49	DBB3:[DEBUG.SRC]DBGSTO.B32;6					Page 2-6
; Digital Equipment Corporation
;
							    .BLKB   9
					      00159 DBG$GB_LANGUAGE::
							    .BLKB   1
					      0015A DBG$GB_DEBUG::
							    .BLKB   1
					      0015B DBG$GB_ENAB_AST::
							    .BLKB   1
					      0015C DBG$GB_EXIT_DBG::
							    .BLKB   1
					      0015D DBG$GB_LOC_TYPE::
							    .BLKB   1
					      0015E DBG$GB_RESIGNAL::
							    .BLKB   1
					      0015F DBG$GB_TAKE_CMD::
							    .BLKB   1
					      00160 DBG$GB_TBIT_OK::
							    .BLKB   1
					      00161	    .BLKB   3
					      00164 DBG$CP_INP_STR::
							    .LONG   0, 0						      ;
					      0016C DBG$CP_OUT_STR::
							    .BLKB   4
					      00170 DBG$GB_MOD_PTR::
							    .BLKB   4
					      00174 DBG$GB_STP_PTR::
							    .BLKB   4
					      00178 DBG$GL_CSP_PTR::
							    .BLKB   4
					      0017C DBG$GL_MC_PTR::
							    .BLKB   4
					      00180 DBG$GL_NT_HASH::
							    .BLKB   4
					      00184 DBG$GL_DIMENLST::
							    .BLKB   40
					      001AC DBG$GL_LIST::
							    .BLKB   12
					      001B8 DBG$GL_PARTBPTR::
							    .BLKB   20
					      001CC DBG$GL_SEMAN1::
							    .BLKB   160
					      0026C DBG$GL_SEMAN2::
							    .BLKB   160
					      0030C DBG$GL_ASCI_LEN::
							    .LONG   4							      ;
					      00310 DBG$GL_BPTHEAD::
							    .BLKB   4
					      00314 DBG$GL_BUF_SIZ::
							    .BLKB   4
					      00318 DBG$GL_GET_LEX::
							    .BLKB   4
					      0031C DBG$GL_HEAD_LST::
							    .BLKB   4
					      00320 DBG$GL_KEYW_TBL::
							    .BLKB   4
					      00324 DBG$GL_LAST_LOC::

; Bliss-32 7.352	Saturday 22-AUG-1978 04:34:49	DBB3:[DEBUG.SRC]DBGSTO.B32;6					Page 2-7
; Digital Equipment Corporation
;
							    .BLKB   4
					      00328 DBG$GL_LAST_VAL::
							    .BLKB   4
					      0032C DBG$GL_NEXT_LOC::
							    .BLKB   4
					      00330 DBG$GL_REDUC_RT::
							    .BLKB   4
					      00334 DBG$GL_RUNFRAME::
							    .BLKB   4
					      00338 DBG$GL_STEP_NUM::
							    .BLKB   4
					      0033C DBG$GL_SYMHEAD::
							    .BLKB   4

						    DBG$_RST_BEGIN==	2147418112
						    DBG$CHAR_TABLE==	P.AAA
						    DBG$TOKEN_TABLE==	P.AAB



;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  DBG$PLIT       	   152  NOWRT,  RD ,  EXE,  SHR,  LCL,  REL,  CON,  PIC,ALIGN(0)
;  DBG$GLOBAL     	   832    WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,  PIC,ALIGN(2)
;  $CODE$         	     0  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]STARLET.L32;1		      2688        24         0       131






;			COMPILER INTERNAL TIMING

;	Phase	    Faults	Cpu-time      Elapsed-time
;	LEXSYN	      320	00:19.3		00:21.8
;	FLOWAN	       10	00:00.0		00:00.0
;	DELAY	       10	00:00.0		00:00.0
;	TNBIND	       18	00:00.0		00:00.0
;	CODE	       21	00:00.0		00:00.0
;	FINAL	       34	00:01.1		00:01.3
;	Total	      413	00:20.4		00:23.1

; Size:		0 code + 984 data bytes

; Bliss-32 7.352	Saturday 22-AUG-1978 04:34:49									Page 2-8
; Digital Equipment Corporation
;
; Run Time:	00:21.0
; Elapsed Time:	00:23.7
; Memory Used:	215 pages
; Compilation Complete
