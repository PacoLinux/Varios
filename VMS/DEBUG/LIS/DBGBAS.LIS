
; Bliss-32 7.352	Saturday 22-AUG-1978 04:02:36	DBB3:[DEBUG.SRC]DBGBAS.B32;11					Page 1
; Digital Equipment Corporation
;
;	0001	MODULE DBGBAS ( ADDRESSING_MODE (EXTERNAL = LONG_RELATIVE),
;	0002			IDENT = 'V1.0') =
;	0003	BEGIN
;	0004	
;	0005	! Copyright (C) 1976
;	0006	! Digital Equipment Corporation, Maynard, Massachusetts 01754
;	0007	!
;	0008	! This software is furnished under a license for use only on a
;	0009	! single computer system and may be copied only with the inclusion
;	0010	! of the above copyright notice. This software, or any
;	0011	! other copies thereof, may not be provided or otherwise made
;	0012	! available to any other person except for use on such system
;	0013	! and to one who agrees to these license terms. Title to and
;	0014	! ownership of the software shall at all times remain in DEC.
;	0015	!
;	0016	! The information in this software is subject to change without
;	0017	! notice and should not be construed as a commitment by Digital
;	0018	! Equipment Corporation.
;	0019	!
;	0020	! DEC assumes no responsibility for the use or reliability of
;	0021	! its software on equipment which is not supplied by DEC.
;	0022	!
;	0023	! FACILITY:	DEBUG (DBG)
;	0024	!
;	0025	!++
;	0026	! FUNCTIONAL DESCRIPTION:
;	0027	!	INITIALIZATION ROUTINES FOR DEBUG.
;	0028	!
;	0029	! Version:	V1.0
;	0030	!
;	0031	! History:
;	0032	!	Author:
;	0033	!		Carol Peters, 12 Aug 1976: Version 01
;	0034	!
;	0035	!	Modified by:
;	0036	!		Dale Roedger, 09 August 1978
;	0037	!
;	0038	! Revision history:
;	0039	!	22	21-03-77	CP	change style of version number to
;	0040	!					conform to OS convention.
;	0041	!	23	21-03-77	KGP	CHANGED VERSION NUMBER PRINT OUT.
;	0042	!	24	22-03-77	KGP	NEW VERSION NUMBER OF 3X03.  THIS WILL
;	0043	!					BE THE LAST ONE BEFORE THE NEW DATA
;	0044	!					STRUCTURE FOR DATA MODES, ETC, IS ADDED.
;	0045	!	25	23-MAR-77	KGP	STARTED WORKING ON VX04 WHICH WILL 
;	0046	!					INCORPORATE THE NEW INPUT/OUTPUT 
;	0047	!					MODE DATA STRUCTURE.  WE ALSO GET
;	0048	!					RID OF COUNTED_STRING.
;	0049	!	26	30-03-77	CP	change version number to 3.X07.
;	0050	!	27	31-03-77	CP	change version number to 3.X08.
;	0051	!					delete INIT_ENABLE.
;	0052	!	28	04-APR-77	KGP	-VERSION NUMBER IS NOW 3X09,
;	0053	!					CHANGES TO VERSION ARE IN DBGMAC,
;	0054	!					WHICH I HAVE CLEANED UP, AND IN
;	0055	!					IN DBGEXC, WHICH NOW HAS A ROUTINE

; Bliss-32 7.352	Saturday 22-AUG-1978 04:02:36	DBB3:[DEBUG.SRC]DBGBAS.B32;11					Page 1-1
; Digital Equipment Corporation
;
;	0056	!					TO ANNOUNCE STEP COUNT GOING
;	0057	!					TO ZERO IN MACHINE FORMAT.
;	0058	!	29	06-apr-77	kgp	-Version 3x10.  Changes are that EXA
;	0059	!					 has no remnants of the SELECTS, etc,
;	0060	!					 to decide how to print out values.
;	0061	!					 SSV has new routines to do this output,
;	0062	!					 and MAC, EXA, EXC all use them.
;	0063	!					 MAC also prints out values properly,
;	0064	!					 now, instead of assuming DECimal.
;	0065	!	30	08-04-77	CP	new version number, 3.X11. adds
;	0066	!					global symbol support and quoted
;	0067	!					string extraction from command lines.
;	0068	!	31	09-04-77	CP	Version 3.X12. In SET_CONTEXT,
;	0069	!					set the bit EXAMINE to false.
;	0070	!					put free storage in top of per
;	0071	!					per process address space.
;	0072	!	32	13-04-77	CP	Change terminal I/O to use RMS.
;	0073	!					Add PSL accessing.
;	0074	!	33	14-04-77	CP	Add a bit setting to INIT_CONTEXT.
;	0075	!					Bit is SET_TRACE_ALL, to be set
;	0076	!					to false at end of each command.
;	0077	!					In INIT_DEBUG, initialize the
;	0078	!					the DBG$_TRACE_ALL context bit to
;	0079	!					false.
;	0080	!	34	19-04-77	CP	In INIT, set context bit STEPPING
;	0081	!					to false.
;	0082	!	35	20-04-77	CP	Change VAXDEB.BEG to be named
;	0083	!					DBGGEN.BEG. Also add DBGPCT.BEG
;	0084	!					for PSECT declarations.
;	0085	!	36	22-04-77	CP	Change MACHINE to INSTRUCTION.
;	0086	!					Add $CLOSE to DBGSYM. Fix bugs
;	0087	!					in DBGEXC when user program
;	0088	!					gets an exception condition.
;	0089	!	37	26-04-77	CP	Add handling to parser to recog-
;	0090	!					nize name_token instead of keyword
;	0091	!					in ambiguous sentences.
;	0092	!					Move transfer address into
;	0093	!					MARS module DBGSTART.
;	0094	!	38	02-05-77	CP	Remove the global variable
;	0095	!					DBG$GB_PARS_MOR. Make more
;	0096	!					action routines return values of
;	0097	!					true or false to tell the parser
;	0098	!					whether to proceed or punt.
;	0099	!	39	03-05-77	CP	Handle CTL-Z by exiting from
;	0100	!					DEBUG. Fix free storage range
;	0101	!					and size error messages (which
;	0102	!					were flipped). Add handling in
;	0103	!					EXA, ARI, and PAR for symbolic
;	0104	!					instruction input. Change message
;	0105	!					in SHOW MODES to NOINSTRUCTION
;	0106	!					and NOASCII from non-.
;	0107	!					Add symbolic input capability.
;	0108	!	40	06-05-77	CP	Modify MAC to precede hex numbers
;	0109	!					that start with alphabetics with
;	0110	!					a zero. Move literal declarations

; Bliss-32 7.352	Saturday 22-AUG-1978 04:02:36	DBB3:[DEBUG.SRC]DBGBAS.B32;11					Page 1-2
; Digital Equipment Corporation
;
;	0111	!					from ENC to MARTOK.
;	0112	!	41	17-may-77	KGP	-Version 3X21.  This version only 
;	0113	!					 changes the calling sequence to
;	0114	!					 DBG$WRITE_MEM.  This was to fix a
;	0115	!					 logical bug regarding instruction 
;	0116	!					 depositing.  Changed files: ARI,
;	0117	!					 BRK, EXA, and DBGBREAK.MAR
;	0118	!	42	19-05-77	CP	Changed initial exception name
;	0119	!					that gets DEBUG going to SS$_DEBUG.
;	0120	!					This change supports the DCL
;	0121	!					command DEBUG, so the user can
;	0122	!					CTL-Y out of DEBUG, then say
;	0123	!					DEBUG to DCL, and return to
;	0124	!					DEBUG at command processing level.
;	0125	!					Kevin changed EXA and MAC to do
;	0126	!					PROBEs before accessing locations
;	0127	!					for the EXAMINE command. Put
;	0128	!					routine READ_ACCESS to do PROBE
;	0129	!					in DBGSSV. Change ENC also. I changed
;	0130	!					SYM to reduce the default name
;	0131	!					string for STB files to DEBUG.STB.
;	0132	!					since the device name, UIC, and
;	0133	!					version number now default correctly.
;	0134	!					New error message for range error,
;	0135	!					unreadable page, and DEBUG
;	0136	!					exception. Fix bug in DBGSTART.MAR
;	0137	!					that evaluated return value from
;	0138	!					SETAST incorrectly
;	0139	!	43	26-05-77	CP	Fix bug in stepping.
;	0140	!	44	10-06-77	CP	Add %VARIANT to beginning of
;	0141	!					each module to allow compilation
;	0142	!					with long displacement. Made some
;	0143	!					fixes to the exit logic in SIO,
;	0144	!					EXC, STO, and DBGSTART.
;	0145	!	45	23-06-77	CP	Two bugs, in DBGPAR and DBGBRK,
;	0146	!					where DEBUG accesses the contents
;	0147	!					of an address that the user
;	0148	!					specified without first checking
;	0149	!					the protection of that address.
;	0150	!	46	23-06-77	CP	Corrected exception handling for
;	0151	!					exceptions occurring during
;	0152	!					processing of DEBUG commands.
;	0153	!	47	28-JUN-77	KGP	-CHANGED DBGMAC TO BE SHORTER, AND TO
;	0154	!					 PUT OUT MORE INFORMATION FOR
;	0155	!					 PC-RELATIVE MODE.  THIS IS 4X03.
;	0156	!				CP	Removed the code in module
;	0157	!					DBGBREAK, in routine BPT_HANDLR,
;	0158	!					that reinserted a single BPT instruction.
;	0159	!					This code was necessary when ins_opcodes
;	0160	!					and rem_opcodes was not called for
;	0161	!					tbit exceptions. Now that ins_opcodes
;	0162	!					is called before the exception is
;	0163	!					analyzed, and rem_opcodes is always
;	0164	!					called before returning SS$_CONTINUE,
;	0165	!					the code in BPT_HANDLR was redundant.

; Bliss-32 7.352	Saturday 22-AUG-1978 04:02:36	DBB3:[DEBUG.SRC]DBGBAS.B32;11					Page 1-3
; Digital Equipment Corporation
;
;	0166	!					It also caused the original opcode
;	0167	!					for that PC to be overwritten by BPT
;	0168	!					in the breakpoint table.
;	0169	!	48	05-07-77	CP	In SIO, after $PUT, just check
;	0170	!					for success value from RMS.
;	0171	!					Redo all REQUIRE files for RMS
;	0172	!					and system definitions to come
;	0173	!					from NEW:, STARLE and STARDE.REQ.
;	0174	!		05-07-77	KP	In ENC/MAC, can enter <number> as
;	0175	!					an operand. POLYF/D operand ECO
;	0176	!					is implemented. (4 operands to 3).
;	0177	!					Files altered are ENC, MAC, INS,
;	0178	!					and VAXOPS.BEG.
;	0179	!	49	08-07-77	CP	Version 4.X05, dated July 11th.
;	0180	!					In DBGSTART, when user program
;	0181	!					completes normally, force a
;	0182	!					handlers are called. Our termination
;	0183	!					handler, being the last to be
;	0184	!					called, can then transfer control
;	0185	!					back to RESTART. Also, before
;	0186	!					calling the start_debug routine,
;	0187	!					save AP, FP, and SP. Restore them
;	0188	!					after the forced exit and before
;	0189	!					the call to RESTART. In DBGEXC,
;	0190	!					replace all breakpoints before
;	0191	!					every SS$_RESIGNAL in
;	0192	!					EXC_HANDLR. Move setting of
;	0193	!					dbg$gb_debug out of user_proc
;	0194	!					and into MARS routine prim_handl
;	0195	!					so that errors in exception
;	0196	!					handling are properly reported
;	0197	!					as DEBUG, not user, errors.
;	0198	!					Fix bug in READ command. Since
;	0199	!					the BLISS compiler outputs entry
;	0200	!					records for global routine names
;	0201	!					instead of plain GSD records, the
;	0202	!					routines in DBGSYM were not prepared
;	0203	!					to store entry point definitions
;	0204	!					in the symbol table. Correct this,
;	0205	!					which involves changes to the
;	0206	!					routine PROCESS_GSD. A rather
;	0207	!					hackish fix, but all this is
;	0208	!					temporary anyway.
;	0209	!				KGP	In DBGEXA, fix a bug that omitted
;	0210	!					setting next_loc after a deposit
;	0211	!					command.
;	0212	!	50	22-07-77	CP	If RMS fails, return RMS error
;	0213	!					code instead of FALSE. If freez
;	0214	!					allocation fails, return
;	0215	!					dbg$_init_fail instead of FALSE.
;	0216	!					Separate out all RMS calls into
;	0217	!					separate IF/THEN clauses to
;	0218	!					guarantee that they occur in 
;	0219	!					the correct order.
;	0220	!	51	01-08-77	CP	Modify the symbol table

; Bliss-32 7.352	Saturday 22-AUG-1978 04:02:36	DBB3:[DEBUG.SRC]DBGBAS.B32;11					Page 1-4
; Digital Equipment Corporation
;
;	0221	!					initialization to use an image
;	0222	!					that has the DST and GST
;	0223	!					contained in it. In set_context,
;	0224	!					initialize the setting_scope bit
;	0225	!					to false, and the MODULE_CMD bit
;	0226	!					to FALSE. In initialization routine,
;	0227	!					change the input argument to the
;	0228	!					address of the counted string that
;	0229	!					is the result name counted string
;	0230	!					of the image file being debugged.
;	0231	!					Use this name to call dbg$find_dst
;	0232	!					so that the RST initialization can
;	0233	!					be performed without the READ
;	0234	!					command. Now take out find_dst
;	0235	!					call and change init_debug to
;	0236	!					be called with no arguments.
;	0237	!	52	29-aug-77	KGP	-Version for BL4 is 4.0 29-aug-77
;	0238	!	53	06-09-77	CP	Version 5.X01. Fixes std_sym_eval,
;	0239	!					lower case problems, drops
;	0240	!					unrecognized DST types without
;	0241	!					comment, cleans up path names in
;	0242	!					case of errors.
;	0243	!	54	07-09-77	CP	In initialization routine, load
;	0244	!					the RAB addresses, the names of
;	0245	!					the FABs, and the prompt string
;	0246	!					address dynamically so that the
;	0247	!					code is PIC. Change REQUIRE declarations
;	0248	!					to LIBRARY declarations for system
;	0249	!					require files.
;	0250	!	55	11-09-77	CP	Add the language initialization.
;	0251	!					Requires MARTOK.BEG. Also fix
;	0252	!					the I/O initialization to
;	0253	!					guarantee the order in which
;	0254	!					the RMS calls are made. Integrate
;	0255	!					Base Level 4 changes.
;	0256	!	56	16-sept-77	KGP	-The old RST is not two modules,
;	0257	!					 RST and BLD.  A bug was fixed in INT,
;	0258	!					 all RST globals were moved to STO,
;	0259	!					 and a special 'global pathname match'
;	0260	!					 facility was added to PATH_MATCH.
;	0261	!					 This is 5x04, the first real working
;	0262	!					 BL4 DEBUGger.
;	0263	!	57	19-09-77	CP	Include two scanners, one
;	0264	!					for FORTRAN and one for MARS. Add
;	0265	!					FORTRAN radix and logical operator
;	0266	!					handling. Fix CVTTP decoding in
;	0267	!					table.
;	0268	!	58	27-09-77	CP	In set_context, set traceback
;	0269	!					bit to false. Fix bug in parser
;	0270	!					so that it only does language-
;	0271	!					specific action routines according
;	0272	!					to the current language.
;	0273	!					Add FORTRAN label processing,
;	0274	!					%LABEL, %LINE, %ADDRESS, SHOW
;	0275	!					CALLS.

; Bliss-32 7.352	Saturday 22-AUG-1978 04:02:36	DBB3:[DEBUG.SRC]DBGBAS.B32;11					Page 1-5
; Digital Equipment Corporation
;
;	0276	!	59	12-10-77	CP	Add multiple continued lines
;	0277	!					feature and CALL subroutine
;	0278	!					command. Change error_reprts to
;	0279	!					SIGNALs. In call to freeinit,
;	0280	!					remove name of error handler.
;	0281	!					Fix longstanding bug in free
;	0282	!					storage package. Change call to
;	0283	!					set_lang to pass the token for 
;	0284	!					MARS as an argument.
;	0285	!	60	17-10-77	CP	Add FORTRAN array accessing
;	0286	!					and fix bug in FORTRAN STEP n
;	0287	!					production.
;	0288	!	61	24-oct-77	KGP	-Changed version number for 5x08, the
;	0289	!					 first DEBUG which attempts to integrate
;	0290	!					 val_to_sym.
;	0291	!	62	27-10-77	CP	Fixed input line processing bug
;	0292	!					and free storage releasing bug.
;	0293	!	63	01-11-77	CP	Get dbg$k_trace_all from DBGMSG.BEG.
;	0294	!	64	07-11-77	CP	Version 5.X09. BLD, SSV, INT, and
;	0295	!					RST. CSP validation and adding
;	0296	!					modules by taking their size into
;	0297	!					account.
;	0298	!	65	07-11-77	CP	Make all context of an incarnation
;	0299	!					of DEBUG based on a global pointer.
;	0300	!					Change names of all context bits.
;	0301	!					Base level becomes 5.X10.
;	0302	!	66	09-11-77	CP	Fix amount allocated for runframe
;	0303	!					context block. Change call command
;	0304	!					to be truly recursive.
;	0305	!	67	09-11-77	CP	Add SET and CANCEL module commands.
;	0306	!					Add four missing productions to
;	0307	!					FORTRAN grammar. Change name of
;	0308	!					module context bit.
;	0309	!	68	15-11-77	CP	Release 5.X11. Does not allocate
;	0310	!					storage for LVT. Does not
;	0311	!					initialize all modules.
;	0312	!	69	21-11-77	CP	Change expression handling to
;	0313	!					be FORTRAN-like for FORTRAN
;	0314	!					users. Make default mode decimal
;	0315	!					for FORTRAN. Don't allow expressions
;	0316	!					in EXAMINE commands. Add symbolic
;	0317	!					traceback.
;	0318	!	70	22-11-77	CP	Fix mode resetting bug, format
;	0319	!					traceback lines better; don't allow
;	0320	!					division by zero or instruction
;	0321	!					depositing into registers.
;	0322	!	71	29-11-77	CP	Fix bug in setting multiple
;	0323	!					breakpoints at same location.
;	0324	!					When FORTRAN user sets breakpoint
;	0325	!					on a FORTRAN routine name, set it
;	0326	!					really at routine_name + 2.
;	0327	!					Add FORTRAN line number recognition.
;	0328	!	72	02-12-77	CP	Add floating input and output to
;	0329	!					FORTRAN processing. Fix bug in
;	0330	!					BLD that computes length of a

; Bliss-32 7.352	Saturday 22-AUG-1978 04:02:36	DBB3:[DEBUG.SRC]DBGBAS.B32;11					Page 1-6
; Digital Equipment Corporation
;
;	0331	!					typed variable. Add routine
;	0332	!					out_typ_val to ssv. In exa, output
;	0333	!					location symbolically.
;	0334	!	73	12-12-77	CP	Base level that has floating
;	0335	!					arithmetic for FORTRAN.
;	0336	!	74	19-dec-77	KGP	-Base level 5x17 which has SET/CANcel
;	0337	!					 module, and most other RST goodies.
;	0338	!					 Also changes to ARI, DPC, SSV, and
;	0339	!					 there are new modules VEC and REB.
;	0340	!	75	20-DEC-77	KGP	-VERSION 5X17+, (carol has started 5X18)
;	0341	!					 fix to BLD and RST
;	0342	!	76	27-12-77	CP	Add SET, SHOW, and CANCEL WATCH
;	0343	!					commands.
;	0344	!	77	27-12-77	CP	Make DEBUG a shared global
;	0345	!					section. Change MARS to
;	0346	!					MACRO as keyword.
;	0347	!	78	28-12-77	CP	Suppress message produced by CLI
;	0348	!					when EOF is encountered.
;	0349	!	79	28-12-77	CP	Add EQV and XOR to FORTRAN. Redefine
;	0350	!					grammar tokens. Change mars_token
;	0351	!					to macro_token. Implement EV/ADDRESS
;	0352	!					for FORTRAN.
;	0353	!	80	29-12-77	CP	Fix relative PC display in
;	0354	!					traceback when symbol is global.
;	0355	!	81	30-12-77	CP	Add FORTRAN statement stepping.
;	0356	!	82	06-Jan-78	KGP	-Added parameterized error messages.
;	0357	!	83	06-JAN-78	DAR	Changed require file MARTOK.BEG to
;	0358	!					COMTER.BEG and related token names.
;	0359	!	84	10-JAN-78	DAR	Changed $OPEN to $CREATE for DBG$OUTPUT
;	0360	!	85	13-JAN-78	DAR	Release of base level 5X26.
;	0361	!	86	13-feb-78	KGP	-5X27 fixes "image exit"
;	0362	!					 and DBG>call X ... "routine
;	0363	!					 value" bugs.  (output inappropriate)
;	0364	!					 Lots of changes to MARS stuff too.
;	0365	!	87	21-feb-78	KGP	-5X28 fixes fortran array and character
;	0366	!					 string descriptor problems.
;	0367	!					 We also have a new SORT for SAT/LVT.
;	0368	!	88	01-MAR-78	DAR	Release to use our own copy of LIB$SIGNAL.
;	0369	!	89	02-MAR-78	DAR	Release of baselevel 5.X30. Includes:
;	0370	!					fixes to data truncation problems;
;	0371	!					fixes for CRLF problems; fixes for termination
;	0372	!					problems.
;	0373	!	90	14-MAR-78	DAR	Release of 5.X31 includes only a new
;	0374	!					message file.
;	0375	!	91	20-MAR-78	DAR	Release of Baselevel 5.X32 containing
;	0376	!					bug fixes.
;	0377	!	92	24-MAR-78	DAR	Release of Baselevel 5.X33 containing
;	0378	!					bug fixes, and a new DBGSTART.
;	0379	!	93	31-MAR-78	KGP	-Final version for BL5.  From 5x33, this
;	0380	!					 is only a new RST, EXA, MAC, and BAS
;	0381	!					 and DBGFORARI.MAR
;	0382	!	94	05-APR-78	DAR	DBG$SET_CONTEXT now initializes the new
;	0383	!					context bits. _all_break, _all_trace,
;	0384	!					_all_watch, _step, _scope, _resignal,
;	0385	!					_trce_call.

; Bliss-32 7.352	Saturday 22-AUG-1978 04:02:36	DBB3:[DEBUG.SRC]DBGBAS.B32;11					Page 1-7
; Digital Equipment Corporation
;
;	0386	!	95	27-APR-78	DAR	Modified require and library directives
;	0387	!					for native build.
;	0388	!	96	01-MAY-78	DAR	Initial call to dbg$set_lang passes macro_lang
;	0389	!	97	02-MAY-78	DAR	Remove call to dbg$reset_def this is now
;	0390	!					done in dbg$set_lang.
;	0391	!	98	12-may-78	KGP	INIT_DEBUG now calls DBG$SET_OPTRACE
;	0392	!					to set up the SET T/CALL and SET T/BRANCH
;	0393	!					data structure.
;	0394	!	99	17-MAY-78	DAR	Release of DEBUG version 0.5-2, and
;	0395	!					resetting of context bit dbg$k_trce_brch
;	0396	!	100	08-JUN-78	DAR	Release of version 0.5-3 of DEBUG.
;	0397	!	101	20-JUN-78	KGP	-Release of 5-4
;	0398	!					-main new functionality is the
;	0399	!					 handling of CHARACTER in FORTRAN
;	0400	!	102	23-JUN-78	DAR	Added Fix to DBGEXC for step over problem.
;	0401	!	103	29-JUN-78	DAR	Re-released version 0.5-4A with fix to
;	0402	!					yet another step over problem.
;	0403	!	104	21-JUL-78	DAR	Changed version number to 0.6 21 July 1978
;	0404	! 105	27-JUL-78	DAR	Version number becomes 0.6-1 27 July 1978.
;	0405	!				Fixed user BPT's and EX @R0:@R0+10, and
;	0406	!				FORTRAN formal array names.
;	0407	! V1.0	09-AUG-78	DAR	Changed version number for release 1 of VMS.
;	0408	!--

; Bliss-32 7.352	Saturday 22-AUG-1978 04:02:36	DBB3:[DEBUG.SRC]DBGBAS.B32;11					Page 2
; Digital Equipment Corporation
;
;	0409	! TABLE OF CONTENTS:
;	0410	!
;	0411	FORWARD ROUTINE
;	0412		dbg$set_context: NOVALUE,	! ROUTINE TO INITIALIZE CONTEXT BITS
;	0413		dbg$init_debug : NOVALUE;	! ROUTINE TO INITIALIZE DEBUG UNDER STARLET
;	0414	
;	0415	!
;	0416	! Require files:
;	0417	!
;	0418	%IF %VARIANT		! True for TEN.
;     L 0419	%THEN
;     U 0420	!LIBRARY 'NEW:RMSMAC';
;     U 0421	!LIBRARY 'NEW:STARDE';
;     U 0422	LIBRARY 'NEW:STARLE';
;     U 0423	
;     U 0424	REQUIRE 'DBGPCT.REQ';
;     U 0425	REQUIRE 'DBGGEN.REQ';
;     U 0426	REQUIRE 'DBGMSG.REQ';
;     U 0427	REQUIRE 'SYSLIT.REQ';
;     U 0428	REQUIRE 'VXSMAC.REQ';
;     U 0429	REQUIRE 'BSTRUC.REQ';
;     U 0430	REQUIRE 'DLLNAM.REQ';
;     U 0431	REQUIRE 'COMTER.REQ';
;     U 0432	REQUIRE 'SYSSER.REQ';
;     U 0433	%ELSE
;	0434	LIBRARY 'SYS$LIBRARY:STARLET.L32';
;	0435	
;	0436	REQUIRE 'SRC$:DBGPCT.REQ';
;	0448	REQUIRE 'SRC$:DBGGEN.REQ';
;	0698	REQUIRE 'LIB$:DBGMSG.REQ';
;	0977	REQUIRE 'SRC$:SYSLIT.REQ';
;	1000	REQUIRE 'SRC$:VXSMAC.REQ';
;	1040	REQUIRE 'SRC$:BSTRUC.REQ';
;	1091	REQUIRE 'SRC$:DLLNAM.REQ';
;	1142	REQUIRE 'SRC$:COMTER.REQ';
;	1234	REQUIRE 'SRC$:SYSSER.REQ';
;      R1237	SWITCHES LIST (SOURCE);
;      R1238	
;      R1239	EXTERNAL ROUTINE
;      R1240		dbg$fao_out;				! formats a line and outputs to the terminal
;      R1241	
;      R1242	SWITCHES LIST (NOSOURCE);
;	1287	%FI
;	1288	
;	1289	LITERAL
;	1290		dbg_multi_lang	= TRUE;		! multiple languages permitted
;	1291	
;	1292	EXTERNAL ROUTINE
;	1293		dbg$set_optrace : NOVALUE,		! initialize for opcode tracing.
;	1294		dbg$freeinit,				! ROUTINE TO INITIALIZE FREE STORAGE
;	1295		dbg$freez,				! ROUTINE TO ALLOCATE A BLOCK OF FREE STORAGE
;	1296		dbg$init_break;				! ROUTINE TO INITIALIZE BREAKPOINT STORAGE
;	1297	
;	1298	%IF dbg_multi_lang
;     L 1299	%THEN

; Bliss-32 7.352	Saturday 22-AUG-1978 04:02:36	DBB3:[DEBUG.SRC]DBGBAS.B32;11					Page 2-1
; Digital Equipment Corporation
;
;	1300	EXTERNAL ROUTINE
;	1301		dbg$set_lang;				! sets up default language
;	1302	%FI
;	1303	
;	1304	EXTERNAL
;	1305		dbg$gb_exit_dbg: BYTE,			! EXIT SWITCH
;	1306		dbg$gb_resignal: BYTE,			! RESIGNALING SWITCH
;	1307		dbg$gl_context: BITVECTOR, 		! CONTEXT WORD
;	1308		dbg$gl_inpfab: BLOCK [, BYTE],		! FAB FOR 'INPUT'
;	1309		dbg$gl_inprab: BLOCK [, BYTE],		! RAB FOR 'INPUT'
;	1310		dbg$gl_outpfab: BLOCK [, BYTE],		! FAB FOR 'OUTPUT'
;	1311		dbg$gl_outprab: BLOCK [, BYTE],		! RAB FOR 'OUTPUT'
;	1312		dbg$gl_runframe: REF BLOCK [, BYTE],	! pointer to current run frame
;	1313		dbg$gl_symhead;				! LIST HEAD FOR SYMBOL TABLE
;	1314	
;	1315	LITERAL
;	1316		dbg_bas		= 0;			! for debugging

; Bliss-32 7.352	Saturday 22-AUG-1978 04:02:36	DBB3:[DEBUG.SRC]DBGBAS.B32;11					Page 3
; Digital Equipment Corporation
;
;	1317	GLOBAL ROUTINE dbg$set_context : NOVALUE =
;	1318	
;	1319	!++
;	1320	! FUNCTIONAL DESCRIPTION:
;	1321	!	initializes context bits that are necessary for command
;	1322	!	processing. These bits are valid only during the processing
;	1323	!	of a single command. They are all reset after each command.
;	1324	!
;	1325	! CALLING SEQUENCE:
;	1326	!	dbg$set_context ()
;	1327	!
;	1328	! INPUTS:
;	1329	!	none
;	1330	!
;	1331	! IMPLICIT INPUTS:
;	1332	!	the names of the context bits that are to be turned off
;	1333	!
;	1334	! OUTPUTS:
;	1335	!	none
;	1336	!
;	1337	! IMPLICIT OUTPUTS:
;	1338	!	none
;	1339	!
;	1340	! ROUTINE VALUE:
;	1341	!	novalue
;	1342	!
;	1343	! SIDE EFFECTS:
;	1344	!	the context bits are set to false
;	1345	!--
;	1346	
;	1347		BEGIN
;	1348	 	dbg$gl_context [dbg$k_all] = FALSE;
;	1349		dbg$gl_context [dbg$k_all_break] = FALSE;
;	1350		dbg$gl_context [dbg$k_all_trace] = FALSE;
;	1351		dbg$gl_context [dbg$k_all_watch] = FALSE;
;	1352	 	dbg$gl_context [dbg$k_break] = FALSE;
;	1353	 	dbg$gl_context [dbg$k_cancel] = FALSE;
;	1354	 	dbg$gl_context [dbg$k_examine] = FALSE;
;	1355	 	dbg$gl_context [dbg$k_language] = FALSE;
;	1356	 	dbg$gl_context [dbg$k_mode] = FALSE;
;	1357	 	dbg$gl_context [dbg$k_module] = FALSE;
;	1358	 	dbg$gl_context [dbg$k_override] = FALSE;
;	1359	 	dbg$gl_context [dbg$k_resignal] = FALSE;
;	1360	 	dbg$gl_context [dbg$k_scope] = FALSE;
;	1361	 	dbg$gl_context [dbg$k_set_break] = FALSE;
;	1362		dbg$gl_context [dbg$k_step] = FALSE;
;	1363	 	dbg$gl_context [dbg$k_trce_call] = FALSE;
;	1364	 	dbg$gl_context [dbg$k_trace] = FALSE;
;	1365	 	dbg$gl_context [dbg$k_traceback] = FALSE;
;	1366		dbg$gl_context [dbg$k_watch] = FALSE;
;	1367		dbg$gl_context [dbg$k_trce_brch] = FALSE;
;	1368		END;


							    .TITLE  DBGBAS

; Bliss-32 7.352	Saturday 22-AUG-1978 04:02:36	DBB3:[DEBUG.SRC]DBGBAS.B32;11					Page 3-1
; Digital Equipment Corporation
;
							    .IDENT  \V1.0\

							    .GLOBL  DBG$FAO_OUT, DBG$SET_OPTRACE, DBG$FREEINIT, DBG$FREEZ
							    .GLOBL  DBG$INIT_BREAK, DBG$SET_LANG, DBG$GB_EXIT_DBG
							    .GLOBL  DBG$GB_RESIGNAL, DBG$GL_CONTEXT, DBG$GL_INPFAB
							    .GLOBL  DBG$GL_INPRAB, DBG$GL_OUTPFAB, DBG$GL_OUTPRAB
							    .GLOBL  DBG$GL_RUNFRAME, DBG$GL_SYMHEAD
							    .WEAK   ACCESS_CHECK

							    .PSECT  DBG$CODE,NOWRT,  SHR,  PIC,0

					 0000 00000 	    .ENTRY  DBG$SET_CONTEXT, Save nothing			      ; 1317
	   14	         00	       00  F0 00002 	    INSV    #0, #0, #20, DBG$GL_CONTEXT				      ; 1367
			    00000000G  EF     00006									      ;
					   04 0000B 	    RET     							      ; 1317

; Routine Size:  12 bytes



; Bliss-32 7.352	Saturday 22-AUG-1978 04:02:36	DBB3:[DEBUG.SRC]DBGBAS.B32;11					Page 4
; Digital Equipment Corporation
;
;	1369	GLOBAL ROUTINE dbg$init_debug : NOVALUE =
;	1370	
;	1371	!++
;	1372	! FUNCTIONAL DESCRIPTION:
;	1373	!	SETS UP LOCAL CONTEXT FOR THE DEBUG FACILITY UNDER STARLET.
;	1374	!	IF THE LOGICAL DEVICES 'INPUT' AND 'OUTPUT' CANNOT BE SET UP,
;	1375	!	THE ROUTINE RETURNS FALSE; OTHERWISE, IT RETURNS TRUE.
;	1376	!
;	1377	! CALLING SEQUENCE:
;	1378	!	dbg$init_debug ()
;	1379	!
;	1380	! INPUTS:
;	1381	!	none
;	1382	!
;	1383	! IMPLICIT INPUTS:
;	1384	!	The FABs and RABs for input and output.
;	1385	!	addresses of context blocks that are to be set by the initialization.
;	1386	!
;	1387	! OUTPUTS:
;	1388	!	none
;	1389	!
;	1390	! IMPLICIT OUTPUTS:
;	1391	!	none
;	1392	!
;	1393	! ROUTINE VALUE:
;	1394	!	novalue
;	1395	!
;	1396	! SIDE EFFECTS:
;	1397	!	CONTEXT, INPUT AND OUTPUT MODES, STEP SIZE, ETC ARE SET UP
;	1398	!--
;	1399	
;	1400		BEGIN
;	1401	
;	1402		BIND
;	1403			input_device	= UPLIT BYTE (%ASCII 'DBG$INPUT'),
;	1404			inp_dev_size	= %CHARCOUNT (%ASCII 'DBG$INPUT'),
;	1405			output_device	= UPLIT BYTE (%ASCII 'DBG$OUTPUT'),
;	1406			out_dev_size	= %CHARCOUNT (%ASCII 'DBG$OUTPUT');
;	1407	
;	1408		LOCAL
;	1409			status;
;	1410	
;	1411		!++
;	1412		! If the OPENs and CONNECTs cannot be done successfully for
;	1413		! logical devices 'DBG$INPUT' and 'DBG$OUTPUT', then signal the
;	1414		! error. This causes a return to the command line interpreter in
;	1415		! the operating system.
;	1416		!--
;	1417		dbg$gl_inpfab [fab$l_fna] = input_device;
;	1418		dbg$gl_inpfab [fab$b_fns] = inp_dev_size;
;	1419		status = $OPEN (FAB = dbg$gl_inpfab);
;	1420		IF NOT .status 
;	1421		THEN
;	1422			BEGIN
;	1423			status = .status OR fatal_bit;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:02:36	DBB3:[DEBUG.SRC]DBGBAS.B32;11					Page 4-1
; Digital Equipment Corporation
;
;	1424			$exit (code = .status);
;	1425			RETURN
;	1426			END;
;	1427	
;	1428		dbg$gl_outpfab [fab$l_fna] = output_device;
;	1429		dbg$gl_outpfab [fab$b_fns] = out_dev_size;
;	1430		status = $CREATE (FAB = dbg$gl_outpfab);
;	1431		IF NOT .status
;	1432		THEN
;	1433			BEGIN
;	1434			status = .status OR fatal_bit;
;	1435			$exit (code = .status);
;	1436			RETURN
;	1437			END;
;	1438	
;	1439		dbg$gl_inprab [rab$l_fab] = dbg$gl_inpfab;
;	1440		status = $CONNECT (RAB = dbg$gl_inprab);
;	1441		IF NOT .status
;	1442		THEN
;	1443			BEGIN
;	1444			status = .status OR fatal_bit;
;	1445			$exit (code = .status);
;	1446			RETURN
;	1447			END;
;	1448	
;	1449		dbg$gl_outprab [rab$l_fab] = dbg$gl_outpfab;
;	1450		status = $CONNECT (RAB = dbg$gl_outprab);
;	1451		IF NOT .status
;	1452		THEN
;	1453			BEGIN
;	1454			status = .status OR fatal_bit;
;	1455			$exit (code = .status);
;	1456			RETURN
;	1457			END;
;	1458	
;	1459		$fao_tt_out ('!/	VAX/VMS DEBUG V1.0       August 1978!/');
;	1460	
;	1461		!++
;	1462		! Set the flag that says resignal all exceptions from the user
;	1463		! program except for user-set breakpoints and tracepoints.
;	1464		!--
;	1465		dbg$gb_resignal = TRUE;
;	1466	
;	1467		!++
;	1468		! Initialize an area of free storage.
;	1469		!--
;	1470		dbg$freeinit ();
;	1471	
;	1472		!++
;	1473		! Allocate a block of storage for the current DEBUG incarnation.
;	1474		! This holds all context that is particular to a single user
;	1475		! run, such as, the most common, the user program itself; or
;	1476		! less commonly, the routine called by a CALL command.
;	1477		!--
;	1478		dbg$gl_runframe = dbg$freez ((dbg$k_runfr_len + 3) / %UPVAL);

; Bliss-32 7.352	Saturday 22-AUG-1978 04:02:36	DBB3:[DEBUG.SRC]DBGBAS.B32;11					Page 4-2
; Digital Equipment Corporation
;
;	1479		dbg$gl_runframe [dbg$l_next_link] = 0;
;	1480		dbg$gl_runframe [dbg$l_frame_ptr] = 0;
;	1481		dbg$gl_runframe [dbg$w_run_stat] = 0;
;	1482	
;	1483		!++
;	1484		! Set the default language.
;	1485		!--
;	1486		dbg$set_lang (0,macro_lang);		! Default language is MACRO
;	1487	
;	1488		!++
;	1489		! Set all the single command context bits to false. These bits
;	1490		! refer to context that is valid only during a single command,
;	1491		! not across multiple commands.
;	1492		!--
;	1493		dbg$set_context ();
;	1494	
;	1495		!++
;	1496		! Initialize the breakpoint chain by allocating storage for the
;	1497		! header link and setting its pointers to point to the header link
;	1498		! itself.  Also do the once-only initialization of
;	1499		! the data structure for opcode tracing.
;	1500		!--
;	1501		dbg$init_break ();
;	1502		dbg$set_optrace(0);
;	1503	
;	1504		!++
;	1505		! Initialize the symbol chain by allocating storage for the header
;	1506		! link and setting the pointers to point to the link. This code
;	1507		! might become a routine or a macro. As a routine, it would be
;	1508		! practically identical to dbg$init_break.
;	1509		!--
;	1510		dbg$gl_symhead = dbg$freez (overhead_sym);
;	1511		dll_rlink (.dbg$gl_symhead) = .dbg$gl_symhead;
;	1512		dll_llink (.dbg$gl_symhead) = .dbg$gl_symhead;
;	1513		sym_value (.dbg$gl_symhead) = 0;
;	1514		sym_cstring (.dbg$gl_symhead) = 0;
;	1515	
;	1516	%IF dbg_bas
;     L 1517	%THEN
;     U 1518		$fao_tt_out ('!/initialization complete');
;     U 1519	%FI
;	1520	
;	1521		!++
;	1522		! Initialization is complete and successful.
;	1523		!--
;	1524		END;



							    .PSECT  DBG$PLIT,NOWRT,  SHR,  PIC,0

					      00000 P.AAA:  .ASCII  \DBG$INPUT\						      ;
					      00009	    .BLKB   3
					      0000C P.AAB:  .ASCII  \DBG$OUTPUT\					      ;
					      00016	    .BLKB   2

; Bliss-32 7.352	Saturday 22-AUG-1978 04:02:36	DBB3:[DEBUG.SRC]DBGBAS.B32;11					Page 4-3
; Digital Equipment Corporation
;
					      00018 P.AAC:  .BYTE   41							      ;
					      00019 	    .ASCII  \!/\<9>\VAX/VMS DEBUG V1.0       August 1978!/\	      ;
					      00042	    .BLKB   2

						    INPUT_DEVICE=	P.AAA
						    INP_DEV_SIZE=	9
						    OUTPUT_DEVICE=	P.AAB
						    OUT_DEV_SIZE=	10
							    .GLOBL  SYS$OPEN, SYS$EXIT, SYS$CREATE, SYS$CONNECT

							    .PSECT  DBG$CODE,NOWRT,  SHR,  PIC,0

					 0FE4 0000C 	    .ENTRY  DBG$INIT_DEBUG, Save R2,R5,R6,R7,R8,R9,R10,R11	      ; 1369
		         55 00000000G  EF  9E 0000E 	    MOVAB   DBG$GL_SYMHEAD, R5					      ;
		         56 00000000G  EF  9E 00015 	    MOVAB   DBG$GL_RUNFRAME, R6					      ;
		         57 00000000G  EF  9E 0001C 	    MOVAB   DBG$FREEZ, R7					      ;
		         58 00000000G  9F  9E 00023 	    MOVAB   @#SYS$CONNECT, R8					      ;
		         59 00000000'  EF  9E 0002A 	    MOVAB   INPUT_DEVICE, R9					      ;
		         5A 00000000G  EF  9E 00031 	    MOVAB   DBG$GL_OUTPFAB, R10					      ;
		         5B 00000000G  EF  9E 00038 	    MOVAB   DBG$GL_INPFAB, R11					      ;
		    2C   AB	       69  9E 0003F 	    MOVAB   INPUT_DEVICE, DBG$GL_INPFAB+44			      ;
		    34   AB	       09  90 00043 	    MOVB    #9, DBG$GL_INPFAB+52				      ; 1418
				       5B  DD 00047 	    PUSHL   R11							      ; 1419
	      00000000G  9F	       01  FB 00049 	    CALLS   #1, @#SYS$OPEN					      ;
		         52	       50  D0 00050 	    MOVL    R0, STATUS						      ;
		         44	       52  E9 00053 	    BLBC    STATUS, 1$						      ; 1420
		    2C   AA	  0C   A9  9E 00056 	    MOVAB   OUTPUT_DEVICE, DBG$GL_OUTPFAB+44			      ; 1369
		    34   AA	       0A  90 0005B 	    MOVB    #10, DBG$GL_OUTPFAB+52				      ; 1429
				       5A  DD 0005F 	    PUSHL   R10							      ; 1430
	      00000000G  9F	       01  FB 00061 	    CALLS   #1, @#SYS$CREATE					      ;
		         52	       50  D0 00068 	    MOVL    R0, STATUS						      ;
		         2C	       52  E9 0006B 	    BLBC    STATUS, 1$						      ; 1431
	      00000000G  EF	       6B  9E 0006E 	    MOVAB   DBG$GL_INPFAB, DBG$GL_INPRAB+60			      ; 1439
			    00000000G  EF  9F 00075 	    PUSHAB  DBG$GL_INPRAB					      ; 1440
		         68	       01  FB 0007B 	    CALLS   #1, SYS$CONNECT					      ;
		         52	       50  D0 0007E 	    MOVL    R0, STATUS						      ;
		         16	       52  E9 00081 	    BLBC    STATUS, 1$						      ; 1441
	      00000000G  EF	       6A  9E 00084 	    MOVAB   DBG$GL_OUTPFAB, DBG$GL_OUTPRAB+60			      ; 1449
			    00000000G  EF  9F 0008B 	    PUSHAB  DBG$GL_OUTPRAB					      ; 1450
		         68	       01  FB 00091 	    CALLS   #1, SYS$CONNECT					      ;
		         52	       50  D0 00094 	    MOVL    R0, STATUS						      ;
		         0D	       52  E8 00097 	    BLBS    STATUS, 2$						      ; 1451
		         52	       04  C8 0009A 1$:     BISL2   #4, STATUS						      ; 1454
				       52  DD 0009D 	    PUSHL   STATUS						      ; 1455
	      00000000G  9F	       01  FB 0009F 	    CALLS   #1, @#SYS$EXIT					      ;
					   04 000A6 	    RET     							      ; 1456
				       7E  D4 000A7 2$:     CLRL    -(SP)						      ; 1459
				  18   A9  9F 000A9 	    PUSHAB  P.AAC						      ;
	      00000000G  EF	       02  FB 000AC 	    CALLS   #2, DBG$FAO_OUT					      ;
	      00000000G  EF	       01  90 000B3 	    MOVB    #1, DBG$GB_RESIGNAL					      ; 1465
	      00000000G  EF	       00  FB 000BA 	    CALLS   #0, DBG$FREEINIT					      ; 1470
				       19  DD 000C1 	    PUSHL   #25							      ; 1478
		         67	       01  FB 000C3 	    CALLS   #1, DBG$FREEZ					      ;
		         66	       50  D0 000C6 	    MOVL    R0, DBG$GL_RUNFRAME					      ;
		         50	       66  D0 000C9 	    MOVL    DBG$GL_RUNFRAME, R0					      ; 1479

; Bliss-32 7.352	Saturday 22-AUG-1978 04:02:36	DBB3:[DEBUG.SRC]DBGBAS.B32;11					Page 4-4
; Digital Equipment Corporation
;
				       60  D4 000CC 	    CLRL    (R0)						      ;
				  4E   A0  D4 000CE 	    CLRL    78(R0)						      ; 1480
				  48   A0  B4 000D1 	    CLRW    72(R0)						      ; 1481
				       7E  7C 000D4 	    CLRQ    -(SP)						      ; 1486
	      00000000G  EF	       02  FB 000D6 	    CALLS   #2, DBG$SET_LANG					      ;
		  FF1E   CF	       00  FB 000DD 	    CALLS   #0, DBG$SET_CONTEXT					      ; 1493
	      00000000G  EF	       00  FB 000E2 	    CALLS   #0, DBG$INIT_BREAK					      ; 1501
				       7E  D4 000E9 	    CLRL    -(SP)						      ; 1502
	      00000000G  EF	       01  FB 000EB 	    CALLS   #1, DBG$SET_OPTRACE					      ;
				       04  DD 000F2 	    PUSHL   #4							      ; 1510
		         67	       01  FB 000F4 	    CALLS   #1, DBG$FREEZ					      ;
		         65	       50  D0 000F7 	    MOVL    R0, DBG$GL_SYMHEAD					      ;
		         50	       65  D0 000FA 	    MOVL    DBG$GL_SYMHEAD, R0					      ; 1511
		         60	       50  D0 000FD 	    MOVL    R0, (R0)						      ;
		    04   A0	       50  D0 00100 	    MOVL    R0, 4(R0)						      ; 1512
				  08   A0  7C 00104 	    CLRQ    8(R0)						      ; 1513
					   04 00107 	    RET     							      ; 1369

; Routine Size:  252 bytes



; Bliss-32 7.352	Saturday 22-AUG-1978 04:02:36	DBB3:[DEBUG.SRC]DBGBAS.B32;11					Page 5
; Digital Equipment Corporation
;
;	1525	END
;	1526	ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  DBG$CODE       	   264  NOWRT,  RD ,  EXE,  SHR,  LCL,  REL,  CON,  PIC,ALIGN(0)
;  DBG$PLIT       	    68  NOWRT,  RD ,  EXE,  SHR,  LCL,  REL,  CON,  PIC,ALIGN(0)
;  $CODE$         	     0  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]STARLET.L32;1		      2688        11         0       115






;			COMPILER INTERNAL TIMING

;	Phase	    Faults	Cpu-time      Elapsed-time
;	LEXSYN	      339	00:19.6		00:39.0
;	FLOWAN	       23	00:00.6		00:01.0
;	DELAY	       24	00:00.5		00:00.8
;	TNBIND	       29	00:00.6		00:00.9
;	CODE	       33	00:01.1		00:02.0
;	FINAL	       80	00:01.8		00:03.7
;	Total	      528	00:24.2		00:47.3

; Size:		264 code + 68 data bytes
; Run Time:	00:24.7
; Elapsed Time:	00:48.5
; Memory Used:	233 pages
; Compilation Complete
