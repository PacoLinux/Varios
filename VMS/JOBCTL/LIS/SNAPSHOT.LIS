SNAPSHOT        - SNAP SHOT ROUTINE FOR PROCESS ADDRESS SPACE    22-AUG-1978 00:54:20   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	SNAPSHOT - SNAP SHOT ROUTINE FOR PROCESS ADDRESS SPACE
                                     0000     2 	.IDENT	/01/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ONLY ON A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE COPIED ONLY WITH THE INCLU-
                                     0000    10 ; SION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE, OR ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE PROVIDED OR OTHERWISE MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT FOR USE ON SUCH SYSTEM
                                     0000    13 ; AND TO ONE WHO AGREES TO THESE LICENSE TERMS. TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; W. H. BROWN 7-DEC-1977
                                     0000    24 ;
                                     0000    25 ; SNAP SHOT OF PROCESS ADDRESS SPACE
                                     0000    26 ;
                                     0000    27 ; MACRO LIBRARY CALLS
                                     0000    28 ;
                                     0000    29  
                                     0000    30 	$FABDEF				; DEFINE FAB OFFSETS
                                     0000    31 	$RABDEF				; DEFINE RAB OFFSETS
                                     0000    32  
                                     0000    33 ;
                                     0000    34 ; LOCAL SYMBOLS
                                     0000    35 ;
                                     0000    36 ;
                                     0000    37 ; OUTPUT FORMAT BUFFER SIZE
                                     0000    38 ;
                                     0000    39  
                           00000050  0000    40 BUFSIZ=80				; 
                                     0000    41  
                                     0000    42 ;
                                     0000    43 ; LOCAL FLAG BITS
                                     0000    44 ;
                                     0000    45 	_VIELD	SNP,0,<-		;
                                     0000    46 		<ZEROS,,M>,-		; IN A ZERO BUFFER
                                     0000    47 		<ACCESV,,M>,-		; IN A NON-READABLE AREA
                                     0000    48 		>
                                     0000    49 ;
                                     0000    50 ; LOCAL DATA
                                     0000    51 ;
                                     0000    52  
                                 00000000    53 	.PSECT	_LIB$CODE  RD,NOWRT,EXE,BYTE
                                     0000    54  
42 41 39 38 37 36 35 34 33 32 31 30  0000    55 HEXTAB:	.ASCII	\0123456789ABCDEF\	; BINARY TO HEX CONVERSION
                        46 45 44 43  000C       
6D 20 66 6F 20 70 6D 75 44 20 2A 20  0010    56 HEADER:	.ASCIZ	\ * Dump of memeory locations \
SNAPSHOT        - SNAP SHOT ROUTINE FOR PROCESS ADDRESS SPACE    22-AUG-1978 00:54:20   VAX-11 MACRO X0.3-11               Page   2
01                                                                                                                               (1)

74 61 63 6F 6C 20 79 72 6F 65 6D 65  001C       
                  00 20 73 6E 6F 69  0028       
6E 65 76 72 65 74 6E 49 20 2A 2A 20  002E    57 ZEROS:	.ASCIZ	\ ** Intervening locations contain all zeros.\
6E 6F 69 74 61 63 6F 6C 20 67 6E 69  003A       
6C 61 20 6E 69 61 74 6E 6F 63 20 73  0046       
         00 2E 73 6F 72 65 7A 20 6C  0052       
6E 65 76 72 65 74 6E 49 20 2A 2A 20  005B    58 ACCESV:	.ASCIZ	\ ** Intervening locations not accessable.\
6E 6F 69 74 61 63 6F 6C 20 67 6E 69  0067       
73 73 65 63 63 61 20 74 6F 6E 20 73  0073       
                  00 2E 65 6C 62 61  007F       
                                     0085    59  
54 41 44 2E 54 4F 48 53 50 41 4E 53  0085    60 FILNAM:	.ASCII	\SNAPSHOT.DAT\
                           0000000C  0091    61 FILSIZ = . - FILNAM
SNAPSHOT        - SNAP SHOT ROUTINE FOR PROCESS ADDRESS SPACE    22-AUG-1978 00:54:20   VAX-11 MACRO X0.3-11               Page   3
01                                                                                                                               (1)

                                     0091    63 ;	.SBTTL	SNAP SHOT OUTOUT ROUTINE
                                     0091    64 ;+
                                     0091    65 ; LIB$SNAPSHOT - LIBRARY SNAP SHOT ROUTINE
                                     0091    66 ;
                                     0091    67 ; THIS ROUTINE IS CALLED TO FORMAT AND DUMP A SERIES OF ADDRESS LIMITS
                                     0091    68 ; FOR THE CALLING PROCESS.
                                     0091    69 ;
                                     0091    70 ; INPUTS:
                                     0091    71 ;
                                     0091    72 ;	(AP) = COUNT OF ADDRESS LIMITS TO FOLLOW(MODULO 2)
                                     0091    73 ;		FOLLOWED BY ADDRESS LIMIT PAIRS
                                     0091    74 ;
                                     0091    75 ; OUTPUTS:
                                     0091    76 ;
                                     0091    77 ;	A FILE IS OPENNED AND THE ADDRESSES WITH IN THE LIMITS SPECIFIED
                                     0091    78 ;	ARE WRITTEN IN HEX AND ASCII 4 LOCATIONS PER LINE.
                                     0091    79 ;	IF ALL 4 LOCATIONS ARE ZERO THE LINE IS OMMITTED.
                                     0091    80 ;-
                                     0091    81  
                               0FFC' 0091    82 	.ENTRY	LIB$SNAPSHOT,^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>
                                     0093    83  
            5E         B0 AE     9E  0093    84 	MOVAB	-FAB$C_BLN(SP),SP	; ALLOCATE SPACE FOR FAB
            59            5E     D0  0097    85 	MOVL	SP,R9			; SAVE ADDRESS OF FAB
            5E         BC AE     9E  009A    86 	MOVAB	-RAB$C_BLN(SP),SP	; ALLOCATE SPACE FOR RAB
            58            5E     D0  009E    87 	MOVL	SP,R8			; SAVE ADDRESS OF RAB
            5E         B0 AE     9E  00A1    88 	MOVAB	-BUFSIZ(SP),SP		; ALLOCATE SPACE FOR OUTPUT BUFFER
            57            5E     D0  00A5    89 	MOVL	SP,R7			; SAVE ADDRESS OF OUTPUT BUFFER
            68            00     2C  00A8    90 	MOVC5	#0,(R8),#0,#RAB$C_BLN+FAB$C_BLN,(R8) ; CLEAR RAB AND FAB
       0094 8F            00         00AB       
                          68         00AF       
                                     00B0    91 	ASSUME	FAB$B_BLN EQ FAB$B_BID+1
            69       5003 8F     B0  00B0    92 	MOVW	#<FAB$C_BLN@8+FAB$C_BID>,FAB$B_BID(R9) ;SET FAB ID FIELDS
         2C A9         CD AF     9E  00B5    93 	MOVAB	FILNAM,FAB$L_FNA(R9)	; SET ADDRESS OF FILE NAME
         34 A9            0C     90  00BA    94 	MOVB	#FILSIZ,FAB$B_FNS(R9)	; AND ITS SIZE
         36 A9         50 8F     9B  00BE    95 	MOVZBW	#BUFSIZ,FAB$W_MRS(R9)	; SET MAXIMUM RECORD SIZE
         1E A9            02     90  00C3    96 	MOVB	#FAB$M_CR,FAB$B_RAT(R9) ; SET RECORD ATTRIBUTES
         1F A9            02     90  00C7    97 	MOVB	#FAB$C_VAR,FAB$B_RFM(R9); SET VARIABLE RECORD FORMAT
         16 A9            01     90  00CB    98 	MOVB	#FAB$M_PUT,FAB$B_FAC(R9) ; SET FILE ACCESS MODE
         04 A9   00000040 8F     D0  00CF    99 	MOVL	#FAB$M_SQO,FAB$L_FOP(R9) ; SET FILE OPEN OPTIONS
                                     00D7   100 	$CREATE	FAB=(R9)		; CREATE OUTPUT FILE
            33            50     E9  00E0   101 	BLBC	R0,80$			; IF LBC OPEN FAILURE
                                     00E3   102 	ASSUME	RAB$B_BLN EQ RAB$B_BID+1
            68       4401 8F     B0  00E3   103 	MOVW	#<RAB$C_BLN@8+RAB$C_BID>,RAB$B_BID(R8) ;SET RAB ID FIELDS
         3C A8            69     9E  00E8   104 	MOVAB	(R9),RAB$L_FAB(R8)	; SET ADDRESS OF FAB INTO RAB
         28 A8            67     9E  00EC   105 	MOVAB	(R7),RAB$L_RBF(R8)	; SET ADDRESS OF OUTPUT BUFFER
                                     00F0   106 	$CONNECT RAB=(R8)		; CONNECT RECORD STREAM
            11            50     E9  00F9   107 20$:	BLBC	R0,70$			; IF LBC CONNECT FAILURE
            8C            02     C7  00FC   108 	DIVL3	#2,(AP)+,R11		; GET COUNT OF LIMIT PAIRS
                          5B         00FF       
                          0B     15  0100   109 	BLEQ	70$			; BR IF 1 OR LESS
            54            8C     D0  0102   110 50$:	MOVL	(AP)+,R4		; SET LOW LIMIT
            55            8C     D0  0105   111 	MOVL	(AP)+,R5		; AND HI LIMIT
                          0D     10  0108   112 	BSBB	DUMP			; LIST THE MEMORY
            F5            5B     F5  010A   113 	SOBGTR	R11,50$			; LIST ALL LIMIT SETS
                                     010D   114 70$:	$CLOSE	FAB=(R9)		; CLOSE OUTPUT FILE
                                 04  0116   115 80$:	RET				; 
                                     0117   116  
SNAPSHOT        - SNAP SHOT ROUTINE FOR PROCESS ADDRESS SPACE    22-AUG-1978 00:54:20   VAX-11 MACRO X0.3-11               Page   4
01                                                                                                                               (1)

                                     0117   117 ;
                                     0117   118 ; LOCAL SUBROUTINE TO DUMP THE CONTENTS OF A CONTIGUOUS AREA OF
                                     0117   119 ; MEMORY IN HEX AND ASCII.
                                     0117   120 ;
                                     0117   121  
                          53     D4  0117   122 DUMP:	CLRL	R3			; ZERO THE FLAGS WORD
                          00DE   30  0119   123 	BSBW	PUT			; OUTPUT A NULL LINE
            51       FEF0 CF     9E  011C   124 	MOVAB	HEADER,R1		; INITIAL MESSAGE
                          00BE   30  0121   125 	BSBW	INSERT			; PUT THE TEXT INTO MESSAGE
            52            54     D0  0124   126 	MOVL	R4,R2			; SET LOW LIMIT
                          00A0   30  0127   127 	BSBW	CONVERT			; FORMAT LOW ADDRESS INTO MESSAGE
            87   206F7420 8F     D0  012A   128 	MOVL	#^A/ to /,(R7)+		; NOW SEPARATOR TEXT
            52            55     D0  0131   129 	MOVL	R5,R2			; NOW THE HI LIMIT
                          00BD   30  0134   130 	BSBW	PUTC			; INSERT THAT AND OUTPUT THE LINE
                          00C0   30  0137   131 	BSBW	PUT			; WRITE A NULL LINE
            55            54     D1  013A   132 10$:	CMPL	R4,R5			; PRINT THE ENTIRE RANGE OF MEMORY
                          01     1F  013D   133 	BLSSU	20$			; BR IF NO
                                 05  013F   134 	RSB				;
            52            64     9E  0140   135 20$:	MOVAB	(R4),R2			; GET ADDRESS OF NEXT LOCATION
            54            10     C1  0143   136 	ADDL3	#16,R4,R6		; SET UPPER LIMIT OF DUMP
                          56         0146       
                                     0147   137 	IFNORD	#16,(R2),30$		; BR IF ALL 16 BYTES NOT READABLE
            10            00     3B  014D   138 	SKPC	#0,#16,(R2)		; NEXT 4 LONGWORDS ZERO?
                          62         0150       
                          26     12  0151   139 	BNEQ	40$			; BR IF NON-ZERO DATA PRESENT
            54            10     C0  0153   140 	ADDL	#16,R4			; ADVANCE POINTER OVER ZERO AREA
            53            00     E2  0156   141 	BBSS	#SNP_V_ZEROS,R3,10$	; LOOP IF IN A ZERO AREA ALREADY
                          E0         0159       
            51       FED0 CF     9E  015A   142 	MOVAB	ZEROS,R1		; GET ZERO AREA MESSAGE
                          13     11  015F   143 	BRB	35$			;
            54       0200 C4     9E  0161   144 30$:	MOVAB	512(R4),R4		; ADVANCE ONTO NEXT PAGE
            54       01FF 8F     AA  0166   145 	BICW	#511,R4			; ROUND TO FIRST BYTE OF PAGE
            53            01     E2  016B   146 	BBSS	#SNP_V_ACCESV,R3,10$	; BR IF ALREADY IN NON-READABLE AREA
                          CB         016E       
            51       FEE8 CF     9E  016F   147 	MOVAB	ACCESV,R1		; GET MESSAGE
                          0081   30  0174   148 35$:	BSBW	PUTI			; PRINT IT
                          C1     11  0177   149 	BRB	10$			; TRY NEXT
            53            03     8A  0179   150 40$:	BICB	#SNP_M_ZEROS!SNP_M_ACCESV,R3 ; CLEAR ZERO AREA FLAG
                          4C     10  017C   151 	BSBB	CONVERT			; INSERT ADDRESS IN MESSAGE
            87       203A 8F     B0  017E   152 	MOVW	#^A/: /,(R7)+		; SEPARATE ADDRESS FROM DATA
                                     0183   153 50$:	IFNORD	#4,(R4),60$		; BR IF LONGWORD NOT READABLE
            52            84     D0  0189   154 	MOVL	(R4)+,R2		; SET DATA INTO THE MESSAGE
                          3C     10  018C   155 	BSBB	CONVERT			;
                          0E     11  018E   156 	BRB	70$			;
   87   53534543 43414F4E 8F     7D  0190   157 60$:	MOVQ	#^A/NOACCESS/,(R7)+	; INSERT MESSAGE THAT DATA NO READABLE
            54            04     C0  019B   158 	ADDL	#4,R4			; ADVANCE POINTER
            87       2020 8F     B0  019E   159 70$:	MOVW	#^A/  /,(R7)+		; STORE DATA SEPARATOR
            56            54     D1  01A3   160 	CMPL	R4,R6			; DUMP 4 LONGWORDS
                          DB     1F  01A6   161 	BLSSU	50$			; BR IF NO - GET SOME MORE
            54            10     C2  01A8   162 	SUBL	#16,R4			; BACK UP TO START OF 16 BYTE AREA
                                     01AB   163 80$:	IFNORD	#1,(R4),100$		; BR IF BYTE NOT READABLE
            84         80 8F     8B  01B1   164 	BICB3	#^X80,(R4)+,R0		; GET THE NEXT BYTE FROM THE AREA
                          50         01B5       
            20            50     91  01B6   165 	CMPB	R0,#^A/ /		; IS THE BYTE A PRINTABLE CHARACTER?
                          03     1E  01B9   166 	BGEQU	90$			; BR IF YES
            50            2E     90  01BB   167 	MOVB	#^A/./,R0		; ELSE PRINT A DOT
                          2B     10  01BE   168 90$:	BSBB	PUTB			; INSERT A BYTE INTO LISTING
SNAPSHOT        - SNAP SHOT ROUTINE FOR PROCESS ADDRESS SPACE    22-AUG-1978 00:54:20   VAX-11 MACRO X0.3-11               Page   5
01                                                                                                                               (1)

            56            54     D1  01C0   169 	CMPL	R4,R6			; ALL 16 BYTES DONE
                          E6     1F  01C3   170 	BLSSU	80$			; BR IF NO
                          33     10  01C5   171 100$:	BSBB	PUT			; PRINT THE LINE
                          FF70   31  01C7   172 	BRW	10$			;
                                     01CA   173  
                                     01CA   174 ;
                                     01CA   175 ; CONVERT NUMBER BASE 16
                                     01CA   176 ;
                                     01CA   177  
                                     01CA   178 CONVERT:				; 
            51            1C     D0  01CA   179 	MOVL	#28,R1			; SET STARTING BIT NUMBER
            04            51     EF  01CD   180 10$:	EXTZV	R1,#4,R2,R0		; GET NEXT HEXDECIMAL DIGIT
            50            52         01D0       
            50       FE29 CF40   9A  01D2   181 	MOVZBL	HEXTAB[R0],R0		; CONVERT HEXDIGIT TO ASCII
                          11     10  01D8   182 	BSBB	PUTB			; PUT BYTE IN OUTPUT BUFFER
         FC 8F            00     9D  01DA   183 	ACBB	#0,#-4,R1,10$		; ANY MORE DIGITS TO CONVERT?
            FFEC          51         01DE       
                                 05  01E1   184 	RSB				; 
                                     01E2   185  
                                     01E2   186 ;
                                     01E2   187 ; INSERT TEXT IN OUTPUT BUFFER
                                     01E2   188 ;
                                     01E2   189  
                                     01E2   190 	.ENABL	LSB
            50            81     9A  01E2   191 INSERT:	MOVZBL	(R1)+,R0		; GET NEXT BYTE FROM TEXT STRING
                          0C     13  01E5   192 	BEQL	10$			; IF EQL END OF TEXT STRING
                          02     10  01E7   193 	BSBB	PUTB			; PUT BYTE IN OUTPUT BUFFER
                          F7     11  01E9   194 	BRB	INSERT			; 
                                     01EB   195  
                                     01EB   196 ;
                                     01EB   197 ; PUT BYTE IN OUTPUT BUFFER
                                     01EB   198 ;
                                     01EB   199 ;	NOTE:	THIS ROUTINE ASSUMES BUFFER IS FOLLOWED BY RAB
                                     01EB   200 ;		IN THE CALL STACK WORK AREA.
                                     01EB   201  
            58            57     D1  01EB   202 PUTB:	CMPL	R7,R8			; ANY ROOM LEFT IN BUFFER?
                          03     18  01EE   203 	BGEQ	10$			; BR IF NO MORE ROOM
            87            50     90  01F0   204 	MOVB	R0,(R7)+		; INSERT BYTE IN OUTPUT BUFFER
                                 05  01F3   205 10$:	RSB				; 
                                     01F4   206 	.DSABL	LSB
                                     01F4   207  
                                     01F4   208 ;
                                     01F4   209 ; CONVERT HEXDECIMAL VALUE AND OUTPUT RECORD
                                     01F4   210 ;
                                     01F4   211  
                          D4     10  01F4   212 PUTC:	BSBB	CONVERT			; CONVERT HEXDECIMAL VALUE
                          02     11  01F6   213 	BRB	PUT			; OUTPUT RECORD
                                     01F8   214  
                                     01F8   215 ;
                                     01F8   216 ; INSERT TEXT IN OUTPUT BUFFER AND OUTPUT RECORD AND BLANK RECORD
                                     01F8   217 ;
                                     01F8   218  
                          E8     10  01F8   219 PUTI:	BSBB	INSERT			; INSERT TEXT IN BUFFER
                                     01FA   220  
                                     01FA   221 ;
                                     01FA   222 ; OUTPUT CURRENT RECORD AND RESET RECORD PARAMETERS
                                     01FA   223 ;
SNAPSHOT        - SNAP SHOT ROUTINE FOR PROCESS ADDRESS SPACE    22-AUG-1978 00:54:20   VAX-11 MACRO X0.3-11               Page   6
01                                                                                                                               (1)

                                     01FA   224  
            57         28 A8     C3  01FA   225 PUT:	SUBL3	RAB$L_RBF(R8),R7,R0	; CALCULATE LENGTH OF OUTPUT RECORD
                          50         01FE       
         22 A8            50     B0  01FF   226 	MOVW	R0,RAB$W_RSZ(R8)	; SET LENGTH OF OUTPUT RECORD
                                     0203   227 	$PUT	RAB=(R8)		; OUTPUT RECORD
            57         28 A8     D0  020C   228 	MOVL	RAB$L_RBF(R8),R7	; RESET OUTPUT RECORD POINTER
                                 05  0210   229 	RSB				; 
                                     0211   230 	.END
SNAPSHOT        - SNAP SHOT ROUTINE FOR PROCESS ADDRESS SPACE    22-AUG-1978 00:54:20   VAX-11 MACRO X0.3-11               Page   7
SYMBOL TABLE                                                                                                                     (1)

$$.TMP1        = 00000001            FAB$M_EXE      = 00000080            FAB$V_JNL      = 00000016            
$$.TMP2        = 00000068            FAB$M_FTN      = 00000001            FAB$V_KFO      = 0000001E            
ACCESV           0000005B R     03   FAB$M_GET      = 00000002            FAB$V_MSE      = 00000004            
BIT...         = 00000002            FAB$M_INP      = 00080000            FAB$V_MXV      = 00000001            
BUFSIZ         = 00000050            FAB$M_JNL      = 00400000            FAB$V_NAM      = 00000018            
CONVERT          000001CA R     03   FAB$M_KFO      = 40000000            FAB$V_NEF      = 0000000A            
DUMP             00000117 R     03   FAB$M_MSE      = 00000010            FAB$V_NFS      = 00000010            
FAB$B_BID        00000000            FAB$M_MXV      = 00000002            FAB$V_NIL      = 00000005            
FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            FAB$V_OFP      = 0000001D            
FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            FAB$V_ORG      = 00000004            
FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            FAB$V_POS      = 00000008            
FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            FAB$V_PPF      = 00000012            
FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            FAB$V_PPF_IND  = 0000000E            
FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            FAB$V_PPF_RAT  = 00000006            
FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            FAB$V_PRN      = 00000002            
FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            FAB$V_PUT      = 00000000            
FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            FAB$V_RCK      = 00000017            
FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            FAB$V_RWC      = 0000000B            
FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            FAB$V_RWO      = 00000007            
FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            FAB$V_SCF      = 0000000E            
FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            FAB$V_SHRDEL   = 00000002            
FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            FAB$V_SHRGET   = 00000001            
FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            FAB$V_SHRPUT   = 00000000            
FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            FAB$V_SHRUPD   = 00000003            
FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            FAB$V_SPL      = 0000000D            
FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            FAB$V_SQO      = 00000006            
FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            FAB$V_SUP      = 00000002            
FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            FAB$V_TEF      = 0000001C            
FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            FAB$V_TMD      = 00000004            
FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            FAB$V_TMP      = 00000003            
FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            FAB$V_TRN      = 00000004            
FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            FAB$V_UFM      = 0000001A            
FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            FAB$V_UFO      = 00000011            
FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            FAB$V_UPD      = 00000003            
FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            FAB$V_UPI      = 00000006            
FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            FAB$V_WCK      = 00000009            
FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            FAB$W_BLS        0000003C            
FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            FAB$W_DEQ        00000014            
FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            FAB$W_IFI        00000002            
FAB$L_MRN        00000038            FAB$S_ORG      = 00000004            FAB$W_MRS        00000036            
FAB$L_NAM        00000028            FAB$S_PPF_RAT  = 00000008            FILNAM           00000085 R     03   
FAB$L_SDC        00000044            FAB$V_BIO      = 00000005            FILSIZ         = 0000000C            
FAB$L_STS        00000008            FAB$V_BLK      = 00000003            GBL...         = 00000000            
FAB$L_STV        0000000C            FAB$V_BRO      = 00000006            HEADER           00000010 R     03   
FAB$L_XAB        00000024            FAB$V_CBT      = 00000015            HEXTAB           00000000 R     03   
FAB$M_BIO      = 00000020            FAB$V_CIF      = 00000019            INSERT           000001E2 R     03   
FAB$M_BLK      = 00000008            FAB$V_CR       = 00000001            LIB$SNAPSHOT     00000091 RG    03   
FAB$M_BRO      = 00000040            FAB$V_CTG      = 00000014            PUT              000001FA R     03   
FAB$M_CBT      = 00200000            FAB$V_DEL      = 00000002            PUTB             000001EB R     03   
FAB$M_CIF      = 02000000            FAB$V_DFW      = 00000005            PUTC             000001F4 R     03   
FAB$M_CR       = 00000002            FAB$V_DLT      = 0000000F            PUTI             000001F8 R     03   
FAB$M_CTG      = 00100000            FAB$V_DMO      = 0000000C            RAB$B_BID        00000000            
FAB$M_DEL      = 00000004            FAB$V_ESC      = 0000001B            RAB$B_BLN        00000001            
FAB$M_DFW      = 00000020            FAB$V_EXE      = 00000007            RAB$B_KRF        00000035            
FAB$M_DLT      = 00008000            FAB$V_FTN      = 00000000            RAB$B_KSZ        00000034            
FAB$M_DMO      = 00001000            FAB$V_GET      = 00000001            RAB$B_MBC        00000037            
FAB$M_ESC      = 08000000            FAB$V_INP      = 00000013            RAB$B_MBF        00000036            
SNAPSHOT        - SNAP SHOT ROUTINE FOR PROCESS ADDRESS SPACE    22-AUG-1978 00:54:20   VAX-11 MACRO X0.3-11               Page   8
SYMBOL TABLE                                                                                                                     (1)

RAB$B_PSZ        00000034            RAB$V_CCO      = 0000001F            
RAB$B_RAC        0000001E            RAB$V_CVT      = 0000001A            
RAB$B_ROP1       00000005            RAB$V_EOF      = 00000008            
RAB$B_ROP2       00000006            RAB$V_FDL      = 00000006            
RAB$B_ROP3       00000007            RAB$V_HSH      = 00000007            
RAB$B_TMO        0000001F            RAB$V_KGE      = 00000015            
RAB$C_BID      = 00000001            RAB$V_KGT      = 00000016            
RAB$C_BLN        00000044            RAB$V_LIM      = 0000000E            
RAB$C_KEY      = 00000001            RAB$V_LOA      = 0000000D            
RAB$C_RFA      = 00000002            RAB$V_LOC      = 00000010            
RAB$C_SEQ      = 00000000            RAB$V_MAS      = 00000005            
RAB$K_BLN        00000044            RAB$V_NLK      = 00000014            
RAB$L_BKT        00000038            RAB$V_NXR      = 00000017            
RAB$L_CTX        00000018            RAB$V_PMT      = 0000001E            
RAB$L_DCT        00000038            RAB$V_PPF_IND  = 0000000E            
RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            
RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            
RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            
RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            
RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            
RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            
RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            
RAB$L_STS        00000008            RAB$V_TPT      = 00000001            
RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            
RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            
RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            
RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            
RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            
RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            
RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            
RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            
RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            
RAB$M_KGE      = 00200000            SNP_M_ACCESV   = 00000002            
RAB$M_KGT      = 00400000            SNP_M_ZEROS    = 00000001            
RAB$M_LIM      = 00004000            SNP_V_ACCESV   = 00000001            
RAB$M_LOA      = 00002000            SNP_V_ZEROS    = 00000000            
RAB$M_LOC      = 00010000            SYS$CLOSE        ********  GX   03   
RAB$M_MAS      = 00000020            SYS$CONNECT      ********  GX   03   
RAB$M_NLK      = 00100000            SYS$CREATE       ********  GX   03   
RAB$M_NXR      = 00800000            SYS$PUT          ********  GX   03   
RAB$M_PMT      = 40000000            ZEROS            0000002E R     03   
RAB$M_PPF_IND  = 00004000            
RAB$M_PPF_RAT  = 00003FC0            
RAB$M_PTA      = 20000000            
RAB$M_RAH      = 00000200            
RAB$M_RLK      = 00080000            
RAB$M_RNE      = 01000000            
RAB$M_RNF      = 08000000            
RAB$M_TMO      = 02000000            
RAB$M_TPT      = 00000002            
RAB$M_UIF      = 00000010            
RAB$M_ULK      = 00040000            
RAB$M_WAT      = 00020000            
RAB$M_WBH      = 00000400            
RAB$S_PPF_RAT  = 00000008            
RAB$V_ASY      = 00000000            
RAB$V_BIO      = 0000000B            
SNAPSHOT        - SNAP SHOT ROUTINE FOR PROCESS ADDRESS SPACE    22-AUG-1978 00:54:20   VAX-11 MACRO X0.3-11               Page   9
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000050      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
_LIB$CODE        00000211      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
18802. BYTES LEFT IN FREE MEMORY POOL.
1322. BYTES OF RECLAIMED MEMORY.
OBJ$:SNAPSHOT,LIS$:SNAPSHOT/-SP=EXECML$/ML,LIB$:JOBCTL/ML,SRC$:SNAPSHOT
36 MLB DIR RDS - 418 GETS TO DEFINE 17 MACROS. 34 INTER. FILE WRITES. 
