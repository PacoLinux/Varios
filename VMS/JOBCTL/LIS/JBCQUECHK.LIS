JBCQUECHK       - CHECK PRINT QUEUE                              22-AUG-1978 00:46:05   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      40  DECLARATIONS
   (3)      58  CHECK THAT THE QUEUE IS CORRECT
JBCQUECHK       - CHECK PRINT QUEUE                              22-AUG-1978 00:46:05   VAX-11 MACRO X0.3-11               Page   1
V01                                                                                                                              (1)

                                     0000     1 	.TITLE	JBCQUECHK - CHECK PRINT QUEUE
                                     0000     2 	.IDENT	/V01/
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 
                                     0000    24 ;++
                                     0000    25 ; FACILITY:	STARLET JOB CONTROLLER/SYMBIONT MANAGER
                                     0000    26 ;
                                     0000    27 ; ABSTRACT:	ROUTINE TO CHECK INTEGRITY OF THE QUEUE
                                     0000    28 ;
                                     0000    29 ;
                                     0000    30 ; ENVIRONMENT:	NATIVE NON-PRIVLEGED USER MODE CODE
                                     0000    31 ;
                                     0000    32 ; AUTHOR:	W.H.BROWN, CREATION DATE:
                                     0000    33 ;
                                     0000    34 ; MODIFIED BY:
                                     0000    35 ;
                                     0000    36 ;	, : VERSION
                                     0000    37 ; 01	- 
                                     0000    38 ;--
JBCQUECHK       - CHECK PRINT QUEUE                              22-AUG-1978 00:46:05   VAX-11 MACRO X0.3-11               Page   2
V01             DECLARATIONS                                                                                                     (2)

                                     0000    40 	.SBTTL	DECLARATIONS
                                     0000    41 ;
                                     0000    42 ; INCLUDE FILES:
                                     0000    43 ;
                                     0000    44 ;
                                     0000    45 ; MACROS:
                                     0000    46 ;
                                     0000    47 ;
                                     0000    48 ; EQUATED SYMBOLS:
                                     0000    49 ;
                                     0000    50 	JBCPARDEF			; DEFINE JOB CONTROLLER PARAMETERS
                                     0000    51 	JBCQUEDEF			; DEFINE QUEUE OFFSETS
                                     0000    52 ;
                                     0000    53 ; OWN STORAGE:
                                     0000    54 ;
                                     0000    55 ;	NONE
                                     0000    56 ;
JBCQUECHK       - CHECK PRINT QUEUE                              22-AUG-1978 00:46:05   VAX-11 MACRO X0.3-11               Page   3
V01             CHECK THAT THE QUEUE IS CORRECT                                                                                  (3)

                                     0000    58 	.SBTTL	CHECK THAT THE QUEUE IS CORRECT
                                     0000    59 ;++
                                     0000    60 ; FUNCTIONAL DESCRIPTION:
                                     0000    61 ;
                                     0000    62 ; THIS ROUTINE CHECKS FOR LOST OR MULTIPLY ALLOCATED RECORDS
                                     0000    63 ; IN THE QUEUE FILE. IF THE FILE IS OK, OR CAN BE FIXED, IT IS 
                                     0000    64 ; UPDATED TO THE DISK.  IF MULTIPLY ALLOCATED RECORDS ARE FOUND,
                                     0000    65 ; THE JOB CONTROLLER IS SHUT-DOWN WITH A DUMP.
                                     0000    66 ;
                                     0000    67 ; CALLING SEQUENCE:
                                     0000    68 ;
                                     0000    69 ;	BSB/JSB	JBC$CHKUPDQUE
                                     0000    70 ;
                                     0000    71 ; INPUT PARAMETERS:
                                     0000    72 ;
                                     0000    73 ;	R10 CONTAINS THE BASE ADDRESS OF THE QUEUE
                                     0000    74 ;
                                     0000    75 ; OUTPUT PARAMETERS:	NONE
                                     0000    76 ;
                                     0000    77 ; COMPLETION CODES:	NONE
                                     0000    78 ;
                                     0000    79 ; SIDE EFFECTS:
                                     0000    80 ;
                                     0000    81 ;	A CORRUPTED QUEUE CAN CAUSE THE JOB CONTROLLER TO RESTART ITSELF
                                     0000    82 ;
                                     0000    83 ;--
                                     0000    84 
                                     0000    85 	PURE_SECTION
                                     0000    86  
                                     0000    87 JBC$VFYUPDQUE::				; CHECK, THEN UPDATE THE QUEUE
                          5A     D5  0000    88 	TSTL	R10			; ANY QUEUE HERE?
                          0F     13  0002    89 	BEQL	3$			; BR IF NO
                                 C3  0004    90 	SUBL3	SQH$L_FIRSTREC(R10),-	; FIND NUMBER OF BYTES IN USE
         0C AA         08 AA         0005    91 		SQH$L_NEXTREC(R10),R6	; IN THE QUEUE FILE RECORD SPACE
                          56         0009       
            56   00000040 8F     C6  000A    92 	DIVL	#SYM$K_RECSIZE,R6	; CHAGE THAT TO NUMBER OF RECORDS
                          01     12  0011    93 	BNEQ	5$			; BR IF THERE IS SOMETING IN THE QUEUE
                                 05  0013    94 3$:	RSB				; *** EXIT IF QUEUE IS EMPTY ***
            56            07     C1  0014    95 5$:	ADDL3	#7,R6,R0		; ROUND UP TO MODULO 8
                          50         0017       
            50         FD 8F     78  0018    96 	ASHL	#-3,R0,R0		; FIND NUMBER OF BYTES TO MAP FILE
                          50         001C       
            5E            50     C2  001D    97 	SUBL	R0,SP			; MAKE SPACE FOR BIT MAP
                          50     DD  0020    98 	PUSHL	R0			; SAVE NUMBER OF BYTES ALLOCATED
            6E            00     2C  0022    99 	MOVC5	#0,(SP),#0,R0,4(SP)	; ZERO THE AREA
            50            00         0025       
                       04 AE         0027       
                          50     D4  0029   100 	CLRL	R0			; SET TO 0-FIRST BIT
            55         04 AE     9E  002B   101 	MOVAB	4(SP),R5		; SET ADDRESS OF BIT ARRAY
                                     002F   102 10$:	SETBIT	R0,(R5)			; SET BITS FOR ALLOCATED RECORDS
            50            56     F2  0033   103 	AOBLSS	R6,R0,10$		; SET ONE BIT FOR EACH RECORD
                          F8         0036       
            50            6A     D0  0037   104 	MOVL	(R10),R0		; RECORD IN FREE LIST
                          03     13  003A   105 	BEQL	20$			; BR IF NONE
                          0093   30  003C   106 	BSBW	100$			; CHECK OUT THE RECORD
            56       0120 CA     DE  003F   107 20$:	MOVAL	SQH$K_SIZE(R10),R6	; SET FOR START OF CHECK
            54         06 AA     9A  0044   108 	MOVZBL	SQH$B_MAXQUE(R10),R4	; GET NUMBER OF QUEUES
JBCQUECHK       - CHECK PRINT QUEUE                              22-AUG-1978 00:46:05   VAX-11 MACRO X0.3-11               Page   4
V01             CHECK THAT THE QUEUE IS CORRECT                                                                                  (3)

                          57     D4  0048   109 	CLRL	R7			; COUNT OF NUMBER FOUND TO BE ACTIVE
         08 A6            00     E1  004A   110 30$:	BBC	#SMQ$V_INUSE,SMQ$B_FLAGS(R6),40$ ; BR IF NOT IN USE
                          13         004E       
                          57     D6  004F   111 	INCL	R7			; COUNT UP NUMBER FOUND ACTIVE
            50            66     D0  0051   112 	MOVL	SMQ$L_CURRENT(R6),R0	; GET CURRENT JOB
                          03     13  0054   113 	BEQL	35$			; BR IF NO CURRENT JOB
                          0079   30  0056   114 	BSBW	100$			; TAKE CARE OF THE ONE PRINTING
            50         04 A6     D0  0059   115 35$:	MOVL	SMQ$L_HOLDLST(R6),R0	; HEAD OF JOB LIST
                          03     13  005D   116 	BEQL	40$			; BR IF NOTHING HERE
                          0070   30  005F   117 	BSBW	100$			; CHECK THAT OUT
            56            20     C0  0062   118 40$:	ADDL	#SMQ$K_SIZE,R6		; ADVANCE POINTER
            E2            54     F5  0065   119 	SOBGTR	R4,30$			; DO ALL DEVICE QUEUES
         05 AA            57     91  0068   120 	CMPB	R7,SQH$B_NUMQUE(R10)	; DOES COUNT MATCH CURRENT TOTAL?
                          02     13  006C   121 	BEQL	45$			; BR IF YES
                                     006E   122 	SHOW_ERROR	QUEUE_COUNT	; INDICATE THERE IS A PROBLEM
            54            02     CE  0070   123 45$:	MNEGL	#2,R4			; SET INDICATOR FOR QUEUE TO SEARCH
            53         14 AA     DE  0073   124 	MOVAL	SQH$L_OPENJOB(R10),R3	; ASSUME SEARCH OPEN JOB QUEUE
                          54     D6  0077   125 50$:	INCL	R4			; COUNT UP QUEUES SEARCHED
                          08     14  0079   126 	BGTR	60$			; BR IF WORKING ON PRINT QUEUES
                          10     12  007B   127 	BNEQ	70$			; BR IF TIME TO SEARCH OPEN JOB
            53         18 AA     DE  007D   128 	MOVAL	SQH$L_TIMQUE(R10),R3	; SEARCH TIME QUEUE
                          0A     11  0081   129 	BRB	70$			; JOIN SEARCH
            20            54     D1  0083   130 60$:	CMPL	R4,#SYM_K_PRTPRI	; HAVE ALL QUEUES BEEN SEARCHED?
                          0E     14  0086   131 	BGTR	80$			; BR IF YES
            53         18 AA44   7E  0088   132 	MOVAQ	SQH$Q_QUEUE-8(R10)[R4],R3 ; GET ADDRESS OF QUEUE THREAD WORD
            50            63     D0  008D   133 70$:	MOVL	(R3),R0			; FOLLOW THE LINK
                          E5     13  0090   134 	BEQL	50$			; BR IN NONE LINKED HERE
                          3E     10  0092   135 	BSBB	100$			; PROCESS THIS JOB LIST
                          E1     11  0094   136 	BRB	50$			; TRY FOR NEXT
            51            6E     D0  0096   137 80$:	MOVL	(SP),R1			; NUMBER OF BYTES IN THE ARRAY
                          85     95  0099   138 85$:	TSTB	(R5)+			; LOOK FOR LOST RECORDS
                          6C     12  009B   139 	BNEQ	200$			; BR IF RECORD(S) LOST
            F9            51     F5  009D   140 	SOBGTR	R1,85$			; KEEP LOOKING
            5E            8E     C0  00A0   141 90$:	ADDL	(SP)+,SP		; CLEAR WORK AREA
                                     00A3   142 	$UPDSEC_S  EFN	=#JBC_K_UPDFLG,-  ; EFN TO WAIT FOR
                                     00A3   143 		INADR	=W^JBC$Q_RETADR,- ; LIMITS OF THE QUEUE ARE INPUT
                                     00A3   144 		RETADR	=W^JBC$Q_UPDADR,- ; ACTUAL LIMITS UPDATED
                                     00A3   145 		IOSB	=W^JBC$Q_UPDIOSB,-; IO STATUS FORM UPDATE
                                     00A3   146 		UPDFLG	=#1		; SINGLE WRITER OF SECTION FLAG
            0C            50     E9  00C0   147 	BLBC	R0,95$			; BR IF ERROR WRITING SECTION
                                     00C3   148 	$WAITFR_S  #JBC_K_UPDFLG	; WAIT FOR WRITE TO COMPLETE
            02            50     E8  00CC   149 	BLBS	R0,99$			; BR IF NO ERROR
                          3F     BF  00CF   150 95$:	CHMU	#63			; REPORT ERROR
                                 05  00D1   151 99$:	RSB				;
                                     00D2   152 ;
                                     00D2   153 ; LOCAL SUBROUTINE TO CLEAR ALL THE BITS ASSOCIATED WITH
                                     00D2   154 ; A LIST OF PRINT JOBS
                                     00D2   155 ;
            50            5A     C1  00D2   156 100$:	ADDL3	R10,R0,R2		; FIND REAL ADDRESS OF JOB HEADER RECORD
                          52         00D5       
            50         3C A2     D0  00D6   157 	MOVL	SJH$L_PARMBLK(R2),R0	; GET JOB PARAMETER BLOCK
                          02     13  00DA   158 	BEQL	105$			; BR IF NONE
                          16     10  00DC   159 	BSBB	150$			; SET THE BIT
            52            5A     C3  00DE   160 105$:	SUBL3	R10,R2,R0		; RESET INDEX TO JOB HEADER
                          50         00E1       
            50            5A     C1  00E2   161 110$:	ADDL3	R10,R0,R1		; FIND REAL ADDRESS OF RECORD
                          51         00E5       
JBCQUECHK       - CHECK PRINT QUEUE                              22-AUG-1978 00:46:05   VAX-11 MACRO X0.3-11               Page   5
V01             CHECK THAT THE QUEUE IS CORRECT                                                                                  (3)

                          0C     10  00E6   162 	BSBB	150$			; SET THE BIT
            50            61     D0  00E8   163 	MOVL	SQR$L_RECLINK(R1),R0	; FOLLOW JOB LIST TO NEXT RECORD
                          F5     12  00EB   164 	BNEQ	110$			; BR IF MORE FILES IN JOB
            50         08 A2     D0  00ED   165 	MOVL	SJH$L_NEXTJOB(R2),R0	; GET OFFSET TO NEXT JOB
                          DF     12  00F1   166 	BNEQ	100$			; DO THIS JOB
                                 05  00F3   167 	RSB
                                     00F4   168  
            50         08 AA     C2  00F4   169 150$:	SUBL	SQH$L_FIRSTREC(R10),R0	; FIND OFFSET TO RECORD
            50   00000040 8F     C6  00F8   170 	DIVL	#SYM$K_RECSIZE,R0	; FIND RECORD NUMBER
            65            50     E4  00FF   171 	BBSC	R0,(R5),160$		; BR IF RECORD NOT FOUND BEFORE
                          05         0102       
                                     0103   172 	SHOW_ERROR	MULT_ALLOCATE	; TELL THAT MULTIPLE ALLOCATIONS EXIST
                          FEF8'  31  0105   173 	BRW	JBC$RESTART		; GET A GOOD COPY RUNNING
                                 05  0108   174 160$:	RSB				;
                                     0109   175  
            6E            08     C5  0109   176 200$:	MULL3	#8,(SP),R6		; FIND NUMBER OF BITS IN ARRAY
                          56         010C       
            55         04 AE     9E  010D   177 	MOVAB	4(SP),R5		; SET ADDRESS OF FIRST BYTE IN ARRAY
            55            6E     C0  0111   178 	ADDL	(SP),R5			; FIND ADDRESS OF LAST BYTE IN ARRAY+1
            56            08     C2  0114   179 210$:	SUBL	#8,R6			; COUNT DOWN NUMBER OF BITS CHECKED
                          24     19  0117   180 	BLSS	280$			; BR WHEN NO MORE
                          75     95  0119   181 	TSTB	-(R5)			; ANY RECORDS HERE TO BE ALLOCATED
                          F7     13  011B   182 	BEQL	210$			; BR IF NO - CHECK NEXT BYTE
            54            07     D0  011D   183 	MOVL	#7,R4			; SET FIRST BIT TO CHECK IN BYTE
            65            54     E5  0120   184 220$:	BBCC	R4,(R5),230$		; BR IF THIS RECORD IS ALREADY ALLOCATED
                          14         0123       
            56            54     C1  0124   185 	ADDL3	R4,R6,R0		; FIND RECORD NUMBER OF MISSING RECORD
                          50         0127       
            50   00000040 8F     7A  0128   186 	EMUL	#SYM$K_RECSIZE,R0,SQH$L_FIRSTREC(R10),R0 ; FIND BYTE OFFSET
            50         08 AA         012F       
            50            5A     C0  0132   187 	ADDL	R10,R0			; NOW GET THE REAL ADDRESS IN QUEUE FILE
                          FEC8'  30  0135   188 	BSBW	SYM$DEARECORD		; PUT THE RECORD IN THE FREE LIST
            E5            54     F4  0138   189 230$:	SOBGEQ	R4,220$			; CHECK ALL BITS IN BYTE?
                          D7     11  013B   190 	BRB	210$			; DONE WITH THAT BYTE - CHECK NEXT
                                     013D   191 280$:	SHOW_ERROR	LOST_RECORDS	; SAY RECORDS ARE MISSING
                          FF5E   31  013F   192 	BRW	90$			; TAKE COMMON EXIT
                                     0142   193  
                                     0142   194 	.END
JBCQUECHK       - CHECK PRINT QUEUE                              22-AUG-1978 00:46:05   VAX-11 MACRO X0.3-11               Page   6
SYMBOL TABLE                                                                                                                     (3)

ACM$B_PROCPRI    00000024            JBC$_SNDRESP   = 00048420            QUEUE_COUNT      ********   X   03   
ACM$L_PROCID     FFFFFFFC            JBC$_SYMBASN   = 00048440            SJH$B_COPYCNT    0000000E            
ACM$L_UIC        0000000C            JBC$_SYMBCRE   = 000484D8            SJH$B_FLAGS      0000000C            
ACM$Q_ACNTNAM    0000001C            JBC$_SYMBDSAB  = 00048078            SJH$B_FORMS      0000000D            
ACM$Q_PRVMSK     00000004            JBC$_SYMBWRT   = 00048448            SJH$B_PRTPRI     0000000F            
ACM$T_DATA       00000028            JBC$_SYMDEL    = 00048470            SJH$L_NEXTJOB    00000008            
ACM$T_USERNAM    00000010            JBC$_UAFOPN    = 000484A0            SJH$L_PARMBLK    0000003C            
ACM$W_MAILBOX    00000002            JBC$_UNESYMMSG = 000484C0            SJH$L_PROCID     00000010            
ACM$W_TYPE       00000000            JBC$_USERVAL   = 00048498            SJH$L_RECLINK    00000000            
ACM$W_USERREQ    00000026            JBC_K_MAXBUFR  = 00000004            SJH$L_UIC        00000014            
BIT...         = 00000005            JBC_K_PRTIMFLAG= 00000002            SJH$M_HOLD     = 00000001            
GBL...         = 00000000            JBC_K_SYNCFLAG = 00000001            SJH$M_JOBABORT = 00000004            
JBC$Q_RETADR     ********   X   03   JBC_K_UPDFLG   = 00000008            SJH$M_LOWER    = 00000002            
JBC$Q_UPDADR     ********   X   03   JBC_M_CREJOBREQ= 00000008            SJH$Q_ACNTNAM    00000024            
JBC$Q_UPDIOSB    ********   X   03   JBC_M_MBREADREQ= 00000001            SJH$Q_JOBNAME    00000034            
JBC$RESTART      ********   X   03   JBC_M_SRVTIMQUE= 00000010            SJH$Q_TIME       0000002C            
JBC$VFYUPDQUE    00000000 RG    03   JBC_M_SYMCREREQ= 00000002            SJH$T_USERNAM    00000018            
JBC$_ACMINVOP  = 00048088            JBC_M_SYMINIREQ= 00000004            SJH$V_HOLD     = 00000000            
JBC$_ACNTOPN   = 00048478            JBC_V_CREJOBREQ= 00000003            SJH$V_JOBABORT = 00000002            
JBC$_ACNTWRT   = 00048480            JBC_V_MBREADREQ= 00000000            SJH$V_LOWER    = 00000001            
JBC$_ENTQUE    = 000484A8            JBC_V_SRVTIMQUE= 00000004            SJH$W_JOBSEQ     00000004            
JBC$_ILLDEVNAM = 00048000            JBC_V_SYMCREREQ= 00000001            SJH$W_MBCHAN     0000000D            
JBC$_ILLDEVTYP = 00048008            JBC_V_SYMINIREQ= 00000002            SJH$W_QINDEX     00000006            
JBC$_ILLFILNAM = 00048010            JCD_A_LBUFADR    0000000C            SMQ$B_CHAR       0000000A            
JBC$_ILLQUENAM = 00048018            JCD_A_QUEBASE    00000018            SMQ$B_FLAGS      00000008            
JBC$_INPASGN   = 00048488            JCD_B_CURPDEV    0000001D            SMQ$B_FORMS      00000009            
JBC$_INPREAD   = 00048490            JCD_B_CURSYMB    0000001C            SMQ$B_JOBCNT     00000009            
JBC$_INVMSG    = 00048418            JCD_G_LISTS      00000000            SMQ$B_JOBLIM     0000000B            
JBC$_INVSCT    = 00048468            JCD_G_WLEND      FFFFFFF0            SMQ$C_SIZE       00000020            
JBC$_JOBABORT  = 00048080            JCD_G_WORKLIST   FFFFFFD0            SMQ$K_SIZE       00000020            
JBC$_JOBCRD    = 000484B0            JCD_K_SIZE     = 000000FC            SMQ$L_ASNSCT     0000000C            
JBC$_LOSTREC   = 00048438            JCD_L_SMBPID     FFFFFFCC            SMQ$L_CURRENT    00000000            
JBC$_MBASGN    = 00048400            JCD_Q_ACNTFIL    FFFFFFE8            SMQ$L_HOLDLST    00000004            
JBC$_MBDEAS    = 00048460            JCD_Q_FREEBUFR   FFFFFFF0            SMQ$M_CREPND   = 00000004            
JBC$_MBREAD    = 00048408            JCD_Q_LBUFDES    00000008            SMQ$M_DEFBRST  = 00000002            
JBC$_MBSETAST  = 000484C8            JCD_Q_PROCDEL    FFFFFFE0            SMQ$M_DEFFLAG  = 00000001            
JBC$_MBWRITE   = 000484D0            JCD_Q_SYMBMAN    FFFFFFD8            SMQ$M_DETJOB   = 00000002            
JBC$_MULTREC   = 00048430            JCD_Q_SYMBSRV    FFFFFFD0            SMQ$M_GENDEV   = 00000010            
JBC$_NOOPENJOB = 00048048            JCD_Q_SYMBWAIT   FFFFFFF8            SMQ$M_INIPRI   = 0000000F            
JBC$_NOPRIV    = 00048020            JCD_Q_TIME       FFFFFFC4            SMQ$M_INUSE    = 00000001            
JBC$_NOQUEHDR  = 00048028            JCD_Q_TMPDESC    00000010            SMQ$M_LOWER    = 00000008            
JBC$_NOQUESPACE= 00048030            JCD_T_INDEX0     00000000            SMQ$M_NOGENERIC= 00000020            
JBC$_NORMAL    = 00040001            JCD_T_LINBFE     000000C0            SMQ$M_NOSWAP   = 00000010            
JBC$_NOSUCHJOB = 00048040            JCD_T_LINBUF     0000001E            SMQ$M_PAUSED   = 00000004            
JBC$_NOSUCHQUE = 00048038            JCD_T_START      FFFFFFC4            SMQ$M_REDIRECT = 00000010            
JBC$_PASSCRD   = 000484B8            JCD_W_FLAGS      00000004            SMQ$M_STOPPED  = 00000008            
JBC$_PRCREAT   = 00048410            JCD_W_JOBSEQ     00000006            SMQ$M_TRMDEV   = 00000004            
JBC$_PRINTOUT  = 000484E0            JCD_W_LBUFCNT    00000008            SMQ$S_INIPRI   = 00000004            
JBC$_QUECNT    = 00048428            JCD_W_LBUFSIZ    0000000A            SMQ$T_NAME       00000010            
JBC$_QUEERR    = 00048458            JCD_W_MBCHAN     00000002            SMQ$V_CREPND   = 00000002            
JBC$_QUENOSTOP = 00048050            JCD_W_TMPCHAN    00000000            SMQ$V_DEFBRST  = 00000001            
JBC$_QUEUPD    = 000484E8            JCM_K_SIZE       000000C0            SMQ$V_DEFFLAG  = 00000000            
JBC$_SCTERR    = 00048450            JCM_Q_IOSB       00000008            SMQ$V_DETJOB   = 00000001            
JBC$_SMINVOPR  = 00048058            JCM_Q_LINKS      00000000            SMQ$V_GENDEV   = 00000004            
JBC$_SMINVOPT  = 00048060            JCM_T_MSGDATA    00000010            SMQ$V_INIPRI   = 00000000            
JBC$_SMINVREQ  = 00048068            LOST_RECORDS     ********   X   03   SMQ$V_INUSE    = 00000000            
JBC$_SMZEROJOB = 00048070            MULT_ALLOCATE    ********   X   03   SMQ$V_LOWER    = 00000003            
JBCQUECHK       - CHECK PRINT QUEUE                              22-AUG-1978 00:46:05   VAX-11 MACRO X0.3-11               Page   7
SYMBOL TABLE                                                                                                                     (3)

SMQ$V_NOGENERIC= 00000005            SYM$DEARECORD    ********   X   03   
SMQ$V_NOSWAP   = 00000004            SYM$K_RECSIZE    00000040            
SMQ$V_PAUSED   = 00000002            SYM_K_MAXDEVNAM= 0000000F            
SMQ$V_REDIRECT = 00000004            SYM_K_MAXFILNAM= 00000013            
SMQ$V_STOPPED  = 00000003            SYM_K_MAXSYMB  = 00000010            
SMQ$V_TRMDEV   = 00000002            SYM_K_NUMQUEUE = 0000001F            
SMR$B_PROCPRI    00000024            SYM_K_NUMRECORD= 00000400            
SMR$L_PROCID     FFFFFFFC            SYM_K_PRTPRI   = 00000020            
SMR$L_UIC        0000000C            SYM_K_QUENAM   = 0000000F            
SMR$Q_ACNTNAM    0000001C            SYS$UPDSEC       ********   X   03   
SMR$Q_PRVMSK     00000004            SYS$WAITFR       ********   X   03   
SMR$T_DATA       00000028            _$$_           = 00000050            
SMR$T_USERNAM    00000010            
SMR$W_MAILBOX    00000002            
SMR$W_TYPE       00000000            
SMR$W_USERREQ    00000026            
SQH$B_FLAGS      00000004            
SQH$B_MAXQUE     00000006            
SQH$B_NUMQUE     00000005            
SQH$B_SPARE      00000007            
SQH$C_SIZE       00000120            
SQH$K_SIZE       00000120            
SQH$L_FIRSTREC   00000008            
SQH$L_FREEREC    00000000            
SQH$L_LASTREC    00000010            
SQH$L_NEXTREC    0000000C            
SQH$L_OPENJOB    00000014            
SQH$L_TIMQUE     00000018            
SQH$Q_QUEUE      00000020            
SQH$W_QUESEQ     0000001C            
SQR$B_COPYCNT    00000039            
SQR$B_FLAGS      00000038            
SQR$L_RECLINK    00000000            
SQR$M_BRSTPAG  = 00000004            
SQR$M_DELETE   = 00000001            
SQR$M_DOUBLE   = 00000008            
SQR$M_FLAGPAG  = 00000002            
SQR$M_NOFEED   = 00000010            
SQR$M_PAGHDR   = 00000020            
SQR$T_FILNAM     00000024            
SQR$T_VOLNAM     00000008            
SQR$V_BRSTPAG  = 00000002            
SQR$V_DELETE   = 00000000            
SQR$V_DOUBLE   = 00000003            
SQR$V_FLAGPAG  = 00000001            
SQR$V_NOFEED   = 00000004            
SQR$V_PAGHDR   = 00000005            
SQR$W_DIRNUM     0000001E            
SQR$W_DIRSEQ     00000020            
SQR$W_DIRVOL     00000022            
SQR$W_FILNUM     00000018            
SQR$W_FILSEQ     0000001A            
SQR$W_JOBSEQ     00000004            
SQR$W_PAGCNT     0000003A            
SQR$W_RECID      00000006            
SQR$W_RELVOL     0000001C            
SYM$C_RECSIZE    00000040            
JBCQUECHK       - CHECK PRINT QUEUE                              22-AUG-1978 00:46:05   VAX-11 MACRO X0.3-11               Page   8
PROGRAM SECTION SYNOPSIS                                                                                                         (3)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFC      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
JBC_PURE         00000142      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
17296. BYTES LEFT IN FREE MEMORY POOL.
176. BYTES OF RECLAIMED MEMORY.
OBJ$:JBCQUECHK,LIS$:JBCQUECHK/-SP=EXECML$/ML,LIB$:JOBCTL/ML,SRC$:JBCQUECHK
38 MLB DIR RDS - 466 GETS TO DEFINE 24 MACROS. 26 INTER. FILE WRITES. 
