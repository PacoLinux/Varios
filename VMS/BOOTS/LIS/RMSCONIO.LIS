RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)    1900  DECLARATIONS
   (1)   10450  RIO$INPUT - RMS INPUT INTERFACE
   (1)   12900  RIO$OUTPUT - RMS OUTPUT INTERFACE ROUTINE
   (1)   15750  BOO$READPROMPT - Prompt and read input string
   (1)   20050  BOO$FILOPEN - Routine to open input file
   (1)   21300  BOO$READFILE - Read parameter file
   (1)   22750  BOO$WRTFILE - Routine to write parameter file
   (1)   25350  BOO$SWPCREATE - CREATE SWAP OR PAGING FILE
   (1)   26850  INSTALL SWAP FILE
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page   1
V05                                                                                                                              (1)

                                     0000    50 	.TITLE	RMSCONIO - RMS INPUT/OUTPUT MODULE
                                     0000   100 	.IDENT	/V05/
                                     0000   150 ;
                                     0000   200 ; COPYRIGHT (C) 1978
                                     0000   250 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000   300 ;
                                     0000   350 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000   400 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000   450 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000   500 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000   550 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000   600 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000   650 ; REMAIN IN DEC.
                                     0000   700 ;
                                     0000   750 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000   800 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000   850 ; CORPORATION.
                                     0000   900 ;
                                     0000   950 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000  1000 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000  1050 ;
                                     0000  1100 
                                     0000  1150 ;++
                                     0000  1200 ; FACILITY:	SYSGEN UTILITY
                                     0000  1250 ;
                                     0000  1300 ; ABSTRACT:	RMSCONIO PROVIDES ROUTINES TO PERFORM CONSOLE, COMMAND
                                     0000  1350 ;		AND FILE I/O FOR THE SYSGEN UTILITY
                                     0000  1400 ;
                                     0000  1450 ; ENVIRONMENT:	NATIVE/USER MODE CODE
                                     0000  1500 ;
                                     0000  1550 ; AUTHOR:	R.I. HUSTVEDT, CREATION DATE: 7-SEP-1977
                                     0000  1600 ;
                                     0000  1650 ; MODIFIED BY:
                                     0000  1700 ;
                                     0000  1750 ;	, : VERSION
                                     0000  1800 ; 01	- 
                                     0000  1850 ;--
                                     0000  1900 	.SBTTL	DECLARATIONS
                                     0000  1950 ;
                                     0000  2000 ; INCLUDE FILES:
                                     0000  2050 ;
                                     0000  2100 
                                     0000  2150 ;
                                     0000  2200 ; MACROS:
                                     0000  2250 ;
                                     0000  2300 	.MACRO	ERROR,STR		;
                                     0000  2350 	BSBW	BOO$FACMSG		;
                                     0000  2400 	.ASCIZ	/'STR'/			;
                                     0000  2450 	.ENDM	ERROR			;
                                     0000  2500 
                                     0000  2550  
                                     0000  2600 ;--
                                     0000  2650  
                                     0000  2700 ;
                                     0000  2750 ; EQUATED SYMBOLS:
                                     0000  2800 ;
                                     0000  2850 ; MACRO LIBRARY CALLS
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page   2
V05             DECLARATIONS                                                                                                     (1)

                                     0000  2900 ;
                                     0000  2950 	$CCBDEF				; DEFINE CHANNEL CONTROL BLOCK
                                     0000  3000 	$PRMDEF				; DEFINE PARAMETER BLOCK
                                     0000  3050 	$SFTDEF				; DEFINE SWAPFILE TABLE ENTRY
                                     0000  3100 	$RABDEF				; RMS RAB DEFINITIONS
                                     0000  3150 	$FABDEF				; RMS FAB DEFINITIONS
                                     0000  3200 	$PFLDEF				; DEFINE PAGE FILE DESCRIPTOR
                                     0000  3250 	$PTEDEF				; DEFINE PTE FIELDS AND CONSTANTS
                                     0000  3300 	$TPADEF				; DEFINE TPARSE SYMBOLS
                                     0000  3350 ;
                                     0000  3400 ; EQUATED SYMBOLS:
                                     0000  3450 ;
                           00000080  0000  3500 	FILNAMSIZ=128
                                     0000  3550 
                                     0000  3600 ;
                                     0000  3650 ; OWN STORAGE:
                                     0000  3700 ;
                                     0000  3750 ;
                                 00000000  3800 	.PSECT	RWDATA	WRT,RD,QUAD
                                     0000  3850  
                        53 49 4C 2E  0000  3900 DEFNAM:	.ASCII	/.LIS/			; INITIAL DEFAULT IS LISTING
                           00000030  0004  3950 	.BLKB	48-4			; DEFAULT NAME GOES HERE
                           000000B0  0030  4000 EXPFNM:	.BLKB	FILNAMSIZ		; EXPANDED NAME HERE
                           00000130  00B0  4050 RSLFNM:	.BLKB	FILNAMSIZ		; RESULTANT NAME HERE
                           000001B0  0130  4100 OUTNAM:	.BLKB	FILNAMSIZ		; OUTPUT FILE NAME HERE
                           000001C4  01B0  4150 RHBUF:	.BLKB	20			; RECORD HEADER BUFFER
                                     01C4  4200  
                  35 30 30 52 4F 46  01C4  4250 INPNAM:	.ASCII	/FOR005/		; INPUT NAME STRING
                           00000006  01CA  4300 INPNAMSZ=.-INPNAM			; SIZE OF INPUT STRING
                                     01CA  4350 
                  36 30 30 52 4F 46  01CA  4400 OUTPNAM:.ASCII	/FOR006/		; OUTPUT NAME STRING
                           00000006  01D0  4450 OUTPNAMSZ=.-OUTPNAM			; SIZE OF OUTPUT STRING
                                     01D0  4500 
   52 41 50 2E 54 4C 55 41 46 45 44  01D0  4550 PRMDEF:	.ASCII	/DEFAULT.PAR/		; DEFAULT NAME STRING
                           0000000B  01DB  4600 PRMDEFSIZ=.-PRMDEF			; STRING LENGTH
                                     01DB  4650  
                                     01DB  4700 
                                 00  01DB  4750 INP_OPEN: .BYTE	0			; INPUT OPEN FLAG
                                 00  01DC  4800 OUTP_OPEN:.BYTE	0			; OUTPUT OPEN FLAG
                                     01DD  4850 
                                     01DD  4900  
                           000001FD  01DD  4950 ZEROES:	.BLKL	8			;
                                     01FD  5000 ;
                                     01FD  5050 ; RMS 32 DATA STRUCTURES
                                     01FD  5100 ;
                                     01FD  5150  
                                     01FD  5200 	.ALIGN	QUAD			; ALIGN FOR PERFORMANCE
                                     0200  5250 RIO_OUTFAB::				; EXTERNAL NAME
                                     0200  5300 	$FAB	FAC=PUT,-		; OUTPUT FAB, ACCESS IS PUT
                                     0200  5350 		FNA=OUTPNAM,-		; OUTPUT NAME STRING
                                     0200  5400 		FNS=OUTPNAMSZ,-		; AND LENGTH
                                     0200  5450 		ORG=SEQ,-		; SEQUENTIAL FILE
                                     0200  5500 		NAM=RIO_OUTNAM,-	; ASSOCIATED NAME BLOCK
                                     0200  5550 		FOP=SUP,-		; SUPERSEED IF NECESSARY
                                     0200  5600 		DNA=DEFNAM		; DEFAULT NAME ADDRESS
                                     0250  5650  
                                     0250  5700 RIO_OUTNAM::				; OUTPUT NAME BLOCK
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page   3
V05             DECLARATIONS                                                                                                     (1)

                                     0250  5750 	$NAM	RSA=OUTNAM,-		;
                                     0250  5800 		RSS=FILNAMSIZ,-		;
                                     0250  5850 		ESA=OUTNAM,-		; EXPANDED AND RESULT IN SAME PLACE
                                     0250  5900 		ESS=FILNAMSIZ,-		;
                                     0250  5950  
                                     0288  6000 RIO_OUTRAB::				;
                                     0288  6050 	$RAB	RAC=SEQ,-		; RECORD ACCESS IS SEQENTIAL
                                     0288  6100 		RHB=RHBUF,-		; RECORD HEADER BUFFER
                                     0288  6150 		FAB=RIO_OUTFAB		; ASSOCIATED FAB
                                     02CC  6200  
                                     02CC  6250 RIO_INPFAB::				;
                                     02CC  6300 	$FAB	FAC=GET,-		; FILE ACCESS IS GET(READ)
                                     02CC  6350 		FNA=INPNAM,-		; INPUT FILE NAME STRING ADDRESS
                                     02CC  6400 		FNS=INPNAMSZ,-		; INPUT STRING SIZE
                                     02CC  6450 		NAM=RIO_INPNAM,-	; ADDRESS OF ASSOCIATED NAME BLOCK
                                     02CC  6500 		DNA=DEFNAM,-		; ADDRESS OF DEFAULT NAME BUFFER
                                     02CC  6550 		DNS=4			; DEFAULT SIZE STARTS AT 4
                                     031C  6600  
                                     031C  6650 RIO_INPNAM::				;
                                     031C  6700 	$NAM	ESA=EXPFNM,-		; EXPANDED NAME BUFFER ADDRESS
                                     031C  6750 		ESS=FILNAMSIZ,-		; MAXIMUM SIZE FOR EXPANDED NAME
                                     031C  6800 		RSA=RSLFNM,-		; RESULTANT NAME
                                     031C  6850 		RSS=FILNAMSIZ,-		; AND SIZE IS SAME
                                     031C  6900  
                                     0354  6950 RIO_INPRAB::				;
                                     0354  7000 	$RAB	RAC=SEQ,-		; SEQUENTIAL ACCESS TO FILE
                                     0354  7050 		ROP=<PMT,CVT>,-		; PROMPT READ AND CONVERT TO UPPER CASE
                                     0354  7100 		RHB=RHBUF,-		; RECORD HEADER BUFFER
                                     0354  7150 		FAB=RIO_INPFAB		; ASSOCIATED FILE ACCESS BLOCK
                                     0398  7200  
                                     0398  7250 ;
                                     0398  7300 ;	PARAMETER FILE INPUT FAB/RAB
                                     0398  7350 ;
                                     0398  7400 PRM_INFAB:			;
                                     0398  7450 	$FAB	FAC=<GET,BIO>,-		; READ ACCESS
                                     0398  7500 		DNA=PRMDEF,-		; DEFAULT NAME
                                     0398  7550 		DNS=PRMDEFSIZ		; DEFAULT NAME SIZE
                                     03E8  7600 PRM_INRAB:			;
                                     03E8  7650 	$RAB	FAB=PRM_INFAB	; ASSOCIATED FAB
                                     042C  7700 ;
                                     042C  7750 ;	PARAMETER FILE OUTPUT RAB/RAB
                                     042C  7800 ;
                                     042C  7850 PRM_OUTFAB:			;
                                     042C  7900 	$FAB	FAC=PUT,-	;
                                     042C  7950 		DNA=PRMDEF,-	; DEFAULT NAME
                                     042C  8000 		DNS=PRMDEFSIZ,-	; DEFAULT NAME LENGTH
                                     042C  8050 		RFM=FIX,-	; FIXED RECORD FORMAT
                                     042C  8100 		MRS=512,-	; 
                                     042C  8150 		FOP=CTG		; CONTIGUOUS
                                     047C  8200 PRM_OUTRAB:			; OUTPUT RAB
                                     047C  8250 	$RAB	FAB=PRM_OUTFAB,-	; ASSOCIATED FAB
                                     047C  8300 		RSZ=512,-		; RECORD SIZE
                                     047C  8350 		RBF=BOO$AB_PRMBUF	; BUFFER ADDRESS
                                     04C0  8400 
                                     04C0  8450 ;
                                     04C0  8500 ;	SWAPFILE FAB  USED TO OBTAIN STARTING LBN OF SWAPFILE
                                     04C0  8550 ;
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page   4
V05             DECLARATIONS                                                                                                     (1)

                                     04C0  8600 SWAPFHCFAB:	$FAB	FAC=GET,-	; FILE ACCESS IS GET (READ)
                                     04C0  8650 		FOP=<UFO,CTG>,-	; USER FILE OPEN, CONTIGUOUS
                                     04C0  8700 		DNA=SWPDEFNAM,-	; DEFAULT FILE NAME STRING ADDRESS
                                     04C0  8750 		DNS=SWPDEFNAMSZ,-	; DEFAULT FILE NAME STRING SIZE
                                     04C0  8800 		RFM=FIX,-	; FIXED RECORD FORMAT
                                     04C0  8850 		MRS=512,-	; MAXIMUM RECORD SIZE OF ONE PAGE
                                     04C0  8900 		XAB=SWAPFHCXAB	; EXTENDED ATTRIBUTE BLOCK
                                     0510  8950 SWAPFHCXAB:	$XABFHC		; EXTENDED ATTRIBUTE BLOCK FOR FILE HEADER
                                     053C  9000 
                        53 59 53 2E  053C  9050 SWPDEFNAM:	.ASCII	/.SYS/		; DEFAULT NAME STRING
                           00000004  0540  9100 SWPDEFNAMSZ=.-SWPDEFNAM		; SIZE OF DEFAULT NAME STRING
                                     0540  9150 
                                     0540  9200 ;
                                     0540  9250 ;	PARSED PARAMETERS FOR SWAP FILE CREATION AND INSTALLATION
                                     0540  9300 ;
                                     0540  9350 BOO$GL_SIZE:			; FILE SIZE
                           00000000  0540  9400 	.LONG	0		;
                                     0544  9450 BOO$GL_IOSIZE:			; I/O SIZE
                           0000007F  0544  9500 	.LONG	127		; DEFAULT
                                     0548  9550 BOO$GL_SFTX:			; SWAPFILE INDEX
                           00000000  0548  9600 	.LONG	0		;
                                     054C  9650 BOO$GL_FLAGS:			; OPTION FLAGS
                           00000000  054C  9700 	.LONG	0		;
                           00000000  0550  9750 BOO$V_PAGEFILE=0		; PAGEFILE INSTALLATION FLAG
                                     0550  9800 
                                     0550  9850 ;
                                     0550  9900 ; OWN STORAGE:
                                     0550  9950 ;
                                     0550 10000  
                                 00000000 10050 	.PSECT	PURE	RD,NOWRT,BYTE
                                     0000 10100  
                                     0000 10150  
               3A 54 55 50 54 55 4F  0000 10200 OUTFNM:	.ASCII	\OUTPUT:\
                                     0007 10250  
                           00000007  0007 10300 	OUTSIZ=.-OUTFNM
                                     0007 10350  
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page   5
V05             RIO$INPUT - RMS INPUT INTERFACE                                                                                  (1)

                                     0007 10450 	.SBTTL	 RIO$INPUT - RMS INPUT INTERFACE
                                     0007 10500 ;++
                                     0007 10550 ; FUNCTIONAL DESCRIPTION:
                                     0007 10600 ;	RIO$INPUT READS A RECORD FROM THE DEVICE OR FILE DESCRIBED BY THE
                                     0007 10650 ;	LOGICAL NAME 'INPUT' INTO THE BUFFER DESCRIBED BY THE ARGUMENTS BUF
                                     0007 10700 ;	AND SIZE.  THE ACTUAL SIZE READ IS RETURNED IN R1.
                                     0007 10750 ;
                                     0007 10800 ; CALLING SEQUENCE:
                                     0007 10850 ;	CALLG	ARGLIST,RIO$INPUT
                                     0007 10900 ;
                                     0007 10950 ; INPUT PARAMETERS:
                                     0007 11000 ;	BUF(AP)	-	BUFFER ADDRESS
                                     0007 11050 ;	SIZE(AP)-	MAXIMUM SIZE OF READ
                                     0007 11100 ;
                                     0007 11150 ; OUTPUT PARAMETERS:
                                     0007 11200 ;	R0	- 	COMPLETION STATUS
                                     0007 11250 ;	R1	-	ACTUAL SIZE OF RECORD IN BYTES
                                     0007 11300 ;
                                     0007 11350 ; COMPLETION STATUS CODES:
                                     0007 11400 ;	STANDARD RMS COMPLETION STATUS CODES
                                     0007 11450 ;
                                     0007 11500 ;--
                           00000008  0007 11550 SIZE=8					; OFFSET TO SIZE ARGUMENT
                                     0007 11600 
                                     0007 11650 	.LIST	MEB
                                     0007 11700  
                                     0007 11750 RIO$INPUT::				; INPUT INTERFACE ROUTINE
                               01FC  0007 11800 	.WORD	^M<R2,R3,R4,R5,R6,R7,R8>; REGISTER SAVE MASK
            52       0354'CF     9E  0009 11850 	MOVAB	W^RIO_INPRAB,R2		; GET INPUT RAB ADDRESS
            22       01DB'CF     E8  000E 11900 	BLBS	W^INP_OPEN,15$		; BR IF INPUT IS ALREADY OPEN
                          00     DD  0013 11950 	PUSHL	#0			; OUTPUT OPEN FAILURE AST
                     02CC'CF     9F  0015 12000 	PUSHAB	W^RIO_INPFAB		; THE FAB
   00000000'EF            02     FB  0019 12050 	CALLS	#2,SYS$OPEN		; OPEN THE FILE
            01            50     E8  0020 12100 	BLBS	R0,10$			; BR IF OPEN OK
                                 04  0023 12150 	RET				; RETURN ERROR STATUS
                                     0024 12200 10$:					;
                                     0024 12250 	$CONNECT (R2)			; CONNECT TO INPUT STREAM
                          62     DF  0024       		PUSHAL	(R2)
   00000000'9F            01     FB  0026       		CALLS	#$$.TMP1,@#SYS$CONNECT
            21            50     E9  002D 12300 	BLBC	R0,30$			; BR IF ERROR
       01DB'CF            01     90  0030 12350 	MOVB	#1,W^INP_OPEN		; MARK INPUT OPEN AND CONNECTED
                                     0035 12400 
         20 A2         08 AC     B0  0035 12450 15$:	MOVW	SIZE(AP),RAB$W_USZ(R2)	; SET SIZE FOR INPUT
         24 A2       000C'CC     D0  003A 12500 	MOVL	BUF(AP),RAB$L_UBF(R2)	; AND BUFFER ADDRESS
                                     0040 12550 	$GET	(R2)			; GET A RECORD	
                          62     DF  0040       		PUSHAL	(R2)
   00000000'9F            01     FB  0042       		CALLS	#$$.TMP1,@#SYS$GET
            01            50     E8  0049 12600 	BLBS	R0,20$			; SUCCESS
                                 04  004C 12650 	RET				; RETURN ERROR STATUS
            51         22 A2     3C  004D 12700 20$:	MOVZWL	RAB$W_RSZ(R2),R1	; GET SIZE OF RECORD
                                 04  0051 12750 30$:	RET				; RETURN
                                     0052 12800 
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page   6
V05             RIO$OUTPUT - RMS OUTPUT INTERFACE ROUTINE                                                                        (1)

                                     0052 12900 	.SBTTL	RIO$OUTPUT - RMS OUTPUT INTERFACE ROUTINE
                                     0052 12950 ;++
                                     0052 13000 ; FUNCTIONAL DESCRIPTION:
                                     0052 13050 ;	RIO$OUTPUT WRITES THE BUFFER DESCRIBED BY THE BUF AND SIZE
                                     0052 13100 ;	ARGUMENTS TO THE DEVICE OR FILE SPECIFIED BY THE LOGICAL NAME
                                     0052 13150 ;	OUTPUT.
                                     0052 13200 ;
                                     0052 13250 ;	RIO$OUTPUTC WRITES THE COUNTED ASCII STRING SPECIFIED BY THE
                                     0052 13300 ;	BUF ARGUMENT TO THE DEVICE OR FILE SPECIFIED BY THE LOGICAL NAME
                                     0052 13350 ;	OUTPUT.
                                     0052 13400 ; 
                                     0052 13450 ; CALLING SEQUENCE:
                                     0052 13500 ;	CALLG	ARGLIST,RIO$OUTPUT/RIO$OUTPUTC
                                     0052 13550 ; 
                                     0052 13600 ; INPUT PARAMETERS:
                                     0052 13650 ;	BUF(AP)	-	ADDRESS OF BUFFER OR ADDRESS OF COUNTED STRING IF
                                     0052 13700 ;			RIO$OUTPUTC.
                                     0052 13750 ;	SIZE(AP)-	NUMBER OF BYTES TO BE OUTPUT (RIO$OUTPUT ONLY)
                                     0052 13800 ;
                                     0052 13850 ; 
                                     0052 13900 ; IMPLICIT INPUTS:
                                     0052 13950 ;	INPUT RAB AND FAB
                                     0052 14000 ; 
                                     0052 14050 ; OUTPUT PARAMETERS:
                                     0052 14100 ;	R0	-	COMPLETION STATUS CODE FROM RMS
                                     0052 14150 ; 
                                     0052 14200 ; COMPLETION CODES:
                                     0052 14250 ;	STANDARD RMS COMPLETION STATUS CODES
                                     0052 14300 ; 
                                     0052 14350 ;--
                                     0052 14400 
                           00000004  0052 14450 BUF=4					; OFFSET TO BUFFER ADDRESS ARGUMENT
                                     0052 14500 
                                     0052 14550 RIO$OUTPUTC::				; OUTPUT COUNTED STRING
                               0000  0052 14600 	.WORD	0			; ENTRY MASK
            51         04 AC     D0  0054 14650 	MOVL	BUF(AP),R1		; GET BUFFER ADDRESS
            7E            81     9A  0058 14700 	MOVZBL	(R1)+,-(SP)		; PUSH SIZE OF WRITE
                          51     DD  005B 14750 	PUSHL	R1			; AND BUFFER ADDRESS
         62'AF            02     FB  005D 14800 	CALLS	#2,B^RIO$OUTPUT		; CALL OUTPUT
                                 04  0061 14850 	RET				; AND RETURN
                                     0062 14900 
                                     0062 14950 RIO$OUTPUT::				; RMS OUTPUT INTERFACE ROUTINE
                               00FC  0062 15000 	.WORD	^M<R2,R3,R4,R5,R6,R7>	; REGISTER SAVE MASK
            52       0288'CF     9E  0064 15050 	MOVAB	W^RIO_OUTRAB,R2		; GET ADDRESS OF OUTPUT RAB
            22       01DC'CF     E8  0069 15100 	BLBS	W^OUTP_OPEN,10$		; BR IF FILE ALREADY OPEN
                     025B'CF     94  006E 15150 	CLRB	W^NAM$B_ESL+RIO_OUTNAM	; ZERO EXPANDED NAME LENGTH
                                     0072 15200 	$CREATE	W^RIO_OUTFAB		; CREATE TYPING FILE
                     0200'CF     DF  0072       		PUSHAL	W^RIO_OUTFAB
   00000000'9F            01     FB  0076       		CALLS	#$$.TMP1,@#SYS$CREATE
            23            50     E9  007D 15250 	BLBC	R0,20$			; BR IF OPEN FAILED
                                     0080 15300 	$CONNECT  (R2)		 	; CONNECT TO OUTPUT STREAM
                          62     DF  0080       		PUSHAL	(R2)
   00000000'9F            01     FB  0082       		CALLS	#$$.TMP1,@#SYS$CONNECT
   000001DC'EF            01     90  0089 15350 	MOVB	#1,OUTP_OPEN		; MARK OUTPUT STREAM OPEN
         28 A2         04 AC     D0  0090 15400 10$:	MOVL	BUF(AP),RAB$L_RBF(R2)	; SET OUTPUT BUFFER
         22 A2         08 AC     B0  0095 15450 	MOVW	SIZE(AP),RAB$W_RSZ(R2)	; AND SIZE
                                     009A 15500 	$PUT	(R2)			; PRINT LINE
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page   7
V05             RIO$OUTPUT - RMS OUTPUT INTERFACE ROUTINE                                                                        (1)

                          62     DF  009A       		PUSHAL	(R2)
   00000000'9F            01     FB  009C       		CALLS	#$$.TMP1,@#SYS$PUT
                                 04  00A3 15550 20$:	RET				; RETURN
                                     00A4 15600 
                                     00A4 15650 
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page   8
V05             BOO$READPROMPT - Prompt and read input string                                                                    (1)

                                     00A4 15750 	.SBTTL	BOO$READPROMPT - Prompt and read input string
                                     00A4 15800 ;++
                                     00A4 15850 ; Functional Description:
                                     00A4 15900 ;	BOO$READPROMPT outputs the specified ASCIZ prompt string on the
                                     00A4 15950 ;	console terminal then checks the count of characters to be read.
                                     00A4 16000 ;	If zero it exits, otherwise it reads the console terminal until
                                     00A4 16050 ;	either a carriage return is encountered or the character count
                                     00A4 16100 ;	is satisfied.  The specified buffer is filled with an ASCIC
                                     00A4 16150 ;	string containing the characters read but not including the
                                     00A4 16200 ;	terminating carriage return.
                                     00A4 16250 ;
                                     00A4 16300 ; Calling Sequence:
                                     00A4 16350 ;	CALLG	ARGLIST,BOO$READPROMPT
                                     00A4 16400 ;
                                     00A4 16450 ; Input Parameters:
                                     00A4 16500 ;	PROMPT(AP)  -  Address of ASCIZ prompt string
                           00000004  00A4 16550 	PROMPT	=  4
                                     00A4 16600 ;
                                     00A4 16650 ;	SIZE(AP)    -  Maximum length of input string
                           00000008  00A4 16700 	SIZE	=  8
                                     00A4 16750 ;			Note: if size is zero, then nothing is read
                                     00A4 16800 ;			      and only the prompt string is written.
                                     00A4 16850 ;
                                     00A4 16900 ;	BUF(AP)     -  Address of input buffer
                           0000000C  00A4 16950 	BUF	=  12
                                     00A4 17000 ;
                                     00A4 17050 ; Output Parameters:
                                     00A4 17100 ;	R0 - Completion status code (always SS$_NORMAL)
                                     00A4 17150 ;
                                     00A4 17200 ;	Buffer located by BUF(AP) will be filled with the string
                                     00A4 17250 ;	read as an ASCIC string.
                                     00A4 17300 ;
                                     00A4 17350 ;--
                                     00A4 17400 	.LIST	MEB			; Show macro expansions
                                     00A4 17450 BOO$READPROMPT::			;
                               00FC  00A4 17500 	.WORD	^M<R2,R3,R4,R5,R6,R7>	;
       FA00 8F            00     3A  00A6 17550 	LOCC	#0,#64000,@PROMPT(AP)	; FIND END OF PROMPT STRING
                       04 BC         00AB       
            51         04 AC     C3  00AD 17600 	SUBL3	PROMPT(AP),R1,R7	; COMPUTE CHARACTER COUNT
                          57         00B1       
            52       0354'CF     9E  00B2 17650 	MOVAB	W^RIO_INPRAB,R2		; GET INPUT RAB ADDRESS
            22       01DB'CF     E8  00B7 17700 	BLBS	W^INP_OPEN,15$		; BR IF INPUT IS ALREADY OPEN
                          00     DD  00BC 17750 	PUSHL	#0			; OUTPUT OPEN FAILURE AST
                     02CC'CF     9F  00BE 17800 	PUSHAB	W^RIO_INPFAB		; THE FAB
   00000000'EF            02     FB  00C2 17850 	CALLS	#2,SYS$OPEN		; OPEN THE FILE
            01            50     E8  00C9 17900 	BLBS	R0,10$			; BR IF OPEN OK
                                 04  00CC 17950 	RET				; RETURN ERROR STATUS
                                     00CD 18000 10$:					;
                                     00CD 18050 	$CONNECT (R2)			; CONNECT TO INPUT STREAM
                          62     DF  00CD       		PUSHAL	(R2)
   00000000'9F            01     FB  00CF       		CALLS	#$$.TMP1,@#SYS$CONNECT
            3E            50     E9  00D6 18100 	BLBC	R0,30$			; BR IF ERROR
       01DB'CF            01     90  00D9 18150 	MOVB	#1,W^INP_OPEN		; MARK INPUT OPEN AND CONNECTED
         20 A2         08 AC     B0  00DE 18200 15$:	MOVW	SIZE(AP),RAB$W_USZ(R2)	; SET SIZE FOR INPUT
                          4F     13  00E3 18250 	BEQL	NOREAD			; IF NO BUFFER THEN NO READ
         34 A2            57     90  00E5 18300 	MOVB	R7,RAB$B_PSZ(R2)	; SET SIZE FOR PROMPT
         30 A2         04 AC     D0  00E9 18350 	MOVL	PROMPT(AP),RAB$L_PBF(R2); AND PROMPT ADDRESS
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page   9
V05             BOO$READPROMPT - Prompt and read input string                                                                    (1)

         0C AC            01     C1  00EE 18400 	ADDL3	#1,BUF(AP),RAB$L_UBF(R2); AND BUFFER ADDRESS
                       24 A2         00F2       
                       0C BC     94  00F4 18450 	CLRB	@BUF(AP)		; INITIALIZE COUNT FOR READ STRING
            50       0000'CF     7D  00F7 18500 	MOVQ	W^BOO$GQ_CMDESC,R0	; GET COMMAND STRING DESCRIPTOR
                          50     D5  00FC 18550 	TSTL	R0			; IS THERE ANY COMMAND STRING
                          2C     19  00FE 18600 	BLSS	50$			; NO, ALREADY USED IT
                          16     14  0100 18650 	BGTR	40$			; YES, USE IT AS RECORD
                                     0102 18700 	$GET	(R2)			; GET A RECORD	
                          62     DF  0102       		PUSHAL	(R2)
   00000000'9F            01     FB  0104       		CALLS	#$$.TMP1,@#SYS$GET
            01            50     E8  010B 18750 	BLBS	R0,20$			; SUCCESS
                                 04  010E 18800 	RET				; RETURN ERROR STATUS
            51         22 A2     3C  010F 18850 20$:	MOVZWL	RAB$W_RSZ(R2),R1	; GET SIZE OF RECORD
         0C BC            51     33  0113 18900 	CVTWB	R1,@BUF(AP)		; RETURN SIZE OF RECORD
                                 04  0117 18950 30$:	RET				; RETURN
            53         0C AC     D0  0118 19000 40$:	MOVL	BUF(AP),R3		; GET BUFFER ADDRESS
            83            50     33  011C 19050 	CVTWB	R0,(R3)+		; SET COUNT FOR BUFFER
            61            50     28  011F 19100 	MOVC3	R0,(R1),(R3)		; COPY COMMAND STRING
                          63         0122       
            50            01     D0  0123 19150 	MOVL	#1,R0			; SET SUCCESS STATUS
       0000'CF            01     CE  0126 19200 	MNEGL	#1,W^BOO$GQ_CMDESC	; MARK AS USED
                                 04  012B 19250 	RET				;
            50   00000000'8F     D0  012C 19300 50$:	MOVL	#RMS$_EOF,R0		; GIVE END OF FILE STATUS
                                 04  0133 19350 	RET				; AND RETURN
                                     0134 19400 NOREAD:					;
            52       0288'CF     9E  0134 19450 	MOVAB	W^RIO_OUTRAB,R2		; GET ADDRESS OF OUTPUT RAB
            22       01DC'CF     E8  0139 19500 	BLBS	W^OUTP_OPEN,10$		; BR IF FILE ALREADY OPEN
                     025B'CF     94  013E 19550 	CLRB	W^NAM$B_ESL+RIO_OUTNAM	; ZERO EXPANDED NAME LENGTH
                                     0142 19600 	$CREATE	W^RIO_OUTFAB		; CREATE TYPING FILE
                     0200'CF     DF  0142       		PUSHAL	W^RIO_OUTFAB
   00000000'9F            01     FB  0146       		CALLS	#$$.TMP1,@#SYS$CREATE
            22            50     E9  014D 19650 	BLBC	R0,20$			; BR IF OPEN FAILED
                                     0150 19700 	$CONNECT  (R2)		 	; CONNECT TO OUTPUT STREAM
                          62     DF  0150       		PUSHAL	(R2)
   00000000'9F            01     FB  0152       		CALLS	#$$.TMP1,@#SYS$CONNECT
   000001DC'EF            01     90  0159 19750 	MOVB	#1,OUTP_OPEN		; MARK OUTPUT STREAM OPEN
         28 A2         04 AC     D0  0160 19800 10$:	MOVL	PROMPT(AP),RAB$L_RBF(R2); SET OUTPUT BUFFER
         22 A2            57     B0  0165 19850 	MOVW	R7,RAB$W_RSZ(R2)	; AND SIZE
                                     0169 19900 	$PUT	(R2)			; PRINT LINE
                          62     DF  0169       		PUSHAL	(R2)
   00000000'9F            01     FB  016B       		CALLS	#$$.TMP1,@#SYS$PUT
                                 04  0172 19950 20$:	RET				; RETURN
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page  10
V05             BOO$FILOPEN - Routine to open input file                                                                         (1)

                                     0173 20050 	.SBTTL	BOO$FILOPEN - Routine to open input file
                                     0173 20100 ;
                                     0173 20150 ; Input Parameters:
                                     0173 20200 ;	R7 - Address of file name descriptor
                                     0173 20250 ; Output Parameters:
                                     0173 20300 ;	R0 - Completion status
                                     0173 20350 ;	R8 - RAB address
                                     0173 20400 ;
                                     0173 20450 BOO$FILOPEN::				;
            58       0398'CF     9E  0173 20500 	MOVAB	W^PRM_INFAB,R8		; Get FAB address base
         34 A8            67     90  0178 20550 	MOVB	(R7),FAB$B_FNS(R8)	; Set size of file name
         2C A8         04 A7     D0  017C 20600 	MOVL	4(R7),FAB$L_FNA(R8)	; and address of name string
                                     0181 20650 	$CLOSE	FAB=(R8)		; Close if open
                          68     DF  0181       		PUSHAL	(R8)
   00000000'9F            01     FB  0183       		CALLS	#$$.TMP1,@#SYS$CLOSE
                                     018A 20700 	$OPEN	FAB=(R8)		; Open file for read
                          68     DF  018A       		PUSHAL	(R8)
   00000000'9F            01     FB  018C       		CALLS	#$$.TMP1,@#SYS$OPEN
            19            50     E8  0193 20750 	BLBS	R0,10$			; Continue if successful
                          FE67'  30  0196 20800 	BSBW	BOO$FACMSG		; 
20 74 6F 6E 20 65 6C 69 46 2D 45 2D  0199 20850 	.ASCIZ	\-E-File not found\
                  00 64 6E 75 6F 66  01A5       
            50            02     CE  01AB 20900 	MNEGL	#2,R0			; Return failure
                                 05  01AE 20950 	RSB				;
            58       03E8'CF     9E  01AF 21000 10$:	MOVAB	W^PRM_INRAB,R8		; Get RAB address
                                     01B4 21050 	$CONNECT RAB=(R8)		; Connect record stream
                          68     DF  01B4       		PUSHAL	(R8)
   00000000'9F            01     FB  01B6       		CALLS	#$$.TMP1,@#SYS$CONNECT
            58            01     D0  01BD 21100 	MOVL	#1,R8			; Return starting virtual block
                                 05  01C0 21150 	RSB				;
                                     01C1 21200 
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page  11
V05             BOO$READFILE - Read parameter file                                                                               (1)

                                     01C1 21300 	.SBTTL	BOO$READFILE - Read parameter file
                                     01C1 21350 ;
                                     01C1 21400 ; Input Parameters:
                                     01C1 21450 ;	R6 - Buffer address
                                     01C1 21500 ;	R8 - VBN
                                     01C1 21550 ;	R9 - Count of pages to read
                                     01C1 21600 ;
                                     01C1 21650 ; Output Parameters:
                                     01C1 21700 ;	R0 - Completion status
                                     01C1 21750 ;
                                     01C1 21800 BOO$READFILE::				;
            51   000003E8'EF     9E  01C1 21850 	MOVAB	PRM_INRAB,R1		; Get address of input RAB
         20 A1       0200 8F     B0  01C8 21900 	MOVW	#512,RAB$W_USZ(R1)	; Set record size
         24 A1            56     D0  01CE 21950 	MOVL	R6,RAB$L_UBF(R1)	; Set buffer address
         38 A1            58     D0  01D2 22000 	MOVL	R8,RAB$L_BKT(R1)	; Set VBN to read
                                     01D6 22050 	$READ	RAB=(R1)		;
                          61     DF  01D6       		PUSHAL	(R1)
   00000000'9F            01     FB  01D8       		CALLS	#$$.TMP1,@#SYS$READ
            30            50     E8  01DF 22100 	BLBS	R0,10$			;
   00000000'8F            50     D1  01E2 22150 	CMPL	R0,#RMS$_EOF		; Is it end of file?
                          31     13  01E9 22200 	BEQL	20$			; Branch if yes
                          FE12'  30  01EB 22250 	BSBW	BOO$FACMSG		; Output error message
61 65 72 20 72 6F 72 72 45 2D 45 2D  01EE 22300 	.ASCIZ	\-E-Error reading parameter file\
74 65 6D 61 72 61 70 20 67 6E 69 64  01FA       
            00 65 6C 69 66 20 72 65  0206       
            50            02     CE  020E 22350 	MNEGL	#2,R0			; Set error status
                                 05  0211 22400 	RSB				;  and return
            56       0200 C6     9E  0212 22450 10$:	MOVAB	512(R6),R6		; Advance buffer pointer
                          58     D6  0217 22500 	INCL	R8			; and block number
            A5            59     F5  0219 22550 	SOBGTR	R9,BOO$READFILE		; Read all required blocks
            50            01     3C  021C 22600 20$:	MOVZWL	#1,R0			; Return success
                                 05  021F 22650 	RSB				;
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page  12
V05             BOO$WRTFILE - Routine to write parameter file                                                                    (1)

                                     0220 22750 	.SBTTL	BOO$WRTFILE - Routine to write parameter file
                                     0220 22800 ;
                                     0220 22850 ; Input parameters:
                                     0220 22900 ;	TPA$L_TOKENCNT(AP) - SIZE OF FILE NAME
                                     0220 22950 ;	TPA$L_TOKENPTR(AP) - ADDRESS OF FILE NAME
                                     0220 23000 ;
                                     0220 23050 ; Output Parameters:
                                     0220 23100 ;	R0 - Completion status code
                                     0220 23150 ;
                                     0220 23200 BOO$WRTFILE::				;
                               03FC  0220 23250 	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9>	;
            57       042C'CF     9E  0222 23300 	MOVAB	W^PRM_OUTFAB,R7		; Get FAB address
         2C A7         14 AC     D0  0227 23350 	MOVL	TPA$L_TOKENPTR(AP),FAB$L_FNA(R7); Set into FAB
         34 A7         10 AC     90  022C 23400 	MOVB	TPA$L_TOKENCNT(AP),FAB$B_FNS(R7); and set size of name
            59       0000'CF     9E  0231 23450 	MOVAB	W^BOO$A_PRMBLK,R9	; Get base of parameter blocks
            58       0000'CF     9E  0236 23500 	MOVAB	W^BOO$AB_PRMBUF,R8	; And set base of buffer
   00000000'EF            20     28  023B 23550 	MOVC3	#32,EXE$GT_STARTUP,(R8)	; Copy name of startup file
                          68         0242       
            50            58     D0  0243 23600 	MOVL	R8,R0			; Save base of buffer
            58            20     C0  0246 23650 	ADDL	#32,R8			; Advance buffer pointer
                          69     D5  0249 23700 5$:	TSTL	(R9)			; Check for end of buffer
                          31     13  024B 23750 	BEQL	8$			; Yes, write file
            88         14 A9     7D  024D 23800 	MOVQ	PRM$T_NAME(R9),(R8)+	; Copy name
            88         1C A9     7D  0251 23850 	MOVQ	PRM$T_NAME+8(R9),(R8)+	; string to buffer
            51         13 A9     9A  0255 23900 	MOVZBL	PRM$B_POS(R9),R1	; Get position
         12 A9            51     EE  0259 23950 	EXTV	R1,PRM$B_SIZE(R9),@PRM$L_ADDR(R9),R2	; Extract value
            52         00 B9         025D       
         10 A9       1000 8F     B3  0260 24000 	BITW	#PRM$M_NEG,PRM$W_FLAGS(R9)	; Should it be negated?
                          03     13  0266 24050 	BEQL	7$			; No
            52            52     CE  0268 24100 	MNEGL	R2,R2			; Yes, 
         12 A9            01     91  026B 24150 7$:	CMPB	#1,PRM$B_SIZE(R9)	; Is it a single bit?
                          05     12  026F 24200 	BNEQ	6$			; No
            01            00     EF  0271 24250 	EXTZV	#0,#1,R2,R2		; Convert bit value to unsigned form
            52            52         0274       
            88            52     D0  0276 24300 6$:	MOVL	R2,(R8)+		; Put value in buffer
            59            30     C0  0279 24350 	ADDL	#PRM$C_LENGTH,R9	; Next parameter
                          CB     11  027C 24400 	BRB	5$			;
                          88     D4  027E 24450 8$:	CLRL	(R8)+			; Mark end of buffer
            58            50     C2  0280 24500 	SUBL	R0,R8			; Size of buffer
            58       01FF C8     9E  0283 24550 	MOVAB	511(R8),R8		; Round to page bound
            58         F7 8F     78  0288 24600 	ASHL	#-9,R8,R8		; Compute file size in pages
                          58         028C       
         10 A7            58     D0  028D 24650 	MOVL	R8,FAB$L_ALQ(R7)	; Set size of file to create
                                     0291 24700 	$CREATE	FAB=(R7)		; Create and open file
                          67     DF  0291       		PUSHAL	(R7)
   00000000'9F            01     FB  0293       		CALLS	#$$.TMP1,@#SYS$CREATE
            27            50     E8  029A 24750 	BLBS	R0,10$			; Continue if success
                          FD60'  30  029D 24800 	BSBW	BOO$FACMSG		; Output error message
6F 74 20 65 6C 62 61 6E 55 2D 45 2D  02A0 24850 	.ASCIZ	\-E-Unable to create Parameter file\
61 72 61 50 20 65 74 61 65 72 63 20  02AC       
   00 65 6C 69 66 20 72 65 74 65 6D  02B8       
                                 04  02C3 24900 	RET				;
                                     02C4 24950 10$:	$CONNECT RAB=PRM_OUTRAB		; Connect output RAB
                 0000047C'EF     DF  02C4       		PUSHAL	PRM_OUTRAB
   00000000'9F            01     FB  02CA       		CALLS	#$$.TMP1,@#SYS$CONNECT
            55       047C'CF     9E  02D1 25000 	MOVAB	W^PRM_OUTRAB,R5		; Get base address of output RAB
         28 A5       0000'CF     9E  02D6 25025 	MOVAB	W^BOO$AB_PRMBUF,RAB$L_RBF(R5)	; Set base of buffer
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page  13
V05             BOO$WRTFILE - Routine to write parameter file                                                                    (1)

                                     02DC 25050 20$:	$PUT	RAB=(R5)		; Write one block
                          65     DF  02DC       		PUSHAL	(R5)
   00000000'9F            01     FB  02DE       		CALLS	#$$.TMP1,@#SYS$PUT
         28 A5   00000200 8F     C0  02E5 25100 	ADDL	#512,RAB$L_RBF(R5)	; Advance buffer pointer
            EC            58     F5  02ED 25150 	SOBGTR	R8,20$			; Do them all
                                     02F0 25200 	$CLOSE	FAB=(R7)		; 
                          67     DF  02F0       		PUSHAL	(R7)
   00000000'9F            01     FB  02F2       		CALLS	#$$.TMP1,@#SYS$CLOSE
                                 04  02F9 25250 	RET				;
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page  14
V05             BOO$SWPCREATE - CREATE SWAP OR PAGING FILE                                                                       (1)

                                     02FA 25350 	.SBTTL	BOO$SWPCREATE - CREATE SWAP OR PAGING FILE
                                     02FA 25400 ;++
                                     02FA 25450 ; FUNCTIONAL DESCRIPTION:
                                     02FA 25500 ;	BOO$SWPCREATE IS CALLED TO IMPLEMENT THE CREATE COMMAND IN THE SYSGEN
                                     02FA 25550 ;	UTILITY.  THIS COMMAND IS USED TO CREATE DUMP,SWAP AND PAGING FILES.
                                     02FA 25600 ;
                                     02FA 25650 ; INPUT PARAMETERS:
                                     02FA 25700 ;	TPA$L_NUMBER(AP) - SIZE OF FILE TO CREATE IN BLOCKS
                                     02FA 25750 ;
                                     02FA 25800 ; OUTPUT PARAMETERS:
                                     02FA 25850 ;	R0 - COMPLETION STATUS CODE
                                     02FA 25900 ;--
                                     02FA 25950 BOO$CREATE::				;
                               00FC  02FA 26000 	.WORD	^M<R2,R3,R4,R5,R6,R7>	; SAVE R2-R7
            57       04C0'CF     DE  02FC 26050 	MOVAL	W^SWAPFHCFAB,R7		; GET FAB ADDRESS
         10 A7         1C AC     D0  0301 26100 	MOVL	TPA$L_NUMBER(AP),FAB$L_ALQ(R7); SET ALLOCATION REQUEST SIZE
         04 A7            14     E2  0306 26150 	BBSS	#FAB$V_CTG,FAB$L_FOP(R7),10$; SET CONTIGUOUS
                          00         030A       
                                     030B 26200 10$:	$CREATE	FAB=(R7)		; OPEN AND CREATE FILE
                          67     DF  030B       		PUSHAL	(R7)
   00000000'9F            01     FB  030D       		CALLS	#$$.TMP1,@#SYS$CREATE
            1D            50     E8  0314 26250 	BLBS	R0,20$			; CONTINUE IF NO ERROR
                                     0317 26300 	ERROR	<-E-Unable to create file>;
                          FCE6'  30  0317       	BSBW	BOO$FACMSG		;
6F 74 20 65 6C 62 61 6E 55 2D 45 2D  031A       	.ASCIZ	/-E-Unable to create file/			;
65 6C 69 66 20 65 74 61 65 72 63 20  0326       
                                 00  0332       
                                 04  0333 26350 	RET				;
                                     0334 26400 20$:	$QIOW_S	CHAN=FAB$L_STV(R7),-	; ZERO FIRST LONGWORDS IN FILE
                                     0334 26450 		FUNC=#IO$_WRITEVBLK,-	; WRITE VIRUAL BLOCK
                                     0334 26500 		P1=W^ZEROES,-		; ADDRESS OF ZEROES
                                     0334 26550 		P2=#512,-		; ONE PAGE
                                     0334 26600 		P3=#1			; FIRST BLOCK OF FILE
                          7E     7C  0334       		CLRQ	-(SP)
                          00     DD  0336       		PUSHL	#0
                          01     DD  0338       		PUSHL	#1
                 00000200 8F     DD  033A       		PUSHL	#512
                     01DD'CF     DF  0340       		PUSHAL	W^ZEROES
                          7E     7C  0344       		CLRQ	-(SP)
                          00     DD  0346       		PUSHL	#0
            7E       0000'8F     3C  0348       		MOVZWL	#IO$_WRITEVBLK,-(SP)
            7E         0C A7     3C  034D       		MOVZWL	FAB$L_STV(R7),-(SP)
                          00     DD  0351       		PUSHL	#0
   00000000'GF            0C     FB  0353       		CALLS	#12,G^SYS$QIOW
                                     035A 26650 	$DASSGN_S	CHAN=FAB$L_STV(R7)	; DEASSIGN CHANNEL
            7E         0C A7     3C  035A       		MOVZWL	FAB$L_STV(R7),-(SP)
   00000000'GF            01     FB  035E       		CALLS	#1,G^SYS$DASSGN
            50            01     D0  0365 26700 	MOVL	#1,R0			; RETURN SUCCESS
                                 04  0368 26750 	RET				;
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page  15
V05             INSTALL SWAP FILE                                                                                                (1)

                                     0369 26850 	.SBTTL	INSTALL SWAP FILE
                                     0369 26900 ;
                                     0369 26950 ;	INSTALL	SWAP FILE
                                     0369 27000 ;
                               00FC  0369 27050 BOO$INSTALL::	.WORD	^M<R2,R3,R4,R5,R6,R7>	; ENTRY MASK
            57       04C0'CF     DE  036B 27100 	MOVAL	W^SWAPFHCFAB,R7		; GET BASE OF FAB
            56   00000000'EF     DE  0370 27150 	MOVAL	MMG$A_SYSPARAM,R6	; BASE ADDRESS FOR RUNNING PARAMETERS
         04 A7            14     E5  0377 27200 	BBCC	#FAB$V_CTG,FAB$L_FOP(R7),10$	; CLEAR CONTIG FLAG
                          00         037B       
                                     037C 27250 10$:	$OPEN	FAB=(R7)		; OPEN FILE FOR INSTALL
                          67     DF  037C       		PUSHAL	(R7)
   00000000'9F            01     FB  037E       		CALLS	#$$.TMP1,@#SYS$OPEN
            1A            50     E8  0385 27300 	BLBS	R0,20$			; CONTINUE IF NO ERROR
                                     0388 27350 	ERROR	<-E-Unable to open file>
                          FC75'  30  0388       	BSBW	BOO$FACMSG		;
6F 74 20 65 6C 62 61 6E 55 2D 45 2D  038B       	.ASCIZ	/-E-Unable to open file/			;
   00 65 6C 69 66 20 6E 65 70 6F 20  0397       
                                     03A2 27400 20$:					;
   0000054C'EF            00     E0  03A2 27450 	BBS	#BOO$V_PAGEFILE,BOO$GL_FLAGS,30$	; BR IF INSTALLING PAGEFILE
                          0E         03A9       
                                     03AA 27500 	$CMKRNL_S	W^SIP_INITSWPFIL;
                          00     DD  03AA       		PUSHL	#0
                     046E'CF     DF  03AC       		PUSHAL	W^SIP_INITSWPFIL
   00000000'GF            02     FB  03B0       		CALLS	#2,G^SYS$CMKRNL
                                 04  03B7 27550 	RET				;
                                 B1  03B8 27600 30$:	CMPW	W^BOO$GL_SFTX,-		;
       0000'C6       0548'CF         03B9 27650 		<SGN$GW_PFLIBAS-EXE$A_SYSPARAM>(R6); CHECK FOR PAGE FILE INDEX
                          1C     18  03BF 27700 	BGEQ	35$			; YES, OK
                                     03C1 27750 	ERROR	<-E-Not a page file index>; COMPLAIN
                          FC3C'  30  03C1       	BSBW	BOO$FACMSG		;
67 61 70 20 61 20 74 6F 4E 2D 45 2D  03C4       	.ASCIZ	/-E-Not a page file index/			;
78 65 64 6E 69 20 65 6C 69 66 20 65  03D0       
                                 00  03DC       
                                     03DD 27800 35$:	$CMKRNL_S	W^INITPGFIL	; INITIALIZE PAGEFILE
                          00     DD  03DD       		PUSHL	#0
                     03EB'CF     DF  03DF       		PUSHAL	W^INITPGFIL
   00000000'GF            02     FB  03E3       		CALLS	#2,G^SYS$CMKRNL
                                 04  03EA 27850 	RET				;
                                     03EB 27900 INITPGFIL:				;
                               01FC  03EB 27950 	.WORD	^M<R2,R3,R4,R5,R6,R7,R8>; ENTRY MASK
            57       04C0'CF     DE  03ED 28000 	MOVAL	W^SWAPFHCFAB,R7		; GET ADDRESS OF FAB
            56         0C A7     CE  03F2 28050 	MNEGL	FAB$L_STV(R7),R6	; GET CHANNEL NUMBER AND INVERT
            56   00000000'9F     C0  03F6 28100 	ADDL	@#CTL$GL_CCBBASE,R6	; COMPUTE BASE OF CHANNEL
            55         04 A6     D0  03FD 28150 	MOVL	CCB$L_WIND(R6),R5	; GET WINDOW POINTER
       0520'CF            01     C3  0401 28200 	SUBL3	#1,W^SWAPFHCXAB+XAB$L_EBK,R0 ; GET SIZE OF SWAP FILE
                          50         0406       
            58       0548'CF     D0  0407 28250 	MOVL	W^BOO$GL_SFTX,R8	; GET SWAP FILE INDEX
            53   00000000'FF48   D0  040C 28300 	MOVL	@MMG$GL_PAGSWPVC[R8],R3	; AND GET BASE OF PFL BLOCK
                       0C A3     D5  0414 28350 	TSTL	PFL$L_WINDOW(R3)	; TEST FOR FREE
                          03     13  0417 28400 	BEQL	5$			; CONTINUE IF NOT IN USE
                          50     D4  0419 28450 	CLRL	R0			; SET ERROR CODE
                                 04  041B 28500 	RET				;
         0C A3            55     D0  041C 28550 5$:	MOVL	R5,PFL$L_WINDOW(R3)	; SET WINDOW ADDRESS
                       10 A3     D4  0420 28600 	CLRL	PFL$L_VBN(R3)		; CALCULATE STARTING VBN - 1
            50            08     C6  0423 28650 	DIVL	#8,R0			; FIND NUMBER OF BYTES IN ALLOCATION MAP
            50   FFF80000 8F     CA  0426 28700 	BICL	#^C<PTE$M_PGFLVB @-3>,R0 ; GUARANTEE THAT PAGE FILE SMALL ENOUGH
         14 A3            50     D0  042D 28750 	MOVL	R0,PFL$L_BITMAPSIZ(R3)	; SET RESULTANT BITMAP SIZE IN BYTES
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page  16
V05             INSTALL SWAP FILE                                                                                                (1)

            50            08     C5  0431 28800 	MULL3	#8,R0,PFL$L_FREPAGCNT(R3) ; CALCULATE NUMBER OF FREE PAGES - 1
                       18 A3         0434       
                       18 A3     D7  0436 28850 	DECL	PFL$L_FREPAGCNT(R3)	;
                          09     BB  0439 28900 	PUSHR	#^M<R0,R3>		; SAVE PAGE FILE CB ADR AND COUNT
            50            0D     C1  043B 28950 	ADDL3	#13,R0,R1		; COMPUTE SIZE TO ALLOCATE FOR BITMAP
                          51         043E       
                 00000000'EF     16  043F 29000 	JSB	EXE$ALONONPAGED		; ALLOCATE  BLOCK
            01            50     E8  0445 29050 	BLBS	R0,15$			; BRANCH IF ALLOCATED SUCCESSFULLY
                                 04  0448 29100 	RET				; RETURN ERROR
                          09     BA  0449 29150 15$:	POPR	#^M<R0,R3>		; RECOVER PGFIL CONTROL BLOCK ADR, COUNT
         08 A2            51     B0  044B 29200 	MOVW	R1,8(R2)		; SET SIZE OF BLOCK
                       04 A6     D4  044F 29250 	CLRL	CCB$L_WIND(R6)		; BREAK LINK FROM CHANNEL TO WINDOW
            52            0C     C0  0452 29300 	ADDL	#12,R2			; POINT TO HEART OF BITMAP
            63            52     D0  0455 29350 	MOVL	R2,PFL$L_BITMAP(R3)	; AND SAVE POINTER IN PAGE FILE BLOCK
                          50     D7  0458 29400 20$:	DECL	R0			; ANY MORE FREE PAGES?
                          05     19  045A 29450 	BLSS	30$			; IF LSS NO
            82            01     8E  045C 29500 	MNEGB	#1,(R2)+		; SET PAGES FREE
                          F7     11  045F 29550 	BRB	20$			;
                                     0461 29600 30$:					; REFERENCE
                          82     94  0461 29650 	CLRB	(R2)+			; MARK END WITH ZERO BYTE
   00000000'EF            58     90  0463 29700 	MOVB	R8,SGN$GB_DEFPGFL-EXE$A_SYSPARAM+MMG$A_SYSPARAM	
                                     046A 29750 					; SET NUMBER OF DEFAULT PAGING FILE
            50            01     D0  046A 29800 	MOVL	#1,R0			; RETURN SUCCESS
                                 04  046D 29850 	RET				;
                                     046E 29900 SIP_INITSWPFIL:				; INIT SWAP FILE
                               00FC  046E 29950 	.WORD	^M<R2,R3,R4,R5,R6,R7>	; NULL ENTRY MASK
            57       04C0'CF     DE  0470 30000 	MOVAL	W^SWAPFHCFAB,R7		; GET BASE OF FAB
            56         0C A7     CE  0475 30050 	MNEGL	FAB$L_STV(R7),R6	; GET CHANNEL NUMBER AND INVERT
            56   00000000'9F     C0  0479 30100 	ADDL	@#CTL$GL_CCBBASE,R6	; COMPUTE BASE OF CHANNEL
            55         04 A6     D0  0480 30150 	MOVL	CCB$L_WIND(R6),R5	; GET WINDOW POINTER
                       04 A6     D4  0484 30200 	CLRL	CCB$L_WIND(R6)		; BREAK LINK FROM CHANNEL TO WINDOW
       0520'CF            01     C3  0487 30250 	SUBL3	#1,W^SWAPFHCXAB+XAB$L_EBK,R0 ; GET SIZE OF SWAP FILE
                          50         048C       
            53   00000020'EF     DE  048D 30300 	MOVAL	SWP$GL_SFTBAS+SFT$C_LENGTH,R3; BASE OF SWAP FILE TABLE
                          63     94  0494 30350 	CLRB	SFT$B_SLTCNT(R3)	; TURN OFF OLD SWAP FILE
            53            20     C0  0496 30400 	ADDL	#SFT$C_LENGTH,R3	; NOW POINT TO NEW SWAPSLOT
                       10 A3     D4  0499 30450 	CLRL	SFT$L_VBN(R3)		; SET BASE VBN FOR SWAP FILE
         0C A3            55     D0  049C 30500 	MOVL	R5,SFT$L_WINDOW(R3)	; SET WINDOW ADDRESS
                                 D0  04A0 30550 	MOVL	<SGN$GL_MAXWSCNT-EXE$A_SYSPARAM+MMG$A_SYSPARAM>,-
            51   00000000'EF         04A1 30600 		R1			; GET MAX WORKING SET SIZE
         02 A3            51     B0  04A7 30650 	MOVW	R1,SFT$W_SLOTSZ(R3)	; SET AS SLOT SIZE
         01 A3       0544'CF     90  04AB 30700 	MOVB	W^BOO$GL_IOSIZE,SFT$B_IOSZ(R3)	; SET I/O SIZE UNIT
            50            51     C6  04B1 30750 	DIVL	R1,R0			; AND COMPUTE NUMBER OF SLOTS (TRUNCATED)
   00000040 8F            50     D1  04B4 30800 	CMPL	R0,#64			; CHECK FOR MAXIMUM
                          04     1B  04BB 30850 	BLEQU	5$			; BR IF IT WILL FIT IN AVAILABLE MAP
            50         40 8F     9A  04BD 30900 	MOVZBL	#64,R0			; ELSE LIMIT TO MAXIMUM
            63            50     90  04C1 30950 5$:	MOVB	R0,SFT$B_SLTCNT(R3)	; SET AS NUMBER OF SLOTS AVAIL
   00000000'EF            50     C0  04C4 31000 	ADDL	R0,SWP$GL_SLOTCNT	; ADD TO TOTAL SLOT COUNT
   00000000'EF            50     A0  04CB 31050 	ADDW	R0,SCH$GW_PROCLIM	; AND PROCESS LIMIT
                          50     D7  04D2 31100 10$:	DECL	R0			; MAKE ZERO ORIGIN BIT NUMBER
                          05     19  04D4 31150 	BLSS	20$			; DONE
         14 A3            50     E3  04D6 31200 	BBCS	R0,SFT$L_BITMAP(R3),10$	; SET ALL AVAILABLE SLOTS
                          F7         04DA       
                                     04DB 31250 20$:					; SWAP FILE INITIALIZATION COMPLETE
            50            01     D0  04DB 31300 	MOVL	#1,R0			; RETURN SUCCESS STATUS
                                 04  04DE 31350 	RET				;
                                     04DF 31400 
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page  17
V05             INSTALL SWAP FILE                                                                                                (1)

                                     04DF 31450 BOO$INSRESET::				; RESET VALUES AND FLAGS
                               0000  04DF 31500 	.WORD	0			; NULL ENTRY MASK
                 0000054C'EF     D4  04E1 31550 	CLRL	BOO$GL_FLAGS		; RESET FLAGS
                 00000540'EF     D4  04E7 31600 	CLRL	BOO$GL_SIZE		; AND FILE SIZE
                 00000548'EF     D4  04ED 31650 	CLRL	BOO$GL_SFTX		; AND SWAPFILE INDEX
                                 04  04F3 31700 	RET				;
                                     04F4 31750 
                                     04F4 31800 BOO$SETPGFL::				; SET PAGEFILE OPTION
                               0000  04F4 31850 	.WORD	0			;
   0000054C'EF            00     E2  04F6 31900 	BBSS	#BOO$V_PAGEFILE,BOO$GL_FLAGS,10$; SET OPTION BIT
                          00         04FD       
                                 04  04FE 31950 10$:	RET				; 
                                     04FF 32000 
                                     04FF 32050 BOO$SETSFTX::				; SET SWAPFILE INDEX
                               0000  04FF 32100 	.WORD	0			;
   00000548'EF         1C AC     D0  0501 32150 	MOVL	TPA$L_NUMBER(AP),BOO$GL_SFTX	;
                                 04  0509 32200 	RET				;
                                     050A 32250 
                                     050A 32300 BOO$FILESIZE::				; SET FILE SIZE
                               0000  050A 32350 	.WORD	0			;
   00000540'EF         1C AC     D0  050C 32400 	MOVL	TPA$L_NUMBER(AP),BOO$GL_SIZE	;
                                 04  0514 32450 	RET				;
                                     0515 32500 
                                     0515 32550 BOO$SETFILNAM::				;
                               0000  0515 32600 	.WORD	0			;
            51   000004C0'EF     9E  0517 32650 	MOVAB	SWAPFHCFAB,R1		;
         34 A1         10 AC     90  051E 32700 	MOVB	TPA$L_TOKENCNT(AP),FAB$B_FNS(R1) ; SET FILE NAME LENGTH
         2C A1         14 AC     D0  0523 32750 	MOVL	TPA$L_TOKENPTR(AP),FAB$L_FNA(R1) ; AND FILE NAME ADDRESS
                                 04  0528 32800 	RET				;
                                     0529 32850 ;
                                     0529 32900 ; REMOVE SWAP FILE USE
                                     0529 32950 ;
                                     0529 33000 BOO$REMOVE::				;
                               00FC  0529 33050 	.WORD	^M<R2,R3,R4,R5,R6,R7>	; ENTRY MASK
                                     052B 33100 	$CMKRNL_S	W^SWPK_REMOVE	; MUST BE IN KERNEL MODE TO REF DATA
                          00     DD  052B       		PUSHL	#0
                     0539'CF     DF  052D       		PUSHAL	W^SWPK_REMOVE
   00000000'GF            02     FB  0531       		CALLS	#2,G^SYS$CMKRNL
                                 04  0538 33150 	RET				; RETURN
                               0004  0539 33200 SWPK_REMOVE:	.WORD	^M<R2>		; NULL ENTRY MASK
            52   00000548'EF     D0  053B 33250 	MOVL	BOO$GL_SFTX,R2		; GET SWAP FILE INDEX
            52   00000000'FF42   D0  0542 33300 	MOVL	@MMG$GL_PAGSWPVC[R2],R2	; POINT TO BASE OF SFT ENTRY
                       14 A2     7C  054A 33350 	CLRQ	SFT$L_BITMAP(R2)	; ZAP AVAILABLE SPACE
            50            01     D0  054D 33400 	MOVL	#1,R0			; SET SUCCESS
                                 04  0550 33450 	RET				;
                                     0551 33500 	.END				;
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page  18
SYMBOL TABLE                                                                                                                     (1)

$$.TAB         = 00000510 R     03   FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            
$$.TABEND      = 0000053C R     03   FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            
$$.TMP         = 00120000            FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            
$$.TMP1        = 00000001            FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            
$$.TMP2        = 00000067            FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            
$$T1           = 00000001            FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            
BIT...         = 0000001A            FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            
BOO$AB_PRMBUF    ********   X   03   FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            
BOO$A_PRMBLK     ********   X   04   FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            
BOO$CREATE       000002FA RG    04   FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            
BOO$FACMSG       ********   X   04   FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            
BOO$FILESIZE     0000050A RG    04   FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            
BOO$FILOPEN      00000173 RG    04   FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            
BOO$GL_FLAGS     0000054C R     03   FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            
BOO$GL_IOSIZE    00000544 R     03   FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            
BOO$GL_SFTX      00000548 R     03   FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            
BOO$GL_SIZE      00000540 R     03   FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            
BOO$GQ_CMDESC    ********   X   04   FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            
BOO$INSRESET     000004DF RG    04   FAB$L_MRN        00000038            FAB$S_ORG      = 00000004            
BOO$INSTALL      00000369 RG    04   FAB$L_NAM        00000028            FAB$S_PPF_RAT  = 00000008            
BOO$READFILE     000001C1 RG    04   FAB$L_SDC        00000044            FAB$V_BIO      = 00000005            
BOO$READPROMPT   000000A4 RG    04   FAB$L_STS        00000008            FAB$V_BLK      = 00000003            
BOO$REMOVE       00000529 RG    04   FAB$L_STV        0000000C            FAB$V_BRO      = 00000006            
BOO$SETFILNAM    00000515 RG    04   FAB$L_XAB        00000024            FAB$V_CBT      = 00000015            
BOO$SETPGFL      000004F4 RG    04   FAB$M_BIO      = 00000020            FAB$V_CIF      = 00000019            
BOO$SETSFTX      000004FF RG    04   FAB$M_BLK      = 00000008            FAB$V_CR       = 00000001            
BOO$V_PAGEFILE = 00000000            FAB$M_BRO      = 00000040            FAB$V_CTG      = 00000014            
BOO$WRTFILE      00000220 RG    04   FAB$M_CBT      = 00200000            FAB$V_DEL      = 00000002            
BUF            = 0000000C            FAB$M_CIF      = 02000000            FAB$V_DFW      = 00000005            
CCB$B_AMOD       00000009            FAB$M_CR       = 00000002            FAB$V_DLT      = 0000000F            
CCB$B_STS        00000008            FAB$M_CTG      = 00100000            FAB$V_DMO      = 0000000C            
CCB$C_LENGTH     00000010            FAB$M_DEL      = 00000004            FAB$V_ESC      = 0000001B            
CCB$K_LENGTH     00000010            FAB$M_DFW      = 00000020            FAB$V_EXE      = 00000007            
CCB$L_DIRP       0000000C            FAB$M_DLT      = 00008000            FAB$V_FTN      = 00000000            
CCB$L_UCB        00000000            FAB$M_DMO      = 00001000            FAB$V_GET      = 00000001            
CCB$L_WIND       00000004            FAB$M_ESC      = 08000000            FAB$V_INP      = 00000013            
CCB$W_IOC        0000000A            FAB$M_EXE      = 00000080            FAB$V_JNL      = 00000016            
CTL$GL_CCBBASE   ********   X   04   FAB$M_FTN      = 00000001            FAB$V_KFO      = 0000001E            
DEFNAM           00000000 R     03   FAB$M_GET      = 00000002            FAB$V_MSE      = 00000004            
EXE$ALONONPAGED  ********   X   04   FAB$M_INP      = 00080000            FAB$V_MXV      = 00000001            
EXE$A_SYSPARAM   ********   X   04   FAB$M_JNL      = 00400000            FAB$V_NAM      = 00000018            
EXE$GT_STARTUP   ********   X   04   FAB$M_KFO      = 40000000            FAB$V_NEF      = 0000000A            
EXPFNM           00000030 R     03   FAB$M_MSE      = 00000010            FAB$V_NFS      = 00000010            
FAB$B_BID        00000000            FAB$M_MXV      = 00000002            FAB$V_NIL      = 00000005            
FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            FAB$V_OFP      = 0000001D            
FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            FAB$V_ORG      = 00000004            
FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            FAB$V_POS      = 00000008            
FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            FAB$V_PPF      = 00000012            
FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            FAB$V_PPF_IND  = 0000000E            
FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            FAB$V_PPF_RAT  = 00000006            
FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            FAB$V_PRN      = 00000002            
FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            FAB$V_PUT      = 00000000            
FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            FAB$V_RCK      = 00000017            
FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            FAB$V_RWC      = 0000000B            
FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            FAB$V_RWO      = 00000007            
FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            FAB$V_SCF      = 0000000E            
FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            FAB$V_SHRDEL   = 00000002            
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page  19
SYMBOL TABLE                                                                                                                     (1)

FAB$V_SHRGET   = 00000001            NAM$M_EXP_TYPE = 00000002            NAM$W_FID_NUM    00000024            
FAB$V_SHRPUT   = 00000000            NAM$M_EXP_VER  = 00000001            NAM$W_FID_RVN    00000028            
FAB$V_SHRUPD   = 00000003            NAM$M_GRP_MBR  = 00080000            NAM$W_FID_SEQ    00000026            
FAB$V_SPL      = 0000000D            NAM$M_HIGHVER  = 00008000            NAM$W_PRV_DID    0000003A            
FAB$V_SQO      = 00000006            NAM$M_LOWVER   = 00004000            NOREAD           00000134 R     04   
FAB$V_SUP      = 00000002            NAM$M_NODE     = 00020000            OUTFNM           00000000 R     04   
FAB$V_TEF      = 0000001C            NAM$M_PPF      = 00010000            OUTNAM           00000130 R     03   
FAB$V_TMD      = 00000004            NAM$M_QUOTED   = 00040000            OUTPNAM          000001CA R     03   
FAB$V_TMP      = 00000003            NAM$M_WILDCARD = 00000100            OUTPNAMSZ      = 00000006            
FAB$V_TRN      = 00000004            NAM$M_WILD_DIR = 00100000            OUTP_OPEN        000001DC R     03   
FAB$V_UFM      = 0000001A            NAM$M_WILD_GRP = 01000000            OUTSIZ         = 00000007            
FAB$V_UFO      = 00000011            NAM$M_WILD_MBR = 02000000            PFL$B_PFC        0000000B            
FAB$V_UPD      = 00000003            NAM$M_WILD_NAME= 00000020            PFL$B_TYPE       0000000A            
FAB$V_UPI      = 00000006            NAM$M_WILD_SFD1= 02000000            PFL$C_LENGTH     00000020            
FAB$V_WCK      = 00000009            NAM$M_WILD_SFD2= 04000000            PFL$K_LENGTH     00000020            
FAB$W_BLS        0000003C            NAM$M_WILD_SFD3= 08000000            PFL$L_BITMAP     00000000            
FAB$W_DEQ        00000014            NAM$M_WILD_SFD4= 10000000            PFL$L_BITMAPSIZ  00000014            
FAB$W_IFI        00000002            NAM$M_WILD_SFD5= 20000000            PFL$L_FREPAGCNT  00000018            
FAB$W_MRS        00000036            NAM$M_WILD_SFD6= 40000000            PFL$L_RESERVCNT  0000001C            
FILNAMSIZ      = 00000080            NAM$M_WILD_SFD7= 80000000            PFL$L_STARTBYTE  00000004            
GBL...         = 00000000            NAM$M_WILD_TYPE= 00000010            PFL$L_VBN        00000010            
INITPGFIL        000003EB R     04   NAM$M_WILD_UFD = 01000000            PFL$L_WINDOW     0000000C            
INPNAM           000001C4 R     03   NAM$M_WILD_VER = 00000008            PFL$W_SIZE       00000008            
INPNAMSZ       = 00000006            NAM$S_DIR_LVLS = 00000003            PRM$B_POS        00000013            
INP_OPEN         000001DB R     03   NAM$T_DVI        00000014            PRM$B_SIZE       00000012            
IO$_WRITEVBLK    ********   X   04   NAM$V_DIR_LVLS = 00000015            PRM$C_BYTE     = 00000008            
MMG$A_SYSPARAM   ********   X   04   NAM$V_EXP_DEV  = 00000007            PRM$C_LENGTH     00000030            
MMG$GL_PAGSWPVC  ********   X   04   NAM$V_EXP_DIR  = 00000006            PRM$C_LONG     = 00000020            
NAM$B_BID        00000000            NAM$V_EXP_NAME = 00000002            PRM$C_WORD     = 00000010            
NAM$B_BLN        00000001            NAM$V_EXP_TYPE = 00000001            PRM$K_LENGTH     00000030            
NAM$B_CURLVL     00000038            NAM$V_EXP_VER  = 00000000            PRM$L_ADDR       00000000            
NAM$B_ESL        0000000B            NAM$V_GRP_MBR  = 00000013            PRM$L_DEFAULT    00000004            
NAM$B_ESS        0000000A            NAM$V_HIGHVER  = 0000000F            PRM$L_MAX        0000000C            
NAM$B_RSL        00000003            NAM$V_LOWVER   = 0000000E            PRM$L_MIN        00000008            
NAM$B_RSS        00000002            NAM$V_NODE     = 00000011            PRM$M_ACP      = 00000008            
NAM$C_BID      = 00000002            NAM$V_PPF      = 00000010            PRM$M_CONTROL  = 00000200            
NAM$C_BLN        00000038            NAM$V_QUOTED   = 00000012            PRM$M_DISPLAY  = 00000100            
NAM$C_BLN_DIRWC  00000050            NAM$V_WILDCARD = 00000008            PRM$M_DYNAMIC  = 00000001            
NAM$C_DVI      = 00000010            NAM$V_WILD_DIR = 00000014            PRM$M_JBC      = 00000010            
NAM$C_MAXRSS   = 00000080            NAM$V_WILD_GRP = 00000018            PRM$M_MAJOR    = 00000400            
NAM$C_MAXRSSLCL= 00000060            NAM$V_WILD_MBR = 00000019            PRM$M_NEG      = 00001000            
NAM$K_BLN        00000038            NAM$V_WILD_NAME= 00000005            PRM$M_PQL      = 00000800            
NAM$K_BLN_DIRWC  00000050            NAM$V_WILD_SFD1= 00000019            PRM$M_RMS      = 00000020            
NAM$L_DIRWCC1    00000040            NAM$V_WILD_SFD2= 0000001A            PRM$M_SPECIAL  = 00000080            
NAM$L_DIRWCC2    00000044            NAM$V_WILD_SFD3= 0000001B            PRM$M_STATIC   = 00000002            
NAM$L_DIRWCC3    00000048            NAM$V_WILD_SFD4= 0000001C            PRM$M_SYS      = 00000040            
NAM$L_DIRWCC4    0000004C            NAM$V_WILD_SFD5= 0000001D            PRM$M_SYSGEN   = 00000004            
NAM$L_DWC        00000038            NAM$V_WILD_SFD6= 0000001E            PRM$T_NAME       00000014            
NAM$L_ESA        0000000C            NAM$V_WILD_SFD7= 0000001F            PRM$T_UNIT       00000024            
NAM$L_FNB        00000034            NAM$V_WILD_TYPE= 00000004            PRM$V_ACP      = 00000003            
NAM$L_RLF        00000010            NAM$V_WILD_UFD = 00000018            PRM$V_CONTROL  = 00000009            
NAM$L_RSA        00000004            NAM$V_WILD_VER = 00000003            PRM$V_DISPLAY  = 00000008            
NAM$L_WCC        00000030            NAM$W_DID        0000002A            PRM$V_DYNAMIC  = 00000000            
NAM$M_DIR_LVLS = 00E00000            NAM$W_DID_NUM    0000002A            PRM$V_JBC      = 00000004            
NAM$M_EXP_DEV  = 00000080            NAM$W_DID_RVN    0000002E            PRM$V_MAJOR    = 0000000A            
NAM$M_EXP_DIR  = 00000040            NAM$W_DID_SEQ    0000002C            PRM$V_NEG      = 0000000C            
NAM$M_EXP_NAME = 00000004            NAM$W_FID        00000024            PRM$V_PQL      = 0000000B            
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page  20
SYMBOL TABLE                                                                                                                     (1)

PRM$V_RMS      = 00000005            PTE$V_PROT     = 0000001B            RAB$M_RLK      = 00080000            
PRM$V_SPECIAL  = 00000007            PTE$V_STX      = 00000000            RAB$M_RNE      = 01000000            
PRM$V_STATIC   = 00000001            PTE$V_TYP0     = 00000016            RAB$M_RNF      = 08000000            
PRM$V_SYS      = 00000006            PTE$V_TYP1     = 0000001A            RAB$M_TMO      = 02000000            
PRM$V_SYSGEN   = 00000002            PTE$V_VALID    = 0000001F            RAB$M_TPT      = 00000002            
PRM$W_FLAGS      00000010            PTE$V_WRT      = 00000012            RAB$M_UIF      = 00000010            
PRMDEF           000001D0 R     03   RAB$B_BID        00000000            RAB$M_ULK      = 00040000            
PRMDEFSIZ      = 0000000B            RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            
PRM_INFAB        00000398 R     03   RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            
PRM_INRAB        000003E8 R     03   RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            
PRM_OUTFAB       0000042C R     03   RAB$B_MBC        00000037            RAB$V_ASY      = 00000000            
PRM_OUTRAB       0000047C R     03   RAB$B_MBF        00000036            RAB$V_BIO      = 0000000B            
PROMPT         = 00000004            RAB$B_PSZ        00000034            RAB$V_CCO      = 0000001F            
PTE$C_EOWN     = 00800000            RAB$B_RAC        0000001E            RAB$V_CVT      = 0000001A            
PTE$C_ER       = 38000000            RAB$B_ROP1       00000005            RAB$V_EOF      = 00000008            
PTE$C_ERKW     = 30000000            RAB$B_ROP2       00000006            RAB$V_FDL      = 00000006            
PTE$C_EW       = 28000000            RAB$B_ROP3       00000007            RAB$V_HSH      = 00000007            
PTE$C_KOWN     = 00000000            RAB$B_TMO        0000001F            RAB$V_KGE      = 00000015            
PTE$C_KR       = 18000000            RAB$C_BID      = 00000001            RAB$V_KGT      = 00000016            
PTE$C_KW       = 10000000            RAB$C_BLN        00000044            RAB$V_LIM      = 0000000E            
PTE$C_NA       = 00000000            RAB$C_KEY      = 00000001            RAB$V_LOA      = 0000000D            
PTE$C_SOWN     = 01000000            RAB$C_RFA      = 00000002            RAB$V_LOC      = 00000010            
PTE$C_SR       = 58000000            RAB$C_SEQ      = 00000000            RAB$V_MAS      = 00000005            
PTE$C_SREW     = 48000000            RAB$K_BLN        00000044            RAB$V_NLK      = 00000014            
PTE$C_SRKW     = 50000000            RAB$L_BKT        00000038            RAB$V_NXR      = 00000017            
PTE$C_SW       = 40000000            RAB$L_CTX        00000018            RAB$V_PMT      = 0000001E            
PTE$C_UOWN     = 01800000            RAB$L_DCT        00000038            RAB$V_PPF_IND  = 0000000E            
PTE$C_UR       = 78000000            RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            
PTE$C_UREW     = 68000000            RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            
PTE$C_URKW     = 70000000            RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            
PTE$C_URSW     = 60000000            RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            
PTE$C_UW       = 20000000            RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            
PTE$M_CRF      = 00010000            RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            
PTE$M_DZRO     = 00020000            RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            
PTE$M_GPTX     = 003FFFFF            RAB$L_STS        00000008            RAB$V_TPT      = 00000001            
PTE$M_MODIFY   = 04000000            RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            
PTE$M_OWN      = 01800000            RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            
PTE$M_PFN      = 001FFFFF            RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            
PTE$M_PGFLVB   = 003FFFFF            RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            
PTE$M_PROT     = 78000000            RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            
PTE$M_TYP0     = 00400000            RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            
PTE$M_TYP1     = 04000000            RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            
PTE$M_VALID    = 80000000            RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            
PTE$M_WRT      = 00040000            RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            
PTE$S_GPTX     = 00000016            RAB$M_KGE      = 00200000            RHBUF            000001B0 R     03   
PTE$S_OWN      = 00000002            RAB$M_KGT      = 00400000            RIO$INPUT        00000007 RG    04   
PTE$S_PFN      = 00000015            RAB$M_LIM      = 00004000            RIO$OUTPUT       00000062 RG    04   
PTE$S_PGFLVB   = 00000016            RAB$M_LOA      = 00002000            RIO$OUTPUTC      00000052 RG    04   
PTE$S_PROT     = 00000004            RAB$M_LOC      = 00010000            RIO_INPFAB       000002CC RG    03   
PTE$S_STX      = 00000010            RAB$M_MAS      = 00000020            RIO_INPNAM       0000031C RG    03   
PTE$V_CRF      = 00000010            RAB$M_NLK      = 00100000            RIO_INPRAB       00000354 RG    03   
PTE$V_DZRO     = 00000011            RAB$M_NXR      = 00800000            RIO_OUTFAB       00000200 RG    03   
PTE$V_GPTX     = 00000000            RAB$M_PMT      = 40000000            RIO_OUTNAM       00000250 RG    03   
PTE$V_MODIFY   = 0000001A            RAB$M_PPF_IND  = 00004000            RIO_OUTRAB       00000288 RG    03   
PTE$V_OWN      = 00000017            RAB$M_PPF_RAT  = 00003FC0            RMS$_EOF         ********   X   04   
PTE$V_PFN      = 00000000            RAB$M_PTA      = 20000000            RSLFNM           000000B0 R     03   
PTE$V_PGFLVB   = 00000000            RAB$M_RAH      = 00000200            SCH$GW_PROCLIM   ********   X   04   
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page  21
SYMBOL TABLE                                                                                                                     (1)

SFT$B_IOSZ       00000001            XAB$B_COD        00000000            
SFT$B_PFC        0000000B            XAB$B_HSZ        00000017            
SFT$B_SLTCNT     00000000            XAB$B_RFO        00000008            
SFT$B_TYPE       0000000A            XAB$C_FHC      = 0000001D            
SFT$C_LENGTH     00000020            XAB$C_FHCLEN     0000002C            
SFT$K_LENGTH     00000020            XAB$K_FHCLEN     0000002C            
SFT$L_BITMAP     00000014            XAB$L_EBK        00000010            
SFT$L_VBN        00000010            XAB$L_HBK        0000000C            
SFT$L_WINDOW     0000000C            XAB$L_NXT        00000004            
SFT$W_SIZE       00000008            XAB$L_RDT0       0000000C            
SFT$W_SLOTSZ     00000002            XAB$L_RDT4       00000010            
SGN$GB_DEFPGFL   ********   X   04   XAB$L_SBN        00000028            
SGN$GL_MAXWSCNT  ********   X   04   XAB$Q_RDT        0000000C            
SGN$GW_PFLIBAS   ********   X   04   XAB$W_DXQ        0000001A            
SIP_INITSWPFIL   0000046E R     04   XAB$W_EBK0       00000010            
SIZE           = 00000008            XAB$W_EBK2       00000012            
SWAPFHCFAB       000004C0 R     03   XAB$W_FFB        00000014            
SWAPFHCXAB       00000510 R     03   XAB$W_HBK0       0000000C            
SWP$GL_SFTBAS    ********   X   04   XAB$W_HBK2       0000000E            
SWP$GL_SLOTCNT   ********   X   04   XAB$W_LRL        0000000A            
SWPDEFNAM        0000053C R     03   XAB$W_MRZ        00000018            
SWPDEFNAMSZ    = 00000004            XAB$W_RVN        00000008            
SWPK_REMOVE      00000539 R     04   ZEROES           000001DD R     03   
SYS$CLOSE        ********  GX   04   
SYS$CMKRNL       ********   X   04   
SYS$CONNECT      ********  GX   04   
SYS$CREATE       ********  GX   04   
SYS$DASSGN       ********   X   04   
SYS$GET          ********  GX   04   
SYS$OPEN         ********  GX   04   
SYS$PUT          ********  GX   04   
SYS$QIOW         ********   X   04   
SYS$READ         ********  GX   04   
TPA$B_MCOUNT     00000007            
TPA$C_LENGTH0    00000024            
TPA$K_COUNT0   = 00000008            
TPA$K_LENGTH0    00000024            
TPA$L_CHAR       00000018            
TPA$L_COUNT      00000000            
TPA$L_NUMBER     0000001C            
TPA$L_OPTIONS    00000004            
TPA$L_PARAM      00000020            
TPA$L_STRINGCNT  00000008            
TPA$L_STRINGPTR  0000000C            
TPA$L_TOKENCNT   00000010            
TPA$L_TOKENPTR   00000014            
TPA$M_ABBREV   = 00000002            
TPA$M_ABBRFM   = 00000004            
TPA$M_AMBIG    = 00010000            
TPA$M_BLANKS   = 00000001            
TPA$V_ABBREV   = 00000001            
TPA$V_ABBRFM   = 00000002            
TPA$V_AMBIG    = 00000010            
TPA$V_BLANKS   = 00000000            
XAB$B_ATR        00000009            
XAB$B_BKZ        00000016            
XAB$B_BLN        00000001            
RMSCONIO        - RMS INPUT/OUTPUT MODULE                        21-AUG-1978 22:29:02   VAX-11 MACRO X0.3-11               Page  22
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000050      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RWDATA           00000550      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT QUAD  
PURE             00000551      04     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
6140. BYTES LEFT IN FREE MEMORY POOL.
460. BYTES OF RECLAIMED MEMORY.
OBJ$:RMSCONIO,LIS$:RMSCONIO/-SP=EXECML$/ML,SRC$:RMSCONIO
38 MLB DIR RDS - 1030 GETS TO DEFINE 50 MACROS. 111 INTER. FILE WRITES. 
