LOGICAL         - LOGICAL NAME DCLS COMMAND EXECUTION            22-AUG-1978 01:20:52   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)     100  ALLOCATE DEVICE
   (1)     143  ASSIGN LOGICAL NAME TO EQUIVALENCE STRING
   (1)     176  DEFINE LOGICAL NAME EQUIVALENCE
   (1)     215  DEALLOCATE DEVICE
   (1)     241  DEASSIGN LOGICAL NAME EQUIVALENCE
   (1)     284  GET LOGICAL NAME TABLE NUMBER
   (1)     318  DELETE SYMBOL FROM SYMBOL TABLE
LOGICAL         - LOGICAL NAME DCLS COMMAND EXECUTION            22-AUG-1978 01:20:52   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	LOGICAL - LOGICAL NAME DCLS COMMAND EXECUTION
                                     0000     2 	.IDENT	/01/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; D. N. CUTLER 31-MAR-77
                                     0000    24 ;
                                     0000    25 ; LOGICAL NAME DCLS COMMAND EXECUTION
                                     0000    26 ;
                                     0000    27 ;	ALLOCATE DEVICE
                                     0000    28 ;	ASSIGN LOGICAL NAME
                                     0000    29 ;	DEALLOCATE DEVICE
                                     0000    30 ;	DEASSIGN LOGICAL NAME
                                     0000    31 ;	DEFINE LOGICAL NAME
                                     0000    32 ;
                                     0000    33 ; MACRO LIBRARY CALLS
                                     0000    34 ;
                                     0000    35  
                                     0000    36 	$CLIDEFQUALASSI			;DEFINE ASSIGN QUALIFIER NUMBERS
                                     0000    37 	$CLIDEFQUALDEAL			;DEFINE DEALLOCATE QUALIFIER NUMBERS
                                     0000    38 	$CLIDEFQUALDEAS			;DEFINE DEASSIGN QUALIFIER NUMBERS
                                     0000    39 	$CLIDEFQUALDEFI			;DEFINE DEFINE QUALIFIER NUMBERS
                                     0000    40 	$CLIDEFQUALDELE			;DEFINE QUALIFIERS FOR DELETE
                                     0000    41 	DEFCMDWRK			;DEFINE WORK AREA OFFSETS
                                     0000    42 	DEFERRCOD			;DEFINE ERROR/STATUS VALUES
                                     0000    43 	DEFSYMTBL			;DEFINE SYMBOL TABLE OFFSETS
                                     0000    44 	DEFPTRDSC			;DEFINE RESULT PARSE DESCRIPTOR FORMAT
                                     0000    45 	$LOGDEF				;DEFINE LOG OFFSETS
                                     0000    46 	$PSLDEF				;DEFINE PROCESSOR STATUS FIELDS
                                     0000    47 	$SSDEF				;DEFINE SYSTEM STATUS VALUES
                                     0000    48  
                                     0000    49 ;
                                     0000    50 ; LOCAL DATA
                                     0000    51 ;
                                     0000    52  
                                 00000000    53 	.PSECT	DCL$ZCODE,BYTE,RD,NOWRT
                                     0000    54 ALLOCATE:				;ALLOCATE TEXT
      44 45 54 41 43 4F 4C 4C 41 20  0000    55 	.ASCII	/ ALLOCATED/		;
                                     000A    56 A:					;
                                     000A    57 SUPERSEDE:				;LOGICAL NAME SUPERSEDED MESSAGE
LOGICAL         - LOGICAL NAME DCLS COMMAND EXECUTION            22-AUG-1978 01:20:52   VAX-11 MACRO X0.3-11               Page   2
01                                                                                                                               (1)

4C 20 53 55 4F 49 56 45 52 50 20 20  000A    58 	.ASCII	/  PREVIOUS LOGICAL NAME ASSIGNMENT REPLACED/ ;
20 45 4D 41 4E 20 4C 41 43 49 47 4F  0016       
52 20 54 4E 45 4D 4E 47 49 53 53 41  0022       
               44 45 43 41 4C 50 45  002E       
                                     0035    59 B:					;
                                     0035    60  
                                     0035    61 ; THE FOLLOWING TABLES ARE USED BY SUBROUTINE TABNUM TO DETERMIN THE
                                     0035    62 ; THE MEANING OF QUALIFIERS FOR THE VARIOUS COMMANDS.  THE TABLE HAS
                                     0035    63 ; AN ENTRY FOR A QUALIFIER THAT MUST BE HANDLED WITH THE LENGTH OF
                                     0035    64 ; THE TABLE AS THE ZEROTH ENTRY AND A VALUE RELATIVE THAT IS INDEXED
                                     0035    65 ; THE THE QUALIFIER CODE NUMBER.  A VALUE OF ZERO INDICATES THAT THE
                                     0035    66 ; QUALIFIER IS THE ALL QUALIFIER. A NEGATIVE VALUE IS THE NEGATIVE
                                     0035    67 ; OF THE MODE TO MAKE LOGICAL NAME ASSIGNMENTS (IE: USER, SUPER).
                                     0035    68 ; A POSITIVE VALUE IS THE TABLE NUMBER (IE: PROCESS, GROUP, SYSTEM) PLUS 1.
                                     0035    69 ;
                           00000000  0035    70 ALL_QUAL = 0				; THE CONTENTS FOR "ALL" IS ZERO
                                     0035    71  
                                     0035    72 	ASSUME	CLI$K_DEAL_ALL	EQ 1	;
                              00 01  0035    73 DEALTBL:.BYTE	1,ALL_QUAL		; TABLE FOR DEALLOCATE
                                     0037    74 DEFITBL:				; TABLE FOR DEFINE
                                 05  0037    75 ASSITBL:.BYTE	5			; SAME AS FOR ASSIGN
                                     0038    76 	ASSUME	CLI$K_ASSI_SYST EQ 1	;
                                     0038    77 	ASSUME	CLI$K_DEFI_SYST EQ 1	;
                                     0038    78 	ASSUME	CLI$K_ASSI_GROU EQ 2	;
                                     0038    79 	ASSUME	CLI$K_DEFI_GROU EQ 2	;
                                     0038    80 	ASSUME	CLI$K_ASSI_PROC EQ 3	;
                                     0038    81 	ASSUME	CLI$K_DEFI_PROC EQ 3	;
                           03 02 01  0038    82 	.BYTE	LOG$C_SYSTEM+1,LOG$C_GROUP+1,LOG$C_PROCESS+1
                                     003B    83 	ASSUME	CLI$K_ASSI_USER EQ 4	;
                                     003B    84 	ASSUME	CLI$K_DEFI_USER EQ 4	;
                                     003B    85 	ASSUME	CLI$K_ASSI_SUPE EQ 5	;
                                     003B    86 	ASSUME	CLI$K_DEFI_SUPE EQ 5	;
                              FE FD  003B    87 	.BYTE	-PSL$C_USER,-PSL$C_SUPER; ACCESS MODE OF ENTRY
                                     003D    88  
                                 06  003D    89 DEASTBL:.BYTE	6			; TABLE FOR DEASSIGN
                                     003E    90 	ASSUME	CLI$K_DEAS_SYST EQ 1	;
                                     003E    91 	ASSUME	CLI$K_DEAS_GROU EQ 2	;
                                     003E    92 	ASSUME	CLI$K_DEAS_PROC EQ 3	;
                           03 02 01  003E    93 	.BYTE	LOG$C_SYSTEM+1,LOG$C_GROUP+1,LOG$C_PROCESS+1
                                     0041    94 	ASSUME	CLI$K_DEAS_ALL	EQ 4	;
                                 00  0041    95 NULTBL:	.BYTE	ALL_QUAL
                                     0042    96 	ASSUME	CLI$K_DEAS_USER EQ 5	;
                                     0042    97 	ASSUME	CLI$K_DEAS_SUPE EQ 6	;
                              FE FD  0042    98 	.BYTE	-PSL$C_USER,-PSL$C_SUPER
LOGICAL         - LOGICAL NAME DCLS COMMAND EXECUTION            22-AUG-1978 01:20:52   VAX-11 MACRO X0.3-11               Page   3
01              ALLOCATE DEVICE                                                                                                  (1)

                                     0044   100 	.SBTTL	ALLOCATE DEVICE
                                     0044   101 ;+
                                     0044   102 ; DCL$ALLOCATE - ALLOCATE DEVICE
                                     0044   103 ;
                                     0044   104 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE ALLOCATE DCLS
                                     0044   105 ; COMMAND.
                                     0044   106 ;
                                     0044   107 ; INPUTS:
                                     0044   108 ;
                                     0044   109 ;	R8 = ADDRESS OF SCRATCH BUFFER DESCRIPTOR.
                                     0044   110 ;	R9 = ADDRESS OF SCRATCH STACK.
                                     0044   111 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     0044   112 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     0044   113 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     0044   114 ;
                                     0044   115 ; OUTPUTS:
                                     0044   116 ;
                                     0044   117 ;	THE SPECIFIED DEVICE IS ALLOCATED AND ASSIGNED THE SPECIFIED LOGICAL
                                     0044   118 ;	NAME. IF THE LOGICAL NAME WAS PREVIOUSLY ASSIGNED, THEN A MESSAGE TO
                                     0044   119 ;	THAT EFFECT IS WRITTEN TO THE OUTPUT STREAM.
                                     0044   120 ;-
                                     0044   121  
                                     0044   122 	.ENABL	LSB
                                     0044   123 DCL$ALLOCATE::				;ALLOCATE DEVICE
            50         FA AF     9E  0044   124 	MOVAB	NULTBL,R0		;SET PROPER QUALIFIER TABLE
                          00CA   30  0048   125 	BSBW	TABNUM			;GET TABLE NUMBER AND COMPRESS DEVICE NAME
         FF A241          3A     91  004B   126 	CMPB	#^A/:/,-1(R2)[R1]	;DEVICE NAME END WITH A COLON?
                          02     12  0050   127 	BNEQ	5$			;IF NEQ NO
                          69     D7  0052   128 	DECL	(R9)			;REDUCE LENGTH OF DEVICE NAME
                                     0054   129 5$:	$ALLOC_S (R9),(R8),(R8)		;ALLOCATE DEVICE
            78            50     E9  0063   130 	BLBC	R0,50$			;IF LBC ALLOCATION FAILURE
            79            68     7D  0066   131 	MOVQ	(R8),-(R9)		;SAVE DEVICE NAME DESCRIPTOR
            68            88     C1  0069   132 	ADDL3	(R8)+,(R8),R0		;CALCULATE ADDRESS TO APPEND TEXT
                          50         006C       
         8F AF            0A     28  006D   133 	MOVC	#A-ALLOCATE,ALLOCATE,(R0) ;APPEND TEXT TO DEVICE NAME
                          60         0071       
            52            68     D0  0072   134 	MOVL	(R8),R2			;GET STARTING ADDRESS OF DEVICE NAME
            72       2020 8F     B0  0075   135 	MOVW	#^A/  /,-(R2)		;INSERT 2 LEADING SPACES
            53            52     C3  007A   136 	SUBL3	R2,R3,R1		;CALCULATE LENGTH OF MESSAGE
                          51         007D       
                                     007E   137 	MSGOUT				;OUTPUT ALLOCATION MESSAGE
                                     0081   138 	GETDVAL				;GET NEXT DESCRIPTOR VALUES
            04            55     91  0084   139 	CMPB	R5,#PTR_K_ENDLINE	;END OF LINE OR IS THERE ANOTHER PARAM
                          52     13  0087   140 	BEQL	40$			;NO LOGICAL NAME
                          0A     11  0089   141 	BRB	10$			;FINISH IN ASSIGN
LOGICAL         - LOGICAL NAME DCLS COMMAND EXECUTION            22-AUG-1978 01:20:52   VAX-11 MACRO X0.3-11               Page   4
01              ASSIGN LOGICAL NAME TO EQUIVALENCE STRING                                                                        (1)

                                     008B   143 	.SBTTL	ASSIGN LOGICAL NAME TO EQUIVALENCE STRING
                                     008B   144 ;+
                                     008B   145 ; DCL$ASSIGN - ASSIGN LOGICAL NAME TO EQUIVALENCE STRING
                                     008B   146 ;
                                     008B   147 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE ASSIGN DCLS
                                     008B   148 ; COMMAND.
                                     008B   149 ;
                                     008B   150 ; INPUTS:
                                     008B   151 ;
                                     008B   152 ;	R8 = ADDRESS OF SCRATCH BUFFER DESCRIPTOR.
                                     008B   153 ;	R9 = ADDRESS OF SCRATCH STACK.
                                     008B   154 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     008B   155 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     008B   156 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     008B   157 ;
                                     008B   158 ; OUTPUTS:
                                     008B   159 ;
                                     008B   160 ;	THE SPECIFIED LOGICAL NAME IS ASSIGNED TO THE SPECIFIED EQUIVALENCE
                                     008B   161 ;	STRING. IF A PREVIOUS LOGICAL ASSIGNMENT IS SUPERSEDED, THEN A
                                     008B   162 ;	MESSAGE TO THAT EFFECT IS WRITTEN TO THE OUTPUT STREAM.
                                     008B   163 ;-
                                     008B   164  
                                     008B   165 DCL$ASSIGN::				;ASSIGN LOGICAL NAME TO EQUIVALENCE STRING
            56         A9 AF     9E  008B   166 	MOVAB	ASSITBL,R6		;TABLE FOR QUALIFIERS
                          0083   30  008F   167 	BSBW	TABNUM			;GET TABLE NUMBER AND EQUIVALENCE NAME
                                     0092   168 	GETDVAL				;GET NEXT DESCRIPTOR VALUE
                                     0095   169 10$:	COMPSTRING			;COMPRESS LOGICAL NAME STRING
         FF A241          3A     91  0098   170 	CMPB	#^A/:/,-1(R2)[R1]	;LOGICAL NAME END WITH COLON?
                          02     12  009D   171 	BNEQ	20$			;IF NEQ NO
                          51     D7  009F   172 	DECL	R1			;REDUCE LENGTH OF LOGICAL NAME
            79            51     7D  00A1   173 20$:	MOVQ	R1,-(R9)		;SAVE LOGICAL NAME DESCRIPTOR
                          13     11  00A4   174 	BRB	30$			;
LOGICAL         - LOGICAL NAME DCLS COMMAND EXECUTION            22-AUG-1978 01:20:52   VAX-11 MACRO X0.3-11               Page   5
01              DEFINE LOGICAL NAME EQUIVALENCE                                                                                  (1)

                                     00A6   176 	.SBTTL	DEFINE LOGICAL NAME EQUIVALENCE
                                     00A6   177 ;+
                                     00A6   178 ; DCL$DEFINE - DEFINE LOGICAL NAME EQUIVALENCE
                                     00A6   179 ;
                                     00A6   180 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE DEFINE DCLS
                                     00A6   181 ; COMMAND.
                                     00A6   182 ;
                                     00A6   183 ; INPUTS:
                                     00A6   184 ;
                                     00A6   185 ;	R8 = ADDRESS OF SCRATCH BUFFER DESCRIPTOR.
                                     00A6   186 ;	R9 = ADDRESS OF SCRATCH STACK.
                                     00A6   187 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     00A6   188 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     00A6   189 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     00A6   190 ;
                                     00A6   191 ; OUTPUTS:
                                     00A6   192 ;
                                     00A6   193 ;	THE SPECIFIED LOGICAL NAME IS ASSIGNED TO THE SPECIFIED EQUIVALENCE
                                     00A6   194 ;	STRING. IF A PREVIOUS LOGICAL ASSIGNMENT IS SUPERSEDED, THEN A
                                     00A6   195 ;	MESSAGE TO THAT EFFECT IS WRITTEN TO THE OUTPUT STREAM.
                                     00A6   196 ;-
                                     00A6   197  
                                     00A6   198 DCL$DEFINE::				;DEFINE LOGICAL NAME EQUIVALENCE
            56         8E AF     9E  00A6   199 	MOVAB	DEFITBL,R6		;SET QUALIFIER TABLE
                          69     10  00AA   200 	BSBB	TABNUM			;GET TABLE NUMBER AND COMPRESS LOGICAL NAME
                                     00AC   201 	GETDVAL				;GET NEXT DESCRIPTOR VALUE
                                     00AF   202 	COMPSTRING			;COMPRESS EQUIVALENCE NAME STRING
            79            69     7D  00B2   203 	MOVQ	(R9),-(R9)		;COPY LOGICAL NAME STRING DESCRIPTOR
         08 A9            51     7D  00B5   204 	MOVQ	R1,8(R9)		;SET EQUIVALENCE NAME DESCRIPTOR
                                     00B9   205 30$:	$CRELOG_S R7,(R9),8(R9),R6	;CREATE LOGICAL NAME AS SPECIFIED
            50       0631 8F     B1  00C9   206 	CMPW	#SS$_SUPERSEDE,R0	;PREVIOUS ASSIGNMENT SUPERSEDED?
                          0E     12  00CE   207 	BNEQ	50$			;IF NEQ NO
            51            2B     9A  00D0   208 	MOVZBL	#B-SUPERSEDE,R1		;GET LENGTH OF SUPERSEDE MESSAGE
            52       FF33 CF     9E  00D3   209 	MOVAB	SUPERSEDE,R2		;GET ADDRESS OF SUPERSEDE MESSAGE
                                     00D8   210 	MSGOUT				;OUTPUT MESSAGE
                                     00DB   211 40$:	STATUS	NORMAL			;SET NORMAL COMPLETION
                                 05  00DE   212 50$:	RSB				;
                                     00DF   213 	.DSABL	LSB
LOGICAL         - LOGICAL NAME DCLS COMMAND EXECUTION            22-AUG-1978 01:20:52   VAX-11 MACRO X0.3-11               Page   6
01              DEALLOCATE DEVICE                                                                                                (1)

                                     00DF   215 	.SBTTL	DEALLOCATE DEVICE
                                     00DF   216 ;+
                                     00DF   217 ; DCL$DEALLOCATE - DEALLOCATE DEVICE
                                     00DF   218 ;
                                     00DF   219 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE DEALLOCATE
                                     00DF   220 ; DCLS COMMAND.
                                     00DF   221 ;
                                     00DF   222 ; INPUTS:
                                     00DF   223 ;
                                     00DF   224 ;	R8 = ADDRESS OF SCRATCH BUFFER DESCRIPTOR.
                                     00DF   225 ;	R9 = ADDRESS OF SCRATCH STACK.
                                     00DF   226 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     00DF   227 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     00DF   228 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     00DF   229 ;
                                     00DF   230 ; OUTPUTS:
                                     00DF   231 ;
                                     00DF   232 ;	THE SPECIFIED DEVICE IS DEALLOCATED OR ALL DEVICES ARE DEALLOCATED.
                                     00DF   233 ;-
                                     00DF   234  
                                     00DF   235 DCL$DEALLOCAT::				;DEALLOCATE DEVICE
            56       FF52 CF     9E  00DF   236 	MOVAB	DEALTBL,R6		;GET QUALIFIER TABLE
                          21     10  00E4   237 	BSBB	GETDEV			;GET DEVICE NAME TO DEALLOCATE
                                     00E6   238 	$DALLOC_S (R9)			;DEALLOCATE DEVICE
                                 05  00F1   239 	RSB				;
LOGICAL         - LOGICAL NAME DCLS COMMAND EXECUTION            22-AUG-1978 01:20:52   VAX-11 MACRO X0.3-11               Page   7
01              DEASSIGN LOGICAL NAME EQUIVALENCE                                                                                (1)

                                     00F2   241 	.SBTTL	DEASSIGN LOGICAL NAME EQUIVALENCE
                                     00F2   242 ;+
                                     00F2   243 ; DCL$DEASSIGN - DEASSIGN LOGICAL NAME EQUIVALENCE
                                     00F2   244 ;
                                     00F2   245 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE DEASSIGN DCLS
                                     00F2   246 ; COMMAND.
                                     00F2   247 ;
                                     00F2   248 ; INPUTS:
                                     00F2   249 ;
                                     00F2   250 ;	R8 = ADDRESS OF SCRATCH BUFFER DESCRIPTOR.
                                     00F2   251 ;	R9 = ADDRESS OF SCRATCH STACK.
                                     00F2   252 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     00F2   253 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     00F2   254 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     00F2   255 ;
                                     00F2   256 ; OUTPUTS:
                                     00F2   257 ;
                                     00F2   258 ;	THE SPECIFIED LOGICAL NAME EQUIVALENCE OR ALL LOGICAL NAME EQUIVALENCES
                                     00F2   259 ;	ARE DEASSIGNED.
                                     00F2   260 ;-
                                     00F2   261  
                                     00F2   262 DCL$DEASSIGN::				;DEASSIGN LOGICAL NAME EQUIVALENCE
            56       FF47 CF     9E  00F2   263 	MOVAB	DEASTBL,R6		;SET TABLE ADDRESS FOR QUALIFIERS
                          0E     10  00F7   264 	BSBB	GETDEV			;GET DEVICE NAME TO DEASSIGN
                                     00F9   265 	$DELLOG_S R7,(R9),R6		;DEASSIGN LOGICAL NAME EQUIVALENCE
                                 05  0106   266 	RSB				;
                                     0107   267  
                                     0107   268 ;+
                                     0107   269 ; GETDEV - GET DEVICE NAME
                                     0107   270 ;
                                     0107   271 ; COMMON ROUTINE TO GET A DEVICE NAME AND REMOVE COLON IF PRESENT
                                     0107   272 ;
                                     0107   273 ; INPUTS:	SAME AS DEASSIGN AND DEALLOCATE, PLUS
                                     0107   274 ;		R6 IS VALUE OF PROPER ALL QUALIFIER.
                                     0107   275 ;-
                                     0107   276  
                          0C     10  0107   277 GETDEV:	BSBB	TABNUM			;GET TABLE NUMBER AND COMPRESS LOGICAL NAME
                          09     13  0109   278 	BEQL	10$			;BR IF DOING ALL
         FF A241          3A     91  010B   279 	CMPB	#^A/:/,-1(R2)[R1]	;STRING END WITH A COLON
                          02     12  0110   280 	BNEQ	10$			;BR IF NO
                          69     D7  0112   281 	DECL	(R9)			;REMOVE COLON FROM STRING
                                 05  0114   282 10$:	RSB				;
LOGICAL         - LOGICAL NAME DCLS COMMAND EXECUTION            22-AUG-1978 01:20:52   VAX-11 MACRO X0.3-11               Page   8
01              GET LOGICAL NAME TABLE NUMBER                                                                                    (1)

                                     0115   284 	.SBTTL	GET LOGICAL NAME TABLE NUMBER
                                     0115   285 ;
                                     0115   286 ; SUBROUTINE TO GET LOGICAL NAME TABLE NUMBER
                                     0115   287 ;
                                     0115   288 ; ON INPUT R6 IS QUALIFIER DECODE TABLE
                                     0115   289 ;
                                     0115   290 ; ON OUTPUT, R6 = PROCESSOR MODE FOR ASSIGNMENT
                                     0115   291 ;	     R7 = TABLE NUMBER FOR ASSIGNMENT
                                     0115   292 ;	     'Z'= 1 IF "ALL" QUALIFIER SEEN
                                     0115   293  
            57            02     9A  0115   294 TABNUM:	MOVZBL	#LOG$C_PROCESS,R7	;ASSUME PROCESS LOGICAL NAME TABLE
                          02     DD  0118   295 	PUSHL	#PSL$C_SUPER		;MODE OF LOGICAL NAME ASSIGNMENT
                                     011A   296 10$:	GETDVAL				;GET NEXT DESCRIPTOR VALUES
            55            03     91  011D   297 	CMPB	#PTR_K_PARAMETR,R5	;ITEM TYPE PARAMETER?
                          1D     13  0120   298 	BEQL	30$			;IF EQL YES
                          1E     19  0122   299 	BLSS	40$			;IF LSS END OF LINE
            66            51     D1  0124   300 	CMPL	R1,(R6)			;QUALIFIER IN RANGE OF TABLE?
                          F1     1A  0127   301 	BGTRU	10$			;IGNORE IT
            50            6146   98  0129   302 	CVTBL	(R1)[R6],R0		;GET QUALIFIER CODE
                          0C     13  012D   303 	BEQL	25$			;BR IF ALL QUALIFIER
                          05     14  012F   304 	BGTR	20$			;BR IF TABLE NUMBER
            6E            50     CE  0131   305 	MNEGL	R0,(SP)			;SET PROCESSOR MODE FOR ASSIGNMENT
                          E4     11  0134   306 	BRB	10$			;GET NEXT
            57            70     9E  0136   307 20$:	MOVAB	-(R0),R7		;SET TABLE NUMBER FOR ASSIGNMENT
                          DF     11  0139   308 	BRB	10$			;GET NEXT
                          59     D4  013B   309 25$:	CLRL	R9			;SET UP FOR DEALLOCTE OR DEASSIGN ALL
                          DB     11  013D   310 	BRB	10$			;PROCESS NEXT
                                     013F   311 30$:	COMPSTRING			;COMPRESS QUOTED STRING
                          56   8ED0  0142   312 40$:	POPL	R6			;GET MODE FOR LOGICAL NAME ASSIGNMENT
                          59     D5  0145   313 	TSTL	R9			;ALL SEEN?
                          03     13  0147   314 	BEQL	50$			;BR IF YES
            79            51     7D  0149   315 	MOVQ	R1,-(R9)		;SAVE DESCRIPTOR FOR NAME
                                 05  014C   316 50$:	RSB				;
LOGICAL         - LOGICAL NAME DCLS COMMAND EXECUTION            22-AUG-1978 01:20:52   VAX-11 MACRO X0.3-11               Page   9
01              DELETE SYMBOL FROM SYMBOL TABLE                                                                                  (1)

                                     014D   318 	.SBTTL	DELETE SYMBOL FROM SYMBOL TABLE
                                     014D   319 ;+
                                     014D   320 ; DCL$DELSYM - DELETE SYMBOL FROM SYMBOL TABLE
                                     014D   321 ;
                                     014D   322 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO DELETE EITHER A
                                     014D   323 ; SPECIFIC SYMBOL OR ALL SYMBOLS FROM A SPECIFIED SYMBOL TABLE.
                                     014D   324 ;
                                     014D   325 ; INPUTS:
                                     014D   326 ;
                                     014D   327 ;	R8 = ADDRESS OF SCRATCH BUFFER DESCRIPTOR.
                                     014D   328 ;	R9 = ADDRESS OF SCRATCH STACK.
                                     014D   329 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     014D   330 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     014D   331 ;
                                     014D   332 ; OUTPUTS:
                                     014D   333 ;
                                     014D   334 ;	THE SPECIFIED SYMBOL,IF IT EXISTS, IS DELETED,
                                     014D   335 ;		ELSE NO SUCH SYMBOL IS RETURNED;
                                     014D   336 ;	OR THE ENTIRE CONTENTS OF THE SPECIFIED TABLE IS DELETED.
                                     014D   337 ;	PERMANENT SYMBOLS ARE NEVER DELETED.
                                     014D   338 ;-
                                     014D   339  
                                     014D   340 DCL$DELSYM::				; DELETE SYMBOL FROM TABLE
            57         38 AB     7E  014D   341 	MOVAQ	PRC_Q_LOCAL(R11),R7	; ASSUME DELETING FROM THE LOCAL TABLE
                          58     D4  0151   342 	CLRL	R8			; AND THAT ONLY DOING A SPECIFIC SYMBOL
                                     0153   343 10$:	GETDVAL				; GET NEXT RESULT DESCRIPTOR
            55            03     91  0156   344 	CMPB	#PTR_K_PARAMETR,R5	;IS THIS A PARAMETER?
                          18     15  0159   345 	BLEQ	30$			;BR IF YES
                                     015B   346 	ASSUME	CLI$K_DLSY_ALL	EQ 1	;
                                     015B   347 	ASSUME	CLI$K_DLSY_GLOB EQ 2	;
                                     015B   348 	ASSUME	CLI$K_DLSY_LOCA EQ 3	;
            51            02     C2  015B   349 	SUBL	#2,R1			; DECODE QUALIFIER
                          0E     19  015E   350 	BLSS	20$			; BR IF ALL
                          06     14  0160   351 	BGTR	15$			; BR IF LOCAL TABLE
            57         28 AB     7E  0162   352 	MOVAQ	PRC_Q_GLOBAL(R11),R7	; SET PROPER TABLE ADDRESS
                          EB     11  0166   353 	BRB	10$			; BR FOR MORE
            57         38 AB     7E  0168   354 15$:	MOVAQ	PRC_Q_LOCAL(R11),R7	; MAKE SURE TABLE ADDRESS IS CORRECT
                          E5     11  016C   355 	BRB	10$			;
            58            01     D0  016E   356 20$:	MOVL	#1,R8			; SET DOING ALL FLAG
                          E0     11  0171   357 	BRB	10$			;
            12            58     E8  0173   358 30$:	BLBS	R8,50$			; BR IF DOING ALL
            50            57     D0  0176   359 	MOVL	R7,R0			; SET TABLE ADDRESS
                          FE84'  30  0179   360 	BSBW	DCL$SEARCHT		; SEARCH THE TABLE FOR THE SYMBOL
            04            50     E9  017C   361 	BLBC	R0,40$			; DEALLOCTE
                          12     10  017F   362 	BSBB	55$			; TEST AND DEALLOCATE
                          1A     11  0181   363 	BRB	70$			;
                                     0183   364 40$:	STATUS	UNDSYM			; NO SUCH SYMBOL
                                 05  0187   365 	RSB				; EXIT WITH ERROR STATUS
            53            67     D0  0188   366 50$:	MOVL	(R7),R3			; GET ADDRESS OF NEXT SYMBOL
            53            57     D1  018B   367 	CMPL	R7,R3			; DONE?
                          0D     13  018E   368 	BEQL	70$			; BR IF YES
                       F5 AF     9F  0190   369 	PUSHAB	50$			; RETURN ADDRESS FOR DEALLOCATE
                       0A A3     95  0193   370 55$:	TSTB	SYM_B_TYPE(R3)		; PERMANENT SYMBOL?
                          03     12  0196   371 	BNEQ	60$			; BR IF YES - DON'T DEALLOCATE IT
                          FE65'  31  0198   372 	BRW	DCL$DEALLOCSYM		; DEALLOCATE IT
                          8E     D5  019B   373 60$:	TSTL	(SP)+			; CLEAR INTERMEDIATE RETURN
                                     019D   374 70$:	STATUS	NORMAL			;
LOGICAL         - LOGICAL NAME DCLS COMMAND EXECUTION            22-AUG-1978 01:20:52   VAX-11 MACRO X0.3-11               Page  10
01              DELETE SYMBOL FROM SYMBOL TABLE                                                                                  (1)

                                 05  01A0   375 	RSB
                                     01A1   376  
                                     01A1   377 	.END
LOGICAL         - LOGICAL NAME DCLS COMMAND EXECUTION            22-AUG-1978 01:20:52   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (1)

$$$            = 00000004            CLI$_FILOPN    = 00038190            CLI$_UNPROQUAL = 00038168            
$$$GBL         = 00000000            CLI$_ILLVAL    = 0003883A            CLI$_USGOTO    = 00038148            
$QUALNUM$      = 00000004            CLI$_IMCHNG    = 00038040            CLI$_VALCNVERR = 00038832            
A                0000000A R     03   CLI$_IMGFNF    = 00038872            CLI$_VALREQ    = 00038150            
ALLOCATE         00000000 R     03   CLI$_INSFPRM   = 00038048            CMDBUFSIZ      = 000001FC            
ALL_QUAL       = 00000000            CLI$_INVKEY    = 00038178            DCL$ALLOCATE     00000044 RG    03   
ASSITBL          00000037 R     03   CLI$_INVQUAL   = 0003880A            DCL$ASSIGN       0000008B RG    03   
B                00000035 R     03   CLI$_INVQUALNUM= 0003881A            DCL$COMPSTRING   ********   X   03   
BIT...         = 00000000            CLI$_INVREQTYP = 00038822            DCL$DEALLOCAT    000000DF RG    03   
CLI$K_ASSI_GROU= 00000002            CLI$_INVRSP    = 00038180            DCL$DEALLOCSYM   ********   X   03   
CLI$K_ASSI_MERG= 00000007            CLI$_INVUIC    = 000381A8            DCL$DEASSIGN     000000F2 RG    03   
CLI$K_ASSI_PROC= 00000003            CLI$_IVCHAR    = 00038050            DCL$DEFINE       000000A6 RG    03   
CLI$K_ASSI_QUEU= 00000006            CLI$_IVDEVTYPE = 0003886A            DCL$DELSYM       0000014D RG    03   
CLI$K_ASSI_SUPE= 00000005            CLI$_IVFNAM    = 000381C0            DCL$GETDVAL      ********   X   03   
CLI$K_ASSI_SYST= 00000001            CLI$_IVKEYW    = 00038060            DCL$MSGOUT       ********   X   03   
CLI$K_ASSI_USER= 00000004            CLI$_IVOPER    = 00038068            DCL$SEARCHT      ********   X   03   
CLI$K_DEAL_ALL = 00000001            CLI$_IVPROT    = 00038070            DEALTBL          00000035 R     03   
CLI$K_DEAS_ALL = 00000004            CLI$_IVQLOC    = 00038078            DEASTBL          0000003D R     03   
CLI$K_DEAS_GROU= 00000002            CLI$_IVSYMB    = 00038080            DEFITBL          00000037 R     03   
CLI$K_DEAS_PROC= 00000003            CLI$_IVVALU    = 00038088            GBL...         = 00000000            
CLI$K_DEAS_QUEU= 00000007            CLI$_IVVERB    = 00038090            GETDEV           00000107 R     03   
CLI$K_DEAS_SUPE= 00000006            CLI$_MAXPARM   = 00038098            INPBUFSIZ      = 00000084            
CLI$K_DEAS_SYST= 00000001            CLI$_MULKEY    = 000381A0            LOG$B_AMOD       0000000E            
CLI$K_DEAS_USER= 00000005            CLI$_NOATFIL   = 000380A0            LOG$B_TABLE      0000000B            
CLI$K_DEFI_GROU= 00000002            CLI$_NOCCAT    = 000380A8            LOG$B_TYPE       0000000A            
CLI$K_DEFI_PROC= 00000003            CLI$_NOCOMD    = 000380B0            LOG$C_GROUP    = 00000001            
CLI$K_DEFI_SUPE= 00000005            CLI$_NOKEYW    = 000380B8            LOG$C_LENGTH     00000014            
CLI$K_DEFI_SYST= 00000001            CLI$_NOLIST    = 000380C0            LOG$C_NAMLENGTH= 00000040            
CLI$K_DEFI_USER= 00000004            CLI$_NOOPTPRS  = 00038842            LOG$C_PROCESS  = 00000002            
CLI$K_DELE_BEFO= 00000008            CLI$_NOQUAL    = 000380C8            LOG$C_SYSTEM   = 00000000            
CLI$K_DELE_CONF= 00000005            CLI$_NORMAL    = 00030001            LOG$K_LENGTH     00000014            
CLI$K_DELE_CREA= 00000001            CLI$_NOTNEG    = 000380D8            LOG$L_LTBL       00000004            
CLI$K_DELE_ENTR= 00000002            CLI$_NOVALU    = 000380D0            LOG$L_LTFL       00000000            
CLI$K_DELE_EXPI= 00000009            CLI$_NOVALUE   = 0003882A            LOG$L_MBXUCB     00000010            
CLI$K_DELE_LOG = 00000006            CLI$_NULFIL    = 000380E0            LOG$T_NAME       00000014            
CLI$K_DELE_MODI= 00000003            CLI$_NUMBER    = 000380E8            LOG$W_GROUP      0000000C            
CLI$K_DELE_QUEU= 00000004            CLI$_ONCOMD    = 000380F0            LOG$W_SIZE       00000008            
CLI$K_DELE_SINC= 00000007            CLI$_ONERR     = 000380F8            MSGBUFSIZ      = 00000084            
CLI$K_DELE_SYMB= 0000000A            CLI$_ONEVAL    = 00038158            NULTBL           00000041 R     03   
CLI$K_DLSY_ALL = 00000001            CLI$_ONLEVL    = 00038100            PRC_B_DEFRADIX   00000092            
CLI$K_DLSY_GLOB= 00000002            CLI$_ONOVF     = 00038108            PRC_B_EXMDEPMOD  00000091            
CLI$K_DLSY_LOCA= 00000003            CLI$_OVRFLW    = 00038160            PRC_B_EXMDEPWID  00000090            
CLI$_ABFNAM    = 000381B8            CLI$_PARMDEL   = 00038110            PRC_K_DEC      = 00000001            
CLI$_ABKEYW    = 00038000            CLI$_PROC_ID   = 0003FFF1            PRC_K_HEX      = 00000000            
CLI$_ABVERB    = 00038008            CLI$_QUEJOBCRE = 0003FFF9            PRC_K_LENGTH     000000A0            
CLI$_BADRET    = 00038198            CLI$_REQPRMABS = 00038812            PRC_K_OCT      = 00000002            
CLI$_BADTEXT   = 000381B0            CLI$_RSLOVF    = 00038118            PRC_L_CLIWRK0    0000005C            
CLI$_BUFOVF    = 00038018            CLI$_SKPDAT    = 00038120            PRC_L_CLIWRK1    00000060            
CLI$_COMPLX    = 00038020            CLI$_SPARE0    = 00038010            PRC_L_CLIWRK2    00000064            
CLI$_CONFQUAL  = 00038802            CLI$_SPARE1    = 00038058            PRC_L_CLIWRK3    00000068            
CLI$_CREQUEJOB = 0003884A            CLI$_STKOVF    = 00038128            PRC_L_CLIWRK4    0000006C            
CLI$_DEFOVF    = 00038028            CLI$_SUBMITERR = 00038852            PRC_L_ERRRAB     00000010            
CLI$_DEVALSPL  = 0003885A            CLI$_SYMDEL    = 00038130            PRC_L_EXMDEPADR  0000008C            
CLI$_DEVNOTFOR = 0003887A            CLI$_SYMOVF    = 00038138            PRC_L_EXTARG     00000078            
CLI$_DEVNOTSPL = 00038862            CLI$_UNDFIL    = 00038188            PRC_L_EXTBLK     00000070            
CLI$_DIRECT    = 00038030            CLI$_UNDSYM    = 00038140            PRC_L_EXTCOD     00000080            
CLI$_EXPSYN    = 00038038            CLI$_UNPROPARM = 00038170            PRC_L_EXTHND     00000074            
LOGICAL         - LOGICAL NAME DCLS COMMAND EXECUTION            22-AUG-1978 01:20:52   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (1)

PRC_L_EXTPRM     0000007C            PRO_B_FLAGS      00000001            PTR_L_DESCR      00000000            
PRC_L_INDEPTH    00000048            PRO_B_PROMPT     00000000            PTR_S_FLAGS    = 00000004            
PRC_L_INDFAB     0000001C            PRO_K_LENGTH     00000002            PTR_S_OFFSET   = 0000000C            
PRC_L_INDINPRAB  00000014            PRO_M_CONCAT   = 00000001            PTR_S_TERM     = 00000004            
PRC_L_INDOUTRAB  00000018            PRO_M_IMPCAT   = 00000002            PTR_S_TYPE     = 00000004            
PRC_L_INPRAB     00000008            PRO_M_LIST     = 00000004            PTR_S_VALUE    = 00000008            
PRC_L_LSTSTATUS  00000094            PRO_M_OPTION   = 00000008            PTR_V_FLAGS    = 00000014            
PRC_L_ONCTLY     0000009C            PRO_M_REQ      = 00000010            PTR_V_NEGATE   = 00000000            
PRC_L_ONERROR    00000058            PRO_M_STRING   = 00000020            PTR_V_OFFSET   = 00000008            
PRC_L_OUTRAB     0000000C            PRO_V_CONCAT   = 00000000            PTR_V_TERM     = 00000018            
PRC_L_PROCUIC    00000098            PRO_V_IMPCAT   = 00000001            PTR_V_TYPE     = 0000001C            
PRC_L_SAVAP      00000000            PRO_V_LIST     = 00000002            PTR_V_VALUE    = 00000000            
PRC_L_SAVFP      00000004            PRO_V_OPTION   = 00000003            QUA_B_DEFVAL     00000002            
PRC_L_SEVERITY   00000040            PRO_V_REQ      = 00000004            QUA_B_IMAGE      00000005            
PRC_L_STACKLM    00000088            PRO_V_STRING   = 00000005            QUA_B_INDEX      00000001            
PRC_L_STACKPT    00000084            PSL$C_EXEC     = 00000001            QUA_B_OFFSET     00000000            
PRC_L_STATUS     00000044            PSL$C_KERNEL   = 00000000            QUA_B_PARMCNT    00000008            
PRC_L_SYMBOL     0000004C            PSL$C_SUPER    = 00000002            QUA_G_CHNGLST    00000006            
PRC_M_CNTRLY   = 00000002            PSL$C_USER     = 00000003            QUA_M_BATDEF   = 00000100            
PRC_M_DBGQUAL  = 00000200            PSL$M_CM       = 80000000            QUA_M_CHNGLIST = 00000001            
PRC_M_DBGTRUE  = 00000400            PSL$M_CURMOD   = 03000000            QUA_M_DEFTRUE  = 00000080            
PRC_M_DISABL   = 00000004            PSL$M_DV       = 00000080            QUA_M_FILE     = 00000004            
PRC_M_EXIT     = 00000008            PSL$M_FPD      = 08000000            QUA_M_IMAGE    = 00000400            
PRC_M_GOEOF    = 00000001            PSL$M_FU       = 00000040            QUA_M_INTDEF   = 00000200            
PRC_M_GOTO     = 00000010            PSL$M_IPL      = 001F0000            QUA_M_KEYVAL   = 00004000            
PRC_M_HANGUP   = 00001000            PSL$M_IS       = 04000000            QUA_M_LOCALKEY = 00000002            
PRC_M_IND      = 00000020            PSL$M_IV       = 00000020            QUA_M_NEG      = 00000040            
PRC_M_MODE     = 00000040            PSL$M_PRVMOD   = 00C00000            QUA_M_ONEVAL   = 00002000            
PRC_M_NOCTLY   = 00004000            PSL$M_SAFBITS  = 000037FF            QUA_M_OUTPUT   = 00000800            
PRC_M_PAUSE    = 00002000            PSL$M_TBIT     = 00000010            QUA_M_PARM     = 00000010            
PRC_M_USRDET   = 00000100            PSL$M_TP       = 40000000            QUA_M_VAL      = 00000020            
PRC_M_VERIFY   = 00000080            PSL$S_CURMOD   = 00000002            QUA_M_VALREQ   = 00001000            
PRC_M_YLEVEL   = 00000800            PSL$S_IPL      = 00000005            QUA_M_VERB     = 00000008            
PRC_Q_ALLOCREG   00000020            PSL$S_PRVMOD   = 00000002            QUA_S_MAXPARM  = 00000004            
PRC_Q_GLOBAL     00000028            PSL$V_CM       = 0000001F            QUA_S_MINPARM  = 00000004            
PRC_Q_LABEL      00000030            PSL$V_CURMOD   = 00000018            QUA_V_BATDEF   = 00000008            
PRC_Q_LOCAL      00000038            PSL$V_DV       = 00000007            QUA_V_CHNGLIST = 00000000            
PRC_V_CNTRLY   = 00000001            PSL$V_FPD      = 0000001B            QUA_V_DEFTRUE  = 00000007            
PRC_V_DBGQUAL  = 00000009            PSL$V_FU       = 00000006            QUA_V_FILE     = 00000002            
PRC_V_DBGTRUE  = 0000000A            PSL$V_IPL      = 00000010            QUA_V_IMAGE    = 0000000A            
PRC_V_DISABL   = 00000002            PSL$V_IS       = 0000001A            QUA_V_INTDEF   = 00000009            
PRC_V_EXIT     = 00000003            PSL$V_IV       = 00000005            QUA_V_KEYVAL   = 0000000E            
PRC_V_GOEOF    = 00000000            PSL$V_PRVMOD   = 00000016            QUA_V_LOCALKEY = 00000001            
PRC_V_GOTO     = 00000004            PSL$V_TBIT     = 00000004            QUA_V_MAXPARM  = 00000004            
PRC_V_HANGUP   = 0000000C            PSL$V_TP       = 0000001E            QUA_V_MINPARM  = 00000000            
PRC_V_IND      = 00000005            PTR_K_BLANK    = 00000001            QUA_V_NEG      = 00000006            
PRC_V_MODE     = 00000006            PTR_K_COLON    = 00000002            QUA_V_ONEVAL   = 0000000D            
PRC_V_NOCTLY   = 0000000E            PTR_K_COMDQUAL = 00000000            QUA_V_OUTPUT   = 0000000B            
PRC_V_PAUSE    = 0000000D            PTR_K_COMMA    = 00000005            QUA_V_PARM     = 00000004            
PRC_V_USRDET   = 00000008            PTR_K_ENDLINE  = 00000004            QUA_V_VAL      = 00000005            
PRC_V_VERIFY   = 00000007            PTR_K_LPAREN   = 00000007            QUA_V_VALREQ   = 0000000C            
PRC_V_YLEVEL   = 0000000B            PTR_K_PARAMETR = 00000003            QUA_V_VERB     = 00000003            
PRC_W_CLIFLAG    00000052            PTR_K_PARMQUAL = 00000001            QUA_W_FLAGS      00000003            
PRC_W_ERRIFI     00000052            PTR_K_PLUS     = 00000004            QUA_W_PROMPT     00000009            
PRC_W_FLAGS      00000054            PTR_K_QUALVALU = 00000002            QUA_W_QUALIST    00000006            
PRC_W_INPCHAN    00000050            PTR_K_RPAREN   = 00000006            RSLBUFSIZ      = 00000180            
PRC_W_ONLEVEL    00000056            PTR_K_SLASH    = 00000003            SS$_ABORT      = 0000002C            
LOGICAL         - LOGICAL NAME DCLS COMMAND EXECUTION            22-AUG-1978 01:20:52   VAX-11 MACRO X0.3-11               Page  13
SYMBOL TABLE                                                                                                                     (1)

SS$_ACCONFLICT = 00000800            SS$_FCPREADERR = 00000888            SS$_MBFULL     = 000008D8            
SS$_ACCVIO     = 0000000C            SS$_FCPREPSTN  = 00000988            SS$_MBTOOSML   = 0000019C            
SS$_ACPVAFUL   = 000002FC            SS$_FCPREWNDERR= 00000890            SS$_MCHECK     = 000002BC            
SS$_ARTRES     = 00000474            SS$_FCPSPACERR = 00000898            SS$_MEDOFL     = 000001A4            
SS$_ASTFLT     = 0000040C            SS$_FCPWRITERR = 000008A0            SS$_MSGNOTFND  = 00000621            
SS$_BADATTRIB  = 00000034            SS$_FILACCERR  = 0000009C            SS$_MTLBLLONG  = 00000304            
SS$_BADCHKSUM  = 00000808            SS$_FILALRACC  = 000000A4            SS$_MUSTCLOSEFL= 00000948            
SS$_BADESCAPE  = 0000003C            SS$_FILELOCKED = 000008A8            SS$_NOAQB      = 00000314            
SS$_BADFILEHDR = 00000810            SS$_FILENUMCHK = 000008B0            SS$_NODATA     = 000001AC            
SS$_BADFILENAME= 00000818            SS$_FILESEQCHK = 000008B8            SS$_NOHANDLER  = 000008F8            
SS$_BADFILEVER = 00000820            SS$_FILESTRUCT = 000008C0            SS$_NOHOMEBLK  = 000008E0            
SS$_BADIMGHDR  = 00000044            SS$_FILNOTACC  = 000000AC            SS$_NOIOCHAN   = 000001B4            
SS$_BADIRECTORY= 00000828            SS$_FILNOTCNTG = 000002AC            SS$_NOLINKS    = 0000027C            
SS$_BADPARAM   = 00000014            SS$_FILNOTEXP  = 000000B4            SS$_NOLOGNAM   = 000001BC            
SS$_BADSTACK   = 000002B4            SS$_FLTDIV     = 00000494            SS$_NOMBX      = 00000274            
SS$_BEGOFFILE  = 00000938            SS$_FLTOVF     = 0000048C            SS$_NOMOREFILES= 00000930            
SS$_BLOCKCNTERR= 00000940            SS$_FLTUND     = 0000049C            SS$_NONEXDRV   = 000001C4            
SS$_BREAK      = 00000414            SS$_FORMAT     = 000000BC            SS$_NONEXPR    = 000008E8            
SS$_BUFBYTALI  = 0000030C            SS$_GPTFULL    = 000000C4            SS$_NONLOCAL   = 000008F0            
SS$_BUFFEROVF  = 00000601            SS$_GSDFULL    = 000000CC            SS$_NOPRIV     = 00000024            
SS$_BUGCHECK   = 000002A4            SS$_HANGUP     = 000002CC            SS$_NORMAL     = 00000001            
SS$_CANCEL     = 00000830            SS$_HEADERFULL = 000008C8            SS$_NOSIGNAL   = 00000900            
SS$_CHANINTLK  = 0000004C            SS$_IDXFILEFULL= 000008D0            SS$_NOSOLICIT  = 00000284            
SS$_CLIFRCEXT  = 00000980            SS$_ILLBLKNUM  = 000000DC            SS$_NOSUCHDEV  = 00000908            
SS$_CMODSUPR   = 0000041C            SS$_ILLCNTRFUNC= 000000E4            SS$_NOSUCHFILE = 00000910            
SS$_CMODUSER   = 00000424            SS$_ILLEFC     = 000000EC            SS$_NOSUCHNODE = 0000028C            
SS$_COMPAT     = 0000042C            SS$_ILLIOFUNC  = 000000F4            SS$_NOSUCHSEC  = 00000978            
SS$_CONTINUE   = 00000001            SS$_ILLLBLAST  = 00000968            SS$_NOTAPEOP   = 00000264            
SS$_CONTROLC   = 00000651            SS$_ILLPAGCNT  = 000000FC            SS$_NOTFILEDEV = 000001CC            
SS$_CONTROLO   = 00000609            SS$_ILLSEQOP   = 000002DC            SS$_NOTINTBLSZ = 000001D4            
SS$_CONTROLY   = 00000611            SS$_ILLSER     = 00000104            SS$_NOTLABELMT = 000001DC            
SS$_CREATED    = 00000619            SS$_ILLUSRLBLRD= 00000958            SS$_NOTMODIFIED= 00000659            
SS$_CTRLERR    = 00000054            SS$_ILLUSRLBLWT= 00000960            SS$_NOTNETDEV  = 000002EC            
SS$_DATACHECK  = 0000005C            SS$_INCVOLLABEL= 0000010C            SS$_NOTRAN     = 00000629            
SS$_DATAOVERUN = 00000838            SS$_INSFARG    = 00000114            SS$_NOTSQDEV   = 000001E4            
SS$_DEBUG      = 0000046C            SS$_INSFMEM    = 00000124            SS$_OPCCUS     = 00000434            
SS$_DECOVF     = 000004A4            SS$_INSFRAME   = 0000012C            SS$_OPCDEC     = 0000043C            
SS$_DEVACTIVE  = 000002C4            SS$_INSFWSL    = 0000011C            SS$_OPINCOMPL  = 000002D4            
SS$_DEVALLOC   = 00000840            SS$_INTDIV     = 00000484            SS$_PAGOWNVIO  = 000001EC            
SS$_DEVALRALLOC= 00000641            SS$_INTOVF     = 0000047C            SS$_PAGRDERR   = 00000444            
SS$_DEVASSIGN  = 00000848            SS$_IVADDR     = 00000134            SS$_PARITY     = 000001F4            
SS$_DEVFOREIGN = 00000064            SS$_IVCHAN     = 0000013C            SS$_PARTESCAPE = 000001FC            
SS$_DEVICEFULL = 00000850            SS$_IVCHNLSEC  = 0000026C            SS$_PFMBSY     = 00000204            
SS$_DEVMOUNT   = 0000006C            SS$_IVDEVNAM   = 00000144            SS$_PLHLDR     = 00000404            
SS$_DEVNOTALLOC= 00000858            SS$_IVGSDNAM   = 0000014C            SS$_PSTFULL    = 0000020C            
SS$_DEVNOTMBX  = 00000074            SS$_IVLOGNAM   = 00000154            SS$_RADRMOD    = 0000044C            
SS$_DEVNOTMOUNT= 0000007C            SS$_IVLOGTAB   = 0000015C            SS$_REJECT     = 00000294            
SS$_DEVOFFLINE = 00000084            SS$_IVPROTECT  = 000002F4            SS$_REMOTE     = 00000649            
SS$_DIRFULL    = 00000860            SS$_IVQUOTAL   = 00000164            SS$_RESIGNAL   = 00000918            
SS$_DRVERR     = 0000008C            SS$_IVSECFLG   = 0000016C            SS$_RESULTOVF  = 00000214            
SS$_DUPFILENAME= 00000868            SS$_IVSECIDCTL = 000002E4            SS$_ROPRAND    = 00000454            
SS$_DUPLNAM    = 00000094            SS$_IVSSRQ     = 00000174            SS$_SECTBLFUL  = 0000021C            
SS$_ENDOFFILE  = 00000870            SS$_IVSTSFLG   = 0000017C            SS$_SSFAIL     = 0000045C            
SS$_ENDOFTAPE  = 00000878            SS$_IVTIME     = 00000184            SS$_SUBRNG     = 000004AC            
SS$_ENDOFUSRLBL= 00000970            SS$_LCKPAGFUL  = 000000D4            SS$_SUPERSEDE  = 00000631            
SS$_EXQUOTA    = 0000001C            SS$_LENVIO     = 0000018C            SS$_TAPEPOSLOST= 00000224            
SS$_EXTIDXFILE = 00000880            SS$_LKWSETFUL  = 00000194            SS$_TBIT       = 00000464            
LOGICAL         - LOGICAL NAME DCLS COMMAND EXECUTION            22-AUG-1978 01:20:52   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                     (1)

SS$_TIMEOUT    = 0000022C            WRK_M_QUOTE    = 00000020            
SS$_TOOMANYVER = 00000990            WRK_M_RUNDWN   = 00000001            
SS$_TOOMUCHDATA= 0000029C            WRK_M_STAR     = 00000040            
SS$_UNASEFC    = 00000234            WRK_M_TRAILSPC = 00000400            
SS$_UNSAFE     = 0000023C            WRK_M_VERB     = 00000080            
SS$_UNWIND     = 00000920            WRK_Q_IOSB       FFFFFFD4            
SS$_UNWINDING  = 00000928            WRK_V_COMMAND  = 00000001            
SS$_VASFULL    = 00000244            WRK_V_IMCHNG   = 00000002            
SS$_VECINUSE   = 0000024C            WRK_V_INQUIRE  = 00000008            
SS$_VOLINV     = 00000254            WRK_V_NOSTAT   = 00000009            
SS$_WAITUSRLBL = 00000950            WRK_V_PROMPT   = 00000003            
SS$_WASCLR     = 00000001            WRK_V_QUAL     = 00000004            
SS$_WASECC     = 00000639            WRK_V_QUOTE    = 00000005            
SS$_WASSET     = 00000009            WRK_V_RUNDWN   = 00000000            
SS$_WRITLCK    = 0000025C            WRK_V_STAR     = 00000006            
SS$_WRONGACP   = 0000031C            WRK_V_TRAILSPC = 0000000A            
SUPERSEDE        0000000A R     03   WRK_V_VERB     = 00000007            
SYM_B_TYPE       0000000A            WRK_W_FLAGS      FFFFFFFA            
SYM_K_DECIMAL  = 00000004            WRK_W_IMGCHAN    FFFFFFF8            
SYM_K_HEXDEC   = 00000005            _$$_           = 00000050            
SYM_K_LOGICAL  = 00000002            
SYM_K_OCTAL    = 00000003            
SYM_K_PERM     = 00000001            
SYM_K_STRING   = 00000000            
SYM_L_BL         00000004            
SYM_L_FL         00000000            
SYM_T_SYMBOL     0000000C            
SYM_W_SIZE       00000008            
SYS$ALLOC        ********   X   03   
SYS$CRELOG       ********   X   03   
SYS$DALLOC       ********   X   03   
SYS$DELLOG       ********   X   03   
TABNUM           00000115 R     03   
WRK_AB_BUFFER    FFFFFD38            
WRK_AG_RESULT    FFFFFBB4            
WRK_B_VERBTYP    FFFFFFC0            
WRK_K_LENGTH     FFFFFBB4            
WRK_L_CHARPTR    FFFFFFFC            
WRK_L_CMDOUT     FFFFFFBC            
WRK_L_IMAGE      FFFFFFEC            
WRK_L_MAXPARM    FFFFFFE4            
WRK_L_MINPARM    FFFFFFE8            
WRK_L_PARMCNT    FFFFFFF0            
WRK_L_PAROUT     FFFFFFF4            
WRK_L_PROMPT     FFFFFFD0            
WRK_L_PROPTR     FFFFFFDC            
WRK_L_QUABLK     FFFFFFE0            
WRK_L_RSLNXT     FFFFFD34            
WRK_L_SAVAP      FFFFFFC8            
WRK_L_SAVFP      FFFFFFCC            
WRK_L_SAVSP      FFFFFFC4            
WRK_M_COMMAND  = 00000002            
WRK_M_IMCHNG   = 00000004            
WRK_M_INQUIRE  = 00000100            
WRK_M_NOSTAT   = 00000200            
WRK_M_PROMPT   = 00000008            
WRK_M_QUAL     = 00000010            
LOGICAL         - LOGICAL NAME DCLS COMMAND EXECUTION            22-AUG-1978 01:20:52   VAX-11 MACRO X0.3-11               Page  15
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFC      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
DCL$ZCODE        000001A1      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
5014. BYTES LEFT IN FREE MEMORY POOL.
3114. BYTES OF RECLAIMED MEMORY.
EXE$:LOGICAL,LIS$:LOGICAL/-SP=EXECML$/ML,LIB$:DCL/ML,SRC$:LOGICAL
64 MLB DIR RDS - 948 GETS TO DEFINE 40 MACROS. 69 INTER. FILE WRITES. 
