EXPRESS         - EXPRESSION ANALYSIS                            22-AUG-1978 01:14:47   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)     122  EXPRESSION ANALYSIS
   (1)     398  FETCH NEXT OPERAND FROM TRIAD STACK
   (1)     408  CONVERT STRING PARAMETERS TO STRING OPERAND
   (1)     424  CONVERT OPERAND PARAMETERS TO NUMERIC VALUE
   (1)     462  DISPATCH OPERATOR FUNCTION
EXPRESS         - EXPRESSION ANALYSIS                            22-AUG-1978 01:14:47   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	EXPRESS - EXPRESSION ANALYSIS
                                     0000     2 	.IDENT	/01/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; D. N. CUTLER 9-MAY-77
                                     0000    24 ;
                                     0000    25 ; EXPRESSION ANALYSIS
                                     0000    26 ;
                                     0000    27 ; MACRO LIBRARY CALLS
                                     0000    28 ;
                                     0000    29  
                                     0000    30 	DEFCMDWRK			;DEFINE WORK AREA OFFSETS
                                     0000    31 	DEFERRCOD			;DEFINE ERROR/STATUS CODES
                                     0000    32  
                                     0000    33 ;
                                     0000    34 ; LOCAL MACROS
                                     0000    35 ;
                                     0000    36 ; GENERATE OPERATOR/OPERAND TABLE AND SYMBOL NAMES
                                     0000    37 ;
                                     0000    38  
                                     0000    39 	.MACRO	GENOP NAME,INDEX,TYPE,PREC,CHAR,?L1,?L2,?L3,?L4
                                     0000    40 OPI_K_'NAME=INDEX
                                     0000    41 	.IF IDN	<TYPE>,<OPERATOR>
                                     0000    42 OPP_K_'NAME=PREC
                                     0000    43 	.IF DIF	<NAME>,<SOS>
                                     0000    44 	.IF DIF	<NAME>,<EOS>
                                     0000    45 	.IF DIF	<NAME>,<STORE>
                                     0000    46 L1:	.BYTE	L4-L1
                                     0000    47 	.BYTE	L3-L2
                                     0000    48 	.IF NB	<CHAR>
                                     0000    49 L2:	.ASCII	\CHAR\
                                     0000    50 	.IFF
                                     0000    51 L2:	.ASCII	/NAME/
                                     0000    52 	.ENDC
                                     0000    53 L3:	.BYTE	OPP_K_'NAME
                                     0000    54 L4:	.BYTE	OPI_K_'NAME
                                     0000    55 	.ENDC
                                     0000    56 	.ENDC
                                     0000    57 	.ENDC
EXPRESS         - EXPRESSION ANALYSIS                            22-AUG-1978 01:14:47   VAX-11 MACRO X0.3-11               Page   2
01                                                                                                                               (1)

                                     0000    58 	.ENDC
                                     0000    59 	.ENDM	GENOP
                                     0000    60  
                                     0000    61 ;
                                     0000    62 ; LOCAL SYMBOLS
                                     0000    63 ;
                                     0000    64 ; DEFINE STACK ITEM OFFSETS
                                     0000    65 ;
                                     0000    66  
                                     0000    67 	$DEFINI	STK
                                     0000    68  
                                     0000    69 $DEF	STK_W_TYPE	.BLKW	1	;STACK ITEM TYPE
                                     0002    70 $DEF	STK_W_PREC			;OPERATOR PRECEDENCE
                                     0002    71 $DEF	STK_W_SIZE	.BLKW	1	;SIZE OF OPERAND VALUE IN BYTES
                                     0004    72 $DEF	STK_L_ADDR	.BLKL	1	;ADDRESS OF OPERAND VALUE
                                     0008    73 $DEF	STK_K_LENGTH			;LENGTH OF STACK ITEM
                                     0008    74  
                                     0008    75 	$DEFEND	STK
                                     0000    76  
                                     0000    77 ;
                                     0000    78 ; LOCAL DATA
                                     0000    79 ;
                                     0000    80 ; OPERATOR TABLE
                                     0000    81 ;
                                     0000    82  
                                 00000000    83 	.PSECT	DCL$ZCODE,BYTE,RD,NOWRT
                                     0000    84 OPTAB:	GENOP	SOS,28,OPERATOR,0	;START OF STATEMENT
                                     0000    85 	GENOP	EOS,30,OPERATOR,1	;END OF STATEMENT
                                     0000    86 	GENOP	LPAREN,32,OPERATOR,2,<(> ;LEFT PARENTHESIS
                                     0005    87 	GENOP	RPAREN,34,OPERATOR,3,<)> ;RIGHT PARENTHESIS
                                     000A    88 	GENOP	STORE,36,OPERATOR,0	;STORE RESULT
                                     000A    89 	GENOP	AND,0,OPERATOR,5	;BOOLEAN AND
                                     0011    90 	GENOP	NOT,2,OPERATOR,6	;BOOLEAN NOT
                                     0018    91 	GENOP	OR,4,OPERATOR,4		;BOOLEAN OR
                                     001E    92 	GENOP	ADD,6,OPERATOR,8,<+>	;INTEGER ADD
                                     0023    93 	GENOP	SUB,8,OPERATOR,8,<->	;INTEGER SUBTRACT
                                     0028    94 	GENOP	MUL,10,OPERATOR,9,<*>	;INTEGER MULTIPLY
                                     002D    95 	GENOP	DIV,12,OPERATOR,9,</>	;INTEGER DIVIDE
                                     0032    96 	GENOP	NEG,14,SPECIAL		;INTEGER NEGATE
                                     0032    97 	GENOP	EQ,16,OPERATOR,7	;ARITHMETIC EQUAL
                                     0038    98 	GENOP	GE,18,OPERATOR,7	;ARITHMETIC GREATER OR EQUAL
                                     003E    99 	GENOP	GT,20,OPERATOR,7	;ARITHMETIC GREATER
                                     0044   100 	GENOP	LE,22,OPERATOR,7	;ARITHMETIC LESS OR EQUAL
                                     004A   101 	GENOP	LT,24,OPERATOR,7	;ARITHMETIC LESS
                                     0050   102 	GENOP	NE,26,OPERATOR,7	;ARITHMETIC NOT EQUAL
                                     0056   103 	GENOP	EQS,38,OPERATOR,7	;STRING EQUAL
                                     005D   104 	GENOP	GES,40,OPERATOR,7	;STRING GREATER OR EQUAL
                                     0064   105 	GENOP	GTS,42,OPERATOR,7	;STRING GREATER
                                     006B   106 	GENOP	LES,44,OPERATOR,7	;STRING LESS OR EQUAL
                                     0072   107 	GENOP	LTS,46,OPERATOR,7	;STRING LESS
                                     0079   108 	GENOP	NES,48,OPERATOR,7	;STRING NOT EQUAL
                                     0080   109 	GENOP	SYMBOL,50,OPERAND	;SYMBOL TABLE OPERAND
                                     0080   110 	GENOP	LITERAL,52,OPERAND	;LITERAL OPERAND
                                     0080   111 	GENOP	STACK,54,OPERAND	;STACK OPERAND
                                 00  0080   112 	.BYTE	0			;TABLE TERMINATOR BYTE
                                     0081   113  
                                     0081   114 ;
EXPRESS         - EXPRESSION ANALYSIS                            22-AUG-1978 01:14:47   VAX-11 MACRO X0.3-11               Page   3
01                                                                                                                               (1)

                                     0081   115 ; 'TRUE' AND 'FALSE'  VALUES
                                     0081   116 ;
                                     0081   117  
                        45 55 52 54  0081   118 TRUE:	.ASCII	\TRUE\			;
                     45 53 4C 41 46  0085   119 FALSE:	.ASCII	\FALSE\			;
                        59 4E 54 46  008A   120 TRUFLS:	.ASCII	/FTNY/			; NOTE-ORDER IS ASSUMMED ELSEWHERE
EXPRESS         - EXPRESSION ANALYSIS                            22-AUG-1978 01:14:47   VAX-11 MACRO X0.3-11               Page   4
01              EXPRESSION ANALYSIS                                                                                              (1)

                                     008E   122 	.SBTTL	EXPRESSION ANALYSIS
                                     008E   123 ;+
                                     008E   124 ; DCL$EXPRESS - EXPRESSION ANALYSIS
                                     008E   125 ;
                                     008E   126 ; THIS ROUTINE IS CALLED TO ANALYZE AN EXPRESSION AND RETURN AN ARITHMETIC RESULT.
                                     008E   127 ;
                                     008E   128 ; INPUTS:
                                     008E   129 ;
                                     008E   130 ;	R6 = COMMAND BUFFER DISPLAY PARAMETER.
                                     008E   131 ;	R9 = ADDRESS OF NEXT BYTE IN COMMAND BUFFER.
                                     008E   132 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     008E   133 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     008E   134 ;
                                     008E   135 ; OUTPUTS:
                                     008E   136 ;
                                     008E   137 ;	R0 LOW BIT CLEAR IF EXPRESSION ERROR.
                                     008E   138 ;
                                     008E   139 ;		R0 = DCL$_COMPLX - EXPRESSION TOO COMPLEX.
                                     008E   140 ;		R0 = DCL$_EXPSYN - EXPRESSION SYNTAX ERROR.
                                     008E   141 ;		R0 = DCL$_IVCHAR - INVALID CHARACTER IN NUMERIC STRING.
                                     008E   142 ;		R0 = DCL$_IVOPER - INVALID EXPRESSION OPERATOR.
                                     008E   143 ;		R0 = DCL$_UNDSYM - UNDEFINED SYMBOL.
                                     008E   144 ;
                                     008E   145 ;			R6 = COMMAND BUFFER POINTER BACKUP PARAMETER.
                                     008E   146 ;
                                     008E   147 ;	R0 LOW BIT SET INDICATES SUCCESSFUL EVALUATION.
                                     008E   148 ;
                                     008E   149 ;		R0 = DCL$_NORMAL - NORMAL COMPLETION.
                                     008E   150 ;
                                     008E   151 ;			R1 = FINAL EXPRESSION VALUE.
                                     008E   152 ;-
                                     008E   153  
                                     008E   154 DCL$EXPRESS::				;ANALYZE EXPRESSION
            51            01     90  008E   155 	MOVB	#PRC_K_DEC,R1		;SET TO DEFAULT DECIMAL RADIX
                                     0091   156 DCL$EXPRADIX::				;ALTERNATE ENTRY-RADIX SET EXTERNAL
       0092 CB            51     90  0091   157 	MOVB	R1,PRC_B_DEFRADIX(R11)	;SET THE RADIX FOR LATER
            5A       FBB4 CD     DE  0096   158 	MOVAL	WRK_AG_RESULT(FP),R10	;RESET PARSE STACK
         FA AD       0040 8F     A8  009B   159 	BISW	#WRK_M_STAR,WRK_W_FLAGS(FP) ;SET ASTERISK TERMINATOR FLAG
            5C            5E     D0  00A1   160 	MOVL	SP,AP			;SAVE INITIAL STACK ADDRESS
            58            5E     D0  00A4   161 	MOVL	SP,R8			;SET ADDRESS OF PARSE STACK
            5E       FF7C CE     9E  00A7   162 	MOVAB	-MSGBUFSIZ(SP),SP	;ALLOCATE SPACE FOR PARSE STACK
            78            1C     D0  00AC   163 	MOVL	#<OPP_K_SOS>@16+OPI_K_SOS,-(R8) ;INITIALIZE PARSE STACK
            78            68     7D  00AF   164 	MOVQ	(R8),-(R8)		;DUPLICATE FIRST ITEM FOR ERROR CHECK
                                     00B2   165  
                                     00B2   166 ;
                                     00B2   167 ; PARSE NEXT ITEM
                                     00B2   168 ;
                                     00B2   169  
                                     00B2   170 10$:	SETCHAR				;PEEK AT NEXT CHARACTER IN INPUT BUFFER
            50            20     91  00B5   171 	CMPB	#^A/ /,R0		;BLANK?
                          03     12  00B8   172 	BNEQ	20$			;IF NEQ NO
                                     00BA   173 	MOVCHAR				;MOVE CHARACTER TO COMMAND BUFFER
            56            59     D0  00BD   174 20$:	MOVL	R9,R6			;SAVE DISPLAY PARAMETER
                                     00C0   175 	SETCHAR				;PEEK AT NEXT CHARACTER IN INPUT BUFFER
            50            2E     91  00C3   176 	CMPB	#^A/./,R0		;OPERATOR?
                          41     12  00C6   177 	BNEQ	70$			;IF NEQ NO
                                     00C8   178  
EXPRESS         - EXPRESSION ANALYSIS                            22-AUG-1978 01:14:47   VAX-11 MACRO X0.3-11               Page   5
01              EXPRESSION ANALYSIS                                                                                              (1)

                                     00C8   179 ;
                                     00C8   180 ; PROCESS OPERATOR
                                     00C8   181 ;
                                     00C8   182  
                                     00C8   183 	MOVBTOKN			;MOVE TERMINATOR AND GET NEXT BLANK TOKEN
            50            2E     91  00CB   184 	CMPB	#^A/./,R0		;TERMINATOR PERIOD?
                          03     12  00CE   185 	BNEQ	30$			;IF NEQ NO
                                     00D0   186 	MOVCHAR				;MOVE CHARACTER TO COMMAND BUFFER
            50       FF29 CF     9E  00D3   187 30$:	MOVAB	OPTAB,R0		;GET ADDRESS OF OPERATOR TABLE
            55            50     D0  00D8   188 40$:	MOVL	R0,R5			;RETRIEVE ADDRESS OF NEXT OPERATOR ENTRY
            50            85     9A  00DB   189 	MOVZBL	(R5)+,R0		;GET OFFSET TO NEXT OPERATOR ENTRY
                          7E     13  00DE   190 	BEQL	125$			;IF EQL END OF TABLE
            50            55     C0  00E0   191 	ADDL	R5,R0			;CALCULATE ADDRESS OF NEXT ENTRY
            85            51     91  00E3   192 	CMPB	R1,(R5)+		;LENGTH OF NAMES MATCH?
                          F0     12  00E6   193 	BNEQ	40$			;IF NEQ NO
            53            51     7D  00E8   194 	MOVQ	R1,R3			;COPY OPERATOR DESCRIPTOR
            85            84     91  00EB   195 50$:	CMPB	(R4)+,(R5)+		;CHARACTERS MATCH?
                          E8     12  00EE   196 	BNEQ	40$			;IF NEQ NO
            F8            53     F5  00F0   197 	SOBGTR	R3,50$			;ANY MORE CHARACTERS TO MATCH?
            51            85     9A  00F3   198 	MOVZBL	(R5)+,R1		;GET OPERATOR PRECEDENCE VALUE
            53            65     9A  00F6   199 	MOVZBL	(R5),R3			;GET OPERATOR INDEX VALUE
            53            20     D1  00F9   200 	CMPL	#OPI_K_LPAREN,R3	;LEFT PARENTHESIS?
                          74     12  00FC   201 	BNEQ	140$			;IF NEQ NO
            68            32     B1  00FE   202 	CMPW	#OPI_K_SYMBOL,STK_W_TYPE(R8) ;TOP OF STACK OPERAND?
                          03     14  0101   203 	BGTR	60$			;IF GTR NO
                          00F0   31  0103   204 	BRW	250$			;
                          008A   31  0106   205 60$:	BRW	170$			;
                                     0109   206  
                                     0109   207 ;
                                     0109   208 ; PROCESS OPERAND OR SINGLE CHARACTER OPERATOR
                                     0109   209 ;
                                     0109   210  
                                     0109   211 70$:	GETOKEN				;GET NEXT TOKEN FROM INPUT BUFFER
                          42     13  010C   212 	BEQL	120$			;IF EQL NONE
            68            32     B1  010E   213 	CMPW	#OPI_K_SYMBOL,STK_W_TYPE(R8) ;TOS A SYMBOL
                          0E     14  0111   214 	BGTR	80$			;BR IF OPERATOR IS TOP
            51            04     D1  0113   215 	CMPL	#4,R1			;POSSIBLY 'THEN' KEY WORD?
                          09     12  0116   216 	BNEQ	80$			;IF NEQ NO
            62   4E454854 8F     D1  0118   217 	CMPL	#^A/THEN/,(R2)		;'THEN' KEYWORD?
                          4B     13  011F   218 	BEQL	130$			;IF EQL YES
            7E            62     9A  0121   219 80$:	MOVZBL	(R2),-(SP)		;SAVE STARTING CHARACTER OF SYMBOL
                                     0124   220 	COMPSTRING			;COMPRESS QUOTED STRING
            53            34     9A  0127   221 	MOVZBL	#OPI_K_LITERAL,R3	;ASSUME LITERAL VALUE
            8E            22     D1  012A   222 	CMPL	#^A/"/,(SP)+		;STRING LITERAL?
                          18     13  012D   223 	BEQL	105$			;IF EQL YES
            62            25     91  012F   224 	CMPB	#^A/%/,(R2)		;NUMERIC RADIX OPERATOR?
                          13     13  0132   225 	BEQL	105$			;BR IF YES-ITS A NUMBER
            62            30     91  0134   226 	CMPB	#^A/0/,(R2)		;POSSIBLY NUMERIC CONSTANT?
                          05     1A  0137   227 	BGTRU	90$			;IF GTRU NO
            62            39     91  0139   228 	CMPB	#^A/9/,(R2)		;NUMERIC CONSTANT?
                          09     1E  013C   229 	BGEQU	105$			;IF GEQU YES
                                     013E   230 90$:	SEARCH				;SEARCH OPERAND TABLE FOR A MATCH
            05            50     E9  0141   231 	BLBC	R0,110$			;IF LBC SEARCH FAILURE
            53            32     9A  0144   232 100$:	MOVZBL	#OPI_K_SYMBOL,R3	;SET TYPE OF ITEM
                          4A     11  0147   233 105$:	BRB	170$			;
                                     0149   234 110$:	STATUS	UNDSYM			;SET UNDEFINED SYMBOL STATUS
                          00A9   31  014D   235 	BRW	260$			;
EXPRESS         - EXPRESSION ANALYSIS                            22-AUG-1978 01:14:47   VAX-11 MACRO X0.3-11               Page   6
01              EXPRESSION ANALYSIS                                                                                              (1)

                                     0150   236  
                                     0150   237 ;
                                     0150   238 ; ZERO LENGTH TOKEN - MUST BE OPERATOR SYMBOL
                                     0150   239 ;
                                     0150   240  
            52            59     D0  0150   241 120$:	MOVL	R9,R2			;SET ADDRESS OF START OF SYMBOL
                                     0153   242 	MOVCHAR				;MOVE TERMINATOR TO COMMAND BUFFER
                          14     13  0156   243 	BEQL	130$			;IF EQL END OF LINE
            51            01     D0  0158   244 	MOVL	#1,R1			;SET LENGTH OF STRING
                          FF75   31  015B   245 	BRW	30$			;
                                     015E   246  
                                     015E   247 ;
                                     015E   248 ; END OF STATEMENT
                                     015E   249 ;
                                     015E   250  
                                     015E   251 125$:	STATUS	IVOPER			;ASSUME INVALID OPERATOR
         FF A2            2E     91  0161   252 	CMPB	#^A/./,-1(R2)		; WAS THIS A DOTTED KEY WORD?
                          3D     13  0165   253 	BEQL	185$			;IF YES-THAT IS AN ERROR
                          59     D7  0167   254 	DECL	R9			;END WITH SPECIAL CHARATER-BACK UP
                       FC AD     D7  0169   255 	DECL	WRK_L_CHARPTR(FP)	;OUTPUT  BUFFER AND INPUT POINTERS
            51            01     9A  016C   256 130$:	MOVZBL	#OPP_K_EOS,R1		;SET END OF STATEMENT PRECEDENCE VALUE
            53            1E     9A  016F   257 	MOVZBL	#OPI_K_EOS,R3		;SET END OF STATEMENT OPERATOR INDEX
                                     0172   258  
                                     0172   259 ;
                                     0172   260 ; COMPARE OPERATOR PRECEDENCE VALUE WITH OPERATOR IN NEXT TO LAST ITEM ON STACK
                                     0172   261 ;
                                     0172   262  
         08 A8            32     B1  0172   263 140$:	CMPW	#OPI_K_SYMBOL,STK_W_TYPE+STK_K_LENGTH(R8) ;PREVIOUS ITEM OPERATOR?
                          06     15  0176   264 	BLEQ	150$			;IF LEQ NO
            51         0A A8     B1  0178   265 	CMPW	STK_W_PREC+STK_K_LENGTH(R8),R1 ;STACK OPERATOR HIGHER PRECEDENCE?
                          28     18  017C   266 	BGEQ	190$			;IF GEQ YES
            53            22     D1  017E   267 150$:	CMPL	#OPI_K_RPAREN,R3	;CURRENT OPERATOR RIGHT PARENTHESIS?
                          0B     12  0181   268 	BNEQ	160$			;IF NEQ NO
         08 A8            20     B1  0183   269 	CMPW	#OPI_K_LPAREN,STK_W_TYPE+STK_K_LENGTH(R8) ;OPERATOR LEFT PAREN?
                          6D     12  0187   270 	BNEQ	250$			;IF NEQ NO
            68            88     7D  0189   271 	MOVQ	(R8)+,(R8)		;REMOVE LEFT PARENTHESIS FROM STACK
                          13     11  018C   272 	BRB	180$			;
            53            1E     D1  018E   273 160$:	CMPL	#OPI_K_EOS,R3		;END OF STATEMENT OPERATOR?
                          6A     13  0191   274 	BEQL	270$			;IF EQL YES
            78            52     D0  0193   275 170$:	MOVL	R2,-(R8)		;STACK NEW ITEM
            78            51     B0  0196   276 	MOVW	R1,-(R8)		;
            78            53     B0  0199   277 	MOVW	R3,-(R8)		;
            5E            58     D1  019C   278 	CMPL	R8,SP			;PARSE STACK OVERFLOW?
                          50     1B  019F   279 	BLEQU	240$			;IF LEQU YES
                          FF0E   31  01A1   280 180$:	BRW	10$			;
                          53     11  01A4   281 185$:	BRB	260$			;
                                     01A6   282  
                                     01A6   283 ;
                                     01A6   284 ; UNSTACK TRIAD FROM PARSE STACK
                                     01A6   285 ;
                                     01A6   286  
                          0A     BB  01A6   287 190$:	PUSHR	#^M<R1,R3>		;SAVE OPERATOR PARAMETERS
            68            32     B1  01A8   288 	CMPW	#OPI_K_SYMBOL,STK_W_TYPE(R8) ;TOP ITEM ON STACK OPERAND?
                          49     14  01AB   289 	BGTR	250$			;IF GTR NO
            54            88     7D  01AD   290 	MOVQ	(R8)+,R4		;REMOVE RIGHT HAND OPERAND FROM STACK
            52            88     7D  01B0   291 	MOVQ	(R8)+,R2		;REMOVE OPERATOR FROM STACK
            52            02     B1  01B3   292 	CMPW	#OPI_K_NOT,R2		;BOOLEAN NOT?
EXPRESS         - EXPRESSION ANALYSIS                            22-AUG-1978 01:14:47   VAX-11 MACRO X0.3-11               Page   7
01              EXPRESSION ANALYSIS                                                                                              (1)

                          1C     13  01B6   293 	BEQL	220$			;IF EQL YES
            68            32     B1  01B8   294 	CMPW	#OPI_K_SYMBOL,STK_W_TYPE(R8) ;TOP ITEM ON STACK OPERAND?
                          14     15  01BB   295 	BLEQ	210$			;IF LEQ YES
            52            06     B1  01BD   296 	CMPW	#OPI_K_ADD,R2		;OPERATOR UNARY PLUS?
                          05     12  01C0   297 	BNEQ	200$			;IF NEQ NO
            78            54     7D  01C2   298 	MOVQ	R4,-(R8)		;RESTACK RIGHT HAND OPERAND
                          26     11  01C5   299 	BRB	230$			;
            52            08     B1  01C7   300 200$:	CMPW	#OPI_K_SUB,R2		;OPERATOR UNARY MINUS?
                          2A     12  01CA   301 	BNEQ	250$			;IF NEQ NO
            52            0E     9A  01CC   302 	MOVZBL	#OPI_K_NEG,R2		;SET INTEGER NEGATION OPERATOR
                          03     11  01CF   303 	BRB	220$			;
            50            88     7D  01D1   304 210$:	MOVQ	(R8)+,R0		;REMOVE LEFT HAND OPERAND FROM STACK
            78            6A     9E  01D4   305 220$:	MOVAB	(R10),-(R8)		;PUSH ADDRESS OF STACK OPERAND
            78            36     9A  01D7   306 	MOVZBL	#OPI_K_STACK,-(R8)	;PUSH OPERAND INDEX VALUE
            7E       FD20 CD     9E  01DA   307 	MOVAB	WRK_L_RSLNXT-20(FP),-(SP) ;GET NEW TOP OF TRIAD STACK ADDRESS
            8E            5A     D1  01DF   308 	CMPL	R10,(SP)+		;TRIAD STACK OVERFLOW?
                          0D     1A  01E2   309 	BGTRU	240$			;IF GTRU YES
            8A            54     7D  01E4   310 	MOVQ	R4,(R10)+		;PUSH RIGHT HAND OPERAND
            8A            52     3C  01E7   311 	MOVZWL	R2,(R10)+		;PUSH OPERATOR INDEX
            8A            50     7D  01EA   312 	MOVQ	R0,(R10)+		;PUSH LEFT HAND OPERAND
                          0A     BA  01ED   313 230$:	POPR	#^M<R1,R3>		;RETRIEVE OPERATOR PARAMETERS
                          81     11  01EF   314 	BRB	140$			;
                                     01F1   315  
                                     01F1   316 ;
                                     01F1   317 ; EXPRESION TOO COMPLEX
                                     01F1   318 ;
                                     01F1   319  
                                     01F1   320 240$:	STATUS	COMPLX			;SET COMPLEX EXPRESSION STATUS
                          03     11  01F4   321 	BRB	260$			;
                                     01F6   322  
                                     01F6   323 ;
                                     01F6   324 ; EXPRESSION SYNTAX ERROR
                                     01F6   325 ;
                                     01F6   326  
                                     01F6   327 250$:	STATUS	EXPSYN			;SET EXPRESSION SYNTAX ERROR STATUS
            5E            5C     D0  01F9   328 260$:	MOVL	AP,SP			;CLEAN STACK
                                 05  01FC   329 	RSB				;
                                     01FD   330  
                                     01FD   331 ;
                                     01FD   332 ; END OF STATEMENT - CHECK FOR VALID PARSE
                                     01FD   333 ;
                                     01FD   334  
            68            32     B1  01FD   335 270$:	CMPW	#OPI_K_SYMBOL,STK_W_TYPE(R8) ;TOP ITEM ON STACK OPERAND?
                          F4     14  0200   336 	BGTR	250$			;IF GTR NO
            7E       FD28 CD     9E  0202   337 	MOVAB	WRK_L_RSLNXT-12(FP),-(SP) ;GET NEW TOP OF TRIAD STACK ADDRESS
            8E            5A     D1  0207   338 	CMPL	R10,(SP)+		;TRIAD STACK OVERFLOW?
                          E5     1A  020A   339 	BGTRU	240$			;IF GTRU YES
            8A            88     7D  020C   340 	MOVQ	(R8)+,(R10)+		;MOVE RIGHT HAND OPERAND TO TRIAD STACK
            68            1C     B1  020F   341 	CMPW	#OPI_K_SOS,STK_W_TYPE(R8) ;TOP OF STACK START OF STATEMENT?
                          E2     12  0212   342 	BNEQ	250$			;IF NEQ NO
            6A            24     9A  0214   343 	MOVZBL	#OPI_K_STORE,(R10)	;INSERT STORE OPERATOR
            5E            5C     D0  0217   344 	MOVL	AP,SP			;CLEAN STACK
                                     021A   345  
                                     021A   346 ;
                                     021A   347 ; EVALUATE IF EXPRESSION
                                     021A   348 ;
                                     021A   349  
EXPRESS         - EXPRESSION ANALYSIS                            22-AUG-1978 01:14:47   VAX-11 MACRO X0.3-11               Page   8
01              EXPRESSION ANALYSIS                                                                                              (1)

                                     021A   350 EVALUATE:				;EVALUATE IF EXPRESSION
            5A       FBB4 CD     9E  021A   351 	MOVAB	WRK_AG_RESULT(FP),R10	;GET STARTING ADDRESS OF TRIAD STACK
            5C            5A     D0  021F   352 10$:	MOVL	R10,AP			;SAVE ADDRESS TO STORE TRIAD RESULT
                          56     D4  0222   353 	CLRL	R6			;ASSUME OPERATION RESULT IS FALSE
                          48     10  0224   354 	BSBB	FETCH			;FETCH RIGHT HAND OPERAND PARAMETERS
            55            8A     D0  0226   355 	MOVL	(R10)+,R5		;FETCH OPERATOR INDEX
            55            26     D1  0229   356 	CMPL	#OPI_K_EQS,R5		;STRING OPERATOR?
                          1D     15  022C   357 	BLEQ	20$			;IF LEQ YES
                                     022E   358  
                                     022E   359 ;
                                     022E   360 ; ARITHMETIC RELATIONAL OR BOOLEAN OPERATOR
                                     022E   361 ;
                                     022E   362  
                          63     10  022E   363 	BSBB	NUMERIC			;CONVERT RIGHT HAND OPERAND TO NUMERIC
            57            50     D0  0230   364 	MOVL	R0,R7			;SAVE RIGHT HAND OPERAND VALUE
            55            24     D1  0233   365 	CMPL	#OPI_K_STORE,R5		;STORE OPERATOR?
                          2F     13  0236   366 	BEQL	40$			;IF EQL YES
                          34     10  0238   367 	BSBB	FETCH			;FETCH LEFT HAND OPERAND PARAMETERS
            55            02     D1  023A   368 	CMPL	#OPI_K_NOT,R5		;BOOLEAN NOT OPERATOR?
                          1E     13  023D   369 	BEQL	30$			;IF EQL YES
            55            0E     D1  023F   370 	CMPL	#OPI_K_NEG,R5		;INTEGER NEGATION?
                          19     13  0242   371 	BEQL	30$			;IF EQL YES
                          4D     10  0244   372 	BSBB	NUMERIC			;CONVERT LEFT HAND OPERAND TO NUMERIC
            57            50     D1  0246   373 	CMPL	R0,R7			;COMPARE RIGHT AND LEFT HAND OPERANDS
                          12     11  0249   374 	BRB	30$			;
                                     024B   375  
                                     024B   376 ;
                                     024B   377 ; STRING RELATIONAL OPERATOR
                                     024B   378 ;
                                     024B   379  
                          2B     10  024B   380 20$:	BSBB	STRING			;CONVERT RIGHT HAND OPERAND TO STRING
            57            51     7D  024D   381 	MOVQ	R1,R7			;SAVE RIGHT HAND OPERAND STRING DESCRIPTOR
                          1C     10  0250   382 	BSBB	FETCH			;FETCH LEFT HAND OPERAND PARAMETERS
                          24     10  0252   383 	BSBB	STRING			;CONVERT LEFT HAND OPERAND TO STRING
            55            16     C2  0254   384 	SUBL	#OPI_K_EQS-OPI_K_EQ,R5 ;NORMALIZE OPERATOR INDEX
            62            51     2D  0257   385 	CMPC5	R1,(R2),#^A/ /,R7,(R8)	;COMPARE RIGHT AND LEFT HAND OPERANDS
            57            20         025A       
                          68         025C       
                     02D6'CF45   16  025D   386 30$:	JSB	W^DISPATCH[R5]		;EXECUTE OPERATOR SPECIFIC ROUTINE
            6C            56     D0  0262   387 	MOVL	R6,(AP)			;STORE OPERATION RESULT
                          B8     11  0265   388 	BRB	10$			;
                                     0267   389  
                                     0267   390 ;
                                     0267   391 ; STORE RESULT OPERATOR
                                     0267   392 ;
                                     0267   393  
            51            50     D0  0267   394 40$:	MOVL	R0,R1			;SET EXPRESSION RESULT
                                     026A   395 	STATUS	NORMAL			;SET NORMAL COMPLETION STATUS
                                 05  026D   396 	RSB				;
EXPRESS         - EXPRESSION ANALYSIS                            22-AUG-1978 01:14:47   VAX-11 MACRO X0.3-11               Page   9
01              FETCH NEXT OPERAND FROM TRIAD STACK                                                                              (1)

                                     026E   398 	.SBTTL	FETCH NEXT OPERAND FROM TRIAD STACK
                                     026E   399 ;
                                     026E   400 ; FETCH - FETCH NEXT OPERAND FROM TRIAD STACK
                                     026E   401 ;
                                     026E   402  
            50            8A     3C  026E   403 FETCH:	MOVZWL	(R10)+,R0		;GET TYPE OF OPERAND
            51            8A     3C  0271   404 	MOVZWL	(R10)+,R1		;GET LENGTH OF OPERAND
            52            8A     D0  0274   405 	MOVL	(R10)+,R2		;GET ADDRESS OF OPERAND
                                 05  0277   406 	RSB				;
EXPRESS         - EXPRESSION ANALYSIS                            22-AUG-1978 01:14:47   VAX-11 MACRO X0.3-11               Page  10
01              CONVERT STRING PARAMETERS TO STRING OPERAND                                                                      (1)

                                     0278   408 	.SBTTL	CONVERT STRING PARAMETERS TO STRING OPERAND
                                     0278   409 ;
                                     0278   410 ; STRING - CONVERT STACK PARAMETERS TO STRING OPERAND
                                     0278   411 ;
                                     0278   412  
                                     0278   413 STRING:					;STRING OPERAND
            50            36     D1  0278   414 	CMPL	#OPI_K_STACK,R0		;STACK OPERAND?
                          15     12  027B   415 	BNEQ	10$			;IF NEQ NO
            50            62     D0  027D   416 	MOVL	(R2),R0			;GET STACK OPERAND VALUE
            51            04     D0  0280   417 	MOVL	#4,R1			;ASSUME 'TRUE'
            52       FDFA CF     9E  0283   418 	MOVAB	TRUE,R2			;
            07            50     E8  0288   419 	BLBS	R0,10$			;IF LBS 'TRUE' VALUE
                          51     D6  028B   420 	INCL	R1			;SET 'FALSE' VALUE
            52       FDF4 CF     9E  028D   421 	MOVAB	FALSE,R2		;
                                 05  0292   422 10$:	RSB				;
EXPRESS         - EXPRESSION ANALYSIS                            22-AUG-1978 01:14:47   VAX-11 MACRO X0.3-11               Page  11
01              CONVERT OPERAND PARAMETERS TO NUMERIC VALUE                                                                      (1)

                                     0293   424 	.SBTTL	CONVERT OPERAND PARAMETERS TO NUMERIC VALUE
                                     0293   425 ;
                                     0293   426 ; NUMERIC - CONVERT OPERAND PARAMETERS TO NUMERIC VALUE
                                     0293   427 ;
                                     0293   428  
                                     0293   429 NUMERIC:				;NUMERIC OPERAND
            50            36     D1  0293   430 	CMPL	#OPI_K_STACK,R0		;STACK OPERAND?
                          21     13  0296   431 	BEQL	70$			;IF EQL YES
                          51     D5  0298   432 	TSTL	R1			;ZERO LENGTH STRING?
                          19     13  029A   433 	BEQL	30$			;BR IF YES - RETURN THE ZERO
            52            51     7D  029C   434 	MOVQ	R1,R2			;SET DESCRIPTOR FOR STRING
            51            01     9A  029F   435 	MOVZBL	#PRC_K_DEC,R1		;ASSUME NORMAL RADIX
            50            34     D1  02A2   436 	CMPL	#OPI_K_LITERAL,R0	;IS THIS A LITERAL?
                          05     12  02A5   437 	BNEQ	10$			;BR IF NO-USE DECIMAL
            51       0092 CB     9A  02A7   438 	MOVZBL	PRC_B_DEFRADIX(R11),R1	;SET RADIX INDICATOR
                          53     DD  02AC   439 10$:	PUSHL	R3			;SAVE START OF SYMBOL
                          FD4F'  30  02AE   440 	BSBW	DCL$CNVASCBIN		;CONVERT NUMBER
                          04     BA  02B1   441 	POPR	#^M<R2>			;RESTORE START OF SYMBOL
                          08     12  02B3   442 	BNEQ	80$			;BR IF CONVERSION ERROR
            50            51     D0  02B5   443 30$:	MOVL	R1,R0			;SET VALUE
                                 05  02B8   444 	RSB				;
            50            62     D0  02B9   445 70$:	MOVL	(R2),R0			;GET STACK OPERAND
                                 05  02BC   446 	RSB				;
                                     02BD   447  
                                     02BD   448 ;
                                     02BD   449 ; INVALID CHARACTER IN STRING-CHECK FOR BEGINNING LETTER "TFYN"
                                     02BD   450 ;
                                     02BD   451  
            04            62     3A  02BD   452 80$:	LOCC	(R2),#4,TRUFLS		;CHECK FOR SPECIAL CHARACTERS
                     FDC7 CF         02C0       
                          04     13  02C3   453 	BEQL	85$			;RETURN ERROR IF NO MATCH
            50            06     CA  02C5   454 	BICL	#6,R0			;CONVERT COUNT TO 0 OR 1
                                 05  02C8   455 	RSB				;RETURN WITH TRUE/FALSE
            59         01 A3     9E  02C9   456 85$:	MOVAB	1(R3),R9		;SET END OF ERROR SEGMENT
            56            52     D0  02CD   457 	MOVL	R2,R6			;AND START OF ERROR SEGMENT
                          8E     D5  02D0   458 	TSTL	(SP)+			;CLEAN STACK OF PREVIOUS CALLER
                                     02D2   459 	STATUS	IVCHAR			;INVALID CHARACTER
                                 05  02D5   460 	RSB				;RETURN TO REAL CALLER
EXPRESS         - EXPRESSION ANALYSIS                            22-AUG-1978 01:14:47   VAX-11 MACRO X0.3-11               Page  12
01              DISPATCH OPERATOR FUNCTION                                                                                       (1)

                                     02D6   462 	.SBTTL	DISPATCH OPERATOR FUNCTION
                                     02D6   463 ;
                                     02D6   464 ; DISPATCH OPERATOR FUNCTION
                                     02D6   465 ;
                                     02D6   466  
                                     02D6   467 DISPATCH:				;
                          1B     11  02D6   468 	BRB	AND			;BOOLEAN AND
                          21     11  02D8   469 	BRB	NOT			;BOOLEAN NOT
                          23     11  02DA   470 	BRB	OR			;BOOLEAN OR
                          26     11  02DC   471 	BRB	ADD			;INTEGER ADD
                          29     11  02DE   472 	BRB	SUB			;INTEGER SUBTRACT
                          2C     11  02E0   473 	BRB	MUL			;INTEGER MULTIPLY
                          2F     11  02E2   474 	BRB	DIV			;INTEGER DIVIDE
                          43     11  02E4   475 	BRB	NEG			;INTEGER NEGATION
                          45     11  02E6   476 	BRB	EQL			;EQUAL
                          46     11  02E8   477 	BRB	GEQ			;GREATER OR EQUAL
                          47     11  02EA   478 	BRB	GTR			;GREATER
                          48     11  02EC   479 	BRB	LEQ			;LESS OR EQUAL
                          49     11  02EE   480 	BRB	LSS			;LESS
                                     02F0   481  
                                     02F0   482 ;
                                     02F0   483 ; NOT EQUAL
                                     02F0   484 ;
                                     02F0   485  
                          4A     12  02F0   486 NEQ:	BNEQ	SETRUE			;IF NEQ SETRUE RESULT
                                 05  02F2   487 	RSB				;
                                     02F3   488  
                                     02F3   489 ;
                                     02F3   490 ; BOOLEAN AND
                                     02F3   491 ;
                                     02F3   492  
            50            50     D2  02F3   493 AND:	MCOML	R0,R0			;COMPLEMENT LEFT HAND OPERAND
            57            50     CB  02F6   494 	BICL3	R0,R7,R6		;FORM BOOLEAN AND FUNCTION
                          56         02F9       
                                 05  02FA   495 	RSB				;
                                     02FB   496  
                                     02FB   497 ;
                                     02FB   498 ; BOOLEAN NOT
                                     02FB   499 ;
                                     02FB   500  
            56            57     D2  02FB   501 NOT:	MCOML	R7,R6			;FORM BOOLEAN NOT FUNCTION
                                 05  02FE   502 	RSB				;
                                     02FF   503  
                                     02FF   504 ;
                                     02FF   505 ; BOOLEAN OR
                                     02FF   506 ;
                                     02FF   507  
            57            50     C9  02FF   508 OR:	BISL3	R0,R7,R6		;FORM BOOLEAN OR FUNCTION
                          56         0302       
                                 05  0303   509 	RSB				;
                                     0304   510  
                                     0304   511 ;
                                     0304   512 ; INTEGER ADD
                                     0304   513 ;
                                     0304   514  
            57            50     C1  0304   515 ADD:	ADDL3	R0,R7,R6		;FORM ARITHMETIC SUM
                          56         0307       
EXPRESS         - EXPRESSION ANALYSIS                            22-AUG-1978 01:14:47   VAX-11 MACRO X0.3-11               Page  13
01              DISPATCH OPERATOR FUNCTION                                                                                       (1)

                                 05  0308   516 	RSB				;
                                     0309   517  
                                     0309   518 ;
                                     0309   519 ; INTEGER SUBTRACT
                                     0309   520 ;
                                     0309   521  
            50            57     C3  0309   522 SUB:	SUBL3	R7,R0,R6		;FORM ARITHMETIC DIFFERENCE
                          56         030C       
                                 05  030D   523 	RSB				;
                                     030E   524  
                                     030E   525 ;
                                     030E   526 ; INTEGER MULTIPLY
                                     030E   527 ;
                                     030E   528  
            57            50     C5  030E   529 MUL:	MULL3	R0,R7,R6		;FORM ARITHMETIC PRODUCT
                          56         0311       
                                 05  0312   530 	RSB				;
                                     0313   531  
                                     0313   532 ;
                                     0313   533 ; INTEGER DIVIDE
                                     0313   534 ;
                                     0313   535  
            56            57     D0  0313   536 DIV:	MOVL	R7,R6			;DIVIDE BY ZERO ATTEMPT?
                          0C     12  0316   537 	BNEQ	20$			;BR IF NO
                                     0318   538 	SETBIT	#31,R6			;MAKE RESULT THE HIGHEST NEGATIVE NUMBER
                          50     D5  031C   539 	TSTL	R0			;SOURCE NEGATIVE?
                          03     19  031E   540 	BLSS	10$			;BR IF YES
            56            56     D2  0320   541 	MCOML	R6,R6			;MAKE THE LARGEST POSITIVE NUMBER
                                 05  0323   542 10$:	RSB				;
            50            57     C7  0324   543 20$:	DIVL3	R7,R0,R6		;FORM ARITHMETIC QUOTIENT
                          56         0327       
                                 05  0328   544 	RSB				;
                                     0329   545  
                                     0329   546  
                                     0329   547 ;
                                     0329   548 ; INTEGER NEGATION
                                     0329   549 ;
                                     0329   550  
            56            57     CE  0329   551 NEG:	MNEGL	R7,R6			;NEGATE OPERAND
                                 05  032C   552 	RSB				;
                                     032D   553  
                                     032D   554 ;
                                     032D   555 ; EQUAL
                                     032D   556 ;
                                     032D   557  
                          0D     13  032D   558 EQL:	BEQL	SETRUE			;IF EQL SETRUE RESULT
                                 05  032F   559 	RSB				;
                                     0330   560  
                                     0330   561 ;
                                     0330   562 ; GREATER OR EQUAL
                                     0330   563 ;
                                     0330   564  
                          0A     18  0330   565 GEQ:	BGEQ	SETRUE			;IF GEQ SETRUE RESULT
                                 05  0332   566 	RSB				;
                                     0333   567  
                                     0333   568 ;
                                     0333   569 ; GREATER
EXPRESS         - EXPRESSION ANALYSIS                            22-AUG-1978 01:14:47   VAX-11 MACRO X0.3-11               Page  14
01              DISPATCH OPERATOR FUNCTION                                                                                       (1)

                                     0333   570 ;
                                     0333   571  
                          07     14  0333   572 GTR:	BGTR	SETRUE			;IF GTR SETRUE RESULT
                                 05  0335   573 	RSB				;
                                     0336   574  
                                     0336   575 ;
                                     0336   576 ; LESS OF EQUAL
                                     0336   577 ;
                                     0336   578  
                          04     15  0336   579 LEQ:	BLEQ	SETRUE			;IF LEQ SETRUE RESULT
                                 05  0338   580 	RSB				;
                                     0339   581  
                                     0339   582 ;
                                     0339   583 ; LESS
                                     0339   584 ;
                                     0339   585  
                          01     19  0339   586 LSS:	BLSS	SETRUE			;IF LSS SETRUE RESULT
                                 05  033B   587 	RSB				;
                                     033C   588  
                                     033C   589 ;
                                     033C   590 ; RETURN SETRUE RESULT
                                     033C   591 ;
                                     033C   592  
                          56     D6  033C   593 SETRUE:	INCL	R6			;SET RESULT SETRUE
                                 05  033E   594 	RSB				;
                                     033F   595  
                                     033F   596 	.END
EXPRESS         - EXPRESSION ANALYSIS                            22-AUG-1978 01:14:47   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                     (1)

ADD              00000304 R     03   CLI$_ONLEVL    = 00038100            OPI_K_GES      = 00000028            
AND              000002F3 R     03   CLI$_ONOVF     = 00038108            OPI_K_GT       = 00000014            
BIT...         = 0003FFE9            CLI$_OVRFLW    = 00038160            OPI_K_GTS      = 0000002A            
CLI$_ABFNAM    = 000381B8            CLI$_PARMDEL   = 00038110            OPI_K_LE       = 00000016            
CLI$_ABKEYW    = 00038000            CLI$_PROC_ID   = 0003FFF1            OPI_K_LES      = 0000002C            
CLI$_ABVERB    = 00038008            CLI$_QUEJOBCRE = 0003FFF9            OPI_K_LITERAL  = 00000034            
CLI$_BADRET    = 00038198            CLI$_REQPRMABS = 00038812            OPI_K_LPAREN   = 00000020            
CLI$_BADTEXT   = 000381B0            CLI$_RSLOVF    = 00038118            OPI_K_LT       = 00000018            
CLI$_BUFOVF    = 00038018            CLI$_SKPDAT    = 00038120            OPI_K_LTS      = 0000002E            
CLI$_COMPLX    = 00038020            CLI$_SPARE0    = 00038010            OPI_K_MUL      = 0000000A            
CLI$_CONFQUAL  = 00038802            CLI$_SPARE1    = 00038058            OPI_K_NE       = 0000001A            
CLI$_CREQUEJOB = 0003884A            CLI$_STKOVF    = 00038128            OPI_K_NEG      = 0000000E            
CLI$_DEFOVF    = 00038028            CLI$_SUBMITERR = 00038852            OPI_K_NES      = 00000030            
CLI$_DEVALSPL  = 0003885A            CLI$_SYMDEL    = 00038130            OPI_K_NOT      = 00000002            
CLI$_DEVNOTFOR = 0003887A            CLI$_SYMOVF    = 00038138            OPI_K_OR       = 00000004            
CLI$_DEVNOTSPL = 00038862            CLI$_UNDFIL    = 00038188            OPI_K_RPAREN   = 00000022            
CLI$_DIRECT    = 00038030            CLI$_UNDSYM    = 00038140            OPI_K_SOS      = 0000001C            
CLI$_EXPSYN    = 00038038            CLI$_UNPROPARM = 00038170            OPI_K_STACK    = 00000036            
CLI$_FILOPN    = 00038190            CLI$_UNPROQUAL = 00038168            OPI_K_STORE    = 00000024            
CLI$_ILLVAL    = 0003883A            CLI$_USGOTO    = 00038148            OPI_K_SUB      = 00000008            
CLI$_IMCHNG    = 00038040            CLI$_VALCNVERR = 00038832            OPI_K_SYMBOL   = 00000032            
CLI$_IMGFNF    = 00038872            CLI$_VALREQ    = 00038150            OPP_K_ADD      = 00000008            
CLI$_INSFPRM   = 00038048            CMDBUFSIZ      = 000001FC            OPP_K_AND      = 00000005            
CLI$_INVKEY    = 00038178            DCL$CNVASCBIN    ********   X   03   OPP_K_DIV      = 00000009            
CLI$_INVQUAL   = 0003880A            DCL$COMPSTRING   ********   X   03   OPP_K_EOS      = 00000001            
CLI$_INVQUALNUM= 0003881A            DCL$EXPRADIX     00000091 RG    03   OPP_K_EQ       = 00000007            
CLI$_INVREQTYP = 00038822            DCL$EXPRESS      0000008E RG    03   OPP_K_EQS      = 00000007            
CLI$_INVRSP    = 00038180            DCL$GETOKEN      ********   X   03   OPP_K_GE       = 00000007            
CLI$_INVUIC    = 000381A8            DCL$MOVBTOKN     ********   X   03   OPP_K_GES      = 00000007            
CLI$_IVCHAR    = 00038050            DCL$MOVCHAR      ********   X   03   OPP_K_GT       = 00000007            
CLI$_IVDEVTYPE = 0003886A            DCL$SEARCH       ********   X   03   OPP_K_GTS      = 00000007            
CLI$_IVFNAM    = 000381C0            DCL$SETCHAR      ********   X   03   OPP_K_LE       = 00000007            
CLI$_IVKEYW    = 00038060            DISPATCH         000002D6 R     03   OPP_K_LES      = 00000007            
CLI$_IVOPER    = 00038068            DIV              00000313 R     03   OPP_K_LPAREN   = 00000002            
CLI$_IVPROT    = 00038070            EQL              0000032D R     03   OPP_K_LT       = 00000007            
CLI$_IVQLOC    = 00038078            EVALUATE         0000021A R     03   OPP_K_LTS      = 00000007            
CLI$_IVSYMB    = 00038080            FALSE            00000085 R     03   OPP_K_MUL      = 00000009            
CLI$_IVVALU    = 00038088            FETCH            0000026E R     03   OPP_K_NE       = 00000007            
CLI$_IVVERB    = 00038090            GBL...         = 00000000            OPP_K_NES      = 00000007            
CLI$_MAXPARM   = 00038098            GEQ              00000330 R     03   OPP_K_NOT      = 00000006            
CLI$_MULKEY    = 000381A0            GTR              00000333 R     03   OPP_K_OR       = 00000004            
CLI$_NOATFIL   = 000380A0            INPBUFSIZ      = 00000084            OPP_K_RPAREN   = 00000003            
CLI$_NOCCAT    = 000380A8            LEQ              00000336 R     03   OPP_K_SOS      = 00000000            
CLI$_NOCOMD    = 000380B0            LSS              00000339 R     03   OPP_K_STORE    = 00000000            
CLI$_NOKEYW    = 000380B8            MSGBUFSIZ      = 00000084            OPP_K_SUB      = 00000008            
CLI$_NOLIST    = 000380C0            MUL              0000030E R     03   OPTAB            00000000 R     03   
CLI$_NOOPTPRS  = 00038842            NEG              00000329 R     03   OR               000002FF R     03   
CLI$_NOQUAL    = 000380C8            NEQ              000002F0 R     03   PRC_B_DEFRADIX   00000092            
CLI$_NORMAL    = 00030001            NOT              000002FB R     03   PRC_B_EXMDEPMOD  00000091            
CLI$_NOTNEG    = 000380D8            NUMERIC          00000293 R     03   PRC_B_EXMDEPWID  00000090            
CLI$_NOVALU    = 000380D0            OPI_K_ADD      = 00000006            PRC_K_DEC      = 00000001            
CLI$_NOVALUE   = 0003882A            OPI_K_AND      = 00000000            PRC_K_HEX      = 00000000            
CLI$_NULFIL    = 000380E0            OPI_K_DIV      = 0000000C            PRC_K_LENGTH     000000A0            
CLI$_NUMBER    = 000380E8            OPI_K_EOS      = 0000001E            PRC_K_OCT      = 00000002            
CLI$_ONCOMD    = 000380F0            OPI_K_EQ       = 00000010            PRC_L_CLIWRK0    0000005C            
CLI$_ONERR     = 000380F8            OPI_K_EQS      = 00000026            PRC_L_CLIWRK1    00000060            
CLI$_ONEVAL    = 00038158            OPI_K_GE       = 00000012            PRC_L_CLIWRK2    00000064            
EXPRESS         - EXPRESSION ANALYSIS                            22-AUG-1978 01:14:47   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                     (1)

PRC_L_CLIWRK3    00000068            PRC_V_USRDET   = 00000008            WRK_V_STAR     = 00000006            
PRC_L_CLIWRK4    0000006C            PRC_V_VERIFY   = 00000007            WRK_V_TRAILSPC = 0000000A            
PRC_L_ERRRAB     00000010            PRC_V_YLEVEL   = 0000000B            WRK_V_VERB     = 00000007            
PRC_L_EXMDEPADR  0000008C            PRC_W_CLIFLAG    00000052            WRK_W_FLAGS      FFFFFFFA            
PRC_L_EXTARG     00000078            PRC_W_ERRIFI     00000052            WRK_W_IMGCHAN    FFFFFFF8            
PRC_L_EXTBLK     00000070            PRC_W_FLAGS      00000054            _$$_           = 00000000            
PRC_L_EXTCOD     00000080            PRC_W_INPCHAN    00000050            
PRC_L_EXTHND     00000074            PRC_W_ONLEVEL    00000056            
PRC_L_EXTPRM     0000007C            RSLBUFSIZ      = 00000180            
PRC_L_INDEPTH    00000048            SETRUE           0000033C R     03   
PRC_L_INDFAB     0000001C            STK_K_LENGTH     00000008            
PRC_L_INDINPRAB  00000014            STK_L_ADDR       00000004            
PRC_L_INDOUTRAB  00000018            STK_W_PREC       00000002            
PRC_L_INPRAB     00000008            STK_W_SIZE       00000002            
PRC_L_LSTSTATUS  00000094            STK_W_TYPE       00000000            
PRC_L_ONCTLY     0000009C            STRING           00000278 R     03   
PRC_L_ONERROR    00000058            SUB              00000309 R     03   
PRC_L_OUTRAB     0000000C            TRUE             00000081 R     03   
PRC_L_PROCUIC    00000098            TRUFLS           0000008A R     03   
PRC_L_SAVAP      00000000            WRK_AB_BUFFER    FFFFFD38            
PRC_L_SAVFP      00000004            WRK_AG_RESULT    FFFFFBB4            
PRC_L_SEVERITY   00000040            WRK_B_VERBTYP    FFFFFFC0            
PRC_L_STACKLM    00000088            WRK_K_LENGTH     FFFFFBB4            
PRC_L_STACKPT    00000084            WRK_L_CHARPTR    FFFFFFFC            
PRC_L_STATUS     00000044            WRK_L_CMDOUT     FFFFFFBC            
PRC_L_SYMBOL     0000004C            WRK_L_IMAGE      FFFFFFEC            
PRC_M_CNTRLY   = 00000002            WRK_L_MAXPARM    FFFFFFE4            
PRC_M_DBGQUAL  = 00000200            WRK_L_MINPARM    FFFFFFE8            
PRC_M_DBGTRUE  = 00000400            WRK_L_PARMCNT    FFFFFFF0            
PRC_M_DISABL   = 00000004            WRK_L_PAROUT     FFFFFFF4            
PRC_M_EXIT     = 00000008            WRK_L_PROMPT     FFFFFFD0            
PRC_M_GOEOF    = 00000001            WRK_L_PROPTR     FFFFFFDC            
PRC_M_GOTO     = 00000010            WRK_L_QUABLK     FFFFFFE0            
PRC_M_HANGUP   = 00001000            WRK_L_RSLNXT     FFFFFD34            
PRC_M_IND      = 00000020            WRK_L_SAVAP      FFFFFFC8            
PRC_M_MODE     = 00000040            WRK_L_SAVFP      FFFFFFCC            
PRC_M_NOCTLY   = 00004000            WRK_L_SAVSP      FFFFFFC4            
PRC_M_PAUSE    = 00002000            WRK_M_COMMAND  = 00000002            
PRC_M_USRDET   = 00000100            WRK_M_IMCHNG   = 00000004            
PRC_M_VERIFY   = 00000080            WRK_M_INQUIRE  = 00000100            
PRC_M_YLEVEL   = 00000800            WRK_M_NOSTAT   = 00000200            
PRC_Q_ALLOCREG   00000020            WRK_M_PROMPT   = 00000008            
PRC_Q_GLOBAL     00000028            WRK_M_QUAL     = 00000010            
PRC_Q_LABEL      00000030            WRK_M_QUOTE    = 00000020            
PRC_Q_LOCAL      00000038            WRK_M_RUNDWN   = 00000001            
PRC_V_CNTRLY   = 00000001            WRK_M_STAR     = 00000040            
PRC_V_DBGQUAL  = 00000009            WRK_M_TRAILSPC = 00000400            
PRC_V_DBGTRUE  = 0000000A            WRK_M_VERB     = 00000080            
PRC_V_DISABL   = 00000002            WRK_Q_IOSB       FFFFFFD4            
PRC_V_EXIT     = 00000003            WRK_V_COMMAND  = 00000001            
PRC_V_GOEOF    = 00000000            WRK_V_IMCHNG   = 00000002            
PRC_V_GOTO     = 00000004            WRK_V_INQUIRE  = 00000008            
PRC_V_HANGUP   = 0000000C            WRK_V_NOSTAT   = 00000009            
PRC_V_IND      = 00000005            WRK_V_PROMPT   = 00000003            
PRC_V_MODE     = 00000006            WRK_V_QUAL     = 00000004            
PRC_V_NOCTLY   = 0000000E            WRK_V_QUOTE    = 00000005            
PRC_V_PAUSE    = 0000000D            WRK_V_RUNDWN   = 00000000            
EXPRESS         - EXPRESSION ANALYSIS                            22-AUG-1978 01:14:47   VAX-11 MACRO X0.3-11               Page  17
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFC      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
DCL$ZCODE        0000033F      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
16370. BYTES LEFT IN FREE MEMORY POOL.
EXE$:EXPRESS,LIS$:EXPRESS/-SP=EXECML$/ML,LIB$:DCL/ML,SRC$:EXPRESS
21 MLB DIR RDS - 376 GETS TO DEFINE 22 MACROS. 34 INTER. FILE WRITES. 
