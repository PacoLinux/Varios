HANDLE          - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:07:45   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      39  CHANGE MODE TO SUPERVISOR HANDLER
   (1)     125  CONTROL Y AST HANDLER
   (1)     234  ENABLE CONTROL Y AST
   (1)     260  COMMAND INTERPRETER CONDITION HANDLER
HANDLE          - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:07:45   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	HANDLE - CONDITION AND CONTROL Y AST HANDLER ROUTINES
                                     0000     2 	.IDENT	/01/
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; D. N. CUTLER 29-MAR-77
                                     0000    24 ;
                                     0000    25 ; CONDITION AND CONTROL Y AST HANDLER ROUTINES
                                     0000    26 ;
                                     0000    27 ; MACRO LIBRARY CALLS
                                     0000    28 ;
                                     0000    29  
                                     0000    30 	DEFCMDWRK			;DEFINE WORK AREA OFFSETS
                                     0000    31 	DEFERRCOD			;DEFINE ERROR/STATUS CODES
                                     0000    32 	$CLISERVDEF			;DEFINE CLI SERVICE CODE
                                     0000    33 	$CHFDEF				;DEFINE CONDITION ARGLIST OFFSETS
                                     0000    34 	$DEVDEF				;DEFINE DEVICE CHARACTERISTIC BITS
                                     0000    35 	$IODEF				;DEFINE I/O FUNCTION CODES
                                     0000    36 	$PSLDEF				;DEFINE PROCESSOR STATUS FIELDS
                                     0000    37 	$RABDEF				;DEFINE RAB OFFSETS
HANDLE          - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:07:45   VAX-11 MACRO X0.3-11               Page   2
01              CHANGE MODE TO SUPERVISOR HANDLER                                                                                (1)

                                     0000    39 	.SBTTL	CHANGE MODE TO SUPERVISOR HANDLER
                                     0000    40 ;+
                                     0000    41 ; DCL$CHANGE_MODE - CHANGE MODE TO SUPERVISOR HANDLER
                                     0000    42 ;
                                     0000    43 ; THIS ROUTINE IS ENTERED WHEN A CHANGE MODE TO SUPERVISOR INSTRUCTION IS
                                     0000    44 ; EXECTED BY THE RESULT PARSER IN USER MODE OR THE CLI PROPER IN SUPER MODE.
                                     0000    45 ;
                                     0000    46 ; INPUTS:
                                     0000    47 ;
                                     0000    48 ;	 (SP) = CHANGE MODE ARGUMENT
                                     0000    49 ;	4(SP) = PC AFTER CHANGE MODE INSTRUCTION
                                     0000    50 ;	8(SP) = PSL OF CHANGE MODE INSTRUCTION
                                     0000    51 ;
                                     0000    52 ; OUTPUTS:
                                     0000    53 ;
                                     0000    54 ;	A CHECK IS MADE TO SEE IF THE
                                     0000    55 ;	PREVIOUS MODE WAS USER OR SUPERVISOR.
                                     0000    56 ;
                                     0000    57 ;	PREVIOUS MODE USER:
                                     0000    58 ;
                                     0000    59 ;		THIS IS REQUEST FOR SERVICE FROM THE RUNNING IMAGE.
                                     0000    60 ;		THE REQUEST IS DECODED AND PROCESSED, THE RETURN
                                     0000    61 ;		IS MADE TO THE POINT OF CALL WITH STATUS OF REQUEST.
                                     0000    62 ;
                                     0000    63 ;	PREVIOUS MODE SUPERVISOR:
                                     0000    64 ;
                                     0000    65 ;		THIS IS RESERVED FOR COMMAND PROCESSING ERRORS.
                                     0000    66 ;-
                                     0000    67  
                                 00000000    68 	.PSECT	DCL$ZCODE,BYTE,RD,NOWRT
                                     0000    69 DCL$CHANGE_MODE::			;HANDLE CHANGE MODE TO SUPERVISOR
         08 AE            18     E0  0000    70 	BBS	#PSL$V_CURMOD,8(SP),10$	;BR IF CHANGE MODE FROM USER
                          03         0004       
                                     0005    71  
                                     0005    72 ;
                                     0005    73 ; CHANGE MODE FROM SUPER
                                     0005    74 ;
                                     0005    75  
                          FFF8'  31  0005    76 	BRW	DCL$RESTART		;*** NYI ***
                                     0008    77  
                                     0008    78 ;
                                     0008    79 ; BUILD A FRAME THAT LOOKS LIKE AN AST FRAME, EXCEPT THAT IN PLACE OF
                                     0008    80 ; THE SAVE R1 IS THE CHANGE MODE ARGUMENT, AND ZERO FOR SAVED R0 AND
                                     0008    81 ; THE AST ARGUMENT.
                                     0008    82 ;
                                     0008    83  
            5B   00000000'9F     9E  0008    84 10$:	MOVAB	@#CTL$AG_CLIDATA,R11	;GET ADDRESS OF PROCESS WORK AREA
                          7E     7C  000F    85 	CLRQ	-(SP)			;DUMMY SAVED R0 AND AST ARGUMENT
                          05     DD  0011    86 	PUSHL	#5			;NUMBER OF ARGUMENTS IN AST ROUTINE
         2A'AF            6E     FA  0013    87 	CALLG	(SP),B^30$		;CREATE A CALL FRAME IN SUPER MODE
            5E            10     C0  0017    88 	ADDL	#<4*4>,SP		;CLEAR ARGUMENTS AND ARG COUNT
                          50     D5  001A    89 	TSTL	R0			;INTERNAL ERROR?
                          0B     14  001C    90 	BGTR	20$			;BR IF NO
            50            50     CE  001E    91 	MNEGL	R0,R0			;MAKE POSITIVE
            50       E000 8F     A8  0021    92 	BISW	#^XE000,R0		;INCLUDE SUBSYSTEM AND PRIVATE
            50            04     C4  0026    93 	MULL	#4,R0			;SCALE TO PROPER PLACE
                                 02  0029    94 20$:	REI				;RETURN TO USER
HANDLE          - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:07:45   VAX-11 MACRO X0.3-11               Page   3
01              CHANGE MODE TO SUPERVISOR HANDLER                                                                                (1)

                                     002A    95  
                               0000  002A    96 30$:	.WORD	0			;REGISTERS SAVED BY RESULT PARSER
                                     002C    97 	CASE	12(AP),-		;DECODE USER REQUEST
                                     002C    98 		LIMIT = #CLI$K_PAUSE,-	;LOW LIMIT OF REQUEST
                                     002C    99 		TYPE = W,<-		;CASE ON 16 BIT VALUE
                                     002C   100 		PAUSE,-			;REQUEST IS PAUSE
                                     002C   101 		DEFLOC,-		; DEFINE IN LOCAL TABLE
                                     002C   102 		DEFGBL,-		; DEFINE IN GLOBAL TABLE
                                     002C   103 		>			;
                                     0037   104  
            50   00038822 8F     D0  0037   105 INVREQ:	MOVL	#CLI$_INVREQTYP,R0	;SET ERROR CODE
                                 04  003E   106 	RET				;
                                     003F   107  
            50         08 AB     D0  003F   108 PAUSE:	MOVL	PRC_L_INPRAB(R11),R0	;GET PROCESS INPUT RAB
         18 A0            02     E1  0043   109 	BBC	#DEV$V_TRM,RAB$L_CTX(R0),INVREQ ;CAN'T PAUSE IF NOT INTERACTIVE
                          EF         0047       
                          008A   31  0048   110 	BRW	IMGPAUSE		;EFFECT IMAGE PAUSE
                                     004B   111  
                                     004B   112 ;
                                     004B   113 ; DEFINE A SYMBOL FOR THE PROCESS
                                     004B   114 ;
                                     004B   115  
                                     004B   116 	.ENABL	LSB
            55         38 AB     9E  004B   117 DEFLOC:	MOVAB	PRC_Q_LOCAL(R11),R5	;SET ADDRESS OF THE SYMBOL TABLE
                          04     11  004F   118 	BRB	10$			;
            55         28 AB     9E  0051   119 DEFGBL:	MOVAB	PRC_Q_GLOBAL(R11),R5	;SET ADDRESS OF PROPER TABLE
            53         04 A9     7D  0055   120 10$:	MOVQ	4(R9),R3		;SET SYMBOL NAME DESCRIPTOR
            51         0C A9     7D  0059   121 	MOVQ	12(R9),R1		;AND SYMBOL VALUE
                          FFA0'  30  005D   122 	BSBW	DCL$ALLOCSYM		;CREATE THE SYMBOL
                                 04  0060   123 	RET				;ALL DONE
HANDLE          - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:07:45   VAX-11 MACRO X0.3-11               Page   4
01              CONTROL Y AST HANDLER                                                                                            (1)

                                     0061   125 	.SBTTL	CONTROL Y AST HANDLER
                                     0061   126 ;+
                                     0061   127 ; DCL$CONTRLY - CONTROL Y AST HANDLER
                                     0061   128 ;
                                     0061   129 ; THIS ROUTINE IS CALLED WHEN A CONTROL Y AST OCCURS WHILE RUNNING IN USER
                                     0061   130 ; OR SUPERVISOR MODE.
                                     0061   131 ;
                                     0061   132 ; INPUTS:
                                     0061   133 ;
                                     0061   134 ;	AP = ADDRESS OF AST ARGUMENT LIST.
                                     0061   135 ;
                                     0061   136 ; OUTPUTS:
                                     0061   137 ;
                                     0061   138 ;	THE CONTROL Y AST IS RE-ENABLED AND A CHECK IS MADE TO SEE IF THE
                                     0061   139 ;	PREVIOUS MODE WAS USER OR SUPERVISOR.
                                     0061   140 ;
                                     0061   141 ;	PREVIOUS MODE USER:
                                     0061   142 ;
                                     0061   143 ;		A COMMAND WORK AREA IS ALLOCATED ON THE STACK, THE PROCESS
                                     0061   144 ;		SAVED ARGUMENT AND FRAME POINTERS ARE MOVED TO THE COMMAND
                                     0061   145 ;		WORK AREA, THE CURRENT ARGUMENT AND FRAME POINTERS ARE SAVED
                                     0061   146 ;		IN THE PROCESS SAVE AREA, AST'S ARE ENABLED, AND THE COMMAND
                                     0061   147 ;		INTERPRETER RESTART POINT IS JUMPED TO.
                                     0061   148 ;
                                     0061   149 ;	PREVIOUS MODE SUPERVISOR:
                                     0061   150 ;
                                     0061   151 ;		IF CONTROL Y AST'S ARE CURRENTLY SOFTWARE DISABLED, THEN THE
                                     0061   152 ;		AST IS DISMISSED IMMEDIATELY. OTHERWISE THE SAVED PROCESS
                                     0061   153 ;		ARGUMENT AND FRAME POINTERS ARE RESTORED, AST'S ARE ENABLED,
                                     0061   154 ;		AND THE COMMAND INTERPRETER RESTART POINT IS JUMPED TO.
                                     0061   155 ;-
                                     0061   156  
                                     0061   157 	.ENABL	LSB
                                 00000061   158 	.PSECT	DCL$ZCODE,BYTE,RD,NOWRT
                               0FFC' 0061   159 	.ENTRY	DCL$CONTRLY,^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>
            5B   00000000'9F     9E  0063   160 	MOVAB	@#CTL$AG_CLIDATA,R11	;GET ADDRESS OF PROCESS WORK AREA
         04 AC       0000'8F     B1  006A   161 	CMPW	#SS$_HANGUP,4(AP)	;TERMINAL LINE HANGUP?
                          07     12  0070   162 	BNEQ	10$			;IF NEQ NO
                                     0072   163 	SETBIT	PRC_V_HANGUP,PRC_W_FLAGS(R11) ;SET HANGUP PENDING
                          08     11  0077   164 	BRB	15$			;NO MORE CONTROL Y'S ALLOWED
                          0084   30  0079   165 10$:	BSBW	DCL$ENBCONTRLY		;RE-ENABLE CONTROL Y AST
         54 AB            0E     E0  007C   166 	BBS	#PRC_V_NOCTLY,PRC_W_FLAGS(R11),35$ ;BR IF NOT ALLOWED
                          34         0080       
         14 AC            18     E0  0081   167 15$:	BBS	#PSL$V_CURMOD,20(AP),60$ ;IF SET, PREVIOUS MODE USER
                          4F         0085       
                     009C CB     D5  0086   168 	TSTL	PRC_L_ONCTLY(R11)	;USER DEFINED ACTION
                          25     12  008A   169 	BNEQ	30$			;BR IF YES - EXCUTE THE COMMAND
                     0000'CF     9F  008C   170 	PUSHAB	W^DCL$LOW_LIMIT		;GET ADDRESS OF LOWER ADDRESS LIMIT
         10 AC            8E     D1  0090   171 	CMPL	(SP)+,16(AP)		;ADDRESS WITHIN LIMITS?
                          0A     1A  0094   172 	BGTRU	20$			;IF GTRU NO
                     0000'CF     9F  0096   173 	PUSHAB	W^DCL$HIGH_LIMIT	;GET ADDRESS OF HIGH ADDRESS LIMIT
         10 AC            8E     D1  009A   174 	CMPL	(SP)+,16(AP)		;ADDRESS WITHIN LIMITS?
                          1C     1A  009E   175 	BGTRU	50$			;IF GTRU YES
         54 AB            02     E0  00A0   176 20$:	BBS	#PRC_V_DISABL,PRC_W_FLAGS(R11),30$ ;IF SET, CONTROL Y/C AST'S DISABLED
                          0C         00A4       
         54 AB            0B     E0  00A5   177 	BBS	#PRC_V_YLEVEL,PRC_W_FLAGS(R11),40$ ;IF SET, AT CONTROL Y/C LEVEL
                          0C         00A9       
HANDLE          - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:07:45   VAX-11 MACRO X0.3-11               Page   5
01              CONTROL Y AST HANDLER                                                                                            (1)

         14 AB         08 AB     D1  00AA   178 	CMPL	PRC_L_INPRAB(R11),PRC_L_INDINPRAB(R11) ;INDIRECT LEVEL ZERO?
                          05     13  00AF   179 	BEQL	40$			;IF EQL YES
         54 AB            02     A8  00B1   180 30$:	BISW	#PRC_M_CNTRLY,PRC_W_FLAGS(R11) ;SET CONTROL Y/C REQUEST
                                 04  00B5   181 35$:	RET				;
                                     00B6   182  
                                     00B6   183 ;
                                     00B6   184 ; PREVIOUS MODE SUPERVISOR
                                     00B6   185 ;
                                     00B6   186  
            5D         04 AB     D0  00B6   187 40$:	MOVL	PRC_L_SAVFP(R11),FP	;RESTORE SAVED FRAME POINTER
                          28     11  00BA   188 	BRB	70$			;
                                     00BC   189  
                                     00BC   190 ;
                                     00BC   191 ; SUPERVISOR MODE CONTROL Y/C WHILE ACTIVATING IMAGE
                                     00BC   192 ;
                                     00BC   193  
            5D         04 AB     D0  00BC   194 50$:	MOVL	PRC_L_SAVFP(R11),FP	;RESTORE SAVED FRAME POINTER
                                     00C0   195  
                                     00C0   196 ;
                                     00C0   197 ; CREATE DUMMY CONTROL Y/C AST FRAME
                                     00C0   198 ;
                                     00C0   199  
                                     00C0   200 DCL$SCNTRLY::				;SUPERVISOR CONTROL Y/C
         C4 AD            14     C3  00C0   201 	SUBL3	#5*4,WRK_L_SAVSP(FP),SP	;ALLOCATE DUMMY AST ARGUMENT LIST
                          5E         00C4       
                          05     DD  00C5   202 	PUSHL	#5			;SET NUMBER OF ARGUMENTS
            5C            5E     D0  00C7   203 	MOVL	SP,AP			;SET ARGUMENT POINTER
                       FC'AF     9F  00CA   204 	PUSHAB	B^80$			;SET RETURN ADDRESS
            7E            5C     7D  00CD   205 	MOVQ	AP,-(SP)		;SAVE ARGUMENT AND FRAME POINTERS
                          7E     7C  00D0   206 	CLRQ	-(SP)			;CLEAR PSW, MASK, AND HANDLER ADDRESS
            5D            5E     D0  00D2   207 	MOVL	SP,FP			;SET NEW FRAME POINTER
                                     00D5   208  
                                     00D5   209 ;
                                     00D5   210 ; PREVIOUS MODE USER
                                     00D5   211 ;
                                     00D5   212  
                                     00D5   213 IMGPAUSE:				;IMAGE PAUSE
            5E       FBB4 CD     9E  00D5   214 60$:	MOVAB	WRK_K_LENGTH(FP),SP	;ALLOCATE COMMAND WORK AREA
         C8 AD            6B     7D  00DA   215 	MOVQ	PRC_L_SAVAP(R11),WRK_L_SAVAP(FP) ;SAVE ARGUMENT AND FRAME POINTERS
            5C            14     C0  00DE   216 	ADDL	#20,AP			;POINT TO SAVED PSL
            6B            5C     7D  00E1   217 	MOVQ	AP,PRC_L_SAVAP(R11)	;SAVE CURRENT ARGUMENT AND FRAME POINTERS
         54 AB       0800 8F     A8  00E4   218 70$:	BISW	#PRC_M_YLEVEL,PRC_W_FLAGS(R11) ;SET CONTROL Y/C LEVEL
                          00     BC  00EA   219 	CHMK	#0			;ENABLE AST'S
                     009C CB     D5  00EC   220 	TSTL	PRC_L_ONCTLY(R11)	;USER DEFINED ACTION?
                          07     13  00F0   221 	BEQL	75$			;BR IF NO
                          FF0B'  30  00F2   222 	BSBW	DCL$RUNDWNI		;RUNDOWN BUT PRESERVE INDIRECT LEVELS
         54 AB            02     A8  00F5   223 	BISW	#PRC_M_CNTRLY,PRC_W_FLAGS(R11) ;SET CONTROL Y/C REQUEST
                          FF04'  31  00F9   224 75$:	BRW	DCL$RESTART		;
                                     00FC   225  
                                     00FC   226 ;
                                     00FC   227 ; CONTINUE AFTER SIMULATED CONTROL Y/C AST FROM USER MODE
                                     00FC   228 ;
                                     00FC   229  
            5E            10     C0  00FC   230 80$:	ADDL	#4*4,SP			;REMOVE DUMMY AST ARGUMENTS
                                 02  00FF   231 	REI				;
                                     0100   232 	.DSABL	LSB
HANDLE          - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:07:45   VAX-11 MACRO X0.3-11               Page   6
01              ENABLE CONTROL Y AST                                                                                             (1)

                                     0100   234 	.SBTTL	ENABLE CONTROL Y AST
                                     0100   235 ;+
                                     0100   236 ; DCL$ENBCONTRLY - ENABLE CONTROL Y AST
                                     0100   237 ;
                                     0100   238 ; THIS ROUTINE IS CALLED TO ENABLE CONTROL Y AST'S ON THE INPUT CHANNEL.
                                     0100   239 ;
                                     0100   240 ; INPUTS:
                                     0100   241 ;
                                     0100   242 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     0100   243 ;
                                     0100   244 ; OUTPUTS:
                                     0100   245 ;
                                     0100   246 ;	R0 = FINAL REQUEST STATUS.
                                     0100   247 ;-
                                     0100   248  
                                     0100   249 DCL$ENBCONTRLY::			;ENABLE CONTROL Y AST
         54 AB            06     E0  0100   250 	BBS	#PRC_V_MODE,PRC_W_FLAGS(R11),10$ ;IF SET, NOT INTERACTIVE JOB
                          2B         0104       
            50         08 AB     D0  0105   251 	MOVL	PRC_L_INPRAB(R11),R0	;GET ADDRESS OF INPUT RAB
         18 A0            02     E1  0109   252 	BBC	#DEV$V_TRM,RAB$L_CTX(R0),10$ ;IF CLR, 'INPUT' NOT FROM TERMINAL
                          22         010D       
                                     010E   253 5$:	$QIOW_S	#31,-			;EVENT FLAG
                                     010E   254 		PRC_W_INPCHAN(R11),-	;INPUT CHANNEL
                                     010E   255 		#IO$_SETMODE!IO$M_CTRLYAST,,,,- ;FUNCTION CODE
                                     010E   256 		W^DCL$CONTRLY,,-	;AST ROUTINE ADDRESS
                                     010E   257 		#PSL$C_SUPER		;ENABLE MODE
                                 05  0130   258 10$:	RSB				;
HANDLE          - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:07:45   VAX-11 MACRO X0.3-11               Page   7
01              COMMAND INTERPRETER CONDITION HANDLER                                                                            (1)

                                     0131   260 	.SBTTL	COMMAND INTERPRETER CONDITION HANDLER
                                     0131   261 ;+
                                     0131   262 ; DCL$CONDHAND - COMMAND INTERPRETER CONDITION HANDLER
                                     0131   263 ;
                                     0131   264 ; THIS ROUTINE IS CALLED AS THE RESULT OF AN EXCEPTION CONDITION THAT OCCURS
                                     0131   265 ; WHILE EXECUTING IN THE COMMAND INTERPRETER.
                                     0131   266 ;
                                     0131   267 ; INPUTS:
                                     0131   268 ;
                                     0131   269 ;	CHF$L_MCHARGLST(AP) = ADDRESS OF MECHANISM ARGUMENTS.
                                     0131   270 ;
                                     0131   271 ; OUTPUTS:
                                     0131   272 ;
                                     0131   273 ;	THE EXCEPTION IS FORCED FORCED FATAL BY MAKING IT APPEAR AS THOUGH IT
                                     0131   274 ;	HAD VECTORED THROUGH THE LAST CHANCE HANDLER AND THE CATCH ALL HANDLER
                                     0131   275 ;	IS CALLED WITH THE ORIGINAL EXCEPTION ARGUMENT LIST.
                                     0131   276 ;-
                                     0131   277  
                               0000' 0131   278 	.ENTRY	DCL$CONDHAND,^M<>
   00000074'9F         4C'AF     9E  0133   279 	MOVAB	B^10$,@#CTL$AG_CLIDATA+PRC_L_EXTHND ;RESET EXIT HANDLER ADDRESS
            50         08 AC     D0  013B   280 	MOVL	CHF$L_MCHARGLST(AP),R0	;GET ADDRESS OF MECHANISM ARRAY
         04 A0            03     CE  013F   281 	MNEGL	#3,CHF$L_MCH_FRAME(R0)	;FORCE FATAL EXCEPTION CONDITION
   00000000'9F            6C     FA  0143   282 	CALLG	(AP),@#EXE$CATCH_ALL	;CALL CATCH ALL CONDITION HANDLER
                          E5     11  014A   283 	BRB	DCL$CONDHAND		;
                               0000  014C   284 10$:	.WORD	0			;ENTRY MASK FOR DUMMY EXIT HANDLER
            50       0000'8F     3C  014E   285 	MOVZWL	#SS$_CONTINUE,R0	;SET CONTINUATION STATUS
                                 04  0153   286 	RET				;
                                     0154   287  
                                     0154   288 	.END
HANDLE          - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:07:45   VAX-11 MACRO X0.3-11               Page   8
SYMBOL TABLE                                                                                                                     (1)

$$T1           = 00000001            CLI$_NOLIST    = 000380C0            DEV$M_IDV      = 04000000            
BIT...         = 00000020            CLI$_NOOPTPRS  = 00038842            DEV$M_MBX      = 00100000            
CHF$L_MCHARGLST  00000008            CLI$_NOQUAL    = 000380C8            DEV$M_MNT      = 00080000            
CHF$L_MCH_ARGS   00000000            CLI$_NORMAL    = 00030001            DEV$M_NET      = 00002000            
CHF$L_MCH_DEPTH  00000008            CLI$_NOTNEG    = 000380D8            DEV$M_ODV      = 08000000            
CHF$L_MCH_FRAME  00000004            CLI$_NOVALU    = 000380D0            DEV$M_RCK      = 40000000            
CHF$L_MCH_SAVR0  0000000C            CLI$_NOVALUE   = 0003882A            DEV$M_REC      = 00000001            
CHF$L_MCH_SAVR1  00000010            CLI$_NULFIL    = 000380E0            DEV$M_RND      = 10000000            
CHF$L_SIGARGLST  00000004            CLI$_NUMBER    = 000380E8            DEV$M_RTM      = 20000000            
CHF$L_SIG_ARG1   00000008            CLI$_ONCOMD    = 000380F0            DEV$M_SDI      = 00000010            
CHF$L_SIG_ARGS   00000000            CLI$_ONERR     = 000380F8            DEV$M_SHR      = 00010000            
CHF$L_SIG_NAME   00000004            CLI$_ONEVAL    = 00038158            DEV$M_SPL      = 00000040            
CLI$K_DEFGLOBAL= 00000003            CLI$_ONLEVL    = 00038100            DEV$M_SQD      = 00000020            
CLI$K_DEFLOCAL = 00000002            CLI$_ONOVF     = 00038108            DEV$M_SWL      = 02000000            
CLI$K_PAUSE    = 00000001            CLI$_OVRFLW    = 00038160            DEV$M_TRM      = 00000004            
CLI$_ABFNAM    = 000381B8            CLI$_PARMDEL   = 00038110            DEV$M_WCK      = 80000000            
CLI$_ABKEYW    = 00038000            CLI$_PROC_ID   = 0003FFF1            DEV$V_ALL      = 00000017            
CLI$_ABVERB    = 00038008            CLI$_QUEJOBCRE = 0003FFF9            DEV$V_AVL      = 00000012            
CLI$_BADRET    = 00038198            CLI$_REQPRMABS = 00038812            DEV$V_CCL      = 00000001            
CLI$_BADTEXT   = 000381B0            CLI$_RSLOVF    = 00038118            DEV$V_DIR      = 00000003            
CLI$_BUFOVF    = 00038018            CLI$_SKPDAT    = 00038120            DEV$V_DMT      = 00000015            
CLI$_COMPLX    = 00038020            CLI$_SPARE0    = 00038010            DEV$V_ELG      = 00000016            
CLI$_CONFQUAL  = 00038802            CLI$_SPARE1    = 00038058            DEV$V_FOD      = 0000000E            
CLI$_CREQUEJOB = 0003884A            CLI$_STKOVF    = 00038128            DEV$V_FOR      = 00000018            
CLI$_DEFOVF    = 00038028            CLI$_SUBMITERR = 00038852            DEV$V_GEN      = 00000011            
CLI$_DEVALSPL  = 0003885A            CLI$_SYMDEL    = 00038130            DEV$V_IDV      = 0000001A            
CLI$_DEVNOTFOR = 0003887A            CLI$_SYMOVF    = 00038138            DEV$V_MBX      = 00000014            
CLI$_DEVNOTSPL = 00038862            CLI$_UNDFIL    = 00038188            DEV$V_MNT      = 00000013            
CLI$_DIRECT    = 00038030            CLI$_UNDSYM    = 00038140            DEV$V_NET      = 0000000D            
CLI$_EXPSYN    = 00038038            CLI$_UNPROPARM = 00038170            DEV$V_ODV      = 0000001B            
CLI$_FILOPN    = 00038190            CLI$_UNPROQUAL = 00038168            DEV$V_RCK      = 0000001E            
CLI$_ILLVAL    = 0003883A            CLI$_USGOTO    = 00038148            DEV$V_REC      = 00000000            
CLI$_IMCHNG    = 00038040            CLI$_VALCNVERR = 00038832            DEV$V_RND      = 0000001C            
CLI$_IMGFNF    = 00038872            CLI$_VALREQ    = 00038150            DEV$V_RTM      = 0000001D            
CLI$_INSFPRM   = 00038048            CMDBUFSIZ      = 000001FC            DEV$V_SDI      = 00000004            
CLI$_INVKEY    = 00038178            CTL$AG_CLIDATA   ********   X   03   DEV$V_SHR      = 00000010            
CLI$_INVQUAL   = 0003880A            DCL$ALLOCSYM     ********   X   03   DEV$V_SPL      = 00000006            
CLI$_INVQUALNUM= 0003881A            DCL$CHANGE_MODE  00000000 RG    03   DEV$V_SQD      = 00000005            
CLI$_INVREQTYP = 00038822            DCL$CONDHAND     00000131 RG    03   DEV$V_SWL      = 00000019            
CLI$_INVRSP    = 00038180            DCL$CONTRLY      00000061 RG    03   DEV$V_TRM      = 00000002            
CLI$_INVUIC    = 000381A8            DCL$ENBCONTRLY   00000100 RG    03   DEV$V_WCK      = 0000001F            
CLI$_IVCHAR    = 00038050            DCL$HIGH_LIMIT   ********   X   03   EXE$CATCH_ALL    ********   X   03   
CLI$_IVDEVTYPE = 0003886A            DCL$LOW_LIMIT    ********   X   03   GBL...         = 00000000            
CLI$_IVFNAM    = 000381C0            DCL$RESTART      ********   X   03   IMGPAUSE         000000D5 R     03   
CLI$_IVKEYW    = 00038060            DCL$RUNDWNI      ********   X   03   INPBUFSIZ      = 00000084            
CLI$_IVOPER    = 00038068            DCL$SCNTRLY      000000C0 RG    03   INVREQ           00000037 R     03   
CLI$_IVPROT    = 00038070            DEFGBL           00000051 R     03   IO$M_ABORT     = 00000100            
CLI$_IVQLOC    = 00038078            DEFLOC           0000004B R     03   IO$M_ACCESS    = 00000040            
CLI$_IVSYMB    = 00038080            DEV$M_ALL      = 00800000            IO$M_ATTNAST   = 00000100            
CLI$_IVVALU    = 00038088            DEV$M_AVL      = 00040000            IO$M_BINARY    = 00000040            
CLI$_IVVERB    = 00038090            DEV$M_CCL      = 00000002            IO$M_CANCTRLO  = 00000040            
CLI$_MAXPARM   = 00038098            DEV$M_DIR      = 00000008            IO$M_COMMOD    = 00000040            
CLI$_MULKEY    = 000381A0            DEV$M_DMT      = 00200000            IO$M_CREATE    = 00000080            
CLI$_NOATFIL   = 000380A0            DEV$M_ELG      = 00400000            IO$M_CTRLCAST  = 00000100            
CLI$_NOCCAT    = 000380A8            DEV$M_FOD      = 00004000            IO$M_CTRLYAST  = 00000080            
CLI$_NOCOMD    = 000380B0            DEV$M_FOR      = 01000000            IO$M_CVTLOW    = 00000100            
CLI$_NOKEYW    = 000380B8            DEV$M_GEN      = 00020000            IO$M_DATACHECK = 00004000            
HANDLE          - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:07:45   VAX-11 MACRO X0.3-11               Page   9
SYMBOL TABLE                                                                                                                     (1)

IO$M_DELETE    = 00000100            IO$V_NOWAIT    = 00000007            IO$_WRITEPBLK  = 0000000B            
IO$M_DMOUNT    = 00000400            IO$V_PACKED    = 00000007            IO$_WRITETRACKD= 0000000F            
IO$M_DSABLMBX  = 00000400            IO$V_PURGE     = 0000000B            IO$_WRITEVBLK  = 00000030            
IO$M_ENABLMBX  = 00000080            IO$V_READATTN  = 00000007            MSGBUFSIZ      = 00000084            
IO$M_FCODE     = 0000003F            IO$V_REVERSE   = 00000006            PAUSE            0000003F R     03   
IO$M_HANGUP    = 00000200            IO$V_SHUTDOWN  = 00000007            PRC_B_DEFRADIX   00000092            
IO$M_INHERLOG  = 00000800            IO$V_STARTUP   = 00000006            PRC_B_EXMDEPMOD  00000091            
IO$M_INHEXTGAP = 00001000            IO$V_SYNCH     = 00000009            PRC_B_EXMDEPWID  00000090            
IO$M_INHRETRY  = 00008000            IO$V_TIMED     = 00000007            PRC_K_DEC      = 00000001            
IO$M_INHSEEK   = 00001000            IO$V_TRMNOECHO = 0000000C            PRC_K_HEX      = 00000000            
IO$M_INTERRUPT = 00000040            IO$V_WRTATTN   = 00000008            PRC_K_LENGTH     000000A0            
IO$M_INTSKIP   = 00000100            IO$_ACCESS     = 00000032            PRC_K_OCT      = 00000002            
IO$M_MOUNT     = 00000200            IO$_ACPCONTROL = 00000038            PRC_L_CLIWRK0    0000005C            
IO$M_NOECHO    = 00000040            IO$_CREATE     = 00000033            PRC_L_CLIWRK1    00000060            
IO$M_NOFILTR   = 00000200            IO$_DEACCESS   = 00000034            PRC_L_CLIWRK2    00000064            
IO$M_NOFORMAT  = 00000100            IO$_DELETE     = 00000035            PRC_L_CLIWRK3    00000068            
IO$M_NOW       = 00000040            IO$_DIAGNOSE   = 0000001D            PRC_L_CLIWRK4    0000006C            
IO$M_NOWAIT    = 00000080            IO$_DRVCLR     = 00000004            PRC_L_ERRRAB     00000010            
IO$M_PACKED    = 00000080            IO$_ERASETAPE  = 00000006            PRC_L_EXMDEPADR  0000008C            
IO$M_PURGE     = 00000800            IO$_LOGICAL    = 0000002F            PRC_L_EXTARG     00000078            
IO$M_READATTN  = 00000080            IO$_MODIFY     = 00000036            PRC_L_EXTBLK     00000070            
IO$M_REVERSE   = 00000040            IO$_MOUNT      = 00000039            PRC_L_EXTCOD     00000080            
IO$M_SHUTDOWN  = 00000080            IO$_NOP        = 00000000            PRC_L_EXTHND     00000074            
IO$M_STARTUP   = 00000040            IO$_OFFSET     = 00000006            PRC_L_EXTPRM     0000007C            
IO$M_SYNCH     = 00000200            IO$_PACKACK    = 00000008            PRC_L_INDEPTH    00000048            
IO$M_TIMED     = 00000080            IO$_PHYSICAL   = 0000001F            PRC_L_INDFAB     0000001C            
IO$M_TRMNOECHO = 00001000            IO$_READHEAD   = 0000000E            PRC_L_INDINPRAB  00000014            
IO$M_WRTATTN   = 00000100            IO$_READLBLK   = 00000021            PRC_L_INDOUTRAB  00000018            
IO$S_FCODE     = 00000006            IO$_READPBLK   = 0000000C            PRC_L_INPRAB     00000008            
IO$V_ABORT     = 00000008            IO$_READPRESET = 00000019            PRC_L_LSTSTATUS  00000094            
IO$V_ACCESS    = 00000006            IO$_READPROMPT = 00000037            PRC_L_ONCTLY     0000009C            
IO$V_ATTNAST   = 00000008            IO$_READTRACKD = 00000010            PRC_L_ONERROR    00000058            
IO$V_BINARY    = 00000006            IO$_READVBLK   = 00000031            PRC_L_OUTRAB     0000000C            
IO$V_CANCTRLO  = 00000006            IO$_RECAL      = 00000003            PRC_L_PROCUIC    00000098            
IO$V_COMMOD    = 00000006            IO$_RELEASE    = 00000005            PRC_L_SAVAP      00000000            
IO$V_CREATE    = 00000007            IO$_RETCENTER  = 00000007            PRC_L_SAVFP      00000004            
IO$V_CTRLCAST  = 00000008            IO$_REWIND     = 00000024            PRC_L_SEVERITY   00000040            
IO$V_CTRLYAST  = 00000007            IO$_REWINDOFF  = 00000022            PRC_L_STACKLM    00000088            
IO$V_CVTLOW    = 00000008            IO$_SEARCH     = 00000009            PRC_L_STACKPT    00000084            
IO$V_DATACHECK = 0000000E            IO$_SEEK       = 00000002            PRC_L_STATUS     00000044            
IO$V_DELETE    = 00000008            IO$_SENSECHAR  = 0000001B            PRC_L_SYMBOL     0000004C            
IO$V_DMOUNT    = 0000000A            IO$_SENSEMODE  = 00000027            PRC_M_CNTRLY   = 00000002            
IO$V_DSABLMBX  = 0000000A            IO$_SETCHAR    = 0000001A            PRC_M_DBGQUAL  = 00000200            
IO$V_ENABLMBX  = 00000007            IO$_SETMODE    = 00000023            PRC_M_DBGTRUE  = 00000400            
IO$V_FCODE     = 00000000            IO$_SKIPFILE   = 00000025            PRC_M_DISABL   = 00000004            
IO$V_HANGUP    = 00000009            IO$_SKIPRECORD = 00000026            PRC_M_EXIT     = 00000008            
IO$V_INHERLOG  = 0000000B            IO$_SPACEFILE  = 00000002            PRC_M_GOEOF    = 00000001            
IO$V_INHEXTGAP = 0000000C            IO$_SPACERECORD= 00000009            PRC_M_GOTO     = 00000010            
IO$V_INHRETRY  = 0000000F            IO$_STARTSPNDL = 00000019            PRC_M_HANGUP   = 00001000            
IO$V_INHSEEK   = 0000000C            IO$_UNLOAD     = 00000001            PRC_M_IND      = 00000020            
IO$V_INTERRUPT = 00000006            IO$_VIRTUAL    = 0000003F            PRC_M_MODE     = 00000040            
IO$V_INTSKIP   = 00000008            IO$_WRITECHECK = 0000000A            PRC_M_NOCTLY   = 00004000            
IO$V_MOUNT     = 00000009            IO$_WRITECHECKH= 00000018            PRC_M_PAUSE    = 00002000            
IO$V_NOECHO    = 00000006            IO$_WRITEHEAD  = 0000000D            PRC_M_USRDET   = 00000100            
IO$V_NOFILTR   = 00000009            IO$_WRITELBLK  = 00000020            PRC_M_VERIFY   = 00000080            
IO$V_NOFORMAT  = 00000008            IO$_WRITEMARK  = 0000001C            PRC_M_YLEVEL   = 00000800            
IO$V_NOW       = 00000006            IO$_WRITEOF    = 00000028            PRC_Q_ALLOCREG   00000020            
HANDLE          - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:07:45   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (1)

PRC_Q_GLOBAL     00000028            RAB$B_MBC        00000037            RAB$V_ASY      = 00000000            
PRC_Q_LABEL      00000030            RAB$B_MBF        00000036            RAB$V_BIO      = 0000000B            
PRC_Q_LOCAL      00000038            RAB$B_PSZ        00000034            RAB$V_CCO      = 0000001F            
PRC_V_CNTRLY   = 00000001            RAB$B_RAC        0000001E            RAB$V_CVT      = 0000001A            
PRC_V_DBGQUAL  = 00000009            RAB$B_ROP1       00000005            RAB$V_EOF      = 00000008            
PRC_V_DBGTRUE  = 0000000A            RAB$B_ROP2       00000006            RAB$V_FDL      = 00000006            
PRC_V_DISABL   = 00000002            RAB$B_ROP3       00000007            RAB$V_HSH      = 00000007            
PRC_V_EXIT     = 00000003            RAB$B_TMO        0000001F            RAB$V_KGE      = 00000015            
PRC_V_GOEOF    = 00000000            RAB$C_BID      = 00000001            RAB$V_KGT      = 00000016            
PRC_V_GOTO     = 00000004            RAB$C_BLN        00000044            RAB$V_LIM      = 0000000E            
PRC_V_HANGUP   = 0000000C            RAB$C_KEY      = 00000001            RAB$V_LOA      = 0000000D            
PRC_V_IND      = 00000005            RAB$C_RFA      = 00000002            RAB$V_LOC      = 00000010            
PRC_V_MODE     = 00000006            RAB$C_SEQ      = 00000000            RAB$V_MAS      = 00000005            
PRC_V_NOCTLY   = 0000000E            RAB$K_BLN        00000044            RAB$V_NLK      = 00000014            
PRC_V_PAUSE    = 0000000D            RAB$L_BKT        00000038            RAB$V_NXR      = 00000017            
PRC_V_USRDET   = 00000008            RAB$L_CTX        00000018            RAB$V_PMT      = 0000001E            
PRC_V_VERIFY   = 00000007            RAB$L_DCT        00000038            RAB$V_PPF_IND  = 0000000E            
PRC_V_YLEVEL   = 0000000B            RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            
PRC_W_CLIFLAG    00000052            RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            
PRC_W_ERRIFI     00000052            RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            
PRC_W_FLAGS      00000054            RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            
PRC_W_INPCHAN    00000050            RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            
PRC_W_ONLEVEL    00000056            RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            
PSL$C_EXEC     = 00000001            RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            
PSL$C_KERNEL   = 00000000            RAB$L_STS        00000008            RAB$V_TPT      = 00000001            
PSL$C_SUPER    = 00000002            RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            
PSL$C_USER     = 00000003            RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            
PSL$M_CM       = 80000000            RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            
PSL$M_CURMOD   = 03000000            RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            
PSL$M_DV       = 00000080            RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            
PSL$M_FPD      = 08000000            RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            
PSL$M_FU       = 00000040            RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            
PSL$M_IPL      = 001F0000            RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            
PSL$M_IS       = 04000000            RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            
PSL$M_IV       = 00000020            RAB$M_KGE      = 00200000            RSLBUFSIZ      = 00000180            
PSL$M_PRVMOD   = 00C00000            RAB$M_KGT      = 00400000            SS$_CONTINUE     ********   X   03   
PSL$M_SAFBITS  = 000037FF            RAB$M_LIM      = 00004000            SS$_HANGUP       ********   X   03   
PSL$M_TBIT     = 00000010            RAB$M_LOA      = 00002000            SYS$QIOW         ********   X   03   
PSL$M_TP       = 40000000            RAB$M_LOC      = 00010000            WRK_AB_BUFFER    FFFFFD38            
PSL$S_CURMOD   = 00000002            RAB$M_MAS      = 00000020            WRK_AG_RESULT    FFFFFBB4            
PSL$S_IPL      = 00000005            RAB$M_NLK      = 00100000            WRK_B_VERBTYP    FFFFFFC0            
PSL$S_PRVMOD   = 00000002            RAB$M_NXR      = 00800000            WRK_K_LENGTH     FFFFFBB4            
PSL$V_CM       = 0000001F            RAB$M_PMT      = 40000000            WRK_L_CHARPTR    FFFFFFFC            
PSL$V_CURMOD   = 00000018            RAB$M_PPF_IND  = 00004000            WRK_L_CMDOUT     FFFFFFBC            
PSL$V_DV       = 00000007            RAB$M_PPF_RAT  = 00003FC0            WRK_L_IMAGE      FFFFFFEC            
PSL$V_FPD      = 0000001B            RAB$M_PTA      = 20000000            WRK_L_MAXPARM    FFFFFFE4            
PSL$V_FU       = 00000006            RAB$M_RAH      = 00000200            WRK_L_MINPARM    FFFFFFE8            
PSL$V_IPL      = 00000010            RAB$M_RLK      = 00080000            WRK_L_PARMCNT    FFFFFFF0            
PSL$V_IS       = 0000001A            RAB$M_RNE      = 01000000            WRK_L_PAROUT     FFFFFFF4            
PSL$V_IV       = 00000005            RAB$M_RNF      = 08000000            WRK_L_PROMPT     FFFFFFD0            
PSL$V_PRVMOD   = 00000016            RAB$M_TMO      = 02000000            WRK_L_PROPTR     FFFFFFDC            
PSL$V_TBIT     = 00000004            RAB$M_TPT      = 00000002            WRK_L_QUABLK     FFFFFFE0            
PSL$V_TP       = 0000001E            RAB$M_UIF      = 00000010            WRK_L_RSLNXT     FFFFFD34            
RAB$B_BID        00000000            RAB$M_ULK      = 00040000            WRK_L_SAVAP      FFFFFFC8            
RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            WRK_L_SAVFP      FFFFFFCC            
RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            WRK_L_SAVSP      FFFFFFC4            
RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            WRK_M_COMMAND  = 00000002            
HANDLE          - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:07:45   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (1)

WRK_M_IMCHNG   = 00000004            
WRK_M_INQUIRE  = 00000100            
WRK_M_NOSTAT   = 00000200            
WRK_M_PROMPT   = 00000008            
WRK_M_QUAL     = 00000010            
WRK_M_QUOTE    = 00000020            
WRK_M_RUNDWN   = 00000001            
WRK_M_STAR     = 00000040            
WRK_M_TRAILSPC = 00000400            
WRK_M_VERB     = 00000080            
WRK_Q_IOSB       FFFFFFD4            
WRK_V_COMMAND  = 00000001            
WRK_V_IMCHNG   = 00000002            
WRK_V_INQUIRE  = 00000008            
WRK_V_NOSTAT   = 00000009            
WRK_V_PROMPT   = 00000003            
WRK_V_QUAL     = 00000004            
WRK_V_QUOTE    = 00000005            
WRK_V_RUNDWN   = 00000000            
WRK_V_STAR     = 00000006            
WRK_V_TRAILSPC = 0000000A            
WRK_V_VERB     = 00000007            
WRK_W_FLAGS      FFFFFFFA            
WRK_W_IMGCHAN    FFFFFFF8            
_$$_           = 000000EF            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFC      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
DCL$ZCODE        00000154      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
10610. BYTES LEFT IN FREE MEMORY POOL.
1304. BYTES OF RECLAIMED MEMORY.
EXE$:HANDLE,LIS$:HANDLE/-SP=EXECML$/ML,LIB$:DCL/ML,SRC$:HANDLE
45 MLB DIR RDS - 772 GETS TO DEFINE 26 MACROS. 66 INTER. FILE WRITES. 
