MESSAGE         - MESSAGE OUTPUT ROUTINES                        22-AUG-1978 01:11:08   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      37  OUTPUT ERROR MESSAGE
   (1)     111  ERROR FILE MESSAGE OUTPUT
   (1)     143  OUTPUT FILE MESSAGE OUTPUT
MESSAGE         - MESSAGE OUTPUT ROUTINES                        22-AUG-1978 01:11:08   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	MESSAGE - MESSAGE OUTPUT ROUTINES
                                     0000     2 	.IDENT	/01/
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; D. N. CUTLER 28-MAR-77
                                     0000    24 ;
                                     0000    25 ; MESSAGE OUTPUT ROUTINES
                                     0000    26 ;
                                     0000    27 ; MACRO LIBRARY CALLS
                                     0000    28 ;
                                     0000    29  
                                     0000    30 	DEFCMDWRK			;DEFINE WORK AREA OFFSETS
                                     0000    31 	DEFERRCOD			;DEFINE ERROR/STATUS VALUES
                                     0000    32 	$IODEF				;DEFINE I/O FUNCTION CODES
                                     0000    33 	$PSLDEF				;DEFINE PROCESSOR STATUS FIELDS
                                     0000    34 	$RABDEF				;DEFINE RAB OFFSETS
                                     0000    35 	$STSDEF				;DEFINE STATUS LONGWORD VALUES
MESSAGE         - MESSAGE OUTPUT ROUTINES                        22-AUG-1978 01:11:08   VAX-11 MACRO X0.3-11               Page   2
01              OUTPUT ERROR MESSAGE                                                                                             (1)

                                     0000    37 	.SBTTL	OUTPUT ERROR MESSAGE
                                     0000    38 ;+
                                     0000    39 ; DCL$ERRORMSG - OUTPUT ERROR MESSAGE
                                     0000    40 ;
                                     0000    41 ; THIS ROUTINE IS CALLED TO OUTPUT AN ERROR MESSAGE AND DISPLAY THE SEGMENT
                                     0000    42 ; OF THE COMMAND LINE THAT IS IN ERROR.
                                     0000    43 ;
                                     0000    44 ; INPUTS:
                                     0000    45 ;
                                     0000    46 ;	R0 = ERROR NUMBER.
                                     0000    47 ;	R6 = COMMAND BUFFER DISPLAY PARAMETER.
                                     0000    48 ;	R9 = ADDRESS OF NEXT BYTE IN COMMAND BUFFER.
                                     0000    49 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     0000    50 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     0000    51 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     0000    52 ;
                                     0000    53 ; OUTPUTS:
                                     0000    54 ;
                                     0000    55 ;	THE APPROPRIATE ERROR MESSAGE IS DISPLAYED ALONG WITH THE SEGMENT OF
                                     0000    56 ;	THE COMMAND LINE IN ERROR AND THE BACK UP PARAMETERS ARE RESTORED
                                     0000    57 ;	TO REGISTERS R9 AND R10.
                                     0000    58 ;
                                     0000    59 ;	R0 IS PRESERVED ACROSS CALL.
                                     0000    60 ;-
                                     0000    61  
                                 00000000    62 	.PSECT	DCL$ZCODE,BYTE,RD,NOWRT
                                     0000    63 DCL$ERRORMSG::				;OUTPUT ERROR MESSAGE
                          50     DD  0000    64 	PUSHL	R0			;SAVE ERROR/STATUS VALUE
            5E       FF7C CE     9E  0002    65 	MOVAB	-MSGBUFSIZ(SP),SP	;ALLOCATE SPACE TO STORE MESSAGE
                          6E     9F  0007    66 	PUSHAB	(SP)			;BUILD OUTPUT BUFFER DESCRIPTOR
            7E         84 8F     9A  0009    67 	MOVZBL	#MSGBUFSIZ,-(SP)	;
            52            0F     D0  000D    68 	MOVL	#15,R2			;ASSUME ALL PARTS OF MESSAGE DESIRED
            51            50     CE  0010    69 	MNEGL	R0,R1			;COMMAND INTERPRETER ERROR?
                          1D     19  0013    70 	BLSS	10$			;IF LEQ NO
         08 AE   4C434425 8F     D0  0015    71 	MOVL	#^A/%DCL/,8(SP)		;SET MESSAGE PREFIX
         04 AE            04     C0  001D    72 	ADDL	#4,4(SP)		;ADJ BUFFER ADDRESS PAST PREFIX
            6E            04     C2  0021    73 	SUBL	#4,(SP)			;REDUCE LENGTH OF BUFFER
            52            07     D0  0024    74 	MOVL	#7,R2			;ASK FOR MESSAGE MINUS FACILITY NAME
            51            04     C5  0027    75 	MULL3	#4,R1,R0		;SHIFT MESSAGE NUMBER TO CORRECT PLACE
                          50         002A       
            50   00038000 8F     C8  002B    76 	BISL	#<CLI$_ABKEYW&^X0FFF8000>,R0 ;INSERT SUBSYSTEM NUMBER
            50            1C     E0  0032    77 10$:	BBS	#STS$V_INHIB_MSG,R0,50$ ;BR IF NO MESSAGE DESIRED
                          64         0035       
            51            5E     D0  0036    78 	MOVL	SP,R1			;ADDRESS OF THE BUFFER DESCRIPTOR
                                     0039    79 	$GETMSG_S R0,(R1),(R1),R2	;GET THE ERROR DATA
            8E            8E     C1  004A    80 	ADDL3	(SP)+,(SP)+,R1		;FIND END OF MESSAGE
                          51         004D       
            52            5E     D0  004E    81 	MOVL	SP,R2			;START OF MESSAGE
            51            52     C2  0051    82 	SUBL	R2,R1			;LENGTH OF MESSAGE
                          4F     10  0054    83 	BSBB	DCL$ERROUT		;PRINT THE MESSAGE
         FA AD            01     E0  0056    84 	BBS	#WRK_V_COMMAND,WRK_W_FLAGS(FP),60$ ;BR IF COMMAND IN EXECUTION
                          42         005A       
            51            5E     D0  005B    85 	MOVL	SP,R1			;COMMAND PARSE-PRINT SEGMENT IN ERROR
            50       0083 C1     9E  005E    86 	MOVAB	MSGBUFSIZ-1(R1),R0	;R1=FIRST BYTE, R0=LAST BYTE IN BUFFER
            81       2020 8F     B0  0063    87 	MOVW	#^A/  /,(R1)+		;PUT SEPARATOR IN BUFFER
            81         5C 8F     90  0068    88 	MOVB	#^A/\/,(R1)+		;AND DELIMIT THE BAD PART OF THE COMMAND
                          03     11  006C    89 	BRB	25$			;CHECK IF POINTER IS IN COMMAND
MESSAGE         - MESSAGE OUTPUT ROUTINES                        22-AUG-1978 01:11:08   VAX-11 MACRO X0.3-11               Page   3
01              OUTPUT ERROR MESSAGE                                                                                             (1)

            81            86     90  006E    90 20$:	MOVB	(R6)+,(R1)+		;COPY ERROR SEGMENT
            59            56     D1  0071    91 25$:	CMPL	R6,R9			;END OF ERROR SEGMENT
                          05     1E  0074    92 	BGEQU	27$			;BR IF BEYOND ERROR SEGMENT
            50            51     D1  0076    93 	CMPL	R1,R0			;ROOM FOR MORE ERROR SEGMENT
                          F3     1F  0079    94 	BLSSU	20$			;BR IF MORE ROOM
            81         5C 8F     90  007B    95 27$:	MOVB	#^A/\/,(R1)+		;SET TRAILING SEPARATOR
         FC AD            01     C1  007F    96 	ADDL3	#1,WRK_L_CHARPTR(FP),R6	;POINT AT NEXT BYTE IN INPUT
                          56         0083       
            50            51     D1  0084    97 30$:	CMPL	R1,R0			;ANY ROOM FOR MORE DATA
                          07     1A  0087    98 	BGTRU	40$			;BR IF NO MORE ROOM
            81            86     90  0089    99 	MOVB	(R6)+,(R1)+		;STORE A BYTE
                          F6     12  008C   100 	BNEQ	30$			;BR IF NOT END_OF_LINE
                          51     D7  008E   101 	DECL	R1			;BACK OVER EOL
            52            5E     D0  0090   102 40$:	MOVL	SP,R2			;START OF THE LINE BUFFER
            51            52     C2  0093   103 	SUBL	R2,R1			;FIND LENGTH OF LINE
                          0D     10  0096   104 	BSBB	DCL$ERROUT		;OUTPUT ERROR MESSAGE
                          03     11  0098   105 	BRB	60$			;
            8E            8E     D1  009A   106 50$:	CMPL	(SP)+,(SP)+		;CLEAR BUFFER DESCRIPTOR
            5E       0084 CE     9E  009D   107 60$:	MOVAB	MSGBUFSIZ(SP),SP	;CLEAR MESSAGE BUFFER FROM STACK
                          01     BA  00A2   108 	POPR	#^M<R0>			;RESET STATUS VALUE
                                 05  00A4   109 	RSB				;
MESSAGE         - MESSAGE OUTPUT ROUTINES                        22-AUG-1978 01:11:08   VAX-11 MACRO X0.3-11               Page   4
01              ERROR FILE MESSAGE OUTPUT                                                                                        (1)

                                     00A5   111 	.SBTTL	ERROR FILE MESSAGE OUTPUT
                                     00A5   112 ;+
                                     00A5   113 ; DCL$ERROUT - ERROR FILE MESSAGE OUTPUT
                                     00A5   114 ;
                                     00A5   115 ; THIS ROUTINE IS CALLED TO OUTPUT A MESSAGE TO THE ERROR FILE.
                                     00A5   116 ;
                                     00A5   117 ; INPUTS:
                                     00A5   118 ;
                                     00A5   119 ;	R1 = LENGTH OF MESSAGE.
                                     00A5   120 ;	R2 = ADDRESS OF MESSAGE.
                                     00A5   121 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     00A5   122 ;
                                     00A5   123 ; OUTPUTS:
                                     00A5   124 ;
                                     00A5   125 ;	THE MESSAGE IS WRITTEN TO THE ERROR FILE AND CONTROL IS RETURNED
                                     00A5   126 ;	TO THE CALLER.
                                     00A5   127 ;
                                     00A5   128 ;	REGISTERS R3, R4, AND R5 ARE PRESERVED ACROSS CALL.
                                     00A5   129 ;-
                                     00A5   130  
                                     00A5   131 	.ENABL	LSB
                                     00A5   132 DCL$ERROUT::				;ERROR CHANNEL MESSAGE OUTPUT
            50         10 AB     D0  00A5   133 	MOVL	PRC_L_ERRRAB(R11),R0	;SET ADDRESS OF ERROR FILE RAB
                          06     BB  00A9   134 	PUSHR	#^M<R1,R2>		;SAVE MESSAGE PARAMETERS
                          1B     10  00AB   135 	BSBB	20$			;OUTPUT ERROR MESSAGE
                          06     BA  00AD   136 	POPR	#^M<R1,R2>		;RESTORE MESSAGE PARAMETERS
         54 AB            0B     E0  00AF   137 	BBS	#PRC_V_YLEVEL,PRC_W_FLAGS(R11),30$ ;BR IF AT CONTROL Y LEVEL
                          32         00B3       
                                 D1  00B4   138 	CMPL	PRC_L_ERRRAB(R11),-	;CHECK IF ERROR AND OUTPUT ARE
         18 AB         10 AB         00B5   139 		PRC_L_INDOUTRAB(R11)	;THE SAME FILE (OR DEVICE).
                          2B     13  00B9   140 	BEQL	30$			;IF EQL YES, DON'T REPRINT MESSAGE
                                     00BB   141 					;ELSE JOIN MESSAGE OUTPUT
MESSAGE         - MESSAGE OUTPUT ROUTINES                        22-AUG-1978 01:11:08   VAX-11 MACRO X0.3-11               Page   5
01              OUTPUT FILE MESSAGE OUTPUT                                                                                       (1)

                                     00BB   143 	.SBTTL	OUTPUT FILE MESSAGE OUTPUT
                                     00BB   144 ;+
                                     00BB   145 ; DCL$MSGOUT - OUTPUT FILE MESSAGE OUTPUT
                                     00BB   146 ;
                                     00BB   147 ; THSI ROUTINE IS CALLED TO OUTPUT A MESSAGE TO THE OUTPUT FILE.
                                     00BB   148 ;
                                     00BB   149 ; INPUTS:
                                     00BB   150 ;
                                     00BB   151 ;	R1 = LENGTH OF MESSAGE.
                                     00BB   152 ;	R2 = ADDRESS OF MESSAGE.
                                     00BB   153 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     00BB   154 ;
                                     00BB   155 ; OUTPUTS:
                                     00BB   156 ;
                                     00BB   157 ;	THE MESSAGE IS WRITTEN TO THE OUTPUT FILE AND CONTROL IS RETURNED
                                     00BB   158 ;	TO THE CALLER.
                                     00BB   159 ;
                                     00BB   160 ;	REGISTERS R3, R4, AND R5 ARE PRESERVED ACROSS CALL.
                                     00BB   161 ;-
                                     00BB   162  
                                     00BB   163 DCL$MSGOUT::				;MESSAGE OUTPUT
            50         18 AB     D0  00BB   164 	MOVL	PRC_L_INDOUTRAB(R11),R0	;GET ADDRESS OF INDIRECT OUTPUT RAB
         54 AB            0B     E1  00BF   165 	BBC	#PRC_V_YLEVEL,PRC_W_FLAGS(R11),20$ ;BR IF NOT IN CONTROL Y
                          04         00C3       
            50         0C AB     D0  00C4   166 	MOVL	PRC_L_OUTRAB(R11),R0	;SET ADDRESS OF OUTPUT FILE RAB
                                     00C8   167 20$:	DISABLE				;DISABLE CONTROL Y/C AST'S
         22 A0            51     B0  00CB   168 	MOVW	R1,RAB$W_RSZ(R0)	;SET SIZE OF OUTPUT RECORD
         28 A0            52     D0  00CF   169 	MOVL	R2,RAB$L_RBF(R0)	;SET ADDRESS OF OUTPUT RECORD
                                     00D3   170 	$PUT	RAB=(R0)		;OUTPUT RECORD
                                     00DC   171 	ENABLE				;ENABLE CONTROL Y/C AST'S
         FA AD            01     E1  00DE   172 	BBC	#WRK_V_COMMAND,WRK_W_FLAGS(FP),30$ ;IF CLR, NO COMMAND EXECUTION
                          03         00E2       
                                     00E3   173 	CHECK_AST			;CHECK FOR PENDING AST
                                 05  00E6   174 30$:	RSB				;
                                     00E7   175 	.DSABL	LSB
                                     00E7   176  
                                     00E7   177 	.END
MESSAGE         - MESSAGE OUTPUT ROUTINES                        22-AUG-1978 01:11:08   VAX-11 MACRO X0.3-11               Page   6
SYMBOL TABLE                                                                                                                     (1)

$$.TMP1        = 00000001            CLI$_ONLEVL    = 00038100            IO$M_NOW       = 00000040            
$$.TMP2        = 00000060            CLI$_ONOVF     = 00038108            IO$M_NOWAIT    = 00000080            
BIT...         = 00000020            CLI$_OVRFLW    = 00038160            IO$M_PACKED    = 00000080            
CLI$_ABFNAM    = 000381B8            CLI$_PARMDEL   = 00038110            IO$M_PURGE     = 00000800            
CLI$_ABKEYW    = 00038000            CLI$_PROC_ID   = 0003FFF1            IO$M_READATTN  = 00000080            
CLI$_ABVERB    = 00038008            CLI$_QUEJOBCRE = 0003FFF9            IO$M_REVERSE   = 00000040            
CLI$_BADRET    = 00038198            CLI$_REQPRMABS = 00038812            IO$M_SHUTDOWN  = 00000080            
CLI$_BADTEXT   = 000381B0            CLI$_RSLOVF    = 00038118            IO$M_STARTUP   = 00000040            
CLI$_BUFOVF    = 00038018            CLI$_SKPDAT    = 00038120            IO$M_SYNCH     = 00000200            
CLI$_COMPLX    = 00038020            CLI$_SPARE0    = 00038010            IO$M_TIMED     = 00000080            
CLI$_CONFQUAL  = 00038802            CLI$_SPARE1    = 00038058            IO$M_TRMNOECHO = 00001000            
CLI$_CREQUEJOB = 0003884A            CLI$_STKOVF    = 00038128            IO$M_WRTATTN   = 00000100            
CLI$_DEFOVF    = 00038028            CLI$_SUBMITERR = 00038852            IO$S_FCODE     = 00000006            
CLI$_DEVALSPL  = 0003885A            CLI$_SYMDEL    = 00038130            IO$V_ABORT     = 00000008            
CLI$_DEVNOTFOR = 0003887A            CLI$_SYMOVF    = 00038138            IO$V_ACCESS    = 00000006            
CLI$_DEVNOTSPL = 00038862            CLI$_UNDFIL    = 00038188            IO$V_ATTNAST   = 00000008            
CLI$_DIRECT    = 00038030            CLI$_UNDSYM    = 00038140            IO$V_BINARY    = 00000006            
CLI$_EXPSYN    = 00038038            CLI$_UNPROPARM = 00038170            IO$V_CANCTRLO  = 00000006            
CLI$_FILOPN    = 00038190            CLI$_UNPROQUAL = 00038168            IO$V_COMMOD    = 00000006            
CLI$_ILLVAL    = 0003883A            CLI$_USGOTO    = 00038148            IO$V_CREATE    = 00000007            
CLI$_IMCHNG    = 00038040            CLI$_VALCNVERR = 00038832            IO$V_CTRLCAST  = 00000008            
CLI$_IMGFNF    = 00038872            CLI$_VALREQ    = 00038150            IO$V_CTRLYAST  = 00000007            
CLI$_INSFPRM   = 00038048            CMDBUFSIZ      = 000001FC            IO$V_CVTLOW    = 00000008            
CLI$_INVKEY    = 00038178            DCL$CHECK_AST    ********   X   03   IO$V_DATACHECK = 0000000E            
CLI$_INVQUAL   = 0003880A            DCL$DISABLE      ********   X   03   IO$V_DELETE    = 00000008            
CLI$_INVQUALNUM= 0003881A            DCL$ERRORMSG     00000000 RG    03   IO$V_DMOUNT    = 0000000A            
CLI$_INVREQTYP = 00038822            DCL$ERROUT       000000A5 RG    03   IO$V_DSABLMBX  = 0000000A            
CLI$_INVRSP    = 00038180            DCL$MSGOUT       000000BB RG    03   IO$V_ENABLMBX  = 00000007            
CLI$_INVUIC    = 000381A8            GBL...         = 00000000            IO$V_FCODE     = 00000000            
CLI$_IVCHAR    = 00038050            INPBUFSIZ      = 00000084            IO$V_HANGUP    = 00000009            
CLI$_IVDEVTYPE = 0003886A            IO$M_ABORT     = 00000100            IO$V_INHERLOG  = 0000000B            
CLI$_IVFNAM    = 000381C0            IO$M_ACCESS    = 00000040            IO$V_INHEXTGAP = 0000000C            
CLI$_IVKEYW    = 00038060            IO$M_ATTNAST   = 00000100            IO$V_INHRETRY  = 0000000F            
CLI$_IVOPER    = 00038068            IO$M_BINARY    = 00000040            IO$V_INHSEEK   = 0000000C            
CLI$_IVPROT    = 00038070            IO$M_CANCTRLO  = 00000040            IO$V_INTERRUPT = 00000006            
CLI$_IVQLOC    = 00038078            IO$M_COMMOD    = 00000040            IO$V_INTSKIP   = 00000008            
CLI$_IVSYMB    = 00038080            IO$M_CREATE    = 00000080            IO$V_MOUNT     = 00000009            
CLI$_IVVALU    = 00038088            IO$M_CTRLCAST  = 00000100            IO$V_NOECHO    = 00000006            
CLI$_IVVERB    = 00038090            IO$M_CTRLYAST  = 00000080            IO$V_NOFILTR   = 00000009            
CLI$_MAXPARM   = 00038098            IO$M_CVTLOW    = 00000100            IO$V_NOFORMAT  = 00000008            
CLI$_MULKEY    = 000381A0            IO$M_DATACHECK = 00004000            IO$V_NOW       = 00000006            
CLI$_NOATFIL   = 000380A0            IO$M_DELETE    = 00000100            IO$V_NOWAIT    = 00000007            
CLI$_NOCCAT    = 000380A8            IO$M_DMOUNT    = 00000400            IO$V_PACKED    = 00000007            
CLI$_NOCOMD    = 000380B0            IO$M_DSABLMBX  = 00000400            IO$V_PURGE     = 0000000B            
CLI$_NOKEYW    = 000380B8            IO$M_ENABLMBX  = 00000080            IO$V_READATTN  = 00000007            
CLI$_NOLIST    = 000380C0            IO$M_FCODE     = 0000003F            IO$V_REVERSE   = 00000006            
CLI$_NOOPTPRS  = 00038842            IO$M_HANGUP    = 00000200            IO$V_SHUTDOWN  = 00000007            
CLI$_NOQUAL    = 000380C8            IO$M_INHERLOG  = 00000800            IO$V_STARTUP   = 00000006            
CLI$_NORMAL    = 00030001            IO$M_INHEXTGAP = 00001000            IO$V_SYNCH     = 00000009            
CLI$_NOTNEG    = 000380D8            IO$M_INHRETRY  = 00008000            IO$V_TIMED     = 00000007            
CLI$_NOVALU    = 000380D0            IO$M_INHSEEK   = 00001000            IO$V_TRMNOECHO = 0000000C            
CLI$_NOVALUE   = 0003882A            IO$M_INTERRUPT = 00000040            IO$V_WRTATTN   = 00000008            
CLI$_NULFIL    = 000380E0            IO$M_INTSKIP   = 00000100            IO$_ACCESS     = 00000032            
CLI$_NUMBER    = 000380E8            IO$M_MOUNT     = 00000200            IO$_ACPCONTROL = 00000038            
CLI$_ONCOMD    = 000380F0            IO$M_NOECHO    = 00000040            IO$_CREATE     = 00000033            
CLI$_ONERR     = 000380F8            IO$M_NOFILTR   = 00000200            IO$_DEACCESS   = 00000034            
CLI$_ONEVAL    = 00038158            IO$M_NOFORMAT  = 00000100            IO$_DELETE     = 00000035            
MESSAGE         - MESSAGE OUTPUT ROUTINES                        22-AUG-1978 01:11:08   VAX-11 MACRO X0.3-11               Page   7
SYMBOL TABLE                                                                                                                     (1)

IO$_DIAGNOSE   = 0000001D            PRC_L_ERRRAB     00000010            PRC_V_YLEVEL   = 0000000B            
IO$_DRVCLR     = 00000004            PRC_L_EXMDEPADR  0000008C            PRC_W_CLIFLAG    00000052            
IO$_ERASETAPE  = 00000006            PRC_L_EXTARG     00000078            PRC_W_ERRIFI     00000052            
IO$_LOGICAL    = 0000002F            PRC_L_EXTBLK     00000070            PRC_W_FLAGS      00000054            
IO$_MODIFY     = 00000036            PRC_L_EXTCOD     00000080            PRC_W_INPCHAN    00000050            
IO$_MOUNT      = 00000039            PRC_L_EXTHND     00000074            PRC_W_ONLEVEL    00000056            
IO$_NOP        = 00000000            PRC_L_EXTPRM     0000007C            PSL$C_EXEC     = 00000001            
IO$_OFFSET     = 00000006            PRC_L_INDEPTH    00000048            PSL$C_KERNEL   = 00000000            
IO$_PACKACK    = 00000008            PRC_L_INDFAB     0000001C            PSL$C_SUPER    = 00000002            
IO$_PHYSICAL   = 0000001F            PRC_L_INDINPRAB  00000014            PSL$C_USER     = 00000003            
IO$_READHEAD   = 0000000E            PRC_L_INDOUTRAB  00000018            PSL$M_CM       = 80000000            
IO$_READLBLK   = 00000021            PRC_L_INPRAB     00000008            PSL$M_CURMOD   = 03000000            
IO$_READPBLK   = 0000000C            PRC_L_LSTSTATUS  00000094            PSL$M_DV       = 00000080            
IO$_READPRESET = 00000019            PRC_L_ONCTLY     0000009C            PSL$M_FPD      = 08000000            
IO$_READPROMPT = 00000037            PRC_L_ONERROR    00000058            PSL$M_FU       = 00000040            
IO$_READTRACKD = 00000010            PRC_L_OUTRAB     0000000C            PSL$M_IPL      = 001F0000            
IO$_READVBLK   = 00000031            PRC_L_PROCUIC    00000098            PSL$M_IS       = 04000000            
IO$_RECAL      = 00000003            PRC_L_SAVAP      00000000            PSL$M_IV       = 00000020            
IO$_RELEASE    = 00000005            PRC_L_SAVFP      00000004            PSL$M_PRVMOD   = 00C00000            
IO$_RETCENTER  = 00000007            PRC_L_SEVERITY   00000040            PSL$M_SAFBITS  = 000037FF            
IO$_REWIND     = 00000024            PRC_L_STACKLM    00000088            PSL$M_TBIT     = 00000010            
IO$_REWINDOFF  = 00000022            PRC_L_STACKPT    00000084            PSL$M_TP       = 40000000            
IO$_SEARCH     = 00000009            PRC_L_STATUS     00000044            PSL$S_CURMOD   = 00000002            
IO$_SEEK       = 00000002            PRC_L_SYMBOL     0000004C            PSL$S_IPL      = 00000005            
IO$_SENSECHAR  = 0000001B            PRC_M_CNTRLY   = 00000002            PSL$S_PRVMOD   = 00000002            
IO$_SENSEMODE  = 00000027            PRC_M_DBGQUAL  = 00000200            PSL$V_CM       = 0000001F            
IO$_SETCHAR    = 0000001A            PRC_M_DBGTRUE  = 00000400            PSL$V_CURMOD   = 00000018            
IO$_SETMODE    = 00000023            PRC_M_DISABL   = 00000004            PSL$V_DV       = 00000007            
IO$_SKIPFILE   = 00000025            PRC_M_EXIT     = 00000008            PSL$V_FPD      = 0000001B            
IO$_SKIPRECORD = 00000026            PRC_M_GOEOF    = 00000001            PSL$V_FU       = 00000006            
IO$_SPACEFILE  = 00000002            PRC_M_GOTO     = 00000010            PSL$V_IPL      = 00000010            
IO$_SPACERECORD= 00000009            PRC_M_HANGUP   = 00001000            PSL$V_IS       = 0000001A            
IO$_STARTSPNDL = 00000019            PRC_M_IND      = 00000020            PSL$V_IV       = 00000005            
IO$_UNLOAD     = 00000001            PRC_M_MODE     = 00000040            PSL$V_PRVMOD   = 00000016            
IO$_VIRTUAL    = 0000003F            PRC_M_NOCTLY   = 00004000            PSL$V_TBIT     = 00000004            
IO$_WRITECHECK = 0000000A            PRC_M_PAUSE    = 00002000            PSL$V_TP       = 0000001E            
IO$_WRITECHECKH= 00000018            PRC_M_USRDET   = 00000100            RAB$B_BID        00000000            
IO$_WRITEHEAD  = 0000000D            PRC_M_VERIFY   = 00000080            RAB$B_BLN        00000001            
IO$_WRITELBLK  = 00000020            PRC_M_YLEVEL   = 00000800            RAB$B_KRF        00000035            
IO$_WRITEMARK  = 0000001C            PRC_Q_ALLOCREG   00000020            RAB$B_KSZ        00000034            
IO$_WRITEOF    = 00000028            PRC_Q_GLOBAL     00000028            RAB$B_MBC        00000037            
IO$_WRITEPBLK  = 0000000B            PRC_Q_LABEL      00000030            RAB$B_MBF        00000036            
IO$_WRITETRACKD= 0000000F            PRC_Q_LOCAL      00000038            RAB$B_PSZ        00000034            
IO$_WRITEVBLK  = 00000030            PRC_V_CNTRLY   = 00000001            RAB$B_RAC        0000001E            
MSGBUFSIZ      = 00000084            PRC_V_DBGQUAL  = 00000009            RAB$B_ROP1       00000005            
PRC_B_DEFRADIX   00000092            PRC_V_DBGTRUE  = 0000000A            RAB$B_ROP2       00000006            
PRC_B_EXMDEPMOD  00000091            PRC_V_DISABL   = 00000002            RAB$B_ROP3       00000007            
PRC_B_EXMDEPWID  00000090            PRC_V_EXIT     = 00000003            RAB$B_TMO        0000001F            
PRC_K_DEC      = 00000001            PRC_V_GOEOF    = 00000000            RAB$C_BID      = 00000001            
PRC_K_HEX      = 00000000            PRC_V_GOTO     = 00000004            RAB$C_BLN        00000044            
PRC_K_LENGTH     000000A0            PRC_V_HANGUP   = 0000000C            RAB$C_KEY      = 00000001            
PRC_K_OCT      = 00000002            PRC_V_IND      = 00000005            RAB$C_RFA      = 00000002            
PRC_L_CLIWRK0    0000005C            PRC_V_MODE     = 00000006            RAB$C_SEQ      = 00000000            
PRC_L_CLIWRK1    00000060            PRC_V_NOCTLY   = 0000000E            RAB$K_BLN        00000044            
PRC_L_CLIWRK2    00000064            PRC_V_PAUSE    = 0000000D            RAB$L_BKT        00000038            
PRC_L_CLIWRK3    00000068            PRC_V_USRDET   = 00000008            RAB$L_CTX        00000018            
PRC_L_CLIWRK4    0000006C            PRC_V_VERIFY   = 00000007            RAB$L_DCT        00000038            
MESSAGE         - MESSAGE OUTPUT ROUTINES                        22-AUG-1978 01:11:08   VAX-11 MACRO X0.3-11               Page   8
SYMBOL TABLE                                                                                                                     (1)

RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            WRK_B_VERBTYP    FFFFFFC0            
RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            WRK_K_LENGTH     FFFFFBB4            
RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            WRK_L_CHARPTR    FFFFFFFC            
RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            WRK_L_CMDOUT     FFFFFFBC            
RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            WRK_L_IMAGE      FFFFFFEC            
RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            WRK_L_MAXPARM    FFFFFFE4            
RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            WRK_L_MINPARM    FFFFFFE8            
RAB$L_STS        00000008            RAB$V_TPT      = 00000001            WRK_L_PARMCNT    FFFFFFF0            
RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            WRK_L_PAROUT     FFFFFFF4            
RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            WRK_L_PROMPT     FFFFFFD0            
RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            WRK_L_PROPTR     FFFFFFDC            
RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            WRK_L_QUABLK     FFFFFFE0            
RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            WRK_L_RSLNXT     FFFFFD34            
RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            WRK_L_SAVAP      FFFFFFC8            
RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            WRK_L_SAVFP      FFFFFFCC            
RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            WRK_L_SAVSP      FFFFFFC4            
RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            WRK_M_COMMAND  = 00000002            
RAB$M_KGE      = 00200000            RSLBUFSIZ      = 00000180            WRK_M_IMCHNG   = 00000004            
RAB$M_KGT      = 00400000            STS$K_ERROR    = 00000002            WRK_M_INQUIRE  = 00000100            
RAB$M_LIM      = 00004000            STS$K_INFO     = 00000003            WRK_M_NOSTAT   = 00000200            
RAB$M_LOA      = 00002000            STS$K_SEVERE   = 00000004            WRK_M_PROMPT   = 00000008            
RAB$M_LOC      = 00010000            STS$K_SUCCESS  = 00000001            WRK_M_QUAL     = 00000010            
RAB$M_MAS      = 00000020            STS$K_WARNING  = 00000000            WRK_M_QUOTE    = 00000020            
RAB$M_NLK      = 00100000            STS$M_CODE     = 00007FF8            WRK_M_RUNDWN   = 00000001            
RAB$M_NXR      = 00800000            STS$M_COND_ID  = 0FFFFFF8            WRK_M_STAR     = 00000040            
RAB$M_PMT      = 40000000            STS$M_CONTROL  = F0000000            WRK_M_TRAILSPC = 00000400            
RAB$M_PPF_IND  = 00004000            STS$M_CUST_DEF = 08000000            WRK_M_VERB     = 00000080            
RAB$M_PPF_RAT  = 00003FC0            STS$M_FAC_NO   = 0FFF0000            WRK_Q_IOSB       FFFFFFD4            
RAB$M_PTA      = 20000000            STS$M_FAC_SP   = 00008000            WRK_V_COMMAND  = 00000001            
RAB$M_RAH      = 00000200            STS$M_INHIB_MSG= 10000000            WRK_V_IMCHNG   = 00000002            
RAB$M_RLK      = 00080000            STS$M_MSG_NO   = 0000FFF8            WRK_V_INQUIRE  = 00000008            
RAB$M_RNE      = 01000000            STS$M_SEVERITY = 00000007            WRK_V_NOSTAT   = 00000009            
RAB$M_RNF      = 08000000            STS$M_SUCCESS  = 00000001            WRK_V_PROMPT   = 00000003            
RAB$M_TMO      = 02000000            STS$S_CODE     = 0000000C            WRK_V_QUAL     = 00000004            
RAB$M_TPT      = 00000002            STS$S_COND_ID  = 00000019            WRK_V_QUOTE    = 00000005            
RAB$M_UIF      = 00000010            STS$S_CONTROL  = 00000004            WRK_V_RUNDWN   = 00000000            
RAB$M_ULK      = 00040000            STS$S_CUST_DEF = 00000001            WRK_V_STAR     = 00000006            
RAB$M_WAT      = 00020000            STS$S_FAC_NO   = 0000000C            WRK_V_TRAILSPC = 0000000A            
RAB$M_WBH      = 00000400            STS$S_FAC_SP   = 00000001            WRK_V_VERB     = 00000007            
RAB$S_PPF_RAT  = 00000008            STS$S_INHIB_MSG= 00000001            WRK_W_FLAGS      FFFFFFFA            
RAB$V_ASY      = 00000000            STS$S_MSG_NO   = 0000000D            WRK_W_IMGCHAN    FFFFFFF8            
RAB$V_BIO      = 0000000B            STS$S_SEVERITY = 00000003            
RAB$V_CCO      = 0000001F            STS$S_SUCCESS  = 00000001            
RAB$V_CVT      = 0000001A            STS$V_CODE     = 00000003            
RAB$V_EOF      = 00000008            STS$V_COND_ID  = 00000003            
RAB$V_FDL      = 00000006            STS$V_CONTROL  = 0000001C            
RAB$V_HSH      = 00000007            STS$V_CUST_DEF = 0000001B            
RAB$V_KGE      = 00000015            STS$V_FAC_NO   = 00000010            
RAB$V_KGT      = 00000016            STS$V_FAC_SP   = 0000000F            
RAB$V_LIM      = 0000000E            STS$V_INHIB_MSG= 0000001C            
RAB$V_LOA      = 0000000D            STS$V_MSG_NO   = 00000003            
RAB$V_LOC      = 00000010            STS$V_SEVERITY = 00000000            
RAB$V_MAS      = 00000005            STS$V_SUCCESS  = 00000000            
RAB$V_NLK      = 00000014            SYS$GETMSG       ********   X   03   
RAB$V_NXR      = 00000017            SYS$PUT          ********  GX   03   
RAB$V_PMT      = 0000001E            WRK_AB_BUFFER    FFFFFD38            
RAB$V_PPF_IND  = 0000000E            WRK_AG_RESULT    FFFFFBB4            
MESSAGE         - MESSAGE OUTPUT ROUTINES                        22-AUG-1978 01:11:08   VAX-11 MACRO X0.3-11               Page   9
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFC      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
DCL$ZCODE        000000E7      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
11628. BYTES LEFT IN FREE MEMORY POOL.
1464. BYTES OF RECLAIMED MEMORY.
EXE$:MESSAGE,LIS$:MESSAGE/-SP=EXECML$/ML,LIB$:DCL/ML,SRC$:MESSAGE
39 MLB DIR RDS - 739 GETS TO DEFINE 25 MACROS. 62 INTER. FILE WRITES. 
