IMAGEXECT       - IMAGE EXECUTION DCLS COMMAND EXECUTION         22-AUG-1978 01:19:15   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      64  RUN IMAGE
   (1)     103  LOGOUT PROCESS
   (1)     151  MCR COMMAND
   (1)     190  EXTERNAL COMMAND EXECUTION
   (1)     217  FORCE IMAGE EXIT
   (1)     233  INITIATE IMAGE
   (1)     330  ALLOCATE BUFFER AND BUILD DESCRIPTOR
   (1)     358  COMMAND INTERPRETER EXIT HANDLER
IMAGEXECT       - IMAGE EXECUTION DCLS COMMAND EXECUTION         22-AUG-1978 01:19:15   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	IMAGEXECT - IMAGE EXECUTION DCLS COMMAND EXECUTION
                                     0000     2 	.IDENT	/01/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; D. N. CUTLER 4-APR-77
                                     0000    24 ;
                                     0000    25 ; IMAGE EXECUTION DCLS COMMAND EXECUTION
                                     0000    26 ;
                                     0000    27 ;	EXTERNAL COMMAND EXECUTE
                                     0000    28 ;	RUN IMAGE
                                     0000    29 ;
                                     0000    30 ; MACRO LIBRARY CALLS
                                     0000    31 ;
                                     0000    32  
                                     0000    33 	DEFCMDWRK			;DEFINE WORK AREA OFFSETS
                                     0000    34 	DEFERRCOD			;DEFINE ERROR/STATUS VALUES
                                     0000    35 	DEFPTRDSC			;RESULT PARSE DESCRIPTORS
                                     0000    36 	$CHFDEF				;DEFINE CONDITION ARGLIST OFFSETS
                                     0000    37 	$FABDEF				;DEFINE FAB OFFSETS
                                     0000    38 	$IHDDEF				;IMAGE HEADER DESCRIPTOR DEFINTITIONS
                                     0000    39 	$PSLDEF				;DEFINE PROCESSOR STATUS FIELDS
                                     0000    40 	$RABDEF				;DEFINE RAB OFFSETS
                                     0000    41 	$CLIDEF				;DEFINE COMMAND INTERPRETER VALUES
                                     0000    42  
                                     0000    43 ;
                                     0000    44 ; LOCAL DATA
                                     0000    45 ;
                                     0000    46  
                                 00000000    47 	.PSECT	DCL$ZCODE,BYTE,RD,NOWRT
                                     0000    48 EXTDEFAULT:				;EXTERNAL COMMAND IMAGE DEFAULT STRING
                                 0F' 0000    49 	.BYTE	20$-10$			;LENGTH OF STRING
2E 3A 4D 45 54 53 59 53 24 53 59 53  0001    50 10$:	.ASCII	/SYS$SYSTEM:.EXE/		;
                           45 58 45  000D       
                                     0010    51 20$:					;REF LABEL
                                     0010    52 RUNDEFAULT:				;RUN COMMAND IMAGE DEFAULT STRING
                                 04' 0010    53 	.BYTE	20$-10$			;LENGTH OF STRING
                        45 58 45 2E  0011    54 10$:	.ASCII	/.EXE/			;
                                     0015    55 20$:					;REF LABEL
                                     0015    56 LOGOUTIMG:				;FILENAME TEXT STRING FOR LOGOUT
IMAGEXECT       - IMAGE EXECUTION DCLS COMMAND EXECUTION         22-AUG-1978 01:19:15   VAX-11 MACRO X0.3-11               Page   2
01                                                                                                                               (1)

         54 55 4F 4E 49 47 4F 4C 00' 0015    57 	.ASCIC	\LOGINOUT\		;LOGIN/OUT IMAGE NAME
                                 08  0015       
                                     001E    58  
                        58 53 52 00' 001E    59 MCRIMG:	.ASCIC	\RSX\			;MCR IMAGE NAME
                                 03  001E       
                                     0022    60 SYSPRINT:				;DEFAULT QUEUE LOGICAL NAME
         54 4E 49 52 50 24 53 59 53  0022    61 	.ASCII	\SYS$PRINT\		;
                           00000009  002B    62 SYSPRTSIZ = . - SYSPRINT		;SIZE OF THAT STRING
IMAGEXECT       - IMAGE EXECUTION DCLS COMMAND EXECUTION         22-AUG-1978 01:19:15   VAX-11 MACRO X0.3-11               Page   3
01              RUN IMAGE                                                                                                        (1)

                                     002B    64 	.SBTTL	RUN IMAGE
                                     002B    65 ;+
                                     002B    66 ; DCL$RUN - RUN IMAGE
                                     002B    67 ;
                                     002B    68 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE RUN DCLS COMMAND.
                                     002B    69 ;
                                     002B    70 ; INPUTS:
                                     002B    71 ;
                                     002B    72 ;	R8 = ADDRESS OF SCRATCH BUFFER DESCRIPTOR.
                                     002B    73 ;	R9 = ADDRESS OF SCRATCH STACK.
                                     002B    74 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     002B    75 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     002B    76 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     002B    77 ;
                                     002B    78 ; OUTPUTS:
                                     002B    79 ;
                                     002B    80 ;	THE SPECIFED IMAGE IS INITIATED.
                                     002B    81 ;-
                                     002B    82  
                                     002B    83 DCL$RUN::				;RUN IMAGE
                                 AA  002B    84 	BICW	#<PRC_M_DBGQUAL!PRC_M_DBGTRUE>,- ;CLEAR DEBUG QUALIFIER SEEN,
         54 AB       0600 8F         002C    85 		PRC_W_FLAGS(R11)	;AND DEBUG QUALIFIER TRUE FLAGS.
                          7E     7C  0031    86 	CLRQ	-(SP)			;MAKE A SCRATCH BUFFER
                                     0033    87 10$:	GETDVAL				;GET NEXT DESCRIPTOR VALUES
            04            55     91  0036    88 	CMPB	R5,#PTR_K_ENDLINE	;IS THIS THE END OF THE PARAMETERS?
                          1A     13  0039    89 	BEQL	30$			;BR IF YES
            03            55     91  003B    90 	CMPB	R5,#PTR_K_PARAMETR	;IS THIS THE FILE TO RUN?
                          10     13  003E    91 	BEQL	20$			;BR IF YES
                                 A8  0040    92 	BISW	#<PRC_M_DBGQUAL!PRC_M_DBGTRUE>,- ;SET DEBUG QAULIFIER SEEN
         54 AB       0600 8F         0041    93 		PRC_W_FLAGS(R11)	;AND ASSUME QUALIFIER TRUE
            EA            53     E9  0046    94 	BLBC	R3,10$			;BR IF NOT NEQATED
                                     0049    95 	CLRBIT	PRC_V_DBGTRUE,PRC_W_FLAGS(R11) ;SET STATE TO FALSE
                          E3     11  004E    96 	BRB	10$			;
            6E            51     7D  0050    97 20$:	MOVQ	R1,(SP)			;SAVE FILE SPECIFICATION DESCRIPTOR
                          DE     11  0053    98 	BRB	10$			;LOOK FOR MORE
                          06     BA  0055    99 30$:	POPR	#^M<R1,R2>		;GET FILE SPEC OF FILE TO RUN
            53         B6 AF     9E  0057   100 	MOVAB	RUNDEFAULT,R3		;GET ADDRESS OF RUN DEFAULT NAME STRING
                          00C3   31  005B   101 	BRW	FORCEXIT		;
IMAGEXECT       - IMAGE EXECUTION DCLS COMMAND EXECUTION         22-AUG-1978 01:19:15   VAX-11 MACRO X0.3-11               Page   4
01              LOGOUT PROCESS                                                                                                   (1)

                                     005E   103 	.SBTTL	LOGOUT PROCESS
                                     005E   104 ;+
                                     005E   105 ; DCL$LOGOUT - LOGOUT THE PROCESS
                                     005E   106 ;
                                     005E   107 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE LOGOUT 
                                     005E   108 ; COMMAND OR TO EFFECT A LOGOUT WHEN END_OF_FILE OCCURS FOR A DETACED JOB.
                                     005E   109 ; ALSO, MAY BE ENTERED IF A HANGUP OCCURS ON A PROCESS WITH A DIAL UP INPUT.
                                     005E   110 ;
                                     005E   111 ; INPUTS:
                                     005E   112 ;
                                     005E   113 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     005E   114 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     005E   115 ;
                                     005E   116 ; OUTPUTS:
                                     005E   117 ;
                                     005E   118 ;	THE LOGOUT IMAGE IS INITIATED.
                                     005E   119 ;-
                                     005E   120  
                                     005E   121 DCL$LOGOUT::				;LOGOUT OFF THE PROCESS
            5E       FBB4 CD     9E  005E   122 	MOVAB	WRK_K_LENGTH(FP),SP	;MAKE SURE STACK IS EMPTY
            59            6E     9E  0063   123 	MOVAB	(SP),R9			;SET ADDRESS OF SCRATCH STACK
                                     0066   124 	ALLOCBUF			;ALLOCATE A BUFFER AND A DESCRIPTOR
            58            5E     D0  0069   125 	MOVL	SP,R8			;SET ADDRESS OF BUFFER DESCRIPTOR
         14 AB         08 AB     D1  006C   126 10$:	CMPL	PRC_L_INPRAB(R11),PRC_L_INDINPRAB(R11) ;INDIRECT LEVEL ZERO?
                          05     13  0071   127 	BEQL	20$			;IF EQL YES
                                     0073   128 	UNSTACK				;UNSTACK INDIRECT LEVEL
                          F4     11  0076   129 	BRB	10$			;
            59         1C AB     D0  0078   130 20$:	MOVL	PRC_L_INDFAB(R11),R9	;GET ADDRESS OF INDIRECT FAB
            5A         5C AB     9E  007C   131 	MOVAB	PRC_L_CLIWRK0(R11),R10	;GET ADDRESS OF FILE DESCRIPTOR LISTHEAD
            5A            6A     D0  0080   132 30$:	MOVL	(R10),R10		;GET ADDRESS OF NEXT FILE DESCRIPTOR
                          10     13  0083   133 	BEQL	40$			;IF EQL END OF LIST
         02 A9         1C AA     B0  0085   134 	MOVW	RAB$L_CTX+4(R10),FAB$W_IFI(R9) ;INSERT INTERNAL FILE INDEX
                                     008A   135 	$CLOSE	FAB=(R9)		;CLOSE FILE
                          EB     11  0093   136 	BRB	30$			;
                       8A AF     9F  0095   137 40$:	PUSHAB	SYSPRINT		;ADDRESS OF LOGICAL NAME
                          09     DD  0098   138 	PUSHL	#SYSPRTSIZ		;LENGTH OF LOGICAL NAME
            52            5E     D0  009A   139 	MOVL	SP,R2			;ADDRESS OF DESCRIPTOR FOR LOGICAL NAME
                                     009D   140 	$TRNLOG_S (R2),(R8),(R8),,,#3	;TRANLATE FROM USER TABLE
                          50     DD  00B0   141 	PUSHL	R0			;SAVE STATUS FROM TRANLATE
                                     00B2   142 	$DELLOG_S	TBLFLG=#2	;DELETE ALL OUTSTANDING LOGICAL NAMES
            8E            00'    D1  00BF   143 	CMPL	S^#SS$_NORMAL,(SP)+	;DID LOGICAL NAME TRANLATE
                          0F     12  00C2   144 	BNEQ	50$			;IF NO-DO NOT REMAKE THE NAME
                                     00C4   145 	$CRELOG_S #2,(R2),(R8)		;RECREATE THE NAME
            68         84 8F     9A  00D3   146 50$:	MOVZBL	#MSGBUFSIZ,(R8)		;RESET BUFFER LENGTH DESCRIPTOR
            52       FF3A CF     9E  00D7   147 	MOVAB	LOGOUTIMG,R2		;START OF THE COUNTED STRING
            51            82     9A  00DC   148 	MOVZBL	(R2)+,R1		;SET LENGTH
                          35     11  00DF   149 	BRB	INTIMG 			;START UP THE IMAGE
IMAGEXECT       - IMAGE EXECUTION DCLS COMMAND EXECUTION         22-AUG-1978 01:19:15   VAX-11 MACRO X0.3-11               Page   5
01              MCR COMMAND                                                                                                      (1)

                                     00E1   151 	.SBTTL	MCR COMMAND
                                     00E1   152 ;+
                                     00E1   153 ; DCL$MCR - EXECUTE THE MCR COMMAND
                                     00E1   154 ;
                                     00E1   155 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE MCR COMMAND 
                                     00E1   156 ;
                                     00E1   157 ; INPUTS:
                                     00E1   158 ;
                                     00E1   159 ;	R8 = ADDRESS OF SCRATCH BUFFER DESCRIPTOR.
                                     00E1   160 ;	R9 = ADDRESS OF SCRATCH STACK.
                                     00E1   161 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     00E1   162 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     00E1   163 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     00E1   164 ;
                                     00E1   165 ; OUTPUTS:
                                     00E1   166 ;
                                     00E1   167 ;	THE FIRST TOKEN ON THE COMMAND LINE IS USED TO ACTIVATE AN IMAGE.
                                     00E1   168 ;	IF THE COMMAND LINE IS NULL, THE MCR IMAGE IS ACTIVATED.
                                     00E1   169 ;-
                                     00E1   170  
                                     00E1   171 DCL$MCR::				;EXECUTE THE MCR COMMAND
                       1B'AF     9F  00E1   172 	PUSHAB	B^INTIMG0		;SET NEXT PLACE TO EXECUTE IF RUN
                                     00E4   173 	GETDVAL				;GET DECSRIPTOR VALUE
            54            51     D0  00E7   174 	MOVL	R1,R4			;COPY LENGTH OF STRING
                          0A     12  00EA   175 	BNEQ	10$			;BR IF NO ACTIVATE THE IMAGE
            52       FF2E CF     9E  00EC   176 	MOVAB	MCRIMG,R2		;SET ADDRESS OF IMAGE NAME
            54            82     9A  00F1   177 	MOVZBL	(R2)+,R4		;SET THE LENGTH IN R4
                          19     11  00F4   178 	BRB	20$			;STARTUP THE IMAGE
            51            20     3A  00F6   179 10$:	LOCC	#^A/ /,R1,(R2)		;FIND SPACE DELIMITER
                          62         00F9       
            54            50     C2  00FA   180 	SUBL	R0,R4			;FIND LENGTH OF TOKEN
            53       FF0F CF     9E  00FD   181 	MOVAB	RUNDEFAULT,R3		;ASSUME THIS IS A RUN
            54         5B 8F     3A  0102   182 	LOCC	#^A/[/,R4,(R2)		;LOOK FOR A DIRECTORY
                          62         0106       
                          09     12  0107   183 	BNEQ	30$			;BR IF DIRECTORY IN THE SPEC
            54            3C     3A  0109   184 	LOCC	#^A/</,R4,(R2)		;TRY OTHER SYNTAX
                          62         010C       
                          03     12  010D   185 	BNEQ	30$			;BR IF DIRECTORY FOUND
            6E            05'    C2  010F   186 20$:	SUBL	S^#<INTIMG0-INTIMG>,(SP);ADJUST ADDRESS TO PROPER ROUTINE
            51            54     D0  0112   187 30$:	MOVL	R4,R1			;GET BYTE COUNT OF IMAGE TO RUN
                                 05  0115   188 	RSB				;PROCEED TO NEXT PLACE
IMAGEXECT       - IMAGE EXECUTION DCLS COMMAND EXECUTION         22-AUG-1978 01:19:15   VAX-11 MACRO X0.3-11               Page   6
01              EXTERNAL COMMAND EXECUTION                                                                                       (1)

                                     0116   190 	.SBTTL	EXTERNAL COMMAND EXECUTION
                                     0116   191 ;+
                                     0116   192 ; DCL$EXTIMAGE - EXTERNAL COMMAND EXECUTION
                                     0116   193 ;
                                     0116   194 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO INITIATE EXECUTION OF AN
                                     0116   195 ; EXTERNAL IMAGE.
                                     0116   196 ;
                                     0116   197 ; INPUTS:
                                     0116   198 ;
                                     0116   199 ;	R1 = LENGTH OF IMAGE FILE SPECIFICATION.
                                     0116   200 ;	R2 = ADDRESS OF IMAGE FILE SPECIFICATION.
                                     0116   201 ;	R8 = ADDRESS OF SCRATCH BUFFER DESCRIPTOR.
                                     0116   202 ;	R9 = ADDRESS OF SCRATCH STACK.
                                     0116   203 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     0116   204 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     0116   205 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     0116   206 ;
                                     0116   207 ; OUTPUTS:
                                     0116   208 ;
                                     0116   209 ;	THE SPECIFED IMAGE IS INITIATED.
                                     0116   210 ;-
                                     0116   211  
                                     0116   212 DCL$EXTIMAGE::				;EXTERNAL COMMAND EXECUTION
            53       FEE6 CF     9E  0116   213 INTIMG:	MOVAB	EXTDEFAULT,R3		;GET ADDRESS OF COMMAND DEFAULT NAME STRING
                                 AA  011B   214 INTIMG0:BICW	#<PRC_M_DBGQUAL!PRC_M_DBGTRUE>,- ;CLEAR DEBUG QUALIFIER SEEN,
         54 AB       0600 8F         011C   215 		PRC_W_FLAGS(R11)	;AND DEBUG QUALIFIER TRUE FLAGS.
IMAGEXECT       - IMAGE EXECUTION DCLS COMMAND EXECUTION         22-AUG-1978 01:19:15   VAX-11 MACRO X0.3-11               Page   7
01              FORCE IMAGE EXIT                                                                                                 (1)

                                     0121   217 	.SBTTL	FORCE IMAGE EXIT
                                     0121   218 ;
                                     0121   219 ; FORCE IMAGE EXIT IF ONE IS ACTIVE
                                     0121   220 ;
                                     0121   221 ; INPUTS:
                                     0121   222 ;
                                     0121   223 ;	R1 = LENGTH OF IMAGE FILE SPECIFICATION
                                     0121   224 ;	R2 = ADDRESS OF IMAGE FILE SPECIFICATION
                                     0121   225 ;	R3 = ADDRESS OF COUNTED ASCII STRING FOR DEFAULT FILE NAME
                                     0121   226 ;
                                     0121   227  
                                     0121   228 FORCEXIT:				;FORCE IMAGE EXIT
                          0E     BB  0121   229 	PUSHR	#^M<R1,R2,R3>		;SAVE NAME STRING PARAMETERS
                                     0123   230 	RUNDOWN				;RUN DOWN PREVIOUS IMAGE AND INDIRECT LEVELS
                          0E     BA  0126   231 	POPR	#^M<R1,R2,R3>		;RESTORE NAME STRING PARAMETERS
IMAGEXECT       - IMAGE EXECUTION DCLS COMMAND EXECUTION         22-AUG-1978 01:19:15   VAX-11 MACRO X0.3-11               Page   8
01              INITIATE IMAGE                                                                                                   (1)

                                     0128   233 	.SBTTL	INITIATE IMAGE
                                     0128   234 ;
                                     0128   235 ; INITIATE AN IMAGE BY ENTERING USER MODE AND THEN SETTING UP THE INITIAL CALL
                                     0128   236 ; FRAMES AND ESTABLISHING A CATCH-ALL CONDITION HANDLER.
                                     0128   237 ;
                                     0128   238 ; INPUTS:
                                     0128   239 ;
                                     0128   240 ;	R1 = LENGTH OF IMAGE FILE SPECIFICATION
                                     0128   241 ;	R2 = ADDRESS OF IMAGE FILE SPECIFICATION
                                     0128   242 ;	R3 = ADDRESS OF COUNTED ASCII STRING FOR DEFAULT FILE NAME
                                     0128   243 ;
                                     0128   244  
                                     0128   245 	.ENABL	LSB
                                     0128   246 INITIATE:				;INITIATE IMAGE
            55   00000000'9F     DE  0128   247 	MOVAL	@#MMG$IMGHDRBUF,R5	;ADDRESS TO RETURN IMAGE HEADER INFORMATION
            65            51     7D  012F   248 	MOVQ	R1,(R5)			;IMAGE NAME DESCRIPTOR TO IMAGE HEADER BUFFER
            52            83     9A  0132   249 	MOVZBL	(R3)+,R2		;SIZE OF DEFAULT NAME STRING
         08 A5            52     7D  0135   250 	MOVQ	R2,8(R5)		;DESCRIPTOR FOR DEFAULT NAME STRING
         54 AB            03     E2  0139   251 	BBSS	#PRC_V_EXIT,PRC_W_FLAGS(R11),10$ ;IF SET, EXIT HANDLER ESTABLISHED
                          19         013D       
         74 AB       0220'CF     9E  013E   252 	MOVAB	W^DCL$EXITHAND,PRC_L_EXTHND(R11) ;SET ADDRESS OF EXIT HANDLER
         7C AB       0080 CB     9E  0144   253 	MOVAB	PRC_L_EXTCOD(R11),PRC_L_EXTPRM(R11) ;SET ADDRESS OF REASON FOR EXIT
                                     014A   254 	$DCLEXH_S PRC_L_EXTBLK(R11)	;DECLARE EXIT HANDLER
            31            50     E9  0154   255 	BLBC	R0,20$			;IF LBC UNSUCCESSFUL EXECUTION
                                     0157   256  
                                     0157   257 ;
                                     0157   258 ; SET UP IMAGE ADDRESS SPACE
                                     0157   259 ;
                                     0157   260  
                                     0157   261 10$:	$IMGACT_S -			;ACTIVATE THE IMAGE
                                     0157   262 		NAME  =(R5),-		;ADDRESS OF FILE NAME DESCRIPTOR
                                     0157   263 		DFLNAM=8(R5),-		;ADDRESS OF DEFAULT NAME DESCRIPTOR
                                     0157   264 		HDRBUF=(R5)		;ADDRESS OF IMAGE HEADER BUFFER
            1F            50     E8  0167   265 	BLBS	R0,30$			;BRANCH IF IT SUCCEEDED
                          50     DD  016A   266 	PUSHL	R0			;SAVE ERROR CODE
                                     016C   267 	$RUNDWN_S #PSL$C_USER		;RUN DOWN IMAGE
                          50   8ED0  0175   268 	POPL	R0			;RETRIEVE ERROR CODE
            50   00000000'8F     D1  0178   269 	CMPL	#RMS$_FNF,R0		;IMAGE FILE NOT FOUND?
                          07     12  017F   270 	BNEQ	20$			;IF NEQ NO
            50   00038872 8F     D0  0181   271 	MOVL	#CLI$_IMGFNF,R0		;SET IMAGE FILE NOT FOUND
                                 05  0188   272 20$:	RSB				;RETURN WITH STATUS CODE IN R0
                                     0189   273  
                                     0189   274 ;
                                     0189   275 ; RAISE ACCESS LEVEL TO USER
                                     0189   276 ;
                                     0189   277  
         C4 AD            5E     D0  0189   278 30$:	MOVL	SP,WRK_L_SAVSP(FP)	;SAVE CURRENT STACK POINTER
            0F            16     78  018D   279 	ASHL	#PSL$V_PRVMOD,#PSL$C_USER@2+PSL$C_USER,-(SP) ;SET USER PSL
                          7E         0190       
                       9D'AF     9F  0191   280 	PUSHAB	B^50$			;SET USER PC
                                     0194   281 DCL$LOW_LIMIT::				;LOW LIMIT OF CONTROL Y/C ADDRESS RANGE
         54 AB            01     E1  0194   282 	BBC	#PRC_V_CNTRLY,PRC_W_FLAGS(R11),40$ ;IF CLR, NO AST PENDING
                          03         0198       
                          FE64'  31  0199   283 	BRW	DCL$SCNTRLY		;
                                 02  019C   284 40$:	REI				;ENTER USER MODE
                                     019D   285 DCL$HIGH_LIMIT::			;HIGH LIMIT OF CONTROL Y/C ADDRESS RANGE
                                     019D   286  
IMAGEXECT       - IMAGE EXECUTION DCLS COMMAND EXECUTION         22-AUG-1978 01:19:15   VAX-11 MACRO X0.3-11               Page   9
01              INITIATE IMAGE                                                                                                   (1)

                                     019D   287 ;
                                     019D   288 ; BUILD TOP LEVEL CALL FRAME
                                     019D   289 ;
                                     019D   290  
                          5C     7C  019D   291 50$:	CLRQ	AP			;CLEAR INITIAL ARGUMENT AND FRAME POINTERS
         A3'AF            00     FB  019F   292 	CALLS	#0,B^60$		;CONSTRUCT TOP LEVEL CALL FRAME
                                     01A3   293  
                                     01A3   294 ;
                                     01A3   295 ; ESTABLISH CATCH-ALL CONDITION HANDLER AND CALL IMAGE
                                     01A3   296 ;
                                     01A3   297  
                               0000  01A3   298 60$:	.WORD	0			;ENTRY MASK
            6D   00000000'9F     9E  01A5   299 	MOVAB	@#EXE$CATCH_ALL,(FP)	;ESTABLISH CATCH-ALL HANDLER
                                     01AC   300 	$SETEXV_S #2,@#EXE$CATCH_ALL	;ESTABLISH LAST CHANCE HANDLER
            54   00000000'9F     7D  01BF   301 	MOVQ	@#MMG$IMGHDRBUF,R4	;GET IMAGE HEADER DESCRIPTOR
                                     01C6   302  
                                     01C6   303 	ASSUME	CLI$V_DEBUG   EQ 0
                                     01C6   304 	ASSUME	CLI$V_DBGTRU  EQ 1
                                     01C6   305 	ASSUME	PRC_V_DBGTRUE EQ PRC_V_DBGQUAL+1
                                     01C6   306  
                          09     EF  01C6   307 	EXTZV	#PRC_V_DBGQUAL,#2,-	;BUILD PROTOTYPE CLI OPTIONS VALUE BY
         54 AB            02         01C8   308 		PRC_W_FLAGS(R11),-(SP)	;GETTING THE DEBUG QUALIFIER AND STATE
                          7E         01CB       
         54 AB            06     E1  01CC   309 	BBC	#PRC_V_MODE,PRC_W_FLAGS(R11),70$ ;BR IF NOT A BATCH JOB
                          03         01D0       
                                     01D1   310 	SETBIT	CLI$V_BATCH,(SP)	;OR IN THE BATCH BIT IF THIS IS BATCH
         54 AB            07     E1  01D4   311 70$:	BBC	#PRC_V_VERIFY,PRC_W_FLAGS(R11),80$ ;BR IF VERIFY IS CLEAR
                          03         01D8       
                                     01D9   312 	SETBIT	CLI$V_VERIFY,(SP)	;PROPOGATE VERIFY IF TRUE
         14 AB         08 AB     D1  01DC   313 80$:	CMPL	PRC_L_INPRAB(R11),PRC_L_INDINPRAB(R11) ;INDIRECT LEVEL ZERO?
                          03     13  01E1   314 	BEQL	90$			;IF EQL YES
                                     01E3   315 	SETBIT	CLI$V_INDIRECT,(SP)	;PASS INDIRECT NON ZERO FLAG
            6E            18     93  01E6   316 90$:	BITB	#<CLI$M_INDIRECT!CLI$M_BATCH>,(SP) ;COMMANDS COMING FROM FILE?
                          07     13  01E9   317 	BEQL	100$			;BR IF TERMINAL JOB
            6E            02     E1  01EB   318 	BBC	#CLI$V_VERIFY,(SP),100$	;BR IF VERIFY NOT REQUESTED
                          03         01EE       
                                     01EF   319 	SETBIT	CLI$V_VFYINP,(SP)	;INDICATE INPUT VERIFY IS NEEDED
                       20 A4     DD  01F2   320 100$:	PUSHL	IHD$L_LNKFLAGS(R4)	;PASS LINKTIME OPTION FLAGS
            7E            54     7D  01F5   321 	MOVQ	R4,-(SP)		;NEXT TWO PARAMETERS IN USER FRAME
                     0000'CF     9F  01F8   322 	PUSHAB	W^DCL$UTLSERV		;SET ADDRESS OF UTILITY ROUTINE DISPATCHER
            50         02 A4     3C  01FC   323 	MOVZWL	IHD$W_ACTIVOFF(R4),R0	;OFFSET TO ACTIVATION DATA (TRANSFER VECTORS)
            50            54     C0  0200   324 	ADDL	R4,R0			;ADDRESS OF TRANSFER VECTOR ARRAY
                          60     DF  0203   325 	PUSHAL	(R0)			;ADDRESS OF TRANSFER VECTOR ARRAY
            90            06     FB  0205   326 	CALLS	#6,@(R0)+		;CALL IMAGE ENTRY POINT
                 00000000'9F     17  0208   327 	JMP	@#EXE$EXIT_IMAGE	;
                                     020E   328 	.DSABL	LSB
IMAGEXECT       - IMAGE EXECUTION DCLS COMMAND EXECUTION         22-AUG-1978 01:19:15   VAX-11 MACRO X0.3-11               Page  10
01              ALLOCATE BUFFER AND BUILD DESCRIPTOR                                                                             (1)

                                     020E   330 	.SBTTL	ALLOCATE BUFFER AND BUILD DESCRIPTOR
                                     020E   331 ;+
                                     020E   332 ; DCL$ALLOCBUF - ALLOCATE BUFFER AND BUILD DESCRIPTOR
                                     020E   333 ;
                                     020E   334 ; THIS ROUTINE IS CALLED TO ALLOCATE A MESSAGE BUFFER ON THE STACK AND BUILD
                                     020E   335 ; A BUFFER DESCRIPTOR FOR THE BUFFER.
                                     020E   336 ;
                                     020E   337 ; INPUTS:
                                     020E   338 ;
                                     020E   339 ;	NONE.
                                     020E   340 ;
                                     020E   341 ; OUTPUTS:
                                     020E   342 ;
                                     020E   343 ;	A MESSAGE BUFFER IS ALLOCATED ON THE STACK.
                                     020E   344 ;
                                     020E   345 ;	R2 = ADDRESS OF BUFFER DESCRIPTOR.
                                     020E   346 ;
                                     020E   347 ;	REGISTERS R3, R4, AND R5 ARE PRESERVED ACROSS CALL.
                                     020E   348 ;-
                                     020E   349  
                                     020E   350 DCL$ALLOCBUF::				;ALLOCATE BUFFER AND BUILD DESCRIPTOR
                          01     BA  020E   351 	POPR	#^M<R0>			;SAVE RETURN ADDRESS
            5E       FF7C CE     9E  0210   352 	MOVAB	-MSGBUFSIZ(SP),SP	;ALLOCATE SPACE TO STORE FORMAT STRING
                          6E     9F  0215   353 	PUSHAB	(SP)			;BUILD OUTPUT BUFFER DESCRIPTOR
            7E         84 8F     9A  0217   354 	MOVZBL	#MSGBUFSIZ,-(SP)	;
            52            5E     D0  021B   355 	MOVL	SP,R2			;COPY ADDRESS OF OUTPUT BUFFER DESCRIPTOR
                          60     17  021E   356 	JMP	(R0)			;
IMAGEXECT       - IMAGE EXECUTION DCLS COMMAND EXECUTION         22-AUG-1978 01:19:15   VAX-11 MACRO X0.3-11               Page  11
01              COMMAND INTERPRETER EXIT HANDLER                                                                                 (1)

                                     0220   358 	.SBTTL	COMMAND INTERPRETER EXIT HANDLER
                                     0220   359 ;+
                                     0220   360 ; DCL$EXITHAND - COMMAND INTERPRETER EXIT HANDLER
                                     0220   361 ;
                                     0220   362 ; THIS ROUTINE IS ENTERED WHEN A PREVIOUSLY INITIATED IMAGE EXITS. ITS FUNC-
                                     0220   363 ; TION IS TO CLEAN UP THE STACK, SHUTDOWN THE IMAGE, AND RETURN CONTROL TO THE
                                     0220   364 ; ADDRESS SPECIFIED BY THE TOP LONGWORD OF THE STACK.
                                     0220   365 ;
                                     0220   366 ; INPUTS:
                                     0220   367 ;
                                     0220   368 ;	@4(AP) = REASON FOR EXIT.
                                     0220   369 ;
                                     0220   370 ; OUTPUTS:
                                     0220   371 ;
                                     0220   372 ;	THE SAVED FRAME POINTER IS RESTORED, THE STACK IS CLEANED UP, IMAGE
                                     0220   373 ;	SHUT DOWN IS PERFORMED,  AND CONTROL IS RETURNED TO THE ADDRESS SPECIFIED
                                     0220   374 ;	BY THE TOP LONGWORD OF THE STACK.
                                     0220   375 ;
                                     0220   376 ;	R0 = REASON FOR EXIT.
                                     0220   377 ;-
                                     0220   378  
                               0000' 0220   379 	.ENTRY	DCL$EXITHAND,^M<>
            5B   00000000'9F     9E  0222   380 	MOVAB	@#CTL$AG_CLIDATA,R11	;GET ADDRESS OF PROCESS WORK AREA
         54 AB            08     AA  0229   381 	BICW	#PRC_M_EXIT,PRC_W_FLAGS(R11) ;CLEAR EXIT HANDLER ESTABLISHED
            5D         04 AB     D0  022D   382 	MOVL	PRC_L_SAVFP(R11),FP	;RESTORE SAVED FRAME POINTER
                                     0231   383 	SHUTDOWN			;SHUT DOWN IMAGE
                          52     D5  0234   384 	TSTL	R2			;ANY DATA RECORDS SKIPPED?
                          07     13  0236   385 	BEQL	10$			;IF EQL NO
                                     0238   386 	STATUS	SKPDAT			;SET SKIPPED DATA STATUS
                                     023C   387 	ERRMSG				;OUTPUT ERROR MESSAGE
                                     023F   388 10$:	$RUNDWN_S  #PSL$C_USER		;RUN DOWN THE IMAGE
            50         04 BC     D0  0248   389 	MOVL	@4(AP),R0		;RETRIEVE REASON FOR EXIT
            5E         C4 AD     D0  024C   390 	MOVL	WRK_L_SAVSP(FP),SP	;RESTORE SAVED STACK POINTER
                                 05  0250   391 	RSB				;
                                     0251   392  
                                     0251   393 	.END
IMAGEXECT       - IMAGE EXECUTION DCLS COMMAND EXECUTION         22-AUG-1978 01:19:15   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (1)

$$.TMP1        = 00000001            CLI$K_OUTPUT1  = 00000020            CLI$V_KEYVALU  = 00000001            
$$.TMP2        = 00000069            CLI$K_OUTPUT2  = 00000021            CLI$V_LASTVAL  = 00000000            
BIT...         = 00000045            CLI$K_OUTPUT3  = 00000022            CLI$V_MOREINP  = 00000002            
CHF$L_MCHARGLST  00000008            CLI$K_OUTPUT4  = 00000023            CLI$V_MOREVALS = 00000000            
CHF$L_MCH_ARGS   00000000            CLI$K_OUTSPEC  = 00000002            CLI$V_PARMDEF  = 00000003            
CHF$L_MCH_DEPTH  00000008            CLI$K_PARDONE  = 00000003            CLI$V_PARMPRS  = 00000000            
CHF$L_MCH_FRAME  00000004            CLI$K_QDBITS     00000014            CLI$V_PARMREQ  = 00000000            
CHF$L_MCH_SAVR0  0000000C            CLI$K_QUALDEF    00000014            CLI$V_PRITYP   = 00000004            
CHF$L_MCH_SAVR1  00000010            CLI$K_REQDESC    0000001C            CLI$V_QDEXPA   = 00000002            
CHF$L_SIGARGLST  00000004            CLI$K_UTILOPR  = 00000000            CLI$V_QDUSRV   = 00000001            
CHF$L_SIG_ARG1   00000008            CLI$K_VALCONV  = 00000004            CLI$V_QUALEXP  = 00000001            
CHF$L_SIG_ARGS   00000000            CLI$K_WORKAREA   00000080            CLI$V_QUALTRU  = 00000000            
CHF$L_SIG_NAME   00000004            CLI$L_CLIFLAG    00000018            CLI$V_SUBTYP   = 00000000            
CLI$A_ABSACT     00000014            CLI$L_INIARGCNT  00000000            CLI$V_TRMVRBLV = 00000008            
CLI$A_ERRACT     00000004            CLI$L_LINKFLAG   00000014            CLI$V_VERIFY   = 00000002            
CLI$A_FLSACT     00000010            CLI$L_RQVALU     0000000C            CLI$V_VFYINP   = 00000005            
CLI$A_IMGFILED   00000010            CLI$L_USRVAL     00000014            CLI$W_QDVALSIZ   00000004            
CLI$A_IMGHDADR   0000000C            CLI$L_WORKAREA   00000000            CLI$W_RQSIZE     00000008            
CLI$A_PROGXFER   00000004            CLI$M_ABSADR   = 00000002            CLI$W_SERVCOD    00000001            
CLI$A_PRSACT     00000010            CLI$M_ALLOCCUR = 00000001            CLI$_ABFNAM    = 000381B8            
CLI$A_QDVALADR   00000008            CLI$M_BATCH    = 00000008            CLI$_ABKEYW    = 00038000            
CLI$A_QUALST     00000018            CLI$M_CONCATINP= 00000002            CLI$_ABVERB    = 00038008            
CLI$A_RQADDR     0000000C            CLI$M_DBGEXCP  = 00010000            CLI$_BADRET    = 00038198            
CLI$A_TRUACT     0000000C            CLI$M_DBGTRU   = 00000002            CLI$_BADTEXT   = 000381B0            
CLI$A_UTILSERV   00000008            CLI$M_DEBUG    = 00000001            CLI$_BUFOVF    = 00038018            
CLI$B_BITNUM     00000001            CLI$M_DUMMY    = 00000002            CLI$_COMPLX    = 00038020            
CLI$B_QDBLKSIZ   00000000            CLI$M_EXPNAM   = 00000004            CLI$_CONFQUAL  = 00038802            
CLI$B_QDCODE     00000001            CLI$M_INDIRECT = 00000010            CLI$_CREQUEJOB = 0003884A            
CLI$B_QDFLGS     00000002            CLI$M_KEYVALU  = 00000002            CLI$_DEFOVF    = 00038028            
CLI$B_QDSTAT     00000003            CLI$M_LASTVAL  = 00000001            CLI$_DEVALSPL  = 0003885A            
CLI$B_RQFLGS     00000002            CLI$M_MOREINP  = 00000004            CLI$_DEVNOTFOR = 0003887A            
CLI$B_RQINDX     00000001            CLI$M_MOREVALS = 00000001            CLI$_DEVNOTSPL = 00038862            
CLI$B_RQSTAT     00000003            CLI$M_PARMDEF  = 00000008            CLI$_DIRECT    = 00038030            
CLI$B_RQTYPE     00000000            CLI$M_PARMPRS  = 00000001            CLI$_EXPSYN    = 00038038            
CLI$C_QDBITS     00000014            CLI$M_PARMREQ  = 00000001            CLI$_FILOPN    = 00038190            
CLI$C_QUALDEF    00000014            CLI$M_QDEXPA   = 00000004            CLI$_ILLVAL    = 0003883A            
CLI$C_REQDESC    0000001C            CLI$M_QDUSRV   = 00000002            CLI$_IMCHNG    = 00038040            
CLI$C_WORKAREA   00000080            CLI$M_QUALEXP  = 00000002            CLI$_IMGFNF    = 00038872            
CLI$K_ASCIIVAL = 00000041            CLI$M_QUALTRU  = 00000001            CLI$_INSFPRM   = 00038048            
CLI$K_CLISERV  = 00000005            CLI$M_TRMVRBLV = 00000300            CLI$_INVKEY    = 00038178            
CLI$K_ENDPRM1  = 00000030            CLI$M_VERIFY   = 00000004            CLI$_INVQUAL   = 0003880A            
CLI$K_ENDPRM2  = 00000031            CLI$M_VFYINP   = 00000020            CLI$_INVQUALNUM= 0003881A            
CLI$K_ENDPRM3  = 00000032            CLI$Q_QDVALDESC  00000004            CLI$_INVREQTYP = 00038822            
CLI$K_ENDPRM4  = 00000033            CLI$Q_RQDESC     00000008            CLI$_INVRSP    = 00038180            
CLI$K_FILSPEC  = 00000044            CLI$S_PRITYP   = 00000004            CLI$_INVUIC    = 000381A8            
CLI$K_GETCMD   = 00000001            CLI$S_SUBTYP   = 00000004            CLI$_IVCHAR    = 00038050            
CLI$K_GETOPT   = 00000003            CLI$S_TRMVRBLV = 00000002            CLI$_IVDEVTYPE = 0003886A            
CLI$K_GETQUAL  = 00000002            CLI$V_ABSADR   = 00000001            CLI$_IVFNAM    = 000381C0            
CLI$K_INITPRS  = 00000000            CLI$V_ALLOCCUR = 00000000            CLI$_IVKEYW    = 00038060            
CLI$K_INPSPEC  = 00000001            CLI$V_BATCH    = 00000003            CLI$_IVOPER    = 00038068            
CLI$K_INPUT1   = 00000010            CLI$V_CONCATINP= 00000001            CLI$_IVPROT    = 00038070            
CLI$K_INPUT2   = 00000011            CLI$V_DBGEXCP  = 00000010            CLI$_IVQLOC    = 00038078            
CLI$K_INPUT3   = 00000012            CLI$V_DBGTRU   = 00000001            CLI$_IVSYMB    = 00038080            
CLI$K_INPUT4   = 00000013            CLI$V_DEBUG    = 00000000            CLI$_IVVALU    = 00038088            
CLI$K_KEYVAL   = 00000043            CLI$V_DUMMY    = 00000001            CLI$_IVVERB    = 00038090            
CLI$K_KEYWORD  = 00000042            CLI$V_EXPNAM   = 00000002            CLI$_MAXPARM   = 00038098            
CLI$K_NUMERVAL = 00000040            CLI$V_INDIRECT = 00000004            CLI$_MULKEY    = 000381A0            
IMAGEXECT       - IMAGE EXECUTION DCLS COMMAND EXECUTION         22-AUG-1978 01:19:15   VAX-11 MACRO X0.3-11               Page  13
SYMBOL TABLE                                                                                                                     (1)

CLI$_NOATFIL   = 000380A0            EXTDEFAULT       00000000 R     03   FAB$M_MSE      = 00000010            
CLI$_NOCCAT    = 000380A8            FAB$B_BID        00000000            FAB$M_MXV      = 00000002            
CLI$_NOCOMD    = 000380B0            FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            
CLI$_NOKEYW    = 000380B8            FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            
CLI$_NOLIST    = 000380C0            FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            
CLI$_NOOPTPRS  = 00038842            FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            
CLI$_NOQUAL    = 000380C8            FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            
CLI$_NORMAL    = 00030001            FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            
CLI$_NOTNEG    = 000380D8            FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            
CLI$_NOVALU    = 000380D0            FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            
CLI$_NOVALUE   = 0003882A            FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            
CLI$_NULFIL    = 000380E0            FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            
CLI$_NUMBER    = 000380E8            FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            
CLI$_ONCOMD    = 000380F0            FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            
CLI$_ONERR     = 000380F8            FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            
CLI$_ONEVAL    = 00038158            FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            
CLI$_ONLEVL    = 00038100            FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            
CLI$_ONOVF     = 00038108            FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            
CLI$_OVRFLW    = 00038160            FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            
CLI$_PARMDEL   = 00038110            FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            
CLI$_PROC_ID   = 0003FFF1            FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            
CLI$_QUEJOBCRE = 0003FFF9            FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            
CLI$_REQPRMABS = 00038812            FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            
CLI$_RSLOVF    = 00038118            FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            
CLI$_SKPDAT    = 00038120            FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            
CLI$_SPARE0    = 00038010            FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            
CLI$_SPARE1    = 00038058            FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            
CLI$_STKOVF    = 00038128            FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            
CLI$_SUBMITERR = 00038852            FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            
CLI$_SYMDEL    = 00038130            FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            
CLI$_SYMOVF    = 00038138            FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            
CLI$_UNDFIL    = 00038188            FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            
CLI$_UNDSYM    = 00038140            FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            
CLI$_UNPROPARM = 00038170            FAB$L_MRN        00000038            FAB$S_ORG      = 00000004            
CLI$_UNPROQUAL = 00038168            FAB$L_NAM        00000028            FAB$S_PPF_RAT  = 00000008            
CLI$_USGOTO    = 00038148            FAB$L_SDC        00000044            FAB$V_BIO      = 00000005            
CLI$_VALCNVERR = 00038832            FAB$L_STS        00000008            FAB$V_BLK      = 00000003            
CLI$_VALREQ    = 00038150            FAB$L_STV        0000000C            FAB$V_BRO      = 00000006            
CMDBUFSIZ      = 000001FC            FAB$L_XAB        00000024            FAB$V_CBT      = 00000015            
CTL$AG_CLIDATA   ********   X   03   FAB$M_BIO      = 00000020            FAB$V_CIF      = 00000019            
DCL$ALLOCBUF     0000020E RG    03   FAB$M_BLK      = 00000008            FAB$V_CR       = 00000001            
DCL$ERRORMSG     ********   X   03   FAB$M_BRO      = 00000040            FAB$V_CTG      = 00000014            
DCL$EXITHAND     00000220 RG    03   FAB$M_CBT      = 00200000            FAB$V_DEL      = 00000002            
DCL$EXTIMAGE     00000116 RG    03   FAB$M_CIF      = 02000000            FAB$V_DFW      = 00000005            
DCL$GETDVAL      ********   X   03   FAB$M_CR       = 00000002            FAB$V_DLT      = 0000000F            
DCL$HIGH_LIMIT   0000019D RG    03   FAB$M_CTG      = 00100000            FAB$V_DMO      = 0000000C            
DCL$LOGOUT       0000005E RG    03   FAB$M_DEL      = 00000004            FAB$V_ESC      = 0000001B            
DCL$LOW_LIMIT    00000194 RG    03   FAB$M_DFW      = 00000020            FAB$V_EXE      = 00000007            
DCL$MCR          000000E1 RG    03   FAB$M_DLT      = 00008000            FAB$V_FTN      = 00000000            
DCL$RUN          0000002B RG    03   FAB$M_DMO      = 00001000            FAB$V_GET      = 00000001            
DCL$RUNDOWN      ********   X   03   FAB$M_ESC      = 08000000            FAB$V_INP      = 00000013            
DCL$SCNTRLY      ********   X   03   FAB$M_EXE      = 00000080            FAB$V_JNL      = 00000016            
DCL$SHUTDOWN     ********   X   03   FAB$M_FTN      = 00000001            FAB$V_KFO      = 0000001E            
DCL$UNSTACK      ********   X   03   FAB$M_GET      = 00000002            FAB$V_MSE      = 00000004            
DCL$UTLSERV      ********   X   03   FAB$M_INP      = 00080000            FAB$V_MXV      = 00000001            
EXE$CATCH_ALL    ********   X   03   FAB$M_JNL      = 00400000            FAB$V_NAM      = 00000018            
EXE$EXIT_IMAGE   ********   X   03   FAB$M_KFO      = 40000000            FAB$V_NEF      = 0000000A            
IMAGEXECT       - IMAGE EXECUTION DCLS COMMAND EXECUTION         22-AUG-1978 01:19:15   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                     (1)

FAB$V_NFS      = 00000010            IHD$V_PICIMG   = 00000003            PRC_M_DISABL   = 00000004            
FAB$V_NIL      = 00000005            IHD$W_ACTIVOFF   00000002            PRC_M_EXIT     = 00000008            
FAB$V_OFP      = 0000001D            IHD$W_IMGIDOFF   00000006            PRC_M_GOEOF    = 00000001            
FAB$V_ORG      = 00000004            IHD$W_IMGIOCNT   0000001E            PRC_M_GOTO     = 00000010            
FAB$V_POS      = 00000008            IHD$W_IOCHANCNT  0000001C            PRC_M_HANGUP   = 00001000            
FAB$V_PPF      = 00000012            IHD$W_MAJORID    0000000C            PRC_M_IND      = 00000020            
FAB$V_PPF_IND  = 0000000E            IHD$W_MINORID    0000000E            PRC_M_MODE     = 00000040            
FAB$V_PPF_RAT  = 00000006            IHD$W_PATCHOFF   00000008            PRC_M_NOCTLY   = 00004000            
FAB$V_PRN      = 00000002            IHD$W_SIZE       00000000            PRC_M_PAUSE    = 00002000            
FAB$V_PUT      = 00000000            IHD$W_SYMDBGOFF  00000004            PRC_M_USRDET   = 00000100            
FAB$V_RCK      = 00000017            INITIATE         00000128 R     03   PRC_M_VERIFY   = 00000080            
FAB$V_RWC      = 0000000B            INPBUFSIZ      = 00000084            PRC_M_YLEVEL   = 00000800            
FAB$V_RWO      = 00000007            INTIMG           00000116 R     03   PRC_Q_ALLOCREG   00000020            
FAB$V_SCF      = 0000000E            INTIMG0          0000011B R     03   PRC_Q_GLOBAL     00000028            
FAB$V_SHRDEL   = 00000002            LOGOUTIMG        00000015 R     03   PRC_Q_LABEL      00000030            
FAB$V_SHRGET   = 00000001            MCRIMG           0000001E R     03   PRC_Q_LOCAL      00000038            
FAB$V_SHRPUT   = 00000000            MMG$IMGHDRBUF    ********   X   03   PRC_V_CNTRLY   = 00000001            
FAB$V_SHRUPD   = 00000003            MSGBUFSIZ      = 00000084            PRC_V_DBGQUAL  = 00000009            
FAB$V_SPL      = 0000000D            PRC_B_DEFRADIX   00000092            PRC_V_DBGTRUE  = 0000000A            
FAB$V_SQO      = 00000006            PRC_B_EXMDEPMOD  00000091            PRC_V_DISABL   = 00000002            
FAB$V_SUP      = 00000002            PRC_B_EXMDEPWID  00000090            PRC_V_EXIT     = 00000003            
FAB$V_TEF      = 0000001C            PRC_K_DEC      = 00000001            PRC_V_GOEOF    = 00000000            
FAB$V_TMD      = 00000004            PRC_K_HEX      = 00000000            PRC_V_GOTO     = 00000004            
FAB$V_TMP      = 00000003            PRC_K_LENGTH     000000A0            PRC_V_HANGUP   = 0000000C            
FAB$V_TRN      = 00000004            PRC_K_OCT      = 00000002            PRC_V_IND      = 00000005            
FAB$V_UFM      = 0000001A            PRC_L_CLIWRK0    0000005C            PRC_V_MODE     = 00000006            
FAB$V_UFO      = 00000011            PRC_L_CLIWRK1    00000060            PRC_V_NOCTLY   = 0000000E            
FAB$V_UPD      = 00000003            PRC_L_CLIWRK2    00000064            PRC_V_PAUSE    = 0000000D            
FAB$V_UPI      = 00000006            PRC_L_CLIWRK3    00000068            PRC_V_USRDET   = 00000008            
FAB$V_WCK      = 00000009            PRC_L_CLIWRK4    0000006C            PRC_V_VERIFY   = 00000007            
FAB$W_BLS        0000003C            PRC_L_ERRRAB     00000010            PRC_V_YLEVEL   = 0000000B            
FAB$W_DEQ        00000014            PRC_L_EXMDEPADR  0000008C            PRC_W_CLIFLAG    00000052            
FAB$W_IFI        00000002            PRC_L_EXTARG     00000078            PRC_W_ERRIFI     00000052            
FAB$W_MRS        00000036            PRC_L_EXTBLK     00000070            PRC_W_FLAGS      00000054            
FORCEXIT         00000121 R     03   PRC_L_EXTCOD     00000080            PRC_W_INPCHAN    00000050            
GBL...         = 00000000            PRC_L_EXTHND     00000074            PRC_W_ONLEVEL    00000056            
IHD$B_HDRBLKCNT  00000010            PRC_L_EXTPRM     0000007C            PSL$C_EXEC     = 00000001            
IHD$B_IMGTYPE    00000011            PRC_L_INDEPTH    00000048            PSL$C_KERNEL   = 00000000            
IHD$C_LENGTH     00000028            PRC_L_INDFAB     0000001C            PSL$C_SUPER    = 00000002            
IHD$K_EXE      = 00000001            PRC_L_INDINPRAB  00000014            PSL$C_USER     = 00000003            
IHD$K_LENGTH     00000028            PRC_L_INDOUTRAB  00000018            PSL$M_CM       = 80000000            
IHD$K_LIM      = 00000002            PRC_L_INPRAB     00000008            PSL$M_CURMOD   = 03000000            
IHD$K_MAJORID  = 00003230            PRC_L_LSTSTATUS  00000094            PSL$M_DV       = 00000080            
IHD$K_MINORID  = 00003130            PRC_L_ONCTLY     0000009C            PSL$M_FPD      = 08000000            
IHD$L_IDENT      00000024            PRC_L_ONERROR    00000058            PSL$M_FU       = 00000040            
IHD$L_LNKFLAGS   00000020            PRC_L_OUTRAB     0000000C            PSL$M_IPL      = 001F0000            
IHD$M_LNKDEBUG = 00000001            PRC_L_PROCUIC    00000098            PSL$M_IS       = 04000000            
IHD$M_LNKNOTFR = 00000002            PRC_L_SAVAP      00000000            PSL$M_IV       = 00000020            
IHD$M_MATCHCTL = 07000000            PRC_L_SAVFP      00000004            PSL$M_PRVMOD   = 00C00000            
IHD$M_NOP0BUFS = 00000004            PRC_L_SEVERITY   00000040            PSL$M_SAFBITS  = 000037FF            
IHD$M_PICIMG   = 00000008            PRC_L_STACKLM    00000088            PSL$M_TBIT     = 00000010            
IHD$Q_PRIVREQS   00000014            PRC_L_STACKPT    00000084            PSL$M_TP       = 40000000            
IHD$S_MATCHCTL = 00000003            PRC_L_STATUS     00000044            PSL$S_CURMOD   = 00000002            
IHD$V_LNKDEBUG = 00000000            PRC_L_SYMBOL     0000004C            PSL$S_IPL      = 00000005            
IHD$V_LNKNOTFR = 00000001            PRC_M_CNTRLY   = 00000002            PSL$S_PRVMOD   = 00000002            
IHD$V_MATCHCTL = 00000018            PRC_M_DBGQUAL  = 00000200            PSL$V_CM       = 0000001F            
IHD$V_NOP0BUFS = 00000002            PRC_M_DBGTRUE  = 00000400            PSL$V_CURMOD   = 00000018            
IMAGEXECT       - IMAGE EXECUTION DCLS COMMAND EXECUTION         22-AUG-1978 01:19:15   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                     (1)

PSL$V_DV       = 00000007            RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            
PSL$V_FPD      = 0000001B            RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            
PSL$V_FU       = 00000006            RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            
PSL$V_IPL      = 00000010            RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            
PSL$V_IS       = 0000001A            RAB$L_STS        00000008            RAB$V_TPT      = 00000001            
PSL$V_IV       = 00000005            RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            
PSL$V_PRVMOD   = 00000016            RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            
PSL$V_TBIT     = 00000004            RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            
PSL$V_TP       = 0000001E            RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            
PTR_K_BLANK    = 00000001            RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            
PTR_K_COLON    = 00000002            RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            
PTR_K_COMDQUAL = 00000000            RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            
PTR_K_COMMA    = 00000005            RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            
PTR_K_ENDLINE  = 00000004            RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            
PTR_K_LPAREN   = 00000007            RAB$M_KGE      = 00200000            RMS$_FNF         ********   X   03   
PTR_K_PARAMETR = 00000003            RAB$M_KGT      = 00400000            RSLBUFSIZ      = 00000180            
PTR_K_PARMQUAL = 00000001            RAB$M_LIM      = 00004000            RUNDEFAULT       00000010 R     03   
PTR_K_PLUS     = 00000004            RAB$M_LOA      = 00002000            SS$_NORMAL       ********   X   03   
PTR_K_QUALVALU = 00000002            RAB$M_LOC      = 00010000            SYS$CLOSE        ********  GX   03   
PTR_K_RPAREN   = 00000006            RAB$M_MAS      = 00000020            SYS$CRELOG       ********   X   03   
PTR_K_SLASH    = 00000003            RAB$M_NLK      = 00100000            SYS$DCLEXH       ********   X   03   
PTR_L_DESCR      00000000            RAB$M_NXR      = 00800000            SYS$DELLOG       ********   X   03   
PTR_S_FLAGS    = 00000004            RAB$M_PMT      = 40000000            SYS$IMGACT       ********   X   03   
PTR_S_OFFSET   = 0000000C            RAB$M_PPF_IND  = 00004000            SYS$RUNDWN       ********   X   03   
PTR_S_TERM     = 00000004            RAB$M_PPF_RAT  = 00003FC0            SYS$SETEXV       ********   X   03   
PTR_S_TYPE     = 00000004            RAB$M_PTA      = 20000000            SYS$TRNLOG       ********   X   03   
PTR_S_VALUE    = 00000008            RAB$M_RAH      = 00000200            SYSPRINT         00000022 R     03   
PTR_V_FLAGS    = 00000014            RAB$M_RLK      = 00080000            SYSPRTSIZ      = 00000009            
PTR_V_NEGATE   = 00000000            RAB$M_RNE      = 01000000            WRK_AB_BUFFER    FFFFFD38            
PTR_V_OFFSET   = 00000008            RAB$M_RNF      = 08000000            WRK_AG_RESULT    FFFFFBB4            
PTR_V_TERM     = 00000018            RAB$M_TMO      = 02000000            WRK_B_VERBTYP    FFFFFFC0            
PTR_V_TYPE     = 0000001C            RAB$M_TPT      = 00000002            WRK_K_LENGTH     FFFFFBB4            
PTR_V_VALUE    = 00000000            RAB$M_UIF      = 00000010            WRK_L_CHARPTR    FFFFFFFC            
RAB$B_BID        00000000            RAB$M_ULK      = 00040000            WRK_L_CMDOUT     FFFFFFBC            
RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            WRK_L_IMAGE      FFFFFFEC            
RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            WRK_L_MAXPARM    FFFFFFE4            
RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            WRK_L_MINPARM    FFFFFFE8            
RAB$B_MBC        00000037            RAB$V_ASY      = 00000000            WRK_L_PARMCNT    FFFFFFF0            
RAB$B_MBF        00000036            RAB$V_BIO      = 0000000B            WRK_L_PAROUT     FFFFFFF4            
RAB$B_PSZ        00000034            RAB$V_CCO      = 0000001F            WRK_L_PROMPT     FFFFFFD0            
RAB$B_RAC        0000001E            RAB$V_CVT      = 0000001A            WRK_L_PROPTR     FFFFFFDC            
RAB$B_ROP1       00000005            RAB$V_EOF      = 00000008            WRK_L_QUABLK     FFFFFFE0            
RAB$B_ROP2       00000006            RAB$V_FDL      = 00000006            WRK_L_RSLNXT     FFFFFD34            
RAB$B_ROP3       00000007            RAB$V_HSH      = 00000007            WRK_L_SAVAP      FFFFFFC8            
RAB$B_TMO        0000001F            RAB$V_KGE      = 00000015            WRK_L_SAVFP      FFFFFFCC            
RAB$C_BID      = 00000001            RAB$V_KGT      = 00000016            WRK_L_SAVSP      FFFFFFC4            
RAB$C_BLN        00000044            RAB$V_LIM      = 0000000E            WRK_M_COMMAND  = 00000002            
RAB$C_KEY      = 00000001            RAB$V_LOA      = 0000000D            WRK_M_IMCHNG   = 00000004            
RAB$C_RFA      = 00000002            RAB$V_LOC      = 00000010            WRK_M_INQUIRE  = 00000100            
RAB$C_SEQ      = 00000000            RAB$V_MAS      = 00000005            WRK_M_NOSTAT   = 00000200            
RAB$K_BLN        00000044            RAB$V_NLK      = 00000014            WRK_M_PROMPT   = 00000008            
RAB$L_BKT        00000038            RAB$V_NXR      = 00000017            WRK_M_QUAL     = 00000010            
RAB$L_CTX        00000018            RAB$V_PMT      = 0000001E            WRK_M_QUOTE    = 00000020            
RAB$L_DCT        00000038            RAB$V_PPF_IND  = 0000000E            WRK_M_RUNDWN   = 00000001            
RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            WRK_M_STAR     = 00000040            
RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            WRK_M_TRAILSPC = 00000400            
RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            WRK_M_VERB     = 00000080            
IMAGEXECT       - IMAGE EXECUTION DCLS COMMAND EXECUTION         22-AUG-1978 01:19:15   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                     (1)

WRK_Q_IOSB       FFFFFFD4            
WRK_V_COMMAND  = 00000001            
WRK_V_IMCHNG   = 00000002            
WRK_V_INQUIRE  = 00000008            
WRK_V_NOSTAT   = 00000009            
WRK_V_PROMPT   = 00000003            
WRK_V_QUAL     = 00000004            
WRK_V_QUOTE    = 00000005            
WRK_V_RUNDWN   = 00000000            
WRK_V_STAR     = 00000006            
WRK_V_TRAILSPC = 0000000A            
WRK_V_VERB     = 00000007            
WRK_W_FLAGS      FFFFFFFA            
WRK_W_IMGCHAN    FFFFFFF8            
_$$_           = 00000048            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFC      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
DCL$ZCODE        00000251      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
4338. BYTES LEFT IN FREE MEMORY POOL.
1576. BYTES OF RECLAIMED MEMORY.
EXE$:IMAGEXECT,LIS$:IMAGEXECT/-SP=EXECML$/ML,LIB$:DCL/ML,SRC$:IMAGEXECT
65 MLB DIR RDS - 1074 GETS TO DEFINE 42 MACROS. 81 INTER. FILE WRITES. 
