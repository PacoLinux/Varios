RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      40  DECLARATIONS
   (3)      75  VALUE CONVERSION ROUTINES
   (4)     165  GET QUALIFIER DESCRIPTOR BLOCK
   (5)     234  FIND COMMAND QUALIFIER
   (6)     304  EXTRACT RESULT DESCRIPTOR FIELDS
   (7)     375  SET RESULT DESCRIPTOR ADDRESS
   (8)     418  GET PARAMETER
   (9)     476  RESULT PARSE INIT
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	RPSUB - DCL RESULT PARSE SUBROUTINES
                                     0000     2 	.IDENT	/01/
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 
                                     0000    24 ;++
                                     0000    25 ; FACILITY:	STARLET DCL CLI
                                     0000    26 ;
                                     0000    27 ; ABSTRACT:	MISC SUBROUTINES
                                     0000    28 ;
                                     0000    29 ;
                                     0000    30 ; ENVIRONMENT:	NATIVE MODE USER CODE
                                     0000    31 ;
                                     0000    32 ; AUTHOR:	W.H.BROWN, CREATION DATE:14-APR-77
                                     0000    33 ;
                                     0000    34 ; MODIFIED BY:
                                     0000    35 ;
                                     0000    36 ;	, : VERSION
                                     0000    37 ; 01	- 
                                     0000    38 ;--
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page   2
01              DECLARATIONS                                                                                                     (2)

                                     0000    40 	.SBTTL	DECLARATIONS
                                     0000    41 ;
                                     0000    42 ; INCLUDE FILES:
                                     0000    43 ;
                                     0000    44 
                                     0000    45 ;	C.MLB
                                     0000    46 ;	LIB.MLB
                                     0000    47 ;
                                     0000    48 ; MACROS:
                                     0000    49 ;
                                     0000    50 
                                     0000    51 ;
                                     0000    52 ; EQUATED SYMBOLS:
                                     0000    53 ;
                                     0000    54 ;
                                     0000    55 ; MACRO LIBRARY CALLS
                                     0000    56 ;
                                     0000    57  
                                     0000    58 	DEFCMDWRK			; DEFINE WORK AREA OFFSETS
                                     0000    59 	DEFERRCOD			; DEFINE ERROR/STATUS VALUES
                                     0000    60 	DEFPROBLK			; DEFINE PROMPT DESCRIPTOR BLOCK OFFSETS
                                     0000    61 	DEFPTRDSC			; DEFINE RESULT PARSE DESCRIPTOR FORMAT
                                     0000    62 	DEFQUABLK			; DEFINE QUALIFIER BLOCK VALUES
                                     0000    63 	$CLIDEF				; CLI DEFINITIONS
                                     0000    64 	DEFDCLRPW			; DCL RESULT PARSE WORK DEFINITIONS
                                     0000    65  
                                     0000    66 
                                     0000    67 ;
                                     0000    68 ; OWN STORAGE:
                                     0000    69 ;
                                 00000000    70 	.PSECT	DCL$ZCODE	BYTE,RD,NOWRT
                                     0000    71  
                           58 44 4F  0000    72 CNVRDX:	.ASCII	\ODX\			; CONVERSION RADIX CONTROLS
                           08 0A 10  0003    73 RADIX:	.BYTE	16,10,8			; CORRESPONDING RADIX VALUES
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page   3
01              VALUE CONVERSION ROUTINES                                                                                        (3)

                                     0006    75 	.SBTTL	VALUE CONVERSION ROUTINES
                                     0006    76 ;++
                                     0006    77 ; FUNCTIONAL DESCRIPTION:
                                     0006    78 ;
                                     0006    79 ;	THIS ROUTINE IS CALLED TO CONVERT AN ASCII STRING
                                     0006    80 ;	TO A NUMERIC VALUE.
                                     0006    81 ;
                                     0006    82 ; CALLING SEQUENCE:
                                     0006    83 ;
                                     0006    84 ;	BSB/JSB	DCL$CNVNUMDEC		; CONVERT WITH DEFAULT RADIX DECIMAL
                                     0006    85 ;	BSB/JSB	DCL$CNVASCBIN		; CONVERT WITH DEFAULT RADIX INPUT
                                     0006    86 ;
                                     0006    87 ; INPUT PARAMETERS:
                                     0006    88 ;
                                     0006    89 ; AT DCL$CNVASCBIN:
                                     0006    90 ;
                                     0006    91 ;	R1 IS DEFAULT RADIX INDICATOR, 0=HEX,1=DECIMAL,2=OCTAL
                                     0006    92 ;
                                     0006    93 ; ALWAYS:
                                     0006    94 ;
                                     0006    95 ;	R2,R3 IS QUADWORD DESCRIPTOR OF VALUE
                                     0006    96 ;
                                     0006    97 ; IMPLICIT INPUTS:
                                     0006    98 ;
                                     0006    99 ;	NONE
                                     0006   100 ;
                                     0006   101 ; OUTPUT PARAMETERS:
                                     0006   102 ;
                                     0006   103 ;	VALUE IS CONVERTED AND RETURNED IN R1.
                                     0006   104 ;
                                     0006   105 ; IMPLICIT OUTPUTS:
                                     0006   106 ;
                                     0006   107 ;	NONE
                                     0006   108 ;
                                     0006   109 ; COMPLETION CODES:
                                     0006   110 ;
                                     0006   111 ;	R0 IS SET TO INDICATE SUCCESS OR FAILURE
                                     0006   112 ;
                                     0006   113 ; SIDE EFFECTS:
                                     0006   114 ;
                                     0006   115 ;	NONE
                                     0006   116 ;
                                     0006   117 ;--
                                     0006   118 	.ENABL	LSB
                                     0006   119  
                                     0006   120  
                                     0006   121 DCL$CNVNUMDEC::				; CONVERT NUMERIC DECIMAL RADIX
            51            01     D0  0006   122 	MOVL	#1,R1			; RADIX IS DECIMAL
                                     0009   123 DCL$CNVASCBIN::				; CONVERT IN SPECIFIED RADIX
                          6243   9F  0009   124 	PUSHAB	(R2)[R3]		; SAVE ADDRESS OF END OF STRING
                          00     DD  000C   125 	PUSHL	#0			; SET NO NEGATE FLAG
            50            52     D0  000E   126 	MOVL	R2,R0			; TEST FOR ZERO LENGTH STRING
                          4F     13  0011   127 	BEQL	70$			; IF IT IS THE NULL STRING-RETURN ZERO
            63            25     91  0013   128 5$:	CMPB	#^A/%/,(R3)		; RADIX CHANGE OPERATOR?
                          0E     12  0016   129 	BNEQ	10$			; BR IF NO
                          53     D6  0018   130 	INCL	R3			; SKIP OVER OPERATOR
            03            83     3A  001A   131 	LOCC	(R3)+,#3,CNVRDX		; FIND RADIX SPECIFIER
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page   4
01              VALUE CONVERSION ROUTINES                                                                                        (3)

                       E1 AF         001D       
                          41     13  001F   132 	BEQL	70$			; BR IF NONE RECOGNIZED
            51            70     9E  0021   133 	MOVAB	-(R0),R1		; SET RADIX INDICATOR
                          ED     11  0024   134 	BRB	5$			; LOOK FOR AN OTHER SET
            63            2B     91  0026   135 10$:	CMPB	#^A/+/,(R3)		; CHECK FOR UNIARY OPERATOR OF PLUS
                          07     13  0029   136 	BEQL	20$			; BR IF YES
            63            2D     91  002B   137 	CMPB	#^A/-/,(R3)		; HOW ABOUT MINUS
                          06     12  002E   138 	BNEQ	30$			; BR IF NO
                          6E     D6  0030   139 	INCL	(SP)			; NEGATE THE NEGATIVE FLAG
                          53     D6  0032   140 20$:	INCL	R3			; SKIP THE UNIARY OPERATOR
                          DD     11  0034   141 	BRB	5$			; LOOK FOR ANOTHER
            52         C9 AF41   9A  0036   142 30$:	MOVZBL	RADIX[R1],R2		; SET ACTUAL RADIX OF CONVERSION
                          50     7C  003B   143 	CLRQ	R0			; START WITH RESULT AND WORK VALUE OF 0
            63            30     83  003D   144 40$:	SUBB3	#^A/0/,(R3),R1		; GET NEXT NUMBER MINUS ASCII BIAS
                          51         0040       
                          1F     19  0041   145 	BLSS	70$			; BR IF NOT A NUMERIC CHARACTER
            09            51     91  0043   146 	CMPB	R1,#9			; WAS IT A NUMERIC DIGIT?
                          08     15  0046   147 	BLEQ	60$			; BR IF YES
            11            51     91  0048   148 	CMPB	R1,#<^A/A/-^A/0/>	; HEX RADIX CHARACTER?
                          15     19  004B   149 	BLSS	70$			; BR IF NO - TERMINATE THE CONVERT
            51            07     82  004D   150 	SUBB	#<<^A/A/-^A/0/>-10>,R1	; CONVERT TO BINARY VALUE
            52            51     91  0050   151 60$:	CMPB	R1,R2			; WITH IN THE RADIX?
                          0D     18  0053   152 	BGEQ	70$			; BR IF OUT OF THE RANGE
            50            52     7A  0055   153 	EMUL	R2,R0,R1,R0		; FIND CURRENT TOTAL
            50            51         0058       
                          53     D6  005A   154 	INCL	R3			; POINT AT NEXT CHARACTER
         04 AE            53     D1  005C   155 	CMPL	R3,4(SP)		; TIME TO QUIT?
                          DB     12  0060   156 	BNEQ	40$			; BR IF NO
            51            50     D0  0062   157 70$:	MOVL	R0,R1			; SET RESULT
            03            8E     E9  0065   158 	BLBC	(SP)+,80$		; TEST NEGATE FLAG
            51            51     CE  0068   159 	MNEGL	R1,R1			; NEGATE THE SOURCE
            8E            53     C3  006B   160 80$:	SUBL3	R3,(SP)+,R0		; SET NUMBER OF UN-PROCESSED BYTES
                          50         006E       
                                 05  006F   161 	RSB				; BACK TO THE CALLER
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page   5
01              VALUE CONVERSION ROUTINES                                                                                        (4)

                                     0070   163  
                                     0070   164 	.DSABL	LSB
                                     0070   165 	.SBTTL	GET QUALIFIER DESCRIPTOR BLOCK
                                     0070   166 ;++
                                     0070   167 ; FUNCTIONAL DESCRIPTION:
                                     0070   168 ;
                                     0070   169 ;	THIS ROUTINE IS CALLED TO LOCATE THE COMMAND QUALIFIER
                                     0070   170 ;	DESCRIPTOR BLOCK FOR A SPECIFIC QUALIFIER.
                                     0070   171 ;	ALTERNATE ENTRY TO CHECK THAT QUALIFIER IS A PARAMETE
                                     0070   172 ;	QUALIFIER AS OPPOSED TO AN OUTPUT SPECIFIER.
                                     0070   173 ;
                                     0070   174 ; CALLING SEQUENCE:
                                     0070   175 ;
                                     0070   176 ;	BSB/JSB	DCL$GETQUALDESC		; GET QUALIFIER DESCRIPTOR
                                     0070   177 ;	BSB/JSB	DCL$GETPARMQUAL		; GET PARAMETER QUALIFIER DESCRIPTOR
                                     0070   178 ;
                                     0070   179 ; INPUT PARAMETERS:
                                     0070   180 ;
                                     0070   181 ;	R1 IS THE CODE TO IDENTIFY THE QUALIFIER
                                     0070   182 ;
                                     0070   183 ; IMPLICIT INPUTS:
                                     0070   184 ;
                                     0070   185 ;	R8 = ADDRESS OF UTILITY BIT ARRAY
                                     0070   186 ;	R9 = ADDRESS OF REQUEST DESCRIPTOR
                                     0070   187 ;	R10 = ADDRESS OF WORK BLOCK
                                     0070   188 ;	R11 = ADDRESS OF PASS 1 PARSE WORK AREA
                                     0070   189 ;
                                     0070   190 ; OUTPUT PARAMETERS:
                                     0070   191 ;
                                     0070   192 ;	R2 IS THE ADDRESS OF THE QUALIFIER DESCRIPTOR BLOCK
                                     0070   193 ;
                                     0070   194 ; IMPLICIT OUTPUTS:
                                     0070   195 ;
                                     0070   196 ;	NONE
                                     0070   197 ;
                                     0070   198 ; COMPLETION CODES:
                                     0070   199 ;
                                     0070   200 ;	R0 = SUCCESS/FAIL DEPENDING OF WHETHER THE DESCRIPTOR WAS FOUND
                                     0070   201 ;
                                     0070   202 ; SIDE EFFECTS:
                                     0070   203 ;
                                     0070   204 ;	TOP LEVEL RETURN (RET) TAKEN IF SEARCH FAILS
                                     0070   205 ;
                                     0070   206 ;--
                                     0070   207 
                                     0070   208 	.ENABL	LSB
                                     0070   209 
                                     0070   210 DCL$GETPARMQUAL::			; GET A PARAMETER QUALIFIER DESCRIPTOR
                          06     10  0070   211 	BSBB	DCL$GETQUALDESC		; LOCATE THE DESCRIPTOR BLOCK
                                 E0  0072   212 	BBS	#QUA_V_OUTPUT,-		; BR IF THIS QUALIFIER IS NOT
         03 A2            0B         0073   213 		QUA_W_FLAGS(R2),90$	; REALLY AN OUTPUT DESCPRIPTOR
                          1C         0076       
                                 05  0077   214 	RSB				; RETURN TO CALLER
                                     0078   215  
                                     0078   216 DCL$GETQUALDESC::			; FIND A QUALIFIER DESCRIPTOR
            50            51     D0  0078   217 	MOVL	R1,R0			; COPY QUALIFIER NUMBER
                          16     13  007B   218 	BEQL	90$			; ZERO IS INVALID QUALIFIER NUMBER
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page   6
01              GET QUALIFIER DESCRIPTOR BLOCK                                                                                   (4)

            52         E0 AB     D0  007D   219 	MOVL	WRK_L_QUABLK(R11),R2	; POINT AT START OF QUALIFIER BLOCKS
                          10     13  0081   220 	BEQL	90$			; BR IF NONE
                          08     11  0083   221 	BRB	20$			; START OF SEARCH
            7E            62     9A  0085   222 10$:	MOVZBL	QUA_B_OFFSET(R2),-(SP)	; GET OFFSET TO NEXT
                          09     13  0088   223 	BEQL	90$			; BR IF THIS IS LAST
            52            8E     C0  008A   224 	ADDL	(SP)+,R2		; FIND ADDRESS OF NEXT
            F5            50     F5  008D   225 20$:	SOBGTR	R0,10$			; COUNT DOWN QUALIFIER NUMBER
                          50     D6  0090   226 	INCL	R0			; INDICATE DESCRIPTOR FOUND
                                 05  0092   227 	RSB				; BACK TO THE CALLER
                                     0093   228  
                                     0093   229 90$:	SETSTAT	INVQUALNUM		; SET ERROR-INVALID QUALIFER NUMBER
                                 04  0098   230 	RET				; GO BACK TO DISPATCHER
                                     0099   231  
                                     0099   232 	.DSABL	LSB
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page   7
01              FIND COMMAND QUALIFIER                                                                                           (5)

                                     0099   234 	.SBTTL	FIND COMMAND QUALIFIER
                                     0099   235 ;++
                                     0099   236 ; FUNCTIONAL DESCRIPTION:
                                     0099   237 ;
                                     0099   238 ;	THIS COROUTINE IS CALLED TO SEARCH FOR A 
                                     0099   239 ;	COMMAND QUALIFIER IN THE RANGE OF THE CURRENT COMMAND.
                                     0099   240 ;	THE SEARCH IS DONE OUT TO THE FIRST PARAMETER APPEARING
                                     0099   241 ;	IN THE COMMAND, THEN FROM THE START OF THE FIRST PARAMETER
                                     0099   242 ;	IN THE RANGE OF THE CURRENT COMMAND TO THE END OF THE
                                     0099   243 ;	RANGE OF THE CURRENT COMMAND.
                                     0099   244 ;
                                     0099   245 ; CALLING SEQUENCE:
                                     0099   246 ;
                                     0099   247 ;	BSB/JSB	DCL$LOCCMDQUAL
                                     0099   248 ;
                                     0099   249 ; INPUT PARAMETERS:
                                     0099   250 ;
                                     0099   251 ;	R1 IS THE CODE OF THE QUALIFIER TO LOCATE
                                     0099   252 ;
                                     0099   253 ; IMPLICIT INPUTS:
                                     0099   254 ;
                                     0099   255 ;	R8 = ADDRESS OF UTILITY BIT ARRAY
                                     0099   256 ;	R9 = ADDRESS OF REQUEST DESCRIPTOR
                                     0099   257 ;	R10 = ADDRESS OF WORK BLOCK
                                     0099   258 ;	R11 = ADDRESS OF PASS 1 PARSE WORK AREA
                                     0099   259 ;
                                     0099   260 ; OUTPUT PARAMETERS:
                                     0099   261 ;
                                     0099   262 ;	R4 IS RETURNED AS THE ADDRESS OF THE DESCRIPTOR IF FOUND
                                     0099   263 ;	R5 IS THE INDEX TO THE DESCRIPTOR IF FOUND
                                     0099   264 ;
                                     0099   265 ; IMPLICIT OUTPUTS:
                                     0099   266 ;
                                     0099   267 ;	NONE
                                     0099   268 ;
                                     0099   269 ; COMPLETION CODES:
                                     0099   270 ;
                                     0099   271 ;	R0 IS SET TRUE OR FALSE DEPENDING OF SUCCESS OF SEARCH
                                     0099   272 ;
                                     0099   273 ; SIDE EFFECTS:
                                     0099   274 ;
                                     0099   275 ;	REGISTERS R4, R5 & R6 ARE USED BY THIS ROUTINE
                                     0099   276 ;	AND MUST BE PRESERVED ACCROSS COROUTINE RETURNS.
                                     0099   277 ;
                                     0099   278 ;--
                                     0099   279 
                                     0099   280  
                                     0099   281 DCL$FNDCMDQUAL::			; LOCATE THE COMMAND QUALIFIER
            55            01     D0  0099   282 	MOVL	#1,R5			; SET INDEX TO START SEARCH
            56         40 AA     DE  009C   283 	MOVAL	RPW_AG_PRMLIM(R10),R6	; START OF PARAMETER LIMIT DESCRIPTORS
                          50     D4  00A0   284 10$:	CLRL	R0			; ASSUME NO MORE QUALIFIERS
         08 AA            55     91  00A2   285 	CMPB	R5,RPW_B_STRPARM(R10)	; THIS DESCRIPTOR IN RANGE OF VERB
                          0E     1F  00A6   286 	BLSSU	40$			; BR IF YES
                          06     12  00A8   287 	BNEQ	30$			; BR IF WITHIN A PARAMETER
            55         01 A6     9A  00AA   288 20$:	MOVZBL	PLM_B_FSTDESC(R6),R5	; SET INDEX OF PLACE TO START LOOKING
                          1C     13  00AE   289 	BEQL	70$			; BR WHEN DONE
         02 A6            55     91  00B0   290 30$:	CMPB	R5,PLM_B_LSTDESC(R6)	; IS THIS WITHIN THE CURRENT PARAMETER?
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page   8
01              FIND COMMAND QUALIFIER                                                                                           (5)

                          11     1A  00B4   291 	BGTRU	60$			; BR IF OUT OF RANGE OF THIS PARAMETER
                          3E     10  00B6   292 40$:	BSBB	DCL$SETDESCADR		; SET ADDRESS OF RESULT DESCRIPTOR
                          1C     ED  00B8   293 	CMPZV	#PTR_V_TYPE,#PTR_S_TYPE,- ; VIELD LIMITS FOR TYPE
            64            04         00BA   294 		PTR_L_DESCR(R4),#PTR_K_COMDQUAL ; IF THIS A COMMAND QUALIFIER?
                          00         00BC       
                          04     12  00BD   295 	BNEQ	50$			; BR IF NO-CONTINUE SEARCH
                          50     D6  00BF   296 	INCL	R0			; SET SUCCESS
                          9E     16  00C1   297 	JSB	@(SP)+			; RETURN WITH QUALIFIER
                          55     D6  00C3   298 50$:	INCL	R5			; ADVANCE INDEX TO NEXT DESCRIPTOR
                          D9     11  00C5   299 	BRB	10$			; CHECK AGAIN
            56            04     C0  00C7   300 60$:	ADDL	#PLM_K_SIZE,R6		; SET TO NEXT PARAMETER LIMIT DESCRIPTOR
                          DE     11  00CA   301 	BRB	20$			; TRY NEXT PARAMETER
                                 05  00CC   302 70$:	RSB				; RETURN WITH VALUE OR ZERO
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page   9
01              EXTRACT RESULT DESCRIPTOR FIELDS                                                                                 (6)

                                     00CD   304 	.SBTTL	EXTRACT RESULT DESCRIPTOR FIELDS
                                     00CD   305 ;++
                                     00CD   306 ; FUNCTIONAL DESCRIPTION:
                                     00CD   307 ;
                                     00CD   308 ;	THIS ROUTINE IS CALLED TO TAKE A RESULT DESCRIPTOR APART
                                     00CD   309 ;	AND RETURN ITS COMPONTENT PART AS INDIVIDUAL VALUES.
                                     00CD   310 ;
                                     00CD   311 ; CALLING SEQUENCE:
                                     00CD   312 ;
                                     00CD   313 ;	BSB/JSB	DCL$EXTNXTDESC		; EXTRACT NEXT DESCRIPTOR
                                     00CD   314 ;	BSB/JSB	DCL$GETEXTDESC		; GET AND EXTRACT DESCRIPTOR
                                     00CD   315 ;	BSB/JSB	DCL$EXTRSLDESC		; EXTRACT RESULT DESCRIPTOR
                                     00CD   316 ;
                                     00CD   317 ; INPUT PARAMETERS:
                                     00CD   318 ;
                                     00CD   319 ;	AT EXTRSLDESC WITH R4 CONTAINS THE ADDRESS OF THE DESCRIPTOR 
                                     00CD   320 ;	AT EXTNXTDESC WITH R6 CONTAINS THE ADDRESS OF THE PARAMETER 
                                     00CD   321 ;	    LIMIT DESCRIPTOR.
                                     00CD   322 ;
                                     00CD   323 ; IMPLICIT INPUTS:
                                     00CD   324 ;
                                     00CD   325 ;	R8 = ADDRESS OF UTILITY BIT ARRAY
                                     00CD   326 ;	R9 = ADDRESS OF REQUEST DESCRIPTOR
                                     00CD   327 ;	R10 = ADDRESS OF WORK BLOCK
                                     00CD   328 ;	R11 = ADDRESS OF PASS 1 PARSE WORK AREA
                                     00CD   329 ;
                                     00CD   330 ; OUTPUT PARAMETERS:
                                     00CD   331 ;
                                     00CD   332 ;	R1 = TYPE
                                     00CD   333 ;	R2 = SIZE OR VALUE DEPENDING ON THE DESCRIPTOR
                                     00CD   334 ;	R3 = ADDRESS OF THE ITEM
                                     00CD   335 ;	R4 = ADDRESS OF DESCRIPTOR
                                     00CD   336 ;
                                     00CD   337 ; IMPLICIT OUTPUTS:
                                     00CD   338 ;
                                     00CD   339 ;	NONE
                                     00CD   340 ;
                                     00CD   341 ; COMPLETION CODES:
                                     00CD   342 ;
                                     00CD   343 ;	R0 = SUCCESS/FAILURE DEPENDING ON RESULT OF SEARCH
                                     00CD   344 ;
                                     00CD   345 ; SIDE EFFECTS:
                                     00CD   346 ;
                                     00CD   347 ;	NONE
                                     00CD   348 ;
                                     00CD   349 ;--
                                     00CD   350 
                                     00CD   351 	.ENABL	LSB
                                     00CD   352 
                                     00CD   353 DCL$EXTNXTDESC::			; EXTRACT NEXT COMPLETE DESCRIPTOR
                                     00CD   354 	SETSTAT	FAIL			; ASSUME WONT FIND ONE
            55            66     9A  00CF   355 	MOVZBL	PLM_B_NXTDESC(R6),R5	; SET POINTER TO DESCRIPTOR
                          21     13  00D2   356 	BEQL	40$			; BR IF PARAMETER SET IS MISSING
         02 A6            55     91  00D4   357 	CMPB	R5,PLM_B_LSTDESC(R6)	; IS THIS IN RANGE OF CURRENT PARAMETER?
                          1B     1A  00D8   358 	BGTRU	40$			; BR IF NO
                          66     96  00DA   359 	INCB	PLM_B_NXTDESC(R6)	; ADVANCE INDEX TO NEXT
                          50     D6  00DC   360 	INCL	R0			; SET ANY SUCCESSFUL STATUS
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page  10
01              EXTRACT RESULT DESCRIPTOR FIELDS                                                                                 (6)

                                     00DE   361 DCL$GETEXTDESC::			; GET AND EXTRACT NEXT DESCTRIPTOR
                          16     10  00DE   362 	BSBB	DCL$SETDESCADR		; SET ADDRESS OF RESULT DESCRIPTOR
                                     00E0   363 DCL$EXTRSLDESC::			; EXTRACT FOR RESULT DESCRIPTION
                          08     EF  00E0   364 	EXTZV	#PTR_V_OFFSET,#PTR_S_OFFSET,- ; START BIT AND SIZE OF OFFSET
            64            0C         00E2   365 		PTR_L_DESCR(R4),R3	; GET OFFSET INTO R3
                          53         00E4       
            53       FD38 CB43   9E  00E5   366 	MOVAB	WRK_AB_BUFFER(R11)[R3],R3 ; FIND ADDRESS OF ITEM IN BUFFER
                          00     EF  00EB   367 	EXTZV	#PTR_V_VALUE,#PTR_S_VALUE,- ; START BIT AND SIZE OF VALUE
            64            08         00ED   368 		PTR_L_DESCR(R4),R2	; GET VALUE INTO R2
                          52         00EF       
                          1C     EF  00F0   369 	EXTZV	#PTR_V_TYPE,#PTR_S_TYPE,- ; START BIT AND SIZE OF TYPE
            64            04         00F2   370 		PTR_L_DESCR(R4),R1	; GET TYPE INTO R1
                          51         00F4       
                                 05  00F5   371 40$:	RSB				; 
                                     00F6   372  
                                     00F6   373 	.DSABL	LSB
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page  11
01              SET RESULT DESCRIPTOR ADDRESS                                                                                    (7)

                                     00F6   375 	.SBTTL	SET RESULT DESCRIPTOR ADDRESS
                                     00F6   376 ;++
                                     00F6   377 ; FUNCTIONAL DESCRIPTION:
                                     00F6   378 ;
                                     00F6   379 ;	THIS ROUTINE IS CALLED TO SET THE ADDRESS OF A RESULT
                                     00F6   380 ;	DESCRIPTOR INTO R4.
                                     00F6   381 ;
                                     00F6   382 ; CALLING SEQUENCE:
                                     00F6   383 ;
                                     00F6   384 ;	BSB/JSB	DCL$SETDESCADR
                                     00F6   385 ;
                                     00F6   386 ; INPUT PARAMETERS:
                                     00F6   387 ;
                                     00F6   388 ;	R5 CONTAINS THE INDEX FOR THE DESIRED DESCRIPTOR
                                     00F6   389 ;
                                     00F6   390 ; IMPLICIT INPUTS:
                                     00F6   391 ;
                                     00F6   392 ;	R10 = ADDRESS OF WORK BLOCK
                                     00F6   393 ;	R11 = ADDRESS OF PASS 1 PARSE WORK AREA
                                     00F6   394 ;
                                     00F6   395 ; OUTPUT PARAMETERS:
                                     00F6   396 ;
                                     00F6   397 ;	R4 IS LOADED WITH THE ADDRESS OF THE DESCRIPTOR
                                     00F6   398 ;
                                     00F6   399 ; IMPLICIT OUTPUTS:
                                     00F6   400 ;
                                     00F6   401 ;	NONE
                                     00F6   402 ;
                                     00F6   403 ; COMPLETION CODES:
                                     00F6   404 ;
                                     00F6   405 ;	NONE
                                     00F6   406 ;
                                     00F6   407 ; SIDE EFFECTS:
                                     00F6   408 ;
                                     00F6   409 ;	NONE
                                     00F6   410 ;
                                     00F6   411 ;--
                                     00F6   412 
                                     00F6   413 
                                     00F6   414 DCL$SETDESCADR::			; SET ADDRESS OF RESULT DESCRITPTOR
            54       FBB0 CB45   DE  00F6   415 	MOVAL	WRK_AG_RESULT-4(R11)[R5],R4 ; GET ADDRESS OF DESCRIPTOR
                                 05  00FC   416 	RSB
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page  12
01              GET PARAMETER                                                                                                    (8)

                                     00FD   418 	.SBTTL	GET PARAMETER
                                     00FD   419 ;++
                                     00FD   420 ; FUNCTIONAL DESCRIPTION:
                                     00FD   421 ;
                                     00FD   422 ;	THIS ROUTINE IS CALLED TO SEARCH THE RESULT DESCRIPTOR
                                     00FD   423 ;	BUFFER FOR THE NEXT OCCURANCE OF A PRARMETER
                                     00FD   424 ;
                                     00FD   425 ; CALLING SEQUENCE:
                                     00FD   426 ;
                                     00FD   427 ;	BSB/JSB	DCL$GETPARM		; GET A PARAMETER
                                     00FD   428 ;
                                     00FD   429 ; INPUT PARAMETERS:
                                     00FD   430 ;
                                     00FD   431 ;	R5 CONTAINS THE INDEX OF NEXT DESCRIPTOR TO CHECK
                                     00FD   432 ;
                                     00FD   433 ; IMPLICIT INPUTS:
                                     00FD   434 ;
                                     00FD   435 ;	R8 = ADDRESS OF UTILITY BIT ARRAY
                                     00FD   436 ;	R9 = ADDRESS OF REQUEST DESCRIPTOR
                                     00FD   437 ;	R10 = ADDRESS OF WORK BLOCK
                                     00FD   438 ;	R11 = ADDRESS OF PASS 1 PARSE WORK AREA
                                     00FD   439 ;
                                     00FD   440 ; OUTPUT PARAMETERS:
                                     00FD   441 ;
                                     00FD   442 ;	R1 CONTAINS THE TYPE OF THE DESCRIPTOR(IE:PTR_K_PARAMETR)
                                     00FD   443 ;	R2 CONTAINS THE SIZE OF THE PARAMETER
                                     00FD   444 ;	R3 CONTAINS THE PRECEEDING TERMINATOR
                                     00FD   445 ;	R4 CONTAINS THE ADDRESS OF THE PARAMETER DESCRIPTOR
                                     00FD   446 ;	R5 IS THE INDEX TO THE DESCRIPTOR
                                     00FD   447 ;
                                     00FD   448 ; IMPLICIT OUTPUTS:
                                     00FD   449 ;
                                     00FD   450 ;	NONE
                                     00FD   451 ;
                                     00FD   452 ; COMPLETION CODES:
                                     00FD   453 ;
                                     00FD   454 ;	R0 = SUCCESS/FAIL DEPENDING ON THE RESULT OF THE SEARCH
                                     00FD   455 ;
                                     00FD   456 ; SIDE EFFECTS:
                                     00FD   457 ;
                                     00FD   458 ;	NONE
                                     00FD   459 ;
                                     00FD   460 ;--
                                     00FD   461 
                                     00FD   462 
                                     00FD   463 DCL$GETPARM::				; GET THE NEXT PARAMETER
                                     00FD   464 	SETSTAT	FAIL			; ASSUME NO MORE PARAMETERS
                          55     D6  00FF   465 10$:	INCL	R5			; ADVANCE INDEX
                          DB     10  0101   466 	BSBB	DCL$GETEXTDESC		; GET DESCRIPTOR AND EXTRACT FIELDS
                          18     EF  0103   467 	EXTZV	#PTR_V_TERM,#PTR_S_TERM,- ; GET THE TERMINATOR FORM THE PRVIOUS
         FC A4            04         0105   468 		-4(R4),R3		; DESCRIPTOR AND SAVE IN R3
                          53         0108       
            04            51     91  0109   469 	CMPB	R1,#PTR_K_ENDLINE	; IS THIS THE END OF LINE?
                          08     13  010C   470 	BEQL	30$			; NO MORE PARAMETERS
            03            51     91  010E   471 	CMPB	R1,#PTR_K_PARAMETR	; IS THE CURRENT A PARAMETER?
                          EC     12  0111   472 	BNEQ	10$			; BR IF NO-TRY NEXT
                                     0113   473 	SETSTAT	SUCCESS			; SET FOUND ONE
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page  13
01              GET PARAMETER                                                                                                    (8)

                                 05  0116   474 30$:	RSB				; RETURN TO CALLER
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page  14
01              RESULT PARSE INIT                                                                                                (9)

                                     0117   476 	.SBTTL	RESULT PARSE INIT
                                     0117   477 ;++
                                     0117   478 ; FUNCTIONAL DESCRIPTION:
                                     0117   479 ;
                                     0117   480 ;	THIS ROUTINE IS CALLED TO ESTABLISH INITIAL CONDITIONS
                                     0117   481 ;	IN THE RESULT PARSE WORK AREA PRIOR TO PERFORMAING
                                     0117   482 ;	A RESULT PARSE.
                                     0117   483 ;
                                     0117   484 ; CALLING SEQUENCE:
                                     0117   485 ;
                                     0117   486 ;	ENTERED VIA A CASE FOLLOWED BY A CALL
                                     0117   487 ;
                                     0117   488 ; INPUT PARAMETERS:
                                     0117   489 ;
                                     0117   490 ;	NONE
                                     0117   491 ;
                                     0117   492 ; IMPLICIT INPUTS:
                                     0117   493 ;
                                     0117   494 ;	R9 = ADDRESS OF REQUEST DESCRIPTOR
                                     0117   495 ;	R10 = ADDRESS OF WORK BLOCK
                                     0117   496 ;	R11 = ADDRESS OF PASS 1 PARSE WORK AREA
                                     0117   497 ;
                                     0117   498 ; OUTPUT PARAMETERS:
                                     0117   499 ;
                                     0117   500 ;	THE RESULT PARSE WORK AREA IS INITED
                                     0117   501 ;
                                     0117   502 ; IMPLICIT OUTPUTS:
                                     0117   503 ;
                                     0117   504 ;	NONE
                                     0117   505 ;
                                     0117   506 ; COMPLETION CODES:
                                     0117   507 ;
                                     0117   508 ;	R0 = SUCCESS
                                     0117   509 ;
                                     0117   510 ; SIDE EFFECTS:
                                     0117   511 ;
                                     0117   512 ;	NONE
                                     0117   513 ;
                                     0117   514 ;--
                                     0117   515 
                                     0117   516 
                                     0117   517 DCL$RPINIT::				; RESULT APRSE INIT
                          5E     10  0117   518 	BSBB	DCL$GETDCLWRK		; GET POINTER TO DCL PHASE 1 WORK AREA
            6A            00     2C  0119   519 	MOVC5	#0,(R10),#0,-		; SOURCE BUFFER SIZE AND FILL OF 0 TO
                                     011C       
       007C 8F            00         011C   520 		#CLI$C_WORKAREA-4,4(R10) ; ZERO OUT THE WORK AREA
                       04 AA         0120       
         04 AA            5B     D0  0122   521 	MOVL	R11,RPW_L_DCLWRK(R10)	; SAVE WORK AREA ADDRESS FOR LATER
            57         DC AB     D0  0126   522 	MOVL	WRK_L_PROPTR(R11),R7	; GET ADDRESS OF COMMAND PROMPT TABLE
            56         40 AA     DE  012A   523 	MOVAL	RPW_AG_PRMLIM(R10),R6	; GET ADDRESS OF FIRST PARAM LIMIT TABLE
                          55     D4  012E   524 	CLRL	R5			; INIT INDEX TO MINUS FIRST DESCRIPTOR
                          CB     10  0130   525 	BSBB	DCL$GETPARM		; RETREIVE THE NEXT(FIRST)PARAMETER
         08 AA            55     90  0132   526 	MOVB	R5,RPW_B_STRPARM(R10)	; SAVE THE INDEX TO THE FIRST PARAMETER
            36            50     E9  0136   527 	BLBC	R0,90$			; BR IF NO PARAMETERS IN COMMAND
         01 A6            55     90  0139   528 10$:	MOVB	R5,PLM_B_FSTDESC(R6)	; SET FIRST PARAMETER IN THIS LIST
            66            55     90  013D   529 	MOVB	R5,PLM_B_NXTDESC(R6)	; ALSO THE NEXT TO PROCESS
                          BB     10  0140   530 20$:	BSBB	DCL$GETPARM		; LOCATE THE NEXT PARAMETER IN THE COMD
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page  15
01              RESULT PARSE INIT                                                                                                (9)

            55            01     83  0142   531 	SUBB3	#1,R5,PLM_B_LSTDESC(R6)	; SET INDEX OF THE LAST PARAMETER SEEN
                       02 A6         0145       
            25            50     E9  0147   532 	BLBC	R0,90$			; BR IF NO MORE
            01            53     91  014A   533 	CMPB	R3,#PTR_K_BLANK		; IS THIS THE START OF A PARMETER LIST?
                          16     13  014D   534 	BEQL	50$			; BR IF YES
                                 E0  014F   535 	BBS	#PRO_V_IMPCAT,-		; IF COMMAND HAS IMPLIED CONCATONATION
         01 A7            01         0150   536 		PRO_B_FLAGS(R7),20$	; THEN KEEP LOOKING TILL END OF PARAMETER
                          EC         0153       
            05            53     91  0154   537 	CMPB	R3,#PTR_K_COMMA		; ELSE LOOK FOR PARAMETER LIST SEPARATOR
                          E7     12  0157   538 	BNEQ	20$			; IF NO A SEPARATOR, CONTINUE SCAN
            01            53     91  0159   539 40$:	CMPB	R3,#PTR_K_BLANK		; SCAN FOR LAST PARAMETER IN THE LIST
                          07     13  015C   540 	BEQL	50$			; BR IF FOUND LAST PARAMETER
                          9D     10  015E   541 	BSBB	DCL$GETPARM		; SEARCH FOR NEXT PARAMETER
            0C            50     E9  0160   542 	BLBC	R0,90$			; BR IF RAN OUT OF PARAMETERS
                          F4     11  0163   543 	BRB	40$			; CHECK FOR BLANKS
                          87     B5  0165   544 50$:	TSTW	(R7)+			; SKIP TO NEXT PROMPT DESCRIPTOR
         03 A6            55     90  0167   545 	MOVB	R5,PLM_B_TRMDESC(R6)	; SAVE DESCRIPTOR OF PARAMETER TERMINATOR
                          86     D5  016B   546 	TSTL	(R6)+			; POINT AT NEXT PARAMETER LIMIT DESCRIPTOR
                          CA     11  016D   547 	BRB	10$			; SCAN NEXT PARAMETER
                                     016F   548 90$:	SETSTAT	SUCCESS			; SET ALL IS GOOD
         03 A6            55     90  0172   549 	MOVB	R5,PLM_B_TRMDESC(R6)	; SAVE FINAL TERMINATOR
                                 04  0176   550 	RET				; RETURN TO DISPATCHER
                                     0177   551 ;
                                     0177   552 ; SET WORK ADDRESS
                                     0177   553 ;
                                     0177   554 DCL$GETDCLWRK::				; 
            5B   00000000'9F     9E  0177   555 	MOVAB	@#CTL$AG_CLIDATA,R11	; CLI IMPURE AREA
            5B         04 AB     D0  017E   556 	MOVL	PRC_L_SAVFP(R11),R11	; ACTUAL WORK AREA IS HERE
                                 05  0182   557 	RSB				; RETURN TO CALLER
                                     0183   558 	.END
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                     (9)

BIT...         = 00000045            CLI$L_CLIFLAG    00000018            CLI$V_SUBTYP   = 00000000            
CLI$A_ABSACT     00000014            CLI$L_INIARGCNT  00000000            CLI$V_TRMVRBLV = 00000008            
CLI$A_ERRACT     00000004            CLI$L_LINKFLAG   00000014            CLI$V_VERIFY   = 00000002            
CLI$A_FLSACT     00000010            CLI$L_RQVALU     0000000C            CLI$V_VFYINP   = 00000005            
CLI$A_IMGFILED   00000010            CLI$L_USRVAL     00000014            CLI$W_QDVALSIZ   00000004            
CLI$A_IMGHDADR   0000000C            CLI$L_WORKAREA   00000000            CLI$W_RQSIZE     00000008            
CLI$A_PROGXFER   00000004            CLI$M_ABSADR   = 00000002            CLI$W_SERVCOD    00000001            
CLI$A_PRSACT     00000010            CLI$M_ALLOCCUR = 00000001            CLI$_ABFNAM    = 000381B8            
CLI$A_QDVALADR   00000008            CLI$M_BATCH    = 00000008            CLI$_ABKEYW    = 00038000            
CLI$A_QUALST     00000018            CLI$M_CONCATINP= 00000002            CLI$_ABVERB    = 00038008            
CLI$A_RQADDR     0000000C            CLI$M_DBGEXCP  = 00010000            CLI$_BADRET    = 00038198            
CLI$A_TRUACT     0000000C            CLI$M_DBGTRU   = 00000002            CLI$_BADTEXT   = 000381B0            
CLI$A_UTILSERV   00000008            CLI$M_DEBUG    = 00000001            CLI$_BUFOVF    = 00038018            
CLI$B_BITNUM     00000001            CLI$M_DUMMY    = 00000002            CLI$_COMPLX    = 00038020            
CLI$B_QDBLKSIZ   00000000            CLI$M_EXPNAM   = 00000004            CLI$_CONFQUAL  = 00038802            
CLI$B_QDCODE     00000001            CLI$M_INDIRECT = 00000010            CLI$_CREQUEJOB = 0003884A            
CLI$B_QDFLGS     00000002            CLI$M_KEYVALU  = 00000002            CLI$_DEFOVF    = 00038028            
CLI$B_QDSTAT     00000003            CLI$M_LASTVAL  = 00000001            CLI$_DEVALSPL  = 0003885A            
CLI$B_RQFLGS     00000002            CLI$M_MOREINP  = 00000004            CLI$_DEVNOTFOR = 0003887A            
CLI$B_RQINDX     00000001            CLI$M_MOREVALS = 00000001            CLI$_DEVNOTSPL = 00038862            
CLI$B_RQSTAT     00000003            CLI$M_PARMDEF  = 00000008            CLI$_DIRECT    = 00038030            
CLI$B_RQTYPE     00000000            CLI$M_PARMPRS  = 00000001            CLI$_EXPSYN    = 00038038            
CLI$C_QDBITS     00000014            CLI$M_PARMREQ  = 00000001            CLI$_FILOPN    = 00038190            
CLI$C_QUALDEF    00000014            CLI$M_QDEXPA   = 00000004            CLI$_ILLVAL    = 0003883A            
CLI$C_REQDESC    0000001C            CLI$M_QDUSRV   = 00000002            CLI$_IMCHNG    = 00038040            
CLI$C_WORKAREA   00000080            CLI$M_QUALEXP  = 00000002            CLI$_IMGFNF    = 00038872            
CLI$K_ASCIIVAL = 00000041            CLI$M_QUALTRU  = 00000001            CLI$_INSFPRM   = 00038048            
CLI$K_CLISERV  = 00000005            CLI$M_TRMVRBLV = 00000300            CLI$_INVKEY    = 00038178            
CLI$K_ENDPRM1  = 00000030            CLI$M_VERIFY   = 00000004            CLI$_INVQUAL   = 0003880A            
CLI$K_ENDPRM2  = 00000031            CLI$M_VFYINP   = 00000020            CLI$_INVQUALNUM= 0003881A            
CLI$K_ENDPRM3  = 00000032            CLI$Q_QDVALDESC  00000004            CLI$_INVREQTYP = 00038822            
CLI$K_ENDPRM4  = 00000033            CLI$Q_RQDESC     00000008            CLI$_INVRSP    = 00038180            
CLI$K_FILSPEC  = 00000044            CLI$S_PRITYP   = 00000004            CLI$_INVUIC    = 000381A8            
CLI$K_GETCMD   = 00000001            CLI$S_SUBTYP   = 00000004            CLI$_IVCHAR    = 00038050            
CLI$K_GETOPT   = 00000003            CLI$S_TRMVRBLV = 00000002            CLI$_IVDEVTYPE = 0003886A            
CLI$K_GETQUAL  = 00000002            CLI$V_ABSADR   = 00000001            CLI$_IVFNAM    = 000381C0            
CLI$K_INITPRS  = 00000000            CLI$V_ALLOCCUR = 00000000            CLI$_IVKEYW    = 00038060            
CLI$K_INPSPEC  = 00000001            CLI$V_BATCH    = 00000003            CLI$_IVOPER    = 00038068            
CLI$K_INPUT1   = 00000010            CLI$V_CONCATINP= 00000001            CLI$_IVPROT    = 00038070            
CLI$K_INPUT2   = 00000011            CLI$V_DBGEXCP  = 00000010            CLI$_IVQLOC    = 00038078            
CLI$K_INPUT3   = 00000012            CLI$V_DBGTRU   = 00000001            CLI$_IVSYMB    = 00038080            
CLI$K_INPUT4   = 00000013            CLI$V_DEBUG    = 00000000            CLI$_IVVALU    = 00038088            
CLI$K_KEYVAL   = 00000043            CLI$V_DUMMY    = 00000001            CLI$_IVVERB    = 00038090            
CLI$K_KEYWORD  = 00000042            CLI$V_EXPNAM   = 00000002            CLI$_MAXPARM   = 00038098            
CLI$K_NUMERVAL = 00000040            CLI$V_INDIRECT = 00000004            CLI$_MULKEY    = 000381A0            
CLI$K_OUTPUT1  = 00000020            CLI$V_KEYVALU  = 00000001            CLI$_NOATFIL   = 000380A0            
CLI$K_OUTPUT2  = 00000021            CLI$V_LASTVAL  = 00000000            CLI$_NOCCAT    = 000380A8            
CLI$K_OUTPUT3  = 00000022            CLI$V_MOREINP  = 00000002            CLI$_NOCOMD    = 000380B0            
CLI$K_OUTPUT4  = 00000023            CLI$V_MOREVALS = 00000000            CLI$_NOKEYW    = 000380B8            
CLI$K_OUTSPEC  = 00000002            CLI$V_PARMDEF  = 00000003            CLI$_NOLIST    = 000380C0            
CLI$K_PARDONE  = 00000003            CLI$V_PARMPRS  = 00000000            CLI$_NOOPTPRS  = 00038842            
CLI$K_QDBITS     00000014            CLI$V_PARMREQ  = 00000000            CLI$_NOQUAL    = 000380C8            
CLI$K_QUALDEF    00000014            CLI$V_PRITYP   = 00000004            CLI$_NORMAL    = 00030001            
CLI$K_REQDESC    0000001C            CLI$V_QDEXPA   = 00000002            CLI$_NOTNEG    = 000380D8            
CLI$K_UTILOPR  = 00000000            CLI$V_QDUSRV   = 00000001            CLI$_NOVALU    = 000380D0            
CLI$K_VALCONV  = 00000004            CLI$V_QUALEXP  = 00000001            CLI$_NOVALUE   = 0003882A            
CLI$K_WORKAREA   00000080            CLI$V_QUALTRU  = 00000000            CLI$_NULFIL    = 000380E0            
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page  17
SYMBOL TABLE                                                                                                                     (9)

CLI$_NUMBER    = 000380E8            PRC_L_CLIWRK1    00000060            PRC_V_NOCTLY   = 0000000E            
CLI$_ONCOMD    = 000380F0            PRC_L_CLIWRK2    00000064            PRC_V_PAUSE    = 0000000D            
CLI$_ONERR     = 000380F8            PRC_L_CLIWRK3    00000068            PRC_V_USRDET   = 00000008            
CLI$_ONEVAL    = 00038158            PRC_L_CLIWRK4    0000006C            PRC_V_VERIFY   = 00000007            
CLI$_ONLEVL    = 00038100            PRC_L_ERRRAB     00000010            PRC_V_YLEVEL   = 0000000B            
CLI$_ONOVF     = 00038108            PRC_L_EXMDEPADR  0000008C            PRC_W_CLIFLAG    00000052            
CLI$_OVRFLW    = 00038160            PRC_L_EXTARG     00000078            PRC_W_ERRIFI     00000052            
CLI$_PARMDEL   = 00038110            PRC_L_EXTBLK     00000070            PRC_W_FLAGS      00000054            
CLI$_PROC_ID   = 0003FFF1            PRC_L_EXTCOD     00000080            PRC_W_INPCHAN    00000050            
CLI$_QUEJOBCRE = 0003FFF9            PRC_L_EXTHND     00000074            PRC_W_ONLEVEL    00000056            
CLI$_REQPRMABS = 00038812            PRC_L_EXTPRM     0000007C            PRO_B_FLAGS      00000001            
CLI$_RSLOVF    = 00038118            PRC_L_INDEPTH    00000048            PRO_B_PROMPT     00000000            
CLI$_SKPDAT    = 00038120            PRC_L_INDFAB     0000001C            PRO_K_LENGTH     00000002            
CLI$_SPARE0    = 00038010            PRC_L_INDINPRAB  00000014            PRO_M_CONCAT   = 00000001            
CLI$_SPARE1    = 00038058            PRC_L_INDOUTRAB  00000018            PRO_M_IMPCAT   = 00000002            
CLI$_STKOVF    = 00038128            PRC_L_INPRAB     00000008            PRO_M_LIST     = 00000004            
CLI$_SUBMITERR = 00038852            PRC_L_LSTSTATUS  00000094            PRO_M_OPTION   = 00000008            
CLI$_SYMDEL    = 00038130            PRC_L_ONCTLY     0000009C            PRO_M_REQ      = 00000010            
CLI$_SYMOVF    = 00038138            PRC_L_ONERROR    00000058            PRO_M_STRING   = 00000020            
CLI$_UNDFIL    = 00038188            PRC_L_OUTRAB     0000000C            PRO_V_CONCAT   = 00000000            
CLI$_UNDSYM    = 00038140            PRC_L_PROCUIC    00000098            PRO_V_IMPCAT   = 00000001            
CLI$_UNPROPARM = 00038170            PRC_L_SAVAP      00000000            PRO_V_LIST     = 00000002            
CLI$_UNPROQUAL = 00038168            PRC_L_SAVFP      00000004            PRO_V_OPTION   = 00000003            
CLI$_USGOTO    = 00038148            PRC_L_SEVERITY   00000040            PRO_V_REQ      = 00000004            
CLI$_VALCNVERR = 00038832            PRC_L_STACKLM    00000088            PRO_V_STRING   = 00000005            
CLI$_VALREQ    = 00038150            PRC_L_STACKPT    00000084            PTR_K_BLANK    = 00000001            
CMDBUFSIZ      = 000001FC            PRC_L_STATUS     00000044            PTR_K_COLON    = 00000002            
CNVRDX           00000000 R     03   PRC_L_SYMBOL     0000004C            PTR_K_COMDQUAL = 00000000            
CTL$AG_CLIDATA   ********   X   03   PRC_M_CNTRLY   = 00000002            PTR_K_COMMA    = 00000005            
DCL$CNVASCBIN    00000009 RG    03   PRC_M_DBGQUAL  = 00000200            PTR_K_ENDLINE  = 00000004            
DCL$CNVNUMDEC    00000006 RG    03   PRC_M_DBGTRUE  = 00000400            PTR_K_LPAREN   = 00000007            
DCL$EXTNXTDESC   000000CD RG    03   PRC_M_DISABL   = 00000004            PTR_K_PARAMETR = 00000003            
DCL$EXTRSLDESC   000000E0 RG    03   PRC_M_EXIT     = 00000008            PTR_K_PARMQUAL = 00000001            
DCL$FNDCMDQUAL   00000099 RG    03   PRC_M_GOEOF    = 00000001            PTR_K_PLUS     = 00000004            
DCL$GETDCLWRK    00000177 RG    03   PRC_M_GOTO     = 00000010            PTR_K_QUALVALU = 00000002            
DCL$GETEXTDESC   000000DE RG    03   PRC_M_HANGUP   = 00001000            PTR_K_RPAREN   = 00000006            
DCL$GETPARM      000000FD RG    03   PRC_M_IND      = 00000020            PTR_K_SLASH    = 00000003            
DCL$GETPARMQUAL  00000070 RG    03   PRC_M_MODE     = 00000040            PTR_L_DESCR      00000000            
DCL$GETQUALDESC  00000078 RG    03   PRC_M_NOCTLY   = 00004000            PTR_S_FLAGS    = 00000004            
DCL$RPINIT       00000117 RG    03   PRC_M_PAUSE    = 00002000            PTR_S_OFFSET   = 0000000C            
DCL$SETDESCADR   000000F6 RG    03   PRC_M_USRDET   = 00000100            PTR_S_TERM     = 00000004            
GBL...         = 00000000            PRC_M_VERIFY   = 00000080            PTR_S_TYPE     = 00000004            
INPBUFSIZ      = 00000084            PRC_M_YLEVEL   = 00000800            PTR_S_VALUE    = 00000008            
MSGBUFSIZ      = 00000084            PRC_Q_ALLOCREG   00000020            PTR_V_FLAGS    = 00000014            
PLM_B_FSTDESC    00000001            PRC_Q_GLOBAL     00000028            PTR_V_NEGATE   = 00000000            
PLM_B_LSTDESC    00000002            PRC_Q_LABEL      00000030            PTR_V_OFFSET   = 00000008            
PLM_B_NXTDESC    00000000            PRC_Q_LOCAL      00000038            PTR_V_TERM     = 00000018            
PLM_B_TRMDESC    00000003            PRC_V_CNTRLY   = 00000001            PTR_V_TYPE     = 0000001C            
PLM_K_SIZE       00000004            PRC_V_DBGQUAL  = 00000009            PTR_V_VALUE    = 00000000            
PRC_B_DEFRADIX   00000092            PRC_V_DBGTRUE  = 0000000A            QUA_B_DEFVAL     00000002            
PRC_B_EXMDEPMOD  00000091            PRC_V_DISABL   = 00000002            QUA_B_IMAGE      00000005            
PRC_B_EXMDEPWID  00000090            PRC_V_EXIT     = 00000003            QUA_B_INDEX      00000001            
PRC_K_DEC      = 00000001            PRC_V_GOEOF    = 00000000            QUA_B_OFFSET     00000000            
PRC_K_HEX      = 00000000            PRC_V_GOTO     = 00000004            QUA_B_PARMCNT    00000008            
PRC_K_LENGTH     000000A0            PRC_V_HANGUP   = 0000000C            QUA_G_CHNGLST    00000006            
PRC_K_OCT      = 00000002            PRC_V_IND      = 00000005            QUA_M_BATDEF   = 00000100            
PRC_L_CLIWRK0    0000005C            PRC_V_MODE     = 00000006            QUA_M_CHNGLIST = 00000001            
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page  18
SYMBOL TABLE                                                                                                                     (9)

QUA_M_DEFTRUE  = 00000080            WRK_L_QUABLK     FFFFFFE0            
QUA_M_FILE     = 00000004            WRK_L_RSLNXT     FFFFFD34            
QUA_M_IMAGE    = 00000400            WRK_L_SAVAP      FFFFFFC8            
QUA_M_INTDEF   = 00000200            WRK_L_SAVFP      FFFFFFCC            
QUA_M_KEYVAL   = 00004000            WRK_L_SAVSP      FFFFFFC4            
QUA_M_LOCALKEY = 00000002            WRK_M_COMMAND  = 00000002            
QUA_M_NEG      = 00000040            WRK_M_IMCHNG   = 00000004            
QUA_M_ONEVAL   = 00002000            WRK_M_INQUIRE  = 00000100            
QUA_M_OUTPUT   = 00000800            WRK_M_NOSTAT   = 00000200            
QUA_M_PARM     = 00000010            WRK_M_PROMPT   = 00000008            
QUA_M_VAL      = 00000020            WRK_M_QUAL     = 00000010            
QUA_M_VALREQ   = 00001000            WRK_M_QUOTE    = 00000020            
QUA_M_VERB     = 00000008            WRK_M_RUNDWN   = 00000001            
QUA_S_MAXPARM  = 00000004            WRK_M_STAR     = 00000040            
QUA_S_MINPARM  = 00000004            WRK_M_TRAILSPC = 00000400            
QUA_V_BATDEF   = 00000008            WRK_M_VERB     = 00000080            
QUA_V_CHNGLIST = 00000000            WRK_Q_IOSB       FFFFFFD4            
QUA_V_DEFTRUE  = 00000007            WRK_V_COMMAND  = 00000001            
QUA_V_FILE     = 00000002            WRK_V_IMCHNG   = 00000002            
QUA_V_IMAGE    = 0000000A            WRK_V_INQUIRE  = 00000008            
QUA_V_INTDEF   = 00000009            WRK_V_NOSTAT   = 00000009            
QUA_V_KEYVAL   = 0000000E            WRK_V_PROMPT   = 00000003            
QUA_V_LOCALKEY = 00000001            WRK_V_QUAL     = 00000004            
QUA_V_MAXPARM  = 00000004            WRK_V_QUOTE    = 00000005            
QUA_V_MINPARM  = 00000000            WRK_V_RUNDWN   = 00000000            
QUA_V_NEG      = 00000006            WRK_V_STAR     = 00000006            
QUA_V_ONEVAL   = 0000000D            WRK_V_TRAILSPC = 0000000A            
QUA_V_OUTPUT   = 0000000B            WRK_V_VERB     = 00000007            
QUA_V_PARM     = 00000004            WRK_W_FLAGS      FFFFFFFA            
QUA_V_VAL      = 00000005            WRK_W_IMGCHAN    FFFFFFF8            
QUA_V_VALREQ   = 0000000C            
QUA_V_VERB     = 00000003            
QUA_W_FLAGS      00000003            
QUA_W_PROMPT     00000009            
QUA_W_QUALIST    00000006            
RADIX            00000003 R     03   
RPW_AG_BITS      00000020            
RPW_AG_PRMLIM    00000040            
RPW_B_LSTDESC    00000009            
RPW_B_STRPARM    00000008            
RPW_K_HDRSIZ     00000040            
RPW_L_DCLWRK     00000004            
RPW_L_USERCTX    00000000            
RSLBUFSIZ      = 00000180            
WRK_AB_BUFFER    FFFFFD38            
WRK_AG_RESULT    FFFFFBB4            
WRK_B_VERBTYP    FFFFFFC0            
WRK_K_LENGTH     FFFFFBB4            
WRK_L_CHARPTR    FFFFFFFC            
WRK_L_CMDOUT     FFFFFFBC            
WRK_L_IMAGE      FFFFFFEC            
WRK_L_MAXPARM    FFFFFFE4            
WRK_L_MINPARM    FFFFFFE8            
WRK_L_PARMCNT    FFFFFFF0            
WRK_L_PAROUT     FFFFFFF4            
WRK_L_PROMPT     FFFFFFD0            
WRK_L_PROPTR     FFFFFFDC            
RPSUB           - DCL RESULT PARSE SUBROUTINES                   22-AUG-1978 01:23:15   VAX-11 MACRO X0.3-11               Page  19
PROGRAM SECTION SYNOPSIS                                                                                                         (9)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFC      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
DCL$ZCODE        00000183      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
12296. BYTES LEFT IN FREE MEMORY POOL.
2208. BYTES OF RECLAIMED MEMORY.
EXE$:RPSUB,LIS$:RPSUB/-SP=EXECML$/ML,LIB$:DCL/ML,SRC$:RPSUB
29 MLB DIR RDS - 611 GETS TO DEFINE 20 MACROS. 52 INTER. FILE WRITES. 
