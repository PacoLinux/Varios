;+ 
; NDB - NETWORK NODE DESCRIPTOR BLOCK 
;- 
 
	.MACRO	$NDBDEF,$GBL

	$DEFINI	NDB,$GBL

	 
$DEF	NDB$L_NEXT		 			; THREAD TO NEXT NDB 
			.BLKL	1 
$DEF	NDB$L_LINE_NAME		 		; 4-CHARACTER PHYSICAL LINE NAME 
			.BLKL	1 
$DEF	NDB$W_SIZE		 			; SIZE OF THIS CONTROL BLOCK 
			.BLKW	1 
$DEF	NDB$B_TYPE		 			; TYPE OF THIS CONTROL BLOCK 
			.BLKB	1 
$DEF	NDB$B_NUMBUF		 		; NUMBER OF PREALLOCATED BUFFERS 
			.BLKB	1 
$DEF	NDB$Q_AST		 			; DUMMY AST CALL AREA 
			.BLKQ	1 
$DEF	NDB$W_CHANNEL		 		; ASSOCIATED CHANNEL NUMBER 
			.BLKW	1 
$DEF	NDB$B_STATE		 			; NODE STATE (NSP INITIALIZTION) 
			.BLKB	1 
$DEF	NDB$B_STATUS		 		; NODE STATUS (E.G. LOOPBACK) 
			.BLKB	1 
$DEF	NDB$W_NODEADDR		 		; NETWORK NODE ADDRESS 
			.BLKW	1 
$DEF	NDB$T_NAME		 		; NODENAME (COUNTED ASCII STRING) 
			.BLKB	7 
$DEF	NDB$B_FUNC		 			; SUPPORTED FUNCTIONS 
			.BLKB	1 
$DEF	NDB$W_BLKSIZE		 		; MAX NSP MSG BLOCK SIZE 
			.BLKW	1 
$DEF	NDB$W_NSPSIZE		 		; MAX NSP MSG SIZE 
			.BLKW	1 
$DEF	NDB$W_MAXLNK		 		; MAX NO. OF INBOUND LINKS 
			.BLKW	1 
$DEF	NDB$B_RTEVER		 		; NSP ROUTING VERSION   ****Z*** 
			.BLKB	3 
$DEF	NDB$B_COMMVER		 		; COMM PROTOCOL VERSION   ****Z**** 
			.BLKB	3 
$DEF	NDB$T_SYSVER		 		; SYSTEM VERSION DESC (COUNTED ASCII) 
			.BLKB	33 
$DEF	NDB$B_CONNTMO		 		; CONNECT TIMEOUT IN SECONDS 0=INFINITY 
			.BLKB	1 
$DEF	NDB$B_NONPRVACC		 		; FLAG NONPRV DEFAULT ACCESS INFO 
			.BLKB	1 
				 		; NONPRV ACCESS INFO 
			.BLKB	43 
$DEF	NDB$B_PRVACC		 		; FLAG PRV DEFAULT ACCESS INFO 
			.BLKB	1 
				 		; PRV ACCESS INFO 
			.BLKB	43 
$DEF	NDB$W_BUFSIZE		 		; SIZE OF PREALLOCATED BUFFERS 
			.BLKW	1 
$DEF	NDB$W_CHAR		 			; PHYSICAL LINE CHARACTERISTICS 
			.BLKW	1 
$DEF	NDB$Q_ZEROTIME		 		; TIME WHEN COUNTS WERE ZEROED 
			.BLKQ	1 
$DEF	NDB$W_RCVBLKS		 		; NO. OF BLOCKS RCVD (2^15-1 MAX) 
			.BLKW	1 
$DEF	NDB$W_XMTBLKS		 		; NO. OF BLOCKS XMTD (2^15-1 MAX) 
			.BLKW	1 
$DEF	NDB$W_HISBLKSIZ		 		; PARTNER'S BLK SIZE 
			.BLKW	1 
$DEF	NDB$W_HISNSPSIZ		 		; PARTNER'S NSP SIZE 
			.BLKW	1 
$DEF	NDB$C_LENGTH
$DEF	NDB$K_LENGTH		 
$EQU	NDB$C_ON	0				; ON STATE 
$EQU	NDB$C_OFF	1				; OFF STATE 
$EQU	NDB$C_SHUT	2				; SHUT STATE 
$EQU	NDB$C_LOOP	3				; LOOP STATE 
$EQU	NDB$C_MAINT	4				; MAINT STATE 
$EQU	NDB$C_CTL_LOOP	5			; CONTROLLER LOOP STATE 
	$VIELD	NDB,0,<- 				; NDB LOOPBACK BIT FOR NDB$B_STATUS 
		<LOOPBACK,,M>- 		; LINE FOR NODE IS IN LOOPBACK 
		<OFF,,M>- 			; LINE (OR NODE) OFF 
		<SHUT,,M>- 		; NODE IS SHUT 
		<CTL_LOOP,,M>- 		; CONTROLLER LOOPBACK 
		>	
$EQULST NDB$C_,$GBL,1,1,<- 		; MESSAGE CODES FOR OPCOM 
		<MSG_START>- 		; LINE STARTING 
		<MSG_MAINT>- 		; LINE ENTERED MAINTENANCE MODE 
		<MSG_DOWN>- 		; LINE DOWN DUE TO ERROR 
		<MSG_NGINI>- 		; UNSUCCESSFUL NODE INIT 
		<MSG_OKINI>- 		; SUCCESSFUL NODE INIT 
		<MSG_SHUT>- 		; LINE SHUTTING DOWN 
		<MSG_DSRCH>- 		; DSR ON-TO-OFF TRANSITION 
		<MSG_LOOPB>- 		; LINE ILLEGALLY SWITCHED TO LOOPBACK 
		<MSG_DCHK>- 		; ERROR THRESHOLD EXCEEDED 
		>

	$DEFEND	NDB,$GBL,DEF

	.ENDM	$NDBDEF
 
 
;+ 
; NFB DEFINITIONS - CODES FOR USE IN NFB (FIB) IN NET ACPCONTROL I/O FUNCTIONS 
;- 
 
	.MACRO	$NFBDEF,$GBL

	$DEFINI	NFB,$GBL

$EQULST NFB$C_,$GBL,1,1,<- 		; FUNCTIONS CODES FOR NFB 
		<SETLINSTA>- 		; SET LINE STATE 
		<GETLINSTA>- 		; GET LINE STATE 
		<GETLINCTR>- 		; GET LINE COUNTERS 
		<CLRLINCTR>- 		; CLEAR LINE COUNTERS 
		<UPDOBJECT>- 		; UPDATE OBJECT RECORD 
		<UPDREMOTE>- 		; UPDATE REMOTE RECORD 
		<GETLOCNAM>- 		; GET LOCAL NODE NAME 
		<GETLNBYND>- 		; GET LINE BY NODE 
		<GETLOGLNK>- 		; GET LOGICAL LINKS 
		<SETLOCSTA>- 		; SET LOCAL STATE 
		>
$EQULST NFB$C_,$GBL,,1,<-
		<GETLOCSTA>- 		; GET LOCAL STATE 
		<GETLOCCTR>- 		; GET LOCAL COUNTERS 
		<CLRLOCCTR>- 		; CLEAR LOCAL COUNTERS 
		<GETNODNAM>- 		; GET NODE NAMES 
		<GETLINNAM>- 		; GET LINE NAMES 
		<DISCLINK>- 		; DISCONNECT LINK 
		<GETNAMNUM>- 		; GET NODE NAME BY NODE NUMBER 
		<GETNUMNAM>- 		; GET NODE NUMBER BY NODE NAME 
		<GETVER>- 			; GET VERSIONS 
		<GETNDBYLN>- 		; GET NODE BY LINE 
		<DECLNAME>- 		; DECLARE NAME 
		>

	$DEFEND	NFB,$GBL,DEF

	.ENDM	$NFBDEF
 
 
;+ 
; SSB - NETWORK LOGICAL LINK SUBCHANNEL STATUS BLOCK 
;_ 
 
	.MACRO	$SSBDEF,$GBL

	$DEFINI	SSB,$GBL

$DEF	SSB$L_XQFL		 			; TRANSMIT QUEUE FORWARD LINK 
			.BLKL	1 
$DEF	SSB$L_XQBL		 			; TRANSMIT QUEUE BACKWARD LINK 
			.BLKL	1 
$DEF	SSB$W_SIZE		 			; BLOCK SIZE 
			.BLKW	1 
$DEF	SSB$B_TYPE		 			; TYPE 
			.BLKB	1 
				 			; FILLER 
			.BLKB	1 
$DEF	SSB$L_WACKQFL		 		; WAITING FOR ACK QUEUE FWD LINK 
			.BLKL	1 
$DEF	SSB$L_WACKQBL		 		; WAITING FOR ACK QUEUE BWD LINK 
			.BLKL	1 
$DEF	SSB$L_UCB		 			; BACK POINTER TO UCB 
			.BLKL	1 
$DEF	SSB$W_RCVSEGNUM		 		; SEGNUM EXPECTED FROM PARTNER (1) 
			.BLKW	1 
$DEF	SSB$W_RCVSEGACK		 		; LAST SEGNUM I ACKED (0) 
			.BLKW	1 
$DEF	SSB$W_XMTSEGNUM		 		; LAST SEGNUM I SENT (0) 
	$VIELD	SSB,0,<- 				; BITS FOR ACK/NAK FIELD IN SEGNUM 
		<,12,M>- 			; DUMMY 
		<NAKP,3,M>- 			; NAK PENDING 
		<ACKP,,M>- 			; ACK PENDING 
		>	
			.BLKW	1 
$DEF	SSB$W_XMTSEGACK		 		; LAST SEGNUM PARTNER ACKED (0) 
			.BLKW	1 
$DEF	SSB$B_TIPC		 			; TRANSMITS IN PROGRESS COUNTER 
			.BLKB	1 
$DEF	SSB$B_FCVAL		 			; FCVAL TO GO IN NEXT LS MSG 
			.BLKB	1 
$DEF	SSB$B_REQCNT		 		; PARTNER'S DATA REQUEST COUNT 
			.BLKB	1 
$DEF	SSB$B_PNDCNT		 		; MY DATA REQUEST COUNT (PENDING) 
			.BLKB	1 
$DEF	SSB$C_LENGTH
$DEF	SSB$K_LENGTH					; LENGTH OF SSB 

	$DEFEND	SSB,$GBL,DEF

	.ENDM	$SSBDEF
; 
; DISCONNECT REASONS 
; 
	.MACRO	$DRDEF,$GBL

	$DEFINI	DR,$GBL

$EQULST NET$C_,$GBL,0,1,<-  
		<DR_NORMAL,0>- 		; NO ERROR (SYNCH DISCONNECT) 
		<DR_RSU,1>- 		; COULDN'T ALLOCATE UCB ADDRESS 
		<DR_SHUT,3>- 		; NODE OR LINE SHUTTING DOWN 
		<DR_NOBJ,4>- 		; UNKNOWN OBJECT TYPE OR PROCESS 
		<DR_FMT,5>- 		; ILLEGAL PROCESS NAME FIELD 
		<DR_PROTCL,7>- 		; GENERAL PROTOCOL ERROR 
		<DR_THIRD,8>- 		; THIRD PARTY DISCONNECT 
		<DR_ABORT,9>- 		; DISCONNECT ABORT 
		<DR_NONZ,21>- 		; NON-ZERO DST ADDRESS 
		<DR_BADLNK,22>- 		; INCONSISTENT DSTLNK 
		>
$EQULST NET$C_,$GBL,,1,<-
		<DR_ZERO,23>- 		; ZERO SOURCE ADDRESS 
		<DR_BADFC,24>- 		; FCVAL ILLEGAL 
		<DR_NOCON,32>- 		; NO CONNECT SLOTS AVAILABLE 
		<DR_ACCESS,34>- 		; INVALID ACCESS CONTROL 
		<DR_BADSRV,35>- 		; LOGICAL LINK SERVICES MISMATCH 
		<DR_ACCNT,36>- 		; INVALID ACCOUNT INFORMATION 
		<DR_SEGSIZ,37>- 		; SEGSIZE TOO SMALL 
		<DR_EXIT,38>- 		; USER EXIT OR TIMEOUT 
		<DR_NOPATH,39>- 		; NO PATH TO DESTINATION NODE 
		<DR_LOSS,40>- 		; LOSS OF DATA HAS OCCURRED 
		<DR_NOLINK,41>- 		; ILLEGAL MSG FOR LINK NOLINK STATE 
		>
$EQULST NET$C_,$GBL,,1,<-
		<DR_CONF,42>- 		; REAL DISCONNECT CONFIRM 
		<DR_IMLONG,43>- 		; IMAGE DATA FIELD TOO LONG 
		>

	$DEFEND	DR,$GBL,DEF

	.ENDM	$DRDEF
	.MACRO	$NETDEF,$GBL

	$DEFINI	NET,$GBL

$EQULST NET$C_,$GBL,0,1,<-  
		<MSGFLG,0>- 		; MSGFLG INDICATOR BITS 
		<NSPOVH,11>- 		; NSP MSG OVERHEAD 
		<MAXNSPOVH,24>- 		; MAX (WITH RTHDRS) NSP OVERHEAD 
		<DATAM,0>- 			; DATA MESSAGE TYPE 
		<ACKM,1>- 			; ACK MESSAGE TYPE 
		<CTRLM,2>- 			; CONTROL MESSAGE TYPE 
		>
	$VIELD	NET,0,<- 				; BITS FOR ACK/NAK FIELD IN SEGNUM 
		<MSGID,2,>- 			; BITS TO DISTINGUISH RTHDR, COUNT, AND MSGFLG 
		<MSGFLG,5,>- 		; MSGFLG FIELD 
		>	
	$VIELD	NET,0,<-  
		<,2,>- 			; DUMMY 
		<MSGTYP,2,>- 		; MSGTYP BITS 
		<SUBTYP,3,>- 		; SUBTYP BITS 
		>	
	$VIELD	NET,0,<-  
		<,4,M>- 			; DUMMY 
		<INTLS,1,M>- 			; INTERRUPT/LINKSERVICE SUBCHANNEL 
		<BOM,1,M>- 			; BEGINNING-OF-MSG 
		<EOM,1,M>- 			; END-OF-MSG 
		>	
	$VIELD	NET,0,<-  
		<,5,M>- 			; DUMMY 
		<INTMSG,1,M>- 		; INTERRUPT MESSAGE 
		>	

	$DEFEND	NET,$GBL,DEF

	.ENDM	$NETDEF
