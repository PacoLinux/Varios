 
 
 
; 
; ACCOUNTING AND TERMINATION MESSAGE FORMAT 
; THIS IS THE STRUCTURE OF THE MESSAGE SENT TO THE TERMINATION MAILBOX 
; AND TO THE JOB CONTROLLER. 
; 
	.MACRO	$ACCDEF,$GBL

	$DEFINI	ACC,$GBL

 
$DEF	ACC$W_MSGTYP		 		; MESSAGE TYPE CODE 
			.BLKW	1 
$DEF	ACC$W_MSGSIZ		 		; LENGTH OF DATA MESSAGE (VALID ONLY IN ACCLOG) 
			.BLKW	1 
$DEF	ACC$L_FINALSTS		 		; FINAL EXIT STATUS 
			.BLKL	1 
$DEF	ACC$L_PID		 			; PROCESS ID 
			.BLKL	1 
$DEF	ACC$L_JOBID		 		; JOB IDENTIFICATION (VALID ONLY IN ACCLOG) 
			.BLKL	1 
$DEF	ACC$Q_TERMTIME		 		; TERMINATION TIME (100NS UNITS) 
			.BLKQ	1 
$DEF	ACC$T_ACCOUNT		 		; ACCOUNT NAME STRING (BLANK FILLED) 
			.BLKB	8 
$DEF	ACC$T_USERNAME		 		; USER NAME STRING (BLANK FILLED) 
					; END OF FIXED AREA 
			.BLKB	12 
$DEF	ACC$L_CPUTIM		 		; CPUTIM IN 10MS UNITS 
					; MARK START PRINT JOB VARIATION 
			.BLKL	1 
$DEF	ACC$L_PAGEFLTS		 		; TOTAL PAGE FAULTS 
			.BLKL	1 
$DEF	ACC$L_PGFLPEAK		 		; PEAK PAGING FILE USAGE 
			.BLKL	1 
$DEF	ACC$L_WSPEAK		 		; PEAK WORKING SET SIZE 
			.BLKL	1 
$DEF	ACC$L_BIOCNT		 		; COUNT OF BUFFERED I/O OPERATIONS 
			.BLKL	1 
$DEF	ACC$L_DIOCNT		 		; COUNT OF DIRECT I/O OPERATIONS 
			.BLKL	1 
$DEF	ACC$L_VOLUMES		 		; COUNT OF VOLUMES MOUNTED 
			.BLKL	1 
$DEF	ACC$Q_LOGIN		 		; LOGIN TIME (100NS UNITS) 
			.BLKQ	1 
$DEF	ACC$L_OWNER		 		; PID OF SUBPROCESS OWNER 
			.BLKL	1 
$DEF	ACC$C_TERMLEN
$DEF	ACC$K_TERMLEN				; TERMINATION MESSAGE LENGTH 
				; AND ACCOUNTING RECORD FOR NON BATCH JOBS 
				; END OF TERMINATION MESSAGE 
$DEF	ACC$T_JOB_NAME		 		; JOB NAME (BLANK FILLED) 
			.BLKB	8 
$DEF	ACC$T_JOB_QUE		 		; QUEUE NAME (.ASCIC) 
			.BLKB	16 
$DEF	ACC$C_JOB_LEN
$DEF	ACC$K_JOB_LEN				; LENGTH OF BATCH JOB ACCOUNTING RECORD 
 
	. = 44 		; POINT AT PRINT JOB VARIABLE AREA 
			.BLKB	4 
$DEF	ACC$L_PAGCNT		 		; SYMBIONT PAGE COUNT 
			.BLKL	1 
$DEF	ACC$L_QIOCNT		 		; SYMBIONT QIO COUNT 
			.BLKL	1 
$DEF	ACC$L_GETCNT		 		; SYMBIONT GET COUNT 
			.BLKL	1 
$DEF	ACC$Q_QUETIME		 		; TIME JOB WAS QUEUED 
			.BLKQ	1 
$DEF	ACC$T_PRT_NAME		 		; NAME OF PRINT JOB 
			.BLKB	8 
$DEF	ACC$T_PRT_QUE		 		; NAME OF PRINT QUEUE 
			.BLKB	12 
$DEF	ACC$C_PRT_LEN
$DEF	ACC$K_PRT_LEN				; LENGTH OF PRINT ACCOUNTING RECORD 
 
; 
; DEFINE USER ACCOUNTING MESSAGE DATA AREA 
; 
	. = 32 		; POINT AT START OF MESSAGE DEPENDENT AREA 
			.BLKB	12 
$DEF	ACC$T_USER_DATA		 	; ALLOW UP TO 132 BYTES OF USER DATA 
			.BLKB	132 
$DEF	ACC$C_INS_LEN
$DEF	ACC$K_INS_LEN				; LENGTH OF INSERT MESSAGE 
; 
; ASSIGN RECORD TYPE CODES FOR RECORDS IN THE ACCOUNT LOG FILE 
; 
 
$EQULST ACC$K_,$GBL,1,1,<- 		; PROCESS ACCOUNTING RECORDS 
		<PRCTRM>- 			; JOB TERMINATION 
		<BATTRM>- 			; BATCH JOB TERMINATION 
		<INTTRM>- 			; INTERACTIVE JOB TERMINATION 
		<LOGTRM>- 			; LOGIN FAILURE PROCESS TERMINATION 
		>
 
$EQULST ACC$K_,$GBL,16,1,<- 		; MISC ACCOUNTING RECORDS 
		<PRTJOB>- 			; PRINT JOB ACCOUNTING 
		<INSMSG>- 			; INSERTED MESSAGE 
		>
 
; 
; DEFINE ACCOUNTING MANAGER MESSAGE CODES 
; 
 
 
$EQULST ACC$K_,$GBL,1,1,<- 		; 
		<INSMESG>- 			; INSERT MESSAGE INTO ACCOUNTING FILE 
		<NEWFILE>- 			; CREATE A NEW ACCOUNT FILE 
		<ENABACC>- 			; ENABLE ACCOUNTING 
		<DISAACC>- 			; DISABLE ACCOUNTING 
		<ENABSEL>- 			; ENABLE SELECTIVE ACCOUNTING 
		<DISASEL>- 			; DISABLE SELECTIVE ACCOUNTING 
		>
 

	$DEFEND	ACC,$GBL,DEF

	.ENDM	$ACCDEF
 
; ATTRIBUTE LIST DESCRIPTION. THE ATTRIBUTE CONTROL LIST IS USED TO READ AND 
; WRITE FILE ATTRIBUTES. IT CONSISTS OF CONCATENATED ATTRIBUTE CONTROL BLOCKS 
; TERMINATED BY A SINGLE ZERO LONGWORD. 
; 
 
	.MACRO	$ATRDEF,$GBL

	$DEFINI	ATR,$GBL

 
$DEF	ATR$W_SIZE		 			; SIZE OF ATTRIBUTE IN BYTES 
			.BLKW	1 
$DEF	ATR$W_TYPE		 			; ATTRIBUTE TYPE CODE 
			.BLKW	1 
$DEF	ATR$L_ADDR		 				; ADDRESS OF ATTRIBUTE TEXT 
 
$EQULST ATR$C_,$GBL,3,1,<- 				; ATTRIBUTE CODES 
		<UCHAR>- 				; 2 BYTE USER FILE CHARACTERISTICS 
		<RECATTR>- 				; 32 BYTES RECORD ATTRIBUTES 
		<FILNAM>- 				; 6 BYTE RAD-50 FILE NAME 
		<FILTYP>- 				; 2 BYTE RAD-50 FILE TYPE 
		<FILVER>- 				; 2 BYTE BINARY FILE VERSION 
		<EXPDAT>- 				; 7 BYTE ASCII EXPIRATION DATE 
		<STATBLK>- 				; 10 BYTE STATISTICS BLOCK 
		<HEADER>- 				; 512 BYTE FILE HEADER 
		<BLOCKSIZE>- 			; MAGTAPE BLOCK SIZE 
		<USERLABEL>- 			; USER FILE LABEL 
		>
$EQULST ATR$C_,$GBL,,1,<-
		<ASCDATES>- 			; REVISION COUNT THRU EXP DATE IN ASCII 
		<ALCONTROL>- 			; COMPATIBILITY MODE ALLOCATION DATA 
		<ENDLBLAST>- 			; END OF MAGTAPE LABEL PROCESSING AND SUPPLY AST CONTROL BLOCK 
		<ASCNAME>- 				; FILE NAME, TYPE & VERSION IN ASCII 
		<CREDATE>- 				; 64 BIT CREATION DATE 
		<REVDATE>- 				; 64 BIT REVISION DATE 
		<EXPDATE>- 				; 64 BIT EXPIRATION DATE 
		<BAKDATE>- 				; 64 BIT BACKUP DATE 
		<UIC>- 				; 4 BYTE FILE OWNER UIC 
		<FPRO>- 				; 2 BYTE FILE PROTECTION 
		<RPRO>- 				; 2 BYTE RECORD PROTECTION 
		>
$EQULST ATR$C_,$GBL,,1,<-
		<ACLEVEL>- 				; 2 BYTE FILE ACCESS LEVEL 
		<SEMASK>- 				; FILE SECURITY MASK AND LIMIT 
		<UIC_RO>- 				; READ ONLY UIC 
		<DIRSEQ>- 				; DIRECTORY UPDATE SEQUENCE COUNT 
		>
 
$EQULST ATR$S_,$GBL,0,1,<- 				; ATTRIBUTE MAXIMUM LENGTHS 
		<UCHAR,1>- 				; 1 BYTE USER FILE CHARACTERISTICS 
		<RECATTR,32>- 			; 32 BYTES RECORD ATTRIBUTES 
		<FILNAM,6>- 			; 6 BYTE RAD-50 FILE NAME 
		<FILTYP,2>- 			; 2 BYTE RAD-50 FILE TYPE 
		<FILVER,2>- 			; 2 BYTE BINARY FILE VERSION 
		<EXPDAT,7>- 			; 7 BYTE ASCII EXPIRATION DATE 
		<STATBLK,10>- 			; 10 BYTE STATISTICS BLOCK 
		<HEADER,512>- 			; 512 BYTE FILE HEADER 
		<BLOCKSIZE,2>- 			; MAGTAPE BLOCK SIZE 
		<USERLABEL,80>- 			; USER FILE LABEL 
		>
$EQULST ATR$S_,$GBL,,1,<-
		<ASCDATES,35>- 			; REVISION COUNT THRU EXP DATE IN ASCII 
		<ALCONTROL,14>- 			; COMPATIBILITY MODE ALLOCATION DATA 
		<ENDLBLAST,4>- 			; END OF MAGTAPE LABEL PROCESSING AND SUPPLY AST CONTROL BLOCK 
		<ASCNAME,20>- 			; FILE NAME, TYPE & VERSION IN ASCII 
		<CREDATE,8>- 			; 64 BIT CREATION DATE 
		<REVDATE,8>- 			; 64 BIT REVISION DATE 
		<EXPDATE,8>- 			; 64 BIT EXPIRATION DATE 
		<BAKDATE,8>- 			; 64 BIT BACKUP DATE 
		<UIC,4>- 				; 4 BYTE FILE OWNER UIC 
		<FPRO,2>- 				; 2 BYTE FILE PROTECTION 
		<RPRO,2>- 				; 2 BYTE RECORD PROTECTION 
		>
$EQULST ATR$S_,$GBL,,1,<-
		<ACLEVEL,2>- 			; 2 BYTE FILE ACCESS LEVEL 
		<SEMASK,8>- 			; FILE SECURITY MASK AND LIMIT 
		<UIC_RO,4>- 			; READ ONLY UIC 
		<DIRSEQ,2>- 			; DIRECTORY UPDATE SEQUENCE COUNT 
		>
 
			.BLKL	1 

	$DEFEND	ATR,$GBL,DEF

	.ENDM	$ATRDEF
 
; 
; CONDITION HANDLING ARGUMENT LIST OFFSETS 
; THERE ARE THREE CONDITIONAL HANDLING STRUCTURES: THE PRIMARY ARGUMENT 
; LIST, AND THE SIGNAL AND MECHANISM ARRAYS. ALL ARE IDENTIFIED BY THE SAME 
; BLOCK PREFIX. 
; 
 
	.MACRO	$CHFDEF,$GBL

	$DEFINI	CHF,$GBL

 
							;PRIMARY ARGUMENT LIST 
				 				;PRIMARY ARGUMENT COUNT 
			.BLKL	1 
$DEF	CHF$L_SIGARGLST		 			;ADDRESS OF SIGNAL ARGUMENTS 
			.BLKL	1 
$DEF	CHF$L_MCHARGLST		 			;ADDRESS OF MECHANISM ARGUMENTS 
 
			.BLKL	1 
	. = 0 				;SIGNAL ARRAY 
$DEF	CHF$L_SIG_ARGS		 			;NUMBER OF SIGNAL ARGUMENTS 
			.BLKL	1 
$DEF	CHF$L_SIG_NAME		 			;SIGNAL NAME 
			.BLKL	1 
$DEF	CHF$L_SIG_ARG1		 			;FIRST SIGNAL SPECIFIC ARGUMENT 
 
			.BLKL	1 
	. = 0 				;MECHANISM ARRAY 
$DEF	CHF$L_MCH_ARGS		 			;NUMBER OF MECHANISM ARGUMENTS 
			.BLKL	1 
$DEF	CHF$L_MCH_FRAME		 			;ESTABLISHER FRAME ADDRESS 
			.BLKL	1 
$DEF	CHF$L_MCH_DEPTH		 			;FRAME DEPTH OF ESTABLISHER 
			.BLKL	1 
$DEF	CHF$L_MCH_SAVR0		 			;SAVED REGISTER R0 
			.BLKL	1 
$DEF	CHF$L_MCH_SAVR1		 			;SAVED REGISTER R1 
 
			.BLKL	1 

	$DEFEND	CHF,$GBL,DEF

	.ENDM	$CHFDEF
 
;++ 
; 
; $CLIDEF --- COMMAND LAGUAGE INTERFACE DEFINITIONS 
; 
; THIS MODULE DEFINES THE OFFSET VALUES FOR THE DATA STRUCTURES 
; USED TO COMMUNICATED COMMAND INFORMATION BETWEEN THE CLI AND 
; THE UTILITY THAT WAS REQUESTED TO PERFORM THE OPERATION. 
; 
;-- 
	.MACRO	$CLIDEF,$GBL

	$DEFINI	CLI,$GBL

 
			 
$DEF	CLI$L_INIARGCNT		 		; INITIAL ARG COUNT 
			.BLKL	1 
$DEF	CLI$A_PROGXFER		 		; PROGRAM TRANSFER VECTOR ADDRESS 
			.BLKL	1 
$DEF	CLI$A_UTILSERV		 		; ADDRESS OF CLI UTILITY SERVICE 
			.BLKL	1 
$DEF	CLI$A_IMGHDADR		 		; ADDRESS OF IMAGE HEADER 
			.BLKL	1 
$DEF	CLI$A_IMGFILED		 		; ADDRESS OF IMAGE FILE DATA 
			.BLKL	1 
$DEF	CLI$L_LINKFLAG		 		; LINK FLAG LONGWORD 
			.BLKL	1 
$DEF	CLI$L_CLIFLAG		 			; CLI FLAG LONGWORD 
	$VIELD	CLI,0,<- 				; DEFINE CLI FLAGS 
		<DEBUG,,M>- 			; DEBUG QUALIFIER SEEN 
		<DBGTRU,,M>- 			; DEBUG WAS TRUE 
		<VERIFY,,M>- 			; VERIFY IS ON 
		<BATCH,,M>- 			; THIS PROCESS IS A BATCH JOB 
		<INDIRECT,,M>- 		; INDIRECT LEVEL NOT EQUAL TO ZERO 
		<VFYINP,,M>- 			; UTILITY SHOULD VERFIY INPUT 
		<,2,M>- 			; ROUND UP TO NEXT BYTE 
		<TRMVRBLV,2,M>- 		; TERMINAL VERBOSITY LEVEL 
		<,6,M>- 			; ROUND UP TO NEXT BYTE 
		<DBGEXCP,,M>- 			; DEBUGGER CALLED VIA "DEBUG" EXCEPTION 
		>	
 
			.BLKL	1 
	. = 0  
 
				 			; DUMMY ARG 
$DEF	CLI$B_RQTYPE		 		; TYPE OF REQUEST BEING MADE 
	$VIELD	CLI,0,<- 				; VIELD DEFINITIONS 
		<SUBTYP,4,>- 		; SUB TYPE VIELD 
		<PRITYP,4,>- 		; PRIMARY TYPYE 
		>	
			.BLKB	1 
$DEF	CLI$W_SERVCOD		 		; CLI SERVICE CODE 
$DEF	CLI$B_RQINDX		 		; OFFSET FOR VALUE KEYWORD INDEX 
$DEF	CLI$B_BITNUM		 		; BIT TO SET IF REQUEST IS SUCESSFUL 
			.BLKB	1 
$DEF	CLI$B_RQFLGS		 		; INPUT FLAGS CONCERNING REQUEST 
	$VIELD	CLI,0,<- 				; FLAGS FOR PARAMETER PARSING 
		<PARMREQ,,M>- 			; PARAMATER IS REQUIRED 
		<ABSADR,,M>- 			; ALL ADDRESS ARE ABSOLUTE 
		<EXPNAM,,M>- 			; RETURN EXPLICIT NAMES ONLY 
		>	
 
	$VIELD	CLI,0,<- 				; FLAGS FOR VALUE PARSING 
		<LASTVAL,,M>- 			; LAST VALUE ALLOWED 
		<DUMMY,,M>- 			; *** SAVE PLACE FOR ABS ADR *** 
		>	
 
			.BLKB	1 
$DEF	CLI$B_RQSTAT		 		; OUTPUT STATUS FLAGS 
 
	$VIELD	CLI,0,<- 				; STATUS FLAGS FOR PARAMETER PARSING 
		<PARMPRS,,M>- 			; PARAMETER IS PRESENT 
		<CONCATINP,,M>- 		; INPUT CONCATONATION EXISTS 
		<MOREINP,,M>- 			; ANOTHER SET OF INPUT PARAMETERS 
		<PARMDEF,,M>- 			; PARAMETER WAS DEFAULTED PRESENT 
		>	
	$VIELD	CLI,0,<- 				; FLAGS FROM VALUE PARSING 
		<MOREVALS,,M>- 		; UNPROCESSED VALUES REMAIN 
		<KEYVALU,,M>- 			; SUBSEQUENT TOKEN IS VALUE FOR KEY 
		>	
 
			.BLKB	1 
$DEF	CLI$A_ERRACT		 		; ADDRESS OF ERROR ACTION ROUTINE 
			.BLKL	1 
$DEF	CLI$Q_RQDESC		 		; QUADWORD REQUEST DESCRIPTOR 
$DEF	CLI$W_RQSIZE		 		; RESULTANT SIZE OF PARAMETER 
			.BLKW	1 
			.BLKW	1 
$DEF	CLI$L_RQVALU		 		; ACTUAL VALUE IN VALUE CONVERSTION 
$DEF	CLI$A_RQADDR		 		; ADDRESS OF RESULTANT PARAMETER 
			.BLKL	1 
$DEF	CLI$A_PRSACT		 		; PARAMETER PRESENT ACTION ROUTINE 
			.BLKL	1 
$DEF	CLI$A_ABSACT		 		; PARAMETER ABSENT ACTION ROUTINE 
			.BLKL	1 
$DEF	CLI$A_QUALST		 		; ADDRESS OF QUALIFIERS 
 
			.BLKL	1 
$DEF	CLI$C_REQDESC
$DEF	CLI$K_REQDESC					; SIZE OF THE STRUCTURE 
 
; 
; DEFINE THE PARAMETER QUALIFIER DESCRIPTOR 
; 
 
	. = 0  
 
$DEF	CLI$B_QDBLKSIZ		 		; SIZE OF THE FINAL BLOCK 
			.BLKB	1 
$DEF	CLI$B_QDCODE		 		; ID CODE FOR THE QUALIFIER 
			.BLKB	1 
$DEF	CLI$B_QDFLGS		 		; FLAGS BYTE 
	$VIELD	CLI,0,<- 				; 
		<ALLOCCUR,,M>- 		; TAKE ACTION ON ALL OCCURANCES 
		<QDUSRV,,M>- 			; USER CONTEX VALUE IS PRESENT 
		<QDEXPA,,M>- 			; TAKE ACTION ON EXPLICIT OCCURANCES 
		>	
			.BLKB	1 
$DEF	CLI$B_QDSTAT		 		; QUALIFIER STATUS 
	$VIELD	CLI,0,<- 				; DEFINE QUALIFIER STATUS BITS 
		<QUALTRU,,M>- 			; QUALIFIER IS TRUE 
		<QUALEXP,,M>- 			; QUALIFIER EXPLICITLY STATED 
		>	
 
			.BLKB	1 
$DEF	CLI$Q_QDVALDESC		 		; QUALIFIER VALUE DESCRIPTOR 
$DEF	CLI$W_QDVALSIZ		 		; SIZE OF VALUE 
			.BLKW	1 
			.BLKW	1 
$DEF	CLI$A_QDVALADR		 		; ADDRESS OF VALUE STRING 
			.BLKL	1 
$DEF	CLI$A_TRUACT		 		; QUALIFIER TRUE ACTION ROUTINE 
			.BLKL	1 
$DEF	CLI$A_FLSACT		 		; QUALIFIER FALSE ACTION ROUTINE 
			.BLKL	1 
$DEF	CLI$C_QUALDEF
$DEF	CLI$K_QUALDEF					; SIZE OF FIXED PART OF STRUCTURE 
$DEF	CLI$C_QDBITS
$DEF	CLI$K_QDBITS					; START OF BIT LISTS(VARIALBLE LENGTH) 
$DEF	CLI$L_USRVAL		 			; OPTION USER VALUE IF PRESENT 
 
; 
; DEFINE SPACE FOR THE RESULT PARSE WORK AREA 
; 
 
			.BLKL	1 
	. = 0  
 
$DEF	CLI$L_WORKAREA		 		; ALLOCATE 32 LONG WORDS 
			.BLKL	32 
$DEF	CLI$C_WORKAREA
$DEF	CLI$K_WORKAREA				; SIZE OF HEADER 
 
 
; 
; DEFINE CLI UTILITY REQUEST CODES 
; 
;	CODES ARE 8 BITS, CONSISTING OF 2 4 BIT FIELDS 
;	THE LEAST 4 BITS ARE SUBFUCTION DEFINITONS 
;	AND THE MOST SIGNIFICANT 4 BITS ARE REQUEST TYPE 
; 
$EQULST CLI$K_,$GBL,0,1,<- 		; DEFINE REQUEST TYPE CODES 
		<UTILOPR>- 			; UTILITY OPERATIONS 
		<INPSPEC>- 			; REQUEST FOR AN INPUT SPECIFICATION 
		<OUTSPEC>- 			; AN OUTPUT FILE SPECIFICATION 
		<PARDONE>- 			; PARAMETER DONE REQUEST 
		<VALCONV>- 			; REQUEST A VALUE CONVERSION 
		<CLISERV>- 			; REQUSET A SERVICE FORM THE CLI 
		>
; 
; DEFINE COMPLETE CODES FOR UTILITY OPERATIONS 
; 
$EQULST CLI$K_,$GBL,<CLI$K_UTILOPR@4>,1,<-  
		<INITPRS>- 			; REQUEST INITIALIZATION OF PARSE 
		<GETCMD>- 			; GET COMMAND BUFFER LIMITS 
		<GETQUAL>- 			; OPTAIN STATE OF QUALIFIERS 
		<GETOPT>- 			; DECODE COMMAND OPTION 
		>
 
; 
; DEFINE COMPLETE CODES FOR INPUT SPECIFICATIONS 
; 
$EQULST CLI$K_,$GBL,<CLI$K_INPSPEC@4>,1,<-  
		<INPUT1>- 			; PRIMARY INPUT 
		<INPUT2>- 			; SECONDARY INPUT 
		<INPUT3>- 			; THIRD, 
		<INPUT4>- 			; ETC,ETC,ETC 
		>
; 
; DEFINE COMPLETE CODES FOR OUTPUT SPECIFICATIONS 
; 
$EQULST CLI$K_,$GBL,<CLI$K_OUTSPEC@4>,1,<-  
		<OUTPUT1>- 			; FIRST OUTPUT 
		<OUTPUT2>- 			; SECOND OUTPUT 
		<OUTPUT3>- 			; THIRD,- 
		<OUTPUT4>- 			; ETC,ETC,ETC 
		>
; 
; DEFINE CODES FOR RESULT PARSE PARAMETER COMPLETION 
; 
$EQULST CLI$K_,$GBL,<CLI$K_PARDONE@4>,1,<-  
		<ENDPRM1>- 			; COMPLETED PARAMETER SET 1 
		<ENDPRM2>- 			; COMPLETED PARAMETER SET 2 
		<ENDPRM3>- 			; COMPLETED PARAMETER SET 3 
		<ENDPRM4>- 			; COMPLETED PARAMETER SET 4 
		>
; 
; DEFINE CODES FOR VALUE CONVERSION REQUESTS 
; 
$EQULST CLI$K_,$GBL,<CLI$K_VALCONV@4>,1,<-  
		<NUMERVAL>- 		; NUMBERIC VALUE 
		<ASCIIVAL>- 		; ASCII VALUE 
		<KEYWORD>- 			; KEYWORD VALUE 
		<KEYVAL>- 			; KEYWORD WITH VALUE 
		<FILSPEC>- 			; VALUE IS A FILESPEC 
		>

	$DEFEND	CLI,$GBL,DEF

	.ENDM	$CLIDEF
 
; 
; DEFINE CLI SERVICE REQUEST CODES 
; 
 
	.MACRO	$CLISERVDEF,$GBL

	$DEFINI	CLISERV,$GBL

$EQULST CLI$K_,$GBL,1,1,<- 		; DEFINE CLI SERVICE CODES 
		<PAUSE>- 			; PAUSE THE IMAGE 
		<DEFLOCAL>- 		; DEFINE A SYMBOL IN THE LOCAL TABLE 
		<DEFGLOBAL>- 		; DEFINE A SYMBOL IN THE GLOBAL TABLE 
		>

	$DEFEND	CLISERV,$GBL,DEF

	.ENDM	$CLISERVDEF
; 
; DEFINE GENERIC CODES FOR VERBS 
; 
 
	.MACRO	$CLIVERBDEF,$GBL

	$DEFINI	CLIVERB,$GBL

$EQULST CLI$K_VERB_,$GBL,1,1,<- 	; DEFINE VERB QENERIC CODES 
		<ALLO>- 			; ALLOCATE 
		<ANAL>- 			; ANALIZE 
		<ASSI>- 			; ASSIGN 
		<BASI>- 			; BASIC 
		<BLIS>- 			; BLISS 
		<COBO>- 			; COBOL 
		<CONT>- 			; CONTINUE 
		<COPY>- 			; COPY 
		<CREA>- 			; CREATE 
		<DATA>- 			; DATA 
		>
$EQULST CLI$K_VERB_,$GBL,,1,<-
		<DEAL>- 			; DEALLOCATE 
		<DEAS>- 			; DEASSIGN 
		<DEBU>- 			; DEBUG 
		<DEFI>- 			; DEFINE 
		<DELE>- 			; DELETE 
		<DEPO>- 			; DEPOSIT 
		<DIFF>- 			; DIFFERENCE COMMAND 
		<DIRE>- 			; DIRECTORY 
		<DISM>- 			; DISMOUNT 
		<EDIT>- 			; EDIT 
		<EOD>- 			; EOD 
		>
$EQULST CLI$K_VERB_,$GBL,,1,<-
		<EXAM>- 			; EXAMINE 
		<EXIT>- 			; EXIT 
		<FORT>- 			; FORTRAN 
		<GOTO>- 			; GOTO 
		<HELP>- 			; HELP 
		<IF>- 			; IF 
		<INIT>- 			; INITIALIZE 
		<INQU>- 			; INQUIRE 
		<LINK>- 			; LINK 
		<LOGO>- 			; LOGOUT 
		<MACR>- 			; MACRO 
		>
$EQULST CLI$K_VERB_,$GBL,,1,<-
		<MCR>- 			; MCR 
		<ON>- 			; ON 
		<PRIN>- 			; PRINT 
		<RUN>- 			; RUN 
		<SET>- 			; SET 
		<SHOW>- 			; SHOW 
		<STAR>- 			; START 
		<STOP>- 			; STOP 
		<SUBM>- 			; SUBMIT 
		<TYPE>- 			; TYPE 
		<MOUN>- 			; MOUNT 
		>
$EQULST CLI$K_VERB_,$GBL,,1,<-
		<PATC>- 			; PATCH 
		<REPL>- 			; REPLAY 
		<UNLO>- 			; UNLOCK 
		<APPE>- 			; APPEND COMMAND 
		<DUMP>- 			; DUMP 
		<PURG>- 			; PURGE 
		<RENA>- 			; RENAME 
		<CANC>- 			; CANCEL 
		<LIBR>- 			; LIBRARY 
		<SORT>- 			; SORT 
		<REQU>- 			; REQUEST 
		>
$EQULST CLI$K_VERB_,$GBL,,1,<-
		<SYNC>- 			; SYNCRONIZE 
		>
$EQULST CLI$K_VERB_,$GBL,255,-1,<- 	; DEFINE VERB QENERIC CODES 
		<FORE>- 			; FOREIGN COMMAND 
		>

	$DEFEND	CLIVERB,$GBL,DEF

	.ENDM	$CLIVERBDEF
 
;+ 
; CARD READER STATUS BITS 
;- 
 
	.MACRO	$CRDEF,$GBL

	$DEFINI	CR,$GBL

 
	$VIELD	CR,0,<- 				;CARD READ CHARACTERISTICS DEFINITIONS 
		<TMODE,4,M>- 		; TRANSLATION MODE 
		>				; 
 
; 
; TRANSLATION MODE DEFINITIONS 
; 
 
$EQULST CR$K_,$GBL,0,1,<- 				; 
		<T026,0>- 			;026 PUNCH CODE TRANSLATION 
		<T029,1>- 			;029 PUNCH CODE TRANSLATION 
		>			; 
 

	$DEFEND	CR,$GBL,DEF

	.ENDM	$CRDEF
 
; 
; DEVICE ADAPTER, CLASS, AND TYPE DEFINITIONS 
; 
	.MACRO	$DCDEF,$GBL

	$DEFINI	DC,$GBL

 
; 
; DEFINE ADAPTER TYPES 
; 
$EQULST AT$_,$GBL,0,1,<- 				;DEFINE ADAPTER TYPES 
		<MBA,0>- 			; MASSBUS ADAPTER 
		<UBA,1>- 			; UNIBUS ADAPTER 
		>
; 
; DEFINE DEVICE CLASSES 
; 
$EQULST DC$_,$GBL,0,1,<- 				;DEFINE DEVICE CLASSES 
		<DISK,1>- 			; DISK 
		<TAPE,2>- 			; TAPES 
		<SCOM,32>- 			; SYNCHRONOUS COMMUNICATIONS DEVICES 
		<CARD,65>- 			; CARD READER 
		<TERM,66>- 			; TERMINAL 
		<LP,67>- 			; LINE PRINTER 
		<MAILBOX,160>- 		; MAILBOX 
		>
 
; 
; DEFINE DEVICE TYPES 
; 
 
$EQULST DT$_,$GBL,0,1,<- 				; 
- 
-; 
-; DISK DEVICES 
-; 
- 
		<RK06,1>- 			;RK06 DISK 
		<RK07,2>- 			;RK07 DISK 
		<RP04,3>- 			;RP04 DISK 
		<RP05,4>- 			;RP05 DISK 
		<RP06,5>- 			;RP06 DISK 
		<RM03,6>- 			;RM03 DISK 
		<RP07,7>- 			;RP07 DISK 
		<RP07HT,8>- 		;RP07 DISK WITH HEAD/TRACK 
- 
-; 
-; TAPE DEVICES 
-; 
- 
		<TE16,1>- 			;TE16 MAGTAPE 
		<TU45,2>- 			;TU45 MAGTAPE 
		>
$EQULST DT$_,$GBL,,1,<-
		<TU77,3>- 			;TU77 MAGTAPE 
		>			; 
$EQULST DT$_,$GBL,0,1,<- 			; **** MATCHES $TTDEF ***** 
		<TTYUNKN,0>- 			; UNKNOWN TERMINAL 
		<VT05,1>- 				; VT05 
		<LAX,32>- 				; LA TYPE TERMINAL 
		<LA36,32>- 				; LA36 
		<VT5X,64>- 				; VT5X TYPE 
		<VT52,64>- 				; VT52 
		<VT55,65>- 				; VT55 
		>			; ****** 
$EQULST DT$_,$GBL,0,1,<- 			 
		<XM_ARDA,1>- 			; DMC11 AR WITH DA 
		<XM_ARFA,2>- 			; DMC11 AR WITH FA 
		<XM_ALMA,9>- 			; DMC11 AL WITH MA 
		<XM_ALMD,10>- 			; DMC11 AL WITH MA 
		>
$EQULST DT$_,$GBL,0,1,<- 			 
		<LP11,1>- 				; LP11 
		<LA11,2>- 				; LA11 
		<LA180,3>- 				; LA180 
		>
$EQULST DT$_,$GBL,0,1,<- 			 
		<CR11,1>- 				; CR11 CARD READER 
		>
$EQULST DT$_,$GBL,0,1,<- 			 
		<MBX,1>- 				; GENERIC MAILBOX 
		>
 

	$DEFEND	DC,$GBL,DEF

	.ENDM	$DCDEF
 
; 
;  THE FOLLOWING BITS DEFINE THE DEVICE CHARACTERISTICS FOR 
;  BOTH THE UCBS AND RMS. 
; 
	.MACRO	$DEVDEF,$GBL

	$DEFINI	DEV,$GBL

	$VIELD	DEV,0,<-  
		<REC,,M>- 		; DEVICE RECORD ORIENTED 
		<CCL,,M>- 		; CARRIAGE CONTROL DEVICE 
		<TRM,,M>- 		; DEVICE IS A TERMINAL 
		<DIR,,M>- 		; DEVICE IS DIRECTORY STRUCTURED 
		<SDI,,M>- 		; DEVICE IS SINGLE DIRECTORY STRUCTURED 
		<SQD,,M>- 		; SEQUENTIAL BLOCK-ORIENTED DEVICE (I.E., MAGTAPE) 
		<SPL,,M>- 		; DEVICE BEING SPOOLED 
		<,6,M>- 		; SPARES TO CORRESPOND WITH RSX11M 
		<NET,,M>- 		; NETWORK DEVICE 
		<FOD,,M>- 		; FILES-ORIENTED DEVICE (I.E., DISK AND MT) 
		<,1,M>- 		; SPARE TO CORRESPOND WITH RSX11M 
		<SHR,,M>- 		; DEVICE SHAREABLE 
		<GEN,,M>- 		; DEVICE IS A GENERIC DEVICE 
		<AVL,,M>- 		; DEVICE AVAILABLE FOR USE 
		<MNT,,M>- 		; DEVICE IS MOUNTED 
		<MBX,,M>- 		; DEVICE IS A MAILBOX 
		<DMT,,M>- 		; DEVICE MARKED FOR DISMOUNT 
		<ELG,,M>- 		; DEVICE HAS ERROR LOGGING ENABLED 
		<ALL,,M>- 		; DEVICE IS ALLOCATED 
		<FOR,,M>- 		; DEVICE IS MOUNTED FOREIGN (I.E., NON-FILE STRUCTURED) 
		<SWL,,M>- 		; DEVICE IS SOFTWARE WRITE LOCKED 
		<IDV,,M>- 		; DEVICE CAPABLE OF PROVIDING INPUT 
		<ODV,,M>- 		; DEVICE CAPABLE OF PROVIDING OUTPUT 
		<RND,,M>- 		; DEVICE ALLOWS RANDOM ACCESS 
		<RTM,,M>- 		; DEVICE IS REALTIME IN NATURE 
		<RCK,,M>- 		; DEVICE HAS READ CHECKING ENABLED 
		<WCK,,M>- 		; DEVICE HAS WRITE CHECKING ENABLED 
		>	

	$DEFEND	DEV,$GBL,DEF

	.ENDM	$DEVDEF
 
;+ 
; DEVICE INFORMATION BLOCK DEFINITIONS 
;- 
 
	.MACRO	$DIBDEF,$GBL

	$DEFINI	DIB,$GBL

 
$DEF	DIB$L_DEVCHAR		 		;DEVICE CHARACTERISTICS 
			.BLKL	1 
$DEF	DIB$B_DEVCLASS		 		;DEVICE CLASS 
			.BLKB	1 
$DEF	DIB$B_DEVTYPE		 		;DEVICE TYPE 
			.BLKB	1 
$DEF	DIB$W_DEVBUFSIZ		 		;DEVICE BUFFER SIZE 
			.BLKW	1 
$DEF	DIB$L_DEVDEPEND		 		;DEVICE DEPENDENT INFORMATION 
			.BLKL	1 
$DEF	DIB$W_UNIT		 			;DEVICE UNIT NUMBER 
			.BLKW	1 
$DEF	DIB$W_DEVNAMOFF		 		;OFFSET TO DEVICE NAME COUNTED STRING 
			.BLKW	1 
$DEF	DIB$L_PID		 			;DEVICE OWNER PROCESS IDENTIFICATION 
			.BLKL	1 
$DEF	DIB$L_OWNUIC		 		;DEVICE OWNER USER IDENTIFICATION CODE 
			.BLKL	1 
$DEF	DIB$W_VPROT		 			;DEVICE PROTECTION MASK 
			.BLKW	1 
$DEF	DIB$W_ERRCNT		 		;DEVICE ERROR COUNT 
			.BLKW	1 
$DEF	DIB$L_OPCNT		 			;DEVICE OPERATIONS COUNT 
			.BLKL	1 
$DEF	DIB$W_VOLNAMOFF		 		;OFFSET TO VOLUME LABEL COUNTED STRING 
			.BLKW	1 
$DEF	DIB$W_RECSIZ		 		;BLOCKED RECORD SIZE 
			.BLKW	1 
$DEF	DIB$C_LENGTH
$DEF	DIB$K_LENGTH					;LENGTH OF FIXED PART 
 

	$DEFEND	DIB,$GBL,DEF

	.ENDM	$DIBDEF
 
; 
; LAYOUT OF THE FILE IDENTIFICATION BLOCK (FIB) 
; 
	.MACRO	$FIBDEF,$GBL

	$DEFINI	FIB,$GBL

$DEF	FIB$L_ACCTL		 			; ACCESS CONTROL BITS 
	$VIELD	FIB,0,<-  
		<NOWRITE,,M>- 		; NO OTHER WRITERS 
		<DLOCK,,M>- 		; ENABLE DEACCESS LOCK 
		<,2,M>- 		; UNUSED 
		<SPOOL,,M>- 		; SPOOL FILE ON CLOSE 
		<WRITECK,,M>- 		; ENABLE WRITE CHECK 
		<SEQONLY,,M>- 		; SEQUENTIAL ONLY ACCESS 
		<,1,M>- 		; SPARE 
		<WRITE,,M>- 		; WRITE ACCESS 
		<READCK,,M>- 		; ENABLE READ CHECK 
		<NOREAD,,M>- 		; NO OTHER READERS 
		<NOTRUNC,,M>- 		; FILE MAY NOT BE TRUNCATED 
		<,4,M>- 		; SPARE 
-				; THE HIGH 8 BITS CANNOT BE COPIED 
-				; INTO THE ACCESS MODE WORD IN THE WINDOW 
		<EXECUTE,,M>- 		; ACCESS FOR EXECUTE (USE EXECUTE PROTECTION) 
		<PRSRV_ATR,,M>- 	; PRESERVE ORIGINAL ATTRIBUTES OF FILE 
		<,6,M>- 		; SPARE 
		>	
	$VIELD	FIB,0,<- 			; OVERLAPPING BITS USED FOR MAGTAPE 
		<,3,M>-  
		<REWIND,,M>- 		; REWIND TAPE 
		<CURPOS,,M>- 		; CREATE AT CURRENT TAPE POSITION 
		<,1,M>-  
		<UPDATE,,M>- 		; UPDATE MODE (POSITION TO START OF FILE) 
		>	
			.BLKB	3 
$DEF	FIB$B_WSIZE		 	; WINDOW SIZE 
			.BLKB	1 
$DEF	FIB$W_FID		 		; FILE ID 
$DEF	FIB$W_FID_NUM		 	; FILE NUMBER 
			.BLKW	1 
$DEF	FIB$W_FID_SEQ		 	; FILE SEQUENCE NUMBER 
			.BLKW	1 
$DEF	FIB$W_FID_RVN		 	; RELATIVE VOLUME NUMBER 
$DEF	FIB$B_FID_RVN		 	; SHORT FORM RVN 
			.BLKB	1 
$DEF	FIB$B_FID_NMX		 	; EXTENDED FILE NUMBER 
			.BLKB	1 
$DEF	FIB$C_ACCDATA
$DEF	FIB$K_ACCDATA				; ABOVE DATA NECESSARY FOR ACCESS 
$DEF	FIB$W_DID		 		; DIRECTORY ID 
$DEF	FIB$W_DID_NUM		 	; FILE NUMBER 
			.BLKW	1 
$DEF	FIB$W_DID_SEQ		 	; FILE SEQUENCE NUMBER 
			.BLKW	1 
$DEF	FIB$W_DID_RVN		 	; RELATIVE VOLUME NUMBER 
$DEF	FIB$B_DID_RVN		 	; SHORT FORM RVN 
			.BLKB	1 
$DEF	FIB$B_DID_NMX		 	; EXTENDED FILE NUMBER 
			.BLKB	1 
$DEF	FIB$L_WCC		 			; WILD CARD CONTEXT 
			.BLKL	1 
$DEF	FIB$W_NMCTL		 		; NAME CONTROL BITS 
	$VIELD	FIB,0,<-  
		<,3,M>-  
		<ALLVER,,M>- 		; MATCH ALL VERSIONS 
		<ALLTYP,,M>- 		; MATCH ALL TYPES 
		<ALLNAM,,M>- 		; MATCH ALL NAMES 
		<,2,M>-  
		<WILD,,M>- 		; WILD CARDS IN FILE NAME 
		<NEWVER,,M>- 		; MAXIMIZE VERSION NUMBER 
		<SUPERSEDE,,M>- 	; SUPERSEDE EXISTING FILE 
		<FINDFID,,M>- 		; SEARCH FOR FILE ID 
		<,2,M>-  
		<LOWVER,,M>- 		; LOWER VERSION OF FILE EXISTS 
		<HIGHVER,,M>- 		; HIGHER VERSION OF FILE EXISTS 
		>	
			.BLKW	1 
$DEF	FIB$C_DIRDATA
$DEF	FIB$K_DIRDATA				; ABOVE DATA NECESSARY FOR DIRECTORY OPS 
						; MARK PARAMETER VARIATION 
$DEF	FIB$W_EXCTL		 		; EXTEND CONTROL 
	$VIELD	FIB,0,<-  
		<ALCON,,M>- 		; ALLOCATE CONTIGUOUS 
		<ALCONB,,M>- 		; CONTIGUOUS BEST EFFORT 
		<FILCON,,M>- 		; MARK FILE CONTIGUOUS 
		<ALDEF,,M>- 		; ALLOCATE DEFAULT AMOUNT 
		<,3,M>-  
		<EXTEND,,M>- 		; ENABLE EXTENSION 
		<TRUNC,,M>- 		; ENABLE TRUNCATION 
		<NOHDREXT,,M>- 	; INHIBIT EXTENSION HEADERS 
		<MARKBAD,,M>- 		; MARK BLOCKS BAD 
		>	
						; MARK PARAMETER VARIATION 
			.BLKW	1 
$DEF	FIB$L_EXSZ		 			; EXTEND SIZE 
			.BLKL	1 
$DEF	FIB$L_EXVBN		 			; EXTENSION VBN 
			.BLKL	1 
$DEF	FIB$C_EXTDATA
$DEF	FIB$K_EXTDATA				; ABOVE NECESSARY FOR BASIC FILE EXTENSION 
$DEF	FIB$B_ALOPTS		 		; ALLOCATION OPTIONS 
	$VIELD	FIB,0,<-  
		<EXACT,,M>- 		; EXACT PLACEMENT REQUIRED 
		<ONCYL,,M>- 		; PUT ALLOCATION ON ONE CYLINDER 
		>	
			.BLKB	1 
$DEF	FIB$B_ALALIGN		 		; ALLOCATION ALIGNMENT 
$EQU	FIB$C_CYL	1			; CYLINDER ADDRESS SPECIFIED 
$EQU	FIB$C_LBN	2			; LBN SPECIFIED 
$EQU	FIB$C_VBN	3			; PROXIMATE VBN SPECIFIED 
$EQU	FIB$C_RFI	4			; RELATED FILE ID SPECIFIED 
			.BLKB	1 
$DEF	FIB$W_ALLOC		 		; ALLOCATION LOCATION 
$DEF	FIB$W_LOC_FID		 	; RELATED FILE ID 
$DEF	FIB$W_LOC_NUM		 	; RELATED FILE NUMBER 
			.BLKW	1 
$DEF	FIB$W_LOC_SEQ		 	; FILE SEQUENCE NUMBER 
			.BLKW	1 
$DEF	FIB$W_LOC_RVN		 	; RELATED RVN 
$DEF	FIB$B_LOC_RVN		 	; SHORT FORM RVN 
			.BLKB	1 
$DEF	FIB$B_LOC_NMX		 	; EXTENDED FILE NUMBER 
			.BLKB	1 
$DEF	FIB$L_LOC_ADDR		 		; LOCATION ADDRESS (VBN, LBN, CYL) 
			.BLKL	1 
$DEF	FIB$C_ALCDATA
$DEF	FIB$K_ALCDATA				; ABOVE DATA NECESSARY FOR PLACEMENT 
$DEF	FIB$C_LENGTH
$DEF	FIB$K_LENGTH		 
 
	. = 22 			; START OF ACP CONTROL PARAMETERS 
$DEF	FIB$W_CNTRLFUNC		 		; ACP CONTROL FUNCTION 
; DEFINE ACP CONTROL FUNCTION CODES 
; 
$EQULST FIB$C_,$GBL,1,1,<-  
		<REWINDVOL>- 	; REWIND VOLUME SET 
		<POSEND>- 		; POSITION TO END OF VOLUME SET 
		<NEXTVOL>- 		; FORCE NEXT VOLUME 
		<SPACE>- 		; SPACE MAGNETIC TAPE 
		<ILLEGAL>- 		; 
		<REWINDFIL>- 	; REWIND FILE 
		>
			.BLKW	1 
$DEF	FIB$L_CNTRLVAL		 		; ACP CONTROL FUNCTION VALUE PARAMETER 
 
 
			.BLKL	1 
$DEF	FIB$C_MTALEN
$DEF	FIB$K_MTALEN				; LENGTH OF MTAACP DATA 
 

	$DEFEND	FIB,$GBL,DEF

	.ENDM	$FIBDEF
 
; 
; STRUCTURE OF A FILE ID (FID) 
; 
 
	.MACRO	$FIDDEF,$GBL

	$DEFINI	FID,$GBL

 
$DEF	FID$W_NUM		 			; FILE NUMBER 
			.BLKW	1 
$DEF	FID$W_SEQ		 			; FILE SEQUENCE NUMBER 
			.BLKW	1 
$DEF	FID$W_RVN		 			; RELATIVE VOLUME NUMBER 
$DEF	FID$B_RVN		 		; BYTE FORM OF RVN 
			.BLKB	1 
$DEF	FID$B_NMX		 		; FILE NUMBER EXTENSION 
			.BLKB	1 
$DEF	FID$C_LENGTH
$DEF	FID$K_LENGTH		 
 

	$DEFEND	FID,$GBL,DEF

	.ENDM	$FIDDEF
 
;+ 
; I/O FUNCTION CODE DEFINITIONS 
;- 
 
	.MACRO	$IODEF,$GBL

	$DEFINI	IO,$GBL

 
; 
; *** START PHYSICAL I/O FUNCTION CODES *** 
; 
 
$EQULST IO$_,$GBL,0,1,<-  
		<NOP,0>- 			;NO OPERATION 
		<UNLOAD,1>- 		;UNLOAD DRIVE 
		<SEEK,2>- 			;SEEK CYLINDER 
		<SPACEFILE,2>- 		;SPACE FILES 
		<RECAL,3>- 			;RECALIBRATE DRIVE 
		<DRVCLR,4>- 		;DRIVE CLEAR 
		<RELEASE,5>- 		;RELEASE PORT 
		<OFFSET,6>- 		;OFFSET READ HEADS 
		<ERASETAPE,6>- 		;ERASE TAPE 
		<RETCENTER,7>- 		;RETURN TO CENTERLINE 
		>
$EQULST IO$_,$GBL,,1,<-
		<PACKACK,8>- 		;PACK ACKNOWLEDGE 
		<SEARCH,9>- 		;SEARCH FOR SECTOR 
		<SPACERECORD,9>- 		;SPACE RECORDS 
		<WRITECHECK,10>- 		;WRITE CHECK DATA 
		<WRITEPBLK,11>- 		;WRITE PHYSICAL BLOCK 
		<READPBLK,12>- 		;READ PHYSICAL BLOCK 
		<WRITEHEAD,13>- 		;WRITE HEADER AND DATA 
		<READHEAD,14>- 		;READ HEADER AND DATA 
		<WRITETRACKD,15>- 		;WRITE TRACK DATA 
		<READTRACKD,16>- 		;READ TRACK DATA 
		<WRITECHECKH,24>- 		;WRITE CHECK HEADER AND DATA 
		>
$EQULST IO$_,$GBL,,1,<-
		<READPRESET,25>- 		;READIN PRESET 
		<STARTSPNDL,25>- 		;START SPINDLE 
		<SETCHAR,26>- 		;SET CHARACTERISTICS 
		<SENSECHAR,27>- 		;SENSE TAPE CHARACTERISTICS 
		<WRITEMARK,28>- 		;WRITE TAPE MARK 
		<DIAGNOSE,29>- 		;DIAGNOSE 
		<PHYSICAL,31>- 		;HIGHEST PHYSICAL I/O FUNCTION CODE 
		>
 
; 
; *** START LOGICAL I/O FUNCTION CODES *** 
; 
 
$EQULST IO$_,$GBL,0,1,<-  
		<WRITELBLK,32>- 		;WRITE LOGICAL BLOCK 
		<READLBLK,33>- 		;READ LOGICAL BLOCK 
		<REWINDOFF,34>- 		;REWIND AND SET OFFLINE 
		<SETMODE,35>- 		;SET MODE 
		<REWIND,36>- 		;REWIND TAPE 
		<SKIPFILE,37>- 		;SKIP FILES 
		<SKIPRECORD,38>- 		;SKIP RECORDS 
		<SENSEMODE,39>- 		;SENSE TAPE MODE 
		<WRITEOF,40>- 		;WRITE END OF FILE 
		<LOGICAL,47>- 		;HIGHEST LOGICAL I/O FUNCTION CODE 
		>
 
; 
; *** START VIRTUAL I/O FUNCTION CODES 
; 
 
$EQULST IO$_,$GBL,0,1,<-  
		<WRITEVBLK,48>- 		;WRITE VIRTUAL BLOCK 
		<READVBLK,49>- 		;READ VIRTUAL BLOCK 
		<ACCESS,50>- 		;ACCESS FILE 
		<CREATE,51>- 		;CREATE FILE 
		<DEACCESS,52>- 		;DEACCESS FILE 
		<DELETE,53>- 		;DELETE FILE 
		<MODIFY,54>- 		;MODIFY FILE 
		<READPROMPT,55>- 		;READ TERMINAL WITH PROMPT 
		<ACPCONTROL,56>- 		;MISCELLANEOUS ACP CONTROL 
		<MOUNT,57>- 		;MOUNT VOLUME 
		>
$EQULST IO$_,$GBL,,1,<-
		<VIRTUAL,63>- 		;HIGHEST VIRTUAL I/O FUNCTION 
		>
 
; 
; FUNCTION MODIFIER BIT DEFINITIONS 
; 
 
	$VIELD	IO,0,<- 				; MODIFIER BIT DEFINITIONS 
		<FCODE,6,M>- 		; FUNCTION CODE FIELD 
		<,5,M>- 			; RESERVED BITS 
		<INHERLOG,,M>- 		; INHIBIT ERROR LOGGING 
		<INHSEEK,,M>- 		; INHIBIT IMPLIED SEEK ON PHYSICAL FUNCTIONS 
		<,1,M>- 			; RESERVED BIT 
		<DATACHECK,,M>- 		; WRITE CHECK DATA AFTER TRANSFER 
		<INHRETRY,,M>- 		; INHIBIT ERROR RETRY 
		>	
 
	$VIELD	IO,0,<- 				;DR DRIVER FUNCTION MODIFIER BITS 
		<,6,M>- 			; FUNCTION CODE 
		<COMMOD,,M>- 		; DIAGNOSTIC COMMAND MODIFIER 
		>	
 
	$VIELD	IO,0,<- 				;MAGTAPE FUNCTION MODIFIER BITS 
		<,6,M>- 			; FUNCTION CODE 
		<REVERSE,,M>- 		; REVERSE OPERATION 
		<NOWAIT,,M>- 		; NO WAIT FOR REWIND TO COMPLETE 
		<INTSKIP,,M>- 		; INTERNAL SKIP RECORD FUNCTION 
		<,3,M>- 			; RESERVED BITS 
		<INHEXTGAP,,M>- 		; INHIBIT EXTENDED INTERRRECORD GAP 
		>	
	$VIELD	IO,0,<- 				;ACP FUNCTION MODIFIER BITS 
		<,6,M>- 			;FUNCTION CODE 
		<ACCESS,,M>- 		; ACCESS FILE 
		<CREATE,,M>- 		; CREATE FILE 
		<DELETE,,M>- 		; DELETE FILE 
		<MOUNT,,M>- 		; MOUNT VOLUME 
		<DMOUNT,,M>- 		; DISMOUNT VOLUME 
		>	
 
	$VIELD	IO,0,<- 				;CARD READER MODIFIER BITS 
		<,6,M>- 			; FUNCTION CODE 
		<BINARY,,M>- 		; BINARY READ 
		<PACKED,,M>- 		; PACKED READ 
		>				; 
 
	$VIELD	IO,0,<- 				;MAILBOX MODIFIER BITS 
		<,6,M>- 			;FUNCTION CODE 
		<NOW,,M>- 			;DO NOT WAIT FOR OPERATION COMPLETE 
		<READATTN,,M>- 		;REQUEST AST ON WAITING READER 
		<WRTATTN,,M>- 		;REQUEST AST ON WAITING WRITER 
		>	
 
	$VIELD	IO,0,<- 				;TERMINAL READ FUNCTION MODIFIERS 
		<,6,M>- 			;FUNCTION CODE 
		<NOECHO,,M>- 		;NOECHO 
		<TIMED,,M>- 		;TIMED 
		<CVTLOW,,M>- 		;CONVERT LOWER CASE 
		<NOFILTR,,M>- 		;NO FILTER 
		<DSABLMBX,,M>- 		;DISABLE MAILBOX 
		<PURGE,,M>- 		;PURGE TYPEAHEAD 
		<TRMNOECHO,,M>- 		;TERMINATORS ARE NOT ECHOED 
		>	
 
	$VIELD	IO,0,<- 				;TERMINAL WRITE FUNCTION MODIFIERS 
		<,6,M>- 			; FUNCTION CODE 
		<CANCTRLO,,M>- 		;CANCEL CONTROL O 
		<ENABLMBX,,M>- 		;ENABLE MAILBOX 
		<NOFORMAT,,M>- 		;DO NOT FORMAT OUTPUT 
		>	
 
	$VIELD	IO,0,<- 				;TERMINAL SETMODE SUBFUNCTIONS 
		<,7,M>- 			; RESERVE FUNCTION CODES 
		<CTRLYAST,,M>- 		;SET CONTROL Y AST 
		<CTRLCAST,,M>- 		;SET CONTROL C 
		<HANGUP,,M>- 		;SET MODE AND HANG UP LINE 
		>	
	$VIELD	IO,0,<- 				; DMC/COMM DRIVER SETMODE SUBFUNCTIONS 
		<,6,M>- 			; 
		<STARTUP,,M>- 		; START PROTOCOL 
		<SHUTDOWN,,M>- 		; STOP PROTOCOL 
		<ATTNAST,,M>- 		; ATTENTION AST 
		>	
	$VIELD	IO,0,<- 				; NETWORK WRITE VIRTUAL MODIFIER BITS 
		<,6,M>- 			; FUNCTION CODE 
		<INTERRUPT,,M>- 		; INTERRUPT MSG 
		>	
	$VIELD	IO,0,<- 				; NETWORK ACCESS/DEACCESS MODIFIER BITS 
		<,8,M>- 			; FUNCTION CODE 
		<ABORT,,M>- 		; DISCONNECT ABORT/CONNECT REJECT 
		<SYNCH,,M>- 		; SYNCHRONOUS DISCONNECT 
		>	

	$DEFEND	IO,$GBL,DEF

	.ENDM	$IODEF
 
;+ 
; 
; Get Job Process Information Data Identifier Definitions 
; 
; **** NOTE **** 
; 
;	New items must always be added to the END of each item list 
;	(preceeding the ENDlistname item) so that users will not have 
;	to relink. 
;- 
 
 
	.MACRO	$JPIDEF,$GBL

	$DEFINI	JPI,$GBL

 
 
$EQULST JPI$C_,$GBL,0,1,<- 				; DEFINE TABLE NUMBERS 
- 
-					; STRUCTURE CODES MUST START AT 1 
		<ADRTYPE,1>- 		; ITEM IS ADDRESS OF DATA 
		<CTLTYPE,2>- 		; ITEM IS IN CONTROL REGION 
		<PCBTYPE,3>- 		; ITEM IN PCB 
		<PHDTYPE,4>- 		; ITEM IN PHD 
		<LISTEND,0>- 		; DEFINE ITMLST TERMINATOR 
		>
 
$EQULST JPI$_,$GBL,JPI$C_PCBTYPE@8,1,<- 		; ITEM IDENTIFIERS FOR PCB 
- 
- 
		<ASTACT>-  			; ACCESS MODES WITH ACTIVE ASTS 
		<ASTEN>-  			; ACCESS MODES WITH ASTS ENABLED 
		<PRI>-  			; CURRENT PROCESS PRIORITY 
		<OWNER>-  			; PID OF CREATOR PROCESS 
		<UIC>-  			; UIC OF PROCESS 
		<STS>- 			; PROCESS STATUS 
		<STATE>- 			; PROCESS STATE 
		<MEM>-  			; MEMBER FIELD OF UIC 
		<GRP>-  			; GROUP FIELD OF UIC 
		<PRIB>-  			; PROCESS BASE PRIORITY 
		>
$EQULST JPI$_,$GBL,,1,<-
		<APTCNT>-  			; ACTIVE PAGE TABLE COUNT 
		<TMBU>- 			; TERMINATION MAILBOX UNIT 
		<GPGCNT>-  			; GLOBAL PAGE COUNT IN WORKING SET 
		<PPGCNT>-  			; PROCESS PAGE COUNT IN WORKING SET 
		<ASTCNT>-  			; AST COUNT REMAINING 
		<BIOCNT>-  			; BUFFERED I/O COUNT REMAINING 
		<BIOLM>-  			; BUFFERED I/O LIMIT 
		<BYTCNT>-  			; BYTE COUNT REMAINING FOR BUFFERED I/O 
		<DIOCNT>-  			; DIRECT I/O COUNT REMAINING 
		<DIOLM>-  			; DIRECT I/O COUNT LIMIT 
		<FILCNT>-  			; COUNT REMAINING OF OPEN FILES 
		>
$EQULST JPI$_,$GBL,,1,<-
		<TQCNT>-  			; COUNT REMAINING OF TIMER QUEUE ENTRIES 
		<EFWM>- 			; EVENT FLAG WAIT MASK 
		<EFCS>- 			; LOCAL EVENT FLAGS 0-31 
		<EFCU>- 			; LOCAL EVENT FLAGS 32-63 
		<PID>-  			; PROCESS IDENTIFICATION 
		<BYTLM>-  			; BUFFERED I/0 BYTE COUNT LIMIT 
		<PRCCNT>-  			; SUBPROCESS COUNT 
		<PRCNAM>-  			; PROCESS NAME 
		<LASTPCB>- 			; MAX INDEX IN PCB TABLE 
		>
 
$EQULST JPI$_,$GBL,JPI$C_PHDTYPE@8,1,<- 		; ITEM IDENTIFIERS FOR PHD 
- 
		<CURPRIV>- 			; CURRENT PROCESS PRIVILEGE MASK 
		<WSAUTH>-  			; AUTHORIZED WORKING SET SIZE 
		<WSQUOTA>-  		; QUOTA ON WORKING SET SIZE 
		<DFWSCNT>-  		; DEFAULT WORKING SET SIZE 
		<FREP0VA>-  		; FIRST FREE VIRTUAL ADDR. AT END OF P0 SPACE 
		<FREP1VA>-  		; FIRST FREE ADDR. AT END OF P1 SPACE 
		<DFPFC>-  			; DEFAULT PAGE FAULT CLUSTER 
		<CPUTIM>-  			; ACCUMULATED CPU TIME 
		<PRCLM>-  			; SUBPROCESS QUOTA 
		<ASTLM>- 			; AST LIMIT 
		>
$EQULST JPI$_,$GBL,,1,<-
		<PAGEFLTS>- 		; COUNT OF PAGE FAULTS 
		<DIRIO>- 			; PROCESS DIRECT I/O OPERATIONS 
		<BUFIO>- 			; PROCESS BUFFERED I/O OPERATIONS 
		<CPULIM>- 			; LIMIT ON CPUTIM FOR PROCESS 
		<PGFLQUOTA>-  		; MAX. VIRTUAL PAGE COUNT 
		<FILLM>-  			; OPEN FILE LIMIT 
		<TQLM>-  			; TIMER QUEUE LIMIT 
		<WSSIZE>- 			; CURRENT WORKING SET SIZE 
		<LASTPHD>- 			; MAX INDEX IN PROCESS HEADER 
		>
 
	 
$EQULST JPI$_,$GBL,JPI$C_CTLTYPE@8,1,<- 		; ITEM IDENTIFIERS FOR CONTROL REGION 
- 
		<VIRTPEAK>- 		; PEAK VIRTUAL SIZE 
		<WSPEAK>- 			; PEAK WORKING SET SIZE 
		<USERNAME>- 		; USERNAME STRING 
		<ACCOUNT>- 			; ACCOUNT NAME STRING 
		<PROCPRIV>- 		; PROCESS PRIVILEGE MASK 
		<VOLUMES>- 			; VOLUMES MOUNTED 
		<LOGINTIM>- 		; TIME OF LOGIN OR PROCESS CREATION 
		<LASTCTL>- 			; MAX INDEX IN CONTROL REGION 
		>
 
 
$EQULST JPI$_,$GBL,JPI$C_ADRTYPE@8,1,<- 		; ITEM IDENTIFIERS FOR ADDRESS DATA 
- 
		<EXCVEC>- 			; ADDRESS OF "EXCEPTION VECTOR" VECTOR 
		<FINALEXC>- 		; ADDRESS OF LAST CHANCE EXCEPTION VECTORS 
		<LASTADR>- 			; MAX INDEX IN ADDRESS TABLE 
		>
 

	$DEFEND	JPI,$GBL,DEF

	.ENDM	$JPIDEF
;+ 
; LINE PRINTER CHARACTERISTICS DEFINITIONS 
;- 
	.MACRO	$LPDEF,$GBL

	$DEFINI	LP,$GBL

 
	$VIELD	LP,0,<- 				;LINE PRINTER CHARACTERISTICS 
		<CR,,M>- 			; CARRIAGE RETURN NEEDED 
		<MECHFORM,,M>- 		; MECHANICAL FORM FEED 
		<,5,M>- 			; SPARE UNUSED BITS 
		<LOWER,,M>- 		; PRINTER HAS LOWER CASE 
		<,16,M>- 			; SPARE UNUSED BITS 
		<PAGE_L,8,M>- 		; PAGE LENGTH 
		>				; 
 
$EQULST LP$_,$GBL,0,1,<-  
		<LP11,1>-  
		<LA11,2>-  
		<LA180,3>-  
		>
 

	$DEFEND	LP,$GBL,DEF

	.ENDM	$LPDEF
 
;+ 
; 
; SYSTEM WIDE MAILBOX MESSAGE TYPES 
; 
;- 
	.MACRO	$MSGDEF,$GBL		; DEFINE SYSTEM MAILBOX MESSAGES 

	$DEFINI	MSG,$GBL

$EQULST MSG$_,$GBL,1,1,<- 			; DEFINE CODES AS CONSTANTS 
		<TRMUNSOLIC>- 		; UNSOLICITED TERMINAL DATA 
		<CRUNSOLIC>- 		; UNSOLICTED CARD READER DATA 
		<DELPROC>- 			; DELETE PROCESS 
		<SNDSMB>- 			; SEND TO SYMBIONT MANAGER 
		<DEVOFFLIN>- 		; DEVICE OFFLINE 
		<TRMHANGUP>- 		; TERMINAL HANG UP 
		<DEVONLIN>- 		; DEVICE ONLINE 
		<OPRQST>- 			; OPERATOR REQUEST *** OVERLAPPED CODE *** 
		<OPREPLY>- 			; OPERATOR REPLY *** OVERLAPPED CODE *** 
		>
$EQULST MSG$_,$GBL,8,1,<- 			; DEFINE SYMBIONT RESPONSE MESSAGES 
		<SMBINI>- 			; SYMBIONT HAS INITED 
		<SMBDON>- 			; SYMBIONT FINISHED 
		<SNDACC>- 			; SEND MESSAGE TO ACCOUNTING MANAGER 
		<XM_DATAVL>- 		; DMC UNSOLICITED DATA 
		<XM_SHUTDN>- 		; DMC LINE DOWN 
		<XM_ATTN>- 			; DMC ATTENTION MESSAGE 
		>
$EQULST MSG$_,$GBL,16,1,<- 			; SYMBIONT COMMAND MESSAGES 
		<INIOPR>- 			; INITIATE PRINTING A FILE 
		<ABOOPR>- 			; ABORT PRINTING A FILE 
		<SUSOPR>- 			; PAUSE PRINTING THE FILE 
		<RESOPR>- 			; RESUME PRINTING THE FILE 
		<DELSMB>- 			; SYMBIONT SHOULD DELETE ITSELF 
		>
$EQULST MSG$_,$GBL,32,1,<- 			; 
		<SMBRSP>- 			; SYMBIONT MANAGER RESPONSE 
		<ACCRSP>- 			; ACCOUNTING MANAGER RESPONSE 
		>
$EQULST MSG$_,$GBL,40,1,<- 			; FILE ACP MESSAGES 
		<SCANBAD>- 			; SCAN FILE FOR BAD BLOCKS 
		<SCANRSP>- 			; RESPONSE FROM FILE SCANNER 
		>
$EQULST MSG$_,$GBL,48,1,<- 			; NETWORK ATTENTION CODES 
		<ABORT>- 			; PARTNER ABORTED LINK 
		<CONFIRM>- 			; CONNECT CONFIRM 
		<CONNECT>- 			; INBOUND CONNECT INITIATE 
		<DISCON>- 			; PARTNER DISCONNECTED - HANGUP 
		<EXIT>- 			; PARTNER EXITED PREMATURELY 
		<INTMSG>- 			; INTERRUPT MESSAGE - UNSOLICITED DATA 
		<PATHLOST>- 		; NFW - PATH LOST TO PARTNER 
		<PROTOCOL>- 		; PROTOCOL ERROR 
		<REJECT>- 			; CONNECT REJECT 
		<THIRDPARTY>- 		; THIRD PARTY DISCONNECT 
		>
$EQULST MSG$_,$GBL,,1,<-
		<TIMEOUT>- 			; CONNECT TIMEOUT 
		>

	$DEFEND	MSG,$GBL,DEF

	.ENDM	$MSGDEF
 
;+ 
; MAGTAPE STATUS BITS 
;- 
 
	.MACRO	$MTDEF,$GBL

	$DEFINI	MT,$GBL

 
	$VIELD	MT,0,<- 				; MAGTAPE DEVICE DEPENDENT DEFINITIONS 
		<,3,>- 			; SPARE UNUSED BITS 
		<PARITY,,M>- 		; PARITY SELECT (0=ODD, 1=EVEN) 
		<FORMAT,4,M>- 		; RECORDING FORMAT 
		<DENSITY,5,M>- 		; RECORDING DENSITY AND METHOD 
		<,3,>- 			; SPARE UNUSED BITS 
		<BOT,,M>- 			; AT BEGINNING OF TAPE 
		<EOF,,M>- 			; AT END OF FILE 
		<EOT,,M>- 			; AT END OF TAPE 
		<HWL,,M>- 			; TAPE IS HARDWARE WRITELOCKED 
		<LOST,,M>- 		; TAPE POSITION LOST 
		>	
 
; 
; RECORDING FORMAT DEFINTIONS 
; 
 
$EQULST MT$K_,$GBL,0,1,<- 				; 
		<DEFAULT,0>- 		; DEFAULT FORMAT 
		<NORMAL11,12>- 		; PDP-11 NORMAL 
		<CORDMP11,13>- 		; PDP-11 CORE DUMP 
		<NORMAL15,14>- 		; PDP-15 NORMAL 
		>
 
; 
; RECORDING DENTITY AND METHOD DEFINITIONS 
; 
 
$EQULST MT$K_,$GBL,0,1,<- 				; 
-;		DEFAULT,0		; DEFAULT DENSITY (SAME AS ABOVE) 
		<NRZI_800,3>- 		; NRZI 800 BPI 
		<PE_1600,4>- 		; PE 1600 BPI 
		>
 

	$DEFEND	MT,$GBL,DEF

	.ENDM	$MTDEF
 
 
;+ 
; OPERATOR COMMUNICATIONS MESSAGE TYPES AND VALUES 
;- 
	.MACRO	$OPRDEF,$GBL

	$DEFINI	OPR,$GBL

$EQULST OPR$_,$GBL,1,1,<- 		; OPERATOR MESSAGE TYPES 
		<TERMENABL>- 	; ENABLE TERMINAL 
		<LOGINIT>- 		; INITIALIZE THE LOG 
		<OPRQST>- 		; OPERATOR REQUEST 
		<OPREPLY>- 		; OPERATOR REPLY 
		>
	$VIELD	OPR,0,<- 			; OPERATOR NAMES 
		<CENTRAL,,M>- 	; 
		<PRINTER,,M>-  
		<TAPES,,M>-  
		<DISKS,,M>-  
		<DEVICES,,M>-  
		<USER1,12,M>-  
		<USER2,,M>-  
		<USER3,,M>-  
		<USER4,,M>-  
		<USER5,,M>-  
		<USER6,,M>-  
		<USER7,,M>-  
		<USER8,,M>-  
		<USER9,,M>-  
		<USER10,,M>-  
		<USER11,,M>-  
		<USER12,,M>-  
		>	

	$DEFEND	OPR,$GBL,DEF

	.ENDM	$OPRDEF
 
;+ 
; PRINTER/TERMINAL CARRIAGE CONTROL SPECIFIERS 
;-- 
	.MACRO	$PCCDEF,$GBL

	$DEFINI	PCC,$GBL

$DEF	PCC$W_FORTRAN		 		; FORTRAN FIELD 
			.BLKW	1 
$DEF	PCC$B_PREFIX		 		; PREFIX FIELD 
			.BLKB	1 
$DEF	PCC$B_POSTFIX		 		; POSTFIX FIELD 
	$VIELD	PCC,0,<-  
		<CHAR,5,M>- 		; CHARACTER FIELD 
		<,1,>-  
		<EIGHTBIT,,M>- 		; EIGHTBIT CHARACTER SET 
		<SINGLE,,M>- 		; SINGLE CHARACTER 
		>	
	$VIELD	PCC,0,<-  
		<LINECNT,7,M>- 		; LINE COUNT FOR NEWLINES 
		>	
$EQULST PCC$_,$GBL,0,1,<- 				; FORTRAN CONSTANTS 
		<FTN_SINGLE,32>- 		; SINGLE SPACE 
		<FTN_DOUBLE,48>- 		; DOUBLE SPACE 
		<FTN_PAGE,49>- 		; PAGE SPACE 
		<FTN_OVRPRT,43>- 		; OVER PRINT 
		<FTN_PROMPT,36>- 		; PROMPT 
		>
			.BLKB	1 

	$DEFEND	PCC,$GBL,DEF

	.ENDM	$PCCDEF
 
;+ 
; PROCESS QUOTA LIST CODES 
;- 
	.MACRO	$PQLDEF,$GBL		; PROCESS QUOTA LIST CODE DEFINITIONS 

	$DEFINI	PQL,$GBL

$EQULST PQL$_,$GBL,0,1,<-  
		<LISTEND>- 				;LIST END CODE (MUST BE FIRST) 
		<ASTLM>- 				;AST LIMIT 
		<BIOLM>- 				;BUFFERED I/O LIMIT 
		<BYTLM>- 				;BYTE LIMIT FOR BUFFERED I/O 
		<CPULM>- 				;CPU TIME LIMIT 
		<DIOLM>- 				;DIRECT I/O LIMIT	 
		<FILLM>- 				;OPEN FILE LIMIT 
		<PGFLQUOTA>- 			;PAGING FILE QUOTA 
		<PRCLM>- 				;SUB-PROCESS LIMIT 
		<TQELM>- 				;TIMER QUEUE ENTRY LIMIT 
		>
$EQULST PQL$_,$GBL,,1,<-
		<WSQUOTA>- 				;WORKING SET QUOTA 
		<WSDEFAULT>- 			;WORKING SET DEFAULT 
		<LENGTH>- 				;NUMBER OF QUOTAS (MUST BE LAST) 
		>

	$DEFEND	PQL,$GBL,DEF

	.ENDM	$PQLDEF
 
;+ 
; PRIVILEGE BIT DEFINITIONS 
;- 
 
	.MACRO	$PRVDEF,$GBL

	$DEFINI	PRV,$GBL

 
	$VIELD	PRV,0,<-  
- ; ***** THE FOLLOWING TWO BITS MUST BE ADJACENT 
		<CMKRNL,,>- 		; MAY CHANGE MODE TO KERNEL 
		<CMEXEC,,>-  		; MAY CHANGE MODE TO EXEC 
-; ***** THE PRECEEDING TWO BITS MUST BE ADJACENT 
-; ***** THE FOLLOWING TWO BITS MUST BE ADJACENT 
		<SYSNAM,,>-  		; MAY INSERT IN SYSTEM LOGICAL NAME TABLE 
		<GRPNAM,,>-  		; MAY INSERT IN GROUP LOGICAL NAME TABLE 
-; ***** THE PRECEEDING TWO BITS MUST BE ADJACENT 
		<ALLSPOOL,,>- 	;MAY ALLOCATE SPOOLED DEVICE 
		<DETACH,,>-  		; MAY CREATE DETACHED PROCESSES 
		<DIAGNOSE,,>- 	; MAY DIAGNOSE DEVICES 
		<LOG_IO,,>- 		; MAY DO LOGICAL I/O 
		<GROUP,,>- 		; MAY AFFECT OTHER PROCESSES IN SAME GROUP 
		<NOACNT,,>-  		; MAY SUPPRESS ACCOUNTING MESSAGE 
		<PRMCEB,,>-  		; MAY CREATE PERMANENT COMMON EVENT CLUSTERS 
		<PRMMBX,,>-  		; MAY CREATE PERMANENT MAILBOX 
		<PSWAPM,,>-  		; MAY CHANGE PROCESS SWAP MODE 
		<SETPRI,,>-  		; MAY SET ANY PRIORITY VALUE 
		<SETPRV,,>-  		; MAY SET ANY PRIVILEGE BITS 
		<TMPMBX,,>-  		; MAY CREATE TEMPORARY MAILBOX 
		<WORLD,,>- 		; MAY AFFECT OTHER PROCESSES IN THE WORLD 
		<MOUNT,,>- 		; MAY EXECUTE MOUNT ACP FUNCTIONS 
		<OPER,,>- 		; OPERATOR PRIVILEGE 
		<EXQUOTA,,>- 		; MAY EXCEED QUOTAS 
		<NETMBX,,>- 		; MAY CREATE NETWORK DEVICE 
		<VOLPRO,,>- 		; MAY OVERRIDE VOLUME PROTECTION 
		<PHY_IO,,>- 		; MAY DO PHYSICAL I/O 
		<BUGCHK,,>- 		; MAY MAKE BUG CHECK ERROR LOG ENTRIES 
		<PRMGBL,,>- 		; MAY CREATE PERMANENT GLOBAL SECTIONS 
		<SYSGBL,,>- 		; MAY CREATE SYSTEM WIDE GLOBAL SECTIONS 
		>	

	$DEFEND	PRV,$GBL,DEF

	.ENDM	$PRVDEF
 
; 
; MACROS TO DEFINE SYSTEM SERVICE FAILURE AND STATUS CODES. 
; 
; 
;	$STRUCT	SS 
; 
; THIS STRUCTURE IS NOW CONTAINED IN 'SSMSG.MDL' 
 
 
;+ 
; Define 32-bit VAX-11 error code longword fields 
; Changed to agree with Handbook - TNH 26-OCT-77 - CHANGE M 1 to P 1 
; Changed to agree with new status value  W. H. Brown 18-NOV-1977 
;- 
 
	.MACRO	$STSDEF,$GBL

	$DEFINI	STS,$GBL

 
							; Mark position for defining sub-fields below 
	$VIELD	STS,0,<- 				; Define top level fields 
- 
		<SEVERITY,3,M>- 			; severity code 
		<COND_ID,25,M>- 			; condition id 
		<CONTROL,4,M>- 			; control bits 
		>				; End of top level fields 
 
	. = 0 				; Position back to beg of structure 
	$VIELD	STS,0,<- 			; Define sub-fields of condition id 
		<SUCCESS,1,M>- 			; Success 
		<,2,M>- 				; skip severity field 
		<MSG_NO,13,M>- 			; Message number 
		>				; End of message number field 
 
	. = 0 			; Postion back to beginning of structure 
	$VIELD	STS,0,<- 			; Define sub-fields of message number and fac. no. 
		<,3,M>- 			; Skip severity field 
		<CODE,12,M>- 			; code 
		<FAC_SP,1,M>- 		; 1 if facility specific 
		<,11,M>-  
		<CUST_DEF,1,M>- 		; 1 if sub-system is customer (or CSS) defined 
		<INHIB_MSG,1,M>- 		; 1 if message should not be printed 
		<,3,M>- 			; reserved control bits 
		>			; End message number sub-fields 
 
	. = 0 			; Postion back to beg of structure 
	$VIELD	STS,0,<- 			; 
		<,16,M>- 			; Skip message nubmer field 
		<FAC_NO,12,M>- 		; Facility is 12 bits 
		<,4,M>- 			; Control bits 
		>	
 
;+ 
; Define severity codes 
;- 
 
$EQU	STS$K_WARNING	0			; WARNING 
$EQU	STS$K_SUCCESS	1			; SUCCESSFUL COMPLETION 
$EQU	STS$K_ERROR	2				; ERROR 
$EQU	STS$K_INFO	3				; INFORMATION 
$EQU	STS$K_SEVERE	4			; SEVERE ERROR 
 

	$DEFEND	STS,$GBL,DEF

	.ENDM	$STSDEF
 
; 
; DEFINE TERMINAL SPECIAL SYMBOLS 
; 
	.MACRO	$TTDEF,$GBL

	$DEFINI	TT,$GBL

$EQULST TT$C_,$GBL,1,1,<-  
		<BAUD_50>- 
		<BAUD_75>- 
		<BAUD_110>- 
		<BAUD_134>- 
		<BAUD_150>- 
		<BAUD_300>- 
		<BAUD_600>- 
		<BAUD_1200>- 
		<BAUD_1800>- 
		<BAUD_2000>- 
		>
$EQULST TT$C_,$GBL,,1,<-
		<BAUD_2400>- 
		<BAUD_3600>- 
		<BAUD_4800>- 
		<BAUD_7200>- 
		<BAUD_9600>- 
		>
$EQULST TT$_,$GBL,0,1,<-  
		<UNKNOWN,0>-  
		<VT05,1>-  
		<LAX,32>-  
		<LA36,32>-  
		<VT5X,64>-  
		<VT52,64>-  
		<VT55,65>-  
		>
	$VIELD	TT,0,<-  
		<PASSALL,,M>-  
		<NOECHO,,M>-  
		<NOTYPEAHD,,M>-  
		<ESCAPE,,M>-  
		<HOSTSYNC,,M>-  
		<TTSYNC,,M>-  
		<SCRIPT,,M>-  
		<LOWER,,M>-  
		<MECHTAB,,M>-  
		<WRAP,,M>-  
		<CRFILL,,M>-  
		<LFFILL,,M>-  
		<SCOPE,,M>-  
		<REMOTE,,M>-  
		<HOLDSCREEN,,M>-  
		<EIGHTBIT,,M>-  
		<MBXDSABL,,M>-  
		<NOBRDCST,,M>-  
		<READSYNC,,M>-  
		<,6,M>-  
		<PAGE,8,M>-  
		>	
	$VIELD	TT,0,<-  
		<,5,M>-  
		<ALTRPAR,,M>-  
		<PARITY,,M>-  
		<ODD,,M>-  
		>	

	$DEFEND	TT,$GBL,DEF

	.ENDM	$TTDEF
 
;+ 
; PROTECTION FIELD DEFINITIONS 
;- 
 
	.MACRO	$PRTDEF,$GBL

	$DEFINI	PRT,$GBL

 
$EQULST PRT$C_,$GBL,0,1,<-  
		<NA,  <^B0000>>- 	; NO ACCESS 
		<KR,  <^B0011>>- 	; KERNEL READ ONLY 
		<KW,  <^B0010>>- 	; KERNEL WRITE 
		<ER,  <^B0111>>- 	; EXEC READ ONLY 
		<EW,  <^B0101>>- 	; EXEC WRITE 
		<SR,  <^B1011>>- 	; SUPER READ ONLY 
		<SW,  <^B1000>>- 	; SUPER WRITE 
		<UR,  <^B1111>>- 	; USER READ ONLY 
		<UW,  <^B0100>>- 	; USER WRITE 
- 
		<ERKW,<^B0110>>- 	; EXEC READ KERNEL WRITE 
		>
$EQULST PRT$C_,$GBL,,1,<-
		<SRKW,<^B1010>>- 	; SUPER READ KERNEL WRITE 
		<SREW,<^B1001>>- 	; SUPER READ EXEC WRITE 
		<URKW,<^B1110>>- 	; USER READ KERNEL WRITE 
		<UREW,<^B1101>>- 	; USER READ EXEC WRITE 
		<URSW,<^B1100>>- 	; USER READ SUPER WRITE 
		<RESERVED,1>- 	; RESERVED 
		>
 

	$DEFEND	PRT,$GBL,DEF

	.ENDM	$PRTDEF
 
 
;+ 
;  PROCESSOR REGISTER DEFINITIONS 
;- 
 
	.MACRO	$PRDEF,$GBL

	$DEFINI	PR,$GBL

 
$EQULST PR$_,$GBL,0,1,<-  
		<KSP,0>- 				;KERNEL STACK POINTER 
		<ESP,1>- 				;EXECUTIVE STACK POINTER 
		<SSP,2>- 				;SUPERVISOR STACK POINTER 
		<USP,3>- 				;USER STACK POINTER 
		<ISP,4>- 				;INTERRUPT STACK POINTER 
		<P0BR,8>- 				;P0 BASE REGISTER 
		<P0LR,9>- 				;P0 LIMIT REGISTER 
		<P1BR,10>- 				;P1 BASE REGISTER 
		<P1LR,11>- 				;P1 LIMIT REGISTER 
		<SBR,12>- 				;SYSTEM BASE REGISTER 
		>
$EQULST PR$_,$GBL,,1,<-
		<SLR,13>- 				;SYSTEM LIMIT REGISTER 
		<PCBB,16>- 				;PROCESS CONTROL BLOCK BASE 
		<SCBB,17>- 				;SYSTEM CONTROL BLOCK BASE 
		<IPL,18>- 				;INTERRUPT PRIORITY LEVEL REGISTER 
		<ASTLVL,19>- 			;AST LEVEL REGISTER 
		<SIRR,20>- 				;SOFTWARE INTERRUPT REQUEST REGISTER 
		<SISR,21>- 				;SOFTWARE INTERRUPT SUMMARY REGISTER 
		<MAPEN,56>- 			;MAPPING ENABLE REGISTER 
		<TBIA,57>- 				;TRANSLATION BUFFER INVALIDATE ALL 
		<TBIS,58>- 				;TRANSLATION BUFFER INVALIDATE SINGLE 
		<ICCS,+^X18>- 			;INTERVAL CLOCK CONTROL STATUS REGISTER 
		>
$EQULST PR$_,$GBL,,1,<-
		<NICR,+^X19>- 			;INTERVAL CLOCK NEXT INTERVAL REGISTER 
		<ICR,+^X1A>- 			;INTERVAL CLOCK INTERVAL COUNT REGISTER 
		<TODR,+^X1B>- 			;TIME OF DAY REGISTER 
		<RXCS,+^X20>- 			;CONSOLE RECEIVER CONTROL STATUS REGISTER 
		<RXDB,+^X21>- 			;CONSOLE RECEIVER DATA BUFFER REGISTER 
		<TXCS,+^X22>- 			;CONSOLE TRANSMIT CONTROL STATUS REGISTER 
		<TXDB,+^X23>- 			;CONSOLE TRANSMIT DATA BUFFER REGISTER 
		<ACCS,+^X28>- 			;ACCELERATOR CONTROL STATUS REGISTER 
		<ACCR,+^X29>- 			;ACCELERATOR RESERVED 
		<WCSA,+^X2C>- 			;WCS ADDRESS REGISTER 
		<WCSD,+^X2D>- 			;WCS DATA REGISTER 
		>
$EQULST PR$_,$GBL,,1,<-
		<SBIFS,+^X30>- 			;SBI FAULT STATUS REGISTER 
		<SBIS,+^X31>- 			;SBI SILO REGISTER 
		<SBISC,+^X32>- 			;SBI COMPARATOR REGISTER 
		<SBIMT,+^X33>- 			;SBI MAINTENANCE REGISTER 
		<SBIER,+^X34>- 			;SBI ERROR REGISTER 
		<SBITA,+^X35>- 			;SBI TIMEOUT ADDRESS REGISTER 
		<SBIQC,+^X36>- 			;SBI QUADWORD CLEAR REGISTER 
		<PME,+^X3D>- 			;PERFORMANCE MONITOR ENABLE 
		<SID,+^X3E>- 			;SYSTEM IDENTIFICATION REGISTER 
		>

	$DEFEND	PR,$GBL,DEF

	.ENDM	$PRDEF
 
 
;+ 
; PROCESSOR STATUS LONGWORD MASK AND FIELD DEFINITIONS 
;- 
 
	.MACRO	$PSLDEF,$GBL

	$DEFINI	PSL,$GBL

 
	$VIELD	PSL,0,<- 			; PSL VIELD DEFINITIONS 
		<,4,M>-  
		<TBIT,,M>- 		; TBIT ENABLE 
		<IV,,M>- 			; INTEGER OVERFLOW 
		<FU,,M>- 			; FLOATING UNDEFINED 
		<DV,,M>- 			; DIVIDE BY ZERO 
		<,8,M>- 			; 
		<IPL,5,M>- 		; INTERRUPT PRIORITY LEVEL 
		<,1,M>- 			; 
		<PRVMOD,2,M>- 		; PREVIOUS PROCESSOR MODE 
		<CURMOD,2,M>- 		; CURRENT PROCESSOR MODE 
		<IS,,M>- 			; INTERRUPT STACK BIT 
		<FPD,,M>- 			; FIRST PART DONE 
		<,2,M>- 			; MUST BE ZERO 
		<TP,,M>- 			; TRACE TRAP PENDING 
		<CM,,M>- 			; COMPATIBILITY MODE BIT AND MASK 
		>				; END OF PSL VIELD DEFINITIONS 
; 
; MODE SYMBOL DEFINITIONS 
; 
$EQULST PSL$C_,$GBL,0,1,<-  
		<KERNEL>- 				; KERNEL MODE 
		<EXEC>- 				; EXEC MODE 
		<SUPER>- 				; SUPERVISOR MODE 
		<USER>- 				; USER MODE 
		>
 
$EQULST PSL$M_,$GBL,0,1,<-  
		<SAFBITS,<^C<PSL$M_TP!PSL$M_CM!PSL$M_FPD>@<-16>>>-  
		>
 

	$DEFEND	PSL,$GBL,DEF

	.ENDM	$PSLDEF
 
 
;+ 
; PROCESS OR GLOBAL SECTION DEFINITIONS 
;- 
	.MACRO	$SECDEF,$GBL

	$DEFINI	SEC,$GBL

 
; 
; ***** L_VBN, L_WINDOW, AND B_PFC MUST BE THE SAME OFFSET VALUES AS THE 
; ***** EQUIVALENTLY NAMED OFFSETS IN $PFLDEF 
; 
$DEF	SEC$L_GSD		 			;GLOBAL SECTION DESCRIPTOR ADDRESS 
$DEF	SEC$L_CCB		 			;CHANNEL CONTROL BLOCK ADDRESS IF PROCESS SECTION 
			.BLKL	1 
$DEF	SEC$W_SECXFL		 		;SECTION INDEX FORWARD LINK 
			.BLKW	1 
$DEF	SEC$W_SECXBL		 		;SECTION INDEX BACKWARD LINK 
			.BLKW	1 
$DEF	SEC$L_VPXPFC		 		;START VIRT PAGE INDEX & PFC 
	$VIELD	SEC,0,<- 			; 
		<VPX,22,>- 			; STARTING VIRTUAL PAGE INDEX 
		<,2,>- 			; UNUSED 
		<PFC,8,>- 			; PAGE FAULT CLUSTER 
		>	
			.BLKB	3 
$DEF	SEC$B_PFC		 			;PAGE FAULT CLUSTER 
			.BLKB	1 
$DEF	SEC$L_WINDOW		 		;WINDOW CONTROL BLOCK 
			.BLKL	1 
$DEF	SEC$L_VBN		 			;BASE VIRTUAL BLOCK NUMBER 
			.BLKL	1 
$DEF	SEC$W_FLAGS		 			;VARIOUS CONTROL FLAGS 
	$VIELD	SEC,0,<-  
		<GBL,1,M>- 			; GLOBAL SECTION 
		<CRF,1,M>- 			; COPY ON REFERENCE 
		<DZRO,1,M>- 			; DEMAND ZERO 
		<WRT,1,M>- 			; WRITABLE 
		<,4,M>- 			; SPARE 
		<AMOD,2,M>- 			; ACCESS MODE OF SECTION 
		<,4,M>- 			; SPARE 
		<PERM,1,M>- 			; PERMANENT SECTION 
		<SYSGBL,1,M>- 		; 1 = SYSTEM GLOBAL, 0 = GROUP GLOBAL 
		>	
			.BLKB	1 
$DEF	SEC$B_AMOD		 		;ACCESS MODE OF SECTION 
			.BLKB	1 
				 			;SPARE 
			.BLKW	1 
$DEF	SEC$L_REFCNT		 		;COUNT OF PTE'S REFERENCING THIS SECTION 
			.BLKL	1 
$DEF	SEC$L_PAGCNT		 		;NO. OF PAGES IN THE SECTION 
; 
; ***** NOTE THAT NUMBER OF LONG WORDS MUST BE EVEN 
; 
			.BLKL	1 
$DEF	SEC$C_LENGTH
$DEF	SEC$K_LENGTH					;SIZE OF PSTE/GSTE 
 
;+ 
; MATCH CONTROL VIELD VALUES 
;- 
 
$EQULST SEC$K_,$GBL,0,1,<- 			; BASE OF ZERO , INCR 1 
		<MATALL>- 				; MATCH ALWAYS, USE GLOBAL SECTION 
		<MATEQU>- 				; MATCH IF ISD$L_IDENT EQU GBL ID 
		<MATLEQ>- 				; MATCH IF ISD$L_IDENT LEQ GBL ID 
		>
 
 

	$DEFEND	SEC,$GBL,DEF

	.ENDM	$SECDEF
 
; 
; DEFINE SYMBIONT MANAGER REQUEST CODES 
; 
 
	.MACRO	$SMRDEF,$GBL

	$DEFINI	SMR,$GBL

 
$EQULST SMR$K_,$GBL,0,1,<- 		; SYMBIONT MANAGER REQUEST CODES 
		<INITIAL>- 			; INITIALIZE A QUEUE 
		<DELETE>- 			; DELETE THE QUEUE 
		<START>- 			; ACTIVATE OR RESUME PRINTING 
		<PAUSE>- 			; SUSPEND PRINTING FOR A WHILE 
		<MERGE>- 			; MOVE FILES FORM ONE QUEUE INTO ANOTHER 
		<REDIRECT>- 		; ASSIGNMENT OF ONE QUEUE TO ANOTHER 
		<JUSTIFY>- 			; JUSTIFY PRINT FORMS(IE: ISSUE FF) 
		<STOP>- 			; DISABLE FURTHER DE-QUEING 
		<ENTER>- 			; ADD A FILE TO A QUEUE 
		<CREJOB>- 			; CREATE A PRINT JOB 
		>
$EQULST SMR$K_,$GBL,,1,<-
		<ADDFIL>- 			; ADD A FILE TO EXISTING JOB 
		<CLSJOB>- 			; CLOSE OPEN JOB 
		<RMVJOB>- 			; REMOVE JOB FROM QUEUE 
		<ALTER>- 			; CHANGE A FILES CHARACTERISTICS 
		<ABORT>- 			; ABORT CURRENT JOB, START NEXT 
		<RELEASE>- 			; RELEASE JOB FROM HOLD LIST 
		<DETINIT>- 			; DETACHED JOB HAS INITIATED 
		<SYNCJOB>- 			; SYNCRONIZE WITH A BATCH JOB 
		>
; 
; ASSIGN SYMBIONT MANAGER PRINT JOB/RECORD OPTION CODES 
; 
; 
$EQULST SMO$K_,$GBL,1,1,<- 		; JOB FILE OPTIONS 
		<DELETE>- 			; DELETE THE FILE AFTER PRINTING 
		<BRSTPAG>- 			; CREATE A BURST PAGE 
		<NOBRSTPAG>- 		; INHIBIT BURST PAGE 
		<FLAGPAG>- 			; PRINT A FLAG PAGE 
		<NOFLAGPAG>- 		; INHIBIT A FLAG PAGE 
		<PAGHDR>- 			; PRINT FILENAME AS PAGE HEADER 
		<DOUBLE>- 			; DOUBLE SPACE THE LISTING 
		<NOFEED>- 			; INHIBIT FORM FEED GENERATION 
		<PAGCNT>- 			; SPECIFY PAGE COUNT TO PRINT 
		<COPIES>- 			; NUMBER OF COPIES TO PRINT 
		>
 
$EQULST SMO$K_,$GBL,32,1,<- 		; OPTIONS FOR CREATE JOB 
		<RLSTIM>- 			; TIME TO HOLD UNTIL QUEUEING 
		<HOLD>- 			; HOLD THE JOB 
		<JOBPRI>- 			; SPECIFY PRINT JOB/DETACHED JOB PRIOITY 
		<JOBCOPY>- 			; NUMBER OF COPIES OF ENTIRE JOB 
		<FORMTYPE>- 		; FORM TYPE TO USED WHEN PRINTED 
		<LOWER>- 			; UPPER/LOWER CASE PRINTER ONLY 
		<PARAMS>- 			; SUPPLY JOB PARAMETERS 
		<JOBNAME>- 			; SUPPLY A NAME TO THE JOB 
		<NOLOWER>- 			; CLEAR LOWER CASE REQUIRED 
		>
 
$EQULST SMO$K_,$GBL,64,1,<- 		; OPTIONS FOR INIT OR START A QUEUE 
		<CURFORM>- 			; CURRENT FORMS MOUNTED ON DEVICE 
		<GENPRT>- 			; ALLOW GENERIC PRINTING 
		<NOGENPRT>- 		; DISALLOW GENERIC PRINTING 
		<DETJOB>- 			; QUEUE IS FOR DETACHED JOB QUEUING 
		<GENDEV>- 			; QUEUE IS GENERIC DEVICE QUEUE 
		<NOGENDEV>- 		; NOT A GENERIC DEVICE 
		<DEFBRST>- 			; QUEUE HAS BURST PAGE BY DEFAULT 
		<NODEFBRST>- 		; NO DEFAULT BURST PAGE 
		<DEFFLAG>- 			; QUEUE HAS FLAG PAGE BY DEFAULT 
		<NODEFFLAG>- 		; NO DEFAULT FLAG 
		>
$EQULST SMO$K_,$GBL,,1,<-
		<TRMDEV>- 			; DEVICE IS A TERMINAL 
		<NOTRMDEV>- 		; DEVICE IS NOT A TERMINAL 
		<JOBLIM>- 			; JOB LIMIT FOR BATCH JOBS 
		<INIPRI>- 			; JOB INITIAL PRIORITY 
		<DISWAP>- 			; DISABLE SWAPING 
		>
 
$EQULST SMO$K_,$GBL,96,1,<- 		; OPTIONS FOR RESTART 
		<NEXTJOB>- 			; RESTART AT END BEGINNING OF NEXT JOB 
		<TOPOFILE>- 		; RESTART JOB AT TOP-OF-FILE 
		<SPCCNT>- 			; SPECIFY PAGES TO SPACE OVER 
		>
 
$EQULST SMO$K_,$GBL,112,1,<- 		; OPTIONS FOR ABORT 
		<REQUEUE>- 			; REQUEUE THE FILE 
		>

	$DEFEND	SMR,$GBL,DEF

	.ENDM	$SMRDEF
; 
; DEFINE SYMBIONT MANAGER QUEUE DATA STRUCTURES 
; 
; 
; 
; DEFINE FORMAT FOR RECORDS IN THE QUEUE 
; 
;	EACH RECORD IN THE QUEUE IS 64 BYTES LONG 
;	THERE ARE 3 TYPES OF RECORDS 
; 
;		1. JOB HEADER FOR BATCH OR PRINT JOBS 
;		2. PRINT FILE RECORD 
;		3. BATCH JOB RECORD 
;	THE LAST 2 HAVE THE SAME LAYOUT 
; 
	.MACRO	$SYMDEF,$GBL		; THE RECORD ENVELOP STRUCTURE 

	$DEFINI	SYM,$GBL

 
				 			; DUMMY FIELD OF RECORD SIZE 
			.BLKB	64 
$DEF	SYM$C_RECSIZE
$DEF	SYM$K_RECSIZE					; SIZE OF THE STRUCTURE 
 

	$DEFEND	SYM,$GBL,DEF

	.ENDM	$SYMDEF
 
; 
; DEFINE FORMAT FOR SYMBIONT MANAGER JOB HEADER RECORD 
; 
	.MACRO	$SJHDEF,$GBL

	$DEFINI	SJH,$GBL

 
$DEF	SJH$L_RECLINK		 			; LINK TO NEXT RECORD 
			.BLKL	1 
$DEF	SJH$W_JOBSEQ		 		; JOB SEQUENCE NUMBER 
			.BLKW	1 
$DEF	SJH$W_QINDEX		 		; INDEX TO DEVICE QUEUE FOR THIS JOB 
			.BLKW	1 
$DEF	SJH$L_NEXTJOB		 			; LINK TO NEXT PRINT JOB 
			.BLKL	1 
$DEF	SJH$B_FLAGS		 			; FLAGS 
	$VIELD	SJH,0,<- 				; RECORD FLAGS 
		<HOLD,,M>- 			; JOB IS ON HOLD 
		<LOWER,,M>- 			; JOB REQUIRES LOWER CASE PRINTER 
		<JOBABORT,,M>- 		; JOB WAS ABORTED 
		>	
						; MARK POINT OF OVERLAPPED DEFINITION 
			.BLKB	1 
$DEF	SJH$B_FORMS		 			; FORMS TYPE FOR JOB 
			.BLKB	1 
$DEF	SJH$B_COPYCNT		 		; NUMBER OF COPIES OF ENTIRE JOB 
			.BLKB	1 
	. = 12 			; POINT BACK FOR BATCH QUEUE SLOT 
			.BLKB	1 
$DEF	SJH$W_MBCHAN		 		; RESPONCE MAILBOX CHANNEL 
			.BLKW	1 
$DEF	SJH$B_PRTPRI		 		; PRINT PRIORITY FOR JOB 
			.BLKB	1 
$DEF	SJH$L_PROCID		 			; PROCESS ID OF OWNER 
; ** ADJACENCY OF THE NEXT 2 ITEMS ASSUMED 
			.BLKL	1 
$DEF	SJH$L_UIC		 			; UIC OF OWNER OF JOB 
			.BLKL	1 
$DEF	SJH$T_USERNAM		 		; NAME OF OWNER 
; ** ADJACENCY OF THE LAST 2 ITEMS ASSUMED 
			.BLKB	12 
$DEF	SJH$Q_ACNTNAM		 		; ACCOUNT TO GET CHARGED 
			.BLKQ	1 
$DEF	SJH$Q_TIME		 			; TIME JOB WAS CREATED 
			.BLKQ	1 
$DEF	SJH$Q_JOBNAME		 		; JOB NAME 
			.BLKQ	1 
$DEF	SJH$L_PARMBLK		 			; PARAMETER BLOCK 
 
			.BLKL	1 

	$DEFEND	SJH,$GBL,DEF

	.ENDM	$SJHDEF
 
; 
; DEFINE FORMAT OF SYMBIONT MANAGER QUEUE RECORD 
; 
	.MACRO	$SQRDEF,$GBL

	$DEFINI	SQR,$GBL

 
$DEF	SQR$L_RECLINK		 			; LINK TO NEXT RECORD 
			.BLKL	1 
$DEF	SQR$W_JOBSEQ		 		; JOB SEQUENCE NUMBER 
			.BLKW	1 
$DEF	SQR$W_RECID		 			; ID THIS A RECORD 
; 
; NOTE:	THE ORDER OF THIS RECORD CAN NOT BE CHANGED WITH OUT EFFECTING 
;	THE SYMBIONT, AND THE SYMBIONT MANAGER MESSAGE FORMAT 
; 
			.BLKW	1 
$DEF	SQR$T_VOLNAM		 		; VOLUME NAME UPON WHICH FILE RESIDES 
			.BLKB	16 
$DEF	SQR$W_FILNUM		 		; FILE NUMBER TO PRINT/EXECUTE 
			.BLKW	1 
$DEF	SQR$W_FILSEQ		 		; FILE SEQUENCE NUMBER 
			.BLKW	1 
$DEF	SQR$W_RELVOL		 		; FILE RELATIVE VOLUME NUMBER 
			.BLKW	1 
$DEF	SQR$W_DIRNUM		 		; DIRECTORY FILE NUMBER 
			.BLKW	1 
$DEF	SQR$W_DIRSEQ		 		; DIRECTORY SEQUENCE NUMBER 
			.BLKW	1 
$DEF	SQR$W_DIRVOL		 		; DIRECTORY VOLUME INDEX 
			.BLKW	1 
$DEF	SQR$T_FILNAM		 		; 19 BYTE FILE NAME AND A COUNT BYTE 
			.BLKB	20 
$DEF	SQR$B_FLAGS		 			; VARIOUS FLAGS 
	$VIELD	SQR,0,<- 				; QUEUE RECORD FLAGS 
		<DELETE,,M>- 			; DELETE THE FILE 
		<FLAGPAG,,M>- 			; PRINT A FLAG PAGE 
		<BRSTPAG,,M>- 			; PRINT A BURST PAGE 
		<DOUBLE,,M>- 			; DOUBLE SPACE THE LISTING 
		<NOFEED,,M>- 			; NO IMPLIED FORM FEEDS 
		<PAGHDR,,M>- 			; PRINT FILE NAME AS HEADER 
		>	
			.BLKB	1 
$DEF	SQR$B_COPYCNT		 		; NUMBER OF COPIES TO PRINTED 
			.BLKB	1 
$DEF	SQR$W_PAGCNT		 		; MAXIMUM PAGES TO PRINT 
 
			.BLKW	1 

	$DEFEND	SQR,$GBL,DEF

	.ENDM	$SQRDEF
; 
; DEFINE SYMBIONT QUEUE HEADER RECORD FORMAT 
; 
	.MACRO	$SQHDEF,$GBL

	$DEFINI	SQH,$GBL

 
$DEF	SQH$L_FREEREC		 			; OFFSET TO FIRST FREE RECORD 
			.BLKL	1 
$DEF	SQH$B_FLAGS		 			; STATUS FLAGS 
			.BLKB	1 
$DEF	SQH$B_NUMQUE		 		; NUMBER OF ACTIVE QUEUES 
			.BLKB	1 
$DEF	SQH$B_MAXQUE		 		; MAXIMUM NUMBER OF QUEUES 
			.BLKB	1 
$DEF	SQH$B_SPARE		 			; SPARE BYTE 
			.BLKB	1 
$DEF	SQH$L_FIRSTREC		 		; FIRST RECORD 
			.BLKL	1 
$DEF	SQH$L_NEXTREC		 			; OFFSET TO NEXT FREE RECORD 
			.BLKL	1 
$DEF	SQH$L_LASTREC		 			; OFFSET TO LAST RECORD IN FILE 
			.BLKL	1 
$DEF	SQH$L_OPENJOB		 			; LIST OF OPEN PRINT JOBS 
			.BLKL	1 
$DEF	SQH$L_TIMQUE		 			; LIST OF JOBS WAITING ON TIME BASES 
			.BLKL	1 
$DEF	SQH$W_QUESEQ		 		; QUEUE SEQUENCE NUMBER 
			.BLKW	1 
				 			; DUMMY SPARE FIELD 
			.BLKW	1 
$DEF	SQH$Q_QUEUE		 		; 32 PRIORIT ORDER PRINT QUEUES 
			.BLKQ	32 
$DEF	SQH$C_SIZE
$DEF	SQH$K_SIZE					; SIZE OF THE QUEUE HEADER 
 

	$DEFEND	SQH,$GBL,DEF

	.ENDM	$SQHDEF
 
; 
; DEFINE FORMAT FOR SYMBIONT MANAGER QUEUE HEADER 
; 
	.MACRO	$SMQDEF,$GBL

	$DEFINI	SMQ,$GBL

 
$DEF	SMQ$L_CURRENT		 			; CURRENTLY PRINTING JOB 
			.BLKL	1 
$DEF	SMQ$L_HOLDLST		 			; QUEUE HOLDING LIST 
			.BLKL	1 
				 			; DUMMY FIELD 
$DEF	SMQ$B_FLAGS		 		; QUEUE FLAG BYTE 
	$VIELD	SMQ,0,<- 				; QUEUE STATUS FLAGS 
		<INUSE,,M>- 			; QUEUE IS IN USE 
		<DETJOB,,M>- 			; QUEUE IS FOR DETACHED JOBS,NOT PRINTER 
		<PAUSED,,M>- 			; PRINTED IS SUSPENDED 
		<STOPPED,,M>- 			; QUEUE IS STOPPED 
		<GENDEV,,M>- 			; QUEUE IS GENERIC 
		<NOGENERIC,,M>- 		; GENERIC QUEUE PRINTING NOT ALLOWED 
		>	
			.BLKB	1 
$DEF	SMQ$B_FORMS		 		; FORMS TYPE ON PRINTER AT LAST START 
$DEF	SMQ$B_JOBCNT		 		; JOB COUNT FOR BATCH QUEUES 
			.BLKB	1 
$DEF	SMQ$B_CHAR		 			; CHARACTERISTICS 
	$VIELD	SMQ,0,<- 				; CHARACTERISTICS FOR DEVICE QUEUES 
		<DEFFLAG,,M>- 			; DEFAULT A FLAG PAGE 
		<DEFBRST,,M>- 			; DEFAULT A BURST PAGE 
		<TRMDEV,,M>- 			; QUEUE IS FOR A TERMINAL 
		<LOWER,,M>- 			; DEVICE SUPPORTS LOWER CASE PRINTING 
		<REDIRECT,,M>- 		; DEVICE IS CURRENTLY REDIRECTED 
		>	
	$VIELD	SMQ,0,<- 				; CHARACTERISTICS FOR BATCH QUEUES 
		<INIPRI,4,M>- 		; INITIAL PRIORITY 
		<NOSWAP,,M>- 			; DISABLE SWAPING 
		>	
			.BLKB	1 
$DEF	SMQ$B_JOBLIM		 		; JOB LIMIT FOR BATCH QUEUES 
			.BLKB	1 
$DEF	SMQ$L_ASNSCT		 			; ADDRESS OF ASSIGNED SYMB CONTROL TBL 
			.BLKL	1 
$DEF	SMQ$T_NAME		 		; NAME OF QUEUE 
			.BLKB	16 
$DEF	SMQ$C_SIZE
$DEF	SMQ$K_SIZE					; SIZE OF THIS STRUCTURE 
 

	$DEFEND	SMQ,$GBL,DEF

	.ENDM	$SMQDEF
 
	.MACRO	$DJIDEF,$GBL		; DETACHED JOB INITIATE MESSAGE 

	$DEFINI	DJI,$GBL

 
$DEF	DJI$W_MSGTYP		 		; THE MESSAGE FROM SYMBIONT MANAGER 
			.BLKW	1 
$DEF	DJI$B_FLAGS		 			; CONTROL FLAGS 
			.BLKB	1 
				 			; SPARE 
			.BLKB	1 
$DEF	DJI$L_UIC		 			; USERS USER IDENTIFICATION CODE 
			.BLKL	1 
$DEF	DJI$T_USERNAM		 		; USERS NAME 
			.BLKB	12 
$DEF	DJI$T_ACNTNAM		 		; ACCOUNT TO RUN JOB 
			.BLKB	8 
$DEF	DJI$T_VOLNAM		 		; DISK UPON WHICH RESIDES THE FILE 
			.BLKB	16 
$DEF	DJI$W_FILEID		 		; THE FILE ID OF THE FILE 
			.BLKW	3 
$DEF	DJI$W_DIRID		 		; DIRECTORY ID FOR FILE 
			.BLKW	3 
$DEF	DJI$T_JOBNAME		 		; JOB NAME FOR LOG 
			.BLKB	8 
$DEF	DJI$T_PARMS		 		; COMMAND PARAMETERS 
			.BLKB	64 
$DEF	DJI$C_SIZE
$DEF	DJI$K_SIZE					; SIZE OF THE STRUCTURE 
 

	$DEFEND	DJI,$GBL,DEF

	.ENDM	$DJIDEF
 
; 
; TPARSE CONTROL BLOCK. THIS BLOCK IS ONE OF THE ARGUMENTS USED TO CALL TPARSE, 
; AND BECOMES THE ARGUMENT LIST TO ACTION ROUTINES. 
; 
	.MACRO	$TPADEF,$GBL

	$DEFINI	TPA,$GBL

$DEF	TPA$L_COUNT		 				; ARGUMENT COUNT (NUMBER OF LONGWORDS) 
$EQU	TPA$K_COUNT0	8				; ZERO LEVEL VALUE IS 8 
			.BLKL	1 
$DEF	TPA$L_OPTIONS		 			; OPTIONS LONGWORD 
	$VIELD	TPA,0,<-  
		<BLANKS,,M>- 			; PROCESS BLANKS AND TABS EXPLICITLY 
		<ABBREV,,M>- 			; ALLOW MINIMAL ABBREVIATION 
		<ABBRFM,,M>- 			; ALLOW FIRST MATCH ABBREVIATION 
		<,13,M>-  
		<AMBIG,,M>- 			; AMBIGUOUS KEYWORD AT THIS STATE 
		>	
			.BLKB	3 
$DEF	TPA$B_MCOUNT		 		; MINIMUM ABBREVIATION ON KEYWORDS 
			.BLKB	1 
$DEF	TPA$L_STRINGCNT		 			; BYTE COUNT OF STRING BEING PARSED 
			.BLKL	1 
$DEF	TPA$L_STRINGPTR		 			; ADDRESS OF STRING BEING PARSED 
			.BLKL	1 
$DEF	TPA$L_TOKENCNT		 			; BYTE COUNT OF CURRENT MATCHING TOKEN 
			.BLKL	1 
$DEF	TPA$L_TOKENPTR		 			; ADDRESS OF MATCHING TOKEN 
			.BLKL	1 
$DEF	TPA$L_CHAR		 				; ASCII CODE OF SINGLE CHARACTER TOKEN 
			.BLKL	1 
$DEF	TPA$L_NUMBER		 			; NUMERIC VALUE OF NUMERIC TOKEN 
			.BLKL	1 
$DEF	TPA$L_PARAM		 				; PARAMETER LONGWORD FROM STATE TABLE 
			.BLKL	1 
$DEF	TPA$C_LENGTH0
$DEF	TPA$K_LENGTH0					; LENGTH OF ZERO LEVEL PARAMETER BLOCK 

	$DEFEND	TPA,$GBL,DEF

	.ENDM	$TPADEF
 
; 
; DEFINITIONS FOR STATUS, CHARACTERISTICS AND ERRORS FOR DMC-11 
; 
	.MACRO	$XMDEF,$GBL

	$DEFINI	XM,$GBL

	$VIELD	XM,0,<- 				; DEVICE DEPENDENT LONGWORD 
		<CHR_MOP,,M>- 			; MOP MODE 
		<CHR_LOOPB,,M>- 			; LOOP BACK 
		<CHR_HDPLX,,M>- 			; HALF DUPLEX 
		<CHR_SLAVE,,M>- 			; HALF DUPLEX SLAVE STATION 
		<CHR_MBX,,M>- 				; MAILBOX IS ENABLED 
		<,3,M>- 				; SPARE 
		<STS_DCHK,,M>- 			; DATA CHECK OCCURED 
		<STS_TIMO,,M>- 			; TIMEOUT OCCURED 
		<STS_ORUN,,M>- 			; DATA OVER RUN OCCURED 
		<STS_ACTIVE,,M>- 			; ACTIVE UNIT 
		<,2,M>- 				; SPARE 
		<STS_DISC,,M>- 			; LINE DISCONNECT OCCURED 
		<,1,M>- 				; SPARE 
		<ERR_FATAL,,M>- 			; HARDWARE ERROR 
		<,2,M>-  
		<ERR_MAINT,,M>- 			; DDCMP MAINT MESSAGE RECEIVED 
		<ERR_LOST,,M>- 			; DATA LOST BECAUSE OF BUFFER SIZE MISMATCH 
		<,2,M>- 				; SPARE 
		<ERR_START,,M>- 			; DDCMP START MESSAGE RECEIVED 
		>	

	$DEFEND	XM,$GBL,DEF

	.ENDM	$XMDEF
