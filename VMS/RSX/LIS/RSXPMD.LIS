RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 05:10:43   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      99  RSX$PMD - PMD EXITITING IMAGE
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 05:10:43   VAX-11 MACRO X0.3-11               Page   1
V06.0                                                                                                                            (1)

                                     0000     1 	.TITLE	RSXPMD - PMD ROUTINE FOR RSX11M AME
                                     0000     2 	.IDENT	/V06.0/
                                     0000     3 ;
                                     0000     4 ; COPYRIGHT (C) 1978
                                     0000     5 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     6 ;
                                     0000     7 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     8 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000     9 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    10 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    11 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    12 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    13 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    14 ;
                                     0000    15 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    16 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    17 ; EQUIPMENT CORPORATION.
                                     0000    18 ;
                                     0000    19 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    20 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    21 ;
                                     0000    22 ;++
                                     0000    23 ;
                                     0000    24 ; FACILTIY:
                                     0000    25 ;
                                     0000    26 ;	VAX/VMS RSX-11M AME
                                     0000    27 ;
                                     0000    28 ; ABSTRACT:
                                     0000    29 ;
                                     0000    30 ;	PMD ROUTINE FOR IMAGE TERMINATION.
                                     0000    31 ;
                                     0000    32 ; AUTHOR: R.HEINEN 3-JUN-77
                                     0000    33 ;--
                                     0000    34 ;
                                     0000    35 ; EXTERNAL DEFINITIONS
                                     0000    36 ;
                                     0000    37 	$RSXDEF				; DEFINE INTERNAL RSX DEFINITIONS
                                     0000    38 ;
                                     0000    39 ; LOCAL STORAGE
                                     0000    40 ;
                                     0000    41 ;
                                 00000000    42 	.PSECT	RSXIMPURE,LONG,EXE,NOSHR
                                     0000    43 ;
                                     0000    44 ; FAB AND RAB FOR OUTPUT FILE
                                     0000    45 ;
                                     0000    46 PMDFAB:	$FAB	FAC=<PUT>,RAT=<CR>,DNA=DEFAUL,DNS=16,NAM=RESULT
                                     0050    47 PMDRAB:	$RAB	FAB=PMDFAB
                                     0094    48 RESULT:	$NAM	ESA=FILENAM,ESS=50
                           000000CD  00CC    49 	.BLKB	1
                           000000FF  00CD    50 FILENAM:	.BLKB	50
                                     00FF    51  
                                 00000000    52 	.PSECT	RSXPURE,NOWRT,LONG,EXE,SHR,PIC
                                     0000    53  
44 4D 50 3A 4B 53 49 44 24 53 59 53  0000    54 DEFAUL:	.ASCII	/SYS$DISK:PMD.PMD/
                        44 4D 50 2E  000C       
2F 3A 54 55 50 4E 49 24 53 59 53 00' 0010    55 INPUTOUTPUT:	.ASCIC	\SYS$INPUT:/SYS$OUTPUT\
      54 55 50 54 55 4F 24 53 59 53  001C       
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 05:10:43   VAX-11 MACRO X0.3-11               Page   2
V06.0                                                                                                                            (1)

                                 15  0010       
                                     0026    56 ;
                                     0026    57 ; MESSAGES FOR OUTPUT
                                     0026    58 ;
                              0C 01  0026    59 FORM:	.BYTE	1,12		
4D 2D 54 53 4F 50 09 09 09 0A 0D 00' 0028    60 HDRMSG:	.ASCIC	<13><10>/			POST-MORTEM DUMP/
      50 4D 55 44 20 4D 45 54 52 4F  0034       
                                 15  0028       
20 4C 41 43 49 47 4F 4C 20 0A 0D 00' 003E    61 LUNMSG:	.ASCIC	<13><10>/ LOGICAL UNIT   DEVICE/
43 49 56 45 44 20 20 20 54 49 4E 55  004A       
                                 45  0056       
                                 18  003E       
20 59 41 4C 52 45 56 4F 20 0A 0D 00' 0057    62 OVLYMSG:.ASCIC	<13><10>/ OVERLAY SEGMENTS LOADED/<13><10>
41 4F 4C 20 53 54 4E 45 4D 47 45 53  0063       
                     0A 0D 44 45 44  006F       
                                 1C  0057       
41 20 20 4B 43 41 54 53 20 0A 0D 00' 0074    63 STKMSG:	.ASCIC	<13><10>/ STACK  ADDRESS CONTENTS ASCII RAD50/
45 54 4E 4F 43 20 53 53 45 52 44 44  0080       
41 52 20 49 49 43 53 41 20 53 54 4E  008C       
                           30 35 44  0098       
                                 26  0074       
                                     009B    64 ;
                                     009B    65 ; FAO CONTROL STRINGS
                                     009B    66 ;
                                     009B    67 NAMFAO:
41 21 20 3A 4B 53 41 54 20 0A 0D 00' 009B    68 	.ASCIC	<13><10>/ TASK: !AC				TIME: !%D/
21 20 3A 45 4D 49 54 09 09 09 09 43  00A7       
                              44 25  00B3       
                                 19  009B       
                                     00B5    69 PCFAO:
09 57 4F 21 20 3A 43 50 20 0A 0D 00' 00B5    70 	.ASCIC	<13><10>/ PC: !OW	!AD/
                           44 41 21  00C1       
                                 0E  00B5       
                                     00C4    71 REG1FAO:
4F 52 09 3A 53 47 45 52 20 0A 0D 00' 00C4    72 	.ASCIC	<13><10>/ REGS:	RO - !OW  R1 - !OW  R2 - !OW  R3 - !OW/
2D 20 31 52 20 20 57 4F 21 20 2D 20  00D0       
21 20 2D 20 32 52 20 20 57 4F 21 20  00DC       
57 4F 21 20 2D 20 33 52 20 20 57 4F  00E8       
                                 2F  00C4       
                                     00F4    73 REG2FAO:
20 34 52 20 20 20 20 20 20 20 20 00' 00F4    74 	.ASCIC	/        R4 - !OW  R5 - !OW  SP - !OW  PS - !OW/
20 2D 20 35 52 20 20 57 4F 21 20 2D  0100       
4F 21 20 2D 20 50 53 20 20 57 4F 21  010C       
   57 4F 21 20 2D 20 53 50 20 20 57  0118       
                                 2E  00F4       
41 54 53 20 4B 53 41 54 20 0A 0D 00' 0123    75 STSFAO:	.ASCIC	<13><10>/ TASK STATUS: /
                     20 3A 53 55 54  012F       
                                 10  0123       
                                     0134    76 EFNFAO:
4C 46 20 54 4E 45 56 45 20 0A 0D 00' 0134    77 	.ASCIC	<13><10>/ EVENT FLAGS: !OW !OW !OW !OW/
57 4F 21 20 57 4F 21 20 3A 53 47 41  0140       
            57 4F 21 20 57 4F 21 20  014C       
                                 1F  0134       
                                     0154    78 UICFAO:
20 54 4E 45 52 52 55 43 20 0A 0D 00' 0154    79 	.ASCIC	<13><10>/ CURRENT DIRECTORY: !AC    DSW: !OW/
21 20 3A 59 52 4F 54 43 45 52 49 44  0160       
21 20 3A 57 53 44 20 20 20 20 43 41  016C       
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 05:10:43   VAX-11 MACRO X0.3-11               Page   3
V06.0                                                                                                                            (1)

                              57 4F  0178       
                                 25  0154       
                                     017A    80 PRIFAO:
59 54 49 52 4F 49 52 50 20 0A 0D 00' 017A    81 	.ASCIC	<13><10>/ PRIORITY:  !ZB/
                  42 5A 21 20 20 3A  0186       
                                 11  017A       
                                     018C    82 LOAFAO:
56 45 44 20 44 41 4F 4C 20 0A 0D 00' 018C    83 	.ASCIC	<13><10>/ LOAD DEVICE - !AC:/
      3A 43 41 21 20 2D 20 45 43 49  0198       
                                 15  018C       
                                     01A2    84 LUTFAO:
57 4F 21 20 20 20 20 20 20 20 20 00' 01A2    85 	.ASCIC	/        !OW  !AC:/
                  3A 43 41 21 20 20  01AE       
                                 11  01A2       
                                     01B4    86 OVLYFAO:
52 20 47 4E 49 54 52 41 54 53 20 00' 01B4    87 	.ASCIC	/ STARTING RELITIVE BLOCK: !OW  BASE: !OW  LENGTH: !OW/
43 4F 4C 42 20 45 56 49 54 49 4C 45  01C0       
45 53 41 42 20 20 57 4F 21 20 3A 4B  01CC       
54 47 4E 45 4C 20 20 57 4F 21 20 3A  01D8       
                  57 4F 21 20 3A 48  01E4       
                                 35  01B4       
                                     01EA    88 STKFAO:
57 4F 21 20 20 20 20 20 20 20 20 00' 01EA    89 	.ASCIC	/        !OW  !OW   !AF    !AC/
20 46 41 21 20 20 20 57 4F 21 20 20  01F6       
                  43 41 21 20 20 20  0202       
                                 1D  01EA       
                                     0208    90 LIMFAO:
20 4C 41 55 54 52 49 56 20 0A 0D 00' 0208    91 	.ASCIC	<13><10>/ VIRTUAL LIMITS: !OW - !OW/<13><10>
20 57 4F 21 20 3A 53 54 49 4D 49 4C  0214       
               0A 0D 57 4F 21 20 2D  0220       
                                 1E  0208       
                                     0227    92 DMPFAO:
20 20 57 4F 21 20 20 57 4F 21 20 00' 0227    93 	.ASCIC	/ !OW  !OW  !OW  !OW  !OW   !! !AD!! !AF/
4F 21 20 20 57 4F 21 20 20 57 4F 21  0233       
21 21 44 41 21 20 21 21 20 20 20 57  023F       
                        46 41 21 20  024B       
                                 27  0227       
                                     024F    94 BYTFAO:
42 4F 21 20 20 20 20 20 20 20 20 00' 024F    95 	.ASCIC	/        !OB !OB !OB !OB !OB !OB !OB !OB/
42 4F 21 20 42 4F 21 20 42 4F 21 20  025B       
42 4F 21 20 42 4F 21 20 42 4F 21 20  0267       
                        42 4F 21 20  0273       
                                 27  024F       
                                     0277    96 DUPFAO:
54 41 43 49 4C 50 55 44 20 0A 0D 00' 0277    97 	.ASCIC	<13><10>/ DUPLICATE FROM !OW TO !OW/<13><10>
54 20 57 4F 21 20 4D 4F 52 46 20 45  0283       
               0A 0D 57 4F 21 20 4F  028F       
                                 1E  0277       
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 05:10:43   VAX-11 MACRO X0.3-11               Page   4
V06.0           RSX$PMD - PMD EXITITING IMAGE                                                                                    (2)

                                     0296    99 	.SBTTL	RSX$PMD - PMD EXITITING IMAGE
                                     0296   100  
                                 00000000   101 	.PSECT	RSXCODE,NOWRT,SHR,PIC
                                     0000   102 ;++
                                     0000   103 ; RSX$PMD - PMD THE EXITING IMAGE
                                     0000   104 ;
                                     0000   105 ; FUNCTIONAL DESCRIPTION:
                                     0000   106 ;
                                     0000   107 ; THIS ROUTINE IS ENTERED DURING IMAGE EXIT IF AN ABORT HAS OCCURED 
                                     0000   108 ; AND THE TASK HAS THE PMD ON EXIT BIT SET.
                                     0000   109 ; A FILE IS CREATED THAT CONTAINS THE DUMP. THE FILE IS CALLED:
                                     0000   110 ;
                                     0000   111 ; DISK:[DIRECTORY]PROCESSNAME.PMD OR DISK:[DIRECTORY]INPUTDEVICE.PMD
                                     0000   112 ;
                                     0000   113 ; INPUTS:
                                     0000   114 ;
                                     0000   115 ;	R9 = RSX ABORT CODE
                                     0000   116 ;	R10 = ADDRESS OF THE IMAGE IMPURE VECTOR
                                     0000   117 ;
                                     0000   118 ; OUPUTS:
                                     0000   119 ;
                                     0000   120 ;	R10 IS PRESERVED
                                     0000   121 ;--
                                 05  0000   122 BAD_OPEN:	RSB
                                     0001   123 RSX$PMD::				; PMD THE CURRENT IMAGE
                                     0001   124 ;
                                     0001   125 ; OPEN PMD FILE
                                     0001   126 ;
            51       0141 CA     9E  0001   127 	MOVAB	I_ASCIINAME+1(R10),R1	; ADDRESS NAME
            50       0140 CA     9A  0006   128 	MOVZBL	I_ASCIINAME(R10),R0	; GET NAME SIZE
                          15     13  000B   129 	BEQL	12$			; IF EQL THEN NONE
            61         5F 8F     91  000D   130 	CMPB	#^A/_/,(R1)		; START WITH "_"?
                          06     12  0011   131 	BNEQ	10$			; IF NEQ THEN OK
                          51     D6  0013   132 	INCL	R1			; POINT PAST IT
                          50     D7  0015   133 	DECL	R0			; AND ADJUST COUNT
                          09     13  0017   134 	BEQL	12$			;
            3A         FF A140   91  0019   135 10$:	CMPB	-1(R1)[R0],#^A/:/	; END WITH ":"?
                          02     12  001E   136 	BNEQ	12$			; IF NEQ THEN OK
                          50     D7  0020   137 	DECL	R0			; ADJUST SIZE
       002C'CF            51     D0  0022   138 12$:	MOVL	R1,W^FAB$L_FNA+PMDFAB	;
       0034'CF            50     90  0027   139 	MOVB	R0,W^FAB$B_FNS+PMDFAB
                                     002C   140 	$CREATE	FAB=W^PMDFAB
            09            50     E9  0037   141 	BLBC	R0,14$			; IF LOW CLEAR THEN RMS ERROR
            50   0006832A 8F     D0  003A   142 	MOVL	#RSX$_PMD,R0		; ASSUME PMD MESSAGE
                          07     11  0041   143 	BRB	15$			; CONTINUE
            50   00068332 8F     D0  0043   144 14$:	MOVL	#RSX$_NOPMD,R0		; SET FAILED PMD
                     00CD'CF     9F  004A   145 15$:	PUSHAB	W^FILENAM		; SET UP RESULT NAME DESC
            7E       009F'CF     9A  004E   146 	MOVZBL	W^RESULT+NAM$B_ESL,-(SP);
                          02     DD  0053   147 	PUSHL	#2
                          50     DD  0055   148 	PUSHL	R0			; SET MESSAGE NUMBER
                 000F0003 8F     DD  0057   149 	PUSHL	#3+<15@16>
                          7E     7C  005D   150 	CLRQ	-(SP)
                       08 AE     9F  005F   151 	PUSHAB	8(SP)
   00000000'9F            08     FB  0062   152 	CALLS	#8,@#SYS$PUTMSG		; OUTPUT THE MESSAGE
            5B       0050'CF     9E  0069   153 	MOVAB	W^PMDRAB,R11		; ADDRESS RAB
                                     006E   154 	$CONNECT RAB=R11		; CONNECT RAB TO DATA STREAM
            03            50     E8  0077   155 	BLBS	R0,16$			; IF LOW SET THEN SUCCESS
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 05:10:43   VAX-11 MACRO X0.3-11               Page   5
V06.0           RSX$PMD - PMD EXITITING IMAGE                                                                                    (2)

                          FF83   31  007A   156 	BRW	BAD_OPEN		;
                                     007D   157 ;
                                     007D   158 ; OUTPUT HEADER
                                     007D   159 ;
            50       0028'CF     9E  007D   160 16$:	MOVAB	W^HDRMSG,R0		;
                          03E9   30  0082   161 	BSBW	OUTPUT			; OUTPUT LINE
                                     0085   162 ;
                                     0085   163 ; OUTPUT NAME MESSSAGE
                                     0085   164 ;
            58         28 AA     9E  0085   165 	MOVAB	I_SCRATCH(R10),R8	; ADDRESS DESCRIPTOR
         04 A8         0C A8     9E  0089   166 	MOVAB	12(R8),4(R8)
            68         64 8F     9A  008E   167 	MOVZBL	#100,(R8)		;
            51       0140 CA     9E  0092   168 	MOVAB	I_ASCIINAME(R10),R1	;
            50       009B'CF     9E  0097   169 	MOVAB	W^NAMFAO,R0
                          03E1   30  009C   170 	BSBW	SETFAO
                                     009F   171 	$FAO_S	(R0),8(R8),(R8),R1,#0
                          03AE   30  00B1   172 	BSBW	OUTFAO			; OUTPUT THE LINE
                                     00B4   173 ;
                                     00B4   174 ; OUTPUT PC MESSAGE
                                     00B4   175 ;
            52       0084 CA     9E  00B4   176 	MOVAB	I_SCRATCH+92(R10),R2	; ADDRESS DESC
            62            28     9A  00B9   177 	MOVZBL	#40,(R2)		;
         04 A2         08 A2     9E  00BC   178 	MOVAB	8(R2),4(R2)		;
            14            00     EF  00C1   179 	EXTZV	#0,#20,R9,R0		;
            50            59         00C4       
                                     00C6   180 	$GETMSG_S	R0,(R2),(R2),#1
            50       00B5'CF     9E  00D7   181 	MOVAB	W^PCFAO,R0
                          03A1   30  00DC   182 	BSBW	SETFAO
                                     00DF   183 	$FAO_S	(R0),8(R8),(R8),I_PC(R10),(R2),4(R2)
                          036A   30  00F5   184 	BSBW	OUTFAO
                                     00F8   185 ;
                                     00F8   186 ; OUTPUT THE REGISTERS
                                     00F8   187 ;
            54            5A     D0  00F8   188 	MOVL	R10,R4
            50       00C4'CF     9E  00FB   189 	MOVAB	W^REG1FAO,R0
                          037D   30  0100   190 	BSBW	SETFAO
                                     0103   191 	$FAO_S	(R0),8(R8),(R8),(R4),4(R4),8(R4),12(R4)
                          0343   30  011C   192 	BSBW	OUTFAO
            50       00F4'CF     9E  011F   193 	MOVAB	W^REG2FAO,R0
                          0359   30  0124   194 	BSBW	SETFAO
                                     0127   195 	$FAO_S	(R0),8(R8),(R8),16(R4),20(R4),24(R4),I_PS(R10)
                          031E   30  0141   196 	BSBW	OUTFAO		
                                     0144   197 ;
                                     0144   198 ; OUTPUT THE STATUS
                                     0144   199 ;
            52       0123'CF     9E  0144   200 	MOVAB	W^STSFAO,R2		; ADDRESS THE STATUS MESSAGE HEADER
            53            82     9A  0149   201 	MOVZBL	(R2)+,R3		; GET ITS SIZE AND ADDRESS IT
            62            53     28  014C   202 	MOVC3	R3,(R2),I_SCRATCH+12(R10); COPY IT TO IMPURE STORAGE
                       34 AA         014F       
                                     0151   203 ;
                                     0151   204 ; AST LEVEL?
                                     0151   205 ;
       0170 CA            04     E1  0151   206 	BBC	#SV_ASTLVL,I_STATE(R10),17$; BR IF NOT IS AST
                          07         0156       
            83   20545341 8F     D0  0157   207 	MOVL	#^A/AST /,(R3)+		; INSERT AST MESSAGE
                                     015E   208 ;
                                     015E   209 ; ASTS DISABLED?
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 05:10:43   VAX-11 MACRO X0.3-11               Page   6
V06.0           RSX$PMD - PMD EXITITING IMAGE                                                                                    (2)

                                     015E   210 ;
       0170 CA            03     E1  015E   211 17$:	BBC	#SV_NOAST,I_STATE(R10),18$; BR IF AST'S ENABLED
                          07         0163       
            83   20545344 8F     D0  0164   212 	MOVL	#^A/DST /,(R3)+		; INSERT CODE WORD
                                     016B   213 ;
                                     016B   214 ; WAIT FOR IN PROGRESS?
                                     016B   215 ;
       0170 CA            06     E1  016B   216 18$:	BBC	#SV_WAIT,I_STATE(R10),20$; BR IF NOT IN WAIT
                          07         0170       
            83   20524657 8F     D0  0171   217 	MOVL	#^A/WFR /,(R3)+		; INSERT CODE WORD
            53         2C AA     C3  0178   218 20$:	SUBL3	I_SCRATCH+4(R10),R3,I_SCRATCH+8(R10); INSERT PROPER SIZE
                       30 AA         017C       
                          02E1   30  017E   219 	BSBW	OUTFAO			; OUTPUT THE LINE
                                     0181   220 ;
                                     0181   221 ; OUTPUT THE EVENT FLAGS
                                     0181   222 ;
                     0090 CA     D4  0181   223 	CLRL	I_SCRATCH+104(R10)	; SET COMMONS TO 0 IN CASE NONE PRESENT
                                     0185   224 	$READEF_S	#32,I_SCRATCH+100(R10)
                                     0192   225 	$READEF_S	#64,I_SCRATCH+104(R10)
            50       0134'CF     9E  01A3   226 	MOVAB	W^EFNFAO,R0
                          02D5   30  01A8   227 	BSBW	SETFAO
                                     01AB   228 	$FAO_S	(R0),8(R8),(R8),I_SCRATCH+100(R10),I_SCRATCH+102(R10),-
                                     01AB   229 			I_SCRATCH+104(R10),I_SCRATCH+106(R10)
                          0296   30  01C9   230 	BSBW	OUTFAO
                                     01CC   231 ;
                                     01CC   232 ;
                                     01CC   233 ; OUTPUT THE DIRECTORY AND DSW
                                     01CC   234 ;
            54   00000000'9F     9E  01CC   235 	MOVAB	@#PIO$GT_DDSTRING,R4	;
            50       0154'CF     9E  01D3   236 	MOVAB	W^UICFAO,R0
                          02A5   30  01D8   237 	BSBW	SETFAO
                                     01DB   238 	$FAO_S	(R0),8(R8),(R8),R4,H.DSW
                          026E   30  01F1   239 	BSBW	OUTFAO
                                     01F4   240 ;
                                     01F4   241 ; OUTPUT THE PRIORITY
                                     01F4   242 ;
            50       017A'CF     9E  01F4   243 	MOVAB	W^PRIFAO,R0
                          0284   30  01F9   244 	BSBW	SETFAO
                                     01FC   245 	$FAO_S	(R0),8(R8),(R8),H.SPRI
                          024F   30  0210   246 	BSBW	OUTFAO
                                     0213   247 ;
                                     0213   248 ; OUTPUT THE LOAD DEVICE
                                     0213   249 ;
            54       001E'CF     9E  0213   250 	MOVAB	W^RSX$A_OVDEV+LUT_REALNAME,R4
            50       018C'CF     9E  0218   251 	MOVAB	W^LOAFAO,R0
                          0260   30  021D   252 	BSBW	SETFAO
                                     0220   253 	$FAO_S	(R0),8(R8),(R8),R4,-
                                     0220   254 				I_IMAGEVBN+2(R10),-
                                     0220   255 				I_IMAGEVBN(R10)
                          0227   30  0238   256 	BSBW	OUTFAO
                                     023B   257 ;
                                     023B   258 ; OUTPUT LUT STATUS
                                     023B   259 ;
            50       003E'CF     9E  023B   260 	MOVAB	W^LUNMSG,R0		;
                          022B   30  0240   261 	BSBW	OUTPUT
            56       0164 CA     3C  0243   262 	MOVZWL	I_NLUN(R10),R6		; GET NUMBER OF LUTS
                          3E     13  0248   263 	BEQL	35$			; IF EQL THEN NONE
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 05:10:43   VAX-11 MACRO X0.3-11               Page   7
V06.0           RSX$PMD - PMD EXITITING IMAGE                                                                                    (2)

            54            01     9A  024A   264 	MOVZBL	#1,R4			; START WITH LUN 1
            55       0168 DA44   D0  024D   265 25$:	MOVL	@I_LUT(R10)[R4],R5	; GET LUT ENTRY
                          2E     13  0253   266 	BEQL	30$			; IF EQL THEN NOT ASSIGNED
            53         1E A5     9E  0255   267 	MOVAB	LUT_REALNAME(R5),R3	;
         10 A5       4954 8F     B1  0259   268 	CMPW	#^A/TI/,LUT_RSXNAME(R5)	; TI?
                          05     12  025F   269 	BNEQ	28$			; IF NEQ THEN NO
            53       0010'CF     9E  0261   270 	MOVAB	W^INPUTOUTPUT,R3	; OUTPUT ALTERNATE STRING
            50       01A2'CF     9E  0266   271 28$:	MOVAB	W^LUTFAO,R0
                          0212   30  026B   272 	BSBW	SETFAO
                                     026E   273 	$FAO_S	(R0),8(R8),(R8),R4,R3
                          01DF   30  0280   274 	BSBW	OUTFAO
                          54     D6  0283   275 30$:	INCL	R4			; NEXT LUN
            C5            56     F5  0285   276 	SOBGTR	R6,25$			; CONTINUE UNTIL DONE
                                     0288   277 35$:	
                                     0288   278 ;
                                     0288   279 ; OUTPUT STATUS OF OVERLAYS
                                     0288   280 ;
            50       0057'CF     9E  0288   281 	MOVAB	W^OVLYMSG,R0		; OUTPUT OVERLAY HEADER
                          01DE   30  028D   282 	BSBW	OUTPUT			;
            52   0000002C 9F     3C  0290   283 	MOVZWL	@#H.OVLY,R2		; ADDRESS OVERLAY IMPURE AREA
                          39     13  0297   284 	BEQL	47$			; IF EQL THEN NO OVERLAYS
            53         02 A2     3C  0299   285 	MOVZWL	2(R2),R3		; ADDRESS SEGMENT DESC LIST
            52         0A A2     3C  029D   286 	MOVZWL	10(R2),R2		; GET SIZE OF DESC.
            63            0C     E0  02A1   287 40$:	BBS	#12,(R3),45$		; LOADED?
                          26         02A4       
            0C            00     EF  02A5   288 	EXTZV	#0,#12,(R3),R4		; GET BLOCK ADDRESS
            54            63         02A8       
            50       01B4'CF     9E  02AA   289 	MOVAB	W^OVLYFAO,R0
                          01CE   30  02AF   290 	BSBW	SETFAO
                                     02B2   291 	$FAO_S	(R0),8(R8),(R8),R4,2(R3),4(R3); FORMAT
                          0197   30  02C8   292 	BSBW	OUTFAO
            53            52     C0  02CB   293 45$:	ADDL	R2,R3			; POINT TO NEXT ENTRY
                          63     B5  02CE   294 	TSTW	(R3)			; PRESENT?
                          CF     12  02D0   295 	BNEQ	40$			; IF NEQ THEN YES
                                     02D2   296 ;
                                     02D2   297 ; OUTPUT THE STACK
                                     02D2   298 ;
            50       0074'CF     9E  02D2   299 47$:	MOVAB	W^STKMSG,R0		;
                          0194   30  02D7   300 	BSBW	OUTPUT
            54         18 AA     D0  02DA   301 	MOVL	I_R6(R10),R4		; GET CURRENT STACK ADDRESS
            57       008D CA     9E  02DE   302 50$:	MOVAB	I_SCRATCH+101(R10),R7	; ADDRESS RAD50 TARGET
            56            57     D0  02E3   303 	MOVL	R7,R6			; COPY BUFFER ADDRESS
                          FD17'  30  02E6   304 	BSBW	RSX$R50CVT1		; CONVERT TO RAD50
                          74     B5  02E9   305 	TSTW	-(R4)			; POINT TO PREVIOUS
            57            56     C3  02EB   306 	SUBL3	R6,R7,R0		; GET SIZE
                          50         02EE       
            76            50     90  02EF   307 	MOVB	R0,-(R6)		; INSERT
            50       01EA'CF     9E  02F2   308 	MOVAB	W^STKFAO,R0
                          0186   30  02F7   309 	BSBW	SETFAO
                                     02FA   310 	$FAO_S	(R0),8(R8),(R8),R4,(R4),#2,R4,R6
                          014D   30  0312   311 	BSBW	OUTFAO
                          84     B5  0315   312 	TSTW	(R4)+			; POINT TO NEXT WORD
   00000010'EF            54     B1  0317   313 	CMPW	R4,H.ISP		; DONE?
                          BE     15  031E   314 	BLEQ	50$			; COMPLETE
                                     0320   315 ;
                                     0320   316 ; OUTPUT THE IMAGE
                                     0320   317 ;
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 05:10:43   VAX-11 MACRO X0.3-11               Page   8
V06.0           RSX$PMD - PMD EXITITING IMAGE                                                                                    (2)

            56       00FC CA     9E  0320   318 	MOVAB	I_ADR0(R10),R6		; DO ADR 0
                          1C     10  0325   319 60$:	BSBB	DUMP			; OUTPUT IT
            56            08     C0  0327   320 	ADDL	#ADR_SIZE,R6		; ADDRESS NEXT DESC
                          66     D5  032A   321 	TSTL	(R6)			; IN USE
                          F7     12  032C   322 	BNEQ	60$			; IF NEQ THEN YES
                                     032E   323 ;
                                     032E   324 ; CLOSE FILE
                                     032E   325 ;
                                     032E   326 70$:	$DISCONNECT RAB=R11
                                     0337   327 	$CLOSE	FAB=W^PMDFAB		;
                                 05  0342   328 RESET:	RSB				; RETURN
                                     0343   329 ;
                                     0343   330 ; MEMORY DUMP SUBROUTINE
                                     0343   331 ;
                                     0343   332 DUMP:
            50       0026'CF     9E  0343   333 	MOVAB	W^FORM,R0		; FORM FEED
                          0123   30  0348   334 	BSBW	OUTPUT			;
                                     034B   335 ;
                                     034B   336 ; OUTPUT THE IMAGE LIMITS
                                     034B   337 ;
            54            66     3C  034B   338 	MOVZWL	ADR_LOWLIM(R6),R4
                                     034E   339 	IFNORD	#8,(R4),RESET		; SKIP IF NO READ ALLOWED
            51         04 A6     3C  0354   340 	MOVZWL	ADR_HIGHLIM(R6),R1
            50       0208'CF     9E  0358   341 	MOVAB	W^LIMFAO,R0
                          0120   30  035D   342 	BSBW	SETFAO
                                     0360   343 	$FAO_S	(R0),8(R8),(R8),R4,R1
                          00ED   30  0372   344 	BSBW	OUTFAO
                                     0375   345 ;
                                     0375   346 ; LOOP TO OUTPUT IMAGE
                                     0375   347 ;
            55            54     D0  0375   348 	MOVL	R4,R5			; COPY ADDRESS FOR DUPLICATE TEST
            57       008C CA     9E  0378   349 20$:	MOVAB	I_SCRATCH+100(R10),R7	; ADDRESS PLACE TO PUT RAD50
                                     037D   350 	IFNORD	#8,(R4),RESET		; AND STOP ON NO ACCESS
                          30     BB  0383   351 	PUSHR	#^M<R4,R5>		; SAVE VA AND COMPARISON
            67            00     2C  0385   352 	MOVC5	#0,(R7),#32,#20,(R7)	; BLANK AREA
            14            20         0388       
                          67         038A       
            54            6E     D0  038B   353 	MOVL	(SP),R4			; RESTORE SOURCE ADDRESS
                          57     DD  038E   354 	PUSHL	R7			; SAVE RAD50 BUFFER ADDRESS
                          FC6D'  30  0390   355 	BSBW	RSX$R50CVT1		; CONVERT DUMP TO RAD50
            67            20     90  0393   356 	MOVB	#^A/ /,(R7)		;
            6E            04     C1  0396   357 	ADDL3	#4,(SP),R7		;
                          57         0399       
                          FC63'  30  039A   358 	BSBW	RSX$R50CVT1		;
            67            20     90  039D   359 	MOVB	#^A/ /,(R7)		;
            6E            08     C1  03A0   360 	ADDL3	#8,(SP),R7		;
                          57         03A3       
                          FC59'  30  03A4   361 	BSBW	RSX$R50CVT1		;
            67            20     90  03A7   362 	MOVB	#^A/ /,(R7)		;
            6E            0C     C1  03AA   363 	ADDL3	#12,(SP),R7		;
                          57         03AD       
                          FC4F'  30  03AE   364 	BSBW	RSX$R50CVT1		;
            67            20     90  03B1   365 	MOVB	#^A/ /,(R7)		;
                          32     BA  03B4   366 	POPR	#^M<R1,R4,R5>		; RESTORE VA AND R50 ADDRESS
            50       0227'CF     9E  03B6   367 	MOVAB	W^DMPFAO,R0
                          00C2   30  03BB   368 	BSBW	SETFAO
                                     03BE   369 	$FAO_S	(R0),8(R8),(R8),-
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 05:10:43   VAX-11 MACRO X0.3-11               Page   9
V06.0           RSX$PMD - PMD EXITITING IMAGE                                                                                    (2)

                                     03BE   370 		R4,-
                                     03BE   371 		(R4),-
                                     03BE   372 		2(R4),-
                                     03BE   373 		4(R4),-
                                     03BE   374 		6(R4),-
                                     03BE   375 		#20,R1,-
                                     03BE   376 		#8,R4
                          007E   30  03E1   377 	BSBW	OUTFAO
            50       024F'CF     9E  03E4   378 	MOVAB	W^BYTFAO,R0
                          0094   30  03E9   379 	BSBW	SETFAO
                                     03EC   380 	$FAO_S	(R0),8(R8),(R8),-
                                     03EC   381 		(R4),1(R4),-
                                     03EC   382 		2(R4),3(R4),-
                                     03EC   383 		4(R4),5(R4),-
                                     03EC   384 		6(R4),7(R4)
                          004E   30  0411   385 	BSBW	OUTFAO
            53            54     D0  0414   386 60$:	MOVL	R4,R3
            84            84     D1  0417   387 	CMPL	(R4)+,(R4)+		; POINT TO NEXT GROUP
         04 A6            54     B1  041A   388 	CMPW	R4,ADR_HIGHLIM(R6)	; DONE?
                          1F     1E  041E   389 	BGEQU	80$			; IF GEQU THEN YES
                                     0420   390 	IFNORD	#8,(R4),90$		; SKIP COMPARE IF NO READ
            65            64     D1  0426   391 	CMPL	(R4),(R5)		; NEXT GROUP A DUPLICATE?
                          07     12  0429   392 	BNEQ	70$			; IF NEQ THEN NO
         04 A5         04 A4     D1  042B   393 	CMPL	4(R4),4(R5)		;
                          E2     13  0430   394 	BEQL	60$			; IF EQL THEN KEEP SEARCHING
            55            53     D1  0432   395 70$:	CMPL	R3,R5			; ONE LINE DIFFERENCE?
                          02     13  0435   396 	BEQL	75$
                          0B     10  0437   397 	BSBB	85$			; OUTPUT DUPLICATE MESSAGE
            55            54     D0  0439   398 75$:	MOVL	R4,R5			; SET NEW TEST ADDRESS
                          FF39   31  043C   399 	BRW	20$			; DUMP THIS SECTION
                                     043F   400 ;
                                     043F   401 ; END CONDITION ON DUPLICATE?
                                     043F   402 ;
            55            53     D1  043F   403 80$:	CMPL	R3,R5			; SAME?
                          1D     13  0442   404 	BEQL	90$			; IF EQL THEN DONE
                                     0444   405 ;
                                     0444   406 ; OUTPUT DUPLICATE MESSAGE
                                     0444   407 ;
            50       0277'CF     9E  0444   408 85$:	MOVAB	W^DUPFAO,R0
                          0034   30  0449   409 	BSBW	SETFAO
                                     044C   410 	$FAO_S	(R0),8(R8),(R8),R5,R4
                          0001   30  045E   411 	BSBW	OUTFAO
                                 05  0461   412 90$:	RSB				;
                                     0462   413 ;
                                     0462   414 ;
                                     0462   415 ; UTILITY SUBROUTINES
                                     0462   416 ;
                                     0462   417 OUTFAO:					;
         28 AB         0C A8     9E  0462   418 	MOVAB	12(R8),RAB$L_RBF(R11)	;
         22 AB         08 A8     B0  0467   419 	MOVW	8(R8),RAB$W_RSZ(R11)
                          08     11  046C   420 	BRB	OUT
         22 AB            80     9B  046E   421 OUTPUT:	MOVZBW	(R0)+,RAB$W_RSZ(R11)	;
         28 AB            50     D0  0472   422 	MOVL	R0,RAB$L_RBF(R11)
                                     0476   423 OUT:	$PUT	RAB=R11
                                 05  047F   424 	RSB				; IGNORE ERRORS
                                     0480   425 ;
                                     0480   426 ; BUILD FAO DESC
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 05:10:43   VAX-11 MACRO X0.3-11               Page  10
V06.0           RSX$PMD - PMD EXITITING IMAGE                                                                                    (2)

                                     0480   427 ;
                                     0480   428 SETFAO:					;
       01A8 CA            80     9A  0480   429 	MOVZBL	(R0)+,I_FLOATCSR(R10)
       01AC CA            50     D0  0485   430 	MOVL	R0,I_FLOATCSR+4(R10)
            50       01A8 CA     9E  048A   431 	MOVAB	I_FLOATCSR(R10),R0
                                 05  048F   432 	RSB
                                     0490   433 	.END	
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 05:10:43   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (2)

$$.TAB         = 00000094 R     05   FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            
$$.TABEND      = 000000CC R     05   FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            
$$.TMP         = 00000000            FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            
$$.TMP1        = 00000001            FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            
$$.TMP2        = 0000005B            FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            
$$MSG          = 00000000            FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            
$$T2           = 00000005            FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            
...GBL         = 00000000            FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            
ACBC_CTLRCAST  = 00000002            FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            
ACBC_FLOATAST  = 00000003            FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            
ACBC_PWRAST    = 00000000            FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            
ACBC_RCVAST    = 00000001            FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            
ACBV_INPROG    = 00000001            FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            
ACBV_PERM      = 00000000            FAB$L_MRN        00000038            FAB$S_ORG      = 00000004            
ACBV_TYPE      = 00000008            FAB$L_NAM        00000028            FAB$S_PPF_RAT  = 00000008            
ACB_FLAGS        0000000C            FAB$L_SDC        00000044            FAB$V_BIO      = 00000005            
ACB_LINK         00000000            FAB$L_STS        00000008            FAB$V_BLK      = 00000003            
ACB_UPC          0000000A            FAB$L_STV        0000000C            FAB$V_BRO      = 00000006            
ACB_UPRM         00000008            FAB$L_XAB        00000024            FAB$V_CBT      = 00000015            
ADR_HIGHLIM      00000004            FAB$M_BIO      = 00000020            FAB$V_CIF      = 00000019            
ADR_LOWLIM       00000000            FAB$M_BLK      = 00000008            FAB$V_CR       = 00000001            
ADR_SIZE         00000008            FAB$M_BRO      = 00000040            FAB$V_CTG      = 00000014            
AP_NAME          00000004            FAB$M_CBT      = 00200000            FAB$V_DEL      = 00000002            
AST_PARAM        00000004            FAB$M_CIF      = 02000000            FAB$V_DFW      = 00000005            
AST_PC           00000010            FAB$M_CR       = 00000002            FAB$V_DLT      = 0000000F            
AST_PSL          00000014            FAB$M_CTG      = 00100000            FAB$V_DMO      = 0000000C            
AST_R0           00000008            FAB$M_DEL      = 00000004            FAB$V_ESC      = 0000001B            
AST_R1           0000000C            FAB$M_DFW      = 00000020            FAB$V_EXE      = 00000007            
BAD_OPEN         00000000 R     07   FAB$M_DLT      = 00008000            FAB$V_FTN      = 00000000            
BIT...         = 0000001A            FAB$M_DMO      = 00001000            FAB$V_GET      = 00000001            
BYTFAO           0000024F R     06   FAB$M_ESC      = 08000000            FAB$V_INP      = 00000013            
C_CANONPS      = 83C00000            FAB$M_EXE      = 00000080            FAB$V_JNL      = 00000016            
C_RCVDSTR      = 44564352            FAB$M_FTN      = 00000001            FAB$V_KFO      = 0000001E            
DEFAUL           00000000 R     06   FAB$M_GET      = 00000002            FAB$V_MSE      = 00000004            
DMPFAO           00000227 R     06   FAB$M_INP      = 00080000            FAB$V_MXV      = 00000001            
DUMP             00000343 R     07   FAB$M_JNL      = 00400000            FAB$V_NAM      = 00000018            
DUPFAO           00000277 R     06   FAB$M_KFO      = 40000000            FAB$V_NEF      = 0000000A            
EFNFAO           00000134 R     06   FAB$M_MSE      = 00000010            FAB$V_NFS      = 00000010            
FAB$B_BID        00000000            FAB$M_MXV      = 00000002            FAB$V_NIL      = 00000005            
FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            FAB$V_OFP      = 0000001D            
FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            FAB$V_ORG      = 00000004            
FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            FAB$V_POS      = 00000008            
FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            FAB$V_PPF      = 00000012            
FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            FAB$V_PPF_IND  = 0000000E            
FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            FAB$V_PPF_RAT  = 00000006            
FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            FAB$V_PRN      = 00000002            
FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            FAB$V_PUT      = 00000000            
FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            FAB$V_RCK      = 00000017            
FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            FAB$V_RWC      = 0000000B            
FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            FAB$V_RWO      = 00000007            
FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            FAB$V_SCF      = 0000000E            
FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            FAB$V_SHRDEL   = 00000002            
FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            FAB$V_SHRGET   = 00000001            
FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            FAB$V_SHRPUT   = 00000000            
FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            FAB$V_SHRUPD   = 00000003            
FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            FAB$V_SPL      = 0000000D            
FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            FAB$V_SQO      = 00000006            
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 05:10:43   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (2)

FAB$V_SUP      = 00000002            H.TKVA           00000016            IE.NLN         = FFFFFFDB            
FAB$V_TEF      = 0000001C            H.TKVL           00000018            IE.NNC         = FFFFFFB3            
FAB$V_TMD      = 00000004            H.VEXT           0000002E            IE.NNL         = FFFFFFB2            
FAB$V_TMP      = 00000003            H.WND            00000024            IE.NNN         = FFFFFFBC            
FAB$V_TRN      = 00000004            HDRMSG           00000028 R     06   IE.NOD         = FFFFFFE9            
FAB$V_UFM      = 0000001A            IE.2DV         = FFFFFFD0            IE.NSF         = FFFFFFE6            
FAB$V_UFO      = 00000011            IE.ABO         = FFFFFFF1            IE.NST         = FFFFFFB0            
FAB$V_UPD      = 00000003            IE.ALC         = FFFFFFAC            IE.OFL         = FFFFFFBF            
FAB$V_UPI      = 00000006            IE.ALN         = FFFFFFDE            IE.ONP         = FFFFFFFB            
FAB$V_WCK      = 00000009            IE.AST         = FFFFFFB0            IE.OVR         = FFFFFFEE            
FAB$W_BLS        0000003C            IE.BAD         = FFFFFFFF            IE.PES         = FFFFFFAD            
FAB$W_DEQ        00000014            IE.BBE         = FFFFFFC8            IE.PRI         = FFFFFFF0            
FAB$W_IFI        00000002            IE.BCC         = FFFFFFBE            IE.RAC         = FFFFFFD4            
FAB$W_MRS        00000036            IE.BDI         = FFFFFFCC            IE.RAT         = FFFFFFD3            
FCB_ATTRIBS      0000007C            IE.BDR         = FFFFFFCE            IE.RBG         = FFFFFFD8            
FCB_FIB          0000004C            IE.BDV         = FFFFFFC9            IE.RCN         = FFFFFFD2            
FCB_FID          00000000            IE.BHD         = FFFFFFC0            IE.RER         = FFFFFFE0            
FCB_FNAME        00000014            IE.BLB         = FFFFFFBA            IE.RNM         = FFFFFFCD            
FCB_FNAMEDESC    0000000C            IE.BLK         = FFFFFFEC            IE.RSU         = FFFFFFEF            
FCB_FNB          00000002            IE.BNM         = FFFFFFCA            IE.SNC         = FFFFFFDD            
FCB_PC           00000078            IE.BTF         = FFFFFFB4            IE.SPC         = FFFFFFFA            
FCB_RESULT       00000030            IE.BTP         = FFFFFFD5            IE.SQC         = FFFFFFDC            
FCB_RESULTDESC   00000004            IE.BVR         = FFFFFFC1            IE.SRE         = FFFFFFF2            
FCB_SIZE         000000B4            IE.BYT         = FFFFFFED            IE.STK         = FFFFFFC6            
FILENAM          000000CD R     05   IE.CKS         = FFFFFFE2            IE.TMM         = FFFFFFB9            
FORM             00000026 R     06   IE.CLO         = FFFFFFDA            IE.TMO         = FFFFFFB6            
FP_AP            00000008            IE.CNR         = FFFFFFB7            IE.ULK         = FFFFFFAB            
FP_FP            0000000C            IE.CON         = FFFFFFEA            IE.VER         = FFFFFFFC            
FP_PC            00000010            IE.DAA         = FFFFFFF8            IE.WAC         = FFFFFFE3            
FP_PSL           00000004            IE.DAO         = FFFFFFF3            IE.WAT         = FFFFFFE1            
FP_REGISTERS     00000014            IE.DFU         = FFFFFFE8            IE.WCK         = FFFFFFAA            
GBL...         = 00000000            IE.DNA         = FFFFFFF9            IE.WER         = FFFFFFDF            
H.CSP            00000000            IE.DNR         = FFFFFFFD            IE.WLK         = FFFFFFF4            
H.CUIC           00000008            IE.DUN         = FFFFFFF7            INPUTOUTPUT      00000010 R     06   
H.DSW            00000026            IE.DUP         = FFFFFFC7            IS.BV          = 00000005            
H.DUIC           0000000A            IE.EOF         = FFFFFFF6            IS.CC          = 00000301            
H.EFLM           00000004            IE.EOT         = FFFFFFC2            IS.CR          = 00000D01            
H.EFSV           00000020            IE.EOV         = FFFFFFF5            IS.EOT         = 00000401            
H.FCS            00000028            IE.EXP         = FFFFFFB5            IS.ESC         = 00001B01            
H.FORT           0000002A            IE.FEX         = FFFFFFCF            IS.ESQ         = 00009B01            
H.FPSA           00000022            IE.FHE         = FFFFFFC5            IS.PES         = 00008001            
H.FPVA           0000001C            IE.FLN         = FFFFFFAF            IS.PND         = 00000000            
H.GARD           0000003A            IE.FOP         = FFFFFFCB            IS.RDD         = 00000002            
H.HDLN           00000002            IE.HFU         = FFFFFFE4            IS.SUC         = 00000001            
H.IPC            0000000E            IE.IES         = FFFFFFAE            IS.TAB         = 00000901            
H.IPS            0000000C            IE.IFC         = FFFFFFFE            IS.TMO         = 00000002            
H.ISP            00000010            IE.IFU         = FFFFFFE7            I_ADR0           000000FC            
H.LUN            0000003E            IE.ILL         = FFFFFFD6            I_ASCIINAME      00000140            
H.NLUN           0000003C            IE.ISQ         = FFFFFFC3            I_ASTPOOL        000000D0            
H.NML            00000031            IE.LCK         = FFFFFFE5            I_ASTQUEUE       000000C8            
H.ODVA           00000012            IE.MOD         = FFFFFFEB            I_BAILOUTFP      00000188            
H.ODVL           00000014            IE.NBF         = FFFFFFD9            I_CMDROUT        000000E8            
H.OVLY           0000002C            IE.NBK         = FFFFFFD7            I_CURAST         00000198            
H.PFVA           0000001A            IE.NDR         = FFFFFFB8            I_DEBVEC         00000190            
H.RCVA           0000001E            IE.NFI         = FFFFFFC4            I_DEBVECL        00000192            
H.RRVA           00000032            IE.NFW         = FFFFFFBB            I_FCBPOOL        000000D8            
H.SPRI           00000030            IE.NLK         = FFFFFFB1            I_FCC            000001B4            
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 05:10:43   VAX-11 MACRO X0.3-11               Page  13
SYMBOL TABLE                                                                                                                     (2)

I_FLOATA0        000001C0            LUT_CHAN         0000000C            NAM$M_WILD_SFD4= 10000000            
I_FLOATA1        000001C8            LUT_CHAR         00000012            NAM$M_WILD_SFD5= 20000000            
I_FLOATA2        000001D0            LUT_CTRLC        00000032            NAM$M_WILD_SFD6= 40000000            
I_FLOATA3        000001D8            LUT_FLAGS        0000000A            NAM$M_WILD_SFD7= 80000000            
I_FLOATA4        000001E0            LUT_INFONAME     0000002E            NAM$M_WILD_TYPE= 00000010            
I_FLOATA5        000001E8            LUT_INFOUNIT     00000030            NAM$M_WILD_UFD = 01000000            
I_FLOATADR       000001B0            LUT_LINK         00000000            NAM$M_WILD_VER = 00000008            
I_FLOATAST       000001A4            LUT_REALNAME     0000001E            NAM$S_DIR_LVLS = 00000003            
I_FLOATCSR       000001A8            LUT_REF          00000008            NAM$T_DVI        00000014            
I_FLOATERR       000001AC            LUT_RSXNAME      00000010            NAM$V_DIR_LVLS = 00000015            
I_FLOATTMP       000001B8            LUT_SIZE         00000036            NAM$V_EXP_DEV  = 00000007            
I_GARD           000000EC            LUT_TYPE         00000016            NAM$V_EXP_DIR  = 00000006            
I_HIGHEFN        0000016C            NAM$B_BID        00000000            NAM$V_EXP_NAME = 00000002            
I_HIGHSIZE       000000F4            NAM$B_BLN        00000001            NAM$V_EXP_TYPE = 00000001            
I_IMAGEVBN       000000F8            NAM$B_CURLVL     00000038            NAM$V_EXP_VER  = 00000000            
I_INISIZE        000000F0            NAM$B_ESL        0000000B            NAM$V_GRP_MBR  = 00000013            
I_LENGTH         000001F0            NAM$B_ESS        0000000A            NAM$V_HIGHVER  = 0000000F            
I_LOGNAME        000000E0            NAM$B_RSL        00000003            NAM$V_LOWVER   = 0000000E            
I_LUT            00000168            NAM$B_RSS        00000002            NAM$V_NODE     = 00000011            
I_NLUN           00000164            NAM$C_BID      = 00000002            NAM$V_PPF      = 00000010            
I_PC             00000020            NAM$C_BLN        00000038            NAM$V_QUOTED   = 00000012            
I_PPFINDEX       00000162            NAM$C_BLN_DIRWC  00000050            NAM$V_WILDCARD = 00000008            
I_PROCNAME       0000014C            NAM$C_DVI      = 00000010            NAM$V_WILD_DIR = 00000014            
I_PS             00000024            NAM$C_MAXRSS   = 00000080            NAM$V_WILD_GRP = 00000018            
I_PWRAST         000001A0            NAM$C_MAXRSSLCL= 00000060            NAM$V_WILD_MBR = 00000019            
I_R0             00000000            NAM$K_BLN        00000038            NAM$V_WILD_NAME= 00000005            
I_R1             00000004            NAM$K_BLN_DIRWC  00000050            NAM$V_WILD_SFD1= 00000019            
I_R2             00000008            NAM$L_DIRWCC1    00000040            NAM$V_WILD_SFD2= 0000001A            
I_R3             0000000C            NAM$L_DIRWCC2    00000044            NAM$V_WILD_SFD3= 0000001B            
I_R4             00000010            NAM$L_DIRWCC3    00000048            NAM$V_WILD_SFD4= 0000001C            
I_R5             00000014            NAM$L_DIRWCC4    0000004C            NAM$V_WILD_SFD5= 0000001D            
I_R6             00000018            NAM$L_DWC        00000038            NAM$V_WILD_SFD6= 0000001E            
I_RAD50NAME      00000148            NAM$L_ESA        0000000C            NAM$V_WILD_SFD7= 0000001F            
I_RCVAST         0000019C            NAM$L_FNB        00000034            NAM$V_WILD_TYPE= 00000004            
I_RCVMAIL        00000160            NAM$L_RLF        00000010            NAM$V_WILD_UFD = 00000018            
I_RUNFLAGS       0000018C            NAM$L_RSA        00000004            NAM$V_WILD_VER = 00000003            
I_SCRATCH        00000028            NAM$L_WCC        00000030            NAM$W_DID        0000002A            
I_SSTVEC         00000194            NAM$M_DIR_LVLS = 00E00000            NAM$W_DID_NUM    0000002A            
I_SSTVECL        00000196            NAM$M_EXP_DEV  = 00000080            NAM$W_DID_RVN    0000002E            
I_STATE          00000170            NAM$M_EXP_DIR  = 00000040            NAM$W_DID_SEQ    0000002C            
I_TYPE           0000001C            NAM$M_EXP_NAME = 00000004            NAM$W_FID        00000024            
I_UIC            0000013C            NAM$M_EXP_TYPE = 00000002            NAM$W_FID_NUM    00000024            
I_WAIT           00000178            NAM$M_EXP_VER  = 00000001            NAM$W_FID_RVN    00000028            
I_WAITSAVE       00000180            NAM$M_GRP_MBR  = 00080000            NAM$W_FID_SEQ    00000026            
LIMFAO           00000208 R     06   NAM$M_HIGHVER  = 00008000            NAM$W_PRV_DID    0000003A            
LOAFAO           0000018C R     06   NAM$M_LOWVER   = 00004000            NAMFAO           0000009B R     06   
LUNMSG           0000003E R     06   NAM$M_NODE     = 00020000            OUT              00000476 R     07   
LUTC_CR        = 00000005            NAM$M_PPF      = 00010000            OUTFAO           00000462 R     07   
LUTC_DISK      = 00000002            NAM$M_QUOTED   = 00040000            OUTPUT           0000046E R     07   
LUTC_LP        = 00000004            NAM$M_WILDCARD = 00000100            OVLYFAO          000001B4 R     06   
LUTC_RMS       = 00000000            NAM$M_WILD_DIR = 00100000            OVLYMSG          00000057 R     06   
LUTC_TAPE      = 00000003            NAM$M_WILD_GRP = 01000000            PCFAO            000000B5 R     06   
LUTC_TRM       = 00000001            NAM$M_WILD_MBR = 02000000            PIO$GT_DDSTRING  ********   X   07   
LUTFAO           000001A2 R     06   NAM$M_WILD_NAME= 00000020            PMDFAB           00000000 R     05   
LUTV_CTRLC     = 00000002            NAM$M_WILD_SFD1= 02000000            PMDRAB           00000050 R     05   
LUTV_CTRLO     = 00000000            NAM$M_WILD_SFD2= 04000000            PRIFAO           0000017A R     06   
LUTV_PRM       = 00000003            NAM$M_WILD_SFD3= 08000000            PSL_CC         = 00000000            
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 05:10:43   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                     (2)

PSL_CM         = 0000001F            RAB$M_PPF_IND  = 00004000            RSX$_BADLIBREF = 0006806C            
PSL_FPD        = 0000001B            RAB$M_PPF_RAT  = 00003FC0            RSX$_BADSTACK  = 0006804C            
PSL_FU         = 00000006            RAB$M_PTA      = 20000000            RSX$_BREAK     = 0006800C            
PSL_TBIT       = 00000004            RAB$M_RAH      = 00000200            RSX$_EXITSTATUS= 00068640            
QIOV_FILES     = 00000000            RAB$M_RLK      = 00080000            RSX$_EXTERNABRT= 0006805C            
QIO_FLAGS        0000001A            RAB$M_RNE      = 01000000            RSX$_ILLINST   = 0006802C            
QIO_IOSB         0000000E            RAB$M_RNF      = 08000000            RSX$_IMAGETERM = 00068084            
QIO_LUT          00000016            RAB$M_TMO      = 02000000            RSX$_INSFDYNMEM= 00068054            
QIO_SECONDBLK    0000001C            RAB$M_TPT      = 00000002            RSX$_IOT       = 00068014            
QIO_SIZE         00000020            RAB$M_UIF      = 00000010            RSX$_LIBNOTFND = 00068074            
RAB$B_BID        00000000            RAB$M_ULK      = 00040000            RSX$_LOADERROR = 0006807C            
RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            RSX$_NOCOMM    = 00068094            
RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            RSX$_NONRSXEMT = 0006801C            
RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            RSX$_NOPMD     = 00068332            
RAB$B_MBC        00000037            RAB$V_ASY      = 00000000            RSX$_NOSUCHDEV = 00068322            
RAB$B_MBF        00000036            RAB$V_BIO      = 0000000B            RSX$_NOTSKIMG  = 00068064            
RAB$B_PSZ        00000034            RAB$V_CCO      = 0000001F            RSX$_ODDADDR   = 00068034            
RAB$B_RAC        0000001E            RAB$V_CVT      = 0000001A            RSX$_PMD       = 0006832A            
RAB$B_ROP1       00000005            RAB$V_EOF      = 00000008            RSX$_RCVMBXSIZ = 0000012C            
RAB$B_ROP2       00000006            RAB$V_FDL      = 00000006            RSX$_REGMSG    = 0006808C            
RAB$B_ROP3       00000007            RAB$V_HSH      = 00000007            RSX$_RESERVED  = 00068004            
RAB$B_TMO        0000001F            RAB$V_KGE      = 00000015            RSX$_TBIT      = 0006803C            
RAB$C_BID      = 00000001            RAB$V_KGT      = 00000016            RSX$_TRAP      = 00068024            
RAB$C_BLN        00000044            RAB$V_LIM      = 0000000E            RSX$_VERIFYCMD = 00068648            
RAB$C_KEY      = 00000001            RAB$V_LOA      = 0000000D            SETFAO           00000480 R     07   
RAB$C_RFA      = 00000002            RAB$V_LOC      = 00000010            STKFAO           000001EA R     06   
RAB$C_SEQ      = 00000000            RAB$V_MAS      = 00000005            STKMSG           00000074 R     06   
RAB$K_BLN        00000044            RAB$V_NLK      = 00000014            STSFAO           00000123 R     06   
RAB$L_BKT        00000038            RAB$V_NXR      = 00000017            SV_ASTLVL        00000004            
RAB$L_CTX        00000018            RAB$V_PMT      = 0000001E            SV_DCL           00000002            
RAB$L_DCT        00000038            RAB$V_PPF_IND  = 0000000E            SV_FLOATAST      00000009            
RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            SV_NOAST         00000003            
RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            SV_PENDWAIT      00000005            
RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            SV_PWRAST        00000008            
RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            SV_RCVAST        00000007            
RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            SV_RESTORE       00000000            
RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            SV_TRANSLATE     00000001            
RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            SV_WAIT          00000006            
RAB$L_STS        00000008            RAB$V_TPT      = 00000001            SYS$CLOSE        ********  GX   07   
RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            SYS$CONNECT      ********  GX   07   
RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            SYS$CREATE       ********  GX   07   
RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            SYS$DISCONNECT   ********  GX   07   
RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            SYS$FAO          ********   X   07   
RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            SYS$GETMSG       ********   X   07   
RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            SYS$PUT          ********  GX   07   
RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            SYS$PUTMSG       ********   X   07   
RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            SYS$READEF       ********   X   07   
RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            UICFAO           00000154 R     06   
RAB$M_KGE      = 00200000            REG1FAO          000000C4 R     06   W.BATT           00000006            
RAB$M_KGT      = 00400000            REG2FAO          000000F4 R     06   W.BFPD           0000000C            
RAB$M_LIM      = 00004000            RESET            00000342 R     07   W.BHVR           00000004            
RAB$M_LOA      = 00002000            RESULT           00000094 R     05   W.BLGH           00000010            
RAB$M_LOC      = 00010000            RSX$A_OVDEV      ********   X   07   W.BLPD           0000000E            
RAB$M_MAS      = 00000020            RSX$C_SUBSYSTEM= 00000006            W.BLVR           00000002            
RAB$M_NLK      = 00100000            RSX$PMD          00000001 RG    07   W.BNPD           0000000D            
RAB$M_NXR      = 00800000            RSX$R50CVT1      ********   X   07   W.BOFF           0000000A            
RAB$M_PMT      = 40000000            RSX$_ACCVIO    = 00068044            W.BPCB           00000000            
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 05:10:43   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                     (2)

W.BSIZ           00000008            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
..ABS.           00000042      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000050      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXDEF           000001F4      04     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXIMPURE        000000FF      05     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT LONG  
RSXPURE          00000296      06       PIC   USR   CON   REL   LCL   SHR   EXE   RD  NOWRT LONG  
RSXCODE          00000490      07       PIC   USR   CON   REL   LCL   SHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
2818. BYTES LEFT IN FREE MEMORY POOL.
582. BYTES OF RECLAIMED MEMORY.
OBJ$:RSXPMD,LIS$:RSXPMD/-SP=EXECML$/ML,LIB$:R/ML,SRC$:RSXPMD
102 MLB DIR RDS - 1090 GETS TO DEFINE 44 MACROS. 76 INTER. FILE WRITES. 
