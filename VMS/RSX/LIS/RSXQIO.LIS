RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 05:11:32   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      40  RSX$QIO/RSX$QIOW - QIO DIRECTIVE DISPATCHER
   (3)     176  RSX$CHK_TI - CHECK FOR TI INPUT OR OUTPUT
   (4)     215  RSX$IEIFC - ILLEGAL I/O FUNCTION
   (5)     240  RSX$IOKILL - DEVICE INDEPENDENT IO.KIL FUNCTION
   (6)     266  RSX$DLVRQIOAST - DELIVER AST TO COMPLETE I/O
   (7)     305  RSX$ISSUQIO - ISSUE QIO
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 05:11:32   VAX-11 MACRO X0.3-11               Page   1
V06.0                                                                                                                            (1)

                                     0000     1 	.TITLE	RSXQIO -- RSX11M QIO DIRECTIVE
                                     0000     2 	.IDENT	/V06.0/		;
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1978
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY:
                                     0000    25 ;
                                     0000    26 ;	VAX/VMS RSX11M AME
                                     0000    27 ;
                                     0000    28 ; ABSTRACT:
                                     0000    29 ;
                                     0000    30 ;	RSX11M QIO DIRECTIVE
                                     0000    31 ;
                                     0000    32 ; AUTHOR: R.HEINEN 4-NOV-76
                                     0000    33 ;--
                                     0000    34 ;
                                     0000    35 ; EXTERNAL SYMBOLS
                                     0000    36 ;
                                     0000    37 	$RSXDEF			; DEFINE RSX SYMBOLS
                                     0000    38 	DRERR$			; DEFINE RSX11M DIRECTIVE STATUS CODES
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 05:11:32   VAX-11 MACRO X0.3-11               Page   2
V06.0           RSX$QIO/RSX$QIOW - QIO DIRECTIVE DISPATCHER                                                                      (2)

                                     0000    40 	.SBTTL	RSX$QIO/RSX$QIOW - QIO DIRECTIVE DISPATCHER
                                     0000    41  
                                 00000000    42 	.PSECT	RSXCODE,NOWRT,SHR,PIC
                                     0000    43 	.ENABL	LSB
                                     0000    44  
                                     0000    45 ;++
                                     0000    46 ; RSX$QIO - RSX11M QIO DIRECTIVE
                                     0000    47 ; RSX$QIOW - RSX11M QIO AND WAIT DIRECTIVE
                                     0000    48 ;
                                     0000    49 ; FUNCTIONAL DESCRIPTION:
                                     0000    50 ;
                                     0000    51 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     0000    52 ; "QIO$" OR "QIOW$" DIRECTIVE.
                                     0000    53 ;
                                     0000    54 ; THE FIRST OPERATION IS TO CHECK FOR ALL THE ERROR CONDITIONS THAT
                                     0000    55 ; CAUSE DSW ERRORS. THESE INCLUDE ILLEGAL LUNS, ILLEGAL EVENT FLAGS,
                                     0000    56 ; AND IOSB ACCESS VIOLATIONS. 
                                     0000    57 ;
                                     0000    58 ; AFTER THE DSW ERROR CHECKS ALL ERRORS ARE RETURNED VIA THE I/O DONE
                                     0000    59 ; STATUS POSTING LOGIC OF THE ROUTINES "RSX$DLVRQIOAST" AND 
                                     0000    60 ; "RSX$IODONEAST". THESE ROUTINES FORM THE BASIS FOR THE I/O STATUS
                                     0000    61 ; POST AND SUBSEQUENT AST DELIVERY TO THE IMAGE.
                                     0000    62 ;
                                     0000    63 ; CALLING SEQUENCE:
                                     0000    64 ;
                                     0000    65 ;	CALLED VIA JSB FROM "RSX$EXCEPTION".
                                     0000    66 ;
                                     0000    67 ; INPUT PARAMETERS:
                                     0000    68 ;
                                     0000    69 ;	R5 = ADDRESS OF DPB+2
                                     0000    70 ;	R6 = CM IMAGE STACK ADDRESS
                                     0000    71 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     0000    72 ;	R11 = ADDRESS OF IMAGE HEADER
                                     0000    73 ;
                                     0000    74 ; IMPLICIT INPUTS:
                                     0000    75 ;
                                     0000    76 ;	THE DPB IS ALREADY VALIDATED FOR READ ACCESS.
                                     0000    77 ;	THE DPB SIZE AND TYPE ARE CORRECT.
                                     0000    78 ;
                                     0000    79 ; OUTPUT PARAMETERS:
                                     0000    80 ;
                                     0000    81 ;	R6,R10,R11 ARE PRESERVED
                                     0000    82 ;
                                     0000    83 ; IMPLICIT OUTPUTS:
                                     0000    84 ;
                                     0000    85 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     0000    86 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     0000    87 ;
                                     0000    88 ; COMPLETION CODES:
                                     0000    89 ;
                                     0000    90 ;	IS.SUC	SUCCESSFUL
                                     0000    91 ;	IE.UPN	NO MEMORY FOR REQUEST
                                     0000    92 ;	IE.ILU	ILLEGAL LUN NUMBER
                                     0000    93 ;	IE.ULN	UNASSIGNED LUN
                                     0000    94 ;	IE.IEF	ILLEGAL EFN
                                     0000    95 ;	IE.ADP	IOSB ACCESS VIOLATION
                                     0000    96 ;--
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 05:11:32   VAX-11 MACRO X0.3-11               Page   3
V06.0           RSX$QIO/RSX$QIOW - QIO DIRECTIVE DISPATCHER                                                                      (2)

                                     0000    97 ;
                                     0000    98 ; QIO AND WAIT DIRECTIVE
                                     0000    99 ;
                                     0000   100 RSX$QIOW::				; QIO AND WIAT DIRECTIVE
                       04 A5     9F  0000   101 	PUSHAB	4(R5)			; SAVE EFN ADDRESS
                          38     10  0003   102 	BSBB	RSX$QIO			; DO THE I/O
                          55   8ED0  0005   103 	POPL	R5			; GET THE EFN
                       26 AB     95  0008   104 	TSTB	H.DSW(R11)		; SUCCESS?
                          07     19  000B   105 	BLSS	10$			; IF LSS THEN NOT SUCCESSFUL
                          65     B5  000D   106 	TSTW	(R5)			; ANY EFN?
                          03     13  000F   107 	BEQL	10$			; IF EQL THEN NO
                          FFEC'  31  0011   108 	BRW	RSX$WTSE		; DO WAIT FOR
                                 05  0014   109 10$:	RSB				; RETURN
                                     0015   110 ;
                                     0015   111 ; IEILU - ILLEGAL LUN NUMBER
                                     0015   112 ;
                                     0015   113 IEILU:	$DSW	#IE.ILU			; SET STATUS AND RETURN
                                     001F   114 ;
                                     001F   115 ; IEULN - ILLEGAL LUN NUMBER
                                     001F   116 ;
                                     001F   117 IEULN:	$DSW	#IE.ULN			; SET STATUS AND RETURN
                                     0029   118 ;
                                     0029   119 ; IOSB ODD ADDRESS
                                     0029   120 ;
                                     0029   121 IEADP:	$DSW	#IE.ADP			;
                                     0033   122 ;
                                     0033   123 ; DPB ACCESS VIOLATION
                                     0033   124 ;
                                     0033   125 IESDP:	$DSW	#IE.SDP			;
                                     003D   126 ;
                                     003D   127 ; QIO (NO WAIT) DIRECTIVE
                                     003D   128 ;
                                     003D   129 RSX$QIO::				; QIO DIRECTIVE
            57            85     3C  003D   130 	MOVZWL	(R5)+,R7		; GET FUNCTION CODE FOR LATER
            50            85     3C  0040   131 	MOVZWL	(R5)+,R0		; GET LUN NUMBER
                          D0     13  0043   132 	BEQL	IEILU			; IF EQL THEN ERROR
       0164 CA            50     B1  0045   133 	CMPW	R0,I_NLUN(R10)		; LUN NUMBER IN RANGE?
                          C9     1A  004A   134 	BGTRU	IEILU			; INVALID LUN - POST ERROR
            58       0168 DA40   D0  004C   135 	MOVL	@I_LUT(R10)[R0],R8	; ADDRESS LUT ENTRY
                          CB     13  0052   136 	BEQL	IEULN			; IF EQL THEN UNASSIGNED
         2C AA            85     3C  0054   137 	MOVZWL	(R5)+,I_SCRATCH+4(R10)	; GET EFN SPECIFIED
                          13     13  0058   138 	BEQL	5$			; IF EQL THEN NO ADJUSTMENT NEEDED
            1F       016C CA     F1  005A   139 	ACBL	I_HIGHEFN(R10),#31,I_SCRATCH+4(R10),5$; ADJUST TO MAP EFN AND CHECK IT
            000A       2C AA         005F       
                                     0063   140 	$DSW	#IE.IEF			; ILLEGAL EVENT FLAG
            50            65     3C  006D   141 5$:	MOVZWL	(R5),R0			; ADDRESS IOSB
            B6            50     E8  0070   142 	BLBS	R0,IEADP		; CHECK FOR ODD ADDRESS
                          60     D4  0073   143 	CLRL	(R0)			; ZERO IOSB 
                       0C A5     B5  0075   144 	TSTW	12(R5)			; CHECK DPB BEFORE ACCESS
         3C AA       0000'CF     9E  0078   145 	MOVAB	W^RSX$IODONEAST,I_SCRATCH+20(R10); SET UP AST SERVICE
                          FF7F'  30  007E   146 	BSBW	RSX$SETUPAST		; SET UP AN AST CONTROL BLOCK
                       1A A2     D4  0081   147 	CLRL	QIO_FLAGS(R2)		; CLEAR FLAGS 
         40 AA            52     D0  0084   148 	MOVL	R2,I_SCRATCH+24(R10)	; ADDRESS AST PARAMETER
         38 AA         0E A2     7E  0088   149 	MOVAQ	QIO_IOSB(R2),I_SCRATCH+16(R10); SAVE AREA IN BLOCK AS IOSB
         08 A2            85     D0  008D   150 	MOVL	(R5)+,ACB_UPRM(R2)	; SAVE HIS IOSB AND AST ADDRESS
                       0C A2     B4  0091   151 	CLRW	ACB_FLAGS(R2)		; SET NO SPECIAL TYPE
         16 A2            58     D0  0094   152 	MOVL	R8,QIO_LUT(R2)		; SAVE LUT ADDRESS
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 05:11:32   VAX-11 MACRO X0.3-11               Page   4
V06.0           RSX$QIO/RSX$QIOW - QIO DIRECTIVE DISPATCHER                                                                      (2)

            57         F8 8F     78  0098   153 	ASHL	#-8,R7,R3		; GET THE MAJOR FUNCTION CODE
                          53         009C       
         44 AA            65     3C  009D   154 	MOVZWL	(R5),I_SCRATCH+28(R10)	; P1=RSX P1
         48 AA         02 A5     3C  00A1   155 	MOVZWL	2(R5),I_SCRATCH+32(R10)	; P2=RSX P2
         4C AA         08 A5     B0  00A6   156 	MOVW	8(R5),I_SCRATCH+36(R10)	; INSERT RSX#5 AND #6 TO VAX/VMS#3
         4E AA         06 A5     B0  00AB   157 	MOVW	6(R5),I_SCRATCH+38(R10)	;
         50 AA         04 A5     3C  00B0   158 	MOVZWL	4(R5),I_SCRATCH+40(R10)	; P4= RSX P3
                       54 AA     7C  00B5   159 	CLRQ	I_SCRATCH+44(R10)	; NO VAX/VMS#5 OR 6
                                     00B8   160 ;
                                     00B8   161 ; ENTER DRIVER MODULE
                                     00B8   162 ;
            50         00'8F     9A  00B8   163 	MOVZBL	#SS$_NORMAL,R0		; ASSUME NORMAL COMPLETION
                          51     D4  00BC   164 	CLRL	R1			; NO STATUS
                                     00BE   165 DRV_DISPATCH:				; DISPATCH TO DRIVER
                                     00BE   166 	CASE	TYPE=B,LUT_TYPE(R8),<-	;
                                     00BE   167 		RSX$RMS_DRV,-		; 0= RMS
                                     00BE   168 		RSX$TTY_DRV,-		; 1= TTY
                                     00BE   169 		RSX$DSK_DRV,-		; 2= DISKS
                                     00BE   170 		RSX$MT_DRV,-		; 3= TAPES
                                     00BE   171 		RSX$LP_DRV,-		; 4= LP
                                     00BE   172 		RSX$CR_DRV,-		; 5= CR
                                     00BE   173 		>
                          FF2E'  31  00CF   174 	BRW	RSX$UKN_DRV		; UNKNOWN DEVICE
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 05:11:32   VAX-11 MACRO X0.3-11               Page   5
V06.0           RSX$CHK_TI - CHECK FOR TI INPUT OR OUTPUT                                                                        (3)

                                     00D2   176 	.SBTTL	RSX$CHK_TI - CHECK FOR TI INPUT OR OUTPUT
                                     00D2   177  
                                     00D2   178 	.ENABL	LSB
                                     00D2   179 ;++
                                     00D2   180 ; RSX$CHK_TI_INP - CHECK FOR TI INPUT
                                     00D2   181 ; RSX$CHK_TI_OUT - CHECK FOR TI OUTPUT
                                     00D2   182 ;
                                     00D2   183 ; FUNCTIONAL DESCRIPTION:
                                     00D2   184 ;
                                     00D2   185 ; THIS ROUTINE DIRECTS TI I/O TO THE PROPER DEVICE BASED ON THE DIRECTION
                                     00D2   186 ; OF THE I/O.
                                     00D2   187 ;
                                     00D2   188 ; INPUTS:
                                     00D2   189 ;
                                     00D2   190 ;	R8 = ADDRESS OF THE CURRENT LUT
                                     00D2   191 ;
                                     00D2   192 ; OUTPUTS:
                                     00D2   193 ;
                                     00D2   194 ;	R8 = CORRECT LUT FOR THE I/O
                                     00D2   195 ;
                                     00D2   196 ; CONTROL IS RETURNED TO THE CALLER IF THE I/O IS PROPER
                                     00D2   197 ; OTHERWISE, THE PROPER DRIVER IS ENTERED.
                                     00D2   198 ;--
                                     00D2   199 RSX$CHK_TI_INP::			; CHECK FOT TI INPUT
            50       0000'CF     9E  00D2   200 	MOVAB	W^RSX$A_TIIDEV,R0	; ADDRESS THE PROPER LUT FOR TI INPUT
                          05     11  00D7   201 	BRB	10$			; CONTINUE IN COMMON
                                     00D9   202 RSX$CHK_TI_OUT::			; CHECK FOR TI OUTPUT
            50       0000'CF     9E  00D9   203 	MOVAB	W^RSX$A_TIODEV,R0	; ADDRESS THE PROPER LUT FOR TI OUTPUT
         10 A8       4954 8F     B1  00DE   204 10$:	CMPW	#^A/TI/,LUT_RSXNAME(R8)	; TI?
                          0C     12  00E4   205 	BNEQ	20$			; IF NEQ THEN OK
            58            50     D1  00E6   206 	CMPL	R0,R8			; SAME?
                          07     13  00E9   207 	BEQL	20$			; IF EQL THEN OK
                          8E     D5  00EB   208 	TSTL	(SP)+			; REMOVE THE RETURN ADDRESS
            58            50     D0  00ED   209 	MOVL	R0,R8			; RESET LUT ADDRESS
                          CC     11  00F0   210 	BRB	DRV_DISPATCH		; DISPATCH AGAIN
                                 05  00F2   211 20$:	RSB
                                     00F3   212  
                                     00F3   213 	.DSABL	LSB
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 05:11:32   VAX-11 MACRO X0.3-11               Page   6
V06.0           RSX$IEIFC - ILLEGAL I/O FUNCTION                                                                                 (4)

                                     00F3   215 	.SBTTL	RSX$IEIFC - ILLEGAL I/O FUNCTION
                                     00F3   216 ;++
                                     00F3   217 ; RSX$IEIFC - ILLEGAL I/O FUNCTION
                                     00F3   218 ;
                                     00F3   219 ; FUNCTIONAL DESCRIPTION:
                                     00F3   220 ;
                                     00F3   221 ; THIS ROUTINE COMPLETES I/O OPERATIONS WITH ILLEGAL FUNCTION CODES.
                                     00F3   222 ;
                                     00F3   223 ; INPUTS:
                                     00F3   224 ;
                                     00F3   225 ;	R2 = ADDRESS OF THE QIO CONTEXT
                                     00F3   226 ;	R6 = ADDRESS OF THE IMAGE STACK
                                     00F3   227 ;	R8 = ADDRESS OF THE LUT
                                     00F3   228 ;	R10 = ADDRESS OF THE IMAGE IMPURE AREA
                                     00F3   229 ;	R11 = ADDRESS OF THE IMAGE
                                     00F3   230 ;
                                     00F3   231 ; OUTPUTS:
                                     00F3   232 ;
                                     00F3   233 ;	R6,R10,R11 ARE PRESERVED.
                                     00F3   234 ;--
                                     00F3   235 RSX$IEIFC::				; ILLEGAL I/O FUNCTION
            50       0000'8F     3C  00F3   236 	MOVZWL	#SS$_ILLIOFUNC,R0	; SET STATUS
                          51     D4  00F8   237 	CLRL	R1
                          0F     11  00FA   238 	BRB	RSX$DLVRQIOAST		;
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 05:11:32   VAX-11 MACRO X0.3-11               Page   7
V06.0           RSX$IOKILL - DEVICE INDEPENDENT IO.KIL FUNCTION                                                                  (5)

                                     00FC   240 	.SBTTL	RSX$IOKILL - DEVICE INDEPENDENT IO.KIL FUNCTION
                                     00FC   241 ;++
                                     00FC   242 ; RSX$IOKILL - KILL I/O ON DEVICE
                                     00FC   243 ;
                                     00FC   244 ; FUNCTIONAL DESCRIPTION:
                                     00FC   245 ;
                                     00FC   246 ; THIS ROUTINE IS USED TO PERFORM KILL I/O FUNCTIONS ON DEVICES
                                     00FC   247 ; THAT DO NOT REQUIRE SPECIAL ATTENTION.
                                     00FC   248 ;
                                     00FC   249 ; INPUTS:
                                     00FC   250 ;
                                     00FC   251 ;	R2 = ADDRESS OF THE QIO CONTEXT BLOCK
                                     00FC   252 ;	R5 = ADDRESS OF QIO DPB
                                     00FC   253 ;	R6 = INAGE STACK POINTER
                                     00FC   254 ;	R8 = ADDRESS OF THE LUT
                                     00FC   255 ;	R10 = ADDRESS OF THE IMAGE IMPURE POINTER
                                     00FC   256 ;	R11 = ADDRESS OF THE IMAGE
                                     00FC   257 ;
                                     00FC   258 ; OUTPUTS:
                                     00FC   259 ;
                                     00FC   260 ;	R2,R6,R8,R10,R11 ARE PRESERVED.
                                     00FC   261 ;--
                                     00FC   262 RSX$IOKILL::				; KILL I/O
                                     00FC   263 	$CANCEL_S	LUT_CHAN(R8)	; KILL THE I/O
            50         00'8F     9A  0107   264 	MOVZBL	#SS$_NORMAL,R0		; SET SUCCESS STATUS
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 05:11:32   VAX-11 MACRO X0.3-11               Page   8
V06.0           RSX$DLVRQIOAST - DELIVER AST TO COMPLETE I/O                                                                     (6)

                                     010B   266 	.SBTTL RSX$DLVRQIOAST - DELIVER AST TO COMPLETE I/O
                                     010B   267 ;++
                                     010B   268 ; RSX$DLVRQIOAST - DELIVER AST TO COMPLETE I/O
                                     010B   269 ;
                                     010B   270 ; FUNCTIONAL DESCRIPTION:
                                     010B   271 ;
                                     010B   272 ; THIS ROUTINE DECLARES AN AST FOR I/O POST PROCESSING IN ORDER TO
                                     010B   273 ; TRANSLATE THE STATUS.
                                     010B   274 ; IT IS USED ONLY AS A BAILOUT IN THE CASE THAT THE REQUEST FAILED.
                                     010B   275 ; AND THE FAILURE WAS NOT AN RSX11M DIRECTIVE ERROR.
                                     010B   276 ; THE I/O SPECIFIED EVENT FLAG MUST BE SET IF THE ENTRY IS TO RSX$DLVRQIOASTS.
                                     010B   277 ;
                                     010B   278 ; INPUTS:
                                     010B   279 ;
                                     010B   280 ;	R0 = ERROR CODE TO DELIVER 
                                     010B   281 ;	R1 = SECOND STATUS TO DELIVER
                                     010B   282 ;	R2 = AST PARAMETER BLOCK FOR QIO
                                     010B   283 ;	R6 = IMAGE STACK POINTER
                                     010B   284 ;	R8 = LUT ENTRY ADDRESS
                                     010B   285 ;	R10 = ADDRESS OF THE IMAGE DATA BASE
                                     010B   286 ;	R11 = ADDRRESS OF THE IMAGE HEADER
                                     010B   287 ;
                                     010B   288 ;	I_SCRATCH+4 CONTAINS THE EFN TO SET
                                     010B   289 ;
                                     010B   290 ; OUTPUTS:
                                     010B   291 ;
                                     010B   292 ;	R6,R10,R11 ARE PRESERVED.
                                     010B   293 ;
                                     010B   294 ; IF NO SPACE IS AVAILABLE FOR THE DECLARE THEN IE.UPN IS RETURNED
                                     010B   295 ; AS A DSW ERROR.
                                     010B   296 ;--
                                     010B   297 RSX$DLVRQIOAST::			; DELIVER AST TO IMAGE
         0E A2            50     7D  010B   298 	MOVQ	R0,QIO_IOSB(R2)		; SAVE STATUS
                                     010F   299 	$SETEF_S	I_SCRATCH+4(R10); SET THE EVENT FLAG
            7E            00     7D  0119   300 	MOVQ	#0,-(SP)		; FAKE A NATIVE MODE AST
                          52     DD  011C   301 	PUSHL	R2			; SET UP CONTEXT BLOCK ADDRESS
       0000'CF            03     FB  011E   302 	CALLS	#3,W^RSX$IODONEAST	; FAKE AST
                                 05  0123   303 	RSB				; RETURN
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 05:11:32   VAX-11 MACRO X0.3-11               Page   9
V06.0           RSX$ISSUQIO - ISSUE QIO                                                                                          (7)

                                     0124   305 	.SBTTL	RSX$ISSUQIO - ISSUE QIO
                                     0124   306 ;++
                                     0124   307 ; RSX$ISSUQIO - ISSUE QIO BASED ON SET UP PARAMETERS
                                     0124   308 ;
                                     0124   309 ; FUNCTIONAL DESCRIPTION:
                                     0124   310 ;
                                     0124   311 ; THIS ROUTINE COMPLETES AN I/O OPERATION THAT HAS BEEN SET UP BY
                                     0124   312 ; OTHER QIO SUBROUTINES. THE QIO DATA IS IN I_SCRATCH 
                                     0124   313 ;
                                     0124   314 ; INPUT:
                                     0124   315 ;
                                     0124   316 ;	R2 = ADDRESS OF THE QIO CONTEXT BLOCK
                                     0124   317 ;	R6 = IMAGE STACK ADDRESS
                                     0124   318 ;	R8 = LUT ENTRY ADDRESS
                                     0124   319 ;	R10 = ADDRESS OF THE IMAGE DATA BASE
                                     0124   320 ;	R11 = ADDRESS OF THE IMAGE HEADER
                                     0124   321 ;
                                     0124   322 ; IMPLICIT INPUTS:
                                     0124   323 ;
                                     0124   324 ; THE QIO ARGUMENT LIST LESS LIST HEADER IS SET UP IN THE IMAGE DATA
                                     0124   325 ; BASE.
                                     0124   326 ; THE ADDRESS OF THE ACTUAL SYSTEM QIO ROUTINE ( WAIT OR NOT ) IS IN I_SCRATCH+50
                                     0124   327 ;
                                     0124   328 ; OUTPUTS:
                                     0124   329 ;
                                     0124   330 ;	R6,R10,R11 ARE PRESERVED.
                                     0124   331 ;--
                                     0124   332 RSX$ISSUQIO::				; ISSUE QIO 
         30 AA         0C A8     D0  0124   333 	MOVL	LUT_CHAN(R8),I_SCRATCH+8(R10); SET THE CHANNEL NUMBER
         28 AA            0C     9A  0129   334 	MOVZBL	#12,I_SCRATCH(R10)	; SET NUMBER OF PARAMS
   00000000'9F         28 AA     FA  012D   335 	CALLG	I_SCRATCH(R10),@#SYS$QIO; DO FUNCTION
            D3            50     E9  0135   336 	BLBC	R0,RSX$DLVRQIOAST	; IF ERROR THEN POST
                                 05  0138   337 	RSB				; OTHERWISE RETURN
                                     0139   338 ;
                                     0139   339 	.END
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 05:11:32   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (7)

$$MSG          = 00000000            H.LUN            0000003E            IE.HFU         = FFFFFFE4            
...GBL         = 00000000            H.NLUN           0000003C            IE.HWR         = FFFFFFFA            
ACBC_CTLRCAST  = 00000002            H.NML            00000031            IE.IBS         = FFFFFFA7            
ACBC_FLOATAST  = 00000003            H.ODVA           00000012            IE.IDU         = FFFFFFA4            
ACBC_PWRAST    = 00000000            H.ODVL           00000014            IE.IEF         = FFFFFF9F            
ACBC_RCVAST    = 00000001            H.OVLY           0000002C            IE.IES         = FFFFFFAE            
ACBV_INPROG    = 00000001            H.PFVA           0000001A            IE.IFC         = FFFFFFFE            
ACBV_PERM      = 00000000            H.RCVA           0000001E            IE.IFU         = FFFFFFE7            
ACBV_TYPE      = 00000008            H.RRVA           00000032            IE.ILL         = FFFFFFD6            
ACB_FLAGS        0000000C            H.SPRI           00000030            IE.ILU         = FFFFFFA0            
ACB_LINK         00000000            H.TKVA           00000016            IE.ILV         = FFFFFFED            
ACB_UPC          0000000A            H.TKVL           00000018            IE.INS         = FFFFFFFE            
ACB_UPRM         00000008            H.VEXT           0000002E            IE.IOP         = FFFFFFAD            
ADR_HIGHLIM      00000004            H.WND            00000024            IE.IPR         = FFFFFFA1            
ADR_LOWLIM       00000000            IE.2DV         = FFFFFFD0            IE.ISQ         = FFFFFFC3            
ADR_SIZE         00000008            IE.ABO         = FFFFFFF1            IE.ITI         = FFFFFFA3            
AP_NAME          00000004            IE.ACT         = FFFFFFF9            IE.ITP         = FFFFFFA8            
AST_PARAM        00000004            IE.ADP         = FFFFFF9E            IE.ITS         = FFFFFFF8            
AST_PC           00000010            IE.ALC         = FFFFFFAC            IE.IUI         = FFFFFFA5            
AST_PSL          00000014            IE.ALG         = FFFFFFAC            IE.LCK         = FFFFFFE5            
AST_R0           00000008            IE.ALN         = FFFFFFDE            IE.LNL         = FFFFFFA6            
AST_R1           0000000C            IE.AST         = FFFFFFB0            IE.MAP         = FFFFFFAF            
BIT...         = 0006809C            IE.BAD         = FFFFFFFF            IE.MOD         = FFFFFFEB            
C_CANONPS      = 83C00000            IE.BBE         = FFFFFFC8            IE.NBF         = FFFFFFD9            
C_RCVDSTR      = 44564352            IE.BCC         = FFFFFFBE            IE.NBK         = FFFFFFD7            
DRV_DISPATCH     000000BE R     05   IE.BDI         = FFFFFFCC            IE.NDR         = FFFFFFB8            
FCB_ATTRIBS      0000007C            IE.BDR         = FFFFFFCE            IE.NFI         = FFFFFFC4            
FCB_FIB          0000004C            IE.BDV         = FFFFFFC9            IE.NFW         = FFFFFFBB            
FCB_FID          00000000            IE.BHD         = FFFFFFC0            IE.NLK         = FFFFFFB1            
FCB_FNAME        00000014            IE.BLB         = FFFFFFBA            IE.NLN         = FFFFFFDB            
FCB_FNAMEDESC    0000000C            IE.BLK         = FFFFFFEC            IE.NNC         = FFFFFFB3            
FCB_FNB          00000002            IE.BNM         = FFFFFFCA            IE.NNL         = FFFFFFB2            
FCB_PC           00000078            IE.BTF         = FFFFFFB4            IE.NNN         = FFFFFFBC            
FCB_RESULT       00000030            IE.BTP         = FFFFFFD5            IE.NOD         = FFFFFFE9            
FCB_RESULTDESC   00000004            IE.BVR         = FFFFFFC1            IE.NSF         = FFFFFFE6            
FCB_SIZE         000000B4            IE.BYT         = FFFFFFED            IE.NST         = FFFFFFB0            
FP_AP            00000008            IE.CKP         = FFFFFFF6            IE.NSW         = FFFFFFEE            
FP_FP            0000000C            IE.CKS         = FFFFFFE2            IE.NVR         = FFFFFFAA            
FP_PC            00000010            IE.CLO         = FFFFFFDA            IE.NVW         = FFFFFFA9            
FP_PSL           00000004            IE.CNR         = FFFFFFB7            IE.OFL         = FFFFFFBF            
FP_REGISTERS     00000014            IE.CON         = FFFFFFEA            IE.ONP         = FFFFFFFB            
GBL...         = 00000000            IE.DAA         = FFFFFFF8            IE.OVR         = FFFFFFEE            
H.CSP            00000000            IE.DAO         = FFFFFFF3            IE.PES         = FFFFFFAD            
H.CUIC           00000008            IE.DFU         = FFFFFFE8            IE.PNS         = FFFFFFA2            
H.DSW            00000026            IE.DNA         = FFFFFFF9            IE.PRI         = FFFFFFF0            
H.DUIC           0000000A            IE.DNR         = FFFFFFFD            IE.PTS         = FFFFFFFD            
H.EFLM           00000004            IE.DUN         = FFFFFFF7            IE.RAC         = FFFFFFD4            
H.EFSV           00000020            IE.DUP         = FFFFFFC7            IE.RAT         = FFFFFFD3            
H.FCS            00000028            IE.EOF         = FFFFFFF6            IE.RBG         = FFFFFFD8            
H.FORT           0000002A            IE.EOT         = FFFFFFC2            IE.RBS         = FFFFFFF1            
H.FPSA           00000022            IE.EOV         = FFFFFFF5            IE.RCN         = FFFFFFD2            
H.FPVA           0000001C            IE.EXP         = FFFFFFB5            IE.RER         = FFFFFFE0            
H.GARD           0000003A            IE.FEX         = FFFFFFCF            IE.RNM         = FFFFFFCD            
H.HDLN           00000002            IE.FHE         = FFFFFFC5            IE.RSU         = FFFFFFEF            
H.IPC            0000000E            IE.FIX         = FFFFFFF7            IE.SDP         = FFFFFF9D            
H.IPS            0000000C            IE.FLN         = FFFFFFAF            IE.SNC         = FFFFFFDD            
H.ISP            00000010            IE.FOP         = FFFFFFCB            IE.SPC         = FFFFFFFA            
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 05:11:32   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (7)

IE.SQC         = FFFFFFDC            I_FLOATTMP       000001B8            PSL_FPD        = 0000001B            
IE.SRE         = FFFFFFF2            I_GARD           000000EC            PSL_FU         = 00000006            
IE.STK         = FFFFFFC6            I_HIGHEFN        0000016C            PSL_TBIT       = 00000004            
IE.TCH         = FFFFFFF5            I_HIGHSIZE       000000F4            QIOV_FILES     = 00000000            
IE.TMM         = FFFFFFB9            I_IMAGEVBN       000000F8            QIO_FLAGS        0000001A            
IE.TMO         = FFFFFFB6            I_INISIZE        000000F0            QIO_IOSB         0000000E            
IE.ULK         = FFFFFFAB            I_LENGTH         000001F0            QIO_LUT          00000016            
IE.ULN         = FFFFFFFB            I_LOGNAME        000000E0            QIO_SECONDBLK    0000001C            
IE.UNS         = FFFFFFFC            I_LUT            00000168            QIO_SIZE         00000020            
IE.UPN         = FFFFFFFF            I_NLUN           00000164            RSX$A_TIIDEV     ********   X   05   
IE.VER         = FFFFFFFC            I_PC             00000020            RSX$A_TIODEV     ********   X   05   
IE.WAC         = FFFFFFE3            I_PPFINDEX       00000162            RSX$CHK_TI_INP   000000D2 RG    05   
IE.WAT         = FFFFFFE1            I_PROCNAME       0000014C            RSX$CHK_TI_OUT   000000D9 RG    05   
IE.WCK         = FFFFFFAA            I_PS             00000024            RSX$CR_DRV       ********   X   05   
IE.WER         = FFFFFFDF            I_PWRAST         000001A0            RSX$C_SUBSYSTEM= 00000006            
IE.WLK         = FFFFFFF4            I_R0             00000000            RSX$DLVRQIOAST   0000010B RG    05   
IE.WOV         = FFFFFFAB            I_R1             00000004            RSX$DSK_DRV      ********   X   05   
IEADP            00000029 R     05   I_R2             00000008            RSX$IEIFC        000000F3 RG    05   
IEILU            00000015 R     05   I_R3             0000000C            RSX$IODONEAST    ********   X   05   
IESDP            00000033 R     05   I_R4             00000010            RSX$IOKILL       000000FC RG    05   
IEULN            0000001F R     05   I_R5             00000014            RSX$ISSUQIO      00000124 RG    05   
IS.BV          = 00000005            I_R6             00000018            RSX$LP_DRV       ********   X   05   
IS.CC          = 00000301            I_RAD50NAME      00000148            RSX$MT_DRV       ********   X   05   
IS.CLR         = 00000000            I_RCVAST         0000019C            RSX$QIO          0000003D RG    05   
IS.CR          = 00000D01            I_RCVMAIL        00000160            RSX$QIOW         00000000 RG    05   
IS.EOT         = 00000401            I_RUNFLAGS       0000018C            RSX$RMS_DRV      ********   X   05   
IS.ESC         = 00001B01            I_SCRATCH        00000028            RSX$SETUPAST     ********   X   05   
IS.ESQ         = 00009B01            I_SSTVEC         00000194            RSX$TTY_DRV      ********   X   05   
IS.PES         = 00008001            I_SSTVECL        00000196            RSX$UKN_DRV      ********   X   05   
IS.PND         = 00000000            I_STATE          00000170            RSX$WTSE         ********   X   05   
IS.RDD         = 00000002            I_TYPE           0000001C            RSX$_ACCVIO    = 00068044            
IS.SET         = 00000002            I_UIC            0000013C            RSX$_BADLIBREF = 0006806C            
IS.SPD         = 00000002            I_WAIT           00000178            RSX$_BADSTACK  = 0006804C            
IS.SUC         = 00000001            I_WAITSAVE       00000180            RSX$_BREAK     = 0006800C            
IS.TAB         = 00000901            LUTC_CR        = 00000005            RSX$_EXITSTATUS= 00068640            
IS.TMO         = 00000002            LUTC_DISK      = 00000002            RSX$_EXTERNABRT= 0006805C            
I_ADR0           000000FC            LUTC_LP        = 00000004            RSX$_ILLINST   = 0006802C            
I_ASCIINAME      00000140            LUTC_RMS       = 00000000            RSX$_IMAGETERM = 00068084            
I_ASTPOOL        000000D0            LUTC_TAPE      = 00000003            RSX$_INSFDYNMEM= 00068054            
I_ASTQUEUE       000000C8            LUTC_TRM       = 00000001            RSX$_IOT       = 00068014            
I_BAILOUTFP      00000188            LUTV_CTRLC     = 00000002            RSX$_LIBNOTFND = 00068074            
I_CMDROUT        000000E8            LUTV_CTRLO     = 00000000            RSX$_LOADERROR = 0006807C            
I_CURAST         00000198            LUTV_PRM       = 00000003            RSX$_NOCOMM    = 00068094            
I_DEBVEC         00000190            LUT_CHAN         0000000C            RSX$_NONRSXEMT = 0006801C            
I_DEBVECL        00000192            LUT_CHAR         00000012            RSX$_NOPMD     = 00068332            
I_FCBPOOL        000000D8            LUT_CTRLC        00000032            RSX$_NOSUCHDEV = 00068322            
I_FCC            000001B4            LUT_FLAGS        0000000A            RSX$_NOTSKIMG  = 00068064            
I_FLOATA0        000001C0            LUT_INFONAME     0000002E            RSX$_ODDADDR   = 00068034            
I_FLOATA1        000001C8            LUT_INFOUNIT     00000030            RSX$_PMD       = 0006832A            
I_FLOATA2        000001D0            LUT_LINK         00000000            RSX$_RCVMBXSIZ = 0000012C            
I_FLOATA3        000001D8            LUT_REALNAME     0000001E            RSX$_REGMSG    = 0006808C            
I_FLOATA4        000001E0            LUT_REF          00000008            RSX$_RESERVED  = 00068004            
I_FLOATA5        000001E8            LUT_RSXNAME      00000010            RSX$_TBIT      = 0006803C            
I_FLOATADR       000001B0            LUT_SIZE         00000036            RSX$_TRAP      = 00068024            
I_FLOATAST       000001A4            LUT_TYPE         00000016            RSX$_VERIFYCMD = 00068648            
I_FLOATCSR       000001A8            PSL_CC         = 00000000            SS$_ILLIOFUNC    ********   X   05   
I_FLOATERR       000001AC            PSL_CM         = 0000001F            SS$_NORMAL       ********   X   05   
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 05:11:32   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (7)

SV_ASTLVL        00000004            
SV_DCL           00000002            
SV_FLOATAST      00000009            
SV_NOAST         00000003            
SV_PENDWAIT      00000005            
SV_PWRAST        00000008            
SV_RCVAST        00000007            
SV_RESTORE       00000000            
SV_TRANSLATE     00000001            
SV_WAIT          00000006            
SYS$CANCEL       ********   X   05   
SYS$QIO          ********   X   05   
SYS$SETEF        ********   X   05   
W.BATT           00000006            
W.BFPD           0000000C            
W.BHVR           00000004            
W.BLGH           00000010            
W.BLPD           0000000E            
W.BLVR           00000002            
W.BNPD           0000000D            
W.BOFF           0000000A            
W.BPCB           00000000            
W.BSIZ           00000008            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
..ABS.           00000042      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000000      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXDEF           000001F4      04     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXCODE          00000139      05       PIC   USR   CON   REL   LCL   SHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
16924. BYTES LEFT IN FREE MEMORY POOL.
316. BYTES OF RECLAIMED MEMORY.
OBJ$:RSXQIO,LIS$:RSXQIO/-SP=EXECML$/ML,LIB$:R/ML,SRC$:RSXQIO
22 MLB DIR RDS - 481 GETS TO DEFINE 19 MACROS. 14 INTER. FILE WRITES. 
