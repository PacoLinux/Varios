RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      84  RSX$TTY_DRV - RSX11M AME TERMINAL I/O DRIVER
   (3)     138  TTY_RPR,TTY_RVB AND TTY_RLB FUNCTIONS
   (4)     224  TTY_WVB AND TTY_WLB FUNCTIONS
   (6)     271  TTY_ATT - ATTACH FUNCTION
   (7)     314  RSX$CTRLCASTEN - ENABLE CONTROL C AST
   (8)     350  TTY_DET DETACH TERMINAL FUNCTION
   (9)     373  RSX$CTRLCDSABL - DISABLE CONTROL C AST
   (10)    400  TTY_SET FUNCTIONS
   (11)    526  TTY_HANG FUNCTION
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page   1
V06.0                                                                                                                            (1)

                                     0000     1 	.TITLE	RSXTTYDRV - VAX/VMS RSX11M AME TERMINAL DRIVER
                                     0000     2 	.IDENT	/V06.0/		;
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1978
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY:
                                     0000    25 ;
                                     0000    26 ;	VAX/VMS RSX11M AME 
                                     0000    27 ;
                                     0000    28 ; ABSTRACT:
                                     0000    29 ;
                                     0000    30 ;	TERMINAL I/O DRIVER
                                     0000    31 ;
                                     0000    32 ; AUTHOR: R.HEINEN 4-NOV-76
                                     0000    33 ;--
                                     0000    34 ;
                                     0000    35 ; EXTERNAL SYMBOLS
                                     0000    36 ;
                                     0000    37 	$RSXDEF			; DEFINE RSX SYMBOLS
                                     0000    38 	DRERR$			; DEFINE RSX11M DIRECTIVE STATUS CODES
                                     0000    39 	SPCIO$			; DEFINE RSX11M SPECIAL I/O CODES
                                     0000    40 	FILIO$			; DEFINE RSX11M FILE I/O CODES
                                     0000    41 	$DEVDEF			; DEFINE DEVICE CHARACTERISTICS BITS
                                     0000    42 	$TTDEF			; DEFINE TERMINAL SPECIAL SYMBOLS
                                     0000    43 	TTSYM$			; DEFINE RSX TERMINAL CODES
                                     0000    44 ;
                                     0000    45 ; LOCAL SYMBOLS
                                     0000    46 ;
                                     0000    47 ; THESE SYMBOLS DEVICE THE SCRATCH AREA
                                     0000    48 ;
                           0000005C  0000    49 I_CHARACTER	=I_SCRATCH+<4*12>+4
                                     0000    50 ;
                                     0000    51 ; LOCAL STORAGE
                                     0000    52 ;
                                 00000000    53 	.PSECT	RSXPURE,NOWRT,EXE,LONG,PIC,SHR
                                     0000    54 SETGETTAB:				; TABLE OF TERMINAL CHARACTERISTIC RELATIONS
                              03 1D  0000    55 	.BYTE	TC.ESQ,TT$V_ESCAPE	;
                              0C 0A  0002    56 	.BYTE	TC.SCP,TT$V_SCOPE	;
                              01 27  0004    57 	.BYTE	TC.NEC,TT$V_NOECHO	;
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page   2
V06.0                                                                                                                            (1)

                              07 15  0006    58 	.BYTE	TC.SMR,TT$V_LOWER	;
                              0E 24  0008    59 	.BYTE	TC.HLD,TT$V_HOLDSCREEN	;
                              20 29  000A    60 	.BYTE	TC.PRI,32		;
                              02 28  000C    61 	.BYTE	TC.SLV,TT$V_NOTYPEAHD	;
                                 00  000E    62 	.BYTE	0			;
                                     000F    63 ;
                                     000F    64 ; TERMINAL READ TERMINATOR TABLE
                                     000F    65 ;
                                     000F    66 TERMINATOR:
                           00000000  000F    67 	.LONG	0			;
                           0C002000  0013    68 	.LONG	<1@13>+<1@26>+<1@27>	; CR,ESC AND ^Z
                                     0017    69 SPECIALTRM:				; 11M READ WITH SPECIAL TERMINATORS
                           00000010  0017    70 	.LONG	16			;
                           0000001F' 001B    71 	.LONG	10$
                           FFFFFFFF  001F    72 10$:	.LONG	-1
                           00000000  0023    73 	.LONG	0
                           00000000  0027    74 	.LONG	0
                           80000000  002B    75 	.LONG	1@31
                                     002F    76 RSX$GL_CARRIAGE::			; CARRIAGE CONTROL CONVERTION
                           20 8D 01  002F    77 	.BYTE	1,128+13,^A/ /		; SPACE
                           30 8D 02  0032    78 	.BYTE	2,128+13,^A/0/		; 0
                           31 8D 8C  0035    79 	.BYTE	128+12,128+13,^A/1/	; 1
                           2B 8D 00  0038    80 	.BYTE	0,128+13,^A/+/		; +
                           24 00 01  003B    81 	.BYTE	1,0,^A/$/		; $
                           00 8D 01  003E    82 	.BYTE	1,128+13,0		; DEFAULT
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page   3
V06.0           RSX$TTY_DRV - RSX11M AME TERMINAL I/O DRIVER                                                                     (2)

                                     0041    84 	.SBTTL	RSX$TTY_DRV - RSX11M AME TERMINAL I/O DRIVER
                                     0041    85 ;++
                                 00000000    86 	.PSECT	RSXCODE,NOWRT,SHR,PIC
                                     0000    87 ; RSX$TTY_DRV TERMINAL I/O DRIVER
                                     0000    88 ;
                                     0000    89 ; FUNCTIONAL DESCRIPTION:
                                     0000    90 ;
                                     0000    91 ; THIS ROUTINE PROCESSES TERMINAL DIRECTED I/O.
                                     0000    92 ;
                                     0000    93 ; INPUTS:
                                     0000    94 ;
                                     0000    95 ;	R2 = ADDRESS OF THE QIO CONTEXT BLOCK
                                     0000    96 ;	R3 = MAJOR FUNCTION CODE
                                     0000    97 ;	R5 = QIO DPB AREA ADDRESS
                                     0000    98 ;	R6 = IMAGE STACK POINTER
                                     0000    99 ;	R7 = ENTIRE FUNCTION CODE
                                     0000   100 ;	R8 = LUT ADDRESS
                                     0000   101 ;	R10 = ADDRESS OF THE IMAGE IMPURE DATA BASE
                                     0000   102 ;	R11 = ADDRESS OF THE IMAGE
                                     0000   103 ;
                                     0000   104 ; OUTPUTS:
                                     0000   105 ;
                                     0000   106 ;	R6,R10,R11 ARE PRESERVED.
                                     0000   107 ;--
                                     0000   108 RSX$TTY_DRV::				; TERMINAL I/O DRIVER
                                     0000   109 	CASE	R3,<-			;
                                     0000   110 		TTY_KILL,-		; I/O KILL
                                     0000   111 		TTY_WLB,-		; WRITE LOGICAL BLOCK
                                     0000   112 		TTY_RLB,-		; READ LOGICAL BLOCK
                                     0000   113 		TTY_ATT,-		; ATTACH DEVICE
                                     0000   114 		TTY_DET,-		; DETACH DEVICE
                                     0000   115 		TTY_SET,-		; FUNCTION CODE 5
                                     0000   116 		TTY_HANG,-		; FUNCTION CODE 6
                                     0000   117 		RSX$IEIFC,-		; ILLEGAL
                                     0000   118 		RSX$IEIFC,-		; ILLEGAL
                                     0000   119 		TTY_RPR,-		; FUNCTION CODE 9
                                     0000   120 		RSX$IEIFC,-		; ILLEGAL
                                     0000   121 		RSX$DLVRQIOAST,-	; REMOVE FILE NAME
                                     0000   122 		RSX$DLVRQIOAST,-	; ENTER FILE NAME
                                     0000   123 		RSX$DLVRQIOAST,-	; ACCESS FOR READ
                                     0000   124 		RSX$DLVRQIOAST,-	; ACCESS FOR WRITE
                                     0000   125 		RSX$DLVRQIOAST,-	; ACCESS FOR EXTEND
                                     0000   126 		RSX$DLVRQIOAST,-	; DEACCESS
                                     0000   127 		TTY_RVB,-		; READ VIRTUAL BLOCK
                                     0000   128 		TTY_WVB,-		; WRITE VIRTUAL BLOCK
                                     0000   129 		RSX$DLVRQIOAST,-	; EXTEND FILE
                                     0000   130 		RSX$DLVRQIOAST,-	; CREATE FILE
                                     0000   131 		RSX$DLVRQIOAST,-	; DELETE FILE
                                     0000   132 		RSX$DLVRQIOAST,-	; READ ATTRIBUTES
                                     0000   133 		RSX$DLVRQIOAST,-	; WRITE ATTRIBUTES
                                     0000   134 		RSX$DLVRQIOAST,-	; ACP CONTROL
                                     0000   135 		>
                          FFC7'  31  0036   136 	BRW	RSX$IEIFC		; ILLEGAL FUNCTION
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page   4
V06.0           TTY_RPR,TTY_RVB AND TTY_RLB FUNCTIONS                                                                            (3)

                                     0039   138 	.SBTTL	TTY_RPR,TTY_RVB AND TTY_RLB FUNCTIONS
                                     0039   139 	.ENABL	LSB
                                     0039   140 ;
                                     0039   141 ; READ PROMPT FUNCTION
                                     0039   142 ;
                                     0039   143 TTY_RPR:				; TERMINAL READ PROMPT
                          FFC4'  30  0039   144 	BSBW	RSX$CHK_TI_INP		; CHECK FOR TI INPUT
         34 AA       0000'8F     3C  003C   145 	MOVZWL	#IO$_READPROMPT,I_SCRATCH+12(R10); ASSUME PROMPTED READ
         54 AA         06 A5     3C  0042   146 	MOVZWL	6(R5),I_SCRATCH+44(R10)	; INSERT PROMPT ADDRESS
         58 AA         08 A5     3C  0047   147 	MOVZWL	8(R5),I_SCRATCH+48(R10)	; INSERT SIZE OF PROMPT
         4C AA         04 A5     3C  004C   148 	MOVZWL	4(R5),I_SCRATCH+36(R10)	; INSERT TIMEOUT COUNT
                          1E     13  0051   149 	BEQL	10$			; IF EQL THEN NO TIMEOUT
         34 AA       0000'8F     A8  0053   150 	BISW	#IO$M_TIMED,I_SCRATCH+12(R10)
                          16     11  0059   151 	BRB	10$			; CONTINUE IN COMMON
                                     005B   152 ;
                                     005B   153 ; READ VIRTUAL FUNCTIONS
                                     005B   154 ;
                                     005B   155 TTY_RVB:				; TERMINAL READ VIRTUAL
                          FFA2'  30  005B   156 	BSBW	RSX$CHK_TI_INP		; CHECK FOR TI INPUT
                          57     94  005E   157 	CLRB	R7			; REMOVE SUBFUNCTION BITS
         34 AA       0000'8F     3C  0060   158 	MOVZWL	#IO$_READVBLK,I_SCRATCH+12(R10); SET UP FUNCTION CODE
                          09     11  0066   159 	BRB	10$			; CONTINUE IN COMMON
                                     0068   160 ;
                                     0068   161 ; READ LOGICAL FUNCTION
                                     0068   162 ;
                                     0068   163 TTY_RLB:				; READ LOGICAL
                          FF95'  30  0068   164 	BSBW	RSX$CHK_TI_INP		; CHECK FOR TI INPUT
         34 AA       0000'8F     3C  006B   165 	MOVZWL	#IO$_READLBLK,I_SCRATCH+12(R10); SET UP FUNCTION CODE
                                     0071   166 ;
                                     0071   167 ; CLEAR CONTROL O CANCEL ON TERMINAL
                                     0071   168 ;
         0A A8            00     E5  0071   169 10$:	BBCC	#LUTV_CTRLO,LUT_FLAGS(R8),20$; CLEAR CONTROL O
                          00         0075       
                                     0076   170 ;
                                     0076   171 ; ASSUME NORMAL RSX TERMINATORS
                                     0076   172 ;
         50 AA       000F'CF     9E  0076   173 20$:	MOVAB	W^TERMINATOR,I_SCRATCH+40(R10); INSERT ADDRESS OF TERMINATOR BITMASK
                                     007C   174 ;
                                     007C   175 ; TERMINAL SUBFUNCTIONS
                                     007C   176 ;
                                     007C   177 ; READ - SPECIAL TERMINATORS - IO.RST
                                     007C   178 ;
            57            01     93  007C   179 	BITB	#<IO.RST&^X0FF>,R7	; READ SPECIAL TERMINATORS?
                          0E     13  007F   180 	BEQL	30$			; IF EQL THEN NO
                                     0081   181 ;
                                     0081   182 ; SET UP SPECIAL TERMINATORS I/O
                                     0081   183 ;
         34 AA       0000'8F     A8  0081   184 	BISW	#IO$M_TRMNOECHO!IO$M_NOFILTR,I_SCRATCH+12(R10); SET FUNCTION CODE
         50 AA       0017'CF     9E  0087   185 	MOVAB	W^SPECIALTRM,I_SCRATCH+40(R10); SET TERMINATORS
                          1C     11  008D   186 	BRB	40$			; LOOK FOR NOECHO ETC.
                                     008F   187 ;
                                     008F   188 ; READ - PASSALL
                                     008F   189 ;
            57            08     93  008F   190 30$:	BITB	#IO.RAL&^X0FF,R7	; READ PASSALL?
                          17     13  0092   191 	BEQL	40$			; IF EQL THEN NOT SPECIFIED
                                     0094   192 ;
                                     0094   193 ; READ PASSALL WITHOUT THE NOECHO BIT IS A READ NO FILTER
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page   5
V06.0           TTY_RPR,TTY_RVB AND TTY_RLB FUNCTIONS                                                                            (3)

                                     0094   194 ; READ PASSALL AND NOECHO IS A READ READ PASSALL.
                                     0094   195 ;
         34 AA       0000'8F     A8  0094   196 	BISW	#IO$M_NOFILTR,I_SCRATCH+12(R10); ASSUME NO FILTER
         50 AA         64 AA     9E  009A   197 	MOVAB	I_SCRATCH+60(R10),I_SCRATCH+40(R10);SET UP PASSALL DESC
         64 AA            01     D0  009F   198 	MOVL	#1,I_SCRATCH+60(R10)
         68 AA         6C AA     9E  00A3   199 	MOVAB	I_SCRATCH+68(R10),I_SCRATCH+64(R10)
                       6C AA     D4  00A8   200 	CLRL	I_SCRATCH+68(R10)
                                     00AB   201 ;
                                     00AB   202 ; READ - NOECHO
                                     00AB   203 ;
            10            57     93  00AB   204 40$:	BITB	R7,#<IO.RNE&^X0FF>	; READ NO ECHO?
                          06     13  00AE   205 	BEQL	50$			; IF EQL THEN NO
         34 AA       0000'8F     A8  00B0   206 	BISW	#IO$M_NOECHO,I_SCRATCH+12(R10); INSERT READ NO ECHO
                                     00B6   207 ;
                                     00B6   208 ; CHECK FOR READ PHYSICAL BLOCK
                                     00B6   209 ;
            57            20     B3  00B6   210 50$:	BITW	#<IO.RPB&^X0FF>,R7	; READ PHYSICAL SET?
                          1B     13  00B9   211 	BEQL	60$			; IF EQL THEN NO
            00   00000000'8F     F0  00BB   212 	INSV	#IO$_READPBLK,#0,#6,I_SCRATCH+12(R10); SET READ PHYSICAL FUNCTION
         34 AA            06         00C2       
         50 AA         64 AA     9E  00C5   213 	MOVAB	I_SCRATCH+60(R10),I_SCRATCH+40(R10); SET UP PASSALL DESC
         64 AA            01     D0  00CA   214 	MOVL	#1,I_SCRATCH+60(R10)
         68 AA         6C AA     9E  00CE   215 	MOVAB	I_SCRATCH+68(R10),I_SCRATCH+64(R10)
                       6C AA     D4  00D3   216 	CLRL	I_SCRATCH+68(R10)
                                     00D6   217 ;
                                     00D6   218 ; ISSUE I/O
                                     00D6   219 ;
                          FF27'  31  00D6   220 60$:	BRW	RSX$ISSUQIO		; EXECUTE QIO
                                     00D9   221  
                                     00D9   222 	.DSABL	LSB
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page   6
V06.0           TTY_WVB AND TTY_WLB FUNCTIONS                                                                                    (4)

                                     00D9   224 	.SBTTL	TTY_WVB AND TTY_WLB FUNCTIONS
                                     00D9   225  
                                     00D9   226 	.ENABL	LSB
                                     00D9   227 ;
                                     00D9   228 ; TERMINAL WRITE VIRTUAL BLOCK
                                     00D9   229 ;
                                     00D9   230 TTY_WVB:				; WRITE VIRTUAL BLOCK
                          FF24'  30  00D9   231 	BSBW	RSX$CHK_TI_OUT		; CHECK FOR TI OUTPUT
                          57     94  00DC   232 	CLRB	R7			; REMOVE SUBFUNCTION BITS
         34 AA       0000'8F     3C  00DE   233 	MOVZWL	#IO$_WRITEVBLK,I_SCRATCH+12(R10); SET FUNCTION CODE
                          09     11  00E4   234 	BRB	10$			; CONTINUE IN COMMON
                                     00E6   235 ;
                                     00E6   236 ; TERMINAL WRITE LOGICAL BLOCK
                                     00E6   237 ;
                                     00E6   238 TTY_WLB:				; WRITE LOGICAL BLOCK
                          FF17'  30  00E6   239 	BSBW	RSX$CHK_TI_OUT		; CHECK FOR TI OUTPUT
         34 AA       0000'8F     3C  00E9   240 	MOVZWL	#IO$_WRITELBLK,I_SCRATCH+12(R10); SET FUNCTION CODE
                                     00EF   241 ;
                                     00EF   242 ; TERMINAL WRITE SUBFUNCTIONS
                                     00EF   243 ;
            08            57     93  00EF   244 10$:	BITB	R7,#<IO.WAL&^X0FF>	; RSX WRITE PHYSICAL?
                          06     13  00F2   245 	BEQL	20$			; IF EQL THEN NO
         34 AA       0000'8F     A8  00F4   246 	BISW	#IO$M_NOFORMAT,I_SCRATCH+12(R10); SET FUNCTION
            20            57     93  00FA   247 20$:	BITB	R7,#<IO.CCO&^X0FF>	; CANCEL CONTROL O?
                          05     12  00FD   248 	BNEQ	30$			; SET SUBFUNCTION IF YES
         0A A8            00     E5  00FF   249 	BBCC	#LUTV_CTRLO,LUT_FLAGS(R8),40$; BR IF NOT SPECIAL CASE
                          06         0103       
         34 AA       0000'8F     A8  0104   250 30$:	BISW	#IO$M_CANCTRLO,I_SCRATCH+12(R10); SET CANCEL CONTROL O MODIFIER
                          FEF3'  31  010A   251 40$:	BRW	RSX$ISSUQIO		; EXECUTE THE QIO
                                     010D   252  
                                     010D   253 	.DSABL	LSB
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page   7
V06.0           TTY_WVB AND TTY_WLB FUNCTIONS                                                                                    (5)

                                     010D   255 ;
                                     010D   256 ; TTY_KILL - I/O KILL  FUNCTION
                                     010D   257 ;
                                     010D   258 TTY_KILL:				; I/O KILL
                                     010D   259 ;
                                     010D   260 ; SPECIAL CASE TI:
                                     010D   261 ;
         10 A8       4954 8F     B1  010D   262 	CMPW	#^A/TI/,LUT_RSXNAME(R8)	; BR IF NOT TI
                          1C     12  0113   263 	BNEQ	10$			; IF NEQ THEN NOT TI
            50       0000'CF     9E  0115   264 	MOVAB	W^RSX$A_TIIDEV,R0	; ADDRESS TI INPUT LUT
         0C A0         0C A8     B1  011A   265 	CMPW	LUT_CHAN(R8),LUT_CHAN(R0); OUTPUT SAME AS INPUT?
                          05     12  011F   266 	BNEQ	5$			;
            50       0000'CF     9E  0121   267 	MOVAB	W^RSX$A_TIODEV,R0	; GET OTHER LUT
                                     0126   268 5$:	$CANCEL_S	LUT_CHAN(R0)	; CANCEL I/O ON COMPLEMENT LUT
                          FECC'  31  0131   269 10$:	BRW	RSX$IOKILL		; KILL THE I/O
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page   8
V06.0           TTY_ATT - ATTACH FUNCTION                                                                                        (6)

                                     0134   271 	.SBTTL	TTY_ATT - ATTACH FUNCTION
                                     0134   272 ;
                                     0134   273 ; TTY_ATT - ATTACH DEVICE FUNCTION
                                     0134   274 ;
                                     0134   275 TTY_ATT:				;  ATTACH DEVICE
         0A A8            01     88  0134   276 	BISB	#1@LUTV_CTRLO,LUT_FLAGS(R8); SET THE CANCEL CONDITION
         10 A8       4954 8F     B1  0138   277 	CMPW	#^A/TI/,LUT_RSXNAME(R8)	; BR IF NOT TI
                          0A     12  013E   278 	BNEQ	30$			; IF NEQ THEN NOT TI
       000A'CF            01     88  0140   279 	BISB	#1@LUTV_CTRLO,W^LUT_FLAGS+RSX$A_TIIDEV; SET CANCEL
       000A'CF            01     88  0145   280 	BISB	#1@LUTV_CTRLO,W^LUT_FLAGS+RSX$A_TIODEV; SET CANCEL
            57            08     91  014A   281 30$:	CMPB	#<IO.ATA&^X0FF>,R7	; ATTACH FOR UNSOLICITED DATA?
                          45     12  014D   282 	BNEQ	70$			; IF NEQ THEN NO
                                     014F   283 ;
                                     014F   284 ; AST SPECIFIED
                                     014F   285 ;
            50       0000'8F     3C  014F   286 	MOVZWL	#SS$_BADPARAM,R0	; ASSUME ERROR
            54            65     3C  0154   287 	MOVZWL	(R5),R4			; GET ADDRESS
                          3B     13  0157   288 	BEQL	70$			; IF EQL THEN NO
            38            54     E8  0159   289 	BLBS	R4,70$			; IF LOW SET THEN ERROR
                                     015C   290 ;
                                     015C   291 ; ASK FOR AST ON CONTROL C
                                     015C   292 ;
         0A A8            02     E2  015C   293 	BBSS	#LUTV_CTRLC,LUT_FLAGS(R8),65$; BR IF ENABLED AND ENABLE
                          2E         0160       
            59            52     D0  0161   294 	MOVL	R2,R9			; SAVE ADDRESS OF THE I/O CONTEXT
            52         32 A8     D0  0164   295 	MOVL	LUT_CTRLC(R8),R2	; ADDRESS CURRENT BLOCK
                          07     13  0168   296 	BEQL	40$			; IF EQL THEN NONE IN USE YET
         0C A2            01     E0  016A   297 	BBS	#ACBV_INPROG,ACB_FLAGS(R2),60$; BR IF IN PROGRESS - ENABLE AFTER ASTX
                          1D         016E       
                          03     11  016F   298 	BRB	50$			; CONTINUE IN COMMON
                          FE8C'  30  0171   299 40$:	BSBW	RSX$SETUPAST		; ALLOCATE A CONTROL BLOCK
         32 A8            52     D0  0174   300 50$:	MOVL	R2,LUT_CTRLC(R8)	; SAVE ADDRESS OF THE CONTEXT
         08 A2            03     9B  0178   301 	MOVZBW	#3,ACB_UPRM(R2)		; SET UP PARAMETER FOR AST
         0A A2            54     B0  017C   302 	MOVW	R4,ACB_UPC(R2)		; SAVE AST SERVICE ADDRESS
         0C A2       0201 8F     B0  0180   303 	MOVW	#<1@ACBV_PERM>+<ACBC_CTLRCAST@ACBV_TYPE>,ACB_FLAGS(R2); SET TYPE
         0E A2            58     D0  0186   304 	MOVL	R8,ACB_FLAGS+2(R2)	; SAVE LUT ADDRESS
                          11     10  018A   305 	BSBB	CTRLCASTEN		; ENABLE AST
            52            59     D0  018C   306 60$:	MOVL	R9,R2			; RESET QIO CONTEXT
            50       0000'8F     3C  018F   307 65$:	MOVZWL	#SS$_NORMAL,R0		; SET STATUS
                                     0194   308 ;
                                     0194   309 ; FINISH OPERATION
                                     0194   310 ;
                          51     D4  0194   311 70$:	CLRL	R1			;
                          FE67'  31  0196   312 	BRW	RSX$DLVRQIOAST		; POST STATUS
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page   9
V06.0           RSX$CTRLCASTEN - ENABLE CONTROL C AST                                                                            (7)

                                     0199   314 	.SBTTL RSX$CTRLCASTEN - ENABLE CONTROL C AST
                                     0199   315 ;++
                                     0199   316 ; RSX$CTRLCASTEN - ENABLE CONTROL C AST
                                     0199   317 ;
                                     0199   318 ; FUNCTIONAL DESCRIPTION:
                                     0199   319 ;
                                     0199   320 ; THIS ROUTINE IS USED DURING THE PROCESSING OF AN IO.ATA I/O FUNCTION
                                     0199   321 ; AND AFTER THE AST EXIT OF THE ASSOCIATED AST.
                                     0199   322 ;
                                     0199   323 ; THE ACTION IS TO ENABLE THE AST FUNCTION.
                                     0199   324 ;
                                     0199   325 ; INPUTS:
                                     0199   326 ;
                                     0199   327 ;	R8 = ADDRESS OF THE LUT ENTRY
                                     0199   328 ;	R10 = ADDRESS OF THE IMAGE IMPURE DATA BASE
                                     0199   329 ;	R11 = ADDRESS OF THE IMAGE
                                     0199   330 ;
                                     0199   331 ; OUTPUTS:
                                     0199   332 ;
                                     0199   333 ;	R0 = STATUS OF THE I/O
                                     0199   334 ;	R10,R11 ARE PRESERVED.
                                     0199   335 ;--
                                     0199   336 RSX$CTRLCASTEN::			; ENTRY FROM ASTX DIRECTIVE
            58         0E A2     D0  0199   337 	MOVL	ACB_FLAGS+2(R2),R8	; ADDRESS LUT ENTRY
                                     019D   338 CTRLCASTEN:				; ENTRY FROM IO.ATA
         0A A8            02     E1  019D   339 	BBC	#LUTV_CTRLC,LUT_FLAGS(R8),20$; BR IF NOT ENABLED
                          36         01A1       
                                     01A2   340 	$QIOW_S	#8,LUT_CHAN(R8),#IO$_SETMODE!IO$M_CTRLCAST,I_SCRATCH+8(R10),,,-
                                     01A2   341 		W^RSX$CTRLCAST,LUT_CTRLC(R8)
                          FE39'  30  01C4   342 	BSBW	RSX$RSXQIOERR		; MAP ERROR CODE
            0A            50     E9  01C7   343 	BLBC	R0,10$			; BR IF NOT SUCCESS
            50         30 AA     D0  01CA   344 	MOVL	I_SCRATCH+8(R10),R0	; GET IOSB STATUS
                          FE2F'  30  01CE   345 	BSBW	RSX$RSXQIOERR		; MAP IT
            04            50     E8  01D1   346 	BLBS	R0,20$			; BR IF SUCCESS
         0A A8            04     8A  01D4   347 10$:	BICB	#1@LUTV_CTRLC,LUT_FLAGS(R8); SET NOT ENABLED
                                 05  01D8   348 20$:	RSB				; RETURN
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page  10
V06.0           TTY_DET DETACH TERMINAL FUNCTION                                                                                 (8)

                                     01D9   350 	.SBTTL	TTY_DET DETACH TERMINAL FUNCTION
                                     01D9   351 ;
                                     01D9   352 ; TTY_DET - DETACH TERMINAL FUNCTION
                                     01D9   353 ;
                                     01D9   354 TTY_DET:				; DETACH TERMINAL
         0A A8            01     88  01D9   355 	BISB	#1@LUTV_CTRLO,LUT_FLAGS(R8); SET THE CANCEL CONDITION
         10 A8       4954 8F     B1  01DD   356 	CMPW	#^A/TI/,LUT_RSXNAME(R8)	; BR IF NOT TI
                          0A     12  01E3   357 	BNEQ	30$			; IF NEQ THEN NOT TI
       000A'CF            01     88  01E5   358 	BISB	#1@LUTV_CTRLO,W^LUT_FLAGS+RSX$A_TIIDEV; SET CANCEL
       000A'CF            01     88  01EA   359 	BISB	#1@LUTV_CTRLO,W^LUT_FLAGS+RSX$A_TIODEV; SET CANCEL
                                     01EF   360 ;
                                     01EF   361 ; DISABLE CONTROL C AST
                                     01EF   362 ;
         0A A8            02     E5  01EF   363 30$:	BBCC	#LUTV_CTRLC,LUT_FLAGS(R8),40$; BR IF CONTROL C NOT ENABLED
                          0B         01F3       
            59         32 A8     D0  01F4   364 	MOVL	LUT_CTRLC(R8),R9	; ADDRESS CONTEXT OF AST
         0C A9            01     E0  01F8   365 	BBS	#ACBV_INPROG,ACB_FLAGS(R9),40$; IF IN PROGRESS THEN SKIP DISABLE
                          02         01FC       
                          05     10  01FD   366 	BSBB	RSX$CTRLCDSABL		; DISABLE FUNCTION
                                     01FF   367 ;
                                     01FF   368 ; FINISH OPERATION
                                     01FF   369 ;
                          51     D4  01FF   370 40$:	CLRL	R1			;
                          FDFC'  31  0201   371 	BRW	RSX$DLVRQIOAST		; POST THE STATUS
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page  11
V06.0           RSX$CTRLCDSABL - DISABLE CONTROL C AST                                                                           (9)

                                     0204   373 	.SBTTL RSX$CTRLCDSABL - DISABLE CONTROL C AST
                                     0204   374 ;++
                                     0204   375 ; RSX$CTRLCDSABL - DISABLE CONTROL C AST
                                     0204   376 ;
                                     0204   377 ; FUNCTIONAL DESCRIPTION:
                                     0204   378 ;
                                     0204   379 ; THIS ROUTINE IS USED BY THE IO.DET I/O PROCESSING, THE ALUN DEASSIGN
                                     0204   380 ; LOGIC.
                                     0204   381 ;
                                     0204   382 ; THE ACTION IS TO DISABLE THE AST FUNCTION.
                                     0204   383 ;
                                     0204   384 ; INPUTS:
                                     0204   385 ;
                                     0204   386 ;	R8 = ADDRESS OF THE LUT ENTRY FOR THE CHANNEL
                                     0204   387 ;	R10 = ADDRESS OF THE IMAGE IMPURE DATA BASE
                                     0204   388 ;	R11 = ADDRESS OF THE IMAGE
                                     0204   389 ;
                                     0204   390 ; OUTPUTS:
                                     0204   391 ;
                                     0204   392 ;	R0 = STATUS OF THE QIO OPERATION
                                     0204   393 ;	R8,R10,R11 ARE PRESERVED.
                                     0204   394 ;--
                                     0204   395 RSX$CTRLCDSABL::			; DISABLE CONTROL C AST
                                     0204   396 	$QIOW_S	#9,LUT_CHAN(R8),#IO$_SETMODE!IO$M_CTRLCAST
         0A A8            04     8A  0222   397 	BICB	#1@LUTV_CTRLC,LUT_FLAGS(R8); SET THE CONDTION OFF
                                 05  0226   398 10$:	RSB				; RETURN
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page  12
V06.0           TTY_SET FUNCTIONS                                                                                               (10)

                                     0227   400 	.SBTTL	TTY_SET FUNCTIONS
                                     0227   401 ;
                                     0227   402 ; SET MODE FUNCTIONS FOR TERMINALS
                                     0227   403 ;
                                     0227   404 	.ENABL	LSB
                                     0227   405 TTY_SET:				; TERMINAL SET MODE 
            54            85     3C  0227   406 	MOVZWL	(R5)+,R4		; ADDRESS BUFFER
            59            54     D0  022A   407 	MOVL	R4,R9			; COPY START OF BUFFER FOR POSSIBLE ERROR
            55            65     3C  022D   408 	MOVZWL	(R5),R5			; GET REQUEST SIZE
                          57     95  0230   409 	TSTB	R7			; IO.GTS?
                          1E     12  0232   410 	BNEQ	20$			; IF NEQ THEN NO
                                     0234   411 ;
                                     0234   412 ; GET TERMINAL SUPPORT
                                     0234   413 ;
            50       0000'8F     3C  0234   414 	MOVZWL	#SS$_ACCVIO,R0		; ASSUME ERROR
                                     0239   415 	IFNOWRT R5,(R4),10$		; BR IF NOT WRITTABLE
            55            04     B1  023F   416 	CMPW	#4,R5			; ENOUGH?
                          0B     1A  0242   417 	BGTRU	10$			; IF GTRU THEN NO
            64   00033FB9 8F     D0  0244   418 	MOVL	#<F1.ACR!-		;
                                     024B   419 		F1.UIA!-
                                     024B   420 		F1.CCO!-
                                     024B   421 		F1.ESQ!-
                                     024B   422 		F1.LWC!-
                                     024B   423 		F1.RNE!-
                                     024B   424 		F1.RPR!-
                                     024B   425 		F1.RST!-
                                     024B   426 		F1.RUB!-
                                     024B   427 		F1.SYN!-
                                     024B   428 		F1.TRW!-
                                     024B   429 		<<F2.SCH+F2.GCH>@16>>,(R4); INSERT ANSWER
            50         00'8F     9A  024B   430 	MOVZBL	#SS$_NORMAL,R0		; SET SUCCESS
                          FDAE'  31  024F   431 10$:	BRW	RSX$DLVRQIOAST		; COMPLETE THE I/O
                                     0252   432 ;
                                     0252   433 ; GET OR SET MULTIPLE
                                     0252   434 ;
                                     0252   435 20$:
       0088 CA       008C CA     9E  0252   436 	MOVAB	I_SCRATCH+I_CHARACTER+8(R10),I_SCRATCH+I_CHARACTER+4(R10);
       0084 CA            0C     9A  0259   437 	MOVZBL	#12,I_SCRATCH+I_CHARACTER(R10)	;
                                     025E   438 	$GETCHN_S	LUT_CHAN(R8),,I_SCRATCH+I_CHARACTER(R10)
         70 8F            57     91  0273   439 	CMPB	R7,#<SF.GMC>&^X0FF	; SF.GMC?
                          34     12  0277   440 	BNEQ	45$			; IF NEQ THEN TRY SET
                                     0279   441 ;
                                     0279   442 ; GET CHARACTERISTIC
                                     0279   443 ;
                                     0279   444 	IFNOWRT	R5,(R4),40$		; IF NO ACCESS THEN ERROR
                          55     D7  027F   445 	DECL	R5			;
                          7C     19  0281   446 	BLSS	70$			; IF LSS THEN NONE TO DO
            55            54     C0  0283   447 	ADDL	R4,R5			; POINT TO END -1
            08            64     91  0286   448 25$:	CMPB	(R4),#TC.TTP		; TERMINAL TYPE?
                          06     12  0289   449 	BNEQ	30$			; IF NEQ THEN SOME OTHER
         01 A4            00     90  028B   450 	MOVB	#T.UNK0,1(R4)		; SET UNKNOWN TYPE
                          12     11  028F   451 	BRB	35$			; AND CONTINUE
                          008D   30  0291   452 30$:	BSBW	PICKCHAR		; GET NEXT CHARACTERISTIC
            6E            50     E9  0294   453 	BLBC	R0,80$			; BR IF ILLEGAL REQUEST
                       01 A4     94  0297   454 	CLRB	1(R4)			; SET NO CHARACTERISTIC PRESENT
       0094 CA            51     E1  029A   455 	BBC	R1,I_SCRATCH+I_CHARACTER+8+8(R10),35$; BR IF NOT PRESENT
                          03         029F       
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page  13
V06.0           TTY_SET FUNCTIONS                                                                                               (10)

                       01 A4     96  02A0   456 	INCB	1(R4)			; SET PRESENT
            02            55     F1  02A3   457 35$:	ACBL	R5,#2,R4,25$		; LOOP UNTIL DONE
            FFDD          54         02A6       
                          54     11  02A9   458 	BRB	70$			; POST SUCCESS
                          62     11  02AB   459 40$:	BRB	90$
                                     02AD   460 ;
                                     02AD   461 ; SET CHARACTERISTIC
                                     02AD   462 ;
                                     02AD   463 45$:	IFNORD	R5,(R4),90$		; BR IF NOT READABLE
         34 AA       0000'8F     3C  02B3   464 	MOVZWL	#IO$_SETMODE,I_SCRATCH+12(R10); ASSUME SETMODE NEEDED
                          55     D7  02B9   465 	DECL	R5			;
                          42     19  02BB   466 	BLSS	70$			; 
            55            54     C0  02BD   467 	ADDL	R4,R5			; POINT TO END OF LIST -1
            08            64     91  02C0   468 50$:	CMPB	(R4),#TC.TTP		; TERMINAL TYPE?
                          1F     13  02C3   469 	BEQL	55$			; IF EQL THEN SKIP
            27            64     91  02C5   470 	CMPB	(R4),#TC.NEC		; NOECHO?
                          06     12  02C8   471 	BNEQ	52$
         34 AA       0000'8F     3C  02CA   472 	MOVZWL	#IO$_SETCHAR,I_SCRATCH+12(R10);
                          004E   30  02D0   473 52$:	BSBW	PICKCHAR		; GET THE NEXT CHARACTERISTIC
            2F            50     E9  02D3   474 	BLBC	R0,80$			; BR IF ERROR
         01 A4            01     91  02D6   475 	CMPB	#1,1(R4)		; LEGAL VALUE?
                          1E     1F  02DA   476 	BLSSU	60$			;
            51         01 A4     F0  02DC   477 	INSV	1(R4),R1,#1,I_SCRATCH+I_CHARACTER+8+8(R10); INSERT NEW VALUE
       0094 CA            01         02E0       
            02            55     F1  02E4   478 55$:	ACBL	R5,#2,R4,50$		; LOOP UNTIL DONE
            FFD6          54         02E7       
                                     02EA   479 ;
                                     02EA   480 ; SET CHARACTERISTICS
                                     02EA   481 ;
         44 AA       0090 CA     9E  02EA   482 	MOVAB	I_SCRATCH+I_CHARACTER+8+4(R10),I_SCRATCH+28(R10);
         48 AA            08     9A  02F0   483 	MOVZBL	#8,I_SCRATCH+32(R10)	;
                       4C AA     7C  02F4   484 	CLRQ	I_SCRATCH+36(R10)	;
                          FD06'  31  02F7   485 	BRW	RSX$ISSUQIO		; ISSUE THE I/O
                                     02FA   486 ;
                                     02FA   487 ; SET ERROR IN NEW VALUE
                                     02FA   488 ;
            51            03     9A  02FA   489 60$:	MOVZBL	#SE.BIN,R1		; SET FUNNY STATUS
                          09     11  02FD   490 	BRB	85$			;
                                     02FF   491 ;
                                     02FF   492 ; SET SUCCESS IN GET OR SET MULTIPLE
                                     02FF   493 ;
            50         00'8F     9A  02FF   494 70$:	MOVZBL	#SS$_NORMAL,R0		; SET SUCCESS
                          0F     11  0303   495 	BRB	95$			;
                                     0305   496 ;
                                     0305   497 ; ERROR IN CHARACTERISTIC
                                     0305   498 ;
            51            0C     9A  0305   499 80$:	MOVZBL	#SE.NIH,R1		; SET FUNNY STATUS
            50       0000'8F     B0  0308   500 85$:	MOVW	#SS$_ABORT,R0		; SET PROPER STATUS
                          05     11  030D   501 	BRB	95$			;
                                     030F   502 ;
                                     030F   503 ; BUFFER ACCESS VIOLATION
                                     030F   504 ;
            50       0000'8F     3C  030F   505 90$:	MOVZWL	#SS$_ACCVIO,R0		;
            54            59     C2  0314   506 95$:	SUBL	R9,R4			; RETURN SECOND STATUS AS BUFFER SIZE
            54            10     78  0317   507 	ASHL	#16,R4,R4		; SHIFT TO UPPER
                          54         031A       
            50            54     C8  031B   508 	BISL	R4,R0			; INSERT OVER OTHER STATUS
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page  14
V06.0           TTY_SET FUNCTIONS                                                                                               (10)

                          FCDF'  31  031E   509 	BRW	RSX$DLVRQIOAST		; POST THE STATUS
                                     0321   510 	.DSABL	LSB
                                     0321   511 ;
                                     0321   512 ; SUBROUTINE TO PROCESS CHARACTERISTIC ARGUMENTS
                                     0321   513 ;
                                     0321   514 PICKCHAR:
                          50     D4  0321   515 	CLRL	R0			; ASSUME ERROR
            53       FFFF'CF     9E  0323   516 	MOVAB	W^SETGETTAB-1,R3	; ADDRESS TABLE OF CHARACTERISTICS
                          53     D6  0328   517 5$:	INCL	R3			;
                          63     95  032A   518 	TSTB	(R3)			; DONE?
                          0A     13  032C   519 	BEQL	15$			; IF EQL THEN NOT FOUND
            83            64     91  032E   520 	CMPB	(R4),(R3)+		; MATCH?
                          F5     12  0331   521 	BNEQ	5$			; IF NEQ THEN NO
            51            63     9A  0333   522 	MOVZBL	(R3),R1			; GET BIT VALUE OF CHARACTERISTIC
                          50     D6  0336   523 	INCL	R0			; SET SUCCESS
                                 05  0338   524 15$:	RSB				; RETURN
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page  15
V06.0           TTY_HANG FUNCTION                                                                                               (11)

                                     0339   526 	.SBTTL	TTY_HANG FUNCTION
                                     0339   527 ;
                                     0339   528 ; HANG UP TERMINAL FUNCTION
                                     0339   529 ;
                                     0339   530 TTY_HANG:				; HANG UP TERMINAL
                       44 AA     D4  0339   531 	CLRL	I_SCRATCH+28(R10)	; SET NO PARAMETER
         34 AA       0000'8F     3C  033C   532 	MOVZWL	#IO$_SETMODE!IO$M_HANGUP,I_SCRATCH+12(R10); SET FUNCTION CODE
                          FCBB'  31  0342   533 	BRW	RSX$ISSUQIO		; PERFORM FUNCTION
                                     0345   534 	.END
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                    (11)

$$MSG          = 00000000            DEV$V_ELG      = 00000016            GBL...         = 00000000            
$$T1           = 00000001            DEV$V_FOD      = 0000000E            H.CSP            00000000            
...GBL         = 00000000            DEV$V_FOR      = 00000018            H.CUIC           00000008            
ACBC_CTLRCAST  = 00000002            DEV$V_GEN      = 00000011            H.DSW            00000026            
ACBC_FLOATAST  = 00000003            DEV$V_IDV      = 0000001A            H.DUIC           0000000A            
ACBC_PWRAST    = 00000000            DEV$V_MBX      = 00000014            H.EFLM           00000004            
ACBC_RCVAST    = 00000001            DEV$V_MNT      = 00000013            H.EFSV           00000020            
ACBV_INPROG    = 00000001            DEV$V_NET      = 0000000D            H.FCS            00000028            
ACBV_PERM      = 00000000            DEV$V_ODV      = 0000001B            H.FORT           0000002A            
ACBV_TYPE      = 00000008            DEV$V_RCK      = 0000001E            H.FPSA           00000022            
ACB_FLAGS        0000000C            DEV$V_REC      = 00000000            H.FPVA           0000001C            
ACB_LINK         00000000            DEV$V_RND      = 0000001C            H.GARD           0000003A            
ACB_UPC          0000000A            DEV$V_RTM      = 0000001D            H.HDLN           00000002            
ACB_UPRM         00000008            DEV$V_SDI      = 00000004            H.IPC            0000000E            
ADR_HIGHLIM      00000004            DEV$V_SHR      = 00000010            H.IPS            0000000C            
ADR_LOWLIM       00000000            DEV$V_SPL      = 00000006            H.ISP            00000010            
ADR_SIZE         00000008            DEV$V_SQD      = 00000005            H.LUN            0000003E            
AP_NAME          00000004            DEV$V_SWL      = 00000019            H.NLUN           0000003C            
AST_PARAM        00000004            DEV$V_TRM      = 00000002            H.NML            00000031            
AST_PC           00000010            DEV$V_WCK      = 0000001F            H.ODVA           00000012            
AST_PSL          00000014            F1.ACR         = 00000001            H.ODVL           00000014            
AST_R0           00000008            F1.BTW         = 00000002            H.OVLY           0000002C            
AST_R1           0000000C            F1.BUF         = 00000004            H.PFVA           0000001A            
BIT...         = 00000008            F1.CCO         = 00000010            H.RCVA           0000001E            
CTRLCASTEN       0000019D R     06   F1.ESQ         = 00000020            H.RRVA           00000032            
C_CANONPS      = 83C00000            F1.HLD         = 00000040            H.SPRI           00000030            
C_RCVDSTR      = 44564352            F1.LWC         = 00000080            H.TKVA           00000016            
DEV$M_ALL      = 00800000            F1.RNE         = 00000100            H.TKVL           00000018            
DEV$M_AVL      = 00040000            F1.RPR         = 00000200            H.VEXT           0000002E            
DEV$M_CCL      = 00000002            F1.RST         = 00000400            H.WND            00000024            
DEV$M_DIR      = 00000008            F1.RUB         = 00000800            IE.2DV         = FFFFFFD0            
DEV$M_DMT      = 00200000            F1.SYN         = 00001000            IE.ABO         = FFFFFFF1            
DEV$M_ELG      = 00400000            F1.TRW         = 00002000            IE.ACT         = FFFFFFF9            
DEV$M_FOD      = 00004000            F1.UIA         = 00000008            IE.ADP         = FFFFFF9E            
DEV$M_FOR      = 01000000            F1.UTB         = 00004000            IE.ALC         = FFFFFFAC            
DEV$M_GEN      = 00020000            F1.VBF         = FFFF8000            IE.ALG         = FFFFFFAC            
DEV$M_IDV      = 04000000            F2.ALT         = 00000010            IE.ALN         = FFFFFFDE            
DEV$M_MBX      = 00100000            F2.DCH         = 00000004            IE.AST         = FFFFFFB0            
DEV$M_MNT      = 00080000            F2.DKL         = 00000008            IE.BAD         = FFFFFFFF            
DEV$M_NET      = 00002000            F2.GCH         = 00000002            IE.BBE         = FFFFFFC8            
DEV$M_ODV      = 08000000            F2.SCH         = 00000001            IE.BCC         = FFFFFFBE            
DEV$M_RCK      = 40000000            F2.SFF         = 00000020            IE.BDI         = FFFFFFCC            
DEV$M_REC      = 00000001            FCB_ATTRIBS      0000007C            IE.BDR         = FFFFFFCE            
DEV$M_RND      = 10000000            FCB_FIB          0000004C            IE.BDV         = FFFFFFC9            
DEV$M_RTM      = 20000000            FCB_FID          00000000            IE.BHD         = FFFFFFC0            
DEV$M_SDI      = 00000010            FCB_FNAME        00000014            IE.BLB         = FFFFFFBA            
DEV$M_SHR      = 00010000            FCB_FNAMEDESC    0000000C            IE.BLK         = FFFFFFEC            
DEV$M_SPL      = 00000040            FCB_FNB          00000002            IE.BNM         = FFFFFFCA            
DEV$M_SQD      = 00000020            FCB_PC           00000078            IE.BTF         = FFFFFFB4            
DEV$M_SWL      = 02000000            FCB_RESULT       00000030            IE.BTP         = FFFFFFD5            
DEV$M_TRM      = 00000004            FCB_RESULTDESC   00000004            IE.BVR         = FFFFFFC1            
DEV$M_WCK      = 80000000            FCB_SIZE         000000B4            IE.BYT         = FFFFFFED            
DEV$V_ALL      = 00000017            FP_AP            00000008            IE.CKP         = FFFFFFF6            
DEV$V_AVL      = 00000012            FP_FP            0000000C            IE.CKS         = FFFFFFE2            
DEV$V_CCL      = 00000001            FP_PC            00000010            IE.CLO         = FFFFFFDA            
DEV$V_DIR      = 00000003            FP_PSL           00000004            IE.CNR         = FFFFFFB7            
DEV$V_DMT      = 00000015            FP_REGISTERS     00000014            IE.CON         = FFFFFFEA            
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page  17
SYMBOL TABLE                                                                                                                    (11)

IE.DAA         = FFFFFFF8            IE.OVR         = FFFFFFEE            IO.CAS         = 00001B10            
IE.DAO         = FFFFFFF3            IE.PES         = FFFFFFAD            IO.CBO         = 00001B48            
IE.DFU         = FFFFFFE8            IE.PNS         = FFFFFFA2            IO.CCI         = 00001800            
IE.DNA         = FFFFFFF9            IE.PRI         = FFFFFFF0            IO.CCO         = 00000120            
IE.DNR         = FFFFFFFD            IE.PTS         = FFFFFFFD            IO.CIN         = 00001D40            
IE.DUN         = FFFFFFF7            IE.RAC         = FFFFFFD4            IO.CLK         = 00001A00            
IE.DUP         = FFFFFFC7            IE.RAT         = FFFFFFD3            IO.CLN         = 00000700            
IE.EOF         = FFFFFFF6            IE.RBG         = FFFFFFD8            IO.CNT         = 00001E00            
IE.EOT         = FFFFFFC2            IE.RBS         = FFFFFFF1            IO.CON         = 00001B00            
IE.EOV         = FFFFFFF5            IE.RCN         = FFFFFFD2            IO.CPR         = 00001B08            
IE.EXP         = FFFFFFB5            IE.RER         = FFFFFFE0            IO.CPW         = 00001D50            
IE.FEX         = FFFFFFCF            IE.RNM         = FFFFFFCD            IO.CRC         = 00000220            
IE.FHE         = FFFFFFC5            IE.RSU         = FFFFFFEF            IO.CRE         = 00001400            
IE.FIX         = FFFFFFF7            IE.SDP         = FFFFFF9D            IO.CRJ         = 00001B20            
IE.FLN         = FFFFFFAF            IE.SNC         = FFFFFFDD            IO.CSI         = 00001600            
IE.FOP         = FFFFFFCB            IE.SPC         = FFFFFFFA            IO.CSM         = 00001D38            
IE.HFU         = FFFFFFE4            IE.SQC         = FFFFFFDC            IO.CTI         = 00001B00            
IE.HWR         = FFFFFFFA            IE.SRE         = FFFFFFF2            IO.CTL         = 00001D00            
IE.IBS         = FFFFFFA7            IE.STK         = FFFFFFC6            IO.CTR         = 00001B88            
IE.IDU         = FFFFFFA4            IE.TCH         = FFFFFFF5            IO.CTY         = 00000700            
IE.IEF         = FFFFFF9F            IE.TMM         = FFFFFFB9            IO.DAC         = 00001000            
IE.IES         = FFFFFFAE            IE.TMO         = FFFFFFB6            IO.DCI         = 00001900            
IE.IFC         = FFFFFFFE            IE.ULK         = FFFFFFAB            IO.DEL         = 00001500            
IE.IFU         = FFFFFFE7            IE.ULN         = FFFFFFFB            IO.DET         = 00000400            
IE.ILL         = FFFFFFD6            IE.UNS         = FFFFFFFC            IO.DIS         = 00001C00            
IE.ILU         = FFFFFFA0            IE.UPN         = FFFFFFFF            IO.DLB         = 00001D60            
IE.ILV         = FFFFFFED            IE.VER         = FFFFFFFC            IO.DSI         = 00001700            
IE.INS         = FFFFFFFE            IE.WAC         = FFFFFFE3            IO.DTI         = 00001C00            
IE.IOP         = FFFFFFAD            IE.WAT         = FFFFFFE1            IO.DTY         = 00000D00            
IE.IPR         = FFFFFFA1            IE.WCK         = FFFFFFAA            IO.ENA         = 00000C00            
IE.ISQ         = FFFFFFC3            IE.WER         = FFFFFFDF            IO.EOF         = 00000600            
IE.ITI         = FFFFFFA3            IE.WLK         = FFFFFFF4            IO.EXT         = 00001300            
IE.ITP         = FFFFFFA8            IE.WOV         = FFFFFFAB            IO.FDX         = 00000610            
IE.ITS         = FFFFFFF8            IO$M_CANCTRLO    ********   X   06   IO.FLN         = 00001500            
IE.IUI         = FFFFFFA5            IO$M_CTRLCAST    ********   X   06   IO.FNA         = 00000900            
IE.LCK         = FFFFFFE5            IO$M_HANGUP      ********   X   06   IO.GLC         = 00001D18            
IE.LNL         = FFFFFFA6            IO$M_NOECHO      ********   X   06   IO.GLI         = 00001D10            
IE.MAP         = FFFFFFAF            IO$M_NOFILTR     ********   X   06   IO.GNI         = 00001D08            
IE.MOD         = FFFFFFEB            IO$M_NOFORMAT    ********   X   06   IO.GRC         = 00001D28            
IE.NBF         = FFFFFFD9            IO$M_TIMED       ********   X   06   IO.GRI         = 00001D20            
IE.NBK         = FFFFFFD7            IO$M_TRMNOECHO   ********   X   06   IO.GRN         = 00001D30            
IE.NDR         = FFFFFFB8            IO$_READLBLK     ********   X   06   IO.GTS         = 00000500            
IE.NFI         = FFFFFFC4            IO$_READPBLK     ********   X   06   IO.HDX         = 00000608            
IE.NFW         = FFFFFFBB            IO$_READPROMPT   ********   X   06   IO.HIS         = 00001A00            
IE.NLK         = FFFFFFB1            IO$_READVBLK     ********   X   06   IO.HNG         = 00000600            
IE.NLN         = FFFFFFDB            IO$_SETCHAR      ********   X   06   IO.INI         = 00001900            
IE.NNC         = FFFFFFB3            IO$_SETMODE      ********   X   06   IO.INL         = 00000500            
IE.NNL         = FFFFFFB2            IO$_WRITELBLK    ********   X   06   IO.ITI         = 00001E00            
IE.NNN         = FFFFFFBC            IO$_WRITEVBLK    ********   X   06   IO.KIL         = 0000000A            
IE.NOD         = FFFFFFE9            IO.ACE         = 00000F00            IO.LDI         = 00000E00            
IE.NSF         = FFFFFFE6            IO.ACR         = 00000D00            IO.LED         = 00001400            
IE.NST         = FFFFFFB0            IO.ACW         = 00000E00            IO.LEI         = 00000F08            
IE.NSW         = FFFFFFEE            IO.ADS         = 00001800            IO.LKE         = 00001400            
IE.NVR         = FFFFFFAA            IO.APC         = 00001800            IO.LOD         = 00001800            
IE.NVW         = FFFFFFA9            IO.APV         = 00001808            IO.LOV         = 00000208            
IE.OFL         = FFFFFFBF            IO.ATA         = 00000308            IO.LSI         = 00001200            
IE.ONP         = FFFFFFFB            IO.ATT         = 00000300            IO.LTI         = 00000F00            
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page  18
SYMBOL TABLE                                                                                                                    (11)

IO.LTK         = 00000028            IO.SYN         = 00000620            I_FLOATA1        000001C8            
IO.LTY         = 00001000            IO.TRM         = 00000508            I_FLOATA2        000001D0            
IO.MAO         = 00000708            IO.UDI         = 00001308            I_FLOATA3        000001D8            
IO.MCS         = 00001700            IO.UEI         = 00001328            I_FLOATA4        000001E0            
IO.MDA         = 00001C00            IO.UER         = 00001320            I_FLOATA5        000001E8            
IO.MDI         = 00001900            IO.ULK         = 00000A00            I_FLOATADR       000001B0            
IO.MDO         = 00001B00            IO.UNL         = 00000022            I_FLOATAST       000001A4            
IO.MLO         = 00000C00            IO.USI         = 00001330            I_FLOATCSR       000001A8            
IO.MOD         = 00000600            IO.UTI         = 00001310            I_FLOATERR       000001AC            
IO.MSO         = 00000A00            IO.UTY         = 00001318            I_FLOATTMP       000001B8            
IO.NLB         = 00001D58            IO.WAL         = 00000108            I_GARD           000000EC            
IO.NLK         = 00001300            IO.WAT         = 00001700            I_HIGHEFN        0000016C            
IO.ONL         = 00001F00            IO.WBT         = 00000140            I_HIGHSIZE       000000F4            
IO.R1C         = 00000500            IO.WDD         = 00000124            I_IMAGEVBN       000000F8            
IO.RAD         = 00001100            IO.WLB         = 00000100            I_INISIZE        000000F0            
IO.RAL         = 00000208            IO.WLC         = 00000110            I_LENGTH         000001F0            
IO.RAT         = 00001600            IO.WLS         = 00000108            I_LOGNAME        000000E0            
IO.RBC         = 00000600            IO.WLT         = 00000108            I_LUT            00000168            
IO.RCI         = 00001A00            IO.WLV         = 00000140            I_NLUN           00000164            
IO.RCV         = 00001A00            IO.WMS         = 00000110            I_PC             00000020            
IO.RDB         = 00000280            IO.WNS         = 00000110            I_PPFINDEX       00000162            
IO.RDD         = 00001008            IO.WPB         = 00000120            I_PROCNAME       0000014C            
IO.RDN         = 00000012            IO.WVB         = 00001200            I_PS             00000024            
IO.REL         = 00001700            IO.XMT         = 00001900            I_PWRAST         000001A0            
IO.RHD         = 00000208            IO.XNA         = 00001908            I_R0             00000000            
IO.RLB         = 00000200            IQ.Q           = 00000002            I_R1             00000004            
IO.RLV         = 00000240            IQ.S           = 00000004            I_R2             00000008            
IO.RMT         = 00001010            IQ.UMD         = 00000004            I_R3             0000000C            
IO.RNA         = 00000B00            IQ.X           = 00000001            I_R4             00000010            
IO.RNC         = 00000220            IS.BV          = 00000005            I_R5             00000014            
IO.RNE         = 00000210            IS.CC          = 00000301            I_R6             00000018            
IO.RNS         = 00000210            IS.CLR         = 00000000            I_RAD50NAME      00000148            
IO.RPB         = 00000220            IS.CR          = 00000D01            I_RCVAST         0000019C            
IO.RPR         = 00000900            IS.EOT         = 00000401            I_RCVMAIL        00000160            
IO.RST         = 00000201            IS.ESC         = 00001B01            I_RUNFLAGS       0000018C            
IO.RTC         = 00000700            IS.ESQ         = 00009B01            I_SCRATCH        00000028            
IO.RTI         = 00001D00            IS.PES         = 00008001            I_SSTVEC         00000194            
IO.RTK         = 00000030            IS.PND         = 00000000            I_SSTVECL        00000196            
IO.RTM         = 00000280            IS.RDD         = 00000002            I_STATE          00000170            
IO.RVB         = 00001100            IS.SET         = 00000002            I_TYPE           0000001C            
IO.RWD         = 00000500            IS.SPD         = 00000002            I_UIC            0000013C            
IO.RWU         = 00000560            IS.SUC         = 00000001            I_WAIT           00000178            
IO.SAO         = 00000800            IS.TAB         = 00000901            I_WAITSAVE       00000180            
IO.SCS         = 00001600            IS.TMO         = 00000002            LUTC_CR        = 00000005            
IO.SDI         = 00001600            I_ADR0           000000FC            LUTC_DISK      = 00000002            
IO.SDO         = 00001500            I_ASCIINAME      00000140            LUTC_LP        = 00000004            
IO.SEC         = 00000550            I_ASTPOOL        000000D0            LUTC_RMS       = 00000000            
IO.SET         = 00000018            I_ASTQUEUE       000000C8            LUTC_TAPE      = 00000003            
IO.SLO         = 00000B00            I_BAILOUTFP      00000188            LUTC_TRM       = 00000001            
IO.SMO         = 00000570            I_CHARACTER    = 0000005C            LUTV_CTRLC     = 00000002            
IO.SPB         = 00000510            I_CMDROUT        000000E8            LUTV_CTRLO     = 00000000            
IO.SPF         = 00000520            I_CURAST         00000198            LUTV_PRM       = 00000003            
IO.SPW         = 00001D48            I_DEBVEC         00000190            LUT_CHAN         0000000C            
IO.SSO         = 00000900            I_DEBVECL        00000192            LUT_CHAR         00000012            
IO.STA         = 00001B00            I_FCBPOOL        000000D8            LUT_CTRLC        00000032            
IO.STC         = 00000540            I_FCC            000001B4            LUT_FLAGS        0000000A            
IO.STP         = 00001D00            I_FLOATA0        000001C0            LUT_INFONAME     0000002E            
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page  19
SYMBOL TABLE                                                                                                                    (11)

LUT_INFOUNIT     00000030            RSX$_TBIT      = 0006803C            SV_RCVAST        00000007            
LUT_LINK         00000000            RSX$_TRAP      = 00068024            SV_RESTORE       00000000            
LUT_REALNAME     0000001E            RSX$_VERIFYCMD = 00068648            SV_TRANSLATE     00000001            
LUT_REF          00000008            S.0            = 00000001            SV_WAIT          00000006            
LUT_RSXNAME      00000010            S.1024         = 0000000D            SYS$CANCEL       ********   X   06   
LUT_SIZE         00000036            S.104          = 00000007            SYS$GETCHN       ********   X   06   
LUT_TYPE         00000016            S.128          = 00000008            SYS$QIOW         ********   X   06   
PICKCHAR         00000321 R     06   S.1280         = 0000000E            T.AS33         = 00000001            
PSL_CC         = 00000000            S.1800         = 0000000C            T.AS35         = 00000003            
PSL_CM         = 0000001F            S.192          = 00000009            T.KS33         = 00000002            
PSL_FPD        = 0000001B            S.1920         = 0000000F            T.L180         = 0000000C            
PSL_FU         = 00000006            S.3712         = 00000011            T.L30P         = 00000005            
PSL_TBIT       = 00000004            S.384          = 0000000A            T.L30S         = 00000004            
QIOV_FILES     = 00000000            S.40           = 00000002            T.LA36         = 00000006            
QIO_FLAGS        0000001A            S.4800         = 00000010            T.SCR0         = 0000000D            
QIO_IOSB         0000000E            S.61           = 00000003            T.UNK0         = 00000000            
QIO_LUT          00000016            S.64           = 00000004            T.USR0         = 0000000E            
QIO_SECONDBLK    0000001C            S.640          = 0000000B            T.USR1         = 0000000F            
QIO_SIZE         00000020            S.72           = 00000005            T.USR2         = 00000010            
RSX$A_TIIDEV     ********   X   06   S.92           = 00000006            T.USR3         = 00000011            
RSX$A_TIODEV     ********   X   06   S.9600         = 00000012            T.USR4         = 00000012            
RSX$CHK_TI_INP   ********   X   06   S.EXTA         = 00000013            T.VT05         = 00000007            
RSX$CHK_TI_OUT   ********   X   06   S.EXTB         = 00000014            T.VT50         = 00000008            
RSX$CTRLCAST     ********   X   06   SE.BIN         = 00000003            T.VT52         = 00000009            
RSX$CTRLCASTEN   00000199 RG    06   SE.FIX         = 00000002            T.VT55         = 0000000A            
RSX$CTRLCDSABL   00000204 RG    06   SE.ICN         = 00000001            T.VT61         = 0000000B            
RSX$C_SUBSYSTEM= 00000006            SE.LPR         = 00000009            TC.ACR         = 00000014            
RSX$DLVRQIOAST   ********   X   06   SE.NIH         = 0000000C            TC.ALT         = 00000019            
RSX$GL_CARRIAGE  0000002F RG    05   SE.NSC         = 0000000A            TC.BLK         = 00000022            
RSX$IEIFC        ********   X   06   SE.PAR         = 00000008            TC.BSP         = 00000013            
RSX$IOKILL       ********   X   06   SE.SPD         = 00000006            TC.CCF         = 00000018            
RSX$ISSUQIO      ********   X   06   SE.SPL         = 00000007            TC.CEQ         = 00000026            
RSX$RSXQIOERR    ********   X   06   SE.TER         = 00000005            TC.DLU         = 00000021            
RSX$SETUPAST     ********   X   06   SE.UPN         = 0000000B            TC.EPA         = 00000020            
RSX$TTY_DRV      00000000 RG    06   SE.VAL         = 00000004            TC.ESQ         = 0000001D            
RSX$_ACCVIO    = 00068044            SETGETTAB        00000000 R     05   TC.FRM         = 00000023            
RSX$_BADLIBREF = 0006806C            SF.DEF         = 00000008            TC.HFF         = 0000000F            
RSX$_BADSTACK  = 0006804C            SF.GAC         = 00000580            TC.HFL         = 0000000B            
RSX$_BREAK     = 0006800C            SF.GMC         = 00000570            TC.HHT         = 00000011            
RSX$_EXITSTATUS= 00068640            SF.GSC         = 00000560            TC.HLD         = 00000024            
RSX$_EXTERNABRT= 0006805C            SF.RDF         = 00000530            TC.IMG         = 0000001A            
RSX$_ILLINST   = 0006802C            SF.SAC         = 00000590            TC.ISL         = 00000006            
RSX$_IMAGETERM = 00068084            SF.SMC         = 00000520            TC.LCP         = 0000001E            
RSX$_INSFDYNMEM= 00068054            SF.SSC         = 00000510            TC.LPP         = 00000002            
RSX$_IOT       = 00068014            SF.STS         = 00000550            TC.LVF         = 00000010            
RSX$_LIBNOTFND = 00068074            SF.STT         = 00000540            TC.MAX         = 00000034            
RSX$_LOADERROR = 0006807C            SPECIALTRM       00000017 R     05   TC.NEC         = 00000027            
RSX$_NOCOMM    = 00068094            SS$_ABORT        ********   X   06   TC.NKB         = 0000001B            
RSX$_NONRSXEMT = 0006801C            SS$_ACCVIO       ********   X   06   TC.NL          = 0000000D            
RSX$_NOPMD     = 00068332            SS$_BADPARAM     ********   X   06   TC.NPR         = 0000001C            
RSX$_NOSUCHDEV = 00068322            SS$_NORMAL       ********   X   06   TC.NST         = 00000012            
RSX$_NOTSKIMG  = 00068064            SV_ASTLVL        00000004            TC.PAR         = 0000001F            
RSX$_ODDADDR   = 00068034            SV_DCL           00000002            TC.PRI         = 00000029            
RSX$_PMD       = 0006832A            SV_FLOATAST      00000009            TC.RAT         = 00000007            
RSX$_RCVMBXSIZ = 0000012C            SV_NOAST         00000003            TC.RSP         = 00000003            
RSX$_REGMSG    = 0006808C            SV_PENDWAIT      00000005            TC.SCP         = 0000000A            
RSX$_RESERVED  = 00068004            SV_PWRAST        00000008            TC.SCR         = 00000009            
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page  20
SYMBOL TABLE                                                                                                                    (11)

TC.SFF         = 0000000E            TT$M_LFFILL    = 00000800            TTY_WVB          000000D9 R     06   
TC.SLV         = 00000028            TT$M_LOWER     = 00000080            W.BATT           00000006            
TC.SMO         = 00000017            TT$M_MBXDSABL  = 00010000            W.BFPD           0000000C            
TC.SMP         = 00000016            TT$M_MECHTAB   = 00000100            W.BHVR           00000004            
TC.SMR         = 00000015            TT$M_NOBRDCST  = 00020000            W.BLGH           00000010            
TC.STB         = 00000005            TT$M_NOECHO    = 00000002            W.BLPD           0000000E            
TC.TAP         = 00000025            TT$M_NOTYPEAHD = 00000004            W.BLVR           00000002            
TC.TTP         = 00000008            TT$M_ODD       = 00000080            W.BNPD           0000000D            
TC.UC0         = 0000002A            TT$M_PAGE      = FE000000            W.BOFF           0000000A            
TC.UC1         = 0000002B            TT$M_PARITY    = 00000040            W.BPCB           00000000            
TC.UC2         = 0000002C            TT$M_PASSALL   = 00000001            W.BSIZ           00000008            
TC.UC3         = 0000002D            TT$M_READSYNC  = 00040000            
TC.UC4         = 0000002E            TT$M_REMOTE    = 00002000            
TC.UC5         = 0000002F            TT$M_SCOPE     = 00001000            
TC.UC6         = 00000030            TT$M_SCRIPT    = 00000040            
TC.UC7         = 00000031            TT$M_TTSYNC    = 00000020            
TC.UC8         = 00000032            TT$M_WRAP      = 00000200            
TC.UC9         = 00000033            TT$S_PAGE      = 00000008            
TC.VFL         = 0000000C            TT$V_ALTRPAR   = 00000005            
TC.WID         = 00000001            TT$V_CRFILL    = 0000000A            
TC.XSP         = 00000004            TT$V_EIGHTBIT  = 0000000F            
TERMINATOR       0000000F R     05   TT$V_ESCAPE    = 00000003            
TF.AST         = 00000008            TT$V_HOLDSCREEN= 0000000E            
TF.BIN         = 00000002            TT$V_HOSTSYNC  = 00000004            
TF.CCO         = 00000020            TT$V_LFFILL    = 0000000B            
TF.ESQ         = 00000010            TT$V_LOWER     = 00000007            
TF.RAL         = 00000008            TT$V_MBXDSABL  = 00000010            
TF.RNC         = 00000020            TT$V_MECHTAB   = 00000008            
TF.RNE         = 00000010            TT$V_NOBRDCST  = 00000011            
TF.RST         = 00000001            TT$V_NOECHO    = 00000001            
TF.SYN         = 00000080            TT$V_NOTYPEAHD = 00000002            
TF.TMO         = 00000080            TT$V_ODD       = 00000007            
TF.WAL         = 00000008            TT$V_PAGE      = 00000019            
TF.WBT         = 00000040            TT$V_PARITY    = 00000006            
TF.WMS         = 00000010            TT$V_PASSALL   = 00000000            
TF.XOF         = 00000040            TT$V_READSYNC  = 00000012            
TT$C_BAUD_110  = 00000003            TT$V_REMOTE    = 0000000D            
TT$C_BAUD_1200 = 00000008            TT$V_SCOPE     = 0000000C            
TT$C_BAUD_134  = 00000004            TT$V_SCRIPT    = 00000006            
TT$C_BAUD_150  = 00000005            TT$V_TTSYNC    = 00000005            
TT$C_BAUD_1800 = 00000009            TT$V_WRAP      = 00000009            
TT$C_BAUD_2000 = 0000000A            TT$_LA36       = 00000020            
TT$C_BAUD_2400 = 0000000B            TT$_LAX        = 00000020            
TT$C_BAUD_300  = 00000006            TT$_UNKNOWN    = 00000000            
TT$C_BAUD_3600 = 0000000C            TT$_VT05       = 00000001            
TT$C_BAUD_4800 = 0000000D            TT$_VT52       = 00000040            
TT$C_BAUD_50   = 00000001            TT$_VT55       = 00000041            
TT$C_BAUD_600  = 00000007            TT$_VT5X       = 00000040            
TT$C_BAUD_7200 = 0000000E            TTY_ATT          00000134 R     06   
TT$C_BAUD_75   = 00000002            TTY_DET          000001D9 R     06   
TT$C_BAUD_9600 = 0000000F            TTY_HANG         00000339 R     06   
TT$M_ALTRPAR   = 00000020            TTY_KILL         0000010D R     06   
TT$M_CRFILL    = 00000400            TTY_RLB          00000068 R     06   
TT$M_EIGHTBIT  = 00008000            TTY_RPR          00000039 R     06   
TT$M_ESCAPE    = 00000008            TTY_RVB          0000005B R     06   
TT$M_HOLDSCREEN= 00004000            TTY_SET          00000227 R     06   
TT$M_HOSTSYNC  = 00000010            TTY_WLB          000000E6 R     06   
RSXTTYDRV       - VAX/VMS RSX11M AME TERMINAL DRIVER             22-AUG-1978 05:15:07   VAX-11 MACRO X0.3-11               Page  21
PROGRAM SECTION SYNOPSIS                                                                                                        (11)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
..ABS.           00000042      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000000      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXDEF           000001F4      04     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXPURE          00000041      05       PIC   USR   CON   REL   LCL   SHR   EXE   RD  NOWRT LONG  
RSXCODE          00000345      06       PIC   USR   CON   REL   LCL   SHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
5266. BYTES LEFT IN FREE MEMORY POOL.
1430. BYTES OF RECLAIMED MEMORY.
OBJ$:RSXTTYDRV,LIS$:RSXTTYDRV/-SP=EXECML$/ML,LIB$:R/ML,SRC$:RSXTTYDRV
56 MLB DIR RDS - 997 GETS TO DEFINE 32 MACROS. 43 INTER. FILE WRITES. 
