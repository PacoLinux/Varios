RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 05:06:55   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      44  RSX$CLEF - RSX11M CLEF$$ DIRECTIVE
   (3)      80  RSX$CMKT - RSX11M CMKT$ DIRECTIVE
   (4)     112  RSX$DECL/RSX$WSIG - RSX11M DECL$ AND WSIG$ DIRE
   (5)     145  RSX$EXIF - RSX11M EXIF$ DIRECTIVE
   (6)     181  RSX$MRKT - RSX11M MRKT$ DIRECTIVE
   (7)     261  RSX$RDAF - RSX11M RDAF$ DIRECTIVE
   (8)     300  RSX$SETF - RSX11M SETF$ DIRECTIVE
   (9)     340  RSX$WTLO - RSX11M WTLO$ DIRECTIVE
   (10)    383  RSX$WTSE - RSX11M WTSE$ DIRECTIVE
   (11)    421  RSX$WAIT - COMMON CODE FOR WAIT FOR SINGLE AND 
   (12)    476  CVTEFN - CONVERT EVENT FLAG NUMBER
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 05:06:55   VAX-11 MACRO X0.3-11               Page   1
V06.0                                                                                                                            (1)

                                     0000     1 	.TITLE	RSXEFN - RSX11M EVENT FLAG DIRECTIVES
                                     0000     2 	.IDENT	/V06.0/		;
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1978
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY:
                                     0000    25 ;
                                     0000    26 ;	VAX/VMS RSX AME.
                                     0000    27 ;
                                     0000    28 ; ABSTRACT:
                                     0000    29 ;
                                     0000    30 ;	RSX11M EVENT FLAG DIRECTIVE EMULATION.
                                     0000    31 ;
                                     0000    32 ; AUTHOR:
                                     0000    33 ;
                                     0000    34 ;	R.HEINEN 4-NOV-76
                                     0000    35 ;--
                                     0000    36 ;
                                     0000    37 ; EXTERNAL SYMBOLS
                                     0000    38 ;
                                     0000    39 	$RSXDEF			; DEFINE RSX SYMBOLS
                                     0000    40 	DRERR$			; DEFINE RSX11M DIRECTIVE STATUS CODES
                                     0000    41  
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 05:06:55   VAX-11 MACRO X0.3-11               Page   2
V06.0                                                                                                                            (2)

                                 00000000    43 	.PSECT	RSXCODE,NOWRT,SHR,PIC
                                     0000    44 	.SBTTL	RSX$CLEF - RSX11M CLEF$$ DIRECTIVE
                                     0000    45 ;++
                                     0000    46 ; RSX$CLEF - RSX11M CLEAR EVENT FLAG DIRECTIVE
                                     0000    47 ;
                                     0000    48 ; FUNCTIONAL DESCRIPTION:
                                     0000    49 ;
                                     0000    50 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     0000    51 ; "CLEF$$" DIRECTIVE.
                                     0000    52 ;
                                     0000    53 ; INPUT PARAMETERS:
                                     0000    54 ;
                                     0000    55 ;	R5 = ADDRESS OF DPB+2
                                     0000    56 ;	R6 = CM IMAGE STACK ADDRESS
                                     0000    57 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     0000    58 ;	R11 = ADDRESS OF IMAGE HEADER
                                     0000    59 ;
                                     0000    60 ; OUTPUT PARAMETERS:
                                     0000    61 ;
                                     0000    62 ;	R10,R11 ARE PRESERVED
                                     0000    63 ;
                                     0000    64 ; IMPLICIT OUTPUTS:
                                     0000    65 ;
                                     0000    66 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     0000    67 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     0000    68 ;
                                     0000    69 ; DSW RETURN CODES:
                                     0000    70 ;
                                     0000    71 ;	IS.CLR FLAG WAS CLEAR
                                     0000    72 ;	IS.SET FLAG WAS SET
                                     0000    73 ;	IE.IEF INVALID EVENT FLAG SPECIFIED
                                     0000    74 ;--
                                     0000    75 RSX$CLEF::				; CLEAR EVENT FLAG TASK DIRECTIVE
                          0167   30  0000    76 	BSBW	CVTEFN			; CONVERT EFN
                                     0003    77 	$CLREF_S R1			; CLEAR IT
                          00E9   31  000C    78 	BRW	SETCLRDSW		; MAP THE DSW RETURN CODE
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 05:06:55   VAX-11 MACRO X0.3-11               Page   3
V06.0           RSX$CMKT - RSX11M CMKT$ DIRECTIVE                                                                                (3)

                                     000F    80 	.SBTTL	RSX$CMKT - RSX11M CMKT$ DIRECTIVE
                                     000F    81 ;++
                                     000F    82 ; RSX$CMKT - RSX11M CANCEL MARK TIME DIRECTIVE
                                     000F    83 ;
                                     000F    84 ; FUNCTIONAL DESCRIPTION:
                                     000F    85 ;
                                     000F    86 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     000F    87 ; "CMKT$" DIRECTIVE.
                                     000F    88 ;
                                     000F    89 ; INPUT PARAMETERS:
                                     000F    90 ;
                                     000F    91 ;	R5 = ADDRESS OF DPB+2
                                     000F    92 ;	R6 = CM IMAGE STACK ADDRESS
                                     000F    93 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     000F    94 ;	R11 = ADDRESS OF IMAGE HEADER
                                     000F    95 ;
                                     000F    96 ; OUTPUT PARAMETERS:
                                     000F    97 ;
                                     000F    98 ;	R10,R11 ARE PRESERVED
                                     000F    99 ;
                                     000F   100 ; IMPLICIT OUTPUTS:
                                     000F   101 ;
                                     000F   102 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     000F   103 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     000F   104 ;
                                     000F   105 ; DSW RETURN CODES:
                                     000F   106 ;	IS.SUC	SUCCESSFUL
                                     000F   107 ;--
                                     000F   108 RSX$CMKT::				; CANCEL MARK TIME DIRECTIVE
                                     000F   109 	$CANTIM_S			; ISSUE SERVICE CALL
                                 05  001A   110 	RSB				; RETURN
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 05:06:55   VAX-11 MACRO X0.3-11               Page   4
V06.0           RSX$DECL/RSX$WSIG - RSX11M DECL$ AND WSIG$ DIRE                                                                  (4)

                                     001B   112 	.SBTTL	RSX$DECL/RSX$WSIG - RSX11M DECL$ AND WSIG$ DIRECTIVES
                                     001B   113 ;++
                                     001B   114 ; RSX$DECL - RSX11M DECLARE SIGNIFICANT EVENT DIRECTIVE
                                     001B   115 ; RSX$WSIG - RSX11M WAIT FOR SIGNIFICANT EVENT DIRECTIVE
                                     001B   116 ;
                                     001B   117 ; FUNCTIONAL DESCRIPTION:
                                     001B   118 ;
                                     001B   119 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     001B   120 ; "DECL$" DIRECTIVE.
                                     001B   121 ;
                                     001B   122 ; INPUT PARAMETERS:
                                     001B   123 ;
                                     001B   124 ;	R5 = ADDRESS OF DPB+2
                                     001B   125 ;	R6 = CM IMAGE STACK ADDRESS
                                     001B   126 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     001B   127 ;	R11 = ADDRESS OF IMAGE HEADER
                                     001B   128 ;
                                     001B   129 ; OUTPUT PARAMETERS:
                                     001B   130 ;
                                     001B   131 ;	R10,R11 ARE PRESERVED
                                     001B   132 ;
                                     001B   133 ; IMPLICIT OUTPUTS:
                                     001B   134 ;
                                     001B   135 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     001B   136 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     001B   137 ;
                                     001B   138 ; DSW RETURN CODES:
                                     001B   139 ;	IS.SUC	SUCCESSFUL
                                     001B   140 ;--
                                     001B   141 RSX$DECL::				; DECLARE SIGNIFICANT EVENT DIRECTIVE
                                     001B   142 RSX$WSIG::				; WAIT FOR SIGNIFICANT EVENT DIRECTIVE
                                 05  001B   143 	RSB				; AND RETURN
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 05:06:55   VAX-11 MACRO X0.3-11               Page   5
V06.0           RSX$EXIF - RSX11M EXIF$ DIRECTIVE                                                                                (5)

                                     001C   145 	.SBTTL	RSX$EXIF - RSX11M EXIF$ DIRECTIVE
                                     001C   146 ;++
                                     001C   147 ; RSX$EXIF - RSX11M EXIT IF DIRECTIVE
                                     001C   148 ;
                                     001C   149 ; FUNCTIONAL DESCRIPTION:
                                     001C   150 ;
                                     001C   151 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     001C   152 ; "EXIF$" DIRECTIVE.
                                     001C   153 ;
                                     001C   154 ; INPUT PARAMETERS:
                                     001C   155 ;
                                     001C   156 ;	R5 = ADDRESS OF DPB+2
                                     001C   157 ;	R6 = CM IMAGE STACK ADDRESS
                                     001C   158 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     001C   159 ;	R11 = ADDRESS OF IMAGE HEADER
                                     001C   160 ;
                                     001C   161 ; OUTPUT PARAMETERS:
                                     001C   162 ;
                                     001C   163 ;
                                     001C   164 ; IMPLICIT OUTPUTS:
                                     001C   165 ;
                                     001C   166 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     001C   167 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     001C   168 ;
                                     001C   169 ; DSW RETURN CODES:
                                     001C   170 ;	IS.SUC	SUCCESSFUL
                                     001C   171 ;	IE.IEF	INVALID EVENT FLAG SPECIFIED
                                     001C   172 ;--
                                     001C   173 RSX$EXIF::				; EXIT IF DIRECTIVE
                          014B   30  001C   174 	BSBW	CVTEFN			; CONVERT EFN
            05            00     EF  001F   175 	EXTZV	#0,#5,R1,R2		; GET FLAG NUMBER OF CLUSTER
            52            51         0022       
                                     0024   176 	$READEF_S	R1,I_SCRATCH(R10); READ THE EVENT FLAG
         28 AA            52     E1  0030   177 	BBC	R2,I_SCRATCH(R10),10$	; IF CLEAR THEN NO EXIT
                          03         0034       
                          FFC8'  31  0035   178 	BRW	RSX$EXIT		; EXIT THE IMAGE
                                 05  0038   179 10$:	RSB				;
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 05:06:55   VAX-11 MACRO X0.3-11               Page   6
V06.0           RSX$MRKT - RSX11M MRKT$ DIRECTIVE                                                                                (6)

                                     0039   181 	.SBTTL	RSX$MRKT - RSX11M MRKT$ DIRECTIVE
                                     0039   182 ;++
                                     0039   183 ; RSX$MRKT - RSX11M MARK TIME DIRECTIVE
                                     0039   184 ;
                                     0039   185 ; FUNCTIONAL DESCRIPTION:
                                     0039   186 ;
                                     0039   187 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     0039   188 ; "MRKT$" DIRECTIVE.
                                     0039   189 ; THE ACTION IS TO SET UP A TIMER AND IF AN AST SERVICE ROUTINE IS
                                     0039   190 ; SPECIFIED, THEN ALSO ALLOCATE AN AST CONTEXT BLOCK FOR THE DELIVERY
                                     0039   191 ; OT THE AST.
                                     0039   192 ;
                                     0039   193 ; INPUT PARAMETERS:
                                     0039   194 ;
                                     0039   195 ;	R5 = ADDRESS OF DPB+2
                                     0039   196 ;	R6 = CM IMAGE STACK ADDRESS
                                     0039   197 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     0039   198 ;	R11 = ADDRESS OF IMAGE HEADER
                                     0039   199 ;
                                     0039   200 ; OUTPUT PARAMETERS:
                                     0039   201 ;
                                     0039   202 ;	R10,R11 ARE PRESERVED
                                     0039   203 ;
                                     0039   204 ; IMPLICIT OUTPUTS:
                                     0039   205 ;
                                     0039   206 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     0039   207 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     0039   208 ;
                                     0039   209 ; DSW RETURN CODES:
                                     0039   210 ;	IS.SUC	SUCCESSFUL
                                     0039   211 ;	IE.UPN INSUFFICIENT DYNAMIC MEMORY -- SS$_INSFMEM
                                     0039   212 ;	IE.NOD QUOTA EXCEEDED -- SS$_EXQUOTA
                                     0039   213 ;	IE.ITI	INVALID TIME UNIT
                                     0039   214 ;	IE.IEF	INVALID EVENT FLAG
                                     0039   215 ;--
                                     0039   216 RSX$MRKT::				; MARK TIME DIRECTIVE
            51            85     3C  0039   217 	MOVZWL	(R5)+,R1		; GET EVENT FLAG NUMBER
                          05     13  003C   218 	BEQL	5$			; IF EQL THEN NONE
                          75     B5  003E   219 	TSTW	-(R5)			; POINT TO EFN
                          0127   30  0040   220 	BSBW	CVTEFN			; CONVERT EFN
            57            51     D0  0043   221 5$:	MOVL	R1,R7			; COPY EFN
            52            85     3C  0046   222 	MOVZWL	(R5)+,R2		; GET MAGNITUDE OF TIME
                          68     13  0049   223 	BEQL	IEITI			; IF EQL THEN ERROR
            50            85     3C  004B   224 	MOVZWL	(R5)+,R0		; GET UNITS
                          63     13  004E   225 	BEQL	IEITI			; IF EQL THEN ERROR
                          FFAD'  30  0050   226 	BSBW	RSX$TIMEMAG		; CONVERT TIME TO QUAD
            5D            52     E9  0053   227 	BLBC	R2,IEITI		; IF LOW CLEAR THEN ERROR IN CONVERT
         28 AA            50     7D  0056   228 	MOVQ	R0,I_SCRATCH(R10)	; INSERT IN ARG LIST
                          51     D4  005A   229 	CLRL	R1			; SET NO AST SERVICE
                          52     D4  005C   230 	CLRL	R2			; SET NO AST PARAMETER
                          65     B5  005E   231 	TSTW	(R5)			; ANY AST TO DO?
                          19     13  0060   232 	BEQL	25$			; IF EQL THEN NO AST SERVICE
                          FF9B'  30  0062   233 	BSBW	RSX$SETUPAST		; BUILD CONTEXT BLOCK
                       0C A2     B4  0065   234 	CLRW	ACB_FLAGS(R2)		; SET NO POST AST PROCESSING
         0A A2            65     B0  0068   235 	MOVW	(R5),ACB_UPC(R2)	; INSERT AST SERVICE ADDRESS
         08 A2            57     B0  006C   236 	MOVW	R7,ACB_UPRM(R2)		; INSERT EFN USED
                          04     13  0070   237 	BEQL	10$			; IF EQL THEN NONE
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 05:06:55   VAX-11 MACRO X0.3-11               Page   7
V06.0           RSX$MRKT - RSX11M MRKT$ DIRECTIVE                                                                                (6)

         08 A2            1F     A2  0072   238 	SUBW	#31,ACB_UPRM(R2)	; CONVERT TO HIS EFN MAP
            51       0000'CF     9E  0076   239 10$:	MOVAB	W^RSX$MARKAST,R1	; ADDRESS SERVICE ROUTINE
                                     007B   240 25$:	$SETIMR_S	R7,I_SCRATCH(R10),(R1),R2
            24            50     E8  008B   241 	BLBS	R0,40$			; IF LOW SET THEN SUCCESS
                                     008E   242 ;
                                     008E   243 ; DEALLOCATE THE AST CONTEXT BLOCK IF PRESENT
                                     008E   244 ;
                          52     D5  008E   245 	TSTL	R2			; BLOCK PRESENT?
                          05     13  0090   246 	BEQL	27$			; IF EQL THEN NO
       00D0 CA            62     0E  0092   247 	INSQUE	(R2),I_ASTPOOL(R10)	; RELEASE THE BLOCK
                                     0097   248 ;
                                     0097   249 ; ERROR IS EITHER SS$_INSFMEM OR SS$_EXQUOTA
                                     0097   250 ;
            50       0000'8F     B1  0097   251 27$:	CMPW	#SS$_INSFMEM,R0		; INSUFFICIENT MEMORY?
                          0A     12  009C   252 	BNEQ	30$			; IF NEQ THEN NO
                                     009E   253 	$DSW	#IE.UPN			; SET ERROR AS NO MEMORY
                                     00A8   254 30$:	$DSWIO	#IE.NOD			; EXCEEDED QUOTA
                                 05  00B2   255 40$:	RSB				; RETURN
                                     00B3   256 ;
                                     00B3   257 ; BAD TIME UNIT VALUE
                                     00B3   258 ;
                                     00B3   259 IEITI:	$DSW	#IE.ITI			; SET STATUS AND RETURN
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 05:06:55   VAX-11 MACRO X0.3-11               Page   8
V06.0           RSX$RDAF - RSX11M RDAF$ DIRECTIVE                                                                                (7)

                                     00BD   261 	.SBTTL	RSX$RDAF - RSX11M RDAF$ DIRECTIVE
                                     00BD   262 ;++
                                     00BD   263 ; RSX$RDAF - RSX11M READ ALL EVENT FLAGS DIRECTIVE
                                     00BD   264 ;
                                     00BD   265 ; FUNCTIONAL DESCRIPTION:
                                     00BD   266 ;
                                     00BD   267 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     00BD   268 ; "RDAF$" DIRECTIVE.
                                     00BD   269 ;
                                     00BD   270 ; INPUT PARAMETERS:
                                     00BD   271 ;
                                     00BD   272 ;	R5 = ADDRESS OF DPB+2
                                     00BD   273 ;	R6 = CM IMAGE STACK ADDRESS
                                     00BD   274 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     00BD   275 ;	R11 = ADDRESS OF IMAGE HEADER
                                     00BD   276 ;
                                     00BD   277 ; OUTPUT PARAMETERS:
                                     00BD   278 ;
                                     00BD   279 ;	R10,R11 ARE PRESERVED
                                     00BD   280 ;
                                     00BD   281 ; IMPLICIT OUTPUTS:
                                     00BD   282 ;
                                     00BD   283 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     00BD   284 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     00BD   285 ;
                                     00BD   286 ; DSW RETURN CODES:
                                     00BD   287 ;	IS.SUC	SUCCESSFUL
                                     00BD   288 ;	IE.ADP	BUFFER ACCESS VIOLATION
                                     00BD   289 ;--
                                     00BD   290 RSX$RDAF::				; READ ALL EVENT FLAGS DIRECTIVE
            52            65     3C  00BD   291 	MOVZWL	(R5),R2			; ADDRESS BUFFER
            1F            52     E8  00C0   292 	BLBS	R2,15$			; IF LOW SET THEN ERROR
                          62     7C  00C3   293 	CLRQ	(R2)			; ZERO BUFFER
                                     00C5   294 	$READEF_S #32,(R2)		; READ GROUP 
                          82     D5  00D0   295 	TSTL	(R2)+			; POINT TO NEXT BUFFER PLACE
                                     00D2   296 	$READEF_S #64,(R2)		; READ NEXT GROUP
                                 05  00E1   297 10$:	RSB				; RETURN
                                     00E2   298 15$:	$DSW	#IE.ADP			; INVALID BUFFER
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 05:06:55   VAX-11 MACRO X0.3-11               Page   9
V06.0           RSX$SETF - RSX11M SETF$ DIRECTIVE                                                                                (8)

                                     00EC   300 	.SBTTL	RSX$SETF - RSX11M SETF$ DIRECTIVE
                                     00EC   301 ;++
                                     00EC   302 ; RSX$SETF - RSX11M SET EVENT FLAG DIRECTIVE
                                     00EC   303 ;
                                     00EC   304 ; FUNCTIONAL DESCRIPTION:
                                     00EC   305 ;
                                     00EC   306 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     00EC   307 ; "SETF$" DIRECTIVE.
                                     00EC   308 ;
                                     00EC   309 ; INPUT PARAMETERS:
                                     00EC   310 ;
                                     00EC   311 ;	R5 = ADDRESS OF DPB+2
                                     00EC   312 ;	R6 = CM IMAGE STACK ADDRESS
                                     00EC   313 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     00EC   314 ;	R11 = ADDRESS OF IMAGE HEADER
                                     00EC   315 ;
                                     00EC   316 ; OUTPUT PARAMETERS:
                                     00EC   317 ;
                                     00EC   318 ;	R10,R11 ARE PRESERVED
                                     00EC   319 ;
                                     00EC   320 ; IMPLICIT OUTPUTS:
                                     00EC   321 ;
                                     00EC   322 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     00EC   323 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     00EC   324 ;
                                     00EC   325 ; DSW RETURN CODES:
                                     00EC   326 ;	IS.SET  FLAG WAS SET
                                     00EC   327 ;	IS.CLR  FLAG WAS CLEAR
                                     00EC   328 ;	IE.IEF	INVALID EVENT FLAG SPECIFIED
                                     00EC   329 ;--
                                     00EC   330 RSX$SETF::				; SET EVENT FLAG DIRECTIVE
                          007B   30  00EC   331 	BSBW	CVTEFN			; CONVERT EFN
                                     00EF   332 	$SETEF_S R1			; SET EVENT FLAG
                                     00F8   333 SETCLRDSW:				; COMMON DSW MAP CODE FOR CLEAR/SET
         26 AB            02     99  00F8   334 	CVTBW	#IS.SET,H.DSW(R11)	; ASSUME SET
       0000'8F            50     B1  00FC   335 	CMPW	R0,#SS$_WASSET		; SET?
                          04     13  0101   336 	BEQL	10$			; IF EQL THEN YES
         26 AB            00     99  0103   337 	CVTBW	#IS.CLR,H.DSW(R11)	; SET WAS CLEAR
                                 05  0107   338 10$:	RSB				; RETURN
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 05:06:55   VAX-11 MACRO X0.3-11               Page  10
V06.0           RSX$WTLO - RSX11M WTLO$ DIRECTIVE                                                                                (9)

                                     0108   340 	.SBTTL	RSX$WTLO - RSX11M WTLO$ DIRECTIVE
                                     0108   341 ;++
                                     0108   342 ; RSX$WTLO - RSX11M WAIT FOR LOGICAL OR DIRECTIVE
                                     0108   343 ;
                                     0108   344 ; FUNCTIONAL DESCRIPTION:
                                     0108   345 ;
                                     0108   346 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     0108   347 ; "WTLO$" DIRECTIVE.
                                     0108   348 ; THE ACTION IS TO SET UP THE ARGUMENTS FOR THE WAIT AND TO ENTER
                                     0108   349 ; THE RSX WAIT FOR EVENT CODE "RSX$WAIT".
                                     0108   350 ;
                                     0108   351 ; INPUT PARAMETERS:
                                     0108   352 ;
                                     0108   353 ;	R5 = ADDRESS OF DPB+2
                                     0108   354 ;	R6 = CM IMAGE STACK ADDRESS
                                     0108   355 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     0108   356 ;	R11 = ADDRESS OF IMAGE HEADER
                                     0108   357 ;
                                     0108   358 ; OUTPUT PARAMETERS:
                                     0108   359 ;
                                     0108   360 ;	R10,R11 ARE PRESERVED
                                     0108   361 ;
                                     0108   362 ; IMPLICIT OUTPUTS:
                                     0108   363 ;
                                     0108   364 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     0108   365 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     0108   366 ;
                                     0108   367 ; DSW RETURN CODES:
                                     0108   368 ;	IS.SUC	SUCCESSFUL
                                     0108   369 ;	IE.IEF  BAD EVENT FLAG
                                     0108   370 ;--
                                     0108   371 RSX$WTLO::				; WAIT FOR LOGICAL OR DIRECTIVE
            51            85     3C  0108   372 	MOVZWL	(R5)+,R1		; GET GROUP NUMBER
            03            51     91  010B   373 	CMPB	R1,#3			; TEST RANGE
                          69     1A  010E   374 	BGTRU	IEIEF			; IF GTRU THEN ERROR
            52            65     3C  0110   375 	MOVZWL	(R5),R2			; GET MASK
                          64     13  0113   376 	BEQL	IEIEF			; IF EQL THEN ERROR
            04            51     E9  0115   377 	BLBC	R1,10$			; IF LOW CLEAR THEN LOW MAP
            52            10     78  0118   378 	ASHL	#16,R2,R2		; SHIFT MASK TO HIGH ORDER
                          52         011B       
            3E       016C CA     F1  011C   379 10$:	ACBL	I_HIGHEFN(R10),#62,R1,RSX$WAIT; ADJUST TO PROPER GROUP AND TEST
            0016          51         0121       
                                     0124   380 					; FOR LEGAL EFN
                                     0124   381 	$DSW	#IE.IEF			; ILLEGAL EFN
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 05:06:55   VAX-11 MACRO X0.3-11               Page  11
V06.0           RSX$WTSE - RSX11M WTSE$ DIRECTIVE                                                                               (10)

                                     012E   383 	.SBTTL	RSX$WTSE - RSX11M WTSE$ DIRECTIVE
                                     012E   384 ;++
                                     012E   385 ; RSX$WTSE - RSX11M WAIT FOR SINGLE DIRECTIVE
                                     012E   386 ;
                                     012E   387 ; FUNCTIONAL DESCRIPTION:
                                     012E   388 ;
                                     012E   389 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     012E   390 ; "WTSE$" DIRECTIVE.
                                     012E   391 ; THE ACTION IS TO SET UP THE ARGUMENTS FOR THE WAIT AND TO ENTER THE
                                     012E   392 ; RSX WAIT ROUTINE "RSX$WAIT".
                                     012E   393 ;
                                     012E   394 ;
                                     012E   395 ; INPUT PARAMETERS:
                                     012E   396 ;
                                     012E   397 ;	R5 = ADDRESS OF DPB+2
                                     012E   398 ;	R6 = CM IMAGE STACK ADDRESS
                                     012E   399 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     012E   400 ;	R11 = ADDRESS OF IMAGE HEADER
                                     012E   401 ;
                                     012E   402 ; OUTPUT PARAMETERS:
                                     012E   403 ;
                                     012E   404 ;	R10,R11 ARE PRESERVED
                                     012E   405 ;
                                     012E   406 ; IMPLICIT OUTPUTS:
                                     012E   407 ;
                                     012E   408 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     012E   409 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     012E   410 ;
                                     012E   411 ; DSW RETURN CODES:
                                     012E   412 ;	IS.SUC	SUCCESSFUL
                                     012E   413 ;	IE.IEF	INVALID EVENT FLAG SPECIFIED
                                     012E   414 ;--
                                     012E   415 RSX$WTSE::				; WAIT FOR SINGLE DIRECTIVE
                          0039   30  012E   416 	BSBW	CVTEFN			; CONVERT EFN
            05            00     EF  0131   417 	EXTZV	#0,#5,R1,R2		; GET THE FLAG NUMBER IN THE EFN
            52            51         0134       
            01            52     78  0136   418 	ASHL	R2,#1,R2		; SET THE BIT
                          52         0139       
                                     013A   419 30$:	
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 05:06:55   VAX-11 MACRO X0.3-11               Page  12
V06.0           RSX$WAIT - COMMON CODE FOR WAIT FOR SINGLE AND                                                                  (11)

                                     013A   421 	.SBTTL	RSX$WAIT - COMMON CODE FOR WAIT FOR SINGLE AND OR OF EVENTS
                                     013A   422 ;++
                                     013A   423 ; RSX$WAIT - WAITFOR COMMON CODE
                                     013A   424 ;
                                     013A   425 ; FUNCTIONAL DESCRIPTION:
                                     013A   426 ;
                                     013A   427 ; THIS ROUTINE SETS UP AND POSSIBLY DOES A WAIT FOR LOGICAL OR OF EVENTS.
                                     013A   428 ; THE NORMAL ACTION IS TO LOAD THE WAIT FOR CONTEXT INTO THE IMPURE DATA
                                     013A   429 ; BASE AND DO A WAIT FOR LOGICAL OR ON THAT CONTEXT. IF AN AST OCCURS
                                     013A   430 ; DURING THIS WAIT AND THE AST CAUSES AN IMAGE AST TO BE QUEUED, THEN THIS WAIT
                                     013A   431 ; MUST BE INTERRUPTED FOR THE AST. THE AST LOGIC, DETECTING THIS CONDITION,
                                     013A   432 ; SAVES THE CURRENT WAIT CONTEXT AND SETS UP AN ILLEGAL ARGUMENT LIST.
                                     013A   433 ; AFTER THE RET FROM AST LEVEL THE WAIT IS RE-STARTED AND WILL FAIL.
                                     013A   434 ; WHEN IT FAILS, THIS ROUTINE WILL COMPLETE BY RETURNING TO THE DIRECTIVE
                                     013A   435 ; PROCESSING LOGIC. AT THAT TIME, THE AST IS DELIVERED. ON AST EXIT,
                                     013A   436 ; THE SAVED WAIT FOR CONTEXT IS PUT BACK AND THIS ROUTINE REENTERED.
                                     013A   437 ;
                                     013A   438 ; INPUTS:
                                     013A   439 ;
                                     013A   440 ;	R1,R2 = QUAD WORD WAIT FOR CONTEXT
                                     013A   441 ;	R10 = ADDRESS OF THE IMAGE IMPURE DATA BASE
                                     013A   442 ;	R11 = ADDRESS OF THE IMAGE
                                     013A   443 ;
                                     013A   444 ; OUTPUTS:
                                     013A   445 ;
                                     013A   446 ;	R10,R11 ARE PRESERVED.
                                     013A   447 ;
                                     013A   448 ; THE WAIT FOR CONTEXT IN THE IMPURE DATA BASE IS CLEARED.
                                     013A   449 ;--
                                     013A   450 RSX$WAIT::				; WAIT FOR EVENT
       0170 CA            06     E6  013A   451 	BBSSI	#SV_WAIT,I_STATE(R10),10$; SET WAIT SET UP IN PROGRESS
                          00         013F       
                                     0140   452 ;
                                     0140   453 ; IF SV_PENDWAIT IS SET THAT MEANS AN AST HAS OCCURED SINCE THE RSX WAS ENTERED.
                                     0140   454 ; THIS MEANS THAT THE AST SOULD BE DONE FIRST, THEN THE WAIT.
                                     0140   455 ;
       0170 CA            05     E0  0140   456 10$:	BBS	#SV_PENDWAIT,I_STATE(R10),20$; BR IF WAIT SHOULD NOT BE DONE
                          14         0145       
                                     0146   457 ;
                                     0146   458 ; DO THE WAIT
                                     0146   459 ;
            50       0178 CA     9E  0146   460 	MOVAB	I_WAIT(R10),R0		; ADDRESS WAIT ARG LIST
            60            51     7D  014B   461 	MOVQ	R1,(R0)			; INSERT MASK AND CLUSTER DATA
            70            02     9A  014E   462 	MOVZBL	#2,-(R0)		; INSERT SIZE OF LIST
                                     0151   463 ;
                                     0151   464 ; THIS WAIT IS FLUSHED AT AST LEVEL BY CLEARING THE WAIT MASK AND CLUSTER DATA
                                     0151   465 ;
                                     0151   466 	$WFLOR_G	(R0)			; DO SERVICE
                          05     11  0158   467 	BRB	30$			; EXIT DIRECTIVE
                                     015A   468 ;
                                     015A   469 ; SAVE CURRENT WAIT DATA FOR LATER WAIT
                                     015A   470 ;
       0180 CA            51     7D  015A   471 20$:	MOVQ	R1,I_WAITSAVE(R10)	;
       0170 CA            06     E7  015F   472 30$:	BBCCI	#SV_WAIT,I_STATE(R10),35$; CLEAR WAIT
                          00         0164       
                     0178 CA     7C  0165   473 35$:	CLRQ	I_WAIT(R10)		; RESET CONTEXT
                                 05  0169   474 	RSB				; RETURN
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 05:06:55   VAX-11 MACRO X0.3-11               Page  13
V06.0           CVTEFN - CONVERT EVENT FLAG NUMBER                                                                              (12)

                                     016A   476 	.SBTTL	CVTEFN - CONVERT EVENT FLAG NUMBER
                                     016A   477  
                                     016A   478 	.ENABL LSB
                                     016A   479 ;++
                                     016A   480 ; CVTEFN - CONVERT EVENT FLAG NUMBER TO RSX MAP AND CHECK FOR VALID
                                     016A   481 ;
                                     016A   482 ; INPUTS:	
                                     016A   483 ;
                                     016A   484 ;	R5 = ADDRESS OF THE EVENT FLAG VALUE
                                     016A   485 ;
                                     016A   486 ; OUTPUTS:
                                     016A   487 ;
                                     016A   488 ;	R1 = EVENT FLAG NUMBER
                                     016A   489 ;	R5 = R5+2
                                     016A   490 ;--
            51            85     3C  016A   491 CVTEFN:	MOVZWL	(R5)+,R1		; GET RSX FLAG
                          08     13  016D   492 	BEQL	10$			; IF EQL THEN ERROR
            1F       016C CA     F1  016F   493 	ACBL	I_HIGHEFN(R10),#31,R1,15$; MAP TO RSX EVENT FLAGS
            000C          51         0174       
                          8E     D5  0177   494 10$:	TSTL	(SP)+			; POP RETURN ADDRESS
                                     0179   495 ;
                                     0179   496 ; IEIEF - SET INVALID EVENT FLAG AND EXIT DIRECTIVE PROCESSING
                                     0179   497 ;
                                     0179   498 IEIEF:					; SET IE.IEF ERROR FOR DIRECTIVE
                                     0179   499 	$DSW	#IE.IEF			; SET STATUS AND RETURN
                                     0183   500 ;
                                 05  0183   501 15$:	RSB				;
                                     0184   502  
                                     0184   503 	.DSABL LSB
                                     0184   504 ;
                                     0184   505 	.END
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 05:06:55   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                    (12)

$$MSG          = 00000000            H.LUN            0000003E            IE.HFU         = FFFFFFE4            
...GBL         = 00000000            H.NLUN           0000003C            IE.HWR         = FFFFFFFA            
ACBC_CTLRCAST  = 00000002            H.NML            00000031            IE.IBS         = FFFFFFA7            
ACBC_FLOATAST  = 00000003            H.ODVA           00000012            IE.IDU         = FFFFFFA4            
ACBC_PWRAST    = 00000000            H.ODVL           00000014            IE.IEF         = FFFFFF9F            
ACBC_RCVAST    = 00000001            H.OVLY           0000002C            IE.IES         = FFFFFFAE            
ACBV_INPROG    = 00000001            H.PFVA           0000001A            IE.IFC         = FFFFFFFE            
ACBV_PERM      = 00000000            H.RCVA           0000001E            IE.IFU         = FFFFFFE7            
ACBV_TYPE      = 00000008            H.RRVA           00000032            IE.ILL         = FFFFFFD6            
ACB_FLAGS        0000000C            H.SPRI           00000030            IE.ILU         = FFFFFFA0            
ACB_LINK         00000000            H.TKVA           00000016            IE.ILV         = FFFFFFED            
ACB_UPC          0000000A            H.TKVL           00000018            IE.INS         = FFFFFFFE            
ACB_UPRM         00000008            H.VEXT           0000002E            IE.IOP         = FFFFFFAD            
ADR_HIGHLIM      00000004            H.WND            00000024            IE.IPR         = FFFFFFA1            
ADR_LOWLIM       00000000            IE.2DV         = FFFFFFD0            IE.ISQ         = FFFFFFC3            
ADR_SIZE         00000008            IE.ABO         = FFFFFFF1            IE.ITI         = FFFFFFA3            
AP_NAME          00000004            IE.ACT         = FFFFFFF9            IE.ITP         = FFFFFFA8            
AST_PARAM        00000004            IE.ADP         = FFFFFF9E            IE.ITS         = FFFFFFF8            
AST_PC           00000010            IE.ALC         = FFFFFFAC            IE.IUI         = FFFFFFA5            
AST_PSL          00000014            IE.ALG         = FFFFFFAC            IE.LCK         = FFFFFFE5            
AST_R0           00000008            IE.ALN         = FFFFFFDE            IE.LNL         = FFFFFFA6            
AST_R1           0000000C            IE.AST         = FFFFFFB0            IE.MAP         = FFFFFFAF            
BIT...         = 0006809C            IE.BAD         = FFFFFFFF            IE.MOD         = FFFFFFEB            
CVTEFN           0000016A R     05   IE.BBE         = FFFFFFC8            IE.NBF         = FFFFFFD9            
C_CANONPS      = 83C00000            IE.BCC         = FFFFFFBE            IE.NBK         = FFFFFFD7            
C_RCVDSTR      = 44564352            IE.BDI         = FFFFFFCC            IE.NDR         = FFFFFFB8            
FCB_ATTRIBS      0000007C            IE.BDR         = FFFFFFCE            IE.NFI         = FFFFFFC4            
FCB_FIB          0000004C            IE.BDV         = FFFFFFC9            IE.NFW         = FFFFFFBB            
FCB_FID          00000000            IE.BHD         = FFFFFFC0            IE.NLK         = FFFFFFB1            
FCB_FNAME        00000014            IE.BLB         = FFFFFFBA            IE.NLN         = FFFFFFDB            
FCB_FNAMEDESC    0000000C            IE.BLK         = FFFFFFEC            IE.NNC         = FFFFFFB3            
FCB_FNB          00000002            IE.BNM         = FFFFFFCA            IE.NNL         = FFFFFFB2            
FCB_PC           00000078            IE.BTF         = FFFFFFB4            IE.NNN         = FFFFFFBC            
FCB_RESULT       00000030            IE.BTP         = FFFFFFD5            IE.NOD         = FFFFFFE9            
FCB_RESULTDESC   00000004            IE.BVR         = FFFFFFC1            IE.NSF         = FFFFFFE6            
FCB_SIZE         000000B4            IE.BYT         = FFFFFFED            IE.NST         = FFFFFFB0            
FP_AP            00000008            IE.CKP         = FFFFFFF6            IE.NSW         = FFFFFFEE            
FP_FP            0000000C            IE.CKS         = FFFFFFE2            IE.NVR         = FFFFFFAA            
FP_PC            00000010            IE.CLO         = FFFFFFDA            IE.NVW         = FFFFFFA9            
FP_PSL           00000004            IE.CNR         = FFFFFFB7            IE.OFL         = FFFFFFBF            
FP_REGISTERS     00000014            IE.CON         = FFFFFFEA            IE.ONP         = FFFFFFFB            
GBL...         = 00000000            IE.DAA         = FFFFFFF8            IE.OVR         = FFFFFFEE            
H.CSP            00000000            IE.DAO         = FFFFFFF3            IE.PES         = FFFFFFAD            
H.CUIC           00000008            IE.DFU         = FFFFFFE8            IE.PNS         = FFFFFFA2            
H.DSW            00000026            IE.DNA         = FFFFFFF9            IE.PRI         = FFFFFFF0            
H.DUIC           0000000A            IE.DNR         = FFFFFFFD            IE.PTS         = FFFFFFFD            
H.EFLM           00000004            IE.DUN         = FFFFFFF7            IE.RAC         = FFFFFFD4            
H.EFSV           00000020            IE.DUP         = FFFFFFC7            IE.RAT         = FFFFFFD3            
H.FCS            00000028            IE.EOF         = FFFFFFF6            IE.RBG         = FFFFFFD8            
H.FORT           0000002A            IE.EOT         = FFFFFFC2            IE.RBS         = FFFFFFF1            
H.FPSA           00000022            IE.EOV         = FFFFFFF5            IE.RCN         = FFFFFFD2            
H.FPVA           0000001C            IE.EXP         = FFFFFFB5            IE.RER         = FFFFFFE0            
H.GARD           0000003A            IE.FEX         = FFFFFFCF            IE.RNM         = FFFFFFCD            
H.HDLN           00000002            IE.FHE         = FFFFFFC5            IE.RSU         = FFFFFFEF            
H.IPC            0000000E            IE.FIX         = FFFFFFF7            IE.SDP         = FFFFFF9D            
H.IPS            0000000C            IE.FLN         = FFFFFFAF            IE.SNC         = FFFFFFDD            
H.ISP            00000010            IE.FOP         = FFFFFFCB            IE.SPC         = FFFFFFFA            
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 05:06:55   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                    (12)

IE.SQC         = FFFFFFDC            I_HIGHEFN        0000016C            PSL_TBIT       = 00000004            
IE.SRE         = FFFFFFF2            I_HIGHSIZE       000000F4            QIOV_FILES     = 00000000            
IE.STK         = FFFFFFC6            I_IMAGEVBN       000000F8            QIO_FLAGS        0000001A            
IE.TCH         = FFFFFFF5            I_INISIZE        000000F0            QIO_IOSB         0000000E            
IE.TMM         = FFFFFFB9            I_LENGTH         000001F0            QIO_LUT          00000016            
IE.TMO         = FFFFFFB6            I_LOGNAME        000000E0            QIO_SECONDBLK    0000001C            
IE.ULK         = FFFFFFAB            I_LUT            00000168            QIO_SIZE         00000020            
IE.ULN         = FFFFFFFB            I_NLUN           00000164            RSX$CLEF         00000000 RG    05   
IE.UNS         = FFFFFFFC            I_PC             00000020            RSX$CMKT         0000000F RG    05   
IE.UPN         = FFFFFFFF            I_PPFINDEX       00000162            RSX$C_SUBSYSTEM= 00000006            
IE.VER         = FFFFFFFC            I_PROCNAME       0000014C            RSX$DECL         0000001B RG    05   
IE.WAC         = FFFFFFE3            I_PS             00000024            RSX$EXIF         0000001C RG    05   
IE.WAT         = FFFFFFE1            I_PWRAST         000001A0            RSX$EXIT         ********   X   05   
IE.WCK         = FFFFFFAA            I_R0             00000000            RSX$MARKAST      ********   X   05   
IE.WER         = FFFFFFDF            I_R1             00000004            RSX$MRKT         00000039 RG    05   
IE.WLK         = FFFFFFF4            I_R2             00000008            RSX$RDAF         000000BD RG    05   
IE.WOV         = FFFFFFAB            I_R3             0000000C            RSX$SETF         000000EC RG    05   
IEIEF            00000179 R     05   I_R4             00000010            RSX$SETUPAST     ********   X   05   
IEITI            000000B3 R     05   I_R5             00000014            RSX$TIMEMAG      ********   X   05   
IS.BV          = 00000005            I_R6             00000018            RSX$WAIT         0000013A RG    05   
IS.CC          = 00000301            I_RAD50NAME      00000148            RSX$WSIG         0000001B RG    05   
IS.CLR         = 00000000            I_RCVAST         0000019C            RSX$WTLO         00000108 RG    05   
IS.CR          = 00000D01            I_RCVMAIL        00000160            RSX$WTSE         0000012E RG    05   
IS.EOT         = 00000401            I_RUNFLAGS       0000018C            RSX$_ACCVIO    = 00068044            
IS.ESC         = 00001B01            I_SCRATCH        00000028            RSX$_BADLIBREF = 0006806C            
IS.ESQ         = 00009B01            I_SSTVEC         00000194            RSX$_BADSTACK  = 0006804C            
IS.PES         = 00008001            I_SSTVECL        00000196            RSX$_BREAK     = 0006800C            
IS.PND         = 00000000            I_STATE          00000170            RSX$_EXITSTATUS= 00068640            
IS.RDD         = 00000002            I_TYPE           0000001C            RSX$_EXTERNABRT= 0006805C            
IS.SET         = 00000002            I_UIC            0000013C            RSX$_ILLINST   = 0006802C            
IS.SPD         = 00000002            I_WAIT           00000178            RSX$_IMAGETERM = 00068084            
IS.SUC         = 00000001            I_WAITSAVE       00000180            RSX$_INSFDYNMEM= 00068054            
IS.TAB         = 00000901            LUTC_CR        = 00000005            RSX$_IOT       = 00068014            
IS.TMO         = 00000002            LUTC_DISK      = 00000002            RSX$_LIBNOTFND = 00068074            
I_ADR0           000000FC            LUTC_LP        = 00000004            RSX$_LOADERROR = 0006807C            
I_ASCIINAME      00000140            LUTC_RMS       = 00000000            RSX$_NOCOMM    = 00068094            
I_ASTPOOL        000000D0            LUTC_TAPE      = 00000003            RSX$_NONRSXEMT = 0006801C            
I_ASTQUEUE       000000C8            LUTC_TRM       = 00000001            RSX$_NOPMD     = 00068332            
I_BAILOUTFP      00000188            LUTV_CTRLC     = 00000002            RSX$_NOSUCHDEV = 00068322            
I_CMDROUT        000000E8            LUTV_CTRLO     = 00000000            RSX$_NOTSKIMG  = 00068064            
I_CURAST         00000198            LUTV_PRM       = 00000003            RSX$_ODDADDR   = 00068034            
I_DEBVEC         00000190            LUT_CHAN         0000000C            RSX$_PMD       = 0006832A            
I_DEBVECL        00000192            LUT_CHAR         00000012            RSX$_RCVMBXSIZ = 0000012C            
I_FCBPOOL        000000D8            LUT_CTRLC        00000032            RSX$_REGMSG    = 0006808C            
I_FCC            000001B4            LUT_FLAGS        0000000A            RSX$_RESERVED  = 00068004            
I_FLOATA0        000001C0            LUT_INFONAME     0000002E            RSX$_TBIT      = 0006803C            
I_FLOATA1        000001C8            LUT_INFOUNIT     00000030            RSX$_TRAP      = 00068024            
I_FLOATA2        000001D0            LUT_LINK         00000000            RSX$_VERIFYCMD = 00068648            
I_FLOATA3        000001D8            LUT_REALNAME     0000001E            SETCLRDSW        000000F8 R     05   
I_FLOATA4        000001E0            LUT_REF          00000008            SS$_INSFMEM      ********   X   05   
I_FLOATA5        000001E8            LUT_RSXNAME      00000010            SS$_WASSET       ********   X   05   
I_FLOATADR       000001B0            LUT_SIZE         00000036            SV_ASTLVL        00000004            
I_FLOATAST       000001A4            LUT_TYPE         00000016            SV_DCL           00000002            
I_FLOATCSR       000001A8            PSL_CC         = 00000000            SV_FLOATAST      00000009            
I_FLOATERR       000001AC            PSL_CM         = 0000001F            SV_NOAST         00000003            
I_FLOATTMP       000001B8            PSL_FPD        = 0000001B            SV_PENDWAIT      00000005            
I_GARD           000000EC            PSL_FU         = 00000006            SV_PWRAST        00000008            
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 05:06:55   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                    (12)

SV_RCVAST        00000007            
SV_RESTORE       00000000            
SV_TRANSLATE     00000001            
SV_WAIT          00000006            
SYS$CANTIM       ********   X   05   
SYS$CLREF        ********   X   05   
SYS$READEF       ********   X   05   
SYS$SETEF        ********   X   05   
SYS$SETIMR       ********   X   05   
SYS$WFLOR        ********   X   05   
W.BATT           00000006            
W.BFPD           0000000C            
W.BHVR           00000004            
W.BLGH           00000010            
W.BLPD           0000000E            
W.BLVR           00000002            
W.BNPD           0000000D            
W.BOFF           0000000A            
W.BPCB           00000000            
W.BSIZ           00000008            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
..ABS.           00000042      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000000      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXDEF           000001F4      04     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXCODE          00000184      05       PIC   USR   CON   REL   LCL   SHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
16464. BYTES LEFT IN FREE MEMORY POOL.
250. BYTES OF RECLAIMED MEMORY.
OBJ$:RSXEFN,LIS$:RSXEFN/-SP=EXECML$/ML,LIB$:R/ML,SRC$:RSXEFN
30 MLB DIR RDS - 505 GETS TO DEFINE 24 MACROS. 16 INTER. FILE WRITES. 
