RSXRMSDRV       - VAX/VMS RSX11M AME RMS DRIVER                  22-AUG-1978 05:14:49   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      40  RSX$RMS_DRV - RMS DRIVER
RSXRMSDRV       - VAX/VMS RSX11M AME RMS DRIVER                  22-AUG-1978 05:14:49   VAX-11 MACRO X0.3-11               Page   1
V06.0                                                                                                                            (1)

                                     0000     1 	.TITLE	RSXRMSDRV - VAX/VMS RSX11M AME RMS DRIVER 
                                     0000     2 	.IDENT	/V06.0/		;
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1978
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY:
                                     0000    25 ;
                                     0000    26 ;	VAX/VMS RSX11M AME
                                     0000    27 ;
                                     0000    28 ; ABSTRACT:
                                     0000    29 ;
                                     0000    30 ; 	RMS I/O DRIVER
                                     0000    31 ;
                                     0000    32 ; AUTHOR: R.HEINEN 4-NOV-76
                                     0000    33 ;--
                                     0000    34 ;
                                     0000    35 ; EXTERNAL SYMBOLS
                                     0000    36 ;
                                     0000    37 	$RSXDEF			; DEFINE RSX SYMBOLS
                                     0000    38 	$RABDEF			; DEFINE RAB
RSXRMSDRV       - VAX/VMS RSX11M AME RMS DRIVER                  22-AUG-1978 05:14:49   VAX-11 MACRO X0.3-11               Page   2
V06.0           RSX$RMS_DRV - RMS DRIVER                                                                                         (2)

                                     0000    40 	.SBTTL	RSX$RMS_DRV - RMS DRIVER
                                     0000    41 ;++
                                 00000000    42 	.PSECT	RSXCODE,NOWRT,SHR,PIC
                                     0000    43 ; RSX$RMS_DRV - RMS I/O DRIVER
                                     0000    44 ;
                                     0000    45 ; FUNCTIONAL DESCRIPTION:
                                     0000    46 ;
                                     0000    47 ; THIS ROUTINE PROCESSES ALL RMS DIRECTED I/O OPERATIONS.
                                     0000    48 ;
                                     0000    49 ; INPUTS:
                                     0000    50 ;
                                     0000    51 ;	R2 = ADDRESS OF THE QIO CONTEXT
                                     0000    52 ;	R3 = MAJOR FUNCTION CODE
                                     0000    53 ;	R5 = QIO DPB AREA
                                     0000    54 ;	R6 = STACK
                                     0000    55 ;	R7 = ENTIRE FUNCTION CODE
                                     0000    56 ;	R8 = LUT ENTRY
                                     0000    57 ;	R10 = ADDRESS OF THE IMAGE IMPURE AREA
                                     0000    58 ;	R11 = HEADER ADDRESS
                                     0000    59 ;
                                     0000    60 ; OUTPUTS:
                                     0000    61 ;
                                     0000    62 ;	R10,R11 ARE SAVED.
                                     0000    63 ;--
                                     0000    64 RSX$RMS_DRV::				; RMS I/O DRIVER
                                     0000    65 	CASE	R3,<-			;
                                     0000    66 		RSX$DLVRQIOAST,-	; I/O KILL
                                     0000    67 		RMS_PUT,-		; WRITE LOGICAL BLOCK
                                     0000    68 		RMS_GET,-		; READ LOGICAL BLOCK
                                     0000    69 		RSX$DLVRQIOAST,-	; ATTACH DEVICE
                                     0000    70 		RSX$DLVRQIOAST,-	; DETACH DEVICE
                                     0000    71 		RMS_SET,-		; FUNCTION CODE 5
                                     0000    72 		RSX$DLVRQIOAST,-	; FUNCTION CODE 6
                                     0000    73 		RSX$IEIFC,-		; ILLEGAL
                                     0000    74 		RSX$IEIFC,-		; ILLEGAL
                                     0000    75 		RMS_GET,-		; FUNCTION CODE 9
                                     0000    76 		RSX$IEIFC,-		; ILLEGAL
                                     0000    77 		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
                                     0000    78 		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
                                     0000    79 		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
                                     0000    80 		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
                                     0000    81 		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
                                     0000    82 		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
                                     0000    83 		RMS_GET,-		; READ VIRTUAL BLOCK
                                     0000    84 		RMS_PUT,-		; WRITE VIRTUAL BLOCK
                                     0000    85 		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
                                     0000    86 		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
                                     0000    87 		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
                                     0000    88 		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
                                     0000    89 		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
                                     0000    90 		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
                                     0000    91 		>
                          FFC7'  31  0036    92 	BRW	RSX$IEIFC		; ERROR EXIT
                                     0039    93 ;
                                     0039    94 ; RMS GET FOR A READ VIRTUAL OR LOGICAL 
                                     0039    95 ;
                                     0039    96 RMS_GET:				;
RSXRMSDRV       - VAX/VMS RSX11M AME RMS DRIVER                  22-AUG-1978 05:14:49   VAX-11 MACRO X0.3-11               Page   3
V06.0           RSX$RMS_DRV - RMS DRIVER                                                                                         (2)

                          FFC4'  30  0039    97 	BSBW	RSX$CHK_TI_INP		; CHECK FOR TI
            54       0000'CF     9E  003C    98 	MOVAB	W^RSX$G_RAB,R4		; ADDRESS RAB
         02 A4         0C A8     B0  0041    99 	MOVW	LUT_CHAN(R8),RAB$W_ISI(R4); INSERT CONNECTION DATA
                       2C A4     D4  0046   100 	CLRL	RAB$L_RHB(R4)		; ZERO CONTROL BYTE
         24 A4            65     3C  0049   101 	MOVZWL	(R5),RAB$L_UBF(R4)	; SET UP BUFFER ADDRESS
         20 A4         02 A5     B0  004D   102 	MOVW	2(R5),RAB$W_USZ(R4)	; SET UP SIZE
                                     0052   103 	$GET	RAB=(R4)		; DO THE GET
         12 A2       100D 8F     3C  005B   104 	MOVZWL	#^X0100D,QIO_IOSB+4(R2)	; SET TERMINAL TYPE SECOND STATUS
                          3C     11  0061   105 	BRB	RMSIOERROR		; HANDLE THE ERRORS IN COMMON WITH WRITES
                                     0063   106 ;
                                     0063   107 ; RMS PUT
                                     0063   108 ;
                                     0063   109 RMS_PUT:				;
                          FF9A'  30  0063   110 	BSBW	RSX$CHK_TI_OUT		; CHECK FOR TI OUTPUT
            54       0000'CF     9E  0066   111 	MOVAB	W^RSX$G_RAB,R4		; ADDRESS RAB
         02 A4         0C A8     B0  006B   112 	MOVW	LUT_CHAN(R8),RAB$W_ISI(R4); INSERT CONNECTION DATA
            50       0000'CF     9E  0070   113 	MOVAB	W^RSX$GL_CARRIAGE,R0	; ADDRESS CARRAGE CONTROL CONVERTION TABLE
         2C A4         04 A5     9A  0075   114 	MOVZBL	4(R5),RAB$L_RHB(R4)	; GET CONTROL BYTE
                          0E     13  007A   115 	BEQL	20$			; IF EQL THEN NONE
         2C A4            80     3E  007C   116 10$:	MOVAW	(R0)+,RAB$L_RHB(R4)	; ASSUME THIS ONE
                          60     95  0080   117 	TSTB	(R0)			; DONE?
                          06     13  0082   118 	BEQL	20$			; IF EQL THEN YES
            80         04 A5     91  0084   119 	CMPB	4(R5),(R0)+		; MATCH
                          F2     12  0088   120 	BNEQ	10$			; IF EQL THEN NO
         28 A4            65     3C  008A   121 20$:	MOVZWL	(R5),RAB$L_RBF(R4)	; SET UP BUFFER ADDRESS
         22 A4         02 A5     B0  008E   122 	MOVW	2(R5),RAB$W_RSZ(R4)	; SET UP SIZE
                                     0093   123 	$PUT	RAB=(R4)		; PUT THE RECORD
                       12 A2     D4  009C   124 	CLRL	QIO_IOSB+4(R2)		; SET NO SECOND STATUS
                                     009F   125 RMSIOERROR:				;
         0E A2         00'8F     9B  009F   126 	MOVZBW	#SS$_NORMAL,QIO_IOSB(R2); ASSUME NORMAL COMPLETION
            18            50     E8  00A4   127 	BLBS	R0,10$			; IF LOW SET THEN SUCCESS
   00000000'8F            50     D1  00A7   128 	CMPL	R0,#RMS$_EOF		; EOF?
                          06     12  00AE   129 	BNEQ	5$			; IF YES THEN SET ERROR
         12 A2            1A     90  00B0   130 	MOVB	#26,QIO_IOSB+4(R2)	; SET TERMINATED BY CTRLZ
                          09     11  00B4   131 	BRB	10$			; CONTINUE
         0E A2       0000'8F     3C  00B6   132 5$:	MOVZWL	#SS$_CTRLERR,QIO_IOSB(R2); SET DEFAULT ERROR
                       12 A2     D4  00BC   133 	CLRL	QIO_IOSB+4(R2)		; SET NO SECOND STATUS
         10 A2         22 A4     B0  00BF   134 10$:	MOVW	RAB$W_RSZ(R4),QIO_IOSB+2(R2); SET SIZE OF RECORD
            50         0E A2     7D  00C4   135 	MOVQ	QIO_IOSB(R2),R0		; PICK STATUS UP AS A WHOLE
                          FF35'  31  00C8   136 	BRW	RSX$DLVRQIOAST		; POST STATUS IN AST
                                     00CB   137 ;
                                     00CB   138 ; RMS SET TERMINAL CHARACTERISTICS
                                     00CB   139 ;
                                     00CB   140 RMS_SET:				;
            50       0000'8F     3C  00CB   141 	MOVZWL	#SS$_ILLIOFUNC,R0	; ASSUME ILLEGAL FUNCTION
                          57     95  00D0   142 	TSTB	R7			; ONLY IO.GTS
                          1D     12  00D2   143 	BNEQ	10$			; IF NEQ THEN ILLEGAL
            54            85     3C  00D4   144 	MOVZWL	(R5)+,R4		; ADDRESS BUFFER
            55            65     3C  00D7   145 	MOVZWL	(R5),R5			; GET SIZE
            50       0000'8F     3C  00DA   146 	MOVZWL	#SS$_ACCVIO,R0		; ASSUME BAD BUFFER
            55            04     B1  00DF   147 	CMPW	#4,R5			; ENOUGH?
                          0D     1A  00E2   148 	BGTRU	10$			; IF GTRU THEN NO
                                     00E4   149 	IFNOWRT	R5,(R4),10$
                          64     D4  00EA   150 	CLRL	(R4)			; SET NO SUPPORT
            50       0000'8F     B0  00EC   151 	MOVW	#SS$_NORMAL,R0		; ASSUME SUCCESS
                          51     D4  00F1   152 10$:	CLRL	R1
                          FF0A'  31  00F3   153 	BRW	RSX$DLVRQIOAST		;
RSXRMSDRV       - VAX/VMS RSX11M AME RMS DRIVER                  22-AUG-1978 05:14:49   VAX-11 MACRO X0.3-11               Page   4
V06.0           RSX$RMS_DRV - RMS DRIVER                                                                                         (2)

                                     00F6   154 	.END
RSXRMSDRV       - VAX/VMS RSX11M AME RMS DRIVER                  22-AUG-1978 05:14:49   VAX-11 MACRO X0.3-11               Page   5
SYMBOL TABLE                                                                                                                     (2)

$$.TMP1        = 00000001            H.ISP            00000010            IE.ILL         = FFFFFFD6            
$$.TMP2        = 00000064            H.LUN            0000003E            IE.ISQ         = FFFFFFC3            
$$MSG          = 00000000            H.NLUN           0000003C            IE.LCK         = FFFFFFE5            
...GBL         = 00000000            H.NML            00000031            IE.MOD         = FFFFFFEB            
ACBC_CTLRCAST  = 00000002            H.ODVA           00000012            IE.NBF         = FFFFFFD9            
ACBC_FLOATAST  = 00000003            H.ODVL           00000014            IE.NBK         = FFFFFFD7            
ACBC_PWRAST    = 00000000            H.OVLY           0000002C            IE.NDR         = FFFFFFB8            
ACBC_RCVAST    = 00000001            H.PFVA           0000001A            IE.NFI         = FFFFFFC4            
ACBV_INPROG    = 00000001            H.RCVA           0000001E            IE.NFW         = FFFFFFBB            
ACBV_PERM      = 00000000            H.RRVA           00000032            IE.NLK         = FFFFFFB1            
ACBV_TYPE      = 00000008            H.SPRI           00000030            IE.NLN         = FFFFFFDB            
ACB_FLAGS        0000000C            H.TKVA           00000016            IE.NNC         = FFFFFFB3            
ACB_LINK         00000000            H.TKVL           00000018            IE.NNL         = FFFFFFB2            
ACB_UPC          0000000A            H.VEXT           0000002E            IE.NNN         = FFFFFFBC            
ACB_UPRM         00000008            H.WND            00000024            IE.NOD         = FFFFFFE9            
ADR_HIGHLIM      00000004            IE.2DV         = FFFFFFD0            IE.NSF         = FFFFFFE6            
ADR_LOWLIM       00000000            IE.ABO         = FFFFFFF1            IE.NST         = FFFFFFB0            
ADR_SIZE         00000008            IE.ALC         = FFFFFFAC            IE.OFL         = FFFFFFBF            
AP_NAME          00000004            IE.ALN         = FFFFFFDE            IE.ONP         = FFFFFFFB            
AST_PARAM        00000004            IE.AST         = FFFFFFB0            IE.OVR         = FFFFFFEE            
AST_PC           00000010            IE.BAD         = FFFFFFFF            IE.PES         = FFFFFFAD            
AST_PSL          00000014            IE.BBE         = FFFFFFC8            IE.PRI         = FFFFFFF0            
AST_R0           00000008            IE.BCC         = FFFFFFBE            IE.RAC         = FFFFFFD4            
AST_R1           0000000C            IE.BDI         = FFFFFFCC            IE.RAT         = FFFFFFD3            
BIT...         = 00000020            IE.BDR         = FFFFFFCE            IE.RBG         = FFFFFFD8            
C_CANONPS      = 83C00000            IE.BDV         = FFFFFFC9            IE.RCN         = FFFFFFD2            
C_RCVDSTR      = 44564352            IE.BHD         = FFFFFFC0            IE.RER         = FFFFFFE0            
FCB_ATTRIBS      0000007C            IE.BLB         = FFFFFFBA            IE.RNM         = FFFFFFCD            
FCB_FIB          0000004C            IE.BLK         = FFFFFFEC            IE.RSU         = FFFFFFEF            
FCB_FID          00000000            IE.BNM         = FFFFFFCA            IE.SNC         = FFFFFFDD            
FCB_FNAME        00000014            IE.BTF         = FFFFFFB4            IE.SPC         = FFFFFFFA            
FCB_FNAMEDESC    0000000C            IE.BTP         = FFFFFFD5            IE.SQC         = FFFFFFDC            
FCB_FNB          00000002            IE.BVR         = FFFFFFC1            IE.SRE         = FFFFFFF2            
FCB_PC           00000078            IE.BYT         = FFFFFFED            IE.STK         = FFFFFFC6            
FCB_RESULT       00000030            IE.CKS         = FFFFFFE2            IE.TMM         = FFFFFFB9            
FCB_RESULTDESC   00000004            IE.CLO         = FFFFFFDA            IE.TMO         = FFFFFFB6            
FCB_SIZE         000000B4            IE.CNR         = FFFFFFB7            IE.ULK         = FFFFFFAB            
FP_AP            00000008            IE.CON         = FFFFFFEA            IE.VER         = FFFFFFFC            
FP_FP            0000000C            IE.DAA         = FFFFFFF8            IE.WAC         = FFFFFFE3            
FP_PC            00000010            IE.DAO         = FFFFFFF3            IE.WAT         = FFFFFFE1            
FP_PSL           00000004            IE.DFU         = FFFFFFE8            IE.WCK         = FFFFFFAA            
FP_REGISTERS     00000014            IE.DNA         = FFFFFFF9            IE.WER         = FFFFFFDF            
GBL...         = 00000000            IE.DNR         = FFFFFFFD            IE.WLK         = FFFFFFF4            
H.CSP            00000000            IE.DUN         = FFFFFFF7            IS.BV          = 00000005            
H.CUIC           00000008            IE.DUP         = FFFFFFC7            IS.CC          = 00000301            
H.DSW            00000026            IE.EOF         = FFFFFFF6            IS.CR          = 00000D01            
H.DUIC           0000000A            IE.EOT         = FFFFFFC2            IS.EOT         = 00000401            
H.EFLM           00000004            IE.EOV         = FFFFFFF5            IS.ESC         = 00001B01            
H.EFSV           00000020            IE.EXP         = FFFFFFB5            IS.ESQ         = 00009B01            
H.FCS            00000028            IE.FEX         = FFFFFFCF            IS.PES         = 00008001            
H.FORT           0000002A            IE.FHE         = FFFFFFC5            IS.PND         = 00000000            
H.FPSA           00000022            IE.FLN         = FFFFFFAF            IS.RDD         = 00000002            
H.FPVA           0000001C            IE.FOP         = FFFFFFCB            IS.SUC         = 00000001            
H.GARD           0000003A            IE.HFU         = FFFFFFE4            IS.TAB         = 00000901            
H.HDLN           00000002            IE.IES         = FFFFFFAE            IS.TMO         = 00000002            
H.IPC            0000000E            IE.IFC         = FFFFFFFE            I_ADR0           000000FC            
H.IPS            0000000C            IE.IFU         = FFFFFFE7            I_ASCIINAME      00000140            
RSXRMSDRV       - VAX/VMS RSX11M AME RMS DRIVER                  22-AUG-1978 05:14:49   VAX-11 MACRO X0.3-11               Page   6
SYMBOL TABLE                                                                                                                     (2)

I_ASTPOOL        000000D0            LUTC_TAPE      = 00000003            RAB$L_STV        0000000C            
I_ASTQUEUE       000000C8            LUTC_TRM       = 00000001            RAB$L_UBF        00000024            
I_BAILOUTFP      00000188            LUTV_CTRLC     = 00000002            RAB$M_ASY      = 00000001            
I_CMDROUT        000000E8            LUTV_CTRLO     = 00000000            RAB$M_BIO      = 00000800            
I_CURAST         00000198            LUTV_PRM       = 00000003            RAB$M_CCO      = 80000000            
I_DEBVEC         00000190            LUT_CHAN         0000000C            RAB$M_CVT      = 04000000            
I_DEBVECL        00000192            LUT_CHAR         00000012            RAB$M_EOF      = 00000100            
I_FCBPOOL        000000D8            LUT_CTRLC        00000032            RAB$M_FDL      = 00000040            
I_FCC            000001B4            LUT_FLAGS        0000000A            RAB$M_HSH      = 00000080            
I_FLOATA0        000001C0            LUT_INFONAME     0000002E            RAB$M_KGE      = 00200000            
I_FLOATA1        000001C8            LUT_INFOUNIT     00000030            RAB$M_KGT      = 00400000            
I_FLOATA2        000001D0            LUT_LINK         00000000            RAB$M_LIM      = 00004000            
I_FLOATA3        000001D8            LUT_REALNAME     0000001E            RAB$M_LOA      = 00002000            
I_FLOATA4        000001E0            LUT_REF          00000008            RAB$M_LOC      = 00010000            
I_FLOATA5        000001E8            LUT_RSXNAME      00000010            RAB$M_MAS      = 00000020            
I_FLOATADR       000001B0            LUT_SIZE         00000036            RAB$M_NLK      = 00100000            
I_FLOATAST       000001A4            LUT_TYPE         00000016            RAB$M_NXR      = 00800000            
I_FLOATCSR       000001A8            PSL_CC         = 00000000            RAB$M_PMT      = 40000000            
I_FLOATERR       000001AC            PSL_CM         = 0000001F            RAB$M_PPF_IND  = 00004000            
I_FLOATTMP       000001B8            PSL_FPD        = 0000001B            RAB$M_PPF_RAT  = 00003FC0            
I_GARD           000000EC            PSL_FU         = 00000006            RAB$M_PTA      = 20000000            
I_HIGHEFN        0000016C            PSL_TBIT       = 00000004            RAB$M_RAH      = 00000200            
I_HIGHSIZE       000000F4            QIOV_FILES     = 00000000            RAB$M_RLK      = 00080000            
I_IMAGEVBN       000000F8            QIO_FLAGS        0000001A            RAB$M_RNE      = 01000000            
I_INISIZE        000000F0            QIO_IOSB         0000000E            RAB$M_RNF      = 08000000            
I_LENGTH         000001F0            QIO_LUT          00000016            RAB$M_TMO      = 02000000            
I_LOGNAME        000000E0            QIO_SECONDBLK    0000001C            RAB$M_TPT      = 00000002            
I_LUT            00000168            QIO_SIZE         00000020            RAB$M_UIF      = 00000010            
I_NLUN           00000164            RAB$B_BID        00000000            RAB$M_ULK      = 00040000            
I_PC             00000020            RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            
I_PPFINDEX       00000162            RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            
I_PROCNAME       0000014C            RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            
I_PS             00000024            RAB$B_MBC        00000037            RAB$V_ASY      = 00000000            
I_PWRAST         000001A0            RAB$B_MBF        00000036            RAB$V_BIO      = 0000000B            
I_R0             00000000            RAB$B_PSZ        00000034            RAB$V_CCO      = 0000001F            
I_R1             00000004            RAB$B_RAC        0000001E            RAB$V_CVT      = 0000001A            
I_R2             00000008            RAB$B_ROP1       00000005            RAB$V_EOF      = 00000008            
I_R3             0000000C            RAB$B_ROP2       00000006            RAB$V_FDL      = 00000006            
I_R4             00000010            RAB$B_ROP3       00000007            RAB$V_HSH      = 00000007            
I_R5             00000014            RAB$B_TMO        0000001F            RAB$V_KGE      = 00000015            
I_R6             00000018            RAB$C_BID      = 00000001            RAB$V_KGT      = 00000016            
I_RAD50NAME      00000148            RAB$C_BLN        00000044            RAB$V_LIM      = 0000000E            
I_RCVAST         0000019C            RAB$C_KEY      = 00000001            RAB$V_LOA      = 0000000D            
I_RCVMAIL        00000160            RAB$C_RFA      = 00000002            RAB$V_LOC      = 00000010            
I_RUNFLAGS       0000018C            RAB$C_SEQ      = 00000000            RAB$V_MAS      = 00000005            
I_SCRATCH        00000028            RAB$K_BLN        00000044            RAB$V_NLK      = 00000014            
I_SSTVEC         00000194            RAB$L_BKT        00000038            RAB$V_NXR      = 00000017            
I_SSTVECL        00000196            RAB$L_CTX        00000018            RAB$V_PMT      = 0000001E            
I_STATE          00000170            RAB$L_DCT        00000038            RAB$V_PPF_IND  = 0000000E            
I_TYPE           0000001C            RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            
I_UIC            0000013C            RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            
I_WAIT           00000178            RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            
I_WAITSAVE       00000180            RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            
LUTC_CR        = 00000005            RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            
LUTC_DISK      = 00000002            RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            
LUTC_LP        = 00000004            RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            
LUTC_RMS       = 00000000            RAB$L_STS        00000008            RAB$V_TPT      = 00000001            
RSXRMSDRV       - VAX/VMS RSX11M AME RMS DRIVER                  22-AUG-1978 05:14:49   VAX-11 MACRO X0.3-11               Page   7
SYMBOL TABLE                                                                                                                     (2)

RAB$V_UIF      = 00000004            SV_RCVAST        00000007            
RAB$V_ULK      = 00000012            SV_RESTORE       00000000            
RAB$V_WAT      = 00000011            SV_TRANSLATE     00000001            
RAB$V_WBH      = 0000000A            SV_WAIT          00000006            
RAB$W_ISI        00000002            SYS$GET          ********  GX   05   
RAB$W_RFA        00000010            SYS$PUT          ********  GX   05   
RAB$W_RFA4       00000014            W.BATT           00000006            
RAB$W_RSZ        00000022            W.BFPD           0000000C            
RAB$W_USZ        00000020            W.BHVR           00000004            
RMS$_EOF         ********   X   05   W.BLGH           00000010            
RMSIOERROR       0000009F R     05   W.BLPD           0000000E            
RMS_GET          00000039 R     05   W.BLVR           00000002            
RMS_PUT          00000063 R     05   W.BNPD           0000000D            
RMS_SET          000000CB R     05   W.BOFF           0000000A            
RSX$CHK_TI_INP   ********   X   05   W.BPCB           00000000            
RSX$CHK_TI_OUT   ********   X   05   W.BSIZ           00000008            
RSX$C_SUBSYSTEM= 00000006            
RSX$DLVRQIOAST   ********   X   05   
RSX$GL_CARRIAGE  ********   X   05   
RSX$G_RAB        ********   X   05   
RSX$IEIFC        ********   X   05   
RSX$RMS_DRV      00000000 RG    05   
RSX$_ACCVIO    = 00068044            
RSX$_BADLIBREF = 0006806C            
RSX$_BADSTACK  = 0006804C            
RSX$_BREAK     = 0006800C            
RSX$_EXITSTATUS= 00068640            
RSX$_EXTERNABRT= 0006805C            
RSX$_ILLINST   = 0006802C            
RSX$_IMAGETERM = 00068084            
RSX$_INSFDYNMEM= 00068054            
RSX$_IOT       = 00068014            
RSX$_LIBNOTFND = 00068074            
RSX$_LOADERROR = 0006807C            
RSX$_NOCOMM    = 00068094            
RSX$_NONRSXEMT = 0006801C            
RSX$_NOPMD     = 00068332            
RSX$_NOSUCHDEV = 00068322            
RSX$_NOTSKIMG  = 00068064            
RSX$_ODDADDR   = 00068034            
RSX$_PMD       = 0006832A            
RSX$_RCVMBXSIZ = 0000012C            
RSX$_REGMSG    = 0006808C            
RSX$_RESERVED  = 00068004            
RSX$_TBIT      = 0006803C            
RSX$_TRAP      = 00068024            
RSX$_VERIFYCMD = 00068648            
SS$_ACCVIO       ********   X   05   
SS$_CTRLERR      ********   X   05   
SS$_ILLIOFUNC    ********   X   05   
SS$_NORMAL       ********   X   05   
SV_ASTLVL        00000004            
SV_DCL           00000002            
SV_FLOATAST      00000009            
SV_NOAST         00000003            
SV_PENDWAIT      00000005            
SV_PWRAST        00000008            
RSXRMSDRV       - VAX/VMS RSX11M AME RMS DRIVER                  22-AUG-1978 05:14:49   VAX-11 MACRO X0.3-11               Page   8
PROGRAM SECTION SYNOPSIS                                                                                                         (2)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
..ABS.           00000042      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000044      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXDEF           000001F4      04     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXCODE          000000F6      05       PIC   USR   CON   REL   LCL   SHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
13482. BYTES LEFT IN FREE MEMORY POOL.
1206. BYTES OF RECLAIMED MEMORY.
OBJ$:RSXRMSDRV,LIS$:RSXRMSDRV/-SP=EXECML$/ML,LIB$:R/ML,SRC$:RSXRMSDRV
35 MLB DIR RDS - 637 GETS TO DEFINE 22 MACROS. 24 INTER. FILE WRITES. 
