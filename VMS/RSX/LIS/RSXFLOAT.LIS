RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      90  RSX$FLOAT - 11/70 FLOATING POINT EMULATION
   (2)     558  ERROR EXITS
   (3)     857  RSX$FLOAT_EXC - EXCEPTION HANDLER FOR EMULATION
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page   1
V06.0                                                                                                                            (1)

                                     0000     1 	.TITLE	RSXFLOAT - 11/70 FLOATING POINT INSTRUCTION EMULATION
                                     0000     2 	.IDENT	/V06.0/		;
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1978
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY:
                                     0000    25 ;
                                     0000    26 ;	VAX/VMS RSX11M AME.
                                     0000    27 ;
                                     0000    28 ; ABSTRACT:
                                     0000    29 ;
                                     0000    30 ;	11/70 FLOATING POINT INSTRUCTION EMULATION ROUTINES.
                                     0000    31 ;
                                     0000    32 ; AUTHOR:	D.P. RODGERS 17-JAN-1977
                                     0000    33 ;
                                     0000    34 ;--
                                     0000    35 ;
                                     0000    36 ; EXTERNAL SYMBOLS
                                     0000    37 ;
                                     0000    38  
                                     0000    39 	$PSLDEF				; DEFINE PROCESSOR STATUS FIELDS
                                     0000    40 	$RSXDEF				; DEFINE RSX SYMBOLS
                                     0000    41 	$SSDEF				; DEFINE SYSTEM STATUS VALUES
                                     0000    42  
                                     0000    43 ;
                                     0000    44 ; LOCAL SYMBOLS
                                     0000    45 ;
                                     0000    46 ; DEFINE SYMBOLS FOR SIMULATED FLOATING POINT STATUS REGISTERS
                                     0000    47 ;
                                     0000    48 ; ERROR CODES
                                     0000    49 ;
                                     0000    50  
                           00000002  0000    51 FEC_OPCODE=2
                           00000004  0000    52 FEC_DIVBYZERO=4
                           00000006  0000    53 FEC_INTCONV=6
                           00000008  0000    54 FEC_OVERFLOW=8
                           0000000A  0000    55 FEC_UNDERFLOW=10
                           0000000C  0000    56 FEC_UNDEFINED=12
                           0000000E  0000    57 FEC_MAINTTRAP=14
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page   2
V06.0                                                                                                                            (1)

                                     0000    58  
                                     0000    59 ;
                                     0000    60 ; STATUS BITS
                                     0000    61 ;
                                     0000    62  
                           0000000F  0000    63 FSRV_FER=15				; FLOATING ERROR SUMMARY
                           00008000  0000    64 FSRM_FER=1@FSRV_FER
                           0000000E  0000    65 FSRV_FID=14				; FLOATING INTERRUPT DISABLE
                           00004000  0000    66 FSRM_FID=1@FSRV_FID
                           0000000B  0000    67 FSRV_FIUV=11				; FLOATING INTERRUPT ON UNDEFINED VARIABLE
                           00000800  0000    68 FSRM_FIUV=1@FSRV_FIUV
                           0000000A  0000    69 FSRV_FIU=10				; FLOATING INTERRUPT ON UNDERFLOW
                           00000400  0000    70 FSRM_FIU=1@FSRV_FIU
                           00000009  0000    71 FSRV_FIV=9				; FLOATING INTERRUPT ON OVERFLOW
                           00000200  0000    72 FSRM_FIV=1@FSRV_FIV
                           00000008  0000    73 FSRV_FIC=8				; FLOATING INTERRUPT ON INTEGER CONVERSION
                           00000100  0000    74 FSRM_FIC=1@FSRV_FIC
                           00000007  0000    75 FSRV_FD=7				; FLOATING DOUBLE MODE
                           00000080  0000    76 FSRM_FD=1@FSRV_FD
                           00000006  0000    77 FSRV_FL=6				; FLOATING LONG INTEGER MODE
                           00000040  0000    78 FSRM_FL=1@FSRV_FL
                           00000005  0000    79 FSRV_FT=5				; FLOATING TRUNCATE MODE
                           00000020  0000    80 FSRM_FT=1@FSRV_FT
                           00000004  0000    81 FSRV_FMM=4				; FLOATING MAINTENANCE MODE
                           00000010  0000    82 FSRM_FMM=1@FSRV_FMM
                                     0000    83  
                                     0000    84 ;
                                     0000    85 ; SOURCE DESTINATION FLAG (0=SOURCE, 1 =DESTINATION)
                                     0000    86 ;
                                     0000    87  
                           0000001F  0000    88 V_OPRND=31				; 
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page   3
V06.0           RSX$FLOAT - 11/70 FLOATING POINT EMULATION                                                                       (1)

                                     0000    90 	.SBTTL	RSX$FLOAT - 11/70 FLOATING POINT EMULATION
                                     0000    91 ;++
                                     0000    92 ; RSX$FLOAT - 11/70 FLOATING POINT INSTRUCTION EMULATION
                                     0000    93 ;
                                     0000    94 ; FUNCTIONAL DESCRIPTION:
                                     0000    95 ;
                                     0000    96 ; THIS ROUTINE IS ENTERED AFTER A RESERVED INSTRUCTION TRAP OCCURS
                                     0000    97 ; AND THE PC POINTS AT AN INSTRUCTION WHOSE VALUE IS GEQU THAN OCTAL 170000.
                                     0000    98 ;
                                     0000    99 ; THE IMAGE IMPURE DATA BASE CONTAINS THE CONTEXT FOR THE PSEUDO FLOATING
                                     0000   100 ; PROCESSOR. 
                                     0000   101 ;
                                     0000   102 ;	I_FLOATCSR	-- FLOATING CSR
                                     0000   103 ;	I_FLOATERR	-- ERROR SUMMARY
                                     0000   104 ;	I_FLOATADR	-- ERROR PC
                                     0000   105 ;	I_FLOATA0/I_FLOATA5  -- 64 BIT REGISTERS
                                     0000   106 ;
                                     0000   107 ; INPUTS:
                                     0000   108 ;
                                     0000   109 ;	R0 = ADDRESS OF SAVED PC IN CONTROL REGION.
                                     0000   110 ;	R8 = FLOATING POINTING POINT INSTRUCTION.
                                     0000   111 ;	R10 = ADDRESS OF THE AME CONTEXT PAGE
                                     0000   112 ;
                                     0000   113 ; OUTPUTS:
                                     0000   114 ;
                                     0000   115 ;	R0 = 0, ERROR
                                     0000   116 ;		I_FLOATERR CONTAINS THE FLOATING ERROR TYPE
                                     0000   117 ;
                                     0000   118 ;	R0 # 0, COMPATIBILITY MODE ERROR VALUE SUCH AS "RSX$_ACCVIO"
                                     0000   119 ;		FOR ACCESS VIOLATION.
                                     0000   120 ;--
                                     0000   121  
                                 00000000   122 	.PSECT	RSXCODE,NOWRT,SHR,PIC,LONG
                                     0000   123 RSX$FLOAT::				; 11/70 FLOATING POINT EMULATION
       01B0 CA         20 AA     B0  0000   124 	MOVW	I_PC(R10),I_FLOATADR(R10); SAVE INSTRUCTION ADDRESS
         20 AA            02     C0  0006   125 	ADDL	#2,I_PC(R10)		; UPDATE PC
                                     000A   126 ;
                                     000A   127 ; PRIMARY FLOATING OPCODE DISPATCH
                                     000A   128 ;
                                     000A   129  
            58            18     9C  000A   130 	ROTL	#32-8,R8,R0		; SWAP OPCODE BYTES
                          50         000D       
            58   FFFFFFF8 8F     CB  000E   131 	BICL3	#^C7,R8,R9		; EXTRACT REGISTER NUMBER
                          59         0015       
            03            03     EF  0016   132 	EXTZV	#3,#3,R8,R2		; EXTRACT ADDRESS MODE
            52            58         0019       
            02            06     EF  001B   133 	EXTZV	#6,#2,R8,R1		; EXTRACT FAC NUMBER
            51            58         001E       
                     01AA CA     B8  0020   134 	BISPSW	I_FLOATCSR+2(R10)	; ESTABLISH CORRECT UNDERFLOW ENABLE
       01A8 CA            07     E0  0024   135 	BBS	#FSRV_FD,I_FLOATCSR(R10),10$ ; IF SET, FLOATING DOUBLE MODE
                          25         0029       
                                     002A   136 	CASE	R0,LIMIT=#-16,TYPE=B,<-
                                     002A   137 	STATUS_OP,-
                                     002A   138 	UNARY_OPF,-			; CLRF,TSTF,ABSF,NEGF
                                     002A   139 	MULF,-
                                     002A   140 	MODF,-
                                     002A   141 	ADDF,-
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page   4
V06.0           RSX$FLOAT - 11/70 FLOATING POINT EMULATION                                                                       (1)

                                     002A   142 	LDF,-
                                     002A   143 	SUBF,-
                                     002A   144 	CMPF,-
                                     002A   145 	STF,-
                                     002A   146 	DIVF,-
                                     002A   147 	STEXP,-
                                     002A   148 	STCFX,-				; STCFI OR STCFL
                                     002A   149 	STCFD,-
                                     002A   150 	LDEXP,-
                                     002A   151 	LDCXF,-				; LDCIF, OR LDCLF
                                     002A   152 	LDCDF>
                                     004F   153 10$:	CASE	R0,LIMIT=#-16,TYPE=B,<-
                                     004F   154 	STATUS_OP,-
                                     004F   155 	UNARY_OPD,-			; CLRD,TSTD,ABSD,NEGD
                                     004F   156 	MULD,-
                                     004F   157 	MODD,-
                                     004F   158 	ADDD,-
                                     004F   159 	LDD,-
                                     004F   160 	SUBD,-
                                     004F   161 	CMPD,-
                                     004F   162 	STD,-
                                     004F   163 	DIVD,-
                                     004F   164 	STEXP,-
                                     004F   165 	STCDX,-				; STCDI OR STCDL
                                     004F   166 	STCDF,-
                                     004F   167 	LDEXP,-
                                     004F   168 	LDCXD,-				; LDCID OR LDCLD
                                     004F   169 	LDCFD>
                          03B1   31  0074   170 	BRW	ILLEGAL_OP		; IMPOSSIBLE
                                     0077   171  
                                     0077   172 ;
                                     0077   173 ; SECONDARY DISPATCH FOR STATUS OPCODES
                                     0077   174 ;
                                     0077   175  
                                     0077   176 STATUS_OP:				;
                                     0077   177 	CASE	R8,TYPE=B,<-
                                     0077   178 	CFCC,-				; 170000
                                     0077   179 	SETF,-				; 170001
                                     0077   180 	SETI,-				; 170002
                                     0077   181 	ILLEGAL_OP,-			; 170003
                                     0077   182 	ILLEGAL_OP,-			; 170004
                                     0077   183 	ILLEGAL_OP,-			; 170005
                                     0077   184 	ILLEGAL_OP,-			; 170006
                                     0077   185 	ILLEGAL_OP,-			; 170007
                                     0077   186 	ILLEGAL_OP,-			; 170010
                                     0077   187 	SETD,-				; 170011
                                     0077   188 	SETL>				; 170012
            58   FFFFFFF8 8F     CB  0091   189 	BICL3	#^C7,R8,R9		; EXTRACT REGISTER NUMBER
                          59         0098       
            03            03     EF  0099   190 	EXTZV	#3,#3,R8,R2		; EXTRACT ADDRESS MODE
            52            58         009C       
            58         C0 8F     91  009E   191 	CMPB	#^O300,R8
                          5B     1B  00A2   192 	BLEQU	STST			; 1703DD
            58         80 8F     91  00A4   193 	CMPB	#^O200,R8
                          66     1B  00A8   194 	BLEQU	STFPS			; 1702DD
            58         40 8F     91  00AA   195 	CMPB	#^O100,R8
                          72     1B  00AE   196 	BLEQU	LDFPS			; 1701SS
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page   5
V06.0           RSX$FLOAT - 11/70 FLOATING POINT EMULATION                                                                       (1)

                          0375   31  00B0   197 	BRW	ILLEGAL_OP
                                     00B3   198  
                                     00B3   199 ;
                                     00B3   200 ; DISPATCH SINGLE PRECISION UNARY OPCODES
                                     00B3   201 ;
                                     00B3   202  
                                     00B3   203 UNARY_OPF:
                                     00B3   204 	CASE	R1,TYPE=B,<-
                                     00B3   205 	CLRF,-
                                     00B3   206 	TSTF,-
                                     00B3   207 	ABSF,-
                                     00B3   208 	NEGF>
                          0366   31  00BF   209 	BRW	ILLEGAL_OP		; IMPOSSIBLE
                                     00C2   210  
                                     00C2   211 ;
                                     00C2   212 ; DISPATCH DOUBLE PRECISION UNARY OPCODES
                                     00C2   213 ;
                                     00C2   214  
                                     00C2   215 UNARY_OPD:
                                     00C2   216 	CASE	R1,TYPE=B,<-
                                     00C2   217 	CLRD,-
                                     00C2   218 	TSTD,-
                                     00C2   219 	ABSD,-
                                     00C2   220 	NEGD>
                          0357   31  00CE   221 	BRW	ILLEGAL_OP		; IMPOSSIBLE
                                     00D1   222  
                                     00D1   223 ;
                                     00D1   224 ; EXECUTION FOR ZERO OPERAND STATUS OPCODES
                                     00D1   225 ;
                                     00D1   226  
                                     00D1   227 CFCC:					; COPY FLOATING CONDITION CODES
            00       01B4 CA     F0  00D1   228 	INSV	I_FCC(R10),#0,#4,I_PS(R10) ; INSERT CONDITION CODES
         24 AA            04         00D6       
                          71     11  00D9   229 	BRB	NORMAL			;
                                     00DB   230 SETF:					; SET FLOATING MODE
       01A8 CA       0080 8F     AA  00DB   231 	BICW	#FSRM_FD,I_FLOATCSR(R10) ;
                          68     11  00E2   232 	BRB	NORMAL			;
                                     00E4   233 SETI:					; SET INTEGER MODE
       01A8 CA       0040 8F     AA  00E4   234 	BICW	#FSRM_FL,I_FLOATCSR(R10) ;
                          5F     11  00EB   235 	BRB	NORMAL			;
                                     00ED   236 SETD:					; SET DOUBLE MODE
       01A8 CA       0080 8F     A8  00ED   237 	BISW	#FSRM_FD,I_FLOATCSR(R10) ;
                          56     11  00F4   238 	BRB	NORMAL			;
                                     00F6   239 SETL:					; SET LONG MODE
       01A8 CA       0040 8F     A8  00F6   240 	BISW	#FSRM_FL,I_FLOATCSR(R10) ;
                          4D     11  00FD   241 	BRB	NORMAL			;
                                     00FF   242  
                                     00FF   243 ;
                                     00FF   244 ; EXECUTION FOR SINGLE OPERAND STATUS OPCODES
                                     00FF   245 ;
                                     00FF   246  
                                     00FF   247 STST:					; STORE STATUS (FEC,FEA)
                          0373   30  00FF   248 	BSBW	DST4			;
            60       01AC CA     B0  0102   249 	MOVW	I_FLOATERR(R10),(R0) ;
         02 A0       01B0 CA     B0  0107   250 	MOVW	I_FLOATADR(R10),2(R0) ;
                          011F   31  010D   251 	BRW	STORE			;
                                     0110   252 STFPS:					; STORE FLOATING POINT STATUS (FSR)
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page   6
V06.0           RSX$FLOAT - 11/70 FLOATING POINT EMULATION                                                                       (1)

                          035B   30  0110   253 	BSBW	DST2			;
       01B4 CA       FFE0 8F     AB  0113   254 	BICW3	#^C<^X1F>,I_FCC(R10),(R0) ; ISOLATE CONDITION CODES
                          60         011A       
            60       01A8 CA     A8  011B   255 	BISW	I_FLOATCSR(R10),(R0) 	; MERGE FLOATING ENABLES
                          2A     11  0120   256 	BRB	NORMAL			;
                                     0122   257 LDFPS:					; LOAD FLOATING POINT STATUS (FSR)
                          0344   30  0122   258 	BSBW	SRC2			;
            60       FFE0 8F     AB  0125   259 	BICW3	#^C<^X1F>,(R0),I_FCC(R10) ; SET FLOATING CONDITION CODES
                     01B4 CA         012A       
            60       301F 8F     AB  012D   260 	BICW3	#^X301F,(R0),I_FLOATCSR(R10) ; SET FLOATING ENABLES
                     01A8 CA         0132       
                     01AA CA     B4  0135   261 	CLRW	I_FLOATCSR+2(R10)	; ASSUME UNDERFLOW INTS OFF
       01A8 CA            0A     E1  0139   262 	BBC	#FSRV_FIU,I_FLOATCSR(R10),NORMAL ; IF UNDERFLOW INT. ENABLED
                          0D         013E       
       01A8 CA            0E     E0  013F   263 	BBS	#FSRV_FID,I_FLOATCSR(R10),NORMAL ; AND INTS NOT DISABLED
                          07         0144       
       01AA CA       0040 8F     B0  0145   264 	MOVW	#1@PSL_FU,I_FLOATCSR+2(R10) ; SET UNDERFLOW TRAPS ON
                                     014C   265  
                                     014C   266 ;
                                     014C   267 ; TEST NEXT INSTRUCTION FOR FLOATING OPCODE
                                     014C   268 ;
                                     014C   269  
                                     014C   270 NORMAL:					; NORMAL EXIT
         20 BA       F000 8F     B1  014C   271 	CMPW	#^O170000,@I_PC(R10) 	; NEXT INST. FLOATING?
                          0C     1A  0152   272 	BGTRU	10$			; IF GTRU NO
         24 AA            04     E0  0154   273 	BBS	#PSL$V_TBIT,I_PS(R10),10$ ; IF SET, TBIT PENDING
                          07         0158       
            58         20 BA     3C  0159   274 	MOVZWL	@I_PC(R10),R8		; GET THE INSTRUCTION
                          FEA0   31  015D   275 	BRW	RSX$FLOAT		; CONTINUE EMULATION
                                     0160   276 ;
                                     0160   277 ; FLOATING POINT SEQUENCE DONE - RESTORE IMAGE EXECUTION
                                     0160   278 ;
            56         18 AA     D0  0160   279 10$:	MOVL	I_R6(R10),R6		; RELOAD THE STACK POINTER
                          FE99'  31  0164   280 	BRW	RSX$RESTORE		; RESTORE STATE
                                     0167   281 ;
                                     0167   282 ; EXECUTION FOR UNARY AND BINARY OPCODES
                                     0167   283 ;
                                     0167   284  
                                     0167   285 CLRF:					; CLEAR FLOATING
                          0355   30  0167   286 	BSBW	FDST4			;
                          60     D4  016A   287 	CLRF	(R0)			;
                          1B     11  016C   288 	BRB	STORECC			;
                                     016E   289 TSTF:					; TEST FLOATING
                          0352   30  016E   290 	BSBW	FSRC4			;
                          60     53  0171   291 	TSTF	(R0)			;
                          0083   31  0173   292 	BRW	SETCC			;
                                     0176   293 ABSF:					; ABSOLUTE FLOATING
                          0346   30  0176   294 	BSBW	FDST4			;
            60            60     50  0179   295 	MOVF	(R0),(R0)		;
            60       8000 8F     AA  017C   296 	BICW	#^X8000,(R0)		;
                          06     11  0181   297 	BRB	STORECC			;
                                     0183   298 NEGF:					; NEGATE FLOATING
                          0339   30  0183   299 	BSBW	FDST4			;
            60            60     52  0186   300 	MNEGF	(R0),(R0)		;
                                     0189   301  
                                     0189   302 ;
                                     0189   303 ; STORE AND SET CONDITION CODES
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page   7
V06.0           RSX$FLOAT - 11/70 FLOATING POINT EMULATION                                                                       (1)

                                     0189   304 ;
                                     0189   305  
                                     0189   306 STORECC:				;
                     01B4 CA     DC  0189   307 	MOVPSL	I_FCC(R10)		; SAVE CONDITION CODES
                          009F   31  018D   308 	BRW	STORE			;
                                     0190   309  
                                     0190   310 MULF:					; MULTIPLY FLOATING
                          0330   30  0190   311 	BSBW	FSRC4			;
       01A8 CA            05     E0  0193   312 	BBS	#FSRV_FT,I_FLOATCSR(R10),10$ ; IF SET, TRUNCATE RESULT
                          0A         0198       
            61            60     44  0199   313 	MULF	(R0),(R1)		;
                     01B4 CA     DC  019C   314 	MOVPSL	I_FCC(R10)		; SAVE CONDITION CODES
                          FFA9   31  01A0   315 	BRW	NORMAL			;
            54            60     56  01A3   316 10$:	CVTFD	(R0),R4			;
            52            61     56  01A6   317 	CVTFD	(R1),R2			;
            52            54     64  01A9   318 	MULD	R4,R2			;
            61            52     50  01AC   319 	MOVF	R2,(R1)			;
                          48     11  01AF   320 	BRB	SETCC			;
                                     01B1   321 MODF:
                          030F   30  01B1   322 	BSBW	FSRC4			;
            58            06     E0  01B4   323 	BBS	#6,R8,MODF_ODD_REG	; ONE RESULT IF ODD FAC
                          10         01B7       
            00            60     54  01B8   324 	EMODF	(R0),#0,(R1),8(R1),(R1)	;
         08 A1            61         01BB       
                          61         01BE       
         08 A1         08 A1     4E  01BF   325 	CVTLF	8(R1),8(R1)		;
                          61     53  01C4   326 	TSTF	(R1)			; CC SET ON FRACTION PART
                          31     11  01C6   327 	BRB	SETCC			;
                                     01C8   328 MODF_ODD_REG:
            00            60     54  01C8   329 	EMODF	(R0),#0,(R1),R4,(R1)
            54            61         01CB       
                          61         01CD       
                          29     11  01CE   330 	BRB	SETCC
                                     01D0   331 ADDF:
                          02F0   30  01D0   332 	BSBW	FSRC4
       01A8 CA            05     E0  01D3   333 	BBS	#FSRV_FT,I_FLOATCSR(R10),1$	; TRUNCATE?
                          0A         01D8       
            61            60     40  01D9   334 	ADDF	(R0),(R1)
                     01B4 CA     DC  01DC   335 	MOVPSL	I_FCC(R10)		; SAVE CONDITION CODES
                          FF69   31  01E0   336 	BRW	NORMAL			;
            54            60     56  01E3   337 1$:	CVTFD	(R0),R4
            52            61     56  01E6   338 	CVTFD	(R1),R2
            52            54     60  01E9   339 	ADDD	R4,R2
            61            52     50  01EC   340 	MOVF	R2,(R1)
                          08     11  01EF   341 	BRB	SETCC
                                     01F1   342 LDF:
                          02CF   30  01F1   343 	BSBW	FSRC4
            61            60     D0  01F4   344 	MOVL	(R0),(R1)		; LDF NOT DATA SENSITIVE
                          61     B5  01F7   345 	TSTW	(R1)
                                     01F9   346  
                                     01F9   347 ;
                                     01F9   348 ; SET CONDITION CODES
                                     01F9   349 ;
                                     01F9   350  
                                     01F9   351 SETCC:					;
                     01B4 CA     DC  01F9   352 	MOVPSL	I_FCC(R10)		; SAVE CONDITION CODES
                          FF4C   31  01FD   353 	BRW	NORMAL			;
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page   8
V06.0           RSX$FLOAT - 11/70 FLOATING POINT EMULATION                                                                       (1)

                                     0200   354 SUBF:
                          02C0   30  0200   355 	BSBW	FSRC4
       01A8 CA            05     E0  0203   356 	BBS	#FSRV_FT,I_FLOATCSR(R10),1$	; TRUNCATE?
                          0A         0208       
            61            60     42  0209   357 	SUBF	(R0),(R1)
                     01B4 CA     DC  020C   358 	MOVPSL	I_FCC(R10)		; SAVE CONDITION CODES
                          FF39   31  0210   359 	BRW	NORMAL			;
            54            60     56  0213   360 1$:	CVTFD	(R0),R4
            52            61     56  0216   361 	CVTFD	(R1),R2
            52            54     62  0219   362 	SUBD	R4,R2
            61            52     50  021C   363 	MOVF	R2,(R1)
                          D8     11  021F   364 	BRB	SETCC
                                     0221   365 CMPF:
                          029F   30  0221   366 	BSBW	FSRC4
            61            60     51  0224   367 	CMPF	(R0),(R1)
                          D0     11  0227   368 	BRB	SETCC
                                     0229   369 STF:
                          0293   30  0229   370 	BSBW	FDST4
            60            61     D0  022C   371 	MOVL	(R1),(R0)		; STF NOT DATA SENSITIVE
                                     022F   372  
                                     022F   373 ;
                                     022F   374 ; STORE VALUE
                                     022F   375 ;
                                     022F   376  
                                     022F   377 STORE:					;
            52            07     D1  022F   378 	CMPL	#7,R2			; RESULT IN TEMPORARY?
                          03     1E  0232   379 	BGEQU	10$			; IF GEQU NO
            62            60     B0  0234   380 	MOVW	(R0),(R2)		; MOVE RESULT TO WORD DESTINATION
                          FF12   31  0237   381 10$:	BRW	NORMAL			;
                                     023A   382  
                                     023A   383 DIVF:
                          0286   30  023A   384 	BSBW	FSRC4
       01A8 CA            05     E0  023D   385 	BBS	#FSRV_FT,I_FLOATCSR(R10),1$; TRUNCATE?
                          0A         0242       
            61            60     46  0243   386 	DIVF	(R0),(R1)
                     01B4 CA     DC  0246   387 	MOVPSL	I_FCC(R10)		; SAVE CONDITION CODES
                          FEFF   31  024A   388 	BRW	NORMAL			;
            54            60     56  024D   389 1$:	CVTFD	(R0),R4
            52            61     56  0250   390 	CVTFD	(R1),R2
            52            54     66  0253   391 	DIVD	R4,R2
            61            52     50  0256   392 	MOVF	R2,(R1)
                          9E     11  0259   393 	BRB	SETCC
                                     025B   394 STEXP:
                          0210   30  025B   395 	BSBW	DST2
            08            07     EF  025E   396 	EXTZV	#7,#8,(R1),R4
            54            61         0261       
            54       0080 8F     A3  0263   397 	SUBW3	#^O200,R4,(R0)
                          60         0268       
                     01B4 CA     DC  0269   398 	MOVPSL	I_FCC(R10)		; SAVE CONDITION CODES
                          FE61   31  026D   399 	BRW	CFCC			; COPY TO CM CC
                                     0270   400 STCFX:
       01A8 CA            06     E0  0270   401 	BBS	#FSRV_FL,I_FLOATCSR(R10),STCFL	; LONG MODE?
                          20         0275       
                                     0276   402 STCFI:
                          01F5   30  0276   403 	BSBW	DST2
            60            61     49  0279   404 	CVTFW	(R1),(R0)
                          07     1F  027C   405 	BCS	1$			; CONVERSION ERROR?
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page   9
V06.0           RSX$FLOAT - 11/70 FLOATING POINT EMULATION                                                                       (1)

                     01B4 CA     DC  027E   406 2$:	MOVPSL	I_FCC(R10)		; SAVE CONDITION CODES
                          FE4C   31  0282   407 	BRW	CFCC			; COPY TO CM CC
                          60     B4  0285   408 1$:	CLRW	(R0)
       01A8 CA            08     E1  0287   409 	BBC	#FSRV_FIC,I_FLOATCSR(R10),2$	; IF CONVERT INT ENABLED
                          F1         028C       
       01A8 CA            0E     E0  028D   410 	BBS	#FSRV_FID,I_FLOATCSR(R10),2$	; AND INTS NOT DISABLED
                          EB         0292       
                          0199   31  0293   411 	BRW	CONVERT_ERR			; SIGNAL ERROR
                                     0296   412 STCFL:
                          01DC   30  0296   413 	BSBW	DST4
            54            61     4A  0299   414 	CVTFL	(R1),R4
                          15     1F  029C   415 	BCS	1$			; CONVERSION ERROR?
            54            10     9C  029E   416 	ROTL	#16,R4,(R0)		; SWAP WORDS
                          60         02A1       
                          54     D5  02A2   417 	TSTL	R4
                     01B4 CA     DC  02A4   418 2$:	MOVPSL	I_FCC(R10)		; SAVE CONDITION CODES
            00       01B4 CA     F0  02A8   419 	INSV	I_FCC(R10),#0,#4,I_PS(R10)	; AND CM CC
         24 AA            04         02AD       
                          FF7C   31  02B0   420 	BRW	STORE
                          60     D4  02B3   421 1$:	CLRL	(R0)
       01A8 CA            08     E1  02B5   422 	BBC	#FSRV_FIC,I_FLOATCSR(R10),2$	; IF CONVERT INT ENABLED
                          E9         02BA       
       01A8 CA            0E     E0  02BB   423 	BBS	#FSRV_FID,I_FLOATCSR(R10),2$	; AND INTS NOT DISABLED
                          E3         02C0       
                          016B   31  02C1   424 	BRW	CONVERT_ERR			; SIGNAL ERROR
                                     02C4   425 STCFD:
                          01F1   30  02C4   426 	BSBW	FDST8
            60            61     56  02C7   427 	CVTFD	(R1),(R0)
                          FEBC   31  02CA   428 	BRW	STORECC
                                     02CD   429 LDEXP:
                          0199   30  02CD   430 	BSBW	SRC2
            60       0080 8F     A1  02D0   431 	ADDW3	#^O200,(R0),R4
                          54         02D5       
            07            54     F0  02D6   432 	INSV	R4,#7,#8,(R1)
            61            08         02D9       
                          61     53  02DB   433 	TSTF	(R1)
                          FF19   31  02DD   434 	BRW	SETCC
                                     02E0   435 LDCXF:
       01A8 CA            06     E0  02E0   436 	BBS	#FSRV_FL,I_FLOATCSR(R10),LDCLF
                          09         02E5       
                                     02E6   437 LDCIF:
                          0180   30  02E6   438 	BSBW	SRC2
            61            60     4D  02E9   439 	CVTWF	(R0),(R1)
                          FF0A   31  02EC   440 	BRW	SETCC
                                     02EF   441 LDCLF:
                          0187   30  02EF   442 	BSBW	SRC4
            60            10     9C  02F2   443 	ROTL	#16,(R0),R4		; SWAP WORDS
                          54         02F5       
            61            54     4E  02F6   444 	CVTLF	R4,(R1)
                          FEFD   31  02F9   445 	BRW	SETCC
                                     02FC   446 LDCDF:
                          01B4   30  02FC   447 	BSBW	FSRC8
       01A8 CA            05     E0  02FF   448 	BBS	#FSRV_FT,I_FLOATCSR(R10),1$	; TRUNCATE?
                          06         0304       
            61            60     76  0305   449 	CVTDF	(R0),(R1)
                          FEEE   31  0308   450 	BRW	SETCC
            61            60     50  030B   451 1$:	MOVF	(R0),(R1)
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page  10
V06.0           RSX$FLOAT - 11/70 FLOATING POINT EMULATION                                                                       (1)

                          FEE8   31  030E   452 	BRW	SETCC
                                     0311   453 CLRD:
                          01A4   30  0311   454 	BSBW	FDST8
                          60     7C  0314   455 	CLRD	(R0)
                          FE70   31  0316   456 	BRW	STORECC
                                     0319   457 TSTD:
                          0197   30  0319   458 	BSBW	FSRC8
                          60     73  031C   459 	TSTD	(R0)
                          FED8   31  031E   460 	BRW	SETCC
                                     0321   461 ABSD:
                          0194   30  0321   462 	BSBW	FDST8
            60            60     70  0324   463 	MOVD	(R0),(R0)
            60       8000 8F     AA  0327   464 	BICW	#^X8000,(R0)
                          FE5A   31  032C   465 	BRW	STORECC
                                     032F   466 NEGD:
                          0186   30  032F   467 	BSBW	FDST8
            60            60     72  0332   468 	MNEGD	(R0),(R0)
                          FE51   31  0335   469 	BRW	STORECC
                                     0338   470 MULD:
                          0178   30  0338   471 	BSBW	FSRC8
            61            60     64  033B   472 	MULD	(R0),(R1)
                          FEB8   31  033E   473 	BRW	SETCC
                                     0341   474 MODD:
                          016F   30  0341   475 	BSBW	FSRC8
            58            06     E0  0344   476 	BBS	#6,R8,MODD_ODD_REG	; ONE RESULT IF ODD FAC
                          11         0347       
            00            60     74  0348   477 	EMODD	(R0),#0,(R1),8(R1),(R1)
         08 A1            61         034B       
                          61         034E       
         08 A1         08 A1     6E  034F   478 	CVTLD	8(R1),8(R1)
                          61     73  0354   479 	TSTD	(R1)			; CC SET ON FRACTION
                          FEA0   31  0356   480 	BRW	SETCC
                                     0359   481 MODD_ODD_REG:
            00            60     74  0359   482 	EMODD	(R0),#0,(R1),R4,(R1)
            54            61         035C       
                          61         035E       
                          FE97   31  035F   483 	BRW	SETCC
                                     0362   484 ADDD:
                          014E   30  0362   485 	BSBW	FSRC8
            61            60     60  0365   486 	ADDD	(R0),(R1)
                          FE8E   31  0368   487 	BRW	SETCC
                                     036B   488 LDD:
                          0145   30  036B   489 	BSBW	FSRC8
            61            60     7D  036E   490 	MOVQ	(R0),(R1)		; LDD NOT DATA SENSITIVE
                          61     B5  0371   491 	TSTW	(R1)
                          FE83   31  0373   492 	BRW	SETCC
                                     0376   493 SUBD:
                          013A   30  0376   494 	BSBW	FSRC8
            61            60     62  0379   495 	SUBD	(R0),(R1)
                          FE7A   31  037C   496 	BRW	SETCC
                                     037F   497 CMPD:
                          0131   30  037F   498 	BSBW	FSRC8
            61            60     71  0382   499 	CMPD	(R0),(R1)
                          FE71   31  0385   500 	BRW	SETCC
                                     0388   501 STD:
                          012D   30  0388   502 	BSBW	FDST8
            60            61     7D  038B   503 	MOVQ	(R1),(R0)		; STD NOT DATA SENSITIVE
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page  11
V06.0           RSX$FLOAT - 11/70 FLOATING POINT EMULATION                                                                       (1)

                          FE9E   31  038E   504 	BRW	STORE
                                     0391   505 DIVD:
                          011F   30  0391   506 	BSBW	FSRC8
            61            60     66  0394   507 	DIVD	(R0),(R1)
                          FE5F   31  0397   508 	BRW	SETCC
                                     039A   509 STCDX:
       01A8 CA            06     E0  039A   510 	BBS	#FSRV_FL,I_FLOATCSR(R10),STCDL
                          20         039F       
                                     03A0   511 STCDI:
                          00CB   30  03A0   512 	BSBW	DST2
            60            61     69  03A3   513 	CVTDW	(R1),(R0)
                          07     1F  03A6   514 	BCS	1$			; CONVERSION ERROR?
                     01B4 CA     DC  03A8   515 2$:	MOVPSL	I_FCC(R10)		; SAVE CONDITION CODES
                          FD22   31  03AC   516 	BRW	CFCC			; COPY TO CMCC
                          60     B4  03AF   517 1$:	CLRW	(R0)
       01A8 CA            08     E1  03B1   518 	BBC	#FSRV_FIC,I_FLOATCSR(R10),2$	; IF CONVERT INT ENABLED
                          F1         03B6       
       01A8 CA            0E     E0  03B7   519 	BBS	#FSRV_FID,I_FLOATCSR(R10),2$	; AND INTS NOT DISABLED
                          EB         03BC       
                          006F   31  03BD   520 	BRW	CONVERT_ERR			; SIGNAL ERROR
                                     03C0   521 STCDL:
                          00B2   30  03C0   522 	BSBW	DST4
            54            61     6A  03C3   523 	CVTDL	(R1),R4
                          15     1F  03C6   524 	BCS	1$			; CONVERSION ERROR?
            54            10     9C  03C8   525 	ROTL	#16,R4,(R0)		; SWAP WORDS
                          60         03CB       
                          54     D5  03CC   526 	TSTL	R4
                     01B4 CA     DC  03CE   527 2$:	MOVPSL	I_FCC(R10)		; SAVE CONDITION CODES
            00       01B4 CA     F0  03D2   528 	INSV	I_FCC(R10),#0,#4,I_PS(R10) ; INSERT IN REAL PSL
         24 AA            04         03D7       
                          FE52   31  03DA   529 	BRW	STORE
                          60     D4  03DD   530 1$:	CLRL	(R0)
       01A8 CA            08     E1  03DF   531 	BBC	#FSRV_FIC,I_FLOATCSR(R10),2$	; IF CONVERT INT ENABLED
                          E9         03E4       
       01A8 CA            0E     E0  03E5   532 	BBS	#FSRV_FID,I_FLOATCSR(R10),2$	; AND INTS NOT DISABLED
                          E3         03EA       
                          0041   31  03EB   533 	BRW	CONVERT_ERR			; SIGNAL ERROR
                                     03EE   534 ;
                                     03EE   535 STCDF:
                          00CE   30  03EE   536 	BSBW	FDST4
       01A8 CA            05     E0  03F1   537 	BBS	#FSRV_FT,I_FLOATCSR(R10),1$	; TRUNCATE?
                          06         03F6       
            60            61     76  03F7   538 	CVTDF	(R1),(R0)
                          FD8C   31  03FA   539 	BRW	STORECC
            60            61     50  03FD   540 1$:	MOVF	(R1),(R0)
                          FD86   31  0400   541 	BRW	STORECC
                                     0403   542 LDCXD:
       01A8 CA            06     E0  0403   543 	BBS	#FSRV_FL,I_FLOATCSR(R10),LDCLD
                          09         0408       
                                     0409   544 LDCID:
                          005D   30  0409   545 	BSBW	SRC2
            61            60     6D  040C   546 	CVTWD	(R0),(R1)
                          FDE7   31  040F   547 	BRW	SETCC
                                     0412   548 LDCLD:
                          0064   30  0412   549 	BSBW	SRC4
            60            10     9C  0415   550 	ROTL	#16,(R0),R4		; SWAP WORDS
                          54         0418       
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page  12
V06.0           RSX$FLOAT - 11/70 FLOATING POINT EMULATION                                                                       (1)

            61            54     6E  0419   551 	CVTLD	R4,(R1)
                          FDDA   31  041C   552 	BRW	SETCC
                                     041F   553 LDCFD:
                          00A1   30  041F   554 	BSBW	FSRC4
            61            60     56  0422   555 	CVTFD	(R0),(R1)
                          FDD1   31  0425   556 	BRW	SETCC
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page  13
V06.0           ERROR EXITS                                                                                                      (2)

                                     0428   558 	.SBTTL	ERROR EXITS
                                     0428   559 	.ENABL	LSB
                                     0428   560 ;
                                     0428   561 ; ILLEGAL FLOATING POINT OPCODE
                                     0428   562 ;
                                     0428   563 ILLEGAL_OP:
       01AC CA            02     D0  0428   564 	MOVL	#FEC_OPCODE,I_FLOATERR(R10)	; SET ERROR STATUS
                          0C     11  042D   565 	BRB	10$			; CONTINUE
                                     042F   566 ;
                                     042F   567 ; CONVERSION ERROR
                                     042F   568 ;
                                     042F   569 CONVERT_ERR:
       01A8 CA       8000 8F     A8  042F   570 	BISW	#FSRM_FER,I_FLOATCSR(R10)	; SET ERROR SUMMARY BIT
       01AC CA            06     D0  0436   571 	MOVL	#FEC_INTCONV,I_FLOATERR(R10)
                          50     D4  043B   572 10$:	CLRL	R0			; SET FLOATING ERROR 
                                     043D   573 ;
                                     043D   574 ; ABNORMAL RETURN
                                     043D   575 ;
                                     043D   576 BAIL_OUT:				; RETURN TO AME EXCEPTION ROUTINE ON ERROR
            56         18 AA     D0  043D   577 	MOVL	I_R6(R10),R6		; LOAD IMAGE STACK POINTER
            04            03     EF  0441   578 	EXTZV	#3,#4,R0,I_TYPE(R10)	; GET ERROR TYPE
         1C AA            50         0444       
                          18     12  0447   579 	BNEQ	50$			; IF NEQ THEN ACCESS VIOLATION
       0170 CA            09     E1  0449   580 	BBC	#SV_FLOATAST,I_STATE(R10),40$; BR IF NO FLOATING AST ENABLED
                          0F         044E       
            50       01A4 CA     D0  044F   581 	MOVL	I_FLOATAST(R10),R0	; ADDRESS AST CONTROL BLOCK
       00CC DA            60     0E  0454   582 	INSQUE	(R0),@I_ASTQUEUE+4(R10)	; INSERT ON LIST
       0170 CA            20     88  0459   583 	BISB	#1@SV_PENDWAIT,I_STATE(R10); SET AST QUEUED
                          FB9F'  31  045E   584 40$:	BRW	RSX$RESTORE		; REENTER IMAGE
                          5B     D4  0461   585 50$:	CLRL	R11			; SET UP PARAMS
            50            08     9A  0463   586 	MOVZBL	#8,R0			; SET MEMORY VIOLATION CODE
                          FB97'  31  0466   587 	BRW	RSX$TRAP		; TREAT AS TRAP
                                     0469   588 	.DSABL	LSB
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page  14
V06.0           ERROR EXITS                                                                                                      (3)

                                     0469   590 ;
                                     0469   591 ; EVALUATION ROUTINES FOR SRC,DST,FSRC,FDST
                                     0469   592 ;
                                     0469   593 ; CALL:	BSBX	ENTRY POINT INDICATES TYPE AND CONTEXT
                                     0469   594 ;
                                     0469   595 ; INPUTS:	R1 - FLOATING ACCUMULATOR NUMBER
                                     0469   596 ;		R2 - MODE
                                     0469   597 ;		R9 - REGISTER NUMBER
                                     0469   598 ;
                                     0469   599 ; OUTPUTS:	R0 - SOURCE OR DESTINATION ADDRESS
                                     0469   600 ;		R1 - FLOATING ACCUMULATOR ADDRESS
                                     0469   601 ;		R2 - ADDRESS OF 16-BIT DESTINATION
                                     0469   602 ;		R3 - CLOBBERED
                                     0469   603 ;		R4 - CLOBBERED
                                     0469   604 ;
                                     0469   605  
                                     0469   606 	.ENABL	LSB
                                     0469   607 SRC2:					;
            54            02     D0  0469   608 	MOVL	#2,R4			;
                          0E     11  046C   609 	BRB	DISPSRC			;
                                     046E   610 DST2:					;
            54            02     D0  046E   611 	MOVL	#2,R4			;
            59            1F     E3  0471   612 	BBCS	#V_OPRND,R9,DISPSRC	; SET DESTINATION FLAG
                          07         0474       
                                     0475   613 DST4:					;
            59            1F     E2  0475   614 	BBSS	#V_OPRND,R9,10$		; SET DESTINATION FLAG
                          00         0478       
                                     0479   615 SRC4:					;
            54            04     D0  0479   616 10$:	MOVL	#4,R4			;
                                     047C   617 DISPSRC:				;
            51       01C0 CA41   7E  047C   618 	MOVAQ	I_FLOATA0(R10)[R1],R1 ; FAC ADDRESS
            59            07     91  0482   619 	CMPB	#7,R9			; REGISTER IS PC?
                          16     13  0485   620 	BEQL	20$			; IF EQL YES
                                     0487   621 	CASE	R2,TYPE=B,<-
                                     0487   622 	MODE0X,-
                                     0487   623 	MODE1X,-
                                     0487   624 	MODE2X,-
                                     0487   625 	MODE3X,-
                                     0487   626 	MODE4X,-
                                     0487   627 	MODE5X,-
                                     0487   628 	MODE6X,-
                                     0487   629 	MODE7X>
                          5E     11  049B   630 	BRB	ILLEGAL			;
                                     049D   631 20$:	CASE	R2,TYPE=B,<-		;
                                     049D   632 	MODE07,-
                                     049D   633 	MODE17,-
                                     049D   634 	MODE27,-
                                     049D   635 	MODE37,-
                                     049D   636 	MODE47,-
                                     049D   637 	MODE57,-
                                     049D   638 	MODE67,-
                                     049D   639 	MODE77>
                          48     11  04B1   640 	BRB	ILLEGAL			;
                                     04B3   641 	.DSABL	LSB
                                     04B3   642  
                                     04B3   643 	.ENABL	LSB
                                     04B3   644 FSRC8:					;
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page  15
V06.0           ERROR EXITS                                                                                                      (3)

            54            08     D0  04B3   645 	MOVL	#8,R4			;
                          0E     11  04B6   646 	BRB	DISPFSRC		;
                                     04B8   647 FDST8:					;
            54            08     D0  04B8   648 	MOVL	#8,R4			;
            59            1F     E3  04BB   649 	BBCS	#V_OPRND,R9,DISPFSRC	; SET DESTINATION FLAG
                          07         04BE       
                                     04BF   650 FDST4:					;
            59            1F     E2  04BF   651 	BBSS	#V_OPRND,R9,10$		; SET DESTINATION FLAG
                          00         04C2       
                                     04C3   652 FSRC4:					;
            54            04     D0  04C3   653 10$:	MOVL	#4,R4			;
                                     04C6   654 DISPFSRC:				;
            51       01C0 CA41   7E  04C6   655 	MOVAQ	I_FLOATA0(R10)[R1],R1 ; FAC ADDRESS
            59            07     91  04CC   656 	CMPB	#7,R9			; REGISTER IS PC?
                          16     13  04CF   657 	BEQL	20$			; IF EQL YES
                                     04D1   658 	CASE	R2,TYPE=B,<-
                                     04D1   659 	FMODE0X,-
                                     04D1   660 	MODE1X,-
                                     04D1   661 	MODE2X,-
                                     04D1   662 	MODE3X,-
                                     04D1   663 	MODE4X,-
                                     04D1   664 	MODE5X,-
                                     04D1   665 	MODE6X,-
                                     04D1   666 	MODE7X>
                          14     11  04E5   667 	BRB	ILLEGAL
                                     04E7   668 20$:	CASE	R2,TYPE=B,<-		;
                                     04E7   669 	ILLEGAL_OP,-
                                     04E7   670 	MODE17,-
                                     04E7   671 	MODE27,-
                                     04E7   672 	MODE37,-
                                     04E7   673 	MODE47,-
                                     04E7   674 	MODE57,-
                                     04E7   675 	MODE67,-
                                     04E7   676 	MODE77>
                                     04FB   677 ILLEGAL:				;
                          FF2A   31  04FB   678 	BRW	ILLEGAL_OP		; IMPOSSIBLE
                                     04FE   679 	.DSABL	LSB
                                     04FE   680  
                                     04FE   681 ;
                                     04FE   682 ; REGISTER
                                     04FE   683 ;
                                     04FE   684  
                                     04FE   685 MODE0X:					;
                                     04FE   686 MODE07:					;
            50            6A49   DE  04FE   687 	MOVAL	I_R0(R10)[R9],R0	; ADDRESS REGISTER
            54            01     E0  0502   688 SHORT:	BBS	#1,R4,10$		; IF SET, WORD CONTEXT
                          0E         0505       
            52            50     D0  0506   689 	MOVL	R0,R2			; SAVE 16-BIT SRC/DST
            50       01B8 CA     7E  0509   690 	MOVAQ	I_FLOATTMP(R10),R0	; USE TEMPORARY
            60            62     3C  050E   691 	MOVZWL	(R2),(R0)		; COPY OPERAND
                       04 A0     D4  0511   692 	CLRL	4(R0)			; ZERO EXTEND
                                 05  0514   693 10$:	RSB				;
                                     0515   694  
                                     0515   695 ;
                                     0515   696 ; FLOATING REGISTER
                                     0515   697 ;
                                     0515   698  
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page  16
V06.0           ERROR EXITS                                                                                                      (3)

                                     0515   699 FMODE0X:				;
            59            06     91  0515   700 	CMPB	#6,R9			; RESERVED REGISTER?
                          E1     13  0518   701 	BEQL	ILLEGAL			; IF EQL YES
            50       01C0 CA49   7E  051A   702 	MOVAQ	I_FLOATA0(R10)[R9],R0 ; ADDRESS REGISTER
                                 05  0520   703 	RSB				;
                                     0521   704  
                                     0521   705 ;
                                     0521   706 ; REGISTER DEFERRED
                                     0521   707 ;
                                     0521   708  
                                     0521   709 MODE1X:					;
            50            6A49   D0  0521   710 	MOVL	I_R0(R10)[R9],R0	; GET REGISTER
            62            50     E8  0525   711 	BLBS	R0,ODD			; TRAP ODD ADDRESS
                                 05  0528   712 	RSB				;
                                     0529   713  
                                     0529   714 ;
                                     0529   715 ; REGISTER DEFERRED (PC)
                                     0529   716 ;
                                     0529   717  
                                     0529   718 MODE17:					;
            50         20 AA     D0  0529   719 	MOVL	I_PC(R10),R0		; GET SAVED PC
                          D3     11  052D   720 	BRB	SHORT			;
                                     052F   721  
                                     052F   722 ;
                                     052F   723 ; AUTO-INCREMENT
                                     052F   724 ;
                                     052F   725  
                                     052F   726 MODE2X:					;
            53            6A49   DE  052F   727 	MOVAL	I_R0(R10)[R9],R3	; GET REGISTER ADDRESS
            50            63     D0  0533   728 	MOVL	(R3),R0			; GET REGISTER CONTENTS
            63            54     A0  0536   729 	ADDW	R4,(R3)			; UPDATE REGISTER
            4E            50     E8  0539   730 	BLBS	R0,ODD			; TRAP ODD ADDRESS
                                 05  053C   731 	RSB				;
                                     053D   732  
                                     053D   733 ;
                                     053D   734 ; IMMEDIATE (AUTO-INCREMENT PC)
                                     053D   735 ;
                                     053D   736  
                                     053D   737 MODE27:					;
            50         20 AA     D0  053D   738 	MOVL	I_PC(R10),R0		; GET SAVED PC
         20 AA            02     A0  0541   739 	ADDW	#2,I_PC(R10)		; UPDATE PC
                          BB     11  0545   740 	BRB	SHORT			;
                                     0547   741  
                                     0547   742 ;
                                     0547   743 ; AUTO-INCREMENT DEFERRED
                                     0547   744 ;
                                     0547   745  
                                     0547   746 MODE3X:					;
            53            6A49   DE  0547   747 	MOVAL	I_R0(R10)[R9],R3	; GET REGISTER ADDRESS
            50            63     D0  054B   748 	MOVL	(R3),R0			; GET REGISTER CONTENTS
            63            02     A0  054E   749 	ADDW	#2,(R3)			; UPDATE REGISTER
            0A            50     E9  0551   750 	BLBC	R0,INDIRECT		; IF LBC NOT ODD ADDRESS
                          34     11  0554   751 	BRB	ODD			;
                                     0556   752  
                                     0556   753 ;
                                     0556   754 ; ABSOLUTE (AUTO-INCREMENT DEFERRED PC)
                                     0556   755 ;
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page  17
V06.0           ERROR EXITS                                                                                                      (3)

                                     0556   756  
                                     0556   757 MODE37:					;
            50         20 AA     D0  0556   758 	MOVL	I_PC(R10),R0		; GET SAVED PC
         20 AA            02     A0  055A   759 	ADDW	#2,I_PC(R10)		; UPDATE PC
                                     055E   760 INDIRECT:				;
            50            60     3C  055E   761 	MOVZWL	(R0),R0			; GET INDIRECT ADDRESS
            26            50     E8  0561   762 	BLBS	R0,ODD			; TRAP ODD ADDRESS
                                 05  0564   763 	RSB				;
                                     0565   764  
                                     0565   765 ;
                                     0565   766 ; AUTO-DECREMENT
                                     0565   767 ;
                                     0565   768  
                                     0565   769 MODE4X:					;
            53            6A49   DE  0565   770 	MOVAL	I_R0(R10)[R9],R3	; GET REGISTER ADDRESS
            63            54     A2  0569   771 	SUBW	R4,(R3)			; UPDATE REGISTER
            50            63     D0  056C   772 	MOVL	(R3),R0			; GET REGISTER CONTENTS
            64            50     E8  056F   773 	BLBS	R0,ODD_ADDR		; TRAP ODD ADDRESS
                                 05  0572   774 	RSB				;
                                     0573   775  
                                     0573   776 ;
                                     0573   777 ; AUTO-DECREMENT (PC)
                                     0573   778 ;
                                     0573   779  
                                     0573   780 MODE47:					;
         20 AA            02     A2  0573   781 	SUBW	#2,I_PC(R10)		; UPDATE PC
            50         20 AA     D0  0577   782 	MOVL	I_PC(R10),R0		; GET UPDATED PC
                          85     11  057B   783 	BRB	SHORT			;
                                     057D   784  
                                     057D   785 ;
                                     057D   786 ; AUTO-DECREMENT DEFERRED
                                     057D   787 ;
                                     057D   788  
                                     057D   789 MODE5X:					;
            53            6A49   DE  057D   790 	MOVAL	I_R0(R10)[R9],R3	; GET REGISTER ADDRESS
            63            02     A2  0581   791 	SUBW	#2,(R3)			; UPDATE REGISTER
            50            63     D0  0584   792 	MOVL	(R3),R0			; GET REGISTER CONTENTS
            D4            50     E9  0587   793 	BLBC	R0,INDIRECT		; IF LBC NOT ODD ADDRESS
                          4A     11  058A   794 ODD:	BRB	ODD_ADDR		;
                                     058C   795  
                                     058C   796 ;
                                     058C   797 ; AUTO-DECREMENT DEFERRED (PC)
                                     058C   798 ;
                                     058C   799  
                                     058C   800 MODE57:					;
         20 AA            02     A2  058C   801 	SUBW	#2,I_PC(R10)		; UPDATE PC
            50         20 AA     D0  0590   802 	MOVL	I_PC(R10),R0		; GET UPDATED PC
                          C8     11  0594   803 	BRB	INDIRECT		;
                                     0596   804  
                                     0596   805 ;
                                     0596   806 ; INDEX
                                     0596   807 ;
                                     0596   808  
                                     0596   809 MODE6X:					;
            50            6A49   D0  0596   810 	MOVL	I_R0(R10)[R9],R0	; GET REGISTER
            50         20 BA     A0  059A   811 	ADDW	@I_PC(R10),R0		; ADD DISPLACEMENT
         20 AA            02     A0  059E   812 	ADDW	#2,I_PC(R10)		; UPDATE PC
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page  18
V06.0           ERROR EXITS                                                                                                      (3)

            31            50     E8  05A2   813 	BLBS	R0,ODD_ADDR		; TRAP ODD ADDRESS
                                 05  05A5   814 	RSB				;
                                     05A6   815  
                                     05A6   816 ;
                                     05A6   817 ; RELATIVE
                                     05A6   818 ;
                                     05A6   819  
                                     05A6   820 MODE67:					;
            50         20 BA     3C  05A6   821 	MOVZWL	@I_PC(R10),R0		; GET DISPLACEMENT
         20 AA            02     A0  05AA   822 	ADDW	#2,I_PC(R10)		; UPDATE PC
            50         20 AA     A0  05AE   823 	ADDW	I_PC(R10),R0		; ADD REGISTER
            21            50     E8  05B2   824 	BLBS	R0,ODD_ADDR		; TRAP ODD ADDRESS
                                 05  05B5   825 	RSB				;
                                     05B6   826  
                                     05B6   827 ;
                                     05B6   828 ; INDEX DEFERRED
                                     05B6   829 ;
                                     05B6   830  
                                     05B6   831 MODE7X:					;
            50            6A49   D0  05B6   832 	MOVL	I_R0(R10)[R9],R0	; GET REGISTER
            50         20 BA     A0  05BA   833 	ADDW	@I_PC(R10),R0		; ADD DISPLACEMENT
         20 AA            02     A0  05BE   834 	ADDW	#2,I_PC(R10)		; UPDATE PC
            99            50     E9  05C2   835 	BLBC	R0,INDIRECT		; IF LBC NOT ODD ADDRESS
                          0F     11  05C5   836 	BRB	ODD_ADDR		;
                                     05C7   837  
                                     05C7   838 ;
                                     05C7   839 ; RELATIVE DEFERRED
                                     05C7   840 ;
                                     05C7   841  
                                     05C7   842 MODE77:					;
            50         20 BA     3C  05C7   843 	MOVZWL	@I_PC(R10),R0		; GET DISPLACEMENT
         20 AA            02     A0  05CB   844 	ADDW	#2,I_PC(R10)		; UPDATE PC
            50         20 AA     A0  05CF   845 	ADDW	I_PC(R10),R0		; ADD REGISTER
            88            50     E9  05D3   846 	BLBC	R0,INDIRECT		; IF LBC NOT ODD ADDRESS
                                     05D6   847  
                                     05D6   848 ;
                                     05D6   849 ; ODD ADDRESS ERROR
                                     05D6   850 ;
                                     05D6   851  
                                     05D6   852 ODD_ADDR:				; RETURN ODD ADDRESS ERROR
            50   00068034 8F     D0  05D6   853 	MOVL	#RSX$_ODDADDR,R0	; SET STATUS
                          FE5D   31  05DD   854 	BRW	BAIL_OUT		; EXIT
                                     05E0   855 RSX$FLOAT_END::				;
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page  19
V06.0           RSX$FLOAT_EXC - EXCEPTION HANDLER FOR EMULATION                                                                  (3)

                                     05E0   857 	.SBTTL RSX$FLOAT_EXC - EXCEPTION HANDLER FOR EMULATION
                                     05E0   858 ;++
                                     05E0   859 ; RSX$FLOAT_EXC - EXCEPTION HANDLER FOR 11/70 FLOATING POINT EMULATION
                                     05E0   860 ;
                                     05E0   861 ; FUNCTIONAL DESCRIPTION:
                                     05E0   862 ;
                                     05E0   863 ; THIS ROUTINE IS ENTERED ON EXCEPTIONS DURING FLOATING POINT EMULATION.
                                     05E0   864 ; THE APPROPRIATE ERROR VALUE IS SET IN I_FLOATERR AND THE EXCEPTION
                                     05E0   865 ; STACK FRAME IS MODIFIED TO RETURN VIA THE BAIL_OUT EXIT ABOVE.
                                     05E0   866 ;
                                     05E0   867 ; INPUTS:
                                     05E0   868 ;
                                     05E0   869 ;	R11 = CURRENT IMAGE PC
                                     05E0   870 ;	AP = ADDRESS OF THE EXCEPTION ARGUMENT LIST
                                     05E0   871 ;
                                     05E0   872 ;
                                     05E0   873 ; OUTPUTS:
                                     05E0   874 ;
                                     05E0   875 ;	NONE. RETURN IS ALWAYS TO "BAIL_OUT"
                                     05E0   876 ;--
                                     05E0   877  
                                     05E0   878 RSX$FLOAT_EXC::
                          50     D4  05E0   879 	CLRL	R0			; ASSUME FLOATING EXCEPTION
            51         04 AC     D0  05E2   880 	MOVL	4(AP),R1		; GET EXCEPTION ARGUMENT LIST
         04 A1            0C     B1  05E6   881 	CMPW	#SS$_ACCVIO,AP_NAME(R1)	; ACCESS VIOLATION?
                          1B     13  05EA   882 	BEQL	80$			; IF EQL YES
         04 A1       0454 8F     B1  05EC   883 	CMPW	#SS$_ROPRAND,AP_NAME(R1); RESERVED OPERAND?
                          5E     13  05F2   884 	BEQL	RSVD_OPERAND		; IF EQL YES
                                     05F4   885 ;
                                     05F4   886 ; PROCESS FLOATING EXCEPTION
                                     05F4   887 ;
                                     05F4   888 	CASE	AP_NAME(R1),LIMIT=#SS$_FLTOVF,<-
                                     05F4   889 	FLOAT_OFLO,-
                                     05F4   890 	FLOAT_DIV_ZERO,-
                                     05F4   891 	FLOAT_UFLO>
                                     0601   892 ;
                                     0601   893 ; AME ERROR IN FLOATING EMULATION
                                     0601   894 ;
            50       0918 8F     3C  0601   895 70$:	MOVZWL	#SS$_RESIGNAL,R0	; RESIGNAL EXCEPTION
                                 04  0606   896 	RET				; RETURN
                                     0607   897 ;
                                     0607   898 ; ACCESS VIOLATION
                                     0607   899 ;
                       0E A1     B5  0607   900 80$:	TSTW	14(R1)			; WAS THE ACCESSED ADDRESS IN 0 TO 65K?
                          F5     12  060A   901 	BNEQ	70$			; IF NEQ THEN REAL ERROR
            50   00068044 8F     D0  060C   902 	MOVL	#RSX$_ACCVIO,R0		; SET ERROR CODE
                                     0613   903 ;
                                     0613   904 ; EXIT EXCEPTION
                                     0613   905 ;
                                     0613   906 EXIT_EXCEPTION:
         10 AD       FE26 CF     9E  0613   907 	MOVAB	W^BAIL_OUT,FP_PC(FP)	; CHANGE RETURN ADDRESS
         04 AD            1B     E5  0619   908 	BBCC	#PSL_FPD,FP_PSL(FP),100$; CLEAR FPD
                          00         061D       
                                 04  061E   909 100$:	RET				;
                                     061F   910 ;
                                     061F   911 ; PROCESS FLOATING OVERFLOW
                                     061F   912 ;
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page  20
V06.0           RSX$FLOAT_EXC - EXCEPTION HANDLER FOR EMULATION                                                                  (3)

                                     061F   913 FLOAT_OFLO:
       01A8 CA            09     E1  061F   914 	BBC	#FSRV_FIV,I_FLOATCSR(R10),CONTINUE	; IF OFLO INT ON
                          14         0624       
       01A8 CA            0E     E0  0625   915 	BBS	#FSRV_FID,I_FLOATCSR(R10),CONTINUE	; AND INTS NOT OFF
                          0E         062A       
       01A8 CA       8000 8F     A8  062B   916 	BISW	#FSRM_FER,I_FLOATCSR(R10)	; SET ERROR SUMMARY BIT
       01AC CA            08     D0  0632   917 	MOVL	#FEC_OVERFLOW,I_FLOATERR(R10)
                          DA     11  0637   918 	BRB	EXIT_EXCEPTION
                                     0639   919 CONTINUE:
            50            01     3C  0639   920 	MOVZWL	#SS$_CONTINUE,R0
                                 04  063C   921 	RET
                                     063D   922 ;
                                     063D   923 ; PROCESS FLOATING DIVIDE BY ZERO
                                     063D   924 ;
                                     063D   925 FLOAT_DIV_ZERO:
       01AC CA            04     D0  063D   926 	MOVL	#FEC_DIVBYZERO,I_FLOATERR(R10)
                          CF     11  0642   927 	BRB	EXIT_EXCEPTION
                                     0644   928 ;
                                     0644   929 ; PROCESS FLOATING UNDERFLOW
                                     0644   930 ;
                                     0644   931 FLOAT_UFLO:
       01A8 CA       8000 8F     A8  0644   932 	BISW	#FSRM_FER,I_FLOATCSR(R10)	; SET ERROR SUMMARY BIT
       01AC CA            0A     D0  064B   933 	MOVL	#FEC_UNDERFLOW,I_FLOATERR(R10)
                          C1     11  0650   934 	BRB	EXIT_EXCEPTION
                                     0652   935 ;
                                     0652   936 ; PROCESS RESERVED OPERAND
                                     0652   937 ;
                                     0652   938 RSVD_OPERAND:
       01A8 CA            0B     E1  0652   939 	BBC	#FSRV_FIUV,I_FLOATCSR(R10),10$	; IF UNDEFINED INT ON
                          14         0657       
       01A8 CA            0E     E0  0658   940 	BBS	#FSRV_FID,I_FLOATCSR(R10),10$	; AND INTS NOT OFF
                          0E         065D       
       01A8 CA       8000 8F     A8  065E   941 	BISW	#FSRM_FER,I_FLOATCSR(R10)	; SET ERROR SUMMARY BIT
       01AC CA            0C     D0  0665   942 	MOVL	#FEC_UNDEFINED,I_FLOATERR(R10)
                          A7     11  066A   943 	BRB	EXIT_EXCEPTION
                                     066C   944 ;
                                     066C   945 ; FIXUP RESERVED OPERAND
                                     066C   946 ;
                                     066C   947 10$:
            51         08 A1     D0  066C   948 	MOVL	2*4(R1),R1		; GET EXCEPTION PC
            50         08 AC     D0  0670   949 	MOVL	8(AP),R0		; ADDRESS MECHANISM ARGLIST
         01 A1         60 8F     91  0674   950 	CMPB	#^X60,1(R1)		; IS FIRST OPERAND (R0)?
                          1C     12  0679   951 	BNEQ	40$			; NO, MUST BE (R1)
                                     067B   952 ;
                                     067B   953 ; CHECK FOR RESERVED OPERAND IN MEMORY
                                     067B   954 ;
                                     067B   955 20$:
            09            07     ED  067B   956 	CMPZV	#7,#9,@12(R0),#^X100	; IS (R0) RESERVED OPERAND?
   00000100 8F         0C B0         067E       
                          10     12  0685   957 	BNEQ	40$			; NO, TRY (R1)
            59            1F     E0  0687   958 	BBS	#V_OPRND,R9,30$		; IF SET, DESTINATION ADDRESS
                          07         068A       
         0C A0         B4'AF     DE  068B   959 	MOVAL	B^ZERO,12(R0)		; REPLACE R0 WITH POINTER TO ZERO
                          A7     11  0690   960 	BRB	CONTINUE		; AND RE-EXECUTE INSTRUCTION
                       0C B0     B4  0692   961 30$:	CLRW	@12(R0)			; IF (R0) IS A DESTINATION
                          A2     11  0695   962 	BRB	CONTINUE		; ZERO IT AND RE-EXECUTE
                                     0697   963 ;
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page  21
V06.0           RSX$FLOAT_EXC - EXCEPTION HANDLER FOR EMULATION                                                                  (3)

                                     0697   964 ; CHECK FOR RESERVED OPERAND IN FAC
                                     0697   965 ;
                                     0697   966 40$:
            09            07     ED  0697   967 	CMPZV	#7,#9,@16(R0),#^X100	; IS (R1) RESERVED OPERAND?
   00000100 8F         10 B0         069A       
                          D8     12  06A1   968 	BNEQ	20$			; NO, TRY (R0)
            59            1F     E0  06A3   969 	BBS	#V_OPRND,R9,50$		; IF SET, DESTINATION ADDRESS
                          05         06A6       
                       10 B0     B4  06A7   970 	CLRW	@16(R0)			; ZERO FAC
                          8D     11  06AA   971 	BRB	CONTINUE		; AND RE-EXECUTE
         10 A0         B4'AF     DE  06AC   972 50$:	MOVAL	B^ZERO,16(R0)		; IF MEMORY OPERAND IS A DESTINATION
                          86     11  06B1   973 	BRB	CONTINUE		; REPLACE (R1) WITH POINTER TO ZERO
                                 00' 06B3   974 	.ALIGN	LONG,0
                  00000000 00000000  06B4   975 ZERO:	.QUAD	0
                                     06BC   976  
                                     06BC   977 	.END
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page  22
SYMBOL TABLE                                                                                                                     (3)

$$MSG          = 00000000            FEC_INTCONV    = 00000006            H.ODVL           00000014            
...GBL         = 00000000            FEC_MAINTTRAP  = 0000000E            H.OVLY           0000002C            
ABSD             00000321 R     05   FEC_OPCODE     = 00000002            H.PFVA           0000001A            
ABSF             00000176 R     05   FEC_OVERFLOW   = 00000008            H.RCVA           0000001E            
ACBC_CTLRCAST  = 00000002            FEC_UNDEFINED  = 0000000C            H.RRVA           00000032            
ACBC_FLOATAST  = 00000003            FEC_UNDERFLOW  = 0000000A            H.SPRI           00000030            
ACBC_PWRAST    = 00000000            FLOAT_DIV_ZERO   0000063D R     05   H.TKVA           00000016            
ACBC_RCVAST    = 00000001            FLOAT_OFLO       0000061F R     05   H.TKVL           00000018            
ACBV_INPROG    = 00000001            FLOAT_UFLO       00000644 R     05   H.VEXT           0000002E            
ACBV_PERM      = 00000000            FMODE0X          00000515 R     05   H.WND            00000024            
ACBV_TYPE      = 00000008            FP_AP            00000008            IE.2DV         = FFFFFFD0            
ACB_FLAGS        0000000C            FP_FP            0000000C            IE.ABO         = FFFFFFF1            
ACB_LINK         00000000            FP_PC            00000010            IE.ALC         = FFFFFFAC            
ACB_UPC          0000000A            FP_PSL           00000004            IE.ALN         = FFFFFFDE            
ACB_UPRM         00000008            FP_REGISTERS     00000014            IE.AST         = FFFFFFB0            
ADDD             00000362 R     05   FSRC4            000004C3 R     05   IE.BAD         = FFFFFFFF            
ADDF             000001D0 R     05   FSRC8            000004B3 R     05   IE.BBE         = FFFFFFC8            
ADR_HIGHLIM      00000004            FSRM_FD        = 00000080            IE.BCC         = FFFFFFBE            
ADR_LOWLIM       00000000            FSRM_FER       = 00008000            IE.BDI         = FFFFFFCC            
ADR_SIZE         00000008            FSRM_FIC       = 00000100            IE.BDR         = FFFFFFCE            
AP_NAME          00000004            FSRM_FID       = 00004000            IE.BDV         = FFFFFFC9            
AST_PARAM        00000004            FSRM_FIU       = 00000400            IE.BHD         = FFFFFFC0            
AST_PC           00000010            FSRM_FIUV      = 00000800            IE.BLB         = FFFFFFBA            
AST_PSL          00000014            FSRM_FIV       = 00000200            IE.BLK         = FFFFFFEC            
AST_R0           00000008            FSRM_FL        = 00000040            IE.BNM         = FFFFFFCA            
AST_R1           0000000C            FSRM_FMM       = 00000010            IE.BTF         = FFFFFFB4            
BAIL_OUT         0000043D R     05   FSRM_FT        = 00000020            IE.BTP         = FFFFFFD5            
BIT...         = 00000000            FSRV_FD        = 00000007            IE.BVR         = FFFFFFC1            
CFCC             000000D1 R     05   FSRV_FER       = 0000000F            IE.BYT         = FFFFFFED            
CLRD             00000311 R     05   FSRV_FIC       = 00000008            IE.CKS         = FFFFFFE2            
CLRF             00000167 R     05   FSRV_FID       = 0000000E            IE.CLO         = FFFFFFDA            
CMPD             0000037F R     05   FSRV_FIU       = 0000000A            IE.CNR         = FFFFFFB7            
CMPF             00000221 R     05   FSRV_FIUV      = 0000000B            IE.CON         = FFFFFFEA            
CONTINUE         00000639 R     05   FSRV_FIV       = 00000009            IE.DAA         = FFFFFFF8            
CONVERT_ERR      0000042F R     05   FSRV_FL        = 00000006            IE.DAO         = FFFFFFF3            
C_CANONPS      = 83C00000            FSRV_FMM       = 00000004            IE.DFU         = FFFFFFE8            
C_RCVDSTR      = 44564352            FSRV_FT        = 00000005            IE.DNA         = FFFFFFF9            
DISPFSRC         000004C6 R     05   GBL...         = 00000000            IE.DNR         = FFFFFFFD            
DISPSRC          0000047C R     05   H.CSP            00000000            IE.DUN         = FFFFFFF7            
DIVD             00000391 R     05   H.CUIC           00000008            IE.DUP         = FFFFFFC7            
DIVF             0000023A R     05   H.DSW            00000026            IE.EOF         = FFFFFFF6            
DST2             0000046E R     05   H.DUIC           0000000A            IE.EOT         = FFFFFFC2            
DST4             00000475 R     05   H.EFLM           00000004            IE.EOV         = FFFFFFF5            
EXIT_EXCEPTION   00000613 R     05   H.EFSV           00000020            IE.EXP         = FFFFFFB5            
FCB_ATTRIBS      0000007C            H.FCS            00000028            IE.FEX         = FFFFFFCF            
FCB_FIB          0000004C            H.FORT           0000002A            IE.FHE         = FFFFFFC5            
FCB_FID          00000000            H.FPSA           00000022            IE.FLN         = FFFFFFAF            
FCB_FNAME        00000014            H.FPVA           0000001C            IE.FOP         = FFFFFFCB            
FCB_FNAMEDESC    0000000C            H.GARD           0000003A            IE.HFU         = FFFFFFE4            
FCB_FNB          00000002            H.HDLN           00000002            IE.IES         = FFFFFFAE            
FCB_PC           00000078            H.IPC            0000000E            IE.IFC         = FFFFFFFE            
FCB_RESULT       00000030            H.IPS            0000000C            IE.IFU         = FFFFFFE7            
FCB_RESULTDESC   00000004            H.ISP            00000010            IE.ILL         = FFFFFFD6            
FCB_SIZE         000000B4            H.LUN            0000003E            IE.ISQ         = FFFFFFC3            
FDST4            000004BF R     05   H.NLUN           0000003C            IE.LCK         = FFFFFFE5            
FDST8            000004B8 R     05   H.NML            00000031            IE.MOD         = FFFFFFEB            
FEC_DIVBYZERO  = 00000004            H.ODVA           00000012            IE.NBF         = FFFFFFD9            
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page  23
SYMBOL TABLE                                                                                                                     (3)

IE.NBK         = FFFFFFD7            I_BAILOUTFP      00000188            LDCXD            00000403 R     05   
IE.NDR         = FFFFFFB8            I_CMDROUT        000000E8            LDCXF            000002E0 R     05   
IE.NFI         = FFFFFFC4            I_CURAST         00000198            LDD              0000036B R     05   
IE.NFW         = FFFFFFBB            I_DEBVEC         00000190            LDEXP            000002CD R     05   
IE.NLK         = FFFFFFB1            I_DEBVECL        00000192            LDF              000001F1 R     05   
IE.NLN         = FFFFFFDB            I_FCBPOOL        000000D8            LDFPS            00000122 R     05   
IE.NNC         = FFFFFFB3            I_FCC            000001B4            LUTC_CR        = 00000005            
IE.NNL         = FFFFFFB2            I_FLOATA0        000001C0            LUTC_DISK      = 00000002            
IE.NNN         = FFFFFFBC            I_FLOATA1        000001C8            LUTC_LP        = 00000004            
IE.NOD         = FFFFFFE9            I_FLOATA2        000001D0            LUTC_RMS       = 00000000            
IE.NSF         = FFFFFFE6            I_FLOATA3        000001D8            LUTC_TAPE      = 00000003            
IE.NST         = FFFFFFB0            I_FLOATA4        000001E0            LUTC_TRM       = 00000001            
IE.OFL         = FFFFFFBF            I_FLOATA5        000001E8            LUTV_CTRLC     = 00000002            
IE.ONP         = FFFFFFFB            I_FLOATADR       000001B0            LUTV_CTRLO     = 00000000            
IE.OVR         = FFFFFFEE            I_FLOATAST       000001A4            LUTV_PRM       = 00000003            
IE.PES         = FFFFFFAD            I_FLOATCSR       000001A8            LUT_CHAN         0000000C            
IE.PRI         = FFFFFFF0            I_FLOATERR       000001AC            LUT_CHAR         00000012            
IE.RAC         = FFFFFFD4            I_FLOATTMP       000001B8            LUT_CTRLC        00000032            
IE.RAT         = FFFFFFD3            I_GARD           000000EC            LUT_FLAGS        0000000A            
IE.RBG         = FFFFFFD8            I_HIGHEFN        0000016C            LUT_INFONAME     0000002E            
IE.RCN         = FFFFFFD2            I_HIGHSIZE       000000F4            LUT_INFOUNIT     00000030            
IE.RER         = FFFFFFE0            I_IMAGEVBN       000000F8            LUT_LINK         00000000            
IE.RNM         = FFFFFFCD            I_INISIZE        000000F0            LUT_REALNAME     0000001E            
IE.RSU         = FFFFFFEF            I_LENGTH         000001F0            LUT_REF          00000008            
IE.SNC         = FFFFFFDD            I_LOGNAME        000000E0            LUT_RSXNAME      00000010            
IE.SPC         = FFFFFFFA            I_LUT            00000168            LUT_SIZE         00000036            
IE.SQC         = FFFFFFDC            I_NLUN           00000164            LUT_TYPE         00000016            
IE.SRE         = FFFFFFF2            I_PC             00000020            MODD             00000341 R     05   
IE.STK         = FFFFFFC6            I_PPFINDEX       00000162            MODD_ODD_REG     00000359 R     05   
IE.TMM         = FFFFFFB9            I_PROCNAME       0000014C            MODE07           000004FE R     05   
IE.TMO         = FFFFFFB6            I_PS             00000024            MODE0X           000004FE R     05   
IE.ULK         = FFFFFFAB            I_PWRAST         000001A0            MODE17           00000529 R     05   
IE.VER         = FFFFFFFC            I_R0             00000000            MODE1X           00000521 R     05   
IE.WAC         = FFFFFFE3            I_R1             00000004            MODE27           0000053D R     05   
IE.WAT         = FFFFFFE1            I_R2             00000008            MODE2X           0000052F R     05   
IE.WCK         = FFFFFFAA            I_R3             0000000C            MODE37           00000556 R     05   
IE.WER         = FFFFFFDF            I_R4             00000010            MODE3X           00000547 R     05   
IE.WLK         = FFFFFFF4            I_R5             00000014            MODE47           00000573 R     05   
ILLEGAL          000004FB R     05   I_R6             00000018            MODE4X           00000565 R     05   
ILLEGAL_OP       00000428 R     05   I_RAD50NAME      00000148            MODE57           0000058C R     05   
INDIRECT         0000055E R     05   I_RCVAST         0000019C            MODE5X           0000057D R     05   
IS.BV          = 00000005            I_RCVMAIL        00000160            MODE67           000005A6 R     05   
IS.CC          = 00000301            I_RUNFLAGS       0000018C            MODE6X           00000596 R     05   
IS.CR          = 00000D01            I_SCRATCH        00000028            MODE77           000005C7 R     05   
IS.EOT         = 00000401            I_SSTVEC         00000194            MODE7X           000005B6 R     05   
IS.ESC         = 00001B01            I_SSTVECL        00000196            MODF             000001B1 R     05   
IS.ESQ         = 00009B01            I_STATE          00000170            MODF_ODD_REG     000001C8 R     05   
IS.PES         = 00008001            I_TYPE           0000001C            MULD             00000338 R     05   
IS.PND         = 00000000            I_UIC            0000013C            MULF             00000190 R     05   
IS.RDD         = 00000002            I_WAIT           00000178            NEGD             0000032F R     05   
IS.SUC         = 00000001            I_WAITSAVE       00000180            NEGF             00000183 R     05   
IS.TAB         = 00000901            LDCDF            000002FC R     05   NORMAL           0000014C R     05   
IS.TMO         = 00000002            LDCFD            0000041F R     05   ODD              0000058A R     05   
I_ADR0           000000FC            LDCID            00000409 R     05   ODD_ADDR         000005D6 R     05   
I_ASCIINAME      00000140            LDCIF            000002E6 R     05   PSL$C_EXEC     = 00000001            
I_ASTPOOL        000000D0            LDCLD            00000412 R     05   PSL$C_KERNEL   = 00000000            
I_ASTQUEUE       000000C8            LDCLF            000002EF R     05   PSL$C_SUPER    = 00000002            
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page  24
SYMBOL TABLE                                                                                                                     (3)

PSL$C_USER     = 00000003            RSX$_NOCOMM    = 00068094            SS$_DEBUG      = 0000046C            
PSL$M_CM       = 80000000            RSX$_NONRSXEMT = 0006801C            SS$_DECOVF     = 000004A4            
PSL$M_CURMOD   = 03000000            RSX$_NOPMD     = 00068332            SS$_DEVACTIVE  = 000002C4            
PSL$M_DV       = 00000080            RSX$_NOSUCHDEV = 00068322            SS$_DEVALLOC   = 00000840            
PSL$M_FPD      = 08000000            RSX$_NOTSKIMG  = 00068064            SS$_DEVALRALLOC= 00000641            
PSL$M_FU       = 00000040            RSX$_ODDADDR   = 00068034            SS$_DEVASSIGN  = 00000848            
PSL$M_IPL      = 001F0000            RSX$_PMD       = 0006832A            SS$_DEVFOREIGN = 00000064            
PSL$M_IS       = 04000000            RSX$_RCVMBXSIZ = 0000012C            SS$_DEVICEFULL = 00000850            
PSL$M_IV       = 00000020            RSX$_REGMSG    = 0006808C            SS$_DEVMOUNT   = 0000006C            
PSL$M_PRVMOD   = 00C00000            RSX$_RESERVED  = 00068004            SS$_DEVNOTALLOC= 00000858            
PSL$M_SAFBITS  = 000037FF            RSX$_TBIT      = 0006803C            SS$_DEVNOTMBX  = 00000074            
PSL$M_TBIT     = 00000010            RSX$_TRAP      = 00068024            SS$_DEVNOTMOUNT= 0000007C            
PSL$M_TP       = 40000000            RSX$_VERIFYCMD = 00068648            SS$_DEVOFFLINE = 00000084            
PSL$S_CURMOD   = 00000002            SETCC            000001F9 R     05   SS$_DIRFULL    = 00000860            
PSL$S_IPL      = 00000005            SETD             000000ED R     05   SS$_DRVERR     = 0000008C            
PSL$S_PRVMOD   = 00000002            SETF             000000DB R     05   SS$_DUPFILENAME= 00000868            
PSL$V_CM       = 0000001F            SETI             000000E4 R     05   SS$_DUPLNAM    = 00000094            
PSL$V_CURMOD   = 00000018            SETL             000000F6 R     05   SS$_ENDOFFILE  = 00000870            
PSL$V_DV       = 00000007            SHORT            00000502 R     05   SS$_ENDOFTAPE  = 00000878            
PSL$V_FPD      = 0000001B            SRC2             00000469 R     05   SS$_ENDOFUSRLBL= 00000970            
PSL$V_FU       = 00000006            SRC4             00000479 R     05   SS$_EXQUOTA    = 0000001C            
PSL$V_IPL      = 00000010            SS$_ABORT      = 0000002C            SS$_EXTIDXFILE = 00000880            
PSL$V_IS       = 0000001A            SS$_ACCONFLICT = 00000800            SS$_FCPREADERR = 00000888            
PSL$V_IV       = 00000005            SS$_ACCVIO     = 0000000C            SS$_FCPREPSTN  = 00000988            
PSL$V_PRVMOD   = 00000016            SS$_ACPVAFUL   = 000002FC            SS$_FCPREWNDERR= 00000890            
PSL$V_TBIT     = 00000004            SS$_ARTRES     = 00000474            SS$_FCPSPACERR = 00000898            
PSL$V_TP       = 0000001E            SS$_ASTFLT     = 0000040C            SS$_FCPWRITERR = 000008A0            
PSL_CC         = 00000000            SS$_BADATTRIB  = 00000034            SS$_FILACCERR  = 0000009C            
PSL_CM         = 0000001F            SS$_BADCHKSUM  = 00000808            SS$_FILALRACC  = 000000A4            
PSL_FPD        = 0000001B            SS$_BADESCAPE  = 0000003C            SS$_FILELOCKED = 000008A8            
PSL_FU         = 00000006            SS$_BADFILEHDR = 00000810            SS$_FILENUMCHK = 000008B0            
PSL_TBIT       = 00000004            SS$_BADFILENAME= 00000818            SS$_FILESEQCHK = 000008B8            
QIOV_FILES     = 00000000            SS$_BADFILEVER = 00000820            SS$_FILESTRUCT = 000008C0            
QIO_FLAGS        0000001A            SS$_BADIMGHDR  = 00000044            SS$_FILNOTACC  = 000000AC            
QIO_IOSB         0000000E            SS$_BADIRECTORY= 00000828            SS$_FILNOTCNTG = 000002AC            
QIO_LUT          00000016            SS$_BADPARAM   = 00000014            SS$_FILNOTEXP  = 000000B4            
QIO_SECONDBLK    0000001C            SS$_BADSTACK   = 000002B4            SS$_FLTDIV     = 00000494            
QIO_SIZE         00000020            SS$_BEGOFFILE  = 00000938            SS$_FLTOVF     = 0000048C            
RSVD_OPERAND     00000652 R     05   SS$_BLOCKCNTERR= 00000940            SS$_FLTUND     = 0000049C            
RSX$C_SUBSYSTEM= 00000006            SS$_BREAK      = 00000414            SS$_FORMAT     = 000000BC            
RSX$FLOAT        00000000 RG    05   SS$_BUFBYTALI  = 0000030C            SS$_GPTFULL    = 000000C4            
RSX$FLOAT_END    000005E0 RG    05   SS$_BUFFEROVF  = 00000601            SS$_GSDFULL    = 000000CC            
RSX$FLOAT_EXC    000005E0 RG    05   SS$_BUGCHECK   = 000002A4            SS$_HANGUP     = 000002CC            
RSX$RESTORE      ********   X   05   SS$_CANCEL     = 00000830            SS$_HEADERFULL = 000008C8            
RSX$TRAP         ********   X   05   SS$_CHANINTLK  = 0000004C            SS$_IDXFILEFULL= 000008D0            
RSX$_ACCVIO    = 00068044            SS$_CLIFRCEXT  = 00000980            SS$_ILLBLKNUM  = 000000DC            
RSX$_BADLIBREF = 0006806C            SS$_CMODSUPR   = 0000041C            SS$_ILLCNTRFUNC= 000000E4            
RSX$_BADSTACK  = 0006804C            SS$_CMODUSER   = 00000424            SS$_ILLEFC     = 000000EC            
RSX$_BREAK     = 0006800C            SS$_COMPAT     = 0000042C            SS$_ILLIOFUNC  = 000000F4            
RSX$_EXITSTATUS= 00068640            SS$_CONTINUE   = 00000001            SS$_ILLLBLAST  = 00000968            
RSX$_EXTERNABRT= 0006805C            SS$_CONTROLC   = 00000651            SS$_ILLPAGCNT  = 000000FC            
RSX$_ILLINST   = 0006802C            SS$_CONTROLO   = 00000609            SS$_ILLSEQOP   = 000002DC            
RSX$_IMAGETERM = 00068084            SS$_CONTROLY   = 00000611            SS$_ILLSER     = 00000104            
RSX$_INSFDYNMEM= 00068054            SS$_CREATED    = 00000619            SS$_ILLUSRLBLRD= 00000958            
RSX$_IOT       = 00068014            SS$_CTRLERR    = 00000054            SS$_ILLUSRLBLWT= 00000960            
RSX$_LIBNOTFND = 00068074            SS$_DATACHECK  = 0000005C            SS$_INCVOLLABEL= 0000010C            
RSX$_LOADERROR = 0006807C            SS$_DATAOVERUN = 00000838            SS$_INSFARG    = 00000114            
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page  25
SYMBOL TABLE                                                                                                                     (3)

SS$_INSFMEM    = 00000124            SS$_OPCCUS     = 00000434            SV_DCL           00000002            
SS$_INSFRAME   = 0000012C            SS$_OPCDEC     = 0000043C            SV_FLOATAST      00000009            
SS$_INSFWSL    = 0000011C            SS$_OPINCOMPL  = 000002D4            SV_NOAST         00000003            
SS$_INTDIV     = 00000484            SS$_PAGOWNVIO  = 000001EC            SV_PENDWAIT      00000005            
SS$_INTOVF     = 0000047C            SS$_PAGRDERR   = 00000444            SV_PWRAST        00000008            
SS$_IVADDR     = 00000134            SS$_PARITY     = 000001F4            SV_RCVAST        00000007            
SS$_IVCHAN     = 0000013C            SS$_PARTESCAPE = 000001FC            SV_RESTORE       00000000            
SS$_IVCHNLSEC  = 0000026C            SS$_PFMBSY     = 00000204            SV_TRANSLATE     00000001            
SS$_IVDEVNAM   = 00000144            SS$_PLHLDR     = 00000404            SV_WAIT          00000006            
SS$_IVGSDNAM   = 0000014C            SS$_PSTFULL    = 0000020C            TSTD             00000319 R     05   
SS$_IVLOGNAM   = 00000154            SS$_RADRMOD    = 0000044C            TSTF             0000016E R     05   
SS$_IVLOGTAB   = 0000015C            SS$_REJECT     = 00000294            UNARY_OPD        000000C2 R     05   
SS$_IVPROTECT  = 000002F4            SS$_REMOTE     = 00000649            UNARY_OPF        000000B3 R     05   
SS$_IVQUOTAL   = 00000164            SS$_RESIGNAL   = 00000918            V_OPRND        = 0000001F            
SS$_IVSECFLG   = 0000016C            SS$_RESULTOVF  = 00000214            W.BATT           00000006            
SS$_IVSECIDCTL = 000002E4            SS$_ROPRAND    = 00000454            W.BFPD           0000000C            
SS$_IVSSRQ     = 00000174            SS$_SECTBLFUL  = 0000021C            W.BHVR           00000004            
SS$_IVSTSFLG   = 0000017C            SS$_SSFAIL     = 0000045C            W.BLGH           00000010            
SS$_IVTIME     = 00000184            SS$_SUBRNG     = 000004AC            W.BLPD           0000000E            
SS$_LCKPAGFUL  = 000000D4            SS$_SUPERSEDE  = 00000631            W.BLVR           00000002            
SS$_LENVIO     = 0000018C            SS$_TAPEPOSLOST= 00000224            W.BNPD           0000000D            
SS$_LKWSETFUL  = 00000194            SS$_TBIT       = 00000464            W.BOFF           0000000A            
SS$_MBFULL     = 000008D8            SS$_TIMEOUT    = 0000022C            W.BPCB           00000000            
SS$_MBTOOSML   = 0000019C            SS$_TOOMANYVER = 00000990            W.BSIZ           00000008            
SS$_MCHECK     = 000002BC            SS$_TOOMUCHDATA= 0000029C            ZERO             000006B4 R     05   
SS$_MEDOFL     = 000001A4            SS$_UNASEFC    = 00000234            
SS$_MSGNOTFND  = 00000621            SS$_UNSAFE     = 0000023C            
SS$_MTLBLLONG  = 00000304            SS$_UNWIND     = 00000920            
SS$_MUSTCLOSEFL= 00000948            SS$_UNWINDING  = 00000928            
SS$_NOAQB      = 00000314            SS$_VASFULL    = 00000244            
SS$_NODATA     = 000001AC            SS$_VECINUSE   = 0000024C            
SS$_NOHANDLER  = 000008F8            SS$_VOLINV     = 00000254            
SS$_NOHOMEBLK  = 000008E0            SS$_WAITUSRLBL = 00000950            
SS$_NOIOCHAN   = 000001B4            SS$_WASCLR     = 00000001            
SS$_NOLINKS    = 0000027C            SS$_WASECC     = 00000639            
SS$_NOLOGNAM   = 000001BC            SS$_WASSET     = 00000009            
SS$_NOMBX      = 00000274            SS$_WRITLCK    = 0000025C            
SS$_NOMOREFILES= 00000930            SS$_WRONGACP   = 0000031C            
SS$_NONEXDRV   = 000001C4            STATUS_OP        00000077 R     05   
SS$_NONEXPR    = 000008E8            STCDF            000003EE R     05   
SS$_NONLOCAL   = 000008F0            STCDI            000003A0 R     05   
SS$_NOPRIV     = 00000024            STCDL            000003C0 R     05   
SS$_NORMAL     = 00000001            STCDX            0000039A R     05   
SS$_NOSIGNAL   = 00000900            STCFD            000002C4 R     05   
SS$_NOSOLICIT  = 00000284            STCFI            00000276 R     05   
SS$_NOSUCHDEV  = 00000908            STCFL            00000296 R     05   
SS$_NOSUCHFILE = 00000910            STCFX            00000270 R     05   
SS$_NOSUCHNODE = 0000028C            STD              00000388 R     05   
SS$_NOSUCHSEC  = 00000978            STEXP            0000025B R     05   
SS$_NOTAPEOP   = 00000264            STF              00000229 R     05   
SS$_NOTFILEDEV = 000001CC            STFPS            00000110 R     05   
SS$_NOTINTBLSZ = 000001D4            STORE            0000022F R     05   
SS$_NOTLABELMT = 000001DC            STORECC          00000189 R     05   
SS$_NOTMODIFIED= 00000659            STST             000000FF R     05   
SS$_NOTNETDEV  = 000002EC            SUBD             00000376 R     05   
SS$_NOTRAN     = 00000629            SUBF             00000200 R     05   
SS$_NOTSQDEV   = 000001E4            SV_ASTLVL        00000004            
RSXFLOAT        - 11/70 FLOATING POINT INSTRUCTION EMULATION     22-AUG-1978 05:08:13   VAX-11 MACRO X0.3-11               Page  26
PROGRAM SECTION SYNOPSIS                                                                                                         (3)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000000      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
..ABS.           00000042      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXDEF           000001F4      04     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXCODE          000006BC      05       PIC   USR   CON   REL   LCL   SHR   EXE   RD  NOWRT LONG  


THERE WERE NO ERRORS OR WARNINGS.
9442. BYTES LEFT IN FREE MEMORY POOL.
900. BYTES OF RECLAIMED MEMORY.
OBJ$:RSXFLOAT,LIS$:RSXFLOAT/-SP=EXECML$/ML,LIB$:R/ML,SRC$:RSXFLOAT
27 MLB DIR RDS - 725 GETS TO DEFINE 18 MACROS. 50 INTER. FILE WRITES. 
