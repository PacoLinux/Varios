RSXMAIN         - RSX AME COMMAND PROCESSOR                      22-AUG-1978 05:09:25   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      84  RSXMAIN - RSX AME COMMAND PROCESSOR
   (3)     237  GET_CMD - GET MCR COMMAND ROUTINE
RSXMAIN         - RSX AME COMMAND PROCESSOR                      22-AUG-1978 05:09:25   VAX-11 MACRO X0.3-11               Page   1
V06.0                                                                                                                            (1)

                                     0000     1 	.TITLE	RSXMAIN - RSX AME COMMAND PROCESSOR
                                     0000     2 	.IDENT	/V06.0/
                                     0000     3 ;
                                     0000     4 ; COPYRIGHT (C) 1978
                                     0000     5 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     6 ;
                                     0000     7 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     8 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000     9 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    10 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    11 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    12 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    13 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    14 ;
                                     0000    15 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    16 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    17 ; EQUIPMENT CORPORATION.
                                     0000    18 ;
                                     0000    19 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    20 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    21 ;++
                                     0000    22 ;
                                     0000    23 ; FACILITY:
                                     0000    24 ;
                                     0000    25 ;	VAX/VMS RSX-11M AME
                                     0000    26 ;
                                     0000    27 ; ABSTRACT:
                                     0000    28 ;
                                     0000    29 ;	RSX-11M AME COMMAND PROCESSOR
                                     0000    30 ;
                                     0000    31 ; AUTHOR: R.HEINEN 4-MAY-77
                                     0000    32 ;--
                                     0000    33 ;
                                     0000    34 ; CLI COMMAND PARSE DATA
                                     0000    35 ;
                                     0000    36 CLIDAT:	$CLIREQDESC	CLI$K_GETCMD
                           00000001  001C    37 	.MDELETE	$CLIREQDESC
                                     001C    38 ;
                                     001C    39 ; EXTERNAL DEFINITIONS
                                     001C    40 ;
                                     001C    41 	.WEAK RSX$C_GPROMPT,RSX$T_GPROMPT
                                     001C    42  
                                     001C    43 	$FABDEF				; DEFINE FAB
                                     001C    44 	$IFDDEF				; DEFINE IFD BLOCK FROM IMAGE ACTIVATOR
                                     001C    45 	$RABDEF				; DEFINE RAB
                                     001C    46 	$RSXMSGDEF			; DEFINE RSX MESSAGES
                                     001C    47 ;
                                     001C    48 ; LOCAL STORAGE
                                     001C    49 ;
                                 00000000    50 	.PSECT	RSXMAINIMP,EXE,LONG
                                     0000    51 ;
                                     0000    52 ; ARGUMENTS FOR RSX AME
                                     0000    53 ;
                           00000003  0000    54 RSXARGS:	.LONG	3
                           00000000  0004    55 FILCHAN:	.LONG	0
                           000001F2' 0008    56 		.LONG	GET_CMD
                           00000000  000C    57 		.LONG	0
RSXMAIN         - RSX AME COMMAND PROCESSOR                      22-AUG-1978 05:09:25   VAX-11 MACRO X0.3-11               Page   2
V06.0                                                                                                                            (1)

                           00000000  0010    58 FILECTX:	.LONG	0
                  00000000 00000000  0014    59 GCML:		.LONG	0,0
                                     001C    60  
                                     001C    61 	.ALIGN	LONG
                                     001C    62  
                                     001C    63 FILEFAB:$FAB	NAM=RESULT,SHR=<GET>,FOP=<UFO,KFO>
                                     006C    64 RESULT:	$NAM	ESA=FILENAME,ESS=50
                                     00A4    65 INRAB:	$RAB	RAC=<SEQ>,-
                                     00A4    66 		ROP=<PMT,CVT>,-
                                     00A4    67 		UBF=UTLBUF,-
                                     00A4    68 		USZ=256,-
                                     00A4    69 		PBF=PROMPT,-
                                     00A4    70 		PSZ=PROMPT_SIZ
                                     00E8    71  
                           00000006' 00E8    72 PROMPT_DESC:	.LONG	PROMPT_SIZ
                           000000F0' 00EC    73 		.LONG	PROMPT
                  3E 52 43 4D 0D 0A  00F0    74 PROMPT:		.ASCII	<10><13>/MCR>/
                           00000006  00F6    75 PROMPT_SIZ=.-PROMPT
                                 3E  00F6    76 	.BYTE	^O076
                           000001F7  00F7    77 UTLBUF:		.BLKB	256
                           00000229  01F7    78 FILENAME:	.BLKB	50
                           00000003' 0229    79 SUBNAME:	.LONG	20$-10$
                           00000231' 022D    80 		.LONG	10$
                           58 53 52  0231    81 10$:	.ASCII	/RSX/
                                     0234    82 20$:	
RSXMAIN         - RSX AME COMMAND PROCESSOR                      22-AUG-1978 05:09:25   VAX-11 MACRO X0.3-11               Page   3
V06.0           RSXMAIN - RSX AME COMMAND PROCESSOR                                                                              (2)

                                     0234    84 	.SBTTL	RSXMAIN - RSX AME COMMAND PROCESSOR
                                     0234    85  
                                     0234    86  
                                     0234    87 	.ENABL	LSB
                                     0234    88  
                                 00000000    89 	.PSECT	RSXMAINCODE,NOWRT
                                     0000    90 ;++
                                     0000    91 ; RSXMAIN - RSX AME COMMAND PROCESSOR
                                     0000    92 ;
                                     0000    93 ; FUNCTIONAL DESCRIPTION:
                                     0000    94 ;
                                     0000    95 ; THIS ROUTINE IS THE ENTRY FOR THE "RSX" IMAGE. IT PROCESSES COMMANDS
                                     0000    96 ; AND STARTS THE RSX-11M AME IN AN APPROPRIATE FASHION.
                                     0000    97 ;
                                     0000    98 ; INPUTS:
                                     0000    99 ;
                                     0000   100 ;	IMAGE ACTIVATION STACK.
                                     0000   101 ;
                                     0000   102 ; OUTPUTS:
                                     0000   103 ;
                                     0000   104 ;	IMAGE EXIT WITH APPROPRAITE STATUS.
                                     0000   105 ;--
                                     0000   106 RSX$MAIN::				; ENTRY POINT TO THE RSX AME COMMAND PROCESSOR
                               0000  0000   107 	.WORD	<0>
                     0014'CF     7C  0002   108 	CLRQ	W^GCML			; SET NO COMMAND LINE
            50         10 AC     D0  0006   109 	MOVL	16(AP),R0		; ADDRESS SECONDARY IMAGE ACTIVATOR ARGS
                                     000A   110 ;
                                     000A   111 ; IF NO OPEN IMAGE FILE THEN PROMPT FOR COMMAND LINE
                                     000A   112 ;
       0004'CF         0A A0     3C  000A   113 	MOVZWL	IFD$W_CMCHAN(R0),W^FILCHAN; GET CHANNEL NUMBER FOR OPEN IMAGE FILE
                          37     13  0010   114 	BEQL	10$			; IF EQL THEN MCR<CR>
                                     0012   115 ;
                                     0012   116 ; GET POSSIBLE COMMAND LINE FROM CLI
                                     0012   117 ;
       0010'CF         0C A0     D0  0012   118 	MOVL	IFD$L_CMKFIADR(R0),W^FILECTX; SAVE KNOWN FILE DATA
            51         08 AC     D0  0018   119 	MOVL	CLI$A_UTILSERV(AP),R1	; ADDRESS CLI UTILITY ROUTINE
                          11     13  001C   120 	BEQL	5$			; IF EQL THEN NO CLI AND RUN OPENED IMAGE
                     0000'CF     9F  001E   121 	PUSHAB	W^CLIDAT		; SET UP TO CALL CLI
            61            01     FB  0022   122 	CALLS	#1,(R1)			; CALL CLI
            07            50     E9  0025   123 	BLBC	R0,5$			; IF LOW CLEAR THEN RUN "XXX"
       0014'CF       0008'CF     7D  0028   124 	MOVQ	W^CLI$Q_RQDESC+CLIDAT,W^GCML; GET COMMAND DESC.
       0000'CF       0000'CF     FA  002F   125 5$:	CALLG	W^RSXARGS,W^RSX$RUNIMAGE; RUN THE IMAGE
            07            50     E8  0036   126 	BLBS	R0,7$			; IF LOW SET THEN SUCCESS
                          017B   30  0039   127 	BSBW	OUTPUT_ERROR
            50            1C     E2  003C   128 	BBSS	#28,R0,7$		; SET MESSAGE OUTPUT BIT
                          00         003F       
                                     0040   129 7$:	$EXIT_S	R0			; EXIT
                                     0049   130 ;
                                     0049   131 ; PROMPT FOR MCR<CR> COMMAND TYPE
                                     0049   132 ;
            50         00'8F     9A  0049   133 10$:	MOVZBL	#RSX$C_GPROMPT,R0	; GET SIZE OF OTHER PROMPT
                          1C     13  004D   134 	BEQL	GETNEXT			; IF EQL THEN USE STANDARD
       00D8'CF            50     90  004F   135 	MOVB	R0,W^INRAB+RAB$B_PSZ	; SET NEW PROMPT
       00E8'CF            50     90  0054   136 	MOVB	R0,W^PROMPT_DESC	;
       00D4'CF   00000000'EF     9E  0059   137 	MOVAB	RSX$T_GPROMPT,W^INRAB+RAB$L_PBF;
       00EC'CF   00000000'EF     9E  0062   138 	MOVAB	RSX$T_GPROMPT,W^PROMPT_DESC+4;
                                     006B   139 GETNEXT:				; PROMPT FOR COMMANDS
RSXMAIN         - RSX AME COMMAND PROCESSOR                      22-AUG-1978 05:09:25   VAX-11 MACRO X0.3-11               Page   4
V06.0           RSXMAIN - RSX AME COMMAND PROCESSOR                                                                              (2)

            52       0000'CF     9E  006B   140 	MOVAB	W^RSX$G_FAB,R2		;
                          24     BB  0070   141 	PUSHR	#^M<R2,R5>		;
            62            00     2C  0072   142 	MOVC5	#0,(R2),#0,#FAB$C_BLN,(R2); INITIALIZE THE FAB
       0050 8F            00         0075       
                          62         0079       
                          24     BA  007A   143 	POPR	#^M<R2,R5>		;
         01 A2         50 8F     90  007C   144 	MOVB	#FAB$C_BLN,FAB$B_BLN(R2);
            62            03     90  0081   145 	MOVB	#FAB$C_BID,FAB$B_BID(R2);
         2C A2       0000'CF     9E  0084   146 	MOVAB	W^RSX$A_SYSINPUT,FAB$L_FNA(R2); SET UP FAB
         34 A2         00'8F     90  008A   147 	MOVB	#RSX$S_SYSINPUT,FAB$B_FNS(R2);
         1F A2            02     90  008F   148 	MOVB	#FAB$C_VAR,FAB$B_RFM(R2);
                                     0093   149 	$OPEN	FAB=R2			; OPEN SYS$INPUT
            22            50     E9  009C   150 	BLBC	R0,20$
       00A6'CF         02 A2     B0  009F   151 	MOVW	FAB$W_IFI(R2),W^RAB$W_ISI+INRAB; CONNECT RAB
                                     00A5   152 	$GET	RAB=W^INRAB		; GET THE COMMAND LINE
            1A            50     E8  00B0   153 	BLBS	R0,30$			; BR IF ERROR
   00000000'8F            50     D1  00B3   154 	CMPL	R0,#RMS$_EOF		; ERROR OK?
                          05     12  00BA   155 	BNEQ	20$			; IF NEQ THEN NO
            50            01     9A  00BC   156 	MOVZBL	#1,R0			; SET SUCCESS
                          03     11  00BF   157 	BRB	25$
                          00E6   30  00C1   158 20$:	BSBW	ACTIVATE_IMAGE		; PRINT ERROR
                                     00C4   159 25$:	$EXIT_S	R0			; FINISH
                                     00CD   160 30$:	$CLOSE	FAB=R2			; CLOSE SYS$INPUT
       0014'CF       00C6'CF     B0  00D6   161 	MOVW	W^RAB$W_RSZ+INRAB,W^GCML; INSERT RECORD SIZE 
                          8C     13  00DD   162 	BEQL	GETNEXT			; IF EQL THEN NULL AND GET AGAIN
       0018'CF       00F7'CF     9E  00DF   163 	MOVAB	W^UTLBUF,W^GCML+4	; SAVE ADDRESS
       0040 C2            00'    E0  00E6   164 	BBS	S^#DEV$V_TRM,W^FAB$L_DEV(R2),60$; INPUT A TERMINAL?
                          2E         00EB       
            06            6C     91  00EC   165 	CMPB	(AP),#<CLI$L_CLIFLAG/4>; ENOUGH ARGS?
                          29     1F  00EF   166 	BLSSU	60$			; IF LSSU THEN NO
         18 AC            05     E1  00F1   167 	BBC	#CLI$V_VFYINP,CLI$L_CLIFLAG(AP),60$; BR IF VERIFY NOT ON
                          24         00F5       
            7E       0014'CF     7D  00F6   168 	MOVQ	W^GCML,-(SP)		; OUTPUT VERIFY COMMAND
                          6E     D6  00FB   169 	INCL	(SP)			; SET UP FOR PROPER MESSAGE
                       04 AE     D7  00FD   170 	DECL	4(SP)			;
                          02     DD  0100   171 	PUSHL	#2			;
                 00068649 8F     DD  0102   172 	PUSHL	#RSX$_VERIFYCMD+1	; MESSAGE TYPE FORCE SUCCESS
                 00010004 8F     DD  0108   173 	PUSHL	#4+<1@16>		
                          7E     7C  010E   174 	CLRQ	-(SP)
                       08 AE     9F  0110   175 	PUSHAB	8(SP)
   00000000'9F            08     FB  0113   176 	CALLS	#3+5,@#SYS$PUTMSG	;
            57       0014'CF     7D  011A   177 60$:	MOVQ	W^GCML,R7		; PICK UP COMMAND DATA
            68            3B     91  011F   178 	CMPB	#^A/;/,(R8)		; FIRST CHARACTER ;?
                          0B     13  0122   179 	BEQL	65$			; IF EQL THEN NO DATA COMMENT
       0014'CF            21     3A  0124   180 	LOCC	#^A/!/,W^GCML,(R8)	; LOOK FOR ! COMMENTS
                          68         0129       
       0014'CF            50     C2  012A   181 	SUBL	R0,W^GCML		; ADJUST DATA SIZE
                          76     13  012F   182 65$:	BEQL	120$			; IF EQL THEN NONE LEFT
       0014'CF            20     3A  0131   183 	LOCC	#^A/ /,W^GCML,(R8)	; LOOK FOR SPACE TO DELINIATE FILE NAME
                          68         0136       
       0048'CF            58     D0  0137   184 	MOVL	R8,W^FAB$L_FNA+FILEFAB	; SET UP FILE NAME ADDRESS
            51            58     C3  013C   185 	SUBL3	R8,R1,R7		; CALC SIZE OF NAME
                          57         013F       
       0050'CF            57     90  0140   186 	MOVB	R7,W^FAB$B_FNS+FILEFAB	; SAVE SIZE OF NAME
            50       0000'CF     9E  0145   187 	MOVAB	W^RSX$T_SYSDEF,R0	; ADDRESS DEFAULT NAME
       0051'CF            80     90  014A   188 	MOVB	(R0)+,W^FAB$B_DNS+FILEFAB
       004C'CF            50     D0  014F   189 	MOVL	R0,W^FAB$L_DNA+FILEFAB
RSXMAIN         - RSX AME COMMAND PROCESSOR                      22-AUG-1978 05:09:25   VAX-11 MACRO X0.3-11               Page   5
V06.0           RSXMAIN - RSX AME COMMAND PROCESSOR                                                                              (2)

            57         5B 8F     3A  0154   190 	LOCC	#^A/[/,R7,(R8)		; DIRECTORY?
                          68         0158       
                          06     12  0159   191 	BNEQ	70$			; IF NEQ THEN CHANGE DEFAULT STRING
            57            3C     3A  015B   192 	LOCC	#^A/</,R7,(R8)		;
                          68         015E       
                          0F     13  015F   193 	BEQL	80$			;
            50       0000'CF     9E  0161   194 70$:	MOVAB	W^RSX$T_USERDEF,R0	; ADDRESS USER DEFUALT NAME
       0051'CF            80     90  0166   195 	MOVB	(R0)+,W^FAB$B_DNS+FILEFAB;
       004C'CF            50     D0  016B   196 	MOVL	R0,W^FAB$L_DNA+FILEFAB	;
                     0077'CF     94  0170   197 80$:	CLRB	W^NAM$B_ESL+RESULT	; SET NO EXPANDED NAME
       0020'CF   40020000 8F     D0  0174   198 	MOVL	#FAB$M_KFO!FAB$M_UFO,W^FAB$L_FOP+FILEFAB
                     0034'CF     D4  017D   199 	CLRL	W^FAB$L_CTX+FILEFAB	; ZERO CONTEXT FIELD
                                     0181   200 	$OPEN	FAB=W^FILEFAB		; OPEN THE FILE
       0004'CF       0028'CF     B0  018C   201 	MOVW	W^FAB$L_STV+FILEFAB,W^FILCHAN; PASS CHANNEL NUMBER
       0010'CF       0034'CF     D0  0193   202 	MOVL	W^FAB$L_CTX+FILEFAB,W^FILECTX; AND CONTEXT
                          0E     10  019A   203 	BSBB	ACTIVATE_IMAGE		; RUN THE IMAGE
                                     019C   204 	$CLOSE	FAB=W^FILEFAB		; CLOSE THE FILE
                          FEC1   31  01A7   205 120$:	BRW	GETNEXT			; GET NEXT COMMAND
                                     01AA   206 	.DSABL	LSB
                                     01AA   207  
                                     01AA   208 	.ENABL	LSB
                                     01AA   209 ;
                                     01AA   210 ; ACTIVATE IMAGE SUBROUTINE
                                     01AA   211 ;
                                     01AA   212 ACTIVATE_IMAGE:				; ACTIVATE 11M TASK IMAGE
            0A            50     E9  01AA   213 	BLBC	R0,OUTPUT_ERROR		; IF CALLER HAD ERROR THEN DISPLAY IT
       0000'CF       0000'CF     FA  01AD   214 	CALLG	W^RSXARGS,W^RSX$RUNIMAGE; CALL AME TO RUN IMAGE
            3A            50     E8  01B4   215 	BLBS	R0,50$			; BR IF NO ERROR
                                     01B7   216 OUTPUT_ERROR:
                          50     DD  01B7   217 	PUSHL	R0			; SAVE STATUS
            50            1C     E0  01B9   218 	BBS	#28,R0,45$		; BR IF MESSAGE TAKEN CARE OF
                          31         01BC       
                     01F7'CF     9F  01BD   219 	PUSHAB	W^FILENAME		; OUTPUT FILENAME
            7E       0077'CF     9A  01C1   220 	MOVZBL	W^NAM$B_ESL+RESULT,-(SP);
                          51     D4  01C6   221 	CLRL	R1			; ASSUME NON RSX ERROR
            08            10     ED  01C8   222 	CMPZV	#16,#8,R0,#6		; RSX?
            06            50         01CB       
                          03     12  01CD   223 	BNEQ	25$			; IF NEQ THEN NO
            51            02     D0  01CF   224 	MOVL	#2,R1			;
                          51     DD  01D2   225 25$:	PUSHL	R1
                          50     DD  01D4   226 	PUSHL	R0
   00070002 8F            51     C1  01D6   227 	ADDL3	R1,#2+<7@16>,-(SP)
                          7E         01DD       
                     0229'CF     9F  01DE   228 	PUSHAB	W^SUBNAME		;
                          7E     D4  01E2   229 	CLRL	-(SP)
                       08 AE     9F  01E4   230 	PUSHAB	8(SP)
   00000000'9F            08     FB  01E7   231 	CALLS	#3+5,@#SYS$PUTMSG	; OUTPUT THE MESSAGE
                          50   8ED0  01EE   232 45$:	POPL	R0			; RESTORE ORIGIONAL STATUS
                                 05  01F1   233 50$:	RSB				;
                                     01F2   234  
                                     01F2   235 	.DSABL LSB
RSXMAIN         - RSX AME COMMAND PROCESSOR                      22-AUG-1978 05:09:25   VAX-11 MACRO X0.3-11               Page   6
V06.0           GET_CMD - GET MCR COMMAND ROUTINE                                                                                (3)

                                     01F2   237 	.SBTTL	GET_CMD - GET MCR COMMAND ROUTINE
                                     01F2   238 ;++
                                     01F2   239 ; GET_CMD - GET MCR COMMAND ROUTINE
                                     01F2   240 ;
                                     01F2   241 ; FUNCTIONAL DESCRIPTION:
                                     01F2   242 ;
                                     01F2   243 ; THIS ROUTINE IS CALLED BY THE RSX-11M AME WHEN A COMMAND LINE IS NEEDED.
                                     01F2   244 ;
                                     01F2   245 ; INPUTS:
                                     01F2   246 ;
                                     01F2   247 ;	AP =	.LONG	1
                                     01F2   248 ;		.LONG	CMD DESC ADDRESS
                                     01F2   249 ;
                                     01F2   250 ; OUTPUTS:
                                     01F2   251 ;
                                     01F2   252 ;	THE DESCRIPTOR IS FILLED IN
                                     01F2   253 ;
                                     01F2   254 ;	R0 = 0 IF NO COMMAND AVAILABLE
                                     01F2   255 ;	R0 = 1 IF COMMAND AVAILABLE
                                     01F2   256 ;--
                                     01F2   257 GET_CMD:				;
                               0000  01F2   258 	.WORD	0
         04 BC       0014'CF     7D  01F4   259 	MOVQ	W^GCML,@4(AP)		; DEPOSIT COMMAND DATA
            50       0014'CF     9A  01FA   260 	MOVZBL	W^GCML,R0		; INSERT 0 FOR NULL COMMAND 
                          07     13  01FF   261 	BEQL	20$			; IF EQL THEN NO COMMAND
                     0014'CF     7C  0201   262 	CLRQ	W^GCML			; SET NO COMMAND
            50            01     D0  0205   263 	MOVL	#1,R0			; SET SUCCESS
                                 04  0208   264 20$:	RET				; RETURN
                                     0209   265  
                                     0209   266 	.END	RSX$MAIN		;
RSXMAIN         - RSX AME COMMAND PROCESSOR                      22-AUG-1978 05:09:25   VAX-11 MACRO X0.3-11               Page   7
SYMBOL TABLE                                                                                                                     (3)

$$.TAB         = 000000A4 R     03   CLI$K_OUTSPEC  = 00000002            CLI$V_PARMDEF  = 00000003            
$$.TABEND      = 000000E8 R     03   CLI$K_PARDONE  = 00000003            CLI$V_PARMPRS  = 00000000            
$$.TMP         = 44000000            CLI$K_QDBITS     00000014            CLI$V_PARMREQ  = 00000000            
$$.TMP1        = 00000001            CLI$K_QUALDEF    00000014            CLI$V_PRITYP   = 00000004            
$$.TMP2        = 000000CF            CLI$K_REQDESC    0000001C            CLI$V_QDEXPA   = 00000002            
$CLI.          = 00000000 R     01   CLI$K_UTILOPR  = 00000000            CLI$V_QDUSRV   = 00000001            
$CLI..         = 0000001C R     01   CLI$K_VALCONV  = 00000004            CLI$V_QUALEXP  = 00000001            
ACTIVATE_IMAGE   000001AA R     04   CLI$K_WORKAREA   00000080            CLI$V_QUALTRU  = 00000000            
BIT...         = 0000001A            CLI$L_CLIFLAG    00000018            CLI$V_SUBTYP   = 00000000            
CLI$A_ABSACT     00000014            CLI$L_INIARGCNT  00000000            CLI$V_TRMVRBLV = 00000008            
CLI$A_ERRACT     00000004            CLI$L_LINKFLAG   00000014            CLI$V_VERIFY   = 00000002            
CLI$A_FLSACT     00000010            CLI$L_RQVALU     0000000C            CLI$V_VFYINP   = 00000005            
CLI$A_IMGFILED   00000010            CLI$L_USRVAL     00000014            CLI$W_QDVALSIZ   00000004            
CLI$A_IMGHDADR   0000000C            CLI$L_WORKAREA   00000000            CLI$W_RQSIZE     00000008            
CLI$A_PROGXFER   00000004            CLI$M_ABSADR   = 00000002            CLI$W_SERVCOD    00000001            
CLI$A_PRSACT     00000010            CLI$M_ALLOCCUR = 00000001            CLIDAT           00000000 R     01   
CLI$A_QDVALADR   00000008            CLI$M_BATCH    = 00000008            DEV$V_TRM        ********   X   04   
CLI$A_QUALST     00000018            CLI$M_CONCATINP= 00000002            FAB$B_BID        00000000            
CLI$A_RQADDR     0000000C            CLI$M_DBGEXCP  = 00010000            FAB$B_BKS        0000003E            
CLI$A_TRUACT     0000000C            CLI$M_DBGTRU   = 00000002            FAB$B_BLN        00000001            
CLI$A_UTILSERV   00000008            CLI$M_DEBUG    = 00000001            FAB$B_DNS        00000035            
CLI$B_BITNUM     00000001            CLI$M_DUMMY    = 00000002            FAB$B_FAC        00000016            
CLI$B_QDBLKSIZ   00000000            CLI$M_EXPNAM   = 00000004            FAB$B_FNS        00000034            
CLI$B_QDCODE     00000001            CLI$M_INDIRECT = 00000010            FAB$B_FSZ        0000003F            
CLI$B_QDFLGS     00000002            CLI$M_KEYVALU  = 00000002            FAB$B_ORG        0000001D            
CLI$B_QDSTAT     00000003            CLI$M_LASTVAL  = 00000001            FAB$B_RAT        0000001E            
CLI$B_RQFLGS     00000002            CLI$M_MOREINP  = 00000004            FAB$B_RFM        0000001F            
CLI$B_RQINDX     00000001            CLI$M_MOREVALS = 00000001            FAB$B_RTV        0000001C            
CLI$B_RQSTAT     00000003            CLI$M_PARMDEF  = 00000008            FAB$B_SHR        00000017            
CLI$B_RQTYPE     00000000            CLI$M_PARMPRS  = 00000001            FAB$C_BID      = 00000003            
CLI$C_QDBITS     00000014            CLI$M_PARMREQ  = 00000001            FAB$C_BLN        00000050            
CLI$C_QUALDEF    00000014            CLI$M_QDEXPA   = 00000004            FAB$C_FIX      = 00000001            
CLI$C_REQDESC    0000001C            CLI$M_QDUSRV   = 00000002            FAB$C_HSH      = 00000030            
CLI$C_WORKAREA   00000080            CLI$M_QUALEXP  = 00000002            FAB$C_IDX      = 00000020            
CLI$K_ASCIIVAL = 00000041            CLI$M_QUALTRU  = 00000001            FAB$C_MAXRFM   = 00000003            
CLI$K_CLISERV  = 00000005            CLI$M_TRMVRBLV = 00000300            FAB$C_REL      = 00000010            
CLI$K_ENDPRM1  = 00000030            CLI$M_VERIFY   = 00000004            FAB$C_RFM_DFLT = 00000002            
CLI$K_ENDPRM2  = 00000031            CLI$M_VFYINP   = 00000020            FAB$C_SEQ      = 00000000            
CLI$K_ENDPRM3  = 00000032            CLI$Q_QDVALDESC  00000004            FAB$C_UDF      = 00000000            
CLI$K_ENDPRM4  = 00000033            CLI$Q_RQDESC     00000008            FAB$C_VAR      = 00000002            
CLI$K_FILSPEC  = 00000044            CLI$S_PRITYP   = 00000004            FAB$C_VFC      = 00000003            
CLI$K_GETCMD   = 00000001            CLI$S_SUBTYP   = 00000004            FAB$K_BLN        00000050            
CLI$K_GETOPT   = 00000003            CLI$S_TRMVRBLV = 00000002            FAB$L_ALQ        00000010            
CLI$K_GETQUAL  = 00000002            CLI$V_ABSADR   = 00000001            FAB$L_CTX        00000018            
CLI$K_INITPRS  = 00000000            CLI$V_ALLOCCUR = 00000000            FAB$L_DEV        00000040            
CLI$K_INPSPEC  = 00000001            CLI$V_BATCH    = 00000003            FAB$L_DNA        00000030            
CLI$K_INPUT1   = 00000010            CLI$V_CONCATINP= 00000001            FAB$L_FNA        0000002C            
CLI$K_INPUT2   = 00000011            CLI$V_DBGEXCP  = 00000010            FAB$L_FOP        00000004            
CLI$K_INPUT3   = 00000012            CLI$V_DBGTRU   = 00000001            FAB$L_JNL        00000020            
CLI$K_INPUT4   = 00000013            CLI$V_DEBUG    = 00000000            FAB$L_MRN        00000038            
CLI$K_KEYVAL   = 00000043            CLI$V_DUMMY    = 00000001            FAB$L_NAM        00000028            
CLI$K_KEYWORD  = 00000042            CLI$V_EXPNAM   = 00000002            FAB$L_SDC        00000044            
CLI$K_NUMERVAL = 00000040            CLI$V_INDIRECT = 00000004            FAB$L_STS        00000008            
CLI$K_OUTPUT1  = 00000020            CLI$V_KEYVALU  = 00000001            FAB$L_STV        0000000C            
CLI$K_OUTPUT2  = 00000021            CLI$V_LASTVAL  = 00000000            FAB$L_XAB        00000024            
CLI$K_OUTPUT3  = 00000022            CLI$V_MOREINP  = 00000002            FAB$M_BIO      = 00000020            
CLI$K_OUTPUT4  = 00000023            CLI$V_MOREVALS = 00000000            FAB$M_BLK      = 00000008            
RSXMAIN         - RSX AME COMMAND PROCESSOR                      22-AUG-1978 05:09:25   VAX-11 MACRO X0.3-11               Page   8
SYMBOL TABLE                                                                                                                     (3)

FAB$M_BRO      = 00000040            FAB$V_CTG      = 00000014            GET_CMD          000001F2 R     04   
FAB$M_CBT      = 00200000            FAB$V_DEL      = 00000002            IFD$C_LENGTH     00000014            
FAB$M_CIF      = 02000000            FAB$V_DFW      = 00000005            IFD$K_LENGTH     00000014            
FAB$M_CR       = 00000002            FAB$V_DLT      = 0000000F            IFD$L_CMKFIADR   0000000C            
FAB$M_CTG      = 00100000            FAB$V_DMO      = 0000000C            IFD$M_EXEONLY  = 00000001            
FAB$M_DEL      = 00000004            FAB$V_ESC      = 0000001B            IFD$V_EXEONLY  = 00000000            
FAB$M_DFW      = 00000020            FAB$V_EXE      = 00000007            IFD$W_CHAN       00000008            
FAB$M_DLT      = 00008000            FAB$V_FTN      = 00000000            IFD$W_CMCHAN     0000000A            
FAB$M_DMO      = 00001000            FAB$V_GET      = 00000001            IFD$W_FILNAMOFF  00000002            
FAB$M_ESC      = 08000000            FAB$V_INP      = 00000013            IFD$W_FLAGS      00000010            
FAB$M_EXE      = 00000080            FAB$V_JNL      = 00000016            IFD$W_SIZE       00000000            
FAB$M_FTN      = 00000001            FAB$V_KFO      = 0000001E            INRAB            000000A4 R     03   
FAB$M_GET      = 00000002            FAB$V_MSE      = 00000004            NAM$B_BID        00000000            
FAB$M_INP      = 00080000            FAB$V_MXV      = 00000001            NAM$B_BLN        00000001            
FAB$M_JNL      = 00400000            FAB$V_NAM      = 00000018            NAM$B_CURLVL     00000038            
FAB$M_KFO      = 40000000            FAB$V_NEF      = 0000000A            NAM$B_ESL        0000000B            
FAB$M_MSE      = 00000010            FAB$V_NFS      = 00000010            NAM$B_ESS        0000000A            
FAB$M_MXV      = 00000002            FAB$V_NIL      = 00000005            NAM$B_RSL        00000003            
FAB$M_NAM      = 01000000            FAB$V_OFP      = 0000001D            NAM$B_RSS        00000002            
FAB$M_NEF      = 00000400            FAB$V_ORG      = 00000004            NAM$C_BID      = 00000002            
FAB$M_NFS      = 00010000            FAB$V_POS      = 00000008            NAM$C_BLN        00000038            
FAB$M_NIL      = 00000020            FAB$V_PPF      = 00000012            NAM$C_BLN_DIRWC  00000050            
FAB$M_OFP      = 20000000            FAB$V_PPF_IND  = 0000000E            NAM$C_DVI      = 00000010            
FAB$M_POS      = 00000100            FAB$V_PPF_RAT  = 00000006            NAM$C_MAXRSS   = 00000080            
FAB$M_PPF      = 00040000            FAB$V_PRN      = 00000002            NAM$C_MAXRSSLCL= 00000060            
FAB$M_PPF_IND  = 00004000            FAB$V_PUT      = 00000000            NAM$K_BLN        00000038            
FAB$M_PPF_RAT  = 00003FC0            FAB$V_RCK      = 00000017            NAM$K_BLN_DIRWC  00000050            
FAB$M_PRN      = 00000004            FAB$V_RWC      = 0000000B            NAM$L_DIRWCC1    00000040            
FAB$M_PUT      = 00000001            FAB$V_RWO      = 00000007            NAM$L_DIRWCC2    00000044            
FAB$M_RCK      = 00800000            FAB$V_SCF      = 0000000E            NAM$L_DIRWCC3    00000048            
FAB$M_RWC      = 00000800            FAB$V_SHRDEL   = 00000002            NAM$L_DIRWCC4    0000004C            
FAB$M_RWO      = 00000080            FAB$V_SHRGET   = 00000001            NAM$L_DWC        00000038            
FAB$M_SCF      = 00004000            FAB$V_SHRPUT   = 00000000            NAM$L_ESA        0000000C            
FAB$M_SHRDEL   = 00000004            FAB$V_SHRUPD   = 00000003            NAM$L_FNB        00000034            
FAB$M_SHRGET   = 00000002            FAB$V_SPL      = 0000000D            NAM$L_RLF        00000010            
FAB$M_SHRPUT   = 00000001            FAB$V_SQO      = 00000006            NAM$L_RSA        00000004            
FAB$M_SHRUPD   = 00000008            FAB$V_SUP      = 00000002            NAM$L_WCC        00000030            
FAB$M_SPL      = 00002000            FAB$V_TEF      = 0000001C            NAM$M_DIR_LVLS = 00E00000            
FAB$M_SQO      = 00000040            FAB$V_TMD      = 00000004            NAM$M_EXP_DEV  = 00000080            
FAB$M_SUP      = 00000004            FAB$V_TMP      = 00000003            NAM$M_EXP_DIR  = 00000040            
FAB$M_TEF      = 10000000            FAB$V_TRN      = 00000004            NAM$M_EXP_NAME = 00000004            
FAB$M_TMD      = 00000010            FAB$V_UFM      = 0000001A            NAM$M_EXP_TYPE = 00000002            
FAB$M_TMP      = 00000008            FAB$V_UFO      = 00000011            NAM$M_EXP_VER  = 00000001            
FAB$M_TRN      = 00000010            FAB$V_UPD      = 00000003            NAM$M_GRP_MBR  = 00080000            
FAB$M_UFM      = 04000000            FAB$V_UPI      = 00000006            NAM$M_HIGHVER  = 00008000            
FAB$M_UFO      = 00020000            FAB$V_WCK      = 00000009            NAM$M_LOWVER   = 00004000            
FAB$M_UPD      = 00000008            FAB$W_BLS        0000003C            NAM$M_NODE     = 00020000            
FAB$M_UPI      = 00000040            FAB$W_DEQ        00000014            NAM$M_PPF      = 00010000            
FAB$M_WCK      = 00000200            FAB$W_IFI        00000002            NAM$M_QUOTED   = 00040000            
FAB$S_ORG      = 00000004            FAB$W_MRS        00000036            NAM$M_WILDCARD = 00000100            
FAB$S_PPF_RAT  = 00000008            FILCHAN          00000004 R     03   NAM$M_WILD_DIR = 00100000            
FAB$V_BIO      = 00000005            FILECTX          00000010 R     03   NAM$M_WILD_GRP = 01000000            
FAB$V_BLK      = 00000003            FILEFAB          0000001C R     03   NAM$M_WILD_MBR = 02000000            
FAB$V_BRO      = 00000006            FILENAME         000001F7 R     03   NAM$M_WILD_NAME= 00000020            
FAB$V_CBT      = 00000015            GBL...         = 00000000            NAM$M_WILD_SFD1= 02000000            
FAB$V_CIF      = 00000019            GCML             00000014 R     03   NAM$M_WILD_SFD2= 04000000            
FAB$V_CR       = 00000001            GETNEXT          0000006B R     04   NAM$M_WILD_SFD3= 08000000            
RSXMAIN         - RSX AME COMMAND PROCESSOR                      22-AUG-1978 05:09:25   VAX-11 MACRO X0.3-11               Page   9
SYMBOL TABLE                                                                                                                     (3)

NAM$M_WILD_SFD4= 10000000            RAB$B_ROP1       00000005            RAB$V_EOF      = 00000008            
NAM$M_WILD_SFD5= 20000000            RAB$B_ROP2       00000006            RAB$V_FDL      = 00000006            
NAM$M_WILD_SFD6= 40000000            RAB$B_ROP3       00000007            RAB$V_HSH      = 00000007            
NAM$M_WILD_SFD7= 80000000            RAB$B_TMO        0000001F            RAB$V_KGE      = 00000015            
NAM$M_WILD_TYPE= 00000010            RAB$C_BID      = 00000001            RAB$V_KGT      = 00000016            
NAM$M_WILD_UFD = 01000000            RAB$C_BLN        00000044            RAB$V_LIM      = 0000000E            
NAM$M_WILD_VER = 00000008            RAB$C_KEY      = 00000001            RAB$V_LOA      = 0000000D            
NAM$S_DIR_LVLS = 00000003            RAB$C_RFA      = 00000002            RAB$V_LOC      = 00000010            
NAM$T_DVI        00000014            RAB$C_SEQ      = 00000000            RAB$V_MAS      = 00000005            
NAM$V_DIR_LVLS = 00000015            RAB$K_BLN        00000044            RAB$V_NLK      = 00000014            
NAM$V_EXP_DEV  = 00000007            RAB$L_BKT        00000038            RAB$V_NXR      = 00000017            
NAM$V_EXP_DIR  = 00000006            RAB$L_CTX        00000018            RAB$V_PMT      = 0000001E            
NAM$V_EXP_NAME = 00000002            RAB$L_DCT        00000038            RAB$V_PPF_IND  = 0000000E            
NAM$V_EXP_TYPE = 00000001            RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            
NAM$V_EXP_VER  = 00000000            RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            
NAM$V_GRP_MBR  = 00000013            RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            
NAM$V_HIGHVER  = 0000000F            RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            
NAM$V_LOWVER   = 0000000E            RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            
NAM$V_NODE     = 00000011            RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            
NAM$V_PPF      = 00000010            RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            
NAM$V_QUOTED   = 00000012            RAB$L_STS        00000008            RAB$V_TPT      = 00000001            
NAM$V_WILDCARD = 00000008            RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            
NAM$V_WILD_DIR = 00000014            RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            
NAM$V_WILD_GRP = 00000018            RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            
NAM$V_WILD_MBR = 00000019            RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            
NAM$V_WILD_NAME= 00000005            RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            
NAM$V_WILD_SFD1= 00000019            RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            
NAM$V_WILD_SFD2= 0000001A            RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            
NAM$V_WILD_SFD3= 0000001B            RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            
NAM$V_WILD_SFD4= 0000001C            RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            
NAM$V_WILD_SFD5= 0000001D            RAB$M_KGE      = 00200000            RESULT           0000006C R     03   
NAM$V_WILD_SFD6= 0000001E            RAB$M_KGT      = 00400000            RMS$_EOF         ********   X   04   
NAM$V_WILD_SFD7= 0000001F            RAB$M_LIM      = 00004000            RSX$A_SYSINPUT   ********   X   04   
NAM$V_WILD_TYPE= 00000004            RAB$M_LOA      = 00002000            RSX$C_GPROMPT    ********W G    01   
NAM$V_WILD_UFD = 00000018            RAB$M_LOC      = 00010000            RSX$G_FAB        ********   X   04   
NAM$V_WILD_VER = 00000003            RAB$M_MAS      = 00000020            RSX$MAIN         00000000 RG    04   
NAM$W_DID        0000002A            RAB$M_NLK      = 00100000            RSX$RUNIMAGE     ********   X   04   
NAM$W_DID_NUM    0000002A            RAB$M_NXR      = 00800000            RSX$S_SYSINPUT   ********   X   04   
NAM$W_DID_RVN    0000002E            RAB$M_PMT      = 40000000            RSX$T_GPROMPT    ********W G    01   
NAM$W_DID_SEQ    0000002C            RAB$M_PPF_IND  = 00004000            RSX$T_SYSDEF     ********   X   04   
NAM$W_FID        00000024            RAB$M_PPF_RAT  = 00003FC0            RSX$T_USERDEF    ********   X   04   
NAM$W_FID_NUM    00000024            RAB$M_PTA      = 20000000            RSX$_ACCVIO    = 00068044            
NAM$W_FID_RVN    00000028            RAB$M_RAH      = 00000200            RSX$_BADLIBREF = 0006806C            
NAM$W_FID_SEQ    00000026            RAB$M_RLK      = 00080000            RSX$_BADSTACK  = 0006804C            
NAM$W_PRV_DID    0000003A            RAB$M_RNE      = 01000000            RSX$_BREAK     = 0006800C            
OUTPUT_ERROR     000001B7 R     04   RAB$M_RNF      = 08000000            RSX$_EXITSTATUS= 00068640            
PROMPT           000000F0 R     03   RAB$M_TMO      = 02000000            RSX$_EXTERNABRT= 0006805C            
PROMPT_DESC      000000E8 R     03   RAB$M_TPT      = 00000002            RSX$_ILLINST   = 0006802C            
PROMPT_SIZ     = 00000006            RAB$M_UIF      = 00000010            RSX$_IMAGETERM = 00068084            
RAB$B_BID        00000000            RAB$M_ULK      = 00040000            RSX$_INSFDYNMEM= 00068054            
RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            RSX$_IOT       = 00068014            
RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            RSX$_LIBNOTFND = 00068074            
RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            RSX$_LOADERROR = 0006807C            
RAB$B_MBC        00000037            RAB$V_ASY      = 00000000            RSX$_NOCOMM    = 00068094            
RAB$B_MBF        00000036            RAB$V_BIO      = 0000000B            RSX$_NONRSXEMT = 0006801C            
RAB$B_PSZ        00000034            RAB$V_CCO      = 0000001F            RSX$_NOPMD     = 00068332            
RAB$B_RAC        0000001E            RAB$V_CVT      = 0000001A            RSX$_NOSUCHDEV = 00068322            
RSXMAIN         - RSX AME COMMAND PROCESSOR                      22-AUG-1978 05:09:25   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (3)

RSX$_NOTSKIMG  = 00068064            
RSX$_ODDADDR   = 00068034            
RSX$_PMD       = 0006832A            
RSX$_REGMSG    = 0006808C            
RSX$_RESERVED  = 00068004            
RSX$_TBIT      = 0006803C            
RSX$_TRAP      = 00068024            
RSX$_VERIFYCMD = 00068648            
RSXARGS          00000000 R     03   
SUBNAME          00000229 R     03   
SYS$CLOSE        ********  GX   04   
SYS$EXIT         ********   X   04   
SYS$GET          ********  GX   04   
SYS$OPEN         ********  GX   04   
SYS$PUTMSG       ********   X   04   
UTLBUF           000000F7 R     03   


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        0000001C      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000080      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXMAINIMP       00000234      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT LONG  
RSXMAINCODE      00000209      04     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
8076. BYTES LEFT IN FREE MEMORY POOL.
1078. BYTES OF RECLAIMED MEMORY.
OBJ$:RSXMAIN,LIS$:RSXMAIN/-SP=EXECML$/ML,LIB$:R/ML,SRC$:RSXMAIN
84 MLB DIR RDS - 959 GETS TO DEFINE 38 MACROS. 70 INTER. FILE WRITES. 
