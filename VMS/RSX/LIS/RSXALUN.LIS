RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      45  RSX11M ALUN$ DIRECTIVE
   (3)     171  RSX$SYS_DEVS - ASSIGN SYSTEM DEVICE
   (6)     390  RSX$BUILDLUT - BUILD LUT ENTRY
   (7)     461  RSX$SRCHDEV - SEARCH LOGICAL NAME LIST FOR MATC
   (8)     520  RSX$TRANS_LOGIC - TRANSLATE LOGICAL NAME
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page   1
V06.1                                                                                                                            (1)

                                     0000     1 	.TITLE RSXALUN - RSX11M/AME ASSIGN LUN DIRECTIVE
                                     0000     2 	.IDENT	/V06.1/		;
                                     0000     3 ;
                                     0000     4 ; COPYRIGHT (C) 1978
                                     0000     5 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     6 ;
                                     0000     7 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     8 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000     9 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    10 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    11 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    12 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    13 ; REMAIN IN DEC.
                                     0000    14 ;
                                     0000    15 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    16 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    17 ; CORPORATION.
                                     0000    18 ;
                                     0000    19 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    20 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    21 
                                     0000    22 ;++
                                     0000    23 ; FACILITY:
                                     0000    24 ;
                                     0000    25 ; 	VAX/VMS RSX11M/AME.
                                     0000    26 ;
                                     0000    27 ; ABSTRACT:
                                     0000    28 ;
                                     0000    29 ;	RSX11M ASSIGN LUN DIRECTIVE.
                                     0000    30 ;
                                     0000    31 ; AUTHOR:
                                     0000    32 ;
                                     0000    33 ;	R.HEINEN 4-NOV-76
                                     0000    34 ;--
                                     0000    35 ;
                                     0000    36 ; EXTERNAL SYMBOLS
                                     0000    37 ;
                                     0000    38 	$RSXDEF			; DEFINE RSX SYMBOLS
                                     0000    39 	DRERR$			; DEFINE DIRECTIVE ERRORS
                                     0000    40 	$DEVDEF			; DEFINE DEVICE CHARACTERISTICS BITS
                                     0000    41 	$FABDEF			; DEFINE FAB
                                     0000    42 	$RABDEF			; DEFINE RAB
                                     0000    43 	
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page   2
V06.1           RSX11M ALUN$ DIRECTIVE                                                                                           (2)

                                     0000    45 	.SBTTL RSX11M ALUN$ DIRECTIVE
                                     0000    46  
                                 00000000    47 	.PSECT	RSXCODE,NOWRT,SHR,PIC
                                     0000    48 ;++
                                     0000    49 ; RSX$ALUN - RSX ASSIGN LUN DIRECTIVE
                                     0000    50 ;
                                     0000    51 ; FUNCTIONAL DESCRIPTION:
                                     0000    52 ;
                                     0000    53 ; THIS ROUTINE HANDLES RSX11M "ALUN$" DIRECTIVES.
                                     0000    54 ;
                                     0000    55 ; THE FIRST ACTION IS TO VALIDATE THE DEVICE NAME, UNIT AND LUN.
                                     0000    56 ; NEXT, THE PREVIOUS LUN ASSIGNMENT IS DEASSIGNED AND THE CURRENT I/O CANCELED.
                                     0000    57 ;
                                     0000    58 ; THE NEXT STEP IS TO BUILD AN ASCII DEVICE NAME IN THE RSX11M STYLE
                                     0000    59 ; FROM THE DEVICE NAME AND UNIT PASSED IN. THIS STRING IS TRANSLATED AND
                                     0000    60 ; IF NO TRANSLATION RESULTS, THE DEVICE AND UNIT ARE MADE INTO A VAX/VMS
                                     0000    61 ; PHYSICAL DEVICE NAME AS FOLLOWS:
                                     0000    62 ;
                                     0000    63 ;	THE FIRST TWO CHARACTERS OF DEVICE NAME MAP DIRECTLY.
                                     0000    64 ;
                                     0000    65 ;	THE RSX UNIT IS DIVIDED BY 16 - THE QUOTIENT IS ADDED TO THE
                                     0000    66 ;	CHARACTER "A" AND THE RESULTANT CHARACTER IS CONSIDERED AS
                                     0000    67 ;	A CONTROLLER. THE REMAINDER IS CONSIDERED TO BE THE UNIT.
                                     0000    68 ;
                                     0000    69 ; IF A TRANSLATION RESLUTS, THE TRANSLATION IS DONE THREE TIMES AND THE
                                     0000    70 ; EFFECTIVE RESULT IS USED AS THE SOURCE FOR AN ASSIGN CHANNEL. 
                                     0000    71 ; AFTER EACH TRANSLATION, THE KNOWN AME LOGICAL DEVICE LIST IS SEARCHED TO
                                     0000    72 ; DETECT ASSIGNMENTS TO TI/CL/CO.
                                     0000    73 ;
                                     0000    74 ; INPUTS:
                                     0000    75 ;
                                     0000    76 ;	R5 = ADDRESS OF THE DPB
                                     0000    77 ;	R6 = ADDRESS OF THE IMAGE STACK
                                     0000    78 ;	R10 = ADDRESS OF THE IMAGE IMPURE DATA BASE
                                     0000    79 ;	R11 = ADDRESS OF THE IMAGE
                                     0000    80 ;
                                     0000    81 ; OUTPUTS:
                                     0000    82 ;
                                     0000    83 ;	R6,R10,R11 ARE PRESERVED.
                                     0000    84 ;
                                     0000    85 ; DSW RETURN CODES:
                                     0000    86 ;
                                     0000    87 ;	IS.SUC	SUCCESSFUL
                                     0000    88 ;	IE.ILU	ILLEGAL LUN NUMBER
                                     0000    89 ;	IE.IDU	UNKNOWN DEVICE
                                     0000    90 ;	IE.NOD	I/O CHANNEL QUOTA EXCEEDED -- SS$_NOIOCHAN
                                     0000    91 ;	IE.RSU	DEVICE IS ALLOCATED TO ANOTHER PROCESS -- SS$_DEVALLOC
                                     0000    92 ;	IE.DUN  DEVICE UNAVAILABLE
                                     0000    93 ;--
                                     0000    94 RSX$ALUN::				; ASSIGN LUN DIRECTIVE
            51            85     9A  0000    95 	MOVZBL	(R5)+,R1		; GET SPECIFIED LUN NUMBER
                          09     13  0003    96 	BEQL	5$			; IF EQL THEN ILLEGAL
                          55     D6  0005    97 	INCL	R5			; POINT TO DEVICENAME
       0164 CA            51     91  0007    98 	CMPB	R1,I_NLUN(R10)		; IN RANGE WITH HEADER DATA?
                          0A     1B  000C    99 	BLEQU	10$			; IF GTRU THEN NO
                                     000E   100 ;
                                     000E   101 ; ILLEGAL LUN NUMBER
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page   3
V06.1           RSX11M ALUN$ DIRECTIVE                                                                                           (2)

                                     000E   102 ;
                                     000E   103 5$:	$DSW	#IE.ILU			; SET STATUS AND RETURN
                                     0018   104 ;
                                     0018   105 ; VALID DEVICE UNIT PAIR?
                                     0018   106 ;
                          65     B5  0018   107 10$:	TSTW	(R5)			; NO ZERO DEVICE NAMES
                          0C     13  001A   108 	BEQL	12$			; IF NEQ THEN TRY IT
            65       FFFF 8F     B1  001C   109 	CMPW	#-1,(R5)		; SPECIAL TEST FOR MINUS ONE
                          05     13  0021   110 	BEQL	12$			; IF EQL THEN ILLEGAL HERE
                       03 A5     95  0023   111 	TSTB	3(R5)			; UNIT NUMBER FIT IN A BYTE?
                          0A     13  0026   112 	BEQL	15$			; IF EQL THEN YES
                                     0028   113 ;
                                     0028   114 ; INVALID DEVICE/UNIT SPECIFIED
                                     0028   115 ;
                                     0028   116 12$:	$DSW	#IE.IDU			; SET UNKNOWN DEVICE
                                     0032   117 ;
                                     0032   118 ; LUN PREVIOUSLY ASSIGNED?
                                     0032   119 ;
            58       0168 DA41   D0  0032   120 15$:	MOVL	@I_LUT(R10)[R1],R8	; GET LUT ENTRY ADDRESS
                          54     13  0038   121 	BEQL	50$			; IF EQL THEN NOT ASSIGNED YET
         2E A8            65     B1  003A   122 	CMPW	(R5),LUT_INFONAME(R8)	; SAME NAME?
                          08     12  003E   123 	BNEQ	20$			; IF NEQ THEN NO
         30 A8         02 A5     B1  0040   124 	CMPW	2(R5),LUT_INFOUNIT(R8)	; SAME UNIT?
                          0D     12  0045   125 	BNEQ	25$			; IF NEQ THEN NO
                                 05  0047   126 	RSB
                       02 A5     B5  0048   127 20$:	TSTW	2(R5)			; NO UNIT?
                          07     12  004B   128 	BNEQ	25$			; IF NEQ THEN NO
         10 A8            65     B1  004D   129 	CMPW	(R5),LUT_RSXNAME(R8)	; SAME NAME
                          01     12  0051   130 	BNEQ	25$			; IF NEQ THEN NO
                                 05  0053   131 	RSB
                                     0054   132 ;
                                     0054   133 ; EXISTING ENTRY - DEASSIGN
                                     0054   134 ;
                     0168 DA41   D4  0054   135 25$:	CLRL	@I_LUT(R10)[R1]		; DEASSIGN LUN!
                       08 A8     B7  0059   136 	DECW	LUT_REF(R8)		; ADJUST REFERENCE COUNT
                          30     12  005C   137 	BNEQ	50$			; IF NEQ THEN STILL IN USE
            50            68     0F  005E   138 	REMQUE	(R8),R0			; REMOVE FROM LIST
                                     0061   139 ;
                                     0061   140 ; DEASSIGN PREVIOUS CHANNEL
                                     0061   141 ;
                       16 A8     95  0061   142 	TSTB	LUT_TYPE(R8)		; IF RMS TYPE THEN DO NOT DEASSIGN
                          13     12  0064   143 	BNEQ	30$			; IF NEQ THEN NOT RMS CONTROLLED
                                     0066   144 ;
                                     0066   145 ; CLOSE PREVIOUS FILE
                                     0066   146 ;
       0002'CF         0C A8     B0  0066   147 	MOVW	LUT_CHAN(R8),W^RSX$G_FAB+FAB$W_IFI;
                                     006C   148 	$CLOSE	FAB=W^RSX$G_FAB
                          1E     11  0077   149 	BRB	55$			; CONTINUE
                                     0079   150 ;
                                     0079   151 ; SEE IF CONTROL C HAS BEEN ENABLED - TERMINALS ONLY
                                     0079   152 ;
         0A A8            02     E1  0079   153 30$:	BBC	#LUTV_CTRLC,LUT_FLAGS(R8),40$; BR IF CTRLC NOT ENABLED
                          03         007D       
                          FF7F'  30  007E   154 	BSBW	RSX$CTRLCDSABL		; DISABLE THE CTRLC FUNCTION
                                     0081   155 ;
                                     0081   156 ; FINISH DEASSIGN
                                     0081   157 ;
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page   4
V06.1           RSX11M ALUN$ DIRECTIVE                                                                                           (2)

                                     0081   158 40$:	$DASSGN_S	LUT_CHAN(R8)	; DEASSIGN CHANNEL
                          09     11  008C   159 	BRB	55$			; CONTINUE
                                     008E   160 ;
                                     008E   161 ; ALLOCATE NEW LUT ENTRY BLOCK
                                     008E   162 ;
            51            36     9A  008E   163 50$:	MOVZBL	#LUT_SIZE,R1		; GET SIZE OF LUT ENTRY
                          FF6C'  30  0091   164 	BSBW	RSX$ALLOCATE		; ALLOCATE TABLE ENTRY
            58            50     D0  0094   165 	MOVL	R0,R8			; ADDRESS IT
                          20     BB  0097   166 55$:	PUSHR	#^M<R5>			; SAVE REGISTERS
            68            00     2C  0099   167 	MOVC5	#0,(R8),#0,#LUT_SIZE,(R8); ZERO BLOCK
            36            00         009C       
                          68         009E       
                          20     BA  009F   168 	POPR	#^M<R5>			; RESTORE REGISTERS
         10 A8            01     CE  00A1   169 	MNEGL	#1,LUT_RSXNAME(R8)	; SET NO NAME FOR RSX MATCH
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page   5
V06.1           RSX$SYS_DEVS - ASSIGN SYSTEM DEVICE                                                                              (3)

                                     00A5   171 	.SBTTL	RSX$SYS_DEVS - ASSIGN SYSTEM DEVICE
                                     00A5   172  
                                     00A5   173 	.ENABL	LSB
                                     00A5   174 ;++
                                     00A5   175 ; RSX$SYS_DEVS - ASSIGN SYSTEM DEVICE
                                     00A5   176 ;
                                     00A5   177 ; FUNCTIONAL DESCRIPTION:
                                     00A5   178 ;
                                     00A5   179 ; THIS IS THE ENTRY POINT TO THE ASSIGN LOGIC USED TO ASSIGN THE SYS$XXX
                                     00A5   180 ; DEVICES AT STARTUP TIME.
                                     00A5   181 ;
                                     00A5   182 ; INPUTS:
                                     00A5   183 ;
                                     00A5   184 ;	R6 = ADDRESS OF THE SYSTEM DEVICE LUT
                                     00A5   185 ;
                                     00A5   186 ; OUTPUTS:
                                     00A5   187 ;
                                     00A5   188 ;	R8 = ADDRESS OF THE REAL LUT
                                     00A5   189 ;--
                          56     DD  00A5   190 	PUSHL	R6			; SAVE R6
            50            65     3C  00A7   191 	MOVZWL	(R5),R0			; GET DEVICE NAME
            51         02 A5     9A  00AA   192 	MOVZBL	2(R5),R1		; GET UNIT
                          0308   30  00AE   193 	BSBW	RSX$SRCHDEV_BIN		; LOOK FOR BINARY KNOWN DEVICE
                          63     13  00B1   194 	BEQL	100$			; IE EQL THEN FOUND
                                     00B3   195 ;
                                     00B3   196 ; THE SPECIFIED DEVICE IS UNKNOWN 
                                     00B3   197 ;
            53         38 AA     9E  00B3   198 	MOVAB	I_SCRATCH+16(R10),R3	; ADDRESS PLACE FOR TARGET
         28 AA            53     D0  00B7   199 	MOVL	R3,I_SCRATCH(R10)	; SET UP DESC
         2C AA            53     D0  00BB   200 	MOVL	R3,I_SCRATCH+4(R10)	;
                          FF3E'  30  00BF   201 	BSBW	RSX$BLDASCDEV		; BUILD ASCII DEVICE NAME
            53         28 AA     C3  00C2   202 	SUBL3	I_SCRATCH(R10),R3,I_SCRATCH(R10); CALC SIZE
                       28 AA         00C6       
                          0192   30  00C8   203 	BSBW	400$			; TRANSLATE THE NAME ONCE - SAVE OLD
                          44     13  00CB   204 	BEQL	140$			; IF EQL THEN PPF FOUND
            07            50     E9  00CD   205 	BLBC	R0,65$			; IF LOW CLEAR THEN MAKE PHYSICAL
       0000'8F            50     B1  00D0   206 	CMPW	R0,#SS$_NOTRAN		; ANY TRANSLATION?
                          18     12  00D5   207 	BNEQ	70$			; IF YES THEN TRANSLATE AGAIN
                                     00D7   208 ;
                                     00D7   209 ; MAP DEVICE TO PHYSICAL DEVICE NAME DDCU:
                                     00D7   210 ;
            50            65     3C  00D7   211 65$:	MOVZWL	(R5),R0			; GET NAME
            51         02 A5     9A  00DA   212 	MOVZBL	2(R5),R1		; GET UNIT
            53         2C AA     D0  00DE   213 	MOVL	I_SCRATCH+4(R10),R3	; ADDRESS TARGET
         28 AA            53     D0  00E2   214 	MOVL	R3,I_SCRATCH(R10)	; SET UP DESC
                          FF17'  30  00E6   215 	BSBW	RSX$BLDPHYDEV		; BUILD PHYSICAL DEVICE
            53         28 AA     C3  00E9   216 	SUBL3	I_SCRATCH(R10),R3,I_SCRATCH(R10);
                       28 AA         00ED       
            59            04     9A  00EF   217 70$:	MOVZBL	#4,R9			; SET TRANSLATE LOOP COUNT
                          02CF   30  00F2   218 75$:	BSBW	RSX$SRCHDEV_ASC		; SEARCH THE ASCII LIST
                          1F     13  00F5   219 	BEQL	100$			; IF EQL THE FOUND
                          0163   30  00F7   220 80$:	BSBW	400$			; TRANSLATE  AGAIN
                          15     13  00FA   221 	BEQL	140$			; IF EQL THEN PPF FOUND
            0A            50     E9  00FC   222 	BLBC	R0,85$			; IF LOW CLEAR THEN DONE
       0000'8F            50     B1  00FF   223 	CMPW	R0,#SS$_NOTRAN		; NO TRANSLATION?
                          03     13  0104   224 	BEQL	85$			; IF EQL THEN DONE
            E9            59     F5  0106   225 	SOBGTR	R9,75$			; CONTINUE UNTIL DONE
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page   6
V06.1           RSX$SYS_DEVS - ASSIGN SYSTEM DEVICE                                                                              (3)

                          017F   31  0109   226 85$:	BRW	ASSIGN			; ASSIGN THE DEVICE
            59            04     D0  010C   227 90$:	MOVL	#4,R9			; CONTINUE TRANSLATION
                          E6     11  010F   228 	BRB	80$			;
                                     0111   229 ;
                                     0111   230 ; PPF FOUND
                                     0111   231 ;
            56            58     D0  0111   232 140$:	MOVL	R8,R6			; SET UP NEW LUT
                          45     11  0114   233 	BRB	175$			; CONTINUE
                                     0116   234 ;
                                     0116   235 ; KNOWN DEVICE
                                     0116   236 ;
         1E A8         1E A6     7D  0116   237 100$:	MOVQ	LUT_REALNAME(R6),LUT_REALNAME(R8); COPY NAME
         26 A8         26 A6     7D  011B   238 	MOVQ	LUT_REALNAME+8(R6),LUT_REALNAME+8(R8); TO NEW LUT
         2C AA         1F A6     9E  0120   239 	MOVAB	LUT_REALNAME+1(R6),I_SCRATCH+4(R10); SET UP NAME DESC
         28 AA         1E A6     9A  0125   240 	MOVZBL	LUT_REALNAME(R6),I_SCRATCH(R10);
         0A A6            03     E1  012A   241 	BBC	#LUTV_PRM,LUT_FLAGS(R6),90$; BR IF NOT PROCESS PERM
                          DD         012E       
            50            58     D0  012F   242 	MOVL	R8,R0			; DEALLOCATE NEW LUT
            51            36     9A  0132   243 	MOVZBL	#LUT_SIZE,R1		;
                          FEC8'  30  0135   244 	BSBW	RSX$DEALLOCATE		;
                       0C A6     B5  0138   245 110$:	TSTW	LUT_CHAN(R6)		; ALREADY ASSIGNED?
                          0D     13  013B   246 	BEQL	150$			; IF EQL THEN NO
                          0168   31  013D   247 	BRW	MERGE			; CONTINUE WITH KNOWN DEVICE
                                     0140   248 ;
                                     0140   249 ; OPEN PROCESS PERMANENT FILE
                                     0140   250 ;
                                     0140   251 RSX$SYS_DEVS::				; ENTRY
         2C AA         1F A6     9E  0140   252 	MOVAB	LUT_REALNAME+1(R6),I_SCRATCH+4(R10); SET UP NAME DESC
         28 AA         1E A6     9A  0145   253 	MOVZBL	LUT_REALNAME(R6),I_SCRATCH(R10);
                          0126   30  014A   254 150$:	BSBW	500$			; LOOK FOR ESCAPE STRING -- MAKE SURE
                          0C     13  014D   255 	BEQL	175$			; IF EQL THEN PPF FOUND
            13            50     E9  014F   256 	BLBC	R0,180$			; IF LOW CLEAR THEN DONEB
            50       0000'8F     B1  0152   257 	CMPW	#SS$_NOTRAN,R0		; NO TRANSLATION?
                          F1     12  0157   258 	BNEQ	150$			; IF NO THEN CONTINUE
                          0A     11  0159   259 	BRB	180$			;
         2C AA            04     C0  015B   260 175$:	ADDL	#4,I_SCRATCH+4(R10)	; SET UP DESC TO NAME
         28 AA            04     C2  015F   261 	SUBL	#4,I_SCRATCH(R10)	; 
                          0D     15  0163   262 	BLEQ	185$			;
         28 AA         5F 8F     3A  0165   263 180$:	LOCC	#^A/_/,I_SCRATCH(R10),@I_SCRATCH+4(R10); FIND START
                       2C BA         016A       
                          04     13  016C   264 	BEQL	185$			; IF EQL THEN NO "_"
         28 AA            50     7D  016E   265 	MOVQ	R0,I_SCRATCH(R10)	;
         28 AA            3A     3A  0172   266 185$:	LOCC	#^A/:/,I_SCRATCH(R10),@I_SCRATCH+4(R10); DELIMIT STRING
                       2C BA         0176       
         28 AA            50     C2  0178   267 	SUBL	R0,I_SCRATCH(R10)	;
         30 AA            32     9A  017C   268 	MOVZBL	#50,I_SCRATCH+8(R10)	; GET CHARACTERISTICS AND UNIT
            5E            32     C2  0180   269 	SUBL	#50,SP			; ALLOCATE AREA ON STACK
            54            5E     D0  0183   270 	MOVL	SP,R4			; COPY ADDRESS
         34 AA            54     D0  0186   271 	MOVL	R4,I_SCRATCH+12(R10);
                                     018A   272 	$GETDEV_S I_SCRATCH(R10),,I_SCRATCH+8(R10)
            26            50     E9  019D   273 	BLBC	R0,190$			; BR IF NOT FOUND
         12 A6            64     7D  01A0   274 	MOVQ	(R4),LUT_CHAR(R6)	; COPY CHARACTERISTICS
         1A A6         08 A4     D0  01A4   275 	MOVL	8(R4),LUT_CHAR+8(R6)	;
         30 A6         0C A4     B0  01A9   276 	MOVW	12(R4),LUT_INFOUNIT(R6)	; COPY BASE UNIT
            51         0E A4     3C  01AE   277 	MOVZWL	14(R4),R1		; ADDRESS NAME STRING
            51            6441   9E  01B2   278 	MOVAB	(R4)[R1],R1		; 
            54            61     9A  01B6   279 	MOVZBL	(R1),R4			; GET SIZE
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page   7
V06.1           RSX$SYS_DEVS - ASSIGN SYSTEM DEVICE                                                                              (3)

            6144       41 8F     83  01B9   280 	SUBB3	#^A/A/,(R1)[R4],R4	; GET CONTROLLER INDEX
                          54         01BE       
            54            10     C4  01BF   281 	MULL	#16,R4			;
         30 A6            54     A0  01C2   282 	ADDW	R4,LUT_INFOUNIT(R6)	;
            5E            32     C0  01C6   283 190$:	ADDL	#50,SP			;
            1D            50     E9  01C9   284 	BLBC	R0,200$			; IF LOW CLEAR THEN ASSUME RMS
         12 A6            02     E1  01CC   285 	BBC	#DEV$V_TRM,LUT_CHAR(R6),200$; IF NOT TERMINAL THEN RMS
                          18         01D0       
                                     01D1   286 	$ASSIGN_S	I_SCRATCH(R10),LUT_CHAN(R6); ASSIGN CHANNEL
            74            50     E9  01E0   287 	BLBC	R0,300$			; IF LOW CLEAR THEN ERROR
         16 A6            01     90  01E3   288 	MOVB	#LUTC_TRM,LUT_TYPE(R6)	; SET TERMINAL TYPE
                          52     11  01E7   289 	BRB	210$			; MERGE WITH OTHER ASSIGN LOGIC
                                     01E9   290 ;
                                     01E9   291 ; RMS MUST BE USED FOR ACCESS TO THIS DEVICE
                                     01E9   292 ;
            58       0000'CF     9E  01E9   293 200$:	MOVAB	W^RSX$G_FAB,R8		; ADDRESS RSX GENERAL FAB
                          55     DD  01EE   294 	PUSHL	R5
            68            00     2C  01F0   295 	MOVC5	#0,(R8),#0,#FAB$C_BLN,(R8); INITIALIZE THE FAB
       0050 8F            00         01F3       
                          68         01F7       
                          55   8ED0  01F8   296 	POPL	R5
         01 A8         50 8F     90  01FB   297 	MOVB	#FAB$C_BLN,FAB$B_BLN(R8);
            68            03     90  0200   298 	MOVB	#FAB$C_BID,FAB$B_BID(R8);
         2C A8         1F A6     9E  0203   299 	MOVAB	LUT_REALNAME+1(R6),FAB$L_FNA(R8);
         34 A8         1E A6     90  0208   300 	MOVB	LUT_REALNAME(R6),FAB$B_FNS(R8);
         1E A8            02     90  020D   301 	MOVB	#FAB$M_CR,FAB$B_RAT(R8)	;
         1F A8            02     90  0211   302 	MOVB	#FAB$C_VAR,FAB$B_RFM(R8); INSERT RECORD FORMAT
                                     0215   303 	$CREATE	FAB=R8			; OPEN FILE
            36            50     E9  021E   304 	BLBC	R0,300$			; IF LOW CLEAR THEN DONE
         0C A6         02 A8     B0  0221   305 	MOVW	FAB$W_IFI(R8),LUT_CHAN(R6); SAVE IFI VALUE AS CHANNEL
         12 A6            07     D0  0226   306 	MOVL	#DEV$M_REC!DEV$M_TRM!DEV$M_CCL,LUT_CHAR(R6)
         16 A6   00840000 8F     D0  022A   307 	MOVL	#132@16,LUT_CHAR+4(R6)	;
                       1A A6     D4  0232   308 	CLRL	LUT_CHAR+8(R6)		;
            06            04     F0  0235   309 	INSV	#FAB$M_PRN,#RAB$V_PPF_RAT,#RAB$S_PPF_RAT,LUT_CHAN(R6)
         0C A6            08         0238       
         0A A6            08     88  023B   310 210$:	BISB	#1@LUTV_PRM,LUT_FLAGS(R6); SET PERMANENT FILE
                       2E A6     B5  023F   311 	TSTW	LUT_INFONAME(R6)	; INFO NAME SET UP?
                          10     12  0242   312 	BNEQ	220$			; IF NEQ THEN YES
         2E A6       5024 8F     B0  0244   313 	MOVW	#^A/$P/,LUT_INFONAME(R6); INSERT PROPER NAME
         30 A6         FE A5     90  024A   314 	MOVB	-2(R5),LUT_INFOUNIT(R6)	; USE LUN AS UNIT
       00E4 DA            66     0E  024F   315 	INSQUE	(R6),@I_LOGNAME+4(R10)	; INSERT ON LIST
                          0051   31  0254   316 220$:	BRW	MERGE			; CONTINUE IN COMMON
            58            56     D0  0257   317 300$:	MOVL	R6,R8			; COPY FAULTY LUT ADDR
                          005E   31  025A   318 	BRW	ERROR			; CONTINUE IN ERROR PROCESSING
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page   8
V06.1           RSX$SYS_DEVS - ASSIGN SYSTEM DEVICE                                                                              (4)

                                     025D   320 ;
                                     025D   321 ; TRANSLATE ASCII STRING SUBROUTINE
                                     025D   322 ;
                          55     DD  025D   323 400$:	PUSHL	R5			; SAVE R5
            50         28 AA     9A  025F   324 	MOVZBL	I_SCRATCH(R10),R0	; GET SIZE OF NAME
         2C BA            50     2C  0263   325 	MOVC5	R0,@I_SCRATCH+4(R10),#0,#15,LUT_REALNAME+1(R8); SAVE IT
            0F            00         0267       
                       1F A8         0269       
         28 AA            50     83  026B   326 	SUBB3	R0,I_SCRATCH(R10),LUT_REALNAME(R8); SAVE SIZE
                       1E A8         026F       
                          02     11  0271   327 	BRB	510$			; CONTINUE
                          20     BB  0273   328 500$:	PUSHR	#^M<R5>			;
         2C BA         28 AA     28  0275   329 510$:	MOVC3	I_SCRATCH(R10),@I_SCRATCH+4(R10),I_SCRATCH+16(R10)
                       38 AA         027A       
         2C AA         38 AA     9E  027C   330 	MOVAB	I_SCRATCH+16(R10),I_SCRATCH+4(R10);
                          019D   30  0281   331 	BSBW	RSX$TRANS_LOGIC		; 
                          20     BA  0284   332 	POPR	#^M<R5>			;
         2C BA            1B     91  0286   333 	CMPB	#^X01B,@I_SCRATCH+4(R10); ESCAPE?
                                 05  028A   334 	RSB
                                     028B   335  
                                     028B   336 	.DSABL	LSB
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page   9
V06.1           RSX$SYS_DEVS - ASSIGN SYSTEM DEVICE                                                                              (5)

                                     028B   338 ;
                                     028B   339 ; ASSIGN LUN STEP FOUR *************************************************
                                     028B   340 ;
                                     028B   341 ; ASSIGN CHANNEL TO WHATEVER IS NOW IN SCRATCH AREA
                                     028B   342 ;
                                     028B   343 ASSIGN:
                                     028B   344 	$ASSIGN_S	I_SCRATCH(R10),LUT_CHAN(R8); ASSIGN CHANNEL
            1E            50     E9  029A   345 	BLBC	R0,ERROR		; BR IF ERROR
       00E4 DA            68     0E  029D   346 	INSQUE	(R8),@I_LOGNAME+4(R10)	; INSERT ON END OF LIST
            56            58     D0  02A2   347 	MOVL	R8,R6			; COPY ADDRESS OF LUT
                          006D   30  02A5   348 	BSBW	RSX$BUILDLUT		; FILL IN LUT
                                     02A8   349 ;
                                     02A8   350 ; ASSOCIATE EXISTING LUT ENTRY WITH NEW ASSIGNMENT
                                     02A8   351 ;
                                     02A8   352 MERGE:					;
            51         FE A5     9A  02A8   353 	MOVZBL	-2(R5),R1		; GET LUN INDEX
                          06     13  02AC   354 	BEQL	10$			; IF EQL THEN NO SET
       0168 DA41          56     D0  02AE   355 	MOVL	R6,@I_LUT(R10)[R1]	; INSERT POINTER AS ASSIGNMENT
                       08 A6     B6  02B4   356 10$:	INCW	LUT_REF(R6)		; ADJUST REFERENCE COUNT
                          56   8ED0  02B7   357 	POPL	R6			; RESTORE REGISTERS
                                 05  02BA   358 	RSB				; RETURN
                                     02BB   359 ;
                                     02BB   360 ; MAP RETURN STATUS
                                     02BB   361 ;
                                     02BB   362 ERROR:					;
                          56   8ED0  02BB   363 	POPL	R6			; RESTORE REGISTERS
            54            50     D0  02BE   364 	MOVL	R0,R4			; SAVE STATUS VALUE
                                     02C1   365 ;
                                     02C1   366 ; DEALLOCATE THE BLOCK HELD FOR THE ASSIGN
                                     02C1   367 ;
            50            58     D0  02C1   368 	MOVL	R8,R0			; ADDRESS BLOCK
         0A A0            03     E0  02C4   369 	BBS	#LUTV_PRM,LUT_FLAGS(R0),117$; NO DEALLOCATE IF PERMANENT
                          06         02C8       
            51            36     9A  02C9   370 115$:	MOVZBL	#LUT_SIZE,R1		; SET UP SIZE
                          FD31'  30  02CC   371 	BSBW	RSX$DEALLOCATE		; DEALLOCATE IT
                                     02CF   372 ;
                                     02CF   373 ; COMPLETE THE STATUS MAP
                                     02CF   374 ;
                       FE A5     B5  02CF   375 117$:	TSTW	-2(R5)			; ANY LUN?
                          40     13  02D2   376 	BEQL	150$			; IF EQL THEN NO ERROR
            3D            54     E8  02D4   377 	BLBS	R4,150$			; BR IS SUCCESS
       0000'8F            54     B1  02D7   378 	CMPW	R4,#SS$_DEVALLOC	; DEVICE ALLOCATED TO OTHER USER?
                          0A     12  02DC   379 	BNEQ	120$			; IF NEQ THEN YES
                                     02DE   380 	$DSW	#IE.RSU			; SET RESOURCE NOT AVAILABLE
       0000'8F            54     B1  02E8   381 120$:	CMPW	R4,#SS$_DEVNOTMOUNT	; DEVICE NOT MOUNTED?
                          0A     12  02ED   382 	BNEQ	130$			; IF NEQ THEN NO
                                     02EF   383 	$DSWIO	#IE.DUN			; RETURN AS I/O TYPE ERROR
       0000'8F            54     B1  02F9   384 130$:	CMPW	R4,#SS$_NOIOCHAN	; NO CHANNEL AVAILBLE?
                          0A     12  02FE   385 	BNEQ	140$			; IF NEQ THEN NO
                                     0300   386 	$DSWIO	#IE.NOD			; SET NO QUOTA FOR REQUEST
                                     030A   387 140$:	$DSW	#IE.IDU			; UNKNOWN ERROR IS UNKNOWN DEVICE
                                 05  0314   388 150$:	RSB				; RETURN
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page  10
V06.1           RSX$BUILDLUT - BUILD LUT ENTRY                                                                                   (6)

                                     0315   390 	.SBTTL	RSX$BUILDLUT - BUILD LUT ENTRY
                                     0315   391 ;++
                                     0315   392 ; RSX$BUILDLUT - BUILD LUT ENTRY
                                     0315   393 ;
                                     0315   394 ; FUNCTIONAL DESCRIPTION:
                                     0315   395 ;
                                     0315   396 ; THIS ROUTINE IS USED TO FILL IN THE REALNAME, INFONAME AND CHARACTERISTICS
                                     0315   397 ; FIELDS OF THE LUT.
                                     0315   398 ;
                                     0315   399 ; INPUTS:
                                     0315   400 ;
                                     0315   401 ;	R8 = ADDRESS OF THE LUT
                                     0315   402 ;
                                     0315   403 ; OUTPUTS:
                                     0315   404 ;
                                     0315   405 ;	R8 = ADDRESS OF THE LUT
                                     0315   406 ;
                                     0315   407 ;	REGS R2-R9 ARE PRESERVED.
                                     0315   408 ;--
                                     0315   409 RSX$BUILDLUT::				; BUILD THE LUT
                     03FC 8F     BB  0315   410 	PUSHR	#^M<R2,R3,R4,R5,R6,R7,R8,R9>	;
         2C AA         30 AA     9E  0319   411 	MOVAB	I_SCRATCH+8(R10),I_SCRATCH+4(R10); SET UP AREA FOR GET CHANNEL
         28 AA            32     9A  031E   412 	MOVZBL	#50,I_SCRATCH(R10)	;
                                     0322   413 	$GETCHN_S	LUT_CHAN(R8),I_SCRATCH(R10),I_SCRATCH(R10)
         12 A8         30 AA     7D  0337   414 	MOVQ	I_SCRATCH+8(R10),LUT_CHAR(R8); INSERT CHARACTERISTICS
         1A A8         38 AA     D0  033C   415 	MOVL	I_SCRATCH+8+8(R10),LUT_CHAR+8(R8); 
            50         3E AA     3C  0341   416 	MOVZWL	I_SCRATCH+8+14(R10),R0	; GET OFFSET TO NAME
            55         30 AA40   9E  0345   417 	MOVAB	I_SCRATCH+8(R10)[R0],R5	; ADDRESS NAME
                                     034A   418 ;
                                     034A   419 ; BUILD INFORMATION NAME FIRST
                                     034A   420 ;
         2E A8         01 A5     B0  034A   421 	MOVW	1(R5),LUT_INFONAME(R8)	; INSERT FIRST 2 CHARS. OF REAL NAME
            53            65     9A  034F   422 	MOVZBL	(R5),R3			; GET SIZE OF NAME
                          50     D4  0352   423 	CLRL	R0			; 
            53            02     B1  0354   424 	CMPW	#2,R3			; NAME GREATER THAN 2 CHARS?
                          09     1E  0357   425 	BGEQU	10$			; IF LEQU THEN YES
            6543       41 8F     83  0359   426 	SUBB3	#^A/A/,(R5)[R3],R0	; GET CONTROLLER RELITIVE TO "A"
                          50         035E       
            50            10     C4  035F   427 	MULL	#16,R0			; CONVERT TO CONTROLLER MAP
            50         3C AA     A1  0362   428 10$:	ADDW3	I_SCRATCH+8+12(R10),R0,LUT_INFOUNIT(R8); ADD IN UNIT AND STORE
                       30 A8         0366       
                                     0368   429 ;
                                     0368   430 ; CONVERT REAL NAME TO ASCII STRING
                                     0368   431 ;
            59       008C CA     9E  0368   432 	MOVAB	I_SCRATCH+100(R10),R9	; ADDRESS TEMP STORAGE AREA
                          59     DD  036D   433 	PUSHL	R9			;
            50         3C AA     3C  036F   434 	MOVZWL	I_SCRATCH+8+12(R10),R0	; GET REAL UNIT NUMBER
                          51     D4  0373   435 	CLRL	R1			; SET UP FOR QUAD WORD DIVIDE
            50            0A     7B  0375   436 20$:	EDIV	#10,R0,R0,R2		; GET REMAINDER FROM 8
            52            50         0378       
            52            30     81  037A   437 	ADDB3	#48,R2,-(R9)		; INSERT IN STRING BACKWARDS
                          79         037D       
                          50     D5  037E   438 	TSTL	R0			; DONE?
                          F3     12  0380   439 	BNEQ	20$			; IF NEQ THEN NO
            57            59     D0  0382   440 	MOVL	R9,R7			; COPY ADDRESS UNIT STRING START
            8E            59     C3  0385   441 	SUBL3	R9,(SP)+,R9		; CALC SIZE OF UNIT STRING
                          59         0388       
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page  11
V06.1           RSX$BUILDLUT - BUILD LUT ENTRY                                                                                   (6)

                          53     D6  0389   442 	INCL	R3			; ADJUST NAME SIZE TO INCLUDE COUNT
            65            53     28  038B   443 	MOVC3	R3,(R5),LUT_REALNAME(R8); COPY NAME AND SIZE
                       1E A8         038E       
         1E A8            59     80  0390   444 	ADDB	R9,LUT_REALNAME(R8)	; ADJUST NAME SIZE BY UNIT SIZE
            67            59     28  0394   445 	MOVC3	R9,(R7),(R3)		; COPY UNIT STRING
                          63         0397       
            63            3A     90  0398   446 	MOVB	#^A/:/,(R3)		; INSERT COLON AT END
            51       0000'CF     9E  039B   447 	MOVAB	W^RSX$A_DEVTYPE,R1	; ADDRESS LIST
                          51     DD  03A0   448 	PUSHL	R1			; SAVE START OF LIST
         16 A8            61     91  03A2   449 30$:	CMPB	(R1),LUT_TYPE(R8)	; MATCH?
                          04     13  03A6   450 	BEQL	45$			; IF EQL THEN YES
                          81     95  03A8   451 	TSTB	(R1)+			; END OF LIST?
                          F6     12  03AA   452 	BNEQ	30$			; IF NEQ THEN NO
                                     03AC   453 ;
                                     03AC   454 ; NOT FOUND GETS NON SPECIFIC TYPE
                                     03AC   455 ;
            51            8E     C2  03AC   456 45$:	SUBL	(SP)+,R1		; FIND OFFSET
            51            01     81  03AF   457 	ADDB3	#1,R1,LUT_TYPE(R8)	; PUT TYPE BACK
                       16 A8         03B2       
                     03FC 8F     BA  03B4   458 	POPR	#^M<R2,R3,R4,R5,R6,R7,R8,R9>
                                 05  03B8   459 	RSB
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page  12
V06.1           RSX$SRCHDEV - SEARCH LOGICAL NAME LIST FOR MATC                                                                  (7)

                                     03B9   461 	.SBTTL RSX$SRCHDEV - SEARCH LOGICAL NAME LIST FOR MATCH
                                     03B9   462 ;++
                                     03B9   463 ; RSX$SRCHDEV - SEARCH LOGICAL NAME LIST FOR MATCH
                                     03B9   464 ;
                                     03B9   465 ; FUNCTIONAL DESCRIPTION:
                                     03B9   466 ;
                                     03B9   467 ; THIS ROUTINE IS USED DURING ASSIGN AND PARSE TO FIND A DEVICE NAME
                                     03B9   468 ; IN THE LOGICAL ASSIGNMENT TABLE. A MATCH IS ATTEMPTED FOR EACH SAVED NAME.
                                     03B9   469 ;
                                     03B9   470 ; INPUTS:
                                     03B9   471 ;
                                     03B9   472 ;	R0 = NAME
                                     03B9   473 ;	R1 = UNIT
                                     03B9   474 ;	I_SCRATCH/I_SCRATCH+4 ARE THE STRING DESC FOR A STRING MATCH
                                     03B9   475 ;
                                     03B9   476 ; OUTPUTS:
                                     03B9   477 ;
                                     03B9   478 ;	CONDITION CODES REFLECT EQUALITY 
                                     03B9   479 ;
                                     03B9   480 ;	R6 = LUT ENTRY IF EQUALITY FOUND
                                     03B9   481 ;--
                                     03B9   482 RSX$SRCHDEV_BIN::			; SEARCH FOR BINARY DEVICE
         28 AA            01     D0  03B9   483 	MOVL	#1,I_SCRATCH(R10)	;
         2C AA         28 AA     9E  03BD   484 	MOVAB	I_SCRATCH(R10),I_SCRATCH+4(R10);
                          02     11  03C2   485 	BRB	RSX$SRCHDEV		; CONTINUE IN COMMON
                                     03C4   486 RSX$SRCHDEV_ASC::			; SEARCH FOR ASCII DEVICE
                          50     7C  03C4   487 	CLRQ	R0			; SET NO ARGS FOR BINARY SEARCH
                                     03C6   488 RSX$SRCHDEV::				; SEARCH LOGICAL NAME LIST FOR MATCH
                          0F     BB  03C6   489 	PUSHR	#^M<R0,R1,R2,R3>	; SAVE CMPC REGISTERS
            56       00E0 CA     9E  03C8   490 10$:	MOVAB	I_LOGNAME(R10),R6	; START AT LIST HEAD
            56            66     D0  03CD   491 15$:	MOVL	(R6),R6			; GET NEXT ENTRY
       00E0 CA            66     D1  03D0   492 	CMPL	(R6),I_LOGNAME(R10)	; TEST DONE
                          45     13  03D5   493 	BEQL	45$			; IF EQL THEN DONE
                       04 AE     B5  03D7   494 	TSTW	4(SP)			; UNIT 0?
                          06     12  03DA   495 	BNEQ	20$			; IF NEQ THEN NO RSX NAME
         10 A6            6E     B1  03DC   496 	CMPW	(SP),LUT_RSXNAME(R6)	; RSX NAME MATCH?
                          3C     13  03E0   497 	BEQL	50$			; IF EQL THEN MATCH
         28 AA            02     B1  03E2   498 20$:	CMPW	#2,I_SCRATCH(R10)	; TWO CHARACTER NAME?
                          13     12  03E6   499 	BNEQ	25$			; IF NEQ THEN NO
         10 A6         2C BA     B1  03E8   500 	CMPW	@I_SCRATCH+4(R10),LUT_RSXNAME(R6); MATCH?
                          2F     13  03ED   501 	BEQL	50$			; IF EQL THEN YES
                       30 A6     B5  03EF   502 	TSTW	LUT_INFOUNIT(R6)	; INFO UNIT 0?
                          07     12  03F2   503 	BNEQ	25$			; IF NEQ THEN NO
         2E A6         2C BA     B1  03F4   504 	CMPW	@I_SCRATCH+4(R10),LUT_INFONAME(R6); TWO CHARACTER MATCH?
                          23     13  03F9   505 	BEQL	50$			; IF EQL THEN YES
         30 A6         04 AE     B1  03FB   506 25$:	CMPW	4(SP),LUT_INFOUNIT(R6)	; INFO UNIT MATCH?
                          06     12  0400   507 	BNEQ	30$			; IF EQL THEN DONE
         2E A6            6E     B1  0402   508 	CMPW	(SP),LUT_INFONAME(R6)	; INFO NAME MATCH?
                          16     13  0406   509 	BEQL	50$			; IF NEQ THEN NO
            50         1E A6     9A  0408   510 30$:	MOVZBL	LUT_REALNAME(R6),R0	; PICK UP SIZE OF STRING
            50         28 AA     D1  040C   511 	CMPL	I_SCRATCH(R10),R0	; CHECK SIZES
                          BB     12  0410   512 	BNEQ	15$			; IF NEQ THEN ERROR
         2C BA            50     29  0412   513 	CMPC3	R0,@I_SCRATCH+4(R10),LUT_REALNAME+1(R6); STRING MATCH?
                       1F A6         0416       
                          B3     12  0418   514 	BNEQ	15$			; IF NEQ THEN NOT DONE
                          02     11  041A   515 	BRB	50$			; CONTINUE
                          02     95  041C   516 45$:	TSTB	#2			; SET NEQ CONDITION
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page  13
V06.1           RSX$SRCHDEV - SEARCH LOGICAL NAME LIST FOR MATC                                                                  (7)

                          0F     BA  041E   517 50$:	POPR	#^M<R0,R1,R2,R3>	; RESTORE CMPC REGISTERS
                                 05  0420   518 	RSB				; RETURN
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page  14
V06.1           RSX$TRANS_LOGIC - TRANSLATE LOGICAL NAME                                                                         (8)

                                     0421   520 	.SBTTL	RSX$TRANS_LOGIC - TRANSLATE LOGICAL NAME
                                     0421   521 ;++
                                     0421   522 ; RSX$TRANS_LOGIC - TRANSLATE LOGICAL NAME
                                     0421   523 ;
                                     0421   524 ; FUNCTIONAL DESCRIPTION:
                                     0421   525 ;
                                     0421   526 ; THIS ROUTINE TRANSLATES A LOGICAL NAME.
                                     0421   527 ;
                                     0421   528 ; INPUTS:
                                     0421   529 ;
                                     0421   530 ;	I_SCRATCH(R10) = INPUT NAME DESC
                                     0421   531 ;
                                     0421   532 ; OUTPUTS:
                                     0421   533 ;
                                     0421   534 ;	I_SCRATCH(R10) = OUTPUT DESC
                                     0421   535 ;
                                     0421   536 ; THE NAME IS PLACED IN I_SCRATCH+50
                                     0421   537 ;--
                                     0421   538 RSX$TRANS_LOGIC::			; TRANSLATE LOGICAL NAME
         28 AA            3A     3A  0421   539 	LOCC	#^A/:/,I_SCRATCH(R10),@I_SCRATCH+4(R10)
                       2C BA         0425       
         28 AA            50     C2  0427   540 	SUBL	R0,I_SCRATCH(R10)	; ADJUST SIZE FOR :
         30 AA         28 AA     7D  042B   541 	MOVQ	I_SCRATCH(R10),I_SCRATCH+8(R10)
         2C AA       0088 CA     9E  0430   542 	MOVAB	I_SCRATCH+160-64(R10),I_SCRATCH+4(R10)
         28 AA         40 8F     9A  0436   543 	MOVZBL	#64,I_SCRATCH(R10)
                                     043B   544 	$TRNLOG_S	I_SCRATCH+8(R10),-
                                     043B   545 		I_SCRATCH(R10),I_SCRATCH(R10)
                                 05  0451   546 	RSB
                                     0452   547 ;
                                     0452   548 	.END
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                     (8)

$$.TMP1        = 00000001            DEV$V_DIR      = 00000003            FAB$L_SDC        00000044            
$$.TMP2        = 00000058            DEV$V_DMT      = 00000015            FAB$L_STS        00000008            
$$MSG          = 00000000            DEV$V_ELG      = 00000016            FAB$L_STV        0000000C            
$$T1           = 00000001            DEV$V_FOD      = 0000000E            FAB$L_XAB        00000024            
...GBL         = 00000000            DEV$V_FOR      = 00000018            FAB$M_BIO      = 00000020            
ACBC_CTLRCAST  = 00000002            DEV$V_GEN      = 00000011            FAB$M_BLK      = 00000008            
ACBC_FLOATAST  = 00000003            DEV$V_IDV      = 0000001A            FAB$M_BRO      = 00000040            
ACBC_PWRAST    = 00000000            DEV$V_MBX      = 00000014            FAB$M_CBT      = 00200000            
ACBC_RCVAST    = 00000001            DEV$V_MNT      = 00000013            FAB$M_CIF      = 02000000            
ACBV_INPROG    = 00000001            DEV$V_NET      = 0000000D            FAB$M_CR       = 00000002            
ACBV_PERM      = 00000000            DEV$V_ODV      = 0000001B            FAB$M_CTG      = 00100000            
ACBV_TYPE      = 00000008            DEV$V_RCK      = 0000001E            FAB$M_DEL      = 00000004            
ACB_FLAGS        0000000C            DEV$V_REC      = 00000000            FAB$M_DFW      = 00000020            
ACB_LINK         00000000            DEV$V_RND      = 0000001C            FAB$M_DLT      = 00008000            
ACB_UPC          0000000A            DEV$V_RTM      = 0000001D            FAB$M_DMO      = 00001000            
ACB_UPRM         00000008            DEV$V_SDI      = 00000004            FAB$M_ESC      = 08000000            
ADR_HIGHLIM      00000004            DEV$V_SHR      = 00000010            FAB$M_EXE      = 00000080            
ADR_LOWLIM       00000000            DEV$V_SPL      = 00000006            FAB$M_FTN      = 00000001            
ADR_SIZE         00000008            DEV$V_SQD      = 00000005            FAB$M_GET      = 00000002            
AP_NAME          00000004            DEV$V_SWL      = 00000019            FAB$M_INP      = 00080000            
ASSIGN           0000028B R     05   DEV$V_TRM      = 00000002            FAB$M_JNL      = 00400000            
AST_PARAM        00000004            DEV$V_WCK      = 0000001F            FAB$M_KFO      = 40000000            
AST_PC           00000010            ERROR            000002BB R     05   FAB$M_MSE      = 00000010            
AST_PSL          00000014            FAB$B_BID        00000000            FAB$M_MXV      = 00000002            
AST_R0           00000008            FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            
AST_R1           0000000C            FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            
BIT...         = 00000020            FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            
C_CANONPS      = 83C00000            FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            
C_RCVDSTR      = 44564352            FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            
DEV$M_ALL      = 00800000            FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            
DEV$M_AVL      = 00040000            FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            
DEV$M_CCL      = 00000002            FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            
DEV$M_DIR      = 00000008            FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            
DEV$M_DMT      = 00200000            FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            
DEV$M_ELG      = 00400000            FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            
DEV$M_FOD      = 00004000            FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            
DEV$M_FOR      = 01000000            FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            
DEV$M_GEN      = 00020000            FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            
DEV$M_IDV      = 04000000            FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            
DEV$M_MBX      = 00100000            FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            
DEV$M_MNT      = 00080000            FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            
DEV$M_NET      = 00002000            FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            
DEV$M_ODV      = 08000000            FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            
DEV$M_RCK      = 40000000            FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            
DEV$M_REC      = 00000001            FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            
DEV$M_RND      = 10000000            FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            
DEV$M_RTM      = 20000000            FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            
DEV$M_SDI      = 00000010            FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            
DEV$M_SHR      = 00010000            FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            
DEV$M_SPL      = 00000040            FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            
DEV$M_SQD      = 00000020            FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            
DEV$M_SWL      = 02000000            FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            
DEV$M_TRM      = 00000004            FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            
DEV$M_WCK      = 80000000            FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            
DEV$V_ALL      = 00000017            FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            
DEV$V_AVL      = 00000012            FAB$L_MRN        00000038            FAB$S_ORG      = 00000004            
DEV$V_CCL      = 00000001            FAB$L_NAM        00000028            FAB$S_PPF_RAT  = 00000008            
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                     (8)

FAB$V_BIO      = 00000005            FCB_FIB          0000004C            IE.BDV         = FFFFFFC9            
FAB$V_BLK      = 00000003            FCB_FID          00000000            IE.BHD         = FFFFFFC0            
FAB$V_BRO      = 00000006            FCB_FNAME        00000014            IE.BLB         = FFFFFFBA            
FAB$V_CBT      = 00000015            FCB_FNAMEDESC    0000000C            IE.BLK         = FFFFFFEC            
FAB$V_CIF      = 00000019            FCB_FNB          00000002            IE.BNM         = FFFFFFCA            
FAB$V_CR       = 00000001            FCB_PC           00000078            IE.BTF         = FFFFFFB4            
FAB$V_CTG      = 00000014            FCB_RESULT       00000030            IE.BTP         = FFFFFFD5            
FAB$V_DEL      = 00000002            FCB_RESULTDESC   00000004            IE.BVR         = FFFFFFC1            
FAB$V_DFW      = 00000005            FCB_SIZE         000000B4            IE.BYT         = FFFFFFED            
FAB$V_DLT      = 0000000F            FP_AP            00000008            IE.CKP         = FFFFFFF6            
FAB$V_DMO      = 0000000C            FP_FP            0000000C            IE.CKS         = FFFFFFE2            
FAB$V_ESC      = 0000001B            FP_PC            00000010            IE.CLO         = FFFFFFDA            
FAB$V_EXE      = 00000007            FP_PSL           00000004            IE.CNR         = FFFFFFB7            
FAB$V_FTN      = 00000000            FP_REGISTERS     00000014            IE.CON         = FFFFFFEA            
FAB$V_GET      = 00000001            GBL...         = 00000000            IE.DAA         = FFFFFFF8            
FAB$V_INP      = 00000013            H.CSP            00000000            IE.DAO         = FFFFFFF3            
FAB$V_JNL      = 00000016            H.CUIC           00000008            IE.DFU         = FFFFFFE8            
FAB$V_KFO      = 0000001E            H.DSW            00000026            IE.DNA         = FFFFFFF9            
FAB$V_MSE      = 00000004            H.DUIC           0000000A            IE.DNR         = FFFFFFFD            
FAB$V_MXV      = 00000001            H.EFLM           00000004            IE.DUN         = FFFFFFF7            
FAB$V_NAM      = 00000018            H.EFSV           00000020            IE.DUP         = FFFFFFC7            
FAB$V_NEF      = 0000000A            H.FCS            00000028            IE.EOF         = FFFFFFF6            
FAB$V_NFS      = 00000010            H.FORT           0000002A            IE.EOT         = FFFFFFC2            
FAB$V_NIL      = 00000005            H.FPSA           00000022            IE.EOV         = FFFFFFF5            
FAB$V_OFP      = 0000001D            H.FPVA           0000001C            IE.EXP         = FFFFFFB5            
FAB$V_ORG      = 00000004            H.GARD           0000003A            IE.FEX         = FFFFFFCF            
FAB$V_POS      = 00000008            H.HDLN           00000002            IE.FHE         = FFFFFFC5            
FAB$V_PPF      = 00000012            H.IPC            0000000E            IE.FIX         = FFFFFFF7            
FAB$V_PPF_IND  = 0000000E            H.IPS            0000000C            IE.FLN         = FFFFFFAF            
FAB$V_PPF_RAT  = 00000006            H.ISP            00000010            IE.FOP         = FFFFFFCB            
FAB$V_PRN      = 00000002            H.LUN            0000003E            IE.HFU         = FFFFFFE4            
FAB$V_PUT      = 00000000            H.NLUN           0000003C            IE.HWR         = FFFFFFFA            
FAB$V_RCK      = 00000017            H.NML            00000031            IE.IBS         = FFFFFFA7            
FAB$V_RWC      = 0000000B            H.ODVA           00000012            IE.IDU         = FFFFFFA4            
FAB$V_RWO      = 00000007            H.ODVL           00000014            IE.IEF         = FFFFFF9F            
FAB$V_SCF      = 0000000E            H.OVLY           0000002C            IE.IES         = FFFFFFAE            
FAB$V_SHRDEL   = 00000002            H.PFVA           0000001A            IE.IFC         = FFFFFFFE            
FAB$V_SHRGET   = 00000001            H.RCVA           0000001E            IE.IFU         = FFFFFFE7            
FAB$V_SHRPUT   = 00000000            H.RRVA           00000032            IE.ILL         = FFFFFFD6            
FAB$V_SHRUPD   = 00000003            H.SPRI           00000030            IE.ILU         = FFFFFFA0            
FAB$V_SPL      = 0000000D            H.TKVA           00000016            IE.ILV         = FFFFFFED            
FAB$V_SQO      = 00000006            H.TKVL           00000018            IE.INS         = FFFFFFFE            
FAB$V_SUP      = 00000002            H.VEXT           0000002E            IE.IOP         = FFFFFFAD            
FAB$V_TEF      = 0000001C            H.WND            00000024            IE.IPR         = FFFFFFA1            
FAB$V_TMD      = 00000004            IE.2DV         = FFFFFFD0            IE.ISQ         = FFFFFFC3            
FAB$V_TMP      = 00000003            IE.ABO         = FFFFFFF1            IE.ITI         = FFFFFFA3            
FAB$V_TRN      = 00000004            IE.ACT         = FFFFFFF9            IE.ITP         = FFFFFFA8            
FAB$V_UFM      = 0000001A            IE.ADP         = FFFFFF9E            IE.ITS         = FFFFFFF8            
FAB$V_UFO      = 00000011            IE.ALC         = FFFFFFAC            IE.IUI         = FFFFFFA5            
FAB$V_UPD      = 00000003            IE.ALG         = FFFFFFAC            IE.LCK         = FFFFFFE5            
FAB$V_UPI      = 00000006            IE.ALN         = FFFFFFDE            IE.LNL         = FFFFFFA6            
FAB$V_WCK      = 00000009            IE.AST         = FFFFFFB0            IE.MAP         = FFFFFFAF            
FAB$W_BLS        0000003C            IE.BAD         = FFFFFFFF            IE.MOD         = FFFFFFEB            
FAB$W_DEQ        00000014            IE.BBE         = FFFFFFC8            IE.NBF         = FFFFFFD9            
FAB$W_IFI        00000002            IE.BCC         = FFFFFFBE            IE.NBK         = FFFFFFD7            
FAB$W_MRS        00000036            IE.BDI         = FFFFFFCC            IE.NDR         = FFFFFFB8            
FCB_ATTRIBS      0000007C            IE.BDR         = FFFFFFCE            IE.NFI         = FFFFFFC4            
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page  17
SYMBOL TABLE                                                                                                                     (8)

IE.NFW         = FFFFFFBB            IS.SET         = 00000002            I_UIC            0000013C            
IE.NLK         = FFFFFFB1            IS.SPD         = 00000002            I_WAIT           00000178            
IE.NLN         = FFFFFFDB            IS.SUC         = 00000001            I_WAITSAVE       00000180            
IE.NNC         = FFFFFFB3            IS.TAB         = 00000901            LUTC_CR        = 00000005            
IE.NNL         = FFFFFFB2            IS.TMO         = 00000002            LUTC_DISK      = 00000002            
IE.NNN         = FFFFFFBC            I_ADR0           000000FC            LUTC_LP        = 00000004            
IE.NOD         = FFFFFFE9            I_ASCIINAME      00000140            LUTC_RMS       = 00000000            
IE.NSF         = FFFFFFE6            I_ASTPOOL        000000D0            LUTC_TAPE      = 00000003            
IE.NST         = FFFFFFB0            I_ASTQUEUE       000000C8            LUTC_TRM       = 00000001            
IE.NSW         = FFFFFFEE            I_BAILOUTFP      00000188            LUTV_CTRLC     = 00000002            
IE.NVR         = FFFFFFAA            I_CMDROUT        000000E8            LUTV_CTRLO     = 00000000            
IE.NVW         = FFFFFFA9            I_CURAST         00000198            LUTV_PRM       = 00000003            
IE.OFL         = FFFFFFBF            I_DEBVEC         00000190            LUT_CHAN         0000000C            
IE.ONP         = FFFFFFFB            I_DEBVECL        00000192            LUT_CHAR         00000012            
IE.OVR         = FFFFFFEE            I_FCBPOOL        000000D8            LUT_CTRLC        00000032            
IE.PES         = FFFFFFAD            I_FCC            000001B4            LUT_FLAGS        0000000A            
IE.PNS         = FFFFFFA2            I_FLOATA0        000001C0            LUT_INFONAME     0000002E            
IE.PRI         = FFFFFFF0            I_FLOATA1        000001C8            LUT_INFOUNIT     00000030            
IE.PTS         = FFFFFFFD            I_FLOATA2        000001D0            LUT_LINK         00000000            
IE.RAC         = FFFFFFD4            I_FLOATA3        000001D8            LUT_REALNAME     0000001E            
IE.RAT         = FFFFFFD3            I_FLOATA4        000001E0            LUT_REF          00000008            
IE.RBG         = FFFFFFD8            I_FLOATA5        000001E8            LUT_RSXNAME      00000010            
IE.RBS         = FFFFFFF1            I_FLOATADR       000001B0            LUT_SIZE         00000036            
IE.RCN         = FFFFFFD2            I_FLOATAST       000001A4            LUT_TYPE         00000016            
IE.RER         = FFFFFFE0            I_FLOATCSR       000001A8            MERGE            000002A8 R     05   
IE.RNM         = FFFFFFCD            I_FLOATERR       000001AC            PSL_CC         = 00000000            
IE.RSU         = FFFFFFEF            I_FLOATTMP       000001B8            PSL_CM         = 0000001F            
IE.SDP         = FFFFFF9D            I_GARD           000000EC            PSL_FPD        = 0000001B            
IE.SNC         = FFFFFFDD            I_HIGHEFN        0000016C            PSL_FU         = 00000006            
IE.SPC         = FFFFFFFA            I_HIGHSIZE       000000F4            PSL_TBIT       = 00000004            
IE.SQC         = FFFFFFDC            I_IMAGEVBN       000000F8            QIOV_FILES     = 00000000            
IE.SRE         = FFFFFFF2            I_INISIZE        000000F0            QIO_FLAGS        0000001A            
IE.STK         = FFFFFFC6            I_LENGTH         000001F0            QIO_IOSB         0000000E            
IE.TCH         = FFFFFFF5            I_LOGNAME        000000E0            QIO_LUT          00000016            
IE.TMM         = FFFFFFB9            I_LUT            00000168            QIO_SECONDBLK    0000001C            
IE.TMO         = FFFFFFB6            I_NLUN           00000164            QIO_SIZE         00000020            
IE.ULK         = FFFFFFAB            I_PC             00000020            RAB$B_BID        00000000            
IE.ULN         = FFFFFFFB            I_PPFINDEX       00000162            RAB$B_BLN        00000001            
IE.UNS         = FFFFFFFC            I_PROCNAME       0000014C            RAB$B_KRF        00000035            
IE.UPN         = FFFFFFFF            I_PS             00000024            RAB$B_KSZ        00000034            
IE.VER         = FFFFFFFC            I_PWRAST         000001A0            RAB$B_MBC        00000037            
IE.WAC         = FFFFFFE3            I_R0             00000000            RAB$B_MBF        00000036            
IE.WAT         = FFFFFFE1            I_R1             00000004            RAB$B_PSZ        00000034            
IE.WCK         = FFFFFFAA            I_R2             00000008            RAB$B_RAC        0000001E            
IE.WER         = FFFFFFDF            I_R3             0000000C            RAB$B_ROP1       00000005            
IE.WLK         = FFFFFFF4            I_R4             00000010            RAB$B_ROP2       00000006            
IE.WOV         = FFFFFFAB            I_R5             00000014            RAB$B_ROP3       00000007            
IS.BV          = 00000005            I_R6             00000018            RAB$B_TMO        0000001F            
IS.CC          = 00000301            I_RAD50NAME      00000148            RAB$C_BID      = 00000001            
IS.CLR         = 00000000            I_RCVAST         0000019C            RAB$C_BLN        00000044            
IS.CR          = 00000D01            I_RCVMAIL        00000160            RAB$C_KEY      = 00000001            
IS.EOT         = 00000401            I_RUNFLAGS       0000018C            RAB$C_RFA      = 00000002            
IS.ESC         = 00001B01            I_SCRATCH        00000028            RAB$C_SEQ      = 00000000            
IS.ESQ         = 00009B01            I_SSTVEC         00000194            RAB$K_BLN        00000044            
IS.PES         = 00008001            I_SSTVECL        00000196            RAB$L_BKT        00000038            
IS.PND         = 00000000            I_STATE          00000170            RAB$L_CTX        00000018            
IS.RDD         = 00000002            I_TYPE           0000001C            RAB$L_DCT        00000038            
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page  18
SYMBOL TABLE                                                                                                                     (8)

RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            SS$_DEVALLOC     ********   X   05   
RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            SS$_DEVNOTMOUNT  ********   X   05   
RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            SS$_NOIOCHAN     ********   X   05   
RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            SS$_NOTRAN       ********   X   05   
RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            SV_ASTLVL        00000004            
RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            SV_DCL           00000002            
RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            SV_FLOATAST      00000009            
RAB$L_STS        00000008            RAB$V_TPT      = 00000001            SV_NOAST         00000003            
RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            SV_PENDWAIT      00000005            
RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            SV_PWRAST        00000008            
RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            SV_RCVAST        00000007            
RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            SV_RESTORE       00000000            
RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            SV_TRANSLATE     00000001            
RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            SV_WAIT          00000006            
RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            SYS$ASSIGN       ********   X   05   
RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            SYS$CLOSE        ********  GX   05   
RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            SYS$CREATE       ********  GX   05   
RAB$M_KGE      = 00200000            RSX$ALLOCATE     ********   X   05   SYS$DASSGN       ********   X   05   
RAB$M_KGT      = 00400000            RSX$ALUN         00000000 RG    05   SYS$GETCHN       ********   X   05   
RAB$M_LIM      = 00004000            RSX$A_DEVTYPE    ********   X   05   SYS$GETDEV       ********   X   05   
RAB$M_LOA      = 00002000            RSX$BLDASCDEV    ********   X   05   SYS$TRNLOG       ********   X   05   
RAB$M_LOC      = 00010000            RSX$BLDPHYDEV    ********   X   05   W.BATT           00000006            
RAB$M_MAS      = 00000020            RSX$BUILDLUT     00000315 RG    05   W.BFPD           0000000C            
RAB$M_NLK      = 00100000            RSX$CTRLCDSABL   ********   X   05   W.BHVR           00000004            
RAB$M_NXR      = 00800000            RSX$C_SUBSYSTEM= 00000006            W.BLGH           00000010            
RAB$M_PMT      = 40000000            RSX$DEALLOCATE   ********   X   05   W.BLPD           0000000E            
RAB$M_PPF_IND  = 00004000            RSX$G_FAB        ********   X   05   W.BLVR           00000002            
RAB$M_PPF_RAT  = 00003FC0            RSX$SRCHDEV      000003C6 RG    05   W.BNPD           0000000D            
RAB$M_PTA      = 20000000            RSX$SRCHDEV_ASC  000003C4 RG    05   W.BOFF           0000000A            
RAB$M_RAH      = 00000200            RSX$SRCHDEV_BIN  000003B9 RG    05   W.BPCB           00000000            
RAB$M_RLK      = 00080000            RSX$SYS_DEVS     00000140 RG    05   W.BSIZ           00000008            
RAB$M_RNE      = 01000000            RSX$TRANS_LOGIC  00000421 RG    05   
RAB$M_RNF      = 08000000            RSX$_ACCVIO    = 00068044            
RAB$M_TMO      = 02000000            RSX$_BADLIBREF = 0006806C            
RAB$M_TPT      = 00000002            RSX$_BADSTACK  = 0006804C            
RAB$M_UIF      = 00000010            RSX$_BREAK     = 0006800C            
RAB$M_ULK      = 00040000            RSX$_EXITSTATUS= 00068640            
RAB$M_WAT      = 00020000            RSX$_EXTERNABRT= 0006805C            
RAB$M_WBH      = 00000400            RSX$_ILLINST   = 0006802C            
RAB$S_PPF_RAT  = 00000008            RSX$_IMAGETERM = 00068084            
RAB$V_ASY      = 00000000            RSX$_INSFDYNMEM= 00068054            
RAB$V_BIO      = 0000000B            RSX$_IOT       = 00068014            
RAB$V_CCO      = 0000001F            RSX$_LIBNOTFND = 00068074            
RAB$V_CVT      = 0000001A            RSX$_LOADERROR = 0006807C            
RAB$V_EOF      = 00000008            RSX$_NOCOMM    = 00068094            
RAB$V_FDL      = 00000006            RSX$_NONRSXEMT = 0006801C            
RAB$V_HSH      = 00000007            RSX$_NOPMD     = 00068332            
RAB$V_KGE      = 00000015            RSX$_NOSUCHDEV = 00068322            
RAB$V_KGT      = 00000016            RSX$_NOTSKIMG  = 00068064            
RAB$V_LIM      = 0000000E            RSX$_ODDADDR   = 00068034            
RAB$V_LOA      = 0000000D            RSX$_PMD       = 0006832A            
RAB$V_LOC      = 00000010            RSX$_RCVMBXSIZ = 0000012C            
RAB$V_MAS      = 00000005            RSX$_REGMSG    = 0006808C            
RAB$V_NLK      = 00000014            RSX$_RESERVED  = 00068004            
RAB$V_NXR      = 00000017            RSX$_TBIT      = 0006803C            
RAB$V_PMT      = 0000001E            RSX$_TRAP      = 00068024            
RAB$V_PPF_IND  = 0000000E            RSX$_VERIFYCMD = 00068648            
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 05:05:27   VAX-11 MACRO X0.3-11               Page  19
PROGRAM SECTION SYNOPSIS                                                                                                         (8)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
..ABS.           00000042      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000050      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXDEF           000001F4      04     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXCODE          00000452      05       PIC   USR   CON   REL   LCL   SHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
7122. BYTES LEFT IN FREE MEMORY POOL.
686. BYTES OF RECLAIMED MEMORY.
OBJ$:RSXALUN,LIS$:RSXALUN/-SP=EXECML$/ML,LIB$:R/ML,SRC$:RSXALUN
51 MLB DIR RDS - 926 GETS TO DEFINE 33 MACROS. 55 INTER. FILE WRITES. 
