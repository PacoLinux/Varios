
; Bliss-32 10.1-416	Monday 21-AUG-1978 23:17:46	DBB3:[F11B.SRC]MAKPTR.B32;6					Page 1
;
;	0001	MODULE MAKPTR (
;	0002			LANGUAGE (BLISS32),
;	0003			IDENT = 'B0002'
;	0004			) =
;	0005	BEGIN
;	0006	
;	0007	!
;	0008	! Copyright (c) 1977
;	0009	! Digital Equipment Corporation, Maynard, Massachusetts 01754
;	0010	!
;	0011	! This software is furnished  under a license for use only on a single
;	0012	! computer  system and  may be  copied only with  the inclusion of the
;	0013	! above copyright notice.  This software, or any other copies thereof,
;	0014	! may not be provided or  otherwise made available to any other person
;	0015	! except for use on such system and to one who agrees to these license
;	0016	! terms.  Title to and  ownership of the  software  shall at all times
;	0017	! remain in DEC.
;	0018	!
;	0019	! The information in this software is subject to change without notice
;	0020	! and should  not be construed  as a commitment  by Digital  Equipment
;	0021	! Corporation.
;	0022	!
;	0023	! DEC assumes  no  responsibility  for  the use or  reliability of its
;	0024	! software on equipment which is not supplied by DEC.
;	0025	
;	0026	!++
;	0027	!
;	0028	! FACILITY:  F11ACP Structure Level 2
;	0029	!
;	0030	! ABSTRACT:
;	0031	!
;	0032	!	This routine constructs retrieval pointer in the file header map area
;	0033	!	for the indicated blocks.
;	0034	!
;	0035	! ENVIRONMENT:
;	0036	!
;	0037	!	STARLET operating system, including privileged system services
;	0038	!	and internal exec routines.
;	0039	!
;	0040	!--
;	0041	!
;	0042	!
;	0043	! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  14-Dec-1977  17:13
;	0044	!
;	0045	! REVISION HISTORY:
;	0046	!
;	0047	!   Andrew C. Goldstein, 17-Feb-1978  14:59
;	0048	!   B0002 - Use new bug check
;	0049	!
;	0050	!**
;	0051	
;	0052	
;	0053	LIBRARY 'SYS$LIBRARY:LIB.L32';
;	0054	REQUIRE 'SRC$:FCPDEF.B32';
;	0403	

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:17:46	DBB3:[F11B.SRC]MAKPTR.B32;6					Page 1-1
;
;	0404	LINKAGE
;	0405		L_MAKE_POINTER	= CALL :
;	0406				  GLOBAL (MAP_POINTER = 9),
;	0407	
;	0408		L_CHECK_POINTER	= CALL :
;	0409				  GLOBAL (HEADER = 8);
;	0410	
;	0411	FORWARD ROUTINE
;	0412		MAKE_POINTER	: L_MAKE_POINTER,	! build map pointer
;	0413		CHECK_POINTER	: L_CHECK_POINTER;	! check if pointer will fit

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:17:46	DBB3:[F11B.SRC]MAKPTR.B32;6					Page 2
;
;	0414	GLOBAL ROUTINE MAKE_POINTER (COUNT, LBN, FILE_HEADER) : L_MAKE_POINTER =
;	0415	
;	0416	!++
;	0417	!
;	0418	! FUNCTIONAL DESCRIPTION:
;	0419	!
;	0420	!	This routine constructs retrieval pointer in the file header map area
;	0421	!	for the indicated blocks.
;	0422	!
;	0423	!
;	0424	! CALLING SEQUENCE:
;	0425	!	MAKE_POINTER (ARG1, ARG2, ARG3)
;	0426	!
;	0427	! INPUT PARAMETERS:
;	0428	!	ARG1: block count
;	0429	!	ARG2: start LBN
;	0430	!	ARG3: address of file header
;	0431	!
;	0432	! IMPLICIT INPUTS:
;	0433	!	R9 = address to receive pointer
;	0434	!
;	0435	! OUTPUT PARAMETERS:
;	0436	!	NONE
;	0437	!
;	0438	! IMPLICIT OUTPUTS:
;	0439	!	R9 = address past pointer
;	0440	!
;	0441	! ROUTINE VALUE:
;	0442	!	1 if OK
;	0443	!	0 if pointer won't fit
;	0444	!
;	0445	! SIDE EFFECTS:
;	0446	!	pointer added to header map area
;	0447	!
;	0448	!--
;	0449	
;	0450	BEGIN
;	0451	
;	0452	EXTERNAL REGISTER
;	0453		MAP_POINTER	= 9 : REF BBLOCK; ! pointer to map area
;	0454	
;	0455	MAP
;	0456		FILE_HEADER	: REF BBLOCK;	! buffer containing file header
;	0457	
;	0458	GLOBAL REGISTER
;	0459		HEADER		= 8 : REF BBLOCK; ! local pointer to file header
;	0460	
;	0461	
;	0462	! Get the address of the file header for the check routine.
;	0463	! Then determine the format of the pointer and build it.
;	0464	!
;	0465	
;	0466	HEADER = .FILE_HEADER;
;	0467	
;	0468	IF .COUNT LEQU 256 AND .LBN LSSU 1^22

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:17:46	DBB3:[F11B.SRC]MAKPTR.B32;6					Page 2-1
;
;	0469	THEN
;	0470	    BEGIN
;	0471	    IF NOT CHECK_POINTER (2) THEN RETURN 0;
;	0472	    MAP_POINTER[FM2$V_FORMAT] = FM2$C_FORMAT1;
;	0473	    MAP_POINTER[FM2$B_COUNT1] = .COUNT - 1;
;	0474	    MAP_POINTER[FM2$V_HIGHLBN] = .LBN<16,6>;
;	0475	    MAP_POINTER[FM2$W_LOWLBN] = .LBN<0,16>;
;	0476	    MAP_POINTER = .MAP_POINTER + 4;
;	0477	    END
;	0478	
;	0479	ELSE IF .COUNT LEQU 16384
;	0480	THEN
;	0481	    BEGIN
;	0482	    IF NOT CHECK_POINTER (3) THEN RETURN 0;
;	0483	    MAP_POINTER[FM2$V_FORMAT] = FM2$C_FORMAT2;
;	0484	    MAP_POINTER[FM2$V_COUNT2] = .COUNT - 1;
;	0485	    MAP_POINTER[FM2$L_LBN2] = .LBN;
;	0486	    MAP_POINTER = .MAP_POINTER + 6;
;	0487	    END
;	0488	
;	0489	ELSE IF .COUNT LEQU 1^30
;	0490	THEN
;	0491	    BEGIN
;	0492	    IF NOT CHECK_POINTER (4) THEN RETURN 0;
;	0493	    .MAP_POINTER = ROT (.COUNT-1, 16);
;	0494	    MAP_POINTER[FM2$V_FORMAT] = FM2$C_FORMAT3;
;	0495	    MAP_POINTER[FM2$L_LBN3] = .LBN;
;	0496	    MAP_POINTER = .MAP_POINTER + 8;
;	0497	    END
;	0498	
;	0499	ELSE BUG_CHECK (PTRCNT, FATAL, 'ACP block count exceeds retrieval pointer size');
;	0500	
;	0501	RETURN 1;
;	0502	
;	0503	END;					! end of routine MAKE_POINTER


							    .TITLE  MAKPTR
							    .IDENT  \B0002\

							    .PSECT  $LOCKEDC2$,NOWRT,2

				  FEFF  0000  00000 P.AAA:  .WORD   0, -257						      ;
					0000* 00004 	    .WORD   <BUG$_PTRCNT!4>					      ;
					      00006	    .BLKB   2

							    .EXTRN  BUG$_PTRCNT

							    .PSECT  $CODE$,NOWRT,2

					 010C 00000 	    .ENTRY  MAKE_POINTER, Save R2,R3,R8				      ; 0414
		         53 	0000V  CF  9E 00002 	    MOVAB   CHECK_POINTER, R3					      ;
		         58 	  0C   AC  D0 00007 	    MOVL    FILE_HEADER, HEADER					      ; 0466
		         52 	  04   AC  D0 0000B 	    MOVL    COUNT, R2						      ; 0468
	      00000100   8F	       52  D1 0000F 	    CMPL    R2, #256						      ;

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:17:46	DBB3:[F11B.SRC]MAKPTR.B32;6					Page 2-2
;
				       27  1A 00016 	    BGTRU   1$							      ;
	      00400000   8F	  08   AC  D1 00018 	    CMPL    LBN, #4194304					      ;
				       1D  1E 00020 	    BGEQU   1$							      ;
				       02  DD 00022 	    PUSHL   #2							      ; 0471
		         63 	       01  FB 00024 	    CALLS   #1, CHECK_POINTER					      ;
		         6B 	       50  E9 00027 	    BLBC    R0, 5$						      ;
	   02 	         0E 	       01  F0 0002A 	    INSV    #1, #14, #2, (MAP_POINTER)				      ; 0472
				       69     0002E									      ;
	   89 	         52 	       01  83 0002F 	    SUBB3   #1, R2, (MAP_POINTER)+				      ; 0473
	   06 	         00 	  0A   AC  F0 00033 	    INSV    LBN+2, #0, #6, (MAP_POINTER)+			      ; 0474
				       89     00038									      ;
		         89 	  08   AC  B0 00039 	    MOVW    LBN, (MAP_POINTER)+					      ; 0475
				       52  11 0003D 	    BRB     4$							      ; 0468
	      00004000   8F	       52  D1 0003F 1$:     CMPL    R2, #16384						      ; 0479
				       20  1A 00046 	    BGTRU   2$							      ;
				       03  DD 00048 	    PUSHL   #3							      ; 0482
		         63 	       01  FB 0004A 	    CALLS   #1, CHECK_POINTER					      ;
		         45 	       50  E9 0004D 	    BLBC    R0, 5$						      ;
	   02 	         0E 	       02  F0 00050 	    INSV    #2, #14, #2, (MAP_POINTER)				      ; 0483
				       69     00054									      ;
		         50 	  FF   A2  9E 00055 	    MOVAB   -1(R2), R0						      ; 0484
	   0E 	         00 	       50  F0 00059 	    INSV    R0, #0, #14, (MAP_POINTER)+				      ;
				       89     0005D									      ;
		    01   A9	  08   AC  D0 0005E 	    MOVL    LBN, 1(MAP_POINTER)					      ; 0485
		         59 	       05  C0 00063 	    ADDL2   #5, MAP_POINTER					      ; 0486
				       29  11 00066 	    BRB     4$							      ; 0479
	      40000000   8F	       52  D1 00068 2$:     CMPL    R2, #1073741824					      ; 0489
				       1B  1A 0006F 	    BGTRU   3$							      ;
				       04  DD 00071 	    PUSHL   #4							      ; 0492
		         63 	       01  FB 00073 	    CALLS   #1, CHECK_POINTER					      ;
		         1C 	       50  E9 00076 	    BLBC    R0, 5$						      ;
		         50 	  FF   A2  9E 00079 	    MOVAB   -1(R2), R0						      ; 0493
	   89 	         50 	       10  9C 0007D 	    ROTL    #16, R0, (MAP_POINTER)+				      ;
		    FD   A9	  C0   8F  88 00081 	    BISB2   #192, -3(MAP_POINTER)				      ; 0494
		         89 	  08   AC  D0 00086 	    MOVL    LBN, (MAP_POINTER)+					      ; 0495
				       05  11 0008A 	    BRB     4$							      ; 0489
		  0000'  CF	       00  FB 0008C 3$:     CALLS   #0, P.AAA						      ; 0499
		         50 	       01  D0 00091 4$:     MOVL    #1, R0						      ; 0501
					   04 00094 	    RET     							      ;
				       50  D4 00095 5$:     CLRL    R0							      ; 0414
					   04 00097 	    RET     							      ;

; Routine Size:  152 bytes



; Bliss-32 10.1-416	Monday 21-AUG-1978 23:17:46	DBB3:[F11B.SRC]MAKPTR.B32;6					Page 3
;
;	0504	ROUTINE CHECK_POINTER (SIZE) : L_CHECK_POINTER =
;	0505	
;	0506	!++
;	0507	!
;	0508	! FUNCTIONAL DESCRIPTION:
;	0509	!
;	0510	!	This routine determines whether a map pointer of the given size
;	0511	!	will fit in the file header.
;	0512	!
;	0513	!
;	0514	! CALLING SEQUENCE:
;	0515	!	CHECK_POINTER (ARG1)
;	0516	! INPUT PARAMETERS:
;	0517	!	ARG1: map pointer size in words
;	0518	!
;	0519	! IMPLICIT INPUTS:
;	0520	!	R8: address of file header
;	0521	!
;	0522	! OUTPUT PARAMETERS:
;	0523	!	NONE
;	0524	!
;	0525	! IMPLICIT OUTPUTS:
;	0526	!	NONE
;	0527	!
;	0528	! ROUTINE VALUE:
;	0529	!	1 if pointer fits
;	0530	!	0 if not
;	0531	!
;	0532	! SIDE EFFECTS:
;	0533	!	header map in use count updated if pointer fits
;	0534	!
;	0535	!--
;	0536	
;	0537	BEGIN
;	0538	
;	0539	EXTERNAL REGISTER
;	0540		HEADER		= 8 : REF BBLOCK; ! file header address
;	0541	
;	0542	
;	0543	IF .HEADER[FH2$B_MAP_INUSE] + .SIZE GTRU
;	0544	    .HEADER[FH2$B_ACOFFSET] - .HEADER[FH2$B_MPOFFSET]
;	0545	THEN RETURN 0;
;	0546	
;	0547	HEADER[FH2$B_MAP_INUSE] = .HEADER[FH2$B_MAP_INUSE] + .SIZE;
;	0548	
;	0549	RETURN 1;
;	0550	
;	0551	END;					! end of routine CHECK_POINTER





					 0004 00098 CHECK_POINTER:
							    .WORD   Save R2						      ; 0504

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:17:46	DBB3:[F11B.SRC]MAKPTR.B32;6					Page 3-1
;
		         51 	  3A   A8  9A 0009A 	    MOVZBL  58(HEADER), R1					      ; 0543
		         51 	  04   AC  C0 0009E 	    ADDL2   SIZE, R1						      ;
		         50 	  02   A8  9A 000A2 	    MOVZBL  2(HEADER), R0					      ; 0544
		         52 	  01   A8  9A 000A6 	    MOVZBL  1(HEADER), R2					      ;
		         50 	       52  C2 000AA 	    SUBL2   R2, R0						      ;
		         50 	       51  D1 000AD 	    CMPL    R1, R0						      ; 0543
				       09  1A 000B0 	    BGTRU   1$							      ;
		    3A   A8	  04   AC  80 000B2 	    ADDB2   SIZE, 58(HEADER)					      ; 0547
		         50 	       01  D0 000B7 	    MOVL    #1, R0						      ; 0549
					   04 000BA 	    RET     							      ;
				       50  D4 000BB 1$:     CLRL    R0							      ; 0504
					   04 000BD 	    RET     							      ;

; Routine Size:  38 bytes


;	0552	
;	0553	END
;	0554	ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $LOCKEDC2$     	     8  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $CODE$         	   190  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]LIB.L32;1		      5582        20         0       227





; Size:		190 code + 8 data bytes
; Run Time:	00:06.2
; Elapsed Time:	00:15.1
; Memory Used:	275 pages
; Compilation Complete
