
; Bliss-32 10.1-416	Monday 21-AUG-1978 23:08:13	DBB3:[F11B.SRC]CHKPRO.B32;15					Page 1
;
;	0001	MODULE CHKPRO (
;	0002			LANGUAGE (BLISS32),
;	0003			IDENT = 'B0007'
;	0004			) =
;	0005	BEGIN
;	0006	
;	0007	!
;	0008	! Copyright (c) 1977
;	0009	! Digital Equipment Corporation, Maynard, Massachusetts 01754
;	0010	!
;	0011	! This software is furnished  under a license for use only on a single
;	0012	! computer  system and  may be  copied only with  the inclusion of the
;	0013	! above copyright notice.  This software, or any other copies thereof,
;	0014	! may not be provided or  otherwise made available to any other person
;	0015	! except for use on such system and to one who agrees to these license
;	0016	! terms.  Title to and  ownership of the  software  shall at all times
;	0017	! remain in DEC.
;	0018	!
;	0019	! The information in this software is subject to change without notice
;	0020	! and should  not be construed  as a commitment  by Digital  Equipment
;	0021	! Corporation.
;	0022	!
;	0023	! DEC assumes  no  responsibility  for  the use or  reliability of its
;	0024	! software on equipment which is not supplied by DEC.
;	0025	
;	0026	!++
;	0027	!
;	0028	! FACILITY:  F11ACP Structure Level 2
;	0029	!
;	0030	! ABSTRACT:
;	0031	!
;	0032	!	This routine checks the volume and file protection to see if the
;	0033	!	user is authorized to perform the intended operation.
;	0034	!
;	0035	! ENVIRONMENT:
;	0036	!
;	0037	!	STARLET operating system, including privileged system services
;	0038	!	and internal exec routines.
;	0039	!
;	0040	!--
;	0041	!
;	0042	!
;	0043	! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  2-May-1977  10:45
;	0044	!
;	0045	! REVISION HISTORY:
;	0046	!
;	0047	!   Andrew C. Goldstein, 9-Aug-1977  10:40
;	0048	!   X0002 - Add file segment number check (access to primary headers only)
;	0049	!
;	0050	!   Andrew C. Goldstein, 14-Dec-1977  14:04
;	0051	!   X0003 - Modify for structure level 2
;	0052	!
;	0053	!   Andrew C. Goldstein, 23-May-78  13:59
;	0054	!   B0004 - Bug in write attributes protection check
;	0055	!

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:08:13	DBB3:[F11B.SRC]CHKPRO.B32;15					Page 1-1
;
;	0056	!   Andrew C. Goldstein, 12-Jun-78  21:06
;	0057	!   B0005 - PCB vector name change
;	0058	!
;	0059	!   Andrew C. Goldstein, 6-Jul-78  14:34
;	0060	!   B0006 - Add execute protection
;	0061	!
;	0062	!   Andrew C. Goldstein, 14-Jul-78  17:10
;	0063	!   B0007 - Make read access imply execute access
;	0064	!
;	0065	!**
;	0066	
;	0067	
;	0068	LIBRARY 'SYS$LIBRARY:LIB.L32';
;	0069	REQUIRE 'SRC$:FCPDEF.B32';

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:08:13	DBB3:[F11B.SRC]CHKPRO.B32;15					Page 2
;
;	0418	GLOBAL ROUTINE CHECK_PROTECT (ACCESS, HEADER, FCB) : NOVALUE =
;	0419	
;	0420	!++
;	0421	!
;	0422	! FUNCTIONAL DESCRIPTION:
;	0423	!
;	0424	!	This routine checks the volume and file protection to see if the
;	0425	!	user is authorized to perform the intended operation.
;	0426	!
;	0427	! CALLING SEQUENCE:
;	0428	!	CHECK_PROTECTION (ARG1, ARG2, ARG3)
;	0429	!
;	0430	! INPUT PARAMETERS:
;	0431	!	ARG1: access mode
;	0432	!		READ_ACCESS	= 0
;	0433	!		WRITE_ACCESS	= 1
;	0434	!		DELETE_ACCESS	= 2
;	0435	!		CREATE_ACCESS	= 3
;	0436	!		RDATT_ACCESS	= 4
;	0437	!		WRATT_ACCESS	= 5
;	0438	!		EXEC_ACCESS	= 6
;	0439	!	ARG2: address of file header, if any
;	0440	!	ARG3: address of FCB or 0
;	0441	!
;	0442	! IMPLICIT INPUTS:
;	0443	!	CURRENT_UCB: address of device UCB
;	0444	!	IO_PACKET: I/O packet of this request
;	0445	!
;	0446	! OUTPUT PARAMETERS:
;	0447	!	NONE
;	0448	!
;	0449	! IMPLICIT OUTPUTS:
;	0450	!	NONE
;	0451	!
;	0452	! ROUTINE VALUE:
;	0453	!	NONE
;	0454	!
;	0455	! SIDE EFFECTS:
;	0456	!	NONE
;	0457	!
;	0458	!--
;	0459	
;	0460	BEGIN
;	0461	
;	0462	MAP
;	0463		HEADER		: REF BBLOCK,	! file header arg
;	0464		FCB		: REF BBLOCK;	! FCB arg
;	0465	
;	0466	LITERAL					! file and volume protection bits
;	0467		READ_BIT	= 1,
;	0468		WRITE_BIT	= 2,
;	0469		EXECUTE_BIT	= 4,
;	0470		CREATE_BIT	= 4,
;	0471		DELETE_BIT	= 8;
;	0472	

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:08:13	DBB3:[F11B.SRC]CHKPRO.B32;15					Page 2-1
;
;	0473	LOCAL
;	0474		FILE_PROT,			! protection code of file
;	0475		FILE_UIC,			! file owner UIC
;	0476		FILE_PRIV	: BITVECTOR [4], ! access privileges granted to file
;	0477		SEG_NUMBER,			! segment number of file header
;	0478		PCB		: REF BBLOCK,	! PCB of user
;	0479		MAP_AREA	: REF BBLOCK;	! file header map area
;	0480	
;	0481	BIND					! access mode tables
;	0482						! write operation on volume
;	0483		WRITE_OP	= UPLIT BYTE (
;	0484				%B'0101110'
;	0485				) : BITVECTOR,
;	0486	
;	0487						! check system or owner UIC
;	0488		SYS_OWNER	= UPLIT BYTE (
;	0489				%B'0110000'
;	0490				) : BITVECTOR,
;	0491	
;	0492						! check for zero file segment number
;	0493		EXT_HEADER	= UPLIT BYTE (
;	0494				%B'0100111'
;	0495				) : BITVECTOR,
;	0496	
;	0497						! volume access bits
;	0498		VOL_ACCESS	= UPLIT BYTE (
;	0499				READ_BIT,
;	0500				READ_BIT OR WRITE_BIT,
;	0501				DELETE_BIT,
;	0502				READ_BIT OR WRITE_BIT OR CREATE_BIT,
;	0503				READ_BIT,
;	0504				READ_BIT OR WRITE_BIT,
;	0505				READ_BIT
;	0506				) : VECTOR [,BYTE],
;	0507	
;	0508						! file access bits
;	0509		FILE_ACCESS	= UPLIT BYTE (
;	0510				READ_BIT,
;	0511				READ_BIT OR WRITE_BIT,
;	0512				DELETE_BIT,
;	0513				0,
;	0514				READ_BIT,
;	0515				0,
;	0516				EXECUTE_BIT
;	0517				) : VECTOR [,BYTE];
;	0518	
;	0519	EXTERNAL
;	0520		CURRENT_UCB	: REF BBLOCK,	! device UCB
;	0521		IO_PACKET	: REF BBLOCK,	! I/O packet of this request
;	0522		SCH$GL_PCBVEC	: REF VECTOR ADDRESSING_MODE (ABSOLUTE);
;	0523						! system PCB vector
;	0524	
;	0525	EXTERNAL ROUTINE
;	0526		GET_ACCESS;			! get access bits for user
;	0527	

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:08:13	DBB3:[F11B.SRC]CHKPRO.B32;15					Page 2-2
;
;	0528	
;	0529	! First, if this is a write operation, check is the volume is software
;	0530	! write locked.
;	0531	!
;	0532	
;	0533	IF .WRITE_OP[.ACCESS]
;	0534	AND .BBLOCK [CURRENT_UCB[UCB$L_DEVCHAR], DEV$V_SWL]
;	0535	THEN ERR_EXIT (SS$_WRITLCK);
;	0536	
;	0537	! Now check the volume protection. Get the volume access rights for this user
;	0538	! and use them to bit clear the access intent bits appropriate to the
;	0539	! function. If all intent bits clear, access is granted.
;	0540	!
;	0541	
;	0542	IF (NOT GET_ACCESS (.CURRENT_UCB[UCB$L_OWNUIC], .CURRENT_UCB[UCB$W_VPROT])
;	0543	    AND .VOL_ACCESS[.ACCESS]) NEQ 0
;	0544	THEN ERR_EXIT (SS$_NOPRIV);
;	0545	
;	0546	! Get the protection bits and the owner UIC of the file.
;	0547	!
;	0548	
;	0549	IF .FCB NEQ 0
;	0550	THEN
;	0551	    BEGIN
;	0552	    FILE_PROT = .FCB[FCB$W_FILEPROT];
;	0553	    FILE_UIC = .FCB[FCB$L_FILEOWNER];
;	0554	    SEG_NUMBER = .FCB[FCB$W_SEGN];
;	0555	    END
;	0556	ELSE
;	0557	    BEGIN
;	0558	    IF .HEADER NEQ 0
;	0559	    THEN
;	0560		BEGIN
;	0561		FILE_PROT = .HEADER[FH2$W_FILEPROT];
;	0562		FILE_UIC = .HEADER[FH2$L_FILEOWNER];
;	0563		SEG_NUMBER = .MAP_AREA[FH2$W_SEG_NUM];
;	0564		END
;	0565	    ELSE
;	0566		BEGIN
;	0567		FILE_PROT = 0;
;	0568		FILE_UIC = 0;
;	0569		SEG_NUMBER = 0;
;	0570		END;
;	0571	    END;
;	0572	
;	0573	! Check if the system or owner is allowed regardless of file protection.
;	0574	!
;	0575	
;	0576	PCB = .SCH$GL_PCBVEC[.(IO_PACKET[IRP$L_PID])<0,16>];
;	0577	IF .SYS_OWNER[.ACCESS]
;	0578	AND (.IO_PACKET[IRP$V_PRIVIO]
;	0579	    OR .PCB[PCB$W_GRP] LEQU SYSTEM_UIC
;	0580	    OR .PCB[PCB$L_UIC] EQL .FILE_UIC)
;	0581	THEN RETURN;
;	0582	

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:08:13	DBB3:[F11B.SRC]CHKPRO.B32;15					Page 2-3
;
;	0583	! Check if this is an extension header. If so, only the system is allowed access
;	0584	! for most operations.
;	0585	!
;	0586	
;	0587	IF .EXT_HEADER[.ACCESS]
;	0588	THEN
;	0589	    BEGIN
;	0590	    IF .SEG_NUMBER NEQ 0
;	0591	    AND NOT .IO_PACKET[IRP$V_PRIVIO]
;	0592	    AND .PCB[PCB$W_GRP] GTRU SYSTEM_UIC
;	0593	    THEN ERR_EXIT (SS$_NOPRIV);
;	0594	    END;
;	0595	
;	0596	
;	0597	! Finally check the access intent bits against the file protection in the
;	0598	! same way as the volume protection. Note that write attributes is not
;	0599	! handled by protection bits - it must have passed system or owner above.
;	0600	!
;	0601	
;	0602	FILE_PRIV = GET_ACCESS (.FILE_UIC, .FILE_PROT);
;	0603	IF .FILE_PRIV[0] THEN FILE_PRIV[2] = 1;	! allow execute if read
;	0604	
;	0605	IF .ACCESS EQL WRATT_ACCESS
;	0606	OR (NOT .FILE_PRIV
;	0607	    AND .FILE_ACCESS[.ACCESS]) NEQ 0
;	0608	THEN ERR_EXIT (SS$_NOPRIV);
;	0609	
;	0610	END;					! end of routine CHECK_PROTECT


							    .TITLE  CHKPRO
							    .IDENT  \B0007\

							    .PSECT  $CODE$,NOWRT,2

					  2E  00000 P.AAA:  .BYTE   46							      ;
					      00001	    .BLKB   3
					  30  00004 P.AAB:  .BYTE   48							      ;
					      00005	    .BLKB   3
					  27  00008 P.AAC:  .BYTE   39							      ;
					      00009	    .BLKB   3
		  01  03  01  07  08  03  01  0000C P.AAD:  .BYTE   1, 3, 8, 7, 1, 3, 1					      ;
					      00013	    .BLKB   1
		  04  00  01  00  08  03  01  00014 P.AAE:  .BYTE   1, 3, 8, 0, 1, 0, 4					      ;
					      0001B	    .BLKB   1

						    WRITE_OP=		P.AAA
						    SYS_OWNER=		P.AAB
						    EXT_HEADER=		P.AAC
						    VOL_ACCESS=		P.AAD
						    FILE_ACCESS=	P.AAE
							    .EXTRN  CURRENT_UCB, IO_PACKET, SCH$GL_PCBVEC, GET_ACCESS

					 007C 0001C 	    .ENTRY  CHECK_PROTECT, Save R2,R3,R4,R5,R6			      ; 0418
		         56 	  DF   AF  9E 0001E 	    MOVAB   WRITE_OP, R6					      ;

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:08:13	DBB3:[F11B.SRC]CHKPRO.B32;15					Page 2-4
;
	   0F 	         66 	  04   AC  E1 00022 	    BBC     ACCESS, WRITE_OP, 1$				      ; 0533
		         50 	0000G  CF  D0 00027 	    MOVL    CURRENT_UCB, R0					      ; 0534
	   05 	    37   A0	       01  E1 0002C 	    BBC     #1, 55(R0), 1$					      ;
				025C   8F  BF 00031 	    CHMU    #604						      ; 0535
					   04 00035 	    RET     							      ;
		         50 	0000G  CF  D0 00036 1$:     MOVL    CURRENT_UCB, R0					      ; 0542
		         7E 	  1A   A0  3C 0003B 	    MOVZWL  26(R0), -(SP)					      ;
				  1C   A0  DD 0003F 	    PUSHL   28(R0)						      ;
		  0000G  CF	       02  FB 00042 	    CALLS   #2, GET_ACCESS					      ;
		         50 	       50  D2 00047 	    MCOML   R0, R0						      ;
		         51 	  0C   A6  9E 0004A 	    MOVAB   VOL_ACCESS, R1					      ; 0418
		    04 BC41	       50  93 0004E 	    BITB    R0, @ACCESS[R1]					      ; 0542
				       03  13 00053 	    BEQL    2$							      ;
				     008D  31 00055 	    BRW     9$							      ;
		         50 	  0C   AC  D0 00058 2$:     MOVL    FCB, R0						      ; 0549
				       0E  13 0005C 	    BEQL    3$							      ;
		         55 	  3C   A0  3C 0005E 	    MOVZWL  60(R0), FILE_PROT					      ; 0552
		         54 	  38   A0  D0 00062 	    MOVL    56(R0), FILE_UIC					      ; 0553
		         52 	  26   A0  3C 00066 	    MOVZWL  38(R0), SEG_NUMBER					      ; 0554
				       18  11 0006A 	    BRB     5$							      ; 0549
		         50 	  08   AC  D0 0006C 3$:     MOVL    HEADER, R0						      ; 0558
				       0E  13 00070 	    BEQL    4$							      ;
		         55 	  40   A0  3C 00072 	    MOVZWL  64(R0), FILE_PROT					      ; 0561
		         54 	  3C   A0  D0 00076 	    MOVL    60(R0), FILE_UIC					      ; 0562
		         52 	  04   A0  3C 0007A 	    MOVZWL  4(MAP_AREA), SEG_NUMBER				      ; 0563
				       04  11 0007E 	    BRB     5$							      ; 0558
				       54  7C 00080 4$:     CLRQ    FILE_UIC						      ; 0568
				       52  D4 00082 	    CLRL    SEG_NUMBER						      ; 0569
		         53 00000000G  9F  D0 00084 5$:     MOVL    @#SCH$GL_PCBVEC, R3					      ; 0576
		         51 	0000G  CF  D0 0008B 	    MOVL    IO_PACKET, R1					      ;
		         50 	  0C   A1  3C 00090 	    MOVZWL  12(R1), R0						      ;
		         50 	     6340  D0 00094 	    MOVL    (R3)[R0], PCB					      ;
	   11 	    04   A6	  04   AC  E1 00098 	    BBC     ACCESS, SYS_OWNER, 6$				      ; 0577
	   44 	    2B   A1	       01  E0 0009E 	    BBS     #1, 43(R1), 10$					      ; 0578
		         08 	  22   A0  B1 000A3 	    CMPW    34(PCB), #8						      ; 0579
				       3E  1B 000A7 	    BLEQU   10$							      ;
		         54 	  20   A0  D1 000A9 	    CMPL    32(PCB), FILE_UIC					      ; 0580
				       38  13 000AD 	    BEQL    10$							      ;
	   0F 	    08   A6	  04   AC  E1 000AF 6$:     BBC     ACCESS, EXT_HEADER, 7$				      ; 0587
				       52  D5 000B5 	    TSTL    SEG_NUMBER						      ; 0590
				       0B  13 000B7 	    BEQL    7$							      ;
	   06 	    2B   A1	       01  E0 000B9 	    BBS     #1, 43(R1), 7$					      ; 0591
		         08 	  22   A0  B1 000BE 	    CMPW    34(PCB), #8						      ; 0592
				       21  1A 000C2 	    BGTRU   9$							      ;
				       30  BB 000C4 7$:     PUSHR   #^M<R4,R5>						      ; 0602
		  0000G  CF	       02  FB 000C6 	    CALLS   #2, GET_ACCESS					      ;
		         03 	       50  E9 000CB 	    BLBC    FILE_PRIV, 8$					      ; 0603
		         50 	       04  88 000CE 	    BISB2   #4, FILE_PRIV					      ;
		         05 	  04   AC  D1 000D1 8$:     CMPL    ACCESS, #5						      ; 0605
				       0E  13 000D5 	    BEQL    9$							      ;
		         50 	       50  D2 000D7 	    MCOML   FILE_PRIV, R0					      ; 0606
		         51 	  14   A6  9E 000DA 	    MOVAB   FILE_ACCESS, R1					      ; 0418
		    04 BC41	       50  93 000DE 	    BITB    R0, @ACCESS[R1]					      ; 0606
				       02  13 000E3 	    BEQL    10$							      ;
				       24  BF 000E5 9$:     CHMU    #36							      ; 0608

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:08:13	DBB3:[F11B.SRC]CHKPRO.B32;15					Page 2-5
;
					   04 000E7 10$:    RET     							      ; 0418

; Routine Size:  204 bytes


;	0611	
;	0612	END
;	0613	ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $CODE$         	   232  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]LIB.L32;1		      5582        23         0       236





; Size:		204 code + 28 data bytes
; Run Time:	00:07.3
; Elapsed Time:	00:15.9
; Memory Used:	298 pages
; Compilation Complete
