
; Bliss-32 10.1-416	Monday 21-AUG-1978 23:18:04	DBB3:[F11B.SRC]MODIFY.B32;9					Page 1
;
;	0001	MODULE MODIFY (
;	0002			LANGUAGE (BLISS32),
;	0003			IDENT = 'B0019A'
;	0004			) =
;	0005	BEGIN
;	0006	
;	0007	!
;	0008	! Copyright (c) 1977
;	0009	! Digital Equipment Corporation, Maynard, Massachusetts 01754
;	0010	!
;	0011	! This software is furnished  under a license for use only on a single
;	0012	! computer  system and  may be  copied only with  the inclusion of the
;	0013	! above copyright notice.  This software, or any other copies thereof,
;	0014	! may not be provided or  otherwise made available to any other person
;	0015	! except for use on such system and to one who agrees to these license
;	0016	! terms.  Title to and  ownership of the  software  shall at all times
;	0017	! remain in DEC.
;	0018	!
;	0019	! The information in this software is subject to change without notice
;	0020	! and should  not be construed  as a commitment  by Digital  Equipment
;	0021	! Corporation.
;	0022	!
;	0023	! DEC assumes  no  responsibility  for  the use or  reliability of its
;	0024	! software on equipment which is not supplied by DEC.
;	0025	
;	0026	!++
;	0027	!
;	0028	! FACILITY:  F11ACP Structure Level 2
;	0029	!
;	0030	! ABSTRACT:
;	0031	!
;	0032	!	This routine implements the MODIFY function.
;	0033	!
;	0034	! ENVIRONMENT:
;	0035	!
;	0036	!	STARLET operating system, including privileged system services
;	0037	!	and internal exec routines.
;	0038	!
;	0039	!--
;	0040	!
;	0041	!
;	0042	! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  6-Jan-1977  23:03
;	0043	!
;	0044	! REVISION HISTORY:
;	0045	!
;	0046	!   Andrew C. Goldstein, 16-Feb-1977  15:04
;	0047	!   X0002 - Modify for condition handling
;	0048	!
;	0049	!   Andrew C. Goldstein, 25-Feb-1977  16:20
;	0050	!   X0003 - Add EXTEND function
;	0051	!
;	0052	!   Andrew C. Goldstein, 21-Mar-1977  13:16
;	0053	!   X0004 - Add TRUNCATE function
;	0054	!
;	0055	!   Andrew C. Goldstein, 23-Mar-1977  15:06

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:18:04	DBB3:[F11B.SRC]MODIFY.B32;9					Page 1-1
;
;	0056	!   X0005 - Key directory search off DID; record FCB address.
;	0057	!
;	0058	!   Andrew C. Goldstein, 25-Mar-1977  18:03
;	0059	!   X0006 - Remove FIB length check
;	0060	!
;	0061	!   Andrew C. Goldstein, 1-Apr-1977  13:39
;	0062	!   X0007 - Change call to FIND
;	0063	!
;	0064	!   Andrew C. Goldstein, 1-Apr-1977  17:01
;	0065	!   X0008 - Move GET_FIB out of kernel mode
;	0066	!
;	0067	!   Andrew C. Goldstein, 4-May-1977  17:36
;	0068	!   X0009 - Add file protection check
;	0069	!
;	0070	!   Andrew C. Goldstein, 9-May-1977  18:12
;	0071	!   X0010 - Make individual protection checks on extend and write attributes
;	0072	!
;	0073	!   Andrew C. Goldstein, 12-Jul-1977  14:30
;	0074	!   X0011 - Move WRITE_ATTRIB out of kernel mode
;	0075	!
;	0076	!   Andrew C. Goldstein, 3-Aug-1977  16:52
;	0077	!   X0012 - Checksum file header at end of operation
;	0078	!
;	0079	!   Andrew C. Goldstein, 10-Aug-1977  15:33
;	0080	!   X0013 - Move update of FCB to WRITE_ATTRIB
;	0081	!
;	0082	!   Andrew C. Goldstein, 26-Sep-1977  14:13
;	0083	!   X0014 - Allow multiple writers; add FID check after directory lookup
;	0084	!
;	0085	!   Andrew C. Goldstein, 12-Dec-1977  13:50
;	0086	!   X0015 - file ID interface changes
;	0087	!
;	0088	!   Andrew C. Goldstein, 14-Dec-1977  15:17
;	0089	!   X0016 - Modify for structure level 2
;	0090	!
;	0091	!   Andrew C. Goldstein, 3-Feb-1978  16:27
;	0092	!   B0017 - No protection check if file is open
;	0093	!
;	0094	!   Andrew C. Goldstein, 19-Jun-78  20:09
;	0095	!   B0018 - Checksum header after write attributes
;	0096	!
;	0097	!   Andrew C. Goldstein, 28-Jun-78  17:08
;	0098	!   B0019 - Add allocation and truncate interlocks, update FCB at end
;	0099	!
;	0100	!**
;	0101	
;	0102	
;	0103	LIBRARY 'SYS$LIBRARY:LIB.L32';
;	0104	REQUIRE 'SRC$:FCPDEF.B32';

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:18:04	DBB3:[F11B.SRC]MODIFY.B32;9					Page 2
;
;	0453	GLOBAL ROUTINE MODIFY  =
;	0454	
;	0455	!++
;	0456	!
;	0457	! FUNCTIONAL DESCRIPTION:
;	0458	!
;	0459	!	This routine implements the MODIFY function.
;	0460	!
;	0461	! CALLING SEQUENCE:
;	0462	!	MODIFY ()
;	0463	!
;	0464	! INPUT PARAMETERS:
;	0465	!	NONE
;	0466	!
;	0467	! IMPLICIT INPUTS:
;	0468	!	CURRENT_WINDOW: window for file
;	0469	!	PRIMARY_FCB: FCB of file
;	0470	!	IO_PACKET: I/O packet in process
;	0471	!	FILE_HEADER: address of current file header
;	0472	!
;	0473	! OUTPUT PARAMETERS:
;	0474	!	NONE
;	0475	!
;	0476	! IMPLICIT OUTPUTS:
;	0477	!	NONE
;	0478	!
;	0479	! ROUTINE VALUE:
;	0480	!	NONE
;	0481	!
;	0482	! SIDE EFFECTS:
;	0483	!	file and FCB modified
;	0484	!
;	0485	!--
;	0486	
;	0487	BEGIN
;	0488	
;	0489	LOCAL
;	0490		ABD		: REF BBLOCKVECTOR [,ABD$C_LENGTH],
;	0491						! buffer descriptors
;	0492		FIB		: REF BBLOCK,	! FIB
;	0493		FCB		: REF BBLOCK,	! FCB of file
;	0494		HEADER		: REF BBLOCK;	! file header
;	0495	
;	0496	EXTERNAL
;	0497		CLEANUP_FLAGS	: BITVECTOR,	! cleanup action flags
;	0498		IO_PACKET	: REF BBLOCK,	! I/O packet in process
;	0499		FILE_HEADER	: REF BBLOCK,	! address of currently resident file header
;	0500		CURRENT_WINDOW	: REF BBLOCK,	! window of file
;	0501		PRIMARY_FCB	: REF BBLOCK,	! FCB of file
;	0502		CURRENT_VCB	: REF BBLOCK;	! VCB of volume
;	0503	
;	0504	EXTERNAL ROUTINE
;	0505		GET_FIB,			! get FIB of request
;	0506		FIND,				! find name in directory
;	0507		SEARCH_FCB,			! search FCB list

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:18:04	DBB3:[F11B.SRC]MODIFY.B32;9					Page 2-1
;
;	0508		READ_HEADER,			! read file header
;	0509		CHECK_PROTECT,			! check file protection
;	0510		WRITE_ATTRIB,			! write file attributes
;	0511		EXTEND,				! extend file
;	0512		TRUNCATE,			! truncate file
;	0513		CHECKSUM,			! checksum the file header
;	0514		UPDATE_FCB;			! update FCB contents
;	0515	
;	0516	
;	0517	! First find the buffer descriptor, FIB, FCB, etc., and read the header.
;	0518	!
;	0519	
;	0520						! pointer to buffer descriptors
;	0521	ABD = .BBLOCK [.IO_PACKET[IRP$L_SVAPTE], AIB$L_DESCRIPT];
;	0522	FIB = GET_FIB (.ABD);
;	0523	
;	0524	! If a directory ID is present, do a directory search first.
;	0525	!
;	0526	
;	0527	IF .CLEANUP_FLAGS[CLF_DIRECTORY]
;	0528	THEN FIND (.ABD, .FIB, 0);
;	0529	
;	0530	! If there is a file open on the channel, check the file ID returned by the
;	0531	! FIND against the file ID that is open. If they are different, drop the FCB
;	0532	! and window addresses on the floor.
;	0533	!
;	0534	
;	0535	IF .PRIMARY_FCB NEQ 0
;	0536	THEN
;	0537	    IF .PRIMARY_FCB[FCB$W_FID_NUM] NEQ .FIB[FIB$W_FID_NUM]
;	0538	    OR .PRIMARY_FCB[FCB$W_FID_RVN] NEQ .FIB[FIB$W_FID_RVN]
;	0539	    THEN
;	0540		BEGIN
;	0541		PRIMARY_FCB = 0;
;	0542		CURRENT_WINDOW = 0;
;	0543		END;
;	0544	
;	0545	FCB = SEARCH_FCB (FIB[FIB$W_FID]);
;	0546	PRIMARY_FCB = .FCB;
;	0547	HEADER = READ_HEADER (FIB[FIB$W_FID], .FCB);
;	0548	
;	0549	
;	0550	! Arbitrate access interlocks. If this is the accessor, then the file
;	0551	! must be write accessed. If it is not, then the file must not be
;	0552	! locked against modification and he must pass file protection.
;	0553	!
;	0554	
;	0555	IF .CURRENT_WINDOW NEQ 0
;	0556	THEN
;	0557	    BEGIN
;	0558	    IF NOT .CURRENT_WINDOW[WCB$V_WRITE]
;	0559	    THEN ERR_EXIT (SS$_NOPRIV);
;	0560	    END
;	0561	ELSE
;	0562	    BEGIN

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:18:04	DBB3:[F11B.SRC]MODIFY.B32;9					Page 2-2
;
;	0563	    IF .FIB[FIB$V_EXTEND] OR .FIB[FIB$V_TRUNC]
;	0564	    THEN
;	0565		BEGIN
;	0566		IF .CURRENT_VCB[VCB$V_NOALLOC]
;	0567		THEN ERR_EXIT (SS$_WRITLCK);
;	0568	
;	0569		IF .FCB NEQ 0
;	0570		THEN
;	0571		    IF .FCB[FCB$V_EXCL]
;	0572		    OR .FCB[FCB$W_LCNT] NEQ 0
;	0573		    THEN ERR_EXIT (SS$_ACCONFLICT);
;	0574		CHECK_PROTECT (WRITE_ACCESS, .HEADER, .FCB);
;	0575		END;
;	0576	    END;
;	0577	
;	0578	
;	0579	! If an attribute list exists, perform the write attributes operation.
;	0580	!
;	0581	
;	0582	IF .IO_PACKET[IRP$W_BCNT] GTR ABD$C_ATTRIB
;	0583	THEN
;	0584	    BEGIN
;	0585	    WRITE_ATTRIB (.HEADER, .ABD);
;	0586	    CHECKSUM (.HEADER);
;	0587	    END;
;	0588	
;	0589	! If the extend enable bit is on, perform the extend operation.
;	0590	! If the truncate bit is on, perform the truncate operation. If both are
;	0591	! on, it is an error.
;	0592	!
;	0593	
;	0594	IF .FIB[FIB$V_EXTEND]
;	0595	THEN
;	0596	    BEGIN
;	0597	    IF .FIB[FIB$V_TRUNC] THEN ERR_EXIT (SS$_BADPARAM);
;	0598	    EXTEND (.FIB, .HEADER);
;	0599	    END;
;	0600	
;	0601	IF .FIB[FIB$V_TRUNC]
;	0602	THEN
;	0603	    BEGIN
;	0604	    IF .FCB[FCB$W_TCNT] NEQ 0
;	0605	    THEN ERR_EXIT (SS$_ACCONFLICT);
;	0606	    TRUNCATE (.FIB, .HEADER, DEALLOC_BLOCKS);
;	0607	    END;
;	0608	
;	0609	HEADER = .FILE_HEADER;
;	0610	CHECKSUM (.HEADER);			! checksum the file header
;	0611	KERNEL_CALL (UPDATE_FCB, .HEADER);
;	0612	
;	0613	RETURN 1;
;	0614	
;	0615	END;					! end of routine MODIFY



; Bliss-32 10.1-416	Monday 21-AUG-1978 23:18:04	DBB3:[F11B.SRC]MODIFY.B32;9					Page 2-3
;
							    .TITLE  MODIFY
							    .IDENT  \B0019A\

							    .EXTRN  CLEANUP_FLAGS, IO_PACKET, FILE_HEADER, CURRENT_WINDOW
							    .EXTRN  PRIMARY_FCB, CURRENT_VCB, GET_FIB, FIND, SEARCH_FCB
							    .EXTRN  READ_HEADER, CHECK_PROTECT, WRITE_ATTRIB, EXTEND
							    .EXTRN  TRUNCATE, CHECKSUM, UPDATE_FCB, SYS$CMKRNL

							    .PSECT  $CODE$,NOWRT,2

					 007C 00000 	    .ENTRY  MODIFY, Save R2,R3,R4,R5,R6				      ; 0453
		         56 	0000G  CF  9E 00002 	    MOVAB   PRIMARY_FCB, R6					      ;
		         50 	0000G  CF  D0 00007 	    MOVL    IO_PACKET, R0					      ; 0521
		         55 	  2C   B0  D0 0000C 	    MOVL    @44(R0), ABD					      ;
				       55  DD 00010 	    PUSHL   ABD							      ; 0522
		  0000G  CF	       01  FB 00012 	    CALLS   #1, GET_FIB						      ;
		         52 	       50  D0 00017 	    MOVL    R0, FIB						      ;
	   0B 	  0000G  CF	       06  E1 0001A 	    BBC     #6, CLEANUP_FLAGS, 1$				      ; 0527
				       7E  D4 00020 	    CLRL    -(SP)						      ; 0528
				       52  DD 00022 	    PUSHL   FIB							      ;
				       55  DD 00024 	    PUSHL   ABD							      ;
		  0000G  CF	       03  FB 00026 	    CALLS   #3, FIND						      ;
		         50 	       66  D0 0002B 1$:     MOVL    PRIMARY_FCB, R0					      ; 0535
				       14  13 0002E 	    BEQL    3$							      ;
		    04   A2	  20   A0  B1 00030 	    CMPW    32(R0), 4(FIB)					      ; 0537
				       07  12 00035 	    BNEQ    2$							      ;
		    08   A2	  24   A0  B1 00037 	    CMPW    36(R0), 8(FIB)					      ; 0538
				       06  13 0003C 	    BEQL    3$							      ;
				       66  D4 0003E 2$:     CLRL    PRIMARY_FCB						      ; 0541
				0000G  CF  D4 00040 	    CLRL    CURRENT_WINDOW					      ; 0542
				  04   A2  9F 00044 3$:     PUSHAB  4(FIB)						      ; 0545
		  0000G  CF	       01  FB 00047 	    CALLS   #1, SEARCH_FCB					      ;
		         53 	       50  D0 0004C 	    MOVL    R0, FCB						      ;
		         66 	       53  D0 0004F 	    MOVL    FCB, PRIMARY_FCB					      ; 0546
				       53  DD 00052 	    PUSHL   FCB							      ; 0547
				  04   A2  9F 00054 	    PUSHAB  4(FIB)						      ;
		  0000G  CF	       02  FB 00057 	    CALLS   #2, READ_HEADER					      ;
		         54 	       50  D0 0005C 	    MOVL    R0, HEADER						      ;
		         50 	0000G  CF  D0 0005F 	    MOVL    CURRENT_WINDOW, R0					      ; 0555
				       09  13 00064 	    BEQL    4$							      ;
	   36 	    0B   A0	       01  E0 00066 	    BBS     #1, 11(R0), 8$					      ; 0558
				       24  BF 0006B 	    CHMU    #36							      ; 0559
				       6C  11 0006D 	    BRB     13$							      ;
	   04 	    16   A2	       07  E0 0006F 4$:     BBS     #7, 22(FIB), 5$					      ; 0563
		         29 	  17   A2  E9 00074 	    BLBC    23(FIB), 8$						      ;
		         50 	0000G  CF  D0 00078 5$:     MOVL    CURRENT_VCB, R0					      ; 0566
	   06 	    0B   A0	       04  E1 0007D 	    BBC     #4, 11(R0), 6$					      ;
				025C   8F  BF 00082 	    CHMU    #604						      ; 0567
				       7F  11 00086 	    BRB     16$							      ;
				       53  D5 00088 6$:     TSTL    FCB							      ; 0569
				       0A  13 0008A 	    BEQL    7$							      ;
	   46 	    1E   A3	       03  E0 0008C 	    BBS     #3, 30(FCB), 12$					      ; 0571
				  1A   A3  B5 00091 	    TSTW    26(FCB)						      ; 0572
				       41  12 00094 	    BNEQ    12$							      ;
				       53  DD 00096 7$:     PUSHL   FCB							      ; 0574

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:18:04	DBB3:[F11B.SRC]MODIFY.B32;9					Page 2-4
;
				       54  DD 00098 	    PUSHL   HEADER						      ;
				       01  DD 0009A 	    PUSHL   #1							      ;
		  0000G  CF	       03  FB 0009C 	    CALLS   #3, CHECK_PROTECT					      ;
		         50 	0000G  CF  D0 000A1 8$:     MOVL    IO_PACKET, R0					      ; 0582
		         05 	  32   A0  B1 000A6 	    CMPW    50(R0), #5						      ;
				       0E  1B 000AA 	    BLEQU   9$							      ;
				       30  BB 000AC 	    PUSHR   #^M<R4,R5>						      ; 0585
		  0000G  CF	       02  FB 000AE 	    CALLS   #2, WRITE_ATTRIB					      ;
				       54  DD 000B3 	    PUSHL   HEADER						      ; 0586
		  0000G  CF	       01  FB 000B5 	    CALLS   #1, CHECKSUM					      ;
	   0F 	    16   A2	       07  E1 000BA 9$:     BBC     #7, 22(FIB), 11$					      ; 0594
		         04 	  17   A2  E9 000BF 	    BLBC    23(FIB), 10$					      ; 0597
				       14  BF 000C3 	    CHMU    #20							      ;
				       40  11 000C5 	    BRB     16$							      ;
				       14  BB 000C7 10$:    PUSHR   #^M<R2,R4>						      ; 0598
		  0000G  CF	       02  FB 000C9 	    CALLS   #2, EXTEND						      ;
		         14 	  17   A2  E9 000CE 11$:    BLBC    23(FIB), 15$					      ; 0601
				  46   A3  B5 000D2 	    TSTW    70(FCB)						      ; 0604
				       06  13 000D5 	    BEQL    14$							      ;
				0800   8F  BF 000D7 12$:    CHMU    #2048						      ; 0605
				       2A  11 000DB 13$:    BRB     16$							      ;
				       01  DD 000DD 14$:    PUSHL   #1							      ; 0606
				       14  BB 000DF 	    PUSHR   #^M<R2,R4>						      ;
		  0000G  CF	       03  FB 000E1 	    CALLS   #3, TRUNCATE					      ;
		         54 	0000G  CF  D0 000E6 15$:    MOVL    FILE_HEADER, HEADER					      ; 0609
				       54  DD 000EB 	    PUSHL   HEADER						      ; 0610
		  0000G  CF	       01  FB 000ED 	    CALLS   #1, CHECKSUM					      ;
				       54  DD 000F2 	    PUSHL   HEADER						      ; 0611
				       01  DD 000F4 	    PUSHL   #1							      ;
				       5E  DD 000F6 	    PUSHL   SP							      ;
				0000G  CF  9F 000F8 	    PUSHAB  UPDATE_FCB						      ;
	      00000000G  9F	       04  FB 000FC 	    CALLS   #4, @#SYS$CMKRNL					      ;
		         50 	       01  D0 00103 	    MOVL    #1, R0						      ; 0613
					   04 00106 	    RET     							      ;
				       50  D4 00107 16$:    CLRL    R0							      ; 0453
					   04 00109 	    RET     							      ;

; Routine Size:  266 bytes


;	0616	
;	0617	END
;	0618	ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $CODE$         	   266  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)


; Bliss-32 10.1-416	Monday 21-AUG-1978 23:18:04	DBB3:[F11B.SRC]MODIFY.B32;9					Page 2-5
;



;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]LIB.L32;1		      5582        28         0       244





; Size:		266 code + 0 data bytes
; Run Time:	00:08.3
; Elapsed Time:	00:18.5
; Memory Used:	313 pages
; Compilation Complete
