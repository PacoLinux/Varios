
; Bliss-32 10.1-416	Monday 21-AUG-1978 23:22:21	DBB3:[F11B.SRC]SNDSMB.B32;9					Page 1
;
;	0001	MODULE SNDSMB (
;	0002			LANGUAGE (BLISS32),
;	0003			IDENT = 'B0003B'
;	0004			) =
;	0005	BEGIN
;	0006	
;	0007	!
;	0008	! Copyright (c) 1977
;	0009	! Digital Equipment Corporation, Maynard, Massachusetts 01754
;	0010	!
;	0011	! This software is furnished  under a license for use only on a single
;	0012	! computer  system and  may be  copied only with  the inclusion of the
;	0013	! above copyright notice.  This software, or any other copies thereof,
;	0014	! may not be provided or  otherwise made available to any other person
;	0015	! except for use on such system and to one who agrees to these license
;	0016	! terms.  Title to and  ownership of the  software  shall at all times
;	0017	! remain in DEC.
;	0018	!
;	0019	! The information in this software is subject to change without notice
;	0020	! and should  not be construed  as a commitment  by Digital  Equipment
;	0021	! Corporation.
;	0022	!
;	0023	! DEC assumes  no  responsibility  for  the use or  reliability of its
;	0024	! software on equipment which is not supplied by DEC.
;	0025	
;	0026	!++
;	0027	!
;	0028	! FACILITY:  F11ACP Structure Level 2
;	0029	!
;	0030	! ABSTRACT:
;	0031	!
;	0032	!	This routine constructs and sends a message to the symbiont manager
;	0033	!	to cause a file to be spooled and deleted.
;	0034	!
;	0035	! ENVIRONMENT:
;	0036	!
;	0037	!	STARLET operating system, including privileged system services
;	0038	!	and internal exec routines.
;	0039	!
;	0040	!--
;	0041	!
;	0042	!
;	0043	! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  5-Jun-1978  11:23
;	0044	!
;	0045	! REVISION HISTORY:
;	0046	!
;	0047	!   Andrew C. Goldstein, 14-Jun-78  21:02
;	0048	!   B0002 - Use write now qualifier on mailbox
;	0049	!
;	0050	!   Andrew C. Goldstein, 15-Jun-78  16:30
;	0051	!   B0003 - Use system subroutine to write mailbox
;	0052	!
;	0053	!**
;	0054	
;	0055	

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:22:21	DBB3:[F11B.SRC]SNDSMB.B32;9					Page 1-1
;
;	0056	LIBRARY 'SYS$LIBRARY:LIB.L32';
;	0057	REQUIRE 'SRC$:FCPDEF.B32';
;	0406	
;	0407	
;	0408	FORWARD ROUTINE
;	0409		SEND_SYMBIONT	: NOVALUE,	! main routine
;	0410		SEND_MESSAGE;			! kernel mode routine

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:22:21	DBB3:[F11B.SRC]SNDSMB.B32;9					Page 2
;
;	0411	!+
;	0412	!
;	0413	! Format of the message sent to the symbiont manager to queue a single file.
;	0414	!
;	0415	!-
;	0416	
;	0417	MACRO
;	0418		SMB_IDENT	= 00, 0, 16, 0%,	! message identification code
;	0419		SMB_REPLYMBX	= 02, 0, 16, 0%,	! reply mailbox unit
;	0420		SMB_PRIV	= 04, 0, 00, 0%,	! process privileges (64 bits)
;	0421		SMB_UIC		= 12, 0, 32, 0%,	! sender UIC
;	0422		SMB_USERNAME	= 16, 0, 00, 0%,	! user name + account name
;	0423		SMB_PRIO	= 36, 0, 08, 0%,	! priority
;	0424		SMB_FUNC	= 38, 0, 16, 0%,	! symbiont manager function code
;	0425		SMB_QNAME	= 40, 0, 00, 0%,	! queue name
;	0426		SMB_DEVNAME	= 56, 0, 00, 0%,	! device name
;	0427		SMB_FID		= 72, 0, 00, 0%,	! file ID
;	0428		SMB_DID		= 78, 0, 00, 0%,	! directory ID
;	0429		SMB_FILENAME	= 84, 0, 00, 0%,	! file name
;	0430		SMB_OPTIONS	= 104,0, 08, 0%;	! options byte
;	0431	
;	0432	LITERAL
;	0433		SMB_USER_LEN	= 20,			! length of user + account name
;	0434		SMB_QNAMELEN	= 16,			! length of queue name
;	0435		SMB_DEVNAMELEN	= 16,			! length of device name
;	0436		SMB_FILENAMELEN	= 20,			! length of file name
;	0437		SMB_LENGTH	= 106;			! length of message buffer

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:22:21	DBB3:[F11B.SRC]SNDSMB.B32;9					Page 3
;
;	0438	GLOBAL ROUTINE SEND_SYMBIONT (ABD, HEADER, FCB) : NOVALUE =
;	0439	
;	0440	!++
;	0441	!
;	0442	! FUNCTIONAL DESCRIPTION:
;	0443	!
;	0444	!	This routine constructs and sends a message to the symbiont manager
;	0445	!	to cause a file to be spooled and deleted.
;	0446	!
;	0447	!
;	0448	! CALLING SEQUENCE:
;	0449	!	SEND_SYMBIONT (ARG1, ARG2, ARG3)
;	0450	!
;	0451	! INPUT PARAMETERS:
;	0452	!	ARG1: address of buffer descriptor packet
;	0453	!	ARG2: address of file header
;	0454	!	ARG3: address of file control block
;	0455	!
;	0456	! IMPLICIT INPUTS:
;	0457	!	IO_PACKET: address of I/O packet of this request
;	0458	!
;	0459	! OUTPUT PARAMETERS:
;	0460	!	NONE
;	0461	!
;	0462	! IMPLICIT OUTPUTS:
;	0463	!	NONE
;	0464	!
;	0465	! ROUTINE VALUE:
;	0466	!	NONE
;	0467	!
;	0468	! SIDE EFFECTS:
;	0469	!	message sent to symbiont manager, header may be altered
;	0470	!
;	0471	!--
;	0472	
;	0473	BEGIN
;	0474	
;	0475	MAP
;	0476		ABD		: REF BBLOCKVECTOR [,ABD$C_LENGTH], ! buffer descriptor arg
;	0477		HEADER		: REF BBLOCK,	! file header arg
;	0478		FCB		: REF BBLOCK;	! file control block arg
;	0479	
;	0480	LOCAL
;	0481		P,				! string scan pointer
;	0482		MSG_BUFFER	: BBLOCK [SMB_LENGTH], ! message buffer
;	0483		DEV_DESC	: VECTOR [2],	! device name string descriptor
;	0484		IDENT_AREA	: REF BBLOCK,	! address of file header ident area
;	0485		UCB		: REF BBLOCK,	! UCB of spooled device
;	0486		VCB		: REF BBLOCK;	! VCB of spooled device
;	0487	
;	0488	EXTERNAL
;	0489		IO_PACKET	: REF BBLOCK,	! I/O packet of user request
;	0490		CURRENT_UCB	: REF BBLOCK;	! UCB of current device
;	0491	
;	0492	EXTERNAL ROUTINE

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:22:21	DBB3:[F11B.SRC]SNDSMB.B32;9					Page 3-1
;
;	0493		MARK_DIRTY,			! mark buffer for rewrite
;	0494		CHECKSUM;			! compute file header checksum
;	0495	
;	0496	
;	0497	! Jam the system and owner protection fields of the file header to zero, to
;	0498	! guarantee access by the spooler.
;	0499	!
;	0500	
;	0501	(HEADER[FH2$W_FILEPROT])<0,8> = 0;
;	0502	MARK_DIRTY (.HEADER);
;	0503	CHECKSUM (.HEADER);
;	0504	
;	0505	! Now initialize the message buffer and construct the message in it.
;	0506	!
;	0507	
;	0508	CH$FILL (0, SMB_LENGTH, MSG_BUFFER);
;	0509	MSG_BUFFER[SMB_IDENT]	= MSG$_SNDSMB;
;	0510	MSG_BUFFER[SMB_UIC]	= .FCB[FCB$L_FILEOWNER];
;	0511	
;	0512	CH$COPY (.ABD[ABD$C_NAME, ABD$W_COUNT],
;	0513		ABD[ABD$C_NAME, ABD$W_TEXT] + .ABD[ABD$C_NAME, ABD$W_TEXT] + 1,
;	0514		' ', SMB_USER_LEN, MSG_BUFFER[SMB_USERNAME]);
;	0515	
;	0516	MSG_BUFFER[SMB_PRIO]	= 31 - .IO_PACKET[IRP$B_PRI];
;	0517	MSG_BUFFER[SMB_FUNC]	= SMR$K_ENTER;
;	0518	
;	0519	UCB = .IO_PACKET[IRP$L_MEDIA];
;	0520	VCB = .UCB[UCB$L_VCB];
;	0521	CH$COPY (.VCB[VCB$B_QNAMECNT] + 1,
;	0522		VCB[VCB$B_QNAMECNT],
;	0523		0, SMB_QNAMELEN, MSG_BUFFER[SMB_QNAME]);
;	0524	
;	0525	DEV_DESC[0] = SMB_DEVNAMELEN - 1;
;	0526	DEV_DESC[1] = MSG_BUFFER[SMB_DEVNAME] + 1;
;	0527	$FAO (	DESCRIPTOR ('_!AC!UW'),
;     P 0528		DEV_DESC,
;     P 0529		DEV_DESC,
;     P 0530		BBLOCK [.CURRENT_UCB[UCB$L_DDB], DDB$T_NAME],
;     P 0531		.CURRENT_UCB[UCB$W_UNIT]
;     P 0532		);
;	0533	(MSG_BUFFER[SMB_DEVNAME])<0,8> = .DEV_DESC[0];
;	0534	
;	0535	CH$MOVE (FID$C_LENGTH, FCB[FCB$W_FID], MSG_BUFFER[SMB_FID]);
;	0536	IDENT_AREA = .HEADER + .HEADER[FH2$B_IDOFFSET] * 2;
;	0537	P = CH$FIND_CH (FI2$S_FILENAME, IDENT_AREA[FI2$T_FILENAME], ' ');
;	0538	IF CH$FAIL (.P) THEN P = IDENT_AREA[FI2$T_FILENAME] + FI2$S_FILENAME - 1;
;	0539	(MSG_BUFFER[SMB_FILENAME])<0,8> = .P - IDENT_AREA[FI2$T_FILENAME];
;	0540	CH$MOVE (.P-IDENT_AREA[FI2$T_FILENAME], IDENT_AREA[FI2$T_FILENAME],
;	0541		MSG_BUFFER[SMB_FILENAME]+1);
;	0542	
;	0543	MSG_BUFFER[SMB_OPTIONS] = SMO$K_DELETE;
;	0544	
;	0545	! The actual send is done in kernel mode, since the channel assignment must
;	0546	! be done as a back door assignment.
;	0547	!

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:22:21	DBB3:[F11B.SRC]SNDSMB.B32;9					Page 3-2
;
;	0548	
;	0549	KERNEL_CALL (SEND_MESSAGE, MSG_BUFFER);
;	0550	
;	0551	END;					! end of routine SEND_SYMBIONT


							    .TITLE  SNDSMB
							    .IDENT  \B0003B\

							    .PSECT  $CODE$,NOWRT,2

		  57  55  21  43  41  21  5F  00000 P.AAB:  .ASCII  \_!AC!UW\						      ;
					      00007	    .BLKB   1
				    00000007  00008 P.AAA:  .LONG   7							      ;
				    00000000' 0000C 	    .ADDRESS P.AAB						      ;

							    .EXTRN  IO_PACKET, CURRENT_UCB, MARK_DIRTY, CHECKSUM, SYS$FAO
							    .EXTRN  SYS$CMKRNL

					 00FC 00010 	    .ENTRY  SEND_SYMBIONT, Save R2,R3,R4,R5,R6,R7		      ; 0438
		         5E 	  8C   AE  9E 00012 	    MOVAB   -116(SP), SP					      ;
		         56 	  08   AC  D0 00016 	    MOVL    HEADER, R6						      ; 0501
				  40   A6  94 0001A 	    CLRB    64(R6)						      ;
				       56  DD 0001D 	    PUSHL   R6							      ; 0502
		  0000G  CF	       01  FB 0001F 	    CALLS   #1, MARK_DIRTY					      ;
				       56  DD 00024 	    PUSHL   R6							      ; 0503
		  0000G  CF	       01  FB 00026 	    CALLS   #1, CHECKSUM					      ;
	   00 	         6E 	       00  2C 0002B 	    MOVC5   #0, (SP), #0, #106, MSG_BUFFER			      ; 0508
		    08   AE	006A   8F     0002F									      ;
		    08   AE	       04  B0 00034 	    MOVW    #4, MSG_BUFFER					      ; 0509
		         57 	  0C   AC  D0 00038 	    MOVL    FCB, R7						      ; 0510
		    14   AE	  38   A7  D0 0003C 	    MOVL    56(R7), MSG_BUFFER+12				      ;
		         51 	  04   AC  D0 00041 	    MOVL    ABD, R1						      ; 0512
		         50 	       51  D0 00045 	    MOVL    R1, R0						      ; 0513
		         50 	  10   A0  3C 00048 	    MOVZWL  16(R0), R0						      ;
	   20 	    11 A140	  12   A1  2C 0004C 	    MOVC5   18(R1), 17(R1)[R0], #32, #20, MSG_BUFFER+16		      ; 0512
		    18   AE	       14     00053									      ;
		         50 	0000G  CF  D0 00056 	    MOVL    IO_PACKET, R0					      ; 0516
      2C   AE	         1F 	  23   A0  83 0005B 	    SUBB3   35(R0), #31, MSG_BUFFER+36				      ;
		    2E   AE	       08  B0 00061 	    MOVW    #8, MSG_BUFFER+38					      ; 0517
		         50 	  34   A0  D0 00065 	    MOVL    52(R0), UCB						      ; 0519
		         50 	  30   A0  D0 00069 	    MOVL    48(UCB), VCB					      ; 0520
		         51 	  0B   A0  9A 0006D 	    MOVZBL  11(VCB), R1						      ; 0521
				       51  D6 00071 	    INCL    R1							      ;
	   00 	    0B   A0	       51  2C 00073 	    MOVC5   R1, 11(VCB), #0, #16, MSG_BUFFER+40			      ;
		    30   AE	       10     00078									      ;
		         6E 	       0F  D0 0007B 	    MOVL    #15, DEV_DESC					      ; 0525
		    04   AE	  41   AE  9E 0007E 	    MOVAB   MSG_BUFFER+57, DEV_DESC+4				      ; 0526
		         50 	0000G  CF  D0 00083 	    MOVL    CURRENT_UCB, R0					      ; 0532
		         7E 	  48   A0  3C 00088 	    MOVZWL  72(R0), -(SP)					      ;
	   7E 	    24   A0	       14  C1 0008C 	    ADDL3   #20, 36(R0), -(SP)					      ;
				  08   AE  9F 00091 	    PUSHAB  DEV_DESC						      ;
				  0C   AE  9F 00094 	    PUSHAB  DEV_DESC						      ;
				FF6D   CF  9F 00097 	    PUSHAB  P.AAA						      ;
	      00000000G  9F	       05  FB 0009B 	    CALLS   #5, @#SYS$FAO					      ;

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:22:21	DBB3:[F11B.SRC]SNDSMB.B32;9					Page 3-3
;
		    40   AE	       6E  90 000A2 	    MOVB    DEV_DESC, MSG_BUFFER+56				      ; 0533
      50   AE	    20   A7	       06  28 000A6 	    MOVC3   #6, 32(R7), MSG_BUFFER+72				      ; 0535
		         50 	       66  9A 000AC 	    MOVZBL  (R6), R0						      ; 0536
		         52 	     6640  3E 000AF 	    MOVAW   (R6)[R0], IDENT_AREA				      ;
	   62 	         14 	       20  3A 000B3 	    LOCC    #32, #20, (IDENT_AREA)				      ; 0537
				       02  12 000B7 	    BNEQ    1$							      ;
				       51  D4 000B9 	    CLRL    R1							      ;
		         50 	       51  D0 000BB 1$:     MOVL    R1, P						      ;
				       04  12 000BE 	    BNEQ    2$							      ; 0538
		         50 	  13   A2  9E 000C0 	    MOVAB   19(R2), P						      ;
		         50 	       52  C2 000C4 2$:     SUBL2   IDENT_AREA, R0					      ; 0539
		    5C   AE	       50  90 000C7 	    MOVB    R0, MSG_BUFFER+84					      ;
      5D   AE	         62 	       50  28 000CB 	    MOVC3   R0, (IDENT_AREA), MSG_BUFFER+85			      ; 0540
		    70   AE	       01  90 000D0 	    MOVB    #1, MSG_BUFFER+104					      ; 0543
				  08   AE  9F 000D4 	    PUSHAB  MSG_BUFFER						      ; 0549
				       01  DD 000D7 	    PUSHL   #1							      ;
				       5E  DD 000D9 	    PUSHL   SP							      ;
				0000V  CF  9F 000DB 	    PUSHAB  SEND_MESSAGE					      ;
	      00000000G  9F	       04  FB 000DF 	    CALLS   #4, @#SYS$CMKRNL					      ;
					   04 000E6 	    RET     							      ; 0438

; Routine Size:  215 bytes



; Bliss-32 10.1-416	Monday 21-AUG-1978 23:22:21	DBB3:[F11B.SRC]SNDSMB.B32;9					Page 4
;
;	0552	ROUTINE SEND_MESSAGE (MESSAGE) =
;	0553	
;	0554	!++
;	0555	!
;	0556	! FUNCTIONAL DESCRIPTION:
;	0557	!
;	0558	!	This routine assigns a channel to the job controller mailbox and sends
;	0559	!	the message to print a file.
;	0560	!
;	0561	!
;	0562	! CALLING SEQUENCE:
;	0563	!	SEND_MESSAGE (ARG1)
;	0564	!
;	0565	! INPUT PARAMETERS:
;	0566	!	ARG1: address of message buffer
;	0567	!
;	0568	! IMPLICIT INPUTS:
;	0569	!
;	0570	! OUTPUT PARAMETERS:
;	0571	!	NONE
;	0572	!
;	0573	! IMPLICIT OUTPUTS:
;	0574	!	NONE
;	0575	!
;	0576	! ROUTINE VALUE:
;	0577	!	1
;	0578	!
;	0579	! SIDE EFFECTS:
;	0580	!	message sent to symbiont manager
;	0581	!
;	0582	!--
;	0583	
;	0584	BEGIN
;	0585	
;	0586	LINKAGE
;	0587		L_WRTMAILBOX	= JSB (REGISTER = 3, REGISTER = 4, REGISTER = 5) :
;	0588				  NOPRESERVE (2)
;	0589				  NOTUSED (6, 7, 8, 9, 10, 11);
;	0590	
;	0591	LOCAL
;	0592		X;				! dummy variable
;	0593	
;	0594	EXTERNAL
;	0595		SYS$GL_JOBCTLMB	: BBLOCK ADDRESSING_MODE (ABSOLUTE);
;	0596						! job controller mailbox
;	0597	
;	0598	EXTERNAL ROUTINE
;	0599		EXE$WRTMAILBOX	: L_WRTMAILBOX ADDRESSING_MODE (GENERAL);
;	0600						! system subroutine to write mailbox
;	0601	
;	0602	
;	0603	! The job controller mailbox is inaccessible through the normal QIO
;	0604	! mechanism; we use the system subroutine to write it. First touch the
;	0605	! message to fault in the page(s).
;	0606	!

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:22:21	DBB3:[F11B.SRC]SNDSMB.B32;9					Page 4-1
;
;	0607	
;	0608	X = ..MESSAGE;
;	0609	X = .(.MESSAGE+SMB_LENGTH-4);
;	0610	
;	0611	IF .SYS$GL_JOBCTLMB[UCB$W_REFC] NEQ 0
;	0612	THEN EXE$WRTMAILBOX (SMB_LENGTH, .MESSAGE, SYS$GL_JOBCTLMB);
;	0613	
;	0614	RETURN 1;
;	0615	
;	0616	END;					! end of routine SEND_MESSAGE



							    .EXTRN  SYS$GL_JOBCTLMB, EXE$WRTMAILBOX

					 003C 000E7 SEND_MESSAGE:
							    .WORD   Save R2,R3,R4,R5					      ; 0552
		         51 	  04   BC  D0 000E9 	    MOVL    @MESSAGE, X						      ; 0608
		         50 	  04   AC  D0 000ED 	    MOVL    MESSAGE, R0						      ; 0609
		         51 	  66   A0  D0 000F1 	    MOVL    102(R0), X						      ;
			    00000000G  9F  B5 000F5 	    TSTW    @#SYS$GL_JOBCTLMB+80				      ; 0611
				       15  13 000FB 	    BEQL    1$							      ;
		         53 	  6A   8F  9A 000FD 	    MOVZBL  #106, R3						      ; 0612
		         54 	  04   AC  D0 00101 	    MOVL    MESSAGE, R4						      ;
		         55 00000000G  8F  D0 00105 	    MOVL    #SYS$GL_JOBCTLMB, R5				      ;
			    00000000G  00  16 0010C 	    JSB     EXE$WRTMAILBOX					      ;
		         50 	       01  D0 00112 1$:     MOVL    #1, R0						      ; 0614
					   04 00115 	    RET     							      ; 0552

; Routine Size:  47 bytes


;	0617	
;	0618	END
;	0619	ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $CODE$         	   278  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:22:21	DBB3:[F11B.SRC]SNDSMB.B32;9					Page 4-2
;
;  DBA4:[SYSLIB]LIB.L32;1		      5582        30         0       244





; Size:		262 code + 16 data bytes
; Run Time:	00:08.5
; Elapsed Time:	00:19.8
; Memory Used:	304 pages
; Compilation Complete
