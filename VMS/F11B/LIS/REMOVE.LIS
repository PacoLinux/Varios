
; Bliss-32 10.1-416	Monday 21-AUG-1978 23:19:54	DBB3:[F11B.SRC]REMOVE.B32;11					Page 1
;
;	0001	MODULE REMOVE (
;	0002			LANGUAGE (BLISS32),
;	0003			IDENT = 'B0007'
;	0004			) =
;	0005	BEGIN
;	0006	
;	0007	!
;	0008	! Copyright (c) 1977
;	0009	! Digital Equipment Corporation, Maynard, Massachusetts 01754
;	0010	!
;	0011	! This software is furnished  under a license for use only on a single
;	0012	! computer  system and  may be  copied only with  the inclusion of the
;	0013	! above copyright notice.  This software, or any other copies thereof,
;	0014	! may not be provided or  otherwise made available to any other person
;	0015	! except for use on such system and to one who agrees to these license
;	0016	! terms.  Title to and  ownership of the  software  shall at all times
;	0017	! remain in DEC.
;	0018	!
;	0019	! The information in this software is subject to change without notice
;	0020	! and should  not be construed  as a commitment  by Digital  Equipment
;	0021	! Corporation.
;	0022	!
;	0023	! DEC assumes  no  responsibility  for  the use or  reliability of its
;	0024	! software on equipment which is not supplied by DEC.
;	0025	
;	0026	!++
;	0027	!
;	0028	! FACILITY:  F11ACP Structure Level 2
;	0029	!
;	0030	! ABSTRACT:
;	0031	!
;	0032	!	This routine removes a directory entry.
;	0033	!
;	0034	! ENVIRONMENT:
;	0035	!
;	0036	!	STARLET operating system, including privileged system services
;	0037	!	and internal exec routines.
;	0038	!
;	0039	!--
;	0040	!
;	0041	!
;	0042	! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  15-Jan-1978  20:19
;	0043	!
;	0044	! REVISION HISTORY:
;	0045	!
;	0046	!   Andrew C. Goldstein, 17-Jan-1978  1:29
;	0047	!   B0002 - Update directory index on remove of last entry in block
;	0048	!
;	0049	!   Andrew C. Goldstein, 21-Jan-1978  21:13
;	0050	!   B0003 - SQUISH_DIR becomes SHUFFLE_DIR
;	0051	!
;	0052	!   Andrew C. Goldstein, 26-Jan-1978  0:28
;	0053	!   B0004 - Fix move count on removing one version
;	0054	!
;	0055	!   Andrew C. Goldstein, 12-Feb-1978  14:28

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:19:54	DBB3:[F11B.SRC]REMOVE.B32;11					Page 1-1
;
;	0056	!   B0005 - Circumvent MOVC microcode bug
;	0057	!
;	0058	!   Andrew C. Goldstein, 21-Jun-78  18:17
;	0059	!   B0006 - Add RMS directory cache interlock
;	0060	!
;	0061	!   Andrew C. Goldstein, 10-Aug-78  14:25
;	0062	!   B0007 - Remove MOVC kluge
;	0063	!
;	0064	!**
;	0065	
;	0066	
;	0067	LIBRARY 'SYS$LIBRARY:LIB.L32';
;	0068	REQUIRE 'SRC$:FCPDEF.B32';
;	0417	
;	0418	
;	0419	FORWARD ROUTINE
;	0420		REMOVE		: NOVALUE,	! remove directory entry
;	0421		UPDATE_DIRSEQ;			! update sequence count in UCB

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:19:54	DBB3:[F11B.SRC]REMOVE.B32;11					Page 2
;
;	0422	GLOBAL ROUTINE REMOVE : NOVALUE =
;	0423	
;	0424	!++
;	0425	!
;	0426	! FUNCTIONAL DESCRIPTION:
;	0427	!
;	0428	!	This routine removes a directory entry.
;	0429	!
;	0430	!
;	0431	! CALLING SEQUENCE:
;	0432	!	REMOVE ()
;	0433	!
;	0434	! INPUT PARAMETERS:
;	0435	!	NONE
;	0436	!
;	0437	! IMPLICIT INPUTS:
;	0438	!	DIR_VBN: VBN of current directory block
;	0439	!	DIR_BUFFER: address of directory block buffer
;	0440	!	DIR_ENTRY: address of directory record found
;	0441	!	DIR_VERSION: address of directory version entry
;	0442	!
;	0443	! OUTPUT PARAMETERS:
;	0444	!	NONE
;	0445	!
;	0446	! IMPLICIT OUTPUTS:
;	0447	!	DIR_END: address of end of directory data
;	0448	!	PREV_NAME: file name of directory entry
;	0449	!	PREV_VERSION: version number of directory entry
;	0450	!
;	0451	! ROUTINE VALUE:
;	0452	!	NONE
;	0453	!
;	0454	! SIDE EFFECTS:
;	0455	!	directory entry removed, block(s) written
;	0456	!
;	0457	!--
;	0458	
;	0459	BEGIN
;	0460	
;	0461	LOCAL
;	0462		P,				! character scan pointer
;	0463		RECORD_SIZE;			! size of directory record
;	0464	
;	0465	EXTERNAL
;	0466		CLEANUP_FLAGS	: BITVECTOR,	! cleanup action flags
;	0467		DIR_FCB		: REF BBLOCK,	! FCB of directory file
;	0468		DIR_VBN,			! VBN of current directory block
;	0469		DIR_BUFFER	: REF BBLOCK,	! address of directory block buffer
;	0470		DIR_ENTRY	: REF BBLOCK,	! address of directory record found
;	0471		DIR_VERSION	: REF BBLOCK,	! address of directory version entry
;	0472		DIR_END		: REF BBLOCK,	! address of end of directory data
;	0473		PREV_NAME	: VECTOR [,BYTE], ! file name of directory entry
;	0474		PREV_VERSION;			! version number of directory entry
;	0475	
;	0476	EXTERNAL ROUTINE

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:19:54	DBB3:[F11B.SRC]REMOVE.B32;11					Page 2-1
;
;	0477		NEXT_REC,			! get next directory record
;	0478		WRITE_BLOCK,			! write a disk block
;	0479		UPDATE_IDX,			! update directory index
;	0480		SHUFFLE_DIR;			! compress directory
;	0481	
;	0482	
;	0483	! First scan to the end of the directory records and compute the size of the
;	0484	! current record. Also save name and version for the cleanup.
;	0485	!
;	0486	
;	0487	DIR_END = .DIR_ENTRY;
;	0488	UNTIL .DIR_END[DIR$W_SIZE] EQL 65535
;	0489	DO DIR_END = NEXT_REC (.DIR_END);
;	0490	DIR_END = .DIR_END + 2;
;	0491	
;	0492	PREV_VERSION = .DIR_VERSION[DIR$W_VERSION];
;	0493	CH$MOVE (.DIR_ENTRY[DIR$B_NAMECOUNT]+1, DIR_ENTRY[DIR$B_NAMECOUNT], PREV_NAME);
;	0494	RECORD_SIZE = .DIR_ENTRY[DIR$W_SIZE] + 2;
;	0495	CLEANUP_FLAGS[CLF_REENTER] = 1;
;	0496	
;	0497	! Determine if the entry being removes is of the form xxx.DIR;1. If so, bump
;	0498	! the directory sequence count in the UCB to invalidate RMS caches.
;	0499	!
;	0500	
;	0501	IF .DIR_VERSION[DIR$W_VERSION] EQL 1	! simple tests first
;	0502	THEN
;	0503	    BEGIN
;	0504	    P = CH$FIND_SUB (.DIR_ENTRY[DIR$B_NAMECOUNT], DIR_ENTRY[DIR$T_NAME],
;	0505			     4, UPLIT BYTE ('.DIR'));
;	0506	    IF NOT CH$FAIL (.P)
;	0507	    AND .P + 4 EQL DIR_ENTRY[DIR$T_NAME] + .DIR_ENTRY[DIR$B_NAMECOUNT]
;	0508	    THEN KERNEL_CALL (UPDATE_DIRSEQ);
;	0509	    END;
;	0510	
;	0511	! Determine if the record contains one or more versions. If there are more than
;	0512	! one, we just squish out the indicated version.
;	0513	!
;	0514	
;	0515	IF .RECORD_SIZE GTRU (.DIR_ENTRY[DIR$B_NAMECOUNT]
;	0516				 + DIR$C_LENGTH + DIR$C_VERSION + 1 AND NOT 1)
;	0517	THEN
;	0518	    BEGIN
;	0519	    CH$COPY (.DIR_END - .DIR_VERSION - DIR$C_VERSION, .DIR_VERSION + DIR$C_VERSION,
;	0520		     0, .DIR_END - .DIR_VERSION, .DIR_VERSION);
;	0521	    DIR_ENTRY[DIR$W_SIZE] = .DIR_ENTRY[DIR$W_SIZE] - DIR$C_VERSION;
;	0522	    END
;	0523	
;	0524	! If the record contains only one version, we remove the entire record.
;	0525	! If this was the last record in the block, we update the directory index.
;	0526	! Note that this sets the index entry to the letter being removed, rather than
;	0527	! the last one left. This minor inaccuracy is harmless since the letter still
;	0528	! precedes any in the next block. Also, the index will be corrected by the
;	0529	! next lookup or enter that passes through the block.
;	0530	!
;	0531	

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:19:54	DBB3:[F11B.SRC]REMOVE.B32;11					Page 2-2
;
;	0532	ELSE
;	0533	    BEGIN
;	0534	    CH$COPY (.DIR_END - .DIR_ENTRY - .RECORD_SIZE, .DIR_ENTRY + .RECORD_SIZE,
;	0535		     0, .DIR_END - .DIR_ENTRY, .DIR_ENTRY);
;	0536	    DIR_VERSION = 0;
;	0537	    IF .DIR_ENTRY[DIR$W_SIZE] EQL 65535
;	0538	    THEN KERNEL_CALL (UPDATE_IDX, .DIR_VBN-1, .PREV_NAME[1]);
;	0539	    END;
;	0540	
;	0541	! If this leaves us with an empty block, squish it out. Otherwise, just
;	0542	! write it. But don't squish out the last block of an empty directory.
;	0543	!
;	0544	
;	0545	IF .DIR_BUFFER[DIR$W_SIZE] EQL 65535
;	0546	AND .DIR_FCB[FCB$L_EFBLK] GTRU 1
;	0547	THEN
;	0548	    SHUFFLE_DIR (-1)
;	0549	ELSE
;	0550	    WRITE_BLOCK (.DIR_BUFFER);
;	0551	
;	0552	END;					! end of routine REMOVE


							    .TITLE  REMOVE
							    .IDENT  \B0007\

							    .PSECT  $CODE$,NOWRT,2

			      52  49  44  2E  00000 P.AAA:  .ASCII  \.DIR\						      ;

							    .EXTRN  CLEANUP_FLAGS, DIR_FCB, DIR_VBN, DIR_BUFFER, DIR_ENTRY
							    .EXTRN  DIR_VERSION, DIR_END, PREV_NAME, PREV_VERSION
							    .EXTRN  NEXT_REC, WRITE_BLOCK, UPDATE_IDX, SHUFFLE_DIR
							    .EXTRN  SYS$CMKRNL

					 07FC 00004 	    .ENTRY  REMOVE, Save R2,R3,R4,R5,R6,R7,R8,R9,R10		      ; 0422
		         5A 	0000G  CF  9E 00006 	    MOVAB   DIR_ENTRY, R10					      ;
		         59 00000000G  9F  9E 0000B 	    MOVAB   @#SYS$CMKRNL, R9					      ;
		         58 	0000G  CF  9E 00012 	    MOVAB   DIR_VERSION, R8					      ;
		         57 	0000G  CF  9E 00017 	    MOVAB   DIR_END, R7						      ;
		         67 	       6A  D0 0001C 	    MOVL    DIR_ENTRY, DIR_END					      ; 0487
		  FFFF   8F	  00   B7  B1 0001F 1$:     CMPW    @DIR_END, #65535					      ; 0488
				       0C  13 00025 	    BEQL    2$							      ;
				       67  DD 00027 	    PUSHL   DIR_END						      ; 0489
		  0000G  CF	       01  FB 00029 	    CALLS   #1, NEXT_REC					      ;
		         67 	       50  D0 0002E 	    MOVL    R0, DIR_END						      ;
				       EC  11 00031 	    BRB     1$							      ; 0488
		         67 	       02  C0 00033 2$:     ADDL2   #2, DIR_END						      ; 0490
		  0000G  CF	  00   B8  32 00036 	    CVTWL   @DIR_VERSION, PREV_VERSION				      ; 0492
		         56 	       6A  D0 0003C 	    MOVL    DIR_ENTRY, R6					      ; 0493
		         50 	  05   A6  9A 0003F 	    MOVZBL  5(R6), R0						      ;
				       50  D6 00043 	    INCL    R0							      ;
    0000G  CF	    05   A6	       50  28 00045 	    MOVC3   R0, 5(R6), PREV_NAME				      ;
		         55 	       66  3C 0004C 	    MOVZWL  (R6), RECORD_SIZE					      ; 0494
		         55 	       02  C0 0004F 	    ADDL2   #2, RECORD_SIZE					      ;

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:19:54	DBB3:[F11B.SRC]REMOVE.B32;11					Page 2-3
;
		  0000G  CF	  80   8F  88 00052 	    BISB2   #128, CLEANUP_FLAGS+2				      ; 0495
		         01 	  00   B8  B1 00058 	    CMPW    @DIR_VERSION, #1					      ; 0501
				       35  12 0005C 	    BNEQ    4$							      ;
		         50 	  05   A6  9A 0005E 	    MOVZBL  5(R6), R0						      ; 0504
		         54 	  06   A6  9E 00062 	    MOVAB   6(R6), R4						      ;
	   50 	    96   AF	       04  39 00066 	    MATCHC  #4, P.AAA, R0, (R4)					      ;
				       64     0006B									      ;
				       03  13 0006C 	    BEQL    3$							      ;
		         53 	       04  D0 0006E 	    MOVL    #4, R3						      ;
		         53 	       04  C2 00071 3$:     SUBL2   #4, R3						      ;
		         50 	       53  D0 00074 	    MOVL    R3, P						      ;
				       1A  13 00077 	    BEQL    4$							      ; 0506
		         50 	       04  C0 00079 	    ADDL2   #4, R0						      ; 0507
		         51 	  05   A6  9A 0007C 	    MOVZBL  5(R6), R1						      ;
		         51 	       54  C0 00080 	    ADDL2   R4, R1						      ;
		         51 	       50  D1 00083 	    CMPL    R0, R1						      ;
				       0B  12 00086 	    BNEQ    4$							      ;
				       7E  D4 00088 	    CLRL    -(SP)						      ; 0508
				       5E  DD 0008A 	    PUSHL   SP							      ;
				0000V  CF  9F 0008C 	    PUSHAB  UPDATE_DIRSEQ					      ;
		         69 	       03  FB 00090 	    CALLS   #3, SYS$CMKRNL					      ;
		         56 	       6A  D0 00093 4$:     MOVL    DIR_ENTRY, R6					      ; 0515
		         50 	  05   A6  9A 00096 	    MOVZBL  5(R6), R0						      ; 0516
		         50 	       0F  C0 0009A 	    ADDL2   #15, R0						      ;
		         50 	       01  CA 0009D 	    BICL2   #1, R0						      ; 0515
		         50 	       55  D1 000A0 	    CMPL    RECORD_SIZE, R0					      ;
				       17  1B 000A3 	    BLEQU   5$							      ;
		         50 	       68  D0 000A5 	    MOVL    DIR_VERSION, R0					      ; 0519
	   51 	         67 	       50  C3 000A8 	    SUBL3   R0, DIR_END, R1					      ;
		         52 	  F8   A1  9E 000AC 	    MOVAB   -8(R1), R2						      ;
	   00 	    08   A0	       52  2C 000B0 	    MOVC5   R2, 8(R0), #0, R1, (R0)				      ;
		         60 	       51     000B5									      ;
		         66 	       08  A2 000B7 	    SUBW2   #8, (R6)						      ; 0521
				       2E  11 000BA 	    BRB     6$							      ; 0515
	   50 	         67 	       56  C3 000BC 5$:     SUBL3   R6, DIR_END, R0					      ; 0534
	   51 	         50 	       55  C3 000C0 	    SUBL3   RECORD_SIZE, R0, R1					      ;
	   00 	       6546 	       51  2C 000C4 	    MOVC5   R1, (RECORD_SIZE)[R6], #0, R0, (R6)			      ;
		         66 	       50     000C9									      ;
				       68  D4 000CB 	    CLRL    DIR_VERSION						      ; 0536
		  FFFF   8F	       66  B1 000CD 	    CMPW    (R6), #65535					      ; 0537
				       16  12 000D2 	    BNEQ    6$							      ;
		         7E 	0000G  CF  9A 000D4 	    MOVZBL  PREV_NAME+1, -(SP)					      ; 0538
	   7E 	  0000G  CF	       01  C3 000D9 	    SUBL3   #1, DIR_VBN, -(SP)					      ;
				       02  DD 000DF 	    PUSHL   #2							      ;
				       5E  DD 000E1 	    PUSHL   SP							      ;
				0000G  CF  9F 000E3 	    PUSHAB  UPDATE_IDX						      ;
		         69 	       05  FB 000E7 	    CALLS   #5, SYS$CMKRNL					      ;
		  FFFF   8F	0000G  DF  B1 000EA 6$:     CMPW    @DIR_BUFFER, #65535					      ; 0545
				       14  12 000F1 	    BNEQ    7$							      ;
		         50 	0000G  CF  D0 000F3 	    MOVL    DIR_FCB, R0						      ; 0546
		         01 	  40   A0  D1 000F8 	    CMPL    64(R0), #1						      ;
				       09  1B 000FC 	    BLEQU   7$							      ;
		         7E 	       01  CE 000FE 	    MNEGL   #1, -(SP)						      ; 0548
		  0000G  CF	       01  FB 00101 	    CALLS   #1, SHUFFLE_DIR					      ;
					   04 00106 	    RET     							      ; 0545

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:19:54	DBB3:[F11B.SRC]REMOVE.B32;11					Page 2-4
;
				0000G  CF  DD 00107 7$:     PUSHL   DIR_BUFFER						      ; 0550
		  0000G  CF	       01  FB 0010B 	    CALLS   #1, WRITE_BLOCK					      ;
					   04 00110 	    RET     							      ; 0422

; Routine Size:  269 bytes



; Bliss-32 10.1-416	Monday 21-AUG-1978 23:19:54	DBB3:[F11B.SRC]REMOVE.B32;11					Page 3
;
;	0553	ROUTINE UPDATE_DIRSEQ =
;	0554	
;	0555	!++
;	0556	!
;	0557	! FUNCTIONAL DESCRIPTION:
;	0558	!
;	0559	!	This routine bumps the directory sequence count in the UCB to invalidate
;	0560	!	RMS directory caches on the volume.
;	0561	!
;	0562	!
;	0563	! CALLING SEQUENCE:
;	0564	!	UPDATE_DIRSEQ ()
;	0565	!
;	0566	! INPUT PARAMETERS:
;	0567	!	NONE
;	0568	!
;	0569	! IMPLICIT INPUTS:
;	0570	!	CURRENT_UCB: UCB of device in use
;	0571	!
;	0572	! OUTPUT PARAMETERS:
;	0573	!	NONE
;	0574	!
;	0575	! IMPLICIT OUTPUTS:
;	0576	!	directory sequence count incremented
;	0577	!
;	0578	! ROUTINE VALUE:
;	0579	!	1
;	0580	!
;	0581	! SIDE EFFECTS:
;	0582	!	NONE
;	0583	!
;	0584	!--
;	0585	
;	0586	BEGIN
;	0587	
;	0588	EXTERNAL
;	0589		CURRENT_UCB	: REF BBLOCK;	! UCB of device
;	0590	
;	0591	
;	0592	CURRENT_UCB[UCB$W_DIRSEQ] = .CURRENT_UCB[UCB$W_DIRSEQ] + 1;
;	0593	
;	0594	RETURN 1;
;	0595	
;	0596	END;					! end of routine UPDATE_DIRSEQ



							    .EXTRN  CURRENT_UCB

					 0000 00111 UPDATE_DIRSEQ:
							    .WORD   Save nothing					      ; 0553
		         50 	0000G  CF  D0 00113 	    MOVL    CURRENT_UCB, R0					      ; 0592
				0088   C0  B6 00118 	    INCW    136(R0)						      ;
		         50 	       01  D0 0011C 	    MOVL    #1, R0						      ; 0594
					   04 0011F 	    RET     							      ; 0553

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:19:54	DBB3:[F11B.SRC]REMOVE.B32;11					Page 3-1
;

; Routine Size:  15 bytes


;	0597	
;	0598	END
;	0599	ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $CODE$         	   288  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]LIB.L32;1		      5582        15         0       227





; Size:		284 code + 4 data bytes
; Run Time:	00:07.9
; Elapsed Time:	00:20.4
; Memory Used:	302 pages
; Compilation Complete
