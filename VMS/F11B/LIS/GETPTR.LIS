
; Bliss-32 10.1-416	Monday 21-AUG-1978 23:16:57	DBB3:[F11B.SRC]GETPTR.B32;6					Page 1
;
;	0001	MODULE GETPTR (
;	0002			LANGUAGE (BLISS32),
;	0003			IDENT = 'B0002'
;	0004			) =
;	0005	BEGIN
;	0006	
;	0007	!
;	0008	! Copyright (c) 1977
;	0009	! Digital Equipment Corporation, Maynard, Massachusetts 01754
;	0010	!
;	0011	! This software is furnished  under a license for use only on a single
;	0012	! computer  system and  may be  copied only with  the inclusion of the
;	0013	! above copyright notice.  This software, or any other copies thereof,
;	0014	! may not be provided or  otherwise made available to any other person
;	0015	! except for use on such system and to one who agrees to these license
;	0016	! terms.  Title to and  ownership of the  software  shall at all times
;	0017	! remain in DEC.
;	0018	!
;	0019	! The information in this software is subject to change without notice
;	0020	! and should  not be construed  as a commitment  by Digital  Equipment
;	0021	! Corporation.
;	0022	!
;	0023	! DEC assumes  no  responsibility  for  the use or  reliability of its
;	0024	! software on equipment which is not supplied by DEC.
;	0025	
;	0026	!++
;	0027	!
;	0028	! FACILITY:  F11ACP Structure Level 2
;	0029	!
;	0030	! ABSTRACT:
;	0031	!
;	0032	!	This routine returns the value of a header map pointer.
;	0033	!
;	0034	! ENVIRONMENT:
;	0035	!
;	0036	!	STARLET operating system, including privileged system services
;	0037	!	and internal exec routines.
;	0038	!
;	0039	!--
;	0040	!
;	0041	!
;	0042	! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  21-Nov-1977  17:12
;	0043	!
;	0044	! REVISION HISTORY:
;	0045	!
;	0046	!   Andrew C. Goldstein, 26-Jan-1978  0:29
;	0047	!   B0002 - Bug in format 3 interpretation
;	0048	!
;	0049	!**
;	0050	
;	0051	
;	0052	LIBRARY 'SYS$LIBRARY:LIB.L32';
;	0053	REQUIRE 'SRC$:FCPDEF.B32';
;	0402	
;	0403	

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:16:57	DBB3:[F11B.SRC]GETPTR.B32;6					Page 1-1
;
;	0404	LINKAGE
;	0405		L_MAP_POINTER	= JSB :
;	0406				  GLOBAL (COUNT = 6, LBN = 7, MAP_POINTER = 8);

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:16:57	DBB3:[F11B.SRC]GETPTR.B32;6					Page 2
;
;	0407	GLOBAL ROUTINE GET_MAP_POINTER : L_MAP_POINTER NOVALUE =
;	0408	
;	0409	!++
;	0410	!
;	0411	! FUNCTIONAL DESCRIPTION:
;	0412	!
;	0413	!	This routine returns the contents of a file header map pointer and
;	0414	!	advances the map area pointer to the next map pointer.
;	0415	!
;	0416	!
;	0417	! CALLING SEQUENCE:
;	0418	!	GET_MAP_POINTER ()
;	0419	!
;	0420	! INPUT PARAMETERS:
;	0421	!	NONE
;	0422	!
;	0423	! IMPLICIT INPUTS:
;	0424	!	R8 = address of header map pointer
;	0425	!
;	0426	! OUTPUT PARAMETERS:
;	0427	!	NONE
;	0428	!
;	0429	! IMPLICIT OUTPUTS:
;	0430	!	R6 = block count (zero if placement pointer)
;	0431	!	R7 = starting LBN
;	0432	!
;	0433	! ROUTINE VALUE:
;	0434	!	NONE
;	0435	!
;	0436	! SIDE EFFECTS:
;	0437	!	R8 advanced to next pointer
;	0438	!
;	0439	!--
;	0440	
;	0441	BEGIN
;	0442	
;	0443	EXTERNAL REGISTER
;	0444		COUNT		= 6,		! retrieval pointer block count
;	0445		LBN		= 7,		! retrieval pointer start LBN
;	0446		MAP_POINTER	= 8 : REF BBLOCK; ! address of map pointer
;	0447	
;	0448	
;	0449	! Determine the type of the map pointer and interpret it appropriately.
;	0450	!
;	0451	
;	0452	CASE .MAP_POINTER[FM2$V_FORMAT] FROM 0 TO 3 OF
;	0453	    SET
;	0454	
;	0455	    [FM2$C_PLACEMENT]:	BEGIN
;	0456				COUNT = 0;
;	0457				LBN = 0;
;	0458				MAP_POINTER = .MAP_POINTER + 2;
;	0459				END;
;	0460	
;	0461	    [FM2$C_FORMAT1]:	BEGIN

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:16:57	DBB3:[F11B.SRC]GETPTR.B32;6					Page 2-1
;
;	0462				COUNT = .MAP_POINTER[FM2$B_COUNT1];
;	0463				LBN<16,16> = .MAP_POINTER[FM2$V_HIGHLBN];
;	0464				LBN<0,16> = .MAP_POINTER[FM2$W_LOWLBN];
;	0465				MAP_POINTER = .MAP_POINTER + 4;
;	0466				COUNT = .COUNT + 1;
;	0467				END;
;	0468	
;	0469	    [FM2$C_FORMAT2]:	BEGIN
;	0470				COUNT = .MAP_POINTER[FM2$V_COUNT2];
;	0471				LBN = .MAP_POINTER[FM2$L_LBN2];
;	0472				MAP_POINTER = .MAP_POINTER + 6;
;	0473				COUNT = .COUNT + 1;
;	0474				END;
;	0475	
;	0476	    [FM2$C_FORMAT3]:	BEGIN
;	0477				COUNT = (ROT (..MAP_POINTER, 16) AND (1^30-1));
;	0478				LBN = .MAP_POINTER[FM2$L_LBN3];
;	0479				MAP_POINTER = .MAP_POINTER + 8;
;	0480				COUNT = .COUNT + 1;
;	0481				END;
;	0482	
;	0483	    TES;
;	0484	
;	0485	END;					! end of routine GET_MAP_POINTER


							    .TITLE  GETPTR
							    .IDENT  \B0002\



							    .PSECT  $CODE$,NOWRT,2

	   68 	         02 	       0E  EF 00000 GET_MAP_POINTER::
							    EXTZV   #14, #2, (MAP_POINTER), R1				      ; 0452
				       51     00004									      ;
	   03 	         00 	       51  CF 00005 	    CASEL   R1, #0, #3						      ;
	 0020 	       000E 	     0008     00009 1$:     .WORD   2$-1$,-						      ;
				     002E     0000F		    3$-1$,-						      ;
								    4$-1$,-						      ;
								    5$-1$						      ;
				       56  7C 00011 2$:     CLRQ    COUNT						      ; 0456
		         58 	       02  C0 00013 	    ADDL2   #2, MAP_POINTER					      ; 0458
					   05 00016 	    RSB     							      ; 0452
		         56 	       88  9A 00017 3$:     MOVZBL  (MAP_POINTER)+, COUNT				      ; 0462
	   88 	         06 	       00  EF 0001A 	    EXTZV   #0, #6, (MAP_POINTER)+, R0				      ; 0463
				       50     0001E									      ;
	   10 	         10 	       50  F0 0001F 	    INSV    R0, #16, #16, LBN					      ;
				       57     00023									      ;
		         57 	       88  B0 00024 	    MOVW    (MAP_POINTER)+, LBN					      ; 0464
				       1A  11 00027 	    BRB     6$							      ; 0466
	   88 	         0E 	       00  EF 00029 4$:     EXTZV   #0, #14, (MAP_POINTER)+, COUNT			      ; 0470
				       56     0002D									      ;
		         57 	  01   A8  D0 0002E 	    MOVL    1(MAP_POINTER), LBN					      ; 0471
		         58 	       05  C0 00032 	    ADDL2   #5, MAP_POINTER					      ; 0472

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:16:57	DBB3:[F11B.SRC]GETPTR.B32;6					Page 2-2
;
				       0C  11 00035 	    BRB     6$							      ; 0473
	   50 	         88 	       10  9C 00037 5$:     ROTL    #16, (MAP_POINTER)+, R0				      ; 0477
	   50 	         1E 	       00  EF 0003B 	    EXTZV   #0, #30, R0, COUNT					      ;
				       56     0003F									      ;
		         57 	       88  D0 00040 	    MOVL    (MAP_POINTER)+, LBN					      ; 0478
				       56  D6 00043 6$:     INCL    COUNT						      ; 0480
					   05 00045 	    RSB     							      ; 0407

; Routine Size:  70 bytes


;	0486	
;	0487	END
;	0488	ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $CODE$         	    70  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]LIB.L32;1		      5582        18         0       225





; Size:		70 code + 0 data bytes
; Run Time:	00:04.5
; Elapsed Time:	00:09.9
; Memory Used:	263 pages
; Compilation Complete
