
; Bliss-32 10.1-416	Monday 21-AUG-1978 23:07:56	DBB3:[F11B.SRC]CHKHD2.B32;6					Page 1
;
;	0001	MODULE CHKHD2 (
;	0002			LANGUAGE (BLISS32),
;	0003			IDENT = 'B0008'
;	0004			) =
;	0005	BEGIN
;	0006	
;	0007	!
;	0008	! Copyright (c) 1977
;	0009	! Digital Equipment Corporation, Maynard, Massachusetts 01754
;	0010	!
;	0011	! This software is furnished  under a license for use only on a single
;	0012	! computer  system and  may be  copied only with  the inclusion of the
;	0013	! above copyright notice.  This software, or any other copies thereof,
;	0014	! may not be provided or  otherwise made available to any other person
;	0015	! except for use on such system and to one who agrees to these license
;	0016	! terms.  Title to and  ownership of the  software  shall at all times
;	0017	! remain in DEC.
;	0018	!
;	0019	! The information in this software is subject to change without notice
;	0020	! and should  not be construed  as a commitment  by Digital  Equipment
;	0021	! Corporation.
;	0022	!
;	0023	! DEC assumes  no  responsibility  for  the use or  reliability of its
;	0024	! software on equipment which is not supplied by DEC.
;	0025	
;	0026	!++
;	0027	!
;	0028	! FACILITY:  F11ACP Structure Level 2
;	0029	!
;	0030	! ABSTRACT:
;	0031	!
;	0032	!	This routine verifies that the block given it is in fact a
;	0033	!	file header. If file number and/or file seqence number are also
;	0034	!	supplied, they are checked as well.
;	0035	!
;	0036	! ENVIRONMENT:
;	0037	!
;	0038	!	STARLET operating system, including privileged system services
;	0039	!	and internal exec routines.
;	0040	!
;	0041	!--
;	0042	!
;	0043	!
;	0044	! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  13-Dec-1976  16:11
;	0045	!
;	0046	! REVISION HISTORY:
;	0047	!
;	0048	!   Andrew C. Goldstein, 16-Mar-1977  14:45
;	0049	!   X0002 - Use common checksum routine
;	0050	!
;	0051	!   Andrew C. Goldstein, 29-Mar-1977  13:55
;	0052	!   X0003 - Recognize deleted file header from garbage
;	0053	!
;	0054	!   Andrew C. Goldstein, 25-Apr-1977  18:36
;	0055	!   X0004 - Move in checksum routine from RDBLOK

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:07:56	DBB3:[F11B.SRC]CHKHD2.B32;6					Page 1-1
;
;	0056	!
;	0057	!   Andrew C. Goldstein, 22-Jul-1977  17:02
;	0058	!   X0005 - Modify for multi-header files
;	0059	!
;	0060	!   Andrew C. Goldstein, 22-Nov-1977  19:13
;	0061	!   X0006 - Modify for structure level 2
;	0062	!
;	0063	!   Andrew C. Goldstein, 22-Nov-1977  22:27
;	0064	!   X0007 - Break out checksum routine
;	0065	!
;	0066	!   Andrew C. Goldstein, 14-Dec-1977  13:42
;	0067	!   X0008 - file ID interface changes
;	0068	!
;	0069	!**
;	0070	
;	0071	
;	0072	LIBRARY 'SYS$LIBRARY:LIB.L32';
;	0073	REQUIRE 'SRC$:FCPDEF.B32';

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:07:56	DBB3:[F11B.SRC]CHKHD2.B32;6					Page 2
;
;	0422	GLOBAL ROUTINE CHECK_HEADER2 (HEADER, FILE_ID) =
;	0423	
;	0424	!++
;	0425	!
;	0426	! FUNCTIONAL DESCRIPTION:
;	0427	!
;	0428	!	This routine verifies that the block given it is in fact a
;	0429	!	file header. If file number and/or file seqence number are also
;	0430	!	supplied, they are checked as well.
;	0431	!
;	0432	! CALLING SEQUENCE:
;	0433	!	CHECK_HEADER (ARG1, ARG2)
;	0434	!
;	0435	! INPUT PARAMETERS:
;	0436	!	ARG1: address of header image
;	0437	!	ARG2: address of file ID
;	0438	!
;	0439	! IMPLICIT INPUTS:
;	0440	!	CURRENT_VCB: address of VCB of volume
;	0441	!
;	0442	! OUTPUT PARAMETERS:
;	0443	!	NONE
;	0444	!
;	0445	! IMPLICIT OUTPUTS:
;	0446	!	USER_STATUS contains code if not valid
;	0447	!
;	0448	! ROUTINE VALUE:
;	0449	!	0 if garbage
;	0450	!	1 if valid and correct file header
;	0451	!	2 if deleted file header
;	0452	!
;	0453	! SIDE EFFECTS:
;	0454	!	NONE
;	0455	!
;	0456	!--
;	0457	
;	0458	BEGIN
;	0459	
;	0460	MAP
;	0461		HEADER		: REF BBLOCK,	! file header arg
;	0462		FILE_ID		: REF BBLOCK;	! file ID arg
;	0463	
;	0464	LOCAL
;	0465		MAP_AREA	: REF BBLOCK;	! pointer to header map area
;	0466	
;	0467	EXTERNAL ROUTINE
;	0468		CHECKSUM;			! compute file header checksum
;	0469	
;	0470	EXTERNAL
;	0471		CURRENT_VCB	: REF BBLOCK;	! VCB of volume
;	0472	
;	0473	
;	0474	! First check the structure level.
;	0475	!
;	0476	

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:07:56	DBB3:[F11B.SRC]CHKHD2.B32;6					Page 2-1
;
;	0477	IF .HEADER[FH2$B_STRUCLEV] NEQ 2
;	0478	THEN (ERR_STATUS (SS$_FILESTRUCT); RETURN 0);
;	0479	
;	0480	! Make sure that the extension
;	0481	! RVN is zero (no multi-volume supported yet.)
;	0482	!
;	0483	
;	0484	IF (
;	0485	    IF .CURRENT_VCB[VCB$V_EXTFID]
;	0486	    THEN
;	0487		.HEADER[FH2$B_EX_FIDRVN] NEQ 0
;	0488	    ELSE
;	0489		.HEADER[FH2$W_EX_FIDRVN] NEQ 0
;	0490	    )
;	0491	THEN (ERR_STATUS (SS$_FILESTRUCT); RETURN 0);
;	0492	
;	0493	! Check the area offsets and the retrieval pointer use counts for
;	0494	! consistency.
;	0495	!
;	0496	
;	0497	IF .HEADER[FH2$B_IDOFFSET] LSSU FH2$C_LENGTH/2
;	0498	OR .HEADER[FH2$B_MPOFFSET] LSSU .HEADER[FH2$B_IDOFFSET]
;	0499	OR .HEADER[FH2$B_ACOFFSET] LSSU .HEADER[FH2$B_MPOFFSET]
;	0500	OR .HEADER[FH2$B_RSOFFSET] LSSU .HEADER[FH2$B_ACOFFSET]
;	0501	OR .HEADER[FH2$B_MAP_INUSE] GTRU .HEADER[FH2$B_ACOFFSET] - .HEADER[FH2$B_MPOFFSET]
;	0502	THEN (ERR_STATUS (SS$_BADFILEHDR); RETURN 0);
;	0503	
;	0504	! At this point, we have verified that the block at least once was a
;	0505	! valid file header.
;	0506	!
;	0507	! Look at the file number in the header. If zero, this is a 
;	0508	! deleted header.
;	0509	!
;	0510	
;	0511	IF .HEADER[FH2$W_FID_NUM] EQL 0
;	0512	AND (
;	0513	    IF .CURRENT_VCB[VCB$V_EXTFID]
;	0514	    THEN .HEADER[FH2$B_FID_NMX] EQL 0
;	0515	    ELSE 1
;	0516	    )
;	0517	THEN (ERR_STATUS (SS$_NOSUCHFILE); RETURN 2);
;	0518	
;	0519	! Now compute the header checksum.
;	0520	!
;	0521	
;	0522	IF NOT CHECKSUM (.HEADER)
;	0523	THEN (ERR_STATUS (SS$_BADCHKSUM); RETURN 2);
;	0524	
;	0525	! Check file number and file sequence number.
;	0526	!
;	0527	
;	0528	IF .HEADER[FH2$W_FID_NUM] NEQ .FILE_ID[FID$W_NUM]
;	0529	OR (
;	0530	    IF .CURRENT_VCB[VCB$V_EXTFID]
;	0531	    THEN .HEADER[FH2$B_FID_NMX] NEQ .FILE_ID[FID$B_NMX]

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:07:56	DBB3:[F11B.SRC]CHKHD2.B32;6					Page 2-2
;
;	0532	    ELSE 0
;	0533	    )
;	0534	THEN (ERR_STATUS (SS$_FILENUMCHK); RETURN 2);
;	0535	
;	0536	IF .HEADER[FH2$W_FID_SEQ] NEQ .FILE_ID[FID$W_SEQ]
;	0537	THEN (ERR_STATUS (SS$_FILESEQCHK); RETURN 2);
;	0538	
;	0539	! Header is ok.
;	0540	!
;	0541	
;	0542	RETURN 1;
;	0543	
;	0544	END;					! end of routine CHECK_HEADER


							    .TITLE  CHKHD2
							    .IDENT  \B0008\

							    .EXTRN  CHECKSUM, CURRENT_VCB, USER_STATUS

							    .PSECT  $CODE$,NOWRT,2

					 001C 00000 	    .ENTRY  CHECK_HEADER2, Save R2,R3,R4			      ; 0422
		         54 	0000G  CF  9E 00002 	    MOVAB   USER_STATUS, R4					      ;
		         52 	  04   AC  D0 00007 	    MOVL    HEADER, R2						      ; 0477
		         02 	  07   A2  91 0000B 	    CMPB    7(R2), #2						      ;
				       14  12 0000F 	    BNEQ    3$							      ;
		         51 	0000G  CF  D0 00011 	    MOVL    CURRENT_VCB, R1					      ; 0485
	   05 	    0B   A1	       05  E1 00016 	    BBC     #5, 11(R1), 1$					      ;
				  12   A2  95 0001B 	    TSTB    18(R2)						      ; 0487
				       03  11 0001E 	    BRB     2$							      ;
				  12   A2  B5 00020 1$:     TSTW    18(R2)						      ; 0489
				       07  13 00023 2$:     BEQL    4$							      ;
		         64 	08C0   8F  B0 00025 3$:     MOVW    #2240, USER_STATUS					      ; 0491
				       31  11 0002A 	    BRB     6$							      ;
		         26 	       62  91 0002C 4$:     CMPB    (R2), #38						      ; 0497
				       27  1F 0002F 	    BLSSU   5$							      ;
		         62 	  01   A2  91 00031 	    CMPB    1(R2), (R2)						      ; 0498
				       21  1F 00035 	    BLSSU   5$							      ;
		    01   A2	  02   A2  91 00037 	    CMPB    2(R2), 1(R2)					      ; 0499
				       1A  1F 0003C 	    BLSSU   5$							      ;
		    02   A2	  03   A2  91 0003E 	    CMPB    3(R2), 2(R2)					      ; 0500
				       13  1F 00043 	    BLSSU   5$							      ;
		         50 	  02   A2  9A 00045 	    MOVZBL  2(R2), R0						      ; 0501
		         53 	  01   A2  9A 00049 	    MOVZBL  1(R2), R3						      ;
		         50 	       53  C2 0004D 	    SUBL2   R3, R0						      ;
      3A   A2	         08 	       00  ED 00050 	    CMPZV   #0, #8, 58(R2), R0					      ;
				       50     00055									      ;
				       07  1B 00056 	    BLEQU   7$							      ;
		         64 	0810   8F  B0 00058 5$:     MOVW    #2064, USER_STATUS					      ; 0502
				       5D  11 0005D 6$:     BRB     15$							      ;
				  08   A2  B5 0005F 7$:     TSTW    8(R2)						      ; 0511
				       11  12 00062 	    BNEQ    9$							      ;
	   05 	    0B   A1	       05  E1 00064 	    BBC     #5, 11(R1), 8$					      ; 0513
				  0D   A2  95 00069 	    TSTB    13(R2)						      ; 0514

; Bliss-32 10.1-416	Monday 21-AUG-1978 23:07:56	DBB3:[F11B.SRC]CHKHD2.B32;6					Page 2-3
;
				       07  12 0006C 	    BNEQ    9$							      ;
		         64 	0910   8F  B0 0006E 8$:     MOVW    #2320, USER_STATUS					      ; 0517
				       3F  11 00073 	    BRB     13$							      ;
				       52  DD 00075 9$:     PUSHL   R2							      ; 0522
		  0000G  CF	       01  FB 00077 	    CALLS   #1, CHECKSUM					      ;
		         07 	       50  E8 0007C 	    BLBS    R0, 10$						      ;
		         64 	0808   8F  B0 0007F 	    MOVW    #2056, USER_STATUS					      ; 0523
				       2E  11 00084 	    BRB     13$							      ;
		         51 	  08   AC  D0 00086 10$:    MOVL    FILE_ID, R1						      ; 0528
		         61 	  08   A2  B1 0008A 	    CMPW    8(R2), (R1)						      ;
				       11  12 0008E 	    BNEQ    11$							      ;
		         50 	0000G  CF  D0 00090 	    MOVL    CURRENT_VCB, R0					      ; 0530
	   0E 	    0B   A0	       05  E1 00095 	    BBC     #5, 11(R0), 12$					      ;
		    05   A1	  0D   A2  91 0009A 	    CMPB    13(R2), 5(R1)					      ; 0531
				       07  13 0009F 	    BEQL    12$							      ;
		         64 	08B0   8F  B0 000A1 11$:    MOVW    #2224, USER_STATUS					      ; 0534
				       0C  11 000A6 	    BRB     13$							      ;
		    02   A1	  0A   A2  B1 000A8 12$:    CMPW    10(R2), 2(R1)					      ; 0536
				       09  13 000AD 	    BEQL    14$							      ;
		         64 	08B8   8F  B0 000AF 	    MOVW    #2232, USER_STATUS					      ; 0537
		         50 	       02  D0 000B4 13$:    MOVL    #2, R0						      ;
					   04 000B7 	    RET     							      ;
		         50 	       01  D0 000B8 14$:    MOVL    #1, R0						      ; 0542
					   04 000BB 	    RET     							      ;
				       50  D4 000BC 15$:    CLRL    R0							      ; 0422
					   04 000BE 	    RET     							      ;

; Routine Size:  191 bytes


;	0545	
;	0546	END
;	0547	ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $CODE$         	   191  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]LIB.L32;1		      5582        29         0       241


; Bliss-32 10.1-416	Monday 21-AUG-1978 23:07:56	DBB3:[F11B.SRC]CHKHD2.B32;6					Page 2-4
;




; Size:		191 code + 0 data bytes
; Run Time:	00:06.8
; Elapsed Time:	00:14.8
; Memory Used:	294 pages
; Compilation Complete
