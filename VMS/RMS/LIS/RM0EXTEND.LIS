RM0EXTEND       COMMON EXTEND FILE ROUTINE                       21-AUG-1978 21:19:36   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      41  DECLARATIONS
   (1)      67  RM$EXTEND0  -  COMMON FILE EXTEND ROUTINE
RM0EXTEND       COMMON EXTEND FILE ROUTINE                       21-AUG-1978 21:19:36   VAX-11 MACRO X0.3-11               Page   1
008                                                                                                                              (1)

                                     0000     1 	$BEGIN RM0EXTEND,008,F$RMSEXTEND,<COMMON EXTEND FILE ROUTINE>
                                     0000     2 
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY: RMS32
                                     0000    25 ;
                                     0000    26 ; ABSTRACT:
                                     0000    27 ;		ROUTINE TO PERFORM COMMON FILE EXTEND PROCESSING FOR
                                     0000    28 ;		ALL FILE ORGANIZATIONS.
                                     0000    29 ;
                                     0000    30 ; ENVIRONMENT:
                                     0000    31 ;		STAR PROCESSOR RUNNING STARLET EXEC.
                                     0000    32 ;
                                     0000    33 ; AUTHOR: L F LAVERDURE,	 CREATION DATE: 2-DEC-77
                                     0000    34 ;
                                     0000    35 ; MODIFIED BY:
                                     0000    36 ;
                                     0000    37 ;	L F LAVERDURE,   17-FEB-78  13:33
                                     0000    38 ; 01	- 
                                     0000    39 ;--
RM0EXTEND       COMMON EXTEND FILE ROUTINE                       21-AUG-1978 21:19:36   VAX-11 MACRO X0.3-11               Page   2
008             DECLARATIONS                                                                                                     (1)

                                     0000    41 	.SBTTL	DECLARATIONS
                                     0000    42 ;
                                     0000    43 ; INCLUDE FILES:
                                     0000    44 ;
                                     0000    45 
                                     0000    46 ;
                                     0000    47 ; MACROS:
                                     0000    48 ;
                                     0000    49 	$FIBDEF
                                     0000    50 	$FABDEF
                                     0000    51 	$IFBDEF
                                     0000    52 	$XABDEF
                                     0000    53 	$XABALLDEF
                                     0000    54 	$RMSDEF
                                     0000    55 	.LIST MEB
                                     0000    56 
                                     0000    57 ;
                                     0000    58 ; EQUATED SYMBOLS:
                                     0000    59 ;
                           00000020  0000    60 	FOP=FAB$L_FOP*8		; BIT OFFSET TO FILE OPTIONS LONGWORD
                                     0000    61 
                                     0000    62 ;
                                     0000    63 ; OWN STORAGE:
                                     0000    64 ;
                                     0000    65 
RM0EXTEND       COMMON EXTEND FILE ROUTINE                       21-AUG-1978 21:19:36   VAX-11 MACRO X0.3-11               Page   3
008             RM$EXTEND0  -  COMMON FILE EXTEND ROUTINE                                                                        (1)

                                     0000    67 	.SBTTL RM$EXTEND0  -  COMMON FILE EXTEND ROUTINE
                                     0000    68 ;++
                                     0000    69 ; FUNCTIONAL DESCRIPTION:
                                     0000    70 ;
                                     0000    71 ;  THIS ROUTINE PERFORMS COMMON FILE EXTENSION PROCESSING
                                     0000    72 ;  INCLUDING THE FOLLOWING:
                                     0000    73 ;
                                     0000    74 ;	1. ALLOCATES A FIB TO BUILD THE FILE EXTENSION REQUEST.
                                     0000    75 ;	2. INITIALIZES THE FIELDS OF THE FIB BASED UPON THE TYPE OF EXTEND.
                                     0000    76 ;	3. UTILIZES THE PLACEMENT INFORMATION FROM THE XAB, IF PROVIDED.
                                     0000    77 ;	4. BUILDS A DESCRIPTOR FOR THE FIB AND CALLS RM$FCPEXTEND
                                     0000    78 ;	   TO PERFORM THE EXTEND.
                                     0000    79 ;	5. DEALLOCATES THE FIB AND RETURNS
                                     0000    80 ;
                                     0000    81 ; CALLING SEQUENCE:
                                     0000    82 ;
                                     0000    83 ;	BSBW	RM$EXTEND0
                                     0000    84 ;
                                     0000    85 ;  ALTERNATE ENTRY AT RM$EXTEND0_ALT TO PERFORM FUNCTIONS 4 & 5 ONLY
                                     0000    86 ;
                                     0000    87 ;	THE FIB MUST ALREADY HAVE BEEN ALLOCATED AND THE EXTEND SIZE
                                     0000    88 ;	FIELD FILLED IN.  ADDRESS OF FIB MUST BE IN R1 (R5 AND R6 NOT INPUTS).
                                     0000    89 ;
                                     0000    90 ;
                                     0000    91 ; INPUT PARAMETERS:
                                     0000    92 ;
                                     0000    93 ;	R11		IMPURE AREA ADDRESS
                                     0000    94 ;	R10		IFAB/SIFAB ADDRESS
                                     0000    95 ;	R9		IRAB/IFAB ADDRESS (IFAB IF ENTRY AT RM$EXTEND0)
                                     0000    96 ;	R8		RAB/FAB ADDRESS (FAB IF ENTRY AT RM$EXTEND0)
                                     0000    97 ;	R6		ALLOCATION XAB ADDRESS, IF ANY, ELSE 0
                                     0000    98 ;	R5		EXTEND SIZE IN BLOCKS
                                     0000    99 ;
                                     0000   100 ; IMPLICIT INPUTS:
                                     0000   101 ;
                                     0000   102 ;	THE CONTENTS OF THE FAB
                                     0000   103 ;
                                     0000   104 ; OUTPUT PARAMETERS:
                                     0000   105 ;
                                     0000   106 ;	R6		END VBN OF EXTENT + 1
                                     0000   107 ;	R1		STARTING VBN OF EXTENT
                                     0000   108 ;	R0		STATUS
                                     0000   109 ;	R2-R5,AP	DESTROYED
                                     0000   110 ;
                                     0000   111 ; IMPLICIT OUTPUTS:
                                     0000   112 ;
                                     0000   113 ;	NONE
                                     0000   114 ;
                                     0000   115 ; COMPLETION CODES:
                                     0000   116 ;
                                     0000   117 ;	STANDARD RMS.
                                     0000   118 ;
                                     0000   119 ; SIDE EFFECTS:
                                     0000   120 ;
                                     0000   121 ;	MAY HAVE SWITCHED TO RUNNING AT AST LEVEL.
                                     0000   122 ;
                                     0000   123 ;--
RM0EXTEND       COMMON EXTEND FILE ROUTINE                       21-AUG-1978 21:19:36   VAX-11 MACRO X0.3-11               Page   4
008             RM$EXTEND0  -  COMMON FILE EXTEND ROUTINE                                                                        (1)

                                     0000   125 RM$EXTEND0::
            52            2C     D0  0000   126 	MOVL	#FIB$C_ALCDATA,R2		; SIZE OF FIB
                          FFFA'  30  0003   127 	BSBW	RM$GETSPC1			; ALLOCATE FIB
            5C            50     E9  0006   128 	BLBC	R0,EXIT				; GET OUT ON ERROR
         18 A1            55     D0  0009   129 	MOVL	R5,FIB$L_EXSZ(R1)		; SET EXTEND SIZE
                          0B     12  000D   130 	BNEQ	10$				; BRANCH IF NON-ZERO
         18 A1         3A A9     3C  000F   131 	MOVZWL	IFB$W_RTDEQ(R9),FIB$L_EXSZ(R1)	; USE DEFAULT EXTEND SIZE
                          04     12  0014   132 	BNEQ	10$				; BRANCH IF NON-ZERO
         16 A1            08     88  0016   133 	BISB2	#FIB$M_ALDEF,FIB$W_EXCTL(R1)	; ELSE USE VOLUME DEFAULT
                                     001A   134 10$:
                                     001A   135 ;
                                     001A   136 ;  HANDLE ALLOCATION XAB PLACEMENT CONTROL, IF ANY
                                     001A   137 ;
                          56     D5  001A   138 	TSTL	R6				; ANY ALLOCATION XAB?
                          08     13  001C   139 	BEQL	CBTCTG				; BRANCH IF NONE
                          49     10  001E   140 	BSBB	RM$SET_XABALL			; HANDLE PLACEMENT CONTROL
            21            50     E8  0020   141 	BLBS	R0,EXTND			; BRANCH IF OK
                                     0023   142 	$PSECT_BR	L$RMS0
                          FFDA'  31  0023       		BRW	L$RMS00
                                     0026       		.SAVE
                                 00000000       		.PSECT	L$RMS0,GBL,NOWRT
                                     0000       L$RMS00:
            54            51     D0  0000   143 	MOVL	R1,R4				; SET UP REGS TO RETURN FIB
            52            2C     D0  0003   144 	MOVL	#FIB$C_ALCDATA,R2		;	"
                          08     11  0006   145 	BRB	DEALL_FIB			; GO DEALLOCATE FIB & GET OUT
                                     0008   146 	$PSECT_RESTORE
                                 00000026       		.RESTORE
                                     0026   147 ;
                                     0026   148 ;  SET CONTIGUOUS BEST TRY IF SPECIFIED IN FOP
                                     0026   149 ;
            68            35     E1  0026   150 CBTCTG:	BBC	#FAB$V_CBT+FOP,(R8),20$		; BRANCH IF CBT BIT OFF
                          05         0029       
         16 A1            01     E3  002A   151 	BBCS	#FIB$V_ALCONB,FIB$W_EXCTL(R1),30$ ; ASK PRIMITIVE FOR BEST TRY
                          11         002E       
                                     002F   152 						; AND BRANCH
            68            34     E1  002F   153 20$:	BBC	#FAB$V_CTG+FOP,(R8),30$		; BRANCH IF CTG BIT OFF
                          0D         0032       
         16 A1            01     88  0033   154 	BISB2	#FIB$M_ALCON,FIB$W_EXCTL(R1)	; ASK FOR CONTIGUOUS EXTEND
                       40 A9     D5  0037   155 	TSTL	IFB$L_HBK(R9)			; IS THIS FIRST ALLOCATION?
                          04     12  003A   156 	BNEQ	30$				; BRANCH IF NOT
         16 A1            04     88  003C   157 	BISB2	#FIB$M_FILCON,FIB$W_EXCTL(R1)	; YES - ALSO MARK FILE CTG
                                     0040   158 30$:						; FALL THRU TO RM$EXTEND0_ALT
RM0EXTEND       COMMON EXTEND FILE ROUTINE                       21-AUG-1978 21:19:36   VAX-11 MACRO X0.3-11               Page   5
008             RM$EXTEND0  -  COMMON FILE EXTEND ROUTINE                                                                        (1)

                                     0040   160 ;++
                                     0040   161 ;  ENTRY POINT FOR AUTOMATIC EXTEND ON $PUT.
                                     0040   162 ;
                                     0040   163 ;	R8, R9 HAV RAB AND IRAB ADDRESSES RESPECTIVELY
                                     0040   164 ;	FIB MUST ALREADY HAVE BEEN ALLOCATED AND EXTEND SIZE SET, ADDR IN R1.
                                     0040   165 ;--
                                     0040   166 RM$EXTEND0_ALT::
         21 A1            03     90  0040   167 	MOVB	#FIB$C_VBN,FIB$B_ALALIGN(R1)	; SPECIFY PLACEMENT NEAR EOF
         16 A1         80 8F     88  0044   168 EXTND:	BISB2	#FIB$M_EXTEND,FIB$W_EXCTL(R1)	; FLAG THIS AS AN EXTEND
                          51     DD  0049   169 	PUSHL	R1				; BUILD FIB DESCRIPTOR - ADDR
                          2C     DD  004B   170 	PUSHL	#FIB$C_ALCDATA			;		       - LENGTH
                          FFB0'  30  004D   171 	BSBW	RM$FCPEXTEND			; DO THE EXTEND
                          14     BA  0050   172 	POPR	#^M<R2,R4>			; CLEAN STACK AND GET FIB LEN & ADDR
            11            50     E9  0052   173 	BLBC	R0,ERREXT			; BRANCH IF EXTEND FAILED
                                     0055   174 ;
                                     0055   175 ;  EXTEND COMPLETE.
                                     0055   176 ;  SAVE NEW HIGH VBN + 1 IN R6, START VBN IN R1, AND DEALLOCATE FIB
                                     0055   177 ;
                       1C A4     DD  0055   178 	PUSHL	FIB$L_EXVBN(R4)			; SAVE STARTING VBN OF EXTENT
         18 A4            6E     C1  0058   179 	ADDL3	(SP),FIB$L_EXSZ(R4),R6		; AND END VBN + 1
                          56         005C       
                          FFA0'  30  005D   180 	BSBW	RM$RETSPC1			; DEALLOCATE FIB
                          02     BA  0060   181 	POPR	#^M<R1>				; RESTORE STARTING VBN
                                     0062   182 	RMSSUC
            50            01     D0  0062       		MOVL	#1,R0
                                 05  0065   183 EXIT:	RSB
                                     0066   184 
                                     0066   185 ;++
                                     0066   186 ;
                                     0066   187 ;  EXTEND FAILED.
                                     0066   188 ;  MAP ERROR, DEALLOCATE FIB, AND RETURN.
                                     0066   189 ;
                                     0066   190 ;--
                                     0066   191 ERREXT:	$PSECT_BR	L$RMS0
                          FF9F'  31  0066       		BRW	L$RMS01
                                     0069       		.SAVE
                                 00000008       		.PSECT	L$RMS0,GBL,NOWRT
                                     0008       L$RMS01:
                                     0008   192 	RMSERR	EXT,R1				; DEFAULT STATUS CODE
            51       C022 8F     3C  0008       		MOVZWL	#<RMS$_EXT&^XFFFF>,R1
                          FFF0'  30  000D   193 	BSBW	RM$MAPERR			; MAP THE ERROR CODE
                                     0010   194 DEALL_FIB:
                          50     DD  0010   195 	PUSHL	R0				; SAVE IT
                          FFEB'  30  0012   196 	BSBW	RM$RETSPC1			; DEALLOCATE FIB
                          01     BA  0015   197 	POPR	#^M<R0>				; RESTORE STATUS
                                 05  0017   198 	RSB
                                     0018   199 	$PSECT_RESTORE
                                 00000069       		.RESTORE
RM0EXTEND       COMMON EXTEND FILE ROUTINE                       21-AUG-1978 21:19:36   VAX-11 MACRO X0.3-11               Page   6
008             RM$EXTEND0  -  COMMON FILE EXTEND ROUTINE                                                                        (1)

                                     0069   201 ;++
                                     0069   202 ;  RM$SET_XABALL SUBROUTINE TO HANDLE ALLOCATION XAB PLACEMENT CONTROL,
                                     0069   203 ;  SETTING UP THE FIB ACCORDING TO THE XAB INPUTS.
                                     0069   204 ;
                                     0069   205 ;  INPUTS:
                                     0069   206 ;
                                     0069   207 ;	R6	XAB ADDRESS
                                     0069   208 ;	R1	FIB ADDRESS
                                     0069   209 ;
                                     0069   210 ;  OUTPUTS:
                                     0069   211 ;
                                     0069   212 ;	R0	STATUS CODE
                                     0069   213 ;	THE PLACEMENT CONTROL SECTION OF THE FIB IS INITIALIZED.
                                     0069   214 ;
                                     0069   215 ;  NOTE: NO REGISTERS OTHER THAN R0 ARE MODIFIED.
                                     0069   216 ;
                                     0069   217 ;--
                                     0069   218 RM$SET_XABALL::
         08 A6            05     E1  0069   219 	BBC	#XAB$V_CBT,XAB$B_AOP(R6),20$	; BRANCH IF CBT OFF
                          05         006D       
         16 A1            01     E3  006E   220 	BBCS	#FIB$V_ALCONB,FIB$W_EXCTL(R1),30$ ; ASK PRIMITIVE FOR CONTIG.
                          12         0072       
                                     0073   221 						; BEST TRY AND BRANCH
         08 A6            07     E1  0073   222 20$:	BBC	#XAB$V_CTG,XAB$B_AOP(R6),30$	; BRANCH IF CTG OFF
                          0D         0077       
         16 A1            01     88  0078   223 	BISB2	#FIB$M_ALCON,FIB$W_EXCTL(R1)	; ASK FOR CONTIG. EXTEND
                       40 A9     D5  007C   224 	TSTL	IFB$L_HBK(R9)			; IS THIS FIRST ALLOCATION?
                          04     12  007F   225 	BNEQ	30$				; BRANCH IF NOT
         16 A1            04     88  0081   226 	BISB2	#FIB$M_FILCON,FIB$W_EXCTL(R1)	; YES - ALSO MARK FILE CTG
                                     0085   227 30$:
                                     0085   228 	ASSUME	XAB$B_ALN EQ XAB$B_AOP+1
                                     0085   229 	ASSUME	FIB$B_ALALIGN EQ FIB$B_ALOPTS+1
         08 A6       00A0 8F     AB  0085   230 	BICW3	#XAB$M_CBT!XAB$M_CTG,XAB$B_AOP(R6),FIB$B_ALOPTS(R1)
                       20 A1         008B       
                                     008D   231 						; SET ALL. OPTIONS & ALIGNMENT TYPE
         20 A1         FC 8F     93  008D   232 	BITB	#^C<XAB$M_HRD!XAB$M_ONC>,FIB$B_ALOPTS(R1)	; ANY UNKNOWN BITS?
                          19     12  0092   233 	BNEQ	ERRAOP				; BRANCH IF YES
         26 A1         0A A6     B0  0094   234 	MOVW	XAB$W_VOL(R6),FIB$W_LOC_RVN(R1)	; SET RELATIVE VOL. #
            04         09 A6     91  0099   235 	CMPB	XAB$B_ALN(R6),#XAB$C_RFI	; RELATED FILE TYPE ALLOC.?
                          05     1F  009D   236 	BLSSU	40$				; BRANCH IF LESS	BGTRU	ERRALN				; BRANCH IF GREATER (ERROR)
                                     009F   237 
                                     009F   238 	ASSUME	FIB$L_LOC_ADDR EQ FIB$W_LOC_FID+6
         22 A1         18 A6     7D  009F   239 	MOVQ	XAB$W_RFI(R6),FIB$W_LOC_FID(R1)	; SET RELATED FILE ID
         28 A1         0C A6     D0  00A4   240 40$:	MOVL	XAB$L_LOC(R6),FIB$L_LOC_ADDR(R1) ; SET ALLOCATION LOCATION
                                     00A9   241 	RMSSUC
            50            01     D0  00A9       		MOVL	#1,R0
                                 05  00AC   242 	RSB
                                     00AD   243 
                                     00AD   244 ;++
                                     00AD   245 ;
                                     00AD   246 ;  TELL ABOUT UNKNOWN AOP OR ALN VALUES
                                     00AD   247 ;
                                     00AD   248 ;--
                                     00AD   249 ERRAOP:	$PSECT_BR	L$RMS0
                          FF68'  31  00AD       		BRW	L$RMS02
                                     00B0       		.SAVE
                                 00000018       		.PSECT	L$RMS0,GBL,NOWRT
RM0EXTEND       COMMON EXTEND FILE ROUTINE                       21-AUG-1978 21:19:36   VAX-11 MACRO X0.3-11               Page   7
008             RM$EXTEND0  -  COMMON FILE EXTEND ROUTINE                                                                        (1)

                                     0018       L$RMS02:
                                     0018   250 	RMSERR	AOP
            50       8414 8F     3C  0018       		MOVZWL	#<RMS$_AOP&^XFFFF>,R0
                          05     11  001D   251 	BRB	SETSTV
                                     001F   252 	$PSECT_RESTORE
                                 000000B0       		.RESTORE
                                     00B0   253 ;
                                     00B0   254 ERRALN:	$PSECT_BR	L$RMS0
                          FF6C'  31  00B0       		BRW	L$RMS03
                                     00B3       		.SAVE
                                 0000001F       		.PSECT	L$RMS0,GBL,NOWRT
                                     001F       L$RMS03:
                                     001F   255 	RMSERR	ALN
            50       83FC 8F     3C  001F       		MOVZWL	#<RMS$_ALN&^XFFFF>,R0
         0C A8            56     D0  0024   256 SETSTV:	MOVL	R6,FAB$L_STV(R8)		; XAB ADDRESS AS STV VALUE
                                 05  0028   257 	RSB
                                     0029   258 	$PSECT_RESTORE
                                 000000B3       		.RESTORE
                                     00B3   259 
                                     00B3   260 
                                     00B3   261 	.END
RM0EXTEND       COMMON EXTEND FILE ROUTINE                       21-AUG-1978 21:19:36   VAX-11 MACRO X0.3-11               Page   8
SYMBOL TABLE                                                                                                                     (1)

$$.PSECT_EP    = 00000004            FAB$M_CTG      = 00100000            FAB$V_DMO      = 0000000C            
$$RMSTEST      = 0000001A            FAB$M_DEL      = 00000004            FAB$V_ESC      = 0000001B            
$$RMS_PBUGCHK  = 00000010            FAB$M_DFW      = 00000020            FAB$V_EXE      = 00000007            
$$RMS_TBUGCHK  = 00000008            FAB$M_DLT      = 00008000            FAB$V_FTN      = 00000000            
$$RMS_UMODE    = 00000004            FAB$M_DMO      = 00001000            FAB$V_GET      = 00000001            
BIT...         = 0001C134            FAB$M_ESC      = 08000000            FAB$V_INP      = 00000013            
CBTCTG           00000026 R     02   FAB$M_EXE      = 00000080            FAB$V_JNL      = 00000016            
DEALL_FIB        00000010 R     04   FAB$M_FTN      = 00000001            FAB$V_KFO      = 0000001E            
ERRALN           000000B0 R     02   FAB$M_GET      = 00000002            FAB$V_MSE      = 00000004            
ERRAOP           000000AD R     02   FAB$M_INP      = 00080000            FAB$V_MXV      = 00000001            
ERREXT           00000066 R     02   FAB$M_JNL      = 00400000            FAB$V_NAM      = 00000018            
EXIT             00000065 R     02   FAB$M_KFO      = 40000000            FAB$V_NEF      = 0000000A            
EXTND            00000044 R     02   FAB$M_MSE      = 00000010            FAB$V_NFS      = 00000010            
FAB$B_BID        00000000            FAB$M_MXV      = 00000002            FAB$V_NIL      = 00000005            
FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            FAB$V_OFP      = 0000001D            
FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            FAB$V_ORG      = 00000004            
FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            FAB$V_POS      = 00000008            
FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            FAB$V_PPF      = 00000012            
FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            FAB$V_PPF_IND  = 0000000E            
FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            FAB$V_PPF_RAT  = 00000006            
FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            FAB$V_PRN      = 00000002            
FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            FAB$V_PUT      = 00000000            
FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            FAB$V_RCK      = 00000017            
FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            FAB$V_RWC      = 0000000B            
FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            FAB$V_RWO      = 00000007            
FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            FAB$V_SCF      = 0000000E            
FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            FAB$V_SHRDEL   = 00000002            
FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            FAB$V_SHRGET   = 00000001            
FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            FAB$V_SHRPUT   = 00000000            
FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            FAB$V_SHRUPD   = 00000003            
FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            FAB$V_SPL      = 0000000D            
FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            FAB$V_SQO      = 00000006            
FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            FAB$V_SUP      = 00000002            
FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            FAB$V_TEF      = 0000001C            
FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            FAB$V_TMD      = 00000004            
FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            FAB$V_TMP      = 00000003            
FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            FAB$V_TRN      = 00000004            
FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            FAB$V_UFM      = 0000001A            
FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            FAB$V_UFO      = 00000011            
FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            FAB$V_UPD      = 00000003            
FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            FAB$V_UPI      = 00000006            
FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            FAB$V_WCK      = 00000009            
FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            FAB$W_BLS        0000003C            
FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            FAB$W_DEQ        00000014            
FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            FAB$W_IFI        00000002            
FAB$L_MRN        00000038            FAB$S_ORG      = 00000004            FAB$W_MRS        00000036            
FAB$L_NAM        00000028            FAB$S_PPF_RAT  = 00000008            FIB$B_ALALIGN    00000021            
FAB$L_SDC        00000044            FAB$V_BIO      = 00000005            FIB$B_ALOPTS     00000020            
FAB$L_STS        00000008            FAB$V_BLK      = 00000003            FIB$B_DID_NMX    0000000F            
FAB$L_STV        0000000C            FAB$V_BRO      = 00000006            FIB$B_DID_RVN    0000000E            
FAB$L_XAB        00000024            FAB$V_CBT      = 00000015            FIB$B_FID_NMX    00000009            
FAB$M_BIO      = 00000020            FAB$V_CIF      = 00000019            FIB$B_FID_RVN    00000008            
FAB$M_BLK      = 00000008            FAB$V_CR       = 00000001            FIB$B_LOC_NMX    00000027            
FAB$M_BRO      = 00000040            FAB$V_CTG      = 00000014            FIB$B_LOC_RVN    00000026            
FAB$M_CBT      = 00200000            FAB$V_DEL      = 00000002            FIB$B_WSIZE      00000003            
FAB$M_CIF      = 02000000            FAB$V_DFW      = 00000005            FIB$C_ACCDATA    0000000A            
FAB$M_CR       = 00000002            FAB$V_DLT      = 0000000F            FIB$C_ALCDATA    0000002C            
RM0EXTEND       COMMON EXTEND FILE ROUTINE                       21-AUG-1978 21:19:36   VAX-11 MACRO X0.3-11               Page   9
SYMBOL TABLE                                                                                                                     (1)

FIB$C_CYL      = 00000001            FIB$M_WRITE    = 00000100            IFB$B_BLN        00000009            
FIB$C_DIRDATA    00000016            FIB$M_WRITECK  = 00000020            IFB$B_EFN        0000000B            
FIB$C_EXTDATA    00000020            FIB$V_ALCON    = 00000000            IFB$B_EXTRABUF   0000005D            
FIB$C_ILLEGAL  = 00000005            FIB$V_ALCONB   = 00000001            IFB$B_FAC        00000022            
FIB$C_LBN      = 00000002            FIB$V_ALDEF    = 00000003            IFB$B_FSZ        0000004B            
FIB$C_LENGTH     0000002C            FIB$V_ALLNAM   = 00000005            IFB$B_KBUFSZ     0000005C            
FIB$C_MTALEN     0000001C            FIB$V_ALLTYP   = 00000004            IFB$B_MODE       0000000A            
FIB$C_NEXTVOL  = 00000003            FIB$V_ALLVER   = 00000003            IFB$B_NUM_KEYS   0000005A            
FIB$C_POSEND   = 00000002            FIB$V_CURPOS   = 00000004            IFB$B_ORGCASE    00000023            
FIB$C_REWINDFIL= 00000006            FIB$V_DLOCK    = 00000001            IFB$B_RAT        0000003D            
FIB$C_REWINDVOL= 00000001            FIB$V_EXACT    = 00000000            IFB$B_RFMORG     0000003C            
FIB$C_RFI      = 00000004            FIB$V_EXECUTE  = 00000010            IFB$B_UBUFSZ     0000005B            
FIB$C_SPACE    = 00000004            FIB$V_EXTEND   = 00000007            IFB$C_BID      = 0000000B            
FIB$C_VBN      = 00000003            FIB$V_FILCON   = 00000002            IFB$C_BLN        00000060            
FIB$K_ACCDATA    0000000A            FIB$V_FINDFID  = 0000000B            IFB$C_BLN_IDX    00000060            
FIB$K_ALCDATA    0000002C            FIB$V_HIGHVER  = 0000000F            IFB$C_BLN_REL    00000060            
FIB$K_DIRDATA    00000016            FIB$V_LOWVER   = 0000000E            IFB$C_BLN_SEQ    0000005C            
FIB$K_EXTDATA    00000020            FIB$V_MARKBAD  = 0000000A            IFB$C_DIR      = 00000003            
FIB$K_LENGTH     0000002C            FIB$V_NEWVER   = 00000009            IFB$C_FHAEND     00000050            
FIB$K_MTALEN     0000001C            FIB$V_NOHDREXT = 00000009            IFB$C_IDX      = 00000002            
FIB$L_ACCTL      00000000            FIB$V_NOREAD   = 0000000A            IFB$C_MAXORG   = 00000002            
FIB$L_CNTRLVAL   00000018            FIB$V_NOTRUNC  = 0000000B            IFB$C_REL      = 00000001            
FIB$L_EXSZ       00000018            FIB$V_NOWRITE  = 00000000            IFB$C_SEQ      = 00000000            
FIB$L_EXVBN      0000001C            FIB$V_ONCYL    = 00000001            IFB$K_BLN        00000060            
FIB$L_LOC_ADDR   00000028            FIB$V_PRSRV_ATR= 00000011            IFB$K_BLN_IDX    00000060            
FIB$L_WCC        00000010            FIB$V_READCK   = 00000009            IFB$K_BLN_REL    00000060            
FIB$M_ALCON    = 00000001            FIB$V_REWIND   = 00000003            IFB$K_BLN_SEQ    0000005C            
FIB$M_ALCONB   = 00000002            FIB$V_SEQONLY  = 00000006            IFB$K_FHAEND     00000050            
FIB$M_ALDEF    = 00000008            FIB$V_SPOOL    = 00000004            IFB$L_ARGLST     00000018            
FIB$M_ALLNAM   = 00000020            FIB$V_SUPERSEDE= 0000000A            IFB$L_ASBADDR    00000014            
FIB$M_ALLTYP   = 00000010            FIB$V_TRUNC    = 00000008            IFB$L_AS_DEV     00000054            
FIB$M_ALLVER   = 00000008            FIB$V_UPDATE   = 00000006            IFB$L_BDB_BLNK   00000034            
FIB$M_CURPOS   = 00000010            FIB$V_WILD     = 00000008            IFB$L_BDB_FLNK   00000030            
FIB$M_DLOCK    = 00000002            FIB$V_WRITE    = 00000008            IFB$L_BKPBITS    00000004            
FIB$M_EXACT    = 00000001            FIB$V_WRITECK  = 00000005            IFB$L_BWB        0000000C            
FIB$M_EXECUTE  = 00010000            FIB$W_ALLOC      00000022            IFB$L_DVBN       00000058            
FIB$M_EXTEND   = 00000080            FIB$W_CNTRLFUNC  00000016            IFB$L_EBK        00000044            
FIB$M_FILCON   = 00000004            FIB$W_DID        0000000A            IFB$L_FRB_PTR    00000028            
FIB$M_FINDFID  = 00000800            FIB$W_DID_NUM    0000000A            IFB$L_FWA_BDB    00000050            
FIB$M_HIGHVER  = 00008000            FIB$W_DID_RVN    0000000E            IFB$L_HBK        00000040            
FIB$M_LOWVER   = 00004000            FIB$W_DID_SEQ    0000000C            IFB$L_IDX_PTR    00000054            
FIB$M_MARKBAD  = 00000400            FIB$W_EXCTL      00000016            IFB$L_IOS        0000000C            
FIB$M_NEWVER   = 00000200            FIB$W_FID        00000004            IFB$L_IOS4       00000010            
FIB$M_NOHDREXT = 00000200            FIB$W_FID_NUM    00000004            IFB$L_IRAB_LNK   0000001C            
FIB$M_NOREAD   = 00000400            FIB$W_FID_RVN    00000008            IFB$L_LAST_FAB   00000024            
FIB$M_NOTRUNC  = 00000800            FIB$W_FID_SEQ    00000006            IFB$L_LOCK_BDB   00000050            
FIB$M_NOWRITE  = 00000001            FIB$W_LOC_FID    00000022            IFB$L_MRN        00000054            
FIB$M_ONCYL    = 00000002            FIB$W_LOC_NUM    00000022            IFB$L_NRP_LNK    00000050            
FIB$M_PRSRV_ATR= 00020000            FIB$W_LOC_RVN    00000026            IFB$L_NWA_PTR    00000028            
FIB$M_READCK   = 00000200            FIB$W_LOC_SEQ    00000024            IFB$L_PRIM_DEV   00000000            
FIB$M_REWIND   = 00000008            FIB$W_NMCTL      00000014            IFB$L_RLB_LNK    0000002C            
FIB$M_SEQONLY  = 00000040            FOP            = 00000020            IFB$L_RNS_LEN    00000050            
FIB$M_SPOOL    = 00000010            GBL...         = 00000000            IFB$M_BIO      = 00000020            
FIB$M_SUPERSEDE= 00000400            IFB$B_AMAX       00000059            IFB$M_BRO      = 00000040            
FIB$M_TRUNC    = 00000100            IFB$B_AVBN       00000058            IFB$M_DEL      = 00000004            
FIB$M_UPDATE   = 00000040            IFB$B_BID        00000008            IFB$M_EXE      = 00000080            
FIB$M_WILD     = 00000100            IFB$B_BKS        0000004A            IFB$M_GET      = 00000002            
RM0EXTEND       COMMON EXTEND FILE ROUTINE                       21-AUG-1978 21:19:36   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (1)

IFB$M_PUT      = 00000001            L$RMS03          0000001F R     04   RMS$_DPE       = 0001C03A            
IFB$M_TRN      = 00000010            RM$EXTEND0       00000000 RG    02   RMS$_DTP       = 000184E4            
IFB$M_UPD      = 00000008            RM$EXTEND0_ALT   00000040 RG    02   RMS$_DUP       = 000184EC            
IFB$S_ORG      = 00000004            RM$FCPEXTEND     ********   X   02   RMS$_DVI       = 000184F4            
IFB$S_RFM      = 00000004            RM$GETSPC1       ********   X   02   RMS$_ENT       = 0001C01A            
IFB$V_ACCESSED = 00000025            RM$MAPERR        ********   X   04   RMS$_ENV       = 00018724            
IFB$V_ANSI_D   = 00000026            RM$RETSPC1       ********   X   02   RMS$_EOF       = 0001827A            
IFB$V_ASYNC    = 00000023            RM$SET_XABALL    00000069 RG    02   RMS$_ESA       = 000184FC            
IFB$V_ASYNCWAIT= 00000024            RMS$V_STVSTATUS= 0000000E            RMS$_ESL       = 00018714            
IFB$V_BIO      = 00000005            RMS$_ABO       = 000183EC            RMS$_ESS       = 00018504            
IFB$V_BRO      = 00000006            RMS$_ACC       = 0001C002            RMS$_EXP       = 000182C2            
IFB$V_BUSY     = 00000020            RMS$_ACT       = 0001825A            RMS$_EXT       = 0001C022            
IFB$V_CREATE   = 00000032            RMS$_AID       = 000183F4            RMS$_FAB       = 0001850C            
IFB$V_DAP      = 0000003E            RMS$_ALN       = 000183FC            RMS$_FAC       = 00018514            
IFB$V_DAP_OPEN = 0000003D            RMS$_ALQ       = 00018404            RMS$_FEX       = 00018282            
IFB$V_DEL      = 00000002            RMS$_ANI       = 0001840C            RMS$_FLG       = 0001851C            
IFB$V_DFW      = 0000002C            RMS$_AOP       = 00018414            RMS$_FLK       = 0001828A            
IFB$V_DLT      = 0000002B            RMS$_ATR       = 0001C0CC            RMS$_FNA       = 00018524            
IFB$V_DMO      = 00000028            RMS$_ATW       = 0001C0D4            RMS$_FND       = 0001C02A            
IFB$V_EOF      = 00000021            RMS$_BKS       = 0001841C            RMS$_FNF       = 00018292            
IFB$V_EXE      = 00000007            RMS$_BKZ       = 00018424            RMS$_FNM       = 0001852C            
IFB$V_GET      = 00000001            RMS$_BLN       = 0001842C            RMS$_FOP       = 0001853C            
IFB$V_MSE      = 00000031            RMS$_BOF       = 00018198            RMS$_FSZ       = 00018534            
IFB$V_NORECLK  = 00000033            RMS$_BUG       = 00018434            RMS$_FUL       = 00018544            
IFB$V_NSP      = 0000003F            RMS$_BUG_DAP   = 00018444            RMS$_IAL       = 0001854C            
IFB$V_NWA      = 0000003C            RMS$_BUG_DDI   = 0001843C            RMS$_IAN       = 00018554            
IFB$V_ORG      = 00000004            RMS$_BUG_XX2   = 0001844C            RMS$_IBF       = 00018754            
IFB$V_PPF_IMAGE= 00000022            RMS$_BUG_XX3   = 00018454            RMS$_IDX       = 0001855C            
IFB$V_PPF_INPUT= 0000002E            RMS$_BUG_XX4   = 0001845C            RMS$_IFA       = 0001C124            
IFB$V_PUT      = 00000000            RMS$_BUG_XX5   = 00018464            RMS$_IFI       = 00018564            
IFB$V_RFM      = 00000000            RMS$_BUG_XX6   = 0001846C            RMS$_IMX       = 0001856C            
IFB$V_RWC      = 00000027            RMS$_BUG_XX7   = 00018474            RMS$_IOP       = 00018574            
IFB$V_RW_ATTR  = 00000034            RMS$_BUG_XX8   = 0001847C            RMS$_IRC       = 0001857C            
IFB$V_SCF      = 0000002A            RMS$_BUG_XX9   = 00018484            RMS$_ISI       = 00018584            
IFB$V_SPL      = 00000029            RMS$_CAA       = 0001848C            RMS$_KBF       = 0001858C            
IFB$V_SQO      = 0000002D            RMS$_CCF       = 0001C0DC            RMS$_KEY       = 00018594            
IFB$V_TEF      = 00000036            RMS$_CCR       = 00018494            RMS$_KFF       = 00018031            
IFB$V_TMP      = 00000035            RMS$_CDA       = 0001C0E4            RMS$_KRF       = 0001859C            
IFB$V_TRN      = 00000004            RMS$_CHG       = 0001849C            RMS$_KSZ       = 000185A4            
IFB$V_UPD      = 00000003            RMS$_CHK       = 000184A4            RMS$_LAN       = 000185AC            
IFB$V_WRTACC   = 00000030            RMS$_CHN       = 0001C0EC            RMS$_LBL       = 000185B4            
IFB$W_ASDEVBSIZ  0000005A            RMS$_COD       = 000184AC            RMS$_LNE       = 000185BC            
IFB$W_BKS_BYTES  0000005C            RMS$_CONTROLC  = 00010651            RMS$_LOC       = 000185C4            
IFB$W_BKS_RECS   0000005E            RMS$_CONTROLO  = 00010609            RMS$_MBC       = 00018734            
IFB$W_CHNL       00000020            RMS$_CONTROLY  = 00010611            RMS$_MKD       = 0001C032            
IFB$W_DEQ        0000004E            RMS$_CRE       = 0001C00A            RMS$_MRN       = 000185CC            
IFB$W_DEVBUFSIZ  00000038            RMS$_CREATED   = 00010619            RMS$_MRS       = 000185D4            
IFB$W_EBK0       00000044            RMS$_CUR       = 000184B4            RMS$_NAM       = 000185DC            
IFB$W_EBK2       00000046            RMS$_DAC       = 0001C012            RMS$_NEF       = 000185E4            
IFB$W_FFB        00000048            RMS$_DAN       = 000184BC            RMS$_NET       = 0001874C            
IFB$W_IOS2       0000000E            RMS$_DEL       = 00018262            RMS$_NID       = 000185EC            
IFB$W_LRL        0000003E            RMS$_DEV       = 000184C4            RMS$_NMF       = 000182CA            
IFB$W_MRS        0000004C            RMS$_DIR       = 000184CC            RMS$_NOD       = 000185F4            
IFB$W_RTDEQ      0000003A            RMS$_DME       = 000184D4            RMS$_NORMAL    = 00010001            
L$RMS00          00000000 R     04   RMS$_DNA       = 000184DC            RMS$_NPK       = 000185FC            
L$RMS01          00000008 R     04   RMS$_DNF       = 0001C04A            RMS$_OK_ALK    = 00018039            
L$RMS02          00000018 R     04   RMS$_DNR       = 00018272            RMS$_OK_DEL    = 00018041            
RM0EXTEND       COMMON EXTEND FILE ROUTINE                       21-AUG-1978 21:19:36   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (1)

RMS$_OK_DUP    = 00018011            RMS$_USZ       = 000186F4            
RMS$_OK_IDX    = 00018019            RMS$_VER       = 000186FC            
RMS$_OK_LIM    = 00018051            RMS$_VOL       = 00018704            
RMS$_OK_RLK    = 00018021            RMS$_WBE       = 0001C12C            
RMS$_OK_RNF    = 00018049            RMS$_WER       = 0001C114            
RMS$_OK_RRV    = 00018029            RMS$_WLD       = 00018744            
RMS$_ORD       = 00018604            RMS$_WLK       = 000182BA            
RMS$_ORG       = 0001860C            RMS$_WPL       = 0001C11C            
RMS$_PBF       = 00018614            RMS$_WSF       = 0001871C            
RMS$_PENDING   = 00018009            RMS$_XAB       = 0001870C            
RMS$_PLG       = 0001861C            SETSTV           00000024 R     04   
RMS$_PLV       = 0001872C            XAB$B_AID        00000017            
RMS$_POS       = 00018624            XAB$B_ALN        00000009            
RMS$_PRM       = 0001862C            XAB$B_AOP        00000008            
RMS$_PRV       = 0001829A            XAB$B_BKZ        00000016            
RMS$_QUO       = 00018634            XAB$B_BLN        00000001            
RMS$_RAB       = 0001863C            XAB$B_COD        00000000            
RMS$_RAC       = 00018644            XAB$C_ALL      = 00000014            
RMS$_RAT       = 0001864C            XAB$C_ALLLEN     00000020            
RMS$_RBF       = 00018654            XAB$C_ANY      = 00000000            
RMS$_RER       = 0001C0F4            XAB$C_CYL      = 00000001            
RMS$_REX       = 000182A2            XAB$C_LBN      = 00000002            
RMS$_RFA       = 0001865C            XAB$C_RFI      = 00000004            
RMS$_RFM       = 00018664            XAB$C_VBN      = 00000003            
RMS$_RHB       = 0001866C            XAB$K_ALLLEN     00000020            
RMS$_RLF       = 00018674            XAB$L_ALQ        00000010            
RMS$_RLK       = 000182AA            XAB$L_LOC        0000000C            
RMS$_RMV       = 0001C0FC            XAB$L_NXT        00000004            
RMS$_RNF       = 000182B2            XAB$L_RDT0       0000000C            
RMS$_RNL       = 000181A0            XAB$L_RDT4       00000010            
RMS$_ROP       = 0001867C            XAB$M_CBT      = 00000020            
RMS$_RPL       = 0001C104            XAB$M_CTG      = 00000080            
RMS$_RRV       = 00018684            XAB$M_HRD      = 00000001            
RMS$_RSA       = 000182DA            XAB$M_ONC      = 00000002            
RMS$_RSL       = 0001873C            XAB$Q_RDT        0000000C            
RMS$_RSS       = 00018694            XAB$V_CBT      = 00000005            
RMS$_RST       = 0001869C            XAB$V_CTG      = 00000007            
RMS$_RSZ       = 000186A4            XAB$V_HRD      = 00000000            
RMS$_RTB       = 000181A8            XAB$V_ONC      = 00000001            
RMS$_SEQ       = 000186AC            XAB$W_DEQ        00000014            
RMS$_SHR       = 000186B4            XAB$W_RFI        00000018            
RMS$_SIZ       = 000186BC            XAB$W_RFI0       00000018            
RMS$_SPL       = 0001C042            XAB$W_RFI2       0000001A            
RMS$_SQO       = 000186C4            XAB$W_RFI4       0000001C            
RMS$_STALL     = 00018001            XAB$W_RVN        00000008            
RMS$_STK       = 000186CC            XAB$W_VOL        0000000A            
RMS$_SUC       = 00010001            
RMS$_SUP       = 000182D2            
RMS$_SUPERSEDE = 00010631            
RMS$_SYN       = 000186D4            
RMS$_SYS       = 0001C10C            
RMS$_TEMP1     = 0001826A            
RMS$_TEMP2     = 0001868C            
RMS$_TMO       = 000181B0            
RMS$_TRE       = 000186DC            
RMS$_TYP       = 000186E4            
RMS$_UBF       = 000186EC            
RM0EXTEND       COMMON EXTEND FILE ROUTINE                       21-AUG-1978 21:19:36   VAX-11 MACRO X0.3-11               Page  12
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
F$RMSEXTEND      000000B3      02     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  
$ABS$            00000060      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
L$RMS0           00000029      04     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
9798. BYTES LEFT IN FREE MEMORY POOL.
2894. BYTES OF RECLAIMED MEMORY.
OBJ$:RM0EXTEND,LIS$:RM0EXTEND/-SP=EXECML$/ML,LIB$:R/ML,SRC$:RM0EXTEND
26 MLB DIR RDS - 964 GETS TO DEFINE 23 MACROS. 74 INTER. FILE WRITES. 
