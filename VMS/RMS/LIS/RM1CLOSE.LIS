RM1CLOSE        SEQUENTIAL-SPECIFIC CLOSE                        21-AUG-1978 21:36:12   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      44  DECLARATIONS
   (1)      74  RM$CLOSE1  -  SEQ. SPECIFIC $CLOSE ROUTINE
RM1CLOSE        SEQUENTIAL-SPECIFIC CLOSE                        21-AUG-1978 21:36:12   VAX-11 MACRO X0.3-11               Page   1
006                                                                                                                              (1)

                                     0000     1 	$BEGIN RM1CLOSE,006,F$RMSCLOSE1,<SEQUENTIAL-SPECIFIC CLOSE>
                                     0000     2 
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ;++
                                     0000    24 ; FACILITY: RMS32
                                     0000    25 ;
                                     0000    26 ; ABSTRACT:
                                     0000    27 ;		THIS MODULE PERFORMS THE SEQUENTIAL FILE ORG. SPECIFIC
                                     0000    28 ;		CLOSE FUNCTIONS.  IN PARTICULAR, IT HANDLES THE SPOOL ON
                                     0000    29 ;		CLOSE AND SUBMIT COMMAND FILE ON CLOSE OPTIONS.
                                     0000    30 ;
                                     0000    31 ; ENVIRONMENT:
                                     0000    32 ;		STAR PROCESSOR RUNNING STARLET EXEC.
                                     0000    33 ;
                                     0000    34 ; AUTHOR: L F LAVERDURE,	 CREATION DATE: 25-APR-78
                                     0000    35 ;
                                     0000    36 ; MODIFIED BY:
                                     0000    37 ;
                                     0000    38 ;	L F LAVERDURE,      7-AUG-78  15:47
                                     0000    39 ;	R A NEWELL,      2-AUG-78  16:05
                                     0000    40 ;	L F LAVERDURE,   17-JUN-78  23:04
                                     0000    41 ; 01	- 
                                     0000    42 ;--
RM1CLOSE        SEQUENTIAL-SPECIFIC CLOSE                        21-AUG-1978 21:36:12   VAX-11 MACRO X0.3-11               Page   2
006             DECLARATIONS                                                                                                     (1)

                                     0000    44 	.SBTTL	DECLARATIONS
                                     0000    45 ;
                                     0000    46 ; INCLUDE FILES:
                                     0000    47 ;
                                     0000    48 
                                     0000    49 ;
                                     0000    50 ; MACROS:
                                     0000    51 ;
                                     0000    52 
                                     0000    53 	$IFBDEF
                                     0000    54 	$DEVDEF
                                     0000    55 	$FABDEF
                                     0000    56 	$NAMDEF
                                     0000    57 	$SMRDEF				; SEND MESSAGE TO SYMBIONT MGR DEFS
                                     0000    58 	$SNDSMBDEF			;		"
                                     0000    59 	.LIST MEB
                                     0000    60 ;
                                     0000    61 ; EQUATED SYMBOLS:
                                     0000    62 ;
                                     0000    63 
                                     0000    64 ;
                                     0000    65 ; OWN STORAGE:
                                     0000    66 ;
                                     0000    67 	$NEWPSECT	F$RMSCLOSEOPTN
                                     0000       		.SAVE
                                 00000000       		.PSECT	F$RMSCLOSEOPTN,GBL,NOWRT
         54 4E 49 52 50 24 53 59 53  0000    68 SYSPRINT:	.ASCII	/SYS$PRINT/
                           00000009  0009    69 SYSPRINT_LEN=.-SYSPRINT
         48 43 54 41 42 24 53 59 53  0009    70 SYSBATCH:	.ASCII	/SYS$BATCH/
                           00000009  0012    71 SYSBATCH_LEN=.-SYSBATCH
                                     0012    72 	$PSECT_RESTORE
                                 00000000       		.RESTORE
RM1CLOSE        SEQUENTIAL-SPECIFIC CLOSE                        21-AUG-1978 21:36:12   VAX-11 MACRO X0.3-11               Page   3
006             RM$CLOSE1  -  SEQ. SPECIFIC $CLOSE ROUTINE                                                                       (1)

                                     0000    74 	.SBTTL RM$CLOSE1  -  SEQ. SPECIFIC $CLOSE ROUTINE
                                     0000    75 
                                     0000    76 ;++
                                     0000    77 ; FUNCTIONAL DESCRIPTION:
                                     0000    78 ;
                                     0000    79 ;  THIS ROUTINE PERFORMS THE SEQUENTIAL FILE ORG. SPECIFIC $CLOSE PROCESSING.
                                     0000    80 ;  IN PARTICULAR, IT CHECKS THE SPL AND SCF OPTIONS, AND IF SET (EITHER ON
                                     0000    81 ;  $OPEN/$CREATE OR ON $CLOSE), SENDS A MESSAGE TO THE SYMBIONT MANAGER TO
                                     0000    82 ;  QUEUE THE FILE TO THE SYS$PRINT OR SYS$BATCH QUEUES RESPECTIVELY.
                                     0000    83 ;  IF BOTH SPL AND SCF ARE SET, SCF TAKES PRECEDENCE.  THE DLT FOP SUB-OPTION
                                     0000    84 ;  IS PASSED ON TO THE SYMBIONT MANAGER.
                                     0000    85 ;
                                     0000    86 ;  THIS OVERALL FLOW OF THE ROUTINE IS AS FOLLOWS:
                                     0000    87 ;
                                     0000    88 ;	1. CHECK THAT ONE OF THE OPTIONS IS WANTED AND THAT IT IS VALID;
                                     0000    89 ;	   IF NOT MERELY DEACCESS THE FILE AND RETURN.
                                     0000    90 ;	2. CHECK THAT A NAM BLOCK HAS BEEN SUPPLIED; FILL IN THE DVI AND FID
                                     0000    91 ;	   FIELDS FROM THE CHANNEL AND DEACCESS THE FILE.
                                     0000    92 ;	3. ALLOCATE A BUFFER ON THE STACK TO BUILD THE MESSAGE FOR THE SYMBIONT
                                     0000    93 ;	   MANAGER.
                                     0000    94 ;	4. FILL IN THE QUEUE NAME IN THE MESSAGE FROM THE LOGICAL NAME TRANSLATION
                                     0000    95 ;	   OF "SYS$PRINT" OR "SYS$BATCH".
                                     0000    96 ;	5. FILL IN THE DEVICE ID, FILE ID, AND DIRECTORY ID FROM THE USER-SUPPLIED
                                     0000    97 ;	   NAM BLK.
                                     0000    98 ;	6. FILE IN THE FILE NAME FROM THE USER-SUPPLIED RESULTANT NAME STRING
                                     0000    99 ;	   (OPTIONAL).
                                     0000   100 ;	7. FILL IN THE DELETE OPTION IF REQUIRED.
                                     0000   101 ;	8. SEND THE MESSAGE TO THE SYMBIONT MANAGER WITH A FUNCTION CODE OF
                                     0000   102 ;	   SMR$K_ENTER.
                                     0000   103 ;
                                     0000   104 ;  NO RETURN MAILBOX IS USED TO FIND OUT IF ALL WENT O.K.
                                     0000   105 ;
                                     0000   106 ;
                                     0000   107 ; CALLING SEQUENCE:
                                     0000   108 ;
                                     0000   109 ;	PUSHAB	RETURN_ADDRESS
                                     0000   110 ;	CASEB	SRC=IFB$B_ORGCASE(R9),DISPLIST=<RM$CLOSE1, ...>
                                     0000   111 ;
                                     0000   112 ; INPUT PARAMETERS:
                                     0000   113 ;
                                     0000   114 ;	R10	IFAB ADDRESS
                                     0000   115 ;	R9	IFAB ADDRESS
                                     0000   116 ;	R8	FAB ADDRESS
                                     0000   117 ;	4(SP)	STATUS CODE
                                     0000   118 ;
                                     0000   119 ; IMPLICIT INPUTS:
                                     0000   120 ;
                                     0000   121 ;	THE CONTENTS OF THE IFAB (ESPECIALLY IFB$V_SPC, SCF, AND DLT)
                                     0000   122 ;	THE CONTENTS OF THE NAM BLOCK (DVI, FID, DID, AND RSA/RSL)
                                     0000   123 ;
                                     0000   124 ; OUTPUT PARAMETERS:
                                     0000   125 ;
                                     0000   126 ;	R1-R7	DESTROYED
                                     0000   127 ;	R0	STATUS CODE
                                     0000   128 ;
                                     0000   129 ; IMPLICIT OUTPUTS:
                                     0000   130 ;
RM1CLOSE        SEQUENTIAL-SPECIFIC CLOSE                        21-AUG-1978 21:36:12   VAX-11 MACRO X0.3-11               Page   4
006             RM$CLOSE1  -  SEQ. SPECIFIC $CLOSE ROUTINE                                                                       (1)

                                     0000   131 ;	FAB$L_STV IS SET TO SUBSIDIARY ERROR CODE ON AN ERROR.
                                     0000   132 ;
                                     0000   133 ; COMPLETION CODES:
                                     0000   134 ;
                                     0000   135 ;	STANDARD RMS, IN PARTICULAR, SPL.
                                     0000   136 ;
                                     0000   137 ; SIDE EFFECTS:
                                     0000   138 ;
                                     0000   139 ;	NONE
                                     0000   140 ;
                                     0000   141 ;--
RM1CLOSE        SEQUENTIAL-SPECIFIC CLOSE                        21-AUG-1978 21:36:12   VAX-11 MACRO X0.3-11               Page   5
006             RM$CLOSE1  -  SEQ. SPECIFIC $CLOSE ROUTINE                                                                       (1)

                                     0000   143 ;++
                                     0000   144 ;
                                     0000   145 ;  CHECK TO SEE IF ANYTHING TO DO
                                     0000   146 ;
                                     0000   147 ;--
                                     0000   148 RM$CLOSE1::
                                     0000   149 	ASSUME	IFB$V_SCF EQ IFB$V_SPL+1
            02            29     ED  0000   150 	CMPZV	#IFB$V_SPL,#2,(R9),#0		; EITHER SPL OR SCF SET?
            00            69         0003       
                          03     12  0005   151 	BNEQ	SPOOL				; BRANCH IF YES
                          FFF6'  31  0007   152 	BRW	RM$DEACCESS			; GO DEACCESS FILE AND
                                     000A   153 						; RETURN TO MAIN LINE CODE
                                     000A   154 ;++
                                     000A   155 ;
                                     000A   156 ;  PERFORM VARIOUS VALIDITY CHECKS TO SEE IF FILE CAN BE SPOOLED
                                     000A   157 ;
                                     000A   158 ;--
                                     000A   159 SPOOL:	$PSECT_BR	F$RMSCLOSEOPTN
                          0005'  31  000A       		BRW	F$RMSCLOSEOPTN0
                                     000D       		.SAVE
                                 00000012       		.PSECT	F$RMSCLOSEOPTN,GBL,NOWRT
                                     0012       F$RMSCLOSEOPTN0:
                                     0012   160 						; NOTE: NO NEED TO CHECK THAT
                                     0012   161 						; PPF_IMAGE NOT SET SINCE CAN'T
                                     0012   162 						; GET HERE IF SO
                          FFEB'  30  0012   163 	BSBW	RM$CLS_CHKNAM			; CHECK OUT REQURIED NAM BLOCK
            70            50     E9  0015   164 	BLBC	R0,ERRNAM1			; ERROR IF NONE OR IF BAD
                                     0018   165 						; (R7 = NAM BLK ADDRESS)
                                     0018   166 ;
                                     0018   167 ;  FILL IN THE DVI AND FID FIELDS OF THE NAM BLOCK
                                     0018   168 ;
            53         14 A7     DE  0018   169 	MOVAL	NAM$T_DVI(R7),R3		; ADDRESS FOR DVI AND FID
                          FFE1'  30  001C   170 	BSBW	RM$GETDVIFID			; GO FILL IN
                          FFDE'  30  001F   171 	BSBW	RM$DEACCESS			; AND NOW CAN DEACCESS THE FILE
            69            50     E9  0022   172 	BLBC	R0,ERR_R0			; BRANCH ON ERROR
                          FFD8'  30  0025   173 	BSBW	RM$CLS_CHKNAM			; GO VERIFY THE NAM BLK AGAIN
            60            50     E9  0028   174 	BLBC	R0,ERRNAM			; BRANCH ON ERROR
                                     002B   175 ;++
                                     002B   176 ;
                                     002B   177 ;  ALLOCATE SYMBIONT MESSAGE BUFFER ON STACK AND FILL IT IN
                                     002B   178 ;
                                     002B   179 ;--
                          00     DD  002B   180 	PUSHL	#0				; ASSUME NO DELETE OPTION
            5E         C0 AE     DE  002D   181 	MOVAL	-<<<2+16+16+6+6+20+1>+3-4>&^XFC>(SP),SP	; ALLOCATE REST OF BUFFER
            69            2B     E1  0031   182 	BBC	#IFB$V_DLT,(R9),10$		; BRANCH IF NO DELETE SUB-OPTION
                          04         0034       
         42 AE            01     90  0035   183 	MOVB	#SMO$K_DELETE,2+16+16+6+6+20(SP) ; SET DELETE OPTION
                                     0039   184 10$:
                                     0039   185 	ASSUME	NAM$T_DVI+16 EQ NAM$W_FID
                                     0039   186 	ASSUME 	NAM$W_FID+6 EQ NAM$W_DID
         14 A7            1C     28  0039   187 	MOVC3	#<16+6+6>,NAM$T_DVI(R7),2+16(SP) ; COPY DVI, FID, DID
                       12 AE         003D       
RM1CLOSE        SEQUENTIAL-SPECIFIC CLOSE                        21-AUG-1978 21:36:12   VAX-11 MACRO X0.3-11               Page   6
006             RM$CLOSE1  -  SEQ. SPECIFIC $CLOSE ROUTINE                                                                       (1)

                                     003F   189 ;
                                     003F   190 ;  GET FILE NAME, TYPE AND VERSION FROM RESULTANT NAME STRING, IF ANY
                                     003F   191 ;
                          63     94  003F   192 	CLRB	(R3)				; ASSUME NO FILE NAME
            54         04 A7     D0  0041   193 	MOVL	NAM$L_RSA(R7),R4		; GET RESULTANT NAME STRING ADDR
                          2A     13  0045   194 	BEQL	50$				; BRANCH IF NONE
            55         03 A7     9A  0047   195 	MOVZBL	NAM$B_RSL(R7),R5		; GET ITS LENGTH
                          24     13  004B   196 	BEQL	50$				; BRANCH IF ZERO
                                     004D   197 	IFNORD	R5,(R4),ERRRST,IFB$B_MODE(R9)	; BRANCH IF RSLT STRING NOT READABLE
            55         0A A9     0C  004D       		PROBER	IFB$B_MODE(R9),R5,(R4)
                          64         0051       
                          31     13  0052       		BEQL	ERRRST
            55         5D 8F     3A  0054   198 	LOCC	#^A/]/,R5,(R4)			; LOCATE END OF DIRECTORY SPEC
                          64         0058       
                          06     12  0059   199 	BNEQ	40$				; BRANCH IF FOUND
            55            3E     3A  005B   200 	LOCC	#^A/>/,R5,(R4)			; CHECK ALTERNATE TERMINATOR
                          64         005E       
                          24     13  005F   201 	BEQL	ERRRST				; BRANCH IF NEITHER
                          50     D7  0061   202 40$:	DECL	R0				; ADJ REMAINING COUNT ...
                          51     D6  0063   203 	INCL	R1				; ... SKIPPING OVER RIGHT BRACKET
            14            50     91  0065   204 	CMPB	R0,#20				; NAME, TYPE AND VERSION IN RANGE?
                          1B     1E  0068   205 	BGEQU	ERRRST				; BRANCH IF NOT
            83            50     90  006A   206 	MOVB	R0,(R3)+			; STORE FILENAME SIZE
            61            50     28  006D   207 	MOVC3	R0,(R1),(R3)			; AND COPY FILENAME
                          63         0070       
                                     0071   208 50$:
                                     0071   209 ;++
                                     0071   210 ;
                                     0071   211 ;  NOW SET THE SYMBIONT FUNCTION CODE AND TRANSLATE THE LOGICAL NAME
                                     0071   212 ;  SYS$PRINT OR SYS$BATCH BASED UPON WHETHER SCF IS CLEAR OR SET RESPECTIVELY
                                     0071   213 ;
                                     0071   214 ;--
            6E            08     B0  0071   215 	MOVW	#SMR$K_ENTER,(SP)		; SPECIFY 'ENTER' FUNCTION
                          7E     D4  0074   216 	CLRL	-(SP)				; RECEIVE EQUIV. STRING LEN HERE
                       07 AE     9F  0076   217 	PUSHAB	4+2+1(SP)			; ADDR OF EQUIV. STRING BUFFER
                          0F     DD  0079   218 	PUSHL	#15				; EQUIV. STRING BUFFER LEN
            69            2A     E0  007B   219 	BBS	#IFB$V_SCF,(R9),BATCH		; BRANCH IF SUBMIT COMMAND FILE
                          18         007E       
                     FF7D CF     9F  007F   220 	PUSHAB	SYSPRINT			; ADDR OF "SYS$PRINT" ASCII NAME
                          16     11  0083   221 	BRB	TRNLOG				; CONTINUE WITH TRANSLATION
RM1CLOSE        SEQUENTIAL-SPECIFIC CLOSE                        21-AUG-1978 21:36:12   VAX-11 MACRO X0.3-11               Page   7
006             RM$CLOSE1  -  SEQ. SPECIFIC $CLOSE ROUTINE                                                                       (1)

                                     0085   223 ;++
                                     0085   224 ;
                                     0085   225 ;  HANDLE ERROR CONDITIONS.
                                     0085   226 ;
                                     0085   227 ;  NOTE: THIS CODE IS PLACED HERE TO ALLOW SHORT BRANCHES TO IT.  TAKES
                                     0085   228 ;	 ADVANTAGE OF THE BREAK IN CONTROL FLOW.
                                     0085   229 ;
                                     0085   230 ;--
                                     0085   231 ERRRST:	$PSECT_BR	L$RMS1			; HANDLE BAD RESULTANT STRING
                          FF78'  31  0085       		BRW	L$RMS11
                                     0088       		.SAVE
                                 00000000       		.PSECT	L$RMS1,GBL,NOWRT
                                     0000       L$RMS11:
            50   00000000'8F     D0  0000   232 	MOVL	#RMS$_RST,R0			; STV ERROR CODE TO R0
            5E         44 AE     DE  0007   233 CLNSTK:	MOVAL	<<<2+16+16+6+6+20+1>+3>&^XFC>(SP),SP	; CLEAN STACK
                          0A     11  000B   234 	BRB	SETSTV				; GO SET STV FROM ERROR CODE
                                     000D   235 	$PSECT_RESTORE
                                 00000088       		.RESTORE
                                     0088   236 ;
                                     0088   237 ERRNAM1:	$PSECT_BR	L$RMS1
                          FF82'  31  0088       		BRW	L$RMS12
                                     008B       		.SAVE
                                 0000000D       		.PSECT	L$RMS1,GBL,NOWRT
                                     000D       L$RMS12:
                          FFF0'  30  000D   238 	BSBW	RM$DEACCESS			; DEACCESS THE FILE
                                     0010   239 	$PSECT_RESTORE				; AND FALL THRU
                                 0000008B       		.RESTORE
                                     008B   240 ;
                                     008B   241 ERRNAM:	$PSECT_BR	L$RMS1
                          FF82'  31  008B       		BRW	L$RMS13
                                     008E       		.SAVE
                                 00000010       		.PSECT	L$RMS1,GBL,NOWRT
                                     0010       L$RMS13:
            50   00000000'8F     D0  0010   242 	MOVL	#RMS$_NAM,R0			; BAD NAM BLK
                                     0017   243 	$PSECT_RESTORE				; AND FALL THRU
                                 0000008E       		.RESTORE
                                     008E   244 ;
                                     008E   245 ERR_R0:	$PSECT_BR	L$RMS1			; HANDLE LOG NAME ERROR
                          FF86'  31  008E       		BRW	L$RMS14
                                     0091       		.SAVE
                                 00000017       		.PSECT	L$RMS1,GBL,NOWRT
                                     0017       L$RMS14:
                                     0017   246 						; R0 HAS ERROR CODE, STACK CLEAN
         0C A8            50     D0  0017   247 SETSTV:	MOVL	R0,FAB$L_STV(R8)		; SECONDARY STATUS CODE TO STV
                                     001B   248 						; AND FALL THRU
                                     001B   249 	$PSECT_RESTORE
                                 00000091       		.RESTORE
                                     0091   250 ;
                                     0091   251 ERRSPL:	$PSECT_BR	L$RMS1			; HANDLE VALIDITY CHECK ERRORS
                          FF87'  31  0091       		BRW	L$RMS15
                                     0094       		.SAVE
                                 0000001B       		.PSECT	L$RMS1,GBL,NOWRT
                                     001B       L$RMS15:
                                     001B   252 	RMSERR	SPL,4(SP)			; STORE PRIMARY ERROR CODE
         04 AE       0000'8F     3C  001B       		MOVZWL	#<RMS$_SPL&^XFFFF>,4(SP)
                                 05  0021   253 	RSB					; AND BACK TO MAIN-LINE CLOSE
                                     0022   254 	$PSECT_RESTORE
RM1CLOSE        SEQUENTIAL-SPECIFIC CLOSE                        21-AUG-1978 21:36:12   VAX-11 MACRO X0.3-11               Page   8
006             RM$CLOSE1  -  SEQ. SPECIFIC $CLOSE ROUTINE                                                                       (1)

                                 00000094       		.RESTORE
                                     0094   255 ;
                          FF70'  31  0094   256 ERRTRN:	BRW	CLNSTK				; HANDLE LOG NAME XLATION ERROR
RM1CLOSE        SEQUENTIAL-SPECIFIC CLOSE                        21-AUG-1978 21:36:12   VAX-11 MACRO X0.3-11               Page   9
006             RM$CLOSE1  -  SEQ. SPECIFIC $CLOSE ROUTINE                                                                       (1)

                                     0097   258 ;++
                                     0097   259 ;
                                     0097   260 ;  CONTINUE WITH LOGICAL NAME TRANSLATION
                                     0097   261 ;
                                     0097   262 ;--
                     FF6E CF     9F  0097   263 BATCH:	PUSHAB	SYSBATCH			; ADDR OF SYS$BATCH ASCII STRING
                                     009B   264 TRNLOG:
                                     009B   265 	ASSUME	SYSPRINT_LEN EQ SYSBATCH_LEN
                          09     DD  009B   266 	PUSHL	#SYSBATCH_LEN			; SIZE OF LOGNAME TO TRANSLATE
            52            5E     D0  009D   267 	MOVL	SP,R2				; SAVE BASE ADDR OF LOGNAME AND
                                     00A0   268 						; EQUIV. STRING BUFFERS
                                     00A0   269 	$TRNLOG_S	LOGNAM=(R2),-
                                     00A0   270 			RSLLEN=16(R2),-
                                     00A0   271 			RSLBUF=8(R2)		; TRANSLATE 'SYS$PRINT' OR 'SYS$BATCH'
                          00     DD  00A0       		PUSHL	#0
                          00     DD  00A2       		PUSHL	#0
                          00     DD  00A4       		PUSHL	#0
                       08 A2     7F  00A6       		PUSHAQ	8(R2)
                       10 A2     3F  00A9       		PUSHAW	16(R2)
                          62     7F  00AC       		PUSHAQ	(R2)
   00000000'GF            06     FB  00AE       		CALLS	#6,G^SYS$TRNLOG
            5E            10     C0  00B5   272 	ADDL2	#16,SP				; 'POP' TRNLOG DESCRIPTORS
         02 AE            8E     F6  00B8   273 	CVTLB	(SP)+,2(SP)			; COPY EQUIV. STRING LEN
            D5            50     E9  00BC   274 	BLBC	R0,ERRTRN			; BRANCH ON ERROR
                                     00BF   275 ;++
                                     00BF   276 ;
                                     00BF   277 ;  BUILD MESSAGE DESCRIPTOR AND SEND REQUEST TO SYMBIONT MANAGER.
                                     00BF   278 ;
                                     00BF   279 ;--
                          6E     9F  00BF   280 	PUSHAB	(SP)				; BUFFER ADDRESS
            7E         43 8F     9A  00C1   281 	MOVZBL	#2+16+16+6+6+20+1,-(SP)		; BUFFER LEN
                                     00C5   282 
                           00000004  00C5   283 	MSGBUF_OFFSET=<SNDSMB$_NARGS*4>-SNDSMB$_MSGBUF
                                     00C5   284 	$SNDSMB_S	MSGBUF=MSGBUF_OFFSET(SP); SEND MESSAGE TO SYMBIONT
            7E            00     3C  00C5       		MOVZWL	#0,-(SP)
                       04 AE     7F  00C8       		PUSHAQ	MSGBUF_OFFSET(SP)
   00000000'GF            02     FB  00CB       		CALLS	#2,G^SYS$SNDSMB
            5E         4C AE     DE  00D2   285 	MOVAL	<8+<<2+16+16+6+6+20+1>+3>&^XFC>(SP),SP	; CLEAN STACK
            B5            50     E9  00D6   286 	BLBC	R0,ERR_R0			; BRANCH ON ERROR
                                 05  00D9   287 	RSB					; RETURN TO MAIN-LINE $CLOSE
                                     00DA   288 	$PSECT_RESTORE
                                 0000000D       		.RESTORE
                                     000D   289 
                                     000D   290 
                                     000D   291 	.END
RM1CLOSE        SEQUENTIAL-SPECIFIC CLOSE                        21-AUG-1978 21:36:12   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (1)

$$.PSECT_EP    = 00000006            DEV$V_SWL      = 00000019            FAB$M_DLT      = 00008000            
$$ARGS         = 00000002            DEV$V_TRM      = 00000002            FAB$M_DMO      = 00001000            
$$RMSTEST      = 0000001A            DEV$V_WCK      = 0000001F            FAB$M_ESC      = 08000000            
$$RMS_PBUGCHK  = 00000010            ERRNAM           0000008B R     04   FAB$M_EXE      = 00000080            
$$RMS_TBUGCHK  = 00000008            ERRNAM1          00000088 R     04   FAB$M_FTN      = 00000001            
$$RMS_UMODE    = 00000004            ERRRST           00000085 R     04   FAB$M_GET      = 00000002            
$$T1           = 0000000C            ERRSPL           00000091 R     04   FAB$M_INP      = 00080000            
BATCH            00000097 R     04   ERRTRN           00000094 R     04   FAB$M_JNL      = 00400000            
BIT...         = 00000071            ERR_R0           0000008E R     04   FAB$M_KFO      = 40000000            
CLNSTK           00000007 R     05   F$RMSCLOSEOPTN0  00000012 R     04   FAB$M_MSE      = 00000010            
DEV$M_ALL      = 00800000            FAB$B_BID        00000000            FAB$M_MXV      = 00000002            
DEV$M_AVL      = 00040000            FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            
DEV$M_CCL      = 00000002            FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            
DEV$M_DIR      = 00000008            FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            
DEV$M_DMT      = 00200000            FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            
DEV$M_ELG      = 00400000            FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            
DEV$M_FOD      = 00004000            FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            
DEV$M_FOR      = 01000000            FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            
DEV$M_GEN      = 00020000            FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            
DEV$M_IDV      = 04000000            FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            
DEV$M_MBX      = 00100000            FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            
DEV$M_MNT      = 00080000            FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            
DEV$M_NET      = 00002000            FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            
DEV$M_ODV      = 08000000            FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            
DEV$M_RCK      = 40000000            FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            
DEV$M_REC      = 00000001            FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            
DEV$M_RND      = 10000000            FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            
DEV$M_RTM      = 20000000            FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            
DEV$M_SDI      = 00000010            FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            
DEV$M_SHR      = 00010000            FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            
DEV$M_SPL      = 00000040            FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            
DEV$M_SQD      = 00000020            FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            
DEV$M_SWL      = 02000000            FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            
DEV$M_TRM      = 00000004            FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            
DEV$M_WCK      = 80000000            FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            
DEV$V_ALL      = 00000017            FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            
DEV$V_AVL      = 00000012            FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            
DEV$V_CCL      = 00000001            FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            
DEV$V_DIR      = 00000003            FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            
DEV$V_DMT      = 00000015            FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            
DEV$V_ELG      = 00000016            FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            
DEV$V_FOD      = 0000000E            FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            
DEV$V_FOR      = 00000018            FAB$L_MRN        00000038            FAB$S_ORG      = 00000004            
DEV$V_GEN      = 00000011            FAB$L_NAM        00000028            FAB$S_PPF_RAT  = 00000008            
DEV$V_IDV      = 0000001A            FAB$L_SDC        00000044            FAB$V_BIO      = 00000005            
DEV$V_MBX      = 00000014            FAB$L_STS        00000008            FAB$V_BLK      = 00000003            
DEV$V_MNT      = 00000013            FAB$L_STV        0000000C            FAB$V_BRO      = 00000006            
DEV$V_NET      = 0000000D            FAB$L_XAB        00000024            FAB$V_CBT      = 00000015            
DEV$V_ODV      = 0000001B            FAB$M_BIO      = 00000020            FAB$V_CIF      = 00000019            
DEV$V_RCK      = 0000001E            FAB$M_BLK      = 00000008            FAB$V_CR       = 00000001            
DEV$V_REC      = 00000000            FAB$M_BRO      = 00000040            FAB$V_CTG      = 00000014            
DEV$V_RND      = 0000001C            FAB$M_CBT      = 00200000            FAB$V_DEL      = 00000002            
DEV$V_RTM      = 0000001D            FAB$M_CIF      = 02000000            FAB$V_DFW      = 00000005            
DEV$V_SDI      = 00000004            FAB$M_CR       = 00000002            FAB$V_DLT      = 0000000F            
DEV$V_SHR      = 00000010            FAB$M_CTG      = 00100000            FAB$V_DMO      = 0000000C            
DEV$V_SPL      = 00000006            FAB$M_DEL      = 00000004            FAB$V_ESC      = 0000001B            
DEV$V_SQD      = 00000005            FAB$M_DFW      = 00000020            FAB$V_EXE      = 00000007            
RM1CLOSE        SEQUENTIAL-SPECIFIC CLOSE                        21-AUG-1978 21:36:12   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (1)

FAB$V_FTN      = 00000000            IFB$B_RAT        0000003D            IFB$V_BIO      = 00000005            
FAB$V_GET      = 00000001            IFB$B_RFMORG     0000003C            IFB$V_BRO      = 00000006            
FAB$V_INP      = 00000013            IFB$B_UBUFSZ     0000005B            IFB$V_BUSY     = 00000020            
FAB$V_JNL      = 00000016            IFB$C_BID      = 0000000B            IFB$V_CREATE   = 00000032            
FAB$V_KFO      = 0000001E            IFB$C_BLN        00000060            IFB$V_DAP      = 0000003E            
FAB$V_MSE      = 00000004            IFB$C_BLN_IDX    00000060            IFB$V_DAP_OPEN = 0000003D            
FAB$V_MXV      = 00000001            IFB$C_BLN_REL    00000060            IFB$V_DEL      = 00000002            
FAB$V_NAM      = 00000018            IFB$C_BLN_SEQ    0000005C            IFB$V_DFW      = 0000002C            
FAB$V_NEF      = 0000000A            IFB$C_DIR      = 00000003            IFB$V_DLT      = 0000002B            
FAB$V_NFS      = 00000010            IFB$C_FHAEND     00000050            IFB$V_DMO      = 00000028            
FAB$V_NIL      = 00000005            IFB$C_IDX      = 00000002            IFB$V_EOF      = 00000021            
FAB$V_OFP      = 0000001D            IFB$C_MAXORG   = 00000002            IFB$V_EXE      = 00000007            
FAB$V_ORG      = 00000004            IFB$C_REL      = 00000001            IFB$V_GET      = 00000001            
FAB$V_POS      = 00000008            IFB$C_SEQ      = 00000000            IFB$V_MSE      = 00000031            
FAB$V_PPF      = 00000012            IFB$K_BLN        00000060            IFB$V_NORECLK  = 00000033            
FAB$V_PPF_IND  = 0000000E            IFB$K_BLN_IDX    00000060            IFB$V_NSP      = 0000003F            
FAB$V_PPF_RAT  = 00000006            IFB$K_BLN_REL    00000060            IFB$V_NWA      = 0000003C            
FAB$V_PRN      = 00000002            IFB$K_BLN_SEQ    0000005C            IFB$V_ORG      = 00000004            
FAB$V_PUT      = 00000000            IFB$K_FHAEND     00000050            IFB$V_PPF_IMAGE= 00000022            
FAB$V_RCK      = 00000017            IFB$L_ARGLST     00000018            IFB$V_PPF_INPUT= 0000002E            
FAB$V_RWC      = 0000000B            IFB$L_ASBADDR    00000014            IFB$V_PUT      = 00000000            
FAB$V_RWO      = 00000007            IFB$L_AS_DEV     00000054            IFB$V_RFM      = 00000000            
FAB$V_SCF      = 0000000E            IFB$L_BDB_BLNK   00000034            IFB$V_RWC      = 00000027            
FAB$V_SHRDEL   = 00000002            IFB$L_BDB_FLNK   00000030            IFB$V_RW_ATTR  = 00000034            
FAB$V_SHRGET   = 00000001            IFB$L_BKPBITS    00000004            IFB$V_SCF      = 0000002A            
FAB$V_SHRPUT   = 00000000            IFB$L_BWB        0000000C            IFB$V_SPL      = 00000029            
FAB$V_SHRUPD   = 00000003            IFB$L_DVBN       00000058            IFB$V_SQO      = 0000002D            
FAB$V_SPL      = 0000000D            IFB$L_EBK        00000044            IFB$V_TEF      = 00000036            
FAB$V_SQO      = 00000006            IFB$L_FRB_PTR    00000028            IFB$V_TMP      = 00000035            
FAB$V_SUP      = 00000002            IFB$L_FWA_BDB    00000050            IFB$V_TRN      = 00000004            
FAB$V_TEF      = 0000001C            IFB$L_HBK        00000040            IFB$V_UPD      = 00000003            
FAB$V_TMD      = 00000004            IFB$L_IDX_PTR    00000054            IFB$V_WRTACC   = 00000030            
FAB$V_TMP      = 00000003            IFB$L_IOS        0000000C            IFB$W_ASDEVBSIZ  0000005A            
FAB$V_TRN      = 00000004            IFB$L_IOS4       00000010            IFB$W_BKS_BYTES  0000005C            
FAB$V_UFM      = 0000001A            IFB$L_IRAB_LNK   0000001C            IFB$W_BKS_RECS   0000005E            
FAB$V_UFO      = 00000011            IFB$L_LAST_FAB   00000024            IFB$W_CHNL       00000020            
FAB$V_UPD      = 00000003            IFB$L_LOCK_BDB   00000050            IFB$W_DEQ        0000004E            
FAB$V_UPI      = 00000006            IFB$L_MRN        00000054            IFB$W_DEVBUFSIZ  00000038            
FAB$V_WCK      = 00000009            IFB$L_NRP_LNK    00000050            IFB$W_EBK0       00000044            
FAB$W_BLS        0000003C            IFB$L_NWA_PTR    00000028            IFB$W_EBK2       00000046            
FAB$W_DEQ        00000014            IFB$L_PRIM_DEV   00000000            IFB$W_FFB        00000048            
FAB$W_IFI        00000002            IFB$L_RLB_LNK    0000002C            IFB$W_IOS2       0000000E            
FAB$W_MRS        00000036            IFB$L_RNS_LEN    00000050            IFB$W_LRL        0000003E            
GBL...         = 00000000            IFB$M_BIO      = 00000020            IFB$W_MRS        0000004C            
IFB$B_AMAX       00000059            IFB$M_BRO      = 00000040            IFB$W_RTDEQ      0000003A            
IFB$B_AVBN       00000058            IFB$M_DEL      = 00000004            L$RMS11          00000000 R     05   
IFB$B_BID        00000008            IFB$M_EXE      = 00000080            L$RMS12          0000000D R     05   
IFB$B_BKS        0000004A            IFB$M_GET      = 00000002            L$RMS13          00000010 R     05   
IFB$B_BLN        00000009            IFB$M_PUT      = 00000001            L$RMS14          00000017 R     05   
IFB$B_EFN        0000000B            IFB$M_TRN      = 00000010            L$RMS15          0000001B R     05   
IFB$B_EXTRABUF   0000005D            IFB$M_UPD      = 00000008            MSGBUF_OFFSET  = 00000004            
IFB$B_FAC        00000022            IFB$S_ORG      = 00000004            NAM$B_BID        00000000            
IFB$B_FSZ        0000004B            IFB$S_RFM      = 00000004            NAM$B_BLN        00000001            
IFB$B_KBUFSZ     0000005C            IFB$V_ACCESSED = 00000025            NAM$B_CURLVL     00000038            
IFB$B_MODE       0000000A            IFB$V_ANSI_D   = 00000026            NAM$B_ESL        0000000B            
IFB$B_NUM_KEYS   0000005A            IFB$V_ASYNC    = 00000023            NAM$B_ESS        0000000A            
IFB$B_ORGCASE    00000023            IFB$V_ASYNCWAIT= 00000024            NAM$B_RSL        00000003            
RM1CLOSE        SEQUENTIAL-SPECIFIC CLOSE                        21-AUG-1978 21:36:12   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (1)

NAM$B_RSS        00000002            NAM$V_NODE     = 00000011            SMO$K_NODEFBRST= 00000047            
NAM$C_BID      = 00000002            NAM$V_PPF      = 00000010            SMO$K_NODEFFLAG= 00000049            
NAM$C_BLN        00000038            NAM$V_QUOTED   = 00000012            SMO$K_NOFEED   = 00000008            
NAM$C_BLN_DIRWC  00000050            NAM$V_WILDCARD = 00000008            SMO$K_NOFLAGPAG= 00000005            
NAM$C_DVI      = 00000010            NAM$V_WILD_DIR = 00000014            SMO$K_NOGENDEV = 00000045            
NAM$C_MAXRSS   = 00000080            NAM$V_WILD_GRP = 00000018            SMO$K_NOGENPRT = 00000042            
NAM$C_MAXRSSLCL= 00000060            NAM$V_WILD_MBR = 00000019            SMO$K_NOLOWER  = 00000028            
NAM$K_BLN        00000038            NAM$V_WILD_NAME= 00000005            SMO$K_NOTRMDEV = 0000004B            
NAM$K_BLN_DIRWC  00000050            NAM$V_WILD_SFD1= 00000019            SMO$K_PAGCNT   = 00000009            
NAM$L_DIRWCC1    00000040            NAM$V_WILD_SFD2= 0000001A            SMO$K_PAGHDR   = 00000006            
NAM$L_DIRWCC2    00000044            NAM$V_WILD_SFD3= 0000001B            SMO$K_PARAMS   = 00000026            
NAM$L_DIRWCC3    00000048            NAM$V_WILD_SFD4= 0000001C            SMO$K_REQUEUE  = 00000070            
NAM$L_DIRWCC4    0000004C            NAM$V_WILD_SFD5= 0000001D            SMO$K_RLSTIM   = 00000020            
NAM$L_DWC        00000038            NAM$V_WILD_SFD6= 0000001E            SMO$K_SPCCNT   = 00000062            
NAM$L_ESA        0000000C            NAM$V_WILD_SFD7= 0000001F            SMO$K_TOPOFILE = 00000061            
NAM$L_FNB        00000034            NAM$V_WILD_TYPE= 00000004            SMO$K_TRMDEV   = 0000004A            
NAM$L_RLF        00000010            NAM$V_WILD_UFD = 00000018            SMR$K_ABORT    = 0000000E            
NAM$L_RSA        00000004            NAM$V_WILD_VER = 00000003            SMR$K_ADDFIL   = 0000000A            
NAM$L_WCC        00000030            NAM$W_DID        0000002A            SMR$K_ALTER    = 0000000D            
NAM$M_DIR_LVLS = 00E00000            NAM$W_DID_NUM    0000002A            SMR$K_CLSJOB   = 0000000B            
NAM$M_EXP_DEV  = 00000080            NAM$W_DID_RVN    0000002E            SMR$K_CREJOB   = 00000009            
NAM$M_EXP_DIR  = 00000040            NAM$W_DID_SEQ    0000002C            SMR$K_DELETE   = 00000001            
NAM$M_EXP_NAME = 00000004            NAM$W_FID        00000024            SMR$K_DETINIT  = 00000010            
NAM$M_EXP_TYPE = 00000002            NAM$W_FID_NUM    00000024            SMR$K_ENTER    = 00000008            
NAM$M_EXP_VER  = 00000001            NAM$W_FID_RVN    00000028            SMR$K_INITIAL  = 00000000            
NAM$M_GRP_MBR  = 00080000            NAM$W_FID_SEQ    00000026            SMR$K_JUSTIFY  = 00000006            
NAM$M_HIGHVER  = 00008000            NAM$W_PRV_DID    0000003A            SMR$K_MERGE    = 00000004            
NAM$M_LOWVER   = 00004000            RM$CLOSE1        00000000 RG    02   SMR$K_PAUSE    = 00000003            
NAM$M_NODE     = 00020000            RM$CLS_CHKNAM    ********   X   04   SMR$K_REDIRECT = 00000005            
NAM$M_PPF      = 00010000            RM$DEACCESS      ********   X   02   SMR$K_RELEASE  = 0000000F            
NAM$M_QUOTED   = 00040000            RM$GETDVIFID     ********   X   04   SMR$K_RMVJOB   = 0000000C            
NAM$M_WILDCARD = 00000100            RMS$_NAM         ********   X   05   SMR$K_START    = 00000002            
NAM$M_WILD_DIR = 00100000            RMS$_RST         ********   X   05   SMR$K_STOP     = 00000007            
NAM$M_WILD_GRP = 01000000            RMS$_SPL         ********   X   05   SMR$K_SYNCJOB  = 00000011            
NAM$M_WILD_MBR = 02000000            SETSTV           00000017 R     05   SNDSMB$_CHAN   = 00000008            
NAM$M_WILD_NAME= 00000020            SMO$K_BRSTPAG  = 00000002            SNDSMB$_MSGBUF = 00000004            
NAM$M_WILD_SFD1= 02000000            SMO$K_COPIES   = 0000000A            SNDSMB$_NARGS  = 00000002            
NAM$M_WILD_SFD2= 04000000            SMO$K_CURFORM  = 00000040            SPOOL            0000000A R     02   
NAM$M_WILD_SFD3= 08000000            SMO$K_DEFBRST  = 00000046            SYS$SNDSMB       ********   X   04   
NAM$M_WILD_SFD4= 10000000            SMO$K_DEFFLAG  = 00000048            SYS$TRNLOG       ********   X   04   
NAM$M_WILD_SFD5= 20000000            SMO$K_DELETE   = 00000001            SYSBATCH         00000009 R     04   
NAM$M_WILD_SFD6= 40000000            SMO$K_DETJOB   = 00000043            SYSBATCH_LEN   = 00000009            
NAM$M_WILD_SFD7= 80000000            SMO$K_DISWAP   = 0000004E            SYSPRINT         00000000 R     04   
NAM$M_WILD_TYPE= 00000010            SMO$K_DOUBLE   = 00000007            SYSPRINT_LEN   = 00000009            
NAM$M_WILD_UFD = 01000000            SMO$K_FLAGPAG  = 00000004            TRNLOG           0000009B R     04   
NAM$M_WILD_VER = 00000008            SMO$K_FORMTYPE = 00000024            
NAM$S_DIR_LVLS = 00000003            SMO$K_GENDEV   = 00000044            
NAM$T_DVI        00000014            SMO$K_GENPRT   = 00000041            
NAM$V_DIR_LVLS = 00000015            SMO$K_HOLD     = 00000021            
NAM$V_EXP_DEV  = 00000007            SMO$K_INIPRI   = 0000004D            
NAM$V_EXP_DIR  = 00000006            SMO$K_JOBCOPY  = 00000023            
NAM$V_EXP_NAME = 00000002            SMO$K_JOBLIM   = 0000004C            
NAM$V_EXP_TYPE = 00000001            SMO$K_JOBNAME  = 00000027            
NAM$V_EXP_VER  = 00000000            SMO$K_JOBPRI   = 00000022            
NAM$V_GRP_MBR  = 00000013            SMO$K_LOWER    = 00000025            
NAM$V_HIGHVER  = 0000000F            SMO$K_NEXTJOB  = 00000060            
NAM$V_LOWVER   = 0000000E            SMO$K_NOBRSTPAG= 00000003            
RM1CLOSE        SEQUENTIAL-SPECIFIC CLOSE                        21-AUG-1978 21:36:12   VAX-11 MACRO X0.3-11               Page  13
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
F$RMSCLOSE1      0000000D      02     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  
$ABS$            00000060      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
F$RMSCLOSEOPTN   000000DA      04     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  
L$RMS1           00000022      05     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
12862. BYTES LEFT IN FREE MEMORY POOL.
1020. BYTES OF RECLAIMED MEMORY.
OBJ$:RM1CLOSE,LIS$:RM1CLOSE/-SP=EXECML$/ML,LIB$:R/ML,SRC$:RM1CLOSE
40 MLB DIR RDS - 725 GETS TO DEFINE 27 MACROS. 61 INTER. FILE WRITES. 
