RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      41  DECLARATIONS
   (1)      73  RM$ACCESS  -  PERFORM FCP ACCESS FUNCTION
   (1)     233  RM$CREACC_SET  -  PERFORM FCP CREATE AND ACCESS
   (1)     417  RM$DEACCESS  -  PERFORM FCP DEACCESS FUNCTION
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page   1
030                                                                                                                              (1)

                                     0000     1 	$BEGIN	RM0ACCESS,030,F$RMSOPEN0,<FILE ACCESS/DEACCESS ROUTINES>
                                     0000     2 ;
                                     0000     3 ; COPYRIGHT (C) 1977, 1978
                                     0000     4 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     5 ;
                                     0000     6 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     7 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000     8 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000     9 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    10 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    11 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    12 ; REMAIN IN DEC.
                                     0000    13 ;
                                     0000    14 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    15 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    16 ; CORPORATION.
                                     0000    17 ;
                                     0000    18 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    19 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    20 ;
                                     0000    21 ;++
                                     0000    22 ; FACILITY: RMS32
                                     0000    23 ;
                                     0000    24 ; ABSTRACT:
                                     0000    25 ;	THIS MODULE PERFORMS THE FILE ACCESS AND
                                     0000    26 ;	DE-ACCESS FCP FUNCTIONS.
                                     0000    27 ;
                                     0000    28 ; ENVIRONMENT:
                                     0000    29 ;		STAR PROCESSOR RUNNING STARLET EXEC.
                                     0000    30 ;
                                     0000    31 ; AUTHOR: L F LAVERDURE,	 CREATION DATE: 10-MAR-77
                                     0000    32 ;
                                     0000    33 ; MODIFIED BY:
                                     0000    34 ;
                                     0000    35 ;	L F LAVERDURE,      11-AUG-78  17:19	; SET FIB$V_PRSRV_ATR BIT FOR MT
                                     0000    36 ;	L F LAVERDURE,   13-JUL-78  16:16
                                     0000    37 ;	J A KRYCKA,	 19-AUG-78  08:40
                                     0000    38 ; 01	- 
                                     0000    39 ;--
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page   2
030             DECLARATIONS                                                                                                     (1)

                                     0000    41 	.SBTTL	DECLARATIONS
                                     0000    42 ;
                                     0000    43 ; INCLUDE FILES:
                                     0000    44 ;
                                     0000    45 
                                     0000    46 ;
                                     0000    47 ; MACROS:
                                     0000    48 ;
                                     0000    49 	$FABDEF
                                     0000    50 	$FWADEF
                                     0000    51 	$IFBDEF
                                     0000    52 	$FIBDEF
                                     0000    53 	$FHDDEF
                                     0000    54 	$ATRDEF
                                     0000    55 	$IODEF
                                     0000    56 	$PSLDEF
                                     0000    57 	$DEVDEF
                                     0000    58 	$XABPRODEF
                                     0000    59 	$XABRDTDEF
                                     0000    60 	$IMPDEF
                                     0000    61 	.LIST MEB
                                     0000    62 
                                     0000    63 ;
                                     0000    64 ; EQUATED SYMBOLS:
                                     0000    65 ;
                           00000020  0000    66 	FOP=FAB$L_FOP*8
                                     0000    67 
                                     0000    68 ;
                                     0000    69 ; OWN STORAGE:
                                     0000    70 ;
                                     0000    71 
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page   3
030             RM$ACCESS  -  PERFORM FCP ACCESS FUNCTION                                                                        (1)

                                     0000    73 	.SBTTL RM$ACCESS  -  PERFORM FCP ACCESS FUNCTION
                                     0000    74 ;++
                                     0000    75 ; FUNCTIONAL DESCRIPTION:
                                     0000    76 ;
                                     0000    77 ; THIS ROUTINE SETS UP THE ACCESS CONTROL WORD OF THE FIB
                                     0000    78 ; FROM THE VARIOUS USER SPECIFICATIONS, BUILDS THE
                                     0000    79 ; ATTRIBUTE LIST TO READ IN THE RECORD ATTRIBUTES AND
                                     0000    80 ; STATISTICS BLOCK, BUILDS THE QIO PARAMETER LIST ON
                                     0000    81 ; THE STACK USING THE FILENAME DESCRIPTOR, ISSUES
                                     0000    82 ; THE QIO TO THE ACP TO PERFORM THE ACCESS,
                                     0000    83 ; AND FINALLY INITIALIZES THE EBK AND HBK FIELDS OF
                                     0000    84 ; THE IFAB.
                                     0000    85 ;
                                     0000    86 ; CALLING SEQUENCE:
                                     0000    87 ;
                                     0000    88 ;	BSBW	RM$ACCESS
                                     0000    89 ;
                                     0000    90 ; INPUT PARAMETERS:
                                     0000    91 ;
                                     0000    92 ;	R11	IMPURE AREA ADDRESS
                                     0000    93 ;	R10	FWA ADDRESS
                                     0000    94 ;	R9	IFAB ADDRESSS
                                     0000    95 ;	R8	FAB ADDRESS
                                     0000    96 ;
                                     0000    97 ; IMPLICIT INPUTS:
                                     0000    98 ;
                                     0000    99 ;	FWA$T_FIBBUF (FID & DID SET AS REQUIRED, REMAINDER ZERO)
                                     0000   100 ;	IFB$V_WRTACC
                                     0000   101 ;	IFB$B_FAC
                                     0000   102 ;	FAB$L_FOP
                                     0000   103 ;	IFB$L_CHNL
                                     0000   104 ;	FWA$L_ATRLADR
                                     0000   105 ;	FWA$Q_NAME
                                     0000   106 ;
                                     0000   107 ; OUTPUT PARAMETERS:
                                     0000   108 ;
                                     0000   109 ;	R0	STATUS CODE
                                     0000   110 ;	R6	FIB ADDRESS (IN FWA)
                                     0000   111 ;	R1-R5,AP DESTROYED
                                     0000   112 ;
                                     0000   113 ;
                                     0000   114 ; IMPLICIT OUTPUTS:
                                     0000   115 ;
                                     0000   116 ;	IFB$V_ACCESSED SET
                                     0000   117 ;	THE RECORD ATTRIBUTES AREA OF THE IFAB IS INITIALIZED
                                     0000   118 ;	THE RECORD STRING IS SET (FWA$Q_RNS) OVER-WRITING
                                     0000   119 ;		THE FILENAME STRING
                                     0000   120 ;	IFB$L_IOS
                                     0000   121 ;	FAB$V_CTG SET IF FILE CONTIGUOUS, ELSE CLEARED
                                     0000   122 ;	FAB$L_STV SET TO SYSTEM ERROR CODE ON FAILURE
                                     0000   123 ;
                                     0000   124 ; COMPLETION CODES:
                                     0000   125 ;
                                     0000   126 ;	STANDARD RMS INCLUDING SUC, FNF, RER, WER, FLK, PRV,
                                     0000   127 ;	AND ACC.
                                     0000   128 ;
                                     0000   129 ; SIDE EFFECTS:
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page   4
030             RM$ACCESS  -  PERFORM FCP ACCESS FUNCTION                                                                        (1)

                                     0000   130 ;
                                     0000   131 ;	MAY HAVE SWITCHED TO RUNNING AT AST LEVEL.
                                     0000   132 ;	ALL USER STRUCTURES EXCEPT FAB MUST BE REPROBED.
                                     0000   133 ;--
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page   5
030             RM$ACCESS  -  PERFORM FCP ACCESS FUNCTION                                                                        (1)

                                     0000   135 RM$ACCESS::
                                     0000   136 	$TSTPT	ACCESS
                 00000200'9F     D6  0000       		INCL	@#PIO$GL_FMLH+512+TPT$L_ACCESS
            69            03     E0  0006   137 	BBS	#DEV$V_DIR,IFB$L_PRIM_DEV(R9),RMACC ; BRANCH IF FILES-ORIENTED
                          0F         0009       
            6A            19     E0  000A   138 	BBS	#FWA$V_NODE,(R10),NTACC		; BRANCH IF NETWORK FUNCTION
                          08         000D       
                                     000E   139 	SSB	#IFB$V_NORECLK,(R9)		; SAY NO RECORD LOCKING NEEDED
            69            33     E2  000E       		BBSS	#IFB$V_NORECLK,(R9),30000$
                          00         0011       
                                     0012       30000$:
                                     0012   140 	RMSSUC					; SHOW SUCCESS
            50            01     D0  0012       		MOVL	#1,R0
                                 05  0015   141 	RSB					; RETURN TO CALLER
                                     0016   142 ;++
                                     0016   143 ;
                                     0016   144 ;  PERFORM NETWORK ACCESS FUNCTION
                                     0016   145 ;
                                     0016   146 ;--
                                     0016   147 NTACC:	$PSECT_BR	NF$NETWORK
                          FFE7'  31  0016       		BRW	NF$NETWORK0
                                     0019       		.SAVE
                                 00000000       		.PSECT	NF$NETWORK,GBL,NOWRT
                                     0000       NF$NETWORK0:
                          FFFD'  30  0000   148 	BSBW	NT$ACCESS			; ESTABLISH LOGICAL LINK WITH FAL
            08            50     E9  0003   149 	BLBC	R0,10$				; BRANCH ON FAILURE
                                     0006   150 	SSB	#IFB$V_NORECLK,(R9)		; SAY NO RECORD LOCKING NEEDED
            69            33     E2  0006       		BBSS	#IFB$V_NORECLK,(R9),30001$
                          00         0009       
                                     000A       30001$:
                                     000A   151 	RMSSUC					; SHOW SUCCESS
            50            01     D0  000A       		MOVL	#1,R0
                                 05  000D   152 	RSB					; RETURN TO CALLER
                          0073'  31  000E   153 10$:	BRW	ERRACCESS			; BRANCH AID
                                     0011   154 	$PSECT_RESTORE
                                 00000019       		.RESTORE
                                     0019   155 
                          6C     10  0019   156 RMACC:	BSBB	RM$CREACC_SET1			; PERFORM FIRST PART OF SETUPS
                          FFE2'  30  001B   157 	BSBW	RM$OPEN_XAB			; GO PROCESS RMS OPEN XABS
            62            50     E9  001E   158 	BLBC	R0,EXIT				; EXIT IF PROBLEMS
                          0108   30  0021   159 	BSBW	RM$CREACC_SET2			; FINISH SETUPS
                                     0024   160 ;
                                     0024   161 ; SET THE QIO FUNCTION CODE AND GO ACCESS THE FILE
                                     0024   162 ;
            50         72 8F     9A  0024   163 10$:	MOVZBL	#IO$_ACCESS!IO$M_ACCESS,R0	; FUNCTION CODE
                          FFD5'  30  0028   164 	BSBW	RM$FCPFNC			; DO THE ACCESS
            56            50     E9  002B   165 	BLBC	R0,ERRACCESS			; BRANCH ON FAILURE
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page   6
030             RM$ACCESS  -  PERFORM FCP ACCESS FUNCTION                                                                        (1)

                                     002E   167 ;++
                                     002E   168 ;
                                     002E   169 ; CHECK THE FILE FOR CONTIGUOUS AND IF SO SET THE CTG BIT IN FOP,
                                     002E   170 ; THEN PICK UP HIGHEST ALLOCATED VBN FROM THE STATISTICS BLOCK
                                     002E   171 ; AND COPY TO IFAB, OVERWRITING THE HI VBN FIELD OF
                                     002E   172 ; THE RECORD ATTRIBUTES. NOTE THAT THE HI-AND LO-ORDER WORDS OF THIS VBN
                                     002E   173 ; ARE REVERSED ON DISK AND HENCE ARE READ IN REVERSE ORDER.
                                     002E   174 ; REARRANGE TO GIVE AN UNDERSTANDABLE LONGWORD HI VBN. DO SAME FOR
                                     002E   175 ; EOF VBN.
                                     002E   176 ;
                                     002E   177 ;  ENTRY POINT FOR "CREATE IF" TURNED INTO AN OPEN
                                     002E   178 ;
                                     002E   179 ;
                                     002E   180 ;  SET FOP OUTPUT BITS ACCORDING TO FILE ATTRIBUTES
                                     002E   181 ;
                                     002E   182 ;--
                                     002E   183 RM$SETHBK::
            04            04     EF  002E   184 	EXTZV	#IFB$V_ORG,#IFB$S_ORG,IFB$B_RFMORG(R9),R1 ;GET ORG
            51         3C A9         0031       
         23 A9            51     90  0034   185 	MOVB	R1,IFB$B_ORGCASE(R9)			  ;INTO SEPARATE IFAB BYTE
                                 CA  0038   186 	BICL2	#<FAB$M_CTG!FAB$M_CBT!FAB$M_RCK!FAB$M_WCK>,-
         04 A8   00B00200 8F         0039   187 		FAB$L_FOP(R8)				; CLEAR FOP OUTPUT BITS
         2C AA            07     E1  0040   188 	BBC	#FHD$V_CONTIG,FWA$W_UCHAR(R10),10$	; BRANCH IF FILE NOT CTG.
                          04         0044       
                                     0045   189 	SSB	#FAB$V_CTG+FOP,(R8)			; SET THE CTG BIT
            68            34     E2  0045       		BBSS	#FAB$V_CTG+FOP,(R8),30002$
                          00         0048       
                                     0049       30002$:
         2C AA            05     E1  0049   190 10$:	BBC	#FHD$V_CONTIGB,FWA$W_UCHAR(R10),20$	; BRANCH IF NOT CTG BEST TRY
                          04         004D       
                                     004E   191 	SSB	#FAB$V_CBT+FOP,(R8)			; SET CTG BEST TRY IN FOP
            68            35     E2  004E       		BBSS	#FAB$V_CBT+FOP,(R8),30003$
                          00         0051       
                                     0052       30003$:
         2C AA            03     E1  0052   192 20$:	BBC	#FHD$V_READCHECK,FWA$W_UCHAR(R10),30$	; BRANCH IF NO READ CHECKING
                          04         0056       
                                     0057   193 	SSB	#FAB$V_RCK+FOP,(R8)			; SET FOP RCK BIT
            68            37     E2  0057       		BBSS	#FAB$V_RCK+FOP,(R8),30004$
                          00         005A       
                                     005B       30004$:
         2C AA            04     E1  005B   194 30$:	BBC	#FHD$V_WRITCHECK,FWA$W_UCHAR(R10),40$	; BRANCH IF NO WRITE CHECKING
                          04         005F       
                                     0060   195 	SSB	#FAB$V_WCK+FOP,(R8)			; SET FOP WCK BIT
            68            29     E2  0060       		BBSS	#FAB$V_WCK+FOP,(R8),30005$
                          00         0063       
                                     0064       30005$:
                                     0064   196 40$:
       0098 CA            10     9C  0064   197 	ROTL	#16,FWA$L_HBK(R10),IFB$L_HBK(R9)	; SWAP WORDS OF HBK
                       40 A9         0069       
                                     006B   198 ;
                                     006B   199 ;  FINISH UP XAB PROCESSING
                                     006B   200 ;
                          FF92'  30  006B   201 	BSBW	RM$OPEN_XAB1				; FINISH UP XAB PROCESSING
                                     006E   202 
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page   7
030             RM$ACCESS  -  PERFORM FCP ACCESS FUNCTION                                                                        (1)

                                     006E   204 ;++
                                     006E   205 ;
                                     006E   206 ;  ENTRY POINT TO SWAP THE WORDS OF EOF BLOCK AND
                                     006E   207 ;  SET IFAB BOOKEEPING BIT SAYING FILE ACCESSED
                                     006E   208 ;
                                     006E   209 ;--
                                     006E   210 RM$SETEBK::
                                     006E   211 	SSB	#IFB$V_ACCESSED,(R9)		; DECLARE FILE ACCESSED
            69            25     E2  006E       		BBSS	#IFB$V_ACCESSED,(R9),30006$
                          00         0071       
                                     0072       30006$:
         44 A9            10     9C  0072   212 	ROTL	#16,IFB$L_EBK(R9),IFB$L_EBK(R9) ; SWAP WORDS OF EBK
                       44 A9         0076       
                                     0078   213 	ASSUME	FAB$C_SEQ EQ 0
                       23 A9     95  0078   214 	TSTB	IFB$B_ORGCASE(R9)		; SEQUENTIAL FILE ORG?
                          06     13  007B   215 	BEQL	EXIT				; BRANCH IF YES (ALL SET)
            01         40 A9     C1  007D   216 	ADDL3	IFB$L_HBK(R9),#1,IFB$L_EBK(R9)	; SET EBK FROM HBK
                       44 A9         0081       
                                     0083   217 						; (NOTE: FOR RELATIVE WILL BE
                                     0083   218 						;  SET FROM PROLOG)
                                 05  0083   219 EXIT:	RSB					; RETURN TO CALLER
                                     0084   220 
                                     0084   221 ;++
                                     0084   222 ;
                                     0084   223 ;  HANDLE ACCESS FAILURE
                                     0084   224 ;
                                     0084   225 ;--
                                     0084   226 ERRACCESS:
                                     0084   227 	$PSECT_BR	L$RMS0
                          FF79'  31  0084       		BRW	L$RMS01
                                     0087       		.SAVE
                                 00000000       		.PSECT	L$RMS0,GBL,NOWRT
                                     0000       L$RMS01:
                                     0000   228 	RMSERR	ACC,R1				; DEFAULT ERROR CODE
            51       0000'8F     3C  0000       		MOVZWL	#<RMS$_ACC&^XFFFF>,R1
                          FFF8'  31  0005   229 	BRW	RM$MAPERR			; GO MAP ERROR CODE TO RMS
                                     0008   230 						; AND RETURN TO CALLER
                                     0008   231 	$PSECT_RESTORE
                                 00000087       		.RESTORE
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page   8
030             RM$CREACC_SET  -  PERFORM FCP CREATE AND ACCESS                                                                  (1)

                                     0087   233 	.SBTTL	RM$CREACC_SET  -  PERFORM FCP CREATE AND ACCESS SETUPS
                                     0087   234 ;++
                                     0087   235 ;
                                     0087   236 ;  THIS SUBROUTINE INITIALIZES THE ACCESS CONTROL WORD OF THE FIB FROM
                                     0087   237 ;  THE VARIOUS FOP OPTIONS, SETS THE RETRIEVAL WINDOW SIZE, AND INITIALIZES
                                     0087   238 ;  R5 TO ADDRESS AT WHICH TO BUILD A FILES ATTRIBUTES LIST
                                     0087   239 ;
                                     0087   240 ;  INPUTS:
                                     0087   241 ;	R10	FWA ADDRESS
                                     0087   242 ;	R9	IFAB ADDRESS
                                     0087   243 ;	R8	FAB ADDRESS
                                     0087   244 ;
                                     0087   245 ;  OUTPUTS:
                                     0087   246 ;	R6	FIB ADDRESS
                                     0087   247 ;	R5	ADDRESS FOR NEXT ENTRY TO BE ADDED TO ATTRIBUTE'S LIST
                                     0087   248 ;	R0	DESTROYED
                                     0087   249 ;
                                     0087   250 ;--
                                     0087   251 RM$CREACC_SET1::
            56         10 BA     9E  0087   252 	MOVAB	@FWA$Q_FIB+4(R10),R6		; GET FIB ADDRESS
                                     008B   253 ;
                                     008B   254 ; INITIALIZE THE ACCESS CONTROL WORD.  IT IS ZERO; SET DESIRED BITS.
                                     008B   255 ;
                                     008B   256 	ASSUME	FIB$L_ACCTL EQ 0
            69            30     E1  008B   257 	BBC	#IFB$V_WRTACC,(R9),5$		; BRANCH IF READ ACCESS ONLY
                          04         008E       
                                     008F   258 	SSB	#FIB$V_WRITE,(R6)		; SET WRITE ACCESS BIT
            66            08     E2  008F       		BBSS	#FIB$V_WRITE,(R6),30007$
                          00         0092       
                                     0093       30007$:
                                     0093   259 ;
                                     0093   260 ;  SET SHARING AS DESIRED AND DETERMINE WHETHER RECORD LOCKING REQUIRED.
                                     0093   261 ;
                                     0093   262 ;  RECORD LOCKING WILL BE REQUIRED IF THERE IS ANY FORM OF SHARING (INTER
                                     0093   263 ;  OR INTRA PROCESS) AND THERE CAN BE ANY WRITERS OF THE FILE.
                                     0093   264 ;
            50         17 A8     90  0093   265 5$:	MOVB	FAB$B_SHR(R8),R0		; GET SHR FIELD
            50            04     E1  0097   266 	BBC	#FAB$V_MSE,R0,10$		; BRANCH IF NO MULTI-STREAMS
                          04         009A       
                                     009B   267 	SSB	#IFB$V_MSE,(R9)			; SET MSE BIT
            69            31     E2  009B       		BBSS	#IFB$V_MSE,(R9),30008$
                          00         009E       
                                     009F       30008$:
            50            05     E0  009F   268 10$:	BBS	#FAB$V_NIL,R0,20$		; BRANCH IF NO SHARING
                          10         00A2       
            50            0D     93  00A3   269 	BITB	#FAB$M_PUT!FAB$M_UPD!FAB$M_DEL,R0 ; ANY FORM OF WRITE SHARING?
                          1B     12  00A6   270 	BNEQ	30$				; BRANCH IF YES
            66            01     88  00A8   271 	BISB2	#FIB$M_NOWRITE,(R6)		; DISALLOW OTHER WRITERS
                                     00AB   272 						; AT MOST "GET" SHARING
            69            30     E1  00AB   273 	BBC	#IFB$V_WRTACC,(R9),25$		; BRANCH IF NOT WRITE ACCESSED
                          10         00AE       
            50            01     E0  00AF   274 	BBS	#FAB$V_GET,R0,30$		; BRANCH IF ALLOWING OTHER READERS
                          10         00B2       
                                     00B3   275 						; DEFAULT WRITE ACCESSOR TO NIL
                                     00B3   276 20$:	SSB	#FIB$V_NOREAD,(R6)		; DISALLOW OTHER READERS
            66            0A     E2  00B3       		BBSS	#FIB$V_NOREAD,(R6),30009$
                          00         00B6       
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page   9
030             RM$CREACC_SET  -  PERFORM FCP CREATE AND ACCESS                                                                  (1)

                                     00B7       30009$:
            50            04     E1  00B7   277 	BBC	#FAB$V_MSE,R0,25$		; BRANCH IF NO MULTI STREAMS
                          04         00BA       
            69            30     E0  00BB   278 	BBS	#IFB$V_WRTACC,(R9),30$		; BRANCH IF WRITE ACCESSED
                          04         00BE       
                                     00BF   279 25$:	SSB	#IFB$V_NORECLK,(R9)		; FLAG NO NEED FOR RECORD LOCKS
            69            33     E2  00BF       		BBSS	#IFB$V_NORECLK,(R9),30010$
                          00         00C2       
                                     00C3       30010$:
                                     00C3   280 ;
                                     00C3   281 ;  SET DEFERRED WRITE IFAB FLAG AS REQUIRED
                                     00C3   282 ;
            68            25     E1  00C3   283 30$:	BBC	#FAB$V_DFW+FOP,(R8),40$		; BRANCH IF DEFERRED WRITE NOT
                          09         00C6       
                                     00C7   284 						; SPECIFIED
            50            0F     93  00C7   285 	BITB	#FAB$M_PUT!FAB$M_UPD!FAB$M_DEL!FAB$M_GET,R0	; ANY SHARING?
                          04     12  00CA   286 	BNEQ	40$				; BRANCH IF ANY (NO DEFERRED WRITE)
                                     00CC   287 	SSB	#IFB$V_DFW,(R9)			; SET DEFERRED WRITE FLAG
            69            2C     E2  00CC       		BBSS	#IFB$V_DFW,(R9),30011$
                          00         00CF       
                                     00D0       30011$:
                                     00D0   288 ;
                                     00D0   289 ;  SET READ CHECKING, WRITE CHECKING, AND SEQ. OPERATIONS ONLY FLAGS
                                     00D0   290 ;
            68            29     E1  00D0   291 40$:	BBC	#FAB$V_WCK+FOP,(R8),50$		; BRANCH IF NO WRITE-CHECKING
                          07         00D3       
            66            20     88  00D4   292 	BISB2	#1@FIB$V_WRITECK,(R6)		; ENABLE WRITE-CHECKING
         2C AA            10     88  00D7   293 	BISB2	#1@FHD$V_WRITCHECK,FWA$W_UCHAR(R10) ; & GIVE FILE WCK ATTRIBUTE
            68            37     E1  00DB   294 50$:	BBC	#FAB$V_RCK+FOP,(R8),60$		; BRANCH IF NO READ-CHECKING
                          08         00DE       
                                     00DF   295 	SSB	#FIB$V_READCK,(R6)		; ENABLE READ-CHECKING
            66            09     E2  00DF       		BBSS	#FIB$V_READCK,(R6),30012$
                          00         00E2       
                                     00E3       30012$:
         2C AA            08     88  00E3   296 	BISB2	#1@FHD$V_READCHECK,FWA$W_UCHAR(R10) ; & GIVE FILE RCK ATTRIBUTE
            68            26     E1  00E7   297 60$:	BBC	#FAB$V_SQO+FOP,(R8),70$		; BRANCH IF SQO NOT SPECIFIED
                          08         00EA       
                                     00EB   298 	SSB	#FIB$V_SEQONLY,(R6)		; SET SEQUENTIAL ONLY BIT
            66            06     E2  00EB       		BBSS	#FIB$V_SEQONLY,(R6),30013$
                          00         00EE       
                                     00EF       30013$:
                                     00EF   299 	SSB	#IFB$V_SQO,(R9)		; AND SAVE BIT IN IFAB
            69            2D     E2  00EF       		BBSS	#IFB$V_SQO,(R9),30014$
                          00         00F2       
                                     00F3       30014$:
                                     00F3   300 ;
                                     00F3   301 ; IF MAGTAPE, CHECK AND SET POSITIONING FLAGS (RWO, POS, NEF)
                                     00F3   302 ;
            69            05     E1  00F3   303 70$:	BBC	#DEV$V_SQD,IFB$L_PRIM_DEV(R9),80$	; BRANCH IF NOT MAGTAPE
                          0E         00F6       
                                     00F7   304 	SSB	#FIB$V_PRSRV_ATR,(R6)			; READ RAT BITS AS STORED
            66            11     E2  00F7       		BBSS	#FIB$V_PRSRV_ATR,(R6),30015$
                          00         00FA       
                                     00FB       30015$:
                                     00FB   305 ;
                                     00FB   306 ; THE RMS FOP BITS FOR MAGTAPE POSITIONING ARE IN THE SAME
                                     00FB   307 ; RELATIVE POSITION TO EACH OTHER AS THE CORRESPONDING FIB BITS
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page  10
030             RM$CREACC_SET  -  PERFORM FCP CREATE AND ACCESS                                                                  (1)

                                     00FB   308 ; AND ADDITIONALLY HAVE THE SAME POLARITY - USE AN EXTRACT
                                     00FB   309 ; AND INSERT FIELD TO SET THEM APPROPRIATELY
                                     00FB   310 ; (NOTE:  THE WCK BIT IS IMBEDDED - SO IT GETS SET OR CLEARED AGAIN)
                                     00FB   311 ;
                                     00FB   312 	ASSUME	<FAB$V_RWO+1> EQ FAB$V_POS
                                     00FB   313 	ASSUME	<FAB$V_POS+1> EQ FAB$V_WCK
                                     00FB   314 	ASSUME	<FAB$V_WCK+1> EQ FAB$V_NEF
                                     00FB   315 	ASSUME	<FIB$V_REWIND+1> EQ FIB$V_CURPOS
                                     00FB   316 	ASSUME	<FIB$V_CURPOS+1> EQ FIB$V_WRITECK
                                     00FB   317 	ASSUME	<FIB$V_WRITECK+1> EQ FIB$V_UPDATE
            04            27     EF  00FB   318 	EXTZV	#FAB$V_RWO+FOP,#4,(R8),R0	; GET THE FOP BITS
            50            68         00FE       
            03            50     F0  0100   319 	INSV	R0,#FIB$V_REWIND,#4,(R6)
            66            04         0103       
                                     0105   320 ;
                                     0105   321 ;  IF THIS IS UFO, SET FIB$V_NOTRUNC UNLESS TRN BIT SET IN FAC, AND CHECK
                                     0105   322 ;  FOR EXECUTE PROTECTION
                                     0105   323 ;
            68            31     E1  0105   324 80$:	BBC	#FAB$V_UFO+FOP,(R8),100$	; BRANCH IF NOT UFO
                          18         0108       
         16 A8            04     E0  0109   325 	BBS	#FAB$V_TRN,FAB$B_FAC(R8),90$	; BRANCH IF TRN SET
                          04         010D       
                                     010E   326 	SSB	#FIB$V_NOTRUNC,(R6)		; DON'T ALLOW TRUNCATES
            66            0B     E2  010E       		BBSS	#FIB$V_NOTRUNC,(R6),30016$
                          00         0111       
                                     0112       30016$:
                                     0112   327 ;
                                     0112   328 ;  CHECK FOR EXECUTE PROTECTION
                                     0112   329 ;
         16 A8            07     E1  0112   330 90$:	BBC	#FAB$V_EXE,FAB$B_FAC(R8),100$	; BRANCH IF NOT EXECUTE ACCESS
                          0A         0116       
            01         0A A9     91  0117   331 	CMPB	IFB$B_MODE(R9),#PSL$C_EXEC	; EXEC (OR KERNEL) MODE?
                          04     1A  011B   332 	BGTRU	100$				; BRANCH IF NOT (IGNORE)
                                     011D   333 	SSB	#FIB$V_EXECUTE,(R6)		; HAVE ACP CHECK ON EXECUTE ACCESS
            66            10     E2  011D       		BBSS	#FIB$V_EXECUTE,(R6),30017$
                          00         0120       
                                     0121       30017$:
                                     0121   334 100$:
                                     0121   335 ;
                                     0121   336 ; SET THE RETRIEVAL WINDOW SIZE
                                     0121   337 ;
         03 A6         1C A8     90  0121   338 SETRTV:	MOVB	FAB$B_RTV(R8),FIB$B_WSIZE(R6)
                                     0126   339 ;
                                     0126   340 ; THE FIB IS NOW SET UP.
                                     0126   341 ; SET THE ATTRIBUTE CONTROL LIST ADDRESS INTO R5
                                     0126   342 ;
            55       0164 CA     9E  0126   343 	MOVAB	FWA$T_ATR_LIST(R10),R5		; GET ADDR OF ATTRIBUTE LIST
                                     012B   344 						; AREA WORK BUFFER
                                 05  012B   345 	RSB
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page  11
030             RM$CREACC_SET  -  PERFORM FCP CREATE AND ACCESS                                                                  (1)

                                     012C   347 ;++
                                     012C   348 ;  SUBROUTINE TO FINISH FCP ACCESS & CREATE SETUPS STARTED BY RM$CREACC_SET1
                                     012C   349 ;
                                     012C   350 ;  IF THIS IS FOR AN ACCESS IT PUTS AN ENTRY ON THE ATTRIBUTES LIST
                                     012C   351 ;  TO CAUSE THE STATISTICS BLOCK TO BE READ
                                     012C   352 ;
                                     012C   353 ;  IT THEN ADDS ATTRIBUTE LIST ENTRIES FOR RMS RECORD ATTRIBUTES,
                                     012C   354 ;  USER CHARACTERISTICS, AND, IF DEVICE IS MAGTAPE, BLOCK SIZE.
                                     012C   355 ;  IT THEN ENDS THE ATTRIBUTES LIST AND BUILDS P6 THRU P2 OF THE FCP'S
                                     012C   356 ;  QIO PARAMETER BLOCK AND RETURNS.
                                     012C   357 ;
                                     012C   358 ;  INPUTS:
                                     012C   359 ;	R10	FWA ADDRESS
                                     012C   360 ;	R5	ATTRIBUTES LIST NEXT ENTRY ADDRESS
                                     012C   361 ;
                                     012C   362 ;  OUTPUTS:
                                     012C   363 ;	P6 THRU P2 ON STACK
                                     012C   364 ;	R0, R5 DESTROYED
                                     012C   365 ;--
                                     012C   366 ;
                                     012C   367 ;  ENTRY POINT TO FINISH FCP ACCESS SETUPS
                                     012C   368 ;
                                     012C   369 RM$CREACC_SET2::
                          01     BA  012C   370 	POPR	#^M<R0>				; SAVE RETURN PC
            85            08     B0  012E   371 	MOVW	#8,(R5)+			; JUST 8 BYTES WANTED
            85            09     B0  0131   372 	MOVW	#ATR$C_STATBLK,(R5)+		; READ STATISTICS BLOCK
            85       0094 CA     7E  0134   373 	MOVAQ	FWA$Q_STATBLK(R10),(R5)+	; ADDRESS FOR READ
                          02     11  0139   374 	BRB	CREACC_3
                                     013B   375 ;
                                     013B   376 ;  ENTRY POINT TO FINISH CREATE FUNCTION SETUP WITHOUT GETTING A STATISTICS BLOCK
                                     013B   377 ;
                                     013B   378 ;	PUT IN ENTRIES TO CAUSE RECORD ATTRIBUTES AND USER CHARACTERISTICS
                                     013B   379 ;	TO BE READ/WRITTEN
                                     013B   380 ;
                                     013B   381 RM$CREACC_SET3::
                          01     BA  013B   382 	POPR	#^M<R0>				; SAVE RETURN PC
                                     013D   383 CREACC_3:
            85            14     B0  013D   384 	MOVW	#<IFB$C_FHAEND-IFB$B_RFMORG>,(R5)+ 	; # BYTES REC ATTR TO XFER
            85            04     B0  0140   385 	MOVW	#ATR$C_RECATTR,(R5)+		; GET RMS RECORD ATTRIBUTES
            85         3C A9     DE  0143   386 	MOVAL	IFB$B_RFMORG(R9),(R5)+		; XFER ATTR'S DIRECTLY TO/FROM IFAB
            85            01     B0  0147   387 	MOVW	#ATR$S_UCHAR,(R5)+		; SIZE OF USER CHARACTERISTICS
            85            03     B0  014A   388 	MOVW	#ATR$C_UCHAR,(R5)+		; SPECIFY READ/WRITE OF   "
            85         2C AA     3E  014D   389 	MOVAW	FWA$W_UCHAR(R10),(R5)+		; ADDR TO READ/WRITE      "
            69            05     E1  0151   390 	BBC	#DEV$V_SQD,IFB$L_PRIM_DEV(R9),5$ ; BRANCH IF NOT MAGTAPE
                          0A         0154       
            85            02     B0  0155   391 	MOVW	#ATR$S_BLOCKSIZE,(R5)+		; SPECIFY BLOCKSIZE SIZE (2)
            85            0B     B0  0158   392 	MOVW	#ATR$C_BLOCKSIZE,(R5)+		; SPECIFY READ/WRITE OF BLOCKSIZE
            85         38 A9     DE  015B   393 	MOVAL	IFB$W_DEVBUFSIZ(R9),(R5)+	; XFER DIRECTLY TO/FROM IFAB
                                     015F   394 5$:
                          65     D4  015F   395 	CLRL	(R5)				; FLAG END OF ATTRIBUTE LIST
                                     0161   396 ;
                                     0161   397 ; START BUILDING QIO ARGUMENT LIST ON STACK
                                     0161   398 ;
                          00     DD  0161   399 	PUSHL	#0				; P6
                     0164 CA     DF  0163   400 	PUSHAL	FWA$T_ATR_LIST(R10)		; P5 = ATTRIBUTE LIST ADDRESS
                     008C CA     7F  0167   401 P4_P2:	PUSHAQ	FWA$Q_RNS(R10)			; P4 = RESULTANT NAME STRING DESCRIPTOR
                     0084 CA     DF  016B   402 	PUSHAL	FWA$Q_NAME(R10)			; P3 = ADDRESS OF LONG WORD
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page  12
030             RM$CREACC_SET  -  PERFORM FCP CREATE AND ACCESS                                                                  (1)

                                     016F   403 						; TO RECEIVE RESULTANT STRING LENGTH
       008C CA            14     D0  016F   404 	MOVL	#FWA$C_RNSBUFSIZ,FWA$Q_RNS(R10)	; LENGTH OF RNS BUFFER
       0090 CA       0118 CA     9E  0174   405 	MOVAB	FWA$T_NAMEBUF(R10),FWA$Q_RNS+4(R10)	; OVERLAY INPUT FILENAME
                                     017B   406 							; WITH RESULTANT STRING
                     0084 CA     7F  017B   407 	PUSHAQ	FWA$Q_NAME(R10)			; P2 = FILENAME STRING
                          60     17  017F   408 	JMP	(R0)				; RETURN TO CALLER
                                     0181   409 ;++
                                     0181   410 ;  ENTRY POINT TO PUSH P4 THROUGH P2 ONTO STACK FOR FCP ARGUMENT LIST
                                     0181   411 ;  BUILD FOR THE $ERASE FUNCTION (DELETE FILE)
                                     0181   412 ;--
                                     0181   413 RM$FCP_P4_P2::
                          01     BA  0181   414 	POPR	#^M<R0>				; SAVE RETURN PC
                          E2     11  0183   415 	BRB	P4_P2				; GO DO IT
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page  13
030             RM$DEACCESS  -  PERFORM FCP DEACCESS FUNCTION                                                                    (1)

                                     0185   417 	.SBTTL	RM$DEACCESS  -  PERFORM FCP DEACCESS FUNCTION
                                     0185   418 ;++
                                     0185   419 ; FUNCTIONAL DESCRIPTION:
                                     0185   420 ;
                                     0185   421 ; THIS ROUTINE BUILDS AN ATTRIBUTE LIST TO CAUSE THE RECORD
                                     0185   422 ; ATTRIBUTES IN THE IFAB TO BE REWRITTEN TO THE FILE
                                     0185   423 ; HEADER, IF THE FILE WAS WRITE ACCESSED, AND
                                     0185   424 ; CALLS RM$FCPFNC TO PERFORM THE DEACCESS.
                                     0185   425 ;
                                     0185   426 ; CALLING SEQUENCE:
                                     0185   427 ;
                                     0185   428 ;	BSBW	RM$DEACCESS
                                     0185   429 ;
                                     0185   430 ; INPUT PARAMETERS:
                                     0185   431 ;
                                     0185   432 ;	R11	IMPURE AREA ADDRESS
                                     0185   433 ;	R9	IFAB ADDRESS
                                     0185   434 ;	R8	FAB ADDRESS
                                     0185   435 ;
                                     0185   436 ; IMPLICIT INPUTS:
                                     0185   437 ;
                                     0185   438 ;	IFB$L_CHNL
                                     0185   439 ;
                                     0185   440 ; OUTPUTS:
                                     0185   441 ;
                                     0185   442 ;	R0	STATUS CODE
                                     0185   443 ;	R1-R6,AP DESTROYED
                                     0185   444 ;
                                     0185   445 ; IMPLICIT OUTPUTS:
                                     0185   446 ;
                                     0185   447 ;	IFB$L_IOS
                                     0185   448 ;
                                     0185   449 ; COMPLETION CODES:
                                     0185   450 ;
                                     0185   451 ;	STANDARD RMS, IN PARTICULAR, SUC, DAC, FNO.
                                     0185   452 ;
                                     0185   453 ; SIDE EFFECTS:
                                     0185   454 ;
                                     0185   455 ;	ON RETURN RMS MAY BE RUNNING AT AST LEVEL
                                     0185   456 ;	REQUIRING A REPROBE OF ANY USER STRUCTURES EXCEPT
                                     0185   457 ;	THE FAB.
                                     0185   458 ;--
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page  14
030             RM$DEACCESS  -  PERFORM FCP DEACCESS FUNCTION                                                                    (1)

                                 00000000   460 	.PSECT	F$RMSCLOSE0,GBL,NOWRT
                                     0000   461 
                                     0000   462 ;++
                                     0000   463 ;
                                     0000   464 ;  XAB PROCESSING ARGUMENTS FOR CLOSE
                                     0000   465 ;
                                     0000   466 ;--
                                     0000   467 CLS_XAB_ARGS:
                           00'14 1E  0000   468 	.BYTE	XAB$C_RDT,XAB$C_RDTLEN,XBC$C_CLSRDT	; HANDLE RDT XAB
                           00'10'13' 0003   469 	.BYTE	XAB$C_PRO,XAB$C_PROLEN,XBC$C_CLSPRO	; HANDLE PRO XAB
                                 00  0006   470 	.BYTE	0
                                     0007   471 
                                     0007   472 ;++
                                     0007   473 ;
                                     0007   474 ;  PERFORM NETWORK DEACCESS FUNCTION
                                     0007   475 ;
                                     0007   476 ;--
                                     0007   477 NTDAC:	$PSECT_BR	NF$NETWORK
                          0007'  31  0007       		BRW	NF$NETWORK2
                                     000A       		.SAVE
                                 00000011       		.PSECT	NF$NETWORK,GBL,NOWRT
                                     0011       NF$NETWORK2:
            69            3D     E5  0011   478 	BBCC	#IFB$V_DAP_OPEN,(R9),10$ ; BRANCH IF CLOSE NOT NECESSARY
                          0A         0014       
            6B            04     E0  0015   479 	BBS	#IMP$V_IORUNDOWN,(R11),10$ ; BRANCH IF I/O RUNDOWN IN PROGRESS
                          06         0018       
                          FFE4'  30  0019   480 	BSBW	NT$CLOSE		; YES, CLOSE IT THERE
            09            50     E9  001C   481 	BLBC	R0,20$			; BRANCH ON FAILURE
                          FFDE'  30  001F   482 10$:	BSBW	NT$DEACCESS		; DESTROY LOGICAL LINK WITH PARTNER
            04            50     E9  0022   483 	BLBC	R0,30$			; BRANCH ON FAILURE
                                     0025   484 	RMSSUC				; SHOW SUCCESS
            50            01     D0  0025       		MOVL	#1,R0
                                 05  0028   485 20$:	RSB				; EXIT TO CALLER
                          006A'  31  0029   486 30$:	BRW	ERRDAC			; BRANCH AID
                                     002C   487 	$PSECT_RESTORE
                                 0000000A       		.RESTORE
                                     000A   488 
                                     000A   489 ;++
                                     000A   490 ;
                                     000A   491 ;  ENTRY POINT FOR RM$DEACCESS
                                     000A   492 ;
                                     000A   493 ;--
                                     000A   494 RM$DEACCESS::
                                     000A   495 	$TSTPT	DEACCES
                 00000200'9F     D6  000A       		INCL	@#PIO$GL_FMLH+512+TPT$L_DEACCES
            69            0D     E0  0010   496 	BBS	#DEV$V_NET,IFB$L_PRIM_DEV(R9),NTDAC ; BR IF NETWORK DEVICE
                          F3         0013       
                                     0014   497 	RMSSUC	SUC,R6			; INDICATE SUCCESS
            56            01     D0  0014       		MOVL	#1,R6
                                     0017   498 ;
                                     0017   499 ; BUILD ATTRIBUTE LIST ON STACK TO REWRITE RECORD ATTRIBUTES
                                     0017   500 ;
                          00     DD  0017   501 	PUSHL	#0			; END OF ATTRIBUTE LIST FLAG
            69            30     E1  0019   502 	BBC	#IFB$V_WRTACC,(R9),10$	; BRANCH IF NOT WRITE ACCESSED
                          1A         001C       
                       3C A9     DF  001D   503 	PUSHAL	IFB$B_RFMORG(R9)	; WRITE ATTRIBUTES FROM IFAB
                 00040014 8F     DD  0020   504 	PUSHL	#<ATR$C_RECATTR@16>+<IFB$C_FHAEND-IFB$B_RFMORG>
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page  15
030             RM$DEACCESS  -  PERFORM FCP DEACCESS FUNCTION                                                                    (1)

                                     0026   505 					; LENGTH & RECORD ATTRIUBTES CODE
            5C         D7 AF     9E  0026   506 	MOVAB	CLS_XAB_ARGS,AP		; ARG LIST ADDR FOR RM$XAB_SCAN
                          FFD3'  30  002A   507 	BSBW	RM$XAB_SCAN		; PROCESS XAB CHAIN
            56            50     D0  002D   508 	MOVL	R0,R6			; SAVE STATUS
                                     0030   509 ;
                                     0030   510 ;  PUT ORG BACK INTO RFMORG BYTE
                                     0030   511 ;
            04         23 A9     F0  0030   512 	INSV	IFB$B_ORGCASE(R9),#IFB$V_ORG,#IFB$S_ORG,IFB$B_RFMORG(R9)
         3C A9            04         0034       
                                     0037   513 ;
                                     0037   514 ;  ALLOCATE A FIB TO HANDLE VARIOUS OPTIONS
                                     0037   515 ;
            52            20     9A  0037   516 10$:	MOVZBL	#FIB$C_EXTDATA,R2		; SET SIZE OF FIB
                          FFC3'  30  003A   517 	BSBW	RM$GETSPC1			; ALLOCATE FIB
                                     003D   518 						; BUILD FIB DESCRIPTOR ON STACK
                          51     DD  003D   519 	PUSHL	R1				; ADDR OF FIB
                          20     DD  003F   520 	PUSHL	#FIB$C_EXTDATA			; AND LENGTH OF FIB
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page  16
030             RM$DEACCESS  -  PERFORM FCP DEACCESS FUNCTION                                                                    (1)

                                     0041   522 ;
                                     0041   523 ;  HANDLE "TEF" OPTION (TRUNCATE AT END OF FILE) IF THIS IS A WRITE-ACCESSED
                                     0041   524 ;  DISK FILE.
                                     0041   525 ;
                                     0041   526 ; !!!!!  MUST ADD CODE TO OMIT IN SHARED FILE CASE !!!!!
                                     0041   527 ;
            69            36     E0  0041   528 	BBS	#IFB$V_TEF,(R9),15$		; BRANCH IF AUTO EXTEND SET FLAG
                          0C         0044       
            68            3C     E1  0045   529 	BBC	#FAB$V_TEF+FOP,(R8),20$		; BRANCH IF OPTION NOT SPECED
                          19         0048       
            69            1C     E1  0049   530 	BBC	#DEV$V_RND,IFB$L_PRIM_DEV(R9),20$ ; OR IF NOT DISK
                          15         004C       
            69            30     E1  004D   531 	BBC	#IFB$V_WRTACC,(R9),20$		; OR IF NOT WRITE ACCESSED
                          11         0050       
                                     0051   532 	ASSUME	FIB$V_TRUNC GE 8
         17 A1            01     88  0051   533 15$:	BISB2	#<FIB$M_TRUNC @-8>,FIB$W_EXCTL+1(R1) ; ASK FOR TRUNCATE
         1C A1         44 A9     D0  0055   534 	MOVL	IFB$L_EBK(R9),FIB$L_EXVBN(R1)	; TRUNCATE AT EOF BLOCK
                       48 A9     B5  005A   535 	TSTW	IFB$W_FFB(R9)			; ANY BYTES USED THIS BLOCK?
                          03     13  005D   536 	BEQL	20$				; BRANCH IF NONE
                       1C A1     D6  005F   537 	INCL	FIB$L_EXVBN(R1)			; YES - DON'T TRUNCATE BLOCK
                                     0062   538 20$:
                                     0062   539 ;
                                     0062   540 ;  CHECK FOR MAGTAPE REWIND
                                     0062   541 ;
            69            05     E1  0062   542 	BBC	#DEV$V_SQD,IFB$L_PRIM_DEV(R9),40$ ; BRANCH IF NOT MAGTAPE
                          07         0065       
            69            27     E1  0066   543 	BBC	#IFB$V_RWC,(R9),40$		; BRANCH IF NOT SPECED
                          03         0069       
            61            08     88  006A   544 	BISB2	#FIB$M_REWIND,FIB$L_ACCTL(R1)	; CAUSE REWIND TO HAPPEN
                                     006D   545 40$:
                                     006D   546 ;
                                     006D   547 ;  SWAP THE WORDS OF IFB$L_HBK AND IFB$L_EBK TO MATCH FILES-11
                                     006D   548 ;  ON-DISK STRUCTURE
                                     006D   549 ;
         40 A9            10     9C  006D   550 	ROTL	#16,IFB$L_HBK(R9),IFB$L_HBK(R9)
                       40 A9         0071       
         44 A9            10     9C  0073   551 	ROTL	#16,IFB$L_EBK(R9),IFB$L_EBK(R9)
                       44 A9         0077       
                                     0079   552 ;
                                     0079   553 ;  DO THE DEACCESS QIO
                                     0079   554 ;
            50            34     9A  0079   555 	MOVZBL	#IO$_DEACCESS,R0	; DEACCESS FUNCTION CODE
                          FF81'  30  007C   556 	BSBW	RM$FCPFNC_ALT4		; GO DO THE DEACCESS
                          14     BA  007F   557 	POPR	#^M<R2,R4>		; GET FIB LEN & ADDR
                          8E     D5  0081   558 50$:	TSTL	(SP)+			; REMOVE ATTRIBUTE LIST FROM STACK
                          FC     12  0083   559 	BNEQ	50$			;    "
                          50     DD  0085   560 	PUSHL	R0			; SAVE STATUS CODE
                          FF76'  30  0087   561 	BSBW	RM$RETSPC1		; DEALLOCATE THE FIB
                          01     BA  008A   562 	POPR	#^M<R0>			; RESTORE THE STATUS CODE
            07            50     E9  008C   563 	BLBC	R0,ERRDAC		; BRANCH IF ERROR
            03            56     E8  008F   564 	BLBS	R6,60$			; BRANCH IF NO XAB ERROR
            50            56     D0  0092   565 	MOVL	R6,R0			; REPORT XAB ERROR
                                 05  0095   566 60$:	RSB
                                     0096   567 ;
                                     0096   568 ERRDAC:	$PSECT_BR	L$RMS0
                          FF6F'  31  0096       		BRW	L$RMS03
                                     0099       		.SAVE
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page  17
030             RM$DEACCESS  -  PERFORM FCP DEACCESS FUNCTION                                                                    (1)

                                 00000008       		.PSECT	L$RMS0,GBL,NOWRT
                                     0008       L$RMS03:
                                     0008   569 	RMSERR	DAC,R1			; DEFAULT ERROR CODE
            51       0000'8F     3C  0008       		MOVZWL	#<RMS$_DAC&^XFFFF>,R1
                          FFF0'  31  000D   570 	BRW	RM$MAPERR		; GO HANDLE ERROR
                                     0010   571 	$PSECT_RESTORE
                                 00000099       		.RESTORE
                                     0099   572 	.END
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page  18
SYMBOL TABLE                                                                                                                     (1)

$$.PSECT_EP    = 00000004            ATR$W_TYPE       00000002            FAB$B_BID        00000000            
$$RMSTEST      = 0000001A            BIT...         = 00000006            FAB$B_BKS        0000003E            
$$RMS_PBUGCHK  = 00000010            CLS_XAB_ARGS     00000000 R     06   FAB$B_BLN        00000001            
$$RMS_TBUGCHK  = 00000008            CREACC_3         0000013D R     02   FAB$B_DNS        00000035            
$$RMS_UMODE    = 00000004            DEV$M_ALL      = 00800000            FAB$B_FAC        00000016            
ATR$C_ACLEVEL  = 00000018            DEV$M_AVL      = 00040000            FAB$B_FNS        00000034            
ATR$C_ALCONTROL= 0000000E            DEV$M_CCL      = 00000002            FAB$B_FSZ        0000003F            
ATR$C_ASCDATES = 0000000D            DEV$M_DIR      = 00000008            FAB$B_ORG        0000001D            
ATR$C_ASCNAME  = 00000010            DEV$M_DMT      = 00200000            FAB$B_RAT        0000001E            
ATR$C_BAKDATE  = 00000014            DEV$M_ELG      = 00400000            FAB$B_RFM        0000001F            
ATR$C_BLOCKSIZE= 0000000B            DEV$M_FOD      = 00004000            FAB$B_RTV        0000001C            
ATR$C_CREDATE  = 00000011            DEV$M_FOR      = 01000000            FAB$B_SHR        00000017            
ATR$C_DIRSEQ   = 0000001B            DEV$M_GEN      = 00020000            FAB$C_BID      = 00000003            
ATR$C_ENDLBLAST= 0000000F            DEV$M_IDV      = 04000000            FAB$C_BLN        00000050            
ATR$C_EXPDAT   = 00000008            DEV$M_MBX      = 00100000            FAB$C_FIX      = 00000001            
ATR$C_EXPDATE  = 00000013            DEV$M_MNT      = 00080000            FAB$C_HSH      = 00000030            
ATR$C_FILNAM   = 00000005            DEV$M_NET      = 00002000            FAB$C_IDX      = 00000020            
ATR$C_FILTYP   = 00000006            DEV$M_ODV      = 08000000            FAB$C_MAXRFM   = 00000003            
ATR$C_FILVER   = 00000007            DEV$M_RCK      = 40000000            FAB$C_REL      = 00000010            
ATR$C_FPRO     = 00000016            DEV$M_REC      = 00000001            FAB$C_RFM_DFLT = 00000002            
ATR$C_HEADER   = 0000000A            DEV$M_RND      = 10000000            FAB$C_SEQ      = 00000000            
ATR$C_RECATTR  = 00000004            DEV$M_RTM      = 20000000            FAB$C_UDF      = 00000000            
ATR$C_REVDATE  = 00000012            DEV$M_SDI      = 00000010            FAB$C_VAR      = 00000002            
ATR$C_RPRO     = 00000017            DEV$M_SHR      = 00010000            FAB$C_VFC      = 00000003            
ATR$C_SEMASK   = 00000019            DEV$M_SPL      = 00000040            FAB$K_BLN        00000050            
ATR$C_STATBLK  = 00000009            DEV$M_SQD      = 00000020            FAB$L_ALQ        00000010            
ATR$C_UCHAR    = 00000003            DEV$M_SWL      = 02000000            FAB$L_CTX        00000018            
ATR$C_UIC      = 00000015            DEV$M_TRM      = 00000004            FAB$L_DEV        00000040            
ATR$C_UIC_RO   = 0000001A            DEV$M_WCK      = 80000000            FAB$L_DNA        00000030            
ATR$C_USERLABEL= 0000000C            DEV$V_ALL      = 00000017            FAB$L_FNA        0000002C            
ATR$L_ADDR       00000004            DEV$V_AVL      = 00000012            FAB$L_FOP        00000004            
ATR$S_ACLEVEL  = 00000002            DEV$V_CCL      = 00000001            FAB$L_JNL        00000020            
ATR$S_ALCONTROL= 0000000E            DEV$V_DIR      = 00000003            FAB$L_MRN        00000038            
ATR$S_ASCDATES = 00000023            DEV$V_DMT      = 00000015            FAB$L_NAM        00000028            
ATR$S_ASCNAME  = 00000014            DEV$V_ELG      = 00000016            FAB$L_SDC        00000044            
ATR$S_BAKDATE  = 00000008            DEV$V_FOD      = 0000000E            FAB$L_STS        00000008            
ATR$S_BLOCKSIZE= 00000002            DEV$V_FOR      = 00000018            FAB$L_STV        0000000C            
ATR$S_CREDATE  = 00000008            DEV$V_GEN      = 00000011            FAB$L_XAB        00000024            
ATR$S_DIRSEQ   = 00000002            DEV$V_IDV      = 0000001A            FAB$M_BIO      = 00000020            
ATR$S_ENDLBLAST= 00000004            DEV$V_MBX      = 00000014            FAB$M_BLK      = 00000008            
ATR$S_EXPDAT   = 00000007            DEV$V_MNT      = 00000013            FAB$M_BRO      = 00000040            
ATR$S_EXPDATE  = 00000008            DEV$V_NET      = 0000000D            FAB$M_CBT      = 00200000            
ATR$S_FILNAM   = 00000006            DEV$V_ODV      = 0000001B            FAB$M_CIF      = 02000000            
ATR$S_FILTYP   = 00000002            DEV$V_RCK      = 0000001E            FAB$M_CR       = 00000002            
ATR$S_FILVER   = 00000002            DEV$V_REC      = 00000000            FAB$M_CTG      = 00100000            
ATR$S_FPRO     = 00000002            DEV$V_RND      = 0000001C            FAB$M_DEL      = 00000004            
ATR$S_HEADER   = 00000200            DEV$V_RTM      = 0000001D            FAB$M_DFW      = 00000020            
ATR$S_RECATTR  = 00000020            DEV$V_SDI      = 00000004            FAB$M_DLT      = 00008000            
ATR$S_REVDATE  = 00000008            DEV$V_SHR      = 00000010            FAB$M_DMO      = 00001000            
ATR$S_RPRO     = 00000002            DEV$V_SPL      = 00000006            FAB$M_ESC      = 08000000            
ATR$S_SEMASK   = 00000008            DEV$V_SQD      = 00000005            FAB$M_EXE      = 00000080            
ATR$S_STATBLK  = 0000000A            DEV$V_SWL      = 00000019            FAB$M_FTN      = 00000001            
ATR$S_UCHAR    = 00000001            DEV$V_TRM      = 00000002            FAB$M_GET      = 00000002            
ATR$S_UIC      = 00000004            DEV$V_WCK      = 0000001F            FAB$M_INP      = 00080000            
ATR$S_UIC_RO   = 00000004            ERRACCESS        00000084 R     02   FAB$M_JNL      = 00400000            
ATR$S_USERLABEL= 00000050            ERRDAC           00000096 R     06   FAB$M_KFO      = 40000000            
ATR$W_SIZE       00000000            EXIT             00000083 R     02   FAB$M_MSE      = 00000010            
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page  19
SYMBOL TABLE                                                                                                                     (1)

FAB$M_MXV      = 00000002            FAB$V_NIL      = 00000005            FHD$W_CHECKSUM   000001FE            
FAB$M_NAM      = 01000000            FAB$V_OFP      = 0000001D            FHD$W_FID        00000002            
FAB$M_NEF      = 00000400            FAB$V_ORG      = 00000004            FHD$W_FID_NUM    00000002            
FAB$M_NFS      = 00010000            FAB$V_POS      = 00000008            FHD$W_FID_SEQ    00000004            
FAB$M_NIL      = 00000020            FAB$V_PPF      = 00000012            FHD$W_FILECHAR   0000000C            
FAB$M_OFP      = 20000000            FAB$V_PPF_IND  = 0000000E            FHD$W_FILEOWNER  00000008            
FAB$M_POS      = 00000100            FAB$V_PPF_RAT  = 00000006            FHD$W_FILEPROT   0000000A            
FAB$M_PPF      = 00040000            FAB$V_PRN      = 00000002            FHD$W_RECATTR    0000000E            
FAB$M_PPF_IND  = 00004000            FAB$V_PUT      = 00000000            FHD$W_STRUCLEV   00000006            
FAB$M_PPF_RAT  = 00003FC0            FAB$V_RCK      = 00000017            FIB$B_ALALIGN    00000021            
FAB$M_PRN      = 00000004            FAB$V_RWC      = 0000000B            FIB$B_ALOPTS     00000020            
FAB$M_PUT      = 00000001            FAB$V_RWO      = 00000007            FIB$B_DID_NMX    0000000F            
FAB$M_RCK      = 00800000            FAB$V_SCF      = 0000000E            FIB$B_DID_RVN    0000000E            
FAB$M_RWC      = 00000800            FAB$V_SHRDEL   = 00000002            FIB$B_FID_NMX    00000009            
FAB$M_RWO      = 00000080            FAB$V_SHRGET   = 00000001            FIB$B_FID_RVN    00000008            
FAB$M_SCF      = 00004000            FAB$V_SHRPUT   = 00000000            FIB$B_LOC_NMX    00000027            
FAB$M_SHRDEL   = 00000004            FAB$V_SHRUPD   = 00000003            FIB$B_LOC_RVN    00000026            
FAB$M_SHRGET   = 00000002            FAB$V_SPL      = 0000000D            FIB$B_WSIZE      00000003            
FAB$M_SHRPUT   = 00000001            FAB$V_SQO      = 00000006            FIB$C_ACCDATA    0000000A            
FAB$M_SHRUPD   = 00000008            FAB$V_SUP      = 00000002            FIB$C_ALCDATA    0000002C            
FAB$M_SPL      = 00002000            FAB$V_TEF      = 0000001C            FIB$C_CYL      = 00000001            
FAB$M_SQO      = 00000040            FAB$V_TMD      = 00000004            FIB$C_DIRDATA    00000016            
FAB$M_SUP      = 00000004            FAB$V_TMP      = 00000003            FIB$C_EXTDATA    00000020            
FAB$M_TEF      = 10000000            FAB$V_TRN      = 00000004            FIB$C_ILLEGAL  = 00000005            
FAB$M_TMD      = 00000010            FAB$V_UFM      = 0000001A            FIB$C_LBN      = 00000002            
FAB$M_TMP      = 00000008            FAB$V_UFO      = 00000011            FIB$C_LENGTH     0000002C            
FAB$M_TRN      = 00000010            FAB$V_UPD      = 00000003            FIB$C_MTALEN     0000001C            
FAB$M_UFM      = 04000000            FAB$V_UPI      = 00000006            FIB$C_NEXTVOL  = 00000003            
FAB$M_UFO      = 00020000            FAB$V_WCK      = 00000009            FIB$C_POSEND   = 00000002            
FAB$M_UPD      = 00000008            FAB$W_BLS        0000003C            FIB$C_REWINDFIL= 00000006            
FAB$M_UPI      = 00000040            FAB$W_DEQ        00000014            FIB$C_REWINDVOL= 00000001            
FAB$M_WCK      = 00000200            FAB$W_IFI        00000002            FIB$C_RFI      = 00000004            
FAB$S_ORG      = 00000004            FAB$W_MRS        00000036            FIB$C_SPACE    = 00000004            
FAB$S_PPF_RAT  = 00000008            FHD$B_IDOFFSET   00000000            FIB$C_VBN      = 00000003            
FAB$V_BIO      = 00000005            FHD$B_MPOFFSET   00000001            FIB$K_ACCDATA    0000000A            
FAB$V_BLK      = 00000003            FHD$B_SYSCHAR    0000000D            FIB$K_ALCDATA    0000002C            
FAB$V_BRO      = 00000006            FHD$B_UICGROUP   00000009            FIB$K_DIRDATA    00000016            
FAB$V_CBT      = 00000015            FHD$B_UICMEMBER  00000008            FIB$K_EXTDATA    00000020            
FAB$V_CIF      = 00000019            FHD$B_USERCHAR   0000000C            FIB$K_LENGTH     0000002C            
FAB$V_CR       = 00000001            FHD$C_LENGTH     0000002E            FIB$K_MTALEN     0000001C            
FAB$V_CTG      = 00000014            FHD$C_LEVEL1   = 00000101            FIB$L_ACCTL      00000000            
FAB$V_DEL      = 00000002            FHD$K_LENGTH     0000002E            FIB$L_CNTRLVAL   00000018            
FAB$V_DFW      = 00000005            FHD$S_GROUPPRO = 00000004            FIB$L_EXSZ       00000018            
FAB$V_DLT      = 0000000F            FHD$S_OWNPRO   = 00000004            FIB$L_EXVBN      0000001C            
FAB$V_DMO      = 0000000C            FHD$S_SYSPRO   = 00000004            FIB$L_LOC_ADDR   00000028            
FAB$V_ESC      = 0000001B            FHD$S_WORLDPRO = 00000004            FIB$L_WCC        00000010            
FAB$V_EXE      = 00000007            FHD$V_BADBLOCK = 00000006            FIB$M_ALCON    = 00000001            
FAB$V_FTN      = 00000000            FHD$V_CONTIG   = 00000007            FIB$M_ALCONB   = 00000002            
FAB$V_GET      = 00000001            FHD$V_CONTIGB  = 00000005            FIB$M_ALDEF    = 00000008            
FAB$V_INP      = 00000013            FHD$V_GROUPPRO = 00000008            FIB$M_ALLNAM   = 00000020            
FAB$V_JNL      = 00000016            FHD$V_LOCKED   = 00000006            FIB$M_ALLTYP   = 00000010            
FAB$V_KFO      = 0000001E            FHD$V_MARKDEL  = 00000007            FIB$M_ALLVER   = 00000008            
FAB$V_MSE      = 00000004            FHD$V_OWNPRO   = 00000004            FIB$M_CURPOS   = 00000010            
FAB$V_MXV      = 00000001            FHD$V_READCHECK= 00000003            FIB$M_DLOCK    = 00000002            
FAB$V_NAM      = 00000018            FHD$V_SYSPRO   = 00000000            FIB$M_EXACT    = 00000001            
FAB$V_NEF      = 0000000A            FHD$V_WORLDPRO = 0000000C            FIB$M_EXECUTE  = 00010000            
FAB$V_NFS      = 00000010            FHD$V_WRITCHECK= 00000004            FIB$M_EXTEND   = 00000080            
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page  20
SYMBOL TABLE                                                                                                                     (1)

FIB$M_FILCON   = 00000004            FIB$W_DID        0000000A            FWA$M_DIR      = 00004000            
FIB$M_FINDFID  = 00000800            FIB$W_DID_NUM    0000000A            FWA$M_DUPOK    = 00000001            
FIB$M_HIGHVER  = 00008000            FIB$W_DID_RVN    0000000E            FWA$M_EXP_DEV  = 00800000            
FIB$M_LOWVER   = 00004000            FIB$W_DID_SEQ    0000000C            FWA$M_EXP_DIR  = 00400000            
FIB$M_MARKBAD  = 00000400            FIB$W_EXCTL      00000016            FWA$M_EXP_NAME = 00040000            
FIB$M_NEWVER   = 00000200            FIB$W_FID        00000004            FWA$M_EXP_TYPE = 00020000            
FIB$M_NOHDREXT = 00000200            FIB$W_FID_NUM    00000004            FWA$M_EXP_VER  = 00010000            
FIB$M_NOREAD   = 00000400            FIB$W_FID_RVN    00000008            FWA$M_FNA_PASS = 00000010            
FIB$M_NOTRUNC  = 00000800            FIB$W_FID_SEQ    00000006            FWA$M_NAME     = 00002000            
FIB$M_NOWRITE  = 00000001            FIB$W_LOC_FID    00000022            FWA$M_NAMEFLG  = 00000002            
FIB$M_ONCYL    = 00000002            FIB$W_LOC_NUM    00000022            FWA$M_NAM_DVI  = 00000020            
FIB$M_PRSRV_ATR= 00020000            FIB$W_LOC_RVN    00000026            FWA$M_RLF_PASS = 00000008            
FIB$M_READCK   = 00000200            FIB$W_LOC_SEQ    00000024            FWA$M_TYPE     = 00001000            
FIB$M_REWIND   = 00000008            FIB$W_NMCTL      00000014            FWA$M_TYPEFLG  = 00000004            
FIB$M_SEQONLY  = 00000040            FOP            = 00000020            FWA$M_VERSION  = 00000800            
FIB$M_SPOOL    = 00000010            FWA$B_DIRFLGS    00000004            FWA$Q_DEVICE     0000003C            
FIB$M_SUPERSEDE= 00000400            FWA$B_DIRLEN     00000030            FWA$Q_DIR        00000024            
FIB$M_TRUNC    = 00000100            FWA$B_DIRTERM    00000007            FWA$Q_DIR1       00000044            
FIB$M_UPDATE   = 00000040            FWA$B_DIRWCFLGS  00000005            FWA$Q_DIR2       0000004C            
FIB$M_WILD     = 00000100            FWA$B_ESCFLG     00000008            FWA$Q_FIB        0000000C            
FIB$M_WRITE    = 00000100            FWA$B_ESCTYP     00000009            FWA$Q_FLAGS      00000000            
FIB$M_WRITECK  = 00000020            FWA$B_FLDFLGS    00000001            FWA$Q_LOGNAME    0000001C            
FIB$V_ALCON    = 00000000            FWA$B_LNFLG      00000006            FWA$Q_NAME       00000084            
FIB$V_ALCONB   = 00000001            FWA$B_PARSEFLGS  00000003            FWA$Q_NODE       00000034            
FIB$V_ALDEF    = 00000003            FWA$B_PASSFLGS   00000000            FWA$Q_QUOTED     0000009C            
FIB$V_ALLNAM   = 00000005            FWA$B_UNDERLINE  00000154            FWA$Q_RNS        0000008C            
FIB$V_ALLTYP   = 00000004            FWA$B_WILDFLGS   00000002            FWA$Q_STATBLK    00000094            
FIB$V_ALLVER   = 00000003            FWA$B_XLTMODE    0000000A            FWA$Q_TYPE       0000008C            
FIB$V_CURPOS   = 00000004            FWA$B_XLTTBL     0000000B            FWA$Q_VERSION    00000094            
FIB$V_DLOCK    = 00000001            FWA$C_ALL      = 000000F8            FWA$Q_XLTBUF1    0000000C            
FIB$V_EXACT    = 00000000            FWA$C_DEVBUFSIZ= 0000000F            FWA$Q_XLTBUF2    00000024            
FIB$V_EXECUTE  = 00000010            FWA$C_DIRBUFSIZ= 00000009            FWA$S_DIR_LVLS = 00000003            
FIB$V_EXTEND   = 00000007            FWA$C_FIBLEN   = 0000002C            FWA$T_ATR_LIST   00000164            
FIB$V_FILCON   = 00000002            FWA$C_MAXDEVICE= 0000000F            FWA$T_DEVICEBUF  00000155            
FIB$V_FINDFID  = 0000000B            FWA$C_MAXDIRLEN= 0000003C            FWA$T_DIB        00000174            
FIB$V_HIGHVER  = 0000000F            FWA$C_MAXNAME  = 00000009            FWA$T_DIR1BUF    000000D0            
FIB$V_LOWVER   = 0000000E            FWA$C_MAXNODE  = 00000028            FWA$T_DIR2BUF    000000D9            
FIB$V_MARKBAD  = 0000000A            FWA$C_MAXQUOTED= 0000007F            FWA$T_FIBBUF     000000A4            
FIB$V_NEWVER   = 00000009            FWA$C_MAXSUBDIR= 00000007            FWA$T_NAMEBUF    00000118            
FIB$V_NOHDREXT = 00000009            FWA$C_MAXTYPE  = 00000003            FWA$T_NODEBUF    0000012C            
FIB$V_NOREAD   = 0000000A            FWA$C_MAXVER   = 00000006            FWA$T_TYPEBUF    00000122            
FIB$V_NOTRUNC  = 0000000B            FWA$C_NAMBUFSIZ= 0000000A            FWA$T_VERBUF     00000126            
FIB$V_NOWRITE  = 00000000            FWA$C_NODBUFSIZ= 00000028            FWA$T_XLTBUFF1   00000164            
FIB$V_ONCYL    = 00000001            FWA$C_RNSBUFSIZ= 00000014            FWA$T_XLTBUFF2   000001A4            
FIB$V_PRSRV_ATR= 00000011            FWA$C_TYPBUFSIZ= 00000004            FWA$V_CUR_VER  = 00000006            
FIB$V_READCK   = 00000009            FWA$C_VERBUFSIZ= 00000006            FWA$V_DEVICE   = 0000000F            
FIB$V_REWIND   = 00000003            FWA$C_XLTBUFSIZ= 0000003F            FWA$V_DIR      = 0000000E            
FIB$V_SEQONLY  = 00000006            FWA$L_BUFFLG     00000014            FWA$V_DIR1     = 00000020            
FIB$V_SPOOL    = 00000004            FWA$L_DEVNODADR  00000020            FWA$V_DIR2     = 00000021            
FIB$V_SUPERSEDE= 0000000A            FWA$L_ESCSTRING  00000008            FWA$V_DIR_LVLS = 0000001D            
FIB$V_TRUNC    = 00000008            FWA$L_HBK        00000098            FWA$V_DUPOK    = 00000000            
FIB$V_UPDATE   = 00000006            FWA$L_LOOKUP     0000001C            FWA$V_EXP_DEV  = 00000017            
FIB$V_WILD     = 00000008            FWA$L_SBN        00000094            FWA$V_EXP_DIR  = 00000016            
FIB$V_WRITE    = 00000008            FWA$L_UIC        0000001C            FWA$V_EXP_NAME = 00000012            
FIB$V_WRITECK  = 00000005            FWA$L_XLTCNT     0000002C            FWA$V_EXP_TYPE = 00000011            
FIB$W_ALLOC      00000022            FWA$L_XLTSIZ     00000018            FWA$V_EXP_VER  = 00000010            
FIB$W_CNTRLFUNC  00000016            FWA$M_DEVICE   = 00008000            FWA$V_FNA_PASS = 00000004            
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page  21
SYMBOL TABLE                                                                                                                     (1)

FWA$V_GRPMBR   = 0000001B            IFB$K_BLN_SEQ    0000005C            IFB$V_ORG      = 00000004            
FWA$V_LOGNAME  = 00000030            IFB$K_FHAEND     00000050            IFB$V_PPF_IMAGE= 00000022            
FWA$V_NAME     = 0000000D            IFB$L_ARGLST     00000018            IFB$V_PPF_INPUT= 0000002E            
FWA$V_NAMEFLG  = 00000001            IFB$L_ASBADDR    00000014            IFB$V_PUT      = 00000000            
FWA$V_NAM_DVI  = 00000005            IFB$L_AS_DEV     00000054            IFB$V_RFM      = 00000000            
FWA$V_NETSTR   = 00000032            IFB$L_BDB_BLNK   00000034            IFB$V_RWC      = 00000027            
FWA$V_NODE     = 00000019            IFB$L_BDB_FLNK   00000030            IFB$V_RW_ATTR  = 00000034            
FWA$V_OBJTYPE  = 00000031            IFB$L_BKPBITS    00000004            IFB$V_SCF      = 0000002A            
FWA$V_QUOTED   = 0000001A            IFB$L_BWB        0000000C            IFB$V_SPL      = 00000029            
FWA$V_RLF_PASS = 00000003            IFB$L_DVBN       00000058            IFB$V_SQO      = 0000002D            
FWA$V_TYPE     = 0000000C            IFB$L_EBK        00000044            IFB$V_TEF      = 00000036            
FWA$V_TYPEFLG  = 00000002            IFB$L_FRB_PTR    00000028            IFB$V_TMP      = 00000035            
FWA$V_VERSION  = 0000000B            IFB$L_FWA_BDB    00000050            IFB$V_TRN      = 00000004            
FWA$V_WC_NAME  = 00000015            IFB$L_HBK        00000040            IFB$V_UPD      = 00000003            
FWA$V_WC_TYPE  = 00000014            IFB$L_IDX_PTR    00000054            IFB$V_WRTACC   = 00000030            
FWA$V_WC_VER   = 00000013            IFB$L_IOS        0000000C            IFB$W_ASDEVBSIZ  0000005A            
FWA$V_WILDCARD = 00000018            IFB$L_IOS4       00000010            IFB$W_BKS_BYTES  0000005C            
FWA$V_WILD_DIR = 0000001C            IFB$L_IRAB_LNK   0000001C            IFB$W_BKS_RECS   0000005E            
FWA$V_WILD_GRP = 00000028            IFB$L_LAST_FAB   00000024            IFB$W_CHNL       00000020            
FWA$V_WILD_MBR = 00000029            IFB$L_LOCK_BDB   00000050            IFB$W_DEQ        0000004E            
FWA$V_WILD_SFD1= 00000029            IFB$L_MRN        00000054            IFB$W_DEVBUFSIZ  00000038            
FWA$V_WILD_UFD = 00000028            IFB$L_NRP_LNK    00000050            IFB$W_EBK0       00000044            
FWA$W_ESCIFI     0000000A            IFB$L_NWA_PTR    00000028            IFB$W_EBK2       00000046            
FWA$W_FNAMSIZ    00000018            IFB$L_PRIM_DEV   00000000            IFB$W_FFB        00000048            
FWA$W_PRO        00000020            IFB$L_RLB_LNK    0000002C            IFB$W_IOS2       0000000E            
FWA$W_UCHAR      0000002C            IFB$L_RNS_LEN    00000050            IFB$W_LRL        0000003E            
GBL...         = 00000000            IFB$M_BIO      = 00000020            IFB$W_MRS        0000004C            
IFB$B_AMAX       00000059            IFB$M_BRO      = 00000040            IFB$W_RTDEQ      0000003A            
IFB$B_AVBN       00000058            IFB$M_DEL      = 00000004            IMP$B_PROT       00000002            
IFB$B_BID        00000008            IFB$M_EXE      = 00000080            IMP$C_ASYEFN   = 0000001E            
IFB$B_BKS        0000004A            IFB$M_GET      = 00000002            IMP$C_ASYQIOEFN= 0000001F            
IFB$B_BLN        00000009            IFB$M_PUT      = 00000001            IMP$C_ENTPERSEG= 0000000F            
IFB$B_EFN        0000000B            IFB$M_TRN      = 00000010            IMP$C_IOREFN   = 0000001E            
IFB$B_EXTRABUF   0000005D            IFB$M_UPD      = 00000008            IMP$C_MBXEFN   = 0000001A            
IFB$B_FAC        00000022            IFB$S_ORG      = 00000004            IMP$C_NPIOFILES= 0000000C            
IFB$B_FSZ        0000004B            IFB$S_RFM      = 00000004            IMP$C_SYNCEFN  = 0000001B            
IFB$B_KBUFSZ     0000005C            IFB$V_ACCESSED = 00000025            IMP$L_FREEPGLH   0000000C            
IFB$B_MODE       0000000A            IFB$V_ANSI_D   = 00000026            IMP$L_IFABTBL    00000018            
IFB$B_NUM_KEYS   0000005A            IFB$V_ASYNC    = 00000023            IMP$L_IFBTBLINK  00000024            
IFB$B_ORGCASE    00000023            IFB$V_ASYNCWAIT= 00000024            IMP$L_IOSEGADDR  00000004            
IFB$B_RAT        0000003D            IFB$V_BIO      = 00000005            IMP$L_IOSEGLEN   00000008            
IFB$B_RFMORG     0000003C            IFB$V_BRO      = 00000006            IMP$L_IRABTBL    0000001C            
IFB$B_UBUFSZ     0000005B            IFB$V_BUSY     = 00000020            IMP$L_IRBTBLINK  00000064            
IFB$C_BID      = 0000000B            IFB$V_CREATE   = 00000032            IMP$L_SAVED_SP   00000014            
IFB$C_BLN        00000060            IFB$V_DAP      = 0000003E            IMP$V_AST      = 00000001            
IFB$C_BLN_IDX    00000060            IFB$V_DAP_OPEN = 0000003D            IMP$V_IIOS     = 00000000            
IFB$C_BLN_REL    00000060            IFB$V_DEL      = 00000002            IMP$V_IORUNDOWN= 00000004            
IFB$C_BLN_SEQ    0000005C            IFB$V_DFW      = 0000002C            IMP$V_NOP0BUFS = 00000005            
IFB$C_DIR      = 00000003            IFB$V_DLT      = 0000002B            IMP$V_TEMP1    = 00000002            
IFB$C_FHAEND     00000050            IFB$V_DMO      = 00000028            IMP$V_TEMP2    = 00000003            
IFB$C_IDX      = 00000002            IFB$V_EOF      = 00000021            IMP$W_ENTPERSEG  00000020            
IFB$C_MAXORG   = 00000002            IFB$V_EXE      = 00000007            IMP$W_NUM_IFABS  00000022            
IFB$C_REL      = 00000001            IFB$V_GET      = 00000001            IMP$W_RMSSTATUS  00000000            
IFB$C_SEQ      = 00000000            IFB$V_MSE      = 00000031            IO$M_ABORT     = 00000100            
IFB$K_BLN        00000060            IFB$V_NORECLK  = 00000033            IO$M_ACCESS    = 00000040            
IFB$K_BLN_IDX    00000060            IFB$V_NSP      = 0000003F            IO$M_ATTNAST   = 00000100            
IFB$K_BLN_REL    00000060            IFB$V_NWA      = 0000003C            IO$M_BINARY    = 00000040            
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page  22
SYMBOL TABLE                                                                                                                     (1)

IO$M_CANCTRLO  = 00000040            IO$V_INTERRUPT = 00000006            IO$_VIRTUAL    = 0000003F            
IO$M_COMMOD    = 00000040            IO$V_INTSKIP   = 00000008            IO$_WRITECHECK = 0000000A            
IO$M_CREATE    = 00000080            IO$V_MOUNT     = 00000009            IO$_WRITECHECKH= 00000018            
IO$M_CTRLCAST  = 00000100            IO$V_NOECHO    = 00000006            IO$_WRITEHEAD  = 0000000D            
IO$M_CTRLYAST  = 00000080            IO$V_NOFILTR   = 00000009            IO$_WRITELBLK  = 00000020            
IO$M_CVTLOW    = 00000100            IO$V_NOFORMAT  = 00000008            IO$_WRITEMARK  = 0000001C            
IO$M_DATACHECK = 00004000            IO$V_NOW       = 00000006            IO$_WRITEOF    = 00000028            
IO$M_DELETE    = 00000100            IO$V_NOWAIT    = 00000007            IO$_WRITEPBLK  = 0000000B            
IO$M_DMOUNT    = 00000400            IO$V_PACKED    = 00000007            IO$_WRITETRACKD= 0000000F            
IO$M_DSABLMBX  = 00000400            IO$V_PURGE     = 0000000B            IO$_WRITEVBLK  = 00000030            
IO$M_ENABLMBX  = 00000080            IO$V_READATTN  = 00000007            L$RMS01          00000000 R     05   
IO$M_FCODE     = 0000003F            IO$V_REVERSE   = 00000006            L$RMS03          00000008 R     05   
IO$M_HANGUP    = 00000200            IO$V_SHUTDOWN  = 00000007            NF$NETWORK0      00000000 R     04   
IO$M_INHERLOG  = 00000800            IO$V_STARTUP   = 00000006            NF$NETWORK2      00000011 R     04   
IO$M_INHEXTGAP = 00001000            IO$V_SYNCH     = 00000009            NT$ACCESS        ********   X   04   
IO$M_INHRETRY  = 00008000            IO$V_TIMED     = 00000007            NT$CLOSE         ********   X   04   
IO$M_INHSEEK   = 00001000            IO$V_TRMNOECHO = 0000000C            NT$DEACCESS      ********   X   04   
IO$M_INTERRUPT = 00000040            IO$V_WRTATTN   = 00000008            NTACC            00000016 R     02   
IO$M_INTSKIP   = 00000100            IO$_ACCESS     = 00000032            NTDAC            00000007 R     06   
IO$M_MOUNT     = 00000200            IO$_ACPCONTROL = 00000038            P4_P2            00000167 R     02   
IO$M_NOECHO    = 00000040            IO$_CREATE     = 00000033            PIO$GL_FMLH      ********   X   02   
IO$M_NOFILTR   = 00000200            IO$_DEACCESS   = 00000034            PSL$C_EXEC     = 00000001            
IO$M_NOFORMAT  = 00000100            IO$_DELETE     = 00000035            PSL$C_KERNEL   = 00000000            
IO$M_NOW       = 00000040            IO$_DIAGNOSE   = 0000001D            PSL$C_SUPER    = 00000002            
IO$M_NOWAIT    = 00000080            IO$_DRVCLR     = 00000004            PSL$C_USER     = 00000003            
IO$M_PACKED    = 00000080            IO$_ERASETAPE  = 00000006            PSL$M_CM       = 80000000            
IO$M_PURGE     = 00000800            IO$_LOGICAL    = 0000002F            PSL$M_CURMOD   = 03000000            
IO$M_READATTN  = 00000080            IO$_MODIFY     = 00000036            PSL$M_DV       = 00000080            
IO$M_REVERSE   = 00000040            IO$_MOUNT      = 00000039            PSL$M_FPD      = 08000000            
IO$M_SHUTDOWN  = 00000080            IO$_NOP        = 00000000            PSL$M_FU       = 00000040            
IO$M_STARTUP   = 00000040            IO$_OFFSET     = 00000006            PSL$M_IPL      = 001F0000            
IO$M_SYNCH     = 00000200            IO$_PACKACK    = 00000008            PSL$M_IS       = 04000000            
IO$M_TIMED     = 00000080            IO$_PHYSICAL   = 0000001F            PSL$M_IV       = 00000020            
IO$M_TRMNOECHO = 00001000            IO$_READHEAD   = 0000000E            PSL$M_PRVMOD   = 00C00000            
IO$M_WRTATTN   = 00000100            IO$_READLBLK   = 00000021            PSL$M_SAFBITS  = 000037FF            
IO$S_FCODE     = 00000006            IO$_READPBLK   = 0000000C            PSL$M_TBIT     = 00000010            
IO$V_ABORT     = 00000008            IO$_READPRESET = 00000019            PSL$M_TP       = 40000000            
IO$V_ACCESS    = 00000006            IO$_READPROMPT = 00000037            PSL$S_CURMOD   = 00000002            
IO$V_ATTNAST   = 00000008            IO$_READTRACKD = 00000010            PSL$S_IPL      = 00000005            
IO$V_BINARY    = 00000006            IO$_READVBLK   = 00000031            PSL$S_PRVMOD   = 00000002            
IO$V_CANCTRLO  = 00000006            IO$_RECAL      = 00000003            PSL$V_CM       = 0000001F            
IO$V_COMMOD    = 00000006            IO$_RELEASE    = 00000005            PSL$V_CURMOD   = 00000018            
IO$V_CREATE    = 00000007            IO$_RETCENTER  = 00000007            PSL$V_DV       = 00000007            
IO$V_CTRLCAST  = 00000008            IO$_REWIND     = 00000024            PSL$V_FPD      = 0000001B            
IO$V_CTRLYAST  = 00000007            IO$_REWINDOFF  = 00000022            PSL$V_FU       = 00000006            
IO$V_CVTLOW    = 00000008            IO$_SEARCH     = 00000009            PSL$V_IPL      = 00000010            
IO$V_DATACHECK = 0000000E            IO$_SEEK       = 00000002            PSL$V_IS       = 0000001A            
IO$V_DELETE    = 00000008            IO$_SENSECHAR  = 0000001B            PSL$V_IV       = 00000005            
IO$V_DMOUNT    = 0000000A            IO$_SENSEMODE  = 00000027            PSL$V_PRVMOD   = 00000016            
IO$V_DSABLMBX  = 0000000A            IO$_SETCHAR    = 0000001A            PSL$V_TBIT     = 00000004            
IO$V_ENABLMBX  = 00000007            IO$_SETMODE    = 00000023            PSL$V_TP       = 0000001E            
IO$V_FCODE     = 00000000            IO$_SKIPFILE   = 00000025            RM$ACCESS        00000000 RG    02   
IO$V_HANGUP    = 00000009            IO$_SKIPRECORD = 00000026            RM$CREACC_SET1   00000087 RG    02   
IO$V_INHERLOG  = 0000000B            IO$_SPACEFILE  = 00000002            RM$CREACC_SET2   0000012C RG    02   
IO$V_INHEXTGAP = 0000000C            IO$_SPACERECORD= 00000009            RM$CREACC_SET3   0000013B RG    02   
IO$V_INHRETRY  = 0000000F            IO$_STARTSPNDL = 00000019            RM$DEACCESS      0000000A RG    06   
IO$V_INHSEEK   = 0000000C            IO$_UNLOAD     = 00000001            RM$FCPFNC        ********   X   02   
RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page  23
SYMBOL TABLE                                                                                                                     (1)

RM$FCPFNC_ALT4   ********   X   06   
RM$FCP_P4_P2     00000181 RG    02   
RM$GETSPC1       ********   X   06   
RM$MAPERR        ********   X   05   
RM$OPEN_XAB      ********   X   02   
RM$OPEN_XAB1     ********   X   02   
RM$RETSPC1       ********   X   06   
RM$SETEBK        0000006E RG    02   
RM$SETHBK        0000002E RG    02   
RM$XAB_SCAN      ********   X   06   
RMACC            00000019 R     02   
RMS$_ACC         ********   X   05   
RMS$_DAC         ********   X   05   
SETRTV           00000121 R     02   
TPT$L_ACCESS     ********   X   02   
TPT$L_DEACCES    ********   X   06   
XAB$C_PRO      = 00000013            
XAB$C_PROLEN     00000010            
XAB$C_RDT      = 0000001E            
XAB$C_RDTLEN     00000014            
XAB$K_PROLEN     00000010            
XAB$K_RDTLEN     00000014            
XAB$L_UIC        0000000C            
XAB$M_NODEL    = 00000008            
XAB$M_NOEXE    = 00000004            
XAB$M_NOREAD   = 00000001            
XAB$M_NOWRITE  = 00000002            
XAB$S_GRP      = 00000004            
XAB$S_OWN      = 00000004            
XAB$S_SYS      = 00000004            
XAB$S_WLD      = 00000004            
XAB$V_GRP      = 00000008            
XAB$V_NODEL    = 00000003            
XAB$V_NOEXE    = 00000002            
XAB$V_NOREAD   = 00000000            
XAB$V_NOWRITE  = 00000001            
XAB$V_OWN      = 00000004            
XAB$V_SYS      = 00000000            
XAB$V_WLD      = 0000000C            
XAB$W_GRP        0000000E            
XAB$W_MBM        0000000C            
XAB$W_PRO        00000008            
XBC$C_CLSPRO     ********   X   06   
XBC$C_CLSRDT     ********   X   06   


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
F$RMSOPEN0       00000185      02     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  
$ABS$            00000200      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
NF$NETWORK       0000002C      04     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  
L$RMS0           00000010      05     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  
F$RMSCLOSE0      00000099      06     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  


RM0ACCESS       FILE ACCESS/DEACCESS ROUTINES                    21-AUG-1978 21:14:19   VAX-11 MACRO X0.3-11               Page  24
PROGRAM SECTION SYNOPSIS                                                                                                         (1)

THERE WERE NO ERRORS OR WARNINGS.
3402. BYTES LEFT IN FREE MEMORY POOL.
1222. BYTES OF RECLAIMED MEMORY.
OBJ$:RM0ACCESS,LIS$:RM0ACCESS/-SP=EXECML$/ML,LIB$:R/ML,SRC$:RM0ACCESS
49 MLB DIR RDS - 1249 GETS TO DEFINE 31 MACROS. 115 INTER. FILE WRITES. 
