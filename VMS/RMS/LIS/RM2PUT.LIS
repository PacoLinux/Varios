RM2PUT          RELATIVE SPECIFIC PUT                            21-AUG-1978 21:54:57   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      42  DECLARATIONS
   (1)      71  RM$PUT2 - HIGH LEVEL RELATIVE $PUT
   (1)     268  RM$PUTUPD2  -  COMMON $PUT AND $UPDATE RELATIVE
RM2PUT          RELATIVE SPECIFIC PUT                            21-AUG-1978 21:54:57   VAX-11 MACRO X0.3-11               Page   1
010                                                                                                                              (1)

                                     0000     1 	$BEGIN	RM2PUT,010,$RMS2,<RELATIVE SPECIFIC PUT>
                                     0000     2 ;
                                     0000     3 ; COPYRIGHT (C) 1977, 1978
                                     0000     4 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     5 ;
                                     0000     6 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     7 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000     8 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000     9 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    10 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    11 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    12 ; REMAIN IN DEC.
                                     0000    13 ;
                                     0000    14 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    15 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    16 ; CORPORATION.
                                     0000    17 ;
                                     0000    18 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    19 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    20 ;
                                     0000    21 ;++
                                     0000    22 ; FACILITY: RMS32
                                     0000    23 ;
                                     0000    24 ; ABSTRACT:
                                     0000    25 ;		THIS MODULE PROVIDES RELATIVE FILE ORGANIZATION
                                     0000    26 ;		SPECIFIC PROCESSING FOR THE $PUT FUNCTION.
                                     0000    27 ;
                                     0000    28 ;
                                     0000    29 ; ENVIRONMENT:
                                     0000    30 ;		STAR PROCESSOR RUNNING STARLET EXEC.
                                     0000    31 ;
                                     0000    32 ; AUTHOR: L F LAVERDURE,	 CREATION DATE: 7-NOV-77
                                     0000    33 ;
                                     0000    34 ; MODIFIED BY:
                                     0000    35 ;
                                     0000    36 ;	L F LAVERDURE,      18-AUG-78  13:32	; FIX LONG PROBES
                                     0000    37 ;	L F LAVERDURE,   20-JUN-78  17:25
                                     0000    38 ;	J A KRYCKA,	 01-AUG-78  14:15
                                     0000    39 ; 01	- 
                                     0000    40 ;--
RM2PUT          RELATIVE SPECIFIC PUT                            21-AUG-1978 21:54:57   VAX-11 MACRO X0.3-11               Page   2
010             DECLARATIONS                                                                                                     (1)

                                     0000    42 	.SBTTL	DECLARATIONS
                                     0000    43 ;
                                     0000    44 ; INCLUDE FILES:
                                     0000    45 ;
                                     0000    46 
                                     0000    47 ;
                                     0000    48 ; MACROS:
                                     0000    49 ;
                                     0000    50 	$IFBDEF
                                     0000    51 	$BDBDEF
                                     0000    52 	$CSHDEF
                                     0000    53 	$DLCDEF
                                     0000    54 	$FABDEF
                                     0000    55 	$FIBDEF
                                     0000    56 	$RABDEF
                                     0000    57 	$IRBDEF
                                     0000    58 	$RMSDEF
                                     0000    59 	.LIST MEB
                                     0000    60 
                                     0000    61 ;
                                     0000    62 ; EQUATED SYMBOLS:
                                     0000    63 ;
                           00000020  0000    64 	ROP=RAB$L_ROP*8			;BIT OFFSET TO ROP FIELD
                                     0000    65 
                                     0000    66 ;
                                     0000    67 ; OWN STORAGE:
                                     0000    68 ;
                                     0000    69 
RM2PUT          RELATIVE SPECIFIC PUT                            21-AUG-1978 21:54:57   VAX-11 MACRO X0.3-11               Page   3
010             RM$PUT2 - HIGH LEVEL RELATIVE $PUT                                                                               (1)

                                     0000    71 	.SBTTL RM$PUT2 - HIGH LEVEL RELATIVE $PUT
                                     0000    72 ;++
                                     0000    73 ; FUNCTIONAL DESCRIPTION:
                                     0000    74 ;
                                     0000    75 ; THIS MODULE PERFORMS THE FOLLOWING FUNCTIONS:
                                     0000    76 ;
                                     0000    77 ;	1.  CALLS RM$GETREC2_PUT TO GAIN ACCESS TO THE BUCKET, LOCKING IT,
                                     0000    78 ;	    AND UNLOCKING ANY RECORD AUTOMATICALLY LOCKED
                                     0000    79 ;	2.  IF THE RETURN FROM RM$GETREC2_PUT INDICATES THAT THE DESIRED
                                     0000    80 ;	    RECORD IS PAST THE CURRENT END OF FILE, CALLS RM$EXTEND2 TO EXTEND
                                     0000    81 ;	    THE FILE AND TRIES AGAIN
                                     0000    82 ;	3.  IF MANUAL LOCKING IS SPECIFIED, THE RECORD TO BE WRITTEN IS LOCKED,
                                     0000    83 ;	    OTHERWISE THE ROUTINE MERELY CHECKS THAT THE RECORD IS NOT LOCKED
                                     0000    84 ;	    BY ANOTHER STREAM.
                                     0000    85 ;	4.  THE RECORD IS CHECKED FOR NON-EXISTENCE AND IF SO THE RECORD IS
                                     0000    86 ;	    COPIED TO THE BUCKET BUFFER.
                                     0000    87 ;	5.  ACCESS TO THE BUCKET IS RELEASED, CAUSING THE BUFFER TO BE WRITTEN
                                     0000    88 ;	    UNLESS DEFERRED WRITE HAS BEEN SPECIFIED (AT OPEN TIME).
                                     0000    89 ;
                                     0000    90 ; CALLING SEQUENCE:
                                     0000    91 ;
                                     0000    92 ; ENTERED VIA CASE BRANCH FROM RM$PUT AT RM$PUT2.
                                     0000    93 ;
                                     0000    94 ; INPUT PARAMETERS:
                                     0000    95 ;
                                     0000    96 ;	R11	IMPURE AREA ADDRESS
                                     0000    97 ;	R10	IFAB ADDR
                                     0000    98 ;	R9	IRAB ADDR
                                     0000    99 ;	R8	RAB ADDR
                                     0000   100 ;
                                     0000   101 ; IMPLICIT INPUTS:
                                     0000   102 ;
                                     0000   103 ;	THE CONTENTS OF THE RAB AND RELATED IRAB AND IFAB.
                                     0000   104 ;
                                     0000   105 ; OUTPUT PARAMETERS:
                                     0000   106 ;
                                     0000   107 ;	R1 THRU R7	DESTROYED
                                     0000   108 ;	R0		STATUS
                                     0000   109 ;
                                     0000   110 ; IMPLICIT OUTPUTS:
                                     0000   111 ;
                                     0000   112 ;	VARIOUS FIELDS OF THE RAB ARE FILLED IN TO REFLECT
                                     0000   113 ;	THE STATUS OF THE OPERATION (SEE FUNCTIONAL SPEC
                                     0000   114 ;	FOR DETAILS).
                                     0000   115 ;
                                     0000   116 ;	THE IRAB IS SIMILARLY UPDATED.
                                     0000   117 ;
                                     0000   118 ; COMPLETION CODES:
                                     0000   119 ;
                                     0000   120 ;	STANDARD RMS (SEE FUNCTIONAL SPEC).
                                     0000   121 ;
                                     0000   122 ; SIDE EFFECTS:
                                     0000   123 ;
                                     0000   124 ;	NONE
                                     0000   125 ;
                                     0000   126 ;--
RM2PUT          RELATIVE SPECIFIC PUT                            21-AUG-1978 21:54:57   VAX-11 MACRO X0.3-11               Page   4
010             RM$PUT2 - HIGH LEVEL RELATIVE $PUT                                                                               (1)

                                     0000   128 RM$PUT2::
                                     0000   129 	$TSTPT	PUT2
                 00000200'9F     D6  0000       		INCL	@#PIO$GL_FMLH+512+TPT$L_PUT2
            6A            3E     E0  0006   130 	BBS	#IFB$V_DAP,(R10),NTPUT	; BRANCH IF NETWORK FUNCTION
                          27         0009       
                                     000A   131 	$CSHFLAGS	LOCK			; REQUIRE LOCK ON BUCKET
            53            01     D0  000A       		MOVL #$$.TMP,R3
                          FFF0'  30  000D   132 	BSBW	RM$GETREC2_PUT			; GO ACCESS BUCKET
            4C            50     E9  0010   133 CHKERR:	BLBC	R0,CHKEOF			; BRANCH ON ERROR
                                     0013   134 ;
                                     0013   135 ;  HANDLE RECORD LOCKING, IF REQUIRED
                                     0013   136 ;
                                     0013   137 ;  IF AUTOMATIC LOCKING (RAB$V_ULK = 0) , NEED MERELY CHECK THAT RECORD
                                     0013   138 ;  IS NOT LOCKED SINCE BUCKET IS LOCKED (AND NO OTHER USER COULD POSSIBLY
                                     0013   139 ;  LOCK THE RECORD UNTIL THE BUCKET IS RELEASED).
                                     0013   140 ;
                                     0013   141 ;  IF MANUAL UNLOCKING (RAB$V_ULK = 1), MUST LOCK THE RECORD.
                                     0013   142 ;
            6A            33     E0  0013   143 	BBS	#IFB$V_NORECLK,(R10),CHKCTL	; BRANCH IF NO LOCKING
                          23         0016       
            51         34 A9     D0  0017   144 	MOVL	IRB$L_RP(R9),R1			; GET RECORD #
                          52     D4  001B   145 	CLRL	R2				; ZERO HI HALF
            68            32     E0  001D   146 	BBS	#RAB$V_ULK+ROP,(R8),LOCK	; BRANCH IF MANUAL LOCKING
                          13         0020       
                          FFDC'  30  0021   147 	BSBW	RM$QUERY_LCK			; O.K. TO WRITE?
       8021 8F            50     B1  0024   148 	CMPW	R0,#RMS$_OK_RLK&^XFFFF		; ONLY READ ALLOWED?
                          0C     12  0029   149 	BNEQ	CHKLCK				; BRANCH IF NOT (SO FAR SO GOOD)
                                     002B   150 	$PSECT_BR	L$RMS2
                          FFD2'  31  002B       		BRW	L$RMS20
                                     002E       		.SAVE
                                 00000000       		.PSECT	L$RMS2,GBL,NOWRT
                                     0000       L$RMS20:
                                     0000   151 	RMSERR	RLK				; SWITCH STATUS TO ERROR
            50       82AA 8F     3C  0000       		MOVZWL	#<RMS$_RLK&^XFFFF>,R0
                                     0005   152 	$PSECT_RESTORE				; & FALL THRU
                                 0000002E       		.RESTORE
                                     002E   153 ;
                                     002E   154 ;  HANDLE ERROR
                                     002E   155 ;
                                     002E   156 CLEAN:	$PSECT_BR	L$RMS2
                          FFD4'  31  002E       		BRW	L$RMS21
                                     0031       		.SAVE
                                 00000005       		.PSECT	L$RMS2,GBL,NOWRT
                                     0005       L$RMS21:
            57            50     D0  0005   157 CLEAN1:	MOVL	R0,R7				; SAVE STATUS CODE
                          FFF5'  31  0008   158 CLEAN2:	BRW	RM$CLN2_PUT			; GO CLEAN UP
                                     000B   159 	$PSECT_RESTORE
                                 00000031       		.RESTORE
                                     0031   160 ;++
                                     0031   161 ;
                                     0031   162 ;  PERFORM NETWORK PUT FUNCTION
                                     0031   163 ;
                                     0031   164 ;--
                                     0031   165 NTPUT:	$PSECT_BR	NF$NETWORK
                          FFCC'  31  0031       		BRW	NF$NETWORK2
                                     0034       		.SAVE
                                 00000000       		.PSECT	NF$NETWORK,GBL,NOWRT
RM2PUT          RELATIVE SPECIFIC PUT                            21-AUG-1978 21:54:57   VAX-11 MACRO X0.3-11               Page   5
010             RM$PUT2 - HIGH LEVEL RELATIVE $PUT                                                                               (1)

                                     0000       NF$NETWORK2:
                          FFFD'  30  0000   166 	BSBW	NT$PUT2			; PERFORM PUT AT REMOTE NODE
            03            50     E9  0003   167 	BLBC	R0,10$			; BRANCH ON ERROR
                          FFF7'  31  0006   168 	BRW	RM$EXRMS		; EXIT RMS
                          FFF4'  31  0009   169 10$:	BRW	RM$CLN2_PUT		; BRANCH AID
                                     000C   170 	$PSECT_RESTORE
                                 00000034       		.RESTORE
                                     0034   171 ;
                                     0034   172 ;  MANUAL LOCKING.  MUST LOCK THE RECORD
                                     0034   173 ;
                          FFC9'  30  0034   174 LOCK:	BSBW	RM$LOCK				; GO LOCK RECORD
            F4            50     E9  0037   175 CHKLCK:	BLBC	R0,CLEAN			; BRANCH ON FAILURE
                                     003A   176 ;
                                     003A   177 ;  LOCKING ALL SET.
                                     003A   178 ;  CHECK FOR RECORD ALREADY EXISTENT AND IF NOT, COPY THE RECORD TO THE BUFFER.
                                     003A   179 ;
            08            65     91  003A   180 CHKCTL:	CMPB	(R5),#DLC$M_REC			; DOES RECORD EXIST?
                          04     12  003D   181 	BNEQ	10$				; BRANCH IF NOT (OK TO PUT)
            68            24     E1  003F   182 	BBC	#RAB$V_UIF+ROP,(R8),ERRREX	; ERROR UNLESS UIF BIT SET
                          19         0042       
                          1D     10  0043   183 10$:	BSBB	RM$PUTUPD2			; GO COPY RECORD
                                     0045   184 						; (NOTE: ASSUMES AP NOT = 0)
            11            57     E9  0045   185 	BLBC	R7,30$				; BRANCH ON ERROR
                                     0048   186 	ASSUME	RAB$C_SEQ EQ 0
                       1E A8     95  0048   187 	TSTB	RAB$B_RAC(R8)			; SEQUENTAIL ACCESS?
                          06     12  004B   188 	BNEQ	20$				; BRANCH IF NOT
            01         34 A9     C1  004D   189 	ADDL3	IRB$L_RP(R9),#1,IRB$L_NRP(R9)	; YES - SET NRP FROM RP + 1
                       2C A9         0051       
                       34 A9     D4  0053   190 20$:	CLRL	IRB$L_RP(R9)			; SHOW NO CURRENT RECORD
                          FFA7'  31  0056   191 	BRW	RM$RLS2				; GO FINISH UP
                          FFA4'  31  0059   192 30$:	BRW	RM$CLN2_PUT			; CLEAN UP ON ERROR
                                     005C   193 ;
                                     005C   194 ;  RECORD ALREADY EXISTS.  DECLARE ERROR AND GO CLEAN UP.
                                     005C   195 ;
                                     005C   196 ERRREX:	$PSECT_BR	L$RMS2
                          FFAC'  31  005C       		BRW	L$RMS23
                                     005F       		.SAVE
                                 0000000B       		.PSECT	L$RMS2,GBL,NOWRT
                                     000B       L$RMS23:
                                     000B   197 	RMSERR	REX,R7				; SET ERROR CODE
            57       82A2 8F     3C  000B       		MOVZWL	#<RMS$_REX&^XFFFF>,R7
                          F6     11  0010   198 	BRB	CLEAN2				; GO CLEAN UP
                                     0012   199 	$PSECT_RESTORE
                                 0000005F       		.RESTORE
                                     005F   200 ;
                                     005F   201 ;  CHECK IF ERROR FROM RM$GETREC2_PUT IS DUE TO EOF, AND IF SO EXTEND THE FILE.
                                     005F   202 ;
                                     005F   203 CHKEOF:	$PSECT_BR	F$RMSEXTEND2
                          FF9E'  31  005F       		BRW	F$RMSEXTEND24
                                     0062       		.SAVE
                                 00000000       		.PSECT	F$RMSEXTEND2,GBL,NOWRT
                                     0000       F$RMSEXTEND24:
       827A 8F            50     B1  0000   204 	CMPW	R0,#RMS$_EOF&^XFFFF		; IS ERROR = EOF?
                          57     12  0005   205 	BNEQ	10$				; BRANCH IF NOT
            56            52     D0  0007   206 	MOVL	R2,R6				; SAVE DESIRED HI VBN + 1
                          FFF3'  30  000A   207 	BSBW	RM$LOCK_PROLOG			; LOCK VBN 1
            4E            50     E9  000D   208 	BLBC	R0,10$				; BRANCH ON ERROR
RM2PUT          RELATIVE SPECIFIC PUT                            21-AUG-1978 21:54:57   VAX-11 MACRO X0.3-11               Page   6
010             RM$PUT2 - HIGH LEVEL RELATIVE $PUT                                                                               (1)

                                     0010   209 ;
                                     0010   210 ;  PROLOG IS NOW INTERLOCKED, THUS PREVENTING OTHER EXTENDS.
                                     0010   211 ;  CHECK THAT EXTEND IS STILL REQUIRED.
                                     0010   212 ;
            56         44 AA     D1  0010   213 	CMPL	IFB$L_EBK(R10),R6		; STILL NEED TO EXTEND EOF?
                          4B     1E  0014   214 	BGEQU	20$				; BRANCH IF NOT
                          56     D7  0016   215 	DECL	R6				; ADJUST FOR HBK
            56         40 AA     C2  0018   216 	SUBL2	IFB$L_HBK(R10),R6		; COMPUTE # OF BLOCKS NEEDED
                          48     1B  001C   217 	BLEQU	25$				; BRANCH IF NONE (NEED ONLY FORMAT)
                                     001E   218 ;
                                     001E   219 ;  ALLOCATE A FIB TO DO THE EXTEND
                                     001E   220 ;
            52            2C     D0  001E   221 	MOVL	#FIB$C_ALCDATA,R2		; SIZE OF FIB
                          FFDC'  30  0021   222 	BSBW	RM$GETSPC1			; GO ALLOCATE FIB
            34            50     E9  0024   223 	BLBC	R0,8$				; BRANCH ON FAILURE
         18 A1         3A AA     3C  0027   224 	MOVZWL	IFB$W_RTDEQ(R10),FIB$L_EXSZ(R1)	; SET DEFAULT EXTEND SIZE
                          04     12  002C   225 	BNEQ	2$				; BRANCH IF NON-ZERO
         16 A1            08     88  002E   226 	BISB2	#FIB$M_ALDEF,FIB$W_EXCTL(R1)	; FLAG MAXIMIZE WITH VOL. DEFAULT
            56         18 A1     D1  0032   227 2$:	CMPL	FIB$L_EXSZ(R1),R6		; IS DEFAULT > # BLOCKS NEEDED?
                          04     1E  0036   228 	BGEQU	4$				; BRANCH IF YES
         18 A1            56     D0  0038   229 	MOVL	R6,FIB$L_EXSZ(R1)		; NO - USE REQUIRED EXTEND SIZE
                                     003C   230 4$:
                                     003C   231 ;
                                     003C   232 ;  DO THE EXTEND
                                     003C   233 ;
                       20 A9     D4  003C   234 	CLRL	IRB$L_CURBDB(R9)		; ZERO CURRENT BDB
                          FFBE'  30  003F   235 	BSBW	RM$EXTEND0_ALT			; DO EXTEND AND DEALLOCATE FIB
            16            50     E9  0042   236 	BLBC	R0,8$				; BRANCH ON ERROR
                                     0045   237 ;
                                     0045   238 ;  FORMAT THE BUCKETS (I.E., WRITE ZEROES) AND UPDATE PROLOG
                                     0045   239 ;
                          FFB8'  30  0045   240 15$:	BSBW	RM$FMT_BKT2			; WRITE ZEROED BLOCKS
                          FFB5'  30  0048   241 	BSBW	RM$UPD_PROLOG2			; UPDATE PROLOG
            10            50     E9  004B   242 	BLBC	R0,10$				; BRANCH ON ERROR
            51         30 A9     D0  004E   243 5$:	MOVL	IRB$L_CURVBN(R9),R1		; SET VBN
                                     0052   244 	$CSHFLAGS	LOCK			; SPECIFY LOCK REQUIRED
            53            01     D0  0052       		MOVL #$$.TMP,R3
                          FFA8'  30  0055   245 	BSBW	RM$READBKT2			; GO ACCESS BUCKET
                          FFB5'  31  0058   246 	BRW	CHKERR				; AND TRY AGAIN
                                     005B   247 ;
                                     005B   248 ;  ERROR HAS OCCURRED ALLOCATING A FIB OR EXTENDING THE FILE.
                                     005B   249 ;
                          FFA2'  30  005B   250 8$:	BSBW	RM$RLSPLG			; RELEASE LOCK ON PROLOG
                          FFA4'  31  005E   251 10$:	BRW	CLEAN1				; CLEAN UP ON ERROR
                                     0061   252 ;
                                     0061   253 ;  ANOTHER USER HAS DONE AN EXTEND SINCE WE LAST CHECKED THE EOF DATA
                                     0061   254 ;  (HARD TO BELIEVE HE COULD SNEAK IN THAT WINDOW, ISN'T IT?)
                                     0061   255 ;  THEREFORE, OUR WORK IS ALREADY DONE.  WE NEED MERELY UNLOCK THE PROLOG
                                     0061   256 ;  AND GO TRY OUR PUT AGAIN.
                                     0061   257 ;
                          FF9C'  30  0061   258 20$:	BSBW	RM$RLSPLG			; UNLOCK THE PROLOG
                          E8     11  0064   259 	BRB	5$				; CONTINUE WITH PUT
                                     0066   260 ;
                                     0066   261 ;  FILE NEEDS NO EXTENDING, ONLY FORMATTING
                                     0066   262 ;
         40 AA            01     C1  0066   263 25$:	ADDL3	#1,IFB$L_HBK(R10),R6		; SET END VBN OF EXTENT + 1
                          56         006A       
RM2PUT          RELATIVE SPECIFIC PUT                            21-AUG-1978 21:54:57   VAX-11 MACRO X0.3-11               Page   7
010             RM$PUT2 - HIGH LEVEL RELATIVE $PUT                                                                               (1)

            51         44 AA     D0  006B   264 	MOVL	IFB$L_EBK(R10),R1		; AND START VBN OF EXTENT
                          D4     11  006F   265 	BRB	15$				; GO FORMAT BUCKETS
                                     0071   266 	$PSECT_RESTORE
                                 00000062       		.RESTORE
RM2PUT          RELATIVE SPECIFIC PUT                            21-AUG-1978 21:54:57   VAX-11 MACRO X0.3-11               Page   8
010             RM$PUTUPD2  -  COMMON $PUT AND $UPDATE RELATIVE                                                                  (1)

                                     0062   268 	.SBTTL	RM$PUTUPD2  -  COMMON $PUT AND $UPDATE RELATIVE ROUTINE
                                     0062   269 ;++
                                     0062   270 ;  FUNCTIONAL DESCRIPTION:
                                     0062   271 ;
                                     0062   272 ;	1. SAVES R0 STATUS CODE IN R7.
                                     0062   273 ;	2. VERIFIES THE RSZ AND RBF PARAMETERS, AS WELL AS RHB IF RFM=VFC.
                                     0062   274 ;	3. SET THE DELETE CONTROL BYTE TO SAY RECORD EXISTS.
                                     0062   275 ;	4. STORE RECORD SIZE UNLESS RFM=FIX.
                                     0062   276 ;	5. IF RFM=VFC, COPY THE RHB TO BUFFER.
                                     0062   277 ;	6. COPY THE RECORD TO THE BUFFER AND SET THE VALID AND DIRTY
                                     0062   278 ;	   BUFFER FLAGS.
                                     0062   279 ;
                                     0062   280 ;  CALLING SEQUENCE:
                                     0062   281 ;
                                     0062   282 ;	BSBW	RM$PUTUPD2
                                     0062   283 ;
                                     0062   284 ;  INPUT PARAMETERS:
                                     0062   285 ;
                                     0062   286 ;	AP	NON 0 IF CALLED FROM $PUT, 0 IF FROM $UPDATE
                                     0062   287 ;	R8-R11	SAME AS FOR ENTRY AT RM$PUT2
                                     0062   288 ;	R5	ADDRESS OF RECORD IN BUCKET BUFFER
                                     0062   289 ;	R4	BDB ADDRESS
                                     0062   290 ;	R0	STATUS CODE
                                     0062   291 ;
                                     0062   292 ;  IMPLICIT INPUTS:
                                     0062   293 ;
                                     0062   294 ;    THE CONTENTS OF THE VARIOUS CONTROL BLOCKS, IN PARTICULAR:
                                     0062   295 ;
                                     0062   296 ;	RAB$W_RSZ	RECORD SIZE
                                     0062   297 ;	RAB$L_RBF	RECORD ADDRESS
                                     0062   298 ;	RAB$L_RHB	RECORD HEADER BUFFER ADDRESS IF RFM=VFC
                                     0062   299 ;	IFB$B_RFM	RECORD FORMAT
                                     0062   300 ;	IFB$W_MRS	MAXIMUM RECORD LENGTH
                                     0062   301 ;	IFB$B_FSZ	FIXED HEADER SIZE IF RFM=VFC
                                     0062   302 ;
                                     0062   303 ;  OUTPUT PARAMETERS:
                                     0062   304 ;
                                     0062   305 ;	R7		STATUS CODE
                                     0062   306 ;	R0-R3,R5,R6	DESTROYED
                                     0062   307 ;
                                     0062   308 ;  IMPLICIT OUTPUTS:
                                     0062   309 ;
                                     0062   310 ;	NONE.
                                     0062   311 ;
                                     0062   312 ;  COMPLETION CODES:
                                     0062   313 ;
                                     0062   314 ;	STANDARD RMS, IN PARTICULAR THE CODE FROM R0 ON INPUT OR RSZ, RBF,
                                     0062   315 ;	OR RHB.
                                     0062   316 ;
                                     0062   317 ;  SIDE EFFECTS:
                                     0062   318 ;
                                     0062   319 ;	NONE.
                                     0062   320 ;--
RM2PUT          RELATIVE SPECIFIC PUT                            21-AUG-1978 21:54:57   VAX-11 MACRO X0.3-11               Page   9
010             RM$PUTUPD2  -  COMMON $PUT AND $UPDATE RELATIVE                                                                  (1)

                                     0062   322 RM$PUTUPD2::
            57            50     D0  0062   323 	MOVL	R0,R7				; COPY STATUS CODE
            56         22 A8     3C  0065   324 	MOVZWL	RAB$W_RSZ(R8),R6		; GET RECORD SIZE
            01         3C AA     91  0069   325 	CMPB	IFB$B_RFMORG(R10),#FAB$C_FIX	; RFM = FIX?
                          06     13  006D   326 	BEQL	10$				; BRANCH OF YES
            56         4C AA     B1  006F   327 	CMPW	IFB$W_MRS(R10),R6		; RECORD TOO LONG?
                          06     1E  0073   328 	BGEQU	20$				; BRANCH IF OK
                                     0075   329 						; (ELSE FALL THRU - WILL BE CHECKED)
            56         4C AA     B1  0075   330 10$:	CMPW	IFB$W_MRS(R10),R6		; RSZ = FIXED RECORD LENGTH?
                          1C     12  0079   331 	BNEQ	ERRRSZ				; BRANCH IF NOT
                          56     B5  007B   332 20$:	TSTW	R6				; RSZ = 0?
                          0F     13  007D   333 	BEQL	CHKVFC				; BRANCH IF YES
       0200 8F            56     B1  007F   334 	CMPW	R6,#512			; RECORD > 2 PAGES IN LENGTH?
                          17     1A  0084   335 	BGTRU	LONG_PROBE			; BRANCH IF YES
                                     0086   336 	IFNORD	R6,@RAB$L_RBF(R8),ERRRBF,IRB$B_MODE(R9)	; BRANCH IF NOT READABLE
            56         0A A9     0C  0086       		PROBER	IRB$B_MODE(R9),R6,@RAB$L_RBF(R8)
                       28 B8         008A       
                          0C     13  008C       		BEQL	ERRRBF
            03         3C AA     91  008E   337 CHKVFC:	CMPB	IFB$B_RFMORG(R10),#FAB$C_VFC	; RFM = VFC?
                          0C     12  0092   338 	BNEQ	SETCTL				; BRANCH IF NOT
                                     0094   339 ;
                                     0094   340 ;  RECORD FORMAT IS VFC.
                                     0094   341 ;
                                     0094   342 ;  PROBE THE RECORD HEADER BUFFER AND COPY TO BUCKET.
                                     0094   343 ;
                                     0094   344 	$PSECT_BR	L$RMS2			; LOW USAGE PATH
                          FF7B'  31  0094       		BRW	L$RMS25
                                     0097       		.SAVE
                                 00000012       		.PSECT	L$RMS2,GBL,NOWRT
                                     0012       L$RMS25:
            51         4B AA     9A  0012   345 	MOVZBL		IFB$B_FSZ(R10),R1	; GET FIXED HEADER SIZE
            50         2C A8     D0  0016   346 	MOVL	RAB$L_RHB(R8),R0		; GET THE RHB ADDRESS
                          07     13  001A   347 	BEQL	10$				; BRANCH IF NONE
                                     001C   348 	IFNORD	R1,(R0),ERRRHB,IRB$B_MODE(R9)	; BRANCH IF NOT READABLE
            51         0A A9     0C  001C       		PROBER	IRB$B_MODE(R9),R1,(R0)
                          60         0020       
                          28     13  0021       		BEQL	ERRRHB
            85            08     90  0023   349 10$:	MOVB	#DLC$M_REC,(R5)+		; SAY RECORD EXISTS
            51            56     A1  0026   350 	ADDW3	R6,R1,(R5)+			; SET REC LENGTH = FIXED + VAR
                          85         0029       
                          54     DD  002A   351 	PUSHL	R4				; SAVE BDB ADDRESS
                          50     D5  002C   352 	TSTL	R0				; RHB SPECED?
                          06     13  002E   353 	BEQL	20$				; BRANCH IF NOT
            60            51     28  0030   354 	MOVC3	R1,(R0),(R5)			; COPY RHB
                          65         0033       
                          0F     11  0034   355 	BRB	40$
                                     0036   356 ;
                                     0036   357 ;  RHB = 0.  ZERO THE HEADER IF DOING $PUT, SKIP IT IF $UPDATE.
                                     0036   358 ;
                          5C     D5  0036   359 20$:	TSTL	AP				; DOING $PUT?
                          05     12  0038   360 	BNEQ	30$				; BRANCH IF YES
            55            51     C0  003A   361 	ADDL2	R1,R5				; SKIP OVER HEADER
                          09     11  003D   362 	BRB	50$
            6E            00     2C  003F   363 30$:	MOVC5	#0,(SP),#0,R1,(R5)		; ZERO THE HEADER
            51            00         0042       
                          65         0044       
            55            53     D0  0045   364 40$:	MOVL	R3,R5				; UPDATE BUFFER ADDRESS
RM2PUT          RELATIVE SPECIFIC PUT                            21-AUG-1978 21:54:57   VAX-11 MACRO X0.3-11               Page  10
010             RM$PUTUPD2  -  COMMON $PUT AND $UPDATE RELATIVE                                                                  (1)

                          0063'  31  0048   365 50$:	BRW	MOVREC				; GO MOVE RECORD
                                     004B   366 ;
                                     004B   367 ERRRHB:	RMSERR	RHB,R7				; BAD RECORD HEADER BUFFER
            57       866C 8F     3C  004B       		MOVZWL	#<RMS$_RHB&^XFFFF>,R7
                                 05  0050   368 	RSB
                                     0051   369 	$PSECT_RESTORE
                                 00000097       		.RESTORE
                                     0097   370 ;
                                     0097   371 ;  HANDLE ERRORS
                                     0097   372 ;
                                     0097   373 ERRRSZ:	$PSECT_BR	L$RMS2
                          FFB7'  31  0097       		BRW	L$RMS26
                                     009A       		.SAVE
                                 00000051       		.PSECT	L$RMS2,GBL,NOWRT
                                     0051       L$RMS26:
                                     0051   374 	RMSERR	RSZ,R7				; INVALID RECORD LENGTH
            57       86A4 8F     3C  0051       		MOVZWL	#<RMS$_RSZ&^XFFFF>,R7
                                 05  0056   375 	RSB
                                     0057   376 	$PSECT_RESTORE
                                 0000009A       		.RESTORE
                                     009A   377 ;
                                     009A   378 ERRRBF:	$PSECT_BR	L$RMS2
                          FFBA'  31  009A       		BRW	L$RMS27
                                     009D       		.SAVE
                                 00000057       		.PSECT	L$RMS2,GBL,NOWRT
                                     0057       L$RMS27:
                                     0057   379 ERRRBF1:	RMSERR	RBF,R7			; INVALID RECORD HEADER BUFFER
            57       8654 8F     3C  0057       		MOVZWL	#<RMS$_RBF&^XFFFF>,R7
                                 05  005C   380 	RSB
                                     005D   381 	$PSECT_RESTORE
                                 0000009D       		.RESTORE
                                     009D   382 ;
                                     009D   383 ;  PROBE READABILITY OF ALL PAGES ( > 2) OF USER RECORD.
                                     009D   384 ;
                                     009D   385 LONG_PROBE:	$PSECT_BR	L$RMS2
                          FFBD'  31  009D       		BRW	L$RMS28
                                     00A0       		.SAVE
                                 0000005D       		.PSECT	L$RMS2,GBL,NOWRT
                                     005D       L$RMS28:
            50            56     D0  005D   386 	MOVL	R6,R0				; COPY BUFFER LENGTH
            51         28 A8     D0  0060   387 	MOVL	RAB$L_RBF(R8),R1		; AND ADDRESS
            52       FE00 8F     32  0064   388 	CVTWL	#-512,R2			; SET ADDRESS CONSTANT
                                     0069   389 10$:	IFNORD	R0,(R1),ERRRBF1,IRB$B_MODE(R9)	; BRANCH IF NOT READABLE
            50         0A A9     0C  0069       		PROBER	IRB$B_MODE(R9),R0,(R1)
                          61         006D       
                          E7     13  006E       		BEQL	ERRRBF1
            51            52     C2  0070   390 	SUBL2	R2,R1				; GET ADDRESS NEXT PAGE
            50            6042   3E  0073   391 	MOVAW	(R0)[R2],R0			; ADJUST REMAINING LENGTH
                          F0     14  0077   392 	BGTR	10$				; LOOP IF MORE TO DO
            50            52     C2  0079   393 	SUBL2	R2,R0				; NEED TO HANDLE LAST PAGE?
                          EB     14  007C   394 	BGTR	10$				; BRANCH IF YES
                          000D'  31  007E   395 	BRW	CHKVFC				; REJOIN MAIN SEQUENCE
                                     0081   396 	$PSECT_RESTORE
                                 000000A0       		.RESTORE
RM2PUT          RELATIVE SPECIFIC PUT                            21-AUG-1978 21:54:57   VAX-11 MACRO X0.3-11               Page  11
010             RM$PUTUPD2  -  COMMON $PUT AND $UPDATE RELATIVE                                                                  (1)

                                     00A0   398 ;
                                     00A0   399 ;  SET "RECORD EXISTS" INTO CONTROL BYTE, STORE THE RECORD SIZE IF VAR RECORD
                                     00A0   400 ;  FORMAT, AND MOVE THE RECORD.
                                     00A0   401 ;
            85            08     90  00A0   402 SETCTL:	MOVB	#DLC$M_REC,(R5)+		; SAY RECORD EXISTS
            02         3C AA     91  00A3   403 	CMPB	IFB$B_RFMORG(R10),#FAB$C_VAR	; VARIABLE LEN RFM?
                          03     12  00A7   404 	BNEQ	10$				; BRANCH IF NOT
            85            56     B0  00A9   405 	MOVW	R6,(R5)+			; STORE RECORD LENGTH
                          54     DD  00AC   406 10$:	PUSHL	R4				; SAVE BDB ADDRESS
         28 B8            56     28  00AE   407 MOVREC:	MOVC3	R6,@RAB$L_RBF(R8),(R5)		; MOVE THE RECORD
                          65         00B2       
                          10     BA  00B3   408 	POPR	#^M<R4>				; RESTORE BDB ADDRESS
         0A A4            03     88  00B5   409 	BISB	#BDB$M_VAL!BDB$M_DRT,BDB$B_FLGS(R4)	; SAY VALID AND DIRTY
                                 05  00B9   410 	RSB
                                     00BA   411 
                                     00BA   412 
                                     00BA   413 	.END
RM2PUT          RELATIVE SPECIFIC PUT                            21-AUG-1978 21:54:57   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (1)

$$.PSECT_EP    = 00000009            CSH$M_READAHEAD= 00000008            FAB$M_CBT      = 00200000            
$$.TMP         = 00000001            CSH$V_LOCK     = 00000000            FAB$M_CIF      = 02000000            
$$RMSTEST      = 0000001A            CSH$V_NOBUFFER = 00000004            FAB$M_CR       = 00000002            
$$RMS_PBUGCHK  = 00000010            CSH$V_NOREAD   = 00000002            FAB$M_CTG      = 00100000            
$$RMS_TBUGCHK  = 00000008            CSH$V_NOWAIT   = 00000001            FAB$M_DEL      = 00000004            
$$RMS_UMODE    = 00000004            CSH$V_READAHEAD= 00000003            FAB$M_DFW      = 00000020            
BDB$B_BID        00000008            DLC$M_DELETED  = 00000004            FAB$M_DLT      = 00008000            
BDB$B_BLN        00000009            DLC$M_REC      = 00000008            FAB$M_DMO      = 00001000            
BDB$B_FLGS       0000000A            DLC$V_DELETED  = 00000002            FAB$M_ESC      = 08000000            
BDB$B_POST_CCTL  00000023            DLC$V_REC      = 00000003            FAB$M_EXE      = 00000080            
BDB$B_PRE_CCTL   00000022            ERRRBF           0000009A R     02   FAB$M_FTN      = 00000001            
BDB$B_REL_VBN    00000020            ERRRBF1          00000057 R     04   FAB$M_GET      = 00000002            
BDB$B_USECNT     0000000B            ERRREX           0000005C R     02   FAB$M_INP      = 00080000            
BDB$B_VAL_VBNS   00000021            ERRRHB           0000004B R     04   FAB$M_JNL      = 00400000            
BDB$C_BID      = 0000000C            ERRRSZ           00000097 R     02   FAB$M_KFO      = 40000000            
BDB$C_BLN        00000028            F$RMSEXTEND24    00000000 R     06   FAB$M_MSE      = 00000010            
BDB$K_BLN        00000028            FAB$B_BID        00000000            FAB$M_MXV      = 00000002            
BDB$L_ADDR       00000014            FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            
BDB$L_BLINK      00000004            FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            
BDB$L_CURBUFADR  00000024            FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            
BDB$L_FLINK      00000000            FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            
BDB$L_IOSB       00000020            FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            
BDB$L_OWN        0000000C            FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            
BDB$L_VBN        00000018            FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            
BDB$L_WAIT       0000001C            FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            
BDB$L_WK1        00000020            FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            
BDB$M_AST_DCL  = 00000040            FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            
BDB$M_DRT      = 00000002            FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            
BDB$M_IOP      = 00000004            FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            
BDB$M_LKDINWS  = 00000080            FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            
BDB$M_NOLOCATE = 00000010            FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            
BDB$M_PRM      = 00000008            FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            
BDB$M_VAL      = 00000001            FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            
BDB$M_WFO      = 00000020            FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            
BDB$V_AST_DCL  = 00000006            FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            
BDB$V_DRT      = 00000001            FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            
BDB$V_IOP      = 00000002            FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            
BDB$V_LKDINWS  = 00000007            FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            
BDB$V_NOLOCATE = 00000004            FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            
BDB$V_PRM      = 00000003            FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            
BDB$V_VAL      = 00000000            FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            
BDB$V_WFO      = 00000005            FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            
BDB$W_NUMB       00000010            FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            
BDB$W_SIZE       00000012            FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            
BIT...         = 0001C134            FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            
CHKCTL           0000003A R     02   FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            
CHKEOF           0000005F R     02   FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            
CHKERR           00000010 R     02   FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            
CHKLCK           00000037 R     02   FAB$L_MRN        00000038            FAB$S_ORG      = 00000004            
CHKVFC           0000008E R     02   FAB$L_NAM        00000028            FAB$S_PPF_RAT  = 00000008            
CLEAN            0000002E R     02   FAB$L_SDC        00000044            FAB$V_BIO      = 00000005            
CLEAN1           00000005 R     04   FAB$L_STS        00000008            FAB$V_BLK      = 00000003            
CLEAN2           00000008 R     04   FAB$L_STV        0000000C            FAB$V_BRO      = 00000006            
CSH$M_LOCK     = 00000001            FAB$L_XAB        00000024            FAB$V_CBT      = 00000015            
CSH$M_NOBUFFER = 00000010            FAB$M_BIO      = 00000020            FAB$V_CIF      = 00000019            
CSH$M_NOREAD   = 00000004            FAB$M_BLK      = 00000008            FAB$V_CR       = 00000001            
CSH$M_NOWAIT   = 00000002            FAB$M_BRO      = 00000040            FAB$V_CTG      = 00000014            
RM2PUT          RELATIVE SPECIFIC PUT                            21-AUG-1978 21:54:57   VAX-11 MACRO X0.3-11               Page  13
SYMBOL TABLE                                                                                                                     (1)

FAB$V_DEL      = 00000002            FIB$B_WSIZE      00000003            FIB$M_TRUNC    = 00000100            
FAB$V_DFW      = 00000005            FIB$C_ACCDATA    0000000A            FIB$M_UPDATE   = 00000040            
FAB$V_DLT      = 0000000F            FIB$C_ALCDATA    0000002C            FIB$M_WILD     = 00000100            
FAB$V_DMO      = 0000000C            FIB$C_CYL      = 00000001            FIB$M_WRITE    = 00000100            
FAB$V_ESC      = 0000001B            FIB$C_DIRDATA    00000016            FIB$M_WRITECK  = 00000020            
FAB$V_EXE      = 00000007            FIB$C_EXTDATA    00000020            FIB$V_ALCON    = 00000000            
FAB$V_FTN      = 00000000            FIB$C_ILLEGAL  = 00000005            FIB$V_ALCONB   = 00000001            
FAB$V_GET      = 00000001            FIB$C_LBN      = 00000002            FIB$V_ALDEF    = 00000003            
FAB$V_INP      = 00000013            FIB$C_LENGTH     0000002C            FIB$V_ALLNAM   = 00000005            
FAB$V_JNL      = 00000016            FIB$C_MTALEN     0000001C            FIB$V_ALLTYP   = 00000004            
FAB$V_KFO      = 0000001E            FIB$C_NEXTVOL  = 00000003            FIB$V_ALLVER   = 00000003            
FAB$V_MSE      = 00000004            FIB$C_POSEND   = 00000002            FIB$V_CURPOS   = 00000004            
FAB$V_MXV      = 00000001            FIB$C_REWINDFIL= 00000006            FIB$V_DLOCK    = 00000001            
FAB$V_NAM      = 00000018            FIB$C_REWINDVOL= 00000001            FIB$V_EXACT    = 00000000            
FAB$V_NEF      = 0000000A            FIB$C_RFI      = 00000004            FIB$V_EXECUTE  = 00000010            
FAB$V_NFS      = 00000010            FIB$C_SPACE    = 00000004            FIB$V_EXTEND   = 00000007            
FAB$V_NIL      = 00000005            FIB$C_VBN      = 00000003            FIB$V_FILCON   = 00000002            
FAB$V_OFP      = 0000001D            FIB$K_ACCDATA    0000000A            FIB$V_FINDFID  = 0000000B            
FAB$V_ORG      = 00000004            FIB$K_ALCDATA    0000002C            FIB$V_HIGHVER  = 0000000F            
FAB$V_POS      = 00000008            FIB$K_DIRDATA    00000016            FIB$V_LOWVER   = 0000000E            
FAB$V_PPF      = 00000012            FIB$K_EXTDATA    00000020            FIB$V_MARKBAD  = 0000000A            
FAB$V_PPF_IND  = 0000000E            FIB$K_LENGTH     0000002C            FIB$V_NEWVER   = 00000009            
FAB$V_PPF_RAT  = 00000006            FIB$K_MTALEN     0000001C            FIB$V_NOHDREXT = 00000009            
FAB$V_PRN      = 00000002            FIB$L_ACCTL      00000000            FIB$V_NOREAD   = 0000000A            
FAB$V_PUT      = 00000000            FIB$L_CNTRLVAL   00000018            FIB$V_NOTRUNC  = 0000000B            
FAB$V_RCK      = 00000017            FIB$L_EXSZ       00000018            FIB$V_NOWRITE  = 00000000            
FAB$V_RWC      = 0000000B            FIB$L_EXVBN      0000001C            FIB$V_ONCYL    = 00000001            
FAB$V_RWO      = 00000007            FIB$L_LOC_ADDR   00000028            FIB$V_PRSRV_ATR= 00000011            
FAB$V_SCF      = 0000000E            FIB$L_WCC        00000010            FIB$V_READCK   = 00000009            
FAB$V_SHRDEL   = 00000002            FIB$M_ALCON    = 00000001            FIB$V_REWIND   = 00000003            
FAB$V_SHRGET   = 00000001            FIB$M_ALCONB   = 00000002            FIB$V_SEQONLY  = 00000006            
FAB$V_SHRPUT   = 00000000            FIB$M_ALDEF    = 00000008            FIB$V_SPOOL    = 00000004            
FAB$V_SHRUPD   = 00000003            FIB$M_ALLNAM   = 00000020            FIB$V_SUPERSEDE= 0000000A            
FAB$V_SPL      = 0000000D            FIB$M_ALLTYP   = 00000010            FIB$V_TRUNC    = 00000008            
FAB$V_SQO      = 00000006            FIB$M_ALLVER   = 00000008            FIB$V_UPDATE   = 00000006            
FAB$V_SUP      = 00000002            FIB$M_CURPOS   = 00000010            FIB$V_WILD     = 00000008            
FAB$V_TEF      = 0000001C            FIB$M_DLOCK    = 00000002            FIB$V_WRITE    = 00000008            
FAB$V_TMD      = 00000004            FIB$M_EXACT    = 00000001            FIB$V_WRITECK  = 00000005            
FAB$V_TMP      = 00000003            FIB$M_EXECUTE  = 00010000            FIB$W_ALLOC      00000022            
FAB$V_TRN      = 00000004            FIB$M_EXTEND   = 00000080            FIB$W_CNTRLFUNC  00000016            
FAB$V_UFM      = 0000001A            FIB$M_FILCON   = 00000004            FIB$W_DID        0000000A            
FAB$V_UFO      = 00000011            FIB$M_FINDFID  = 00000800            FIB$W_DID_NUM    0000000A            
FAB$V_UPD      = 00000003            FIB$M_HIGHVER  = 00008000            FIB$W_DID_RVN    0000000E            
FAB$V_UPI      = 00000006            FIB$M_LOWVER   = 00004000            FIB$W_DID_SEQ    0000000C            
FAB$V_WCK      = 00000009            FIB$M_MARKBAD  = 00000400            FIB$W_EXCTL      00000016            
FAB$W_BLS        0000003C            FIB$M_NEWVER   = 00000200            FIB$W_FID        00000004            
FAB$W_DEQ        00000014            FIB$M_NOHDREXT = 00000200            FIB$W_FID_NUM    00000004            
FAB$W_IFI        00000002            FIB$M_NOREAD   = 00000400            FIB$W_FID_RVN    00000008            
FAB$W_MRS        00000036            FIB$M_NOTRUNC  = 00000800            FIB$W_FID_SEQ    00000006            
FIB$B_ALALIGN    00000021            FIB$M_NOWRITE  = 00000001            FIB$W_LOC_FID    00000022            
FIB$B_ALOPTS     00000020            FIB$M_ONCYL    = 00000002            FIB$W_LOC_NUM    00000022            
FIB$B_DID_NMX    0000000F            FIB$M_PRSRV_ATR= 00020000            FIB$W_LOC_RVN    00000026            
FIB$B_DID_RVN    0000000E            FIB$M_READCK   = 00000200            FIB$W_LOC_SEQ    00000024            
FIB$B_FID_NMX    00000009            FIB$M_REWIND   = 00000008            FIB$W_NMCTL      00000014            
FIB$B_FID_RVN    00000008            FIB$M_SEQONLY  = 00000040            GBL...         = 00000000            
FIB$B_LOC_NMX    00000027            FIB$M_SPOOL    = 00000010            IFB$B_AMAX       00000059            
FIB$B_LOC_RVN    00000026            FIB$M_SUPERSEDE= 00000400            IFB$B_AVBN       00000058            
RM2PUT          RELATIVE SPECIFIC PUT                            21-AUG-1978 21:54:57   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                     (1)

IFB$B_BID        00000008            IFB$M_EXE      = 00000080            IRB$B_BID        00000008            
IFB$B_BKS        0000004A            IFB$M_GET      = 00000002            IRB$B_BLN        00000009            
IFB$B_BLN        00000009            IFB$M_PUT      = 00000001            IRB$B_EFN        0000000B            
IFB$B_EFN        0000000B            IFB$M_TRN      = 00000010            IRB$B_KEYSZ      00000051            
IFB$B_EXTRABUF   0000005D            IFB$M_UPD      = 00000008            IRB$B_MBC        00000041            
IFB$B_FAC        00000022            IFB$S_ORG      = 00000004            IRB$B_MODE       0000000A            
IFB$B_FSZ        0000004B            IFB$S_RFM      = 00000004            IRB$B_NRP_ID     00000030            
IFB$B_KBUFSZ     0000005C            IFB$V_ACCESSED = 00000025            IRB$B_NRP_KREF   00000031            
IFB$B_MODE       0000000A            IFB$V_ANSI_D   = 00000026            IRB$B_NVBNS      00000048            
IFB$B_NUM_KEYS   0000005A            IFB$V_ASYNC    = 00000023            IRB$B_POST_CCTL  00000045            
IFB$B_ORGCASE    00000023            IFB$V_ASYNCWAIT= 00000024            IRB$B_PPF_ISI    0000003E            
IFB$B_RAT        0000003D            IFB$V_BIO      = 00000005            IRB$B_PRE_CCTL   00000044            
IFB$B_RFMORG     0000003C            IFB$V_BRO      = 00000006            IRB$B_RFA_ID     00000058            
IFB$B_UBUFSZ     0000005B            IFB$V_BUSY     = 00000020            IRB$B_RP_ID      00000038            
IFB$C_BID      = 0000000B            IFB$V_CREATE   = 00000032            IRB$B_RP_KREF    00000039            
IFB$C_BLN        00000060            IFB$V_DAP      = 0000003E            IRB$B_RRV_ID     00000050            
IFB$C_BLN_IDX    00000060            IFB$V_DAP_OPEN = 0000003D            IRB$B_SRCHFLAGS  00000043            
IFB$C_BLN_REL    00000060            IFB$V_DEL      = 00000002            IRB$B_STOPLEVEL  00000042            
IFB$C_BLN_SEQ    0000005C            IFB$V_DFW      = 0000002C            IRB$C_BID      = 0000000A            
IFB$C_DIR      = 00000003            IFB$V_DLT      = 0000002B            IRB$C_BLN_IDX    0000006C            
IFB$C_FHAEND     00000050            IFB$V_DMO      = 00000028            IRB$C_BLN_REL    00000048            
IFB$C_IDX      = 00000002            IFB$V_EOF      = 00000021            IRB$C_BLN_SEQ    0000004C            
IFB$C_MAXORG   = 00000002            IFB$V_EXE      = 00000007            IRB$K_BLN_IDX    0000006C            
IFB$C_REL      = 00000001            IFB$V_GET      = 00000001            IRB$K_BLN_REL    00000048            
IFB$C_SEQ      = 00000000            IFB$V_MSE      = 00000031            IRB$K_BLN_SEQ    0000004C            
IFB$K_BLN        00000060            IFB$V_NORECLK  = 00000033            IRB$L_ARGLST     00000018            
IFB$K_BLN_IDX    00000060            IFB$V_NSP      = 0000003F            IRB$L_ASBADDR    00000014            
IFB$K_BLN_REL    00000060            IFB$V_NWA      = 0000003C            IRB$L_BKPBITS    00000004            
IFB$K_BLN_SEQ    0000005C            IFB$V_ORG      = 00000004            IRB$L_BWB        0000000C            
IFB$K_FHAEND     00000050            IFB$V_PPF_IMAGE= 00000022            IRB$L_CURBDB     00000020            
IFB$L_ARGLST     00000018            IFB$V_PPF_INPUT= 0000002E            IRB$L_CURVBN     00000030            
IFB$L_ASBADDR    00000014            IFB$V_PUT      = 00000000            IRB$L_IFAB_LNK   00000000            
IFB$L_AS_DEV     00000054            IFB$V_RFM      = 00000000            IRB$L_IOS        0000000C            
IFB$L_BDB_BLNK   00000034            IFB$V_RWC      = 00000027            IRB$L_IOS4       00000010            
IFB$L_BDB_FLNK   00000030            IFB$V_RW_ATTR  = 00000034            IRB$L_IRAB_LNK   0000001C            
IFB$L_BKPBITS    00000004            IFB$V_SCF      = 0000002A            IRB$L_KEYBUF     00000048            
IFB$L_BWB        0000000C            IFB$V_SPL      = 00000029            IRB$L_LAST_RAB   00000024            
IFB$L_DVBN       00000058            IFB$V_SQO      = 0000002D            IRB$L_LOCK_BDB   0000005C            
IFB$L_EBK        00000044            IFB$V_TEF      = 00000036            IRB$L_NRP        0000002C            
IFB$L_FRB_PTR    00000028            IFB$V_TMP      = 00000035            IRB$L_NRP_OFF    00000030            
IFB$L_FWA_BDB    00000050            IFB$V_TRN      = 00000004            IRB$L_NRP_VBN    0000002C            
IFB$L_HBK        00000040            IFB$V_UPD      = 00000003            IRB$L_NXTBDB     00000028            
IFB$L_IDX_PTR    00000054            IFB$V_WRTACC   = 00000030            IRB$L_OWNER_ID   0000003C            
IFB$L_IOS        0000000C            IFB$W_ASDEVBSIZ  0000005A            IRB$L_RFA_VBN    00000054            
IFB$L_IOS4       00000010            IFB$W_BKS_BYTES  0000005C            IRB$L_RLB_ADDR   00000044            
IFB$L_IRAB_LNK   0000001C            IFB$W_BKS_RECS   0000005E            IRB$L_RP         00000034            
IFB$L_LAST_FAB   00000024            IFB$W_CHNL       00000020            IRB$L_RP_OFF     00000038            
IFB$L_LOCK_BDB   00000050            IFB$W_DEQ        0000004E            IRB$L_RP_VBN     00000034            
IFB$L_MRN        00000054            IFB$W_DEVBUFSIZ  00000038            IRB$L_RRV_VBN    0000004C            
IFB$L_NRP_LNK    00000050            IFB$W_EBK0       00000044            IRB$L_TEMP0      00000044            
IFB$L_NWA_PTR    00000028            IFB$W_EBK2       00000046            IRB$L_TEMP1      00000048            
IFB$L_PRIM_DEV   00000000            IFB$W_FFB        00000048            IRB$V_ASYNC    = 00000023            
IFB$L_RLB_LNK    0000002C            IFB$W_IOS2       0000000E            IRB$V_ASYNCWAIT= 00000024            
IFB$L_RNS_LEN    00000050            IFB$W_LRL        0000003E            IRB$V_BIO_LAST = 00000027            
IFB$M_BIO      = 00000020            IFB$W_MRS        0000004C            IRB$V_BRO_SW   = 00000028            
IFB$M_BRO      = 00000040            IFB$W_RTDEQ      0000003A            IRB$V_BUSY     = 00000020            
IFB$M_DEL      = 00000004            IRB$B_BCNT       00000040            IRB$V_DAP_CONN = 0000003E            
RM2PUT          RELATIVE SPECIFIC PUT                            21-AUG-1978 21:54:57   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                     (1)

IRB$V_DAP_FMODE= 0000003F            RAB$C_KEY      = 00000001            RAB$V_LOA      = 0000000D            
IRB$V_DUP      = 0000002C            RAB$C_RFA      = 00000002            RAB$V_LOC      = 00000010            
IRB$V_EOF      = 00000021            RAB$C_SEQ      = 00000000            RAB$V_MAS      = 00000005            
IRB$V_FIND     = 00000029            RAB$K_BLN        00000044            RAB$V_NLK      = 00000014            
IRB$V_FIND_LAST= 00000025            RAB$L_BKT        00000038            RAB$V_NXR      = 00000017            
IRB$V_IDX_ERR  = 00000031            RAB$L_CTX        00000018            RAB$V_PMT      = 0000001E            
IRB$V_LOCKABOVE= 00000002            RAB$L_DCT        00000038            RAB$V_PPF_IND  = 0000000E            
IRB$V_NEW_IDX  = 00000003            RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            
IRB$V_POSINSERT= 00000000            RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            
IRB$V_PPF_EOF  = 0000002E            RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            
IRB$V_PPF_FNDSV= 00000030            RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            
IRB$V_PPF_IMAGE= 00000022            RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            
IRB$V_PPF_SKIP = 0000002F            RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            
IRB$V_PUTS_LAST= 00000026            RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            
IRB$V_RAHWBH   = 0000002A            RAB$L_STS        00000008            RAB$V_TPT      = 00000001            
IRB$V_SKIP_NEXT= 0000002B            RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            
IRB$V_SRCHGT   = 00000001            RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            
IRB$V_UNLOCK_RP= 0000002D            RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            
IRB$V_WRITE    = 00000029            RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            
IRB$W_CSIZ       00000042            RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            
IRB$W_DUP_POS    00000032            RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            
IRB$W_IOS2       0000000E            RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            
IRB$W_NRP_OFF    00000030            RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            
IRB$W_OWN_ID     0000003C            RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            
IRB$W_OWN_ISI    0000003E            RAB$M_KGE      = 00200000            RM$CLN2_PUT      ********   X   04   
IRB$W_ROVHDSZ    00000044            RAB$M_KGT      = 00400000            RM$EXRMS         ********   X   05   
IRB$W_RP_OFF     00000038            RAB$M_LIM      = 00004000            RM$EXTEND0_ALT   ********   X   06   
IRB$W_RTOTLSZ    00000046            RAB$M_LOA      = 00002000            RM$FMT_BKT2      ********   X   06   
IRB$W_SAVE_POS   00000052            RAB$M_LOC      = 00010000            RM$GETREC2_PUT   ********   X   02   
L$RMS20          00000000 R     04   RAB$M_MAS      = 00000020            RM$GETSPC1       ********   X   06   
L$RMS21          00000005 R     04   RAB$M_NLK      = 00100000            RM$LOCK          ********   X   02   
L$RMS23          0000000B R     04   RAB$M_NXR      = 00800000            RM$LOCK_PROLOG   ********   X   06   
L$RMS25          00000012 R     04   RAB$M_PMT      = 40000000            RM$PUT2          00000000 RG    02   
L$RMS26          00000051 R     04   RAB$M_PPF_IND  = 00004000            RM$PUTUPD2       00000062 RG    02   
L$RMS27          00000057 R     04   RAB$M_PPF_RAT  = 00003FC0            RM$QUERY_LCK     ********   X   02   
L$RMS28          0000005D R     04   RAB$M_PTA      = 20000000            RM$READBKT2      ********   X   06   
LOCK             00000034 R     02   RAB$M_RAH      = 00000200            RM$RLS2          ********   X   02   
LONG_PROBE       0000009D R     02   RAB$M_RLK      = 00080000            RM$RLSPLG        ********   X   06   
MOVREC           000000AE R     02   RAB$M_RNE      = 01000000            RM$UPD_PROLOG2   ********   X   06   
NF$NETWORK2      00000000 R     05   RAB$M_RNF      = 08000000            RMS$V_STVSTATUS= 0000000E            
NT$PUT2          ********   X   05   RAB$M_TMO      = 02000000            RMS$_ABO       = 000183EC            
NTPUT            00000031 R     02   RAB$M_TPT      = 00000002            RMS$_ACC       = 0001C002            
PIO$GL_FMLH      ********   X   02   RAB$M_UIF      = 00000010            RMS$_ACT       = 0001825A            
RAB$B_BID        00000000            RAB$M_ULK      = 00040000            RMS$_AID       = 000183F4            
RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            RMS$_ALN       = 000183FC            
RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            RMS$_ALQ       = 00018404            
RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            RMS$_ANI       = 0001840C            
RAB$B_MBC        00000037            RAB$V_ASY      = 00000000            RMS$_AOP       = 00018414            
RAB$B_MBF        00000036            RAB$V_BIO      = 0000000B            RMS$_ATR       = 0001C0CC            
RAB$B_PSZ        00000034            RAB$V_CCO      = 0000001F            RMS$_ATW       = 0001C0D4            
RAB$B_RAC        0000001E            RAB$V_CVT      = 0000001A            RMS$_BKS       = 0001841C            
RAB$B_ROP1       00000005            RAB$V_EOF      = 00000008            RMS$_BKZ       = 00018424            
RAB$B_ROP2       00000006            RAB$V_FDL      = 00000006            RMS$_BLN       = 0001842C            
RAB$B_ROP3       00000007            RAB$V_HSH      = 00000007            RMS$_BOF       = 00018198            
RAB$B_TMO        0000001F            RAB$V_KGE      = 00000015            RMS$_BUG       = 00018434            
RAB$C_BID      = 00000001            RAB$V_KGT      = 00000016            RMS$_BUG_DAP   = 00018444            
RAB$C_BLN        00000044            RAB$V_LIM      = 0000000E            RMS$_BUG_DDI   = 0001843C            
RM2PUT          RELATIVE SPECIFIC PUT                            21-AUG-1978 21:54:57   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                     (1)

RMS$_BUG_XX2   = 0001844C            RMS$_IBF       = 00018754            RMS$_RLK       = 000182AA            
RMS$_BUG_XX3   = 00018454            RMS$_IDX       = 0001855C            RMS$_RMV       = 0001C0FC            
RMS$_BUG_XX4   = 0001845C            RMS$_IFA       = 0001C124            RMS$_RNF       = 000182B2            
RMS$_BUG_XX5   = 00018464            RMS$_IFI       = 00018564            RMS$_RNL       = 000181A0            
RMS$_BUG_XX6   = 0001846C            RMS$_IMX       = 0001856C            RMS$_ROP       = 0001867C            
RMS$_BUG_XX7   = 00018474            RMS$_IOP       = 00018574            RMS$_RPL       = 0001C104            
RMS$_BUG_XX8   = 0001847C            RMS$_IRC       = 0001857C            RMS$_RRV       = 00018684            
RMS$_BUG_XX9   = 00018484            RMS$_ISI       = 00018584            RMS$_RSA       = 000182DA            
RMS$_CAA       = 0001848C            RMS$_KBF       = 0001858C            RMS$_RSL       = 0001873C            
RMS$_CCF       = 0001C0DC            RMS$_KEY       = 00018594            RMS$_RSS       = 00018694            
RMS$_CCR       = 00018494            RMS$_KFF       = 00018031            RMS$_RST       = 0001869C            
RMS$_CDA       = 0001C0E4            RMS$_KRF       = 0001859C            RMS$_RSZ       = 000186A4            
RMS$_CHG       = 0001849C            RMS$_KSZ       = 000185A4            RMS$_RTB       = 000181A8            
RMS$_CHK       = 000184A4            RMS$_LAN       = 000185AC            RMS$_SEQ       = 000186AC            
RMS$_CHN       = 0001C0EC            RMS$_LBL       = 000185B4            RMS$_SHR       = 000186B4            
RMS$_COD       = 000184AC            RMS$_LNE       = 000185BC            RMS$_SIZ       = 000186BC            
RMS$_CONTROLC  = 00010651            RMS$_LOC       = 000185C4            RMS$_SPL       = 0001C042            
RMS$_CONTROLO  = 00010609            RMS$_MBC       = 00018734            RMS$_SQO       = 000186C4            
RMS$_CONTROLY  = 00010611            RMS$_MKD       = 0001C032            RMS$_STALL     = 00018001            
RMS$_CRE       = 0001C00A            RMS$_MRN       = 000185CC            RMS$_STK       = 000186CC            
RMS$_CREATED   = 00010619            RMS$_MRS       = 000185D4            RMS$_SUC       = 00010001            
RMS$_CUR       = 000184B4            RMS$_NAM       = 000185DC            RMS$_SUP       = 000182D2            
RMS$_DAC       = 0001C012            RMS$_NEF       = 000185E4            RMS$_SUPERSEDE = 00010631            
RMS$_DAN       = 000184BC            RMS$_NET       = 0001874C            RMS$_SYN       = 000186D4            
RMS$_DEL       = 00018262            RMS$_NID       = 000185EC            RMS$_SYS       = 0001C10C            
RMS$_DEV       = 000184C4            RMS$_NMF       = 000182CA            RMS$_TEMP1     = 0001826A            
RMS$_DIR       = 000184CC            RMS$_NOD       = 000185F4            RMS$_TEMP2     = 0001868C            
RMS$_DME       = 000184D4            RMS$_NORMAL    = 00010001            RMS$_TMO       = 000181B0            
RMS$_DNA       = 000184DC            RMS$_NPK       = 000185FC            RMS$_TRE       = 000186DC            
RMS$_DNF       = 0001C04A            RMS$_OK_ALK    = 00018039            RMS$_TYP       = 000186E4            
RMS$_DNR       = 00018272            RMS$_OK_DEL    = 00018041            RMS$_UBF       = 000186EC            
RMS$_DPE       = 0001C03A            RMS$_OK_DUP    = 00018011            RMS$_USZ       = 000186F4            
RMS$_DTP       = 000184E4            RMS$_OK_IDX    = 00018019            RMS$_VER       = 000186FC            
RMS$_DUP       = 000184EC            RMS$_OK_LIM    = 00018051            RMS$_VOL       = 00018704            
RMS$_DVI       = 000184F4            RMS$_OK_RLK    = 00018021            RMS$_WBE       = 0001C12C            
RMS$_ENT       = 0001C01A            RMS$_OK_RNF    = 00018049            RMS$_WER       = 0001C114            
RMS$_ENV       = 00018724            RMS$_OK_RRV    = 00018029            RMS$_WLD       = 00018744            
RMS$_EOF       = 0001827A            RMS$_ORD       = 00018604            RMS$_WLK       = 000182BA            
RMS$_ESA       = 000184FC            RMS$_ORG       = 0001860C            RMS$_WPL       = 0001C11C            
RMS$_ESL       = 00018714            RMS$_PBF       = 00018614            RMS$_WSF       = 0001871C            
RMS$_ESS       = 00018504            RMS$_PENDING   = 00018009            RMS$_XAB       = 0001870C            
RMS$_EXP       = 000182C2            RMS$_PLG       = 0001861C            ROP            = 00000020            
RMS$_EXT       = 0001C022            RMS$_PLV       = 0001872C            SETCTL           000000A0 R     02   
RMS$_FAB       = 0001850C            RMS$_POS       = 00018624            TPT$L_PUT2       ********   X   02   
RMS$_FAC       = 00018514            RMS$_PRM       = 0001862C            
RMS$_FEX       = 00018282            RMS$_PRV       = 0001829A            
RMS$_FLG       = 0001851C            RMS$_QUO       = 00018634            
RMS$_FLK       = 0001828A            RMS$_RAB       = 0001863C            
RMS$_FNA       = 00018524            RMS$_RAC       = 00018644            
RMS$_FND       = 0001C02A            RMS$_RAT       = 0001864C            
RMS$_FNF       = 00018292            RMS$_RBF       = 00018654            
RMS$_FNM       = 0001852C            RMS$_RER       = 0001C0F4            
RMS$_FOP       = 0001853C            RMS$_REX       = 000182A2            
RMS$_FSZ       = 00018534            RMS$_RFA       = 0001865C            
RMS$_FUL       = 00018544            RMS$_RFM       = 00018664            
RMS$_IAL       = 0001854C            RMS$_RHB       = 0001866C            
RMS$_IAN       = 00018554            RMS$_RLF       = 00018674            
RM2PUT          RELATIVE SPECIFIC PUT                            21-AUG-1978 21:54:57   VAX-11 MACRO X0.3-11               Page  17
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$RMS2            000000BA      02     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  
$ABS$            0000006C      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
L$RMS2           00000081      04     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  
NF$NETWORK       0000000C      05     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  
F$RMSEXTEND2     00000071      06     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
4914. BYTES LEFT IN FREE MEMORY POOL.
2002. BYTES OF RECLAIMED MEMORY.
OBJ$:RM2PUT,LIS$:RM2PUT/-SP=EXECML$/ML,LIB$:R/ML,SRC$:RM2PUT
34 MLB DIR RDS - 1287 GETS TO DEFINE 28 MACROS. 102 INTER. FILE WRITES. 
