RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      40  DECLARATIONS
   (1)      69  RMS$SEARCH - COMMON CODE FOR MISCELLANEOUS CONT
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page   1
009                                                                                                                              (1)

                                     0000     1 	$BEGIN	RMS0SRCH,009,F$RMS0MISC,<SEARCH,ENTER, AND REMOVE SERVICES>
                                     0000     2 
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ;++
                                     0000    24 ;
                                     0000    25 ; ABSTRACT:
                                     0000    26 ;	THIS ROUTINE PERFORMS THE $SEARCH, $ENTER, AND $REMOVE
                                     0000    27 ;	RMS FUNCTIONS.
                                     0000    28 ;
                                     0000    29 ; ENVIRONMENT:
                                     0000    30 ;		STAR PROCESSOR RUNNING STARLET EXEC.
                                     0000    31 ;
                                     0000    32 ; AUTHOR: L F LAVERDURE,	 CREATION DATE: 6-OCT-77
                                     0000    33 ;
                                     0000    34 ; MODIFIED BY:
                                     0000    35 ;
                                     0000    36 ;	L F LAVERDURE,   8-MAY-78  14:01
                                     0000    37 ; 01	- 
                                     0000    38 ;--
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page   2
009             DECLARATIONS                                                                                                     (1)

                                     0000    40 	.SBTTL	DECLARATIONS
                                     0000    41 ;
                                     0000    42 ; INCLUDE FILES:
                                     0000    43 ;
                                     0000    44 
                                     0000    45 ;
                                     0000    46 ; MACROS:
                                     0000    47 ;
                                     0000    48 	$FABDEF
                                     0000    49 	$NAMDEF
                                     0000    50 	$IFBDEF
                                     0000    51 	$FIBDEF
                                     0000    52 	$IODEF
                                     0000    53 	$RMSDEF
                                     0000    54 	.LIST MEB
                                     0000    55 
                                     0000    56 ;
                                     0000    57 ; EQUATED SYMBOLS:
                                     0000    58 ;
                           00000014  0000    59 	C_SWBSIZ=20			; STRING WORK BUFFER SIZE
                           FFFFFEC7  0000    60 	M_NAMCTL=^C<FIB$M_WILD!FIB$M_ALLNAM!FIB$M_ALLTYP!FIB$M_ALLVER>
                                     0000    61 					; MASK TO CLEAR UNWANTED FNB BITS
                           00000020  0000    62 	FOP=FAB$L_FOP*8			; BIT OFFSET TO FOP BITS
                                     0000    63 
                                     0000    64 ;
                                     0000    65 ; OWN STORAGE:
                                     0000    66 ;
                                     0000    67 
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page   3
009             RMS$SEARCH - COMMON CODE FOR MISCELLANEOUS CONT                                                                  (1)

                                     0000    69 	.SBTTL RMS$SEARCH - COMMON CODE FOR MISCELLANEOUS CONTROL ROUTINES
                                     0000    70 ;++
                                     0000    71 ; FUNCTIONAL DESCRIPTION:
                                     0000    72 ;
                                     0000    73 ;  THIS ROUTINE PERFORMS THE RMS SEARCH, ENTER, AND REMOVE SERVICES:
                                     0000    74 ;
                                     0000    75 ;    1.	CALLS RM$FSETI TO CREATE AN IFAB 
                                     0000    76 ;    2. VERIFIES THAT A NAM BLOCK HAS BEEN SPECIFIED, THAT IT IS
                                     0000    77 ;	ACCESSIBLE, AND THAT IT CONTAINS A VALID DEVICE ID AND
                                     0000    78 ;	DIRECTORY ID FIELD AND EXPANDED NAME STRING.
                                     0000    79 ;    3.	ASSIGNS A CHANNEL TO THE DEVICE, PREFACING THE DEVICE
                                     0000    80 ;	NAME WITH AN UNDERSCORE TO AVOID LOGICAL NAME TRANSLATION.
                                     0000    81 ;    4.	ALLOCATES AND INITIALIZES A FIB.
                                     0000    82 ;    5.	BUILDS THE QIO PARAMETERS AND ASSOCIATED DESCRIPTORS AND
                                     0000    83 ;	BUFFERS.
                                     0000    84 ;    6.	ISSUES THE QIO FUNCTION AND AWAITS ITS COMPLETION.
                                     0000    85 ;    7.	FILLS IN THE RESULTANT NAME STRING AND ITS LENGTH,
                                     0000    86 ;	IF SPECIFIED.
                                     0000    87 ;    8.	IF THE FUNCTION IS SEARCH, ALSO SETS THE FID AND WCC
                                     0000    88 ;	FIELDS OF THE NAM BLOCK.
                                     0000    89 ;    9.	DEALLOCATES THE FIB AND RESULTANT NAME STRING BUFFER.
                                     0000    90 ;   10.	BRANCHES TO RM$CLSCU TO DEASSIGN THE CHANNEL AND
                                     0000    91 ;	EVAPORATE THE IFAB.
                                     0000    92 ;
                                     0000    93 ; CALLING SEQUENCE:
                                     0000    94 ;
                                     0000    95 ;	ENTERED AS A RESULT OF USER'S CALLING
                                     0000    96 ;	SYS$SEARCH, SYS$ENTER OR SYS$REMOVE.
                                     0000    97 ;
                                     0000    98 ; INPUT PARAMETERS:
                                     0000    99 ;
                                     0000   100 ;	AP USER'S ARGUMENT LIST
                                     0000   101 ;
                                     0000   102 ; IMPLICIT INPUTS:
                                     0000   103 ;
                                     0000   104 ;	THE CONTENTS OF THE FAB (BID, BLN, IFI, NAM) AND THE
                                     0000   105 ;	RELATED NAM BLOCK.
                                     0000   106 ;
                                     0000   107 ; OUTPUT PARAMETERS:
                                     0000   108 ;
                                     0000   109 ;	R1 DESTROYED
                                     0000   110 ;	R0 STATUS CODE
                                     0000   111 ;
                                     0000   112 ; IMPLICIT OUTPUTS:
                                     0000   113 ;
                                     0000   114 ;	THE STS AND STV FIELDS OF THE FAB ARE OUTPUT ALONG WITH 
                                     0000   115 ;	THE FIELDS OF THE NAM BLOCK (RSL AND THE BUFFER AT RSA,
                                     0000   116 ;	PLUS FID AND WCC IF ENTRY AT RMS$SEARCH.)
                                     0000   117 ;
                                     0000   118 ;	A COMPLETION AST IS QUEUED IF SPECIFIED IN THE USER 
                                     0000   119 ;	ARGLIST.
                                     0000   120 ;
                                     0000   121 ; COMPLETION CODES:
                                     0000   122 ;
                                     0000   123 ;	STANDARD RMS, IN PARTICULAR DEV, DIR, DNF, DNR, ESA, ESL, 
                                     0000   124 ;	FAB, FND, FNF, FNM, IFI, NAM, PRV, RST, RSS, SYS, TYP, VER.
                                     0000   125 ;
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page   4
009             RMS$SEARCH - COMMON CODE FOR MISCELLANEOUS CONT                                                                  (1)

                                     0000   126 ; SIDE EFFECTS:
                                     0000   127 ;
                                     0000   128 ;	NONE
                                     0000   129 ;
                                     0000   130 ;--
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page   5
009             RMS$SEARCH - COMMON CODE FOR MISCELLANEOUS CONT                                                                  (1)

                                     0000   132 ;++
                                     0000   133 ;
                                     0000   134 ; ENTRY POINT FOR $ENTER FUNCTION
                                     0000   135 ;
                                     0000   136 ;--
                                     0000   137 	$ENTRY	RMS$ENTER
                                 00000000       	.PSECT	F$RMS0MISC,GBL,NOWRT
                          33     DD  0000   138 	PUSHL	#IO$_CREATE			; QIO FUNCTION CODE
                          06     11  0002   139 	BRB	MISCOM				; JOIN COMMON ROUTINE
                                     0004   140 ;++
                                     0004   141 ;
                                     0004   142 ; ENTRY POINT FOR $REMOVE FUNCTION
                                     0004   143 ;
                                     0004   144 ;--
                                     0004   145 	$ENTRY	RMS$REMOVE
                                 00000004       	.PSECT	F$RMS0MISC,GBL,NOWRT
                          35     DD  0004   146 	PUSHL	#IO$_DELETE			; QIO FUNCTION CODE
                          02     11  0006   147 	BRB	MISCOM				; JOIN COMMON ROUTINE
                                     0008   148 ;++
                                     0008   149 ;
                                     0008   150 ; ENTRY POINT FOR $SEARCH FUNCTION
                                     0008   151 ;
                                     0008   152 ;--
                                     0008   153 	$ENTRY	RMS$SEARCH
                                 00000008       	.PSECT	F$RMS0MISC,GBL,NOWRT
                          32     DD  0008   154 	PUSHL	#IO$_ACCESS			; QIO FUNCTION CODE
                                     000A   155 						; FALL INTO COMMON ROUTINE
                                     000A   156 ;++
                                     000A   157 ;
                                     000A   158 ; COMMON ROUTINE FOR ENTER, REMOVE AND ERASE.
                                     000A   159 ;
                                     000A   160 ;--
                                     000A   161 MISCOM:	$TSTPT	SEARCH				; FLAG ENTER, REMOVE, OR SEARCH DONE
                 00000200'9F     D6  000A       		INCL	@#PIO$GL_FMLH+512+TPT$L_SEARCH
                          FFED'  30  0010   162 	BSBW	RM$FSETI			; CREATE IFAB
                                     0013   163 						; RETURN TO USER ON ERROR
                                     0013   164 						; R11=IMPURE AREA ADDR
                                     0013   165 						; R9=IFAB ADDR
                                     0013   166 						; R8=FAB ADDR
                          6E     DD  0013   167 	PUSHL	(SP)				; DUPLICATE IO FUNCTION CODE ON
                                     0015   168 						; STACK SO THAT IT WON'T BE LOST
                                     0015   169 						; ON CALL TO RM$STALL!
            57         28 A8     D0  0015   170 	MOVL	FAB$L_NAM(R8),R7		; GET NAM BLK ADDR
                          017C   30  0019   171 	BSBW	CHKNAM				; GO CHECK OUT NAM BLOCK
            5F            50     E9  001C   172 	BLBC	R0,ERRNAM			; GET OUT IF PROBLEMS
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page   6
009             RMS$SEARCH - COMMON CODE FOR MISCELLANEOUS CONT                                                                  (1)

                                     001F   174 ;
                                     001F   175 ; PROCESS DVI (DEVICE ID) FIELD.
                                     001F   176 ; ALLOCATE A STRING WORK BUFFER, MOVE THE DVI
                                     001F   177 ; INTO IT, AND ASSIGN AN I/O CHANNEL
                                     001F   178 ;
            52            14     D0  001F   179 	MOVL	#C_SWBSIZ, R2			; SIZE OF STRING WORK BUFFER
            51            59     D0  0022   180 	MOVL	R9,R1				; SPACE HEADER ADDR
                          FFD8'  30  0025   181 	BSBW	RM$GETSPC			; GET THE SPACE (CAN'T FAIL)
                          51     DD  0028   182 	PUSHL	R1				; SAVE WORK SPACE ADDR
            81         5F 8F     90  002A   183 	MOVB	#^A/_/,(R1)+			; PREFIX UNDERSCORE
            7E         14 A7     9A  002E   184 	MOVZBL	NAM$T_DVI(R7),-(SP)		; GET DEVICE ID LENGTH
                          4D     13  0032   185 	BEQL	ERRDVI				; BRANCH IF NONE
            0F            6E     91  0034   186 	CMPB	(SP),#15			; DVI LEN IN RANGE?
                          48     1A  0037   187 	BGTRU	ERRDVI				; BRANCH IF NOT
         15 A7            6E     28  0039   188 	MOVC3	(SP),NAM$T_DVI+1(R7),(R1)	; COPY DVI STRING
                          61         003D       
                          6E     D6  003E   189 	INCL	(SP)				; AND COUNT THE UNDERSCORE
            50            5E     D0  0040   190 	MOVL	SP,R0				; SAVE ADDRESS OF DEVICE DESCRIPTOR
                                     0043   191 	$ASSIGN_S	(R0),IFB$W_CHNL(R9)	; ASSIGN CHANNEL
                          7E     7C  0043       		CLRQ	-(SP)
                       20 A9     3F  0045       		PUSHAW	IFB$W_CHNL(R9)
                          60     7F  0048       		PUSHAQ	(R0)
   00000000'GF            04     FB  004A       		CALLS	#4,G^SYS$ASSIGN
            30            50     E9  0051   192 	BLBC	R0,ERRASG			; GET OUT ON ERROR
                                     0054   193 ;
                                     0054   194 ; NOW ALLOCATE A FIB AND INITIALIZE IT
                                     0054   195 ;
                       2A A7     B5  0054   196 	TSTW	NAM$W_DID(R7)				; IS DID NON ZERO?
                          2E     13  0057   197 	BEQL	ERRDNF					; BRANCH IF NONE
            52            18     D0  0059   198 	MOVL	#<<FIB$C_DIRDATA+3>&^XFC>,R2		; SIZE OF FIB SPACE
            51            59     D0  005C   199 	MOVL	R9,R1					; SPACE HEADER ADDR
                          FF9E'  30  005F   200 	BSBW	RM$GETSPC				; GET THE SPACE (CAN'T FAIL)
            5A            51     D0  0062   201 	MOVL	R1,R10					; SAVE THE ADDR OF THE FIB
                                     0065   202 	ASSUME	FIB$W_DID EQ FIB$W_FID+6
                                     0065   203 	ASSUME	NAM$W_DID EQ NAM$W_FID+6
         04 AA         24 A7     7D  0065   204 	MOVQ	NAM$W_FID(R7),FIB$W_FID(R10)		; SET FID AND DID WORD 1
         0C AA         2C A7     D0  006A   205 	MOVL	NAM$W_DID_SEQ(R7),FIB$W_DID_SEQ(R10)	; SET REST OF DID
         34 A7       FEC7 8F     AB  006F   206 	BICW3	#M_NAMCTL,NAM$L_FNB(R7),FIB$W_NMCTL(R10); SET WILD CARD FLAGS
                       14 AA         0075       
         10 AA         30 A7     D0  0077   207 	MOVL	NAM$L_WCC(R7),FIB$L_WCC(R10)		; AND CONTEXT
                          18     11  007C   208 	BRB	BLDDSC					; AND CONTINUE
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page   7
009             RMS$SEARCH - COMMON CODE FOR MISCELLANEOUS CONT                                                                  (1)

                                     007E   210 ;++
                                     007E   211 ;
                                     007E   212 ; HANDLE ERROR CONDITIONS
                                     007E   213 ;
                                     007E   214 ;--
                          FF7F'  31  007E   215 ERRNAM:	BRW	RM$CLSCU			; BAD NAM BLOCK
                                     0081   216 ;
                                     0081   217 ERRDVI:	$PSECT_BR L$RMS0
                          FF7C'  31  0081       		BRW	L$RMS00
                                     0084       		.SAVE
                                 00000000       		.PSECT	L$RMS0,GBL,NOWRT
                                     0000       L$RMS00:
                                     0000   218 	RMSERR	DVI				; BAD DEVICE ID LENGTH
            50       84F4 8F     3C  0000       		MOVZWL	#<RMS$_DVI&^XFFFF>,R0
                                     0005   219 SETSWB:
                           00000008  0005   220 	.IF NE $$RMSTEST & $$RMS_TBUGCHK
                          12     BA  0005   221 	POPR	#^M<R1,R4>			; SET STRING WORK BUFFER
                                     0007   222 						; ADDR FOR RM$RETSPC INTO R4
                          50     DD  0007   223 	PUSHL	R0				; PUSH STATUS CODE
                          017E'  31  0009   224 	BRW	CLEANUP1			; AND GO CLEANUP
                                     000C   225 	.IFF
                                     000C   226 	BRW	RM$CLSCU			; GO CLEAN UP
                                     000C   227 	.ENDC
                                     000C   228 	$PSECT_RESTORE
                                 00000084       		.RESTORE
                                     0084   229 ;
                                     0084   230 ERRASG:	$PSECT_BR L$RMS0			; ASSIGN FAILED
                          FF85'  31  0084       		BRW	L$RMS01
                                     0087       		.SAVE
                                 0000000C       		.PSECT	L$RMS0,GBL,NOWRT
                                     000C       L$RMS01:
                          FFF1'  30  000C   231 	BSBW RM$ERRASGN				; GO SET ERROR CODE AND MAYBE STV
                          F4     11  000F   232 	BRB SETSWB				; AND GO CLEAN UP
                                     0011   233 	$PSECT_RESTORE
                                 00000087       		.RESTORE
                                     0087   234 ;
                                     0087   235 ERRDNF:	$PSECT_BR L$RMS0			; DID WAS ZERO
                          FF87'  31  0087       		BRW	L$RMS02
                                     008A       		.SAVE
                                 00000011       		.PSECT	L$RMS0,GBL,NOWRT
                                     0011       L$RMS02:
                                     0011   236 	RMSERR DNF				; SAY DIRECTORY NOT FOUND
            50       C04A 8F     3C  0011       		MOVZWL	#<RMS$_DNF&^XFFFF>,R0
                          ED     11  0016   237 	BRB SETSWB				; GO CLEAN UP
                                     0018   238 	$PSECT_RESTORE
                                 0000008A       		.RESTORE
                                     008A   239 ;
                                     008A   240 ERRESL:	$PSECT_BR L$RMS0			; ESL WAS ZERO
                          FF8B'  31  008A       		BRW	L$RMS03
                                     008D       		.SAVE
                                 00000018       		.PSECT	L$RMS0,GBL,NOWRT
                                     0018       L$RMS03:
                                     0018   241 	RMSERR ESL				; SET STATUS CODE
            50       8714 8F     3C  0018       		MOVZWL	#<RMS$_ESL&^XFFFF>,R0
                                     001D   242 SETSTK:
                           00000008  001D   243 	.IF NE $$RMSTEST & $$RMS_TBUGCHK
                          03     BB  001D   244 	PUSHR #^M<R0,R1>			; PUSH FAKE DESCRIPTOR
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page   8
009             RMS$SEARCH - COMMON CODE FOR MISCELLANEOUS CONT                                                                  (1)

                                     001F   245 						; TO ALIGN STACK
                          25     11  001F   246 	BRB CLNBR				; AND GO CLEAN UP
                                     0021   247 	.IFF
                                     0021   248 	BRB SETSWB				; GO CLEAN UP
                                     0021   249 	.ENDC
                                     0021   250 	$PSECT_RESTORE
                                 0000008D       		.RESTORE
                                     008D   251 ;
                                     008D   252 ERRESA:	$PSECT_BR L$RMS0			; BAD EXPANDED STRING
                          FF91'  31  008D       		BRW	L$RMS04
                                     0090       		.SAVE
                                 00000021       		.PSECT	L$RMS0,GBL,NOWRT
                                     0021       L$RMS04:
                                     0021   253 	RMSERR ESA				; EITHER INACCESSIBLE
            50       84FC 8F     3C  0021       		MOVZWL	#<RMS$_ESA&^XFFFF>,R0
                                     0026   254 						; OR HAS NO DIRECTORY
                          F5     11  0026   255 	BRB SETSTK				; GO CLEAN UP
                                     0028   256 ;
                                     0028   257 ;  ERROR ON QIO FUNCTION
                                     0028   258 ;
                                     0028   259 ERRFCP:
                                     0028   260 	RMSERR	ENT,R1				; ASSUME ENTER FAILED
            51       C01A 8F     3C  0028       		MOVZWL	#<RMS$_ENT&^XFFFF>,R1
            33         18 AE     D1  002D   261 	CMPL	24(SP),#IO$_CREATE		; ASSUMPTION CORRECT?
                          10     13  0031   262 	BEQL	MAPERR				; BRANCH IF YES
                                     0033   263 	RMSERR	FND,R1				; NO - ASSUME SEARCH FAILED
            51       C02A 8F     3C  0033       		MOVZWL	#<RMS$_FND&^XFFFF>,R1
            32         18 AE     D1  0038   264 	CMPL	24(SP),#IO$_ACCESS		; ASSUMPTION CORRECT?
                          05     13  003C   265 	BEQL	MAPERR				; BRANCH IF YES
                                     003E   266 	RMSERR	RMV,R1				; MUST HAVE BEEN REMOVE
            51       C0FC 8F     3C  003E       		MOVZWL	#<RMS$_RMV&^XFFFF>,R1
                          FFBA'  30  0043   267 MAPERR:	BSBW RM$MAPERR				; GO MAP ERROR
                          0132'  31  0046   268 CLNBR:	BRW CLEANUP				; GO CLEAN UP
                                     0049   269 	$PSECT_RESTORE
                                 00000090       		.RESTORE
                                     0090   270 ;
                                     0090   271 ERRRSA:	$PSECT_BR L$RMS0
                          FFB6'  31  0090       		BRW	L$RMS05
                                     0093       		.SAVE
                                 00000049       		.PSECT	L$RMS0,GBL,NOWRT
                                     0049       L$RMS05:
                                     0049   272 	RMSERR RST				; INVALID R.S. BUFFER
            50       869C 8F     3C  0049       		MOVZWL	#<RMS$_RST&^XFFFF>,R0
                          F6     11  004E   273 	BRB CLNBR				; GO CLEAN UP
                                     0050   274 	$PSECT_RESTORE
                                 00000093       		.RESTORE
                                     0093   275 ;
                                     0093   276 ERRRSL:	$PSECT_BR L$RMS0
                          FFBA'  31  0093       		BRW	L$RMS06
                                     0096       		.SAVE
                                 00000050       		.PSECT	L$RMS0,GBL,NOWRT
                                     0050       L$RMS06:
                                     0050   277 	RMSERR RSL				; R.S. LENGTH TOO LONG
            50       873C 8F     3C  0050       		MOVZWL	#<RMS$_RSL&^XFFFF>,R0
                          EF     11  0055   278 	BRB CLNBR
                                     0057   279 	$PSECT_RESTORE
                                 00000096       		.RESTORE
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page   9
009             RMS$SEARCH - COMMON CODE FOR MISCELLANEOUS CONT                                                                  (1)

                                     0096   281 ;
                                     0096   282 ; BUILD THE QIO DESCRIPTORS
                                     0096   283 ;
            6E            14     D0  0096   284 BLDDSC:	MOVL	#C_SWBSIZ,(SP)			; CHANGE LENGTH OF STRING
                                     0099   285 						; BUFFER IN DESCRIPTOR ON STACK
                          5A     DD  0099   286 	PUSHL	R10				; BUILD FIB DESCRIPTOR-FIB ADDR
                          16     DD  009B   287 	PUSHL	#FIB$C_DIRDATA			; + LENGTH
                                     009D   288 						; BUILD NAME STRING DESCRIPTOR
            55         0B A7     9A  009D   289 	MOVZBL	NAM$B_ESL(R7),R5		; LENGTH OF EXPANDED STRING
                          E7     13  00A1   290 	BEQL	ERRESL				; BRANCH IF BAD
                                     00A3   291 	IFNORD	R5,@NAM$L_ESA(R7),ERRESA	; BRANCH IF ESA NOT ACCESSIBLE
            55            00     0C  00A3       		PROBER	#0,R5,@NAM$L_ESA(R7)
                       0C B7         00A6       
                          E3     13  00A8       		BEQL	ERRESA
            55         5D 8F     3A  00AA   292 	LOCC	#^A/]/,R5,@NAM$L_ESA(R7)	; SCAN FOR DIRECTORY TERMINATOR
                       0C B7         00AE       
                          07     12  00B0   293 	BNEQ	10$				; BRANCH IF FOUND
            55            3E     3A  00B2   294 	LOCC	#^A/>/,R5,@NAM$L_ESA(R7)	; SCAN FOR ALTERNATE TERM
                       0C B7         00B5       
                          D4     13  00B7   295 	BEQL	ERRESA				; BRANCH IF NOT FOUND
                          51     D6  00B9   296 10$:	INCL	R1				; BUMP ADDR PAST TERMINATOR
                          50     D7  00BB   297 	DECL	R0				; AND DECREMENT THE COUNT
                          03     BB  00BD   298 	PUSHR	#^M<R0,R1>			; NAME STRING DESCRIPTOR TO STACK
                                     00BF   299 ;
                                     00BF   300 ; THE STACK IS NOW AS FOLLOWS:
                                     00BF   301 ;
                                     00BF   302 ;	(SP)	NAME STRING DESCRIPTOR
                                     00BF   303 ;      8(SP)	FIB DESCRIPTOR
                                     00BF   304 ;     16(SP)	RESULTANT NAME STRING BUFFER DESCRIPTOR
                                     00BF   305 ;     24(SP)	QIO FUNCTION CODE
                                     00BF   306 ;
                                     00BF   307 ;  COPY THE RESULTANT STRING TO THE RESULTANT STRING BUFFER FOR FILE LOOKUP
                                     00BF   308 ;
            55         03 A7     9A  00BF   309 	MOVZBL	NAM$B_RSL(R7),R5		; LENGTH OF RESULTANT STRING
                          27     13  00C3   310 	BEQL	40$				; BRANCH IF ZERO
                                     00C5   311 	IFNORD	R5,@NAM$L_RSA(R7),ERRRSA	; BRANCH IF RSA NOT ACCESSIBLE
            55            00     0C  00C5       		PROBER	#0,R5,@NAM$L_RSA(R7)
                       04 B7         00C8       
                          C4     13  00CA       		BEQL	ERRRSA
            55         5D 8F     3A  00CC   312 	LOCC	#^A/]/,R5,@NAM$L_RSA(R7)	; SCAN FOR DIRECTORY TERMINATOR
                       04 B7         00D0       
                          07     12  00D2   313 	BNEQ	20$				; BRANCH IF FOUND
            55            3E     3A  00D4   314 	LOCC	#^A/>/,R5,@NAM$L_RSA(R7)	; SCAN FOR ALTERNATE TERM
                       04 B7         00D7       
                          B5     13  00D9   315 15$:	BEQL	ERRRSA				; BRANCH IF NOT FOUND
                          50     D7  00DB   316 20$:	DECL	R0				; DECREMENT REMAINING COUNT
                                     00DD   317 						; GIVING LEN. OF NAME, TYPE & VER.
            14            50     D1  00DD   318 	CMPL	R0,#C_SWBSIZ			; LEN. IN RANGE?
                          B1     1A  00E0   319 	BGTRU	ERRRSL				; BRANCH IF NOT
         50 A9            50     D0  00E2   320 	MOVL	R0,IFB$L_RNS_LEN(R9)		; TELL ACP ABOUT LENGTH
         01 A1            50     28  00E6   321 	MOVC3	R0,1(R1),@20(SP)		; COPY RESULTANT NAME STR TO BUFFER
                       14 BE         00EA       
                                     00EC   322 40$:
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page  10
009             RMS$SEARCH - COMMON CODE FOR MISCELLANEOUS CONT                                                                  (1)

                                     00EC   324 ;
                                     00EC   325 ;  IF THIS IS REMOVE AND THE NAM FOP BIT IS SET, SET FIB BIT TO DO
                                     00EC   326 ;  FIND VIA FILE ID
                                     00EC   327 ;
            50         18 AE     D0  00EC   328 	MOVL	24(SP),R0			; GET QIO FUNCTION CODE
            35            50     91  00F0   329 	CMPB	R0,#IO$_DELETE			; IS THIS REMOVE?
                          0E     12  00F3   330 	BNEQ	50$				; BRANCH IF NOT
            68            38     E1  00F5   331 	BBC	#FAB$V_NAM+FOP,(R8),50$		; BRANCH IF 'NAM' BIT NOT SET
                          0A         00F8       
                       04 AA     D5  00F9   332 	TSTL	FIB$W_FID(R10)			; FID ALSO SET?
                          05     13  00FC   333 	BEQL	50$				; BRANCH IF NOT
                                     00FE   334 	SSB	#FIB$V_FINDFID,FIB$W_NMCTL(R10)	; FLAG REMOVE VIA FILE ID
         14 AA            0B     E2  00FE       		BBSS	#FIB$V_FINDFID,FIB$W_NMCTL(R10),30000$
                          00         0102       
                                     0103       30000$:
                                     0103   335 50$:
                                     0103   336 ;
                                     0103   337 ; PUSH THE QIO PARAMETERS
                                     0103   338 ;
                          7E     7C  0103   339 	CLRQ	-(SP)				; P6=P5=0
                       18 AE     7F  0105   340 	PUSHAQ	16+8(SP)			; P4=RESULTANT DESCRIPTOR
                       50 A9     DF  0108   341 	PUSHAL	IFB$L_RNS_LEN(R9)		; P3=ADDR OF LONGWORD
                                     010B   342 						; TO RECEIVE RESULTANT LENGTH
                       10 AE     7F  010B   343 	PUSHAQ	0+16(SP)			; P2=NAME DESCRIPTOR
                       1C AE     7F  010E   344 	PUSHAQ	8+20(SP)			; P1=FIB DESCRIPTOR
                          FEEC'  30  0111   345 	BSBW	RM$FCPFNC_ALT2			; DO QIO AND WAIT
            03            50     E8  0114   346 	BLBS	R0,60$				; BRANCH ON SUCCESS
                          FF0E'  31  0117   347 	BRW	ERRFCP				; GET OUT ON ERROR
                                     011A   348 ;
                                     011A   349 ; FILL IN THE RESULTANT STRING IF WANTED
                                     011A   350 ;
                          7C     10  011A   351 60$:	BSBB	CHKNAM				; REPROBE NAM BLOCK
            5C            50     E9  011C   352 	BLBC	R0,CLEANUP			; GET OUT ON ERROR
                       04 A7     D5  011F   353 	TSTL	NAM$L_RSA(R7)			; CHECK FOR RESULTANT BUFFER
                          2F     13  0122   354 	BEQL	CHKFNC				; BRANCH IF NONE SPECED
            50         02 A7     9A  0124   355 	MOVZBL	NAM$B_RSS(R7),R0		; GET RESULTANT BUFFER SIZE
                          29     13  0128   356 	BEQL	CHKFNC				; IGNORE IF NONE WANTED
                                     012A   357 	IFNOWRT	R0,@NAM$L_RSA(R7),15$,IFB$B_MODE(R9)
            50         0A A9     0D  012A       		PROBEW	IFB$B_MODE(R9),R0,@NAM$L_RSA(R7)
                       04 B7         012E       
                          A7     13  0130       		BEQL	15$
                                     0132   358 						; PROBE BUFFER
            55         0B A7     9A  0132   359 	MOVZBL	NAM$B_ESL(R7),R5		; GET EXPANDED STRING LENGTH
            55            6E     C2  0136   360 	SUBL2	(SP),R5				; COMPUTE SIZE OF EXPANDED
                                     0139   361 						; STRING THRU DIRECTORY
                                     0139   362 						; (=ESL-LEN NAME+TYPE+VER)
         50 A9            55     C1  0139   363 	ADDL3	R5,IFB$L_RNS_LEN(R9),R1		; COMPUTE TOTAL RESULTANT STRING LENGTH
                          51         013D       
                                     013E   364 						; (=E.S. PART+R.S. PART)
            50            51     D1  013E   365 	CMPL	R1,R0				; TOO BIG FOR BUFFER?
                          5C     1A  0141   366 	BGTRU	ERRRSS				; BRANCH IF YES
         03 A7            51     90  0143   367 	MOVB	R1,NAM$B_RSL(R7)		; STORE RESULTANT STRING LENGTH
         0C B7            55     28  0147   368 	MOVC3	R5,@NAM$L_ESA(R7),@NAM$L_RSA(R7)
                       04 B7         014B       
                                     014D   369 						; COPY NODE,DEV,DIR FROM E.S.
         14 BE         50 A9     28  014D   370 	MOVC3	IFB$L_RNS_LEN(R9),@20(SP),(R3)	; COPY NAM,TYP,VER FROM
                          63         0152       
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page  11
009             RMS$SEARCH - COMMON CODE FOR MISCELLANEOUS CONT                                                                  (1)

                                     0153   371 						; RESULTANT NAME STRING BUFFER
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page  12
009             RMS$SEARCH - COMMON CODE FOR MISCELLANEOUS CONT                                                                  (1)

                                     0153   373 ;
                                     0153   374 ; IF THE FUNCTION IS ENTER, SET THE HIGHVER AND LOWVER
                                     0153   375 ; APPROPRIATELY IN NAM$L_FNB, OTHERWISE STORE THE WILD CARD
                                     0153   376 ; CONTEXT (NAM$L_WCC) AND IF THE FUNCTION IS SEARCH, RETURN THE
                                     0153   377 ; FILE ID.
                                     0153   378 ;
            33         18 AE     91  0153   379 CHKFNC:	CMPB	24(SP),#IO$_CREATE		; WAS FUNCTION 'ENTER'
                          13     13  0157   380 	BEQL	10$				; BRANCH IF YES
         30 A7         10 AA     D0  0159   381 	MOVL	FIB$L_WCC(R10),NAM$L_WCC(R7)	; STORE WILD CARD CONTEXT
            35         18 AE     91  015E   382 	CMPB	24(SP),#IO$_DELETE		; WAS FUNCTION 'REMOVE'
                          14     13  0162   383 	BEQL	SUCXIT				; BRANCH IF YES
         04 AA            06     28  0164   384 	MOVC3	#6,FIB$W_FID(R10),NAM$W_FID(R7)	; STORE FILE ID FOR SEARCH
                       24 A7         0168       
                          0C     11  016A   385 	BRB	SUCXIT				; ALL SET
                                     016C   386 	ASSUME	FIB$V_HIGHVER EQ FIB$V_LOWVER+1
            02            0E     EF  016C   387 10$:	EXTZV	#FIB$V_LOWVER,#2,FIB$W_NMCTL(R10),R0
            50         14 AA         016F       
                                     0172   388 						; EXTRACT LOWVER+HIGHVER BITS
                                     0172   389 	ASSUME	NAM$V_HIGHVER EQ NAM$V_LOWVER+1
            0E            50     F0  0172   390 	INSV	R0,#NAM$V_LOWVER,#2,NAM$L_FNB(R7)
         34 A7            02         0175       
                                     0178   391 						; AND SET INTO FNB
                                     0178   392 ;
                                     0178   393 ; ALL SET. SET STATUS CODE TO SUCCESS, DEALLOCATE THE STRING
                                     0178   394 ; WORK BUFFER AND FIB AND BRANCH TO RM$CLSCU TO DEASSIGN THE
                                     0178   395 ; CHANNEL AND EVAPORATE THE IFAB.
                                     0178   396 ;
                                     0178   397 SUCXIT:	RMSSUC					; SHOW SUCCESS
            50            01     D0  0178       		MOVL	#1,R0
                                     017B   398 CLEANUP:
                           00000008  017B   399 	.IF NE $$RMSTEST & $$RMS_TBUGCHK
                          50     DD  017B   400 	PUSHL	R0				; SAVE STATUS CODE
            53            59     7D  017D   401 	MOVQ	R9,R3				; R3=SPACE HEADER ADDR,
                                     0180   402 						; R4=FIB ADDR
            52            18     9A  0180   403 	MOVZBL	#<<FIB$C_DIRDATA+3>&^XFC>,R2	; LENGTH OF FIB SPACE
                          FE7A'  30  0183   404 	BSBW	RM$RETSPC			; DEALLOCATE FIB
            54         18 AE     D0  0186   405 	MOVL	20+4(SP),R4			; SET ADDRESS OF STRING WORK BUFFER
                                     018A   406 CLEANUP1:
            53            59     D0  018A   407 	MOVL	R9,R3				; SET SPACE HEADER ADDR
            52            14     D0  018D   408 	MOVL	#C_SWBSIZ,R2			; SET SIZE OF STRING WORK BUFFER
                          FE6D'  30  0190   409 	BSBW	RM$RETSPC			; DEALLOCATE STRING WORK BUFFER
                          01     BA  0193   410 	POPR	#^M<R0>				; RESTORE STATUS CODE
                                     0195   411 	.ENDC
                          FE68'  31  0195   412 	BRW	RM$CLSCU			; GO EVAPORATE IFAB
                                     0198   413 						; + RETURN TO USER
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page  13
009             RMS$SEARCH - COMMON CODE FOR MISCELLANEOUS CONT                                                                  (1)

                                     0198   415 ;++
                                     0198   416 ;
                                     0198   417 ; SUBROUTINE TO VERIFY GOODNESS OF NAM BLOCK
                                     0198   418 ;
                                     0198   419 ; INPUTS:	R7	NAM BLOCK ADDR
                                     0198   420 ; OUTPUTS:	R0	STATUS CODE
                                     0198   421 ;		R6	DESTROYED
                                     0198   422 ;--
                          FE65'  30  0198   423 CHKNAM:	BSBW	RM$CHKNAMBLK			; VERIFY NAM BLOCK
                                     019B   424 						; (NOTE: RETURNS TO CALLER
                                     019B   425 						; OF CHKNAM IF IN ERROR)
                                     019B   426 	RMSSUC					; SHOW SUCCESS
            50            01     D0  019B       		MOVL	#1,R0
                                 05  019E   427 	RSB
                                     019F   428 
                                     019F   429 ;++
                                     019F   430 ;
                                     019F   431 ;  HANDLE ERROR
                                     019F   432 ;
                                     019F   433 ;--
                                     019F   434 ERRRSS:	$PSECT_BR L$RMS0
                          FEB5'  31  019F       		BRW	L$RMS07
                                     01A2       		.SAVE
                                 00000057       		.PSECT	L$RMS0,GBL,NOWRT
                                     0057       L$RMS07:
                                     0057   435 	RMSERR RSS				; R.S. BUFFER TOO SHORT
            50       8694 8F     3C  0057       		MOVZWL	#<RMS$_RSS&^XFFFF>,R0
                          E8     11  005C   436 	BRB CLNBR
                                     005E   437 	$PSECT_RESTORE
                                 000001A2       		.RESTORE
                                     01A2   438 
                                     01A2   439 	.END
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                     (1)

$$.PSECT_EP    = 00000008            FAB$L_NAM        00000028            FAB$S_PPF_RAT  = 00000008            
$$RMSTEST      = 0000001A            FAB$L_SDC        00000044            FAB$V_BIO      = 00000005            
$$RMS_PBUGCHK  = 00000010            FAB$L_STS        00000008            FAB$V_BLK      = 00000003            
$$RMS_TBUGCHK  = 00000008            FAB$L_STV        0000000C            FAB$V_BRO      = 00000006            
$$RMS_UMODE    = 00000004            FAB$L_XAB        00000024            FAB$V_CBT      = 00000015            
$$T1           = 00000001            FAB$M_BIO      = 00000020            FAB$V_CIF      = 00000019            
BIT...         = 0001C134            FAB$M_BLK      = 00000008            FAB$V_CR       = 00000001            
BLDDSC           00000096 R     02   FAB$M_BRO      = 00000040            FAB$V_CTG      = 00000014            
CHKFNC           00000153 R     02   FAB$M_CBT      = 00200000            FAB$V_DEL      = 00000002            
CHKNAM           00000198 R     02   FAB$M_CIF      = 02000000            FAB$V_DFW      = 00000005            
CLEANUP          0000017B R     02   FAB$M_CR       = 00000002            FAB$V_DLT      = 0000000F            
CLEANUP1         0000018A R     02   FAB$M_CTG      = 00100000            FAB$V_DMO      = 0000000C            
CLNBR            00000046 R     04   FAB$M_DEL      = 00000004            FAB$V_ESC      = 0000001B            
C_SWBSIZ       = 00000014            FAB$M_DFW      = 00000020            FAB$V_EXE      = 00000007            
ERRASG           00000084 R     02   FAB$M_DLT      = 00008000            FAB$V_FTN      = 00000000            
ERRDNF           00000087 R     02   FAB$M_DMO      = 00001000            FAB$V_GET      = 00000001            
ERRDVI           00000081 R     02   FAB$M_ESC      = 08000000            FAB$V_INP      = 00000013            
ERRESA           0000008D R     02   FAB$M_EXE      = 00000080            FAB$V_JNL      = 00000016            
ERRESL           0000008A R     02   FAB$M_FTN      = 00000001            FAB$V_KFO      = 0000001E            
ERRFCP           00000028 R     04   FAB$M_GET      = 00000002            FAB$V_MSE      = 00000004            
ERRNAM           0000007E R     02   FAB$M_INP      = 00080000            FAB$V_MXV      = 00000001            
ERRRSA           00000090 R     02   FAB$M_JNL      = 00400000            FAB$V_NAM      = 00000018            
ERRRSL           00000093 R     02   FAB$M_KFO      = 40000000            FAB$V_NEF      = 0000000A            
ERRRSS           0000019F R     02   FAB$M_MSE      = 00000010            FAB$V_NFS      = 00000010            
FAB$B_BID        00000000            FAB$M_MXV      = 00000002            FAB$V_NIL      = 00000005            
FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            FAB$V_OFP      = 0000001D            
FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            FAB$V_ORG      = 00000004            
FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            FAB$V_POS      = 00000008            
FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            FAB$V_PPF      = 00000012            
FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            FAB$V_PPF_IND  = 0000000E            
FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            FAB$V_PPF_RAT  = 00000006            
FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            FAB$V_PRN      = 00000002            
FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            FAB$V_PUT      = 00000000            
FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            FAB$V_RCK      = 00000017            
FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            FAB$V_RWC      = 0000000B            
FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            FAB$V_RWO      = 00000007            
FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            FAB$V_SCF      = 0000000E            
FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            FAB$V_SHRDEL   = 00000002            
FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            FAB$V_SHRGET   = 00000001            
FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            FAB$V_SHRPUT   = 00000000            
FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            FAB$V_SHRUPD   = 00000003            
FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            FAB$V_SPL      = 0000000D            
FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            FAB$V_SQO      = 00000006            
FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            FAB$V_SUP      = 00000002            
FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            FAB$V_TEF      = 0000001C            
FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            FAB$V_TMD      = 00000004            
FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            FAB$V_TMP      = 00000003            
FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            FAB$V_TRN      = 00000004            
FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            FAB$V_UFM      = 0000001A            
FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            FAB$V_UFO      = 00000011            
FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            FAB$V_UPD      = 00000003            
FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            FAB$V_UPI      = 00000006            
FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            FAB$V_WCK      = 00000009            
FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            FAB$W_BLS        0000003C            
FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            FAB$W_DEQ        00000014            
FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            FAB$W_IFI        00000002            
FAB$L_MRN        00000038            FAB$S_ORG      = 00000004            FAB$W_MRS        00000036            
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                     (1)

FIB$B_ALALIGN    00000021            FIB$M_NOWRITE  = 00000001            FIB$W_LOC_FID    00000022            
FIB$B_ALOPTS     00000020            FIB$M_ONCYL    = 00000002            FIB$W_LOC_NUM    00000022            
FIB$B_DID_NMX    0000000F            FIB$M_PRSRV_ATR= 00020000            FIB$W_LOC_RVN    00000026            
FIB$B_DID_RVN    0000000E            FIB$M_READCK   = 00000200            FIB$W_LOC_SEQ    00000024            
FIB$B_FID_NMX    00000009            FIB$M_REWIND   = 00000008            FIB$W_NMCTL      00000014            
FIB$B_FID_RVN    00000008            FIB$M_SEQONLY  = 00000040            FOP            = 00000020            
FIB$B_LOC_NMX    00000027            FIB$M_SPOOL    = 00000010            GBL...         = 00000000            
FIB$B_LOC_RVN    00000026            FIB$M_SUPERSEDE= 00000400            IFB$B_AMAX       00000059            
FIB$B_WSIZE      00000003            FIB$M_TRUNC    = 00000100            IFB$B_AVBN       00000058            
FIB$C_ACCDATA    0000000A            FIB$M_UPDATE   = 00000040            IFB$B_BID        00000008            
FIB$C_ALCDATA    0000002C            FIB$M_WILD     = 00000100            IFB$B_BKS        0000004A            
FIB$C_CYL      = 00000001            FIB$M_WRITE    = 00000100            IFB$B_BLN        00000009            
FIB$C_DIRDATA    00000016            FIB$M_WRITECK  = 00000020            IFB$B_EFN        0000000B            
FIB$C_EXTDATA    00000020            FIB$V_ALCON    = 00000000            IFB$B_EXTRABUF   0000005D            
FIB$C_ILLEGAL  = 00000005            FIB$V_ALCONB   = 00000001            IFB$B_FAC        00000022            
FIB$C_LBN      = 00000002            FIB$V_ALDEF    = 00000003            IFB$B_FSZ        0000004B            
FIB$C_LENGTH     0000002C            FIB$V_ALLNAM   = 00000005            IFB$B_KBUFSZ     0000005C            
FIB$C_MTALEN     0000001C            FIB$V_ALLTYP   = 00000004            IFB$B_MODE       0000000A            
FIB$C_NEXTVOL  = 00000003            FIB$V_ALLVER   = 00000003            IFB$B_NUM_KEYS   0000005A            
FIB$C_POSEND   = 00000002            FIB$V_CURPOS   = 00000004            IFB$B_ORGCASE    00000023            
FIB$C_REWINDFIL= 00000006            FIB$V_DLOCK    = 00000001            IFB$B_RAT        0000003D            
FIB$C_REWINDVOL= 00000001            FIB$V_EXACT    = 00000000            IFB$B_RFMORG     0000003C            
FIB$C_RFI      = 00000004            FIB$V_EXECUTE  = 00000010            IFB$B_UBUFSZ     0000005B            
FIB$C_SPACE    = 00000004            FIB$V_EXTEND   = 00000007            IFB$C_BID      = 0000000B            
FIB$C_VBN      = 00000003            FIB$V_FILCON   = 00000002            IFB$C_BLN        00000060            
FIB$K_ACCDATA    0000000A            FIB$V_FINDFID  = 0000000B            IFB$C_BLN_IDX    00000060            
FIB$K_ALCDATA    0000002C            FIB$V_HIGHVER  = 0000000F            IFB$C_BLN_REL    00000060            
FIB$K_DIRDATA    00000016            FIB$V_LOWVER   = 0000000E            IFB$C_BLN_SEQ    0000005C            
FIB$K_EXTDATA    00000020            FIB$V_MARKBAD  = 0000000A            IFB$C_DIR      = 00000003            
FIB$K_LENGTH     0000002C            FIB$V_NEWVER   = 00000009            IFB$C_FHAEND     00000050            
FIB$K_MTALEN     0000001C            FIB$V_NOHDREXT = 00000009            IFB$C_IDX      = 00000002            
FIB$L_ACCTL      00000000            FIB$V_NOREAD   = 0000000A            IFB$C_MAXORG   = 00000002            
FIB$L_CNTRLVAL   00000018            FIB$V_NOTRUNC  = 0000000B            IFB$C_REL      = 00000001            
FIB$L_EXSZ       00000018            FIB$V_NOWRITE  = 00000000            IFB$C_SEQ      = 00000000            
FIB$L_EXVBN      0000001C            FIB$V_ONCYL    = 00000001            IFB$K_BLN        00000060            
FIB$L_LOC_ADDR   00000028            FIB$V_PRSRV_ATR= 00000011            IFB$K_BLN_IDX    00000060            
FIB$L_WCC        00000010            FIB$V_READCK   = 00000009            IFB$K_BLN_REL    00000060            
FIB$M_ALCON    = 00000001            FIB$V_REWIND   = 00000003            IFB$K_BLN_SEQ    0000005C            
FIB$M_ALCONB   = 00000002            FIB$V_SEQONLY  = 00000006            IFB$K_FHAEND     00000050            
FIB$M_ALDEF    = 00000008            FIB$V_SPOOL    = 00000004            IFB$L_ARGLST     00000018            
FIB$M_ALLNAM   = 00000020            FIB$V_SUPERSEDE= 0000000A            IFB$L_ASBADDR    00000014            
FIB$M_ALLTYP   = 00000010            FIB$V_TRUNC    = 00000008            IFB$L_AS_DEV     00000054            
FIB$M_ALLVER   = 00000008            FIB$V_UPDATE   = 00000006            IFB$L_BDB_BLNK   00000034            
FIB$M_CURPOS   = 00000010            FIB$V_WILD     = 00000008            IFB$L_BDB_FLNK   00000030            
FIB$M_DLOCK    = 00000002            FIB$V_WRITE    = 00000008            IFB$L_BKPBITS    00000004            
FIB$M_EXACT    = 00000001            FIB$V_WRITECK  = 00000005            IFB$L_BWB        0000000C            
FIB$M_EXECUTE  = 00010000            FIB$W_ALLOC      00000022            IFB$L_DVBN       00000058            
FIB$M_EXTEND   = 00000080            FIB$W_CNTRLFUNC  00000016            IFB$L_EBK        00000044            
FIB$M_FILCON   = 00000004            FIB$W_DID        0000000A            IFB$L_FRB_PTR    00000028            
FIB$M_FINDFID  = 00000800            FIB$W_DID_NUM    0000000A            IFB$L_FWA_BDB    00000050            
FIB$M_HIGHVER  = 00008000            FIB$W_DID_RVN    0000000E            IFB$L_HBK        00000040            
FIB$M_LOWVER   = 00004000            FIB$W_DID_SEQ    0000000C            IFB$L_IDX_PTR    00000054            
FIB$M_MARKBAD  = 00000400            FIB$W_EXCTL      00000016            IFB$L_IOS        0000000C            
FIB$M_NEWVER   = 00000200            FIB$W_FID        00000004            IFB$L_IOS4       00000010            
FIB$M_NOHDREXT = 00000200            FIB$W_FID_NUM    00000004            IFB$L_IRAB_LNK   0000001C            
FIB$M_NOREAD   = 00000400            FIB$W_FID_RVN    00000008            IFB$L_LAST_FAB   00000024            
FIB$M_NOTRUNC  = 00000800            FIB$W_FID_SEQ    00000006            IFB$L_LOCK_BDB   00000050            
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                     (1)

IFB$L_MRN        00000054            IFB$W_DEVBUFSIZ  00000038            IO$V_CVTLOW    = 00000008            
IFB$L_NRP_LNK    00000050            IFB$W_EBK0       00000044            IO$V_DATACHECK = 0000000E            
IFB$L_NWA_PTR    00000028            IFB$W_EBK2       00000046            IO$V_DELETE    = 00000008            
IFB$L_PRIM_DEV   00000000            IFB$W_FFB        00000048            IO$V_DMOUNT    = 0000000A            
IFB$L_RLB_LNK    0000002C            IFB$W_IOS2       0000000E            IO$V_DSABLMBX  = 0000000A            
IFB$L_RNS_LEN    00000050            IFB$W_LRL        0000003E            IO$V_ENABLMBX  = 00000007            
IFB$M_BIO      = 00000020            IFB$W_MRS        0000004C            IO$V_FCODE     = 00000000            
IFB$M_BRO      = 00000040            IFB$W_RTDEQ      0000003A            IO$V_HANGUP    = 00000009            
IFB$M_DEL      = 00000004            IO$M_ABORT     = 00000100            IO$V_INHERLOG  = 0000000B            
IFB$M_EXE      = 00000080            IO$M_ACCESS    = 00000040            IO$V_INHEXTGAP = 0000000C            
IFB$M_GET      = 00000002            IO$M_ATTNAST   = 00000100            IO$V_INHRETRY  = 0000000F            
IFB$M_PUT      = 00000001            IO$M_BINARY    = 00000040            IO$V_INHSEEK   = 0000000C            
IFB$M_TRN      = 00000010            IO$M_CANCTRLO  = 00000040            IO$V_INTERRUPT = 00000006            
IFB$M_UPD      = 00000008            IO$M_COMMOD    = 00000040            IO$V_INTSKIP   = 00000008            
IFB$S_ORG      = 00000004            IO$M_CREATE    = 00000080            IO$V_MOUNT     = 00000009            
IFB$S_RFM      = 00000004            IO$M_CTRLCAST  = 00000100            IO$V_NOECHO    = 00000006            
IFB$V_ACCESSED = 00000025            IO$M_CTRLYAST  = 00000080            IO$V_NOFILTR   = 00000009            
IFB$V_ANSI_D   = 00000026            IO$M_CVTLOW    = 00000100            IO$V_NOFORMAT  = 00000008            
IFB$V_ASYNC    = 00000023            IO$M_DATACHECK = 00004000            IO$V_NOW       = 00000006            
IFB$V_ASYNCWAIT= 00000024            IO$M_DELETE    = 00000100            IO$V_NOWAIT    = 00000007            
IFB$V_BIO      = 00000005            IO$M_DMOUNT    = 00000400            IO$V_PACKED    = 00000007            
IFB$V_BRO      = 00000006            IO$M_DSABLMBX  = 00000400            IO$V_PURGE     = 0000000B            
IFB$V_BUSY     = 00000020            IO$M_ENABLMBX  = 00000080            IO$V_READATTN  = 00000007            
IFB$V_CREATE   = 00000032            IO$M_FCODE     = 0000003F            IO$V_REVERSE   = 00000006            
IFB$V_DAP      = 0000003E            IO$M_HANGUP    = 00000200            IO$V_SHUTDOWN  = 00000007            
IFB$V_DAP_OPEN = 0000003D            IO$M_INHERLOG  = 00000800            IO$V_STARTUP   = 00000006            
IFB$V_DEL      = 00000002            IO$M_INHEXTGAP = 00001000            IO$V_SYNCH     = 00000009            
IFB$V_DFW      = 0000002C            IO$M_INHRETRY  = 00008000            IO$V_TIMED     = 00000007            
IFB$V_DLT      = 0000002B            IO$M_INHSEEK   = 00001000            IO$V_TRMNOECHO = 0000000C            
IFB$V_DMO      = 00000028            IO$M_INTERRUPT = 00000040            IO$V_WRTATTN   = 00000008            
IFB$V_EOF      = 00000021            IO$M_INTSKIP   = 00000100            IO$_ACCESS     = 00000032            
IFB$V_EXE      = 00000007            IO$M_MOUNT     = 00000200            IO$_ACPCONTROL = 00000038            
IFB$V_GET      = 00000001            IO$M_NOECHO    = 00000040            IO$_CREATE     = 00000033            
IFB$V_MSE      = 00000031            IO$M_NOFILTR   = 00000200            IO$_DEACCESS   = 00000034            
IFB$V_NORECLK  = 00000033            IO$M_NOFORMAT  = 00000100            IO$_DELETE     = 00000035            
IFB$V_NSP      = 0000003F            IO$M_NOW       = 00000040            IO$_DIAGNOSE   = 0000001D            
IFB$V_NWA      = 0000003C            IO$M_NOWAIT    = 00000080            IO$_DRVCLR     = 00000004            
IFB$V_ORG      = 00000004            IO$M_PACKED    = 00000080            IO$_ERASETAPE  = 00000006            
IFB$V_PPF_IMAGE= 00000022            IO$M_PURGE     = 00000800            IO$_LOGICAL    = 0000002F            
IFB$V_PPF_INPUT= 0000002E            IO$M_READATTN  = 00000080            IO$_MODIFY     = 00000036            
IFB$V_PUT      = 00000000            IO$M_REVERSE   = 00000040            IO$_MOUNT      = 00000039            
IFB$V_RFM      = 00000000            IO$M_SHUTDOWN  = 00000080            IO$_NOP        = 00000000            
IFB$V_RWC      = 00000027            IO$M_STARTUP   = 00000040            IO$_OFFSET     = 00000006            
IFB$V_RW_ATTR  = 00000034            IO$M_SYNCH     = 00000200            IO$_PACKACK    = 00000008            
IFB$V_SCF      = 0000002A            IO$M_TIMED     = 00000080            IO$_PHYSICAL   = 0000001F            
IFB$V_SPL      = 00000029            IO$M_TRMNOECHO = 00001000            IO$_READHEAD   = 0000000E            
IFB$V_SQO      = 0000002D            IO$M_WRTATTN   = 00000100            IO$_READLBLK   = 00000021            
IFB$V_TEF      = 00000036            IO$S_FCODE     = 00000006            IO$_READPBLK   = 0000000C            
IFB$V_TMP      = 00000035            IO$V_ABORT     = 00000008            IO$_READPRESET = 00000019            
IFB$V_TRN      = 00000004            IO$V_ACCESS    = 00000006            IO$_READPROMPT = 00000037            
IFB$V_UPD      = 00000003            IO$V_ATTNAST   = 00000008            IO$_READTRACKD = 00000010            
IFB$V_WRTACC   = 00000030            IO$V_BINARY    = 00000006            IO$_READVBLK   = 00000031            
IFB$W_ASDEVBSIZ  0000005A            IO$V_CANCTRLO  = 00000006            IO$_RECAL      = 00000003            
IFB$W_BKS_BYTES  0000005C            IO$V_COMMOD    = 00000006            IO$_RELEASE    = 00000005            
IFB$W_BKS_RECS   0000005E            IO$V_CREATE    = 00000007            IO$_RETCENTER  = 00000007            
IFB$W_CHNL       00000020            IO$V_CTRLCAST  = 00000008            IO$_REWIND     = 00000024            
IFB$W_DEQ        0000004E            IO$V_CTRLYAST  = 00000007            IO$_REWINDOFF  = 00000022            
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page  17
SYMBOL TABLE                                                                                                                     (1)

IO$_SEARCH     = 00000009            NAM$L_WCC        00000030            NAM$W_DID        0000002A            
IO$_SEEK       = 00000002            NAM$M_DIR_LVLS = 00E00000            NAM$W_DID_NUM    0000002A            
IO$_SENSECHAR  = 0000001B            NAM$M_EXP_DEV  = 00000080            NAM$W_DID_RVN    0000002E            
IO$_SENSEMODE  = 00000027            NAM$M_EXP_DIR  = 00000040            NAM$W_DID_SEQ    0000002C            
IO$_SETCHAR    = 0000001A            NAM$M_EXP_NAME = 00000004            NAM$W_FID        00000024            
IO$_SETMODE    = 00000023            NAM$M_EXP_TYPE = 00000002            NAM$W_FID_NUM    00000024            
IO$_SKIPFILE   = 00000025            NAM$M_EXP_VER  = 00000001            NAM$W_FID_RVN    00000028            
IO$_SKIPRECORD = 00000026            NAM$M_GRP_MBR  = 00080000            NAM$W_FID_SEQ    00000026            
IO$_SPACEFILE  = 00000002            NAM$M_HIGHVER  = 00008000            NAM$W_PRV_DID    0000003A            
IO$_SPACERECORD= 00000009            NAM$M_LOWVER   = 00004000            PIO$GL_FMLH      ********   X   02   
IO$_STARTSPNDL = 00000019            NAM$M_NODE     = 00020000            RM$CHKNAMBLK     ********   X   02   
IO$_UNLOAD     = 00000001            NAM$M_PPF      = 00010000            RM$CLSCU         ********   X   02   
IO$_VIRTUAL    = 0000003F            NAM$M_QUOTED   = 00040000            RM$ERRASGN       ********   X   04   
IO$_WRITECHECK = 0000000A            NAM$M_WILDCARD = 00000100            RM$FCPFNC_ALT2   ********   X   02   
IO$_WRITECHECKH= 00000018            NAM$M_WILD_DIR = 00100000            RM$FSETI         ********   X   02   
IO$_WRITEHEAD  = 0000000D            NAM$M_WILD_GRP = 01000000            RM$GETSPC        ********   X   02   
IO$_WRITELBLK  = 00000020            NAM$M_WILD_MBR = 02000000            RM$MAPERR        ********   X   04   
IO$_WRITEMARK  = 0000001C            NAM$M_WILD_NAME= 00000020            RM$RETSPC        ********   X   02   
IO$_WRITEOF    = 00000028            NAM$M_WILD_SFD1= 02000000            RMS$ENTER      = FFFFFFFE RG    02   
IO$_WRITEPBLK  = 0000000B            NAM$M_WILD_SFD2= 04000000            RMS$REMOVE     = 00000002 RG    02   
IO$_WRITETRACKD= 0000000F            NAM$M_WILD_SFD3= 08000000            RMS$SEARCH     = 00000006 RG    02   
IO$_WRITEVBLK  = 00000030            NAM$M_WILD_SFD4= 10000000            RMS$V_STVSTATUS= 0000000E            
L$RMS00          00000000 R     04   NAM$M_WILD_SFD5= 20000000            RMS$_ABO       = 000183EC            
L$RMS01          0000000C R     04   NAM$M_WILD_SFD6= 40000000            RMS$_ACC       = 0001C002            
L$RMS02          00000011 R     04   NAM$M_WILD_SFD7= 80000000            RMS$_ACT       = 0001825A            
L$RMS03          00000018 R     04   NAM$M_WILD_TYPE= 00000010            RMS$_AID       = 000183F4            
L$RMS04          00000021 R     04   NAM$M_WILD_UFD = 01000000            RMS$_ALN       = 000183FC            
L$RMS05          00000049 R     04   NAM$M_WILD_VER = 00000008            RMS$_ALQ       = 00018404            
L$RMS06          00000050 R     04   NAM$S_DIR_LVLS = 00000003            RMS$_ANI       = 0001840C            
L$RMS07          00000057 R     04   NAM$T_DVI        00000014            RMS$_AOP       = 00018414            
MAPERR           00000043 R     04   NAM$V_DIR_LVLS = 00000015            RMS$_ATR       = 0001C0CC            
MISCOM           0000000A R     02   NAM$V_EXP_DEV  = 00000007            RMS$_ATW       = 0001C0D4            
M_NAMCTL       = FFFFFEC7            NAM$V_EXP_DIR  = 00000006            RMS$_BKS       = 0001841C            
NAM$B_BID        00000000            NAM$V_EXP_NAME = 00000002            RMS$_BKZ       = 00018424            
NAM$B_BLN        00000001            NAM$V_EXP_TYPE = 00000001            RMS$_BLN       = 0001842C            
NAM$B_CURLVL     00000038            NAM$V_EXP_VER  = 00000000            RMS$_BOF       = 00018198            
NAM$B_ESL        0000000B            NAM$V_GRP_MBR  = 00000013            RMS$_BUG       = 00018434            
NAM$B_ESS        0000000A            NAM$V_HIGHVER  = 0000000F            RMS$_BUG_DAP   = 00018444            
NAM$B_RSL        00000003            NAM$V_LOWVER   = 0000000E            RMS$_BUG_DDI   = 0001843C            
NAM$B_RSS        00000002            NAM$V_NODE     = 00000011            RMS$_BUG_XX2   = 0001844C            
NAM$C_BID      = 00000002            NAM$V_PPF      = 00000010            RMS$_BUG_XX3   = 00018454            
NAM$C_BLN        00000038            NAM$V_QUOTED   = 00000012            RMS$_BUG_XX4   = 0001845C            
NAM$C_BLN_DIRWC  00000050            NAM$V_WILDCARD = 00000008            RMS$_BUG_XX5   = 00018464            
NAM$C_DVI      = 00000010            NAM$V_WILD_DIR = 00000014            RMS$_BUG_XX6   = 0001846C            
NAM$C_MAXRSS   = 00000080            NAM$V_WILD_GRP = 00000018            RMS$_BUG_XX7   = 00018474            
NAM$C_MAXRSSLCL= 00000060            NAM$V_WILD_MBR = 00000019            RMS$_BUG_XX8   = 0001847C            
NAM$K_BLN        00000038            NAM$V_WILD_NAME= 00000005            RMS$_BUG_XX9   = 00018484            
NAM$K_BLN_DIRWC  00000050            NAM$V_WILD_SFD1= 00000019            RMS$_CAA       = 0001848C            
NAM$L_DIRWCC1    00000040            NAM$V_WILD_SFD2= 0000001A            RMS$_CCF       = 0001C0DC            
NAM$L_DIRWCC2    00000044            NAM$V_WILD_SFD3= 0000001B            RMS$_CCR       = 00018494            
NAM$L_DIRWCC3    00000048            NAM$V_WILD_SFD4= 0000001C            RMS$_CDA       = 0001C0E4            
NAM$L_DIRWCC4    0000004C            NAM$V_WILD_SFD5= 0000001D            RMS$_CHG       = 0001849C            
NAM$L_DWC        00000038            NAM$V_WILD_SFD6= 0000001E            RMS$_CHK       = 000184A4            
NAM$L_ESA        0000000C            NAM$V_WILD_SFD7= 0000001F            RMS$_CHN       = 0001C0EC            
NAM$L_FNB        00000034            NAM$V_WILD_TYPE= 00000004            RMS$_COD       = 000184AC            
NAM$L_RLF        00000010            NAM$V_WILD_UFD = 00000018            RMS$_CONTROLC  = 00010651            
NAM$L_RSA        00000004            NAM$V_WILD_VER = 00000003            RMS$_CONTROLO  = 00010609            
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page  18
SYMBOL TABLE                                                                                                                     (1)

RMS$_CONTROLY  = 00010611            RMS$_MKD       = 0001C032            RMS$_STALL     = 00018001            
RMS$_CRE       = 0001C00A            RMS$_MRN       = 000185CC            RMS$_STK       = 000186CC            
RMS$_CREATED   = 00010619            RMS$_MRS       = 000185D4            RMS$_SUC       = 00010001            
RMS$_CUR       = 000184B4            RMS$_NAM       = 000185DC            RMS$_SUP       = 000182D2            
RMS$_DAC       = 0001C012            RMS$_NEF       = 000185E4            RMS$_SUPERSEDE = 00010631            
RMS$_DAN       = 000184BC            RMS$_NET       = 0001874C            RMS$_SYN       = 000186D4            
RMS$_DEL       = 00018262            RMS$_NID       = 000185EC            RMS$_SYS       = 0001C10C            
RMS$_DEV       = 000184C4            RMS$_NMF       = 000182CA            RMS$_TEMP1     = 0001826A            
RMS$_DIR       = 000184CC            RMS$_NOD       = 000185F4            RMS$_TEMP2     = 0001868C            
RMS$_DME       = 000184D4            RMS$_NORMAL    = 00010001            RMS$_TMO       = 000181B0            
RMS$_DNA       = 000184DC            RMS$_NPK       = 000185FC            RMS$_TRE       = 000186DC            
RMS$_DNF       = 0001C04A            RMS$_OK_ALK    = 00018039            RMS$_TYP       = 000186E4            
RMS$_DNR       = 00018272            RMS$_OK_DEL    = 00018041            RMS$_UBF       = 000186EC            
RMS$_DPE       = 0001C03A            RMS$_OK_DUP    = 00018011            RMS$_USZ       = 000186F4            
RMS$_DTP       = 000184E4            RMS$_OK_IDX    = 00018019            RMS$_VER       = 000186FC            
RMS$_DUP       = 000184EC            RMS$_OK_LIM    = 00018051            RMS$_VOL       = 00018704            
RMS$_DVI       = 000184F4            RMS$_OK_RLK    = 00018021            RMS$_WBE       = 0001C12C            
RMS$_ENT       = 0001C01A            RMS$_OK_RNF    = 00018049            RMS$_WER       = 0001C114            
RMS$_ENV       = 00018724            RMS$_OK_RRV    = 00018029            RMS$_WLD       = 00018744            
RMS$_EOF       = 0001827A            RMS$_ORD       = 00018604            RMS$_WLK       = 000182BA            
RMS$_ESA       = 000184FC            RMS$_ORG       = 0001860C            RMS$_WPL       = 0001C11C            
RMS$_ESL       = 00018714            RMS$_PBF       = 00018614            RMS$_WSF       = 0001871C            
RMS$_ESS       = 00018504            RMS$_PENDING   = 00018009            RMS$_XAB       = 0001870C            
RMS$_EXP       = 000182C2            RMS$_PLG       = 0001861C            SETSTK           0000001D R     04   
RMS$_EXT       = 0001C022            RMS$_PLV       = 0001872C            SETSWB           00000005 R     04   
RMS$_FAB       = 0001850C            RMS$_POS       = 00018624            SUCXIT           00000178 R     02   
RMS$_FAC       = 00018514            RMS$_PRM       = 0001862C            SYS$ASSIGN       ********   X   02   
RMS$_FEX       = 00018282            RMS$_PRV       = 0001829A            TPT$L_SEARCH     ********   X   02   
RMS$_FLG       = 0001851C            RMS$_QUO       = 00018634            
RMS$_FLK       = 0001828A            RMS$_RAB       = 0001863C            
RMS$_FNA       = 00018524            RMS$_RAC       = 00018644            
RMS$_FND       = 0001C02A            RMS$_RAT       = 0001864C            
RMS$_FNF       = 00018292            RMS$_RBF       = 00018654            
RMS$_FNM       = 0001852C            RMS$_RER       = 0001C0F4            
RMS$_FOP       = 0001853C            RMS$_REX       = 000182A2            
RMS$_FSZ       = 00018534            RMS$_RFA       = 0001865C            
RMS$_FUL       = 00018544            RMS$_RFM       = 00018664            
RMS$_IAL       = 0001854C            RMS$_RHB       = 0001866C            
RMS$_IAN       = 00018554            RMS$_RLF       = 00018674            
RMS$_IBF       = 00018754            RMS$_RLK       = 000182AA            
RMS$_IDX       = 0001855C            RMS$_RMV       = 0001C0FC            
RMS$_IFA       = 0001C124            RMS$_RNF       = 000182B2            
RMS$_IFI       = 00018564            RMS$_RNL       = 000181A0            
RMS$_IMX       = 0001856C            RMS$_ROP       = 0001867C            
RMS$_IOP       = 00018574            RMS$_RPL       = 0001C104            
RMS$_IRC       = 0001857C            RMS$_RRV       = 00018684            
RMS$_ISI       = 00018584            RMS$_RSA       = 000182DA            
RMS$_KBF       = 0001858C            RMS$_RSL       = 0001873C            
RMS$_KEY       = 00018594            RMS$_RSS       = 00018694            
RMS$_KFF       = 00018031            RMS$_RST       = 0001869C            
RMS$_KRF       = 0001859C            RMS$_RSZ       = 000186A4            
RMS$_KSZ       = 000185A4            RMS$_RTB       = 000181A8            
RMS$_LAN       = 000185AC            RMS$_SEQ       = 000186AC            
RMS$_LBL       = 000185B4            RMS$_SHR       = 000186B4            
RMS$_LNE       = 000185BC            RMS$_SIZ       = 000186BC            
RMS$_LOC       = 000185C4            RMS$_SPL       = 0001C042            
RMS$_MBC       = 00018734            RMS$_SQO       = 000186C4            
RMS0SRCH        SEARCH,ENTER, AND REMOVE SERVICES                21-AUG-1978 22:12:10   VAX-11 MACRO X0.3-11               Page  19
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
F$RMS0MISC       000001A2      02     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  
$ABS$            00000060      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
L$RMS0           0000005E      04     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
4512. BYTES LEFT IN FREE MEMORY POOL.
2288. BYTES OF RECLAIMED MEMORY.
OBJ$:RMS0SRCH,LIS$:RMS0SRCH/-SP=EXECML$/ML,LIB$:R/ML,SRC$:RMS0SRCH
48 MLB DIR RDS - 1189 GETS TO DEFINE 31 MACROS. 103 INTER. FILE WRITES. 
