RM0RSET         SETUP FOR A RAB FUNCTION                         21-AUG-1978 21:29:37   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      41  DECLARATIONS
   (1)      65  RM$RSET  -  COMMON SETUP FOR RAB FUNCTION ROUTI
RM0RSET         SETUP FOR A RAB FUNCTION                         21-AUG-1978 21:29:37   VAX-11 MACRO X0.3-11               Page   1
014                                                                                                                              (1)

                                     0000     1 	$BEGIN RM0RSET,014,$RMS0B1,<SETUP FOR A RAB FUNCTION>,<NOWRT,QUAD>
                                     0000     2 
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY: RMS32
                                     0000    25 ;
                                     0000    26 ; ABSTRACT:
                                     0000    27 ;		ROUTINE TO PERFORM COMMON SETUP FOR A RAB FUNCTION
                                     0000    28 ;
                                     0000    29 ; ENVIRONMENT:
                                     0000    30 ;		STAR PROCESSOR RUNNING STARLET EXEC.
                                     0000    31 ;
                                     0000    32 ; AUTHOR: L F LAVERDURE,	 CREATION DATE: 5-JAN-77
                                     0000    33 ;
                                     0000    34 ; MODIFIED BY:
                                     0000    35 ;
                                     0000    36 ;	L F LAVERDURE,      11-AUG-78  18:44	; QUAD WORD ALIGN PSECT
                                     0000    37 ;	L F LAVERDURE,   11-MAY-78  9:53
                                     0000    38 ; 01	- 
                                     0000    39 ;--
RM0RSET         SETUP FOR A RAB FUNCTION                         21-AUG-1978 21:29:37   VAX-11 MACRO X0.3-11               Page   2
014             DECLARATIONS                                                                                                     (1)

                                     0000    41 	.SBTTL	DECLARATIONS
                                     0000    42 ;
                                     0000    43 ; INCLUDE FILES:
                                     0000    44 ;
                                     0000    45 
                                     0000    46 ;
                                     0000    47 ; MACROS:
                                     0000    48 ;
                                     0000    49 	$IMPDEF
                                     0000    50 	$RABDEF
                                     0000    51 	$IRBDEF
                                     0000    52 	$IFBDEF
                                     0000    53 	$RMSDEF
                                     0000    54 	.LIST MEB
                                     0000    55 
                                     0000    56 ;
                                     0000    57 ; EQUATED SYMBOLS:
                                     0000    58 ;
                                     0000    59 
                                     0000    60 ;
                                     0000    61 ; OWN STORAGE:
                                     0000    62 ;
                                     0000    63 
RM0RSET         SETUP FOR A RAB FUNCTION                         21-AUG-1978 21:29:37   VAX-11 MACRO X0.3-11               Page   3
014             RM$RSET  -  COMMON SETUP FOR RAB FUNCTION ROUTI                                                                  (1)

                                     0000    65 	.SBTTL RM$RSET  -  COMMON SETUP FOR RAB FUNCTION ROUTINE
                                     0000    66 ;++
                                     0000    67 ;
                                     0000    68 ; FUNCTIONAL DESCRIPTION:
                                     0000    69 ;
                                     0000    70 ;  THIS ROUTINE PERFORMS COMMON SETUP FOR A RAB FUNCTION CALL
                                     0000    71 ;  INCLUDING THE FOLLOWING:
                                     0000    72 ;
                                     0000    73 ;	1. CALL RM$RABCHK TO CHECK ARGLIST, SET BASE REGS
                                     0000    74 ;	2. CHECK FOR VALID ISI AND SET IRAB AND IFAB ADDR
                                     0000    75 ;	3. CHECK FOR STREAM IDLE AND SET TO BUSY
                                     0000    76 ;	4. CLEAR THE STS AND STV FIELDS OF THE RAB
                                     0000    77 ;	5. SET ASY IRAB BIT FROM RAB
                                     0000    78 ;	6. STORE THE ARGLIST ADDR AND CALLER'S MODE IN THE IRAB
                                     0000    79 ;	   AND SAVE SP ENTRY VALUE IN IMP$L_SAVED_SP
                                     0000    80 ;	7. PERFORM ADDITIONAL SETUPS INCLUDING CHECKING FAC FOR
                                     0000    81 ;	   OPERATION AND CLEARING FIND_LAST FLAG
                                     0000    82 ;
                                     0000    83 ;
                                     0000    84 ; CALLING SEQUENCE:
                                     0000    85 ;
                                     0000    86 ;   CALLED VIA THE $RABSET MACRO WHICH EXPANDS INTO:
                                     0000    87 ;
                                     0000    88 ;	BSBW	RM$RSET
                                     0000    89 ;	.BYTE	FUNCTION_CODE
                                     0000    90 ;
                                     0000    91 ;  ALTERNATE ENTRY AT RM$RSET_ALT TO PERFORM FUNCTIONS  4, 5, 6, & 7 ONLY.
                                     0000    92 ;  R7, R8, R9, R10, AND R11 MUST BE SET AS PER OUTPUT PRIOR TO CALL.
                                     0000    93 ;
                                     0000    94 ;
                                     0000    95 ; INPUT PARAMETERS:
                                     0000    96 ;
                                     0000    97 ;	SP	STACK POINTER
                                     0000    98 ;	AP	ARGUMENT LIST ADDR
                                     0000    99 ;
                                     0000   100 ; IMPLICIT INPUTS:
                                     0000   101 ;
                                     0000   102 ;	THE IN-LINE 1-BYTE FUNCTION CODE.
                                     0000   103 ;	THE CONTENTS OF THE RAB
                                     0000   104 ;
                                     0000   105 ; OUTPUT PARAMETERS:
                                     0000   106 ;
                                     0000   107 ;	R11	IMPURE AREA ADDRESS
                                     0000   108 ;	R10	IFAB ADDRESS
                                     0000   109 ;	R9	IRAB ADDRESS
                                     0000   110 ;	R8	RAB ADDRESS
                                     0000   111 ;	R7	CALLER'S MODE
                                     0000   112 ;	R0 THRU R5 DESTROYED
                                     0000   113 ;
                                     0000   114 ; IMPLICIT OUTPUTS:
                                     0000   115 ;
                                     0000   116 ;	IMP$L_SAVED_SP IS SET TO THE VALUE OF SP+4
                                     0000   117 ;	THE STS AND STV FIELDS OF THE RAB ARE ZEROED
                                     0000   118 ;
                                     0000   119 ; COMPLETION CODES:
                                     0000   120 ;
                                     0000   121 ;	NONE.  IF AN ERROR IS DETECTED RETURNS TO USER (NOT CALLER)
RM0RSET         SETUP FOR A RAB FUNCTION                         21-AUG-1978 21:29:37   VAX-11 MACRO X0.3-11               Page   4
014             RM$RSET  -  COMMON SETUP FOR RAB FUNCTION ROUTI                                                                  (1)

                                     0000   122 ;	AFTER APPROPRIATE CLEANUP.  THE USER RECEIVES A STANDARD
                                     0000   123 ;	RMS ERROR CODE, IN PARTICULAR, ISI, ACT, AND THOSE RETURNED BY
                                     0000   124 ;	RM$RABCHK.
                                     0000   125 ;
                                     0000   126 ;	IF ALL O.K., RETURNS TO CALLER AFTER THE 1-BYTE
                                     0000   127 ;	IN-LINE FUNCTION CODE.
                                     0000   128 ;
                                     0000   129 ; SIDE EFFECTS:
                                     0000   130 ;
                                     0000   131 ;	NONE
                                     0000   132 ;
                                     0000   133 ;--
RM0RSET         SETUP FOR A RAB FUNCTION                         21-AUG-1978 21:29:37   VAX-11 MACRO X0.3-11               Page   5
014             RM$RSET  -  COMMON SETUP FOR RAB FUNCTION ROUTI                                                                  (1)

                                     0000   135 ;++
                                     0000   136 ;
                                     0000   137 ;  CONVERT ISI VALUE TO IRAB ADDRESS (GENERAL CASE)
                                     0000   138 ;  NOTE: THIS IS NOT THE ENTRY POINT TO RM$RSET!
                                     0000   139 ;
                                     0000   140 ;--
            50            07     D0  0000   141 CVTISI:	MOVL	#IMP$L_IRABTBL/4,R0		;IRAB TABLE OFFSET/4
                          FFFA'  30  0003   142 	BSBW	RM$GTIADR			;GET IRAB ADDR
                          0E     11  0006   143 	BRB	CHKIRB				;CONTINUE
                                     0008   144 
                                     0008   145 ;++
                                     0008   146 ;
                                     0008   147 ;  ENTRY POINT TO RM$RSET
                                     0008   148 ;
                                     0008   149 ;  VALIDATE RAB AND PERFORM OTHER BASIC SETUPS
                                     0008   150 ;
                                     0008   151 ;--
                                     0008   152 RM$RSET::
                          F6'    10  0008   153 	BSBB	RM$RABCHK			;VALID RAB? (EXITS IF INVALID)
                                     000A   154 						;NOTE: SETS R11 TO IMPURE ADDR
                                     000A   155 						;     R9 TO ISI
                                     000A   156 						;     R8 TO RAB ADDR
                                     000A   157 						;     R7 TO CALLER'S MODE
                                     000A   158 ;++
                                     000A   159 ;
                                     000A   160 ;  GET THE IRAB ADDRESS AND CHECK FOR A VALID IRAB
                                     000A   161 ;
                                     000A   162 ;--
                          0A     13  000A   163 	BEQL	CHKIRB				;BRANCH IF ISI VALUE BAD
            0F            59     B1  000C   164 	CMPW	R9,#IMP$C_ENTPERSEG		;SIMPLE ISI CASE (IN 1ST SEGMENT)?
                          EF     1A  000F   165 	BGTRU	CVTISI				;BRANCH IF NOT
            59         64 AB49   D0  0011   166 	MOVL	IMP$L_IRBTBLINK(R11)[R9],R9	;GET IRAB ADDRESS
                          77     13  0016   167 CHKIRB:	BEQL	ERRISI				;BRANCH IF IRAB NOT ALLOCATED
                           00000008  0018   168 	.IF NE $$RMSTEST&$$RMS_TBUGCHK
            0A         08 A9     91  0018   169 	CMPB	IRB$B_BID(R9),#IRB$C_BID
                          74     12  001C   170 	BNEQ	ERRBUG				;BRANCH IF NOT A VALID IRAB
                                     001E   171 	.ENDC
                                     001E   172 ;++
                                     001E   173 ;
                                     001E   174 ;  SET R10 = IFAB ADDRESS
                                     001E   175 ;
                                     001E   176 ;--
            5A            69     D0  001E   177 	MOVL	IRB$L_IFAB_LNK(R9),R10		;GET IFAB ADDRESS
                           00000008  0021   178 	.IF NE $$RMSTEST&$$RMS_TBUGCHK
            0B         08 AA     91  0021   179 	CMPB	IFB$B_BID(R10),#IFB$C_BID	;REALLY AN IFAB?
                          6B     12  0025   180 	BNEQ	ERRBUG
                                     0027   181 	.ENDC
            6A            20     E0  0027   182 	BBS	#IFB$V_BUSY,(R10),ERRACT	;BRANCH IF IFAB BUSY
                          6B         002A       
RM0RSET         SETUP FOR A RAB FUNCTION                         21-AUG-1978 21:29:37   VAX-11 MACRO X0.3-11               Page   6
014             RM$RSET  -  COMMON SETUP FOR RAB FUNCTION ROUTI                                                                  (1)

                                     002B   184 ;++
                                     002B   185 ;
                                     002B   186 ;  SET BUSY, CHECKING IF ALREADY ACTIVE, AND CLEAR ASYNC AND PPF_IMAGE FLAGS
                                     002B   187 ;
                                     002B   188 ;--
            69            20     E2  002B   189 	BBSS	#IRB$V_BUSY,(R9),ERRRSA		;SET BUSY, BRANCH IF BUSY ALREADY
                          6A         002E       
                                     002F   190 
                           00000004  002F   191 	IRB$M_PPF_IMAGE	= 1@<IRB$V_PPF_IMAGE-<IRB$L_BKPBITS*8>>
                           00000008  002F   192 	IRB$M_ASYNC	= 1@<IRB$V_ASYNC-<IRB$L_BKPBITS*8>>
                                     002F   193 
         04 A9            0C     8A  002F   194 	BICB2	#IRB$M_PPF_IMAGE!IRB$M_ASYNC,IRB$L_BKPBITS(R9)	;CLEAR FLAGS
            68            1E     E0  0033   195 	BBS	#RAB$V_PPF_IND+<RAB$W_ISI*8>,(R8),CHKIND ;BRANCH IF INDIRECT PPF
                          54         0036       
                                     0037   196 ;++
                                     0037   197 ;
                                     0037   198 ;  ALTERNATE ENTRY FROM RMS0CONN HERE
                                     0037   199 ;
                                     0037   200 ;  CLEAR RAB$L_STS AND RAB$L_STV
                                     0037   201 ;  SET ASYNCHRONOUS FLAG IF REQUIRED AND PROBE ASYNC ARG LIST
                                     0037   202 ;  STORE CALLER'S MODE AND ARGLIST ADDR IN IRAB
                                     0037   203 ;
                                     0037   204 ;--
                                     0037   205 RM$RSET_ALT::
                                     0037   206 	ASSUME	RAB$L_STV EQ RAB$L_STS+4
                       08 A8     7C  0037   207 	CLRQ	RAB$L_STS(R8)			;ZERO STS AND STV IN RAB
                                     003A   208 ;
                                     003A   209 ;  PERFORM ASYNCHRONOUS SETUP
                                     003A   210 ;
                                     003A   211 	ASSUME	RAB$V_ASY EQ 0
            15         04 A8     E9  003A   212 	BLBC	RAB$L_ROP(R8),50$		;BRANCH IF SYNC
                                     003E   213 	ASSUME	IMP$W_RMSSTATUS EQ 0
                                     003E   214 	ASSUME	IMP$V_IIOS EQ 0
            12            6B     E9  003E   215 	BLBC	(R11),50$			;BRANCH IF THIS IS A PPF FORCING
                                     0041   216 						; SYNCHRONOUS OPERATION
                                     0041   217 	SSB	#IRB$V_ASYNC,(R9)		;FLAG ASYNC OPERATION
            69            23     E2  0041       		BBSS	#IRB$V_ASYNC,(R9),30000$
                          00         0044       
                                     0045       30000$:
            51            6C     9A  0045   218 	MOVZBL	(AP),R1				;PICK UP ARGUMENT COUNT
            51            02     9C  0048   219 	ROTL	#2,R1,R1			;GET LENGTH OF ARGS IN BYTES
                          51         004B       
                                     004C   220 	IFNORD	R1,4(AP),ERRIAL,R7		;BRANCH IF ARGLIST NOT READABLE
            51            57     0C  004C       		PROBER	R7,R1,4(AP)
                       04 AC         004F       
                          49     13  0051       		BEQL	ERRIAL
                                     0053   221 ;
                                     0053   222 ;  STORE CALLER'S MODE AND ARGLIST ADDR IN IRAB
                                     0053   223 ;
         0A A9            57     90  0053   224 50$:	MOVB	R7,IRB$B_MODE(R9)		;SAVE CALLER'S MODE
         18 A9            5C     D0  0057   225 	MOVL	AP,IRB$L_ARGLST(R9)		;SAVE POINTER TO ARGLIST
                      00000008       005B   226 	.IF NE $$RMSTEST&$$RMS_TBUGCHK
         24 A9            58     D0  005B   227 	MOVL	R8,IRB$L_LAST_RAB(R9)		;SAVE ADDR THIS RAB
                                     005F   228 	.ENDC
RM0RSET         SETUP FOR A RAB FUNCTION                         21-AUG-1978 21:29:37   VAX-11 MACRO X0.3-11               Page   7
014             RM$RSET  -  COMMON SETUP FOR RAB FUNCTION ROUTI                                                                  (1)

                                     005F   230 ;++
                                     005F   231 ;
                                     005F   232 ;  PICK UP IN-LINE BYTE SPECIFYING OPTIONAL FUNCTIONS AND CHECKING
                                     005F   233 ;
                                     005F   234 ;--
            51         00 BE     9A  005F   235 	MOVZBL	@0(SP),R1			;GET BYTE
                          1E     13  0063   236 	BEQL	EXIT				;BRANCH IF NOTHING TO DO
            51            04     E5  0065   237 	BBCC	#4,R1,60$			;BRANCH IF NO NEED TO CLR FIND_LAST
                          04         0068       
                                     0069   238 ;++
                                     0069   239 ;
                                     0069   240 ;  CFLG (BIT 4 SET) - CLEAR LAST-OPERATION-WAS-A-FIND FLAG
                                     0069   241 ;
                                     0069   242 ;--
                                     0069   243 	CSB	#IRB$V_FIND_LAST,(R9)
            69            25     E5  0069       		BBCC	#IRB$V_FIND_LAST,(R9),30001$
                          00         006C       
                                     006D       30001$:
                                     006D   244 ;++
                                     006D   245 ;
                                     006D   246 ;  VERIFY ACCESSED FOR BLOCK I/O OR NOT BASED ON BIO (BIT 3) PARAMETER
                                     006D   247 ;
                                     006D   248 ;--
            51            03     E4  006D   249 60$:	BBSC	#3,R1,CHKBIO			;BRANCH IF A BLOCK I/O FUNCTION
                          34         0070       
         22 AA            05     E0  0071   250 	BBS	#IFB$V_BIO,IFB$B_FAC(R10),ERRIOP ;BRANCH IF FILE ACCESSED FOR BIO
                          29         0075       
            69            27     E4  0076   251 	BBSC	#IRB$V_BIO_LAST,(R9),CHKFAC	;CLEAR BLOCK I/O LAST
                          00         0079       
                                     007A   252 ;++
                                     007A   253 ;
                                     007A   254 ;  CHECK FOR APPROPRIATE ACCESS FOR FUNCTION
                                     007A   255 ;  (NOTE: R1 NOW HAS BIT OFFSET TO REQUIRED FAC ACCESS)
                                     007A   256 ;
                                     007A   257 ;--
            51            05     E0  007A   258 CHKFAC:	BBS	#5,R1,EXIT			;BRANCH IF FLAG SAYS ANY FAC OK
                          05         007D       
         22 AA            51     E1  007E   259 	BBC	R1,IFB$B_FAC(R10),ERRFAC	;BRANCH IF NEEDED ACCESS NOT ON
                          1F         0082       
                                     0083   260 ;++
                                     0083   261 ;
                                     0083   262 ;  BUMP RETURN PC PAST THE IN-LINE FUNCTION BYTE AND RETURN
                                     0083   263 ;
                                     0083   264 ;--
                          6E     D6  0083   265 EXIT:	INCL	(SP)
            5E            04     C1  0085   266 	ADDL3	#4,SP,IMP$L_SAVED_SP(R11)	;SAVE STACK ENTRY VALUE
                       14 AB         0088       
                                     008A   267 						;LESS RETURN PC
                                 05  008A   268 	RSB
                                     008B   269 
                                     008B   270 ;++
                                     008B   271 ;
                                     008B   272 ;  THIS IS AN INDIRECT OPERATION ON A PPF.  SET PPF_IMAGE FLAG.
                                     008B   273 ;
                                     008B   274 ;--
            69            22     E3  008B   275 CHKIND:	BBCS	#IRB$V_PPF_IMAGE,(R9),RM$RSET_ALT ;SAY ITS INDIRECT AND BRANCH
                          A8         008E       
RM0RSET         SETUP FOR A RAB FUNCTION                         21-AUG-1978 21:29:37   VAX-11 MACRO X0.3-11               Page   8
014             RM$RSET  -  COMMON SETUP FOR RAB FUNCTION ROUTI                                                                  (1)

                                     008F   277 ;++
                                     008F   278 ;
                                     008F   279 ;  ERROR RETURNS
                                     008F   280 ;
                                     008F   281 ;--
                                     008F   282 ERRISI:	$PSECT_BR	L$RMS0
                          FF6E'  31  008F       		BRW	L$RMS00
                                     0092       		.SAVE
                                 00000000       		.PSECT	L$RMS0,GBL,NOWRT
                                     0000       L$RMS00:
                                     0000   283 	RMSERR	ISI				;INVALID ISI VALUE
            50       8584 8F     3C  0000       		MOVZWL	#<RMS$_ISI&^XFFFF>,R0
                          0C     11  0005   284 	BRB	ERROR
                                     0007   285 	$PSECT_RESTORE
                                 00000092       		.RESTORE
                                     0092   286 ;
                                     0092   287 ;  INTERNAL RMS PROBLEM  -  IRAB TABLE POINTED TO AN INVALID IRAB
                                     0092   288 ;			 OR IRAB POINTED TO INVALID IFAB!
                                     0092   289 ;
                                     0092   290 ERRBUG:	RMSTBUG	FTL$_BADIFAB
                                     0092       	.SAVE
                                 0000006C       	.PSECT	$ABS$,ABS
                           00000000  006C       	.=0
                                 00000092       	.RESTORE
                          FF6B'  30  0092       		BSBW	RM$BUG
                                 FD  0095       		.BYTE	FTL$_BADIFAB
                                     0096   291 ;
                                     0096   292 ERRACT:	$PSECT_BR	L$RMS0
                          FF6E'  31  0096       		BRW	L$RMS01
                                     0099       		.SAVE
                                 00000007       		.PSECT	L$RMS0,GBL,NOWRT
                                     0007       L$RMS01:
                                     0007   293 	RMSERR	ACT				;STREAM ALREADY ACTIVE
            50       825A 8F     3C  0007       		MOVZWL	#<RMS$_ACT&^XFFFF>,R0
                          05     11  000C   294 	BRB	ERROR
                                     000E   295 	$PSECT_RESTORE
                                 00000099       		.RESTORE
                                     0099   296 ;
                                     0099   297 ERRRSA:	$PSECT_BR	L$RMS0
                          FF72'  31  0099       		BRW	L$RMS02
                                     009C       		.SAVE
                                 0000000E       		.PSECT	L$RMS0,GBL,NOWRT
                                     000E       L$RMS02:
                                     000E   298 	RMSERR	RSA				;RECORD STREAM ACTIVE
            50       82DA 8F     3C  000E       		MOVZWL	#<RMS$_RSA&^XFFFF>,R0
                          FFEA'  31  0013   299 ERROR:	BRW	RM$EX_NOSTR
                                     0016   300 	$PSECT_RESTORE
                                 0000009C       		.RESTORE
                                     009C   301 ;
                                     009C   302 ERRIAL:	$PSECT_BR	L$RMS0
                          FF77'  31  009C       		BRW	L$RMS03
                                     009F       		.SAVE
                                 00000016       		.PSECT	L$RMS0,GBL,NOWRT
                                     0016       L$RMS03:
                                     0016   303 	RMSERR	IAL				;UNREADABLE ARG LIST (ASYNC)
            50       854C 8F     3C  0016       		MOVZWL	#<RMS$_IAL&^XFFFF>,R0
                          0C     11  001B   304 	BRB	ERROR1
RM0RSET         SETUP FOR A RAB FUNCTION                         21-AUG-1978 21:29:37   VAX-11 MACRO X0.3-11               Page   9
014             RM$RSET  -  COMMON SETUP FOR RAB FUNCTION ROUTI                                                                  (1)

                                     001D   305 	$PSECT_RESTORE
                                 0000009F       		.RESTORE
RM0RSET         SETUP FOR A RAB FUNCTION                         21-AUG-1978 21:29:37   VAX-11 MACRO X0.3-11               Page  10
014             RM$RSET  -  COMMON SETUP FOR RAB FUNCTION ROUTI                                                                  (1)

                                     009F   307 ERRIOP:	$PSECT_BR	L$RMS0
                          FF7B'  31  009F       		BRW	L$RMS04
                                     00A2       		.SAVE
                                 0000001D       		.PSECT	L$RMS0,GBL,NOWRT
                                     001D       L$RMS04:
                                     001D   308 ;++
                                     001D   309 ;
                                     001D   310 ;  ENTRY POINT FROM RMS$DELETE (ATTEMPTED DELETE FOR SEQ. FILE ORG)
                                     001D   311 ;
                                     001D   312 ;--
                                     001D   313 RM$ERRIOP::
                                     001D   314 	RMSERR	IOP				;WRONG TYPE OF ACCESS RE. BIO
            50       8574 8F     3C  001D       		MOVZWL	#<RMS$_IOP&^XFFFF>,R0
                          05     11  0022   315 	BRB	ERROR1
                                     0024   316 	$PSECT_RESTORE
                                 000000A2       		.RESTORE
                                     00A2   317 ;
                                     00A2   318 ERRFAC:	$PSECT_BR	L$RMS0
                          FF7F'  31  00A2       		BRW	L$RMS05
                                     00A5       		.SAVE
                                 00000024       		.PSECT	L$RMS0,GBL,NOWRT
                                     0024       L$RMS05:
                                     0024   319 RM$ERRFAC::
                                     0024   320 	RMSERR	FAC				;NOT ACCESSED FOR FUNCTION
            50       8514 8F     3C  0024       		MOVZWL	#<RMS$_FAC&^XFFFF>,R0
                          FFD4'  31  0029   321 ERROR1:	BRW	RM$EXRMS			;GET OUT
                                     002C   322 	$PSECT_RESTORE
                                 000000A5       		.RESTORE
RM0RSET         SETUP FOR A RAB FUNCTION                         21-AUG-1978 21:29:37   VAX-11 MACRO X0.3-11               Page  11
014             RM$RSET  -  COMMON SETUP FOR RAB FUNCTION ROUTI                                                                  (1)

                                     00A5   324 ;++
                                     00A5   325 ;
                                     00A5   326 ;  FILE MUST BE ACCESSED TO ALLOW BLOCK I/O
                                     00A5   327 ;
                                     00A5   328 ;--
         22 AA            05     E0  00A5   329 CHKBIO:	BBS	#IFB$V_BIO,IFB$B_FAC(R10),CHKFAC ;BRANCH IF FILE ACCESSED FOR BIO
                          D0         00A9       
         22 AA            06     E1  00AA   330 	BBC	#IFB$V_BRO,IFB$B_FAC(R10),ERRIOP ;BRANCH IF ALSO NOT BLOCK
                          F0         00AE       
                                     00AF   331 						;  AND RECORD ACCESS
                                     00AF   332 ;++
                                     00AF   333 ;
                                     00AF   334 ;  FILE IS ACCESSED FOR MIXED BLOCK AND RECORD I/O
                                     00AF   335 ;
                                     00AF   336 ;  SET THE BLOCK I/O LAST FLAG AND ALSO SET THE 'SWITCHED BETWEEN BLOCK
                                     00AF   337 ;  AND RECORD I/O' FLAG IF LAST OPERATION WAS NOT A BLOCK I/O OPERATION,
                                     00AF   338 ;  ELSE CLEAR FLAG
                                     00AF   339 ;
                                     00AF   340 ;--
                                     00AF   341 	CSB	#IRB$V_BRO_SW,(R9)
            69            28     E5  00AF       		BBCC	#IRB$V_BRO_SW,(R9),30002$
                          00         00B2       
                                     00B3       30002$:
            69            27     E2  00B3   342 	BBSS	#IRB$V_BIO_LAST,(R9),CHKFAC
                          C3         00B6       
            69            28     E3  00B7   343 	BBCS	#IRB$V_BRO_SW,(R9),CHKFAC	;SET BRO_SW AND BRANCH
                          BF         00BA       
                                     00BB   344 
                                     00BB   345 
                                     00BB   346 	.END
RM0RSET         SETUP FOR A RAB FUNCTION                         21-AUG-1978 21:29:37   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (1)

$$.PSECT_EP    = 00000006            IFB$B_ORGCASE    00000023            IFB$V_ASYNCWAIT= 00000024            
$$RMSTEST      = 0000001A            IFB$B_RAT        0000003D            IFB$V_BIO      = 00000005            
$$RMS_PBUGCHK  = 00000010            IFB$B_RFMORG     0000003C            IFB$V_BRO      = 00000006            
$$RMS_TBUGCHK  = 00000008            IFB$B_UBUFSZ     0000005B            IFB$V_BUSY     = 00000020            
$$RMS_UMODE    = 00000004            IFB$C_BID      = 0000000B            IFB$V_CREATE   = 00000032            
BIT...         = 00000000            IFB$C_BLN        00000060            IFB$V_DAP      = 0000003E            
CHKBIO           000000A5 R     02   IFB$C_BLN_IDX    00000060            IFB$V_DAP_OPEN = 0000003D            
CHKFAC           0000007A R     02   IFB$C_BLN_REL    00000060            IFB$V_DEL      = 00000002            
CHKIND           0000008B R     02   IFB$C_BLN_SEQ    0000005C            IFB$V_DFW      = 0000002C            
CHKIRB           00000016 R     02   IFB$C_DIR      = 00000003            IFB$V_DLT      = 0000002B            
CVTISI           00000000 R     02   IFB$C_FHAEND     00000050            IFB$V_DMO      = 00000028            
ERRACT           00000096 R     02   IFB$C_IDX      = 00000002            IFB$V_EOF      = 00000021            
ERRBUG           00000092 R     02   IFB$C_MAXORG   = 00000002            IFB$V_EXE      = 00000007            
ERRFAC           000000A2 R     02   IFB$C_REL      = 00000001            IFB$V_GET      = 00000001            
ERRIAL           0000009C R     02   IFB$C_SEQ      = 00000000            IFB$V_MSE      = 00000031            
ERRIOP           0000009F R     02   IFB$K_BLN        00000060            IFB$V_NORECLK  = 00000033            
ERRISI           0000008F R     02   IFB$K_BLN_IDX    00000060            IFB$V_NSP      = 0000003F            
ERROR            00000013 R     04   IFB$K_BLN_REL    00000060            IFB$V_NWA      = 0000003C            
ERROR1           00000029 R     04   IFB$K_BLN_SEQ    0000005C            IFB$V_ORG      = 00000004            
ERRRSA           00000099 R     02   IFB$K_FHAEND     00000050            IFB$V_PPF_IMAGE= 00000022            
EXIT             00000083 R     02   IFB$L_ARGLST     00000018            IFB$V_PPF_INPUT= 0000002E            
FTL$_ASBALLFAIL= FFFFFFF9            IFB$L_ASBADDR    00000014            IFB$V_PUT      = 00000000            
FTL$_BADASTPRM = FFFFFFF8            IFB$L_AS_DEV     00000054            IFB$V_RFM      = 00000000            
FTL$_BADBDB    = FFFFFFFA            IFB$L_BDB_BLNK   00000034            IFB$V_RWC      = 00000027            
FTL$_BADBUFSIZ = FFFFFFF3            IFB$L_BDB_FLNK   00000030            IFB$V_RW_ATTR  = 00000034            
FTL$_BADIFAB   = FFFFFFFD            IFB$L_BKPBITS    00000004            IFB$V_SCF      = 0000002A            
FTL$_BADLEVEL  = FFFFFFE6            IFB$L_BWB        0000000C            IFB$V_SPL      = 00000029            
FTL$_BADORGCASE= FFFFFFFB            IFB$L_DVBN       00000058            IFB$V_SQO      = 0000002D            
FTL$_CANTDOAST = FFFFFFF7            IFB$L_EBK        00000044            IFB$V_TEF      = 00000036            
FTL$_DEALLERR  = FFFFFFEF            IFB$L_FRB_PTR    00000028            IFB$V_TMP      = 00000035            
FTL$_GTCHNFAIL = FFFFFFFC            IFB$L_FWA_BDB    00000050            IFB$V_TRN      = 00000004            
FTL$_IORNDN    = FFFFFFEE            IFB$L_HBK        00000040            IFB$V_UPD      = 00000003            
FTL$_LOCKFAILED= FFFFFFE7            IFB$L_IDX_PTR    00000054            IFB$V_WRTACC   = 00000030            
FTL$_NOASB     = FFFFFFF5            IFB$L_IOS        0000000C            IFB$W_ASDEVBSIZ  0000005A            
FTL$_NODIDORFID= FFFFFFEB            IFB$L_IOS4       00000010            IFB$W_BKS_BYTES  0000005C            
FTL$_NOLOCKBDB = FFFFFFE9            IFB$L_IRAB_LNK   0000001C            IFB$W_BKS_RECS   0000005E            
FTL$_NONETWORK = FFFFFFE8            IFB$L_LAST_FAB   00000024            IFB$W_CHNL       00000020            
FTL$_NONXTBDB  = FFFFFFF4            IFB$L_LOCK_BDB   00000050            IFB$W_DEQ        0000004E            
FTL$_NOSTRUCT  = FFFFFFF6            IFB$L_MRN        00000054            IFB$W_DEVBUFSIZ  00000038            
FTL$_NOTLOCKED = FFFFFFEC            IFB$L_NRP_LNK    00000050            IFB$W_EBK0       00000044            
FTL$_RELEASFAIL= FFFFFFEA            IFB$L_NWA_PTR    00000028            IFB$W_EBK2       00000046            
FTL$_SETPRTFAIL= FFFFFFFF            IFB$L_PRIM_DEV   00000000            IFB$W_FFB        00000048            
FTL$_STKTOOBIG = FFFFFFFE            IFB$L_RLB_LNK    0000002C            IFB$W_IOS2       0000000E            
FTL$_XFERSIZE  = FFFFFFED            IFB$L_RNS_LEN    00000050            IFB$W_LRL        0000003E            
GBL...         = 00000000            IFB$M_BIO      = 00000020            IFB$W_MRS        0000004C            
IFB$B_AMAX       00000059            IFB$M_BRO      = 00000040            IFB$W_RTDEQ      0000003A            
IFB$B_AVBN       00000058            IFB$M_DEL      = 00000004            IMP$B_PROT       00000002            
IFB$B_BID        00000008            IFB$M_EXE      = 00000080            IMP$C_ASYEFN   = 0000001E            
IFB$B_BKS        0000004A            IFB$M_GET      = 00000002            IMP$C_ASYQIOEFN= 0000001F            
IFB$B_BLN        00000009            IFB$M_PUT      = 00000001            IMP$C_ENTPERSEG= 0000000F            
IFB$B_EFN        0000000B            IFB$M_TRN      = 00000010            IMP$C_IOREFN   = 0000001E            
IFB$B_EXTRABUF   0000005D            IFB$M_UPD      = 00000008            IMP$C_MBXEFN   = 0000001A            
IFB$B_FAC        00000022            IFB$S_ORG      = 00000004            IMP$C_NPIOFILES= 0000000C            
IFB$B_FSZ        0000004B            IFB$S_RFM      = 00000004            IMP$C_SYNCEFN  = 0000001B            
IFB$B_KBUFSZ     0000005C            IFB$V_ACCESSED = 00000025            IMP$L_FREEPGLH   0000000C            
IFB$B_MODE       0000000A            IFB$V_ANSI_D   = 00000026            IMP$L_IFABTBL    00000018            
IFB$B_NUM_KEYS   0000005A            IFB$V_ASYNC    = 00000023            IMP$L_IFBTBLINK  00000024            
RM0RSET         SETUP FOR A RAB FUNCTION                         21-AUG-1978 21:29:37   VAX-11 MACRO X0.3-11               Page  13
SYMBOL TABLE                                                                                                                     (1)

IMP$L_IOSEGADDR  00000004            IRB$L_OWNER_ID   0000003C            RAB$B_MBF        00000036            
IMP$L_IOSEGLEN   00000008            IRB$L_RFA_VBN    00000054            RAB$B_PSZ        00000034            
IMP$L_IRABTBL    0000001C            IRB$L_RLB_ADDR   00000044            RAB$B_RAC        0000001E            
IMP$L_IRBTBLINK  00000064            IRB$L_RP         00000034            RAB$B_ROP1       00000005            
IMP$L_SAVED_SP   00000014            IRB$L_RP_OFF     00000038            RAB$B_ROP2       00000006            
IMP$V_AST      = 00000001            IRB$L_RP_VBN     00000034            RAB$B_ROP3       00000007            
IMP$V_IIOS     = 00000000            IRB$L_RRV_VBN    0000004C            RAB$B_TMO        0000001F            
IMP$V_IORUNDOWN= 00000004            IRB$L_TEMP0      00000044            RAB$C_BID      = 00000001            
IMP$V_NOP0BUFS = 00000005            IRB$L_TEMP1      00000048            RAB$C_BLN        00000044            
IMP$V_TEMP1    = 00000002            IRB$M_ASYNC    = 00000008            RAB$C_KEY      = 00000001            
IMP$V_TEMP2    = 00000003            IRB$M_PPF_IMAGE= 00000004            RAB$C_RFA      = 00000002            
IMP$W_ENTPERSEG  00000020            IRB$V_ASYNC    = 00000023            RAB$C_SEQ      = 00000000            
IMP$W_NUM_IFABS  00000022            IRB$V_ASYNCWAIT= 00000024            RAB$K_BLN        00000044            
IMP$W_RMSSTATUS  00000000            IRB$V_BIO_LAST = 00000027            RAB$L_BKT        00000038            
IRB$B_BCNT       00000040            IRB$V_BRO_SW   = 00000028            RAB$L_CTX        00000018            
IRB$B_BID        00000008            IRB$V_BUSY     = 00000020            RAB$L_DCT        00000038            
IRB$B_BLN        00000009            IRB$V_DAP_CONN = 0000003E            RAB$L_FAB        0000003C            
IRB$B_EFN        0000000B            IRB$V_DAP_FMODE= 0000003F            RAB$L_KBF        00000030            
IRB$B_KEYSZ      00000051            IRB$V_DUP      = 0000002C            RAB$L_PBF        00000030            
IRB$B_MBC        00000041            IRB$V_EOF      = 00000021            RAB$L_RBF        00000028            
IRB$B_MODE       0000000A            IRB$V_FIND     = 00000029            RAB$L_RFA0       00000010            
IRB$B_NRP_ID     00000030            IRB$V_FIND_LAST= 00000025            RAB$L_RHB        0000002C            
IRB$B_NRP_KREF   00000031            IRB$V_IDX_ERR  = 00000031            RAB$L_ROP        00000004            
IRB$B_NVBNS      00000048            IRB$V_LOCKABOVE= 00000002            RAB$L_STS        00000008            
IRB$B_POST_CCTL  00000045            IRB$V_NEW_IDX  = 00000003            RAB$L_STV        0000000C            
IRB$B_PPF_ISI    0000003E            IRB$V_POSINSERT= 00000000            RAB$L_UBF        00000024            
IRB$B_PRE_CCTL   00000044            IRB$V_PPF_EOF  = 0000002E            RAB$M_ASY      = 00000001            
IRB$B_RFA_ID     00000058            IRB$V_PPF_FNDSV= 00000030            RAB$M_BIO      = 00000800            
IRB$B_RP_ID      00000038            IRB$V_PPF_IMAGE= 00000022            RAB$M_CCO      = 80000000            
IRB$B_RP_KREF    00000039            IRB$V_PPF_SKIP = 0000002F            RAB$M_CVT      = 04000000            
IRB$B_RRV_ID     00000050            IRB$V_PUTS_LAST= 00000026            RAB$M_EOF      = 00000100            
IRB$B_SRCHFLAGS  00000043            IRB$V_RAHWBH   = 0000002A            RAB$M_FDL      = 00000040            
IRB$B_STOPLEVEL  00000042            IRB$V_SKIP_NEXT= 0000002B            RAB$M_HSH      = 00000080            
IRB$C_BID      = 0000000A            IRB$V_SRCHGT   = 00000001            RAB$M_KGE      = 00200000            
IRB$C_BLN_IDX    0000006C            IRB$V_UNLOCK_RP= 0000002D            RAB$M_KGT      = 00400000            
IRB$C_BLN_REL    00000048            IRB$V_WRITE    = 00000029            RAB$M_LIM      = 00004000            
IRB$C_BLN_SEQ    0000004C            IRB$W_CSIZ       00000042            RAB$M_LOA      = 00002000            
IRB$K_BLN_IDX    0000006C            IRB$W_DUP_POS    00000032            RAB$M_LOC      = 00010000            
IRB$K_BLN_REL    00000048            IRB$W_IOS2       0000000E            RAB$M_MAS      = 00000020            
IRB$K_BLN_SEQ    0000004C            IRB$W_NRP_OFF    00000030            RAB$M_NLK      = 00100000            
IRB$L_ARGLST     00000018            IRB$W_OWN_ID     0000003C            RAB$M_NXR      = 00800000            
IRB$L_ASBADDR    00000014            IRB$W_OWN_ISI    0000003E            RAB$M_PMT      = 40000000            
IRB$L_BKPBITS    00000004            IRB$W_ROVHDSZ    00000044            RAB$M_PPF_IND  = 00004000            
IRB$L_BWB        0000000C            IRB$W_RP_OFF     00000038            RAB$M_PPF_RAT  = 00003FC0            
IRB$L_CURBDB     00000020            IRB$W_RTOTLSZ    00000046            RAB$M_PTA      = 20000000            
IRB$L_CURVBN     00000030            IRB$W_SAVE_POS   00000052            RAB$M_RAH      = 00000200            
IRB$L_IFAB_LNK   00000000            L$RMS00          00000000 R     04   RAB$M_RLK      = 00080000            
IRB$L_IOS        0000000C            L$RMS01          00000007 R     04   RAB$M_RNE      = 01000000            
IRB$L_IOS4       00000010            L$RMS02          0000000E R     04   RAB$M_RNF      = 08000000            
IRB$L_IRAB_LNK   0000001C            L$RMS03          00000016 R     04   RAB$M_TMO      = 02000000            
IRB$L_KEYBUF     00000048            L$RMS04          0000001D R     04   RAB$M_TPT      = 00000002            
IRB$L_LAST_RAB   00000024            L$RMS05          00000024 R     04   RAB$M_UIF      = 00000010            
IRB$L_LOCK_BDB   0000005C            RAB$B_BID        00000000            RAB$M_ULK      = 00040000            
IRB$L_NRP        0000002C            RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            
IRB$L_NRP_OFF    00000030            RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            
IRB$L_NRP_VBN    0000002C            RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            
IRB$L_NXTBDB     00000028            RAB$B_MBC        00000037            RAB$V_ASY      = 00000000            
RM0RSET         SETUP FOR A RAB FUNCTION                         21-AUG-1978 21:29:37   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                     (1)

RAB$V_BIO      = 0000000B            RMS$_BUG       = 00018434            RMS$_FUL       = 00018544            
RAB$V_CCO      = 0000001F            RMS$_BUG_DAP   = 00018444            RMS$_IAL       = 0001854C            
RAB$V_CVT      = 0000001A            RMS$_BUG_DDI   = 0001843C            RMS$_IAN       = 00018554            
RAB$V_EOF      = 00000008            RMS$_BUG_XX2   = 0001844C            RMS$_IBF       = 00018754            
RAB$V_FDL      = 00000006            RMS$_BUG_XX3   = 00018454            RMS$_IDX       = 0001855C            
RAB$V_HSH      = 00000007            RMS$_BUG_XX4   = 0001845C            RMS$_IFA       = 0001C124            
RAB$V_KGE      = 00000015            RMS$_BUG_XX5   = 00018464            RMS$_IFI       = 00018564            
RAB$V_KGT      = 00000016            RMS$_BUG_XX6   = 0001846C            RMS$_IMX       = 0001856C            
RAB$V_LIM      = 0000000E            RMS$_BUG_XX7   = 00018474            RMS$_IOP       = 00018574            
RAB$V_LOA      = 0000000D            RMS$_BUG_XX8   = 0001847C            RMS$_IRC       = 0001857C            
RAB$V_LOC      = 00000010            RMS$_BUG_XX9   = 00018484            RMS$_ISI       = 00018584            
RAB$V_MAS      = 00000005            RMS$_CAA       = 0001848C            RMS$_KBF       = 0001858C            
RAB$V_NLK      = 00000014            RMS$_CCF       = 0001C0DC            RMS$_KEY       = 00018594            
RAB$V_NXR      = 00000017            RMS$_CCR       = 00018494            RMS$_KFF       = 00018031            
RAB$V_PMT      = 0000001E            RMS$_CDA       = 0001C0E4            RMS$_KRF       = 0001859C            
RAB$V_PPF_IND  = 0000000E            RMS$_CHG       = 0001849C            RMS$_KSZ       = 000185A4            
RAB$V_PPF_RAT  = 00000006            RMS$_CHK       = 000184A4            RMS$_LAN       = 000185AC            
RAB$V_PTA      = 0000001D            RMS$_CHN       = 0001C0EC            RMS$_LBL       = 000185B4            
RAB$V_RAH      = 00000009            RMS$_COD       = 000184AC            RMS$_LNE       = 000185BC            
RAB$V_RLK      = 00000013            RMS$_CONTROLC  = 00010651            RMS$_LOC       = 000185C4            
RAB$V_RNE      = 00000018            RMS$_CONTROLO  = 00010609            RMS$_MBC       = 00018734            
RAB$V_RNF      = 0000001B            RMS$_CONTROLY  = 00010611            RMS$_MKD       = 0001C032            
RAB$V_TMO      = 00000019            RMS$_CRE       = 0001C00A            RMS$_MRN       = 000185CC            
RAB$V_TPT      = 00000001            RMS$_CREATED   = 00010619            RMS$_MRS       = 000185D4            
RAB$V_UIF      = 00000004            RMS$_CUR       = 000184B4            RMS$_NAM       = 000185DC            
RAB$V_ULK      = 00000012            RMS$_DAC       = 0001C012            RMS$_NEF       = 000185E4            
RAB$V_WAT      = 00000011            RMS$_DAN       = 000184BC            RMS$_NET       = 0001874C            
RAB$V_WBH      = 0000000A            RMS$_DEL       = 00018262            RMS$_NID       = 000185EC            
RAB$W_ISI        00000002            RMS$_DEV       = 000184C4            RMS$_NMF       = 000182CA            
RAB$W_RFA        00000010            RMS$_DIR       = 000184CC            RMS$_NOD       = 000185F4            
RAB$W_RFA4       00000014            RMS$_DME       = 000184D4            RMS$_NORMAL    = 00010001            
RAB$W_RSZ        00000022            RMS$_DNA       = 000184DC            RMS$_NPK       = 000185FC            
RAB$W_USZ        00000020            RMS$_DNF       = 0001C04A            RMS$_OK_ALK    = 00018039            
RM$BUG           ********   X   02   RMS$_DNR       = 00018272            RMS$_OK_DEL    = 00018041            
RM$ERRFAC        00000024 RG    04   RMS$_DPE       = 0001C03A            RMS$_OK_DUP    = 00018011            
RM$ERRIOP        0000001D RG    04   RMS$_DTP       = 000184E4            RMS$_OK_IDX    = 00018019            
RM$EXRMS         ********   X   04   RMS$_DUP       = 000184EC            RMS$_OK_LIM    = 00018051            
RM$EX_NOSTR      ********   X   04   RMS$_DVI       = 000184F4            RMS$_OK_RLK    = 00018021            
RM$GTIADR        ********   X   02   RMS$_ENT       = 0001C01A            RMS$_OK_RNF    = 00018049            
RM$RABCHK        ********   X   02   RMS$_ENV       = 00018724            RMS$_OK_RRV    = 00018029            
RM$RSET          00000008 RG    02   RMS$_EOF       = 0001827A            RMS$_ORD       = 00018604            
RM$RSET_ALT      00000037 RG    02   RMS$_ESA       = 000184FC            RMS$_ORG       = 0001860C            
RMS$V_STVSTATUS= 0000000E            RMS$_ESL       = 00018714            RMS$_PBF       = 00018614            
RMS$_ABO       = 000183EC            RMS$_ESS       = 00018504            RMS$_PENDING   = 00018009            
RMS$_ACC       = 0001C002            RMS$_EXP       = 000182C2            RMS$_PLG       = 0001861C            
RMS$_ACT       = 0001825A            RMS$_EXT       = 0001C022            RMS$_PLV       = 0001872C            
RMS$_AID       = 000183F4            RMS$_FAB       = 0001850C            RMS$_POS       = 00018624            
RMS$_ALN       = 000183FC            RMS$_FAC       = 00018514            RMS$_PRM       = 0001862C            
RMS$_ALQ       = 00018404            RMS$_FEX       = 00018282            RMS$_PRV       = 0001829A            
RMS$_ANI       = 0001840C            RMS$_FLG       = 0001851C            RMS$_QUO       = 00018634            
RMS$_AOP       = 00018414            RMS$_FLK       = 0001828A            RMS$_RAB       = 0001863C            
RMS$_ATR       = 0001C0CC            RMS$_FNA       = 00018524            RMS$_RAC       = 00018644            
RMS$_ATW       = 0001C0D4            RMS$_FND       = 0001C02A            RMS$_RAT       = 0001864C            
RMS$_BKS       = 0001841C            RMS$_FNF       = 00018292            RMS$_RBF       = 00018654            
RMS$_BKZ       = 00018424            RMS$_FNM       = 0001852C            RMS$_RER       = 0001C0F4            
RMS$_BLN       = 0001842C            RMS$_FOP       = 0001853C            RMS$_REX       = 000182A2            
RMS$_BOF       = 00018198            RMS$_FSZ       = 00018534            RMS$_RFA       = 0001865C            
RM0RSET         SETUP FOR A RAB FUNCTION                         21-AUG-1978 21:29:37   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                     (1)

RMS$_RFM       = 00018664            
RMS$_RHB       = 0001866C            
RMS$_RLF       = 00018674            
RMS$_RLK       = 000182AA            
RMS$_RMV       = 0001C0FC            
RMS$_RNF       = 000182B2            
RMS$_RNL       = 000181A0            
RMS$_ROP       = 0001867C            
RMS$_RPL       = 0001C104            
RMS$_RRV       = 00018684            
RMS$_RSA       = 000182DA            
RMS$_RSL       = 0001873C            
RMS$_RSS       = 00018694            
RMS$_RST       = 0001869C            
RMS$_RSZ       = 000186A4            
RMS$_RTB       = 000181A8            
RMS$_SEQ       = 000186AC            
RMS$_SHR       = 000186B4            
RMS$_SIZ       = 000186BC            
RMS$_SPL       = 0001C042            
RMS$_SQO       = 000186C4            
RMS$_STALL     = 00018001            
RMS$_STK       = 000186CC            
RMS$_SUC       = 00010001            
RMS$_SUP       = 000182D2            
RMS$_SUPERSEDE = 00010631            
RMS$_SYN       = 000186D4            
RMS$_SYS       = 0001C10C            
RMS$_TEMP1     = 0001826A            
RMS$_TEMP2     = 0001868C            
RMS$_TMO       = 000181B0            
RMS$_TRE       = 000186DC            
RMS$_TYP       = 000186E4            
RMS$_UBF       = 000186EC            
RMS$_USZ       = 000186F4            
RMS$_VER       = 000186FC            
RMS$_VOL       = 00018704            
RMS$_WBE       = 0001C12C            
RMS$_WER       = 0001C114            
RMS$_WLD       = 00018744            
RMS$_WLK       = 000182BA            
RMS$_WPL       = 0001C11C            
RMS$_WSF       = 0001871C            
RMS$_XAB       = 0001870C            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$RMS0B1          000000BB      02     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT QUAD  
$ABS$            0000006C      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
L$RMS0           0000002C      04     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
10880. BYTES LEFT IN FREE MEMORY POOL.
RM0RSET         SETUP FOR A RAB FUNCTION                         21-AUG-1978 21:29:37   VAX-11 MACRO X0.3-11               Page  16
PROGRAM SECTION SYNOPSIS                                                                                                         (1)

2686. BYTES OF RECLAIMED MEMORY.
OBJ$:RM0RSET,LIS$:RM0RSET/-SP=EXECML$/ML,LIB$:R/ML,SRC$:RM0RSET
30 MLB DIR RDS - 994 GETS TO DEFINE 26 MACROS. 71 INTER. FILE WRITES. 
