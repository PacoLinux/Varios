NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      38  DECLARATIONS
   (3)      66  NT$OPEN1 - PERFORM NETWORK OPEN FUNCTION
   (5)     227  NT$EXCH_CNF - EXCHANGE DAP CONFIGURATION MESSAG
   (6)     339  NT$GET_FILESPEC - BUILDS A FILESPEC
NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page   1
025                                                                                                                              (1)

                                     0000     1 	$BEGIN	NT0OPEN,025,NF$NETWORK,<NETWORK OPEN FILE>
                                     0000     2 
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ;			  COPYRIGHT (c) 1977, 1978 BY
                                     0000     6 ;	      DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
                                     0000     9 ; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
                                     0000    10 ; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
                                     0000    11 ; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
                                     0000    12 ; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
                                     0000    13 ; TRANSFERRED.
                                     0000    14 ;
                                     0000    15 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
                                     0000    16 ; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
                                     0000    17 ; CORPORATION.
                                     0000    18 ;
                                     0000    19 ; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
                                     0000    20 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
                                     0000    21 ;
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY: RMS32
                                     0000    25 ;
                                     0000    26 ; ABSTRACT:
                                     0000    27 ;	THIS MODULE COMMUNICATES WITH THE FILE ACCESS LISTENER AT THE
                                     0000    28 ;	REMOTE NODE TO OPEN THE SPECIFIED FILE.
                                     0000    29 ;
                                     0000    30 ; ENVIRONMENT: VAX/VMS
                                     0000    31 ;
                                     0000    32 ; AUTHOR: JAMES A. KRYCKA,	CREATION DATE: 9-DEC-77
                                     0000    33 ;
                                     0000    34 ; MODIFICATIONS:
                                     0000    35 ;
                                     0000    36 ;--
NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page   2
025             DECLARATIONS                                                                                                     (2)

                                     0000    38 	.SBTTL	DECLARATIONS
                                     0000    39 
                                     0000    40 ;
                                     0000    41 ; INCLUDE FILES:
                                     0000    42 ;
                                     0000    43 	$DAPDEF				; DEFINE DAP CONTROL BLOCK SYMBOLS
                                     0000    44 ;	$DAPFLDDEF			; DEFINE DAP FIELD ID SYMBOLS
                                     0000    45 	$FABDEF				; DEFINE FAB CONTROL BLOCK SYMBOLS
                                     0000    46 	$FWADEF				; DEFINE FILE WORK AREA SYMBOLS
                                     0000    47 	$IFBDEF				; DEFINE IFAB SYMBOLS
                                     0000    48 	$NWADEF				; NETWORK WORK AREA SYMBOLS
                                     0000    49 ;	$XABALLDEF			; DEFINE ALLOCATION XAB SYMBOLS
                                     0000    50 	.LIST	MEB
                                     0000    51 ;
                                     0000    52 ; MACROS:
                                     0000    53 ;
                                     0000    54 ;	NONE
                                     0000    55 ;
                                     0000    56 ; EQUATED SYMBOLS:
                                     0000    57 ;
                           0000001D  0000    58 DAP$_FOP=29				; ***** TEMPORARY
                           00000005  0000    59 XAB$V_CBT=5				; ***** TEMPORARY
                           00000007  0000    60 XAB$V_CTG=7				; ***** TEMPORARY
                                     0000    61 ;
                                     0000    62 ; OWN STORAGE:
                                     0000    63 ;
                                     0000    64 ;	NONE
NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page   3
025             NT$OPEN1 - PERFORM NETWORK OPEN FUNCTION                                                                         (3)

                                     0000    66 	.SBTTL	NT$OPEN1 - PERFORM NETWORK OPEN FUNCTION
                                     0000    67 
                                     0000    68 ;++
                                     0000    69 ; FUNCTIONAL DESCRIPTION:
                                     0000    70 ;
                                     0000    71 ;	NT$OPEN1 ENGAGES IN A DAP DIALOGUE WITH THE REMOTE FAL TO OPEN
                                     0000    72 ;	THE SPECIFIED FILE.
                                     0000    73 ;
                                     0000    74 ; CALLING SEQUENCE:
                                     0000    75 ;
                                     0000    76 ;	BSBW	NT$OPEN1
                                     0000    77 ;
                                     0000    78 ; INPUT PARAMETERS:
                                     0000    79 ;
                                     0000    80 ;	R11	IMPURE AREA ADDRESS
                                     0000    81 ;	R10	FWA ADDRESS
                                     0000    82 ;	R9	IFAB ADDRESS
                                     0000    83 ;	R8	FAB ADDRESS
                                     0000    84 ;
                                     0000    85 ; IMPLICIT INPUTS:
                                     0000    86 ;
                                     0000    87 ;	NONE
                                     0000    88 ;
                                     0000    89 ; OUTPUT PARAMETERS:
                                     0000    90 ;
                                     0000    91 ;	R0	STATUS CODE (RMS)
                                     0000    92 ;	R1-R7	DESTROYED
                                     0000    93 ;	AP	DESTROYED
                                     0000    94 ;
                                     0000    95 ; IMPLICIT OUTPUTS:
                                     0000    96 ;
                                     0000    97 ;	NONE
                                     0000    98 ;
                                     0000    99 ; COMPLETION CODES:
                                     0000   100 ;
                                     0000   101 ;	STANDARD RMS COMPLETION CODES.
                                     0000   102 ;
                                     0000   103 ; SIDE EFFECTS:
                                     0000   104 ;
                                     0000   105 ;	NONE
                                     0000   106 ;
                                     0000   107 ;--
                                     0000   108 
                                     0000   109 NT$OPEN2::				; CONTROL POINT
                                     0000   110 	$TSTPT	NTOPEN2			;
                 00000200'9F     D6  0000       		INCL	@#PIO$GL_FMLH+512+TPT$L_NTOPEN2
                          06     11  0006   111 	BRB	OPEN_COMMON		;
                                     0008   112 NT$OPEN1::				; CONTROL POINT
                                     0008   113 	$TSTPT	NTOPEN1			;
                 00000200'9F     D6  0008       		INCL	@#PIO$GL_FMLH+512+TPT$L_NTOPEN1
                                     000E   114 OPEN_COMMON:				;
            57         28 A9     D0  000E   115 	MOVL	IFB$L_NWA_PTR(R9),R7	; GET ADDRESS OF NWA
                          014E   30  0012   116 	BSBW	NT$EXCH_CNF		; EXCHANGE CONFIGURATION MESSAGES
                                     0015   117 					;  WITH FAL
            01            50     E8  0015   118 	BLBS	R0,10$			; BRANCH ON SUCCESS
                                 05  0018   119 	RSB				; EXIT WITH RMS CODE IN R0
            54       0144 C7     D0  0019   120 10$:	MOVL	NWA$Q_BUFFER+4(R7),R4	; GET ADDRESS OF BUFFER
NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page   4
025             NT$OPEN1 - PERFORM NETWORK OPEN FUNCTION                                                                         (3)

            55            54     D0  001E   121 	MOVL	R4,R5			; INITIALIZE NEXT BYTE POINTER
            85            02     90  0021   122 	MOVB	#DAP$K_ATT_MSG,(R5)+	; STORE DAP MESSAGE TYPE FIELD
                          85     94  0024   123 	CLRB	(R5)+			; ZERO FLAGS FIELD
            51       1828 8F     3C  0026   124 	MOVZWL	#<DAP$M_RAT!DAP$M_MRS!DAP$M_DEQ!DAP$M_FOP>,R1
                                     002B   125 					; INITIALIZE FIELD REQUEST MASK
         1F A8            01     91  002B   126 	CMPB	#FAB$C_FIX,FAB$B_RFM(R8) ; CHECK FOR FIXED LENGTH FORMAT
                          03     13  002F   127 	BEQL	15$			;
            51            05     C8  0031   128 	BISL2	#<DAP$M_DATATYPE!DAP$M_RFM>,R1
                                     0034   129 					; ADD DATATYPE AND RFM FIELDS TO MASK
         1D A8            00     91  0034   130 15$:	CMPB	#FAB$C_SEQ,FAB$B_ORG(R8) ; CHECK FOR SEQ ORG
                          04     13  0038   131 	BEQL	20$			; 
                                     003A   132 	SSB	#DAP$V_ORG,R1		; ADD ORG FIELD TO MASK
            51            01     E2  003A       		BBSS	#DAP$V_ORG,R1,30000$
                          00         003D       
                                     003E       30000$:
         1F A8            03     91  003E   133 20$:	CMPB	#FAB$C_VFC,FAB$B_RFM(R8) ; CHECK FOR VFC FORMAT
                          04     12  0042   134 	BNEQ	30$			;
                                     0044   135 	SSB	#DAP$V_FSZ,R1		; ADD FSZ FIELD TO MASK
            51            08     E2  0044       		BBSS	#DAP$V_FSZ,R1,30001$
                          00         0047       
                                     0048       30001$:
            56            51     D0  0048   136 30$:	MOVL	R1,R6			; SAVE FIELD REQUEST MASK
                          FFB2'  30  004B   137 	BSBW	NT$CVT_BIN2EXT		; STORE ATTMENU AS AN EXTENSIBLE FIELD
            56            00     E1  004E   138 	BBC	#DAP$V_DATATYPE,R6,35$	; DEFAULT DATATYPE = IMAGE
                          03         0051       
            85            01     90  0052   139 	MOVB	#<1@DAP$V_ASCII>,(R5)+	; STORE DATATYPE FIELD
            56            01     E1  0055   140 35$:	BBC	#DAP$V_ORG,R6,40$	; DEFAULT ORG = SEQUENTIAL
                          04         0058       
            85         1D A8     90  0059   141 	MOVB	FAB$B_ORG(R8),(R5)+	; STORE ORG FIELD
            56            02     E1  005D   142 40$:	BBC	#DAP$V_RFM,R6,45$	; DEFAULT RFM = FIXED LENGTH
                          04         0060       
            85         1F A8     90  0061   143 	MOVB	FAB$B_RFM(R8),(R5)+	; STORE RFM FIELD
            85         1E A8     90  0065   144 45$:	MOVB	FAB$B_RAT(R8),(R5)+	; STORE RAT FIELD
            85         36 A8     B0  0069   145 	MOVW	FAB$W_MRS(R8),(R5)+	; STORE MRS FIELD
                          09     12  006D   146 	BNEQ	50$			; BRANCH IF NON-ZERO
            67            21     E0  006F   147 	BBS	#DAP$V_VAXVMS,DAP$Q_DCODE_FLG(R7),50$
                          05         0072       
                                     0073   148 					; BRANCH IF PARTNER IS VAX/VMS
         FE A5         38 A9     B0  0073   149 	MOVW	IFB$W_DEVBUFSIZ(R9),-2(R5) ; SPECIFY MAXIMUM VALUE
            56            08     E1  0078   150 50$:	BBC	#DAP$V_FSZ,R6,55$	; USED ONLY IF RFM = VFC
                          04         007B       
            85         3F A8     90  007C   151 	MOVB	FAB$B_FSZ(R8),(R5)+	; STORE FSZ FIELD
            85         14 A8     B0  0080   152 55$:	MOVW	FAB$W_DEQ(R8),(R5)+	; STORE DEQ FIELD
                          FF79'  30  0084   153 	BSBW	NT$ENCODE_FOP		; STORE FOP FIELD
            4F            50     E9  0087   154 	BLBC	R0,90$			; BRANCH ON FAILURE
            55            54     C2  008A   155 	SUBL2	R4,R5			; CALCULATE SIZE OF THE MESSAGE
                          FF70'  30  008D   156 	BSBW	NT$TRANSMIT_ALT		; SEND ATTRIBUTES MESSAGE TO FAL
            46            50     E9  0090   157 	BLBC	R0,90$			; BRANCH ON FAILURE
            55            54     D0  0093   158 	MOVL	R4,R5			; INITIALIZE NEXT BYTE POINTER
            85            03     90  0096   159 	MOVB	#DAP$K_ACC_MSG,(R5)+	; STORE DAP MESSAGE TYPE FIELD
                          85     94  0099   160 	CLRB	(R5)+			; ZERO FLAGS FIELD
            85            01     90  009B   161 	MOVB	#DAP$K_OPEN,(R5)+	; STORE ACCFUNC FIELD
            85            01     90  009E   162 	MOVB	#DAP$M_NONFATAL,(R5)+	; STORE ACCOPT FIELD
                          014C   30  00A1   163 	BSBW	NT$GET_FILESPEC		; STORE FILESPEC AS A COUNTED
                                     00A4   164 					;  ASCII STRING
            65         16 A8     90  00A4   165 	MOVB	FAB$B_FAC(R8),(R5)	; STORE FAC FIELD
            85         D0 8F     8A  00A8   166 	BICB2	#<FAB$M_TRN!FAB$M_BRO!FAB$M_EXE>,(R5)+
NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page   5
025             NT$OPEN1 - PERFORM NETWORK OPEN FUNCTION                                                                         (3)

                                     00AC   167 					; MASK OUT UNSUPPORTED OPTIONS
                                     00AC   168 					;  BUT DON'T COMPLAIN ABOUT THEM
            55            54     C2  00AC   169 	SUBL2	R4,R5			; CALCULATE SIZE OF THE MESSAGE
                          FF4E'  30  00AF   170 	BSBW	NT$TRANSMIT_ALT		; SEND ACCESS MESSAGE TO FAL
            24            50     E9  00B2   171 	BLBC	R0,90$			; BRANCH ON FAILURE
            55       0140 C7     D0  00B5   172 	MOVL	NWA$Q_BUFFER(R7),R5	; GET RCV BUFFER SIZE
                                     00BA   173 	SSB	#DAP$K_ATT_MSG,DAP$L_MSG_MASK(R7)
         0C A7            02     E2  00BA       		BBSS	#DAP$K_ATT_MSG,DAP$L_MSG_MASK(R7),30002$
                          00         00BE       
                                     00BF       30002$:
                                     00BF   174 					; EXPECT RESPONSE OF ATTRIBUTES MESSAGE
                          FF3E'  30  00BF   175 	BSBW	NT$RECEIVE_ALT		; GET REPLY FROM FAL
            14            50     E9  00C2   176 	BLBC	R0,90$			; BRANCH ON FAILURE
                                     00C5   177 	SSB	#DAP$K_ACK_MSG,DAP$L_MSG_MASK(R7)
         0C A7            06     E2  00C5       		BBSS	#DAP$K_ACK_MSG,DAP$L_MSG_MASK(R7),30003$
                          00         00C9       
                                     00CA       30003$:
                                     00CA   178 					; EXPECT RESPONSE OF ACKNOWLEDGE MESSAGE
                          FF33'  30  00CA   179 	BSBW	NT$RECEIVE_ALT		; GET REPLY FROM FAL
            09            50     E9  00CD   180 	BLBC	R0,90$			; BRANCH ON FAILURE
                                     00D0   181 	SSB	#IFB$V_DAP_OPEN,(R9)	; YES, DENOTE FAL HAS OPENED FILE
            69            3D     E2  00D0       		BBSS	#IFB$V_DAP_OPEN,(R9),30004$
                          00         00D3       
                                     00D4       30004$:
                          04     10  00D4   182 	BSBB	DECODE_FILE_ATT		; RETURN FILE ATTRIBUTES TO USER
                                     00D6   183 	RMSSUC				; RETURN SUCCESS
            50            01     D0  00D6       		MOVL	#1,R0
                                 05  00D9   184 90$:	RSB				; EXIT WITH RMS CODE IN R0
NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page   6
025             NT$OPEN1 - PERFORM NETWORK OPEN FUNCTION                                                                         (4)

                                     00DA   186 ;++
                                     00DA   187 ; RETURN FILE ATTRIBUTES TO USER.
                                     00DA   188 ;--
                                     00DA   189 
                                     00DA   190 DECODE_FILE_ATT:			; CONTROL POINT
         23 A9         3D A7     90  00DA   191 	MOVB	DAP$B_ORG(R7),IFB$B_ORGCASE(R9)
                                     00DF   192 					; UPDATE ORG FIELD
         3C A9         3E A7     90  00DF   193 	MOVB	DAP$B_RFM(R7),IFB$B_RFMORG(R9)
                                     00E4   194 					; UPDATE RFM FIELD
         3D A9         3F A7     90  00E4   195 	MOVB	DAP$B_RAT(R7),IFB$B_RAT(R9)
         3D A9            10     8A  00E9   196 	BICB2	#DAP$M_EMBEDDED,IFB$B_RAT(R9)
                                     00ED   197 					; UPDATE RAT FIELD
         4C A9         42 A7     B0  00ED   198 	MOVW	DAP$W_MRS(R7),IFB$W_MRS(R9)
         3E A9         42 A7     B0  00F2   199 	MOVW	DAP$W_MRS(R7),IFB$W_LRL(R9)
                                     00F7   200 					; UPDATE MRS FIELD
         40 A9         44 A7     D0  00F7   201 	MOVL	DAP$L_ALQ(R7),IFB$L_HBK(R9)
                                     00FC   202 					; UPDATE ALQ FIELD
         4A A9         48 A7     90  00FC   203 	MOVB	DAP$B_BKS(R7),IFB$B_BKS(R9)
                                     0101   204 					; UPDATE BKS FIELD
         4B A9         49 A7     90  0101   205 	MOVB	DAP$B_FSZ(R7),IFB$B_FSZ(R9)
                                     0106   206 					; UPDATE FSZ FIELD
         54 A9         4C A7     D0  0106   207 	MOVL	DAP$L_MRN(R7),IFB$L_MRN(R9)
                                     010B   208 					; UPDATE MRN FIELD
         4E A9         4A A7     B0  010B   209 	MOVW	DAP$W_DEQ(R7),IFB$W_DEQ(R9)
                                     0110   210 					; UPDATE DEQ FIELD
            51         58 A7     D0  0110   211 	MOVL	DAP$L_FOP(R7),R1	; GET DAP FOP BITS
                          52     D4  0114   212 	CLRL	R2			; CLEAR RESULTANT FOP BITS
                                     0116   213 	MAPBIT	DAP$V_CTG,FAB$V_CTG	; MAP CTG BIT
            51            07     E1  0116       	BBC	#DAP$V_CTG,R1,30005$
                          04         0119       
            52            14     E3  011A       	BBCS	#FAB$V_CTG,R2,30005$
                          00         011D       
                                     011E       30005$:
                                     011E   214 	MAPBIT	DAP$V_CBT,FAB$V_CBT	; MAP CBT BIT
            51            17     E1  011E       	BBC	#DAP$V_CBT,R1,30006$
                          04         0121       
            52            15     E3  0122       	BBCS	#FAB$V_CBT,R2,30006$
                          00         0125       
                                     0126       30006$:
                                     0126   215 	MAPBIT	DAP$V_RCK,FAB$V_RCK	; MAP RCK BIT
            51            0F     E1  0126       	BBC	#DAP$V_RCK,R1,30007$
                          04         0129       
            52            17     E3  012A       	BBCS	#FAB$V_RCK,R2,30007$
                          00         012D       
                                     012E       30007$:
                                     012E   216 	MAPBIT	DAP$V_WCK,FAB$V_WCK	; MAP WCK BIT
            51            0E     E1  012E       	BBC	#DAP$V_WCK,R1,30008$
                          04         0131       
            52            09     E3  0132       	BBCS	#FAB$V_WCK,R2,30008$
                          00         0135       
                                     0136       30008$:
         04 A8   00B00009 8F     CA  0136   217 	BICL2	#<FAB$M_CTG!FAB$M_CBT!FAB$M_RCK!FAB$V_WCK>,FAB$L_FOP(R8)
         04 A8            52     C8  013E   218 	BISL2	R2,FAB$L_FOP(R8)	; UPDATE FOP FIELD
                          52     D4  0142   219 	CLRL	R2			; CLEAR RESULTANT AOP BITS
                                     0144   220 	MAPBIT	DAP$V_CTG,XAB$V_CTG	; MAP CTG BIT
            51            07     E1  0144       	BBC	#DAP$V_CTG,R1,30009$
                          04         0147       
NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page   7
025             NT$OPEN1 - PERFORM NETWORK OPEN FUNCTION                                                                         (4)

            52            07     E3  0148       	BBCS	#XAB$V_CTG,R2,30009$
                          00         014B       
                                     014C       30009$:
                                     014C   221 	MAPBIT	DAP$V_CBT,XAB$V_CBT	; MAP CBT BIT
            51            17     E1  014C       	BBC	#DAP$V_CBT,R1,30010$
                          04         014F       
            52            05     E3  0150       	BBCS	#XAB$V_CBT,R2,30010$
                          00         0153       
                                     0154       30010$:
         2C AA            52     B0  0154   222 	MOVW	R2,FWA$W_UCHAR(R10)	; STORE TEMPORARILY
            5C   00000000'EF     9E  0158   223 	MOVAB	OPNXAB1_ARGS_NT,AP	; GET XABALL TABLE ENTRY
                          FE9E'  30  015F   224 	BSBW	RM$XAB_SCAN		; UPDATE ALLOCATION XAB
                                 05  0162   225 	RSB				; EXIT
NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page   8
025             NT$EXCH_CNF - EXCHANGE DAP CONFIGURATION MESSAG                                                                  (5)

                                     0163   227 	.SBTTL	NT$EXCH_CNF - EXCHANGE DAP CONFIGURATION MESSAGES
                                     0163   228 
                                     0163   229 ;++
                                     0163   230 ; FUNCTIONAL DESCRIPTION:
                                     0163   231 ;
                                     0163   232 ;	NT$EXCH_CNF ENGAGES IN A DAP DIALOGUE TO EXCHANGE DAP CONFIGURATION
                                     0163   233 ;	MESSAGES WITH THE REMOTE FAL.
                                     0163   234 ;
                                     0163   235 ; CALLING SEQUENCE:
                                     0163   236 ;
                                     0163   237 ;	BSB/JSB	NT$EXCH_CNF
                                     0163   238 ;
                                     0163   239 ; INPUT PARAMETERS:
                                     0163   240 ;
                                     0163   241 ;	R11	IMPURE AREA ADDRESS
                                     0163   242 ;	R10	FWA ADDRESS
                                     0163   243 ;	R9	IFAB ADDRESS
                                     0163   244 ;	R8	FAB ADDRESS
                                     0163   245 ;	R7	NWA ADDRESS (=DAP)
                                     0163   246 ;
                                     0163   247 ; IMPLICIT INPUTS:
                                     0163   248 ;
                                     0163   249 ;	NONE
                                     0163   250 ;
                                     0163   251 ; OUTPUT PARAMETERS:
                                     0163   252 ;
                                     0163   253 ;	R0	STATUS CODE (RMS)
                                     0163   254 ;	R1-R5	DESTROYED
                                     0163   255 ;	AP	DESTROYED
                                     0163   256 ;
                                     0163   257 ; IMPLICIT OUTPUTS:
                                     0163   258 ;
                                     0163   259 ;	NONE
                                     0163   260 ;
                                     0163   261 ; COMPLETION CODES:
                                     0163   262 ;
                                     0163   263 ;	STANDARD RMS COMPLETION CODES.
                                     0163   264 ;
                                     0163   265 ; SIDE EFFECTS:
                                     0163   266 ;
                                     0163   267 ;	NONE
                                     0163   268 ;
                                     0163   269 ;--
                                     0163   270 
                                     0163   271 NT$EXCH_CNF::				; CONTROL POINT FOR $CREATE AND $OPEN
                                     0163   272 
                                     0163   273 ;
                                     0163   274 ; DISALLOW CERTAIN FOP OPTIONS TO PROHIBIT SUCH FUNCTIONS AS:
                                     0163   275 ;	$ RUN @NODE::FILE.EXE
                                     0163   276 ;	$ @NODE:FILE.COM
                                     0163   277 ;
                                     0163   278 
         04 A8   4C0F0000 8F     D3  0163   279 	BITL	#<FAB$M_NFS!FAB$M_UFO!FAB$M_PPF!FAB$M_INP!FAB$M_UFM!-
                                     016B   280 		FAB$M_ESC!FAB$M_KFO>,FAB$L_FOP(R8)
                                     016B   281 					;  OVER THE NETWORK BY RMS-32
                          0C     13  016B   282 	BEQL	NT$EXCH_CNF_ALT		; BRANCH IF NONE ARE SPECIFIED
                                 3C  016D   283 	MOVZWL	#<<DAP$_UNSUPPORT@12>!<DAP$K_ATT_MSG@6>!<DAP$_FOP>>,-
NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page   9
025             NT$EXCH_CNF - EXCHANGE DAP CONFIGURATION MESSAG                                                                  (5)

         0C A8       209D 8F         016E   284 		FAB$L_STV(R8)		; PUT REJECT REASON IN STV
                                     0173   285 	RMSERR	SUP			; UNSUPPORTED NETWORK FUNCTION
            50       0000'8F     3C  0173       		MOVZWL	#<RMS$_SUP&^XFFFF>,R0
                                 05  0178   286 	RSB				; EXIT WITH RMS CODE IN R0
                                     0179   287 
                                     0179   288 ;
                                     0179   289 ; INITIALIZE DAP CONTROL BLOCK AND
                                     0179   290 ; INITIALIZE TRANSMIT/RECEIVE BUFFER DESCRIPTOR.
                                     0179   291 ;
                                     0179   292 
                                     0179   293 NT$EXCH_CNF_ALT::			; CONTROL POINT FOR $DELETE
            67            00     2C  0179   294 	MOVC5	#0,(R7),#0,#DAP$C_BLN,(R7)
       00C0 8F            00         017C       
                          67         0180       
       0140 C7       02A0 8F     3C  0181   295 	MOVZWL	#NWA$C_BUFFERSIZ,NWA$Q_BUFFER(R7)
       0144 C7       0160 C7     9E  0188   296 	MOVAB	NWA$T_BUFFER(R7),NWA$Q_BUFFER+4(R7)
                                     018F   297 
                                     018F   298 ;
                                     018F   299 ; EXCHANGE DAP CONFIGURATION MESSAGES WITH PARTNER.
                                     018F   300 ;
                                     018F   301 
            54       0144 C7     D0  018F   302 	MOVL	NWA$Q_BUFFER+4(R7),R4	; GET ADDRESS OF BUFFER
            55            54     D0  0194   303 	MOVL	R4,R5			; INITIALIZE NEXT BYTE POINTER
            85            01     90  0197   304 	MOVB	#DAP$K_CNF_MSG,(R5)+	; STORE DAP MESSAGE TYPE FIELD
                          85     94  019A   305 	CLRB	(R5)+			; DAP FLAGS FIELD
            85       02A0 8F     B0  019C   306 	MOVW	#NWA$C_BUFFERSIZ,(R5)+	; BUFSIZ FIELD
            85            07     90  01A1   307 	MOVB	#DAP$K_VAXVMS,(R5)+	; OSTYPE FIELD
            85            03     90  01A4   308 	MOVB	#DAP$K_RMS32,(R5)+	; FILESYS FIELD
            85            04     90  01A7   309 	MOVB	#DAP$K_VERNUM_V,(R5)+	; VERNUM FIELD
            85            02     90  01AA   310 	MOVB	#DAP$K_ECONUM_V,(R5)+	; ECONUM FIELD
            85            00     90  01AD   311 	MOVB	#DAP$K_USRNUM_V,(R5)+	; USRNUM FIELD
            85            01     90  01B0   312 	MOVB	#DAP$K_SOFTVER_V,(R5)+	; SOFTVER FIELD
            85            00     90  01B3   313 	MOVB	#DAP$K_USRSOFT_V,(R5)+	; USRSOFT FIELD
            51   E00660E7 8F     D0  01B6   314 	MOVL	#DAP$K_SYSCAP_V,R1	; GET VAX SUPPORTED CAPABILITIES
                          FE40'  30  01BD   315 	BSBW	NT$CVT_BIN2EXT		; STORE AS EXTENSIBLE FIELD
            55            54     C2  01C0   316 	SUBL2	R4,R5			; CALCULATE SIZE OF THE MESSAGE
                          FE3A'  30  01C3   317 	BSBW	NT$TRANSMIT_ALT		; SEND CONFIGURATION MESSAGE TO FAL
            26            50     E9  01C6   318 	BLBC	R0,90$			; BRANCH ON FAILURE
            55       0040 8F     3C  01C9   319 	MOVZWL	#64,R5			; GET RCV BUFFER SIZE
                                     01CE   320 	SSB	#DAP$K_CNF_MSG,DAP$L_MSG_MASK(R7)
         0C A7            01     E2  01CE       		BBSS	#DAP$K_CNF_MSG,DAP$L_MSG_MASK(R7),30011$
                          00         01D2       
                                     01D3       30011$:
                                     01D3   321 					; EXPECT RESPONSE OF CONFIGURATION MSG
                          FE2A'  30  01D3   322 	BSBW	NT$RECEIVE_ALT		; GET REPLY FROM FAL
            16            50     E9  01D6   323 	BLBC	R0,90$			; BRANCH ON FALIURE
                                     01D9   324 
                                     01D9   325 ;
                                     01D9   326 ; DETERMINE MAXIMUM DAP BUFFER SIZE TO USE AND UPDATE BUFFER DESCRIPTOR.
                                     01D9   327 ;
                                     01D9   328 
                       24 A7     B5  01D9   329 	TSTW	DAP$W_BUFSIZ(R7)	; USE OUR BUFFER SIZE IF PARTNER
                          0E     13  01DC   330 	BEQL	10$			;  HAS UNLIMITED BUFFER SPACE
       02A0 8F         24 A7     B1  01DE   331 	CMPW	DAP$W_BUFSIZ(R7),#NWA$C_BUFFERSIZ
                          06     1E  01E4   332 	BGEQU	10$			; USE OUR BUFFER SIZE IF PARTNER
                                     01E6   333 					;  HAS BUFFER SIZE GEQ OURS
       0140 C7         24 A7     3C  01E6   334 	MOVZWL	DAP$W_BUFSIZ(R7),NWA$Q_BUFFER(R7)
NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page  10
025             NT$EXCH_CNF - EXCHANGE DAP CONFIGURATION MESSAG                                                                  (5)

                                     01EC   335 					; USE THEIR BUFFER SIZE
                                     01EC   336 10$:	RMSSUC				; RETURN SUCCESS
            50            01     D0  01EC       		MOVL	#1,R0
                                 05  01EF   337 90$:	RSB				; EXIT WITH RMS CODE IN R0
NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page  11
025             NT$GET_FILESPEC - BUILDS A FILESPEC                                                                              (6)

                                     01F0   339 	.SBTTL	NT$GET_FILESPEC - BUILDS A FILESPEC
                                     01F0   340 
                                     01F0   341 ;++
                                     01F0   342 ; FUNCTIONAL DESCRIPTION:
                                     01F0   343 ;
                                     01F0   344 ;	NT$GET_FILESPEC BUILDS A FILESPEC (LESS NODENAME) FROM ITS
                                     01F0   345 ;	CONSTITUENT PARTS AND STORES IT AS A COUNTED ASCII STRING.
                                     01F0   346 ;
                                     01F0   347 ; CALLING SEQUENCE:
                                     01F0   348 ;
                                     01F0   349 ;	BSBW	NT$GET_FILESPEC
                                     01F0   350 ;
                                     01F0   351 ; INPUT PARAMETERS:
                                     01F0   352 ;
                                     01F0   353 ;	R11	IMPURE AREA ADDRESS
                                     01F0   354 ;	R10	FWA ADDRESS
                                     01F0   355 ;	R9	IFAB ADDRESS
                                     01F0   356 ;	R8	FAB ADDRESS
                                     01F0   357 ;	R7	NWA ADDRESS
                                     01F0   358 ;	R5	ADDRESS OF BUFFER TO RECEIVE COUNTED ASCII STRING
                                     01F0   359 ;
                                     01F0   360 ; IMPLICIT INPUTS:
                                     01F0   361 ;
                                     01F0   362 ;	FWA$B_DIRTERM
                                     01F0   363 ;	FWA$Q_DEVICE
                                     01F0   364 ;	FWA$Q_DIR1
                                     01F0   365 ;	FWA$Q_DIR2
                                     01F0   366 ;	FWA$Q_DIR2+8 THRU FWA$Q_DIR2+48
                                     01F0   367 ;	FWA$Q_NAME
                                     01F0   368 ;	FWA$Q_QUOTED
                                     01F0   369 ;	FWA$V_DEVICE
                                     01F0   370 ;	FWA$V_GRPMBR
                                     01F0   371 ;	FWA$V_DIR_LVLS
                                     01F0   372 ;	FWA$V_QUOTED
                                     01F0   373 ;
                                     01F0   374 ; OUTPUT PARAMETERS:
                                     01F0   375 ;
                                     01F0   376 ;	R0-R1	DESTROYED
                                     01F0   377 ;	R5	UPDATED BUFFER POINTER (ADDRESS OF END OF STRING + 1)
                                     01F0   378 ;
                                     01F0   379 ; IMPLICIT OUTPUTS:
                                     01F0   380 ;
                                     01F0   381 ;	NONE
                                     01F0   382 ;
                                     01F0   383 ; COMPLETION CODES:
                                     01F0   384 ;
                                     01F0   385 ;	NONE
                                     01F0   386 ;
                                     01F0   387 ; SIDE EFFECTS:
                                     01F0   388 ;
                                     01F0   389 ;	NONE
                                     01F0   390 ;
                                     01F0   391 ;--
                                     01F0   392 
                                     01F0   393 NT$GET_FILESPEC::			; CONTROL POINT
                     01DC 8F     BB  01F0   394 	PUSHR	#^M<R2,R3,R4,R6,R7,R8>	; SAVE REGISTERS
            53            55     D0  01F4   395 	MOVL	R5,R3			; COPY NEXT BYTE POINTER
NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page  12
025             NT$GET_FILESPEC - BUILDS A FILESPEC                                                                              (6)

                          83     94  01F7   396 	CLRB	(R3)+			; SKIP OVER COUNT BYTE
            58            53     D0  01F9   397 	MOVL	R3,R8			; SAVE POINTER TO START OF DST STRING
                                     01FC   398 
                                     01FC   399 ;
                                     01FC   400 ; PROCESS QUOTED STRING
                                     01FC   401 ; NOTE: THE FACT THAT THIS ROUTINE HAS BEEN CALLED IMPLIES THAT THE
                                     01FC   402 ; QUOTED STRING CONTAINS A FILESPEC, NOT A TASK SPECIFIER.
                                     01FC   403 ;
                                     01FC   404 
            6A            1A     E1  01FC   405 	BBC	#FWA$V_QUOTED,(R10),10$	; BRANCH IF NO QUOTED STRING PRESENT
                          12         01FF       
       009C CA            02     C3  0200   406 	SUBL3	#2,FWA$Q_QUOTED(R10),R0	; GET SIZE OF STRING LESS QUOTES
                          50         0205       
       00A0 CA            01     C1  0206   407 	ADDL3	#1,FWA$Q_QUOTED+4(R10),R1 ; GET ADDRESS OF STRING
                          51         020B       
            61            50     28  020C   408 	MOVC3	R0,(R1),(R3)		; COPY QUOTED STRING LESS QUOTES
                          63         020F       
                          50     11  0210   409 	BRB	80$			; JOIN COMMON CODE
                                     0212   410 
                                     0212   411 ;
                                     0212   412 ; PROCESS DEVICENAME
                                     0212   413 ;
                                     0212   414 
            6A            0F     E1  0212   415 10$:	BBC	#FWA$V_DEVICE,(R10),20$	; BRANCH IF NO DEVICENAME PRESENT
                          09         0215       
                                 28  0216   416 	MOVC3	FWA$Q_DEVICE(R10),-	; COPY DEVICENAME
         40 BA         3C AA         0217   417 		@FWA$Q_DEVICE+4(R10),(R3) ;
                          63         021B       
            83            3A     90  021C   418 	MOVB	#^A\:\,(R3)+		; APPEND DELIMITER
                                     021F   419 
                                     021F   420 ;
                                     021F   421 ; PROCESS DIRECTORY_LIST
                                     021F   422 ; IT IS EITHER IN THE [GROUP,MEMBER] OR [DIRECTROY_NAME_LIST] FORMAT.
                                     021F   423 ;
                                     021F   424 
            6A            0E     E1  021F   425 20$:	BBC	#FWA$V_DIR,(R10),70$	; BRANCH IF NO DIRECTORY PRESENT
                          37         0222       
                          02     83  0223   426 	SUBB3	#2,FWA$B_DIRTERM(R10),-	; STORE LEFT BRACKET ('[' OR '<')
            83         07 AA         0225   427 		(R3)+			;  (ASCII CODE IS RIGHT BRACKET + 2)
            56         44 AA     7E  0228   428 	MOVAQ	FWA$Q_DIR1(R10),R6	; GET ADDRESS OF DIRECTORY DESCRIPTOR
            50            86     D0  022C   429 	MOVL	(R6)+,R0		; GET STRING COUNT
            96            50     28  022F   430 	MOVC3	R0,@(R6)+,(R3)		; COPY FIRST DIRECTORY FIELD
                          63         0232       
            6A            1B     E0  0233   431 	BBS	#FWA$V_GRPMBR,(R10),50$	; BRANCH IF [GROUP,MEMBER] FORMAT
                          16         0236       
                                 EF  0237   432 	EXTZV	#FWA$V_DIR_LVLS,-	 ; GET # OF DIRECTORY SUB-LEVELS
            03            1D         0238   433 		#FWA$S_DIR_LVLS,(R10),R7 ;  NOTE: 0 MEANS UFD LEVEL ONLY
            57            6A         023A       
                          0A     11  023C   434 	BRB	40$			; WE HAVE ALREADY COPIED UFD LEVEL
            83            2E     90  023E   435 30$:	MOVB	#^A\.\,(R3)+		; COPY DIRECTORY SEPARATOR
            50            86     D0  0241   436 	MOVL	(R6)+,R0		; GET SIZE OF STRING
            96            50     28  0244   437 	MOVC3	R0,@(R6)+,(R3)		; COPY NEXT DIRECTORY NAME
                          63         0247       
            F3            57     F4  0248   438 40$:	SOBGEQ	R7,30$			; BRANCH IF MORE DIRECTORIES
                          09     11  024B   439 	BRB	60$			;
            83            2C     90  024D   440 50$:	MOVB	#^A\,\,(R3)+		; COPY DIRECTORY SEPARATOR
                                 28  0250   441 	MOVC3	FWA$Q_DIR2(R10),-	; COPY SECOND DIRECTORY FIELD
NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page  13
025             NT$GET_FILESPEC - BUILDS A FILESPEC                                                                              (6)

         50 BA         4C AA         0251   442 		@FWA$Q_DIR2+4(R10),(R3)	;
                          63         0255       
            83         07 AA     90  0256   443 60$:	MOVB	FWA$B_DIRTERM(R10),(R3)+ ; STORE RIGHT BRACKET (']' OR '>')
                                     025A   444 
                                     025A   445 ;
                                     025A   446 ; PROCESS FILENAME, FILETYPE, AND FILEVERSION
                                     025A   447 ;
                                     025A   448 
                                 28  025A   449 70$:	MOVC3	FWA$Q_NAME(R10),-	; COPY FILENAME STRING (ASSEMBLED
       0088 DA       0084 CA         025B   450 		@FWA$Q_NAME+4(R10),(R3)	;  INTO ONE STRING BY RM0XPFN)
                          63         0261       
                                     0262   451 
                                     0262   452 ;
                                     0262   453 ; FINISH BUILDING COUNTED ASCII STRING
                                     0262   454 ;
                                     0262   455 
            53            58     C3  0262   456 80$:	SUBL3	R8,R3,R0		; CALCULATE SIZE OF STRING
                          50         0265       
         FF A8            50     90  0266   457 	MOVB	R0,-1(R8)		; STORE THE COUNT
                                     026A   458 
                                     026A   459 ;
                                     026A   460 ; SAVE FILESPEC COUNTED STRING IN NWA FOR POSSIBLE USE AT CLOSE IF
                                     026A   461 ; SPL, SCF, AND/OR DLT BITS ARE SET IN THE FOP FIELD.
                                     026A   462 ;
                                     026A   463 
                          08     BB  026A   464 	PUSHR	#^M<R3>			; SAVE NEXT BYTE POINTER
            51         28 A9     D0  026C   465 	MOVL	IFB$L_NWA_PTR(R9),R1	; GET ADDRESS OF NWA
                                     0270   466 					;  (R7 ON INPUT NOT AVAILABLE)
            52       00C0 C1     9E  0270   467 	MOVAB	NWA$T_FILESPEC(R1),R2	; GET ADDRESS OF FILESPEC BUFFER
       013F C1            50     90  0275   468 	MOVB	R0,NWA$B_QUOTEDTRN(R1)	; SAVE STRING COUNT
            6A            1A     E0  027A   469 	BBS	#FWA$V_QUOTED,(R10),90$	; BRANCH IF QUOTED STRING FORMAT
                          06         027D       
                          82     95  027E   470 	TSTB	(R2)+			; SKIP OVER STRING COUNT BYTE
            68            50     28  0280   471 	MOVC3	R0,(R8),(R2)		; COPY THE FILESPEC STRING
                          62         0283       
                          20     BA  0284   472 90$:	POPR	#^M<R5>			; PUT NEXT BYTE POINTER IN PROPER REG
                     01DC 8F     BA  0286   473 	POPR	#^M<R2,R3,R4,R6,R7,R8>	; RESTORE REGISTERS
                                 05  028A   474 	RSB				; EXIT
                                     028B   475 	.END
NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                     (6)

$$.PSECT_EP    = 00000000            DAP$K_DELETE   = 00000005            DAP$M_ALQ      = 00000040            
$$RMSTEST      = 0000001A            DAP$K_DEV_I    = 04000040            DAP$M_BKS      = 00000080            
$$RMS_PBUGCHK  = 00000010            DAP$K_DISCON   = 00000004            DAP$M_BLS      = 00000010            
$$RMS_TBUGCHK  = 00000008            DAP$K_ECONUM_V = 00000002            DAP$M_CBT      = 00800000            
$$RMS_UMODE    = 00000004            DAP$K_ERASE    = 00000004            DAP$M_CIF      = 00010000            
BIT...         = 00000008            DAP$K_EXECUTE  = 00000008            DAP$M_CTG      = 00000080            
DAP$B_ACCFUNC    00000060            DAP$K_FAC_I    = 00000040            DAP$M_DATATYPE = 00000001            
DAP$B_ACCOPT     00000061            DAP$K_FIND     = 0000000E            DAP$M_DEQ      = 00000800            
DAP$B_BKS        00000048            DAP$K_FIX      = 00000001            DAP$M_DEV      = 00004000            
DAP$B_CMPFUNC    00000080            DAP$K_FLAGS_I  = 00000004            DAP$M_DLK      = 00000010            
DAP$B_CONFUNC    0000007C            DAP$K_FOP_I    = 01020024            DAP$M_DLT      = 00400000            
DAP$B_CTLFUNC    0000006C            DAP$K_GET_READ = 00000001            DAP$M_DMO      = 00002000            
DAP$B_CTLMENU    0000006D            DAP$K_IDX      = 00000020            DAP$M_EMBEDDED = 00000010            
DAP$B_DATATYPE   0000003C            DAP$K_KEY_ACC  = 00000001            DAP$M_FID      = 00001000            
DAP$B_ECONUM     00000029            DAP$K_LSA      = 00000005            DAP$M_FOP      = 00001000            
DAP$B_FAC        00000062            DAP$K_OPEN     = 00000001            DAP$M_FSZ      = 00000100            
DAP$B_FIELD_ID   00000009            DAP$K_PURGE    = 00000003            DAP$M_GET      = 00000002            
DAP$B_FILESYS    00000027            DAP$K_PUT_WRITE= 00000004            DAP$M_IMAGE    = 00000002            
DAP$B_FLAGS      00000021            DAP$K_RAT_I    = 00000020            DAP$M_KEY      = 00000002            
DAP$B_FSZ        00000049            DAP$K_REL      = 00000010            DAP$M_MRN      = 00000200            
DAP$B_LENGTH     00000023            DAP$K_RESPONSE = 00000002            DAP$M_MRS      = 00000020            
DAP$B_MAC_CODE   0000000B            DAP$K_RETRY    = 00000001            DAP$M_MXV      = 00080000            
DAP$B_MSG_TYPE   0000000A            DAP$K_REWIND   = 00000006            DAP$M_NEF      = 00000200            
DAP$B_ORG        0000003D            DAP$K_RFA_ACC  = 00000002            DAP$M_NIL      = 00000040            
DAP$B_OSTYPE     00000026            DAP$K_RMS32    = 00000003            DAP$M_NONFATAL = 00000001            
DAP$B_RAC        0000006E            DAP$K_ROP_I    = 00000802            DAP$M_ORG      = 00000002            
DAP$B_RAT        0000003F            DAP$K_SEQ      = 00000000            DAP$M_POS      = 00000008            
DAP$B_RFM        0000003E            DAP$K_SEQ_ACC  = 00000000            DAP$M_RAC      = 00000001            
DAP$B_SHR        00000063            DAP$K_SEQ_FILE = 00000003            DAP$M_RAT      = 00000008            
DAP$B_SOFTVER    0000002B            DAP$K_SHR_I    = 00000090            DAP$M_RCK      = 00008000            
DAP$B_STREAMID   00000022            DAP$K_SKIP_REC = 00000002            DAP$M_RFM      = 00000004            
DAP$B_TYPE       00000020            DAP$K_SOFTVER_V= 00000001            DAP$M_ROP      = 00000008            
DAP$B_USRNUM     0000002A            DAP$K_SPACE    = 0000000B            DAP$M_RUNSYS   = 00000400            
DAP$B_USRSOFT    0000002C            DAP$K_STM      = 00000004            DAP$M_RWC      = 00000002            
DAP$B_VERNUM     00000028            DAP$K_STS_MSG  = 00000009            DAP$M_RWO      = 00000001            
DAP$C_BLN        000000C0            DAP$K_SUBMIT   = 00000007            DAP$M_SCF      = 00200000            
DAP$K_ABORT    = 00000003            DAP$K_SYSCAP_V = E00660E7            DAP$M_SPL      = 00100000            
DAP$K_ACCOPT_I = 00000008            DAP$K_UDF      = 00000000            DAP$M_SQO      = 00040000            
DAP$K_ACC_MSG  = 00000003            DAP$K_UPDATE   = 00000003            DAP$M_SUP      = 00000100            
DAP$K_ACK_MSG  = 00000006            DAP$K_USRNUM_V = 00000000            DAP$M_TMD      = 00000800            
DAP$K_ATTMENU_I= 0001A000            DAP$K_USRSOFT_V= 00000000            DAP$M_TMP      = 00000400            
DAP$K_ATT_MSG  = 00000002            DAP$K_VAR      = 00000002            DAP$M_WCK      = 00004000            
DAP$K_BLK_FILE = 00000005            DAP$K_VAXVMS   = 00000007            DAP$Q_DCODE_FLG  00000000            
DAP$K_BLK_VBN  = 00000004            DAP$K_VERNUM_V = 00000004            DAP$Q_FILEDATA   00000090            
DAP$K_BLN        000000C0            DAP$K_VFC      = 00000003            DAP$Q_FILESPEC   00000064            
DAP$K_BLS_D    = 00000200            DAP$L_ALQ        00000044            DAP$Q_KEY        00000070            
DAP$K_BUFSIZ_V = 00001100            DAP$L_ATTMENU    00000038            DAP$Q_MSG_BUF1   00000010            
DAP$K_CLOSE    = 00000001            DAP$L_DCODE_STS  00000008            DAP$Q_MSG_BUF2   00000018            
DAP$K_CMP_MSG  = 00000007            DAP$L_DEV        0000005C            DAP$Q_NUMBER     00000088            
DAP$K_CNF_MSG  = 00000001            DAP$L_FOP        00000058            DAP$Q_RFA        0000009C            
DAP$K_CONNECT  = 00000002            DAP$L_FOP2       00000084            DAP$Q_RUNSYS     00000050            
DAP$K_CON_MSG  = 00000005            DAP$L_MRN        0000004C            DAP$Q_SYSCAP     00000030            
DAP$K_CREATE   = 00000002            DAP$L_MSG_MASK   0000000C            DAP$Q_VERSION    00000028            
DAP$K_CTLMENU_I= 00000054            DAP$L_OPERATOR   00000020            DAP$S_TMP1..   = 0000000A            
DAP$K_CTL_MSG  = 00000004            DAP$L_RECNUM     000000A4            DAP$S_TMP2..   = 00000015            
DAP$K_DATATYP_I= 00000084            DAP$L_ROP        00000078            DAP$S_TMP3..   = 00000002            
DAP$K_DAT_MSG  = 00000008            DAP$L_STV        000000A8            DAP$S_TMP4..   = 00000008            
NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                     (6)

DAP$V_AFTER_V41= 00000020            DAP$V_KEY      = 00000001            DAP$_MSG_SYNC  = 0000000A            
DAP$V_ALQ      = 00000006            DAP$V_LENGTH   = 00000001            DAP$_PENDING   = 00000000            
DAP$V_APPEND   = 0000000D            DAP$V_MRN      = 00000009            DAP$_SUCCESS   = 00000001            
DAP$V_ASCII    = 00000000            DAP$V_MRS      = 00000005            DAP$_UNSUPPORT = 00000002            
DAP$V_BIO      = 00000005            DAP$V_MSGBLK   = 00000012            DECODE_FILE_ATT  000000DA R     02   
DAP$V_BKS      = 00000007            DAP$V_MXV      = 00000013            FAB$B_BID        00000000            
DAP$V_BLK      = 00000003            DAP$V_NEF      = 00000009            FAB$B_BKS        0000003E            
DAP$V_BLS      = 00000004            DAP$V_NIL      = 00000006            FAB$B_BLN        00000001            
DAP$V_CBT      = 00000017            DAP$V_NONFATAL = 00000000            FAB$B_DNS        00000035            
DAP$V_CIF      = 00000010            DAP$V_ORG      = 00000001            FAB$B_FAC        00000016            
DAP$V_CR       = 00000001            DAP$V_POS      = 00000003            FAB$B_FNS        00000034            
DAP$V_CTG      = 00000007            DAP$V_PRIV     = 00000005            FAB$B_FSZ        0000003F            
DAP$V_DATATYPE = 00000000            DAP$V_PRN      = 00000002            FAB$B_ORG        0000001D            
DAP$V_DEL      = 00000002            DAP$V_PUT      = 00000000            FAB$B_RAT        0000001E            
DAP$V_DEQ      = 0000000B            DAP$V_RAC      = 00000000            FAB$B_RFM        0000001F            
DAP$V_DEV      = 0000000E            DAP$V_RANREC   = 00000006            FAB$B_RTV        0000001C            
DAP$V_DEVALL   = 0000000C            DAP$V_RANVBN   = 00000007            FAB$B_SHR        00000017            
DAP$V_DEVAVL   = 00000010            DAP$V_RAT      = 00000003            FAB$C_BID      = 00000003            
DAP$V_DEVCCL   = 00000001            DAP$V_RCK      = 0000000F            FAB$C_BLN        00000050            
DAP$V_DEVDIR   = 00000003            DAP$V_RELORG   = 00000002            FAB$C_FIX      = 00000001            
DAP$V_DEVDMT   = 0000000B            DAP$V_RFM      = 00000002            FAB$C_HSH      = 00000030            
DAP$V_DEVELG   = 00000011            DAP$V_ROP      = 00000003            FAB$C_IDX      = 00000020            
DAP$V_DEVFOD   = 00000007            DAP$V_RUNSYS   = 0000000A            FAB$C_MAXRFM   = 00000003            
DAP$V_DEVFOR   = 00000017            DAP$V_RWC      = 00000001            FAB$C_REL      = 00000010            
DAP$V_DEVGEN   = 00000019            DAP$V_RWO      = 00000000            FAB$C_RFM_DFLT = 00000002            
DAP$V_DEVIDV   = 0000000D            DAP$V_SCF      = 00000015            FAB$C_SEQ      = 00000000            
DAP$V_DEVMBX   = 00000012            DAP$V_SEQORG   = 00000001            FAB$C_UDF      = 00000000            
DAP$V_DEVMNT   = 0000000A            DAP$V_SEQREC   = 00000005            FAB$C_VAR      = 00000002            
DAP$V_DEVNET   = 00000018            DAP$V_SPL      = 00000014            FAB$C_VFC      = 00000003            
DAP$V_DEVODV   = 0000000E            DAP$V_SQO      = 00000012            FAB$K_BLN        00000050            
DAP$V_DEVRCK   = 00000015            DAP$V_STREAMID = 00000000            FAB$L_ALQ        00000010            
DAP$V_DEVREC   = 00000000            DAP$V_STSRTN   = 00000011            FAB$L_CTX        00000018            
DAP$V_DEVRND   = 00000014            DAP$V_STS_RETRV= 00000002            FAB$L_DEV        00000040            
DAP$V_DEVRTM   = 00000013            DAP$V_STS_STORE= 00000001            FAB$L_DNA        00000030            
DAP$V_DEVSDI   = 00000004            DAP$V_SUBMIT   = 0000000E            FAB$L_FNA        0000002C            
DAP$V_DEVSHR   = 00000008            DAP$V_SUP      = 00000008            FAB$L_FOP        00000004            
DAP$V_DEVSPL   = 00000009            DAP$V_TMD      = 0000000B            FAB$L_JNL        00000020            
DAP$V_DEVSQD   = 00000005            DAP$V_TMP      = 0000000A            FAB$L_MRN        00000038            
DAP$V_DEVSWL   = 0000000F            DAP$V_TMP1..   = 00000001            FAB$L_NAM        00000028            
DAP$V_DEVTRM   = 00000002            DAP$V_TMP2..   = 0000000B            FAB$L_SDC        00000044            
DAP$V_DEVWCK   = 00000016            DAP$V_TMP3..   = 00000006            FAB$L_STS        00000008            
DAP$V_DLK      = 00000004            DAP$V_TMP4..   = 00000018            FAB$L_STV        0000000C            
DAP$V_DLT      = 00000016            DAP$V_TRN      = 00000004            FAB$L_XAB        00000024            
DAP$V_DMO      = 0000000D            DAP$V_UPD      = 00000003            FAB$M_BIO      = 00000020            
DAP$V_EMBEDDED = 00000004            DAP$V_VAXVMS   = 00000021            FAB$M_BLK      = 00000008            
DAP$V_EOF      = 00000000            DAP$V_WCK      = 0000000E            FAB$M_BRO      = 00000040            
DAP$V_EXEC     = 00000004            DAP$W_BLS        00000040            FAB$M_CBT      = 00200000            
DAP$V_FID      = 0000000C            DAP$W_BUFSIZ     00000024            FAB$M_CIF      = 02000000            
DAP$V_FILALL   = 00000000            DAP$W_DEQ        0000004A            FAB$M_CR       = 00000002            
DAP$V_FOP      = 0000000C            DAP$W_MRS        00000042            FAB$M_CTG      = 00100000            
DAP$V_FOPDLT   = 0000001F            DAP$W_STSCODE    00000098            FAB$M_DEL      = 00000004            
DAP$V_FOPSCF   = 0000001E            DAP$_FILE_CLOS = 00000007            FAB$M_DFW      = 00000020            
DAP$V_FOPSPL   = 0000001D            DAP$_FILE_OPEN = 00000004            FAB$M_DLT      = 00008000            
DAP$V_FSZ      = 00000008            DAP$_FILE_XFER = 00000005            FAB$M_DMO      = 00001000            
DAP$V_FTN      = 00000000            DAP$_FOP       = 0000001D            FAB$M_ESC      = 08000000            
DAP$V_GET      = 00000001            DAP$_FORMAT    = 00000008            FAB$M_EXE      = 00000080            
DAP$V_IMAGE    = 00000001            DAP$_INVALID   = 00000009            FAB$M_FTN      = 00000001            
NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                     (6)

FAB$M_GET      = 00000002            FAB$V_MSE      = 00000004            FWA$C_MAXDIRLEN= 0000003C            
FAB$M_INP      = 00080000            FAB$V_MXV      = 00000001            FWA$C_MAXNAME  = 00000009            
FAB$M_JNL      = 00400000            FAB$V_NAM      = 00000018            FWA$C_MAXNODE  = 00000028            
FAB$M_KFO      = 40000000            FAB$V_NEF      = 0000000A            FWA$C_MAXQUOTED= 0000007F            
FAB$M_MSE      = 00000010            FAB$V_NFS      = 00000010            FWA$C_MAXSUBDIR= 00000007            
FAB$M_MXV      = 00000002            FAB$V_NIL      = 00000005            FWA$C_MAXTYPE  = 00000003            
FAB$M_NAM      = 01000000            FAB$V_OFP      = 0000001D            FWA$C_MAXVER   = 00000006            
FAB$M_NEF      = 00000400            FAB$V_ORG      = 00000004            FWA$C_NAMBUFSIZ= 0000000A            
FAB$M_NFS      = 00010000            FAB$V_POS      = 00000008            FWA$C_NODBUFSIZ= 00000028            
FAB$M_NIL      = 00000020            FAB$V_PPF      = 00000012            FWA$C_RNSBUFSIZ= 00000014            
FAB$M_OFP      = 20000000            FAB$V_PPF_IND  = 0000000E            FWA$C_TYPBUFSIZ= 00000004            
FAB$M_POS      = 00000100            FAB$V_PPF_RAT  = 00000006            FWA$C_VERBUFSIZ= 00000006            
FAB$M_PPF      = 00040000            FAB$V_PRN      = 00000002            FWA$C_XLTBUFSIZ= 0000003F            
FAB$M_PPF_IND  = 00004000            FAB$V_PUT      = 00000000            FWA$L_BUFFLG     00000014            
FAB$M_PPF_RAT  = 00003FC0            FAB$V_RCK      = 00000017            FWA$L_DEVNODADR  00000020            
FAB$M_PRN      = 00000004            FAB$V_RWC      = 0000000B            FWA$L_ESCSTRING  00000008            
FAB$M_PUT      = 00000001            FAB$V_RWO      = 00000007            FWA$L_HBK        00000098            
FAB$M_RCK      = 00800000            FAB$V_SCF      = 0000000E            FWA$L_LOOKUP     0000001C            
FAB$M_RWC      = 00000800            FAB$V_SHRDEL   = 00000002            FWA$L_SBN        00000094            
FAB$M_RWO      = 00000080            FAB$V_SHRGET   = 00000001            FWA$L_UIC        0000001C            
FAB$M_SCF      = 00004000            FAB$V_SHRPUT   = 00000000            FWA$L_XLTCNT     0000002C            
FAB$M_SHRDEL   = 00000004            FAB$V_SHRUPD   = 00000003            FWA$L_XLTSIZ     00000018            
FAB$M_SHRGET   = 00000002            FAB$V_SPL      = 0000000D            FWA$M_DEVICE   = 00008000            
FAB$M_SHRPUT   = 00000001            FAB$V_SQO      = 00000006            FWA$M_DIR      = 00004000            
FAB$M_SHRUPD   = 00000008            FAB$V_SUP      = 00000002            FWA$M_DUPOK    = 00000001            
FAB$M_SPL      = 00002000            FAB$V_TEF      = 0000001C            FWA$M_EXP_DEV  = 00800000            
FAB$M_SQO      = 00000040            FAB$V_TMD      = 00000004            FWA$M_EXP_DIR  = 00400000            
FAB$M_SUP      = 00000004            FAB$V_TMP      = 00000003            FWA$M_EXP_NAME = 00040000            
FAB$M_TEF      = 10000000            FAB$V_TRN      = 00000004            FWA$M_EXP_TYPE = 00020000            
FAB$M_TMD      = 00000010            FAB$V_UFM      = 0000001A            FWA$M_EXP_VER  = 00010000            
FAB$M_TMP      = 00000008            FAB$V_UFO      = 00000011            FWA$M_FNA_PASS = 00000010            
FAB$M_TRN      = 00000010            FAB$V_UPD      = 00000003            FWA$M_NAME     = 00002000            
FAB$M_UFM      = 04000000            FAB$V_UPI      = 00000006            FWA$M_NAMEFLG  = 00000002            
FAB$M_UFO      = 00020000            FAB$V_WCK      = 00000009            FWA$M_NAM_DVI  = 00000020            
FAB$M_UPD      = 00000008            FAB$W_BLS        0000003C            FWA$M_RLF_PASS = 00000008            
FAB$M_UPI      = 00000040            FAB$W_DEQ        00000014            FWA$M_TYPE     = 00001000            
FAB$M_WCK      = 00000200            FAB$W_IFI        00000002            FWA$M_TYPEFLG  = 00000004            
FAB$S_ORG      = 00000004            FAB$W_MRS        00000036            FWA$M_VERSION  = 00000800            
FAB$S_PPF_RAT  = 00000008            FWA$B_DIRFLGS    00000004            FWA$Q_DEVICE     0000003C            
FAB$V_BIO      = 00000005            FWA$B_DIRLEN     00000030            FWA$Q_DIR        00000024            
FAB$V_BLK      = 00000003            FWA$B_DIRTERM    00000007            FWA$Q_DIR1       00000044            
FAB$V_BRO      = 00000006            FWA$B_DIRWCFLGS  00000005            FWA$Q_DIR2       0000004C            
FAB$V_CBT      = 00000015            FWA$B_ESCFLG     00000008            FWA$Q_FIB        0000000C            
FAB$V_CIF      = 00000019            FWA$B_ESCTYP     00000009            FWA$Q_FLAGS      00000000            
FAB$V_CR       = 00000001            FWA$B_FLDFLGS    00000001            FWA$Q_LOGNAME    0000001C            
FAB$V_CTG      = 00000014            FWA$B_LNFLG      00000006            FWA$Q_NAME       00000084            
FAB$V_DEL      = 00000002            FWA$B_PARSEFLGS  00000003            FWA$Q_NODE       00000034            
FAB$V_DFW      = 00000005            FWA$B_PASSFLGS   00000000            FWA$Q_QUOTED     0000009C            
FAB$V_DLT      = 0000000F            FWA$B_UNDERLINE  00000154            FWA$Q_RNS        0000008C            
FAB$V_DMO      = 0000000C            FWA$B_WILDFLGS   00000002            FWA$Q_STATBLK    00000094            
FAB$V_ESC      = 0000001B            FWA$B_XLTMODE    0000000A            FWA$Q_TYPE       0000008C            
FAB$V_EXE      = 00000007            FWA$B_XLTTBL     0000000B            FWA$Q_VERSION    00000094            
FAB$V_FTN      = 00000000            FWA$C_ALL      = 000000F8            FWA$Q_XLTBUF1    0000000C            
FAB$V_GET      = 00000001            FWA$C_DEVBUFSIZ= 0000000F            FWA$Q_XLTBUF2    00000024            
FAB$V_INP      = 00000013            FWA$C_DIRBUFSIZ= 00000009            FWA$S_DIR_LVLS = 00000003            
FAB$V_JNL      = 00000016            FWA$C_FIBLEN   = 0000002C            FWA$T_ATR_LIST   00000164            
FAB$V_KFO      = 0000001E            FWA$C_MAXDEVICE= 0000000F            FWA$T_DEVICEBUF  00000155            
NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page  17
SYMBOL TABLE                                                                                                                     (6)

FWA$T_DIB        00000174            IFB$B_FAC        00000022            IFB$S_ORG      = 00000004            
FWA$T_DIR1BUF    000000D0            IFB$B_FSZ        0000004B            IFB$S_RFM      = 00000004            
FWA$T_DIR2BUF    000000D9            IFB$B_KBUFSZ     0000005C            IFB$V_ACCESSED = 00000025            
FWA$T_FIBBUF     000000A4            IFB$B_MODE       0000000A            IFB$V_ANSI_D   = 00000026            
FWA$T_NAMEBUF    00000118            IFB$B_NUM_KEYS   0000005A            IFB$V_ASYNC    = 00000023            
FWA$T_NODEBUF    0000012C            IFB$B_ORGCASE    00000023            IFB$V_ASYNCWAIT= 00000024            
FWA$T_TYPEBUF    00000122            IFB$B_RAT        0000003D            IFB$V_BIO      = 00000005            
FWA$T_VERBUF     00000126            IFB$B_RFMORG     0000003C            IFB$V_BRO      = 00000006            
FWA$T_XLTBUFF1   00000164            IFB$B_UBUFSZ     0000005B            IFB$V_BUSY     = 00000020            
FWA$T_XLTBUFF2   000001A4            IFB$C_BID      = 0000000B            IFB$V_CREATE   = 00000032            
FWA$V_CUR_VER  = 00000006            IFB$C_BLN        00000060            IFB$V_DAP      = 0000003E            
FWA$V_DEVICE   = 0000000F            IFB$C_BLN_IDX    00000060            IFB$V_DAP_OPEN = 0000003D            
FWA$V_DIR      = 0000000E            IFB$C_BLN_REL    00000060            IFB$V_DEL      = 00000002            
FWA$V_DIR1     = 00000020            IFB$C_BLN_SEQ    0000005C            IFB$V_DFW      = 0000002C            
FWA$V_DIR2     = 00000021            IFB$C_DIR      = 00000003            IFB$V_DLT      = 0000002B            
FWA$V_DIR_LVLS = 0000001D            IFB$C_FHAEND     00000050            IFB$V_DMO      = 00000028            
FWA$V_DUPOK    = 00000000            IFB$C_IDX      = 00000002            IFB$V_EOF      = 00000021            
FWA$V_EXP_DEV  = 00000017            IFB$C_MAXORG   = 00000002            IFB$V_EXE      = 00000007            
FWA$V_EXP_DIR  = 00000016            IFB$C_REL      = 00000001            IFB$V_GET      = 00000001            
FWA$V_EXP_NAME = 00000012            IFB$C_SEQ      = 00000000            IFB$V_MSE      = 00000031            
FWA$V_EXP_TYPE = 00000011            IFB$K_BLN        00000060            IFB$V_NORECLK  = 00000033            
FWA$V_EXP_VER  = 00000010            IFB$K_BLN_IDX    00000060            IFB$V_NSP      = 0000003F            
FWA$V_FNA_PASS = 00000004            IFB$K_BLN_REL    00000060            IFB$V_NWA      = 0000003C            
FWA$V_GRPMBR   = 0000001B            IFB$K_BLN_SEQ    0000005C            IFB$V_ORG      = 00000004            
FWA$V_LOGNAME  = 00000030            IFB$K_FHAEND     00000050            IFB$V_PPF_IMAGE= 00000022            
FWA$V_NAME     = 0000000D            IFB$L_ARGLST     00000018            IFB$V_PPF_INPUT= 0000002E            
FWA$V_NAMEFLG  = 00000001            IFB$L_ASBADDR    00000014            IFB$V_PUT      = 00000000            
FWA$V_NAM_DVI  = 00000005            IFB$L_AS_DEV     00000054            IFB$V_RFM      = 00000000            
FWA$V_NETSTR   = 00000032            IFB$L_BDB_BLNK   00000034            IFB$V_RWC      = 00000027            
FWA$V_NODE     = 00000019            IFB$L_BDB_FLNK   00000030            IFB$V_RW_ATTR  = 00000034            
FWA$V_OBJTYPE  = 00000031            IFB$L_BKPBITS    00000004            IFB$V_SCF      = 0000002A            
FWA$V_QUOTED   = 0000001A            IFB$L_BWB        0000000C            IFB$V_SPL      = 00000029            
FWA$V_RLF_PASS = 00000003            IFB$L_DVBN       00000058            IFB$V_SQO      = 0000002D            
FWA$V_TYPE     = 0000000C            IFB$L_EBK        00000044            IFB$V_TEF      = 00000036            
FWA$V_TYPEFLG  = 00000002            IFB$L_FRB_PTR    00000028            IFB$V_TMP      = 00000035            
FWA$V_VERSION  = 0000000B            IFB$L_FWA_BDB    00000050            IFB$V_TRN      = 00000004            
FWA$V_WC_NAME  = 00000015            IFB$L_HBK        00000040            IFB$V_UPD      = 00000003            
FWA$V_WC_TYPE  = 00000014            IFB$L_IDX_PTR    00000054            IFB$V_WRTACC   = 00000030            
FWA$V_WC_VER   = 00000013            IFB$L_IOS        0000000C            IFB$W_ASDEVBSIZ  0000005A            
FWA$V_WILDCARD = 00000018            IFB$L_IOS4       00000010            IFB$W_BKS_BYTES  0000005C            
FWA$V_WILD_DIR = 0000001C            IFB$L_IRAB_LNK   0000001C            IFB$W_BKS_RECS   0000005E            
FWA$V_WILD_GRP = 00000028            IFB$L_LAST_FAB   00000024            IFB$W_CHNL       00000020            
FWA$V_WILD_MBR = 00000029            IFB$L_LOCK_BDB   00000050            IFB$W_DEQ        0000004E            
FWA$V_WILD_SFD1= 00000029            IFB$L_MRN        00000054            IFB$W_DEVBUFSIZ  00000038            
FWA$V_WILD_UFD = 00000028            IFB$L_NRP_LNK    00000050            IFB$W_EBK0       00000044            
FWA$W_ESCIFI     0000000A            IFB$L_NWA_PTR    00000028            IFB$W_EBK2       00000046            
FWA$W_FNAMSIZ    00000018            IFB$L_PRIM_DEV   00000000            IFB$W_FFB        00000048            
FWA$W_PRO        00000020            IFB$L_RLB_LNK    0000002C            IFB$W_IOS2       0000000E            
FWA$W_UCHAR      0000002C            IFB$L_RNS_LEN    00000050            IFB$W_LRL        0000003E            
GBL...         = 00000000            IFB$M_BIO      = 00000020            IFB$W_MRS        0000004C            
IFB$B_AMAX       00000059            IFB$M_BRO      = 00000040            IFB$W_RTDEQ      0000003A            
IFB$B_AVBN       00000058            IFB$M_DEL      = 00000004            NT$CVT_BIN2EXT   ********   X   02   
IFB$B_BID        00000008            IFB$M_EXE      = 00000080            NT$ENCODE_FOP    ********   X   02   
IFB$B_BKS        0000004A            IFB$M_GET      = 00000002            NT$EXCH_CNF      00000163 RG    02   
IFB$B_BLN        00000009            IFB$M_PUT      = 00000001            NT$EXCH_CNF_ALT  00000179 RG    02   
IFB$B_EFN        0000000B            IFB$M_TRN      = 00000010            NT$GET_FILESPEC  000001F0 RG    02   
IFB$B_EXTRABUF   0000005D            IFB$M_UPD      = 00000008            NT$OPEN1         00000008 RG    02   
NT0OPEN         NETWORK OPEN FILE                                21-AUG-1978 22:23:17   VAX-11 MACRO X0.3-11               Page  18
SYMBOL TABLE                                                                                                                     (6)

NT$OPEN2         00000000 RG    02   
NT$RECEIVE_ALT   ********   X   02   
NT$TRANSMIT_ALT  ********   X   02   
NWA$B_QUOTEDTRN  0000013F            
NWA$C_BLN        00000400            
NWA$C_BUFFERSIZ= 000002A0            
NWA$C_DAPSIZ   = 000000C0            
NWA$K_BLN        00000400            
NWA$Q_BUFFER     00000140            
NWA$Q_BUFFER2    00000148            
NWA$Q_FLG        00000000            
NWA$T_BUFFER     00000160            
NWA$T_DAP        00000000            
NWA$T_FILESPEC   000000C0            
NWA$T_QUOTEDBUF  000000C0            
NWA$T_SPARE      00000150            
OPEN_COMMON      0000000E R     02   
OPNXAB1_ARGS_NT  ********   X   02   
PIO$GL_FMLH      ********   X   02   
RM$XAB_SCAN      ********   X   02   
RMS$_SUP         ********   X   02   
TPT$L_NTOPEN1    ********   X   02   
TPT$L_NTOPEN2    ********   X   02   
XAB$V_CBT      = 00000005            
XAB$V_CTG      = 00000007            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
NF$NETWORK       0000028B      02     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  
$ABS$            00000400      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
794. BYTES LEFT IN FREE MEMORY POOL.
8974. BYTES OF RECLAIMED MEMORY.
OBJ$:NT0OPEN,LIS$:NT0OPEN/-SP=LIB$:N/ML,R/ML,SRC$:NT0OPEN
42 MLB DIR RDS - 1266 GETS TO DEFINE 21 MACROS. 97 INTER. FILE WRITES. 
