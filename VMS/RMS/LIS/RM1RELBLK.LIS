RM1RELBLK       RELEASE BUFFER FOR SEQ. ORG.                     21-AUG-1978 21:47:28   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      40  DECLARATIONS
   (1)     113  RM$RELBLK1  -  ROUTINE TO RELEASE BLOCK, REWRIT
RM1RELBLK       RELEASE BUFFER FOR SEQ. ORG.                     21-AUG-1978 21:47:28   VAX-11 MACRO X0.3-11               Page   1
016                                                                                                                              (1)

                                     0000     1 	$BEGIN	RM1RELBLK,016,$RMS1,<RELEASE BUFFER FOR SEQ. ORG.>
                                     0000     2 ;
                                     0000     3 ; COPYRIGHT (C) 1977
                                     0000     4 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     5 ;
                                     0000     6 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     7 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000     8 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000     9 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    10 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    11 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    12 ; REMAIN IN DEC.
                                     0000    13 ;
                                     0000    14 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    15 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    16 ; CORPORATION.
                                     0000    17 ;
                                     0000    18 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    19 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    20 ;
                                     0000    21 ;++
                                     0000    22 ; FACILITY: RMS32
                                     0000    23 ;
                                     0000    24 ; ABSTRACT:
                                     0000    25 ;		THIS MODULE RELEASES A BUFFER CAUSING ITS
                                     0000    26 ;		CONTENTS TO BE WRITTEN OUT IF DIRTY.
                                     0000    27 ;
                                     0000    28 ; ENVIRONMENT:
                                     0000    29 ;		STAR PROCESSOR RUNNING STARLET EXEC.
                                     0000    30 ;
                                     0000    31 ; AUTHOR: L F LAVERDURE,	 CREATION DATE: 29-MARCH-77
                                     0000    32 ;
                                     0000    33 ; MODIFIED BY:
                                     0000    34 ;
                                     0000    35 ;	E H MARISON,   7-JUN-78  13:06
                                     0000    36 ;			ADD MBF LOGIC AND COMMENTS
                                     0000    37 ; 01	- 
                                     0000    38 ;--
RM1RELBLK       RELEASE BUFFER FOR SEQ. ORG.                     21-AUG-1978 21:47:28   VAX-11 MACRO X0.3-11               Page   2
016             DECLARATIONS                                                                                                     (1)

                                     0000    40 	.SBTTL	DECLARATIONS
                                     0000    41 ;
                                     0000    42 ; INCLUDE FILES:
                                     0000    43 ;
                                     0000    44 
                                     0000    45 ;
                                     0000    46 ; MACROS:
                                     0000    47 ;
                                     0000    48 	$IFBDEF
                                     0000    49 	$IRBDEF
                                     0000    50 	$DEVDEF
                                     0000    51 	$BDBDEF
                                     0000    52 	$RLSDEF
                                     0000    53 	$FIBDEF
                                     0000    54 	$RMSDEF
                                     0000    55 	.LIST MEB
                                     0000    56 
                                     0000    57 ;
                                     0000    58 ; EQUATED SYMBOLS:
                                     0000    59 ;
                                     0000    60 
                                     0000    61 ;
                                     0000    62 ; OWN STORAGE:
                                     0000    63 ;
                                     0000    64 
RM1RELBLK       RELEASE BUFFER FOR SEQ. ORG.                     21-AUG-1978 21:47:28   VAX-11 MACRO X0.3-11               Page   3
016             DECLARATIONS                                                                                                     (1)

                                     0000    66 
                                     0000    67 ;++
                                     0000    68 ; NOTES ON THE MULTI-BLOCK BUFFERING SCHEME
                                     0000    69 ;
                                     0000    70 ; THIS ROUTINE CAUSES MULTIPLE BLOCKS TO BE READ TOGETHER
                                     0000    71 ; (AS SPECIFIED BY MBC) BUT RETURNED ONE AT A TIME FOR
                                     0000    72 ; PROCESSING BY THE CALLING ROUTINES.
                                     0000    73 ;
                                     0000    74 ; ASSUMPTIONS:
                                     0000    75 ;
                                     0000    76 ;	1.  MBC IS NEVER > 0 EXCEPT FOR DISK(= # VBN'S - 1)
                                     0000    77 ;	2.  RECORDS ARE ALWAYS WRITTEN AT EOF (ONLY UPDATES
                                     0000    78 ;	    MAY OCCUR ELSEWHERE IN THE FILE).
                                     0000    79 ;	3.  ALL SEQUENTIAL I/O CALLS GO THRU ONE OF THE
                                     0000    80 ;	    FOLLOWING ROUTINES:
                                     0000    81 ;		RM$NXTBLK1
                                     0000    82 ;		RM$WTLST1
                                     0000    83 ;		RM$RELBLK1
                                     0000    84 ;	4.  THERE IS NO WRITE SHARING FOR SEQUENTIAL FILES.
                                     0000    85 ;	5.  A DIRECT RELEASE WILL BE DONE ONLY WHEN THERE
                                     0000    86 ;	    IS NO I/O FOR THE BUFFER.
                                     0000    87 ;
                                     0000    88 ; BDB FIELD USAGE:
                                     0000    89 ;
                                     0000    90 ;	1.  BDB$L_VBN = VBN OF FIRST BLOCK IN BUFFER
                                     0000    91 ;	2.  (IRB$L_RP_VBN = VBN OF CURRENT BLOCK)
                                     0000    92 ;	3.  BDB$B_REL_VBN = CURRENT VBN REL TO START VBN FOR BUFFER
                                     0000    93 ;	4.  BDB$B_VAL_VBNS = # OF VALID VBNS IN BUFFER
                                     0000    94 ;	5.  BDB$B_FLGS:
                                     0000    95 ;		-BDB$V_DRT:ALL BLOCKS UP TO THE GREATER OF THE CURRENT VBN
                                     0000    96 ;		 AND THE NUMBER OF VAL_VBNS ARE DIRTY
                                     0000    97 ;		-BDB$V_VAL:THE CURRENT VBN IS VALID
                                     0000    98 ;
                                     0000    99 ;	6.  THE RELATIVE VBN = REQUESTED VBN - START VBN
                                     0000   100 ;	7.  CURRENT BLOCK BUFFER ADDR = BUFF ADDR + (REL_VBN*512)
                                     0000   101 ;	8.  BDB$W_NUMB = # BYTES IN CURRENT BLOCK
                                     0000   102 ;		ON READS = (IRB$B_MBC+1)*512
                                     0000   103 ;		ON WRITES = (MAX(VAL_VBN,REL_VBN+1))*512
                                     0000   104 ;	9.  REQUESTED VBN IS IN BUFFER IF ITS REL_VBN < OR = MBC
                                     0000   105 ;	10. IF READ REQUIRED AND REL_VBN < VAL_VBNS OK,
                                     0000   106 ;		ELSE RELEASE BUFFER AND REREAD
                                     0000   107 ;	11. ON RELEASE (RM$RELBLK1) IF BDB$V_VAL IS OFF AND THE
                                     0000   108 ;	    BDB$V_DRT BIT IS SET, MERELY DECREMENT THE
                                     0000   109 ;	    CURRENT VBN AND SET THE VALID BIT.
                                     0000   110 ;--
                                     0000   111 
RM1RELBLK       RELEASE BUFFER FOR SEQ. ORG.                     21-AUG-1978 21:47:28   VAX-11 MACRO X0.3-11               Page   4
016             RM$RELBLK1  -  ROUTINE TO RELEASE BLOCK, REWRIT                                                                  (1)

                                     0000   113 	.SBTTL RM$RELBLK1  -  ROUTINE TO RELEASE BLOCK, REWRITING IF DIRTY
                                     0000   114 ;++
                                     0000   115 ; FUNCTIONAL DESCRIPTION:
                                     0000   116 ;
                                     0000   117 ;  THIS ROUTINE RELEASES THE BLOCK WHOSE BDB ADDRESS IS IN R4.
                                     0000   118 ;  IF THE BLOCK IS DIRTY IT IS FIRST WRITTEN.
                                     0000   119 ;  IF THE WRITE IS TO A DISK FILE, THE FILE MUST HAVE BEEN EXTENDED IF NEEDED.
                                     0000   120 ;
                                     0000   121 ; CALLING SEQUENCE:
                                     0000   122 ;
                                     0000   123 ;	BSBW	RM$RELBLK1
                                     0000   124 ;
                                     0000   125 ; INPUT PARAMETERS:
                                     0000   126 ;
                                     0000   127 ;	R11	IMPURE AREA ADDRESS
                                     0000   128 ;	R10	IFAB ADDRESS
                                     0000   129 ;	R9	IRAB ADDRESS
                                     0000   130 ;	R8	RAB ADDRESS
                                     0000   131 ;	R4	BDB ADDRESS
                                     0000   132 ;
                                     0000   133 ; IMPLICIT INPUTS:
                                     0000   134 ;
                                     0000   135 ;	BDB$B_FLGS	  	(DRT AND VAL)
                                     0000   136 ;	BDB$B_REL_VBN	 -	CURRENT BLOCK IF MBC > 0
                                     0000   137 ;	BDB$W_NUMB	 -	# BYTES TO WRITE IF MAGTAPE
                                     0000   138 ;	BDB$L_VBN	 -	START BLOCK FOR WRITE
                                     0000   139 ;	BDB$L_ADDR	 -	START ADDRESS FOR WRITE
                                     0000   140 ;	IFB$L_HBK	 -	HIGHEST ALLOCATED BLOCK
                                     0000   141 ;	IFB$W_RTDEQ	 -	DEFAULT EXTEND QUANITY
                                     0000   142 ;	IFB$W_CHNL	 -	CHANNEL
                                     0000   143 ;	IFB$W_DEVBUFSIZ	 -	BLOCK BUFFER SIZE
                                     0000   144 ;
                                     0000   145 ; OUTPUT PARAMETERS:
                                     0000   146 ;
                                     0000   147 ;	R0	STATUS	CODE
                                     0000   148 ;	R1,AP	DESTROYED
                                     0000   149 ;
                                     0000   150 ; IMPLICIT OUTPUTS:
                                     0000   151 ;
                                     0000   152 ;	BDB$B_FLGS	 -	DRT IS CLEARED
                                     0000   153 ;			 -	VAL IS SET
                                     0000   154 ;			 -	IOP SET IF WRITE BEHIND UNDERWAY
                                     0000   155 ;	BDB$W_NUMB	 -	SET TO SIZE OF TRANSFER, IF ANY
                                     0000   156 ;
                                     0000   157 ; COMPLETION CODES:
                                     0000   158 ;
                                     0000   159 ;	STANDARD RMS, IN PARTICULAR, SUC, SYS, DME, WER, FUL, PRV, EXT.
                                     0000   160 ;
                                     0000   161 ; SIDE EFFECTS:
                                     0000   162 ;
                                     0000   163 ;	MAY HAVE SWITCHED TO RUNNING AT AST LEVEL
                                     0000   164 ;	REQUIRING REPROBE OF ALL USER ADDRESSES NOT IN RAB.
                                     0000   165 ;--
RM1RELBLK       RELEASE BUFFER FOR SEQ. ORG.                     21-AUG-1978 21:47:28   VAX-11 MACRO X0.3-11               Page   5
016             RM$RELBLK1  -  ROUTINE TO RELEASE BLOCK, REWRIT                                                                  (1)

                                     0000   167 RM$RELBLK1::
                                     0000   168 	$TSTPT	RELBLK1
                 00000200'9F     D6  0000       		INCL	@#PIO$GL_FMLH+512+TPT$L_RELBLK1
                          0C     BB  0006   169 	PUSHR	#^M<R2,R3>			; SAVE REGS.
         0A A4            01     E1  0008   170 	BBC	#BDB$V_DRT,BDB$B_FLGS(R4),RELEASE ; BRANCH IF BUFFER NOT DIRTY
                          25         000C       
            6A            1C     E1  000D   171 	BBC	#DEV$V_RND,IFB$L_PRIM_DEV(R10),RELEASE ; BRANCH IF NOT DISK
                          21         0010       
                                     0011   172 
                                     0011   173 ;
                                     0011   174 ; BDB MARKED DIRTY	-	ADJUST BDB DATA FOR RELEASE
                                     0011   175 ;
                                     0011   176 	ASSUME	BDB$V_VAL EQ 0
            07         0A A4     E8  0011   177 	BLBS	BDB$B_FLGS(R4),10$	; BRANCH IF BUFFER VALID
                                     0015   178 ;
                                     0015   179 ; BUFFER DIRTY BUT MARKED INVALID.
                                     0015   180 ; DECREMENT THE CURRENT VBN DATA AND SAY VALID.
                                     0015   181 ;
                       20 A4     97  0015   182 	DECB	BDB$B_REL_VBN(R4)
         0A A4            01     88  0018   183 	BISB2	#BDB$M_VAL,BDB$B_FLGS(R4)
                                     001C   184 ;
                                     001C   185 ; ADJUST BYTE COUNT FOR TRANSFER IF DISK
                                     001C   186 ; (I.E., TRANSFER ALL BLOCKS THRU CURRENT VBN OR # VAL_VBNS IF GREATER)
                                     001C   187 ;
            52         20 A4     9A  001C   188 10$:	MOVZBL	BDB$B_REL_VBN(R4),R2	; GET CURRENT VBN
                          52     B6  0020   189 	INCW	R2			; GET # VBNS
         21 A4            52     91  0022   190 	CMPB	R2,BDB$B_VAL_VBNS(R4)	; IS CURRENT GREATER THAN  # VALID VBNS?
                          04     1E  0026   191 	BGEQU	15$			; BRANCH IF YES
            52         21 A4     9A  0028   192 	MOVZBL	BDB$B_VAL_VBNS(R4),R2	; NO - SO USE # VALID VBNS
         38 AA            52     A5  002C   193 15$:	MULW3	R2,IFB$W_DEVBUFSIZ(R10),BDB$W_NUMB(R4)
                       10 A4         0030       
                                     0032   194 					; AND SET XFER SIZE
                                     0032   195 ;
                                     0032   196 ; CALL RM$RELEASE TO WRITE AND RELEASE BUFFER
                                     0032   197 ;
            53            02     D0  0032   198 RELEASE: MOVL	#RLS$M_WRT_THRU,R3	; FLAG TO GET WRITE
                          FFC8'  30  0035   199 	BSBW	RM$RELEASE		; RELEASE BUFFER
                          0C     BA  0038   200 	POPR	#^M<R2,R3>
                                 05  003A   201 	RSB
RM1RELBLK       RELEASE BUFFER FOR SEQ. ORG.                     21-AUG-1978 21:47:28   VAX-11 MACRO X0.3-11               Page   6
016             RM$RELBLK1  -  ROUTINE TO RELEASE BLOCK, REWRIT                                                                  (1)

                                     003B   203 ;++
                                     003B   204 ;  FUNCTIONAL DESCRIPTION:
                                     003B   205 ;
                                     003B   206 ;  THIS SUBROUTINE EXTENDS A SEQUENTIAL DISK FILE.
                                     003B   207 ;  THE # OF BLOCKS FOR THE EXTEND IS =
                                     003B   208 ;  MAX (REQUIRED # BLOCKS, VOLUME DEFAULT, MIN (20*BDB$W_NUMB/512, 256)).
                                     003B   209 ;  IF THIS MANY BLOCKS ARE NOT AVAILABLE ONLY THE MINIMUM REQUIRED ARE ALLOCATED.
                                     003B   210 ;
                                     003B   211 ;  CALLING SEQUENCE:
                                     003B   212 ;	
                                     003B   213 ;	BSBW	RM$AUTOEXTEND
                                     003B   214 ;
                                     003B   215 ;  INPUT PARAMETERS:
                                     003B   216 ;
                                     003B   217 ;	R11		IMPURE AREA ADDRESS
                                     003B   218 ;	R10		IFAB ADDRESS
                                     003B   219 ;	R9		IRAB ADDRESS
                                     003B   220 ;	R8		RAB ADDRESS
                                     003B   221 ;	R4		BDB ADDRESS
                                     003B   222 ;	R2		MINIMUM # OF BLOCKS TO EXTEND FILE
                                     003B   223 ;	BDB$W_NUMB	NUMBER OF BYTES FOR XFER
                                     003B   224 ;
                                     003B   225 ;  OUTPUT PARAMETERS:
                                     003B   226 ;
                                     003B   227 ;	R0		STATUS CODE
                                     003B   228 ;	R1,R3,AP	DESTROYED
                                     003B   229 ;--
                                     003B   230 RM$AUTOEXTEND::
                          34     BB  003B   231 	PUSHR	#^M<R2,R4,R5>		; SAVE REGS
                                     003D   232 ;
                                     003D   233 ; BUILD FIB FOR EXTEND
                                     003D   234 ;
            52            20     D0  003D   235 	MOVL	#FIB$C_EXTDATA,R2	; SIZE OF FIB
            51            5A     D0  0040   236 	MOVL	R10,R1			; SPACE HEADER ADDR
                          FFBA'  30  0043   237 	BSBW	RM$GETSPC		; ALLOCATE FIB
            67            50     E9  0046   238 	BLBC	R0,ERRXIT
         18 A1            6E     D0  0049   239 	MOVL	(SP),FIB$L_EXSZ(R1)	; SET # BLOCKS REQUIRED
                       1A A1     B5  004D   240 	TSTW	FIB$L_EXSZ+2(R1)	; HI-ORDER EXTEND SIZE ZERO?
                          0B     12  0050   241 	BNEQ	30$			; BRANCH IF NOT
         3A AA            6E     B1  0052   242 	CMPW	(SP),IFB$W_RTDEQ(R10)	; EXTEND SIZE < DEFAULT?
                          05     1E  0056   243 	BGEQU	30$			; BRANCH IF NOT
         18 A1         3A AA     B0  0058   244 	MOVW	IFB$W_RTDEQ(R10),FIB$L_EXSZ(R1)	; YES - USE DEFAULT
         16 A1         80 8F     90  005D   245 30$:	MOVB	#FIB$M_EXTEND,FIB$W_EXCTL(R1) ; SAY IT'S AN EXTEND
                       3A AA     B5  0062   246 	TSTW	IFB$W_RTDEQ(R10)	; ZERO DEFAULT EXTEND SIZE?
                          2A     12  0065   247 	BNEQ	DOXTND			; BRANCH IF NOT
                                     0067   248 ;
                                     0067   249 ;  THIS IS AN AUTO EXTEND WITH DEQ=0.
                                     0067   250 ;  COMPUTE THE NUMBER OF BLOCKS TO EXTEND = MAX(REQUIRED,MIN(20*BUFSIZ,256))
                                     0067   251 ;
         16 A1            08     88  0067   252 	BISB2	#FIB$M_ALDEF,FIB$W_EXCTL(R1) ; FLAG USE OF VOLUME DEFAULT
            54         04 AE     D0  006B   253 	MOVL	4(SP),R4		; RESTORE BDB ADDRESS
            07            09     EF  006F   254 	EXTZV	#9,#7,BDB$W_NUMB(R4),R0	; GET # OF BLOCKS TO XFER
            50         10 A4         0072       
            50            14     A4  0075   255 	MULW2	#20,R0			; TIMES 20
       0100 8F            50     B1  0078   256 	CMPW	R0,#256			; > MAX. DEFAULT EXTEND SIZE?
                          05     15  007D   257 	BLEQ	33$			; BRANCH IF NOT
            50       0100 8F     B0  007F   258 	MOVW	#256,R0			; YES - JUST EXTEND 256 BLOCKS
RM1RELBLK       RELEASE BUFFER FOR SEQ. ORG.                     21-AUG-1978 21:47:28   VAX-11 MACRO X0.3-11               Page   7
016             RM$RELBLK1  -  ROUTINE TO RELEASE BLOCK, REWRIT                                                                  (1)

            6E            50     D1  0084   259 33$:	CMPL	R0,(SP)			; > REQUIRED EXTEND SIZE?
                          08     1B  0087   260 	BLEQU	36$			; BRANCH IF NOT
         18 A1            50     B0  0089   261 	MOVW	R0,FIB$L_EXSZ(R1)	; USE LARGER DEFAULT EXTEND SIZE
                                     008D   262 	SSB	#IFB$V_TEF,(R10)	; AND SAY USED SO THAT WE TRUNCATE
            6A            36     E2  008D       		BBSS	#IFB$V_TEF,(R10),30000$
                          00         0090       
                                     0091       30000$:
                                     0091   263 					; AT EOF ON CLOSE
                                     0091   264 36$:
                                     0091   265 ;
                                     0091   266 ; BUILD THE FIB DESCRIPTOR
                                     0091   267 ;
                          51     DD  0091   268 DOXTND:	PUSHL	R1			; ADDR OF FIB
                          20     DD  0093   269 	PUSHL	#FIB$C_EXTDATA		; LENGTH OF FIB
                                     0095   270 ;
                                     0095   271 ; DO THE EXTEND
                                     0095   272 ;
                          FF68'  30  0095   273 	BSBW	RM$FCPEXTEND		; & DO EXTEND
            53            5A     D0  0098   274 	MOVL	R10,R3			; GET SET FOR RM$RETSPC
                          14     BA  009B   275 	POPR	#^M<R2,R4>		; RESTORE FIB LENGTH (R2) AND ADDR (R4)
            13            50     E9  009D   276 	BLBC	R0,ERREXT
RM1RELBLK       RELEASE BUFFER FOR SEQ. ORG.                     21-AUG-1978 21:47:28   VAX-11 MACRO X0.3-11               Page   8
016             RM$RELBLK1  -  ROUTINE TO RELEASE BLOCK, REWRIT                                                                  (1)

                                     00A0   278 ;
                                     00A0   279 ; EXTEND COMPLETE.
                                     00A0   280 ; UPDATE IFAB HI BLOCK FIELD, DEALLOCATE THE FIB, AND RETURN
                                     00A0   281 ;
         1C A4         18 A4     C1  00A0   282 	ADDL3	FIB$L_EXSZ(R4),FIB$L_EXVBN(R4),IFB$L_HBK(R10)
                       40 AA         00A5       
                       40 AA     D7  00A7   283 	DECL	IFB$L_HBK(R10)		; GET # OF HIGHEST ALLOCATED BLK
                          FF53'  30  00AA   284 	BSBW	RM$RETSPC		; RETURN THE FIB SPACE
                                     00AD   285 	RMSSUC
            50            01     D0  00AD       		MOVL	#1,R0
                          34     BA  00B0   286 ERRXIT:	POPR	#^M<R2,R4,R5>		; RESTORE REGS
                                 05  00B2   287 	RSB
                                     00B3   288 ;
                                     00B3   289 ; EXTEND FAILED.  IF ATTEMPTED EXTEND WAS FOR MORE THAN MINIMUM REQUIRED AMOUNT,
                                     00B3   290 ; RETRY EXTEND FOR ONLY THE MINIMUM REQUIRED AMOUNT, OTHERWISE
                                     00B3   291 ; MAP ERROR, RELEASE BUFFER & RETURN
                                     00B3   292 ;
                                     00B3   293 ERREXT:	$PSECT_BR	L$RMS1
                          FF4A'  31  00B3       		BRW	L$RMS10
                                     00B6       		.SAVE
                                 00000000       		.PSECT	L$RMS1,GBL,NOWRT
                                     0000       L$RMS10:
         16 A4            03     E4  0000   294 	BBSC	#FIB$V_ALDEF,FIB$W_EXCTL(R4),10$	; BRANCH IF FIRST TRY
                          10         0004       
                                     0005   295 	RMSERR	EXT,R1			; DEFAULT ERROR CODE
            51       C022 8F     3C  0005       		MOVZWL	#<RMS$_EXT&^XFFFF>,R1
                          FFF3'  30  000A   296 	BSBW	RM$MAPERR		; MAP THE ERROR CODE
                          50     DD  000D   297 	PUSHL	R0			; SAVE ERROR CODE
                          FFEE'  30  000F   298 	BSBW	RM$RETSPC		; RETURN FIB BUFFER
                          35     BA  0012   299 	POPR	#^M<R0,R2,R4,R5>	; RESTORE REGS
                                 05  0014   300 	RSB
                                     0015   301 ;
                                     0015   302 ;  RETRY EXTEND FOR MINIMUM REQUIRED AMOUNT
                                     0015   303 ;
            51            54     D0  0015   304 10$:	MOVL	R4,R1			; RESTORE FIB ADDRESS
         18 A1            6E     D0  0018   305 	MOVL	(SP),FIB$L_EXSZ(R1)	; MUST EXTEND THIS AMOUNT
                          0072'  31  001C   306 	BRW	DOXTND			; GO RETRY EXTEND
                                     001F   307 	$PSECT_RESTORE
                                 000000B6       		.RESTORE
                                     00B6   308 	.END
RM1RELBLK       RELEASE BUFFER FOR SEQ. ORG.                     21-AUG-1978 21:47:28   VAX-11 MACRO X0.3-11               Page   9
SYMBOL TABLE                                                                                                                     (1)

$$.PSECT_EP    = 00000001            DEV$M_ODV      = 08000000            FIB$C_MTALEN     0000001C            
$$RMSTEST      = 0000001A            DEV$M_RCK      = 40000000            FIB$C_NEXTVOL  = 00000003            
$$RMS_PBUGCHK  = 00000010            DEV$M_REC      = 00000001            FIB$C_POSEND   = 00000002            
$$RMS_TBUGCHK  = 00000008            DEV$M_RND      = 10000000            FIB$C_REWINDFIL= 00000006            
$$RMS_UMODE    = 00000004            DEV$M_RTM      = 20000000            FIB$C_REWINDVOL= 00000001            
BDB$B_BID        00000008            DEV$M_SDI      = 00000010            FIB$C_RFI      = 00000004            
BDB$B_BLN        00000009            DEV$M_SHR      = 00010000            FIB$C_SPACE    = 00000004            
BDB$B_FLGS       0000000A            DEV$M_SPL      = 00000040            FIB$C_VBN      = 00000003            
BDB$B_POST_CCTL  00000023            DEV$M_SQD      = 00000020            FIB$K_ACCDATA    0000000A            
BDB$B_PRE_CCTL   00000022            DEV$M_SWL      = 02000000            FIB$K_ALCDATA    0000002C            
BDB$B_REL_VBN    00000020            DEV$M_TRM      = 00000004            FIB$K_DIRDATA    00000016            
BDB$B_USECNT     0000000B            DEV$M_WCK      = 80000000            FIB$K_EXTDATA    00000020            
BDB$B_VAL_VBNS   00000021            DEV$V_ALL      = 00000017            FIB$K_LENGTH     0000002C            
BDB$C_BID      = 0000000C            DEV$V_AVL      = 00000012            FIB$K_MTALEN     0000001C            
BDB$C_BLN        00000028            DEV$V_CCL      = 00000001            FIB$L_ACCTL      00000000            
BDB$K_BLN        00000028            DEV$V_DIR      = 00000003            FIB$L_CNTRLVAL   00000018            
BDB$L_ADDR       00000014            DEV$V_DMT      = 00000015            FIB$L_EXSZ       00000018            
BDB$L_BLINK      00000004            DEV$V_ELG      = 00000016            FIB$L_EXVBN      0000001C            
BDB$L_CURBUFADR  00000024            DEV$V_FOD      = 0000000E            FIB$L_LOC_ADDR   00000028            
BDB$L_FLINK      00000000            DEV$V_FOR      = 00000018            FIB$L_WCC        00000010            
BDB$L_IOSB       00000020            DEV$V_GEN      = 00000011            FIB$M_ALCON    = 00000001            
BDB$L_OWN        0000000C            DEV$V_IDV      = 0000001A            FIB$M_ALCONB   = 00000002            
BDB$L_VBN        00000018            DEV$V_MBX      = 00000014            FIB$M_ALDEF    = 00000008            
BDB$L_WAIT       0000001C            DEV$V_MNT      = 00000013            FIB$M_ALLNAM   = 00000020            
BDB$L_WK1        00000020            DEV$V_NET      = 0000000D            FIB$M_ALLTYP   = 00000010            
BDB$M_AST_DCL  = 00000040            DEV$V_ODV      = 0000001B            FIB$M_ALLVER   = 00000008            
BDB$M_DRT      = 00000002            DEV$V_RCK      = 0000001E            FIB$M_CURPOS   = 00000010            
BDB$M_IOP      = 00000004            DEV$V_REC      = 00000000            FIB$M_DLOCK    = 00000002            
BDB$M_LKDINWS  = 00000080            DEV$V_RND      = 0000001C            FIB$M_EXACT    = 00000001            
BDB$M_NOLOCATE = 00000010            DEV$V_RTM      = 0000001D            FIB$M_EXECUTE  = 00010000            
BDB$M_PRM      = 00000008            DEV$V_SDI      = 00000004            FIB$M_EXTEND   = 00000080            
BDB$M_VAL      = 00000001            DEV$V_SHR      = 00000010            FIB$M_FILCON   = 00000004            
BDB$M_WFO      = 00000020            DEV$V_SPL      = 00000006            FIB$M_FINDFID  = 00000800            
BDB$V_AST_DCL  = 00000006            DEV$V_SQD      = 00000005            FIB$M_HIGHVER  = 00008000            
BDB$V_DRT      = 00000001            DEV$V_SWL      = 00000019            FIB$M_LOWVER   = 00004000            
BDB$V_IOP      = 00000002            DEV$V_TRM      = 00000002            FIB$M_MARKBAD  = 00000400            
BDB$V_LKDINWS  = 00000007            DEV$V_WCK      = 0000001F            FIB$M_NEWVER   = 00000200            
BDB$V_NOLOCATE = 00000004            DOXTND           00000091 R     02   FIB$M_NOHDREXT = 00000200            
BDB$V_PRM      = 00000003            ERREXT           000000B3 R     02   FIB$M_NOREAD   = 00000400            
BDB$V_VAL      = 00000000            ERRXIT           000000B0 R     02   FIB$M_NOTRUNC  = 00000800            
BDB$V_WFO      = 00000005            FIB$B_ALALIGN    00000021            FIB$M_NOWRITE  = 00000001            
BDB$W_NUMB       00000010            FIB$B_ALOPTS     00000020            FIB$M_ONCYL    = 00000002            
BDB$W_SIZE       00000012            FIB$B_DID_NMX    0000000F            FIB$M_PRSRV_ATR= 00020000            
BIT...         = 0001C134            FIB$B_DID_RVN    0000000E            FIB$M_READCK   = 00000200            
DEV$M_ALL      = 00800000            FIB$B_FID_NMX    00000009            FIB$M_REWIND   = 00000008            
DEV$M_AVL      = 00040000            FIB$B_FID_RVN    00000008            FIB$M_SEQONLY  = 00000040            
DEV$M_CCL      = 00000002            FIB$B_LOC_NMX    00000027            FIB$M_SPOOL    = 00000010            
DEV$M_DIR      = 00000008            FIB$B_LOC_RVN    00000026            FIB$M_SUPERSEDE= 00000400            
DEV$M_DMT      = 00200000            FIB$B_WSIZE      00000003            FIB$M_TRUNC    = 00000100            
DEV$M_ELG      = 00400000            FIB$C_ACCDATA    0000000A            FIB$M_UPDATE   = 00000040            
DEV$M_FOD      = 00004000            FIB$C_ALCDATA    0000002C            FIB$M_WILD     = 00000100            
DEV$M_FOR      = 01000000            FIB$C_CYL      = 00000001            FIB$M_WRITE    = 00000100            
DEV$M_GEN      = 00020000            FIB$C_DIRDATA    00000016            FIB$M_WRITECK  = 00000020            
DEV$M_IDV      = 04000000            FIB$C_EXTDATA    00000020            FIB$V_ALCON    = 00000000            
DEV$M_MBX      = 00100000            FIB$C_ILLEGAL  = 00000005            FIB$V_ALCONB   = 00000001            
DEV$M_MNT      = 00080000            FIB$C_LBN      = 00000002            FIB$V_ALDEF    = 00000003            
DEV$M_NET      = 00002000            FIB$C_LENGTH     0000002C            FIB$V_ALLNAM   = 00000005            
RM1RELBLK       RELEASE BUFFER FOR SEQ. ORG.                     21-AUG-1978 21:47:28   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (1)

FIB$V_ALLTYP   = 00000004            IFB$B_NUM_KEYS   0000005A            IFB$V_ASYNC    = 00000023            
FIB$V_ALLVER   = 00000003            IFB$B_ORGCASE    00000023            IFB$V_ASYNCWAIT= 00000024            
FIB$V_CURPOS   = 00000004            IFB$B_RAT        0000003D            IFB$V_BIO      = 00000005            
FIB$V_DLOCK    = 00000001            IFB$B_RFMORG     0000003C            IFB$V_BRO      = 00000006            
FIB$V_EXACT    = 00000000            IFB$B_UBUFSZ     0000005B            IFB$V_BUSY     = 00000020            
FIB$V_EXECUTE  = 00000010            IFB$C_BID      = 0000000B            IFB$V_CREATE   = 00000032            
FIB$V_EXTEND   = 00000007            IFB$C_BLN        00000060            IFB$V_DAP      = 0000003E            
FIB$V_FILCON   = 00000002            IFB$C_BLN_IDX    00000060            IFB$V_DAP_OPEN = 0000003D            
FIB$V_FINDFID  = 0000000B            IFB$C_BLN_REL    00000060            IFB$V_DEL      = 00000002            
FIB$V_HIGHVER  = 0000000F            IFB$C_BLN_SEQ    0000005C            IFB$V_DFW      = 0000002C            
FIB$V_LOWVER   = 0000000E            IFB$C_DIR      = 00000003            IFB$V_DLT      = 0000002B            
FIB$V_MARKBAD  = 0000000A            IFB$C_FHAEND     00000050            IFB$V_DMO      = 00000028            
FIB$V_NEWVER   = 00000009            IFB$C_IDX      = 00000002            IFB$V_EOF      = 00000021            
FIB$V_NOHDREXT = 00000009            IFB$C_MAXORG   = 00000002            IFB$V_EXE      = 00000007            
FIB$V_NOREAD   = 0000000A            IFB$C_REL      = 00000001            IFB$V_GET      = 00000001            
FIB$V_NOTRUNC  = 0000000B            IFB$C_SEQ      = 00000000            IFB$V_MSE      = 00000031            
FIB$V_NOWRITE  = 00000000            IFB$K_BLN        00000060            IFB$V_NORECLK  = 00000033            
FIB$V_ONCYL    = 00000001            IFB$K_BLN_IDX    00000060            IFB$V_NSP      = 0000003F            
FIB$V_PRSRV_ATR= 00000011            IFB$K_BLN_REL    00000060            IFB$V_NWA      = 0000003C            
FIB$V_READCK   = 00000009            IFB$K_BLN_SEQ    0000005C            IFB$V_ORG      = 00000004            
FIB$V_REWIND   = 00000003            IFB$K_FHAEND     00000050            IFB$V_PPF_IMAGE= 00000022            
FIB$V_SEQONLY  = 00000006            IFB$L_ARGLST     00000018            IFB$V_PPF_INPUT= 0000002E            
FIB$V_SPOOL    = 00000004            IFB$L_ASBADDR    00000014            IFB$V_PUT      = 00000000            
FIB$V_SUPERSEDE= 0000000A            IFB$L_AS_DEV     00000054            IFB$V_RFM      = 00000000            
FIB$V_TRUNC    = 00000008            IFB$L_BDB_BLNK   00000034            IFB$V_RWC      = 00000027            
FIB$V_UPDATE   = 00000006            IFB$L_BDB_FLNK   00000030            IFB$V_RW_ATTR  = 00000034            
FIB$V_WILD     = 00000008            IFB$L_BKPBITS    00000004            IFB$V_SCF      = 0000002A            
FIB$V_WRITE    = 00000008            IFB$L_BWB        0000000C            IFB$V_SPL      = 00000029            
FIB$V_WRITECK  = 00000005            IFB$L_DVBN       00000058            IFB$V_SQO      = 0000002D            
FIB$W_ALLOC      00000022            IFB$L_EBK        00000044            IFB$V_TEF      = 00000036            
FIB$W_CNTRLFUNC  00000016            IFB$L_FRB_PTR    00000028            IFB$V_TMP      = 00000035            
FIB$W_DID        0000000A            IFB$L_FWA_BDB    00000050            IFB$V_TRN      = 00000004            
FIB$W_DID_NUM    0000000A            IFB$L_HBK        00000040            IFB$V_UPD      = 00000003            
FIB$W_DID_RVN    0000000E            IFB$L_IDX_PTR    00000054            IFB$V_WRTACC   = 00000030            
FIB$W_DID_SEQ    0000000C            IFB$L_IOS        0000000C            IFB$W_ASDEVBSIZ  0000005A            
FIB$W_EXCTL      00000016            IFB$L_IOS4       00000010            IFB$W_BKS_BYTES  0000005C            
FIB$W_FID        00000004            IFB$L_IRAB_LNK   0000001C            IFB$W_BKS_RECS   0000005E            
FIB$W_FID_NUM    00000004            IFB$L_LAST_FAB   00000024            IFB$W_CHNL       00000020            
FIB$W_FID_RVN    00000008            IFB$L_LOCK_BDB   00000050            IFB$W_DEQ        0000004E            
FIB$W_FID_SEQ    00000006            IFB$L_MRN        00000054            IFB$W_DEVBUFSIZ  00000038            
FIB$W_LOC_FID    00000022            IFB$L_NRP_LNK    00000050            IFB$W_EBK0       00000044            
FIB$W_LOC_NUM    00000022            IFB$L_NWA_PTR    00000028            IFB$W_EBK2       00000046            
FIB$W_LOC_RVN    00000026            IFB$L_PRIM_DEV   00000000            IFB$W_FFB        00000048            
FIB$W_LOC_SEQ    00000024            IFB$L_RLB_LNK    0000002C            IFB$W_IOS2       0000000E            
FIB$W_NMCTL      00000014            IFB$L_RNS_LEN    00000050            IFB$W_LRL        0000003E            
GBL...         = 00000000            IFB$M_BIO      = 00000020            IFB$W_MRS        0000004C            
IFB$B_AMAX       00000059            IFB$M_BRO      = 00000040            IFB$W_RTDEQ      0000003A            
IFB$B_AVBN       00000058            IFB$M_DEL      = 00000004            IRB$B_BCNT       00000040            
IFB$B_BID        00000008            IFB$M_EXE      = 00000080            IRB$B_BID        00000008            
IFB$B_BKS        0000004A            IFB$M_GET      = 00000002            IRB$B_BLN        00000009            
IFB$B_BLN        00000009            IFB$M_PUT      = 00000001            IRB$B_EFN        0000000B            
IFB$B_EFN        0000000B            IFB$M_TRN      = 00000010            IRB$B_KEYSZ      00000051            
IFB$B_EXTRABUF   0000005D            IFB$M_UPD      = 00000008            IRB$B_MBC        00000041            
IFB$B_FAC        00000022            IFB$S_ORG      = 00000004            IRB$B_MODE       0000000A            
IFB$B_FSZ        0000004B            IFB$S_RFM      = 00000004            IRB$B_NRP_ID     00000030            
IFB$B_KBUFSZ     0000005C            IFB$V_ACCESSED = 00000025            IRB$B_NRP_KREF   00000031            
IFB$B_MODE       0000000A            IFB$V_ANSI_D   = 00000026            IRB$B_NVBNS      00000048            
RM1RELBLK       RELEASE BUFFER FOR SEQ. ORG.                     21-AUG-1978 21:47:28   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (1)

IRB$B_POST_CCTL  00000045            IRB$V_PPF_EOF  = 0000002E            RMS$_BUG_XX3   = 00018454            
IRB$B_PPF_ISI    0000003E            IRB$V_PPF_FNDSV= 00000030            RMS$_BUG_XX4   = 0001845C            
IRB$B_PRE_CCTL   00000044            IRB$V_PPF_IMAGE= 00000022            RMS$_BUG_XX5   = 00018464            
IRB$B_RFA_ID     00000058            IRB$V_PPF_SKIP = 0000002F            RMS$_BUG_XX6   = 0001846C            
IRB$B_RP_ID      00000038            IRB$V_PUTS_LAST= 00000026            RMS$_BUG_XX7   = 00018474            
IRB$B_RP_KREF    00000039            IRB$V_RAHWBH   = 0000002A            RMS$_BUG_XX8   = 0001847C            
IRB$B_RRV_ID     00000050            IRB$V_SKIP_NEXT= 0000002B            RMS$_BUG_XX9   = 00018484            
IRB$B_SRCHFLAGS  00000043            IRB$V_SRCHGT   = 00000001            RMS$_CAA       = 0001848C            
IRB$B_STOPLEVEL  00000042            IRB$V_UNLOCK_RP= 0000002D            RMS$_CCF       = 0001C0DC            
IRB$C_BID      = 0000000A            IRB$V_WRITE    = 00000029            RMS$_CCR       = 00018494            
IRB$C_BLN_IDX    0000006C            IRB$W_CSIZ       00000042            RMS$_CDA       = 0001C0E4            
IRB$C_BLN_REL    00000048            IRB$W_DUP_POS    00000032            RMS$_CHG       = 0001849C            
IRB$C_BLN_SEQ    0000004C            IRB$W_IOS2       0000000E            RMS$_CHK       = 000184A4            
IRB$K_BLN_IDX    0000006C            IRB$W_NRP_OFF    00000030            RMS$_CHN       = 0001C0EC            
IRB$K_BLN_REL    00000048            IRB$W_OWN_ID     0000003C            RMS$_COD       = 000184AC            
IRB$K_BLN_SEQ    0000004C            IRB$W_OWN_ISI    0000003E            RMS$_CONTROLC  = 00010651            
IRB$L_ARGLST     00000018            IRB$W_ROVHDSZ    00000044            RMS$_CONTROLO  = 00010609            
IRB$L_ASBADDR    00000014            IRB$W_RP_OFF     00000038            RMS$_CONTROLY  = 00010611            
IRB$L_BKPBITS    00000004            IRB$W_RTOTLSZ    00000046            RMS$_CRE       = 0001C00A            
IRB$L_BWB        0000000C            IRB$W_SAVE_POS   00000052            RMS$_CREATED   = 00010619            
IRB$L_CURBDB     00000020            L$RMS10          00000000 R     04   RMS$_CUR       = 000184B4            
IRB$L_CURVBN     00000030            PIO$GL_FMLH      ********   X   02   RMS$_DAC       = 0001C012            
IRB$L_IFAB_LNK   00000000            RELEASE          00000032 R     02   RMS$_DAN       = 000184BC            
IRB$L_IOS        0000000C            RLS$M_KEEP_ACC = 00000008            RMS$_DEL       = 00018262            
IRB$L_IOS4       00000010            RLS$M_KEEP_LOCK= 00000004            RMS$_DEV       = 000184C4            
IRB$L_IRAB_LNK   0000001C            RLS$M_RETURN   = 00000001            RMS$_DIR       = 000184CC            
IRB$L_KEYBUF     00000048            RLS$M_WRT_THRU = 00000002            RMS$_DME       = 000184D4            
IRB$L_LAST_RAB   00000024            RLS$V_KEEP_ACC = 00000003            RMS$_DNA       = 000184DC            
IRB$L_LOCK_BDB   0000005C            RLS$V_KEEP_LOCK= 00000002            RMS$_DNF       = 0001C04A            
IRB$L_NRP        0000002C            RLS$V_RETURN   = 00000000            RMS$_DNR       = 00018272            
IRB$L_NRP_OFF    00000030            RLS$V_WRT_THRU = 00000001            RMS$_DPE       = 0001C03A            
IRB$L_NRP_VBN    0000002C            RM$AUTOEXTEND    0000003B RG    02   RMS$_DTP       = 000184E4            
IRB$L_NXTBDB     00000028            RM$FCPEXTEND     ********   X   02   RMS$_DUP       = 000184EC            
IRB$L_OWNER_ID   0000003C            RM$GETSPC        ********   X   02   RMS$_DVI       = 000184F4            
IRB$L_RFA_VBN    00000054            RM$MAPERR        ********   X   04   RMS$_ENT       = 0001C01A            
IRB$L_RLB_ADDR   00000044            RM$RELBLK1       00000000 RG    02   RMS$_ENV       = 00018724            
IRB$L_RP         00000034            RM$RELEASE       ********   X   02   RMS$_EOF       = 0001827A            
IRB$L_RP_OFF     00000038            RM$RETSPC        ********   X   02   RMS$_ESA       = 000184FC            
IRB$L_RP_VBN     00000034            RMS$V_STVSTATUS= 0000000E            RMS$_ESL       = 00018714            
IRB$L_RRV_VBN    0000004C            RMS$_ABO       = 000183EC            RMS$_ESS       = 00018504            
IRB$L_TEMP0      00000044            RMS$_ACC       = 0001C002            RMS$_EXP       = 000182C2            
IRB$L_TEMP1      00000048            RMS$_ACT       = 0001825A            RMS$_EXT       = 0001C022            
IRB$V_ASYNC    = 00000023            RMS$_AID       = 000183F4            RMS$_FAB       = 0001850C            
IRB$V_ASYNCWAIT= 00000024            RMS$_ALN       = 000183FC            RMS$_FAC       = 00018514            
IRB$V_BIO_LAST = 00000027            RMS$_ALQ       = 00018404            RMS$_FEX       = 00018282            
IRB$V_BRO_SW   = 00000028            RMS$_ANI       = 0001840C            RMS$_FLG       = 0001851C            
IRB$V_BUSY     = 00000020            RMS$_AOP       = 00018414            RMS$_FLK       = 0001828A            
IRB$V_DAP_CONN = 0000003E            RMS$_ATR       = 0001C0CC            RMS$_FNA       = 00018524            
IRB$V_DAP_FMODE= 0000003F            RMS$_ATW       = 0001C0D4            RMS$_FND       = 0001C02A            
IRB$V_DUP      = 0000002C            RMS$_BKS       = 0001841C            RMS$_FNF       = 00018292            
IRB$V_EOF      = 00000021            RMS$_BKZ       = 00018424            RMS$_FNM       = 0001852C            
IRB$V_FIND     = 00000029            RMS$_BLN       = 0001842C            RMS$_FOP       = 0001853C            
IRB$V_FIND_LAST= 00000025            RMS$_BOF       = 00018198            RMS$_FSZ       = 00018534            
IRB$V_IDX_ERR  = 00000031            RMS$_BUG       = 00018434            RMS$_FUL       = 00018544            
IRB$V_LOCKABOVE= 00000002            RMS$_BUG_DAP   = 00018444            RMS$_IAL       = 0001854C            
IRB$V_NEW_IDX  = 00000003            RMS$_BUG_DDI   = 0001843C            RMS$_IAN       = 00018554            
IRB$V_POSINSERT= 00000000            RMS$_BUG_XX2   = 0001844C            RMS$_IBF       = 00018754            
RM1RELBLK       RELEASE BUFFER FOR SEQ. ORG.                     21-AUG-1978 21:47:28   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (1)

RMS$_IDX       = 0001855C            RMS$_RMV       = 0001C0FC            
RMS$_IFA       = 0001C124            RMS$_RNF       = 000182B2            
RMS$_IFI       = 00018564            RMS$_RNL       = 000181A0            
RMS$_IMX       = 0001856C            RMS$_ROP       = 0001867C            
RMS$_IOP       = 00018574            RMS$_RPL       = 0001C104            
RMS$_IRC       = 0001857C            RMS$_RRV       = 00018684            
RMS$_ISI       = 00018584            RMS$_RSA       = 000182DA            
RMS$_KBF       = 0001858C            RMS$_RSL       = 0001873C            
RMS$_KEY       = 00018594            RMS$_RSS       = 00018694            
RMS$_KFF       = 00018031            RMS$_RST       = 0001869C            
RMS$_KRF       = 0001859C            RMS$_RSZ       = 000186A4            
RMS$_KSZ       = 000185A4            RMS$_RTB       = 000181A8            
RMS$_LAN       = 000185AC            RMS$_SEQ       = 000186AC            
RMS$_LBL       = 000185B4            RMS$_SHR       = 000186B4            
RMS$_LNE       = 000185BC            RMS$_SIZ       = 000186BC            
RMS$_LOC       = 000185C4            RMS$_SPL       = 0001C042            
RMS$_MBC       = 00018734            RMS$_SQO       = 000186C4            
RMS$_MKD       = 0001C032            RMS$_STALL     = 00018001            
RMS$_MRN       = 000185CC            RMS$_STK       = 000186CC            
RMS$_MRS       = 000185D4            RMS$_SUC       = 00010001            
RMS$_NAM       = 000185DC            RMS$_SUP       = 000182D2            
RMS$_NEF       = 000185E4            RMS$_SUPERSEDE = 00010631            
RMS$_NET       = 0001874C            RMS$_SYN       = 000186D4            
RMS$_NID       = 000185EC            RMS$_SYS       = 0001C10C            
RMS$_NMF       = 000182CA            RMS$_TEMP1     = 0001826A            
RMS$_NOD       = 000185F4            RMS$_TEMP2     = 0001868C            
RMS$_NORMAL    = 00010001            RMS$_TMO       = 000181B0            
RMS$_NPK       = 000185FC            RMS$_TRE       = 000186DC            
RMS$_OK_ALK    = 00018039            RMS$_TYP       = 000186E4            
RMS$_OK_DEL    = 00018041            RMS$_UBF       = 000186EC            
RMS$_OK_DUP    = 00018011            RMS$_USZ       = 000186F4            
RMS$_OK_IDX    = 00018019            RMS$_VER       = 000186FC            
RMS$_OK_LIM    = 00018051            RMS$_VOL       = 00018704            
RMS$_OK_RLK    = 00018021            RMS$_WBE       = 0001C12C            
RMS$_OK_RNF    = 00018049            RMS$_WER       = 0001C114            
RMS$_OK_RRV    = 00018029            RMS$_WLD       = 00018744            
RMS$_ORD       = 00018604            RMS$_WLK       = 000182BA            
RMS$_ORG       = 0001860C            RMS$_WPL       = 0001C11C            
RMS$_PBF       = 00018614            RMS$_WSF       = 0001871C            
RMS$_PENDING   = 00018009            RMS$_XAB       = 0001870C            
RMS$_PLG       = 0001861C            TPT$L_RELBLK1    ********   X   02   
RMS$_PLV       = 0001872C            
RMS$_POS       = 00018624            
RMS$_PRM       = 0001862C            
RMS$_PRV       = 0001829A            
RMS$_QUO       = 00018634            
RMS$_RAB       = 0001863C            
RMS$_RAC       = 00018644            
RMS$_RAT       = 0001864C            
RMS$_RBF       = 00018654            
RMS$_RER       = 0001C0F4            
RMS$_REX       = 000182A2            
RMS$_RFA       = 0001865C            
RMS$_RFM       = 00018664            
RMS$_RHB       = 0001866C            
RMS$_RLF       = 00018674            
RMS$_RLK       = 000182AA            
RM1RELBLK       RELEASE BUFFER FOR SEQ. ORG.                     21-AUG-1978 21:47:28   VAX-11 MACRO X0.3-11               Page  13
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$RMS1            000000B6      02     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  
$ABS$            0000006C      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
L$RMS1           0000001F      04     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
9334. BYTES LEFT IN FREE MEMORY POOL.
2862. BYTES OF RECLAIMED MEMORY.
OBJ$:RM1RELBLK,LIS$:RM1RELBLK/-SP=EXECML$/ML,LIB$:R/ML,SRC$:RM1RELBLK
28 MLB DIR RDS - 1023 GETS TO DEFINE 26 MACROS. 75 INTER. FILE WRITES. 
