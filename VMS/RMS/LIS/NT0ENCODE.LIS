NT0ENCODE       DAP MESSAGE ENCODE ROUTINES                      21-AUG-1978 22:21:50   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      38  DECLARATIONS
   (3)      58  NT$CVT_BIN2EXT - CONVERT BINARY TO EXTENSIBLE
   (4)     109  NT$CVT_BIN2IMG - CONVERT BINARY TO IMAGE
NT0ENCODE       DAP MESSAGE ENCODE ROUTINES                      21-AUG-1978 22:21:50   VAX-11 MACRO X0.3-11               Page   1
002                                                                                                                              (1)

                                     0000     1 	$BEGIN	NT0ENCODE,002,NF$NETWORK,<DAP MESSAGE ENCODE ROUTINES>
                                     0000     2 
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ;			  COPYRIGHT (c) 1977, 1978 BY
                                     0000     6 ;	      DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
                                     0000     9 ; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
                                     0000    10 ; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
                                     0000    11 ; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
                                     0000    12 ; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
                                     0000    13 ; TRANSFERRED.
                                     0000    14 ;
                                     0000    15 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
                                     0000    16 ; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
                                     0000    17 ; CORPORATION.
                                     0000    18 ;
                                     0000    19 ; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
                                     0000    20 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
                                     0000    21 ;
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY: RMS32
                                     0000    25 ;
                                     0000    26 ; ABSTRACT:
                                     0000    27 ;	THIS MODULE CONTAINS SUPPORT ROUTINES USED TO ENCODE DAP
                                     0000    28 ;	MESSAGES.
                                     0000    29 ;
                                     0000    30 ; ENVIRONMENT: VAX/VMS
                                     0000    31 ;
                                     0000    32 ; AUTHOR: JAMES A. KRYCKA,	CREATION DATE: 16-JUN-77
                                     0000    33 ;
                                     0000    34 ; MODIFICATIONS:
                                     0000    35 ;
                                     0000    36 ;--
NT0ENCODE       DAP MESSAGE ENCODE ROUTINES                      21-AUG-1978 22:21:50   VAX-11 MACRO X0.3-11               Page   2
002             DECLARATIONS                                                                                                     (2)

                                     0000    38 	.SBTTL	DECLARATIONS
                                     0000    39 
                                     0000    40 ;
                                     0000    41 ; INCLUDE FILES:
                                     0000    42 ;
                                     0000    43 ;	NONE
                                     0000    44 	.LIST	MEB
                                     0000    45 ;
                                     0000    46 ; MACROS:
                                     0000    47 ;
                                     0000    48 ;	NONE
                                     0000    49 ;
                                     0000    50 ; EQUATED SYMBOLS:
                                     0000    51 ;
                                     0000    52 ;	NONE
                                     0000    53 ;
                                     0000    54 ; OWN STORAGE:
                                     0000    55 ;
                                     0000    56 ;	NONE
NT0ENCODE       DAP MESSAGE ENCODE ROUTINES                      21-AUG-1978 22:21:50   VAX-11 MACRO X0.3-11               Page   3
002             NT$CVT_BIN2EXT - CONVERT BINARY TO EXTENSIBLE                                                                    (3)

                                     0000    58 	.SBTTL	NT$CVT_BIN2EXT - CONVERT BINARY TO EXTENSIBLE
                                     0000    59 
                                     0000    60 ;++
                                     0000    61 ; FUNCTIONAL DESCRIPTION:
                                     0000    62 ;
                                     0000    63 ;	NT$CVT_BIN2EXT CONVERTS AN UNSIGNED LONGWORD VALUE TO AN EXTENSIBLE
                                     0000    64 ;	FIELD FORMAT AND STORES THE RESULT IN A MINIMAL NUMBER OF BYTES.
                                     0000    65 ;
                                     0000    66 ; CALLING SEQUENCE:
                                     0000    67 ;
                                     0000    68 ;	BSBW	NT$CVT_BIN2EXT
                                     0000    69 ;
                                     0000    70 ; INPUT PARAMETERS:
                                     0000    71 ;
                                     0000    72 ;	R1	THE BINARY VALUE TO CONVERT AND STORE
                                     0000    73 ;	R5	THE ADDRESS OF NEXT BYTE IN BUFFER TO STORE THE RESULT
                                     0000    74 ;
                                     0000    75 ; IMPLICIT INPUTS:
                                     0000    76 ;
                                     0000    77 ;	NONE
                                     0000    78 ;
                                     0000    79 ; OUTPUT PARAMETERS:
                                     0000    80 ;
                                     0000    81 ;	R1	ZEROED
                                     0000    82 ;	R5	ADDRESS OF LAST BYTE OF RESULT + 1
                                     0000    83 ;
                                     0000    84 ; IMPLICIT OUTPUTS:
                                     0000    85 ;
                                     0000    86 ;	NONE
                                     0000    87 ;
                                     0000    88 ; COMPLETION CODES:
                                     0000    89 ;
                                     0000    90 ;	NONE
                                     0000    91 ;
                                     0000    92 ; SIDE EFFECTS:
                                     0000    93 ;
                                     0000    94 ;	NONE
                                     0000    95 ;
                                     0000    96 ;--
                                     0000    97 
                                     0000    98 NT$CVT_BIN2EXT::			; CONTROL POINT
            85            51     90  0000    99 	MOVB	R1,(R5)+		; COPY 7 BITS TO DST BYTE--THE HIGH
                                     0003   100 					;  BIT WILL BE CORRECTED LATER
            51         7F 8F     8A  0003   101 	BICB2	#^X7F,R1		; DISCARD SRC BITS JUST COPIED
            51         F9 8F     9C  0007   102 	ROTL	#-7,R1,R1		; MOVE NEXT 7 BITS INTO PLACE
                          51         000B       
                          07     13  000C   103 	BEQL	10$			; ALL DONE IF REMAINING SRC BITS
                                     000E   104 					;  ARE ZERO
         FF A5         80 8F     88  000E   105 	BISB2	#^X80,-1(R5)		; SET EXTENSIBLE BIT IN DST BYTE
                          EB     11  0013   106 	BRB	NT$CVT_BIN2EXT		;  AND PROCESS NEXT BYTE
                                 05  0015   107 10$:	RSB				; EXIT
NT0ENCODE       DAP MESSAGE ENCODE ROUTINES                      21-AUG-1978 22:21:50   VAX-11 MACRO X0.3-11               Page   4
002             NT$CVT_BIN2IMG - CONVERT BINARY TO IMAGE                                                                         (4)

                                     0016   109 	.SBTTL	NT$CVT_BIN2IMG - CONVERT BINARY TO IMAGE
                                     0016   110 
                                     0016   111 ;++
                                     0016   112 ; FUNCTIONAL DESCRIPTION:
                                     0016   113 ;
                                     0016   114 ;	NT$CVT_BIN2IMG CONVERTS AN UNSIGNED LONGWORD VALUE TO AN IMAGE
                                     0016   115 ;	FIELD FORMAT (COUNTED BINARY STRING) AND STORES THE RESULT IN A
                                     0016   116 ;	MINIMAL NUMBER OF BYTES.
                                     0016   117 ;
                                     0016   118 ; CALLING SEQUENCE:
                                     0016   119 ;
                                     0016   120 ;	BSBW	NT$CVT_BIN2IMG
                                     0016   121 ;
                                     0016   122 ; INPUT PARAMETERS:
                                     0016   123 ;
                                     0016   124 ;	R1	THE BINARY VALUE TO CONVERT AND STORE
                                     0016   125 ;	R5	THE ADDRESS OF NEXT BYTE IN BUFFER TO STORE THE RESULT
                                     0016   126 ;
                                     0016   127 ; IMPLICIT INPUTS:
                                     0016   128 ;
                                     0016   129 ;	NONE
                                     0016   130 ;
                                     0016   131 ; OUTPUT PARAMETERS:
                                     0016   132 ;
                                     0016   133 ;	R1	ZEROED
                                     0016   134 ;	R2	DESTROYED
                                     0016   135 ;	R5	ADDRESS OF LAST BYTE OF RESULT + 1
                                     0016   136 ;
                                     0016   137 ; IMPLICIT OUTPUTS:
                                     0016   138 ;
                                     0016   139 ;	NONE
                                     0016   140 ;
                                     0016   141 ; COMPLETION CODES:
                                     0016   142 ;
                                     0016   143 ;	NONE
                                     0016   144 ;
                                     0016   145 ; SIDE EFFECTS:
                                     0016   146 ;
                                     0016   147 ;	NONE
                                     0016   148 ;
                                     0016   149 ;--
                                     0016   150 
                                     0016   151 NT$CVT_BIN2IMG::			; CONTROL POINT
            52            55     D0  0016   152 	MOVL	R5,R2			; SAVE ADDRESS OF DST COUNT BYTE
                          85     94  0019   153 	CLRB	(R5)+			; ZERO DST COUNT BYTE
                          51     D5  001B   154 	TSTL	R1			; TEST VALUE TO CONVERT
                          0E     13  001D   155 	BEQL	20$			; ALL DONE IF VALUE IS ZERO
            85            51     90  001F   156 10$:	MOVB	R1,(R5)+		; COPY NEXT BYTE TO DST
                          62     96  0022   157 	INCB	(R2)			; INCREMENT BYTE COUNTER
                          51     94  0024   158 	CLRB	R1			; DISCARD BYTE JUST COPIED
            51         F8 8F     9C  0026   159 	ROTL	#-8,R1,R1		; MOVE NEXT BYTE INTO PLACE
                          51         002A       
                          F2     12  002B   160 	BNEQ	10$			; MORE TO DO IF ANY REMAINING BITS
                                     002D   161 					;  ARE NON-ZERO
                                 05  002D   162 20$:	RSB				; EXIT
                                     002E   163 	.END
NT0ENCODE       DAP MESSAGE ENCODE ROUTINES                      21-AUG-1978 22:21:50   VAX-11 MACRO X0.3-11               Page   5
SYMBOL TABLE                                                                                                                     (4)

$$.PSECT_EP    = 00000000            
$$RMSTEST      = 0000001A            
$$RMS_PBUGCHK  = 00000010            
$$RMS_TBUGCHK  = 00000008            
$$RMS_UMODE    = 00000004            
NT$CVT_BIN2EXT   00000000 RG    02   
NT$CVT_BIN2IMG   00000016 RG    02   


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
NF$NETWORK       0000002E      02     NOPIC   USR   CON   REL   GBL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
27978. BYTES LEFT IN FREE MEMORY POOL.
OBJ$:NT0ENCODE,LIS$:NT0ENCODE/-SP=LIB$:N/ML,R/ML,SRC$:NT0ENCODE
2 MLB DIR RDS - 14 GETS TO DEFINE 1 MACROS. 2 INTER. FILE WRITES. 
