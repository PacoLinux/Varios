ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     22-AUG-1978 00:09:49   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)     107  LOG DEVICE ERRORS
   (1)     175  ALLOCATE ERROR MESSAGE BUFFER
   (1)     238  RELEASE ERROR MESSAGE BUFFER
   (1)     270  WAKE ERROR LOG FORMAT PROCESS
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     22-AUG-1978 00:09:49   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	ERRORLOG - ERROR LOG SUPPORT ROUTINES
                                     0000     2 	.IDENT	/01/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; D. N. CUTLER 7-MAR-77
                                     0000    24 ;
                                     0000    25 ; MODIFIED BY:
                                     0000    26 ;
                                     0000    27 ; C. A. MONIA 23-JAN-78
                                     0000    28 ;
                                     0000    29 ;	01 - MODIFIED FOR STAND-ALONE DSC SYSTEM
                                     0000    30 ;
                                     0000    31 ;
                                     0000    32 ; ERROR LOG SUPPORT ROUTINES
                                     0000    33 ;
                                     0000    34 ; MACRO LIBRARY CALLS
                                     0000    35 ;
                                     0000    36  
                                     0000    37 	$DDBDEF				;DEFINE DDB OFFSETS
                                     0000    38 	$DDTDEF				;DEFINE DDT OFFSETS
                                     0000    39 	$DEVDEF				;DEFINE DEVICE CHARACTERISTIC BITS
                                     0000    40 	$EMBDEF				;DEFINE ERROR MESSAGE BUFFER OFFSETS
                                     0000    41 	$ERLDEF				;DEFINE ERROR ALLOCATION BUFFER OFFSETS
                                     0000    42 	$FCBDEF				;DEFINE FCB OFFSETS
                                     0000    43 	$IODEF				;DEFINE I/O FUNCTION VALUES
                                     0000    44 	$IRPDEF				;DEFINE IRP OFFSETS
                                     0000    45 	$PRDEF				;DEFINE PROCESSOR REGISTER NUMBERS
                                     0000    46 	$UCBDEF				;DEFINE UCB OFFSETS
                                     0000    47 	$WCBDEF				;DEFINE WCB OFFSETS
                                     0000    48  
                                     0000    49 ;
                                     0000    50 ; LOCAL SYMBOLS
                                     0000    51 ;
                                     0000    52 ; MAXIMUM NUMBER OF MESSAGES BEFORE WAKE OF FORMAT PROCESS
                                     0000    53 ;
                                     0000    54  
                           0000000A  0000    55 MAXMSG=10				;
                                     0000    56  
                                     0000    57 ;
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     22-AUG-1978 00:09:49   VAX-11 MACRO X0.3-11               Page   2
01                                                                                                                               (1)

                                     0000    58 ; MAXIMUM TIME IN SECONDS BEFORE WAKE OF FORMAT PROCESS
                                     0000    59 ;
                                     0000    60  
                           0000001E  0000    61 MAXTIM=30				;
                                     0000    62  
                                     0000    63 ;
                                     0000    64 ; LOCAL DATA
                                     0000    65 ;
                                     0000    66  
                                 00000000    67 	.PSECT	$$$260,QUAD,WRT
                                 00  0000    68 BUF1:	.BYTE	0			;COUNT OF BUSY MESSAGES IN BUFFER
                                 00  0001    69 	.BYTE	0			;COUNT OF COMPLETED MESSAGES IN BUFFER
                                 00  0002    70 	.BYTE	0			;BUFFER INDICATOR
                           00000004  0003    71 	.BLKB	1			;SPARE UNUSED BYTE
                           0000000C' 0004    72 	.LONG	10$			;ADDRESS OF NEXT AVAILABLE SPACE IN BUFFER
                           00000200' 0008    73 	.LONG	20$			;ADDRESS OF END OF BUFFER + 1
                           00000200  000C    74 10$:	.BLKB	512-ERL$C_LENGTH	;ACTUAL BUFFER AREA
                                     0200    75 20$:					;REF LABEL
                                 00  0200    76 BUF2:	.BYTE	0			;COUNT OF BUSY MESSAGES IN BUFFER
                                 00  0201    77 	.BYTE	0			;COUNT OF COMPLETED MESSAGES IN BUFFER
                                 01  0202    78 	.BYTE	1			;BUFFER INDICATOR
                           00000204  0203    79 	.BLKB	1			;SPARE UNUSED BYTE
                           0000020C' 0204    80 	.LONG	10$			;ADDRESS OF NEXT AVAILABLE SPACE IN BUFFER
                           00000400' 0208    81 	.LONG	20$			;ADDRESS OF END OF BUFFER + 1
                           00000400  020C    82 10$:	.BLKB	512-ERL$C_LENGTH	;ACTUAL BUFFER AREA
                                     0400    83 20$:					;REF LABEL
                                     0400    84  
                                     0400    85 ;
                                     0400    86 ; GLOBAL DATA
                                     0400    87 ;
                                     0400    88 ; ERROR LOG DATA BASE
                                     0400    89 ;
                                     0400    90  
                                     0400    91 ERL$AL_BUFADDR::			;ALLOCATION BUFFER ADDRESS ARRAY
                           00000000' 0400    92 	.LONG	BUF1			;ADDRESS OF BUFFER 1 DESCRIPTOR
                           00000200' 0404    93 	.LONG	BUF2			;ADDRESS OF BUFFER 2 DESCRIPTOR
                                     0408    94 ERL$GB_BUFIND::				;CURRENT ALLOCATION BUFFER INDICATOR
                                 00  0408    95 	.BYTE	0			;
                                     0409    96 ERL$GB_BUFFLAG::			;BUFFER STATUS FLAGS
                                 00  0409    97 	.BYTE	0			;
                                     040A    98 ERL$GB_BUFPTR::				;FORMAT PROCESS BUFFER INDICATOR
                                 00  040A    99 	.BYTE	0			;
                                     040B   100 ERL$GB_BUFTIM::				;FORMAT PROCESS WAKEUP TIMER
                                 1E  040B   101 	.BYTE	MAXTIM			;
                                     040C   102 ERL$GL_ERLPID::				;PROCESS ID OF ERROR LOG PROCESS
                           00000000  040C   103 	.LONG	0			;
                                     0410   104 ERL$GL_SEQUENCE::			;UNIVERSAL ERROR SEQUENCE NUMBER
                           00000000  0410   105 	.LONG	0			;
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     22-AUG-1978 00:09:49   VAX-11 MACRO X0.3-11               Page   3
01              LOG DEVICE ERRORS                                                                                                (1)

                                     0414   107 	.SBTTL	LOG DEVICE ERRORS
                                     0414   108 ;+
                                     0414   109 ; ERL$DEVICERR - LOG DEVICE CONTROLLER AND/OR DRIVE ERROR
                                     0414   110 ; ERL$DEVICTMO - LOG DEVICE TIMEOUT ERROR
                                     0414   111 ;
                                     0414   112 ; THIS ROUTINE IS CALLED TO LOG A DEVICE TIMEOUT OR DEVICE CONTROLLER
                                     0414   113 ; AND/OR DRIVE ERROR.
                                     0414   114 ;
                                     0414   115 ; INPUTS:
                                     0414   116 ;
                                     0414   117 ;	R5 = DEVICE UNIT UCB ADDRESS.
                                     0414   118 ;
                                     0414   119 ; OUTPUTS:
                                     0414   120 ;
                                     0414   121 ;	IF AN ERROR LOG ENTRY IS NOT ALREADY IN PROGRESS ON THE UNIT, ERROR
                                     0414   122 ;	LOGGING IS ENABLED FOR THE UNIT, AND THE CURRENT REQUEST DOES NOT
                                     0414   123 ;	INHIBIT ERROR LOGGING, THEN AN ERROR MESSAGE BUFFER IS ALLOCATED AND
                                     0414   124 ;	FILLED IN WITH PERTINENT REQUEST INFORMATION FOLLOWED BY A DUMP OF
                                     0414   125 ;	THE DEVICE REGISTERS.
                                     0414   126 ;
                                     0414   127 ;	ALL REGISTERS ARE PRESERVED ACROSS CALL.
                                     0414   128 ;-
                                     0414   129  
                                 00000000   130 	.PSECT	WIONONPAGED
                                     0000   131 	.ENABL	LSB
                                     0000   132 ERL$DEVICERR::				;LOG DEVICE CONTROLLER AND/OR DRIVE ERROR
                          01     DD  0000   133 	PUSHL	#EMB$C_DE		;SET FOR DEVICE ERROR
                          05     11  0002   134 	BRB	10$			;
                                     0004   135 ERL$DEVICTMO::				;LOG DEVICE TIMEOUT ERROR
            7E       0096 8F     3C  0004   136 	MOVZWL	#EMB$C_DT,-(SP)		;SET FOR DEVICE TIMEOUT
                     004F 8F     BB  0009   137 10$:	PUSHR	#^M<R0,R1,R2,R3,R6>	;SAVE REGISTERS
            53         24 A5     D0  000D   138 	MOVL	UCB$L_DDB(R5),R3	;GET ADDRESS OF DDB
            56         0C A3     D0  0011   139 	MOVL	DDB$L_DDT(R3),R6	;GET ADDRESS OF DDT
            51         16 A6     3C  0015   140 	MOVZWL	DDT$W_ERRORBUF(R6),R1	;GET SIZE OF ERROR LOG BUFFER IN BYTES
                       72 A5     B6  0019   141 	INCW	UCB$W_ERRCNT(R5)	;INCREMENT NUMBER OF DEVICE ERRORS
         58 A5            02     E0  001C   142 	BBS	#UCB$V_ERLOGIP,UCB$W_STS(R5),30$ ;IF SET, ERROR IN PROGRESS
                          69         0020       
         34 A5            16     E1  0021   143 	BBC	#DEV$V_ELG,UCB$L_DEVCHAR(R5),30$ ;IF CLR, ERROR LOG DISABLED
                          64         0025       
       0084 C5            0B     E0  0026   144 	BBS	#IO$V_INHERLOG,UCB$W_FUNC(R5),30$ ;IF SET, ERROR LOG INHIBITED
                          5E         002B       
                          0062   30  002C   145 	BSBW	ERL$ALLOCEMB		;ALLOCATE ERROR MESSAGE BUFFER
            58            50     E9  002F   146 	BLBC	R0,30$			;IF LBC ALLOCATION FAILURE
         78 A5            52     D0  0032   147 	MOVL	R2,UCB$L_EMB(R5)	;SAVE ADDRESS OF ERROR MESSAGE BUFFER
         58 A5            04     A8  0036   148 	BISW	#UCB$M_ERLOGIP,UCB$W_STS(R5) ;SET ERROR LOG IN PROGRESS
         04 A2         14 AE     B0  003A   149 	MOVW	5*4(SP),EMB$W_DV_ENTRY(R2) ;INSERT ENTRY TYPE
            52            12     C0  003F   150 	ADDL	#EMB$B_DV_CLASS,R2	;POINT TO DEVICE CLASS
            82         38 A5     B0  0042   151 	MOVW	UCB$B_DEVCLASS(R5),(R2)+ ;INSERT DEVICE CLASS AND TYPE
            82       0000'CF     7D  0046   152 	MOVQ	W^EXE$GQ_SYSTIME,(R2)+	;INSERT CURRENT TIME
            82            51     D0  004B   153 	MOVL	R1,(R2)+		;INSERT ERROR SEQUENCE NUMBER
            51         4C A5     D0  004E   154 	MOVL	UCB$L_IRP(R5),R1	;GET ADDRESS OF I/O PACKET
            82         0C A1     D0  0052   155 	MOVL	IRP$L_PID(R1),(R2)+	;INSERT REQUESTER PROCESS ID
            82         30 A1     7D  0056   156 	MOVQ	IRP$W_BOFF(R1),(R2)+	;INSERT TRANSFER PARAMETERS
            82         48 A5     B0  005A   157 	MOVW	UCB$W_UNIT(R5),(R2)+	;INSERT UNIT NUMBER
            82         72 A5     B0  005E   158 	MOVW	UCB$W_ERRCNT(R5),(R2)+	;INSERT NUMBER OF DEVICE ERRORS
            82         60 A5     D0  0062   159 	MOVL	UCB$L_OPCNT(R5),(R2)+	;INSERT OPERATIONS COMPLETED
            82         1C A5     D0  0066   160 	MOVL	UCB$L_OWNUIC(R5),(R2)+	;INSERT VOLUME OWNER UIC
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     22-AUG-1978 00:09:49   VAX-11 MACRO X0.3-11               Page   4
01              LOG DEVICE ERRORS                                                                                                (1)

            82         34 A5     D0  006A   161 	MOVL	UCB$L_DEVCHAR(R5),(R2)+	;INSERT DEVICE CHARACTERISTICS
            82         74 A5     9B  006E   162 	MOVZBW	UCB$B_SLAVE(R5),(R2)+	;INSERT SLAVE UNIT NUMBER
            82         20 A1     B0  0072   163 	MOVW	IRP$W_FUNC(R1),(R2)+	;INSERT FUNCTION VALUE
            51         14 A3     DE  0076   164 	MOVAL	DDB$T_NAME(R3),R1	;GET ADDRESS OF DEVICE NAME
            53            61     9A  007A   165 	MOVZBL	(R1),R3			;GET NUMBER OF CHARACTERS TO MOVE
            52            10     C1  007D   166 	ADDL3	#EMB$L_DV_REGSAV-EMB$T_DV_NAME,R2,R0 ;CALCULATE ADDRESS OF REGISTERS
                          50         0080       
            82            81     90  0081   167 20$:	MOVB	(R1)+,(R2)+		;MOVE DEVICE NAME TO BUFFER
            FA            53     F4  0084   168 	SOBGEQ	R3,20$			;ANY MORE CHARACTERS TO MOVE?
                       10 B6     16  0087   169 	JSB	@DDT$L_REGDUMP(R6)	;INSERT DEVICE REGISTERS IN BUFFER
                     004F 8F     BA  008A   170 30$:	POPR	#^M<R0,R1,R2,R3,R6>	;RESTORE REGISTERS
                          8E     D5  008E   171 	TSTL	(SP)+			;REMOVE ENTRY TYPE FFROM STACK
                                 05  0090   172 	RSB				;
                                     0091   173 	.DSABL	LSB
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     22-AUG-1978 00:09:49   VAX-11 MACRO X0.3-11               Page   5
01              ALLOCATE ERROR MESSAGE BUFFER                                                                                    (1)

                                     0091   175 	.SBTTL	ALLOCATE ERROR MESSAGE BUFFER
                                     0091   176 ;+
                                     0091   177 ; ERL$ALLOCEMB - ALLOCATE ERROR MESSAGE BUFFER
                                     0091   178 ;
                                     0091   179 ; THIS ROUTINE IS CALLED TO ALLOCATE AN ERROR LOG MESSAGE BUFFER AND
                                     0091   180 ; INITIALIZE ITS HEADER.
                                     0091   181 ;
                                     0091   182 ; INPUTS:
                                     0091   183 ;
                                     0091   184 ;	R1 = SIZE OF MESSAGE BUFFER REQUIRED IN BYTES.
                                     0091   185 ;
                                     0091   186 ; OUTPUTS:
                                     0091   187 ;
                                     0091   188 ;	R0 LOW BIT CLEAR INDICATES AN ALLOCATION FAILURE.
                                     0091   189 ;
                                     0091   190 ;	R0 LOW BIT SET INDICATES SUCCESSFUL ALLOCATION WITH:
                                     0091   191 ;
                                     0091   192 ;		R1 = ERROR SEQUENCE NUMBER.
                                     0091   193 ;		R2 = ADDRESS OF ALLOCATED ERROR MESSAGE BUFFER.
                                     0091   194 ;
                                     0091   195 ;	IN EITHER CASE THE UNIVERSAL ERROR SEQUENCE NUMBER IS INCREMENTED
                                     0091   196 ;	AND THE ERROR LOG PROCESS MAY BE AWAKENED IF AN ERROR ALLOCATION
                                     0091   197 ;	BUFFER IS FOUND TO BE FULL.
                                     0091   198 ;
                                     0091   199 ;	R3 IS PRESERVED ACROSS CALL.
                                     0091   200 ;-
                                     0091   201  
                                     0091   202 ERL$ALLOCEMB::				;ALLOCATE ERROR MESSAGE BUFFER
                                     0091   203 	DSBINT				;DISABLE ALL INTERRUPTS
       0409'CF            00     E6  0097   204 	BBSSI	#ERL$V_LOCK,W^ERL$GB_BUFFLAG,50$ ;IF SET, RECURSIVE REENTRY ATTEMPTED
                          68         009C       
            50       0408'CF     9A  009D   205 	MOVZBL	W^ERL$GB_BUFIND,R0	;GET CURRENT ALLOCATION BUFFER INDICATOR
            50       0400'CF40   D0  00A2   206 	MOVL	W^ERL$AL_BUFADDR[R0],R0	;GET ADDRESS OF ALLOCATION BUFFER DESCRIPTOR
            52         04 A0     D0  00A8   207 10$:	MOVL	ERL$L_NEXT(R0),R2	;GET ADDRESS OF NEXT AVAILABLE SPACE
            52            51     C1  00AC   208 	ADDL3	R1,R2,ERL$L_NEXT(R0)	;CALCULATE ADDRESS OF NEXT AVAILABLE SPACE
                       04 A0         00AF       
         04 A0         08 A0     D1  00B1   209 	CMPL	ERL$L_END(R0),ERL$L_NEXT(R0) ;ENTRY FIT WITHIN BUFFER?
                          2E     1E  00B6   210 	BGEQU	20$			;IF GEQU YES
         04 A0         08 A0     D0  00B8   211 	MOVL	ERL$L_END(R0),ERL$L_NEXT(R0) ;INDICATE THAT BUFFER IS FULL
       0409'CF            02     88  00BD   212 	BISB	#ERL$M_TIMER,W^ERL$GB_BUFFLAG ;SET TIMER ACTIVE
       040B'CF            01     90  00C2   213 	MOVB	#1,W^ERL$GB_BUFTIM	;FORCE ERROR LOG PROCESS WAKE
       0408'CF            01     8C  00C7   214 	XORB	#1,W^ERL$GB_BUFIND	;SWITCH TO ALTERNATE BUFFER
            50       0408'CF     9A  00CC   215 	MOVZBL	W^ERL$GB_BUFIND,R0	;GET NEW BUFFER INDICATOR
            50       0400'CF40   D0  00D1   216 	MOVL	W^ERL$AL_BUFADDR[R0],R0	;GET ADDRESS OF ALLOCATION BUFFER DESCRIPTOR
         04 A0            51     C1  00D7   217 	ADDL3	R1,ERL$L_NEXT(R0),R2	;CALCULATE ADDRESS OF NEXT AVAILABLE SPACE
                          52         00DB       
            52         08 A0     D1  00DC   218 	CMPL	ERL$L_END(R0),R2	;ENTRY FIT WITHIN BUFFER?
                          C6     1E  00E0   219 	BGEQU	10$			;IF GEQU YES
                          50     D4  00E2   220 	CLRL	R0			;INDICATE ALLOCATION FAILURE
                          12     11  00E4   221 	BRB	30$			;
            62            51     3C  00E6   222 20$:	MOVZWL	R1,EMB$W_SIZE(R2)	;INITIALIZE MESSAGE HEADER
         02 A2         02 A0     90  00E9   223 	MOVB	ERL$B_BUFIND(R0),EMB$B_BUFIND(R2) ;SET RESPECTIVE BUFFER INDICATOR
                          60     96  00EE   224 	INCB	ERL$B_BUSY(R0)		;INCREMENT MESSAGE BUSY COUNT
            51       0410'CF     D0  00F0   225 	MOVL	W^ERL$GL_SEQUENCE,R1	;GET CURRENT ERROR SEQUENCE NUMBER
            50            01     D0  00F5   226 	MOVL	#1,R0			;SET SUCCESS INDICATOR
                     0410'CF     D6  00F8   227 30$:	INCL	W^ERL$GL_SEQUENCE	;INCREMENT UNIVERSAL ERROR SEQUENCE NUMBER
       0409'CF            01     8A  00FC   228 	BICB	#ERL$M_LOCK,W^ERL$GB_BUFFLAG ;CLEAR ALLOCATION INTERLOCK FLAG
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     22-AUG-1978 00:09:49   VAX-11 MACRO X0.3-11               Page   6
01              ALLOCATE ERROR MESSAGE BUFFER                                                                                    (1)

                                     0101   229 40$:	ENBINT				;ENABLE INTERRUPTS
                                 05  0104   230 	RSB				;
                                     0105   231  
                                     0105   232 ;
                                     0105   233 ; RECURSIVE REENTRY AT IPL 31
                                     0105   234 ;
                                     0105   235  
                                 00  0105   236 50$:	HALT				;******TEMP******
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     22-AUG-1978 00:09:49   VAX-11 MACRO X0.3-11               Page   7
01              RELEASE ERROR MESSAGE BUFFER                                                                                     (1)

                                     0106   238 	.SBTTL	RELEASE ERROR MESSAGE BUFFER
                                     0106   239 ;+
                                     0106   240 ; ERL$RELEASEMB - RELEASE ERROR MESSAGE BUFFER
                                     0106   241 ;
                                     0106   242 ; THIS ROUTINE IS CALLED TO RELEASE AN ERROR MESSAGE BUFFER FOR PROCESSING
                                     0106   243 ; BY THE ERROR LOG PROCESS.
                                     0106   244 ;
                                     0106   245 ; INPUTS:
                                     0106   246 ;
                                     0106   247 ;	R2 = ADDRESS OF ERROR MESSAGE BUFFER.
                                     0106   248 ;
                                     0106   249 ; OUTPUTS:
                                     0106   250 ;
                                     0106   251 ;	THE COMPLETED ERROR MESSAGE COUNT IS INCREMENTED IN THE RESPECTIVE
                                     0106   252 ;	ALLOCATION BUFFER HEADER, THE MESSAGE IS SET VALID, AND THE BUSY
                                     0106   253 ;	MESSAGE COUNT IS DECREMENTED IN THE RESPECTIVE ALLOCATION BUFFER
                                     0106   254 ;	HEADER.
                                     0106   255 ;
                                     0106   256 ;	R3 IS PRESERVED ACROSS CALL.
                                     0106   257 ;-
                                     0106   258  
                                     0106   259 ERL$RELEASEMB::				;RELEASE ERROR MESSAGE BUFFER
                       03 A2     96  0106   260 	INCB	EMB$B_VALID(R2)		;SET MESSAGE BUFFER VALID
            50         02 A2     9A  0109   261 	MOVZBL	EMB$B_BUFIND(R2),R0	;GET BUFFER INDICATOR OF ALLOCATION BUFFER
            50       0400'CF40   D0  010D   262 	MOVL	W^ERL$AL_BUFADDR[R0],R0	;GET ADDRESS OF ALLOCATION BUFFER DESCRIPTOR
            60       00FF 8F     A0  0113   263 	ADDW	#^XFF,ERL$B_BUSY(R0)	;ADJUST BUSY AND COMPLETED MESSAGE COUNT
       0409'CF            01     E3  0118   264 	BBCS	#ERL$V_TIMER,W^ERL$GB_BUFFLAG,10$ ;IF CLR, NO TIMER RUNNING
                          0B         011D       
         01 A0            0A     91  011E   265 	CMPB	#MAXMSG,ERL$B_MSGCNT(R0) ;MAXIMUM NUMBER OF MESSAGES EXCEEDED?
                          05     1A  0122   266 	BGTRU	10$			;IF GTRU NO
       040B'CF            01     90  0124   267 	MOVB	#1,W^ERL$GB_BUFTIM	;FORCE ERROR LOG PROCESS WAKE
                                 05  0129   268 10$:	RSB				;
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     22-AUG-1978 00:09:49   VAX-11 MACRO X0.3-11               Page   8
01              WAKE ERROR LOG FORMAT PROCESS                                                                                    (1)

                                     012A   270 	.SBTTL	WAKE ERROR LOG FORMAT PROCESS
                                     012A   271 ;+
                                     012A   272 ; ERL$WAKE - WAKE ERROR LOG FORMAT PROCESS
                                     012A   273 ;
                                     012A   274 ; THIS ROUTINE IS CALLED ONCE A SECOND WHEN THE ERROR BUFFER TIMER IS ACTIVE.
                                     012A   275 ;
                                     012A   276 ; INPUTS:
                                     012A   277 ;
                                     012A   278 ;	NONE.
                                     012A   279 ;
                                     012A   280 ; OUTPUTS:
                                     012A   281 ;
                                     012A   282 ;	THE ERROR BUFFER TIMER IS DECREMENTED AND IF THE RESULT IS ZERO THE
                                     012A   283 ;	ERROR LOG FORMAT PROCESS IS AWAKENED.
                                     012A   284 ;-
                                     012A   285  
                                     012A   286 ERL$WAKE::				;WAKE ERROR LOG FORMAT PROCESS
                                     012A   287 ;	DECB	W^ERL$GB_BUFTIM		;DECREMENT TIMER
                                     012A   288 ;	BNEQ	10$			;
                                     012A   289 ;	BICB	#ERL$M_TIMER,W^ERL$GB_BUFFLAG ;CLEAR TIMER ACTIVE FLAG
                                     012A   290 ;	MOVB	#MAXTIM,W^ERL$GB_BUFTIM	;RESET TIMER VALUE
                                     012A   291 ;	MOVL	W^ERL$GL_ERLPID,R1	;GET ERROR LOG PROCESS ID
                                     012A   292 ;	BSBW	SCH$WAKE		;WAKE ERROR LOG PROCESS
                                 05  012A   293 10$:	RSB				;
                                     012B   294  
                                     012B   295 	.END
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     22-AUG-1978 00:09:49   VAX-11 MACRO X0.3-11               Page   9
SYMBOL TABLE                                                                                                                     (1)

BIT...         = 0000000B            DEV$V_MNT      = 00000013            EMB$L_BC_R1      00000028            
BUF1             00000000 R     03   DEV$V_NET      = 0000000D            EMB$L_BC_R10     0000004C            
BUF2             00000200 R     03   DEV$V_ODV      = 0000001B            EMB$L_BC_R11     00000050            
DDB$B_ACPCLASS   00000013            DEV$V_RCK      = 0000001E            EMB$L_BC_R2      0000002C            
DDB$B_TYPE       0000000A            DEV$V_REC      = 00000000            EMB$L_BC_R3      00000030            
DDB$C_LENGTH     00000014            DEV$V_RND      = 0000001C            EMB$L_BC_R4      00000034            
DDB$K_LENGTH     00000014            DEV$V_RTM      = 0000001D            EMB$L_BC_R5      00000038            
DDB$L_ACPD       00000010            DEV$V_SDI      = 00000004            EMB$L_BC_R6      0000003C            
DDB$L_DDT        0000000C            DEV$V_SHR      = 00000010            EMB$L_BC_R7      00000040            
DDB$L_LINK       00000000            DEV$V_SPL      = 00000006            EMB$L_BC_R8      00000044            
DDB$L_UCB        00000004            DEV$V_SQD      = 00000005            EMB$L_BC_R9      00000048            
DDB$T_NAME       00000014            DEV$V_SWL      = 00000019            EMB$L_BC_SP      0000005C            
DDB$W_SIZE       00000008            DEV$V_TRM      = 00000002            EMB$L_BC_SSP     00000018            
DDT$L_CANCEL     0000000C            DEV$V_WCK      = 0000001F            EMB$L_BC_USP     0000001C            
DDT$L_FDT        00000008            EMB$B_BC_PCB     0000006E            EMB$L_CR_ACCS    0000009C            
DDT$L_INIT       00000018            EMB$B_BUFIND     00000002            EMB$L_CR_AP      00000054            
DDT$L_REGDUMP    00000010            EMB$B_DV_CLASS   00000012            EMB$L_CR_ASTLVL  00000088            
DDT$L_START      00000000            EMB$B_DV_ERTCNT  00000006            EMB$L_CR_CODE    000000F4            
DDT$L_UNSOLINT   00000004            EMB$B_DV_ERTMAX  00000007            EMB$L_CR_ESP     00000014            
DDT$W_DIAGBUF    00000014            EMB$B_DV_SLAVE   0000003C            EMB$L_CR_FP      00000058            
DDT$W_ERRORBUF   00000016            EMB$B_DV_TYPE    00000013            EMB$L_CR_ICCS    00000090            
DEV$M_ALL      = 00800000            EMB$B_SS_MSGTXT  00000012            EMB$L_CR_ICR     00000094            
DEV$M_AVL      = 00040000            EMB$B_VALID      00000003            EMB$L_CR_ISP     00000020            
DEV$M_CCL      = 00000002            EMB$C_BC_LENGTH  0000006E            EMB$L_CR_KSP     00000010            
DEV$M_DIR      = 00000008            EMB$C_BE       = 00000004            EMB$L_CR_P0BR    00000068            
DEV$M_DMT      = 00200000            EMB$C_CR_LENGTH  000000FA            EMB$L_CR_P0LR    0000006C            
DEV$M_ELG      = 00400000            EMB$C_CS       = 00000020            EMB$L_CR_P1BR    00000070            
DEV$M_FOD      = 00004000            EMB$C_DE       = 00000001            EMB$L_CR_P1LR    00000074            
DEV$M_FOR      = 01000000            EMB$C_DT       = 00000096            EMB$L_CR_PC      00000060            
DEV$M_GEN      = 00020000            EMB$C_LENGTH     00000004            EMB$L_CR_PCBB    00000080            
DEV$M_IDV      = 04000000            EMB$C_OM       = 00000028            EMB$L_CR_PSL     00000064            
DEV$M_MBX      = 00100000            EMB$C_SS       = 00000027            EMB$L_CR_R0      00000024            
DEV$M_MNT      = 00080000            EMB$C_SS_LENGTH  00000012            EMB$L_CR_R1      00000028            
DEV$M_NET      = 00002000            EMB$C_TS       = 00000026            EMB$L_CR_R10     0000004C            
DEV$M_ODV      = 08000000            EMB$C_TS_LENGTH  00000010            EMB$L_CR_R11     00000050            
DEV$M_RCK      = 40000000            EMB$C_UI       = 00000061            EMB$L_CR_R2      0000002C            
DEV$M_REC      = 00000001            EMB$C_VD       = 00000041            EMB$L_CR_R3      00000030            
DEV$M_RND      = 10000000            EMB$C_VM       = 00000040            EMB$L_CR_R4      00000034            
DEV$M_RTM      = 20000000            EMB$C_WS       = 00000024            EMB$L_CR_R5      00000038            
DEV$M_SDI      = 00000010            EMB$K_BC_LENGTH  0000006E            EMB$L_CR_R6      0000003C            
DEV$M_SHR      = 00010000            EMB$K_CR       = 00000025            EMB$L_CR_R7      00000040            
DEV$M_SPL      = 00000040            EMB$K_CR_LENGTH  000000FA            EMB$L_CR_R8      00000044            
DEV$M_SQD      = 00000020            EMB$K_LENGTH     00000004            EMB$L_CR_R9      00000048            
DEV$M_SWL      = 02000000            EMB$K_MC       = 00000002            EMB$L_CR_SBIER   000000AC            
DEV$M_TRM      = 00000004            EMB$K_SBC      = 00000028            EMB$L_CR_SBIFS   000000A0            
DEV$M_WCK      = 80000000            EMB$K_SS_LENGTH  00000012            EMB$L_CR_SBIMT   000000A8            
DEV$V_ALL      = 00000017            EMB$K_TS_LENGTH  00000010            EMB$L_CR_SBIS    000000B4            
DEV$V_AVL      = 00000012            EMB$K_UBC      = 00000080            EMB$L_CR_SBISC   000000A4            
DEV$V_CCL      = 00000001            EMB$L_BC_AP      00000054            EMB$L_CR_SBITA   000000B0            
DEV$V_DIR      = 00000003            EMB$L_BC_CODE    00000068            EMB$L_CR_SBR     00000078            
DEV$V_DMT      = 00000015            EMB$L_BC_ESP     00000014            EMB$L_CR_SCBB    00000084            
DEV$V_ELG      = 00000016            EMB$L_BC_FP      00000058            EMB$L_CR_SISR    0000008C            
DEV$V_FOD      = 0000000E            EMB$L_BC_ISP     00000020            EMB$L_CR_SLR     0000007C            
DEV$V_FOR      = 00000018            EMB$L_BC_KSP     00000010            EMB$L_CR_SP      0000005C            
DEV$V_GEN      = 00000011            EMB$L_BC_PC      00000060            EMB$L_CR_SSP     00000018            
DEV$V_IDV      = 0000001A            EMB$L_BC_PSL     00000064            EMB$L_CR_TODR    00000098            
DEV$V_MBX      = 00000014            EMB$L_BC_R0      00000024            EMB$L_CR_USP     0000001C            
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     22-AUG-1978 00:09:49   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (1)

EMB$L_DV_CHAR    00000038            FCB$B_DIRIDX     00000048            IO$M_INHRETRY  = 00008000            
EMB$L_DV_ERRSEQ  0000001C            FCB$B_FID_NMX    00000025            IO$M_INHSEEK   = 00001000            
EMB$L_DV_MEDIA   00000028            FCB$B_FID_RVN    00000024            IO$M_INTERRUPT = 00000040            
EMB$L_DV_OPCNT   00000030            FCB$B_TYPE       0000000A            IO$M_MOUNT     = 00000200            
EMB$L_DV_OWNUIC  00000034            FCB$C_LENGTH     00000048            IO$M_NOECHO    = 00000040            
EMB$L_DV_REGSAV  00000050            FCB$K_LENGTH     00000048            IO$M_NOFILTR   = 00000200            
EMB$L_DV_RQPID   00000020            FCB$L_EFBLK      00000040            IO$M_NOFORMAT  = 00000100            
EMB$Q_BC_TIME    00000006            FCB$L_EXFCB      0000000C            IO$M_NOW       = 00000040            
EMB$Q_CR_TIME    00000006            FCB$L_FCBBL      00000004            IO$M_NOWAIT    = 00000080            
EMB$Q_DV_ERTIME  00000014            FCB$L_FCBFL      00000000            IO$M_PACKED    = 00000080            
EMB$Q_DV_IOSB    00000008            FCB$L_FILEOWNER  00000038            IO$M_PURGE     = 00000800            
EMB$Q_SS_TIME    00000006            FCB$L_FILESIZE   00000034            IO$M_READATTN  = 00000080            
EMB$Q_TS_TIME    00000006            FCB$L_HDLBN      00000030            IO$M_REVERSE   = 00000040            
EMB$T_DV_NAME    00000040            FCB$L_STLBN      0000002C            IO$M_SHUTDOWN  = 00000080            
EMB$W_BC_ENTRY   00000004            FCB$L_STVBN      00000028            IO$M_STARTUP   = 00000040            
EMB$W_BC_ERRSEQ  0000000E            FCB$L_WLBL       00000014            IO$M_SYNCH     = 00000200            
EMB$W_BC_PCBSZ   0000006C            FCB$L_WLFL       00000010            IO$M_TIMED     = 00000080            
EMB$W_CR_ENTRY   00000004            FCB$V_BADBLK   = 00000002            IO$M_TRMNOECHO = 00001000            
EMB$W_CR_ERRSEQ  0000000E            FCB$V_DIR      = 00000000            IO$M_WRTATTN   = 00000100            
EMB$W_CR_PCBSZ   000000F8            FCB$V_EXCL     = 00000003            IO$S_FCODE     = 00000006            
EMB$W_DV_BCNT    00000026            FCB$V_MARKDEL  = 00000001            IO$V_ABORT     = 00000008            
EMB$W_DV_BOFF    00000024            FCB$W_ACNT       00000018            IO$V_ACCESS    = 00000006            
EMB$W_DV_DEVSTS  00000010            FCB$W_AMOD       0000003E            IO$V_ATTNAST   = 00000008            
EMB$W_DV_ENTRY   00000004            FCB$W_EOF        00000040            IO$V_BINARY    = 00000006            
EMB$W_DV_ERRCNT  0000002E            FCB$W_FFBYTE     00000044            IO$V_CANCTRLO  = 00000006            
EMB$W_DV_FUNC    0000003E            FCB$W_FID        00000020            IO$V_COMMOD    = 00000006            
EMB$W_DV_UNIT    0000002C            FCB$W_FID_NUM    00000020            IO$V_CREATE    = 00000007            
EMB$W_SIZE       00000000            FCB$W_FID_RVN    00000024            IO$V_CTRLCAST  = 00000008            
EMB$W_SS_ENTRY   00000004            FCB$W_FID_SEQ    00000022            IO$V_CTRLYAST  = 00000007            
EMB$W_SS_ERRSEQ  0000000E            FCB$W_FILEPROT   0000003C            IO$V_CVTLOW    = 00000008            
EMB$W_SS_MSGSZ   00000010            FCB$W_LCNT       0000001A            IO$V_DATACHECK = 0000000E            
EMB$W_TS_ENTRY   00000004            FCB$W_SEGN       00000026            IO$V_DELETE    = 00000008            
EMB$W_TS_ERRSEQ  0000000E            FCB$W_SIZE       00000008            IO$V_DMOUNT    = 0000000A            
ERL$ALLOCEMB     00000091 RG    04   FCB$W_STATUS     0000001E            IO$V_DSABLMBX  = 0000000A            
ERL$AL_BUFADDR   00000400 RG    03   FCB$W_UICGROUP   0000003A            IO$V_ENABLMBX  = 00000007            
ERL$B_BUFIND     00000002            FCB$W_UICMEMBER  00000038            IO$V_FCODE     = 00000000            
ERL$B_BUSY       00000000            FCB$W_WCNT       0000001C            IO$V_HANGUP    = 00000009            
ERL$B_MSGCNT     00000001            GBL...         = 00000000            IO$V_INHERLOG  = 0000000B            
ERL$C_LENGTH     0000000C            IO$M_ABORT     = 00000100            IO$V_INHEXTGAP = 0000000C            
ERL$DEVICERR     00000000 RG    04   IO$M_ACCESS    = 00000040            IO$V_INHRETRY  = 0000000F            
ERL$DEVICTMO     00000004 RG    04   IO$M_ATTNAST   = 00000100            IO$V_INHSEEK   = 0000000C            
ERL$GB_BUFFLAG   00000409 RG    03   IO$M_BINARY    = 00000040            IO$V_INTERRUPT = 00000006            
ERL$GB_BUFIND    00000408 RG    03   IO$M_CANCTRLO  = 00000040            IO$V_MOUNT     = 00000009            
ERL$GB_BUFPTR    0000040A RG    03   IO$M_COMMOD    = 00000040            IO$V_NOECHO    = 00000006            
ERL$GB_BUFTIM    0000040B RG    03   IO$M_CREATE    = 00000080            IO$V_NOFILTR   = 00000009            
ERL$GL_ERLPID    0000040C RG    03   IO$M_CTRLCAST  = 00000100            IO$V_NOFORMAT  = 00000008            
ERL$GL_SEQUENCE  00000410 RG    03   IO$M_CTRLYAST  = 00000080            IO$V_NOW       = 00000006            
ERL$K_LENGTH     0000000C            IO$M_CVTLOW    = 00000100            IO$V_NOWAIT    = 00000007            
ERL$L_END        00000008            IO$M_DATACHECK = 00004000            IO$V_PACKED    = 00000007            
ERL$L_NEXT       00000004            IO$M_DELETE    = 00000100            IO$V_PURGE     = 0000000B            
ERL$M_LOCK     = 00000001            IO$M_DMOUNT    = 00000400            IO$V_READATTN  = 00000007            
ERL$M_TIMER    = 00000002            IO$M_DSABLMBX  = 00000400            IO$V_REVERSE   = 00000006            
ERL$RELEASEMB    00000106 RG    04   IO$M_ENABLMBX  = 00000080            IO$V_SHUTDOWN  = 00000007            
ERL$V_LOCK     = 00000000            IO$M_FCODE     = 0000003F            IO$V_STARTUP   = 00000006            
ERL$V_TIMER    = 00000001            IO$M_HANGUP    = 00000200            IO$V_SYNCH     = 00000009            
ERL$WAKE         0000012A RG    04   IO$M_INHERLOG  = 00000800            IO$V_TIMED     = 00000007            
EXE$GQ_SYSTIME   ********   X   04   IO$M_INHEXTGAP = 00001000            IO$V_TRMNOECHO = 0000000C            
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     22-AUG-1978 00:09:49   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (1)

IO$V_WRTATTN   = 00000008            IRP$L_AST        00000010            PR$_ICCS       = 00000018            
IO$_ACCESS     = 00000032            IRP$L_ASTPRM     00000014            PR$_ICR        = 0000001A            
IO$_ACPCONTROL = 00000038            IRP$L_DIAGBUF    00000044            PR$_IPL        = 00000012            
IO$_CREATE     = 00000033            IRP$L_IOQBL      00000004            PR$_ISP        = 00000004            
IO$_DEACCESS   = 00000034            IRP$L_IOQFL      00000000            PR$_KSP        = 00000000            
IO$_DELETE     = 00000035            IRP$L_IOSB       00000024            PR$_MAPEN      = 00000038            
IO$_DIAGNOSE   = 0000001D            IRP$L_IOST1      00000034            PR$_NICR       = 00000019            
IO$_DRVCLR     = 00000004            IRP$L_IOST2      00000038            PR$_P0BR       = 00000008            
IO$_ERASETAPE  = 00000006            IRP$L_MEDIA      00000034            PR$_P0LR       = 00000009            
IO$_LOGICAL    = 0000002F            IRP$L_PID        0000000C            PR$_P1BR       = 0000000A            
IO$_MODIFY     = 00000036            IRP$L_SEGVBN     00000040            PR$_P1LR       = 0000000B            
IO$_MOUNT      = 00000039            IRP$L_SEQNUM     00000048            PR$_PCBB       = 00000010            
IO$_NOP        = 00000000            IRP$L_SVAPTE     0000002C            PR$_RXCS       = 00000020            
IO$_OFFSET     = 00000006            IRP$L_TT_TERM    00000038            PR$_RXDB       = 00000021            
IO$_PACKACK    = 00000008            IRP$L_UCB        0000001C            PR$_SBIER      = 00000034            
IO$_PHYSICAL   = 0000001F            IRP$L_WIND       00000018            PR$_SBIFS      = 00000030            
IO$_READHEAD   = 0000000E            IRP$M_BUFIO    = 00000001            PR$_SBIMT      = 00000033            
IO$_READLBLK   = 00000021            IRP$M_CHAINED  = 00000020            PR$_SBIQC      = 00000036            
IO$_READPBLK   = 0000000C            IRP$M_COMPLX   = 00000008            PR$_SBIS       = 00000031            
IO$_READPRESET = 00000019            IRP$M_DIAGBUF  = 00000080            PR$_SBISC      = 00000032            
IO$_READPROMPT = 00000037            IRP$M_FUNC     = 00000002            PR$_SBITA      = 00000035            
IO$_READTRACKD = 00000010            IRP$M_PAGIO    = 00000004            PR$_SBR        = 0000000C            
IO$_READVBLK   = 00000031            IRP$M_PHYSIO   = 00000100            PR$_SCBB       = 00000011            
IO$_RECAL      = 00000003            IRP$M_PRIVIO   = 00000200            PR$_SID        = 0000003E            
IO$_RELEASE    = 00000005            IRP$M_SWAPIO   = 00000040            PR$_SIRR       = 00000014            
IO$_RETCENTER  = 00000007            IRP$M_VIRTUAL  = 00000010            PR$_SISR       = 00000015            
IO$_REWIND     = 00000024            IRP$S_FCODE    = 00000006            PR$_SLR        = 0000000D            
IO$_REWINDOFF  = 00000022            IRP$S_FMOD     = 0000000A            PR$_SSP        = 00000002            
IO$_SEARCH     = 00000009            IRP$S_MODE     = 00000002            PR$_TBIA       = 00000039            
IO$_SEEK       = 00000002            IRP$V_BUFIO    = 00000000            PR$_TBIS       = 0000003A            
IO$_SENSECHAR  = 0000001B            IRP$V_CHAINED  = 00000005            PR$_TODR       = 0000001B            
IO$_SENSEMODE  = 00000027            IRP$V_COMPLX   = 00000003            PR$_TXCS       = 00000022            
IO$_SETCHAR    = 0000001A            IRP$V_DIAGBUF  = 00000007            PR$_TXDB       = 00000023            
IO$_SETMODE    = 00000023            IRP$V_FCODE    = 00000000            PR$_USP        = 00000003            
IO$_SKIPFILE   = 00000025            IRP$V_FMOD     = 00000006            PR$_WCSA       = 0000002C            
IO$_SKIPRECORD = 00000026            IRP$V_FUNC     = 00000001            PR$_WCSD       = 0000002D            
IO$_SPACEFILE  = 00000002            IRP$V_MODE     = 00000000            UCB$B_AMOD       00000053            
IO$_SPACERECORD= 00000009            IRP$V_PAGIO    = 00000002            UCB$B_CEX        00000077            
IO$_STARTSPNDL = 00000019            IRP$V_PHYSIO   = 00000008            UCB$B_CM1        0000004A            
IO$_UNLOAD     = 00000001            IRP$V_PRIVIO   = 00000009            UCB$B_CM2        0000004B            
IO$_VIRTUAL    = 0000003F            IRP$V_SWAPIO   = 00000006            UCB$B_DEVCLASS   00000038            
IO$_WRITECHECK = 0000000A            IRP$V_VIRTUAL  = 00000004            UCB$B_DEVTYPE    00000039            
IO$_WRITECHECKH= 00000018            IRP$W_ABCNT      0000003C            UCB$B_DIPL       00000052            
IO$_WRITEHEAD  = 0000000D            IRP$W_BCNT       00000032            UCB$B_DX_SCTCNT  FFFFFFFE            
IO$_WRITELBLK  = 00000020            IRP$W_BOFF       00000030            UCB$B_DX_SPARE   FFFFFFFF            
IO$_WRITEMARK  = 0000001C            IRP$W_CHAN       00000028            UCB$B_ERTCNT     00000070            
IO$_WRITEOF    = 00000028            IRP$W_FUNC       00000020            UCB$B_ERTMAX     00000071            
IO$_WRITEPBLK  = 0000000B            IRP$W_OBCNT      0000003E            UCB$B_ESCAPE     0000004B            
IO$_WRITETRACKD= 0000000F            IRP$W_SIZE       00000008            UCB$B_FEX        00000076            
IO$_WRITEVBLK  = 00000030            IRP$W_STS        0000002A            UCB$B_FIPL       0000000B            
IRP$B_CARCON     00000038            IRP$W_TT_PRMPT   0000003C            UCB$B_LOCSRV     0000003C            
IRP$B_EFN        00000022            MAXMSG         = 0000000A            UCB$B_OFFNDX     00000090            
IRP$B_PRI        00000023            MAXTIM         = 0000001E            UCB$B_OFFRTC     00000091            
IRP$B_RMOD       0000000B            PR$_ACCR       = 00000029            UCB$B_REMSRV     0000003D            
IRP$B_TYPE       0000000A            PR$_ACCS       = 00000028            UCB$B_SECTORS    0000003C            
IRP$C_LENGTH     0000004C            PR$_ASTLVL     = 00000013            UCB$B_SLAVE      00000074            
IRP$K_LENGTH     0000004C            PR$_ESP        = 00000001            UCB$B_SPR        00000075            
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     22-AUG-1978 00:09:49   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (1)

UCB$B_STATE      00000052            UCB$M_NOCNVRT  = 00000004            UCB$W_DC         0000008A            
UCB$B_TRACKS     0000003D            UCB$M_NT_BFROVF= 00000004            UCB$W_DEVBUFSIZ  0000003A            
UCB$B_TYPE       0000000A            UCB$M_NT_BREAK = 00000020            UCB$W_DEVSTS     0000005A            
UCB$B_VERTSZ     0000003F            UCB$M_NT_NAME  = 00000010            UCB$W_DSTADDR    00000018            
UCB$C_LENGTH     00000074            UCB$M_NT_NONTR = 00000040            UCB$W_DX_BCR     FFFFFFFC            
UCB$C_LOGLNK   = 00000001            UCB$M_NT_SDP   = 00000008            UCB$W_EC1        0000008C            
UCB$K_LENGTH     00000074            UCB$M_ONLINE   = 00000010            UCB$W_EC2        0000008E            
UCB$L_AMB        00000054            UCB$M_POWER    = 00000020            UCB$W_ERRCNT     00000072            
UCB$L_ASTQBL     00000010            UCB$M_PRMMBX   = 00000001            UCB$W_FUNC       00000084            
UCB$L_ASTQFL     0000000C            UCB$M_TIM      = 00000001            UCB$W_MB_SEED    FFFFFFFC            
UCB$L_CPID       0000005C            UCB$M_TIMOUT   = 00000040            UCB$W_MSGCNT     00000016            
UCB$L_CRB        00000020            UCB$M_TT_NOTIF = 00000004            UCB$W_MSGMAX     00000014            
UCB$L_DDB        00000024            UCB$M_TT_TIMO  = 00000002            UCB$W_NT_CHAN    0000007C            
UCB$L_DEVCHAR    00000034            UCB$M_VALID    = 00000800            UCB$W_OFFSET     00000086            
UCB$L_DEVDEPEND  0000003C            UCB$S_LNKPRI   = 00000002            UCB$W_REFC       00000050            
UCB$L_DPC        0000007C            UCB$S_LTYPE    = 00000002            UCB$W_SIZE       00000008            
UCB$L_DUETIM     0000005C            UCB$T_PARTNER    0000000C            UCB$W_SRCADDR    0000001A            
UCB$L_DX_BFPNT   FFFFFFF4            UCB$V_BACKP    = 00000005            UCB$W_STS        00000058            
UCB$L_DX_BUF     FFFFFFF0            UCB$V_BSY      = 00000008            UCB$W_UNIT       00000048            
UCB$L_DX_RXDB    FFFFFFF8            UCB$V_CANCEL   = 00000003            UCB$W_VPROT      0000001A            
UCB$L_EMB        00000078            UCB$V_DEADMO   = 0000000A            WCB$B_ACCESS     0000000B            
UCB$L_FIRST      00000014            UCB$V_DELMBX   = 00000001            WCB$B_TYPE       0000000A            
UCB$L_FPC        0000000C            UCB$V_DIAGBUF  = 00000001            WCB$C_LENGTH     00000024            
UCB$L_FQBL       00000004            UCB$V_DX_WRITE = 00000003            WCB$C_MAP        00000024            
UCB$L_FQFL       00000000            UCB$V_ECC      = 00000000            WCB$K_LENGTH     00000024            
UCB$L_FR3        00000010            UCB$V_ERLOGIP  = 00000002            WCB$K_MAP        00000024            
UCB$L_FR4        00000014            UCB$V_INT      = 00000001            WCB$L_FCB        00000018            
UCB$L_IOQBL      00000044            UCB$V_INTTYPE  = 00000007            WCB$L_LBN        00000002            
UCB$L_IOQFL      00000040            UCB$V_JOB      = 00000000            WCB$L_ORGUCB     00000010            
UCB$L_IRP        0000004C            UCB$V_LNKPRI   = 00000006            WCB$L_P1_LBN     00000026            
UCB$L_LINK       0000002C            UCB$V_LTYPE    = 00000000            WCB$L_P2_LBN     0000002C            
UCB$L_LOGADR     00000064            UCB$V_MOUNTING = 00000009            WCB$L_PID        0000000C            
UCB$L_MAXBLOCK   00000080            UCB$V_MSGACK   = 00000004            WCB$L_PREVLBN    FFFFFFFC            
UCB$L_MEDIA      00000088            UCB$V_MSGFLO   = 00000003            WCB$L_RVT        0000001C            
UCB$L_NT_DATSSB  00000074            UCB$V_NOCNVRT  = 00000002            WCB$L_STVBN      00000020            
UCB$L_NT_INTSSB  00000078            UCB$V_NT_BFROVF= 00000002            WCB$L_WLBL       00000004            
UCB$L_OPCNT      00000060            UCB$V_NT_BREAK = 00000005            WCB$L_WLFL       00000000            
UCB$L_OWNUIC     0000001C            UCB$V_NT_NAME  = 00000004            WCB$M_NOTFCP   = 00000004            
UCB$L_PID        00000028            UCB$V_NT_NONTR = 00000006            WCB$M_READ     = 00000001            
UCB$L_RQBL       00000004            UCB$V_NT_SDP   = 00000003            WCB$M_SHRWCB   = 00000008            
UCB$L_RQFL       00000000            UCB$V_ONLINE   = 00000004            WCB$M_WRITE    = 00000002            
UCB$L_SVAPTE     00000068            UCB$V_POWER    = 00000005            WCB$V_DLOCK    = 00000001            
UCB$L_SVPN       00000064            UCB$V_PRMMBX   = 00000000            WCB$V_NOREAD   = 0000000A            
UCB$L_TTCHAR     0000003C            UCB$V_SEGFLO   = 00000002            WCB$V_NOTFCP   = 00000002            
UCB$L_VCB        00000030            UCB$V_TIM      = 00000000            WCB$V_NOWRITE  = 00000000            
UCB$M_BSY      = 00000100            UCB$V_TIMOUT   = 00000006            WCB$V_READ     = 00000000            
UCB$M_CANCEL   = 00000008            UCB$V_TT_NOTIF = 00000002            WCB$V_READCK   = 00000009            
UCB$M_DEADMO   = 00000400            UCB$V_TT_TIMO  = 00000001            WCB$V_SEQONLY  = 00000006            
UCB$M_DELMBX   = 00000002            UCB$V_VALID    = 0000000B            WCB$V_SHRWCB   = 00000003            
UCB$M_DIAGBUF  = 00000002            UCB$W_BCNT       0000006E            WCB$V_SPOOL    = 00000004            
UCB$M_DX_WRITE = 00000008            UCB$W_BCR        00000092            WCB$V_WRITE    = 00000001            
UCB$M_ECC      = 00000001            UCB$W_BOFF       0000006C            WCB$V_WRITEAC  = 00000008            
UCB$M_ERLOGIP  = 00000004            UCB$W_BUFQUO     00000018            WCB$V_WRITECK  = 00000005            
UCB$M_INT      = 00000002            UCB$W_BYTESTOGO  0000003E            WCB$W_ACON       00000014            
UCB$M_INTTYPE  = 00000080            UCB$W_CHARGE     0000004A            WCB$W_COUNT      00000000            
UCB$M_JOB      = 00000001            UCB$W_CYLINDERS  0000003E            WCB$W_NMAP       00000016            
UCB$M_MOUNTING = 00000200            UCB$W_DA         00000088            WCB$W_P1_COUNT   00000024            
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     22-AUG-1978 00:09:49   VAX-11 MACRO X0.3-11               Page  13
SYMBOL TABLE                                                                                                                     (1)

WCB$W_P2_COUNT   0000002A            
WCB$W_PREVCOUNT  FFFFFFFA            
WCB$W_REFCNT     0000000E            
WCB$W_SIZE       00000008            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFF      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$$$260           00000414      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT QUAD  
WIONONPAGED      0000012B      04     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
6148. BYTES LEFT IN FREE MEMORY POOL.
4854. BYTES OF RECLAIMED MEMORY.
OBJ$:ERRORLOG,LIS$:ERRORLOG/-SP=LIB$:LIB/ML,SRC$:ERRORLOG
11 MLB DIR RDS - 1098 GETS TO DEFINE 22 MACROS. 75 INTER. FILE WRITES. 
