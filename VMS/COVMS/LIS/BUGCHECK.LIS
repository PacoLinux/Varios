BUGCHECK        - SOFTWARE BUG CHECK ERROR LOGIC                 22-AUG-1978 00:21:45   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)     114  BUG CHECK ERROR MESSAGE PROCESSING
BUGCHECK        - SOFTWARE BUG CHECK ERROR LOGIC                 22-AUG-1978 00:21:45   VAX-11 MACRO X0.3-11               Page   1
00                                                                                                                               (1)

                                     0000     1 	.TITLE	BUGCHECK - SOFTWARE BUG CHECK ERROR LOGIC
                                     0000     2 	.IDENT	/00/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1978
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; D. N. CUTLER 29-OCT-77
                                     0000    24 ;
                                     0000    25 ; MODIFICATIONS:
                                     0000    26 ;
                                     0000    27 ;	C. A. MONIA - 5-MAR-1978
                                     0000    28 ;
                                     0000    29 ;		MODIFIED FOR STAND-ALONE SYSTEM
                                     0000    30 ;
                                     0000    31 ; SOFTWARE BUG CHECK ERROR LOGIC
                                     0000    32 ;
                                     0000    33 ; MACRO LIBRARY CALLS
                                     0000    34 ;
                                     0000    35  
                                     0000    36 	$EMBDEF				;DEFINE EMB OFFSETS
                                     0000    37 	$PCBDEF				;DEFINE PCB OFFSETS
                                     0000    38 	$PRDEF				;DEFINE PROCESSOR REGISTERS
                                     0000    39 	$PRVDEF				;DEFINE PRIVILEGE BITS
                                     0000    40 	$PSLDEF				;DEFINE PROCESSOR STATUS BITS
                                     0000    41 	$SSDEF				;DEFINE SYSTEM STATUS VALUES
                                     0000    42 	$STSDEF				;DEFINE STATUS CODE FIELDS
                                     0000    43  
                                     0000    44 ;
                                     0000    45 ; LOCAL SYMBOLS
                                     0000    46 ;
                                     0000    47 ; CHARACTER CODE DEFINITIONS
                                     0000    48 ;
                                     0000    49  
                           0000000D  0000    50 CR=13					;CARRIAGE RETURN
                           0000000A  0000    51 LF=10					;LINE FEED
                                     0000    52  
                                     0000    53 ;
                                     0000    54 ; LOCAL DATA
                                     0000    55 ;
                                     0000    56 ; BUG CHECK MESSAGE CONTROL TEXT
                                     0000    57 ;
BUGCHECK        - SOFTWARE BUG CHECK ERROR LOGIC                 22-AUG-1978 00:21:45   VAX-11 MACRO X0.3-11               Page   2
00                                                                                                                               (1)

                                     0000    58  
                                 00000000    59 	.PSECT	A$EXENONPAGED
                                     0000    60 MSGCTRL:				;
41 54 41 46 20 2A 2A 2A 2A 0A 0A 0D  0000    61 	.ASCIZ	<CR><LF><LF>/**** FATAL BUG CHECK / ;
20 4B 43 45 48 43 20 47 55 42 20 4C  000C       
                                 00  0018       
45 54 53 49 47 45 52 20 20 20 20 0A  0019    62 	.ASCII	<LF>/    REGISTER DUMP/<CR><LF><LF> ;
         0A 0A 0D 50 4D 55 44 20 52  0025       
               00 20 3D 20 30 52 09  002E    63 	.ASCIZ	/	R0 = /		;
               00 20 3D 20 31 52 09  0035    64 	.ASCIZ	/	R1 = /		;
               00 20 3D 20 32 52 09  003C    65 	.ASCIZ	/	R2 = /		;
               00 20 3D 20 33 52 09  0043    66 	.ASCIZ	/	R3 = /		;
               00 20 3D 20 34 52 09  004A    67 	.ASCIZ	/	R4 = /		;
               00 20 3D 20 35 52 09  0051    68 	.ASCIZ	/	R5 = /		;
               00 20 3D 20 36 52 09  0058    69 	.ASCIZ	/	R6 = /		;
               00 20 3D 20 37 52 09  005F    70 	.ASCIZ	/	R7 = /		;
               00 20 3D 20 38 52 09  0066    71 	.ASCIZ	/	R8 = /		;
               00 20 3D 20 39 52 09  006D    72 	.ASCIZ	/	R9 = /		;
               00 20 3D 30 31 52 09  0074    73 	.ASCIZ	/	R10= /		;
               00 20 3D 31 31 52 09  007B    74 	.ASCIZ	/	R11= /		;
               00 20 3D 20 50 41 09  0082    75 	.ASCIZ	/	AP = /		;
               00 20 3D 20 50 46 09  0089    76 	.ASCIZ	/	FP = /		;
               00 20 3D 20 50 53 09  0090    77 	.ASCIZ	/	SP = /		;
               00 20 3D 20 43 50 09  0097    78 	.ASCIZ	/	PC = /		;
               00 20 3D 4C 53 50 09  009E    79 	.ASCIZ	/	PSL= /		;
44 20 4B 43 41 54 53 20 20 20 20 0A  00A5    80 	.ASCII	<LF>/    STACK DUMP/<CR><LF><LF><128> ;
               80 0A 0A 0D 50 4D 55  00B1       
                                     00B8    81  
                                     00B8    82 ;
                                     00B8    83 ; PROCESSOR REGISTER DUMP CONTROL TABLE
                                     00B8    84 ;
                                     00B8    85  
                                     00B8    86 REGTAB:					;
                                 00  00B8    87 	.BYTE	PR$_KSP			;KERNEL STACK POINTER
                                 01  00B9    88 	.BYTE	PR$_ESP			;EXECUTIVE STACK POINTER
                                 02  00BA    89 	.BYTE	PR$_SSP			;SUPERVISOR STACK POINTER
                                 03  00BB    90 	.BYTE	PR$_USP			;USER STACK POINTER
                                 04  00BC    91 	.BYTE	PR$_ISP			;INTERRUPT STACK POINTER
                                 80  00BD    92 	.BYTE	128			;TABLE ESCAPE
                                 08  00BE    93 	.BYTE	PR$_P0BR		;PROGRAM REGION BASE REGISTER
                                 09  00BF    94 	.BYTE	PR$_P0LR		;PROGRAM REGION LIMIT REGISTER
                                 0A  00C0    95 	.BYTE	PR$_P1BR		;CONTROL REGION BASE REGISTER
                                 0B  00C1    96 	.BYTE	PR$_P1LR		;CONTROL REGION LIMIT REGISTER
                                 0C  00C2    97 	.BYTE	PR$_SBR			;SYSTEM BASE REGISTER
                                 0D  00C3    98 	.BYTE	PR$_SLR			;SYSTEM LIMIT REGISTER
                                 10  00C4    99 	.BYTE	PR$_PCBB		;PROCESS CONTROL BLOCK BASE REGISTER
                                 11  00C5   100 	.BYTE	PR$_SCBB		;SYSTEM CONTROL BLOCK BASE REGISTER
                                 13  00C6   101 	.BYTE	PR$_ASTLVL		;AST DELIVERY LEVEL REGISTER
                                 15  00C7   102 	.BYTE	PR$_SISR		;SOFTWARE INTERRUPT SUMMARY REGISTER
                                 18  00C8   103 	.BYTE	PR$_ICCS		;INTERVAL TIMER CONTROL REGISTER
                                 1A  00C9   104 	.BYTE	PR$_ICR			;INTERVAL COUNT REGISTER
                                 1B  00CA   105 	.BYTE	PR$_TODR		;TIME OF DAY REGISTER
                                 28  00CB   106 	.BYTE	PR$_ACCS		;ACCELERATOR CONTROL REGISTER
                                 30  00CC   107 	.BYTE	PR$_SBIFS		;SBI FAULT STATUS REGISTER
                                 32  00CD   108 	.BYTE	PR$_SBISC		;SBI COMPARATOR REGISTER
                                 33  00CE   109 	.BYTE	PR$_SBIMT		;SBI MAINTENANCE REGISTER
                                 34  00CF   110 	.BYTE	PR$_SBIER		;SBI ERROR REGISTER
BUGCHECK        - SOFTWARE BUG CHECK ERROR LOGIC                 22-AUG-1978 00:21:45   VAX-11 MACRO X0.3-11               Page   3
00                                                                                                                               (1)

                                 35  00D0   111 	.BYTE	PR$_SBITA		;SBI TIME OUT REGISTER
                                 80  00D1   112 	.BYTE	128			;TABLE ESCAPE
BUGCHECK        - SOFTWARE BUG CHECK ERROR LOGIC                 22-AUG-1978 00:21:45   VAX-11 MACRO X0.3-11               Page   4
00              BUG CHECK ERROR MESSAGE PROCESSING                                                                               (1)

                                     00D2   114 	.SBTTL	BUG CHECK ERROR MESSAGE PROCESSING
                                     00D2   115 ;+
                                     00D2   116 ; EXE$BUG_CHECK - BUG CHECK ERROR MESSAGE PROCESSING
                                     00D2   117 ;
                                     00D2   118 ;
                                     00D2   119 ; THIS ROUTINE IS CALLED BY EXECUTING THE OPERATION CODE ^XFFFF, WHICH IS
                                     00D2   120 ; RESERVED FOR DIGITAL AND IS GUARANTEED TO ALWAYS CAUSE AN EXCEPTION.
                                     00D2   121 ;
                                     00D2   122 ; INPUTS:
                                     00D2   123 ;
                                     00D2   124 ;	THE CURRENT PROCESS PCB.
                                     00D2   125 ;	THE ENTIRE PROCESSOR STATE (I.E. GENERAL REGISTERS, ETC.).
                                     00D2   126 ;	THE BUG CHECK CODE WHICH FOLLOWS IMMEDIATELY INLINE.
                                     00D2   127 ;
                                     00D2   128 ; OUTPUTS:
                                     00D2   129 ;
                                     00D2   130 ;	THE SYSTEM IS SHUT DOWN IN AN ORDERLY MANNER AND THE CRASH RESTART
                                     00D2   131 ;	ROUTINE IS EXECUTED.
                                     00D2   132 ;
                                     00D2   133 ;	IF AN ACCESS VIOLATION IS DETECTED WHILE ATTEMPTING TO FETCH THE BUG
                                     00D2   134 ;	CHECK CODE, THE EXCEPTION IS TURNED INTO AN ACCESS VIOLATION.
                                     00D2   135 ;
                                     00D2   136 ;-
                                     00D2   137  
                                     00D2   138 EXE$BUG_CHECK::				;BUG CHECK ERROR PROCESSING
                     7FFF 8F     BB  00D2   139 	PUSHR	#^M<R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,AP,FP,SP> ;SAVE
            5D         3C AE     D0  00D6   140 	MOVL	15*4(SP),FP		;GET ADDRESS OF INSTRUCTION
                                     00DA   141 	IFRD	#2,2(FP),20$		;CAN LOWER HALF OF BUG CHECK CODE BE READ?
                     7FFF 8F     BA  00E1   142 10$:	POPR	#^M<R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,AP,FP,SP> ;RESTORE
                          6E     DD  00E5   143 	PUSHL	(SP)			;DUPLICATE ADDRESS OF INSTRUCTION
            6E            02     C0  00E7   144 	ADDL	#2,(SP)			;CALCULATE ADDRESS OF VIOLATION
                          00     DD  00EA   145 	PUSHL	#0			;SET REASON CODE
                          FF11'  31  00EC   146 	BRW	EXE$ACVIOLAT		;
                                     00EF   147  
                                     00EF   148 ;
                                     00EF   149 ; BUG CHECK CODE CAN BE READ
                                     00EF   150 ;
                                     00EF   151  
            5C            5E     D0  00EF   152 20$:	MOVL	SP,AP			;SET ADDRESS OF SAVED REGISTERS
            5B         C3 AF     9E  00F2   153 	MOVAB	REGTAB,R11		;GET ADDRESS OF PROCESSOR REGISTER TABLE
                          5A     DC  00F6   154 	MOVPSL	R10			;READ CURRENT PROCESSOR STATUS
                          16     ED  00F8   155 	CMPZV	#PSL$V_PRVMOD,#PSL$S_PRVMOD,- ;PREVIOUS MODE EXEC OR KERNEL?
            5A            02         00FA   156 		R10,#PSL$C_EXEC		;
                          01         00FC       
                          14     15  00FD   157 	BLEQ	70$			; IF LEQ YES
                                     00FF   158 	IFNORD	#2,4(FP),10$		;CAN UPPER HALF OF BUG CHECK CODE BE READ?
            5D         02 AD     D0  0106   159 	MOVL	2(FP),FP		;GET BUG CHECK CODE
         3C AE            06     C0  010A   160 	ADDL	#6,15*4(SP)		;CALCULATE ADDRESS OF NEXT INSTRUCTION
            54       0000'CF     D0  010E   161 	MOVL	W^SCH$GL_CURPCB,R4	;GET CURRENT PROCESS PCB ADDRESS
                                     0113   162  
                                     0113   163  
                                     0113   164 ;
                                     0113   165 ; PREVIOUS MODE WAS EXECUTIVE OR KERNEL
                                     0113   166 ;
                                     0113   167  
            59            28     3C  0113   168 70$:	MOVZWL	#EMB$K_SBC,R9		;SET ENTRY TYPE
            5D         02 AD     3C  0116   169 	MOVZWL	2(FP),FP		;GET BUG CHECK CODE
BUGCHECK        - SOFTWARE BUG CHECK ERROR LOGIC                 22-AUG-1978 00:21:45   VAX-11 MACRO X0.3-11               Page   5
00              BUG CHECK ERROR MESSAGE PROCESSING                                                                               (1)

         3C AE            04     C0  011A   170 	ADDL	#4,15*4(SP)		;CALCULATE ADDRESS OF NEXT INSTRUCTION
                                     011E   171  
                                     011E   172 ;
                                     011E   173 ; SHUT DOWN SYSTEM IN AN ORDERLY MANNER
                                     011E   174 ;
                                     011E   175  
                                     011E   176 80$:	SETIPL	#31			;DISABLE ALL INTERRUPTS
            51       0176 8F     3C  0121   177 	MOVZWL	#EMB$K_CR_LENGTH+PCB$K_LENGTH,R1 ;GET LENGTH OF CRASH MESSAGE
                          FED7'  30  0126   178 	BSBW	ERL$ALLOCEMB		;ALLOCATE ERROR MESSAGE BUFFER
            15            50     E9  0129   179 	BLBC	R0,100$			;IF LBC ALLOCATION FAILURE
            59            25     3C  012C   180 	MOVZWL	#EMB$K_CR,R9		;SET TYPE OF ENTRY
                          00B3   30  012F   181 	BSBW	BUILD_HEADER		;BUILD HEADER AND DUMP REGISTERS
                          00E7   30  0132   182 	BSBW	DUMP_REGISTERS		;DUMP REMAINDER OF PROCESSOR REGISTERS
            51            10     D0  0135   183 	MOVL	#16,R1			;SET DEPTH OF SBI SILO
            80            31     DB  0138   184 90$:	MFPR	#PR$_SBIS,(R0)+		;INSERT SBI SILO ENTRY
            FA            51     F5  013B   185 	SOBGTR	R1,90$			;ANY MORE ENTRIES IN SILO?
                          00BF   30  013E   186 	BSBW	DUMP_PCB		;DUMP SOFTWARE PCB
                          5D     DD  0141   187 100$:	PUSHL	FP			;SAVE BUG CHECK CODE
            5C            5E     D0  0143   188 	MOVL	SP,AP			;SET ADDRESS OF REGISTERS
                          5B     D4  0146   189 	CLRL	R11			;SET FOR CONSOLE TERMINAL OUTPUT
            59       FEB4 CF     9E  0148   190 	MOVAB	MSGCTRL,R9		;GET ADDRESS OF CONTROL TEXT
            50            89     98  014D   191 110$:	CVTBL	(R9)+,R0		;GET NEXT BYTE FROM CONTROL TEXT
                          37     19  0150   192 	BLSS	130$			;IF LSS END OF TEXT
                          05     13  0152   193 	BEQL	120$			;IF EQL ESCAPE CHARACTER
                          FEA9'  30  0154   194 	BSBW	EXE$OUTCHAR		;OUTPUT CHARACTER
                          F4     11  0157   195 	BRB	110$			;
            51            8C     D0  0159   196 120$:	MOVL	(AP)+,R1		;GET NEXT LONGWORD TO CONVERT
            59   00000019'8F     D1  015C   197 	CMPL	#MSGCTRL+25,R9		;*****TEMP******
                          1C     12  0163   198 	BNEQ	127$			;*****TEMP******
            5D            08     C7  0165   199 	DIVL3	#8,FP,R0		;*****TEMP******
                          50         0168       
            51   00000000'EF     9E  0169   200 	MOVAB	BUG$T_MESSAGES,R1	;*****TEMP******
            52            81     9A  0170   201 125$:	MOVZBL	(R1)+,R2		;*****TEMP******
            51            52     C0  0173   202 	ADDL	R2,R1			;*****TEMP******
            F7            50     F5  0176   203 	SOBGTR	R0,125$			;*****TEMP******
                          FE84'  30  0179   204 	BSBW	EXE$OUTCSTRING		;*****TEMP******
                          FE81'  30  017C   205 	BSBW	EXE$OUTCRLF		;*****TEMP******
                          CC     11  017F   206 	BRB	110$			;*****TEMP******
                                     0181   207 127$:					;*****TEMP******
                          FE7C'  30  0181   208 	BSBW	EXE$OUTHEX		;OUTPUT CONVERTED HEX LONGWORD
                          FE79'  30  0184   209 	BSBW	EXE$OUTCRLF		;OUTPUT CARRIAGE RETURN, LINE FEED PAIR
                          C4     11  0187   210 	BRB	110$			;
            59         40 8F     9A  0189   211 130$:	MOVZBL	#64,R9			;SET LOOP COUNT
                                     018D   212 140$:	IFNORD	#4,(AP),160$		;CAN NEXT LONGWORD OF STACK BE READ?
            5C   00000000'8F     D1  0193   213 	CMPL	#SYS$ISPINI,AP		;BEYOND END OF INTERRUPT STACK?
                          2B     1B  019A   214 	BLEQU	160$			;IF LEQU YES
            5A            1A     E0  019C   215 	BBS	#PSL$V_IS,R10,150$	;IF SET, ON INTERRUPT STACK
                          09         019F       
   00000000'9F            5C     D1  01A0   216 	CMPL	AP,@#CTL$AL_STACK	;BEYOND END OF KERNEL STACK?
                          1E     1E  01A7   217 	BGEQU	160$			;IF GEQU YES
            50            09     9A  01A9   218 150$:	MOVZBL	#^A/	/,R0		;GET TAB CHARACTER
                          FE51'  30  01AC   219 	BSBW	EXE$OUTCHAR		;OUTPUT TAB CHARACTER
            51            5C     D0  01AF   220 	MOVL	AP,R1			;GET ADDRESS OF LONGWORD TO CONVERT
                          FE4B'  30  01B2   221 	BSBW	EXE$OUTHEX		;CONVERT ADDRESS OF LONGWORD
                          FE48'  30  01B5   222 	BSBW	EXE$OUTBLANK		;OUTPUT BLANK CHARACTER
                          FE45'  30  01B8   223 	BSBW	EXE$OUTBLANK		;OUTPUT BLANK CHARACTER
            51            8C     D0  01BB   224 	MOVL	(AP)+,R1		;GET CONTENTS OF LONGWORD TO OUTPUT
BUGCHECK        - SOFTWARE BUG CHECK ERROR LOGIC                 22-AUG-1978 00:21:45   VAX-11 MACRO X0.3-11               Page   6
00              BUG CHECK ERROR MESSAGE PROCESSING                                                                               (1)

                          FE3F'  30  01BE   225 	BSBW	EXE$OUTHEX		;OUTPUT CONVERTED HEX LONGWORD
                          FE3C'  30  01C1   226 	BSBW	EXE$OUTCRLF		;OUTPUT CARRIAGE RETURN, LINE FEED PAIR
            C6            59     F5  01C4   227 	SOBGTR	R9,140$			;ANY MORE LONGWORDS TO CONVERT?
                          8E     D5  01C7   228 160$:	TSTL	(SP)+			;REMOVE BUG CHECK CODE FROM STACK
                     7FFF 8F     BA  01C9   229 	POPR	#^M<R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,AP,FP,SP> ;RESTORE
   00000000'EF   00000000'8F     E0  01CD   230 	BBS	#EXE$V_BUGREBOOT,EXE$GL_FLAGS,REBOOT	; CHECK FOR REBOOT
                          04         01D8       
                          FE24'  30  01D9   231 	BSBW	INI$BRK			;******TEMP*********
                                 02  01DC   232 	REI				;******TEMP*********
                                     01DD   233 REBOOT:					;INITIATE REBOOT BY TRIGGERING CONSOLE
            23   00000F02 8F     DA  01DD   234 	MTPR	#^XF02,#PR$_TXDB	;GIVE REBOOT COMMAND
                                 00  01E4   235 	HALT				;AND HALT TO ALLOW IT TO OCCUR
                                     01E5   236  
                                     01E5   237 ;
                                     01E5   238 ; SUBROUTINE TO BUILD HEADER AND DUMP GENERAL REGISTERS
                                     01E5   239 ;
                                     01E5   240  
                                     01E5   241 BUILD_HEADER:				;
            52            04     C1  01E5   242 	ADDL3	#EMB$K_LENGTH,R2,R0	;CALCULATE ADDRESS TO STORE INFORMATION
                          50         01E8       
            80            59     B0  01E9   243 	MOVW	R9,(R0)+		;INSERT TYPE OF ENTRY
            80       0000'CF     7D  01EC   244 	MOVQ	W^EXE$GQ_SYSTIME,(R0)+	;INSERT CURRENT TIME
            80            51     B0  01F1   245 	MOVW	R1,(R0)+		;INSERT ERROR SEQUENCE NUMBER
                          26     10  01F4   246 	BSBB	DUMP_REGISTERS		;INSERT PROCESSOR STACK POINTERS
            51            11     D0  01F6   247 	MOVL	#<EMB$L_BC_PSL+4-EMB$L_BC_R0>/4,R1 ;SET NUMBER OF REGISTERS
            80            8C     D0  01F9   248 10$:	MOVL	(AP)+,(R0)+		;INSERT GENERAL REGISTER
            FA            51     F5  01FC   249 	SOBGTR	R1,10$			;ANY MORE REGISTERS TO INSERT?
                                 05  01FF   250 	RSB				;
                                     0200   251  
                                     0200   252 ;
                                     0200   253 ; SUBROUTINE TO DUMP SOFTWARE PCB
                                     0200   254 ;
                                     0200   255  
                                     0200   256 DUMP_PCB:				;
            80            5D     D0  0200   257 	MOVL	FP,(R0)+		;INSERT BUGCHECK CODE
            80       007C 8F     B0  0203   258 	MOVW	#PCB$K_LENGTH,(R0)+	;INSERT LENGTH OF SOFTWARE PCB
                          52     DD  0208   259 	PUSHL	R2			;SAVE ADDRESS OF ERROR MESSAGE BUFFER
            51       0000'CF     D0  020A   260 	MOVL	W^SCH$GL_CURPCB,R1	;GET CURRENT PROCESS PCB ADDRESS
            61       007C 8F     28  020F   261 	MOVC	#PCB$K_LENGTH,(R1),(R0)	;INSERT SOFTWARE PCB
                          60         0214       
                          52   8ED0  0215   262 	POPL	R2			;RETRIEVE ADDRESS OF ERROR MESSAGE BUFFER
                          FDE5'  30  0218   263 	BSBW	ERL$RELEASEMB		;RELEASE ERROR MESSAGE BUFFER
                                 05  021B   264 RETURN:	RSB				;
                                     021C   265  
                                     021C   266 ;
                                     021C   267 ; SUBROUTINE TO DUMP PROCESSOR REGISTERS UNTIL ESCAPE
                                     021C   268 ;
                                     021C   269  
                                     021C   270 DUMP_REGISTERS:				;
            51            8B     98  021C   271 	CVTBL	(R11)+,R1		;GET NEXT INTERNAL REGISTER NUMBER
                          FA     19  021F   272 	BLSS	RETURN			;IF LSS ESCAPE
            80            51     DB  0221   273 	MFPR	R1,(R0)+		;INSERT PROCESSOR REGISTER
                          F6     11  0224   274 	BRB	DUMP_REGISTERS		;
                                     0226   275  
                                     0226   276 	.END
BUGCHECK        - SOFTWARE BUG CHECK ERROR LOGIC                 22-AUG-1978 00:21:45   VAX-11 MACRO X0.3-11               Page   7
SYMBOL TABLE                                                                                                                     (1)

BIT...         = 00000020            EMB$L_BC_R6      0000003C            EMB$Q_BC_TIME    00000006            
BUG$T_MESSAGES   ********   X   03   EMB$L_BC_R7      00000040            EMB$Q_CR_TIME    00000006            
BUILD_HEADER     000001E5 R     03   EMB$L_BC_R8      00000044            EMB$Q_DV_ERTIME  00000014            
CR             = 0000000D            EMB$L_BC_R9      00000048            EMB$Q_DV_IOSB    00000008            
CTL$AL_STACK     ********   X   03   EMB$L_BC_SP      0000005C            EMB$Q_SS_TIME    00000006            
DUMP_PCB         00000200 R     03   EMB$L_BC_SSP     00000018            EMB$Q_TS_TIME    00000006            
DUMP_REGISTERS   0000021C R     03   EMB$L_BC_USP     0000001C            EMB$T_DV_NAME    00000040            
EMB$B_BC_PCB     0000006E            EMB$L_CR_ACCS    0000009C            EMB$W_BC_ENTRY   00000004            
EMB$B_BUFIND     00000002            EMB$L_CR_AP      00000054            EMB$W_BC_ERRSEQ  0000000E            
EMB$B_DV_CLASS   00000012            EMB$L_CR_ASTLVL  00000088            EMB$W_BC_PCBSZ   0000006C            
EMB$B_DV_ERTCNT  00000006            EMB$L_CR_CODE    000000F4            EMB$W_CR_ENTRY   00000004            
EMB$B_DV_ERTMAX  00000007            EMB$L_CR_ESP     00000014            EMB$W_CR_ERRSEQ  0000000E            
EMB$B_DV_SLAVE   0000003C            EMB$L_CR_FP      00000058            EMB$W_CR_PCBSZ   000000F8            
EMB$B_DV_TYPE    00000013            EMB$L_CR_ICCS    00000090            EMB$W_DV_BCNT    00000026            
EMB$B_SS_MSGTXT  00000012            EMB$L_CR_ICR     00000094            EMB$W_DV_BOFF    00000024            
EMB$B_VALID      00000003            EMB$L_CR_ISP     00000020            EMB$W_DV_DEVSTS  00000010            
EMB$C_BC_LENGTH  0000006E            EMB$L_CR_KSP     00000010            EMB$W_DV_ENTRY   00000004            
EMB$C_BE       = 00000004            EMB$L_CR_P0BR    00000068            EMB$W_DV_ERRCNT  0000002E            
EMB$C_CR_LENGTH  000000FA            EMB$L_CR_P0LR    0000006C            EMB$W_DV_FUNC    0000003E            
EMB$C_CS       = 00000020            EMB$L_CR_P1BR    00000070            EMB$W_DV_UNIT    0000002C            
EMB$C_DE       = 00000001            EMB$L_CR_P1LR    00000074            EMB$W_SIZE       00000000            
EMB$C_DT       = 00000096            EMB$L_CR_PC      00000060            EMB$W_SS_ENTRY   00000004            
EMB$C_LENGTH     00000004            EMB$L_CR_PCBB    00000080            EMB$W_SS_ERRSEQ  0000000E            
EMB$C_OM       = 00000028            EMB$L_CR_PSL     00000064            EMB$W_SS_MSGSZ   00000010            
EMB$C_SS       = 00000027            EMB$L_CR_R0      00000024            EMB$W_TS_ENTRY   00000004            
EMB$C_SS_LENGTH  00000012            EMB$L_CR_R1      00000028            EMB$W_TS_ERRSEQ  0000000E            
EMB$C_TS       = 00000026            EMB$L_CR_R10     0000004C            ERL$ALLOCEMB     ********   X   03   
EMB$C_TS_LENGTH  00000010            EMB$L_CR_R11     00000050            ERL$RELEASEMB    ********   X   03   
EMB$C_UI       = 00000061            EMB$L_CR_R2      0000002C            EXE$ACVIOLAT     ********   X   03   
EMB$C_VD       = 00000041            EMB$L_CR_R3      00000030            EXE$BUG_CHECK    000000D2 RG    03   
EMB$C_VM       = 00000040            EMB$L_CR_R4      00000034            EXE$GL_FLAGS     ********   X   03   
EMB$C_WS       = 00000024            EMB$L_CR_R5      00000038            EXE$GQ_SYSTIME   ********   X   03   
EMB$K_BC_LENGTH  0000006E            EMB$L_CR_R6      0000003C            EXE$OUTBLANK     ********   X   03   
EMB$K_CR       = 00000025            EMB$L_CR_R7      00000040            EXE$OUTCHAR      ********   X   03   
EMB$K_CR_LENGTH  000000FA            EMB$L_CR_R8      00000044            EXE$OUTCRLF      ********   X   03   
EMB$K_LENGTH     00000004            EMB$L_CR_R9      00000048            EXE$OUTCSTRING   ********   X   03   
EMB$K_MC       = 00000002            EMB$L_CR_SBIER   000000AC            EXE$OUTHEX       ********   X   03   
EMB$K_SBC      = 00000028            EMB$L_CR_SBIFS   000000A0            EXE$V_BUGREBOOT  ********   X   03   
EMB$K_SS_LENGTH  00000012            EMB$L_CR_SBIMT   000000A8            GBL...         = 00000000            
EMB$K_TS_LENGTH  00000010            EMB$L_CR_SBIS    000000B4            INI$BRK          ********   X   03   
EMB$K_UBC      = 00000080            EMB$L_CR_SBISC   000000A4            LF             = 0000000A            
EMB$L_BC_AP      00000054            EMB$L_CR_SBITA   000000B0            MSGCTRL          00000000 R     03   
EMB$L_BC_CODE    00000068            EMB$L_CR_SBR     00000078            PCB$B_ASTACT     0000000C            
EMB$L_BC_ESP     00000014            EMB$L_CR_SCBB    00000084            PCB$B_ASTEN      0000000D            
EMB$L_BC_FP      00000058            EMB$L_CR_SISR    0000008C            PCB$B_PRI        0000000B            
EMB$L_BC_ISP     00000020            EMB$L_CR_SLR     0000007C            PCB$B_PRIB       00000033            
EMB$L_BC_KSP     00000010            EMB$L_CR_SP      0000005C            PCB$B_TYPE       0000000A            
EMB$L_BC_PC      00000060            EMB$L_CR_SSP     00000018            PCB$B_WEFC       00000032            
EMB$L_BC_PSL     00000064            EMB$L_CR_TODR    00000098            PCB$C_LENGTH     0000007C            
EMB$L_BC_R0      00000024            EMB$L_CR_USP     0000001C            PCB$K_LENGTH     0000007C            
EMB$L_BC_R1      00000028            EMB$L_DV_CHAR    00000038            PCB$L_ASTQBL     00000014            
EMB$L_BC_R10     0000004C            EMB$L_DV_ERRSEQ  0000001C            PCB$L_ASTQFL     00000010            
EMB$L_BC_R11     00000050            EMB$L_DV_MEDIA   00000028            PCB$L_EFC2P      00000058            
EMB$L_BC_R2      0000002C            EMB$L_DV_OPCNT   00000030            PCB$L_EFC3P      0000005C            
EMB$L_BC_R3      00000030            EMB$L_DV_OWNUIC  00000034            PCB$L_EFCS       00000050            
EMB$L_BC_R4      00000034            EMB$L_DV_REGSAV  00000050            PCB$L_EFCU       00000054            
EMB$L_BC_R5      00000038            EMB$L_DV_RQPID   00000020            PCB$L_EFWM       0000004C            
BUGCHECK        - SOFTWARE BUG CHECK ERROR LOGIC                 22-AUG-1978 00:21:45   VAX-11 MACRO X0.3-11               Page   8
SYMBOL TABLE                                                                                                                     (1)

PCB$L_OWNER      0000001C            PR$_ICR        = 0000001A            PRV$V_SYSNAM   = 00000002            
PCB$L_PHD        00000064            PR$_IPL        = 00000012            PRV$V_TMPMBX   = 0000000F            
PCB$L_PHYPCB     00000018            PR$_ISP        = 00000004            PRV$V_VOLPRO   = 00000015            
PCB$L_PID        00000060            PR$_KSP        = 00000000            PRV$V_WORLD    = 00000010            
PCB$L_PQB        0000004C            PR$_MAPEN      = 00000038            PSL$C_EXEC     = 00000001            
PCB$L_SQBL       00000004            PR$_NICR       = 00000019            PSL$C_KERNEL   = 00000000            
PCB$L_SQFL       00000000            PR$_P0BR       = 00000008            PSL$C_SUPER    = 00000002            
PCB$L_STS        00000028            PR$_P0LR       = 00000009            PSL$C_USER     = 00000003            
PCB$L_UIC        00000020            PR$_P1BR       = 0000000A            PSL$M_CM       = 80000000            
PCB$L_WSSWP      00000024            PR$_P1LR       = 0000000B            PSL$M_CURMOD   = 03000000            
PCB$L_WTIME      0000002C            PR$_PCBB       = 00000010            PSL$M_DV       = 00000080            
PCB$T_LNAME      0000006C            PR$_RXCS       = 00000020            PSL$M_FPD      = 08000000            
PCB$V_ASTPEN   = 00000011            PR$_RXDB       = 00000021            PSL$M_FU       = 00000040            
PCB$V_BATCH    = 0000000E            PR$_SBIER      = 00000034            PSL$M_IPL      = 001F0000            
PCB$V_DELPEN   = 00000001            PR$_SBIFS      = 00000030            PSL$M_IS       = 04000000            
PCB$V_FORCPEN  = 00000002            PR$_SBIMT      = 00000033            PSL$M_IV       = 00000020            
PCB$V_HIBER    = 00000013            PR$_SBIQC      = 00000036            PSL$M_PRVMOD   = 00C00000            
PCB$V_INQUAN   = 00000003            PR$_SBIS       = 00000031            PSL$M_SAFBITS  = 000037FF            
PCB$V_LOGIN    = 00000014            PR$_SBISC      = 00000032            PSL$M_TBIT     = 00000010            
PCB$V_NOACNT   = 0000000F            PR$_SBITA      = 00000035            PSL$M_TP       = 40000000            
PCB$V_PHDRES   = 00000012            PR$_SBR        = 0000000C            PSL$S_CURMOD   = 00000002            
PCB$V_PSWAPM   = 00000004            PR$_SCBB       = 00000011            PSL$S_IPL      = 00000005            
PCB$V_RES      = 00000000            PR$_SID        = 0000003E            PSL$S_PRVMOD   = 00000002            
PCB$V_RESPEN   = 00000005            PR$_SIRR       = 00000014            PSL$V_CM       = 0000001F            
PCB$V_SSFEXC   = 00000006            PR$_SISR       = 00000015            PSL$V_CURMOD   = 00000018            
PCB$V_SSFEXCE  = 00000007            PR$_SLR        = 0000000D            PSL$V_DV       = 00000007            
PCB$V_SSFEXCS  = 00000008            PR$_SSP        = 00000002            PSL$V_FPD      = 0000001B            
PCB$V_SSFEXCU  = 00000009            PR$_TBIA       = 00000039            PSL$V_FU       = 00000006            
PCB$V_SSRWAIT  = 0000000A            PR$_TBIS       = 0000003A            PSL$V_IPL      = 00000010            
PCB$V_SUSPEN   = 0000000B            PR$_TODR       = 0000001B            PSL$V_IS       = 0000001A            
PCB$V_SWPVBN   = 00000010            PR$_TXCS       = 00000022            PSL$V_IV       = 00000005            
PCB$V_WAKEPEN  = 0000000C            PR$_TXDB       = 00000023            PSL$V_PRVMOD   = 00000016            
PCB$V_WALL     = 0000000D            PR$_USP        = 00000003            PSL$V_TBIT     = 00000004            
PCB$W_APTCNT     00000034            PR$_WCSA       = 0000002C            PSL$V_TP       = 0000001E            
PCB$W_ASTCNT     0000003C            PR$_WCSD       = 0000002D            REBOOT           000001DD R     03   
PCB$W_BIOCNT     0000003E            PRV$V_ALLSPOOL = 00000004            REGTAB           000000B8 R     03   
PCB$W_BIOLM      00000040            PRV$V_BUGCHK   = 00000017            RETURN           0000021B R     03   
PCB$W_BYTCNT     00000042            PRV$V_CMEXEC   = 00000001            SCH$GL_CURPCB    ********   X   03   
PCB$W_BYTLM      00000068            PRV$V_CMKRNL   = 00000000            SS$_ABORT      = 0000002C            
PCB$W_DIOCNT     00000044            PRV$V_DETACH   = 00000005            SS$_ACCONFLICT = 00000800            
PCB$W_DIOLM      00000046            PRV$V_DEVCHAR  = 00000011            SS$_ACCVIO     = 0000000C            
PCB$W_FILCNT     00000048            PRV$V_DIAGNOSE = 00000006            SS$_ARITH      = 00000404            
PCB$W_GPGCNT     00000038            PRV$V_EXQUOTA  = 00000013            SS$_ASTFLT     = 0000040C            
PCB$W_GRP        00000022            PRV$V_GROUP    = 00000008            SS$_BADATTRIB  = 00000034            
PCB$W_MEM        00000020            PRV$V_GRPNAM   = 00000003            SS$_BADCHKSUM  = 00000808            
PCB$W_MTXCNT     0000000E            PRV$V_LOG_IO   = 00000007            SS$_BADESCAPE  = 0000003C            
PCB$W_PPGCNT     0000003A            PRV$V_NETMBX   = 00000014            SS$_BADFILEHDR = 00000810            
PCB$W_PRCCNT     0000006A            PRV$V_NOACNT   = 00000009            SS$_BADFILENAME= 00000818            
PCB$W_SIZE       00000008            PRV$V_OPER     = 00000012            SS$_BADFILEVER = 00000820            
PCB$W_STATE      00000030            PRV$V_PHY_IO   = 00000016            SS$_BADIMGHDR  = 00000044            
PCB$W_TMBU       00000036            PRV$V_PRMCEB   = 0000000A            SS$_BADIRECTORY= 00000828            
PCB$W_TQCNT      0000004A            PRV$V_PRMGBL   = 00000018            SS$_BADPARAM   = 00000014            
PR$_ACCR       = 00000029            PRV$V_PRMMBX   = 0000000B            SS$_BADSTACK   = 000002B4            
PR$_ACCS       = 00000028            PRV$V_PSWAPM   = 0000000C            SS$_BEGOFFILE  = 00000938            
PR$_ASTLVL     = 00000013            PRV$V_SETPRI   = 0000000D            SS$_BLOCKCNTERR= 00000940            
PR$_ESP        = 00000001            PRV$V_SETPRV   = 0000000E            SS$_BREAK      = 00000414            
PR$_ICCS       = 00000018            PRV$V_SYSGBL   = 00000019            SS$_BUFFEROVF  = 00000601            
BUGCHECK        - SOFTWARE BUG CHECK ERROR LOGIC                 22-AUG-1978 00:21:45   VAX-11 MACRO X0.3-11               Page   9
SYMBOL TABLE                                                                                                                     (1)

SS$_BUGCHECK   = 000002A4            SS$_ILLBLKNUM  = 000000DC            SS$_NOTFILEDEV = 000001CC            
SS$_CANCEL     = 00000830            SS$_ILLCNTRFUNC= 000000E4            SS$_NOTINTBLSZ = 000001D4            
SS$_CHANINTLK  = 0000004C            SS$_ILLEFC     = 000000EC            SS$_NOTLABELMT = 000001DC            
SS$_CLIFRCEXT  = 00000980            SS$_ILLIOFUNC  = 000000F4            SS$_NOTNETDEV  = 000002EC            
SS$_CMODSUPR   = 0000041C            SS$_ILLLBLAST  = 00000968            SS$_NOTRAN     = 00000629            
SS$_CMODUSER   = 00000424            SS$_ILLPAGCNT  = 000000FC            SS$_NOTSQDEV   = 000001E4            
SS$_COMPAT     = 0000042C            SS$_ILLSEQOP   = 000002DC            SS$_OPCCUS     = 00000434            
SS$_CONTINUE   = 00000001            SS$_ILLSER     = 00000104            SS$_OPCDEC     = 0000043C            
SS$_CONTROLC   = 00000651            SS$_ILLUSRLBLRD= 00000958            SS$_OPINCOMPL  = 000002D4            
SS$_CONTROLO   = 00000609            SS$_ILLUSRLBLWT= 00000960            SS$_PAGOWNVIO  = 000001EC            
SS$_CONTROLY   = 00000611            SS$_INCVOLLABEL= 0000010C            SS$_PAGRDERR   = 00000444            
SS$_CREATED    = 00000619            SS$_INSFARG    = 00000114            SS$_PARITY     = 000001F4            
SS$_CTRLERR    = 00000054            SS$_INSFMEM    = 00000124            SS$_PARTESCAPE = 000001FC            
SS$_DATACHECK  = 0000005C            SS$_INSFRAME   = 0000012C            SS$_PFMBSY     = 00000204            
SS$_DATAOVERUN = 00000838            SS$_INSFWSL    = 0000011C            SS$_PSTFULL    = 0000020C            
SS$_DEBUG      = 0000046C            SS$_IVADDR     = 00000134            SS$_RADRMOD    = 0000044C            
SS$_DEVACTIVE  = 000002C4            SS$_IVCHAN     = 0000013C            SS$_REJECT     = 00000294            
SS$_DEVALLOC   = 00000840            SS$_IVCHNLSEC  = 0000026C            SS$_REMOTE     = 00000649            
SS$_DEVALRALLOC= 00000641            SS$_IVDEVNAM   = 00000144            SS$_RESIGNAL   = 00000918            
SS$_DEVASSIGN  = 00000848            SS$_IVGSDNAM   = 0000014C            SS$_RESULTOVF  = 00000214            
SS$_DEVFOREIGN = 00000064            SS$_IVLOGNAM   = 00000154            SS$_ROPRAND    = 00000454            
SS$_DEVICEFULL = 00000850            SS$_IVLOGTAB   = 0000015C            SS$_SECTBLFUL  = 0000021C            
SS$_DEVMOUNT   = 0000006C            SS$_IVPROTECT  = 000002F4            SS$_SSFAIL     = 0000045C            
SS$_DEVNOTALLOC= 00000858            SS$_IVQUOTAL   = 00000164            SS$_SUPERSEDE  = 00000631            
SS$_DEVNOTMBX  = 00000074            SS$_IVSECFLG   = 0000016C            SS$_TAPEPOSLOST= 00000224            
SS$_DEVNOTMOUNT= 0000007C            SS$_IVSECIDCTL = 000002E4            SS$_TBIT       = 00000464            
SS$_DEVOFFLINE = 00000084            SS$_IVSSRQ     = 00000174            SS$_TIMEOUT    = 0000022C            
SS$_DIRFULL    = 00000860            SS$_IVSTSFLG   = 0000017C            SS$_TOOMANYVER = 00000990            
SS$_DRVERR     = 0000008C            SS$_IVTIME     = 00000184            SS$_TOOMUCHDATA= 0000029C            
SS$_DUPFILENAME= 00000868            SS$_LENVIO     = 0000018C            SS$_UNASEFC    = 00000234            
SS$_DUPLNAM    = 00000094            SS$_LKWSETFUL  = 00000194            SS$_UNSAFE     = 0000023C            
SS$_ENDOFFILE  = 00000870            SS$_MBFULL     = 000008D8            SS$_UNWIND     = 00000920            
SS$_ENDOFTAPE  = 00000878            SS$_MBTOOSML   = 0000019C            SS$_UNWINDING  = 00000928            
SS$_ENDOFUSRLBL= 00000970            SS$_MCHECK     = 000002BC            SS$_VASFULL    = 00000244            
SS$_EXQUOTA    = 0000001C            SS$_MEDOFL     = 000001A4            SS$_VECINUSE   = 0000024C            
SS$_EXTIDXFILE = 00000880            SS$_MSGNOTFND  = 00000621            SS$_VOLINV     = 00000254            
SS$_FCPREADERR = 00000888            SS$_MUSTCLOSEFL= 00000948            SS$_WAITUSRLBL = 00000950            
SS$_FCPREPSTN  = 00000988            SS$_NODATA     = 000001AC            SS$_WASCLR     = 00000001            
SS$_FCPREWNDERR= 00000890            SS$_NOHANDLER  = 000008F8            SS$_WASECC     = 00000639            
SS$_FCPSPACERR = 00000898            SS$_NOHOMEBLK  = 000008E0            SS$_WASSET     = 00000009            
SS$_FCPWRITERR = 000008A0            SS$_NOIOCHAN   = 000001B4            SS$_WRITLCK    = 0000025C            
SS$_FILACCERR  = 0000009C            SS$_NOLINKS    = 0000027C            STS$K_ERROR    = 00000002            
SS$_FILALRACC  = 000000A4            SS$_NOLOGNAM   = 000001BC            STS$K_SEVERE   = 00000004            
SS$_FILELOCKED = 000008A8            SS$_NOMBX      = 00000274            STS$K_SUCCESS  = 00000001            
SS$_FILENUMCHK = 000008B0            SS$_NOMOREFILES= 00000930            STS$K_WARNING  = 00000000            
SS$_FILESEQCHK = 000008B8            SS$_NONEXDRV   = 000001C4            STS$M_CODE     = 00007FF8            
SS$_FILESTRUCT = 000008C0            SS$_NONEXPR    = 000008E8            STS$M_COND_ID  = 0FFFFFF8            
SS$_FILNOTACC  = 000000AC            SS$_NONLOCAL   = 000008F0            STS$M_CONTROL  = F0000000            
SS$_FILNOTCNTG = 000002AC            SS$_NOPRIV     = 00000024            STS$M_CUST_DEF = 08000000            
SS$_FILNOTEXP  = 000000B4            SS$_NORMAL     = 00000001            STS$M_FAC_NO   = 0FFF0000            
SS$_FORMAT     = 000000BC            SS$_NOSIGNAL   = 00000900            STS$M_FAC_SP   = 00008000            
SS$_GPTFULL    = 000000C4            SS$_NOSOLICIT  = 00000284            STS$M_INHIB_MSG= 10000000            
SS$_GSDFULL    = 000000CC            SS$_NOSUCHDEV  = 00000908            STS$M_MSG_NO   = 0000FFF8            
SS$_GSDNOTXXX  = 000000D4            SS$_NOSUCHFILE = 00000910            STS$M_SEVERITY = 00000007            
SS$_HANGUP     = 000002CC            SS$_NOSUCHNODE = 0000028C            STS$M_SUCCESS  = 00000001            
SS$_HEADERFULL = 000008C8            SS$_NOSUCHSEC  = 00000978            STS$S_CODE     = 0000000C            
SS$_IDXFILEFULL= 000008D0            SS$_NOTAPEOP   = 00000264            STS$S_COND_ID  = 00000019            
BUGCHECK        - SOFTWARE BUG CHECK ERROR LOGIC                 22-AUG-1978 00:21:45   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (1)

STS$S_CONTROL  = 00000004            
STS$S_CUST_DEF = 00000001            
STS$S_FAC_NO   = 0000000C            
STS$S_FAC_SP   = 00000001            
STS$S_INHIB_MSG= 00000001            
STS$S_MSG_NO   = 0000000D            
STS$S_SEVERITY = 00000003            
STS$S_SUCCESS  = 00000001            
STS$V_CODE     = 00000003            
STS$V_COND_ID  = 00000003            
STS$V_CONTROL  = 0000001C            
STS$V_CUST_DEF = 0000001B            
STS$V_FAC_NO   = 00000010            
STS$V_FAC_SP   = 0000000F            
STS$V_INHIB_MSG= 0000001C            
STS$V_MSG_NO   = 00000003            
STS$V_SEVERITY = 00000000            
STS$V_SUCCESS  = 00000000            
SYS$ISPINI       ********   X   03   


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            000000FA      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
A$EXENONPAGED    00000226      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
10920. BYTES LEFT IN FREE MEMORY POOL.
3484. BYTES OF RECLAIMED MEMORY.
OBJ$:BUGCHECK,LIS$:BUGCHECK/-SP=LIB$:LIB/ML,SRC$:BUGCHECK
9 MLB DIR RDS - 843 GETS TO DEFINE 19 MACROS. 61 INTER. FILE WRITES. 
