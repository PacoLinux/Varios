PANICDUMP       - PANIC DUMP                                     22-AUG-1978 00:04:59   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      92  PANIC DUMP ROUTINE
PANICDUMP       - PANIC DUMP                                     22-AUG-1978 00:04:59   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	PANICDUMP - PANIC DUMP
                                     0000     2 	.IDENT	/01/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; D. N. CUTLER 12-AUG-76
                                     0000    24 ;
                                     0000    25 ; PANIC DUMP ROUTINE
                                     0000    26 ;
                                     0000    27 ; MACRO LIBRARY CALLS
                                     0000    28 ;
                                     0000    29  
                                     0000    30 	$CADEF				;DEFINE CONDITIONAL ASSEMBLY APRAMETERS
                                     0000    31 	$PRDEF				;DEFINE PROCESSOR REGISTERS
                                     0000    32  
                                     0000    33 ;
                                     0000    34 ; LOCAL SYMBOLS
                                     0000    35 ;
                                     0000    36 ; CHARACTER DEFINITIONS
                                     0000    37 ;
                                     0000    38  
                           0000000D  0000    39 CR=13					;CARRIAGE RETURN
                           0000002D  0000    40 DASH=45					;HYPHEN
                           0000000C  0000    41 FF=12					;FORM FEED
                           00000061  0000    42 LCA=97					;LOWER CASE A
                           00000066  0000    43 LCF=102					;LOWER CASE F
                           0000000A  0000    44 LF=10					;LINE FEED
                           00000039  0000    45 NINE=57					;DIGIT 9
                           0000002E  0000    46 PERIOD=46				;PERIOD
                           00000041  0000    47 UCA=65					;UPPER CASE A
                           00000046  0000    48 UCF=70					;UPPER CASE F
                           00000030  0000    49 ZERO=48					;DIGIT ZERO
                                     0000    50  
                                     0000    51 ;
                                     0000    52 ; LINE PRINTER REGISTER DEFINITIONS
                                     0000    53 ;
                                     0000    54  
                           FFFFFF4C  0000    55 LPSP=^X0FFFFFF4C			;PHYSICAL ADDRESS OF PRINTER CSR
                                     0000    56  
                                     0000    57 ;
PANICDUMP       - PANIC DUMP                                     22-AUG-1978 00:04:59   VAX-11 MACRO X0.3-11               Page   2
01                                                                                                                               (1)

                                     0000    58 ; TERMINAL REGISTER DEFINITIONS
                                     0000    59 ;
                                     0000    60  
                           FFFFFFFC  0000    61 RCSR=-4					;OFFSET RECEIVER CSR
                           FFFFFFFE  0000    62 RDBR=-2					;OFFSET RECEIVER DBR
                           FFFFFF74  0000    63 TPSP=^X0FFFFFF74			;PHYSICAL ADDRESS OF TERMINAL CSR
                                     0000    64  
                                     0000    65 ;
                                     0000    66 ; LOCAL DATA
                                     0000    67 ;
                                     0000    68 ; OUTPUT FORMAT MESSAGES
                                     0000    69 ;
                                     0000    70  
                                     0000    71 DUMPMSG:				;DUMP IDENTIFICATION MESSAGE
45 4D 20 2A 2A 2A 20 20 20 0A 0A 0D  0000    72 	.ASCIZ	<CR><LF><LF>/   *** MEMORY DUMP ***/<CR><LF><LF> ;
2A 2A 20 50 4D 55 44 20 59 52 4F 4D  000C       
                     00 0A 0A 0D 2A  0018       
                                     001D    73 FIRSTINP:				;FIRST INPUT VALUE SOLICITATION MESSAGE
52 41 54 53 20 52 45 54 4E 45 0A 0D  001D    74 	.ASCIZ	<CR><LF>/ENTER STARTING ADDRESS: / ;
53 53 45 52 44 44 41 20 47 4E 49 54  0029       
                           00 20 3A  0035       
                                     0038    75 FROMADDR:				;SUPPRESSED AREA FROM ADDRESS
20 44 45 53 53 45 52 50 50 55 53 20  0038    76 	.ASCIZ	/ SUPPRESSED FROM /	;
                  00 20 4D 4F 52 46  0044       
                                     004A    77 R0TOR7MSG:				;FIRST REGISTER IDENTIFICATION MESSAGE
4C 41 52 45 4E 45 47 20 20 20 20 0C  004A    78 	.ASCII	<FF>/    GENERAL REGISTERS R7, R6, R5, R4, R3, R2, R1, / ;
52 20 53 52 45 54 53 49 47 45 52 20  0056       
52 20 2C 35 52 20 2C 36 52 20 2C 37  0062       
52 20 2C 32 52 20 2C 33 52 20 2C 34  006E       
                           20 2C 31  007A       
      00 0A 0A 0D 30 52 20 44 4E 41  007D    79 	.ASCIZ	/AND R0/<CR><LF><LF>	;
                                     0087    80 R8TOPCMSG:				;SECOND REGISTER IDENTIFICATION MESSAGE
41 20 4C 53 50 20 20 20 20 0A 0A 0D  0087    81 	.ASCII	<CR><LF><LF>/    PSL AND GENERAL REGISTERS SP, FP, AP, / ;
52 20 4C 41 52 45 4E 45 47 20 44 4E  0093       
2C 50 53 20 53 52 45 54 53 49 47 45  009F       
         20 2C 50 41 20 2C 50 46 20  00AB       
39 52 20 2C 30 31 52 20 2C 31 31 52  00B4    82 	.ASCIZ	/R11, R10, R9, AND R8/<CR><LF><LF> ;
00 0A 0A 0D 38 52 20 44 4E 41 20 2C  00C0       
                                     00CC    83 SECONDINP:				;SECOND INPUT VALUE SOLICITATION MESSAGE
47 4E 49 44 4E 45 20 52 45 54 4E 45  00CC    84 	.ASCIZ	/ENTER ENDING ADDRESS: / ;
   00 20 3A 53 53 45 52 44 44 41 20  00D8       
                                     00E3    85 SEPARATOR:				;ADDRESS SEPARATOR STRING
                        00 20 2D 2D  00E3    86 	.ASCIZ	/-- /			;
                                     00E7    87 SUPPRESS:				;SUPPRESSED AREA PREFIX MESSAGE
52 4F 57 47 4E 4F 4C 20 20 20 0A 0D  00E7    88 	.ASCIZ	<CR><LF>/   LONGWORDS OF / ;
               00 20 46 4F 20 53 44  00F3       
                                     00FA    89 TOADDR:					;SUPPRESSED AREA TO ADDRESS
                     00 20 4F 54 20  00FA    90 	.ASCIZ	/ TO /			;
PANICDUMP       - PANIC DUMP                                     22-AUG-1978 00:04:59   VAX-11 MACRO X0.3-11               Page   3
01              PANIC DUMP ROUTINE                                                                                               (2)

                                     00FF    92 	.SBTTL	PANIC DUMP ROUTINE
                                     00FF    93 ;+
                                     00FF    94 ; EXE$PANICDUMP - PANIC DUMP ROUTINE
                                     00FF    95 ;-
                                     00FF    96  
                                     00FF    97 EXE$PANICDUMP::				;PANIC DUMP ROUTINE
                     0000'CF     DC  00FF    98 	MOVPSL	W^BUG$GL_RETURN		;SAVE CURRENT PSL
                                     0103    99 	SETIPL	#31			;DISABLE ALL INTERRUPTS
       0000'CF            5E     D0  0106   100 	MOVL	SP,W^BUG$GL_STACK	;SAVE CURRENT STACK POINTER
            5E       0000'CF     DE  010B   101 	MOVAL	W^BUG$GL_STACK,SP		;POINT TO BUG CHECK STACK AREA
                     3FFF 8F     BB  0110   102 	PUSHR	#^M<R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,AP,FP> ;SAVE ALL REGS
            51       FF05 CF     DE  0114   103 10$:	MOVAL	W^FIRSTINP,R1		;GET ADDRESS OF FIRST SOLICITATION MSG
                          0111   30  0119   104 	BSBW	INPHEX			;INPUT STARTING DUMP ADDRESS
            59            51     D0  011C   105 	MOVL	R1,R9			;SAVE STARTING DUMP ADDRESS
            51       FFA9 CF     DE  011F   106 	MOVAL	W^SECONDINP,R1		;GET ADDRESS OF SECOND SOLICITATION MSG
                          0106   30  0124   107 	BSBW	INPHEX			;INPUT ENDING DUMP ADDRESS
            5A            51     D0  0127   108 	MOVL	R1,R10			;SAVE ENDING DUMP ADDRESS
            5A            59     D1  012A   109 	CMPL	R9,R10			;ANYTHING TO DUMP?
                          E5     1A  012D   110 	BGTRU	10$			;IF GTRU NO
            5B   0000014C'9F     DE  012F   111 	MOVAL	@#SYS$IOBASE+^X014C,R11	;GET VIRTUAL ADDRESS OF PRINTER CSR
            7E            38     DB  0136   112 	MFPR	#PR$_MAPEN,-(SP)	;GET CURRENT MAPPING STATE
            07            8E     E8  0139   113 	BLBS	(SP)+,20$		;IF LBS MAPPING ENABLED
            5B   FFFFFF4C 9F     DE  013C   114 	MOVAL	@#LPSP,R11		;GET PHYSICAL ADDRESS OF PRINTER CSR
            51       FF03 CF     DE  0143   115 20$:	MOVAL	W^R0TOR7MSG,R1		;GET ADDRESS OF FIRST REGISTER MESSAGE
                          FEB5'  30  0148   116 	BSBW	EXE$OUTZSTRING		;OUTPUT FIRST REGISTER IDENTIFICATIONM MSG
            54            5E     D0  014B   117 	MOVL	SP,R4			;SET STARTING ADDRESS OF DUMP AREA
            55         20 A4     DE  014E   118 	MOVAL	8*4(R4),R5		;SET ENDING ADDRESS OF DUMP AREA
                          23     10  0152   119 	BSBB	DUMP			;DUMP REGISTERS R0 THRU R7
            51       FF2F CF     DE  0154   120 	MOVAL	W^R8TOPCMSG,R1		;GET ADDRESS OF SECOND REGISTER MESSAGE
                          FEA4'  30  0159   121 	BSBW	EXE$OUTZSTRING		;OUTPUT SECOND REGISTER IDENTIFICATION MSG
            54            55     D0  015C   122 	MOVL	R5,R4			;SET STARTING ADDRESS OF DUMP AREA
            55         20 A4     DE  015F   123 	MOVAL	8*4(R4),R5		;SET ENDING ADDRESS OF DUMP AREA
                          12     10  0163   124 	BSBB	DUMP			;DUMP REGISTERS R8 THRU SP AND PSL
            51       FE97 CF     DE  0165   125 	MOVAL	W^DUMPMSG,R1		;GET ADDRESS OF DUMP IDENTIFICATION MSG
                          FE93'  30  016A   126 	BSBW	EXE$OUTZSTRING		;OUTPUT DUMP IDENTIFICATION MESSAGE
            54            59     D0  016D   127 	MOVL	R9,R4			;SET STARTING ADDRESS OF REAL DUMP AREA
            55            5A     D0  0170   128 	MOVL	R10,R5			;SET ENDING ADDRESS OF REAL DUMP AREA
                          02     10  0173   129 	BSBB	DUMP			;DUMP MEMORY CONTENTS
                          9D     11  0175   130 	BRB	10$			;
                                     0177   131  
                                     0177   132 ;
                                     0177   133 ; DUMP LIMITS SPECIFIED BY R4 AND R5
                                     0177   134 ;
                                     0177   135  
            58            54     D0  0177   136 DUMP:	MOVL	R4,R8			;SAVE STARTING ADDRESS OF AREA
            56            54     D0  017A   137 10$:	MOVL	R4,R6			;SAVE STARTING ADDRESS OF LINE
            55            54     D1  017D   138 	CMPL	R4,R5			;END OF DUMP REACHED?
                          0D     1E  0180   139 	BGEQU	30$			;IF GEQU YES
            57            08     D0  0182   140 	MOVL	#8,R7			;SET LOOP COUNT FOR ONE LINE
            68            84     D1  0185   141 20$:	CMPL	(R4)+,(R8)		;LONGWORDS MATCH?
                          05     12  0188   142 	BNEQ	30$			;IF NEQ NO
            F8            57     F5  018A   143 	SOBGTR	R7,20$			;ANY MORE TO COMPARE THIS LINE?
                          EB     11  018D   144 	BRB	10$			;
            58            56     D1  018F   145 30$:	CMPL	R6,R8			;LINE AND AREA ADDRESS MATCH?
                          3F     13  0192   146 	BEQL	40$			;IF EQL YES
            51       FF4F CF     DE  0194   147 	MOVAL	W^SUPPRESS,R1		;GET ADDRESS OF SUPPRESSION MESSAGE
                          FE64'  30  0199   148 	BSBW	EXE$OUTZSTRING		;OUTPUT SUPPRESSION MESSAGE
PANICDUMP       - PANIC DUMP                                     22-AUG-1978 00:04:59   VAX-11 MACRO X0.3-11               Page   4
01              PANIC DUMP ROUTINE                                                                                               (2)

            51            68     D0  019C   149 	MOVL	(R8),R1			;GET SUPPRESSION VALUE
                          FE5E'  30  019F   150 	BSBW	EXE$OUTHEX		;OUTPUT SUPPRESSED VALUE
            50            2D     9A  01A2   151 	MOVZBL	#DASH,R0		;GET HYPHEN CHARACTER
                          FE58'  30  01A5   152 	BSBW	EXE$OUTCHAR		;OUTPUT HYPHEN
                          76     D5  01A8   153 	TSTL	-(R6)			;BACKUP TO PATTERN LONGWORD
            57            04     D0  01AA   154 	MOVL	#4,R7			;SET NUMBER OF ASCII BYTES TO PRINT
                          63     10  01AD   155 	BSBB	OUTASC			;OUTPUT CONVERTED ASCII STRING
            51       FE85 CF     DE  01AF   156 	MOVAL	W^FROMADDR,R1		;GET ADDRESS OF FROM ADDRESS MESSAGE
                          FE49'  30  01B4   157 	BSBW	EXE$OUTZSTRING		;OUTPUT FROM ADDRESS MESSAGE
            51            58     D0  01B7   158 	MOVL	R8,R1			;SET STARTING ADDRESS OF SUPPRESSED AREA
                          FE43'  30  01BA   159 	BSBW	EXE$OUTHEX		;OUTPUT STARTING ADDRESS
            51       FF39 CF     DE  01BD   160 	MOVAL	W^TOADDR,R1		;GET ADDRESS OF TO ADDRESS MESSAGE
                          FE3B'  30  01C2   161 	BSBW	EXE$OUTZSTRING		;OUTPUT TO ADDRESS MESSAGE
            51            56     D0  01C5   162 	MOVL	R6,R1			;SET ENDING ADDRESS OF SUPPRESSED AREA
                          FE35'  30  01C8   163 	BSBW	EXE$OUTHEX		;OUTPUT ENDING ADDRESS OF SUPPRESSED AREA
                          86     D5  01CB   164 	TSTL	(R6)+			;POINT TO START OF AREA TO DUMP
                          FE30'  30  01CD   165 	BSBW	EXE$OUTCRLF		;OUTPUT CARRIAGE RETURN/LINE FEED PAIR
                          FE2D'  30  01D0   166 	BSBW	EXE$OUTCRLF		;OUTPUT CARRIAGE RETURN/LINE FEED PAIR
            56            20     C0  01D3   167 40$:	ADDL	#8*4,R6			;POINT TO STARTING ADDRESS OF NEXT LINE
            54            56     D0  01D6   168 	MOVL	R6,R4			;SET STARTING ADDRESS OF NEXT LINE
            57            08     D0  01D9   169 	MOVL	#8,R7			;SET LOOP COUNT FOR ONE LINE
            51            76     D0  01DC   170 50$:	MOVL	-(R6),R1		;GET NEXT VALUE TO OUTPUT
                          FE1E'  30  01DF   171 	BSBW	EXE$OUTHEX		;OUTPUT CONVERTED VALUE
                          FE1B'  30  01E2   172 	BSBW	EXE$OUTBLANK		;OUTPUT A BLANK
            F4            57     F5  01E5   173 	SOBGTR	R7,50$			;ANY MORE VALUES TO CONVERT?
            51       FEF7 CF     DE  01E8   174 	MOVAL	W^SEPARATOR,R1		;GET ADDRESS OF ADDRESS SEPARATOR STRING
                          FE10'  30  01ED   175 	BSBW	EXE$OUTZSTRING		;OUTPUT ADDRESS SEPARATOR MESSAGE
            51            56     D0  01F0   176 	MOVL	R6,R1			;SET STARTING ADDRESS OF LINE
                          FE0A'  30  01F3   177 	BSBW	EXE$OUTHEX		;OUTPUT STARTING ADDRESS
                          FE07'  30  01F6   178 	BSBW	EXE$OUTBLANK		;OUTPUT TWO BLANKS
            51       FEE6 CF     DE  01F9   179 	MOVAL	W^SEPARATOR,R1		;GET ADDRESS OF ADDRESS SEPARATOR STRING
                          FDFF'  30  01FE   180 	BSBW	EXE$OUTZSTRING		;OUTPUT ADDRESS SEPARATOR MESSAGE
            57            20     D0  0201   181 	MOVL	#32,R7			;SET NUMBER OF ASCII BYTES TO PRINT
                          0C     10  0204   182 	BSBB	OUTASC			;OUTPUT CONVERTED ASCII STRING
                          FDF7'  30  0206   183 	BSBW	EXE$OUTCRLF		;OUTPUT A CARRIAGE RETURN/LINE FEED PAIR
            55            54     D1  0209   184 	CMPL	R4,R5			;END OF DUMP?
                          03     1E  020C   185 	BGEQU	60$			;IF GEQU YES
                          FF66   31  020E   186 	BRW	DUMP			;
                                 05  0211   187 60$:	RSB				;
                                     0212   188  
                                     0212   189 ;
                                     0212   190 ; SUBROUTINE TO CONVERT AND OUTPUT AN ASCII STRING
                                     0212   191 ;
                                     0212   192  
            52            56     D0  0212   193 OUTASC:	MOVL	R6,R2			;SET STARTING ADDRESS OF STRING
            50            82     9A  0215   194 10$:	MOVZBL	(R2)+,R0		;GET NEXT CHARACTER TO CONVERT
            50            20     91  0218   195 	CMPB	#32,R0			;CONTROL CHARACTER?
                          06     1A  021B   196 	BGTRU	20$			;IF GTRU YES
            50         7F 8F     91  021D   197 	CMPB	#127,R0			;PRINTING CHARACTER?
                          03     1A  0221   198 	BGTRU	30$			;IF GTRU YES
            50            2E     9A  0223   199 20$:	MOVZBL	#PERIOD,R0		;DEFAULT TO PERIOD FOR CTRL AND NONPRINTING
                          FDD7'  30  0226   200 30$:	BSBW	EXE$OUTCHAR		;OUTPUT A CHARACTER
            E9            57     F5  0229   201 	SOBGTR	R7,10$			;ANY MORE BYTES TO CONVERT?
                                 05  022C   202 	RSB				;
                                     022D   203  
                                     022D   204 ;
                                     022D   205 ; SUBROUTINE TO INPUT A HEX VALUE FROM THE TERMINAL KEYBOARD
PANICDUMP       - PANIC DUMP                                     22-AUG-1978 00:04:59   VAX-11 MACRO X0.3-11               Page   5
01              PANIC DUMP ROUTINE                                                                                               (2)

                                     022D   206 ;
                                     022D   207  
                          FDD0'  30  022D   208 INPHEX:	BSBW	EXE$OUTZSTRING		;OUTPUT SOLICITATION MESSAGE
                          51     D4  0230   209 	CLRL	R1			;ZERO ACCUMULATED VALUE
                                     0232   210 10$:					;REF LABEL
                                     0232   211  
                           00000001  0232   212 	.IF NE	CA$_SIMULATOR
                                     0232   213  
       0000'CF            00'    E1  0232   214 	BBC	S^#EXE$V_SIMULATOR,W^EXE$GL_FLAGS,20$ ;IF CLR, NOT SIMULATOR
                          22         0237       
            5B   FFFFFF74 9F     DE  0238   215 	MOVAL	@#TPSP,R11		;GET PHYSICAL ADDRESS OF TRANSMITER CSR
            7E            38     DB  023F   216 	MFPR	#PR$_MAPEN,-(SP)	;READ MAP ENABLE
            07            8E     E9  0242   217 	BLBC	(SP)+,5$		;IF LBC RUNNING UNMAPPED
            5B   00000174'9F     DE  0245   218 	MOVAL	@#SYS$IOBASE+^X174,R11	;GET VIRTUAL ADDRESS OF TRANSMITTER CSR
         FC AB       0080 8F     B3  024C   219 5$:	BITW	#^X80,RCSR(R11)		;CHARACTER READY?
                          F8     13  0252   220 	BEQL	5$			;IF EQL NO
            52         FE AB     90  0254   221 	MOVB	RDBR(R11),R2		;READ CHARACTER
                          0A     11  0258   222 	BRB	30$			;
                                     025A   223  
                                     025A   224 	.ENDC
                                     025A   225  
            52            20     DB  025A   226 20$:	MFPR	#PR$_RXCS,R2		;READ RECEIVER STATUS REGISTER
            52            07     E1  025D   227 	BBC	#7,R2,20$		;IF CLR, INPUT NOT DONE
                          F9         0260       
            52            21     DB  0261   228 	MFPR	#PR$_RXDB,R2		;READ NEXT INPUT CHARACTER
            52         80 8F     8A  0264   229 30$:	BICB	#^X080,R2		;CLEAR PARITY BIT
            50            52     9A  0268   230 	MOVZBL	R2,R0			;SET CHARACTER TO ECHO
                          5B     D4  026B   231 	CLRL	R11			;INDICATE CONSOLE TERMINAL
                          FD90'  30  026D   232 	BSBW	EXE$OUTCHAR		;OUTPUT CHARACTER
            52            30     91  0270   233 	CMPB	#ZERO,R2		;POSSIBLY A DIGIT?
                          2F     14  0273   234 	BGTR	60$			;IF GTR NO
            52            39     91  0275   235 	CMPB	#NINE,R2		;POSSIBLY A DIGIT?
                          1E     18  0278   236 	BGEQ	50$			;IF GEQ YES
            52         41 8F     91  027A   237 	CMPB	#UCA,R2			;POSSIBLY UPPER CASE A TO F?
                          24     14  027E   238 	BGTR	60$			;IF GTR NO
            52         46 8F     91  0280   239 	CMPB	#UCF,R2			;POSSIBLY UPPER CASE A TO F?
                          0F     18  0284   240 	BGEQ	40$			;IF GEQ YES
            52         61 8F     91  0286   241 	CMPB	#LCA,R2			;POSSIBLY LOWER CASE A TO F?
                          18     14  028A   242 	BGTR	60$			;IF GTR NO
            52         66 8F     91  028C   243 	CMPB	#LCF,R2			;POSSIBLY LOWER CASE A TO F?
                          12     19  0290   244 	BLSS	60$			;IF LSS NO
            52            20     82  0292   245 	SUBB	#LCA-UCA,R2		;SUBTRACT OUT LOWER CASE BIAS
            52            07     82  0295   246 40$:	SUBB	#UCA-ZERO-10,R2		;SUBTRACT OUT UPPER CASE BIAS
            52            30     82  0298   247 50$:	SUBB	#ZERO,R2		;SUBTRACT OUT DIGIT BIAS
            51            04     78  029B   248 	ASHL	#4,R1,R1		;MAKE ROOM FOR NEXT DIGIT
                          51         029E       
            51            52     88  029F   249 	BISB	R2,R1			;MERGE NEW DIGIT WITH PREVIOUS RESULT
                          8E     11  02A2   250 	BRB	10$			;
            51            03     C0  02A4   251 60$:	ADDL	#3,R1			;ROUND UP TO NEXT LONGWORD BOUNDRY
            51            03     CA  02A7   252 	BICL	#3,R1			;
                          FD53'  31  02AA   253 	BRW	EXE$OUTCRLF		;FINISH WITH CARRIAGE RETURN/LINE FEED PAIR
                                     02AD   254  
                                     02AD   255 	.END
PANICDUMP       - PANIC DUMP                                     22-AUG-1978 00:04:59   VAX-11 MACRO X0.3-11               Page   6
SYMBOL TABLE                                                                                                                     (2)

BIT...         = 00000000            PR$_SID        = 0000003E            
BUG$GL_RETURN    ********   X   01   PR$_SIRR       = 00000014            
BUG$GL_STACK     ********   X   01   PR$_SISR       = 00000015            
CA$_MEASURE    = 00000002            PR$_SLR        = 0000000D            
CA$_MEASURE_IOT= 00000004            PR$_SSP        = 00000002            
CA$_SIMULATOR  = 00000001            PR$_TBIA       = 00000039            
CR             = 0000000D            PR$_TBIS       = 0000003A            
DASH           = 0000002D            PR$_TODR       = 0000001B            
DUMP             00000177 R     01   PR$_TXCS       = 00000022            
DUMPMSG          00000000 R     01   PR$_TXDB       = 00000023            
EXE$GL_FLAGS     ********   X   01   PR$_USP        = 00000003            
EXE$OUTBLANK     ********   X   01   PR$_WCSA       = 0000002C            
EXE$OUTCHAR      ********   X   01   PR$_WCSD       = 0000002D            
EXE$OUTCRLF      ********   X   01   R0TOR7MSG        0000004A R     01   
EXE$OUTHEX       ********   X   01   R8TOPCMSG        00000087 R     01   
EXE$OUTZSTRING   ********   X   01   RCSR           = FFFFFFFC            
EXE$PANICDUMP    000000FF RG    01   RDBR           = FFFFFFFE            
EXE$V_SIMULATOR  ********   X   01   SECONDINP        000000CC R     01   
FF             = 0000000C            SEPARATOR        000000E3 R     01   
FIRSTINP         0000001D R     01   SUPPRESS         000000E7 R     01   
FROMADDR         00000038 R     01   SYS$IOBASE       ********   X   01   
GBL...         = 00000000            TOADDR           000000FA R     01   
INPHEX           0000022D R     01   TPSP           = FFFFFF74            
LCA            = 00000061            UCA            = 00000041            
LCF            = 00000066            UCF            = 00000046            
LF             = 0000000A            ZERO           = 00000030            
LPSP           = FFFFFF4C            
NINE           = 00000039            
OUTASC           00000212 R     01   
PERIOD         = 0000002E            
PR$_ACCR       = 00000029            
PR$_ACCS       = 00000028            
PR$_ASTLVL     = 00000013            
PR$_ESP        = 00000001            
PR$_ICCS       = 00000018            
PR$_ICR        = 0000001A            
PR$_IPL        = 00000012            
PR$_ISP        = 00000004            
PR$_KSP        = 00000000            
PR$_MAPEN      = 00000038            
PR$_NICR       = 00000019            
PR$_P0BR       = 00000008            
PR$_P0LR       = 00000009            
PR$_P1BR       = 0000000A            
PR$_P1LR       = 0000000B            
PR$_PCBB       = 00000010            
PR$_RXCS       = 00000020            
PR$_RXDB       = 00000021            
PR$_SBIER      = 00000034            
PR$_SBIFS      = 00000030            
PR$_SBIMT      = 00000033            
PR$_SBIQC      = 00000036            
PR$_SBIS       = 00000031            
PR$_SBISC      = 00000032            
PR$_SBITA      = 00000035            
PR$_SBR        = 0000000C            
PR$_SCBB       = 00000011            
PANICDUMP       - PANIC DUMP                                     22-AUG-1978 00:04:59   VAX-11 MACRO X0.3-11               Page   7
PROGRAM SECTION SYNOPSIS                                                                                                         (2)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        000002AD      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000000      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
25718. BYTES LEFT IN FREE MEMORY POOL.
14. BYTES OF RECLAIMED MEMORY.
OBJ$:PANICDUMP,LIS$:PANICDUMP/-SP=LIB$:LIB/ML,SRC$:PANICDUMP
2 MLB DIR RDS - 110 GETS TO DEFINE 9 MACROS. 10 INTER. FILE WRITES. 
