INIT                                                             22-AUG-1978 00:11:21   VAX-11 MACRO X0.3-11               Page   1
00.4                                                                                                                             (1)

                                     0000     1 	.TITLE	INIT
                                     0000     2 	.IDENT	/00.4/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; C. MONIA 10-DEC-77
                                     0000    24 ;
                                     0000    25 ; INITIALIZE THE CORE-ONLY SYSTEM
                                     0000    26 ;
                                     0000    27 ; MACRO LIBRARY CALLS
                                     0000    28 ;
                                     0000    29  
                                     0000    30 	$ADPDEF				; DEFINE ADP OFFSETS
                                     0000    31 	$CADEF				; DEFINE CONDITIONAL ASSEMBLY PARAMETERS
                                     0000    32 	$CRBDEF				; DEFINE CRB OFFSETS
                                     0000    33 	$DDBDEF				; DEFINE DDB OFFSETS
                                     0000    34 	$DEVDEF				; DEFINE DEVICE CHARACTERISTICS
                                     0000    35 	$DDTDEF				; DEFINE DEVICE DISPATCH TABLE OFFSETS
                                     0000    36 	$IDBDEF				; DEFINE IDB OFFSETS
                                     0000    37 	$IPLDEF				; IPL DEFINITIONS
                                     0000    38 	$IRPDEF				; DEFINE IRP OFFSETS
                                     0000    39 	$LOGDEF				; DEFINE LOG OFFSETS
                                     0000    40 	$MBADEF				; DEFINE MBA REGISTER OFFSETS
                                     0000    41 	$PFLDEF				; PAGE FILE OFFSET DEFINITIONS
                                     0000    42 	$PFNDEF				; PFN DATA BASE OFFSET DEFINITIONS
                                     0000    43 	$PHDDEF				; DEFINE PROCESS HEADER OFFSETS
                                     0000    44 	$PRTDEF				; DEFINE PAGE PROTECTION CODES
                                     0000    45 	$PTEDEF				; PAGE TABLE ENTRY DEFINITIONS
                                     0000    46 	$PRDEF				; PROCESSOR REGISTER DEFINITIONS
                                     0000    47 	$SECDEF				; SECTION TABLE OFFSET DEFINITIONS
                                     0000    48 	$SFTDEF				; SWAP FILE TABLE DEFINITIONS
                                     0000    49 	$UBADEF				; DEFINE UBA REGISTER OFFSETS
                                     0000    50 	$UCBDEF				; DEFINE UCB OFFSETS
                                     0000    51 	$VADEF				; DEFINE VIRTUAL ADDRESS FIELDS
                                     0000    52 	$VECDEF				; DEFINE VEC OFFSETS
                                     0000    53  
                                     0000    54 ;
                                     0000    55 ; MACROS
                                     0000    56 ;
                                     0000    57 ;	PURE	START,STOP
INIT                                                             22-AUG-1978 00:11:21   VAX-11 MACRO X0.3-11               Page   2
00.4                                                                                                                             (1)

                                     0000    58 	.MACRO	PURE,START,STOP		;
                                     0000    59 	.LONG	<START-<1@31>>@-7	;
                                     0000    60 	.LONG	<STOP-^X80000200>@-7	;
                                     0000    61 	.ENDM	PURE			;
                                     0000    62 ;
                                     0000    63 ; LOCAL SYMBOLS
                                     0000    64 ;
                                     0000    65 ; CHARACTER DEFINITIONS
                                     0000    66 ;
                                     0000    67  
                           0000000D  0000    68 CR=13					; CARRIAGE RETURN
                           0000000A  0000    69 LF=10					; LINE FEED
                                     0000    70  
                                     0000    71 ;
                                     0000    72 ; LOCAL DATA
                                     0000    73 ;
                                     0000    74  
                                 00000000    75 	.PSECT	Z$INIT,PAGE,EXE,NOWRT
                                     0000    76 ;
                                     0000    77 ; THE FOLLOWING MUST BE FIRST IN THIS PSECT
                                     0000    78 ;
                                     0000    79 ;
                                     0000    80 ; BEGINNING OF NON-PAGED DYNAMIC POOL
                                     0000    81 ;
                                     0000    82  
                                 00000000    83 	.PSECT	Z$NPAGEDYN,QUAD
                                     0000    84  
                                     0000    85 EXE$AL_NPAGEDYN::
                  00000800 00000000  0000    86 	.LONG	0,4*512			; ALLOCATE 4 PAGES OF NON-PAGED MEMORY
                           00002000  0008    87 	.BLKB	4*512-2*4		;
                                     2000    88  
                                 00000000    89 	.PSECT	Z$INIT
                                     0000    90  
                        4D 4B 4B 42  0000    91 DEVNAM:	.ASCII	/BKKM/			; TABLE FOR SECOND CHAR OF DEVICE NAME
                                     0004    92 
                                     0004    93 ANNOUNCE:				; ANNOUNCE SYSTEM BOOT MESSAGE
53 4D 56 2F 58 41 56 20 20 0A 0A 0D  0004    94 	.ASCIZ	<CR><LF><LF>\  VAX/VMS DSC-2, VERSION A.1  30-MAY-1978\<CR><LF><LF>;
53 52 45 56 20 2C 32 2D 43 53 44 20  0010       
2D 30 33 20 20 31 2E 41 20 4E 4F 49  001C       
00 0A 0A 0D 38 37 39 31 2D 59 41 4D  0028       
                                     0034    95  
                                     0034    96 ;+
                                     0034    97 ; SYSTEM BOOT ENTRY POINTS TO START UP SYSTEM
                                     0034    98 ;
                                     0034    99 ; INPUTS:
                                     0034   100 ;
                                     0034   101 ;	R0 = DEVICE TYPE.
                                     0034   102 ;		0 => MBA RP04/05/06.
                                     0034   103 ;		1 => SIMULATOR RK05.
                                     0034   104 ;		2 => BREADBOARD RK05.
                                     0034   105 ;		3 => BREADBOARD RK06.
                                     0034   106 ;	R1 = SYSTEM BUS ADDRESS/SPECIFIER (^X10 = UBA, ^X20 = MBA).
                                     0034   107 ;	R2 = ADDRESS OF BOOT DEVICE CONTROL STATUS REGISTER.
                                     0034   108 ;	R3 = BOOT UNIT NUMBER.
                                     0034   109 ;	R4 = SIZE OF SYSTEM IMAGE IN BLOCKS.
                                     0034   110 ;	R5 = STARTING LOGICAL BLOCK OF SYSTEM IMAGE.
                                     0034   111 ;-
INIT                                                             22-AUG-1978 00:11:21   VAX-11 MACRO X0.3-11               Page   3
00.4                                                                                                                             (1)

                                     0034   112  
                                     0034   113 	.ENABL	LSB
                                     0034   114  
                                     0034   115 	.ALIGN	LONG
                                     0034   116 $BOOT_NORM::				; SYSTEM BOOT - NORMAL
                                     0034   117 $CON_NORM::				;
                          5D     D4  0034   118 	CLRL	FP			;
                          03     11  0036   119 	BRB	10$			;
                                     0038   120 $BOOT_DEBUG::				; SYSTEM BOOT - ENABLE DEBUGGER
                                     0038   121 $CON_DEBUG::				;
            5D            01     D0  0038   122 	MOVL	#1,FP			;
                                     003B   123  
                                     003B   124 ;
                                     003B   125 ; SETUP THE INTERRUPT STACK AND SYSTEM CONTROL BLOCK BASE ADDRESS AND
                                     003B   126 ; RELOCATE THE SYSTEM PAGE TABLES BY THE BASE PHYSICAL ADDRESS OF MEMORY.
                                     003B   127 ;
                                     003B   128  
                                     003B   129 10$:					;
                                     003B   130 	SETIPL	#31			; LOCK OUT ALL INTERRUPTS
            5E   00000000'EF     DE  003E   131 	MOVAL	SYS$ISPINI,SP		; SETUP INTERRUPT STACK
                 00000000'EF     DD  0045   132 	PUSHL	EXE$MCHKVEC		; SAVE MACHINE CHECK VECTOR
   00000000'EF   00000214'8F     D0  004B   133 	MOVL	#INI$MCHK,EXE$MCHKVEC	; SET ADDRESS OF MACHINE CHECK HANDLER
            51   00000000'EF     DE  0056   134 	MOVAL	SCB$AL_BASE,R1		; GET PHYSICAL BASE OF SYSTEM
         2C A1   00000000'9F     9E  005D   135 	MOVAB	@#XDELBPT,^X2C(R1)	; SETUP ADDRESS OF BREAK-POINT HANDLER
         28 A1   00000000'9F     9E  0065   136 	MOVAB	@#XDELTBIT,^X28(R1)	; SETUP ADDRESS OF T-BIT HANDLER
            11            51     DA  006D   137 	MTPR	R1,#PR$_SCBB		; SET ADDRESS OF SYSTEM CONTROL BLOCK
            54   00000000'EF     9E  0070   138 	MOVAB	EXE$SYSBASE,R4		; GET THE BASE SYSTEM ADDRESS
            54   00000200 8F     C7  0077   139 	DIVL3	#512,R4,R0		; COVNVERT TO PFN
                          50         007E       
                          52     D4  007F   140 	CLRL	R2			; CLEAR PTE INDEX
                                     0081   141 20$:					;
   00000000'EF42          50     C0  0081   142 	ADDL	R0,MMG$AL_SYSPAGTB[R2]	; RELOCATE PAGE TABLE ENTRY
            52   00000000'8F     F2  0089   143 	AOBLSS	#MMG$C_RLSPTE,R2,20$	; LOOP FOR ALL RELOCATABLE PAGE TABLE ENTRIES
                          F0         0090       
                          52     D4  0091   144 	CLRL	R2			; CLEAN PTE INDEX
                                     0093   145 22$:					;
   00000000'EF42          50     C0  0093   146 	ADDL	R0,DSC$GL_P0PTE[R2]	; RELOCATE P0PTE FOR DSC
            52   00000000'8F     F2  009B   147 	AOBLSS	#DSC$C_P0PTLGH,R2,22$	; LOOP
                          F0         00A2       
                          52     D4  00A3   148 	CLRL	R2			; RESET INDEX
                                     00A5   149 25$:					;
   00000000'EF42          50     C0  00A5   150 	ADDL	R0,DSC$GL_P1PTE[R2]	; RELOCATE P1PTE ENTRIES
            52   00000000'8F     F2  00AD   151 	AOBLSS	#DSC$C_P1PTLGH,R2,25$	; LOOP
                          F0         00B4       
            51   00000000'EF     9E  00B5   152 	MOVAB	SCH$GL_HPCB,R1		; GET ADDRESS OF HARWARE PCB VECTORS
                          52     D4  00BC   153 	CLRL	R2			; CLEAR COUNT
                                     00BE   154 27$:					;
            53            9144   9E  00BE   155 	MOVAB	@(R1)+[R4],R3		; GET ADDRESS
            53            1F     E5  00C2   156 	BBCC	#31,R3,28$		; CLEAR SYSTEM BIT
                          00         00C5       
                                     00C6   157 28$:					;
            63            54     C0  00C6   158 	ADDL	R4,(R3)			; RELOCATE PCB
            52            00'    F2  00C9   159 	AOBLSS	S^#SCH$C_PCBCNT,R2,27$	; LOOP
                          F1         00CC       
                                     00CD   160  
                                     00CD   161 ;
                                     00CD   162 ; PREPARE TO ENABLE MAPPING BY SETTING UP THE SYSTEM AND PER-PROCESS PAGE
INIT                                                             22-AUG-1978 00:11:21   VAX-11 MACRO X0.3-11               Page   4
00.4                                                                                                                             (1)

                                     00CD   163 ; TABLE BASE AND LENGTH REGISTERS.
                                     00CD   164 ;
                                     00CD   165  
            50   00000000'EF     9E  00CD   166 	MOVAB	MMG$AL_SYSPAGTB,R0	; GET PHYSICAL ADDRESS OF SYSTEM PAGE TABLES
            0C            50     DA  00D4   167 	MTPR	R0,#PR$_SBR		; SET BASE ADDRESS OF TABLES
            08   00000000'8F     DA  00D7   168 	MTPR	#MMG$AL_SYSPAGTB,#PR$_P0BR ; SET USER PAGE TABLES = SYSTEM
            0D   00000000'8F     DA  00DE   169 	MTPR	#SGN$C_SPTLEN,#PR$_SLR	; SET LENGTH OF PAGE TABLES
            09   00000000'8F     DA  00E5   170 	MTPR	#SGN$C_SPTLEN,#PR$_P0LR	; ...
                                     00EC   171  
                                     00EC   172 ;
                                     00EC   173 ; ANNOUNCE THE SYSTEM
                                     00EC   174 ;
                                     00EC   175  
                          5B     D4  00EC   176 	CLRL	R11			; INDICATE CONSOLE TERMINAL
            51       FF12 CF     DE  00EE   177 	MOVAL	ANNOUNCE,R1		; GET ADDRESS OF ANNOUNCEMENT MESSAGE
                 00000000'EF     16  00F3   178 	JSB	EXE$OUTZSTRING		; ANNOUNCE SYSTEM
                                     00F9   179  
                                     00F9   180 ;
                                     00F9   181 ; ENABLE MAPPING
                                     00F9   182 ;
                                     00F9   183  
                                     00F9   184 	INVALID				; INVALIDATE TRANSLATION BUFFER
            38            01     DA  00FC   185 	MTPR	#1,#PR$_MAPEN		; ENABLE MEMORY MANAGEMENT
                 00000105'9F     17  00FF   186 	JMP	@#30$			; ENTER SYSTEM SPACE
                                     0105   187 30$:					;
            5E   FFFFFFFC'EF     DE  0105   188 	MOVAL	SYS$ISPINI-4,SP		; SET INTERRUPT STACK TO SYSTEM ADDRESS
            03            5D     E9  010C   189 	BLBC	FP,40$			; IF LBC, DON'T ENTER XDELTA
                          02C9   30  010F   190 	BSBW	INI$BRK			; OTHERWISE BREAKPOINT
                                     0112   191 ;
                                     0112   192 ; ESTABLISH MBA CONFIGURATION AND DEVICE DATABASE
                                     0112   193 ;
                                     0112   194  
                                     0112   195 40$:					;
                     3FFF 8F     BB  0112   196 	PUSHR	#^M<R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,AP,FP> ;SAVE REGISTERS
                 00000000'EF     9F  0116   197 	PUSHAB	MBA$TABLE		;PUSH ADDRESS OF MBA POINTER TABLE
            5D            5E     D0  011C   198 	MOVL	SP,FP			;SAVE ADDRESS OF CURRENT STACK POINTER
            5C         23'AF     9E  011F   199 	MOVAB	B^MBA_SCAN,AP		;SET MACHINE CHECK RETURN ADDRESS
                                     0123   200  
                                     0123   201 	.DSABL	LSB
                                     0123   202  
                                     0123   203 ;
                                     0123   204 ; SCAN AND INITIALIZE EACH MBA AND CONSTRUCT THE APPROPRIATE DEVICE DATABASE
                                     0123   205 ;
                                     0123   206  
                                     0123   207 MBA_SCAN:				;
            5B         00 BE     D0  0123   208 	MOVL	@(SP),R11		;GET ADDRESS OF NEXT MBA DESCRIPTOR
                          12     13  0127   209 	BEQL	10$			;IF EQL END OF LIST
            6E            04     C0  0129   210 	ADDL	#4,(SP)			;ADVANCE TO NEXT POINTER
            5A            8B     D0  012C   211 	MOVL	(R11)+,R10		;GET ADDRESS OF MBA CONFIGURATION REGISTER
            59            8B     D0  012F   212 	MOVL	(R11)+,R9		;GET ADDRESS OF INTERRUPT VECTOR
         04 AA            01     D0  0132   213 	MOVL	#MBA$M_CR_INIT,MBA$L_CR(R10) ;INITIALIZE MASSBUS ADAPTER
                          0195   30  0136   214 	BSBW	MBA_GEN			;GENERATE MBA DEVICE DATABASE
                          E8     11  0139   215 	BRB	MBA_SCAN		;
                                     013B   216 10$:					;
                          8E     D5  013B   217 	TSTL	(SP)+			;CLEAN STACK
                     3FFF 8F     BA  013D   218 	POPR	#^M<R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,AP,FP> ;RESTORE REGISTERS
                                     0141   219  
INIT                                                             22-AUG-1978 00:11:21   VAX-11 MACRO X0.3-11               Page   5
00.4                                                                                                                             (1)

                                     0141   220 ;
                                     0141   221 ; INIT PROCESS STATE
                                     0141   222 ;
                                     0141   223  
                                     0141   224 INI_PSTATE:				:
                          52     D4  0141   225 	CLRL	R2			; SET NULL PRIO INCR CLASS
                          55     D4  0143   226 	CLRL	R5			; R5 = PROCESS INDEX
            54   00000000'EF45   D0  0145   227 10$:	MOVL	SCH$AL_PCB[R5],R4	; R4 = NEXT PCB ADDRESS
                 00000000'EF     16  014D   228 	JSB	SCH$CHSE		; INSERT IN COM STATE
            55   00000000'8F     F3  0153   229 	AOBLEQ	#SCH$C_MAXINIT,R5,10$	; LOOP THROUGH ALL PROCESSES
                          EA         015A       
                                     015B   230  
                                     015B   231 ;
                                     015B   232 ; INIT DEVICE CONTROLLERS
                                     015B   233 ;
                                     015B   234  
                                     015B   235 INI_DEVICE:				;
                                     015B   236 	.ENABL	LSB
            5D            5E     D0  015B   237 	MOVL	SP,FP			; SAVE CURRENT STACK POINTER
            5C   0000019D'EF     9E  015E   238 	MOVAB	7$,AP			; SET RETRY POINT FOR MACHINE CHK
   00000000'EF            00'    E0  0165   239 	BBS	S^#EXE$V_SIMULATOR,EXE$GL_FLAGS,9$ ; IF SET, SIMULATOR
                          36         016C       
            5B   00000000'EF     D0  016D   240 	MOVL	IOC$GL_ADPLIST,R11	; GET ADDRESS OF FIRST ADAPTER CONTROL BLOCK
                          2D     13  0174   241 	BEQL	9$			; IF EQL NONE
            54            6B     D0  0176   242 1$:	MOVL	ADP$L_UBACSR(R11),R4	; GET UBA CONFIGURATION STATUS REGISTER ADDRESS
                 00000000'EF     16  0179   243 	JSB	UBA$INITIAL		; INITIALIZE ADAPTER
   00000000'EF            00'    E0  017F   244 	BBS	S^#EXE$V_NOAUTOCNF,EXE$GL_FLAGS,7$ ; IF SET, NO AUTO CONFIGURATION
                          16         0186       
            5A         FC AB     D0  0187   245 	MOVL	ADP$L_UBACSR-4(R11),R10	; GET ADDRESS OF CONFIGURATION VECTOR
            59            8A     D0  018B   246 	MOVL	(R10)+,R9		; GET BASE ADDRESS OF DEVICE REGISTERS
            58            8A     D0  018E   247 	MOVL	(R10)+,R8		; GET BASE ADDRESS OF CASE VECTOR TABLE
            57            30     9A  0191   248 	MOVZBL	#^O300/4,R7		; SET STARTING INTERRUPT VECTOR OFFSET
            56            6B     D0  0194   249 	MOVL	ADP$L_UBACSR(R11),R6	; GET ADDRESS OF CONFIGURATION REGISTER
                          00F8   30  0197   250 	BSBW	CONFIGURE		; CONFIGURE DMC11'S FOR THIS UBA
                          00F5   30  019A   251 	BSBW	CONFIGURE		; CONFIGURE DJ11'S FOR THIS UBA
            5B         04 AB     D0  019D   252 7$:	MOVL	ADP$L_LINK(R11),R11	; GET ADDRESS OF NEXT ADP
                          D3     12  01A1   253 	BNEQ	1$			; IF NEQ MORE TO GO
            5C       0228'CF     9E  01A3   254 9$:	MOVAB	W^27$,AP		; SET RETRY POINT
            5B   00000000'EF     DE  01A8   255 	MOVAL	IOC$GL_DEVLIST,R11	; GET ADDRESS OF DEVICE DATA BASE LISTHEAD
            5B            6B     D0  01AF   256 10$:	MOVL	DDB$L_LINK(R11),R11	; GET ADDRESS OF NEXT DDB
                          7D     13  01B2   257 	BEQL	30$			; IF EQL END OF LIST
            5A         D8 AB     DE  01B4   258 	MOVAL	DDB$L_UCB-UCB$L_LINK(R11),R10 ; GET ADDRESS OF FIRST UCB ADDRESS
                          59     D4  01B8   259 	CLRL	R9			; CLEAR LAST CRB ADDRESS
            5A         2C AA     D0  01BA   260 20$:	MOVL	UCB$L_LINK(R10),R10	; GET ADDRESS OF NEXT UCB
                          EF     13  01BE   261 	BEQL	10$			; IF EQL NO MORE THIS DDB
         58 AA            04     E2  01C0   262 	BBSS	#UCB$V_ONLINE,UCB$W_STS(R10),22$; SET UNIT ON LINE
                          00         01C4       
         34 AA            14     E0  01C5   263 22$:	BBS	#DEV$V_MBX,UCB$L_DEVCHAR(R10),20$ ; IF SET, THEN DEVICE MAILBOX
                          F0         01C9       
            54         20 AA     D0  01CA   264 	MOVL	UCB$L_CRB(R10),R4	; GET ADDRESS OF CRB
            59            54     D1  01CE   265 	CMPL	R4,R9			; ADDRESS EQUAL TO LAST?
                          2C     13  01D1   266 	BEQL	24$			; IF EQL YES
            59            54     D0  01D3   267 	MOVL	R4,R9			; SET ADDRESS OF LAST CRB
            58            54     D0  01D6   268 	MOVL	R4,R8			; COPY PRIMARY CRB ADDRESS
                       10 A8     D5  01D9   269 	TSTL	CRB$L_LINK(R8)		; SLAVE CONTROLLER?
                          04     13  01DC   270 	BEQL	23$			; IF EQL NO
            58         10 A8     D0  01DE   271 	MOVL	CRB$L_LINK(R8),R8	; GET LINK TO SECONDARY CRB
INIT                                                             22-AUG-1978 00:11:21   VAX-11 MACRO X0.3-11               Page   6
00.4                                                                                                                             (1)

                                     01E2   272 23$:					;
            56            5B     D0  01E2   273 	MOVL	R11,R6			; SET ADDRESS OF DDB
            55         1C A8     D0  01E5   274 	MOVL	CRB$L_INTD+8(R8),R5	; GET ADDRESS OF IDB
            54            65     D0  01E9   275 	MOVL	IDB$L_CSR(R5),R4	; GET ADDRESS OF CONTROLLER CSR
                                     01EC   276 ;
                                     01EC   277 ; ENTER INITIALIZATION CODE WITH QUESTIONABLE CSR. THE INIT CODE WILL
                                     01EC   278 ; FAULT TO 27$ IF THE CSR IS NON-EXISTENT.
                                     01EC   279 ;
                                     01EC   280 ;	R4 = CSR
                                     01EC   281 ;	R5 = IDB
                                     01EC   282 ;	R6 = DDB
                                     01EC   283 ;
                                     01EC   284 ;	R8,R9,R10 MUST BE PRESERVED
                                     01EC   285 ;
                                     01EC   286  
                       20 B8     16  01EC   287 	JSB	@CRB$L_INTD+12(R8)	; INITIALIZE CONTROLLER
            54         28 A8     D0  01EF   288 	MOVL	CRB$L_INTD+VEC$L_ADP(R8),R4 ; GET ADDRESS OF ADP
                          0A     13  01F3   289 	BEQL	24$			; IF EQL NONE
            54            64     D0  01F5   290 	MOVL	ADP$L_UBACSR(R4),R4	; GET ADDRESS OF ADAPTER CONFIGURATION REG
         08 A4         08 A4     D0  01F8   291 	MOVL	UBA$L_SR(R4),UBA$L_SR(R4) ; CLEAR STATUS REGISTER
                          29     12  01FD   292 	BNEQ	27$			; IF NEQ NONEXISTENT DEVICE
                                     01FF   293 24$:					;
            54         1C B9     D0  01FF   294 	MOVL	@CRB$L_INTD+8(R9),R4	; GET CONTROL REGISTER ADDRESS
            55            5A     D0  0203   295 	MOVL	R10,R5			; GET ADDRESS OF UCB
            53         0C AB     D0  0206   296 	MOVL	DDB$L_DDT(R11),R3	; GET ADDRESS OF DEVICE DISPATCH TABLE
            53         18 A3     D0  020A   297 	MOVL	DDT$L_INIT(R3),R3	; GET ADDRESS OF UNIT INITIALIZATION ROUTINE
                          AA     13  020E   298 	BEQL	20$			; IF EQL NONE
                          63     16  0210   299 	JSB	(R3)			; INITIALIZE UNIT
                          A6     11  0212   300 	BRB	20$			; 
                                     0214   301  
                                     0214   302 ;
                                     0214   303 ; ***** WARNING, DO NOT FALL THROUGH TO THE FOLLOWING CODE,
                                     0214   304 ; THE ALIGN IS NECESSARY FOR THE EXCEPTION ENTRY AND WILL (MAY)
                                     0214   305 ; LEAVE ZERO BYTES.
                                     0214   306 ;
                                     0214   307 ; CSR NON-EXISTENT
                                     0214   308 ;
                                     0214   309  
                                     0214   310 	.ALIGN	LONG
                                     0214   311 INI$MCHK:				; INIT MACHINE CHECK HANDLER
   00000000'EF   00000000'8F     E0  0214   312 	BBS	#EXE$V_SIMULATOR,EXE$GL_FLAGS,26$	; SKIP IF ON SIMULATOR
                          03         021F       
            30            00     DA  0220   313 	MTPR	#0,#PR$_SBIFS		; CLEAR FAULT BIT
            5E            5D     D0  0223   314 26$:	MOVL	FP,SP			; RESET STACK POINTER
                          6C     17  0226   315 	JMP	(AP)			; GO TO RETRY POINT
                          59     D4  0228   316 27$:	CLRL	R9			; SET NO LAST CRB TO FORCE UCB SEARCH
         58 AA            04     E5  022A   317 	BBCC	#UCB$V_ONLINE,UCB$W_STS(R10),20$; SET UNIT OFFLINE
                          8B         022E       
                          89     11  022F   318 	BRB	20$			; AND CONTINUE SEARCH
                                     0231   319 30$:
                 00000000'EF   8ED0  0231   320 	POPL	EXE$MCHKVEC		; RELOAD MACHINE CHECK VECTOR
                          01A9   30  0238   321 	BSBW	INI$RDONLY		; MAKE THE SYSTEM CODE READ ONLY
   00000000'EF            00'    E0  023B   322 	BBS	S^#EXE$V_NOCLOCK,EXE$GL_FLAGS,50$ ; BRANCH IF NOT USING CLOCK
                          46         0242       
                                     0243   323  
                           00000001  0243   324 	.IF NE	CA$_SIMULATOR
                                     0243   325  
INIT                                                             22-AUG-1978 00:11:21   VAX-11 MACRO X0.3-11               Page   7
00.4                                                                                                                             (1)

   00000000'EF            00'    E1  0243   326 	BBC	S^#EXE$V_SIMULATOR,EXE$GL_FLAGS,32$ ; IF CLR, NOT SIMULATOR
                          12         024A       
   00000362'9F       0064 8F     B0  024B   327 	MOVW	#100,@#SYS$IOBASE+^X0362 ; LOAD CLOCK COUNT REGISTER
   00000360'9F       004B 8F     B0  0254   328 	MOVW	#^X04B,@#SYS$IOBASE+^X0360 ; START CLOCK
   00000000'EF            00'    E1  025D   329 32$:	BBC	S^#EXE$V_CRDENABL,EXE$GL_FLAGS,35$  ; IF CLR, IGNORE CRD ERRORS
                          07         0264       
            34   00008000 8F     DA  0265   330 	MTPR	#<1@15>,#PR$_SBIER	; SET CRD INTERRUPT ENABLE
                                     026C   331 35$:					;
   00000000'EF            00'    E1  026C   332 	BBC	S^#EXE$V_SBIERR,EXE$GL_FLAGS,40$    ; IF CLR, IGNORE SBI ERRORS
                          07         0273       
            30   00040000 8F     DA  0274   333 	MTPR	#<1@18>,#PR$_SBIFS	; SET SBI FAULT ENABLE
                                     027B   334  
                                     027B   335 	.ENDC
                                     027B   336  
            19   FFFFD8F0 8F     DA  027B   337 40$:	MTPR	#-<10*1000>,#PR$_NICR	; LOAD NEXT INTERVAL REGISTER
            18   800000D1 8F     DA  0282   338 	MTPR	#^X800000D1,#PR$_ICCS	; CLEAR ERROR AND START CLOCK
                                     0289   339 50$:					;
                                     0289   340 60$:					;
                                     0289   341 	SETIPL	#IPL$_SCHED		; SET IPL TO SCHED LEVEL
                 00000000'EF     17  028C   342 	JMP	SCH$SCHED		; GO SCHEDULE
                                     0292   343 	.DSABL	LSB
                                     0292   344  
                                     0292   345 ;
                                     0292   346 ; CONFIGURE UNIBUS ADAPTER DMC11 AND DJ11 I/O DATA BASE
                                     0292   347 ;
                                     0292   348 ; INPUTS:
                                     0292   349 ;
                                     0292   350 ;	R9 = BASE ADDRESS OF UNIBUS DEVICE REGISTERS.
                                     0292   351 ;	R8 = BASE ADDRESS OF CASE VECTOR TABLE.
                                     0292   352 ;	R7 = BASE INDEX TO INTERRUPT VECTOR CASE TABLE.
                                     0292   353 ;	R6 = ADDRESS OF UNIBUS ADAPTER CONFIGURATION STATUS REGISTER.
                                     0292   354 ;
                                     0292   355 ; OUTPUTS:
                                     0292   356 ;
                                     0292   357 ;	FOR EACH DEVICE IN THE CONFIGURATION ARRAY, IF THE DEVICE EXISTS, THEN
                                     0292   358 ;	THE DEVICE CSR ADDRESS IS FILLED INTO THE IDB AND THE INPUT AND OUTPUT
                                     0292   359 ;	INTERRUPT VECTORS ARE FILLED INTO THE CASE TABLE. IF THE DEVICE DOES
                                     0292   360 ;	NOT EXIST, THEN A NONEXISTENT DEVICE CSR ADDRESS IS FILLED INTO THE IDB.
                                     0292   361 ;
                                     0292   362  
                                     0292   363 CONFIGURE:				; CONFIGURE UBA DMC11'S AND DJ11'S
            55            8A     D0  0292   364 	MOVL	(R10)+,R5		; GET ADDRESS OF DEVICE TABLE
                          69     B5  0295   365 10$:	TSTW	(R9)			; TEST IF DEVICE IS PRESENT
         08 A6         08 A6     D0  0297   366 	MOVL	UBA$L_SR(R6),UBA$L_SR(R6) ; DEVICE PRESENT?
                          20     12  029C   367 	BNEQ	30$			; IF NEQ NO
                          65     D5  029E   368 	TSTL	(R5)			; DATA BASE EXIST FOR THIS DEVICE?
                          14     13  02A0   369 	BEQL	20$			; IF EQL NO
            95            59     D0  02A2   370 	MOVL	R9,@(R5)+		; SET ADDRESS OF DEVICE CSR
            85            58     C3  02A5   371 	SUBL3	R8,(R5)+,R0		; CALCULATE OFFSET TO INPUT INTERRUPT
                          50         02A8       
            6847          50     B0  02A9   372 	MOVW	R0,(R8)[R7]		; SET CASE TABLE DISPLACEMENT
            85            58     C3  02AD   373 	SUBL3	R8,(R5)+,R0		; CALCULATE OFFSET TO OUTPUT INTERRUPT
                          50         02B0       
         02 A847          50     B0  02B1   374 	MOVW	R0,2(R8)[R7]		; SET CASE TABLE DISPLACEMENT
            59            08     C0  02B6   375 20$:	ADDL	#8,R9			; ADVANCE TO NEXT DEVICE CSR
            57            02     C0  02B9   376 	ADDL	#2,R7			; ADVANCE TO NEXT VECTOR
                          D7     11  02BC   377 	BRB	10$			;
INIT                                                             22-AUG-1978 00:11:21   VAX-11 MACRO X0.3-11               Page   8
00.4                                                                                                                             (1)

                          65     D5  02BE   378 30$:	TSTL	(R5)			; DATA BASE EXIST FOR THIS DEVICE?
                          08     13  02C0   379 	BEQL	40$			; IF EQL NO
            95            59     D0  02C2   380 	MOVL	R9,@(R5)+		; SET NONEXISTENT DEVICE CSR ADDRESS
            55            08     C0  02C5   381 	ADDL	#8,R5			; ADVANCE TO NEXT DEVICE
                          CB     11  02C8   382 	BRB	10$			;
            59            08     C0  02CA   383 40$:	ADDL	#8,R9			;ADVANCE TO NEXT DEVICE CSR
                                 05  02CD   384 	RSB				;
                                     02CE   385 
                                     02CE   386 ;
                                     02CE   387 ; MBA_GEN - MBA DEVICE DATABASE GENERATION
                                     02CE   388 ;
                                     02CE   389 ; THIS ROUTINE IS CALLED WHEN A VALID MBA HAS BEEN ENCOUNTERED. ITS PURPOSE IS TO
                                     02CE   390 ; GENERATE THE DEVICE DATABASE NECESSARY TO HANDLE THE MBA CONFIGURATION.
                                     02CE   391 ;
                                     02CE   392 ; INPUTS:
                                     02CE   393 ;
                                     02CE   394 ;	R9 = ADDRESS OF SCB INTERRUPT VECTOR.
                                     02CE   395 ;	R10 = ADDRESS OF MBA CONFIGURATION REGISTER.
                                     02CE   396 ;	R11 = ADDRESS OF FIRST DEVICE DESCRIPTOR.
                                     02CE   397 ;
                                     02CE   398 ; OUTPUTS:
                                     02CE   399 ;
                                     02CE   400 ;	MBA DRIVE UNITS ARE SCANNED IN SUCCESSION FOR EACH DEVICE DESCRIPTOR. FOR
                                     02CE   401 ;	EACH DEVICE TYPE - DRIVE TYPE MATCH, A UCB AND ITS ASSOCIATED DATABASE IS
                                     02CE   402 ;	GENERATED.
                                     02CE   403 ;
                                     02CE   404  
                                     02CE   405 MBA_GEN:				;
            58            8B     D0  02CE   406 	MOVL	(R11)+,R8		;GET ADDRESS OF NEXT DEVICE DESCRIPTOR
                          01     12  02D1   407 	BNEQ	10$			;IF NEQ ANOTHER DEVICE TO CONSIDER
                                 05  02D3   408 	RSB				;
                                     02D4   409  
                                     02D4   410 ;
                                     02D4   411 ; SCAN FOR DEVICE TYPE - DRIVE TYPE MATCH
                                     02D4   412 ;
                                     02D4   413  
            57            88     D0  02D4   414 10$:	MOVL	(R8)+,R7		;GET ADDRESS OF DEVICE DDB
            56         04 A7     D0  02D7   415 	MOVL	DDB$L_UCB(R7),R6	;GET ADDRESS OF FIRST UCB
            55            88     D0  02DB   416 	MOVL	(R8)+,R5		;GET ADDRESS OF PRIMARY CRB
            54            88     D0  02DE   417 	MOVL	(R8)+,R4		;GET ADDRESS OF SECONDARY CRB
                          52     D4  02E1   418 	CLRL	R2			;CLEAR DRIVE OFFSET ADDRESS
            53         04 A8     D0  02E3   419 20$:	MOVL	4(R8),R3		;SET STARTING ADDRESS OF DRIVE TYPE LIST
            51       0418 CA42   D0  02E7   420 	MOVL	MBA$L_ERB+24(R10)[R2],R1 ;READ DRIVE TYPE REGISTER
            51       3E00 8F     AA  02ED   421 	BICW	#^C<^XC1FF>,R1		;CLEAR EXTRANEOUS BITS
            50         08 AA     D0  02F2   422 	MOVL	MBA$L_SR(R10),R0	;READ MBA STATUS REGISTER
         08 AA            50     D0  02F6   423 	MOVL	R0,MBA$L_SR(R10)	;CLEAR MBA STATUS REGISTER
            50            12     E0  02FA   424 	BBS	#MBA$V_SR_NED,R0,40$	;IF SET, NONEXISTENT DRIVE
                          15         02FD       
            51            0F     E1  02FE   425 	BBC	#15,R1,30$		;IF CLR, NOT TAPE DEVICE
                          05         0301       
            51       3FFF 8F     AA  0302   426 	BICW	#^C<^XC000>,R1		;CLEAR EXTRANEOUS BITS
            83            51     B1  0307   427 30$:	CMPW	R1,(R3)+		;DRIVE TYPE MATCH?
                          13     13  030A   428 	BEQL	50$			;IF EQL YES
            53            0A     C0  030C   429 	ADDL	#2+4+4,R3		;ADVANCE TO NEXT ENTRY
                          63     B5  030F   430 	TSTW	(R3)			;ANY MORE TYPES IN LIST?
                          F4     12  0311   431 	BNEQ	30$			;IF NEQ YES
            20   000000E0 8F     F1  0313   432 40$:	ACBL	#^X80/4*7,#^X80/4,R2,20$ ;ANY MORE UNITS TO EXAMINE?
INIT                                                             22-AUG-1978 00:11:21   VAX-11 MACRO X0.3-11               Page   9
00.4                                                                                                                             (1)

            FFC6          52         031A       
                          AF     11  031D   433 	BRB	MBA_GEN			;
                                     031F   434  
                                     031F   435 ;
                                     031F   436 ; MBA DRIVE TYPE - DEVICE DEVICE TYPE MATCH
                                     031F   437 ;
                                     031F   438 
            50         14 A7     9A  031F   439 50$:	MOVZBL	DDB$T_NAME(R7),R0	;GET LENGTH OF DEVICE NAME
         14 A740       00 B8     90  0323   440 	MOVB	@(R8),DDB$T_NAME(R7)[R0] ;INSERT CONTROLLER DESIGNATION
                       00 B8     96  0329   441 	INCB	@(R8)			;UPDATE CONTROLLER DESIGNATION
   00000004'FF            57     D0  032C   442 	MOVL	R7,@IOC$GL_DEVLIST+4	;LINK NEW DDB TO OLD LAST
   00000004'EF            57     D0  0333   443 	MOVL	R7,IOC$GL_DEVLIST+4	;SET ADDRESS OF NEW LAST
            69         15 A4     9E  033A   444 	MOVAB	CRB$L_INTD+1(R4),(R9)	;SET INTERRUPT VECTOR ADDRESS
            55            54     D1  033E   445 	CMPL	R4,R5			;CRB ADDRESSES MATCH?
                          68     12  0341   446 	BNEQ	MBA_TAPE		;IF NEQ NO
                                     0343   447  
                                     0343   448 ;
                                     0343   449 ; DEVICE IS A DISK - GENERATE DISK DATA BASE
                                     0343   450 ;
                                     0343   451  
                                     0343   452 MBA_DISK:				;
            52            20     C7  0343   453 	DIVL3	#^X80/4,R2,R0		;CALCULATE DRIVE UNIT NUMBER
                          50         0346       
            51         1C A4     D0  0347   454 	MOVL	CRB$L_INTD+8(R4),R1	;GET ADDRESS OF SECONDARY CRB'S IDB
         10 A140          56     D0  034B   455 	MOVL	R6,IDB$L_UCBLST(R1)[R0]	;INSERT DEVICE UCB ADDRESS
         48 A6            50     B0  0350   456 	MOVW	R0,UCB$W_UNIT(R6)	;SET DEVICE UNIT NUMBER
         74 A6            50     90  0354   457 	MOVB	R0,UCB$B_SLAVE(R6)	;SET SLAVE CONTROLLER NUMBER
         75 A6            52     90  0358   458 	MOVB	R2,UCB$B_SLAVE+1(R6)	;SET DRIVE OFFSET VALUE
         39 A6            83     33  035C   459 	CVTWB	(R3)+,UCB$B_DEVTYPE(R6)	;SET DEVICE TYPE
         3C A6            83     D0  0360   460 	MOVL	(R3)+,UCB$L_DEVDEPEND(R6) ;SET DEVICE DEPENDENT DATA
       0080 C6            83     D0  0364   461 	MOVL	(R3)+,UCB$L_MAXBLOCK(R6) ;SET MAXIMUM LOGICAL BLOCK NUMBER
            55            56     D0  0369   462 	MOVL	R6,R5			;SAVE CURRENT UCB ADDRESS
            56         2C A6     D0  036C   463 	MOVL	UCB$L_LINK(R6),R6	;GET ADDRESS OF NEXT UCB
                          0D     13  0370   464 	BEQL	20$			;IF EQL NONE
            20   000000E0 8F     F1  0372   465 10$:	ACBL	#^X80/4*7,#^X80/4,R2,30$ ;ANY MORE DRIVES TO EXAMINE?
            0006          52         0379       
                       2C A5     D4  037C   466 	CLRL	UCB$L_LINK(R5)		;CLEAR LINK TO NEXT UCB
                          FF4C   31  037F   467 20$:	BRW	MBA_GEN			;
            53         04 A8     D0  0382   468 30$:	MOVL	4(R8),R3		;GET STARTING ADDRESS OF DRIVE TYPE LIST
            51       0418 CA42   D0  0386   469 40$:	MOVL	MBA$L_ERB+24(R10)[R2],R1 ;READ DRIVE TYPE REGISTER
            51       FE00 8F     AA  038C   470 	BICW	#^C<^X1FF>,R1		;CLEAR EXTRANEOUS BITS
            50         08 AA     D0  0391   471 	MOVL	MBA$L_SR(R10),R0	;READ MBA STATUS REGISTER
         08 AA            50     D0  0395   472 	MOVL	R0,MBA$L_SR(R10)	;CLEAR MBA STATSU REGISTER
            50            12     E0  0399   473 	BBS	#MBA$V_SR_NED,R0,10$	;IF SET, NONEXISTENT DRIVE
                          D5         039C       
            83            51     B1  039D   474 50$:	CMPW	R1,(R3)+		;DRIVE TYPES MATCH?
                          A1     13  03A0   475 	BEQL	MBA_DISK		;IF EQL YES
            53            0A     C0  03A2   476 	ADDL	#2+4+4,R3		;ADVANCE TO NEXT ENTRY
                          63     B5  03A5   477 	TSTW	(R3)			;ANY MORE DRIVE TYPES TO EXAMINE?
                          F4     12  03A7   478 	BNEQ	50$			;IF NEQ YES
                          C7     11  03A9   479 	BRB	10$			;
                                     03AB   480  
                                     03AB   481 ;
                                     03AB   482 ; DEVICE IS TAPE
                                     03AB   483 ;
                                     03AB   484  
                                     03AB   485 MBA_TAPE:				;
INIT                                                             22-AUG-1978 00:11:21   VAX-11 MACRO X0.3-11               Page  10
00.4                                                                                                                             (1)

            52            20     C7  03AB   486 	DIVL3	#^X80/4,R2,R0		;CALCULATE DRIVE UNIT NUMBER
                          50         03AE       
            51         1C A4     D0  03AF   487 	MOVL	CRB$L_INTD+8(R4),R1	;GET ADDRESS OF SECONDARY CRB'S IDB
         10 A140       15 A5     9E  03B3   488 	MOVAB	CRB$L_INTD+1(R5),IDB$L_UCBLST(R1)[R0] ;SET ADDRESS OF DISPATCHER
            55         1C A5     D0  03B9   489 	MOVL	CRB$L_INTD+8(R5),R5	;GET ADDRESS OF PRIMARY CRB'S IDB
            65       0400 CA42   DE  03BD   490 	MOVAL	MBA$L_ERB(R10)[R2],IDB$L_CSR(R5) ;INSERT DRIVE REGISTER BASE ADDRESS
                          52     D4  03C3   491 	CLRL	R2			;CLEAR SLAVE DRIVE NUMBER
         74 A6            50     90  03C5   492 10$:	MOVB	R0,UCB$B_SLAVE(R6)	;INSERT SLAVE DRIVE NUMBER
         10 A542          56     D0  03C9   493 	MOVL	R6,IDB$L_UCBLST(R5)[R2]	;INSERT ADDRESS OF UCB
            56         2C A6     D0  03CE   494 	MOVL	UCB$L_LINK(R6),R6	;GET ADDRESS OF NEXT UCB
                          04     13  03D2   495 	BEQL	20$			;IF EQL NONE
            52            07     F3  03D4   496 	AOBLEQ	#7,R2,10$		;ANY MORE UNITS TO SET UP?
                          ED         03D7       
                                     03D8   497 20$:					;
                          FEF3   31  03D8   498 	BRW	MBA_GEN			;
                                     03DB   499  
                                     03DB   500 ;
                                     03DB   501 ; INITIAL BREAKPOINT
                                     03DB   502 ;
                                     03DB   503 ; THIS BREAKPOINT CAUSES ENTRY TO THE DEBUGGER
                                     03DB   504 ;
                                     03DB   505 ; ****** WARNING DO NOT ALTER THIS ROUTINE, JUST A BPT AND RETURN.
                                     03DB   506 ;
                                     03DB   507   
                                     03DB   508 INI$BRK::				;
                                 03  03DB   509 	BPT				;
                                 05  03DC   510 	RSB				;
                                     03DD   511  
                                     03DD   512  
                                     03DD   513 ;
                                     03DD   514 ; INITIALIZE SYSTEM FOR READ-WRITE ACCESS
                                     03DD   515 ;
                                     03DD   516  
                                     03DD   517 	.ENABL	LSB
                                     03DD   518 INI$WRITABLE::				;
                          0F     BB  03DD   519 	PUSHR	#^M<R0,R1,R2,R3>	; PRESERVE REGISTERS USED
            50            0E     9A  03DF   520 	MOVZBL	#PRT$C_URKW,R0		; PROTECTION TO USE
                          05     11  03E2   521 	BRB	20$			;
                                     03E4   522  
                                     03E4   523  
                                     03E4   524 ;
                                     03E4   525 ; INITIALIZE SYSTEM CODE FOR READ-ONLY ACCESS
                                     03E4   526 ;
                                     03E4   527  
                                     03E4   528 INI$RDONLY::				;
                          0F     BB  03E4   529 	PUSHR	#^M<R0,R1,R2,R3>	; PRESERVE REGISTERS USED
            50            0F     9A  03E6   530 	MOVZBL	#PRT$C_UR,R0		; PROTECTION TO USE
                                     03E9   531 20$:					;
                          0F     BA  03E9   532 	POPR	#^M<R0,R1,R2,R3>	; RESTORE REGISTERS USED
                                 05  03EB   533 	RSB				; NOP FOR NOW
                                     03EC   534  
                                     03EC   535 	.END	$BOOT_DEBUG
INIT                                                             22-AUG-1978 00:11:21   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (1)

$BOOT_DEBUG      00000038 RG    03   DEV$M_AVL      = 00040000            EXE$OUTZSTRING   ********   X   03   
$BOOT_NORM       00000034 RG    03   DEV$M_CCL      = 00000002            EXE$SYSBASE      ********   X   03   
$CON_DEBUG       00000038 RG    03   DEV$M_DIR      = 00000008            EXE$V_CRDENABL   ********   X   03   
$CON_NORM        00000034 RG    03   DEV$M_DMT      = 00200000            EXE$V_NOAUTOCNF  ********   X   03   
ADP$B_TYPE       0000000A            DEV$M_ELG      = 00400000            EXE$V_NOCLOCK    ********   X   03   
ADP$C_NUMDATAP = 00000010            DEV$M_FOD      = 00004000            EXE$V_SBIERR     ********   X   03   
ADP$L_DPQBL      00000010            DEV$M_FOR      = 01000000            EXE$V_SIMULATOR  ********   X   03   
ADP$L_DPQFL      0000000C            DEV$M_GEN      = 00020000            GBL...         = 00000000            
ADP$L_INTD       0000005C            DEV$M_IDV      = 04000000            IDB$B_TYPE       0000000A            
ADP$L_LINK       00000004            DEV$M_MBX      = 00100000            IDB$B_UNITS      0000000B            
ADP$L_MRQBL      00000018            DEV$M_MNT      = 00080000            IDB$C_LENGTH     00000014            
ADP$L_MRQFL      00000014            DEV$M_NET      = 00002000            IDB$K_LENGTH     00000014            
ADP$L_UBACSR     00000000            DEV$M_ODV      = 08000000            IDB$L_ADP        0000000C            
ADP$W_DPBITMAP   0000001C            DEV$M_RCK      = 40000000            IDB$L_CSR        00000000            
ADP$W_MRBITMAP   0000001E            DEV$M_REC      = 00000001            IDB$L_OWNER      00000004            
ADP$W_SIZE       00000008            DEV$M_RND      = 10000000            IDB$L_UCBLST     00000010            
ANNOUNCE         00000004 R     03   DEV$M_RTM      = 20000000            IDB$W_SIZE       00000008            
BIT...         = 00000008            DEV$M_SDI      = 00000010            INI$BRK          000003DB RG    03   
CA$_MEASURE    = 00000002            DEV$M_SHR      = 00010000            INI$MCHK         00000214 R     03   
CA$_MEASURE_IOT= 00000004            DEV$M_SPL      = 00000040            INI$RDONLY       000003E4 RG    03   
CA$_SIMULATOR  = 00000001            DEV$M_SQD      = 00000020            INI$WRITABLE     000003DD RG    03   
CONFIGURE        00000292 R     03   DEV$M_SWL      = 02000000            INI_DEVICE       0000015B R     03   
CR             = 0000000D            DEV$M_TRM      = 00000004            INI_PSTATE       00000141 RG    03   
CRB$B_MASK       0000000E            DEV$M_WCK      = 80000000            IOC$GL_ADPLIST   ********   X   03   
CRB$B_TT_ATTN    00000004            DEV$V_ALL      = 00000017            IOC$GL_DEVLIST   ********   X   03   
CRB$B_TT_EXPEC   00000005            DEV$V_AVL      = 00000012            IPL$_ASTDEL    = 00000002            
CRB$B_TYPE       0000000A            DEV$V_CCL      = 00000001            IPL$_HWCLK     = 00000018            
CRB$C_LENGTH     00000028            DEV$V_DIR      = 00000003            IPL$_IOPOST    = 00000004            
CRB$K_LENGTH     00000028            DEV$V_DMT      = 00000015            IPL$_MAILBOX   = 0000000B            
CRB$L_INTD       00000014            DEV$V_ELG      = 00000016            IPL$_POWER     = 0000001F            
CRB$L_LINK       00000010            DEV$V_FOD      = 0000000E            IPL$_QUEUEAST  = 00000006            
CRB$L_TT_DIAL    00000000            DEV$V_FOR      = 00000018            IPL$_SCHED     = 00000003            
CRB$L_WQBL       00000004            DEV$V_GEN      = 00000011            IPL$_SYNCH     = 00000007            
CRB$L_WQFL       00000000            DEV$V_IDV      = 0000001A            IPL$_TIMER     = 00000007            
CRB$M_BSY      = 00000001            DEV$V_MBX      = 00000014            IRP$B_CARCON     00000038            
CRB$V_BSY      = 00000000            DEV$V_MNT      = 00000013            IRP$B_EFN        00000022            
CRB$W_REFC       0000000C            DEV$V_NET      = 0000000D            IRP$B_PRI        00000023            
CRB$W_SIZE       00000008            DEV$V_ODV      = 0000001B            IRP$B_RMOD       0000000B            
DDB$B_ACPCLASS   00000013            DEV$V_RCK      = 0000001E            IRP$B_TYPE       0000000A            
DDB$B_TYPE       0000000A            DEV$V_REC      = 00000000            IRP$C_LENGTH     0000004C            
DDB$C_LENGTH     00000014            DEV$V_RND      = 0000001C            IRP$K_LENGTH     0000004C            
DDB$K_LENGTH     00000014            DEV$V_RTM      = 0000001D            IRP$L_AST        00000010            
DDB$L_ACPD       00000010            DEV$V_SDI      = 00000004            IRP$L_ASTPRM     00000014            
DDB$L_DDT        0000000C            DEV$V_SHR      = 00000010            IRP$L_DIAGBUF    00000044            
DDB$L_LINK       00000000            DEV$V_SPL      = 00000006            IRP$L_IOQBL      00000004            
DDB$L_UCB        00000004            DEV$V_SQD      = 00000005            IRP$L_IOQFL      00000000            
DDB$T_NAME       00000014            DEV$V_SWL      = 00000019            IRP$L_IOSB       00000024            
DDB$W_SIZE       00000008            DEV$V_TRM      = 00000002            IRP$L_IOST1      00000034            
DDT$L_CANCEL     0000000C            DEV$V_WCK      = 0000001F            IRP$L_IOST2      00000038            
DDT$L_FDT        00000008            DEVNAM           00000000 R     03   IRP$L_MEDIA      00000034            
DDT$L_INIT       00000018            DSC$C_P0PTLGH    ********   X   03   IRP$L_PID        0000000C            
DDT$L_REGDUMP    00000010            DSC$C_P1PTLGH    ********   X   03   IRP$L_SEGVBN     00000040            
DDT$L_START      00000000            DSC$GL_P0PTE     ********   X   03   IRP$L_SEQNUM     00000048            
DDT$L_UNSOLINT   00000004            DSC$GL_P1PTE     ********   X   03   IRP$L_SVAPTE     0000002C            
DDT$W_DIAGBUF    00000014            EXE$AL_NPAGEDYN  00000000 RG    04   IRP$L_TT_TERM    00000038            
DDT$W_ERRORBUF   00000016            EXE$GL_FLAGS     ********   X   03   IRP$L_UCB        0000001C            
DEV$M_ALL      = 00800000            EXE$MCHKVEC      ********   X   03   IRP$L_WIND       00000018            
INIT                                                             22-AUG-1978 00:11:21   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (1)

IRP$M_BUFIO    = 00000001            MBA$L_SR         00000008            MBA$V_SR_ERCONF= 00000003            
IRP$M_CHAINED  = 00000020            MBA$L_VAR        0000000C            MBA$V_SR_INVMAP= 00000004            
IRP$M_COMPLX   = 00000008            MBA$M_CR_ABORT = 00000002            MBA$V_SR_ISTO  = 00000001            
IRP$M_DIAGBUF  = 00000080            MBA$M_CR_IE    = 00000004            MBA$V_SR_MAPPE = 00000005            
IRP$M_FUNC     = 00000002            MBA$M_CR_INIT  = 00000001            MBA$V_SR_MBEXC = 00000007            
IRP$M_PAGIO    = 00000004            MBA$M_CSR_MT   = 08000000            MBA$V_SR_MCPE  = 00000011            
IRP$M_PHYSIO   = 00000100            MBA$M_CSR_OT   = 00200000            MBA$V_SR_MDPE  = 00000006            
IRP$M_PRIVIO   = 00000200            MBA$M_CSR_PD   = 00800000            MBA$V_SR_MXF   = 00000008            
IRP$M_SWAPIO   = 00000040            MBA$M_CSR_PE   = 80000000            MBA$V_SR_NED   = 00000012            
IRP$M_VIRTUAL  = 00000010            MBA$M_CSR_PU   = 00400000            MBA$V_SR_NRCONF= 0000001E            
IRP$S_FCODE    = 00000006            MBA$M_CSR_URD  = 20000000            MBA$V_SR_PGE   = 00000013            
IRP$S_FMOD     = 0000000A            MBA$M_CSR_WS   = 40000000            MBA$V_SR_RDS   = 00000002            
IRP$S_MODE     = 00000002            MBA$M_CSR_XMFLT= 04000000            MBA$V_SR_RDTO  = 00000000            
IRP$V_BUFIO    = 00000000            MBA$M_ERROR    = 000E1FFF            MBA$V_SR_WCKLWR= 00000009            
IRP$V_CHAINED  = 00000005            MBA$M_SR_ATTN  = 00010000            MBA$V_SR_WCKUPR= 0000000A            
IRP$V_COMPLX   = 00000003            MBA$M_SR_CRD   = 20000000            MBA_DISK         00000343 R     03   
IRP$V_DIAGBUF  = 00000007            MBA$M_SR_DLT   = 00000800            MBA_GEN          000002CE R     03   
IRP$V_FCODE    = 00000000            MBA$M_SR_DTABT = 00001000            MBA_SCAN         00000123 R     03   
IRP$V_FMOD     = 00000006            MBA$M_SR_DTBUSY= 80000000            MBA_TAPE         000003AB R     03   
IRP$V_FUNC     = 00000001            MBA$M_SR_DTCOMP= 00002000            MMG$AL_SYSPAGTB  ********   X   03   
IRP$V_MODE     = 00000000            MBA$M_SR_ERCONF= 00000008            MMG$C_RLSPTE     ********   X   03   
IRP$V_PAGIO    = 00000002            MBA$M_SR_INVMAP= 00000010            PFL$B_PFC        0000000B            
IRP$V_PHYSIO   = 00000008            MBA$M_SR_ISTO  = 00000002            PFL$B_TYPE       0000000A            
IRP$V_PRIVIO   = 00000009            MBA$M_SR_MAPPE = 00000020            PFL$C_LENGTH     00000020            
IRP$V_SWAPIO   = 00000006            MBA$M_SR_MBEXC = 00000080            PFL$K_LENGTH     00000020            
IRP$V_VIRTUAL  = 00000004            MBA$M_SR_MCPE  = 00020000            PFL$L_BITMAP     00000000            
IRP$W_ABCNT      0000003C            MBA$M_SR_MDPE  = 00000040            PFL$L_BITMAPSIZ  00000014            
IRP$W_BCNT       00000032            MBA$M_SR_MXF   = 00000100            PFL$L_FREPAGCNT  00000018            
IRP$W_BOFF       00000030            MBA$M_SR_NED   = 00040000            PFL$L_RESERVCNT  0000001C            
IRP$W_CHAN       00000028            MBA$M_SR_NRCONF= 40000000            PFL$L_STARTBYTE  00000004            
IRP$W_FUNC       00000020            MBA$M_SR_PGE   = 00080000            PFL$L_VBN        00000010            
IRP$W_OBCNT      0000003E            MBA$M_SR_RDS   = 00000004            PFL$L_WINDOW     0000000C            
IRP$W_SIZE       00000008            MBA$M_SR_RDTO  = 00000001            PFL$W_SIZE       00000008            
IRP$W_STS        0000002A            MBA$M_SR_WCKLWR= 00000200            PFN$C_ACTIVE   = 00000007            
IRP$W_TT_PRMPT   0000003C            MBA$M_SR_WCKUPR= 00000400            PFN$C_BADPAGLST= 00000002            
LF             = 0000000A            MBA$S_CSR_ADCOD= 00000008            PFN$C_FREPAGLST= 00000000            
LOG$B_AMOD       0000000E            MBA$S_ERB_UNIT = 00000003            PFN$C_GBLWRT   = 00000003            
LOG$B_TABLE      0000000B            MBA$TABLE        ********   X   03   PFN$C_GLOBAL   = 00000002            
LOG$B_TYPE       0000000A            MBA$V_CR_ABORT = 00000001            PFN$C_GPGTBL   = 00000005            
LOG$C_GROUP    = 00000001            MBA$V_CR_IE    = 00000002            PFN$C_MFYPAGLST= 00000001            
LOG$C_LENGTH     00000014            MBA$V_CR_INIT  = 00000000            PFN$C_PPGTBL   = 00000004            
LOG$C_NAMLENGTH= 00000040            MBA$V_CSR_ADCOD= 00000000            PFN$C_PROCESS  = 00000000            
LOG$C_PROCESS  = 00000002            MBA$V_CSR_MT   = 0000001B            PFN$C_RDERR    = 00000004            
LOG$C_SYSTEM   = 00000000            MBA$V_CSR_OT   = 00000015            PFN$C_RDINPROG = 00000006            
LOG$K_LENGTH     00000014            MBA$V_CSR_PD   = 00000017            PFN$C_RELPEND  = 00000003            
LOG$L_LTBL       00000004            MBA$V_CSR_PE   = 0000001F            PFN$C_SYSTEM   = 00000001            
LOG$L_LTFL       00000000            MBA$V_CSR_PU   = 00000016            PFN$C_WRTINPROG= 00000005            
LOG$L_MBXUCB     00000010            MBA$V_CSR_URD  = 0000001D            PFN$M_BADPAG   = 00000020            
LOG$T_NAME       00000014            MBA$V_CSR_WS   = 0000001E            PFN$M_BAK      = 007FFFFF            
LOG$W_GROUP      0000000C            MBA$V_CSR_XMFLT= 0000001A            PFN$M_COLLISION= 00000010            
LOG$W_SIZE       00000008            MBA$V_ERB_UNIT = 00000007            PFN$M_DELCON   = 00000010            
MBA$L_AS         00000410            MBA$V_SR_ATTN  = 00000010            PFN$M_GBLBAK   = 00800000            
MBA$L_BCR        00000010            MBA$V_SR_CRD   = 0000001D            PFN$M_LOC      = 00000007            
MBA$L_CR         00000004            MBA$V_SR_DLT   = 0000000B            PFN$M_MODIFY   = 00000080            
MBA$L_CSR        00000000            MBA$V_SR_DTABT = 0000000C            PFN$M_PAGTYP   = 00000007            
MBA$L_ERB        00000400            MBA$V_SR_DTBUSY= 0000001F            PFN$M_PGFLX    = FF000000            
MBA$L_MAP        00000800            MBA$V_SR_DTCOMP= 0000000D            PFN$M_RPTEVT   = 00000040            
INIT                                                             22-AUG-1978 00:11:21   VAX-11 MACRO X0.3-11               Page  13
SYMBOL TABLE                                                                                                                     (1)

PFN$S_BAK      = 00000017            PHD$L_SSP        00000080            PR$_SBIER      = 00000034            
PFN$S_GBLBAK   = 00000001            PHD$L_USP        00000084            PR$_SBIFS      = 00000030            
PFN$S_LOC      = 00000003            PHD$L_WSL        000000D8            PR$_SBIMT      = 00000033            
PFN$S_PAGTYP   = 00000003            PHD$M_DALCSTX  = 00000002            PR$_SBIQC      = 00000036            
PFN$S_PGFLX    = 00000008            PHD$M_PFMFLG   = 00000001            PR$_SBIS       = 00000031            
PFN$V_BADPAG   = 00000005            PHD$Q_PRIVMSK    00000000            PR$_SBISC      = 00000032            
PFN$V_BAK      = 00000000            PHD$S_ASTLVL   = 00000008            PR$_SBITA      = 00000035            
PFN$V_COLLISION= 00000004            PHD$S_P0LR     = 00000018            PR$_SBR        = 0000000C            
PFN$V_DELCON   = 00000004            PHD$V_ASTLVL   = 00000018            PR$_SCBB       = 00000011            
PFN$V_GBLBAK   = 00000017            PHD$V_DALCSTX  = 00000001            PR$_SID        = 0000003E            
PFN$V_LOC      = 00000000            PHD$V_P0LR     = 00000000            PR$_SIRR       = 00000014            
PFN$V_MODIFY   = 00000007            PHD$V_PFMFLG   = 00000000            PR$_SISR       = 00000015            
PFN$V_PAGTYP   = 00000000            PHD$W_ASTLM      00000044            PR$_SLR        = 0000000D            
PFN$V_PGFLX    = 00000018            PHD$W_BAK        00000048            PR$_SSP        = 00000002            
PFN$V_RPTEVT   = 00000006            PHD$W_DFWSCNT    0000001A            PR$_TBIA       = 00000039            
PHD$B_ASTLVL     000000CF            PHD$W_EXTDYNWS   00000076            PR$_TBIS       = 0000003A            
PHD$B_DFPFC      00000038            PHD$W_FILLM      00000060            PR$_TODR       = 0000001B            
PHD$B_PAGFIL     0000001F            PHD$W_FLAGS      0000003A            PR$_TXCS       = 00000022            
PHD$C_LENGTH     000000D8            PHD$W_PFMFLG     0000003A            PR$_TXDB       = 00000023            
PHD$K_LENGTH     000000D8            PHD$W_PHVINDEX   00000046            PR$_USP        = 00000003            
PHD$L_BIOCNT     00000054            PHD$W_PRCLM      00000042            PR$_WCSA       = 0000002C            
PHD$L_CPULIM     00000058            PHD$W_PST        00000020            PR$_WCSD       = 0000002D            
PHD$L_CPUTIM     0000003C            PHD$W_PSTFREE    00000026            PRT$C_ER       = 00000007            
PHD$L_DIOCNT     00000050            PHD$W_PSTLAST    00000024            PRT$C_ERKW     = 00000006            
PHD$L_ESP        0000007C            PHD$W_PTCNTACT   00000070            PRT$C_EW       = 00000005            
PHD$L_FREP0VA    00000028            PHD$W_PTCNTLCK   0000006C            PRT$C_KR       = 00000003            
PHD$L_FREP1VA    00000030            PHD$W_PTCNTMAX   00000072            PRT$C_KW       = 00000002            
PHD$L_FREPTECNT  0000002C            PHD$W_PTCNTVAL   0000006E            PRT$C_NA       = 00000000            
PHD$L_KSP        00000078            PHD$W_QUANT      00000040            PRT$C_RESERVED = 00000001            
PHD$L_P0BR       000000C8            PHD$W_TQLM       00000062            PRT$C_SR       = 0000000B            
PHD$L_P0LRASTL   000000CC            PHD$W_WSAUTH     0000000A            PRT$C_SREW     = 00000009            
PHD$L_P1BR       000000D0            PHD$W_WSDYN      0000000E            PRT$C_SRKW     = 0000000A            
PHD$L_P1LR       000000D4            PHD$W_WSFLUID    00000074            PRT$C_SW       = 00000008            
PHD$L_PAGEFLTS   0000004C            PHD$W_WSLAST     00000012            PRT$C_UR       = 0000000F            
PHD$L_PAGFIL     0000001C            PHD$W_WSLIST     00000008            PRT$C_UREW     = 0000000D            
PHD$L_PC         000000C0            PHD$W_WSLOCK     0000000C            PRT$C_URKW     = 0000000E            
PHD$L_PCB        00000078            PHD$W_WSLX       0000004A            PRT$C_URSW     = 0000000C            
PHD$L_PGFLCNT    00000034            PHD$W_WSNEXT     00000010            PRT$C_UW       = 00000004            
PHD$L_PGFLQUOTA  0000005C            PHD$W_WSQUOTA    00000018            PTE$C_EOWN     = 00800000            
PHD$L_PSL        000000C4            PR$_ACCR       = 00000029            PTE$C_ER       = 38000000            
PHD$L_PSTBASOFF  00000020            PR$_ACCS       = 00000028            PTE$C_ERKW     = 30000000            
PHD$L_PTWSLELCK  00000064            PR$_ASTLVL     = 00000013            PTE$C_EW       = 28000000            
PHD$L_PTWSLEVAL  00000068            PR$_ESP        = 00000001            PTE$C_KOWN     = 00000000            
PHD$L_R0         00000088            PR$_ICCS       = 00000018            PTE$C_KR       = 18000000            
PHD$L_R1         0000008C            PR$_ICR        = 0000001A            PTE$C_KW       = 10000000            
PHD$L_R10        000000B0            PR$_IPL        = 00000012            PTE$C_NA       = 00000000            
PHD$L_R11        000000B4            PR$_ISP        = 00000004            PTE$C_SOWN     = 01000000            
PHD$L_R12        000000B8            PR$_KSP        = 00000000            PTE$C_SR       = 58000000            
PHD$L_R13        000000BC            PR$_MAPEN      = 00000038            PTE$C_SREW     = 48000000            
PHD$L_R2         00000090            PR$_NICR       = 00000019            PTE$C_SRKW     = 50000000            
PHD$L_R3         00000094            PR$_P0BR       = 00000008            PTE$C_SW       = 40000000            
PHD$L_R4         00000098            PR$_P0LR       = 00000009            PTE$C_UOWN     = 01800000            
PHD$L_R5         0000009C            PR$_P1BR       = 0000000A            PTE$C_UR       = 78000000            
PHD$L_R6         000000A0            PR$_P1LR       = 0000000B            PTE$C_UREW     = 68000000            
PHD$L_R7         000000A4            PR$_PCBB       = 00000010            PTE$C_URKW     = 70000000            
PHD$L_R8         000000A8            PR$_RXCS       = 00000020            PTE$C_URSW     = 60000000            
PHD$L_R9         000000AC            PR$_RXDB       = 00000021            PTE$C_UW       = 20000000            
INIT                                                             22-AUG-1978 00:11:21   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                     (1)

PTE$M_CRF      = 00010000            SEC$S_CRF      = 00000001            UBA$M_CSR_PD   = 00800000            
PTE$M_DZRO     = 00020000            SEC$S_DZRO     = 00000001            UBA$M_CSR_PE   = 80000000            
PTE$M_GPTX     = 003FFFFF            SEC$S_GBL      = 00000001            UBA$M_CSR_PU   = 00400000            
PTE$M_MODIFY   = 04000000            SEC$S_PERM     = 00000001            UBA$M_CSR_UBIC = 00010000            
PTE$M_OWN      = 01800000            SEC$S_PFC      = 00000008            UBA$M_CSR_UBIIP= 00040000            
PTE$M_PFN      = 001FFFFF            SEC$S_SYSGBL   = 00000001            UBA$M_CSR_UBPDN= 00020000            
PTE$M_PGFLVB   = 003FFFFF            SEC$S_VPX      = 00000016            UBA$M_CSR_URD  = 20000000            
PTE$M_PROT     = 78000000            SEC$S_WRT      = 00000001            UBA$M_CSR_WS   = 40000000            
PTE$M_TYP0     = 00400000            SEC$V_AMOD     = 00000008            UBA$M_CSR_XMFLT= 04000000            
PTE$M_TYP1     = 04000000            SEC$V_CRF      = 00000001            UBA$M_DPR_BNE  = 80000000            
PTE$M_VALID    = 80000000            SEC$V_DZRO     = 00000002            UBA$M_DPR_DPF  = 20000000            
PTE$M_WRT      = 00040000            SEC$V_GBL      = 00000000            UBA$M_DPR_XMTER= 40000000            
PTE$S_GPTX     = 00000016            SEC$V_PERM     = 0000000E            UBA$M_MAP_BO   = 02000000            
PTE$S_OWN      = 00000002            SEC$V_PFC      = 00000018            UBA$M_MAP_VALID= 80000000            
PTE$S_PFN      = 00000015            SEC$V_SYSGBL   = 0000000F            UBA$M_SR_BRID  = 00000800            
PTE$S_PGFLVB   = 00000016            SEC$V_VPX      = 00000000            UBA$M_SR_BRSVF = 10000000            
PTE$S_PROT     = 00000004            SEC$V_WRT      = 00000003            UBA$M_SR_CRD   = 00000100            
PTE$S_STX      = 00000010            SEC$W_FLAGS      00000014            UBA$M_SR_CXTER = 00000080            
PTE$V_CRF      = 00000010            SEC$W_SECXBL     00000006            UBA$M_SR_CXTMO = 00000040            
PTE$V_DZRO     = 00000011            SEC$W_SECXFL     00000004            UBA$M_SR_DPPE  = 00000020            
PTE$V_GPTX     = 00000000            SFT$B_IOSZ       00000001            UBA$M_SR_IVMR  = 00000010            
PTE$V_MODIFY   = 0000001A            SFT$B_PFC        0000000B            UBA$M_SR_LER   = 00000004            
PTE$V_OWN      = 00000017            SFT$B_SLTCNT     00000000            UBA$M_SR_MRPE  = 00000008            
PTE$V_PFN      = 00000000            SFT$B_TYPE       0000000A            UBA$M_SR_RDS   = 00000200            
PTE$V_PGFLVB   = 00000000            SFT$C_LENGTH     00000020            UBA$M_SR_RDTO  = 00000400            
PTE$V_PROT     = 0000001B            SFT$K_LENGTH     00000020            UBA$M_SR_RIE   = 20000000            
PTE$V_STX      = 00000000            SFT$L_BITMAP     00000014            UBA$M_SR_SSYNC = 00000001            
PTE$V_TYP0     = 00000016            SFT$L_VBN        00000010            UBA$M_SR_UBIFS = 40000000            
PTE$V_TYP1     = 0000001A            SFT$L_WINDOW     0000000C            UBA$M_SR_UBSTO = 00000002            
PTE$V_VALID    = 0000001F            SFT$W_SIZE       00000008            UBA$S_BRRVR_IVA= 00000010            
PTE$V_WRT      = 00000012            SFT$W_SLOTSZ     00000002            UBA$S_CR_ARLVL = 00000002            
SCB$AL_BASE      ********   X   03   SGN$C_SPTLEN     ********   X   03   UBA$S_CR_MRDSB = 00000005            
SCH$AL_PCB       ********   X   03   SYS$IOBASE       ********   X   03   UBA$S_CSR_ADCOD= 00000008            
SCH$CHSE         ********   X   03   SYS$ISPINI       ********   X   03   UBA$S_DPR_ADDR = 00000010            
SCH$C_MAXINIT    ********   X   03   UBA$INITIAL      ********   X   03   UBA$S_DPR_STATE= 00000008            
SCH$C_PCBCNT     ********   X   03   UBA$L_BRRVR      00000030            UBA$S_FMER_MRN = 00000009            
SCH$GL_HPCB      ********   X   03   UBA$L_BRSVR      00000020            UBA$S_FUBAR_ADR= 00000012            
SCH$SCHED        ********   X   03   UBA$L_CR         00000004            UBA$S_MAP_ADDR = 00000015            
SEC$B_AMOD       00000015            UBA$L_CSR        00000000            UBA$S_MAP_DPD  = 00000004            
SEC$B_PFC        0000000B            UBA$L_DCR        0000000C            UBA$S_SR_BRRVF = 00000004            
SEC$C_LENGTH     00000020            UBA$L_DPR        00000040            UBA$V_BRRVR_AIR= 0000001F            
SEC$K_LENGTH     00000020            UBA$L_FMER       00000010            UBA$V_BRRVR_IVA= 00000000            
SEC$L_CCB        00000000            UBA$L_FUBAR      00000014            UBA$V_CR_ARLVL = 00000007            
SEC$L_GSD        00000000            UBA$L_MAP        00000800            UBA$V_CR_BRIE  = 00000005            
SEC$L_PAGCNT     0000001C            UBA$L_SR         00000008            UBA$V_CR_CNFIE = 00000002            
SEC$L_REFCNT     00000018            UBA$M_BRRVR_AIR= 80000000            UBA$V_CR_IFSIE = 00000006            
SEC$L_VBN        00000010            UBA$M_CR_ARLVL = 00000180            UBA$V_CR_INIT  = 00000000            
SEC$L_VPXPFC     00000008            UBA$M_CR_BRIE  = 00000020            UBA$V_CR_MRDSB = 0000001A            
SEC$L_WINDOW     0000000C            UBA$M_CR_CNFIE = 00000004            UBA$V_CR_SUEFIE= 00000003            
SEC$M_AMOD     = 00000300            UBA$M_CR_IFSIE = 00000040            UBA$V_CR_UBPF  = 00000001            
SEC$M_CRF      = 00000002            UBA$M_CR_INIT  = 00000001            UBA$V_CR_USEFIE= 00000004            
SEC$M_DZRO     = 00000004            UBA$M_CR_SUEFIE= 00000008            UBA$V_CSR_ADCOD= 00000000            
SEC$M_GBL      = 00000001            UBA$M_CR_UBPF  = 00000002            UBA$V_CSR_IS   = 0000001C            
SEC$M_PERM     = 00004000            UBA$M_CR_USEFIE= 00000010            UBA$V_CSR_MT   = 0000001B            
SEC$M_SYSGBL   = 00008000            UBA$M_CSR_IS   = 10000000            UBA$V_CSR_OT   = 00000015            
SEC$M_WRT      = 00000008            UBA$M_CSR_MT   = 08000000            UBA$V_CSR_PD   = 00000017            
SEC$S_AMOD     = 00000002            UBA$M_CSR_OT   = 00200000            UBA$V_CSR_PE   = 0000001F            
INIT                                                             22-AUG-1978 00:11:21   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                     (1)

UBA$V_CSR_PU   = 00000016            UCB$B_TYPE       0000000A            UCB$M_NT_BREAK = 00000020            
UBA$V_CSR_UBIC = 00000010            UCB$B_VERTSZ     0000003F            UCB$M_NT_NAME  = 00000010            
UBA$V_CSR_UBIIP= 00000012            UCB$C_LENGTH     00000074            UCB$M_NT_NONTR = 00000040            
UBA$V_CSR_UBPDN= 00000011            UCB$C_LOGLNK   = 00000001            UCB$M_NT_SDP   = 00000008            
UBA$V_CSR_URD  = 0000001D            UCB$K_LENGTH     00000074            UCB$M_ONLINE   = 00000010            
UBA$V_CSR_WS   = 0000001E            UCB$L_AMB        00000054            UCB$M_POWER    = 00000020            
UBA$V_CSR_XMFLT= 0000001A            UCB$L_ASTQBL     00000010            UCB$M_PRMMBX   = 00000001            
UBA$V_DPR_ADDR = 00000000            UCB$L_ASTQFL     0000000C            UCB$M_TIM      = 00000001            
UBA$V_DPR_BNE  = 0000001F            UCB$L_CPID       0000005C            UCB$M_TIMOUT   = 00000040            
UBA$V_DPR_DPF  = 0000001D            UCB$L_CRB        00000020            UCB$M_TT_NOTIF = 00000004            
UBA$V_DPR_STATE= 00000010            UCB$L_DDB        00000024            UCB$M_TT_TIMO  = 00000002            
UBA$V_DPR_XMTER= 0000001E            UCB$L_DEVCHAR    00000034            UCB$M_VALID    = 00000800            
UBA$V_FMER_MRN = 00000000            UCB$L_DEVDEPEND  0000003C            UCB$S_LNKPRI   = 00000002            
UBA$V_FUBAR_ADR= 00000000            UCB$L_DPC        0000007C            UCB$S_LTYPE    = 00000002            
UBA$V_MAP_ADDR = 00000000            UCB$L_DUETIM     0000005C            UCB$T_PARTNER    0000000C            
UBA$V_MAP_BO   = 00000019            UCB$L_DX_BFPNT   FFFFFFF4            UCB$V_BACKP    = 00000005            
UBA$V_MAP_DPD  = 00000015            UCB$L_DX_BUF     FFFFFFF0            UCB$V_BSY      = 00000008            
UBA$V_MAP_VALID= 0000001F            UCB$L_DX_RXDB    FFFFFFF8            UCB$V_CANCEL   = 00000003            
UBA$V_SR_BRID  = 0000000B            UCB$L_EMB        00000078            UCB$V_DEADMO   = 0000000A            
UBA$V_SR_BRRVF = 00000018            UCB$L_FIRST      00000014            UCB$V_DELMBX   = 00000001            
UBA$V_SR_BRSVF = 0000001C            UCB$L_FPC        0000000C            UCB$V_DIAGBUF  = 00000001            
UBA$V_SR_CRD   = 00000008            UCB$L_FQBL       00000004            UCB$V_DX_WRITE = 00000003            
UBA$V_SR_CXTER = 00000007            UCB$L_FQFL       00000000            UCB$V_ECC      = 00000000            
UBA$V_SR_CXTMO = 00000006            UCB$L_FR3        00000010            UCB$V_ERLOGIP  = 00000002            
UBA$V_SR_DPPE  = 00000005            UCB$L_FR4        00000014            UCB$V_INT      = 00000001            
UBA$V_SR_IVMR  = 00000004            UCB$L_IOQBL      00000044            UCB$V_INTTYPE  = 00000007            
UBA$V_SR_LER   = 00000002            UCB$L_IOQFL      00000040            UCB$V_JOB      = 00000000            
UBA$V_SR_MRPE  = 00000003            UCB$L_IRP        0000004C            UCB$V_LNKPRI   = 00000006            
UBA$V_SR_RDS   = 00000009            UCB$L_LINK       0000002C            UCB$V_LTYPE    = 00000000            
UBA$V_SR_RDTO  = 0000000A            UCB$L_LOGADR     00000064            UCB$V_MOUNTING = 00000009            
UBA$V_SR_RIE   = 0000001D            UCB$L_MAXBLOCK   00000080            UCB$V_MSGACK   = 00000004            
UBA$V_SR_SSYNC = 00000000            UCB$L_MEDIA      00000088            UCB$V_MSGFLO   = 00000003            
UBA$V_SR_UBIFS = 0000001E            UCB$L_NT_DATSSB  00000074            UCB$V_NOCNVRT  = 00000002            
UBA$V_SR_UBSTO = 00000001            UCB$L_NT_INTSSB  00000078            UCB$V_NT_BFROVF= 00000002            
UCB$B_AMOD       00000053            UCB$L_OPCNT      00000060            UCB$V_NT_BREAK = 00000005            
UCB$B_CEX        00000077            UCB$L_OWNUIC     0000001C            UCB$V_NT_NAME  = 00000004            
UCB$B_CM1        0000004A            UCB$L_PID        00000028            UCB$V_NT_NONTR = 00000006            
UCB$B_CM2        0000004B            UCB$L_RQBL       00000004            UCB$V_NT_SDP   = 00000003            
UCB$B_DEVCLASS   00000038            UCB$L_RQFL       00000000            UCB$V_ONLINE   = 00000004            
UCB$B_DEVTYPE    00000039            UCB$L_SVAPTE     00000068            UCB$V_POWER    = 00000005            
UCB$B_DIPL       00000052            UCB$L_SVPN       00000064            UCB$V_PRMMBX   = 00000000            
UCB$B_DX_SCTCNT  FFFFFFFE            UCB$L_TTCHAR     0000003C            UCB$V_SEGFLO   = 00000002            
UCB$B_DX_SPARE   FFFFFFFF            UCB$L_VCB        00000030            UCB$V_TIM      = 00000000            
UCB$B_ERTCNT     00000070            UCB$M_BSY      = 00000100            UCB$V_TIMOUT   = 00000006            
UCB$B_ERTMAX     00000071            UCB$M_CANCEL   = 00000008            UCB$V_TT_NOTIF = 00000002            
UCB$B_ESCAPE     0000004B            UCB$M_DEADMO   = 00000400            UCB$V_TT_TIMO  = 00000001            
UCB$B_FEX        00000076            UCB$M_DELMBX   = 00000002            UCB$V_VALID    = 0000000B            
UCB$B_FIPL       0000000B            UCB$M_DIAGBUF  = 00000002            UCB$W_BCNT       0000006E            
UCB$B_LOCSRV     0000003C            UCB$M_DX_WRITE = 00000008            UCB$W_BCR        00000092            
UCB$B_OFFNDX     00000090            UCB$M_ECC      = 00000001            UCB$W_BOFF       0000006C            
UCB$B_OFFRTC     00000091            UCB$M_ERLOGIP  = 00000004            UCB$W_BUFQUO     00000018            
UCB$B_REMSRV     0000003D            UCB$M_INT      = 00000002            UCB$W_BYTESTOGO  0000003E            
UCB$B_SECTORS    0000003C            UCB$M_INTTYPE  = 00000080            UCB$W_CHARGE     0000004A            
UCB$B_SLAVE      00000074            UCB$M_JOB      = 00000001            UCB$W_CYLINDERS  0000003E            
UCB$B_SPR        00000075            UCB$M_MOUNTING = 00000200            UCB$W_DA         00000088            
UCB$B_STATE      00000052            UCB$M_NOCNVRT  = 00000004            UCB$W_DC         0000008A            
UCB$B_TRACKS     0000003D            UCB$M_NT_BFROVF= 00000004            UCB$W_DEVBUFSIZ  0000003A            
INIT                                                             22-AUG-1978 00:11:21   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                     (1)

UCB$W_DEVSTS     0000005A            
UCB$W_DSTADDR    00000018            
UCB$W_DX_BCR     FFFFFFFC            
UCB$W_EC1        0000008C            
UCB$W_EC2        0000008E            
UCB$W_ERRCNT     00000072            
UCB$W_FUNC       00000084            
UCB$W_MB_SEED    FFFFFFFC            
UCB$W_MSGCNT     00000016            
UCB$W_MSGMAX     00000014            
UCB$W_NT_CHAN    0000007C            
UCB$W_OFFSET     00000086            
UCB$W_REFC       00000050            
UCB$W_SIZE       00000008            
UCB$W_SRCADDR    0000001A            
UCB$W_STS        00000058            
UCB$W_UNIT       00000048            
UCB$W_VPROT      0000001A            
VA$M_BYTE      = 000001FF            
VA$M_P1        = 40000000            
VA$M_SYSTEM    = 80000000            
VA$M_VPN       = 3FFFFE00            
VA$S_BYTE      = 00000009            
VA$S_VPN       = 00000015            
VA$V_BYTE      = 00000000            
VA$V_P1        = 0000001E            
VA$V_SYSTEM    = 0000001F            
VA$V_VPN       = 00000009            
VEC$B_DATAPATH   00000013            
VEC$B_NUMREG     00000012            
VEC$L_ADP        00000014            
VEC$L_IDB        00000008            
VEC$L_INITIAL    0000000C            
VEC$L_TT_DISC    00000020            
VEC$L_TT_ILINE   00000018            
VEC$L_TT_STRTIO  0000001C            
VEC$M_MAPLOCK  = 00008000            
VEC$M_PATHLOCK = 00000080            
VEC$Q_DISPATCH   00000000            
VEC$S_DATAPATH = 00000007            
VEC$S_MAPREG   = 0000000F            
VEC$V_DATAPATH = 00000000            
VEC$V_MAPLOCK  = 0000000F            
VEC$V_MAPREG   = 00000000            
VEC$V_PATHLOCK = 00000007            
VEC$W_MAPREG     00000010            
XDELBPT          ********   X   03   
XDELTBIT         ********   X   03   


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFF      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
Z$INIT           000003EC      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT PAGE  
Z$NPAGEDYN       00002000      04     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT QUAD  
INIT                                                             22-AUG-1978 00:11:21   VAX-11 MACRO X0.3-11               Page  17
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



THERE WERE NO ERRORS OR WARNINGS.
3232. BYTES LEFT IN FREE MEMORY POOL.
2308. BYTES OF RECLAIMED MEMORY.
OBJ$:INIT,LIS$:INIT/-SP=LIB$:LIB/ML,SRC$:INIT
14 MLB DIR RDS - 1285 GETS TO DEFINE 34 MACROS. 104 INTER. FILE WRITES. 
