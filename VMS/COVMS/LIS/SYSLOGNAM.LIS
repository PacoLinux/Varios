SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 23:43:32   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      72  CREATE LOGICAL NAME
   (1)     171  DELETE LOGICAL NAME
   (1)     252  CHECK TABLE NUMBER AND PRIVILEGES
   (1)     285  TRANSLATE LOGICAL NAME
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 23:43:32   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	SYSLOGNAM - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES
                                     0000     2 	.IDENT	/01/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; D. N. CUTLER 10-OCT-76
                                     0000    24 ;
                                     0000    25 ; SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES
                                     0000    26 ;
                                     0000    27 ;	CREATE LOGICAL NAME
                                     0000    28 ;	DELETE LOGICAL NAME
                                     0000    29 ;	TRANSLATE LOGICAL NAME
                                     0000    30 ;
                                     0000    31 ; MACRO LIBRARY CALLS
                                     0000    32 ;
                                     0000    33  
                                     0000    34 	$DYNDEF				;DEFINE DATA STRUCTURE TYPE CODES
                                     0000    35 	$LOGDEF				;DEFINE LOG OFFSETS
                                     0000    36 	$PCBDEF				;DEFINE PCB OFFSETS
                                     0000    37 	$PRVDEF				;DEFINE PRIVILEGE BITS
                                     0000    38 	$PSLDEF				;DEFINE PROCESSOR STATUS FIELDS
                                     0000    39 	$SSDEF				;DEFINE SYSTEM STATUS VALUES
                                     0000    40 	$UCBDEF				;DEFINE UCB OFFSETS
                                     0000    41  
                                     0000    42 ;
                                     0000    43 ; LOCAL SYMBOLS
                                     0000    44 ;
                                     0000    45 ; ARGUMENT LIST OFFSET DEFINITIONS FOR CREATE LOGICAL NAME
                                     0000    46 ;
                                     0000    47  
                           00000004  0000    48 TBLFLG=4				;LOGICAL NAME TABLE NUMBER
                           00000008  0000    49 LOGNAM=8				;ADDRESS OF LOGICAL NAME STRING DESCRIPTOR
                           0000000C  0000    50 EQLNAM=12				;ADDRESS OF EQUIVALENCE NAME STRING DESCRIPTOR
                           00000010  0000    51 CRACMODE=16				;ACCESS MODE
                                     0000    52  
                                     0000    53 ;
                                     0000    54 ; ARGUMENT LIST OFFSET DEFINITIONS FOR DELETE LOGICAL NAME
                                     0000    55 ;
                                     0000    56  
                           00000004  0000    57 TBLFLG=4				;LOGICAL NAME TABLE NUMBER
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 23:43:32   VAX-11 MACRO X0.3-11               Page   2
01                                                                                                                               (1)

                           00000008  0000    58 LOGNAM=8				;ADDRESS OF LOGICAL NAME STRING DESCRIPTOR
                           0000000C  0000    59 DLACMODE=12				;ACCESS MODE
                                     0000    60  
                                     0000    61 ;
                                     0000    62 ; ARGUMENT LIST OFFSET DEFINITIONS FOR TRANSLATE LOGICAL NAME
                                     0000    63 ;
                                     0000    64  
                           00000004  0000    65 TRLOGNAM=4				;ADDRESS OF LOGICAL NAME STRING DESCRIPTOR
                           00000008  0000    66 RSLLEN=8				;ADDRESS TO STORE LENGTH OF RESULT STRING
                           0000000C  0000    67 RSLBUF=12				;ADDRESS OF RESULT BUFFER DESCRIPTOR
                           00000010  0000    68 TABLE=16				;ADDRESS TO STORE TRANSLATION TABLE NUMBER
                           00000014  0000    69 TRACMODE=20				;ADDRESS TO STORE ASSIGNMENT ACCESS MODE
                           00000018  0000    70 DSBMSK=24				;TABLE SEARCH DISABLE MASK
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 23:43:32   VAX-11 MACRO X0.3-11               Page   3
01              CREATE LOGICAL NAME                                                                                              (1)

                                     0000    72 	.SBTTL	CREATE LOGICAL NAME
                                     0000    73 ;+
                                     0000    74 ; EXE$CRELOG - CREATE LOGICAL NAME
                                     0000    75 ;
                                     0000    76 ; THIS SERVICE PROVIDES THE CAPABILITY TO INSERT A LOGICAL NAME EQUIVALENCE
                                     0000    77 ; INTO EITHER THE PROCESS, GROUP, OR SYSTEM LOGICAL NAME TABLE. IF THE LOG-
                                     0000    78 ; ICAL NAME ALREADY EXISTS IN THE RESPECTIVE TABLE, THEN THE NEW ENTRY SUPER-
                                     0000    79 ; SEDES THE OLD.
                                     0000    80 ;
                                     0000    81 ; INPUTS:
                                     0000    82 ;
                                     0000    83 ;	TBLFLG(AP) = LOGICAL NAME TABLE NUMBER.
                                     0000    84 ;	LOGNAM(AP) = ADDRESS OF LOGICAL NAME STRING DESCRIPTOR.
                                     0000    85 ;	EQLNAM(AP) = ADDRESS OF EQUIVALENCE NAME STRING DESCRIPTOR.
                                     0000    86 ;	CRACMODE(AP) = ACCESS MODE OF LOGICAL NAME TO BE CREATED.
                                     0000    87 ;
                                     0000    88 ;	R4 = CURRENT PROCESS PCB ADDRESS.
                                     0000    89 ;
                                     0000    90 ; OUTPUTS:
                                     0000    91 ;
                                     0000    92 ;	R0 LOW BIT CLEAR INDICATES FAILURE TO CREATE LOGICAL NAME TABLE ENTRY.
                                     0000    93 ;
                                     0000    94 ;		R0 = SS$_ACCVIO - LOGICAL NAME STRING, LOGICAL NAME STRING
                                     0000    95 ;			DESCRIPTOR, EQUIVALENCE NAME STRING, OR EQUIVALENCE
                                     0000    96 ;			NAME STRING DESCRIPTOR CANNOT BE READ BY CALLING
                                     0000    97 ;			ACCESS MODE.
                                     0000    98 ;
                                     0000    99 ;		R0 = SS$_INSFMEM - SUFFICIENT SYSTEM DYNAMIC MEMORY DOES NOT
                                     0000   100 ;			EXIST TO ALLOCATE LOGICAL NAME TABLE ENTRY AND
                                     0000   101 ;			IMPLICIT RESOURCE WAIT IS NOT ENABLED.
                                     0000   102 ;
                                     0000   103 ;		R0 = SS$_IVLOGNAM - ZERO OR GREATER THAN MAXIMUM LENGTH
                                     0000   104 ;			LOGICAL OR EQUIVALENCE NAME STRING SPECIFIED.
                                     0000   105 ;
                                     0000   106 ;		R0 = SS$_IVLOGTAB - INVALID LOGICAL NAME TABLE NUMBER
                                     0000   107 ;			SPECIFIED.
                                     0000   108 ;
                                     0000   109 ;		R0 = SS$_NOPRIV - PROCESS DOES NOT HAVE PRIVILEGE TO CREATE
                                     0000   110 ;			ENTRY IN SPECIFIED LOGICAL NAME TABLE.
                                     0000   111 ;
                                     0000   112 ;	R0 LOW BIT SET INDICATES SUCCESSFUL COMPLETION.
                                     0000   113 ;
                                     0000   114 ;		R0 = SS$_NORMAL - NORMAL COMPLETION, NEW ENTRY ENTERED IN
                                     0000   115 ;			SPECIFIED LOGICAL NAME TABLE.
                                     0000   116 ;
                                     0000   117 ;		R0 = SS$_SUPERSEDE - NORMAL COMPLETION, NEW ENTRY SUPERSEDED
                                     0000   118 ;			PREVIOUS ENTRY IN SPECIFIED LOGICAL NAME TABLE.
                                     0000   119 ;-
                                     0000   120  
                                 00000000   121 	.PSECT	Y$EXEPAGED
                               01FC' 0000   122 	.ENTRY	EXE$CRELOG,^M<R2,R3,R4,R5,R6,R7,R8>
            02            00     EF  0002   123 	EXTZV	#0,#2,CRACMODE(AP),R0	;GET SPECIFIED ACCESS MODE
            50         10 AC         0005       
                          00F8   30  0008   124 	BSBW	CHECKTABLE		;CHECK TABLE NUMBER AND PRIVILEGE
                          50     D5  000B   125 	TSTL	R0			;LOGICAL NAME SPECIFIED?
                          76     13  000D   126 	BEQL	20$			;IF EQL NO
            57         0C AC     D0  000F   127 	MOVL	EQLNAM(AP),R7		;GET ADDRESS OF EQUIVALENCE NAME STRING DESCRIPTOR
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 23:43:32   VAX-11 MACRO X0.3-11               Page   4
01              CREATE LOGICAL NAME                                                                                              (1)

                                     0013   128 	IFNORD	#8,(R7),30$		;CAN EQUIVALENCE NAME STRING DESCRIPTOR BE READ?
            56            67     3C  0019   129 	MOVZWL	(R7),R6			;GET LENGTH OF EQUIVALENCE NAME STRING
                          67     13  001C   130 	BEQL	20$			;IF EQL INVALID LOGICAL NAME STRING
            3F            56     B1  001E   131 	CMPW	R6,#LOG$C_NAMLENGTH-1	;LEGAL NAME STRING LENGTH?
                          62     1A  0021   132 	BGTRU	20$			;IF GTRU NO
            57         04 A7     D0  0023   133 	MOVL	4(R7),R7		;GET ADDRESS OF EQUIVALENCE NAME STRING
                                     0027   134 	IFNORD	R6,(R7),30$		;CAN EQUIVALENCE NAME STRING BE READ?
                          0B     BB  002D   135 	PUSHR	#^M<R0,R1,R3>		;SAVE LOGICAL NAME PARAMETERS
            51         1D A046   9E  002F   136 	MOVAB	LOG$C_LENGTH+2+7(R0)[R6],R1 ;CALCULATE SIZE OF LOGICAL NAME ENTRY
            51            07     CA  0034   137 	BICL	#7,R1			;TRUNCATE TO QUADWORD MULTIPLE
                 00000000'EF     9F  0037   138 	PUSHAB	L^EXE$ALOPAGED		;ASSUME SYSTEM OF GROUP NAME
            53            01     E1  003D   139 	BBC	#1,R3,10$		;IF CLR, SYSTEM OR GROUP TABLE
                          0E         0040       
            6E   00000000'EF     9E  0041   140 	MOVAB	L^EXE$ALLOCATE,(SP)	;SET ADDRESS OF ALLOCATION ROUTINE
            53   00000000'9F     9E  0048   141 	MOVAB	@#CTL$GQ_ALLOCREG,R3	;GET ADDRESS OF ALLOCATION LISTHEAD
                          9E     16  004F   142 10$:	JSB	@(SP)+			;ALLOCATE LOGICAL NAME BLOCK
            37            50     E9  0051   143 	BLBC	R0,40$			;IF LBC ALLOCATION FAILURE
                                     0054   144  
                                     0054   145 ;
                                     0054   146 ; FILL OUT LOGICAL NAME BLOCK
                                     0054   147 ;
                                     0054   148  
         08 A2            51     B0  0054   149 	MOVW	R1,LOG$W_SIZE(R2)	;INSERT SIZE OF BLOCK ALLOCATED
                          0B     BA  0058   150 	POPR	#^M<R0,R1,R3>		;RETRIEVE LOGICAL NAME STRING PARAMETERS
            55            52     D0  005A   151 	MOVL	R2,R5			;SAVE ADDRESS OF LOGICAL NAME BLOCK
                          30     BB  005D   152 	PUSHR	#^M<R4,R5>		;SAVE REGISTERS
            52            0A     C0  005F   153 	ADDL	#LOG$B_TYPE,R2		;POINT TO BLOCK TYPE
            82            0B     90  0062   154 	MOVB	#DYN$C_LOG,(R2)+	;SET DATA STRUCTURE TYPE
            82            53     90  0065   155 	MOVB	R3,(R2)+		;SET NAME TABLE NUMBER
            82         22 A4     B0  0068   156 	MOVW	PCB$L_UIC+2(R4),(R2)+	;INSERT CREATOR GROUP
            82            58     9B  006C   157 	MOVZBW	R8,(R2)+		;INSERT CREATION ACCESS MODE
                          82     D4  006F   158 	CLRL	(R2)+			;CLEAR MAILBOX UCB ADDRESS
            82            50     90  0071   159 	MOVB	R0,(R2)+		;SET LENGTH OF LOGICAL NAME STRING
            61            50     28  0074   160 	MOVC	R0,(R1),(R2)		;INSERT LOGICAL NAME STRING
                          62         0077       
            83            56     90  0078   161 	MOVB	R6,(R3)+		;SET LENGTH OF EQUIVALENCE NAME STRING
            67            56     28  007B   162 	MOVC	R6,(R7),(R3)		;INSERT EQUIVALENCE NAME STRING
                          63         007E       
                          30     BA  007F   163 	POPR	#^M<R4,R5>		;RESTORE REGISTERS
                          FF7C'  30  0081   164 	BSBW	LOG$INSLOGN		;INSERT LOGICAL NAME BLOCK IN TABLE
                                 04  0084   165 	RET				;
                          00C3   31  0085   166 20$:	BRW	IVLOGN			;
                          00C6   31  0088   167 30$:	BRW	ACCVIO			;
            50       0124 8F     3C  008B   168 40$:	MOVZWL	#SS$_INSFMEM,R0		;SET INSUFFICIENT MEMORY
                                 04  0090   169 	RET				;
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 23:43:32   VAX-11 MACRO X0.3-11               Page   5
01              DELETE LOGICAL NAME                                                                                              (1)

                                     0091   171 	.SBTTL	DELETE LOGICAL NAME
                                     0091   172 ;+
                                     0091   173 ; EXE$DELLOG - DELETE LOGICAL NAME
                                     0091   174 ;
                                     0091   175 ; THIS SERVICE PROVIDES THE CAPABILITY TO DELETE A PREVIOUSLY CREATED LOG-
                                     0091   176 ; ICAL NAME EQUIVALENCE FROM EITHER THE PROCESS, GROUP, OR SYSTEM LOGICAL
                                     0091   177 ; NAME TABLE.
                                     0091   178 ;
                                     0091   179 ; INPUTS:
                                     0091   180 ;
                                     0091   181 ;	TBLFLG(AP) = LOGICAL NAME TABLE NUMBER.
                                     0091   182 ;	LOGNAM(AP) = ADDRESS OF LOGICAL NAME STRING DESCRIPTOR. ZERO
                                     0091   183 ;		IMPLIES ALL.
                                     0091   184 ;	DLACMODE(AP) = ACCESS MODE OF LOGICAL NAME TO BE DELETED.
                                     0091   185 ;
                                     0091   186 ;	R4 = CURRENT PROCESS PCB ADDRESS.
                                     0091   187 ;
                                     0091   188 ; OUTPUTS:
                                     0091   189 ;
                                     0091   190 ;	R0 LOW BIT CLEAR INDICATES FAILURE TO DELETE LOGICAL NAME TABLE ENTRY.
                                     0091   191 ;
                                     0091   192 ;		R0 = SS$_ACCVIO - LOGICAL NAME STRING OR LOGICAL NAME STRING
                                     0091   193 ;			DESCRIPTOR CANNOT BE READ BY CALLING ACCESS MODE.
                                     0091   194 ;
                                     0091   195 ;		R0 = SS$_IVLOGNAM - ZERO OR GREATER THAN MAXIMUM LENGTH
                                     0091   196 ;			LOGICAL NAME STRING SPECIFIED.
                                     0091   197 ;
                                     0091   198 ;		R0 = SS$_IVLOGTAB - INVALID LOGICAL NAME TABLE NUMBER SPECIFIED.
                                     0091   199 ;
                                     0091   200 ;		R0 = SS$_NOLOGNAM - LOGICAL NAME DOES NOT EXIST IN SPECIFIED
                                     0091   201 ;			LOGICAL NAME TABLE OR LOGICAL NAME EXISTS IN PROCESS
                                     0091   202 ;			TABLE BUT WAS ENTERED FROM A MORE PRIVILEGED ACCESS
                                     0091   203 ;			MODE.
                                     0091   204 ;
                                     0091   205 ;		R0 = SS$_NOPRIV - PROCESS DOES NOT HAVE PRIVILEGE TO DELETE
                                     0091   206 ;			ENTRY FROM SPECIFIED LOGICAL NAME TABLE.
                                     0091   207 ;
                                     0091   208 ;	R0 LOW BIT SET INDICATES SUCCESSFUL COMPLETION.
                                     0091   209 ;
                                     0091   210 ;		R0 = SS$_NORMAL - NORMAL COMPLETION.
                                     0091   211 ;-
                                     0091   212  
                               01FC' 0091   213 	.ENTRY	EXE$DELLOG,^M<R2,R3,R4,R5,R6,R7,R8>
            02            00     EF  0093   214 	EXTZV	#0,#2,DLACMODE(AP),R0	;GET SPECIFIED ACCESS MODE
            50         0C AC         0096       
                          68     10  0099   215 	BSBB	CHECKTABLE		;CHECK TABLE NUMBER AND PRIVILEGES
            55            50     7D  009B   216 	MOVQ	R0,R5			;SAVE LOGICAL NAME STRING PARAMETERS
            57            53     D0  009E   217 	MOVL	R3,R7			;SAVE LOGICAL NAME TABLE NUMBER
                          FF5C'  30  00A1   218 	BSBW	LOG$LOCKW		;LOCK NAME TABLE FOR WRITE
            52   00000000'EF47   D0  00A4   219 10$:	MOVL	L^LOG$AL_LOGTBL[R7],R2	;GET ADDRESS OF NAME TABLE LISTHEAD
                          55     D5  00AC   220 	TSTL	R5			;DELETE ALL LOGICAL NAME TABLE ENTRIES?
                          23     12  00AE   221 	BNEQ	40$			;IF NEQ NO
            51            52     D0  00B0   222 	MOVL	R2,R1			;MAKE WORKING COPY OF LINK
            51            61     D0  00B3   223 20$:	MOVL	LOG$L_LTFL(R1),R1	;GET ADDRESS OF NEXT ENTRY IN NAME TABLE
            52            51     D1  00B6   224 	CMPL	R1,R2			;END OF NAME TABLE?
                          3A     13  00B9   225 	BEQL	80$			;IF EQL YES
            57            01     E1  00BB   226 	BBC	#1,R7,30$		;IF CLR, GROUP OR SYSTEM TABLE
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 23:43:32   VAX-11 MACRO X0.3-11               Page   6
01              DELETE LOGICAL NAME                                                                                              (1)

                          08         00BE       
         0E A1            58     91  00BF   227 	CMPB	R8,LOG$B_AMOD(R1)	;CAN ENTRY BE DELETED?
                          EE     14  00C3   228 	BGTR	20$			;IF GTR NO
                          27     11  00C5   229 	BRB	50$			;
            24            57     E9  00C7   230 30$:	BLBC	R7,50$			;IF LBC SYSTEM NAME TABLE
         0C A1         22 A4     B1  00CA   231 	CMPW	PCB$W_GRP(R4),LOG$W_GROUP(R1) ;GROUP NUMBERS MATCH?
                          E2     12  00CF   232 	BNEQ	20$			;IF NEQ NO
                          1B     11  00D1   233 	BRB	50$			;
            50            55     7D  00D3   234 40$:	MOVQ	R5,R0			;RETRIEVE LOGICAL NAME STRING PARAMETERS
            53            03     9A  00D6   235 	MOVZBL	#PSL$C_USER,R3		;SET SEARCH ACCESS MODE
                          FF24'  30  00D9   236 	BSBW	LOG$SEARCHLOG		;SEARCH FOR SPECIFIED LOGICAL NAME
            19            50     E9  00DC   237 	BLBC	R0,90$			;IF LBC SEARCH FAILURE
            57            01     E1  00DF   238 	BBC	#1,R7,50$		;IF CLR, GROUP OR SYSTEM TABLE
                          0B         00E2       
            50       01BC 8F     3C  00E3   239 	MOVZWL	#SS$_NOLOGNAM,R0	;ASSUME LOGICAL NAME CANNOT BE DELETED
         0E A1            58     91  00E8   240 	CMPB	R8,LOG$B_AMOD(R1)	;CAN ENTRY BE DELETED?
                          0A     14  00EC   241 	BGTR	90$			;IF GTR NO
                          FF0F'  30  00EE   242 50$:	BSBW	LOG$DELETE		;DELETE LOGICAL NAME ENTRY
                          55     D5  00F1   243 	TSTL	R5			;DELETE ALL ENTRIES?
                          AF     13  00F3   244 	BEQL	10$			;IF EQL YES
            50            01     3C  00F5   245 80$:	MOVZWL	#SS$_NORMAL,R0		;SET NORMAL COMPLETION
                          50     DD  00F8   246 90$:	PUSHL	R0			;SAVE FINAL STATUS
            53            57     D0  00FA   247 	MOVL	R7,R3			;SET NAME TABLE NUMBER
                          FF00'  30  00FD   248 	BSBW	LOG$UNLOCK		;UNLOCK NAME TABLE
                          01     BA  0100   249 	POPR	#^M<R0>			;RESTORE FINAL STATUS
                                 04  0102   250 	RET				;
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 23:43:32   VAX-11 MACRO X0.3-11               Page   7
01              CHECK TABLE NUMBER AND PRIVILEGES                                                                                (1)

                                     0103   252 	.SBTTL	CHECK TABLE NUMBER AND PRIVILEGES
                                     0103   253 ;
                                     0103   254 ; CHECK TABLE NUMBER AND PRIVILEGES
                                     0103   255 ;
                                     0103   256  
                                     0103   257 CHECKTABLE:				;CHECK TABLE NUMBER AND PRIVILEGES
                 00000000'EF     16  0103   258 	JSB	EXE$MAXACMODE		;MAXIMIZE ACCESS MODE
            58            50     D0  0109   259 	MOVL	R0,R8			;SAVE MAXIMIZED ACCESS MODE
            53         04 AC     9A  010C   260 	MOVZBL	TBLFLG(AP),R3		;GET LOGICAL NAME TABLE NUMBER
            53            02     D1  0110   261 	CMPL	#LOG$C_PROCESS,R3	;LEGAL TABLE NUMBER?
                          2C     19  0113   262 	BLSS	30$			;IF LSS NO
                          09     13  0115   263 	BEQL	10$			;IF EQL PROCESS NAME TABLE
            53            02     C1  0117   264 	ADDL3	#PRV$V_SYSNAM,R3,R2	;CALCULATE PRIVILEGE BIT NUMBER
                          52         011A       
                                     011B   265 	IFNPRIV	R2,40$			;CAN PROCESS CREATE LOGICAL NAME?
            50         08 AC     D0  0120   266 10$:	MOVL	LOGNAM(AP),R0		;GET ADDRESS OF LOGICAL NAME STRING DESCRIPTOR
                          1A     13  0124   267 	BEQL	20$			;IF EQL NO LOGICAL NAME STRING DESCRIPTOR
                                     0126   268 	IFNORD	#8,(R0),ACCVIO		;CAN LOGICAL NAME STRING DESCRIPTOR BE READ?
            51         04 A0     D0  012C   269 	MOVL	4(R0),R1		;GET ADDRESS OF LOGICAL NAME STRING
            50            60     3C  0130   270 	MOVZWL	(R0),R0			;GET LENGTH OF LOGICAL NAME STRING
                          16     13  0133   271 	BEQL	IVLOGN			;IF EQL INVALID LOGICAL NAME STRING
            3F            50     B1  0135   272 	CMPW	R0,#LOG$C_NAMLENGTH-1	;LEGAL NAME STRING LENGTH?
                          11     1A  0138   273 	BGTRU	IVLOGN			;IF GTRU NO
                                     013A   274 	IFNORD	R0,(R1),ACCVIO		;CAN LOGICAL NAME STRING BE READ?
                                 05  0140   275 20$:	RSB				;
            50       015C 8F     3C  0141   276 30$:	MOVZWL	#SS$_IVLOGTAB,R0	;SET INVALID LOGICAL NAME TABLE NUMBER
                                 04  0146   277 	RET				;
            50            24     3C  0147   278 40$:	MOVZWL	#SS$_NOPRIV,R0		;SET NO PRIVILEGE
                                 04  014A   279 	RET				;
            50       0154 8F     3C  014B   280 IVLOGN:	MOVZWL	#SS$_IVLOGNAM,R0	;SET INVALID LOGICAL NAME
                                 04  0150   281 	RET				;
            50            0C     3C  0151   282 ACCVIO:	MOVZWL	#SS$_ACCVIO,R0		;SET ACCESS VIOLATION
                                 04  0154   283 	RET				;
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 23:43:32   VAX-11 MACRO X0.3-11               Page   8
01              TRANSLATE LOGICAL NAME                                                                                           (1)

                                     0155   285 	.SBTTL	TRANSLATE LOGICAL NAME
                                     0155   286 ;+
                                     0155   287 ; EXE$TRNLOG - TRANSLATE LOGICAL NAME
                                     0155   288 ;
                                     0155   289 ; THIS SERVICE PROVIDES THE CAPABILITY TO TRANSLATE A LOGICAL NAME STRING
                                     0155   290 ; TO A RESULTANT NAME STRING. THE TRANSLATION EMPLOYS THE PROCESS, GROUP,
                                     0155   291 ; AND SYSTEM LOGICAL NAME TABLES HEIRARCHICALLY.
                                     0155   292 ;
                                     0155   293 ; INPUTS:
                                     0155   294 ;
                                     0155   295 ;	TRLOGNAM(AP) = ADDRESS OF LOGICAL NAME STRING DESCRIPTOR.
                                     0155   296 ;	RSLLEN(AP) = ADDRESS TO STORE LENGTH OF RESULT STRING.
                                     0155   297 ;	RSLBUF(AP) = ADDRESS OF RESULTANT STRING BUFFER DESCRIPTOR.
                                     0155   298 ;	TABLE(AP) = ADDRESS TO STORE TRANSLATION TABLE NUMBER.
                                     0155   299 ;	TRACMODE(AP) = ADDRESS TO STORE ASSIGNMENT ACCESS MODE.
                                     0155   300 ;	DSBMSK(AP) = TABLE SEARCH DISABLE MASK.
                                     0155   301 ;
                                     0155   302 ;	R4 = CURRENT PROCESS PCB ADDRESS.
                                     0155   303 ;
                                     0155   304 ; OUTPUTS:
                                     0155   305 ;
                                     0155   306 ;	R0 LOW BIT CLEAR INDICATES FAILURE TO TRANSLATE LOGICAL NAME STRING.
                                     0155   307 ;
                                     0155   308 ;		R0 = SS$_ACCVIO - LOGICAL NAME STRING, LOGICAL NAME STRING
                                     0155   309 ;			DESCRIPTOR, OR RESULT BUFFER DESCRIPTOR CANNOT BE
                                     0155   310 ;			READ FROM CALLING ACCESS MODE, OR RESULT BUFFER,
                                     0155   311 ;			RESULT LENGTH, TRANSLATION TABLE NUMBER, OR ASSIGN-
                                     0155   312 ;			MENT ACCESS MODE CANNOT BE WRITTEN BY CALLING ACCESS
                                     0155   313 ;			MODE.
                                     0155   314 ;
                                     0155   315 ;		R0 = SS$_RESULTOVF - ZERO LENGTH RESULT BUFFER OR EQUIVALENCE
                                     0155   316 ;			STRING LARGER THAN RESULT BUFFER.
                                     0155   317 ;
                                     0155   318 ;	R0 LOW BIT SET INDICATES SUCCESSFUL COMPLETION.
                                     0155   319 ;
                                     0155   320 ;		R0 = SS$_NORMAL - NORMAL COMPLETION, EQUIVALENCE STRING IN
                                     0155   321 ;			RESULT BUFFER.
                                     0155   322 ;
                                     0155   323 ;		R0 = SS$_NOTRAN - NORMAL COMPLETION, LOGICAL NAME STRING IN
                                     0155   324 ;			RESULT BUFFER.
                                     0155   325 ;-
                                     0155   326  
                               003C' 0155   327 	.ENTRY	EXE$TRNLOG,^M<R2,R3,R4,R5>
            55         18 AC     D0  0157   328 	MOVL	DSBMSK(AP),R5		;SET TABLE SEARCH DISABLE MASK
            53         0C AC     D0  015B   329 	MOVL	RSLBUF(AP),R3		;GET ADDRESS OF RESULT STRING BUFFER DESCRIPTOR
                                     015F   330 	IFNORD	#8,(R3),ACCVIO		;CAN RESULT STRING BUFFER DESCRIPTOR BE READ?
            50       0214 8F     3C  0165   331 	MOVZWL	#SS$_RESULTOVF,R0	;ASSUME NO BUFFER SPECIFIED
            52            63     3C  016A   332 	MOVZWL	(R3),R2			;GET SIZE OF RESULT STRING BUFFER
                          47     13  016D   333 	BEQL	30$			;IF EQL NULL
            53         04 A3     D0  016F   334 	MOVL	4(R3),R3		;GET ADDRESS OF RESULT STRING BUFFER
                                     0173   335 	IFNOWRT	R2,(R3),ACCVIO		;CAN RESULTANT BUFFER BE WRITTEN?
            51         04 AC     D0  0179   336 	MOVL	TRLOGNAM(AP),R1		;GET ADDRESS OF LOGICAL NAME STRING
                                     017D   337 	IFNORD	#8,(R1),ACCVIO		;CAN LOGICAL NAME DESCRIPTOR BE READ?
                          FE7A'  30  0183   338 	BSBW	LOG$TRNSLOGNAME		;TRANSLATE LOGICAL NAME
            2D            50     E9  0186   339 	BLBC	R0,30$			;IF LBC TRANSLATION FAILURE
            55         08 AC     D0  0189   340 	MOVL	RSLLEN(AP),R5		;GET ADDRESS TO STORE RESULT LENGTH
                          09     13  018D   341 	BEQL	10$			;IF EQL NONE SPECIFIED
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 23:43:32   VAX-11 MACRO X0.3-11               Page   9
01              TRANSLATE LOGICAL NAME                                                                                           (1)

                                     018F   342 	IFNOWRT	#2,(R5),ACCVIO		;CAN LENGTH BE WRITTEN?
            65            51     B0  0195   343 	MOVW	R1,(R5)			;STORE RESULT STRING LENGTH
            55         10 AC     D0  0198   344 10$:	MOVL	TABLE(AP),R5		;GET ADDRESS TO STORE TABLE NUMBER
                          09     13  019C   345 	BEQL	20$			;IF EQL NONE SPECIFIED
                                     019E   346 	IFNOWRT	#1,(R5),ACCVIO		;CAN TABLE NUMBER BE WRITTEN?
            65            52     90  01A4   347 	MOVB	R2,(R5)			;STORE TRANSLATION TABLE NUMBER
            55         14 AC     D0  01A7   348 20$:	MOVL	TRACMODE(AP),R5		;GET ADDRESS TO STORE ASSIGNMENT ACCESS MODE
                          09     13  01AB   349 	BEQL	30$			;IF EQL NONE SPECIFIED
                                     01AD   350 	IFNOWRT	#1,(R5),ACCVIO		;CAN ACCESS MODE BE WRITTEN?
            65            53     90  01B3   351 	MOVB	R3,(R5)			;STORE ASSIGNMENT ACCESS MODE
                                 04  01B6   352 30$:	RET				;
                                     01B7   353  
                                     01B7   354 	.END
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 23:43:32   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (1)

ACCVIO           00000151 R     03   LOG$B_TYPE       0000000A            PCB$V_RES      = 00000000            
BIT...         = 00000000            LOG$C_GROUP    = 00000001            PCB$V_RESPEN   = 00000005            
CHECKTABLE       00000103 R     03   LOG$C_LENGTH     00000014            PCB$V_SSFEXC   = 00000006            
CRACMODE       = 00000010            LOG$C_NAMLENGTH= 00000040            PCB$V_SSFEXCE  = 00000007            
CTL$GQ_ALLOCREG  ********   X   03   LOG$C_PROCESS  = 00000002            PCB$V_SSFEXCS  = 00000008            
DLACMODE       = 0000000C            LOG$C_SYSTEM   = 00000000            PCB$V_SSFEXCU  = 00000009            
DSBMSK         = 00000018            LOG$DELETE       ********   X   03   PCB$V_SSRWAIT  = 0000000A            
DYN$C_ACB      = 00000002            LOG$INSLOGN      ********   X   03   PCB$V_SUSPEN   = 0000000B            
DYN$C_ADP      = 00000001            LOG$K_LENGTH     00000014            PCB$V_SWPVBN   = 00000010            
DYN$C_AQB      = 00000003            LOG$LOCKW        ********   X   03   PCB$V_WAKEPEN  = 0000000C            
DYN$C_BRDCST   = 0000001A            LOG$L_LTBL       00000004            PCB$V_WALL     = 0000000D            
DYN$C_BUFIO    = 00000013            LOG$L_LTFL       00000000            PCB$W_APTCNT     00000034            
DYN$C_CEB      = 00000004            LOG$L_MBXUCB     00000010            PCB$W_ASTCNT     0000003C            
DYN$C_CIR      = 0000001E            LOG$SEARCHLOG    ********   X   03   PCB$W_BIOCNT     0000003E            
DYN$C_CRB      = 00000005            LOG$TRNSLOGNAME  ********   X   03   PCB$W_BIOLM      00000040            
DYN$C_CXB      = 0000001B            LOG$T_NAME       00000014            PCB$W_BYTCNT     00000042            
DYN$C_DDB      = 00000006            LOG$UNLOCK       ********   X   03   PCB$W_BYTLM      00000068            
DYN$C_FCB      = 00000007            LOG$W_GROUP      0000000C            PCB$W_DIOCNT     00000044            
DYN$C_FRK      = 00000008            LOG$W_SIZE       00000008            PCB$W_DIOLM      00000046            
DYN$C_GSD      = 00000015            LOGNAM         = 00000008            PCB$W_FILCNT     00000048            
DYN$C_IDB      = 00000009            PCB$B_ASTACT     0000000C            PCB$W_GPGCNT     00000038            
DYN$C_IRP      = 0000000A            PCB$B_ASTEN      0000000D            PCB$W_GRP        00000022            
DYN$C_JPB      = 0000001F            PCB$B_PRI        0000000B            PCB$W_MEM        00000020            
DYN$C_KFH      = 00000026            PCB$B_PRIB       00000033            PCB$W_MTXCNT     0000000E            
DYN$C_KFI      = 00000018            PCB$B_TYPE       0000000A            PCB$W_PPGCNT     0000003A            
DYN$C_LOG      = 0000000B            PCB$B_WEFC       00000032            PCB$W_PRCCNT     0000006A            
DYN$C_MTL      = 00000019            PCB$C_LENGTH     0000007C            PCB$W_SIZE       00000008            
DYN$C_MVL      = 00000016            PCB$K_LENGTH     0000007C            PCB$W_STATE      00000030            
DYN$C_NDB      = 0000001C            PCB$L_ASTQBL     00000014            PCB$W_TMBU       00000036            
DYN$C_NET      = 00000017            PCB$L_ASTQFL     00000010            PCB$W_TQCNT      0000004A            
DYN$C_PBH      = 00000020            PCB$L_EFC2P      00000058            PRV$V_ALLSPOOL = 00000004            
DYN$C_PCB      = 0000000C            PCB$L_EFC3P      0000005C            PRV$V_BUGCHK   = 00000017            
DYN$C_PDB      = 00000021            PCB$L_EFCS       00000050            PRV$V_CMEXEC   = 00000001            
DYN$C_PFL      = 00000023            PCB$L_EFCU       00000054            PRV$V_CMKRNL   = 00000000            
DYN$C_PIB      = 00000022            PCB$L_EFWM       0000004C            PRV$V_DETACH   = 00000005            
DYN$C_PQB      = 0000000D            PCB$L_OWNER      0000001C            PRV$V_DEVCHAR  = 00000011            
DYN$C_PTR      = 00000025            PCB$L_PHD        00000064            PRV$V_DIAGNOSE = 00000006            
DYN$C_RVT      = 0000000E            PCB$L_PHYPCB     00000018            PRV$V_EXQUOTA  = 00000013            
DYN$C_SFT      = 00000024            PCB$L_PID        00000060            PRV$V_GROUP    = 00000008            
DYN$C_SSB      = 0000001D            PCB$L_PQB        0000004C            PRV$V_GRPNAM   = 00000003            
DYN$C_TQE      = 0000000F            PCB$L_SQBL       00000004            PRV$V_LOG_IO   = 00000007            
DYN$C_TYPAHD   = 00000014            PCB$L_SQFL       00000000            PRV$V_NETMBX   = 00000014            
DYN$C_UCB      = 00000010            PCB$L_STS        00000028            PRV$V_NOACNT   = 00000009            
DYN$C_VCB      = 00000011            PCB$L_UIC        00000020            PRV$V_OPER     = 00000012            
DYN$C_WCB      = 00000012            PCB$L_WSSWP      00000024            PRV$V_PHY_IO   = 00000016            
EQLNAM         = 0000000C            PCB$L_WTIME      0000002C            PRV$V_PRMCEB   = 0000000A            
EXE$ALLOCATE     ********   X   03   PCB$T_LNAME      0000006C            PRV$V_PRMGBL   = 00000018            
EXE$ALOPAGED     ********   X   03   PCB$V_ASTPEN   = 00000011            PRV$V_PRMMBX   = 0000000B            
EXE$CRELOG       00000000 RG    03   PCB$V_BATCH    = 0000000E            PRV$V_PSWAPM   = 0000000C            
EXE$DELLOG       00000091 RG    03   PCB$V_DELPEN   = 00000001            PRV$V_SETPRI   = 0000000D            
EXE$MAXACMODE    ********   X   03   PCB$V_FORCPEN  = 00000002            PRV$V_SETPRV   = 0000000E            
EXE$TRNLOG       00000155 RG    03   PCB$V_HIBER    = 00000013            PRV$V_SYSGBL   = 00000019            
GBL...         = 00000000            PCB$V_INQUAN   = 00000003            PRV$V_SYSNAM   = 00000002            
IVLOGN           0000014B R     03   PCB$V_LOGIN    = 00000014            PRV$V_TMPMBX   = 0000000F            
LOG$AL_LOGTBL    ********   X   03   PCB$V_NOACNT   = 0000000F            PRV$V_VOLPRO   = 00000015            
LOG$B_AMOD       0000000E            PCB$V_PHDRES   = 00000012            PRV$V_WORLD    = 00000010            
LOG$B_TABLE      0000000B            PCB$V_PSWAPM   = 00000004            PSL$C_EXEC     = 00000001            
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 23:43:32   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (1)

PSL$C_KERNEL   = 00000000            SS$_CONTINUE   = 00000001            SS$_ILLSER     = 00000104            
PSL$C_SUPER    = 00000002            SS$_CONTROLC   = 00000651            SS$_ILLUSRLBLRD= 00000958            
PSL$C_USER     = 00000003            SS$_CONTROLO   = 00000609            SS$_ILLUSRLBLWT= 00000960            
PSL$M_CM       = 80000000            SS$_CONTROLY   = 00000611            SS$_INCVOLLABEL= 0000010C            
PSL$M_CURMOD   = 03000000            SS$_CREATED    = 00000619            SS$_INSFARG    = 00000114            
PSL$M_DV       = 00000080            SS$_CTRLERR    = 00000054            SS$_INSFMEM    = 00000124            
PSL$M_FPD      = 08000000            SS$_DATACHECK  = 0000005C            SS$_INSFRAME   = 0000012C            
PSL$M_FU       = 00000040            SS$_DATAOVERUN = 00000838            SS$_INSFWSL    = 0000011C            
PSL$M_IPL      = 001F0000            SS$_DEBUG      = 0000046C            SS$_IVADDR     = 00000134            
PSL$M_IS       = 04000000            SS$_DEVACTIVE  = 000002C4            SS$_IVCHAN     = 0000013C            
PSL$M_IV       = 00000020            SS$_DEVALLOC   = 00000840            SS$_IVCHNLSEC  = 0000026C            
PSL$M_PRVMOD   = 00C00000            SS$_DEVALRALLOC= 00000641            SS$_IVDEVNAM   = 00000144            
PSL$M_SAFBITS  = 000037FF            SS$_DEVASSIGN  = 00000848            SS$_IVGSDNAM   = 0000014C            
PSL$M_TBIT     = 00000010            SS$_DEVFOREIGN = 00000064            SS$_IVLOGNAM   = 00000154            
PSL$M_TP       = 40000000            SS$_DEVICEFULL = 00000850            SS$_IVLOGTAB   = 0000015C            
PSL$S_CURMOD   = 00000002            SS$_DEVMOUNT   = 0000006C            SS$_IVPROTECT  = 000002F4            
PSL$S_IPL      = 00000005            SS$_DEVNOTALLOC= 00000858            SS$_IVQUOTAL   = 00000164            
PSL$S_PRVMOD   = 00000002            SS$_DEVNOTMBX  = 00000074            SS$_IVSECFLG   = 0000016C            
PSL$V_CM       = 0000001F            SS$_DEVNOTMOUNT= 0000007C            SS$_IVSECIDCTL = 000002E4            
PSL$V_CURMOD   = 00000018            SS$_DEVOFFLINE = 00000084            SS$_IVSSRQ     = 00000174            
PSL$V_DV       = 00000007            SS$_DIRFULL    = 00000860            SS$_IVSTSFLG   = 0000017C            
PSL$V_FPD      = 0000001B            SS$_DRVERR     = 0000008C            SS$_IVTIME     = 00000184            
PSL$V_FU       = 00000006            SS$_DUPFILENAME= 00000868            SS$_LENVIO     = 0000018C            
PSL$V_IPL      = 00000010            SS$_DUPLNAM    = 00000094            SS$_LKWSETFUL  = 00000194            
PSL$V_IS       = 0000001A            SS$_ENDOFFILE  = 00000870            SS$_MBFULL     = 000008D8            
PSL$V_IV       = 00000005            SS$_ENDOFTAPE  = 00000878            SS$_MBTOOSML   = 0000019C            
PSL$V_PRVMOD   = 00000016            SS$_ENDOFUSRLBL= 00000970            SS$_MCHECK     = 000002BC            
PSL$V_TBIT     = 00000004            SS$_EXQUOTA    = 0000001C            SS$_MEDOFL     = 000001A4            
PSL$V_TP       = 0000001E            SS$_EXTIDXFILE = 00000880            SS$_MSGNOTFND  = 00000621            
RSLBUF         = 0000000C            SS$_FCPREADERR = 00000888            SS$_MUSTCLOSEFL= 00000948            
RSLLEN         = 00000008            SS$_FCPREPSTN  = 00000988            SS$_NODATA     = 000001AC            
SS$_ABORT      = 0000002C            SS$_FCPREWNDERR= 00000890            SS$_NOHANDLER  = 000008F8            
SS$_ACCONFLICT = 00000800            SS$_FCPSPACERR = 00000898            SS$_NOHOMEBLK  = 000008E0            
SS$_ACCVIO     = 0000000C            SS$_FCPWRITERR = 000008A0            SS$_NOIOCHAN   = 000001B4            
SS$_ARITH      = 00000404            SS$_FILACCERR  = 0000009C            SS$_NOLINKS    = 0000027C            
SS$_ASTFLT     = 0000040C            SS$_FILALRACC  = 000000A4            SS$_NOLOGNAM   = 000001BC            
SS$_BADATTRIB  = 00000034            SS$_FILELOCKED = 000008A8            SS$_NOMBX      = 00000274            
SS$_BADCHKSUM  = 00000808            SS$_FILENUMCHK = 000008B0            SS$_NOMOREFILES= 00000930            
SS$_BADESCAPE  = 0000003C            SS$_FILESEQCHK = 000008B8            SS$_NONEXDRV   = 000001C4            
SS$_BADFILEHDR = 00000810            SS$_FILESTRUCT = 000008C0            SS$_NONEXPR    = 000008E8            
SS$_BADFILENAME= 00000818            SS$_FILNOTACC  = 000000AC            SS$_NONLOCAL   = 000008F0            
SS$_BADFILEVER = 00000820            SS$_FILNOTCNTG = 000002AC            SS$_NOPRIV     = 00000024            
SS$_BADIMGHDR  = 00000044            SS$_FILNOTEXP  = 000000B4            SS$_NORMAL     = 00000001            
SS$_BADIRECTORY= 00000828            SS$_FORMAT     = 000000BC            SS$_NOSIGNAL   = 00000900            
SS$_BADPARAM   = 00000014            SS$_GPTFULL    = 000000C4            SS$_NOSOLICIT  = 00000284            
SS$_BADSTACK   = 000002B4            SS$_GSDFULL    = 000000CC            SS$_NOSUCHDEV  = 00000908            
SS$_BEGOFFILE  = 00000938            SS$_GSDNOTXXX  = 000000D4            SS$_NOSUCHFILE = 00000910            
SS$_BLOCKCNTERR= 00000940            SS$_HANGUP     = 000002CC            SS$_NOSUCHNODE = 0000028C            
SS$_BREAK      = 00000414            SS$_HEADERFULL = 000008C8            SS$_NOSUCHSEC  = 00000978            
SS$_BUFFEROVF  = 00000601            SS$_IDXFILEFULL= 000008D0            SS$_NOTAPEOP   = 00000264            
SS$_BUGCHECK   = 000002A4            SS$_ILLBLKNUM  = 000000DC            SS$_NOTFILEDEV = 000001CC            
SS$_CANCEL     = 00000830            SS$_ILLCNTRFUNC= 000000E4            SS$_NOTINTBLSZ = 000001D4            
SS$_CHANINTLK  = 0000004C            SS$_ILLEFC     = 000000EC            SS$_NOTLABELMT = 000001DC            
SS$_CLIFRCEXT  = 00000980            SS$_ILLIOFUNC  = 000000F4            SS$_NOTNETDEV  = 000002EC            
SS$_CMODSUPR   = 0000041C            SS$_ILLLBLAST  = 00000968            SS$_NOTRAN     = 00000629            
SS$_CMODUSER   = 00000424            SS$_ILLPAGCNT  = 000000FC            SS$_NOTSQDEV   = 000001E4            
SS$_COMPAT     = 0000042C            SS$_ILLSEQOP   = 000002DC            SS$_OPCCUS     = 00000434            
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 23:43:32   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (1)

SS$_OPCDEC     = 0000043C            UCB$B_SLAVE      00000074            UCB$M_JOB      = 00000001            
SS$_OPINCOMPL  = 000002D4            UCB$B_SPR        00000075            UCB$M_MOUNTING = 00000200            
SS$_PAGOWNVIO  = 000001EC            UCB$B_STATE      00000052            UCB$M_NOCNVRT  = 00000004            
SS$_PAGRDERR   = 00000444            UCB$B_TRACKS     0000003D            UCB$M_NT_BFROVF= 00000004            
SS$_PARITY     = 000001F4            UCB$B_TYPE       0000000A            UCB$M_NT_BREAK = 00000020            
SS$_PARTESCAPE = 000001FC            UCB$B_VERTSZ     0000003F            UCB$M_NT_NAME  = 00000010            
SS$_PFMBSY     = 00000204            UCB$C_LENGTH     00000074            UCB$M_NT_NONTR = 00000040            
SS$_PSTFULL    = 0000020C            UCB$C_LOGLNK   = 00000001            UCB$M_NT_SDP   = 00000008            
SS$_RADRMOD    = 0000044C            UCB$K_LENGTH     00000074            UCB$M_ONLINE   = 00000010            
SS$_REJECT     = 00000294            UCB$L_AMB        00000054            UCB$M_POWER    = 00000020            
SS$_REMOTE     = 00000649            UCB$L_ASTQBL     00000010            UCB$M_PRMMBX   = 00000001            
SS$_RESIGNAL   = 00000918            UCB$L_ASTQFL     0000000C            UCB$M_TIM      = 00000001            
SS$_RESULTOVF  = 00000214            UCB$L_CPID       0000005C            UCB$M_TIMOUT   = 00000040            
SS$_ROPRAND    = 00000454            UCB$L_CRB        00000020            UCB$M_TT_NOTIF = 00000004            
SS$_SECTBLFUL  = 0000021C            UCB$L_DDB        00000024            UCB$M_TT_TIMO  = 00000002            
SS$_SSFAIL     = 0000045C            UCB$L_DEVCHAR    00000034            UCB$M_VALID    = 00000800            
SS$_SUPERSEDE  = 00000631            UCB$L_DEVDEPEND  0000003C            UCB$S_LNKPRI   = 00000002            
SS$_TAPEPOSLOST= 00000224            UCB$L_DPC        0000007C            UCB$S_LTYPE    = 00000002            
SS$_TBIT       = 00000464            UCB$L_DUETIM     0000005C            UCB$T_PARTNER    0000000C            
SS$_TIMEOUT    = 0000022C            UCB$L_DX_BFPNT   FFFFFFF4            UCB$V_BACKP    = 00000005            
SS$_TOOMANYVER = 00000990            UCB$L_DX_BUF     FFFFFFF0            UCB$V_BSY      = 00000008            
SS$_TOOMUCHDATA= 0000029C            UCB$L_DX_RXDB    FFFFFFF8            UCB$V_CANCEL   = 00000003            
SS$_UNASEFC    = 00000234            UCB$L_EMB        00000078            UCB$V_DEADMO   = 0000000A            
SS$_UNSAFE     = 0000023C            UCB$L_FIRST      00000014            UCB$V_DELMBX   = 00000001            
SS$_UNWIND     = 00000920            UCB$L_FPC        0000000C            UCB$V_DIAGBUF  = 00000001            
SS$_UNWINDING  = 00000928            UCB$L_FQBL       00000004            UCB$V_DX_WRITE = 00000003            
SS$_VASFULL    = 00000244            UCB$L_FQFL       00000000            UCB$V_ECC      = 00000000            
SS$_VECINUSE   = 0000024C            UCB$L_FR3        00000010            UCB$V_ERLOGIP  = 00000002            
SS$_VOLINV     = 00000254            UCB$L_FR4        00000014            UCB$V_INT      = 00000001            
SS$_WAITUSRLBL = 00000950            UCB$L_IOQBL      00000044            UCB$V_INTTYPE  = 00000007            
SS$_WASCLR     = 00000001            UCB$L_IOQFL      00000040            UCB$V_JOB      = 00000000            
SS$_WASECC     = 00000639            UCB$L_IRP        0000004C            UCB$V_LNKPRI   = 00000006            
SS$_WASSET     = 00000009            UCB$L_LINK       0000002C            UCB$V_LTYPE    = 00000000            
SS$_WRITLCK    = 0000025C            UCB$L_LOGADR     00000064            UCB$V_MOUNTING = 00000009            
TABLE          = 00000010            UCB$L_MAXBLOCK   00000080            UCB$V_MSGACK   = 00000004            
TBLFLG         = 00000004            UCB$L_MEDIA      00000088            UCB$V_MSGFLO   = 00000003            
TRACMODE       = 00000014            UCB$L_NT_DATSSB  00000074            UCB$V_NOCNVRT  = 00000002            
TRLOGNAM       = 00000004            UCB$L_NT_INTSSB  00000078            UCB$V_NT_BFROVF= 00000002            
UCB$B_AMOD       00000053            UCB$L_OPCNT      00000060            UCB$V_NT_BREAK = 00000005            
UCB$B_CEX        00000077            UCB$L_OWNUIC     0000001C            UCB$V_NT_NAME  = 00000004            
UCB$B_CM1        0000004A            UCB$L_PID        00000028            UCB$V_NT_NONTR = 00000006            
UCB$B_CM2        0000004B            UCB$L_RQBL       00000004            UCB$V_NT_SDP   = 00000003            
UCB$B_DEVCLASS   00000038            UCB$L_RQFL       00000000            UCB$V_ONLINE   = 00000004            
UCB$B_DEVTYPE    00000039            UCB$L_SVAPTE     00000068            UCB$V_POWER    = 00000005            
UCB$B_DIPL       00000052            UCB$L_SVPN       00000064            UCB$V_PRMMBX   = 00000000            
UCB$B_DX_SCTCNT  FFFFFFFE            UCB$L_TTCHAR     0000003C            UCB$V_SEGFLO   = 00000002            
UCB$B_DX_SPARE   FFFFFFFF            UCB$L_VCB        00000030            UCB$V_TIM      = 00000000            
UCB$B_ERTCNT     00000070            UCB$M_BSY      = 00000100            UCB$V_TIMOUT   = 00000006            
UCB$B_ERTMAX     00000071            UCB$M_CANCEL   = 00000008            UCB$V_TT_NOTIF = 00000002            
UCB$B_ESCAPE     0000004B            UCB$M_DEADMO   = 00000400            UCB$V_TT_TIMO  = 00000001            
UCB$B_FEX        00000076            UCB$M_DELMBX   = 00000002            UCB$V_VALID    = 0000000B            
UCB$B_FIPL       0000000B            UCB$M_DIAGBUF  = 00000002            UCB$W_BCNT       0000006E            
UCB$B_LOCSRV     0000003C            UCB$M_DX_WRITE = 00000008            UCB$W_BCR        00000092            
UCB$B_OFFNDX     00000090            UCB$M_ECC      = 00000001            UCB$W_BOFF       0000006C            
UCB$B_OFFRTC     00000091            UCB$M_ERLOGIP  = 00000004            UCB$W_BUFQUO     00000018            
UCB$B_REMSRV     0000003D            UCB$M_INT      = 00000002            UCB$W_BYTESTOGO  0000003E            
UCB$B_SECTORS    0000003C            UCB$M_INTTYPE  = 00000080            UCB$W_CHARGE     0000004A            
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 23:43:32   VAX-11 MACRO X0.3-11               Page  13
SYMBOL TABLE                                                                                                                     (1)

UCB$W_CYLINDERS  0000003E            
UCB$W_DA         00000088            
UCB$W_DC         0000008A            
UCB$W_DEVBUFSIZ  0000003A            
UCB$W_DEVSTS     0000005A            
UCB$W_DSTADDR    00000018            
UCB$W_DX_BCR     FFFFFFFC            
UCB$W_EC1        0000008C            
UCB$W_EC2        0000008E            
UCB$W_ERRCNT     00000072            
UCB$W_FUNC       00000084            
UCB$W_MB_SEED    FFFFFFFC            
UCB$W_MSGCNT     00000016            
UCB$W_MSGMAX     00000014            
UCB$W_NT_CHAN    0000007C            
UCB$W_OFFSET     00000086            
UCB$W_REFC       00000050            
UCB$W_SIZE       00000008            
UCB$W_SRCADDR    0000001A            
UCB$W_STS        00000058            
UCB$W_UNIT       00000048            
UCB$W_VPROT      0000001A            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFF      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
Y$EXEPAGED       000001B7      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
11092. BYTES LEFT IN FREE MEMORY POOL.
3184. BYTES OF RECLAIMED MEMORY.
OBJ$:SYSLOGNAM,LIS$:SYSLOGNAM/-SP=LIB$:LIB/ML,SRC$:SYSLOGNAM
7 MLB DIR RDS - 813 GETS TO DEFINE 19 MACROS. 64 INTER. FILE WRITES. 
