SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      84  QUEUE I/O REQUEST
   (1)     317  COMPLETE I/O OPERATION
   (1)     369  QUEUE I/O PACKET TO DRIVER
   (1)     392  QUEUE I/O PACKET TO ACP
   (1)     428  INSERT I/O PACKET IN UNIT QUEUE
   (1)     451  INSERT I/O PACKET IN QUEUE BY PRIORITY
SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	SYSQIOREQ - SYSTEM SERVICE QUEUE I/O REQUEST
                                     0000     2 	.IDENT	/01/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; D. N. CUTLER 14-JUN-76
                                     0000    24 ;
                                     0000    25 ; MODIFIED BY:
                                     0000    26 ;
                                     0000    27 ; C. A. MONIA 24-JAN-78
                                     0000    28 ;
                                     0000    29 ;	01 - MODIFIED FOR STAND-ALONE DSC SYSTEM
                                     0000    30 ;
                                     0000    31 ;
                                     0000    32 ; SYSTEM SERVICE QUEUE I/O REQUEST
                                     0000    33 ;
                                     0000    34 ; MACRO LIBRARY CALLS
                                     0000    35 ;
                                     0000    36  
                                     0000    37 	$ACBDEF				;DEFINE ACB OFFSETS
                                     0000    38 	$AQBDEF				;DEFINE AQB OFFSETS
                                     0000    39 	$CADEF				;DEFINE CONDITIONAL ASSEMBLY PARAMETERS
                                     0000    40 	$CCBDEF				;DEFINE CCB OFFSETS
                                     0000    41 	$DDBDEF				;DEFINE DDB OFFSETS
                                     0000    42 	$DDTDEF				;DEFINE DDT OFFSETS
                                     0000    43 	$DYNDEF				;DEFINE DATA STRUCTURE TYPE CODES
                                     0000    44 	$IPLDEF				;DEFINE INTERRUPT PRIORITY LEVELS
                                     0000    45 	$IRPDEF				;DEFINE IRP OFFSETS
                                     0000    46 	$PCBDEF				;DEFINE PCB OFFSETS
                                     0000    47 	$PHDDEF				;DEFINE PHD OFFSETS
                                     0000    48 	$PRDEF				;DEFINE PROCESSOR REGISTERS
                                     0000    49 	$PRIDEF				;DEFINE PRIORITY CLASS INCREMENTS
                                     0000    50 	$PRVDEF				;DEFINE PRIVILEGE BITS
                                     0000    51 	$PSLDEF				;DEFINE PROCESSOR STATUS FIELDS
                                     0000    52 	$RSNDEF				;DEFINE RESOURCE WAIT NUMBERS
                                     0000    53 	$SECDEF				;DEFINE SEC OFFSETS
                                     0000    54 	$UCBDEF				;DEFINE UCB OFFSETS
                                     0000    55 	$VCBDEF				;DEFINE VCB OFFSETS
                                     0000    56  
                                     0000    57 ;
SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page   2
01                                                                                                                               (1)

                                     0000    58 ; LOCAL SYMBOLS
                                     0000    59 ;
                                     0000    60 ; ARGUMENT LIST OFFSET DEFINITIONS
                                     0000    61 ;
                                     0000    62  
                           00000004  0000    63 EFN=4					;EVENT FLAG NUMBER
                           00000008  0000    64 CHAN=8					;I/O CHANNEL NUMBER
                           0000000C  0000    65 FUNC=12					;I/O FUNCTION CODE
                           00000010  0000    66 IOSB=16					;ADDRESS OF I/O STATUS BLOCK
                           00000014  0000    67 ASTADR=20				;ADDRESS OF AST SERVICE ROUTINE
                           00000018  0000    68 ASTPRM=24				;AST SERVICE ROUTINE PARAMETER
                           0000001C  0000    69 P1=28					;FIRST FUNCTION DEPENDENT PARAMETER
                           00000020  0000    70 P2=32					;SECOND FUNCTION DEPENDENT PARAMETER
                           00000024  0000    71 P3=36					;THIRD FUNCTION DEPENDENT PARAMETER
                           00000028  0000    72 P4=40					;FOURTH FUNCTION DEPENDENT PARAMETER
                           0000002C  0000    73 P5=44					;FIFTH FUNCTION DEPENDENT PARAMETER
                           00000030  0000    74 P6=48					;SIXTH FUNCTION DEPENDENT PARAMETER
                                     0000    75  
                                     0000    76 ;
                                     0000    77 ; FUNCTION DECISION TABLE OFFSET DEFINITIONS
                                     0000    78 ;
                                     0000    79  
                           00000000  0000    80 LEGAL=0					;LEGAL FUNCTION MASK
                           00000008  0000    81 IOTYPE=8				;I/O FUNCTION TYPE MASK
                           00000010  0000    82 FDTACT=16				;ACTION ROUTINE MASKS
SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page   3
01              QUEUE I/O REQUEST                                                                                                (1)

                                     0000    84 	.SBTTL	QUEUE I/O REQUEST
                                     0000    85 ;+
                                     0000    86 ; EXE$QIOREQ - QUEUE I/O REQUEST
                                     0000    87 ;
                                     0000    88 ; ***TBS***
                                     0000    89 ;
                                     0000    90 ; INPUTS:
                                     0000    91 ;
                                     0000    92 ;	EFN(AP) = EVENT FLAG NUMBER.
                                     0000    93 ;	CHAN(AP) = I/O CHANNEL NUMBER.
                                     0000    94 ;	FUNC(AP) = I/O FUNCTION CODE.
                                     0000    95 ;	IOSB(AP) = ADDRESS OF I/O STATUS BLOCK.
                                     0000    96 ;	ASTADR(AP) = ADDRESS OF AST SERVICE ROUTINE.
                                     0000    97 ;	ASTPRM(AP) = AST SERVICE ROUTINE PARAMETER.
                                     0000    98 ;	P1(AP) TO P6(AP) = FUNCTION DEPENDENT PARAMETERS.
                                     0000    99 ;
                                     0000   100 ;	R4 = CURRENT PROCESS PCB ADDRESS.
                                     0000   101 ;
                                     0000   102 ; OUTPUTS:
                                     0000   103 ;
                                     0000   104 ; ***TBS***
                                     0000   105 ;-
                                     0000   106  
                                     0000   107 	.ENABL	LSB
                               0FFC' 0000   108 	.ENTRY	EXE$QIO,^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>
            53         04 AC     9A  0002   109 10$:	MOVZBL	EFN(AP),R3		;GET EVENT FLAG NUMBER
                          FFF7'  30  0006   110 	BSBW	SCH$CLREF		;CLEAR SPECIFIED EVENT FLAG
            7F            50     E9  0009   111 	BLBC	R0,ERROR		;IF LBC INVALID EVENT FLAG
            50         08 AC     3C  000C   112 	MOVZWL	CHAN(AP),R0		;GET CHANNEL NUMBER
                          FFED'  30  0010   113 	BSBW	IOC$VERIFYCHAN		;VERIFY CHANNEL NUMBER
            75            50     E9  0013   114 	BLBC	R0,ERROR		;IF LBC INVALID CHANNEL
            56            51     D0  0016   115 	MOVL	R1,R6			;SAVE ADDRESS OF CCB
            55            66     D0  0019   116 	MOVL	CCB$L_UCB(R6),R5	;GET ASSIGNED DEVICE UCB ADDRESS
            58         24 A5     D0  001C   117 	MOVL	UCB$L_DDB(R5),R8	;GET ADDRESS OF DDB
            58         0C A8     D0  0020   118 	MOVL	DDB$L_DDT(R8),R8	;GET ADDRESS OF DDT
            58         08 A8     D0  0024   119 	MOVL	DDT$L_FDT(R8),R8	;GET ADDRESS OF FDT
            59            52     D0  0028   120 	MOVL	R2,R9			;SAVE CHANNEL INDEX
            5A         0C AC     3C  002B   121 	MOVZWL	FUNC(AP),R10		;GET I/O FUNCTION CODE AND MODIFIERS
            5A   FFFFFFFF'8F     CB  002F   122 	BICL3	#^C<IO$M_FCODE>,R10,R7	;CLEAR ALL BUT I/O FUNCTION CODE
                          57         0036       
         34 A5            00'    E1  0037   123 	BBC	S^#DEV$V_SPL,UCB$L_DEVCHAR(R5),20$ ;IF CLR, DEVICE NOT SPOOLED
                          09         003B       
            57            00'    D1  003C   124 	CMPL	S^#IO$_LOGICAL,R7	;VIRTUAL I/O FUNCTION?
                          04     18  003F   125 	BGEQ	20$			;IF GEQ NO
            55         54 A5     D0  0041   126 	MOVL	UCB$L_AMB(R5),R5	;GET INTERMEDIATE DEVICE UCB ADDRESS
            68            57     E1  0045   127 20$:	BBC	R7,LEGAL(R8),50$	;IF CLR, ILLEGAL I/O FUNCTION
                          31         0048       
         58 A5            04     E1  0049   128 	BBC	#UCB$V_ONLINE,UCB$W_STS(R5),60$ ;IF CLR, DEVICE OFFLINE
                          33         004D       
            51         10 AC     D0  004E   129 	MOVL	IOSB(AP),R1		;GET ADDRESS OF I/O STATUS BLOCK
                          08     13  0052   130 	BEQL	30$			;IF EQL NONE SPECIFIED
                                     0054   131 	IFNOWRT	#8,(R1),70$		;CAN I/O STATUS BLOCK BE WRITTEN?
                          61     7C  005A   132 	CLRQ	(R1)			;CLEAR I/O STATUS BLOCK
                          7E     DC  005C   133 30$:	MOVPSL	-(SP)			;READ CURRENT PSL
            5B         3E A4     DE  005E   134 	MOVAL	PCB$W_BIOCNT(R4),R11	;SET FOR BUFFERED I/O FUNCTION
         08 A8            57     E0  0062   135 	BBS	R7,IOTYPE(R8),40$	;IF SET, BUFFERED I/O FUNCTION
                          04         0066       
SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page   4
01              QUEUE I/O REQUEST                                                                                                (1)

            5B         44 A4     DE  0067   136 	MOVAL	PCB$W_DIOCNT(R4),R11	;SET FOR DIRECT I/O FUNCTION
            52            5B     D0  006B   137 40$:	MOVL	R11,R2			;SET ADDRESS OF USAGE COUNT WORD
                          FF8F'  30  006E   138 	BSBW	EXE$SNGLEQUOTA		;CHECK UNIT QUOTA OF I/O FUNCTION TYPE
            17            50     E9  0071   139 	BLBC	R0,ERROR		;IF LBC QUOTA EXCEEDED
            45         04 A6     E9  0074   140 	BLBC	CCB$L_WIND(R6),GTPKT	;IF LBC ACCESS/DEACCESS NOT PENDING
                          27     11  0078   141 	BRB	75$			;
            50       0000'8F     3C  007A   142 50$:	MOVZWL	#SS$_ILLIOFUNC,R0	;SET ILLEGAL I/O FUNCTION STATUS
                          0A     11  007F   143 	BRB	ERROR			;
            50       0000'8F     3C  0081   144 60$:	MOVZWL	#SS$_DEVOFFLINE,R0	;SET DEVICE OFFLINE STATUS
                          03     11  0086   145 	BRB	ERROR			;
            50            00'    3C  0088   146 70$:	MOVZWL	S^#SS$_ACCVIO,R0	;SET ACCESS VIOLATION STATUS
                                     008B   147 ERROR:	SETIPL	#0			;ALLOW INTERRUPTS
                          50     DD  008E   148 	PUSHL	R0			;SAVE FINAL STATUS
            51         60 A4     D0  0090   149 	MOVL	PCB$L_PID(R4),R1	;GET PROCESS ID OF CURRENT PROCESS
            52            01     3C  0094   150 	MOVZWL	#PRI$_IOCOM,R2		;SET PRIORITY CLASS INCREMENT
            53         04 AC     9A  0097   151 	MOVZBL	EFN(AP),R3		;GET SPECIFIED EVENT FLAG NUMBER
                          FF62'  30  009B   152 	BSBW	SCH$POSTEF		;POST SPECIFIED EVENT FLAG
                          01     BA  009E   153 	POPR	#^M<R0>			;RESTORE FINAL STATUS
                                 04  00A0   154 	RET				;
                                     00A1   155 75$:	SETIPL	#IPL$_SYNCH		;SYNCHRONIZE ACCESS TO SYSTEM DATA BASE
            50            13     DB  00A4   156 	MFPR	#PR$_ASTLVL,R0		;READ CURRENT AST LEVEL
                          06     13  00A7   157 	BEQL	80$			;IF EQL KERNEL AST QUEUED
            50            01     3C  00A9   158 	MOVZWL	#RSN$_ASTWAIT,R0	;SET AST WAIT RESOURCE NUMBER
                          FF51'  30  00AC   159 	BSBW	SCH$RWAIT		;WAIT FOR AST
                                     00AF   160 80$:	SETIPL	#0			;ALLOW INTERRUPTS
                          FF4D   31  00B2   161 	BRW	10$			;
                                     00B5   162  
                                     00B5   163 ;
                                     00B5   164 ; ALLOCATE REQUEST I/O PACKET
                                     00B5   165 ;
                                     00B5   166  
                          FF48'  30  00B5   167 ALLOC:	BSBW	EXE$ALLOCIRP		;ALLOCATE I/O REQUEST PACKET
            09            50     E8  00B8   168 	BLBS	R0,SUCCES		;IF LBS SUCCESSFUL ALLOCATION
                          CE     11  00BB   169 	BRB	ERROR			;
            52       0000'DF     0F  00BD   170 GTPKT:	REMQUE	@W^IOC$GL_IRPFL,R2	;GET I/O PACKET FROM LOOK ASIDE LIST
                          F1     1D  00C2   171 	BVS	ALLOC			;IF VS EMPTY LIST
                                     00C4   172 	.DSABL	LSB
                                     00C4   173  
                                     00C4   174 ;
                                     00C4   175 ; BUILD DEVICE INDEPENDENT PART OF I/O PACKET
                                     00C4   176 ;
                                     00C4   177  
                          6B     B7  00C4   178 SUCCES:	DECW	(R11)			;UPDATE I/O COUNT FOR FUNCTION TYPE
                                     00C6   179  
                                     00C6   180 	.IF DF	CA$_MEASURE_IOT
                                     00C6   181  
                          FF37'  30  00C6   182 	BSBW	PMS$START_RQ		;INSERT START OF I/O REQUEST MESSAGE
                                     00C9   183  
                                     00C9   184 	.ENDC
                                     00C9   185  
                       0A A6     B6  00C9   186 	INCW	CCB$W_IOC(R6)		;INCREMENT OUTSTANDING I/O ON CHANNEL
            53            52     D0  00CC   187 	MOVL	R2,R3			;COPY ADDRESS OF ALLOCATED I/O PACKET
            52            08     C0  00CF   188 	ADDL	#IRP$W_SIZE,R2		;POINT TO SIZE FIELD
            82       004C 8F     B0  00D2   189 	MOVW	#IRP$C_LENGTH,(R2)+	;INSERT LENGTH OF I/O PACKET
            82            0A     90  00D7   190 	MOVB	#DYN$C_IRP,(R2)+	;INSERT DATA STRUCTURE TYPE
            02            16     EF  00DA   191 	EXTZV	#PSL$V_PRVMOD,#PSL$S_PRVMOD,(SP),(R2) ;INSERT ACCESS MODE
            62            6E         00DD       
SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page   5
01              QUEUE I/O REQUEST                                                                                                (1)

                          52     D6  00DF   192 	INCL	R2			;ADJUST PAST ACCESS MODE FIELD
            82         60 A4     D0  00E1   193 	MOVL	PCB$L_PID(R4),(R2)+	;INSERT PROCESS ID OF CURRENT PROCESS
            82         14 AC     7D  00E5   194 	MOVQ	ASTADR(AP),(R2)+	;INSERT AST ADDRESS AND PARAMETER
            50         04 A6     D0  00E9   195 	MOVL	CCB$L_WIND(R6),R0	;GET WINDOW ADDRESS
                          13     15  00ED   196 	BLEQ	1$			;IF LEQ NOT SECTION INDEX
            50            50     32  00EF   197 	CVTWL	R0,R0			;SIGN EXTEND SECTION INDEX
            51   00000000'9F     D0  00F2   198 	MOVL	@#CTL$GL_PHD,R1		;GET ADDRESS OF PROCESS HEADER
            51         20 A1     C0  00F9   199 	ADDL	PHD$L_PSTBASOFF(R1),R1	;CALCULATE BASE ADDRESS OF SECTION TABLE
            50         0C A140   D0  00FD   200 	MOVL	SEC$L_WINDOW(R1)[R0],R0	;GET ADDRESS OF REAL WINDOW
            82            50     D0  0102   201 1$:	MOVL	R0,(R2)+		;INSERT WINDOW ADDRESS
            82            55     D0  0105   202 	MOVL	R5,(R2)+		;INSERT DEVICE UCB ADDRESS
            82            5A     B0  0108   203 	MOVW	R10,(R2)+		;INSERT I/O FUNCTION CODE
            82         04 AC     90  010B   204 	MOVB	EFN(AP),(R2)+		;INSERT EVENT FLAG NUMBER
            82         33 A4     90  010F   205 	MOVB	PCB$B_PRIB(R4),(R2)+	;INSERT PROCESS BASE PRIORITY
            82         10 AC     D0  0113   206 	MOVL	IOSB(AP),(R2)+		;INSERT I/O STATUS BLOCK ADDRESS
            82            59     3C  0117   207 	MOVZWL	R9,(R2)+		;INSERT CHANNEL INDEX AND ZERO STATUS
         08 A8            57     E1  011A   208 	BBC	R7,IOTYPE(R8),5$	;IF CLR, DIRECT I/O FUNCTION
                          04         011E       
         FE A2            01     A8  011F   209 	BISW	#IRP$M_BUFIO,-2(R2)	;SET TO BUFFERED I/O FUNCTION
                                     0123   210 5$:	IFPRIV	LOG_IO,10$		;PROCESS HAVE LOGICAL I/O PRIVILEGE?
                                     0128   211 	IFNPRIV	PHY_IO,15$		;PROCESS HAVE PHYSICAL I/O PRIVILEGE?
         FE A2       0200 8F     A8  012D   212 10$:	BISW	#IRP$M_PRIVIO,-2(R2)	;SET PRIVILEGED REQUESTER FLAG
                          62     7C  0133   213 15$:	CLRQ	(R2)			;CLEAR PTE ADDRESS, BYTE OFFSET, AND BYTE COUNT
                                     0135   214  
                                     0135   215 ;
                                     0135   216 ; CHECK IF REQUESTING PROCESS HAS PRIVILEGE TO ACCESS DEVICE
                                     0135   217 ;
                                     0135   218  
            57            00'    D1  0135   219 	CMPL	S^#IO$_LOGICAL,R7	;VIRTUAL I/O FUNCTION?
                          4D     19  0138   220 	BLSS	80$			;IF LSS YES
                                     013A   221  
                                     013A   222 ;
                                     013A   223 ; LOGICAL OR PHYSICAL I/O FUNCTION
                                     013A   224 ;
                                     013A   225  
                                     013A   226 	IFPRIV	PHY_IO,80$		;PROCESS HAVE PHYSICAL I/O PRIVILEGE?
            57            00'    D1  013F   227 	CMPL	S^#IO$_PHYSICAL,R7	;PHYSICAL I/O FUNCTION?
                          0C     19  0142   228 	BLSS	20$			;IF LSS NO
                                     0144   229 	IFNPRIV	LOG_IO,60$		;PROCESS HAVE LOGICAL I/O PRIVILEGE?
            50       0000'CF     9E  0149   230 	MOVAB	W^EXE$CHKPHYACCES,R0	;SET FOR PHYSICAL I/O FUNCTION CHECK
                          0C     11  014E   231 	BRB	30$			;
                                     0150   232  
                                     0150   233 ;
                                     0150   234 ; LOGICAL I/O FUNCTION
                                     0150   235 ;
                                     0150   236  
                                     0150   237 20$:	IFPRIV	LOG_IO,90$		;PROCESS HAVE LOGICAL I/O PRIVILEGE?
                          70     11  0155   238 	BRB	90$			;****TEMP****FORCE DIRECTIO UNTIL VIRTUAL
            50       0000'CF     9E  0157   239 	MOVAB	W^EXE$CHKLOGACCES,R0	;SET FOR LOGICAL I/O FUNCTION CHECK
                                     015C   240  
                                     015C   241 ;
                                     015C   242 ; PHYSICAL OR LOGICAL I/O FUNCTION - CHECK ACCESSIBILITY OF DEVICE
                                     015C   243 ;
                                     015C   244  
         34 A5            00'    E1  015C   245 30$:	BBC	S^#DEV$V_FOD,UCB$L_DEVCHAR(R5),40$ ;IF CLR, NOT FILE DEVICE
                          0C         0160       
         34 A5            00'    E1  0161   246 	BBC	S^#DEV$V_MNT,UCB$L_DEVCHAR(R5),60$ ;IF CLR, DEVICE NOT MOUNTED
SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page   6
01              QUEUE I/O REQUEST                                                                                                (1)

                          19         0165       
         34 A5            00'    E1  0166   247 	BBC	S^#DEV$V_FOR,UCB$L_DEVCHAR(R5),60$ ;IF CLR, MOUNTED STRUCTURED
                          14         016A       
                          05     11  016B   248 	BRB	50$			;
         34 A5            00'    E1  016D   249 40$:	BBC	S^#DEV$V_SHR,UCB$L_DEVCHAR(R5),80$ ;IF CLR, DEVICE NOT SHAREABLE
                          15         0171       
            51         1A A5     3C  0172   250 50$:	MOVZWL	UCB$W_VPROT(R5),R1	;GET VOLUME PROTECTION MASK
            52         1C A5     D0  0176   251 	MOVL	UCB$L_OWNUIC(R5),R2	;GET VOLUME OWNER UIC
                          60     16  017A   252 	JSB	(R0)			;CHECK ACCESS TO VOLUME
            08            50     E8  017C   253 	BLBS	R0,80$			;IF LBS ACCESS ALLOWED
            50       0000'8F     3C  017F   254 60$:	MOVZWL	#SS$_NOPRIV,R0		;SET NO PRIVILEGE STATUS
                          006A   31  0184   255 70$:	BRW	EXE$ABORTIO		;
                                     0187   256  
                                     0187   257 ;
                                     0187   258 ; PROCESS HAS ACCESS TO DEVICE
                                     0187   259 ;
                                     0187   260  
            57            00'    D1  0187   261 80$:	CMPL	S^#IO$_PHYSICAL,R7	;LOGICAL OR VIRTUAL I/O FUNCTION?
                          3B     19  018A   262 	BLSS	90$			;IF LSS YES
         2A A3       0100 8F     A8  018C   263 	BISW	#IRP$M_PHYSIO,IRP$W_STS(R3) ;SET PHYSICAL I/O FLAG
            59         30 AC     D0  0192   264 	MOVL	P6(AP),R9		;GET ADDRESS OF DIAGNOSTIC BUFFER
                          2F     13  0196   265 	BEQL	90$			;IF EQL NONE SPECIFIED
                                     0198   266 	IFNPRIV	DIAGNOSE,60$		;PROCESS HAVE PRIVILEGE TO DIAGNOSE?
            51         24 A5     D0  019D   267 	MOVL	UCB$L_DDB(R5),R1	;GET ADDRESS OF DDB
            51         0C A1     D0  01A1   268 	MOVL	DDB$L_DDT(R1),R1	;GET ADDRESS OF DDT
            51         14 A1     3C  01A5   269 	MOVZWL	DDT$W_DIAGBUF(R1),R1	;GET SIZE OF DIAGNOSTIC BUFFER
                          1C     13  01A9   270 	BEQL	90$			;IF EQL NO DIAGNOSTIC FUNCTIONS
                          53     DD  01AB   271 	PUSHL	R3			;SAVE I/O PACKET ADDRESS
                          FE50'  30  01AD   272 	BSBW	EXE$ALLOCBUF		;ALLOCATE DIAGNOSTIC BUFFER
                          53   8ED0  01B0   273 	POPL	R3			;RETRIEVE I/O PACKET ADDRESS
            CE            50     E9  01B3   274 	BLBC	R0,70$			;IF LBC ALLOCATION FAILURE
         44 A3            52     D0  01B6   275 	MOVL	R2,IRP$L_DIAGBUF(R3)	;SAVE ADDRESS OF DIAGNOSTIC BUFFER
            82         0C A2     9E  01BA   276 	MOVAB	12(R2),(R2)+		;SET POINTER TO DATA AREA
            62            59     D0  01BE   277 	MOVL	R9,(R2)			;SAVE USER ADDRESS OF DIAGNOSTIC BUFFER
         2A A3       0080 8F     A8  01C1   278 	BISW	#IRP$M_DIAGBUF,IRP$W_STS(R3) ;SET DIAGNOSTIC BUFFER PRESENT
                                     01C7   279  
                                     01C7   280 ;
                                     01C7   281 ; CHECK IF AST IS SPECIFIED
                                     01C7   282 ;
                                     01C7   283  
                       10 A3     D5  01C7   284 90$:	TSTL	IRP$L_AST(R3)		;AST ADDRESS SPECIFIED?
                          12     13  01CA   285 	BEQL	100$			;IF EQL NO
            50       0000'8F     3C  01CC   286 	MOVZWL	#SS$_EXQUOTA,R0		;ASSUME AST QUOTA EXCEEDED
                       3C A4     B5  01D1   287 	TSTW	PCB$W_ASTCNT(R4)	;AST QUEUE ENTRY QUOTA EXCEEDED?
                          AE     15  01D4   288 	BLEQ	70$			;IF LEQ YES
                       3C A4     B7  01D6   289 	DECW	PCB$W_ASTCNT(R4)	;UPDATE AVAILABLE AST QUEUE ENTRIES
         0B A3         40 8F     88  01D9   290 	BISB	#ACB$M_QUOTA,IRP$B_RMOD(R3) ;SET AST QUOTA UPDATE FLAG
                                     01DE   291  
                                     01DE   292 ;
                                     01DE   293 ; SCAN FUNCTION DECISION TABLE CALLING EACH SELECTED ACTION ROUTINE WITH:
                                     01DE   294 ;
                                     01DE   295 ;	R0 = SCRATCH.
                                     01DE   296 ;	R1 = SCRATCH.
                                     01DE   297 ;	R2 = SCRATCH.
                                     01DE   298 ;	R3 = ADDRESS OF I/O REQUEST PACKET.
                                     01DE   299 ;	R4 = CURRENT PROCESS PCB ADDRESS.
                                     01DE   300 ;	R5 = ASSIGNED DEVICE UCB ADDRESS.
SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page   7
01              QUEUE I/O REQUEST                                                                                                (1)

                                     01DE   301 ;	R6 = ADDRESS OF CCB.
                                     01DE   302 ;	R7 = I/O FUNCTION CODE BIT NUMBER.
                                     01DE   303 ;	R8 = FUNCTION DECISION TABLE DISPATCH ADDRESS.
                                     01DE   304 ;	R9 = SCRATCH.
                                     01DE   305 ;	R10 = SCRATCH.
                                     01DE   306 ;	R11 = SCRATCH.
                                     01DE   307 ;	AP = ADDRESS OF FIRST FUNCTION DEPENDENT PARAMETER.
                                     01DE   308 ;
                                     01DE   309  
            58            10     C0  01DE   310 100$:	ADDL	#FDTACT,R8		;POINT TO ACTION ROUTINE MASKS
            5C            1C     C0  01E1   311 	ADDL	#P1,AP			;POINT TO FIRST FUNCTION DEPENDENT PARAMETER
            68            57     E1  01E4   312 110$:	BBC	R7,(R8),120$		;IF CLR, THEN ACTION NOT SELECTED
                          04         01E7       
                       08 B848   16  01E8   313 	JSB	@8(R8)[R8]		;CALL ACTION ROUTINE
            58            0C     C0  01EC   314 120$:	ADDL	#12,R8			;ADJUST TO NEXT ACTION ROUTINE TRIPLET
                          F3     11  01EF   315 	BRB	110$			;
SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page   8
01              COMPLETE I/O OPERATION                                                                                           (1)

                                     01F1   317 	.SBTTL	COMPLETE I/O OPERATION
                                     01F1   318 ;+
                                     01F1   319 ; EXE$ABORTIO - ABORT I/O OPERATION
                                     01F1   320 ;
                                     01F1   321 ; THIS ROUTINE IS JUMPED TO FROM A FUNCTION DECISION TABLE ACTION ROUTINE
                                     01F1   322 ; TO FINISH AN I/O OPERATION WITHOUT RETURNING THE FINAL I/O STATUS.
                                     01F1   323 ;
                                     01F1   324 ; EXE$FINISHIO - FINISH I/O OPERATION
                                     01F1   325 ;
                                     01F1   326 ; THIS ROUTINE IS JUMPED TO FROM A FUNCTION DECISION TABLE ACTION ROUTINE
                                     01F1   327 ; TO FINISH AN I/O OPERATION AND RETURN THE FINAL I/O STATUS.
                                     01F1   328 ;
                                     01F1   329 ; EXE$FINISHIOC - FINISH I/O OPERATION WITH SECOND I/O STATUS LONGWORD CLEARED
                                     01F1   330 ;
                                     01F1   331 ; THIS ROUTINE IS JUMPED TO FROM A FUNCTION DESCISION TABLE ACTION ROUTINE
                                     01F1   332 ; TO FINISH AN I/O OPERATION AND RETURN THE FINAL I/O STATUS WITH THE
                                     01F1   333 ; SECOND I/O STATUS LONGWORD CLEARED.
                                     01F1   334 ;
                                     01F1   335 ; INPUTS:
                                     01F1   336 ;
                                     01F1   337 ;	R0 = FIRST LONGWORD OF FINAL I/O STATUS.
                                     01F1   338 ;	R1 = SECOND LONGWORD OF FINAL I/O STATUS.
                                     01F1   339 ;	R3 = ADDRESS OF I/O REQUEST PACKET.
                                     01F1   340 ;	R4 = CURRENT PROCESS PCB ADDRESS.
                                     01F1   341 ;	R5 = UCB ADDRESS OF DEVICE UNIT.
                                     01F1   342 ;
                                     01F1   343 ; OUTPUTS:
                                     01F1   344 ;
                                     01F1   345 ;	THE FINAL I/O STATUS IS STORED IN THE I/O PACKET AND THE PACKET IS
                                     01F1   346 ;	INSERTED IN THE I/O POST PROCESSING QUEUE. A SOFTWARE INTERRUPT
                                     01F1   347 ;	IS GENERATED TO INITIATE I/O POST PROCESSING AND THE FIRST WORD
                                     01F1   348 ;	OF THE FINAL I/O STATUS IS RETURNED AS THE SERVICE STATUS.
                                     01F1   349 ;-
                                     01F1   350  
                                     01F1   351 	.ENABL	LSB
                                     01F1   352 EXE$ABORTIO::				;ABORT I/O OPERATION
                       24 A3     D4  01F1   353 	CLRL	IRP$L_IOSB(R3)		;CLEAR ADDRESS OF I/O STATUS BLOCK
         0B A3            06     E5  01F4   354 	BBCC	#ACB$V_QUOTA,IRP$B_RMOD(R3),10$ ;IF CLR, NO AST SPECIFIED
                          0A         01F8       
                       3C A4     B6  01F9   355 	INCW	PCB$W_ASTCNT(R4)	;UPDATE AVAILABLE AST QUEUE ENTRIES
                          05     11  01FC   356 	BRB	10$			;
                                     01FE   357 EXE$FINISHIOC::				;FINISH I/O OPERATION CLEAR SECOND LONGWORD
                          51     D4  01FE   358 	CLRL	R1			;CLEAR SECOND I/O STATUS LONGWORD
                                     0200   359 EXE$FINISHIO::				;FINISH I/O OPERATION
                       60 A5     D6  0200   360 	INCL	UCB$L_OPCNT(R5)		;INCREMENT OPERATIONS COMPLETED
         34 A3            50     7D  0203   361 10$:	MOVQ	R0,IRP$L_MEDIA(R3)	;STORE FINAL I/O STATUS
       0000'DF            63     0E  0207   362 	INSQUE	(R3),@W^IOC$GL_PSBL	;INSERT I/O PACKET IN POST PROCESS QUEUE
                          03     12  020C   363 	BNEQ	20$			;IF NEQ NOT FIRST ENTRY IN QUEUE
                                     020E   364 	SOFTINT	#IPL$_IOPOST		;INITIATE SOFTWARE INTERRUPT
            50            50     3C  0211   365 20$:	MOVZWL	R0,R0			;SET SERVICE STATUS
                          23     11  0214   366 	BRB	QIORETURN		;
                                     0216   367 	.DSABL	LSB
SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page   9
01              QUEUE I/O PACKET TO DRIVER                                                                                       (1)

                                     0216   369 	.SBTTL	QUEUE I/O PACKET TO DRIVER
                                     0216   370 ;+
                                     0216   371 ; EXE$QIODRVPKT - QUEUE I/O PACKET TO DRIVER
                                     0216   372 ;
                                     0216   373 ; THIS ROUTINE IS JUMPED TO FROM A FUNCTION DECISION TABLE ACTION ROUTINE
                                     0216   374 ; TO QUEUE AN I/O PACKET TO THE APPROPRIATE DRIVER.
                                     0216   375 ;
                                     0216   376 ; INPUTS:
                                     0216   377 ;
                                     0216   378 ;	R3 = ADDRESS OF I/O REQUEST PACKET.
                                     0216   379 ;	R4 = CURRENT PROCESS PCB ADDRESS.
                                     0216   380 ;	R5 = UCB ADDRESS OF DEVICE UNIT.
                                     0216   381 ;
                                     0216   382 ; OUTPUTS:
                                     0216   383 ;
                                     0216   384 ;	THE I/O PACKET IS QUEUED BY PRIORITY IN THE APPROPRIATE DEVICE
                                     0216   385 ;	QUEUE AND A NORMAL COMPLETION STATUS IS RETURNED.
                                     0216   386 ;-
                                     0216   387  
                                     0216   388 EXE$QIODRVPKT::				;QUEUE I/O PACKET
                          25     10  0216   389 	BSBB	EXE$INSIOQ		;INSERT I/O PACKET IN DEVICE QUEUE
                          1A     11  0218   390 	BRB	EXE$QIORETURN		;
SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page  10
01              QUEUE I/O PACKET TO ACP                                                                                          (1)

                                     021A   392 	.SBTTL	QUEUE I/O PACKET TO ACP
                                     021A   393 ;+
                                     021A   394 ; EXE$QIOACPPKT - QUEUE I/O PACKET TO ACP
                                     021A   395 ;
                                     021A   396 ; THIS ROUTINE IS JUMPED TO FROM A FUNCTION DECISION TABLE ACTION ROUTINE
                                     021A   397 ; TO QUEUE AN I/O PACKET TO THE APPROPRIATE ACP.
                                     021A   398 ;
                                     021A   399 ; INPUTS:
                                     021A   400 ;
                                     021A   401 ;	R3 = ADDRESS OF I/O REQUEST PACKET.
                                     021A   402 ;	R4 = CURRENT PROCESS PCB ADDRESS.
                                     021A   403 ;	R5 = UCB ADDRESS OF DEVICE UNIT.
                                     021A   404 ;
                                     021A   405 ;	CURRENT IPL MUST BE AT SYNCH OR HIGHER LEVEL.
                                     021A   406 ;
                                     021A   407 ; OUTPUTS:
                                     021A   408 ;
                                     021A   409 ;	THE I/O PACKET IS QUEUED AT THE END OF THE APPROPRIATE ACP QUEUE
                                     021A   410 ;	AND A NORMAL COMPLETION STATUS IS RETURNED.
                                     021A   411 ;-
                                     021A   412  
                                     021A   413 EXE$QIOACPPKT::				;QUEUE I/O PACKET TO ACP
            52         30 A5     D0  021A   414 	MOVL	UCB$L_VCB(R5),R2	;GET ADDRESS OF VCB
            52         10 A2     D0  021E   415 	MOVL	VCB$L_AQB(R2),R2	;GET ADDRESS OF ACP AQB
                          34     10  0222   416 	BSBB	EXE$INSERTIRP		;INSERT I/O PACKET IN ACP QUEUE
                          0E     12  0224   417 	BNEQ	EXE$QIORETURN		;IF NEQ NOT FIRST ENTRY IN QUEUE
            51         0C A2     D0  0226   418 	MOVL	AQB$L_ACPPID(R2),R1	;GET ACP PROCESS ID
                          FDD3'  30  022A   419 	BSBW	SCH$WAKE		;WAKE UP ACP PROCESS
            04            50     E8  022D   420 	BLBS	R0,EXE$QIORETURN	;IF LBS ACP STILL PRESENT
                                     0230   421 	BUG_CHECK NONEXSTACP		;NONEXISTENT ACP PROCESS
                                     0234   422 EXE$QIORETURN::				;QUEUE I/O REQUEST COMPLETION STATUS RETURN
            50       0000'8F     3C  0234   423 	MOVZWL	#SS$_NORMAL,R0		;SET NORMAL COMPLETION STATUS
                                     0239   424 QIORETURN:				;RETURN SPECIFIED STATUS
                                     0239   425 	SETIPL	#0			;ALLOW ALL INTERRUPTS
                                 04  023C   426 	RET				;
SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page  11
01              INSERT I/O PACKET IN UNIT QUEUE                                                                                  (1)

                                     023D   428 	.SBTTL	INSERT I/O PACKET IN UNIT QUEUE
                                     023D   429 ;+
                                     023D   430 ; EXE$INSIOQ - INSERT I/O PACKET IN UNIT QUEUE
                                     023D   431 ;
                                     023D   432 ; THIS ROUTINE IS CALLED TO INSERT AN I/O PACKET IN A UNIT QUEUE AND CALL
                                     023D   433 ; THE APPROPRIATE I/O DRIVER IF THE UNIT IS NOT BUSY.
                                     023D   434 ;
                                     023D   435 ; INPUTS:
                                     023D   436 ;
                                     023D   437 ;	R3 = ADDRESS OF I/O REQUEST PACKET.
                                     023D   438 ;	R5 = UCB ADDRESS OF DEVICE UNIT.
                                     023D   439 ;-
                                     023D   440  
                                     023D   441 EXE$INSIOQ::				;INSERT IN I/O QUEUE
                                     023D   442 	DSBINT	UCB$B_FIPL(R5)		;RAISE IPL TO FORK LEVEL
         58 A5            08     E2  0244   443 	BBSS	#UCB$V_BSY,UCB$W_STS(R5),10$ ;IF SET, THEN DEVICE IS BUSY
                          05         0248       
                          FDB4'  30  0249   444 	BSBW	IOC$INITIATE		;INITIATE I/O FUNCTION
                          06     11  024C   445 	BRB	20$			;
            52         40 A5     DE  024E   446 10$:	MOVAL	UCB$L_IOQFL(R5),R2	;GET ADDRESS OF I/O QUEUE LISTHEAD
                          04     10  0252   447 	BSBB	EXE$INSERTIRP		;INSERT I/O PACKET IN DEVICE QUEUE
                                     0254   448 20$:	ENBINT				;ENABLE INTERRUPTS
                                 05  0257   449 	RSB				;
SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page  12
01              INSERT I/O PACKET IN QUEUE BY PRIORITY                                                                           (1)

                                     0258   451 	.SBTTL	INSERT I/O PACKET IN QUEUE BY PRIORITY
                                     0258   452 ;+
                                     0258   453 ; EXE$INSERTIRP - INSERT I/O PACKET IN QUEUE BY PRIORITY
                                     0258   454 ;
                                     0258   455 ; THIS ROUTINE IS CALLED TO INSERT AN I/O PACKET IN A SPECIFIED QUEUE BY
                                     0258   456 ; PRIORITY.
                                     0258   457 ;
                                     0258   458 ; INPUTS:
                                     0258   459 ;
                                     0258   460 ;	R2 = ADDRESS OF QUEUE LISTHEAD.
                                     0258   461 ;	R3 = ADDRESS OF I/O PACKET.
                                     0258   462 ;
                                     0258   463 ;	CURRENT IPL MUST BE THE FORK LEVEL OF THE RESPECTIVE DRIVER PROCESS
                                     0258   464 ;	OR HIGHER.
                                     0258   465 ;
                                     0258   466 ; OUTPUTS:
                                     0258   467 ;
                                     0258   468 ;	THE I/O PACKET IS INSERTED IN THE SPECIFIED QUEUE BY PRIORITY AND
                                     0258   469 ;	THE 'Z' CONDITION CODE IS RETURNED TO THE CALLER.
                                     0258   470 ;
                                     0258   471 ;		'Z' = 1 = ENTRY WAS FIRST ENTRY IN THE QUEUE.
                                     0258   472 ;
                                     0258   473 ;		'Z' = 0 = ENTRIES WERE ALREADY IN THE QUEUE.
                                     0258   474 ;
                                     0258   475 ;	R2 AND R3 ARE PRESERVED ACROSS THE CALL.
                                     0258   476 ;-
                                     0258   477  
                                     0258   478 EXE$INSERTIRP::				;INSERT I/O PACKET IN QUEUE BY PRIORITY
            51            52     D0  0258   479 	MOVL	R2,R1			;COPY LISTHEAD ADDRESS
            51         04 A1     D0  025B   480 10$:	MOVL	IRP$L_IOQBL(R1),R1	;GET ADDRESS OF NEXT ENTRY
            51            52     D1  025F   481 	CMPL	R2,R1			;END OF QUEUE?
                          07     13  0262   482 	BEQL	20$			;IF EQL YES
         23 A1         23 A3     91  0264   483 	CMPB	IRP$B_PRI(R3),IRP$B_PRI(R1) ;NEW ENTRY PRIORITY GREATER?
                          F0     1F  0269   484 	BLSSU	10$			;IF LSS YES
            61            63     0E  026B   485 20$:	INSQUE	IRP$L_IOQFL(R3),IRP$L_IOQFL(R1) ;INSERT PACKET IN I/O QUEUE
                                 05  026E   486 	RSB				;
                                     026F   487  
                                     026F   488 	.END
SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page  13
SYMBOL TABLE                                                                                                                     (1)

ACB$B_RMOD       0000000B            DDB$B_ACPCLASS   00000013            DYN$C_TYPAHD   = 00000014            
ACB$B_TYPE       0000000A            DDB$B_TYPE       0000000A            DYN$C_UCB      = 00000010            
ACB$L_AST        00000010            DDB$C_LENGTH     00000014            DYN$C_VCB      = 00000011            
ACB$L_ASTPRM     00000014            DDB$K_LENGTH     00000014            DYN$C_WCB      = 00000012            
ACB$L_ASTQBL     00000004            DDB$L_ACPD       00000010            EFN            = 00000004            
ACB$L_ASTQFL     00000000            DDB$L_DDT        0000000C            ERROR            0000008B R     01   
ACB$L_KAST       00000018            DDB$L_LINK       00000000            EXE$ABORTIO      000001F1 RG    01   
ACB$L_PID        0000000C            DDB$L_UCB        00000004            EXE$ALLOCBUF     ********   X   01   
ACB$M_QUOTA    = 00000040            DDB$T_NAME       00000014            EXE$ALLOCIRP     ********   X   01   
ACB$S_MODE     = 00000002            DDB$W_SIZE       00000008            EXE$CHKLOGACCES  ********   X   01   
ACB$V_KAST     = 00000007            DDT$L_CANCEL     0000000C            EXE$CHKPHYACCES  ********   X   01   
ACB$V_MODE     = 00000000            DDT$L_FDT        00000008            EXE$FINISHIO     00000200 RG    01   
ACB$V_QUOTA    = 00000006            DDT$L_INIT       00000018            EXE$FINISHIOC    000001FE RG    01   
ACB$W_SIZE       00000008            DDT$L_REGDUMP    00000010            EXE$INSERTIRP    00000258 RG    01   
ALLOC            000000B5 R     01   DDT$L_START      00000000            EXE$INSIOQ       0000023D RG    01   
AQB$B_ACPTYPE    00000015            DDT$L_UNSOLINT   00000004            EXE$QIO          00000000 RG    01   
AQB$B_CLASS      00000016            DDT$W_DIAGBUF    00000014            EXE$QIOACPPKT    0000021A RG    01   
AQB$B_MNTCNT     0000000B            DDT$W_ERRORBUF   00000016            EXE$QIODRVPKT    00000216 RG    01   
AQB$B_STATUS     00000014            DEV$V_FOD        ********   X   01   EXE$QIORETURN    00000234 RG    01   
AQB$B_TYPE       0000000A            DEV$V_FOR        ********   X   01   EXE$SNGLEQUOTA   ********   X   01   
AQB$C_LENGTH     00000018            DEV$V_MNT        ********   X   01   FDTACT         = 00000010            
AQB$K_F11V1    = 00000001            DEV$V_SHR        ********   X   01   FUNC           = 0000000C            
AQB$K_F11V2    = 00000002            DEV$V_SPL        ********   X   01   GBL...         = 00000000            
AQB$K_LENGTH     00000018            DYN$C_ACB      = 00000002            GTPKT            000000BD R     01   
AQB$K_MTA      = 00000003            DYN$C_ADP      = 00000001            IO$M_FCODE       ********   X   01   
AQB$K_NET      = 00000004            DYN$C_AQB      = 00000003            IO$_LOGICAL      ********   X   01   
AQB$K_UNDEFINED= 00000000            DYN$C_BRDCST   = 0000001A            IO$_PHYSICAL     ********   X   01   
AQB$L_ACPPID     0000000C            DYN$C_BUFIO    = 00000013            IOC$GL_IRPFL     ********   X   01   
AQB$L_ACPQBL     00000004            DYN$C_CEB      = 00000004            IOC$GL_PSBL      ********   X   01   
AQB$L_ACPQFL     00000000            DYN$C_CIR      = 0000001E            IOC$INITIATE     ********   X   01   
AQB$L_LINK       00000010            DYN$C_CRB      = 00000005            IOC$VERIFYCHAN   ********   X   01   
AQB$M_CREATING = 00000008            DYN$C_CXB      = 0000001B            IOSB           = 00000010            
AQB$M_DEFCLASS = 00000002            DYN$C_DDB      = 00000006            IOTYPE         = 00000008            
AQB$M_DEFSYS   = 00000004            DYN$C_FCB      = 00000007            IPL$_ASTDEL    = 00000002            
AQB$M_UNIQUE   = 00000001            DYN$C_FRK      = 00000008            IPL$_HWCLK     = 00000018            
AQB$V_CREATING = 00000003            DYN$C_GSD      = 00000015            IPL$_IOPOST    = 00000004            
AQB$V_DEFCLASS = 00000001            DYN$C_IDB      = 00000009            IPL$_MAILBOX   = 0000000B            
AQB$V_DEFSYS   = 00000002            DYN$C_IRP      = 0000000A            IPL$_POWER     = 0000001F            
AQB$V_UNIQUE   = 00000000            DYN$C_JPB      = 0000001F            IPL$_QUEUEAST  = 00000006            
AQB$W_SIZE       00000008            DYN$C_KFH      = 00000026            IPL$_SCHED     = 00000003            
ASTADR         = 00000014            DYN$C_KFI      = 00000018            IPL$_SYNCH     = 00000007            
ASTPRM         = 00000018            DYN$C_LOG      = 0000000B            IPL$_TIMER     = 00000007            
BIT...         = 00000009            DYN$C_MTL      = 00000019            IRP$B_CARCON     00000038            
BUG$_NONEXSTACP  ********   X   01   DYN$C_MVL      = 00000016            IRP$B_EFN        00000022            
CA$_MEASURE    = 00000002            DYN$C_NDB      = 0000001C            IRP$B_PRI        00000023            
CA$_MEASURE_IOT= 00000004            DYN$C_NET      = 00000017            IRP$B_RMOD       0000000B            
CA$_SIMULATOR  = 00000001            DYN$C_PBH      = 00000020            IRP$B_TYPE       0000000A            
CCB$B_AMOD       00000009            DYN$C_PCB      = 0000000C            IRP$C_LENGTH     0000004C            
CCB$B_STS        00000008            DYN$C_PDB      = 00000021            IRP$K_LENGTH     0000004C            
CCB$C_LENGTH     00000010            DYN$C_PFL      = 00000023            IRP$L_AST        00000010            
CCB$K_LENGTH     00000010            DYN$C_PIB      = 00000022            IRP$L_ASTPRM     00000014            
CCB$L_DIRP       0000000C            DYN$C_PQB      = 0000000D            IRP$L_DIAGBUF    00000044            
CCB$L_UCB        00000000            DYN$C_PTR      = 00000025            IRP$L_IOQBL      00000004            
CCB$L_WIND       00000004            DYN$C_RVT      = 0000000E            IRP$L_IOQFL      00000000            
CCB$W_IOC        0000000A            DYN$C_SFT      = 00000024            IRP$L_IOSB       00000024            
CHAN           = 00000008            DYN$C_SSB      = 0000001D            IRP$L_IOST1      00000034            
CTL$GL_PHD       ********   X   01   DYN$C_TQE      = 0000000F            IRP$L_IOST2      00000038            
SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                     (1)

IRP$L_MEDIA      00000034            PCB$K_LENGTH     0000007C            PCB$W_STATE      00000030            
IRP$L_PID        0000000C            PCB$L_ASTQBL     00000014            PCB$W_TMBU       00000036            
IRP$L_SEGVBN     00000040            PCB$L_ASTQFL     00000010            PCB$W_TQCNT      0000004A            
IRP$L_SEQNUM     00000048            PCB$L_EFC2P      00000058            PHD$B_ASTLVL     000000CF            
IRP$L_SVAPTE     0000002C            PCB$L_EFC3P      0000005C            PHD$B_DFPFC      00000038            
IRP$L_TT_TERM    00000038            PCB$L_EFCS       00000050            PHD$B_PAGFIL     0000001F            
IRP$L_UCB        0000001C            PCB$L_EFCU       00000054            PHD$C_LENGTH     000000D8            
IRP$L_WIND       00000018            PCB$L_EFWM       0000004C            PHD$K_LENGTH     000000D8            
IRP$M_BUFIO    = 00000001            PCB$L_OWNER      0000001C            PHD$L_BIOCNT     00000054            
IRP$M_CHAINED  = 00000020            PCB$L_PHD        00000064            PHD$L_CPULIM     00000058            
IRP$M_COMPLX   = 00000008            PCB$L_PHYPCB     00000018            PHD$L_CPUTIM     0000003C            
IRP$M_DIAGBUF  = 00000080            PCB$L_PID        00000060            PHD$L_DIOCNT     00000050            
IRP$M_FUNC     = 00000002            PCB$L_PQB        0000004C            PHD$L_ESP        0000007C            
IRP$M_PAGIO    = 00000004            PCB$L_SQBL       00000004            PHD$L_FREP0VA    00000028            
IRP$M_PHYSIO   = 00000100            PCB$L_SQFL       00000000            PHD$L_FREP1VA    00000030            
IRP$M_PRIVIO   = 00000200            PCB$L_STS        00000028            PHD$L_FREPTECNT  0000002C            
IRP$M_SWAPIO   = 00000040            PCB$L_UIC        00000020            PHD$L_KSP        00000078            
IRP$M_VIRTUAL  = 00000010            PCB$L_WSSWP      00000024            PHD$L_P0BR       000000C8            
IRP$S_FCODE    = 00000006            PCB$L_WTIME      0000002C            PHD$L_P0LRASTL   000000CC            
IRP$S_FMOD     = 0000000A            PCB$T_LNAME      0000006C            PHD$L_P1BR       000000D0            
IRP$S_MODE     = 00000002            PCB$V_ASTPEN   = 00000011            PHD$L_P1LR       000000D4            
IRP$V_BUFIO    = 00000000            PCB$V_BATCH    = 0000000E            PHD$L_PAGEFLTS   0000004C            
IRP$V_CHAINED  = 00000005            PCB$V_DELPEN   = 00000001            PHD$L_PAGFIL     0000001C            
IRP$V_COMPLX   = 00000003            PCB$V_FORCPEN  = 00000002            PHD$L_PC         000000C0            
IRP$V_DIAGBUF  = 00000007            PCB$V_HIBER    = 00000013            PHD$L_PCB        00000078            
IRP$V_FCODE    = 00000000            PCB$V_INQUAN   = 00000003            PHD$L_PGFLCNT    00000034            
IRP$V_FMOD     = 00000006            PCB$V_LOGIN    = 00000014            PHD$L_PGFLQUOTA  0000005C            
IRP$V_FUNC     = 00000001            PCB$V_NOACNT   = 0000000F            PHD$L_PSL        000000C4            
IRP$V_MODE     = 00000000            PCB$V_PHDRES   = 00000012            PHD$L_PSTBASOFF  00000020            
IRP$V_PAGIO    = 00000002            PCB$V_PSWAPM   = 00000004            PHD$L_PTWSLELCK  00000064            
IRP$V_PHYSIO   = 00000008            PCB$V_RES      = 00000000            PHD$L_PTWSLEVAL  00000068            
IRP$V_PRIVIO   = 00000009            PCB$V_RESPEN   = 00000005            PHD$L_R0         00000088            
IRP$V_SWAPIO   = 00000006            PCB$V_SSFEXC   = 00000006            PHD$L_R1         0000008C            
IRP$V_VIRTUAL  = 00000004            PCB$V_SSFEXCE  = 00000007            PHD$L_R10        000000B0            
IRP$W_ABCNT      0000003C            PCB$V_SSFEXCS  = 00000008            PHD$L_R11        000000B4            
IRP$W_BCNT       00000032            PCB$V_SSFEXCU  = 00000009            PHD$L_R12        000000B8            
IRP$W_BOFF       00000030            PCB$V_SSRWAIT  = 0000000A            PHD$L_R13        000000BC            
IRP$W_CHAN       00000028            PCB$V_SUSPEN   = 0000000B            PHD$L_R2         00000090            
IRP$W_FUNC       00000020            PCB$V_SWPVBN   = 00000010            PHD$L_R3         00000094            
IRP$W_OBCNT      0000003E            PCB$V_WAKEPEN  = 0000000C            PHD$L_R4         00000098            
IRP$W_SIZE       00000008            PCB$V_WALL     = 0000000D            PHD$L_R5         0000009C            
IRP$W_STS        0000002A            PCB$W_APTCNT     00000034            PHD$L_R6         000000A0            
IRP$W_TT_PRMPT   0000003C            PCB$W_ASTCNT     0000003C            PHD$L_R7         000000A4            
LEGAL          = 00000000            PCB$W_BIOCNT     0000003E            PHD$L_R8         000000A8            
P1             = 0000001C            PCB$W_BIOLM      00000040            PHD$L_R9         000000AC            
P2             = 00000020            PCB$W_BYTCNT     00000042            PHD$L_SSP        00000080            
P3             = 00000024            PCB$W_BYTLM      00000068            PHD$L_USP        00000084            
P4             = 00000028            PCB$W_DIOCNT     00000044            PHD$L_WSL        000000D8            
P5             = 0000002C            PCB$W_DIOLM      00000046            PHD$M_DALCSTX  = 00000002            
P6             = 00000030            PCB$W_FILCNT     00000048            PHD$M_PFMFLG   = 00000001            
PCB$B_ASTACT     0000000C            PCB$W_GPGCNT     00000038            PHD$Q_PRIVMSK    00000000            
PCB$B_ASTEN      0000000D            PCB$W_GRP        00000022            PHD$S_ASTLVL   = 00000008            
PCB$B_PRI        0000000B            PCB$W_MEM        00000020            PHD$S_P0LR     = 00000018            
PCB$B_PRIB       00000033            PCB$W_MTXCNT     0000000E            PHD$V_ASTLVL   = 00000018            
PCB$B_TYPE       0000000A            PCB$W_PPGCNT     0000003A            PHD$V_DALCSTX  = 00000001            
PCB$B_WEFC       00000032            PCB$W_PRCCNT     0000006A            PHD$V_P0LR     = 00000000            
PCB$C_LENGTH     0000007C            PCB$W_SIZE       00000008            PHD$V_PFMFLG   = 00000000            
SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                     (1)

PHD$W_ASTLM      00000044            PR$_SISR       = 00000015            PSL$M_TBIT     = 00000010            
PHD$W_BAK        00000048            PR$_SLR        = 0000000D            PSL$M_TP       = 40000000            
PHD$W_DFWSCNT    0000001A            PR$_SSP        = 00000002            PSL$S_CURMOD   = 00000002            
PHD$W_EXTDYNWS   00000076            PR$_TBIA       = 00000039            PSL$S_IPL      = 00000005            
PHD$W_FILLM      00000060            PR$_TBIS       = 0000003A            PSL$S_PRVMOD   = 00000002            
PHD$W_FLAGS      0000003A            PR$_TODR       = 0000001B            PSL$V_CM       = 0000001F            
PHD$W_PFMFLG     0000003A            PR$_TXCS       = 00000022            PSL$V_CURMOD   = 00000018            
PHD$W_PHVINDEX   00000046            PR$_TXDB       = 00000023            PSL$V_DV       = 00000007            
PHD$W_PRCLM      00000042            PR$_USP        = 00000003            PSL$V_FPD      = 0000001B            
PHD$W_PST        00000020            PR$_WCSA       = 0000002C            PSL$V_FU       = 00000006            
PHD$W_PSTFREE    00000026            PR$_WCSD       = 0000002D            PSL$V_IPL      = 00000010            
PHD$W_PSTLAST    00000024            PRI$_IOCOM     = 00000001            PSL$V_IS       = 0000001A            
PHD$W_PTCNTACT   00000070            PRI$_NULL      = 00000000            PSL$V_IV       = 00000005            
PHD$W_PTCNTLCK   0000006C            PRI$_RESAVL    = 00000002            PSL$V_PRVMOD   = 00000016            
PHD$W_PTCNTMAX   00000072            PRI$_TICOM     = 00000004            PSL$V_TBIT     = 00000004            
PHD$W_PTCNTVAL   0000006E            PRI$_TIMER     = 00000002            PSL$V_TP       = 0000001E            
PHD$W_QUANT      00000040            PRI$_TOCOM     = 00000003            QIORETURN        00000239 R     01   
PHD$W_TQLM       00000062            PRV$V_ALLSPOOL = 00000004            RSN$_ASTWAIT   = 00000001            
PHD$W_WSAUTH     0000000A            PRV$V_BUGCHK   = 00000017            RSN$_BRKTHRU   = 00000006            
PHD$W_WSDYN      0000000E            PRV$V_CMEXEC   = 00000001            RSN$_MAILBOX   = 00000002            
PHD$W_WSFLUID    00000074            PRV$V_CMKRNL   = 00000000            RSN$_NPDYNMEM  = 00000003            
PHD$W_WSLAST     00000012            PRV$V_DETACH   = 00000005            RSN$_PGDYNMEM  = 00000005            
PHD$W_WSLIST     00000008            PRV$V_DEVCHAR  = 00000011            RSN$_PGFILE    = 00000004            
PHD$W_WSLOCK     0000000C            PRV$V_DIAGNOSE = 00000006            SCH$CLREF        ********   X   01   
PHD$W_WSLX       0000004A            PRV$V_EXQUOTA  = 00000013            SCH$POSTEF       ********   X   01   
PHD$W_WSNEXT     00000010            PRV$V_GROUP    = 00000008            SCH$RWAIT        ********   X   01   
PHD$W_WSQUOTA    00000018            PRV$V_GRPNAM   = 00000003            SCH$WAKE         ********   X   01   
PMS$START_RQ     ********   X   01   PRV$V_LOG_IO   = 00000007            SEC$B_AMOD       00000015            
PR$_ACCR       = 00000029            PRV$V_NETMBX   = 00000014            SEC$B_PFC        0000000B            
PR$_ACCS       = 00000028            PRV$V_NOACNT   = 00000009            SEC$C_LENGTH     00000020            
PR$_ASTLVL     = 00000013            PRV$V_OPER     = 00000012            SEC$K_LENGTH     00000020            
PR$_ESP        = 00000001            PRV$V_PHY_IO   = 00000016            SEC$L_CCB        00000000            
PR$_ICCS       = 00000018            PRV$V_PRMCEB   = 0000000A            SEC$L_GSD        00000000            
PR$_ICR        = 0000001A            PRV$V_PRMGBL   = 00000018            SEC$L_PAGCNT     0000001C            
PR$_IPL        = 00000012            PRV$V_PRMMBX   = 0000000B            SEC$L_REFCNT     00000018            
PR$_ISP        = 00000004            PRV$V_PSWAPM   = 0000000C            SEC$L_VBN        00000010            
PR$_KSP        = 00000000            PRV$V_SETPRI   = 0000000D            SEC$L_VPXPFC     00000008            
PR$_MAPEN      = 00000038            PRV$V_SETPRV   = 0000000E            SEC$L_WINDOW     0000000C            
PR$_NICR       = 00000019            PRV$V_SYSGBL   = 00000019            SEC$M_AMOD     = 00000300            
PR$_P0BR       = 00000008            PRV$V_SYSNAM   = 00000002            SEC$M_CRF      = 00000002            
PR$_P0LR       = 00000009            PRV$V_TMPMBX   = 0000000F            SEC$M_DZRO     = 00000004            
PR$_P1BR       = 0000000A            PRV$V_VOLPRO   = 00000015            SEC$M_GBL      = 00000001            
PR$_P1LR       = 0000000B            PRV$V_WORLD    = 00000010            SEC$M_PERM     = 00004000            
PR$_PCBB       = 00000010            PSL$C_EXEC     = 00000001            SEC$M_SYSGBL   = 00008000            
PR$_RXCS       = 00000020            PSL$C_KERNEL   = 00000000            SEC$M_WRT      = 00000008            
PR$_RXDB       = 00000021            PSL$C_SUPER    = 00000002            SEC$S_AMOD     = 00000002            
PR$_SBIER      = 00000034            PSL$C_USER     = 00000003            SEC$S_CRF      = 00000001            
PR$_SBIFS      = 00000030            PSL$M_CM       = 80000000            SEC$S_DZRO     = 00000001            
PR$_SBIMT      = 00000033            PSL$M_CURMOD   = 03000000            SEC$S_GBL      = 00000001            
PR$_SBIQC      = 00000036            PSL$M_DV       = 00000080            SEC$S_PERM     = 00000001            
PR$_SBIS       = 00000031            PSL$M_FPD      = 08000000            SEC$S_PFC      = 00000008            
PR$_SBISC      = 00000032            PSL$M_FU       = 00000040            SEC$S_SYSGBL   = 00000001            
PR$_SBITA      = 00000035            PSL$M_IPL      = 001F0000            SEC$S_VPX      = 00000016            
PR$_SBR        = 0000000C            PSL$M_IS       = 04000000            SEC$S_WRT      = 00000001            
PR$_SCBB       = 00000011            PSL$M_IV       = 00000020            SEC$V_AMOD     = 00000008            
PR$_SID        = 0000003E            PSL$M_PRVMOD   = 00C00000            SEC$V_CRF      = 00000001            
PR$_SIRR       = 00000014            PSL$M_SAFBITS  = 000037FF            SEC$V_DZRO     = 00000002            
SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                     (1)

SEC$V_GBL      = 00000000            UCB$L_EMB        00000078            UCB$V_DEADMO   = 0000000A            
SEC$V_PERM     = 0000000E            UCB$L_FIRST      00000014            UCB$V_DELMBX   = 00000001            
SEC$V_PFC      = 00000018            UCB$L_FPC        0000000C            UCB$V_DIAGBUF  = 00000001            
SEC$V_SYSGBL   = 0000000F            UCB$L_FQBL       00000004            UCB$V_DX_WRITE = 00000003            
SEC$V_VPX      = 00000000            UCB$L_FQFL       00000000            UCB$V_ECC      = 00000000            
SEC$V_WRT      = 00000003            UCB$L_FR3        00000010            UCB$V_ERLOGIP  = 00000002            
SEC$W_FLAGS      00000014            UCB$L_FR4        00000014            UCB$V_INT      = 00000001            
SEC$W_SECXBL     00000006            UCB$L_IOQBL      00000044            UCB$V_INTTYPE  = 00000007            
SEC$W_SECXFL     00000004            UCB$L_IOQFL      00000040            UCB$V_JOB      = 00000000            
SS$_ACCVIO       ********   X   01   UCB$L_IRP        0000004C            UCB$V_LNKPRI   = 00000006            
SS$_DEVOFFLINE   ********   X   01   UCB$L_LINK       0000002C            UCB$V_LTYPE    = 00000000            
SS$_EXQUOTA      ********   X   01   UCB$L_LOGADR     00000064            UCB$V_MOUNTING = 00000009            
SS$_ILLIOFUNC    ********   X   01   UCB$L_MAXBLOCK   00000080            UCB$V_MSGACK   = 00000004            
SS$_NOPRIV       ********   X   01   UCB$L_MEDIA      00000088            UCB$V_MSGFLO   = 00000003            
SS$_NORMAL       ********   X   01   UCB$L_NT_DATSSB  00000074            UCB$V_NOCNVRT  = 00000002            
SUCCES           000000C4 R     01   UCB$L_NT_INTSSB  00000078            UCB$V_NT_BFROVF= 00000002            
UCB$B_AMOD       00000053            UCB$L_OPCNT      00000060            UCB$V_NT_BREAK = 00000005            
UCB$B_CEX        00000077            UCB$L_OWNUIC     0000001C            UCB$V_NT_NAME  = 00000004            
UCB$B_CM1        0000004A            UCB$L_PID        00000028            UCB$V_NT_NONTR = 00000006            
UCB$B_CM2        0000004B            UCB$L_RQBL       00000004            UCB$V_NT_SDP   = 00000003            
UCB$B_DEVCLASS   00000038            UCB$L_RQFL       00000000            UCB$V_ONLINE   = 00000004            
UCB$B_DEVTYPE    00000039            UCB$L_SVAPTE     00000068            UCB$V_POWER    = 00000005            
UCB$B_DIPL       00000052            UCB$L_SVPN       00000064            UCB$V_PRMMBX   = 00000000            
UCB$B_DX_SCTCNT  FFFFFFFE            UCB$L_TTCHAR     0000003C            UCB$V_SEGFLO   = 00000002            
UCB$B_DX_SPARE   FFFFFFFF            UCB$L_VCB        00000030            UCB$V_TIM      = 00000000            
UCB$B_ERTCNT     00000070            UCB$M_BSY      = 00000100            UCB$V_TIMOUT   = 00000006            
UCB$B_ERTMAX     00000071            UCB$M_CANCEL   = 00000008            UCB$V_TT_NOTIF = 00000002            
UCB$B_ESCAPE     0000004B            UCB$M_DEADMO   = 00000400            UCB$V_TT_TIMO  = 00000001            
UCB$B_FEX        00000076            UCB$M_DELMBX   = 00000002            UCB$V_VALID    = 0000000B            
UCB$B_FIPL       0000000B            UCB$M_DIAGBUF  = 00000002            UCB$W_BCNT       0000006E            
UCB$B_LOCSRV     0000003C            UCB$M_DX_WRITE = 00000008            UCB$W_BCR        00000092            
UCB$B_OFFNDX     00000090            UCB$M_ECC      = 00000001            UCB$W_BOFF       0000006C            
UCB$B_OFFRTC     00000091            UCB$M_ERLOGIP  = 00000004            UCB$W_BUFQUO     00000018            
UCB$B_REMSRV     0000003D            UCB$M_INT      = 00000002            UCB$W_BYTESTOGO  0000003E            
UCB$B_SECTORS    0000003C            UCB$M_INTTYPE  = 00000080            UCB$W_CHARGE     0000004A            
UCB$B_SLAVE      00000074            UCB$M_JOB      = 00000001            UCB$W_CYLINDERS  0000003E            
UCB$B_SPR        00000075            UCB$M_MOUNTING = 00000200            UCB$W_DA         00000088            
UCB$B_STATE      00000052            UCB$M_NOCNVRT  = 00000004            UCB$W_DC         0000008A            
UCB$B_TRACKS     0000003D            UCB$M_NT_BFROVF= 00000004            UCB$W_DEVBUFSIZ  0000003A            
UCB$B_TYPE       0000000A            UCB$M_NT_BREAK = 00000020            UCB$W_DEVSTS     0000005A            
UCB$B_VERTSZ     0000003F            UCB$M_NT_NAME  = 00000010            UCB$W_DSTADDR    00000018            
UCB$C_LENGTH     00000074            UCB$M_NT_NONTR = 00000040            UCB$W_DX_BCR     FFFFFFFC            
UCB$C_LOGLNK   = 00000001            UCB$M_NT_SDP   = 00000008            UCB$W_EC1        0000008C            
UCB$K_LENGTH     00000074            UCB$M_ONLINE   = 00000010            UCB$W_EC2        0000008E            
UCB$L_AMB        00000054            UCB$M_POWER    = 00000020            UCB$W_ERRCNT     00000072            
UCB$L_ASTQBL     00000010            UCB$M_PRMMBX   = 00000001            UCB$W_FUNC       00000084            
UCB$L_ASTQFL     0000000C            UCB$M_TIM      = 00000001            UCB$W_MB_SEED    FFFFFFFC            
UCB$L_CPID       0000005C            UCB$M_TIMOUT   = 00000040            UCB$W_MSGCNT     00000016            
UCB$L_CRB        00000020            UCB$M_TT_NOTIF = 00000004            UCB$W_MSGMAX     00000014            
UCB$L_DDB        00000024            UCB$M_TT_TIMO  = 00000002            UCB$W_NT_CHAN    0000007C            
UCB$L_DEVCHAR    00000034            UCB$M_VALID    = 00000800            UCB$W_OFFSET     00000086            
UCB$L_DEVDEPEND  0000003C            UCB$S_LNKPRI   = 00000002            UCB$W_REFC       00000050            
UCB$L_DPC        0000007C            UCB$S_LTYPE    = 00000002            UCB$W_SIZE       00000008            
UCB$L_DUETIM     0000005C            UCB$T_PARTNER    0000000C            UCB$W_SRCADDR    0000001A            
UCB$L_DX_BFPNT   FFFFFFF4            UCB$V_BACKP    = 00000005            UCB$W_STS        00000058            
UCB$L_DX_BUF     FFFFFFF0            UCB$V_BSY      = 00000008            UCB$W_UNIT       00000048            
UCB$L_DX_RXDB    FFFFFFF8            UCB$V_CANCEL   = 00000003            UCB$W_VPROT      0000001A            
SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page  17
SYMBOL TABLE                                                                                                                     (1)

VCB$B_CUR_RVN    0000002F            VCB$V_STARFILE = 00000008            
VCB$B_EOFDELTA   0000004E            VCB$V_SYSTEM   = 00000007            
VCB$B_IBMAPSIZE  00000038            VCB$V_WAIMOUVOL= 00000002            
VCB$B_IBMAPVBN   0000003A            VCB$V_WAIREWIND= 00000003            
VCB$B_LRU_LIM    00000049            VCB$V_WAIUSRLBL= 00000004            
VCB$B_RESFILES   0000004F            VCB$V_WRITE_IF = 00000000            
VCB$B_SBMAPSIZE  00000039            VCB$V_WRITE_SM = 00000001            
VCB$B_SBMAPVBN   0000003B            VCB$W_CLUSTER    0000003C            
VCB$B_STATUS     0000000B            VCB$W_CUR_NUM    00000024            
VCB$B_TM         0000002E            VCB$W_CUR_SEQ    00000026            
VCB$B_TYPE       0000000A            VCB$W_EXTEND     0000003E            
VCB$B_WINDOW     00000048            VCB$W_FILEPROT   0000004A            
VCB$C_COMLEN     00000024            VCB$W_MCOUNT     0000004C            
VCB$C_LENGTH     00000050            VCB$W_MODE       0000002C            
VCB$C_MRKLEN     0000000B            VCB$W_RVN        0000000E            
VCB$K_COMLEN     00000024            VCB$W_SIZE       00000008            
VCB$K_LENGTH     00000050            VCB$W_START_NUM  00000028            
VCB$K_MRKLEN     0000000B            VCB$W_START_SEQ  0000002A            
VCB$L_AQB        00000010            VCB$W_TRANS      0000000C            
VCB$L_BLOCKBL    00000004            
VCB$L_BLOCKFL    00000000            
VCB$L_CUR_FID    00000024            
VCB$L_FCBBL      00000004            
VCB$L_FCBFL      00000000            
VCB$L_FREE       00000040            
VCB$L_HOME2LBN   00000028            
VCB$L_HOMELBN    00000024            
VCB$L_IBMAPLBN   00000030            
VCB$L_IXHDR2LBN  0000002C            
VCB$L_MAXFILES   00000044            
VCB$L_MVL        00000034            
VCB$L_RVT        00000020            
VCB$L_SBMAPLBN   00000034            
VCB$L_START_FID  00000028            
VCB$L_ST_RECORD  00000030            
VCB$L_USRLBLAST  00000044            
VCB$L_VPBL       00000040            
VCB$L_VPFL       0000003C            
VCB$L_WCB        00000038            
VCB$M_CANCELIO = 00000020            
VCB$M_MUSTCLOSE= 00000040            
VCB$M_WAIMOUVOL= 00000004            
VCB$M_WAIREWIND= 00000008            
VCB$M_WAIUSRLBL= 00000010            
VCB$T_VOLNAME    00000014            
VCB$V_CANCELIO = 00000005            
VCB$V_EBCDIC   = 00000005            
VCB$V_EXTFID   = 00000005            
VCB$V_GROUP    = 00000006            
VCB$V_INTCHG   = 00000004            
VCB$V_LOGICEOVS= 00000001            
VCB$V_MUSTCLOSE= 00000006            
VCB$V_OVRACC   = 00000001            
VCB$V_OVREXP   = 00000000            
VCB$V_OVRLBL   = 00000002            
VCB$V_OVRSETID = 00000003            
VCB$V_PARTFILE = 00000000            
SYSQIOREQ       - SYSTEM SERVICE QUEUE I/O REQUEST               22-AUG-1978 00:20:31   VAX-11 MACRO X0.3-11               Page  18
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        0000026F      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFF      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
5504. BYTES LEFT IN FREE MEMORY POOL.
2840. BYTES OF RECLAIMED MEMORY.
OBJ$:SYSQIOREQ,LIS$:SYSQIOREQ/-SP=LIB$:LIB/ML,SRC$:SYSQIOREQ
18 MLB DIR RDS - 1248 GETS TO DEFINE 36 MACROS. 85 INTER. FILE WRITES. 
