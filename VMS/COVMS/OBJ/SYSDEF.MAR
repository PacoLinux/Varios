;+ 
; AST CONTROL BLOCK DEFINITIONS 
; 
; AST CONTROL BLOCKS EXIST AS SEPARATE STRUCTURES AND AS SUBSTRUCTURES 
; WITHIN LARGER CONTROL BLOCKS SUCH AS I/O REQUEST PACKETS AND TIMER 
; QUEUE ENTRIES. 
; 
;- 
 
	.MACRO	$ACBDEF,$GBL

	$DEFINI	ACB,$GBL

 
$DEF	ACB$L_ASTQFL		 		;AST QUEUE FORWARD LINK 
			.BLKL	1 
$DEF	ACB$L_ASTQBL		 		;AST QUEUE BACKWARD LINK 
			.BLKL	1 
$DEF	ACB$W_SIZE		 			;STRUCTURE SIZE IN BYTES 
			.BLKW	1 
$DEF	ACB$B_TYPE		 			;STRUCTURE TYPE CODE 
			.BLKB	1 
$DEF	ACB$B_RMOD		 			;REQUEST ACCESS MODE 
	$VIELD	ACB,0,<- 			;RMOD FLAG DEFINITIONS 
		<MODE,2,>- 			;MODE FOR FINAL DELIVERY 
		<,4,>- 			;SPARE 
		<QUOTA,,M>- 		;ACCOUNT FOR QUOTA 
		<KAST,,>- 			;SPECIAL KERNEL AST 
		>	
			.BLKB	1 
$DEF	ACB$L_PID		 			;PROCESS ID OF REQUEST 
			.BLKL	1 
$DEF	ACB$L_AST		 			;AST ROUTINE ADDRESS 
			.BLKL	1 
$DEF	ACB$L_ASTPRM		 		;AST PARAMETER 
			.BLKL	1 
$DEF	ACB$L_KAST		 			;INTERNAL KERNEL MODE XFER ADDRESS 
 
			.BLKL	1 

	$DEFEND	ACB,$GBL,DEF

	.ENDM	$ACBDEF
 
;+ 
; ADP - UNIBUS ADAPTER CONTROL BLOCK 
; 
; THERE IS ONE UNIBUS ADAPTER CONTROL BLOCK FOR EACH UNIBUS ADAPTER IN A 
; CONFIGURATION. IT PROVIDES THE DATABASE FOR ALLOCATION OF BUFFERED DATA- 
; PATHS AND MAPPING REGISTERS. IT ALSO CONTAINS THE ADDRESS OF THE UNIBUS 
; ADAPTER CONFIGURATION STATUS REGISTER. 
;- 
 
	.MACRO	$ADPDEF,$GBL

	$DEFINI	ADP,$GBL

 
$DEF	ADP$L_UBACSR		 		;UNIBUS ADAPTER CONFIGURATION STATUS REGISTER ADDRESS 
			.BLKL	1 
$DEF	ADP$L_LINK		 			;ADDRESS OF NEXT ADAPTER CONTROL BLOCK 
			.BLKL	1 
$DEF	ADP$W_SIZE		 			;STRUCTURE SIZE IN BYTES 
			.BLKW	1 
$DEF	ADP$B_TYPE		 			;STRUCTURE TYPE CODE 
			.BLKB	1 
				 			;SPARE UNUSED BYTE 
			.BLKB	1 
$DEF	ADP$L_DPQFL		 			;DATAPATH WAIT QUEUE FORWARD LINK 
			.BLKL	1 
$DEF	ADP$L_DPQBL		 			;DATAPATH WAIT QUEUE BACKWARD LINK 
			.BLKL	1 
$DEF	ADP$L_MRQFL		 			;MAP REGISTER WAIT QUEUE FORWARD LINK 
			.BLKL	1 
$DEF	ADP$L_MRQBL		 			;MAP REGISTER WAIT QUEUE BACKWARD LINK 
			.BLKL	1 
$DEF	ADP$W_DPBITMAP		 		;DATAPATH ALLOCATION BITMAP 
			.BLKW	1 
$DEF	ADP$W_MRBITMAP		 		;MAP REGISTER ALLOCATION BITMAP 
			.BLKW	31 
$DEF	ADP$L_INTD		 		;INTERRUPT TRANSFER VECTOR 
$EQU	ADP$C_NUMDATAP	16			;NUMBER OF DATAPATHS 
 
			.BLKL	3 

	$DEFEND	ADP,$GBL,DEF

	.ENDM	$ADPDEF
 
;+ 
; FORMAT OF ACP I/O BUFFER PACKET. THIS PACKET CONTAINS ALL THE DATA 
; TRANSMITTED FROM THE USER TO THE ACP AND BACK FOR AN ACP FUNCTION. 
; NOTE THAT THE DESCRIPTORS IN THE PACKET ARE TREATED BY BLISS CODE 
; AS A BLOCKVECTOR. 
;- 
 
	.MACRO	$AIBDEF,$GBL	; MAIN PACKET BODY 

	$DEFINI	AIB,$GBL

 
$DEF	AIB$L_DESCRIPT		 		; ADDRESS OF START OF DESCRIPTORS 
			.BLKL	1 
				 			; SPARE LONGWORD 
			.BLKL	1 
$DEF	AIB$W_SIZE		 		; SIZE OF PACKET 
			.BLKW	1 
$DEF	AIB$B_TYPE		 		; PACKET TYPE CODE 
			.BLKB	1 
				 			; SPARE 
			.BLKB	1 
$DEF	AIB$C_LENGTH
$DEF	AIB$K_LENGTH				; LENGTH OF PACKET HEADER 
 

	$DEFEND	AIB,$GBL,DEF

	.ENDM	$AIBDEF
 
 
	.MACRO	$ABDDEF,$GBL	; DESCRIPTOR FORMAT 

	$DEFINI	ABD,$GBL

 
$DEF	ABD$W_TEXT		 		; WORD OFFSET TO DATA TEXT 
			.BLKW	1 
$DEF	ABD$W_COUNT		 		; BYTE COUNT OF TEXT 
			.BLKW	1 
$DEF	ABD$L_USERVA		 		; USER VIRTUAL ADDRESS OF TEXT 
			.BLKL	1 
$DEF	ABD$C_LENGTH
$DEF	ABD$K_LENGTH				; SIZE OF DESCRIPTOR 
$EQU	ABD$C_WINDOW	0			; DESCRIPTOR FOR WINDOW ADDRESS 
$EQU	ABD$C_FIB	1				; DESCRIPTOR FOR FIB 
$EQU	ABD$C_NAME	2			; DESCRIPTOR FOR NAME STRING 
$EQU	ABD$C_RESL	3			; DESCRIPTOR FOR RESULT LENGTH 
$EQU	ABD$C_RES	4				; DESCRIPTOR FOR RESULT STRING 
$EQU	ABD$C_ATTRIB	5			; FIRST ATTRIBUTE DESCRIPTOR 
 

	$DEFEND	ABD,$GBL,DEF

	.ENDM	$ABDDEF
 
;+ 
; DEFINITION OF ACP QUEUE HEADER 
;- 
 
	.MACRO	$AQBDEF,$GBL	; ACP QUEUE HEADER BLOCK 

	$DEFINI	AQB,$GBL

 
$DEF	AQB$L_ACPQFL		 		; QUEUE FORWARD LINK 
			.BLKL	1 
$DEF	AQB$L_ACPQBL		 		; QUEUE BACK LINK 
			.BLKL	1 
$DEF	AQB$W_SIZE		 		; CONTROL BLOCK SIZE IN BYTES 
			.BLKW	1 
$DEF	AQB$B_TYPE		 		; BLOCK TYPE CODE 
			.BLKB	1 
$DEF	AQB$B_MNTCNT		 		; ACP MOUNT COUNT 
			.BLKB	1 
$DEF	AQB$L_ACPPID		 		; ACP PROCESS PID 
			.BLKL	1 
$DEF	AQB$L_LINK		 			; AQB LIST LINKAGE 
			.BLKL	1 
$DEF	AQB$B_STATUS		 		; STATUS BYTE 
	$VIELD	AQB,0,<-  
		<UNIQUE,,M>- 		; ACP IS UNIQUE TO THIS DEVICE 
		<DEFCLASS,,M>- 		; ACP IS DEFAULT FOR THIS CLASS 
		<DEFSYS,,M>- 		; ACP IS DEFAULT FOR THE SYSTEM 
		<CREATING,,M>- 		; ACP IS CURRENTLY BEING CREATED 
		>	
			.BLKB	1 
$DEF	AQB$B_ACPTYPE		 		; ACP TYPE CODE 
$EQULST AQB$K_,$GBL,0,1,<-  
		<UNDEFINED>- 		; UNDEFINED ACP 
		<F11V1>- 		; FILES-11 STRUCTURE LEVEL 1 
		<F11V2>- 		; FILES-11 STRUCTURE LEVEL 2 
		<MTA>- 			; MAGTAPE 
		<NET>- 			; NETWORKS 
		>
			.BLKB	1 
$DEF	AQB$B_CLASS		 		; ACP CLASS CODE 
			.BLKB	1 
				 			; RESERVED 
			.BLKB	1 
$DEF	AQB$C_LENGTH
$DEF	AQB$K_LENGTH				; SIZE OF AQB 
 

	$DEFEND	AQB,$GBL,DEF

	.ENDM	$AQBDEF
 
;+ 
; CONDITIONAL ASSEMBLY PARAMETER DEFINITIONS 
; 
;	A NONZERO PARAMETER VALUE INDICATES PRESENCE OF THE FEATURE. 
;	A ZERO PARAMETER VALUE INDICATES ABSENCE OF THE FEATURE 
; 
;	ALL PARAMETERS MUST BE DEFINED 
;- 
 
	.MACRO	$CADEF,$GBL

	$DEFINI	CA,$GBL

 
$EQULST CA$_,$GBL,0,1,<-  
		<SIMULATOR,1>- 		;INCLUDE SIMULATOR SUPPORT CODE 
		<MEASURE,2>- 		;INCLUDE PERFORMANCE MEASUREMENT HOOKS 
		<MEASURE_IOT,4>- 		;INCLUDE I/O TRANSACTION DATA COLLECTION 
		>
 

	$DEFEND	CA,$GBL,DEF

	.ENDM	$CADEF
 
;+ 
; CCB - CHANNEL CONTROL BLOCK 
; 
; THERE IS ONE CHANNEL CONTROL BLOCK FOR EACH SOFTWARE CHANNEL THAT A 
; PROCESS MAY INITIATE I/O REQUESTS ON. THE NUMBER OF SUCH I/O CHANNELS 
; IS DETERMINED BY THE FIXED NUMBER ASSIGNED TO A PROCESS PLUS ANY 
; ADDITIONAL CHANNELS REQUIRED BY THE IMAGE CURRENTLY BEING EXECUTED 
; BY THE PROCESS. 
; 
; **** WARNING **** 
;	THE CHANNEL CONTROL BLOCK IS ASSUMED TO BE FOUR LONG WORDS 
; THROUGHOUT THE EXEC.  ITS SIZE MAY BE CHANGED BUT ONLY BY POWERS OF 2. 
;- 
 
	.MACRO	$CCBDEF,$GBL

	$DEFINI	CCB,$GBL

 
$DEF	CCB$L_UCB		 		;ADDRESS OF ASSIGNED DEVICE UCB 
			.BLKL	1 
$DEF	CCB$L_WIND		 		;ADDRESS OF WINDOW BLOCK 
			.BLKL	1 
$DEF	CCB$B_STS		 		;CHANNEL STATUS 
			.BLKB	1 
$DEF	CCB$B_AMOD		 		;ACCESS MODE THAT ASSIGNED CHANNEL 
			.BLKB	1 
$DEF	CCB$W_IOC		 		;NUMBER OF OUTSTANDING I/O REQUESTS ON CHANNEL 
			.BLKW	1 
$DEF	CCB$L_DIRP		 		;DEACCESS I/O REQUEST PACKET ADDRESS 
			.BLKL	1 
$DEF	CCB$C_LENGTH
$DEF	CCB$K_LENGTH				;LENGTH OF CCB 

	$DEFEND	CCB,$GBL,DEF

	.ENDM	$CCBDEF
 
;+ 
; COMMON EVENT BLOCK 
;- 
	.MACRO	$CEBDEF,$GBL

	$DEFINI	CEB,$GBL

 
$DEF	CEB$L_CEBFL		 			;POINTER TO NEXT COMMON EVENT BLOCK 
			.BLKL	1 
$DEF	CEB$L_CEBBL		 			;POINTER TO PREVIOUS COMMON EVENT BLOCK 
			.BLKL	1 
$DEF	CEB$W_SIZE		 			;SIZE OF COMMON EVENT BLOCK IN BYTES 
			.BLKW	1 
$DEF	CEB$B_TYPE		 			;STRUCTURE TYPE CODE FOR CEB 
			.BLKB	1 
$DEF	CEB$B_STS		 			;STATUS FLAGS FOR CEB 
	$VIELD	CEB,0,<- 			;FLAG DEFINITIONS 
		<NOQUOTA,,>- 			;NO QUOTA UPDATE 
		<PERM,,>- 			;PERMANENT CLUSTER 
		>					; 
			.BLKB	1 
$DEF	CEB$L_PID		 			;PID OF CREATOR 
			.BLKL	1 
$DEF	CEB$L_EFC		 			;EVENT FLAGS (32 BIT VECTOR) 
			.BLKL	1 
$DEF	CEB$L_WQFL		 			;HEAD OF WAIT QUEUE 
			.BLKL	1 
$DEF	CEB$L_WQBL		 			;TAIL OF WAIT QUEUE 
			.BLKL	1 
$DEF	CEB$W_WQCNT		 			;WAIT QUEUE COUNT(LENGTH) 
			.BLKW	1 
$DEF	CEB$W_STATE		 			;CEF WAIT STATE NUMBER 
			.BLKW	1 
$DEF	CEB$L_UIC		 			;USER IDENT OF CEB CREATOR 
			.BLKB	2 
$DEF	CEB$W_GRP		 			;GROUP NUMBER OF OWNER 
			.BLKW	1 
$DEF	CEB$W_PROT		 			;PROTECTION MASK 
			.BLKW	1 
$DEF	CEB$W_REFC		 			;REFERENCE COUNT FOR CEB 
			.BLKW	1 
$DEF	CEB$T_EFCNAM		 		;EVENT CLUSTER TEXT NAME 
 
			.BLKB	16 

	$DEFEND	CEB,$GBL,DEF

	.ENDM	$CEBDEF
 
;+ 
; CRB - CHANNEL REQUEST BLOCK 
; 
; THERE IS ONE CHANNEL REQUEST BLOCK FOR EACH SET OF DEVICES WHOSE 
; ACCESS TO A SET OF CONTROLLERS MUST BE SYNCHRONIZED. EACH CHANNEL 
; CONTROL BLOCK ALLOWS UP TO FOUR CONTROLLERS TO WHICH THE INDIVIDUAL 
; DEVICES CAN BE ATTACHED. 
;- 
 
	.MACRO	$CRBDEF,$GBL

	$DEFINI	CRB,$GBL

 
$DEF	CRB$L_WQFL		 			;WAIT QUEUE FORWARD LINK 
$DEF	CRB$L_TT_DIAL		 		;TERMINAL DRIVER DIALUP ACTION LIST 
			.BLKL	1 
$DEF	CRB$L_WQBL		 			;WAIT QUEUE BACKWARD LINK 
$DEF	CRB$B_TT_ATTN		 		;TERMINAL DRIVER DIALUP ATTENTION MASK 
			.BLKB	1 
$DEF	CRB$B_TT_EXPEC		 		;TERMINNAL CARRIER EXPECTED MASK 
			.BLKB	1 
			.BLKB	2 
$DEF	CRB$W_SIZE		 			;SIZE OF CRB IN BYTES 
			.BLKW	1 
$DEF	CRB$B_TYPE		 			;STRUCTURE TYPE FOR CRB 
			.BLKB	1 
				 			;UNUSED 
			.BLKB	1 
$DEF	CRB$W_REFC		 			;REFERENCE COUNT OF UCB'S 
			.BLKW	1 
$DEF	CRB$B_MASK		 			;CHANNEL ALLOCATION MASK 
	$VIELD	CRB,0,<- 			; MASK BIT DEFINITIONS 
		<BSY,,M>- 			; CHANNEL IS BUSY (1=YES) 
		>				; END OF BIT DEFINITIONS 
			.BLKB	1 
				 			;SPARE UNUSED BYTE 
			.BLKB	1 
$DEF	CRB$L_LINK		 			;ADDRESS OF SECONDARY CRB 
			.BLKL	1 
$DEF	CRB$L_INTD		 		;INTERRUPT TRANSFER VECTOR 
			.BLKL	5 
$DEF	CRB$C_LENGTH
$DEF	CRB$K_LENGTH					;LENGTH OF STANDARD CRB 
				 			;NEXT INTERRUPT TRANSFER VECTOR (IF PRESENT) 
			.BLKL	5 
				 			;NEXT INTERRUPT TRANSFER VECTOR (IF PRESENT) 
			.BLKL	5 
				 			;LAST INTERRUPT TRANSFER VECTOR (IF PRESENT) 
 
			.BLKL	5 

	$DEFEND	CRB,$GBL,DEF

	.ENDM	$CRBDEF
 
 
;+ 
; CRB INTERRUPT TRANSFER VECTOR STRUCTURE DEFINITIONS 
;- 
 
	.MACRO	$VECDEF,$GBL

	$DEFINI	VEC,$GBL

 
$DEF	VEC$Q_DISPATCH		 		;REGISTER SAVE AND DISPATCH INSTRUCTIONS 
			.BLKQ	1 
$DEF	VEC$L_IDB		 			;ADDRESS OF ASSOCIATED IDB 
			.BLKL	1 
$DEF	VEC$L_INITIAL		 		;CONTROLLER INITIALIZATION ENTRY ADDRESS 
			.BLKL	1 
$DEF	VEC$W_MAPREG		 		;STARTING MAP REGISTER ALLOCATED 
	$VIELD	VEC,0,<- 			; MAP REGISTER FIELD BIT DEFINITIONS 
		<MAPREG,15,>- 		; MAP REGISTER NUMBER 
		<MAPLOCK,,M>- 		; MAP REGISTER ALLOCATION PERMANENT 
		>			; 
			.BLKW	1 
$DEF	VEC$B_NUMREG		 		;NUMBER OF MAP REGISTERS ALLOCATED 
			.BLKB	1 
$DEF	VEC$B_DATAPATH		 		;BUFFERED DATAPATH ALLOCATED 
	$VIELD	VEC,0,<- 			; DATAPATH FIELD BIT DEFINITIONS 
		<DATAPATH,7,>- 		; DATAPATH NUMBER 
		<PATHLOCK,,M>- 		; DATAPATH PERMENENT 
		>			; 
			.BLKB	1 
$DEF	VEC$L_ADP		 			;ADDRESS OF ADP 
			.BLKL	1 
$DEF	VEC$L_TT_ILINE		 		;ADDRESS OF THE TERMINAL UNIT INIT LINE 
			.BLKL	1 
$DEF	VEC$L_TT_STRTIO		 		;ADDRESS OF THE TERMINAL UNIT START I/O 
			.BLKL	1 
$DEF	VEC$L_TT_DISC		 		;ADDRESS OF TERMINAL DISCONNECT ROUTINE 
 
			.BLKL	1 

	$DEFEND	VEC,$GBL,DEF

	.ENDM	$VECDEF
 
;+ 
; CXB - COMPLEX CHAINED BUFFER 
; 
; THESE OFFSETS ARE USED IN THE HEADER OF DISJOINT SEGMENTS 
; WHICH ARE TO BE PRESENTED TO THE USER AS A UNIT. 
; 
;- 
 
	.MACRO	$CXBDEF,$GBL

	$DEFINI	CXB,$GBL

 
$DEF	CXB$L_FL		 			;FORWARD QUEUE LINK 
			.BLKL	1 
$DEF	CXB$L_BL		 			;BACKWARD QUEUE LINK 
			.BLKL	1 
$DEF	CXB$W_SIZE		 			;BLOCK SIZE 
			.BLKW	1 
$DEF	CXB$B_TYPE		 			;BLOCK TYPE 
			.BLKB	1 
$DEF	CXB$B_CODE		 			;BUFFER CODE 
			.BLKB	1 
$DEF	CXB$W_LENGTH		 		;LENGTH OF DATA 
			.BLKW	1 
$DEF	CXB$W_OFFSET		 		; OFFSET TO START OF NSP MESSAGE 
			.BLKW	1 
$DEF	CXB$L_IRP		 		;IRP ADDRESS FOR TRANSMITS (0=> DO NOT TERMINATE) 
$DEF	CXB$L_LINK		 			;LINK WORD FOR CHAINED DATA MESSAGE 
$DEF	CXB$W_CHANNEL		 		; STORE CHANNEL NUMBER FOR AST 
			.BLKW	1 
			.BLKW	1 
$DEF	CXB$L_SSB		 			;ADDR OF SSB FOR DECREMENTING TIPC 
$EQULST CXB$C_,$GBL,1,1,<-  
		<DDCCON>- 		;CONTROL MSG XMITTED - ALSO USED AS DEALLOCATION COUNT 
		<DDCDAT>- 		; DATA MSG XMITTED - ALSO USED AS DEALLOCATION COUNT 
		<DDCRCV>- 		;DDCMP TELLS NSP A MSG HAS BEEN RCVD 
		>
			.BLKL	1 
$DEF	CXB$C_LENGTH
$DEF	CXB$K_LENGTH					; LENGTH OF A CXB 
				 			; SPACE FOR ACKNUM 
			.BLKW	1 
$DEF	CXB$C_NSPSTART
$DEF	CXB$K_NSPSTART				; NORMAL START OF NSP (NO ACKNUM) 

	$DEFEND	CXB,$GBL,DEF

	.ENDM	$CXBDEF
 
;+ 
; DDB - DEVICE DATA BLOCK 
; 
; THERE IS ONE DEVICE DATA BLOCK FOR EACH CONTROLLER IN A SYSTEM. 
;+ 
 
	.MACRO	$DDBDEF,$GBL

	$DEFINI	DDB,$GBL

 
$DEF	DDB$L_LINK		 			;ADDRESS OF NEXT DDB IN LIST (0=LAST) 
			.BLKL	1 
$DEF	DDB$L_UCB		 			;ADDRESS OF FIRST UCB FOR THIS DDB 
			.BLKL	1 
$DEF	DDB$W_SIZE		 			;SIZE OF DDB IN BYTES 
			.BLKW	1 
$DEF	DDB$B_TYPE		 			;TYPE OF DATA STRUCTURE FOR DDB 
			.BLKB	1 
				 			;SPARE UNUSED BYTE 
			.BLKB	1 
$DEF	DDB$L_DDT		 			;ADDRESS OF THE DRIVER DISPATCH TABLE 
			.BLKL	1 
$DEF	DDB$L_ACPD		 			;NAME OF DEFAULT ACP FOR DEVICE UNITS 
			.BLKB	3 
$DEF	DDB$B_ACPCLASS		 		;CLASS CODE OF DEFAULT ACP 
			.BLKB	1 
$DEF	DDB$C_LENGTH
$DEF	DDB$K_LENGTH					;LENGTH OF STANDARD DDB 
$DEF	DDB$T_NAME		 		;GENERIC PATHNAME OF DEVICE 
			.BLKB	1 

	$DEFEND	DDB,$GBL,DEF

	.ENDM	$DDBDEF
 
;+ 
; DDT - DRIVER DISPATCH TABLE 
; 
; EACH DEVICE DRIVER HAS A DRIVER DISPATCH TABLE. 
;- 
 
	.MACRO	$DDTDEF,$GBL

	$DEFINI	DDT,$GBL

 
$DEF	DDT$L_START		 			;ADDRESS OF DRIVER START I/O ROUTINE 
			.BLKL	1 
$DEF	DDT$L_UNSOLINT		 		;ADDRESS OF UNSOLICITED INTERRUPT ROUTINE 
			.BLKL	1 
$DEF	DDT$L_FDT		 			;ADDRESS OF FUNCTION DECISION TABLE 
			.BLKL	1 
$DEF	DDT$L_CANCEL		 		;ADDRESS OF CANCEL I/O ENTRY POINT 
			.BLKL	1 
$DEF	DDT$L_REGDUMP		 		;ADDRESS OF DEVICE REGISTER DUMP ROUTINE 
			.BLKL	1 
$DEF	DDT$W_DIAGBUF		 		;SIZE OF DIAGNOSTIC BUFFER IN BYTES 
			.BLKW	1 
$DEF	DDT$W_ERRORBUF		 		;SIZE OF ERROR LOG BUFFER IN BYTES 
			.BLKW	1 
$DEF	DDT$L_INIT		 			;DEVICE UNIT INITIALIZATION ENTRY POINT 
 
			.BLKL	1 

	$DEFEND	DDT,$GBL,DEF

	.ENDM	$DDTDEF
 
 
;+ 
; TEMPORARY DATA STRUCTURE TYPE DEFINITIONS ********TEMP******** 
;- 
 
	.MACRO	$DYNDEF,$GBL

	$DEFINI	DYN,$GBL

 
$EQULST DYN$C_,$GBL,1,1,<- 			;BASE AND OFFSET OF 1 
- 
		<ADP>- 				;UNIBUS ADAPTER CONTROL BLOCK 
		<ACB>-   				;AST CONTROL BLOCK 
		<AQB>-   				;ACP QUEUE BLOCK 
		<CEB>-   				;COMMON EVENT BLOCK 
		<CRB>-   				;CHANNEL REQUEST BLOCK 
		<DDB>-   				;DEVICE DESCRIPTOR BLOCK 
		<FCB>-   				;FILE CONTROL BLOCK 
		<FRK>-   				;FORK BLOCK 
		<IDB>-   				;INTERRUPT DISPATCH BLOCK 
		<IRP>-   				;I/O REQUEST PACKET 
		>
$EQULST DYN$C_,$GBL,,1,<-
		<LOG>-   				;LOGICAL NAME BLOCK 
		<PCB>-   				;PROCESS CONTROL BLOCK 
		<PQB>-   				;PROCESS QUOTA BLOCK 
		<RVT>-   				;RELATIVE VOLUME TABLE 
		<TQE>-   				;TIMER QUEUE ENTRY 
		<UCB>-   				;UNIT CONTROL BLOCK 
		<VCB>-   				;VOLUME CONTROL BLOCK 
		<WCB>- 				;WINDOW CONTROL BLOCK 
		<BUFIO>- 				;BUFFERED I/O BLOCK 
		<TYPAHD>- 				;TERMINAL TYPEAHEAD BUFFER 
		<GSD>- 				;GLOBAL SECTION DESCRIPTOR BLOCK 
		>
$EQULST DYN$C_,$GBL,,1,<-
		<MVL>- 				;MAGNETIC TAPE VOLUME LIST 
		<NET>- 				;NETWORK MESSAGE BLOCK 
		<KFI>- 				;KNOWN FILE ENTRY 
		<MTL>- 				;MOUNTED VOLUME LIST ENTRY 
		<BRDCST>- 				;BROADCAST MESSAGE BLOCK 
		<CXB>- 				;COMPLEX CHAINED BUFFER 
		<NDB>- 				; NETWORK NODE DESCRIPTOR BLOCK 
		<SSB>- 				; LOGICAL LINK SUBCHANNEL STATUS BLOCK 
		<CIR>- 				; ***** MAY BE DELETED OR REPLACED ***** 
		<JPB>- 				; JOB PARAMETER BLOCK 
		<PBH>- 				; PERFORMANCE BUFFER HEADER 
		>
$EQULST DYN$C_,$GBL,,1,<-
		<PDB>- 				; PERFORMANCE DATA BLOCK 
		<PIB>- 				; PERFORMANCE INFORMATION BLOCK 
		<PFL>- 				; PAGE FILE CONTROL BLOCK 
		<SFT>- 				; SWAP FILE TABLE 
		<PTR>- 				; POINTER CONTROL BLOCK 
		<KFH>- 				; KNOWN FILE IMAGE HEADER 
		>

	$DEFEND	DYN,$GBL,DEF

	.ENDM	$DYNDEF
 
 
; 
; ERROR MESSAGE BUFFER HEADER 
; 
 
	.MACRO	$EMBDEF,$GBL

	$DEFINI	EMB,$GBL

 
$DEF	EMB$W_SIZE		 			;SIZE OF ERROR MESSAGE IN BYTES 
			.BLKW	1 
$DEF	EMB$B_BUFIND		 		;ALLOCATION BUFFER INDICATOR (0 OR 1) 
			.BLKB	1 
$DEF	EMB$B_VALID		 			;ERROR MESSAGE VALID INDICATOR 
			.BLKB	1 
$DEF	EMB$C_LENGTH
$DEF	EMB$K_LENGTH					;LENGTH OF FIXED PART 
			 
 
; 
; BUGCHECK ERROR MESSAGE BUFFER FORMAT (SYSTEM AND USER) 
; 
 
	. = 4  
$DEF	EMB$W_BC_ENTRY		 		;ENTRY TYPE 
			.BLKW	1 
$DEF	EMB$Q_BC_TIME		 		;TIME IN 64 BITS 
			.BLKQ	1 
$DEF	EMB$W_BC_ERRSEQ		 		;ERROR SEQUENCE NUMBER 
			.BLKW	1 
$DEF	EMB$L_BC_KSP		 		;KERNEL STACK POINTER 
			.BLKL	1 
$DEF	EMB$L_BC_ESP		 		;EXECUTIVE STACK POINTER 
			.BLKL	1 
$DEF	EMB$L_BC_SSP		 		;SUPERVISOR STACK POINTER 
			.BLKL	1 
$DEF	EMB$L_BC_USP		 		;USER STACK POINTER 
			.BLKL	1 
$DEF	EMB$L_BC_ISP		 		;INTERRUPT STACK POINTER 
			.BLKL	1 
$DEF	EMB$L_BC_R0		 			;REGISTER R0 
			.BLKL	1 
$DEF	EMB$L_BC_R1		 			;REGISTER R1 
			.BLKL	1 
$DEF	EMB$L_BC_R2		 			;REGISTER R2 
			.BLKL	1 
$DEF	EMB$L_BC_R3		 			;REGISTER R3 
			.BLKL	1 
$DEF	EMB$L_BC_R4		 			;REGISTER R4 
			.BLKL	1 
$DEF	EMB$L_BC_R5		 			;REGISTER R5 
			.BLKL	1 
$DEF	EMB$L_BC_R6		 			;REGISTER R6 
			.BLKL	1 
$DEF	EMB$L_BC_R7		 			;REGISTER R7 
			.BLKL	1 
$DEF	EMB$L_BC_R8		 			;REGISTER R8 
			.BLKL	1 
$DEF	EMB$L_BC_R9		 			;REGISTER R9 
			.BLKL	1 
$DEF	EMB$L_BC_R10		 		;REGISTER R10 
			.BLKL	1 
$DEF	EMB$L_BC_R11		 		;REGISTER R11 
			.BLKL	1 
$DEF	EMB$L_BC_AP		 			;ARGUMENT POINTER 
			.BLKL	1 
$DEF	EMB$L_BC_FP		 			;FRAME POINTER 
			.BLKL	1 
$DEF	EMB$L_BC_SP		 			;CURRENT STACK POINTER 
			.BLKL	1 
$DEF	EMB$L_BC_PC		 			;PROGRAM COUNTER 
			.BLKL	1 
$DEF	EMB$L_BC_PSL		 		;PROCESSOR STATUS 
			.BLKL	1 
$DEF	EMB$L_BC_CODE		 		;BUGCHECK CODE 
			.BLKL	1 
$DEF	EMB$W_BC_PCBSZ		 		;SIZE OF PCB IN BYTES 
			.BLKW	1 
$DEF	EMB$C_BC_LENGTH
$DEF	EMB$K_BC_LENGTH				;SIZE OF FIXED PART OF BUGCHECK MESSAGE 
$DEF	EMB$B_BC_PCB		 		;START OF SOFTWARE PCB 
 
; 
; CRASH-RESTART ERROR MESSAGE BUFFER FORMAT 
; 
 
			.BLKB	1 
	. = 4  
$DEF	EMB$W_CR_ENTRY		 		;ENTRY TYPE 
			.BLKW	1 
$DEF	EMB$Q_CR_TIME		 		;TIME IN 64 BITS 
			.BLKQ	1 
$DEF	EMB$W_CR_ERRSEQ		 		;ERROR SEQUENCE NUMBER 
			.BLKW	1 
$DEF	EMB$L_CR_KSP		 		;KERNEL STACK POINTER 
			.BLKL	1 
$DEF	EMB$L_CR_ESP		 		;EXECUTIVE STACK POINTER 
			.BLKL	1 
$DEF	EMB$L_CR_SSP		 		;SUPERVISOR STACK POINTER 
			.BLKL	1 
$DEF	EMB$L_CR_USP		 		;USER STACK POINTER 
			.BLKL	1 
$DEF	EMB$L_CR_ISP		 		;INTERRUPT STACK POINTER 
			.BLKL	1 
$DEF	EMB$L_CR_R0		 			;REGISTER R0 
			.BLKL	1 
$DEF	EMB$L_CR_R1		 			;REGISTER R1 
			.BLKL	1 
$DEF	EMB$L_CR_R2		 			;REGISTER R2 
			.BLKL	1 
$DEF	EMB$L_CR_R3		 			;REGISTER R3 
			.BLKL	1 
$DEF	EMB$L_CR_R4		 			;REGISTER R4 
			.BLKL	1 
$DEF	EMB$L_CR_R5		 			;REGISTER R5 
			.BLKL	1 
$DEF	EMB$L_CR_R6		 			;REGISTER R6 
			.BLKL	1 
$DEF	EMB$L_CR_R7		 			;REGISTER R7 
			.BLKL	1 
$DEF	EMB$L_CR_R8		 			;REGISTER R8 
			.BLKL	1 
$DEF	EMB$L_CR_R9		 			;REGISTER R9 
			.BLKL	1 
$DEF	EMB$L_CR_R10		 		;REGISTER R10 
			.BLKL	1 
$DEF	EMB$L_CR_R11		 		;REGISTER R11 
			.BLKL	1 
$DEF	EMB$L_CR_AP		 			;ARGUMENT POINTER 
			.BLKL	1 
$DEF	EMB$L_CR_FP		 			;FRAME POINTER 
			.BLKL	1 
$DEF	EMB$L_CR_SP		 			;CURRENT STACK POINTER 
			.BLKL	1 
$DEF	EMB$L_CR_PC		 			;PROGRAM COUNTER 
			.BLKL	1 
$DEF	EMB$L_CR_PSL		 		;PROCESSOR STATUS 
			.BLKL	1 
$DEF	EMB$L_CR_P0BR		 		;PROGRAM REGION BASE REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_P0LR		 		;PROGRAM REGION LIMIT REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_P1BR		 		;CONTROL REGION BASE REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_P1LR		 		;CONTROL REGION LIMIT REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_SBR		 		;SYSTEM BASE REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_SLR		 		;SYSTEM LIMIT REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_PCBB		 		;PROCESS CONTROL BLOCK BASE REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_SCBB		 		;SYSTEM CONTROL BLOCK BASE REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_ASTLVL		 		;AST DELIVERY LEVEL REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_SISR		 		;SOFTWARE INTERRUPT SUMMARY REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_ICCS		 		;INTERVAL TIMER CONTROL STATUS REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_ICR		 		;INTERVAL COUNT REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_TODR		 		;TIME OF DAY REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_ACCS		 		;ACCELERATOR CONTROL REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_SBIFS		 		;SBI FAULT STATUS REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_SBISC		 		;SBI COMPARATOR REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_SBIMT		 		;SBI MAINTENANCE REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_SBIER		 		;SBI ERROR REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_SBITA		 		;SBI TIMEOUT ADDRESS REGISTER 
			.BLKL	1 
$DEF	EMB$L_CR_SBIS		 		;SBI SILO REGISTER 
			.BLKL	16 
$DEF	EMB$L_CR_CODE		 		;BUGCHECK/CRASH CODE 
			.BLKL	1 
$DEF	EMB$W_CR_PCBSZ		 		;SIZE OF PCB IN BYTES 
			.BLKW	1 
$DEF	EMB$C_CR_LENGTH
$DEF	EMB$K_CR_LENGTH				;SIZE OF FIXED PART OF BUGCHECK MESSAGE 
 
; 
; DEVICE ERROR MESSAGE BUFFER FORMAT (ERROR AND TIMEOUT) 
; 
 
	. = 4  
$DEF	EMB$W_DV_ENTRY		 		;ENTRY TYPE (1=ERROR, 96=TIMEOUT) 
			.BLKW	1 
$DEF	EMB$B_DV_ERTCNT		 		;REMAINING NUMBER OF ERROR RETRIES 
			.BLKB	1 
$DEF	EMB$B_DV_ERTMAX		 		;MAXIMUM NUMBER OF ERROR RETRIES 
			.BLKB	1 
$DEF	EMB$Q_DV_IOSB		 		;FINAL I/O STATUS 
			.BLKQ	1 
$DEF	EMB$W_DV_DEVSTS		 		;FINAL DEVICE STATUS 
			.BLKW	1 
$DEF	EMB$B_DV_CLASS		 		;DEVICE CLASS 
			.BLKB	1 
$DEF	EMB$B_DV_TYPE		 		;DEVICE TYPE 
			.BLKB	1 
$DEF	EMB$Q_DV_ERTIME		 		;TIME OF ERROR 
			.BLKQ	1 
$DEF	EMB$L_DV_ERRSEQ		 		;ERROR SEQUENCE NUMBER 
			.BLKL	1 
$DEF	EMB$L_DV_RQPID		 		;REQUESTER PROCESS ID 
			.BLKL	1 
$DEF	EMB$W_DV_BOFF		 		;BYTE OFFSET IN PAGE 
			.BLKW	1 
$DEF	EMB$W_DV_BCNT		 		;TRANSFER BYTE COUNT 
			.BLKW	1 
$DEF	EMB$L_DV_MEDIA		 		;STARTING MEDIA ADDRESS 
			.BLKL	1 
$DEF	EMB$W_DV_UNIT		 		;PHYSICAL UNIT NUMBER 
			.BLKW	1 
$DEF	EMB$W_DV_ERRCNT		 		;UNIT ERROR COUNT 
			.BLKW	1 
$DEF	EMB$L_DV_OPCNT		 		;UNIT OPERATION COUNT 
			.BLKL	1 
$DEF	EMB$L_DV_OWNUIC		 		;VOLUME OWNER UIC 
			.BLKL	1 
$DEF	EMB$L_DV_CHAR		 		;DEVICE CHARACTERISTICS 
			.BLKL	1 
$DEF	EMB$B_DV_SLAVE		 		;SLAVE CONTROLLER NUMBER 
			.BLKB	1 
				 			;SPARE UNUSED BYTES 
			.BLKB	1 
$DEF	EMB$W_DV_FUNC		 		;I/O FUNCTION VALUE 
			.BLKW	1 
$DEF	EMB$T_DV_NAME		 		;DEVICE NAME 
			.BLKB	16 
$DEF	EMB$L_DV_REGSAV		 		;START OF REGISTER SAVE AREA 
 
; 
; TIME STAMP MSG FORMAT 
; 
 
			.BLKL	1 
	. = 4  
$DEF	EMB$W_TS_ENTRY		  		;ENTRY TYPE 
			.BLKW	1 
$DEF	EMB$Q_TS_TIME		  		;TIME IN 64 BITS 
			.BLKQ	1 
$DEF	EMB$W_TS_ERRSEQ		 		;ERROR SEQ # 
			.BLKW	1 
$DEF	EMB$C_TS_LENGTH
$DEF	EMB$K_TS_LENGTH				;LENGTH OF TIME STAMP MSG 
 
; 
; SYSTEM SERVICE MESSAGE 
; 
 
	. = 4  
$DEF	EMB$W_SS_ENTRY		 		;ENTRY TYPE 
			.BLKW	1 
$DEF	EMB$Q_SS_TIME		 		;TIME IN 64 BITS 
			.BLKQ	1 
$DEF	EMB$W_SS_ERRSEQ		 		;ERROR SEQUENCE NUMBER 
			.BLKW	1 
$DEF	EMB$W_SS_MSGSZ		 		;MESSAGE TEXT SIZE IN BYTES 
			.BLKW	1 
$DEF	EMB$C_SS_LENGTH
$DEF	EMB$K_SS_LENGTH				;LENGTH OF CONSTANT PART 
$DEF	EMB$B_SS_MSGTXT		 		;FIRST BYTE OF MESSAGE TEXT 
 
; 
; ERROR MESSAGE ENTRY TYPE DEFINITIONS 
; 
 
$EQU	EMB$C_CS	32				;COLD START 
$EQU	EMB$C_WS	36				;WARM START 
$EQU	EMB$C_OM	40				;OPERATOR MESSAGE 
$EQU	EMB$C_SS	39				;SYSTEM SERVICE MESSAGE 
$EQU	EMB$C_TS	38				;TIME STAMP ENTRY 
$EQU	EMB$C_UI	97				;UNDEFINED INTERRUPT 
$EQU	EMB$K_CR	37				;CRASH RE-START 
$EQU	EMB$C_VM	64				;VOLUME MOUNT 
$EQU	EMB$C_VD	65				;VOLUME DISMOUNT 
$EQU	EMB$C_DE	01				;DEVICE ERROR 
$EQU	EMB$C_DT	150				;DEVICE TIMEOUT 
$EQU	EMB$C_BE	04				;BUS ERROR 
$EQU	EMB$K_MC	2				;MACHINE CHECK 
$EQU	EMB$K_SBC	40				;SYSTEM BUGCHECK 
$EQU	EMB$K_UBC	128				;USER BUGCHECK 
 
			.BLKB	1 

	$DEFEND	EMB,$GBL,DEF

	.ENDM	$EMBDEF
 
;+ 
; EOF1 ANSI MAGNETIC TAPE LABEL 
; THIS IS THE FIRST LABEL IN FILE TRAILER LABEL SET.  IT IS EQUIVALENT TO 
; HDR1 EXCEPT FOR THE FOLLOWING FIELDS. 
;- 
	.MACRO	$EO1DEF,$GBL	;EOF1 LABEL FORMAT 

	$DEFINI	EO1,$GBL

 
$DEF	EO1$L_EO1LID		 	;LABEL IDENTIFIER AND NUMBER 'EOF1' 
			.BLKL	1 
				 		;SAME AS HDR1 
			.BLKB	50 
$DEF	EO1$T_BLOCKCNT		 	;BLOCK COUNT 
			.BLKB	6 

	$DEFEND	EO1,$GBL,DEF

	.ENDM	$EO1DEF
 
 
;+ 
; EOF2 ANDSI MAGNETIC TAPE LABEL 
; THIS IS THE SECOND LABEL IN THE FILE TRAILER LABEL SET.  IT IS EQUIVALENT 
; TO HDR2 EXCEPT FOR THE FOLLOWING FIELDS. 
;- 
	.MACRO	$EO2DEF,$GBL	;EOF2 LABEL FORMAT 

	$DEFINI	EO2,$GBL

	 
$DEF	EO2$L_EO2LID		 	;LABEL IDENTIFIER AND NUMBER 'EOF2' 
			.BLKL	1 

	$DEFEND	EO2,$GBL,DEF

	.ENDM	$EO2DEF
 
; 
; ERROR LOG ALLOCATION BUFFER HEADER 
; 
 
	.MACRO	$ERLDEF,$GBL

	$DEFINI	ERL,$GBL

 
$DEF	ERL$B_BUSY		 			;NUMBER OF BUSY MESSAGES IN BUFFER 
			.BLKB	1 
$DEF	ERL$B_MSGCNT		 		;NUMBER OF COMPLETED MESSAGES IN BUFFER 
			.BLKB	1 
$DEF	ERL$B_BUFIND		 		;BUFFER INDICATOR OF RESPECTIVE BUFFER 
			.BLKB	1 
				 			;SPARE UNUSED BYTE 
			.BLKB	1 
$DEF	ERL$L_NEXT		 			;ADDRESS OF NEXT AVAILABLE SPACE IN BUFFER 
			.BLKL	1 
$DEF	ERL$L_END		 			;ADDRESS OF END OF BUFFER + 1 
			.BLKL	1 
$DEF	ERL$C_LENGTH
$DEF	ERL$K_LENGTH					;LENGTH OF ALLOCATION BUFFER HEADER 
 
	$VIELD	ERL,0,<- 			;BUFFER FLAGS 
		<LOCK,,M>- 		;BUFFER ALLOCATION INTERLOCK 
		<TIMER,,M>- 		;TIMER ACTIVE 
		>			; 
 

	$DEFEND	ERL,$GBL,DEF

	.ENDM	$ERLDEF
 
;+ 
; FCB - FILE CONTROL BLOCK 
; 
; THERE IS ONE FILE CONTROL BLOCK FOR EACH UNIQUELY ACCESSED FILE ON A 
; VOLUME. THE FILE CONTROL BLOCK PROVIDES THE VEHICLE WHEREBY SHARED 
; ACCESS TO A FILE MAY BE CONTROLLED. 
;- 
 
	.MACRO	$FCBDEF,$GBL

	$DEFINI	FCB,$GBL

$DEF	FCB$L_FCBFL		 			; FCB LIST FORWARD LINK 
			.BLKL	1 
$DEF	FCB$L_FCBBL		 			; FCB LIST BACKWARD LINK 
			.BLKL	1 
$DEF	FCB$W_SIZE		 		; SIZE OF FCB IN BYTES 
			.BLKW	1 
$DEF	FCB$B_TYPE		 		; STRUCTURE TYPE OF FCB 
			.BLKB	1 
				 			; SPARE UNUSED BYTE 
			.BLKB	1 
$DEF	FCB$L_EXFCB		 			; ADDRESS OF EXTENSION FCB 
			.BLKL	1 
$DEF	FCB$L_WLFL		 			; WINDOW LISTHEAD FORWARD LINK 
			.BLKL	1 
$DEF	FCB$L_WLBL		 			; WINDOW LISTHEAD BACKWARD LINK 
			.BLKL	1 
$DEF	FCB$W_ACNT		 		; FILE ACCESS COUNT 
			.BLKW	1 
$DEF	FCB$W_LCNT		 		; FILE LOCK COUNT 
			.BLKW	1 
$DEF	FCB$W_WCNT		 		; FILE WRITER COUNT 
			.BLKW	1 
$DEF	FCB$W_STATUS		 		; FILE STATUS 
	$VIELD	FCB,0,<-  
		<DIR,,>- 		; FCB IS A DIRECTORY LRU ENTRY 
		<MARKDEL,,>- 		; FILE IS MARKED FOR DELETE 
		<BADBLK,,>- 		; BAD BLOCK ENCOUNTERED IN FILE 
		<EXCL,,>- 		; FILE IS EXCLUSIVELY ACCESSED 
		>	
			.BLKW	1 
$DEF	FCB$W_FID		 		; FILE IDENTIFICATION 
$DEF	FCB$W_FID_NUM		 	; FILE NUMBER 
			.BLKW	1 
$DEF	FCB$W_FID_SEQ		 	; FILE SEQUENCE NUMBER 
			.BLKW	1 
$DEF	FCB$W_FID_RVN		 	; RELATIVE VOLUME NUMBER 
$DEF	FCB$B_FID_RVN		 	; SHORT FORM RVN 
			.BLKB	1 
$DEF	FCB$B_FID_NMX		 	; EXTENDED FILE NUMBER 
			.BLKB	1 
$DEF	FCB$W_SEGN		 		; FILE SEGMENT NUMBER 
			.BLKW	1 
$DEF	FCB$L_STVBN		 			; STARTING VIRTUAL BLOCK NUMBER 
			.BLKL	1 
$DEF	FCB$L_STLBN		 			; STARTING LOGICAL BLOCK NUMBER 
			.BLKL	1 
$DEF	FCB$L_HDLBN		 			; LBN OF FILE HEADER 
			.BLKL	1 
$DEF	FCB$L_FILESIZE		 		; FILE SIZE IN BLOCKS 
			.BLKL	1 
$DEF	FCB$L_FILEOWNER		 		; FILE OWNER UIC 
$DEF	FCB$W_UICMEMBER		 	; MEMBER NUMBER 
			.BLKW	1 
$DEF	FCB$W_UICGROUP		 	; GROUP NUMBER 
			.BLKW	1 
$DEF	FCB$W_FILEPROT		 		; FILE PROTECTION MASK 
			.BLKW	1 
$DEF	FCB$W_AMOD		 		; LEAST PRIVILEGED ACCESS MODE 
			.BLKW	1 
$DEF	FCB$W_EOF		 		; END OF FILE MARK 
$DEF	FCB$L_EFBLK		 		; END OF FILE VBN 
			.BLKL	1 
$DEF	FCB$W_FFBYTE		 		; FIRST FREE BYTE IN EOF BLOCK 
			.BLKW	1 
				 			; RESERVED 
			.BLKW	1 
$DEF	FCB$C_LENGTH
$DEF	FCB$K_LENGTH				; LENGTH OF STANDARD FCB 
$DEF	FCB$B_DIRIDX		 		; DIRECTORY BLOCK INDEX AREA 
			.BLKB	16 

	$DEFEND	FCB,$GBL,DEF

	.ENDM	$FCBDEF
 
;+ 
; FKB - FORK BLOCK 
; 
; A FORK BLOCK DESCRIBES THE CONTEXT OF A FORK PROCESS. EACH UNIT CONTROL 
; BLOCK CONTAINS A FORK BLOCK AS ITS FIRST SIX LONGWORDS. 
;- 
 
	.MACRO	$FKBDEF,$GBL

	$DEFINI	FKB,$GBL

 
$DEF	FKB$L_FQFL		 			;FORK QUEUE FORWARD LINK 
			.BLKL	1 
$DEF	FKB$L_FQBL		 			;FORK QUEUE BACKWARD LINK 
			.BLKL	1 
$DEF	FKB$W_SIZE		 			;SIZE OF FKB IN BYTES 
			.BLKW	1 
$DEF	FKB$B_TYPE		 			;STRUCTURE TYPE OF FKB 
			.BLKB	1 
$DEF	FKB$B_FIPL		 			;FORK INTERRUPT PRIORITY LEVEL 
			.BLKB	1 
$DEF	FKB$L_FPC		 			;FORK PC 
			.BLKL	1 
$DEF	FKB$L_FR3		 			;FORK R3 
			.BLKL	1 
$DEF	FKB$L_FR4		 			;FORK R4 
			.BLKL	1 
$DEF	FKB$C_LENGTH
$DEF	FKB$K_LENGTH					;STANDARD LENGTH OF FKB 
 

	$DEFEND	FKB,$GBL,DEF

	.ENDM	$FKBDEF
 
 
;+ 
; GLOBAL SECTION DESCRIPTOR BLOCK 
;- 
	.MACRO	$GSDDEF,$GBL

	$DEFINI	GSD,$GBL

 
$DEF	GSD$L_GSDFL		 			;POINTER TO NEXT GSD 
			.BLKL	1 
$DEF	GSD$L_GSDBL		 			;POINTER TO PREVIOUS GSD 
			.BLKL	1 
$DEF	GSD$W_SIZE		 			;SIZE OF GSD IN BYTES 
			.BLKW	1 
$DEF	GSD$B_TYPE		 			;STRUCTURE TYPE CODE FOR GSD 
			.BLKB	1 
				 			;SPARE 
			.BLKB	1 
$DEF	GSD$L_UIC		 			;USER IDENT OF GSD CREATOR 
			.BLKB	2 
$DEF	GSD$W_GRP		 			;GROUP NUMBER OF GSD CREATOR 
			.BLKW	1 
$DEF	GSD$W_PROT		 			;PROTECTION MASK 
			.BLKW	1 
$DEF	GSD$W_GSTX		 			;GLOBAL SECTION TABLE INDEX 
			.BLKW	1 
$DEF	GSD$L_IDENT		 			;IDENTIFICATION OF GLOBAL SECTION 
			.BLKL	1 
$DEF	GSD$T_GSDNAM		 		;GLOBAL SECTION TEXT NAME 
			.BLKB	16 
$DEF	GSD$C_LENGTH
$DEF	GSD$K_LENGTH					;LENGTH OF GSD 
 

	$DEFEND	GSD,$GBL,DEF

	.ENDM	$GSDDEF
 
;+ 
; HDR1 ANDSI MAGNETIC TAPE LABEL 
; THIS IS THE FIRST LABEL IN THE FILE LABEL HEADER SET.  IF IDENTIFIES THE FILE. 
;- 
	.MACRO	$HD1DEF,$GBL	;HDR1 LABEL FORMAT 

	$DEFINI	HD1,$GBL

 
$DEF	HD1$L_HD1LID		 	;LABEL IDENTIFIER AND NUMBER 'HDR1' 
			.BLKL	1 
$DEF	HD1$T_FILEID		 	;FILE IDENTIFIER 
			.BLKB	17 
$DEF	HD1$T_FILESETID		 	;FILE SET IDENTIFIER 
			.BLKB	6 
$DEF	HD1$T_FILESECNO		 	;FILE SECTION NUMBER 
			.BLKB	4 
$DEF	HD1$T_FILESEQNO		 	;FILE SEQUENCE NUMBER 
			.BLKB	4 
$DEF	HD1$T_GENNO		 	;FILE GENERATION NUMBER 
			.BLKB	4 
$DEF	HD1$T_GENVER		 	;FILE GENERATION VERSION NUMBER 
			.BLKB	2 
$DEF	HD1$T_CREATEDT		 	;CREATION DATE ( YYDDD) 
			.BLKB	6 
$DEF	HD1$T_EXPIREDT		 	;EXPIRATION DATE 
			.BLKB	6 
$DEF	HD1$B_FILACCESS		 	;FILE ACCESS 
			.BLKB	1 
$DEF	HD1$T_BLOCKCNT		 	;BLOCK COUNT 
			.BLKB	6 
$DEF	HD1$T_SYSCODE		 	;SYSTEM CODE 
			.BLKB	13 
				 		;SPACES 
			.BLKB	7 

	$DEFEND	HD1,$GBL,DEF

	.ENDM	$HD1DEF
 
 
 
;+ 
; HDR2 ANSI MAGNETIC TAPE LABEL 
; THIS IS THE SECOND LABEL IN FILE LABEL HEADER SET.  IT IDENTIFIES 
; THE FILE ATTRIBUTES. 
;- 
	.MACRO	$HD2DEF,$GBL	;HDR2 LABEL FORMAT 

	$DEFINI	HD2,$GBL

 
$DEF	HD2$L_HD2LID		 	;LABEL IDENTIFIER AND NUMBER 'HDR2' 
			.BLKL	1 
$DEF	HD2$B_RECFORMAT		 	;RECORD FORMAT 
			.BLKB	1 
$DEF	HD2$T_BLOCKLEN		 	;BLOCK LENGTH 
			.BLKB	5 
$DEF	HD2$T_RECLEN		 	;RECORD LENGTH 
			.BLKB	5 
$DEF	HD2$T_RECATR1		 	;FIRST 20 BYTES OF FILES-11 RECORD ATTRIBUTES 
			.BLKB	20 
				 		;SPACES 
			.BLKB	1 
$DEF	HD2$B_FORMCNTRL		 	;FORMS CONTROL 
			.BLKB	1 
$DEF	HD2$T_RECATR2		 	;LAST 12 BYTES OF FILES-11 RECORD ATTRIBUTES 
			.BLKB	12 
				 		;SPACES 
			.BLKB	1 
$DEF	HD2$T_BUFOFF		 	;BUFFER OFFSET 
			.BLKB	2 
				 		;SPACES 
			.BLKB	20 

	$DEFEND	HD2,$GBL,DEF

	.ENDM	$HD2DEF
 
;+ 
; IDB - INTERRUPT DISPATCH BLOCK 
; 
; AN INTERRUPT DISPATCH BLOCK PROVIDES THE INFORMATION NECESSARY FOR A 
; UNIT INDEPENDENT, BUT CONTROLLER SPECIFIC, INTERRUPT DISPATCHER TO 
; DISPATCH INTERRUPTS TO THE PROPER DRIVER TO HANDLE AN INTERRUPT ON 
; A DEVICE UNIT. 
;- 
 
	.MACRO	$IDBDEF,$GBL

	$DEFINI	IDB,$GBL

 
$DEF	IDB$L_CSR		 			;CONTROLLER CSR ADDRESS 
			.BLKL	1 
$DEF	IDB$L_OWNER		 			;OWNER UCB ADDRESS 
			.BLKL	1 
$DEF	IDB$W_SIZE		 			;SIZE OF IDB IN BYTES 
			.BLKW	1 
$DEF	IDB$B_TYPE		 			;STRUCTURE TYPE OF IDB 
			.BLKB	1 
$DEF	IDB$B_UNITS		 			;NUMBER OF UNITS 
			.BLKB	1 
$DEF	IDB$L_ADP		 			;ADDRESS OF UBA ADAPTER CONTROL BLOCK 
			.BLKL	1 
$DEF	IDB$L_UCBLST		 		;UP TO 8 UCB OR SECONDARY IDB ADDRESSES 
			.BLKL	1 
$DEF	IDB$C_LENGTH
$DEF	IDB$K_LENGTH					;LENGTH OF STANDARD IDB 
 

	$DEFEND	IDB,$GBL,DEF

	.ENDM	$IDBDEF
 
 
;+ 
; IMAGE FILE DESCRIPTOR BLOCK - RETURNED BY IMAGE ACTIVATOR 
;- 
 
	.MACRO	$IFDDEF,$GBL

	$DEFINI	IFD,$GBL

 
$DEF	IFD$W_SIZE		 			;SIZE IN BYTES OF IMAGE FILE DESCRIPTOR 
			.BLKW	1 
$DEF	IFD$W_FILNAMOFF		 		;OFFSET TO RESULTANT FILE NAME STRING 
			.BLKW	1 
				 			;RESERVED OFFSET 1 
			.BLKW	1 
				 			;RESERVED OFFSET 2 
			.BLKW	1 
$DEF	IFD$W_CHAN		 			;CHANNEL ON WHICH IMAGE FILE IS OPEN 
			.BLKW	1 
$DEF	IFD$W_CMCHAN		 		;COMPATIBILITY MODE CHANNEL 
			.BLKW	1 
$DEF	IFD$C_LENGTH
$DEF	IFD$K_LENGTH					;LENGTH OF FIXED AREA OF IFD 
 

	$DEFEND	IFD,$GBL,DEF

	.ENDM	$IFDDEF
 
;+ 
; IMAGE HEADER RECORD DEFINITIONS - FIRST RECORD OF IMAGE HEADER 
;- 
	.MACRO	$IHDDEF,$GBL

	$DEFINI	IHD,$GBL

 
$DEF	IHD$W_SIZE		 			;SIZE IN BYTES OF IMAGE HEADER RECORD 
			.BLKW	1 
$DEF	IHD$W_ACTIVOFF		 		;BYTE OFFSET TO ACTIVATION DATA 
			.BLKW	1 
$DEF	IHD$W_SYMDBGOFF		 		;BYTE OFFSET TO SYMBOL TABLE AND DEBUG DATA 
			.BLKW	1 
$DEF	IHD$W_IMGIDOFF		 		;BYTE OFFSET TO IMAGE IDENT DATA 
			.BLKW	1 
$DEF	IHD$W_PATCHOFF		 		;BYTE OFFSET TO PATCH DATA 
			.BLKW	1 
				 			;RESERVED 
			.BLKW	1 
$DEF	IHD$W_MAJORID		 		;MAJOR ID 
$EQU	IHD$K_MAJORID	<^X3230>		;^A/02/ MAJOR ID VALUE 
			.BLKW	1 
$DEF	IHD$W_MINORID		 		;MINOR ID 
$EQU	IHD$K_MINORID	<^X3130>		;^A/01/ MINOR ID VALUE 
			.BLKW	1 
$DEF	IHD$B_HDRBLKCNT		 		;COUNT OF HEADER BLOCKS 
			.BLKB	1 
$DEF	IHD$B_IMGTYPE		 		;IMAGE TYPE 
; 
; IMAGE TYPE CODES 
; 
$EQU	IHD$K_EXE	1				;EXECUTABLE IMAGE 
$EQU	IHD$K_LIM	2				;LINKABLE IMAGE 
 
			.BLKB	1 
				 			;RESERVED 
			.BLKW	1 
$DEF	IHD$Q_PRIVREQS		 		;REQUESTED PRIVILEGE MASK 
			.BLKQ	1 
$DEF	IHD$W_IOCHANCNT		 		;# OF CHANNELS REQUESTED 
					;0 IF DEFAULT 
			.BLKW	1 
$DEF	IHD$W_IMGIOCNT		 		;# OF PAGES OF IMAGE I/O SECTION REQUESTED 
					;0 IF DEFAULT 
			.BLKW	1 
$DEF	IHD$L_LNKFLAGS		 		;LINKER PRODUCED IMAGE FLAGS 
	$VIELD	IHD,0,<- 				;AS FOLLOWS: 
		<LNKDEBUG,,M>- 		;FULL DEBUGGING REQUESTED 
		<LNKNOTFR,,M>- 		;FIRST TRANSFER ADDRESS MISSING 
		<NOP0BUFS,,M>- 		;RMS USE OF P0 FOR IMAGE I/O DISABLED 
		>	
			.BLKL	1 
$DEF	IHD$C_LENGTH
$DEF	IHD$K_LENGTH					;LENGTH OF FIXED AREA 
 

	$DEFEND	IHD,$GBL,DEF

	.ENDM	$IHDDEF
 
 
;+ 
; IMAGE HEADER ACTIVATION SECTION OFFSETS 
;- 
 
	.MACRO	$IHADEF,$GBL

	$DEFINI	IHA,$GBL

 
$DEF	IHA$L_TFRADR1		 		;FIRST TRANSFER ADDRESS 
			.BLKL	1 
$DEF	IHA$L_TFRADR2		 		;SECOND TRANSFER ADDRESS 
			.BLKL	1 
$DEF	IHA$L_TFRADR3		 		;THIRD TRANSFER ADDRESS 
			.BLKL	1 
				 			;GUARANTEED TRAILING 0 ADDRESS 
			.BLKL	1 
$DEF	IHA$C_LENGTH
$DEF	IHA$K_LENGTH					;SIZE OF ACTIVATION SECTION 
 

	$DEFEND	IHA,$GBL,DEF

	.ENDM	$IHADEF
 
 
;+ 
; IMAGE HEADER PATCH SECTION OFFSETS 
;- 
 
	.MACRO	$IHPDEF,$GBL

	$DEFINI	IHP,$GBL

 
$DEF	IHP$L_ECO1		 			;DEC ECO LEVELS 1-32 
			.BLKL	1 
$DEF	IHP$L_ECO2		 			;DEC ECO LEVELS 33-64 
			.BLKL	1 
$DEF	IHP$L_ECO3		 			;DEC ECO LEVELS 65-98 
			.BLKL	1 
$DEF	IHP$L_ECO4		 			;USER ECO LEVELS 99-132 
			.BLKL	1 
$DEF	IHP$L_RW_PATSIZ		 		;SIZE OF FREE RW PATCH AREA 
			.BLKL	1 
$DEF	IHP$L_RW_PATADR		 		;VIR ADDR OF NEXT FREE RW PATCH AREA 
			.BLKL	1 
$DEF	IHP$L_RO_PATSIZ		 		;SIZE OF FREE RO PATCH AREA 
			.BLKL	1 
$DEF	IHP$L_RO_PATADR		 		;VIR ADDR OF NEXT FREE RO PATCH AREA 
			.BLKL	1 
$DEF	IHP$L_PATCOMTXT		 		;PATCH COMMAND TEXT VIRTUAL BLOCK NUMBER 
			.BLKL	1 
$DEF	IHP$Q_PATDATE		 		;DATE OF MOST RECENT PATCH 
			.BLKQ	1 
$DEF	IHP$C_LENGTH
$DEF	IHP$K_LENGTH					;LENGTH OF PATCH HEADER SECTION 
 

	$DEFEND	IHP,$GBL,DEF

	.ENDM	$IHPDEF
 
 
;+ 
; IMAGE HEADER SYMBOL TABLE AND DEBUG SECTION OFFSETS 
;- 
 
	.MACRO	$IHSDEF,$GBL

	$DEFINI	IHS,$GBL

 
$DEF	IHS$L_DSTVBN		 		;DEBUG SYMBOL TABLE VIRTUAL BLOCK NUMBER 
			.BLKL	1 
$DEF	IHS$L_GSTVBN		 		;GLOBAL SYMBOL TABLE VIRTUAL BLOCK NUMBER 
			.BLKL	1 
$DEF	IHS$W_DSTBLKS		 		;DEBUG SYMBOL TABLE BLOCK COUNT 
			.BLKW	1 
$DEF	IHS$W_GSTRECS		 		;GLOBAL SYMBOL TABLE RECORD COUNT 
			.BLKW	1 
$DEF	IHS$C_LENGTH
$DEF	IHS$K_LENGTH					;LENGTH OF SYMBOL TABLE SECTION 
 

	$DEFEND	IHS,$GBL,DEF

	.ENDM	$IHSDEF
 
 
 
;+ 
; IMAGE HEADER IDENTIFICATION SECTION OFFSETS 
;- 
 
	.MACRO	$IHIDEF,$GBL

	$DEFINI	IHI,$GBL

 
$DEF	IHI$T_IMGNAM		 		;IMAGE NAME STRING 
			.BLKB	16 
$DEF	IHI$T_IMGID		 		;IMAGE IDENT STRING 
			.BLKB	16 
$DEF	IHI$Q_LINKTIME		 		;DATE AND TIME THIS IMAGE WAS LINKED 
					;STANDARD SYSTEM QUADWORD FORMAT 
			.BLKQ	1 
$DEF	IHI$T_LINKID		 		;LINKER IDENT STRING 
			.BLKB	16 
$DEF	IHI$C_LENGTH
$DEF	IHI$K_LENGTH					;LENGTH OF IMAGE HEADER IDENT SECTION 
 

	$DEFEND	IHI,$GBL,DEF

	.ENDM	$IHIDEF
 
;+ 
; IMAGE HEADER RECORD DEFINITIONS - CROSS LINKER - MAJORID = "01" 
;	 1ST RECORD OF IMAGE HEADER BLOCK 
;- 
 
	.MACRO	$IHXDEF,$GBL

	$DEFINI	IHX,$GBL

 
$DEF	IHX$W_SIZE		 			;SIZE IN BYTE OF IMAGE HEADER RECORD 
			.BLKW	1 
$DEF	IHX$B_HDRBLKCNT		 		;COUNT OF BLOCKS IN IMAGE HEADER 
			.BLKB	1 
				 			;SPARE 
			.BLKB	1 
$DEF	IHX$Q_STARTADR		 		;START ADDRESS 
			.BLKQ	1 
$DEF	IHX$W_MAJORID		 		;MAJOR ID OF IMAGE HEADER 
$EQU	IHX$K_MAJORID	<^X3130>		;^A/01/ MAJOR ID VALUE FOR CROSS LINKER 
			.BLKW	1 
$DEF	IHX$W_MINORID		 		;MINOR ID OF IMAGE HEADER 
$EQU	IHX$K_MINORID	<^X3130>		;^A/01/ MINOR ID VALUE FOR CROSS LINKER 
$EQU	IHX$K_MINORID1	<^X3130>		;^A/01/ MINOR ID VALUE FOR CROSS LINKER WITH 
					;SYMBOL TABLE AND 3RD TRANSFER ADR 
			.BLKW	1 
$DEF	IHX$T_IMGNAM		 		;IMAGE NAME 
; 
; THE FOLLOWING FIELDS ARE PRESENT FOR MINOR ID'S GREATER OR EQUAL TO "03" 
; 
			.BLKB	24 
$DEF	IHX$L_DSTVBN		 		;DEBUG SYMBOL TABLE VBN 
			.BLKL	1 
$DEF	IHX$L_GSTVBN		 		;GLOBAL SYMBOL TABLE VBN 
			.BLKL	1 
$DEF	IHX$W_DSTBLKS		 		;DEBUG SYMBOL TABLE BLOCKS 
			.BLKW	1 
$DEF	IHX$W_GSTRECS		 		;GLOBAL SYMBOL TABLE RECORD COUNT 
			.BLKW	1 
$DEF	IHX$L_TFRADR3		 		;THIRD TRANSFER ADDRESS 
			.BLKL	1 
$DEF	IHX$C_LENGTH
$DEF	IHX$K_LENGTH					;LENGTH OF CROSS LINKER HEADER 
 

	$DEFEND	IHX,$GBL,DEF

	.ENDM	$IHXDEF
 
;+ 
;	RMS32 IMPURE AREA OFFSET DEFINITIONS 
; 
;- 
	.MACRO	$IMPDEF,$GBL

	$DEFINI	IMP,$GBL

 
$DEF	IMP$W_RMSSTATUS		 	; RMS OVERALL STATUS 
	$VIELD	IMP,0,<-  
		<IIOS,,>- 		; SET IF THIS IS THE IMAGE 
-			; I.O SEGMENT 
		<AST,,>- 		; SET IF RUNNING AT EXEC AST LEVEL 
		<TEMP1,,>- 		; TEMPORARY FLAG 
		<TEMP2,,>- 		;   " 
		<IORUNDOWN,,>- 	; SET IF IO RUNDOWN IN PROGRESS 
		<NOP0BUFS,,>- 	; SET IF RMS USE OF P0 FOR IMAGE I/O DISABLED 
		>	
; 
$EQU	IMP$C_ASYEFN	30		; EFN FOR ASYNC WAITS 
$EQU	IMP$C_IOREFN	30		; EFN FOR IO RUNDOWN SYNCHRONIZATION 
$EQU	IMP$C_ASYQIOEFN	31		; EFN FOR ASYNC QIOS 
$EQU	IMP$C_SYNCEFN	27		; BASE EFN FOR SYNCHRONOUS QIO'S 
			; (28, 29 ALSO USED) 
$EQU	IMP$C_MBXEFN	26		; EFN FOR QIOS TO NETWORK MAILBOXES 
; 
			.BLKW	1 
$DEF	IMP$B_PROT		 	; PROTECTION FOR I/O BUFFER PAGES 
			.BLKB	1 
				 		; SPARE 
			.BLKB	1 
$DEF	IMP$L_IOSEGADDR		 	; ADDRESS OF FIRST FREE PAGE 
			; IN THIS (IMAGE OR PROCESS) 
			; I/O SEGMENT 
			.BLKL	1 
$DEF	IMP$L_IOSEGLEN		 	; # OF FREE BYTES AT ABOVE ADDR 
			.BLKL	1 
$DEF	IMP$L_FREEPGLH		 	; FREE PAGE LIST HEAD 
			.BLKL	2 
$DEF	IMP$L_SAVED_SP		 	; SAVED VALUE OF SP AT ENTRY 
			.BLKL	1 
$DEF	IMP$L_IFABTBL		 	; IFAB TABLE ADDR 
			.BLKL	1 
$DEF	IMP$L_IRABTBL		 	; IRAB TABLE ADDR 
			.BLKL	1 
$DEF	IMP$W_ENTPERSEG		 	; # OF SLOTS PER TABLE SEGMENT 
$EQU	IMP$C_NPIOFILES	8		; # OF PIO SEGMENT FILES 
$EQU	IMP$C_ENTPERSEG	15		; # OF IIO SEGMENT SLOTS 
				; PER INDEX TABLE SEGMENT 
			.BLKW	1 
				 		; SPARES 
			.BLKB	2 

	$DEFEND	IMP,$GBL,DEF

	.ENDM	$IMPDEF
 
 
;+ 
; TEMPORARY PROCESSOR PRIORITY LEVEL DEFINITIONS 
;- 
	.MACRO	$IPLDEF,$GBL

	$DEFINI	IPL,$GBL

 
$EQULST IPL$_,$GBL,0,1,<- 				; 
		<HWCLK,24>-    			;HARDWARE CLOCK LEVEL 
		<IOPOST,4>-    			;I/O POST PROCESSING LEVEL 
		<MAILBOX,11>-    			;WRITE MAILBOX INTERLOCK LEVEL 
		<POWER,31>-    			;POWERFAIL INTERLOCK LEVEL 
		<QUEUEAST,6>-    			;QUEUE AST LEVEL 
		<SCHED,3>-    			;SCHEDULER LEVEL 
		<SYNCH,7>-    			;SYSTEM DATA BASE SYNCHRONIZATION LEVEL 
		<TIMER,7>-    			;TIME QUEUE PROCESSING LEVEL 
		<ASTDEL,2>- 			;AST DELIVERY INTERRUPT 
		>

	$DEFEND	IPL,$GBL,DEF

	.ENDM	$IPLDEF
 
;+ 
; IRP - I/O REQUEST PACKET 
; 
; I/O REQUEST PACKETS ARE CONSTRUCTED BY THE QUEUE I/O REQUEST SYSTEM 
; SERVICE. THE CONTENT OF AN I/O REQUEST PACKET DESCRIBES A FUNCTION TO 
; BE PERFORMED ON A DEVICE UNIT. 
;- 
 
	.MACRO	$IRPDEF,$GBL

	$DEFINI	IRP,$GBL

 
$DEF	IRP$L_IOQFL		 			;I/O QUEUE FORWARD LINK 
			.BLKL	1 
$DEF	IRP$L_IOQBL		 			;I/O QUEUE BACKWARD LINK 
			.BLKL	1 
$DEF	IRP$W_SIZE		 			;SIZE OF IRP IN BYTES 
			.BLKW	1 
$DEF	IRP$B_TYPE		 			;STRUCTURE TYPE FOR IRP 
			.BLKB	1 
$DEF	IRP$B_RMOD		 			;ACCESS MODE OF REQUEST 
	$VIELD	IRP,0,<-  
		<MODE,2,>- 			; MODE SUBFIELD 
		>	
			.BLKB	1 
$DEF	IRP$L_PID		 			;PROCESS ID OF REQUESTING PROCESS 
			.BLKL	1 
$DEF	IRP$L_AST		 			;ADDRESS OF AST ROUTINE 
			.BLKL	1 
$DEF	IRP$L_ASTPRM		 		;AST PARAMETER 
			.BLKL	1 
$DEF	IRP$L_WIND		 			;ADDRESS OF WINDOW BLOCK 
			.BLKL	1 
$DEF	IRP$L_UCB		 			;ADDRESS OF DEVICE UCB 
			.BLKL	1 
$DEF	IRP$W_FUNC		 			;I/O FUNCTION CODE AND MODIFIERS 
	$VIELD	IRP,0,<- 			; I/O FUNCTION CODE FIELD DEFINITIONS 
		<FCODE,6,>- 			; FUNCTION CODE FIELD 
		<FMOD,10,>- 			; FUNCTION MODIFIER FIELD 
		>	
			.BLKW	1 
$DEF	IRP$B_EFN		 			;EVENT FLAG NUMBER AND EVENT GROUP 
			.BLKB	1 
$DEF	IRP$B_PRI		 			;BASE PRIORITY OF REQUESTING PROCESS 
			.BLKB	1 
$DEF	IRP$L_IOSB		 			;ADDRESS OF I/O STATUS DOUBLE LONGWORD 
			.BLKL	1 
$DEF	IRP$W_CHAN		 			;PROCESS I/O CHANNEL NUMBER 
			.BLKW	1 
$DEF	IRP$W_STS		 			;REQUEST STATUS 
	$VIELD	IRP,0,<- 			; BIT DEFINITIONS 
		<BUFIO,,M>-  		; BUFFERED I/O FLAG   ;THESE BITS 
		<FUNC,,M>- 		; 1=>READ FUNCTION    ;MUST BE ADJACENT 
		<PAGIO,,M>- 		; PAGING I/O FLAG     ;AND IN ORDER 
		<COMPLX,,M>- 		; COMPLEX BUFFERED I/O 
		<VIRTUAL,,M>- 		; VIRTUAL I/O FUNCTION 
		<CHAINED,,M>- 		; CHAINED BUFFERED I/O OPERATION 
		<SWAPIO,,M>- 		; SWAP I/O OPERATION 
		<DIAGBUF,,M>- 		; DIAGNOSTIC BUFFER ALLOCATED 
		<PHYSIO,,M>- 		; PHYSICAL I/O 
		<PRIVIO,,M>- 		; REQUESTER HAS LOGICAL OR PHYSICAL PRIVILEGE 
		>			; END OF BIT DEFINITIONS 
			.BLKW	1 
$DEF	IRP$L_SVAPTE		 		;SYSTEM VIRTUAL ADDRESS OF FIRST PTE 
			.BLKL	1 
$DEF	IRP$W_BOFF		 			;BYTE OFFSET IN FIRST PAGE 
			.BLKW	1 
$DEF	IRP$W_BCNT		 			;BYTE COUNT OF TRANSFER 
			.BLKW	1 
$DEF	IRP$L_IOST1		 			;FIRST I/O STATUS LONGWORD (FOR I/O POST) 
$DEF	IRP$L_MEDIA		 		;MEDIA ADDRESS 
			.BLKL	1 
$DEF	IRP$L_IOST2		 			;SECOND I/O STATUS LONGWORD 
$DEF	IRP$L_TT_TERM		 		;ADDRESS OF READ TERMINATORS MASK 
$DEF	IRP$B_CARCON		 		;CARRIAGE CONTROL 
			.BLKB	1 
			.BLKB	3 
$DEF	IRP$W_ABCNT		 			; ACCUMULATED BYTES TRANSFERED 
$DEF	IRP$W_TT_PRMPT		 		; PROMPT SIZE 
			.BLKW	1 
$DEF	IRP$W_OBCNT		 			; ORIGINAL TRANSFER BYTE COUNT 
			.BLKW	1 
$DEF	IRP$L_SEGVBN		 		; VIRTUAL BLOCK NUMBER OF CURRENT SEGMENT 
			.BLKL	1 
$DEF	IRP$L_DIAGBUF		 		; DIAGNOSITIC BUFFER ADDRESS 
			.BLKL	1 
$DEF	IRP$L_SEQNUM		 		; SEQUENCE NUMBER 
			.BLKL	1 
$DEF	IRP$C_LENGTH
$DEF	IRP$K_LENGTH					; LENGTH OF STANDARD IRP 

	$DEFEND	IRP,$GBL,DEF

	.ENDM	$IRPDEF
 
;+ 
; IMAGE SECTION DESCRIPTOR DEFINITIONS 
;- 
 
	.MACRO	$ISDDEF,$GBL

	$DEFINI	ISD,$GBL

 
$DEF	ISD$W_SIZE		 			;SIZE IN BYTES OF THIS ISD 
			.BLKW	1 
$DEF	ISD$W_PAGCNT		 		;# OF PAGES DESCRIBED BY THIS ISD 
			.BLKW	1 
$DEF	ISD$L_VPNPFC		 		;VPN & PFC VIELDS 
	$VIELD	ISD,0,<- 			; VIELDS IN VPNPFC 
		<VPN,21,>- 			; STARTING VIRTUAL PAGE NUMBER 
		<P1,,>-   			; P1 SPACE 
		<SYSTEM,,>- 			; SYSTEM SPACE 
		<,1,>- 			; SPARE 
		<PFC,8,>- 			; PAGE FAULT CLUSTER 
		>	
			.BLKB	3 
$DEF	ISD$B_PFC		 			;PAGE FAULT CLUSTER 
			.BLKB	1 
$DEF	ISD$L_FLAGS		 			;FLAGS AND ISD TYPE 
	$VIELD	ISD,0,<- 			; FLAG BIT DEFINITIONS 
		<GBL,,M>- 			; GLOBAL 
		<CRF,,M>- 			; COPY ON REFERENCE 
		<DZRO,,M>- 		; DEMAND ZERO PAGE 
		<WRT,,M>- 			; WRITABLE 
		<MATCHCTL,3,M>- 		; IDENT MATCH CONTROL FIELD 
		>	
			.BLKB	3 
$DEF	ISD$B_TYPE		 			;ISD TYPE CODE 
			.BLKB	1 
$DEF	ISD$C_LENDZRO
$DEF	ISD$K_LENDZRO					;LENGTH OF DEMAND ZERO ISD 
$DEF	ISD$L_VBN		 			;BASE VIRTUAL BLOCK NUMBER 
			.BLKL	1 
$DEF	ISD$C_LENPRIV
$DEF	ISD$K_LENPRIV					;LENGTH OF PRIVATE ISD 
$DEF	ISD$L_IDENT		 			;IDENT FOR GLOBAL SECTION 
			.BLKL	1 
$DEF	ISD$T_GBLNAM		 		;GLOBAL NAME COUNTED STRING 
			.BLKB	16 
$DEF	ISD$C_LENGLBL
$DEF	ISD$K_LENGLBL					;LENGTH OF GLOBAL ISD 
 
 
;+ 
; MATCH CONTROL VIELD VALUES 
;- 
$EQULST ISD$K_,$GBL,0,1,<- 			;BASE OF ZERO , INCR 1 
		<MATALL>-   			;MATCH ALWAYS, USE GLOBAL SECTION 
		<MATEQU>-   			;MATCH IF ISD$L_IDENT EQU GBL ID 
		<MATLEQ>- 				;MATCH IF ISD$L_IDENT LEQ GBL ID 
		<MATNEV>- 				;MATCH NEVER, USE PRIVATE COPY 
		>
 
;+ 
; ISD TYPE FIELD DEFINITIONS 
;- 
 
$EQU	ISD$K_NORMAL	0			;NORMAL PROGRAM IMAGE SECTION 
					;NO SPECIAL ACTION REQUIRED 
$EQU	ISD$K_USRSTACK	<256-3>		;USER STACK SECTION 
 

	$DEFEND	ISD,$GBL,DEF

	.ENDM	$ISDDEF
 
; 
; KNOWN FILE IMAGE HEADER DEFINITIONS 
; 
 
	.MACRO	$KFHDEF,$GBL

	$DEFINI	KFH,$GBL

 
$DEF	KFH$L_BUFEND		 		;ADDRESS OF END OF KNOWN FILE HEADER 
			.BLKL	1 
$DEF	KFH$L_KFIADR		 		;ADDRESS OF ASSOCIATED KNOWN FILE ENTRY 
			.BLKL	1 
$DEF	KFH$W_SIZE		 			;SIZE OF DYNAMIC STRUCTURE 
			.BLKW	1 
$DEF	KFH$B_TYPE		 			;DYNAMIC STRUCTURE TYPE 
			.BLKB	1 
				 			;SPARE BYTE 
			.BLKB	1 
$DEF	KFH$C_LENGTH
$DEF	KFH$K_LENGTH					;LENGTH OF OVERHEAD AREA 
 
; 
; THE REMAINDER OF THIS STRUCTURE CONTAINS THE IMAGE HEADER OF THE 
; SPECIFIED KNOWN FILE.  THE LOCATION KFI$L_IMGHDR IN THE KNOWN FILE 
; ENTRY POINTS KFH$C_LENGTH INTO THIS STRUCTURE, I.E AT THE IMAGE HEADER 
; ITSELF. 
; 

	$DEFEND	KFH,$GBL,DEF

	.ENDM	$KFHDEF
 
; 
; KNOWN FILE ENTRY DEFINITIONS 
; 
	.MACRO	$KFIDEF,$GBL

	$DEFINI	KFI,$GBL

 
$DEF	KFI$L_KFIQFL		 		;KNOWN FILE QUEUE FORWARD LINK 
			.BLKL	1 
$DEF	KFI$L_KFIQBL		 		;KNOWN FILE QUEUE BACK LINK 
			.BLKL	1 
$DEF	KFI$W_SIZE		 			;SIZE OF BLOCK 
			.BLKW	1 
$DEF	KFI$B_TYPE		 			;STRUCTURE TYPE 
			.BLKB	1 
$DEF	KFI$B_KFICTL		 		;CONTROL BITS 
	$VIELD	KFI,0,<- 			;CONTROL BIT DEFINITIONS 
		<KFIHD,,M>- 			;KNOWN FILE HEADER BLOCK 
		<FILIDOPEN,,M>- 		;OPEN BY FILE ID IF SET 
		<DONOTOPEN,,M>- 		;DO NOT OPEN THE FILE IF SET 
		<,3,M>- 			;SPARE 
		<NOREPLACE,,M>- 		;DELETE AND DO NOT REPLACE ENTRY 
		<MARKDEL,,M>- 			;ENTRY IS TO BE DELETED 
		>	
			.BLKB	1 
$DEF	KFI$B_DEVUCB		 		;DEVICE UCB OFFSET 
			.BLKB	1 
$DEF	KFI$B_DIRNAM		 		;DIRECTORY NAME STRING OFFSET 
			.BLKB	1 
$DEF	KFI$B_FILNAM		 		;FILE NAME STRING OFFSET 
			.BLKB	1 
$DEF	KFI$B_TYPNAM		 		;FILE TYPE STRING OFFSET 
			.BLKB	1 
$DEF	KFI$W_REFCNT		 		;REFERENCE COUNT 
			.BLKW	1 
$DEF	KFI$B_KFIQNUM		 		;KFIQ NUMBER (INDEX INTO VECTOR OF KFIQ'S) 
			.BLKB	1 
$DEF	KFI$B_KFISEQ		 		;KNOWN FILE ENTRY SEQUENCE NUMBER 
	$VIELD	KFI,0,<-  
		<KFISEQ,2,M>- 		;SEQUENCE NUMBER FIELD 
		>	
			.BLKB	1 
$DEF	KFI$W_FLAGS		 			;FLAGS WORD 
	$VIELD	KFI,0,<- 			;FLAG BIT DEFINITIONS 
		<KP_OPEN,,M>- 			;KEEP THE IMAGE FILE OPEN 
		<KP_RESHDR,,M>- 		;MAKE IMAGE HEADER RESIDENT 
		<KP_SHARED,,M>- 		;MAKE IMAGE SHARED 
		<,4,M>- 			;SPARE BITS 
		<PROCPRIV,,M>- 		;USE PROCESS PRIVILEGE MASK 
		<IS_RESHDR,,M>- 		;IMAGE HEADER BLOCK IS RESIDENT 
		<IS_SHARED,,M>- 		;IMAGE IS SHARED 
		<,5,M>- 			;SPARE BITS 
		<COMPATMOD,,M>- 		;IMAGE IS COMPATABILITY MODE 
		>	
			.BLKW	1 
$DEF	KFI$W_GBLSECCNT		 		;GLOBAL SECTION COUNT IF SHARED 
			.BLKW	1 
$DEF	KFI$L_USECNT		 		;USAGE COUNTER 
			.BLKL	1 
$DEF	KFI$L_WINDOW		 		;WCB ADDRESS IF OPEN 
$DEF	KFI$W_FID		 			;FILE ID 
$DEF	KFI$W_FID_NUM		 		;FILE NUMBER FIELD OF FILE ID 
			.BLKW	1 
$DEF	KFI$W_FID_SEQ		 		;FILE SEQUENCE NUMBER FIELD OF FILE ID 
			.BLKW	1 
$DEF	KFI$L_IMGHDR		 		;IMAGE HEADER ADDRESS IF RESIDENT 
$DEF	KFI$W_FID_RVN		 		;RELATIVE VOLUME NUMBER FIELD OF FILE ID 
			.BLKW	1 
			.BLKW	1 
$DEF	KFI$Q_PROCPRIV		 		;PROCESS PRIVILEGE MASK 
			.BLKQ	1 
$DEF	KFI$C_LENGTH
$DEF	KFI$K_LENGTH					;LENGTH OF FIXED AREA OF KFI ENTRY 
 

	$DEFEND	KFI,$GBL,DEF

	.ENDM	$KFIDEF
 
;+ 
; LOG - LOGICAL NAME BLOCK 
; 
; THERE IS ONE LOGICAL NAME BLOCK FOR EACH LOGICAL NAME ASSIGNMENT IN A 
; SYSTEM. LOGICAL NAME BLOCKS CAN BE LINKED INTO ONE OF THREE TABLES: 
;	1. A PER PROCESS TABLE. 
;	2. A GROUP WIDE TABLE. 
;	3. THE SYSTEM WIDE TABLE. 
;- 
 
	.MACRO	$LOGDEF,$GBL

	$DEFINI	LOG,$GBL

 
$DEF	LOG$L_LTFL		 			;LOGICAL TABLE FORWARD LINK 
			.BLKL	1 
$DEF	LOG$L_LTBL		 			;LOGICAL TABLE BACKWARD LINK 
			.BLKL	1 
$DEF	LOG$W_SIZE		 			;SIZE OF LOG IN BYTES 
			.BLKW	1 
$DEF	LOG$B_TYPE		 			;STRUCTURE TYPE FOR LOG 
			.BLKB	1 
$DEF	LOG$B_TABLE		 			;LOGICAL NAME TABLE TYPE 
			.BLKB	1 
$DEF	LOG$W_GROUP		 			;CREATOR GROUP NUMBER 
			.BLKW	1 
$DEF	LOG$B_AMOD		 			;ACCESS MODE OF CREATOR 
			.BLKB	1 
				 			;SPARE BYTE 
			.BLKB	1 
$DEF	LOG$L_MBXUCB		 		;MAILBOX UCB ADDRESS 
			.BLKL	1 
$DEF	LOG$C_LENGTH
$DEF	LOG$K_LENGTH					;LENGTH OF FIXED PART OF LOG 
$DEF	LOG$T_NAME		 		;START OF LOGICAL NAME 
 
; 
; LOGICAL NAME TABLE NUMBERS 
; 
 
$EQU	LOG$C_SYSTEM	0			;SYSTEM NAME TABLE 
$EQU	LOG$C_GROUP	1				;GROUP NAME TABLE 
$EQU	LOG$C_PROCESS	2			;PROCESS NAME TABLE 
 
; 
; MAXIMUM LENGTH OF LOGICAL NAME STRING 
; 
 
$EQU	LOG$C_NAMLENGTH	64			;MAXIMUM LENGTH OF LOGICAL NAME STRING 
 

	$DEFEND	LOG,$GBL,DEF

	.ENDM	$LOGDEF
 
 
;+ 
; MASSBUS ADAPTER REGISTER OFFSET DEFINITIONS 
;- 
 
	.MACRO	$MBADEF,$GBL

	$DEFINI	MBA,$GBL

 
$DEF	MBA$L_CSR		 			;CONFIGURATION STATUS REGISTER 
	$VIELD	MBA,0,<- 			; CONFIGURATION STATUS REGISTER FIELD DEFINITIONS 
		<CSR_ADCOD,8,>-    		; ADAPTER CODE FIELD 
		<,13,>-    			; RESERVED BITS 
		<CSR_OT,,M>-    		; OVER TEMPERATURE 
		<CSR_PU,,M>-    		; ADAPTER POWER UP 
		<CSR_PD,,M>-    		; ADAPTER POWER DOWN 
		<,2,>-    			; RESERVED BITS 
		<CSR_XMFLT,,M>-    	; TRANSMITTER FAULT 
		<CSR_MT,,M>-    		; MULTIPLE TRANSMITTERS 
		<,1,>-    			; RESERVED BIT 
		<CSR_URD,,M>-    		; UNEXPECTED READ DATA 
		<CSR_WS,,M>-    		; WRITE SEQUENCE DATA 
		<CSR_PE,,M>-  		; SBI PARITY ERROR 
		>			; 
			.BLKL	1 
$DEF	MBA$L_CR		 			;CONTROL REGISTER 
	$VIELD	MBA,0,<- 			; CONTROL REGISTER BIT DEFINITIONS 
		<CR_INIT,,M>-    		; ADAPTER INITIALIZATION 
		<CR_ABORT,,M>-    		; ABORT OPERATION 
		<CR_IE,,M>- 		; INTERRUPT ENABLE 
		>			; 
			.BLKL	1 
$DEF	MBA$L_SR		 			;STATUS REGISTER 
	$VIELD	MBA,0,<- 			; STATUS REGISTER BIT DEFINITIONS 
		<SR_RDTO,,M>-  		; READ DATA TIMEOUT 
		<SR_ISTO,,M>-    		; INTERFACE SEQUENCE TIMEOUT 
		<SR_RDS,,M>-    		; READ DATA SUBSTITUTE 
		<SR_ERCONF,,M>-    	; ERROR CONFIRMATION 
		<SR_INVMAP,,M>-    	; INVALID MAP REGISTER 
		<SR_MAPPE,,M>-    		; MAP PARITY ERROR 
		<SR_MDPE,,M>-    		; MASSBUS DATA PARITY ERROR 
		<SR_MBEXC,,M>-    		; MASSBUS EXCEPTION 
		<SR_MXF,,M>-    		; MISSED TRANSFER ERROR 
		<SR_WCKLWR,,M>-    	; WRITE CHECK ERROR LOWER BYTE 
		<SR_WCKUPR,,M>-    	; WRITE CHECK ERROR UPPER BYTE 
		<SR_DLT,,M>-    		; DATA LATE ERROR 
		<SR_DTABT,,M>-    		; DATA TRANSFER ABORTED 
		<SR_DTCOMP,,M>-    	; DATA TRANSFER COMPLETE 
		<,2,>-    			; RESERVED BITS 
		<SR_ATTN,,M>-    		; MASSBUS ATTENTION 
		<SR_MCPE,,M>-    		; MASSBUS COMTROL PARITY ERROR 
		<SR_NED,,M>-    		; NONEXISTENT DRIVE 
		<SR_PGE,,M>-    		; PROGRAM ERROR 
		<,9,>-    			; RESERVED BITS 
		<SR_CRD,,M>-    		; CORRECTED READ DATA 
		<SR_NRCONF,,M>-    	; NO RESPONSE CONFIRMATION 
		<SR_DTBUSY,,M>-  		; DATA TRANSFER BUSY 
		>			; 
$EQULST MBA$M_,$GBL,0,1,<- 				; ERROR BITS 
		<ERROR,<MBA$M_SR_RDTO!- 		; READ DATA TIMEOUT 
			MBA$M_SR_ISTO!- 		; INTERFACE SEQUENCE TIMEOUT 
			MBA$M_SR_RDS!- 		; READ DATA SUBSTITUTE 
			MBA$M_SR_ERCONF!-    	; ERROR CONFIRMATION 
			MBA$M_SR_INVMAP!-    	; INVALID MAP REGISTER 
			MBA$M_SR_MAPPE!-    	; MAP PARITY ERROR 
			MBA$M_SR_MDPE!- 		; MASSBUS DATA PARITY ERROR 
			MBA$M_SR_MBEXC!-    	; MASSBUS EXCEPTION 
			MBA$M_SR_MXF!-  		; MISSED TRANSFER ERROR 
			MBA$M_SR_WCKLWR!-    	; WRITE CHECK ERROR LOWER BYTE 
			MBA$M_SR_WCKUPR!-    	; WRITE CHECK ERROR UPPER BYTE 
			MBA$M_SR_DLT!-  		; DATA LATE ERROR 
			MBA$M_SR_DTABT!-    	; DATA TRANSFER ABORTED 
			MBA$M_SR_MCPE!- 		; MASSBUS COMTROL PARITY ERROR 
			MBA$M_SR_NED!-  		; NONEXISTENT DRIVE 
			MBA$M_SR_PGE>>-   		; PROGRAM ERROR 
		>
			.BLKL	1 
$DEF	MBA$L_VAR		 			;VIRTUAL ADDRESS REGISTER 
			.BLKL	1 
$DEF	MBA$L_BCR		 			;BYTE COUNT REGISTER 
			.BLKL	1 
				 			; VALUE IS 1024-<4*5> 
			.BLKB	1004 
$DEF	MBA$L_ERB		 			;BASE ADDRESS OF EXTERNAL REGISTERS 
	$VIELD	MBA,0,<- 			; BASE ADDRESS FIELD DEFINITIONS 
		<,7,>- 			; REGISTER OFFSET ADDRESS BITS 
		<ERB_UNIT,3,>- 		; DRIVE UNIT NUMBER 
		>			; 
			.BLKL	1 
				 			; DRIVE REGISTER ADDRESS SPACE 
			.BLKB	12 
$DEF	MBA$L_AS		 			;ATTENTION SUMMARY REGISTER 
			.BLKL	1 
				 			; VALUE IS 2048-. 
					; TO POSITION TO 2048 
			.BLKB	1004 
$DEF	MBA$L_MAP		 		;MAP REGISTERS 
 
			.BLKL	256 

	$DEFEND	MBA,$GBL,DEF

	.ENDM	$MBADEF
 
;+ 
; MOUNTED VOLUME LIST ENTRY. ONE SUCH ENTRY APPEARS IN THE PROCESS MOUNTED 
; VOLUME LIST FOR EACH VOLUME MOUNTED BY THE PROCESS AS /SHARE OR /NOSHARE. 
; IN ADDITION, EACH VOLUME MOUNTED /SYSTEM OR /GROUP HAS AN ENTRY IN THE 
; SYSTEM WIDE MOUNTED VOLUME LIST. 
;- 
 
	.MACRO	$MTLDEF,$GBL

	$DEFINI	MTL,$GBL

$DEF	MTL$L_MTLFL		 				; FORWARD LIST POINTER 
			.BLKL	1 
$DEF	MTL$L_MTLBL		 				; BACK LIST POINTER 
			.BLKL	1 
$DEF	MTL$W_SIZE		 			; STRUCTURE SIZE IN BYTES 
			.BLKW	1 
$DEF	MTL$B_TYPE		 			; STRUCTURE TYPE CODE 
			.BLKB	1 
$DEF	MTL$B_STATUS		 			; STATUS BYTE 
			.BLKB	1 
$DEF	MTL$L_UCB		 				; POINTER TO DEVICE UCB 
			.BLKL	1 
$DEF	MTL$L_LOGNAME		 			; POINTER TO ASSOCIATED LOGICAL NAME 
			.BLKL	1 
				 				; RESERVED LONGWORD 
			.BLKL	1 
$DEF	MTL$C_LENGTH
$DEF	MTL$K_LENGTH					; LENGTH OF STRUCTURE 

	$DEFEND	MTL,$GBL,DEF

	.ENDM	$MTLDEF
 
;+ 
; MUTEX DEFINITIONS 
;- 
	.MACRO	$MTXDEF,$GBL

	$DEFINI	MTX,$GBL

 
				  
	$VIELD	MTX,0,<- 			; BIT DEFINITIONS 
		<,16,>-  
		<WRT,,>- 			; WRITE PENDING OR IN PROGRESS 
		>			; 
$DEF	MTX$W_OWNCNT		 		;OWNERSHIP COUNT 
			.BLKW	1 
$DEF	MTX$W_STS		 			;STATUS BITS 
 
			.BLKW	1 

	$DEFEND	MTX,$GBL,DEF

	.ENDM	$MTXDEF
 
 
;+ 
; MAGNETIC TAPE VOLUME LIST 
; THIS STRUCTURE DESCRIBES THE VOLUMES IN A VOLUME SET 
;- 
	.MACRO	$MVLDEF,$GBL

	$DEFINI	MVL,$GBL

					 
$DEF	MVL$L_VCB		 		;ADDRESS OF VCB 
			.BLKL	1 
				 		;SPARE 
			.BLKL	1 
$DEF	MVL$W_SIZE		 		;SIZE OF STRUCTURE 
			.BLKW	1 
$DEF	MVL$B_TYPE		 		;TYPE OF STRUCTURE 
			.BLKB	1 
$DEF	MVL$B_NVOLS		 		;NUMBER OF VOLUMES IN VOLUME SET 
			.BLKB	1 
$DEF	MVL$C_FIXLEN
$DEF	MVL$K_FIXLEN				;LENGTH OF FIXED AREA OF STRUCTURE 
 
; THE FOLLOWING STRUCTURE IN REPEATED IN MVL FOR EACH VOLUME IN VOLUME SET 
	. = 0  
$DEF	MVL$T_VOLLBL		 	;VOLUME LABEL 
			.BLKB	6 
$DEF	MVL$B_RVN		 		;RELATIVE UNIT NUMBER 
			.BLKB	1 
$DEF	MVL$B_STATUS		 	;STATUS OF VOLUME 
	$VIELD	MVL,0,<-  
		<MOUNTED,,>- 		;VOLUME IS MOUNTED 
		>	
			.BLKB	1 
$DEF	MVL$C_LENGTH
$DEF	MVL$K_LENGTH				;LENGTH OF STRUCTURE 

	$DEFEND	MVL,$GBL,DEF

	.ENDM	$MVLDEF
 
;+ 
; 
; FORMAT OF THE FILE NAME BLOCK. THE FILE NAME BLOCK IS USED AS AN INTERNAL 
; INTERFACE TO THE DIRECTORY SCAN ROUTINE, AND IS ALSO THE FORMAT OF A 
; DIRECTORY RECORD. 
; 
;- 
 
 
	.MACRO	$NMBDEF,$GBL

	$DEFINI	NMB,$GBL

$DEF	NMB$W_FID		 	; FILE ID 
$DEF	NMB$W_FID_NUM		 	; FID - FILE NUMBER 
			.BLKW	1 
$DEF	NMB$W_FID_SEQ		 	; FID - FILE SEQUENCE NUMBER 
			.BLKW	1 
$DEF	NMB$W_FID_RVN		 	; FID - RELATIVE VOLUME NUMBER 
			.BLKW	1 
$DEF	NMB$W_NAME		 	; FILE NAME (RAD-50) 
			.BLKW	3 
$DEF	NMB$W_TYPE		 	; FILE TYPE (RAD-50) 
			.BLKW	1 
$DEF	NMB$W_VERSION		 	; VERSION NUMBER 
			.BLKW	1 
$DEF	NMB$C_DIRENTRY
$DEF	NMB$K_DIRENTRY			; LENGTH OF DIRECTORY ENTRY 
 
$DEF	NMB$W_FLAGS		 	; NAME STATUS FLAGS 
	$VIELD	NMB,0,<-  
		<,3,M>-  
		<ALLVER,,M>- 		; MATCH ALL VERSIONS 
		<ALLTYP,,M>- 		; MATCH ALL TYPES 
		<ALLNAM,,M>- 		; MATCH ALL NAMES 
		<,2,M>-  
		<WILD,,M>- 		; WILD CARDS IN FILE NAME 
		<NEWVER,,M>- 		; MAXIMIZE VERSION NUMBER 
		<SUPERSEDE,,M>- 	; SUPERSEDE EXISTING FILE 
		<FINDFID,,M>- 		; SEARCH FOR FILE ID 
		<,2,M>-  
		<LOWVER,,M>- 		; LOWER VERSION OF FILE EXISTS 
		<HIGHVER,,M>- 		; HIGHER VERSION OF FILE EXISTS 
		>	
			.BLKW	1 
$DEF	NMB$W_CONTEXT		 	; START POINT FOR NEXT FIND 
			.BLKW	1 
$DEF	NMB$C_LENGTH
$DEF	NMB$K_LENGTH			; LENGTH OF NAME BLOCK 

	$DEFEND	NMB,$GBL,DEF

	.ENDM	$NMBDEF
 
;+ 
; DEFINE PERFORMANCE BUFFER HEADER 
;- 
 
	.MACRO	$PBHDEF,$GBL

	$DEFINI	PBH,$GBL

 
$DEF	PBH$L_BUFRFL		 		;BUFFER FORWARD LINK 
			.BLKL	1 
$DEF	PBH$L_BUFRBL		 		;BUFFER BACKWARD LINK 
			.BLKL	1 
$DEF	PBH$W_SIZE		 			;SIZE OF PERFORMANCE DATA BUFFER 
			.BLKW	1 
$DEF	PBH$B_TYPE		 			;DATA STRUCTURE TYPE 
			.BLKB	1 
$DEF	PBH$W_MSGCNT		 		;COUNT OF MESSAGES IN BUFFER 
			.BLKW	1 
$DEF	PBH$C_START
$DEF	PBH$K_START					;START OF DATA AREA 
				 			;DATA AREA 
			.BLKB	499 
$DEF	PBH$C_LENGTH
$DEF	PBH$K_LENGTH					;LENGTH OF PERFORMANCE DATA BUFFER 
 

	$DEFEND	PBH,$GBL,DEF

	.ENDM	$PBHDEF
 
;+ 
; PCB DEFINITIONS 
;- 
 
	.MACRO	$PCBDEF,$GBL

	$DEFINI	PCB,$GBL

 
$DEF	PCB$L_SQFL		 			;STATE QUEUE FORWARD LINK 
			.BLKL	1 
$DEF	PCB$L_SQBL		 			;STATE QUEUE BACKWARD LINK 
			.BLKL	1 
$DEF	PCB$W_SIZE		 			;SIZE IN BYTES 
			.BLKW	1 
$DEF	PCB$B_TYPE		 			;STRUCTURE TYPE CODE FOR PCB 
			.BLKB	1 
$DEF	PCB$B_PRI		 			;PROCESS CURRENT PRIORITY 
			.BLKB	1 
$DEF	PCB$B_ASTACT		 		;ACCESS MODES WITH ACTIVE ASTS 
			.BLKB	1 
$DEF	PCB$B_ASTEN		 			;ACCESS MODES WITH ASTS ENABLED 
			.BLKB	1 
$DEF	PCB$W_MTXCNT		 		;COUNT OF MUTEX SEMAPHORES OWNED 
			.BLKW	1 
$DEF	PCB$L_ASTQFL		 		;AST QUEUE FORWARD LINK(HEAD) 
			.BLKL	1 
$DEF	PCB$L_ASTQBL		 		;AST QUEUE BACK LINK(TAIL) 
			.BLKL	1 
$DEF	PCB$L_PHYPCB		 		;PHYSICAL ADDRESS OF HW PCB 
			.BLKL	1 
$DEF	PCB$L_OWNER		 			;PID OF CREATOR 
			.BLKL	1 
$DEF	PCB$L_UIC		 			;LOGON UIC OF PROCESS 
$DEF	PCB$W_MEM		 			;MEMBER NUMBER IN UIC 
			.BLKW	1 
$DEF	PCB$W_GRP		 			;GROUP NUMBER IN UIC 
			.BLKW	1 
$DEF	PCB$L_WSSWP		 			;SWAP FILE DISK ADDRESS 
			.BLKL	1 
$DEF	PCB$L_STS		 			;PROCESS STATUS FLAGS 
	$VIELD	PCB,0,<- 			; BIT DEFINITIONS 
		<RES,,>-    			; RESIDENT, IN BALANCE SET 
		<DELPEN,,>-    		; DELETE PENDING 
		<FORCPEN,,>-    		; FORCE EXIT PENDING 
		<INQUAN,,>-    		; INITIAL QUANTUM IN PROGRESS 
		<PSWAPM,,>- 			; PROCESS SWAP MODE (1=NOSWAP) 
		<RESPEN,,>-    		; RESUME PENDING, SKIP SUSPEND 
		<SSFEXC,,>-    		; SYSTEM SERVICE EXCEPTION ENABLE (K) 
		<SSFEXCE,,>- 		; SYSTEM SERVICE EXCEPTION ENABLE (E) 
		<SSFEXCS,,>- 		; SYSTEM SERVICE EXCEPTION ENABLE (S) 
		<SSFEXCU,,>- 		; SYSTEM SERVICE EXCEPTION ENABLE (U) 
		<SSRWAIT,,>-    		; SYSTEM SERVICE RESOURCE WAIT DISABLE 
		<SUSPEN,,>-    		; SUSPEND PENDING 
		<WAKEPEN,,>-    		; WAKE PENDING, SKIP HIBERNATE 
		<WALL,,>-    		; WAIT FOR ALL EVENTS IN MASK 
		<BATCH,,>-    		; PROCESS IS A BATCH JOB 
		<NOACNT,,>-    		; NO ACCOUNTING FOR PROCESS 
		<SWPVBN,,>- 			; WRITE FOR SWP VBN IN PROGRESS 
		<ASTPEN,,>- 			; AST PENDING 
		<PHDRES,,>- 			; PROCESS HEADER RESIDENT 
		<HIBER,,>- 			; HIBERNATE AFTER INITIAL IMAGE ACTIVATE 
		<LOGIN,,>- 			; LOGIN WITHOUT READING AUTH FILE 
		>			; END OF BIT DEFINITIONS 
			.BLKL	1 
$DEF	PCB$L_WTIME		 			;TIME AT START OF WAIT 
			.BLKL	1 
$DEF	PCB$W_STATE		 			;PROCESS STATE 
			.BLKW	1 
$DEF	PCB$B_WEFC		 			;WAITING EF CLUSTER NUMBER 
			.BLKB	1 
$DEF	PCB$B_PRIB		 			;BASE PRIORITY 
			.BLKB	1 
$DEF	PCB$W_APTCNT		 		;ACTIVE PAGE TABLE COUNT 
			.BLKW	1 
$DEF	PCB$W_TMBU		 			;TERMINATION MAILBOX UNIT NO. 
			.BLKW	1 
$DEF	PCB$W_GPGCNT		 		;GLOBAL PAGE COUNT IN WS 
			.BLKW	1 
$DEF	PCB$W_PPGCNT		 		;PROCESS PAGE COUNT IN WS 
			.BLKW	1 
$DEF	PCB$W_ASTCNT		 		;AST COUNT REMAINING 
			.BLKW	1 
$DEF	PCB$W_BIOCNT		 		;BUFFERED I/O COUNT REMAINING 
			.BLKW	1 
$DEF	PCB$W_BIOLM		 			;BUFFERED I/O LIMIT 
			.BLKW	1 
$DEF	PCB$W_BYTCNT		 		;BYTE COUNT REMAINING FOR BUFFERED I/O 
			.BLKW	1 
$DEF	PCB$W_DIOCNT		 		;DIRECT I/O COUNT REMAINING 
			.BLKW	1 
$DEF	PCB$W_DIOLM		 			;DIRECT I/O COUNT LIMIT 
			.BLKW	1 
$DEF	PCB$W_FILCNT		 		;COUNT REMAINING OF OPEN FILES 
			.BLKW	1 
$DEF	PCB$W_TQCNT		 			;COUNT REMAINING OF TIMER QUEUE ENTRIES 
			.BLKW	1 
$DEF	PCB$L_PQB		 			;POINTER TO PROCESS QUOTA BLOCK 
					;(PROCESS CREATION ONLY) 
$DEF	PCB$L_EFWM		 			;EVENT FLAG WAIT MASK 
			.BLKL	1 
$DEF	PCB$L_EFCS		 			;LOCAL EVENT FLAG CLUSTER,SYSTEM 
			.BLKL	1 
$DEF	PCB$L_EFCU		 			;LOCAL EVENT FLAG CLUSTER, USER 
			.BLKL	1 
$DEF	PCB$L_EFC2P		 			;POINTER TO GLOBAL CLUSTER #2 
			.BLKL	1 
$DEF	PCB$L_EFC3P		 			;POINTER TO GLOBAL CLUSTER #3 
			.BLKL	1 
$DEF	PCB$L_PID		 			;PROCESS IDENTIFICATION 
			.BLKL	1 
$DEF	PCB$L_PHD		 			;PROCESS HEADER ADDRESS 
			.BLKL	1 
$DEF	PCB$W_BYTLM		 			;BYTE COUNT LIMIT 
			.BLKW	1 
$DEF	PCB$W_PRCCNT		 		;SUBPROCESS COUNT 
			.BLKW	1 
$DEF	PCB$T_LNAME		 		;LOGICAL NAME OF PROCESS 
			.BLKB	16 
$DEF	PCB$C_LENGTH
$DEF	PCB$K_LENGTH					;LENGTH OF PCB 
 

	$DEFEND	PCB,$GBL,DEF

	.ENDM	$PCBDEF
 
;+ 
; DEFINE DEVICE PERFORMANCE DATA BLOCK 
;- 
 
	.MACRO	$PDBDEF,$GBL

	$DEFINI	PDB,$GBL

 
$DEF	PDB$L_FREEFL		 		;FREE BUFFER LISTHEAD FORWARD LINK 
			.BLKL	1 
$DEF	PDB$L_FREEBL		 		;FREE BUFFER LISTHEAD BACKLINK 
			.BLKL	1 
$DEF	PDB$W_SIZE		 			;SIZE OF DATA STRUCTURE 
			.BLKW	1 
$DEF	PDB$B_TYPE		 			;TYPE OF DATA STRUCTURE 
			.BLKB	1 
$DEF	PDB$B_OVERRUN		 		;OVERRUN INDICATOR 
			.BLKB	1 
$DEF	PDB$L_FILLFL		 		;FILLED BUFFER LISTHEAD FORWARD LINK 
			.BLKL	1 
$DEF	PDB$L_FILLBL		 		;FILLED BUFFER LISTHEAD BACKWARD LINK 
			.BLKL	1 
$DEF	PDB$L_CURBUF		 		;ADDRESS OF CURRENT BUFFER 
			.BLKL	1 
$DEF	PDB$L_NXTBUF		 		;ADDRESS OF NEXT LOCATION IN BUFFER 
			.BLKL	1 
$DEF	PDB$L_ENDBUF		 		;ADDRESS OF END OF BUFFER 
			.BLKL	1 
$DEF	PDB$L_PID		 			;PROCESS ID OF DATA COLLECTION PROCESS 
			.BLKL	1 
$DEF	PDB$B_DEVCLASS		 		;DEVICE CLASS SELECTION 
			.BLKB	1 
$DEF	PDB$B_DEVTYPE		 		;DEVICE TYPE SELECTION 
			.BLKB	1 
$DEF	PDB$W_ANDM		 			;STATUS SELECTION 'AND' MASK 
			.BLKW	1 
$DEF	PDB$W_XORM		 			;STATUS SELECTION 'XOR' MASK 
			.BLKW	1 
$DEF	PDB$W_BUFCNT		 		;COUNT OF FILLED BUFFERS 
			.BLKW	1 
$DEF	PDB$Q_FUNC		 			;SELECTION FUNCTION MASK 
			.BLKQ	1 
$DEF	PDB$C_LENGTH
$DEF	PDB$K_LENGTH					;LENGTH OF DATA CONTROL BLOCK 
 

	$DEFEND	PDB,$GBL,DEF

	.ENDM	$PDBDEF
 
 
;+ 
; PAGE FILE CONTROL BLOCK 
;- 
 
	.MACRO	$PFLDEF,$GBL

	$DEFINI	PFL,$GBL

 
; 
; ***** L_VBN, L_WINDOW, AND B_PFC MUST BE THE SAME OFFSET VALUES AS THE 
; ***** EQUIVALENTLY NAMED OFFSETS IN $SECDEF 
; 
$DEF	PFL$L_BITMAP		 		;ADDRESS OF START OF BIT MAP 
					;BIT = 1 MEANS AVAILABLE 
			.BLKL	1 
$DEF	PFL$L_STARTBYTE		 		;STARTING BYTE OFFSET TO SCAN 
			.BLKL	1 
$DEF	PFL$W_SIZE		 			;SIZE OF PAGE FILE CONTROL BLOCK 
			.BLKW	1 
$DEF	PFL$B_TYPE		 			;PAGE FILE CONTROL BLOCK TYPE CODE 
			.BLKB	1 
$DEF	PFL$B_PFC		 			;PAGE FAULT CLUSTER FOR PAGE READS 
			.BLKB	1 
$DEF	PFL$L_WINDOW		 		;WINDOW ADDRESS 
			.BLKL	1 
$DEF	PFL$L_VBN		 			;BASE VBN 
			.BLKL	1 
$DEF	PFL$L_BITMAPSIZ		 		;SIZE IN BYTES OF PAGE FILE 
			.BLKL	1 
$DEF	PFL$L_FREPAGCNT		 		;COUNT - 1 OF PAGES WHICH MAY BE ALLOCATED 
			.BLKL	1 
$DEF	PFL$L_RESERVCNT		 		;COUNT - 1 OF PAGES WHICH MAY BE RESERVED 
			.BLKL	1 
$DEF	PFL$C_LENGTH
$DEF	PFL$K_LENGTH					;SIZE OF PAGE FILE CONTROL BLOCK 
 

	$DEFEND	PFL,$GBL,DEF

	.ENDM	$PFLDEF
 
 
;+ 
; PFN DATA BASE DEFINITIONS 
;- 
 
	.MACRO	$PFNDEF,$GBL

	$DEFINI	PFN,$GBL

; 
; VIELD DEFINITIONS IN PFN$AB_STATE 
; 
	$VIELD	PFN,0,<-  
		<LOC,3,M>- 		;LOCATION OF PAGE 
-; 
-; ***** THE FOLLOWING SPARE BIT MUST BE USED FOR EXTENSION OF THE LOC FIELD 
-; ***** OR ALTERNATIVELY THE DELCON BIT MUST BE MOVED ADJACENT TO LOC 
-; 
		<,1,>- 			;NOT IN USE 
		<DELCON,,M>- 		;DELETE PFN CONTENTS WHEN REF=0 
		<,2,>- 			;NOT IN USE 
		<MODIFY,,M>- 		;MODIFY BIT 
		>	
; 
; VIELD DEFINITIONS IN PFN$AB_TYPE 
; 
	$VIELD	PFN,0,<-  
		<PAGTYP,3,M>- 		;PAGE TYPE 
		<,1,>- 			;NOT IN USE 
		<COLLISION,,M>- 		;EMPTY COLLISION QUEUE WHEN PAGE READ COMPLETE 
		<BADPAG,,M>- 		;BAD PAGE BIT 
		<RPTEVT,,M>- 		;REPORT EVENT ON I/O COMPLETE 
		>	
; 
; VIELD DEFINITIONS IN PFN$AL_BAK 
; 
	$VIELD	PFN,0,<-  
		<BAK,23,M>- 		;BACKUP ADDRESS 
		<GBLBAK,1,M>- 		;GLOBAL BACKING STORE ADDRESS 
		<PGFLX,8,M>- 		;PAGE FILE INDEX 
		>	
; 
; LOCATION VIELD VALUES 
; 
$EQULST PFN$C_,$GBL,0,1,<-  
		<FREPAGLST,0>- 		;ON FREE PAGE LIST 
		<MFYPAGLST,1>- 		;ON MODIFIED PAGE LIST 
		<BADPAGLST,2>- 		;ON BAD PAGE LIST 
		<RELPEND,3>- 		;RELEASE PENDING 
-					;WHEN REFCNT = 0 RELEASE PFN 
		<RDERR,4>- 			;READ ERROR WHILE PAGING IN 
		<WRTINPROG,5>- 		;WRITE IN PROGRESS (BY MFY PAG WRITER) 
		<RDINPROG,6>- 		;READ IN PROGRESS (PAGE IN) 
		<ACTIVE,7>- 		;PAGE IS ACTIVE AND VALID 
		>
; 
; PAGE TYPE VIELD DEFINITIONS 
; 
$EQULST PFN$C_,$GBL,0,1,<-  
		<PROCESS,0>- 		;PROCESS PAGE 
		<SYSTEM,1>- 		;SYSTEM PAGE 
		<GLOBAL,2>- 		;GLOBAL PAGE (READ ONLY) 
		<GBLWRT,3>- 		;GLOBAL WRITABLE PAGE 
		<PPGTBL,4>- 		;PROCESS PAGE TABLE 
		<GPGTBL,5>- 		;GLOBAL PAGE TABLE 
		>
 

	$DEFEND	PFN,$GBL,DEF

	.ENDM	$PFNDEF
 
;+ 
; A PROCESS HEADER CONTAINS THE SWAPPABLE SCHEDULER AND 
; MEMORY MANAGEMENT DATA BASES FOR A PROCESS IN THE 
; BALANCE SET. 
;- 
 
	.MACRO	$PHDDEF,$GBL

	$DEFINI	PHD,$GBL

 
$DEF	PHD$Q_PRIVMSK		 		;PRIVILEGE MASK 
; 
; WORKING SET LIST POINTERS - THESE CONTAIN LONG WORD OFFSETS FROM THE 
; BEGINNING OF THE PROCESS HEADER. 
; 
			.BLKQ	1 
$DEF	PHD$W_WSLIST		 		;1ST WORKING SET LIST ENTRY 
			.BLKW	1 
$DEF	PHD$W_WSAUTH		 		;AUTHORIZED WORKING SET SIZE 
			.BLKW	1 
$DEF	PHD$W_WSLOCK		 		;1ST LOCKED WORKING SET LIST ENTRY 
			.BLKW	1 
$DEF	PHD$W_WSDYN		 			;1ST DYNAMIC WORKING SET LIST ENTRY 
			.BLKW	1 
$DEF	PHD$W_WSNEXT		 		;LAST WSL ENTRY REPLACED 
			.BLKW	1 
$DEF	PHD$W_WSLAST		 		;LAST WSL ENTRY IN LIST 
			.BLKW	1 
				 			;SPARE LONG WORD 
; 
; THE FOLLOWING TWO WORDS SPECIFY THE MAXIMUM AND INITIAL WORKING SET 
; SIZES FOR THE PROCESS.  RATHER THAN CONTAINING THE COUNT OF PAGES 
; THEY CONTAIN THE LONG WORD INDEX TO WHAT WOULD BE THE LAST WORKING 
; SET LIST ENTRY. 
; 
			.BLKL	1 
$DEF	PHD$W_WSQUOTA		 		;QUOTA ON WORKING SET SIZE 
			.BLKW	1 
$DEF	PHD$W_DFWSCNT		 		;DEFAULT WORKING SET SIZE 
			.BLKW	1 
$DEF	PHD$L_PAGFIL		 		;PAGING FILE INDEX, LONG WORD REF 
			.BLKB	3 
$DEF	PHD$B_PAGFIL		 		;PAGING FILE INDEX, BYTE REFERENCE 
; 
; PROCESS SECTION TABLE DATA BASE 
;	PSTBASOFF IS THE BYTE OFFSET (INTEGRAL # OF PAGES) FROM THE 
; BEGINNING OF THE PROCESS HEADER TO THE 1ST LONG WORD BEYOND THE 
; PROCESS SECTION TABLE. 
;	THE WORDS, PSTLAST AND PSTFREE ARE SECTION TABLE INDICES WHICH 
; ARE THE NEGATIVE LONG WORD INDEX FROM THE END OF THE SECTION TABLE TO 
; THE SECTION TABLE ENTRY. 
; 
			.BLKB	1 
$DEF	PHD$L_PSTBASOFF		 		;BYTE OFFSET TO BASE OF PST 
					;FIRST LONG WORD NOT IN PST 
					;PST GROWS BACKWARDS FROM HERE 
$DEF	PHD$W_PST		 			;*****TEMP***** 
			.BLKW	1 
			.BLKW	1 
$DEF	PHD$W_PSTLAST		 		;END OF PROCESS SECTION TABLE 
					;ADR OF LAST PSTE ALLOCATED 
			.BLKW	1 
$DEF	PHD$W_PSTFREE		 		;HEAD OF FREE PSTE LIST 
; 
; CREATE/DELETE PAGE CONTEXT 
; 
			.BLKW	1 
$DEF	PHD$L_FREP0VA		 		;1ST FREE VIRTUAL ADR AT END OF P0 SPACE 
					;***** MUST BE QUAD WORD AWAY FROM FREP1VA 
			.BLKL	1 
$DEF	PHD$L_FREPTECNT		 		;CNT OF FREE PTE'S BETWEEN THE ENDS 
					;0F THE P0 AND P1 PAGE TABLES 
			.BLKL	1 
$DEF	PHD$L_FREP1VA		 		;1ST FREE VIRTUAL ADR AT END OF P1 SPACE 
			.BLKL	1 
$DEF	PHD$L_PGFLCNT		 		;COUNT OF PAGE FILE PAGES THAT 
					;MAY STILL BE CREATED 
			.BLKL	1 
$DEF	PHD$B_DFPFC		 			;DEFAULT PAGE FAULT CLUSTER 
			.BLKB	1 
				 			;SPARE BYTE 
			.BLKB	1 
$DEF	PHD$W_FLAGS		 			;FLAGS WORD 
$DEF	PHD$W_PFMFLG		 		;***** DELETE THIS NAME WHEN READY 
	$VIELD	PHD,0,<-  
		<PFMFLG,,M>- 			;PAGE FAULT MONITORING ENABLED 
		<DALCSTX,,M>- 			;NEED TO DEALLOCATE SECTION INDICES 
		>	
; 
; QUOTAS AND LIMITS 
; 
			.BLKW	1 
$DEF	PHD$L_CPUTIM		 		;ACCUMULATED CPU TIME CHARGED 
			.BLKL	1 
$DEF	PHD$W_QUANT		 			;ACCUMULATED CPU TIME SINCE 
					;LAST QUANTUM OVERFLOW 
			.BLKW	1 
$DEF	PHD$W_PRCLM		 			;SUBPROCESS QUOTA 
			.BLKW	1 
$DEF	PHD$W_ASTLM		 			;AST LIMIT 
 
			.BLKW	1 
$DEF	PHD$W_PHVINDEX		 		;PROCESS HEADER VECTOR INDEX 
			.BLKW	1 
$DEF	PHD$W_BAK		 			;POINTER TO BACKUP ADDRESS VECTOR FOR 
					;PROCESS HEADER PAGES 
			.BLKW	1 
$DEF	PHD$W_WSLX		 			;POINTER TO WORKING SET LIST INDEX 
					;SAVE AREA 
			.BLKW	1 
$DEF	PHD$L_PAGEFLTS		 		;COUNT OF PAGE FAULTS 
 
; 
; THE NEXT TWO I/O COUNTERS MUST BE ADJACENT 
; 
 
			.BLKL	1 
$DEF	PHD$L_DIOCNT		 		;DIRECT I/O COUNT 
			.BLKL	1 
$DEF	PHD$L_BIOCNT		 		;BUFFERED I/O COUNT 
 
			.BLKL	1 
$DEF	PHD$L_CPULIM		 		;LIMIT ON CPU TIME FOR PROCESS 
			.BLKL	1 
$DEF	PHD$L_PGFLQUOTA		 		;MAXIMUM VIRTUAL PAGE COUNT 
			.BLKL	1 
$DEF	PHD$W_FILLM		 			;OPEN FILE LIMIT 
			.BLKW	1 
$DEF	PHD$W_TQLM		 			;TIMER QUEUE ENTRY LIMIT 
; 
; PAGE TABLE STATISTICS 
; 
			.BLKW	1 
$DEF	PHD$L_PTWSLELCK		 		; BYTE OFFSET TO BYTE ARRAY OF COUNTS 
					; OF LOCKED WSLE'S IN THIS PAGE TABLE 
			.BLKL	1 
$DEF	PHD$L_PTWSLEVAL		 		; BYTE OFFSET TO BYTE ARRAY OF COUNTS 
					; OF VALID WSLE'S IN THIS PAGE TABLE 
			.BLKL	1 
$DEF	PHD$W_PTCNTLCK		 		; COUNT OF PAGE TABLES CONTAINING 
					; 1 OR MORE LOCKED WSLE 
			.BLKW	1 
$DEF	PHD$W_PTCNTVAL		 		; COUNT OF PAGE TABLES CONTAINING 
					; 1 OR MORE VALID WSLE 
			.BLKW	1 
$DEF	PHD$W_PTCNTACT		 		; COUNT OF ACTIVE PAGE TABLES 
			.BLKW	1 
$DEF	PHD$W_PTCNTMAX		 		; MAX COUNT OF PAGE TABLES 
					; WHICH HAVE NON-ZERO PTE'S 
			.BLKW	1 
$DEF	PHD$W_WSFLUID		 		; GUARANTEED NUMBER OF FLUID WS PAGES 
			.BLKW	1 
$DEF	PHD$W_EXTDYNWS		 		; EXTRA DYNAMIC WORKING SET LIST ENTRIES 
					; ABOVE REQUIRED WSFLUID MINIMUM 
; 
; HARDWARE PCB PORTION OF PROCESS HEADER 
; 
			.BLKW	1 
$DEF	PHD$L_PCB		 			;HARDWARE PCB 
$DEF	PHD$L_KSP		 			;KERNEL STACK POINTER 
			.BLKL	1 
$DEF	PHD$L_ESP		 			;EXEC STACK POINTER 
			.BLKL	1 
$DEF	PHD$L_SSP		 			;SUPERVISOR STACK POINTER 
			.BLKL	1 
$DEF	PHD$L_USP		 			;USER STACK POINTER 
			.BLKL	1 
$DEF	PHD$L_R0		 			;R0 
			.BLKL	1 
$DEF	PHD$L_R1		 			;R1 
			.BLKL	1 
$DEF	PHD$L_R2		 			;R2 
			.BLKL	1 
$DEF	PHD$L_R3		 			;R3 
			.BLKL	1 
$DEF	PHD$L_R4		 			;R4 
			.BLKL	1 
$DEF	PHD$L_R5		 			;R5 
			.BLKL	1 
$DEF	PHD$L_R6		 			;R6 
			.BLKL	1 
$DEF	PHD$L_R7		 			;R7 
			.BLKL	1 
$DEF	PHD$L_R8		 			;R8 
			.BLKL	1 
$DEF	PHD$L_R9		 			;R9 
			.BLKL	1 
$DEF	PHD$L_R10		 			;R10 
			.BLKL	1 
$DEF	PHD$L_R11		 			;R11 
			.BLKL	1 
$DEF	PHD$L_R12		 			;R12 
			.BLKL	1 
$DEF	PHD$L_R13		 			;R13 
			.BLKL	1 
$DEF	PHD$L_PC		 			;PC 
			.BLKL	1 
$DEF	PHD$L_PSL		 			;PROGRAM STATUS LONGWORD 
			.BLKL	1 
$DEF	PHD$L_P0BR		 			;P0 BASE REGISTER 
			.BLKL	1 
$DEF	PHD$L_P0LRASTL		 		;P0LR, ASTLVL 
	$VIELD	PHD,0,<- 			; VIELDS IN P0LRASTL 
		<P0LR,24,>- 			;P0 LENGTH REGISTER 
		<ASTLVL,8,>- 		; AST LEVEL 
		>			; END OF VIELDS 
			.BLKB	3 
$DEF	PHD$B_ASTLVL		 		;AST LEVEL SUBFIELD 
			.BLKB	1 
$DEF	PHD$L_P1BR		 			;P1 BASE REGISTER 
			.BLKL	1 
$DEF	PHD$L_P1LR		 			;P1 LENGTH REGISTER 
; 
; END OF FIXED PORTION OF PROCESS HEADER 
; 
			.BLKL	1 
$DEF	PHD$C_LENGTH
$DEF	PHD$K_LENGTH					;LENGTH OF FIXED PART OF PROCESS HEADER 
$DEF	PHD$L_WSL		 			;FIRST WORKING SET LIST ENTRY 
 
			.BLKL	1 

	$DEFEND	PHD,$GBL,DEF

	.ENDM	$PHDDEF
 
;+ 
; PERFORMANCE I/O INFORMATION BLOCK 
;- 
 
	.MACRO	$PIBDEF,$GBL

	$DEFINI	PIB,$GBL

 
$DEF	PIB$B_TYPE		 			;TYPE OF ENTRY 
			 
 
; 
; START OF I/O REQUEST TRANSACTION MESSAGE BLOCK 
; 
 
			.BLKB	1 
	. = 0  
			.BLKB	1 
$DEF	PIB$B_SRQ_PRI		 		;BASE PRIORITY OF PROCESS 
			.BLKB	1 
				 			;SPARE UNUSED WORD 
			.BLKW	1 
$DEF	PIB$L_SRQ_TIME		 		;TIME OF I/O TRANSACTION 
			.BLKL	1 
$DEF	PIB$L_SRQ_SEQN		 		;SEQUENCE NUMBER OF I/O TRANSACTION 
			.BLKL	1 
$DEF	PIB$L_SRQ_PID		 		;REQUESTER PID 
			.BLKL	1 
$DEF	PIB$L_SRQ_UCB		 		;ADDRESS OF DEVICE UCB 
			.BLKL	1 
$DEF	PIB$W_SRQ_FUNC		 		;I/O FUNCTION CODE 
			.BLKW	1 
$DEF	PIB$W_SRQ_STS		 		;I/O PACKET STATUS 
			.BLKW	1 
$DEF	PIB$C_SRQ_SIZE
$DEF	PIB$K_SRQ_SIZE				;LENGTH OF START I/O MESSAGE 
 
; 
; START OF I/O TRANSACTION MESSAGE BLOCK 
; 
 
	. = 0  
			.BLKB	1 
				 			;SPARE UNUSED BYTE 
			.BLKB	1 
$DEF	PIB$W_SIO_BCNT		 		;TRANSFER BYTE COUNT 
			.BLKW	1 
$DEF	PIB$L_SIO_TIME		 		;TIME OF TRANSACTION 
			.BLKL	1 
$DEF	PIB$L_SIO_SEQN		 		;SEQUENCE NUMBER OF TRANSACTION 
			.BLKL	1 
$DEF	PIB$L_SIO_MEDIA		 		;TRANSFER MEDIA ADDRESS 
			.BLKL	1 
$DEF	PIB$C_SIO_SIZE
$DEF	PIB$K_SIO_SIZE				;LENGTH OF I/O TRANSACTION MESSAGE 
 
; 
; END OF I/O TRANSACTION MESSAGE BLOCK 
; 
 
	. = 0  
			.BLKB	1 
				 			;SPARE UNUSED BYTES 
			.BLKB	3 
$DEF	PIB$L_EIO_TIME		 		;TIME OF TRANSACTION 
			.BLKL	1 
$DEF	PIB$L_EIO_SEQN		 		;SEQUENCE NUMBER OF TRANSACTION 
			.BLKL	1 
$DEF	PIB$Q_EIO_IOSB		 		;FINAL I/O STATUS 
			.BLKQ	1 
$DEF	PIB$C_EIO_SIZE
$DEF	PIB$K_EIO_SIZE				;LENGTH OF END OF I/O TRANSACTION 
 
; 
; END OF I/O REQUEST MESSAGE BLOCK 
; 
 
	. = 0  
			.BLKB	1 
				 			;SPARE UNUSED BYTES 
			.BLKB	3 
$DEF	PIB$L_ERQ_TIME		 		;TIME OF TRANSACTION 
			.BLKL	1 
$DEF	PIB$L_ERQ_SEQN		 		;SEQUENCE NUMBER OF TRANSACTION 
			.BLKL	1 
$DEF	PIB$C_ERQ_SIZE
$DEF	PIB$K_ERQ_SIZE				;LENGTH OF END OF I/O REQUEST TRANSACTION 
 
; 
; I/O MESSAGE BLOCK ENTRY TYPE CODES 
; 
 
$EQU	PIB$K_SRQ	0				;START OF I/O REQUEST 
$EQU	PIB$K_SIO	1				;START OF I/O TRANSACTION 
$EQU	PIB$K_EIO	2				;END OF I/O TRANSACTION 
$EQU	PIB$K_ERQ	3				;END OF I/O REQUEST 
 

	$DEFEND	PIB,$GBL,DEF

	.ENDM	$PIBDEF
 
;+ 
; PAGE FAULT MONITOR CONTROL BLOCK 
;- 
 
	.MACRO	$PMBDEF,$GBL

	$DEFINI	PMB,$GBL

 
$DEF	PMB$L_CURBUF		 		;CURRENT BUFFER POINTER 
			.BLKL	1 
$DEF	PMB$L_BUFEND		 		;CURRENT BUFFER END 
			.BLKL	1 
$DEF	PMB$W_SIZE		 			;BLOCK SIZE FIELD 
			.BLKW	1 
$DEF	PMB$W_MBXCHN		 		;SUBPROCESS MAILBOX CHANNEL 
			.BLKW	1 
$DEF	PMB$Q_HDR		 			;FREE BUFFER QUEUE HEADER 
			.BLKQ	1 
$DEF	PMB$Q_SBPHDR		 		;SUBRPCESS QUEUE HEADER 
			.BLKQ	1 
$DEF	PMB$L_PID		 			;SUBPROCESS PID 
			.BLKL	1 
$DEF	PMB$B_OVRRUN		 		;DATA OVERRUN INDICATOR 
			.BLKB	1 
$DEF	PMB$C_LENGTH
$DEF	PMB$K_LENGTH					;LENGTH OF PMB 

	$DEFEND	PMB,$GBL,DEF

	.ENDM	$PMBDEF
 
;+ 
; PROCESS QUOTA BLOCK DEFINITION 
;- 
 
	.MACRO	$PQBDEF,$GBL

	$DEFINI	PQB,$GBL

 
$DEF	PQB$Q_PRVMSK		 		;PRIVILEGE MASK 
			.BLKQ	1 
$DEF	PQB$W_SIZE		 			;SIZE OF PQB IN BYTES 
			.BLKW	1 
$DEF	PQB$B_TYPE		 			;STRUCTURE TYPE CODE 
			.BLKB	1 
$DEF	PQB$B_STS		 			;STATUS FLAGS 
			.BLKB	1 
$DEF	PQB$T_IMAGE		 		;IMAGE NAME FOR NEW PROCESS 
			.BLKB	64 
$DEF	PQB$T_ERROR		 		;LOGICAL NAME FOR ERROR OUTPUT 
			.BLKB	64 
$DEF	PQB$T_INPUT		 		;LOGICAL NAME FOR INPUT 
			.BLKB	64 
$DEF	PQB$T_OUTPUT		 		;LOGICAL NAME FOR OUTPUT 
			.BLKB	64 
$DEF	PQB$T_DISK		 		;LOGICAL NAME FOR SYS$DISK 
			.BLKB	64 
$DEF	PQB$L_ASTLM		 			;AST LIMIT 
			.BLKL	1 
$DEF	PQB$L_BIOLM		 			;BUFFERED I/O LIMIT 
			.BLKL	1 
$DEF	PQB$L_BYTLM		 			;BUFFERED I/O LIMIT 
			.BLKL	1 
$DEF	PQB$L_CPULM		 			;CPU TIME LIMIT 
			.BLKL	1 
$DEF	PQB$L_DIOLM		 			;DIRECT I/O LIMIT 
			.BLKL	1 
$DEF	PQB$L_FILLM		 			;OPEN FILE LIMIT 
			.BLKL	1 
$DEF	PQB$L_PGFLQUOTA		 		;PAGING FILE QUOTA 
			.BLKL	1 
$DEF	PQB$L_PRCLM		 			;SUB-PROCESS LIMIT 
			.BLKL	1 
$DEF	PQB$L_TQELM		 			;TIMER QUEUE ENTRY LIMIT 
			.BLKL	1 
$DEF	PQB$L_WSQUOTA		 		;WORKING SET QUOTA 
			.BLKL	1 
$DEF	PQB$L_WSDEFAULT		 		;WORKING SET DEFAULT 
			.BLKL	1 
$DEF	PQB$T_USERNAME		 		;USERNAME FOR SUBPROCESS 
			.BLKB	12 
$DEF	PQB$T_ACCOUNT		 		;ACCOUNT NAME FOR SUBPROCESS 
			.BLKB	8 
$DEF	PQB$T_DDSTRING		 		;DEFAULT DIRECTORY STRING 
			.BLKB	32 
$DEF	PQB$C_LENGTH
$DEF	PQB$K_LENGTH					;LENGTH OF PROCESS QUOTA BLOCK 
 

	$DEFEND	PQB,$GBL,DEF

	.ENDM	$PQBDEF
 
 
;+ 
; PRIORITY INCREMENT CLASS DEFINITIONS 
;- 
 
	.MACRO	$PRIDEF,$GBL

	$DEFINI	PRI,$GBL

 
$EQULST PRI$_,$GBL,0,1,<-  
		<NULL,0>- 				; NO PRIORITY INCREMENT 
		<IOCOM,1>- 				; DIRECT I/O COMPLETION 
		<RESAVL,2>- 			; RESOURCE AVAIL 
		<TOCOM,3>- 				; TERMINAL OUTPUT COMPLETE 
		<TICOM,4>- 				; TERMINAL INPUT COMPLETE 
		<TIMER,2>- 				; TIMER INTERVAL COMPLETION 
		>

	$DEFEND	PRI,$GBL,DEF

	.ENDM	$PRIDEF
 
;+ 
; PRIVILEGE BIT DEFINITIONS 
;- 
 
	.MACRO	$PRVDEF,$GBL

	$DEFINI	PRV,$GBL

 
	$VIELD	PRV,0,<-  
- ; ***** THE FOLLOWING TWO BITS MUST BE ADJACENT 
		<CMKRNL,,>- 		; MAY CHANGE MODE TO KERNEL 
		<CMEXEC,,>-  		; MAY CHANGE MODE TO EXEC 
-; ***** THE PRECEEDING TWO BITS MUST BE ADJACENT 
-; ***** THE FOLLOWING TWO BITS MUST BE ADJACENT 
		<SYSNAM,,>-  		; MAY INSERT IN SYSTEM LOGICAL NAME TABLE 
		<GRPNAM,,>-  		; MAY INSERT IN GROUP LOGICAL NAME TABLE 
-; ***** THE PRECEEDING TWO BITS MUST BE ADJACENT 
		<ALLSPOOL,,>- 	;MAY ALLOCATE SPOOLED DEVICE 
		<DETACH,,>-  		; MAY CREATE DETACHED PROCESSES 
		<DIAGNOSE,,>- 	; MAY DIAGNOSE DEVICES 
		<LOG_IO,,>- 		; MAY DO LOGICAL I/O 
		<GROUP,,>- 		; MAY AFFECT OTHER PROCESSES IN SAME GROUP 
		<NOACNT,,>-  		; MAY SUPPRESS ACCOUNTING MESSAGE 
		<PRMCEB,,>-  		; MAY CREATE PERMANENT COMMON EVENT CLUSTERS 
		<PRMMBX,,>-  		; MAY CREATE PERMANENT MAILBOX 
		<PSWAPM,,>-  		; MAY CHANGE PROCESS SWAP MODE 
		<SETPRI,,>-  		; MAY SET ANY PRIORITY VALUE 
		<SETPRV,,>-  		; MAY SET ANY PRIVILEGE BITS 
		<TMPMBX,,>-  		; MAY CREATE TEMPORARY MAILBOX 
		<WORLD,,>- 		; MAY AFFECT OTHER PROCESSES IN THE WORLD 
		<DEVCHAR,,>- 		; MAY CHANGE THE CHARACTERISTICS OF A DEVICE 
		<OPER,,>- 		; OPERATOR PRIVILEGE 
		<EXQUOTA,,>- 		; MAY EXCEED QUOTAS 
		<NETMBX,,>- 		; MAY CREATE NETWORK DEVICE 
		<VOLPRO,,>- 		; MAY OVERRIDE VOLUME PROTECTION 
		<PHY_IO,,>- 		; MAY DO PHYSICAL I/O 
		<BUGCHK,,>- 		; MAY MAKE BUG CHECK ERROR LOG ENTRIES 
		<PRMGBL,,>- 		; MAY CREATE PERMANENT GLOBAL SECTIONS 
		<SYSGBL,,>- 		; MAY CREATE SYSTEM WIDE GLOBAL SECTIONS 
		>	

	$DEFEND	PRV,$GBL,DEF

	.ENDM	$PRVDEF
 
;+ 
; DEFINE PAGE TABLE ENTRY VIELDS AND VALUES 
;- 
	.MACRO	$PTEDEF,$GBL

	$DEFINI	PTE,$GBL

; 
; VIELD DEFINITION FOR "VALID" PTE'S 
; 
	$VIELD	PTE,0,<-  
		<PFN,21,M>- 		; PAGE FRAME NUMBER 
		<,2,>- 			; RESERVED 
		<OWN,2,M>- 		; MODE OF THE OWNER 
		<,1,>- 			; RESERVED 
		<MODIFY,,M>- 		; MODIFY BIT 
		<PROT,4,M>- 		; PROTECTION 
		<VALID,,M>- 		; VALID BIT 
		>	
; 
; VIELD DEFINITIONS FOR VARIOUS INVALID FORMS OF PTE 
; 
	$VIELD	PTE,0,<- 				; SECTION TABLE INDEX FORM 
		<STX,16,>- 			; SECTION TABLE INDEX 
		<CRF,,M>- 			; COPY ON REFERENCE 
		<DZRO,,M>- 		; DEMAND ZERO 
		<WRT,,M>- 			; SECTION FILE IS ACCESSED FOR WRITING 
		<,3,>- 			; SPARE 
		<TYP0,,M>- 		; LOW ORDER BIT OF PTE TYPE 
		<,2,>- 			; OWNER FIELD 
		<,1,>- 			; RESERVED 
		<TYP1,,M>- 		; HIGH ORDER BIT OF PTE TYPE 
-					; OVERLAYS MODIFY BIT 
		>	
	$VIELD	PTE,0,<- 			; PAGING FILE POINTER 
		<PGFLVB,22,M>- 		; PAGE FILE VBN 
		>	
 
	$VIELD	PTE,0,<- 			; GLOBAL PAGE TABLE POINTER 
		<GPTX,22,M>- 		; GLOBAL PAGE TABLE INDEX 
		>	
;+ 
; PROTECTION FIELD DEFINITIONS 
;- 
$EQULST PTE$C_,$GBL,0,1,<-  
		<NA,<^B0000@PTE$V_PROT>>-  ;  NO ACCESS 
		<KR,<^B0011@PTE$V_PROT>>-  ;  KERNEL READ ONLY 
		<KW,<^B0010@PTE$V_PROT>>-  ;  KERNEL WRITE 
		<ER,<^B0111@PTE$V_PROT>>-  ;  EXEC READ ONLY 
		<EW,<^B0101@PTE$V_PROT>>-  ;  EXEC WRITE 
		<SR,<^B1011@PTE$V_PROT>>-  ;  SUPER READ ONLY 
		<SW,<^B1000@PTE$V_PROT>>-  ;  SUPER WRITE 
		<UR,<^B1111@PTE$V_PROT>>-  ;  USER READ ONLY 
		<UW,<^B0100@PTE$V_PROT>>-  ;  USER WRITE 
		>
$EQULST PTE$C_,$GBL,0,1,<-  
		<ERKW,<^B0110@PTE$V_PROT>>-   	; EXEC READ KERNEL WRITE 
		<SRKW,<^B1010@PTE$V_PROT>>-   	; SUPER READ KERNEL WRITE 
		<SREW,<^B1001@PTE$V_PROT>>-   	; SUPER READ EXEC WRITE 
		<URKW,<^B1110@PTE$V_PROT>>-   	; USER READ KERNEL WRITE 
		<UREW,<^B1101@PTE$V_PROT>>-   	; USER READ EXEC WRITE 
		<URSW,<^B1100@PTE$V_PROT>>-   	; USER READ SUPER WRITE 
		>
;+ 
; OWNER FIELD DEFINITIONS 
;_ 
$EQULST PTE$C_,$GBL,0,1,<-  
		<KOWN,<0@PTE$V_OWN>>- 	; KERNEL OWNER 
		<EOWN,<1@PTE$V_OWN>>- 	; EXEC OWNER 
		<SOWN,<2@PTE$V_OWN>>- 	; SUPER OWNER 
		<UOWN,<3@PTE$V_OWN>>-  ; USER OWNER 
		>

	$DEFEND	PTE,$GBL,DEF

	.ENDM	$PTEDEF
 
 
;+ 
; POINTER CONTROL BLOCK 
;	THIS IS A STRUCTURE OF POINTERS TO OTHER DYNAMIC STRUCTURES 
;	OF LIKE KIND.  TYPICALLY THE STRUCTURES POINTED TO ARE KNOWN 
;	BY THEIR LONG WORD INDEX INTO THE TABLE AND TO FACILITATE FETCHING 
;	THESE, IT IS CONVENTIONAL TO KEEP A POINTER TO THE BASE OF THE 
;	STRUCTURE POINTERS RATHER THAN (OR IN ADDITION TO) THE POINTER 
;	TO THE FRONT OF THE POINTER CONTROL BLOCK.  THE NUMBER OF POINTERS 
;	IN THE ARRAY PRECEEDS THE FIRST POINTER IN THE ARRAY. 
;- 
 
	.MACRO	$PTRDEF,$GBL

	$DEFINI	PTR,$GBL

 
				 			;RESERVED QUAD WORD FOR LINKAGE 
			.BLKQ	1 
$DEF	PTR$W_SIZE		 			;SIZE OF DYNAMIC CONTROL BLOCK 
			.BLKW	1 
$DEF	PTR$B_TYPE		 			;TYPE OF DYNAMIC CONTROL BLOCK 
			.BLKB	1 
$DEF	PTR$B_PTRTYPE		 		;TYPE OF CONTROL BLOCK POINTED TO 
			.BLKB	1 
$DEF	PTR$L_PTRCNT		 		;COUNT OF ENTRIES 
			.BLKL	1 
$DEF	PTR$L_PTR0		 			;PTR NUMBER 0 
 
			.BLKL	1 

	$DEFEND	PTR,$GBL,DEF

	.ENDM	$PTRDEF
 
;+ 
; RESTART PARAMETER BLOCK DEFINITIONS 
;- 
	.MACRO	$RPBDEF,$GBL

	$DEFINI	RPB,$GBL

$DEF	RPB$L_BASE		 			;PHYSICAL BASE ADDRESS OF 64K BLOCK 
			.BLKL	1 
$DEF	RPB$L_RESTART		 		;POINTER TO RESTART ROUTINE (PHYSICAL) 
			.BLKL	1 
$DEF	RPB$L_CHKSUM		 		;CHECKSUM OF BYTES 0-7F OF RESTART ROUTINE 
			.BLKL	1 
$DEF	RPB$L_RSTRTFLG		 		;RESTART IN PROGRESS FLAG 
			.BLKL	1 
$DEF	RPB$L_HALTPC		 		;PC AT RESTART/HALT 
			.BLKL	1 
$DEF	RPB$L_HALTPSL		 		;PSL AT RESTART/HALT 
			.BLKL	1 
$DEF	RPB$L_HALTCODE		 		;CODE DESCRIBING RESTART REASON 
			.BLKL	1 
$DEF	RPB$L_BOOTR0		 		;SAVED BOOT PARAMETER R0 
			.BLKL	1 
$DEF	RPB$L_BOOTR1		 		;SAVED BOOT PARAMETER R1 
			.BLKL	1 
$DEF	RPB$L_BOOTR2		 		;SAVED BOTT PARAMETER R2 
			.BLKL	1 
$DEF	RPB$L_BOOTR3		 		;SAVED BOOT PARAMETER R3 
			.BLKL	1 
$DEF	RPB$L_BOOTR4		 		;SAVED BOOT PARAMETER R4 
			.BLKL	1 
$DEF	RPB$L_BOOTR5		 		;SAVED BOOT PARAMETER R5 
			.BLKL	1 

	$DEFEND	RPB,$GBL,DEF

	.ENDM	$RPBDEF
 
;+ 
; RESOURCE NAME DEFINITIONS 
;- 
	.MACRO	$RSNDEF,$GBL

	$DEFINI	RSN,$GBL

 
$EQULST RSN$_,$GBL,1,1,<- 		;0 ORIGIN IN INCREMENTS OF 1 
		<ASTWAIT>-  		;WAIT FOR AST EVENT, CHANNEL INTERLOCK 
		<MAILBOX>- 			;MAILBOX SPACE 
		<NPDYNMEM>-   		;NON-PAGED DYNAMIC MEMORY 
		<PGFILE>- 			;PAGING FILE SPACE 
		<PGDYNMEM>- 		;PAGED DYNAMIC MEMORY 
		<BRKTHRU>- 			;TERMINAL BROADCAST 
		>

	$DEFEND	RSN,$GBL,DEF

	.ENDM	$RSNDEF
 
;+ 
; RVT - RELATIVE VOLUME TABLE 
; 
; A RELATIVE VOLUME MAPPING TABLE IS REQUIRED FOR EVERY MULTIVOLUME 
; STRUCTURE THAT IS MOUNTED IN A SYSTEM. 
;- 
 
	.MACRO	$RVTDEF,$GBL

	$DEFINI	RVT,$GBL

 
				 			;SPARE UNUSED LONGWORDS 
			.BLKL	2 
$DEF	RVT$W_SIZE		 			;SIZE OF RVT IN BYTES 
			.BLKW	1 
$DEF	RVT$B_TYPE		 			;STRUCTURE TYPE OF RVT 
			.BLKB	1 
$DEF	RVT$B_NVOLS		 			;NUMBER OF VOLUMES IN SET 
			.BLKB	1 
$DEF	RVT$L_UCBLST		 		;ADDRESSES OF THE RESPECTIVE UCB'S 
			.BLKL	1 
$DEF	RVT$C_LENGTH
$DEF	RVT$K_LENGTH					;LENGTH OF STANDARD RVT 
 

	$DEFEND	RVT,$GBL,DEF

	.ENDM	$RVTDEF
 
 
;+ 
; PROCESS OR GLOBAL SECTION DEFINITIONS 
;- 
	.MACRO	$SECDEF,$GBL

	$DEFINI	SEC,$GBL

 
; 
; ***** L_VBN, L_WINDOW, AND B_PFC MUST BE THE SAME OFFSET VALUES AS THE 
; ***** EQUIVALENTLY NAMED OFFSETS IN $PFLDEF 
; 
$DEF	SEC$L_GSD		 			;GLOBAL SECTION DESCRIPTOR ADDRESS 
$DEF	SEC$L_CCB		 			;CHANNEL CONTROL BLOCK ADDRESS IF PROCESS SECTION 
			.BLKL	1 
$DEF	SEC$W_SECXFL		 		;SECTION INDEX FORWARD LINK 
			.BLKW	1 
$DEF	SEC$W_SECXBL		 		;SECTION INDEX BACKWARD LINK 
			.BLKW	1 
$DEF	SEC$L_VPXPFC		 		;START VIRT PAGE INDEX & PFC 
	$VIELD	SEC,0,<- 			; 
		<VPX,22,>- 			; STARTING VIRTUAL PAGE INDEX 
		<,2,>- 			; UNUSED 
		<PFC,8,>- 			; PAGE FAULT CLUSTER 
		>	
			.BLKB	3 
$DEF	SEC$B_PFC		 			;PAGE FAULT CLUSTER 
			.BLKB	1 
$DEF	SEC$L_WINDOW		 		;WINDOW CONTROL BLOCK 
			.BLKL	1 
$DEF	SEC$L_VBN		 			;BASE VIRTUAL BLOCK NUMBER 
			.BLKL	1 
$DEF	SEC$W_FLAGS		 			;VARIOUS CONTROL FLAGS 
	$VIELD	SEC,0,<-  
		<GBL,1,M>- 			; GLOBAL SECTION 
		<CRF,1,M>- 			; COPY ON REFERENCE 
		<DZRO,1,M>- 			; DEMAND ZERO 
		<WRT,1,M>- 			; WRITABLE 
		<,4,M>- 			; SPARE 
		<AMOD,2,M>- 			; ACCESS MODE OF SECTION 
		<,4,M>- 			; SPARE 
		<PERM,1,M>- 			; PERMANENT SECTION 
		<SYSGBL,1,M>- 		; 1 = SYSTEM GLOBAL, 0 = GROUP GLOBAL 
		>	
			.BLKB	1 
$DEF	SEC$B_AMOD		 		;ACCESS MODE OF SECTION 
			.BLKB	1 
				 			;SPARE 
			.BLKW	1 
$DEF	SEC$L_REFCNT		 		;COUNT OF PTE'S REFERENCING THIS SECTION 
			.BLKL	1 
$DEF	SEC$L_PAGCNT		 		;NO. OF PAGES IN THE SECTION 
; 
; ***** NOTE THAT NUMBER OF LONG WORDS MUST BE EVEN 
; 
			.BLKL	1 
$DEF	SEC$C_LENGTH
$DEF	SEC$K_LENGTH					;SIZE OF PSTE/GSTE 
 

	$DEFEND	SEC,$GBL,DEF

	.ENDM	$SECDEF
 
 
;+ 
; SWAP FILE TABLE 
;- 
 
	.MACRO	$SFTDEF,$GBL

	$DEFINI	SFT,$GBL

; 
; ***** L_VBN, L_WINDOW, AND B_PFC MUST BE THE SAME OFFSET VALUES AS THE 
; ***** EQUIVALENTLY NAMED OFFSETS IN $SECDEF 
; 
 
$DEF	SFT$B_SLTCNT		 		; COUNT OF AVAILABLE SLOT COUNTS 
			.BLKB	1 
$DEF	SFT$B_IOSZ		 			; MAXIMUM NUMBER OF PAGES FOR I/O OPS 
			.BLKB	1 
$DEF	SFT$W_SLOTSZ		 		; SIZE OF SLOT IN BLOCKS 
			.BLKW	1 
				 			; SPARE 
			.BLKL	1 
$DEF	SFT$W_SIZE		 			; SIZE OF DYNAMIC STRUCTURE 
			.BLKW	1 
$DEF	SFT$B_TYPE		 			; TYPE OF DYNAMIC STRUCTURE 
			.BLKB	1 
$DEF	SFT$B_PFC		 			; PAGE FAULT CLUSTER 
			.BLKB	1 
$DEF	SFT$L_WINDOW		 		; POINTER TO WINDOW CONTROL BLOCK 
			.BLKL	1 
$DEF	SFT$L_VBN		 			; BASE VBN 
			.BLKL	1 
$DEF	SFT$L_BITMAP		 		; ALLOCATION BITMAP 
			.BLKL	2 
				 			; 
			.BLKL	1 
$DEF	SFT$C_LENGTH
$DEF	SFT$K_LENGTH					; SIZE OF SFT ENTRY 
 

	$DEFEND	SFT,$GBL,DEF

	.ENDM	$SFTDEF
 
 
;+ 
; SYSGEN PARAMETER DEFINITIONS 
;- 
 
	.MACRO	$SGNDEF,$GBL

	$DEFINI	SGN,$GBL

 
$EQULST SGN$C_,$GBL,0,1,<- 			; 
		<BALSETCNT,24>- 		; NUMBER OF PROCESSES IN BALANCE SET 
		<DFWSCNT,100>- 		; DEFAULT WORKING SET COUNT 
		<DFWSQUOTA,120>- 		; DEFAULT WORKING SET QUOTA 
		<GBLSECCNT,40>- 		; GLOBAL SECTION COUNT 
		<MAXGPGCNT,2*1024>- 	; GLOBAL PAGE COUNT (GPT SIZE) 
		<MAXPAGCNT,128*32*4>- 	; PHYSICAL MEMORY SIZE IN PAGES 
		<MAXPGFL,4096>- 		; DEFAULT MAXIMUM PAGING FILE 
		<MAXPSTCNT,5>- 		; MAX NUMBER OF PST ENTRIES 
		<MAXVPGCNT,8*8*128>- 	; MAX PROCESS VIRTUAL SIZE (PAGES) 
		<MAXWSCNT,1024>- 		; MAX WORKING SET SIZE (PAGES) 
		>
$EQULST SGN$C_,$GBL,,1,<-
		<MINWSCNT,10>- 		; MIN WORKING SET SIZE (PAGES) 
		<NPAGEDYN,52*512>- 		; NON-PAGED DYNAMIC POOL SIZE 
		<NPROCS,64>- 		; MAX NUMBER OF PROCESSES 
		<PAGEDYN,2*16*512>- 	; PAGED DYNAMIC POOL SIZE IN BYTES 
		<PHYPAGCNT,32*128>- 	; ACTUAL PHYSICAL PAGE COUNT 
		<SFTMAX,3>- 		; SWAP FILE TABLE ENTRIES 
		<SYSDWSCNT,40>- 		; DEFAULT SYSTEM WORKING SET COUNT 
		<SYSVECPGS,3>- 		; NO. OF PAGES OF SYSTEM SERVICE VECTORS 
		<SYSWSCNT,96>- 		; SYSTEM WORKING SET COUNT 
		>

	$DEFEND	SGN,$GBL,DEF

	.ENDM	$SGNDEF
 
;+ 
; SCHEDULING STATES 
;- 
 
	.MACRO	$STATEDEF,$GBL

	$DEFINI	STATE,$GBL

 
$EQULST SCH$C_,$GBL,1,1,<- 		; DEFINITIONS START AT 1 
		<COLPG>-   			;COLLIDED PAGE WAIT 
		<MWAIT>-   			;MUTEX AND MISCELLANEOUS RESOURCE WAIT 
		<CEF>-   			;COMMON EVENT FLAG WAIT STATE 
		<PFW>-   			;PAGE FAULT WAIT 
		<LEF>-   			;LOCAL EVENT FLAG WAIT 
		<LEFO>-   			;LOCAL EVENT FLAG WAIT OUT OF BALANCE SET 
		<HIB>-   			;HIBERNATE WAIT 
		<HIBO>-   			;HIBERNATE WAIT OUT OF BALANCE SET 
		<SUSP>-   			;SUSPENDED 
		<SUSPO>- 			;SUSPENDED OUT OF THE BALANCE SET 
		>
$EQULST SCH$C_,$GBL,,1,<-
		<FPG>-   			;FREEPAGE WAIT 
		<COM>-   			;COMPUTE, IN BALANCE SET STATE 
		<COMO>-   			;COMPUTE, OUT OF BALANCE SET STATE 
		<CUR>-   			;CURRENT PROCESS STATE 
		>

	$DEFEND	STATE,$GBL,DEF

	.ENDM	$STATEDEF
 
;+ 
; TQE - TIME QUEUE ENTRY 
; 
; TIME QUEUE ENTRIES ARE UTILIZED TO SET TIMERS, WAKE UP PROCESSES, AND 
; FOR INTERNAL SYSTEM SUBROUTINES. 
;- 
 
	.MACRO	$TQEDEF,$GBL

	$DEFINI	TQE,$GBL

 
$DEF	TQE$L_TQFL		 			;TIME QUEUE FORWARD LINK 
			.BLKL	1 
$DEF	TQE$L_TQBL		 			;TIME QUEUE BACKWARD LINK 
			.BLKL	1 
$DEF	TQE$W_SIZE		 			;SIZE OF TQE IN BYTES 
			.BLKW	1 
$DEF	TQE$B_TYPE		 			;STRUCTURE TYPE FOR TQE 
			.BLKB	1 
$DEF	TQE$B_RQTYPE		 		;TIME QUEUE ENTRY TYPE 
	$VIELD	TQE,0,<- 			; TQE$B_RQTYPE BIT DEFINITIONS 
		<,2,>- 			; STARTING OFFSET 
		<REPEAT,,M>- 		; REPEAT REQUEST (1=YES) 
		>			; END OF BIT DEFINITIONS 
			.BLKB	1 
$DEF	TQE$L_PID		 			;TIMER OR WAKE REQUEST PROCESS ID 
$DEF	TQE$L_FPC		 			;TIMER SUBROUTINE ADDRESS 
			.BLKL	1 
$DEF	TQE$L_AST		 			;ADDRESS OF AST ROUTINE 
$DEF	TQE$L_FR3		 			;TIMER SUBROUTINE SAVED R3 
			.BLKL	1 
$DEF	TQE$L_ASTPRM		 		;AST PARAMETER 
$DEF	TQE$L_FR4		 			;TIMER SUBROUTINE SAVED R4 
			.BLKL	1 
$DEF	TQE$Q_TIME		 			;ABSOLUTE EXPIRATION TIME 
			.BLKQ	1 
$DEF	TQE$Q_DELTA		 			;DELTA REPEAT TIME 
			.BLKQ	1 
$DEF	TQE$B_RMOD		 			;ACCESS MODE OF REQUEST 
			.BLKB	1 
$DEF	TQE$B_EFN		 			;EVENT FLAG NUMBER AND EVENT GROUP 
			.BLKB	1 
				 			;SPARE WORD 
			.BLKW	1 
$DEF	TQE$L_RQPID		 			;REQUESTER PROCESS ID 
			.BLKL	1 
$DEF	TQE$C_LENGTH
$DEF	TQE$K_LENGTH					;LENGTH OF STANDARD TQE 
 
; 
; TIME QUEUE ENTRY REQUEST TYPE DEFINITIONS 
; 
 
$EQU	TQE$C_TMSNGL	0			;TIMER ENTRY SINGLE SHOT REQUEST 
$EQU	TQE$C_SSREPT	1+TQE$M_REPEAT		;SYSTEM SUBROUTINE REPEAT REQUEST 
$EQU	TQE$C_SSSNGL	1			;SYSTEM SUBROUTINE SINGLE SHOT REQUEST 
$EQU	TQE$C_WKREPT	2+TQE$M_REPEAT		;WAKE ENTRY REPEAT REQUEST 
$EQU	TQE$C_WKSNGL	2			;WAKE ENTRY SINGLE SHOT REQUEST 
 

	$DEFEND	TQE,$GBL,DEF

	.ENDM	$TQEDEF
 
 
;++ 
; TERMINAL DRIVER SYMBOLS 
;-- 
	.MACRO	$TRMDEF,$GBL		; 

	$DEFINI	TRM,$GBL

	$VIELD	TRM,0,<- 				; 
		<XON,,M>-  
		<XOFF,,M>-  
		<CTRLS,,M>-  
		<FILL,,M>-  
		<CURSOROV,,M>-  
		<SENDLF,,M>-  
		<MULTIECHO,,M>-  
		<BRKTHRU,,M>-  
		<WRITE,,M>-  
		<EOL,,M>-  
		<CTRLR,,M>-  
		<READ,,M>-  
		<CTRLO,,M>-  
		<DELETE,,M>-  
		>	
	$VIELD	TRM,0,<-  
		<A,13,M>-  
		<WRITEALL,,M>-  
		<PASSALL,,M>-  
		<NOECHO,,M>-  
		<TIMED,,M>-  
		<PROMPT,,M>-  
		<NOFILTER,,M>-  
		<MBDSABL,,M>-  
		<NOTIFIED,,M>-  
		<ESCAPE,,M>-  
		<BADESCAPE,,M>-  
		<ATNEWLINE,,M>-  
		<TYPAHDFUL,,M>-  
		>	
$EQULST TRMC$_,$GBL,0,1,<- 	 
		<CTRLC,3>- 	 
		<BELL,7>- 	 
		<BS,8>- 	 
		<TAB,9>- 	 
		<LF,10>- 	 
		<VT,11>- 	 
		<FF,12>- 	 
		<CR,13>- 	 
		<CTRLO,15>-  
		<CTRLQ,17>-  
		>
$EQULST TRMC$_,$GBL,,1,<-
		<XON,17>- 	 
		<CTRLR,18>-  
		<CTRLS,19>-  
		<XOFF,19>- 	 
		<CTRLU,21>-  
		<CTRLX,24>-  
		<CTRLY,25>-  
		<CTRLZ,26>-  
		<ESCAPE,27>-  
		<BLANK,32>-  
		<DOLLAR,36>-  
		>
$EQULST TRMC$_,$GBL,,1,<-
		<PLUS,43>- 	 
		<ZERO,48>- 	 
		<ONE,49>- 	 
		<SCRIPT,96>-  
		<LOWA,97>- 	 
		<LOWZ,123>-  
		<DELETE,127>-  
		<NL,128>- 	 
		>
$EQULST TRM$C_,$GBL,0,1,<-  
		<TYPEAHEAD,72>-  
		<HIGHIPL,22>-  
		>
	$VIELD	TRM,0,<-  
		<FILLCNT,,>-  
		<,3,>- 	 
		<INTERFACE,,>-  
		>	
	$VIELD	TRM,0,<-  
		<,4,M>- 	 
		<SPECIAL,,M>-  
		<CTRLSEQ,,M>-  
		<LOWER,,M>-  
		<CTRL2SEQ,,M>-  
		>	

	$DEFEND	TRM,$GBL,DEF

	.ENDM	$TRMDEF
 
;++ 
; TERMINAL DRIVER SYMBOLS 
;-- 
	.MACRO	$TTYDEF,$GBL		; 

	$DEFINI	TTY,$GBL

						; 
$DEF	TTY$L_RB_NXT		 		; READ BUFFER - NEXT CHARACTER 
			.BLKL	1 
$DEF	TTY$L_RB_UVA		 		; READ BUFFER - USER VIRTUAL ADDR 
			.BLKL	1 
$DEF	TTY$W_RB_SIZE		 		; READ BUFFER - BLOCK SIZE 
			.BLKW	1 
				 			; 
			.BLKB	1 
				 			; 
			.BLKB	1 
$DEF	TTY$W_RB_ORGHOR		 		; READ BUFFER - ORIGIONAL HORIZON 
			.BLKW	1 
$DEF	TTY$W_RB_TIMOS		 		; READ BUFFER - TIMEOUT SECONDS 
			.BLKW	1 
$DEF	TTY$L_RB_DATA		 			; READ BUFFER  - DATA 
			.BLKL	1 
	. = 0  
$DEF	TTY$L_WB_NXT		 		; WRITE BUFFER - NEXT CHARACTER 
			.BLKL	1 
$DEF	TTY$L_WB_END		 		; WRITE BUFFER - END CHARACTER 
			.BLKL	1 
$DEF	TTY$W_WB_SIZE		 		; WRITE BUFFER - SIZE 
			.BLKW	1 
				 			; 
			.BLKW	1 
$DEF	TTY$L_WB_DATA		 		; WRITE BUFFER - DATA 
			.BLKL	1 
	. = 0  
$DEF	TTY$L_TA_PUT		 		; TYPEAHEAD BUFFER - PUT POINTER 
			.BLKL	1 
$DEF	TTY$L_TA_GET		 		; TYPEAHEAD BUFFER - GET POINTER 
			.BLKL	1 
$DEF	TTY$W_TA_SIZE		 		; TYPEAHEAD BUFFER - BLOCK SIZE 
			.BLKW	1 
$DEF	TTY$B_TA_TYPE		 		; 
			.BLKB	1 
				  
			.BLKB	1 
$DEF	TTY$L_TA_END		 		; TYPEAHEAD BUFFER - END ADDRESS 
			.BLKL	1 
$DEF	TTY$L_TA_DATA		 		; TYPEAHEAD BUFFER - DATA START 
			.BLKL	1 
	. = 0  
$DEF	TTY$Q_BD_LINK		 		; BROADCAST MESSAGE BLOCK - LINK 
			.BLKQ	1 
$DEF	TTY$W_BD_SIZE		 		; BROADCAST MESSAGE BLOCK - SIZE 
			.BLKW	1 
$DEF	TTY$B_BD_TYPE		 		; BROADCAST MESSAGE BLOCK - TYPE 
			.BLKB	1 
				 			; 
			.BLKB	1 
$DEF	TTY$L_BD_FORK		 		; BROADCAST MESSAGE BLOCK - FORK BLOCK 
			.BLKL	1 
$DEF	TTY$L_BD_UCB		 		; BROADCAST MESSAGE BLOCK - TARGET UCB 
			.BLKL	1 
$DEF	TTY$B_BD_WHO		 		; BROADCAST MESSAGE BLOCK - TARGET DESC 
			.BLKB	1 
$DEF	TTY$B_BD_CNT		 		; BROADCAST MESSAGE BLOCK - MESSAGE SIZE 
			.BLKB	1 
$DEF	TTY$B_BD_REFC		 		; BROADCAST MESSAGE BLOCK - REF COUNT 
			.BLKB	1 
$DEF	TTY$B_BD_IPL		 		; BROADCAST MESSAGE BLOCK - FORK IPL 
			.BLKB	1 
$DEF	TTY$L_BD_DATA		 		; BROADCAST MESSAGE BLOCK - DATA 
			.BLKL	4 
$DEF	TTY$L_BD_MIN		 		; MINIMUM MESSAGE 
	$VIELD	TTY,0,<- 				; 
		<ST_XON,,M>-  
		<ST_XOFF,,M>-  
		<ST_CTRLS,,M>-  
		<ST_FILL,,M>-  
		<ST_CURSOR,,M>-  
		<ST_SENDLF,,M>-  
		<ST_MULTI,,M>-  
		<ST_BRDCST,,M>-  
		<ST_WRITE,,M>-  
		<ST_EOL,,M>-  
		<ST_CTRLR,,M>-  
		<ST_READ,,M>-  
		<ST_CTRLO,,M>-  
		<ST_DEL,,M>-  
		>	
	$VIELD	TTY,0,<-  
		<A,14,M>-  
		<ST_PASALL,,M>-  
		<ST_NOECHO,,M>-  
		<ST_WRTALL,,M>-  
		<ST_PROMPT,,M>-  
		<ST_NOFLTR,,M>-  
		<ST_ESC,,M>-  
		<ST_BADESC,,M>-  
		<ST_NL,,M>-  
		<ST_TYPFUL,,M>-  
		<ST_SKIPLF,,M>-  
		<ST_HANGUP,,M>-  
		<ST_GETAHD,,M>-  
		<ST_UNSOL,,M>-  
		<ST_ESC_O,,M>-  
		>	
$EQULST TTY$C_,$GBL,0,1,<-  
		<CTRLC,3>- 	 
		<BELL,7>- 	 
		<BS,8>- 	 
		<TAB,9>- 	 
		<LF,10>- 	 
		<VT,11>- 	 
		<FF,12>- 	 
		<CR,13>- 	 
		<CTRLO,15>-  
		<CTRLQ,17>-  
		>
$EQULST TTY$C_,$GBL,,1,<-
		<XON,17>- 	 
		<CTRLR,18>-  
		<CTRLS,19>-  
		<XOFF,19>- 	 
		<CTRLU,21>-  
		<CTRLX,24>-  
		<CTRLY,25>-  
		<CTRLZ,26>-  
		<ESCAPE,27>-  
		<BLANK,32>-  
		<DOLLAR,36>-  
		>
$EQULST TTY$C_,$GBL,,1,<-
		<PLUS,43>- 	 
		<ZERO,48>- 	 
		<ONE,49>- 	 
		<SCRIPT,96>-  
		<LOWA,97>- 	 
		<LOWZ,123>-  
		<DELETE,127>-  
		<NL,128>- 	 
		>
$EQULST TTY$C_,$GBL,0,1,<-  
		<TYPAHDSIZ,78>-  
		<HIGHIPL,22>-  
		>
$EQULST TTY$C_,$GBL,0,1,<- 				; DIALUP STATES 
		<DS_IDLE>-  
		<DS_ACTIVE>-  
		<DS_ATTN1>-  
		<DS_ATTN2>-  
		<DS_ATTN3>-  
		<DS_HANG>-  
		<DS_HANG2>-  
		<DS_RESET>-  
		>
$EQULST TTY$C_,$GBL,0,1,<- 				; INTERNAL FUNCTION CODES 
		<FC_READ>-  
		<FC_WRITE>-  
		<FC_SETM>-  
		<FC_SETC>-  
		<FC_N_SET>-  
		>
	$VIELD	TTY,0,<- 				; CHARACTER CHARACTERISTICS 
		<,4,M>- 	 
		<CH_SPEC,,M>-  
		<CH_CTRL,,M>-  
		<CH_LOWER,,M>-  
		<CH_CTRL2,,M>-  
		>	
			.BLKL	1 

	$DEFEND	TTY,$GBL,DEF

	.ENDM	$TTYDEF
 
;++ 
; USER AUTHORIZATION FILE FORMAT 
;-- 
 
	.MACRO	$UAFDEF,$GBL

	$DEFINI	UAF,$GBL

$DEF	UAF$T_USERNAME		 		; USERNAME 
			.BLKB	12 
$DEF	UAF$L_PWD		 			; HASHED PASSWORD 
			.BLKL	1 
$DEF	UAF$T_ACCOUNT		 		; ACCOUNT NAME 
			.BLKB	8 
$DEF	UAF$L_UIC		 			; USER ID CODE 
$DEF	UAF$W_MEM		 			; MEMBER SUBFIELD 
			.BLKW	1 
$DEF	UAF$W_GRP		 			; GROUP SUBFIELD 
			.BLKW	1 
$DEF	UAF$T_DEFDIR		 		; DEFAULT DIRECTORY 
			.BLKB	32 
$DEF	UAF$T_DEFDEV		 		; DEFAULT DEVICE 
			.BLKB	16 
$DEF	UAF$T_DEFCLI		 		; DEFAULT COMMAND INTERPRETER 
			.BLKB	8 
$DEF	UAF$L_CPUTIM		 		; CPU TIME QUOTA 
			.BLKL	1 
$DEF	UAF$Q_PRIV		 			; PROCESS PRIVILEGE VECTOR 
			.BLKQ	1 
$DEF	UAF$W_BIOLM		 			; BUFFERED I/O LIMIT 
			.BLKW	1 
$DEF	UAF$W_BYTLM		 			; BUFFERED I/O BYTE COUNT LIMIT 
			.BLKW	1 
$DEF	UAF$W_DIOLM		 			; DIRECT I/O LIMIT 
			.BLKW	1 
$DEF	UAF$W_FILLM		 			; OPEN FILE LIMIT 
			.BLKW	1 
$DEF	UAF$W_TQCNT		 			; TIMER QUEUE ENTRY LIMIT 
			.BLKW	1 
$DEF	UAF$W_PRCCNT		 		; SUBPROCESS CREATION LIMIT 
			.BLKW	1 
$DEF	UAF$W_WSQUOTA		 		; WORKING SET SIZE LIMIT 
			.BLKW	1 
$DEF	UAF$W_DFWSCNT		 		; DEFAULT WORKING SET SIZE 
			.BLKW	1 
$DEF	UAF$W_ASTLM		 			; AST QUEUE LIMIT 
			.BLKW	1 
$DEF	UAF$W_PGFLQUOTA		 		; PAGE FILE QUOTA 
			.BLKW	1 
$DEF	UAF$T_OWNER		 		; OWNER'S NAME 
			.BLKB	20 
$DEF	UAF$W_FILPRT		 		; DEFAULT FILE PROTECTION 
			.BLKW	1 
$DEF	UAF$B_PRI		 			; BASE PROCESS PRIORITY 
			.BLKB	1 
				 			; SPACE BYTE 
			.BLKB	1 
$DEF	UAF$Q_ONTIME		 		; EARLIEST LOGIN TIME 
			.BLKQ	1 
$DEF	UAF$Q_OFFTIME		 		; LATEST LOGOUT TIME 
			.BLKQ	1 
				 			; space for expansion 
			.BLKL	7 
$DEF	UAF$C_LENGTH
$DEF	UAF$K_LENGTH		 

	$DEFEND	UAF,$GBL,DEF

	.ENDM	$UAFDEF
 
;+ 
; UNIBUS ADAPTER REGISTER OFFSET DEFINITIONS 
;- 
 
	.MACRO	$UBADEF,$GBL

	$DEFINI	UBA,$GBL

 
$DEF	UBA$L_CSR		 			;CONFIGURATION STATUS REGISTER 
	$VIELD	UBA,0,<- 			; CONFIGURATION STATUS REGISTER FIELD DEFINITIONS 
		<CSR_ADCOD,8,>- 		; ADAPTER CODE FIELD 
		<,8,>- 			; RESERVED BITS 
		<CSR_UBIC,,M>- 		; UNIBUS INITIALIZATION COMPLETE 
		<CSR_UBPDN,,M>- 		; UNIBUS POWER DOWN 
		<CSR_UBIIP,,M>- 		; UNIBUS INITIALIZATION IN PROGRESS 
		<,2,>- 			; RESERVED BITS 
		<CSR_OT,,M>- 		; OVER TEMPERATURE 
		<CSR_PU,,M>- 		; ADAPTER POWER UP 
		<CSR_PD,,M>- 		; ADAPTER POWER DOWN 
		<,2,>- 			; RESERVED BITS 
		<CSR_XMFLT,,M>- 		; TRANSMITTER FAULT 
		<CSR_MT,,M>- 		; MULTIPLE TRANSMITTERS 
		<CSR_IS,,M>- 		; INTERLOCK SEQUENCE FAULT 
		<CSR_URD,,M>- 		; UNEXPECTED READ DATA 
		<CSR_WS,,M>- 		; WRITE SEQUENCE DATA 
		<CSR_PE,,M>- 		; SBI PARITY ERROR 
		>			; 
			.BLKL	1 
$DEF	UBA$L_CR		 			;CONTROL REGISTER 
	$VIELD	UBA,0,<- 			; CONTROL REGISTER FIELD DEFINITIONS 
		<CR_INIT,,M>- 		; ADAPTER INITIALIZATION 
		<CR_UBPF,,M>- 		; UNIBUS POWER FAIL 
		<CR_CNFIE,,M>- 		; CONFIGURATION INTERRUPT ENABLE 
		<CR_SUEFIE,,M>- 		; SBI TO UNIBUS ERROR FIELD INTERRUPT ENABLE 
		<CR_USEFIE,,M>- 		; UNIBUS TO SBI ERROR FIELD INTERRUPT ENABLE 
		<CR_BRIE,,M>- 		; BUS REQUEST INTERRUPT ENABLE 
		<CR_IFSIE,,M>- 		; INTERRUPT FIELD SWITCH INTERRUPT ENABLE 
		<CR_ARLVL,2,M>- 		; ADAPTER REQUEST LEVEL 
		<,17,>- 			; RESERVED BITS 
		<CR_MRDSB,5,>- 		; MAP REGISTER DISABLE 
		>			; 
			.BLKL	1 
$DEF	UBA$L_SR		 			;STATUS REGISTER 
	$VIELD	UBA,0,<- 			; STATUS REGISTER FIELD DEFINITIONS 
		<SR_SSYNC,,M>- 		; UNIBUS SLAVE SYNC TIMEOUT 
		<SR_UBSTO,,M>- 		; UNIBUS SELECT TIMEOUT 
		<SR_LER,,M>- 		; LOST ERROR 
		<SR_MRPE,,M>- 		; MAP REGISTER PARITY ERROR 
		<SR_IVMR,,M>- 		; INVALID MAP REGISTER 
		<SR_DPPE,,M>- 		; DATAPATH PARITY ERROR 
		<SR_CXTMO,,M>- 		; COMMAND TRANSMISSION TIMEOUT 
		<SR_CXTER,,M>- 		; COMMAND TRANSMISSION ERROR 
		<SR_CRD,,M>- 		; CORRECTED READ DATA 
		<SR_RDS,,M>- 		; READ DATA SUBSTITUTE 
		<SR_RDTO,,M>- 		; READ DATA TIMEOUT 
		<SR_BRID,,M>- 		; BUS REQUEST INTERRUPT DONE 
		<,12,>- 			; RESERVED BITS 
		<SR_BRRVF,4,>- 		; BUS REQUEST RECEIVE VECTOR FULL 
		<SR_BRSVF,,M>- 		; BUS REQUEST SEND VECTOR FULL 
		<SR_RIE,,M>- 		; REQUEST INTERRUPT ENABLED 
		<SR_UBIFS,,M>- 		; UNIBUS INTERRUPT FIELD SWITCH 
		>			; 
			.BLKL	1 
$DEF	UBA$L_DCR		 			;DIAGNOSTIC CONTROL REGISTER 
			.BLKL	1 
$DEF	UBA$L_FMER		 			;FAILED MAP ENTRY REGISTER 
	$VIELD	UBA,0,<- 			; FAILED MAP ENTRY REGISTER FIELD DEFINITIONS 
		<FMER_MRN,9,>- 		; FAILED MAP REGISTER NUMBER 
		>			; 
			.BLKL	1 
$DEF	UBA$L_FUBAR		 			;FAILED UNIBUS ADDRESS REGISTER 
	$VIELD	UBA,0,<- 			; FAILED UNIBUS ADDRESS REGISTER FIELD DEFINITIONS 
		<FUBAR_ADR,18,>- 		; FAILED SBI TO UNIBUS ADDRESS 
		>			; 
			.BLKL	1 
				 			;RESERVED REGISTERS 
			.BLKL	2 
$DEF	UBA$L_BRSVR		 		;BUS REQUEST SEND VECTOR REGISTERS 
			.BLKL	4 
$DEF	UBA$L_BRRVR		 		;BUS REQUEST RECEIVE VECTOR REGISTER 
	$VIELD	UBA,0,<- 			; BUS REQUEST RECEIVE VECTOR REGISTER FIELD DEFINITIONS 
		<BRRVR_IVA,16,>- 		; INTERRUPT VECTOR ADDRESS 
		<,15,>- 			; RESERVED BITS 
		<BRRVR_AIR,,M>- 		; ADAPTER INTERRUPT REQUEST PENDING 
		>			; 
			.BLKL	4 
$DEF	UBA$L_DPR		 		;DATAPATH REGISTERS 
	$VIELD	UBA,0,<- 			; DATAPATH REGISTER FIELD DEFINITIONS 
		<DPR_ADDR,16,>- 		; BUFFERED UNIBUS ADDRESS 
		<DPR_STATE,8,>- 		; BUFFER STATE FLAGS 
		<,5,>- 			; RESERVED BITS 
		<DPR_DPF,,M>- 		; DATAPATH FUNCTION 
		<DPR_XMTER,,M>- 		; BUFFER TRANSFER ERROR 
		<DPR_BNE,,M>- 		; BUFFER NOT EMPTY 
		>			; 
			.BLKL	16 
				 			; VALUE IS 2048-128 
			.BLKB	1920 
$DEF	UBA$L_MAP		 		;MAP REGISTERS 
	$VIELD	UBA,0,<- 			; MAP REGISTER FIELD DEFINITIONS 
		<MAP_ADDR,21,>- 		; SBI PAGE ADDRESS 
		<MAP_DPD,4,>- 		; DATAPATH DESIGNATOR 
		<MAP_BO,,M>- 		; BYTE OFFSET 
		<,5,>- 			; RESERVED BITS 
		<MAP_VALID,,M>- 		; MAP REGISTER VALID 
		>			; 
 
			.BLKL	496 

	$DEFEND	UBA,$GBL,DEF

	.ENDM	$UBADEF
 
;+ 
; UCB - UNIT CONTROL BLOCK 
; 
; THERE IS ONE UCB FOR EACH DEVICE UNIT IN A SYSTEM. 
;- 
 
	.MACRO	$UCBDEF,$GBL

	$DEFINI	UCB,$GBL

 
						;MARK 0 POSITION 
$DEF	UCB$L_FQFL		 			;FORK QUEUE FORWARD LINK 
$DEF	UCB$L_RQFL		 			;NET RCV QUEUE FORWARD LINK 
			.BLKL	1 
$DEF	UCB$L_FQBL		 			;FORK QUEUE BACKWARD LINK 
$DEF	UCB$L_RQBL		 			;NET RCV QUEUE BACKWARD LINK 
			.BLKL	1 
$DEF	UCB$W_SIZE		 			;SIZE OF UCB IN BYTES 
			.BLKW	1 
$DEF	UCB$B_TYPE		 			;STRUCTURE TYPE FOR UCB 
			.BLKB	1 
$DEF	UCB$B_FIPL		 			;FORK INTERRUPT PRIORITY LEVEL 
			.BLKB	1 
$DEF	UCB$L_ASTQFL		 		;MAILBOX AST QUEUE LISTHEAD FORWARD LINK 
$DEF	UCB$L_FPC		 			;FORK PC 
$DEF	UCB$T_PARTNER		 		; NETWORK - PARTNER'S NODENAME 
			.BLKB	1 
			.BLKB	3 
$DEF	UCB$L_ASTQBL		 		;MAILBOX AST QUEUE LISTHEAD BACKWARD LINK 
$DEF	UCB$L_FR3		 			;FORK R3 
			.BLKL	1 
$DEF	UCB$L_FR4		 			;FORK R4 
$DEF	UCB$L_FIRST		 		; ADDR OF 1ST SEG OF CHAINED NET MSG 
$DEF	UCB$W_MSGMAX		 		;MAILBOX MAXIMUM MESSAGES ALLOWED 
			.BLKW	1 
$DEF	UCB$W_MSGCNT		 		;MAILBOX CURRENT NUMBER OF MESSAGES 
			.BLKW	1 
$DEF	UCB$W_BUFQUO		 		;MAILBOX BUFFERED I/O QUOTA 
$DEF	UCB$W_DSTADDR		 		; NETWORK - REMOTE CONNECT NO. 
			.BLKW	1 
$DEF	UCB$W_VPROT		 			;VOLUME PROTECTION 
$DEF	UCB$W_SRCADDR		 		; NETWORK - LOCAL CONNECT NO. 
			.BLKW	1 
$DEF	UCB$L_OWNUIC		 		;VOLUME OWNER UIC 
			.BLKL	1 
$DEF	UCB$L_CRB		 			;ADDRESS OF PRIMARY CHANNEL REQUEST BLOCK 
			.BLKL	1 
$DEF	UCB$L_DDB		 			;BACKPOINTER TO DEVICE DATA BLOCK 
			.BLKL	1 
$DEF	UCB$L_PID		 			;PROCESS ID OF OWNER PROCESS 
			.BLKL	1 
$DEF	UCB$L_LINK		 			;ADDRESS OF NEXT UCB FOR RESPECTIVE DDB 
			.BLKL	1 
$DEF	UCB$L_VCB		 			;ADDRESS OF VOLUME CONTROL BLOCK 
			.BLKL	1 
$DEF	UCB$L_DEVCHAR		 		;DEVICE CHARACTERISTIC BITS 
			.BLKL	1 
$DEF	UCB$B_DEVCLASS		 		;DEVICE CLASS 
			.BLKB	1 
$DEF	UCB$B_DEVTYPE		 		;DEVICE TYPE 
			.BLKB	1 
$DEF	UCB$W_DEVBUFSIZ		 		;DEVICE DEFAULT BUFFER SIZE 
			.BLKW	1 
$DEF	UCB$L_DEVDEPEND		 		;DEVICE DEPENDENT DATA 
$DEF	UCB$L_TTCHAR		 		;TERMINAL CHARACTERISTICS 
$DEF	UCB$B_SECTORS		 		;DISK - SECTORS PER TRACK 
$DEF	UCB$B_LOCSRV		 		; NETWORK - LOCAL LINK SERVICES 
			.BLKB	1 
$DEF	UCB$B_REMSRV		 		; NETWORK - REMOTE LINK SERVICES 
$DEF	UCB$B_TRACKS		 		;DISK - TRACKS PER CYLINDER 
			.BLKB	1 
$DEF	UCB$W_CYLINDERS		 		;DISK - TOTAL CYLINDERS 
$DEF	UCB$W_BYTESTOGO		 		; NETWORK - NO. OF BYTES LEFT IN RCV BFR 
			.BLKB	1 
$DEF	UCB$B_VERTSZ		 		;VERTICAL PAGE SIZE 
			.BLKB	1 
$DEF	UCB$L_IOQFL		 			;I/O QUEUE LISTHEAD FORWARD LINK 
			.BLKL	1 
$DEF	UCB$L_IOQBL		 			;I/O QUEUE LISTHEAD BACKWARD LINK 
			.BLKL	1 
$DEF	UCB$W_UNIT		 			;PHYSICAL DEVICE UNIT NUMBER 
			.BLKW	1 
$DEF	UCB$W_CHARGE		 		;MAILBOX BYTE COUNT QUOTA CHARGE 
$DEF	UCB$B_CM1		 			;LEVEL 1 CONTROLLER ALLOCATION MASK 
			.BLKB	1 
$DEF	UCB$B_CM2		 			;LEVEL 2 CONTROLLER ALLOCATION MASK 
$DEF	UCB$B_ESCAPE		 		;CURRENT ESCAPE SYNTAX RULE - TERMINAL 
			.BLKB	1 
$DEF	UCB$L_IRP		 			;CURRENT I/O REQUEST PACKET ADDRESS 
			.BLKL	1 
$DEF	UCB$W_REFC		 			;REFERENCE COUNT OF PROCESSES 
			.BLKW	1 
$DEF	UCB$B_DIPL		 			;DEVICE INTERRUPT PRIORITY LEVEL 
$DEF	UCB$B_STATE		 		; LINK STATE FOR NETWORK TRANSITIONS 
			.BLKB	1 
$DEF	UCB$B_AMOD		 			;ALLOCATION ACCESS MODE 
			.BLKB	1 
$DEF	UCB$L_AMB		 			;ASSOCIATED UNIT CONTROL BLOCK POINTER 
			.BLKL	1 
$DEF	UCB$W_STS		 			;DEVICE UNIT STATUS 
	$VIELD	UCB,0,<- 			; UCB$W_STS BIT DEFINITIONS 
		<TIM,,M>- 			; TIME OUT ENABLED (1=YES) 
		<INT,,M>- 			; INTERRUPT EXPECTED (1=YES) 
		<ERLOGIP,,M>- 		; ERROR LOG IN PROGRESS ON UNIT (1=YES) 
		<CANCEL,,M>- 		; CANCEL I/O ON UNIT (1=YES) 
		<ONLINE,,M>- 		; UNIT ONLINE (1=YES) 
		<POWER,,M>- 		; POWER FAILED WHILE UNIT BUSY (1=YES) 
		<TIMOUT,,M>- 		; UNIT TIMED OUT (1=YES) 
		<INTTYPE,,M>- 		; RECEIVER INTERRUPT IF SET 
		<BSY,,M>- 			; UNIT IS BUSY (1=YES) 
		<MOUNTING,,M>- 		; DEVICE IS BEING MOUNTED 
		<DEADMO,,M>- 		; DEALLOCATE AT DISMOUNT 
		<VALID,,M>- 		; VOLUME IS VALID 
		>			; END OF BIT DEFINITIONS 
			.BLKW	1 
$DEF	UCB$W_DEVSTS		 		; DEVICE DEPENDENT STATUS 
			.BLKW	1 
$DEF	UCB$L_CPID		 			;MAILBOX CREATOR PROCESS ID 
$DEF	UCB$L_DUETIM		 		;DUE TIME FOR I/O COMPLETION 
			.BLKL	1 
$DEF	UCB$L_OPCNT		 			;COUNT OF OPERATIONS COMPLETED 
			.BLKL	1 
$DEF	UCB$L_LOGADR		 		;MAILBOX LOGICAL NAME BLOCK ADDRESS 
$DEF	UCB$L_SVPN		 			;SYSTEM VIRTUAL PAGE/MAP REGISTER NUMBER 
			.BLKL	1 
$DEF	UCB$L_SVAPTE		 		;SYSTEM VIRTUAL ADDRESS OF PTE 
			.BLKL	1 
$DEF	UCB$W_BOFF		 			;BYTE OFFSET IN FIRST PAGE 
			.BLKW	1 
$DEF	UCB$W_BCNT		 			;BYTE COUNT OF TRANSFER 
			.BLKW	1 
$DEF	UCB$B_ERTCNT		 		;ERROR LOG DEVICE CURRENT ERROR RETRY COUNT 
			.BLKB	1 
$DEF	UCB$B_ERTMAX		 		;ERROR LOG DEVICE MAXIMUM ERROR RETRY COUNT 
			.BLKB	1 
$DEF	UCB$W_ERRCNT		 		;DEVICE ERROR COUNT 
			.BLKW	1 
$DEF	UCB$C_LENGTH
$DEF	UCB$K_LENGTH					;LENGTH OF STANDARD UCB 
						;MARK END OF STANDARD UCB 
 
; 
; DEVICE DEPENDENT UCB EXTENSIONS 
; 
; MAILBOX 
; 
 
	. = 0  
	$VIELD	UCB,0,<- 			; UCB$W_DEVSTS BITS FOR MAILBOXES AND NETWORKS 
		<PRMMBX,,M>- 		; PERMANENT MAILBOX 
		<DELMBX,,M>- 		; MAILBOX MARKED FOR DELETE 
		<NT_BFROVF,,M>- 		; TOO MANY BYTES RCVD 
		<NT_SDP,,M>- 		; SYNCHRONOUS DISCONNECT IN PROGRESS 
		<NT_NAME,,M>- 		; LINK HAS DECLARED A CONNECT NAME 
		<NT_BREAK,,M>- 		; LINK IS BEING BROKEN 
		<NT_NONTR,,M>- 		; LINK IS NON-TRANSPARENT 
		>	
			.BLKB	-4 
$DEF	UCB$W_MB_SEED		 		;UNIT NUMBER SEED 
			.BLKW	1 
				 			;SPARE UNUSED WORD 
			.BLKW	1 
				 			;DUMMY FIELD 
 
; 
; ERROR LOG DEVICES (ALL) 
; 
 
			.BLKL	1 
	. = 116 			; 
$DEF	UCB$B_SLAVE		 			;SLAVE CONTROLLER NUMBER 
			.BLKB	1 
$DEF	UCB$B_SPR		 			;SPARE UNUSED BYTE 
			.BLKB	1 
$DEF	UCB$B_FEX		 			;FUNCTION DISPATCH TABLE INDEX 
			.BLKB	1 
$DEF	UCB$B_CEX		 			;CASE TABLE FUNCTION EXECUTION INDEX 
			.BLKB	1 
$DEF	UCB$L_EMB		 			;ADDRESS OF ERROR MESSAGE BUFFER 
			.BLKL	1 
$DEF	UCB$L_DPC		 			;SAVED DRIVER SUBROUTINE RETURN ADDRESS 
						;MARK END OF ERROR LOG DEVICE PROLOGUE 
 
; 
; DISK (ALL) 
; 
 
			.BLKL	1 
	. = 124 			; 
	$VIELD	UCB,0,<- 			;UCB$W_DEVSTS BITS FOR DISKS 
		<ECC,,M>- 			;ECC CORRECTION MADE 
		<DIAGBUF,,M>- 		;DIAGNOSTIC BUFFER SPECIFIED 
		<NOCNVRT,,M>- 		;NO LBN TO MEDIA ADDRESS CONVERSION 
		<DX_WRITE,,M>- 		;FLOPPY WRITE OPERATION 
		>	
			.BLKL	1 
$DEF	UCB$L_MAXBLOCK		 		;RANDOM ACCESS DEVICE HIGHEST BLOCK 
			.BLKL	1 
$DEF	UCB$W_FUNC		 			;I/O FUNCTION MODIFIERS 
			.BLKW	1 
$DEF	UCB$W_OFFSET		 		;CURRENT OFFSET REGISTER CONTENTS 
			.BLKW	1 
$DEF	UCB$L_MEDIA		 			;MEDIA ADDRESS LONGWORD 
$DEF	UCB$W_DA		 			;SAVED DESIRED SECTOR/TRACK ADDRESS REGISTER 
			.BLKW	1 
$DEF	UCB$W_DC		 			;SAVED DESIRED CYLINDER ADDRESS REGISTER 
			.BLKW	1 
$DEF	UCB$W_EC1		 			;ECC POSITION REGISTER 
			.BLKW	1 
$DEF	UCB$W_EC2		 			;ECC PATTERN REGISTER 
			.BLKW	1 
$DEF	UCB$B_OFFNDX		 		;CURRENT OFFSET TABLE INDEX 
			.BLKB	1 
$DEF	UCB$B_OFFRTC		 		;CURRENT OFFSET RETRY COUNT 
			.BLKB	1 
$DEF	UCB$W_BCR		 			;BYTE COUNT REGISTER 
			 
 
; 
; CONSOLE FLOPPY (DX) 
; 
 
			.BLKW	1 
	. = 0 			; 
			.BLKB	-16 
$DEF	UCB$L_DX_BUF		 		;ADDRESS OF SECTOR BUFFER 
			.BLKL	1 
$DEF	UCB$L_DX_BFPNT		 		;CURRENT SECTOR BUFFER POINTER 
			.BLKL	1 
$DEF	UCB$L_DX_RXDB		 		;SAVED CONTENTS OF RECEIVER DATA BUFFER 
			.BLKL	1 
$DEF	UCB$W_DX_BCR		 		;CURRENT FLOPPY BYTE COUNT 
			.BLKW	1 
$DEF	UCB$B_DX_SCTCNT		 		;CURRENT SECTOR BYTE COUNT 
			.BLKB	1 
$DEF	UCB$B_DX_SPARE		 		;SPARE 

; 
; TERMINAL DEPENDENT BITS 
; 
	$VIELD	UCB,0,<- 			; UCB$W_DEVSTS BITS 
		<JOB,,M>- 			; JOB CONTROLLER NOTIFIED 
		<TT_TIMO,,M>- 		; TERMINAL READ TIMEOUT IN PROGRESS 
		<TT_NOTIF,,M>- 		; TERMINAL USER NOTIFIED OF UNSOLICTED DATA 
		>	
; 
; NETWORK LOGICAL LINK (NETWORK MAILBOX) EXTENSION 
; 
			.BLKB	1 
	. = 116  
$DEF	UCB$L_NT_DATSSB		 		; ADDRESS OF DATA SUBCHANNEL STATUS BLOCK 
			.BLKL	1 
$DEF	UCB$L_NT_INTSSB		 		; ADDRESS OF INT/LS SSB 
			.BLKL	1 
$DEF	UCB$W_NT_CHAN		 		; DDCMP CHANNEL NO. 
	$VIELD	UCB,0,<- 				; NETWORK - LINK SERVICE DEFS 
		<LTYPE,2,>- 			; LINK TYPE BITS 
		<SEGFLO,,>- 			; SEGMENT REQUEST COUNTS 
		<MSGFLO,,>- 			; MESSAGE REQUEST COUNTS 
		<MSGACK,,>- 			; MESSAGE ACK/NAK 
		<BACKP,,>- 			; BACKPRESSURE (1=> NO FLOW) 
		<LNKPRI,2,>- 		; LINK PRIORITY (IGNORED) 
		>	
$EQULST UCB$C_,$GBL,0,1,<- 				; NETWORK CONSTANTS 
		<LOGLNK,1>- 		; CONNECT IS FOR LOGICAL LINK (NOT SINGLE MSG) 
		>
			.BLKW	1 

	$DEFEND	UCB,$GBL,DEF

	.ENDM	$UCBDEF
 
 
;+ 
; VIRTUAL ADDRESS VIELDS 
;- 
	.MACRO	$VADEF,$GBL

	$DEFINI	VA,$GBL

 
	$VIELD	VA,0,<-  
		<BYTE,9,M>- 		;BYTE VIELD 
		<VPN,21,M>- 		;VIRTUAL PAGE NUMBER 
		<P1,,M>- 			;P1 SPACE 
		<SYSTEM,,M>- 		;SYSTEM SPACE 
		>	

	$DEFEND	VA,$GBL,DEF

	.ENDM	$VADEF
 
;+ 
; VCB - VOLUME CONTROL BLOCK 
; 
; THERE IS ONE VOLUME CONTROL BLOCK FOR EACH MOUNTED DEVICE UNIT IN A 
; SYSTEM. IT CONTAINS INFORMATION NECESSARY TO CONTROL ACCESS TO AND 
; VERIFY CERTAIN VOLUME PARAMETERS IN THE CASE A DEVICE UNIT SHOULD 
; ERRORONEOUSLY GO OFFLINE. 
;- 
 
	.MACRO	$VCBDEF,$GBL

	$DEFINI	VCB,$GBL

						; MARK 1 POSITION 
$DEF	VCB$L_FCBFL		 			; FCB LISTHEAD FORWARD LINK 
			.BLKL	1 
$DEF	VCB$L_FCBBL		 			; FCB LISTHEAD BACKWARD LINK 
			.BLKL	1 
$DEF	VCB$W_SIZE		 		; SIZE OF VCB IN BYTES 
			.BLKW	1 
$DEF	VCB$B_TYPE		 		; STRUCTURE TYPE OF VCB 
			.BLKB	1 
$DEF	VCB$C_MRKLEN
$DEF	VCB$K_MRKLEN				; MARK LENGTH 
						; MARK 2 POSITION 
$DEF	VCB$B_STATUS		 		; VOLUME STATUS 
	$VIELD	VCB,0,<-  
		<WRITE_IF,,>- 	; INDEX FILE IS WRITE ACCESSED 
		<WRITE_SM,,>- 	; STORAGE MAP IS WRITE ACCESSED 
		<,3,>- 		; SPARE BITS 
		<EXTFID,,>- 		; VOLUME HAS 24 BIT FILE NUMBERS 
		<GROUP,,>- 		; VOLUME IS MOUNTED /GROUP 
		<SYSTEM,,>- 		; VOLUME IS MOUNTED /SYSTEM 
		>	
			.BLKB	1 
$DEF	VCB$W_TRANS		 		; VOLUME TRANSACTION COUNT 
			.BLKW	1 
$DEF	VCB$W_RVN		 			; RELATIVE VOLUME NUMBER 
			.BLKW	1 
$DEF	VCB$L_AQB		 			; ADDRESS OF AQB 
			.BLKL	1 
$DEF	VCB$T_VOLNAME		 		; VOLUME LABEL BLANK FILLED 
			.BLKB	12 
$DEF	VCB$L_RVT		 			; ADDRESS OF UCB OR RELATIVE VOLUME TABLE 
			.BLKL	1 
$DEF	VCB$C_COMLEN
$DEF	VCB$K_COMLEN				; LENGTH OF COMMON AREA 
						; MARK 3 POSITION 
$DEF	VCB$L_HOMELBN		 		; LBN OF VOLUME HOME BLOCK 
			.BLKL	1 
$DEF	VCB$L_HOME2LBN		 		; LBN OF ALTERNATE VOLUME HOME BLOCK 
			.BLKL	1 
$DEF	VCB$L_IXHDR2LBN		 		; LBN OF ALTERNATE INDEX FILE HEADER 
			.BLKL	1 
$DEF	VCB$L_IBMAPLBN		 		; LBN OF INDEX FILE BITMAP 
			.BLKL	1 
$DEF	VCB$L_SBMAPLBN		 		; LBN OF STORAGE BITMAP 
			.BLKL	1 
$DEF	VCB$B_IBMAPSIZE		 		; SIZE OF INDEX FILE BITMAP 
			.BLKB	1 
$DEF	VCB$B_SBMAPSIZE		 		; SIZE OF STORAGE BITMAP 
			.BLKB	1 
$DEF	VCB$B_IBMAPVBN		 		; CURRENT VBN IN INDEX FILE BIT MAP 
			.BLKB	1 
$DEF	VCB$B_SBMAPVBN		 		; CURRENT VBN IN STORAGE MAP 
			.BLKB	1 
$DEF	VCB$W_CLUSTER		 		; VOLUME CLUSTER SIZE 
			.BLKW	1 
$DEF	VCB$W_EXTEND		 		; VOLUME DEFAULT FILE EXTENSION LENGTH 
			.BLKW	1 
$DEF	VCB$L_FREE		 			; NUMBER OF FREE BLOCKS ON VOLUME 
			.BLKL	1 
$DEF	VCB$L_MAXFILES		 		; MAXIMUM NUMBER OF FILES ALLOWED ON VOLUME 
			.BLKL	1 
$DEF	VCB$B_WINDOW		 		; VOLUME DEFAULT WINDOW SIZE 
			.BLKB	1 
$DEF	VCB$B_LRU_LIM		 		; VOLUME DIRECTORY LRU SIZE LIMIT 
			.BLKB	1 
$DEF	VCB$W_FILEPROT		 		; VOLUME DEFAULT FILE PROTECTION 
			.BLKW	1 
$DEF	VCB$W_MCOUNT		 		; MOUNT COUNT 
			.BLKW	1 
$DEF	VCB$B_EOFDELTA		 		; INDEX FILE EOF UPDATE COUNT 
			.BLKB	1 
$DEF	VCB$B_RESFILES		 		; NUMBER OF RESERVED FILES ON VOLUME 
			.BLKB	1 
$DEF	VCB$C_LENGTH
$DEF	VCB$K_LENGTH				; LENGTH OF STANDARD VCB 
 
; 
; MTAACP VOLUME CONTROL BLOCK FIELDS 
; 
	. = 0 			; RESET POINTER TO  FCB LISTHEAD 
$DEF	VCB$L_BLOCKFL		 		; BLOCKED REQUEST LISTHEAD FORWARD LINK 
			.BLKL	1 
$DEF	VCB$L_BLOCKBL		 		; BLOCKED REQUEST LISTHEAD BACKWARD LINK 
			.BLKL	1 
	. = 11 			; RESET POINTER TO STATUS 
	$VIELD	VCB,0,<- 	 
		<PARTFILE,,>- 	; PARTIAL FILE EXISTS ON TAPE 
		<LOGICEOVS,,>- 	; POSITIONED AT LOGICAL END OF VOLUME SET 
		<WAIMOUVOL,,M>- 	; WAIT FOR VOLUME MOUNT 
		<WAIREWIND,,M>- 	; WAIT FOR REWIND COMPLETION 
		<WAIUSRLBL,,M>- 	; WAIT FOR USER LABEL 
		<CANCELIO,,M>- 	; CANCEL IO 
		<MUSTCLOSE,,M>- 	; MUST CLOSE FILE 
		>	
 
	. = 36 			; RESET POINTER TO END OF COMMON VCB 
$DEF	VCB$L_CUR_FID		 		; CURRENT FILE IDENTIFICATION 
$DEF	VCB$W_CUR_NUM		 		; CURRENT FILE SECTION NUMBER 
			.BLKW	1 
$DEF	VCB$W_CUR_SEQ		 		; CURRENT FILE SEQUENCE NUMBER 
			.BLKW	1 
$DEF	VCB$L_START_FID		 		; FILE IDENTIFICATION AT START OF SEARCH 
$DEF	VCB$W_START_NUM		 	; FILE SECTION NUMBER AT START OF SEARCH 
			.BLKW	1 
$DEF	VCB$W_START_SEQ		 	; FILE SEQUENCE NUMBER AT START OF SEARCH 
			.BLKW	1 
$DEF	VCB$W_MODE		 		; MODE OF OPERATION 
	$VIELD	VCB,0,<-  
		<OVREXP,,>- 		; OVERRIDE EXPIRATION 
		<OVRACC,,>- 		; OVERRIDE ACCESS 
		<OVRLBL,,>- 		; OVERRIDE LABELS 
		<OVRSETID,,>- 	; OVERRIDE SET IDENTIFIER 
		<INTCHG,,>- 		; INTERCHANGE TAPE 
		<EBCDIC,,>- 		; EBCDIC CODE SET 
		<,2,>- 		; SPARE 
		<STARFILE,,>- 	; CURRENT FILE IS A STARLET PRODUCED FILE 
		>	
	 
			.BLKW	1 
$DEF	VCB$B_TM		 			; NUMBER OF TM'S INTO FILE 
			.BLKB	1 
$DEF	VCB$B_CUR_RVN		 		; CURRENT RELATIVE VOLUME 
			.BLKB	1 
$DEF	VCB$L_ST_RECORD		 		; NUMBER OF RECORDS UP TO AND INCLUDING LAST TAPE MARK 
			.BLKL	1 
$DEF	VCB$L_MVL		 			; ADDRESS OF MAGNETIC TAPE VOLUME LIST 
			.BLKL	1 
$DEF	VCB$L_WCB		 			; ADDRESS OF WINDOW FOR THIS VOLUME 
			.BLKL	1 
$DEF	VCB$L_VPFL		 			; VIRTUAL PAGE LIST HEAD 
			.BLKL	1 
$DEF	VCB$L_VPBL		 			; VIRTUAL PAGE LIST TAIL 
			.BLKL	1 
$DEF	VCB$L_USRLBLAST		 		; ADDRESS OF USER LABEL AST CONTROL BLOCK 
 
; NOTE THAT FCP AND MTAACP SHARE VCB$W_MCOUNT(DISPLACEMENT 76) 
			.BLKL	1 

	$DEFEND	VCB,$GBL,DEF

	.ENDM	$VCBDEF
 
;+ 
; VOL1 ANSI MAGNETIC TAPE LABEL 
; THIS IS THE FIRST BLOCK ON EVERY ANSI LABELED MAGNETIC TAPE. 
; IT IDENTIFIES THE VOLUME AND ITS PROTECTION. 
;- 
	.MACRO	$VL1DEF,$GBL	;VOL1 LABEL FORMAT 

	$DEFINI	VL1,$GBL

 
$DEF	VL1$L_VL1LID		 	;LABEL IDENTIFIER AND NUMBER 'VOL1' 
			.BLKL	1 
$DEF	VL1$T_VOLLBL		 	;VOLUME LABEL 
			.BLKB	6 
$DEF	VL1$B_VOLACCESS		 	;VOLUME ACCESS 
			.BLKB	1 
				 		;SPACES 
			.BLKB	26 
$DEF	VL1$T_VOLOWNER		 	;VOLUME OWNER IDENTIFICATION 
			.BLKB	13 
$DEF	VL1$B_DECSTDVER		 	;DEC STANDARD VERSION 
			.BLKB	1 
				 		;SPACES 
			.BLKB	28 
$DEF	VL1$B_LBLSTDVER		 	;LABEL STANDARD VERSION '3' 
			.BLKB	1 

	$DEFEND	VL1,$GBL,DEF

	.ENDM	$VL1DEF
 
 
;+ 
; WCB - WINDOW CONTROL BLOCK 
; 
; THERE IS A WINDOW CONTROL BLOCK FOR EACH FILE ACCESSED BY A PROCESS. 
; IT CONTAINS MAPPING INFORMATION SUCH THAT A LARGE PERCENTAGE OF VIRTUAL 
; FILE I/O CAN BE MAPPED FROM VIRTUAL TO LOGICAL BLOCK NUMBERS WITHOUT 
; HAVING TO READ THE RESPECTIVE FILE HEADER. 
;- 
 
	.MACRO	$WCBDEF,$GBL

	$DEFINI	WCB,$GBL

			 
$DEF	WCB$L_WLFL		 			; WINDOW LIST FORWARD LINK 
			.BLKL	1 
$DEF	WCB$L_WLBL		 			; WINDOW LIST BACKWARD LINK 
			.BLKL	1 
$DEF	WCB$W_SIZE		 		; SIZE OF WINDOW BLOCK IN BYTES 
			.BLKW	1 
$DEF	WCB$B_TYPE		 		; STRUCTURE TYPE OF WCB 
			.BLKB	1 
$DEF	WCB$B_ACCESS		 		; ACCESS CONTROL BYTE 
	$VIELD	WCB,0,<- 			; WCB$B_ACCESS DEFINITIONS 
		<READ,,M>- 		; READ ACCESS ALLOWED (1=YES) 
		<WRITE,,M>- 		; WRITE ACCESS ALLOWED (1=YES) 
		<NOTFCP,,M>- 		; FILE NOT ACCESSED BY FCP IF SET 
		<SHRWCB,,M>- 		; SHARED WINDOW 
		>			; END OF WCB$B_ACCESS DEFINITIONS 
			.BLKB	1 
$DEF	WCB$L_PID		 			; PROCESS ID OF ACCESSOR PROCESS 
			.BLKB	2 
$DEF	WCB$W_REFCNT		 		; REFERENCE COUNT FOR SHARED WINDOW 
			.BLKW	1 
$DEF	WCB$L_ORGUCB		 		; ADDRESS OF ORIGINAL UCB FROM CCB 
			.BLKL	1 
$DEF	WCB$W_ACON		 		; ACCESS CONTROL INFORMATION 
				; NOTE - THESE BITS TRACK THE BITS 
				; IN FIB$L_ACCTL 
	$VIELD	WCB,0,<-  
		<NOWRITE,,>- 		; NO OTHER WRITERS 
		<DLOCK,,>- 		; ENABLE DEACCESS LOCK 
		<,2,>- 		; UNUSED 
		<SPOOL,,>- 		; SPOOL FILE ON CLOSE 
		<WRITECK,,>- 		; ENABLE WRITE CHECK 
		<SEQONLY,,>- 		; SEQUENTIAL ONLY ACCESS 
		<,1,>- 		; SPARE 
		<WRITEAC,,>- 		; WRITE ACCESS 
		<READCK,,>- 		; ENABLE READ CHECK 
		<NOREAD,,>- 		; NO OTHER READERS 
		>	
			.BLKW	1 
$DEF	WCB$W_NMAP		 		; NUMBER OF MAPPING POINTERS 
			.BLKW	1 
$DEF	WCB$L_FCB		 			; ADDRESS OF FCB 
			.BLKL	1 
$DEF	WCB$L_RVT		 			; ADDRESS OF RELATIVE VOLUME TABLE 
			.BLKL	1 
$DEF	WCB$L_STVBN		 			; STARTING VBN MAPPED BY WINDOW 
			.BLKL	1 
$DEF	WCB$C_MAP
$DEF	WCB$K_MAP					; MAP POINTERS START HERE 
$DEF	WCB$C_LENGTH
$DEF	WCB$K_LENGTH				; LENGTH OF STANDARD WCB SANS POINTERS 
$DEF	WCB$W_P1_COUNT		 		; COUNT FIELD OF FIRST POINTER 
			.BLKW	1 
$DEF	WCB$L_P1_LBN		 		; LBN FIELD OF SECOND POINTER 
			.BLKL	1 
$DEF	WCB$W_P2_COUNT		 		; COUNT FIELD OF SECOND POINTER 
			.BLKW	1 
$DEF	WCB$L_P2_LBN		 		; LBN FIELD OF FIRST POINTER 
			.BLKL	1 
	. = 0  
				; FORMAT OF RETRIEVAL POINTER 
$DEF	WCB$W_COUNT		 		; COUNT FIELD 
			.BLKW	1 
$DEF	WCB$L_LBN		 			; LBN FIELD 
			.BLKL	1 
	. = 0  
			.BLKB	-6 
$DEF	WCB$W_PREVCOUNT		 		; PREVIOUS RETRIEVAL POINTER 
			.BLKW	1 
$DEF	WCB$L_PREVLBN		  
				; RETRIEVAL POINTER FORMAT 
			.BLKL	1 

	$DEFEND	WCB,$GBL,DEF

	.ENDM	$WCBDEF
 
;+ 
; WORKING SET LIST DEFINITIONS 
;- 
 
	.MACRO	$WSLDEF,$GBL

	$DEFINI	WSL,$GBL

 
	$VIELD	WSL,0,<-  
-					;THE FOLLOWING 5 BITS MUST BE IN ORDER 
		<VALID,,M>- 			;WSL ENTRY VALID 
		<PAGTYP,3,M>- 		;PAGE TYPE (SEE PFNDEF FOR VALUES) 
		<PFNLOCK,,M>- 			;PAGE FRAME LOCK 
-					;THE PRECEDING 5 BITS MUST BE IN ORDER 
		<WSLOCK,,M>- 			;WORKING SET LOCK 
		<GOODPAGE,,M>- 		;THIS PAGE SHOULD REMAIN IN WS ONE MORE PASS 
		<,1,M>- 			;SPARE BIT 
		<MODIFY,,M>- 			;SAVED MODIFY BIT 
		>	
 
$EQU	WSL$C_LENGTH	4			;SIZE OF WS LIST ENTRY 
; 
; PAGE TYPE VIELD DEFINITIONS 
; 
$EQULST WSL$C_,$GBL,0,1,<-  
		<PROCESS,0@WSL$V_PAGTYP>- 	;PROCESS PAGE 
		<SYSTEM,1@WSL$V_PAGTYP>- 	;SYSTEM PAGE 
		<GLOBAL,2@WSL$V_PAGTYP>- 	;GLOBAL PAGE (READ ONLY) 
		<GBLWRT,3@WSL$V_PAGTYP>- 	;GLOBAL WRITABLE PAGE 
		<PPGTBL,4@WSL$V_PAGTYP>- 	;PROCESS PAGE TABLE 
		<GPGTBL,5@WSL$V_PAGTYP>- 	;GLOBAL PAGE TABLE 
		>

	$DEFEND	WSL,$GBL,DEF

	.ENDM	$WSLDEF
 
;+ 
; WAIT QUEUE HEADER DEFINITIONS 
;- 
 
	.MACRO	$WQHDEF,$GBL

	$DEFINI	WQH,$GBL

 
$DEF	WQH$L_WQFL		 		;HEAD OR FORWARD LINK 
			.BLKL	1 
$DEF	WQH$L_WQBL		 		;TAIL OR BACKWARD LINK 
			.BLKL	1 
$DEF	WQH$W_WQCNT		 		;WAIT QUEUE COUNT 
			.BLKW	1 
$DEF	WQH$W_WQSTATE		 	;STATE NUMBER FOR WAIT 
			.BLKW	1 
$DEF	WQH$C_LENGTH
$DEF	WQH$K_LENGTH				;LENGTH OF WAIT QUEUE HEADER 
 

	$DEFEND	WQH,$GBL,DEF

	.ENDM	$WQHDEF
 
 
