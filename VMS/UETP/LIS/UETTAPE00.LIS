UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      73  READ ONLY DATA
   (2)     377  READ/WRITE DATA
   (2)     460  MAIN PROGRAM
   (2)     530  MAIN CODE
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page   1
1.07                                                                                                                             (1)

                                     0000     1 ;	UETP prefix file (contains macro library file specs).
                                     0000     2 ;
                                     0000     3 	.LIBRARY	/EXECML$/	;SYSTEM MACROS
                                     0000     4 	.LIBRARY	/LIBD$:[SYSTST.OBJ]SYSTST.MLB/ ; PRIVATE UETP,SYSTST LIB
                                     0000     5 	.LIST	MEB
                                     0000     6 ;
                                     0000     1 	.TITLE UETTAPE00 - VAX/VMS UETP TAPE EXERCISER
                                     0000     2 	.IDENT /1.07/
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1978
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 
                                     0000    24 ;++
                                     0000    25 ; FACILITY:
                                     0000    26 ; 	THIS MODULE WILL BE DISTRIBUTED WITH VAX/VMS UNDER THE UETP UIC.
                                     0000    27 ;
                                     0000    28 ; ABSTRACT:
                                     0000    29 ;	THIS MODULE EXERCISES ANY TAPE IN THE VMS SYSTEM USING
                                     0000    30 ;	THE VMS-32 ASYNCHRONOUS UNBLOCKED RECORD I/O FUNCTIONS.
                                     0000    31 ;	A LARGE FILE IS CREATED ON THE TAPE TO BE TESTED.
                                     0000    32 ;	MULTIPLE 1600, 32766 AND 18 BYTE RECORDS ARE WRITTEN
                                     0000    33 ;	SEQUENTIALLY TO THE FILE AND THE RECORDS ARE READ AND
                                     0000    34 ;	VERIFIED.
                                     0000    35 ;
                                     0000    36 ;
                                     0000    37 ; ENVIRONMENT:
                                     0000    38 ; 	THE MODULE WILL RUN IN USER ACCESS MODE, WITH INTERRUPTS
                                     0000    39 ;	ENABLED AT ALL TIMES.  AN AST LIMIT MINIMUM OF 10(10) AND
                                     0000    40 ;	A BUFFERED I/O LIMIT MINIMUM OF 10(10) ARE REQUIRED TO
                                     0000    41 ;	RUN THIS PROGRAM.
                                     0000    42 ;
                                     0000    43 ; AUTHOR: PAULA TIRAK,	 CREATION DATE: JUNE, 1978
                                     0000    44 ;
                                     0000    45 ; MODIFIED BY:
                                     0000    46 ;
                                     0000    47 ;	, : VERSION
                                     0000    48 ; 1.0   -
                                     0000    49 ; 1.01  -	REMOVED REFERENCES TO PC_SAVE	PJT 3-AUG-78
                                     0000    50 ;		CHANGED REWIND HANDLERS
                                     0000    51 ;		INSERTED WAKE_S
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page   2
1.07                                                                                                                             (1)

                                     0000    52 ; 1.02  -	PUT CTRL/C HANDLER IN REWIND	PJT 12-AUG-78
                                     0000    53 ;		DELETED FAB STATEMENTS FROM $DISCONNECTS
                                     0000    54 ;		CHANGED .PSECT NAME FROM UETTAP TO UETTAPE00
                                     0000    55 ;		CLEARED #BIT0 IN IOSTAT AT ALL_SET
                                     0000    56 ; 1.03  -	DELETED $WAIT STATEMENTS	PJT 14-AUG-78
                                     0000    57 ; 1.04  -	CHANGED PSECT NAME BACK TO UETTAP	PJT 14-AUG-78
                                     0000    58 ;		DELETED RWO ON FAB'U AND REPLACED IT WITH NEF SWITCH
                                     0000    59 ; 1.05  -	PUT ERROR HANDLING ON RMS COMMANDS FOR	PJT 16-AUG-78
                                     0000    60 ;		REWINDS AFTER WRITES
                                     0000    61 ;		REMOVED ERROR HANDLING FROM FINAL DISCONNECTS AND CLOSES
                                     0000    62 ; 1.06  -	PUT FAB ERROR HANDLING IN ERR'N:	PJT 17-AUG-78
                                     0000    63 ;		CLEARED BIT2 IN IOSTAT AFTER CONTROL C DETECTED
                                     0000    64 ; 1.07  -	DELETED NOTRAN CODE FOR CONTROLLER NAME	PJT 18-AUG-78
                                     0000    65 ;--
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page   3
1.07            READ ONLY DATA                                                                                                   (2)

                                     0000    67 	.SBTTL	READ ONLY DATA
                                 00000000    68 	.PSECT	RODATA,NOEXE,NOWRT,LONG
                                     0000    69 ;
                                     0000    70 ;	DEFINITIONS
                                     0000    71 ;
                                     0000    72 ;
                           00000001  0000    73 	BIT0=1		; ONE BIT MASK
                           00000002  0000    74 	BIT1=2		; ONE BIT MASK
                           00000004  0000    75 	BIT2=4		; ONE BIT MASK
                                     0000    76 ;
                           00002000  0000    77 BYTE_CNT = 8192
                                     0000    78 ;
                                     0000    79 
                           00000040  0000    80 CLSTR_FLAG = 64
                                     0000    81 CLUSTER2:
                                     0000    82 	STRING	I,<CLUSTER2>
                           00000008  0000       	.LONG	$$$CHARS
                           00000008' 0004       	.ADDRESS .+4
            32 52 45 54 53 55 4C 43  0008       	.ASCII	\CLUSTER2\
                                     0010    83 CNTRLCMSG:
                                     0010    84 	STRING	I,<aborted via a user control C>
                           0000001C  0010       	.LONG	$$$CHARS
                           00000018' 0014       	.ADDRESS .+4
20 61 69 76 20 64 65 74 72 6F 62 61  0018       	.ASCII	\aborted via a user control C\
72 74 6E 6F 63 20 72 65 73 75 20 61  0024       
                        43 20 6C 6F  0030       
                                     0034    85 ;
                                     0034    86 FILE_NAME_STR:
                           0000000D' 0034    87 	.LONG	NAME_SIZE
                           0000003C' 0038    88 	.ADDRESS FILE_NAME
                                     003C    89 FILE_NAME:
41 44 2E 56 45 44 49 4E 49 54 45 55  003C    90 	.ASCII	/UETINIDEV.DAT/
                                 54  0048       
                           0000000D  0049    91 	NAME_SIZE=.-FILE_NAME
                                     0049    92 ;
                                     0049    93 LOGNAM:
                                     0049    94 	STRING	I,<UETP$CTRLNAME>	; LOG NAME STRING FOR $TRNLOG_S
                           0000000D  0049       	.LONG	$$$CHARS
                           00000051' 004D       	.ADDRESS .+4
4D 41 4E 4C 52 54 43 24 50 54 45 55  0051       	.ASCII	\UETP$CTRLNAME\
                                 45  005D       
                                     005E    95 LOGNAM1:
                                     005E    96 	STRING	I,<UETP$DETACH>
                           0000000B  005E       	.LONG	$$$CHARS
                           00000066' 0062       	.ADDRESS .+4
   48 43 41 54 45 44 24 50 54 45 55  0066       	.ASCII	\UETP$DETACH\
                           00007FFE  0071    97 MAX_REC = 32766
                                     0071    98 
                                     0071    99 MT_TABLE:
                           00000032  0071   100 	.LONG	50			;# ITERATIONS FOR FIRST RECORD SIZE
                           00000640  0075   101 	.LONG	1600			; # BYTES IN RECORD
                           00000019  0079   102 	.LONG	25
                           00007FFE  007D   103 	.LONG	32766
                           00001388  0081   104 	.LONG	5000
                           00000012  0085   105 	.LONG	18
                           00000000  0089   106 	.LONG	0
                                     008D   107 NOMORDEV:
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page   4
1.07            READ ONLY DATA                                                                                                   (2)

                                     008D   108 	STRING	I,<no more drives to test>
                           00000016  008D       	.LONG	$$$CHARS
                           00000095' 0091       	.ADDRESS .+4
76 69 72 64 20 65 72 6F 6D 20 6F 6E  0095       	.ASCII	\no more drives to test\
      74 73 65 74 20 6F 74 20 73 65  00A1       
                           00000040  00AB   109 PAGES = 64				; # OF PAGES FOR $EXPREG
                                     00AB   110 TSTNAM:
                                     00AB   111 	STRING	I,<UETTAPE00>
                           00000009  00AB       	.LONG	$$$CHARS
                           000000B3' 00AF       	.ADDRESS .+4
         30 30 45 50 41 54 54 45 55  00B3       	.ASCII	\UETTAPE00\
                                     00BC   112 TTNAM:
                                     00BC   113 	STRING	I,<TT>
                           00000002  00BC       	.LONG	$$$CHARS
                           000000C4' 00C0       	.ADDRESS .+4
                              54 54  00C4       	.ASCII	\TT\
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page   5
1.07            READ ONLY DATA                                                                                                   (2)

                                     00C6   115 ;
                                     00C6   116 ;****************************************************************
                                     00C6   117 ;			MACRO DEFINITIONS
                                     00C6   118 ;****************************************************************
                                     00C6   119 ;
                                     00C6   120 ;
                                     00C6   121 	.MACRO	BUFFERS U
                                     00C6   122 ;
                                     00C6   123 ; BUFFER ALLOCATIONS
                                     00C6   124 ;
                                     00C6   125 BUF'U:
                                     00C6   126 	.LONG	0		; ADDRESS OF READ BUFFER FOR A TAPE UNIT
                                     00C6   127 DATA_ADR'U:
                                     00C6   128 	.LONG	0		; ADDRESS OF DATA BYTES READ FOR THIS UNIT
                                     00C6   129 ITER'U:
                                     00C6   130 	.LONG	0		; COUNTER FOR # OF READ/WRITE TRANSFERS PER
                                     00C6   131 				; FILESIZE PER UNIT
                                     00C6   132 LIMIT'U:
                                     00C6   133 	.LONG	0		; LIMIT FOR # OF READ/WRITE TRANSFERS PER
                                     00C6   134 				; FILESIZE PER UNIT
                                     00C6   135 MTBUF_PTR'U:
                                     00C6   136 	.ADDRESS 0		; PTR. TO # OF ITERATIONS AND REC. SIZE
                                     00C6   137 				; IN MT_TABLE
                                     00C6   138 REC_SIZE'U:
                                     00C6   139 	.LONG	0		; SIZE OF READ/WRITE RECORD
                                     00C6   140 SIZE_CTR'U:
                                     00C6   141 	.LONG	0		; COUNTS # OF BYTES WRITTEN FROM DYNAMIC
                                     00C6   142 				; BUFFER TO TAPE SO WON'T OVERFLOW
                                     00C6   143 ;
                                     00C6   144 ;	RMS REQUIREMENTS
                                     00C6   145 ;
                                     00C6   146 	.ALIGN	LONG
                                     00C6   147 FAB'U:
                                     00C6   148 	.NLIST
                                     00C6   149 	$FAB-
                                     00C6   150 	BLS=32766,-
                                     00C6   151 	FAC=<BIO,GET,PUT>,-
                                     00C6   152 	FNA=FILE'U,-
                                     00C6   153 	FNS=FILEL'U,-
                                     00C6   154 	FOP=<RWC,NEF>,-
                                     00C6   155 	ORG=SEQ,-
                                     00C6   156 	RFM=VAR
                                     00C6   157 	.LIST
                                     00C6   158 ;
                                     00C6   159 RAB'U:
                                     00C6   160 	.NLIST
                                     00C6   161 	$RAB-
                                     00C6   162 	FAB=FAB'U,-
                                     00C6   163 	ROP=ASY
                                     00C6   164 	.LIST
                                     00C6   165 ;
                                     00C6   166 FILE'U:
                                     00C6   167 	.BLKB	3
                                     00C6   168 	.ASCII	/U:/
                                     00C6   169 	.ASCII	/UETDATA/
                                     00C6   170 	.ASCII	/U/
                                     00C6   171 	.ASCII	/.DAT/;/1/
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page   6
1.07            READ ONLY DATA                                                                                                   (2)

                                     00C6   172 	FILEL'U=.-FILE'U
                                     00C6   173 	.ENDM	BUFFERS
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page   7
1.07            READ ONLY DATA                                                                                                   (2)

                                     00C6   175 ;
                                     00C6   176 	.MACRO	START_MT M,?STARTA,?STARTB,?STARTC,?STARTD,?STARTE
                                     00C6   177 	BITB	#1@M,UNIT_MASK		; TEST THIS DRIVE?
                                     00C6   178 	BNEQ	STARTA			; BR IF YES
                                     00C6   179 	BRW	STARTE
                                     00C6   180 STARTA:
                                     00C6   181 	MOVC3	#3,CNTRL_NAME,FILE'M	; SET CONTROLLER NAME
                                     00C6   182 	$CREATE	FAB=FAB'M,ERR=ERR'M	; OPEN THE FILE
                                     00C6   183 	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                                     00C6   184 	BNEQ	STARTB			; BR IF YES
                                     00C6   185 	$CONNECT RAB=RAB'M,ERR=ERR'M	; CONNECT THE RAB TO THE FAB
                                     00C6   186 	BRW	STARTD
                                     00C6   187 STARTB:
                                     00C6   188 	CMPZV	#0,#3,FAB'M+FAB$L_STS,#4 ; IS SEVERITY = 4?
                                     00C6   189 	BNEQ	STARTC			; BR IF NO
                                     00C6   190 	SUBL2	#2,FAB'M+FAB$L_STS	; CHANGE SEVERITY TO ERROR
                                     00C6   191 STARTC:
                                     00C6   192 	PUTMSG	<FAB'M+FAB$L_STS,-	; PRINT RMS ERROR MESSAGE
                                     00C6   193 		 FAB'M+FAB$L_STV>
                                     00C6   194 	BICB	#BIT1,IOSTAT		; RESET ERROR BIT
                                     00C6   195 	TSTB	UNIT_MASK		; ANY DRIVES TO TEST?
                                     00C6   196 	BNEQ	STARTE			; BR IF YES
                                     00C6   197 	BRW	ERROR_EXIT		; ELSE GO AWAY AND DIE
                                     00C6   198 STARTD:
                                     00C6   199 	MOVAL	MT_TABLE,MTBUF_PTR'M	; SET UP POINTER TO MT_TABLE
                                     00C6   200 	MOVL	@MTBUF_PTR'M,LIMIT'M	; SET LIMIT ON # OF ITERATIONS
                                     00C6   201 	ADDL2	#4,MTBUF_PTR'M		; INCREMENT MT_TABLE POINTER
                                     00C6   202 	MOVL	@MTBUF_PTR'M,REC_SIZE'M	; SET REC. SIZE FOR THIS ITERATION
                                     00C6   203 	MOVW	REC_SIZE'M,RAB'M+RAB$W_RSZ
                                     00C6   204 	MOVL	EXPADDR,RAB'M+RAB$L_RBF	; SET THE RECORD ADDRESS
                                     00C6   205 	$WRITE	RAB=RAB'M,ERR=ERR'M,SUC=SUC'M ; DO A WRITE
                                     00C6   206 STARTE:
                                     00C6   207 	.ENDM	START_MT
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page   8
1.07            READ ONLY DATA                                                                                                   (2)

                                     00C6   209 ;
                                     00C6   210 	.MACRO	TAPETEST N
                                     00C6   211 SUC'N:
                                     00C6   212 	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
                                     00C6   213 	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                                     00C6   214 	BEQL	10$			; BR IF NO
                                     00C6   215 	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                                     00C6   216 	BRW	END_MT			; EXIT IF YES
                                     00C6   217 10$:
                                     00C6   218 	INCL	ITER'N			; INC. CTR. FOR THIS FILESIZE
                                     00C6   219 	CMPL	ITER'N,LIMIT'N		; DONE WITH THIS FILESIZE?
                                     00C6   220 	BNEQ	30$			; BR IF NO
                                     00C6   221 	ADDL2	#4,MTBUF_PTR'N		; INCREMENT MT_TABLE POINTER
                                     00C6   222 	MOVL	@MTBUF_PTR'N,LIMIT'N	; LIMIT ON # OF ITERATIONS
                                     00C6   223 	TSTL	LIMIT'N			; IS THE LIMIT 0 (ALL DONE)?
                                     00C6   224 	BNEQ	20$			; BR IF NO
                                     00C6   225 	BRW	50$			; REWIND THE TAPE
                                     00C6   226 20$:
                                     00C6   227 	CLRL	ITER'N			; ZERO THE ITERATION COUNT
                                     00C6   228 	ADDL2	#4,MTBUF_PTR'N		; INCREMENT MT_TABLE POINTER
                                     00C6   229 	MOVL	@MTBUF_PTR'N,REC_SIZE'N	; SET THE RECORD SIZE
                                     00C6   230 	MOVW	REC_SIZE'N,RAB'N+RAB$W_RSZ
                                     00C6   231 	MOVL	EXPADDR,RAB'N+RAB$L_RBF	; WRITE BEGINNING OF DATA
                                     00C6   232 	BRB	40$			; DO A WRITE
                                     00C6   233 30$:
                                     00C6   234 	MOVL	#MAX_REC,R8		; GET MAX. RECORD SIZE
                                     00C6   235 	ADDL2	REC_SIZE'N,RAB'N+RAB$L_RBF ; GET NEXT DATA IN BUFFER
                                     00C6   236 	ADDL2	REC_SIZE'N,SIZE_CTR'N	; ACCUMULATE # OF BYTES USED
                                     00C6   237 	SUBL2	SIZE_CTR'N,R8		; DO WE HAVE ENOUGH DATA
                                     00C6   238 	CMPL	R8,REC_SIZE'N		; LEFT TO WRITE?
                                     00C6   239 	BGEQ	40$			; BR IF YES
                                     00C6   240 	MOVL	EXPADDR,RAB'N+RAB$L_RBF	; WRITE BEGINNING OF DATA
                                     00C6   241 40$:
                                     00C6   242 	$WRITE	RAB=RAB'N,ERR=ERR'N,SUC=SUC'N ; DO A WRITE
                                     00C6   243 	RET
                                     00C6   244 50$:
                                     00C6   245 	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                                     00C6   246 	BEQL	60$			; BR IF NO
                                     00C6   247 	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                                     00C6   248 	BRW	END_MT			; EXIT IF YES
                                     00C6   249 60$:
                                     00C6   250 	$CLOSE	FAB=FAB'N,ERR=ERR'N	; CLOSE MAGTAPE FILE & REWIND
                                     00C6   251 	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                                     00C6   252 	BNEQ	70$			; BR IF YES
                                     00C6   253 	MOVC3	#3,CNTRL_NAME,FILE'N	; SET THE CONTROLLER NAME
                                     00C6   254 	$OPEN	FAB=FAB'N,ERR=ERR'N	; REOPEN THE MAGTAPE FILE
                                     00C6   255 	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                                     00C6   256 	BNEQ	70$			; BR IF YES
                                     00C6   257 	$CONNECT RAB=RAB'N,ERR=ERR'N,SUC=SUCA'N ; CONNECT THE FILE
                                     00C6   258 	BRW	90$
                                     00C6   259 70$:
                                     00C6   260 	CMPZV	#0,#3,FAB'N+FAB$L_STS,#4 ; IS SEVERITY = 4?
                                     00C6   261 	BNEQ	80$			; BR IF NO
                                     00C6   262 	SUBL2	#2,FAB'N+FAB$L_STS	; CHANGE SEVERITY TO ERROR
                                     00C6   263 80$:
                                     00C6   264 	PUTMSG	<FAB'N+FAB$L_STS,-	; PRINT RMS FAB ERROR MESSAGE
                                     00C6   265 		 FAB'N+FAB$L_STV>
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page   9
1.07            READ ONLY DATA                                                                                                   (2)

                                     00C6   266 	BICB	#BIT1,IOSTAT		; RESET ERROR BIT
                                     00C6   267 	TSTB	UNIT_MASK		; ANY DRIVES TO TEST?
                                     00C6   268 	BNEQ	90$			; BR IF YES
                                     00C6   269 	BRW	ERROR_EXIT		; EXIT
                                     00C6   270 90$:
                                     00C6   271 	RET
                                     00C6   272 SUCA'N:
                                     00C6   273 	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
                                     00C6   274 	MOVAL	MT_TABLE,MTBUF_PTR'N	; RESET PTR. TO LIMIT SIZE
                                     00C6   275 	MOVL	@MTBUF_PTR'N,LIMIT'N	; RESET LIMIT ON # OF ITERATIONS
                                     00C6   276 	ADDL2	#4,MTBUF_PTR'N		; INC. MT_TABLE POINTER
                                     00C6   277 	MOVL	@MTBUF_PTR'N,REC_SIZE'N	; RESET RECORD SIZE
                                     00C6   278 	MOVL	EXPADDR,DATA_ADR'N	; ADDRESS OF WRITE BUFFER
                                     00C6   279 	CLRL	ITER'N			; ZERO ITERATION COUNTER
                                     00C6   280 	CLRL	SIZE_CTR'N		; ZERO SIZE COUNTER
                                     00C6   281 	ADDL3 	#MAX_REC*N,EXPADDR,BUF'N ; READ BUFFER FOR THIS UNIT
                                     00C6   282 	ADDL2	#MAX_REC,BUF'N
                                     00C6   283 	MOVL	BUF'N,RAB'N+RAB$L_UBF	; WHICH RECORD TO READ
                                     00C6   284 	MOVW	REC_SIZE'N,RAB'N+RAB$W_USZ ; # OF BYTES TO READ
                                     00C6   285 SUCB'N:
                                     00C6   286 	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                                     00C6   287 	BEQL	10$			; BR IF NO
                                     00C6   288 	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                                     00C6   289 	BRW	END_MT			; EXIT CLEANLY
                                     00C6   290 10$:
                                     00C6   291 	$READ	RAB=RAB'N,ERR=ERR'N,SUC=SUCC'N ; DO A READ
                                     00C6   292 	RET
                                     00C6   293 SUCC'N:
                                     00C6   294 	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
                                     00C6   295 	CMPC3	REC_SIZE'N,@DATA_ADR'N,@BUF'N ; IS THE DATA GOOD?
                                     00C6   296 	BEQL	10$			; BR IF YES
                                     00C6   297 	BRW	60$			; PRINT THE DATA ERROR
                                     00C6   298 10$:
                                     00C6   299 	INCL	ITER'N			; INCREMENT THE FILESIZE COUNTER
                                     00C6   300 	CMPL	ITER'N,LIMIT'N		; DONE WITH THIS FILESIZE?
                                     00C6   301 	BEQL	40$			; BR IF YES
                                     00C6   302 	MOVL	#MAX_REC,R9		; MAXIMUM RECORD SIZE
                                     00C6   303 	ADDL2	REC_SIZE'N,SIZE_CTR'N	; ACCUM. # OF BYTES TO READ
                                     00C6   304 	SUBL2	SIZE_CTR'N,R9		; ENOUGH BYTES TO TEST?
                                     00C6   305 	CMPL	R9,REC_SIZE'N
                                     00C6   306 	BGEQ	20$			; BR IF YES
                                     00C6   307 	MOVL	EXPADDR,DATA_ADR'N	; ADDRESS OF DATA
                                     00C6   308 	BRB	30$
                                     00C6   309 20$:
                                     00C6   310 	ADDL2	REC_SIZE'N,DATA_ADR'N	; INC THROUGH DATA BUFFER
                                     00C6   311 30$:
                                     00C6   312 	MOVC5	#0,(SP),#0,REC_SIZE'N,@BUF'N ; CLEAR THE READ BUFFER
                                     00C6   313 	BRW	SUCB'N			; DO A READ
                                     00C6   314 40$:
                                     00C6   315 	ADDL2	#4,MTBUF_PTR'N		; INCREMENT MT_TABLE POINTER
                                     00C6   316 	MOVL	@MTBUF_PTR'N,LIMIT'N	; LIMIT ON THE # OF ITERATIONS
                                     00C6   317 	TSTL	LIMIT'N			; IS THIS UNIT DONE?
                                     00C6   318 	BNEQ	50$			; BR IF NO
                                     00C6   319 	BISB2	#1@N,DONE_FLAG		; SET THE DONE FLAG
                                     00C6   320 	CMPB	DONE_FLAG,UNIT_MASK	; ARE ALL UNITS DONE?
                                     00C6   321 	BEQL	70$			; BR IF YES
                                     00C6   322 	RET
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  10
1.07            READ ONLY DATA                                                                                                   (2)

                                     00C6   323 50$:
                                     00C6   324 	CLRL	ITER'N			; ZERO THE ITERATION COUNT
                                     00C6   325 	ADDL2	#4,MTBUF_PTR'N		; INCREMENT MT_TABLE POINTER
                                     00C6   326 	MOVL	@MTBUF_PTR'N,REC_SIZE'N	; SET THE RECORD SIZE
                                     00C6   327 	MOVW	REC_SIZE'N,RAB'N+RAB$W_USZ ; # OF BYTES TO READ
                                     00C6   328 	MOVL	BUF'N,RAB'N+RAB$L_UBF	; WHICH RECORD TO READ
                                     00C6   329 	MOVL	EXPADDR,DATA_ADR'N	; READ THE BEGINNING OF THE DATA
                                     00C6   330 	MOVC5	#0,(SP),#0,REC_SIZE'N,@BUF'N ; CLEAR THE READ BUFFER
                                     00C6   331 	BRW	SUCB'N			; DO A READ
                                     00C6   332 60$:
                                     00C6   333 	MOVB	#N,UNIT_ERROR		; SET BAD UNIT NUMBER
                                     00C6   334 	MOVZWL	R0,ARGS			; GET BYTE #
                                     00C6   335 	MOVZBL	(R1),ARGS+4		; GET GOOD BYTE
                                     00C6   336 	MOVZBL	(R3),ARGS+8		; GET BAD BYTE
                                     00C6   337 	BSBW	DATA_ERROR		; REPORT DATA ERROR
                                     00C6   338 	BRW	10$			; CONTINUE
                                     00C6   339 70$:
                                     00C6   340 	CALLS	#0,WAKE_UP		; EXIT CLEANLY FROM AST LEVEL
                                     00C6   341 	RET
                                     00C6   342 ;
                                     00C6   343 ERR'N:
                                     00C6   344 	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
                                     00C6   345 	MOVL	RAB'N+RAB$L_STS,RMS_ERR_STS	; SAVE STATUS FIELD
                                     00C6   346 	MOVL	RAB'N+RAB$L_STV,RMS_ERR_STV	; SAVE STV FIELD
                                     00C6   347 	MOVB	#N,UNIT_ERROR			; GET UNIT NUMBER
                                     00C6   348 	CALLS	#0,RMS_ERR			; PRINT THE ERROR
                                     00C6   349 	TSTB	UNIT_MASK			; ANY MORE UNITS TO TEST?
                                     00C6   350 	BNEQ	10$				; BR IF YES
                                     00C6   351 	PUTMSG	<FAB'N+FAB$L_STS,-		; PRINT RMS FAB ERROR MSG.
                                     00C6   352 		 FAB'N+FAB$L_STV>
                                     00C6   353 	BICB	#BIT1,IOSTAT			; CLEAR ERROR BIT IN IOSTAT
                                     00C6   354 	BRW	ERROR_EXIT			; EXIT
                                     00C6   355 10$:
                                     00C6   356 	RET
                                     00C6   357 	.ENDM	TAPETEST
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  11
1.07            READ ONLY DATA                                                                                                   (2)

                                     00C6   359 ;
                                     00C6   360 	.MACRO	END	B,?FINI1,?FINI2
                                     00C6   361 	ROTL	R3,R4,R4			; SHIFT MASK
                                     00C6   362 	BITB	R4,UNIT_MASK			; WAS IT TESTED?
                                     00C6   363 	BNEQ	FINI1				; BR IF YES
                                     00C6   364 	BRW	FINI2				; END
                                     00C6   365 FINI1:
                                     00C6   366 	$DISCONNECT RAB=RAB'B 		; ELSE DISCONNECT RAB
                                     00C6   367 	$CLOSE	FAB=FAB'B		; CLOSE THE FILE
                                     00C6   368 FINI2:
                                     00C6   369 	.ENDM	END
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  12
1.07            READ/WRITE DATA                                                                                                  (2)

                                     00C6   371 	.SBTTL	READ/WRITE DATA
                                 00000000   372 	.PSECT	RWDATA,WRT,NOEXE,LONG
                                     0000   373 ;
                                     0000   374 ARGS:
                           0000000C  0000   375 	.BLKL	3	; SPACE FOR 3 ARGUMENTS
                                     000C   376 CNTRL_NAME_STR:
                           00000003  000C   377 	.LONG	3
                           00000025' 0010   378 	.ADDRESS CNTRL_NAME
                                     0014   379 PROCESS_NAME:
                           0000000C' 0014   380 	.LONG	PNL
                           0000001C' 0018   381 	.ADDRESS .+4
         5F 30 45 50 41 54 54 45 55  001C   382 	.ASCII	/UETTAPE0_/
                                     0025   383 CNTRL_NAME:
                           00000000  0025   384 	.LONG	0	; TAPE CNTRL NAME IN ASCII
                           0000000C  0029   385 	PNL=.-PROCESS_NAME-9
                                     0029   386 DIEARG:
                           00000000  0029   387 	.LONG	0	; DIED PC SAVE
                                     002D   388 DONE_FLAG:
                                 00  002D   389 	.BYTE	0	; DONE FLAG BYTE
                                     002E   390 EXPADDR:
                           00000036  002E   391 	.BLKL	2	; ADDRESS OF VIRTUAL ADDRESS SPACE
                                     0036   392 ERROR_CNT:
                           00000000  0036   393 	.LONG	0	; CUM. ERROR COUNT
                                     003A   394 ERR_STRLEN:
                           00000000  003A   395 	.LONG	0	; ERROR FAO STRING LENGTH
                                     003E   396 FAO_BUF:
                           00000100' 003E   397 	.LONG	FAO_BUFL
                           00000046' 0042   398 	.ADDRESS FAO_BUFFER
                                     0046   399 FAO_BUFFER:
                           00000146  0046   400 	.BLKB	256
                           00000100  0146   401 	FAO_BUFL=.-FAO_BUFFER
                                     0146   402 IOSTAT:
                                     0146   403 			; BIT0 IS USED FOR DEVICE NOT FOUND FLAG
                                     0146   404 			; BIT1 IS RMS ERROR FLAG
                                     0146   405 			; BIT2 IS CONTROL C FLAG
                                 00  0146   406 	.BYTE	0	; I/O STATUS BLOCK
                                     0147   407 RANDOM1:
                           AAAAAAAA  0147   408 	.LONG	^XAAAAAAAA ; RANDOM WORD #1
                                     014B   409 RANDOM2:
                           A72EA72E  014B   410 	.LONG	^XA72EA72E ; RANDOM WORD #2
                                     014F   411 RECORD:
                           00000181  014F   412 	.BLKB	50
                                     0181   413 RMS_ERR_STS:
                           00000000  0181   414 	.LONG	0	; RMS STS ERROR CODE
                                     0185   415 RMS_ERR_STV:
                           00000000  0185   416 	.LONG	0	; RMS STV ERROR CODE
                                     0189   417 STRLEN:
                           00000000  0189   418 	.LONG	0	; FAO OUTPUT LENGTH
                                     018D   419 TTCHAN:
                           00000000  018D   420 	.LONG	0	; TT CHANNEL LONG WORD LOCATION
                                     0191   421 UNIT_ERROR:
                                 00  0191   422 	.BYTE	0	; UNIT NUMBER OF FAILING DRIVE
                                     0192   423 UNIT_MASK:
                                 00  0192   424 	.BYTE	0	; UNIT MASK
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  13
1.07            READ/WRITE DATA                                                                                                  (2)

                                     0193   426 	.LIST	MEB
                                     0193   427 	BUFFERS	<0>
                                     0193       BUF0:
                           00000000  0193       	.LONG	0		; ADDRESS OF READ BUFFER FOR A TAPE UNIT
                                     0197       DATA_ADR0:
                           00000000  0197       	.LONG	0		; ADDRESS OF DATA BYTES READ FOR THIS UNIT
                                     019B       ITER0:
                           00000000  019B       	.LONG	0		; COUNTER FOR # OF READ/WRITE TRANSFERS PER
                                     019F       LIMIT0:
                           00000000  019F       	.LONG	0		; LIMIT FOR # OF READ/WRITE TRANSFERS PER
                                     01A3       MTBUF_PTR0:
                           00000000' 01A3       	.ADDRESS 0		; PTR. TO # OF ITERATIONS AND REC. SIZE
                                     01A7       REC_SIZE0:
                           00000000  01A7       	.LONG	0		; SIZE OF READ/WRITE RECORD
                                     01AB       SIZE_CTR0:
                           00000000  01AB       	.LONG	0		; COUNTS # OF BYTES WRITTEN FROM DYNAMIC
                                     01AF       	.ALIGN	LONG
                                     01B0       FAB0:
                                     0200       RAB0:
                                     0244       FILE0:
                           00000247  0244       	.BLKB	3
                              3A 30  0247       	.ASCII	/0:/
               41 54 41 44 54 45 55  0249       	.ASCII	/UETDATA/
                                 30  0250       	.ASCII	/0/
                        54 41 44 2E  0251       	.ASCII	/.DAT/;/1/
                                     0255   428 	BUFFERS	<1>
                                     0255       BUF1:
                           00000000  0255       	.LONG	0		; ADDRESS OF READ BUFFER FOR A TAPE UNIT
                                     0259       DATA_ADR1:
                           00000000  0259       	.LONG	0		; ADDRESS OF DATA BYTES READ FOR THIS UNIT
                                     025D       ITER1:
                           00000000  025D       	.LONG	0		; COUNTER FOR # OF READ/WRITE TRANSFERS PER
                                     0261       LIMIT1:
                           00000000  0261       	.LONG	0		; LIMIT FOR # OF READ/WRITE TRANSFERS PER
                                     0265       MTBUF_PTR1:
                           00000000' 0265       	.ADDRESS 0		; PTR. TO # OF ITERATIONS AND REC. SIZE
                                     0269       REC_SIZE1:
                           00000000  0269       	.LONG	0		; SIZE OF READ/WRITE RECORD
                                     026D       SIZE_CTR1:
                           00000000  026D       	.LONG	0		; COUNTS # OF BYTES WRITTEN FROM DYNAMIC
                                     0271       	.ALIGN	LONG
                                     0274       FAB1:
                                     02C4       RAB1:
                                     0308       FILE1:
                           0000030B  0308       	.BLKB	3
                              3A 31  030B       	.ASCII	/1:/
               41 54 41 44 54 45 55  030D       	.ASCII	/UETDATA/
                                 31  0314       	.ASCII	/1/
                        54 41 44 2E  0315       	.ASCII	/.DAT/;/1/
                                     0319   429 	BUFFERS	<2>
                                     0319       BUF2:
                           00000000  0319       	.LONG	0		; ADDRESS OF READ BUFFER FOR A TAPE UNIT
                                     031D       DATA_ADR2:
                           00000000  031D       	.LONG	0		; ADDRESS OF DATA BYTES READ FOR THIS UNIT
                                     0321       ITER2:
                           00000000  0321       	.LONG	0		; COUNTER FOR # OF READ/WRITE TRANSFERS PER
                                     0325       LIMIT2:
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  14
1.07            READ/WRITE DATA                                                                                                  (2)

                           00000000  0325       	.LONG	0		; LIMIT FOR # OF READ/WRITE TRANSFERS PER
                                     0329       MTBUF_PTR2:
                           00000000' 0329       	.ADDRESS 0		; PTR. TO # OF ITERATIONS AND REC. SIZE
                                     032D       REC_SIZE2:
                           00000000  032D       	.LONG	0		; SIZE OF READ/WRITE RECORD
                                     0331       SIZE_CTR2:
                           00000000  0331       	.LONG	0		; COUNTS # OF BYTES WRITTEN FROM DYNAMIC
                                     0335       	.ALIGN	LONG
                                     0338       FAB2:
                                     0388       RAB2:
                                     03CC       FILE2:
                           000003CF  03CC       	.BLKB	3
                              3A 32  03CF       	.ASCII	/2:/
               41 54 41 44 54 45 55  03D1       	.ASCII	/UETDATA/
                                 32  03D8       	.ASCII	/2/
                        54 41 44 2E  03D9       	.ASCII	/.DAT/;/1/
                                     03DD   430 	BUFFERS	<3>
                                     03DD       BUF3:
                           00000000  03DD       	.LONG	0		; ADDRESS OF READ BUFFER FOR A TAPE UNIT
                                     03E1       DATA_ADR3:
                           00000000  03E1       	.LONG	0		; ADDRESS OF DATA BYTES READ FOR THIS UNIT
                                     03E5       ITER3:
                           00000000  03E5       	.LONG	0		; COUNTER FOR # OF READ/WRITE TRANSFERS PER
                                     03E9       LIMIT3:
                           00000000  03E9       	.LONG	0		; LIMIT FOR # OF READ/WRITE TRANSFERS PER
                                     03ED       MTBUF_PTR3:
                           00000000' 03ED       	.ADDRESS 0		; PTR. TO # OF ITERATIONS AND REC. SIZE
                                     03F1       REC_SIZE3:
                           00000000  03F1       	.LONG	0		; SIZE OF READ/WRITE RECORD
                                     03F5       SIZE_CTR3:
                           00000000  03F5       	.LONG	0		; COUNTS # OF BYTES WRITTEN FROM DYNAMIC
                                     03F9       	.ALIGN	LONG
                                     03FC       FAB3:
                                     044C       RAB3:
                                     0490       FILE3:
                           00000493  0490       	.BLKB	3
                              3A 33  0493       	.ASCII	/3:/
               41 54 41 44 54 45 55  0495       	.ASCII	/UETDATA/
                                 33  049C       	.ASCII	/3/
                        54 41 44 2E  049D       	.ASCII	/.DAT/;/1/
                                     04A1   431 	BUFFERS	<4>
                                     04A1       BUF4:
                           00000000  04A1       	.LONG	0		; ADDRESS OF READ BUFFER FOR A TAPE UNIT
                                     04A5       DATA_ADR4:
                           00000000  04A5       	.LONG	0		; ADDRESS OF DATA BYTES READ FOR THIS UNIT
                                     04A9       ITER4:
                           00000000  04A9       	.LONG	0		; COUNTER FOR # OF READ/WRITE TRANSFERS PER
                                     04AD       LIMIT4:
                           00000000  04AD       	.LONG	0		; LIMIT FOR # OF READ/WRITE TRANSFERS PER
                                     04B1       MTBUF_PTR4:
                           00000000' 04B1       	.ADDRESS 0		; PTR. TO # OF ITERATIONS AND REC. SIZE
                                     04B5       REC_SIZE4:
                           00000000  04B5       	.LONG	0		; SIZE OF READ/WRITE RECORD
                                     04B9       SIZE_CTR4:
                           00000000  04B9       	.LONG	0		; COUNTS # OF BYTES WRITTEN FROM DYNAMIC
                                     04BD       	.ALIGN	LONG
                                     04C0       FAB4:
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  15
1.07            READ/WRITE DATA                                                                                                  (2)

                                     0510       RAB4:
                                     0554       FILE4:
                           00000557  0554       	.BLKB	3
                              3A 34  0557       	.ASCII	/4:/
               41 54 41 44 54 45 55  0559       	.ASCII	/UETDATA/
                                 34  0560       	.ASCII	/4/
                        54 41 44 2E  0561       	.ASCII	/.DAT/;/1/
                                     0565   432 	BUFFERS	<5>
                                     0565       BUF5:
                           00000000  0565       	.LONG	0		; ADDRESS OF READ BUFFER FOR A TAPE UNIT
                                     0569       DATA_ADR5:
                           00000000  0569       	.LONG	0		; ADDRESS OF DATA BYTES READ FOR THIS UNIT
                                     056D       ITER5:
                           00000000  056D       	.LONG	0		; COUNTER FOR # OF READ/WRITE TRANSFERS PER
                                     0571       LIMIT5:
                           00000000  0571       	.LONG	0		; LIMIT FOR # OF READ/WRITE TRANSFERS PER
                                     0575       MTBUF_PTR5:
                           00000000' 0575       	.ADDRESS 0		; PTR. TO # OF ITERATIONS AND REC. SIZE
                                     0579       REC_SIZE5:
                           00000000  0579       	.LONG	0		; SIZE OF READ/WRITE RECORD
                                     057D       SIZE_CTR5:
                           00000000  057D       	.LONG	0		; COUNTS # OF BYTES WRITTEN FROM DYNAMIC
                                     0581       	.ALIGN	LONG
                                     0584       FAB5:
                                     05D4       RAB5:
                                     0618       FILE5:
                           0000061B  0618       	.BLKB	3
                              3A 35  061B       	.ASCII	/5:/
               41 54 41 44 54 45 55  061D       	.ASCII	/UETDATA/
                                 35  0624       	.ASCII	/5/
                        54 41 44 2E  0625       	.ASCII	/.DAT/;/1/
                                     0629   433 	BUFFERS	<6>
                                     0629       BUF6:
                           00000000  0629       	.LONG	0		; ADDRESS OF READ BUFFER FOR A TAPE UNIT
                                     062D       DATA_ADR6:
                           00000000  062D       	.LONG	0		; ADDRESS OF DATA BYTES READ FOR THIS UNIT
                                     0631       ITER6:
                           00000000  0631       	.LONG	0		; COUNTER FOR # OF READ/WRITE TRANSFERS PER
                                     0635       LIMIT6:
                           00000000  0635       	.LONG	0		; LIMIT FOR # OF READ/WRITE TRANSFERS PER
                                     0639       MTBUF_PTR6:
                           00000000' 0639       	.ADDRESS 0		; PTR. TO # OF ITERATIONS AND REC. SIZE
                                     063D       REC_SIZE6:
                           00000000  063D       	.LONG	0		; SIZE OF READ/WRITE RECORD
                                     0641       SIZE_CTR6:
                           00000000  0641       	.LONG	0		; COUNTS # OF BYTES WRITTEN FROM DYNAMIC
                                     0645       	.ALIGN	LONG
                                     0648       FAB6:
                                     0698       RAB6:
                                     06DC       FILE6:
                           000006DF  06DC       	.BLKB	3
                              3A 36  06DF       	.ASCII	/6:/
               41 54 41 44 54 45 55  06E1       	.ASCII	/UETDATA/
                                 36  06E8       	.ASCII	/6/
                        54 41 44 2E  06E9       	.ASCII	/.DAT/;/1/
                                     06ED   434 	BUFFERS	<7>
                                     06ED       BUF7:
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  16
1.07            READ/WRITE DATA                                                                                                  (2)

                           00000000  06ED       	.LONG	0		; ADDRESS OF READ BUFFER FOR A TAPE UNIT
                                     06F1       DATA_ADR7:
                           00000000  06F1       	.LONG	0		; ADDRESS OF DATA BYTES READ FOR THIS UNIT
                                     06F5       ITER7:
                           00000000  06F5       	.LONG	0		; COUNTER FOR # OF READ/WRITE TRANSFERS PER
                                     06F9       LIMIT7:
                           00000000  06F9       	.LONG	0		; LIMIT FOR # OF READ/WRITE TRANSFERS PER
                                     06FD       MTBUF_PTR7:
                           00000000' 06FD       	.ADDRESS 0		; PTR. TO # OF ITERATIONS AND REC. SIZE
                                     0701       REC_SIZE7:
                           00000000  0701       	.LONG	0		; SIZE OF READ/WRITE RECORD
                                     0705       SIZE_CTR7:
                           00000000  0705       	.LONG	0		; COUNTS # OF BYTES WRITTEN FROM DYNAMIC
                                     0709       	.ALIGN	LONG
                                     070C       FAB7:
                                     075C       RAB7:
                                     07A0       FILE7:
                           000007A3  07A0       	.BLKB	3
                              3A 37  07A3       	.ASCII	/7:/
               41 54 41 44 54 45 55  07A5       	.ASCII	/UETDATA/
                                 37  07AC       	.ASCII	/7/
                        54 41 44 2E  07AD       	.ASCII	/.DAT/;/1/
                                     07B1   435 	.NLIST	MEB
                                     07B1   436 	.ALIGN	LONG
                                     07B4   437 FAB:				; FAB FOR FILE "UETINIDEV.DAT"
                                     07B4   438 	$FAB-
                                     07B4   439 	FAC=GET,-
                                     07B4   440 	FNA=FILE_NAME,-
                                     07B4   441 	FNS=NAME_SIZE,-
                                     07B4   442 	MRS=50,-
                                     07B4   443 	ORG=SEQ
                                     0804   444 ;
                                     0804   445 RAB:				; RAB FOR FILE "UETINIDEV.DAT"
                                     0804   446 	$RAB-
                                     0804   447 	FAB=FAB,-
                                     0804   448 	MBF=1,-
                                     0804   449 	RAC=SEQ,-
                                     0804   450 	UBF=RECORD,-
                                     0804   451 	USZ=48
                                     0848   452 ;
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  17
1.07            MAIN PROGRAM                                                                                                     (2)

                                     0848   454 	.SBTTL	MAIN PROGRAM
                                 00000000   455 	.PSECT	UETTAP,EXE,NOWRT,LONG
                           00000004  0000   456 	.MDELETE STRING,BUFFERS,$FAB,$RAB
                                     0000   457 ;
                                     0000   458 ; THIS ROUTINE IS EXECUTED IF AN RMS-32 ERROR OCCURS.
                                     0000   459 ;
                                     0000   460 RMS_ERR:
                               0FFC  0000   461 	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; ENTRY MASK
                 00000036'EF     D6  0002   462 	INCL	ERROR_CNT			; BUMP CUM. ERROR COUNT
            03            00     ED  0008   463 	CMPZV	#0,#3,RMS_ERR_STS,#4		; IS IT FATAL?
            04   00000181'EF         000B       
                          07     12  0011   464 	BNEQ	10$				; BR IF NO
   00000181'EF            02     C2  0013   465 	SUBL2	#2,RMS_ERR_STS			; CHANGE FATAL TO ERROR SEVERITY
                                     001A   466 10$:
                                     001A   467 	PUTMSG	<#UETP$_ERBOX,#1,ERROR_CNT,-
                                     001A   468 		#UETP$_DESTP,#4,#TSTNAM,-
                                     001A   469 		#CNTRL_NAME_STR,UNIT_ERROR,#0,-
                                     001A   470 		RMS_ERR_STS,RMS_ERR_STV>	; PRINT ERROR MESSAGE
            55            01     D0  0057   471 	MOVL	#1,R5				; SET SHIFT COUNT
            55   00000191'EF     9C  005A   472 	ROTL	UNIT_ERROR,R5,R6		; MAKE A MASK
                          56         0061       
   00000192'EF            56     8A  0062   473 	BICB2	R6,UNIT_MASK			; DESELECT THE UNIT
   00000146'EF            02     88  0069   474 	BISB2	#BIT1,IOSTAT			; SET ERROR FLAG
                                 04  0070   475 	RET					; RETURN
                                     0071   476 ;
                                     0071   477 DIE:
                 00000036'EF     D6  0071   478 	INCL	ERROR_CNT			; BUMP CUM. ERROR COUNT
            52            50     D0  0077   479 	MOVL	R0,R2				; SAVE ERROR CODE
                                     007A   480 	PUTMSG	<#UETP$_ERBOX,#1,ERROR_CNT,-
                                     007A   481 		R2,#UETP$_ATPC,#1,DIEARG>	; PRINT THE ERROR MESSAGE
                 0000286F'EF     17  009F   482 	JMP	LAST1				; EXIT IN DISGRACE
                                     00A5   483 ;
                                     00A5   484 DATA_ERROR:
                 00000036'EF     D6  00A5   485 	INCL	ERROR_CNT			; BUMP CUM. ERROR CNT.
                                     00AB   486 	PUTMSG	<#UETP$_ERBOX,#1,ERROR_CNT,-
                                     00AB   487 		#UETP$_DATAER,#5,#CNTRL_NAME_STR,-
                                     00AB   488 		UNIT_ERROR,ARGS,ARGS+4,ARGS+8>
                                 05  00E6   489 	RSB					; RETURN
                                     00E7   490 ;
                                     00E7   491 GENRAN:						; FILL BUFFER WITH RANDOM PATTERN ROUTINE
            52   0000002E'EF     D0  00E7   492 	MOVL	EXPADDR,R2			; SET BUFFER ADR
            53   00002000 8F     D0  00EE   493 	MOVL	#BYTE_CNT,R3			; 32768 BYTES SIZE
                                     00F5   494 10$:
   00000147'EF   0000014B'EF     C0  00F5   495 	ADDL2	RANDOM2,RANDOM1			; RANDOMIZE PATTERN
            82   00000147'EF     D0  0100   496 	MOVL	RANDOM1,(R2)+			; PUT IT IN THE BUFFER
            EB            53     F5  0107   497 	SOBGTR	R3,10$				; DO THE WHOLE THING!
                                 05  010A   498 	RSB					; RETURN
                                     010B   499 ;
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  18
1.07            MAIN PROGRAM                                                                                                     (2)

                                     010B   501 FILE_ERR:
                               0FFC  010B   502 	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>
   00000000'8F   0000080C'EF     D1  010D   503 	CMPL	RAB+RAB$L_STS,#RMS$_EOF		; IS THIS THE END?
                          0E     13  0118   504 	BEQL	10$				; BR IF YES
   00000146'EF            02     88  011A   505 	BISB2	#BIT1,IOSTAT			; RMS ERROR
                 00000036'EF     D6  0121   506 	INCL	ERROR_CNT			; BUMP THE ERROR COUNT
                                 04  0127   507 	RET					; RETURN
                                     0128   508 10$:
   00000146'EF            01     88  0128   509 	BISB2	#BIT0,IOSTAT			; SET DEVICE NOT FOUND FLAG
                                 04  012F   510 	RET					; RETURN
                                     0130   511 ;
                                     0130   512 CCASTHAND:
                               0FFC  0130   513 	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; ENTRY MASK
                                     0132   514 	PUTMSG	<#UETP$_TEXT,#1,#CNTRLCMSG>	; TYPE ABORT MESSAGE
   00000146'EF            04     88  0147   515 	BISB2	#BIT2,IOSTAT			; SET THE CONTROL C FLAG
                                 04  014E   516 	RET					; RETURN
                                     014F   517 ;
                                     014F   518 WAKE_UP:
                               0FFC  014F   519 	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; ENTRY MASK
                                     0151   520 	$WAKE_S
                                 04  015C   521 	RET
                                     015D   522 ;
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  19
1.07            MAIN CODE                                                                                                        (2)

                                     015D   524 	.SBTTL	MAIN CODE
                                     015D   525 ;
                                     015D   526 ; THIS IS THE MAIN CODE FOR THE MAGTAPE TEST.  THREE DIFFERENT
                                     015D   527 ; LENGTH RECORDS ARE WRITTEN, READ AND DATA CHECKED SEQUENTIALLY
                                     015D   528 ; ON THE FILE "UETTAPE0.DAT".
                                     015D   529 ;
                                     015D   530 UETTAPE00::
                               0FFC  015D   531 	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ;ENTRY MASK
                                     015F   532 	$ASCEFC_S	#CLSTR_FLAG,CLUSTER2	; ASSIGN COMMON E.F. CLUSTER
                                     0176   533 	SERVCHEK			; CHECK FOR ERRORS
                                     0184   534 	$TRNLOG_S	LOGNAM,STRLEN,FAO_BUF,,,#5 ; GET CONTROLLER NAME
                                     01A3   535 	SERVCHEK			; CHECK FOR ERRORS
                                     01B1   536 	$SETEF_S	#CLSTR_FLAG	; TELL UETPDEV01 TO CONTINUE
                                     01BE   537 	SERVCHEK			; CHECK FOR ERRORS
   00000025'EF   00000046'EF     D0  01CC   538 	MOVL	FAO_BUFFER,CNTRL_NAME	; SAVE CONTROLLER NAME
                                     01D7   539 	PUTMSG	<#UETP$_BEGIND,#2,#TSTNAM,#0> ; MENTION STARTING MESSAGE
       544D 8F   00000025'EF     B1  01EE   540 	CMPW	CNTRL_NAME,#^A/MT/	; IS THIS REALLY A MAGTAPE?
                          03     13  01F7   541 	BEQL	20$			; BR IF YES
                          24E8   31  01F9   542 	BRW	ERROR_EXIT		; EXIT IN DISGUST!
                                     01FC   543 20$:
                                     01FC   544 	$SETPRN_S	PROCESS_NAME	; SET THE PROCESS NAME
                                     0209   545 	SERVCHEK			; CHECK FOR ERRORS
                                     0217   546 	$TRNLOG_S LOGNAM1,STRLEN,FAO_BUF,,,#5 ; ARE WE DETACHED?
                                     0236   547 	SERVCHEK			; CHECK FOR ERRORS
   00000046'EF         59 8F     91  0244   548 	CMPB	#^A/Y/,FAO_BUFFER	; CHECK FOR YES
                          54     13  024C   549 	BEQL	MT			; BR IF WE ARE DETACHED
                                     024E   550 	$ASSIGN_S TTNAM,TTCHAN		; ELSE SET UP FOR CTRL C AST'S
                                     0263   551 	SERVCHEK			; CHECK FOR ERRORS
                                     0271   552 	$QIOW_S	CHAN=TTCHAN,-
                                     0271   553 		FUNC=#IO$_SETMODE!IO$M_CTRLCAST,-
                                     0271   554 		P1  =CCASTHAND		; ENABLE CC AST'S
                                     0294   555 	SERVCHEK			; CHECK FOR ERRORS
                                     02A2   556 MT:
                                     02A2   557 	$OPEN	FAB=FAB,ERR=FILE_ERR	; OPEN "UETINIDEV.DAT"
   00000146'EF            02     93  02B3   558 	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          40     13  02BA   559 	BEQL	CON_RAB			; BR IF NOT
                                     02BC   560 ERMSG1:
                                     02BC   561 	PUTMSG	<#UETP$_ERBOX,#1,ERROR_CNT,-
                                     02BC   562 		#UETP$_OPENIN,#1,#FILE_NAME_STR> ; PRINT ERROR MESSAGE
                                     02DF   563 	$DISCONNECT RAB=RAB		; CLOSE "UETINIDEV.DAT"
                                     02EC   564 	$CLOSE FAB=FAB
                          2573   31  02F9   565 	BRW	LAST1			; EXIT
                                     02FC   566 CON_RAB:
                                     02FC   567 	$CONNECT RAB=RAB,ERR=FILE_ERR	; CONNECT THE RAB & FAB
   00000146'EF            02     93  030D   568 	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          03     13  0314   569 	BEQL	FIND_MT			; BR IF NOT
                          FFA3   31  0316   570 	BRW	ERMSG1			; ELSE ERROR
                                     0319   571 FIND_MT:
                                     0319   572 	$GET	RAB=RAB,ERR=FILE_ERR	; GET THE FIRST RECORD
   00000146'EF            02     93  032A   573 	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          03     13  0331   574 	BEQL	10$			; BR IF NO
                          FF86   31  0333   575 	BRW	ERMSG1			; PRINT ERROR
   00000146'EF            01     93  0336   576 10$:	BITB	#BIT0,IOSTAT		; EOF?
                          03     13  033D   577 	BEQL	20$			; BR IF NO
                          0071   31  033F   578 	BRW	DEVNF			; DEVICE NOT FOUND
   00000153'EF            01     93  0342   579 20$:	BITB	#BIT0,RECORD+4		; IS THIS A DDB?
                          CE     12  0349   580 	BNEQ	FIND_MT			; GO ON IF NOT
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  20
1.07            MAIN CODE                                                                                                        (2)

   00000155'EF            03     29  034B   581 	CMPC	#3,RECORD+6,CNTRL_NAME	; IS THIS THE RIGHT CONTROLLER?
                 00000025'EF         0352       
                          C0     12  0357   582 	BNEQ	FIND_MT			; BR IF NOT
                                     0359   583 FOUND_MT:
                                     0359   584 	$GET	RAB=RAB,ERR=FILE_ERR	; GET A RECORD
   00000146'EF            02     93  036A   585 	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          03     13  0371   586 	BEQL	10$			; BR IF NOT
                          FF46   31  0373   587 	BRW	ERMSG1			; REPORT ERROR AND EXIT
                                     0376   588 10$:
   00000146'EF            01     93  0376   589 	BITB	#BIT0,IOSTAT		; END OF THE FILE?
                          03     13  037D   590 	BEQL	20$			; BR IF NO
                          00BD   31  037F   591 	BRW	ALL_SET			; FOUND A DDB
                                     0382   592 20$:
   00000153'EF            01     93  0382   593 	BITB	#BIT0,RECORD+4		; IS THIS A DDB?
                          03     12  0389   594 	BNEQ	30$			; BR IF NO
                          00B1   31  038B   595 	BRW	ALL_SET			; FOUND DDB
                                     038E   596 30$:
   00000153'EF            02     93  038E   597 	BITB	#BIT1,RECORD+4		; IS THE UNIT TESTABLE?
                          C2     12  0395   598 	BNEQ	FOUND_MT		; BR IF NOT
            53   00000157'EF     9A  0397   599 	MOVZBL	RECORD+8,R3		; GET PHY. UNIT NUMBER IN ASCII
            53         F8 8F     8A  039E   600 	BICB2	#^XF8,R3		; CONVERT TO HEX
            54            01     D0  03A2   601 	MOVL	#1,R4			; SET TO UNIT ZERO MASK BIT
            54            53     9C  03A5   602 	ROTL	R3,R4,R4		; CONVERT IF NOT UNIT ZERO
                          54         03A8       
   00000192'EF            54     88  03A9   603 	BISB2	R4,UNIT_MASK		; ADD IT TO THE REST
                          FFA6   31  03B0   604 	BRW	FOUND_MT		; DO THE NEXT ONE
                                     03B3   605 DEVNF:
                 00000036'EF     D6  03B3   606 	INCL	ERROR_CNT		; BUMP CUM. ERROR COUNT
                                     03B9   607 	PUTMSG	<#UETP$_ERBOX,#1,ERROR_CNT,-
                                     03B9   608 		#UETP$_DENOSU-1,#2,#TSTNAM,#CNTRL_NAME_STR> ; PRINT ERROR MESSAGE
                                     03E2   609 	$DISCONNECT RAB=RAB,ERR=FILE_ERR ; CLOSE "UETINIDEV.DAT"
   00000146'EF            02     93  03F3   610 	BITB	#BIT1,IOSTAT		; CHECK FOR RMS FILE ERROR
                          1D     12  03FA   611 	BNEQ	CLOSE_ERR		; BRANCH IF YES
                                     03FC   612 	$CLOSE	FAB=FAB,ERR=FILE_ERR
   00000146'EF            02     93  040D   613 	BITB	#BIT1,IOSTAT		; CHECK FOR RMS FILE ERROR
                          03     12  0414   614 	BNEQ	CLOSE_ERR		; BRANCH IF YES
                          2456   31  0416   615 	BRW	LAST1			; EXIT
                                     0419   616 CLOSE_ERR:
                                     0419   617 	PUTMSG	<#UETP$_ERBOX,#1,ERROR_CNT,-
                                     0419   618 		#UETP$_CLOSEIN,#1,#FILE_NAME_STR> ; PRINT ERROR MESSAGE
                          2430   31  043C   619 	BRW	LAST1			; EXIT
                                     043F   620 ALL_SET:
   00000146'EF            01     8A  043F   621 	BICB	#BIT0,IOSTAT		; CLEAR EOF BIT IN IOSTAT
                                     0446   622 	$DISCONNECT RAB=RAB,ERR=FILE_ERR ; CLOSE FILE "UETINIDEV.DAT"
   00000146'EF            02     93  0457   623 	BITB	#BIT1,IOSTAT		; CHECK FOR RMS FILE ERROR
                          B9     12  045E   624 	BNEQ	CLOSE_ERR		; BRANCH IF YES
                                     0460   625 	$CLOSE	FAB=FAB,ERR=FILE_ERR
   00000146'EF            02     93  0471   626 	BITB	#BIT1,IOSTAT		; CHECK FOR RMS FILE ERROR
                          9F     12  0478   627 	BNEQ	CLOSE_ERR		; BRANCH IF YES
                                     047A   628 	$EXPREG_S #PAGES*9,EXPADDR	; GET MEMORY FOR BUFFERS
                          FC53   30  0491   629 	BSBW	GENRAN			; FILL DATA BUFFER
                                     0494   630 	.LIST	MEB
                                     0494   631 	START_MT 0
   00000192'EF            01     93  0494       	BITB	#1@0,UNIT_MASK		; TEST THIS DRIVE?
                          03     12  049B       	BNEQ	30014$			; BR IF YES
                          00CC   31  049D       	BRW	30018$
                                     04A0       30014$:
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  21
1.07            MAIN CODE                                                                                                        (2)

   00000025'EF            03     28  04A0       	MOVC3	#3,CNTRL_NAME,FILE0	; SET CONTROLLER NAME
                 00000244'EF         04A7       
                 00000E8F'EF     DF  04AC       		PUSHAL ERR0
                 000001B0'EF     DF  04B2       		PUSHAL	FAB0
   00000000'9F            02     FB  04B8       		CALLS	#$$.TMP1,@#SYS$CREATE
   00000146'EF            02     93  04BF       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          16     12  04C6       	BNEQ	30015$			; BR IF YES
                 00000E8F'EF     DF  04C8       		PUSHAL ERR0
                 00000200'EF     DF  04CE       		PUSHAL	RAB0
   00000000'9F            02     FB  04D4       		CALLS	#$$.TMP1,@#SYS$CONNECT
                          0037   31  04DB       	BRW	30017$
                                     04DE       30015$:
            03            00     ED  04DE       	CMPZV	#0,#3,FAB0+FAB$L_STS,#4 ; IS SEVERITY = 4?
            04   000001B8'EF         04E1       
                          07     12  04E7       	BNEQ	30016$			; BR IF NO
   000001B8'EF            02     C2  04E9       	SUBL2	#2,FAB0+FAB$L_STS	; CHANGE SEVERITY TO ERROR
                                     04F0       30016$:
                 000001BC'EF     DD  04F0       	  	PUSHL	FAB0+FAB$L_STV
                 000001B8'EF     DD  04F6       	  	PUSHL	FAB0+FAB$L_STS
   00000000'9F            02     FB  04FC       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  0503       	BICB	#BIT1,IOSTAT		; RESET ERROR BIT
                 00000192'EF     95  050A       	TSTB	UNIT_MASK		; ANY DRIVES TO TEST?
                          5A     12  0510       	BNEQ	30018$			; BR IF YES
                          21CF   31  0512       	BRW	ERROR_EXIT		; ELSE GO AWAY AND DIE
                                     0515       30017$:
   000001A3'EF   00000071'EF     DE  0515       	MOVAL	MT_TABLE,MTBUF_PTR0	; SET UP POINTER TO MT_TABLE
   0000019F'EF   000001A3'FF     D0  0520       	MOVL	@MTBUF_PTR0,LIMIT0	; SET LIMIT ON # OF ITERATIONS
   000001A3'EF            04     C0  052B       	ADDL2	#4,MTBUF_PTR0		; INCREMENT MT_TABLE POINTER
   000001A7'EF   000001A3'FF     D0  0532       	MOVL	@MTBUF_PTR0,REC_SIZE0	; SET REC. SIZE FOR THIS ITERATION
   00000222'EF   000001A7'EF     B0  053D       	MOVW	REC_SIZE0,RAB0+RAB$W_RSZ
   00000228'EF   0000002E'EF     D0  0548       	MOVL	EXPADDR,RAB0+RAB$L_RBF	; SET THE RECORD ADDRESS
                 00000B6E'EF     DF  0553       		PUSHAL SUC0
                 00000E8F'EF     DF  0559       		PUSHAL ERR0
                 00000200'EF     DF  055F       		PUSHAL	RAB0
   00000000'9F            03     FB  0565       		CALLS	#$$.TMP1,@#SYS$WRITE
                                     056C       30018$:
                                     056C   632 	START_MT 1
   00000192'EF            02     93  056C       	BITB	#1@1,UNIT_MASK		; TEST THIS DRIVE?
                          03     12  0573       	BNEQ	30019$			; BR IF YES
                          00CC   31  0575       	BRW	30023$
                                     0578       30019$:
   00000025'EF            03     28  0578       	MOVC3	#3,CNTRL_NAME,FILE1	; SET CONTROLLER NAME
                 00000308'EF         057F       
                 000011FE'EF     DF  0584       		PUSHAL ERR1
                 00000274'EF     DF  058A       		PUSHAL	FAB1
   00000000'9F            02     FB  0590       		CALLS	#$$.TMP1,@#SYS$CREATE
   00000146'EF            02     93  0597       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          16     12  059E       	BNEQ	30020$			; BR IF YES
                 000011FE'EF     DF  05A0       		PUSHAL ERR1
                 000002C4'EF     DF  05A6       		PUSHAL	RAB1
   00000000'9F            02     FB  05AC       		CALLS	#$$.TMP1,@#SYS$CONNECT
                          0037   31  05B3       	BRW	30022$
                                     05B6       30020$:
            03            00     ED  05B6       	CMPZV	#0,#3,FAB1+FAB$L_STS,#4 ; IS SEVERITY = 4?
            04   0000027C'EF         05B9       
                          07     12  05BF       	BNEQ	30021$			; BR IF NO
   0000027C'EF            02     C2  05C1       	SUBL2	#2,FAB1+FAB$L_STS	; CHANGE SEVERITY TO ERROR
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  22
1.07            MAIN CODE                                                                                                        (2)

                                     05C8       30021$:
                 00000280'EF     DD  05C8       	  	PUSHL	FAB1+FAB$L_STV
                 0000027C'EF     DD  05CE       	  	PUSHL	FAB1+FAB$L_STS
   00000000'9F            02     FB  05D4       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  05DB       	BICB	#BIT1,IOSTAT		; RESET ERROR BIT
                 00000192'EF     95  05E2       	TSTB	UNIT_MASK		; ANY DRIVES TO TEST?
                          5A     12  05E8       	BNEQ	30023$			; BR IF YES
                          20F7   31  05EA       	BRW	ERROR_EXIT		; ELSE GO AWAY AND DIE
                                     05ED       30022$:
   00000265'EF   00000071'EF     DE  05ED       	MOVAL	MT_TABLE,MTBUF_PTR1	; SET UP POINTER TO MT_TABLE
   00000261'EF   00000265'FF     D0  05F8       	MOVL	@MTBUF_PTR1,LIMIT1	; SET LIMIT ON # OF ITERATIONS
   00000265'EF            04     C0  0603       	ADDL2	#4,MTBUF_PTR1		; INCREMENT MT_TABLE POINTER
   00000269'EF   00000265'FF     D0  060A       	MOVL	@MTBUF_PTR1,REC_SIZE1	; SET REC. SIZE FOR THIS ITERATION
   000002E6'EF   00000269'EF     B0  0615       	MOVW	REC_SIZE1,RAB1+RAB$W_RSZ
   000002EC'EF   0000002E'EF     D0  0620       	MOVL	EXPADDR,RAB1+RAB$L_RBF	; SET THE RECORD ADDRESS
                 00000ED9'EF     DF  062B       		PUSHAL SUC1
                 000011FE'EF     DF  0631       		PUSHAL ERR1
                 000002C4'EF     DF  0637       		PUSHAL	RAB1
   00000000'9F            03     FB  063D       		CALLS	#$$.TMP1,@#SYS$WRITE
                                     0644       30023$:
                                     0644   633 	START_MT 2
   00000192'EF            04     93  0644       	BITB	#1@2,UNIT_MASK		; TEST THIS DRIVE?
                          03     12  064B       	BNEQ	30024$			; BR IF YES
                          00CC   31  064D       	BRW	30028$
                                     0650       30024$:
   00000025'EF            03     28  0650       	MOVC3	#3,CNTRL_NAME,FILE2	; SET CONTROLLER NAME
                 000003CC'EF         0657       
                 0000156D'EF     DF  065C       		PUSHAL ERR2
                 00000338'EF     DF  0662       		PUSHAL	FAB2
   00000000'9F            02     FB  0668       		CALLS	#$$.TMP1,@#SYS$CREATE
   00000146'EF            02     93  066F       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          16     12  0676       	BNEQ	30025$			; BR IF YES
                 0000156D'EF     DF  0678       		PUSHAL ERR2
                 00000388'EF     DF  067E       		PUSHAL	RAB2
   00000000'9F            02     FB  0684       		CALLS	#$$.TMP1,@#SYS$CONNECT
                          0037   31  068B       	BRW	30027$
                                     068E       30025$:
            03            00     ED  068E       	CMPZV	#0,#3,FAB2+FAB$L_STS,#4 ; IS SEVERITY = 4?
            04   00000340'EF         0691       
                          07     12  0697       	BNEQ	30026$			; BR IF NO
   00000340'EF            02     C2  0699       	SUBL2	#2,FAB2+FAB$L_STS	; CHANGE SEVERITY TO ERROR
                                     06A0       30026$:
                 00000344'EF     DD  06A0       	  	PUSHL	FAB2+FAB$L_STV
                 00000340'EF     DD  06A6       	  	PUSHL	FAB2+FAB$L_STS
   00000000'9F            02     FB  06AC       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  06B3       	BICB	#BIT1,IOSTAT		; RESET ERROR BIT
                 00000192'EF     95  06BA       	TSTB	UNIT_MASK		; ANY DRIVES TO TEST?
                          5A     12  06C0       	BNEQ	30028$			; BR IF YES
                          201F   31  06C2       	BRW	ERROR_EXIT		; ELSE GO AWAY AND DIE
                                     06C5       30027$:
   00000329'EF   00000071'EF     DE  06C5       	MOVAL	MT_TABLE,MTBUF_PTR2	; SET UP POINTER TO MT_TABLE
   00000325'EF   00000329'FF     D0  06D0       	MOVL	@MTBUF_PTR2,LIMIT2	; SET LIMIT ON # OF ITERATIONS
   00000329'EF            04     C0  06DB       	ADDL2	#4,MTBUF_PTR2		; INCREMENT MT_TABLE POINTER
   0000032D'EF   00000329'FF     D0  06E2       	MOVL	@MTBUF_PTR2,REC_SIZE2	; SET REC. SIZE FOR THIS ITERATION
   000003AA'EF   0000032D'EF     B0  06ED       	MOVW	REC_SIZE2,RAB2+RAB$W_RSZ
   000003B0'EF   0000002E'EF     D0  06F8       	MOVL	EXPADDR,RAB2+RAB$L_RBF	; SET THE RECORD ADDRESS
                 00001248'EF     DF  0703       		PUSHAL SUC2
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  23
1.07            MAIN CODE                                                                                                        (2)

                 0000156D'EF     DF  0709       		PUSHAL ERR2
                 00000388'EF     DF  070F       		PUSHAL	RAB2
   00000000'9F            03     FB  0715       		CALLS	#$$.TMP1,@#SYS$WRITE
                                     071C       30028$:
                                     071C   634 	START_MT 3
   00000192'EF            08     93  071C       	BITB	#1@3,UNIT_MASK		; TEST THIS DRIVE?
                          03     12  0723       	BNEQ	30029$			; BR IF YES
                          00CC   31  0725       	BRW	30033$
                                     0728       30029$:
   00000025'EF            03     28  0728       	MOVC3	#3,CNTRL_NAME,FILE3	; SET CONTROLLER NAME
                 00000490'EF         072F       
                 000018DC'EF     DF  0734       		PUSHAL ERR3
                 000003FC'EF     DF  073A       		PUSHAL	FAB3
   00000000'9F            02     FB  0740       		CALLS	#$$.TMP1,@#SYS$CREATE
   00000146'EF            02     93  0747       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          16     12  074E       	BNEQ	30030$			; BR IF YES
                 000018DC'EF     DF  0750       		PUSHAL ERR3
                 0000044C'EF     DF  0756       		PUSHAL	RAB3
   00000000'9F            02     FB  075C       		CALLS	#$$.TMP1,@#SYS$CONNECT
                          0037   31  0763       	BRW	30032$
                                     0766       30030$:
            03            00     ED  0766       	CMPZV	#0,#3,FAB3+FAB$L_STS,#4 ; IS SEVERITY = 4?
            04   00000404'EF         0769       
                          07     12  076F       	BNEQ	30031$			; BR IF NO
   00000404'EF            02     C2  0771       	SUBL2	#2,FAB3+FAB$L_STS	; CHANGE SEVERITY TO ERROR
                                     0778       30031$:
                 00000408'EF     DD  0778       	  	PUSHL	FAB3+FAB$L_STV
                 00000404'EF     DD  077E       	  	PUSHL	FAB3+FAB$L_STS
   00000000'9F            02     FB  0784       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  078B       	BICB	#BIT1,IOSTAT		; RESET ERROR BIT
                 00000192'EF     95  0792       	TSTB	UNIT_MASK		; ANY DRIVES TO TEST?
                          5A     12  0798       	BNEQ	30033$			; BR IF YES
                          1F47   31  079A       	BRW	ERROR_EXIT		; ELSE GO AWAY AND DIE
                                     079D       30032$:
   000003ED'EF   00000071'EF     DE  079D       	MOVAL	MT_TABLE,MTBUF_PTR3	; SET UP POINTER TO MT_TABLE
   000003E9'EF   000003ED'FF     D0  07A8       	MOVL	@MTBUF_PTR3,LIMIT3	; SET LIMIT ON # OF ITERATIONS
   000003ED'EF            04     C0  07B3       	ADDL2	#4,MTBUF_PTR3		; INCREMENT MT_TABLE POINTER
   000003F1'EF   000003ED'FF     D0  07BA       	MOVL	@MTBUF_PTR3,REC_SIZE3	; SET REC. SIZE FOR THIS ITERATION
   0000046E'EF   000003F1'EF     B0  07C5       	MOVW	REC_SIZE3,RAB3+RAB$W_RSZ
   00000474'EF   0000002E'EF     D0  07D0       	MOVL	EXPADDR,RAB3+RAB$L_RBF	; SET THE RECORD ADDRESS
                 000015B7'EF     DF  07DB       		PUSHAL SUC3
                 000018DC'EF     DF  07E1       		PUSHAL ERR3
                 0000044C'EF     DF  07E7       		PUSHAL	RAB3
   00000000'9F            03     FB  07ED       		CALLS	#$$.TMP1,@#SYS$WRITE
                                     07F4       30033$:
                                     07F4   635 	START_MT 4
   00000192'EF            10     93  07F4       	BITB	#1@4,UNIT_MASK		; TEST THIS DRIVE?
                          03     12  07FB       	BNEQ	30034$			; BR IF YES
                          00CC   31  07FD       	BRW	30038$
                                     0800       30034$:
   00000025'EF            03     28  0800       	MOVC3	#3,CNTRL_NAME,FILE4	; SET CONTROLLER NAME
                 00000554'EF         0807       
                 00001C4B'EF     DF  080C       		PUSHAL ERR4
                 000004C0'EF     DF  0812       		PUSHAL	FAB4
   00000000'9F            02     FB  0818       		CALLS	#$$.TMP1,@#SYS$CREATE
   00000146'EF            02     93  081F       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          16     12  0826       	BNEQ	30035$			; BR IF YES
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  24
1.07            MAIN CODE                                                                                                        (2)

                 00001C4B'EF     DF  0828       		PUSHAL ERR4
                 00000510'EF     DF  082E       		PUSHAL	RAB4
   00000000'9F            02     FB  0834       		CALLS	#$$.TMP1,@#SYS$CONNECT
                          0037   31  083B       	BRW	30037$
                                     083E       30035$:
            03            00     ED  083E       	CMPZV	#0,#3,FAB4+FAB$L_STS,#4 ; IS SEVERITY = 4?
            04   000004C8'EF         0841       
                          07     12  0847       	BNEQ	30036$			; BR IF NO
   000004C8'EF            02     C2  0849       	SUBL2	#2,FAB4+FAB$L_STS	; CHANGE SEVERITY TO ERROR
                                     0850       30036$:
                 000004CC'EF     DD  0850       	  	PUSHL	FAB4+FAB$L_STV
                 000004C8'EF     DD  0856       	  	PUSHL	FAB4+FAB$L_STS
   00000000'9F            02     FB  085C       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  0863       	BICB	#BIT1,IOSTAT		; RESET ERROR BIT
                 00000192'EF     95  086A       	TSTB	UNIT_MASK		; ANY DRIVES TO TEST?
                          5A     12  0870       	BNEQ	30038$			; BR IF YES
                          1E6F   31  0872       	BRW	ERROR_EXIT		; ELSE GO AWAY AND DIE
                                     0875       30037$:
   000004B1'EF   00000071'EF     DE  0875       	MOVAL	MT_TABLE,MTBUF_PTR4	; SET UP POINTER TO MT_TABLE
   000004AD'EF   000004B1'FF     D0  0880       	MOVL	@MTBUF_PTR4,LIMIT4	; SET LIMIT ON # OF ITERATIONS
   000004B1'EF            04     C0  088B       	ADDL2	#4,MTBUF_PTR4		; INCREMENT MT_TABLE POINTER
   000004B5'EF   000004B1'FF     D0  0892       	MOVL	@MTBUF_PTR4,REC_SIZE4	; SET REC. SIZE FOR THIS ITERATION
   00000532'EF   000004B5'EF     B0  089D       	MOVW	REC_SIZE4,RAB4+RAB$W_RSZ
   00000538'EF   0000002E'EF     D0  08A8       	MOVL	EXPADDR,RAB4+RAB$L_RBF	; SET THE RECORD ADDRESS
                 00001926'EF     DF  08B3       		PUSHAL SUC4
                 00001C4B'EF     DF  08B9       		PUSHAL ERR4
                 00000510'EF     DF  08BF       		PUSHAL	RAB4
   00000000'9F            03     FB  08C5       		CALLS	#$$.TMP1,@#SYS$WRITE
                                     08CC       30038$:
                                     08CC   636 	START_MT 5
   00000192'EF            20     93  08CC       	BITB	#1@5,UNIT_MASK		; TEST THIS DRIVE?
                          03     12  08D3       	BNEQ	30039$			; BR IF YES
                          00CC   31  08D5       	BRW	30043$
                                     08D8       30039$:
   00000025'EF            03     28  08D8       	MOVC3	#3,CNTRL_NAME,FILE5	; SET CONTROLLER NAME
                 00000618'EF         08DF       
                 00001FBA'EF     DF  08E4       		PUSHAL ERR5
                 00000584'EF     DF  08EA       		PUSHAL	FAB5
   00000000'9F            02     FB  08F0       		CALLS	#$$.TMP1,@#SYS$CREATE
   00000146'EF            02     93  08F7       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          16     12  08FE       	BNEQ	30040$			; BR IF YES
                 00001FBA'EF     DF  0900       		PUSHAL ERR5
                 000005D4'EF     DF  0906       		PUSHAL	RAB5
   00000000'9F            02     FB  090C       		CALLS	#$$.TMP1,@#SYS$CONNECT
                          0037   31  0913       	BRW	30042$
                                     0916       30040$:
            03            00     ED  0916       	CMPZV	#0,#3,FAB5+FAB$L_STS,#4 ; IS SEVERITY = 4?
            04   0000058C'EF         0919       
                          07     12  091F       	BNEQ	30041$			; BR IF NO
   0000058C'EF            02     C2  0921       	SUBL2	#2,FAB5+FAB$L_STS	; CHANGE SEVERITY TO ERROR
                                     0928       30041$:
                 00000590'EF     DD  0928       	  	PUSHL	FAB5+FAB$L_STV
                 0000058C'EF     DD  092E       	  	PUSHL	FAB5+FAB$L_STS
   00000000'9F            02     FB  0934       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  093B       	BICB	#BIT1,IOSTAT		; RESET ERROR BIT
                 00000192'EF     95  0942       	TSTB	UNIT_MASK		; ANY DRIVES TO TEST?
                          5A     12  0948       	BNEQ	30043$			; BR IF YES
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  25
1.07            MAIN CODE                                                                                                        (2)

                          1D97   31  094A       	BRW	ERROR_EXIT		; ELSE GO AWAY AND DIE
                                     094D       30042$:
   00000575'EF   00000071'EF     DE  094D       	MOVAL	MT_TABLE,MTBUF_PTR5	; SET UP POINTER TO MT_TABLE
   00000571'EF   00000575'FF     D0  0958       	MOVL	@MTBUF_PTR5,LIMIT5	; SET LIMIT ON # OF ITERATIONS
   00000575'EF            04     C0  0963       	ADDL2	#4,MTBUF_PTR5		; INCREMENT MT_TABLE POINTER
   00000579'EF   00000575'FF     D0  096A       	MOVL	@MTBUF_PTR5,REC_SIZE5	; SET REC. SIZE FOR THIS ITERATION
   000005F6'EF   00000579'EF     B0  0975       	MOVW	REC_SIZE5,RAB5+RAB$W_RSZ
   000005FC'EF   0000002E'EF     D0  0980       	MOVL	EXPADDR,RAB5+RAB$L_RBF	; SET THE RECORD ADDRESS
                 00001C95'EF     DF  098B       		PUSHAL SUC5
                 00001FBA'EF     DF  0991       		PUSHAL ERR5
                 000005D4'EF     DF  0997       		PUSHAL	RAB5
   00000000'9F            03     FB  099D       		CALLS	#$$.TMP1,@#SYS$WRITE
                                     09A4       30043$:
                                     09A4   637 	START_MT 6
   00000192'EF         40 8F     93  09A4       	BITB	#1@6,UNIT_MASK		; TEST THIS DRIVE?
                          03     12  09AC       	BNEQ	30044$			; BR IF YES
                          00CC   31  09AE       	BRW	30048$
                                     09B1       30044$:
   00000025'EF            03     28  09B1       	MOVC3	#3,CNTRL_NAME,FILE6	; SET CONTROLLER NAME
                 000006DC'EF         09B8       
                 0000232A'EF     DF  09BD       		PUSHAL ERR6
                 00000648'EF     DF  09C3       		PUSHAL	FAB6
   00000000'9F            02     FB  09C9       		CALLS	#$$.TMP1,@#SYS$CREATE
   00000146'EF            02     93  09D0       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          16     12  09D7       	BNEQ	30045$			; BR IF YES
                 0000232A'EF     DF  09D9       		PUSHAL ERR6
                 00000698'EF     DF  09DF       		PUSHAL	RAB6
   00000000'9F            02     FB  09E5       		CALLS	#$$.TMP1,@#SYS$CONNECT
                          0037   31  09EC       	BRW	30047$
                                     09EF       30045$:
            03            00     ED  09EF       	CMPZV	#0,#3,FAB6+FAB$L_STS,#4 ; IS SEVERITY = 4?
            04   00000650'EF         09F2       
                          07     12  09F8       	BNEQ	30046$			; BR IF NO
   00000650'EF            02     C2  09FA       	SUBL2	#2,FAB6+FAB$L_STS	; CHANGE SEVERITY TO ERROR
                                     0A01       30046$:
                 00000654'EF     DD  0A01       	  	PUSHL	FAB6+FAB$L_STV
                 00000650'EF     DD  0A07       	  	PUSHL	FAB6+FAB$L_STS
   00000000'9F            02     FB  0A0D       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  0A14       	BICB	#BIT1,IOSTAT		; RESET ERROR BIT
                 00000192'EF     95  0A1B       	TSTB	UNIT_MASK		; ANY DRIVES TO TEST?
                          5A     12  0A21       	BNEQ	30048$			; BR IF YES
                          1CBE   31  0A23       	BRW	ERROR_EXIT		; ELSE GO AWAY AND DIE
                                     0A26       30047$:
   00000639'EF   00000071'EF     DE  0A26       	MOVAL	MT_TABLE,MTBUF_PTR6	; SET UP POINTER TO MT_TABLE
   00000635'EF   00000639'FF     D0  0A31       	MOVL	@MTBUF_PTR6,LIMIT6	; SET LIMIT ON # OF ITERATIONS
   00000639'EF            04     C0  0A3C       	ADDL2	#4,MTBUF_PTR6		; INCREMENT MT_TABLE POINTER
   0000063D'EF   00000639'FF     D0  0A43       	MOVL	@MTBUF_PTR6,REC_SIZE6	; SET REC. SIZE FOR THIS ITERATION
   000006BA'EF   0000063D'EF     B0  0A4E       	MOVW	REC_SIZE6,RAB6+RAB$W_RSZ
   000006C0'EF   0000002E'EF     D0  0A59       	MOVL	EXPADDR,RAB6+RAB$L_RBF	; SET THE RECORD ADDRESS
                 00002004'EF     DF  0A64       		PUSHAL SUC6
                 0000232A'EF     DF  0A6A       		PUSHAL ERR6
                 00000698'EF     DF  0A70       		PUSHAL	RAB6
   00000000'9F            03     FB  0A76       		CALLS	#$$.TMP1,@#SYS$WRITE
                                     0A7D       30048$:
                                     0A7D   638 	START_MT 7
   00000192'EF         80 8F     93  0A7D       	BITB	#1@7,UNIT_MASK		; TEST THIS DRIVE?
                          03     12  0A85       	BNEQ	30049$			; BR IF YES
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  26
1.07            MAIN CODE                                                                                                        (2)

                          00CC   31  0A87       	BRW	30053$
                                     0A8A       30049$:
   00000025'EF            03     28  0A8A       	MOVC3	#3,CNTRL_NAME,FILE7	; SET CONTROLLER NAME
                 000007A0'EF         0A91       
                 0000269A'EF     DF  0A96       		PUSHAL ERR7
                 0000070C'EF     DF  0A9C       		PUSHAL	FAB7
   00000000'9F            02     FB  0AA2       		CALLS	#$$.TMP1,@#SYS$CREATE
   00000146'EF            02     93  0AA9       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          16     12  0AB0       	BNEQ	30050$			; BR IF YES
                 0000269A'EF     DF  0AB2       		PUSHAL ERR7
                 0000075C'EF     DF  0AB8       		PUSHAL	RAB7
   00000000'9F            02     FB  0ABE       		CALLS	#$$.TMP1,@#SYS$CONNECT
                          0037   31  0AC5       	BRW	30052$
                                     0AC8       30050$:
            03            00     ED  0AC8       	CMPZV	#0,#3,FAB7+FAB$L_STS,#4 ; IS SEVERITY = 4?
            04   00000714'EF         0ACB       
                          07     12  0AD1       	BNEQ	30051$			; BR IF NO
   00000714'EF            02     C2  0AD3       	SUBL2	#2,FAB7+FAB$L_STS	; CHANGE SEVERITY TO ERROR
                                     0ADA       30051$:
                 00000718'EF     DD  0ADA       	  	PUSHL	FAB7+FAB$L_STV
                 00000714'EF     DD  0AE0       	  	PUSHL	FAB7+FAB$L_STS
   00000000'9F            02     FB  0AE6       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  0AED       	BICB	#BIT1,IOSTAT		; RESET ERROR BIT
                 00000192'EF     95  0AF4       	TSTB	UNIT_MASK		; ANY DRIVES TO TEST?
                          5A     12  0AFA       	BNEQ	30053$			; BR IF YES
                          1BE5   31  0AFC       	BRW	ERROR_EXIT		; ELSE GO AWAY AND DIE
                                     0AFF       30052$:
   000006FD'EF   00000071'EF     DE  0AFF       	MOVAL	MT_TABLE,MTBUF_PTR7	; SET UP POINTER TO MT_TABLE
   000006F9'EF   000006FD'FF     D0  0B0A       	MOVL	@MTBUF_PTR7,LIMIT7	; SET LIMIT ON # OF ITERATIONS
   000006FD'EF            04     C0  0B15       	ADDL2	#4,MTBUF_PTR7		; INCREMENT MT_TABLE POINTER
   00000701'EF   000006FD'FF     D0  0B1C       	MOVL	@MTBUF_PTR7,REC_SIZE7	; SET REC. SIZE FOR THIS ITERATION
   0000077E'EF   00000701'EF     B0  0B27       	MOVW	REC_SIZE7,RAB7+RAB$W_RSZ
   00000784'EF   0000002E'EF     D0  0B32       	MOVL	EXPADDR,RAB7+RAB$L_RBF	; SET THE RECORD ADDRESS
                 00002374'EF     DF  0B3D       		PUSHAL SUC7
                 0000269A'EF     DF  0B43       		PUSHAL ERR7
                 0000075C'EF     DF  0B49       		PUSHAL	RAB7
   00000000'9F            03     FB  0B4F       		CALLS	#$$.TMP1,@#SYS$WRITE
                                     0B56       30053$:
                 00000192'EF     95  0B56   639 	TSTB	UNIT_MASK		; ANY UNITS TO TEST?
                          0A     13  0B5C   640 	BEQL	20$			; BR IF NOT
                                     0B5E   641 	$HIBER_S
   00000000'GF            00     FB  0B5E       		CALLS	#0,G^SYS$HIBER
                          1BB5   31  0B65   642 	BRW	END_MT			; EXIT CLEANLY
                                     0B68   643 20$:
                 000026E4'EF     17  0B68   644 	JMP	ERROR_EXIT		; ERROR EXIT !
                                     0B6E   645 	TAPETEST 0	; SERVICE AST'S
                                     0B6E       SUC0:
                               0FFC  0B6E       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000146'EF            04     93  0B70       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  0B77       	BEQL	10$			; BR IF NO
   00000146'EF            04     8A  0B79       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          1B9A   31  0B80       	BRW	END_MT			; EXIT IF YES
                                     0B83       10$:
                 0000019B'EF     D6  0B83       	INCL	ITER0			; INC. CTR. FOR THIS FILESIZE
   0000019F'EF   0000019B'EF     D1  0B89       	CMPL	ITER0,LIMIT0		; DONE WITH THIS FILESIZE?
                          4D     12  0B94       	BNEQ	30$			; BR IF NO
   000001A3'EF            04     C0  0B96       	ADDL2	#4,MTBUF_PTR0		; INCREMENT MT_TABLE POINTER
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  27
1.07            MAIN CODE                                                                                                        (2)

   0000019F'EF   000001A3'FF     D0  0B9D       	MOVL	@MTBUF_PTR0,LIMIT0	; LIMIT ON # OF ITERATIONS
                 0000019F'EF     D5  0BA8       	TSTL	LIMIT0			; IS THE LIMIT 0 (ALL DONE)?
                          03     12  0BAE       	BNEQ	20$			; BR IF NO
                          0080   31  0BB0       	BRW	50$			; REWIND THE TAPE
                                     0BB3       20$:
                 0000019B'EF     D4  0BB3       	CLRL	ITER0			; ZERO THE ITERATION COUNT
   000001A3'EF            04     C0  0BB9       	ADDL2	#4,MTBUF_PTR0		; INCREMENT MT_TABLE POINTER
   000001A7'EF   000001A3'FF     D0  0BC0       	MOVL	@MTBUF_PTR0,REC_SIZE0	; SET THE RECORD SIZE
   00000222'EF   000001A7'EF     B0  0BCB       	MOVW	REC_SIZE0,RAB0+RAB$W_RSZ
   00000228'EF   0000002E'EF     D0  0BD6       	MOVL	EXPADDR,RAB0+RAB$L_RBF	; WRITE BEGINNING OF DATA
                          38     11  0BE1       	BRB	40$			; DO A WRITE
                                     0BE3       30$:
            58   00007FFE 8F     D0  0BE3       	MOVL	#MAX_REC,R8		; GET MAX. RECORD SIZE
   00000228'EF   000001A7'EF     C0  0BEA       	ADDL2	REC_SIZE0,RAB0+RAB$L_RBF ; GET NEXT DATA IN BUFFER
   000001AB'EF   000001A7'EF     C0  0BF5       	ADDL2	REC_SIZE0,SIZE_CTR0	; ACCUMULATE # OF BYTES USED
            58   000001AB'EF     C2  0C00       	SUBL2	SIZE_CTR0,R8		; DO WE HAVE ENOUGH DATA
   000001A7'EF            58     D1  0C07       	CMPL	R8,REC_SIZE0		; LEFT TO WRITE?
                          0B     18  0C0E       	BGEQ	40$			; BR IF YES
   00000228'EF   0000002E'EF     D0  0C10       	MOVL	EXPADDR,RAB0+RAB$L_RBF	; WRITE BEGINNING OF DATA
                                     0C1B       40$:
                     FF4F CF     DF  0C1B       		PUSHAL SUC0
                 00000E8F'EF     DF  0C1F       		PUSHAL ERR0
                 00000200'EF     DF  0C25       		PUSHAL	RAB0
   00000000'9F            03     FB  0C2B       		CALLS	#$$.TMP1,@#SYS$WRITE
                                 04  0C32       	RET
                                     0C33       50$:
   00000146'EF            04     93  0C33       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  0C3A       	BEQL	60$			; BR IF NO
   00000146'EF            04     8A  0C3C       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          1AD7   31  0C43       	BRW	END_MT			; EXIT IF YES
                                     0C46       60$:
                 00000E8F'EF     DF  0C46       		PUSHAL ERR0
                 000001B0'EF     DF  0C4C       		PUSHAL	FAB0
   00000000'9F            02     FB  0C52       		CALLS	#$$.TMP1,@#SYS$CLOSE
   00000146'EF            02     93  0C59       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          44     12  0C60       	BNEQ	70$			; BR IF YES
   00000025'EF            03     28  0C62       	MOVC3	#3,CNTRL_NAME,FILE0	; SET THE CONTROLLER NAME
                 00000244'EF         0C69       
                 00000E8F'EF     DF  0C6E       		PUSHAL ERR0
                 000001B0'EF     DF  0C74       		PUSHAL	FAB0
   00000000'9F            02     FB  0C7A       		CALLS	#$$.TMP1,@#SYS$OPEN
   00000146'EF            02     93  0C81       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          1C     12  0C88       	BNEQ	70$			; BR IF YES
                 00000CDE'EF     DF  0C8A       		PUSHAL SUCA0
                 00000E8F'EF     DF  0C90       		PUSHAL ERR0
                 00000200'EF     DF  0C96       		PUSHAL	RAB0
   00000000'9F            03     FB  0C9C       		CALLS	#$$.TMP1,@#SYS$CONNECT
                          0037   31  0CA3       	BRW	90$
                                     0CA6       70$:
            03            00     ED  0CA6       	CMPZV	#0,#3,FAB0+FAB$L_STS,#4 ; IS SEVERITY = 4?
            04   000001B8'EF         0CA9       
                          07     12  0CAF       	BNEQ	80$			; BR IF NO
   000001B8'EF            02     C2  0CB1       	SUBL2	#2,FAB0+FAB$L_STS	; CHANGE SEVERITY TO ERROR
                                     0CB8       80$:
                 000001BC'EF     DD  0CB8       	  	PUSHL	FAB0+FAB$L_STV
                 000001B8'EF     DD  0CBE       	  	PUSHL	FAB0+FAB$L_STS
   00000000'9F            02     FB  0CC4       		CALLS	#$$T1,@#LIB$SIGNAL
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  28
1.07            MAIN CODE                                                                                                        (2)

   00000146'EF            02     8A  0CCB       	BICB	#BIT1,IOSTAT		; RESET ERROR BIT
                 00000192'EF     95  0CD2       	TSTB	UNIT_MASK		; ANY DRIVES TO TEST?
                          03     12  0CD8       	BNEQ	90$			; BR IF YES
                          1A07   31  0CDA       	BRW	ERROR_EXIT		; EXIT
                                     0CDD       90$:
                                 04  0CDD       	RET
                                     0CDE       SUCA0:
                               0FFC  0CDE       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   000001A3'EF   00000071'EF     DE  0CE0       	MOVAL	MT_TABLE,MTBUF_PTR0	; RESET PTR. TO LIMIT SIZE
   0000019F'EF   000001A3'FF     D0  0CEB       	MOVL	@MTBUF_PTR0,LIMIT0	; RESET LIMIT ON # OF ITERATIONS
   000001A3'EF            04     C0  0CF6       	ADDL2	#4,MTBUF_PTR0		; INC. MT_TABLE POINTER
   000001A7'EF   000001A3'FF     D0  0CFD       	MOVL	@MTBUF_PTR0,REC_SIZE0	; RESET RECORD SIZE
   00000197'EF   0000002E'EF     D0  0D08       	MOVL	EXPADDR,DATA_ADR0	; ADDRESS OF WRITE BUFFER
                 0000019B'EF     D4  0D13       	CLRL	ITER0			; ZERO ITERATION COUNTER
                 000001AB'EF     D4  0D19       	CLRL	SIZE_CTR0		; ZERO SIZE COUNTER
   0000002E'EF            00     C1  0D1F       	ADDL3 	#MAX_REC*0,EXPADDR,BUF0 ; READ BUFFER FOR THIS UNIT
                 00000193'EF         0D26       
   00000193'EF   00007FFE 8F     C0  0D2B       	ADDL2	#MAX_REC,BUF0
   00000224'EF   00000193'EF     D0  0D36       	MOVL	BUF0,RAB0+RAB$L_UBF	; WHICH RECORD TO READ
   00000220'EF   000001A7'EF     B0  0D41       	MOVW	REC_SIZE0,RAB0+RAB$W_USZ ; # OF BYTES TO READ
                                     0D4C       SUCB0:
   00000146'EF            04     93  0D4C       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  0D53       	BEQL	10$			; BR IF NO
   00000146'EF            04     8A  0D55       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          19BE   31  0D5C       	BRW	END_MT			; EXIT CLEANLY
                                     0D5F       10$:
                 00000D79'EF     DF  0D5F       		PUSHAL SUCC0
                 00000E8F'EF     DF  0D65       		PUSHAL ERR0
                 00000200'EF     DF  0D6B       		PUSHAL	RAB0
   00000000'9F            03     FB  0D71       		CALLS	#$$.TMP1,@#SYS$READ
                                 04  0D78       	RET
                                     0D79       SUCC0:
                               0FFC  0D79       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000197'FF   000001A7'EF     29  0D7B       	CMPC3	REC_SIZE0,@DATA_ADR0,@BUF0 ; IS THE DATA GOOD?
                 00000193'FF         0D86       
                          03     13  0D8B       	BEQL	10$			; BR IF YES
                          00D7   31  0D8D       	BRW	60$			; PRINT THE DATA ERROR
                                     0D90       10$:
                 0000019B'EF     D6  0D90       	INCL	ITER0			; INCREMENT THE FILESIZE COUNTER
   0000019F'EF   0000019B'EF     D1  0D96       	CMPL	ITER0,LIMIT0		; DONE WITH THIS FILESIZE?
                          4B     13  0DA1       	BEQL	40$			; BR IF YES
            59   00007FFE 8F     D0  0DA3       	MOVL	#MAX_REC,R9		; MAXIMUM RECORD SIZE
   000001AB'EF   000001A7'EF     C0  0DAA       	ADDL2	REC_SIZE0,SIZE_CTR0	; ACCUM. # OF BYTES TO READ
            59   000001AB'EF     C2  0DB5       	SUBL2	SIZE_CTR0,R9		; ENOUGH BYTES TO TEST?
   000001A7'EF            59     D1  0DBC       	CMPL	R9,REC_SIZE0
                          0D     18  0DC3       	BGEQ	20$			; BR IF YES
   00000197'EF   0000002E'EF     D0  0DC5       	MOVL	EXPADDR,DATA_ADR0	; ADDRESS OF DATA
                          0B     11  0DD0       	BRB	30$
                                     0DD2       20$:
   00000197'EF   000001A7'EF     C0  0DD2       	ADDL2	REC_SIZE0,DATA_ADR0	; INC THROUGH DATA BUFFER
                                     0DDD       30$:
            6E            00     2C  0DDD       	MOVC5	#0,(SP),#0,REC_SIZE0,@BUF0 ; CLEAR THE READ BUFFER
   000001A7'EF            00         0DE0       
                 00000193'FF         0DE6       
                          FF5E   31  0DEB       	BRW	SUCB0			; DO A READ
                                     0DEE       40$:
   000001A3'EF            04     C0  0DEE       	ADDL2	#4,MTBUF_PTR0		; INCREMENT MT_TABLE POINTER
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  29
1.07            MAIN CODE                                                                                                        (2)

   0000019F'EF   000001A3'FF     D0  0DF5       	MOVL	@MTBUF_PTR0,LIMIT0	; LIMIT ON THE # OF ITERATIONS
                 0000019F'EF     D5  0E00       	TSTL	LIMIT0			; IS THIS UNIT DONE?
                          15     12  0E06       	BNEQ	50$			; BR IF NO
   0000002D'EF            01     88  0E08       	BISB2	#1@0,DONE_FLAG		; SET THE DONE FLAG
   00000192'EF   0000002D'EF     91  0E0F       	CMPB	DONE_FLAG,UNIT_MASK	; ARE ALL UNITS DONE?
                          6D     13  0E1A       	BEQL	70$			; BR IF YES
                                 04  0E1C       	RET
                                     0E1D       50$:
                 0000019B'EF     D4  0E1D       	CLRL	ITER0			; ZERO THE ITERATION COUNT
   000001A3'EF            04     C0  0E23       	ADDL2	#4,MTBUF_PTR0		; INCREMENT MT_TABLE POINTER
   000001A7'EF   000001A3'FF     D0  0E2A       	MOVL	@MTBUF_PTR0,REC_SIZE0	; SET THE RECORD SIZE
   00000220'EF   000001A7'EF     B0  0E35       	MOVW	REC_SIZE0,RAB0+RAB$W_USZ ; # OF BYTES TO READ
   00000224'EF   00000193'EF     D0  0E40       	MOVL	BUF0,RAB0+RAB$L_UBF	; WHICH RECORD TO READ
   00000197'EF   0000002E'EF     D0  0E4B       	MOVL	EXPADDR,DATA_ADR0	; READ THE BEGINNING OF THE DATA
            6E            00     2C  0E56       	MOVC5	#0,(SP),#0,REC_SIZE0,@BUF0 ; CLEAR THE READ BUFFER
   000001A7'EF            00         0E59       
                 00000193'FF         0E5F       
                          FEE5   31  0E64       	BRW	SUCB0			; DO A READ
                                     0E67       60$:
   00000191'EF            00     90  0E67       	MOVB	#0,UNIT_ERROR		; SET BAD UNIT NUMBER
   00000000'EF            50     3C  0E6E       	MOVZWL	R0,ARGS			; GET BYTE #
   00000004'EF            61     9A  0E75       	MOVZBL	(R1),ARGS+4		; GET GOOD BYTE
   00000008'EF            63     9A  0E7C       	MOVZBL	(R3),ARGS+8		; GET BAD BYTE
                          F21F   30  0E83       	BSBW	DATA_ERROR		; REPORT DATA ERROR
                          FF07   31  0E86       	BRW	10$			; CONTINUE
                                     0E89       70$:
       F2C1 CF            00     FB  0E89       	CALLS	#0,WAKE_UP		; EXIT CLEANLY FROM AST LEVEL
                                 04  0E8E       	RET
                                     0E8F       ERR0:
                               0FFC  0E8F       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000181'EF   00000208'EF     D0  0E91       	MOVL	RAB0+RAB$L_STS,RMS_ERR_STS	; SAVE STATUS FIELD
   00000185'EF   0000020C'EF     D0  0E9C       	MOVL	RAB0+RAB$L_STV,RMS_ERR_STV	; SAVE STV FIELD
   00000191'EF            00     90  0EA7       	MOVB	#0,UNIT_ERROR			; GET UNIT NUMBER
       F14D CF            00     FB  0EAE       	CALLS	#0,RMS_ERR			; PRINT THE ERROR
                 00000192'EF     95  0EB3       	TSTB	UNIT_MASK			; ANY MORE UNITS TO TEST?
                          1D     12  0EB9       	BNEQ	10$				; BR IF YES
                 000001BC'EF     DD  0EBB       	  	PUSHL	FAB0+FAB$L_STV
                 000001B8'EF     DD  0EC1       	  	PUSHL	FAB0+FAB$L_STS
   00000000'9F            02     FB  0EC7       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  0ECE       	BICB	#BIT1,IOSTAT			; CLEAR ERROR BIT IN IOSTAT
                          180C   31  0ED5       	BRW	ERROR_EXIT			; EXIT
                                     0ED8       10$:
                                 04  0ED8       	RET
                                     0ED9   646 	TAPETEST 1
                                     0ED9       SUC1:
                               0FFC  0ED9       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000146'EF            04     93  0EDB       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  0EE2       	BEQL	10$			; BR IF NO
   00000146'EF            04     8A  0EE4       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          182F   31  0EEB       	BRW	END_MT			; EXIT IF YES
                                     0EEE       10$:
                 0000025D'EF     D6  0EEE       	INCL	ITER1			; INC. CTR. FOR THIS FILESIZE
   00000261'EF   0000025D'EF     D1  0EF4       	CMPL	ITER1,LIMIT1		; DONE WITH THIS FILESIZE?
                          4D     12  0EFF       	BNEQ	30$			; BR IF NO
   00000265'EF            04     C0  0F01       	ADDL2	#4,MTBUF_PTR1		; INCREMENT MT_TABLE POINTER
   00000261'EF   00000265'FF     D0  0F08       	MOVL	@MTBUF_PTR1,LIMIT1	; LIMIT ON # OF ITERATIONS
                 00000261'EF     D5  0F13       	TSTL	LIMIT1			; IS THE LIMIT 0 (ALL DONE)?
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  30
1.07            MAIN CODE                                                                                                        (2)

                          03     12  0F19       	BNEQ	20$			; BR IF NO
                          0080   31  0F1B       	BRW	50$			; REWIND THE TAPE
                                     0F1E       20$:
                 0000025D'EF     D4  0F1E       	CLRL	ITER1			; ZERO THE ITERATION COUNT
   00000265'EF            04     C0  0F24       	ADDL2	#4,MTBUF_PTR1		; INCREMENT MT_TABLE POINTER
   00000269'EF   00000265'FF     D0  0F2B       	MOVL	@MTBUF_PTR1,REC_SIZE1	; SET THE RECORD SIZE
   000002E6'EF   00000269'EF     B0  0F36       	MOVW	REC_SIZE1,RAB1+RAB$W_RSZ
   000002EC'EF   0000002E'EF     D0  0F41       	MOVL	EXPADDR,RAB1+RAB$L_RBF	; WRITE BEGINNING OF DATA
                          38     11  0F4C       	BRB	40$			; DO A WRITE
                                     0F4E       30$:
            58   00007FFE 8F     D0  0F4E       	MOVL	#MAX_REC,R8		; GET MAX. RECORD SIZE
   000002EC'EF   00000269'EF     C0  0F55       	ADDL2	REC_SIZE1,RAB1+RAB$L_RBF ; GET NEXT DATA IN BUFFER
   0000026D'EF   00000269'EF     C0  0F60       	ADDL2	REC_SIZE1,SIZE_CTR1	; ACCUMULATE # OF BYTES USED
            58   0000026D'EF     C2  0F6B       	SUBL2	SIZE_CTR1,R8		; DO WE HAVE ENOUGH DATA
   00000269'EF            58     D1  0F72       	CMPL	R8,REC_SIZE1		; LEFT TO WRITE?
                          0B     18  0F79       	BGEQ	40$			; BR IF YES
   000002EC'EF   0000002E'EF     D0  0F7B       	MOVL	EXPADDR,RAB1+RAB$L_RBF	; WRITE BEGINNING OF DATA
                                     0F86       40$:
                     FF4F CF     DF  0F86       		PUSHAL SUC1
                 000011FE'EF     DF  0F8A       		PUSHAL ERR1
                 000002C4'EF     DF  0F90       		PUSHAL	RAB1
   00000000'9F            03     FB  0F96       		CALLS	#$$.TMP1,@#SYS$WRITE
                                 04  0F9D       	RET
                                     0F9E       50$:
   00000146'EF            04     93  0F9E       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  0FA5       	BEQL	60$			; BR IF NO
   00000146'EF            04     8A  0FA7       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          176C   31  0FAE       	BRW	END_MT			; EXIT IF YES
                                     0FB1       60$:
                 000011FE'EF     DF  0FB1       		PUSHAL ERR1
                 00000274'EF     DF  0FB7       		PUSHAL	FAB1
   00000000'9F            02     FB  0FBD       		CALLS	#$$.TMP1,@#SYS$CLOSE
   00000146'EF            02     93  0FC4       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          44     12  0FCB       	BNEQ	70$			; BR IF YES
   00000025'EF            03     28  0FCD       	MOVC3	#3,CNTRL_NAME,FILE1	; SET THE CONTROLLER NAME
                 00000308'EF         0FD4       
                 000011FE'EF     DF  0FD9       		PUSHAL ERR1
                 00000274'EF     DF  0FDF       		PUSHAL	FAB1
   00000000'9F            02     FB  0FE5       		CALLS	#$$.TMP1,@#SYS$OPEN
   00000146'EF            02     93  0FEC       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          1C     12  0FF3       	BNEQ	70$			; BR IF YES
                 00001049'EF     DF  0FF5       		PUSHAL SUCA1
                 000011FE'EF     DF  0FFB       		PUSHAL ERR1
                 000002C4'EF     DF  1001       		PUSHAL	RAB1
   00000000'9F            03     FB  1007       		CALLS	#$$.TMP1,@#SYS$CONNECT
                          0037   31  100E       	BRW	90$
                                     1011       70$:
            03            00     ED  1011       	CMPZV	#0,#3,FAB1+FAB$L_STS,#4 ; IS SEVERITY = 4?
            04   0000027C'EF         1014       
                          07     12  101A       	BNEQ	80$			; BR IF NO
   0000027C'EF            02     C2  101C       	SUBL2	#2,FAB1+FAB$L_STS	; CHANGE SEVERITY TO ERROR
                                     1023       80$:
                 00000280'EF     DD  1023       	  	PUSHL	FAB1+FAB$L_STV
                 0000027C'EF     DD  1029       	  	PUSHL	FAB1+FAB$L_STS
   00000000'9F            02     FB  102F       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  1036       	BICB	#BIT1,IOSTAT		; RESET ERROR BIT
                 00000192'EF     95  103D       	TSTB	UNIT_MASK		; ANY DRIVES TO TEST?
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  31
1.07            MAIN CODE                                                                                                        (2)

                          03     12  1043       	BNEQ	90$			; BR IF YES
                          169C   31  1045       	BRW	ERROR_EXIT		; EXIT
                                     1048       90$:
                                 04  1048       	RET
                                     1049       SUCA1:
                               0FFC  1049       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000265'EF   00000071'EF     DE  104B       	MOVAL	MT_TABLE,MTBUF_PTR1	; RESET PTR. TO LIMIT SIZE
   00000261'EF   00000265'FF     D0  1056       	MOVL	@MTBUF_PTR1,LIMIT1	; RESET LIMIT ON # OF ITERATIONS
   00000265'EF            04     C0  1061       	ADDL2	#4,MTBUF_PTR1		; INC. MT_TABLE POINTER
   00000269'EF   00000265'FF     D0  1068       	MOVL	@MTBUF_PTR1,REC_SIZE1	; RESET RECORD SIZE
   00000259'EF   0000002E'EF     D0  1073       	MOVL	EXPADDR,DATA_ADR1	; ADDRESS OF WRITE BUFFER
                 0000025D'EF     D4  107E       	CLRL	ITER1			; ZERO ITERATION COUNTER
                 0000026D'EF     D4  1084       	CLRL	SIZE_CTR1		; ZERO SIZE COUNTER
   0000002E'EF   00007FFE 8F     C1  108A       	ADDL3 	#MAX_REC*1,EXPADDR,BUF1 ; READ BUFFER FOR THIS UNIT
                 00000255'EF         1095       
   00000255'EF   00007FFE 8F     C0  109A       	ADDL2	#MAX_REC,BUF1
   000002E8'EF   00000255'EF     D0  10A5       	MOVL	BUF1,RAB1+RAB$L_UBF	; WHICH RECORD TO READ
   000002E4'EF   00000269'EF     B0  10B0       	MOVW	REC_SIZE1,RAB1+RAB$W_USZ ; # OF BYTES TO READ
                                     10BB       SUCB1:
   00000146'EF            04     93  10BB       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  10C2       	BEQL	10$			; BR IF NO
   00000146'EF            04     8A  10C4       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          164F   31  10CB       	BRW	END_MT			; EXIT CLEANLY
                                     10CE       10$:
                 000010E8'EF     DF  10CE       		PUSHAL SUCC1
                 000011FE'EF     DF  10D4       		PUSHAL ERR1
                 000002C4'EF     DF  10DA       		PUSHAL	RAB1
   00000000'9F            03     FB  10E0       		CALLS	#$$.TMP1,@#SYS$READ
                                 04  10E7       	RET
                                     10E8       SUCC1:
                               0FFC  10E8       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000259'FF   00000269'EF     29  10EA       	CMPC3	REC_SIZE1,@DATA_ADR1,@BUF1 ; IS THE DATA GOOD?
                 00000255'FF         10F5       
                          03     13  10FA       	BEQL	10$			; BR IF YES
                          00D7   31  10FC       	BRW	60$			; PRINT THE DATA ERROR
                                     10FF       10$:
                 0000025D'EF     D6  10FF       	INCL	ITER1			; INCREMENT THE FILESIZE COUNTER
   00000261'EF   0000025D'EF     D1  1105       	CMPL	ITER1,LIMIT1		; DONE WITH THIS FILESIZE?
                          4B     13  1110       	BEQL	40$			; BR IF YES
            59   00007FFE 8F     D0  1112       	MOVL	#MAX_REC,R9		; MAXIMUM RECORD SIZE
   0000026D'EF   00000269'EF     C0  1119       	ADDL2	REC_SIZE1,SIZE_CTR1	; ACCUM. # OF BYTES TO READ
            59   0000026D'EF     C2  1124       	SUBL2	SIZE_CTR1,R9		; ENOUGH BYTES TO TEST?
   00000269'EF            59     D1  112B       	CMPL	R9,REC_SIZE1
                          0D     18  1132       	BGEQ	20$			; BR IF YES
   00000259'EF   0000002E'EF     D0  1134       	MOVL	EXPADDR,DATA_ADR1	; ADDRESS OF DATA
                          0B     11  113F       	BRB	30$
                                     1141       20$:
   00000259'EF   00000269'EF     C0  1141       	ADDL2	REC_SIZE1,DATA_ADR1	; INC THROUGH DATA BUFFER
                                     114C       30$:
            6E            00     2C  114C       	MOVC5	#0,(SP),#0,REC_SIZE1,@BUF1 ; CLEAR THE READ BUFFER
   00000269'EF            00         114F       
                 00000255'FF         1155       
                          FF5E   31  115A       	BRW	SUCB1			; DO A READ
                                     115D       40$:
   00000265'EF            04     C0  115D       	ADDL2	#4,MTBUF_PTR1		; INCREMENT MT_TABLE POINTER
   00000261'EF   00000265'FF     D0  1164       	MOVL	@MTBUF_PTR1,LIMIT1	; LIMIT ON THE # OF ITERATIONS
                 00000261'EF     D5  116F       	TSTL	LIMIT1			; IS THIS UNIT DONE?
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  32
1.07            MAIN CODE                                                                                                        (2)

                          15     12  1175       	BNEQ	50$			; BR IF NO
   0000002D'EF            02     88  1177       	BISB2	#1@1,DONE_FLAG		; SET THE DONE FLAG
   00000192'EF   0000002D'EF     91  117E       	CMPB	DONE_FLAG,UNIT_MASK	; ARE ALL UNITS DONE?
                          6D     13  1189       	BEQL	70$			; BR IF YES
                                 04  118B       	RET
                                     118C       50$:
                 0000025D'EF     D4  118C       	CLRL	ITER1			; ZERO THE ITERATION COUNT
   00000265'EF            04     C0  1192       	ADDL2	#4,MTBUF_PTR1		; INCREMENT MT_TABLE POINTER
   00000269'EF   00000265'FF     D0  1199       	MOVL	@MTBUF_PTR1,REC_SIZE1	; SET THE RECORD SIZE
   000002E4'EF   00000269'EF     B0  11A4       	MOVW	REC_SIZE1,RAB1+RAB$W_USZ ; # OF BYTES TO READ
   000002E8'EF   00000255'EF     D0  11AF       	MOVL	BUF1,RAB1+RAB$L_UBF	; WHICH RECORD TO READ
   00000259'EF   0000002E'EF     D0  11BA       	MOVL	EXPADDR,DATA_ADR1	; READ THE BEGINNING OF THE DATA
            6E            00     2C  11C5       	MOVC5	#0,(SP),#0,REC_SIZE1,@BUF1 ; CLEAR THE READ BUFFER
   00000269'EF            00         11C8       
                 00000255'FF         11CE       
                          FEE5   31  11D3       	BRW	SUCB1			; DO A READ
                                     11D6       60$:
   00000191'EF            01     90  11D6       	MOVB	#1,UNIT_ERROR		; SET BAD UNIT NUMBER
   00000000'EF            50     3C  11DD       	MOVZWL	R0,ARGS			; GET BYTE #
   00000004'EF            61     9A  11E4       	MOVZBL	(R1),ARGS+4		; GET GOOD BYTE
   00000008'EF            63     9A  11EB       	MOVZBL	(R3),ARGS+8		; GET BAD BYTE
                          EEB0   30  11F2       	BSBW	DATA_ERROR		; REPORT DATA ERROR
                          FF07   31  11F5       	BRW	10$			; CONTINUE
                                     11F8       70$:
       EF52 CF            00     FB  11F8       	CALLS	#0,WAKE_UP		; EXIT CLEANLY FROM AST LEVEL
                                 04  11FD       	RET
                                     11FE       ERR1:
                               0FFC  11FE       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000181'EF   000002CC'EF     D0  1200       	MOVL	RAB1+RAB$L_STS,RMS_ERR_STS	; SAVE STATUS FIELD
   00000185'EF   000002D0'EF     D0  120B       	MOVL	RAB1+RAB$L_STV,RMS_ERR_STV	; SAVE STV FIELD
   00000191'EF            01     90  1216       	MOVB	#1,UNIT_ERROR			; GET UNIT NUMBER
       EDDE CF            00     FB  121D       	CALLS	#0,RMS_ERR			; PRINT THE ERROR
                 00000192'EF     95  1222       	TSTB	UNIT_MASK			; ANY MORE UNITS TO TEST?
                          1D     12  1228       	BNEQ	10$				; BR IF YES
                 00000280'EF     DD  122A       	  	PUSHL	FAB1+FAB$L_STV
                 0000027C'EF     DD  1230       	  	PUSHL	FAB1+FAB$L_STS
   00000000'9F            02     FB  1236       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  123D       	BICB	#BIT1,IOSTAT			; CLEAR ERROR BIT IN IOSTAT
                          149D   31  1244       	BRW	ERROR_EXIT			; EXIT
                                     1247       10$:
                                 04  1247       	RET
                                     1248   647 	TAPETEST 2
                                     1248       SUC2:
                               0FFC  1248       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000146'EF            04     93  124A       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  1251       	BEQL	10$			; BR IF NO
   00000146'EF            04     8A  1253       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          14C0   31  125A       	BRW	END_MT			; EXIT IF YES
                                     125D       10$:
                 00000321'EF     D6  125D       	INCL	ITER2			; INC. CTR. FOR THIS FILESIZE
   00000325'EF   00000321'EF     D1  1263       	CMPL	ITER2,LIMIT2		; DONE WITH THIS FILESIZE?
                          4D     12  126E       	BNEQ	30$			; BR IF NO
   00000329'EF            04     C0  1270       	ADDL2	#4,MTBUF_PTR2		; INCREMENT MT_TABLE POINTER
   00000325'EF   00000329'FF     D0  1277       	MOVL	@MTBUF_PTR2,LIMIT2	; LIMIT ON # OF ITERATIONS
                 00000325'EF     D5  1282       	TSTL	LIMIT2			; IS THE LIMIT 0 (ALL DONE)?
                          03     12  1288       	BNEQ	20$			; BR IF NO
                          0080   31  128A       	BRW	50$			; REWIND THE TAPE
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  33
1.07            MAIN CODE                                                                                                        (2)

                                     128D       20$:
                 00000321'EF     D4  128D       	CLRL	ITER2			; ZERO THE ITERATION COUNT
   00000329'EF            04     C0  1293       	ADDL2	#4,MTBUF_PTR2		; INCREMENT MT_TABLE POINTER
   0000032D'EF   00000329'FF     D0  129A       	MOVL	@MTBUF_PTR2,REC_SIZE2	; SET THE RECORD SIZE
   000003AA'EF   0000032D'EF     B0  12A5       	MOVW	REC_SIZE2,RAB2+RAB$W_RSZ
   000003B0'EF   0000002E'EF     D0  12B0       	MOVL	EXPADDR,RAB2+RAB$L_RBF	; WRITE BEGINNING OF DATA
                          38     11  12BB       	BRB	40$			; DO A WRITE
                                     12BD       30$:
            58   00007FFE 8F     D0  12BD       	MOVL	#MAX_REC,R8		; GET MAX. RECORD SIZE
   000003B0'EF   0000032D'EF     C0  12C4       	ADDL2	REC_SIZE2,RAB2+RAB$L_RBF ; GET NEXT DATA IN BUFFER
   00000331'EF   0000032D'EF     C0  12CF       	ADDL2	REC_SIZE2,SIZE_CTR2	; ACCUMULATE # OF BYTES USED
            58   00000331'EF     C2  12DA       	SUBL2	SIZE_CTR2,R8		; DO WE HAVE ENOUGH DATA
   0000032D'EF            58     D1  12E1       	CMPL	R8,REC_SIZE2		; LEFT TO WRITE?
                          0B     18  12E8       	BGEQ	40$			; BR IF YES
   000003B0'EF   0000002E'EF     D0  12EA       	MOVL	EXPADDR,RAB2+RAB$L_RBF	; WRITE BEGINNING OF DATA
                                     12F5       40$:
                     FF4F CF     DF  12F5       		PUSHAL SUC2
                 0000156D'EF     DF  12F9       		PUSHAL ERR2
                 00000388'EF     DF  12FF       		PUSHAL	RAB2
   00000000'9F            03     FB  1305       		CALLS	#$$.TMP1,@#SYS$WRITE
                                 04  130C       	RET
                                     130D       50$:
   00000146'EF            04     93  130D       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  1314       	BEQL	60$			; BR IF NO
   00000146'EF            04     8A  1316       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          13FD   31  131D       	BRW	END_MT			; EXIT IF YES
                                     1320       60$:
                 0000156D'EF     DF  1320       		PUSHAL ERR2
                 00000338'EF     DF  1326       		PUSHAL	FAB2
   00000000'9F            02     FB  132C       		CALLS	#$$.TMP1,@#SYS$CLOSE
   00000146'EF            02     93  1333       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          44     12  133A       	BNEQ	70$			; BR IF YES
   00000025'EF            03     28  133C       	MOVC3	#3,CNTRL_NAME,FILE2	; SET THE CONTROLLER NAME
                 000003CC'EF         1343       
                 0000156D'EF     DF  1348       		PUSHAL ERR2
                 00000338'EF     DF  134E       		PUSHAL	FAB2
   00000000'9F            02     FB  1354       		CALLS	#$$.TMP1,@#SYS$OPEN
   00000146'EF            02     93  135B       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          1C     12  1362       	BNEQ	70$			; BR IF YES
                 000013B8'EF     DF  1364       		PUSHAL SUCA2
                 0000156D'EF     DF  136A       		PUSHAL ERR2
                 00000388'EF     DF  1370       		PUSHAL	RAB2
   00000000'9F            03     FB  1376       		CALLS	#$$.TMP1,@#SYS$CONNECT
                          0037   31  137D       	BRW	90$
                                     1380       70$:
            03            00     ED  1380       	CMPZV	#0,#3,FAB2+FAB$L_STS,#4 ; IS SEVERITY = 4?
            04   00000340'EF         1383       
                          07     12  1389       	BNEQ	80$			; BR IF NO
   00000340'EF            02     C2  138B       	SUBL2	#2,FAB2+FAB$L_STS	; CHANGE SEVERITY TO ERROR
                                     1392       80$:
                 00000344'EF     DD  1392       	  	PUSHL	FAB2+FAB$L_STV
                 00000340'EF     DD  1398       	  	PUSHL	FAB2+FAB$L_STS
   00000000'9F            02     FB  139E       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  13A5       	BICB	#BIT1,IOSTAT		; RESET ERROR BIT
                 00000192'EF     95  13AC       	TSTB	UNIT_MASK		; ANY DRIVES TO TEST?
                          03     12  13B2       	BNEQ	90$			; BR IF YES
                          132D   31  13B4       	BRW	ERROR_EXIT		; EXIT
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  34
1.07            MAIN CODE                                                                                                        (2)

                                     13B7       90$:
                                 04  13B7       	RET
                                     13B8       SUCA2:
                               0FFC  13B8       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000329'EF   00000071'EF     DE  13BA       	MOVAL	MT_TABLE,MTBUF_PTR2	; RESET PTR. TO LIMIT SIZE
   00000325'EF   00000329'FF     D0  13C5       	MOVL	@MTBUF_PTR2,LIMIT2	; RESET LIMIT ON # OF ITERATIONS
   00000329'EF            04     C0  13D0       	ADDL2	#4,MTBUF_PTR2		; INC. MT_TABLE POINTER
   0000032D'EF   00000329'FF     D0  13D7       	MOVL	@MTBUF_PTR2,REC_SIZE2	; RESET RECORD SIZE
   0000031D'EF   0000002E'EF     D0  13E2       	MOVL	EXPADDR,DATA_ADR2	; ADDRESS OF WRITE BUFFER
                 00000321'EF     D4  13ED       	CLRL	ITER2			; ZERO ITERATION COUNTER
                 00000331'EF     D4  13F3       	CLRL	SIZE_CTR2		; ZERO SIZE COUNTER
   0000002E'EF   0000FFFC 8F     C1  13F9       	ADDL3 	#MAX_REC*2,EXPADDR,BUF2 ; READ BUFFER FOR THIS UNIT
                 00000319'EF         1404       
   00000319'EF   00007FFE 8F     C0  1409       	ADDL2	#MAX_REC,BUF2
   000003AC'EF   00000319'EF     D0  1414       	MOVL	BUF2,RAB2+RAB$L_UBF	; WHICH RECORD TO READ
   000003A8'EF   0000032D'EF     B0  141F       	MOVW	REC_SIZE2,RAB2+RAB$W_USZ ; # OF BYTES TO READ
                                     142A       SUCB2:
   00000146'EF            04     93  142A       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  1431       	BEQL	10$			; BR IF NO
   00000146'EF            04     8A  1433       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          12E0   31  143A       	BRW	END_MT			; EXIT CLEANLY
                                     143D       10$:
                 00001457'EF     DF  143D       		PUSHAL SUCC2
                 0000156D'EF     DF  1443       		PUSHAL ERR2
                 00000388'EF     DF  1449       		PUSHAL	RAB2
   00000000'9F            03     FB  144F       		CALLS	#$$.TMP1,@#SYS$READ
                                 04  1456       	RET
                                     1457       SUCC2:
                               0FFC  1457       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   0000031D'FF   0000032D'EF     29  1459       	CMPC3	REC_SIZE2,@DATA_ADR2,@BUF2 ; IS THE DATA GOOD?
                 00000319'FF         1464       
                          03     13  1469       	BEQL	10$			; BR IF YES
                          00D7   31  146B       	BRW	60$			; PRINT THE DATA ERROR
                                     146E       10$:
                 00000321'EF     D6  146E       	INCL	ITER2			; INCREMENT THE FILESIZE COUNTER
   00000325'EF   00000321'EF     D1  1474       	CMPL	ITER2,LIMIT2		; DONE WITH THIS FILESIZE?
                          4B     13  147F       	BEQL	40$			; BR IF YES
            59   00007FFE 8F     D0  1481       	MOVL	#MAX_REC,R9		; MAXIMUM RECORD SIZE
   00000331'EF   0000032D'EF     C0  1488       	ADDL2	REC_SIZE2,SIZE_CTR2	; ACCUM. # OF BYTES TO READ
            59   00000331'EF     C2  1493       	SUBL2	SIZE_CTR2,R9		; ENOUGH BYTES TO TEST?
   0000032D'EF            59     D1  149A       	CMPL	R9,REC_SIZE2
                          0D     18  14A1       	BGEQ	20$			; BR IF YES
   0000031D'EF   0000002E'EF     D0  14A3       	MOVL	EXPADDR,DATA_ADR2	; ADDRESS OF DATA
                          0B     11  14AE       	BRB	30$
                                     14B0       20$:
   0000031D'EF   0000032D'EF     C0  14B0       	ADDL2	REC_SIZE2,DATA_ADR2	; INC THROUGH DATA BUFFER
                                     14BB       30$:
            6E            00     2C  14BB       	MOVC5	#0,(SP),#0,REC_SIZE2,@BUF2 ; CLEAR THE READ BUFFER
   0000032D'EF            00         14BE       
                 00000319'FF         14C4       
                          FF5E   31  14C9       	BRW	SUCB2			; DO A READ
                                     14CC       40$:
   00000329'EF            04     C0  14CC       	ADDL2	#4,MTBUF_PTR2		; INCREMENT MT_TABLE POINTER
   00000325'EF   00000329'FF     D0  14D3       	MOVL	@MTBUF_PTR2,LIMIT2	; LIMIT ON THE # OF ITERATIONS
                 00000325'EF     D5  14DE       	TSTL	LIMIT2			; IS THIS UNIT DONE?
                          15     12  14E4       	BNEQ	50$			; BR IF NO
   0000002D'EF            04     88  14E6       	BISB2	#1@2,DONE_FLAG		; SET THE DONE FLAG
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  35
1.07            MAIN CODE                                                                                                        (2)

   00000192'EF   0000002D'EF     91  14ED       	CMPB	DONE_FLAG,UNIT_MASK	; ARE ALL UNITS DONE?
                          6D     13  14F8       	BEQL	70$			; BR IF YES
                                 04  14FA       	RET
                                     14FB       50$:
                 00000321'EF     D4  14FB       	CLRL	ITER2			; ZERO THE ITERATION COUNT
   00000329'EF            04     C0  1501       	ADDL2	#4,MTBUF_PTR2		; INCREMENT MT_TABLE POINTER
   0000032D'EF   00000329'FF     D0  1508       	MOVL	@MTBUF_PTR2,REC_SIZE2	; SET THE RECORD SIZE
   000003A8'EF   0000032D'EF     B0  1513       	MOVW	REC_SIZE2,RAB2+RAB$W_USZ ; # OF BYTES TO READ
   000003AC'EF   00000319'EF     D0  151E       	MOVL	BUF2,RAB2+RAB$L_UBF	; WHICH RECORD TO READ
   0000031D'EF   0000002E'EF     D0  1529       	MOVL	EXPADDR,DATA_ADR2	; READ THE BEGINNING OF THE DATA
            6E            00     2C  1534       	MOVC5	#0,(SP),#0,REC_SIZE2,@BUF2 ; CLEAR THE READ BUFFER
   0000032D'EF            00         1537       
                 00000319'FF         153D       
                          FEE5   31  1542       	BRW	SUCB2			; DO A READ
                                     1545       60$:
   00000191'EF            02     90  1545       	MOVB	#2,UNIT_ERROR		; SET BAD UNIT NUMBER
   00000000'EF            50     3C  154C       	MOVZWL	R0,ARGS			; GET BYTE #
   00000004'EF            61     9A  1553       	MOVZBL	(R1),ARGS+4		; GET GOOD BYTE
   00000008'EF            63     9A  155A       	MOVZBL	(R3),ARGS+8		; GET BAD BYTE
                          EB41   30  1561       	BSBW	DATA_ERROR		; REPORT DATA ERROR
                          FF07   31  1564       	BRW	10$			; CONTINUE
                                     1567       70$:
       EBE3 CF            00     FB  1567       	CALLS	#0,WAKE_UP		; EXIT CLEANLY FROM AST LEVEL
                                 04  156C       	RET
                                     156D       ERR2:
                               0FFC  156D       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000181'EF   00000390'EF     D0  156F       	MOVL	RAB2+RAB$L_STS,RMS_ERR_STS	; SAVE STATUS FIELD
   00000185'EF   00000394'EF     D0  157A       	MOVL	RAB2+RAB$L_STV,RMS_ERR_STV	; SAVE STV FIELD
   00000191'EF            02     90  1585       	MOVB	#2,UNIT_ERROR			; GET UNIT NUMBER
       EA6F CF            00     FB  158C       	CALLS	#0,RMS_ERR			; PRINT THE ERROR
                 00000192'EF     95  1591       	TSTB	UNIT_MASK			; ANY MORE UNITS TO TEST?
                          1D     12  1597       	BNEQ	10$				; BR IF YES
                 00000344'EF     DD  1599       	  	PUSHL	FAB2+FAB$L_STV
                 00000340'EF     DD  159F       	  	PUSHL	FAB2+FAB$L_STS
   00000000'9F            02     FB  15A5       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  15AC       	BICB	#BIT1,IOSTAT			; CLEAR ERROR BIT IN IOSTAT
                          112E   31  15B3       	BRW	ERROR_EXIT			; EXIT
                                     15B6       10$:
                                 04  15B6       	RET
                                     15B7   648 	TAPETEST 3
                                     15B7       SUC3:
                               0FFC  15B7       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000146'EF            04     93  15B9       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  15C0       	BEQL	10$			; BR IF NO
   00000146'EF            04     8A  15C2       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          1151   31  15C9       	BRW	END_MT			; EXIT IF YES
                                     15CC       10$:
                 000003E5'EF     D6  15CC       	INCL	ITER3			; INC. CTR. FOR THIS FILESIZE
   000003E9'EF   000003E5'EF     D1  15D2       	CMPL	ITER3,LIMIT3		; DONE WITH THIS FILESIZE?
                          4D     12  15DD       	BNEQ	30$			; BR IF NO
   000003ED'EF            04     C0  15DF       	ADDL2	#4,MTBUF_PTR3		; INCREMENT MT_TABLE POINTER
   000003E9'EF   000003ED'FF     D0  15E6       	MOVL	@MTBUF_PTR3,LIMIT3	; LIMIT ON # OF ITERATIONS
                 000003E9'EF     D5  15F1       	TSTL	LIMIT3			; IS THE LIMIT 0 (ALL DONE)?
                          03     12  15F7       	BNEQ	20$			; BR IF NO
                          0080   31  15F9       	BRW	50$			; REWIND THE TAPE
                                     15FC       20$:
                 000003E5'EF     D4  15FC       	CLRL	ITER3			; ZERO THE ITERATION COUNT
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  36
1.07            MAIN CODE                                                                                                        (2)

   000003ED'EF            04     C0  1602       	ADDL2	#4,MTBUF_PTR3		; INCREMENT MT_TABLE POINTER
   000003F1'EF   000003ED'FF     D0  1609       	MOVL	@MTBUF_PTR3,REC_SIZE3	; SET THE RECORD SIZE
   0000046E'EF   000003F1'EF     B0  1614       	MOVW	REC_SIZE3,RAB3+RAB$W_RSZ
   00000474'EF   0000002E'EF     D0  161F       	MOVL	EXPADDR,RAB3+RAB$L_RBF	; WRITE BEGINNING OF DATA
                          38     11  162A       	BRB	40$			; DO A WRITE
                                     162C       30$:
            58   00007FFE 8F     D0  162C       	MOVL	#MAX_REC,R8		; GET MAX. RECORD SIZE
   00000474'EF   000003F1'EF     C0  1633       	ADDL2	REC_SIZE3,RAB3+RAB$L_RBF ; GET NEXT DATA IN BUFFER
   000003F5'EF   000003F1'EF     C0  163E       	ADDL2	REC_SIZE3,SIZE_CTR3	; ACCUMULATE # OF BYTES USED
            58   000003F5'EF     C2  1649       	SUBL2	SIZE_CTR3,R8		; DO WE HAVE ENOUGH DATA
   000003F1'EF            58     D1  1650       	CMPL	R8,REC_SIZE3		; LEFT TO WRITE?
                          0B     18  1657       	BGEQ	40$			; BR IF YES
   00000474'EF   0000002E'EF     D0  1659       	MOVL	EXPADDR,RAB3+RAB$L_RBF	; WRITE BEGINNING OF DATA
                                     1664       40$:
                     FF4F CF     DF  1664       		PUSHAL SUC3
                 000018DC'EF     DF  1668       		PUSHAL ERR3
                 0000044C'EF     DF  166E       		PUSHAL	RAB3
   00000000'9F            03     FB  1674       		CALLS	#$$.TMP1,@#SYS$WRITE
                                 04  167B       	RET
                                     167C       50$:
   00000146'EF            04     93  167C       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  1683       	BEQL	60$			; BR IF NO
   00000146'EF            04     8A  1685       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          108E   31  168C       	BRW	END_MT			; EXIT IF YES
                                     168F       60$:
                 000018DC'EF     DF  168F       		PUSHAL ERR3
                 000003FC'EF     DF  1695       		PUSHAL	FAB3
   00000000'9F            02     FB  169B       		CALLS	#$$.TMP1,@#SYS$CLOSE
   00000146'EF            02     93  16A2       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          44     12  16A9       	BNEQ	70$			; BR IF YES
   00000025'EF            03     28  16AB       	MOVC3	#3,CNTRL_NAME,FILE3	; SET THE CONTROLLER NAME
                 00000490'EF         16B2       
                 000018DC'EF     DF  16B7       		PUSHAL ERR3
                 000003FC'EF     DF  16BD       		PUSHAL	FAB3
   00000000'9F            02     FB  16C3       		CALLS	#$$.TMP1,@#SYS$OPEN
   00000146'EF            02     93  16CA       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          1C     12  16D1       	BNEQ	70$			; BR IF YES
                 00001727'EF     DF  16D3       		PUSHAL SUCA3
                 000018DC'EF     DF  16D9       		PUSHAL ERR3
                 0000044C'EF     DF  16DF       		PUSHAL	RAB3
   00000000'9F            03     FB  16E5       		CALLS	#$$.TMP1,@#SYS$CONNECT
                          0037   31  16EC       	BRW	90$
                                     16EF       70$:
            03            00     ED  16EF       	CMPZV	#0,#3,FAB3+FAB$L_STS,#4 ; IS SEVERITY = 4?
            04   00000404'EF         16F2       
                          07     12  16F8       	BNEQ	80$			; BR IF NO
   00000404'EF            02     C2  16FA       	SUBL2	#2,FAB3+FAB$L_STS	; CHANGE SEVERITY TO ERROR
                                     1701       80$:
                 00000408'EF     DD  1701       	  	PUSHL	FAB3+FAB$L_STV
                 00000404'EF     DD  1707       	  	PUSHL	FAB3+FAB$L_STS
   00000000'9F            02     FB  170D       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  1714       	BICB	#BIT1,IOSTAT		; RESET ERROR BIT
                 00000192'EF     95  171B       	TSTB	UNIT_MASK		; ANY DRIVES TO TEST?
                          03     12  1721       	BNEQ	90$			; BR IF YES
                          0FBE   31  1723       	BRW	ERROR_EXIT		; EXIT
                                     1726       90$:
                                 04  1726       	RET
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  37
1.07            MAIN CODE                                                                                                        (2)

                                     1727       SUCA3:
                               0FFC  1727       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   000003ED'EF   00000071'EF     DE  1729       	MOVAL	MT_TABLE,MTBUF_PTR3	; RESET PTR. TO LIMIT SIZE
   000003E9'EF   000003ED'FF     D0  1734       	MOVL	@MTBUF_PTR3,LIMIT3	; RESET LIMIT ON # OF ITERATIONS
   000003ED'EF            04     C0  173F       	ADDL2	#4,MTBUF_PTR3		; INC. MT_TABLE POINTER
   000003F1'EF   000003ED'FF     D0  1746       	MOVL	@MTBUF_PTR3,REC_SIZE3	; RESET RECORD SIZE
   000003E1'EF   0000002E'EF     D0  1751       	MOVL	EXPADDR,DATA_ADR3	; ADDRESS OF WRITE BUFFER
                 000003E5'EF     D4  175C       	CLRL	ITER3			; ZERO ITERATION COUNTER
                 000003F5'EF     D4  1762       	CLRL	SIZE_CTR3		; ZERO SIZE COUNTER
   0000002E'EF   00017FFA 8F     C1  1768       	ADDL3 	#MAX_REC*3,EXPADDR,BUF3 ; READ BUFFER FOR THIS UNIT
                 000003DD'EF         1773       
   000003DD'EF   00007FFE 8F     C0  1778       	ADDL2	#MAX_REC,BUF3
   00000470'EF   000003DD'EF     D0  1783       	MOVL	BUF3,RAB3+RAB$L_UBF	; WHICH RECORD TO READ
   0000046C'EF   000003F1'EF     B0  178E       	MOVW	REC_SIZE3,RAB3+RAB$W_USZ ; # OF BYTES TO READ
                                     1799       SUCB3:
   00000146'EF            04     93  1799       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  17A0       	BEQL	10$			; BR IF NO
   00000146'EF            04     8A  17A2       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          0F71   31  17A9       	BRW	END_MT			; EXIT CLEANLY
                                     17AC       10$:
                 000017C6'EF     DF  17AC       		PUSHAL SUCC3
                 000018DC'EF     DF  17B2       		PUSHAL ERR3
                 0000044C'EF     DF  17B8       		PUSHAL	RAB3
   00000000'9F            03     FB  17BE       		CALLS	#$$.TMP1,@#SYS$READ
                                 04  17C5       	RET
                                     17C6       SUCC3:
                               0FFC  17C6       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   000003E1'FF   000003F1'EF     29  17C8       	CMPC3	REC_SIZE3,@DATA_ADR3,@BUF3 ; IS THE DATA GOOD?
                 000003DD'FF         17D3       
                          03     13  17D8       	BEQL	10$			; BR IF YES
                          00D7   31  17DA       	BRW	60$			; PRINT THE DATA ERROR
                                     17DD       10$:
                 000003E5'EF     D6  17DD       	INCL	ITER3			; INCREMENT THE FILESIZE COUNTER
   000003E9'EF   000003E5'EF     D1  17E3       	CMPL	ITER3,LIMIT3		; DONE WITH THIS FILESIZE?
                          4B     13  17EE       	BEQL	40$			; BR IF YES
            59   00007FFE 8F     D0  17F0       	MOVL	#MAX_REC,R9		; MAXIMUM RECORD SIZE
   000003F5'EF   000003F1'EF     C0  17F7       	ADDL2	REC_SIZE3,SIZE_CTR3	; ACCUM. # OF BYTES TO READ
            59   000003F5'EF     C2  1802       	SUBL2	SIZE_CTR3,R9		; ENOUGH BYTES TO TEST?
   000003F1'EF            59     D1  1809       	CMPL	R9,REC_SIZE3
                          0D     18  1810       	BGEQ	20$			; BR IF YES
   000003E1'EF   0000002E'EF     D0  1812       	MOVL	EXPADDR,DATA_ADR3	; ADDRESS OF DATA
                          0B     11  181D       	BRB	30$
                                     181F       20$:
   000003E1'EF   000003F1'EF     C0  181F       	ADDL2	REC_SIZE3,DATA_ADR3	; INC THROUGH DATA BUFFER
                                     182A       30$:
            6E            00     2C  182A       	MOVC5	#0,(SP),#0,REC_SIZE3,@BUF3 ; CLEAR THE READ BUFFER
   000003F1'EF            00         182D       
                 000003DD'FF         1833       
                          FF5E   31  1838       	BRW	SUCB3			; DO A READ
                                     183B       40$:
   000003ED'EF            04     C0  183B       	ADDL2	#4,MTBUF_PTR3		; INCREMENT MT_TABLE POINTER
   000003E9'EF   000003ED'FF     D0  1842       	MOVL	@MTBUF_PTR3,LIMIT3	; LIMIT ON THE # OF ITERATIONS
                 000003E9'EF     D5  184D       	TSTL	LIMIT3			; IS THIS UNIT DONE?
                          15     12  1853       	BNEQ	50$			; BR IF NO
   0000002D'EF            08     88  1855       	BISB2	#1@3,DONE_FLAG		; SET THE DONE FLAG
   00000192'EF   0000002D'EF     91  185C       	CMPB	DONE_FLAG,UNIT_MASK	; ARE ALL UNITS DONE?
                          6D     13  1867       	BEQL	70$			; BR IF YES
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  38
1.07            MAIN CODE                                                                                                        (2)

                                 04  1869       	RET
                                     186A       50$:
                 000003E5'EF     D4  186A       	CLRL	ITER3			; ZERO THE ITERATION COUNT
   000003ED'EF            04     C0  1870       	ADDL2	#4,MTBUF_PTR3		; INCREMENT MT_TABLE POINTER
   000003F1'EF   000003ED'FF     D0  1877       	MOVL	@MTBUF_PTR3,REC_SIZE3	; SET THE RECORD SIZE
   0000046C'EF   000003F1'EF     B0  1882       	MOVW	REC_SIZE3,RAB3+RAB$W_USZ ; # OF BYTES TO READ
   00000470'EF   000003DD'EF     D0  188D       	MOVL	BUF3,RAB3+RAB$L_UBF	; WHICH RECORD TO READ
   000003E1'EF   0000002E'EF     D0  1898       	MOVL	EXPADDR,DATA_ADR3	; READ THE BEGINNING OF THE DATA
            6E            00     2C  18A3       	MOVC5	#0,(SP),#0,REC_SIZE3,@BUF3 ; CLEAR THE READ BUFFER
   000003F1'EF            00         18A6       
                 000003DD'FF         18AC       
                          FEE5   31  18B1       	BRW	SUCB3			; DO A READ
                                     18B4       60$:
   00000191'EF            03     90  18B4       	MOVB	#3,UNIT_ERROR		; SET BAD UNIT NUMBER
   00000000'EF            50     3C  18BB       	MOVZWL	R0,ARGS			; GET BYTE #
   00000004'EF            61     9A  18C2       	MOVZBL	(R1),ARGS+4		; GET GOOD BYTE
   00000008'EF            63     9A  18C9       	MOVZBL	(R3),ARGS+8		; GET BAD BYTE
                          E7D2   30  18D0       	BSBW	DATA_ERROR		; REPORT DATA ERROR
                          FF07   31  18D3       	BRW	10$			; CONTINUE
                                     18D6       70$:
       E874 CF            00     FB  18D6       	CALLS	#0,WAKE_UP		; EXIT CLEANLY FROM AST LEVEL
                                 04  18DB       	RET
                                     18DC       ERR3:
                               0FFC  18DC       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000181'EF   00000454'EF     D0  18DE       	MOVL	RAB3+RAB$L_STS,RMS_ERR_STS	; SAVE STATUS FIELD
   00000185'EF   00000458'EF     D0  18E9       	MOVL	RAB3+RAB$L_STV,RMS_ERR_STV	; SAVE STV FIELD
   00000191'EF            03     90  18F4       	MOVB	#3,UNIT_ERROR			; GET UNIT NUMBER
       E700 CF            00     FB  18FB       	CALLS	#0,RMS_ERR			; PRINT THE ERROR
                 00000192'EF     95  1900       	TSTB	UNIT_MASK			; ANY MORE UNITS TO TEST?
                          1D     12  1906       	BNEQ	10$				; BR IF YES
                 00000408'EF     DD  1908       	  	PUSHL	FAB3+FAB$L_STV
                 00000404'EF     DD  190E       	  	PUSHL	FAB3+FAB$L_STS
   00000000'9F            02     FB  1914       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  191B       	BICB	#BIT1,IOSTAT			; CLEAR ERROR BIT IN IOSTAT
                          0DBF   31  1922       	BRW	ERROR_EXIT			; EXIT
                                     1925       10$:
                                 04  1925       	RET
                                     1926   649 	TAPETEST 4
                                     1926       SUC4:
                               0FFC  1926       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000146'EF            04     93  1928       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  192F       	BEQL	10$			; BR IF NO
   00000146'EF            04     8A  1931       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          0DE2   31  1938       	BRW	END_MT			; EXIT IF YES
                                     193B       10$:
                 000004A9'EF     D6  193B       	INCL	ITER4			; INC. CTR. FOR THIS FILESIZE
   000004AD'EF   000004A9'EF     D1  1941       	CMPL	ITER4,LIMIT4		; DONE WITH THIS FILESIZE?
                          4D     12  194C       	BNEQ	30$			; BR IF NO
   000004B1'EF            04     C0  194E       	ADDL2	#4,MTBUF_PTR4		; INCREMENT MT_TABLE POINTER
   000004AD'EF   000004B1'FF     D0  1955       	MOVL	@MTBUF_PTR4,LIMIT4	; LIMIT ON # OF ITERATIONS
                 000004AD'EF     D5  1960       	TSTL	LIMIT4			; IS THE LIMIT 0 (ALL DONE)?
                          03     12  1966       	BNEQ	20$			; BR IF NO
                          0080   31  1968       	BRW	50$			; REWIND THE TAPE
                                     196B       20$:
                 000004A9'EF     D4  196B       	CLRL	ITER4			; ZERO THE ITERATION COUNT
   000004B1'EF            04     C0  1971       	ADDL2	#4,MTBUF_PTR4		; INCREMENT MT_TABLE POINTER
   000004B5'EF   000004B1'FF     D0  1978       	MOVL	@MTBUF_PTR4,REC_SIZE4	; SET THE RECORD SIZE
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  39
1.07            MAIN CODE                                                                                                        (2)

   00000532'EF   000004B5'EF     B0  1983       	MOVW	REC_SIZE4,RAB4+RAB$W_RSZ
   00000538'EF   0000002E'EF     D0  198E       	MOVL	EXPADDR,RAB4+RAB$L_RBF	; WRITE BEGINNING OF DATA
                          38     11  1999       	BRB	40$			; DO A WRITE
                                     199B       30$:
            58   00007FFE 8F     D0  199B       	MOVL	#MAX_REC,R8		; GET MAX. RECORD SIZE
   00000538'EF   000004B5'EF     C0  19A2       	ADDL2	REC_SIZE4,RAB4+RAB$L_RBF ; GET NEXT DATA IN BUFFER
   000004B9'EF   000004B5'EF     C0  19AD       	ADDL2	REC_SIZE4,SIZE_CTR4	; ACCUMULATE # OF BYTES USED
            58   000004B9'EF     C2  19B8       	SUBL2	SIZE_CTR4,R8		; DO WE HAVE ENOUGH DATA
   000004B5'EF            58     D1  19BF       	CMPL	R8,REC_SIZE4		; LEFT TO WRITE?
                          0B     18  19C6       	BGEQ	40$			; BR IF YES
   00000538'EF   0000002E'EF     D0  19C8       	MOVL	EXPADDR,RAB4+RAB$L_RBF	; WRITE BEGINNING OF DATA
                                     19D3       40$:
                     FF4F CF     DF  19D3       		PUSHAL SUC4
                 00001C4B'EF     DF  19D7       		PUSHAL ERR4
                 00000510'EF     DF  19DD       		PUSHAL	RAB4
   00000000'9F            03     FB  19E3       		CALLS	#$$.TMP1,@#SYS$WRITE
                                 04  19EA       	RET
                                     19EB       50$:
   00000146'EF            04     93  19EB       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  19F2       	BEQL	60$			; BR IF NO
   00000146'EF            04     8A  19F4       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          0D1F   31  19FB       	BRW	END_MT			; EXIT IF YES
                                     19FE       60$:
                 00001C4B'EF     DF  19FE       		PUSHAL ERR4
                 000004C0'EF     DF  1A04       		PUSHAL	FAB4
   00000000'9F            02     FB  1A0A       		CALLS	#$$.TMP1,@#SYS$CLOSE
   00000146'EF            02     93  1A11       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          44     12  1A18       	BNEQ	70$			; BR IF YES
   00000025'EF            03     28  1A1A       	MOVC3	#3,CNTRL_NAME,FILE4	; SET THE CONTROLLER NAME
                 00000554'EF         1A21       
                 00001C4B'EF     DF  1A26       		PUSHAL ERR4
                 000004C0'EF     DF  1A2C       		PUSHAL	FAB4
   00000000'9F            02     FB  1A32       		CALLS	#$$.TMP1,@#SYS$OPEN
   00000146'EF            02     93  1A39       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          1C     12  1A40       	BNEQ	70$			; BR IF YES
                 00001A96'EF     DF  1A42       		PUSHAL SUCA4
                 00001C4B'EF     DF  1A48       		PUSHAL ERR4
                 00000510'EF     DF  1A4E       		PUSHAL	RAB4
   00000000'9F            03     FB  1A54       		CALLS	#$$.TMP1,@#SYS$CONNECT
                          0037   31  1A5B       	BRW	90$
                                     1A5E       70$:
            03            00     ED  1A5E       	CMPZV	#0,#3,FAB4+FAB$L_STS,#4 ; IS SEVERITY = 4?
            04   000004C8'EF         1A61       
                          07     12  1A67       	BNEQ	80$			; BR IF NO
   000004C8'EF            02     C2  1A69       	SUBL2	#2,FAB4+FAB$L_STS	; CHANGE SEVERITY TO ERROR
                                     1A70       80$:
                 000004CC'EF     DD  1A70       	  	PUSHL	FAB4+FAB$L_STV
                 000004C8'EF     DD  1A76       	  	PUSHL	FAB4+FAB$L_STS
   00000000'9F            02     FB  1A7C       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  1A83       	BICB	#BIT1,IOSTAT		; RESET ERROR BIT
                 00000192'EF     95  1A8A       	TSTB	UNIT_MASK		; ANY DRIVES TO TEST?
                          03     12  1A90       	BNEQ	90$			; BR IF YES
                          0C4F   31  1A92       	BRW	ERROR_EXIT		; EXIT
                                     1A95       90$:
                                 04  1A95       	RET
                                     1A96       SUCA4:
                               0FFC  1A96       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  40
1.07            MAIN CODE                                                                                                        (2)

   000004B1'EF   00000071'EF     DE  1A98       	MOVAL	MT_TABLE,MTBUF_PTR4	; RESET PTR. TO LIMIT SIZE
   000004AD'EF   000004B1'FF     D0  1AA3       	MOVL	@MTBUF_PTR4,LIMIT4	; RESET LIMIT ON # OF ITERATIONS
   000004B1'EF            04     C0  1AAE       	ADDL2	#4,MTBUF_PTR4		; INC. MT_TABLE POINTER
   000004B5'EF   000004B1'FF     D0  1AB5       	MOVL	@MTBUF_PTR4,REC_SIZE4	; RESET RECORD SIZE
   000004A5'EF   0000002E'EF     D0  1AC0       	MOVL	EXPADDR,DATA_ADR4	; ADDRESS OF WRITE BUFFER
                 000004A9'EF     D4  1ACB       	CLRL	ITER4			; ZERO ITERATION COUNTER
                 000004B9'EF     D4  1AD1       	CLRL	SIZE_CTR4		; ZERO SIZE COUNTER
   0000002E'EF   0001FFF8 8F     C1  1AD7       	ADDL3 	#MAX_REC*4,EXPADDR,BUF4 ; READ BUFFER FOR THIS UNIT
                 000004A1'EF         1AE2       
   000004A1'EF   00007FFE 8F     C0  1AE7       	ADDL2	#MAX_REC,BUF4
   00000534'EF   000004A1'EF     D0  1AF2       	MOVL	BUF4,RAB4+RAB$L_UBF	; WHICH RECORD TO READ
   00000530'EF   000004B5'EF     B0  1AFD       	MOVW	REC_SIZE4,RAB4+RAB$W_USZ ; # OF BYTES TO READ
                                     1B08       SUCB4:
   00000146'EF            04     93  1B08       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  1B0F       	BEQL	10$			; BR IF NO
   00000146'EF            04     8A  1B11       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          0C02   31  1B18       	BRW	END_MT			; EXIT CLEANLY
                                     1B1B       10$:
                 00001B35'EF     DF  1B1B       		PUSHAL SUCC4
                 00001C4B'EF     DF  1B21       		PUSHAL ERR4
                 00000510'EF     DF  1B27       		PUSHAL	RAB4
   00000000'9F            03     FB  1B2D       		CALLS	#$$.TMP1,@#SYS$READ
                                 04  1B34       	RET
                                     1B35       SUCC4:
                               0FFC  1B35       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   000004A5'FF   000004B5'EF     29  1B37       	CMPC3	REC_SIZE4,@DATA_ADR4,@BUF4 ; IS THE DATA GOOD?
                 000004A1'FF         1B42       
                          03     13  1B47       	BEQL	10$			; BR IF YES
                          00D7   31  1B49       	BRW	60$			; PRINT THE DATA ERROR
                                     1B4C       10$:
                 000004A9'EF     D6  1B4C       	INCL	ITER4			; INCREMENT THE FILESIZE COUNTER
   000004AD'EF   000004A9'EF     D1  1B52       	CMPL	ITER4,LIMIT4		; DONE WITH THIS FILESIZE?
                          4B     13  1B5D       	BEQL	40$			; BR IF YES
            59   00007FFE 8F     D0  1B5F       	MOVL	#MAX_REC,R9		; MAXIMUM RECORD SIZE
   000004B9'EF   000004B5'EF     C0  1B66       	ADDL2	REC_SIZE4,SIZE_CTR4	; ACCUM. # OF BYTES TO READ
            59   000004B9'EF     C2  1B71       	SUBL2	SIZE_CTR4,R9		; ENOUGH BYTES TO TEST?
   000004B5'EF            59     D1  1B78       	CMPL	R9,REC_SIZE4
                          0D     18  1B7F       	BGEQ	20$			; BR IF YES
   000004A5'EF   0000002E'EF     D0  1B81       	MOVL	EXPADDR,DATA_ADR4	; ADDRESS OF DATA
                          0B     11  1B8C       	BRB	30$
                                     1B8E       20$:
   000004A5'EF   000004B5'EF     C0  1B8E       	ADDL2	REC_SIZE4,DATA_ADR4	; INC THROUGH DATA BUFFER
                                     1B99       30$:
            6E            00     2C  1B99       	MOVC5	#0,(SP),#0,REC_SIZE4,@BUF4 ; CLEAR THE READ BUFFER
   000004B5'EF            00         1B9C       
                 000004A1'FF         1BA2       
                          FF5E   31  1BA7       	BRW	SUCB4			; DO A READ
                                     1BAA       40$:
   000004B1'EF            04     C0  1BAA       	ADDL2	#4,MTBUF_PTR4		; INCREMENT MT_TABLE POINTER
   000004AD'EF   000004B1'FF     D0  1BB1       	MOVL	@MTBUF_PTR4,LIMIT4	; LIMIT ON THE # OF ITERATIONS
                 000004AD'EF     D5  1BBC       	TSTL	LIMIT4			; IS THIS UNIT DONE?
                          15     12  1BC2       	BNEQ	50$			; BR IF NO
   0000002D'EF            10     88  1BC4       	BISB2	#1@4,DONE_FLAG		; SET THE DONE FLAG
   00000192'EF   0000002D'EF     91  1BCB       	CMPB	DONE_FLAG,UNIT_MASK	; ARE ALL UNITS DONE?
                          6D     13  1BD6       	BEQL	70$			; BR IF YES
                                 04  1BD8       	RET
                                     1BD9       50$:
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  41
1.07            MAIN CODE                                                                                                        (2)

                 000004A9'EF     D4  1BD9       	CLRL	ITER4			; ZERO THE ITERATION COUNT
   000004B1'EF            04     C0  1BDF       	ADDL2	#4,MTBUF_PTR4		; INCREMENT MT_TABLE POINTER
   000004B5'EF   000004B1'FF     D0  1BE6       	MOVL	@MTBUF_PTR4,REC_SIZE4	; SET THE RECORD SIZE
   00000530'EF   000004B5'EF     B0  1BF1       	MOVW	REC_SIZE4,RAB4+RAB$W_USZ ; # OF BYTES TO READ
   00000534'EF   000004A1'EF     D0  1BFC       	MOVL	BUF4,RAB4+RAB$L_UBF	; WHICH RECORD TO READ
   000004A5'EF   0000002E'EF     D0  1C07       	MOVL	EXPADDR,DATA_ADR4	; READ THE BEGINNING OF THE DATA
            6E            00     2C  1C12       	MOVC5	#0,(SP),#0,REC_SIZE4,@BUF4 ; CLEAR THE READ BUFFER
   000004B5'EF            00         1C15       
                 000004A1'FF         1C1B       
                          FEE5   31  1C20       	BRW	SUCB4			; DO A READ
                                     1C23       60$:
   00000191'EF            04     90  1C23       	MOVB	#4,UNIT_ERROR		; SET BAD UNIT NUMBER
   00000000'EF            50     3C  1C2A       	MOVZWL	R0,ARGS			; GET BYTE #
   00000004'EF            61     9A  1C31       	MOVZBL	(R1),ARGS+4		; GET GOOD BYTE
   00000008'EF            63     9A  1C38       	MOVZBL	(R3),ARGS+8		; GET BAD BYTE
                          E463   30  1C3F       	BSBW	DATA_ERROR		; REPORT DATA ERROR
                          FF07   31  1C42       	BRW	10$			; CONTINUE
                                     1C45       70$:
       E505 CF            00     FB  1C45       	CALLS	#0,WAKE_UP		; EXIT CLEANLY FROM AST LEVEL
                                 04  1C4A       	RET
                                     1C4B       ERR4:
                               0FFC  1C4B       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000181'EF   00000518'EF     D0  1C4D       	MOVL	RAB4+RAB$L_STS,RMS_ERR_STS	; SAVE STATUS FIELD
   00000185'EF   0000051C'EF     D0  1C58       	MOVL	RAB4+RAB$L_STV,RMS_ERR_STV	; SAVE STV FIELD
   00000191'EF            04     90  1C63       	MOVB	#4,UNIT_ERROR			; GET UNIT NUMBER
       E391 CF            00     FB  1C6A       	CALLS	#0,RMS_ERR			; PRINT THE ERROR
                 00000192'EF     95  1C6F       	TSTB	UNIT_MASK			; ANY MORE UNITS TO TEST?
                          1D     12  1C75       	BNEQ	10$				; BR IF YES
                 000004CC'EF     DD  1C77       	  	PUSHL	FAB4+FAB$L_STV
                 000004C8'EF     DD  1C7D       	  	PUSHL	FAB4+FAB$L_STS
   00000000'9F            02     FB  1C83       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  1C8A       	BICB	#BIT1,IOSTAT			; CLEAR ERROR BIT IN IOSTAT
                          0A50   31  1C91       	BRW	ERROR_EXIT			; EXIT
                                     1C94       10$:
                                 04  1C94       	RET
                                     1C95   650 	TAPETEST 5
                                     1C95       SUC5:
                               0FFC  1C95       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000146'EF            04     93  1C97       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  1C9E       	BEQL	10$			; BR IF NO
   00000146'EF            04     8A  1CA0       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          0A73   31  1CA7       	BRW	END_MT			; EXIT IF YES
                                     1CAA       10$:
                 0000056D'EF     D6  1CAA       	INCL	ITER5			; INC. CTR. FOR THIS FILESIZE
   00000571'EF   0000056D'EF     D1  1CB0       	CMPL	ITER5,LIMIT5		; DONE WITH THIS FILESIZE?
                          4D     12  1CBB       	BNEQ	30$			; BR IF NO
   00000575'EF            04     C0  1CBD       	ADDL2	#4,MTBUF_PTR5		; INCREMENT MT_TABLE POINTER
   00000571'EF   00000575'FF     D0  1CC4       	MOVL	@MTBUF_PTR5,LIMIT5	; LIMIT ON # OF ITERATIONS
                 00000571'EF     D5  1CCF       	TSTL	LIMIT5			; IS THE LIMIT 0 (ALL DONE)?
                          03     12  1CD5       	BNEQ	20$			; BR IF NO
                          0080   31  1CD7       	BRW	50$			; REWIND THE TAPE
                                     1CDA       20$:
                 0000056D'EF     D4  1CDA       	CLRL	ITER5			; ZERO THE ITERATION COUNT
   00000575'EF            04     C0  1CE0       	ADDL2	#4,MTBUF_PTR5		; INCREMENT MT_TABLE POINTER
   00000579'EF   00000575'FF     D0  1CE7       	MOVL	@MTBUF_PTR5,REC_SIZE5	; SET THE RECORD SIZE
   000005F6'EF   00000579'EF     B0  1CF2       	MOVW	REC_SIZE5,RAB5+RAB$W_RSZ
   000005FC'EF   0000002E'EF     D0  1CFD       	MOVL	EXPADDR,RAB5+RAB$L_RBF	; WRITE BEGINNING OF DATA
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  42
1.07            MAIN CODE                                                                                                        (2)

                          38     11  1D08       	BRB	40$			; DO A WRITE
                                     1D0A       30$:
            58   00007FFE 8F     D0  1D0A       	MOVL	#MAX_REC,R8		; GET MAX. RECORD SIZE
   000005FC'EF   00000579'EF     C0  1D11       	ADDL2	REC_SIZE5,RAB5+RAB$L_RBF ; GET NEXT DATA IN BUFFER
   0000057D'EF   00000579'EF     C0  1D1C       	ADDL2	REC_SIZE5,SIZE_CTR5	; ACCUMULATE # OF BYTES USED
            58   0000057D'EF     C2  1D27       	SUBL2	SIZE_CTR5,R8		; DO WE HAVE ENOUGH DATA
   00000579'EF            58     D1  1D2E       	CMPL	R8,REC_SIZE5		; LEFT TO WRITE?
                          0B     18  1D35       	BGEQ	40$			; BR IF YES
   000005FC'EF   0000002E'EF     D0  1D37       	MOVL	EXPADDR,RAB5+RAB$L_RBF	; WRITE BEGINNING OF DATA
                                     1D42       40$:
                     FF4F CF     DF  1D42       		PUSHAL SUC5
                 00001FBA'EF     DF  1D46       		PUSHAL ERR5
                 000005D4'EF     DF  1D4C       		PUSHAL	RAB5
   00000000'9F            03     FB  1D52       		CALLS	#$$.TMP1,@#SYS$WRITE
                                 04  1D59       	RET
                                     1D5A       50$:
   00000146'EF            04     93  1D5A       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  1D61       	BEQL	60$			; BR IF NO
   00000146'EF            04     8A  1D63       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          09B0   31  1D6A       	BRW	END_MT			; EXIT IF YES
                                     1D6D       60$:
                 00001FBA'EF     DF  1D6D       		PUSHAL ERR5
                 00000584'EF     DF  1D73       		PUSHAL	FAB5
   00000000'9F            02     FB  1D79       		CALLS	#$$.TMP1,@#SYS$CLOSE
   00000146'EF            02     93  1D80       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          44     12  1D87       	BNEQ	70$			; BR IF YES
   00000025'EF            03     28  1D89       	MOVC3	#3,CNTRL_NAME,FILE5	; SET THE CONTROLLER NAME
                 00000618'EF         1D90       
                 00001FBA'EF     DF  1D95       		PUSHAL ERR5
                 00000584'EF     DF  1D9B       		PUSHAL	FAB5
   00000000'9F            02     FB  1DA1       		CALLS	#$$.TMP1,@#SYS$OPEN
   00000146'EF            02     93  1DA8       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          1C     12  1DAF       	BNEQ	70$			; BR IF YES
                 00001E05'EF     DF  1DB1       		PUSHAL SUCA5
                 00001FBA'EF     DF  1DB7       		PUSHAL ERR5
                 000005D4'EF     DF  1DBD       		PUSHAL	RAB5
   00000000'9F            03     FB  1DC3       		CALLS	#$$.TMP1,@#SYS$CONNECT
                          0037   31  1DCA       	BRW	90$
                                     1DCD       70$:
            03            00     ED  1DCD       	CMPZV	#0,#3,FAB5+FAB$L_STS,#4 ; IS SEVERITY = 4?
            04   0000058C'EF         1DD0       
                          07     12  1DD6       	BNEQ	80$			; BR IF NO
   0000058C'EF            02     C2  1DD8       	SUBL2	#2,FAB5+FAB$L_STS	; CHANGE SEVERITY TO ERROR
                                     1DDF       80$:
                 00000590'EF     DD  1DDF       	  	PUSHL	FAB5+FAB$L_STV
                 0000058C'EF     DD  1DE5       	  	PUSHL	FAB5+FAB$L_STS
   00000000'9F            02     FB  1DEB       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  1DF2       	BICB	#BIT1,IOSTAT		; RESET ERROR BIT
                 00000192'EF     95  1DF9       	TSTB	UNIT_MASK		; ANY DRIVES TO TEST?
                          03     12  1DFF       	BNEQ	90$			; BR IF YES
                          08E0   31  1E01       	BRW	ERROR_EXIT		; EXIT
                                     1E04       90$:
                                 04  1E04       	RET
                                     1E05       SUCA5:
                               0FFC  1E05       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000575'EF   00000071'EF     DE  1E07       	MOVAL	MT_TABLE,MTBUF_PTR5	; RESET PTR. TO LIMIT SIZE
   00000571'EF   00000575'FF     D0  1E12       	MOVL	@MTBUF_PTR5,LIMIT5	; RESET LIMIT ON # OF ITERATIONS
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  43
1.07            MAIN CODE                                                                                                        (2)

   00000575'EF            04     C0  1E1D       	ADDL2	#4,MTBUF_PTR5		; INC. MT_TABLE POINTER
   00000579'EF   00000575'FF     D0  1E24       	MOVL	@MTBUF_PTR5,REC_SIZE5	; RESET RECORD SIZE
   00000569'EF   0000002E'EF     D0  1E2F       	MOVL	EXPADDR,DATA_ADR5	; ADDRESS OF WRITE BUFFER
                 0000056D'EF     D4  1E3A       	CLRL	ITER5			; ZERO ITERATION COUNTER
                 0000057D'EF     D4  1E40       	CLRL	SIZE_CTR5		; ZERO SIZE COUNTER
   0000002E'EF   00027FF6 8F     C1  1E46       	ADDL3 	#MAX_REC*5,EXPADDR,BUF5 ; READ BUFFER FOR THIS UNIT
                 00000565'EF         1E51       
   00000565'EF   00007FFE 8F     C0  1E56       	ADDL2	#MAX_REC,BUF5
   000005F8'EF   00000565'EF     D0  1E61       	MOVL	BUF5,RAB5+RAB$L_UBF	; WHICH RECORD TO READ
   000005F4'EF   00000579'EF     B0  1E6C       	MOVW	REC_SIZE5,RAB5+RAB$W_USZ ; # OF BYTES TO READ
                                     1E77       SUCB5:
   00000146'EF            04     93  1E77       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  1E7E       	BEQL	10$			; BR IF NO
   00000146'EF            04     8A  1E80       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          0893   31  1E87       	BRW	END_MT			; EXIT CLEANLY
                                     1E8A       10$:
                 00001EA4'EF     DF  1E8A       		PUSHAL SUCC5
                 00001FBA'EF     DF  1E90       		PUSHAL ERR5
                 000005D4'EF     DF  1E96       		PUSHAL	RAB5
   00000000'9F            03     FB  1E9C       		CALLS	#$$.TMP1,@#SYS$READ
                                 04  1EA3       	RET
                                     1EA4       SUCC5:
                               0FFC  1EA4       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000569'FF   00000579'EF     29  1EA6       	CMPC3	REC_SIZE5,@DATA_ADR5,@BUF5 ; IS THE DATA GOOD?
                 00000565'FF         1EB1       
                          03     13  1EB6       	BEQL	10$			; BR IF YES
                          00D7   31  1EB8       	BRW	60$			; PRINT THE DATA ERROR
                                     1EBB       10$:
                 0000056D'EF     D6  1EBB       	INCL	ITER5			; INCREMENT THE FILESIZE COUNTER
   00000571'EF   0000056D'EF     D1  1EC1       	CMPL	ITER5,LIMIT5		; DONE WITH THIS FILESIZE?
                          4B     13  1ECC       	BEQL	40$			; BR IF YES
            59   00007FFE 8F     D0  1ECE       	MOVL	#MAX_REC,R9		; MAXIMUM RECORD SIZE
   0000057D'EF   00000579'EF     C0  1ED5       	ADDL2	REC_SIZE5,SIZE_CTR5	; ACCUM. # OF BYTES TO READ
            59   0000057D'EF     C2  1EE0       	SUBL2	SIZE_CTR5,R9		; ENOUGH BYTES TO TEST?
   00000579'EF            59     D1  1EE7       	CMPL	R9,REC_SIZE5
                          0D     18  1EEE       	BGEQ	20$			; BR IF YES
   00000569'EF   0000002E'EF     D0  1EF0       	MOVL	EXPADDR,DATA_ADR5	; ADDRESS OF DATA
                          0B     11  1EFB       	BRB	30$
                                     1EFD       20$:
   00000569'EF   00000579'EF     C0  1EFD       	ADDL2	REC_SIZE5,DATA_ADR5	; INC THROUGH DATA BUFFER
                                     1F08       30$:
            6E            00     2C  1F08       	MOVC5	#0,(SP),#0,REC_SIZE5,@BUF5 ; CLEAR THE READ BUFFER
   00000579'EF            00         1F0B       
                 00000565'FF         1F11       
                          FF5E   31  1F16       	BRW	SUCB5			; DO A READ
                                     1F19       40$:
   00000575'EF            04     C0  1F19       	ADDL2	#4,MTBUF_PTR5		; INCREMENT MT_TABLE POINTER
   00000571'EF   00000575'FF     D0  1F20       	MOVL	@MTBUF_PTR5,LIMIT5	; LIMIT ON THE # OF ITERATIONS
                 00000571'EF     D5  1F2B       	TSTL	LIMIT5			; IS THIS UNIT DONE?
                          15     12  1F31       	BNEQ	50$			; BR IF NO
   0000002D'EF            20     88  1F33       	BISB2	#1@5,DONE_FLAG		; SET THE DONE FLAG
   00000192'EF   0000002D'EF     91  1F3A       	CMPB	DONE_FLAG,UNIT_MASK	; ARE ALL UNITS DONE?
                          6D     13  1F45       	BEQL	70$			; BR IF YES
                                 04  1F47       	RET
                                     1F48       50$:
                 0000056D'EF     D4  1F48       	CLRL	ITER5			; ZERO THE ITERATION COUNT
   00000575'EF            04     C0  1F4E       	ADDL2	#4,MTBUF_PTR5		; INCREMENT MT_TABLE POINTER
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  44
1.07            MAIN CODE                                                                                                        (2)

   00000579'EF   00000575'FF     D0  1F55       	MOVL	@MTBUF_PTR5,REC_SIZE5	; SET THE RECORD SIZE
   000005F4'EF   00000579'EF     B0  1F60       	MOVW	REC_SIZE5,RAB5+RAB$W_USZ ; # OF BYTES TO READ
   000005F8'EF   00000565'EF     D0  1F6B       	MOVL	BUF5,RAB5+RAB$L_UBF	; WHICH RECORD TO READ
   00000569'EF   0000002E'EF     D0  1F76       	MOVL	EXPADDR,DATA_ADR5	; READ THE BEGINNING OF THE DATA
            6E            00     2C  1F81       	MOVC5	#0,(SP),#0,REC_SIZE5,@BUF5 ; CLEAR THE READ BUFFER
   00000579'EF            00         1F84       
                 00000565'FF         1F8A       
                          FEE5   31  1F8F       	BRW	SUCB5			; DO A READ
                                     1F92       60$:
   00000191'EF            05     90  1F92       	MOVB	#5,UNIT_ERROR		; SET BAD UNIT NUMBER
   00000000'EF            50     3C  1F99       	MOVZWL	R0,ARGS			; GET BYTE #
   00000004'EF            61     9A  1FA0       	MOVZBL	(R1),ARGS+4		; GET GOOD BYTE
   00000008'EF            63     9A  1FA7       	MOVZBL	(R3),ARGS+8		; GET BAD BYTE
                          E0F4   30  1FAE       	BSBW	DATA_ERROR		; REPORT DATA ERROR
                          FF07   31  1FB1       	BRW	10$			; CONTINUE
                                     1FB4       70$:
       E196 CF            00     FB  1FB4       	CALLS	#0,WAKE_UP		; EXIT CLEANLY FROM AST LEVEL
                                 04  1FB9       	RET
                                     1FBA       ERR5:
                               0FFC  1FBA       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000181'EF   000005DC'EF     D0  1FBC       	MOVL	RAB5+RAB$L_STS,RMS_ERR_STS	; SAVE STATUS FIELD
   00000185'EF   000005E0'EF     D0  1FC7       	MOVL	RAB5+RAB$L_STV,RMS_ERR_STV	; SAVE STV FIELD
   00000191'EF            05     90  1FD2       	MOVB	#5,UNIT_ERROR			; GET UNIT NUMBER
       E022 CF            00     FB  1FD9       	CALLS	#0,RMS_ERR			; PRINT THE ERROR
                 00000192'EF     95  1FDE       	TSTB	UNIT_MASK			; ANY MORE UNITS TO TEST?
                          1D     12  1FE4       	BNEQ	10$				; BR IF YES
                 00000590'EF     DD  1FE6       	  	PUSHL	FAB5+FAB$L_STV
                 0000058C'EF     DD  1FEC       	  	PUSHL	FAB5+FAB$L_STS
   00000000'9F            02     FB  1FF2       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  1FF9       	BICB	#BIT1,IOSTAT			; CLEAR ERROR BIT IN IOSTAT
                          06E1   31  2000       	BRW	ERROR_EXIT			; EXIT
                                     2003       10$:
                                 04  2003       	RET
                                     2004   651 	TAPETEST 6
                                     2004       SUC6:
                               0FFC  2004       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000146'EF            04     93  2006       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  200D       	BEQL	10$			; BR IF NO
   00000146'EF            04     8A  200F       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          0704   31  2016       	BRW	END_MT			; EXIT IF YES
                                     2019       10$:
                 00000631'EF     D6  2019       	INCL	ITER6			; INC. CTR. FOR THIS FILESIZE
   00000635'EF   00000631'EF     D1  201F       	CMPL	ITER6,LIMIT6		; DONE WITH THIS FILESIZE?
                          4D     12  202A       	BNEQ	30$			; BR IF NO
   00000639'EF            04     C0  202C       	ADDL2	#4,MTBUF_PTR6		; INCREMENT MT_TABLE POINTER
   00000635'EF   00000639'FF     D0  2033       	MOVL	@MTBUF_PTR6,LIMIT6	; LIMIT ON # OF ITERATIONS
                 00000635'EF     D5  203E       	TSTL	LIMIT6			; IS THE LIMIT 0 (ALL DONE)?
                          03     12  2044       	BNEQ	20$			; BR IF NO
                          0080   31  2046       	BRW	50$			; REWIND THE TAPE
                                     2049       20$:
                 00000631'EF     D4  2049       	CLRL	ITER6			; ZERO THE ITERATION COUNT
   00000639'EF            04     C0  204F       	ADDL2	#4,MTBUF_PTR6		; INCREMENT MT_TABLE POINTER
   0000063D'EF   00000639'FF     D0  2056       	MOVL	@MTBUF_PTR6,REC_SIZE6	; SET THE RECORD SIZE
   000006BA'EF   0000063D'EF     B0  2061       	MOVW	REC_SIZE6,RAB6+RAB$W_RSZ
   000006C0'EF   0000002E'EF     D0  206C       	MOVL	EXPADDR,RAB6+RAB$L_RBF	; WRITE BEGINNING OF DATA
                          38     11  2077       	BRB	40$			; DO A WRITE
                                     2079       30$:
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  45
1.07            MAIN CODE                                                                                                        (2)

            58   00007FFE 8F     D0  2079       	MOVL	#MAX_REC,R8		; GET MAX. RECORD SIZE
   000006C0'EF   0000063D'EF     C0  2080       	ADDL2	REC_SIZE6,RAB6+RAB$L_RBF ; GET NEXT DATA IN BUFFER
   00000641'EF   0000063D'EF     C0  208B       	ADDL2	REC_SIZE6,SIZE_CTR6	; ACCUMULATE # OF BYTES USED
            58   00000641'EF     C2  2096       	SUBL2	SIZE_CTR6,R8		; DO WE HAVE ENOUGH DATA
   0000063D'EF            58     D1  209D       	CMPL	R8,REC_SIZE6		; LEFT TO WRITE?
                          0B     18  20A4       	BGEQ	40$			; BR IF YES
   000006C0'EF   0000002E'EF     D0  20A6       	MOVL	EXPADDR,RAB6+RAB$L_RBF	; WRITE BEGINNING OF DATA
                                     20B1       40$:
                     FF4F CF     DF  20B1       		PUSHAL SUC6
                 0000232A'EF     DF  20B5       		PUSHAL ERR6
                 00000698'EF     DF  20BB       		PUSHAL	RAB6
   00000000'9F            03     FB  20C1       		CALLS	#$$.TMP1,@#SYS$WRITE
                                 04  20C8       	RET
                                     20C9       50$:
   00000146'EF            04     93  20C9       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  20D0       	BEQL	60$			; BR IF NO
   00000146'EF            04     8A  20D2       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          0641   31  20D9       	BRW	END_MT			; EXIT IF YES
                                     20DC       60$:
                 0000232A'EF     DF  20DC       		PUSHAL ERR6
                 00000648'EF     DF  20E2       		PUSHAL	FAB6
   00000000'9F            02     FB  20E8       		CALLS	#$$.TMP1,@#SYS$CLOSE
   00000146'EF            02     93  20EF       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          44     12  20F6       	BNEQ	70$			; BR IF YES
   00000025'EF            03     28  20F8       	MOVC3	#3,CNTRL_NAME,FILE6	; SET THE CONTROLLER NAME
                 000006DC'EF         20FF       
                 0000232A'EF     DF  2104       		PUSHAL ERR6
                 00000648'EF     DF  210A       		PUSHAL	FAB6
   00000000'9F            02     FB  2110       		CALLS	#$$.TMP1,@#SYS$OPEN
   00000146'EF            02     93  2117       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          1C     12  211E       	BNEQ	70$			; BR IF YES
                 00002174'EF     DF  2120       		PUSHAL SUCA6
                 0000232A'EF     DF  2126       		PUSHAL ERR6
                 00000698'EF     DF  212C       		PUSHAL	RAB6
   00000000'9F            03     FB  2132       		CALLS	#$$.TMP1,@#SYS$CONNECT
                          0037   31  2139       	BRW	90$
                                     213C       70$:
            03            00     ED  213C       	CMPZV	#0,#3,FAB6+FAB$L_STS,#4 ; IS SEVERITY = 4?
            04   00000650'EF         213F       
                          07     12  2145       	BNEQ	80$			; BR IF NO
   00000650'EF            02     C2  2147       	SUBL2	#2,FAB6+FAB$L_STS	; CHANGE SEVERITY TO ERROR
                                     214E       80$:
                 00000654'EF     DD  214E       	  	PUSHL	FAB6+FAB$L_STV
                 00000650'EF     DD  2154       	  	PUSHL	FAB6+FAB$L_STS
   00000000'9F            02     FB  215A       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  2161       	BICB	#BIT1,IOSTAT		; RESET ERROR BIT
                 00000192'EF     95  2168       	TSTB	UNIT_MASK		; ANY DRIVES TO TEST?
                          03     12  216E       	BNEQ	90$			; BR IF YES
                          0571   31  2170       	BRW	ERROR_EXIT		; EXIT
                                     2173       90$:
                                 04  2173       	RET
                                     2174       SUCA6:
                               0FFC  2174       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000639'EF   00000071'EF     DE  2176       	MOVAL	MT_TABLE,MTBUF_PTR6	; RESET PTR. TO LIMIT SIZE
   00000635'EF   00000639'FF     D0  2181       	MOVL	@MTBUF_PTR6,LIMIT6	; RESET LIMIT ON # OF ITERATIONS
   00000639'EF            04     C0  218C       	ADDL2	#4,MTBUF_PTR6		; INC. MT_TABLE POINTER
   0000063D'EF   00000639'FF     D0  2193       	MOVL	@MTBUF_PTR6,REC_SIZE6	; RESET RECORD SIZE
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  46
1.07            MAIN CODE                                                                                                        (2)

   0000062D'EF   0000002E'EF     D0  219E       	MOVL	EXPADDR,DATA_ADR6	; ADDRESS OF WRITE BUFFER
                 00000631'EF     D4  21A9       	CLRL	ITER6			; ZERO ITERATION COUNTER
                 00000641'EF     D4  21AF       	CLRL	SIZE_CTR6		; ZERO SIZE COUNTER
   0000002E'EF   0002FFF4 8F     C1  21B5       	ADDL3 	#MAX_REC*6,EXPADDR,BUF6 ; READ BUFFER FOR THIS UNIT
                 00000629'EF         21C0       
   00000629'EF   00007FFE 8F     C0  21C5       	ADDL2	#MAX_REC,BUF6
   000006BC'EF   00000629'EF     D0  21D0       	MOVL	BUF6,RAB6+RAB$L_UBF	; WHICH RECORD TO READ
   000006B8'EF   0000063D'EF     B0  21DB       	MOVW	REC_SIZE6,RAB6+RAB$W_USZ ; # OF BYTES TO READ
                                     21E6       SUCB6:
   00000146'EF            04     93  21E6       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  21ED       	BEQL	10$			; BR IF NO
   00000146'EF            04     8A  21EF       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          0524   31  21F6       	BRW	END_MT			; EXIT CLEANLY
                                     21F9       10$:
                 00002213'EF     DF  21F9       		PUSHAL SUCC6
                 0000232A'EF     DF  21FF       		PUSHAL ERR6
                 00000698'EF     DF  2205       		PUSHAL	RAB6
   00000000'9F            03     FB  220B       		CALLS	#$$.TMP1,@#SYS$READ
                                 04  2212       	RET
                                     2213       SUCC6:
                               0FFC  2213       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   0000062D'FF   0000063D'EF     29  2215       	CMPC3	REC_SIZE6,@DATA_ADR6,@BUF6 ; IS THE DATA GOOD?
                 00000629'FF         2220       
                          03     13  2225       	BEQL	10$			; BR IF YES
                          00D8   31  2227       	BRW	60$			; PRINT THE DATA ERROR
                                     222A       10$:
                 00000631'EF     D6  222A       	INCL	ITER6			; INCREMENT THE FILESIZE COUNTER
   00000635'EF   00000631'EF     D1  2230       	CMPL	ITER6,LIMIT6		; DONE WITH THIS FILESIZE?
                          4B     13  223B       	BEQL	40$			; BR IF YES
            59   00007FFE 8F     D0  223D       	MOVL	#MAX_REC,R9		; MAXIMUM RECORD SIZE
   00000641'EF   0000063D'EF     C0  2244       	ADDL2	REC_SIZE6,SIZE_CTR6	; ACCUM. # OF BYTES TO READ
            59   00000641'EF     C2  224F       	SUBL2	SIZE_CTR6,R9		; ENOUGH BYTES TO TEST?
   0000063D'EF            59     D1  2256       	CMPL	R9,REC_SIZE6
                          0D     18  225D       	BGEQ	20$			; BR IF YES
   0000062D'EF   0000002E'EF     D0  225F       	MOVL	EXPADDR,DATA_ADR6	; ADDRESS OF DATA
                          0B     11  226A       	BRB	30$
                                     226C       20$:
   0000062D'EF   0000063D'EF     C0  226C       	ADDL2	REC_SIZE6,DATA_ADR6	; INC THROUGH DATA BUFFER
                                     2277       30$:
            6E            00     2C  2277       	MOVC5	#0,(SP),#0,REC_SIZE6,@BUF6 ; CLEAR THE READ BUFFER
   0000063D'EF            00         227A       
                 00000629'FF         2280       
                          FF5E   31  2285       	BRW	SUCB6			; DO A READ
                                     2288       40$:
   00000639'EF            04     C0  2288       	ADDL2	#4,MTBUF_PTR6		; INCREMENT MT_TABLE POINTER
   00000635'EF   00000639'FF     D0  228F       	MOVL	@MTBUF_PTR6,LIMIT6	; LIMIT ON THE # OF ITERATIONS
                 00000635'EF     D5  229A       	TSTL	LIMIT6			; IS THIS UNIT DONE?
                          16     12  22A0       	BNEQ	50$			; BR IF NO
   0000002D'EF         40 8F     88  22A2       	BISB2	#1@6,DONE_FLAG		; SET THE DONE FLAG
   00000192'EF   0000002D'EF     91  22AA       	CMPB	DONE_FLAG,UNIT_MASK	; ARE ALL UNITS DONE?
                          6D     13  22B5       	BEQL	70$			; BR IF YES
                                 04  22B7       	RET
                                     22B8       50$:
                 00000631'EF     D4  22B8       	CLRL	ITER6			; ZERO THE ITERATION COUNT
   00000639'EF            04     C0  22BE       	ADDL2	#4,MTBUF_PTR6		; INCREMENT MT_TABLE POINTER
   0000063D'EF   00000639'FF     D0  22C5       	MOVL	@MTBUF_PTR6,REC_SIZE6	; SET THE RECORD SIZE
   000006B8'EF   0000063D'EF     B0  22D0       	MOVW	REC_SIZE6,RAB6+RAB$W_USZ ; # OF BYTES TO READ
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  47
1.07            MAIN CODE                                                                                                        (2)

   000006BC'EF   00000629'EF     D0  22DB       	MOVL	BUF6,RAB6+RAB$L_UBF	; WHICH RECORD TO READ
   0000062D'EF   0000002E'EF     D0  22E6       	MOVL	EXPADDR,DATA_ADR6	; READ THE BEGINNING OF THE DATA
            6E            00     2C  22F1       	MOVC5	#0,(SP),#0,REC_SIZE6,@BUF6 ; CLEAR THE READ BUFFER
   0000063D'EF            00         22F4       
                 00000629'FF         22FA       
                          FEE4   31  22FF       	BRW	SUCB6			; DO A READ
                                     2302       60$:
   00000191'EF            06     90  2302       	MOVB	#6,UNIT_ERROR		; SET BAD UNIT NUMBER
   00000000'EF            50     3C  2309       	MOVZWL	R0,ARGS			; GET BYTE #
   00000004'EF            61     9A  2310       	MOVZBL	(R1),ARGS+4		; GET GOOD BYTE
   00000008'EF            63     9A  2317       	MOVZBL	(R3),ARGS+8		; GET BAD BYTE
                          DD84   30  231E       	BSBW	DATA_ERROR		; REPORT DATA ERROR
                          FF06   31  2321       	BRW	10$			; CONTINUE
                                     2324       70$:
       DE26 CF            00     FB  2324       	CALLS	#0,WAKE_UP		; EXIT CLEANLY FROM AST LEVEL
                                 04  2329       	RET
                                     232A       ERR6:
                               0FFC  232A       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000181'EF   000006A0'EF     D0  232C       	MOVL	RAB6+RAB$L_STS,RMS_ERR_STS	; SAVE STATUS FIELD
   00000185'EF   000006A4'EF     D0  2337       	MOVL	RAB6+RAB$L_STV,RMS_ERR_STV	; SAVE STV FIELD
   00000191'EF            06     90  2342       	MOVB	#6,UNIT_ERROR			; GET UNIT NUMBER
       DCB2 CF            00     FB  2349       	CALLS	#0,RMS_ERR			; PRINT THE ERROR
                 00000192'EF     95  234E       	TSTB	UNIT_MASK			; ANY MORE UNITS TO TEST?
                          1D     12  2354       	BNEQ	10$				; BR IF YES
                 00000654'EF     DD  2356       	  	PUSHL	FAB6+FAB$L_STV
                 00000650'EF     DD  235C       	  	PUSHL	FAB6+FAB$L_STS
   00000000'9F            02     FB  2362       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  2369       	BICB	#BIT1,IOSTAT			; CLEAR ERROR BIT IN IOSTAT
                          0371   31  2370       	BRW	ERROR_EXIT			; EXIT
                                     2373       10$:
                                 04  2373       	RET
                                     2374   652 	TAPETEST 7
                                     2374       SUC7:
                               0FFC  2374       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000146'EF            04     93  2376       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  237D       	BEQL	10$			; BR IF NO
   00000146'EF            04     8A  237F       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          0394   31  2386       	BRW	END_MT			; EXIT IF YES
                                     2389       10$:
                 000006F5'EF     D6  2389       	INCL	ITER7			; INC. CTR. FOR THIS FILESIZE
   000006F9'EF   000006F5'EF     D1  238F       	CMPL	ITER7,LIMIT7		; DONE WITH THIS FILESIZE?
                          4D     12  239A       	BNEQ	30$			; BR IF NO
   000006FD'EF            04     C0  239C       	ADDL2	#4,MTBUF_PTR7		; INCREMENT MT_TABLE POINTER
   000006F9'EF   000006FD'FF     D0  23A3       	MOVL	@MTBUF_PTR7,LIMIT7	; LIMIT ON # OF ITERATIONS
                 000006F9'EF     D5  23AE       	TSTL	LIMIT7			; IS THE LIMIT 0 (ALL DONE)?
                          03     12  23B4       	BNEQ	20$			; BR IF NO
                          0080   31  23B6       	BRW	50$			; REWIND THE TAPE
                                     23B9       20$:
                 000006F5'EF     D4  23B9       	CLRL	ITER7			; ZERO THE ITERATION COUNT
   000006FD'EF            04     C0  23BF       	ADDL2	#4,MTBUF_PTR7		; INCREMENT MT_TABLE POINTER
   00000701'EF   000006FD'FF     D0  23C6       	MOVL	@MTBUF_PTR7,REC_SIZE7	; SET THE RECORD SIZE
   0000077E'EF   00000701'EF     B0  23D1       	MOVW	REC_SIZE7,RAB7+RAB$W_RSZ
   00000784'EF   0000002E'EF     D0  23DC       	MOVL	EXPADDR,RAB7+RAB$L_RBF	; WRITE BEGINNING OF DATA
                          38     11  23E7       	BRB	40$			; DO A WRITE
                                     23E9       30$:
            58   00007FFE 8F     D0  23E9       	MOVL	#MAX_REC,R8		; GET MAX. RECORD SIZE
   00000784'EF   00000701'EF     C0  23F0       	ADDL2	REC_SIZE7,RAB7+RAB$L_RBF ; GET NEXT DATA IN BUFFER
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  48
1.07            MAIN CODE                                                                                                        (2)

   00000705'EF   00000701'EF     C0  23FB       	ADDL2	REC_SIZE7,SIZE_CTR7	; ACCUMULATE # OF BYTES USED
            58   00000705'EF     C2  2406       	SUBL2	SIZE_CTR7,R8		; DO WE HAVE ENOUGH DATA
   00000701'EF            58     D1  240D       	CMPL	R8,REC_SIZE7		; LEFT TO WRITE?
                          0B     18  2414       	BGEQ	40$			; BR IF YES
   00000784'EF   0000002E'EF     D0  2416       	MOVL	EXPADDR,RAB7+RAB$L_RBF	; WRITE BEGINNING OF DATA
                                     2421       40$:
                     FF4F CF     DF  2421       		PUSHAL SUC7
                 0000269A'EF     DF  2425       		PUSHAL ERR7
                 0000075C'EF     DF  242B       		PUSHAL	RAB7
   00000000'9F            03     FB  2431       		CALLS	#$$.TMP1,@#SYS$WRITE
                                 04  2438       	RET
                                     2439       50$:
   00000146'EF            04     93  2439       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  2440       	BEQL	60$			; BR IF NO
   00000146'EF            04     8A  2442       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          02D1   31  2449       	BRW	END_MT			; EXIT IF YES
                                     244C       60$:
                 0000269A'EF     DF  244C       		PUSHAL ERR7
                 0000070C'EF     DF  2452       		PUSHAL	FAB7
   00000000'9F            02     FB  2458       		CALLS	#$$.TMP1,@#SYS$CLOSE
   00000146'EF            02     93  245F       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          44     12  2466       	BNEQ	70$			; BR IF YES
   00000025'EF            03     28  2468       	MOVC3	#3,CNTRL_NAME,FILE7	; SET THE CONTROLLER NAME
                 000007A0'EF         246F       
                 0000269A'EF     DF  2474       		PUSHAL ERR7
                 0000070C'EF     DF  247A       		PUSHAL	FAB7
   00000000'9F            02     FB  2480       		CALLS	#$$.TMP1,@#SYS$OPEN
   00000146'EF            02     93  2487       	BITB	#BIT1,IOSTAT		; RMS FILE ERROR?
                          1C     12  248E       	BNEQ	70$			; BR IF YES
                 000024E4'EF     DF  2490       		PUSHAL SUCA7
                 0000269A'EF     DF  2496       		PUSHAL ERR7
                 0000075C'EF     DF  249C       		PUSHAL	RAB7
   00000000'9F            03     FB  24A2       		CALLS	#$$.TMP1,@#SYS$CONNECT
                          0037   31  24A9       	BRW	90$
                                     24AC       70$:
            03            00     ED  24AC       	CMPZV	#0,#3,FAB7+FAB$L_STS,#4 ; IS SEVERITY = 4?
            04   00000714'EF         24AF       
                          07     12  24B5       	BNEQ	80$			; BR IF NO
   00000714'EF            02     C2  24B7       	SUBL2	#2,FAB7+FAB$L_STS	; CHANGE SEVERITY TO ERROR
                                     24BE       80$:
                 00000718'EF     DD  24BE       	  	PUSHL	FAB7+FAB$L_STV
                 00000714'EF     DD  24C4       	  	PUSHL	FAB7+FAB$L_STS
   00000000'9F            02     FB  24CA       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  24D1       	BICB	#BIT1,IOSTAT		; RESET ERROR BIT
                 00000192'EF     95  24D8       	TSTB	UNIT_MASK		; ANY DRIVES TO TEST?
                          03     12  24DE       	BNEQ	90$			; BR IF YES
                          0201   31  24E0       	BRW	ERROR_EXIT		; EXIT
                                     24E3       90$:
                                 04  24E3       	RET
                                     24E4       SUCA7:
                               0FFC  24E4       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   000006FD'EF   00000071'EF     DE  24E6       	MOVAL	MT_TABLE,MTBUF_PTR7	; RESET PTR. TO LIMIT SIZE
   000006F9'EF   000006FD'FF     D0  24F1       	MOVL	@MTBUF_PTR7,LIMIT7	; RESET LIMIT ON # OF ITERATIONS
   000006FD'EF            04     C0  24FC       	ADDL2	#4,MTBUF_PTR7		; INC. MT_TABLE POINTER
   00000701'EF   000006FD'FF     D0  2503       	MOVL	@MTBUF_PTR7,REC_SIZE7	; RESET RECORD SIZE
   000006F1'EF   0000002E'EF     D0  250E       	MOVL	EXPADDR,DATA_ADR7	; ADDRESS OF WRITE BUFFER
                 000006F5'EF     D4  2519       	CLRL	ITER7			; ZERO ITERATION COUNTER
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  49
1.07            MAIN CODE                                                                                                        (2)

                 00000705'EF     D4  251F       	CLRL	SIZE_CTR7		; ZERO SIZE COUNTER
   0000002E'EF   00037FF2 8F     C1  2525       	ADDL3 	#MAX_REC*7,EXPADDR,BUF7 ; READ BUFFER FOR THIS UNIT
                 000006ED'EF         2530       
   000006ED'EF   00007FFE 8F     C0  2535       	ADDL2	#MAX_REC,BUF7
   00000780'EF   000006ED'EF     D0  2540       	MOVL	BUF7,RAB7+RAB$L_UBF	; WHICH RECORD TO READ
   0000077C'EF   00000701'EF     B0  254B       	MOVW	REC_SIZE7,RAB7+RAB$W_USZ ; # OF BYTES TO READ
                                     2556       SUCB7:
   00000146'EF            04     93  2556       	BITB	#BIT2,IOSTAT		; ANY CONTROL C'S?
                          0A     13  255D       	BEQL	10$			; BR IF NO
   00000146'EF            04     8A  255F       	BICB	#BIT2,IOSTAT		; CLEAR CONTROL C BIT IN IOSTAT
                          01B4   31  2566       	BRW	END_MT			; EXIT CLEANLY
                                     2569       10$:
                 00002583'EF     DF  2569       		PUSHAL SUCC7
                 0000269A'EF     DF  256F       		PUSHAL ERR7
                 0000075C'EF     DF  2575       		PUSHAL	RAB7
   00000000'9F            03     FB  257B       		CALLS	#$$.TMP1,@#SYS$READ
                                 04  2582       	RET
                                     2583       SUCC7:
                               0FFC  2583       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   000006F1'FF   00000701'EF     29  2585       	CMPC3	REC_SIZE7,@DATA_ADR7,@BUF7 ; IS THE DATA GOOD?
                 000006ED'FF         2590       
                          03     13  2595       	BEQL	10$			; BR IF YES
                          00D8   31  2597       	BRW	60$			; PRINT THE DATA ERROR
                                     259A       10$:
                 000006F5'EF     D6  259A       	INCL	ITER7			; INCREMENT THE FILESIZE COUNTER
   000006F9'EF   000006F5'EF     D1  25A0       	CMPL	ITER7,LIMIT7		; DONE WITH THIS FILESIZE?
                          4B     13  25AB       	BEQL	40$			; BR IF YES
            59   00007FFE 8F     D0  25AD       	MOVL	#MAX_REC,R9		; MAXIMUM RECORD SIZE
   00000705'EF   00000701'EF     C0  25B4       	ADDL2	REC_SIZE7,SIZE_CTR7	; ACCUM. # OF BYTES TO READ
            59   00000705'EF     C2  25BF       	SUBL2	SIZE_CTR7,R9		; ENOUGH BYTES TO TEST?
   00000701'EF            59     D1  25C6       	CMPL	R9,REC_SIZE7
                          0D     18  25CD       	BGEQ	20$			; BR IF YES
   000006F1'EF   0000002E'EF     D0  25CF       	MOVL	EXPADDR,DATA_ADR7	; ADDRESS OF DATA
                          0B     11  25DA       	BRB	30$
                                     25DC       20$:
   000006F1'EF   00000701'EF     C0  25DC       	ADDL2	REC_SIZE7,DATA_ADR7	; INC THROUGH DATA BUFFER
                                     25E7       30$:
            6E            00     2C  25E7       	MOVC5	#0,(SP),#0,REC_SIZE7,@BUF7 ; CLEAR THE READ BUFFER
   00000701'EF            00         25EA       
                 000006ED'FF         25F0       
                          FF5E   31  25F5       	BRW	SUCB7			; DO A READ
                                     25F8       40$:
   000006FD'EF            04     C0  25F8       	ADDL2	#4,MTBUF_PTR7		; INCREMENT MT_TABLE POINTER
   000006F9'EF   000006FD'FF     D0  25FF       	MOVL	@MTBUF_PTR7,LIMIT7	; LIMIT ON THE # OF ITERATIONS
                 000006F9'EF     D5  260A       	TSTL	LIMIT7			; IS THIS UNIT DONE?
                          16     12  2610       	BNEQ	50$			; BR IF NO
   0000002D'EF         80 8F     88  2612       	BISB2	#1@7,DONE_FLAG		; SET THE DONE FLAG
   00000192'EF   0000002D'EF     91  261A       	CMPB	DONE_FLAG,UNIT_MASK	; ARE ALL UNITS DONE?
                          6D     13  2625       	BEQL	70$			; BR IF YES
                                 04  2627       	RET
                                     2628       50$:
                 000006F5'EF     D4  2628       	CLRL	ITER7			; ZERO THE ITERATION COUNT
   000006FD'EF            04     C0  262E       	ADDL2	#4,MTBUF_PTR7		; INCREMENT MT_TABLE POINTER
   00000701'EF   000006FD'FF     D0  2635       	MOVL	@MTBUF_PTR7,REC_SIZE7	; SET THE RECORD SIZE
   0000077C'EF   00000701'EF     B0  2640       	MOVW	REC_SIZE7,RAB7+RAB$W_USZ ; # OF BYTES TO READ
   00000780'EF   000006ED'EF     D0  264B       	MOVL	BUF7,RAB7+RAB$L_UBF	; WHICH RECORD TO READ
   000006F1'EF   0000002E'EF     D0  2656       	MOVL	EXPADDR,DATA_ADR7	; READ THE BEGINNING OF THE DATA
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  50
1.07            MAIN CODE                                                                                                        (2)

            6E            00     2C  2661       	MOVC5	#0,(SP),#0,REC_SIZE7,@BUF7 ; CLEAR THE READ BUFFER
   00000701'EF            00         2664       
                 000006ED'FF         266A       
                          FEE4   31  266F       	BRW	SUCB7			; DO A READ
                                     2672       60$:
   00000191'EF            07     90  2672       	MOVB	#7,UNIT_ERROR		; SET BAD UNIT NUMBER
   00000000'EF            50     3C  2679       	MOVZWL	R0,ARGS			; GET BYTE #
   00000004'EF            61     9A  2680       	MOVZBL	(R1),ARGS+4		; GET GOOD BYTE
   00000008'EF            63     9A  2687       	MOVZBL	(R3),ARGS+8		; GET BAD BYTE
                          DA14   30  268E       	BSBW	DATA_ERROR		; REPORT DATA ERROR
                          FF06   31  2691       	BRW	10$			; CONTINUE
                                     2694       70$:
       DAB6 CF            00     FB  2694       	CALLS	#0,WAKE_UP		; EXIT CLEANLY FROM AST LEVEL
                                 04  2699       	RET
                                     269A       ERR7:
                               0FFC  269A       	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; AST ENTRY MASK
   00000181'EF   00000764'EF     D0  269C       	MOVL	RAB7+RAB$L_STS,RMS_ERR_STS	; SAVE STATUS FIELD
   00000185'EF   00000768'EF     D0  26A7       	MOVL	RAB7+RAB$L_STV,RMS_ERR_STV	; SAVE STV FIELD
   00000191'EF            07     90  26B2       	MOVB	#7,UNIT_ERROR			; GET UNIT NUMBER
       D942 CF            00     FB  26B9       	CALLS	#0,RMS_ERR			; PRINT THE ERROR
                 00000192'EF     95  26BE       	TSTB	UNIT_MASK			; ANY MORE UNITS TO TEST?
                          1D     12  26C4       	BNEQ	10$				; BR IF YES
                 00000718'EF     DD  26C6       	  	PUSHL	FAB7+FAB$L_STV
                 00000714'EF     DD  26CC       	  	PUSHL	FAB7+FAB$L_STS
   00000000'9F            02     FB  26D2       		CALLS	#$$T1,@#LIB$SIGNAL
   00000146'EF            02     8A  26D9       	BICB	#BIT1,IOSTAT			; CLEAR ERROR BIT IN IOSTAT
                          0001   31  26E0       	BRW	ERROR_EXIT			; EXIT
                                     26E3       10$:
                                 04  26E3       	RET
                                     26E4   653 ERROR_EXIT:
                 00000036'EF     D6  26E4   654 	INCL	ERROR_CNT			; INC CUM. ERROR COUNT
                                     26EA   655 	PUTMSG	<#UETP$_ERBOX,#1,ERROR_CNT,-
                                     26EA   656 		#UETP$_TEXT,#1,#NOMORDEV,-
                                     26EA   657 		#UETP$_ABENDD,#2,#TSTNAM,#0> ; PRINT EXIT MESSAGE
                          00     DD  26EA       	  	PUSHL	#0
                 000000AB'8F     DD  26EC       	  	PUSHL	#TSTNAM
                          02     DD  26F2       	  	PUSHL	#2
                 00000000'8F     DD  26F4       	  	PUSHL	#UETP$_ABENDD
                 0000008D'8F     DD  26FA       	  	PUSHL	#NOMORDEV
                          01     DD  2700       	  	PUSHL	#1
                 00000000'8F     DD  2702       	  	PUSHL	#UETP$_TEXT
                 00000036'EF     DD  2708       	  	PUSHL	ERROR_CNT
                          01     DD  270E       	  	PUSHL	#1
                 00000000'8F     DD  2710       	  	PUSHL	#UETP$_ERBOX
   00000000'9F            0A     FB  2716       		CALLS	#$$T1,@#LIB$SIGNAL
                                     271D   658 END_MT:
            53            01     D0  271D   659 	MOVL	#1,R3			; SET SHIFT COUNT
            54            01     D0  2720   660 	MOVL	#1,R4			; SET MASK BIT
   00000192'EF            54     93  2723   661 	BITB	R4,UNIT_MASK		; WAS IT TESTED?
                          03     12  272A   662 	BNEQ	10$			; BR IF YES
                          001A   31  272C   663 	BRW	20$
                                     272F   664 10$:
                                     272F   665 	$DISCONNECT RAB=RAB0		; DISCONNECT THE RAB
                 00000200'EF     DF  272F       		PUSHAL	RAB0
   00000000'9F            01     FB  2735       		CALLS	#$$.TMP1,@#SYS$DISCONNECT
                                     273C   666 	$CLOSE	FAB=FAB0		; CLOSE THE FILE
                 000001B0'EF     DF  273C       		PUSHAL	FAB0
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  51
1.07            MAIN CODE                                                                                                        (2)

   00000000'9F            01     FB  2742       		CALLS	#$$.TMP1,@#SYS$CLOSE
                                     2749   667 20$:
                                     2749   668 	END	<1>
            54            53     9C  2749       	ROTL	R3,R4,R4			; SHIFT MASK
                          54         274C       
   00000192'EF            54     93  274D       	BITB	R4,UNIT_MASK			; WAS IT TESTED?
                          03     12  2754       	BNEQ	30054$				; BR IF YES
                          001A   31  2756       	BRW	30055$				; END
                                     2759       30054$:
                 000002C4'EF     DF  2759       		PUSHAL	RAB1
   00000000'9F            01     FB  275F       		CALLS	#$$.TMP1,@#SYS$DISCONNECT
                 00000274'EF     DF  2766       		PUSHAL	FAB1
   00000000'9F            01     FB  276C       		CALLS	#$$.TMP1,@#SYS$CLOSE
                                     2773       30055$:
                                     2773   669 	END	<2>
            54            53     9C  2773       	ROTL	R3,R4,R4			; SHIFT MASK
                          54         2776       
   00000192'EF            54     93  2777       	BITB	R4,UNIT_MASK			; WAS IT TESTED?
                          03     12  277E       	BNEQ	30056$				; BR IF YES
                          001A   31  2780       	BRW	30057$				; END
                                     2783       30056$:
                 00000388'EF     DF  2783       		PUSHAL	RAB2
   00000000'9F            01     FB  2789       		CALLS	#$$.TMP1,@#SYS$DISCONNECT
                 00000338'EF     DF  2790       		PUSHAL	FAB2
   00000000'9F            01     FB  2796       		CALLS	#$$.TMP1,@#SYS$CLOSE
                                     279D       30057$:
                                     279D   670 	END	<3>
            54            53     9C  279D       	ROTL	R3,R4,R4			; SHIFT MASK
                          54         27A0       
   00000192'EF            54     93  27A1       	BITB	R4,UNIT_MASK			; WAS IT TESTED?
                          03     12  27A8       	BNEQ	30058$				; BR IF YES
                          001A   31  27AA       	BRW	30059$				; END
                                     27AD       30058$:
                 0000044C'EF     DF  27AD       		PUSHAL	RAB3
   00000000'9F            01     FB  27B3       		CALLS	#$$.TMP1,@#SYS$DISCONNECT
                 000003FC'EF     DF  27BA       		PUSHAL	FAB3
   00000000'9F            01     FB  27C0       		CALLS	#$$.TMP1,@#SYS$CLOSE
                                     27C7       30059$:
                                     27C7   671 	END	<4>
            54            53     9C  27C7       	ROTL	R3,R4,R4			; SHIFT MASK
                          54         27CA       
   00000192'EF            54     93  27CB       	BITB	R4,UNIT_MASK			; WAS IT TESTED?
                          03     12  27D2       	BNEQ	30060$				; BR IF YES
                          001A   31  27D4       	BRW	30061$				; END
                                     27D7       30060$:
                 00000510'EF     DF  27D7       		PUSHAL	RAB4
   00000000'9F            01     FB  27DD       		CALLS	#$$.TMP1,@#SYS$DISCONNECT
                 000004C0'EF     DF  27E4       		PUSHAL	FAB4
   00000000'9F            01     FB  27EA       		CALLS	#$$.TMP1,@#SYS$CLOSE
                                     27F1       30061$:
                                     27F1   672 	END	<5>
            54            53     9C  27F1       	ROTL	R3,R4,R4			; SHIFT MASK
                          54         27F4       
   00000192'EF            54     93  27F5       	BITB	R4,UNIT_MASK			; WAS IT TESTED?
                          03     12  27FC       	BNEQ	30062$				; BR IF YES
                          001A   31  27FE       	BRW	30063$				; END
                                     2801       30062$:
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  52
1.07            MAIN CODE                                                                                                        (2)

                 000005D4'EF     DF  2801       		PUSHAL	RAB5
   00000000'9F            01     FB  2807       		CALLS	#$$.TMP1,@#SYS$DISCONNECT
                 00000584'EF     DF  280E       		PUSHAL	FAB5
   00000000'9F            01     FB  2814       		CALLS	#$$.TMP1,@#SYS$CLOSE
                                     281B       30063$:
                                     281B   673 	END	<6>
            54            53     9C  281B       	ROTL	R3,R4,R4			; SHIFT MASK
                          54         281E       
   00000192'EF            54     93  281F       	BITB	R4,UNIT_MASK			; WAS IT TESTED?
                          03     12  2826       	BNEQ	30064$				; BR IF YES
                          001A   31  2828       	BRW	30065$				; END
                                     282B       30064$:
                 00000698'EF     DF  282B       		PUSHAL	RAB6
   00000000'9F            01     FB  2831       		CALLS	#$$.TMP1,@#SYS$DISCONNECT
                 00000648'EF     DF  2838       		PUSHAL	FAB6
   00000000'9F            01     FB  283E       		CALLS	#$$.TMP1,@#SYS$CLOSE
                                     2845       30065$:
                                     2845   674 	END	<7>
            54            53     9C  2845       	ROTL	R3,R4,R4			; SHIFT MASK
                          54         2848       
   00000192'EF            54     93  2849       	BITB	R4,UNIT_MASK			; WAS IT TESTED?
                          03     12  2850       	BNEQ	30066$				; BR IF YES
                          001A   31  2852       	BRW	30067$				; END
                                     2855       30066$:
                 0000075C'EF     DF  2855       		PUSHAL	RAB7
   00000000'9F            01     FB  285B       		CALLS	#$$.TMP1,@#SYS$DISCONNECT
                 0000070C'EF     DF  2862       		PUSHAL	FAB7
   00000000'9F            01     FB  2868       		CALLS	#$$.TMP1,@#SYS$CLOSE
                                     286F       30067$:
                                     286F   675 LAST1:
                                     286F   676 	PUTMSG	<#UETP$_ENDEDD,#2,#TSTNAM,#0> ; PRINT ENDING MESSAGE
                          00     DD  286F       	  	PUSHL	#0
                 000000AB'8F     DD  2871       	  	PUSHL	#TSTNAM
                          02     DD  2877       	  	PUSHL	#2
                 00000000'8F     DD  2879       	  	PUSHL	#UETP$_ENDEDD
   00000000'9F            04     FB  287F       		CALLS	#$$T1,@#LIB$SIGNAL
            52   00000025'EF     D0  2886   677 	MOVL	CNTRL_NAME,R2		;USE CTRL NAME AS RETURN STATUS
            52   10000000 8F     C8  288D   678 	BISL2	#1@28,R2		;SUPPRESS MSG OUTPUT BY DCL
                                     2894   679 	$EXIT_S	R2
                          52     DD  2894       		PUSHL	R2
   00000000'GF            01     FB  2896       		CALLS	#1,G^SYS$EXIT
                                     289D   680 	.END	UETTAPE00
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  53
SYMBOL TABLE                                                                                                                     (2)

$$$CHARS       = 00000002            EXPADDR          0000002E R     03   FAB$M_KFO      = 40000000            
$$$STRINGS     = 00000000            FAB              000007B4 R     03   FAB$M_MSE      = 00000010            
$$.TAB         = 00000804 R     03   FAB$B_BID        00000000            FAB$M_MXV      = 00000002            
$$.TABEND      = 00000848 R     03   FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            
$$.TMP         = 00000000            FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            
$$.TMP1        = 00000001            FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            
$$.TMP2        = 000000EF            FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            
$$T1           = 00000004            FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            
ALL_SET          0000043F R     05   FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            
ARGS             00000000 R     03   FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            
BIT...         = 00000020            FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            
BIT0           = 00000001            FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            
BIT1           = 00000002            FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            
BIT2           = 00000004            FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            
BUF0             00000193 R     03   FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            
BUF1             00000255 R     03   FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            
BUF2             00000319 R     03   FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            
BUF3             000003DD R     03   FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            
BUF4             000004A1 R     03   FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            
BUF5             00000565 R     03   FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            
BUF6             00000629 R     03   FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            
BUF7             000006ED R     03   FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            
BYTE_CNT       = 00002000            FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            
CCASTHAND        00000130 R     05   FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            
CLOSE_ERR        00000419 R     05   FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            
CLSTR_FLAG     = 00000040            FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            
CLUSTER2         00000000 R     02   FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            
CNTRLCMSG        00000010 R     02   FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            
CNTRL_NAME       00000025 R     03   FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            
CNTRL_NAME_STR   0000000C R     03   FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            
CON_RAB          000002FC R     05   FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            
DATA_ADR0        00000197 R     03   FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            
DATA_ADR1        00000259 R     03   FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            
DATA_ADR2        0000031D R     03   FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            
DATA_ADR3        000003E1 R     03   FAB$L_MRN        00000038            FAB$S_ORG      = 00000004            
DATA_ADR4        000004A5 R     03   FAB$L_NAM        00000028            FAB$S_PPF_RAT  = 00000008            
DATA_ADR5        00000569 R     03   FAB$L_SDC        00000044            FAB$V_BIO      = 00000005            
DATA_ADR6        0000062D R     03   FAB$L_STS        00000008            FAB$V_BLK      = 00000003            
DATA_ADR7        000006F1 R     03   FAB$L_STV        0000000C            FAB$V_BRO      = 00000006            
DATA_ERROR       000000A5 R     05   FAB$L_XAB        00000024            FAB$V_CBT      = 00000015            
DEVNF            000003B3 R     05   FAB$M_BIO      = 00000020            FAB$V_CIF      = 00000019            
DIE              00000071 R     05   FAB$M_BLK      = 00000008            FAB$V_CR       = 00000001            
DIEARG           00000029 R     03   FAB$M_BRO      = 00000040            FAB$V_CTG      = 00000014            
DONE_FLAG        0000002D R     03   FAB$M_CBT      = 00200000            FAB$V_DEL      = 00000002            
END_MT           0000271D R     05   FAB$M_CIF      = 02000000            FAB$V_DFW      = 00000005            
ERMSG1           000002BC R     05   FAB$M_CR       = 00000002            FAB$V_DLT      = 0000000F            
ERR0             00000E8F R     05   FAB$M_CTG      = 00100000            FAB$V_DMO      = 0000000C            
ERR1             000011FE R     05   FAB$M_DEL      = 00000004            FAB$V_ESC      = 0000001B            
ERR2             0000156D R     05   FAB$M_DFW      = 00000020            FAB$V_EXE      = 00000007            
ERR3             000018DC R     05   FAB$M_DLT      = 00008000            FAB$V_FTN      = 00000000            
ERR4             00001C4B R     05   FAB$M_DMO      = 00001000            FAB$V_GET      = 00000001            
ERR5             00001FBA R     05   FAB$M_ESC      = 08000000            FAB$V_INP      = 00000013            
ERR6             0000232A R     05   FAB$M_EXE      = 00000080            FAB$V_JNL      = 00000016            
ERR7             0000269A R     05   FAB$M_FTN      = 00000001            FAB$V_KFO      = 0000001E            
ERROR_CNT        00000036 R     03   FAB$M_GET      = 00000002            FAB$V_MSE      = 00000004            
ERROR_EXIT       000026E4 R     05   FAB$M_INP      = 00080000            FAB$V_MXV      = 00000001            
ERR_STRLEN       0000003A R     03   FAB$M_JNL      = 00400000            FAB$V_NAM      = 00000018            
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  54
SYMBOL TABLE                                                                                                                     (2)

FAB$V_NEF      = 0000000A            FILEL3         = 00000011            RAB$B_MBF        00000036            
FAB$V_NFS      = 00000010            FILEL4         = 00000011            RAB$B_PSZ        00000034            
FAB$V_NIL      = 00000005            FILEL5         = 00000011            RAB$B_RAC        0000001E            
FAB$V_OFP      = 0000001D            FILEL6         = 00000011            RAB$B_ROP1       00000005            
FAB$V_ORG      = 00000004            FILEL7         = 00000011            RAB$B_ROP2       00000006            
FAB$V_POS      = 00000008            FILE_ERR         0000010B R     05   RAB$B_ROP3       00000007            
FAB$V_PPF      = 00000012            FILE_NAME        0000003C R     02   RAB$B_TMO        0000001F            
FAB$V_PPF_IND  = 0000000E            FILE_NAME_STR    00000034 R     02   RAB$C_BID      = 00000001            
FAB$V_PPF_RAT  = 00000006            FIND_MT          00000319 R     05   RAB$C_BLN        00000044            
FAB$V_PRN      = 00000002            FOUND_MT         00000359 R     05   RAB$C_KEY      = 00000001            
FAB$V_PUT      = 00000000            GBL...         = 00000000            RAB$C_RFA      = 00000002            
FAB$V_RCK      = 00000017            GENRAN           000000E7 R     05   RAB$C_SEQ      = 00000000            
FAB$V_RWC      = 0000000B            IO$M_CTRLCAST    ********   X   05   RAB$K_BLN        00000044            
FAB$V_RWO      = 00000007            IO$_SETMODE      ********   X   05   RAB$L_BKT        00000038            
FAB$V_SCF      = 0000000E            IOSTAT           00000146 R     03   RAB$L_CTX        00000018            
FAB$V_SHRDEL   = 00000002            ITER0            0000019B R     03   RAB$L_DCT        00000038            
FAB$V_SHRGET   = 00000001            ITER1            0000025D R     03   RAB$L_FAB        0000003C            
FAB$V_SHRPUT   = 00000000            ITER2            00000321 R     03   RAB$L_KBF        00000030            
FAB$V_SHRUPD   = 00000003            ITER3            000003E5 R     03   RAB$L_PBF        00000030            
FAB$V_SPL      = 0000000D            ITER4            000004A9 R     03   RAB$L_RBF        00000028            
FAB$V_SQO      = 00000006            ITER5            0000056D R     03   RAB$L_RFA0       00000010            
FAB$V_SUP      = 00000002            ITER6            00000631 R     03   RAB$L_RHB        0000002C            
FAB$V_TEF      = 0000001C            ITER7            000006F5 R     03   RAB$L_ROP        00000004            
FAB$V_TMD      = 00000004            LAST1            0000286F R     05   RAB$L_STS        00000008            
FAB$V_TMP      = 00000003            LIB$SIGNAL       ********   X   05   RAB$L_STV        0000000C            
FAB$V_TRN      = 00000004            LIMIT0           0000019F R     03   RAB$L_UBF        00000024            
FAB$V_UFM      = 0000001A            LIMIT1           00000261 R     03   RAB$M_ASY      = 00000001            
FAB$V_UFO      = 00000011            LIMIT2           00000325 R     03   RAB$M_BIO      = 00000800            
FAB$V_UPD      = 00000003            LIMIT3           000003E9 R     03   RAB$M_CCO      = 80000000            
FAB$V_UPI      = 00000006            LIMIT4           000004AD R     03   RAB$M_CVT      = 04000000            
FAB$V_WCK      = 00000009            LIMIT5           00000571 R     03   RAB$M_EOF      = 00000100            
FAB$W_BLS        0000003C            LIMIT6           00000635 R     03   RAB$M_FDL      = 00000040            
FAB$W_DEQ        00000014            LIMIT7           000006F9 R     03   RAB$M_HSH      = 00000080            
FAB$W_IFI        00000002            LOGNAM           00000049 R     02   RAB$M_KGE      = 00200000            
FAB$W_MRS        00000036            LOGNAM1          0000005E R     02   RAB$M_KGT      = 00400000            
FAB0             000001B0 R     03   MAX_REC        = 00007FFE            RAB$M_LIM      = 00004000            
FAB1             00000274 R     03   MT               000002A2 R     05   RAB$M_LOA      = 00002000            
FAB2             00000338 R     03   MTBUF_PTR0       000001A3 R     03   RAB$M_LOC      = 00010000            
FAB3             000003FC R     03   MTBUF_PTR1       00000265 R     03   RAB$M_MAS      = 00000020            
FAB4             000004C0 R     03   MTBUF_PTR2       00000329 R     03   RAB$M_NLK      = 00100000            
FAB5             00000584 R     03   MTBUF_PTR3       000003ED R     03   RAB$M_NXR      = 00800000            
FAB6             00000648 R     03   MTBUF_PTR4       000004B1 R     03   RAB$M_PMT      = 40000000            
FAB7             0000070C R     03   MTBUF_PTR5       00000575 R     03   RAB$M_PPF_IND  = 00004000            
FAO_BUF          0000003E R     03   MTBUF_PTR6       00000639 R     03   RAB$M_PPF_RAT  = 00003FC0            
FAO_BUFFER       00000046 R     03   MTBUF_PTR7       000006FD R     03   RAB$M_PTA      = 20000000            
FAO_BUFL       = 00000100            MT_TABLE         00000071 R     02   RAB$M_RAH      = 00000200            
FILE0            00000244 R     03   NAME_SIZE      = 0000000D            RAB$M_RLK      = 00080000            
FILE1            00000308 R     03   NOMORDEV         0000008D R     02   RAB$M_RNE      = 01000000            
FILE2            000003CC R     03   PAGES          = 00000040            RAB$M_RNF      = 08000000            
FILE3            00000490 R     03   PNL            = 0000000C            RAB$M_TMO      = 02000000            
FILE4            00000554 R     03   PROCESS_NAME     00000014 R     03   RAB$M_TPT      = 00000002            
FILE5            00000618 R     03   RAB              00000804 R     03   RAB$M_UIF      = 00000010            
FILE6            000006DC R     03   RAB$B_BID        00000000            RAB$M_ULK      = 00040000            
FILE7            000007A0 R     03   RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            
FILEL0         = 00000011            RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            
FILEL1         = 00000011            RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            
FILEL2         = 00000011            RAB$B_MBC        00000037            RAB$V_ASY      = 00000000            
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  55
SYMBOL TABLE                                                                                                                     (2)

RAB$V_BIO      = 0000000B            SIZE_CTR1        0000026D R     03   SYS$WRITE        ********  GX   05   
RAB$V_CCO      = 0000001F            SIZE_CTR2        00000331 R     03   TSTNAM           000000AB R     02   
RAB$V_CVT      = 0000001A            SIZE_CTR3        000003F5 R     03   TTCHAN           0000018D R     03   
RAB$V_EOF      = 00000008            SIZE_CTR4        000004B9 R     03   TTNAM            000000BC R     02   
RAB$V_FDL      = 00000006            SIZE_CTR5        0000057D R     03   UETP$_ABENDD     ********   X   05   
RAB$V_HSH      = 00000007            SIZE_CTR6        00000641 R     03   UETP$_ATPC       ********   X   05   
RAB$V_KGE      = 00000015            SIZE_CTR7        00000705 R     03   UETP$_BEGIND     ********   X   05   
RAB$V_KGT      = 00000016            STRLEN           00000189 R     03   UETP$_CLOSEIN    ********   X   05   
RAB$V_LIM      = 0000000E            SUC0             00000B6E R     05   UETP$_DATAER     ********   X   05   
RAB$V_LOA      = 0000000D            SUC1             00000ED9 R     05   UETP$_DENOSU     ********   X   05   
RAB$V_LOC      = 00000010            SUC2             00001248 R     05   UETP$_DESTP      ********   X   05   
RAB$V_MAS      = 00000005            SUC3             000015B7 R     05   UETP$_ENDEDD     ********   X   05   
RAB$V_NLK      = 00000014            SUC4             00001926 R     05   UETP$_ERBOX      ********   X   05   
RAB$V_NXR      = 00000017            SUC5             00001C95 R     05   UETP$_OPENIN     ********   X   05   
RAB$V_PMT      = 0000001E            SUC6             00002004 R     05   UETP$_TEXT       ********   X   05   
RAB$V_PPF_IND  = 0000000E            SUC7             00002374 R     05   UETTAPE00        0000015D RG    05   
RAB$V_PPF_RAT  = 00000006            SUCA0            00000CDE R     05   UNIT_ERROR       00000191 R     03   
RAB$V_PTA      = 0000001D            SUCA1            00001049 R     05   UNIT_MASK        00000192 R     03   
RAB$V_RAH      = 00000009            SUCA2            000013B8 R     05   WAKE_UP          0000014F R     05   
RAB$V_RLK      = 00000013            SUCA3            00001727 R     05   
RAB$V_RNE      = 00000018            SUCA4            00001A96 R     05   
RAB$V_RNF      = 0000001B            SUCA5            00001E05 R     05   
RAB$V_TMO      = 00000019            SUCA6            00002174 R     05   
RAB$V_TPT      = 00000001            SUCA7            000024E4 R     05   
RAB$V_UIF      = 00000004            SUCB0            00000D4C R     05   
RAB$V_ULK      = 00000012            SUCB1            000010BB R     05   
RAB$V_WAT      = 00000011            SUCB2            0000142A R     05   
RAB$V_WBH      = 0000000A            SUCB3            00001799 R     05   
RAB$W_ISI        00000002            SUCB4            00001B08 R     05   
RAB$W_RFA        00000010            SUCB5            00001E77 R     05   
RAB$W_RFA4       00000014            SUCB6            000021E6 R     05   
RAB$W_RSZ        00000022            SUCB7            00002556 R     05   
RAB$W_USZ        00000020            SUCC0            00000D79 R     05   
RAB0             00000200 R     03   SUCC1            000010E8 R     05   
RAB1             000002C4 R     03   SUCC2            00001457 R     05   
RAB2             00000388 R     03   SUCC3            000017C6 R     05   
RAB3             0000044C R     03   SUCC4            00001B35 R     05   
RAB4             00000510 R     03   SUCC5            00001EA4 R     05   
RAB5             000005D4 R     03   SUCC6            00002213 R     05   
RAB6             00000698 R     03   SUCC7            00002583 R     05   
RAB7             0000075C R     03   SYS$ASCEFC       ********   X   05   
RANDOM1          00000147 R     03   SYS$ASSIGN       ********   X   05   
RANDOM2          0000014B R     03   SYS$CLOSE        ********  GX   05   
RECORD           0000014F R     03   SYS$CONNECT      ********  GX   05   
REC_SIZE0        000001A7 R     03   SYS$CREATE       ********  GX   05   
REC_SIZE1        00000269 R     03   SYS$DISCONNECT   ********  GX   05   
REC_SIZE2        0000032D R     03   SYS$EXIT         ********   X   05   
REC_SIZE3        000003F1 R     03   SYS$EXPREG       ********   X   05   
REC_SIZE4        000004B5 R     03   SYS$GET          ********  GX   05   
REC_SIZE5        00000579 R     03   SYS$HIBER        ********   X   05   
REC_SIZE6        0000063D R     03   SYS$OPEN         ********  GX   05   
REC_SIZE7        00000701 R     03   SYS$QIOW         ********   X   05   
RMS$_EOF         ********   X   05   SYS$READ         ********  GX   05   
RMS_ERR          00000000 R     05   SYS$SETEF        ********   X   05   
RMS_ERR_STS      00000181 R     03   SYS$SETPRN       ********   X   05   
RMS_ERR_STV      00000185 R     03   SYS$TRNLOG       ********   X   05   
SIZE_CTR0        000001AB R     03   SYS$WAKE         ********   X   05   
UETTAPE00       - VAX/VMS UETP TAPE EXERCISER                    22-AUG-1978 03:34:58   VAX-11 MACRO X0.3-11               Page  56
PROGRAM SECTION SYNOPSIS                                                                                                         (2)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
RODATA           000000C6      02     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD  NOWRT LONG  
RWDATA           00000848      03     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD    WRT LONG  
$ABS$            00000050      04     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
UETTAP           0000289D      05     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT LONG  


THERE WERE NO ERRORS OR WARNINGS.
1972. BYTES LEFT IN FREE MEMORY POOL.
38. BYTES OF RECLAIMED MEMORY.
OBJ$:UETTAPE00,LIS$:UETTAPE00/-SP=SRC$:UETPLIBS,UETTAPE00
135 MLB DIR RDS - 747 GETS TO DEFINE 48 MACROS. 404 INTER. FILE WRITES. 
