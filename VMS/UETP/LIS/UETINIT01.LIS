UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      67  READ ONLY DATA
   (3)     134  READ/WRITE DATA
   (3)     198  VAX-11 RMS DATA STRUCTURES
   (3)     251  SUBROUTINES
   (4)     380  MAIN LINE CODE
   (4)     516  DEVICE TESTS
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page   1
1.09                                                                                                                             (1)

                                     0000     1 ;	UETP prefix file (contains macro library file specs).
                                     0000     2 ;
                                     0000     3 	.LIBRARY	/EXECML$/	;SYSTEM MACROS
                                     0000     4 	.LIBRARY	/LIBD$:[SYSTST.OBJ]SYSTST.MLB/ ; PRIVATE UETP,SYSTST LIB
                                     0000     5 	.LIST	MEB
                                     0000     6 ;
                                     0000     1 	.TITLE UETINIT01 VAX/VMS UETP QUICK PERIPHERAL CHECK
                                     0000     2 	.IDENT	/1.09/
                                     0000     3 ;
                                     0000     4 ; COPYRIGHT (C) 1977,1978
                                     0000     5 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     6 ;
                                     0000     7 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     8 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000     9 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    10 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    11 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    12 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    13 ; REMAIN IN DEC.
                                     0000    14 ;
                                     0000    15 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    16 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    17 ; CORPORATION.
                                     0000    18 ;
                                     0000    19 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    20 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    21 ;
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY:
                                     0000    25 ; 	THIS MODULE WILL BE DISTRIBUTED WITH VAX/VMS UNDER THE UETP UIC.
                                     0000    26 ;
                                     0000    27 ; ABSTRACT:
                                     0000    28 ;	THIS MODULE DOES A QUICK VERIFY THAT ALL DEVICES IN THE SYSTEM
                                     0000    29 ;	ARE ABLE TO DO SOME BASIC FUNCTIONS.  THE SYSTEM CONFIGURATION
                                     0000    30 ;	IS EXTRACTED FROM FILE 'UETINIDEV.DAT'.  TYPICAL FUNCTIONS TESTED
                                     0000    31 ;	ARE VAX-11 RMS $CREATE, $PUT, $OPEN, $CLOSE, AND $GET.  THIS TEST
                                     0000    32 ;	IS BY NO MEANS A COMPLETE TEST ON ANY PARTICULAR SOFTWARE OR
                                     0000    33 ;	HARDWARE BUT SIMPLY INDICATES TO THE UETP THAT THE PERIPHERALS
                                     0000    34 ;	ARE ONLINE, WRITE-ENABLED, AND READY TO GO.
                                     0000    35 ;
                                     0000    36 ; ENVIRONMENT:
                                     0000    37 ; 	THE MODULE WILL RUN IN USER ACCESS MODE, WITH INTERRUPTS ENABLED
                                     0000    38 ;	AT ALL TIMES.
                                     0000    39 ;
                                     0000    40 ; AUTHOR: LARRY JONES,	CREATION DATE: OCTOBER, 1977
                                     0000    41 ;
                                     0000    42 ; MODIFIED BY:
                                     0000    43 ;
                                     0000    44 ;	, : VERSION
                                     0000    45 ; 1.0
                                     0000    46 ; 1.01	CLEANED UP COMMENTS AND FIXED CHANNEL ASSIGNMENT OVERFLOW LDJ 17-JAN-78
                                     0000    47 ; 1.02	FIX MAGTAPE TEST PRIV. AND RESIDUAL 1600 BPI PROBLEM LDJ 30-JAN-78
                                     0000    48 ; 1.03  REMOVE TEST FOR TTA AS OPERATOR CONSOLE   RAB 8-MAR-78
                                     0000    49 ; 1.04  FIX MAGTAPE TEST FOR DEASSI DEALLOC AND BPI SET. RAB 9-MAR-78
                                     0000    50 ; 1.05  FIX LP TIMEOUT AND CLEANUP   RAB  1-JUN-78
                                     0000    51 ; 1.06  ADD CR DEVICE (COMMENTED OUT FOR V1)	RAB  08-JUN-78
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page   2
1.09                                                                                                                             (1)

                                     0000    52 ; 1.07  FIX $TRNLOG BUG			RAB 15-JUN-78
                                     0000    53 ; 1.08  CHANGE INPUT DEVICE TO TT	RAB 10-AUG-78
                                     0000    54 ; 1.09  CHANGE TAPE FROM LOGICAL I/O TO PHYSICAL   RAB 16-AUG-78
                                     0000    55 ;	CHANGE TAPE TEST TO REMOVE SOME STAT CHECKS  RAB 16-AUG-78
                                     0000    56 ;	REMOVE TAPE $ALLOC AND $DALLOC. FIX TT INPUT TEST.
                                     0000    57 ;
                                     0000    58 ;--
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page   3
1.09            READ ONLY DATA                                                                                                   (2)

                                     0000    61 	.SBTTL	READ ONLY DATA
                                 00000000    62 	.PSECT	RODATA,NOEXE,NOWRT
                                     0000    63 ;
                                     0000    64 ;	DEFINITIONS
                                     0000    65 ;
                                     0000    66 ;
                                     0000    67 ;
                           0000000D  0000    68 	CR=13
                           0000000A  0000    69 	LF=10
                           0000000C  0000    70 	FF=12
                                     0000    71 ;
                           00000001  0000    72 	BIT0 = ^X00000001
                           00000002  0000    73 	BIT1 = ^X00000002
                           00000004  0000    74 	BIT2 = ^X00000004
                           00000008  0000    75 	BIT3 = ^X00000008
                           00000010  0000    76 	BIT4 = ^X00000010
                           00000020  0000    77 	BIT5 = ^X00000020
                                     0000    78 ;
                           00000000  0000    79 	DISK_INDEX	= 0
                           00000001  0000    80 	MAGTAPE_INDEX	= 1
                           00000002  0000    81 	LINEPRINT_INDEX = 2
                           00000003  0000    82 	TTY_INDEX	= 3
                                     0000    83 ;;	CARD_INDEX	= 4
                                     0000    84 ;
                                     0000    85 ;
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page   4
1.09            READ ONLY DATA                                                                                                   (2)

                                     0000    87 ;
                                     0000    88 FILE_NAME_DES:
                           0000000D' 0000    89 	.LONG	NAME_SIZE
                           00000008' 0004    90 	.ADDRESS FILE_NAME
                                     0008    91 FILE_NAME:
41 44 2E 56 45 44 49 4E 49 54 45 55  0008    92 	.ASCII	/UETINIDEV.DAT/
                                 54  0014       
                           0000000D  0015    93 	NAME_SIZE=.-FILE_NAME
                                     0015    94 TSTNAM:
                                     0015    95 	STRING	I,<UETINIT01>
                           00000009  0015       	.LONG	$$$CHARS
                           0000001D' 0019       	.ADDRESS .+4
         31 30 54 49 4E 49 54 45 55  001D       	.ASCII	\UETINIT01\
                                     0026    96 ;;CRNAM:
                                     0026    97 ;;	STRING	I,<CR>
                                     0026    98 TTNAM:
                                     0026    99 	STRING	I,<TT>
                           00000002  0026       	.LONG	$$$CHARS
                           0000002E' 002A       	.ADDRESS .+4
                              54 54  002E       	.ASCII	\TT\
                  FFFFFFFF DC3CBA00  0030   100 TIME:	.LONG	-60*1000*1000*10,-1	;DELTA TIME = 60 SECONDS
                                     0038   101 CNTRLCMSG:
                                     0038   102 	STRING	I,<aborted via a user control C>
                           0000001C  0038       	.LONG	$$$CHARS
                           00000040' 003C       	.ADDRESS .+4
20 61 69 76 20 64 65 74 72 6F 62 61  0040       	.ASCII	\aborted via a user control C\
72 74 6E 6F 63 20 72 65 73 75 20 61  004C       
                        43 20 6C 6F  0058       
                                     005C   103 OFF_LINE_LP: STRING I,<line printer not ready>
                           00000016  005C       	.LONG	$$$CHARS
                           00000064' 0060       	.ADDRESS .+4
72 65 74 6E 69 72 70 20 65 6E 69 6C  0064       	.ASCII	\line printer not ready\
      79 64 61 65 72 20 74 6F 6E 20  0070       
                                     007A   104 ;;OFF_LINE_CR: STRING I,<card reader not ready>
                                     007A   105 ;
                                     007A   106 LP_DATA:			; LINE PRINTER TEST DATA
                           00000021  007A   107 	A=^X21			; LET A= ASCII !
                           0C 0A 0D  00D8   114 	.BYTE	CR,LF,FF	; CLEAN UP THE END OF THE PAGE
                           00000061  00DB   115 	LP_DATA_LEN=.-LP_DATA
                                     00DB   116 TT_DATA:			; TTY TEST DATA
                           00000021  00DB   117 	A=^X21			; LET A= SMALLEST PRINTABLE CHAR.
                              0A 0D  0139   124 	.BYTE	CR,LF		; CLEAN UP THE END OF THE PAGE
                           00000060  013B   125 	TT_DATA_LEN=.-TT_DATA
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page   5
1.09            READ/WRITE DATA                                                                                                  (3)

                                     013B   128 	.SBTTL	READ/WRITE DATA
                                 00000000   129 	.PSECT	RWDATA,WRT,NOEXE,LONG
                                     0000   130 ;
                                     0000   131 TEST_CHAN:
                           00000000  0000   132 	.LONG	0	; TEST DEVICE CHANNEL NUMBER
                                     0004   133 TTCHAN:
                           00000000  0004   134 	.LONG	0	; TTY CHANNEL
                                     0008   135 STAT:
                           00000010  0008   136 	.BLKL	2	; I/O STATUS BLOCK
                                     0010   137 FLAG:
                           00000000  0010   138 	.LONG	0	; FLAG WORD
                                     0014   139 			; BIT0 = DDB FLAG
                                     0014   140 			; BIT1 = FILE NOT FOUND FLAG
                                     0014   141 			;        OR DISK TEST CORRUPTION
                                     0014   142 			; BIT2 = FAB 1 FLAG
                                     0014   143 			; BIT3 = DEVICE NOT ASSIGNABLE
                                     0014   144 			; BIT4 = TESTING ALL DONE
                                     0014   145 			; BIT5 = CONTROL C FLAG
                                     0014   146 ERROR_CNT:		; CUMULATIVE UETINIT01 ERROR COUNT
                           00000000  0014   147 	.LONG	0
                                     0018   148 TYPE:
                                 00  0018   149 	.BYTE	0	; DDB OR UCB FLAG
                                     0019   150 DIEARG:
                           00000000  0019   151 	.LONG	0	; DIE ROUTINE ARGUMENT
                                     001D   152 TAPECHAR:		; TAPE CHARACTERISTICS QUAD WORD
                          00C8 0000  001D   153 	.WORD	0,200
                           00000000  0021   154 	.LONG	0
                                     0025   155 TEST_INDEX:		; INDEX TO DEVICE TEST
                           00000000  0025   156 	.LONG	0
                                     0029   157 ONLINE_TBL:		; TABLE USED FOR DEVICE STATUS BIT SETUP
                           000001B9  0029   158 	.BLKL	100	; BYTE 0-3 CONTAIN THE DEVICE NAME I.E. 'DBA'
                                     01B9   159 			; BYTE 4, BIT0 IS SET IF ANY UCB IS ONLINE
                                     01B9   160 RECORD_BUF:
                           000001EB  01B9   161 	.BLKB	50	; FILE RECORD BUFFER
                                     01EB   162 TEST_BUF:
                           000003EB  01EB   163 	.BLKB	512	; BUFFER FOR TEST DATA
                                     03EB   164 ARGLST:
                           00000413  03EB   165 	.BLKL	10	; ARGUMENT LIST BUFFER
                                     0413   166 TEST_DATA:		; DATA FOR TESTING
                           0000FFFF  0413   167 	A=^XFFFF
                                     0613   174 ;
                                     0613   175 TEST_NAME:		; TEST DEVICE NAME DESCRIPTOR
                           00000004  0613   176 	.LONG	4
                           0000061B' 0617   177 	.ADDRESS NAME
                                     061B   178 NAME:
                           0000061E  061B   179 	.BLKB	3
                                     061E   180 UNIT:
                                 00  061E   181 	.BYTE	0
                                     061F   182 INP_DEV_STR:
                                     061F   183 	STRING	O,12
                           0000000C  061F       	.LONG	12
                           00000627' 0623       	.ADDRESS .+4
                           00000633  0627       	.BLKB	12
                                     0633   184 ;
                                     0633   185 QIO:			; QIO PARAMETER BLOCK
                                     0633   186 	$QIOW	IOSB=STAT
                           0000000C  0633       		.LONG	12
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page   6
1.09            READ/WRITE DATA                                                                                                  (3)

                           00000000  0637       		.LONG	0
                           00000000  063B       		.LONG	0
                           00000000  063F       		.LONG	0
                           00000008' 0643       		.LONG	STAT
                           00000000  0647       		.LONG	0
                           00000000  064B       		.LONG	0
                           00000000  064F       		.LONG	0
                           00000000  0653       		.LONG	0
                           00000000  0657       		.LONG	0
                           00000000  065B       		.LONG	0
                           00000000  065F       		.LONG	0
                           00000000  0663       		.LONG	0
                                     0667   187 ;
                                     0667   188 ;;CR_DATA:
                                     0667   189 ;;	.BLKB	80
                                     0667   190 ;;CR_DATA_LEN=.-CR_DATA
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page   7
1.09            VAX-11 RMS DATA STRUCTURES                                                                                       (3)

                                     0667   192 	.SBTTL	VAX-11 RMS DATA STRUCTURES
                                     0667   193 ;
                                     0667   194 	.ALIGN	LONG
                                     0668   195 	.NLIST	MEB
                                     0668   196 FAB:					; ALLOCATE A FILE ACCESS BLOCK
                                     0668   197 	$FAB-
                                     0668   198 	FAC=<GET,UPD>,-
                                     0668   199 	FNA=FILE_NAME,-
                                     0668   200 	FNS=NAME_SIZE,-
                                     0668   201 	MRS=50,-
                                     0668   202 	ORG=SEQ,-
                                     0668   203 	RAT=CR,-
                                     0668   204 	RFM=VAR
                                     06B8   205 ;
                                     06B8   206 RAB:					; ALLOCATE A RECORD ACCESS BLOCK
                                     06B8   207 	$RAB-
                                     06B8   208 	FAB=FAB,-
                                     06B8   209 	MBF=2,-
                                     06B8   210 	RAC=SEQ,-
                                     06B8   211 	UBF=RECORD_BUF,-
                                     06B8   212 	USZ=132,-
                                     06B8   213 	RSZ=48
                                     06FC   214 ;
                                     06FC   215 FAB1:					; ALLOCATE 2ND FILE ACCESS BLOCK
                                     06FC   216 	$FAB-
                                     06FC   217 	FAC=<PUT,GET>,-
                                     06FC   218 	FNA=FILE_NAME2,-
                                     06FC   219 	FNS=FILE_NAME2_SIZ,-
                                     06FC   220 	MRS=512,-
                                     06FC   221 	ORG=SEQ,-
                                     06FC   222 	RAT=CR,-
                                     06FC   223 	RFM=VAR
                                     074C   224 RAB1:					; ALLOCATE 2ND RECORD ACCESS BLOCK
                                     074C   225 	$RAB-
                                     074C   226 	FAB=FAB1,-
                                     074C   227 	MBF=2,-
                                     074C   228 	RAC=SEQ,-
                                     074C   229 	RBF=TEST_DATA,-
                                     074C   230 	UBF=TEST_BUF,-
                                     074C   231 	USZ=510,-
                                     074C   232 	RSZ=510
                                     0790   233 ;
                                     0790   234 NAME_DES:				; DEVICE STRING DESCRIPTOR
                           00000003  0790   235 	.LONG	3
                           00000798' 0794   236 	.ADDRESS FILE_NAME2
                                     0798   237 FILE_NAME2:				; FILE #2 FILE NAME STRING
                           41 42 44  0798   238 	.ASCII	/DBA/	; DEVICE NAME
                                     079B   239 TST_UNIT:
                                 30  079B   240 	.ASCII	/0/			; UNIT NUMBER
41 44 2E 41 54 41 44 50 54 45 55 3A  079C   241 	.ASCII	/:UETPDATA.DAT/
                                 54  07A8       
                           00000011  07A9   242 	FILE_NAME2_SIZ=.-FILE_NAME2
                                     07A9   243 ;
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page   8
1.09            SUBROUTINES                                                                                                      (3)

                                     07A9   245 	.SBTTL	SUBROUTINES
                                 00000000   246 	.PSECT	INIT01SUB,EXE,NOWRT
                           00000001  0000   247 	.MDELETE STRING
                                     0000   248 	.LIST	MEB
                                     0000   249 ;
                                     0000   250 ; THIS ROUTINE IS EXECUTED IF A VAX-11 RMS ERROR OCCURS.
                                     0000   251 ;
                                     0000   252 RMS_ERR:
                               0FFC  0000   253 	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>   ;ENTRY MASK
   00000010'EF            04     D3  0002   254 	BITL	#BIT2,FLAG			; FAB OR FAB1?
                          27     12  0009   255 	BNEQ	FAB1_SET			; BR IF FAB1
                                     000B   256 FAB_SET:
            10   00000670'EF     E8  000B   257 	BLBS	FAB+FAB$L_STS,1$		; BR IF FAB NOT IN ERROR
            50   00000670'EF     D0  0012   258 	MOVL	FAB+FAB$L_STS,R0		; SAVE STS
            51   00000674'EF     D0  0019   259 	MOVL	FAB+FAB$L_STV,R1		; SAVE STV
                          35     11  0020   260 	BRB	RMS_COM				; GO TO COMMON CODE
                                     0022   261 1$:
            50   000006C0'EF     D0  0022   262 	MOVL	RAB+RAB$L_STS,R0		; SAVE STS
            51   000006C4'EF     D0  0029   263 	MOVL	RAB+RAB$L_STV,R1		; SAVE STV
                          25     11  0030   264 	BRB	RMS_COM				; GO DO COMMON CODE
                                     0032   265 FAB1_SET:
            10   00000704'EF     E8  0032   266 	BLBS	FAB1+FAB$L_STS,1$		; BR IF FAB NOT IN ERROR
            50   00000704'EF     D0  0039   267 	MOVL	FAB1+FAB$L_STS,R0		; SAVE STS
            51   00000708'EF     D0  0040   268 	MOVL	FAB1+FAB$L_STV,R1		; SAVE STV
                          0E     11  0047   269 	BRB	RMS_COM				; GO TO COMMON CODE
                                     0049   270 1$:
            50   00000754'EF     D0  0049   271 	MOVL	RAB1+RAB$L_STS,R0		; SAVE STS
            51   00000758'EF     D0  0050   272 	MOVL	RAB1+RAB$L_STV,R1		; SAVE STV
                                     0057   273 RMS_COM:
   00000000'8F            50     D1  0057   274 	CMPL	R0,#RMS$_FNF			; IS THE FILE THERE?
                          0A     12  005E   275 	BNEQ	1$				; BR IF IT IS
   00000010'EF            02     C8  0060   276 	BISL2	#BIT1,FLAG			; ELSE SET FILE NOT FOUND FLAG
                          00AD   31  0067   277 	BRW	RE4				; AND EXIT IN DISGRACE
                                     006A   278 1$:
   00000000'8F            50     D1  006A   279 	CMPL	R0,#RMS$_EOF			; END OF FILE?
                          3D     12  0071   280 	BNEQ	RE3				; BR ON ANY OTHER ERROR
   00000010'EF            01     D3  0073   281 	BITL	#BIT0,FLAG			; WAS A DDB LAST?
                          2C     13  007A   282 	BEQL	RE2				; BR IF NOT
                 00000014'EF     D6  007C   283 	INCL	ERROR_CNT			; BUMP CUM. ERROR COUNT
                                     0082   284 	PUTMSG	<#UETP$_ERBOX,#1,ERROR_CNT,-
                                     0082   285 		#UETP$_OPENIN,#1,#FILE_NAME_DES> ; REPORT THE ERROR
                 00000000'8F     DD  0082       	  	PUSHL	#FILE_NAME_DES
                          01     DD  0088       	  	PUSHL	#1
                 00000000'8F     DD  008A       	  	PUSHL	#UETP$_OPENIN
                 00000014'EF     DD  0090       	  	PUSHL	ERROR_CNT
                          01     DD  0096       	  	PUSHL	#1
                 00000000'8F     DD  0098       	  	PUSHL	#UETP$_ERBOX
   00000000'9F            06     FB  009E       		CALLS	#$$T1,@#LIB$SIGNAL
                          06FE'  31  00A5   286 	BRW	ERR_EXIT			; EXIT AND ERROR
                                     00A8   287 RE2:
   00000010'EF            10     C8  00A8   288 	BISL2	#BIT4,FLAG			; SET TESTING DONE FLAG
                                 04  00AF   289 	RET					; RETURN TO EXIT
                                     00B0   290 RE3:
                 00000014'EF     D6  00B0   291 	INCL	ERROR_CNT			; BUMP CUM. ERROR COUNT
   00000010'EF            02     C8  00B6   292 	BISL2	#BIT1,FLAG			; SIGNAL CORRUPTION
                                     00BD   293 	PUTMSG	<#UETP$_ERBOX,#1,ERROR_CNT,R0,R1> ; DISPLAY THE ERROR
                          51     DD  00BD       	  	PUSHL	R1
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page   9
1.09            SUBROUTINES                                                                                                      (3)

                          50     DD  00BF       	  	PUSHL	R0
                 00000014'EF     DD  00C1       	  	PUSHL	ERROR_CNT
                          01     DD  00C7       	  	PUSHL	#1
                 00000000'8F     DD  00C9       	  	PUSHL	#UETP$_ERBOX
   00000000'9F            05     FB  00CF       		CALLS	#$$T1,@#LIB$SIGNAL
   00000010'EF            04     D3  00D6   294 	BITL	#BIT2,FLAG			; IS THIS A STRANGE FAB ERROR
                          38     13  00DD   295 	BEQL	RE4				; BR IF NOT
                                     00DF   296 	PUTMSG	<#UETP$_DEUNUS,#3,-
                                     00DF   297 		#TSTNAM,#TEST_NAME,R0>		; SAY DEVICE UNUSABLE
                          50     DD  00DF       	  	PUSHL	R0
                 00000613'8F     DD  00E1       	  	PUSHL	#TEST_NAME
                 00000015'8F     DD  00E7       	  	PUSHL	#TSTNAM
                          03     DD  00ED       	  	PUSHL	#3
                 00000000'8F     DD  00EF       	  	PUSHL	#UETP$_DEUNUS
   00000000'9F            05     FB  00F5       		CALLS	#$$T1,@#LIB$SIGNAL
   00000010'EF            02     C8  00FC   298 	BISL2	#BIT1,FLAG			; ELSE SET THE FILE NOT FOUND BIT
   000001BD'EF            02     88  0103   299 	BISB2	#BIT1,RECORD_BUF+4		; SET OFFLINE BIT
                                     010A   300 	$UPDATE RAB=RAB				; UPDATE UETINIDEV.DAT
                 000006B8'EF     DF  010A       		PUSHAL	RAB
   00000000'9F            01     FB  0110       		CALLS	#$$.TMP1,@#SYS$UPDATE
                                 04  0117   301 RE4:	RET					; RETURN
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  10
1.09            SUBROUTINES                                                                                                      (3)

                                     0118   303 ;
                                     0118   304 ;
                                     0118   305 ; THIS ROUTINE IS USED FOR A SYSTEM SERVICE ERROR.
                                     0118   306 ;
                                     0118   307 DIE:
                 00000014'EF     D6  0118   308 	INCL	ERROR_CNT			; BUMP CUM. ERROR COUNT
                                     011E   309 	PUTMSG	<#UETP$_ERBOX,#1,ERROR_CNT,R0>	; TYPE ERROR MESSAGE
                          50     DD  011E       	  	PUSHL	R0
                 00000014'EF     DD  0120       	  	PUSHL	ERROR_CNT
                          01     DD  0126       	  	PUSHL	#1
                 00000000'8F     DD  0128       	  	PUSHL	#UETP$_ERBOX
   00000000'9F            04     FB  012E       		CALLS	#$$T1,@#LIB$SIGNAL
                          0736'  31  0135   310 	BRW	FINISH_UP			; EXIT IN DISGRACE
                                     0138   311 ;
                                     0138   312 ; THIS ROUTINE HANDLES CONTROL C AST'S.
                                     0138   313 ;
                                     0138   314 CCASTHAND:
                               0FFC  0138   315 	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>
                                     013A   316 	PUTMSG	<#UETP$_TEXT,#1,#CNTRLCMSG>	; TYPE ABORT MESSAGE
                 00000038'8F     DD  013A       	  	PUSHL	#CNTRLCMSG
                          01     DD  0140       	  	PUSHL	#1
                 00000000'8F     DD  0142       	  	PUSHL	#UETP$_TEXT
   00000000'9F            03     FB  0148       		CALLS	#$$T1,@#LIB$SIGNAL
   00000010'EF            20     C8  014F   317 	BISL2	#BIT5,FLAG			; SET CONTROL C FLAG
                                 04  0156   318 	RET					; RETURN
                                     0157   319 ;
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  11
1.09            SUBROUTINES                                                                                                      (3)

                                     0157   321 ;
                                     0157   322 ; THE ASIGNIT SUBROUTINE ASSIGNS THE NEXT DEVICE
                                     0157   323 ; TO BE TESTED TO AN I/O CHANNEL.
                                     0157   324 ;
                                     0157   325 ASIGNIT:
   00000798'EF            03     28  0157   326 	MOVC3	#3,FILE_NAME2,NAME		; SET UP DEVICE NAME
                 0000061B'EF         015E       
   0000061E'EF   0000079B'EF     90  0163   327 	MOVB	TST_UNIT,UNIT			; SET UP UNIT NUMBER
   00000628'EF   0000061B'EF     D1  016E   328 	CMPL	NAME,INP_DEV_STR+9		; IS THIS OUR TTY?
                          5A     13  0179   329 	BEQL	30$				; YES
                                     017B   330 	$ASSIGN_S TEST_NAME,TEST_CHAN		; ASSIGN THE DEVICE
                          7E     7C  017B       		CLRQ	-(SP)
                 00000000'EF     3F  017D       		PUSHAW	TEST_CHAN
                 00000613'EF     7F  0183       		PUSHAQ	TEST_NAME
   00000000'GF            04     FB  0189       		CALLS	#4,G^SYS$ASSIGN
            61            50     E8  0190   331 	BLBS	R0,ASIGN_EXIT			; CHECK FOR ERROR
                                     0193   332 20$:
   00000019'EF            50     D0  0193   333 	MOVL	R0,DIEARG			; SAVE ERROR CODE
                 00000014'EF     D6  019A   334 	INCL	ERROR_CNT			; BUMP CUM. ERROR COUNT
                                     01A0   335 	PUTMSG	<#UETP$_ERBOX,#1,ERROR_CNT,-
                                     01A0   336 		#UETP$_DEUNUS,#3,#TSTNAM,-
                                     01A0   337 		#TEST_NAME,DIEARG,DIEARG>	; PRINT UNUSABLE DEVICE MSG
                 00000019'EF     DD  01A0       	  	PUSHL	DIEARG
                 00000019'EF     DD  01A6       	  	PUSHL	DIEARG
                 00000613'8F     DD  01AC       	  	PUSHL	#TEST_NAME
                 00000015'8F     DD  01B2       	  	PUSHL	#TSTNAM
                          03     DD  01B8       	  	PUSHL	#3
                 00000000'8F     DD  01BA       	  	PUSHL	#UETP$_DEUNUS
                 00000014'EF     DD  01C0       	  	PUSHL	ERROR_CNT
                          01     DD  01C6       	  	PUSHL	#1
                 00000000'8F     DD  01C8       	  	PUSHL	#UETP$_ERBOX
   00000000'9F            09     FB  01CE       		CALLS	#$$T1,@#LIB$SIGNAL
                                     01D5   338 30$:
   00000010'EF            08     C8  01D5   339 	BISL2	#BIT3,FLAG			; SET ERROR RETURN
   000001BD'EF            02     88  01DC   340 	BISB2	#BIT1,RECORD_BUF+4		; SET UNUSABLE BIT IN 'UETINIDEV.DAT'
                                     01E3   341 	$UPDATE	RAB=RAB,ERR=RMS_ERR		; UPDATE FILE 'UETINITDEV.DAT'
                     FE19 CF     DF  01E3       		PUSHAL RMS_ERR
                 000006B8'EF     DF  01E7       		PUSHAL	RAB
   00000000'9F            02     FB  01ED       		CALLS	#$$.TMP1,@#SYS$UPDATE
                                     01F4   342 ASIGN_EXIT:
   00000025'EF            00     D1  01F4   343 	CMPL	#DISK_INDEX,TEST_INDEX		; IS THIS A DISK?
                          0E     12  01FB   344 	BNEQ	10$				; BR IF NOT
                                     01FD   345 	$DASSGN_S	TEST_CHAN		; IF IT IS A DISK, DEASSIGN IT
            7E   00000000'EF     3C  01FD       		MOVZWL	TEST_CHAN,-(SP)
   00000000'GF            01     FB  0204       		CALLS	#1,G^SYS$DASSGN
                                     020B   346 10$:
                                 05  020B   347 	RSB					; RETURN
                                     020C   348 ;
                                     020C   349 ;
                                     020C   350 ; THE DATA ERROR ROUTINE REPORTS DATA ERRORS TO THE USER.
                                     020C   351 ; DEVICE NAME, UNIT NUMBER, BYTE #, GOOD DATA, AND BAD DATA
                                     020C   352 ; ARE ALL REPORTED.
                                     020C   353 ;
                                     020C   354 DATA_ERROR:
                               0F7C  020C   355 	.WORD	^M<R2,R3,R4,R5,R6,R8,R8,R9,R10,R11> ; ENTRY MASK
            50         04 AC     D0  020E   356 	MOVL	4(AP),R0			; GET BYTE # PNTR
            51         08 AC     D0  0212   357 	MOVL	8(AP),R1			; GET BAD DATA PNTR
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  12
1.09            SUBROUTINES                                                                                                      (3)

            53         0C AC     D0  0216   358 	MOVL	^XC(AP),R3			; GET GOOD DATA PNTR
            58   000003EB'EF     DE  021A   359 	MOVAL	ARGLST,R8			; SET ARG. LIST PNTR
   0000079B'EF            30     83  0221   360 	SUBB3	#^A/0/,TST_UNIT,R9		; GET UNIT #
                          59         0228       
            88            59     9A  0229   361 	MOVZBL	R9,(R8)+			; PUT IT IN THE ARG. LIST
       01FE 8F            50     A3  022C   362 	SUBW3	R0,#510,R9			; CONVERT TO OFFSET BYTE
                          59         0231       
            88            59     3C  0232   363 	MOVZWL	R9,(R8)+			; PUT IN THE BYTE #
            88            63     9A  0235   364 	MOVZBL	(R3),(R8)+			; PUT IN THE BAD  DATA
            88            61     9A  0238   365 	MOVZBL	(R1),(R8)+			; PUT IN THE GOOD DATA
                 00000014'EF     D6  023B   366 	INCL	ERROR_CNT			; BUMP THE ERROR COUNT
                                     0241   367 	PUTMSG	<#UETP$_ERBOX,#1,ERROR_CNT,-
                                     0241   368 		#UETP$_DATAER,#5,#NAME_DES,-
                                     0241   369 		ARGLST,ARGLST+4,ARGLST+8,-
                                     0241   370 		ARGLST+12>			; PRINT THE DATA ERROR MSG
                 000003F7'EF     DD  0241       	  	PUSHL	ARGLST+12
                 000003F3'EF     DD  0247       	  	PUSHL	ARGLST+8
                 000003EF'EF     DD  024D       	  	PUSHL	ARGLST+4
                 000003EB'EF     DD  0253       	  	PUSHL	ARGLST
                 00000790'8F     DD  0259       	  	PUSHL	#NAME_DES
                          05     DD  025F       	  	PUSHL	#5
                 00000000'8F     DD  0261       	  	PUSHL	#UETP$_DATAER
                 00000014'EF     DD  0267       	  	PUSHL	ERROR_CNT
                          01     DD  026D       	  	PUSHL	#1
                 00000000'8F     DD  026F       	  	PUSHL	#UETP$_ERBOX
   00000000'9F            0A     FB  0275       		CALLS	#$$T1,@#LIB$SIGNAL
                                 04  027C   371 	RET					; RETURN
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  13
1.09            MAIN LINE CODE                                                                                                   (4)

                                     027D   374 	.SBTTL	MAIN LINE CODE
                                 00000000   375 	.PSECT	UETINIT01,NOWRT,EXE,LONG
                                     0000   376 ;
                                     0000   377 ; THIS MODULE DOES A BASIC TEST OF ALL PERIPHERALS
                                     0000   378 ; IN THE SYSTEM TO SEE IF THEY ARE ONLINE, W/E, 
                                     0000   379 ; AND READY TO RUN UETP.  THIS MODULE WILL NOT
                                     0000   380 ; COMPLETE SUCCESSFULLY UNLESS:
                                     0000   381 ;
                                     0000   382 ;	1) FILE "UETINIDEV.DAT" EXISTS AND IS ACCESSABLE
                                     0000   383 ;	2) ALL DISKS ARE W/E, ONLINE, MOUNTED, AND HAVE THE UETP UFD ESTABLISHED
                                     0000   384 ;	3) ALL MAGTAPES HAVE SCRATCH MEDIA ONLINE, W/E, AT LOAD POINT
                                     0000   385 ;	4) ALL LINEPRINTERS ARE READY AND HAVE PAPER
                                     0000   386 ;	5) ALL TERMINALS ARE ONLINE AND HAVE THE SPEEDS SET CORRECTLY
                                     0000   387 ;;;	  6) CARD READER IS READY AND HAS CARDS
                                     0000   388 ;
                                     0000   389 UETINIT01::
                               0FFC  0000   390 	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; ENTRY MASK
                                     0002   391 	$SETPRN_S	TSTNAM			; SET THE PROCESS NAME
                 00000015'EF     7F  0002       		PUSHAQ	TSTNAM
   00000000'GF            01     FB  0008       		CALLS	#1,G^SYS$SETPRN
                                     000F   392 	SERVCHEK				; CHECK FOR ERROR
            0B            50     E8  000F       30000$:	BLBS	R0,30001$
   00000019'EF         FA AF     DE  0012       	MOVAL	30000$,DIEARG
                          00FB'  31  001A       	BRW	DIE
                                     001D       30001$:
                                     001D   393 	$ASSIGN_S	TTNAM,TTCHAN		; ASSIGN TTY
                          7E     7C  001D       		CLRQ	-(SP)
                 00000004'EF     3F  001F       		PUSHAW	TTCHAN
                 00000026'EF     7F  0025       		PUSHAQ	TTNAM
   00000000'GF            04     FB  002B       		CALLS	#4,G^SYS$ASSIGN
                                     0032   394 	SERVCHEK				; CHECK FOR ERRORS
            0B            50     E8  0032       30002$:	BLBS	R0,30003$
   00000019'EF         FA AF     DE  0035       	MOVAL	30002$,DIEARG
                          00D8'  31  003D       	BRW	DIE
                                     0040       30003$:
                                     0040   395 	PUTMSG	<#UETP$_BEGIND,#2,#TSTNAM,#0>	; PRINT START MSG
                          00     DD  0040       	  	PUSHL	#0
                 00000015'8F     DD  0042       	  	PUSHL	#TSTNAM
                          02     DD  0048       	  	PUSHL	#2
                 00000000'8F     DD  004A       	  	PUSHL	#UETP$_BEGIND
   00000000'9F            04     FB  0050       		CALLS	#$$T1,@#LIB$SIGNAL
                                     0057   396 	$QIOW_S	CHAN=TTCHAN,-
                                     0057   397 		FUNC=#IO$_SETMODE!IO$M_CTRLCAST,-
                                     0057   398 		P1  =CCASTHAND			; ENABLE THE CONTROL C AST'S
                          7E     7C  0057       		CLRQ	-(SP)
                          7E     7C  0059       		CLRQ	-(SP)
                          00     DD  005B       		PUSHL	#0
                 00000138'EF     DF  005D       		PUSHAL	CCASTHAND
                          7E     7C  0063       		CLRQ	-(SP)
                          00     DD  0065       		PUSHL	#0
            7E       0123'8F     3C  0067       		MOVZWL	#IO$_SETMODE!IO$M_CTRLCAST,-(SP)
            7E   00000004'EF     3C  006C       		MOVZWL	TTCHAN,-(SP)
                          00     DD  0073       		PUSHL	#0
   00000000'GF            0C     FB  0075       		CALLS	#12,G^SYS$QIOW
                                     007C   399 	SERVCHEK				; CHECK FOR ERRORS
            0B            50     E8  007C       30004$:	BLBS	R0,30005$
   00000019'EF         FA AF     DE  007F       	MOVAL	30004$,DIEARG
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  14
1.09            MAIN LINE CODE                                                                                                   (4)

                          008E'  31  0087       	BRW	DIE
                                     008A       30005$:
                                     008A   400 	$OPEN	FAB=FAB,ERR=RMS_ERR		; OPEN FILE UETINIDEV.DAT
                 00000000'EF     DF  008A       		PUSHAL RMS_ERR
                 00000668'EF     DF  0090       		PUSHAL	FAB
   00000000'9F            02     FB  0096       		CALLS	#$$.TMP1,@#SYS$OPEN
   00000010'EF            02     D3  009D   401 	BITL	#BIT1,FLAG			; IS THE FILE THERE?
                          18     13  00A4   402 	BEQL	FILE_THERE			; BR IF YES
                                     00A6   403 	PUTMSG	<#UETP$_OPENIN,#1,#FILE_NAME_DES> ; PRINT ERROR MESSAGE
                 00000000'8F     DD  00A6       	  	PUSHL	#FILE_NAME_DES
                          01     DD  00AC       	  	PUSHL	#1
                 00000000'8F     DD  00AE       	  	PUSHL	#UETP$_OPENIN
   00000000'9F            03     FB  00B4       		CALLS	#$$T1,@#LIB$SIGNAL
                          06E8   31  00BB   404 	BRW	ERR_EXIT			; BR TO ERROR EXIT
                                     00BE   405 FILE_THERE:
                                     00BE   406 	$CONNECT	RAB=RAB,ERR=RMS_ERR	; CONNECT THE FAB TO THE RAB
                 00000000'EF     DF  00BE       		PUSHAL RMS_ERR
                 000006B8'EF     DF  00C4       		PUSHAL	RAB
   00000000'9F            02     FB  00CA       		CALLS	#$$.TMP1,@#SYS$CONNECT
   00000010'EF            10     CA  00D1   407 	BICL2	#BIT4,FLAG			; CLEAR THE TESTING DONE FLAG
            56   00000029'EF     DE  00D8   408 	MOVAL	ONLINE_TBL,R6			; SET ONLINE TBL PNTR
                                     00DF   409 	$TRNLOG_S TTNAM,,INP_DEV_STR		; WHO IS TT:?
                          00     DD  00DF       		PUSHL	#0
                          00     DD  00E1       		PUSHL	#0
                          00     DD  00E3       		PUSHL	#0
                 0000061F'EF     7F  00E5       		PUSHAQ	INP_DEV_STR
                          00     DD  00EB       		PUSHL	#0
                 00000026'EF     7F  00ED       		PUSHAQ	TTNAM
   00000000'GF            06     FB  00F3       		CALLS	#6,G^SYS$TRNLOG
                                     00FA   410 	SERVCHEK
            0B            50     E8  00FA       30006$:	BLBS	R0,30007$
   00000019'EF         FA AF     DE  00FD       	MOVAL	30006$,DIEARG
                          0010'  31  0105       	BRW	DIE
                                     0108       30007$:
                                     0108   411 READ:
   00000010'EF            20     D3  0108   412 	BITL	#BIT5,FLAG			; ANY CONTROL C'S?
                          03     13  010F   413 	BEQL	10$				; BR IF NOT
                          0743   31  0111   414 	BRW	LAST_SUC_EXIT			; BR IF YES
                                     0114   415 10$:
            53   000001B9'EF     DE  0114   416 	MOVAL	RECORD_BUF,R3			; GET ADR OF DATA
                                     011B   417 	$GET	RAB=RAB,ERR=RMS_ERR		; GET A RECORD
                 00000000'EF     DF  011B       		PUSHAL RMS_ERR
                 000006B8'EF     DF  0121       		PUSHAL	RAB
   00000000'9F            02     FB  0127       		CALLS	#$$.TMP1,@#SYS$GET
                                     012E   418 READ1:
   00000010'EF            10     D3  012E   419 	BITL	#BIT4,FLAG			; TESTING DONE?
                          03     13  0135   420 	BEQL	1$				; BR IF NOT
                          0686   31  0137   421 	BRW	SUC_EXIT			; ELSE EXIT
                                     013A   422 1$:
   00000018'EF         04 A3     90  013A   423 	MOVB	4(R3),TYPE			; PARSE TYPE
         44 8F            63     91  0142   424 	CMPB	(R3),#^A/D/			; IS THIS A DDB?
                          11     12  0146   425 	BNEQ	10$				; BR IF NOT
   00000798'EF         06 A3     D0  0148   426 	MOVL	6(R3),FILE_NAME2		; PARSE NAME
            86         06 A3     D0  0150   427 	MOVL	6(R3),(R6)+			; PUT NAME IN ONLINE TBL
                       FF A6     94  0154   428 	CLRB	-1(R6)				; CLR ONLINE BYTE
                          0B     11  0157   429 	BRB	20$				; SKIP UNIT #
                                     0159   430 10$:
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  15
1.09            MAIN LINE CODE                                                                                                   (4)

   0000079B'EF         08 A3     90  0159   431 	MOVB	8(R3),TST_UNIT			; SAVE UNIT #
                          011D   31  0161   432 	BRW	UCB				; GOTO UCB ROUTINE
                                     0164   433 20$:
   00000010'EF            00     E3  0164   434 	BBCS	#0,FLAG,40$			; IF DDB NOT SET BR AND SET IT
                          18         016B       
                                     016C   435 	PUTMSG	<#UETP$_READERR,#1,#FILE_NAME_DES> ; PRINT ERROR IN FILE
                 00000000'8F     DD  016C       	  	PUSHL	#FILE_NAME_DES
                          01     DD  0172       	  	PUSHL	#1
                 00000000'8F     DD  0174       	  	PUSHL	#UETP$_READERR
   00000000'9F            03     FB  017A       		CALLS	#$$T1,@#LIB$SIGNAL
                          0622   31  0181   436 	BRW	ERR_EXIT			; EXIT
                                     0184   437 40$:
   00000798'EF       5844 8F     B1  0184   438 	CMPW	#^A/DX/,FILE_NAME2		; IS IT AN RX11?
                          53     13  018D   439 	BEQL	80$				; BR IF YES
   00000798'EF         44 8F     91  018F   440 	CMPB	#^A/D/,FILE_NAME2		; IS THIS A DISK?
                          0A     12  0197   441 	BNEQ	50$				; BR IF NOT
   00000025'EF            00     D0  0199   442 	MOVL	#DISK_INDEX,TEST_INDEX		; SET DISK TEST INDEX
                          FF65   31  01A0   443 	BRW	READ				; GO GET NEXT RECORD
                                     01A3   444 ;
                                     01A3   445 ;
                                     01A3   446 50$:
   00000798'EF       544D 8F     B1  01A3   447 	CMPW	#^A/MT/,FILE_NAME2		; IS THIS A MAGTAPE
                          0A     12  01AC   448 	BNEQ	60$				; BR IF NOT
   00000025'EF            01     D0  01AE   449 	MOVL	#MAGTAPE_INDEX,TEST_INDEX	; SET MAGTAPE TEST INDEX
                          FF50   31  01B5   450 	BRW	READ				; GO GET NEXT RECORD
                                     01B8   451 60$:
   00000798'EF       504C 8F     B1  01B8   452 	CMPW	#^A/LP/,FILE_NAME2		; IS THIS A LINEPRINTER?
                          0A     12  01C1   453 	BNEQ	70$				; BR IF NOT
   00000025'EF            02     D0  01C3   454 	MOVL	#LINEPRINT_INDEX,TEST_INDEX	; SET LINE PRINTER TEST INDEX
                          FF3B   31  01CA   455 	BRW	READ				; GET NEXT RECORD
                                     01CD   456 70$:
   00000798'EF       5454 8F     B1  01CD   457 	CMPW	#^A/TT/,FILE_NAME2		; IS THIS A TTY?
                          0A     12  01D6   458 	BNEQ	75$				; BR IF NOT
   00000025'EF            03     D0  01D8   459 	MOVL	#TTY_INDEX,TEST_INDEX		; SET TTY TEST INDEX
                          FF26   31  01DF   460 	BRW	READ				; GET NEXT RECORD
                                     01E2   461 75$:
                                     01E2   462 ;	CMPW	#^A/CR/,FILE_NAME2		; IS THIS A CARD READER?
                                     01E2   463 ;	BNEQ	80$				; BR IF NOT
                                     01E2   464 ;	MOVL	#CARD_INDEX,TEST_INDEX		; SET CARD TEST INDEX
                                     01E2   465 ;	BRW	READ				; GET NEXT RECORD
                                     01E2   466 ;
                                     01E2   467 ; ALL FCS SUPPORTED DEVICES HAVE BEEN TESTED FOR AT THIS POINT.
                                     01E2   468 ; A DEVICE NOT BEING TESTED MESSAGE WILL BE TYPED FOR ALL OTHERS.
                                     01E2   469 ;
                                     01E2   470 80$:
   00000010'EF            01     CA  01E2   471 	BICL2	#BIT0,FLAG			; CLEAR THE DDB FLAG
   0000061E'EF            20     90  01E9   472 	MOVB	#^A/ /,UNIT			; CLEAR OUT THE UNIT #
   00000798'EF            03     28  01F0   473 	MOVC3	#3,FILE_NAME2,NAME		; GET UNSUPPORTED DEVICE NAME
                 0000061B'EF         01F7       
                                     01FC   474 	PUTMSG	<#UETP$_DENOSU,#2,#TSTNAM,#TEST_NAME> ; PRINT DEVICE NOT SUPPORTED MSG
                 00000613'8F     DD  01FC       	  	PUSHL	#TEST_NAME
                 00000015'8F     DD  0202       	  	PUSHL	#TSTNAM
                          02     DD  0208       	  	PUSHL	#2
                 00000000'8F     DD  020A       	  	PUSHL	#UETP$_DENOSU
   00000000'9F            04     FB  0210       		CALLS	#$$T1,@#LIB$SIGNAL
   000001BD'EF            02     88  0217   475 	BISB2	#BIT1,RECORD_BUF+4		; SET NOT TESTABLE BIT
                                     021E   476 	$UPDATE	RAB=RAB,ERR=RMS_ERR		; UPDATE THE FILE
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  16
1.09            MAIN LINE CODE                                                                                                   (4)

                 00000000'EF     DF  021E       		PUSHAL RMS_ERR
                 000006B8'EF     DF  0224       		PUSHAL	RAB
   00000000'9F            02     FB  022A       		CALLS	#$$.TMP1,@#SYS$UPDATE
                                     0231   477 SKIP_UCB:
                                     0231   478 	$GET	RAB=RAB,ERR=RMS_ERR		; GET THE NEXT RECORD
                 00000000'EF     DF  0231       		PUSHAL RMS_ERR
                 000006B8'EF     DF  0237       		PUSHAL	RAB
   00000000'9F            02     FB  023D       		CALLS	#$$.TMP1,@#SYS$GET
   00000010'EF            10     D3  0244   479 	BITL	#BIT4,FLAG			; TESTING DONE?
                          03     13  024B   480 	BEQL	10$				; BR IF NOT
                          0570   31  024D   481 	BRW	SUC_EXIT			; ELSE BE HAPPY AND LEAVE
                                     0250   482 10$:
         55 8F   000001B9'EF     91  0250   483 	CMPB	RECORD_BUF,#^A/U/		; IS THIS A UCB?
                          0A     13  0258   484 	BEQL	20$				; BR IF YES
            53   000001B9'EF     DE  025A   485 	MOVAL	RECORD_BUF,R3			; RESET RECORD POINTER
                          FECA   31  0261   486 	BRW	READ1				; IF NOT CONTINUE ON
                                     0264   487 20$:
   000001BD'EF            02     88  0264   488 	BISB2	#BIT1,RECORD_BUF+4		; SET OFFLINE BIT
                                     026B   489 	$UPDATE	RAB=RAB,ERR=RMS_ERR		; UPDATE UCB RECORD
                 00000000'EF     DF  026B       		PUSHAL RMS_ERR
                 000006B8'EF     DF  0271       		PUSHAL	RAB
   00000000'9F            02     FB  0277       		CALLS	#$$.TMP1,@#SYS$UPDATE
                          FFB0   31  027E   490 	BRW	SKIP_UCB			; DO THE NEXT ONE
                                     0281   491 ;
                                     0281   492 UCB:
   00000010'EF            01     CA  0281   493 	BICL2	#BIT0,FLAG			; CLR THE DDB FLAG
                 00000157'EF     16  0288   494 	JSB	ASIGNIT				; ASSIGN THE DEVICE
   00000010'EF            08     D3  028E   495 	BITL	#BIT3,FLAG			; DEVICE ASSIGNABLE?
                          0A     13  0295   496 	BEQL	TEST_IT				; BR IF YES
   00000010'EF            08     CA  0297   497 	BICL2	#BIT3,FLAG			; ELSE CLEAR ERROR FLAG
                          FE67   31  029E   498 	BRW	READ				; GO TEST NEXT DEVICE
                                     02A1   499 TEST_IT:
                                     02A1   500 ;;	CASEL	TEST_INDEX,#0,#4		; EXECUTE THE TEST
            00   00000025'EF     CF  02A1   501 	CASEL	TEST_INDEX,#0,#3		; EXECUTE THE TEST
                          03         02A8       
                                     02A9   502 TEST_TABLE:
                               000B' 02A9   503 	.WORD	DISK_TEST-TEST_TABLE
                               0165' 02AB   504 	.WORD	MAGTAPE_TEST-TEST_TABLE
                               03F0' 02AD   505 	.WORD	LINEPRINT_TEST-TEST_TABLE
                               0490' 02AF   506 	.WORD	TTY_TEST-TEST_TABLE
                                     02B1   507 ;;	.WORD	CARD_TEST-TEST_TABLE
                          04F2   31  02B1   508 	BRW	ERR_EXIT
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  17
1.09            DEVICE TESTS                                                                                                     (4)

                                     02B4   510 	.SBTTL	DEVICE TESTS
                                     02B4   511 ;
                                     02B4   512 ; THESE TESTS ARE USED TO QUICKLY SEE IF THE DEVICES IN THE SYSTEM
                                     02B4   513 ; ARE BASICALLY FUNCTIONAL.
                                     02B4   514 ;
                                     02B4   515 ; THIS IS THE DISK TEST
                                     02B4   516 ;
                                     02B4   517 DISK_TEST:
                 00000008'EF     B4  02B4   518 	CLRW	STAT				; CLR SOURCE STRING
   00000008'EF            01     2C  02BA   519 	MOVC5	#1,STAT,#0,#512,TEST_BUF	; CLR READ BUFFER
       0200 8F            00         02C1       
                 000001EB'EF         02C5       
   00000010'EF            04     C8  02CA   520 	BISL2	#BIT2,FLAG			; SET THE FAB1 FLAG
                                     02D1   521 	$CREATE	FAB=FAB1,ERR=RMS_ERR		; CREATE THE FILE ON THE TEST DISK
                 00000000'EF     DF  02D1       		PUSHAL RMS_ERR
                 000006FC'EF     DF  02D7       		PUSHAL	FAB1
   00000000'9F            02     FB  02DD       		CALLS	#$$.TMP1,@#SYS$CREATE
            03            50     E8  02E4   522 	BLBS	R0,10$				; EXIT TEST IF ERRORED
                          010E   31  02E7   523 	BRW	DISK_EXIT			; SHORT BR KLUDGE
                                     02EA   524 10$:
                                     02EA   525 	$CONNECT RAB=RAB1,ERR=RMS_ERR		; CONNECT THE RAB TO THE FAB
                 00000000'EF     DF  02EA       		PUSHAL RMS_ERR
                 0000074C'EF     DF  02F0       		PUSHAL	RAB1
   00000000'9F            02     FB  02F6       		CALLS	#$$.TMP1,@#SYS$CONNECT
            03            50     E8  02FD   526 	BLBS	R0,20$				; EXIT TEST IF ERRORED
                          00F5   31  0300   527 	BRW	DISK_EXIT			; SHORT BR KLUDGE
                                     0303   528 20$:
   00000774'EF   00000413'EF     DE  0303   529 	MOVAL	TEST_DATA,RAB1+RAB$L_RBF	; SET THE BUFFER POINTER
                                     030E   530 	$PUT	RAB=RAB1,ERR=RMS_ERR		; WRITE THE TEST RECORD
                 00000000'EF     DF  030E       		PUSHAL RMS_ERR
                 0000074C'EF     DF  0314       		PUSHAL	RAB1
   00000000'9F            02     FB  031A       		CALLS	#$$.TMP1,@#SYS$PUT
            03            50     E8  0321   531 	BLBS	R0,30$				; EXIT TEST IF ERRORED
                          00D1   31  0324   532 	BRW	DISK_EXIT			; SHORT BR KLUDGE
                                     0327   533 30$:
                                     0327   534 	$CLOSE	FAB=FAB1,ERR=RMS_ERR		; CLOSE THE FILE
                 00000000'EF     DF  0327       		PUSHAL RMS_ERR
                 000006FC'EF     DF  032D       		PUSHAL	FAB1
   00000000'9F            02     FB  0333       		CALLS	#$$.TMP1,@#SYS$CLOSE
            03            50     E8  033A   535 	BLBS	R0,40$				; EXIT TEST IF ERRORED
                          00B8   31  033D   536 	BRW	DISK_EXIT			; SHORT BR KLUDGE
                                     0340   537 40$:
                                     0340   538 	$OPEN	FAB=FAB1,ERR=RMS_ERR		; OPEN THE FILE
                 00000000'EF     DF  0340       		PUSHAL RMS_ERR
                 000006FC'EF     DF  0346       		PUSHAL	FAB1
   00000000'9F            02     FB  034C       		CALLS	#$$.TMP1,@#SYS$OPEN
            03            50     E8  0353   539 	BLBS	R0,50$				; EXIT TEST IF ERRORED
                          009F   31  0356   540 	BRW	DISK_EXIT			; SHORT BR KLUDGE
                                     0359   541 50$:
                                     0359   542 	$CONNECT RAB=RAB1,ERR=RMS_ERR		; RECONNECT THE RAB AND FAB
                 00000000'EF     DF  0359       		PUSHAL RMS_ERR
                 0000074C'EF     DF  035F       		PUSHAL	RAB1
   00000000'9F            02     FB  0365       		CALLS	#$$.TMP1,@#SYS$CONNECT
            03            50     E8  036C   543 	BLBS	R0,60$				; EXIT TEST IF ERRORED
                          0086   31  036F   544 	BRW	DISK_EXIT			; SHORT BR KLUDGE
                                     0372   545 60$:
   00000774'EF   000001EB'8F     D0  0372   546 	MOVL	#TEST_BUF,RAB1+RAB$L_RBF	; POINT TO READ RECORD BUFFER
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  18
1.09            DEVICE TESTS                                                                                                     (4)

                                     037D   547 	$GET	RAB=RAB1,ERR=RMS_ERR		; READ THE RECORD BACK
                 00000000'EF     DF  037D       		PUSHAL RMS_ERR
                 0000074C'EF     DF  0383       		PUSHAL	RAB1
   00000000'9F            02     FB  0389       		CALLS	#$$.TMP1,@#SYS$GET
            03            50     E8  0390   548 	BLBS	R0,70$				; EXIT TEST IF ERRORED
                          0062   31  0393   549 	BRW	DISK_EXIT			; SHORT BR KLUDGE
                                     0396   550 ;
                                     0396   551 70$:
                                     0396   552 	$DISCONNECT	RAB=RAB1,ERR=RMS_ERR 	; DISCONNECT THE RAB
                 00000000'EF     DF  0396       		PUSHAL RMS_ERR
                 0000074C'EF     DF  039C       		PUSHAL	RAB1
   00000000'9F            02     FB  03A2       		CALLS	#$$.TMP1,@#SYS$DISCONNECT
            4C            50     E9  03A9   553 	BLBC	R0,DISK_EXIT			; EXIT TEST IF ERRORED
                                     03AC   554 	$CLOSE	FAB=FAB1,ERR=RMS_ERR		; CLOSE THE FILE
                 00000000'EF     DF  03AC       		PUSHAL RMS_ERR
                 000006FC'EF     DF  03B2       		PUSHAL	FAB1
   00000000'9F            02     FB  03B8       		CALLS	#$$.TMP1,@#SYS$CLOSE
            36            50     E9  03BF   555 	BLBC	R0,DISK_EXIT			; EXIT TEST IF ERRORED
                                     03C2   556 	$ERASE	FAB=FAB1,ERR=RMS_ERR		; DELETE THE FILE
                 00000000'EF     DF  03C2       		PUSHAL RMS_ERR
                 000006FC'EF     DF  03C8       		PUSHAL	FAB1
   00000000'9F            02     FB  03CE       		CALLS	#$$.TMP1,@#SYS$ERASE
            20            50     E9  03D5   557 	BLBC	R0,DISK_EXIT			; EXIT TEST IF ERRORED
   00000010'EF            04     CA  03D8   558 	BICL2	#BIT2,FLAG			; GO BACK TO FAB
   000001EB'EF       01FE 8F     29  03DF   559 	CMPC	#510,TEST_BUF,TEST_DATA		; CHECK THE DATA
                 00000413'EF         03E8       
                          09     13  03ED   560 	BEQL	DISK_EXIT			; BR IF OK
                          0B     BB  03EF   561 	PUSHR	#^M<R0,R1,R3>			; PUSH BYTE # GOOD AND BAD DATA PNTRS
   0000020C'EF            03     FB  03F1   562 	CALLS	#3,DATA_ERROR			; REPORT THE ERROR
                                     03F8   563 DISK_EXIT:
   00000010'EF            04     CA  03F8   564 	BICL2	#BIT2,FLAG			; GO BACK TO FAB STATUS
   00000010'EF            01     E4  03FF   565 	BBSC	#1,FLAG,10$			; IF ERROR BR AND CLEAR IT
                          04         0406       
         FF A6            01     88  0407   566 	BISB2	#BIT0,-1(R6)			; SET # OF DRIVES ONLINE =>1
                                     040B   567 10$:
                          FCFA   31  040B   568 	BRW	READ				; RETURN
                                     040E   569 ;
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  19
1.09            DEVICE TESTS                                                                                                     (4)

                                     040E   571 ;
                                     040E   572 ; THIS IS THE MAGTAPE TEST
                                     040E   573 ;
                                     040E   574 MAGTAPE_TEST:
                 00000008'EF     B4  040E   575 	CLRW	STAT				; MAKE A SOURCE STRING OF 0
   00000008'EF            01     2C  0414   576 	MOVC5	#1,STAT,#0,#512,TEST_BUF	; CLR READ BUFFER
       0200 8F            00         041B       
                 000001EB'EF         041F       
   0000063B'EF   00000000'EF     D0  0424   577 	MOVL	TEST_CHAN,QIO+QIOW$_CHAN	; GET THE CHAN NUMBER
                                     042F   578 ;; NOTE   REWIND MAY NOT DO ANYTHING WITH PHY I/O ON TAPE;;;
   0000063F'EF   00000024'8F     D0  042F   579 	MOVL	#IO$_REWIND,QIO+QIOW$_FUNC	; SET FOR A REWIND
                                     043A   580 	$QIOW_G	QIO				; REWIND
   00000000'GF   00000633'EF     FA  043A       		CALLG	QIO,G^SYS$QIOW
            0A            50     E8  0445   581 	BLBS	R0,5$				; CHECK FOR ERROR
   00000019'EF            50     D0  0448   582 	MOVL	R0,DIEARG			; GET ERROR CODE FROM R0
                          01E1   31  044F   583 	BRW	DEVICE_ERR			; BR IF ERROR
                                     0452   584 5$:
   0000063F'EF   00000023'8F     D0  0452   585 	MOVL	#IO$_SETMODE,QIO+QIOW$_FUNC	; SET QIO FUCTION
   0000064F'EF   0000001D'EF     DE  045D   586 	MOVAL	TAPECHAR,QIO+QIOW$_P1		; SET QIO TAPE CHAR.
   00000000'8F   00000000'8F     F0  0468   587 	INSV	#MT$K_PE_1600,#MT$V_DENSITY,#MT$S_DENSITY,TAPECHAR+4
   00000021'EF         00'8F         0473       
                                     047A   588 	$QIOW_G	QIO				; SET TAPE CHAR
   00000000'GF   00000633'EF     FA  047A       		CALLG	QIO,G^SYS$QIOW
            0A            50     E8  0485   589 	BLBS	R0,10$				; CHECK FOR ERROR
   00000019'EF            50     D0  0488   590 	MOVL	R0,DIEARG			; GET ERROR CODE FROM R0
                          01A1   31  048F   591 	BRW	DEVICE_ERR			; BR IF ERROR
                                     0492   592 10$:
   0000063F'EF   0000000B'8F     D0  0492   593 	MOVL	#IO$_WRITEPBLK,QIO+QIOW$_FUNC	; SET FUNC TO WRITE
   0000064F'EF   00000413'EF     DE  049D   594 	MOVAL	TEST_DATA,QIO+QIOW$_P1		; SET BUFFER ADDRESS
   00000653'EF   00000200 8F     D0  04A8   595 	MOVL	#512,QIO+QIOW$_P2		; SET BUFFER SIZE
                                     04B3   596 	$QIOW_G	QIO				; WRITE THE DATA
   00000000'GF   00000633'EF     FA  04B3       		CALLG	QIO,G^SYS$QIOW
            0A            50     E8  04BE   597 	BLBS	R0,20$				; CHECK FOR ERROR
   00000019'EF            50     D0  04C1   598 	MOVL	R0,DIEARG			; GET ERROR CODE FROM R0
                          0168   31  04C8   599 	BRW	DEVICE_ERR			; BR IF ERROR
                                     04CB   600 20$:
            0E   00000008'EF     E8  04CB   601 	BLBS	STAT,22$			; CHECK IO STATUS RETURN
   00000019'EF   00000008'EF     3C  04D2   602 	MOVZWL	STAT,DIEARG			; REPORT ERROR STATUS
                          0153   31  04DD   603 	BRW	DEVICE_ERR			; BR IF ERROR
                                     04E0   604 22$:
   0000063F'EF   0000004C'8F     D0  04E0   605 	MOVL	#IO$_READPBLK!IO$M_REVERSE,QIO+QIOW$_FUNC ; SET FUNC TO READ REVERSE
   0000064F'EF   000001EB'EF     DE  04EB   606 	MOVAL	TEST_BUF,QIO+QIOW$_P1		; POINT TO NEW BUFFER
                                     04F6   607 	$QIOW_G	QIO				; READ THE RECORD
   00000000'GF   00000633'EF     FA  04F6       		CALLG	QIO,G^SYS$QIOW
            0A            50     E8  0501   608 	BLBS	R0,30$				; CHECK FOR ERROR
   00000019'EF            50     D0  0504   609 	MOVL	R0,DIEARG			; GET ERROR CODE FROM R0
                          0125   31  050B   610 	BRW	DEVICE_ERR			; BR IF ERROR
                                     050E   611 30$:
            0E   00000008'EF     E8  050E   612 	BLBS	STAT,32$			; CHECK IO STATUS RETURN
   00000019'EF   00000008'EF     3C  0515   613 	MOVZWL	STAT,DIEARG			; REPORT ERROR STATUS
                          0110   31  0520   614 	BRW	DEVICE_ERR			; BR IF ERROR
                                     0523   615 32$:
   0000063F'EF   00000024'8F     D0  0523   616 	MOVL	#IO$_REWIND,QIO+QIOW$_FUNC	; SET FOR A REWIND
                                     052E   617 	$QIOW_G	QIO				; REWIND
   00000000'GF   00000633'EF     FA  052E       		CALLG	QIO,G^SYS$QIOW
            0A            50     E8  0539   618 	BLBS	R0,45$				; CHECK FOR ERROR
   00000019'EF            50     D0  053C   619 	MOVL	R0,DIEARG			; GET ERROR CODE FROM R0
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  20
1.09            DEVICE TESTS                                                                                                     (4)

                          00ED   31  0543   620 	BRW	DEVICE_ERR			; BR IF ERROR
                                     0546   621 45$:
   0000063F'EF   00000023'8F     D0  0546   622 	MOVL	#IO$_SETMODE,QIO+QIOW$_FUNC	; SET QIO FUNC
   0000064F'EF   0000001D'EF     DE  0551   623 	MOVAL	TAPECHAR,QIO+QIOW$_P1		; SET PARAMETER PNTR
   00000000'8F   00000000'8F     F0  055C   624 	INSV	#MT$K_NRZI_800,#MT$V_DENSITY,#MT$S_DENSITY,TAPECHAR+4
   00000021'EF         00'8F         0567       
                                     056E   625 	$QIOW_G	QIO				; SET TAPE CHAR
   00000000'GF   00000633'EF     FA  056E       		CALLG	QIO,G^SYS$QIOW
            0A            50     E8  0579   626 	BLBS	R0,40$				; CHECK FOR ERROR
   00000019'EF            50     D0  057C   627 	MOVL	R0,DIEARG			; GET ERROR CODE FROM R0
                          00AD   31  0583   628 	BRW	DEVICE_ERR			; BR IF ERROR
                                     0586   629 40$:
   0000063F'EF   0000000B'8F     D0  0586   630 	MOVL	#IO$_WRITEPBLK,QIO+QIOW$_FUNC	; MUST DO A WRITE FROM
   0000064F'EF   00000413'EF     DE  0591   631 	MOVAL	TEST_DATA,QIO+QIOW$_P1		; BOT TO RESET THE DENSITY
                                     059C   632 	$QIOW_G	QIO				; TO 800 BPI.
   00000000'GF   00000633'EF     FA  059C       		CALLG	QIO,G^SYS$QIOW
            0A            50     E8  05A7   633 	BLBS	R0,46$				; CHECK FOR ERROR
   00000019'EF            50     D0  05AA   634 	MOVL	R0,DIEARG			; GET ERROR CODE FROM R0
                          007F   31  05B1   635 	BRW	DEVICE_ERR			; BR IF ERROR
                                     05B4   636 46$:
            0E   00000008'EF     E8  05B4   637 	BLBS	STAT,48$			; CHECK IO STATUS RETURN
   00000019'EF   00000008'EF     3C  05BB   638 	MOVZWL	STAT,DIEARG			; REPORT ERROR STATUS
                          006A   31  05C6   639 	BRW	DEVICE_ERR			; BR IF ERROR
                                     05C9   640 48$:
   0000063F'EF   00000024'8F     D0  05C9   641 	MOVL	#IO$_REWIND,QIO+QIOW$_FUNC	; SET FUNC TO A REWIND
                                     05D4   642 	$QIOW_G	QIO				; REWIND
   00000000'GF   00000633'EF     FA  05D4       		CALLG	QIO,G^SYS$QIOW
   00000019'EF   00000000'8F     D0  05DF   643 	MOVL	#SS$_DATACHECK,DIEARG
   000001EB'EF       01FE 8F     29  05EA   644 	CMPC3	#510,TEST_BUF,TEST_DATA		; CHECK THE DATA
                 00000413'EF         05F3       
                          07     12  05F8   645 	BNEQ	50$
         FF A6            01     88  05FA   646 	BISB2	#BIT0,-1(R6)			; SAY # OF DRIVES ONLINE =>1
                          0087   31  05FE   647 	BRW	DEVICE_EXIT			; BR IF OK
                                     0601   648 50$:
                          0B     BB  0601   649 	PUSHR	#^M<R0,R1,R3>			; PUSH BYTE # GOOD AND BAD DATA PNTRS
   0000020C'EF            03     FB  0603   650 	CALLS	#3,DATA_ERROR			; REPORT ERROR
                                     060A   651 	PUTMSG	<#UETP$_DEUNUS,#3,#TSTNAM,-
                                     060A   652 		#TEST_NAME,DIEARG,DIEARG>	; REPORT THE ERROR
                 00000019'EF     DD  060A       	  	PUSHL	DIEARG
                 00000019'EF     DD  0610       	  	PUSHL	DIEARG
                 00000613'8F     DD  0616       	  	PUSHL	#TEST_NAME
                 00000015'8F     DD  061C       	  	PUSHL	#TSTNAM
                          03     DD  0622       	  	PUSHL	#3
                 00000000'8F     DD  0624       	  	PUSHL	#UETP$_DEUNUS
   00000000'9F            06     FB  062A       		CALLS	#$$T1,@#LIB$SIGNAL
                          3B     11  0631   653 	BRB	MT1
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  21
1.09            DEVICE TESTS                                                                                                     (4)

                                     0633   655 ;
                                     0633   656 ;
                                     0633   657 DEVICE_ERR:
                 00000014'EF     D6  0633   658 	INCL	ERROR_CNT			; BUMP CUM. ERROR COUNT
                                     0639   659 	PUTMSG	<#UETP$_ERBOX,#1,ERROR_CNT,-
                                     0639   660 		#UETP$_DEUNUS,#3,#TSTNAM,#TEST_NAME,-
                                     0639   661 		DIEARG,DIEARG>			; PRINT ERROR MESSAGE
                 00000019'EF     DD  0639       	  	PUSHL	DIEARG
                 00000019'EF     DD  063F       	  	PUSHL	DIEARG
                 00000613'8F     DD  0645       	  	PUSHL	#TEST_NAME
                 00000015'8F     DD  064B       	  	PUSHL	#TSTNAM
                          03     DD  0651       	  	PUSHL	#3
                 00000000'8F     DD  0653       	  	PUSHL	#UETP$_DEUNUS
                 00000014'EF     DD  0659       	  	PUSHL	ERROR_CNT
                          01     DD  065F       	  	PUSHL	#1
                 00000000'8F     DD  0661       	  	PUSHL	#UETP$_ERBOX
   00000000'9F            09     FB  0667       		CALLS	#$$T1,@#LIB$SIGNAL
                                     066E   662 MT1:
   000001BD'EF            02     88  066E   663 	BISB2	#BIT1,RECORD_BUF+4		; SET NOT TESTABLE BIT
                                     0675   664 	$UPDATE	RAB=RAB,ERR=RMS_ERR		; UPDATE THE UETINIDEV FILE
                 00000000'EF     DF  0675       		PUSHAL RMS_ERR
                 000006B8'EF     DF  067B       		PUSHAL	RAB
   00000000'9F            02     FB  0681       		CALLS	#$$.TMP1,@#SYS$UPDATE
                                     0688   665 DEVICE_EXIT:
                                     0688   666 	$DASSGN_S	TEST_CHAN		; GET RID OF THE CHANNEL
            7E   00000000'EF     3C  0688       		MOVZWL	TEST_CHAN,-(SP)
   00000000'GF            01     FB  068F       		CALLS	#1,G^SYS$DASSGN
                          FA6F   31  0696   667 	BRW	READ				; RETURN
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  22
1.09            DEVICE TESTS                                                                                                     (4)

                                     0699   669 ;
                                     0699   670 ; THIS IS THE LINE PRINTER TEST
                                     0699   671 ;
                                     0699   672 LINEPRINT_TEST:
                                     0699   673 	$SETIMR_S ,TIME,TIME_AST_LP,#1		; SET TIMER TO 60 SEC
                          01     DD  0699       		PUSHL	#1
                 00000788'EF     DF  069B       		PUSHAL	TIME_AST_LP
                 00000030'EF     DF  06A1       		PUSHAL	TIME
                          00     DD  06A7       		PUSHL	#0
   00000000'GF            04     FB  06A9       		CALLS	#4,G^SYS$SETIMR
                                     06B0   674 	SERVCHEK
            0B            50     E8  06B0       30008$:	BLBS	R0,30009$
   00000019'EF         FA AF     DE  06B3       	MOVAL	30008$,DIEARG
                          FA5A'  31  06BB       	BRW	DIE
                                     06BE       30009$:
                                     06BE   675 	$QIO_S	,TEST_CHAN,#IO$_WRITEVBLK,STAT,,,LP_DATA,#LP_DATA_LEN	; PRINT TEST DATA
                          7E     7C  06BE       		CLRQ	-(SP)
                          7E     7C  06C0       		CLRQ	-(SP)
                 00000061 8F     DD  06C2       		PUSHL	#LP_DATA_LEN
                 0000007A'EF     DF  06C8       		PUSHAL	LP_DATA
                          7E     7C  06CE       		CLRQ	-(SP)
                 00000008'EF     7F  06D0       		PUSHAQ	STAT
            7E       0030'8F     3C  06D6       		MOVZWL	#IO$_WRITEVBLK,-(SP)
            7E   00000000'EF     3C  06DB       		MOVZWL	TEST_CHAN,-(SP)
                          00     DD  06E2       		PUSHL	#0
   00000000'GF            0C     FB  06E4       		CALLS	#12,G^SYS$QIO
            0A            50     E8  06EB   676 	BLBS	R0,10$				; CHECK FOR ERROR
   00000019'EF            50     D0  06EE   677 	MOVL	R0,DIEARG			; GET ERROR CODE FROM R0
                          FF3B   31  06F5   678 	BRW	DEVICE_ERR			; BR IF ERROR
                                     06F8   679 10$:
                 00000008'EF     B5  06F8   680 	TSTW	STAT				; IS  I/O DONE?
                          F8     13  06FE   681 	BEQL	10$				; NO, LOOP TILL DONE
       0000'8F   00000008'EF     B1  0700   682 	CMPW	STAT,#SS$_NORMAL		; I/O SUCCESSFUL?
                          0E     13  0709   683 	BEQL	20$				; YES
   00000019'EF   00000008'EF     3C  070B   684 	MOVZWL	STAT,DIEARG			; REPORT ERROR STATUS
                          FF1A   31  0716   685 	BRW	DEVICE_ERR			; NO
                                     0719   686 20$:
                                     0719   687 	$DASSGN_S	TEST_CHAN		; DEASSIGN THE LINE PRINTER
            7E   00000000'EF     3C  0719       		MOVZWL	TEST_CHAN,-(SP)
   00000000'GF            01     FB  0720       		CALLS	#1,G^SYS$DASSGN
                                     0727   688 	$CANTIM_S	#1			; CANCEL TIMER REQUEST
                          00     DD  0727       		PUSHL	#0
                          01     DD  0729       		PUSHL	#1
   00000000'GF            02     FB  072B       		CALLS	#2,G^SYS$CANTIM
                                     0732   689 LP_EXIT:
         FF A6            01     88  0732   690 	BISB2	#BIT0,-1(R6)			; SAY # OF DRIVES ONLINE =>1
                          F9CF   31  0736   691 	BRW	READ				; RETURN
                                     0739   692 ;
                                     0739   693 ;
                                     0739   694 ;;CARD_TEST:
                                     0739   695 ;;	$SETIMR_S ,TIME,TIME_AST_CR,#2		; SET 60 SEC TIMER
                                     0739   696 ;;	SERVCHEK
                                     0739   697 ;;	$QIO_S	,TEST_CHAN,#IO$_READVBLK,STAT,,,CR_DATA,#CR_DATA_LEN	; READ TEST DATA
                                     0739   698 ;;	BLBS	R0,10$				; CHECK FOR ERROR
                                     0739   699 ;;	BRW	DEVICE_ERR			; BR IF ERROR
                                     0739   700 ;;10$:
                                     0739   701 ;;	TSTW	STAT				; IS  I/O DONE?
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  23
1.09            DEVICE TESTS                                                                                                     (4)

                                     0739   702 ;;	BEQL	10$				; NO, LOOP TILL DONE
                                     0739   703 ;;	CMPW	STAT,#SS$_NORMAL		; I/O SUCCESSFUL?
                                     0739   704 ;;	BEQL	20$				; YES
                                     0739   705 ;;	MOVZWL	STAT,DIEARG			; REPORT ERROR STATUS
                                     0739   706 ;;	BRW	DEVICE_ERR			; NO
                                     0739   707 ;;20$:
                                     0739   708 ;;	$DASSGN_S	TEST_CHAN		; DEASSIGN THE CARD READER
                                     0739   709 ;;	$CANTIM_S	#2			; CANCEL TIMER REQUEST
                                     0739   710 ;;CR_EXIT:
                                     0739   711 ;;	BISB2	#BIT0,-1(R6)			; SAY # OF DRIVES ONLINE =>1
                                     0739   712 ;;	BRW	READ				; RETURN
                                     0739   713 ;
                                     0739   714 ;
                                     0739   715 ;
                                     0739   716 ; THIS IS THE TTY TEST
                                     0739   717 ;
                                     0739   718 TTY_TEST:
                                     0739   719 	$OUTPUT	TEST_CHAN,#TT_DATA_LEN,TT_DATA,STAT ; PRINT TEST DATA
                                     0739       	.SAVE
                                 00000050       	.PSECT	$ABS$,ABS
                           00000000  0050       	.=0
                                 00000739       	.RESTORE
                          7E     7C  0739       		CLRQ	-(SP)
                          20     DD  073B       		PUSHL	#32
                          00     DD  073D       		PUSHL	#0
                 00000060 8F     DD  073F       		PUSHL	#TT_DATA_LEN
                 000000DB'EF     DF  0745       		PUSHAL	TT_DATA
                          7E     7C  074B       		CLRQ	-(SP)
                 00000008'EF     7F  074D       		PUSHAQ	STAT
            7E            30     3C  0753       		MOVZWL	#IO$_WRITEVBLK,-(SP)
            7E   00000000'EF     3C  0756       		MOVZWL	TEST_CHAN,-(SP)
                          00     DD  075D       		PUSHL	#0
   00000000'GF            0C     FB  075F       		CALLS	#12,G^SYS$QIOW
            0A            50     E8  0766   720 	BLBS	R0,10$				; CHECK FOR ERROR
   00000019'EF            50     D0  0769   721 	MOVL	R0,DIEARG			; GET ERROR CODE FROM R0
                          FEC0   31  0770   722 	BRW	DEVICE_ERR			; BR IF ERROR
                                     0773   723 10$:
                                     0773   724 	$DASSGN_S	TEST_CHAN		; DEASSIGN THE TTY
            7E   00000000'EF     3C  0773       		MOVZWL	TEST_CHAN,-(SP)
   00000000'GF            01     FB  077A       		CALLS	#1,G^SYS$DASSGN
                                     0781   725 TTY_EXIT:
         FF A6            01     88  0781   726 	BISB2	#BIT0,-1(R6)			; SAY # OF DRIVES ONLINE =>1
                          F980   31  0785   727 	BRW	READ				; RETURN
                                     0788   728 ;
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  24
1.09            DEVICE TESTS                                                                                                     (4)

                                     0788   730 TIME_AST_LP: 
                               0FFC  0788   731 	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; ENTRY MASK
                                     078A   732 	PUTMSG	<#UETP$_TEXT,#1,#OFF_LINE_LP>	; PRINT OFFLINE MSG
                 0000005C'8F     DD  078A       	  	PUSHL	#OFF_LINE_LP
                          01     DD  0790       	  	PUSHL	#1
                 00000000'8F     DD  0792       	  	PUSHL	#UETP$_TEXT
   00000000'9F            03     FB  0798       		CALLS	#$$T1,@#LIB$SIGNAL
                 00000008'EF     B7  079F   733 	DECW	STAT				; FORCE STAT TO NON 0
                                 04  07A5   734 	RET
                                     07A6   735 ;
                                     07A6   736 ;;TIME_AST_CR: 
                                     07A6   737 ;;	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11> ; ENTRY MASK
                                     07A6   738 ;;	PUTMSG	<#UETP$_TEXT,#1,#OFF_LINE_CR>	; PRINT OFFLINE MSG
                                     07A6   739 ;;	DECW	STAT				; FORCE STAT TO NON 0
                                     07A6   740 ;;	RET
                                     07A6   741 ;
                                     07A6   742 ;
                                     07A6   743 ERR_EXIT:
                                     07A6   744 	PUTMSG	<#UETP$_ABENDD,#2,#TSTNAM,#0>	; PRINT ABNORMAL END MSG
                          00     DD  07A6       	  	PUSHL	#0
                 00000015'8F     DD  07A8       	  	PUSHL	#TSTNAM
                          02     DD  07AE       	  	PUSHL	#2
                 00000000'8F     DD  07B0       	  	PUSHL	#UETP$_ABENDD
   00000000'9F            04     FB  07B6       		CALLS	#$$T1,@#LIB$SIGNAL
                          00AE   31  07BD   745 	BRW	FINISH_UP			; EXIT
                                     07C0   746 ;
                                     07C0   747 SUC_EXIT:
                          66     D4  07C0   748 	CLRL	(R6)				; SET END OF ONLINE TBL
   00000010'EF            10     CA  07C2   749 	BICL2	#BIT4,FLAG			; RESET END OF FILE FLAG
            56   00000029'EF     DE  07C9   750 	MOVAL	ONLINE_TBL,R6			; SET ONLINE TABLE PNTR
                                     07D0   751 	$CLOSE	FAB=FAB,ERR=RMS_ERR		; CLOSE THE FILE
                 00000000'EF     DF  07D0       		PUSHAL RMS_ERR
                 00000668'EF     DF  07D6       		PUSHAL	FAB
   00000000'9F            02     FB  07DC       		CALLS	#$$.TMP1,@#SYS$CLOSE
                                     07E3   752 	$OPEN	FAB=FAB,ERR=RMS_ERR		; OPEN TO THE BEGINNING
                 00000000'EF     DF  07E3       		PUSHAL RMS_ERR
                 00000668'EF     DF  07E9       		PUSHAL	FAB
   00000000'9F            02     FB  07EF       		CALLS	#$$.TMP1,@#SYS$OPEN
                                     07F6   753 	$CONNECT RAB=RAB,ERR=RMS_ERR		; RECONNECT THE RAB
                 00000000'EF     DF  07F6       		PUSHAL RMS_ERR
                 000006B8'EF     DF  07FC       		PUSHAL	RAB
   00000000'9F            02     FB  0802       		CALLS	#$$.TMP1,@#SYS$CONNECT
                          66     D5  0809   754 	TSTL	(R6)				; LAST DDB?
                          4A     13  080B   755 	BEQL	LAST_SUC_EXIT			; IF YES BR
                                     080D   756 S2:
                                     080D   757 	$GET	RAB=RAB,ERR=RMS_ERR		; GET A RECORD
                 00000000'EF     DF  080D       		PUSHAL RMS_ERR
                 000006B8'EF     DF  0813       		PUSHAL	RAB
   00000000'9F            02     FB  0819       		CALLS	#$$.TMP1,@#SYS$GET
   00000010'EF            10     D3  0820   758 	BITL	#BIT4,FLAG			; TESTING DONE?
                          2E     12  0827   759 	BNEQ	LAST_SUC_EXIT			; BR IF YES
   000001BD'EF            01     93  0829   760 	BITB	#BIT0,RECORD_BUF+4		; DDB?
                          DB     12  0830   761 	BNEQ	S2				; BR IF NOT
         03 A6            01     93  0832   762 	BITB	#BIT0,3(R6)			; SHOULD IT BE MARKED OFFLINE?
                          1A     12  0836   763 	BNEQ	S3				; BR IF NO
   000001BD'EF            02     88  0838   764 	BISB2	#BIT1,RECORD_BUF+4		; MARK DDB OFFLINE
                                     083F   765 	$UPDATE	RAB=RAB,ERR=RMS_ERR		; UPDATE THE RECORD
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  25
1.09            DEVICE TESTS                                                                                                     (4)

                 00000000'EF     DF  083F       		PUSHAL RMS_ERR
                 000006B8'EF     DF  0845       		PUSHAL	RAB
   00000000'9F            02     FB  084B       		CALLS	#$$.TMP1,@#SYS$UPDATE
                                     0852   766 S3:
                          86     D5  0852   767 	TSTL	(R6)+				; BUMP ONLINE TBL PNTR
                          FFB6   31  0854   768 	BRW	S2				; DO THE NEXT ONE
                                     0857   769 LAST_SUC_EXIT:
                                     0857   770 	PUTMSG	<#UETP$_ENDEDD,#2,#TSTNAM,#0>	; PRINT SUCCESS END MSG
                          00     DD  0857       	  	PUSHL	#0
                 00000015'8F     DD  0859       	  	PUSHL	#TSTNAM
                          02     DD  085F       	  	PUSHL	#2
                 00000000'8F     DD  0861       	  	PUSHL	#UETP$_ENDEDD
   00000000'9F            04     FB  0867       		CALLS	#$$T1,@#LIB$SIGNAL
                                     086E   771 FINISH_UP:
                                     086E   772 	$DISCONNECT	RAB=RAB			; DISCONNECT THE RAB FROM THE FAB
                 000006B8'EF     DF  086E       		PUSHAL	RAB
   00000000'9F            01     FB  0874       		CALLS	#$$.TMP1,@#SYS$DISCONNECT
                                     087B   773 	$CLOSE		FAB=FAB			; CLOSE FILE UETINIDEV.DAT
                 00000668'EF     DF  087B       		PUSHAL	FAB
   00000000'9F            01     FB  0881       		CALLS	#$$.TMP1,@#SYS$CLOSE
                                     0888   774 	$EXIT_S					; EXIT
                          01     DD  0888       		PUSHL	#1
   00000000'GF            01     FB  088A       		CALLS	#1,G^SYS$EXIT
                                     0891   775 ;
                                     0891   776 	.END	UETINIT01
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  26
SYMBOL TABLE                                                                                                                     (4)

$$$CHARS       = 00000016            FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            
$$$STRINGS     = 00000000            FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            
$$.TAB         = 0000074C R     03   FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            
$$.TABEND      = 00000790 R     03   FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            
$$.TMP         = 00000000            FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            
$$.TMP1        = 00000001            FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            
$$.TMP2        = 000000EF            FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            
$$ARGS         = 0000000C            FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            
$$T1           = 00000004            FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            
A              = 0000FEFF            FAB$L_MRN        00000038            FAB$S_ORG      = 00000004            
ARGLST           000003EB R     03   FAB$L_NAM        00000028            FAB$S_PPF_RAT  = 00000008            
ASIGNIT          00000157 R     05   FAB$L_SDC        00000044            FAB$V_BIO      = 00000005            
ASIGN_EXIT       000001F4 R     05   FAB$L_STS        00000008            FAB$V_BLK      = 00000003            
BIT...         = 0000000A            FAB$L_STV        0000000C            FAB$V_BRO      = 00000006            
BIT0           = 00000001            FAB$L_XAB        00000024            FAB$V_CBT      = 00000015            
BIT1           = 00000002            FAB$M_BIO      = 00000020            FAB$V_CIF      = 00000019            
BIT2           = 00000004            FAB$M_BLK      = 00000008            FAB$V_CR       = 00000001            
BIT3           = 00000008            FAB$M_BRO      = 00000040            FAB$V_CTG      = 00000014            
BIT4           = 00000010            FAB$M_CBT      = 00200000            FAB$V_DEL      = 00000002            
BIT5           = 00000020            FAB$M_CIF      = 02000000            FAB$V_DFW      = 00000005            
CCASTHAND        00000138 R     05   FAB$M_CR       = 00000002            FAB$V_DLT      = 0000000F            
CNTRLCMSG        00000038 R     02   FAB$M_CTG      = 00100000            FAB$V_DMO      = 0000000C            
CR             = 0000000D            FAB$M_DEL      = 00000004            FAB$V_ESC      = 0000001B            
DATA_ERROR       0000020C R     05   FAB$M_DFW      = 00000020            FAB$V_EXE      = 00000007            
DEVICE_ERR       00000633 R     06   FAB$M_DLT      = 00008000            FAB$V_FTN      = 00000000            
DEVICE_EXIT      00000688 R     06   FAB$M_DMO      = 00001000            FAB$V_GET      = 00000001            
DIE              00000118 R     05   FAB$M_ESC      = 08000000            FAB$V_INP      = 00000013            
DIEARG           00000019 R     03   FAB$M_EXE      = 00000080            FAB$V_JNL      = 00000016            
DISK_EXIT        000003F8 R     06   FAB$M_FTN      = 00000001            FAB$V_KFO      = 0000001E            
DISK_INDEX     = 00000000            FAB$M_GET      = 00000002            FAB$V_MSE      = 00000004            
DISK_TEST        000002B4 R     06   FAB$M_INP      = 00080000            FAB$V_MXV      = 00000001            
ERROR_CNT        00000014 R     03   FAB$M_JNL      = 00400000            FAB$V_NAM      = 00000018            
ERR_EXIT         000007A6 R     06   FAB$M_KFO      = 40000000            FAB$V_NEF      = 0000000A            
FAB              00000668 R     03   FAB$M_MSE      = 00000010            FAB$V_NFS      = 00000010            
FAB$B_BID        00000000            FAB$M_MXV      = 00000002            FAB$V_NIL      = 00000005            
FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            FAB$V_OFP      = 0000001D            
FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            FAB$V_ORG      = 00000004            
FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            FAB$V_POS      = 00000008            
FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            FAB$V_PPF      = 00000012            
FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            FAB$V_PPF_IND  = 0000000E            
FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            FAB$V_PPF_RAT  = 00000006            
FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            FAB$V_PRN      = 00000002            
FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            FAB$V_PUT      = 00000000            
FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            FAB$V_RCK      = 00000017            
FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            FAB$V_RWC      = 0000000B            
FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            FAB$V_RWO      = 00000007            
FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            FAB$V_SCF      = 0000000E            
FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            FAB$V_SHRDEL   = 00000002            
FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            FAB$V_SHRGET   = 00000001            
FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            FAB$V_SHRPUT   = 00000000            
FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            FAB$V_SHRUPD   = 00000003            
FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            FAB$V_SPL      = 0000000D            
FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            FAB$V_SQO      = 00000006            
FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            FAB$V_SUP      = 00000002            
FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            FAB$V_TEF      = 0000001C            
FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            FAB$V_TMD      = 00000004            
FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            FAB$V_TMP      = 00000003            
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  27
SYMBOL TABLE                                                                                                                     (4)

FAB$V_TRN      = 00000004            IO$M_STARTUP   = 00000040            IO$_OFFSET     = 00000006            
FAB$V_UFM      = 0000001A            IO$M_SYNCH     = 00000200            IO$_PACKACK    = 00000008            
FAB$V_UFO      = 00000011            IO$M_TIMED     = 00000080            IO$_PHYSICAL   = 0000001F            
FAB$V_UPD      = 00000003            IO$M_TRMNOECHO = 00001000            IO$_READHEAD   = 0000000E            
FAB$V_UPI      = 00000006            IO$M_WRTATTN   = 00000100            IO$_READLBLK   = 00000021            
FAB$V_WCK      = 00000009            IO$S_FCODE     = 00000006            IO$_READPBLK   = 0000000C            
FAB$W_BLS        0000003C            IO$V_ABORT     = 00000008            IO$_READPRESET = 00000019            
FAB$W_DEQ        00000014            IO$V_ACCESS    = 00000006            IO$_READPROMPT = 00000037            
FAB$W_IFI        00000002            IO$V_ATTNAST   = 00000008            IO$_READTRACKD = 00000010            
FAB$W_MRS        00000036            IO$V_BINARY    = 00000006            IO$_READVBLK   = 00000031            
FAB1             000006FC R     03   IO$V_CANCTRLO  = 00000006            IO$_RECAL      = 00000003            
FAB1_SET         00000032 R     05   IO$V_COMMOD    = 00000006            IO$_RELEASE    = 00000005            
FAB_SET          0000000B R     05   IO$V_CREATE    = 00000007            IO$_RETCENTER  = 00000007            
FF             = 0000000C            IO$V_CTRLCAST  = 00000008            IO$_REWIND     = 00000024            
FILE_NAME        00000008 R     02   IO$V_CTRLYAST  = 00000007            IO$_REWINDOFF  = 00000022            
FILE_NAME2       00000798 R     03   IO$V_CVTLOW    = 00000008            IO$_SEARCH     = 00000009            
FILE_NAME2_SIZ = 00000011            IO$V_DATACHECK = 0000000E            IO$_SEEK       = 00000002            
FILE_NAME_DES    00000000 R     02   IO$V_DELETE    = 00000008            IO$_SENSECHAR  = 0000001B            
FILE_THERE       000000BE R     06   IO$V_DMOUNT    = 0000000A            IO$_SENSEMODE  = 00000027            
FINISH_UP        0000086E R     06   IO$V_DSABLMBX  = 0000000A            IO$_SETCHAR    = 0000001A            
FLAG             00000010 R     03   IO$V_ENABLMBX  = 00000007            IO$_SETMODE    = 00000023            
GBL...         = 00000000            IO$V_FCODE     = 00000000            IO$_SKIPFILE   = 00000025            
INP_DEV_STR      0000061F R     03   IO$V_HANGUP    = 00000009            IO$_SKIPRECORD = 00000026            
IO$M_ABORT     = 00000100            IO$V_INHERLOG  = 0000000B            IO$_SPACEFILE  = 00000002            
IO$M_ACCESS    = 00000040            IO$V_INHEXTGAP = 0000000C            IO$_SPACERECORD= 00000009            
IO$M_ATTNAST   = 00000100            IO$V_INHRETRY  = 0000000F            IO$_STARTSPNDL = 00000019            
IO$M_BINARY    = 00000040            IO$V_INHSEEK   = 0000000C            IO$_UNLOAD     = 00000001            
IO$M_CANCTRLO  = 00000040            IO$V_INTERRUPT = 00000006            IO$_VIRTUAL    = 0000003F            
IO$M_COMMOD    = 00000040            IO$V_INTSKIP   = 00000008            IO$_WRITECHECK = 0000000A            
IO$M_CREATE    = 00000080            IO$V_MOUNT     = 00000009            IO$_WRITECHECKH= 00000018            
IO$M_CTRLCAST  = 00000100            IO$V_NOECHO    = 00000006            IO$_WRITEHEAD  = 0000000D            
IO$M_CTRLYAST  = 00000080            IO$V_NOFILTR   = 00000009            IO$_WRITELBLK  = 00000020            
IO$M_CVTLOW    = 00000100            IO$V_NOFORMAT  = 00000008            IO$_WRITEMARK  = 0000001C            
IO$M_DATACHECK = 00004000            IO$V_NOW       = 00000006            IO$_WRITEOF    = 00000028            
IO$M_DELETE    = 00000100            IO$V_NOWAIT    = 00000007            IO$_WRITEPBLK  = 0000000B            
IO$M_DMOUNT    = 00000400            IO$V_PACKED    = 00000007            IO$_WRITETRACKD= 0000000F            
IO$M_DSABLMBX  = 00000400            IO$V_PURGE     = 0000000B            IO$_WRITEVBLK  = 00000030            
IO$M_ENABLMBX  = 00000080            IO$V_READATTN  = 00000007            LAST_SUC_EXIT    00000857 R     06   
IO$M_FCODE     = 0000003F            IO$V_REVERSE   = 00000006            LF             = 0000000A            
IO$M_HANGUP    = 00000200            IO$V_SHUTDOWN  = 00000007            LIB$SIGNAL       ********   X   05   
IO$M_INHERLOG  = 00000800            IO$V_STARTUP   = 00000006            LINEPRINT_INDEX= 00000002            
IO$M_INHEXTGAP = 00001000            IO$V_SYNCH     = 00000009            LINEPRINT_TEST   00000699 R     06   
IO$M_INHRETRY  = 00008000            IO$V_TIMED     = 00000007            LP_DATA          0000007A R     02   
IO$M_INHSEEK   = 00001000            IO$V_TRMNOECHO = 0000000C            LP_DATA_LEN    = 00000061            
IO$M_INTERRUPT = 00000040            IO$V_WRTATTN   = 00000008            LP_EXIT          00000732 R     06   
IO$M_INTSKIP   = 00000100            IO$_ACCESS     = 00000032            MAGTAPE_INDEX  = 00000001            
IO$M_MOUNT     = 00000200            IO$_ACPCONTROL = 00000038            MAGTAPE_TEST     0000040E R     06   
IO$M_NOECHO    = 00000040            IO$_CREATE     = 00000033            MT$K_NRZI_800    ********   X   06   
IO$M_NOFILTR   = 00000200            IO$_DEACCESS   = 00000034            MT$K_PE_1600     ********   X   06   
IO$M_NOFORMAT  = 00000100            IO$_DELETE     = 00000035            MT$S_DENSITY     ********   X   06   
IO$M_NOW       = 00000040            IO$_DIAGNOSE   = 0000001D            MT$V_DENSITY     ********   X   06   
IO$M_NOWAIT    = 00000080            IO$_DRVCLR     = 00000004            MT1              0000066E R     06   
IO$M_PACKED    = 00000080            IO$_ERASETAPE  = 00000006            NAME             0000061B R     03   
IO$M_PURGE     = 00000800            IO$_LOGICAL    = 0000002F            NAME_DES         00000790 R     03   
IO$M_READATTN  = 00000080            IO$_MODIFY     = 00000036            NAME_SIZE      = 0000000D            
IO$M_REVERSE   = 00000040            IO$_MOUNT      = 00000039            OFF_LINE_LP      0000005C R     02   
IO$M_SHUTDOWN  = 00000080            IO$_NOP        = 00000000            ONLINE_TBL       00000029 R     03   
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  28
SYMBOL TABLE                                                                                                                     (4)

QIO              00000633 R     03   RAB$M_LOC      = 00010000            READ             00000108 R     06   
QIOW$_ASTADR   = 00000014            RAB$M_MAS      = 00000020            READ1            0000012E R     06   
QIOW$_ASTPRM   = 00000018            RAB$M_NLK      = 00100000            RECORD_BUF       000001B9 R     03   
QIOW$_CHAN     = 00000008            RAB$M_NXR      = 00800000            RMS$_EOF         ********   X   05   
QIOW$_EFN      = 00000004            RAB$M_PMT      = 40000000            RMS$_FNF         ********   X   05   
QIOW$_FUNC     = 0000000C            RAB$M_PPF_IND  = 00004000            RMS_COM          00000057 R     05   
QIOW$_IOSB     = 00000010            RAB$M_PPF_RAT  = 00003FC0            RMS_ERR          00000000 R     05   
QIOW$_NARGS    = 0000000C            RAB$M_PTA      = 20000000            S2               0000080D R     06   
QIOW$_P1       = 0000001C            RAB$M_RAH      = 00000200            S3               00000852 R     06   
QIOW$_P2       = 00000020            RAB$M_RLK      = 00080000            SKIP_UCB         00000231 R     06   
QIOW$_P3       = 00000024            RAB$M_RNE      = 01000000            SS$_DATACHECK    ********   X   06   
QIOW$_P4       = 00000028            RAB$M_RNF      = 08000000            SS$_NORMAL       ********   X   06   
QIOW$_P5       = 0000002C            RAB$M_TMO      = 02000000            STAT             00000008 R     03   
QIOW$_P6       = 00000030            RAB$M_TPT      = 00000002            SUC_EXIT         000007C0 R     06   
RAB              000006B8 R     03   RAB$M_UIF      = 00000010            SYS$ASSIGN       ********   X   05   
RAB$B_BID        00000000            RAB$M_ULK      = 00040000            SYS$CANTIM       ********   X   06   
RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            SYS$CLOSE        ********  GX   06   
RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            SYS$CONNECT      ********  GX   06   
RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            SYS$CREATE       ********  GX   06   
RAB$B_MBC        00000037            RAB$V_ASY      = 00000000            SYS$DASSGN       ********   X   05   
RAB$B_MBF        00000036            RAB$V_BIO      = 0000000B            SYS$DISCONNECT   ********  GX   06   
RAB$B_PSZ        00000034            RAB$V_CCO      = 0000001F            SYS$ERASE        ********  GX   06   
RAB$B_RAC        0000001E            RAB$V_CVT      = 0000001A            SYS$EXIT         ********   X   06   
RAB$B_ROP1       00000005            RAB$V_EOF      = 00000008            SYS$GET          ********  GX   06   
RAB$B_ROP2       00000006            RAB$V_FDL      = 00000006            SYS$OPEN         ********  GX   06   
RAB$B_ROP3       00000007            RAB$V_HSH      = 00000007            SYS$PUT          ********  GX   06   
RAB$B_TMO        0000001F            RAB$V_KGE      = 00000015            SYS$QIO          ********   X   06   
RAB$C_BID      = 00000001            RAB$V_KGT      = 00000016            SYS$QIOW         ********   X   06   
RAB$C_BLN        00000044            RAB$V_LIM      = 0000000E            SYS$SETIMR       ********   X   06   
RAB$C_KEY      = 00000001            RAB$V_LOA      = 0000000D            SYS$SETPRN       ********   X   06   
RAB$C_RFA      = 00000002            RAB$V_LOC      = 00000010            SYS$TRNLOG       ********   X   06   
RAB$C_SEQ      = 00000000            RAB$V_MAS      = 00000005            SYS$UPDATE       ********  GX   05   
RAB$K_BLN        00000044            RAB$V_NLK      = 00000014            TAPECHAR         0000001D R     03   
RAB$L_BKT        00000038            RAB$V_NXR      = 00000017            TEST_BUF         000001EB R     03   
RAB$L_CTX        00000018            RAB$V_PMT      = 0000001E            TEST_CHAN        00000000 R     03   
RAB$L_DCT        00000038            RAB$V_PPF_IND  = 0000000E            TEST_DATA        00000413 R     03   
RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            TEST_INDEX       00000025 R     03   
RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            TEST_IT          000002A1 R     06   
RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            TEST_NAME        00000613 R     03   
RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            TEST_TABLE       000002A9 R     06   
RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            TIME             00000030 R     02   
RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            TIME_AST_LP      00000788 R     06   
RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            TSTNAM           00000015 R     02   
RAB$L_STS        00000008            RAB$V_TPT      = 00000001            TST_UNIT         0000079B R     03   
RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            TTCHAN           00000004 R     03   
RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            TTNAM            00000026 R     02   
RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            TTY_EXIT         00000781 R     06   
RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            TTY_INDEX      = 00000003            
RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            TTY_TEST         00000739 R     06   
RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            TT_DATA          000000DB R     02   
RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            TT_DATA_LEN    = 00000060            
RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            TYPE             00000018 R     03   
RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            UCB              00000281 R     06   
RAB$M_KGE      = 00200000            RAB1             0000074C R     03   UETINIT01        00000000 RG    06   
RAB$M_KGT      = 00400000            RE2              000000A8 R     05   UETP$_ABENDD     ********   X   06   
RAB$M_LIM      = 00004000            RE3              000000B0 R     05   UETP$_BEGIND     ********   X   06   
RAB$M_LOA      = 00002000            RE4              00000117 R     05   UETP$_DATAER     ********   X   05   
UETINIT01       VAX/VMS UETP QUICK PERIPHERAL CHECK              22-AUG-1978 03:16:10   VAX-11 MACRO X0.3-11               Page  29
SYMBOL TABLE                                                                                                                     (4)

UETP$_DENOSU     ********   X   06   
UETP$_DEUNUS     ********   X   05   
UETP$_ENDEDD     ********   X   06   
UETP$_ERBOX      ********   X   05   
UETP$_OPENIN     ********   X   05   
UETP$_READERR    ********   X   06   
UETP$_TEXT       ********   X   05   
UNIT             0000061E R     03   


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
RODATA           0000013B      02     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD  NOWRT BYTE  
RWDATA           000007A9      03     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD    WRT LONG  
$ABS$            00000050      04     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
INIT01SUB        0000027D      05     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  
UETINIT01        00000891      06     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT LONG  


THERE WERE NO ERRORS OR WARNINGS.
3290. BYTES LEFT IN FREE MEMORY POOL.
2250. BYTES OF RECLAIMED MEMORY.
OBJ$:UETINIT01,LIS$:UETINIT01/-SP=SRC$:UETPLIBS,UETINIT01
114 MLB DIR RDS - 960 GETS TO DEFINE 56 MACROS. 173 INTER. FILE WRITES. 
