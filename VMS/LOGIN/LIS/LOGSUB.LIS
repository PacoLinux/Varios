LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      39  DECLARATIONS
   (3)     165  INPUT OPTION ROUTINE
   (5)     300  LOGOUT MESSAGE
   (6)     341  LINE INPUT
   (7)     377  LOGIN FATAL EXCEPTION ROUTINE
   (8)     416  LOGIN FATAL ERROR ROUTINE
   (9)     445  LOGIN MESSAGE OUTPUT SUBROUTINE
   (10)    481  LOGIN FORMAT AND OUTPUT MESSAGE SUBROUTINE
   (11)    539  LGI$CHK_JOBCNT - CHECK CURRENT JOB COUNT
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	LOGSUB - LOGIN SUBROUTINES
                                     0000     2 	.IDENT	/01/
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ;			  COPYRIGHT (c) 1977 BY
                                     0000     6 ;	      DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
                                     0000     9 ; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
                                     0000    10 ; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
                                     0000    11 ; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
                                     0000    12 ; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
                                     0000    13 ; TRANSFERRED.
                                     0000    14 ;
                                     0000    15 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
                                     0000    16 ; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
                                     0000    17 ; CORPORATION.
                                     0000    18 ;
                                     0000    19 ; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
                                     0000    20 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
                                     0000    21 ;
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY:	SYSTEM UTILITY PROGRAM
                                     0000    25 ;
                                     0000    26 ; ABSTRACT:	LOGIN SUBROUITNES
                                     0000    27 ;
                                     0000    28 ;
                                     0000    29 ; ENVIRONMENT:	NATIVE MODE PRIVILEGED PROCEEDURE
                                     0000    30 ;
                                     0000    31 ; AUTHOR:	W. H. BROWN, CREATION DATE: 8-AUG-1977
                                     0000    32 ;
                                     0000    33 ; MODIFIED BY:
                                     0000    34 ;
                                     0000    35 ;	, : VERSION
                                     0000    36 ; 01	- 
                                     0000    37 ;--
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page   2
01              DECLARATIONS                                                                                                     (2)

                                     0000    39 	.SBTTL	DECLARATIONS
                                     0000    40 ;
                                     0000    41 ; INCLUDE FILES:
                                     0000    42 ;
                                     0000    43 ;
                                     0000    44 ; MACROS:
                                     0000    45 ;
                                     0000    46 ; MACRO TO DEFINE AN OPTION FOR LOGIN
                                     0000    47 ;
                                     0000    48 	.MACRO	DEFOPT OPT,PLC
                                     0000    49 	.SAVE
                                     0000    50 	.PSECT	OPTNAM
                                     0000    51 	.IIF B	<OPT>, .ERROR		;NO OPTION SPECIFIED
                                     0000    52 	.NCHR	$$$,OPT
                                     0000    53 	.IIF	GT	$$$-4,	.ERROR	;OPTION NAME TOO LONG
                                     0000    54 $XX$=128
                                     0000    55 	.IRPC	$YY$,<OPT>
                                     0000    56 	.BYTE	^A/$YY$/!$XX$
                                     0000    57 $XX$=0
                                     0000    58 	.ENDR
                                     0000    59 	.REPT	4-$$$
                                     0000    60 	.ASCII	/ /
                                     0000    61 	.ENDR
                                     0000    62 	.RESTORE
                                     0000    63 	.WORD	PLC-LGI_OPT
                                     0000    64 	.ENDM	DEFOPT
                                     0000    65  
                                     0000    66 ;
                                     0000    67 ; MACRO TO GENERATE A ENTRY IN THE JPI ARG LIST
                                     0000    68 ;
                                     0000    69  
                                     0000    70 	.MACRO	JPITEM	NAME,TYPE=L,SIZE=4,RETSIZ=0
                                     0000    71 	.WORD	SIZE,JPI$_'NAME
                                     0000    72 	.LONG	LGI_'TYPE'_'NAME,RETSIZ
                                     0000    73 	.ENDM
                                     0000    74  
                                     0000    75 ;
                                     0000    76 ; EQUATED SYMBOLS:
                                     0000    77 ;
                                     0000    78 	LGIWRKDEF			; LOGIN WORK AREA
                                     0000    79 	DEFPRCWRK			; PROCESS WORK AREA
                                     0000    80 	IDFDEF				; DEFINE INDIRECT STACK OFFSETS
                                     0000    81 	$RABDEF				; RMS RAB DEFINITIONS
                                     0000    82 	$FABDEF				; RMS FAB DEFINITIONS
                                     0000    83 	$NAMDEF				; RMS NAME BLOCK DEFINITIONS
                                     0000    84 	$JPIDEF				; GET JOB/PROCESS INFORMATION
                                     0000    85 	$CHFDEF				; CONDITION HANDLER FRAME DEFINITIONS
                                     0000    86 	$PRVDEF				; DEFINE PRIVILEGES
                                     0000    87 	$UAFDEF				; DEFINE USER ACCOUNTING RECORD
                                     0000    88  
                                     0000    89  
                                     0000    90 ;
                                     0000    91 ; OWN STORAGE:
                                     0000    92 ;
                                     0000    93  
                                 00000000    94 	.PSECT	RWDATA	RD,WRT,LONG
                                     0000    95  
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page   3
01              DECLARATIONS                                                                                                     (2)

                                     0000    96 LGI_L_BUFIO:				; BUFFERED IO COUNT
                           00000004  0000    97 	.BLKL	1			;
                                     0004    98 LGI_L_WSPEAK:				; PEAK WORKING SET
                           00000008  0004    99 	.BLKL	1			;
                                     0008   100 LGI_L_DIRIO:				; DIRECT IO COUNT
                           0000000C  0008   101 	.BLKL	1			;
                                     000C   102 LGI_L_VIRTPEAK:				; PEAK VIRTUAL SIZE
                           00000010  000C   103 	.BLKL	1			;
                                     0010   104 LGI_L_PAGEFLTS:				; NUMBER OF PAGE FAULTS
                           00000014  0010   105 	.BLKL	1			;
                                     0014   106 LGI_L_VOLUMES:				; COUNT OF VOLUMES MOUNTED
                           00000018  0014   107 	.BLKL	1			;
                           00000020' 0018   108 	.LONG	LGI_Q_CPUTIM		; POINTER FOR FAO TIME
                           00000028' 001C   109 	.LONG	LGI_Q_LOGINTIM		; AND THE SAME FOR LOGIN TIME
                                     0020   110 LGI_Q_CPUTIM:				; COMPUTED CPU TIME
                           00000028  0020   111 	.BLKQ	1			;
                                     0028   112 LGI_Q_LOGINTIM:				; TIME JOB STARTED
                           00000030  0028   113 	.BLKQ	1			; TO COMPUTE CONNECT TIME
                                     0030   114 LGI_Q_CURTIM:				; CURRENT TIME
                           00000038  0030   115 	.BLKQ	1			;
                                     0038   116  
                                 00000000   117 	.PSECT	PURE	RD,NOWRT,BYTE
                                     0000   118 	.LIST	MEB
                                     0000   119  
                                     0000   120 LGI_G_GETJPI:				; GET JPI ARGUMENT BLOCK
                                     0000   121 	JPITEM	BUFIO			; BUFFERED IO COUNT
                          040C 0004  0000       	.WORD	4,JPI$_BUFIO
                  00000000 00000000' 0004       	.LONG	LGI_L_BUFIO,0
                                     000C   122 	JPITEM	WSPEAK			; PEAK WORKING SET
                          0201 0004  000C       	.WORD	4,JPI$_WSPEAK
                  00000000 00000004' 0010       	.LONG	LGI_L_WSPEAK,0
                                     0018   123 	JPITEM	DIRIO			; DIRECT IO COUNT
                          040B 0004  0018       	.WORD	4,JPI$_DIRIO
                  00000000 00000008' 001C       	.LONG	LGI_L_DIRIO,0
                                     0024   124 	JPITEM	VIRTPEAK		; HIGHEST PAGE COUNT
                          0200 0004  0024       	.WORD	4,JPI$_VIRTPEAK
                  00000000 0000000C' 0028       	.LONG	LGI_L_VIRTPEAK,0
                                     0030   125 	JPITEM	PAGEFLTS		; COUNT OF PAGE FAULTS
                          040A 0004  0030       	.WORD	4,JPI$_PAGEFLTS
                  00000000 00000010' 0034       	.LONG	LGI_L_PAGEFLTS,0
                                     003C   126 	JPITEM	VOLUMES			; COUNT OF VOLUMES MOUNTED
                          0205 0004  003C       	.WORD	4,JPI$_VOLUMES
                  00000000 00000014' 0040       	.LONG	LGI_L_VOLUMES,0
                                     0048   127 	JPITEM	CPUTIM,Q		; COMPUTED CPU TIME
                          0407 0004  0048       	.WORD	4,JPI$_CPUTIM
                  00000000 00000020' 004C       	.LONG	LGI_Q_CPUTIM,0
                                     0054   128 	JPITEM	LOGINTIM,Q,8		; CONNECT TIME COMUTED HERE
                          0206 0008  0054       	.WORD	8,JPI$_LOGINTIM
                  00000000 00000028' 0058       	.LONG	LGI_Q_LOGINTIM,0
                           00000000  0060   129 	.LONG	0			;
                                     0064   130 	.NLIST	MEB
                                     0064   131  
                                     0064   132  
                  0000006C'00000014' 0064   133 LOGERR:	.LONG	20$-10$,10$
41 21 20 2D 20 4E 49 47 4F 4C 20 20  006C   134 10$:	.ASCII	\  LOGIN - !AC error \
            20 72 6F 72 72 65 20 43  0078       
                                     0080   135 20$:
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page   4
01              DECLARATIONS                                                                                                     (2)

                                     0080   136  
                  00000088'00000010' 0080   137 LOGOUT:	.LONG	20$-10$,10$
74 61 20 43 41 21 20 44 41 21 20 20  0088   138 10$:	.ASCII	\  !AD !AC at !%D\
                        44 25 21 20  0094       
                                     0098   139 20$:
   74 75 6F 20 64 65 67 67 6F 6C 00' 0098   140 INTOUT:	.ASCIC	\logged out\
                                 0A  0098       
61 6E 69 6D 72 65 74 20 62 6F 6A 00' 00A3   141 BATOUT:	.ASCIC	\job terminated\
                           64 65 74  00AF       
                                 0E  00A3       
                                     00B2   142  
                                     00B2   143 LGI_G_FAOLST:
                  000000D6'00000053' 00B2   144 	.LONG	20$-10$,10$		; FIRST FAO STRING
                  00000129'00000036' 00BA   145 	.LONG	30$-20$,20$		; SECOND
                  0000015F'00000036' 00C2   146 	.LONG	40$-30$,30$		; ETC
                  00000195'0000002C' 00CA   147 	.LONG	50$-40$,40$		; LAST FAO STRING
                           00000000  00D2   148 	.LONG	0			; END OF LIST
69 74 6E 75 6F 63 63 41 20 20 2F 21  00D6   149 10$:	.ASCII	\!/  Accounting information:!/\
69 74 61 6D 72 6F 66 6E 69 20 67 6E  00E2       
                     2F 21 3A 6E 6F  00EE       
49 20 64 65 72 65 66 66 75 42 20 20  00F3   150 	.ASCII	\  Buffered I/O count:!13UL!_Peak working set size:!6UL\
33 31 21 3A 74 6E 75 6F 63 20 4F 2F  00FF       
72 6F 77 20 6B 61 65 50 5F 21 4C 55  010B       
7A 69 73 20 74 65 73 20 67 6E 69 6B  0117       
                  4C 55 36 21 3A 65  0123       
4F 2F 49 20 74 63 65 72 69 44 20 20  0129   151 20$:	.ASCII	\  Direct I/O count:  !13UL!_Peak virtual size:    !6UL\
33 31 21 20 20 3A 74 6E 75 6F 63 20  0135       
72 69 76 20 6B 61 65 50 5F 21 4C 55  0141       
20 20 3A 65 7A 69 73 20 6C 61 75 74  014D       
                  4C 55 36 21 20 20  0159       
74 6C 75 61 66 20 65 67 61 50 20 20  015F   152 30$:	.ASCII	\  Page faults:       !13UL!_Mounted volumes:      !6UL\
33 31 21 20 20 20 20 20 20 20 3A 73  016B       
20 64 65 74 6E 75 6F 4D 5F 21 4C 55  0177       
20 20 20 20 3A 73 65 6D 75 6C 6F 76  0183       
                  4C 55 36 21 20 20  018F       
50 43 20 64 65 73 70 61 6C 45 20 20  0195   153 40$:	.ASCII	\  Elapsed CPU time:  !%D!_Elapsed time:  !%D\
44 25 21 20 20 3A 65 6D 69 74 20 55  01A1       
69 74 20 64 65 73 70 61 6C 45 5F 21  01AD       
            44 25 21 20 20 3A 65 6D  01B9       
                                     01C1   154 50$:
                                     01C1   155  
                                 00000000   156 	.PSECT	OPTNAM	RD,NOWRT,BYTE
                                     0000   157 LGI$G_OPTNAM:				; START OF OPTION NAME AREA
                                     0000   158  
                                 00000000   159 	.PSECT	OPTNAN	RD,NOWRT,BYTE
                                     0000   160  
                                     0000   161 LGI$G_OPTEND:
                                 000001C1   162 	.PSECT	PURE
                                     01C1   163  
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page   5
01              INPUT OPTION ROUTINE                                                                                             (3)

                                     01C1   165 	.SBTTL	INPUT OPTION ROUTINE
                                     01C1   166 ;++
                                     01C1   167 ; FUNCTIONAL DESCRIPTION:
                                     01C1   168 ;
                                     01C1   169 ;	THIS ROUTINE IS CALLED TO PARSE OPTIONS INPUT TO LOGIN.
                                     01C1   170 ;	THE NEXT BYTE IN THE COMMAND IS CHECKED FOR SPACE.  IF
                                     01C1   171 ;	NOT, A SUCESSFUL RETURN IS MADE, ELSE THE OPTION IS
                                     01C1   172 ;	PARSED AND DECODE IS TRIED.  IF RECOGNIZED, THE OPTION
                                     01C1   173 ;	IS PROCESSED, ELSE AN ERROR RETURN IS MADE.
                                     01C1   174 ;
                                     01C1   175 ; CALLING SEQUENCE:
                                     01C1   176 ;
                                     01C1   177 ;	BSBW	LGI$GETOPT		;
                                     01C1   178 ;
                                     01C1   179 ; INPUT PARAMETERS:
                                     01C1   180 ;
                                     01C1   181 ;	R6 CONTAINS THE ADDRESS OF THE NEXT BYTE ON THE INPUT LINE.
                                     01C1   182 ;	AP HAS ADDRESS OF WORK AREA.
                                     01C1   183 ;
                                     01C1   184 ; OUTPUT PARAMETERS:
                                     01C1   185 ;
                                     01C1   186 ;	ALL OPTIONS ARE PROCESSED AND R6 POINTS AT FIRST CHARACTER
                                     01C1   187 ;	AFTER THE OPTIONS.
                                     01C1   188 ;
                                     01C1   189 ; COMPLETION CODES:
                                     01C1   190 ;
                                     01C1   191 ;	R0 HAS TRUE OF FALSE IF ERROR.
                                     01C1   192 ;	R1 HAS ADDRESS OF ERROR MESSAGE ADDRESS IF ERROR.
                                     01C1   193 ;--
                                     01C1   194 	.ENABL	LSB
                                     01C1   195  
                                     01C1   196 LGI$GETOPT::				; GET OPTIONS
         10 AC            5E     D0  01C1   197 	MOVL	SP,LGI$L_SAVSP(AP)	; MARK THE STACK
            50            01     D0  01C5   198 10$:	MOVL	#1,R0			; ASSUME ALL IS WELL
            66            2F     91  01C8   199 	CMPB	#^A\/\,(R6)		; OPTION NEXT?
                          7A     12  01CB   200 	BNEQ	90$			; BR IF NO
                                     01CD   201 	NXTOKEN				; ISLOTATE TOKEN
                          52     13  01D0   202 	BEQL	OPTSYN			; BR IF SYNTAX ERROR
            54            53     7D  01D2   203 	MOVQ	R3,R4			; COPY TO NON-VOLITLE REGISTERS
            50            04     D0  01D5   204 	MOVL	#4,R0			; SET MAXIMUM LENGTH
            50            54     91  01D8   205 	CMPB	R4,R0			; TOKEN SMALLER THAN 4?
                          03     1A  01DB   206 	BGTRU	20$			; BR IF NO-ONLY MATCH 4
            50            54     D0  01DD   207 	MOVL	R4,R0			; SET LENGTH TO MATCH
            65         80 8F     88  01E0   208 20$:	BISB	#^X80,(R5)		; SET FIRST BYTE FLAG
            65            50     39  01E4   209 	MATCHC	R0,(R5),S^#<LGI$G_OPTEND-LGI$G_OPTNAM>,W^LGI$G_OPTNAM ;
       0000'CF            00'        01E7       
                                     01EB   210 					; DECODE OPTION TYPE
                          1D     12  01EB   211 	BNEQ	50$			; BR IF UNRECOGNIZED OPTION
            52            54     C0  01ED   212 	ADDL	R4,R2			; NUMBER OF BYTES LEFT INCULDING OPTION
            52            04     C6  01F0   213 	DIVL	#4,R2			; FIND COPLEMENT OPTION NUMBER
            00'           52     C3  01F3   214 	SUBL3	R2,S^#<<LGI$G_OPTEND-LGI$G_OPTNAM>/4>,R2 ; FIND OPTION INDEX
                          52         01F6       
                       CB AF     9F  01F7   215 	PUSHAB	10$			; RETURN ADDRESS FOR OPTION PROCESSING
            00            52     AF  01FA   216 	CASEW	R2,#0,S^#<<<50$-LGI_OPT>/2>-1>
                          05'        01FD       
                                     01FE   217 LGI_OPT:DEFOPT	ACCO,GETACNT		; ACCOUNT
                                     0200   218 	DEFOPT	CLI,GETCLI		; SELECT CLI NAME
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page   6
01              INPUT OPTION ROUTINE                                                                                             (3)

                                     0202   219 	DEFOPT	DISK,GETDISK		; SELECT LOGICAL NAME FOR DISK
                                     0204   220 	DEFOPT	HELP,GETHELP		; ASK FOR HELP
                                     0206   221 	DEFOPT	WRIT,SETWRIT		; WRITABLE COPY OF CLI
                                     0208   222 	DEFOPT	DELE,DELSEC		; DELETE GLOBAL SECTION PRIOR TO MAP
                                     020A   223 50$:					; END OF CASE TABLE
                                     020A   224 GETHELP:				;
                          33     10  020A   225 	BSBB	SUBERR			; ERROR
7A 69 6E 67 6F 63 65 72 2D 6E 75 00' 020C   226 	.ASCIC	\un-recognized qualifier\
72 65 69 66 69 6C 61 75 71 20 64 65  0218       
                                 17  020C       
                                     0224   227  
                          19     10  0224   228 OPTSYN:	BSBB	SUBERR			;
61 75 71 20 64 69 6C 61 76 6E 69 00' 0226   229 	.ASCIC	\invalid qualifier syntax\
61 74 6E 79 73 20 72 65 69 66 69 6C  0232       
                                 78  023E       
                                 18  0226       
                          02     BA  023F   230 SUBERR:	POPR	#^M<R1>			; MESSAGE TEXT
                          50     D4  0241   231 	CLRL	R0			; ERROR CODE
            5E         10 AC     D0  0243   232 	MOVL	LGI$L_SAVSP(AP),SP	; CLEAR THE STACK
                                 05  0247   233 90$:	RSB				;
                                     0248   234  
                                     0248   235 	.DSABL	LSB
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page   7
01              INPUT OPTION ROUTINE                                                                                             (4)

                                     0248   237 ;+
                                     0248   238 ; LOGIN OPTION PROCESSING ROUTINES
                                     0248   239 ;
                                     0248   240 ; THE FOLLOWING ROUTINES ARE ENTERED AS THE RESULT OF THE USER ENTERING
                                     0248   241 ; THE ASSOCIATED OPTION ON THE LOGIN COMMAND LINE.
                                     0248   242 ;-
                                     0248   243  
                                     0248   244 ;
                                     0248   245 ; GETACNT - GET ACCOUNT NAME
                                     0248   246 ;
                                     0248   247  
                                 05  0248   248 GETACNT:RSB				;
                                     0249   249 ;	MOVAB	W^LGI$T_ACNTNAM,R5	; SET RESULT BUFFER
                                     0249   250 ;	BRB	GETNAM			; GET THE ACCOUNT NAME
                                     0249   251  
                                     0249   252  
                                     0249   253 ;
                                     0249   254 ; GET DISK NAME
                                     0249   255 ;
                                     0249   256  
            55       0000'CF     9E  0249   257 GETDISK:MOVAB	W^LGI$T_DSKNAM,R5	; SET ADDRESS OF STRING BUFFER
                          0D     10  024E   258 	BSBB	GETNAM			; GET THE NAME
            66            3A     91  0250   259 	CMPB	#^A/:/,(R6)		; TERMINATE WITH COLON?
                          02     12  0253   260 	BNEQ	10$			; BR IF NO
                          56     D6  0255   261 	INCL	R6			; IGNORE THE COLON
                                 05  0257   262 10$:	RSB				; 
                                     0258   263  
                                     0258   264 ;
                                     0258   265 ; GET CLI NAME
                                     0258   266 ;
                                     0258   267 	.ENABL	LSB
                                     0258   268  
            55       0000'CF     9E  0258   269 GETCLI:	MOVAB	W^LGI$T_CLINAM,R5	; SET ADDRESS
            66            3D     91  025D   270 GETNAM:	CMPB	#^A/=/,(R6)		; VALUE COMMING?
                          05     13  0260   271 	BEQL	10$			; BR IF OK
            66            3A     91  0262   272 	CMPB	#^A/:/,(R6)		; CHECK FOR DCLS DELIMITER
                          0D     12  0265   273 	BNEQ	20$			; VALUE ERROR
                                     0267   274 10$:	NXTOKEN				; ISOLATE TOKEN
                          23     13  026A   275 	BEQL	30$			; BR IF ZERO LENGTH TOKEN
            85            53     90  026C   276 	MOVB	R3,(R5)+		; SET LENGTH OF STRING
            64            53     28  026F   277 	MOVC3	R3,(R4),(R5)		; COPY DATA TO FORM COUNTED STRING
                          65         0272       
                                 05  0273   278 	RSB				;
                          FFC8   30  0274   279 20$:	BSBW	SUBERR			; REPORT ERROR
6C 61 76 20 64 69 6C 61 76 6E 69 00' 0277   280 	.ASCIC	\invalid value delimiter\
72 65 74 69 6D 69 6C 65 64 20 65 75  0283       
                                 17  0277       
                          FF92   31  028F   281 30$:	BRW	OPTSYN			; REPORT SYNTAX ERROR
                                     0292   282  
                                     0292   283 	.DSABL	LSB
                                     0292   284 	.DSABL	LSB
                                     0292   285  
                                     0292   286 ;
                                     0292   287 ; PROCESS REQUEST FOR WRITEABLE CLI
                                     0292   288 ;
                                     0292   289 SETWRIT:				;
       0000'CF       0000'8F     3C  0292   290 	MOVZWL	#<SEC$M_CRF!SEC$M_WRT>,W^LGI$L_SECFLGS ; SET FOR A PROCESS
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page   8
01              INPUT OPTION ROUTINE                                                                                             (4)

                                 05  0299   291 	RSB				; SECTION USER WRITABLE AND RETURN
                                     029A   292  
                                     029A   293 ;
                                     029A   294 ; DELETE THE GLOBAL SECTION BEFORE THE MAP OF COMMAND INTERPRETER
                                     029A   295 ;
                                     029A   296  
                                     029A   297 DELSEC:	SETBIT	LGI_V_DELSEC,LGI$W_FLAGS(AP) ; SET FLAG
                                 05  029D   298 	RSB
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page   9
01              LOGOUT MESSAGE                                                                                                   (5)

                                     029E   300 	.SBTTL	LOGOUT MESSAGE
                                     029E   301 ;++
                                     029E   302 ; FUNCTIONAL DESCRIPTION:
                                     029E   303 ;
                                     029E   304 ;	THIS ROUTINE IS CALLED TO PRINT A MESSAGE WHEN A PROCESS
                                     029E   305 ;	LOGOUTS.
                                     029E   306 ;
                                     029E   307 ; CALLING SEQUENCE:
                                     029E   308 ;
                                     029E   309 ;	BSBW	LGI$LOGOUTMSG		;
                                     029E   310 ;
                                     029E   311 ; INPUTS:
                                     029E   312 ;
                                     029E   313 ;	NONE
                                     029E   314 ;--
                                     029E   315 LGI$LOGOUTMSG::				; PRINT LOGOUT MESSAGE
                          7E     D4  029E   316 	CLRL	-(SP)			; ZERO TIME POINTER TO PRINT CURRENT
                     FDF4 CF     9F  02A0   317 	PUSHAB	INTOUT			; ASSUME JOB IS INTERACTIVE
         54 AB            06     E1  02A4   318 	BBC	#PRC_V_MODE,PRC_W_FLAGS(R11),10$ ; BR IF JOB IS INTERACTIVE
                          05         02A8       
            6E       FDF6 CF     9E  02A9   319 	MOVAB	BATOUT,(SP)		; SET PROPER TERMINATION MESSAGE
                 00000000'9F     9F  02AE   320 10$:	PUSHAB	@#CTL$T_USERNAME	; ADDRESS OF USER NAME FIELD
                          0C     DD  02B4   321 	PUSHL	#12			; BYTE COUNT
            50       FDC6 CF     9E  02B6   322 	MOVAB	LOGOUT,R0		; SET FAO STRING ADDRESS
                          0128   30  02BB   323 	BSBW	LGI$FAOUTS		; FAO THEN OUTPUT, ARG ON THE STACK
            5E            10     C0  02BE   324 	ADDL	#<4*4>,SP		; CLEAR THE ARGUMNETS
            6C            05     E1  02C1   325 	BBC	#LGI_V_FULMSG,LGI$W_FLAGS(AP),50$ ; BR IF NO FULL MESSAGE WANTED
                          52         02C4       
                                     02C5   326 	$GETJPI_S  ITMLST=LGI_G_GETJPI	; GET JOB/PROCESS PARAMETERS
                 FFFE7960 8F     7A  02DA   327 	EMUL	#-100000,W^LGI_Q_CPUTIM,- ; COMPUTE THE ELAPSED CPU TIME IN
            00       0020'CF         02E0   328 		#0,W^LGI_Q_CPUTIM	; DELTA FORMAT AND STORE OVER OLD VALUE
                     0020'CF         02E4       
                                     02E7   329 	$GETTIM_S  W^LGI_Q_CURTIM	; GET THE CURRENT TIME
       0028'CF       0030'CF     C2  02F2   330 	SUBL	W^LGI_Q_CURTIM,W^LGI_Q_LOGINTIM ; FIND THE CONNECT TIME
       002C'CF       0034'CF     D9  02F9   331 	SBWC	W^LGI_Q_CURTIM+4,W^LGI_Q_LOGINTIM+4 ; IN DELTA TIME FORMAT
            55       0000'CF     7E  0300   332 	MOVAQ	W^LGI_L_BUFIO,R5	; SET START OF FAO PARAMETERS
            54       FDA9 CF     7E  0305   333 	MOVAQ	W^LGI_G_FAOLST,R4	; ADDRESS OF FAO STRING DESCRIPTORS
            50            84     7E  030A   334 30$:	MOVAQ	(R4)+,R0		; SET ADDRESS OF NEXT FAO STRING
            51            85     7E  030D   335 	MOVAQ	(R5)+,R1		; SET PARAMETER LIST ADDRESS
                          00D7   30  0310   336 	BSBW	LGI$FAOUT		; FORMAT AND OUTPUT THAT MESSAGE
                          64     D5  0313   337 	TSTL	(R4)			; CHECK FOR ZERO VAL = END OF LIST
                          F3     12  0315   338 	BNEQ	30$			; BR IF NOT END OF LIST
                                 05  0317   339 50$:	RSB				;
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page  10
01              LINE INPUT                                                                                                       (6)

                                     0318   341 	.SBTTL	LINE INPUT
                                     0318   342 ;++
                                     0318   343 ; FUNCTIONAL DESCRIPTION:
                                     0318   344 ;
                                     0318   345 ;	THIS ROUTINE IS CALLED TO READ THE NEXT LINE FROM THE
                                     0318   346 ;	INPUT TERMINAL FOR INTERACTIVE JOBS.
                                     0318   347 ;
                                     0318   348 ; CALLING SEQUENCE:
                                     0318   349 ;
                                     0318   350 ;	BSBW	LGI$LINEIN		; READ A LINE IN.
                                     0318   351 ;
                                     0318   352 ; INPUT PARAMETERS:
                                     0318   353 ;
                                     0318   354 ;	R9 CONTAINS RAB FOR INPUT.
                                     0318   355 ;
                                     0318   356 ; IMPLICIT INPUTS:
                                     0318   357 ;
                                     0318   358 ;	RAB IS SET WITH PROMPT STRING AND RECORD OPTIONS.
                                     0318   359 ;
                                     0318   360 ; OUTPUT PARAMETERS:
                                     0318   361 ;
                                     0318   362 ;	INPUT IS DONE AND LINE IS SET TO TERMINATE WITH A ZERO BYTE.
                                     0318   363 ;
                                     0318   364 ; SIDE EFFECTS:
                                     0318   365 ;
                                     0318   366 ;	A FATAL ERROR IS ISSUED IF I/O ERROR OCCURS
                                     0318   367 ;
                                     0318   368 ;--
                                     0318   369 LGI$LINEIN::				; LINE INPUT SUBROUTINE
                                     0318   370 	$GET	(R9)			; READ IN THE LINE
                                     0321   371 	IF_ERR	FATAL,<command input>
            51         22 A9     3C  0335   372 	MOVZWL	RAB$W_RSZ(R9),R1	; SET COUNT
            56         28 B9     9E  0339   373 	MOVAB	@RAB$L_RBF(R9),R6	; AND BUFFER
                          6146   94  033D   374 	CLRB	(R1)[R6]		; MARK EOF
                                 05  0340   375 	RSB				;
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page  11
01              LOGIN FATAL EXCEPTION ROUTINE                                                                                    (7)

                                     0341   377 	.SBTTL	LOGIN FATAL EXCEPTION ROUTINE
                                     0341   378 ;++
                                     0341   379 ; FUNCTIONAL DESCRIPTION:
                                     0341   380 ;
                                     0341   381 ;	THESE ROUTINES ARE ENTERED AS THE RESULT OF A EXCEPTION
                                     0341   382 ;	DETECTED BY THE OPERATING SYSTEM. SINCE THIS MAY BE CAUSED
                                     0341   383 ;	BY A FAILURE IN SOME SYSTEM COMPENT, ONLY A SIMPLE MESSAGE
                                     0341   384 ;	IS PRINTED.
                                     0341   385 ;
                                     0341   386 ; CALLING SEQUENCE:
                                     0341   387 ;
                                     0341   388 ;	ENTERED FROM THE SYSTEM EXCEPTION DISPATCHER VIA A "CALL"
                                     0341   389 ;
                                     0341   390 ; INPUT PARAMETERS:
                                     0341   391 ;
                                     0341   392 ;	(AP) IS SIGNAL ARGUMENT LIST
                                     0341   393 ;
                                     0341   394 ; OUTPUT PARAMETERS:
                                     0341   395 ;
                                     0341   396 ;	MESSAGE IS PRINTED AND EXIT IS ISSUED.
                                     0341   397 ;
                                     0341   398 ;--
                               0000' 0341   399 	.ENTRY	LGI$EXCPTN,0		; FATAL EXCEPTION ENTRY
            5B   00000000'9F     DE  0343   400 	MOVAL	@#CTL$AG_CLIDATA,R11	; SET POINTER TO PROCESS IMPURE AREA
            51         04 AC     D0  034A   401 	MOVL	CHF$L_SIGARGLST(AP),R1	; GET THE SIGNAL ARRAY
                                 D0  034E   402 	MOVL	CHF$L_SIG_NAME(R1),-	; SET SIGNAL NAME AS
       0094 CB         04 A1         034F   403 		PRC_L_LSTSTATUS(R11)	; TERMINAL STATUS FOR PROCESS
            50            61     D0  0354   404 	MOVL	(R1),R0			; GET SIGNAL ARGUMENT COUNT
                          6140   DD  0357   405 10$:	PUSHL	(R1)[R0]		; PUSH ARGUMENTS IN STACK BACKWARDS
            FA            50     F5  035A   406 	SOBGTR	R0,10$			;
            61            02     C3  035D   407 	SUBL3	#2,(R1),-(SP)		; COUNT OF ARGUMENTS LESS PC AND PSL
                          7E         0360       
            50         6B'AF     9E  0361   408 	MOVAB	B^100$,R0		; FAO FORMAT STRING
                          007E   30  0365   409 	BSBW	LGI$FAOUTS		; FORMAT MESSAGE AND PRINT IT
                          FC95'  31  0368   410 	BRW	LGI$TERMPROC		; TERMINATE THE PROCESS
                                     036B   411  
                  00000373'0000002F' 036B   412 100$:	.LONG	120$-110$,110$		;
4C 41 54 41 46 2A 20 4E 49 47 4F 4C  0373   413 110$:	.ASCII	\LOGIN *FATAL* EXCEPTION !#(10XL), @!XL, PSL=!XL\
20 4E 4F 49 54 50 45 43 58 45 20 2A  037F       
21 40 20 2C 29 4C 58 30 31 28 23 21  038B       
   4C 58 21 3D 4C 53 50 20 2C 4C 58  0397       
                                     03A2   414 120$:
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page  12
01              LOGIN FATAL ERROR ROUTINE                                                                                        (8)

                                     03A2   416 	.SBTTL	LOGIN FATAL ERROR ROUTINE
                                     03A2   417 ;++
                                     03A2   418 ; FUNCTIONAL DESCRIPTION:
                                     03A2   419 ;
                                     03A2   420 ;	THIS ROUTINE IS CALLED TO PRINT AN ERROR MESSAGE AND
                                     03A2   421 ;	TERMINATE THE EXECUTION OF THE PROCESS.
                                     03A2   422 ;
                                     03A2   423 ; CALLING SEQUENCE:
                                     03A2   424 ;
                                     03A2   425 ;	BSBW	LGI$FATAL		; FOR FATAL ERROR
                                     03A2   426 ;
                                     03A2   427 ; INPUT PARAMETERS:
                                     03A2   428 ;
                                     03A2   429 ;	R0 HAS ERROR CODE
                                     03A2   430 ;	@(SP) HAS ADDRESS OF COUNTED STRING FOR ADDITIONAL TEXT
                                     03A2   431 ;
                                     03A2   432 ; OUTPUT PARAMETERS:
                                     03A2   433 ;
                                     03A2   434 ;	MESSAGE IS PRINTED AND EXIT IS ISSUED.
                                     03A2   435 ;
                                     03A2   436 ;--
                                     03A2   437 LGI$FATAL::				;
                          50     D5  03A2   438 	TSTL	R0			; NOP ERROR CODE AS ERROR CAUSE?
                          05     13  03A4   439 	BEQL	10$			; BR IF YES
       0094 CB            50     D0  03A6   440 	MOVL	R0,PRC_L_LSTSTATUS(R11)	; SAVE TERMINAL STATUS CAUSE OTHERWISE
                          02     BA  03AB   441 10$:	POPR	#^M<R1>			; GET ERROR CAUSE STRING
                          03     10  03AD   442 	BSBB	LGI$MSGOUT		; PRINT THE ERROR
                          FC4E'  31  03AF   443 	BRW	LGI$TERMPROC		; TERMINATE THE PROCESS
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page  13
01              LOGIN MESSAGE OUTPUT SUBROUTINE                                                                                  (9)

                                     03B2   445 	.SBTTL	LOGIN MESSAGE OUTPUT SUBROUTINE
                                     03B2   446 ;++
                                     03B2   447 ; FUNCTIONAL DESCRIPTION:
                                     03B2   448 ;
                                     03B2   449 ;	THIS ROUTINE IS CALLED TO PRINT AN ERROR MESSAGE 
                                     03B2   450 ;
                                     03B2   451 ; CALLING SEQUENCE:
                                     03B2   452 ;
                                     03B2   453 ;	BSBW	LGI$MSGOUT		; FOR ERROR MESSAGE
                                     03B2   454 ;
                                     03B2   455 ; INPUT PARAMETERS:
                                     03B2   456 ;
                                     03B2   457 ;	R0 HAS ERROR CODE
                                     03B2   458 ;	R1 HAS ADDRESS OF COUNTED STRING FOR ADDITIONAL TEXT
                                     03B2   459 ;
                                     03B2   460 ; OUTPUT PARAMETERS:
                                     03B2   461 ;
                                     03B2   462 ;	MESSAGE IS PRINTED AND EXIT IS ISSUED IF FATAL.
                                     03B2   463 ;
                                     03B2   464 ;--
                                     03B2   465 LGI$MSGOUT::
                          05     BB  03B2   466 	PUSHR	#^M<R0,R2>		; SAVE ERROR CODE PLUS CALLERS R2
                          51     DD  03B4   467 	PUSHL	R1			; PUSH ARGUMNET TO FAO
            50       FCAA CF     9E  03B6   468 	MOVAB	LOGERR,R0		; FORMAT STRING
                          0028   30  03BB   469 	BSBW	LGI$FAOUTS		; FORMAT AND OUTPUT, ARG ON THE STACK
                          8E     D5  03BE   470 	TSTL	(SP)+			; CLEAR ARGUMENT VALUE
            62         02 A2     B0  03C0   471 	MOVW	2(R2),(R2)		; RESET BUFFER LENGTH
                          50   8ED0  03C4   472 	POPL	R0			; GET THE ERROR ID
                          1A     13  03C7   473 	BEQL	30$			; BR ON ZERO ERROR CODE, NO MESSAGE
                                     03C9   474 	$GETMSG_S  R0,(R2),(R2),#15	; CONVERT ERROR CODE
            50            62     3C  03DA   475 	MOVZWL	(R2),R0			; GET LENGTH
            51         04 A2     D0  03DD   476 	MOVL	4(R2),R1		; BUFFER ADDRESS
                          2A     10  03E1   477 	BSBB	TYPOUT0			; PRINT THAT
                          04     BA  03E3   478 30$:	POPR	#^M<R2>			; RESTORE CALLERS R2
                                 05  03E5   479 	RSB				;
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page  14
01              LOGIN FORMAT AND OUTPUT MESSAGE SUBROUTINE                                                                      (10)

                                     03E6   481 	.SBTTL	LOGIN FORMAT AND OUTPUT MESSAGE SUBROUTINE
                                     03E6   482 ;++
                                     03E6   483 ; FUNCTIONAL DESCRIPTION:
                                     03E6   484 ;
                                     03E6   485 ;	THIS ROUTINE IS CALLED TO FORMAT AND PRINT A MESSAGE
                                     03E6   486 ;
                                     03E6   487 ; CALLING SEQUENCE:
                                     03E6   488 ;
                                     03E6   489 ;	BSBW	LGI$FAOUT		; FORMAT AND OUTPUT A MESSAGE
                                     03E6   490 ;	BSBW	LGI$FAOUTS		; SAME WITH PARAMETERS ON THE STACK
                                     03E6   491 ;
                                     03E6   492 ; INPUT PARAMETERS:
                                     03E6   493 ;
                                     03E6   494 ;	R0 HAS FAO FORMAT STRING DESCRIPTOR
                                     03E6   495 ;
                                     03E6   496 ; FOR FAOUTS
                                     03E6   497 ;
                                     03E6   498 ;	4(SP) IS ARGUMENT LIST
                                     03E6   499 ;
                                     03E6   500 ; FOR FAOUT
                                     03E6   501 ;
                                     03E6   502 ;	R1 CONTAINS ADDRESS OF ARGUMENT LIST
                                     03E6   503 ;
                                     03E6   504 ; OUTPUT PARAMETERS:
                                     03E6   505 ;
                                     03E6   506 ;	MESSAGE IS FORMATED AND PRINTED
                                     03E6   507 ;
                                     03E6   508 ;--
                                     03E6   509 LGI$FAOUTS::				; FORMAT AND OUTPUT STACK ARGS
            51         04 AE     9E  03E6   510 	MOVAB	4(SP),R1		; GET ARGUMENT BLOCK ADDRESS
                                     03EA   511 LGI$FAOUT::				; FORMAT AND OUTPUT ARGS=(R1)
            52       0004'CF     7E  03EA   512 	MOVAQ	W^LGI$INPDES+4,R2	; SET LINBUFFER DESCRIPTOR
            72            72     B0  03EF   513 	MOVW	-(R2),-(R2)		; RESET LENGTH
                          61     9F  03F2   514 	PUSHAB	(R1)			; ADDRESS OF ARGUMENT WORDS
                          62     7F  03F4   515 	PUSHAQ	(R2)			; ADDRESS OF BUFFER DESCRIPTOR
                          62     3F  03F6   516 	PUSHAW	(R2)			; ADDRESS OF LENGTH
                          60     7F  03F8   517 	PUSHAQ	(R0)			; FAO FORMAT STRING
   00000000'9F            04     FB  03FA   518 	CALLS	#4,@#SYS$FAOL		; FORMAT THE ERROR
            50            62     9A  0401   519 	MOVZBL	(R2),R0			; SET LENGTH
            51         04 A2     D0  0404   520 	MOVL	4(R2),R1		; ADDRESS OF LINE
                          03     11  0408   521 	BRB	TYPOUT0			; OUTPUT MESSAGE
                                     040A   522 ;+
                                     040A   523 ; TYPE OUT ROUTINE
                                     040A   524 ;-
                                     040A   525  
                                     040A   526 LGI$TYPOUT::				; TYPE OUT SUBROUTINE
            50            81     9A  040A   527 	MOVZBL	(R1)+,R0		; GET COUNT IN R0
                                     040D   528 TYPOUT0::				; TYPE WITH LENGTH IN R0,ADR IN R1
                          50     DD  040D   529 	PUSHL	R0			; SAVE BYTE COUNT
            50         0C AB     D0  040F   530 	MOVL	PRC_L_OUTRAB(R11),R0	; GET THE RAB
                          12     13  0413   531 	BEQL	20$			; BR IF NO OUTPUT FILE OPENNED
         22 A0            8E     F7  0415   532 	CVTLW	(SP)+,RAB$W_RSZ(R0)	; SET RECORD SIZE
         28 A0            61     9E  0419   533 	MOVAB	(R1),RAB$L_RBF(R0)	; ADDRESS OF MESSAGE
                                     041D   534 	$PUT	(R0)			; PRINT THE MESSAGE
                                 05  0426   535 10$:	RSB				; RETURN TO CALLER
                          8E     D5  0427   536 20$:	TSTL	(SP)+			; CLEAR LENGTH FROM THE STACK
                                 05  0429   537 	RSB				; IGNORE PRINT OUT
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page  15
01              LGI$CHK_JOBCNT - CHECK CURRENT JOB COUNT                                                                        (11)

                                     042A   539 	.SBTTL	LGI$CHK_JOBCNT - CHECK CURRENT JOB COUNT
                                     042A   540 ;++
                                     042A   541 ; LGI$CHK_JOBCNT - CHECK CURRENT JOB COUNT
                                     042A   542 ;
                                     042A   543 ; FUNCTIONAL DESCRIPTION:
                                     042A   544 ;
                                     042A   545 ; THIS ROUTINE CHECKS THE CURRENT JOB LIMIT FOR NETWORK AND INTERACTIVE
                                     042A   546 ; JOBS. IF THE CURRENT COUNT IS HIGHER OR EQUAL TO THE CURRENT LIMIT THE
                                     042A   547 ; JOB IS TERMINATED.
                                     042A   548 ;
                                     042A   549 ; INPUTS:
                                     042A   550 ;
                                     042A   551 ;	THE UAF RECORD IS IN PLACE
                                     042A   552 ;
                                     042A   553 ; OUTPUTS:
                                     042A   554 ;
                                     042A   555 ;	RETURN IS SUCCESS
                                     042A   556 ;
                                     042A   557 ;--
                                     042A   558 LGI$CHK_JOBCNT::			; CHECK JOB COUNT
       0058'CF            12     E0  042A   559 	BBS	#PRV$V_OPER,W^LGI$G_UAFREC+UAF$Q_PRIV,10$; BR IF OPERATOR
                          2E         042F       
   00000000'EF   00000000'EF     B1  0430   560 	CMPW	SYS$GW_IJOBCNT,SYS$GW_IJOBLIM; COUNT LEQU LIMIT?
                          21     1B  043B   561 	BLEQU	10$			; IF LEQU THEN OK
                          50     D4  043D   562 	CLRL	R0			; SET NO OTHER ERROR
                          FF60   30  043F   563 	BSBW	LGI$FATAL		; ISSUE FATAL ERROR
69 67 6F 6C 20 6D 65 74 73 79 73 00' 0442   564 	.ASCIC	\system login quota exceeded\
65 63 78 65 20 61 74 6F 75 71 20 6E  044E       
                        64 65 64 65  045A       
                                 1B  0442       
                                 05  045E   565 10$:	RSB				; RETURN
                                     045F   566  
                                     045F   567 	.END
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                    (11)

$$$            = 00000004            FAB$L_STV        0000000C            FAB$V_BRO      = 00000006            
$$.TMP1        = 00000001            FAB$L_XAB        00000024            FAB$V_CBT      = 00000015            
$$.TMP2        = 00000060            FAB$M_BIO      = 00000020            FAB$V_CIF      = 00000019            
$$T1           = 00000001            FAB$M_BLK      = 00000008            FAB$V_CR       = 00000001            
$XX$           = 00000000            FAB$M_BRO      = 00000040            FAB$V_CTG      = 00000014            
BATOUT           000000A3 R     04   FAB$M_CBT      = 00200000            FAB$V_DEL      = 00000002            
BIT...         = 00000002            FAB$M_CIF      = 02000000            FAB$V_DFW      = 00000005            
CHF$L_MCHARGLST  00000008            FAB$M_CR       = 00000002            FAB$V_DLT      = 0000000F            
CHF$L_MCH_ARGS   00000000            FAB$M_CTG      = 00100000            FAB$V_DMO      = 0000000C            
CHF$L_MCH_DEPTH  00000008            FAB$M_DEL      = 00000004            FAB$V_ESC      = 0000001B            
CHF$L_MCH_FRAME  00000004            FAB$M_DFW      = 00000020            FAB$V_EXE      = 00000007            
CHF$L_MCH_SAVR0  0000000C            FAB$M_DLT      = 00008000            FAB$V_FTN      = 00000000            
CHF$L_MCH_SAVR1  00000010            FAB$M_DMO      = 00001000            FAB$V_GET      = 00000001            
CHF$L_SIGARGLST  00000004            FAB$M_ESC      = 08000000            FAB$V_INP      = 00000013            
CHF$L_SIG_ARG1   00000008            FAB$M_EXE      = 00000080            FAB$V_JNL      = 00000016            
CHF$L_SIG_ARGS   00000000            FAB$M_FTN      = 00000001            FAB$V_KFO      = 0000001E            
CHF$L_SIG_NAME   00000004            FAB$M_GET      = 00000002            FAB$V_MSE      = 00000004            
CHR_NXTOKEN      ********   X   04   FAB$M_INP      = 00080000            FAB$V_MXV      = 00000001            
CTL$AG_CLIDATA   ********   X   04   FAB$M_JNL      = 00400000            FAB$V_NAM      = 00000018            
CTL$T_USERNAME   ********   X   04   FAB$M_KFO      = 40000000            FAB$V_NEF      = 0000000A            
DELSEC           0000029A R     04   FAB$M_MSE      = 00000010            FAB$V_NFS      = 00000010            
FAB$B_BID        00000000            FAB$M_MXV      = 00000002            FAB$V_NIL      = 00000005            
FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            FAB$V_OFP      = 0000001D            
FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            FAB$V_ORG      = 00000004            
FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            FAB$V_POS      = 00000008            
FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            FAB$V_PPF      = 00000012            
FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            FAB$V_PPF_IND  = 0000000E            
FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            FAB$V_PPF_RAT  = 00000006            
FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            FAB$V_PRN      = 00000002            
FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            FAB$V_PUT      = 00000000            
FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            FAB$V_RCK      = 00000017            
FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            FAB$V_RWC      = 0000000B            
FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            FAB$V_RWO      = 00000007            
FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            FAB$V_SCF      = 0000000E            
FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            FAB$V_SHRDEL   = 00000002            
FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            FAB$V_SHRGET   = 00000001            
FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            FAB$V_SHRPUT   = 00000000            
FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            FAB$V_SHRUPD   = 00000003            
FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            FAB$V_SPL      = 0000000D            
FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            FAB$V_SQO      = 00000006            
FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            FAB$V_SUP      = 00000002            
FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            FAB$V_TEF      = 0000001C            
FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            FAB$V_TMD      = 00000004            
FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            FAB$V_TMP      = 00000003            
FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            FAB$V_TRN      = 00000004            
FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            FAB$V_UFM      = 0000001A            
FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            FAB$V_UFO      = 00000011            
FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            FAB$V_UPD      = 00000003            
FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            FAB$V_UPI      = 00000006            
FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            FAB$V_WCK      = 00000009            
FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            FAB$W_BLS        0000003C            
FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            FAB$W_DEQ        00000014            
FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            FAB$W_IFI        00000002            
FAB$L_MRN        00000038            FAB$S_ORG      = 00000004            FAB$W_MRS        00000036            
FAB$L_NAM        00000028            FAB$S_PPF_RAT  = 00000008            GBL...         = 00000000            
FAB$L_SDC        00000044            FAB$V_BIO      = 00000005            GETACNT          00000248 R     04   
FAB$L_STS        00000008            FAB$V_BLK      = 00000003            GETCLI           00000258 R     04   
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page  17
SYMBOL TABLE                                                                                                                    (11)

GETDISK          00000249 R     04   JPI$_LASTADR   = 00000102            LGI_G_GETJPI     00000000 R     04   
GETHELP          0000020A R     04   JPI$_LASTCTL   = 00000207            LGI_L_BUFIO      00000000 R     03   
GETNAM           0000025D R     04   JPI$_LASTPCB   = 0000031D            LGI_L_DIRIO      00000008 R     03   
IDF_K_LENGTH     0000005C            JPI$_LASTPHD   = 00000412            LGI_L_PAGEFLTS   00000010 R     03   
IDF_L_INPRABCTX  0000000C            JPI$_LOGINTIM  = 00000206            LGI_L_VIRTPEAK   0000000C R     03   
IDF_L_ONCTLY     00000058            JPI$_MEM       = 00000307            LGI_L_VOLUMES    00000014 R     03   
IDF_L_ONERROR    00000008            JPI$_OWNER     = 00000303            LGI_L_WSPEAK     00000004 R     03   
IDF_L_OUTRABCTX  00000010            JPI$_PAGEFLTS  = 0000040A            LGI_M_CONTU    = 00000001            
IDF_Q_LABEL      0000001C            JPI$_PGFLQUOTA = 0000040E            LGI_M_DELSEC   = 00000010            
IDF_Q_LOCAL      00000014            JPI$_PID       = 00000319            LGI_M_FULMSG   = 00000020            
IDF_T_INPDVI     00000034            JPI$_PPGCNT    = 0000030D            LGI_M_NOACNT   = 00000002            
IDF_T_OUTDVI     00000024            JPI$_PRCCNT    = 0000031B            LGI_M_SETDEF   = 00000004            
IDF_V_INPOPN   = 00000000            JPI$_PRCLM     = 00000408            LGI_M_SUBPRC   = 00000008            
IDF_W_FLAG       00000056            JPI$_PRCNAM    = 0000031C            LGI_OPT          000001FE R     04   
IDF_W_INPDID     0000004A            JPI$_PRI       = 00000302            LGI_Q_CPUTIM     00000020 R     03   
IDF_W_INPFID     00000044            JPI$_PRIB      = 00000309            LGI_Q_CURTIM     00000030 R     03   
IDF_W_INPIFI     00000000            JPI$_PROCPRIV  = 00000204            LGI_Q_LOGINTIM   00000028 R     03   
IDF_W_INPRFA     00000050            JPI$_STATE     = 00000306            LGI_V_CONTU    = 00000000            
IDF_W_ONLEVEL    00000006            JPI$_STS       = 00000305            LGI_V_DELSEC   = 00000004            
IDF_W_OUTIFI     00000002            JPI$_TMBU      = 0000030B            LGI_V_FULMSG   = 00000005            
IDF_W_OUTISI     00000004            JPI$_TQCNT     = 00000315            LGI_V_NOACNT   = 00000001            
INTOUT           00000098 R     04   JPI$_TQLM      = 00000410            LGI_V_SETDEF   = 00000002            
JPI$C_ADRTYPE  = 00000001            JPI$_UIC       = 00000304            LGI_V_SUBPRC   = 00000003            
JPI$C_CTLTYPE  = 00000002            JPI$_USERNAME  = 00000202            LOGERR           00000064 R     04   
JPI$C_LISTEND  = 00000000            JPI$_VIRTPEAK  = 00000200            LOGOUT           00000080 R     04   
JPI$C_PCBTYPE  = 00000003            JPI$_VOLUMES   = 00000205            NAM$B_BID        00000000            
JPI$C_PHDTYPE  = 00000004            JPI$_WSAUTH    = 00000401            NAM$B_BLN        00000001            
JPI$_ACCOUNT   = 00000203            JPI$_WSPEAK    = 00000201            NAM$B_CURLVL     00000038            
JPI$_APTCNT    = 0000030A            JPI$_WSQUOTA   = 00000402            NAM$B_ESL        0000000B            
JPI$_ASTACT    = 00000300            JPI$_WSSIZE    = 00000411            NAM$B_ESS        0000000A            
JPI$_ASTCNT    = 0000030E            LGI$CHK_JOBCNT   0000042A RG    04   NAM$B_RSL        00000003            
JPI$_ASTEN     = 00000301            LGI$EXCPTN       00000341 RG    04   NAM$B_RSS        00000002            
JPI$_ASTLM     = 00000409            LGI$FAOUT        000003EA RG    04   NAM$C_BID      = 00000002            
JPI$_BIOCNT    = 0000030F            LGI$FAOUTS       000003E6 RG    04   NAM$C_BLN        00000038            
JPI$_BIOLM     = 00000310            LGI$FATAL        000003A2 RG    04   NAM$C_BLN_DIRWC  00000050            
JPI$_BUFIO     = 0000040C            LGI$GETOPT       000001C1 RG    04   NAM$C_DVI      = 00000010            
JPI$_BYTCNT    = 00000311            LGI$G_OPTEND     00000000 R     06   NAM$C_MAXRSS   = 00000080            
JPI$_BYTLM     = 0000031A            LGI$G_OPTNAM     00000000 R     05   NAM$C_MAXRSSLCL= 00000060            
JPI$_CPULIM    = 0000040D            LGI$G_UAFREC     ********   X   04   NAM$K_BLN        00000038            
JPI$_CPUTIM    = 00000407            LGI$INPDES       ********   X   04   NAM$K_BLN_DIRWC  00000050            
JPI$_CURPRIV   = 00000400            LGI$K_BUFSIZ   = 00000100            NAM$L_DIRWCC1    00000040            
JPI$_DFPFC     = 00000406            LGI$K_WORK       00000114            NAM$L_DIRWCC2    00000044            
JPI$_DFWSCNT   = 00000403            LGI$LINEIN       00000318 RG    04   NAM$L_DIRWCC3    00000048            
JPI$_DIOCNT    = 00000312            LGI$LOGOUTMSG    0000029E RG    04   NAM$L_DIRWCC4    0000004C            
JPI$_DIOLM     = 00000313            LGI$L_PREVHAND   00000004            NAM$L_DWC        00000038            
JPI$_DIRIO     = 0000040B            LGI$L_SAVSP      00000010            NAM$L_ESA        0000000C            
JPI$_EFCS      = 00000317            LGI$L_SECFLGS    ********   X   04   NAM$L_FNB        00000034            
JPI$_EFCU      = 00000318            LGI$MSGOUT       000003B2 RG    04   NAM$L_RLF        00000010            
JPI$_EFWM      = 00000316            LGI$Q_IOSB       00000008            NAM$L_RSA        00000004            
JPI$_EXCVEC    = 00000100            LGI$TERMPROC     ********   X   04   NAM$L_WCC        00000030            
JPI$_FILCNT    = 00000314            LGI$TYPOUT       0000040A RG    04   NAM$M_DIR_LVLS = 00E00000            
JPI$_FILLM     = 0000040F            LGI$T_CLINAM     ********   X   04   NAM$M_EXP_DEV  = 00000080            
JPI$_FINALEXC  = 00000101            LGI$T_DSKNAM     ********   X   04   NAM$M_EXP_DIR  = 00000040            
JPI$_FREP0VA   = 00000404            LGI$T_WRKBUF     00000014            NAM$M_EXP_NAME = 00000004            
JPI$_FREP1VA   = 00000405            LGI$W_FLAGS      00000000            NAM$M_EXP_TYPE = 00000002            
JPI$_GPGCNT    = 0000030C            LGI$W_MBCHAN     00000002            NAM$M_EXP_VER  = 00000001            
JPI$_GRP       = 00000308            LGI_G_FAOLST     000000B2 R     04   NAM$M_GRP_MBR  = 00080000            
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page  18
SYMBOL TABLE                                                                                                                    (11)

NAM$M_HIGHVER  = 00008000            NAM$W_PRV_DID    0000003A            PRC_V_CNTRLY   = 00000001            
NAM$M_LOWVER   = 00004000            OPTSYN           00000224 R     04   PRC_V_DBGQUAL  = 00000009            
NAM$M_NODE     = 00020000            PRC_B_DEFRADIX   00000092            PRC_V_DBGTRUE  = 0000000A            
NAM$M_PPF      = 00010000            PRC_B_EXMDEPMOD  00000091            PRC_V_DISABL   = 00000002            
NAM$M_QUOTED   = 00040000            PRC_B_EXMDEPWID  00000090            PRC_V_EXIT     = 00000003            
NAM$M_WILDCARD = 00000100            PRC_K_DEC      = 00000001            PRC_V_GOEOF    = 00000000            
NAM$M_WILD_DIR = 00100000            PRC_K_HEX      = 00000000            PRC_V_GOTO     = 00000004            
NAM$M_WILD_GRP = 01000000            PRC_K_LENGTH     000000A0            PRC_V_HANGUP   = 0000000C            
NAM$M_WILD_MBR = 02000000            PRC_K_OCT      = 00000002            PRC_V_IND      = 00000005            
NAM$M_WILD_NAME= 00000020            PRC_L_CLIWRK0    0000005C            PRC_V_MODE     = 00000006            
NAM$M_WILD_SFD1= 02000000            PRC_L_CLIWRK1    00000060            PRC_V_NOCTLY   = 0000000E            
NAM$M_WILD_SFD2= 04000000            PRC_L_CLIWRK2    00000064            PRC_V_PAUSE    = 0000000D            
NAM$M_WILD_SFD3= 08000000            PRC_L_CLIWRK3    00000068            PRC_V_USRDET   = 00000008            
NAM$M_WILD_SFD4= 10000000            PRC_L_CLIWRK4    0000006C            PRC_V_VERIFY   = 00000007            
NAM$M_WILD_SFD5= 20000000            PRC_L_ERRRAB     00000010            PRC_V_YLEVEL   = 0000000B            
NAM$M_WILD_SFD6= 40000000            PRC_L_EXMDEPADR  0000008C            PRC_W_CLIFLAG    00000052            
NAM$M_WILD_SFD7= 80000000            PRC_L_EXTARG     00000078            PRC_W_ERRIFI     00000052            
NAM$M_WILD_TYPE= 00000010            PRC_L_EXTBLK     00000070            PRC_W_FLAGS      00000054            
NAM$M_WILD_UFD = 01000000            PRC_L_EXTCOD     00000080            PRC_W_INPCHAN    00000050            
NAM$M_WILD_VER = 00000008            PRC_L_EXTHND     00000074            PRC_W_ONLEVEL    00000056            
NAM$S_DIR_LVLS = 00000003            PRC_L_EXTPRM     0000007C            PRV$V_ALLSPOOL = 00000004            
NAM$T_DVI        00000014            PRC_L_INDEPTH    00000048            PRV$V_BUGCHK   = 00000017            
NAM$V_DIR_LVLS = 00000015            PRC_L_INDFAB     0000001C            PRV$V_CMEXEC   = 00000001            
NAM$V_EXP_DEV  = 00000007            PRC_L_INDINPRAB  00000014            PRV$V_CMKRNL   = 00000000            
NAM$V_EXP_DIR  = 00000006            PRC_L_INDOUTRAB  00000018            PRV$V_DETACH   = 00000005            
NAM$V_EXP_NAME = 00000002            PRC_L_INPRAB     00000008            PRV$V_DIAGNOSE = 00000006            
NAM$V_EXP_TYPE = 00000001            PRC_L_LSTSTATUS  00000094            PRV$V_EXQUOTA  = 00000013            
NAM$V_EXP_VER  = 00000000            PRC_L_ONCTLY     0000009C            PRV$V_GROUP    = 00000008            
NAM$V_GRP_MBR  = 00000013            PRC_L_ONERROR    00000058            PRV$V_GRPNAM   = 00000003            
NAM$V_HIGHVER  = 0000000F            PRC_L_OUTRAB     0000000C            PRV$V_LOG_IO   = 00000007            
NAM$V_LOWVER   = 0000000E            PRC_L_PROCUIC    00000098            PRV$V_MOUNT    = 00000011            
NAM$V_NODE     = 00000011            PRC_L_SAVAP      00000000            PRV$V_NETMBX   = 00000014            
NAM$V_PPF      = 00000010            PRC_L_SAVFP      00000004            PRV$V_NOACNT   = 00000009            
NAM$V_QUOTED   = 00000012            PRC_L_SEVERITY   00000040            PRV$V_OPER     = 00000012            
NAM$V_WILDCARD = 00000008            PRC_L_STACKLM    00000088            PRV$V_PHY_IO   = 00000016            
NAM$V_WILD_DIR = 00000014            PRC_L_STACKPT    00000084            PRV$V_PRMCEB   = 0000000A            
NAM$V_WILD_GRP = 00000018            PRC_L_STATUS     00000044            PRV$V_PRMGBL   = 00000018            
NAM$V_WILD_MBR = 00000019            PRC_L_SYMBOL     0000004C            PRV$V_PRMMBX   = 0000000B            
NAM$V_WILD_NAME= 00000005            PRC_M_CNTRLY   = 00000002            PRV$V_PSWAPM   = 0000000C            
NAM$V_WILD_SFD1= 00000019            PRC_M_DBGQUAL  = 00000200            PRV$V_SETPRI   = 0000000D            
NAM$V_WILD_SFD2= 0000001A            PRC_M_DBGTRUE  = 00000400            PRV$V_SETPRV   = 0000000E            
NAM$V_WILD_SFD3= 0000001B            PRC_M_DISABL   = 00000004            PRV$V_SYSGBL   = 00000019            
NAM$V_WILD_SFD4= 0000001C            PRC_M_EXIT     = 00000008            PRV$V_SYSNAM   = 00000002            
NAM$V_WILD_SFD5= 0000001D            PRC_M_GOEOF    = 00000001            PRV$V_TMPMBX   = 0000000F            
NAM$V_WILD_SFD6= 0000001E            PRC_M_GOTO     = 00000010            PRV$V_VOLPRO   = 00000015            
NAM$V_WILD_SFD7= 0000001F            PRC_M_HANGUP   = 00001000            PRV$V_WORLD    = 00000010            
NAM$V_WILD_TYPE= 00000004            PRC_M_IND      = 00000020            RAB$B_BID        00000000            
NAM$V_WILD_UFD = 00000018            PRC_M_MODE     = 00000040            RAB$B_BLN        00000001            
NAM$V_WILD_VER = 00000003            PRC_M_NOCTLY   = 00004000            RAB$B_KRF        00000035            
NAM$W_DID        0000002A            PRC_M_PAUSE    = 00002000            RAB$B_KSZ        00000034            
NAM$W_DID_NUM    0000002A            PRC_M_USRDET   = 00000100            RAB$B_MBC        00000037            
NAM$W_DID_RVN    0000002E            PRC_M_VERIFY   = 00000080            RAB$B_MBF        00000036            
NAM$W_DID_SEQ    0000002C            PRC_M_YLEVEL   = 00000800            RAB$B_PSZ        00000034            
NAM$W_FID        00000024            PRC_Q_ALLOCREG   00000020            RAB$B_RAC        0000001E            
NAM$W_FID_NUM    00000024            PRC_Q_GLOBAL     00000028            RAB$B_ROP1       00000005            
NAM$W_FID_RVN    00000028            PRC_Q_LABEL      00000030            RAB$B_ROP2       00000006            
NAM$W_FID_SEQ    00000026            PRC_Q_LOCAL      00000038            RAB$B_ROP3       00000007            
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page  19
SYMBOL TABLE                                                                                                                    (11)

RAB$B_TMO        0000001F            RAB$V_KGE      = 00000015            UAF$V_DISCTLY  = 00000000            
RAB$C_BID      = 00000001            RAB$V_KGT      = 00000016            UAF$W_ASTLM      00000070            
RAB$C_BLN        00000044            RAB$V_LIM      = 0000000E            UAF$W_BIOLM      00000060            
RAB$C_KEY      = 00000001            RAB$V_LOA      = 0000000D            UAF$W_BYTLM      00000062            
RAB$C_RFA      = 00000002            RAB$V_LOC      = 00000010            UAF$W_DFWSCNT    0000006E            
RAB$C_SEQ      = 00000000            RAB$V_MAS      = 00000005            UAF$W_DIOLM      00000064            
RAB$K_BLN        00000044            RAB$V_NLK      = 00000014            UAF$W_FILLM      00000066            
RAB$L_BKT        00000038            RAB$V_NXR      = 00000017            UAF$W_FILPRT     00000088            
RAB$L_CTX        00000018            RAB$V_PMT      = 0000001E            UAF$W_GRP        0000001A            
RAB$L_DCT        00000038            RAB$V_PPF_IND  = 0000000E            UAF$W_MEM        00000018            
RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            UAF$W_PGFLQUOTA  00000072            
RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            UAF$W_PRCCNT     0000006A            
RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            UAF$W_TQCNT      00000068            
RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            UAF$W_WSQUOTA    0000006C            
RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            _$$_           = 000000EF            
RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            
RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            
RAB$L_STS        00000008            RAB$V_TPT      = 00000001            
RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            
RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            
RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            
RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            
RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            
RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            
RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            
RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            
RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            
RAB$M_KGE      = 00200000            SEC$M_CRF        ********   X   04   
RAB$M_KGT      = 00400000            SEC$M_WRT        ********   X   04   
RAB$M_LIM      = 00004000            SETWRIT          00000292 R     04   
RAB$M_LOA      = 00002000            SUBERR           0000023F R     04   
RAB$M_LOC      = 00010000            SYS$FAOL         ********   X   04   
RAB$M_MAS      = 00000020            SYS$GET          ********  GX   04   
RAB$M_NLK      = 00100000            SYS$GETJPI       ********   X   04   
RAB$M_NXR      = 00800000            SYS$GETMSG       ********   X   04   
RAB$M_PMT      = 40000000            SYS$GETTIM       ********   X   04   
RAB$M_PPF_IND  = 00004000            SYS$GW_IJOBCNT   ********   X   04   
RAB$M_PPF_RAT  = 00003FC0            SYS$GW_IJOBLIM   ********   X   04   
RAB$M_PTA      = 20000000            SYS$PUT          ********  GX   04   
RAB$M_RAH      = 00000200            TYPOUT0          0000040D RG    04   
RAB$M_RLK      = 00080000            UAF$B_FLAGS      0000008B            
RAB$M_RNE      = 01000000            UAF$B_PRI        0000008A            
RAB$M_RNF      = 08000000            UAF$C_LENGTH     000000B8            
RAB$M_TMO      = 02000000            UAF$K_LENGTH     000000B8            
RAB$M_TPT      = 00000002            UAF$L_CPUTIM     00000054            
RAB$M_UIF      = 00000010            UAF$L_LEVEL      0000008C            
RAB$M_ULK      = 00040000            UAF$L_PWD        0000000C            
RAB$M_WAT      = 00020000            UAF$L_UIC        00000018            
RAB$M_WBH      = 00000400            UAF$Q_PRIV       00000058            
RAB$S_PPF_RAT  = 00000008            UAF$T_ACCOUNT    00000010            
RAB$V_ASY      = 00000000            UAF$T_DEFCLI     0000004C            
RAB$V_BIO      = 0000000B            UAF$T_DEFDEV     0000003C            
RAB$V_CCO      = 0000001F            UAF$T_DEFDIR     0000001C            
RAB$V_CVT      = 0000001A            UAF$T_LGICMD     00000090            
RAB$V_EOF      = 00000008            UAF$T_OWNER      00000074            
RAB$V_FDL      = 00000006            UAF$T_USERNAME   00000000            
RAB$V_HSH      = 00000007            UAF$V_DEFCLI   = 00000001            
LOGSUB          - LOGIN SUBROUTINES                              22-AUG-1978 00:36:39   VAX-11 MACRO X0.3-11               Page  20
PROGRAM SECTION SYNOPSIS                                                                                                        (11)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000114      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RWDATA           00000038      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT LONG  
PURE             0000045F      04     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  
OPTNAM           00000018      05     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  
OPTNAN           00000000      06     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
8608. BYTES LEFT IN FREE MEMORY POOL.
678. BYTES OF RECLAIMED MEMORY.
OBJ$:LOGSUB,LIS$:LOGSUB/-SP=EXECML$/ML,LIB$:LOGIN/ML,SRC$:LOGSUB
55 MLB DIR RDS - 935 GETS TO DEFINE 31 MACROS. 77 INTER. FILE WRITES. 
