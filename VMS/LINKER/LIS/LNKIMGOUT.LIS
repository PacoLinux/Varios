
; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 1
; Digital Equipment Corporation
;
;00100  0001	MODULE LNK_IMGOUT (IDENT='X01.20') =
;00200  0002	
;00300  0003	BEGIN
;00400  0004	!
;00500  0005	!
;00600  0006	! Copyright (C) 1976, 1977, 1978
;00700  0007	! Digital Equipment Corporation,  Maynard, Massachusetts  01754
;00800  0008	!
;00900  0009	! This software is furnished under a license for use only on  a
;01000  0010	! single computer system and may be copied only with the inclu-
;01100  0011	! sion of the above copyright notice.  This  software,  or  any
;01200  0012	! other  copies  thereof, may not be provided or otherwise made
;01300  0013	! available to any other person except for use on  such  system
;01400  0014	! and  to  one who agrees to these license terms.  Title to and
;01500  0015	! ownership of the software shall at all times remain in DEC.
;01600  0016	!
;01700  0017	! The information in this software is subject to change without
;01800  0018	! notice and should not be construed as a commitment by Digital
;01900  0019	! Equipment Corporation.
;02000  0020	!
;02100  0021	! DEC assumes no responsibility for the use or  reliability  of
;02200  0022	! its software on equipment which is not supplied by DEC.
;02300  0023	!
;02400  0024	!
;02500  0025	!
;02600  0026	!
;02700  0027	!
;02800  0028	!++
;02900  0029	!
;03000  0030	! MODULE: LNK_IMGOUT
;03100  0031	!
;03200  0032	! FACILITY: LINKER
;03300  0033	!
;03400  0034	! ABSTRACT: CONTROL PRODUCTION OF IMAGE FILE
;03500  0035	!
;03600  0036	! HISTORY:
;03700  0037	!
;03800  0038	!	VERSION: X01.00
;03900  0039	!
;04000  0040	!	AUTHOR: T.J. PORTER 06-APR-77
;04100  0041	!
;04200  0042	!	MODIFICATIONS:
;04300  0043	!
;04400  0044	! NO.	DATE		PROGRAMMER	PURPOSE
;04500  0045	! ---	----		----------	-------
;04600  0046	! 001	18-JUL-77	T.J. PORTER	SET UP IMAGE FILE FOR BLOCK AND RECORD I/O
;04700  0047	! 002	27-JUL-77	T.J. PORTER	ALLOCATE AND WRITE DEBUG SYMBOL TABLE TO 
;04800  0048	!						END OF IMAGE FILE (BEFORE GLOBALS)
;04900  0049	! 003	12-AUG-77	T.J. PORTER	RECOGNISE OTS INITIALIZATION ENTRY POINT
;05000  0050	!						AND STORE ITS ADDRESS IN HEADER
;05100  0051	! 004	13-SEP-77	T.J. PORTER	LENGTHEN TRANSFER TO IMAGE
;05200  0052	! 005	19-SEP-77	T.J. PORTER	PERMIT UNLIMITED IMAGE SIZE AND CHECK
;05300  0053	!						EXISTENCE OF DEBUGGER AND
;05400  0054	!						USER TRANSFER ADDRESSES
;05500  0055	! 006	07-OCT-77	T.J. PORTER	RE-WORK IMAGE HEADER FORMAT

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 1-1
; Digital Equipment Corporation
;
;05600  0056	!						AND ESTABLISH DEFAULT NAME AND IDENT
;05700  0057	! 007	08-OCT-77	T.J. PORTER	SHAREABLE IMAGES
;05800  0058	! 008	05-JAN-78	T.J. PORTER	MAKE SHAREABLE IMAGES ALSO RUNNABLE
;05900  0059	!						AND DEBUGGABLE
;06000  0060	! 009	18-JAN-78	T.J. PORTER	ADD TO HEADER THE IMAGE FLAGS, CHANNEL COUNT
;06100  0061	!						I/O SEGMANT SIZE AND PRIVILEGE REQUESTS
;06200  0062	!						AND ADD TRACEBACK
;06300  0063	! 010	09-MAR-78	T.J. PORTER	CORRECT > BUG FOR NAMED DIRECTORIES
;06400  0064	! 011	15-MAR-78	T.J. PORTER	CORRECT OVER ALLOCATION OF
;06500  0065	!						TRACEBACK DATA UNDER CERTAIN CONDITIONS
;06600  0066	! 012	20-APR-78	T.J. PORTER	REQUIRE FILE CLEAN UP
;06700  0067	! 013	25-APR-78	T.J. PORTER	COMPRESS EMPTY PAGES FROM IMAGES
;06800  0068	! 014	16-MAY-78	T.J. PORTER	IMAGE STORING ERROR BUG FIX
;06900  0069	! 015	16-JUN-78	T.J. PORTER	SHAREABLE IMAGES AND CLUSTERS
;06910  0070	! 016	06-JUL-78	T.J. PORTER	RMS P0 SPACE BUFFER SUPPRESSION
;06920  0071	! 017	17-JUL-78	T.J. PORTER	SKIP ZERO LENGTH I-SECTS
;06960  0072	! 018	19-JUL-78	T.J. PORTER	ENABLE THE COPYING OF SECTIONS
;06970  0073	!						FROM SHAREABLE IMAGES
;06980  0074	! 019	31-JUL-78	T.J. PORTER	IGNORE ATTEMPT TO WRITE ZEROES
;06990  0075	! 020	03-AUG-78	T.J. PORTER	EXCEPT IF PAGE ALREADY WRITTEN
;07000  0076	!--

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2
; Digital Equipment Corporation
;
;07100  0077	     
;07200  0078	!
;07300  0079	!++
;07400  0080	!
;07500  0081	! FUNCTIONAL DESCRIPTION:
;07600  0082	!
;07700  0083	!	THIS MODULE CONTAINS ALL ROUTINES ASSOCIATED WITH IMAGE OUTPUT
;07800  0084	!	IT CONTAINS THE FOLLOWING EXTERNALLY CALLED ROUTINES:
;07900  0085	!	LNK$IMGINIT	- NO ARGUMENTS
;08000  0086	!
;08100  0087	!	LNK$WRTIMGHDR	- NO ARGUMENTS
;08200  0088	!			    - PROCESSES THE SINGLY LINKED LIST OF IMAGE
;08300  0089	!			      SECTION DESCRIPTORS, BUILDING THE IMAGE
;08400  0090	!			      HEADER WITH ALL ITS ISDS
;08500  0091	!	LNK$WRTIMGBYTS(BYTECOUNT,BUFFRADR,REPTCOUNT)
;08600  0092	!			     - WRITES "BYTECOUNT" BYTES FROM "BUFFRADR"
;08700  0093	!			       "REPTCOUNT" TIMES AND UPDATES THE
;08800  0094	!			        LINKER'S LOCATION COUNTER BY THE
;08900  0095	!			        TOTAL NUMBER OF BYTES. IF 
;09000  0096	!				REPTCOUNT IS ZERO, IT IS SET TO 1
;09100  0097	!			     - ATTEMPTS TO WRITE A BYTE STREAM,
;09200  0098	!			       ANY PART OF WHICH FALLS OUTSIDE
;09300  0099	!			       THE SPACE ALLOCATED TO THE 
;09400  0100	!			       IMAGE PRODUCES AN ERROR AND
;09500  0101	!			       VALUE FALSE IS RETURNED.
;09600  0102	!	LNK$FLUSHIMG         - NO ARGUMENTS
;09700  0103	!			     - WRITES EVERY BLOCK OF IMAGE, ENSURING
;09800  0104	!			       THAT THOSE NOT TOUCHED HERETOFORE
;09900  0105	!			       ARE ZERO FILLED.
;10000  0106	!	LNK$CLOSIMGFIL	- NO ARGUMENTS
;10100  0107	!			- CLOSES THE IMAGE FILE
;10200  0108	!
;10300  0109	!	ANY OF THE ABOVE ERRORS TURNS OFF IMAGE PRODUCTION
;10400  0110	!	(BIT LNK$S_IMAGE IN LNK$GL_CTLMSK).
;10500  0111	!
;10600  0112	!
;10700  0113	!--
;10800  0114	!
;10900  0115	LIBRARY
;11000  0116		'SYS$LIBRARY:LIB.L32';				! SYSTEM USER DATA STRUCTURES
;11200  0117	REQUIRE
;11300  0118		'PREFIX';
;11400  0310	REQUIRE
;11500  0311		'DATBAS';			! INTERNAL DATABASE
;11600  0543	REQUIRE
;11700  0544		'SYMFMT';			! SYMBOL TABLE FORMATS
;11800  0629	REQUIRE
;11900  0630		'ISGENC';			! IMAGE SECTION FORMATS
;12000  1207	FORWARD ROUTINE
;12100  1208		LNK$CLOSIMGFIL : NOVALUE,				! CLOSE ROUTINE
;12200  1209		INCHDRSIZE : NOVALUE,			! ROUTINE THAT ACCUMULATES HEADER SIZE
;12300  1210		ISDTOHEADER : NOVALUE,			! COPY AN ISD INTO THE HEADER
;12310  1211		READSECTION : NOVALUE,			! READ GLOBAL SECTIONS FROM SHAREABLE IMAGES
;12400  1212		WRITESECTION;				! WRITES A SECTION OF AN IMAGE
;12500  1213	!

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-1
; Digital Equipment Corporation
;
;12600  1214	EXTERNAL ROUTINE
;12700  1215		LNK$DIAG,
;12800  1216		SYS$GETPTI : ADDRESSING_MODE(GENERAL),		!*** TEMPORARILY TILL A SERVICE MACRO EXISTS ***
;12900  1217		LNK$ALLOBLK,					! DYNAMIC MEMORY ALLOCATION
;13000  1218		LNK$DEALBLK,					! AND DEALLOCATION ROUTINES
;13100  1219		LNK$ERRMSG,					! ERROR MESSAGES
;13200  1220		LNK$SEARCH;					! SYMBOL TABLE SEARCH
;13300  1221	!
;13400  1222	EXTERNAL LITERAL
;13500  1223		ERM$C_CLOSERR : BYTLIT,				! CLOSE FAILURE MESSAGE
;13600  1224		ERM$C_CRE8ERR : BYTLIT,				! FAILURE TO CREATE FILE ERROR CODE
;13700  1225		ERM$C_DBGTFR : BYTLIT,				! NO DEBUGGER TRANSFER ADDRESS
;13800  1226		ERM$C_MEMFUL : BYTLIT,				! FAILED TO MAP THE IMAGE
;13810  1227		ERM$C_OPIDERR : BYTLIT,				! SHAREABLE IMAGE OPEN FAILURE
;13900  1228		ERM$C_OUTSIMG : BYTLIT,				! ATTEMPT TO STORE OUTSIDE IMAGE
;13910  1229		ERM$C_REDERR : BYTLIT,				! READ FAILURE ON SHAREABLE IMAGE
;14000  1230		ERM$C_TFRSYS : BYTLIT,				! TRANSFER ADDRESS IN SYSTEM IMAGE
;14100  1231		ERM$C_UNMCOD : BYTLIT,				! MESSGAGE GIVING USER FILENAME
;14200  1232		ERM$C_USRTFR : BYTLIT,				! NO USER TRANSFER ADDRESS IN EXE IMAGE
;14300  1233		ERM$C_WRTERR : BYTLIT,				! WRITE ERROR CODE
;14400  1234		SEV$C_INFOR : SHORT,				! INFORMATIONAL ERROR
;14500  1235		SEV$C_DIAG : SHORT,				! DIAGNOSTIC SEVERITY
;14600  1236		LNK$S_CONTIG : SHORT,				! IMAGE MUST BE CONTIGUOUS
;14700  1237		LNK$S_DBG : SHORT,				! DEBUGGER LINKED IN
;14800  1238		LNK$S_TRACE : SHORT,				! TRACE BACK DATA
;14900  1239		LNK$S_DBGREC : SHORT,				! CURRENT RECORD IS A DEBUG DATA STEAM
;15000  1240		LNK$S_EXE : SHORT,				! THIS IS AN EXECUTABLE IMAGE
;15100  1241		LNK$S_IMAGE : SHORT,				! IMAGE OUTPUT ENABLE
;15110  1242		LNK$S_NOP0BUFS : SHORT,				! RMS P0 BUFFER CONSUMPTION SUPPRESSED
;15200  1243		LNK$S_PICIMG : SHORT,				! IMAGE IS POSITION INDEPENDENT
;15300  1244		LNK$S_SYS : SHORT;				! SYSTEM IMAGE FLAG
;15400  1245	!
;15500  1246	EXTERNAL
;15510  1247		LNK$AL_RAB : BLOCK[,BYTE],			! RAB FOR READING SHAREABLE IMAGES
;15600  1248		LNK$AW_VERSION : BLOCK[,BYTE],			! VERSION NUMBER
;15610  1249		LNK$GB_PASS : BYTE,				! PASS NUMBER
;15700  1250		LNK$GL_CTLMSK,					! CONTROL FLAGS
;15800  1251		LNK$GL_CLULST,					! CLUSTER LISTHEADE
;15900  1252		LNK$GL_CURCLU : REF BLOCK[,BYTE],		! CURRENT CLUSTER
;16000  1253		LNK$GL_DEFCLU : BLOCK[,BYTE],			! DEFAULT CLUSTER BLOCK
;16100  1254		LNK$GL_IMGFIL : REF BLOCK[,BYTE],		! POINTER TO IMAGE DESCRIPTOR BLOCK
;16200  1255		LNK$GL_DBGESTIM,				! ESTIMATE OF DST BYTES ON PASS 1
;16300  1256		LNK$GL_DBGTFPS,					! P-SECT DESCRIPTOR FOR DEBUGGER
;16400  1257								! TRANSFER ADDRESS
;16500  1258		LNK$GL_DBGTFR,					! DEBUGGER TRANSFER ADDRESS
;16600  1259		LNK$GW_GSTRECS : WORD,				! NUMBER RECORDS WRITTEN TO GST OF IMAGE
;16700  1260		LNK$GL_TFRPSC,					! USER TRANSFER ADDRESS P-SECT
;16800  1261		LNK$GL_TFRADR,					! USER TRANSFER ADDRESS
;16900  1262		LNK$GQ_ALOSTIM : VECTOR,			! TIME OF MEMORY ALLOCATION
;17000  1263		LNK$GQ_PRIVS : VECTOR,				! VECTOR OF LONGWORDS OF IMAGE PRIVILEGES
;17100  1264		LNK$GT_IMGNAM : VECTOR[,BYTE],			! IMAGE NAME AREA
;17200  1265		LNK$GT_IMGID  : VECTOR[,BYTE],			! IMAGE IDENT AREA
;17300  1266		LNK$GW_CHANS : WORD,				! NUMBER OF I/O CHANNELS
;17400  1267		LNK$GW_DZROMIN : WORD,				! NUMBER OF PAGES REQUIRED IN I-SECT BEFORE COMPRESSION
;17500  1268		LNK$GW_IOSEG : WORD,				! NUMBER OF PAGES OF IMAGE I/O SEGMENT

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-2
; Digital Equipment Corporation
;
;17600  1269		LNK$GW_MISECTS : WORD,				! MAXIMUM NUMBER OF IMAGE SECTIONS
;17700  1270		LNK$GW_NISECTS : WORD,				! ACTUAL NUMBER OF IMAGE SECTIONS
;17800  1271		LNK$GW_NSYMBOLS : WORD,				! NUMBER OF GLOBAL SYMBOLS
;17900  1272		LNK$GL_GSBUFDSC : VECTOR[3];			! DESCRIPTOR FOR COPYING GLOBAL SECTIONS
;18000  1273	!
;18100  1274	GLOBAL
;18200  1275		LNK$AL_IMGRAB : $RAB(RAC=SEQ),			! IMAGE FILE RECORD ACCESS BLOCK.
;18300  1276		LNK$GL_IMGHDR : REF BLOCK[,BYTE],		! POINTER TO IMAGE HEADER
;18400  1277		LNK$GL_CURISD : REF BLOCK[,BYTE],		! CURRENT ISD ADDRESS
;18500  1278		LNK$GL_IMGTOP,					! MAPPED ADDRESS AT TOP + 1
;18600  1279		LNK$GL_LOCN,					! CURRENT LOCATION COUNTER
;18700  1280		LNK$GL_DSTLOCN,					! NEXT LOCATION IN DST
;18800  1281		LNK$GL_DSTEND,					! END OF DST WRITTEN
;18900  1282		LNK$GW_DSTVBN : WORD,				! VBN AT WHICH DST BEGINS
;19000  1283		LNK$GW_HDRBLKS : WORD,				! BLOCKS IN IMAGE HEADER
;19100  1284		LNK$GW_IMGBLKS : WORD,				! BLOCKS OF IMAGE
;19200  1285		LNK$GW_IMGIFI : WORD,				! IFI OF IMAGE FILE
;19300  1286		LNK$GW_DSTBLKS : WORD,				! NUMBER OF BLOCKS OF DST
;19400  1287		LNK$GW_GSTVBN : WORD,				! VBN OF GLOBAL SYMBOL TABLE
;19500  1288		LNK$GL_MATCHID,					! MATCH CONTROL ID FOR THIS SHAREABLE IMAGE
;19600  1289		LNK$GB_MATCHCTL : BYTE INITIAL(ISD$K_MATLEQ);	! MATCH CONTROL FLAGS
;19700  1290	!
;19800  1291	OWN
;19900  1292		DSTVIRTOP,					! AND THE TOP
;20000  1293		DSTBUFFER : VECTOR[2],				! BUFFER DESCRIPTOR FOR DST GENERATED
;20100  1294		HEADERDESC : VECTOR[2],				! DESCRIPTOR OF HEADER BUFFER
;20200  1295		HEADER_SIZE : INITIAL(IHD$K_MAXLENGTH);		! ACCUMULATOR FOR IMAGE HEADER - STARTS
;20300  1296								! INCLUDING FIXED PART, ACTIVATION PART
;20400  1297								! SYMBOL TABLE DESCRIPTORS AND IDENTS
;20500  1298	!
;20600  1299	LITERAL
;20700  1300		FILENAMELEN = 9,				! LENGTH OF A FILENAME
;20800  1301		TFRLENGTH = 5120;				! MAXIMUM TRANSFER BYTE COUNT
;20900  1302	!
;21000  1303	GLOBAL ROUTINE LNK$IMGINIT : NOVALUE =
;21100  1304	BEGIN
;21200  1305	!
;21300  1306	!	THIS ROUTINE IS CALLED TO INITIALIZE THE IMAGE GENERATION
;21400  1307	!
;21500  1308	IF NOT .LNK$GL_CTLMSK<LNK$S_SYS,1,0>			! IF NOT A SYSTEM IMAGE,
;21600  1309	THEN IF .LNK$GL_CTLMSK<LNK$S_TRACE,1,0>			! AND TRACEBACK 
;21700  1310	     OR .LNK$GL_CTLMSK<LNK$S_DBG,1,0>			! OR DEBUGGING ENABLED, THEN
;21800  1311	     THEN BEGIN
;21900  1312		LNK$GL_DSTEND = 0;				! INITIALIZE END POINT AT START
;22000  1313		DSTVIRTOP = (.LNK$GL_DBGESTIM OR 511) + 1;	! AND ADD THE SIZE INTO VIRTUAL DESCRIPTOR
;22100  1314		LNK$GL_DSTLOCN = 0;				! SET LOCATION COUNTER AT START
;22200  1315		IF NOT $EXPREG(PAGCNT=.DSTVIRTOP/512,RETADR=DSTBUFFER)	! ALLOCATE A BUFFER FOR IT
;22300  1316		THEN BEGIN						! BUT IF IT FAILS
;22400  1317			LNK$GL_CTLMSK<LNK$S_IMAGE,1,0> = FALSE;		! DISABLE IMAGE PRODUCTION
;22500  1318			LNK$ERRMSG(ERM$C_MEMFUL,SEV$C_DIAG);		! REPORT THE ERROR
;22600  1319			RETURN;						! AND GIVE UP
;22700  1320		     END;
;22800  1321		END;
;22900  1322	IF .LNK$GL_CTLMSK<LNK$S_SHR,1,0>				! IF A SHAREABLE IMAGE
;23000  1323	THEN LNK$GW_MISECTS = 0;					! DISABLE IMAGE COMPRESSION

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-3
; Digital Equipment Corporation
;
;23100  1324	IF .LNK$GL_GSBUFDSC[0] NEQ 0					! IF ANY GLOBAL SECTIONS ARE TO BE COPIED
;23200  1325	THEN IF NOT $EXPREG(PAGCNT=.LNK$GL_GSBUFDSC[0],			! THEN ALLOCATE A BUFFER EQUAL IN SIZE
;23210P 1326				RETADR=LNK$GL_GSBUFDSC[1])		! TO THE LARGEST ONE SEEN
;23220  1327		THEN BEGIN						! BUT IF IT FAILS
;23230  1328			LNK$GL_CTLMSK<LNK$S_IMAGE,1,0> = FALSE;		! DISABLE IMAGE PRODUCTION
;23240  1329			LNK$ERRMSG(ERM$C_MEMFUL,SEV$C_DIAG);		! REPORT THE ERROR
;23250  1330			RETURN;						! AND GIVE UP
;23260  1331		     END;
;23300  1332	RETURN;
;23400  1333	END;


							    .TITLE  LNK_IMGOUT
							    .IDENT  \X01.20\

							    .PSECT  $OWN$,NOEXE,2

					      00000 DSTVIRTOP:
							    .BLKB   4
					      00004 DSTBUFFER:
							    .BLKB   8
					      0000C HEADERDESC:
							    .BLKB   8
					      00014 HEADER_SIZE:
							    .LONG   124							      ;

							    .PSECT  $GLOBAL$,NOEXE,2

					      00000 LNK$AL_IMGRAB::
							    .BYTE   1							      ;
					      00001 	    .BYTE   68							      ;
					      00002 	    .WORD   0							      ;
					      00004 	    .LONG   0							      ;
					      00008 	    .LONG   0							      ;
					      0000C 	    .LONG   0							      ;
					      00010 	    .WORD   0, 0, 0						      ;
					      00016 	    .WORD   0							      ;
					      00018 	    .LONG   0							      ;
					      0001C 	    .WORD   0							      ;
					      0001E 	    .BYTE   0							      ;
					      0001F 	    .BYTE   0							      ;
					      00020 	    .WORD   0							      ;
					      00022 	    .WORD   0							      ;
					      00024 	    .LONG   0							      ;
					      00028 	    .LONG   0							      ;
					      0002C 	    .LONG   0							      ;
					      00030 	    .LONG   0							      ;
					      00034 	    .BYTE   0							      ;
					      00035 	    .BYTE   0							      ;
					      00036 	    .BYTE   0							      ;
					      00037 	    .BYTE   0							      ;
					      00038 	    .LONG   0							      ;
					      0003C 	    .LONG   0							      ;
					      00040 	    .LONG   0							      ;
					      00044 LNK$GL_IMGHDR::

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-4
; Digital Equipment Corporation
;
							    .BLKB   4
					      00048 LNK$GL_CURISD::
							    .BLKB   4
					      0004C LNK$GL_IMGTOP::
							    .BLKB   4
					      00050 LNK$GL_LOCN::
							    .BLKB   4
					      00054 LNK$GL_DSTLOCN::
							    .BLKB   4
					      00058 LNK$GL_DSTEND::
							    .BLKB   4
					      0005C LNK$GW_DSTVBN::
							    .BLKB   2
					      0005E LNK$GW_HDRBLKS::
							    .BLKB   2
					      00060 LNK$GW_IMGBLKS::
							    .BLKB   2
					      00062 LNK$GW_IMGIFI::
							    .BLKB   2
					      00064 LNK$GW_DSTBLKS::
							    .BLKB   2
					      00066 LNK$GW_GSTVBN::
							    .BLKB   2
					      00068 LNK$GL_MATCHID::
							    .BLKB   4
					      0006C LNK$GB_MATCHCTL::
							    .BYTE   2							      ;

						    SYM$C_MAXLNG==	15
						    FDB$C_SIZE==	75
						    LNK$S_NEWUDF==	0
						    LNK$S_LIBR==	1
						    LNK$S_SHR==		2
						    LNK$S_SELSER==	3
						    LNK$S_OPTION==	4
						    LNK$S_DEBUGER==	5
						    LNK$S_LIBEXTR==	6
						    LNK$S_LIBSRCH==	7
						    LNK$M_NEWUDF==	1
						    LNK$M_LIBR==	2
						    LNK$M_SHR==		4
						    LNK$M_SELSER==	8
						    LNK$M_OPTION==	16
						    LNK$M_DEBUGER==	32
						    LNK$M_LIBEXTR==	64
						    LNK$M_LIBSRCH==	128
						    PMT$L_PSCDES==	0
						    PMT$L_MODCON==	1
						    PMT$L_SYMLST==	1
						    PMT$C_SIZE==	8
						    OMD$C_SIZE==	2080
						    OMD$M_NOPSCT==	1
						    OMD$S_NOPSCT==	0
						    OMD$M_NOBIN==	2
						    OMD$S_NOBIN==	1

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-5
; Digital Equipment Corporation
;
						    OMD$M_SHRIMG==	4
						    OMD$S_SHRIMG==	2
						    OMD$M_SELSER==	8
						    OMD$S_SELSER==	3
						    OMD$M_MAPMOD==	16
						    OMD$S_MAPMOD==	4
						    OMD$M_DEBUGER==	32
						    OMD$S_DEBUGER==	5
						    PSC$C_SIZE==	43
						    MPC$C_SIZE==	17
						    LID$C_SIZE==	4
						    CLU$C_SIZE==	55
						    CLU$S_BASED==	0
						    CLU$S_SYMBAS==	1
						    CLU$S_SHRIMG==	2
						    CLU$S_PIC==		3
						    CLU$S_COPY==	4
						    CLU$S_OPEN==	5
						    CLU$S_PENDING==	6
						    FVM$C_SIZE==	12
						    SYM$C_TBLSIZ==	128
						    SYM$C_SIZE==	42
						    OBJ$C_MAXRECTYP==	5
						    GPS$C_SIZE==	24
						    PSC$M_PIC==		1
						    PSC$M_LIB==		2
						    PSC$M_OVR==		4
						    PSC$M_REL==		8
						    PSC$M_GBL==		16
						    PSC$M_SHR==		32
						    PSC$M_EXE==		64
						    PSC$M_RD==		128
						    PSC$M_WRT==		256
						    PSC$M_SUPRES==	32768
						    GSY$C_SIZE==	4
						    SYM$S_WEAK==	0
						    SYM$S_DEF==		1
						    SYM$S_UNI==		2
						    SYM$S_REL==		3
						    SYM$S_SHRIMG==	11
						    SYM$S_REDEF==	12
						    SYM$S_SUPRES==	13
						    SYM$S_GSTMISS==	14
						    SYM$S_ENTMSK==	15
						    SYM$M_WEAK==	1
						    SYM$M_DEF==		2
						    SYM$M_UNI==		4
						    SYM$M_REL==		8
						    SYM$M_SHRIMG==	2048
						    SYM$M_REDEF==	4096
						    SYM$M_SUPRES==	8192
						    SYM$M_GSTMISS==	16384
						    SYM$M_ENTMSK==	32768
						    SRF$C_SIZE==	20
						    SDF$C_SIZE==	25

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-6
; Digital Equipment Corporation
;
						    EPM$C_SIZE==	27
						    PRO$C_SIZE==	27
						    FML$C_SIZE==	2
						    ARG$C_SIZE==	2
						    ARG$K_UNKNOWN==	0
						    ARG$K_VALUE==	1
						    ARG$K_REF==		2
						    ARG$K_DESC==	3
						    MHD$C_SIZE==	20
						    EOM$C_SIZE==	7
						    OBJ$C_EOMMIN==	2
						    OBJ$C_EOMMAX==	7
						    TIR$C_STA_GBL==	0
						    TIR$C_STA_SB==	1
						    TIR$C_STA_SW==	2
						    TIR$C_STA_LW==	3
						    TIR$C_STA_PB==	4
						    TIR$C_STA_PW==	5
						    TIR$C_STA_PL==	6
						    TIR$C_STA_UB==	7
						    TIR$C_STA_UW==	8
						    TIR$C_STA_BFI==	9
						    TIR$C_STA_WFI==	10
						    TIR$C_STA_LFI==	11
						    TIR$C_STA_EPM==	12
						    TIR$C_STA_CKARG==	13
						    TIR$C_MAXSTACOD==	13
						    TIR$C_MINSTOCOD==	20
						    TIR$C_STO_SB==	20
						    TIR$C_STO_SW==	21
						    TIR$C_STO_L==	22
						    TIR$C_STO_BD==	23
						    TIR$C_STO_WD==	24
						    TIR$C_STO_LD==	25
						    TIR$C_STO_LI==	26
						    TIR$C_STO_PIDR==	27
						    TIR$C_STO_PICR==	28
						    TIR$C_STO_RSB==	29
						    TIR$C_STO_RSW==	30
						    TIR$C_STO_RL==	31
						    TIR$C_STO_VPS==	32
						    TIR$C_STO_USB==	33
						    TIR$C_STO_USW==	34
						    TIR$C_STO_RUB==	35
						    TIR$C_STO_RUW==	36
						    TIR$C_STO_B==	37
						    TIR$C_STO_W==	38
						    TIR$C_STO_RB==	39
						    TIR$C_STO_RW==	40
						    TIR$C_MAXSTOCOD==	40
						    TIR$C_MINOPRCOD==	50
						    TIR$C_OPR_NOP==	50
						    TIR$C_OPR_ADD==	51
						    TIR$C_OPR_SUB==	52
						    TIR$C_OPR_MUL==	53

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-7
; Digital Equipment Corporation
;
						    TIR$C_OPR_DIV==	54
						    TIR$C_OPR_AND==	55
						    TIR$C_OPR_IOR==	56
						    TIR$C_OPR_EOR==	57
						    TIR$C_OPR_NEG==	58
						    TIR$C_OPR_COM==	59
						    TIR$C_OPR_INSV==	60
						    TIR$C_OPR_ASH==	61
						    TIR$C_OPR_USH==	62
						    TIR$C_OPR_ROT==	63
						    TIR$C_OPR_SEL==	64
						    TIR$C_OPR_REDEF==	65
						    TIR$C_MAXOPRCOD==	65
						    TIR$C_MINCTLCOD==	80
						    TIR$C_CTL_SETRB==	80
						    TIR$C_CTL_AUGRB==	81
						    TIR$C_MAXCTLCOD==	81
						    ISC$C_SIZE==	13
						    ISD$C_SIZE==	48
						    IHD$K_SHR==		2
						    IHD$K_ACTIVOFF==	40
						    IHD$K_SYMDBGOFF==	56
						    IHD$K_IMGIDOFF==	68
						    IHD$K_PATCHOFF==	124
						    IHD$K_MAXLENGTH==	124
						    HDR$K_FILLCHR==	255
						    HDR$K_MINFILL==	2
							    .GLOBL  LNK$DIAG, SYS$GETPTI, LNK$ALLOBLK, LNK$DEALBLK
							    .GLOBL  LNK$ERRMSG, LNK$SEARCH, ERM$C_CLOSERR, ERM$C_CRE8ERR
							    .GLOBL  ERM$C_DBGTFR, ERM$C_MEMFUL, ERM$C_OPIDERR, ERM$C_OUTSIMG
							    .GLOBL  ERM$C_REDERR, ERM$C_TFRSYS, ERM$C_UNMCOD, ERM$C_USRTFR
							    .GLOBL  ERM$C_WRTERR, SEV$C_INFOR, SEV$C_DIAG, LNK$S_CONTIG
							    .GLOBL  LNK$S_DBG, LNK$S_TRACE, LNK$S_DBGREC, LNK$S_EXE
							    .GLOBL  LNK$S_IMAGE, LNK$S_NOP0BUFS, LNK$S_PICIMG, LNK$S_SYS
							    .GLOBL  LNK$AL_RAB, LNK$AW_VERSION, LNK$GB_PASS, LNK$GL_CTLMSK
							    .GLOBL  LNK$GL_CLULST, LNK$GL_CURCLU, LNK$GL_DEFCLU, LNK$GL_IMGFIL
							    .GLOBL  LNK$GL_DBGESTIM, LNK$GL_DBGTFPS, LNK$GL_DBGTFR
							    .GLOBL  LNK$GW_GSTRECS, LNK$GL_TFRPSC, LNK$GL_TFRADR, LNK$GQ_ALOSTIM
							    .GLOBL  LNK$GQ_PRIVS, LNK$GT_IMGNAM, LNK$GT_IMGID, LNK$GW_CHANS
							    .GLOBL  LNK$GW_DZROMIN, LNK$GW_IOSEG, LNK$GW_MISECTS, LNK$GW_NISECTS
							    .GLOBL  LNK$GW_NSYMBOLS, LNK$GL_GSBUFDSC, SYS$EXPREG

							    .PSECT  $CODE$,NOWRT,2

					 0C00 00000 	    .ENTRY  LNK$IMGINIT, Save R10,R11				      ; 1303
		         5A 00000000G  9F  9E 00002 	    MOVAB   @#SYS$EXPREG, R10					      ;
		         5B	0000G  CF  9E 00009 	    MOVAB   LNK$GL_CTLMSK, R11					      ;
	   36	         6B	       00  E0 0000E 	    BBS     #LNK$S_SYS, LNK$GL_CTLMSK, 2$			      ; 1308
	   04	         6B	       00  E0 00012 	    BBS     #LNK$S_TRACE, LNK$GL_CTLMSK, 1$			      ; 1309
	   2E	         6B	       00  E1 00016 	    BBC     #LNK$S_DBG, LNK$GL_CTLMSK, 2$			      ; 1310
				0000'  CF  D4 0001A 1$:     CLRL    LNK$GL_DSTEND					      ; 1312
	   50	  0000G  CF 000001FF   8F  C9 0001E 	    BISL3   #511, LNK$GL_DBGESTIM, R0				      ; 1313
    0000'  CF	         50	       01  C1 00028 	    ADDL3   #1, R0, DSTVIRTOP					      ;
				0000'  CF  D4 0002E 	    CLRL    LNK$GL_DSTLOCN					      ; 1314
				       7E  7C 00032 	    CLRQ    -(SP)						      ; 1315

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-8
; Digital Equipment Corporation
;
				0000'  CF  9F 00034 	    PUSHAB  DSTBUFFER						      ;
	   7E	  0000'  CF 00000200   8F  C7 00038 	    DIVL3   #512, DSTVIRTOP, -(SP)				      ;
		         6A	       04  FB 00042 	    CALLS   #4, SYS$EXPREG					      ;
		         1D	       50  E9 00045 	    BLBC    R0, 4$						      ;
	   04	         6B	       02  E1 00048 2$:     BBC     #2, LNK$GL_CTLMSK, 3$				      ; 1322
				0000G  CF  B4 0004C 	    CLRW    LNK$GW_MISECTS					      ; 1323
		         50	0000G  CF  D0 00050 3$:     MOVL    LNK$GL_GSBUFDSC, R0					      ; 1324
				       1E  13 00055 	    BEQL    6$							      ;
				       7E  7C 00057 	    CLRQ    -(SP)						      ; 1326
				0000G  CF  9F 00059 	    PUSHAB  LNK$GL_GSBUFDSC+4					      ;
				       50  DD 0005D 	    PUSHL   R0							      ;
		         6A	       04  FB 0005F 	    CALLS   #4, SYS$EXPREG					      ;
		         10	       50  E8 00062 	    BLBS    R0, 6$						      ;
	   00	         6B	       00  E5 00065 4$:     BBCC    #LNK$S_IMAGE, LNK$GL_CTLMSK, 5$			      ; 1328
		         7E	       00  9A 00069 5$:     MOVZBL  #SEV$C_DIAG, -(SP)					      ; 1329
		         7E	  00G  8F  9A 0006C 	    MOVZBL  #ERM$C_MEMFUL, -(SP)				      ;
		  0000G  CF	       02  FB 00070 	    CALLS   #2, LNK$ERRMSG					      ;
					   04 00075 6$:     RET     							      ; 1303

; Routine Size:  118 bytes


;23500  1334	GLOBAL ROUTINE LNK$WRTIMGBYTS(BYTECOUNT,BUFFRADR,REPTCOUNT) =
;23600  1335	BEGIN
;23700  1336	!
;23800  1337	! THIS ROUTINE IS CALLED TO WRITE "BYTECOUNT" BYTES FROM "BUFFRADR"
;23900  1338	! WITH "REPTCOUNT" REPETITIONS TO THE OUTPUT IMAGE, STARTING AT
;24000  1339	! THE CURRENT LOCATION, LNK$GL_LOCN.
;24100  1340	! THE LOCATION COUNTER IS UPDATED BY BYTECOUNT*REPTCOUNT
;24200  1341	!
;24300  1342	! ANY ATTEMPT TO WRITE OUTSIDE THE IMAGE CAUSES AN ERROR
;24400  1343	!
;24500  1344	LOCAL
;24600  1345		STORELOLIMIT,						! LOWEST LEGAL OUTPUT ADDRESS
;24700  1346		STOREHILIMIT,						! HIGHEST LEGAL OUTPUT ADDRESS,
;24800  1347		PARTITION,						! POINTER TO IMAGE PARTITION NAME (DS OR EXE)
;24900  1348		STOREADDR;						! OUTPUT ADDRESS
;25000  1349	!
;25100  1350	IF .BYTECOUNT EQL 0						! IF ZERO BYTE
;25200  1351	OR NOT .LNK$GL_CTLMSK<LNK$S_IMAGE,1,0>				! COUNT, OR NO
;25300  1352	THEN RETURN TRUE;						! IMAGE, RETURN DONE
;25400  1353	IF .REPTCOUNT EQL 0						! SET REPEAT COUNT
;25500  1354	THEN REPTCOUNT = 1;						! TO BE AT LEAST 1
;25505  1355	IF .LNK$GL_CTLMSK<LNK$S_DBGREC,1,0>				! IF THIS IS DEBUGGER DATA
;25510  1356	OR NOT CH$FAIL(CH$FIND_NOT_CH(.BYTECOUNT,.BUFFRADR,0))		! OR THERE IS A NON ZERO CHARACTER
;25520  1357	OR .LNK$GL_CURISD[ISD$Q_BUFADR] NEQ 0				! IN BUFFER TO BE WRITTEN OR
;25530  1358	THEN BEGIN							! IT HAS BEEN TOUCHED BEFORE
;25540  1359	!
;25550  1360	!	THEN WE ARE GOING TO WRITE IT TO THE IMAGE SECTION
;25560  1361	!
;25600  1362	IF NOT .LNK$GL_CTLMSK<LNK$S_DBGREC,1,0>				! IF NOT A DEBUG DATA BYTE STREAM
;25700  1363	THEN BEGIN							! SET UP THE LO AND HI ADDRESS
;25800  1364		STORELOLIMIT = 0;					! LIMITS FOR THE EXE INITIALLY
;25900  1365		STOREHILIMIT = 0;					! AS THOSE OF THE EXE BINARY
;26000  1366		PARTITION = CSTRING('image binary');			! AND THE TEXT FOR THE MESSAGE

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-9
; Digital Equipment Corporation
;
;26100  1367		IF .LNK$GL_CURISD NEQ 0					! IF A IMAGE SECTION HAS BEEN
;26200  1368		THEN BEGIN						! SET UP
;26300  1369			BIND HDRISD = LNK$GL_CURISD[ISD$AL_HDRISD]	! LABEL FOR PART GOING TO HEADER
;26400  1370						: BLOCK[,BYTE];		! 
;26500  1371			STORELOLIMIT = .HDRISD[ISD$V_VPG] ^ 9;		! LOW LIMIT IS BASE OF ISECT
;26600  1372			STOREHILIMIT = .STORELOLIMIT  +			! AND HIGH LIMIT IS BYTE BEYOND
;26700  1373						.HDRISD[ISD$W_PAGCNT]*512;
;26800  1374			IF .LNK$GL_CURISD[ISD$Q_BUFADR] EQL 0		! IF A BUFFER HAS NOT YET BEEN
;26900  1375			THEN IF NOT $EXPREG(PAGCNT=.HDRISD[ISD$W_PAGCNT],! ALLOCATED, EXPAND MY PROGRAM REGION
;27000P 1376					RETADR=LNK$GL_CURISD[ISD$Q_BUFADR])
;27100  1377			THEN BEGIN					! BY SIZE OF I-SECT BEING WRITTEN
;27200  1378				LNK$ERRMSG(ERM$C_MEMFUL,SEV$C_DIAG);	! BUT REPORT ERROR IF INSUFFICIENT
;27300  1379				LNK$GL_CTLMSK<LNK$S_IMAGE,1,0> =  FALSE;! SPACE AND TURN OFF ANY MORE
;27400  1380				RETURN TRUE;				! ATTEMPTS
;27500  1381			     END;
;27600  1382			STOREADDR = .LNK$GL_CURISD[ISD$Q_BUFADR];	! START COMPUTATION OF
;27700  1383		     END;						! POSITION TO WRITE BYTE STREAM
;27800  1384	     END
;27900  1385	ELSE BEGIN							! BUT IF IT IS THE DST BEING WRITTEN
;28000  1386		STORELOLIMIT = 0;					! THEN LIMITS ARE THE BASE AND TOP OF
;28100  1387		STOREHILIMIT = .DSTVIRTOP;				! THE DST AS IF IT WERE MAPPED INTO THE EXE
;28200  1388		PARTITION = CSTRING('Debugger Symbol Table');		! AT THE END
;28300  1389		STOREADDR = .DSTBUFFER[0];				! START COMPUTATION OF ACTUAL STORE ADDRESS
;28400  1390	     END;
;28500  1391	IF .LNK$GL_LOCN LSSU .STORELOLIMIT				! IF LOCATION COUNTER
;28600  1392	OR (.LNK$GL_LOCN + .BYTECOUNT*.REPTCOUNT) GTRU .STOREHILIMIT	! BEYOND IMAGE
;28700  1393	THEN BEGIN							! ALLOCATION, ISSUE AN
;28800  1394		LNK$ERRMSG(ERM$C_OUTSIMG,SEV$C_INFOR,.LNK$GL_LOCN,	! ERROR AND GIVE UP
;28900  1395				.PARTITION,.STORELOLIMIT,.STOREHILIMIT);
;29000  1396		LNK$GL_CTLMSK<LNK$S_IMAGE,1,0> = FALSE;			! TURNING OFF ANY
;29100  1397		RETURN FALSE;						! MORE ATTEMPTS
;29200  1398	     END;
;29300  1399	STOREADDR = .STOREADDR + .LNK$GL_LOCN - .STORELOLIMIT;		! COMPUTE MAPPED
;29400  1400	INCR I FROM 1 TO .REPTCOUNT DO					! LOOP, MOVING THE
;29500  1401		BEGIN							! REQUIRED BYTES,
;29600  1402		STOREADDR = CH$MOVE(.BYTECOUNT,.BUFFRADR,.STOREADDR);	! UPDATING THE ADDRESS
;29700  1403		END;
;29710  1404	END;
;29800  1405	LNK$GL_LOCN = .LNK$GL_LOCN + .REPTCOUNT*.BYTECOUNT;		! UPDATE LOCATION COUNTER
;29900  1406	IF (.LNK$GL_LOCN - 1) GTRU .LNK$GL_DSTEND			! MAXIMIZE THE LAST DST ADDRESS
;30000  1407	AND .LNK$GL_CTLMSK<LNK$S_DBGREC,1,0>
;30100  1408	THEN LNK$GL_DSTEND = .LNK$GL_LOCN;
;30200  1409	RETURN TRUE;							! AND ALL DONE
;30300  1410	END;



							    .PSECT  $PLIT$,NOWRT,NOEXE,2

					      00000 P.AAA:  .BYTE   12							      ;
					      00001 	    .ASCII  \image binary\					      ;
					      0000D	    .BLKB   3
					      00010 P.AAB:  .BYTE   21							      ;
					      00011 	    .ASCII  \Debugger Symbol Table\				      ;
					      00026	    .BLKB   2

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-10
; Digital Equipment Corporation
;



							    .PSECT  $CODE$,NOWRT,2

					 0FFC 00076 	    .ENTRY  LNK$WRTIMGBYTS, Save R2,R3,R4,R5,R6,R7,R8,R9,R10,R11      ; 1334
		         59	       00  D0 00078 	    MOVL    #LNK$S_DBGREC, R9					      ;
		         5A	0000G  CF  9E 0007B 	    MOVAB   LNK$GL_CTLMSK, R10					      ;
		         5B	0000'  CF  9E 00080 	    MOVAB   LNK$GL_LOCN, R11					      ;
		         58	  04   AC  D0 00085 	    MOVL    BYTECOUNT, R8					      ; 1350
				       7F  13 00089 	    BEQL    4$							      ;
	   7B	         6A	       00  E1 0008B 	    BBC     #LNK$S_IMAGE, LNK$GL_CTLMSK, 4$			      ; 1351
				  0C   AC  D5 0008F 	    TSTL    REPTCOUNT						      ; 1353
				       04  12 00092 	    BNEQ    1$							      ;
		    0C   AC	       01  D0 00094 	    MOVL    #1, REPTCOUNT					      ; 1354
	   19	         6A	       59  E0 00098 1$:     BBS     R9, LNK$GL_CTLMSK, 3$				      ; 1355
      08   BC	         58	       00  3B 0009C 	    SKPC    #0, R8, @BUFFRADR					      ; 1356
				       02  12 000A1 	    BNEQ    2$							      ;
				       51  D4 000A3 	    CLRL    R1							      ;
				       51  D5 000A5 2$:     TSTL    R1							      ;
				       0C  12 000A7 	    BNEQ    3$							      ;
		         50	  F8   AB  D0 000A9 	    MOVL    LNK$GL_CURISD, R0					      ; 1357
				  04   A0  D5 000AD 	    TSTL    4(R0)						      ;
				       03  12 000B0 	    BNEQ    3$							      ;
				     00B4  31 000B2 	    BRW     12$							      ;
				       53  D4 000B5 3$:     CLRL    STORELOLIMIT					      ; 1364
	   5B	         6A	       59  E0 000B7 	    BBS     R9, LNK$GL_CTLMSK, 6$				      ; 1362
				       54  D4 000BB 	    CLRL    STOREHILIMIT					      ; 1365
		         55	0000'  CF  9E 000BD 	    MOVAB   P.AAA, PARTITION					      ; 1366
		         51	  F8   AB  D0 000C2 	    MOVL    LNK$GL_CURISD, R1					      ; 1367
				       5D  13 000C6 	    BEQL    7$							      ;
	   50	         51	       0C  C1 000C8 	    ADDL3   #12, R1, R0						      ; 1369
      04   A0	         17	       00  EF 000CC 	    EXTZV   #0, #23, 4(R0), STORELOLIMIT			      ; 1371
				       53     000D1									      ;
	   53	         53	       09  78 000D2 	    ASHL    #9, STORELOLIMIT, STORELOLIMIT			      ;
		         52	  02   A0  3C 000D6 	    MOVZWL  2(R0), R2						      ; 1373
	   52	         52	       09  78 000DA 	    ASHL    #9, R2, R2						      ; 0000
	   54	         52	       53  C1 000DE 	    ADDL3   STORELOLIMIT, R2, STOREHILIMIT			      ; 1372
				  04   A1  D5 000E2 	    TSTL    4(R1)						      ; 1374
				       25  12 000E5 	    BNEQ    5$							      ;
				       7E  7C 000E7 	    CLRQ    -(SP)						      ; 1376
				  04   A1  9F 000E9 	    PUSHAB  4(R1)						      ;
		         7E	  02   A0  3C 000EC 	    MOVZWL  2(R0), -(SP)					      ;
	      00000000G  9F	       04  FB 000F0 	    CALLS   #4, @#SYS$EXPREG					      ;
		         12	       50  E8 000F7 	    BLBS    R0, 5$						      ;
		         7E	       00  9A 000FA 	    MOVZBL  #SEV$C_DIAG, -(SP)					      ; 1378
		         7E	  00G  8F  9A 000FD 	    MOVZBL  #ERM$C_MEMFUL, -(SP)				      ;
		  0000G  CF	       02  FB 00101 	    CALLS   #2, LNK$ERRMSG					      ;
	   79	         6A	       00  E5 00106 	    BBCC    #LNK$S_IMAGE, LNK$GL_CTLMSK, 13$			      ; 1379
				       77  11 0010A 4$:     BRB     13$							      ; 1380
		         50	  F8   AB  D0 0010C 5$:     MOVL    LNK$GL_CURISD, R0					      ; 1382
		         57	  04   A0  D0 00110 	    MOVL    4(R0), STOREADDR					      ;
				       0F  11 00114 	    BRB     7$							      ; 1362
		         54	0000'  CF  D0 00116 6$:     MOVL    DSTVIRTOP, STOREHILIMIT				      ; 1387
		         55	0000'  CF  9E 0011B 	    MOVAB   P.AAB, PARTITION					      ; 1388

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-11
; Digital Equipment Corporation
;
		         57	0000'  CF  D0 00120 	    MOVL    DSTBUFFER, STOREADDR				      ; 1389
		         51	       6B  D0 00125 7$:     MOVL    LNK$GL_LOCN, R1					      ; 1391
		         53	       51  D1 00128 	    CMPL    R1, STORELOLIMIT					      ;
				       0D  1F 0012B 	    BLSSU   8$							      ;
	   50	         58	  0C   AC  C5 0012D 	    MULL3   REPTCOUNT, R8, R0					      ; 1392
		         50	       51  C0 00132 	    ADDL2   R1, R0						      ;
		         54	       50  D1 00135 	    CMPL    R0, STOREHILIMIT					      ;
				       16  1B 00138 	    BLEQU   9$							      ;
				       18  BB 0013A 8$:     PUSHR   #^M<R3,R4>						      ; 1394
				       22  BB 0013C 	    PUSHR   #^M<R1,R5>						      ;
		         7E	       00  9A 0013E 	    MOVZBL  #SEV$C_INFOR, -(SP)					      ;
		         7E	  00G  8F  9A 00141 	    MOVZBL  #ERM$C_OUTSIMG, -(SP)				      ;
		  0000G  CF	       06  FB 00145 	    CALLS   #6, LNK$ERRMSG					      ;
	   39	         6A	       00  E5 0014A 	    BBCC    #LNK$S_IMAGE, LNK$GL_CTLMSK, 14$			      ; 1396
				       37  11 0014E 	    BRB     14$							      ; 1397
	   50	         57	       6B  C1 00150 9$:     ADDL3   LNK$GL_LOCN, STOREADDR, R0				      ; 1399
	   57	         50	       53  C3 00154 	    SUBL3   STORELOLIMIT, R0, STOREADDR				      ;
				       56  D4 00158 	    CLRL    I							      ; 1400
				       08  11 0015A 	    BRB     11$							      ;
	   67	    08   BC	       58  28 0015C 10$:    MOVC3   R8, @BUFFRADR, (STOREADDR)				      ; 1402
		         57	       53  D0 00161 	    MOVL    R3, STOREADDR					      ;
	   F3	         56	  0C   AC  F3 00164 11$:    AOBLEQ  REPTCOUNT, I, 10$					      ; 1400
	   50	    0C   AC	       58  C5 00169 12$:    MULL3   R8, REPTCOUNT, R0					      ; 1405
		         6B	       50  C0 0016E 	    ADDL2   R0, LNK$GL_LOCN					      ;
	   50	         6B	       01  C3 00171 	    SUBL3   #1, LNK$GL_LOCN, R0					      ; 1406
		    08   AB	       50  D1 00175 	    CMPL    R0, LNK$GL_DSTEND					      ;
				       08  1B 00179 	    BLEQU   13$							      ;
	   04	         6A	       59  E1 0017B 	    BBC     R9, LNK$GL_CTLMSK, 13$				      ; 1407
		    08   AB	       6B  D0 0017F 	    MOVL    LNK$GL_LOCN, LNK$GL_DSTEND				      ; 1408
		         50	       01  D0 00183 13$:    MOVL    #1, R0						      ; 1409
					   04 00186 	    RET     							      ;
				       50  D4 00187 14$:    CLRL    R0							      ; 1334
					   04 00189 	    RET     							      ;

; Routine Size:  276 bytes


;30400  1411	GLOBAL ROUTINE LNK$FLUSHIMG : NOVALUE =
;30500  1412	BEGIN
;30600  1413	!
;30700  1414	!++
;30800  1415	!	THIS ROUTINE IS CALLED WITHOUT ANY ARGUMENTS TO FLUSH THE
;30900  1416	!	BINARY THAT WAS GENERATED TO AN IMAGE FILE.
;31000  1417	!	THE FIRST PHASE IS TO GO DOWN THE LIST OF IMAGE SECTION DESCRIPTORS
;31100  1418	!	AND WITH THE USE OF THE MEMORY MANAGEMENT SYSTEM SERVICE
;31200  1419	!	$GETPTI, COMPRESSING THE UNINITIALIZED PAGES FROM EACH IMAGE SECTION
;31300  1420	!	THE COMPRESSION IS ACHIEVED BY GENERATING A DEMAND ZERO IMAGE
;31400  1421	!	SECTION DESCRIPTOR FOR EACH REGION OF AN IMAGE SECTION THAT
;31500  1422	!	HAS NOT BEEN TOUCHED DURING PASS 2.
;31600  1423	!	THE SIZES OF THE IMAGE HEADER AND IMAGE BINARY ARE ACCUMULATED DURING THIS 
;31700  1424	!	PHASE WHICH ENDS WITH CREATION OF THE FILE AND ALLOCATION OF A BUFFER FOR THE HEADER.
;31800  1425	!	THE NEXT PHASE CONSISTS OF ANOTHER PASS DOWN THE LIST OF 
;31900  1426	!	IMAGE SECTION DESCRIPTORS, CREATING THE ISD ENTRY IN THE 
;32000  1427	!	HEADER (STILL IN MEMORY) AND WRITING TO THE IMAGE FILE THOSE
;32100  1428	!	IMAGE SECTIONS THAT CONTAIN BINARY DATA.

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-12
; Digital Equipment Corporation
;
;32200  1429	!	FINALLY THE DEBUG SYMBOL TABLE, IF ANY IS WRITTEN TO THE FILE
;32300  1430	!	AND THE SUMMARY PARAMETERS OF THE IMAGE HEADER ARE COMPUTED.
;32400  1431	!	THE FILE IS LEFT OPEN FOR POSSIBLE APPENDING OF THE GLOBAL SYMBOL
;32500  1432	!	TABLE FOLLOWED BY THE WRITING OF THE IMAGE HEADER.
;32600  1433	!
;32700  1434	!--
;32800  1435	!
;32810  1436	LABEL
;32820  1437		PROCSISD;
;32830  1438	!
;32900  1439	LOCAL
;33000  1440		CURVBN,							! CURRENT VBN WHEN WRITING I-SECTIONS
;33100  1441		ERRORCODE,						! WRITE ERROR CODE RETURNED
;33200  1442		EMPTYDESC : VECTOR[2],					! DESCRIPTOR RETURNED FOR EMPTY PAGES
;33300  1443		FILEBLKS,						! NUMBER OF BLOCKS IN FILE
;33400  1444		IMAGEFAB : BLOCK[FAB$C_BLN,BYTE],			! FILE ACCESS BLOCK - JUST FOR CREATE
;33500  1445		PREVISD : REF BLOCK[,BYTE];				! POINTER TO PREVIOUS ISD
;33600  1446	!
;33700  1447	BIND AUXFNB = LNK$GL_IMGFIL[FDB$AL_AUXFNB] : BLOCK[NAM$C_BLN,BYTE];	! AUXILIARY FILENAME BLOCK
;33800  1448	!
;33900  1449	IF .LNK$GL_CTLMSK<LNK$S_SYS,1,0>				! IF A SYSTEM IMAGE
;34000  1450	THEN BEGIN							! THERE IS ONLY ONE ISD (BUT NO HEADER)
;34100  1451		BIND	SYSISD = LNK$GL_DEFCLU[CLU$L_FSTISD] : REF BLOCK[,BYTE],	! GIVE IT A NAME
;34200  1452			SYSHDRISD = SYSISD[ISD$AL_HDRISD] : BLOCK[,BYTE]; ! AND FOR PART THAT WOULD BE HEADER
;34300  1453		IF .LNK$GL_DEFCLU[CLU$L_FSTISD] NEQ 0			! IF THERE IS AN IMAGE SECTION
;34400  1454		THEN LNK$GW_IMGBLKS = .SYSHDRISD[ISD$W_PAGCNT];		! GET THE BLOCK COUNT
;34500  1455		HEADER_SIZE = 0;					! NO HEADER
;34600  1456	     END
;34700  1457	ELSE BEGIN
;34800  1458	     LNK$GL_CURCLU = LNK$GL_CLULST;				! START AT FIRST CLUSTER
;34900  1459	     WHILE(LNK$GL_CURCLU = .LNK$GL_CURCLU[CLU$L_NXTCLU]) NEQ 0 DO	! GO DOWN THE LIST
;35000  1460	     BEGIN
;35100  1461	     PREVISD = LNK$GL_CURCLU[CLU$L_FSTISD];
;35200  1462	     WHILE (LNK$GL_CURISD = .PREVISD[ISD$L_NXTISD]) NEQ 0 DO	! WHILE THERE IS ANOTHER
;35210  1463	     PROCSISD: BEGIN
;35566  1464		BIND CURHDRISD = LNK$GL_CURISD[ISD$AL_HDRISD] 		! NAME THE HEADER PART OF IT
;35582  1465					: BLOCK[,BYTE];
;35586  1466		IF .CURHDRISD[ISD$W_PAGCNT] EQL 0			! IF ZERO LENGTH I-SECTION
;35590  1467		THEN BEGIN
;35594  1468			PREVISD = .LNK$GL_CURISD;			! MOVE TO NEXT
;35598  1469			LEAVE PROCSISD;					! AND SKIP THIS ONE
;35599  1470		     END;
;35600  1471		IF NOT .CURHDRISD[ISD$V_DZRO]				! IF NOT ALREADY A DEMAND ZERO SECTION
;35700  1472		AND .LNK$GL_CURISD[ISD$Q_BUFADR] EQL 0			! BUT NO BUFFER YET ALLOCATED
;35800  1473		THEN IF .CURHDRISD[ISD$W_PAGCNT] GEQU .LNK$GW_DZROMIN	! THEN IF SECTION IS BIG ENOUGH
;35900  1474		     AND .CURHDRISD[ISD$V_WRT]				! AND WRITABLE
;35950  1475		     AND NOT .CURHDRISD[ISD$V_GBL]			! AND NOT GLOBAL
;35975  1476		     AND NOT .LNK$GL_CTLMSK<LNK$S_SHR,1,0>		! AND NOT A SHAREABLE IMAGE
;36000  1477		     THEN BEGIN
;36100  1478				CURHDRISD[ISD$W_SIZE] = ISD$K_LENDZRO;	! THEN CONVERT WHOLE SECTION
;36200  1479				CURHDRISD[ISD$V_DZRO] = TRUE;		! TO A DEMAND ZERO
;36300  1480				CURHDRISD[ISD$V_CRF] = FALSE;		! DISABLING POSSIBLE COPY ON REFERENCE
;36400  1481			  END
;36500  1482		     ELSE IF .CURHDRISD[ISD$V_GBL]				! OTHERWISE, IF IT IS GLOBAL
;36510  1483			  THEN ( IF .(LNK$GL_CURCLU[CLU$W_FLAGS])<CLU$V_COPY>	! AND THE CLUSTER IS TO BE

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-13
; Digital Equipment Corporation
;
;36520  1484				 THEN BEGIN					! COPIED INTO THIS IMAGE
;36530  1485					LNK$GL_CURISD[ISD$Q_BUFADR] = .LNK$GL_GSBUFDSC[1]; ! SET THE BUFFER
;36540  1486					LNK$GL_CURISD[ISD$Q_BUFADR] + 4 = .LNK$GL_GSBUFDSC[2]; ! DESCRIPTOR
;36550  1487				      END;)
;36600  1488			  ELSE IF NOT $EXPREG(PAGCNT=.CURHDRISD[ISD$W_PAGCNT],	! IF LOCAL SECTION, ALLOCATE
;36700P 1489						RETADR=LNK$GL_CURISD[ISD$Q_BUFADR])	! A BUFFER OF ZEROES
;36800  1490					THEN BEGIN
;36900  1491						LNK$ERRMSG(ERM$C_MEMFUL,SEV$C_DIAG);	! REPORT ANY ERROR
;37000  1492						LNK$GL_CTLMSK<LNK$S_IMAGE,1,0> = FALSE;	! DISABLE IMAGE PRODUCTION
;37100  1493						RETURN;					! AND GIVE UP
;37200  1494					     END;
;37400  1495		IF .LNK$GL_CURISD[ISD$Q_BUFADR] NEQ 0			! IF THERE IS NOW A BUFFER
;37500  1496		AND (.CURHDRISD[ISD$W_PAGCNT] LSSU .LNK$GW_DZROMIN	! BUT SECTION TOO SMALL FOR COMPRESSION
;37600  1497		    OR NOT .CURHDRISD[ISD$V_WRT]			! OR IS READ ONLY
;37700  1498		    OR .LNK$GW_NISECTS GEQU .LNK$GW_MISECTS)		! OR WE HAVE EXCEEDED LIMIT ON ISD'S
;37800  1499		THEN LNK$GW_IMGBLKS = .LNK$GW_IMGBLKS +			! THEN ADD THE SECTION SIZE TO IMAGE
;37900  1500					.CURHDRISD[ISD$W_PAGCNT];
;38000  1501		IF .CURHDRISD[ISD$V_DZRO]				! IF SECTION IS STILL DEMAND ZERO
;38100  1502		OR NOT .CURHDRISD[ISD$V_WRT]				! OR IS NOT WRITABLE
;38200  1503		OR .CURHDRISD[ISD$W_PAGCNT] LSSU .LNK$GW_DZROMIN	! OR THE SECTION IS TOO SMALL
;38300  1504		OR .LNK$GW_NISECTS GEQU .LNK$GW_MISECTS			! OR WE HAVE ENOUGH OF THEM
;38310  1505		OR .CURHDRISD[ISD$V_GBL]				! OR THIS IS GLOBAL
;38400  1506		THEN BEGIN						! WE ARE DONE WITH IT
;38500  1507			INCHDRSIZE(.CURHDRISD[ISD$W_SIZE]);		! ACCUMULATE ITS HEADER CONTRIBUTION
;38600  1508			PREVISD = .LNK$GL_CURISD;			! THIS IS NOW THE PREVIOUS
;38700  1509		     END
;38800  1510		ELSE BEGIN
;38900  1511		     DO BEGIN							! BEGIN LOOPING CALLS TO PTI SERVICE
;39000  1512			BIND CURHDRISD = LNK$GL_CURISD[ISD$AL_HDRISD]		! RENAME THE HEADER PART
;39100  1513						: BLOCK[,BYTE];			! FOR POSSIBLE CHANGE OF CURRENT ISD
;39200  1514			IF NOT (ERRORCODE=SYS$GETPTI(LNK$GL_CURISD[ISD$Q_BUFADR],
;39300  1515					EMPTYDESC[0],0,TRUE,.LNK$GW_DZROMIN))	! CALL SYSTEM SERVICE TO FIND UNTOUCHED PAGES
;39400  1516			THEN BEGIN						! BUT IF AN ERROR RETURNED
;39500  1517	!
;39600  1518				LNK$DIAG(CSTRING('*** LINKER BUG CHECK *** ERROR = !XL RETURNED BY $GETPTI'),.ERRORCODE);
;39700  1519				LNK$DIAG(CSTRING('BUFFER = !XL TO !XL'),.LNK$GL_CURISD[ISD$Q_BUFADR],
;39800  1520					.(LNK$GL_CURISD[ISD$Q_BUFADR]+4));
;39900  1521				LNK$DIAG(CSTRING('IMAGE VPN = !UL, PAGES = !UL'),.CURHDRISD[ISD$V_VPG],
;40000  1522					.CURHDRISD[ISD$W_PAGCNT]);
;40100  1523	!
;40200  1524				LNK$GL_CTLMSK<LNK$S_IMAGE,1,0> = FALSE;		! DISABLE ANY MORE IMAGE OUTPUT
;40300  1525				RETURN;
;40400  1526			     END;
;40500  1527			IF (EMPTYDESC[1] = .EMPTYDESC[1] + 1) EQL 0		! IF WE DON'T HAVE ANOTHER EMPTY REGION
;40600  1528			OR .LNK$GW_NISECTS GEQU .LNK$GW_MISECTS			! OR WE HAVE ENOUGH OF THEM
;40700  1529			THEN BEGIN
;40800  1530				PREVISD = .LNK$GL_CURISD;			! THEN CURRENT BECOMES PREVIOUS
;40900  1531				INCHDRSIZE(.CURHDRISD[ISD$W_SIZE]);		! ADD ITS CONTRIBUTION TO HEADER
;41000  1532				LNK$GW_IMGBLKS = .LNK$GW_IMGBLKS + .CURHDRISD[ISD$W_PAGCNT];	! AND TO THE IMAGE
;41100  1533				EMPTYDESC[1] = 0;				! ENSURE END OF LOOP
;41200  1534			     END
;41300  1535			ELSE BEGIN						! IF WE DO HAVE ANOTHER ....
;41400  1536				LOCAL
;41500  1537					NEWISD : REF BLOCK[,BYTE],		! POINTER FOR NEWLY ALLOCATED ISD
;41600  1538					NEWHDRISD : REF BLOCK[,BYTE];		! AND THE HEADER PART OF IT

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-14
; Digital Equipment Corporation
;
;41700  1539	!
;41800  1540				LNK$ALLOBLK(ISD$C_SIZE,NEWISD);			! ALLOCATE AN IMAGE SECTION DESCRIPTOR
;41900  1541				NEWISD[ISD$Q_BUFADR] = 0;			! ZERO THE BUFFER ADDRESS
;42000  1542				NEWISD[ISD$Q_BUFADR] + 4 = 0;			! QUADWORD
;42100  1543				NEWHDRISD = NEWISD[ISD$AL_HDRISD];		! SET POINTER TO HEADER PART
;42200  1544				NEWHDRISD[ISD$W_SIZE] = ISD$K_LENDZRO;		! SET LENGTH OF DESCRIPTOR
;42300  1545				NEWHDRISD[ISD$W_PAGCNT] = (.EMPTYDESC[1] -	! SET SECTION SIZE
;42400  1546						.EMPTYDESC[0])/512;		! IN PAGES
;42500  1547				NEWHDRISD[ISD$L_FLAGS] = (.CURHDRISD[ISD$L_FLAGS]! COPY THE CURRENT
;42600  1548							OR ISD$M_DZRO) AND	! SECTION FLAGS AND SET DEMAND ZERO
;42700  1549							NOT ISD$M_CRF;		! CLEARING POSSIBLE COPY ON REFERENCE
;42800  1550				NEWHDRISD[ISD$V_PFC] = 0;			! SET THE PAGE FAULT CLUSTER
;42900  1551	!
;43000  1552	!	THE IMAGE SECTION DESCRIPTOR FOR THE NEW DEMAND ZERO
;43100  1553	!	SECTION IS NOW SET UP. HOWEVER WE STILL HAVE TO DETERMINE
;43200  1554	!	THE BASE VIRTUAL ADDRESS OF IT AND THE REMNANT OF THE ORIGINAL
;43300  1555	!	IMAGE SECTION. IN ADDITION THE BUFFER ADDRESS OF THE BINARY
;43400  1556	!	OF THE REMNANT MUST BE ADJUSTED.
;43500  1557	!	AFTER THIS THE NEW ISD IS LINKED ONTO THE LIST OF ISD, IN
;43600  1558	!	USER VIRTUAL ADDRESS ORDER.
;43700  1559	!
;43800  1560				IF .EMPTYDESC[0] EQL .LNK$GL_CURISD[ISD$Q_BUFADR]	! IF THE EMPTY REGION IS AT
;43900  1561				THEN BEGIN						! THE BEGINNING OF THIS SECTION
;44000  1562					INCHDRSIZE(ISD$K_LENDZRO);			! ACCUMULATE DZRO ISD INTO HEADER
;44100  1563					PREVISD[ISD$L_NXTISD] = .NEWISD;		! PREVIOUS ISD POINTS TO NEW
;44200  1564					NEWHDRISD[ISD$V_VPG] = .CURHDRISD[ISD$V_VPG];	! AND NEW I-SECT IS AT
;44300  1565					CURHDRISD[ISD$W_PAGCNT] =			! THIS ONES VIRTUAL ADDRESS
;44400  1566						.CURHDRISD[ISD$W_PAGCNT] -		! REDUCE CURRENT I-SECT'S PAGE
;44500  1567						.NEWHDRISD[ISD$W_PAGCNT];		! BY NUMBER THAT ARE EMPTY
;44600  1568					NEWISD[ISD$L_NXTISD] = .LNK$GL_CURISD;		! ONLY PART OF SECTION
;44700  1569					LNK$GL_CURISD[ISD$Q_BUFADR] = .EMPTYDESC[1];	! SO NEW ISD POINTS TO
;44800  1570					CURHDRISD[ISD$V_VPG] = .CURHDRISD[ISD$V_VPG]	! CURRENT AND THE 
;44900  1571						+ .NEWHDRISD[ISD$W_PAGCNT];		! BUFFER AND VIRTUAL
;45000  1572											! ADDRESSES OF CURRENT ARE THE
;45100  1573											! PAGES BEYOND EMPTY REGION'S
;45200  1574					LNK$GW_NISECTS = .LNK$GW_NISECTS + 1;		! COUNT NEW IMAGE SECTION
;45300  1575					PREVISD = .LNK$GL_CURISD;			! CURRENT ISD BECOMES PREVIOUS
;45400  1576				     END
;45500  1577				ELSE BEGIN						! EMPTY REGION IS NOT AT FRONT
;45600  1578					NEWISD[ISD$L_NXTISD] = .LNK$GL_CURISD[ISD$L_NXTISD];	! CURRENT POINTS TO NEW
;45700  1579					LNK$GL_CURISD[ISD$L_NXTISD] = .NEWISD;		! THEN CURRENT I-SECT PAGE
;45800  1580					CURHDRISD[ISD$W_PAGCNT] = (.EMPTYDESC[0] -	! COUNT BECOMES NO. BEFORE
;45900  1581							.LNK$GL_CURISD[ISD$Q_BUFADR])/512;	! UNTOUCHED REGION
;46000  1582					LNK$GW_IMGBLKS = .LNK$GW_IMGBLKS +			! ADD CURRENT I-SECTS
;46100  1583						.CURHDRISD[ISD$W_PAGCNT];		! INTO IMAGE BINARY TOTAL
;46200  1584					NEWHDRISD[ISD$V_VPG] = .CURHDRISD[ISD$V_VPG]	! VIRTUAL ADDRESS OF
;46300  1585						+ .CURHDRISD[ISD$W_PAGCNT];		! BEYOND CURRENT
;46400  1586					LNK$GW_NISECTS = .LNK$GW_NISECTS + 1;		! COUNT NEW IMAGE SECTION
;46500  1587					INCHDRSIZE(.CURHDRISD[ISD$W_SIZE]);		! ACCUMULATE FOR HEADER
;46600  1588					INCHDRSIZE(ISD$K_LENDZRO);			! ACCUMULATE DZRO ISD INTO HEADER
;46700  1589					IF .EMPTYDESC[1] GEQU .(LNK$GL_CURISD[ISD$Q_BUFADR] +4)	! IF EMPTY REGION IS
;46800  1590					THEN BEGIN						! ALL THAT REMAINS
;46900  1591						LNK$GL_CURISD[ISD$Q_BUFADR] + 4 = .EMPTYDESC[0] -1;	! ADJUST END OF CURRENT
;47000  1592						PREVISD = .NEWISD;			! BUFFER AND NEW BECOMES PREVIOUS
;47100  1593						EXITLOOP;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-15
; Digital Equipment Corporation
;
;47200  1594					     END
;47300  1595					ELSE BEGIN					! NOW GENERATE AN ISD FOR REMNANT
;47400  1596						PREVISD = .NEWISD;			! SAVING NEW AS THE PREVIOUS
;47500  1597						LNK$ALLOBLK(ISD$C_SIZE,NEWISD);		! ALLOCATE THE DESCRIPTOR
;47600  1598						NEWISD[ISD$L_NXTISD] = .PREVISD[ISD$L_NXTISD];	! TO POINT
;47700  1599						PREVISD[ISD$L_NXTISD] = .NEWISD;	! FORWARD AND POINTED TO
;47800  1600						LNK$GW_NISECTS = .LNK$GW_NISECTS + 1;	! COUNT NEW IMAGE SECTION
;47900  1601						NEWISD[ISD$Q_BUFADR] = .EMPTYDESC[1];	! BUFFER IS BEYOND EMPTY
;48000  1602						NEWISD[ISD$Q_BUFADR] + 4 = .(LNK$GL_CURISD	! REGION TO END
;48100  1603							[ISD$Q_BUFADR] + 4);		! OF REMNANT
;48200  1604						NEWHDRISD = NEWISD[ISD$AL_HDRISD];	! NAME THE HEADER PART
;48300  1605						CH$MOVE(.CURHDRISD[ISD$W_SIZE],		! COPY THE CURRENT ISD
;48400  1606							CURHDRISD,.NEWHDRISD);		! TO THE NEW ONE
;48500  1607						NEWHDRISD[ISD$W_PAGCNT] = ( .(NEWISD[ISD$Q_BUFADR]+4)	! PAGE COUNT IS AT
;48600  1608							-.NEWISD[ISD$Q_BUFADR]		! MOST THE REMNANT
;48700  1609							+ 511)/512;			! BUFFER SIZE
;48800  1610						NEWHDRISD[ISD$V_VPG] = .CURHDRISD[ISD$V_VPG]
;48900  1611							+ (.NEWISD[ISD$Q_BUFADR] -	! VIRT ADDR IS PAGE BEYOND
;49000  1612						    .LNK$GL_CURISD[ISD$Q_BUFADR])/512;	! THE EMPTY REGION
;49100  1613						LNK$GL_CURISD[ISD$Q_BUFADR] + 4 = .EMPTYDESC[0] - 1;	! CURRENT BUFFER BEFORE
;49200  1614						LNK$GL_CURISD = .NEWISD;	! AND CREATE A NEW CURRENT ISD
;49300  1615					     END;				! THE EMPTY REGION
;49400  1616				     END;
;49500  1617			     END;
;49600  1618			END
;49700  1619			UNTIL .EMPTYDESC[1] EQL 0;
;49800  1620		     END;
;49900  1621		END;
;50000  1622	     END;
;50100  1623	     LNK$GW_HDRBLKS = .LNK$GW_HDRBLKS + (.HEADER_SIZE + 511)/512;	! ROUND UP THE HEADER BLOCK COUNT
;50200  1624	     IF NOT $EXPREG(PAGCNT=.LNK$GW_HDRBLKS,RETADR=HEADERDESC)		! GET SOME MEMORY FOR THE HEADER
;50300  1625	     THEN BEGIN								! BUT ON FAILURE
;50400  1626			LNK$ERRMSG(ERM$C_MEMFUL,SEV$C_DIAG);			! REPORT IT
;50500  1627			LNK$GL_CTLMSK<LNK$S_IMAGE,1,0> = FALSE;			! DISABLE IMAGE PRODUCTION
;50600  1628			RETURN;							! AND QUIT
;50700  1629	          END;
;50800  1630	     LNK$GW_DSTBLKS = (.LNK$GL_DSTEND + 511)/512;			! COMPUTE THE NUMBER OF BLOCKS
;50900  1631	     END;
;51000  1632	FILEBLKS = .LNK$GW_HDRBLKS + .LNK$GW_IMGBLKS + .LNK$GW_DSTBLKS;		! COMPUTE THE FILE SIZE
;51100  1633	IF .LNK$GL_CTLMSK<LNK$S_DBG,1,0>					! IF A DEBUGGABLE EXECUTABLE IMAGE
;51200  1634	OR .LNK$GL_CTLMSK<LNK$S_SHR,1,0>
;51300  1635	THEN FILEBLKS = .FILEBLKS + (.LNK$GW_NSYMBOLS + 39)/20;		! OR A SHAREABLE IMAGE MAKE INITIAL ALLOCATION
;51400  1636								! LARGER FOR THE SYMBOL TABLE
;51500  1637	CH$FILL(0,FAB$C_BLN,IMAGEFAB);				! ZERO THE FAB
;51600  1638	IMAGEFAB[FAB$B_BLN] = FAB$C_BLN;			! IDENTIFY THIS BLOCK AS A FAB
;51700  1639	IMAGEFAB[FAB$B_BID] = FAB$C_BID;			! LENGTH AND ID
;51800  1640	IMAGEFAB[FAB$V_BRO] = TRUE;				! SET FOR BLOCK AND RECORD I/O
;51900  1641	IMAGEFAB[FAB$V_GET] = TRUE;				! BOTH INPUT AND OUTPUT TO
;52000  1642	IMAGEFAB[FAB$W_MRS] = 512;				! (INITIALLY) 512 BYTE
;52100  1643	IMAGEFAB[FAB$B_RFM] = FAB$C_FIX;			! FIXED LENGTH RECORDS IN
;52200  1644	IF .LNK$GL_CTLMSK<LNK$S_CONTIG,1,0>			! IF USER SAID CONTIGUOUS THEN
;52300  1645	THEN IMAGEFAB[FAB$V_CTG] = TRUE				! ATTEMPT TO DO IT, OTHERWISE
;52400  1646	ELSE IMAGEFAB[FAB$V_CBT] = TRUE;			! AS CONTIGUOUS A FILE AS POSSIBLE
;52500  1647	IMAGEFAB[FAB$L_ALQ] = .FILEBLKS;			! ...
;52600  1648	IMAGEFAB[FAB$V_NIL] = TRUE;				! NOBODY ELSE CAN ACCESS IT

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-16
; Digital Equipment Corporation
;
;52700  1649	IMAGEFAB[FAB$L_FNA] = .(LNK$GL_IMGFIL[FDB$Q_USRNAMDSC]+4);	! POINT TO FILENAME
;52800  1650	IMAGEFAB[FAB$B_FNS] = .LNK$GL_IMGFIL[FDB$Q_USRNAMDSC];		! SET LENGTH OF NAME
;52900  1651	IMAGEFAB[FAB$B_DNS] = %CHARCOUNT('.EXE');		! SET LENGTH OF DEFAULT FILE TYPE
;53000  1652	IMAGEFAB[FAB$L_DNA] = UPLIT(BYTE('.EXE'));		! POINT TO DEFAULT FILE TYPE
;53100  1653	IMAGEFAB[FAB$L_NAM] = AUXFNB;				! POINT TO AUXILIARY FILENAME BLOCK
;53200  1654	LNK$AL_IMGRAB[RAB$L_FAB] = IMAGEFAB;			! AND POINT THE RAB AT THIS FAB
;53300  1655	IF NOT (ERRORCODE = $CREATE(FAB=IMAGEFAB))		! ATTEMPT TO CREATE THE FILE
;53400  1656	OR NOT (ERRORCODE = $CONNECT(RAB=LNK$AL_IMGRAB))	! CONNECT A STREAM
;53500  1657	THEN BEGIN						! AND IF THERE IS AN ERROR
;53600  1658		LNK$ERRMSG(ERM$C_CRE8ERR,SEV$C_DIAG,		! REPORT CREATE FAILURE WITH THE
;53700  1659			.AUXFNB[NAM$B_ESL],.AUXFNB[NAM$L_ESA]);	! FILENAME AS FAR AS RMS GOT
;53800  1660		LNK$ERRMSG(ERM$C_UNMCOD,SEV$C_INFOR,		! THEN WITH THE USER'S ORIGINAL NAME
;53900  1661			LNK$GL_IMGFIL[FDB$Q_USRNAMDSC],		! AND THE RMS ERROR CODE, ALL
;54000  1662			.ERRORCODE);				! AS A DIAGNOSTIC
;54010  1663		LNK$ERRMSG(.ERRORCODE AND NOT 7,SEV$C_INFOR,
;54020  1664				.IMAGEFAB[FAB$L_STV]);
;54100  1665		LNK$GL_CTLMSK<LNK$S_IMAGE,1,0> = FALSE;		! TURN OFF IMAGE PRODUCTION
;54200  1666		RETURN;							! THEN GIVE UP
;54300  1667	     END;
;54400  1668	LNK$GW_IMGIFI = .IMAGEFAB[FAB$W_IFI];				! SAVE THE INTERNAL ID FOR CLOSE LATER
;54500  1669	!
;54600  1670	! ESTABLISH THE DEFAULT IMAGE NAME AND IDENTIFICATION
;54700  1671	!	NAME: THE FILE NAME
;54800  1672	!	IDENT: FILE TYPE AND VERSION
;54900  1673	!
;55000  1674	IF .LNK$GT_IMGNAM[0] EQL 0					! IF THE NAME STRING
;55100  1675	OR .LNK$GT_IMGID[0] EQL 0					! OR IDENT STRING IS NULL
;55200  1676	THEN BEGIN
;55300  1677		LOCAL IMAGENAME,
;55400  1678			IMAGEIDENT;
;55500  1679		IF (IMAGENAME = CH$FIND_CH(.AUXFNB[NAM$B_RSL],		! POINT TO RESULTANT FILE NAME
;55600  1680					.AUXFNB[NAM$L_RSA],%C']')) EQL 0! WHICH IS THE CHARACTER BEYOND DIRECTORY
;55700  1681		THEN IMAGENAME = CH$FIND_CH(.AUXFNB[NAM$B_RSL],		! POINT TO RESULTANT FILE NAME
;55800  1682					.AUXFNB[NAM$L_RSA],%C'>');	! WHICH IS THE CHARACTER BEYOND DIRECTORY
;55900  1683		IMAGENAME = .IMAGENAME + 1;
;56000  1684		IMAGEIDENT = CH$FIND_CH(FILENAMELEN+1,.IMAGENAME,	! AND POINT TO THE FILE TYPE
;56100  1685						%C'.');			! WHICH BEGINS WITH A DOT
;56200  1686		IF .LNK$GT_IMGNAM[0] EQL 0				! IF WE NEED AN IMAGE NAME
;56300  1687		THEN BEGIN
;56400  1688			LNK$GT_IMGNAM[0] = CH$DIFF(.IMAGEIDENT,.IMAGENAME);	! SET ITS LENGTH
;56500  1689			CH$MOVE(.LNK$GT_IMGNAM[0],.IMAGENAME,LNK$GT_IMGNAM[1]);	! AND MOVE THE CHARACTERS
;56600  1690		     END;
;56700  1691		IF .LNK$GT_IMGID[0] EQL 0				! AND IF WE NEED AN IMAGE IDENT
;56800  1692		THEN BEGIN
;56900  1693			LNK$GT_IMGID[0] = .AUXFNB[NAM$B_RSL] -		! SET THE LENGTH
;57000  1694					CH$DIFF(.IMAGEIDENT,		! WHICH IS TOTAL MINUS THE
;57100  1695						.AUXFNB[NAM$L_RSA]);		! STUFF PRECEDING THE IDENT
;57200  1696			CH$MOVE(.LNK$GT_IMGID[0],.IMAGEIDENT,LNK$GT_IMGID[1]);	! AND MOVE THEM IN
;57300  1697		     END;
;57400  1698	     END;
;57500  1699	!
;57600  1700	! NOW GO DOWN THE LIST OF ISD'S, WRITING OUT THE I-SECTIONS
;57700  1701	!	AND PUTTING THE ISD IN THE HEADER.
;57800  1702	!
;57900  1703	CURVBN = 1 + .LNK$GW_HDRBLKS;					! FIRST I-SECTION STARTS AFTER HEADER

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-17
; Digital Equipment Corporation
;
;58000  1704	HEADER_SIZE = IHD$K_MAXLENGTH;					! SET INITIAL LENGTH
;58100  1705	LNK$GL_CURCLU = LNK$GL_CLULST;					! START AT TOP OF CLUSTER LIST
;58200  1706	WHILE(LNK$GL_CURCLU = .LNK$GL_CURCLU[CLU$L_NXTCLU]) NEQ 0 DO	! GET NEXT CLUSTER DESCRIPTOR
;58300  1707	BEGIN
;58400  1708	LNK$GL_CURISD = LNK$GL_CURCLU[CLU$L_FSTISD];			! START AT TOP OF ISD LIST
;58500  1709	WHILE (LNK$GL_CURISD = .LNK$GL_CURISD[ISD$L_NXTISD]) NEQ 0	! LOOP THROUGH THE LIST
;58600  1710	DO BEGIN
;58700  1711		BIND CURHDRISD = LNK$GL_CURISD[ISD$AL_HDRISD] 		! NAME PART FOR HEADER
;58800  1712					: BLOCK[,BYTE];
;58810  1713		IF .CURHDRISD[ISD$V_GBL]				! IF A GLOBAL SECTION
;58820  1714		AND .LNK$GL_CURISD[ISD$Q_BUFADR] NEQ 0			! WITH A BUFFER ALLOCATED
;58830  1715		THEN READSECTION();					! GO READ IT FROM ITS FILE
;58900  1716		IF NOT .CURHDRISD[ISD$V_DZRO]				! IF NOT A DEMAND ZERO SECTION
;58910  1717		AND .LNK$GL_CURISD[ISD$Q_BUFADR] NEQ 0			! AND A BUFFER IS ALLOCATED
;59000  1718		THEN CURHDRISD[ISD$L_VBN] = .CURVBN;			! INSERT THE VBN OF BINARY
;59100  1719		IF NOT .LNK$GL_CTLMSK<LNK$S_SYS,1,0>			! IF NOT A SYSTEM IMAGE
;59110  1720		AND .CURHDRISD[ISD$W_PAGCNT] NEQ 0			! AND SECTION IS NON ZERO IN LENGTH
;59200  1721		THEN ISDTOHEADER(CURHDRISD);				! INSERT ISD IN HEADER
;59300  1722		IF NOT .CURHDRISD[ISD$V_DZRO]				! IF NOT A DEMAND ZERO SECTION
;59310  1723		AND .LNK$GL_CURISD[ISD$Q_BUFADR] NEQ 0			! AND A BUFFER IS ALLOCATED
;59400  1724		THEN BEGIN
;59500  1725			IF NOT WRITESECTION(.CURHDRISD[ISD$W_PAGCNT],	! THEN WRITE IT OUT
;59600  1726				.CURVBN,.LNK$GL_CURISD[ISD$Q_BUFADR])	! TO THE FILE
;59700  1727			THEN RETURN;					! GIVING UP ON ERROR
;59800  1728			CURVBN = .CURVBN + .CURHDRISD[ISD$W_PAGCNT];	! UPDATE TO NEXT AVAILABLE VBN
;59900  1729		     END;
;60000  1730	   END;
;60100  1731	END;
;60200  1732	IF NOT .LNK$GL_CTLMSK<LNK$S_SYS,1,0>				! IF NOT A SYSTEM IMAGE, FINISH THE HEADER
;60300  1733	THEN ISDTOHEADER(0);						! ISD LIST AND FILL LAST HEADER BLOCK
;60400  1734	IF .DSTBUFFER[0] NEQ 0						! IF A DST BUFFER IS ALLOCATED
;60500  1735	AND .LNK$GW_DSTBLKS NEQ 0					! AND DST WAS WRITTEN
;60600  1736	THEN BEGIN
;60700  1737		LNK$GW_DSTVBN = .CURVBN;				! RECORD THE VBN OF IT
;60800  1738		IF NOT WRITESECTION(.LNK$GW_DSTBLKS,.CURVBN,		! AND OUTPUT THE BLOCKS
;60900  1739				.DSTBUFFER[0])
;61000  1740			THEN RETURN;
;61100  1741		CURVBN = .CURVBN + .LNK$GW_DSTBLKS;			! SET NEXT VBN
;61200  1742	     END;
;61300  1743	IF .LNK$GL_CTLMSK<LNK$S_SHR,1,0>			! IF PRODUCING A SHAREABLE
;61400  1744	OR .LNK$GL_CTLMSK<LNK$S_DBG,1,0>			! OR DEBUGGABLE IMAGE
;61500  1745	THEN BEGIN
;61600  1746		$DISCONNECT(RAB=LNK$AL_IMGRAB);			! DISCONNECT THE RAB
;61700  1747		LNK$GW_GSTVBN = .CURVBN;			! SET THE VBN OF THE GST
;61800  1748	     END;
;61900  1749								! AND WILL CLOSE IT AFTER SYMBOLS
;62000  1750	RETURN;						! AND HEADER ARE WRITTEN
;62100  1751	END;



							    .PSECT  $PLIT$,NOWRT,NOEXE,2

					      00028 P.AAC:  .BYTE   56							      ;
					      00029 	    .ASCII  \*** LINKER BUG CHECK *** ERROR = !XL RETURNED BY $GETP\  ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-18
; Digital Equipment Corporation
;
					      0005F 	    .ASCII  \TI\						      ;
					      00061	    .BLKB   3
					      00064 P.AAD:  .BYTE   19							      ;
					      00065 	    .ASCII  \BUFFER = !XL TO !XL\				      ;
					      00078 P.AAE:  .BYTE   28							      ;
					      00079 	    .ASCII  \IMAGE VPN = !UL, PAGES = !UL\			      ;
					      00095	    .BLKB   3
					      00098 P.AAF:  .ASCII  \.EXE\						      ;

							    .GLOBL  SYS$CREATE, SYS$CONNECT, SYS$DISCONNECT

							    .PSECT  $CODE$,NOWRT,2

					 0FFC 0018A 	    .ENTRY  LNK$FLUSHIMG, Save R2,R3,R4,R5,R6,R7,R8,R9,R10,R11	      ; 1411
		         5E	  98   AE  9E 0018C 	    MOVAB   -104(SP), SP					      ;
	   5A	  0000G  CF	       13  C1 00190 	    ADDL3   #19, LNK$GL_IMGFIL, R10				      ; 1447
	   19	  0000G  CF	       00  E1 00196 	    BBC     #LNK$S_SYS, LNK$GL_CTLMSK, 2$			      ; 1449
	   50	  0000G  CF	       0C  C1 0019C 	    ADDL3   #12, SYSISD, R0					      ; 1452
				0000G  CF  D5 001A2 	    TSTL    LNK$GL_DEFCLU+20					      ; 1453
				       06  13 001A6 	    BEQL    1$							      ;
		  0000'  CF	  02   A0  B0 001A8 	    MOVW    2(R0), LNK$GW_IMGBLKS				      ; 1454
				0000'  CF  D4 001AE 1$:     CLRL    HEADER_SIZE						      ; 1455
				     031D  31 001B2 	    BRW     25$							      ; 1449
		  0000G  CF	0000G  CF  9E 001B5 2$:     MOVAB   LNK$GL_CLULST, LNK$GL_CURCLU			      ; 1458
		  0000G  CF	0000G  DF  D0 001BC 3$:     MOVL    @LNK$GL_CURCLU, LNK$GL_CURCLU			      ; 1459
				       03  12 001C3 	    BNEQ    4$							      ;
				     02C5  31 001C5 	    BRW     23$							      ;
      04   AE	  0000G  CF	       14  C1 001C8 4$:     ADDL3   #20, LNK$GL_CURCLU, PREVISD				      ; 1461
		  0000'  CF	  04   BE  D0 001CF 5$:     MOVL    @PREVISD, LNK$GL_CURISD				      ; 1462
				       E5  13 001D5 	    BEQL    3$							      ;
		         50	0000'  CF  D0 001D7 	    MOVL    LNK$GL_CURISD, R0					      ; 1464
	   53	         50	       0C  C1 001DC 	    ADDL3   #12, R0, R3						      ;
		         54	  02   A3  9E 001E0 	    MOVAB   2(R3), R4						      ; 1466
				       64  B5 001E4 	    TSTW    (R4)						      ;
				       06  12 001E6 	    BNEQ    6$							      ;
		    04   AE	       50  D0 001E8 	    MOVL    R0, PREVISD						      ; 1468
				       E1  11 001EC 	    BRB     5$							      ; 1469
		         52	  08   A3  9E 001EE 6$:     MOVAB   8(R3), R2						      ; 1471
	   62	         62	       02  E0 001F2 	    BBS     #2, (R2), 11$					      ;
				  04   A0  D5 001F6 	    TSTL    4(R0)						      ; 1472
				       5D  12 001F9 	    BNEQ    11$							      ;
		  0000G  CF	       64  B1 001FB 	    CMPW    (R4), LNK$GW_DZROMIN				      ; 1473
				       18  1F 00200 	    BLSSU   7$							      ;
	   14	         62	       03  E1 00202 	    BBC     #3, (R2), 7$					      ; 1474
		         14	       62  E8 00206 	    BLBS    (R2), 8$						      ; 1475
	   0B	  0000G  CF	       02  E0 00209 	    BBS     #2, LNK$GL_CTLMSK, 7$				      ; 1476
		         63	       0C  B0 0020F 	    MOVW    #12, (R3)						      ; 1478
		         62	       04  88 00212 	    BISB2   #4, (R2)						      ; 1479
		         62	       02  8A 00215 	    BICB2   #2, (R2)						      ; 1480
				       3E  11 00218 	    BRB     11$							      ; 1473
		         1A	       62  E9 0021A 7$:     BLBC    (R2), 9$						      ; 1482
		         51	0000G  CF  D0 0021D 8$:     MOVL    LNK$GL_CURCLU, R1					      ; 1483
	   31	    24   A1	       04  E1 00222 	    BBC     #4, 36(R1), 11$					      ;
		         50	       04  C0 00227 	    ADDL2   #4, R0						      ; 1485
		         60	0000G  CF  D0 0022A 	    MOVL    LNK$GL_GSBUFDSC+4, (R0)				      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-19
; Digital Equipment Corporation
;
		    04   A0	0000G  CF  D0 0022F 	    MOVL    LNK$GL_GSBUFDSC+8, 4(R0)				      ; 1486
				       21  11 00235 	    BRB     11$							      ; 1482
				       7E  7C 00237 9$:     CLRQ    -(SP)						      ; 1489
				  04   A0  9F 00239 	    PUSHAB  4(R0)						      ;
		         7E	       64  3C 0023C 	    MOVZWL  (R4), -(SP)						      ;
	      00000000G  9F	       04  FB 0023F 	    CALLS   #4, @#SYS$EXPREG					      ;
		         0F	       50  E8 00246 	    BLBS    R0, 11$						      ;
		         7E	       00  9A 00249 10$:    MOVZBL  #SEV$C_DIAG, -(SP)					      ; 1491
		         7E	  00G  8F  9A 0024C 	    MOVZBL  #ERM$C_MEMFUL, -(SP)				      ;
		  0000G  CF	       02  FB 00250 	    CALLS   #2, LNK$ERRMSG					      ;
				     035F  31 00255 	    BRW     31$							      ; 1492
		         50	0000'  CF  D0 00258 11$:    MOVL    LNK$GL_CURISD, R0					      ; 1495
				  04   A0  D5 0025D 	    TSTL    4(R0)						      ;
				       19  13 00260 	    BEQL    13$							      ;
		  0000G  CF	       64  B1 00262 	    CMPW    (R4), LNK$GW_DZROMIN				      ; 1496
				       0D  1F 00267 	    BLSSU   12$							      ;
	   09	         62	       03  E1 00269 	    BBC     #3, (R2), 12$					      ; 1497
		  0000G  CF	0000G  CF  B1 0026D 	    CMPW    LNK$GW_NISECTS, LNK$GW_MISECTS			      ; 1498
				       05  1F 00274 	    BLSSU   13$							      ;
		  0000'  CF	       64  A0 00276 12$:    ADDW2   (R4), LNK$GW_IMGBLKS				      ; 1499
	   17	         62	       02  E0 0027B 13$:    BBS     #2, (R2), 14$					      ; 1501
	   13	         62	       03  E1 0027F 	    BBC     #3, (R2), 14$					      ; 1502
		  0000G  CF	       64  B1 00283 	    CMPW    (R4), LNK$GW_DZROMIN				      ; 1503
				       0C  1F 00288 	    BLSSU   14$							      ;
		  0000G  CF	0000G  CF  B1 0028A 	    CMPW    LNK$GW_NISECTS, LNK$GW_MISECTS			      ; 1504
				       03  1E 00291 	    BGEQU   14$							      ;
		         11	       62  E9 00293 	    BLBC    (R2), 15$						      ; 1505
		         7E	       63  3C 00296 14$:    MOVZWL  (R3), -(SP)						      ; 1507
		  0000V  CF	       01  FB 00299 	    CALLS   #1, INCHDRSIZE					      ;
		    04   AE	0000'  CF  D0 0029E 	    MOVL    LNK$GL_CURISD, PREVISD				      ; 1508
				     FF28  31 002A4 	    BRW     5$							      ; 1501
	   57	  0000'  CF	       0C  C1 002A7 15$:    ADDL3   #12, LNK$GL_CURISD, R7				      ; 1512
		         7E	0000G  CF  3C 002AD 	    MOVZWL  LNK$GW_DZROMIN, -(SP)				      ; 1514
				       01  DD 002B2 	    PUSHL   #1							      ;
				       7E  D4 002B4 	    CLRL    -(SP)						      ;
				  6C   AE  9F 002B6 	    PUSHAB  EMPTYDESC						      ; 1515
	   7E	  0000'  CF	       04  C1 002B9 	    ADDL3   #4, LNK$GL_CURISD, -(SP)				      ; 1514
	      00000000G  00	       05  FB 002BF 	    CALLS   #5, SYS$GETPTI					      ;
		    08   AE	       50  D0 002C6 	    MOVL    R0, ERRORCODE					      ;
		         34	  08   AE  E8 002CA 	    BLBS    ERRORCODE, 16$					      ;
				  08   AE  DD 002CE 	    PUSHL   ERRORCODE						      ; 1518
				0000'  CF  9F 002D1 	    PUSHAB  P.AAC						      ;
		  0000G  CF	       02  FB 002D5 	    CALLS   #2, LNK$DIAG					      ;
		         50	0000'  CF  D0 002DA 	    MOVL    LNK$GL_CURISD, R0					      ; 1520
		         7E	  04   A0  7D 002DF 	    MOVQ    4(R0), -(SP)					      ; 1519
				0000'  CF  9F 002E3 	    PUSHAB  P.AAD						      ;
		  0000G  CF	       03  FB 002E7 	    CALLS   #3, LNK$DIAG					      ;
		         7E	  02   A7  3C 002EC 	    MOVZWL  2(R7), -(SP)					      ; 1521
      04   A7	         17	       00  EF 002F0 	    EXTZV   #0, #23, 4(R7), -(SP)				      ;
				       7E     002F5									      ;
				0000'  CF  9F 002F6 	    PUSHAB  P.AAE						      ;
		  0000G  CF	       03  FB 002FA 	    CALLS   #3, LNK$DIAG					      ;
				     02B5  31 002FF 	    BRW     31$							      ; 1524
				  64   AE  D6 00302 16$:    INCL    EMPTYDESC+4						      ; 1527
				       09  13 00305 	    BEQL    17$							      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-20
; Digital Equipment Corporation
;
		  0000G  CF	0000G  CF  B1 00307 	    CMPW    LNK$GW_NISECTS, LNK$GW_MISECTS			      ; 1528
				       1A  1F 0030E 	    BLSSU   18$							      ;
		    04   AE	0000'  CF  D0 00310 17$:    MOVL    LNK$GL_CURISD, PREVISD				      ; 1530
		         7E	       67  3C 00316 	    MOVZWL  (R7), -(SP)						      ; 1531
		  0000V  CF	       01  FB 00319 	    CALLS   #1, INCHDRSIZE					      ;
		  0000'  CF	  02   A7  A0 0031E 	    ADDW2   2(R7), LNK$GW_IMGBLKS				      ; 1532
				  64   AE  D4 00324 	    CLRL    EMPTYDESC+4						      ; 1533
				     015B  31 00327 	    BRW     22$							      ; 1527
				  0C   AE  9F 0032A 18$:    PUSHAB  NEWISD						      ; 1540
				       30  DD 0032D 	    PUSHL   #48							      ;
		  0000G  CF	       02  FB 0032F 	    CALLS   #2, LNK$ALLOBLK					      ;
		         53	  0C   AE  D0 00334 	    MOVL    NEWISD, R3						      ; 1541
		         50	  04   A3  9E 00338 	    MOVAB   4(R3), R0						      ;
				       60  7C 0033C 	    CLRQ    (R0)						      ;
	   56	         53	       0C  C1 0033E 	    ADDL3   #12, R3, NEWHDRISD					      ; 1543
		         66	       0C  B0 00342 	    MOVW    #12, (NEWHDRISD)					      ; 1544
		         54	  64   AE  D0 00345 	    MOVL    EMPTYDESC+4, R4					      ; 1545
		         5B	  60   AE  D0 00349 	    MOVL    EMPTYDESC, R11					      ; 1546
	   50	         54	       5B  C3 0034D 	    SUBL3   R11, R4, R0						      ; 1545
	   51	         50 00000200   8F  C7 00351 	    DIVL3   #512, R0, R1					      ; 1546
		    02   A6	       51  B0 00359 	    MOVW    R1, 2(NEWHDRISD)					      ;
	   50	    08   A7	       04  C9 0035D 	    BISL3   #4, 8(R7), R0					      ; 1547
      08   A6	         50	       02  CB 00362 	    BICL3   #2, R0, 8(NEWHDRISD)				      ; 1548
				  07   A6  94 00367 	    CLRB    7(NEWHDRISD)					      ; 1550
		         52	0000'  CF  D0 0036A 	    MOVL    LNK$GL_CURISD, R2					      ; 1560
		    04   A2	       5B  D1 0036F 	    CMPL    R11, 4(R2)						      ;
				       41  12 00373 	    BNEQ    19$							      ;
				       0C  DD 00375 	    PUSHL   #12							      ; 1562
		  0000V  CF	       01  FB 00377 	    CALLS   #1, INCHDRSIZE					      ;
		    04   BE	       53  D0 0037C 	    MOVL    R3, @PREVISD					      ; 1563
	   17	         00	  04   A7  F0 00380 	    INSV    4(R7), #0, #23, 4(NEWHDRISD)			      ; 1564
				  04   A6     00385									      ;
		    02   A7	  02   A6  A2 00387 	    SUBW2   2(NEWHDRISD), 2(R7)					      ; 1566
		         50	0000'  CF  D0 0038C 	    MOVL    LNK$GL_CURISD, R0					      ; 1568
		         63	       50  D0 00391 	    MOVL    R0, (R3)						      ;
		    04   A0	       54  D0 00394 	    MOVL    R4, 4(R0)						      ; 1569
      04   A7	         17	       00  EF 00398 	    EXTZV   #0, #23, 4(R7), R1					      ; 1571
				       51     0039D									      ;
		         52	  02   A6  3C 0039E 	    MOVZWL  2(NEWHDRISD), R2					      ;
		         51	       52  C0 003A2 	    ADDL2   R2, R1						      ;
	   17	         00	       51  F0 003A5 	    INSV    R1, #0, #23, 4(R7)					      ;
				  04   A7     003A9									      ;
				0000G  CF  B6 003AB 	    INCW    LNK$GW_NISECTS					      ; 1574
		    04   AE	       50  D0 003AF 	    MOVL    R0, PREVISD						      ; 1575
				     00CF  31 003B3 	    BRW     22$							      ; 1560
		         63	       62  D0 003B6 19$:    MOVL    (R2), (R3)						      ; 1578
		         62	       53  D0 003B9 	    MOVL    R3, (R2)						      ; 1579
	   50	         5B	  04   A2  C3 003BC 	    SUBL3   4(R2), R11, R0					      ; 1580
	   51	         50 00000200   8F  C7 003C1 	    DIVL3   #512, R0, R1					      ; 1581
		    02   A7	       51  B0 003C9 	    MOVW    R1, 2(R7)						      ;
		  0000'  CF	  02   A7  A0 003CD 	    ADDW2   2(R7), LNK$GW_IMGBLKS				      ; 1582
      04   A7	         17	       00  EF 003D3 	    EXTZV   #0, #23, 4(R7), R0					      ; 1585
				       50     003D8									      ;
		         51	  02   A7  3C 003D9 	    MOVZWL  2(R7), R1						      ;
		         50	       51  C0 003DD 	    ADDL2   R1, R0						      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-21
; Digital Equipment Corporation
;
	   17	         00	       50  F0 003E0 	    INSV    R0, #0, #23, 4(NEWHDRISD)				      ;
				  04   A6     003E4									      ;
				0000G  CF  B6 003E6 	    INCW    LNK$GW_NISECTS					      ; 1586
		         7E	       67  3C 003EA 	    MOVZWL  (R7), -(SP)						      ; 1587
		  0000V  CF	       01  FB 003ED 	    CALLS   #1, INCHDRSIZE					      ;
				       0C  DD 003F2 	    PUSHL   #12							      ; 1588
		  0000V  CF	       01  FB 003F4 	    CALLS   #1, INCHDRSIZE					      ;
		    04   AE	       53  D0 003F9 	    MOVL    R3, PREVISD						      ; 1592
		         50	0000'  CF  D0 003FD 	    MOVL    LNK$GL_CURISD, R0					      ; 1589
		    08   A0	       54  D1 00402 	    CMPL    R4, 8(R0)						      ;
				       08  1F 00406 	    BLSSU   21$							      ;
		    08   A0	  FF   AB  9E 00408 	    MOVAB   -1(R11), 8(R0)					      ; 1591
				     FDBF  31 0040D 20$:    BRW     5$							      ; 1593
				  0C   AE  9F 00410 21$:    PUSHAB  NEWISD						      ; 1597
				       30  DD 00413 	    PUSHL   #48							      ;
		  0000G  CF	       02  FB 00415 	    CALLS   #2, LNK$ALLOBLK					      ;
		         6E	  0C   AE  D0 0041A 	    MOVL    NEWISD, (SP)					      ; 1598
		    00   BE	  04   BE  D0 0041E 	    MOVL    @PREVISD, @0(SP)					      ;
		    04   BE	       6E  D0 00423 	    MOVL    (SP), @PREVISD					      ; 1599
				0000G  CF  B6 00427 	    INCW    LNK$GW_NISECTS					      ; 1600
	   50	         6E	       04  C1 0042B 	    ADDL3   #4, (SP), R0					      ; 1601
		         59	       60  9E 0042F 	    MOVAB   (R0), R9						      ;
		         69	       54  D0 00432 	    MOVL    R4, (R9)						      ;
		         58	0000'  CF  D0 00435 	    MOVL    LNK$GL_CURISD, R8					      ; 1603
		    04   A9	  08   A8  D0 0043A 	    MOVL    8(R8), 4(R9)					      ; 1602
	   56	         6E	       0C  C1 0043F 	    ADDL3   #12, (SP), NEWHDRISD				      ; 1604
	   66	         67	       67  28 00443 	    MOVC3   (R7), (R7), (NEWHDRISD)				      ; 1605
	   50	    04   A9	       69  C3 00447 	    SUBL3   (R9), 4(R9), R0					      ; 1608
		         50	01FF   C0  9E 0044C 	    MOVAB   511(R0), R0						      ; 1607
	   51	         50 00000200   8F  C7 00451 	    DIVL3   #512, R0, R1					      ; 1609
		    02   A6	       51  B0 00459 	    MOVW    R1, 2(NEWHDRISD)					      ;
		         50	       58  D0 0045D 	    MOVL    R8, R0						      ; 1612
	   50	         69	  04   A0  C3 00460 	    SUBL3   4(R0), (R9), R0					      ; 1611
		         50 00000200   8F  C6 00465 	    DIVL2   #512, R0						      ; 1612
      04   A7	         17	       00  EF 0046C 	    EXTZV   #0, #23, 4(R7), R1					      ; 1611
				       51     00471									      ;
		         51	       50  C0 00472 	    ADDL2   R0, R1						      ;
	   17	         00	       51  F0 00475 	    INSV    R1, #0, #23, 4(NEWHDRISD)				      ;
				  04   A6     00479									      ;
		    08   A8	  FF   AB  9E 0047B 	    MOVAB   -1(R11), 8(R8)					      ; 1613
		  0000'  CF	       6E  D0 00480 	    MOVL    (SP), LNK$GL_CURISD					      ; 1614
				  64   AE  D5 00485 22$:    TSTL    EMPTYDESC+4						      ; 1619
				       83  13 00488 	    BEQL    20$							      ;
				     FE1A  31 0048A 	    BRW     15$							      ;
	   50	  0000'  CF 000001FF   8F  C1 0048D 23$:    ADDL3   #511, HEADER_SIZE, R0				      ; 1623
		         50 00000200   8F  C6 00497 	    DIVL2   #512, R0						      ;
		  0000'  CF	       50  A0 0049E 	    ADDW2   R0, LNK$GW_HDRBLKS					      ;
				       7E  7C 004A3 	    CLRQ    -(SP)						      ; 1624
				0000'  CF  9F 004A5 	    PUSHAB  HEADERDESC						      ;
		         7E	0000'  CF  3C 004A9 	    MOVZWL  LNK$GW_HDRBLKS, -(SP)				      ;
	      00000000G  9F	       04  FB 004AE 	    CALLS   #4, @#SYS$EXPREG					      ;
		         03	       50  E8 004B5 	    BLBS    R0, 24$						      ;
				     FD8E  31 004B8 	    BRW     10$							      ;
	   50	  0000'  CF 000001FF   8F  C1 004BB 24$:    ADDL3   #511, LNK$GL_DSTEND, R0				      ; 1630
	   51	         50 00000200   8F  C7 004C5 	    DIVL3   #512, R0, R1					      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-22
; Digital Equipment Corporation
;
		  0000'  CF	       51  B0 004CD 	    MOVW    R1, LNK$GW_DSTBLKS					      ;
		         50	0000'  CF  3C 004D2 25$:    MOVZWL  LNK$GW_HDRBLKS, R0					      ; 1632
		         51	0000'  CF  3C 004D7 	    MOVZWL  LNK$GW_IMGBLKS, R1					      ;
		         50	       51  C0 004DC 	    ADDL2   R1, R0						      ;
		         57	0000'  CF  3C 004DF 	    MOVZWL  LNK$GW_DSTBLKS, FILEBLKS				      ;
		         57	       50  C0 004E4 	    ADDL2   R0, FILEBLKS					      ;
	   06	  0000G  CF	       00  E0 004E7 	    BBS     #LNK$S_DBG, LNK$GL_CTLMSK, 26$			      ; 1633
	   0E	  0000G  CF	       02  E1 004ED 	    BBC     #2, LNK$GL_CTLMSK, 27$				      ; 1634
		         50	0000G  CF  3C 004F3 26$:    MOVZWL  LNK$GW_NSYMBOLS, R0					      ; 1635
		         50	       27  C0 004F8 	    ADDL2   #39, R0						      ;
		         50	       14  C6 004FB 	    DIVL2   #20, R0						      ;
		         57	       50  C0 004FE 	    ADDL2   R0, FILEBLKS					      ;
	   00	         6E	       00  2C 00501 27$:    MOVC5   #0, (SP), #0, #80, IMAGEFAB				      ; 1637
		    10   AE	0050   8F     00505									      ;
		    10   AE	5003   8F  B0 0050A 	    MOVW    #20483, IMAGEFAB					      ; 1639
		    26   AE	  42   8F  88 00510 	    BISB2   #66, IMAGEFAB+22					      ; 1641
		    46   AE	0200   8F  B0 00515 	    MOVW    #512, IMAGEFAB+54					      ; 1642
		    2F   AE	       01  90 0051B 	    MOVB    #1, IMAGEFAB+31					      ; 1643
	   06	  0000G  CF	       00  E1 0051F 	    BBC     #LNK$S_CONTIG, LNK$GL_CTLMSK, 28$			      ; 1644
		    16   AE	       10  88 00525 	    BISB2   #16, IMAGEFAB+4					      ; 1645
				       04  11 00529 	    BRB     29$							      ; 1644
		    16   AE	       20  88 0052B 28$:    BISB2   #32, IMAGEFAB+4					      ; 1646
		    20   AE	       57  D0 0052F 29$:    MOVL    FILEBLKS, IMAGEFAB+16				      ; 1647
		    27   AE	       20  88 00533 	    BISB2   #32, IMAGEFAB+23					      ; 1648
		         50	0000G  CF  D0 00537 	    MOVL    LNK$GL_IMGFIL, R0					      ; 1649
		    3C   AE	  0F   A0  D0 0053C 	    MOVL    15(R0), IMAGEFAB+44					      ;
		    44   AE	  0B   A0  90 00541 	    MOVB    11(R0), IMAGEFAB+52					      ; 1650
		    45   AE	       04  90 00546 	    MOVB    #4, IMAGEFAB+53					      ; 1651
		    40   AE	0000'  CF  9E 0054A 	    MOVAB   P.AAF, IMAGEFAB+48					      ; 1652
		    38   AE	       5A  D0 00550 	    MOVL    R10, IMAGEFAB+40					      ; 1653
		  0000'  CF	  10   AE  9E 00554 	    MOVAB   IMAGEFAB, LNK$AL_IMGRAB+60				      ; 1654
				  10   AE  9F 0055A 	    PUSHAB  IMAGEFAB						      ; 1655
	      00000000G  9F	       01  FB 0055D 	    CALLS   #1, @#SYS$CREATE					      ;
		    08   AE	       50  D0 00564 	    MOVL    R0, ERRORCODE					      ;
		         13	  08   AE  E9 00568 	    BLBC    ERRORCODE, 30$					      ;
				0000'  CF  9F 0056C 	    PUSHAB  LNK$AL_IMGRAB					      ; 1656
	      00000000G  9F	       01  FB 00570 	    CALLS   #1, @#SYS$CONNECT					      ;
		    08   AE	       50  D0 00577 	    MOVL    R0, ERRORCODE					      ;
		         40	  08   AE  E8 0057B 	    BLBS    ERRORCODE, 33$					      ;
				  0C   AA  DD 0057F 30$:    PUSHL   12(R10)						      ; 1658
		         7E	  0B   AA  9A 00582 	    MOVZBL  11(R10), -(SP)					      ;
		         7E	       00  9A 00586 	    MOVZBL  #SEV$C_DIAG, -(SP)					      ;
		         7E	  00G  8F  9A 00589 	    MOVZBL  #ERM$C_CRE8ERR, -(SP)				      ;
		  0000G  CF	       04  FB 0058D 	    CALLS   #4, LNK$ERRMSG					      ;
				  08   AE  DD 00592 	    PUSHL   ERRORCODE						      ; 1660
	   7E	  0000G  CF	       0B  C1 00595 	    ADDL3   #11, LNK$GL_IMGFIL, -(SP)				      ; 1661
		         7E	       00  9A 0059B 	    MOVZBL  #SEV$C_INFOR, -(SP)					      ; 1660
		         7E	  00G  8F  9A 0059E 	    MOVZBL  #ERM$C_UNMCOD, -(SP)				      ;
		  0000G  CF	       04  FB 005A2 	    CALLS   #4, LNK$ERRMSG					      ;
				  1C   AE  DD 005A7 	    PUSHL   IMAGEFAB+12						      ; 1663
		         7E	       00  9A 005AA 	    MOVZBL  #SEV$C_INFOR, -(SP)					      ;
	   7E	    10   AE	       07  CB 005AD 	    BICL3   #7, ERRORCODE, -(SP)				      ;
		  0000G  CF	       03  FB 005B2 	    CALLS   #3, LNK$ERRMSG					      ;
	   01	  0000G  CF	       00  E4 005B7 31$:    BBSC    #LNK$S_IMAGE, LNK$GL_CTLMSK, 32$			      ; 1665
					   04 005BD 	    RET     							      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-23
; Digital Equipment Corporation
;
					   04 005BE 32$:    RET     							      ; 1666
		  0000'  CF	  12   AE  B0 005BF 33$:    MOVW    IMAGEFAB+2, LNK$GW_IMGIFI				      ; 1668
				0000G  CF  95 005C5 	    TSTB    LNK$GT_IMGNAM					      ; 1674
				       06  13 005C9 	    BEQL    34$							      ;
				0000G  CF  95 005CB 	    TSTB    LNK$GT_IMGID					      ; 1675
				       64  12 005CF 	    BNEQ    40$							      ;
		         50	  03   AA  9A 005D1 34$:    MOVZBL  3(R10), R0						      ; 1679
      04   BA	         50	  5D   8F  3A 005D5 	    LOCC    #93, R0, @4(R10)					      ;
				       02  12 005DB 	    BNEQ    35$							      ;
				       51  D4 005DD 	    CLRL    R1							      ;
		         52	       51  D0 005DF 35$:    MOVL    R1, IMAGENAME					      ;
				       10  12 005E2 	    BNEQ    37$							      ; 1680
		         50	  03   AA  9A 005E4 	    MOVZBL  3(R10), R0						      ; 1681
      04   BA	         50	       3E  3A 005E8 	    LOCC    #62, R0, @4(R10)					      ;
				       02  12 005ED 	    BNEQ    36$							      ;
				       51  D4 005EF 	    CLRL    R1							      ;
		         52	       51  D0 005F1 36$:    MOVL    R1, IMAGENAME					      ;
				       52  D6 005F4 37$:    INCL    IMAGENAME						      ; 1683
	   62	         0A	       2E  3A 005F6 	    LOCC    #46, #10, (IMAGENAME)				      ; 1684
				       02  12 005FA 	    BNEQ    38$							      ;
				       51  D4 005FC 	    CLRL    R1							      ;
		         56	       51  D0 005FE 38$:    MOVL    R1, IMAGEIDENT					      ;
				0000G  CF  95 00601 	    TSTB    LNK$GT_IMGNAM					      ; 1686
				       11  12 00605 	    BNEQ    39$							      ;
    0000G  CF	         56	       52  83 00607 	    SUBB3   IMAGENAME, IMAGEIDENT, LNK$GT_IMGNAM		      ; 1688
		         50	0000G  CF  9A 0060D 	    MOVZBL  LNK$GT_IMGNAM, R0					      ; 1689
    0000G  CF	         62	       50  28 00612 	    MOVC3   R0, (IMAGENAME), LNK$GT_IMGNAM+1			      ;
				0000G  CF  95 00618 39$:    TSTB    LNK$GT_IMGID					      ; 1691
				       17  12 0061C 	    BNEQ    40$							      ;
	   50	    04   AA	       56  C3 0061E 	    SUBL3   IMAGEIDENT, 4(R10), R0				      ; 1695
    0000G  CF	         50	  03   AA  81 00623 	    ADDB3   3(R10), R0, LNK$GT_IMGID				      ; 1693
		         50	0000G  CF  9A 0062A 	    MOVZBL  LNK$GT_IMGID, R0					      ; 1696
    0000G  CF	         66	       50  28 0062F 	    MOVC3   R0, (IMAGEIDENT), LNK$GT_IMGID+1			      ;
		         53	0000'  CF  3C 00635 40$:    MOVZWL  LNK$GW_HDRBLKS, CURVBN				      ; 1703
				       53  D6 0063A 	    INCL    CURVBN						      ;
		  0000'  CF	  7C   8F  9A 0063C 	    MOVZBL  #124, HEADER_SIZE					      ; 1704
		  0000G  CF	0000G  CF  9E 00642 	    MOVAB   LNK$GL_CLULST, LNK$GL_CURCLU			      ; 1705
		  0000G  CF	0000G  DF  D0 00649 41$:    MOVL    @LNK$GL_CURCLU, LNK$GL_CURCLU			      ; 1706
				       7B  13 00650 	    BEQL    46$							      ;
    0000'  CF	  0000G  CF	       14  C1 00652 	    ADDL3   #20, LNK$GL_CURCLU, LNK$GL_CURISD			      ; 1708
		  0000'  CF	0000'  DF  D0 0065A 42$:    MOVL    @LNK$GL_CURISD, LNK$GL_CURISD			      ; 1709
				       E6  13 00661 	    BEQL    41$							      ;
		         50	0000'  CF  D0 00663 	    MOVL    LNK$GL_CURISD, R0					      ; 1711
	   52	         50	       0C  C1 00668 	    ADDL3   #12, R0, R2						      ;
		         0A	  08   A2  E9 0066C 	    BLBC    8(R2), 43$						      ; 1713
				  04   A0  D5 00670 	    TSTL    4(R0)						      ; 1714
				       05  13 00673 	    BEQL    43$							      ;
		  0000V  CF	       00  FB 00675 	    CALLS   #0, READSECTION					      ; 1715
	   0E	    08   A2	       02  E0 0067A 43$:    BBS     #2, 8(R2), 44$					      ; 1716
		         50	0000'  CF  D0 0067F 	    MOVL    LNK$GL_CURISD, R0					      ; 1717
				  04   A0  D5 00684 	    TSTL    4(R0)						      ;
				       04  13 00687 	    BEQL    44$							      ;
		    0C   A2	       53  D0 00689 	    MOVL    CURVBN, 12(R2)					      ; 1718
	   0C	  0000G  CF	       00  E0 0068D 44$:    BBS     #LNK$S_SYS, LNK$GL_CTLMSK, 45$			      ; 1719
				  02   A2  B5 00693 	    TSTW    2(R2)						      ; 1720

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 2-24
; Digital Equipment Corporation
;
				       07  13 00696 	    BEQL    45$							      ;
				       52  DD 00698 	    PUSHL   R2							      ; 1721
		  0000V  CF	       01  FB 0069A 	    CALLS   #1, ISDTOHEADER					      ;
	   B6	    08   A2	       02  E0 0069F 45$:    BBS     #2, 8(R2), 42$					      ; 1722
		         50	0000'  CF  D0 006A4 	    MOVL    LNK$GL_CURISD, R0					      ; 1723
				  04   A0  D5 006A9 	    TSTL    4(R0)						      ;
				       AC  13 006AC 	    BEQL    42$							      ;
		         50	0000'  CF  D0 006AE 	    MOVL    LNK$GL_CURISD, R0					      ; 1726
				  04   A0  DD 006B3 	    PUSHL   4(R0)						      ; 1725
				       53  DD 006B6 	    PUSHL   CURVBN						      ;
		         7E	  02   A2  3C 006B8 	    MOVZWL  2(R2), -(SP)					      ;
		  0000V  CF	       03  FB 006BC 	    CALLS   #3, WRITESECTION					      ;
		         5D	       50  E9 006C1 	    BLBC    R0, 50$						      ;
		         50	  02   A2  3C 006C4 	    MOVZWL  2(R2), R0						      ; 1728
		         53	       50  C0 006C8 	    ADDL2   R0, CURVBN						      ;
				       8D  11 006CB 	    BRB     42$							      ; 1709
	   07	  0000G  CF	       00  E0 006CD 46$:    BBS     #LNK$S_SYS, LNK$GL_CTLMSK, 47$			      ; 1732
				       7E  D4 006D3 	    CLRL    -(SP)						      ; 1733
		  0000V  CF	       01  FB 006D5 	    CALLS   #1, ISDTOHEADER					      ;
		         50	0000'  CF  D0 006DA 47$:    MOVL    DSTBUFFER, R0					      ; 1734
				       24  13 006DF 	    BEQL    48$							      ;
				0000'  CF  B5 006E1 	    TSTW    LNK$GW_DSTBLKS					      ; 1735
				       1E  13 006E5 	    BEQL    48$							      ;
		  0000'  CF	       53  B0 006E7 	    MOVW    CURVBN, LNK$GW_DSTVBN				      ; 1737
				       50  DD 006EC 	    PUSHL   R0							      ; 1738
				       53  DD 006EE 	    PUSHL   CURVBN						      ;
		         7E	0000'  CF  3C 006F0 	    MOVZWL  LNK$GW_DSTBLKS, -(SP)				      ;
		  0000V  CF	       03  FB 006F5 	    CALLS   #3, WRITESECTION					      ;
		         24	       50  E9 006FA 	    BLBC    R0, 50$						      ;
		         50	0000'  CF  3C 006FD 	    MOVZWL  LNK$GW_DSTBLKS, R0					      ; 1741
		         53	       50  C0 00702 	    ADDL2   R0, CURVBN						      ;
	   06	  0000G  CF	       02  E0 00705 48$:    BBS     #2, LNK$GL_CTLMSK, 49$				      ; 1743
	   10	  0000G  CF	       00  E1 0070B 	    BBC     #LNK$S_DBG, LNK$GL_CTLMSK, 50$			      ; 1744
				0000'  CF  9F 00711 49$:    PUSHAB  LNK$AL_IMGRAB					      ; 1746
	      00000000G  9F	       01  FB 00715 	    CALLS   #1, @#SYS$DISCONNECT				      ;
		  0000'  CF	       53  B0 0071C 	    MOVW    CURVBN, LNK$GW_GSTVBN				      ; 1747
					   04 00721 50$:    RET     							      ; 1411

; Routine Size:  1432 bytes



; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 3
; Digital Equipment Corporation
;
;00100  1752	ROUTINE INCHDRSIZE(ISDSIZE) : NOVALUE =
;00200  1753	BEGIN
;00300  1754	!
;00400  1755	!	THIS ROUTINE ADDS "ISDSIZE" TO THE CURRENT HEADER SIZE AND
;00500  1756	!	IF IT EXCEEDS THE SIZE OF A BLOCK, INCREMENTS THE COUNT OF
;00600  1757	!	HEADER BLOCKS.
;00700  1758	!
;00800  1759	IF (.HEADER_SIZE + .ISDSIZE) GEQU (512 - HDR$K_MINFILL)		! IF THIS ISD WILL NOT FIT WITHIN
;00900  1760	THEN BEGIN							! THE CURRENT HEADER BLOCK
;01000  1761		LNK$GW_HDRBLKS = .LNK$GW_HDRBLKS + 1;			! INCREMENT THE BLOCK COUNT
;01100  1762		HEADER_SIZE = .ISDSIZE;					! AND NEXT BLOCK HAS JUST THIS MUCH
;01200  1763	     END
;01300  1764	ELSE HEADER_SIZE = .HEADER_SIZE + .ISDSIZE;			! OTHERWISE ADD TO THE CURRENT BLOCK SIZE
;01400  1765	RETURN;
;01500  1766	END;





					 0800 00722 INCHDRSIZE:
							    .WORD   Save R11						      ; 1752
		         5B	0000'  CF  9E 00724 	    MOVAB   HEADER_SIZE, R11					      ;
	   50	         6B	  04   AC  C1 00729 	    ADDL3   ISDSIZE, HEADER_SIZE, R0				      ; 1759
	      000001FE   8F	       50  D1 0072E 	    CMPL    R0, #510						      ;
				       09  1F 00735 	    BLSSU   1$							      ;
				0000'  CF  B6 00737 	    INCW    LNK$GW_HDRBLKS					      ; 1761
		         6B	  04   AC  D0 0073B 	    MOVL    ISDSIZE, HEADER_SIZE				      ; 1762
					   04 0073F 	    RET     							      ; 1759
		         6B	  04   AC  C0 00740 1$:     ADDL2   ISDSIZE, HEADER_SIZE				      ; 1764
					   04 00744 	    RET     							      ; 1752

; Routine Size:  35 bytes


;01600  1767	ROUTINE ISDTOHEADER(ISD) : NOVALUE =
;01700  1768	BEGIN
;01800  1769	!
;01900  1770	!	THIS ROUTINE COPIES IMAGE SECTION DESCRIPTORS TO THE
;02000  1771	!	IMAGE HEADER AND ENSURES THAT THE UNUSED PART OF EACH
;02100  1772	!	BLOCK IS -1 FILLED (I.E. VALUE OF HDR$K_FILLCHR). IF THE
;02200  1773	!	ARGUMENT IS 0, IT IS ASSUMED THAT THIS IS THE END OF THE
;02300  1774	!	ISD LIST FOR THE HEADER.
;02400  1775	!
;02500  1776	LOCAL
;02600  1777		CURHEADOFF,
;02700  1778		FILLCOUNT,
;02800  1779		ISDSIZE;
;02900  1780	!
;03000  1781	OWN
;03100  1782		HEADBLOCKOFF;
;03200  1783	!
;03300  1784	MAP	ISD : REF BLOCK[,BYTE];					! ARGUMENT IS A POINTER
;03400  1785	!
;03500  1786	CURHEADOFF = .HEADBLOCKOFF*512 + .HEADER_SIZE + .HEADERDESC[0];	! COMPUTE CURRENT OFFSET INTO HEADER BUFFER

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 3-1
; Digital Equipment Corporation
;
;03600  1787	IF .ISD EQL 0							! IF THIS IS THE LAST I-SECTION
;03700  1788	THEN ISDSIZE = 0
;03800  1789	ELSE ISDSIZE = .ISD[ISD$W_SIZE];
;03900  1790	IF (FILLCOUNT = 512 - .HEADER_SIZE) LEQU (.ISDSIZE + HDR$K_MINFILL)	! IF THERE IS NOT ROOM FOR THIS
;04000  1791	THEN BEGIN								! DESCRIPTOR IN THE CURRENT BLOCK
;04100  1792		CURHEADOFF = CH$FILL(HDR$K_FILLCHR,.FILLCOUNT,.CURHEADOFF);	! THEN FILL IT UP
;04200  1793		HEADER_SIZE = 0;						! RESET SIZE OF THIS BLOCK
;04300  1794		HEADBLOCKOFF = .HEADBLOCKOFF + 1;				! INCREMENT TO NEXT BLOCK
;04400  1795	     END;
;04500  1796	IF .ISDSIZE EQL 0							! IF THIS IS THE END OF IT
;04600  1797	THEN BEGIN
;04700  1798		CURHEADOFF = CH$FILL(0,HDR$K_MINFILL,.CURHEADOFF);		! INSERT MINIMUM ISD OF 0 (END OF LIST)
;04800  1799		CH$FILL(HDR$K_FILLCHR,(((.CURHEADOFF+511)AND NOT 511) - 	! THEN FILL UP REMAINDER OF
;04900  1800				.CURHEADOFF),.CURHEADOFF);			! THIS BLOCK
;05000  1801	     END
;05100  1802	ELSE BEGIN
;05200  1803		CH$MOVE(.ISDSIZE,ISD[ISD$W_SIZE],.CURHEADOFF);			! OTHERWISE JUST COPY IN
;05300  1804		HEADER_SIZE = .HEADER_SIZE + .ISDSIZE;				! CURRENT ISD
;05400  1805	     END;
;05500  1806	RETURN;
;05600  1807	END;



							    .PSECT  $OWN$,NOEXE,2

					      00018 HEADBLOCKOFF:
							    .BLKB   4



							    .PSECT  $CODE$,NOWRT,2

					 09FC 00745 ISDTOHEADER:
							    .WORD   Save R2,R3,R4,R5,R6,R7,R8,R11			      ; 1767
		         5B	0000'  CF  9E 00747 	    MOVAB   HEADER_SIZE, R11					      ;
	   50	    04   AB	       09  78 0074C 	    ASHL    #9, HEADBLOCKOFF, R0				      ; 1786
		         50	       6B  C0 00751 	    ADDL2   HEADER_SIZE, R0					      ;
	   56	         50	  F8   AB  C1 00754 	    ADDL3   HEADERDESC, R0, CURHEADOFF				      ;
		         58	  04   AC  D0 00759 	    MOVL    ISD, R8						      ; 1787
				       04  12 0075D 	    BNEQ    1$							      ;
				       57  D4 0075F 	    CLRL    ISDSIZE						      ; 1788
				       03  11 00761 	    BRB     2$							      ; 1787
		         57	       68  3C 00763 1$:     MOVZWL  (R8), ISDSIZE					      ; 1789
	   50 00000200   8F	       6B  C3 00766 2$:     SUBL3   HEADER_SIZE, #512, FILLCOUNT			      ; 1790
	   51	         57	       02  C1 0076E 	    ADDL3   #2, ISDSIZE, R1					      ;
		         51	       50  D1 00772 	    CMPL    FILLCOUNT, R1					      ;
				       0F  1A 00775 	    BGTRU   3$							      ;
      FF   8F	         6E	       00  2C 00777 	    MOVC5   #0, (SP), #255, FILLCOUNT, (CURHEADOFF)		      ; 1792
		         66	       50     0077C									      ;
		         56	       53  D0 0077E 	    MOVL    R3, CURHEADOFF					      ;
				       6B  D4 00781 	    CLRL    HEADER_SIZE						      ; 1793
				  04   AB  D6 00783 	    INCL    HEADBLOCKOFF					      ; 1794
				       57  D5 00786 3$:     TSTL    ISDSIZE						      ; 1796
				       1E  12 00788 	    BNEQ    4$							      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 3-2
; Digital Equipment Corporation
;
	   00	         6E	       00  2C 0078A 	    MOVC5   #0, (SP), #0, #2, (CURHEADOFF)			      ; 1798
		         66	       02     0078E									      ;
		         56	       53  D0 00790 	    MOVL    R3, CURHEADOFF					      ;
		         50	01FF   C6  9E 00793 	    MOVAB   511(R6), R0						      ; 1799
	   09	         00	       00  F0 00798 	    INSV    #0, #0, #9, R0					      ;
				       50     0079C									      ;
		         50	       56  C2 0079D 	    SUBL2   CURHEADOFF, R0					      ;
      FF   8F	         6E	       00  2C 007A0 	    MOVC5   #0, (SP), #255, R0, (CURHEADOFF)			      ;
		         66	       50     007A5									      ;
					   04 007A7 	    RET     							      ; 1796
	   66	         68	       57  28 007A8 4$:     MOVC3   ISDSIZE, (R8), (CURHEADOFF)				      ; 1803
		         6B	       57  C0 007AC 	    ADDL2   ISDSIZE, HEADER_SIZE				      ; 1804
					   04 007AF 	    RET     							      ; 1767

; Routine Size:  107 bytes


;05700  1808	ROUTINE READSECTION : NOVALUE =
;05800  1809	BEGIN
;05900  1810	!++
;06000  1811	!		THIS ROUTINE COPIES GLOBAL SECTION FROM A SHAREABLE
;06100  1812	!	IMAGE TO THE IMAGE BEING PRODUCED. IF THIS IS THE FIRST ENTRY FOR
;06200  1813	!	A PARTICULAR CLUSTER THEN THE IMAGE FILE OPEN ON A PREVIUOS 
;06300  1814	!	CLUSTER IS CLOSED AND THIS ONE IS OPENED. THE SECTION IS READ
;06400  1815	!	INTO A BUFFER WHICH IS DESCRIBED BY THE DESCRIPTOR IN THE
;06500  1816	!	IMAGE SECTION DESCRIPTOR.
;06600  1817	!--
;06700  1818	OWN
;06800  1819		SHRIMGIFI,				! IFI OF THE SHAREABLE IMAGE FILE
;06900  1820		PREVAUXFNB : REF BLOCK[,BYTE];		! AUXILIARY FILE NAME BLOCK OF PREVIOUS FILE
;07000  1821	!
;07100  1822	LOCAL
;07200  1823		FABLOCK : BLOCK[FAB$C_BLN,BYTE],	! FAB FOR OPENING AND CLOSING
;07300  1824		ERRORCODE,				! RMS ERROR CODE
;07400  1825		STVCODE,
;07500  1826		BYTECOUNT;
;07600  1827	!
;07700  1828	BIND
;07800  1829		SHRIMGFDB = LNK$GL_CURCLU[CLU$L_FSTFDB] : REF BLOCK[,BYTE],
;07900  1830		SHRIMGAUXFNB = SHRIMGFDB[FDB$AL_AUXFNB] : BLOCK[,BYTE],
;08000  1831		CURHDRISD = LNK$GL_CURISD[ISD$AL_HDRISD] : BLOCK[,BYTE];
;08100  1832	!
;08200  1833	IF .SHRIMGIFI NEQ 0				! IF A FILE IS POEN
;08300  1834	AND NOT .(LNK$GL_CURCLU[CLU$W_FLAGS])<CLU$V_OPEN>	! AND NOT THIS FILE
;08400  1835	THEN BEGIN
;08500  1836		CH$FILL(0,FAB$C_BLN,FABLOCK);		! ZERO OUT THE FAB
;08600  1837		FABLOCK[FAB$B_BLN] = FAB$C_BLN;		! SET ITS IDENTIFIER
;08700  1838		FABLOCK[FAB$B_BID] = FAB$C_BID;		! AND LENGTH
;08800  1839		FABLOCK[FAB$W_IFI] = .SHRIMGIFI;		! AND THE INTERNAL FILE IDENT
;08900  1840		IF NOT (ERRORCODE = $CLOSE(FAB=FABLOCK))	! ATTEMPT THE CLOSE
;09000  1841		THEN BEGIN					! AND ON FAILURE
;09100  1842			LNK$ERRMSG(ERM$C_CLOSERR,SEV$C_DIAG,	! ISSUE ERROR MESSAGE
;09200  1843				.PREVAUXFNB[NAM$B_RSL],
;09300  1844				.PREVAUXFNB[NAM$L_RSA],
;09400  1845				.ERRORCODE);

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 3-3
; Digital Equipment Corporation
;
;09500  1846			LNK$ERRMSG(.ERRORCODE AND NOT 7, SEV$C_DIAG,
;09600  1847				.FABLOCK[FAB$L_STV]);
;09700  1848		     END;
;09800  1849		SHRIMGIFI = 0;					! RESET THE IFI
;09900  1850	     END;
;10000  1851	IF NOT .(LNK$GL_CURCLU[CLU$W_FLAGS])<CLU$V_COPY>		! IF THIS CLUSTER NOT TO BE COPIED
;10100  1852	OR (LNK$AL_RAB[RAB$L_BKT] = .CURHDRISD[ISD$L_VBN]) EQL 0	! OR NO VBN IS SET
;10200  1853	THEN BEGIN
;10300  1854		LNK$GL_CURISD[ISD$Q_BUFADR] = 0;		! CLEAR THE BUFFER ADDRESS
;10400  1855		CURHDRISD[ISD$L_VBN] = 0;				! AND THE VBN
;10500  1856		RETURN;						! AND THAT'S ALL
;10600  1857	     END;
;10700  1858	IF NOT .(LNK$GL_CURCLU[CLU$W_FLAGS])<CLU$V_OPEN>		! IF THE FILE IS NOT OPEN
;10800  1859	THEN BEGIN
;10900  1860		CH$FILL(0,FAB$C_BLN,FABLOCK);			! CLEAR OUT A FAB
;11000  1861		FABLOCK[FAB$B_BLN] = FAB$C_BLN;			! SET ITS LENGTH AND
;11100  1862		FABLOCK[FAB$B_BID] = FAB$C_BID;			! IDENTIFICATION
;11200  1863		FABLOCK[FAB$V_GET] = TRUE;			! SET TO READ
;11300  1864		FABLOCK[FAB$V_BIO] = TRUE;			! BLOCKS
;11400  1865		FABLOCK[FAB$V_NAM] = TRUE;			! AND OPEN IS BY FILE NAME BLOCK
;11500  1866		FABLOCK[FAB$L_NAM] = SHRIMGAUXFNB;		! ADDRESS
;11600  1867		LNK$AL_RAB[RAB$L_FAB] = FABLOCK;			! SET FAB ADDRESS IN RAB
;11700  1868		LNK$AL_RAB[RAB$W_ISI] = 0;				! RESET STREAM IDENTIFIER
;11800  1869		IF NOT BEGIN
;11900  1870			IF NOT (ERRORCODE = $OPEN(FAB=FABLOCK))	! ATTEMPT TO OPEN
;12000  1871			THEN BEGIN				! THE IMAGE FILE AND
;12100  1872				STVCODE = .FABLOCK[FAB$L_STV];	! ON FAILURE SET STV
;12200  1873				FALSE				! AND SKIP
;12250  1874			     END
;12300  1875			ELSE TRUE
;12400  1876		       END
;12500  1877		OR NOT BEGIN
;12600  1878			IF NOT (ERRORCODE = $CONNECT(RAB=LNK$AL_RAB))	! ATTEMPT TO CONNECT A RAB
;12700  1879			THEN BEGIN					! AND ON FAILURE
;12800  1880				STVCODE = .LNK$AL_RAB[RAB$L_STV];			! SET STV
;12900  1881				FALSE					! AND SKIP
;13000  1882			     END
;13100  1883			ELSE TRUE
;13150  1884		         END
;13200  1885		THEN BEGIN
;13300  1886			LNK$ERRMSG(ERM$C_OPIDERR,SEV$C_DIAG,	! REPORT AS OPEN
;13400  1887				.LNK$GB_PASS,.SHRIMGAUXFNB[NAM$B_RSL],
;13500  1888				.SHRIMGAUXFNB[NAM$L_RSA],.ERRORCODE);
;13600  1889			LNK$ERRMSG(.ERRORCODE AND NOT 7,SEV$C_DIAG,
;13700  1890				.STVCODE);
;13800  1891			(LNK$GL_CURCLU[CLU$W_FLAGS])<CLU$V_OPEN> = FALSE;	! RESET OPEN FLAG
;13900  1892			CURHDRISD[ISD$L_VBN] = 0;				! AND THE VBN
;14000  1893			RETURN;
;14100  1894		     END;
;14110  1895		SHRIMGIFI = .FABLOCK[FAB$W_IFI];				! SAVE THE IFI
;14120  1896		PREVAUXFNB = SHRIMGAUXFNB;					! THIS WILL BE PREVIOUS NEXT TIME
;14200  1897	     END;
;14300  1898	!
;14400  1899	LNK$AL_RAB[RAB$L_UBF] = .LNK$GL_CURISD[ISD$Q_BUFADR];	! SET BUFFER ADDRESS
;14500  1900	BYTECOUNT = .CURHDRISD[ISD$W_PAGCNT] * 512;			! AND BYTE COUNT

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 3-4
; Digital Equipment Corporation
;
;14600  1901	WHILE .BYTECOUNT GTR 0					! BEGIN LOOP
;14700  1902	DO BEGIN
;14800  1903		LNK$AL_RAB[RAB$W_USZ] = MINU(.BYTECOUNT,TFRLENGTH);	! SET BYTE COUNT
;14900  1904		IF NOT (ERRORCODE = $READ(RAB=LNK$AL_RAB))	! ATTEMPT THE NEXT READ
;15000  1905		THEN BEGIN
;15100  1906			LNK$ERRMSG(ERM$C_REDERR,SEV$C_DIAG,.LNK$GB_PASS,
;15200  1907				.SHRIMGAUXFNB[NAM$B_RSL],
;15300  1908				.SHRIMGAUXFNB[NAM$L_RSA]);
;15400  1909			LNK$ERRMSG(.ERRORCODE AND NOT 7,SEV$C_DIAG,
;15500  1910				.LNK$AL_RAB[RAB$L_STV]);
;15600  1911			LNK$GL_CURISD[ISD$Q_BUFADR] = 0;	! RESET BUFFER ADDRESS
;15700  1912			CURHDRISD[ISD$L_VBN] = 0;			! AND VBN
;15800  1913			RETURN;
;15900  1914		      END;
;16000  1915		BYTECOUNT = .BYTECOUNT - TFRLENGTH;		! REDUCE THE BYTECOUNT
;16100  1916		LNK$AL_RAB[RAB$L_UBF] = .LNK$AL_RAB[RAB$L_UBF] + 		! ADJUST THE BUFFER
;16200  1917				.LNK$AL_RAB[RAB$W_USZ];		! FOR AMOUNT READ
;16300  1918		LNK$AL_RAB[RAB$L_BKT] = 0;
;16400  1919	     END;
;16500  1920	RETURN;
;16600  1921	END;		! OF READSECTION ROUTINE



							    .PSECT  $OWN$,NOEXE,2

					      0001C SHRIMGIFI:
							    .BLKB   4
					      00020 PREVAUXFNB:
							    .BLKB   4

							    .GLOBL  SYS$CLOSE, SYS$OPEN, SYS$READ

							    .PSECT  $CODE$,NOWRT,2

					 0FFC 007B0 READSECTION:
							    .WORD   Save R2,R3,R4,R5,R6,R7,R8,R9,R10,R11		      ; 1808
		         59	0000G  CF  9E 007B2 	    MOVAB   LNK$ERRMSG, R9					      ;
		         5A	0000G  CF  9E 007B7 	    MOVAB   LNK$AL_RAB+56, R10					      ;
		         5B	       00  D0 007BC 	    MOVL    #SEV$C_DIAG, R11					      ;
		         5E	  B0   AE  9E 007BF 	    MOVAB   -80(SP), SP						      ;
		         50	0000G  CF  D0 007C3 	    MOVL    LNK$GL_CURCLU, R0					      ; 1829
	   51	         50	       04  C1 007C8 	    ADDL3   #4, R0, R1						      ;
	   58	         61	       13  C1 007CC 	    ADDL3   #19, (R1), R8					      ; 1830
	   57	  0000'  CF	       0C  C1 007D0 	    ADDL3   #12, LNK$GL_CURISD, R7				      ; 1831
		         56	0000'  CF  D0 007D6 	    MOVL    SHRIMGIFI, R6					      ; 1833
				       4E  13 007DB 	    BEQL    2$							      ;
	   49	    24   A0	       05  E0 007DD 	    BBS     #5, 36(R0), 2$					      ; 1834
	   00	         6E	       00  2C 007E2 	    MOVC5   #0, (SP), #0, #80, FABLOCK				      ; 1836
		         6E	0050   8F     007E6									      ;
		         6E	5003   8F  B0 007EA 	    MOVW    #20483, FABLOCK					      ; 1838
		    02   AE	       56  B0 007EF 	    MOVW    R6, FABLOCK+2					      ; 1839
				       5E  DD 007F3 	    PUSHL   SP							      ; 1840
	      00000000G  9F	       01  FB 007F5 	    CALLS   #1, @#SYS$CLOSE					      ;
		         56	       50  D0 007FC 	    MOVL    R0, ERRORCODE					      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 3-5
; Digital Equipment Corporation
;
		         25	       56  E8 007FF 	    BLBS    ERRORCODE, 1$					      ;
				       56  DD 00802 	    PUSHL   ERRORCODE						      ; 1842
		         50	0000'  CF  D0 00804 	    MOVL    PREVAUXFNB, R0					      ; 1844
				  04   A0  DD 00809 	    PUSHL   4(R0)						      ; 1842
		         7E	  03   A0  9A 0080C 	    MOVZBL  3(R0), -(SP)					      ;
		         7E	       5B  9A 00810 	    MOVZBL  R11, -(SP)						      ;
		         7E	  00G  8F  9A 00813 	    MOVZBL  #ERM$C_CLOSERR, -(SP)				      ;
		         69	       05  FB 00817 	    CALLS   #5, LNK$ERRMSG					      ;
				  0C   AE  DD 0081A 	    PUSHL   FABLOCK+12						      ; 1846
		         7E	       5B  9A 0081D 	    MOVZBL  R11, -(SP)						      ;
	   7E	         56	       07  CB 00820 	    BICL3   #7, ERRORCODE, -(SP)				      ;
		         69	       03  FB 00824 	    CALLS   #3, LNK$ERRMSG					      ;
				0000'  CF  D4 00827 1$:     CLRL    SHRIMGIFI						      ; 1849
		         50	0000G  CF  D0 0082B 2$:     MOVL    LNK$GL_CURCLU, R0					      ; 1851
	   06	    24   A0	       04  E1 00830 	    BBC     #4, 36(R0), 3$					      ;
		         6A	  0C   A7  D0 00835 	    MOVL    12(R7), LNK$AL_RAB+56				      ; 1852
				       0A  12 00839 	    BNEQ    4$							      ;
		         51	0000'  CF  D0 0083B 3$:     MOVL    LNK$GL_CURISD, R1					      ; 1854
				  04   A1  D4 00840 	    CLRL    4(R1)						      ;
				       7E  11 00843 	    BRB     8$							      ; 1855
	   03	    24   A0	       05  E1 00845 4$:     BBC     #5, 36(R0), 5$					      ; 1858
				     0083  31 0084A 	    BRW     10$							      ;
	   00	         6E	       00  2C 0084D 5$:     MOVC5   #0, (SP), #0, #80, FABLOCK				      ; 1860
		         6E	0050   8F     00851									      ;
		         6E	5003   8F  B0 00855 	    MOVW    #20483, FABLOCK					      ; 1862
		    16   AE	       22  88 0085A 	    BISB2   #34, FABLOCK+22					      ; 1864
		    07   AE	       01  88 0085E 	    BISB2   #1, FABLOCK+4					      ; 1865
		    28   AE	       58  D0 00862 	    MOVL    R8, FABLOCK+40					      ; 1866
		    04   AA	       6E  9E 00866 	    MOVAB   FABLOCK, LNK$AL_RAB+60				      ; 1867
				  CA   AA  B4 0086A 	    CLRW    LNK$AL_RAB+2					      ; 1868
				       5E  DD 0086D 	    PUSHL   SP							      ; 1870
	      00000000G  9F	       01  FB 0086F 	    CALLS   #1, @#SYS$OPEN					      ;
		         56	       50  D0 00876 	    MOVL    R0, ERRORCODE					      ;
		         06	       56  E8 00879 	    BLBS    ERRORCODE, 6$					      ;
		         52	  0C   AE  D0 0087C 	    MOVL    FABLOCK+12, STVCODE					      ; 1872
				       14  11 00880 	    BRB     7$							      ; 1808
				  C8   AA  9F 00882 6$:     PUSHAB  LNK$AL_RAB						      ; 1878
	      00000000G  9F	       01  FB 00885 	    CALLS   #1, @#SYS$CONNECT					      ;
		         56	       50  D0 0088C 	    MOVL    R0, ERRORCODE					      ;
		         33	       56  E8 0088F 	    BLBS    ERRORCODE, 9$					      ;
		         52	  D4   AA  D0 00892 	    MOVL    LNK$AL_RAB+12, STVCODE				      ; 1880
				       56  DD 00896 7$:     PUSHL   ERRORCODE						      ; 1886
				  04   A8  DD 00898 	    PUSHL   4(R8)						      ;
		         7E	  03   A8  9A 0089B 	    MOVZBL  3(R8), -(SP)					      ;
		         7E	0000G  CF  9A 0089F 	    MOVZBL  LNK$GB_PASS, -(SP)					      ;
		         7E	       5B  9A 008A4 	    MOVZBL  R11, -(SP)						      ;
		         7E	  00G  8F  9A 008A7 	    MOVZBL  #ERM$C_OPIDERR, -(SP)				      ;
		         69	       06  FB 008AB 	    CALLS   #6, LNK$ERRMSG					      ;
				       52  DD 008AE 	    PUSHL   STVCODE						      ; 1889
		         7E	       5B  9A 008B0 	    MOVZBL  R11, -(SP)						      ;
	   7E	         56	       07  CB 008B3 	    BICL3   #7, ERRORCODE, -(SP)				      ;
		         69	       03  FB 008B7 	    CALLS   #3, LNK$ERRMSG					      ;
		         50	0000G  CF  D0 008BA 	    MOVL    LNK$GL_CURCLU, R0					      ; 1891
		    24   A0	       20  8A 008BF 	    BICB2   #32, 36(R0)						      ;
				       71  11 008C3 8$:     BRB     13$							      ; 1892

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 3-6
; Digital Equipment Corporation
;
		  0000'  CF	  02   AE  3C 008C5 9$:     MOVZWL  FABLOCK+2, SHRIMGIFI				      ; 1895
		  0000'  CF	       58  D0 008CB 	    MOVL    R8, PREVAUXFNB					      ; 1896
		         50	0000'  CF  D0 008D0 10$:    MOVL    LNK$GL_CURISD, R0					      ; 1899
		    EC   AA	  04   A0  D0 008D5 	    MOVL    4(R0), LNK$AL_RAB+36				      ;
		         52	  02   A7  3C 008DA 	    MOVZWL  2(R7), BYTECOUNT					      ; 1900
	   52	         52	       09  78 008DE 	    ASHL    #9, BYTECOUNT, BYTECOUNT				      ; 0000
				       52  D5 008E2 11$:    TSTL    BYTECOUNT						      ; 1901
				       65  15 008E4 	    BLEQ    15$							      ;
		         50	       52  D0 008E6 	    MOVL    BYTECOUNT, R0					      ; 1903
	      00001400   8F	       50  D1 008E9 	    CMPL    R0, #5120						      ;
				       05  1B 008F0 	    BLEQU   12$							      ;
		         50	1400   8F  3C 008F2 	    MOVZWL  #5120, R0						      ;
		    E8   AA	       50  B0 008F7 12$:    MOVW    R0, LNK$AL_RAB+32					      ;
				  C8   AA  9F 008FB 	    PUSHAB  LNK$AL_RAB						      ; 1904
	      00000000G  9F	       01  FB 008FE 	    CALLS   #1, @#SYS$READ					      ;
		         56	       50  D0 00905 	    MOVL    R0, ERRORCODE					      ;
		         2F	       56  E8 00908 	    BLBS    ERRORCODE, 14$					      ;
				  04   A8  DD 0090B 	    PUSHL   4(R8)						      ; 1906
		         7E	  03   A8  9A 0090E 	    MOVZBL  3(R8), -(SP)					      ;
		         7E	0000G  CF  9A 00912 	    MOVZBL  LNK$GB_PASS, -(SP)					      ;
		         7E	       5B  9A 00917 	    MOVZBL  R11, -(SP)						      ;
		         7E	  00G  8F  9A 0091A 	    MOVZBL  #ERM$C_REDERR, -(SP)				      ;
		         69	       05  FB 0091E 	    CALLS   #5, LNK$ERRMSG					      ;
				  D4   AA  DD 00921 	    PUSHL   LNK$AL_RAB+12					      ; 1909
		         7E	       5B  9A 00924 	    MOVZBL  R11, -(SP)						      ;
	   7E	         56	       07  CB 00927 	    BICL3   #7, ERRORCODE, -(SP)				      ;
		         69	       03  FB 0092B 	    CALLS   #3, LNK$ERRMSG					      ;
		         50	0000'  CF  D0 0092E 	    MOVL    LNK$GL_CURISD, R0					      ; 1911
				  04   A0  D4 00933 	    CLRL    4(R0)						      ;
				  0C   A7  D4 00936 13$:    CLRL    12(R7)						      ; 1912
					   04 00939 	    RET     							      ; 1913
		         52	EC00   C2  9E 0093A 14$:    MOVAB   -5120(R2), BYTECOUNT				      ; 1915
		         50	  E8   AA  3C 0093F 	    MOVZWL  LNK$AL_RAB+32, R0					      ; 1916
		    EC   AA	       50  C0 00943 	    ADDL2   R0, LNK$AL_RAB+36					      ;
				       6A  D4 00947 	    CLRL    LNK$AL_RAB+56					      ; 1918
				       97  11 00949 	    BRB     11$							      ; 1901
					   04 0094B 15$:    RET     							      ; 1808

; Routine Size:  412 bytes


;16700  1922	ROUTINE WRITESECTION(PAGES,VBN,BUFFER) =
;16800  1923	BEGIN
;16900  1924	LOCAL
;17000  1925		BYTECOUNT,							! NUMBER OF BYTES OF IMAGE FILE
;17100  1926		ERRORCODE,							! WRITE ERROR CODE RETURNED
;17200  1927		FILNAMDSC : VECTOR[2];						! DESCRIPTOR FOR FILENAME IN MESSAGES
;17300  1928	!
;17400  1929	BIND AUXFNB = LNK$GL_IMGFIL[FDB$AL_AUXFNB] : BLOCK[NAM$C_BLN,BYTE];	! AUXILIARY FILENAME BLOCK
;17500  1930	!
;17600  1931	BYTECOUNT = .PAGES * 512;
;17700  1932	LNK$AL_IMGRAB[RAB$L_BKT] = .VBN;
;17800  1933	LNK$AL_IMGRAB[RAB$L_RBF] = .BUFFER;
;17900  1934	WHILE .BYTECOUNT GTR 0							! LOOP TILL ALL DONE
;18000  1935	DO BEGIN

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 3-7
; Digital Equipment Corporation
;
;18100  1936		LNK$AL_IMGRAB[RAB$W_RSZ] = MIN(.BYTECOUNT,TFRLENGTH);		! SET BYTE COUNT FOR THIS WRITE
;18200  1937		IF NOT (ERRORCODE = $WRITE(RAB=LNK$AL_IMGRAB))			! AND DO IT
;18300  1938		THEN BEGIN							! BUT IF AN
;18400  1939			FILNAMDSC[0] = .AUXFNB[NAM$B_RSL];
;18500  1940			FILNAMDSC[1] = .AUXFNB[NAM$L_RSA];
;18600  1941			LNK$ERRMSG(ERM$C_WRTERR,SEV$C_DIAG,FILNAMDSC[0],.ERRORCODE);	! ERROR, ISSUE
;18700  1942			LNK$ERRMSG(.ERRORCODE AND NOT 7,SEV$C_INFOR,
;18800  1943					.LNK$AL_IMGRAB[RAB$L_STV]);
;18900  1944			LNK$GL_CTLMSK<LNK$S_IMAGE,1,0> = FALSE;				! MESSAGE
;19000  1945			LNK$CLOSIMGFIL();
;19100  1946			RETURN FALSE;						! THEN GIVE UP
;19200  1947		     END;
;19300  1948		BYTECOUNT = .BYTECOUNT - TFRLENGTH;				! REDUCE THE BYTE COUNT
;19400  1949		LNK$AL_IMGRAB[RAB$L_RBF] = .LNK$AL_IMGRAB[RAB$L_RBF] +		! UPDATE BUFFER POINTER
;19500  1950						.LNK$AL_IMGRAB[RAB$W_RSZ];	! TO THE NEXT PIECE
;19600  1951		LNK$AL_IMGRAB[RAB$L_BKT] = 0;					! FORCE RMS TO USE NEXT BLOCK POINTER
;19700  1952	   END;									! AND GO AGAIN
;19800  1953	RETURN TRUE;
;19900  1954	END;



							    .GLOBL  SYS$WRITE

					 081C 0094C WRITESECTION:
							    .WORD   Save R2,R3,R4,R11					      ; 1922
		         5B	0000'  CF  9E 0094E 	    MOVAB   LNK$AL_IMGRAB+56, R11				      ;
		         5E	       08  C2 00953 	    SUBL2   #8, SP						      ;
	   52	  0000G  CF	       13  C1 00956 	    ADDL3   #19, LNK$GL_IMGFIL, R2				      ; 1929
	   53	    04   AC	       09  78 0095C 	    ASHL    #9, PAGES, BYTECOUNT				      ; 1931
		         6B	  08   AC  D0 00961 	    MOVL    VBN, LNK$AL_IMGRAB+56				      ; 1932
		    F0   AB	  0C   AC  D0 00965 	    MOVL    BUFFER, LNK$AL_IMGRAB+40				      ; 1933
				       53  D5 0096A 1$:     TSTL    BYTECOUNT						      ; 1934
				       6C  15 0096C 	    BLEQ    5$							      ;
		         50	       53  D0 0096E 	    MOVL    BYTECOUNT, R0					      ; 1936
	      00001400   8F	       50  D1 00971 	    CMPL    R0, #5120						      ;
				       05  15 00978 	    BLEQ    2$							      ;
		         50	1400   8F  3C 0097A 	    MOVZWL  #5120, R0						      ;
		    EA   AB	       50  B0 0097F 2$:     MOVW    R0, LNK$AL_IMGRAB+34				      ;
				  C8   AB  9F 00983 	    PUSHAB  LNK$AL_IMGRAB					      ; 1937
	      00000000G  9F	       01  FB 00986 	    CALLS   #1, @#SYS$WRITE					      ;
		         54	       50  D0 0098D 	    MOVL    R0, ERRORCODE					      ;
		         36	       54  E8 00990 	    BLBS    ERRORCODE, 4$					      ;
		         6E	  03   A2  9A 00993 	    MOVZBL  3(R2), FILNAMDSC					      ; 1939
		    04   AE	  04   A2  D0 00997 	    MOVL    4(R2), FILNAMDSC+4					      ; 1940
				       54  DD 0099C 	    PUSHL   ERRORCODE						      ; 1941
				  04   AE  9F 0099E 	    PUSHAB  FILNAMDSC						      ;
		         7E	       00  9A 009A1 	    MOVZBL  #SEV$C_DIAG, -(SP)					      ;
		         7E	  00G  8F  9A 009A4 	    MOVZBL  #ERM$C_WRTERR, -(SP)				      ;
		  0000G  CF	       04  FB 009A8 	    CALLS   #4, LNK$ERRMSG					      ;
				  D4   AB  DD 009AD 	    PUSHL   LNK$AL_IMGRAB+12					      ; 1942
		         7E	       00  9A 009B0 	    MOVZBL  #SEV$C_INFOR, -(SP)					      ;
	   7E	         54	       07  CB 009B3 	    BICL3   #7, ERRORCODE, -(SP)				      ;
		  0000G  CF	       03  FB 009B7 	    CALLS   #3, LNK$ERRMSG					      ;
	   00	  0000G  CF	       00  E5 009BC 	    BBCC    #LNK$S_IMAGE, LNK$GL_CTLMSK, 3$			      ; 1944

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 3-8
; Digital Equipment Corporation
;
		  0000V  CF	       00  FB 009C2 3$:     CALLS   #0, LNK$CLOSIMGFIL					      ; 1945
				       15  11 009C7 	    BRB     6$							      ; 1946
		         53	EC00   C3  9E 009C9 4$:     MOVAB   -5120(R3), BYTECOUNT				      ; 1948
		         50	  EA   AB  3C 009CE 	    MOVZWL  LNK$AL_IMGRAB+34, R0				      ; 1949
		    F0   AB	       50  C0 009D2 	    ADDL2   R0, LNK$AL_IMGRAB+40				      ;
				       6B  D4 009D6 	    CLRL    LNK$AL_IMGRAB+56					      ; 1951
				       90  11 009D8 	    BRB     1$							      ; 1934
		         50	       01  D0 009DA 5$:     MOVL    #1, R0						      ; 1953
					   04 009DD 	    RET     							      ;
				       50  D4 009DE 6$:     CLRL    R0							      ; 1922
					   04 009E0 	    RET     							      ;

; Routine Size:  149 bytes


;20000  1955	GLOBAL ROUTINE LNK$WRTIMGHDR : NOVALUE =
;20100  1956	BEGIN
;20200  1957	!
;20300  1958	! THIS ROUTINE IS CALLED TO WRITE THE IMAGE HEADER. IT FIRST WRITES
;20400  1959	! THE HEADER FIXED RECORD INTO THE FIRST HEADER BUFFER BLOCK THEN
;20500  1960	! OUTPUTS TO THE (OPEN) IMAGE FILE ALL BLOCKS OF THE IMAGE HEADER
;20600  1961	! FINALLY THE IMAGE FILE IS CLOSED.
;20700  1962	!
;20800  1963	GLOBAL
;20900  1964		LNK$GL_OTSEPDSC : REF BLOCK[,BYTE];			! POINTER TO DESCRIPTOR OF OTS ENTRY POINT
;21000  1965	!
;21100  1966	LOCAL
;21200  1967		CURTFR,							! ADDRESS IN HEADER FOR NEXT TRANSFER ADDRESS
;21300  1968		IHDACTIV : REF BLOCK[,BYTE];				! IMAGE ACTIVATION AREA OF HEADER
;21400  1969	!
;21500  1970	BIND	OTSENTRYSYM = CSTRING('LIB$INITIALIZE'),		! OTS ENTRY POINT NAME
;21600  1971		IMAGEHEADER = HEADERDESC[0] : REF BLOCK[,BYTE],		! POINT TO THE BUFFER
;21700  1972		IMGIDAREA = IHDACTIV : REF BLOCK[,BYTE],		! USE SAME CELL TO POINT TO ID AREA
;21800  1973		SYMDBGDATA = IHDACTIV : REF BLOCK[,BYTE];		! AND FOR SYMBOL TABLE AND DEBUG DATA
;21900  1974	!
;22000  1975	IF .LNK$GL_CTLMSK<LNK$S_SYS,1,0>				! IF A SYSTEM IMAGE
;22100  1976	OR .LNK$GW_HDRBLKS EQL 0					! OR THERE IS NO HEADER
;22200  1977	THEN BEGIN
;22300  1978		LNK$CLOSIMGFIL();					! CLOSE THE IMAGE FILE
;22400  1979		RETURN;							! AND THAT'S ALL
;22500  1980	     END;
;22600  1981	IMAGEHEADER[IHD$B_HDRBLKCNT] = .LNK$GW_HDRBLKS;			! INSERT NUMBER OF BLOCKS OF HEADER IN HEADER
;22700  1982	IMAGEHEADER[IHD$W_SIZE] = IHD$K_MAXLENGTH;			! SIZE OF HEADER
;22800  1983	IMAGEHEADER[IHD$W_ACTIVOFF] = IHD$K_ACTIVOFF;			! OFFSET TO ACTIVATION CONTROL
;22900  1984	IMAGEHEADER[IHD$W_SYMDBGOFF] = IHD$K_SYMDBGOFF;			! SYMBOL AND DEBUG DATA
;23000  1985	IMAGEHEADER[IHD$W_IMGIDOFF] = IHD$K_IMGIDOFF;			! THE IDENTIFICATION AREA
;23100  1986	IF .LNK$GL_CTLMSK<LNK$S_EXE,1,0>				! SET THE IMAGE TYPE
;23200  1987	THEN IMAGEHEADER[IHD$B_IMGTYPE] = IHD$K_EXE			! TO EXECUTABLE
;23300  1988	ELSE IF .LNK$GL_CTLMSK<LNK$S_SHR,1,0>				! OR
;23400  1989		THEN IMAGEHEADER[IHD$B_IMGTYPE] = IHD$K_SHR;		! TO SHAREABLE
;23500  1990	IMAGEHEADER[IHD$W_IOCHANCNT] = .LNK$GW_CHANS;			! SET NUMBER OF CHANNELS
;23600  1991	IMAGEHEADER[IHD$W_IMGIOCNT] = .LNK$GW_IOSEG;			! AND SIZE OF I/O SEGMENT
;23700  1992	IMAGEHEADER[IHD$V_LNKDEBUG] = .LNK$GL_CTLMSK<LNK$S_DBG,1,0>;	! AND THE STATE OF DEBUG FLAG
;23800  1993	IMAGEHEADER[IHD$V_PICIMG] = .LNK$GL_CTLMSK<LNK$S_PICIMG,1,0>;	! EXTRACT POSITION DEPENDENCE FLAG
;23900  1994	IMAGEHEADER[IHD$V_NOP0BUFS] = .LNK$GL_CTLMSK<LNK$S_NOP0BUFS,1,0>; ! AND STATE OF RMS P0 BUFFER INDICATOR

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 3-9
; Digital Equipment Corporation
;
;24000  1995	IMAGEHEADER[IHD$V_MATCHCTL] = .LNK$GB_MATCHCTL;			! MATCH CONTROL FLAGS
;24100  1996	IMAGEHEADER[IHD$L_IDENT] = .LNK$GL_MATCHID;			! AND THE ASSOCIATED IDENT
;24200  1997	IHDACTIV = .IMAGEHEADER + .IMAGEHEADER[IHD$W_ACTIVOFF];		! POINT TO ACTIVATION AREA
;24300  1998	CURTFR = IHDACTIV[IHA$L_TFRADR1];				! START AT FIRST TRANSFER ADDRESS
;24400  1999	IF .LNK$GL_DBGTFPS NEQ 0					!  IF A
;24500  2000	THEN BEGIN							! DEBUGGER TRANSFER
;24600  2001		.CURTFR = .LNK$GL_DBGTFR;				! ADDRESS WAS FOUND
;24700  2002		CURTFR = IHDACTIV[IHA$L_TFRADR2];			! THEN IT IS FIRST AND UPDATE TO NEXT
;24800  2003	     END
;24900  2004	ELSE IF .LNK$GL_CTLMSK<LNK$S_DBG,1,0>				! NO DEBUGGER TRANSFER ADDRESS SO
;25000  2005	THEN LNK$ERRMSG(ERM$C_DBGTFR,SEV$C_DIAG,			! CHECK IF DEBUG WAS REQUESTED
;25100  2006			LNK$GL_IMGFIL[FDB$Q_USRNAMDSC]);		! AND ISSUE ERROR IF SO
;25200  2007	IF NOT .LNK$GL_CTLMSK<LNK$S_SYS,1,0>				! FOR A NON SYSTEM IMAGE
;25300  2008	THEN IF LNK$SEARCH(OTSENTRYSYM,LNK$GL_OTSEPDSC)			! IF THE RESERVED ENTRY POINT NAME FOR
;25400  2009	     THEN BEGIN							! THE OTS HAS BEEN DEFINED
;25500  2010		.CURTFR = .LNK$GL_OTSEPDSC[SYM$L_VALUE];		! THEN NEXT TRANSFER IS TO THE OTS
;25600  2011		IF .CURTFR EQL IHDACTIV[IHA$L_TFRADR2]			! AND UPDATE THE POINTER FOR THE
;25700  2012		THEN CURTFR = IHDACTIV[IHA$L_TFRADR3]			! USER TRANSFER ADDRESS TO BE THE SECOND
;25800  2013		ELSE CURTFR = IHDACTIV[IHA$L_TFRADR2];			! OR THIRD DEPENDING ON PRESENCE OF DEBUGGER
;25900  2014	     END;							! BEFORE THE OTS
;26000  2015	IF .LNK$GL_TFRPSC NEQ 0						! FINALLY IF THE USER HAD A
;26100  2016	THEN BEGIN							! A TRANSFER ADDRESS
;26200  2017		IF NOT .LNK$GL_CTLMSK<LNK$S_SYS,1,0>			! CHECK IF EXECUTABLE
;26300  2018		THEN .CURTFR = .LNK$GL_TFRADR				! AND IF SO INSERT IT LAST
;26400  2019		ELSE LNK$ERRMSG(ERM$C_TFRSYS,SEV$C_INFOR,		! REPORT IGNORED TRANSFER ADDRESS
;26500  2020				LNK$GL_IMGFIL[FDB$Q_USRNAMDSC]);	! IN OTHER KINDS OF IMAGE
;26600  2021	     END
;26700  2022	ELSE IF .LNK$GL_CTLMSK<LNK$S_EXE,1,0>				! IF IT IS AN EXECUTABLE
;26800  2023	THEN LNK$ERRMSG(ERM$C_USRTFR,SEV$C_DIAG,			! IMAGE REPORT THE ERROR
;26900  2024			LNK$GL_IMGFIL[FDB$Q_USRNAMDSC]);		! WHEN TRANSFER ADDRESS IS MISSING
;27000  2025	SYMDBGDATA = .IMAGEHEADER + .IMAGEHEADER[IHD$W_SYMDBGOFF];	! POINT TO STB AND DBG DATA AREA
;27100  2026	IF (SYMDBGDATA[IHS$W_DSTBLKS] = .LNK$GW_DSTBLKS) NEQ 0		! IF A DST WAS WRITTEN
;27200  2027	THEN SYMDBGDATA[IHS$L_DSTVBN] = .LNK$GW_DSTVBN;			! SET BLOCK COUNT AND ITS VBN
;27300  2028	IF (SYMDBGDATA[IHS$W_GSTRECS] = .LNK$GW_GSTRECS) NEQ 0		! IF A GST WAS WRITTEN
;27400  2029	THEN SYMDBGDATA[IHS$L_GSTVBN] = .LNK$GW_GSTVBN;			! THEN SET RECORD COUNT AND VBN IN HEADER
;27500  2030	!
;27600  2031	! THE MAJOR AND MINOR IDENTS OF THE HEADER RECORD ARE USED
;27700  2032	! BY IMAGE ACTIVATOR AS FOLLOWS:-
;27800  2033	!			MAJOR ID - MATCH REQUIRED ALWAYS
;27900  2034	!			MINOR ID - MORE RECENT (GREATER THAN
;28000  2035	!			OR EQUAL) THAN IMAGE ACTIVATOR'S
;28100  2036	!			VERSION ARE PERMITTED.
;28200  2037	!
;28300  2038	IMAGEHEADER[IHD$W_MAJORID] = IHD$K_MAJORID;				! MAJOR IDENT
;28400  2039	IMAGEHEADER[IHD$W_MINORID] = IHD$K_MINORID;				! MINOR IDENT
;28500  2040	IMGIDAREA = .IMAGEHEADER + .IMAGEHEADER[IHD$W_IMGIDOFF];		! POINT TO IMAGE ID AREA
;28600  2041	CH$MOVE(.LNK$GT_IMGNAM[0]+1,LNK$GT_IMGNAM[0],IMGIDAREA[IHI$T_IMGNAM]);	! MOVE IN THE IMAGE NAME
;28700  2042	CH$MOVE(.LNK$GT_IMGID[0]+1,LNK$GT_IMGID[0],IMGIDAREA[IHI$T_IMGID]);	! MOVE IN THE IMAGE IDENTIFICATION
;28800  2043	(IMGIDAREA[IHI$Q_LINKTIME])<0,32,0> = .LNK$GQ_ALOSTIM[0];		! THE TIME OF LINK IS THAT AT WHICH
;28900  2044	IMGIDAREA[IHI$Q_LINKTIME] + 4 = .LNK$GQ_ALOSTIM[1];			! MEMORY ALLOCATION BEGAN
;29000  2045	(IMGIDAREA[IHI$T_LINKID])<0,8,0> = LID$C_SIZE + 1;			! INSERT THE LENGTH OF LINKER ID
;29100  2046	IMGIDAREA[IHI$T_LINKID] + 1 = .LNK$AW_VERSION[LID$W_MAJOR];		! FOLLOWED BY THE MAJOR ID
;29200  2047	IMGIDAREA[IHI$T_LINKID] + 3 = %C'.';					! SEPARETED BY A DOT
;29300  2048	IMGIDAREA[IHI$T_LINKID] + 4 = .LNK$AW_VERSION[LID$W_MINOR];		! FROM THE MINOR ID
;29400  2049	!

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 3-10
; Digital Equipment Corporation
;
;29500  2050	! FINALLY WRITE OUT THE WHOLE HEADER.
;29600  2051	!
;29700  2052	IF WRITESECTION(.LNK$GW_HDRBLKS,1,.HEADERDESC[0])		! IF SUCCESSFULLY WRITTEN TO VBN 1
;29800  2053	THEN LNK$CLOSIMGFIL();						! CLOSE THE FILE
;29900  2054	RETURN;
;30000  2055	END;



							    .PSECT  $PLIT$,NOWRT,NOEXE,2

					      0009C P.AAG:  .BYTE   14							      ;
					      0009D 	    .ASCII  \LIB$INITIALIZE\					      ;
					      000AB	    .BLKB   1

							    .PSECT  $GLOBAL$,NOEXE,2

					      0006D	    .BLKB   3
					      00070 LNK$GL_OTSEPDSC::
							    .BLKB   4

						    OTSENTRYSYM=	P.AAG
						    IMAGEHEADER=	HEADERDESC


							    .PSECT  $CODE$,NOWRT,2

					 0FFC 009E1 	    .ENTRY  LNK$WRTIMGHDR, Save R2,R3,R4,R5,R6,R7,R8,R9,R10,R11       ; 1955
		         58	       00  D0 009E3 	    MOVL    #LNK$S_EXE, R8					      ;
		         59	       00  D0 009E6 	    MOVL    #LNK$S_SYS, R9					      ;
		         5A	0000'  CF  9E 009E9 	    MOVAB   LNK$GW_HDRBLKS, R10					      ;
		         5B	0000G  CF  9E 009EE 	    MOVAB   LNK$GL_CTLMSK, R11					      ;
	   03	         6B	       59  E1 009F3 	    BBC     R9, LNK$GL_CTLMSK, 2$				      ; 1975
				     0186  31 009F7 1$:     BRW     15$							      ;
				       6A  B5 009FA 2$:     TSTW    LNK$GW_HDRBLKS					      ; 1976
				       F9  13 009FC 	    BEQL    1$							      ;
		         50	0000'  CF  D0 009FE 	    MOVL    IMAGEHEADER, R0					      ; 1981
		    10   A0	       6A  90 00A03 	    MOVB    LNK$GW_HDRBLKS, 16(R0)				      ;
		         60	  7C   8F  9B 00A07 	    MOVZBW  #124, (R0)						      ; 1982
		    02   A0 00380028   8F  D0 00A0B 	    MOVL    #3670056, 2(R0)					      ; 1983
		    06   A0	  44   8F  9B 00A13 	    MOVZBW  #68, 6(R0)						      ; 1985
	   06	         6B	       58  E1 00A18 	    BBC     R8, LNK$GL_CTLMSK, 3$				      ; 1986
		    11   A0	       01  90 00A1C 	    MOVB    #1, 17(R0)						      ; 1987
				       08  11 00A20 	    BRB     4$							      ; 1986
	   04	         6B	       02  E1 00A22 3$:     BBC     #2, LNK$GL_CTLMSK, 4$				      ; 1988
		    11   A0	       02  90 00A26 	    MOVB    #2, 17(R0)						      ; 1989
		    1C   A0	0000G  CF  B0 00A2A 4$:     MOVW    LNK$GW_CHANS, 28(R0)				      ; 1990
		    1E   A0	0000G  CF  B0 00A30 	    MOVW    LNK$GW_IOSEG, 30(R0)				      ; 1991
	   6B	         01	       00  EF 00A36 	    EXTZV   #LNK$S_DBG, #1, LNK$GL_CTLMSK, R1			      ; 1992
				       51     00A3A									      ;
	   01	         00	       51  F0 00A3B 	    INSV    R1, #0, #1, 32(R0)					      ;
				  20   A0     00A3F									      ;
	   6B	         01	       00  EF 00A41 	    EXTZV   #LNK$S_PICIMG, #1, LNK$GL_CTLMSK, R1		      ; 1993
				       51     00A45									      ;
	   01	         03	       51  F0 00A46 	    INSV    R1, #3, #1, 32(R0)					      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 3-11
; Digital Equipment Corporation
;
				  20   A0     00A4A									      ;
	   6B	         01	       00  EF 00A4C 	    EXTZV   #LNK$S_NOP0BUFS, #1, LNK$GL_CTLMSK, R1		      ; 1994
				       51     00A50									      ;
	   01	         02	       51  F0 00A51 	    INSV    R1, #2, #1, 32(R0)					      ;
				  20   A0     00A55									      ;
	   03	         00	  0E   AA  F0 00A57 	    INSV    LNK$GB_MATCHCTL, #0, #3, 35(R0)			      ; 1995
				  23   A0     00A5C									      ;
		    24   A0	  0A   AA  D0 00A5E 	    MOVL    LNK$GL_MATCHID, 36(R0)				      ; 1996
		         57	  02   A0  3C 00A63 	    MOVZWL  2(R0), IHDACTIV					      ; 1997
		         57	       50  C0 00A67 	    ADDL2   R0, IHDACTIV					      ;
		         52	       57  D0 00A6A 	    MOVL    IHDACTIV, CURTFR					      ; 1998
				0000G  CF  D5 00A6D 	    TSTL    LNK$GL_DBGTFPS					      ; 1999
				       0B  13 00A71 	    BEQL    5$							      ;
		         62	0000G  CF  D0 00A73 	    MOVL    LNK$GL_DBGTFR, (CURTFR)				      ; 2001
	   52	         57	       04  C1 00A78 	    ADDL3   #4, IHDACTIV, CURTFR				      ; 2002
				       16  11 00A7C 	    BRB     6$							      ; 1999
	   12	         6B	       00  E1 00A7E 5$:     BBC     #LNK$S_DBG, LNK$GL_CTLMSK, 6$			      ; 2004
	   7E	  0000G  CF	       0B  C1 00A82 	    ADDL3   #11, LNK$GL_IMGFIL, -(SP)				      ; 2006
		         7E	       00  9A 00A88 	    MOVZBL  #SEV$C_DIAG, -(SP)					      ; 2005
		         7E	  00G  8F  9A 00A8B 	    MOVZBL  #ERM$C_DBGTFR, -(SP)				      ;
		  0000G  CF	       03  FB 00A8F 	    CALLS   #3, LNK$ERRMSG					      ;
	   25	         6B	       59  E0 00A94 6$:     BBS     R9, LNK$GL_CTLMSK, 8$				      ; 2007
				  12   AA  9F 00A98 	    PUSHAB  LNK$GL_OTSEPDSC					      ; 2008
				0000'  CF  9F 00A9B 	    PUSHAB  OTSENTRYSYM						      ; 1955
		  0000G  CF	       02  FB 00A9F 	    CALLS   #2, LNK$SEARCH					      ; 2008
		         16	       50  E9 00AA4 	    BLBC    R0, 8$						      ;
		         62	  12   BA  D0 00AA7 	    MOVL    @LNK$GL_OTSEPDSC, (CURTFR)				      ; 2010
	   50	         57	       04  C1 00AAB 	    ADDL3   #4, IHDACTIV, R0					      ; 2011
		         50	       52  D1 00AAF 	    CMPL    CURTFR, R0						      ;
				       06  12 00AB2 	    BNEQ    7$							      ;
	   52	         57	       08  C1 00AB4 	    ADDL3   #8, IHDACTIV, CURTFR				      ; 2012
				       03  11 00AB8 	    BRB     8$							      ; 2011
		         52	       50  D0 00ABA 7$:     MOVL    R0, CURTFR						      ; 2013
				0000G  CF  D5 00ABD 8$:     TSTL    LNK$GL_TFRPSC					      ; 2015
				       1A  13 00AC1 	    BEQL    10$							      ;
	   07	         6B	       59  E0 00AC3 	    BBS     R9, LNK$GL_CTLMSK, 9$				      ; 2017
		         62	0000G  CF  D0 00AC7 	    MOVL    LNK$GL_TFRADR, (CURTFR)				      ; 2018
				       25  11 00ACC 	    BRB     12$							      ; 2017
	   7E	  0000G  CF	       0B  C1 00ACE 9$:     ADDL3   #11, LNK$GL_IMGFIL, -(SP)				      ; 2020
		         7E	       00  9A 00AD4 	    MOVZBL  #SEV$C_INFOR, -(SP)					      ; 2019
		         7E	  00G  8F  9A 00AD7 	    MOVZBL  #ERM$C_TFRSYS, -(SP)				      ;
				       11  11 00ADB 	    BRB     11$							      ;
	   12	         6B	       58  E1 00ADD 10$:    BBC     R8, LNK$GL_CTLMSK, 12$				      ; 2022
	   7E	  0000G  CF	       0B  C1 00AE1 	    ADDL3   #11, LNK$GL_IMGFIL, -(SP)				      ; 2024
		         7E	       00  9A 00AE7 	    MOVZBL  #SEV$C_DIAG, -(SP)					      ; 2023
		         7E	  00G  8F  9A 00AEA 	    MOVZBL  #ERM$C_USRTFR, -(SP)				      ;
		  0000G  CF	       03  FB 00AEE 11$:    CALLS   #3, LNK$ERRMSG					      ;
		         56	0000'  CF  D0 00AF3 12$:    MOVL    IMAGEHEADER, R6					      ; 2025
		         57	  04   A6  3C 00AF8 	    MOVZWL  4(R6), SYMDBGDATA					      ;
		         57	       56  C0 00AFC 	    ADDL2   R6, SYMDBGDATA					      ;
		         50	  06   AA  3C 00AFF 	    MOVZWL  LNK$GW_DSTBLKS, R0					      ; 2026
		    08   A7	       50  B0 00B03 	    MOVW    R0, 8(SYMDBGDATA)					      ;
				       50  D5 00B07 	    TSTL    R0							      ;
				       04  13 00B09 	    BEQL    13$							      ;
		         67	  FE   AA  3C 00B0B 	    MOVZWL  LNK$GW_DSTVBN, (SYMDBGDATA)				      ; 2027

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 3-12
; Digital Equipment Corporation
;
		         50	0000G  CF  3C 00B0F 13$:    MOVZWL  LNK$GW_GSTRECS, R0					      ; 2028
		    0A   A7	       50  B0 00B14 	    MOVW    R0, 10(SYMDBGDATA)					      ;
				       50  D5 00B18 	    TSTL    R0							      ;
				       05  13 00B1A 	    BEQL    14$							      ;
		    04   A7	  08   AA  3C 00B1C 	    MOVZWL  LNK$GW_GSTVBN, 4(SYMDBGDATA)			      ; 2029
		    0C   A6 31303230   8F  D0 00B21 14$:    MOVL    #825242160, 12(R6)					      ; 2038
		         57	  06   A6  3C 00B29 	    MOVZWL  6(R6), IMGIDAREA					      ; 2040
		         57	       56  C0 00B2D 	    ADDL2   R6, IMGIDAREA					      ;
		         50	0000G  CF  9A 00B30 	    MOVZBL  LNK$GT_IMGNAM, R0					      ; 2041
				       50  D6 00B35 	    INCL    R0							      ;
	   67	  0000G  CF	       50  28 00B37 	    MOVC3   R0, LNK$GT_IMGNAM, (IMGIDAREA)			      ;
		         50	0000G  CF  9A 00B3D 	    MOVZBL  LNK$GT_IMGID, R0					      ; 2042
				       50  D6 00B42 	    INCL    R0							      ;
      10   A7	  0000G  CF	       50  28 00B44 	    MOVC3   R0, LNK$GT_IMGID, 16(IMGIDAREA)			      ;
		         50	  20   A7  9E 00B4B 	    MOVAB   32(IMGIDAREA), R0					      ; 2043
		         60	0000G  CF  D0 00B4F 	    MOVL    LNK$GQ_ALOSTIM, (R0)				      ;
		    04   A0	0000G  CF  D0 00B54 	    MOVL    LNK$GQ_ALOSTIM+4, 4(R0)				      ; 2044
		         50	  28   A7  9E 00B5A 	    MOVAB   40(IMGIDAREA), R0					      ; 2045
		         60	       05  90 00B5E 	    MOVB    #5, (R0)						      ;
		    01   A0	0000G  CF  3C 00B61 	    MOVZWL  LNK$AW_VERSION, 1(R0)				      ; 2046
		    03   A0	       2E  D0 00B67 	    MOVL    #46, 3(R0)						      ; 2047
		    04   A0	0000G  CF  3C 00B6B 	    MOVZWL  LNK$AW_VERSION+2, 4(R0)				      ; 2048
				       56  DD 00B71 	    PUSHL   R6							      ; 2052
				       01  DD 00B73 	    PUSHL   #1							      ;
		         7E	       6A  3C 00B75 	    MOVZWL  LNK$GW_HDRBLKS, -(SP)				      ;
		  FDCF   CF	       03  FB 00B78 	    CALLS   #3, WRITESECTION					      ;
		         05	       50  E9 00B7D 	    BLBC    R0, 16$						      ;
		  0000V  CF	       00  FB 00B80 15$:    CALLS   #0, LNK$CLOSIMGFIL					      ; 2053
					   04 00B85 16$:    RET     							      ; 1955

; Routine Size:  421 bytes


;30100  2056	GLOBAL ROUTINE LNK$CLOSIMGFIL : NOVALUE =
;30200  2057	BEGIN
;30300  2058	!
;30400  2059	!	ROUTINE TO CLOSE THE IMAGE FILE
;30500  2060	!
;30600  2061	LOCAL	ERRORCODE,
;30700  2062		IMAGEFAB : BLOCK[FAB$C_BLN,BYTE];
;30800  2063	!
;30900  2064	BIND AUXFNB = LNK$GL_IMGFIL[FDB$AL_AUXFNB] : BLOCK[NAM$C_BLN,BYTE];	! AUXILIARY FILENAME BLOCK
;31000  2065	!
;31100  2066	IF .LNK$GW_IMGIFI EQL 0 THEN RETURN;			! IF NO IMAGE RETURN NOW
;31200  2067	CH$FILL(0,FAB$C_BLN,IMAGEFAB);				! SUCCESSFULLY WRITTEN IMAGE
;31300  2068	IMAGEFAB[FAB$B_BLN] = FAB$C_BLN;			! SO SET UP A FAB TO
;31400  2069	IMAGEFAB[FAB$B_BID] = FAB$C_BID;			! USE IN CLOSING IT
;31500  2070	IMAGEFAB[FAB$W_IFI] = .LNK$GW_IMGIFI;			! BY JAMMING THE SAVED IFI
;31600  2071	IF NOT(ERRORCODE = $CLOSE(FAB=IMAGEFAB))		! DO IT AND IF AN ERROR
;31700  2072	THEN BEGIN
;31800  2073		LNK$ERRMSG(ERM$C_CLOSERR,SEV$C_DIAG,		! REPORT IT
;31900  2074			.AUXFNB[NAM$B_RSL],.AUXFNB[NAM$L_RSA],
;32000  2075			.ERRORCODE);				!
;32100  2076		LNK$ERRMSG(.ERRORCODE AND NOT 7,SEV$C_INFOR,
;32200  2077			.IMAGEFAB[FAB$L_STV]);

; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 3-13
; Digital Equipment Corporation
;
;32300  2078	     END;
;32400  2079	LNK$GW_IMGIFI = 0;					! CLEAR THE ID
;32500  2080	RETURN TRUE;						! AND ALL DONE
;32600  2081	END;





					 087C 00B86 	    .ENTRY  LNK$CLOSIMGFIL, Save R2,R3,R4,R5,R6,R11		      ; 2056
		         5B	0000'  CF  9E 00B88 	    MOVAB   LNK$GW_IMGIFI, R11					      ;
		         5E	  B0   AE  9E 00B8D 	    MOVAB   -80(SP), SP						      ;
	   56	  0000G  CF	       13  C1 00B91 	    ADDL3   #19, LNK$GL_IMGFIL, R6				      ; 2064
				       6B  B5 00B97 	    TSTW    LNK$GW_IMGIFI					      ; 2066
				       46  13 00B99 	    BEQL    2$							      ;
	   00	         6E	       00  2C 00B9B 	    MOVC5   #0, (SP), #0, #80, IMAGEFAB				      ; 2067
		         6E	0050   8F     00B9F									      ;
		         6E	5003   8F  B0 00BA3 	    MOVW    #20483, IMAGEFAB					      ; 2069
		    02   AE	       6B  B0 00BA8 	    MOVW    LNK$GW_IMGIFI, IMAGEFAB+2				      ; 2070
				       5E  DD 00BAC 	    PUSHL   SP							      ; 2071
	      00000000G  9F	       01  FB 00BAE 	    CALLS   #1, @#SYS$CLOSE					      ;
		         52	       50  D0 00BB5 	    MOVL    R0, ERRORCODE					      ;
		         24	       52  E8 00BB8 	    BLBS    ERRORCODE, 1$					      ;
				       52  DD 00BBB 	    PUSHL   ERRORCODE						      ; 2073
				  04   A6  DD 00BBD 	    PUSHL   4(R6)						      ;
		         7E	  03   A6  9A 00BC0 	    MOVZBL  3(R6), -(SP)					      ;
		         7E	       00  9A 00BC4 	    MOVZBL  #SEV$C_DIAG, -(SP)					      ;
		         7E	  00G  8F  9A 00BC7 	    MOVZBL  #ERM$C_CLOSERR, -(SP)				      ;
		  0000G  CF	       05  FB 00BCB 	    CALLS   #5, LNK$ERRMSG					      ;
				  0C   AE  DD 00BD0 	    PUSHL   IMAGEFAB+12						      ; 2076
		         7E	       00  9A 00BD3 	    MOVZBL  #SEV$C_INFOR, -(SP)					      ;
	   7E	         52	       07  CB 00BD6 	    BICL3   #7, ERRORCODE, -(SP)				      ;
		  0000G  CF	       03  FB 00BDA 	    CALLS   #3, LNK$ERRMSG					      ;
				       6B  B4 00BDF 1$:     CLRW    LNK$GW_IMGIFI					      ; 2079
					   04 00BE1 2$:     RET     							      ; 2056

; Routine Size:  92 bytes


;32700  2082	END ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $GLOBAL$       	   116    WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $OWN$          	    36    WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $CODE$         	  3042  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $PLIT$         	   172  NOWRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)


; Bliss-32 7.352	Saturday 22-AUG-1978 04:45:06	DBB3:[LINKER.SRC]LNKIMGOUT.B32;15				Page 3-14
; Digital Equipment Corporation
;



;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]LIB.L32;1		      5582       107         1       271





; Size:		3042 code + 324 data bytes
; Run Time:	02:31.2
; Elapsed Time:	02:37.3
; Memory Used:	737 pages
; Compilation Complete
