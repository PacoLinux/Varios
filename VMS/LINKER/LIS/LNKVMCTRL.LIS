
; Bliss-32 7.352	Saturday 22-AUG-1978 05:05:02	DBB3:[LINKER.SRC]LNKVMCTRL.B32;2				Page 1
; Digital Equipment Corporation
;
;00100  0001	MODULE LNK_VMCTRL (	! CONTROL FOR ALLOCATION OF VIRTUAL MEMORY
;00200  0002			IDENT = 'X01.00'
;00300  0003			) =
;00400  0004	BEGIN
;00500  0005	!
;00600  0006	! COPYRIGHT (C) 1978
;00700  0007	! DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
;00800  0008	!
;00900  0009	! THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
;01000  0010	! COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
;01100  0011	! ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
;01200  0012	! MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
;01300  0013	! EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
;01400  0014	! TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
;01500  0015	! REMAIN IN DEC.
;01600  0016	!
;01700  0017	! THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
;01800  0018	! AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
;01900  0019	! CORPORATION.
;02000  0020	!
;02100  0021	! DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
;02200  0022	! SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
;02300  0023	!
;02400  0024	!++
;02500  0025	! FACILITY:	LINKER
;02600  0026	!
;02700  0027	! ABSTRACT:	THIS MODULE CONTAINS THE ROUTINES TO ALLOCATE VIRTUAL MEMORY
;02800  0028	!			AT END OF PASS 1.
;02900  0029	!
;03000  0030	!
;03100  0031	! ENVIRONMENT:	VMS NATIVE MODE
;03200  0032	!
;03300  0033	! AUTHOR:	T.J. PORTER, CREATION DATE: 15-JUN-78
;03400  0034	!
;03500  0035	! MODIFICATIONS:
;03600  0036	! NO.	DATE		PROGRAMMER	PURPOSE
;03700  0037	! ---	----		----------	-------

; Bliss-32 7.352	Saturday 22-AUG-1978 05:05:02	DBB3:[LINKER.SRC]LNKVMCTRL.B32;2				Page 2
; Digital Equipment Corporation
;
;00100  0038	!
;00200  0039	!++
;00300  0040	!	FUNCTIONAL DESCRIPTION
;00400  0041	!
;00410  0042	LIBRARY
;00420  0043		'SYS$LIBRARY:STARLET.L32';
;00500  0044	REQUIRE
;00600  0045		'PREFIX';
;00700  0237	REQUIRE
;00800  0238		'DATBAS';
;00900  0470	!
;00902  0471	EXTERNAL ROUTINE
;00904  0472		LNK$ALLOBLK : NOVALUE,			! ALLOCATE DYNAMIC MEMORY
;00906  0473		LNK$DEALBLK : NOVALUE;			! DEALLOCATE DYNAMIC MEMORY
;00908  0474	!
;00910  0475	EXTERNAL
;00912  0476		LNK$GL_FVMLST;				! LISTHEAD OF FREE VIR MEM DESCRIPTORS
;00914  0477	!
;00924  0478	GLOBAL
;00934  0479		LNK$GL_MINVA : INITIAL(MAX_ADDRESS),	! LOWEST ADDRESS ALLOCATED
;00944  0480		LNK$GL_MAXVA : INITIAL(0);		! HIGHEST ADDRESS ALLOCATED
;01000  0481	GLOBAL ROUTINE LNK$ALLOVIRMEM(ADDRESS,PAGES) = 
;01100  0482	BEGIN
;01200  0483	!
;01300  0484	!++
;01400  0485	!	THIS ROUTINE IS CALLED TO ATTEMPT ALLOCATION OF A SPECIFIC
;01500  0486	!	PIECE OF VIRTUAL MEMORY. THE ADDRESS AND PAGE COUNT REQUIRED
;01600  0487	!	ARE THE INPUT ARGUMENTS. THE ROUTINE RETURNS TRUE OR FALSE
;01700  0488	!	DEPENDING ON WHETHER THE SPECIFIED MEMORY IS AVAILABLE OR
;01800  0489	!	ALREADY ALLOCATED.
;01900  0490	!	
;02000  0491	!	THE AVALIABLE VIRTUAL MEMORY IS CONTROLLED BY A SINGLY LINKED
;02100  0492	!	LIST OF BLOCKS WITH FORMAT:
;02200  0493	!			-------------------
;02300  0494	!			! NEXT DESCRIPTOR !
;02400  0495	!			-------------------
;02500  0496	!			!  FREE  ADDRESS  !
;02600  0497	!			------------------
;02700  0498	!			!  # FREE  BYTES  !
;02800  0499	!			-------------------
;02900  0500	!--
;03000  0501	!
;03100  0502	LOCAL
;03200  0503		BYTES,						! BYTE COUNT REQUESTED
;03300  0504		FREBLK : REF BLOCK[,BYTE],			! FREE BLOCK POINTER
;03400  0505		PREVBLK : REF BLOCK[,BYTE];			! PREVIOUS FREE BLOCK IN LIST
;03500  0506	!
;03600  0507	IF (BYTES = .PAGES * 512) EQL 0				! IF ZERO SIZE
;03700  0508	THEN RETURN TRUE;					! RETURN SUCCESS
;03800  0509	!
;03900  0510	PREVBLK = LNK$GL_FVMLST;				! SET AT LISTHEAD
;04000  0511	WHILE (FREBLK = .PREVBLK[FVM$L_NXTFVM]) NEQ 0		! MOVE TO NEXT BLOCK DESCRIPTOR IN LIST
;04100  0512	DO IF .ADDRESS LSSU .FREBLK[FVM$L_ADDRESS]		! LOOP TILL WE GET TO ONE FOR REQUESTED MEMORY
;04150  0513	   OR .ADDRESS GEQU (.FREBLK[FVM$L_ADDRESS] + .FREBLK[FVM$L_BYTES])
;04200  0514	   THEN PREVBLK = .FREBLK				! ...

; Bliss-32 7.352	Saturday 22-AUG-1978 05:05:02	DBB3:[LINKER.SRC]LNKVMCTRL.B32;2				Page 2-1
; Digital Equipment Corporation
;
;04300  0515	   ELSE BEGIN
;04400  0516		IF (.ADDRESS + .BYTES) GTRU (.FREBLK[FVM$L_ADDRESS] +	! DOES DESIRED BLOCK FIT
;04500  0517					.FREBLK[FVM$L_BYTES])		! IN THE HOLE
;04600  0518		THEN EXITLOOP;						! QUIT IF NOT
;04700  0519		IF .ADDRESS EQL .FREBLK[FVM$L_ADDRESS]			! IF AT FRONT OF HOLE
;04800  0520		THEN IF (FREBLK[FVM$L_BYTES] = .FREBLK[FVM$L_BYTES] -	! REDUCE THE SIZE OF REMAINDER
;04900  0521				.BYTES) EQL 0				! AND IF GOING TO ZERO
;05000  0522			THEN BEGIN
;05100  0523				PREVBLK[FVM$L_NXTFVM] = .FREBLK[FVM$L_NXTFVM];	! TAKE DESCRIPTOR OFF LIST
;05200  0524				LNK$DEALBLK(FVM$C_SIZE,.FREBLK);		! AND DEALLOCATE IT
;05300  0525			     END
;05400  0526			ELSE FREBLK[FVM$L_ADDRESS] = .FREBLK[FVM$L_ADDRESS] + .BYTES	! SET ADDRESS OF REMAINDER
;05500  0527		ELSE BEGIN								! NOT AT THE FRONT
;05600  0528			IF (.FREBLK[FVM$L_ADDRESS] + .FREBLK[FVM$L_BYTES]) EQL	! CHECK IF IT IS ON END
;05700  0529				(.ADDRESS + .BYTES)				! OF THE BLOCK
;05800  0530			THEN FREBLK[FVM$L_BYTES] = .FREBLK[FVM$L_BYTES] - .BYTES! IF SO JUST REDUCE SIZE
;05900  0531			ELSE BEGIN
;06000  0532				LOCAL NXTBLK : REF BLOCK[,BYTE];		! OTHERWISE NEED TO SPLIT THE BLOCK
;06100  0533				LNK$ALLOBLK(FVM$C_SIZE,NXTBLK);			! ALLOCATE ANOTHER DESCRIPTOR
;06200  0534				NXTBLK[FVM$L_NXTFVM] = .FREBLK[FVM$L_NXTFVM];	! WHICH POINTS ONWARD
;06300  0535				FREBLK[FVM$L_NXTFVM] = .NXTBLK;			! AND PONTED TO BY CURRENT
;06400  0536				NXTBLK[FVM$L_ADDRESS] = .ADDRESS + .BYTES;	! DESCRIBES THE REMNANT AT END
;06500  0537				NXTBLK[FVM$L_BYTES] = .FREBLK[FVM$L_BYTES] -	! 
;06600  0538						(.NXTBLK[FVM$L_ADDRESS] -
;06700  0539						.FREBLK[FVM$L_ADDRESS]);
;06800  0540				FREBLK[FVM$L_BYTES] = .ADDRESS - .FREBLK[FVM$L_ADDRESS];	! AND SET CURRENT FREE SIZE
;06900  0541			     END;
;07000  0542		     END;
;07010  0543		IF (.ADDRESS + .BYTES -1) GTRU .LNK$GL_MAXVA		! MAXIMIZE THE ADDRESS
;07020  0544		THEN LNK$GL_MAXVA = .ADDRESS + .BYTES - 1;		! SPACE ALLOCATED
;07030  0545		IF .ADDRESS LSSU .LNK$GL_MINVA				! AND RESET MINIMUM IF NEXESSARY
;07040  0546		THEN LNK$GL_MINVA = .ADDRESS;
;07100  0547		RETURN TRUE;
;07200  0548		END;
;07300  0549	RETURN FALSE;
;07400  0550	END;			! OF LNK$ALLOVIRMEM


							    .TITLE  LNK_VMCTRL
							    .IDENT  \X01.00\

							    .PSECT  $GLOBAL$,NOEXE,2

					      00000 LNK$GL_MINVA::
							    .LONG   -1073741824						      ;
					      00004 LNK$GL_MAXVA::
							    .LONG   0							      ;

						    SYM$C_MAXLNG==	15
						    FDB$C_SIZE==	75
						    LNK$S_NEWUDF==	0
						    LNK$S_LIBR==	1
						    LNK$S_SHR==		2
						    LNK$S_SELSER==	3
						    LNK$S_OPTION==	4

; Bliss-32 7.352	Saturday 22-AUG-1978 05:05:02	DBB3:[LINKER.SRC]LNKVMCTRL.B32;2				Page 2-2
; Digital Equipment Corporation
;
						    LNK$S_DEBUGER==	5
						    LNK$S_LIBEXTR==	6
						    LNK$S_LIBSRCH==	7
						    LNK$M_NEWUDF==	1
						    LNK$M_LIBR==	2
						    LNK$M_SHR==		4
						    LNK$M_SELSER==	8
						    LNK$M_OPTION==	16
						    LNK$M_DEBUGER==	32
						    LNK$M_LIBEXTR==	64
						    LNK$M_LIBSRCH==	128
						    PMT$L_PSCDES==	0
						    PMT$L_MODCON==	1
						    PMT$L_SYMLST==	1
						    PMT$C_SIZE==	8
						    OMD$C_SIZE==	2080
						    OMD$M_NOPSCT==	1
						    OMD$S_NOPSCT==	0
						    OMD$M_NOBIN==	2
						    OMD$S_NOBIN==	1
						    OMD$M_SHRIMG==	4
						    OMD$S_SHRIMG==	2
						    OMD$M_SELSER==	8
						    OMD$S_SELSER==	3
						    OMD$M_MAPMOD==	16
						    OMD$S_MAPMOD==	4
						    OMD$M_DEBUGER==	32
						    OMD$S_DEBUGER==	5
						    PSC$C_SIZE==	43
						    MPC$C_SIZE==	17
						    LID$C_SIZE==	4
						    CLU$C_SIZE==	55
						    CLU$S_BASED==	0
						    CLU$S_SYMBAS==	1
						    CLU$S_SHRIMG==	2
						    CLU$S_PIC==		3
						    CLU$S_COPY==	4
						    CLU$S_OPEN==	5
						    CLU$S_PENDING==	6
						    FVM$C_SIZE==	12
							    .GLOBL  LNK$ALLOBLK, LNK$DEALBLK, LNK$GL_FVMLST

							    .PSECT  $CODE$,NOWRT,2

					 08FC 00000 	    .ENTRY  LNK$ALLOVIRMEM, Save R2,R3,R4,R5,R6,R7,R11		      ; 0481
		         5B	0000'  CF  9E 00002 	    MOVAB   LNK$GL_MAXVA, R11					      ;
		         5E	       04  C2 00007 	    SUBL2   #4, SP						      ;
	   56	    08   AC	       09  78 0000A 	    ASHL    #9, PAGES, BYTES					      ; 0507
				       03  12 0000F 	    BNEQ    1$							      ;
				     009D  31 00011 	    BRW     11$							      ;
		         57	0000G  CF  9E 00014 1$:     MOVAB   LNK$GL_FVMLST, PREVBLK				      ; 0510
		         55	  04   AC  D0 00019 	    MOVL    ADDRESS, R5						      ; 0512
		         52	       67  D0 0001D 2$:     MOVL    (PREVBLK), FREBLK					      ; 0511
				       03  12 00020 	    BNEQ    3$							      ;
				     0090  31 00022 	    BRW     12$							      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 05:05:02	DBB3:[LINKER.SRC]LNKVMCTRL.B32;2				Page 2-3
; Digital Equipment Corporation
;
		         53	  04   A2  D0 00025 3$:     MOVL    4(FREBLK), R3					      ; 0512
		         53	       55  D1 00029 	    CMPL    R5, R3						      ;
				       0A  1F 0002C 	    BLSSU   4$							      ;
	   51	         53	  08   A2  C1 0002E 	    ADDL3   8(FREBLK), R3, R1					      ; 0513
		         51	       55  D1 00033 	    CMPL    R5, R1						      ;
				       05  1F 00036 	    BLSSU   5$							      ;
		         57	       52  D0 00038 4$:     MOVL    FREBLK, PREVBLK					      ; 0514
				       E0  11 0003B 	    BRB     2$							      ; 0512
	   54	         55	       56  C1 0003D 5$:     ADDL3   BYTES, R5, R4					      ; 0516
	   51	         53	  08   A2  C1 00041 	    ADDL3   8(FREBLK), R3, R1					      ;
		         51	       54  D1 00046 	    CMPL    R4, R1						      ;
				       6A  1A 00049 	    BGTRU   12$							      ;
		         53	       55  D1 0004B 	    CMPL    R5, R3						      ; 0519
				       1A  12 0004E 	    BNEQ    7$							      ;
		    08   A2	       56  C2 00050 	    SUBL2   BYTES, 8(FREBLK)					      ; 0520
				       0E  12 00054 	    BNEQ    6$							      ; 0521
		         67	       62  D0 00056 	    MOVL    (FREBLK), (PREVBLK)					      ; 0523
				       52  DD 00059 	    PUSHL   FREBLK						      ; 0524
				       0C  DD 0005B 	    PUSHL   #12							      ;
		  0000G  CF	       02  FB 0005D 	    CALLS   #2, LNK$DEALBLK					      ;
				       37  11 00062 	    BRB     9$							      ; 0520
		    04   A2	       56  C0 00064 6$:     ADDL2   BYTES, 4(FREBLK)					      ; 0526
				       31  11 00068 	    BRB     9$							      ; 0519
		         54	       51  D1 0006A 7$:     CMPL    R1, R4						      ; 0528
				       06  12 0006D 	    BNEQ    8$							      ;
		    08   A2	       56  C2 0006F 	    SUBL2   BYTES, 8(FREBLK)					      ; 0530
				       26  11 00073 	    BRB     9$							      ; 0528
				       5E  DD 00075 8$:     PUSHL   SP							      ; 0533
				       0C  DD 00077 	    PUSHL   #12							      ;
		  0000G  CF	       02  FB 00079 	    CALLS   #2, LNK$ALLOBLK					      ;
		         50	       6E  D0 0007E 	    MOVL    NXTBLK, R0						      ; 0534
		         60	       62  D0 00081 	    MOVL    (FREBLK), (R0)					      ;
		         62	       50  D0 00084 	    MOVL    R0, (FREBLK)					      ; 0535
		    04   A0	       54  D0 00087 	    MOVL    R4, 4(R0)						      ; 0536
	   51	         53	  04   A0  C3 0008B 	    SUBL3   4(R0), R3, R1					      ; 0538
      08   A0	         51	  08   A2  C1 00090 	    ADDL3   8(FREBLK), R1, 8(R0)				      ; 0537
      08   A2	         55	       53  C3 00096 	    SUBL3   R3, R5, 8(FREBLK)					      ; 0540
	   50	         54	       01  C3 0009B 9$:     SUBL3   #1, R4, R0						      ; 0543
		         6B	       50  D1 0009F 	    CMPL    R0, LNK$GL_MAXVA					      ;
				       03  1B 000A2 	    BLEQU   10$							      ;
		         6B	       50  D0 000A4 	    MOVL    R0, LNK$GL_MAXVA					      ; 0544
		    FC   AB	       55  D1 000A7 10$:    CMPL    R5, LNK$GL_MINVA					      ; 0545
				       04  1E 000AB 	    BGEQU   11$							      ;
		    FC   AB	       55  D0 000AD 	    MOVL    R5, LNK$GL_MINVA					      ; 0546
		         50	       01  D0 000B1 11$:    MOVL    #1, R0						      ; 0547
					   04 000B4 	    RET     							      ;
				       50  D4 000B5 12$:    CLRL    R0							      ; 0549
					   04 000B7 	    RET     							      ; 0481

; Routine Size:  184 bytes


;07500  0551	GLOBAL ROUTINE LNK$FINDVIRMEM(RETADR,PAGES) =
;07600  0552	BEGIN
;07700  0553	!

; Bliss-32 7.352	Saturday 22-AUG-1978 05:05:02	DBB3:[LINKER.SRC]LNKVMCTRL.B32;2				Page 2-4
; Digital Equipment Corporation
;
;07800  0554	!++
;07900  0555	!	THIS ROUTINE IS SIMILAR TO LNK$ALLOVIRMEM EXCEPT THAT ANY FREE
;08000  0556	!	VIRTUAL MEMORY LARGE ENOUGH IS ALLOCATED, STARTING AT LOWEST
;08100  0557	!	ADDRESS END.
;08200  0558	!		RETADR = ADDRESS OF CELL TO RECEIVE THE ADDRESS OF
;08300  0559	!				THE FIRST BYTE ALLOCATED.
;08400  0560	!
;08500  0561	!--
;08600  0562	LOCAL
;08700  0563		BYTES,
;08800  0564		FREBLK : REF BLOCK[,BYTE],
;08900  0565		PREVBLK : REF BLOCK[,BYTE];
;09000  0566	!
;09100  0567	IF (BYTES = .PAGES * 512) EQL 0
;09200  0568	THEN BEGIN
;09300  0569		.RETADR = 0;					! IF REQUESTED SIZE IS ZERO
;09400  0570		RETURN TRUE;					! SUCCESS
;09500  0571	     END;
;09600  0572	PREVBLK = LNK$GL_FVMLST;				! SET TO START OF LIST
;09700  0573	WHILE (FREBLK = .PREVBLK[FVM$L_NXTFVM]) NEQ 0		! GO DOWN LIST LOOKING
;09800  0574	DO IF .BYTES GTRU .FREBLK[FVM$L_BYTES]			! FOR FREE MEMORY
;09900  0575	   THEN PREVBLK = .FREBLK				! LARGE ENOUGH
;10000  0576	   ELSE BEGIN
;10100  0577		.RETADR = .FREBLK[FVM$L_ADDRESS];			! RETURN ITS VIRTUAL ADDRESS
;10200  0578		IF (FREBLK[FVM$L_BYTES] = .FREBLK[FVM$L_BYTES] -	! REDUCE ITS SIZE
;10300  0579				.BYTES ) EQL 0				! AND IF COMPLETELY CONSUMED
;10400  0580		THEN BEGIN
;10500  0581			PREVBLK[FVM$L_NXTFVM] = .FREBLK[FVM$L_NXTFVM];	! REMOVE DESCRIPTOR FROM LIST
;10600  0582			LNK$DEALBLK(FVM$C_SIZE,.FREBLK);		! AND DEALLOCATE THE DESCRIPTOR
;10700  0583		     END
;10800  0584		ELSE FREBLK[FVM$L_ADDRESS] = .FREBLK[FVM$L_ADDRESS] +	! OTHERWISE JUST ADJUST THE
;10900  0585					.BYTES;				! VIRTUAL ADDRESS REMAINING
;10910  0586		IF (..RETADR + .BYTES - 1) GTRU .LNK$GL_MAXVA		! MAXIMIZE THE ADDRESS
;10920  0587		THEN LNK$GL_MAXVA = ..RETADR + .BYTES - 1;		! SPACE ALLOCATED
;10930  0588		IF ..RETADR LSSU .LNK$GL_MINVA				! AND RESET MINIMUM IF NEXESSARY
;10940  0589		THEN LNK$GL_MINVA = ..RETADR;
;11000  0590		RETURN TRUE;					! RETURN SUCCESS
;11100  0591		END;
;11200  0592	RETURN FALSE;				! NO MEMORY FOUND
;11300  0593	END;			! END OF LNK$FINDVIRMEM





					 081C 000B8 	    .ENTRY  LNK$FINDVIRMEM, Save R2,R3,R4,R11			      ; 0551
		         5B	0000'  CF  9E 000BA 	    MOVAB   LNK$GL_MAXVA, R11					      ;
	   54	    08   AC	       09  78 000BF 	    ASHL    #9, PAGES, BYTES					      ; 0567
				       05  12 000C4 	    BNEQ    1$							      ;
				  04   BC  D4 000C6 	    CLRL    @RETADR						      ; 0569
				       4D  11 000C9 	    BRB     7$							      ; 0570
		         53	0000G  CF  9E 000CB 1$:     MOVAB   LNK$GL_FVMLST, PREVBLK				      ; 0572
		         52	       63  D0 000D0 2$:     MOVL    (PREVBLK), FREBLK					      ; 0573
				       47  13 000D3 	    BEQL    8$							      ;
		    08   A2	       54  D1 000D5 	    CMPL    BYTES, 8(FREBLK)					      ; 0574

; Bliss-32 7.352	Saturday 22-AUG-1978 05:05:02	DBB3:[LINKER.SRC]LNKVMCTRL.B32;2				Page 2-5
; Digital Equipment Corporation
;
				       05  1B 000D9 	    BLEQU   3$							      ;
		         53	       52  D0 000DB 	    MOVL    FREBLK, PREVBLK					      ; 0575
				       F0  11 000DE 	    BRB     2$							      ; 0574
		    04   BC	  04   A2  D0 000E0 3$:     MOVL    4(FREBLK), @RETADR					      ; 0577
		    08   A2	       54  C2 000E5 	    SUBL2   BYTES, 8(FREBLK)					      ; 0578
				       0E  12 000E9 	    BNEQ    4$							      ; 0579
		         63	       62  D0 000EB 	    MOVL    (FREBLK), (PREVBLK)					      ; 0581
				       52  DD 000EE 	    PUSHL   FREBLK						      ; 0582
				       0C  DD 000F0 	    PUSHL   #12							      ;
		  0000G  CF	       02  FB 000F2 	    CALLS   #2, LNK$DEALBLK					      ;
				       04  11 000F7 	    BRB     5$							      ; 0578
		    04   A2	       54  C0 000F9 4$:     ADDL2   BYTES, 4(FREBLK)					      ; 0584
	   50	    04   BC	       54  C1 000FD 5$:     ADDL3   BYTES, @RETADR, R0					      ; 0586
				       50  D7 00102 	    DECL    R0							      ;
		         6B	       50  D1 00104 	    CMPL    R0, LNK$GL_MAXVA					      ;
				       03  1B 00107 	    BLEQU   6$							      ;
		         6B	       50  D0 00109 	    MOVL    R0, LNK$GL_MAXVA					      ; 0587
		    FC   AB	  04   BC  D1 0010C 6$:     CMPL    @RETADR, LNK$GL_MINVA				      ; 0588
				       05  1E 00111 	    BGEQU   7$							      ;
		    FC   AB	  04   BC  D0 00113 	    MOVL    @RETADR, LNK$GL_MINVA				      ; 0589
		         50	       01  D0 00118 7$:     MOVL    #1, R0						      ; 0590
					   04 0011B 	    RET     							      ;
				       50  D4 0011C 8$:     CLRL    R0							      ; 0592
					   04 0011E 	    RET     							      ; 0551

; Routine Size:  103 bytes


;65533  0594	END ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $GLOBAL$       	     8    WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $CODE$         	   287  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]STARLET.L32;1		      2688         1         0       108





; Bliss-32 7.352	Saturday 22-AUG-1978 05:05:02	DBB3:[LINKER.SRC]LNKVMCTRL.B32;2				Page 2-6
; Digital Equipment Corporation
;

; Size:		287 code + 8 data bytes
; Run Time:	00:18.2
; Elapsed Time:	00:20.1
; Memory Used:	214 pages
; Compilation Complete
