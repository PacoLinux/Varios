
; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 1
; Digital Equipment Corporation
;
;00100  0001	MODULE LNK_PROCSLIB(					! OBJECT LIBRARY PROCESSING
;00200  0002			IDENT = 'X01.03'
;00300  0003			) =
;00400  0004	BEGIN
;00500  0005	
;00600  0006	!
;00700  0007	! COPYRIGHT (C) 1977, 1978
;00800  0008	! DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
;00900  0009	!
;01000  0010	! THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
;01100  0011	! COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
;01200  0012	! ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
;01300  0013	! MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
;01400  0014	! EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
;01500  0015	! TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
;01600  0016	! REMAIN IN DEC.
;01700  0017	!
;01800  0018	! THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
;01900  0019	! AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
;02000  0020	! CORPORATION.
;02100  0021	!
;02200  0022	! DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
;02300  0023	! SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
;02400  0024	!
;02500  0025	
;02600  0026	!++
;02700  0027	! FACILITY:	LINKER
;02800  0028	!
;02900  0029	! ABSTRACT:	ROUTINES TO DO ALL PASS 1 OBJECT LIBRARY PROCESSING
;03000  0030	!
;03100  0031	!
;03200  0032	! ENVIRONMENT:	VMS NATIVE MODE
;03300  0033	!
;03400  0034	! AUTHOR:	T.J. PORTER, CREATION DATE: 16-MAY-77
;03500  0035	!
;03600  0036	! MODIFICATIONS:
;03700  0037	! NO.	DATE		PROGRAMMER	PURPOSE
;03800  0038	! ---	----		----------	-------
;03900  0039	! 001	12-SEP-77	T.J. PORTER	FAILURE TO FIND A MODULE IS
;04000  0040	!						DIAGNOSTIC (NOT FATAL)
;04100  0041	! 002	18-OCT-77	T.J. PORTER	INVALIDATE LIBRARY SYMBOL POINTER
;04200  0042	!						AFTER SEARCH
;04210  0043	! 003	21-APR-78	T.J. PORTER	REQUIRE FILE CLEAN UP
;04300  0044	!--

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 2
; Digital Equipment Corporation
;
;04400  0045	     
;04500  0046	!
;04600  0047	! TABLE OF CONTENTS:
;04700  0048	!
;04800  0049	
;04900  0050	FORWARD ROUTINE
;05000  0051		FINDLIBNAME,					! LIBRARY NAME TABLE SEARCH ROUTINE
;05100  0052		READBLOCKS : NOVALUE;				! LIBRARY READ BLOCK
;05200  0053	
;05300  0054	!
;05400  0055	! INCLUDE FILES:
;05500  0056	!
;05600  0057	LIBRARY
;05700  0058		'SYS$LIBRARY:STARLET.L32';			! STARLET DATA STRUCTURES
;05800  0059	LIBRARY
;06100  0060		'SYS$LIBRARY:CLIMAC.L32';			! CLI STRUCTURE GENERATION MACROS
;06200  0061	REQUIRE
;06300  0062		'PREFIX';			! GENERAL DEFINITIONS
;06400  0254	REQUIRE
;06500  0255		'DATBAS';			! INTERNAL DATA BASE
;06600  0487	REQUIRE
;06700  0488		'LIBFMT';			! LIBRARY FORMAT DEFINITIONS
;06800  0595	REQUIRE
;06900  0596		'SYMFMT';			! SYMBOL FORMATS
;07000  0681	!
;07100  0682	! MACROS:
;07200  0683	!	THE FOLLOWING THREE MACROS ARE USED TO SET THE ELEMENTS OF A
;07300  0684	!	LIBRARY TABLE NAME DESCRIPTOR RELATIVE TO SOME OTHER NAME DESCRIPTOR
;07400  0685	!
;07500  0686	!	CALLING SEQUENCE (SAME FOR EACH):
;07600  0687	!		OTHER	IS NAME OF THE SOURCE OF THE DESCRIPTOR VARIABLES
;07700  0688	!		BLOCKOFF	IS THE OFFSET TO ADD TO THE RELATIVE BLOCK NUMBER FIELD
;07800  0689	!		ENTRYOFF	IS THE OFFSET TO ADD TO THE RELATIVE ENTRY NUMBER FIELD
;07900  0690	!
;08000  0691	!	THE CODE GENERATED IS CONDITIONAL UPON THE EXISTENCE OF THESE PARAMETERS 
;08100  0692	!
;08200  0693	MACRO
;08300  0694		SETHILIMIT(OTHER,BLOCKOFF,ENTRYOFF) =		! SET HIGH LIMIT NAME DESCRIPTOR
;08400M 0695			SETENTRYDESC(HILIMIT,OTHER,BLOCKOFF,ENTRYOFF)%,
;08500  0696	!
;08600  0697		SETLOLIMIT(OTHER,BLOCKOFF,ENTRYOFF) =		! SET LOW LIMIT NAME DESCRIPTOR
;08700M 0698			SETENTRYDESC(LOLIMIT,OTHER,BLOCKOFF,ENTRYOFF)%,
;08800  0699	!
;08900  0700		SETRIAL(OTHER,BLOCKOFF,ENTRYOFF) =		! SET THE TRIAL NAME DESCRIPTOR
;09000M 0701			SETENTRYDESC(TRIAL,OTHER,BLOCKOFF,ENTRYOFF)%,
;09100  0702	!
;09200  0703	!	THIS MACRO DOES ALL THE WORK FOR THE ABOVE THREE MACROS.
;09300  0704	!	THE CALLING ARGUMENTS ARE THE SAME EXCEPT FOR THE NAME OF THE DESCRIPTOR
;09400  0705	!	WHOSE ELEMENTS ARE TO BE SET.
;09500  0706	!	THE FOLLOWING COMPILE TIME ACTIONS ARE TAKEN (IN ORDER):
;09600  0707	!		IF "BLOCKOFF" IS SPECIFIED:
;09700  0708	!			"ENTRYOFF" IS TAKEN AS A GENERAL EXPRESSION
;09800  0709	!			AS IS "BLOCKOFF" AND THE ENTRY AND REL. BLOCK FIELDS OF
;09900  0710	!			THE DESIRED DESCRIPTOR ARE SET.
;10000  0711	!		IF BOTH ARE NULL, THE ENTRY, RELATIVE BLOCK AND ATBLE ADDRESS ARE

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 2-1
; Digital Equipment Corporation
;
;10100  0712	!			JUST COPIED.
;10200  0713	!
;10300  0714	!		IF ONLY "BLOCKOFF" IS NULL, "ENTRYOFF" IS ASSUMED TO BE
;10400  0715	!			EITHER + OR -1. CODE IS GENERATED TO INCREMENT OR DECREMENT
;10500  0716	!			THE ENTRY NUMBER WITH APPROPRITE CHECKS
;10600  0717	!			FOR MOVEMENT OFF TOP OR BOTTOM OF THE BLOCK
;10700  0718	!
;10800  0719		SETENTRYDESC(THISONE,OTHER,BLOCKOFF,ENTRYOFF) =
;10900M 0720		    %IF NOT %NULL(BLOCKOFF)				! FULLY GENERAL EXPRESSIONS ASSUMED SO
;11000M 0721		    %THEN	%NAME(THISONE,'RBN') = BLOCKOFF;	! SET THE BLOCK OFFSET
;11100M 0722				%NAME(THISONE,'ENT') = ENTRYOFF;	! AND THE ENTRY NUMBER
;11200M 0723									!
;11300M 0724		    %ELSE %IF %NULL(ENTRYOFF)					! IF BOTH ARGUMENTS ARE NULL SO
;11400M 0725			  %THEN %NAME(THISONE,'ENT') = .%NAME(OTHER,'ENT');	! JUST COPY THE ENTRY NUMBER
;11500M 0726				%NAME(THISONE,'RBN') = .%NAME(OTHER,'RBN');	! AND THE RELATIVE BLOCK NUMBER
;11600M 0727				%NAME(THISONE,'ADR') = .%NAME(OTHER,'ADR');	! AND THE ADDRESS OF TABLE ENTRY
;11700M 0728										!
;11800M 0729			  %ELSE	%IF NOT %IDENTICAL(THISONE,OTHER)			! IF NOT THE SAME
;11900M 0730				%THEN %NAME(THISONE,'RBN') = .%NAME(OTHER,'RBN');	! COPY BLOCK NUMBER
;12000M 0731				%FI
;12100M 0732				%IF %IDENTICAL(ENTRYOFF,-1)				! IF THE ENTRY NUMBER 
;12200M 0733				%THEN IF (%NAME(THISONE,'ENT') = .%NAME(OTHER,'ENT')	! IS BEING DECREMENTED
;12300M 0734						+ (ENTRYOFF)) LSS 0
;12400M 0735				      THEN BEGIN					! DO IT CHECKING FOR CROSSING
;12500M 0736						%NAME(THISONE,'ENT') = .ENTSPERBLK - 1;	! BLOCK DOWN AND IF SO
;12600M 0737						%NAME(THISONE,'RBN') = .%NAME(OTHER,	! SET TO TOP OF PREVIOUS
;12700M 0738									'RBN') - 1;	!
;12800M 0739					   END;						! OTHERWISE LEAVE RBN AS IS
;12900M 0740											!
;13000M 0741				%ELSE %IF %IDENTICAL(ENTRYOFF,1)			! IF INCREMENTING THE
;13100M 0742				      %THEN IF (%NAME(THISONE,'ENT') = .%NAME(OTHER,	!
;13200M 0743							'ENT') + (ENTRYOFF)) GEQ	!
;13300M 0744								.ENTSPERBLK		!
;13400M 0745					   THEN BEGIN					! ENTRY THEN CHECK FOR BLOCK
;13500M 0746							%NAME(THISONE,'ENT') = 0;	! CROSSING UP TO NEXT
;13600M 0747							%NAME(THISONE,'RBN') =		! AND SET TO ITS FIRST
;13700M 0748								.%NAME(OTHER,'RBN') + 1;	!
;13800M 0749						END;
;13900M 0750	
;14000M 0751				      %ELSE IF (%NAME(THISONE,'ENT') = .%NAME(OTHER,'ENT')	! IF A GENERAL EXPRESSION
;14100M 0752						+ (ENTRYOFF)) LSS 0			! THEN HAVE TO CHECK BOTH
;14200M 0753					    THEN BEGIN					! DO IT CHECKING FOR CROSSING
;14300M 0754						%NAME(THISONE,'ENT') = .ENTSPERBLK - 1;	! BLOCK DOWN AND IF SO
;14400M 0755						%NAME(THISONE,'RBN') = .%NAME(OTHER,	! SET TO TOP OF PREVIOUS
;14500M 0756									'RBN') - 1;	!
;14600M 0757						 END					! OTHERWISE LEAVE RBN AS IS
;14700M 0758					    ELSE IF .%NAME(THISONE,'ENT') GEQ .ENTSPERBLK
;14800M 0759						THEN BEGIN
;14900M 0760							%NAME(THISONE,'ENT') = 0;	! CROSSING UP TO NEXT
;15000M 0761							%NAME(THISONE,'RBN') =		! AND SET TO ITS FIRST
;15100M 0762								.%NAME(OTHER,'RBN') + 1;!
;15200M 0763						     END;
;15300M 0764				      %FI
;15400M 0765				%FI
;15500M 0766			  %FI

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 2-2
; Digital Equipment Corporation
;
;15600M 0767		    %FI
;15700M 0768		    %IF NOT %NULL(BLOCKOFF)
;15800M 0769		     OR NOT %NULL(OTHER)
;15900M 0770		    %THEN %NAME(THISONE,'ADR') = .TABLEADR + 512*.%NAME(THISONE,'RBN') +
;16000M 0771						.ENTRYSIZE*.%NAME(THISONE,'ENT');
;16100M 0772		    %FI
;16200M 0773		%;
;16300  0774	!
;16400  0775	! EQUATED SYMBOLS:
;16500  0776	!
;16600  0777	GLOBAL LITERAL
;16700  0778		LNK$K_LIBBLOCKS = 10 : SHORT;			! NUMBER OF BLOCKS IN A WINDOW
;16800  0779								! OF A LIBRARY
;16900  0780	!
;17000  0781	! EXTERNAL REFERENCES:
;17100  0782	!
;17200  0783	EXTERNAL LITERAL
;17300  0784		ERM$C_REDERR : BYTLIT,				! READ ERROR MESSAGE CODE
;17400  0785		ERM$C_UNMCOD : BYTLIT,				! MESSAGE TO INCLUDE USER'S FILENAME
;17500  0786		ERM$C_LIBFMT : BYTLIT,				! ILLEGAL LIBRARY FORMAT
;17600  0787		ERM$C_LIBNAMLNG : BYTLIT,			! ILLEGAL MODULE NAME LENGTH
;17700  0788		ERM$C_NOSUCHMOD : BYTLIT,			! MODULE NOT IN LIBRARY ERROR
;17800  0789		SEV$C_INFOR : SHORT,				! INFORMATIONAL ERRORS
;17900  0790		SEV$C_DIAG : SHORT,				! DIAGNOSTIC ERRORS
;18000  0791		SEV$C_FATAL : SHORT,				! FATAL ERRORS
;18100  0792		SYM$M_GSTMISS : WORDLIT,			! FLAG THAT THIS SYMBOL WAS SOUGHT
;18200  0793								! BUT NOT FOUND IN THIS LIBRARY
;18300  0794		SYM$M_WEAK : WORDLIT;				! WEAK SYMBOL FLAG
;18400  0795	EXTERNAL
;18500  0796		LNK$GL_CLIWORK : REF VECTOR[,BYTE],		! POINTER TO A CLI WORK AREA
;18600  0797		LNK$GL_CURFIL : REF BLOCK[,BYTE],		! POINTER TO CURRENT (LIBRARY) FILE DESCRIPTOR
;18700  0798		LNK$GL_UDFLST,					! UNDEFINED SYMBOL LISTHEAD
;18800  0799		LNK$GW_NUDFSYMS : WORD,				! NUMBER OF UNDEFINED SYMBOLS
;18900  0800		LNK$GL_OBJRECS,					! NUMBER OF RECORDS PROCESSED
;19000  0801		LNK$GB_PASS : BYTE,				! LINKER PASS
;19100  0802		LNK$AL_RAB : BLOCK[RAB$C_BLN,BYTE],		! RAB TO USE FOR READS
;19200  0803		LNK$AL_LBQLDSC : BLOCK[,BYTE];			! POINTER TO LIBRARY QUALIFIER DESCRIPTOR
;19300  0804	!
;19400  0805	EXTERNAL ROUTINE
;19500  0806		LNK$ALLOBLK,					! DYNAMIC MEMORY ALLOCATOR
;19600  0807		LNK$DEALBLK,					! AND DE ALLOCATOR
;19700  0808		LNK$ERRMSG,					! ERROR MESSAGE HANDLER
;19800  0809		LNK$CLOSCURFIL,					! CLOSE CURRENT OBJ FILE
;19900  0810		LNK$PROCSOBJ,					! PROCESS OBJ FILES
;20000  0811		LNK$POINTOBJ;					! POINT TO OBJ IN A LIBRARY
;20100  0812	!
;20200  0813	! MODULE OWN STORAGE:
;20300  0814	!
;20400  0815	
;20500  0816	OWN
;20600  0817		SAVEDRECOUNT,							! RECORD COUNT A BEGINNING OF LIBRARY MODULE
;20700  0818		TABLEADR,							! ADDRESS OF TABLE BUFFER
;20800  0819		TABLESIZE : WORD,						! SIZE OF BUFFER IN PAGES
;20900  0820		MNTSTARTBLK : WORD,						! STARTING VBN OF MODULE NAME TABLE
;21000  0821		MNTBLOCKS : WORD,						! NUMBER OF BLOCKS IN MNT

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 2-3
; Digital Equipment Corporation
;
;21100  0822		MNTENTSIZE : WORD,						! SIZE OF AN ENTRY IN MNT
;21200  0823		GSTSTARTBLK : WORD,						! STARTING VBN OF GLOBAL SYMBOL TABLE
;21300  0824		GSTBLOCKS : WORD,						! NUMBER OF BLOCKS OF GST
;21400  0825		GSTENTSIZE : WORD,						! SIZE OF GST ENTRIES
;21500  0826		GSTMISSCNT : WORD,						! NUMBER OF UNSUCCESSFUL GST SEARCHES IN THIS CALL
;21600  0827		QUALVAL_DESC : $CLIREQDESC(RQTYPE=ASCIIVAL),			! DEFINE AND INITIALIZE THE VALUE
;21700  0828										! CONVERSION DESCRIPTOR BLOCK FOR
;21800  0829										! THE LIBRARY MODULE LIST
;21900  0830		SRCHBASEBLK : WORD,						! PARAMETERS USED BY NAME SEARCH
;22000  0831		SRCHTOPBLK : WORD,						! ROUTINE
;22100  0832		ENTRYSIZE : WORD,						! SIZE OF ENTRIES BEING SEARCHED
;22200  0833		ENTSPERBLK : BYTE,						! NUMBER OF TABLE ENTRIES PER BLOCK
;22300  0834		TOPBLKENTS : BYTE;						! NUMBER OF ENTRIES IN TOP BLOCK OF TABLE
;22400  0835	GLOBAL
;22500  0836		LNK$GL_FUTLSRCH,						! ACCUMULATED FUTILE SEARCHES
;22600  0837		LNK$GL_LIBRECS,							! NUMBER OF RECORDS PROCESSED IN LIBRARIES
;22700  0838		LNK$GL_LIBSYM : REF BLOCK[,BYTE],				! POINTER TO THE SYMBOL THAT CAUSED
;22800  0839		LNK$GL_NMODSEXP,						! NUMBER OF EXPLICITLY EXTRACTED MODULES
;22900  0840		LNK$GL_NMODSRCH;						!   "    EXTRACTED BECAUSE THEY RESOLVE SYMBOLS
;23000  0841										! A MODULE TO LOAD FROM LIBRARY.

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 3
; Digital Equipment Corporation
;
;23100  0842	     
;23200  0843	GLOBAL ROUTINE LNK$PROCSLIB(ARGLIST) =		! PROCESS LIBRARY
;23300  0844	
;23400  0845	!++
;23500  0846	! FUNCTIONAL DESCRIPTION:
;23600  0847	!
;23700  0848	! THIS ROUTINE IS CALLED DURING PASS 1 OF
;23800  0849	! LINKING TO PROCESS A RELOCATABLE OBJECT MODULE LIBRARY
;23900  0850	! WHICH HAS ALREADY BEEN OPENED. THERE ARE TWO FUNCTIONS
;24000  0851	! PERFORMED, (IN ORDER IF BOTH SPECIFIED):
;24100  0852	!	(1) IF EXPLICIT MODULE INCLUSION HAS BEEN SPECIFIED,
;24200  0853	!	    THE NAMED MODULES ARE SEARCHED FOR IN THE
;24300  0854	!	    LIBRARY'S MODULE NAME TABLE AND, IF  FOUND, 
;24400  0855	!	    PROCESSED SEQUENTIALLY BY CALLING LNK$PROCSOBJ FOR EACH.
;24500  0856	!	(2) IF SEARCH FOR UNRESOLVED SYMBOLS IS SPECIFIED, AND THERE
;24600  0857	!	    EXIST CURRENTLY UNDEFINED SYMBOLS ON THE UNDEFINED LIST,
;24700  0858	!	    SEARCH THE LIBRARY GLOBAL SYMBOL TABLE FOR EACH SYMBOL.
;24800  0859	!	    WHEN ONE IS FOUND, PROCESS THE DEFINING MODULE BY
;24900  0860	!	    CALLING LNK$PROCSOBJ.
;25000  0861	!
;25100  0862	! FORMAL PARAMETERS:
;25200  0863	!	ARGLIST IS THE ADDRESS OF THE ORIGINAL ARGUMENT LIST FROM
;25300  0864	!	THE IMAGE ACTIVATOR. AT OFFSET CLI$A_UTILSERV IS THE
;25400  0865	!	ADDRESS AT WHICH TO RE-CALL CLI TO PROVIDE THE MODULE
;25500  0866	!	NAMES ON AN EXPLICIT MODULE EXTRACTION FROM LIBRARY
;25600  0867	!
;25700  0868	! IMPLICIT INPUTS:
;25800  0869	!
;25900  0870	!	LNK$GL_CURFIL - POINTS TO CURRENT OBJ FILE (IN THIS
;26000  0871	!			CASE A LIBRARY) DESCRIPTOR BLOCK.
;26100  0872	!	FLAG BITS IN THE DESCRIPTOR SPECIFY THE KIND OF 
;26200  0873	!	LIBRARY SEARCH (MODULE OR SYMBOL OR BOTH). IF
;26300  0874	!	MODULE SEARCH IS SPECIFIED, THE FILE DESCRIPTOR CONTAINS
;26400  0875	!	THE POINTERS TO THE CLI DATA WHICH DESCRIBES MODULES TO
;26500  0876	!	BE INCLUDED.
;26600  0877	!	LNK$GW_NUDFSYMS - NUMBER OF UNDEFINED (STRONGLY REFERENCED)
;26700  0878	!           		  SYMBOLS
;26800  0879	!	LNK$GL_UDFLST -   LISTHEAD FOR DOUBLY LINKED LIST OF
;26900  0880	!			  UNDEFINED SYMBOLS.
;27000  0881	!
;27100  0882	! IMPLICIT OUTPUTS:
;27200  0883	!
;27300  0884	!	THE MODULES SELECTED FOR PROCESSING ARE PROCESSED BY LNK$PROCSOBJ
;27400  0885	!	IN ADDITION:
;27500  0886	!		LNK$GL_LIBSYM	RECEIVES THE ADDRESS OF THE
;27600  0887	!				ENTRY IN THE SYMBOL TABLE WHEN
;27700  0888	!				A SYMBOL SEARCH IS SUCCESSFUL.
;27800  0889	!
;27900  0890	! ROUTINE VALUE:
;28000  0891	!
;28100  0892	! COMPLETION CODES:
;28200  0893	!
;28300  0894	!	NONE
;28400  0895	!
;28500  0896	! SIDE EFFECTS:

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 3-1
; Digital Equipment Corporation
;
;28600  0897	!
;28700  0898	!	AS PERFORMED BY LNK$PROCSOBJ
;28800  0899	!
;28900  0900	!--
;29000  0901	
;29100  0902	    BEGIN
;29200  0903	
;29300  0904	    LOCAL
;29400  0905		RABUSZ,								! SAVED BUFFER SIZE AND ADDRESS FOR
;29500  0906		RABUBF,								! RECORDS CROSSING BLOCKS
;29600  0907		NUMLIBSYMS : WORD,						! NUMBER OF GST ENTRIES
;29700  0908		NUMLIBMODS : WORD,						! NUMBER OF MNT ENTRIES
;29800  0909		NEXTSYM : REF BLOCK[,BYTE],					! NEXT UNDEFINED SYMBOL IN LIST
;29900  0910		MODULERFA : BLOCK[6,BYTE];					! FILE ADDRESS OF FIRST RECORD OF
;30000  0911										! THE ASSOCIATED MODULE. FIRST 4
;30100  0912										! BYTES ARE VBN, FOLLOWED BY THE 
;30200  0913										! OFFSET INTO BLOCK
;30300  0914	MAP ARGLIST : REF BLOCK[,BYTE];
;30400  0915	!
;30500  0916	BIND
;30600  0917		AUXFNB = LNK$GL_CURFIL[FDB$AL_AUXFNB] : BLOCK[NAM$C_BLN,BYTE],	! AUXILIARY FILE NAME BLOCK IN FDB
;30700  0918		RECALLCLI = .ARGLIST[CLI$A_UTILSERV],				! ROUTINE TO RETURN MODULE NAMES
;30800  0919		LIBHEADER = LNK$AL_RAB[RAB$L_UBF] : REF BLOCK[,BYTE];		! POINTER TO BUFFER FOR LIBRARY HEADER
;30900  0920	!
;31000  0921	IF (.LNK$GL_CURFIL[FDB$B_FILFLGS] AND LNK$M_LIBEXTR) EQL 0		! IF NOT EXTRACTING SPECIFIC MODULES AND
;31100  0922	THEN IF .LNK$GW_NUDFSYMS EQL 0 THEN RETURN TRUE;			! THERE ARE NO UNDEFINED SYMBOLS
;31200  0923	LNK$AL_LBQLDSC[CLI$W_QDVALSIZ] = .LNK$GL_CURFIL[FDB$W_LIBLSTLNG];	! SAVE LIBRARY MODULE LIST DESCRIPTOR
;31300  0924	LNK$AL_LBQLDSC[CLI$A_QDVALADR] = .LNK$GL_CURFIL[FDB$L_OMDLST];		! ORIGINALLY FROM CLI
;31400  0925	LNK$GL_CURFIL[FDB$L_OMDLST] = 0;					! INITIALIZE MODULE DESCR. LISTHEAD
;31500  0926	RABUSZ = .LNK$AL_RAB[RAB$W_USZ];					! SAVE THESE UNTIL READY TO
;31600  0927	RABUBF = .LNK$AL_RAB[RAB$L_UBF];					! READ THE RECORDS OF THE MODULE
;31700  0928	READBLOCKS(1,1);							! GO READ THE HEADER BLOCK
;31800  0929	IF .LIBHEADER[LHD$B_FMTLVL] NEQ LIB$K_FMTLVL				! VALIDATE THE LIBRARY FORMAT
;31900  0930	THEN BEGIN								! AND IF NO GOOD
;32000  0931		LNK$CLOSCURFIL();						! ATTEMPT TO CLOSE FILE
;32100  0932		LNK$ERRMSG(ERM$C_LIBFMT,SEV$C_FATAL,				! ISSUE ERROR AND GIVE UP
;32200  0933			    .AUXFNB[NAM$B_RSL],.AUXFNB[NAM$L_RSA],
;32300  0934			    .LIBHEADER[LHD$B_FMTLVL],LIB$K_FMTLVL);
;32400  0935	     END;
;32500  0936	!
;32600  0937	! NOW EXTRACT THE USEFUL DATA ABOUT THE LIBRARY - MODULE NAME TABLE
;32700  0938	! AND GLOBAL SYMBOL TABLE PARAMETERS.
;32800  0939	!
;32900  0940	MNTSTARTBLK = .LIBHEADER[LHD$W_MNTVBN];					! GET STARTING VBN OF MNT
;33000  0941	MNTENTSIZE = .LIBHEADER[LHD$W_MNTESIZ];					! SAVE MNT ENTRY SIZE
;33100  0942	NUMLIBMODS = .LIBHEADER[LHD$W_MNTALLO] - .LIBHEADER[LHD$W_MNTAVAL];	! NUMBER OF MODULES IN MNT.
;33200  0943	MNTBLOCKS = (.NUMLIBMODS + (512/.MNTENTSIZE) -1 )/(512/.MNTENTSIZE);	! COMPUTE NUMBER OF MNT BLOCKS
;33300  0944	GSTSTARTBLK = .LIBHEADER[LHD$W_GSTVBN];					! GET STARTING VBN OF GST
;33400  0945	GSTENTSIZE = .LIBHEADER[LHD$W_GSTESIZ];					! SAVE GST ENTRY SIZE
;33500  0946	NUMLIBSYMS = .LIBHEADER[LHD$W_GSTALLO] - .LIBHEADER[LHD$W_GSTAVAL];	! GET NUMBER OF SYMBOLS IN GST
;33600  0947	GSTBLOCKS = (.NUMLIBSYMS + (512/.GSTENTSIZE) -1 )/(512/.GSTENTSIZE);	! COMPUTE NUMBER OF GST BLOCKS
;33700  0948	IF (.LNK$GL_CURFIL[FDB$B_FILFLGS] AND LNK$M_LIBEXTR) NEQ 0		! IF THIS IS INCLUSION OF EXPLICITLY
;33800  0949	THEN BEGIN								! NAMED MODULES
;33900  0950		SRCHBASEBLK = .MNTSTARTBLK;					! SET MNT AS THE SEARCH
;34000  0951		SRCHTOPBLK = .MNTSTARTBLK + .MNTBLOCKS-1;			! RANGE

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 3-2
; Digital Equipment Corporation
;
;34100  0952		ENTRYSIZE = .MNTENTSIZE;					! SET SIZE OF ENTRIES TO SEARCH
;34200  0953		ENTSPERBLK = 512/.MNTENTSIZE;					! COMPUTE ENTRIES PER BLOCK
;34300  0954		IF .NUMLIBMODS LEQ .ENTSPERBLK					! IF ONLY ONE BLOCK
;34400  0955		THEN TOPBLKENTS = .NUMLIBMODS					! SET THAT VALUE, ELSE
;34500  0956		ELSE TOPBLKENTS = .NUMLIBMODS - .ENTSPERBLK*(.MNTBLOCKS-1);	! COMPUTE NUMBER ENTRIES IN TOP BLOCK
;34600  0957		LNK$GL_LIBSYM = 0;						! INVALIDATE LIBRARY SYMBOL
;34700  0958	!
;34800  0959	! NOW LOOP CALLING CLI FOR THE NEXT MODULE NAME IN THE
;34900  0960	! LIST, SEARCHING MODULE NAME TABLE FOR THAT MODULE THEN,
;35000  0961	! IF FOUND PROCESSING THE MODULE
;35100  0962	!
;35200  0963		WHILE .LNK$AL_LBQLDSC[CLI$W_QDVALSIZ] NEQ 0			! THAT IS WHILE THERE
;35300  0964		DO BEGIN							! REMAINS MORE TEXT ON THE
;35400  0965			RECALLCLI (QUALVAL_DESC,.LNK$GL_CLIWORK,LNK$AL_LBQLDSC);! LIBRARY INCLUSION QUALIFIER
;35500  0966			IF .QUALVAL_DESC[CLI$W_RQSIZE] EQL 0			! GO GET NEXT NAME (ALLOWING
;35600  0967			OR .QUALVAL_DESC[CLI$W_RQSIZE] GTRU SYM$C_MAXLNG	! CLI TO USE THE LIBRARY
;35700  0968			THEN BEGIN						! HEADER BUFFER).
;35800  0969				LNK$ERRMSG(ERM$C_LIBNAMLNG,SEV$C_DIAG,		! CHECK A VALID NAME
;35900  0970				   .QUALVAL_DESC[CLI$W_RQSIZE]);		! AND ISSUE ERROR IF AN
;36000  0971				QUALVAL_DESC[CLI$W_RQSIZE] = SYM$C_MAXLNG;	! ILLEGAL LENGTH, SET
;36100  0972			     END;						! TO MAX AND PROCEED
;36200  0973			IF NOT FINDLIBNAME(.QUALVAL_DESC[CLI$W_RQSIZE],	! GO LOOK FOR MODULE
;36300  0974				.QUALVAL_DESC[CLI$A_RQADDR],			! NAME IN LIBRARY AND
;36400  0975				MODULERFA)					! IF NOT THERE, TELL
;36500  0976			THEN LNK$ERRMSG(ERM$C_NOSUCHMOD,SEV$C_DIAG,		! THEM ABOUT IT BUT CONTINUE
;36600  0977				.AUXFNB[NAM$B_RSL],.AUXFNB[NAM$L_RSA],
;36700  0978				.QUALVAL_DESC[CLI$W_RQSIZE],
;36800  0979				.QUALVAL_DESC[CLI$A_RQADDR])
;36900  0980			ELSE BEGIN
;37000  0981				LNK$AL_RAB[RAB$W_USZ] = .RABUSZ;		! RESTORE BUFFER SIZE AND ADDRESS
;37100  0982				LNK$AL_RAB[RAB$L_UBF] = .RABUBF;		! FOR RMS RECORDS CROSSING BLOCKS
;37200  0983				SAVEDRECOUNT = .LNK$GL_OBJRECS;			! SAVE CURRENT RECORD COUNT
;37300  0984				LNK$GL_NMODSEXP = .LNK$GL_NMODSEXP + 1;		! COUNT ONE MORE EXPLICITLY EXTRACTED
;37400  0985				LNK$POINTOBJ(MODULERFA);			! FOUND IT SO GO POINT TO
;37500  0986				IF NOT LNK$PROCSOBJ(MODULERFA) THEN RETURN FALSE;	! THE MODULE IN THE LIBRARY
;37600  0987				LNK$GL_LIBRECS = .LNK$GL_LIBRECS + .LNK$GL_OBJRECS -	! ACCUMULATE THE NUMBER OF RECORDS
;37700  0988					.SAVEDRECOUNT;				! FOUND IN LIBRARIES
;37800  0989			     END;
;37900  0990		   END;
;38000  0991	     END;								! AND PROCESS IT
;38100  0992	!
;38200  0993	! NOW CHECK WHETHER THIS LIBRARY IS TO BE SEARCHED FOR
;38300  0994	! CURRENTLY UNDEFINED SYMBOLS. EXIT NOW IF NOT
;38400  0995	!
;38500  0996	IF (.LNK$GL_CURFIL[FDB$B_FILFLGS] AND LNK$M_LIBSRCH) NEQ 0		! IF A SYMBOL SEARCH REQUIRED
;38600  0997	AND .NUMLIBSYMS NEQ 0							! AND THERE ARE SYMBOLS IN THIS LIBRARY
;38700  0998	THEN BEGIN
;38800  0999	SRCHBASEBLK = .GSTSTARTBLK;						! SET UP THE TABLE SEARCH
;38900  1000	SRCHTOPBLK = .GSTSTARTBLK + .GSTBLOCKS - 1;				! PARAMETERS
;39000  1001	ENTRYSIZE = .GSTENTSIZE;						! SET SIZE OF ENTRIES TO BE SEARCHED
;39100  1002	ENTSPERBLK = 512/.GSTENTSIZE;						! FOR SYMBOL TABLE
;39200  1003	IF .NUMLIBSYMS LEQ .ENTSPERBLK						! IF ONLY ONE BLOCK
;39300  1004	THEN TOPBLKENTS = .NUMLIBSYMS					! SET THAT VALUE, ELSE
;39400  1005	ELSE TOPBLKENTS = .NUMLIBSYMS - .ENTSPERBLK*(.GSTBLOCKS-1);		! COMPUTE NUMBER OF ENTRIES ON LAST BLOCK
;39500  1006	LNK$GL_CURFIL[FDB$B_FILFLGS] = .LNK$GL_CURFIL[FDB$B_FILFLGS] AND	! 

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 3-3
; Digital Equipment Corporation
;
;39600  1007						NOT LNK$M_NEWUDF;		! RESET UNDEFINED SYMBOLS CONTRIBUTED
;39700  1008	GSTMISSCNT = 0;								! RESET COUNT OF SYMBOLS NOT FOUND
;39800  1009	NEXTSYM = .LNK$GL_UDFLST;							! START AT TOP OF LIST, AND
;39900  1010	WHILE .LNK$GW_NUDFSYMS NEQ 0							! WHILE IT CONTAINS SOME UN-
;40000  1011											! DEFINED SYMBOLS, GET
;40100  1012	AND (IF (LNK$GL_LIBSYM = .NEXTSYM) NEQ LNK$GL_UDFLST				! NEXT ENTRY. HOWEVER
;40200  1013		THEN TRUE								! IF BACK AT THE LISTHEAD
;40300  1014		ELSE IF (.LNK$GL_CURFIL[FDB$B_FILFLGS] AND LNK$M_NEWUDF) EQL 0		! AND THIS FILE DID NOT ADD
;40400  1015			THEN FALSE							! MORE UNDEFINED SYMBOLS-WE ARE DONE
;40500  1016			ELSE BEGIN							! IF IT DID ADD MORE, GET
;40600  1017			      LNK$GL_LIBSYM=.LNK$GL_LIBSYM[SYM$L_UDFLINK];		! TOP ENTRY IN LIST
;40700  1018			      LNK$GL_CURFIL[FDB$B_FILFLGS]=.LNK$GL_CURFIL[FDB$B_FILFLGS]! RESET THE UNDEFINED SYMBOLS
;40800  1019							   AND NOT LNK$M_NEWUDF;	! CONTRIBUTED FLAG
;40900  1020			      TRUE							! AND CONTINUE THE
;41000  1021			     END)							! SEARCH
;41100  1022	DO BEGIN									! FOR A SYMBOL ON THE 
;41200  1023		    NEXTSYM=.LNK$GL_LIBSYM[SYM$L_UDFLINK];				! UNDEFINED LIST AND
;41300  1024		    IF (.LNK$GL_LIBSYM[SYM$W_FLAGS] AND SYM$M_WEAK) EQL 0		! PROVIDED IT IS NOT A WEAK
;41400  1025		    AND (.LNK$GL_LIBSYM[SYM$W_FLAGS] AND SYM$M_GSTMISS) EQL 0		! REFERENCE AND THAT WE
;41500  1026		    THEN								! HAVE NOT BEFORE FAILED TO
;41600  1027											! FIND IT IN THIS LIBRARY,
;41700  1028			IF FINDLIBNAME(.LNK$GL_LIBSYM[SYM$B_NAMLNG],			! THEN GO LOOK FOR IT
;41800  1029				    LNK$GL_LIBSYM[SYM$T_NAME],MODULERFA)		! AND IF FOUND, USE THE
;41900  1030			THEN BEGIN							! RETURN RECORD'S FILE ADDRESS
;42000  1031				LNK$AL_RAB[RAB$W_USZ] = .RABUSZ;		! RESTORE BUFFER SIZE AND ADDRESS
;42100  1032				LNK$AL_RAB[RAB$L_UBF] = .RABUBF;		! FOR RMS RECORDS CROSSING BLOCKS
;42200  1033				LNK$GL_NMODSRCH = .LNK$GL_NMODSRCH + 1;		! COUNT THE NUMBER OF MODULES
;42300  1034				SAVEDRECOUNT = .LNK$GL_OBJRECS;			! SAVE CURRENT RECORD COUNT
;42400  1035				LNK$POINTOBJ(MODULERFA);				! TO POINT TO THE MODULE
;42500  1036				IF NOT LNK$PROCSOBJ(MODULERFA) THEN RETURN FALSE;	! AND GO PROCESS IT
;42600  1037				LNK$GL_LIBRECS = .LNK$GL_LIBRECS + .LNK$GL_OBJRECS -	! ACCUMULATE THE NUMBER OF
;42700  1038						.SAVEDRECOUNT;				! RECORDS FROM LIBRARIES
;42800  1039				NEXTSYM = .LNK$GL_LIBSYM;				! RETRIEVE NEXT IN LIST (SINCE THE
;42900  1040											! ONE WE HAD MAY HAVE JUST BEEN
;43000  1041			     END							! DEFINED BY THAT MODULE)
;43100  1042			ELSE BEGIN							! IF THE SYMBOL WAS NOT
;43200  1043			        GSTMISSCNT = .GSTMISSCNT+1;				! FOUND IN LIBRARY, COUNT
;43300  1044			        LNK$GL_LIBSYM[SYM$W_FLAGS]=.LNK$GL_LIBSYM[SYM$W_FLAGS]	! ANOTHER MISS AND SUPPRESS
;43400  1045							 OR SYM$M_GSTMISS;		! ANY MORE SEARCHES FOR IT
;43500  1046			     END;
;43600  1047											! END OF SYMBOL LIST LOOP
;43700  1048	   END;
;43800  1049	LNK$GL_LIBSYM = 0;							! INVALIDATE THE SYMBOL POINTER
;43900  1050	!
;44000  1051	! NOW FINISHED LOOKING FOR UNDEFINED SYMBOLS IN THE CURRENT LIBRARY
;44100  1052	! MUST NOW GO DOWN WHAT IS LEFT OF THE UNDEFINED SYMBOL LIST, TURNING
;44200  1053	! OFF THE GST MISS FLAG IN EACH SYMBOL DESCRIPTOR.
;44300  1054	!
;44400  1055	NEXTSYM = LNK$GL_UDFLST;
;44500  1056	IF .GSTMISSCNT NEQ 0								! IF THERE WERE NO MISSES
;44600  1057	THEN WHILE (NEXTSYM=.NEXTSYM[SYM$L_UDFLINK]) NEQ LNK$GL_UDFLST			! FORGET IT
;44700  1058		DO NEXTSYM[SYM$W_FLAGS] = .NEXTSYM[SYM$W_FLAGS] AND NOT SYM$M_GSTMISS;	! TURN OFF FLAG
;44800  1059	LNK$GL_FUTLSRCH = .LNK$GL_FUTLSRCH + .GSTMISSCNT;				! ACCUMULATE FUTILE SEARCH COUNT
;44900  1060	END;
;45000  1061	LNK$GL_CURFIL[FDB$B_FILFLGS] = .LNK$GL_CURFIL[FDB$B_FILFLGS] AND		! RESET THE POSSIBLE SELECTIVE SEARCH

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 3-4
; Digital Equipment Corporation
;
;45100  1062						NOT LNK$M_SELSER;			! FLAG ON THE LIBRARY
;45200  1063	LNK$AL_RAB[RAB$W_USZ] = .RABUSZ;			! RESTORE BUFFER SIZE AND ADDRESS
;45300  1064	LNK$AL_RAB[RAB$L_UBF] = .RABUBF;			! FOR RMS RECORDS CROSSING BLOCKS
;45400  1065	RETURN TRUE;									! AND ALL DONE
;45500  1066	END;										! END OF ROUTINE


							    .TITLE  LNK_PROCSLIB
							    .IDENT  \X01.03\

							    .PSECT  $OWN$,NOEXE,2

					      00000 SAVEDRECOUNT:
							    .BLKB   4
					      00004 TABLEADR:
							    .BLKB   4
					      00008 TABLESIZE:
							    .BLKB   2
					      0000A MNTSTARTBLK:
							    .BLKB   2
					      0000C MNTBLOCKS:
							    .BLKB   2
					      0000E MNTENTSIZE:
							    .BLKB   2
					      00010 GSTSTARTBLK:
							    .BLKB   2
					      00012 GSTBLOCKS:
							    .BLKB   2
					      00014 GSTENTSIZE:
							    .BLKB   2
					      00016 GSTMISSCNT:
							    .BLKB   2
					      00018 QUALVAL_DESC:
							    .BYTE   65							      ;
					      00019 	    .BYTE   0							      ;
					      0001A 	    .BYTE   0							      ;
					      0001B 	    .BYTE   0							      ;
					      0001C 	    .LONG   0							      ;
					      00020 	    .LONG   0, 0						      ;
					      00028 	    .LONG   0							      ;
					      0002C 	    .LONG   0							      ;
					      00030 	    .LONG   0							      ;
					      00034 SRCHBASEBLK:
							    .BLKB   2
					      00036 SRCHTOPBLK:
							    .BLKB   2
					      00038 ENTRYSIZE:
							    .BLKB   2
					      0003A ENTSPERBLK:
							    .BLKB   1
					      0003B TOPBLKENTS:
							    .BLKB   1

							    .PSECT  $GLOBAL$,NOEXE,2


; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 3-5
; Digital Equipment Corporation
;
					      00000 LNK$GL_FUTLSRCH::
							    .BLKB   4
					      00004 LNK$GL_LIBRECS::
							    .BLKB   4
					      00008 LNK$GL_LIBSYM::
							    .BLKB   4
					      0000C LNK$GL_NMODSEXP::
							    .BLKB   4
					      00010 LNK$GL_NMODSRCH::
							    .BLKB   4

						    SYM$C_MAXLNG==	15
						    FDB$C_SIZE==	75
						    LNK$S_NEWUDF==	0
						    LNK$S_LIBR==	1
						    LNK$S_SHR==		2
						    LNK$S_SELSER==	3
						    LNK$S_OPTION==	4
						    LNK$S_DEBUGER==	5
						    LNK$S_LIBEXTR==	6
						    LNK$S_LIBSRCH==	7
						    LNK$M_NEWUDF==	1
						    LNK$M_LIBR==	2
						    LNK$M_SHR==		4
						    LNK$M_SELSER==	8
						    LNK$M_OPTION==	16
						    LNK$M_DEBUGER==	32
						    LNK$M_LIBEXTR==	64
						    LNK$M_LIBSRCH==	128
						    PMT$L_PSCDES==	0
						    PMT$L_MODCON==	1
						    PMT$L_SYMLST==	1
						    PMT$C_SIZE==	8
						    OMD$C_SIZE==	2080
						    OMD$M_NOPSCT==	1
						    OMD$S_NOPSCT==	0
						    OMD$M_NOBIN==	2
						    OMD$S_NOBIN==	1
						    OMD$M_SHRIMG==	4
						    OMD$S_SHRIMG==	2
						    OMD$M_SELSER==	8
						    OMD$S_SELSER==	3
						    OMD$M_MAPMOD==	16
						    OMD$S_MAPMOD==	4
						    OMD$M_DEBUGER==	32
						    OMD$S_DEBUGER==	5
						    PSC$C_SIZE==	43
						    MPC$C_SIZE==	17
						    LID$C_SIZE==	4
						    CLU$C_SIZE==	55
						    CLU$S_BASED==	0
						    CLU$S_SYMBAS==	1
						    CLU$S_SHRIMG==	2
						    CLU$S_PIC==		3
						    CLU$S_COPY==	4

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 3-6
; Digital Equipment Corporation
;
						    CLU$S_OPEN==	5
						    CLU$S_PENDING==	6
						    FVM$C_SIZE==	12
						    LIB$K_HEADSIZ==	512
						    LIB$K_FMTLVL==	129
						    LIB$K_LIBVERLNG==	4
						    LIB$K_DATLNG==	6
						    LIB$K_TIMDATLNG==	12
						    LHD$C_SIZE==	46
						    LNE$C_SIZE==	20
						    LMH$C_SIZE==	28
						    LMH$M_SELSER==	1
						    SYM$C_TBLSIZ==	128
						    SYM$C_SIZE==	42
						    LNK$K_LIBBLOCKS==	10
							    .GLOBL  ERM$C_REDERR, ERM$C_UNMCOD, ERM$C_LIBFMT, ERM$C_LIBNAMLNG
							    .GLOBL  ERM$C_NOSUCHMOD, SEV$C_INFOR, SEV$C_DIAG, SEV$C_FATAL
							    .GLOBL  SYM$M_GSTMISS, SYM$M_WEAK, LNK$GL_CLIWORK, LNK$GL_CURFIL
							    .GLOBL  LNK$GL_UDFLST, LNK$GW_NUDFSYMS, LNK$GL_OBJRECS
							    .GLOBL  LNK$GB_PASS, LNK$AL_RAB, LNK$AL_LBQLDSC, LNK$ALLOBLK
							    .GLOBL  LNK$DEALBLK, LNK$ERRMSG, LNK$CLOSCURFIL, LNK$PROCSOBJ
							    .GLOBL  LNK$POINTOBJ

							    .PSECT  $CODE$,NOWRT,2

					 0FFC 00000 	    .ENTRY  LNK$PROCSLIB, Save R2,R3,R4,R5,R6,R7,R8,R9,R10,R11	      ; 0843
		         59	0000G  CF  9E 00002 	    MOVAB   LNK$AL_RAB+32, R9					      ;
		         5A	0000'  CF  9E 00007 	    MOVAB   LNK$GL_LIBSYM, R10					      ;
		         5B	0000'  CF  9E 0000C 	    MOVAB   ENTSPERBLK, R11					      ;
		         5E	       08  C2 00011 	    SUBL2   #8, SP						      ;
		         50	0000G  CF  D0 00014 	    MOVL    LNK$GL_CURFIL, R0					      ; 0917
	   53	         50	       13  C1 00019 	    ADDL3   #19, R0, R3						      ;
		         51	  04   AC  D0 0001D 	    MOVL    ARGLIST, R1						      ; 0918
		         57	  08   A1  D0 00021 	    MOVL    8(R1), R7						      ; 0902
	   09	    0A   A0	       06  E0 00025 	    BBS     #6, 10(R0), 1$					      ; 0921
				0000G  CF  B5 0002A 	    TSTW    LNK$GW_NUDFSYMS					      ; 0922
				       03  12 0002E 	    BNEQ    1$							      ;
				     02C5  31 00030 	    BRW     27$							      ;
		  0000G  CF	  08   A0  B0 00033 1$:     MOVW    8(R0), LNK$AL_LBQLDSC+4				      ; 0923
		  0000G  CF	  04   A0  D0 00039 	    MOVL    4(R0), LNK$AL_LBQLDSC+8				      ; 0924
				  04   A0  D4 0003F 	    CLRL    4(R0)						      ; 0925
		         55	       69  3C 00042 	    MOVZWL  LNK$AL_RAB+32, RABUSZ				      ; 0926
		         56	  04   A9  D0 00045 	    MOVL    LNK$AL_RAB+36, RABUBF				      ; 0927
				       01  DD 00049 	    PUSHL   #1							      ; 0928
				       01  DD 0004B 	    PUSHL   #1							      ;
		  0000V  CF	       02  FB 0004D 	    CALLS   #2, READBLOCKS					      ;
		         50	  04   A9  D0 00052 	    MOVL    LIBHEADER, R0					      ; 0929
		    81   8F	  01   A0  91 00056 	    CMPB    1(R0), #129						      ;
				       24  13 0005B 	    BEQL    2$							      ;
		  0000G  CF	       00  FB 0005D 	    CALLS   #0, LNK$CLOSCURFIL					      ; 0931
		         7E	  81   8F  9A 00062 	    MOVZBL  #129, -(SP)						      ; 0932
		         50	  04   A9  D0 00066 	    MOVL    LIBHEADER, R0					      ; 0934
		         7E	  01   A0  9A 0006A 	    MOVZBL  1(R0), -(SP)					      ; 0932
				  04   A3  DD 0006E 	    PUSHL   4(R3)						      ;
		         7E	  03   A3  9A 00071 	    MOVZBL  3(R3), -(SP)					      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 3-7
; Digital Equipment Corporation
;
		         7E	       00  9A 00075 	    MOVZBL  #SEV$C_FATAL, -(SP)					      ;
		         7E	  00G  8F  9A 00078 	    MOVZBL  #ERM$C_LIBFMT, -(SP)				      ;
		  0000G  CF	       06  FB 0007C 	    CALLS   #6, LNK$ERRMSG					      ;
		         50	  04   A9  D0 00081 2$:     MOVL    LIBHEADER, R0					      ; 0940
		    D0   AB	  1C   A0  B0 00085 	    MOVW    28(R0), MNTSTARTBLK					      ;
		    D4   AB	  1A   A0  B0 0008A 	    MOVW    26(R0), MNTENTSIZE					      ; 0941
	   54	    1E   A0	  20   A0  A3 0008F 	    SUBW3   32(R0), 30(R0), NUMLIBMODS				      ; 0942
		         51	  D4   AB  3C 00095 	    MOVZWL  MNTENTSIZE, R1					      ; 0943
	   51 00000200   8F	       51  C7 00099 	    DIVL3   R1, #512, R1					      ;
		         52	       54  3C 000A1 	    MOVZWL  NUMLIBMODS, R2					      ;
		         52	       51  C0 000A4 	    ADDL2   R1, R2						      ;
				       52  D7 000A7 	    DECL    R2							      ;
	   58	         52	       51  C7 000A9 	    DIVL3   R1, R2, R8						      ;
		    D2   AB	       58  B0 000AD 	    MOVW    R8, MNTBLOCKS					      ;
		    D6   AB	  14   A0  B0 000B1 	    MOVW    20(R0), GSTSTARTBLK					      ; 0944
		    DA   AB	  12   A0  B0 000B6 	    MOVW    18(R0), GSTENTSIZE					      ; 0945
	   52	    16   A0	  18   A0  A3 000BB 	    SUBW3   24(R0), 22(R0), NUMLIBSYMS				      ; 0946
		         50	  DA   AB  3C 000C1 	    MOVZWL  GSTENTSIZE, R0					      ; 0947
	   50 00000200   8F	       50  C7 000C5 	    DIVL3   R0, #512, R0					      ;
		         51	       52  3C 000CD 	    MOVZWL  NUMLIBSYMS, R1					      ;
		         51	       50  C0 000D0 	    ADDL2   R0, R1						      ;
				       51  D7 000D3 	    DECL    R1							      ;
	   58	         51	       50  C7 000D5 	    DIVL3   R0, R1, R8						      ;
		    D8   AB	       58  B0 000D9 	    MOVW    R8, GSTBLOCKS					      ;
		         50	0000G  CF  D0 000DD 	    MOVL    LNK$GL_CURFIL, R0					      ; 0948
	   03	    0A   A0	       06  E0 000E2 	    BBS     #6, 10(R0), 4$					      ;
				     00DD  31 000E7 3$:     BRW     13$							      ;
		    FA   AB	  D0   AB  B0 000EA 4$:     MOVW    MNTSTARTBLK, SRCHBASEBLK				      ; 0950
		         50	  D0   AB  3C 000EF 	    MOVZWL  MNTSTARTBLK, R0					      ; 0951
		         51	  D2   AB  3C 000F3 	    MOVZWL  MNTBLOCKS, R1					      ;
		         50	       51  C0 000F7 	    ADDL2   R1, R0						      ;
      FC   AB	         50	       01  A3 000FA 	    SUBW3   #1, R0, SRCHTOPBLK					      ;
		    FE   AB	  D4   AB  B0 000FF 	    MOVW    MNTENTSIZE, ENTRYSIZE				      ; 0952
		         50	  D4   AB  3C 00104 	    MOVZWL  MNTENTSIZE, R0					      ; 0953
	   50 00000200   8F	       50  C7 00108 	    DIVL3   R0, #512, R0					      ;
		         6B	       50  90 00110 	    MOVB    R0, ENTSPERBLK					      ;
		         50	       6B  9A 00113 	    MOVZBL  ENTSPERBLK, R0					      ; 0954
		         54	       50  B1 00116 	    CMPW    R0, NUMLIBMODS					      ;
				       06  1F 00119 	    BLSSU   5$							      ;
		    01   AB	       54  90 0011B 	    MOVB    NUMLIBMODS, TOPBLKENTS				      ; 0955
				       11  11 0011F 	    BRB     6$							      ; 0954
		         50	  D2   AB  3C 00121 5$:     MOVZWL  MNTBLOCKS, R0					      ; 0956
				       50  D7 00125 	    DECL    R0							      ;
		         51	       6B  9A 00127 	    MOVZBL  ENTSPERBLK, R1					      ;
		         50	       51  C4 0012A 	    MULL2   R1, R0						      ;
      01   AB	         54	       50  83 0012D 	    SUBB3   R0, NUMLIBMODS, TOPBLKENTS				      ;
				       6A  D4 00132 6$:     CLRL    LNK$GL_LIBSYM					      ; 0957
				0000G  CF  B5 00134 7$:     TSTW    LNK$AL_LBQLDSC+4					      ; 0963
				       AD  13 00138 	    BEQL    3$							      ;
				0000G  CF  9F 0013A 	    PUSHAB  LNK$AL_LBQLDSC					      ; 0965
				0000G  CF  DD 0013E 	    PUSHL   LNK$GL_CLIWORK					      ;
				  DE   AB  9F 00142 	    PUSHAB  QUALVAL_DESC					      ;
		         67	       03  FB 00145 	    CALLS   #3, (R7)						      ;
		         50	  E6   AB  3C 00148 	    MOVZWL  QUALVAL_DESC+8, R0					      ; 0966
				       05  13 0014C 	    BEQL    8$							      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 3-8
; Digital Equipment Corporation
;
		         0F	       50  D1 0014E 	    CMPL    R0, #15						      ; 0967
				       14  1B 00151 	    BLEQU   9$							      ;
		         7E	  E6   AB  3C 00153 8$:     MOVZWL  QUALVAL_DESC+8, -(SP)				      ; 0969
		         7E	       00  9A 00157 	    MOVZBL  #SEV$C_DIAG, -(SP)					      ;
		         7E	  00G  8F  9A 0015A 	    MOVZBL  #ERM$C_LIBNAMLNG, -(SP)				      ;
		  0000G  CF	       03  FB 0015E 	    CALLS   #3, LNK$ERRMSG					      ;
		    E6   AB	       0F  B0 00163 	    MOVW    #15, QUALVAL_DESC+8					      ; 0971
				       5E  DD 00167 9$:     PUSHL   SP							      ; 0973
				  EA   AB  DD 00169 	    PUSHL   QUALVAL_DESC+12					      ;
		         7E	  E6   AB  3C 0016C 	    MOVZWL  QUALVAL_DESC+8, -(SP)				      ;
		  0000V  CF	       03  FB 00170 	    CALLS   #3, FINDLIBNAME					      ;
		         1C	       50  E8 00175 	    BLBS    R0, 11$						      ;
				  EA   AB  DD 00178 	    PUSHL   QUALVAL_DESC+12					      ; 0976
		         7E	  E6   AB  3C 0017B 	    MOVZWL  QUALVAL_DESC+8, -(SP)				      ;
				  04   A3  DD 0017F 	    PUSHL   4(R3)						      ;
		         7E	  03   A3  9A 00182 	    MOVZBL  3(R3), -(SP)					      ;
		         7E	       00  9A 00186 	    MOVZBL  #SEV$C_DIAG, -(SP)					      ;
		         7E	  00G  8F  9A 00189 	    MOVZBL  #ERM$C_NOSUCHMOD, -(SP)				      ;
		  0000G  CF	       06  FB 0018D 	    CALLS   #6, LNK$ERRMSG					      ;
				       A0  11 00192 10$:    BRB     7$							      ; 0973
		         69	       55  B0 00194 11$:    MOVW    RABUSZ, LNK$AL_RAB+32				      ; 0981
		    04   A9	       56  D0 00197 	    MOVL    RABUBF, LNK$AL_RAB+36				      ; 0982
		    C6   AB	0000G  CF  D0 0019B 	    MOVL    LNK$GL_OBJRECS, SAVEDRECOUNT			      ; 0983
				  04   AA  D6 001A1 	    INCL    LNK$GL_NMODSEXP					      ; 0984
				       5E  DD 001A4 	    PUSHL   SP							      ; 0985
		  0000G  CF	       01  FB 001A6 	    CALLS   #1, LNK$POINTOBJ					      ;
				       5E  DD 001AB 	    PUSHL   SP							      ; 0986
		  0000G  CF	       01  FB 001AD 	    CALLS   #1, LNK$PROCSOBJ					      ;
		         03	       50  E8 001B2 	    BLBS    R0, 12$						      ;
				     0144  31 001B5 	    BRW     28$							      ;
	   50	    FC   AA	0000G  CF  C1 001B8 12$:    ADDL3   LNK$GL_OBJRECS, LNK$GL_LIBRECS, R0			      ; 0987
      FC   AA	         50	  C6   AB  C3 001BF 	    SUBL3   SAVEDRECOUNT, R0, LNK$GL_LIBRECS			      ;
				       CB  11 001C5 	    BRB     10$							      ; 0963
		         50	0000G  CF  D0 001C7 13$:    MOVL    LNK$GL_CURFIL, R0					      ; 0996
	   03	    0A   A0	       07  E0 001CC 	    BBS     #7, 10(R0), 15$					      ;
				     0114  31 001D1 14$:    BRW     26$							      ;
				       52  B5 001D4 15$:    TSTW    NUMLIBSYMS						      ; 0997
				       F9  13 001D6 	    BEQL    14$							      ;
		    FA   AB	  D6   AB  B0 001D8 	    MOVW    GSTSTARTBLK, SRCHBASEBLK				      ; 0999
		         51	  D6   AB  3C 001DD 	    MOVZWL  GSTSTARTBLK, R1					      ; 1000
		         53	  D8   AB  3C 001E1 	    MOVZWL  GSTBLOCKS, R3					      ;
		         51	       53  C0 001E5 	    ADDL2   R3, R1						      ;
      FC   AB	         51	       01  A3 001E8 	    SUBW3   #1, R1, SRCHTOPBLK					      ;
		    FE   AB	  DA   AB  B0 001ED 	    MOVW    GSTENTSIZE, ENTRYSIZE				      ; 1001
		         51	  DA   AB  3C 001F2 	    MOVZWL  GSTENTSIZE, R1					      ; 1002
	   51 00000200   8F	       51  C7 001F6 	    DIVL3   R1, #512, R1					      ;
		         6B	       51  90 001FE 	    MOVB    R1, ENTSPERBLK					      ;
		         51	       6B  9A 00201 	    MOVZBL  ENTSPERBLK, R1					      ; 1003
		         52	       51  B1 00204 	    CMPW    R1, NUMLIBSYMS					      ;
				       06  1F 00207 	    BLSSU   16$							      ;
		    01   AB	       52  90 00209 	    MOVB    NUMLIBSYMS, TOPBLKENTS				      ; 1004
				       11  11 0020D 	    BRB     17$							      ; 1003
		         51	  D8   AB  3C 0020F 16$:    MOVZWL  GSTBLOCKS, R1					      ; 1005
				       51  D7 00213 	    DECL    R1							      ;
		         53	       6B  9A 00215 	    MOVZBL  ENTSPERBLK, R3					      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 3-9
; Digital Equipment Corporation
;
		         51	       53  C4 00218 	    MULL2   R3, R1						      ;
      01   AB	         52	       51  83 0021B 	    SUBB3   R1, NUMLIBSYMS, TOPBLKENTS				      ;
		    0A   A0	       01  8A 00220 17$:    BICB2   #1, 10(R0)						      ; 1006
				  DC   AB  B4 00224 	    CLRW    GSTMISSCNT						      ; 1008
		         52	0000G  CF  D0 00227 	    MOVL    LNK$GL_UDFLST, NEXTSYM				      ; 1009
				0000G  CF  B5 0022C 18$:    TSTW    LNK$GW_NUDFSYMS					      ; 1010
				       03  12 00230 	    BNEQ    19$							      ;
				     0085  31 00232 	    BRW     23$							      ;
		         6A	       52  D0 00235 19$:    MOVL    NEXTSYM, LNK$GL_LIBSYM				      ; 1012
		         50	0000G  CF  9E 00238 	    MOVAB   LNK$GL_UDFLST, R0					      ;
		         50	       52  D1 0023D 	    CMPL    NEXTSYM, R0						      ;
				       10  12 00240 	    BNEQ    20$							      ;
		         50	0000G  CF  D0 00242 	    MOVL    LNK$GL_CURFIL, R0					      ; 1014
		         6F	  0A   A0  E9 00247 	    BLBC    10(R0), 23$						      ;
		         7A	       9A  D0 0024B 	    MOVL    @LNK$GL_LIBSYM, LNK$GL_LIBSYM			      ; 1017
		    0A   A0	       01  8A 0024E 	    BICB2   #1, 10(R0)						      ; 1019
		         50	       6A  D0 00252 20$:    MOVL    LNK$GL_LIBSYM, R0					      ; 1023
		         52	       60  D0 00255 	    MOVL    (R0), NEXTSYM					      ;
		  0000G  8F	  1E   A0  B3 00258 	    BITW    30(R0), #SYM$M_WEAK					      ; 1024
				       CC  12 0025E 	    BNEQ    18$							      ;
		  0000G  8F	  1E   A0  B3 00260 	    BITW    30(R0), #SYM$M_GSTMISS				      ; 1025
				       C4  12 00266 	    BNEQ    18$							      ;
				       5E  DD 00268 	    PUSHL   SP							      ; 1028
				  09   A0  9F 0026A 	    PUSHAB  9(R0)						      ; 1029
		         7E	  08   A0  9A 0026D 	    MOVZBL  8(R0), -(SP)					      ; 1028
		  0000V  CF	       03  FB 00271 	    CALLS   #3, FINDLIBNAME					      ;
		         33	       50  E9 00276 	    BLBC    R0, 22$						      ;
		         69	       55  B0 00279 	    MOVW    RABUSZ, LNK$AL_RAB+32				      ; 1031
		    04   A9	       56  D0 0027C 	    MOVL    RABUBF, LNK$AL_RAB+36				      ; 1032
				  08   AA  D6 00280 	    INCL    LNK$GL_NMODSRCH					      ; 1033
		    C6   AB	0000G  CF  D0 00283 	    MOVL    LNK$GL_OBJRECS, SAVEDRECOUNT			      ; 1034
				       5E  DD 00289 	    PUSHL   SP							      ; 1035
		  0000G  CF	       01  FB 0028B 	    CALLS   #1, LNK$POINTOBJ					      ;
				       5E  DD 00290 	    PUSHL   SP							      ; 1036
		  0000G  CF	       01  FB 00292 	    CALLS   #1, LNK$PROCSOBJ					      ;
		         62	       50  E9 00297 	    BLBC    R0, 28$						      ;
	   50	    FC   AA	0000G  CF  C1 0029A 	    ADDL3   LNK$GL_OBJRECS, LNK$GL_LIBRECS, R0			      ; 1037
      FC   AA	         50	  C6   AB  C3 002A1 	    SUBL3   SAVEDRECOUNT, R0, LNK$GL_LIBRECS			      ;
		         52	       6A  D0 002A7 	    MOVL    LNK$GL_LIBSYM, NEXTSYM				      ; 1039
				       80  11 002AA 21$:    BRB     18$							      ; 1028
				  DC   AB  B6 002AC 22$:    INCW    GSTMISSCNT						      ; 1043
		         50	       6A  D0 002AF 	    MOVL    LNK$GL_LIBSYM, R0					      ; 1044
		    1E   A0	0000G  8F  A8 002B2 	    BISW2   #SYM$M_GSTMISS, 30(R0)				      ; 1045
				       F0  11 002B8 	    BRB     21$							      ; 1024
				       6A  D4 002BA 23$:    CLRL    LNK$GL_LIBSYM					      ; 1049
		         52	0000G  CF  9E 002BC 	    MOVAB   LNK$GL_UDFLST, NEXTSYM				      ; 1055
				  DC   AB  B5 002C1 	    TSTW    GSTMISSCNT						      ; 1056
				       1A  13 002C4 	    BEQL    25$							      ;
		         52	       62  D0 002C6 24$:    MOVL    (NEXTSYM), NEXTSYM					      ; 1057
		         50	0000G  CF  9E 002C9 	    MOVAB   LNK$GL_UDFLST, R0					      ;
		         50	       52  D1 002CE 	    CMPL    NEXTSYM, R0						      ;
				       0D  13 002D1 	    BEQL    25$							      ;
		         50 00000000*  8F  D2 002D3 	    MCOML   #<^CSYM$M_GSTMISS>, R0				      ; 1058
		    1E   A2	       50  AA 002DA 	    BICW2   R0, 30(NEXTSYM)					      ;
				       E6  11 002DE 	    BRB     24$							      ; 1057

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 3-10
; Digital Equipment Corporation
;
		         50	  DC   AB  3C 002E0 25$:    MOVZWL  GSTMISSCNT, R0					      ; 1059
		    F8   AA	       50  C0 002E4 	    ADDL2   R0, LNK$GL_FUTLSRCH					      ;
		         50	0000G  CF  D0 002E8 26$:    MOVL    LNK$GL_CURFIL, R0					      ; 1061
		    0A   A0	       08  8A 002ED 	    BICB2   #8, 10(R0)						      ;
		         69	       55  B0 002F1 	    MOVW    RABUSZ, LNK$AL_RAB+32				      ; 1063
		    04   A9	       56  D0 002F4 	    MOVL    RABUBF, LNK$AL_RAB+36				      ; 1064
		         50	       01  D0 002F8 27$:    MOVL    #1, R0						      ; 1065
					   04 002FB 	    RET     							      ;
				       50  D4 002FC 28$:    CLRL    R0							      ; 0843
					   04 002FE 	    RET     							      ;

; Routine Size:  767 bytes


;45600  1067	ROUTINE READBLOCKS(COUNT,FIRST) : NOVALUE =
;45700  1068	BEGIN
;45800  1069	!
;45900  1070	! THIS ROUTINE DOES THE ACTUAL READ OF "COUNT" BLOCKS OF THE
;46000  1071	! LIBRARY STARTING WITH BLOCK "FIRST". THE ADDRESS AT WHICH TO
;46100  1072	! PUT THESE BLOCKS IS ASSUMED SET ALREADY IN THE RAB.
;46200  1073	!
;46300  1074	!	ERRORS ARE FATAL AND DO NOT RETURN.
;46400  1075	!
;46500  1076	GLOBAL
;46600  1077		LNK$GL_LBBLKRDS,				! ACCUMULATED NUMBER OF READS OF ALL LIBRARIES
;46700  1078		LNK$GL_NBLKSRED;				! TOTAL NUMBER OF BLOCKS READ
;46800  1079	!
;46900  1080	LOCAL
;47000  1081		READERROR;
;47100  1082	BIND
;47200  1083		AUXFNB = LNK$GL_CURFIL[FDB$AL_AUXFNB] : BLOCK[NAM$C_BLN,BYTE];	! AUXILIARY FILE NAME BLOCK IN FDB
;47300  1084	!
;47400  1085	LNK$AL_RAB[RAB$L_BKT] = .FIRST;						! SET STARTING VBN
;47500  1086	LNK$AL_RAB[RAB$W_USZ] = .COUNT*512;					! AND SET THE BYTE COUNT
;47600  1087	IF NOT (READERROR = $READ(RAB = LNK$AL_RAB))				! ATTEMPT TO READ LIBRARY, USING
;47700  1088	THEN BEGIN								! BUFFER ALREADY SET UP
;47800  1089		LNK$ERRMSG(ERM$C_REDERR,SEV$C_INFOR,.LNK$GB_PASS,		! 
;47900  1090				.AUXFNB[NAM$B_RSL],.AUXFNB[NAM$L_RSA]);		! IF ANY ERROR, ISSUE
;48000  1091		LNK$CLOSCURFIL();						! THE MESSAGES AND ATTEMPT TO
;48100  1092		LNK$ERRMSG(ERM$C_UNMCOD,SEV$C_INFOR,				! CLOSE IT
;48200  1093				LNK$GL_CURFIL[FDB$Q_USRNAMDSC],.READERROR);	! IT IS ALL OVER NOW.
;48210  1094		LNK$ERRMSG(.READERROR AND NOT 7,SEV$C_FATAL,
;48220  1095				.LNK$AL_RAB[RAB$L_STV]);
;48300  1096	     END;
;48400  1097	LNK$GL_LBBLKRDS = .LNK$GL_LBBLKRDS + 1;					! COUNT ANOTHER READ OPERATION
;48500  1098	LNK$GL_NBLKSRED = .LNK$GL_NBLKSRED + .COUNT;				! AND ACCUMULATE NUMBER OF BLOCKS READ
;48600  1099	END;



							    .PSECT  $GLOBAL$,NOEXE,2

					      00014 LNK$GL_LBBLKRDS::
							    .BLKB   4
					      00018 LNK$GL_NBLKSRED::

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 3-11
; Digital Equipment Corporation
;
							    .BLKB   4

							    .GLOBL  SYS$READ

							    .PSECT  $CODE$,NOWRT,2

					 0C0C 002FF READBLOCKS:
							    .WORD   Save R2,R3,R10,R11					      ; 1067
		         5A	0000G  CF  9E 00301 	    MOVAB   LNK$ERRMSG, R10					      ;
		         5B	       00  D0 00306 	    MOVL    #SEV$C_INFOR, R11					      ;
	   52	  0000G  CF	       13  C1 00309 	    ADDL3   #19, LNK$GL_CURFIL, R2				      ; 1083
		  0000G  CF	  08   AC  D0 0030F 	    MOVL    FIRST, LNK$AL_RAB+56				      ; 1085
    0000G  CF	    04   AC	0200   8F  A5 00315 	    MULW3   #512, COUNT, LNK$AL_RAB+32				      ; 1086
				0000G  CF  9F 0031E 	    PUSHAB  LNK$AL_RAB						      ; 1087
	      00000000G  9F	       01  FB 00322 	    CALLS   #1, @#SYS$READ					      ;
		         53	       50  D0 00329 	    MOVL    R0, READERROR					      ;
		         3B	       53  E8 0032C 	    BLBS    READERROR, 1$					      ;
				  04   A2  DD 0032F 	    PUSHL   4(R2)						      ; 1089
		         7E	  03   A2  9A 00332 	    MOVZBL  3(R2), -(SP)					      ;
		         7E	0000G  CF  9A 00336 	    MOVZBL  LNK$GB_PASS, -(SP)					      ;
		         7E	       5B  9A 0033B 	    MOVZBL  R11, -(SP)						      ;
		         7E	  00G  8F  9A 0033E 	    MOVZBL  #ERM$C_REDERR, -(SP)				      ;
		         6A	       05  FB 00342 	    CALLS   #5, LNK$ERRMSG					      ;
		  0000G  CF	       00  FB 00345 	    CALLS   #0, LNK$CLOSCURFIL					      ; 1091
				       53  DD 0034A 	    PUSHL   READERROR						      ; 1092
	   7E	  0000G  CF	       0B  C1 0034C 	    ADDL3   #11, LNK$GL_CURFIL, -(SP)				      ; 1093
		         7E	       5B  9A 00352 	    MOVZBL  R11, -(SP)						      ; 1092
		         7E	  00G  8F  9A 00355 	    MOVZBL  #ERM$C_UNMCOD, -(SP)				      ;
		         6A	       04  FB 00359 	    CALLS   #4, LNK$ERRMSG					      ;
				0000G  CF  DD 0035C 	    PUSHL   LNK$AL_RAB+12					      ; 1094
		         7E	       00  9A 00360 	    MOVZBL  #SEV$C_FATAL, -(SP)					      ;
	   7E	         53	       07  CB 00363 	    BICL3   #7, READERROR, -(SP)				      ;
		         6A	       03  FB 00367 	    CALLS   #3, LNK$ERRMSG					      ;
				0000'  CF  D6 0036A 1$:     INCL    LNK$GL_LBBLKRDS					      ; 1097
		  0000'  CF	  04   AC  C0 0036E 	    ADDL2   COUNT, LNK$GL_NBLKSRED				      ; 1098
					   04 00374 	    RET     							      ; 1067

; Routine Size:  118 bytes


;48700  1100	GLOBAL ROUTINE LNK$LIBBUFDEAL : NOVALUE =
;48800  1101	BEGIN
;48900  1102	!
;49000  1103	!	THIS ROUTINE IS CALLED AT THE END OF PASS 1 TO DEALLOCATE
;49100  1104	!	THE BUFFER USED FOR LIBRARY PROCESSING AND THE CLI WORK AREA
;49200  1105	!	WHICH WAS RETAINED FOR POSSIBLE  MODULE EXTRACTION
;49300  1106	!
;49400  1107	IF .LNK$GL_CLIWORK NEQ 0			! IF THERE IS STILL AN AREA
;49500  1108	THEN LNK$DEALBLK(CLI$C_WORKAREA,.LNK$GL_CLIWORK);	! THEN DE-ALLOCATE IT
;49600  1109	IF .TABLEADR NEQ 0					! IF THERE IS A LIBRARY NAME TABLE
;49700  1110	THEN BEGIN						! BUFFER 
;49800  1111		LNK$DEALBLK(.TABLESIZE^9,.TABLEADR);		! GO DEALLOCATE IT
;49900  1112		TABLEADR = 0;					! AND FORGET WHERE IT WAS
;50000  1113	     END;
;50100  1114	RETURN;						! AND ALL DONE

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 3-12
; Digital Equipment Corporation
;
;50200  1115	END;





					 0000 00375 	    .ENTRY  LNK$LIBBUFDEAL, Save nothing			      ; 1100
		         50	0000G  CF  D0 00377 	    MOVL    LNK$GL_CLIWORK, R0					      ; 1107
				       0B  13 0037C 	    BEQL    1$							      ;
				       50  DD 0037E 	    PUSHL   R0							      ; 1108
		         7E	  80   8F  9A 00380 	    MOVZBL  #128, -(SP)						      ;
		  0000G  CF	       02  FB 00384 	    CALLS   #2, LNK$DEALBLK					      ;
		         50	0000'  CF  D0 00389 1$:     MOVL    TABLEADR, R0					      ; 1109
				       14  13 0038E 	    BEQL    2$							      ;
				       50  DD 00390 	    PUSHL   R0							      ; 1111
		         50	0000'  CF  3C 00392 	    MOVZWL  TABLESIZE, R0					      ;
	   7E	         50	       09  78 00397 	    ASHL    #9, R0, -(SP)					      ;
		  0000G  CF	       02  FB 0039B 	    CALLS   #2, LNK$DEALBLK					      ;
				0000'  CF  D4 003A0 	    CLRL    TABLEADR						      ; 1112
					   04 003A4 2$:     RET     							      ; 1100

; Routine Size:  48 bytes


;50300  1116	ROUTINE FINDLIBNAME (TARGNAMLNG,TARGNAMADR,MODULERFA) =
;50400  1117	!
;50500  1118	!++
;50600  1119	! FUNCTIONAL DESCRIPTION:
;50700  1120	!
;50800  1121	!	THIS ROUTINE SEARCHES LIBRARY NAME TABLES (EITHER MODULE
;50900  1122	!	NAME TABLE (MNT) OR GLOBAL SYMBOL TABLE (GST) FOR SPECIFIED
;51000  1123	!	NAMES. THE ALGORITHM IS A BINARY SEARCH. SEE BELOW FOR
;51100  1124	!	DETAILED DESCRIPTION.
;51200  1125	!
;51300  1126	! FORMAL PARAMETERS:
;51400  1127	!
;51500  1128	!	TARGNAMLNG = LENGTH OF DESIRED NAME
;51600  1129	!
;51700  1130	!	TARGNAMADR = ADDRESS OF DESIRED NAME
;51800  1131	!	MODULERFA = ADDRESS OF A BLOCK IN WHICH TO  RETURN THE
;51900  1132	!			 RFA OF THE INDEXED
;52000  1133	!			MODULE IF NAME WAS FOUND
;52100  1134	!
;52200  1135	! IMPLICIT INPUTS:
;52300  1136	!
;52400  1137	!	MODULE OWN VARIABLES:
;52500  1138	!
;52600  1139	!	SRCHBASEBLK = VIRTUAL BLOCK NUMBER OF THE START OF
;52700  1140	!		      THE TABLE TO BE SEARCHED
;52800  1141	!	SRCHBLOCKS = NUMBER OF BLOCKS IN THE TABLE TO BE SEARCHED
;52900  1142	!
;53000  1143	!	ROUTINE OWN VARIABLES:
;53100  1144	
;53200  1145	!		LASTLIBFILE = IDENTIFIER OF THE LIBRARY FILE THAT
;53300  1146	!			      WAS THE TARGET OF THE PREVIOUS CALL.

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 3-13
; Digital Equipment Corporation
;
;53400  1147	
;53500  1148	!		WINDOWBASEBLK = VIRTUAL BLOCK NUMBER OF THE WINDOW
;53600  1149	!			        USED FOR THE SEARCH OF PREVIOUS CALL
;53700  1150	
;53800  1151	!		WINDOWTOPBLK = TOP VIRTUAL BLOCK OF PREVIOUS SEARCH
;53900  1152	!				WINDOW
;54000  1153	
;54100  1154	!		TABLEADR = ADDRESS OF THE TABLE WINDOW BUFFER
;54200  1155	!			   (ALLOCATED ON  FIRST CALL ONLY).
;54300  1156	
;54400  1157	!		TRIALENT   THE TRIPLET DESCRIBING THE TABLE
;54500  1158	!		TRIALRBN = ENTRY WHICH WAS THE SUBJECT OF THE LAST
;54600  1159	!		TRIALADR   COMPARISON OF THE PREVIOUS CALL
;54700  1160	
;54800  1161	!
;54900  1162	! ROUTINE OUTPUTS:
;55000  1163	!
;55100  1164	!	THE NAME IS FOUND IN THE SEARCH TABLE:
;55200  1165	
;55300  1166	!		ROUTINE VALUE = TRUE
;55400  1167	
;55500  1168	!		ADDRESS AT "MODULERFA" IN ARGUMENT LIST IS USED
;55600  1169	!		AS A POINTER TO A BLOCK TO RECEIVE THE RECORD
;55700  1170	!		FILE ADDRESS OF THE START OF THE ASSOCIATED
;55800  1171	!		MODULE. THE RFA FORMAT IS 4 BYTES OF VBN 
;55900  1172	!		FOLLOWED BY A 2 BYTE OFFSET WITHIN.
;56000  1173	
;56100  1174	!	IF NAME IS NOT FOUND ROUTINE VALUE = FALSE.
;56200  1175	
;56300  1176	! IMPLICIT OUTPUTS:
;56400  1177	
;56500  1178	!	SEE IMPLICIT INPUTS ABOVE
;56600  1179	
;56700  1180	! SIDE EFFECTS:
;56800  1181	
;56900  1182	!	ANY FILE READ ERRORS ARE FATAL.
;57000  1183	!	A BUFFER OF SIZE LNK$K_LIBBLOCKS PAGES IS ALLOCATED.
;57100  1184	!
;57200  1185	! ALGORITHM:
;57300  1186	!
;57400  1187	!		T.B.S.
;57500  1188	!
;57600  1189	BEGIN
;57700  1190	!
;57800  1191	MAP MODULERFA : REF BLOCK[,BYTE];
;57900  1192	!
;58000  1193	BIND
;58100  1194		AUXFNB = LNK$GL_CURFIL[FDB$AL_AUXFNB] : BLOCK[NAM$C_BLN,BYTE],	! AUXILIARY FILE NAME BLOCK IN FDB
;58200  1195		FILNUMSEQ = AUXFNB[NAM$W_FID] : LONG;				! THE FILE ID (NUM AND SEQUENCE)
;58300  1196	!
;58400  1197	OWN
;58500  1198		LASTLIBFILE,				! SAVED POINTER OF LAST
;58600  1199		WINDOWBASEBLK : WORD,			! LIBRARY FILE SEARCHED AND
;58700  1200		WINDOWTOPBLK : WORD,			! THE VBNS OF WINDOW USED
;58800  1201		WINDOWBLOCKS : WORD,			! NUMBER OF BLOCKS IN CURRENT WINDOW

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 3-14
; Digital Equipment Corporation
;
;58900  1202		TRIALENT : BYTE,			! TRIAL TABLE ENTRY'S NUMBER
;59000  1203		TRIALRBN : BYTE,			! WITHIN BLOCK AND RELATIVE
;59100  1204		TRIALADR : REF BLOCK[,BYTE],		! BLOCK WITHIN WINDOW AND
;59200  1205							! POINTER TO ENTRY IN TABLE
;59300  1206		LOLIMITENT : BYTE,			! LOWEST POSSIBLE NAME ENTRY
;59400  1207		LOLIMITRBN : BYTE,			! WITHIN BLOCK WITHIN WINDOW
;59500  1208		LOLIMITADR : REF BLOCK[,BYTE],		! AND ITS ADDRESS IN TABLE
;59600  1209		HILIMITENT : BYTE,			! DITTO FOR HIGHEST
;59700  1210		HILIMITRBN : BYTE,			! POSSIBLE NAME ENTRY
;59800  1211		HILIMITADR : REF BLOCK[,BYTE];		! IN TABLE.
;59900  1212	LOCAL
;60000  1213		TRIALBLOCKOFF,
;60100  1214		ENTRYOFF,
;60200  1215		MOVEFLAG,				! DIRECTION MOVEMENT CONTROL
;60300  1216		READWINDOW;				! WINDOW READ FLAG
;60400  1217	!
;60500  1218	MOVEFLAG = 0;					! RESET THE DIRECTION OF LAST READ
;60600  1219	IF .TABLEADR EQL 0				! IF NO BUFFER HAS BEEN
;60700  1220	THEN BEGIN					! ALLOCATED
;60800  1221		READWINDOW = 1;				! SET TO READ FIRST WINDOW
;60900  1222		WINDOWTOPBLK = .SRCHBASEBLK-1;		! OF SEARCH RANGE BY SETTING TOP
;61000  1223		LASTLIBFILE = .FILNUMSEQ;		! REMEMBER THE FILE ID
;61100  1224	     END					! TO ONE BEFORE THE FIRST TO BE READ
;61200  1225	ELSE BEGIN					! IF THE CURRENT WINDOW IS
;61300  1226		IF .WINDOWBASEBLK GEQU .SRCHBASEBLK	! COMPLETELY WITHIN THE SEARCH
;61400  1227		AND .WINDOWTOPBLK LEQU .SRCHTOPBLK	! RANGE OR CONTAINS IT
;61500  1228		AND .LASTLIBFILE EQL .FILNUMSEQ		! AND IT IS THE SAME FILE
;61600  1229		THEN BEGIN				! COMPARE TARGET SYMBOL
;61700  1230	!
;61800  1231			IF CH$EQL(.TARGNAMLNG,.TARGNAMADR,.TRIALADR[LNE$B_NAMLNG],TRIALADR[LNE$T_NAME])
;61900  1232	!
;62000  1233			THEN BEGIN						! WITH LAST TRIAL
;62100  1234				MODULERFA[MODVBN]=.TRIALADR[LNE$W_MODVBN];	! AND IF EQUAL
;62200  1235				MODULERFA[MODBYTE]=.TRIALADR[LNE$W_MODBYTOFF];	! COMPUTE MODULE'S
;62300  1236				RETURN TRUE;					! RFA AND RETURN
;62400  1237			     END
;62500  1238			ELSE IF CH$LSS(.TARGNAMLNG,.TARGNAMADR,.TRIALADR[LNE$B_NAMLNG],TRIALADR[LNE$T_NAME])
;62600  1239				THEN BEGIN					! IF IT IS LESS
;62700  1240					IF .TRIALENT EQL 0			! AND IF TRIAL
;62800  1241					AND .TRIALRBN EQL 0			! IS FIRST IN WINDOW
;62900  1242					THEN READWINDOW = -1			! THEN SET TO READ BACKWARDS
;63000  1243					ELSE BEGIN				!  IF LESS
;63100  1244						READWINDOW = 0;
;63200  1245						SETHILIMIT(TRIAL,,-1)		! AND NOT FIRST IN WINDOW
;63300  1246						SETLOLIMIT(LOLIMIT,0,0)		! LOW LIMIT IS THE FIRST
;63400  1247						MOVEFLAG = -1;			! SET FOR MOVED BACKWARDS
;63500  1248					    END;				! AND ENTRY BEFORE THE TRIAL
;63600  1249			             END					! IS THE HIGHEST POSSIBLE
;63700  1250				ELSE BEGIN					! TARGET IS GREATER
;63800  1251										! THAN LAST TRIAL .IF
;63900  1252					IF .TRIALRBN EQL .WINDOWBLOCKS-1	! LAST IN WINDOW, SET
;64000  1253					AND (.TRIALENT EQL .ENTSPERBLK-1
;64100  1254						OR (.WINDOWTOPBLK EQL .SRCHTOPBLK
;64200  1255						AND .TRIALENT EQL .TOPBLKENTS-1))
;64300  1256					THEN READWINDOW=1			! TO READ NEXT WINDOW

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 3-15
; Digital Equipment Corporation
;
;64400  1257					ELSE BEGIN				! GREATER BUT TRIAL IS NOT
;64500  1258						READWINDOW = 0;			! LAST IN WINDOW, SO
;64600  1259						IF .WINDOWTOPBLK EQL .SRCHTOPBLK
;64700  1260						THEN ENTRYOFF = .TOPBLKENTS -1
;64800  1261						ELSE ENTRYOFF = .ENTSPERBLK -1;
;64900  1262						SETHILIMIT(HILIMIT,.WINDOWBLOCKS-1,! HIGH LIMIT IS TOP OF
;65000P 1263							.ENTRYOFF)		! WINDOW AND
;65100  1264						SETLOLIMIT(TRIAL,,1)		! LOWEST POSSIBLE IS TRIAL
;65200  1265						MOVEFLAG = 1;			! SET AS MOVED FORWARD
;65300  1266					    END;				! PLUS 1
;65400  1267				     END;
;65500  1268		     END

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 4
; Digital Equipment Corporation
;
;00100  1269		ELSE BEGIN							! CURRENT WINDOW IS
;00200  1270			READWINDOW=1;						! NO USE, SET TO
;00300  1271			WINDOWTOPBLK=.SRCHBASEBLK-1;				! READ THE FIRST
;00400  1272			LASTLIBFILE = .FILNUMSEQ;				! AND REMEMBER THIS FILE ID.
;00500  1273		     END;
;00600  1274	     END;
;00700  1275	WHILE TRUE DO								! BEGIN AN INFINITE LOOP
;00800  1276	BEGIN
;00900  1277		IF .READWINDOW NEQ 0						! ANOTHER WINDOW TO BE READ?
;01000  1278		THEN BEGIN
;01100  1279			IF .READWINDOW LSS 0					! IF FLAG NEGATIVE, READ
;01200  1280		 								! BACKWARDS, PROVIDED LAST WAS
;01300  1281			THEN IF .MOVEFLAG GTR 0					! NOT A FORWARD MOVE
;01400  1282				THEN RETURN FALSE				! IN WHICH
;01500  1283				ELSE BEGIN					! CASE NAME CANNOT BE HERE
;01600  1284					IF .WINDOWBASEBLK EQL .SRCHBASEBLK	! ALSO IF BACK AT FIRST WINDOW
;01700  1285					THEN RETURN FALSE;			! IT'S ALL OVER
;01800  1286					WINDOWBASEBLK=.WINDOWBASEBLK-		! OTHERWISE SET UP THE
;01900  1287						LNK$K_LIBBLOCKS;		! WINDOW AS FULL
;02000  1288					WINDOWTOPBLK=.WINDOWTOPBLK-.WINDOWBLOCKS;	! SINCE MUST HAVE BEEN
;02100  1289											! ONE BEFORE
;02200  1290					MOVEFLAG=-1;				! AT BASE OF SEARCH RANGE
;02300  1291				     END					! REMEMBERING THIS FACT
;02400  1292										! READ NEXT WINDOW UP IN
;02500  1293			ELSE IF .MOVEFLAG LSS 0					! THE SEARCH RANGE, PROVIDED
;02600  1294				THEN RETURN FALSE				! WE HAVEN'T REACHED THE
;02700  1295				ELSE BEGIN					! END ALREADY AND PROVIDED
;02800  1296										! DID NOT REVERSE LAST TIME
;02900  1297					IF .WINDOWTOPBLK EQL .SRCHTOPBLK	! 
;03000  1298					THEN RETURN FALSE;			! IN WHICH CASE NAME CANNOT BE HERE
;03100  1299					WINDOWBASEBLK = .WINDOWTOPBLK + 1;	! SET BLOCK RANGE OF
;03200  1300					WINDOWTOPBLK=MINU(.SRCHTOPBLK,		! NEW WINDOW TO NEXT AND
;03300  1301						(.WINDOWBASEBLK+
;03400  1302							LNK$K_LIBBLOCKS-1));	! PERHAPS LAST OF RANGE
;03500  1303					MOVEFLAG=1;				! FOR NEXT TIME TO SUPPRESS BACKUP
;03600  1304				     END;
;03700  1305			WINDOWBLOCKS = .WINDOWTOPBLK - .WINDOWBASEBLK + 1;	! CALCULATE NUMBER OF BLOCKS IN WINDOW
;03800  1306			IF .TABLESIZE NEQ .WINDOWBLOCKS				! IF THE BUFFER IS NOT EXACTLY THAT SIZE
;03900  1307			THEN BEGIN						!
;04000  1308				IF .TABLEADR NEQ 0				! AND THERE IS ONE
;04100  1309				THEN LNK$DEALBLK(.TABLESIZE^9,.TABLEADR);	! GO DEALLOCATE
;04200  1310				LNK$ALLOBLK(.WINDOWBLOCKS^9,TABLEADR);		! THEN ALLOCATE ONE THAT SIZE
;04300  1311				TABLESIZE = .WINDOWBLOCKS;			! AND REMEMBER IT
;04400  1312			     END;
;04500  1313			LNK$AL_RAB[RAB$L_UBF] = .TABLEADR;			! SET ADDRESS OF BUFFER
;04600  1314			READBLOCKS(.WINDOWBLOCKS,.WINDOWBASEBLK);		! READ THE WINDOW
;04700  1315			SETLOLIMIT(LOLIMIT,0,0)					! LOW LIMIT ON SEARCK IS FIRST ENTRY
;04800  1316			IF .WINDOWTOPBLK EQL .SRCHTOPBLK
;04900  1317			THEN ENTRYOFF = .TOPBLKENTS -1
;05000  1318			ELSE ENTRYOFF = .ENTSPERBLK -1;
;05100  1319			SETHILIMIT(HILIMIT,.WINDOWBLOCKS-1,.ENTRYOFF)		! HIGH LIMIT IS THE LAST
;05200  1320			SETRIAL(HILIMIT,,)					! INITIALIZE THE LAST TRIAL
;05300  1321		     END;							! AND ALL SET TO SEARCH IT
;05400  1322	!
;05500  1323	! WE NOW HAVE A VALID WINDOW AND THE HIGHEST AND LOWEST POSSIBLE

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 4-1
; Digital Equipment Corporation
;
;05600  1324	! ENTRIES IN THIS WINDOW HAVE BEEN SET.
;05700  1325	! NOW COMPARE THE TARGET NAME AGAINST THESE LIMITS
;05800  1326	! AND IF OUTSIDE SET UP FOR A WINDOW READ.
;05900  1327	! IF BETWEEN, BEGIN BINARY SEARCH WITH ADJUSTED LIMITS
;06000  1328	! AND A TRIAL HALF WAY BETWEEN.
;06100  1329	!
;06200  1330		IF CH$EQL (.TARGNAMLNG,.TARGNAMADR,.HILIMITADR[LNE$B_NAMLNG],HILIMITADR[LNE$T_NAME])
;06300  1331		THEN BEGIN									! IF REQUIRED NAME IS
;06400  1332			MODULERFA[MODVBN] = .HILIMITADR[LNE$W_MODVBN];				! EQUAL TO UPPER LIMIT
;06500  1333												! RETURN THE RFA
;06600  1334			MODULERFA[MODBYTE] = .HILIMITADR[LNE$W_MODBYTOFF];			! OF TOP LIMIT ENTRY
;06700  1335		     RETURN TRUE;
;06800  1336		     END
;06900  1337		ELSE BEGIN
;07000  1338		     IF CH$GTR(.TARGNAMLNG,.TARGNAMADR,.HILIMITADR[LNE$B_NAMLNG],	! IF REQUIRED NAME
;07100  1339					HILIMITADR[LNE$T_NAME])				! IS GREATER THAN TOP
;07200  1340		     THEN READWINDOW = 1						! LIMIT, THEN SET TO
;07300  1341		     ELSE BEGIN								! READ NEXT UP
;07400  1342			IF .HILIMITRBN EQL 0						! IF LESS THAN HIGH
;07500  1343			AND .HILIMITENT EQL 0						! LIMIT, AND HIGH LIMIT
;07600  1344											! IS FIRST IN WINDOW
;07700  1345			THEN READWINDOW = -1						! THEN SET FOR FIRST
;07800  1346			ELSE BEGIN							! WINDOW READ
;07900  1347			     IF CH$EQL(.TARGNAMLNG,.TARGNAMADR,				! OTHERWISE COMPARE
;08000  1348					.LOLIMITADR[LNE$B_NAMLNG],			! WITH LOW LIMIT AND
;08100  1349					LOLIMITADR[LNE$T_NAME])				! IF EQUAL, RETURN
;08200  1350			      THEN BEGIN						! RFA NOW
;08300  1351				   MODULERFA[MODVBN] = .LOLIMITADR[LNE$W_MODVBN];	!
;08400  1352				   MODULERFA[MODBYTE] = .LOLIMITADR[LNE$W_MODBYTOFF];
;08500  1353				   SETRIAL(LOLIMIT,,)					! AND REMEMBER IT FOR NEXT TIME
;08600  1354				   RETURN TRUE;
;08700  1355				   END
;08800  1356			      ELSE IF CH$LSS(.TARGNAMLNG,.TARGNAMADR,			! NOT EQUAL BUT
;08900  1357					     .LOLIMITADR[LNE$B_NAMLNG],			! IF LESS, SET
;09000  1358					      LOLIMITADR[LNE$T_NAME])			! TO READ FIRST
;09100  1359	           		   THEN READWINDOW = -1					! WINDOW.
;09200  1360				   ELSE IF .LOLIMITRBN EQL 				! IF GREATER THAN
;09300  1361						.WINDOWBLOCKS-1				! LOLIMIT, PROVIDED
;09400  1362				        AND (.LOLIMITENT EQL .ENTSPERBLK-1		! THAT IS NOT LAST
;09500  1363					     OR (.WINDOWTOPBLK EQL .SRCHTOPBLK		! OF WINDOW, THE
;09600  1364						AND .LOLIMITENT EQL .TOPBLKENTS-1))
;09700  1365					THEN READWINDOW = 1				! BLOCK (SET READ UP)
;09800  1366					ELSE EXITLOOP;					! WE HAVE THE WINDOW
;09900  1367	                      END;							! CONTAINING THE RE-
;10000  1368	                  END;								! QUIRED NAME, IF
;10100  1369		     END;								! IT IS IN TABLE
;10200  1370	END;
;10300  1371	!
;10400  1372	!	NOW BEGIN BINARY SEARCH OF THE WINDOW, AFTER ADJUSTING
;10500  1373	!	LOW LIMIT UP ONE AND HIGH LIMIT DOWN ONE; UNLESS THEY
;10600  1374	!	ARE THE SAME, IN WHICH CASE REQUIRED NAME IS
;10700  1375	!	NOT HERE.
;10800  1376	!
;10900  1377		IF .LOLIMITADR EQL .HILIMITADR
;11000  1378		THEN RETURN FALSE;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 4-2
; Digital Equipment Corporation
;
;11100  1379		SETLOLIMIT(LOLIMIT,,1)							! LIMITS ARE NOT SAME, SO
;11200  1380		IF .LOLIMITADR NEQ .HILIMITADR
;11300  1381		THEN SETHILIMIT(HILIMIT,,-1)						! INCREMENT LOW AND DECR.HIGH
;11400  1382		WHILE .LOLIMITRBN NEQ .HILIMITRBN					! LOOP UNTIL WE HAVE BOTH
;11500  1383		DO BEGIN								! LIMITS ON THE SAME BLOCK
;11600  1384			TRIALBLOCKOFF = (.HILIMITRBN-.LOLIMITRBN+1)/2;			! CALCULATE A TRIAL ENTRY
;11700  1385			IF (.LOLIMITRBN+.TRIALBLOCKOFF) EQL				! HALF WAY BETWEEN
;11800  1386			    (.HILIMITRBN-.TRIALBLOCKOFF)				! THAT IS, MIDDLE
;11900  1387			THEN ENTRYOFF = (.ENTSPERBLK+1)/2				! ENTRY OF MIDBLOCK
;12000  1388											! OR FIRST ENTRY OF
;12100  1389			ELSE ENTRYOFF = 0;						! MIDPOINT HIGHER
;12200  1390											! BLOCK IF MID POINT
;12300  1391			SETRIAL(LOLIMIT,.TRIALBLOCKOFF+.LOLIMITRBN,.ENTRYOFF)		! IS A BLOCK BOUNDARY
;12400  1392			IF CH$EQL(.TARGNAMLNG,.TARGNAMADR,.TRIALADR[LNE$B_NAMLNG],	! COMPARE REQUIRED NAME
;12500  1393					TRIALADR[LNE$T_NAME])				! AND IF EQUAL, SET
;12600  1394			THEN BEGIN							! UP RETURN VALUES
;12700  1395				MODULERFA[MODVBN]=.TRIALADR[LNE$W_MODVBN];
;12800  1396				MODULERFA[MODBYTE]=.TRIALADR[LNE$W_MODBYTOFF];
;12900  1397				RETURN TRUE;						! AND ALL DONE
;13000  1398			     END;
;13100  1399			IF CH$GTR(.TARGNAMLNG,.TARGNAMADR,.TRIALADR[LNE$B_NAMLNG],	! IF THE REQUIRED
;13200  1400					TRIALADR[LNE$T_NAME])				! IS GREATER, UP DATE
;13300  1401			THEN BEGIN							! LOLIMIT TO TRIAL+1
;13400  1402				SETLOLIMIT(TRIAL,,1)		
;13500  1403			     END
;13600  1404			ELSE BEGIN							! IF LESS, UPDATE
;13700  1405			     SETHILIMIT(TRIAL,,-1)					! HIGH LIMIT TO
;13800  1406			     END;							! TRIAL-1
;13900  1407		END;									! END OF LOOP
;14000  1408	!
;14100  1409	!	BOTH LIMITS ARE NOW ON THE SAME BLOCK. START HALF WAY
;14200  1410	!	BETWEEN LIMITS AND STEP TOWARD HIGH LIMIT IF TARGET IS
;14300  1411	!	GREATER, TOWARD LOW LIMIT IF TARGET IS LESS.
;14400  1412	!
;14500  1413		SETRIAL(LOLIMIT,,(.HILIMITENT-.LOLIMITENT)/2)				! SET TRIAL AT MID
;14600  1414		MOVEFLAG = 0;								! POINT ENTRY AND CLEAR DIRECTION
;14700  1415		DO BEGIN								! LOOP UNTIL WE HIT THE LIMIT
;14800  1416			IF CH$GTR(.TARGNAMLNG,.TARGNAMADR,.TRIALADR[LNE$B_NAMLNG],	! IF TARGET IS
;14900  1417					TRIALADR[LNE$T_NAME])				! GREATER THAN THE
;15000  1418			THEN IF .MOVEFLAG EQL -1					! TRIAL, AND WERE MOVING
;15100  1419			     THEN RETURN FALSE						! BACKWARDS - NOT HERE
;15200  1420			     ELSE BEGIN							! OTHERWISE MOVE
;15300  1421			     	MOVEFLAG = 1;						! FORWARD TO NEXT
;15400  1422				SETRIAL(TRIAL,,1)					! ENTRY.
;15500  1423				   END
;15600  1424			ELSE IF CH$EQL(.TARGNAMLNG,.TARGNAMADR,				! IF TARGET IS EQUAL
;15700  1425					.TRIALADR[LNE$B_NAMLNG],			! TO THE TRIAL
;15800  1426					TRIALADR[LNE$T_NAME])				! RETURN THE PARA-
;15900  1427			     THEN BEGIN							! METERS
;16000  1428				MODULERFA[MODVBN] = .TRIALADR[LNE$W_MODVBN];
;16100  1429				MODULERFA[MODBYTE] = .TRIALADR[LNE$W_MODBYTOFF];
;16200  1430				RETURN TRUE;
;16300  1431				  END
;16400  1432			     ELSE IF .MOVEFLAG EQL 1					! TARGET SYMBOL IS
;16500  1433				THEN RETURN FALSE					! LESS, SO IF WE WERE

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 4-3
; Digital Equipment Corporation
;
;16600  1434				ELSE BEGIN						! MOVING FORWARD - NAME
;16700  1435					MOVEFLAG = -1;					! NOT HERE. OTHERWISE
;16800  1436					SETRIAL(TRIAL,,-1)				! MOVE BACK ONE
;16900  1437				     END;
;17000  1438		   END
;17100  1439		UNTIL .TRIALENT EQL .LOLIMITENT						! LOOP UNTIL AT THE LOW
;17200  1440		OR .TRIALENT EQL .HILIMITENT;						! OR HIGH LIMIT
;17300  1441	!
;17400  1442	!	TRIAL ENTRY IS AT ONE OF THE LIMITS. CHECK FOR
;17500  1443	!	 A MATCH AND RETURN VALUES
;17600  1444	!
;17700  1445		IF CH$EQL(.TARGNAMLNG,.TARGNAMADR,.TRIALADR[LNE$B_NAMLNG],
;17800  1446				TRIALADR[LNE$T_NAME])
;17900  1447		THEN BEGIN
;18000  1448			MODULERFA[MODVBN] = .TRIALADR[LNE$W_MODVBN];
;18100  1449			MODULERFA[MODBYTE] = .TRIALADR[LNE$W_MODBYTOFF];
;18200  1450			RETURN TRUE;
;18300  1451		     END
;18400  1452		ELSE RETURN FALSE;
;18500  1453	END;



							    .PSECT  $OWN$,NOEXE,2

					      0003C LASTLIBFILE:
							    .BLKB   4
					      00040 WINDOWBASEBLK:
							    .BLKB   2
					      00042 WINDOWTOPBLK:
							    .BLKB   2
					      00044 WINDOWBLOCKS:
							    .BLKB   2
					      00046 TRIALENT:
							    .BLKB   1
					      00047 TRIALRBN:
							    .BLKB   1
					      00048 TRIALADR:
							    .BLKB   4
					      0004C LOLIMITENT:
							    .BLKB   1
					      0004D LOLIMITRBN:
							    .BLKB   1
					      0004E	    .BLKB   2
					      00050 LOLIMITADR:
							    .BLKB   4
					      00054 HILIMITENT:
							    .BLKB   1
					      00055 HILIMITRBN:
							    .BLKB   1
					      00056	    .BLKB   2
					      00058 HILIMITADR:
							    .BLKB   4



; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 4-4
; Digital Equipment Corporation
;

							    .PSECT  $CODE$,NOWRT,2

					 0FFC 003A5 FINDLIBNAME:
							    .WORD   Save R2,R3,R4,R5,R6,R7,R8,R9,R10,R11		      ; 1116
		         5B	0000'  CF  9E 003A7 	    MOVAB   TRIALENT, R11					      ;
	   50	  0000G  CF	       13  C1 003AC 	    ADDL3   #19, LNK$GL_CURFIL, R0				      ; 1194
		         50	       24  C0 003B2 	    ADDL2   #36, R0						      ; 1195
				       57  D4 003B5 	    CLRL    MOVEFLAG						      ; 1218
		         55	  BE   AB  D0 003B7 	    MOVL    TABLEADR, R5					      ; 1219
				       03  12 003BB 	    BNEQ    2$							      ;
				     0162  31 003BD 1$:     BRW     16$							      ;
		    EE   AB	  FA   AB  B1 003C0 2$:     CMPW    WINDOWBASEBLK, SRCHBASEBLK				      ; 1226
				       F6  1F 003C5 	    BLSSU   1$							      ;
		    F0   AB	  FC   AB  B1 003C7 	    CMPW    WINDOWTOPBLK, SRCHTOPBLK				      ; 1227
				       EF  1A 003CC 	    BGTRU   1$							      ;
		         60	  F6   AB  D1 003CE 	    CMPL    LASTLIBFILE, (R0)					      ; 1228
				       E9  12 003D2 	    BNEQ    1$							      ;
		         54	  02   AB  D0 003D4 	    MOVL    TRIALADR, R4					      ; 1231
		         51	  04   A4  9A 003D8 	    MOVZBL  4(R4), R1						      ;
	   00	    08   BC	  04   AC  2D 003DC 	    CMPC5   TARGNAMLNG, @TARGNAMADR, #0, R1, 5(R4)		      ;
		    05   A4	       51     003E2									      ;
				       0F  12 003E5 	    BNEQ    4$							      ;
		         50	  0C   AC  D0 003E7 3$:     MOVL    MODULERFA, R0					      ; 1234
		         60	       64  3C 003EB 	    MOVZWL  (R4), (R0)						      ;
		    04   A0	  02   A4  B0 003EE 	    MOVW    2(R4), 4(R0)					      ; 1235
				     057A  31 003F3 	    BRW     60$							      ; 1236
		         50	  04   A4  9A 003F6 4$:     MOVZBL  4(R4), R0						      ; 1238
	   00	    08   BC	  04   AC  2D 003FA 	    CMPC5   TARGNAMLNG, @TARGNAMADR, #0, R0, 5(R4)		      ;
		    05   A4	       50     00400									      ;
				       6E  1E 00403 	    BGEQU   8$							      ;
				       6B  95 00405 	    TSTB    TRIALENT						      ; 1240
				       0A  12 00407 	    BNEQ    5$							      ;
				  01   AB  95 00409 	    TSTB    TRIALRBN						      ; 1241
				       05  12 0040C 	    BNEQ    5$							      ;
		         56	       01  CE 0040E 	    MNEGL   #1, READWINDOW					      ; 1242
				       5E  11 00411 	    BRB     7$							      ; 1240
				       56  D4 00413 5$:     CLRL    READWINDOW						      ; 1244
		    0F   AB	  01   AB  90 00415 	    MOVB    TRIALRBN, HILIMITRBN				      ; 1245
		         50	       6B  9A 0041A 	    MOVZBL  TRIALENT, R0					      ;
				       50  D7 0041D 	    DECL    R0							      ;
		    0E   AB	       50  90 0041F 	    MOVB    R0, HILIMITENT					      ;
				       50  D5 00423 	    TSTL    R0							      ;
				       0C  18 00425 	    BGEQ    6$							      ;
      0E   AB	    F4   AB	       01  83 00427 	    SUBB3   #1, ENTSPERBLK, HILIMITENT				      ;
      0F   AB	    01   AB	       01  83 0042D 	    SUBB3   #1, TRIALRBN, HILIMITRBN				      ;
		         50	  0F   AB  9A 00433 6$:     MOVZBL  HILIMITRBN, R0					      ;
	   50	         50	       09  78 00437 	    ASHL    #9, R0, R0						      ; 0000
	   51	         55	       50  C1 0043B 	    ADDL3   R0, R5, R1						      ; 1245
		         50	  F2   AB  3C 0043F 	    MOVZWL  ENTRYSIZE, R0					      ;
		         52	  0E   AB  9A 00443 	    MOVZBL  HILIMITENT, R2					      ;
		         50	       52  C4 00447 	    MULL2   R2, R0						      ;
      12   AB	         51	       50  C1 0044A 	    ADDL3   R0, R1, HILIMITADR					      ;
				  06   AB  B4 0044F 	    CLRW    LOLIMITENT						      ; 1246
		         50	  07   AB  9A 00452 	    MOVZBL  LOLIMITRBN, R0					      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 4-5
; Digital Equipment Corporation
;
	   50	         50	       09  78 00456 	    ASHL    #9, R0, R0						      ; 0000
	   51	         55	       50  C1 0045A 	    ADDL3   R0, R5, R1						      ; 1246
		         50	  F2   AB  3C 0045E 	    MOVZWL  ENTRYSIZE, R0					      ;
		         52	  06   AB  9A 00462 	    MOVZBL  LOLIMITENT, R2					      ;
		         50	       52  C4 00466 	    MULL2   R2, R0						      ;
      0A   AB	         51	       50  C1 00469 	    ADDL3   R0, R1, LOLIMITADR					      ;
		         57	       01  CE 0046E 	    MNEGL   #1, MOVEFLAG					      ; 1247
				       32  11 00471 7$:     BRB     10$							      ; 1238
		         50	  FE   AB  3C 00473 8$:     MOVZWL  WINDOWBLOCKS, R0					      ; 1252
				       50  D7 00477 	    DECL    R0							      ;
      01   AB	         08	       00  ED 00479 	    CMPZV   #0, #8, TRIALRBN, R0				      ;
				       50     0047E									      ;
				       26  12 0047F 	    BNEQ    11$							      ;
		         50	  F4   AB  9A 00481 	    MOVZBL  ENTSPERBLK, R0					      ; 1253
				       50  D7 00485 	    DECL    R0							      ;
	   6B	         08	       00  ED 00487 	    CMPZV   #0, #8, TRIALENT, R0				      ;
				       50     0048B									      ;
				       14  13 0048C 	    BEQL    9$							      ;
		    F0   AB	  FC   AB  B1 0048E 	    CMPW    WINDOWTOPBLK, SRCHTOPBLK				      ; 1254
				       12  12 00493 	    BNEQ    11$							      ;
		         50	  F5   AB  9A 00495 	    MOVZBL  TOPBLKENTS, R0					      ; 1255
				       50  D7 00499 	    DECL    R0							      ;
	   6B	         08	       00  ED 0049B 	    CMPZV   #0, #8, TRIALENT, R0				      ;
				       50     0049F									      ;
				       05  12 004A0 	    BNEQ    11$							      ;
		         56	       01  D0 004A2 9$:     MOVL    #1, READWINDOW					      ; 1256
				       79  11 004A5 10$:    BRB     15$							      ; 1252
				       56  D4 004A7 11$:    CLRL    READWINDOW						      ; 1258
		    F0   AB	  FC   AB  B1 004A9 	    CMPW    WINDOWTOPBLK, SRCHTOPBLK				      ; 1259
				       06  12 004AE 	    BNEQ    12$							      ;
		         5A	  F5   AB  9A 004B0 	    MOVZBL  TOPBLKENTS, ENTRYOFF				      ; 1260
				       04  11 004B4 	    BRB     13$							      ;
		         5A	  F4   AB  9A 004B6 12$:    MOVZBL  ENTSPERBLK, ENTRYOFF				      ; 1261
				       5A  D7 004BA 13$:    DECL    ENTRYOFF						      ;
      0F   AB	    FE   AB	       01  83 004BC 	    SUBB3   #1, WINDOWBLOCKS, HILIMITRBN			      ; 1263
		    0E   AB	       5A  90 004C2 	    MOVB    ENTRYOFF, HILIMITENT				      ;
		         50	  0F   AB  9A 004C6 	    MOVZBL  HILIMITRBN, R0					      ;
	   50	         50	       09  78 004CA 	    ASHL    #9, R0, R0						      ; 0000
	   51	         55	       50  C1 004CE 	    ADDL3   R0, R5, R1						      ; 1263
		         50	  F2   AB  3C 004D2 	    MOVZWL  ENTRYSIZE, R0					      ;
		         52	  0E   AB  9A 004D6 	    MOVZBL  HILIMITENT, R2					      ;
		         50	       52  C4 004DA 	    MULL2   R2, R0						      ;
      12   AB	         51	       50  C1 004DD 	    ADDL3   R0, R1, HILIMITADR					      ;
		    07   AB	  01   AB  90 004E2 	    MOVB    TRIALRBN, LOLIMITRBN				      ; 1264
		         50	       6B  9A 004E7 	    MOVZBL  TRIALENT, R0					      ;
				       50  D6 004EA 	    INCL    R0							      ;
		    06   AB	       50  90 004EC 	    MOVB    R0, LOLIMITENT					      ;
      F4   AB	         08	       00  ED 004F0 	    CMPZV   #0, #8, ENTSPERBLK, R0				      ;
				       50     004F5									      ;
				       09  14 004F6 	    BGTR    14$							      ;
				  06   AB  94 004F8 	    CLRB    LOLIMITENT						      ;
      07   AB	    01   AB	       01  81 004FB 	    ADDB3   #1, TRIALRBN, LOLIMITRBN				      ;
		         50	  07   AB  9A 00501 14$:    MOVZBL  LOLIMITRBN, R0					      ;
	   50	         50	       09  78 00505 	    ASHL    #9, R0, R0						      ; 0000
	   51	         55	       50  C1 00509 	    ADDL3   R0, R5, R1						      ; 1264

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 4-6
; Digital Equipment Corporation
;
		         50	  F2   AB  3C 0050D 	    MOVZWL  ENTRYSIZE, R0					      ;
		         52	  06   AB  9A 00511 	    MOVZBL  LOLIMITENT, R2					      ;
		         50	       52  C4 00515 	    MULL2   R2, R0						      ;
      0A   AB	         51	       50  C1 00518 	    ADDL3   R0, R1, LOLIMITADR					      ;
		         57	       01  D0 0051D 	    MOVL    #1, MOVEFLAG					      ; 1265
				       0D  11 00520 15$:    BRB     17$							      ; 1226
		         56	       01  D0 00522 16$:    MOVL    #1, READWINDOW					      ; 1270
      FC   AB	    EE   AB	       01  A3 00525 	    SUBW3   #1, SRCHBASEBLK, WINDOWTOPBLK			      ; 1271
		    F6   AB	       60  D0 0052B 	    MOVL    (R0), LASTLIBFILE					      ; 1272
		         58	  08   AC  D0 0052F 17$:    MOVL    TARGNAMADR, R8					      ; 1330
		         59	  04   AC  D0 00533 	    MOVL    TARGNAMLNG, R9					      ;
				       56  D5 00537 18$:    TSTL    READWINDOW						      ; 1277
				       03  12 00539 	    BNEQ    19$							      ;
				     011C  31 0053B 	    BRW     29$							      ;
				       1C  18 0053E 19$:    BGEQ    22$							      ; 1279
				       57  D5 00540 	    TSTL    MOVEFLAG						      ; 1281
				       03  15 00542 	    BLEQ    21$							      ;
				     042D  31 00544 20$:    BRW     61$							      ;
		    EE   AB	  FA   AB  B1 00547 21$:    CMPW    WINDOWBASEBLK, SRCHBASEBLK				      ; 1284
				       F6  13 0054C 	    BEQL    20$							      ;
		    FA   AB	       0A  A2 0054E 	    SUBW2   #10, WINDOWBASEBLK					      ; 1286
		    FC   AB	  FE   AB  A2 00552 	    SUBW2   WINDOWBLOCKS, WINDOWTOPBLK				      ; 1288
		         57	       01  CE 00557 	    MNEGL   #1, MOVEFLAG					      ; 1290
				       2B  11 0055A 	    BRB     24$							      ; 1279
				       57  D5 0055C 22$:    TSTL    MOVEFLAG						      ; 1293
				       E4  19 0055E 	    BLSS    20$							      ;
		    F0   AB	  FC   AB  B1 00560 	    CMPW    WINDOWTOPBLK, SRCHTOPBLK				      ; 1297
				       DD  13 00565 	    BEQL    20$							      ;
      FA   AB	    FC   AB	       01  A1 00567 	    ADDW3   #1, WINDOWTOPBLK, WINDOWBASEBLK			      ; 1299
		         51	  FA   AB  3C 0056D 	    MOVZWL  WINDOWBASEBLK, R1					      ; 1301
		         51	       09  C0 00571 	    ADDL2   #9, R1						      ;
		         50	  F0   AB  3C 00574 	    MOVZWL  SRCHTOPBLK, R0					      ; 1300
		         51	       50  D1 00578 	    CMPL    R0, R1						      ;
				       03  1B 0057B 	    BLEQU   23$							      ;
		         50	       51  D0 0057D 	    MOVL    R1, R0						      ;
		    FC   AB	       50  B0 00580 23$:    MOVW    R0, WINDOWTOPBLK					      ;
		         57	       01  D0 00584 	    MOVL    #1, MOVEFLAG					      ; 1303
		         50	  FC   AB  3C 00587 24$:    MOVZWL  WINDOWTOPBLK, R0					      ; 1305
		         51	  FA   AB  3C 0058B 	    MOVZWL  WINDOWBASEBLK, R1					      ;
		         50	       51  C2 0058F 	    SUBL2   R1, R0						      ;
      FE   AB	         50	       01  A1 00592 	    ADDW3   #1, R0, WINDOWBLOCKS				      ;
		    FE   AB	  C2   AB  B1 00597 	    CMPW    TABLESIZE, WINDOWBLOCKS				      ; 1306
				       2A  13 0059C 	    BEQL    26$							      ;
		         50	  BE   AB  D0 0059E 	    MOVL    TABLEADR, R0					      ; 1308
				       0F  13 005A2 	    BEQL    25$							      ;
				       50  DD 005A4 	    PUSHL   R0							      ; 1309
		         50	  C2   AB  3C 005A6 	    MOVZWL  TABLESIZE, R0					      ;
	   7E	         50	       09  78 005AA 	    ASHL    #9, R0, -(SP)					      ;
		  0000G  CF	       02  FB 005AE 	    CALLS   #2, LNK$DEALBLK					      ;
				  BE   AB  9F 005B3 25$:    PUSHAB  TABLEADR						      ; 1310
		         50	  FE   AB  3C 005B6 	    MOVZWL  WINDOWBLOCKS, R0					      ;
	   7E	         50	       09  78 005BA 	    ASHL    #9, R0, -(SP)					      ;
		  0000G  CF	       02  FB 005BE 	    CALLS   #2, LNK$ALLOBLK					      ;
		    C2   AB	  FE   AB  B0 005C3 	    MOVW    WINDOWBLOCKS, TABLESIZE				      ; 1311
		  0000G  CF	  BE   AB  D0 005C8 26$:    MOVL    TABLEADR, LNK$AL_RAB+36				      ; 1313

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 4-7
; Digital Equipment Corporation
;
		         7E	  FA   AB  3C 005CE 	    MOVZWL  WINDOWBASEBLK, -(SP)				      ; 1314
		         7E	  FE   AB  3C 005D2 	    MOVZWL  WINDOWBLOCKS, -(SP)					      ;
		  FD24   CF	       02  FB 005D6 	    CALLS   #2, READBLOCKS					      ;
				  06   AB  B4 005DB 	    CLRW    LOLIMITENT						      ; 1315
		         50	  BE   AB  D0 005DE 	    MOVL    TABLEADR, R0					      ;
		         51	  07   AB  9A 005E2 	    MOVZBL  LOLIMITRBN, R1					      ;
	   51	         51	       09  78 005E6 	    ASHL    #9, R1, R1						      ; 0000
	   52	         50	       51  C1 005EA 	    ADDL3   R1, R0, R2						      ; 1315
		         51	  F2   AB  3C 005EE 	    MOVZWL  ENTRYSIZE, R1					      ;
		         53	  06   AB  9A 005F2 	    MOVZBL  LOLIMITENT, R3					      ;
		         51	       53  C4 005F6 	    MULL2   R3, R1						      ;
      0A   AB	         52	       51  C1 005F9 	    ADDL3   R1, R2, LOLIMITADR					      ;
		    F0   AB	  FC   AB  B1 005FE 	    CMPW    WINDOWTOPBLK, SRCHTOPBLK				      ; 1316
				       06  12 00603 	    BNEQ    27$							      ;
		         5A	  F5   AB  9A 00605 	    MOVZBL  TOPBLKENTS, ENTRYOFF				      ; 1317
				       04  11 00609 	    BRB     28$							      ;
		         5A	  F4   AB  9A 0060B 27$:    MOVZBL  ENTSPERBLK, ENTRYOFF				      ; 1318
				       5A  D7 0060F 28$:    DECL    ENTRYOFF						      ;
      0F   AB	    FE   AB	       01  83 00611 	    SUBB3   #1, WINDOWBLOCKS, HILIMITRBN			      ; 1319
		    0E   AB	       5A  90 00617 	    MOVB    ENTRYOFF, HILIMITENT				      ;
		         51	  0F   AB  9A 0061B 	    MOVZBL  HILIMITRBN, R1					      ;
	   51	         51	       09  78 0061F 	    ASHL    #9, R1, R1						      ; 0000
	   52	         50	       51  C1 00623 	    ADDL3   R1, R0, R2						      ; 1319
		         51	  F2   AB  3C 00627 	    MOVZWL  ENTRYSIZE, R1					      ;
		         53	  0E   AB  9A 0062B 	    MOVZBL  HILIMITENT, R3					      ;
		         51	       53  C4 0062F 	    MULL2   R3, R1						      ;
      12   AB	         52	       51  C1 00632 	    ADDL3   R1, R2, HILIMITADR					      ;
		         6B	  0E   AB  B0 00637 	    MOVW    HILIMITENT, TRIALENT				      ; 1320
		    02   AB	  12   AB  D0 0063B 	    MOVL    HILIMITADR, TRIALADR				      ;
		         51	  01   AB  9A 00640 	    MOVZBL  TRIALRBN, R1					      ;
	   51	         51	       09  78 00644 	    ASHL    #9, R1, R1						      ; 0000
		         51	       50  C0 00648 	    ADDL2   R0, R1						      ; 1320
		         50	  F2   AB  3C 0064B 	    MOVZWL  ENTRYSIZE, R0					      ;
		         52	       6B  9A 0064F 	    MOVZBL  TRIALENT, R2					      ;
		         50	       52  C4 00652 	    MULL2   R2, R0						      ;
      02   AB	         51	       50  C1 00655 	    ADDL3   R0, R1, TRIALADR					      ;
		         55	  12   AB  D0 0065A 29$:    MOVL    HILIMITADR, R5					      ; 1330
		         50	  04   A5  9A 0065E 	    MOVZBL  4(R5), R0						      ;
	   00	         68	       59  2D 00662 	    CMPC5   R9, (R8), #0, R0, 5(R5)				      ;
		    05   A5	       50     00666									      ;
				       03  12 00669 	    BNEQ    30$							      ;
				     02F6  31 0066B 	    BRW     59$							      ;
		         50	  04   A5  9A 0066E 30$:    MOVZBL  4(R5), R0						      ; 1338
	   00	         68	       59  2D 00672 	    CMPC5   R9, (R8), #0, R0, 5(R5)				      ;
		    05   A5	       50     00676									      ;
				       03  1B 00679 	    BLEQU   31$							      ;
				     0090  31 0067B 	    BRW     36$							      ;
				  0F   AB  95 0067E 31$:    TSTB    HILIMITRBN						      ; 1342
				       05  12 00681 	    BNEQ    32$							      ;
				  0E   AB  95 00683 	    TSTB    HILIMITENT						      ; 1343
				       50  13 00686 	    BEQL    34$							      ;
		         55	  0A   AB  D0 00688 32$:    MOVL    LOLIMITADR, R5					      ; 1348
		         50	  04   A5  9A 0068C 	    MOVZBL  4(R5), R0						      ;
	   00	         68	       59  2D 00690 	    CMPC5   R9, (R8), #0, R0, 5(R5)				      ; 1347
		    05   A5	       50     00694									      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 4-8
; Digital Equipment Corporation
;
				       32  12 00697 	    BNEQ    33$							      ;
		         50	  0C   AC  D0 00699 	    MOVL    MODULERFA, R0					      ; 1351
		         60	       65  3C 0069D 	    MOVZWL  (R5), (R0)						      ;
		    04   A0	  02   A5  B0 006A0 	    MOVW    2(R5), 4(R0)					      ; 1352
		         6B	  06   AB  B0 006A5 	    MOVW    LOLIMITENT, TRIALENT				      ; 1353
		    02   AB	       55  D0 006A9 	    MOVL    R5, TRIALADR					      ;
		         50	  01   AB  9A 006AD 	    MOVZBL  TRIALRBN, R0					      ;
	   50	         50	       09  78 006B1 	    ASHL    #9, R0, R0						      ; 0000
		         50	  BE   AB  C0 006B5 	    ADDL2   TABLEADR, R0					      ; 1353
		         51	  F2   AB  3C 006B9 	    MOVZWL  ENTRYSIZE, R1					      ;
		         52	       6B  9A 006BD 	    MOVZBL  TRIALENT, R2					      ;
		         51	       52  C4 006C0 	    MULL2   R2, R1						      ;
      02   AB	         50	       51  C1 006C3 	    ADDL3   R1, R0, TRIALADR					      ;
				     02A5  31 006C8 	    BRW     60$							      ; 1354
		         50	  04   A5  9A 006CB 33$:    MOVZBL  4(R5), R0						      ; 1357
	   00	         68	       59  2D 006CF 	    CMPC5   R9, (R8), #0, R0, 5(R5)				      ; 1356
		    05   A5	       50     006D3									      ;
				       05  1E 006D6 	    BGEQU   35$							      ;
		         56	       01  CE 006D8 34$:    MNEGL   #1, READWINDOW					      ; 1359
				       34  11 006DB 	    BRB     37$							      ; 1356
		         50	  FE   AB  3C 006DD 35$:    MOVZWL  WINDOWBLOCKS, R0					      ; 1361
				       50  D7 006E1 	    DECL    R0							      ;
      07   AB	         08	       00  ED 006E3 	    CMPZV   #0, #8, LOLIMITRBN, R0				      ; 1360
				       50     006E8									      ;
				       29  12 006E9 	    BNEQ    38$							      ;
		         50	  F4   AB  9A 006EB 	    MOVZBL  ENTSPERBLK, R0					      ; 1362
				       50  D7 006EF 	    DECL    R0							      ;
      06   AB	         08	       00  ED 006F1 	    CMPZV   #0, #8, LOLIMITENT, R0				      ;
				       50     006F6									      ;
				       15  13 006F7 	    BEQL    36$							      ;
		    F0   AB	  FC   AB  B1 006F9 	    CMPW    WINDOWTOPBLK, SRCHTOPBLK				      ; 1363
				       14  12 006FE 	    BNEQ    38$							      ;
		         50	  F5   AB  9A 00700 	    MOVZBL  TOPBLKENTS, R0					      ; 1364
				       50  D7 00704 	    DECL    R0							      ;
      06   AB	         08	       00  ED 00706 	    CMPZV   #0, #8, LOLIMITENT, R0				      ;
				       50     0070B									      ;
				       06  12 0070C 	    BNEQ    38$							      ;
		         56	       01  D0 0070E 36$:    MOVL    #1, READWINDOW					      ; 1365
				     FE23  31 00711 37$:    BRW     18$							      ; 1360
		    12   AB	  0A   AB  D1 00714 38$:    CMPL    LOLIMITADR, HILIMITADR				      ; 1377
				       03  12 00719 	    BNEQ    39$							      ;
				     0256  31 0071B 	    BRW     61$							      ;
		         50	  06   AB  9A 0071E 39$:    MOVZBL  LOLIMITENT, R0					      ; 1379
				       50  D6 00722 	    INCL    R0							      ;
		    06   AB	       50  90 00724 	    MOVB    R0, LOLIMITENT					      ;
      F4   AB	         08	       00  ED 00728 	    CMPZV   #0, #8, ENTSPERBLK, R0				      ;
				       50     0072D									      ;
				       06  14 0072E 	    BGTR    40$							      ;
				  06   AB  94 00730 	    CLRB    LOLIMITENT						      ;
				  07   AB  96 00733 	    INCB    LOLIMITRBN						      ;
		         55	  BE   AB  D0 00736 40$:    MOVL    TABLEADR, R5					      ;
		         50	  07   AB  9A 0073A 	    MOVZBL  LOLIMITRBN, R0					      ;
	   50	         50	       09  78 0073E 	    ASHL    #9, R0, R0						      ; 0000
	   51	         55	       50  C1 00742 	    ADDL3   R0, R5, R1						      ; 1379
		         50	  F2   AB  3C 00746 	    MOVZWL  ENTRYSIZE, R0					      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 4-9
; Digital Equipment Corporation
;
		         52	  06   AB  9A 0074A 	    MOVZBL  LOLIMITENT, R2					      ;
		         50	       52  C4 0074E 	    MULL2   R2, R0						      ;
      0A   AB	         51	       50  C1 00751 	    ADDL3   R0, R1, LOLIMITADR					      ;
		    12   AB	  0A   AB  D1 00756 	    CMPL    LOLIMITADR, HILIMITADR				      ; 1380
				       17  13 0075B 	    BEQL    41$							      ;
		         50	  0E   AB  9A 0075D 	    MOVZBL  HILIMITENT, R0					      ; 1381
				       50  D7 00761 	    DECL    R0							      ;
		    0E   AB	       50  90 00763 	    MOVB    R0, HILIMITENT					      ;
				       50  D5 00767 	    TSTL    R0							      ;
				       09  18 00769 	    BGEQ    41$							      ;
      0E   AB	    F4   AB	       01  83 0076B 	    SUBB3   #1, ENTSPERBLK, HILIMITENT				      ;
				  0F   AB  97 00771 	    DECB    HILIMITRBN						      ;
		         50	  0F   AB  9A 00774 41$:    MOVZBL  HILIMITRBN, R0					      ;
	   50	         50	       09  78 00778 	    ASHL    #9, R0, R0						      ; 0000
	   51	         55	       50  C1 0077C 	    ADDL3   R0, R5, R1						      ; 1381
		         50	  F2   AB  3C 00780 	    MOVZWL  ENTRYSIZE, R0					      ;
		         52	  0E   AB  9A 00784 	    MOVZBL  HILIMITENT, R2					      ;
		         50	       52  C4 00788 	    MULL2   R2, R0						      ;
      12   AB	         51	       50  C1 0078B 	    ADDL3   R0, R1, HILIMITADR					      ;
		    0F   AB	  07   AB  91 00790 42$:    CMPB    LOLIMITRBN, HILIMITRBN				      ; 1382
				       03  12 00795 	    BNEQ    43$							      ;
				     00D6  31 00797 	    BRW     50$							      ;
		         50	  0F   AB  9A 0079A 43$:    MOVZBL  HILIMITRBN, R0					      ; 1384
		         51	  07   AB  9A 0079E 	    MOVZBL  LOLIMITRBN, R1					      ;
		         50	       51  C2 007A2 	    SUBL2   R1, R0						      ;
				       50  D6 007A5 	    INCL    R0							      ;
	   56	         50	       02  C7 007A7 	    DIVL3   #2, R0, TRIALBLOCKOFF				      ;
		         51	  07   AB  9A 007AB 	    MOVZBL  LOLIMITRBN, R1					      ; 1385
		         51	       56  C0 007AF 	    ADDL2   TRIALBLOCKOFF, R1					      ;
		         50	  0F   AB  9A 007B2 	    MOVZBL  HILIMITRBN, R0					      ; 1386
		         50	       56  C2 007B6 	    SUBL2   TRIALBLOCKOFF, R0					      ;
		         50	       51  D1 007B9 	    CMPL    R1, R0						      ; 1385
				       0C  12 007BC 	    BNEQ    44$							      ;
		         50	  F4   AB  9A 007BE 	    MOVZBL  ENTSPERBLK, R0					      ; 1387
				       50  D6 007C2 	    INCL    R0							      ;
	   5A	         50	       02  C7 007C4 	    DIVL3   #2, R0, ENTRYOFF					      ;
				       02  11 007C8 	    BRB     45$							      ; 1385
				       5A  D4 007CA 44$:    CLRL    ENTRYOFF						      ; 1389
      01   AB	         56	  07   AB  81 007CC 45$:    ADDB3   LOLIMITRBN, TRIALBLOCKOFF, TRIALRBN			      ; 1391
		         6B	       5A  90 007D2 	    MOVB    ENTRYOFF, TRIALENT					      ;
		         50	  01   AB  9A 007D5 	    MOVZBL  TRIALRBN, R0					      ;
	   50	         50	       09  78 007D9 	    ASHL    #9, R0, R0						      ; 0000
	   51	         55	       50  C1 007DD 	    ADDL3   R0, R5, R1						      ; 1391
		         50	  F2   AB  3C 007E1 	    MOVZWL  ENTRYSIZE, R0					      ;
		         52	       6B  9A 007E5 	    MOVZBL  TRIALENT, R2					      ;
		         50	       52  C4 007E8 	    MULL2   R2, R0						      ;
      02   AB	         51	       50  C1 007EB 	    ADDL3   R0, R1, TRIALADR					      ;
		         54	  02   AB  D0 007F0 	    MOVL    TRIALADR, R4					      ; 1392
		         50	  04   A4  9A 007F4 	    MOVZBL  4(R4), R0						      ;
	   00	         68	       59  2D 007F8 	    CMPC5   R9, (R8), #0, R0, 5(R4)				      ;
		    05   A4	       50     007FC									      ;
				       03  12 007FF 	    BNEQ    46$							      ;
				     FBE3  31 00801 	    BRW     3$							      ;
		         50	  04   A4  9A 00804 46$:    MOVZBL  4(R4), R0						      ; 1399
	   00	         68	       59  2D 00808 	    CMPC5   R9, (R8), #0, R0, 5(R4)				      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 4-10
; Digital Equipment Corporation
;
		    05   A4	       50     0080C									      ;
				       3E  1B 0080F 	    BLEQU   48$							      ;
		    07   AB	  01   AB  90 00811 	    MOVB    TRIALRBN, LOLIMITRBN				      ; 1402
		         50	       6B  9A 00816 	    MOVZBL  TRIALENT, R0					      ;
				       50  D6 00819 	    INCL    R0							      ;
		    06   AB	       50  90 0081B 	    MOVB    R0, LOLIMITENT					      ;
      F4   AB	         08	       00  ED 0081F 	    CMPZV   #0, #8, ENTSPERBLK, R0				      ;
				       50     00824									      ;
				       09  14 00825 	    BGTR    47$							      ;
				  06   AB  94 00827 	    CLRB    LOLIMITENT						      ;
      07   AB	    01   AB	       01  81 0082A 	    ADDB3   #1, TRIALRBN, LOLIMITRBN				      ;
		         50	  07   AB  9A 00830 47$:    MOVZBL  LOLIMITRBN, R0					      ;
	   50	         50	       09  78 00834 	    ASHL    #9, R0, R0						      ; 0000
	   51	         55	       50  C1 00838 	    ADDL3   R0, R5, R1						      ; 1402
		         50	  F2   AB  3C 0083C 	    MOVZWL  ENTRYSIZE, R0					      ;
		         52	  06   AB  9A 00840 	    MOVZBL  LOLIMITENT, R2					      ;
		         50	       52  C4 00844 	    MULL2   R2, R0						      ;
      0A   AB	         51	       50  C1 00847 	    ADDL3   R0, R1, LOLIMITADR					      ;
				     FF41  31 0084C 	    BRW     42$							      ; 1399
		    0F   AB	  01   AB  90 0084F 48$:    MOVB    TRIALRBN, HILIMITRBN				      ; 1405
		         50	       6B  9A 00854 	    MOVZBL  TRIALENT, R0					      ;
				       50  D7 00857 	    DECL    R0							      ;
		    0E   AB	       50  90 00859 	    MOVB    R0, HILIMITENT					      ;
				       50  D5 0085D 	    TSTL    R0							      ;
				       0C  18 0085F 	    BGEQ    49$							      ;
      0E   AB	    F4   AB	       01  83 00861 	    SUBB3   #1, ENTSPERBLK, HILIMITENT				      ;
      0F   AB	    01   AB	       01  83 00867 	    SUBB3   #1, TRIALRBN, HILIMITRBN				      ;
				     FF04  31 0086D 49$:    BRW     41$							      ;
		    01   AB	  07   AB  90 00870 50$:    MOVB    LOLIMITRBN, TRIALRBN				      ; 1413
		         50	  0E   AB  9A 00875 	    MOVZBL  HILIMITENT, R0					      ;
		         51	  06   AB  9A 00879 	    MOVZBL  LOLIMITENT, R1					      ;
		         50	       51  C2 0087D 	    SUBL2   R1, R0						      ;
		         50	       02  C6 00880 	    DIVL2   #2, R0						      ;
		         52	  06   AB  9A 00883 	    MOVZBL  LOLIMITENT, R2					      ;
		         50	       52  C0 00887 	    ADDL2   R2, R0						      ;
		         6B	       50  90 0088A 	    MOVB    R0, TRIALENT					      ;
				       50  D5 0088D 	    TSTL    R0							      ;
				       0D  18 0088F 	    BGEQ    51$							      ;
	   6B	    F4   AB	       01  83 00891 	    SUBB3   #1, ENTSPERBLK, TRIALENT				      ;
      01   AB	    07   AB	       01  83 00896 	    SUBB3   #1, LOLIMITRBN, TRIALRBN				      ;
				       0E  11 0089C 	    BRB     52$							      ;
		    F4   AB	       6B  91 0089E 51$:    CMPB    TRIALENT, ENTSPERBLK				      ;
				       08  1F 008A2 	    BLSSU   52$							      ;
				       6B  94 008A4 	    CLRB    TRIALENT						      ;
      01   AB	    07   AB	       01  81 008A6 	    ADDB3   #1, LOLIMITRBN, TRIALRBN				      ;
		         50	  01   AB  9A 008AC 52$:    MOVZBL  TRIALRBN, R0					      ;
	   50	         50	       09  78 008B0 	    ASHL    #9, R0, R0						      ; 0000
	   51	         55	       50  C1 008B4 	    ADDL3   R0, R5, R1						      ; 1413
		         50	  F2   AB  3C 008B8 	    MOVZWL  ENTRYSIZE, R0					      ;
		         52	       6B  9A 008BC 	    MOVZBL  TRIALENT, R2					      ;
		         50	       52  C4 008BF 	    MULL2   R2, R0						      ;
      02   AB	         51	       50  C1 008C2 	    ADDL3   R0, R1, TRIALADR					      ;
				       57  D4 008C7 	    CLRL    MOVEFLAG						      ; 1414
		         54	  02   AB  D0 008C9 53$:    MOVL    TRIALADR, R4					      ; 1416
		         50	  04   A4  9A 008CD 	    MOVZBL  4(R4), R0						      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 4-11
; Digital Equipment Corporation
;
	   00	         68	       59  2D 008D1 	    CMPC5   R9, (R8), #0, R0, 5(R4)				      ;
		    05   A4	       50     008D5									      ;
				       23  1B 008D8 	    BLEQU   54$							      ;
	      FFFFFFFF   8F	       57  D1 008DA 	    CMPL    MOVEFLAG, #-1					      ; 1418
				       2D  13 008E1 	    BEQL    56$							      ;
		         57	       01  D0 008E3 	    MOVL    #1, MOVEFLAG					      ; 1421
		         50	       6B  9A 008E6 	    MOVZBL  TRIALENT, R0					      ; 1422
				       50  D6 008E9 	    INCL    R0							      ;
		         6B	       50  90 008EB 	    MOVB    R0, TRIALENT					      ;
      F4   AB	         08	       00  ED 008EE 	    CMPZV   #0, #8, ENTSPERBLK, R0				      ;
				       50     008F3									      ;
				       33  14 008F4 	    BGTR    57$							      ;
				       6B  94 008F6 	    CLRB    TRIALENT						      ;
				  01   AB  96 008F8 	    INCB    TRIALRBN						      ;
				       2C  11 008FB 	    BRB     57$							      ;
		         50	  04   A4  9A 008FD 54$:    MOVZBL  4(R4), R0						      ; 1425
	   00	         68	       59  2D 00901 	    CMPC5   R9, (R8), #0, R0, 5(R4)				      ; 1424
		    05   A4	       50     00905									      ;
				       03  12 00908 	    BNEQ    55$							      ;
				     FADA  31 0090A 	    BRW     3$							      ;
		         01	       57  D1 0090D 55$:    CMPL    MOVEFLAG, #1					      ; 1432
				       62  13 00910 56$:    BEQL    61$							      ;
		         57	       01  CE 00912 	    MNEGL   #1, MOVEFLAG					      ; 1435
		         50	       6B  9A 00915 	    MOVZBL  TRIALENT, R0					      ; 1436
				       50  D7 00918 	    DECL    R0							      ;
		         6B	       50  90 0091A 	    MOVB    R0, TRIALENT					      ;
				       50  D5 0091D 	    TSTL    R0							      ;
				       08  18 0091F 	    BGEQ    57$							      ;
	   6B	    F4   AB	       01  83 00921 	    SUBB3   #1, ENTSPERBLK, TRIALENT				      ;
				  01   AB  97 00926 	    DECB    TRIALRBN						      ;
		         50	  01   AB  9A 00929 57$:    MOVZBL  TRIALRBN, R0					      ;
	   50	         50	       09  78 0092D 	    ASHL    #9, R0, R0						      ; 0000
	   51	         55	       50  C1 00931 	    ADDL3   R0, R5, R1						      ; 1436
		         50	  F2   AB  3C 00935 	    MOVZWL  ENTRYSIZE, R0					      ;
		         52	       6B  9A 00939 	    MOVZBL  TRIALENT, R2					      ;
		         50	       52  C4 0093C 	    MULL2   R2, R0						      ;
      02   AB	         51	       50  C1 0093F 	    ADDL3   R0, R1, TRIALADR					      ;
		    06   AB	       6B  91 00944 	    CMPB    TRIALENT, LOLIMITENT				      ; 1439
				       09  13 00948 	    BEQL    58$							      ;
		    0E   AB	       6B  91 0094A 	    CMPB    TRIALENT, HILIMITENT				      ; 1440
				       03  13 0094E 	    BEQL    58$							      ;
				     FF76  31 00950 	    BRW     53$							      ;
		         55	  02   AB  D0 00953 58$:    MOVL    TRIALADR, R5					      ; 1445
		         50	  04   A5  9A 00957 	    MOVZBL  4(R5), R0						      ;
	   00	         68	       59  2D 0095B 	    CMPC5   R9, (R8), #0, R0, 5(R5)				      ;
		    05   A5	       50     0095F									      ;
				       10  12 00962 	    BNEQ    61$							      ;
		         50	  0C   AC  D0 00964 59$:    MOVL    MODULERFA, R0					      ; 1448
		         60	       65  3C 00968 	    MOVZWL  (R5), (R0)						      ;
		    04   A0	  02   A5  B0 0096B 	    MOVW    2(R5), 4(R0)					      ; 1449
		         50	       01  D0 00970 60$:    MOVL    #1, R0						      ; 1450
					   04 00973 	    RET     							      ;
				       50  D4 00974 61$:    CLRL    R0							      ; 1116
					   04 00976 	    RET     							      ;


; Bliss-32 7.352	Saturday 22-AUG-1978 04:57:57	DBB3:[LINKER.SRC]LNKPROLIB.B32;4				Page 4-12
; Digital Equipment Corporation
;
; Routine Size:  1490 bytes


;18600  1454	END ELUDOM								! End of module






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $OWN$          	    92    WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $GLOBAL$       	    28    WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $CODE$         	  2423  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]STARLET.L32;1		      2688        19         0       122
;  DBA4:[SYSLIB]CLIMAC.L32;1		        14         2        14         5





; Size:		2423 code + 120 data bytes
; Run Time:	01:24.1
; Elapsed Time:	01:27.6
; Memory Used:	562 pages
; Compilation Complete
