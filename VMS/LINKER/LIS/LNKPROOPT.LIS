LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)    4500  DECLARATIONS
   (1)    9800  PARSING ROUTINE
   (1)   33500  NULL STATE
   (1)   35600  DIRECTORY STATE
   (1)   37700  FILE STATE
   (1)   44600  QUALIFIER STATE
   (1)   63100  SINGLE AND MULTIPLE VALUE STATES
   (2)    2400  OPTION KEY STATE
   (2)    6700  KEYWORD MATCHING ROUTINE
   (2)   10100  OPTION PARAMETER PARSING
   (2)   29600  SOME USEFUL KEYWORDS
   (2)   32400  INITIALIZE OPTION DESCRIPTIONS
   (2)   33500  PROCESS THE BASE OPTION
   (2)   35500  PROCESS THE CHANNELS OPTION
   (2)   38600  PROCESS IOSEGMENT OPTION
   (2)   42300  PROCESS STACK OPTION
   (2)   45000  PROCESS IMAGE COMPRESSION OPTIONS
   (2)   49700  PROCESS PRIVILEGE REQUESTS
   (2)   51200  PROCESS UNIVERSAL OPTION
   (2)   54600  GLOBAL SECTION MATCH CONTROL
   (2)   59120  PROCESS CLUSTER OPTION
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page   1
X01.09                                                                                                                           (1)

                                     0000   100 	.TITLE	LNK_PROCOPTNS		; PROCESS LINK TIME OPTIONS 
                                     0000   200 	.IDENT	/X01.09/
                                     0000   300 
                                     0000   400 ;
                                     0000   500 ;			  COPYRIGHT (c) 1977 BY
                                     0000   600 ;	      DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000   700 ;
                                     0000   800 ; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
                                     0000   900 ; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
                                     0000  1000 ; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
                                     0000  1100 ; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
                                     0000  1200 ; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
                                     0000  1300 ; TRANSFERRED.
                                     0000  1400 ;
                                     0000  1500 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
                                     0000  1600 ; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
                                     0000  1700 ; CORPORATION.
                                     0000  1800 ;
                                     0000  1900 ; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
                                     0000  2000 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
                                     0000  2100 ;
                                     0000  2200 
                                     0000  2300 ;++
                                     0000  2400 ; FACILITY:	NATIVE MODE LINKER
                                     0000  2500 ;
                                     0000  2600 ; ABSTRACT:	THIS MODUDE CONTAINS THE DATA AND ROUTINE FOR PROCESSING
                                     0000  2700 ;		THE CONTENT OF THE LINK TIME OPTION INPUT FILE(S)
                                     0000  2800 ;
                                     0000  2900 ;
                                     0000  3000 ; ENVIRONMENT:	STARLET NATIVE MODE
                                     0000  3100 ;
                                     0000  3200 ; AUTHOR: T.J. PORTER	, CREATION DATE: 23-AUG-77
                                     0000  3300 ;
                                     0000  3400 ; MODIFICATIONS:
                                     0000  3500 ;
                                     0000  3600 ; NO.	DATE		PROGRAMMER	PURPOSE
                                     0000  3700 ; ---	----		----------	-------
                                     0000  3800 ; 001	21-NOV-77	T.J. PORTER	CHANGE MACRO AND MESSAGE NAMES OF
                                     0000  3900 ;						THOSE ERRORS COMMON WITH CLI
                                     0000  4000 ; 002	22-NOV-77	T.J. PORTER	CORRECT BUGS IN ERROR HANDLING
                                     0000  4100 ; 003	11-JAN-78	T.J. PORTER	ADD KEYWORD OPTION PARSING
                                     0000  4200 ;						AND PROCESSING
                                     0000  4205 ; 004	18-MAR-78	T.J. PORTER	ADD IOSEGMENT AND STACK OPTIONS
                                     0000  4215 ; 005	02-MAY-78	T.J. PORTER	VERIFY CONTENT OF OPTIONS FILE
                                     0000  4225 ;						BASED ON CONTROL BIT IN
                                     0000  4262 ;						LNK$GL_CTLMSK
                                     0000  4272 ; 006	09-MAY-78	T.J. PORTER	ADD /SHAREABLE AS INPUT QUALIFIER
                                     0000  4282 ;						AND THE IMAGE COMPRESSION
                                     0000  4292 ;						OPTIONS.
                                     0000  4294 ; 007	10-MAY-78	T.J. PORTER	BUG. -- NEVER ALLOCATED SPACE FOR USER
                                     0000  4296 ;						FILENAME, OTHER THAN STACK
                                     0000  4298 ; 008	21-JUN-78	T.J. PORTER	ADD UNIVERSAL OPTION
                                     0000  4299 ; 009	26-JUN-78	T.J. PORTER	ADD GSMATCH OPTION
                                     0000  4300 ;--
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page   2
X01.09          DECLARATIONS                                                                                                     (1)

                                     0000  4500 	.SBTTL	DECLARATIONS
                                     0000  4600 ;
                                     0000  4700 ; MACRO LIBRARY CALLS
                                     0000  4800 ;
                                     0000  4900 	.NLIST	MEB
                                     0000  5000 	$CLIDEF					; CLI DEFINITIONS
                                     0000  5100 	$RABDEF					; RAB DEFINITIONS OF RMS
                                     0000  5150 	$ISDDEF					; IMAGE SECTION DEFINITIONS
                                     0000  5200 	.LIST	MEB
                                     0000  5300 	$CLIMSGDEF				; ++001 DEFINE NAMES OF ERRORS SHARED WITH CLI
                                     0000       	.SAVE
                                 00000080       	.PSECT	$ABS$,ABS
                           00000000  0080       	.=0
                                     0000       	.RESTORE
                                     0000  5400 	QUALDEF					; ESTABLISH SOME QUALIFIER DEFINITIONS
                                     0000  5500 	KEYDEF					; ESTABLISH SOME KEYWORD DEFINITIONS
                                     0000  5600 	PARDEF					; ESTABLISH SOME OPTION PARAMETER DEFINITIONS
                                     0000  5700 ;
                                     0000  5800 ; EQUATED SYMBOLS:
                                     0000  5900 ;
                           00000084  0000  6000 MAXTOKENLENGTH	= 132		; MAXIMUM LENGTH OF A TOKEN
                           0000FFFF  0000  6100 MAXQUALVALENGTH = 65535		;    "      "    "  QUALIFIER VALUE
                           00000009  0000  6200 TAB		= 9		; ASCII ENCODING OF HORIZONTAL TAB
                           00000020  0000  6300 SPA		= ^X20		;   "      "        SPACE
                           00000080  0000  6400 FIRST_CHAR	= ^X80		; FLAG SET IN FIRST CHARACTER OF KEYWORDS
                           00000200  0000  6500 PRO_REG_DEF_BAS = ^X200		; DEFAULT BASE IF "PROGRAM"
                           40000000  0000  6600 CTL_REG_DEF_BAS  = ^X40000000	;    "     "    " "CONTROL"
                           80000000  0000  6700 SYS_REG_DEF_BAS  = ^X80000000	;    "     "    " "SYSTEM"
                                     0000  6800 ;
                                     0000  6900 ;	ARGUMENT LIST
                                     0000  7000 ;
                           00000004  0000  7100 REQSTBLKADR	= 4		; CLI REQUEST BLOCK ADDRESS
                           00000008  0000  7200 FILEFLGSADR	= 8		; ADDRESS OF FILE CONTROL FLAGS
                           0000000C  0000  7300 RABADR		= 12		; ADDRESS OF THE RAB
                                     0000  7400 ;
                                     0000  7500 ; LOCAL STORAGE
                                     0000  7600 ;
                           FFFFFFF8  0000  7700 FILENAMEDESC = -8		; OFFSET OFF FP FOR OPTION FILE DESCRIPTOR
                           FFFFFFF4  0000  7800 CUROPTROUTINE = -12		; OFF FP FOR CURRENT OPTION SERVICE ROUTINE
                           FFFFFFF0  0000  7900 CUROPTPARDESC = -16		; OFF FP FOR POINTER TO CURRENT OPTION PARAMETER BLOCK
                           FFFFFFE8  0000  8000 CUROPTDESC    = -24		; OFF FP FOR DESCRIPTOR OF CURRENT (USER) OPTION
                                     0000  8100 ;
                                     0000  8200 ; OWN STORAGE:
                                     0000  8300 ;
                                 00000000  8400 	.PSECT	$LNK_CHARS$,NOEXE,NOWRT,BYTE
                                     0000  8500 ILLCHARSET:
            60 5E 5C 3F 2B 2A 27 26  0000  8600 	.ASCII	/&'*+?\^`/			; SET OF CHARACTERS ILLEGAL FOR ALL STATES
                                     0008  8700 						; I.E. THOSE BETWEEN $ AND
                                     0008  8800 						; LOWER CASE Z
                                     0008  8900 ILLSETEND:					; REFERENCE LABEL
                                     0008  9000 ECHOLINE:
                        44 41 21 03  0008  9100 	.ASCII	<3>/!AD/			; FAO STRING TO ECHO THE LINE
                                     000C  9200 ;
                                 00000000  9300 	.PSECT	$LNK_STATETBL$,NOEXE,NOWRT,LONG
                                     0000  9400 ;
                           00000000  0000  9500 STATE_CODE = 0					; INITIALIZE CODE
                                     0000  9600 STATETABLE:					; REFERENCE LABEL
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page   3
X01.09          PARSING ROUTINE                                                                                                  (1)

                                     0000  9800 	.SBTTL	PARSING ROUTINE
                                     0000  9900 ;++
                                     0000 10000 ; FUNCTIONAL DESCRIPTION:
                                     0000 10100 ;	THIS ROUTINE IS CALLED AFTER OPENING AN OPTION DESCRIPTION FILE UPON WHICH A RAB
                                     0000 10200 ;	HAS BEEN CONNECTED DURING THE GENERAL COMMAND PROCESSING PHASE OF THE LINKER. IT D
                                     0000 10300 ;	SOME OF THE FUNCTIONALITY OF THE COMMAND LANGUAGE INTERPRETER AND PROVIDES FOR THE
                                     0000 10400 ;	OPTIONS NOT PROCESSED BY CLI.
                                     0000 10500 ;
                                     0000 10600 ;	RECORDS ARE READ SEQUENTIALLY FROM THE FILE AND PARSED UNTIL END OF FILE.
                                     0000 10700 ;	THE PARSING ROUTINE LOOKS FOR SPECIAL AND ILLEGAL CHARACTERS THEN FOR
                                     0000 10800 ;	CHARACTERS THAT TERMINATE THE CURRENT STATE. UPON DETECTION OF A STATE TERMINATOR
                                     0000 10900 ;	A ROUTINE TO PROCESS THE TOKEN BUILT BY THAT STATE IS CALLED. IF, DURING
                                     0000 11000 ;	THE CHARACTER PROCESSING ANY CHARACTER IS NOT SIGNIFIACANT TO THE CURRENT STATE
                                     0000 11100 ;	IT IS MERELY ADDED INTO THE CURRENT TOKEN. THE CHARCTERS WHICH ARE SIGNIFICANT
                                     0000 11200 ;	TO A PARTICULAR STATE ARE DEFINED IN TABLES: ONE FOR A SET ILLEGAL IN THE
                                     0000 11300 ;	CURRENT STATE; ANOTHER FOR THE STATE TERMINATOR SET. THE TERMINATOR
                                     0000 11400 ;	OF A STATE DEFINES THE NEXT STATE.
                                     0000 11500 ;
                                     0000 11600 ; CALLING SEQUENCE:
                                     0000 11700 ;	PROCEDURE CALL WITH ARGUMENTS IN FOLLOWING ORDER
                                     0000 11800 ;		- ADDRESS OF THE CLI REQUEST DESCRIPTOR FOR PRIMARY INPUT FILES
                                     0000 11900 ;		- THE ADDRESS OF THE FILE CONTROL FLAGS
                                     0000 12000 ;		- THE ADDRESS OF THE RAB CONNECTED FOR GET SEQUENTIAL
                                     0000 12100 ;
                                     0000 12200 ; IMPLICIT INPUTS:
                                     0000 12300 ;	THE OPTION FILE IS OPEN
                                     0000 12400 ;	A RAB IS CONNECTED
                                     0000 12500 ;
                                     0000 12600 ; OUTPUT PARAMETERS:
                                     0000 12700 ;
                                     0000 12800 ;	NONE
                                     0000 12900 ;
                                     0000 13000 ; IMPLICIT OUTPUTS:
                                     0000 13100 ;	ERROR MESSAGES FOR SYNTACTIC, SEMANTIC AND I/O ERRORS
                                     0000 13200 ;
                                     0000 13300 ; COMPLETION CODES:
                                     0000 13400 ;
                                     0000 13500 ;	NONE
                                     0000 13600 ;
                                     0000 13700 ; SIDE EFFECTS:
                                     0000 13800 ;
                                     0000 13900 ;	ERRORS ARE FATAL AND THE LINKER TERMINATES
                                     0000 14000 ;
                                     0000 14100 ;--
                                 00000000 14200 	.PSECT	$CODE$,NOWRT,LONG
                                     0000 14300 ;
                                     0000 14400 	.ENTRY	LNK$PROCOPTNS,^M<R2,R3,R4,R5,R6,R7,-	; ENTRY POINT AND
                               0FFC' 0000 14500 				R8,R9,R10,R11>		; REGISTER SAVE MASK
            50         04 AC     D0  0002 14600 	MOVL	B^REQSTBLKADR(AP),R0		; GET REQUEST BLOCK ADDRESS
            7E         08 A0     7D  0006 14700 	MOVQ	B^CLI$W_RQSIZE(R0),-(SP)	; AND SAVE THE FILENAME DESCRIPTOR
                          7E     7C  000A 14800 	CLRQ	-(SP)				; CREATE MORE LOCAL STORAGE - FILENAMEDESC
                          7E     7C  000C 14900 	CLRQ	-(SP)				; CUROPTROUTINE AND CUROPTPARDESC
                          7E     7C  000E 14950 	CLRQ	-(SP)				; CUROPTDESC
            5E       FF7C CE     9E  0010 15000 	MOVAB	W^-MAXTOKENLENGTH(SP),SP	; MAKE SOME LOCAL STORAGE
            59            5E     D0  0015 15100 	MOVL	SP,R9				; R9 = NEXT AVAILABLE TOKEN
                          5A     D4  0018 15200 	CLRL	R10				; STORAGE CELL, R10 = CURRENT
            5B            59     D0  001A 15300 	MOVL	R9,R11				; LENGTH AND R11 = START OF IT
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page   4
X01.09          PARSING ROUTINE                                                                                                  (1)

            57       0000'CF     9E  001D 15400 	MOVAB	W^NULL_STATETBL,R7		; START IN NULL STATE
                                     0022 15500 NEXTREC:
            52         0C AC     D0  0022 15600 	MOVL	B^RABADR(AP),R2			; GET RAB ADDRESS
                                     0026 15700 	$GET	RAB=(R2)			; AND ATTEMPT TO GET NEXT RECORD
                          62     DF  0026       		PUSHAL	(R2)
   00000000'9F            01     FB  0028       		CALLS	#$$.TMP1,@#SYS$GET
            44            50     E8  002F 15800 	BLBS	R0,GETCHARLOOP			; BRANCH IF SUCCESSFUL READ
   00000000'8F            50     D1  0032 15900 	CMPL	R0,#RMS$_EOF			; END OF FILE?
                          0E     12  0039 16000 	BNEQ	10$				; BRANCH IF NOT
                          5A     D5  003B 16100 	TSTL	R10				; HAVE PART OF A TOKEN?
                          34     12  003D 16200 	BNEQ	20$				; BRANCH IF SO
   0000008C'8F            57     D1  003F 16300 	CMPL	R7,#OKEY_STATETBL		; HAVE WE REACHED OPTION
                          2B     12  0046 16400 	BNEQ	20$				; KEY STATE. ERROR IF NOT
                                 04  0048 16500 	RET					; ELSE ALL DONE WITH THIS FILE
                                     0049 16600 10$:
            53         F8 AD     7D  0049 16700 	MOVQ	FILENAMEDESC(FP),R3		; RETRIEVE THE FILENAME
            52            50     D0  004D 16800 	MOVL	R0,R2				; DESCRIPTOR AND THE READ ERROR
            51            05     9A  0050 16900 	MOVZBL	#5,R1				; CODE WHICH IS 3 EXTRA ARGUMENTS
            50   0000001C'8F     D0  0053 17000 	MOVL	#<<SEV$C_INFOR@24> + <ERM$C_OPTREDERR@16> + ^M<R2,R3,R4>>,R0
                          016D   30  005A 17100 	BSBW	ERROUT				; GO OUTPUT MESSAGE
            50         0C AC     D0  005D 17110 	MOVL	B^RABADR(AP),R0			; RETRIEVE RAB ADDRESS
                       0C A0     DD  0061 17120 	PUSHL	B^RAB$L_STV(R0)			; PUSH THE DATA
            7E         00'8F     9A  0064 17130 	MOVZBL	#SEV$C_FATAL,-(SP)		; THE SEVERITY
            52            07     CB  0068 17140 	BICL3	#7,R2,-(SP)			; AND THE RMS ERROR CODE
                          7E         006B       
   00000000'EF            03     FB  006C 17150 	CALLS	#3,LNK$ERRMSG			; AND OUTPUT SECOND MESSAGE
                                     0073 17200 20$:
                          00A3   31  0073 17300 	BRW	UNTERM				; NON NULL TOKEN IS SYNTAX ERROR
                                     0076 17400 ;
                                     0076 17500 	.ENABL	LSB
                                     0076 17600 ;
                                     0076 17700 GETCHARLOOP:
            56         22 A2     3C  0076 17800 	MOVZWL	B^RAB$W_RSZ(R2),R6		; EXTRACT THE LENGTH AND
                          A6     13  007A 17900 	BEQL	NEXTREC				; GO FOR ANOTHER IF NULL
            55         28 A2     D0  007C 18000 	MOVL	B^RAB$L_RBF(R2),R5		; GET ADDRESS OF THE RECORD
                          00'    E1  0080 18010 	BBC	S^#LNK$S_VERIFY,W^LNK$GL_CTLMSK,-	; VERIFY THE RECORD IFF
            0D       0000'CF         0082 18020 			5$			; CONTROL BIT SET
                          55     DD  0086 18100 	PUSHL	R5				; BUILD ARGUMENT LIST WITH
                          56     DD  0088 18200 	PUSHL	R6				; LINE DESCRIPTOR
                     0008'CF     9F  008A 18300 	PUSHAB	W^ECHOLINE			; AND THE FAO STRING
       0000'CF            03     FB  008E 18400 	CALLS	#3,W^LNK$DIAG		;***
                                     0093 18410 5$:
            56            55     C0  0093 18500 	ADDL	R5,R6				; POINT TO END OF RECORD + 1
            58            5A     D0  0096 18550 	MOVL	R10,R8				; SAVE CURRENT TOKEN LENGTH
                                     0099 18600 ;
                                     0099 18700 ;	REGISTER USAGE:
                                     0099 18800 ;		R4 CURRENT CHARACTER
                                     0099 18900 ;		R5 ADDRESS OF NEXT CHARACTER
                                     0099 19000 ;		R6 ADDRESS OF BYTE BEYOND END OF RECORD
                                     0099 19100 ;		R7 CURRENT STATE TABLE ADDRESS
                                     0099 19200 ;		R8 NEXT STATE CODE AND SAVED TOKEN LENGTH
                                     0099 19300 ;		R9 NEXT AVAILABLE STORE FOR TOKEN
                                     0099 19400 ;		R10 LENGTH OF TOKEN
                                     0099 19500 ;		R11 ADDRESS OF TOKEN
                                     0099 19600 10$:
            56            55     D1  0099 19700 	CMPL	R5,R6			; SKIP IF END OF RECORD
                          3B     13  009C 19800 	BEQL	25$
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page   5
X01.09          PARSING ROUTINE                                                                                                  (1)

            54            85     9A  009E 19900 	MOVZBL	(R5)+,R4		; GET NEXT CHARACTER
            09            54     91  00A1 20000 	CMPB	R4,#TAB			; SKIP HORIZONTAL TABS
                          F3     13  00A4 20100 	BEQL	10$
            20            54     91  00A6 20200 	CMPB	R4,#SPA			; AND SPACES
                          EE     13  00A9 20300 	BEQL	10$
            21            54     91  00AB 20400 	CMPB	R4,#^A/!/		; COMMENT DELIMITER?
                          29     13  00AE 20500 	BEQL	25$			; BRANCH IF SO
            2D            54     91  00B0 20600 	CMPB	R4,#^A/-/		; CONTINUATION CHARACTER?
                          7D     12  00B3 20700 	BNEQ	50$			; BRANCH IF NOT
            51            55     D0  00B5 20800 	MOVL	R5,R1			; SET TO SKIP IT AND
                                     00B8 20900 15$:					; ANY FOLLOWING TABS OR
            56            51     C3  00B8 21000 	SUBL3	R1,R6,R0		; SPACES PRECEEDING COMMENT OR END
                          50         00BB       
            50            09     3B  00BC 21100 	SKPC	#TAB,R0,(R1)		; OF RECORD
                          61         00BF       
                          03     12  00C0 21200 	BNEQ	22$
                                     00C2 21300 20$:
                          FF5D   31  00C2 21400 	BRW	NEXTREC			; IF THAT WAS ALL THEN END OF LINE
                                     00C5 21500 22$:
            20            81     91  00C5 21600 	CMPB	(R1)+,#SPA
                          EE     13  00C8 21700 	BEQL	15$
            55         FF A1     9E  00CA 21800 	MOVAB	-1(R1),R5		; OTHERWISE WE HAVE A SYNTAX ERROR
            21            65     91  00CE 21900 	CMPB	(R5),#^A/!/
                          EF     13  00D1 22000 	BEQL	20$
                                     00D3 22100 ;
                                     00D3 22200 ; NON BLANK NON TAB CHARACTER FOLLOWING CONTINUATION
                                     00D3 22300 ;
            50         00'8F     9A  00D3 22400 	MOVZBL	#ERM$C_NONBTAB,R0
                          4B     11  00D7 22500 	BRB	40$
                                     00D9 22600 25$:						; END OF LOGICAL LINE
            58            5A     D1  00D9 22610 	CMPL	R10,R8				; WAS ANYTHING USED ON THE LINE
                          E4     13  00DC 22620 	BEQL	20$				; FOREGT IT IF NOT
                          54     D4  00DE 22700 	CLRL	R4				; SET SPECIAL CHAR CODE
            58         07'8F     9A  00E0 22800 	MOVZBL	#OKEY_STATECOD,R8		; AND NEXT STATE MUST BE OPTION KEY
            57   00000000'8F     D1  00E4 22900 	CMPL	#NULL_STATETBL,R7		; IF THIS IS NULL STATE THEN
                          0C     12  00EB 23000 	BNEQ	30$				;
                          5A     D5  00ED 23100 	TSTL	R10				; IF NULL TOKEN
                          D1     13  00EF 23200 	BEQL	20$				; PROCEED TO NEXT RECORD
            57       0028'CF     9E  00F1 23300 	MOVAB	W^FILE_STATETBL,R7		; TOKEN MUST BE FILENAME
                          0091   31  00F6 23400 	BRW	82$				; SO GO PROCESS IT
                                     00F9 23500 30$:						;
            57   00000078'8F     D1  00F9 23600 	CMPL	#NVAL_STATETBL,R7		; IF NULL VALUE STATE
                          0A     12  0100 23700 	BNEQ	35$				; THEN THE CURRENT TOKEN
                          5A     D5  0102 23800 	TSTL	R10				; SHOULD BE NULL
                          03     13  0104 23900 	BEQL	32$				; IF NOT THEN
                          009A   31  0106 24000 	BRW	ILLCHAR				; ILLEGAL CHARACTER
                                     0109 24100 32$:						;
                          007E   31  0109 24200 	BRW	82$
                                     010C 24300 35$:
            57   0000008C'8F     D1  010C 24400 	CMPL	#OKEY_STATETBL,R7		; IF IN OPTION KEYWORD
                          12     12  0113 24500 	BNEQ	45$				; THEN CHECK WE HAVE
                          5A     D5  0115 24600 	TSTL	R10				; A NULL TOKEN
                          74     13  0117 24700 	BEQL	83$				; AND IF NOT
                                     0119 24800 UNTERM:
            50         00'8F     9A  0119 24900 	MOVZBL	#ERM$C_PARMDEL,R0		; WE HAVE UNTERMINATED
            59            5A     C3  011D 25000 	SUBL3	R10,R9,R5			; PARAMETER, SO SET ITS BEGIN
                          55         0120       
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page   6
X01.09          PARSING ROUTINE                                                                                                  (1)

            56            59     D0  0121 25100 	MOVL	R9,R6				; AND END POINTERS
                                     0124 25200 40$:
                          0082   31  0124 25300 	BRW	SYNTAX				;
                                     0127 25400 45$:
                          5A     D5  0127 25500 	TSTL	R10				; OTHERWISE IF WE HAVE
                          5F     12  0129 25600 	BNEQ	82$				; A NULL TOKEN IT IS
                                     012B 25650 NULFILE:
            50       0000'8F     3C  012B 25700 	MOVZWL	#<<SEV$C_FATAL@8> + ERM$C_NULFIL>,R0
                          77     11  0130 25800 	BRB	SYNTAX				; A FATAL SYNTAX ERROR
                                     0132 25900 50$:
       0008'8F            54     3A  0132 26000 	LOCC	R4,#<ILLSETEND-ILLCHARSET>,W^ILLCHARSET ; CHECK FOR A CHARACTER
                     0000'CF         0137       
                          67     12  013A 26100 	BNEQ	ILLCHAR			; THAT IS ILLEGAL IN ANY STATE
            24            54     91  013C 26200 	CMPB	R4,#^A/$/		; IE. IF IN THE ILLEGAL SET TABLE
                          62     19  013F 26300 	BLSS	ILLCHAR			; PRECEEDS $ IN ASCII SET
         7A 8F            54     91  0141 26400 	CMPB	R4,#^A/z/		; FOLLOWS LOWER CASE Z
                          5C     14  0145 26500 	BGTR	ILLCHAR			; IF IT IS LOWER CASE
         61 8F            54     91  0147 26600 	CMPB	R4,#^A/a/		; CONVERT TO UPPER
                          05     19  014B 26700 	BLSS	60$
            54            20     82  014D 26800 	SUBB2	#32,R4			; AND IS STATE INDEPENDENT
                          16     11  0150 26900 	BRB	70$			; SO GO ADD INTO TOKEN
                                     0152 27000 60$:
         5A 8F            54     91  0152 27100 	CMPB	R4,#^A/Z/		; CHECK FOR ALPHA NUMERICS
                          17     14  0156 27200 	BGTR	80$			; AND IF NOT ONE THEN IT IS
         41 8F            54     91  0158 27300 	CMPB	R4,#^A/A/		; A STATE DEPENDENT
                          0A     14  015C 27400 	BGTR	70$			; CHARACTER. OTHERWISE
            39            54     91  015E 27500 	CMPB	R4,#^A/9/		; BEING INDEPENDENT JUST
                          0C     14  0161 27600 	BGTR	80$			; ADD INTO CURRENT
            30            54     91  0163 27700 	CMPB	R4,#^A/0/		; TOKEN
                          07     19  0166 27800 	BLSS	80$
                                     0168 27900 70$:					; ADD CURRENT CHARACTER
            89            54     90  0168 28000 	MOVB	R4,(R9)+		; TO THE TOKEN BEING
                          5A     D6  016B 28100 	INCL	R10			; BUILT
                          2B     11  016D 28200 	BRB	85$			; AND GO GET THE NEXT
                                     016F 28300 80$:					; HERE WE HAVE A CHARACTER WHICH IS
                          54     3A  016F 28400 	LOCC	R4,B^STA_W_ILLSETLEN(R7),-; STATE DEPENDENT. FIRST CHECK
         04'B7         00'A7         0171 28500 		@B^STA_L_ILLSETADR(R7)	; IT IS LEGAL
                          2C     12  0175 28600 	BNEQ	ILLCHAR			; AND BRANCH IF NOT
            58         08'A7     D0  0177 28700 	MOVL	B^STA_L_TRMSETADR(R7),R8; GET ADDRESS OF STATE TERMINATOR SET
         02'A7            54     3A  017B 28800 	LOCC	R4,B^STA_W_TRMSETLEN(R7),(R8) ; AND CHECK IF ONE OF THEM
                          68         017F       
                          E6     13  0180 28900 	BEQL	70$			; AND IF NOT JUST ADD INTO TOKEN
            51            58     C2  0182 29000 	SUBL2	R8,R1			; IF IT IS GET ITS INDEX
            58         0C'B741   9A  0185 29100 	MOVZBL	@B^STA_L_NXTSTATBL(R7)[R1],R8 ; TO EXTRACT CODE OF NEXT STATE
                                     018A 29200 82$:
                       10'B7     16  018A 29300 	JSB	@B^STA_L_ROUTINE(R7)	; AND JUMP TO THE STATE PROCESSING
                                     018D 29400 83$:
            58         14'8F     84  018D 29500 	MULB2	#STA_K_TBLENTSIZ,R8	; ROUTINE THEN
            57       0000'C8     9E  0191 29600 	MOVAB	STATETABLE(R8),R7	; SET NEW STATE
                          54     D5  0196 29700 	TSTL	R4			; IF NOT END OF LINE
                          06     13  0198 29800 	BEQL	90$
                                     019A 29900 85$:
            58            01     CE  019A 29910 	MNEGL	#1,R8			; DESTROY SAVED TOKEN LENGTH
                          FEF9   31  019D 30000 	BRW	10$			; GO GET NEXT CHARACTER
                                     01A0 30100 90$:
                          FE7F   31  01A0 30200 	BRW	NEXTREC			; ELSE GET A NEW RECORD
                                     01A3 30300 	.DSABL	LSB
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page   7
X01.09          PARSING ROUTINE                                                                                                  (1)

                                     01A3 30400 ;
                                     01A3 30500 ;	ILLEGAL CHARACTER DETECTED
                                     01A3 30600 ;
                                     01A3 30700 ILLCHAR:
                          55     D7  01A3 30800 	DECL	R5			; BACK UP TO THE BAD CHARACTER
            50         00'8F     9A  01A5 30900 	MOVZBL	#ERM$C_IVCHAR,R0
                                     01A9 31000 ;
                                     01A9 31100 ;	ALL SYNTAX ERRORS
                                     01A9 31200 ;
                                     01A9 31300 SYNTAX:
            52         F8 AD     7D  01A9 31400 	MOVQ	FILENAMEDESC(FP),R2	; GET THE SAVED FILENAME DESCRIPTOR
            51            04     9A  01AD 31500 	MOVZBL	#4,R1			; WHICH IS TWO EXTRA ARGUMENTS
            50            10     9C  01B0 31600 	ROTL	#16,R0,R0		; MOVE SEVERITY & CODE TO HI WORD
                          50         01B3       
            50            0C     A8  01B4 31700 	BISW2	#^M<R2,R3>,R0		; SET ARGUMENT PUSH MASK
                          11     10  01B7 31800 	BSBB	ERROUT			; AND GO OUTPUT IT. IF IT RETURNS, ERROR
            56            55     C3  01B9 31900 	SUBL3	R5,R6,R2		; WAS NOT FATAL SO OUTPUT THE
                          52         01BC       
            53            55     D0  01BD 32000 	MOVL	R5,R3			; ERRONEOUS LINE SEGMENT AS FATAL
            51            04     9A  01C0 32100 	MOVZBL	#4,R1			; I.E. LENGTH IN R2, ADDRESS IN R3
            50   0000000C'8F     D0  01C3 32200 	MOVL	#<<SEV$C_FATAL@24> + <ERM$C_LINERR@16> + ^M<R2,R3>>,R0
                                     01CA 32300 ;
                                     01CA 32400 ;	ALL ERRORS COME HERE
                                     01CA 32500 ;
                                     01CA 32600 ERROUT:
                          50     BB  01CA 32700 	PUSHR	R0			; PUSH THE MESSAGE ARGUMENTS PER MASK
            50            08     9C  01CC 32800 	ROTL	#8,R0,R0		; GET ERROR SEVERITY
                          50         01CF       
            7E            50     9A  01D0 32900 	MOVZBL	R0,-(SP)		; INTO ARGUMENT LIST
            50            08     9C  01D3 33000 	ROTL	#8,R0,R0		; THEN THE ERROR CODE
                          50         01D6       
            7E            50     9A  01D7 33100 	MOVZBL	R0,-(SP)		; ITSELF
       0000'CF            51     FB  01DA 33200 	CALLS	R1,W^LNK$ERRMSG		; AND GO OFF AND DO IT
                                 05  01DF 33300 	RSB				; RETURN IF RETURN
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page   8
X01.09          NULL STATE                                                                                                       (1)

                                     01E0 33500 	.SBTTL	NULL STATE
                                     01E0 33600 ;
                                     01E0 33700 ;++
                                     01E0 33800 ;	THE NULL STATE IS THE START STATE
                                     01E0 33900 ;--
                                     01E0 34000 ;
                                     01E0 34100 	GENSTATEDESC	NULL,-
                                     01E0 34200 			ILLCHARSET=#%()>@]#,-	; ILLEGAL CHARACTERS
                                     01E0 34300 			TRMCHARSET=<#[,/=#>,-	; TERMINATOR SET
                                     01E0 34400 			LEFTANGLE=TRM,-		; INCLUDES <
                                     01E0 34500 			TRANSTATES=<DIR,DIR,-	; < AND [ GO TO DIRECTORY STATE
                                     01E0 34600 				FILE,FILE,-	; ,/ GO TO FILE STATE
                                     01E0 34700 				OKEY>,-		; AND = GOES TO OPTION KEYWORD
                                     01E0 34800 			ROUTINE=PRONULLSTATE	;
                                     01E0       	.SAVE
                                 0000000C       	.PSECT	$LNK_CHARS$,NOEXE,NOWRT,BYTE
                  5D 40 3E 29 28 25  000C       	.ASCII #%()>@]#
                                 3C  0012       	.IIF IDN, <TRM>,<TRM>, .ASCII #<#
                        3D 2F 2C 5B  0013       	.ASCII	#[,/=#
                                 01' 0017       	.BYTE	DIR_STATECOD
                                 01' 0018       	.BYTE	DIR_STATECOD
                                 02' 0019       	.BYTE	FILE_STATECOD
                                 02' 001A       	.BYTE	FILE_STATECOD
                                 07' 001B       	.BYTE	OKEY_STATECOD
                                 00000000       	.PSECT	$LNK_STATETBL$,NOEXE,NOWRT,LONG
                                     0000       NULL_STATETBL:
                               0006  0000       	.WORD	$$TRMSET-$$ILLSET
                               0005  0002       	.WORD	$$TRANTBL-$$TRMSET
                           0000000C' 0004       	.LONG	$$ILLSET
                           00000012' 0008       	.LONG	$$TRMSET
                           00000017' 000C       	.LONG	$$TRANTBL
                           000001E0' 0010       	.LONG	PRONULLSTATE
                                 000001E0       	.RESTORE
                                     01E0 34900 ;
                                     01E0 35000 PRONULLSTATE:
         01'8F            58     91  01E0 35100 	CMPB	R8,#DIR_STATECOD		; IF NEXT STATE IS NOT
                          03     13  01E4 35200 	BEQL	PRODIRSTATE			; DIRECTORY, BACK UP THE
                          55     D7  01E6 35300 	DECL	R5				; CHARACTER POINTER
                                 05  01E8 35400 	RSB
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page   9
X01.09          DIRECTORY STATE                                                                                                  (1)

                                     01E9 35600 	.SBTTL	DIRECTORY STATE
                                     01E9 35700 ;
                                     01E9 35800 ;++
                                     01E9 35900 ;	THE DIRECTORY STATE IS PROVIDED FOR FILTERING THE COMMA
                                     01E9 36000 ;	AND FOR SYNTAX CHECKING. THE ACTION ROUTINE MERELY RETURNS
                                     01E9 36100 ;	TO THE CALLER.
                                     01E9 36200 ;
                                     01E9 36300 ;--
                                     01E9 36400 ;
                                     01E9 36500 	GENSTATEDESC	DIR,-
                                     01E9 36600 			ILLCHARSET=<#[%()/:;=@#>,-	; ILLEGAL CHARACTERS
                                     01E9 36700 			LEFTANGLE=ILL,-			; INCLUDE <
                                     01E9 36800 			TRMCHARSET=#]>#,-		; TERMINATOR
                                     01E9 36900 			TRANSTATES=<FILE,FILE>,-	; GOES BACK TO FILE STATE
                                     01E9 37000 			ROUTINE=PRODIRSTATE		; AND THE ROUTINE
                                     01E9       	.SAVE
                                 0000001C       	.PSECT	$LNK_CHARS$,NOEXE,NOWRT,BYTE
                                 3C  001C       	.IIF IDN, <ILL>,<ILL>, .ASCII #<#
         40 3D 3B 3A 2F 29 28 25 5B  001D       	.ASCII #[%()/:;=@#
                              3E 5D  0026       	.ASCII	#]>#
                                 02' 0028       	.BYTE	FILE_STATECOD
                                 02' 0029       	.BYTE	FILE_STATECOD
                                 00000014       	.PSECT	$LNK_STATETBL$,NOEXE,NOWRT,LONG
                                     0014       DIR_STATETBL:
                               000A  0014       	.WORD	$$TRMSET-$$ILLSET
                               0002  0016       	.WORD	$$TRANTBL-$$TRMSET
                           0000001C' 0018       	.LONG	$$ILLSET
                           00000026' 001C       	.LONG	$$TRMSET
                           00000028' 0020       	.LONG	$$TRANTBL
                           000001E9' 0024       	.LONG	PRODIRSTATE
                                 000001E9       	.RESTORE
                                     01E9 37100 ;
                                     01E9 37200 PRODIRSTATE:
            89            54     90  01E9 37300 	MOVB	R4,(R9)+			; ADD INTO CURRENT TOKEN
                          5A     D6  01EC 37400 	INCL	R10				; THE TERMINATORS
                                 05  01EE 37500 	RSB					; JUST RETURN
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  10
X01.09          FILE STATE                                                                                                       (1)

                                     01EF 37700 	.SBTTL	FILE STATE
                                     01EF 37800 ;++
                                     01EF 37900 ;	THIS ROUTINE HANDLES THE TRANSITION FROM FILE STATE TO 
                                     01EF 38000 ;	ANOTHER.
                                     01EF 38100 ;	IF THE NEXT STATE STATE IS NOT THAT FOR A QUALIFIER, THE
                                     01EF 38200 ;	CURRENT TOKEN (DESCRIBED BY R10 AND R11) IS A FILE NAME
                                     01EF 38300 ;	AND THE DESCRIPTOR IS STORED IN THE CLI REQUEST BLOCK THEN
                                     01EF 38400 ;	THE "PARAMETER PRESENT" ROUTINE DESCRIBED THEREIN IS CALLED
                                     01EF 38500 ;	IN THE SAME WAY AS CLI DOES IT.
                                     01EF 38600 ;	IF THE NEXT STATE IS FOR A QUALIFIER, THE CURRENT STATE IS
                                     01EF 38700 ;	EFFECTIVELY SAVED (REALLY JUST THE TOKEN) AND A COROUTINE
                                     01EF 38800 ;	RETURN IS MADE TO THE CALLER. WHEN TAHT STATE IS COMPLETED
                                     01EF 38900 ;	RE-ENTRY COMPLETES PROCESSING OF THE FILE AS DESCRIBED.
                                     01EF 39000 ;
                                     01EF 39100 ;
                                     01EF 39200 ;--
                                     01EF 39300 	GENSTATEDESC	FILE,-			; STATE NAME
                                     01EF 39400 			ILLCHARSET=#()=@]>#,-	; ILLEGAL CHARS
                                     01EF 39500 			TRMCHARSET=<#,/[#>,-	; TERMINATORS
                                     01EF 39600 			LEFTANGLE=TRM,-		; INCLUDE <
                                     01EF 39700 			TRANSTATES=<DIR,-	; < GOES TO DIRECTORY STATE
                                     01EF 39800 					FILE,-	; , >>> FILE STATE NEXT
                                     01EF 39900 					QUAL,-	; / >>> QUALIFIER NEXT
                                     01EF 40000 					DIR>,-	; [ >>> DIRECTORY NEXT
                                     01EF 40100 			ROUTINE=PROFILESTATE	; FILE PROCESSING ROUTINE
                                     01EF       	.SAVE
                                 0000002A       	.PSECT	$LNK_CHARS$,NOEXE,NOWRT,BYTE
                  3E 5D 40 3D 29 28  002A       	.ASCII #()=@]>#
                                 3C  0030       	.IIF IDN, <TRM>,<TRM>, .ASCII #<#
                           5B 2F 2C  0031       	.ASCII	#,/[#
                                 01  0034       	.BYTE	DIR_STATECOD
                                 02' 0035       	.BYTE	FILE_STATECOD
                                 03' 0036       	.BYTE	QUAL_STATECOD
                                 01  0037       	.BYTE	DIR_STATECOD
                                 00000028       	.PSECT	$LNK_STATETBL$,NOEXE,NOWRT,LONG
                                     0028       FILE_STATETBL:
                               0006  0028       	.WORD	$$TRMSET-$$ILLSET
                               0004  002A       	.WORD	$$TRANTBL-$$TRMSET
                           0000002A' 002C       	.LONG	$$ILLSET
                           00000030' 0030       	.LONG	$$TRMSET
                           00000034' 0034       	.LONG	$$TRANTBL
                           000001EF' 0038       	.LONG	PROFILESTATE
                                 000001EF       	.RESTORE
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  11
X01.09          FILE STATE                                                                                                       (1)

                                     01EF 40300 ;
                                     01EF 40400 ;	ROUTINE IS ENTERED BY JSB WITH:
                                     01EF 40500 ;		R8 = CODE OF THE NEXT STATE
                                     01EF 40600 ;		R10 = LENGTH OF CURRENT TOKEN
                                     01EF 40700 ;		R11 = ADDRESS OF CURRENT TOKEN
                                     01EF 40800 ;
                                     01EF 40900 ;	RETURNS WITH:
                                     01EF 41000 ;		R10 = 0
                                     01EF 41100 ;		R9  = RESET TO INPUT CONTENT OF R11
                                     01EF 41200 ;		R0 TO R3 CORRUPTED
                                     01EF 41300 ;
                                     01EF 41400 PROFILESTATE:
            01            58     91  01EF 41500 	CMPB	R8,#DIR_STATECOD		; NEXT STATE DIRECTORY
                          02     12  01F2 41600 	BNEQ	5$				; IGNORE TRANSITION IF SO
                          F3     11  01F4 41700 	BRB	PRODIRSTATE			; BY JUST ADDING IN THE CHARACTER
                                     01F6 41800 5$:
         03'8F            58     91  01F6 41900 	CMPB	R8,#QUAL_STATECOD		; NEXT STATE A QUALIFIER
                          12     12  01FA 42000 	BNEQ	10$				; BRANCH IF NOT
            50            6E     D0  01FC 42100 	MOVL	(SP),R0				; MOVE RETURN ADDRESS
                     0C00 8F     BB  01FF 42200 	PUSHR	#^M<R10,R11>			; SAVE THE TOKEN DESCRIPTOR
                          5A     D4  0203 42300 	CLRL	R10				; AND RESET FOR THE QUALIFIER
            5B            59     D0  0205 42400 	MOVL	R9,R11				;
                          60     16  0208 42500 	JSB	(R0)				; AND CALL THE CALLER
                                     020A 42600 ;
                                     020A 42700 ;	UPON RETURN, ALL QUALIFIER STUFF HAS BEEN DONE
                                     020A 42800 ;	SO WE CAN NOW CALL THE FILE ACTION ROUTINE
                                     020A 42900 ;
                     0C00 8F     BA  020A 43000 	POPR	#^M<R10,R11>			; RETRIEVE FILENAME DESCRIPTOR
                                     020E 43100 10$:
                          5A     D5  020E 43110 	TSTL	R10				; CHECK NON NULL
                          03     12  0210 43120 	BNEQ	15$
                          FF16   31  0212 43130 	BRW	NULFILE				; AND ERROR IF SO
                                     0215 43140 15$:
            51         04 AC     D0  0215 43200 	MOVL	REQSTBLKADR(AP),R1		; GET THE CLI REQUEST BLOCK
                          51     DD  0219 43300 	PUSHL	R1				; ADDRESS AND PUT IN ARG LIST
         08 A1            5A     D0  021B 43400 	MOVL	R10,B^CLI$W_RQSIZE(R1)		; SET THE FILENAME DESCRIPTOR
                       0C A1     9F  021F 43500 	PUSHAB	B^CLI$A_RQADDR(R1)		; IN REQUEST BLOCK
                          5A     DD  0222 43510 	PUSHL	R10				; AND IN ARG LIST TO ALLOCATE
       0000'CF            02     FB  0224 43520 	CALLS	#2,W^LNK$ALLOBLK		; A BLOCK FOR THE FILENAME
            51            6E     D0  0229 43522 	MOVL	(SP),R1				; RETRIEVE DESCRIPTOR ADDRESS
                          30     BB  022C 43524 	PUSHR	#^M<R4,R5>			; SAVE 
            6B            5A     28  022E 43530 	MOVC3	R10,(R11),@B^CLI$A_RQADDR(R1)	; AND COPY IT IN
                       0C B1         0231       
                          30     BA  0233 43532 	POPR	#^M<R4,R5>			; RESTORE
            51            6E     D0  0235 43534 	MOVL	(SP),R1				; ...
            50         01 A1     9A  0238 43600 	MOVZBL	B^CLI$B_BITNUM(R1),R0		; GET THE BIT TO SET FOR
         08 BC            50     E2  023C 43700 	BBSS	R0,@FILEFLGSADR(AP),20$		; PARAMETER AND SET IT
                          00         0240       
                                     0241 43800 20$:
            51         10 A1     C0  0241 43900 	ADDL	B^CLI$A_PRSACT(R1),R1		; GET ADDRESS OF ACTION
            61            01     FB  0245 44000 	CALLS	#1,(R1)				; ROUTINE AND CALL IT
                          5A     D4  0248 44100 	CLRL	R10				; RESET FOR NEW TOKEN
            59            5B     D0  024A 44200 	MOVL	R11,R9				; TO BE BUILT
                                     024D 44300 30$:
                                 05  024D 44400 	RSB					; AND ALL DONE
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  12
X01.09          QUALIFIER STATE                                                                                                  (1)

                                     024E 44600 	.SBTTL	QUALIFIER STATE
                                     024E 44700 ;
                                     024E 44800 ;++
                                     024E 44900 
                                     024E 45000 
                                     024E 45100 
                                     024E 45200 
                                     024E 45300 
                                     024E 45400 
                                     024E 45500 
                                     024E 45600 ;--
                                     024E 45700 ;
                                     024E 45800 	GENSTATEDESC	QUAL,-
                                     024E 45900 			ILLCHARSET=<#$%().;@[]<>#>,- ; ILLEGAL SET
                                     024E 46000 			TRMCHARSET=<#,/:=#>,-	; TERMINATOR SET
                                     024E 46100 			TRANSTATES=<FILE,-	; , >>> NEXT IS FILE STATE
                                     024E 46200 					QUAL,-	; / >>> NEXT IS QUALIFIER
                                     024E 46300 					VALU,-	; : >>> NEXT IS VALUE
                                     024E 46400 					VALU>,-	; = >>> NEXT IS VALUE
                                     024E 46500 			ROUTINE=PROQUALSTATE	; PROCESSING ROUTINE
                                     024E       	.SAVE
                                 00000038       	.PSECT	$LNK_CHARS$,NOEXE,NOWRT,BYTE
   3E 3C 5D 5B 40 3B 2E 29 28 25 24  0038       	.ASCII #$%().;@[]<>#
                        3D 3A 2F 2C  0043       	.ASCII	#,/:=#
                                 02  0047       	.BYTE	FILE_STATECOD
                                 03' 0048       	.BYTE	QUAL_STATECOD
                                 04' 0049       	.BYTE	VALU_STATECOD
                                 04' 004A       	.BYTE	VALU_STATECOD
                                 0000003C       	.PSECT	$LNK_STATETBL$,NOEXE,NOWRT,LONG
                                     003C       QUAL_STATETBL:
                               000B  003C       	.WORD	$$TRMSET-$$ILLSET
                               0004  003E       	.WORD	$$TRANTBL-$$TRMSET
                           00000038' 0040       	.LONG	$$ILLSET
                           00000043' 0044       	.LONG	$$TRMSET
                           00000047' 0048       	.LONG	$$TRANTBL
                           0000024E' 004C       	.LONG	PROQUALSTATE
                                 0000024E       	.RESTORE
                                     024E 46600 ;
                                     024E 46700 ;	GENERATE THE QUALIFIER DESCRIPTIONS
                                     024E 46800 ;
                                 0000004B 46900 	.PSECT	$LNK_CHARS$,NOEXE,NOWRT,BYTE
                                     004B 47000 ;
                                     004B 47100 QUALTABLE:					; REFERENCE LABEL
                                     004B 47200 	GENQUALDESC	STRING=SELECTIVE,-
                                     004B 47300 			NAME=SELE,-
                                     004B 47400 			VALUTYPE=NEV		; NO VALUE ON SELECTIVE SEARCH
                                     004B       	.SAVE
                                 0000004B       	.PSECT	$LNK_CHARS$,NOEXE,NOWRT,BYTE
                                 D3  004B       	.IIF	EQ	$$0-1,	.BYTE	^A/S/!FIRST_CHAR
                                 45  004C       	.IIF	NE	$$0-1,	.BYTE	^A/E/
                                 4C  004D       	.IIF	NE	$$0-1,	.BYTE	^A/L/
                                 45  004E       	.IIF	NE	$$0-1,	.BYTE	^A/E/
                                 00' 004F       	.BYTE	CLI$K_LINK_SELE
                                 02' 0050       	.BYTE	QUA_K_VALNEV
                                 0000004B       	.RESTORE
                                     004B 47500 
                                     004B 47600 	GENQUALDESC	STRING=LIBRAR,-
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  13
X01.09          QUALIFIER STATE                                                                                                  (1)

                                     004B 47700 			NAME=LIBR,-
                                     004B 47800 			VALUTYPE=OPT		; VALUE IS OPTIONAL
                                     004B       	.SAVE
                                 00000051       	.PSECT	$LNK_CHARS$,NOEXE,NOWRT,BYTE
                                 CC  0051       	.IIF	EQ	$$0-1,	.BYTE	^A/L/!FIRST_CHAR
                                 49  0052       	.IIF	NE	$$0-1,	.BYTE	^A/I/
                                 42  0053       	.IIF	NE	$$0-1,	.BYTE	^A/B/
                                 52  0054       	.IIF	NE	$$0-1,	.BYTE	^A/R/
                                 00' 0055       	.BYTE	CLI$K_LINK_LIBR
                                 01' 0056       	.BYTE	QUA_K_VALOPT
                                 0000004B       	.RESTORE
                                     004B 47900 
                                     004B 48000 	GENQUALDESC	STRING=INCLUDE,-
                                     004B 48100 			NAME=INCL,-
                                     004B 48200 			VALUTYPE=REQ		; VALUE REQUIRED ON /INCLUDE
                                     004B       	.SAVE
                                 00000057       	.PSECT	$LNK_CHARS$,NOEXE,NOWRT,BYTE
                                 C9  0057       	.IIF	EQ	$$0-1,	.BYTE	^A/I/!FIRST_CHAR
                                 4E  0058       	.IIF	NE	$$0-1,	.BYTE	^A/N/
                                 43  0059       	.IIF	NE	$$0-1,	.BYTE	^A/C/
                                 4C  005A       	.IIF	NE	$$0-1,	.BYTE	^A/L/
                                 00' 005B       	.BYTE	CLI$K_LINK_INCL
                                 00' 005C       	.BYTE	QUA_K_VALREQ
                                 0000004B       	.RESTORE
                                     004B 48300 
                                     004B 48305 	GENQUALDESC	STRING=SHAREABLE,-	; SHAREABLE IMAGE INPUT
                                     004B 48310 			NAME=SHAR,-		; FILE. NOTE THAT AT PRESENT
                                     004B 48315 			VALUTYPE=OPT		; THIS CAN ONLY BE SPECIFIED
                                     004B       	.SAVE
                                 0000005D       	.PSECT	$LNK_CHARS$,NOEXE,NOWRT,BYTE
                                 D3  005D       	.IIF	EQ	$$0-1,	.BYTE	^A/S/!FIRST_CHAR
                                 48  005E       	.IIF	NE	$$0-1,	.BYTE	^A/H/
                                 41  005F       	.IIF	NE	$$0-1,	.BYTE	^A/A/
                                 52  0060       	.IIF	NE	$$0-1,	.BYTE	^A/R/
                                 00' 0061       	.BYTE	CLI$K_LINK_SHAR
                                 01' 0062       	.BYTE	QUA_K_VALOPT
                                 0000004B       	.RESTORE
                                     004B 48320 						; IN AN OPTIONS FILE
                                     004B 48325 
                                     004B 48327 	.SAVE
                                 00000000 48330 	.PSECT	$OWN$,NOEXE
                                     0000 48335 EXTRA_QDLIST:					; LIST OF QUALIFIERS KNOWN ONLY
                                     0000 48340 						; IN OPTIONS FILES
                                     0000 48345 	$CLIQUALDESC	QDCODE=CLI$K_LINK_SHAR,-	; SHAREABLE
                                     0000 48350 			TSTLST=LNK$S_LIBR,-		; EXCLUSIVE OF LIBRARIES
                                     0000 48355 			SETLST=LNK$S_SHR,-
                                     0000 48357 			TRUACT=LNK$SETSHRBLIN
                           00000014  0000       	.BLKB	CLI$C_QUALDEF
                           00000000  0014       	. = $CLI.+CLI$B_QDBLKSIZ
                                 19' 0000       	  .BYTE	30000$-.
                                 00' 0001       	  .BYTE	CLI$K_LINK_SHAR
                           0000000C  0002       	. = $CLI.+CLI$A_TRUACT
                           00000000' 000C       	    .LONG	<LNK$SETSHRBLIN-$CLI.>
                           00000014  0010       . = $CLI..
                                 01' 0014       	.BYTE	30001$-.-1
                                 00' 0015       	.BYTE	LNK$S_LIBR
                                     0016       30001$:
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  14
X01.09          QUALIFIER STATE                                                                                                  (1)

                                 01' 0016       	.BYTE	30002$-.-1
                                 00' 0017       	.BYTE	LNK$S_SHR
                                     0018       30002$:
                                 00  0018       	.BYTE	0
                                     0019       30000$:
                                     0019 48360 
                                     0019 48365 EXTRA_QD_END:
                                 00  0019 48370 	.BYTE	0
                                 0000004B 48375 	.RESTORE
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  15
X01.09          QUALIFIER STATE                                                                                                  (1)

                                     004B 48500 ;
                                     004B 48600 ;	ROUTINE IS ENTERED BY JSB WITH:
                                     004B 48700 ;		R8 = CODE OF NEXT STATE
                                     004B 48800 ;		R10 = LENGTH OF QUALIFIER
                                     004B 48900 ;		R11 = ADDRESS OF QUALIFIER
                                     004B 49000 ;	RETURNS WITH:
                                     004B 49100 ;		R10 = 0
                                     004B 49200 ;		R9 RESET TO ORIGINAL INPUT R11
                                     004B 49300 ;		R0 TO R3 CORRUPTED.
                                     004B 49400 ;
                                 0000024E 49500 	.PSECT	$CODE$,NOWRT,LONG
                                     024E 49600 ;
                                     024E 49700 PROQUALSTATE:
            51       004B'CF     9E  024E 49800 	MOVAB	W^QUALTABLE,R1			; GET ADDRESS OF THE QUALIFIERS
            6B         80 8F     88  0253 49900 	BISB	#FIRST_CHAR,(R11)		; SET SPECIAL FIRST CHARACTER
                                     0257 50000 10$:
            61            04     39  0257 50100 	MATCHC	#QUA_K_MINLEN,(R1),R10,(R11)	; SEARCH FOR RECOGNIZABLE
            6B            5A         025A       
                          18     13  025C 50200 	BEQL	20$				; QUALIFIER AND BRANCH IF FOUND
            51            50     C0  025E 50300 	ADDL	R0,R1				; OTHERWISE MOVE TO NEXT
                 00000063'8F     F1  0261 50400 	ACBL	#QUALTABLEND,#<QUA_K_TBLENTSIZ-QUA_K_MINLEN>,-
            51            02         0267 50500 			R1,10$			; LOOPING TILL END OF TABLE
                          FFEC       0269       
                                     026B 50600 ;
                                     026B 50700 ;	UNRECOGNIZED QUALIFIER
                                     026B 50800 ;
                                     026B 50900 15$:
            6B         80 8F     8A  026B 51000 	BICB	#FIRST_CHAR,(R11)		; RESET SPECIAL FIRST CHARACTER
            50         00'8F     9A  026F 51100 	MOVZBL	#ERM$C_UNRECQUAL,R0
                          00A6   31  0273 51200 	BRW	65$
                                     0276 51300 20$:
            6B         80 8F     8A  0276 51400 	BICB	#FIRST_CHAR,(R11)		; RESET SPECIAL FIRST CHARACTER
            50            81     9A  027A 51500 	MOVZBL	(R1)+,R0			; GET THE QUALIFIER CODE
            52         04 AC     D0  027D 51600 	MOVL	REQSTBLKADR(AP),R2		; GET CLI REQUEST BLOCK ADDRESS
            52         18 A2     C0  0281 51700 	ADDL	B^CLI$A_QUALST(R2),R2		; FROM WHICH WE GET ADDRESS
                                     0285 51800 30$:						; OF QUALIFIER DESCRIPTOR BLOCKS
            7E         00 A2     9A  0285 51900 	MOVZBL	B^CLI$B_QDBLKSIZ(R2),-(SP)	; GET SIZE OF NEXT QUALIFIER
                          14     12  0289 52000 	BNEQ	35$				; DESCRIPTOR BLOCK - BR IF NOT END
            6E            52     D0  028B 52005 	MOVL	R2,(SP)				; SET END ADDRESS
            52       0019'CF     9E  028E 52010 	MOVAB	W^EXTRA_QD_END,R2		; GET FINAL END ADDRESS
            52            8E     D1  0293 52015 	CMPL	(SP)+,R2			; AND SEE IF ANOTHER TABLE
                          D3     13  0296 52020 	BEQL	15$				; AND GIVE UP IF NO MORE
            52       0000'CF     9E  0298 52025 	MOVAB	W^EXTRA_QDLIST,R2		; GET EXTRA TABLE ADDRESS
                          E6     11  029D 52030 	BRB	30$				; AND GO AGAIN
                                     029F 52035 35$:
         01 A2            50     91  029F 52100 	CMPB	R0,B^CLI$B_QDCODE(R2)		; IS THIS THE ONE?
                          05     13  02A3 52200 	BEQL	40$				; BRANCH IF SO
            52            8E     C0  02A5 52300 	ADDL	(SP)+,R2			; THEN MOVE TO NEXT
                          DB     11  02A8 52400 	BRB	30$				; QUALIFIER AND TRY IT
                                     02AA 52500 40$:
                          8E     D5  02AA 52600 	TSTL	(SP)+
                                     02AC 52700 ;
                                     02AC 52800 ;	TEST, SET AND CLEAR BITS IN CONTROL FLAGS
                                     02AC 52900 ;
            50         14 A2     9E  02AC 53000 	MOVAB	B^CLI$C_QDBITS(R2),R0		; GET ADDRESS OF TEST, SET AND CLEAR BIT STRINGS
            59            80     9A  02B0 53100 	MOVZBL	(R0)+,R9			; GET NUMBER OF TEST BITS
                          26     13  02B3 53200 	BEQL	45$				; AND SKIP IF NONE
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  16
X01.09          QUALIFIER STATE                                                                                                  (1)

                                     02B5 53300 42$:
            53            80     9A  02B5 53400 	MOVZBL	(R0)+,R3			; GET NEXT BIT TO TEST
         08 BC            53     E1  02B8 53500 	BBC	R3,@FILEFLGSADR(AP),43$		; AND SKIP IF NOT SET
                          1B         02BC       
            50         04 AC     D0  02BD 53600 	MOVL	REQSTBLKADR(AP),R0		; ERROR SINCE A CONFLICTING QUALIFIER
         08 A0            5A     D0  02C1 53700 	MOVL	R10,B^CLI$W_RQSIZE(R0)		; SO JAM THE CURRENT BAD
         0C A0            5B     D0  02C5 53800 	MOVL	R11,B^CLI$A_RQADDR(R0)		; QUALIFIER DESCRIPTOR IN THE
                 00038802 8F     DD  02C9 53900 	PUSHL	#CLI$_CONFQUAL			; REQUEST BLOCK THEN
                          50     DD  02CF 54000 	PUSHL	R0				; BUILD ARGUMENT LIST WITH ERROR CODE
            50         04 A0     C0  02D1 54100 	ADDL	B^CLI$A_ERRACT(R0),R0		; AND REQUEST BLOCK ADDRESS THEN
            60            02     FB  02D5 54200 	CALLS	#2,(R0)				; CALL THE ERROR HANDLER *** NO RETURN ***
                                     02D8 54300 43$:
            DA            59     F5  02D8 54400 	SOBGTR	R9,42$				; GO FOR ANOTHER BIT TEST
                                     02DB 54500 45$:
            59            80     9A  02DB 54600 	MOVZBL	(R0)+,R9			; NOW GET NUMBER OF BITS
                          0B     13  02DE 54700 	BEQL	50$				; TO SET AND SKIP IF NONE
                                     02E0 54800 47$:
            53            80     9A  02E0 54900 	MOVZBL	(R0)+,R3			; GET NEXT BIT TO SET
         08 BC            53     E2  02E3 55000 	BBSS	R3,@FILEFLGSADR(AP),49$		; SET IT
                          00         02E7       
                                     02E8 55100 49$:
            F5            59     F5  02E8 55200 	SOBGTR	R9,47$				; AND GO FOR ANOTHER
                                     02EB 55300 50$:
            59            80     9A  02EB 55400 	MOVZBL	(R0)+,R9			; GET NUMBER OF BITS TO
                          0B     13  02EE 55500 	BEQL	57$				; CLEAR AND SKIP IF NONE
                                     02F0 55600 52$:
            53            80     9A  02F0 55700 	MOVZBL	(R0)+,R3			; GET NEXT BIT TO CLEAR
         08 BC            53     E5  02F3 55800 	BBCC	R3,@FILEFLGSADR(AP),55$		; CLEAR IT
                          00         02F7       
                                     02F8 55900 55$:
            F5            59     F5  02F8 56000 	SOBGTR	R9,52$				; AND GO FOR ANOTHER
                                     02FB 56100 57$:
                                     02FB 56200 ;
                                     02FB 56300 ;	ALL THE BITS ARE SET UP SO NOW VALIDATE THE VALUE IF ANY
                                     02FB 56400 ;
            59            5B     D0  02FB 56500 	MOVL	R11,R9				; RESET THE TOKEN STORAGE ADDRESS
         04'8F            58     91  02FE 56600 	CMPB	R8,#VALU_STATECOD		; IF NEXT STATE IS NOT VALUE
                          0B     12  0302 56700 	BNEQ	60$				; STATE THEN BRANCH
            02            81     91  0304 56800 	CMPB	(R1)+,#QUA_K_VALNEV		; IF IT IS, CHECK VALUE
                          16     12  0307 56900 	BNEQ	70$				; IS PERMITTED
                                     0309 57000 ;
                                     0309 57100 ;	VALUE NOT ALLOWED ON THIS QUALIFIER
                                     0309 57200 ;
            50         00'8F     9A  0309 57300 	MOVZBL	#ERM$C_NOVALU,R0
                          0D     11  030D 57400 	BRB	65$
                                     030F 57500 60$:
            00            81     91  030F 57600 	CMPB	(R1)+,#QUA_K_VALREQ		; NO VALUE PRESENT SO
                          04     13  0312 57700 	BEQL	62$				; BRANCH TO ERROR IF REQUIRED
                          5A     D4  0314 57800 	CLRL	R10				; IF NOT PRESENT AND NOT REQUIRED
                          42     11  0316 57900 	BRB	80$				; SET LENGTH TO ZERO AND CONTINUE
                                     0318 58000 ;
                                     0318 58100 ;	REQUIRED QUALIFIER VALUE MISSING
                                     0318 58200 ;
                                     0318 58300 62$:
            50         00'8F     9A  0318 58400 	MOVZBL	#ERM$C_VALREQ,R0
                                     031C 58500 65$:
                          019B   31  031C 58600 	BRW	JAMPOINTERS
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  17
X01.09          QUALIFIER STATE                                                                                                  (1)

                                     031F 58700 70$:
            5A            6E     D0  031F 58800 	MOVL	(SP),R10			; SET TO RE-CALL THE
                     0804 8F     BB  0322 58900 	PUSHR	#^M<R2,R11>			; THE CALLER BUT SAVE
                                     0326 59000 						; THE QUALIFIER DESCRIPTOR ADDRESS
                                     0326 59100 						; AND QUALIFIER STRING ADDRESS (INPUT R11)
            7E            7E     DE  0326 59200 	MOVAL	-(SP),-(SP)			; SET ADDRESS OF A LOCAL
            7E       FFFF 8F     3C  0329 59300 	MOVZWL	#MAXQUALVALENGTH,-(SP)		; TO RECEIVE THE ADDRESS OF AN
       0000'CF            02     FB  032E 59400 	CALLS	#2,W^LNK$ALLOBLK			; AREA FOR STORAGE OF THE VALUE
            5B            8E     D0  0333 59500 	MOVL	(SP)+,R11			; AND ALLOCATE THE MAXIMUM AREA
            59            5B     D0  0336 59600 	MOVL	R11,R9				; FROM DYNAMIC MEMORY
            50            5A     D0  0339 59700 	MOVL	R10,R0				; AND INITIALIZE A DESCRIPTOR
                          5A     D4  033C 59800 	CLRL	R10				; FOR IT
                          60     16  033E 59900 	JSB	(R0)				; THEN RE-CALL THE CALLER
                                     0340 60000 ;
                                     0340 60100 ;	UPON RETURN THE QUALIFIER VALUE HAS BEEN PROCESSED
                                     0340 60200 ;	AND R10-R11 ARE ITS DESCRIPTOR.
                                     0340 60300 ;
            7E         08 A9     9E  0340 60400 	MOVAB	8(R9),-(SP)			; GET ADDRESS AND LENGTH OF
            6E            07     CA  0344 60500 	BICL2	#7,(SP)				; RESIDUE BY ROUNDING UP TO
            6E            5B     C3  0347 60600 	SUBL3	R11,(SP),-(SP)			; A MULTIPLE OF 8 BYTES
                          7E         034A       
       FFFF 8F            6E     A3  034B 60700 	SUBW3	(SP),#MAXQUALVALENGTH,(SP)	; OF QUALIFIER VALUE
                          6E         0350       
       0000'CF            02     FB  0351 60800 	CALLS	#2,W^LNK$DEALBLK		; AND DEALLOCATE IT
                     0204 8F     BA  0356 60900 	POPR	#^M<R2,R9>			; RETRIEVE QUALIFIER DESCRIPTOR
                                     035A 61000 						; AND RESET R9 TO THE STRING ADDRESS
                                     035A 61100 80$:
         04 A2            5A     B0  035A 61200 	MOVW	R10,B^CLI$W_QDVALSIZ(R2)	; ADDRESS AND STORE THE
                          5A     D4  035E 61300 	CLRL	R10				; VALUE DESCRIPTOR IN
                                     0360 61400 						; THE BLOCK AND RESET
         08 A2            5B     D0  0360 61500 	MOVL	R11,B^CLI$A_QDVALADR(R2)	; THE TOKEN DESCRIPTOR
            5B            59     D0  0364 61600 	MOVL	R9,R11				; AND RESET FOR NEXT TOKEN
            50         0C A2     D0  0367 61700 	MOVL	B^CLI$A_TRUACT(R2),R0		; COMPUTE THE ACTION ROUTINE
                          08     13  036B 61800 	BEQL	90$				; ADDRESS IF ANY
            50            52     C0  036D 61900 	ADDL	R2,R0				; AND THEN CALL IT AS
                          04     BB  0370 62000 	PUSHR	#^M<R2>				; CLI WOULD, WITH ADDRESS
            60            01     FB  0372 62100 	CALLS	#1,(R0)				; OF QUALIFIER DESCRIPTOR
                                     0375 62200 90$:
            03            58     91  0375 62300 	CMPB	R8,#QUAL_STATECOD		; IF NEXT STATE IS NOT
                          08     13  0378 62400 	BEQL	100$				; A QUALIFIER STATE
         06'8F            58     91  037A 62500 	CMPB	R8,#NVAL_STATECOD		; OR THE NULL VALUE FOLLOWING
                          02     13  037E 62600 	BEQL	100$				; A MULTIPLE VALUE
                          8E     D5  0380 62700 	TSTL	(SP)+				; THEN CLEAN REMAING RETURN TO FILE PROCESSOR
                                     0382 62800 100$:
                                 05  0382 62900 	RSB					; AND DONE
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  18
X01.09          SINGLE AND MULTIPLE VALUE STATES                                                                                 (1)

                                     0383 63100 	.SBTTL	SINGLE AND MULTIPLE VALUE STATES
                                     0383 63200 ;
                                     0383 63300 ;++
                                     0383 63400 
                                     0383 63500 
                                     0383 63600 
                                     0383 63700 
                                     0383 63800 
                                     0383 63900 
                                     0383 64000 
                                     0383 64100 ;--
                                     0383 64200 ;
                                     0383 64300 	GENSTATEDESC	VALU,-
                                     0383 64400 			ILLCHARSET=<#%:);=@[]<>#>,- ; ILLEGAL CHARACTERS
                                     0383 64500 			TRMCHARSET=<#(,/#>,-	; TERMINATORS
                                     0383 64600 			TRANSTATES=<MVAL,-	; ( >>> TO MULTI VALUE STATE
                                     0383 64700 					FILE,-	; , >>> FILE STATE
                                     0383 64800 					QUAL>,-	; / >>> TO QUALIFIER
                                     0383 64900 			ROUTINE=PROSVALUE	;
                                     0383       	.SAVE
                                 00000063       	.PSECT	$LNK_CHARS$,NOEXE,NOWRT,BYTE
      3E 3C 5D 5B 40 3D 3B 29 3A 25  0063       	.ASCII #%:);=@[]<>#
                           2F 2C 28  006D       	.ASCII	#(,/#
                                 05' 0070       	.BYTE	MVAL_STATECOD
                                 02  0071       	.BYTE	FILE_STATECOD
                                 03  0072       	.BYTE	QUAL_STATECOD
                                 00000050       	.PSECT	$LNK_STATETBL$,NOEXE,NOWRT,LONG
                                     0050       VALU_STATETBL:
                               000A  0050       	.WORD	$$TRMSET-$$ILLSET
                               0003  0052       	.WORD	$$TRANTBL-$$TRMSET
                           00000063' 0054       	.LONG	$$ILLSET
                           0000006D' 0058       	.LONG	$$TRMSET
                           00000070' 005C       	.LONG	$$TRANTBL
                           00000383' 0060       	.LONG	PROSVALUE
                                 00000383       	.RESTORE
                                     0383 65000 	GENSTATEDESC	MVAL,-
                                     0383 65100 			ILLCHARSET=<#:%(;=@[]/<>#>,- ; ILLEGAL CHARACTERS
                                     0383 65200 			TRMCHARSET=#)#,-	; 
                                     0383 65300 			TRANSTATES=NVAL,-	; RETURN TO SINGLE VALUE STATE
                                     0383 65400 			ROUTINE=PROMULVAL	;
                                     0383       	.SAVE
                                 00000073       	.PSECT	$LNK_CHARS$,NOEXE,NOWRT,BYTE
   3E 3C 2F 5D 5B 40 3D 3B 28 25 3A  0073       	.ASCII #:%(;=@[]/<>#
                                 29  007E       	.ASCII	#)#
                                 06' 007F       	.BYTE	NVAL_STATECOD
                                 00000064       	.PSECT	$LNK_STATETBL$,NOEXE,NOWRT,LONG
                                     0064       MVAL_STATETBL:
                               000B  0064       	.WORD	$$TRMSET-$$ILLSET
                               0001  0066       	.WORD	$$TRANTBL-$$TRMSET
                           00000073' 0068       	.LONG	$$ILLSET
                           0000007E' 006C       	.LONG	$$TRMSET
                           0000007F' 0070       	.LONG	$$TRANTBL
                           00000389' 0074       	.LONG	PROMULVAL
                                 00000383       	.RESTORE
                                     0383 65500 	GENSTATEDESC	NVAL,-			; NULL VALUE STATE
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  19
X01.09          SINGLE AND MULTIPLE VALUE STATES                                                                                 (2)

                                     0383   100 			ILLCHARSET=<#:%;()][<>@=#>,- ; ENTERED ONLY ON ) OF MULTIPLE VALUES
                                     0383   200 			TRMCHARSET=<#,/#>,-	; AND IS TERMINATED BY , OR /
                                     0383   300 			TRANSTATES=<FILE,QUAL>,- ; WHICH TAKES US TO FILE STATE
                                     0383   400 			ROUTINE=NULLVALUE	; OR QUALIFIER STATE
                                     0383       	.SAVE
                                 00000080       	.PSECT	$LNK_CHARS$,NOEXE,NOWRT,BYTE
   3D 40 3E 3C 5B 5D 29 28 3B 25 3A  0080       	.ASCII #:%;()][<>@=#
                              2F 2C  008B       	.ASCII	#,/#
                                 02  008D       	.BYTE	FILE_STATECOD
                                 03  008E       	.BYTE	QUAL_STATECOD
                                 00000078       	.PSECT	$LNK_STATETBL$,NOEXE,NOWRT,LONG
                                     0078       NVAL_STATETBL:
                               000B  0078       	.WORD	$$TRMSET-$$ILLSET
                               0002  007A       	.WORD	$$TRANTBL-$$TRMSET
                           00000080' 007C       	.LONG	$$ILLSET
                           0000008B' 0080       	.LONG	$$TRMSET
                           0000008D' 0084       	.LONG	$$TRANTBL
                           00000397' 0088       	.LONG	NULLVALUE
                                 00000383       	.RESTORE
                                     0383   500 ;
                                     0383   600 PROSVALUE:					; AT END OF SINGLE VALUE STATE
            05            58     91  0383   700 	CMPB	R8,#MVAL_STATECOD		; IF NEXT IS THE MULTI VALUE STATE
                          01     12  0386   800 	BNEQ	PROMULVAL			; THEN JUST RETURN
                                 05  0388   900 	RSB
                                     0389  1000 PROMULVAL:					; ELSE DO SAME AS MULTI VALUE
                          5A     D5  0389  1100 	TSTL	R10				; I.E. CHECK THE WE HAVE A
                          07     12  038B  1200 	BNEQ	10$				; NON NULL TOKEN
            50         00'8F     9A  038D  1300 	MOVZBL	#ERM$C_VALREQ,R0		; AND ERROR IF NOT
                          FE15   31  0391  1400 	BRW	SYNTAX
                                     0394  1500 10$:
                                     0394  1600 ENDVALUE:					; VALUE IS OK SO POP UP ONE
                          8E     D5  0394  1700 	TSTL	(SP)+				; LEVEL RETURNING TO THE
                                 05  0396  1800 	RSB					; QUALIFIER ACTION ROUTNE
                                     0397  1900 NULLVALUE:					; IN THE NULL VALUE STATE THERE
            03            58     91  0397  2000 	CMPB	R8,#QUAL_STATECOD		; IF GOING TO ANY BUT QUALIFIER STATE
                          F8     12  039A  2100 	BNEQ	ENDVALUE			; GO COMPLETE VALUE PROCESSING
                                 05  039C  2200 	RSB					; ELSE JUST RETURN NOW
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  20
X01.09          OPTION KEY STATE                                                                                                 (2)

                                     039D  2400 	.SBTTL	OPTION KEY STATE
                                     039D  2500 ;
                                     039D  2600 ;++
                                     039D  2700 
                                     039D  2800 
                                     039D  2900 
                                     039D  3000 
                                     039D  3100 
                                     039D  3200 ;--
                                     039D  3300 ;
                                     039D  3400 	GENSTATEDESC	OKEY,-
                                     039D  3500 			ILLCHARSET=<#:%;$()[]<>,@/#>,-
                                     039D  3600 			TRMCHARSET=<#=#>,-
                                     039D  3700 			TRANSTATES=OPAR,-
                                     039D  3800 			ROUTINE=OPTKEY
                                     039D       	.SAVE
                                 0000008F       	.PSECT	$LNK_CHARS$,NOEXE,NOWRT,BYTE
40 2C 3E 3C 5D 5B 29 28 24 3B 25 3A  008F       	.ASCII #:%;$()[]<>,@/#
                                 2F  009B       
                                 3D  009C       	.ASCII	#=#
                                 08' 009D       	.BYTE	OPAR_STATECOD
                                 0000008C       	.PSECT	$LNK_STATETBL$,NOEXE,NOWRT,LONG
                                     008C       OKEY_STATETBL:
                               000D  008C       	.WORD	$$TRMSET-$$ILLSET
                               0001  008E       	.WORD	$$TRANTBL-$$TRMSET
                           0000008F' 0090       	.LONG	$$ILLSET
                           0000009C' 0094       	.LONG	$$TRMSET
                           0000009D' 0098       	.LONG	$$TRANTBL
                           0000039D' 009C       	.LONG	OPTKEY
                                 0000039D       	.RESTORE
                                     039D  3900 	GENSTATEDESC	OPAR,-
                                     039D  4000 			ILLCHARSET=#>]=@#,-
                                     039D  4100 			TRMCHARSET=<#[,:/#>,-
                                     039D  4200 			LEFTANGLE=TRM,-
                                     039D  4300 			TRANSTATES=<DIR,-	; < GOES TO DIR
                                     039D  4400 					DIR,-	; [ TO DIR
                                     039D  4500 					OPAR,-	; , TO OPT PARAM
                                     039D  4600 					FILE,-	; : IS A FILESPEC
                                     039D  4610 					QUAL>,-	; / IS A QUALIFIER
                                     039D  4700 			ROUTINE=OPTPAR
                                     039D       	.SAVE
                                 0000009E       	.PSECT	$LNK_CHARS$,NOEXE,NOWRT,BYTE
                        40 3D 5D 3E  009E       	.ASCII #>]=@#
                                 3C  00A2       	.IIF IDN, <TRM>,<TRM>, .ASCII #<#
                        2F 3A 2C 5B  00A3       	.ASCII	#[,:/#
                                 01  00A7       	.BYTE	DIR_STATECOD
                                 01  00A8       	.BYTE	DIR_STATECOD
                                 08' 00A9       	.BYTE	OPAR_STATECOD
                                 02  00AA       	.BYTE	FILE_STATECOD
                                 03  00AB       	.BYTE	QUAL_STATECOD
                                 000000A0       	.PSECT	$LNK_STATETBL$,NOEXE,NOWRT,LONG
                                     00A0       OPAR_STATETBL:
                               0004  00A0       	.WORD	$$TRMSET-$$ILLSET
                               0005  00A2       	.WORD	$$TRANTBL-$$TRMSET
                           0000009E' 00A4       	.LONG	$$ILLSET
                           000000A2' 00A8       	.LONG	$$TRMSET
                           000000A7' 00AC       	.LONG	$$TRANTBL
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  21
X01.09          OPTION KEY STATE                                                                                                 (2)

                           000003F8' 00B0       	.LONG	OPTPAR
                                 0000039D       	.RESTORE
                                     039D  4800 ;
                                     039D  4900 OPTKEY:
            51       0054'CF     9E  039D  5000 	MOVAB	W^OPTKEYTBL,R1			; GET ADDRESS OF OPTION KEYWORDS
                          2A     10  03A2  5100 	BSBB	CHECKEY				; AND SEE IF IT'S THERE
            07            50     E8  03A4  5200 	BLBS	R0,20$				; AND SKIP IF SO
            50         00'8F     9A  03A7  5300 	MOVZBL	#ERM$C_UNRECOPT,R0		; SET ERROR CODE
                          010C   31  03AB  5400 	BRW	JAMPOINTERS			; AND GO SET UP DATA POINTERS
                                     03AE  5500 20$:						; VALID OPTION KEYWORD
            89            54     90  03AE  5600 	MOVB	R4,(R9)+			; SAVE THE = TERMINATOR
                          5A     D6  03B1  5700 	INCL	R10				; IN CURRENT TOKEN
         F4 AD            81     D0  03B3  5800 	MOVL	(R1)+,CUROPTROUTINE(FP)		; GET ADDRESS OF SERVICE ROUTINE
       001A'CF            81     90  03B7  5900 	MOVB	(R1)+,W^MINPARCNT		; GET THE MINIMUM EXPECTED
         F0 AD            51     D0  03BC  6000 	MOVL	R1,CUROPTPARDESC(FP)		; SAVE POINTER TO PARAMETER BLOCK
         E8 AD            5A     7D  03C0  6100 	MOVQ	R10,CUROPTDESC(FP)		; SAVE KEYWORD DESCRIPTOR
                     001B'CF     94  03C4  6200 	CLRB	W^PARNUM			; RESET PARAMETER NUMBER
                          5A     D4  03C8  6300 	CLRL	R10				; RESET TOKEN LENGTH
            5B            59     D0  03CA  6400 	MOVL	R9,R11				; MOVE TOKEN POINTER PAST
                                 05  03CD  6500 	RSB
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  22
X01.09          KEYWORD MATCHING ROUTINE                                                                                         (2)

                                     03CE  6700 	.SBTTL	KEYWORD MATCHING ROUTINE
                                     03CE  6800 ;
                                     03CE  6900 ;++
                                     03CE  7000 ;	ROUTINE TO DO MATCHING ON KEYWORDS
                                     03CE  7100 ;		ON INPUT:
                                     03CE  7200 ;			R10-R11	= INCOMING TOKEN DESCRIPTOR
                                     03CE  7300 ;			R1	= ADDRESS OF KEYWORD TABLE
                                     03CE  7400 ;		ON OUTPUT:
                                     03CE  7500 ;			R0	= 1 IF KEYWORD FOUND ELSE 0
                                     03CE  7600 ;			R1	= ASSOCIATED DATA FROM KEYWORD TABLE
                                     03CE  7700 ;			R2	= BITS 0-7 KEYWORD TYPE CODE
                                     03CE  7800 ;				      8-15 KEYWORD FLAGS
                                     03CE  7900 ;		R3 IS CORRUPTED, ALL OTHERS UNCHANGED
                                     03CE  8000 ;--
                                     03CE  8100 ;
                                     03CE  8200 CHECKEY:
            6B         80 8F     88  03CE  8300 	BISB	#FIRST_CHAR,(R11)		; SET MAGIC FIRST CHARACTER
                                     03D2  8400 10$:
            61            03     39  03D2  8500 	MATCHC	#KEY_K_MINLEN,(R1),R10,(R11)	; DOES IT MATCH THIS KEYWORD
            6B            5A         03D5       
                          12     13  03D7  8600 	BEQL	20$				; SKIP IF SO
            50   00000006'8F     C0  03D9  8700 	ADDL	#<KEY_K_TBLENTSIZ-KEY_K_MINLEN>,R0 ; MOVE ON TO NEXT
            51            50     C0  03E0  8800 	ADDL	R0,R1				; IN THE TABLE
                          61     95  03E3  8900 	TSTB	(R1)				; CHECKING FOR THE END
                          EB     12  03E5  9000 	BNEQ	10$				; AND LOOP BACK IF NOT
                          50     D4  03E7  9100 	CLRL	R0				; SET FAILURE
                          08     11  03E9  9200 	BRB	30$				; AND CLEAN UP
                                     03EB  9300 20$:						; KEYWORD FOUND
                          50     D6  03EB  9400 	INCL	R0				; SET SUCCESSFUL SEARCH
            52            81     3C  03ED  9500 	MOVZWL	(R1)+,R2			; SET TYPE CODE AND FLAGS
            51            61     D0  03F0  9600 	MOVL	(R1),R1				; GET ASSOCIATED DATA LONGWORD
                                     03F3  9700 30$:
            6B         80 8F     8A  03F3  9800 	BICB	#FIRST_CHAR,(R11)		; RESET FIRST CHARACTER FLAG
                                 05  03F7  9900 	RSB					; AND RETURN
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  23
X01.09          OPTION PARAMETER PARSING                                                                                         (2)

                                     03F8 10100 	.SBTTL	OPTION PARAMETER PARSING
                                 0000001A 10200 	.PSECT	$OWN$
                                     001A 10300 ;
                                     001A 10400 ;	OWN DATA
                                     001A 10500 ;
                                     001A 10600 MINPARCNT:
                                 00  001A 10700 	.BYTE	0			; MINIMUM REQURIED PARAMETER COUNT
                                     001B 10800 PARNUM:
                                 00  001B 10900 	.BYTE	0			; NUMBER SEEN
                                     001C 11000 CURKEYMSK:				; CURRENT KEYWORD MASK
                           00000000  001C 11100 	.LONG	0
                                     0020 11200 ;
                                 000003F8 11300 	.PSECT	$CODE$
                                     03F8 11400 	.ENABL	LSB
                                     03F8 11500 ;
                                     03F8 11600 ;	SERVICE OPTION PARAMETER STATE
                                     03F8 11700 ;
                                     03F8 11800 OPTPAR:
            69            54     90  03F8 11900 	MOVB	R4,(R9)				; SAVE TERMINATOR
                       E8 AD     D6  03FB 12000 	INCL	CUROPTDESC(FP)			; AND COUNT IT IN TOKEN
         E8 AD            5A     C0  03FE 12100 	ADDL	R10,CUROPTDESC(FP)		; ADD THE TOKEN IN FOR ERRORS
            57         F0 AD     D0  0402 12200 	MOVL	B^CUROPTPARDESC(FP),R7		; GET ADDRESS OF THE PARAMETER DESC
            50            87     9A  0406 12300 	MOVZBL	(R7)+,R0			; GET PARAMETER TYPE
                          1F     13  0409 12400 	BEQL	20$				; BUT SKIP IF IT SAYS NO MORE
                     001B'CF     96  040B 12500 	INCB	W^PARNUM			; COUNT THE PARAMETER
            54            87     9A  040F 12600 	MOVZBL	(R7)+,R4			; GET THE PARAMETER FLAGS
            51            87     D0  0412 12700 	MOVL	(R7)+,R1			; GET PARAMETER DATA
            54            01     E0  0415 12800 	BBS	#PAR_V_REPTLIST,R4,10$		; LEAVE POINTER IF A REPEATED PARAM
                          04         0418       
         F0 AD            57     D0  0419 12900 	MOVL	R7,B^CUROPTPARDESC(FP)		; OTHERWISE SAVE FOR NEXT
                                     041D 13000 10$:						;
                          5A     D5  041D 13100 	TSTL	R10				; SEE IF THERE IS ONE
                          09     12  041F 13200 	BNEQ	20$				; AND SKIP IF SO
            54            00     E1  0421 13300 	BBC	#PAR_V_OPTIONAL,R4,40$		; IF IT IS MISSING BUT REQUIRED
                          33         0424       
                          51     D4  0425 13310 	CLRL	R1				; VALUE IS ZERO
                          009A   31  0427 13400 	BRW	SAVEVALUE			; GO REPORT IT - ELSE SAVE IT
                                     042A 13500 20$:
            07            50     91  042A 13510 	CMPB	R0,#PAR_K_FILESPEC		; IF PARAMETER IS
                          0C     13  042D 13520 	BEQL	25$				; NOT A FILESPEC
                          69     95  042F 13530 	TSTB	(R9)				; THEN ONLY TERMINATOR
                          08     13  0431 13540 	BEQL	25$				; ALLOWED IS END OF LINE
            2C            69     91  0433 13550 	CMPB	(R9),#^A/,/			; OR COMMA.
                          03     13  0436 13560 	BEQL	25$				; SKIP IF OK
                          FD68   31  0438 13570 	BRW	ILLCHAR				; OTHERWISE REPORT ERROR
                                     043B 13580 25$:
                                     043B 13600 	CASE	R0,-				; CASE ON PARAMETER TYPR
                                     043B 13700 		<30$,-				; TOO MANY PARAMETERS
                                     043B 13800 		NUMERIC,-			; NUMERIC PARAMETER
                                     043B 13900 		ADDRESS,-			; ADDRESS PARAMETER
                                     043B 14000 		KEYWORD,-			; 
                                     043B 14100 		NAME,-				; ALPHA-NUMERIC NAME
                                     043B 14200 		NAME_VALUE,-			; NAME AND VALUE SEPARATED BY :
                                     043B 14300 		NAME_OPT_VALUE,-		; NAME WITH OPTIONAL :VALUE
                                     043B 14310 		FILE>,-				; FILE SPEC
                                     043B 14500 		TYPE=B
            00            50     8F  043B       	CASEB	R0,#0,S^#<<30005$-30004$>/2>-1
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  24
X01.09          OPTION PARAMETER PARSING                                                                                         (2)

                          07'        043E       
                                     043F       30004$:
                               0010' 043F       	.WORD	30$-30004$
                               0034' 0441       	.WORD	NUMERIC-30004$
                               002E' 0443       	.WORD	ADDRESS-30004$
                               00BA' 0445       	.WORD	KEYWORD-30004$
                               00DE' 0447       	.WORD	NAME-30004$
                               0118' 0449       	.WORD	NAME_VALUE-30004$
                               0118' 044B       	.WORD	NAME_OPT_VALUE-30004$
                               00F3' 044D       	.WORD	FILE-30004$
                                     044F       30005$:
                                     044F 14600 ;
                                     044F 14700 ;	TOO MANY PARAMETERS IN THIS OPTION
                                     044F 14800 ;
                                     044F 14900 30$:						; SET UP TO GET THE MESSAGE ARGUMENTS
                                     044F 14910 TOOMANYPARS:
            50   0000003C'8F     D0  044F 15000 	MOVL	#<<SEV$C_FATAL@24> + <ERM$C_EXCSPAR@16> + ^M<R2,R3,R4,R5>>,R0
                          07     11  0456 15100 	BRB	50$				; AND GO GET THEM
                                     0458 15200 40$:						;
                                     0458 15300 INSUFPARS:
            50   0000003C'8F     D0  0458 15400 	MOVL	#<<SEV$C_FATAL@24> + <ERM$C_NULPAR@16> + ^M<R2,R3,R4,R5>>,R0	; SET ERROR CODE 
                                     045F 15500 50$:						; ERROR REPORTING
            52         E8 AD     7D  045F 15600 	MOVQ	B^CUROPTDESC(FP),R2		; GET OPTION DESCRIPTOR
            54         F8 AD     7D  0463 15700 	MOVQ	B^FILENAMEDESC(FP),R4		; OPTION FILE DESCRIPTOR
            51            06     9A  0467 15800 	MOVZBL	#6,R1				; SET ARGUMENT COUNT
                          FD5D   31  046A 15900 	BRW	ERROUT				; AND GO OUTPUT IT
                                     046D 16000 	.DSABL	LSB
                                     046D 16100 ;
                                     046D 16200 ;	ADDRESS PARAMETER VALUE CONVERSION.
                                     046D 16300 ;		R1 CONTAINS ADDRESS OF THE KEYWORD TABLE FOR
                                     046D 16400 ;			THE ADDRESS SPECIFICATION KEYWORDS. IF
                                     046D 16500 ;			THE PARAMETER IS NOT ONE OF THESE, IT IS
                                     046D 16600 ;			PRESUMED TO BE A NUMERIC
                                     046D 16700 ;
                                 00000000 16800 	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                                     0000 16900 ADDRKEYTBL:					; INITIALIZE THE KEYWORD
                                 00  0000 17000 	.BYTE	0				; TABLE AS EMPTY
                                 0000046D 17100 	.PSECT	$CODE$
                                     046D 17200 ;
                                     046D 17300 	GENKEYDESC	PROGRAM,TYPE=KEY_K_SUBSVALUE,-
                                     046D 17400 				DATA=PRO_REG_DEF_BAS
                                     046D       	.SAVE
                                 00000001       	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                           00000000  0001       . = . - 1
                                 D0  0000       	.IIF	EQ	$$0-1,	.BYTE	^A/P/!FIRST_CHAR
                                 52  0001       	.IIF	NE	$$0-1,	.BYTE	^A/R/
                                 4F  0002       	.IIF	NE	$$0-1,	.BYTE	^A/O/
                                 00  0003       	.BYTE	KEY_K_SUBSVALUE
                                 00  0004       	.BYTE	0
                           00000200  0005       	.LONG	PRO_REG_DEF_BAS
                                 00  0009       	.BYTE	0
                                 0000046D       	.RESTORE
                                     046D 17500 	GENKEYDESC	CONTROL,TYPE=KEY_K_SUBSVALUE,-
                                     046D 17600 				DATA=CTL_REG_DEF_BAS
                                     046D       	.SAVE
                                 0000000A       	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                           00000009  000A       . = . - 1
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  25
X01.09          OPTION PARAMETER PARSING                                                                                         (2)

                                 C3  0009       	.IIF	EQ	$$0-1,	.BYTE	^A/C/!FIRST_CHAR
                                 4F  000A       	.IIF	NE	$$0-1,	.BYTE	^A/O/
                                 4E  000B       	.IIF	NE	$$0-1,	.BYTE	^A/N/
                                 00  000C       	.BYTE	KEY_K_SUBSVALUE
                                 00  000D       	.BYTE	0
                           40000000  000E       	.LONG	CTL_REG_DEF_BAS
                                 00  0012       	.BYTE	0
                                 0000046D       	.RESTORE
                                     046D 17700 	GENKEYDESC	SYSTEM,TYPE=KEY_K_SUBSVALUE,-
                                     046D 17800 				DATA=SYS_REG_DEF_BAS
                                     046D       	.SAVE
                                 00000013       	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                           00000012  0013       . = . - 1
                                 D3  0012       	.IIF	EQ	$$0-1,	.BYTE	^A/S/!FIRST_CHAR
                                 59  0013       	.IIF	NE	$$0-1,	.BYTE	^A/Y/
                                 53  0014       	.IIF	NE	$$0-1,	.BYTE	^A/S/
                                 00  0015       	.BYTE	KEY_K_SUBSVALUE
                                 00  0016       	.BYTE	0
                           80000000  0017       	.LONG	SYS_REG_DEF_BAS
                                 00  001B       	.BYTE	0
                                 0000046D       	.RESTORE
                                     046D 17900 ;
                                     046D 18000 ADDRESS:					; ADDRESS PARAMETER
                          FF5E   30  046D 18100 	BSBW	CHECKEY				; GO CHECK FOR KEYWORD
            51            50     E8  0470 18200 	BLBS	R0,SAVEVALUE			; AND SAVE ASSOCIATED VALUE
                                     0473 18300 						; IF FOUND, ELSE FALL TO NUMERIC
                                     0473 18400 ;
                                     0473 18500 ;	NUMERIC PARAMETER CONVERSION - EXPLICIT RADIX IS
                                     0473 18600 ;		%O FOR OCTAL
                                     0473 18700 ;		%D FOR DECIMAL
                                     0473 18800 ;		%X FOR HEXADECIMAL
                                     0473 18900 ;	DEFAULTS TO DECIMAL
                                     0473 19000 ;
                                     0473 19100 NUMERIC:					; CONVERT ASCII NUMBER TO BINARY
                          7E     DF  0473 19200 	PUSHAL	-(SP)				; SET A LOCAL FOR VALUE RETURNED
            50       0000'CF     9E  0475 19300 	MOVAB	W^LIB$CVT_DTB,R0		; ASSUME DECIMAL
            25            6B     91  047A 19400 	CMPB	(R11),#^A/%/			; RADIX SPECIFIED?
                          2A     12  047D 19500 	BNEQ	30$				; IF NOT GO DO DECIMAL CONVERSION
         44 8F         01 AB     91  047F 19600 	CMPB	1(R11),#^A/D/			; EXPLICIT DECIMAL?
                          18     13  0484 19700 	BEQL	20$				; BRANCH IF SO
            50       0000'CF     9E  0486 19800 	MOVAB	W^LIB$CVT_OTB,R0		; ASSUME OCTAL
         4F 8F         01 AB     91  048B 19900 	CMPB	1(R11),#^A/O/			; EXPLICIT OCTAL?
                          0C     13  0490 20000 	BEQL	20$				; SKIP IF SO
         58 8F         01 AB     91  0492 20100 	CMPB	1(R11),#^A/X/			; EXPLICIT HEX CONVERSION
                          1D     12  0497 20200 	BNEQ	50$				; SKIP IF NOT - ERROR
            50       0000'CF     9E  0499 20300 	MOVAB	W^LIB$CVT_HTB,R0		; SET CONVERSION ROUTINE
                                     049E 20400 20$:						; PUSH PARAMETERS ADJUSTED
                       02 AB     9F  049E 20500 	PUSHAB	2(R11)				; FOR THE TWO CHARACTER
            5A            02     C3  04A1 20600 	SUBL3	#2,R10,-(SP)			; RADIX SPECIFICATION
                          7E         04A4       
                          0F     15  04A5 20700 	BLEQ	50$				; BUT SKIP IF TOO SHORT A TOKEN
                          04     11  04A7 20800 	BRB	40$				; AND GO DO CALL
                                     04A9 20900 30$:						; PUSH DESCRIPTOR ARGUMENTS
                          5B     DD  04A9 21000 	PUSHL	R11				; ADDRESS OF STRING
                          5A     DD  04AB 21100 	PUSHL	R10				; LENGTH OF STRING
                                     04AD 21200 40$:						;
            60            03     FB  04AD 21300 	CALLS	#3,(R0)				; CALL CONVERSION ROUTINE
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  26
X01.09          OPTION PARAMETER PARSING                                                                                         (2)

            51            8E     D0  04B0 21400 	MOVL	(SP)+,R1			; RETRIEVE CONVERTED VALUE
            0E            50     E8  04B3 21500 	BLBS	R0,SAVEVALUE			; AND GO FINISH UP IF OK
                                     04B6 21600 50$:						; CONVERSION ERROR
            50         00'8F     9A  04B6 21700 	MOVZBL	#ERM$C_ILLVAL,R0		; SET ERROR MESSAGE CODE
                                     04BA 21800 JAMPOINTERS:					;
            55            5B     D0  04BA 21900 	MOVL	R11,R5				; SET BAD LINE DESCRIPTOR
            5B            5A     C1  04BD 22000 	ADDL3	R10,R11,R6			; FOR MESSAGE
                          56         04C0       
                          FCE5   31  04C1 22100 	BRW	SYNTAX				; AND GO DO IT
                                     04C4 22200 SAVEVALUE:					;
            54            02     E1  04C4 22300 	BBC	#PAR_V_SERVICE,R4,10$		; IF THIS IS THE PARAMETER
                          03         04C7       
                       F4 BD     16  04C8 22400 	JSB	@CUROPTROUTINE(FP)		; ON WHICH OPTION IS SERVICED
                                     04CB 22500 10$:						; GO DO IT
                                     04CB 22600 ENDOPTPAR:					; END OF THAT PARAMETER
            50            89     9A  04CB 22700 	MOVZBL	(R9)+,R0			; RETRIEVE TOKEN TERMINATOR
                          0F     12  04CE 22800 	BNEQ	10$				; AND IF IT WAS END OF LINE
       001A'CF       001B'CF     91  04D0 22900 	CMPB	W^PARNUM,W^MINPARCNT		; CHECK SUFFICIENT PARAMETERS
                          1D     1F  04D7 23000 	BLSSU	30$				; AND SKIP IF NOT
            59         EC AD     D0  04D9 23100 	MOVL	CUROPTDESC+4(FP),R9		; RESET BUFFER POINTER
                          0E     11  04DD 23200 	BRB	15$
                                     04DF 23300 10$:						;
            54            01     E1  04DF 23400 	BBC	#PAR_V_REPTLIST,R4,15$		; IF THIS IS A REPEATED 
                          0A         04E2       
                       E8 AD     D7  04E3 23500 	DECL	CUROPTDESC(FP)			; PARAMETER, SUBTRACT OUT
         E8 AD            5A     C2  04E6 23600 	SUBL	R10,CUROPTDESC(FP)		; THIS TOKEN AND RESET SO
            59            5B     D0  04EA 23700 	MOVL	R11,R9				; NEXT GOES IN SAME PLACE
                                     04ED 23800 15$:
            5B            59     D0  04ED 23900 	MOVL	R9,R11				; OTHERWISE NEW TOKEN JUST BEYOND
                                     04F0 24000 20$:
                          5A     D4  04F0 24100 	CLRL	R10				; RESET TOKEN LENGTH
            54            50     D0  04F2 24200 	MOVL	R0,R4				; PUT TERMINATOR IN PROPER PLACE
                                 05  04F5 24300 	RSB					; AND ALL DONE
                                     04F6 24400 30$:
                          FF5F   31  04F6 24500 	BRW	INSUFPARS
                                     04F9 24600 ;
                                     04F9 24700 ;	KEYWORD VALUE CONVERSION. R1 CONTAINS ADDRESS OF ASSOCIATED
                                     04F9 24800 ;		KEYWORD DESCRIPTION TABLE.
                                     04F9 24900 ;
                                     04F9 25000 ;
                                     04F9 25100 KEYWORD:					;
                          FED2   30  04F9 25200 	BSBW	CHECKEY				; GO SEE IF FOUND
            0A            50     E9  04FC 25300 	BLBC	R0,10$				; AND SKIP IF NOT
                                     04FF 25400 	CASE	R2,-				; BRANCH ON TYPE OF KEYWORD
                                     04FF 25500 		<SAVEVALUE,-			; ALL DONE IF SUBSVALUE
                                     04FF 25600 		SETMSK,-			; SET A MASK
                                     04FF 25700 		CLRMSK>,-			; CLEAR A MASK
                                     04FF 25800 		TYPE=B
            00            52     8F  04FF       	CASEB	R2,#0,S^#<<30007$-30006$>/2>-1
                          02'        0502       
                                     0503       30006$:
                               FFC1  0503       	.WORD	SAVEVALUE-30006$
                               000C' 0505       	.WORD	SETMSK-30006$
                               0013' 0507       	.WORD	CLRMSK-30006$
                                     0509       30007$:
                                     0509 25900 10$:						; UNRECOGNIZED
            50         00'8F     9A  0509 26000 	MOVZBL	#ERM$C_ILLKEY,R0		; SET ERROR CODE
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  27
X01.09          OPTION PARAMETER PARSING                                                                                         (2)

                          AB     11  050D 26100 	BRB	JAMPOINTERS			; AND GO DO REPORT
                                     050F 26200 SETMSK:						; SET A MASK KEYWORD
       001C'CF            51     C8  050F 26300 	BISL2	R1,W^CURKEYMSK			;
                          AE     11  0514 26400 	BRB	SAVEVALUE
                                     0516 26500 CLRMSK:						; CLEAR A MASK KEYWORD
       001C'CF            51     CA  0516 26600 	BICL2	R1,W^CURKEYMSK			;
                          A7     11  051B 26700 	BRB	SAVEVALUE
                                     051D 26800 ;
                                     051D 26900 ;	NAME STRING PARAMETER. R10-R11 ARE THE STRING DESCRIPTOR.
                                     051D 27000 ;
                                     051D 27100 NAME:						;
            30            6B     91  051D 27200 	CMPB	(R11),#^A/0/			; CHECK NAME DOES NOT
                          A2     19  0520 27300 	BLSS	SAVEVALUE			; BEGIN WITH A NUMERIC
            39            6B     91  0522 27400 	CMPB	(R11),#^A/9/
                          05     1B  0525 27500 	BLEQU	10$
            00'           5A     D1  0527 27600 	CMPL	R10,S^#SYM$C_MAXLNG		; AND THAT IT IS NOT TOO LONG
                          98     1B  052A 27700 	BLEQU	SAVEVALUE
                                     052C 27800 10$:
            50         00'8F     9A  052C 27900 	MOVZBL	#ERM$C_ILLVAL,R0		; AND GET ERROR CODE
                          88     11  0530 28000 	BRB	JAMPOINTERS			; AND REPORT IF ILLEGAL
                                     0532 28010 ;
                                     0532 28020 ;	FILE SPEC PARAMETER
                                     0532 28030 ;
                                     0532 28040 FILE:
            3A            69     91  0532 28041 	CMPB	(R9),#^A/:/			; IF IT WAS A COLON
                          06     12  0535 28042 	BNEQ	10$				; TERMINATOR
            54            89     9A  0537 28043 	MOVZBL	(R9)+,R4			; THEN JUST ADD IT INTO
                          5A     D6  053A 28044 	INCL	R10				; CURRENT TOKEN
                                 05  053C 28045 	RSB					; AND CONTINUE
                                     053D 28046 10$:
            2C            69     91  053D 28050 	CMPB	(R9),#^A/,/			; IF TERMINATOR WAS
                          03     12  0540 28060 	BNEQ	20$				; A COMMA NEXT
            58            02     9A  0542 28070 	MOVZBL	#FILE_STATECOD,R8		; STATE IS FILE
                                     0545 28080 20$:
       001A'CF       001B'CF     91  0545 28090 	CMPB	W^PARNUM,W^MINPARCNT		; SUFFICIENT PARAMETERS
                          03     1E  054C 28100 	BGEQU	30$				;
                          FF07   31  054E 28110 	BRW	INSUFPARS			; BRANCH IF NOT
                                     0551 28120 30$:
            54            89     9A  0551 28130 	MOVZBL	(R9)+,R4			; RETRIEVE TERMINATOR
                          FC98   31  0554 28140 	BRW	PROFILESTATE			; AND SERVICE FILE STATE
                                     0557 28150 ;
                                     0557 28200 ;	NAME AND VALUE PAIR (REQUIRED) SEPARATED BY COLON.
                                     0557 28300 ;
                                     0557 28400 NAME_VALUE:					;
                                     0557 28500 ;
                                     0557 28600 ;	NAME AND OPTIONAL VALUE SEPARATED BY A COLON.
                                     0557 28700 ;
                                     0557 28800 NAME_OPT_VALUE:					;
                                 00  0557 29300 	HALT					;******NYI
                                     0558 29400 ;
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  28
X01.09          SOME USEFUL KEYWORDS                                                                                             (2)

                                     0558 29600 	.SBTTL	SOME USEFUL KEYWORDS
                                     0558 29700 ;
                                     0558 29800 ;	KEYWORDS FOR THE GLOBAL SECTION MATCH CONTROL OPTION
                                     0558 29900 ;
                                 0000001C 30000 	.PSECT	$LNK_KEYWORDS
                                     001C 30100 MATCTLKEYTBL:
                                 00  001C 30200 	.BYTE	0
                                 00000558 30300 	.PSECT	$CODE$
                                     0558 30400 ;
                                     0558 30500 	GENKEYDESC	ALWAYS,TYPE=KEY_K_SUBSVALUE,-
                                     0558 30600 				DATA=ISD$K_MATALL
                                     0558       	.SAVE
                                 0000001D       	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                           0000001C  001D       . = . - 1
                                 C1  001C       	.IIF	EQ	$$0-1,	.BYTE	^A/A/!FIRST_CHAR
                                 4C  001D       	.IIF	NE	$$0-1,	.BYTE	^A/L/
                                 57  001E       	.IIF	NE	$$0-1,	.BYTE	^A/W/
                                 00  001F       	.BYTE	KEY_K_SUBSVALUE
                                 00  0020       	.BYTE	0
                           00000000  0021       	.LONG	ISD$K_MATALL
                                 00  0025       	.BYTE	0
                                 00000558       	.RESTORE
                                     0558 30700 	GENKEYDESC	NEVER,TYPE=KEY_K_SUBSVALUE,-
                                     0558 30800 				DATA=ISD$K_MATNEV
                                     0558       	.SAVE
                                 00000026       	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                           00000025  0026       . = . - 1
                                 CE  0025       	.IIF	EQ	$$0-1,	.BYTE	^A/N/!FIRST_CHAR
                                 45  0026       	.IIF	NE	$$0-1,	.BYTE	^A/E/
                                 56  0027       	.IIF	NE	$$0-1,	.BYTE	^A/V/
                                 00  0028       	.BYTE	KEY_K_SUBSVALUE
                                 00  0029       	.BYTE	0
                           00000003  002A       	.LONG	ISD$K_MATNEV
                                 00  002E       	.BYTE	0
                                 00000558       	.RESTORE
                                     0558 30900 	GENKEYDESC	EQUAL,TYPE=KEY_K_SUBSVALUE,-
                                     0558 31000 				DATA=ISD$K_MATEQU
                                     0558       	.SAVE
                                 0000002F       	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                           0000002E  002F       . = . - 1
                                 C5  002E       	.IIF	EQ	$$0-1,	.BYTE	^A/E/!FIRST_CHAR
                                 51  002F       	.IIF	NE	$$0-1,	.BYTE	^A/Q/
                                 55  0030       	.IIF	NE	$$0-1,	.BYTE	^A/U/
                                 00  0031       	.BYTE	KEY_K_SUBSVALUE
                                 00  0032       	.BYTE	0
                           00000001  0033       	.LONG	ISD$K_MATEQU
                                 00  0037       	.BYTE	0
                                 00000558       	.RESTORE
                                     0558 31100 	GENKEYDESC	LEQUAL,TYPE=KEY_K_SUBSVALUE,-
                                     0558 31200 				DATA=ISD$K_MATLEQ
                                     0558       	.SAVE
                                 00000038       	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                           00000037  0038       . = . - 1
                                 CC  0037       	.IIF	EQ	$$0-1,	.BYTE	^A/L/!FIRST_CHAR
                                 45  0038       	.IIF	NE	$$0-1,	.BYTE	^A/E/
                                 51  0039       	.IIF	NE	$$0-1,	.BYTE	^A/Q/
                                 00  003A       	.BYTE	KEY_K_SUBSVALUE
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  29
X01.09          SOME USEFUL KEYWORDS                                                                                             (2)

                                 00  003B       	.BYTE	0
                           00000002  003C       	.LONG	ISD$K_MATLEQ
                                 00  0040       	.BYTE	0
                                 00000558       	.RESTORE
                                     0558 31300 ;
                                 00000041 31400 	.PSECT	$LNK_KEYWORDS
                                     0041 31500 P0BUFKEY:
                                 00  0041 31600 	.BYTE	0			; INITIALIZE TABLE EMPTY
                                 00000558 31700 	.PSECT	$CODE$
                                     0558 31800 ;
                                     0558 31900 	GENKEYDESC	P0BUFS,TYPE=KEY_K_CLRMASK,-
                                     0558 32000 				DATA=LNK$M_NOP0BUFS
                                     0558       	.SAVE
                                 00000042       	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                           00000041  0042       . = . - 1
                                 D0  0041       	.IIF	EQ	$$0-1,	.BYTE	^A/P/!FIRST_CHAR
                                 30  0042       	.IIF	NE	$$0-1,	.BYTE	^A/0/
                                 42  0043       	.IIF	NE	$$0-1,	.BYTE	^A/B/
                                 02  0044       	.BYTE	KEY_K_CLRMASK
                                 00  0045       	.BYTE	0
                           00000000' 0046       	.LONG	LNK$M_NOP0BUFS
                                 00  004A       	.BYTE	0
                                 00000558       	.RESTORE
                                     0558 32100 	GENKEYDESC	NOP0BUFS,TYPE=KEY_K_SETMASK,-
                                     0558 32200 				DATA=LNK$M_NOP0BUFS
                                     0558       	.SAVE
                                 0000004B       	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                           0000004A  004B       . = . - 1
                                 CE  004A       	.IIF	EQ	$$0-1,	.BYTE	^A/N/!FIRST_CHAR
                                 4F  004B       	.IIF	NE	$$0-1,	.BYTE	^A/O/
                                 50  004C       	.IIF	NE	$$0-1,	.BYTE	^A/P/
                                 01  004D       	.BYTE	KEY_K_SETMASK
                                 00  004E       	.BYTE	0
                           00000000' 004F       	.LONG	LNK$M_NOP0BUFS
                                 00  0053       	.BYTE	0
                                 00000558       	.RESTORE
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  30
X01.09          INITIALIZE OPTION DESCRIPTIONS                                                                                   (2)

                                     0558 32400 	.SBTTL	INITIALIZE OPTION DESCRIPTIONS
                                     0558 32500 ;
                                     0558 32600 ;	INITIALIZE THE OPTION KEYWORD TABLE
                                     0558 32700 ;	
                                     0558 32800 ;	NOTE THAT THIS MUST PRECEED ALL OPTION DESCRIPTIONS
                                     0558 32900 ;
                                 00000054 33000 	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                                     0054 33100 OPTKEYTBL:					; INITIALIZE TABLE AS
                                 00  0054 33200 	.BYTE	0				; EMPTY
                                 00000558 33300 	.PSECT	$CODE$
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  31
X01.09          PROCESS THE BASE OPTION                                                                                          (2)

                                     0558 33500 	.SBTTL	PROCESS THE BASE OPTION
                                     0558 33600 ;
                                     0558 33700 ;++
                                     0558 33800 ;	BASE OPTION -- SET THE BASE ADDRESS OF THE DEFAULT CLUSTER
                                     0558 33900 ;--
                                     0558 34000 ;
                                     0558 34100 	GENOPTIONDESC	BASE,ROUTINE=SETBASE,-
                                     0558 34200 			PARLIST=<<TYPE=PAR_K_ADDRESS,-
                                     0558 34300 				FLAGS=PAR_M_SERVICE,-
                                     0558 34400 				DATA=ADDRKEYTBL>>
                                     0558       	.SAVE
                                 00000000       	.PSECT	$LNK_PARDATA,NOEXE,NOWRT
                           00000558' 0000       	.LONG	SETBASE
                                 01  0004       	.BYTE	1
                                 00' 0005       	.BYTE	PAR_K_NOMORE
                           00000005  0006       . = .-1
                                 02  0005       	.BYTE	PAR_K_ADDRESS
                                 04  0006       	.BYTE	PAR_M_SERVICE
                           00000000' 0007       	.LONG	ADDRKEYTBL
                                 00  000B       	.BYTE	PAR_K_NOMORE
                                     000C       	.SAVE
                                 00000055       	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                           00000054  0055       . = . - 1
                                 C2  0054       	.IIF	EQ	$$0-1,	.BYTE	^A/B/!FIRST_CHAR
                                 41  0055       	.IIF	NE	$$0-1,	.BYTE	^A/A/
                                 53  0056       	.IIF	NE	$$0-1,	.BYTE	^A/S/
                                 00  0057       	.BYTE	KEY_K_SUBSVALUE
                                 00  0058       	.BYTE	0
                           00000000' 0059       	.LONG	PARDATABLOCK
                                 00  005D       	.BYTE	0
                                 0000000C       	.RESTORE
                                 00000558       	.RESTORE
                                     0558 34500 ;
                                     0558 34600 SETBASE:
            51   000001FF 8F     C0  0558 34700 	ADDL	#511,R1			; ROUND UP TO NEXT PAGE
            51   000001FF 8F     CA  055F 34800 	BICL	#511,R1			; BOUNDARY
       0000'CF            51     D0  0566 34900 	MOVL	R1,W^LNK$GL_DEFBAS	; AND STORE FOR LATER
                                 E2  056B 35000 	BBSS	S^#CLU$S_BASED,-
       0000'CF            00'        056C 35100 		W^LNK$GW_DEFLAGS,10$	; FLAG THAT BASE WAS SPECIFIED
                          00         0570       
                                     0571 35200 10$:
                                 05  0571 35300 	RSB				; AND THAT'S ALL
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  32
X01.09          PROCESS THE CHANNELS OPTION                                                                                      (2)

                                     0572 35500 	.SBTTL	PROCESS THE CHANNELS OPTION
                                     0572 35600 ;
                                     0572 35700 ;++
                                     0572 35800 ;	CHANNELS OPTION -- SET NUMBER OF CHANNELS
                                     0572 35900 ;--
                                     0572 36000 ;
                           00000040  0572 36100 LNK$K_MAXCHANS == 64				; MAXIMUM NUBER OF CHANNELS
                                     0572 36200 ;
                                 00000000 36300 	.PSECT	$GLOBAL$,NOEXE,LONG
                                     0000 36400 ;
                                     0000 36500 LNK$GW_CHANS::					; 
                               0000  0000 36600 	.WORD	0				; 
                                     0002 36700 ;
                                 00000572 36800 	.PSECT	$CODE$
                                     0572 36900 	GENOPTIONDESC	CHANNELS,ROUTINE=SETCHANS,-
                                     0572 37000 			PARLIST=<<TYPE=PAR_K_NUMERIC,-
                                     0572 37100 				FLAGS=PAR_M_SERVICE>>
                                     0572       	.SAVE
                                 0000000C       	.PSECT	$LNK_PARDATA,NOEXE,NOWRT
                           00000572' 000C       	.LONG	SETCHANS
                                 01  0010       	.BYTE	1
                                 00' 0011       	.BYTE	PAR_K_NOMORE
                           00000011  0012       . = .-1
                                 01  0011       	.BYTE	PAR_K_NUMERIC
                                 04  0012       	.BYTE	PAR_M_SERVICE
                           00000000  0013       	.LONG	0
                                 00  0017       	.BYTE	PAR_K_NOMORE
                                     0018       	.SAVE
                                 0000005E       	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                           0000005D  005E       . = . - 1
                                 C3  005D       	.IIF	EQ	$$0-1,	.BYTE	^A/C/!FIRST_CHAR
                                 48  005E       	.IIF	NE	$$0-1,	.BYTE	^A/H/
                                 41  005F       	.IIF	NE	$$0-1,	.BYTE	^A/A/
                                 00  0060       	.BYTE	KEY_K_SUBSVALUE
                                 00  0061       	.BYTE	0
                           0000000C' 0062       	.LONG	PARDATABLOCK
                                 00  0066       	.BYTE	0
                                 00000018       	.RESTORE
                                 00000572       	.RESTORE
                                     0572 37200 ;
                                     0572 37300 SETCHANS:
            52       0040 8F     3C  0572 37400 	MOVZWL	#LNK$K_MAXCHANS,R2		; GET THE LIMIT VALUE
            52            51     D1  0577 37500 	CMPL	R1,R2				; AND CHECK VALUE AGAINST
                          12     1B  057A 37600 	BLEQU	10$				; AND SKIP IF OK
                          06     BB  057C 37700 	PUSHR	#^M<R1,R2>			; ELSE STACK LIMIT AND VALUE
            7E         00'8F     9A  057E 37800 	MOVZBL	#SEV$C_DIAG,-(SP)		; SET SEVERITY
            7E         00'8F     9A  0582 37900 	MOVZBL	#ERM$C_MAXCHANS,-(SP)		; SET MESSAGE
       0000'CF            04     FB  0586 38000 	CALLS	#4,W^LNK$ERRMSG			; AND REPORT IT
            51            52     D0  058B 38100 	MOVL	R2,R1				; SET VALUE AT LIMIT
                                     058E 38200 10$:						;
       0000'CF            51     B0  058E 38300 	MOVW	R1,W^LNK$GW_CHANS		; SET THE NUMBER
                                 05  0593 38400 	RSB					; AND ALL DONE
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  33
X01.09          PROCESS IOSEGMENT OPTION                                                                                         (2)

                                     0594 38600 	.SBTTL	PROCESS IOSEGMENT OPTION
                                     0594 38700 ;
                                     0594 38800 ;++
                                     0594 38900 ;	IOSEGMENT OPTION -- SETS THE SIZE OF THE IMAGE I/O
                                     0594 39000 ;				SEGMENT IN HEADER AND (WHEN IMPLEMENTED) ENABLES/DISABLES
                                     0594 39100 ;				RMS EXPANSION INTO P0 SPACE.
                                     0594 39200 ;--
                                     0594 39300 ;
                           0000FFFF  0594 39400 LNK$K_MAXIOSEG == 65535				; MAXIMUM IO SEGMENT IN PAGES
                                     0594 39500 ;
                                 00000002 39600 	.PSECT	$GLOBAL$
                                     0002 39700 ;
                                     0002 39800 LNK$GW_IOSEG::
                               0000  0002 39900 	.WORD	0
                                     0004 40000 ;
                                 00000594 40100 	.PSECT	$CODE$
                                     0594 40110 ;
                           00000005  0594 40120 SERV_OPT = PAR_M_SERVICE ! PAR_M_OPTIONAL	;
                                     0594 40200 ;
                                     0594 40300 	GENOPTIONDESC	IOSEGMENT,ROUTINE=SETIOSEG,-
                                     0594 40400 			PARLIST=<<TYPE=PAR_K_NUMERIC,-
                                     0594 40500 				  FLAGS=SERV_OPT>,-
                                     0594 40600 				<TYPE=PAR_K_KEYWORD,-
                                     0594 40700 				FLAGS=PAR_M_SERVICE,-
                                     0594 40800 				DATA=P0BUFKEY>>
                                     0594       	.SAVE
                                 00000018       	.PSECT	$LNK_PARDATA,NOEXE,NOWRT
                           00000594' 0018       	.LONG	SETIOSEG
                                 01  001C       	.BYTE	1
                                 00' 001D       	.BYTE	PAR_K_NOMORE
                           0000001D  001E       . = .-1
                                 01  001D       	.BYTE	PAR_K_NUMERIC
                                 05  001E       	.BYTE	SERV_OPT
                           00000000  001F       	.LONG	0
                                 00  0023       	.BYTE	PAR_K_NOMORE
                           00000023  0024       . = .-1
                                 03  0023       	.BYTE	PAR_K_KEYWORD
                                 04  0024       	.BYTE	PAR_M_SERVICE
                           00000041' 0025       	.LONG	P0BUFKEY
                                 00  0029       	.BYTE	PAR_K_NOMORE
                                     002A       	.SAVE
                                 00000067       	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                           00000066  0067       . = . - 1
                                 C9  0066       	.IIF	EQ	$$0-1,	.BYTE	^A/I/!FIRST_CHAR
                                 4F  0067       	.IIF	NE	$$0-1,	.BYTE	^A/O/
                                 53  0068       	.IIF	NE	$$0-1,	.BYTE	^A/S/
                                 00  0069       	.BYTE	KEY_K_SUBSVALUE
                                 00  006A       	.BYTE	0
                           00000018' 006B       	.LONG	PARDATABLOCK
                                 00  006F       	.BYTE	0
                                 0000002A       	.RESTORE
                                 00000594       	.RESTORE
                                     0594 40900 ;
                                     0594 41000 SETIOSEG:
            01       001B'CF     91  0594 41010 	CMPB	W^PARNUM,#1			; IF THIS IS FIRST PARAMETER
                          27     12  0599 41020 	BNEQ	20$
                     001C'CF     D4  059B 41030 	CLRL	W^CURKEYMSK			; RESET THE KEYWORD MASK
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  34
X01.09          PROCESS IOSEGMENT OPTION                                                                                         (2)

            52       FFFF 8F     3C  059F 41100 	MOVZWL	#LNK$K_MAXIOSEG,R2		; GET LIMIT VALUE
            52            51     D1  05A4 41200 	CMPL	R1,R2				; AND CHECK VALUE AGAINST IT
                          12     1B  05A7 41300 	BLEQU	10$				; AND SKIP IF OK
                          06     BB  05A9 41400 	PUSHR	#^M<R1,R2>			; PUSH ARGUMENTS
            7E         00'8F     9A  05AB 41500 	MOVZBL	#SEV$C_DIAG,-(SP)		; SET SEVERITY
            7E         00'8F     9A  05AF 41600 	MOVZBL	#ERM$C_MAXIOSEG,-(SP)		; AND MESSAGE NAME
       0000'CF            04     FB  05B3 41700 	CALLS	#4,W^LNK$ERRMSG			; AND OUTPUT ERROR
            51            52     D0  05B8 41800 	MOVL	R2,R1				; SET VALUE AT LIMIT
                                     05BB 41900 10$:
       0002'CF            51     B0  05BB 42000 	MOVW	R1,W^LNK$GW_IOSEG		; SET IO SEGMENT SIZE
                          07     11  05C0 42010 	BRB	30$				; AND ALL DONE
                                     05C2 42020 20$:						; P0 BUFS PARAMETER
       0000'CF       001C'CF     C8  05C2 42030 	BISL2	W^CURKEYMSK,W^LNK$GL_CTLMSK	; SET THE BIT (IF THERE)
                                     05C9 42040 30$:
                                 05  05C9 42050 	RSB					; AND RETURN
                                 05  05CA 42100 	RSB					; AND RETURN
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  35
X01.09          PROCESS STACK OPTION                                                                                             (2)

                                     05CB 42300 	.SBTTL	PROCESS STACK OPTION
                                     05CB 42400 ;
                                     05CB 42500 ;++
                                     05CB 42600 ;	STACK OPTION -- SETS SIZE OF THE IMAGE STACK
                                     05CB 42700 ;
                                     05CB 42800 ;--
                                     05CB 42900 ;
                           0000FFFF  05CB 43000 LNK$K_MAXSTACK == 65535				; MAXIMUM STACK SIZE
                                 000005CB 43100 	.PSECT	$CODE$
                                     05CB 43200 ;
                                     05CB 43300 	GENOPTIONDESC	STACK,ROUTINE=SETSTACK,-
                                     05CB 43400 			PARLIST=<<TYPE=PAR_K_NUMERIC,-
                                     05CB 43500 				FLAGS=PAR_M_SERVICE>>
                                     05CB       	.SAVE
                                 0000002A       	.PSECT	$LNK_PARDATA,NOEXE,NOWRT
                           000005CB' 002A       	.LONG	SETSTACK
                                 01  002E       	.BYTE	1
                                 00' 002F       	.BYTE	PAR_K_NOMORE
                           0000002F  0030       . = .-1
                                 01  002F       	.BYTE	PAR_K_NUMERIC
                                 04  0030       	.BYTE	PAR_M_SERVICE
                           00000000  0031       	.LONG	0
                                 00  0035       	.BYTE	PAR_K_NOMORE
                                     0036       	.SAVE
                                 00000070       	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                           0000006F  0070       . = . - 1
                                 D3  006F       	.IIF	EQ	$$0-1,	.BYTE	^A/S/!FIRST_CHAR
                                 54  0070       	.IIF	NE	$$0-1,	.BYTE	^A/T/
                                 41  0071       	.IIF	NE	$$0-1,	.BYTE	^A/A/
                                 00  0072       	.BYTE	KEY_K_SUBSVALUE
                                 00  0073       	.BYTE	0
                           0000002A' 0074       	.LONG	PARDATABLOCK
                                 00  0078       	.BYTE	0
                                 00000036       	.RESTORE
                                 000005CB       	.RESTORE
                                     05CB 43600 ;
                                     05CB 43700 SETSTACK:
            52       FFFF 8F     3C  05CB 43800 	MOVZWL	#LNK$K_MAXSTACK,R2		; GET LIMIT VALUE
            52            51     D1  05D0 43900 	CMPL	R1,R2				; AND CHECK VALUE AGAINST IT
                          12     1B  05D3 44000 	BLEQU	10$				; AND SKIP IF OK
                          06     BB  05D5 44100 	PUSHR	#^M<R1,R2>			; PUSH ARGUMENTS
            7E         00'8F     9A  05D7 44200 	MOVZBL	#SEV$C_DIAG,-(SP)		; SET SEVERITY
            7E         00'8F     9A  05DB 44300 	MOVZBL	#ERM$C_MAXSTACK,-(SP)		; AND MESSAGE NAME
       0000'CF            04     FB  05DF 44400 	CALLS	#4,W^LNK$ERRMSG			; AND OUTPUT ERROR
            51            52     D0  05E4 44500 	MOVL	R2,R1				; SET VALUE AT LIMIT
                                     05E7 44600 10$:
       0000'CF            51     B0  05E7 44700 	MOVW	R1,W^LNK$GW_STACK		; SET STACK SIZE
                                 05  05EC 44800 	RSB					; AND RETURN
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  36
X01.09          PROCESS IMAGE COMPRESSION OPTIONS                                                                                (2)

                                     05ED 45000 	.SBTTL	PROCESS IMAGE COMPRESSION OPTIONS
                                     05ED 45100 ;
                                     05ED 45200 ;++
                                     05ED 45300 ;	(1) ISD_MAX -- SETS THE MAXIMUM NUMBER OF IMAGE
                                     05ED 45400 ;				SECTIONS TO BE GENERATED (AFTER THOSE
                                     05ED 45500 ;				CREATED BY MEMORY ALLOCATION)
                                     05ED 45600 ;	(2) DZRO_MIN -- MINIMUM SIZE REQUIRED OF A REGION BEFORE IT WILL
                                     05ED 45700 ;				BE COMPRESSED FROM THE IMAGE
                                     05ED 45800 ;--
                                     05ED 45900 ;
                           0000FFFF  05ED 46000 MAXISDS = 65535					; 65K IS ABSOLUTE OUTSIDE
                           0000FFFF  05ED 46100 MINDZRO = 65535					; ANYTHING BIGGER IS COMPRESSED
                                 000005ED 46200 	.PSECT	$CODE$
                                     05ED 46300 ;
                                     05ED 46400 	GENOPTIONDESC	ISD_MAX,ROUTINE=SETMAXISDS,-
                                     05ED 46500 			PARLIST=<<TYPE=PAR_K_NUMERIC,-
                                     05ED 46600 				FLAGS=PAR_M_SERVICE>>
                                     05ED       	.SAVE
                                 00000036       	.PSECT	$LNK_PARDATA,NOEXE,NOWRT
                           000005ED' 0036       	.LONG	SETMAXISDS
                                 01  003A       	.BYTE	1
                                 00' 003B       	.BYTE	PAR_K_NOMORE
                           0000003B  003C       . = .-1
                                 01  003B       	.BYTE	PAR_K_NUMERIC
                                 04  003C       	.BYTE	PAR_M_SERVICE
                           00000000  003D       	.LONG	0
                                 00  0041       	.BYTE	PAR_K_NOMORE
                                     0042       	.SAVE
                                 00000079       	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                           00000078  0079       . = . - 1
                                 C9  0078       	.IIF	EQ	$$0-1,	.BYTE	^A/I/!FIRST_CHAR
                                 53  0079       	.IIF	NE	$$0-1,	.BYTE	^A/S/
                                 44  007A       	.IIF	NE	$$0-1,	.BYTE	^A/D/
                                 00  007B       	.BYTE	KEY_K_SUBSVALUE
                                 00  007C       	.BYTE	0
                           00000036' 007D       	.LONG	PARDATABLOCK
                                 00  0081       	.BYTE	0
                                 00000042       	.RESTORE
                                 000005ED       	.RESTORE
                                     05ED 46700 ;
                                     05ED 46800 SETMAXISDS:
            52       FFFF 8F     3C  05ED 46900 	MOVZWL	#MAXISDS,R2			; GET LIMIT VALUE
            52            51     D1  05F2 47000 	CMPL	R1,R2				; AND CHECK VALUE AGAINST IT
                          12     1B  05F5 47100 	BLEQU	10$				; AND SKIP IF OK
                          06     BB  05F7 47200 	PUSHR	#^M<R1,R2>			; PUSH ARGUMENTS
            7E         00'8F     9A  05F9 47300 	MOVZBL	#SEV$C_DIAG,-(SP)		; SET SEVERITY
            7E         00'8F     9A  05FD 47400 	MOVZBL	#ERM$C_MAXISDS,-(SP)		; AND MESSAGE NAME
       0000'CF            04     FB  0601 47500 	CALLS	#4,W^LNK$ERRMSG			; AND OUTPUT ERROR
            51            52     D0  0606 47600 	MOVL	R2,R1				; SET VALUE AT LIMIT
                                     0609 47700 10$:
       0000'CF            51     B0  0609 47800 	MOVW	R1,W^LNK$GW_MISECTS		; SET MAXIMUM ISDS
                                 05  060E 47900 	RSB					; AND RETURN
                                     060F 48000 	GENOPTIONDESC	DZRO_MIN,ROUTINE=SETMINDZRO,-
                                     060F 48100 			PARLIST=<<TYPE=PAR_K_NUMERIC,-
                                     060F 48200 				FLAGS=PAR_M_SERVICE>>
                                     060F       	.SAVE
                                 00000042       	.PSECT	$LNK_PARDATA,NOEXE,NOWRT
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  37
X01.09          PROCESS IMAGE COMPRESSION OPTIONS                                                                                (2)

                           0000060F' 0042       	.LONG	SETMINDZRO
                                 01  0046       	.BYTE	1
                                 00' 0047       	.BYTE	PAR_K_NOMORE
                           00000047  0048       . = .-1
                                 01  0047       	.BYTE	PAR_K_NUMERIC
                                 04  0048       	.BYTE	PAR_M_SERVICE
                           00000000  0049       	.LONG	0
                                 00  004D       	.BYTE	PAR_K_NOMORE
                                     004E       	.SAVE
                                 00000082       	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                           00000081  0082       . = . - 1
                                 C4  0081       	.IIF	EQ	$$0-1,	.BYTE	^A/D/!FIRST_CHAR
                                 5A  0082       	.IIF	NE	$$0-1,	.BYTE	^A/Z/
                                 52  0083       	.IIF	NE	$$0-1,	.BYTE	^A/R/
                                 00  0084       	.BYTE	KEY_K_SUBSVALUE
                                 00  0085       	.BYTE	0
                           00000042' 0086       	.LONG	PARDATABLOCK
                                 00  008A       	.BYTE	0
                                 0000004E       	.RESTORE
                                 0000060F       	.RESTORE
                                     060F 48300 ;
                                     060F 48400 SETMINDZRO:
            52       FFFF 8F     3C  060F 48500 	MOVZWL	#MINDZRO,R2			; GET LIMIT VALUE
            52            51     D1  0614 48600 	CMPL	R1,R2				; AND CHECK VALUE AGAINST IT
                          12     1B  0617 48700 	BLEQU	10$				; AND SKIP IF OK
                          06     BB  0619 48800 	PUSHR	#^M<R1,R2>			; PUSH ARGUMENTS
            7E         00'8F     9A  061B 48900 	MOVZBL	#SEV$C_DIAG,-(SP)		; SET SEVERITY
            7E         00'8F     9A  061F 49000 	MOVZBL	#ERM$C_MINDZRO,-(SP)		; AND MESSAGE NAME
       0000'CF            04     FB  0623 49100 	CALLS	#4,W^LNK$ERRMSG			; AND OUTPUT ERROR
            51            52     D0  0628 49200 	MOVL	R2,R1				; SET VALUE AT LIMIT
                                     062B 49300 10$:
       0000'CF            51     B0  062B 49400 	MOVW	R1,W^LNK$GW_DZROMIN		; SET MINIMUM DZRO SIZE
                                 05  0630 49500 	RSB					; AND RETURN
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  38
X01.09          PROCESS PRIVILEGE REQUESTS                                                                                       (2)

                                     0631 49700 	.SBTTL	PROCESS PRIVILEGE REQUESTS
                                     0631 49800 ;
                                     0631 49900 ;++
                                     0631 50000 ;	PRIVILEGES OPTION -- SETS THE PRIVILEGE REQUEST MASK IN HEADER
                                     0631 50100 ;
                                     0631 50200 ;--
                                     0631 50300 ;
                                 00000004 50400 	.PSECT	$GLOBAL$
                                     0004 50500 ;
                                     0004 50600 LNK$GQ_PRIVS::
                           FFFFFFFF  0004 50700 	.LONG	-1			; DEFAULT TO REQUEST ALL
                           FFFFFFFF  0008 50800 	.LONG	-1			;
                                     000C 50900 ;
                                 00000631 51000 	.PSECT	$CODE$
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  39
X01.09          PROCESS UNIVERSAL OPTION                                                                                         (2)

                                     0631 51200 	.SBTTL	PROCESS UNIVERSAL OPTION
                                     0631 51300 ;
                                     0631 51400 ;++
                                     0631 51500 ;	UNIVERSAL= SYMBOL-COMMA-LIST
                                     0631 51600 ;
                                     0631 51700 ;	EACH SYMBOL NAME IS ENTERED INTO SYMBOL TABLE AS A REFERENCE
                                     0631 51800 ;	TO A UNIVERSAL SYMBOL. THEY ARE NOT LINKED ON UNDEFINED LIST AND THUS
                                     0631 51900 ;	NO ERROR WILL BE REPORTED IF THEY ARE NEVER DEFINED.
                                     0631 52000 ;--
                                     0631 52200 ;
                           00000006  0631 52210 SERV_REPT	= PAR_M_SERVICE ! PAR_M_REPTLIST
                                     0631 52220 ;
                                     0631 52300 	GENOPTIONDESC	UNIVERSAL,ROUTINE=SETUNIV,-
                                     0631 52400 			PARLIST=<<TYPE=PAR_K_NAME,-
                                     0631 52500 				FLAGS=SERV_REPT>>
                                     0631       	.SAVE
                                 0000004E       	.PSECT	$LNK_PARDATA,NOEXE,NOWRT
                           00000631' 004E       	.LONG	SETUNIV
                                 01  0052       	.BYTE	1
                                 00' 0053       	.BYTE	PAR_K_NOMORE
                           00000053  0054       . = .-1
                                 04  0053       	.BYTE	PAR_K_NAME
                                 06  0054       	.BYTE	SERV_REPT
                           00000000  0055       	.LONG	0
                                 00  0059       	.BYTE	PAR_K_NOMORE
                                     005A       	.SAVE
                                 0000008B       	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                           0000008A  008B       . = . - 1
                                 D5  008A       	.IIF	EQ	$$0-1,	.BYTE	^A/U/!FIRST_CHAR
                                 4E  008B       	.IIF	NE	$$0-1,	.BYTE	^A/N/
                                 49  008C       	.IIF	NE	$$0-1,	.BYTE	^A/I/
                                 00  008D       	.BYTE	KEY_K_SUBSVALUE
                                 00  008E       	.BYTE	0
                           0000004E' 008F       	.LONG	PARDATABLOCK
                                 00  0093       	.BYTE	0
                                 0000005A       	.RESTORE
                                 00000631       	.RESTORE
                           0000001E  0631 52600 SYM$W_FLAGS = 30	;*** TEMP
                           00000008  0631 52650 SYM$B_NAMLNG = 8	;*** AWAITING MDL DEFINITIONS OF OFFSETS
                           00000000  0631 52675 SYM$L_VALUE = 0		;***
                           00000000  0631 52700 SYM$L_UDFLINK = 0	;***
                                     0631 52800 ;
                                     0631 52900 SETUNIV:
            7E            7B     90  0631 53000 	MOVB	-(R11),-(SP)		; SAVE PREVIOUS BYTE
            6B            5A     90  0634 53100 	MOVB	R10,(R11)		; AND OVERWRITE WITH LENGTH
                          7E     DF  0637 53200 	PUSHAL	-(SP)			; SET ADDRESS FOR SYMBOL TABLE ENTRY
                          5B     DD  0639 53300 	PUSHL	R11			; SET ADDRESS OF COUNTED STRING
       0000'CF            02     FB  063B 53400 	CALLS	#2,W^LNK$SEARCH		; AND SEARCH FOR IT
            09            50     E8  0640 53500 	BLBS	R0,10$			; AND SKIP IF DEFINED
                          6E     9F  0643 53600 	PUSHAB	(SP)			; SET ADDRESS OF TABLE ENTRY
                          5B     DD  0645 53700 	PUSHL	R11			; AND COUNTED STRING
       0000'CF            02     FB  0647 53800 	CALLS	#2,W^LNK$INSERT		; AND INSERT IT
                                     064C 53900 10$:
            50            8E     D0  064C 54000 	MOVL	(SP)+,R0		; GET ADDRESS OF TABLE ENTRY
         1E A0       0000'8F     B0  064F 54100 	MOVW	#SYM$M_UNI,B^SYM$W_FLAGS(R0)	; SET THE BIT
                       00 A0     D4  0655 54200 	CLRL	B^SYM$L_UDFLINK(R0)		; ZERO UNDEFINED LIST POINTER
            8B            8E     90  0658 54300 	MOVB	(SP)+,(R11)+			; RESTORE THE PREVIOUS CHARACTER
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  40
X01.09          PROCESS UNIVERSAL OPTION                                                                                         (2)

       0000'CF            00'    E1  065B 54305 	BBC	S^#LNK$S_MAP,W^LNK$GL_CTLMSK,20$ ; SKIP IF NO MAP
                          16         0660       
       0000'CF            00'    E0  0661 54310 	BBS	S^#LNK$S_BRIEF,W^LNK$GL_CTLMSK,20$ ; OR IF BRIEF
                          10         0666       
                          7E     D4  0667 54315 	CLRL	-(SP)				; NO FLAGS TO ENTER
                          60     9F  0669 54320 	PUSHAB	SYM$L_VALUE(R0)			; ADDRESS OF VALUE
                       08 A0     9F  066B 54325 	PUSHAB	SYM$B_NAMLNG(R0)		; AND NAME
                     0000'CF     9F  066E 54330 	PUSHAB	W^LNK$AL_SYTBLFMT		; AND FORMAT CONTROL TABLE
       0000'CF            04     FB  0672 54335 	CALLS	#4,W^CRF$INSRTKEY		; AND TELL CREF ABOUT IT
                                     0677 54340 20$:						; IGNORING ERROR
                                 05  0677 54400 	RSB
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  41
X01.09          GLOBAL SECTION MATCH CONTROL                                                                                     (2)

                                     0678 54600 	.SBTTL	GLOBAL SECTION MATCH CONTROL
                                     0678 54700 ;
                                     0678 54800 ;++
                                     0678 54900 ;	GSMATCH=KEYWORD,MAJOR-ID,MINOR-ID
                                     0678 55000 ;--
                                     0678 55100 ;
                                     0678 55200 	GENOPTIONDESC	GSMATCH,ROUTINE=SETMATCTL,MINPARS=3,-
                                     0678 55300 			PARLIST=<<TYPE=PAR_K_KEYWORD,-
                                     0678 55400 					FLAGS=PAR_M_SERVICE,-
                                     0678 55500 					DATA=MATCTLKEYTBL>,-
                                     0678 55600 				<TYPE=PAR_K_NUMERIC,-
                                     0678 55700 					FLAGS=PAR_M_SERVICE>,-
                                     0678 55800 				<TYPE=PAR_K_NUMERIC,-
                                     0678 55900 					FLAGS=PAR_M_SERVICE>>
                                     0678       	.SAVE
                                 0000005A       	.PSECT	$LNK_PARDATA,NOEXE,NOWRT
                           00000678' 005A       	.LONG	SETMATCTL
                                 03  005E       	.BYTE	3
                                 00' 005F       	.BYTE	PAR_K_NOMORE
                           0000005F  0060       . = .-1
                                 03  005F       	.BYTE	PAR_K_KEYWORD
                                 04  0060       	.BYTE	PAR_M_SERVICE
                           0000001C' 0061       	.LONG	MATCTLKEYTBL
                                 00  0065       	.BYTE	PAR_K_NOMORE
                           00000065  0066       . = .-1
                                 01  0065       	.BYTE	PAR_K_NUMERIC
                                 04  0066       	.BYTE	PAR_M_SERVICE
                           00000000  0067       	.LONG	0
                                 00  006B       	.BYTE	PAR_K_NOMORE
                           0000006B  006C       . = .-1
                                 01  006B       	.BYTE	PAR_K_NUMERIC
                                 04  006C       	.BYTE	PAR_M_SERVICE
                           00000000  006D       	.LONG	0
                                 00  0071       	.BYTE	PAR_K_NOMORE
                                     0072       	.SAVE
                                 00000094       	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                           00000093  0094       . = . - 1
                                 C7  0093       	.IIF	EQ	$$0-1,	.BYTE	^A/G/!FIRST_CHAR
                                 53  0094       	.IIF	NE	$$0-1,	.BYTE	^A/S/
                                 4D  0095       	.IIF	NE	$$0-1,	.BYTE	^A/M/
                                 00  0096       	.BYTE	KEY_K_SUBSVALUE
                                 00  0097       	.BYTE	0
                           0000005A' 0098       	.LONG	PARDATABLOCK
                                 00  009C       	.BYTE	0
                                 00000072       	.RESTORE
                                 00000678       	.RESTORE
                                     0678 56000 ;
                           000000FF  0678 56100 MAXMAJID	= 255			; HIGHEST LEGAL MAJOR ID
                           00FFFFFF  0678 56200 MAXMINID	= ^XFFFFFF		; HIGHEST MINOR ID
                                     0678 56300 ;
                                     0678 56400 SETMATCTL:
                                     0678 56500 	CASE	PARNUM,-
                                     0678 56600 		<INSUFPARS,-
                                     0678 56700 		SETCTL,-
                                     0678 56800 		SETMAJ,-
                                     0678 56900 		SETMIN>,-
                                     0678 57000 		TYPE=B
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  42
X01.09          GLOBAL SECTION MATCH CONTROL                                                                                     (2)

            00   0000001B'EF     8F  0678       	CASEB	PARNUM,#0,S^#<<30009$-30008$>/2>-1
                          03'        067F       
                                     0680       30008$:
                               FDD8  0680       	.WORD	INSUFPARS-30008$
                               0008' 0682       	.WORD	SETCTL-30008$
                               000F' 0684       	.WORD	SETMAJ-30008$
                               001F' 0686       	.WORD	SETMIN-30008$
                                     0688       30009$:
                                     0688 57100 SETCTL:
       0000'CF            51     90  0688 57200 	MOVB	R1,W^LNK$GB_MATCHCTL
                          23     11  068D 57300 	BRB	MATCTLDONE
                                     068F 57400 SETMAJ:
            52         FF 8F     9A  068F 57500 	MOVZBL	#MAXMAJID,R2
            52            51     D1  0693 57600 	CMPL	R1,R2				; CHECK IT IS LEGAL
                          1B     1A  0696 57700 	BGTRU	BADID				; AND BR IF NOT
       0003'CF            51     90  0698 57800 	MOVB	R1,W^LNK$GL_MATCHID+3		; ELSE SET VALUE
                          13     11  069D 57900 	BRB	MATCTLDONE
                                     069F 58000 SETMIN:
            52   00FFFFFF 8F     D0  069F 58100 	MOVL	#MAXMINID,R2			; CHECK VALID
            52            51     D1  06A6 58200 	CMPL	R1,R2				;
                          08     1A  06A9 58300 	BGTRU	BADID				; AND SKIP IF NOT
            00            51     F0  06AB 58400 	INSV	R1,#0,#24,W^LNK$GL_MATCHID	; ELSE SET IT
       0000'CF            18         06AE       
                                     06B2 58500 MATCTLDONE:
                                 05  06B2 58600 	RSB					; AND ALL DONE
                                     06B3 58700 BADID:
                          06     BB  06B3 58800 	PUSHR	#^M<R1,R2>			; PUSH ARGUMENTS
                          00'    DD  06B5 58900 	PUSHL	S^#SEV$C_FATAL			; SEVERITY
            7E         00'8F     9A  06B7 59000 	MOVZBL	#ERM$C_MATCHID,-(SP)		; MESSAGE CODE
   00000000'EF            04     FB  06BB 59100 	CALLS	#4,LNK$ERRMSG			; AND EXPECT NO RETURN
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  43
X01.09          PROCESS CLUSTER OPTION                                                                                           (2)

                                     06C2 59120 	.SBTTL	PROCESS CLUSTER OPTION
                                     06C2 59130 ;++
                                     06C2 59140 ;	CLUSTER = NAME,[ADDRESS],[PFC],FILE-SPEC-COMMA-LIST
                                     06C2 59150 ;--
                                     06C2 59160 	GENOPTIONDESC	CLUSTER,ROUTINE=GENCLUSTER,MINPARS=4,-
                                     06C2 59170 			PARLIST=<<TYPE=PAR_K_NAME,-
                                     06C2 59180 					FLAGS=PAR_M_SERVICE>,-
                                     06C2 59190 				<TYPE=PAR_K_ADDRESS,-
                                     06C2 59200 					FLAGS=SERV_OPT,-
                                     06C2 59205 					DATA=ADDRKEYTBL>,-
                                     06C2 59210 				<TYPE=PAR_K_NUMERIC,-
                                     06C2 59220 					FLAGS=SERV_OPT>,-
                                     06C2 59222 				<TYPE=PAR_K_FILESPEC>>
                                     06C2       	.SAVE
                                 00000072       	.PSECT	$LNK_PARDATA,NOEXE,NOWRT
                           000006C2' 0072       	.LONG	GENCLUSTER
                                 04  0076       	.BYTE	4
                                 00' 0077       	.BYTE	PAR_K_NOMORE
                           00000077  0078       . = .-1
                                 04  0077       	.BYTE	PAR_K_NAME
                                 04  0078       	.BYTE	PAR_M_SERVICE
                           00000000  0079       	.LONG	0
                                 00  007D       	.BYTE	PAR_K_NOMORE
                           0000007D  007E       . = .-1
                                 02  007D       	.BYTE	PAR_K_ADDRESS
                                 05  007E       	.BYTE	SERV_OPT
                           00000000' 007F       	.LONG	ADDRKEYTBL
                                 00  0083       	.BYTE	PAR_K_NOMORE
                           00000083  0084       . = .-1
                                 01  0083       	.BYTE	PAR_K_NUMERIC
                                 05  0084       	.BYTE	SERV_OPT
                           00000000  0085       	.LONG	0
                                 00  0089       	.BYTE	PAR_K_NOMORE
                           00000089  008A       . = .-1
                                 07  0089       	.BYTE	PAR_K_FILESPEC
                                 00  008A       	.BYTE	0
                           00000000  008B       	.LONG	0
                                 00  008F       	.BYTE	PAR_K_NOMORE
                                     0090       	.SAVE
                                 0000009D       	.PSECT	$LNK_KEYWORDS,NOEXE,NOWRT
                           0000009C  009D       . = . - 1
                                 C3  009C       	.IIF	EQ	$$0-1,	.BYTE	^A/C/!FIRST_CHAR
                                 4C  009D       	.IIF	NE	$$0-1,	.BYTE	^A/L/
                                 55  009E       	.IIF	NE	$$0-1,	.BYTE	^A/U/
                                 00  009F       	.BYTE	KEY_K_SUBSVALUE
                                 00  00A0       	.BYTE	0
                           00000072' 00A1       	.LONG	PARDATABLOCK
                                 00  00A5       	.BYTE	0
                                 00000090       	.RESTORE
                                 000006C2       	.RESTORE
                                     06C2 59230 ;
                           0000001C  06C2 59231 CLU$L_BASE	= 28		;*** OFFSETS AWAITING MDL
                           00000024  06C2 59232 CLU$W_FLAGS	= 36		;***
                           00000026  06C2 59233 CLU$B_PFC	= 38		;***
                           00000027  06C2 59234 CLU$B_NAMLNG	= 39		;***
                           00000028  06C2 59235 CLU$T_NAME	= 40		;***
                                     06C2 59236 ;
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  44
X01.09          PROCESS CLUSTER OPTION                                                                                           (2)

                           000000FF  06C2 59237 MAX_PFC		= 255		; MAXIMUM ALLOWED PAGE FAULT CLUSTER
                                     06C2 59238 ;
                                     06C2 59240 GENCLUSTER:
            50       0000'CF     D0  06C2 59250 	MOVL	W^LNK$GL_CURCLU,R0		; GET CURRENT CLUSTER DESCRIPTOR
                                     06C7 59260 	CASE	PARNUM,-
                                     06C7 59280 		<CREATEBLOCK,-			; FIRST PARAMETER CREATES DESCRIPTOR
                                     06C7 59290 		BASEADDR,-			; INSERT BASE ADDRESS
                                     06C7 59300 		PFC>,-				; INSERT PFC AND MAKE NEXT STATE "FILE"
                                     06C7 59310 		TYPE=B,-
                                     06C7 59315 		LIMIT=#1
            01   0000001B'EF     8F  06C7       	CASEB	PARNUM,#1,S^#<<30011$-30010$>/2>-1
                          02'        06CE       
                                     06CF       30010$:
                               0008' 06CF       	.WORD	CREATEBLOCK-30010$
                               0025' 06D1       	.WORD	BASEADDR-30010$
                               0042' 06D3       	.WORD	PFC-30010$
                                     06D5       30011$:
                          5C     11  06D5 59320 	BRB	CLUDONE
                                     06D7 59330 CREATEBLOCK:
                     0000'CF     9F  06D7 59340 	PUSHAB	W^LNK$GL_CURCLU			; PUSH ADDRESS OF POINTER
       0000'CF            01     FB  06DB 59350 	CALLS	#1,W^LNK$ALLOCLUSTER		; AND GO CREATE DESCRIPTOR
            50       0000'CF     D0  06E0 59360 	MOVL	W^LNK$GL_CURCLU,R0		; POINTER TO CLUSTER DESCRIPTOR
         27 A0            5A     90  06E5 59370 	MOVB	R10,CLU$B_NAMLNG(R0)		; INSERT LENGTH OF NAME
                          30     BB  06E9 59375 	PUSHR	#^M<R4,R5>
            6B            5A     28  06EB 59380 	MOVC3	R10,(R11),CLU$T_NAME(R0)	; AND MOVE IN THE NAME
                       28 A0         06EE       
                          30     BA  06F0 59385 	POPR	#^M<R4,R5>
                          3F     11  06F2 59390 	BRB	CLUDONE
                                     06F4 59400 BASEADDR:
            51   000001FF 8F     C0  06F4 59410 	ADDL2	#511,R1				; ROUND UP TO NEXT PAGE
            51   000001FF 8F     CA  06FB 59420 	BICL2	#511,R1				;
         1C A0            51     D0  0702 59430 	MOVL	R1,CLU$L_BASE(R0)		; AND INSERT IN DESCRIPTOR
                          5A     D5  0706 59440 	TSTL	R10				; IF IT WAS EXPLICIT
                          29     13  0708 59450 	BEQL	CLUDONE				;
                          00'    E2  070A 59460 	BBSS	S^#CLU$S_BASED,CLU$W_FLAGS(R0),-; SET THE BIT THAT
            24         24 A0         070C 59470 			CLUDONE			; SPECIFIES SO AND ALL DONE
                          22     11  070F 59475 	BRB	CLUDONE
                                     0711 59480 PFC:
            52         FF 8F     9A  0711 59490 	MOVZBL	#MAX_PFC,R2			; GET MAXIMUM ALLOWED
            52            51     D1  0715 59500 	CMPL	R1,R2				; CHECK THAT GIVEN
                          15     1B  0718 59510 	BLEQU	10$				; AND SKIP IF OK
                          50     DD  071A 59515 	PUSHL	R0				; SAVE DESCRIPTOR ADDRESS
                          06     BB  071C 59520 	PUSHR	#^M<R1,R2>			; ELSE PUSH ARGUMENTS
                          00'    DD  071E 59530 	PUSHL	S^#SEV$C_DIAG			;
            7E         00'8F     9A  0720 59540 	MOVZBL	#ERM$C_MAXPFC,-(SP)		; AND ERROR MESSAGE CODE
       0000'CF            04     FB  0724 59550 	CALLS	#4,W^LNK$ERRMSG			; AND DO IT
            51            52     D0  0729 59560 	MOVL	R2,R1				; REDUCE TO MAXIMUM
            50            8E     D0  072C 59565 	MOVL	(SP)+,R0			; RETRIEV ADDRESS
                                     072F 59570 10$:
         26 A0            51     90  072F 59580 	MOVB	R1,CLU$B_PFC(R0)		; AND SET IN DESCRIPTOR
                                     0733 59680 CLUDONE:
                                 05  0733 59690 	RSB					; AND RETURN
                                     0734 59700 	.END
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  45
SYMBOL TABLE                                                                                                                     (2)

$$             = 0000009C R     07   CLI$K_KEYVAL   = 00000043            CLI$V_CONCATINP= 00000001            
$$.TMP1        = 00000001            CLI$K_KEYWORD  = 00000042            CLI$V_DBGEXCP  = 00000010            
$$.TMP2        = 00000062            CLI$K_LINK_INCL  ********   X   03   CLI$V_DBGTRU   = 00000001            
$$0            = 00000004            CLI$K_LINK_LIBR  ********   X   03   CLI$V_DEBUG    = 00000000            
$$1            = 00000005            CLI$K_LINK_SELE  ********   X   03   CLI$V_DUMMY    = 00000001            
$$ILLSET       = 0000009E R     03   CLI$K_LINK_SHAR  ********   X   03   CLI$V_EXPNAM   = 00000002            
$$TRANTBL      = 000000A7 R     03   CLI$K_NUMERVAL = 00000040            CLI$V_INDIRECT = 00000004            
$$TRMSET       = 000000A2 R     03   CLI$K_OUTPUT1  = 00000020            CLI$V_KEYVALU  = 00000001            
$CLI.          = 00000000 R     06   CLI$K_OUTPUT2  = 00000021            CLI$V_LASTVAL  = 00000000            
$CLI..         = 00000019 R     06   CLI$K_OUTPUT3  = 00000022            CLI$V_MOREINP  = 00000002            
ADDRESS          0000046D R     05   CLI$K_OUTPUT4  = 00000023            CLI$V_MOREVALS = 00000000            
ADDRKEYTBL       00000000 R     07   CLI$K_OUTSPEC  = 00000002            CLI$V_PARMDEF  = 00000003            
BADID            000006B3 R     05   CLI$K_PARDONE  = 00000003            CLI$V_PARMPRS  = 00000000            
BASEADDR         000006F4 R     05   CLI$K_QDBITS     00000014            CLI$V_PARMREQ  = 00000000            
BIT...         = 0003FFE9            CLI$K_QUALDEF    00000014            CLI$V_PRITYP   = 00000004            
CHECKEY          000003CE R     05   CLI$K_REQDESC    0000001C            CLI$V_QDEXPA   = 00000002            
CLI$A_ABSACT     00000014            CLI$K_UTILOPR  = 00000000            CLI$V_QDUSRV   = 00000001            
CLI$A_ERRACT     00000004            CLI$K_VALCONV  = 00000004            CLI$V_QUALEXP  = 00000001            
CLI$A_FLSACT     00000010            CLI$K_WORKAREA   00000080            CLI$V_QUALTRU  = 00000000            
CLI$A_IMGFILED   00000010            CLI$L_CLIFLAG    00000018            CLI$V_SUBTYP   = 00000000            
CLI$A_IMGHDADR   0000000C            CLI$L_INIARGCNT  00000000            CLI$V_TRMVRBLV = 00000008            
CLI$A_PROGXFER   00000004            CLI$L_LINKFLAG   00000014            CLI$V_VERIFY   = 00000002            
CLI$A_PRSACT     00000010            CLI$L_RQVALU     0000000C            CLI$V_VFYINP   = 00000005            
CLI$A_QDVALADR   00000008            CLI$L_USRVAL     00000014            CLI$W_QDVALSIZ   00000004            
CLI$A_QUALST     00000018            CLI$L_WORKAREA   00000000            CLI$W_RQSIZE     00000008            
CLI$A_RQADDR     0000000C            CLI$M_ABSADR   = 00000002            CLI$W_SERVCOD    00000001            
CLI$A_TRUACT     0000000C            CLI$M_ALLOCCUR = 00000001            CLI$_ABFNAM    = 000381B8            
CLI$A_UTILSERV   00000008            CLI$M_BATCH    = 00000008            CLI$_ABKEYW    = 00038000            
CLI$B_BITNUM     00000001            CLI$M_CONCATINP= 00000002            CLI$_ABVERB    = 00038008            
CLI$B_QDBLKSIZ   00000000            CLI$M_DBGEXCP  = 00010000            CLI$_BADRET    = 00038198            
CLI$B_QDCODE     00000001            CLI$M_DBGTRU   = 00000002            CLI$_BADTEXT   = 000381B0            
CLI$B_QDFLGS     00000002            CLI$M_DEBUG    = 00000001            CLI$_BUFOVF    = 00038018            
CLI$B_QDSTAT     00000003            CLI$M_DUMMY    = 00000002            CLI$_COMPLX    = 00038020            
CLI$B_RQFLGS     00000002            CLI$M_EXPNAM   = 00000004            CLI$_CONFQUAL  = 00038802            
CLI$B_RQINDX     00000001            CLI$M_INDIRECT = 00000010            CLI$_CREQUEJOB = 0003884A            
CLI$B_RQSTAT     00000003            CLI$M_KEYVALU  = 00000002            CLI$_DEFOVF    = 00038028            
CLI$B_RQTYPE     00000000            CLI$M_LASTVAL  = 00000001            CLI$_DEVALSPL  = 0003885A            
CLI$C_QDBITS     00000014            CLI$M_MOREINP  = 00000004            CLI$_DEVNOTFOR = 0003887A            
CLI$C_QUALDEF    00000014            CLI$M_MOREVALS = 00000001            CLI$_DEVNOTSPL = 00038862            
CLI$C_REQDESC    0000001C            CLI$M_PARMDEF  = 00000008            CLI$_DIRECT    = 00038030            
CLI$C_WORKAREA   00000080            CLI$M_PARMPRS  = 00000001            CLI$_EXPSYN    = 00038038            
CLI$K_ASCIIVAL = 00000041            CLI$M_PARMREQ  = 00000001            CLI$_FILOPN    = 00038190            
CLI$K_CLISERV  = 00000005            CLI$M_QDEXPA   = 00000004            CLI$_ILLVAL    = 0003883A            
CLI$K_ENDPRM1  = 00000030            CLI$M_QDUSRV   = 00000002            CLI$_IMCHNG    = 00038040            
CLI$K_ENDPRM2  = 00000031            CLI$M_QUALEXP  = 00000002            CLI$_IMGFNF    = 00038872            
CLI$K_ENDPRM3  = 00000032            CLI$M_QUALTRU  = 00000001            CLI$_INSFPRM   = 00038048            
CLI$K_ENDPRM4  = 00000033            CLI$M_TRMVRBLV = 00000300            CLI$_INVKEY    = 00038178            
CLI$K_FILSPEC  = 00000044            CLI$M_VERIFY   = 00000004            CLI$_INVQUAL   = 0003880A            
CLI$K_GETCMD   = 00000001            CLI$M_VFYINP   = 00000020            CLI$_INVQUALNUM= 0003881A            
CLI$K_GETOPT   = 00000003            CLI$Q_QDVALDESC  00000004            CLI$_INVREQTYP = 00038822            
CLI$K_GETQUAL  = 00000002            CLI$Q_RQDESC     00000008            CLI$_INVRSP    = 00038180            
CLI$K_INITPRS  = 00000000            CLI$S_PRITYP   = 00000004            CLI$_INVUIC    = 000381A8            
CLI$K_INPSPEC  = 00000001            CLI$S_SUBTYP   = 00000004            CLI$_IVCHAR    = 00038050            
CLI$K_INPUT1   = 00000010            CLI$S_TRMVRBLV = 00000002            CLI$_IVDEVTYPE = 0003886A            
CLI$K_INPUT2   = 00000011            CLI$V_ABSADR   = 00000001            CLI$_IVFNAM    = 000381C0            
CLI$K_INPUT3   = 00000012            CLI$V_ALLOCCUR = 00000000            CLI$_IVKEYW    = 00038060            
CLI$K_INPUT4   = 00000013            CLI$V_BATCH    = 00000003            CLI$_IVOPER    = 00038068            
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  46
SYMBOL TABLE                                                                                                                     (2)

CLI$_IVPROT    = 00038070            CUROPTDESC     = FFFFFFE8            ISD$K_NORMAL   = 00000000            
CLI$_IVQLOC    = 00038078            CUROPTPARDESC  = FFFFFFF0            ISD$K_USRSTACK = 000000FD            
CLI$_IVSYMB    = 00038080            CUROPTROUTINE  = FFFFFFF4            ISD$L_FLAGS      00000008            
CLI$_IVVALU    = 00038088            DIR_STATECOD   = 00000001            ISD$L_IDENT      00000010            
CLI$_IVVERB    = 00038090            DIR_STATETBL     00000014 R     04   ISD$L_VBN        0000000C            
CLI$_MAXPARM   = 00038098            ECHOLINE         00000008 R     03   ISD$L_VPNPFC     00000004            
CLI$_MULKEY    = 000381A0            ENDOPTPAR        000004CB R     05   ISD$M_CRF      = 00000002            
CLI$_NOATFIL   = 000380A0            ENDVALUE         00000394 R     05   ISD$M_DZRO     = 00000004            
CLI$_NOCCAT    = 000380A8            ERM$C_EXCSPAR    ********   X   05   ISD$M_GBL      = 00000001            
CLI$_NOCOMD    = 000380B0            ERM$C_ILLKEY     ********   X   05   ISD$M_LASTCLU  = 00000080            
CLI$_NOKEYW    = 000380B8            ERM$C_ILLVAL     ********   X   05   ISD$M_MATCHCTL = 00000070            
CLI$_NOLIST    = 000380C0            ERM$C_IVCHAR     ********   X   05   ISD$M_WRT      = 00000008            
CLI$_NOOPTPRS  = 00038842            ERM$C_LINERR     ********   X   05   ISD$S_MATCHCTL = 00000003            
CLI$_NOQUAL    = 000380C8            ERM$C_MATCHID    ********   X   05   ISD$S_PFC      = 00000008            
CLI$_NORMAL    = 00030001            ERM$C_MAXCHANS   ********   X   05   ISD$S_VPG      = 00000017            
CLI$_NOTNEG    = 000380D8            ERM$C_MAXIOSEG   ********   X   05   ISD$S_VPN      = 00000015            
CLI$_NOVALU    = 000380D0            ERM$C_MAXISDS    ********   X   05   ISD$T_GBLNAM     00000014            
CLI$_NOVALUE   = 0003882A            ERM$C_MAXPFC     ********   X   05   ISD$V_CRF      = 00000001            
CLI$_NULFIL    = 000380E0            ERM$C_MAXSTACK   ********   X   05   ISD$V_DZRO     = 00000002            
CLI$_NUMBER    = 000380E8            ERM$C_MINDZRO    ********   X   05   ISD$V_GBL      = 00000000            
CLI$_ONCOMD    = 000380F0            ERM$C_NONBTAB    ********   X   05   ISD$V_LASTCLU  = 00000007            
CLI$_ONERR     = 000380F8            ERM$C_NOVALU     ********   X   05   ISD$V_MATCHCTL = 00000004            
CLI$_ONEVAL    = 00038158            ERM$C_NULFIL     ********   X   05   ISD$V_P1       = 00000015            
CLI$_ONLEVL    = 00038100            ERM$C_NULPAR     ********   X   05   ISD$V_PFC      = 00000018            
CLI$_ONOVF     = 00038108            ERM$C_OPTREDERR  ********   X   05   ISD$V_SYSTEM   = 00000016            
CLI$_OVRFLW    = 00038160            ERM$C_PARMDEL    ********   X   05   ISD$V_VPG      = 00000000            
CLI$_PARMDEL   = 00038110            ERM$C_UNRECOPT   ********   X   05   ISD$V_VPN      = 00000000            
CLI$_PROC_ID   = 0003FFF1            ERM$C_UNRECQUAL  ********   X   05   ISD$V_WRT      = 00000003            
CLI$_QUEJOBCRE = 0003FFF9            ERM$C_VALREQ     ********   X   05   ISD$W_PAGCNT     00000002            
CLI$_REQPRMABS = 00038812            ERROUT           000001CA R     05   ISD$W_SIZE       00000000            
CLI$_RSLOVF    = 00038118            EXTRA_QDLIST     00000000 R     06   JAMPOINTERS      000004BA R     05   
CLI$_SKPDAT    = 00038120            EXTRA_QD_END     00000019 R     06   KEYWORD          000004F9 R     05   
CLI$_SPARE0    = 00038010            FILE             00000532 R     05   KEY_K_CLRMASK  = 00000002            
CLI$_SPARE1    = 00038058            FILEFLGSADR    = 00000008            KEY_K_FOLOVALUE= 00000003            
CLI$_STKOVF    = 00038128            FILENAMEDESC   = FFFFFFF8            KEY_K_MINLEN   = 00000003            
CLI$_SUBMITERR = 00038852            FILE_STATECOD  = 00000002            KEY_K_SETMASK  = 00000001            
CLI$_SYMDEL    = 00038130            FILE_STATETBL    00000028 R     04   KEY_K_SUBSVALUE= 00000000            
CLI$_SYMOVF    = 00038138            FIRST_CHAR     = 00000080            KEY_K_TBLENTSIZ= 00000009            
CLI$_UNDFIL    = 00038188            GBL...         = 00000000            LIB$CVT_DTB      ********   X   05   
CLI$_UNDSYM    = 00038140            GENCLUSTER       000006C2 R     05   LIB$CVT_HTB      ********   X   05   
CLI$_UNPROPARM = 00038170            GETCHARLOOP      00000076 R     05   LIB$CVT_OTB      ********   X   05   
CLI$_UNPROQUAL = 00038168            ILLCHAR          000001A3 R     05   LNK$ALLOBLK      ********   X   05   
CLI$_USGOTO    = 00038148            ILLCHARSET       00000000 R     03   LNK$ALLOCLUSTER  ********   X   05   
CLI$_VALCNVERR = 00038832            ILLSETEND        00000008 R     03   LNK$AL_SYTBLFMT  ********   X   05   
CLI$_VALREQ    = 00038150            INSUFPARS        00000458 R     05   LNK$DEALBLK      ********   X   05   
CLRMSK           00000516 R     05   ISD$B_PFC        00000007            LNK$DIAG         ********   X   05   
CLU$B_NAMLNG   = 00000027            ISD$B_TYPE       0000000B            LNK$ERRMSG       ********   X   05   
CLU$B_PFC      = 00000026            ISD$C_LENDZRO    0000000C            LNK$GB_MATCHCTL  ********   X   05   
CLU$L_BASE     = 0000001C            ISD$C_LENGLBL    00000024            LNK$GL_CTLMSK    ********   X   05   
CLU$S_BASED      ********   X   05   ISD$C_LENPRIV    00000010            LNK$GL_CURCLU    ********   X   05   
CLU$T_NAME     = 00000028            ISD$K_LENDZRO    0000000C            LNK$GL_DEFBAS    ********   X   05   
CLU$W_FLAGS    = 00000024            ISD$K_LENGLBL    00000024            LNK$GL_MATCHID   ********   X   05   
CLUDONE          00000733 R     05   ISD$K_LENPRIV    00000010            LNK$GQ_PRIVS     00000004 RG    09   
CREATEBLOCK      000006D7 R     05   ISD$K_MATALL   = 00000000            LNK$GW_CHANS     00000000 RG    09   
CRF$INSRTKEY     ********   X   05   ISD$K_MATEQU   = 00000001            LNK$GW_DEFLAGS   ********   X   05   
CTL_REG_DEF_BAS= 40000000            ISD$K_MATLEQ   = 00000002            LNK$GW_DZROMIN   ********   X   05   
CURKEYMSK        0000001C R     06   ISD$K_MATNEV   = 00000003            LNK$GW_IOSEG     00000002 RG    09   
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  47
SYMBOL TABLE                                                                                                                     (2)

LNK$GW_MISECTS   ********   X   05   PAR_M_REPTLIST = 00000002            RAB$M_EOF      = 00000100            
LNK$GW_STACK     ********   X   05   PAR_M_SERVICE  = 00000004            RAB$M_FDL      = 00000040            
LNK$INSERT       ********   X   05   PAR_V_OPTIONAL = 00000000            RAB$M_HSH      = 00000080            
LNK$K_MAXCHANS = 00000040  G         PAR_V_REPTLIST = 00000001            RAB$M_KGE      = 00200000            
LNK$K_MAXIOSEG = 0000FFFF  G         PAR_V_SERVICE  = 00000002            RAB$M_KGT      = 00400000            
LNK$K_MAXSTACK = 0000FFFF  G         PFC              00000711 R     05   RAB$M_LIM      = 00004000            
LNK$M_NOP0BUFS   ********   X   07   PRODIRSTATE      000001E9 R     05   RAB$M_LOA      = 00002000            
LNK$PROCOPTNS    00000000 RG    05   PROFILESTATE     000001EF R     05   RAB$M_LOC      = 00010000            
LNK$SEARCH       ********   X   05   PROMULVAL        00000389 R     05   RAB$M_MAS      = 00000020            
LNK$SETSHRBLIN   ********   X   06   PRONULLSTATE     000001E0 R     05   RAB$M_NLK      = 00100000            
LNK$S_BRIEF      ********   X   05   PROQUALSTATE     0000024E R     05   RAB$M_NXR      = 00800000            
LNK$S_LIBR       ********   X   06   PROSVALUE        00000383 R     05   RAB$M_PMT      = 40000000            
LNK$S_MAP        ********   X   05   PRO_REG_DEF_BAS= 00000200            RAB$M_PPF_IND  = 00004000            
LNK$S_SHR        ********   X   06   QUALTABLE        0000004B R     03   RAB$M_PPF_RAT  = 00003FC0            
LNK$S_VERIFY     ********   X   05   QUALTABLEND    = 00000063 R     03   RAB$M_PTA      = 20000000            
MATCTLDONE       000006B2 R     05   QUAL_STATECOD  = 00000003            RAB$M_RAH      = 00000200            
MATCTLKEYTBL     0000001C R     07   QUAL_STATETBL    0000003C R     04   RAB$M_RLK      = 00080000            
MAXISDS        = 0000FFFF            QUA_K_MINLEN   = 00000004            RAB$M_RNE      = 01000000            
MAXMAJID       = 000000FF            QUA_K_TBLENTSIZ= 00000006            RAB$M_RNF      = 08000000            
MAXMINID       = 00FFFFFF            QUA_K_VALNEV   = 00000002            RAB$M_TMO      = 02000000            
MAXQUALVALENGTH= 0000FFFF            QUA_K_VALOPT   = 00000001            RAB$M_TPT      = 00000002            
MAXTOKENLENGTH = 00000084            QUA_K_VALREQ   = 00000000            RAB$M_UIF      = 00000010            
MAX_PFC        = 000000FF            RAB$B_BID        00000000            RAB$M_ULK      = 00040000            
MINDZRO        = 0000FFFF            RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            
MINPARCNT        0000001A R     06   RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            
MVAL_STATECOD  = 00000005            RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            
MVAL_STATETBL    00000064 R     04   RAB$B_MBC        00000037            RAB$V_ASY      = 00000000            
NAME             0000051D R     05   RAB$B_MBF        00000036            RAB$V_BIO      = 0000000B            
NAME_OPT_VALUE   00000557 R     05   RAB$B_PSZ        00000034            RAB$V_CCO      = 0000001F            
NAME_VALUE       00000557 R     05   RAB$B_RAC        0000001E            RAB$V_CVT      = 0000001A            
NEXTREC          00000022 R     05   RAB$B_ROP1       00000005            RAB$V_EOF      = 00000008            
NULFILE          0000012B R     05   RAB$B_ROP2       00000006            RAB$V_FDL      = 00000006            
NULLVALUE        00000397 R     05   RAB$B_ROP3       00000007            RAB$V_HSH      = 00000007            
NULL_STATECOD  = 00000000            RAB$B_TMO        0000001F            RAB$V_KGE      = 00000015            
NULL_STATETBL    00000000 R     04   RAB$C_BID      = 00000001            RAB$V_KGT      = 00000016            
NUMERIC          00000473 R     05   RAB$C_BLN        00000044            RAB$V_LIM      = 0000000E            
NVAL_STATECOD  = 00000006            RAB$C_KEY      = 00000001            RAB$V_LOA      = 0000000D            
NVAL_STATETBL    00000078 R     04   RAB$C_RFA      = 00000002            RAB$V_LOC      = 00000010            
OKEY_STATECOD  = 00000007            RAB$C_SEQ      = 00000000            RAB$V_MAS      = 00000005            
OKEY_STATETBL    0000008C R     04   RAB$K_BLN        00000044            RAB$V_NLK      = 00000014            
OPAR_STATECOD  = 00000008            RAB$L_BKT        00000038            RAB$V_NXR      = 00000017            
OPAR_STATETBL    000000A0 R     04   RAB$L_CTX        00000018            RAB$V_PMT      = 0000001E            
OPTKEY           0000039D R     05   RAB$L_DCT        00000038            RAB$V_PPF_IND  = 0000000E            
OPTKEYTBL        00000054 R     07   RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            
OPTPAR           000003F8 R     05   RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            
P0BUFKEY         00000041 R     07   RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            
PARDATABLOCK   = 00000072 R     08   RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            
PARNUM           0000001B R     06   RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            
PAR_K_ADDRESS  = 00000002            RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            
PAR_K_FILESPEC = 00000007            RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            
PAR_K_KEYWORD  = 00000003            RAB$L_STS        00000008            RAB$V_TPT      = 00000001            
PAR_K_NAME     = 00000004            RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            
PAR_K_NAMOPTVAL= 00000006            RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            
PAR_K_NAMREQVAL= 00000005            RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            
PAR_K_NOMORE   = 00000000            RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            
PAR_K_NUMERIC  = 00000001            RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            
PAR_M_OPTIONAL = 00000001            RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  48
SYMBOL TABLE                                                                                                                     (2)

RAB$W_RFA4       00000014            
RAB$W_RSZ        00000022            
RAB$W_USZ        00000020            
RABADR         = 0000000C            
REQSTBLKADR    = 00000004            
RMS$_EOF         ********   X   05   
SAVEVALUE        000004C4 R     05   
SERV_OPT       = 00000005            
SERV_REPT      = 00000006            
SETBASE          00000558 R     05   
SETCHANS         00000572 R     05   
SETCTL           00000688 R     05   
SETIOSEG         00000594 R     05   
SETMAJ           0000068F R     05   
SETMATCTL        00000678 R     05   
SETMAXISDS       000005ED R     05   
SETMIN           0000069F R     05   
SETMINDZRO       0000060F R     05   
SETMSK           0000050F R     05   
SETSTACK         000005CB R     05   
SETUNIV          00000631 R     05   
SEV$C_DIAG       ********   X   05   
SEV$C_FATAL      ********   X   05   
SEV$C_INFOR      ********   X   05   
SPA            = 00000020            
STATETABLE       00000000 R     04   
STATE_CODE     = 00000009            
STA_K_TBLENTSIZ= 00000014            
STA_L_ILLSETADR= 00000004            
STA_L_NXTSTATBL= 0000000C            
STA_L_ROUTINE  = 00000010            
STA_L_TRMSETADR= 00000008            
STA_W_ILLSETLEN= 00000000            
STA_W_TRMSETLEN= 00000002            
SYM$B_NAMLNG   = 00000008            
SYM$C_MAXLNG     ********   X   05   
SYM$L_UDFLINK  = 00000000            
SYM$L_VALUE    = 00000000            
SYM$M_UNI        ********   X   05   
SYM$W_FLAGS    = 0000001E            
SYNTAX           000001A9 R     05   
SYS$GET          ********  GX   05   
SYS_REG_DEF_BAS= 80000000            
TAB            = 00000009            
TOOMANYPARS      0000044F R     05   
UNTERM           00000119 R     05   
VALU_STATECOD  = 00000004            
VALU_STATETBL    00000050 R     04   


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000080      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$LNK_CHARS$      000000AC      03     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD  NOWRT BYTE  
$LNK_STATETBL$   000000B4      04     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD  NOWRT LONG  
LNK_PROCOPTNS   ; PROCESS LINK TIME OPTIONS                      22-AUG-1978 04:41:51   VAX-11 MACRO X0.3-11               Page  49
PROGRAM SECTION SYNOPSIS                                                                                                         (2)

$CODE$           00000734      05     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT LONG  
$OWN$            00000020      06     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD    WRT BYTE  
$LNK_KEYWORDS    000000A6      07     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD  NOWRT BYTE  
$LNK_PARDATA     00000090      08     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD  NOWRT BYTE  
$GLOBAL$         0000000C      09     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD    WRT LONG  


THERE WERE NO ERRORS OR WARNINGS.
8018. BYTES LEFT IN FREE MEMORY POOL.
14. BYTES OF RECLAIMED MEMORY.
OBJ$:LNKPROOPT,LIS$:LNKPROOPT/-SP=EXECML$/ML,LIB$:LNK/ML,SRC$:LNKPROOPT
50 MLB DIR RDS - 776 GETS TO DEFINE 29 MACROS. 116 INTER. FILE WRITES. 
