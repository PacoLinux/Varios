
; Bliss-32 7.352	Saturday 22-AUG-1978 04:52:45	DBB3:[LINKER.SRC]LNKOBJFIL.B32;6				Page 1
; Digital Equipment Corporation
;
;00100  0001	MODULE LNK_OBJFIL (IDENT='X01.09') =
;00200  0002	
;00300  0003	BEGIN
;00400  0004	!
;00500  0005	!
;00600  0006	! Copyright (C) 1976, 1977, 1978
;00700  0007	! Digital Equipment Corporation,  Maynard, Massachusetts  01754
;00800  0008	!
;00900  0009	! This software is furnished under a license for use only on  a
;01000  0010	! single computer system and may be copied only with the inclu-
;01100  0011	! sion of the above copyright notice.  This  software,  or  any
;01200  0012	! other  copies  thereof, may not be provided or otherwise made
;01300  0013	! available to any other person except for use on  such  system
;01400  0014	! and  to  one who agrees to these license terms.  Title to and
;01500  0015	! ownership of the software shall at all times remain in DEC.
;01600  0016	!
;01700  0017	! The information in this software is subject to change without
;01800  0018	! notice and should not be construed as a commitment by Digital
;01900  0019	! Equipment Corporation.
;02000  0020	!
;02100  0021	! DEC assumes no responsibility for the use or  reliability  of
;02200  0022	! its software on equipment which is not supplied by DEC.
;02300  0023	!
;02400  0024	!
;02500  0025	!
;02600  0026	!
;02700  0027	!
;02800  0028	!++
;02900  0029	!
;03000  0030	! MODULE:	LNK_OBJFIL
;03100  0031	!
;03200  0032	! FACILITY:	LINKER
;03300  0033	!
;03400  0034	! ABSTRACT:	ROUTINES TO OPEN AND READ ALL RECORDS OF OBJECT FILES
;03500  0035	!
;03600  0036	! HISTORY:
;03700  0037	!
;03800  0038	!	VERSION:	X01.00
;03900  0039	!
;04000  0040	!	AUTHOR: T.J. PORTER 03-MAY-77
;04100  0041	!
;04200  0042	!	MODIFICATIONS:
;04300  0043	!
;04400  0044	! NO.	DATE		PROGRAMMER	PURPOSE
;04500  0045	! ---	----		----------	-------
;04600  0046	! 001	17-JUN-77	T.J. PORTER	OBJECT LIBRARIES
;04700  0047	! 002	13-SEP-77	T.J. PORTER	ALLOW FAILURE TO OPEN THE INTERNALLY
;04800  0048	!						MATERIALIZED FILES TO
;04900  0049	!						BE NON-FATAL
;05000  0050	! 003	06-OCT-77	T.J. PORTER	PERMIT LIBRARIES TO HAVE NO
;05100  0051	!						MODULES INCLUDED
;05200  0052	! 004	15-DEC-77	T.J. PORTER	SHAREABLE IMAGES
;05300  0053	! 005	30-MAR-78	T.J. PORTER	PERMIT GET BY RFA ON COCATENATED OBJ
;05400  0054	! 006	21-APR-78	T.J. PORTER	REQUIRE FILE CLEAN UP
;05500  0055	! 007	10-MAY-78	T.J. PORTER	SET BRO ALSO FOR SHAREABLE IMAGES

; Bliss-32 7.352	Saturday 22-AUG-1978 04:52:45	DBB3:[LINKER.SRC]LNKOBJFIL.B32;6				Page 1-1
; Digital Equipment Corporation
;
;05600  0056	! 008	15-MAY-78	T.J. PORTER	PROCESS FILES IN ORDER OF
;05700  0057	!						CLUSTERS
;05750  0058	! 009	07-JUL-78	T.J. PORTER	ENABLE THE SUPPRESSION OF VMSRTL.EXE
;05800  0059	!--

; Bliss-32 7.352	Saturday 22-AUG-1978 04:52:45	DBB3:[LINKER.SRC]LNKOBJFIL.B32;6				Page 2
; Digital Equipment Corporation
;
;05900  0060	     
;06000  0061	!
;06100  0062	!++
;06200  0063	!
;06300  0064	! FUNCTIONAL DESCRIPTION:
;06400  0065	!
;06500  0066	!	THIS MODULE CONTAINS A ROUTINE TO OPEN THE NEXT
;06600  0067	!	OBJECT MODULE FILE AND ANOTHER TO READ THE NEXT
;06700  0068	!	RECORD FROM THE CURRENTLY OPEN FILE. IT ALSO CONTAINS THE
;06800  0069	!	ROUTINE TO CLOSE THE CURRENTLY OPEN FILE.
;06900  0070	!
;07000  0071	!		LNK$NXTFIL
;07100  0072	!		LNK$NXTREC(RECADRS,RECLNG)
;07200  0073	!		LNK$CLOSCURFIL()
;07300  0074	!
;07400  0075	!	IF THERE ARE NO MORE FILES OR RECORDS, ROUTINES HAVE THE VALUE FALSE.
;07500  0076	!	IF FILE IS SUCCESSFULLY OPENED (BY FILE ID USING LINKED LIST OF FDB'S)
;07600  0077	!	LNK$NXTFIL HAS THE VALUE TRUE AND THE ADDRESS OF THE
;07700  0078	!	FILE DESCRIPTOR BLOCK IS PLACED IN LNK$GL_CURFIL.
;07800  0079	!
;07900  0080	!	THERE IS NO RETURN ON THE FOLLOWING ERROR CONDITIONS:
;08000  0081	!		OPEN FAILURE
;08100  0082	!		CONNECT FAILURE
;08200  0083	!
;08300  0084	!	CALLING SEQUENCE:
;08400  0085	!		LNK$NXTFIL()
;08500  0086	!		LNK$NXTREC(RECADRS,RECLNG)
;08600  0087	!		LNK$CLOSCURFIL()
;08700  0088	!	WHERE:
;08800  0089	!		RECADRS = ADDRESS OF LONGWORD TO RECEIVE THE
;08900  0090	!		          ADDRESS OF NEXT RECORD.
;09000  0091	!		RECLNG  = ADDRESS OF A WORD TO RECEIVE LENGTH
;09100  0092	!			  OF THE RECORD (IN BYTES).
;09200  0093	!	THE ROUTINE RETURNS THE VALUE TRUE, UNLESS END OF FILE
;09300  0094	!	IS DETECTED, WHEN IT RETURNS THE VALUE FALSE.
;09400  0095	!--
;09500  0096	!
;09600  0097	LIBRARY
;09700  0098		'SYS$LIBRARY:STARLET.L32';		! SYSTEM STRUCTURE DEFINITIONS
;09800  0099	REQUIRE
;09900  0100		'PREFIX';
;10000  0292	REQUIRE
;10100  0293		'DATBAS';		! INTERNAL DATA BASE DEFINITIONS
;10200  0525	REQUIRE
;10300  0526		'LIBFMT';		! LIBRARY FORMATS
;10400  0633	!
;10500  0634	FORWARD ROUTINE
;10600  0635		LNK$CLOSCURFIL : NOVALUE;		! CLOSE CURRENT FILE
;10700  0636	!
;10800  0637	EXTERNAL ROUTINE
;10900  0638		LNK$ALLOBLK : NOVALUE,			! DYNAMIC MEMORY ALLOCATOR
;10950  0639		LNK$ALLOCLUSTER : NOVALUE,		! ALLOCATE CLUSTER DESCRIPTORS
;11000  0640		LNK$ALLOFDB : NOVALUE,			! ALLOCATE FILE DESCRIPTOR BLOCKS
;11100  0641		LNK$DEALBLK : NOVALUE,			! AND DEALLOCATOR
;11200  0642		LNK$ERRMSG : NOVALUE;			! ERROR MESSAGES

; Bliss-32 7.352	Saturday 22-AUG-1978 04:52:45	DBB3:[LINKER.SRC]LNKOBJFIL.B32;6				Page 2-1
; Digital Equipment Corporation
;
;11300  0643	!
;11400  0644	EXTERNAL LITERAL
;11500  0645		ERM$C_CLOSERR : BYTLIT,			! CLOSE ERROR MESSAGE
;11600  0646		ERM$C_FORMAT : BYTLIT,			! FORMAT ERROR ON A FILE
;11700  0647		ERM$C_LIBFIND : BYTLIT,			! FAILED TO GET (BY RFA) THE CORRECT RECORD OF A LIBRARY
;11800  0648		ERM$C_OPIDERR : BYTLIT,			! OPEN BY FILE ID ERROR MESSAGE
;11900  0649		ERM$C_REDERR : BYTLIT,			! READ ERROR
;12000  0650		ERM$C_UNMCOD : BYTLIT,			! MESSAGE WHICH GIVES USER FILE
;12100  0651							! NAME AND THE RMS ERROR CODE
;12200  0652		LNK$S_INTFIL : SHORT,			! FLAG THAT CURRENTLY ON DEFAULT INTERNAL FILE
;12300  0653		LNK$S_SYSLIB : SHORT,			! SYSTEM LIBRARY SEARCH ENABLED
;12350  0654		LNK$S_SYSSHR : SHORT,			! SYSTEM SHAREABLE IMAGE ENABLED
;12400  0655							! ADDED TO END OF LIST INTERNALLY
;12450  0656		LNK$S_SYS : SHORT,			! SYSTEM IMAGE BEING PRODUCED
;12500  0657		OBJ$C_MAXRECSIZ : WORDLIT,		! MAXIMUM RECORD SIZE
;12600  0658		SEV$C_DIAG : SHORT,			! DIAGNOSTIC SEVERITY CODE
;12700  0659		SEV$C_FATAL : SHORT,			! FATAL ERROR CODE
;12800  0660		SEV$C_INFOR : SHORT;			! INFORMATION MESSAGES
;12900  0661	!
;13000  0662	EXTERNAL
;13100  0663		LNK$GL_CTLMSK,				! CONTROL FLAGS
;13200  0664		LNK$GL_CLULST : VECTOR[2],		! CLUSTER DESCRIPTOR LISTHEAD
;13300  0665		LNK$GL_CURCLU : REF BLOCK[,BYTE],	! CURRENT CLUSTER POINTER
;13400  0666		LNK$GL_DEFCLU : BLOCK[,BYTE],		! DEFAULT CLUSTER
;13450  0667		LNK$GW_NISECTS : WORD,			! NUMBER OF I-SECTIONS
;13500  0668		LNK$GW_NUDFSYMS : WORD,			! NUMBER OF UNDEFINED SYMBOLS
;13600  0669		LNK$GB_PASS : BYTE;			! THE PASS CURRENTLY EXECUTING
;13700  0670	!
;13800  0671	GLOBAL LITERAL
;13900  0672		LNK$C_OBJMBC = 5;			! MULTI BLOCK COUNT FOR OBJ FILES
;14000  0673	!
;14100  0674	GLOBAL
;14200  0675		LNK$GL_OBJRECS,				! ACCUMULATED OBJECT RECORDS READ
;14300  0676		LNK$AL_RAB : $RAB(RAC = SEQ,ROP = LOC,	! RECORD ACCESS BLOCK SPECIFYING
;14400P 0677							! SEQUENTIAL,LOCATE MODE
;14500P 0678				MBC = LNK$C_OBJMBC),	! WITH MULTIPLE BLOCKS
;14600  0679		LNK$GL_CURFIL : REF BLOCK[,BYTE];	! POINTER TO CURRENT FDB
;14700  0680	!
;14800  0681	OWN
;14900  0682		INTFILTBL : QUADVECTOR[2] INITIAL(			! TABLE OF INTERNAL FILES
;15000  0683				STRINGDESC('SYS$LIBRARY:STARLET.OLB'),	! SYSTEM DEFAULT OBJECT LIBRARY
;15100  0684				STRINGDESC('SYS$LIBRARY:VMSRTL.EXE')),	! SYSTEM DEFAULT SHAREABLE IMAGE
;15200  0685		PREVIOUS_FDB : REF BLOCK[,BYTE],			! POINTER TO PREVIOUS FDB.
;15300  0686		LASTUSERCLU : REF BLOCK[,BYTE],				! POINTER TO LAST USER CLUSTER (OR DEFAULT)
;15400  0687		NEXTINTFIL : BYTE INITIAL(2),				! TWO INTERNAL FILES
;15450  0688		ISECTS : WORD,						! SAVED I-SECTION COUNT
;15500  0689		INPUT_IFI : WORD;					! INTERNAL FILE ID SAVED FOR CLOSE
;15600  0690	!
;15700  0691	GLOBAL ROUTINE LNK$NXTFIL =
;15800  0692	BEGIN
;15900  0693	!
;16000  0694	!	CLOSE THE PREVIOUSLY OPEN FILE AND THEN
;16100  0695	!	IF THERE ARE ANY MORE FILES IN THE TABLE GO OPEN THE
;16200  0696	!	NEXT AND PUT ADDRESS OF ITS DESCRIPTOR IN CURRENT SLOT. IF
;16300  0697	!	NONE, RETURN FALSE.

; Bliss-32 7.352	Saturday 22-AUG-1978 04:52:45	DBB3:[LINKER.SRC]LNKOBJFIL.B32;6				Page 2-2
; Digital Equipment Corporation
;
;16400  0698	!
;16500  0699	LOCAL
;16600  0700		AUXFNB : REF BLOCK[,BYTE],		! POINTER TO AUXILIARY FILE NAME BLOCK
;16700  0701		INPUT_FAB : BLOCK[FAB$C_BLN,BYTE],	! FILE ACCESS BLOCK TO DO OPEN
;16800  0702		SEVERITY,				! ERROR MESSAGE SEVERITY CODE
;16900  0703		OPENERROR;				! ERROR CODE ON OPEN
;17000  0704	!
;17100  0705	IF .LNK$GL_CURFIL EQL 0					! IF NO CURRENT FILE
;17200  0706	THEN BEGIN						! START AT TOP OF LIST
;17300  0707		LNK$GL_CURCLU = .LNK$GL_CLULST[0];		! OF CLUSTERS
;17400  0708		PREVIOUS_FDB = LNK$GL_CURCLU[CLU$L_FSTFDB];	! SETTING PREVIOUS TO ITS LISTHEAD
;17500  0709	     END
;17600  0710	ELSE BEGIN
;17700  0711		LNK$CLOSCURFIL();				! OTHERWISE CLOSE THE PREVIOUS FILE
;17800  0712		IF (.LNK$GL_CURFIL[FDB$B_FILFLGS] AND		! IF THAT LAST FILE
;17900  0713				LNK$M_LIBR) NEQ 0		! WAS A LIBRARY
;18000  0714		AND .LNK$GL_CURFIL[FDB$L_OMDLST] EQL 0		! AND NO MODULES WERE LOADED
;18100  0715		THEN BEGIN								! WE DO NOT NEED IT ANYMORE
;18200  0716			IF (PREVIOUS_FDB[FDB$L_NXTFDB] = .LNK$GL_CURFIL[FDB$L_NXTFDB])	! SO REMOVE FROM THE LIST
;18300  0717				EQL 0							! AND IF LAST ON THIS
;18400  0718			THEN LNK$GL_CURCLU[CLU$L_LSTFDB] = .PREVIOUS_FDB;	! CLUSTER LIST, FIX EOL POINTER
;18500  0719			LNK$DEALBLK(FDB$C_SIZE,.LNK$GL_CURFIL);		! AND DISPOSE OF ITS DESCRIPTOR
;18600  0720		     END
;18700  0721		ELSE PREVIOUS_FDB = .LNK$GL_CURFIL;			! IF NOT EMPTY LIB, IT BECOMES THE PREVIOUS
;18800  0722	     END;
;18900  0723	WHILE (LNK$GL_CURFIL = .PREVIOUS_FDB[FDB$L_NXTFDB]) EQL 0	! GET NEXT FILE ON THIS CLUSTER LIST
;19000  0724	DO	IF .LNK$GL_CURCLU[CLU$L_NXTCLU] EQL 0			! BUT IF THE END AND LAST CLUSTER
;19100  0725		OR ( .LNK$GB_PASS EQL 1					! OR THE DEFAULT CLUSTER ON
;19200  0726		     AND .LNK$GL_CURCLU EQL LNK$GL_DEFCLU)		! PASS 1
;19300  0727		THEN BEGIN
;19400  0728			IF .LNK$GB_PASS EQL 1				! IF PASS 1
;19500  0729			AND .LNK$GW_NUDFSYMS NEQ 0			! AND THERE ARE STILL UNDEFINED SYMBOLS
;19600  0730			AND .LNK$GL_CTLMSK<LNK$S_SYSLIB,1,0>		! AND SYSTEM LIBRARY SEARCH ENABLED
;19700  0731			AND .NEXTINTFIL NEQ 0				! STILL INTERNAL FILE(S) TO SEARCH
;19800  0732			THEN BEGIN
;19900  0733				LOCAL FILEFLAGS;
;20000  0734				IF NOT .LNK$GL_CTLMSK<LNK$S_INTFIL,1,0>		! IF THIS IS THE FIRST TIME
;20100  0735				THEN BEGIN
;20200  0736					LASTUSERCLU = .LNK$GL_CURCLU;		! SAVE LAST USER CLUSTER DESCRIPTOR
;20300  0737					IF .LNK$GL_CTLMSK<LNK$S_SYS,1,0>	! AND IF A SYSTEM IMAGE
;20350  0738					OR NOT .LNK$GL_CTLMSK<LNK$S_SYSSHR,1,0>	! OR THE SHAREABLE IMAGE IS DISABLED
;20400  0739					THEN NEXTINTFIL = 1;			! THERE IS ONLY ONE INTERNAL
;20405  0740				     END;
;20500  0741				IF NOT .LNK$GL_CTLMSK<LNK$S_INTFIL,1,0>		! IF FIRST TIME
;20600  0742				AND NOT .LNK$GL_CTLMSK<LNK$S_SYS,1,0>		! AND NOT A SYSTEM IMAGE
;20650  0743				AND .LNK$GL_CTLMSK<LNK$S_SYSSHR,1,0>		! AND THE SHAREABLE IMAGE IS ENABLED
;20700  0744				THEN BEGIN
;20800  0745					LNK$ALLOCLUSTER(LNK$GL_CURCLU[CLU$L_NXTCLU]);	! ALLOCATE A NEW CLUSTER
;20900  0746					LNK$GL_CURCLU = .LNK$GL_CURCLU[CLU$L_NXTCLU];	! WHICH BECOMES CURRENT
;21000  0747					(LNK$GL_CURCLU[CLU$W_FLAGS])<CLU$V_PENDING> =	! BUT PENDING SOME
;21100  0748										TRUE;	! SYMBOL DEFINITIONS
;21116  0749					ISECTS = .LNK$GW_NISECTS;			! SAVE CURRENT COUNT
;21133  0750					(LNK$GL_CURCLU[CLU$W_FLAGS])<CLU$V_SHRIMG> =	! AND FLAG AS
;21166  0751										TRUE;	! SHAREABLE
;21200  0752					FILEFLAGS = LNK$M_SHR OR LNK$M_SELSER;		! FROM SELECTIVELY SEARCHED

; Bliss-32 7.352	Saturday 22-AUG-1978 04:52:45	DBB3:[LINKER.SRC]LNKOBJFIL.B32;6				Page 2-3
; Digital Equipment Corporation
;
;21300  0753				     END						! SHAREABLE IMAGE
;21400  0754				ELSE BEGIN						! NOT FIRST TIME OR
;21405  0755					IF .(LNK$GL_CURCLU[CLU$W_FLAGS])<CLU$V_PENDING>	! A SYSTEM IMAGE, IF
;21410  0756					THEN BEGIN					! CURRENT CLUSTER STILL
;21412  0757						LNK$GW_NISECTS = .ISECTS;		! STILL PENDING SYM. DEFS.
;21415  0758						LASTUSERCLU[CLU$L_NXTCLU] = 0;		! REMOVE FROM LIST
;21420  0759						LNK$GL_CLULST[1] = .LASTUSERCLU;	! SINCE RESOLVED NONE
;21425  0760					     END;					! AND SO IS USELESS
;21430  0761					FILEFLAGS = LNK$M_LIBR OR LNK$M_LIBSRCH;	! NOW WE SET FOR
;21435  0762					LNK$GL_CURCLU = LNK$GL_DEFCLU;			! SEARCH OF A LIBRARY
;21440  0763					IF .LASTUSERCLU NEQ .LNK$GL_CURCLU		! ON THE DEFAULT
;21445  0764					THEN BEGIN					! CLUSTER WHICH MUST
;21450  0765						LNK$GL_CURCLU[CLU$L_NXTCLU] = 		! (IF NOT ALREADY) BE
;21455  0766								.LASTUSERCLU[CLU$L_NXTCLU]; ! LINKED AFTER THE
;21460  0767						LASTUSERCLU[CLU$L_NXTCLU] = .LNK$GL_CURCLU; ! LAST USER CLUSTER
;21465  0768						IF .LNK$GL_CLULST[1] EQL .LASTUSERCLU	! AND PERHAPS TO END
;21470  0769						THEN LNK$GL_CLULST[1] = .LNK$GL_CURCLU;	! OF ENTIRE LIST
;21475  0770					     END;
;21480  0771				     END;
;21485  0772				PREVIOUS_FDB = .LNK$GL_CURCLU[CLU$L_LSTFDB];	! PREVIOUS FILE IS LAST
;21500  0773				LNK$ALLOFDB(PREVIOUS_FDB[FDB$L_NXTFDB]);	! ALLOCATE A FILE DESCRIPTOR
;21505  0774				LNK$GL_CURFIL = .PREVIOUS_FDB[FDB$L_NXTFDB];	! AND MAKE IT CURRENT
;21700  0775				LNK$GL_CURFIL[FDB$B_FILFLGS] = .FILEFLAGS;	! SET APPROPRIATE FLAGS
;21800  0776				LNK$GL_CURFIL[FDB$Q_USRNAMDSC] = .INTFILTBL[.NEXTINTFIL-1]; ! COPY THE NAME DESCRIPTOR
;21900  0777				LNK$GL_CURFIL[FDB$Q_USRNAMDSC] + 4 = .(INTFILTBL[.NEXTINTFIL-1] + 4);
;22000  0778				LNK$GL_CTLMSK<LNK$S_INTFIL,1,0> = TRUE;			! RECORD WE ARE DOING THIS
;22005  0779				NEXTINTFIL = .NEXTINTFIL - 1;				! REDUCE FILE NUMBER
;22100  0780				EXITLOOP;
;22200  0781			     END
;22300  0782			ELSE BEGIN
;22400  0783				LNK$GL_CTLMSK<LNK$S_INTFIL,1,0> = FALSE;	! TURN OFF INTERNAL FLAG
;22500  0784				LNK$GL_CURFIL = 0;
;22600  0785				RETURN FALSE;					! AND RETURN NO MORE FILES
;22700  0786			     END
;22800  0787		     END
;22900  0788		ELSE BEGIN						! IF NOT LAST CLUSTER
;23000  0789			LNK$GL_CURCLU = .LNK$GL_CURCLU[CLU$L_NXTCLU];	! MOVE TO NEXT
;23100  0790			PREVIOUS_FDB = LNK$GL_CURCLU[CLU$L_FSTFDB];	! RESET TO TOP OF FILE LIST
;23200  0791		     END;
;23300  0792	AUXFNB = LNK$GL_CURFIL[FDB$AL_AUXFNB];			! POINT TO AUXILIARY FILENMAME BLOCK
;23400  0793	CH$FILL(0,FAB$C_BLN,INPUT_FAB);				! CLEAR OUT THE FAB
;23500  0794	INPUT_FAB[FAB$B_BLN] = FAB$C_BLN;			! IDENTIFY IT AS A FAB
;23600  0795	INPUT_FAB[FAB$B_BID] = FAB$C_BID;			! WITH LENGTH AND ID
;23700  0796	INPUT_FAB[FAB$V_GET] = TRUE;				! SET FOR GET ACCESS
;23800  0797	INPUT_FAB[FAB$W_MRS] = OBJ$C_MAXRECSIZ;			! SET MAXIMUM ALLOWABLE RECORDS SIZE
;23900  0798	IF (.LNK$GL_CURFIL[FDB$B_FILFLGS] AND (LNK$M_SHR OR	! IF A SHAREABLE IMAGE FILE OR
;24000  0799					LNK$M_LIBR)) NEQ 0	! IF A LIBRARY FILE SET TO OPEN FOR BOTH
;24100  0800	THEN INPUT_FAB[FAB$V_BRO] = TRUE;			! RECORD AND BLOCK OPERATIONS
;24200  0801	INPUT_FAB[FAB$L_NAM] = .AUXFNB;				! INSERT FILE NAME BLOCK ADDRESS
;24300  0802	IF .LNK$GL_CTLMSK<LNK$S_INTFIL,1,0>			! IF THIS IS A RE-ENTRY WITH AN INTERNAL
;24400  0803	THEN BEGIN						! FILE APPENDED TO THE LIST
;24500  0804		INPUT_FAB[FAB$B_FNS] = .LNK$GL_CURFIL[FDB$Q_USRNAMDSC];	! IT HAS NEVER BEEN OPENED, SO SET
;24600  0805		INPUT_FAB[FAB$L_FNA] = .(LNK$GL_CURFIL[FDB$Q_USRNAMDSC]	! THE FILE NAME LENGTH AND ADDRESS
;24700  0806						+ 4);			! WITH NO DEFAULT NAME
;24800  0807	     END							! AND WITHOUT NAME BLOCK OPEN MECHANISM

; Bliss-32 7.352	Saturday 22-AUG-1978 04:52:45	DBB3:[LINKER.SRC]LNKOBJFIL.B32;6				Page 2-4
; Digital Equipment Corporation
;
;24900  0808	ELSE INPUT_FAB[FAB$V_NAM] = TRUE;			! OTHERWISE SET OPEN BY FILE ID FLAG
;25000  0809	IF (OPENERROR = $OPEN(FAB = INPUT_FAB))			! ATTEMPT TO OPEN IT
;25100  0810	THEN BEGIN						! AND IF SUCCESSFUL
;25200  0811		INPUT_IFI = .INPUT_FAB[FAB$W_IFI];		! SAVE IFI FOR LATER CLOSE
;25300  0812		IF .LNK$AL_RAB[RAB$L_UBF] EQL 0			! ALLOCATE A USER BUFFER (IF NECESSARY)
;25400  0813		THEN BEGIN					! WITH A SIZE WHICH IS THE MAX OF
;25500  0814			LNK$AL_RAB[RAB$W_USZ] = MAX(		! THE MAXIMUM ALLOWABLE OBJECT
;25600  0815				OBJ$C_MAXRECSIZ,LIB$K_HEADSIZ);	! RECORD AND A LIBRARY HEADER
;25700  0816			LNK$ALLOBLK(.LNK$AL_RAB[RAB$W_USZ],	! FOR RMS TO USE ON RECORDS THAT
;25800  0817				LNK$AL_RAB[RAB$L_UBF]);		! CROSS BLOCK BOUNDARIES
;25900  0818		     END;					! AND FOR READING LIBRARY HEADERS
;26000  0819		LNK$AL_RAB[RAB$L_FAB] = INPUT_FAB;		! SET FAB POINTER
;26100  0820		LNK$AL_RAB[RAB$W_ISI] = 0;			! ENSURE IT IS RE-USABLE RAB
;26200  0821		IF (OPENERROR = $CONNECT(RAB=LNK$AL_RAB))	! AND ATTEMPT TO CONNECT IT
;26300  0822		THEN BEGIN					! AND IF SUCCESSFUL
;26500  0823			IF (.LNK$GL_CURFIL[FDB$B_FILFLGS] AND		! FINALLY IF THIS IS A LIBRARY OR SHARE-
;26600  0824				(LNK$M_SHR OR LNK$M_LIBR)) NEQ 0	! ABLE IMAGE TELL RMS WHAT I KNOW ABOUT THE
;26700  0825			THEN BEGIN					! THE RECORDS OF THE FILE I.E.
;26800  0826				INPUT_FAB[FAB$V_ESC] = TRUE;		! RMS $MODIFY FUNCTION WHICH WILL TELL
;26900  0827				INPUT_FAB[FAB$L_CTX] = RME$C_SETRFM;	! RMS THAT THIS IS A VARIABLE
;27000  0828				INPUT_FAB[FAB$B_RFM] = FAB$C_VAR;	! LENGTH RECORD FILE, EVEN THOUGH THE
;27100  0829				IF (OPENERROR = $MODIFY(FAB=INPUT_FAB))	! THE RECORDS OF THE FILE ARE FIXED
;27200  0830				THEN RETURN TRUE;			! AND THAT IS ALL IF IT SUCCEEDS
;27300  0831			     END
;27400  0832			ELSE RETURN TRUE;
;27500  0833		     END;
;27600  0834	     END;				! IF ANY OF THE ABOVE FAILS
;27700  0835	LNK$CLOSCURFIL();					! ATTEMPT CLOSE 
;27800  0836								! ISSUE MESSAGES
;27900  0837	LNK$ERRMSG(ERM$C_OPIDERR,SEV$C_INFOR,			! FIRST THE LINK PASS NUMBER
;28000  0838			.LNK$GB_PASS,.AUXFNB[NAM$B_RSL],	! WITH THE RESULTANT STRING FILE NAME
;28100  0839			.AUXFNB[NAM$L_RSA]);			!
;28200  0840	IF .LNK$GL_CTLMSK<LNK$S_INTFIL,1,0>			! IF AN INTERNAL FILE
;28300  0841	THEN SEVERITY = SEV$C_INFOR				! THEN NOT FATAL
;28400  0842	ELSE SEVERITY = SEV$C_FATAL;				! OTHERWISE IT IS
;28500  0843	LNK$ERRMSG(ERM$C_UNMCOD,SEV$C_INFOR,			! OUTPUT THE USER FILENAME AND
;28600  0844			LNK$GL_CURFIL[FDB$Q_USRNAMDSC],		! AND THE OPEN ERROR CODE
;28700  0845			.OPENERROR);
;28710  0846	LNK$ERRMSG(.OPENERROR AND NOT 7,.SEVERITY,
;28720  0847			.INPUT_FAB[FAB$L_STV]);
;28800  0848	RETURN LNK$NXTFIL();				! RECURSING TO DISPOSE OF ITS DESCRIPTOR
;28900  0849	END;			! OF LNK$NXTFIL ROUTINE


							    .TITLE  LNK_OBJFIL
							    .IDENT  \X01.09\

							    .PSECT  $PLIT$,NOWRT,NOEXE,2

					      00000 P.AAA:  .ASCII  \SYS$LIBRARY:STARLET.OLB\<0>			      ;
					      00018 P.AAB:  .ASCII  \SYS$LIBRARY:VMSRTL.EXE\<0><0>			      ;

							    .PSECT  $OWN$,NOEXE,2

					      00000 INTFILTBL:

; Bliss-32 7.352	Saturday 22-AUG-1978 04:52:45	DBB3:[LINKER.SRC]LNKOBJFIL.B32;6				Page 2-5
; Digital Equipment Corporation
;
							    .LONG   23							      ;
					      00004 	    .ADDRESS  P.AAA						      ;
					      00008 	    .LONG   22							      ;
					      0000C 	    .ADDRESS  P.AAB						      ;
					      00010 PREVIOUS_FDB:
							    .BLKB   4
					      00014 LASTUSERCLU:
							    .BLKB   4
					      00018 NEXTINTFIL:
							    .BYTE   2							      ;
					      00019	    .BLKB   1
					      0001A ISECTS: .BLKB   2
					      0001C INPUT_IFI:
							    .BLKB   2

							    .PSECT  $GLOBAL$,NOEXE,2

					      00000 LNK$GL_OBJRECS::
							    .BLKB   4
					      00004 LNK$AL_RAB::
							    .BYTE   1							      ;
					      00005 	    .BYTE   68							      ;
					      00006 	    .WORD   0							      ;
					      00008 	    .LONG   65536						      ;
					      0000C 	    .LONG   0							      ;
					      00010 	    .LONG   0							      ;
					      00014 	    .WORD   0, 0, 0						      ;
					      0001A 	    .WORD   0							      ;
					      0001C 	    .LONG   0							      ;
					      00020 	    .WORD   0							      ;
					      00022 	    .BYTE   0							      ;
					      00023 	    .BYTE   0							      ;
					      00024 	    .WORD   0							      ;
					      00026 	    .WORD   0							      ;
					      00028 	    .LONG   0							      ;
					      0002C 	    .LONG   0							      ;
					      00030 	    .LONG   0							      ;
					      00034 	    .LONG   0							      ;
					      00038 	    .BYTE   0							      ;
					      00039 	    .BYTE   0							      ;
					      0003A 	    .BYTE   0							      ;
					      0003B 	    .BYTE   5							      ;
					      0003C 	    .LONG   0							      ;
					      00040 	    .LONG   0							      ;
					      00044 	    .LONG   0							      ;
					      00048 LNK$GL_CURFIL::
							    .BLKB   4

						    SYM$C_MAXLNG==	15
						    FDB$C_SIZE==	75
						    LNK$S_NEWUDF==	0
						    LNK$S_LIBR==	1
						    LNK$S_SHR==		2
						    LNK$S_SELSER==	3
						    LNK$S_OPTION==	4

; Bliss-32 7.352	Saturday 22-AUG-1978 04:52:45	DBB3:[LINKER.SRC]LNKOBJFIL.B32;6				Page 2-6
; Digital Equipment Corporation
;
						    LNK$S_DEBUGER==	5
						    LNK$S_LIBEXTR==	6
						    LNK$S_LIBSRCH==	7
						    LNK$M_NEWUDF==	1
						    LNK$M_LIBR==	2
						    LNK$M_SHR==		4
						    LNK$M_SELSER==	8
						    LNK$M_OPTION==	16
						    LNK$M_DEBUGER==	32
						    LNK$M_LIBEXTR==	64
						    LNK$M_LIBSRCH==	128
						    PMT$L_PSCDES==	0
						    PMT$L_MODCON==	1
						    PMT$L_SYMLST==	1
						    PMT$C_SIZE==	8
						    OMD$C_SIZE==	2080
						    OMD$M_NOPSCT==	1
						    OMD$S_NOPSCT==	0
						    OMD$M_NOBIN==	2
						    OMD$S_NOBIN==	1
						    OMD$M_SHRIMG==	4
						    OMD$S_SHRIMG==	2
						    OMD$M_SELSER==	8
						    OMD$S_SELSER==	3
						    OMD$M_MAPMOD==	16
						    OMD$S_MAPMOD==	4
						    OMD$M_DEBUGER==	32
						    OMD$S_DEBUGER==	5
						    PSC$C_SIZE==	43
						    MPC$C_SIZE==	17
						    LID$C_SIZE==	4
						    CLU$C_SIZE==	55
						    CLU$S_BASED==	0
						    CLU$S_SYMBAS==	1
						    CLU$S_SHRIMG==	2
						    CLU$S_PIC==		3
						    CLU$S_COPY==	4
						    CLU$S_OPEN==	5
						    CLU$S_PENDING==	6
						    FVM$C_SIZE==	12
						    LIB$K_HEADSIZ==	512
						    LIB$K_FMTLVL==	129
						    LIB$K_LIBVERLNG==	4
						    LIB$K_DATLNG==	6
						    LIB$K_TIMDATLNG==	12
						    LHD$C_SIZE==	46
						    LNE$C_SIZE==	20
						    LMH$C_SIZE==	28
						    LMH$M_SELSER==	1
						    LNK$C_OBJMBC==	5
							    .GLOBL  LNK$ALLOBLK, LNK$ALLOCLUSTER, LNK$ALLOFDB, LNK$DEALBLK
							    .GLOBL  LNK$ERRMSG, ERM$C_CLOSERR, ERM$C_FORMAT, ERM$C_LIBFIND
							    .GLOBL  ERM$C_OPIDERR, ERM$C_REDERR, ERM$C_UNMCOD, LNK$S_INTFIL
							    .GLOBL  LNK$S_SYSLIB, LNK$S_SYSSHR, LNK$S_SYS, OBJ$C_MAXRECSIZ
							    .GLOBL  SEV$C_DIAG, SEV$C_FATAL, SEV$C_INFOR, LNK$GL_CTLMSK

; Bliss-32 7.352	Saturday 22-AUG-1978 04:52:45	DBB3:[LINKER.SRC]LNKOBJFIL.B32;6				Page 2-7
; Digital Equipment Corporation
;
							    .GLOBL  LNK$GL_CLULST, LNK$GL_CURCLU, LNK$GL_DEFCLU, LNK$GW_NISECTS
							    .GLOBL  LNK$GW_NUDFSYMS, LNK$GB_PASS, SYS$OPEN, SYS$CONNECT
							    .GLOBL  SYS$MODIFY

							    .PSECT  $CODE$,NOWRT,2

					 0FFC 00000 	    .ENTRY  LNK$NXTFIL, Save R2,R3,R4,R5,R6,R7,R8,R9,R10,R11	      ; 0691
		         58	0000G  CF  9E 00002 	    MOVAB   LNK$GL_CURCLU, R8					      ;
		         59	       00  D0 00007 	    MOVL    #LNK$S_INTFIL, R9					      ;
		         5A	0000'  CF  9E 0000A 	    MOVAB   LNK$GL_CURFIL, R10					      ;
		         5B	0000'  CF  9E 0000F 	    MOVAB   PREVIOUS_FDB, R11					      ;
		         5E	  B0   AE  9E 00014 	    MOVAB   -80(SP), SP						      ;
				       6A  D5 00018 	    TSTL    LNK$GL_CURFIL					      ; 0705
				       08  12 0001A 	    BNEQ    1$							      ;
		         68	0000G  CF  D0 0001C 	    MOVL    LNK$GL_CLULST, LNK$GL_CURCLU			      ; 0707
				     0143  31 00021 	    BRW     19$							      ; 0708
		  0000V  CF	       00  FB 00024 1$:     CALLS   #0, LNK$CLOSCURFIL					      ; 0711
		         50	       6A  D0 00029 	    MOVL    LNK$GL_CURFIL, R0					      ; 0712
	   1F	    0A   A0	       01  E1 0002C 	    BBC     #1, 10(R0), 3$					      ;
				  04   A0  D5 00031 	    TSTL    4(R0)						      ; 0714
				       1A  12 00034 	    BNEQ    3$							      ;
		    00   BB	       60  D0 00036 	    MOVL    (R0), @PREVIOUS_FDB					      ; 0716
				       07  12 0003A 	    BNEQ    2$							      ; 0717
		         51	       68  D0 0003C 	    MOVL    LNK$GL_CURCLU, R1					      ; 0718
		    08   A1	       6B  D0 0003F 	    MOVL    PREVIOUS_FDB, 8(R1)					      ;
				       50  DD 00043 2$:     PUSHL   R0							      ; 0719
		         7E	  4B   8F  9A 00045 	    MOVZBL  #75, -(SP)						      ;
		  0000G  CF	       02  FB 00049 	    CALLS   #2, LNK$DEALBLK					      ;
				       03  11 0004E 	    BRB     4$							      ; 0712
		         6B	       50  D0 00050 3$:     MOVL    R0, PREVIOUS_FDB					      ; 0721
		         6A	  00   BB  D0 00053 4$:     MOVL    @PREVIOUS_FDB, LNK$GL_CURFIL			      ; 0723
				       03  13 00057 	    BEQL    5$							      ;
				     0112  31 00059 	    BRW     20$							      ;
		         52	       68  D0 0005C 5$:     MOVL    LNK$GL_CURCLU, R2					      ; 0724
				       62  D5 0005F 	    TSTL    (R2)						      ;
				       14  13 00061 	    BEQL    7$							      ;
		         01	0000G  CF  91 00063 	    CMPB    LNK$GB_PASS, #1					      ; 0725
				       08  12 00068 	    BNEQ    6$							      ;
		         50	0000G  CF  9E 0006A 	    MOVAB   LNK$GL_DEFCLU, R0					      ; 0726
		         50	       52  D1 0006F 	    CMPL    R2, R0						      ;
				       03  13 00072 6$:     BEQL    7$							      ;
				     00ED  31 00074 	    BRW     18$							      ;
		         01	0000G  CF  91 00077 7$:     CMPB    LNK$GB_PASS, #1					      ; 0728
				       03  13 0007C 	    BEQL    9$							      ;
				     00D8  31 0007E 8$:     BRW     16$							      ;
				0000G  CF  B5 00081 9$:     TSTW    LNK$GW_NUDFSYMS					      ; 0729
				       F7  13 00085 	    BEQL    8$							      ;
	   F1	  0000G  CF	       00  E1 00087 	    BBC     #LNK$S_SYSLIB, LNK$GL_CTLMSK, 8$			      ; 0730
				  08   AB  95 0008D 	    TSTB    NEXTINTFIL						      ; 0731
				       EC  13 00090 	    BEQL    8$							      ;
	   47	  0000G  CF	       59  E0 00092 	    BBS     R9, LNK$GL_CTLMSK, 12$				      ; 0734
		    04   AB	       52  D0 00098 	    MOVL    R2, LASTUSERCLU					      ; 0736
	   06	  0000G  CF	       00  E0 0009C 	    BBS     #LNK$S_SYS, LNK$GL_CTLMSK, 10$			      ; 0737
	   04	  0000G  CF	       00  E0 000A2 	    BBS     #LNK$S_SYSSHR, LNK$GL_CTLMSK, 11$			      ; 0738
		    08   AB	       01  90 000A8 10$:    MOVB    #1, NEXTINTFIL					      ; 0739

; Bliss-32 7.352	Saturday 22-AUG-1978 04:52:45	DBB3:[LINKER.SRC]LNKOBJFIL.B32;6				Page 2-8
; Digital Equipment Corporation
;
	   2D	  0000G  CF	       59  E0 000AC 11$:    BBS     R9, LNK$GL_CTLMSK, 12$				      ; 0741
	   27	  0000G  CF	       00  E0 000B2 	    BBS     #LNK$S_SYS, LNK$GL_CTLMSK, 12$			      ; 0742
	   21	  0000G  CF	       00  E1 000B8 	    BBC     #LNK$S_SYSSHR, LNK$GL_CTLMSK, 12$			      ; 0743
				       52  DD 000BE 	    PUSHL   R2							      ; 0745
		  0000G  CF	       01  FB 000C0 	    CALLS   #1, LNK$ALLOCLUSTER					      ;
		         78	       98  D0 000C5 	    MOVL    @LNK$GL_CURCLU, LNK$GL_CURCLU			      ; 0746
		         50	       68  D0 000C8 	    MOVL    LNK$GL_CURCLU, R0					      ; 0747
		    24   A0	  40   8F  88 000CB 	    BISB2   #64, 36(R0)						      ;
		    0A   AB	0000G  CF  B0 000D0 	    MOVW    LNK$GW_NISECTS, ISECTS				      ; 0749
		    24   A0	       04  88 000D6 	    BISB2   #4, 36(R0)						      ; 0750
		         52	       0C  D0 000DA 	    MOVL    #12, FILEFLAGS					      ; 0752
				       3B  11 000DD 	    BRB     14$							      ; 0741
	   0F	    24   A2	       06  E1 000DF 12$:    BBC     #6, 36(R2), 13$					      ; 0755
		  0000G  CF	  0A   AB  B0 000E4 	    MOVW    ISECTS, LNK$GW_NISECTS				      ; 0757
				  04   BB  D4 000EA 	    CLRL    @LASTUSERCLU					      ; 0758
		  0000G  CF	  04   AB  D0 000ED 	    MOVL    LASTUSERCLU, LNK$GL_CLULST+4			      ; 0759
		         52	  82   8F  9A 000F3 13$:    MOVZBL  #130, FILEFLAGS					      ; 0761
		         68	0000G  CF  9E 000F7 	    MOVAB   LNK$GL_DEFCLU, LNK$GL_CURCLU			      ; 0762
		         51	  04   AB  D0 000FC 	    MOVL    LASTUSERCLU, R1					      ; 0763
		         50	       68  D0 00100 	    MOVL    LNK$GL_CURCLU, R0					      ;
		         50	       51  D1 00103 	    CMPL    R1, R0						      ;
				       12  13 00106 	    BEQL    14$							      ;
		         60	       61  D0 00108 	    MOVL    (R1), (R0)						      ; 0765
		         61	       50  D0 0010B 	    MOVL    R0, (R1)						      ; 0767
		         51	0000G  CF  D1 0010E 	    CMPL    LNK$GL_CLULST+4, R1					      ; 0768
				       05  12 00113 	    BNEQ    14$							      ;
		  0000G  CF	       50  D0 00115 	    MOVL    R0, LNK$GL_CLULST+4					      ; 0769
		         50	       68  D0 0011A 14$:    MOVL    LNK$GL_CURCLU, R0					      ; 0772
		         6B	  08   A0  D0 0011D 	    MOVL    8(R0), PREVIOUS_FDB					      ;
				       6B  DD 00121 	    PUSHL   PREVIOUS_FDB					      ; 0773
		  0000G  CF	       01  FB 00123 	    CALLS   #1, LNK$ALLOFDB					      ;
		         6A	  00   BB  D0 00128 	    MOVL    @PREVIOUS_FDB, LNK$GL_CURFIL			      ; 0774
		         50	       6A  D0 0012C 	    MOVL    LNK$GL_CURFIL, R0					      ; 0775
		    0A   A0	       52  90 0012F 	    MOVB    FILEFLAGS, 10(R0)					      ;
		         51	  0B   A0  9E 00133 	    MOVAB   11(R0), R1						      ; 0776
		         50	  08   AB  9A 00137 	    MOVZBL  NEXTINTFIL, R0					      ;
				  E8 AB40  7F 0013B 	    PUSHAQ  INTFILTBL-8[R0]					      ;
		         61	       9E  D0 0013F 	    MOVL    @(SP)+, (R1)					      ;
		         50	  08   AB  9A 00142 	    MOVZBL  NEXTINTFIL, R0					      ; 0777
				  EC AB40  7F 00146 	    PUSHAQ  INTFILTBL-4[R0]					      ;
		    04   A1	       9E  D0 0014A 	    MOVL    @(SP)+, 4(R1)					      ;
	   00	  0000G  CF	       59  E2 0014E 	    BBSS    R9, LNK$GL_CTLMSK, 15$				      ; 0778
				  08   AB  97 00154 15$:    DECB    NEXTINTFIL						      ; 0779
				       15  11 00157 	    BRB     20$							      ; 0780
	   00	  0000G  CF	       59  E5 00159 16$:    BBCC    R9, LNK$GL_CTLMSK, 17$				      ; 0783
				       6A  D4 0015F 17$:    CLRL    LNK$GL_CURFIL					      ; 0784
				     011A  31 00161 	    BRW     30$							      ; 0785
		         68	       62  D0 00164 18$:    MOVL    (R2), LNK$GL_CURCLU					      ; 0789
	   6B	         68	       04  C1 00167 19$:    ADDL3   #4, LNK$GL_CURCLU, PREVIOUS_FDB			      ; 0790
				     FEE5  31 0016B 	    BRW     4$							      ; 0723
		         56	       6A  D0 0016E 20$:    MOVL    LNK$GL_CURFIL, R6					      ; 0792
	   57	         56	       13  C1 00171 	    ADDL3   #19, R6, AUXFNB					      ;
	   00	         6E	       00  2C 00175 	    MOVC5   #0, (SP), #0, #80, INPUT_FAB			      ; 0793
		         6E	0050   8F     00179									      ;
		         6E	5003   8F  B0 0017D 	    MOVW    #20483, INPUT_FAB					      ; 0795

; Bliss-32 7.352	Saturday 22-AUG-1978 04:52:45	DBB3:[LINKER.SRC]LNKOBJFIL.B32;6				Page 2-9
; Digital Equipment Corporation
;
		    16   AE	       02  88 00182 	    BISB2   #2, INPUT_FAB+22					      ; 0796
		    36   AE	0000G  8F  B0 00186 	    MOVW    #OBJ$C_MAXRECSIZ, INPUT_FAB+54			      ; 0797
		         06	  0A   A6  93 0018C 	    BITB    10(R6), #6						      ; 0798
				       05  13 00190 	    BEQL    21$							      ;
		    16   AE	  40   8F  88 00192 	    BISB2   #64, INPUT_FAB+22					      ; 0800
		    28   AE	       57  D0 00197 21$:    MOVL    AUXFNB, INPUT_FAB+40				      ; 0801
	   0F	  0000G  CF	       59  E1 0019B 	    BBC     R9, LNK$GL_CTLMSK, 22$				      ; 0802
		         50	  0B   A6  9E 001A1 	    MOVAB   11(R6), R0						      ; 0804
		    34   AE	       60  90 001A5 	    MOVB    (R0), INPUT_FAB+52					      ;
		    2C   AE	  04   A0  D0 001A9 	    MOVL    4(R0), INPUT_FAB+44					      ; 0805
				       04  11 001AE 	    BRB     23$							      ; 0802
		    07   AE	       01  88 001B0 22$:    BISB2   #1, INPUT_FAB+4					      ; 0808
				       5E  DD 001B4 23$:    PUSHL   SP							      ; 0809
	      00000000G  9F	       01  FB 001B6 	    CALLS   #1, @#SYS$OPEN					      ;
		         53	       50  D0 001BD 	    MOVL    R0, OPENERROR					      ;
		         6A	       53  E9 001C0 	    BLBC    OPENERROR, 27$					      ;
		    0C   AB	  02   AE  B0 001C3 	    MOVW    INPUT_FAB+2, INPUT_IFI				      ; 0811
				  E0   AA  D5 001C8 	    TSTL    LNK$AL_RAB+36					      ; 0812
				       21  12 001CB 	    BNEQ    25$							      ;
		         50	0000G  8F  3C 001CD 	    MOVZWL  #OBJ$C_MAXRECSIZ, R0				      ; 0814
		  0200   8F	       50  B1 001D2 	    CMPW    R0, #512						      ;
				       05  1E 001D7 	    BGEQU   24$							      ;
		         50	0200   8F  3C 001D9 	    MOVZWL  #512, R0						      ;
		    DC   AA	       50  B0 001DE 24$:    MOVW    R0, LNK$AL_RAB+32					      ;
				  E0   AA  9F 001E2 	    PUSHAB  LNK$AL_RAB+36					      ; 0817
		         7E	  DC   AA  3C 001E5 	    MOVZWL  LNK$AL_RAB+32, -(SP)				      ; 0816
		  0000G  CF	       02  FB 001E9 	    CALLS   #2, LNK$ALLOBLK					      ;
		    F8   AA	       6E  9E 001EE 25$:    MOVAB   INPUT_FAB, LNK$AL_RAB+60				      ; 0819
				  BE   AA  B4 001F2 	    CLRW    LNK$AL_RAB+2					      ; 0820
				  BC   AA  9F 001F5 	    PUSHAB  LNK$AL_RAB						      ; 0821
	      00000000G  9F	       01  FB 001F8 	    CALLS   #1, @#SYS$CONNECT					      ;
		         53	       50  D0 001FF 	    MOVL    R0, OPENERROR					      ;
		         28	       53  E9 00202 	    BLBC    OPENERROR, 27$					      ;
		         50	       6A  D0 00205 	    MOVL    LNK$GL_CURFIL, R0					      ; 0823
		         06	  0A   A0  93 00208 	    BITB    10(R0), #6						      ;
				       1B  13 0020C 	    BEQL    26$							      ;
		    07   AE	       08  88 0020E 	    BISB2   #8, INPUT_FAB+4					      ; 0826
		    18   AE	       01  D0 00212 	    MOVL    #1, INPUT_FAB+24					      ; 0827
		    1F   AE	       02  90 00216 	    MOVB    #2, INPUT_FAB+31					      ; 0828
				       5E  DD 0021A 	    PUSHL   SP							      ; 0829
	      00000000G  9F	       01  FB 0021C 	    CALLS   #1, @#SYS$MODIFY					      ;
		         53	       50  D0 00223 	    MOVL    R0, OPENERROR					      ;
		         04	       53  E9 00226 	    BLBC    OPENERROR, 27$					      ;
		         50	       01  D0 00229 26$:    MOVL    #1, R0						      ; 0832
					   04 0022C 	    RET     							      ;
		  0000V  CF	       00  FB 0022D 27$:    CALLS   #0, LNK$CLOSCURFIL					      ; 0835
				  04   A7  DD 00232 	    PUSHL   4(AUXFNB)						      ; 0837
		         7E	  03   A7  9A 00235 	    MOVZBL  3(AUXFNB), -(SP)					      ;
		         7E	0000G  CF  9A 00239 	    MOVZBL  LNK$GB_PASS, -(SP)					      ;
		         7E	       00  9A 0023E 	    MOVZBL  #SEV$C_INFOR, -(SP)					      ;
		         7E	  00G  8F  9A 00241 	    MOVZBL  #ERM$C_OPIDERR, -(SP)				      ;
		  0000G  CF	       05  FB 00245 	    CALLS   #5, LNK$ERRMSG					      ;
	   05	  0000G  CF	       59  E1 0024A 	    BBC     R9, LNK$GL_CTLMSK, 28$				      ; 0840
		         52	       00  9A 00250 	    MOVZBL  #SEV$C_INFOR, SEVERITY				      ; 0841
				       03  11 00253 	    BRB     29$							      ; 0840

; Bliss-32 7.352	Saturday 22-AUG-1978 04:52:45	DBB3:[LINKER.SRC]LNKOBJFIL.B32;6				Page 2-10
; Digital Equipment Corporation
;
		         52	       00  9A 00255 28$:    MOVZBL  #SEV$C_FATAL, SEVERITY				      ; 0842
				       53  DD 00258 29$:    PUSHL   OPENERROR						      ; 0843
	   7E	         6A	       0B  C1 0025A 	    ADDL3   #11, LNK$GL_CURFIL, -(SP)				      ; 0844
		         7E	       00  9A 0025E 	    MOVZBL  #SEV$C_INFOR, -(SP)					      ; 0843
		         7E	  00G  8F  9A 00261 	    MOVZBL  #ERM$C_UNMCOD, -(SP)				      ;
		  0000G  CF	       04  FB 00265 	    CALLS   #4, LNK$ERRMSG					      ;
				  0C   AE  DD 0026A 	    PUSHL   INPUT_FAB+12					      ; 0846
				       52  DD 0026D 	    PUSHL   SEVERITY						      ;
	   7E	         53	       07  CB 0026F 	    BICL3   #7, OPENERROR, -(SP)				      ;
		  0000G  CF	       03  FB 00273 	    CALLS   #3, LNK$ERRMSG					      ;
		  FD83   CF	       00  FB 00278 	    CALLS   #0, LNK$NXTFIL					      ; 0848
					   04 0027D 	    RET     							      ;
				       50  D4 0027E 30$:    CLRL    R0							      ; 0691
					   04 00280 	    RET     							      ;

; Routine Size:  641 bytes


;29000  0850	GLOBAL ROUTINE LNK$NXTREC(RECADRS,RECLNG)=
;29100  0851	BEGIN
;29200  0852	!
;29300  0853	!	READ NEXT RECORD FROM CURRENTLY OPEN FILE.
;29400  0854	!	THIS ROUTINE ACQUIRES RECORDS SEQUENTIALLY
;29500  0855	!	UNTIL END OF FILE IS DETECTED, IN WHICH
;29600  0856	!	CASE IT HAS THE VALUE FALSE. SUCCESSFUL READS RETURN
;29700  0857	!	THE ADDRESS AND LENGTH OF NEXT RECORD AND THE ROUTINE
;29800  0858	!	HAS THE VALUE TRUE
;29900  0859	!
;30000  0860	LOCAL READERROR;					! READ ERROR CODE
;30100  0861	!
;30200  0862	MAP RECLNG : REF VECTOR[,WORD];				! REALLY A POINTER TO A WORD
;30300  0863	!
;30400  0864	BIND AUXFNB = LNK$GL_CURFIL[FDB$AL_AUXFNB]		! REFERENCE THE AUXILIARY FILE NAME BLOCK PART
;30500  0865				: BLOCK[NAM$C_BLN,BYTE];
;30600  0866	!
;30700  0867	IF NOT (READERROR = $GET(RAB=LNK$AL_RAB))		! ATTEMPT TO GET THE NEXT RECORD
;30800  0868	THEN IF .READERROR NEQ RMS$_EOF				! AND IF AN ERROR OTHER THAN
;30900  0869		THEN BEGIN					! END OF FILE
;31000  0870			LNK$ERRMSG(ERM$C_REDERR,SEV$C_DIAG,	! ISSUE READ ERROR MESSAGE
;31100  0871				.LNK$GB_PASS,.AUXFNB[NAM$B_RSL],! WITH CURRENT PASS, AND
;31200  0872				.AUXFNB[NAM$L_RSA]);		! RESULTANT FILE NAME
;31300  0873			LNK$CLOSCURFIL();			! ATTEMPT TO CLOSE IT
;31400  0874			LNK$ERRMSG(ERM$C_UNMCOD,SEV$C_DIAG,	! AND THEN OUTPUT USER'S NAME
;31500  0875				LNK$GL_CURFIL[FDB$Q_USRNAMDSC],	! AND ERROR CODE
;31600  0876				.READERROR);			!
;31610  0877			LNK$ERRMSG(.READERROR AND NOT 7,SEV$C_FATAL,
;31620  0878				.LNK$AL_RAB[RAB$L_STV]);
;31700  0879		     END
;31800  0880		ELSE RETURN FALSE;				! ALL DONE IF END OF FILE
;31900  0881	!
;32000  0882	LNK$GL_OBJRECS = .LNK$GL_OBJRECS + 1;			! 
;32100  0883	RECLNG[0] = .LNK$AL_RAB[RAB$W_RSZ];			! RETURN LENGTH AND ADDRESS OF THIS
;32200  0884	.RECADRS = .LNK$AL_RAB[RAB$L_RBF];	! SUCCESSFULLY OBTAINED RECORD
;32300  0885	RETURN TRUE;				! AND ALL IS DONE
;32400  0886	END;			! OF LNK$NXTREC ROUTINE

; Bliss-32 7.352	Saturday 22-AUG-1978 04:52:45	DBB3:[LINKER.SRC]LNKOBJFIL.B32;6				Page 2-11
; Digital Equipment Corporation
;



							    .GLOBL  SYS$GET

					 0E0C 00281 	    .ENTRY  LNK$NXTREC, Save R2,R3,R9,R10,R11			      ; 0850
		         59	0000G  CF  9E 00283 	    MOVAB   LNK$ERRMSG, R9					      ;
		         5A	       00  D0 00288 	    MOVL    #SEV$C_DIAG, R10					      ;
		         5B	0000'  CF  9E 0028B 	    MOVAB   LNK$GL_CURFIL, R11					      ;
	   52	         6B	       13  C1 00290 	    ADDL3   #19, LNK$GL_CURFIL, R2				      ; 0864
				  BC   AB  9F 00294 	    PUSHAB  LNK$AL_RAB						      ; 0867
	      00000000G  9F	       01  FB 00297 	    CALLS   #1, @#SYS$GET					      ;
		         53	       50  D0 0029E 	    MOVL    R0, READERROR					      ;
		         41	       53  E8 002A1 	    BLBS    READERROR, 1$					      ;
	      0001827A   8F	       53  D1 002A4 	    CMPL    READERROR, #98938					      ; 0868
				       49  13 002AB 	    BEQL    2$							      ;
				  04   A2  DD 002AD 	    PUSHL   4(R2)						      ; 0870
		         7E	  03   A2  9A 002B0 	    MOVZBL  3(R2), -(SP)					      ;
		         7E	0000G  CF  9A 002B4 	    MOVZBL  LNK$GB_PASS, -(SP)					      ;
		         7E	       5A  9A 002B9 	    MOVZBL  R10, -(SP)						      ;
		         7E	  00G  8F  9A 002BC 	    MOVZBL  #ERM$C_REDERR, -(SP)				      ;
		         69	       05  FB 002C0 	    CALLS   #5, LNK$ERRMSG					      ;
		  0000V  CF	       00  FB 002C3 	    CALLS   #0, LNK$CLOSCURFIL					      ; 0873
				       53  DD 002C8 	    PUSHL   READERROR						      ; 0874
	   7E	         6B	       0B  C1 002CA 	    ADDL3   #11, LNK$GL_CURFIL, -(SP)				      ; 0875
		         7E	       5A  9A 002CE 	    MOVZBL  R10, -(SP)						      ; 0874
		         7E	  00G  8F  9A 002D1 	    MOVZBL  #ERM$C_UNMCOD, -(SP)				      ;
		         69	       04  FB 002D5 	    CALLS   #4, LNK$ERRMSG					      ;
				  C8   AB  DD 002D8 	    PUSHL   LNK$AL_RAB+12					      ; 0877
		         7E	       00  9A 002DB 	    MOVZBL  #SEV$C_FATAL, -(SP)					      ;
	   7E	         53	       07  CB 002DE 	    BICL3   #7, READERROR, -(SP)				      ;
		         69	       03  FB 002E2 	    CALLS   #3, LNK$ERRMSG					      ;
				  B8   AB  D6 002E5 1$:     INCL    LNK$GL_OBJRECS					      ; 0882
		    08   BC	  DE   AB  B0 002E8 	    MOVW    LNK$AL_RAB+34, @RECLNG				      ; 0883
		    04   BC	  E4   AB  D0 002ED 	    MOVL    LNK$AL_RAB+40, @RECADRS				      ; 0884
		         50	       01  D0 002F2 	    MOVL    #1, R0						      ; 0885
					   04 002F5 	    RET     							      ;
				       50  D4 002F6 2$:     CLRL    R0							      ; 0850
					   04 002F8 	    RET     							      ;

; Routine Size:  120 bytes


;32500  0887	GLOBAL ROUTINE LNK$POINTOBJ(MODRFA) : NOVALUE =
;32600  0888	BEGIN
;32700  0889	!
;32800  0890	!++
;32900  0891	!
;33000  0892	!	THIS ROUTINE IS CALLED DURING LIBRARY OR SHAREABLE IMAGE FILE READING TO POINT TO
;33100  0893	!	THE REQUIRED PARTITION IN THE FILE GIVEN BY ITS RFA.
;33200  0894	!	FOR A LIBRARY THE NEXT GET WILL READ THE LIBRARY MODULE'S HEADER RECORD.
;33300  0895	!	FOR A SHAREABLE IMAGE FILE MERELY DO A FIND BY RFA SO THAT NO RECORD IS
;33400  0896	!	SKIPPED. I.E. NEXT GET GETS RECORD POINTED TO.
;33500  0897	!
;33600  0898	MAP MODRFA : REF BLOCK[,BYTE];				! POINTER TO RFA BLOCK

; Bliss-32 7.352	Saturday 22-AUG-1978 04:52:45	DBB3:[LINKER.SRC]LNKOBJFIL.B32;6				Page 2-12
; Digital Equipment Corporation
;
;33700  0899	!
;33800  0900	LOCAL
;33900  0901		LIBMODHDR : REF BLOCK[,BYTE],			! POINTER TO LIBRARY MODULE HEADER
;34000  0902		RECLNG;						! LENGTH OF RECORD
;34100  0903	!
;34200  0904	BIND AUXFNB = LNK$GL_CURFIL[FDB$AL_AUXFNB]		! REFERENCE THE AUXILIARY FILE NAME BLOCK PART
;34300  0905				: BLOCK[NAM$C_BLN,BYTE];	!
;34400  0906	!
;34500  0907	LNK$AL_RAB[RAB$B_RAC] = RAB$C_RFA;			! SET TO GET BY RFA
;34600  0908	LNK$AL_RAB[RAB$L_RFA0] = .MODRFA[MODVBN];		! SET VBN PART OF RFA
;34700  0909	LNK$AL_RAB[RAB$W_RFA4] = .MODRFA[MODBYTE];		! AND BYTE OFFSET PART
;34800  0910	IF NOT(	IF (.LNK$GL_CURFIL[FDB$B_FILFLGS] AND LNK$M_LIBR) EQL 0	! IF NOT A LIBRARY FILE
;34900  0911		THEN $FIND(RAB=LNK$AL_RAB)				! JUST CHECK FOR SUCCESS ON FIND
;35000  0912		ELSE	(IF LNK$NXTREC(LIBMODHDR,RECLNG)		! GO GET THE FIRST RECORD OF MODULE
;35100  0913			AND .RECLNG<0,16,0> EQL LMH$C_SIZE		! AND CHECK CORRECT ONE
;35200  0914			THEN BEGIN
;35300  0915				IF (.LIBMODHDR[LMH$B_MODATR] AND LMH$M_SELSER)	! FIRST RECORD OF A LIBRARY MODULE
;35400  0916					NEQ 0					! HAS MODULE ATTRIBUTES SO
;35500  0917				THEN LNK$GL_CURFIL[FDB$B_FILFLGS] =		! REFLECT THE SELECTIVE SEARCH
;35600  0918					.LNK$GL_CURFIL[FDB$B_FILFLGS] OR	! ATTRIBUTE FROM MODULE HEADER TO
;35700  0919						LNK$M_SELSER			! FILE FLAGS
;35800  0920				ELSE LNK$GL_CURFIL[FDB$B_FILFLGS] =		! 
;35900  0921					.LNK$GL_CURFIL[FDB$B_FILFLGS]	!
;36000  0922					AND NOT LNK$M_SELSER;		!
;36100  0923				TRUE
;36200  0924			     END
;36300  0925			ELSE FALSE))
;36400  0926	THEN BEGIN							! IF THE FIRST RECORD WAS END OF FILE OR
;36500  0927		LNK$ERRMSG(ERM$C_LIBFIND,SEV$C_INFOR,.MODRFA[MODVBN],	! IT WAS NOT THE CORRECT LENGTH
;36600  0928				.MODRFA[MODBYTE]);			! FOR THE HEADER RECORD OF A 
;36610  0929		IF .LNK$AL_RAB[RAB$L_STS] NEQ RMS$_NORMAL
;36620  0930		THEN LNK$ERRMSG(.LNK$AL_RAB[RAB$L_STS] AND NOT 7,
;36630  0931				SEV$C_INFOR,.LNK$AL_RAB[RAB$L_STV]);
;36700  0932		LNK$ERRMSG(ERM$C_FORMAT,SEV$C_FATAL,LNK$GL_CURFIL[FDB$Q_USRNAMDSC]);	! LIBRARY FILE, ISSUE ERROR
;36800  0933	     END;									! AND GIVE UP
;36900  0934	LNK$AL_RAB[RAB$B_RAC] = RAB$C_SEQ;		! RESET FOR NORMAL SEQUENTIAL READS.
;37000  0935	RETURN;						! AND ALL SET
;37100  0936	END;



							    .GLOBL  SYS$FIND

					 0E04 002F9 	    .ENTRY  LNK$POINTOBJ, Save R2,R9,R10,R11			      ; 0887
		         59	0000G  CF  9E 002FB 	    MOVAB   LNK$ERRMSG, R9					      ;
		         5A	       00  D0 00300 	    MOVL    #SEV$C_INFOR, R10					      ;
		         5B	0000'  CF  9E 00303 	    MOVAB   LNK$GL_CURFIL, R11					      ;
		         5E	       08  C2 00308 	    SUBL2   #8, SP						      ;
		         50	       6B  D0 0030B 	    MOVL    LNK$GL_CURFIL, R0					      ; 0904
	   51	         50	       13  C1 0030E 	    ADDL3   #19, R0, R1						      ;
		    DA   AB	       02  90 00312 	    MOVB    #2, LNK$AL_RAB+30					      ; 0907
		         52	  04   AC  D0 00316 	    MOVL    MODRFA, R2						      ; 0908
		    CC   AB	       62  D0 0031A 	    MOVL    (R2), LNK$AL_RAB+16					      ;
		    D0   AB	  04   A2  B0 0031E 	    MOVW    4(R2), LNK$AL_RAB+20				      ; 0909
	   0F	    0A   A0	       01  E0 00323 	    BBS     #1, 10(R0), 1$					      ; 0910

; Bliss-32 7.352	Saturday 22-AUG-1978 04:52:45	DBB3:[LINKER.SRC]LNKOBJFIL.B32;6				Page 2-13
; Digital Equipment Corporation
;
				  BC   AB  9F 00328 	    PUSHAB  LNK$AL_RAB						      ; 0911
	      00000000G  9F	       01  FB 0032B 	    CALLS   #1, @#SYS$FIND					      ;
		         2B	       50  E9 00332 	    BLBC    R0, 3$						      ;
				       5F  11 00335 	    BRB     5$							      ;
				  04   AE  9F 00337 1$:     PUSHAB  RECLNG						      ; 0912
				  04   AE  9F 0033A 	    PUSHAB  LIBMODHDR						      ;
		  FF3F   CF	       02  FB 0033D 	    CALLS   #2, LNK$NXTREC					      ;
		         1B	       50  E9 00342 	    BLBC    R0, 3$						      ;
		         1C	  04   AE  B1 00345 	    CMPW    RECLNG, #28						      ; 0913
				       15  12 00349 	    BNEQ    3$							      ;
	   50	         6B	       0A  C1 0034B 	    ADDL3   #10, LNK$GL_CURFIL, R0				      ; 0917
		         51	       6E  D0 0034F 	    MOVL    LIBMODHDR, R1					      ; 0915
		         05	  01   A1  E9 00352 	    BLBC    1(R1), 2$						      ;
		         60	       08  88 00356 	    BISB2   #8, (R0)						      ; 0918
				       3B  11 00359 	    BRB     5$							      ; 0915
		         60	       08  8A 0035B 2$:     BICB2   #8, (R0)						      ; 0922
				       36  11 0035E 	    BRB     5$							      ; 0887
		         7E	  04   A2  3C 00360 3$:     MOVZWL  4(R2), -(SP)					      ; 0927
				       62  DD 00364 	    PUSHL   (R2)						      ;
		         7E	       5A  9A 00366 	    MOVZBL  R10, -(SP)						      ;
		         7E	  00G  8F  9A 00369 	    MOVZBL  #ERM$C_LIBFIND, -(SP)				      ;
		         69	       04  FB 0036D 	    CALLS   #4, LNK$ERRMSG					      ;
	      00010001   8F	  C4   AB  D1 00370 	    CMPL    LNK$AL_RAB+8, #65537				      ; 0929
				       0E  13 00378 	    BEQL    4$							      ;
				  C8   AB  DD 0037A 	    PUSHL   LNK$AL_RAB+12					      ; 0930
		         7E	       5A  9A 0037D 	    MOVZBL  R10, -(SP)						      ;
	   7E	    C4   AB	       07  CB 00380 	    BICL3   #7, LNK$AL_RAB+8, -(SP)				      ;
		         69	       03  FB 00385 	    CALLS   #3, LNK$ERRMSG					      ;
	   7E	         6B	       0B  C1 00388 4$:     ADDL3   #11, LNK$GL_CURFIL, -(SP)				      ; 0932
		         7E	       00  9A 0038C 	    MOVZBL  #SEV$C_FATAL, -(SP)					      ;
		         7E	  00G  8F  9A 0038F 	    MOVZBL  #ERM$C_FORMAT, -(SP)				      ;
		         69	       03  FB 00393 	    CALLS   #3, LNK$ERRMSG					      ;
				  DA   AB  94 00396 5$:     CLRB    LNK$AL_RAB+30					      ; 0934
					   04 00399 	    RET     							      ; 0887

; Routine Size:  161 bytes


;37200  0937	GLOBAL ROUTINE LNK$CLOSCURFIL : NOVALUE =
;37300  0938	BEGIN
;37400  0939	!
;37500  0940	!	THIS ROUTINE IS CALLED TO CLOSE THE CURRENTLY OPEN
;37600  0941	!	OBJECT MODULE FILE IF ANY.
;37700  0942	!
;37800  0943	!	INPUT_IFI IS USED AS THE DETERMINANT OF WHETHER A FILE IS
;37900  0944	!	CURRENTLY OPEN AND IS CLEARED WHEN DONE.
;38000  0945	!
;38100  0946	LOCAL
;38200  0947		INPUT_FAB : BLOCK[FAB$C_BLN,BYTE],	! FAB FOR THE CLOSE
;38300  0948		CLOSERROR;				! RMS ERROR CODE
;38400  0949	!
;38500  0950	BIND AUXFNB = LNK$GL_CURFIL[FDB$AL_AUXFNB]	! REFERENCE THE AUXILIARY FILE NAME BLOCK PART
;38600  0951				: BLOCK[NAM$C_BLN,BYTE];!
;38700  0952	!
;38800  0953	IF .INPUT_IFI NEQ 0				! IF THERE IS A FILE OPEN

; Bliss-32 7.352	Saturday 22-AUG-1978 04:52:45	DBB3:[LINKER.SRC]LNKOBJFIL.B32;6				Page 2-14
; Digital Equipment Corporation
;
;38900  0954	THEN BEGIN
;39000  0955		CH$FILL(0,FAB$C_BLN,INPUT_FAB);		! CLEAR A FAB
;39100  0956		INPUT_FAB[FAB$B_BLN] = FAB$C_BLN;	! IDENTIFY IT TO RMS
;39200  0957		INPUT_FAB[FAB$B_BID] = FAB$C_BID;	!
;39300  0958		INPUT_FAB[FAB$W_IFI] = .INPUT_IFI;	! SET THE FILE ID
;39400  0959		AUXFNB[NAM$B_RSS] = 0;			! ENSURE RMS DOES NOT ZERO
;39500  0960		AUXFNB[NAM$B_ESS] = 0;			! THE RESULTANT AND EXPANDED NAMES
;39600  0961		IF NOT(CLOSERROR = $CLOSE(FAB=INPUT_FAB))	! ATTEMPT THE CLOSE
;39610  0962		THEN BEGIN
;39700  0963			LNK$ERRMSG(ERM$C_CLOSERR,SEV$C_DIAG,	! ISSUING AN ERROR MESSAGE
;39800  0964			.AUXFNB[NAM$B_RSL],.AUXFNB[NAM$L_RSA],	! IF IT FAILS
;39900  0965			.CLOSERROR);			!
;39910  0966			LNK$ERRMSG(.CLOSERROR AND NOT 7,SEV$C_DIAG,
;39920  0967				.INPUT_FAB[FAB$L_STV]);
;39930  0968		     END;
;40000  0969		INPUT_IFI = 0;				! CLEAR THE IDENTIFIER
;40100  0970	     END;
;40200  0971	RETURN;
;40300  0972	END;



							    .GLOBL  SYS$CLOSE

					 0C7C 0039A 	    .ENTRY  LNK$CLOSCURFIL, Save R2,R3,R4,R5,R6,R10,R11		      ; 0937
		         5A	0000'  CF  9E 0039C 	    MOVAB   INPUT_IFI, R10					      ;
		         5B	       00  D0 003A1 	    MOVL    #SEV$C_DIAG, R11					      ;
		         5E	  B0   AE  9E 003A4 	    MOVAB   -80(SP), SP						      ;
	   56	  0000'  CF	       13  C1 003A8 	    ADDL3   #19, LNK$GL_CURFIL, R6				      ; 0950
				       6A  B5 003AE 	    TSTW    INPUT_IFI						      ; 0953
				       4C  13 003B0 	    BEQL    2$							      ;
	   00	         6E	       00  2C 003B2 	    MOVC5   #0, (SP), #0, #80, INPUT_FAB			      ; 0955
		         6E	0050   8F     003B6									      ;
		         6E	5003   8F  B0 003BA 	    MOVW    #20483, INPUT_FAB					      ; 0957
		    02   AE	       6A  B0 003BF 	    MOVW    INPUT_IFI, INPUT_FAB+2				      ; 0958
				  02   A6  94 003C3 	    CLRB    2(R6)						      ; 0959
				  0A   A6  94 003C6 	    CLRB    10(R6)						      ; 0960
				       5E  DD 003C9 	    PUSHL   SP							      ; 0961
	      00000000G  9F	       01  FB 003CB 	    CALLS   #1, @#SYS$CLOSE					      ;
		         52	       50  D0 003D2 	    MOVL    R0, CLOSERROR					      ;
		         24	       52  E8 003D5 	    BLBS    CLOSERROR, 1$					      ;
				       52  DD 003D8 	    PUSHL   CLOSERROR						      ; 0963
				  04   A6  DD 003DA 	    PUSHL   4(R6)						      ;
		         7E	  03   A6  9A 003DD 	    MOVZBL  3(R6), -(SP)					      ;
		         7E	       5B  9A 003E1 	    MOVZBL  R11, -(SP)						      ;
		         7E	  00G  8F  9A 003E4 	    MOVZBL  #ERM$C_CLOSERR, -(SP)				      ;
		  0000G  CF	       05  FB 003E8 	    CALLS   #5, LNK$ERRMSG					      ;
				  0C   AE  DD 003ED 	    PUSHL   INPUT_FAB+12					      ; 0966
		         7E	       5B  9A 003F0 	    MOVZBL  R11, -(SP)						      ;
	   7E	         52	       07  CB 003F3 	    BICL3   #7, CLOSERROR, -(SP)				      ;
		  0000G  CF	       03  FB 003F7 	    CALLS   #3, LNK$ERRMSG					      ;
				       6A  B4 003FC 1$:     CLRW    INPUT_IFI						      ; 0969
					   04 003FE 2$:     RET     							      ; 0937

; Routine Size:  101 bytes

; Bliss-32 7.352	Saturday 22-AUG-1978 04:52:45	DBB3:[LINKER.SRC]LNKOBJFIL.B32;6				Page 2-15
; Digital Equipment Corporation
;


;40400  0973	END ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $GLOBAL$       	    76    WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $PLIT$         	    48  NOWRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $OWN$          	    30    WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $CODE$         	  1023  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]STARLET.L32;1		      2688        55         2       153





; Size:		1023 code + 154 data bytes
; Run Time:	00:44.2
; Elapsed Time:	00:47.6
; Memory Used:	336 pages
; Compilation Complete
