
; Bliss-32 7.352	Saturday 22-AUG-1978 05:03:00	DBB3:[LINKER.SRC]LNKSYMTBL.B32;4				Page 1
; Digital Equipment Corporation
;
;00100  0001	MODULE LNK_SYMSERINS (IDENT='X01.04',OPTLEVEL=3) =
;00200  0002	
;00300  0003	BEGIN
;00400  0004	!
;00500  0005	!
;00600  0006	! Copyright (C) 1976, 1977, 1978
;00700  0007	! Digital Equipment Corporation,  Maynard, Massachusetts  01754
;00800  0008	!
;00900  0009	! This software is furnished under a license for use only on  a
;01000  0010	! single computer system and may be copied only with the inclu-
;01100  0011	! sion of the above copyright notice.  This  software,  or  any
;01200  0012	! other  copies  thereof, may not be provided or otherwise made
;01300  0013	! available to any other person except for use on  such  system
;01400  0014	! and  to  one who agrees to these license terms.  Title to and
;01500  0015	! ownership of the software shall at all times remain in DEC.
;01600  0016	!
;01700  0017	! The information in this software is subject to change without
;01800  0018	! notice and should not be construed as a commitment by Digital
;01900  0019	! Equipment Corporation.
;02000  0020	!
;02100  0021	! DEC assumes no responsibility for the use or  reliability  of
;02200  0022	! its software on equipment which is not supplied by DEC.
;02300  0023	!
;02400  0024	!
;02500  0025	!
;02600  0026	!
;02700  0027	!
;02800  0028	!++
;02900  0029	!
;03000  0030	! MODULE: LNK_SYMSERINS
;03100  0031	!
;03200  0032	! FACILITY: LINKER
;03300  0033	!
;03400  0034	! ABSTRACT: SYMBOL TABLE SEARCH AND INSERT
;03500  0035	!
;03600  0036	! HISTORY:
;03700  0037	!
;03800  0038	!	VERSION: X01.00
;03900  0039	!
;04000  0040	!	AUTHOR: T.J. PORTER 18-FEB-77
;04100  0041	!
;04200  0042	!	MODIFICATIONS:
;04300  0043	!
;04400  0044	! NO.	DATE		PROGRAMMER	PURPOSE
;04500  0045	! ---	----		----------	-------
;04600  0046	! 001	28-DEC-77	T.J. PORTER	REMOVE BUG CHECK ON SEARCH
;04700  0047	! 002	03-JAN-78	T.J. PORTER	SPEED OPTIMIZATIONS
;04800  0048	! 003	21-APR-78	T.J. PORTER	REQUIRE FILE CLEAN UP
;04810  0049	! 004	08-MAY-78	T.J. PORTER	INITIALLY SET ARG. VAL. DATA POINTER TO ZERO
;04900  0050	!--

; Bliss-32 7.352	Saturday 22-AUG-1978 05:03:00	DBB3:[LINKER.SRC]LNKSYMTBL.B32;4				Page 2
; Digital Equipment Corporation
;
;05000  0051	     
;05100  0052	!
;05200  0053	!++
;05300  0054	!
;05400  0055	! FUNCTIONAL DESCRIPTION:
;05500  0056	!
;05600  0057	!	THIS MODULE CONTAINS THE SYMBOL TABLE SEARCH AND INSERT
;05700  0058	!	ROUTINES. THE SYMBOL TABLE IS A HASH
;05800  0059	!	TABLE USING A CHAIN OF ALTERNATES WHEN COLLOSIONS OCCUR.
;05900  0060	!	THE TABLE CONSISTS OF SYM$C_TBLSIZ CONTIGUOUS DESCRIPTORS
;06000  0061	!	EACH DESCRIPTOR CONTAINS A POINTER WHICH IS THE HEAD OF 
;06100  0062	!	A SINGLY LINKED LIST, USED IF A COLLISION OCCURS ON
;06200  0063	!	THAT ENTRY. MULTIPLE COLLISIONS ARE INSERTED IN THIS LIST,
;06300  0064	!	THE LAST HAVING A ZERO POINTER.
;06400  0065	!	THE COLLISION LIST ENTRIES ARE ALLOCATED (BY INSERT) FROM
;06500  0066	!	DYNAMIC MEMORY.
;06600  0067	!
;06700  0068	!	THE CALLING SEQUENCES ARE:
;06800  0069	!		LNK$SEARCH (TARGSYMBOL, DESCRADR)
;06900  0070	!		LNK$INSERT (TARGSYMBOL, DESCRADR)
;07000  0071	!	WHERE:	TARGSYMBOL IS THE ADDRESS OF AN ASCII STRING TO
;07100  0072	!			BE FOUND OR INSERTED.
;07200  0073	!
;07300  0074	!		DESCRADR IS THE ADDRESS OF CELL TO STORE THE ADDRESS
;07400  0075	!		OF A FOUND ENTRY OR ADDRESS OF AN INSERTED ENTRY.
;07500  0076	!
;07600  0077	!	SEARCH HAS THE VALUE TRUE IF THE SYMBOL WAS FOUND,
;07700  0078	!	FALSE IF NOT.
;07800  0079	!
;07900  0080	!	CALLS TO INSERT MUST BE PRECEDED BY AN UNSUCCESSFUL
;08000  0081	!	SEARCH CALL, IN THIS CASE INFORMATION IS
;08100  0082	!	RECORDED TO OBVIATE ANOTHER SEARCH AND 
;08200  0083	!	DESCRADR IS RETURNED WITH THE ADDRESS OF THE DESCRIPTOR
;08300  0084	!	WHICH HAS THE STRING COPIED INTO IT.
;08400  0085	!
;08500  0086	!	HASH VALUE H = SUM OF CHARACTERS, DIVIDED BY THE TABLE SIZE.
;08600  0087	!
;08700  0088	!--
;08800  0089	!
;08900  0090	REQUIRE
;09000  0091		'PREFIX';		! GET GENERAL DEFINITIONS
;09100  0283	REQUIRE
;09200  0284		'SYMFMT';		! GET SYMBOL TABLE DEFINITIONS
;09300  0369	EXTERNAL ROUTINE
;09400  0370		LNK$ALLOBLK;				! DYNAMIC MEMORY ALLOCATOR
;09500  0371	OWN
;09600  0372		SYMENTRY : REF BLOCK[SYM$C_SIZE,BYTE];			! CURRENT SYMBOL ENTRY
;09700  0373	GLOBAL
;09800  0374		SYM$GL_HASHTBL : REF BLOCKVECTOR[SYM$C_TBLSIZ,SYM$C_SIZE,BYTE];	! THE HASH TABLE FOR SYMBOLS
;09900  0375	!
;10000  0376	GLOBAL ROUTINE LNK$SEARCH (TARGSYMBOL, DESCRADR) =
;10100  0377	!
;10200  0378	BEGIN
;10300  0379	!
;10400  0380	!	TARGSYMBOL IS ADDRESS OF AN ASCIC STRING 

; Bliss-32 7.352	Saturday 22-AUG-1978 05:03:00	DBB3:[LINKER.SRC]LNKSYMTBL.B32;4				Page 2-1
; Digital Equipment Corporation
;
;10500  0381	!	DESCRADR IS ADDRESS OF CELL TO RECEIVE THE ENTRY
;10600  0382	!	ADDRESS IF SYMBOL IS IN TABLE
;10700  0383	!
;10800  0384	MAP
;10900  0385		TARGSYMBOL : REF VECTOR[,BYTE];
;11000  0386	!
;11100  0387	LOCAL
;11200  0388		POINTER,
;11300  0389		HASHINDEX;
;11400  0390	!
;11500  0391	!	COMPUTE THE HASH INDEX AND GET ENTRY ADDRESS
;11600  0392	!
;11700  0393	HASHINDEX = 0;						! INITIALIZE THE HASH VALUE
;11800  0394	POINTER = TARGSYMBOL[0];				! SET CHARACTER POINTER TO INCLUDE STRING LENGTH
;11900  0395	INCR I TO .TARGSYMBOL[0]				! LOOP COUNT INCLUDES STRING LENGTH
;12000  0396	DO HASHINDEX = .HASHINDEX + CH$RCHAR_A(POINTER);	! SUM THE CHARACTERS OF STRING
;12100  0397	HASHINDEX = .HASHINDEX MOD SYM$C_TBLSIZ;		! THEN TAKE MODULO TABLE SIZE
;12200  0398	SYMENTRY = SYM$GL_HASHTBL[.HASHINDEX,SYM$C_START];	! POINT TO THE ENTRY
;12300  0399	IF .SYMENTRY[SYM$B_NAMLNG] EQL 0			! AND IF THERE IS NOTHING
;12400  0400	THEN RETURN FALSE;					! THERE, RETURN FAILURE
;12500  0401	!
;12600  0402	!	NOW COMPARE THE SYMBOL IN THE
;12700  0403	!	ENTRY FOR A MATCH. IF IT MATCHES RETURN ENTRY
;12800  0404	!	ADDRESS AND SUCCESS CONDITION.
;12900  0405	!	IF IT DOES NOT MATCH SEARCH DOWN THE COLLISION
;13000  0406	!	LIST UNTIL:
;13100  0407	!	1.	FIND A MATCH - RETURN THE ADDRESS OF MATCHED
;13200  0408	!		ENTRY AND SUCCESS
;13300  0409	!	2.	REACH END OF LIST. SAVE ADDRESS OF LAST
;13400  0410	!		ENTRY IN LIST FOR POSSIBLE SUBSEQUENT
;13500  0411	!		INSERT AND RETURN FAILURE.
;13600  0412	!
;13700  0413	DO IF CH$EQL(.TARGSYMBOL[0], TARGSYMBOL[1],		! COMPARE SYMBOLS
;13800  0414			.SYMENTRY[SYM$B_NAMLNG], SYMENTRY[SYM$T_NAME])
;13900  0415		THEN BEGIN					! SYMBOL MATCHES
;14000  0416			.DESCRADR = .SYMENTRY;			! SO SET ITS ADDRESS FOR CALLER
;14100  0417			RETURN TRUE;				! AND RETURN SUCCESS
;14200  0418		     END
;14300  0419	UNTIL IF .SYMENTRY [SYM$L_COLIST] EQL 0			! ANY MORE IN
;14400  0420		THEN TRUE					! COLLISION LIST - EXIT IF NO
;14500  0421		ELSE (SYMENTRY = .SYMENTRY [SYM$L_COLIST];	! IF SO GET NEXT
;14600  0422		      FALSE);					! AND CONTINUE SEARCH UNTIL
;14700  0423						! END OF THE COLLISION LIST.
;14800  0424	RETURN FALSE;				! THE LAST ENTRY EXAMINED
;14900  0425						! IS PRESERVED IN SYMENTRY.
;15000  0426	END;				! END OF SEARCH ROUTINE


							    .TITLE  LNK_SYMSERINS
							    .IDENT  \X01.04\

							    .PSECT  $OWN$,NOEXE,2

					      00000 SYMENTRY:
							    .BLKB   4

; Bliss-32 7.352	Saturday 22-AUG-1978 05:03:00	DBB3:[LINKER.SRC]LNKSYMTBL.B32;4				Page 2-2
; Digital Equipment Corporation
;

							    .PSECT  $GLOBAL$,NOEXE,2

					      00000 SYM$GL_HASHTBL::
							    .BLKB   4

						    SYM$C_MAXLNG==	15
						    SYM$C_TBLSIZ==	128
						    SYM$C_SIZE==	42
							    .GLOBL  LNK$ALLOBLK

							    .PSECT  $CODE$,NOWRT,2

					 083C 00000 	    .ENTRY  LNK$SEARCH, Save R2,R3,R4,R5,R11			      ; 0376
		         5B	0000'  CF  9E 00002 	    MOVAB   SYMENTRY, R11					      ;
				       50  D4 00007 	    CLRL    HASHINDEX						      ; 0393
		         52	  04   AC  D0 00009 	    MOVL    TARGSYMBOL, POINTER					      ; 0394
		         53	  04   BC  9A 0000D 	    MOVZBL  @TARGSYMBOL, R3					      ; 0395
		         51	       01  CE 00011 	    MNEGL   #1, I						      ;
				       06  11 00014 	    BRB     2$							      ;
		         54	       82  9A 00016 1$:     MOVZBL  (POINTER)+, R4					      ; 0396
		         50	       54  C0 00019 	    ADDL2   R4, HASHINDEX					      ;
	   F6	         51	       53  F3 0001C 2$:     AOBLEQ  R3, I, 1$						      ; 0395
	   00	         50	       01  7A 00020 	    EMUL    #1, HASHINDEX, #0, -(SP)				      ; 0397
				       7E     00024									      ;
	   50	         8E 00000080   8F  7B 00025 	    EDIV    #128, (SP)+, HASHINDEX, HASHINDEX			      ;
				       50     0002D									      ;
		         50	       2A  C4 0002E 	    MULL2   #42, R0						      ; 0398
	   6B	         50	0000'  CF  C1 00031 	    ADDL3   SYM$GL_HASHTBL, R0, SYMENTRY			      ;
		         50	       6B  D0 00037 	    MOVL    SYMENTRY, R0					      ; 0399
				  08   A0  95 0003A 	    TSTB    8(R0)						      ;
				       2C  13 0003D 	    BEQL    5$							      ;
	   55	    04   AC	       01  C1 0003F 	    ADDL3   #1, TARGSYMBOL, R5					      ; 0413
		         51	  04   BC  9A 00044 3$:     MOVZBL  @TARGSYMBOL, R1					      ;
		         54	       6B  D0 00048 	    MOVL    SYMENTRY, R4					      ; 0414
		         50	  08   A4  9A 0004B 	    MOVZBL  8(R4), R0						      ;
	   00	         65	       51  2D 0004F 	    CMPC5   R1, (R5), #0, R0, 9(R4)				      ; 0413
		    09   A4	       50     00053									      ;
				       08  12 00056 	    BNEQ    4$							      ;
		    08   BC	       54  D0 00058 	    MOVL    R4, @DESCRADR					      ; 0416
		         50	       01  D0 0005C 	    MOVL    #1, R0						      ; 0417
					   04 0005F 	    RET     							      ;
				  18   A4  D5 00060 4$:     TSTL    24(R4)						      ; 0419
				       06  13 00063 	    BEQL    5$							      ;
		         6B	  18   A4  D0 00065 	    MOVL    24(R4), SYMENTRY					      ; 0421
				       D9  11 00069 	    BRB     3$							      ; 0376
				       50  D4 0006B 5$:     CLRL    R0							      ;
					   04 0006D 	    RET     							      ;

; Routine Size:  110 bytes


;15100  0427	GLOBAL ROUTINE LNK$INSERT(TARGSYMBOL, DESCRADR) : NOVALUE =
;15200  0428	BEGIN
;15300  0429	!

; Bliss-32 7.352	Saturday 22-AUG-1978 05:03:00	DBB3:[LINKER.SRC]LNKSYMTBL.B32;4				Page 2-3
; Digital Equipment Corporation
;
;15400  0430	!	TARGSYMBOL IS ADDRESS OF AN ASCIC STRING, AN ENTRY
;15500  0431	!	FOR WHICH IS TO BE INSERTED IN THE SYMBOL TABLE. THE
;15600  0432	!	ADDRESS OF THIS ENTRY IS TO BE RETURNED IN THE CELL
;15700  0433	!	DESCRADR. THIS ROUTINE REQUIRES THAT AN UNSUCCESSFUL CALL
;15800  0434	!	ON SEARCH PRECEEDED IT AND SAVED THE ADDRESS OF THE 
;15900  0435	!	LAST ENTRY EXAMINED.
;16000  0436	!
;16100  0437	MAP
;16200  0438		TARGSYMBOL : REF VECTOR[, BYTE];
;16300  0439	LOCAL
;16400  0440		NEWENTRY : REF BLOCK [SYM$C_SIZE,BYTE];
;16500  0441	!
;16600  0442	IF .SYMENTRY [SYM$B_NAMLNG]NEQ 0
;16700  0443		THEN BEGIN					! ENTRY IS IN USE
;16800  0444			LNK$ALLOBLK(SYM$C_SIZE, NEWENTRY);	! OK, SO GO
;16900  0445								! ALLOCATE A 
;17000  0446								! DESCRIPTOR
;17100  0447			SYMENTRY[SYM$L_COLIST]= .NEWENTRY;	! LINK IT ON TO COLLISION LIST
;17200  0448			NEWENTRY[SYM$L_COLIST] = 0;		! NEW ONE POINTS NOWHERE
;17300  0449			SYMENTRY = .NEWENTRY;			! AND REPLACE OLD POINTER
;17400  0450			END;
;17500  0451	!
;17600  0452	!	HAVE AN EMPTY DESCRIPTOR - COPY IN THE SYMBOL
;17700  0453	!	STRING
;17800  0454	!
;17900  0455	SYMENTRY[SYM$B_NAMLNG] = .TARGSYMBOL[0];		! SET ITS LENGTH
;18000  0456	CH$COPY(.TARGSYMBOL[0], TARGSYMBOL[1],0,		! COPY IT IN ZERO FILLED
;18100  0457	         SYM$C_MAXLNG, SYMENTRY[SYM$T_NAME]);
;18110  0458	SYMENTRY[SYM$L_VALDATA] = 0;				! NO ARGUMENT VALIDATION DATA
;18200  0459	.DESCRADR = .SYMENTRY;					! RETURN ITS ADDRESS
;18300  0460	RETURN;						! AND THAT'S IT
;18400  0461	END;					! OF INSERT ROUTINE.





					 087C 0006E 	    .ENTRY  LNK$INSERT, Save R2,R3,R4,R5,R6,R11			      ; 0427
		         5B	0000'  CF  9E 00070 	    MOVAB   SYMENTRY, R11					      ;
		         5E	       04  C2 00075 	    SUBL2   #4, SP						      ;
		         50	       6B  D0 00078 	    MOVL    SYMENTRY, R0					      ; 0442
				  08   A0  95 0007B 	    TSTB    8(R0)						      ;
				       19  13 0007E 	    BEQL    1$							      ;
				       5E  DD 00080 	    PUSHL   SP							      ; 0444
				       2A  DD 00082 	    PUSHL   #42							      ;
		  0000G  CF	       02  FB 00084 	    CALLS   #2, LNK$ALLOBLK					      ;
		         51	       6B  D0 00089 	    MOVL    SYMENTRY, R1					      ; 0447
		         50	       6E  D0 0008C 	    MOVL    NEWENTRY, R0					      ;
		    18   A1	       50  D0 0008F 	    MOVL    R0, 24(R1)						      ;
				  18   A0  D4 00093 	    CLRL    24(R0)						      ; 0448
		         6B	       50  D0 00096 	    MOVL    R0, SYMENTRY					      ; 0449
		         56	       6B  D0 00099 1$:     MOVL    SYMENTRY, R6					      ; 0455
		         50	  04   AC  D0 0009C 	    MOVL    TARGSYMBOL, R0					      ;
		    08   A6	       60  90 000A0 	    MOVB    (R0), 8(R6)						      ;
		         51	       60  9A 000A4 	    MOVZBL  (R0), R1						      ; 0456

; Bliss-32 7.352	Saturday 22-AUG-1978 05:03:00	DBB3:[LINKER.SRC]LNKSYMTBL.B32;4				Page 2-4
; Digital Equipment Corporation
;
	   00	    01   A0	       51  2C 000A7 	    MOVC5   R1, 1(R0), #0, #15, 9(R6)				      ;
		    09   A6	       0F     000AC									      ;
				  26   A6  D4 000AF 	    CLRL    38(R6)						      ; 0458
		    08   BC	       56  D0 000B2 	    MOVL    R6, @DESCRADR					      ; 0459
					   04 000B6 	    RET     							      ; 0427

; Routine Size:  73 bytes


;18500  0462	END ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $OWN$          	     4    WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $GLOBAL$       	     4    WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $CODE$         	   183  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)





; Size:		183 code + 8 data bytes
; Run Time:	00:06.4
; Elapsed Time:	00:06.7
; Memory Used:	41 pages
; Compilation Complete
