!ERROR   created by TECO on  2/22/78   14:32
To obtain information about a particular error, type:
       HELP ERROR  error-id

(NOTE: For information about status codes, refer to the
description of the EXIT command.)
*FOR$_NOTFORSPE
1    NOT A FORTRAN-SPECIFIC ERROR             
 SEVERE          non continuable
 An error occurred in the user program or in the Run-Time
 Library which is not a FORTRAN-specific error
 such as an operating system or language-independent error.
*FOR$_REWERR
20   REWIND ERROR
 SEVERE          non continuable
 An error condition was detected by RMS during a REWIND
 operation used to position a file at its beginning.
*FOR$_DUPFILSPE
21   DUPLICATE FILE SPECIFICATIONS
 SEVERE         non continuable
 Multiple attempts were made to specify file attributes
 without an intervening close operation, by one of the
 following:
 1. DEFINE FILE followed by DEFINE FILE
 2. DEFINE FILE followed by an OPEN statement.
*FOR$_INPRECTOO
22   INPUT RECORD TOO LONG
 SEVERE         non continuable
 A record has been read by RMS which exceeds the explicit or
 default RECORDSIZE specification specified at OPEN (or
 default OPEN).
*FOR$_BACERR
23   BACKSPACE ERROR
 SEVERE         non continuable
 One of the following has occurred:
 1. BACKSPACE was attempted on a file opened for appending
 2. RMS has detected an error condition during an RMS_REWIND
 operation 
 3. RMS has detected an error condition while reading
 forward to the desired record.
*FOR$_ENDDURREA
24   END-OF-FILE DURING READ
 SEVERE         non continuable
 Either an end-of-file record produced by the ENDFILE
 statement or the RMS end-of-file condition has been
 encountered during a READ statement and no END= transfer
 specification was provided.
*FOR$_RECNUMOUT
25   RECORD NUMBER OUTSIDE RANGE
 SEVERE         non continuable
 A direct access READ, WRITE, or FIND statement specified
 a record number outside the range from one to the value
 specified in a DEFINE FILE statement or in the MAXREC keyword
 of the OPEN statement.
*FOR$_OPEDEFREQ
26   OPEN OR DEFINE FILE REQUIRED TO SPECIFY DIRECT ACCESS
 SEVERE         non continuable
 A direct access READ, WRITE or FIND operation was attempted
 before a DEFINE FILE or an OPEN statement with
 ACCESS='DIRECT' performed.
*FOR$_MORONEREC
27   MORE THAN ONE RECORD IN I/O STATEMENT
 SEVERE         non continuable
 An attempt was made to read or write more than a single
 record from/to a direct access formatted READ or WRITE
 statement, or an ENCODE or DECODE statement.
*FOR$_CLOERR
28   CLOSE ERROR
 SEVERE         non continuable
 An error condition has been detected by RMS during CLOSE, or
 DELETE operation while attempting to close the file.
*FOR$_FILNOTFOU
29   FILE NOT FOUND
 SEVERE         non continuable
 A file with the specified name could not be found during an
 open operation.
*FOR$_OPEFAI
30   OPEN FAILURE
 SEVERE         non continuable
 RMS has detected an error condition during an OPEN or CREATE
 operation.
*FOR$_MIXFILACC
31   MIXED FILE ACCESS MODES
 SEVERE         non continuable
 An attempt was made to use both formatted and unformatted
 operations, or both sequential and direct access operations,
 on the same unit.
*FOR$_INVLOGUNI
32   INVALID LOGICAL UNIT NUMBER
 SEVERE         non continuable
 A logical unit number greater than 99 or less than 1 was
 used.
*FOR$_ENDFILERR
33   ENDFILE ERROR
 SEVERE         non continuable
 An end-of-file record may not be written to a direct access
 file, to an unformatted sequential file that contains
 unsegmented records, or to a relative organization file.
*FOR$_UNIALROPE
34   UNIT ALREADY OPEN
 SEVERE         non continuable
 An OPEN statement or DEFINE FILE statement was attempted
 which specified a logical unit already opened for
 input/output.
*FOR$_SEGRECFOR
35   SEGMENTED RECORD FORMAT ERROR
 SEVERE         non continuable
 Invalid segmented record control data word was detected in
 an unformatted sequential file.
*FOR$_ATTREANON
36   ATTEMPT TO READ NON EXISTENT RECORD
 SEVERE         non continuable
 One of the following two conditions has occurred:
 (1). An attempt to read a non existent record from a
 relative organization file using direct access has been
 made.   Sequential access to a relative organization
 file will skip non existent records automatically with no
 error indicated.
 (2). An attempt has been made to read beyond the end-of-file
 with a direct-access read to a relative or sequential
 organization file.
*FOR$_INCRECLEN
37   INCONSISTENT RECORD LENGTH
 SEVERE         non continuable
 An existing direct access file was opened whose record
 length attribute is not the same as specified in the
 DEFINE FILE or OPEN statement.
*FOR$_ERRDURWRI
38   ERROR DURING WRITE
 SEVERE         non continuable
 RMS has detected an error condition on a PUT operation.
*FOR$_ERRDURREA
39   ERROR DURING READ
 SEVERE         non continuable
 RMS has detected an error condition on a GET operation.
*FOR$_RECIO_OPE
40   RECURSIVE I/O OPERATION
 SEVERE         non continuable
 While processing an I/O statement for a logical unit,
 another I/O operation on the same logical unit has been
 attempted. This can happen if: (1) a function that performs
 I/O to the same logical unit is referenced in an expression
 in an I/O list, (2) an I/O statement is executed at AST
 level for the same logical unit, or (3)
 an exception handler (or a procedure it calls) executes an
 I/O statement in response to a SIGNAL from an I/O statement
 for the same logical unit.
*FOR$_INSVIRMEM
41   INSUFFICIENT VIRTUAL MEMORY FOR BUFFER SPACE
 SEVERE         non continuable
 The FORTRAN I/O library attempted to exceed its virtual page
 limit while dynamically allocating space for an I/O
 statement.
*FOR$_NO_SUCDEV
42   NO SUCH DEVICE
 SEVERE         non continuable
 A file name specification has included an illegal or unknown
 device name when an open operation is attempted.
*FOR$_FILNAMSPE
43   FILE NAME SPECIFICATION ERROR
 SEVERE         non continuable
 The file name string used in an OPEN statement is
 syntactically invalid, is otherwise not acceptable to RMS on
 an OPEN or CREATE operation or has a zero length. Zero
 length can occur if single quotes were not used to
 delimit the file name string in the OPEN statement.
*FOR$_RECSPEERR
44   RECORDSIZE SPECIFICATION ERROR
 SEVERE         non continuable
 The RECORDSIZE value in an OPEN statement or the record size
 parameter in a DEFINE FILE statement is greater than 65535
 or is missing on a direct access OPEN.
*FOR$_KEYVALERR
45   KEYWORD VALUE ERROR IN OPEN STATEMENT
 SEVERE         non continuable
 An OPEN statement keyword that requires a value has an
 illegal value. The following values are accepted.
 
 A. INITIALSIZE: -2**31 to 2**31-1
 B. EXTENDSIZE: -32768 to 32767
 C. BLOCKSIZE: 0 to 2**32-1
 D. MAXREC: 0 to 2**32-1
 E. BUFFERCOUNT: 0 to 127
 
*FOR$_INCOPECLO
46   INCONSISTENT OPEN/CLOSE PARAMETERS
 SEVERE         non continuable
 The specifications in an OPEN and/or subsequent CLOSE
 statement have indicated one or more of the following:
 A. A 'NEW' or 'SCRATCH' file which is
 'READONLY'
 B. 'APPEND' to a 'NEW', 'SCRATCH', or
 'READONLY' file
 C. 'SAVE' or 'PRINT' on a 'SCRATCH' file
 D. 'DELETE' or 'PRINT' on a 'READONLY' file.
*FOR$_WRIREAFIL
47   WRITE TO READONLY FILE
 SEVERE         non continuable
 A write operation has been attempted to a file which was
 declared to be READONLY by currently active OPEN.
*FOR$_INVARGFOR
48   INVALID ARGUMENT TO FORTRAN RUN-TIME LIBRARY
 SEVERE         non continuable
 A coded argument is not one of the defined set of codes on a
 call to the FORTRAN Run-Time Library.
*FOR$_LISIO_SYN
59   LIST-DIRECTED I/O SYNTAX ERROR
 SEVERE         continuable
 The data in a list-directed input record has an illegal
 format or the type of the constant is incompatible with the
 corresponding variable. The value of the variable is
 unchanged.
*FOR$_INFFORLOO
60   INFINITE FORMAT LOOP
 SEVERE         non continuable
 The format associated with an I/O statement that includes an
 I/O list has no field descriptors to use in transferring
 those variables.
*FOR$_FORVARMIS
61   FORMAT/VARIABLE-TYPE MISMATCH
 SEVERE         continuable
 An attempt was made to read or write a real variable with
 an integer field descriptor (I, L, O, or Z), or an integer
 or logical variable with a real field descriptor (D, E, F,
 or G). If execution is continued, the following actions
 occur:
 Format 	  Direction	 Action
 I,L,O,Z 	  input	 	 convert as if integer and store 4 
 D,E,F,G 	  input 	 convert as if real and store first n 
 I,L,O,Z          output 	 convert as if integer and output
 D,E,F,G 	  output 	 convert as if real and output
*FOR$_SYNERRFOR
62   SYNTAX ERROR IN FORMAT
 SEVERE         non continuable
 A syntax error was encountered while the Run-Time Library
 was processing a format stored in an array or character
 variable.
*FOR$_OUTCONERR
63   OUTPUT CONVERSION ERROR
 ERROR          continuable
 During a formatted output operation the value of a
 particular number could not be output in the specified field
 length without loss of significant digits. The field is
 filled with *'s.
*FOR$_INPCONERR
64   INPUT CONVERSION ERROR
 SEVERE         continuable
 During a formatted input operation an illegal character was
 detected in an input field, or the input value overflowed the
 range representable in the input variable. The value of the
 variable is set to zero.
*FOR$_OUTSTAOVE
66   OUTPUT STATEMENT OVERFLOWS RECORD
 SEVERE         non continuable
 An output statement specified an I/O list that exceeds the
 maximum record size specified. For sequential access
 operations, the record size is specified by the RECORDSIZE
 keyword of the OPEN statement, or by the record length
 attribute of an existing file. For direct access operation,
 the record length is specified by the DEFINE FILE statement,
 the RECORDIZE keyword of the OPEN statement, or by the
 record length attribute of an existing file.
*FOR$_INPSTAREQ
67   INPUT STATEMENT REQUIRES TOO MUCH DATA
 SEVERE         non continuable
 An UNFORMATTED READ statement has attempted to read more
 data than existed in the record being read.
*FOR$_VFEVALERR
68   VARIABLE FORMAT EXPRESSION VALUE ERROR
 SEVERE         continuable
 The value of a variable format expression is not within the
 range acceptable for its intended use; for example, a field
 width is less than or equal to zero. A value of 1 is
 assumed except for P format, where a 0 is assumed.
*FOR$_ADJARRDIM
93   ADJUSTABLE ARRAY DIMENSION ERROR
 SEVERE          continuable
 Upon entry to a subprogram, the evaluation of
 dimensioning information has detected an array in
 which
 1. an upper dimension bound is less than a lower
 dimension bound, or
 2. the dimensions imply an array which exceeds the
 addressable memory.
*SS$_INTOVF
70   INTEGER OVERFLOW
 SEVERE continuable
 During an arithmetic operation an integer's value has
 exceeded byte, INTEGER*2 or INTEGER*4 range. The result of
 the operation is the correct low-order part.
*SS$_INTDIV
71   INTEGER ZERO DIVIDE
 SEVERE continuable
 During an integer mode arithmetic operation an attempt was
 made to divide by zero. The result is set to the dividend
 which is equivalent to division by 1. 
*SS$_FLTOVF
72   FLOATING OVERFLOW
 SEVERE continuable
 During an arithmetic operation a real or double precision
 value has exceeded the largest representable real number.
 The result of the operation is set to minus zero which is a
 reserved operand. 
*SS$_FLTDIV
73   FLOATING ZERO DIVIDE
 SEVERE continuable
 During a real or double precision arithmetic operation an
 attempt was made to divide by zero. The result of the
 operation is set to minus zero which is a reserved operand.
 During a decimal string operation, the
 divisor was 0. The result is set to UNPREDICTABLE.
*SS$_FLTUND
74   FLOATING UNDERFLOW
 SEVERE continuable
 During an arithmetic operation a real or double precision
 value has become less than the smallest representable real
 number, and has been replaced with a value of zero.
*SS$_SUBRNG
77   ARRAY REFERENCE OUTSIDE ARRAY
 SEVERE continuable
 An array reference has been detected outside the
 array described by the array declarator. Execution
 continues. 
*MTH$_WRONUMARG
80   WRONG NUMBER OF ARGUMENTS
 SEVERE non continuable
 A library procedure was called with an improper number of
 arguments.
*MTH$_INVARGMAT
81   INVALID ARGUMENT TO MATH LIBRARY
 SEVERE non continuable
 One of the mathematics procedures has detected an invalid
 argument value.
*MTH$_UNDEXP
82   UNDEFINED EXPONENTIATION
 SEVERE continuable
 An exponentiation has been attempted which is mathematically
 undefined; e.g., 0.**0. The result returned is the
 reserved operand: minus 0.0 for floating-point operations,
 and 0 for integer operations.
*MTH$_LOGZERNEG
83   LOGARITHM OF ZERO OR NEGATIVE VALUE
 SEVERE continuable
 An attempt was made to take the logarithm of zero or a
 negative number. The result returned is the reserved
 operand: minus zero.
*MTH$_SQUROONEG
84   SQUARE ROOT OF NEGATIVE VALUE
 SEVERE continuable
 An argument required the evaluation of the square root of a
 negative value. The result returned is the reserved
operand:  minus zero.
*MTH$_SINSIGLOS
87   SINE OR COSINE SIGNIFICANCE LOST
 SEVERE continuable
 The magnitude of an argument to SIN or COS was greater than
 2**31 or to DSIN or DCOS was greater than 2**63. 
 The result returned is the reserved operand: minus zero.
*MTH$_FLOOVEMAT
88   FLOATING OVERFLOW IN MATH LIBRARY
 SEVERE continuable
 An overflow condition was detected during execution of a
 Mathematical Library procedure. The result returned is the
 reserved operand: minus zero.
*MTH$_FLOUNDMAT
89   FLOATING UNDERFLOW IN MATH LIBRARY
 SEVERE continuable
 An underflow condition was detected during execution of a
 Mathematical Library procedure and the caller was enabled
 for floating underflow traps.
*OTS$_INTDATCOR
 INTERNAL DATA CORRUPTED IN RUN-TIME LIBRARY
 SEVERE    non continuable
 On a call to the Run-Time Library, a data base
 consistency check failed. A user program can cause
 this by referencing outside of a dimensioned array.
 Try recompiling with the /CHECK:BOUNDS switch to check
 all array references.
*OTS$_INVSTRDES
 INVALID STRING DESCRIPTOR
 SEVERE   non continuable
 A string descriptor passed to a language support
 procedure did not contain a valid DSC$B_CLASS field.
*OTS$_FATINTERR
 FATAL INTERNAL ERROR IN RUN-TIME LIBRARY
 SEVERE   non continuable
 An explicit or implicit call to the Run-Time Library
 has resulted in the failure of an internal
 consistency Check. This usually indicates a
 programming error in the Run-Time Library and should
 be reported to DIGITAL.
*LIB$_AMBKEY
 xxx IS AN AMBIGUOUS KEYWORD
 The keyword xxx does not contain sufficient
 characters in order to obtain a unique match in the
 keyword table passed as a parameter.
*LIB$_ATTCONSTO
 ATTEMPT TO CONTINUE FROM STOP
 A handler attempted to continue from a call to
 LIB$STOP.
*LIB$_BADBLOADR
 BAD BLOCK ADDRESS
 LIB$FREE_VM has been called with an address of a
 block of storage which is not a valid block.
*LIB$INPSTRTU
 INPUT STRING TRUNCATED
 An input string accepted by LIB$GET_INPUT has been
 truncated in order to fit the string descriptor
 passed to it.
*LIB$_BADBLOSIZ
 BAD BLOCK SIZE
 LIB$GET_VM has been called with 0 or too large a
 block size.
*LIB$_BADSTA
 BAD STACK
 When scanning the process stack, an improper format
 encountered on the stack was inaccessible. The user
 program probably has written on the stack.
 Recompiling with /CHECK:BOUNDS qualifier may find an
 array reference out of bounds.
*LIB$_FATERRLIB
 FATAL ERROR IN LIBRARY
 An internal consistency check has failed in the
 general library. This usually indicates a
 programming error in the Run-Time Library and should
 be reported to DIGITAL.
*LIB$_INSVIRMEM
 INSUFFICIENT VIRTUAL MEMORY
 A call to LIB$GET_VM has failed because the user
 program has exceeded the image quota for virtual
 memory. This quota can be increased by a suitably
 privileged command.
*LIB$_INTLOGERR
 INTERNAL LOGIC ERROR
 A general library procedure has detected an internal
 logic error. Such a condition should be reported to
 DIGITAL.
*LIB$_INVARG
 INVALID ARGUMENT(S)
 A calling program has passed one or more invalid
 arguments to a general library procedure.
*LIB$_INVSTRDES
 INVALID STRING DESCRIPTOR
 A string descriptor passed to a general library
 procedure did not contain a valid DSC$B_CLASS field.
*LIB$_NOTFOU
 NOT FOUND
 LIB$FFS or LIB$FFC did not find set or clear bit
*LIB$_PUSSTAOVE
 PUSHDOWN STACK OVERFLOW
 The image pushdown stack has overflowed. Relink
 program specifying a larger stack.
*LIB$_SIGNO_ARG
 SIGNAL WITH NO ARGUMENTS
 LIB$SIGNAL or LIB$STOP has been called with no
 arguments. This condition is signaled.
*LIB$_UNRKEY
 xxx IS AN UNRECOGINIZED KEYWORD
 The keyword xxx is not contained in the keyword table
 passed as a parameter.
*LIB$_USEFLORES
 USE OF FLOATING RESERVED OPERAND
 The executing image has accessed a reserved floating
 operand which has been fixed up by the library
 procedure LIB$FIXUP_FLT to positive zero so that the
 program may continue.
