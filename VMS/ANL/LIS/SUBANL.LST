FORTRAN IV-PLUS V02-51D		02:28:09    22-AUG-78		PAGE 1   
SUBANL.FTN   	/TR:BLOCKS/WR

        C
        C
        C	SUBANL  --  SUB-HEADER RECORD ANALYSER
        C
        C
        C
        C	COPYRIGHT (C) 1976,1977,1978
        C	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
        C
        C	THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
        C	SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
        C	SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
        C	OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
        C	AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
        C	AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
        C	OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
        C
        C	THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
        C	NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
        C	EQUIPMENT CORPORATION.
        C
        C	DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
        C	SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
        C
        C
        C	K.D. MORSE  07-NOV-76
        C
        C
        C
        C	THIS SUBROUTINE ANALYSES SUB-HEADER RECORD TYPES 1-5.
        C
        C
        C  MODIFICATIONS:
        C
        C
        C NO.		DATE		PROGRAMMER		PURPOSE
        C ---		----		----------		-------
        C
        C 01		12-NOV-76	K.D. MORSE		ADD OCTAL OUTPUT
        C							TO ILLEGAL NAME,
        C							DATE/TIME,
        C							AND VERSION CHAR.
        C 02		08-MAY-78	K.D. MORSE		ADD CHECKS FOR:
        C							1) LANG. PROC. RECORD
        C							    PRECEEDS ALL TIR,
        C							    GSD & TBT RECORDS
        C							2)  AND LENGTH < 36.
        C							ADD COMMON TIRCNT.
        C
        C
        C
        C
0001    	SUBROUTINE	SUBANL
        C
        C
0002    	LOGICAL*1	DUMPIT
FORTRAN IV-PLUS V02-51D		02:28:09    22-AUG-78		PAGE 2   
SUBANL.FTN   	/TR:BLOCKS/WR

        C
0003    	INTEGER	RECNUM,PSCNT,PSRGSD,PSRTIR,PRMODE,ERRCNT,WRTERR
0004    	INTEGER	FLDLNG,FLDPNT,VERPNT,DATPNT,SPCMAX
0005    	INTEGER	VERLNG,DATLNG,SUBPNT,SUBCNT,UICPNT
0006    	INTEGER PROCRC,TITLRC,COPYRC,TIRCNT,PROCLG
0007    	INTEGER ERRCOD
        C
0008    	BYTE	RECORD(512),LSTREC,STRLEV,STRUCT,EOM,ZERO,NINE
0009    	BYTE	BLANK,SUBTYP,PATLNG,CHRSAV
        C
0010    	COMMON	RECORD,MHDLNG,RECNUM,LSTREC,DUMPIT,PSCNT,PSRGSD,PSRTIR
0011    	COMMON	MXINFL,PRMODE,ERRCNT,WRTERR,SUBCNT,ISTACK
0012    	COMMON	PROCRC,TITLRC,COPYRC,TIRCNT
        C
0013    	EQUIVALENCE (STRLEV,RECORD(2)),(MXRLNG,RECORD(3))
0014    	EQUIVALENCE (NAMPNT,FLDPNT),(NAMLNG,FLDLNG)
0015    	EQUIVALENCE (VERPNT,FLDPNT),(VERLNG,FLDLNG)
0016    	EQUIVALENCE (DATPNT,FLDPNT),(DATLNG,FLDLNG)
0017    	EQUIVALENCE (SUBPNT,FLDPNT),(SUBTYP,RECORD(2))
0018    	EQUIVALENCE (PATLNG,RECORD(3)),(UICPNT,FLDPNT)
        C
0019    	DATA STRUCT/0/,MAXREC,MINREC/512,2/,NAMMAX/15/
0020    	DATA ZERO,NINE/'0','9'/,EOM/3/,BLANK/' '/
0021    	DATA SPCMAX/42/,MINMTN,MAXMTN/31,149/,MHD/0/,PROCLG/35/
        C
0022    10	FORMAT(/' >>>>>>>>>> RECORD ',I5,' IS A MAINTENANCE STATUS '
        	1,I4,' BYTES LONG <<<<<<<')
0023    20	FORMAT (T5,'*****INVALID SEQUENCE - SUBHEADER '
        	1'RECORD SHOULD NOT FOLLOW TYPE',I2,' RECORD')
0024    40	FORMAT(T10,'ASCII DATA IS:')
0025    50	FORMAT(T15,50A1)
0026    70	FORMAT(T5,'*****ILLEGAL INPUT FILE SPECIFICATION LENGTH OF ZERO'
        	1,/,T10,'SHOULD BE 1 TO ',I3,' CHARACTERS')
0027    80	FORMAT(T5,'*****INVALID SYNTAX OF INPUT FILE SPECIFICATION IN:  '
        	1,<J>A1)
0028    90	FORMAT (T5,'*****FIRST CHARACTER OF INPUT FILE SPECIFICATION IS'
        	1/,T15,'NUMERIC OR BLANK')
0029    100	FORMAT (T10,'INPUT FILE SPECIFICATION WAS "',<NAMLNG>A1,'"')
0030    110	FORMAT (T5,'*****PATCH UTILITY VERSION LENGTH (',I5,' ) ILLEGAL'
        	1/,T15,'SHOULD BE 1 TO ',I3,' CHARACTERS')
0031    120	FORMAT (T5,'*****PATCH UTILITY VERSION CONTAINS ILLEGAL CHARACTER'
        	1/,T15,'CHARACTER',I3,' IS ',1A1,'  (',O3,' OCTAL)') !++01 OCTAL TOO
0032    130	FORMAT (T10,'PATCH UTILITY VERSION WAS "',<VERLNG>A1,'"')
0033    140	FORMAT (T5,'*****DATE/TIME FIELD CONTAINS ILLEGAL CHARACTER'
        	1/,T15,'CHARACTER',I3,'IS '1A1,'  (',O3,' OCTAL)') !++01 OCTAL TOO
0034    150	FORMAT (T5,'****ILLEGAL SYNTAX FOR DATE/TIME '
        	1,'FIELD'/,T15,<I+1-K>A1)
0035    160	FORMAT(T10,'DATE/TIME OF PATCH WAS ',18A1)
0036    180	FORMAT (T5,'*****ILLEGAL RECORD LENGTH ',I4,' - NOT BETWEEN'
        	1,I4,' AND ',I4)
0037    190	FORMAT (T5,'*****INCOMPLETE RECORD - NEXT FIELD ('
        	1,'AT BYTE ',I4,') BEYOND RECORD')
0038    210	FORMAT(T5,'***** PATCH UTILITY NAME LENGTH ILLEGAL ',I5,
        	1/T10,'SHOULD BE 1 TO ',I3,' CHARACTERS')
0039    220	FORMAT(T5,'*****PATCH UTILITY NAME CONTAINS ILLEGAL CHARACTER '
        	1,/T15,' CHARACTER ',I3, ' IS ',1A1,' (',O3,' OCTAL)') !++01 OCTAL TOO
FORTRAN IV-PLUS V02-51D		02:28:09    22-AUG-78		PAGE 3   
SUBANL.FTN   	/TR:BLOCKS/WR

0040    230	FORMAT (T5,'*****FIRST CHARACTER OF PATCH UTILITY NAME IS'
        	1/,T15,'NUMERIC OR BLANK')
0041    240	FORMAT(T10,'PATCH UTILITY NAME WAS "',<PATLNG>A1,'"')
0042    250	FORMAT(T5,'*****INPUT FILE SPECIFICATION WAS NOT IN'
        	1,' COMPRESSED FORM')
0043    260	FORMAT(T10,'U.I.C. WAS [',O3,',',O3,']')
0044    270	FORMAT (T5,'*****ILLEGAL CORRECTION FILE SPECIFICATION LENGTH',
        	1'OF ZERO,'/T10,'SHOULD BE 1 TO 'I3,' CHARACTERS')
0045    280	FORMAT (T5,'*****INVALID SYNTAX OF CORRECTION FILE SPECIFICATION',
        	1' IN:  ',<J>A1)
0046    290	FORMAT (T5,'*****FIRST CHARACTER OF CORRECTION FILE SPECI'
        	1,'FICATION IS'/,T15,'NUMERIC OR BLANK')
0047    294	FORMAT(T5,'*****CORRECTION FILE SPECIFICATION WAS NOT IN'
        	1,' COMPRESSED FORM')
0048    295	FORMAT (T10,'CORRECTION FILE SPECIFICATION WAS "',<NAMLNG>A1,'"')
0049    297	FORMAT(T10,'SEQUENTIAL PATCH NUMBER IS ',I2)
0050    299	FORMAT(T10,'*****ILLEGAL SUBHEADER TYPE OF ',A1)
0051    300	FORMAT(/' >>>>>>>>>> RECORD ',I5,' IS A LANGUAGE PROCESSOR SUB-HDR '
        	1,I4,' BYTES LONG ')
0052    310	FORMAT(T5,'*****MORE THAN ONE SUBHEADER RECORD'
        	1,' OF TYPE ',I4,' WAS SPECIFIED')
0053    320	FORMAT(/' >>>>>>>>>> RECORD ',I5,' IS A SUB-HDR OF SOURCE FILES '
        	1,I4,' BYTES LONG <<<')
0054    330	FORMAT(/' >>>>>>>>>> RECORD ',I5,' IS A TITLE-TEXT SUB-HDR '
        	1,I4,' BYTES LONG <<<<<<<<')
0055    340	FORMAT(/' >>>>>>>>>> RECORD ',I5,' IS A COPYRIGHT SUB-HDR '
        	1,I4,' BYTES LONG <<<<<<<')
0056    350	FORMAT(/' >>>>>>>>>> RECORD ',I5,' IS A GENERAL TEXT SUB-HDR '
        	1,I4,' BYTES LONG <<<<')
0057    360	FORMAT(T5,'*****LANGUAGE PROCESSOR RECORD LARGER THAN',I3,
        	1' CHARACTERS.')
0058    370	FORMAT(T5,'*****LANGUAGE PROCESSOR RECORD FOLLOWS ',I4,
        	1' TIR, GSD, OR TBT RECORDS.')
        C
        C---->		BRANCH ON TYPE OF SUBHEADER RECORD
        C
0059    	GOTO (500,600,700,800,2200,900),SUBTYP
        C
        C---->		INVALID SUBHEADER TYPE
        C
0060    	WRITE(2,299,ERR=9000)SUBTYP
0061    	GOTO 6800
        C
        C---->	LANGUAGE PROCESSOR NAME AND VERSION SUB-HEADER RECORD.
        C
0062    500	PROCRC=PROCRC+1
0063    	WRITE(2,300,ERR=9000)RECNUM,MHDLNG
0064    	IF (MHDLNG .LE. PROCLG) GOTO 510
0065    	WRITE(2,360)PROCLG
0066    	ERRCNT = ERRCNT + 1
0067    510	IF (TIRCNT .EQ. 0) GOTO 520
0068    	WRITE(2,370)TIRCNT
0069    	ERRCNT = ERRCNT + 1
0070    520	IF (PROCRC.GT.1) GOTO 1900
0071    	GOTO 2000
        C
FORTRAN IV-PLUS V02-51D		02:28:09    22-AUG-78		PAGE 4   
SUBANL.FTN   	/TR:BLOCKS/WR

        C---->	SUBHEADER CONTAINING SOURCE FILES FOR THIS OBJECT MODULE.
        C
0072    600	WRITE(2,320,ERR=9000)RECNUM,MHDLNG
0073    	GOTO 2000
        C
        C---->	TITLE TEXT, I.E. BRIEF MODULE DESCRIPTION.
        C
0074    700	TITLRC=TITLRC+1
0075    	WRITE(2,330,ERR=9000)RECNUM,MHDLNG
0076    	IF (TITLRC.GT.1) GOTO 1900
0077    	GOTO 2000
        C
        C---->	COPYRIGHT SUB-HEADER RECORD.
        C
0078    800	COPYRC=COPYRC+1
0079    	WRITE(2,340,ERR=9000)RECNUM,MHDLNG
0080    	IF (COPYRC.GT.1) GOTO 1900
0081    	GOTO 2000
        C
        C---->	GENERAL TEXT SUBHEADER RECORD.
        C
0082    900	WRITE(2,350,ERR=9000)RECNUM,MHDLNG
0083    	GOTO 2000
        C
        C---->	TOO MANY SUB-HEADER RECORDS OF THIS TYPE.
        C
0084    1900	WRITE(2,310,ERR=9000)SUBTYP
0085    	ERRCNT=ERRCNT+1
0086    	SUBCNT=SUBCNT+1
        C
        C---->		SUB-HEADER RECORD TYPES 1-4 ARE ASCII CHARACTERS
        C
0087    2000	WRITE(2,40,ERR=9000)
0088    	WRITE(2,50,ERR=9000)(RECORD(I),I=3,MHDLNG)
0089    	GOTO 6800
        C
        C---->		MAINTENANCE STATUS RECORD
        C
        C
        C---->		CHECK THAT RECORD IS BETWEEN CORRECT LENGTH LIMITS
        C
0090    2200	WRITE(2,10,ERR=9000),RECNUM,MHDLNG
0091    	IF (LSTREC.EQ.MHD) GOTO 2275
0092    	WRITE(2,20,ERR=9000)LSTREC
0093    2275	IF (MHDLNG.GE.MINMTN .AND. MHDLNG.LE.MAXMTN) GOTO 2350
        C
0094    	ERRCNT = ERRCNT + 1
        C
0095    	WRITE(2,180,ERR=9000)MHDLNG,MINMTN,MAXMTN
        C
        C---->		WRITE PATCH UTILITY NAME AND VERIFY IT
        C
0096    2350	NAMPNT=4
0097    	IF (FLDPNT.GT.MHDLNG) GOTO 6750
        C
0098    	J=PATLNG
FORTRAN IV-PLUS V02-51D		02:28:09    22-AUG-78		PAGE 5   
SUBANL.FTN   	/TR:BLOCKS/WR

0099    	K=NAMPNT
0100    2370	CALL FLDCHK(J,K,RECORD,I)
0101    	IF (I) 2400,2700,2550
        C
        C---->		PATCH UTILITY NAME FIELD HAS INVALID LENGTH.
        C		SET LENGTH TO MAXIMUM.  REPORT ERROR.
        C
0102    2400	ERRCNT = ERRCNT + 1
0103    	WRITE(2,210,ERR=9000)PATLNG,NAMMAX
0104    	NAMLNG=NAMMAX
0105    	J=NAMMAX
0106    	DUMPIT = .TRUE.
0107    	GOTO 2370
        C
        C---->		PATCH UTILITY NAME FIELD HAS ILLEGAL CHARACTER.
        C		PRINT IT AND CONTINUE PROCESSING RECORD.
        C
0108    2550	ERRCNT= ERRCNT + 1
0109    	WRITE(2,220,ERR=9000)I-NAMPNT+1,RECORD(I),RECORD(I) !++01 OCTAL TOO
0110    	K=I+1
0111    	J=PATLNG+NAMPNT-K
0112    	IF (K.LT.NAMPNT+PATLNG) GOTO 2370
        C
        C---->		ALL CHARACTERS OF FIELD ARE CHECKED.  NOW SEE IF FIRST
        C		CHARACTER IS NUMERIC OR BLANK.
        C
0113    2700	IF (RECORD(NAMPNT).LT.ZERO .OR. RECORD(NAMPNT).GT.NINE) GOTO 2750
0114    	GOTO 2760
0115    2750	IF (RECORD(NAMPNT).NE.BLANK) GOTO 2780
0116    2760	ERRCNT=ERRCNT + 1
0117    	WRITE(2,230,ERR=9000)
        C
        C---->		NOW PRINT PATCH UTILITY NAME.
        C
0118    2780	WRITE(2,240,ERR=9000)(RECORD(I),I=NAMPNT,NAMPNT+PATLNG-1)
        C
        C---->		IF INVALID LENGTH, RETURN
        C
0119    	IF (DUMPIT) RETURN
        C
        C---->		NOW CHECK UTILITY VERSION.
        C
0120    	VERPNT=PATLNG+NAMPNT+1
0121    	VERLNG=RECORD(VERPNT-1)
0122    	IF (FLDPNT.GT.MHDLNG) GOTO 6750
0123    	J=VERLNG
0124    	K=VERPNT
0125    2796	CALL FLDCHK(J,K,RECORD,I)
0126    	IF (I) 2797,3050,2900
        C
        C---->		VERSION NUMBER FIELD HAS ILLEGAL LENGTH
        C
0127    2797	ERRCNT=ERRCNT + 1
0128    	WRITE(2,110,ERR=9000)VERLNG,NAMMAX
0129    	VERLNG=NAMMAX
0130    	J=NAMMAX
FORTRAN IV-PLUS V02-51D		02:28:09    22-AUG-78		PAGE 6   
SUBANL.FTN   	/TR:BLOCKS/WR

0131    	DUMPIT = .TRUE.
0132    	GOTO 2796
        C
        C---->		VERSION FIELD HAS INVALID CHARACTER
        C
0133    2900	ERRCNT=ERRCNT + 1
0134    	WRITE(2,120,ERR=9000)I-VERPNT+1,RECORD(I),RECORD(I) !++01 OCTAL TOO
0135    	K=I+1
0136    	J=VERLNG+VERPNT-K
0137    	IF (K.LT.VERPNT+VERLNG) GOTO 2796
        C
        C---->		ALL CHARACTERS OF VERSION ARE CHECKED.  PRINT IT.
        C
0138    3050	WRITE(2,130,ERR=9000)(RECORD(I),I=VERPNT,VERPNT+VERLNG-1)
        C
        C---->		IF LENGTH OF VERSION INVALID, EXIT NOW.
        C
0139    3150	IF (DUMPIT) RETURN
        C
        C---->		NOW PRINT U.I.C.
        C
0140    	UICPNT=VERPNT+VERLNG
0141    	WRITE(2,260,ERR=9000)RECORD(UICPNT+1),RECORD(UICPNT)
        C
        C---->		VALIDATE AND PRINT INPUT FILE SPECIFICATION
        C
0142    3250	NAMPNT=UICPNT+3
0143    	NAMLNG=RECORD(NAMPNT-1)
0144    	IF (FLDPNT.GT.MHDLNG) GOTO 6750
0145    	J=NAMLNG
0146    	K=NAMPNT
0147    	CHRSAV=RECORD(J+K)
0148    3300	CALL SYNTX(RECORD(K),J,ERRCOD)
0149    	RECORD(NAMPNT+NAMLNG)=CHRSAV
0150    	IF (J) 3500,3350,3700
        C
        C---->		INPUT FILE SPECIFICATION HAS INVALID LENGTH.
        C		SET LENGTH TO MAXIMUM.  PRINT ERROR.
        C
0151    3350	ERRCNT=ERRCNT + 1
0152    	WRITE(2,70,ERR=9000)SPCMAX
0153    	NAMLNG=SPCMAX
0154    	J=SPCMAX
0155    	DUMPIT = .TRUE.
0156    	GOTO 3300
        C
        C---->		INPUT FILE SPECIFICATION CONTAINS INVALID SYNTAX.
        C		PRINT PART IN ERROR AND CONTINUE PROCESSING RECORD.
        C
0157    3500	ERRCNT= ERRCNT + 1
0158    	J=-J
0159    	WRITE(2,80,ERR=9000)(RECORD(I),I=1,J)
0160    	GOTO 4000
        C
        C---->		ALL CHARACTERS CHECKED.  SEE IF FIRST IS BLANK OR NUMERIC.
        C
FORTRAN IV-PLUS V02-51D		02:28:09    22-AUG-78		PAGE 7   
SUBANL.FTN   	/TR:BLOCKS/WR

0161    3700	IF (RECORD(NAMPNT).LT.ZERO .OR. RECORD(NAMPNT).GT.NINE) GOTO 3750
0162    	GOTO 3800
0163    3750	IF (RECORD(NAMPNT).NE.BLANK) GOTO 3900
0164    3800	ERRCNT=ERRCNT + 1
0165    	WRITE(2,90,ERR=9000)
        C
        C---->		PRINT THE INPUT FILE SPECIFICATION.
        C
0166    3900	IF (J.EQ.NAMLNG) GOTO 3930
0167    	ERRCNT=ERRCNT + 1
0168    	WRITE(2,250,ERR=9000)
0169    3930	WRITE(2,100,ERR=9000)(RECORD(I),I=NAMPNT,NAMPNT+NAMLNG-1)
        C
        C---->		IF INPUT SPECIFICATION FIELD HAS INVALID LENGTH, RETURN.
        C
0170    4000	IF (DUMPIT) RETURN
        C
        C---->		VALIDATE AND WRITE CORRECTION FILE SPECIFICATION.
        C
0171    	NAMPNT=NAMPNT+NAMLNG+1
0172    	NAMLNG=RECORD(NAMPNT-1)
0173    	IF (FLDPNT.GT.MHDLNG) GOTO 6750
0174    	J=NAMLNG
0175    	K=NAMPNT
0176    	CHRSAV=RECORD(J+K)
0177    4050	CALL SYNTX(RECORD(K),J,ERRCOD)
0178    	RECORD(NAMPNT+NAMLNG)=CHRSAV
0179    	IF (J) 4250,4100,4450
        C
        C---->		CORRECTION FILE SPECIFICATION HAS ZERO LENGTH.
        C		SET LENGTH TO MAXIMUM.  PRINT ERROR.
        C
0180    4100	ERRCNT=ERRCNT + 1
0181    	WRITE(2,270,ERR=9000)SPCMAX
0182    4200	NAMLNG=SPCMAX
0183    	J=SPCMAX
0184    	DUMPIT = .TRUE.
0185    	GOTO 4050
        C
        C---->		CORRECTION FILE SPECIFICATION HAS INVALID SYNTAX.
        C		PRINT PART IN ERROR AND CONTINUE WITH RECORD.
        C
0186    4250	ERRCNT=ERRCNT + 1
0187    	J=-J
0188    	WRITE(2,280,ERR=9000)(RECORD(I),I=1,J)
0189    	GOTO 4750
        C
        C---->		ALL CHARACTERS CHECKED.  SEE IF FIRST CHARACTER IS
        C		NUMERIC OR BLANK.
        C
0190    4450	IF (RECORD(NAMPNT).LT.ZERO .OR. RECORD(NAMPNT).GT.NINE) GOTO 4500
0191    	GOTO 4550
0192    4500	IF (RECORD(NAMPNT).NE.BLANK) GOTO 4650
0193    4550	ERRCNT=ERRCNT + 1
0194    	WRITE(2,290,ERR=9000)
        C
FORTRAN IV-PLUS V02-51D		02:28:09    22-AUG-78		PAGE 8   
SUBANL.FTN   	/TR:BLOCKS/WR

        C----->		PRINT THE CORRECTION FILE SPECIFICATION.
        C
0195    4650	IF (J.EQ.NAMLNG) GOTO 4680
0196    	WRITE(2,294,ERR=9000)
0197    4680	WRITE(2,295,ERR=9000) (RECORD(I),I=NAMPNT,NAMPNT+NAMLNG-1)
        C
        C---->		WRITE TIME AND DATE.
        C
0198    4750	DATPNT=NAMPNT+NAMLNG
0199    	DATLNG=18
0200    	IF (FLDPNT.GT.MHDLNG) GOTO 6750
0201    	J=DATLNG
0202    	K=DATPNT
0203    4800	CALL DATTIM(J,K,RECORD,I)
0204    	IF (I) 4900,5000,4830
        C
        C---->		DATE AND TIME FIELD HAS ILLEGAL CHARACTER.
        C
0205    4830	WRITE(2,140,ERR=9000)I-DATPNT+1,RECORD(I),RECORD(I) !++01 OCTAL TOO
0206    4860	K=I+1
0207    	J=DATLNG+DAPNNT-K
0208    	ERRCNT=ERRCNT + 1
0209    	IF (K.LT.DATPNT+DATLNG) GOTO 4800
0210    	GOTO 5000
        C
        C---->		DATE AND TIME FIELD HAS ILLEGAL SYNTAX.
        C
0211    4900	I=-I
0212    	WRITE(2,150,ERR=9000)(RECORD(K),K=DATPNT,I)
0213    	GOTO 4860
        C
        C---->		PRINT DATE AND TIME FIELDS.
        C
0214    5000	WRITE(2,160,ERR=9000) (RECORD(I),I=DATPNT,DATPNT+17)
        C
        C---->		WRITE SEQUENTIAL PATCH NUMBER.
        C
0215    5050	FLDPNT=DATPNT+18
0216    	IF (FLDPNT.GT.MHDLNG) GOTO 6750
0217    	WRITE(2,297,ERR=9000)RECORD(FLDPNT)
0218    	GOTO 6800
        C
        C---->		HERE WHEN NEXT FIELD IS BEYOND END OF RECORD
        C
0219    6750	ERRCNT=ERRCNT + 1
0220    	WRITE(2,190,ERR=9000) FLDPNT
0221    6800	RETURN
        C
        C---->		HERE IF AN ERROR WRITING OUTPUT FILE
        C
0222    9000	WRTERR = 1
0223    	RETURN
0224    	END
FORTRAN IV-PLUS V02-51D		02:28:09    22-AUG-78		PAGE 9   
SUBANL.FTN   	/TR:BLOCKS/WR

PROGRAM SECTIONS

NUMBER	 NAME	    SIZE		ATTRIBUTES

  1	$CODE1	005406  1411		RW,I,CON,LCL
  2	$PDATA	000016     7		RW,D,CON,LCL
  3	$IDATA	004564  1210		RW,D,CON,LCL
  4	$VARS	000046    19		RW,D,CON,LCL
  5	$TEMPS	000002     1		RW,D,CON,LCL
  6	.$$$$.	001040   272		RW,D,OVR,GBL


ENTRY POINTS

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 SUBANL	      1-000000


VARIABLES

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 BLANK	L*1   4-000016	 CHRSAV	L*1   4-000017	 COPYRC	I*2   6-001034	 DAPNNT	R*4   4-000042	 DATLNG	I*2   4-000002
 DATPNT	I*2   4-000000	 DUMPIT	L*1   6-001005	 EOM	L*1   4-000013	 ERRCNT	I*2   6-001020	 ERRCOD	I*2   4-000010
 FLDLNG	I*2   4-000002	 FLDPNT	I*2   4-000000	 I	I*2   4-000036	 ISTACK	I*2   6-001026	 J	I*2   4-000034
 K	I*2   4-000040	 LSTREC	L*1   6-001004	 MAXMTN	I*2   4-000030	 MAXREC	I*2   4-000020	 MHD	I*2   4-000032
 MHDLNG	I*2   6-001000	 MINMTN	I*2   4-000026	 MINREC	I*2   4-000022	 MXINFL	I*2   6-001014	 MXRLNG	I*2   6-000002
 NAMLNG	I*2   4-000002	 NAMMAX	I*2   4-000024	 NAMPNT	I*2   4-000000	 NINE	L*1   4-000015	 PATLNG	L*1   6-000002
 PRMODE	I*2   6-001016	 PROCLG	I*2   4-000006	 PROCRC	I*2   6-001030	 PSCNT	I*2   6-001006	 PSRGSD	I*2   6-001010
 PSRTIR	I*2   6-001012	 RECNUM	I*2   6-001002	 SPCMAX	I*2   4-000004	 STRLEV	L*1   6-000001	 STRUCT	L*1   4-000012
 SUBCNT	I*2   6-001024	 SUBPNT	I*2   4-000000	 SUBTYP	L*1   6-000001	 TIRCNT	I*2   6-001036	 TITLRC	I*2   6-001032
 UICPNT	I*2   4-000000	 VERLNG	I*2   4-000002	 VERPNT	I*2   4-000000	 WRTERR	I*2   6-001022	 ZERO	L*1   4-000014


ARRAYS

 NAME   TYPE  ADDRESS	    SIZE 	DIMENSIONS

 RECORD	L*1   6-000000	001000   256	(512)


LABELS

 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	

 10'	 3-000000	 20'	 3-000114	 40'	 3-000234	 50'	 3-000260	 70'	 3-000266
 80'	 3-000422	 90'	 3-000522	 100'	 3-000640	 110'	 3-000712	 120'	 3-001044
 130'	 3-001206	 140'	 3-001256	 150'	 3-001412	 160'	 3-001500	 180'	 3-001540
 190'	 3-001636	 210'	 3-001746	 220'	 3-002070	 230'	 3-002232	 240'	 3-002342
 250'	 3-002406	 260'	 3-002506	 270'	 3-002540	 280'	 3-002704	 290'	 3-003012
 294'	 3-003136	 295'	 3-003242	 297'	 3-003322	 299'	 3-003364	 300'	 3-003432
 310'	 3-003546	 320'	 3-003654	 330'	 3-003770	 340'	 3-004104	 350'	 3-004216
 360'	 3-004330	 370'	 3-004430	 500	 1-000102	 510	 1-000226	 520	 1-000276
 600	 1-000316	 700	 1-000374	 800	 1-000466	 900	 1-000560	 1900	 1-000636
 2000	 1-000712	 2200	 1-001044	 2275	 1-001170	 2350	 1-001300	 2370	 1-001346
FORTRAN IV-PLUS V02-51D		02:28:09    22-AUG-78		PAGE 10  
SUBANL.FTN   	/TR:BLOCKS/WR

 2400	    **   	 2550	 1-001472	 2700	 1-001646	 2750	 1-001704	 2760	 1-001726
 2780	 1-001766	 2796	 1-002170	 2797	    **   	 2900	 1-002314	 3050	 1-002470
 3150	    **   	 3250	    **   	 3300	 1-002774	 3350	    **   	 3500	 1-003142
 3700	 1-003254	 3750	 1-003312	 3800	 1-003334	 3900	 1-003374	 3930	 1-003444
 4000	 1-003554	 4050	 1-003660	 4100	    **   	 4200	    **   	 4250	 1-004026
 4450	 1-004140	 4500	 1-004176	 4550	 1-004220	 4650	 1-004260	 4680	 1-004324
 4750	 1-004434	 4800	 1-004514	 4830	    **   	 4860	 1-004640	 4900	 1-004726
 5000	 1-005034	 5050	    **   	 6750	 1-005236	 6800	 1-005306	 9000	 1-005310


FUNCTIONS AND SUBROUTINES REFERENCED

 DATTIM	 FLDCHK	 SYNTX


TOTAL SPACE ALLOCATED = 013320  2920

OBJ$:SUBANL.OBI,LIS$:SUBANL.LST/-SP=SRC$:SUBANL
