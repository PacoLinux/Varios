SMBPRE          - PRINT SYMBIONT PREFIX FILE                     21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)    3800  DECLARATIONS
   (1)    4000  DECLARATIONS
   (1)    6700  TOP OF FORMS AND PAGE HEADER
   (1)   17300  SYMBIONT PRINT LINE ROUTINE
   (1)   29500  SEND MESSAGE TO SYMBIONT MANAGER
   (1)   37600  SET UNSOLICITED DATA AST FOR MAILBOX
   (1)   42800  GET CHANNEL INFORMATION
   (1)   47200  ASSIGN DEVICE
SMBSUBR         - SYMBIONT SUBROUTINES                           21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page   1
01              DECLARATIONS                                                                                                     (1)

                                     0000   100 	.TITLE	SMBSUBR - SYMBIONT SUBROUTINES
                                     0000   200 	.IDENT	/01/
                                     0000   300 
                                     0000   400 ;
                                     0000   500 ; COPYRIGHT (C) 1978
                                     0000   600 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000   700 ;
                                     0000   800 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000   900 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000  1000 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000  1100 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000  1200 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000  1300 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000  1400 ; REMAIN IN DEC.
                                     0000  1500 ;
                                     0000  1600 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000  1700 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000  1800 ; CORPORATION.
                                     0000  1900 ;
                                     0000  2000 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000  2100 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000  2200 ;
                                     0000  2300 
                                     0000  2400 ;++
                                     0000  2500 ; FACILITY:	VAX/VMS PRINT SYMBIONT
                                     0000  2600 ;
                                     0000  2700 ; ABSTRACT:	GENERAL SYMBIONT SUBROUTINES
                                     0000  2800 ;
                                     0000  2900 ;
                                     0000  3000 ; ENVIRONMENT:	NATIVE/USER MODE NON-PRIVILEGED CODE
                                     0000  3100 ;
                                     0000  3200 ; AUTHOR:	H.B.BOSWELL + LEN KAWELL, CREATION DATE: 22-APR-77
                                     0000  3300 ;
                                     0000  3400 ; MODIFIED BY:
                                     0000  3500 ;
                                     0000  3600 ;	, : VERSION
                                     0000  3700 ; 01	- 
                                     0000  3800 ;--
SMBSUBR         - SYMBIONT SUBROUTINES                           21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page   2
01              DECLARATIONS                                                                                                     (1)

                                     0000  4000 	.SBTTL	DECLARATIONS
                                     0000  4100 ;
                                     0000  4200 ; INCLUDE FILES:
                                     0000  4300 ;
                                     0000  4400 ;	[PRTSMB.SRC]SMBPRE.MAR
                                     0000  4500 
                                     0000  4600 ;
                                     0000  4700 ; MACROS:
                                     0000  4800 ;
                                     0000  4900 
                                     0000  5000 ;
                                     0000  5100 ; EQUATED SYMBOLS:
                                     0000  5200 ;
                                     0000  5300 	$JBCMSGDEF			;JOB CONTROLLER MESSAGES
                                     0000  5400 
                                     0000  5500 
                                     0000  5600 ;
                                     0000  5700 ; OWN STORAGE:
                                     0000  5800 ;
                                     0000  5900 ;
                                     0000  6000 ; PAGE HEADER $FAO DESCRIPTOR
                                     0000  6100 ;
                                     0000  6200 	PURE_SECTION
                                     0000  6300 HEADER_DESC:
                                     0000  6400 	STRING_DESC	<!AC!3(_)!%D!2(_)Page !UL!/>
                                     0022  6500 
SMBSUBR         - SYMBIONT SUBROUTINES                           21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page   3
01              TOP OF FORMS AND PAGE HEADER                                                                                     (1)

                                     0022  6700 	.SBTTL	TOP OF FORMS AND PAGE HEADER
                                     0022  6800 ;++
                                     0022  6900 ; FUNCTIONAL DESCRIPTION: ROUTINE TO ISSUE A TOP OF FORMS OR 
                                     0022  7000 ; A TOP OF FORMS AND A PAGE HEADER.
                                     0022  7100 ;
                                     0022  7200 ;
                                     0022  7300 ; CALLING SEQUENCE:
                                     0022  7400 ;
                                     0022  7500 ;	BSB	SMB$TOPOFORM
                                     0022  7600 ;	BSB	SMB$PAGEHDR
                                     0022  7700 ;	BSB	SMB$PAGEHDRNFF
                                     0022  7800 ;
                                     0022  7900 ; INPUT PARAMETERS:
                                     0022  8000 ;
                                     0022  8100 ;	NONE
                                     0022  8200 ;
                                     0022  8300 ; IMPLICIT INPUTS:
                                     0022  8400 ;
                                     0022  8500 ;	R11 - ADDRESS OF IMPURE DATA BLOCK
                                     0022  8600 ;
                                     0022  8700 ; OUTPUT PARAMETERS:
                                     0022  8800 ;
                                     0022  8900 ;	NONE
                                     0022  9000 ;
                                     0022  9100 ; IMPLICIT OUTPUTS:
                                     0022  9200 ;
                                     0022  9300 ;	TOP OF FORMS OR TOP OF FORMS AND PAGE HEADER PRINTED
                                     0022  9400 ;
                                     0022  9500 ; COMPLETION CODES:
                                     0022  9600 ;
                                     0022  9700 ;	NONE
                                     0022  9800 ;
                                     0022  9900 ; SIDE EFFECTS:
                                     0022 10000 ;
                                     0022 10100 ;	NONE
                                     0022 10200 ;
                                     0022 10300 ;--
                                     0022 10400 
                                     0022 10500 	PURE_SECTION
                                     0022 10600 
                                     0022 10700 	.ENABL	LSB
                                     0022 10800 
                                     0022 10900 SMB$TOPOFORM::
                          04     BB  0022 11000 	PUSHR	#^M<R2>			;SAVE REGISTER
            50       01CA CB     DE  0024 11100 	MOVAL	SD_T_TBUF(R11),R0	;SET DUMMY BUFFER ADDRESS
                          51     D4  0029 11200 	CLRL	R1			;NO BUFFER LENGTH
            52            31     90  002B 11300 	MOVB	#^A\1\,R2		;FF CARRIAGE CONTROL
                       43 AB     94  002E 11400 	CLRB	SD_B_LTPCNT(R11)	;INIT LINES THIS PAGE COUNT
                          3F     11  0031 11500 	BRB	10$
                                     0033 11600 
                                     0033 11700 SMB$PAGEHDRNFF::
                          04     BB  0033 11800 	PUSHR	#^M<R2>			;SAVE REGISTER
            52            20     90  0035 11900 	MOVB	#^A\ \,R2		;NO FORM FEED
                          05     11  0038 12000 	BRB	5$			;
                                     003A 12100 
                                     003A 12200 SMB$PAGEHDR::
                          04     BB  003A 12300 	PUSHR	#^M<R2>			;SAVE REGISTER
SMBSUBR         - SYMBIONT SUBROUTINES                           21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page   4
01              TOP OF FORMS AND PAGE HEADER                                                                                     (1)

            52            31     90  003C 12400 	MOVB	#^A\1\,R2		;FF CARRIAGE CONTROL
                                     003F 12500 ;
                                     003F 12600 ; CREATE THE PAGE HEADER
                                     003F 12700 ;
                                     003F 12800 5$:
                     02CA CB     DF  003F 12900 	PUSHAL	SD_T_HDBUF(R11)		;PUSH HEADER BUFFER ADDRESS AND
                          34     DD  0043 13000 	PUSHL	#SMB$K_HEADERSZ		; HEADER SIZE FOR BUFFER DESCRIPTOR
            50            5E     D0  0045 13100 	MOVL	SP,R0			;SET ADDRESS OF DESCRIPTOR
            7E       0300 CB     3C  0048 13200 	MOVZWL	SD_W_PAGE(R11),-(SP)	;PAGE NUMBER
                       2F AB     DF  004D 13300 	PUSHAL	SD_Q_PTIME(R11)		;PRINT TIME
                     009F CB     DF  0050 13400 	PUSHAL	SD_T_MSGDATA+SIM$T_FILNAM(R11) ;FILE NAME
                          60     7F  0054 13500 	PUSHAQ	(R0)			;OUTPUT BUFFER DESC ADDRESS
                     02FE CB     3F  0056 13600 	PUSHAW	SD_W_HEAD_L(R11)	;RESULTING LENGTH RETURNED HERE
                       A3 AF     7F  005A 13700 	PUSHAQ	HEADER_DESC		;FORMAT DESCRIPTOR
   00000000'9F            08     FB  005D 13800 	CALLS	#8,@#SYS$FAO		;CALL $FAO
            50       02CA CB     DE  0064 13900 	MOVAL	SD_T_HDBUF(R11),R0	;SET HEADER BUFFER ADDRESS
            51       02FE CB     3C  0069 14000 	MOVZWL	SD_W_HEAD_L(R11),R1	;GET HEADER LENGTH
         43 AB            02     90  006E 14100 	MOVB	#2,SD_B_LTPCNT(R11)	;INIT LINE COUNT TO 2
                                     0072 14200 10$:
                                     0072 14300 
                                     0072 14400 ;
                                     0072 14500 ; ISSUE THE SPECIAL QIO
                                     0072 14600 ;
                                     0072 14700 
                                     0072 14800 	$QIOW_S	-			;PRINT THE FORM FEED AND HEADER
                                     0072 14900 	EFN=#SMB$K_TOFEFN,-		;EFN
                                     0072 15000 	CHAN=SD_G_QIOBLK+QIO$_CHAN(R11),- ;CHANNEL
                                     0072 15100 	FUNC=#IO$_WRITELBLK,-		;FUNCTION
                                     0072 15200 	IOSB=SD_Q_TOFIOSB(R11),-	;IOSB ADDRESS
                                     0072 15300 	P1=(R0),-			;BUFFER ADDRESS
                                     0072 15400 	P2=R1,-				;BUFFER LENGTH
                                     0072 15500 	P4=R2				;CARRIAGE CONTROL
                       3F AB     D6  0094 15600 	INCL	SD_L_QIOCNT(R11)	;ADD 1 FOR FORM FEED QIO
         02 AB            00     E0  0097 15700 	BBS	#SD_V_ABORT,SD_B_ERR_FLAGS(R11),30$ ;BR IF ABORTING
                          27         009B       
            07            50     E9  009C 15800 	BLBC	R0,25$			;BR IF ERROR
            50         0F AB     3C  009F 15900 	MOVZWL	SD_Q_TOFIOSB(R11),R0	;GET I/O STATUS
            15            50     E8  00A3 16000 	BLBS	R0,20$			;BR IF I/O OK
                                     00A6 16100 25$:	SETBIT	SD_V_PRINTERR,SD_B_ERR_FLAGS(R11) ;SET PRINT ERROR
                                     00AA 16200 	SIGNAL	JBC$_PRINTOUT,#0,R0	;SIGNAL THE ERROR
                          08     11  00B9 16300 	BRB	30$
                                     00BB 16400 20$:
            51         13 AB     9A  00BB 16500 	MOVZBL	SD_Q_TOFIOSB+4(R11),R1	;GET # LINES PRINTED
         45 AB            51     C0  00BF 16600 	ADDL	R1,SD_L_LINECNT(R11)	;ADD LINE PRINTED TO TOTAL
                                     00C3 16700 30$:
                          04     BA  00C3 16800 	POPR	#^M<R2>			;RESTORE REGISTERS
                                 05  00C5 16900 	RSB				;RETURN
                                     00C6 17000 
                                     00C6 17100 	.DSABL	LSB
SMBSUBR         - SYMBIONT SUBROUTINES                           21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page   5
01              SYMBIONT PRINT LINE ROUTINE                                                                                      (1)

                                     00C6 17300 	.SBTTL	SYMBIONT PRINT LINE ROUTINE
                                     00C6 17400 ;++
                                     00C6 17500 ; FUNCTIONAL DESCRIPTION:
                                     00C6 17600 ;
                                     00C6 17700 ;	THIS ROUTINE IS CALLED TO PRINT A LINE ON THE
                                     00C6 17800 ;	OUTPUT DEVICE.
                                     00C6 17900 ;
                                     00C6 18000 ; CALLING SEQUENCE:
                                     00C6 18100 ;
                                     00C6 18200 ;	BSB/JSB SMB$WRITELINS
                                     00C6 18300 ;	BSB/JSB SMB$WRITELINN
                                     00C6 18400 ;	BSB/JSB	SMB$WRITELINE
                                     00C6 18500 ;
                                     00C6 18600 ; INPUT PARAMETERS:
                                     00C6 18700 ;
                                     00C6 18800 ;	R0 IS THE COUNT OF BYTES TO PRINT
                                     00C6 18900 ;	R1 IS THE ADDRESS OF THE LINE BUFFER
                                     00C6 19000 ;	R2 IS THE I/O STATUS INDEX
                                     00C6 19100 ;
                                     00C6 19200 ; IMPLICIT INPUTS:
                                     00C6 19300 ;
                                     00C6 19400 ;	R11 CONTAINS THE ADDRESS OF SYMBIONT IMPURE AREA
                                     00C6 19500 ;
                                     00C6 19600 ; OUTPUT PARAMETERS:
                                     00C6 19700 ;
                                     00C6 19800 ;	THE LINE IS QUEUED FOR PRINTING
                                     00C6 19900 ;	R0 IS SET AS PER THE RESULT
                                     00C6 20000 ;
                                     00C6 20100 ; IMPLICIT OUTPUTS:
                                     00C6 20200 ;
                                     00C6 20300 ;	NONE
                                     00C6 20400 ;
                                     00C6 20500 ; COMPLETION CODES:
                                     00C6 20600 ;
                                     00C6 20700 ;	AS SET BY THE QIO SYSTEM SERVICE
                                     00C6 20800 ;
                                     00C6 20900 ; SIDE EFFECTS:
                                     00C6 21000 ;
                                     00C6 21100 ;	NONE
                                     00C6 21200 ;
                                     00C6 21300 ;--
                                     00C6 21400 	PURE_SECTION
                                     00C6 21500  
                                     00C6 21600 SMB$WRITELINN::				;WRITE LINE - NORMAL CARRIAGE CONTROL
       00EC CB            20     9A  00C6 21700 	MOVZBL	#^A/ /,SD_G_QIOBLK+QIO$_P4(R11) ;SET CARRAIGE CONTROL BYTE
                                     00CB 21800 SMB$WRITELINS::
                                     00CB 21900 
                                     00CB 22000 	.ENABL	LSB
                                     00CB 22100 
                          3F     10  00CB 22200 	BSBB	SMB$WRITELINE		;PRINT THE LINE
            3B            50     E9  00CD 22300 	BLBC	R0,20$			;BR IF ERROR - GET OUT - ERROR ALREADY SET
                                     00D0 22400 5$:
                                     00D0 22500 	$WAITFR_S	SD_G_QIOBLK+QIO$_EFN(R11) ;WAIT FOR THE I/O
            51       00D4 CB     D0  00DB 22600 	MOVL	SD_G_QIOBLK+QIO$_IOSB(R11),R1 ;GET IOSB ADDRESS
            50            61     3C  00E0 22700 	MOVZWL	(R1),R0			;GET I/O STATUS
            1A            50     E8  00E3 22800 	BLBS	R0,10$			;BR IF SUCCESS
         02 AB            00     E0  00E6 22850 	BBS	#SD_V_ABORT,SD_B_ERR_FLAGS(R11),20$ ;GET OUT IF ABORTING
SMBSUBR         - SYMBIONT SUBROUTINES                           21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page   6
01              SYMBIONT PRINT LINE ROUTINE                                                                                      (1)

                          20         00EA       
                                     00EB 22900 	SETBIT	SD_V_PRINTERR,SD_B_ERR_FLAGS(R11) ;SET PRINT ERROR
                                     00EF 23000 	SIGNAL	JBC$_PRINTOUT,#0,R0	;SIGNAL THE ERROR
                          0B     11  00FE 23100 	BRB	20$			;GET OUT
                                     0100 23200 10$:
            51         04 A1     9A  0100 23300 	MOVZBL	4(R1),R1		;GET # LINES PRINTED
         45 AB            51     C0  0104 23400 	ADDL	R1,SD_L_LINECNT(R11)	;ADD LINES PRINTED TO TOTAL
            50            01     9A  0108 23500 	MOVZBL	#1,R0			;SET SUCCESS
                                     010B 23600 20$:
                                 05  010B 23700 	RSB				;RETURN
                                     010C 23800 
                                     010C 23900 	.DSABL	LSB
                                     010C 24000 	.ENABL	LSB
                                     010C 24100 
                                     010C 24200 SMB$WRITELINE::				;WRITE A LINE TO THE PRINTER
                                     010C 24300 
                                     010C 24400 ;
                                     010C 24500 ; SET UP QIO PARAMETERS
                                     010C 24600 ;
       00E4 CB            50     D0  010C 24700 	MOVL	R0,SD_G_QIOBLK+QIO$_P2(R11) ;SET BUFFER LENGTH
       00E0 CB            51     D0  0111 24800 	MOVL	R1,SD_G_QIOBLK+QIO$_P1(R11) ;SET BUFFER ADDRESS
       00D4 CB         17 AB42   7E  0116 24900 	MOVAQ	SD_Q_IOSB0(R11)[R2],SD_G_QIOBLK+QIO$_IOSB(R11) ;SET IOSB ADDRESS
            52            01     C1  011D 25000 	ADDL3	#SMB$K_LPEFN0,R2,SD_G_QIOBLK+QIO$_EFN(R11) ;SET EVENT FLAG NUMBER
                     00C8 CB         0120       
                          50     D4  0123 25100 	CLRL	R0			;ASSUME ABORT
         02 AB            00     E0  0125 25200 	BBS	#SD_V_ABORT,SD_B_ERR_FLAGS(R11),60$ ;BR IF ABORT
                          6D         0129       
                                     012A 25300 
                                     012A 25400 ;
                                     012A 25500 ; CHECK IF FORM-FEED/HEADER SHOULD BE PRINTED
                                     012A 25600 ;
                                     012A 25700 
         04 AB            03     91  012A 25800 	CMPB	#STATE$_FLAGPAGE,SD_B_STATE(R11) ;PRINTING FLAG PAGE
                          42     13  012E 25900 	BEQL	50$			;BR IF YES
         03 AB            02     E0  0130 26000 	BBS	#SD_V_INTRNLCC,SD_B_GEN_FLAGS(R11),50$ ;BR IF INTERNAL CARRIAGE CONTROL
                          3D         0134       
         03 AB            00     E4  0135 26100 	BBSC	#SD_V_FLGPAGDONE,SD_B_GEN_FLAGS(R11),50$ ;BR IF FLAG PAGE JUST DONE
                          38         0139       
         03 AB            03     E0  013A 26200 	BBS	#SD_V_FFREQ,SD_B_GEN_FLAGS(R11),15$ ;BR IF FF REQUIRED
                          07         013E       
         43 AB         44 AB     91  013F 26300 	CMPB	SD_B_MAXLTP(R11),SD_B_LTPCNT(R11) ;IS LINE COUNT TOO BIG
                          2C     1E  0144 26400 	BGEQU	50$			;BR IF NO - PRINT LINE
       008B CB            04     E0  0146 26500 15$:	BBS	#PQR$V_NOFEED,SD_T_MSGDATA+SIM$B_FLAGS(R11),50$ ;BR IF NO FORM FEED
                          26         014B       
                                     014C 26600 20$:
                     0300 CB     B6  014C 26700 	INCW	SD_W_PAGE(R11)		;INCREMENT THE PAGE NUMBER
            51       008D CB     3C  0150 26800 	MOVZWL	SD_T_MSGDATA+SIM$W_PAGCNT(R11),R1 ;ANY PAGE LIMIT?
                          07     13  0155 26900 	BEQL	25$			;BR IF NO
            51       0300 CB     B1  0157 27000 	CMPW	SD_W_PAGE(R11),R1	;IS IT OVER THE LIMIT?
                          39     1A  015C 27100 	BGTRU	60$			;BR IF YES
       008B CB            05     E1  015E 27200 25$:	BBC	#PQR$V_PAGHDR,SD_T_MSGDATA+SIM$B_FLAGS(R11),30$ ;BR IF NO PAGE HEADER
                          05         0163       
                          FED3   30  0164 27300 	BSBW	SMB$PAGEHDR		;PRINT THE HEADER
                          03     11  0167 27400 	BRB	40$
                                     0169 27500 30$:
                          FEB6   30  0169 27600 	BSBW	SMB$TOPOFORM		;DO THE FORM FEED
                                     016C 27700 40$:
SMBSUBR         - SYMBIONT SUBROUTINES                           21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page   7
01              SYMBIONT PRINT LINE ROUTINE                                                                                      (1)

                                 7D  016C 27800 	MOVQ	SD_G_RAB+RAB$W_RFA(R11),-
         4B AB       0158 CB         016D 27900 			SD_Q_TOP_FORMS(R11) ;SAVE THIS RFA FOR BACKING UP
                                     0172 28000 
                                     0172 28100 ;
                                     0172 28200 ; QUEUE THE LINE TO THE PRINTER
                                     0172 28300 ;
                                     0172 28400 50$:
                       3F AB     D6  0172 28500 	INCL	SD_L_QIOCNT(R11)	;ADD 1 FOR THE QIO COUNT
                       43 AB     96  0175 28550 	INCB	SD_B_LTPCNT(R11)	;ASSUME ONE LINE WILL BE PRINTED
                                     0178 28600 	$QIO_G	SD_G_QIOBLK(R11)	;ISSUE THE QIO
            13            50     E8  0181 28700 	BLBS	R0,60$			;BR IF OK
                                     0184 28800 	SETBIT	SD_V_PRINTERR,SD_B_ERR_FLAGS(R11) ;SET PRINT ERROR
                                     0188 28900 	SIGNAL	JBC$_PRINTOUT,#0,R0	;SIGNAL THE ERROR
                                     0197 29000 60$:
                                 05  0197 29100 	RSB
                                     0198 29200 
                                     0198 29300 	.DSABL	LSB
SMBSUBR         - SYMBIONT SUBROUTINES                           21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page   8
01              SEND MESSAGE TO SYMBIONT MANAGER                                                                                 (1)

                                     0198 29500 	.SBTTL	SEND MESSAGE TO SYMBIONT MANAGER
                                     0198 29600 ;++
                                     0198 29700 ; FUNCTIONAL DESCRIPTION:
                                     0198 29800 ;
                                     0198 29900 ;	THIS ROUTINE IS CALLED TO SEND A MESSAGE TO
                                     0198 30000 ;	THE SYMBIONT MANAGER
                                     0198 30100 ;
                                     0198 30200 ; CALLING SEQUENCE:
                                     0198 30300 ;
                                     0198 30400 ;	BSB/JSB	SMB$FILE_DONE
                                     0198 30500 ;	BSB/JSB SMB$INIT_DONE
                                     0198 30600 ;
                                     0198 30700 ; INPUT PARAMETERS:
                                     0198 30800 ;
                                     0198 30900 ;	R3 - SMB$FILE_DONE - REASON FOR TERMINATION
                                     0198 31000 ;	R0 - SMB$INIT_DONE - MAILBOX UNIT NUMBER
                                     0198 31100 ;
                                     0198 31200 ; IMPLICIT INPUTS:
                                     0198 31300 ;
                                     0198 31400 ;	R11 CONTAINS THE ADDRESS OF THE SYMBIONT IMPURE DATA
                                     0198 31500 ;
                                     0198 31600 ; OUTPUT PARAMETERS:
                                     0198 31700 ;
                                     0198 31800 ;	NONE
                                     0198 31900 ;
                                     0198 32000 ; IMPLICIT OUTPUTS:
                                     0198 32100 ;
                                     0198 32200 ;	NONE
                                     0198 32300 ;
                                     0198 32400 ; COMPLETION CODES:
                                     0198 32500 ;
                                     0198 32600 ;	NONE
                                     0198 32700 ;
                                     0198 32800 ; SIDE EFFECTS:
                                     0198 32900 ;
                                     0198 33000 ;	R2 DESTROYED
                                     0198 33100 ;
                                     0198 33200 ;--
                                     0198 33300  
                                     0198 33400 	PURE_SECTION
                                     0198 33500 
                                     0198 33600 	.ENABL	LSB
                                     0198 33700 
                                     0198 33800 SMB$FILE_DONE::
            50       01CA CB     DE  0198 33900 	MOVAL	SD_G_MSGTOMGR(R11),R0	;GET ADDRESS OF MESSAGE BUFFER
         02 A0            53     B0  019D 34000 	MOVW	R3,2(R0)		;SET REASON FOR TERMINATION
         04 A0         3B AB     D0  01A1 34100 	MOVL	SD_L_GETCNT(R11),4(R0)	;SET GET COUNT IN MSG
         08 A0         3F AB     D0  01A6 34200 	MOVL	SD_L_QIOCNT(R11),8(R0)	;SET QIO COUNT IN MSG
            51         49 AB     9A  01AB 34300 	MOVZBL	SD_B_PAGELEN(R11),R1	;GET PAGE LENGTH
         0E A0            51     B0  01AF 34400 	MOVW	R1,14(R0)		;SET PAGE LENGTH IN MSG
            52         45 AB     D0  01B3 34500 	MOVL	SD_L_LINECNT(R11),R2	;GET TOTAL LINES PRINTED
            52            51     C6  01B7 34600 	DIVL	R1,R2			;CALC NUMBER OF PAGES PRINTED
         0C A0            52     B0  01BA 34700 	MOVW	R2,12(R0)		;SET PAGE COUNT IN MSG
            51            10     9A  01BE 34800 	MOVZBL	#16,R1			;SET MSG LENGTH
         0D AB       0070 8F     B0  01C1 34900 	MOVW	#SIM$K_SIZE,SD_W_MBREADLEN(R11) ;SET READ LENGTH FOR INIT MSG
            50            09     B0  01C7 35000 	MOVW	#MSG$_SMBDON,R0		;SET SYMBIONT DONE MESSAGE
                          0B     11  01CA 35100 	BRB	10$
SMBSUBR         - SYMBIONT SUBROUTINES                           21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page   9
01              SEND MESSAGE TO SYMBIONT MANAGER                                                                                 (1)

                                     01CC 35200 
                                     01CC 35300 SMB$INIT_DONE::
       01CC CB            50     B0  01CC 35400 	MOVW	R0,SD_G_MSGTOMGR+2(R11)	;SET MB UNIT NUMBER IN INIT DONE MSG
            50            08     3C  01D1 35500 	MOVZWL	#MSG$_SMBINI,R0		;SET INIT DONE MESSAGE
            51            04     9A  01D4 35600 	MOVZBL	#4,R1			;SET MSG LENGTH
                                     01D7 35700 10$:
       01CA CB            50     B0  01D7 35800 	MOVW	R0,SD_G_MSGTOMGR+0(R11)	;SET MESSAGE
                                     01DC 35900 	$QIOW_S		-		;SEND MESSAGE TO MANAGER
                                     01DC 36000 	EFN=#SMB$K_MBEFN,-		;EVENT FLAG
                                     01DC 36100 	CHAN = SD_W_JBCCHAN(R11),-	;CHANNEL TO SYMBIONT MANAGER
                                     01DC 36200 	FUNC = #IO$_WRITEVBLK!IO$M_NOW,-;WRITE OPERATION
                                     01DC 36300 	IOSB=SD_Q_MIOSB(R11),-		;IOSB
                                     01DC 36400 	P1   = SD_G_MSGTOMGR(R11),-	;BUFFER
                                     01DC 36500 	P2   =R1			;BYTE COUNT
                                     01FD 36600 
            07            50     E9  01FD 36700 	BLBC	R0,20$			;BR IF ERROR
            50         05 AB     3C  0200 36800 	MOVZWL	SD_Q_MIOSB(R11),R0	;GET I/O STATUS
            0F            50     E8  0204 36900 	BLBS	R0,30$			;BR IF OK
                                     0207 37000 20$:	SIGNAL	JBC$_MBWRITE,#0,R0	;SIGNAL THE ERROR
                                 05  0216 37100 30$:	RSB
                                     0217 37200 
                                     0217 37300 
                                     0217 37400 	.DSABL	LSB
SMBSUBR         - SYMBIONT SUBROUTINES                           21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page  10
01              SET UNSOLICITED DATA AST FOR MAILBOX                                                                             (1)

                                     0217 37600 	.SBTTL	SET UNSOLICITED DATA AST FOR MAILBOX
                                     0217 37700 ;++
                                     0217 37800 ; FUNCTIONAL DESCRIPTION: ROUTINE TO SET MAILBOX AST
                                     0217 37900 ;
                                     0217 38000 ;
                                     0217 38100 ; CALLING SEQUENCE:
                                     0217 38200 ;
                                     0217 38300 ;	BSB/JSB	SMB$SETMBAST
                                     0217 38400 ;
                                     0217 38500 ; INPUT PARAMETERS:
                                     0217 38600 ;
                                     0217 38700 ;	NONE
                                     0217 38800 ;
                                     0217 38900 ; IMPLICIT INPUTS:
                                     0217 39000 ;
                                     0217 39100 ;	R11 - ADDRESS OF IMPURE DATA BLOCK
                                     0217 39200 ;
                                     0217 39300 ; OUTPUT PARAMETERS:
                                     0217 39400 ;
                                     0217 39500 ;	NONE
                                     0217 39600 ;
                                     0217 39700 ; IMPLICIT OUTPUTS:
                                     0217 39800 ;
                                     0217 39900 ;	NONE
                                     0217 40000 ;
                                     0217 40100 ; COMPLETION CODES:
                                     0217 40200 ;
                                     0217 40300 ;	MAILBOX AST SET
                                     0217 40400 ;
                                     0217 40500 ; SIDE EFFECTS:
                                     0217 40600 ;
                                     0217 40700 ;	NONE
                                     0217 40800 ;
                                     0217 40900 ;--
                                     0217 41000 
                                     0217 41100 
                                     0217 41200 
                                     0217 41300 SMB$SETMBAST::
                                     0217 41400 	$QIOW_S	-			;SET UNSOLICITED AST
                                     0217 41500 	EFN=#SMB$K_MBEFN,-		;EVENT FLAG
                                     0217 41600 	CHAN=SD_W_MBCHAN(R11),-		;CHANNEL
                                     0217 41700 	FUNC=#IO$_SETMODE,-		;SET UNSOLICITED AST
                                     0217 41800 	IOSB=SD_Q_MIOSB(R11),-		;IOSB
                                     0217 41900 	P1=SMB$MBAST			;AST ADDRESS
                                     0239 42000 
            07            50     E9  0239 42100 	BLBC	R0,10$			;BR IF ERROR
            50         05 AB     3C  023C 42200 	MOVZWL	SD_Q_MIOSB(R11),R0	;GET I/O STATUS
            0F            50     E8  0240 42300 	BLBS	R0,20$			;BR IF OK
                                     0243 42400 10$:	SIGNAL	JBC$_MBSETAST,#0,R0	;SIGNAL THE ERROR
                                 05  0252 42500 20$:	RSB
                                     0253 42600 
SMBSUBR         - SYMBIONT SUBROUTINES                           21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page  11
01              GET CHANNEL INFORMATION                                                                                          (1)

                                     0253 42800 	.SBTTL	GET CHANNEL INFORMATION
                                     0253 42900 ;++
                                     0253 43000 ; FUNCTIONAL DESCRIPTION: ROUTINE TO GET CHANNEL INFORMATION INTO
                                     0253 43100 ; THE TEMP BUFFER.
                                     0253 43200 ;
                                     0253 43300 ;
                                     0253 43400 ; CALLING SEQUENCE:
                                     0253 43500 ;
                                     0253 43600 ;	BSB/JSB	SMB$GETCHAN
                                     0253 43700 ;
                                     0253 43800 ; INPUT PARAMETERS:
                                     0253 43900 ;
                                     0253 44000 ;	R0 - ADDRESS OF CHANNEL
                                     0253 44100 ;
                                     0253 44200 ; IMPLICIT INPUTS:
                                     0253 44300 ;
                                     0253 44400 ;	R11 - ADDRESS OF IMPURE DATA BLOCK
                                     0253 44500 ;
                                     0253 44600 ; OUTPUT PARAMETERS:
                                     0253 44700 ;
                                     0253 44800 ;	CHANNEL INFO IN SD_G_TBUF(R11)
                                     0253 44900 ;
                                     0253 45000 ; IMPLICIT OUTPUTS:
                                     0253 45100 ;
                                     0253 45200 ;	NONE
                                     0253 45300 ;
                                     0253 45400 ; COMPLETION CODES:
                                     0253 45500 ;
                                     0253 45600 ;	NONE
                                     0253 45700 ;
                                     0253 45800 ; SIDE EFFECTS:
                                     0253 45900 ;
                                     0253 46000 ;	NONE
                                     0253 46100 ;
                                     0253 46200 ;--
                                     0253 46300 
                                     0253 46400 
                                     0253 46500 
                                     0253 46600 SMB$GETCHAN::
            51         29 AB     DE  0253 46700 	MOVAL	SD_W_TBUFSIZ(R11),R1	;SET ADDRESS OF TEMP BUF DESC
            71            61     B0  0257 46800 	MOVW	(R1),-(R1)		;SET BUFFER COUNT TO SIZE OF BUF
                                     025A 46900 	$GETCHN_S CHAN=(R0),SCDBUF=(R1)	;GET CHANNEL INFO
                                 05  026C 47000 	RSB
SMBSUBR         - SYMBIONT SUBROUTINES                           21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page  12
01              ASSIGN DEVICE                                                                                                    (1)

                                     026D 47200 	.SBTTL	ASSIGN DEVICE
                                     026D 47300 ;++
                                     026D 47400 ; FUNCTIONAL DESCRIPTION:
                                     026D 47500 ;
                                     026D 47600 ;	THIS ROUTINE IS CALLED TO ASSIGN A SPECIFIED CHANNEL TO
                                     026D 47700 ;	A DEVICE. THE ASSIGNMENT IS DONE WITH A PRECEEDING "_"
                                     026D 47800 ;	TO INSURE THAT THE DEVICE ASSIGNED IS THE ONE SPECIFIED.
                                     026D 47900 ;
                                     026D 48000 ; CALLING SEQUENCE:
                                     026D 48100 ;
                                     026D 48200 ;	BSB/JSB	SMB$ASSIGNDEV
                                     026D 48300 ;
                                     026D 48400 ; INPUT PARAMETERS:
                                     026D 48500 ;
                                     026D 48600 ;	R0 IS THE ADDRESS OF THE DEVICE NAME OF THE FORM:
                                     026D 48700 ;
                                     026D 48800 ;		.WORD	UNIT_NUMBER
                                     026D 48900 ;		.ASCII	<COUNT>/GENERIC_NAME/
                                     026D 49000 ;
                                     026D 49100 ;	R1 CONTAINS THE ADDRESS OF LONGWORD TO STORE ASSIGNED CHANNEL NUMBER.
                                     026D 49200 ;
                                     026D 49300 ; IMPLICIT INPUTS:
                                     026D 49400 ;
                                     026D 49500 ;	NONE
                                     026D 49600 ;
                                     026D 49700 ; OUTPUT PARAMETERS:
                                     026D 49800 ;
                                     026D 49900 ;	THE SPECIFIED LOCATION CONTAINS THE CHANNEL NUMBER.
                                     026D 50000 ;
                                     026D 50100 ; IMPLICIT OUTPUTS:
                                     026D 50200 ;
                                     026D 50300 ;	THE CHANNEL IS ASSINGED
                                     026D 50400 ;
                                     026D 50500 ; COMPLETION CODES:
                                     026D 50600 ;
                                     026D 50700 ;	R0 RETURNED AS SET BY THE SYSTEM SERVICE ASSIGN CHANNEL.
                                     026D 50800 ;
                                     026D 50900 ; SIDE EFFECTS:
                                     026D 51000 ;
                                     026D 51100 ;	R2 DESTROYED
                                     026D 51200 ;
                                     026D 51300 ;--
                                     026D 51400 	PURE_SECTION
                                     026D 51500  
                                     026D 51600 SMB$ASSIGNDEV::				;ENTER WITH JSB/BSB
            5E            14     C2  026D 51700 	SUBL	#20,SP			;MAKE DEVICE NAME BUFFER IN STACK
            52            5E     D0  0270 51800 	MOVL	SP,R2			;SET BUFFER POINTER
                          06     BB  0273 51900 	PUSHR	#^M<R1,R2>		;PUSH BUFFER ADDRESS FOR DESCRIPTOR
                                     0275 52000 					;AND SAVE CHANNEL NUMBER ADDRESS
            51            80     9A  0275 52100 	MOVZBL	(R0)+,R1		;GET LENGTH OF GENERIC NAME
            82         5F 8F     90  0278 52200 	MOVB	#^A/_/,(R2)+		;START NAME WITH UNDERSCORE TO PREVENT
                                     027C 52300 					;LOGICAL NAME TRANSLATION
            82            80     90  027C 52400 10$:	MOVB	(R0)+,(R2)+		;APPEND DEVICE NAME TO UNDERSCORE
            FA            51     F5  027F 52500 	SOBGTR	R1,10$			;MOVE ENTIRE NAME
            82            3A     90  0282 52600 	MOVB	#^A/:/,(R2)+		;DEVICE NAMES GET A COLON ON END
                          02     BA  0285 52700 	POPR	#^M<R1>			;RESTORE CHANNEL NUMBER
            52            6E     C3  0287 52800 	SUBL3	(SP),R2,-(SP)		;COMPUTE COUNT FOR STRING DESCRIPTOR
SMBSUBR         - SYMBIONT SUBROUTINES                           21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page  13
01              ASSIGN DEVICE                                                                                                    (1)

                          7E         028A       
            50            5E     D0  028B 52900 	MOVL	SP,R0			;GET ADDRESS OF DEVICE NAME DESCRIPTOR
                                     028E 53000 	$ASSIGN_S  (R0),(R1)		;NOW ASSIGN THE CHANNEL
            5E            1C     C0  029B 53100 	ADDL	#20+8,SP		;CLEAR BUFFER & DESCRIPTOR FROM STACK
                                 05  029E 53200 	RSB
                                     029F 53300 
                                     029F 53400 	.END
SMBSUBR         - SYMBIONT SUBROUTINES                           21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                     (1)

$$ARGS         = 0000000C            FAB$M_INP      = 00080000            FAB$V_MXV      = 00000001            
$$ARGS$$       = 00000003            FAB$M_JNL      = 00400000            FAB$V_NAM      = 00000018            
$$T1           = 00000001            FAB$M_KFO      = 40000000            FAB$V_NEF      = 0000000A            
BIT...         = 000484F0            FAB$M_MSE      = 00000010            FAB$V_NFS      = 00000010            
FAB$B_BID        00000000            FAB$M_MXV      = 00000002            FAB$V_NIL      = 00000005            
FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            FAB$V_OFP      = 0000001D            
FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            FAB$V_ORG      = 00000004            
FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            FAB$V_POS      = 00000008            
FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            FAB$V_PPF      = 00000012            
FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            FAB$V_PPF_IND  = 0000000E            
FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            FAB$V_PPF_RAT  = 00000006            
FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            FAB$V_PRN      = 00000002            
FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            FAB$V_PUT      = 00000000            
FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            FAB$V_RCK      = 00000017            
FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            FAB$V_RWC      = 0000000B            
FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            FAB$V_RWO      = 00000007            
FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            FAB$V_SCF      = 0000000E            
FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            FAB$V_SHRDEL   = 00000002            
FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            FAB$V_SHRGET   = 00000001            
FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            FAB$V_SHRPUT   = 00000000            
FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            FAB$V_SHRUPD   = 00000003            
FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            FAB$V_SPL      = 0000000D            
FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            FAB$V_SQO      = 00000006            
FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            FAB$V_SUP      = 00000002            
FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            FAB$V_TEF      = 0000001C            
FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            FAB$V_TMD      = 00000004            
FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            FAB$V_TMP      = 00000003            
FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            FAB$V_TRN      = 00000004            
FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            FAB$V_UFM      = 0000001A            
FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            FAB$V_UFO      = 00000011            
FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            FAB$V_UPD      = 00000003            
FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            FAB$V_UPI      = 00000006            
FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            FAB$V_WCK      = 00000009            
FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            FAB$W_BLS        0000003C            
FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            FAB$W_DEQ        00000014            
FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            FAB$W_IFI        00000002            
FAB$L_MRN        00000038            FAB$S_ORG      = 00000004            FAB$W_MRS        00000036            
FAB$L_NAM        00000028            FAB$S_PPF_RAT  = 00000008            GBL...         = 00000000            
FAB$L_SDC        00000044            FAB$V_BIO      = 00000005            HEADER_DESC      00000000 R     03   
FAB$L_STS        00000008            FAB$V_BLK      = 00000003            IO$M_NOW         ********   X   03   
FAB$L_STV        0000000C            FAB$V_BRO      = 00000006            IO$_SETMODE      ********   X   03   
FAB$L_XAB        00000024            FAB$V_CBT      = 00000015            IO$_WRITELBLK    ********   X   03   
FAB$M_BIO      = 00000020            FAB$V_CIF      = 00000019            IO$_WRITEVBLK    ********   X   03   
FAB$M_BLK      = 00000008            FAB$V_CR       = 00000001            JBC$_ACMINVOP  = 00048088            
FAB$M_BRO      = 00000040            FAB$V_CTG      = 00000014            JBC$_ACNTOPN   = 00048478            
FAB$M_CBT      = 00200000            FAB$V_DEL      = 00000002            JBC$_ACNTWRT   = 00048480            
FAB$M_CIF      = 02000000            FAB$V_DFW      = 00000005            JBC$_ENTQUE    = 000484A8            
FAB$M_CR       = 00000002            FAB$V_DLT      = 0000000F            JBC$_ILLDEVNAM = 00048000            
FAB$M_CTG      = 00100000            FAB$V_DMO      = 0000000C            JBC$_ILLDEVTYP = 00048008            
FAB$M_DEL      = 00000004            FAB$V_ESC      = 0000001B            JBC$_ILLFILNAM = 00048010            
FAB$M_DFW      = 00000020            FAB$V_EXE      = 00000007            JBC$_ILLQUENAM = 00048018            
FAB$M_DLT      = 00008000            FAB$V_FTN      = 00000000            JBC$_INPASGN   = 00048488            
FAB$M_DMO      = 00001000            FAB$V_GET      = 00000001            JBC$_INPREAD   = 00048490            
FAB$M_ESC      = 08000000            FAB$V_INP      = 00000013            JBC$_INVMSG    = 00048418            
FAB$M_EXE      = 00000080            FAB$V_JNL      = 00000016            JBC$_INVSCT    = 00048468            
FAB$M_FTN      = 00000001            FAB$V_KFO      = 0000001E            JBC$_JOBABORT  = 00048080            
FAB$M_GET      = 00000002            FAB$V_MSE      = 00000004            JBC$_JOBCRD    = 000484B0            
SMBSUBR         - SYMBIONT SUBROUTINES                           21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                     (1)

JBC$_LOSTREC   = 00048438            MSG$_PROTOCOL  = 00000037            NAM$M_WILD_GRP = 01000000            
JBC$_MBASGN    = 00048400            MSG$_REJECT    = 00000038            NAM$M_WILD_MBR = 02000000            
JBC$_MBDEAS    = 00048460            MSG$_RESOPR    = 00000013            NAM$M_WILD_NAME= 00000020            
JBC$_MBREAD    = 00048408            MSG$_SCANBAD   = 00000028            NAM$M_WILD_SFD1= 02000000            
JBC$_MBSETAST  = 000484C8            MSG$_SCANRSP   = 00000029            NAM$M_WILD_SFD2= 04000000            
JBC$_MBWRITE   = 000484D0            MSG$_SMBDON    = 00000009            NAM$M_WILD_SFD3= 08000000            
JBC$_MULTREC   = 00048430            MSG$_SMBINI    = 00000008            NAM$M_WILD_SFD4= 10000000            
JBC$_NOOPENJOB = 00048048            MSG$_SMBRSP    = 00000020            NAM$M_WILD_SFD5= 20000000            
JBC$_NOPRIV    = 00048020            MSG$_SNDACC    = 0000000A            NAM$M_WILD_SFD6= 40000000            
JBC$_NOQUEHDR  = 00048028            MSG$_SNDSMB    = 00000004            NAM$M_WILD_SFD7= 80000000            
JBC$_NOQUESPACE= 00048030            MSG$_SUSOPR    = 00000012            NAM$M_WILD_TYPE= 00000010            
JBC$_NORMAL    = 00040001            MSG$_THIRDPARTY= 00000039            NAM$M_WILD_UFD = 01000000            
JBC$_NOSUCHJOB = 00048040            MSG$_TIMEOUT   = 0000003A            NAM$M_WILD_VER = 00000008            
JBC$_NOSUCHQUE = 00048038            MSG$_TRMHANGUP = 00000006            NAM$S_DIR_LVLS = 00000003            
JBC$_PASSCRD   = 000484B8            MSG$_TRMUNSOLIC= 00000001            NAM$T_DVI        00000014            
JBC$_PRCREAT   = 00048410            MSG$_XM_ATTN   = 0000000D            NAM$V_DIR_LVLS = 00000015            
JBC$_PRINTOUT  = 000484E0            MSG$_XM_DATAVL = 0000000B            NAM$V_EXP_DEV  = 00000007            
JBC$_QUECNT    = 00048428            MSG$_XM_SHUTDN = 0000000C            NAM$V_EXP_DIR  = 00000006            
JBC$_QUEERR    = 00048458            NAM$B_BID        00000000            NAM$V_EXP_NAME = 00000002            
JBC$_QUENOSTOP = 00048050            NAM$B_BLN        00000001            NAM$V_EXP_TYPE = 00000001            
JBC$_QUEUPD    = 000484E8            NAM$B_CURLVL     00000038            NAM$V_EXP_VER  = 00000000            
JBC$_SCTERR    = 00048450            NAM$B_ESL        0000000B            NAM$V_GRP_MBR  = 00000013            
JBC$_SMINVOPR  = 00048058            NAM$B_ESS        0000000A            NAM$V_HIGHVER  = 0000000F            
JBC$_SMINVOPT  = 00048060            NAM$B_RSL        00000003            NAM$V_LOWVER   = 0000000E            
JBC$_SMINVREQ  = 00048068            NAM$B_RSS        00000002            NAM$V_NODE     = 00000011            
JBC$_SMZEROJOB = 00048070            NAM$C_BID      = 00000002            NAM$V_PPF      = 00000010            
JBC$_SNDRESP   = 00048420            NAM$C_BLN        00000038            NAM$V_QUOTED   = 00000012            
JBC$_SYMBASN   = 00048440            NAM$C_BLN_DIRWC  00000050            NAM$V_WILDCARD = 00000008            
JBC$_SYMBCRE   = 000484D8            NAM$C_DVI      = 00000010            NAM$V_WILD_DIR = 00000014            
JBC$_SYMBDSAB  = 00048078            NAM$C_MAXRSS   = 00000080            NAM$V_WILD_GRP = 00000018            
JBC$_SYMBWRT   = 00048448            NAM$C_MAXRSSLCL= 00000060            NAM$V_WILD_MBR = 00000019            
JBC$_SYMDEL    = 00048470            NAM$K_BLN        00000038            NAM$V_WILD_NAME= 00000005            
JBC$_UAFOPN    = 000484A0            NAM$K_BLN_DIRWC  00000050            NAM$V_WILD_SFD1= 00000019            
JBC$_UNESYMMSG = 000484C0            NAM$L_DIRWCC1    00000040            NAM$V_WILD_SFD2= 0000001A            
JBC$_USERVAL   = 00048498            NAM$L_DIRWCC2    00000044            NAM$V_WILD_SFD3= 0000001B            
LIB$SIGNAL       ********   X   03   NAM$L_DIRWCC3    00000048            NAM$V_WILD_SFD4= 0000001C            
MOD$_ABORT     = 00000004            NAM$L_DIRWCC4    0000004C            NAM$V_WILD_SFD5= 0000001D            
MOD$_INPERR    = 0000000C            NAM$L_DWC        00000038            NAM$V_WILD_SFD6= 0000001E            
MOD$_PRTERR    = 00000014            NAM$L_ESA        0000000C            NAM$V_WILD_SFD7= 0000001F            
MOD$_SUCCESS   = 00000001            NAM$L_FNB        00000034            NAM$V_WILD_TYPE= 00000004            
MSG$_ABOOPR    = 00000011            NAM$L_RLF        00000010            NAM$V_WILD_UFD = 00000018            
MSG$_ABORT     = 00000030            NAM$L_RSA        00000004            NAM$V_WILD_VER = 00000003            
MSG$_ACCRSP    = 00000021            NAM$L_WCC        00000030            NAM$W_DID        0000002A            
MSG$_CONFIRM   = 00000031            NAM$M_DIR_LVLS = 00E00000            NAM$W_DID_NUM    0000002A            
MSG$_CONNECT   = 00000032            NAM$M_EXP_DEV  = 00000080            NAM$W_DID_RVN    0000002E            
MSG$_CRUNSOLIC = 00000002            NAM$M_EXP_DIR  = 00000040            NAM$W_DID_SEQ    0000002C            
MSG$_DELPROC   = 00000003            NAM$M_EXP_NAME = 00000004            NAM$W_FID        00000024            
MSG$_DELSMB    = 00000014            NAM$M_EXP_TYPE = 00000002            NAM$W_FID_NUM    00000024            
MSG$_DEVOFFLIN = 00000005            NAM$M_EXP_VER  = 00000001            NAM$W_FID_RVN    00000028            
MSG$_DEVONLIN  = 00000007            NAM$M_GRP_MBR  = 00080000            NAM$W_FID_SEQ    00000026            
MSG$_DISCON    = 00000033            NAM$M_HIGHVER  = 00008000            NAM$W_PRV_DID    0000003A            
MSG$_EXIT      = 00000034            NAM$M_LOWVER   = 00004000            PQR$M_BRSTPAG  = 00000004            
MSG$_INIOPR    = 00000010            NAM$M_NODE     = 00020000            PQR$M_DELETE   = 00000001            
MSG$_INTMSG    = 00000035            NAM$M_PPF      = 00010000            PQR$M_DOUBLE   = 00000008            
MSG$_OPREPLY   = 00000009            NAM$M_QUOTED   = 00040000            PQR$M_FLAGPAG  = 00000002            
MSG$_OPRQST    = 00000008            NAM$M_WILDCARD = 00000100            PQR$M_NOFEED   = 00000010            
MSG$_PATHLOST  = 00000036            NAM$M_WILD_DIR = 00100000            PQR$M_PAGHDR   = 00000020            
SMBSUBR         - SYMBIONT SUBROUTINES                           21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                     (1)

PQR$V_BRSTPAG  = 00000002            RAB$M_KGE      = 00200000            SD_A_TBUFADR     0000002B            
PQR$V_DELETE   = 00000000            RAB$M_KGT      = 00400000            SD_B_ERR_FLAGS   00000002            
PQR$V_DOUBLE   = 00000003            RAB$M_LIM      = 00004000            SD_B_GEN_FLAGS   00000003            
PQR$V_FLAGPAG  = 00000001            RAB$M_LOA      = 00002000            SD_B_LTPCNT      00000043            
PQR$V_NOFEED   = 00000004            RAB$M_LOC      = 00010000            SD_B_MAXLTP      00000044            
PQR$V_PAGHDR   = 00000005            RAB$M_MAS      = 00000020            SD_B_PAGELEN     00000049            
QIO$_ASTADR    = 00000014            RAB$M_NLK      = 00100000            SD_B_PAGEWIDTH   0000004A            
QIO$_ASTPRM    = 00000018            RAB$M_NXR      = 00800000            SD_B_STATE       00000004            
QIO$_CHAN      = 00000008            RAB$M_PMT      = 40000000            SD_G_FAB         000000F8            
QIO$_EFN       = 00000004            RAB$M_PPF_IND  = 00004000            SD_G_MSGTOMGR    000001CA            
QIO$_FUNC      = 0000000C            RAB$M_PPF_RAT  = 00003FC0            SD_G_NAM         0000018C            
QIO$_IOSB      = 00000010            RAB$M_PTA      = 20000000            SD_G_QIOBLK      000000C4            
QIO$_NARGS     = 0000000C            RAB$M_RAH      = 00000200            SD_G_RAB         00000148            
QIO$_P1        = 0000001C            RAB$M_RLK      = 00080000            SD_K_SIZE        0000030A            
QIO$_P2        = 00000020            RAB$M_RNE      = 01000000            SD_L_GETCNT      0000003B            
QIO$_P3        = 00000024            RAB$M_RNF      = 08000000            SD_L_LINECNT     00000045            
QIO$_P4        = 00000028            RAB$M_TMO      = 02000000            SD_L_QIOCNT      0000003F            
QIO$_P5        = 0000002C            RAB$M_TPT      = 00000002            SD_M_ABORT     = 00000001            
QIO$_P6        = 00000030            RAB$M_UIF      = 00000010            SD_M_GETERR    = 00000002            
RAB$B_BID        00000000            RAB$M_ULK      = 00040000            SD_M_OPENERR   = 00000004            
RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            SD_M_PRINTERR  = 00000008            
RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            SD_Q_FILENAME    00000302            
RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            SD_Q_IOSB0       00000017            
RAB$B_MBC        00000037            RAB$V_ASY      = 00000000            SD_Q_IOSB1       0000001F            
RAB$B_MBF        00000036            RAB$V_BIO      = 0000000B            SD_Q_MIOSB       00000005            
RAB$B_PSZ        00000034            RAB$V_CCO      = 0000001F            SD_Q_PTIME       0000002F            
RAB$B_RAC        0000001E            RAB$V_CVT      = 0000001A            SD_Q_TBUFDES     00000027            
RAB$B_ROP1       00000005            RAB$V_EOF      = 00000008            SD_Q_TOFIOSB     0000000F            
RAB$B_ROP2       00000006            RAB$V_FDL      = 00000006            SD_Q_TOP_FORMS   0000004B            
RAB$B_ROP3       00000007            RAB$V_HSH      = 00000007            SD_T_HDBUF       000002CA            
RAB$B_TMO        0000001F            RAB$V_KGE      = 00000015            SD_T_LBUF        000001CA            
RAB$C_BID      = 00000001            RAB$V_KGT      = 00000016            SD_T_MSGDATA     00000053            
RAB$C_BLN        00000044            RAB$V_LIM      = 0000000E            SD_T_SQBUF       000001C4            
RAB$C_KEY      = 00000001            RAB$V_LOA      = 0000000D            SD_T_TBUF        000001CA            
RAB$C_RFA      = 00000002            RAB$V_LOC      = 00000010            SD_V_ABORT     = 00000000            
RAB$C_SEQ      = 00000000            RAB$V_MAS      = 00000005            SD_V_FFREQ     = 00000003            
RAB$K_BLN        00000044            RAB$V_NLK      = 00000014            SD_V_FLGPAGDONE= 00000000            
RAB$L_BKT        00000038            RAB$V_NXR      = 00000017            SD_V_GETERR    = 00000001            
RAB$L_CTX        00000018            RAB$V_PMT      = 0000001E            SD_V_GOOD_WAKE = 00000001            
RAB$L_DCT        00000038            RAB$V_PPF_IND  = 0000000E            SD_V_INTRNLCC  = 00000002            
RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            SD_V_OPENERR   = 00000002            
RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            SD_V_PRINTERR  = 00000003            
RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            SD_W_HEAD_L      000002FE            
RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            SD_W_JBCCHAN     00000037            
RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            SD_W_MBCHAN      00000000            
RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            SD_W_MBREADLEN   0000000D            
RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            SD_W_MBUNIT      00000039            
RAB$L_STS        00000008            RAB$V_TPT      = 00000001            SD_W_PAGE        00000300            
RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            SD_W_TBUFCNT     00000027            
RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            SD_W_TBUFSIZ     00000029            
RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            SIM$B_FILCOPY    00000039            
RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            SIM$B_FLAGS      00000038            
RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            SIM$G_DIRID      00000032            
RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            SIM$G_FILEID     0000002C            
RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            SIM$K_SIZE       00000070            
RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            SIM$L_UIC        00000004            
RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            SIM$Q_QTIME      00000014            
SMBSUBR         - SYMBIONT SUBROUTINES                           21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page  17
SYMBOL TABLE                                                                                                                     (1)

SIM$T_ACNTNAM    00000060            
SIM$T_FILNAM     0000004C            
SIM$T_PRTNAM     0000003C            
SIM$T_USERNAM    00000008            
SIM$T_VOLNAM     0000001C            
SIM$W_MSGTYP     00000000            
SIM$W_PAGCNT     0000003A            
SIM$W_REST       00000002            
SMB$ASSIGNDEV    0000026D RG    03   
SMB$FILE_DONE    00000198 RG    03   
SMB$GETCHAN      00000253 RG    03   
SMB$INIT_DONE    000001CC RG    03   
SMB$K_ACNTNAMSZ= 00000008            
SMB$K_GENEFN   = 00000000            
SMB$K_HEADERSZ = 00000034            
SMB$K_LBUFSIZ  = 00000100            
SMB$K_LPEFN0   = 00000001            
SMB$K_LPEFN1   = 00000002            
SMB$K_MBEFN    = 00000003            
SMB$K_TBUFSIZ  = 00000100            
SMB$K_TIMEFN   = 00000005            
SMB$K_TOFEFN   = 00000004            
SMB$K_USERNAMSZ= 0000000C            
SMB$MBAST        ********   X   03   
SMB$PAGEHDR      0000003A RG    03   
SMB$PAGEHDRNFF   00000033 RG    03   
SMB$SETMBAST     00000217 RG    03   
SMB$TOPOFORM     00000022 RG    03   
SMB$WRITELINE    0000010C RG    03   
SMB$WRITELINN    000000C6 RG    03   
SMB$WRITELINS    000000CB RG    03   
STATE$_ASNDEV  = 00000001            
STATE$_EOF_CLOS= 00000005            
STATE$_FLAGPAGE= 00000003            
STATE$_GET_PRIN= 00000004            
STATE$_IDLE    = 00000000            
STATE$_OPEN    = 00000002            
STATE$_SUSPEND = 00000006            
SYS$ASSIGN       ********   X   03   
SYS$FAO          ********   X   03   
SYS$GETCHN       ********   X   03   
SYS$QIO          ********   X   03   
SYS$QIOW         ********   X   03   
SYS$WAITFR       ********   X   03   
_$$_           = 000000EF            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            0000030A      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
SMB_PURE         0000029F      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT LONG  


THERE WERE NO ERRORS OR WARNINGS.
10380. BYTES LEFT IN FREE MEMORY POOL.
SMBSUBR         - SYMBIONT SUBROUTINES                           21-AUG-1978 21:36:58   VAX-11 MACRO X0.3-11               Page  18
PROGRAM SECTION SYNOPSIS                                                                                                         (1)

186. BYTES OF RECLAIMED MEMORY.
OBJ$:SMBSUBR,LIS$:SMBSUBR/-SP=SRC$:SMBPRE,SMBSUBR
18 MLB DIR RDS - 687 GETS TO DEFINE 26 MACROS. 69 INTER. FILE WRITES. 
