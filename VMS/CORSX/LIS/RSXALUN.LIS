RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 00:22:32   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)     140  RSX11M ALUN$ DIRECTIVE
   (4)     365  RSX$ASSIGN - ASSIGN SPECIFIED DEVICE AND BUILD 
   (5)     408  RSX$SEARCHDEV - SEARCH LOGICAL NAME LIST FOR MA
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 00:22:32   VAX-11 MACRO X0.3-11               Page   1
V00.1                                                                                                                            (1)

                                     0000     1 	.TITLE RSXALUN - RSX11M/AME ASSIGN LUN DIRECTIVE
                                     0000     2 	.IDENT	/V00.1/		;
                                     0000     3 ;
                                     0000     4 ; COPYRIGHT (C) 1977
                                     0000     5 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     6 ;
                                     0000     7 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     8 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000     9 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    10 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    11 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    12 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    13 ; REMAIN IN DEC.
                                     0000    14 ;
                                     0000    15 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    16 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    17 ; CORPORATION.
                                     0000    18 ;
                                     0000    19 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    20 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    21 
                                     0000    22 ;++
                                     0000    23 ; FACILITY:
                                     0000    24 ;
                                     0000    25 ; 	VAX/VMS RSX11M/AME.
                                     0000    26 ;
                                     0000    27 ; ABSTRACT:
                                     0000    28 ;
                                     0000    29 ;	RSX11M ASSIGN LUN DIRECTIVE.
                                     0000    30 ;
                                     0000    31 ; AUTHOR:
                                     0000    32 ;
                                     0000    33 ;	R.HEINEN 4-NOV-76
                                     0000    34 ;
                                     0000    35 ; MODIFICATIONS:
                                     0000    36 ;
                                     0000    37 ; 01	- 	C. MONIA 12-APR-1978
                                     0000    38 ;
                                     0000    39 ;		MODIFIED FOR STAND-ALONE VERSION
                                     0000    40 ;
                                     0000    41 ;--
                                     0000    42 ;
                                     0000    43 ; EXTERNAL SYMBOLS
                                     0000    44 ;
                                     0000    45 	$RSXDEF			; DEFINE RSX SYMBOLS
                                     0000    46 	DRERR$			; DEFINE DIRECTIVE ERRORS
                                     0000    47 	$DEVDEF			; DEFINE DEVICE CHARACTERISTICS BITS
                                     0000    48  
                                     0000    49 	
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 00:22:32   VAX-11 MACRO X0.3-11               Page   2
V00.1           RSX11M ALUN$ DIRECTIVE                                                                                           (2)

                                     0000    51 	.SBTTL RSX11M ALUN$ DIRECTIVE
                                     0000    52  
                                 00000000    53 	.PSECT	RSXCODE,NOWRT
                                     0000    54 ;++
                                     0000    55 ; RSX$ALUN - RSX ASSIGN LUN DIRECTIVE
                                     0000    56 ;
                                     0000    57 ; FUNCTIONAL DESCRIPTION:
                                     0000    58 ;
                                     0000    59 ; THIS ROUTINE HANDLES RSX11M "ALUN$" DIRECTIVES.
                                     0000    60 ;
                                     0000    61 ; THE FIRST ACTION IS TO VALIDATE THE DEVICE NAME, UNIT AND LUN.
                                     0000    62 ; NEXT, THE PREVIOUS LUN ASSIGNMENT IS DEASSIGNED AND THE CURRENT I/O CANCELED.
                                     0000    63 ;
                                     0000    64 ; THE NEXT STEP IS TO BUILD AN ASCII DEVICE NAME IN THE RSX11M STYLE
                                     0000    65 ; FROM THE DEVICE NAME AND UNIT PASSED IN. THIS STRING IS TRANSLATED AND
                                     0000    66 ; IF NO TRANSLATION RESULTS, THE DEVICE AND UNIT ARE MADE INTO A VAX/VMS
                                     0000    67 ; PHYSICAL DEVICE NAME AS FOLLOWS:
                                     0000    68 ;
                                     0000    69 ;	THE FIRST TWO CHARACTERS OF DEVICE NAME MAP DIRECTLY.
                                     0000    70 ;
                                     0000    71 ;	THE RSX UNIT IS DIVIDED BY 16 - THE QUOTIENT IS ADDED TO THE
                                     0000    72 ;	CHARACTER "A" AND THE RESULTANT CHARACTER IS CONSIDERED AS
                                     0000    73 ;	A CONTROLLER. THE REMAINDER IS CONSIDERED TO BE THE UNIT.
                                     0000    74 ;
                                     0000    75 ; IF A TRANSLATION RESLUTS, THE TRANSLATION IS DONE THREE TIMES AND THE
                                     0000    76 ; EFFECTIVE RESULT IS USED AS THE SOURCE FOR AN ASSIGN CHANNEL. 
                                     0000    77 ; AFTER EACH TRANSLATION, THE KNOWN AME LOGICAL DEVICE LIST IS SEARCHED TO
                                     0000    78 ; DETECT ASSIGNMENTS TO TI/CL/CO.
                                     0000    79 ;
                                     0000    80 ; INPUTS:
                                     0000    81 ;
                                     0000    82 ;	R5 = ADDRESS OF THE DPB
                                     0000    83 ;	R6 = ADDRESS OF THE IMAGE STACK
                                     0000    84 ;	R10 = ADDRESS OF THE IMAGE IMPURE DATA BASE
                                     0000    85 ;	R11 = ADDRESS OF THE IMAGE
                                     0000    86 ;
                                     0000    87 ; OUTPUTS:
                                     0000    88 ;
                                     0000    89 ;	R6,R10,R11 ARE PRESERVED.
                                     0000    90 ;
                                     0000    91 ; DSW RETURN CODES:
                                     0000    92 ;
                                     0000    93 ;	IS.SUC	SUCCESSFUL
                                     0000    94 ;	IE.ILU	ILLEGAL LUN NUMBER
                                     0000    95 ;	IE.IDU	UNKNOWN DEVICE
                                     0000    96 ;	IE.NOD	I/O CHANNEL QUOTA EXCEEDED -- SS$_NOIOCHAN
                                     0000    97 ;	IE.RSU	DEVICE IS ALLOCATED TO ANOTHER PROCESS -- SS$_DEVALLOC
                                     0000    98 ;	IE.DUN  DEVICE UNAVAILABLE
                                     0000    99 ;--
                                     0000   100 RSX$ALUN::				; ASSIGN LUN DIRECTIVE
            51            85     9A  0000   101 	MOVZBL	(R5)+,R1		; GET SPECIFIED LUN NUMBER
                          09     13  0003   102 	BEQL	5$			; IF EQL THEN ILLEGAL
                          55     D6  0005   103 	INCL	R5			; POINT TO DEVICENAME
       0140 CA            51     91  0007   104 	CMPB	R1,I_NLUN(R10)		; IN RANGE WITH HEADER DATA?
                          0B     1B  000C   105 	BLEQU	10$			; IF GTRU THEN NO
                                     000E   106 ;
                                     000E   107 ; ILLEGAL LUN NUMBER
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 00:22:32   VAX-11 MACRO X0.3-11               Page   3
V00.1           RSX11M ALUN$ DIRECTIVE                                                                                           (2)

                                     000E   108 ;
                                     000E   109 5$:	$DSW	#IE.ILU			; SET STATUS AND RETURN
                                     0019   110 ;
                                     0019   111 ; VALID DEVICE UNIT PAIR?
                                     0019   112 ;
                          65     B5  0019   113 10$:	TSTW	(R5)			; NO ZERO DEVICE NAMES
                          05     13  001B   114 	BEQL	12$			; IF NEQ THEN TRY IT
                       03 A5     95  001D   115 	TSTB	3(R5)			; UNIT NUMBER FIT IN A BYTE?
                          0B     13  0020   116 	BEQL	15$			; IF EQL THEN YES
                                     0022   117 ;
                                     0022   118 ; INVALID DEVICE/UNIT SPECIFIED
                                     0022   119 ;
                                     0022   120 12$:	$DSW	#IE.IDU			; SET UNKNOWN DEVICE
                                     002D   121 ;
                                     002D   122 ; LUN PREVIOUSLY ASSIGNED?
                                     002D   123 ;
            58       0144 DA41   D0  002D   124 15$:	MOVL	@I_LUT(R10)[R1],R8	; GET LUT ENTRY ADDRESS
                          27     13  0033   125 	BEQL	50$			; IF EQL THEN NOT ASSIGNED YET
                                     0035   126 ;
                                     0035   127 ; EXISTING ENTRY - DEASSIGN
                                     0035   128 ;
                     0144 DA41   D4  0035   129 	CLRL	@I_LUT(R10)[R1]		; DEASSIGN LUN!
                       08 A8     B7  003A   130 	DECW	LUT_REF(R8)		; ADJUST REFERENCE COUNT
                          1D     12  003D   131 	BNEQ	50$			; IF NEQ THEN STILL IN USE
                                     003F   132 ;
                                     003F   133 ; DEASSIGN PREVIOUS CHANNEL
                                     003F   134 ;
                       18 A8     95  003F   135 	TSTB	LUT_TYPE(R8)		; IF RMS TYPE THEN DO NOT DEASSIGN
                          18     13  0042   136 	BEQL	50$			; TREAT AS NEW
                                     0044   137 ;
                                     0044   138 ; SEE IF CONTROL C HAS BEEN ENABLED - TERMINALS ONLY
                                     0044   139 ;
         0A A8            02     E1  0044   140 	BBC	#LUTV_CTRLC,LUT_FLAGS(R8),40$; BR IF CTRLC NOT ENABLED
                          03         0048       
                          FFB4'  30  0049   141 	BSBW	RSX$CTRLCDSABL		; DISABLE THE CTRLC FUNCTION
                                     004C   142 ;
                                     004C   143 ; FINISH DEASSIGN
                                     004C   144 ;
                                     004C   145 40$:	$DASSGN_S	LUT_CHAN(R8)	; DEASSIGN CHANNEL
                                     0057   146 ;
                                     0057   147 ; INIT LUT ENTRY
                                     0057   148 ;
            50            68     0F  0057   149 	REMQUE	(R8),R0			; REMOVE AND ADDRESS PREVIOUS BLOCK
                          09     11  005A   150 	BRB	55$			; CLEAR THE ENTRY OUT
                                     005C   151 ;
                                     005C   152 ; ALLOCATE NEW LUT ENTRY BLOCK
                                     005C   153 ;
            51            38     9A  005C   154 50$:	MOVZBL	#LUT_SIZE,R1		; GET SIZE OF LUT ENTRY
                          FF9E'  30  005F   155 	BSBW	RSX$ALLOCATE		; ALLOCATE TABLE ENTRY
            58            50     D0  0062   156 	MOVL	R0,R8			; ADDRESS IT
                     0060 8F     BB  0065   157 55$:	PUSHR	#^M<R5,R6>		; SAVE REGISTERS
            60            00     2C  0069   158 	MOVC5	#0,(R0),#0,#LUT_SIZE,(R0); ZERO BLOCK
            38            00         006C       
                          60         006E       
                          20     BA  006F   159 	POPR	#^M<R5>			; RESTORE REGISTERS
                                     0071   160 ;
                                     0071   161 ; ASSIGN LUN STEP ONE ************************************************
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 00:22:32   VAX-11 MACRO X0.3-11               Page   4
V00.1           RSX11M ALUN$ DIRECTIVE                                                                                           (2)

                                     0071   162 ;
                                     0071   163 ; SEARCH KNOWN DEVICE/LOGICAL NAME LIST FOR MATCH
                                     0071   164 ;
            50            65     3C  0071   165 	MOVZWL	(R5),R0			; GET DEVICE NAME
            51         02 A5     9A  0074   166 	MOVZBL	2(R5),R1		; GET UNIT
         10 A8            50     B0  0078   167 	MOVW	R0,LUT_RSXNAME(R8)	; SAVE RSX NAME
         12 A8            51     B0  007C   168 	MOVW	R1,LUT_RSXUNIT(R8)	;
            6A            01     9A  0080   169 	MOVZBL	#1,I_SCRATCH(R10)	; SET NO STRING MATCH
         04 AA            6A     9E  0083   170 	MOVAB	I_SCRATCH(R10),I_SCRATCH+4(R10);
                          0111   30  0087   171 	BSBW	RSX$SEARCHDEV		; LOOK FOR DEVICE NAME
                          41     13  008A   172 	BEQL	ASSOCIATE		; SPECIAL CASE FOUND
                                     008C   173 ;
                                     008C   174 ; ASSIGN LUN STEP TWO ***********************************************
                                     008C   175 ;
                                     008C   176 ; NO LUN IS CURRENTLY ASSIGNED TO THE INITIALLY SPECIFIED DEVICE.
                                     008C   177 ;
                                     008C   178 ; BUILD AN ASCII DEVICE NAME AND TRANSLATE THE RESULT
                                     008C   179 ;
            53         10 AA     9E  008C   180 	MOVAB	I_SCRATCH+16(R10),R3	; ADDRESS PLACE FOR TARGET
            6A            53     D0  0090   181 	MOVL	R3,I_SCRATCH(R10)	; SET UP DESC
         04 AA            53     D0  0093   182 	MOVL	R3,I_SCRATCH+4(R10)	;
                          FF66'  30  0097   183 	BSBW	RSX$BLDASCDEV		; BUILD ASCII DEVICE NAME
            53            6A     C3  009A   184 	SUBL3	I_SCRATCH(R10),R3,I_SCRATCH(R10); CALC SIZE
                          6A         009D       
                          FF5F'  30  009E   185 	BSBW	RSX$TRNLOGONE		; TRANSLATE THE NAME ONCE
                                     00A1   186 ;
                                     00A1   187 ; IF THERE IS NO TRANSLATION THEN MAP DEVICE/UNIT TO PHYSICAL DEVICE
                                     00A1   188 ;
            07            50     E9  00A1   189 	BLBC	R0,65$			; IF LOW CLEAR THEN MAKE PHYSICAL
       0000'8F            50     B1  00A4   190 	CMPW	R0,#SS$_NORMAL		; ANY TRANSLATION?
                          18     13  00A9   191 	BEQL	80$			; IF YES THEN TRANSLATE AGAIN
                                     00AB   192 ;
                                     00AB   193 ; MAP DEVICE TO PHYSICAL DEVICE NAME DDCU:
                                     00AB   194 ;
            50            65     3C  00AB   195 65$:	MOVZWL	(R5),R0			; GET NAME
            51         02 A5     9A  00AE   196 	MOVZBL	2(R5),R1		; GET UNIT
            53         04 AA     D0  00B2   197 	MOVL	I_SCRATCH+4(R10),R3	; ADDRESS TARGET
            6A            53     D0  00B6   198 	MOVL	R3,I_SCRATCH(R10)	; SET UP DESC
                          FF44'  30  00B9   199 	BSBW	RSX$BLDPHYDEV		; BUILD PHYSICAL DEVICE
            53            6A     C3  00BC   200 	SUBL3	I_SCRATCH(R10),R3,I_SCRATCH(R10);
                          6A         00BF       
                          0029   31  00C0   201 	BRW	ASSIGN			; CONTINUE TO ASSIGN
                                     00C3   202 ;
                                     00C3   203 ; ASSIGN LUN STEP THREE *********************************************
                                     00C3   204 ;
                                     00C3   205 ; SINCE THE SPECIFIED DEVICE/UNIT TRANSLATED TO A NEW STRING,
                                     00C3   206 ;
                          FF3A'  30  00C3   207 80$:	BSBW	RSX$TRNLOGNAME		; TRANSLATE UNTIL FINAL
                                     00C6   208 ;
                                     00C6   209 ; MATCH IT WITH THE "REAL" NAME FIELD OF THE KNOWN ASSIGNMENTS.
                                     00C6   210 ;
                          50     7C  00C6   211 	CLRQ	R0			; SET UP NO NAME/UNIT MATCH
                          00D0   30  00C8   212 	BSBW	RSX$SEARCHDEV		; LOOK FOR STRING MATCH
                          1F     12  00CB   213 	BNEQ	ASSIGN			; IF NEQ THE ASSIGN DIRECTLY
                                     00CD   214 ;
                                     00CD   215 ; ASSOCIATE EXISTING ENTRY WITH NEW ASSIGNMENT
                                     00CD   216 ;
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 00:22:32   VAX-11 MACRO X0.3-11               Page   5
V00.1           RSX11M ALUN$ DIRECTIVE                                                                                           (2)

                                     00CD   217 ASSOCIATE:				;
         0A A6            03     E1  00CD   218 	BBC	#LUTV_PRM,LUT_FLAGS(R6),10$; BR IF NOT PERMANENT ENTRY
                          11         00D1       
         14 A6            00     E1  00D2   219 	BBC	#DEV$V_REC,LUT_CHAR(R6),10$; OR NOT RECORD
                          0C         00D6       
                                     00D7   220 ;
                                     00D7   221 ; PERMANENT RECORD DEVICES ARE TI/CL/CO AND THEIR EQUIVS.
                                     00D7   222 ;
            50            58     D0  00D7   223 	MOVL	R8,R0			; DEALLOCATE THE NEW ENTRY
            51            38     9A  00DA   224 	MOVZBL	#LUT_SIZE,R1		;
                          FF20'  30  00DD   225 	BSBW	RSX$DEALLOCATE		;
                          0011   31  00E0   226 	BRW	MERGE			; MERGE NEW ASSIGNMENT WITH EXISTING
         04 AA         21 A6     9E  00E3   227 10$:	MOVAB	LUT_REALNAME+1(R6),I_SCRATCH+4(R10); SET UP TO ASSIGN REAL NAME
            6A         20 A6     9A  00E8   228 	MOVZBL	LUT_REALNAME(R6),I_SCRATCH(R10);
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 00:22:32   VAX-11 MACRO X0.3-11               Page   6
V00.1           RSX11M ALUN$ DIRECTIVE                                                                                           (3)

                                     00EC   230 ;
                                     00EC   231 ; ASSIGN LUN STEP FOUR *************************************************
                                     00EC   232 ;
                                     00EC   233 ; ASSIGN CHANNEL TO WHATEVER IS NOW IN SCRATCH AREA
                                     00EC   234 ;
                                     00EC   235 ASSIGN:
                          6B     10  00EC   236 	BSBB	RSX$ASSIGN		; ASSIGN THE DEVICE
            14            50     E9  00EE   237 	BLBC	R0,ERROR		; IF ERROR THEN RETURN STATUS
            56            58     D0  00F1   238 	MOVL	R8,R6			; COPY ADDRESS OF LUT
                                     00F4   239 ;
                                     00F4   240 ; ASSOCIATE EXISTING LUT ENTRY WITH NEW ASSIGNMENT
                                     00F4   241 ;
                                     00F4   242 MERGE:					;
            51         FE A5     9A  00F4   243 	MOVZBL	-2(R5),R1		; GET LUN INDEX
       0144 DA41          56     D0  00F8   244 	MOVL	R6,@I_LUT(R10)[R1]	; INSERT POINTER AS ASSIGNMENT
                       08 A6     B6  00FE   245 	INCW	LUT_REF(R6)		; ADJUST REFERENCE COUNT
                          56   8ED0  0101   246 	POPL	R6			; RESTORE REGISTERS
                                 05  0104   247 	RSB				; RETURN
                                     0105   248 ;
                                     0105   249 ; MAP RETURN STATUS
                                     0105   250 ;
                                     0105   251 ERROR:					;
                          56   8ED0  0105   252 	POPL	R6			; RESTORE REGISTERS
            54            50     D0  0108   253 	MOVL	R0,R4			; SAVE STATUS VALUE
                                     010B   254 ;
                                     010B   255 ; DEALLOCATE THE BLOCK HELD FOR THE ASSIGN
                                     010B   256 ;
            50            58     D0  010B   257 	MOVL	R8,R0			; ADDRESS BLOCK
            51            38     9A  010E   258 115$:	MOVZBL	#LUT_SIZE,R1		; SET UP SIZE
                          FEEC'  30  0111   259 	BSBW	RSX$DEALLOCATE		; DEALLOCATE IT
                                     0114   260 ;
                                     0114   261 ; COMPLETE THE STATUS MAP
                                     0114   262 ;
            41            54     E8  0114   263 	BLBS	R4,150$			; BR IS SUCCESS
       0000'8F            54     B1  0117   264 	CMPW	R4,#SS$_DEVALLOC	; DEVICE ALLOCATED TO OTHER USER?
                          0B     12  011C   265 	BNEQ	120$			; IF NEQ THEN YES
                                     011E   266 	$DSW	#IE.RSU			; SET RESOURCE NOT AVAILABLE
       0000'8F            54     B1  0129   267 120$:	CMPW	R4,#SS$_DEVNOTMOUNT	; DEVICE NOT MOUNTED?
                          0B     12  012E   268 	BNEQ	130$			; IF NEQ THEN NO
                                     0130   269 	$DSWIO	#IE.DUN			; RETURN AS I/O TYPE ERROR
       0000'8F            54     B1  013B   270 130$:	CMPW	R4,#SS$_NOIOCHAN	; NO CHANNEL AVAILBLE?
                          0B     12  0140   271 	BNEQ	140$			; IF NEQ THEN NO
                                     0142   272 	$DSWIO	#IE.NOD			; SET NO QUOTA FOR REQUEST
                                     014D   273 140$:	$DSW	#IE.IDU			; UNKNOWN ERROR IS UNKNOWN DEVICE
                                 05  0158   274 150$:	RSB				; RETURN
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 00:22:32   VAX-11 MACRO X0.3-11               Page   7
V00.1           RSX$ASSIGN - ASSIGN SPECIFIED DEVICE AND BUILD                                                                   (4)

                                     0159   276 	.SBTTL RSX$ASSIGN - ASSIGN SPECIFIED DEVICE AND BUILD LUT
                                     0159   277 ;++
                                     0159   278 ; RSX$ASSIGN - ASSIGN SPECIFIED AND BUILD LUT
                                     0159   279 ;
                                     0159   280 ; FUNCTIONAL DESCRIPTION:
                                     0159   281 ;
                                     0159   282 ; THIS ROUTINE IS USED BY THE RSXSTART LOGIC AND THE ALUN DIRECTIVE PROCESSING
                                     0159   283 ; CODE TO ASSIGN A DEVICE AND BUILD A LUT ENTRY FOR IT.
                                     0159   284 ;
                                     0159   285 ; INPUTS:
                                     0159   286 ;
                                     0159   287 ;	R8 = ADDRESS OF LUT TO BUILD
                                     0159   288 ;	R10 = ADDRESS OF THE IMAGE IMPURE DATA BASE
                                     0159   289 ;	R11 = ADDRESS OF THE IMAGE
                                     0159   290 ;
                                     0159   291 ; IMPLICIT INPUTS:
                                     0159   292 ;
                                     0159   293 ;	I_SCRATCH,I_SCRATCH+4 ARE THE STRING DESC. OF THE DEVICE NAME TO ASSIGN.
                                     0159   294 ;
                                     0159   295 ; OUTPUTS:
                                     0159   296 ;
                                     0159   297 ;	R0 = STATUS OF THE OPERATION
                                     0159   298 ;	R5,R8,R10,R11 ARE PRESERVED.
                                     0159   299 ;--
                                     0159   300 RSX$ASSIGN::				; ASSIGN DEVICE
                                     0159   301 	$ASSIGN_S	I_SCRATCH(R10),LUT_CHAN(R8); ASSIGN CHANNEL
            30            50     E9  0167   302 	BLBC	R0,50$			; IF ERROR THEN EXIT
                          FE93'  30  016A   303 	BSBW	RSX$MAPDEVNAM		; SET UP LUT
                                     016D   304  
                                     016D   305 	.IF DF	C$$ORE
                                     016D   306  
            02         18 A8     91  016D   307 	CMPB	LUT_TYPE(R8),#2		; DEVICE = DISK?
                          1E     12  0171   308 	BNEQ	40$			; IF NEQ NO
                                     0173   309 	$QIOW_S	EFN=#1,CHAN=LUT_CHAN(R8),- ; ISSUE PACK ACKNOWLEDGE
                                     0173   310 		FUNC=#IO$_PACKACK	;
                                     0191   311 40$:					;
                                     0191   312  
                                     0191   313 	.ENDC
                                     0191   314  
       00BC DA            68     0E  0191   315 	INSQUE	(R8),@I_LOGNAME+4(R10)	; INSERT ON END OF LIST
            50         00'8F     9A  0196   316 	MOVZBL	#SS$_NORMAL,R0		; SET SUCCESS
                                 05  019A   317 50$:	RSB				; RETURN
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 00:22:32   VAX-11 MACRO X0.3-11               Page   8
V00.1           RSX$SEARCHDEV - SEARCH LOGICAL NAME LIST FOR MA                                                                  (5)

                                     019B   319 	.SBTTL RSX$SEARCHDEV - SEARCH LOGICAL NAME LIST FOR MATCH
                                     019B   320 ;++
                                     019B   321 ; RSX$SEARCHDEV - SEARCH LOGICAL NAME LIST FOR MATCH
                                     019B   322 ;
                                     019B   323 ; FUNCTIONAL DESCRIPTION:
                                     019B   324 ;
                                     019B   325 ; THIS ROUTINE IS USED DURING ASSIGN AND PARSE TO FIND A DEVICE NAME
                                     019B   326 ; IN THE LOGICAL ASSIGNMENT TABLE. A MATCH IS ATTEMPTED FOR EACH SAVED NAME.
                                     019B   327 ;
                                     019B   328 ; INPUTS:
                                     019B   329 ;
                                     019B   330 ;	R0 = NAME
                                     019B   331 ;	R1 = UNIT
                                     019B   332 ;	I_SCRATCH/I_SCRATCH+4 ARE THE STRING DESC FOR A STRING MATCH
                                     019B   333 ;	IF I_SCRATCH = 1 AND I_SCRATCH+4 = I_SCRATCH+0 THEN NO MATCH IS POSSIBLE
                                     019B   334 ;
                                     019B   335 ; OUTPUTS:
                                     019B   336 ;
                                     019B   337 ;	CONDITION CODES REFLECT EQUALITY 
                                     019B   338 ;
                                     019B   339 ;	R6 = LUT ENTRY IF EQUALITY FOUND
                                     019B   340 ;--
                                     019B   341 RSX$SEARCHDEV::				; SEARCH LOGICAL NAME LIST FOR MATCH
                          0F     BB  019B   342 	PUSHR	#^M<R0,R1,R2,R3>	; SAVE CMPC REGISTERS
            56       0000'CF     9E  019D   343 	MOVAB	W^RSX$A_SYSDEVS,R6	; ADDRESS SYS$ DEVICE NAMES
                          86     D5  01A2   344 5$:	TSTL	(R6)+			; DONE?
                          1A     13  01A4   345 	BEQL	10$			; IF EQL THEN YES
            52            86     D0  01A6   346 	MOVL	(R6)+,R2		; ADDRESS STRING
            53            82     9A  01A9   347 	MOVZBL	(R2)+,R3		; GET NAME SIZE
            6A            53     D1  01AC   348 	CMPL	R3,I_SCRATCH(R10)	; COMPARE SIZES
                          F1     12  01AF   349 	BNEQ	5$			; IF NEQ THEN GO ON
            62            53     29  01B1   350 	CMPC	R3,(R2),@I_SCRATCH+4(R10); MATCH?
                       04 BA         01B4       
                          EA     12  01B6   351 	BNEQ	5$			; IF NEQ THEN CONTINUE
            56         F8 A6     D0  01B8   352 	MOVL	-8(R6),R6		; GET LUT ADDRESS
                          00     95  01BC   353 	TSTB	#0			; SET EQL
                          3E     11  01BE   354 	BRB	50$
            56       00B8 CA     9E  01C0   355 10$:	MOVAB	I_LOGNAME(R10),R6	; START AT LIST HEAD
            56            66     D0  01C5   356 15$:	MOVL	(R6),R6			; GET NEXT ENTRY
       00B8 CA            66     D1  01C8   357 	CMPL	(R6),I_LOGNAME(R10)	; TEST DONE
                          2D     13  01CD   358 	BEQL	45$			; IF EQL THEN DONE
         10 A6            6E     B1  01CF   359 	CMPW	(SP),LUT_RSXNAME(R6)	; RSX NAME MATCH?
                          07     12  01D3   360 	BNEQ	20$			; IF NEQ THEN NO
         12 A6         04 AE     B1  01D5   361 	CMPW	4(SP),LUT_RSXUNIT(R6)	; UNIT MATCH?
                          22     13  01DA   362 	BEQL	50$			; IF EQL THEN DONE
         30 A6            6E     B1  01DC   363 20$:	CMPW	(SP),LUT_INFONAME(R6)	; INFO NAME MATCH?
                          07     12  01E0   364 	BNEQ	30$			; IF NEQ THEN NO
         32 A6         04 AE     B1  01E2   365 	CMPW	4(SP),LUT_INFOUNIT(R6)	; INFO UNIT MATCH?
                          15     13  01E7   366 	BEQL	50$			; IF EQL THEN DONE
            50         20 A6     9A  01E9   367 30$:	MOVZBL	LUT_REALNAME(R6),R0	; PICK UP SIZE OF STRING
            50            6A     D1  01ED   368 	CMPL	I_SCRATCH(R10),R0	; CHECK SIZES
                          D3     12  01F0   369 	BNEQ	15$			; IF NEQ THEN ERROR
         04 BA            50     29  01F2   370 	CMPC3	R0,@I_SCRATCH+4(R10),LUT_REALNAME+1(R6); STRING MATCH?
                       21 A6         01F6       
                          CB     12  01F8   371 	BNEQ	15$			; IF NEQ THEN NOT DONE
                          02     11  01FA   372 	BRB	50$			; CONTINUE
                          02     95  01FC   373 45$:	TSTB	#2			; SET NEQ CONDITION
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 00:22:32   VAX-11 MACRO X0.3-11               Page   9
V00.1           RSX$SEARCHDEV - SEARCH LOGICAL NAME LIST FOR MA                                                                  (5)

                          0F     BA  01FE   374 50$:	POPR	#^M<R0,R1,R2,R3>	; RESTORE CMPC REGISTERS
                                 05  0200   375 	RSB				; RETURN
                                     0201   376 ;
                                     0201   377 	.END
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 00:22:32   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (5)

$$MSG          = 00000000            DEV$V_DIR      = 00000003            H.ODVA           00000012            
$$T1           = 00000001            DEV$V_DMT      = 00000015            H.ODVL           00000014            
...GBL         = 00000000            DEV$V_ELG      = 00000016            H.OVLY           0000002C            
ACBC_CTLRCAST  = 00000002            DEV$V_FOD      = 0000000E            H.PFVA           0000001A            
ACBC_FLOATAST  = 00000003            DEV$V_FOR      = 00000018            H.RCVA           0000001E            
ACBC_PWRAST    = 00000000            DEV$V_GEN      = 00000011            H.RRVA           00000032            
ACBC_RCVAST    = 00000001            DEV$V_IDV      = 0000001A            H.SPRI           00000030            
ACBV_INPROG    = 00000001            DEV$V_MBX      = 00000014            H.TKVA           00000016            
ACBV_PERM      = 00000000            DEV$V_MNT      = 00000013            H.TKVL           00000018            
ACBV_TYPE      = 00000008            DEV$V_NET      = 0000000D            H.VEXT           0000002E            
ACB_FLAGS        0000000C            DEV$V_ODV      = 0000001B            H.WND            00000024            
ACB_LINK         00000000            DEV$V_RCK      = 0000001E            IE.2DV         = FFFFFFD0            
ACB_UPC          0000000A            DEV$V_REC      = 00000000            IE.ABO         = FFFFFFF1            
ACB_UPRM         00000008            DEV$V_RND      = 0000001C            IE.ACT         = FFFFFFF9            
ADR_HIGHLIM      00000004            DEV$V_RTM      = 0000001D            IE.ADP         = FFFFFF9E            
ADR_LOWLIM       00000000            DEV$V_SDI      = 00000004            IE.ALC         = FFFFFFAC            
ADR_SIZE         00000008            DEV$V_SHR      = 00000010            IE.ALG         = FFFFFFAC            
AP_NAME          00000004            DEV$V_SPL      = 00000006            IE.ALN         = FFFFFFDE            
ASSIGN           000000EC R     05   DEV$V_SQD      = 00000005            IE.AST         = FFFFFFB0            
ASSOCIATE        000000CD R     05   DEV$V_SWL      = 00000019            IE.BAD         = FFFFFFFF            
AST_PARAM        00000004            DEV$V_TRM      = 00000002            IE.BBE         = FFFFFFC8            
AST_PC           00000010            DEV$V_WCK      = 0000001F            IE.BCC         = FFFFFFBE            
AST_PSL          00000014            ERROR            00000105 R     05   IE.BDI         = FFFFFFCC            
AST_R0           00000008            FCB_ATTRIBS      0000007C            IE.BDR         = FFFFFFCE            
AST_R1           0000000C            FCB_FIB          0000004C            IE.BDV         = FFFFFFC9            
BIT...         = 00000020            FCB_FID          00000000            IE.BHD         = FFFFFFC0            
C$$ORE         = 00000000            FCB_FNAME        00000014            IE.BLB         = FFFFFFBA            
C_CANONPS      = 83C00000            FCB_FNAMEDESC    0000000C            IE.BLK         = FFFFFFEC            
C_RCVDSTR      = 44564352            FCB_FNB          00000002            IE.BNM         = FFFFFFCA            
DEV$M_ALL      = 00800000            FCB_PC           00000078            IE.BTF         = FFFFFFB4            
DEV$M_AVL      = 00040000            FCB_RESULT       00000030            IE.BTP         = FFFFFFD5            
DEV$M_CCL      = 00000002            FCB_RESULTDESC   00000004            IE.BVR         = FFFFFFC1            
DEV$M_DIR      = 00000008            FCB_SIZE         000000B4            IE.BYT         = FFFFFFED            
DEV$M_DMT      = 00200000            FP_AP            00000008            IE.CKP         = FFFFFFF6            
DEV$M_ELG      = 00400000            FP_FP            0000000C            IE.CKS         = FFFFFFE2            
DEV$M_FOD      = 00004000            FP_PC            00000010            IE.CLO         = FFFFFFDA            
DEV$M_FOR      = 01000000            FP_PSL           00000004            IE.CNR         = FFFFFFB7            
DEV$M_GEN      = 00020000            FP_REGISTERS     00000014            IE.CON         = FFFFFFEA            
DEV$M_IDV      = 04000000            GBL...         = 00000000            IE.DAA         = FFFFFFF8            
DEV$M_MBX      = 00100000            H.CSP            00000000            IE.DAO         = FFFFFFF3            
DEV$M_MNT      = 00080000            H.CUIC           00000008            IE.DFU         = FFFFFFE8            
DEV$M_NET      = 00002000            H.DSW            00000026            IE.DNA         = FFFFFFF9            
DEV$M_ODV      = 08000000            H.DUIC           0000000A            IE.DNR         = FFFFFFFD            
DEV$M_RCK      = 40000000            H.EFLM           00000004            IE.DUN         = FFFFFFF7            
DEV$M_REC      = 00000001            H.EFSV           00000020            IE.DUP         = FFFFFFC7            
DEV$M_RND      = 10000000            H.FCS            00000028            IE.EOF         = FFFFFFF6            
DEV$M_RTM      = 20000000            H.FORT           0000002A            IE.EOT         = FFFFFFC2            
DEV$M_SDI      = 00000010            H.FPSA           00000022            IE.EOV         = FFFFFFF5            
DEV$M_SHR      = 00010000            H.FPVA           0000001C            IE.EXP         = FFFFFFB5            
DEV$M_SPL      = 00000040            H.GARD           0000003A            IE.FEX         = FFFFFFCF            
DEV$M_SQD      = 00000020            H.HDLN           00000002            IE.FHE         = FFFFFFC5            
DEV$M_SWL      = 02000000            H.IPC            0000000E            IE.FIX         = FFFFFFF7            
DEV$M_TRM      = 00000004            H.IPS            0000000C            IE.FLN         = FFFFFFAF            
DEV$M_WCK      = 80000000            H.ISP            00000010            IE.FOP         = FFFFFFCB            
DEV$V_ALL      = 00000017            H.LUN            0000003E            IE.HFU         = FFFFFFE4            
DEV$V_AVL      = 00000012            H.NLUN           0000003C            IE.HWR         = FFFFFFFA            
DEV$V_CCL      = 00000001            H.NML            00000031            IE.IBS         = FFFFFFA7            
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 00:22:32   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (5)

IE.IDU         = FFFFFFA4            IE.TCH         = FFFFFFF5            I_LOGNAME        000000B8            
IE.IEF         = FFFFFF9F            IE.TMM         = FFFFFFB9            I_LUT            00000144            
IE.IES         = FFFFFFAE            IE.TMO         = FFFFFFB6            I_NLUN           00000140            
IE.IFC         = FFFFFFFE            IE.ULK         = FFFFFFAB            I_PC             00000184            
IE.IFU         = FFFFFFE7            IE.ULN         = FFFFFFFB            I_PROCNAME       00000128            
IE.ILL         = FFFFFFD6            IE.UNS         = FFFFFFFC            I_PS             00000188            
IE.ILU         = FFFFFFA0            IE.UPN         = FFFFFFFF            I_PWRAST         0000019C            
IE.ILV         = FFFFFFED            IE.VER         = FFFFFFFC            I_R0             00000164            
IE.INS         = FFFFFFFE            IE.WAC         = FFFFFFE3            I_R1             00000168            
IE.IOP         = FFFFFFAD            IE.WAT         = FFFFFFE1            I_R2             0000016C            
IE.IPR         = FFFFFFA1            IE.WCK         = FFFFFFAA            I_R3             00000170            
IE.ISQ         = FFFFFFC3            IE.WER         = FFFFFFDF            I_R4             00000174            
IE.ITI         = FFFFFFA3            IE.WLK         = FFFFFFF4            I_R5             00000178            
IE.ITP         = FFFFFFA8            IE.WOV         = FFFFFFAB            I_R6             0000017C            
IE.ITS         = FFFFFFF8            IO$_PACKACK      ********   X   05   I_RAD50NAME      00000124            
IE.IUI         = FFFFFFA5            IS.BV          = 00000005            I_RCVAST         00000198            
IE.LCK         = FFFFFFE5            IS.CC          = 00000301            I_RCVMAIL        0000013C            
IE.LNL         = FFFFFFA6            IS.CLR         = 00000000            I_RUNFLAGS       00000190            
IE.MAP         = FFFFFFAF            IS.CR          = 00000D01            I_SCRATCH        00000000            
IE.MOD         = FFFFFFEB            IS.EOT         = 00000401            I_STATE          0000014C            
IE.NBF         = FFFFFFD9            IS.ESC         = 00001B01            I_TYPE           00000180            
IE.NBK         = FFFFFFD7            IS.ESQ         = 00009B01            I_UIC            00000118            
IE.NDR         = FFFFFFB8            IS.PES         = 00008001            I_WAIT           00000154            
IE.NFI         = FFFFFFC4            IS.PND         = 00000000            I_WAITSAVE       0000015C            
IE.NFW         = FFFFFFBB            IS.RDD         = 00000002            LUTC_CR        = 00000005            
IE.NLK         = FFFFFFB1            IS.SET         = 00000002            LUTC_DISK      = 00000002            
IE.NLN         = FFFFFFDB            IS.SPD         = 00000002            LUTC_LP        = 00000004            
IE.NNC         = FFFFFFB3            IS.SUC         = 00000001            LUTC_RMS       = 00000000            
IE.NNL         = FFFFFFB2            IS.TAB         = 00000901            LUTC_TAPE      = 00000003            
IE.NNN         = FFFFFFBC            IS.TMO         = 00000002            LUTC_TRM       = 00000001            
IE.NOD         = FFFFFFE9            I_ADR0           000000D8            LUTV_CTRLC     = 00000002            
IE.NSF         = FFFFFFE6            I_ASCIINAME      0000011C            LUTV_CTRLO     = 00000000            
IE.NST         = FFFFFFB0            I_ASTPOOL        000000A8            LUTV_PRM       = 00000003            
IE.NSW         = FFFFFFEE            I_ASTQUEUE       000000A0            LUTV_TI        = 00000001            
IE.NVR         = FFFFFFAA            I_BAILOUTFP      0000018C            LUT_CHAN         0000000C            
IE.NVW         = FFFFFFA9            I_CMDAD          000000C4            LUT_CHAR         00000014            
IE.OFL         = FFFFFFBF            I_CMDSZ          000000C0            LUT_CTRLC        00000034            
IE.ONP         = FFFFFFFB            I_CURAST         00000194            LUT_FLAGS        0000000A            
IE.OVR         = FFFFFFEE            I_FCBPOOL        000000B0            LUT_INFONAME     00000030            
IE.PES         = FFFFFFAD            I_FCC            000001B0            LUT_INFOUNIT     00000032            
IE.PNS         = FFFFFFA2            I_FLOATA0        000001BC            LUT_LINK         00000000            
IE.PRI         = FFFFFFF0            I_FLOATA1        000001C4            LUT_REALNAME     00000020            
IE.PTS         = FFFFFFFD            I_FLOATA2        000001CC            LUT_REF          00000008            
IE.RAC         = FFFFFFD4            I_FLOATA3        000001D4            LUT_RSXNAME      00000010            
IE.RAT         = FFFFFFD3            I_FLOATA4        000001DC            LUT_RSXUNIT      00000012            
IE.RBG         = FFFFFFD8            I_FLOATA5        000001E4            LUT_SIZE         00000038            
IE.RBS         = FFFFFFF1            I_FLOATADR       000001AC            LUT_TYPE         00000018            
IE.RCN         = FFFFFFD2            I_FLOATAST       000001A0            LUT_UNIT         00000020            
IE.RER         = FFFFFFE0            I_FLOATCSR       000001A4            MERGE            000000F4 R     05   
IE.RNM         = FFFFFFCD            I_FLOATERR       000001A8            PSL_CC         = 00000000            
IE.RSU         = FFFFFFEF            I_FLOATTMP       000001B4            PSL_CM         = 0000001F            
IE.SDP         = FFFFFF9D            I_GARD           000000C8            PSL_FPD        = 0000001B            
IE.SNC         = FFFFFFDD            I_HIGHEFN        00000148            PSL_FU         = 00000006            
IE.SPC         = FFFFFFFA            I_HIGHSIZE       000000D0            PSL_TBIT       = 00000004            
IE.SQC         = FFFFFFDC            I_IMAGEVBN       000000D4            QIOV_FILES     = 00000000            
IE.SRE         = FFFFFFF2            I_INISIZE        000000CC            QIO_FLAGS        0000001C            
IE.STK         = FFFFFFC6            I_LENGTH         000001EC            QIO_FUNCTION     0000001A            
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 00:22:32   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (5)

QIO_IOSB         0000000E            S_R0             00000000            
QIO_LUT          00000016            S_R1             00000004            
QIO_SECONDBLK    0000001E            S_R2             00000008            
QIO_SIZE         00000022            S_R3             0000000C            
RSX$ALLOCATE     ********   X   05   S_R4             00000010            
RSX$ALUN         00000000 RG    05   S_R5             00000014            
RSX$ASSIGN       00000159 RG    05   S_R6             00000018            
RSX$A_SYSDEVS    ********   X   05   S_TYPE           0000001C            
RSX$BLDASCDEV    ********   X   05   W.BATT           00000006            
RSX$BLDPHYDEV    ********   X   05   W.BFPD           0000000C            
RSX$CTRLCDSABL   ********   X   05   W.BHVR           00000004            
RSX$C_SUBSYSTEM= 00000006            W.BLGH           00000010            
RSX$DEALLOCATE   ********   X   05   W.BLPD           0000000E            
RSX$MAPDEVNAM    ********   X   05   W.BLVR           00000002            
RSX$SEARCHDEV    0000019B RG    05   W.BNPD           0000000D            
RSX$TRNLOGNAME   ********   X   05   W.BOFF           0000000A            
RSX$TRNLOGONE    ********   X   05   W.BPCB           00000000            
RSX$_ACCVIO    = 00068044            W.BSIZ           00000008            
RSX$_BADLIBREF = 0006806C            
RSX$_BADSTACK  = 0006804C            
RSX$_BREAK     = 0006800C            
RSX$_EXITSTATUS= 00068180            
RSX$_EXTERNABRT= 0006805C            
RSX$_ILLINST   = 0006802C            
RSX$_INSFDYNMEM= 00068054            
RSX$_IOT       = 00068014            
RSX$_LIBNOTFND = 00068074            
RSX$_LOADERROR = 0006807C            
RSX$_NONRSXEMT = 0006801C            
RSX$_NOSUCHDEV = 000680C2            
RSX$_NOTSKIMG  = 00068064            
RSX$_ODDADDR   = 00068034            
RSX$_PMD       = 000680CA            
RSX$_RCVMBXSIZ = 0000012C            
RSX$_RESERVED  = 00068004            
RSX$_TBIT      = 0006803C            
RSX$_TRAP      = 00068024            
SS$_DEVALLOC     ********   X   05   
SS$_DEVNOTMOUNT  ********   X   05   
SS$_NOIOCHAN     ********   X   05   
SS$_NORMAL       ********   X   05   
SV_ASTLVL        00000005            
SV_DCL           00000002            
SV_FLOATAST      0000000A            
SV_FRESTORE      00000003            
SV_NOAST         00000004            
SV_PENDWAIT      00000006            
SV_PWRAST        00000009            
SV_RCVAST        00000008            
SV_RESTORE       00000000            
SV_TRANSLATE     00000001            
SV_WAIT          00000007            
SYS$ASSIGN       ********   X   05   
SYS$DASSGN       ********   X   05   
SYS$QIOW         ********   X   05   
S_PC             00000020            
S_PS             00000024            
RSXALUN         - RSX11M/AME ASSIGN LUN DIRECTIVE                22-AUG-1978 00:22:32   VAX-11 MACRO X0.3-11               Page  13
PROGRAM SECTION SYNOPSIS                                                                                                         (5)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
..ABS.           00000042      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000000      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXDEF           000001F0      04     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXCODE          00000201      05     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
13736. BYTES LEFT IN FREE MEMORY POOL.
36. BYTES OF RECLAIMED MEMORY.
OBJ$:RSXALUN,LIS$:RSXALUN/-SP=SRC$:C,RSXALUN
34 MLB DIR RDS - 615 GETS TO DEFINE 27 MACROS. 23 INTER. FILE WRITES. 
