RSXEXCEPTION                                                     22-AUG-1978 00:23:47   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)     133  RSX$EXCEPTION -- IMAGE EXCEPTION HANDLER
   (3)     216  COMPATIBILITY MODE TRAP HANDLER
   (4)     278  EMT PROCESSOR
   (5)     396  NON EMT CM TRAPS
   (6)     478  RSX$RESTORE -- RESTORE IMAGE CONTEXT AND ENTER 
RSXEXCEPTION                                                     22-AUG-1978 00:23:47   VAX-11 MACRO X0.3-11               Page   1
00                                                                                                                               (1)

                                     0000     1 	.TITLE	RSXEXCEPTION
                                     0000     2 	.IDENT	/00/		;
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY:
                                     0000    25 ;
                                     0000    26 ;	STARLET RSX11M COMPATIBILITY MODE EMULATOR
                                     0000    27 ;
                                     0000    28 ; ABSTRACT:
                                     0000    29 ;
                                     0000    30 ;	EXCEPTION HANDLER FOR ALL EXCEPTIONS DURING RSX/CM IMAGE EXECUTION.
                                     0000    31 ;--
                                     0000    32 ;
                                     0000    33 ; AUTHOR R.HEINEN 29-SEPT-76 
                                     0000    34 ;
                                     0000    35 ;
                                     0000    36 ; EXTERNAL SYMBOLS
                                     0000    37 ;
                                     0000    38  
                                     0000    39 	DRERR$			; DEFINE DIRECTIVE ERROR CODES
                                     0000    40 	$RSXDEF			; DEFINE RSX SYMBOLS
                                     0000    41  
                                 00000000    42 	.PSECT	RSXCODE,NOWRT
RSXEXCEPTION                                                     22-AUG-1978 00:23:47   VAX-11 MACRO X0.3-11               Page   2
00              RSX$EXCEPTION -- IMAGE EXCEPTION HANDLER                                                                         (2)

                                     0000    44 	.SBTTL	RSX$EXCEPTION -- IMAGE EXCEPTION HANDLER
                                     0000    45 ;++
                                     0000    46 ; RSX$EXCEPTION - EXCEPTION HANDLER FOR RSX
                                     0000    47 ;
                                     0000    48 ; FUNCTIONAL DESCRIPTION:
                                     0000    49 ;
                                     0000    50 ; THIS EXCEPTION HANDLER RECEIVES CONTROL ON EXCEPTIONS THAT ARE NOT
                                     0000    51 ; CAUSED BY CM INSTRUCTION TRAPS OR EXCEPTIONS.
                                     0000    52 ;
                                     0000    53 ; IF THE EXCEPTION OCCURED IN CM THEN IT WILL RESULT IN A MEMORY PROTECTION
                                     0000    54 ; VIOLATION DELIVERED VIA HIS SST VECTOR AS IF IT WERE A CM TRAP TYPE.
                                     0000    55 ;
                                     0000    56 ; IF THE EXCEPTION OCCURED IN NATIVE MODE AND IT IS AN ACCESS VIOLATION
                                     0000    57 ; AND THE VIRTUAL ADDRESS REFERENCED IS LESS THAN 65K, THEN THE EXCEPTION
                                     0000    58 ; OCCURED DURRING DIRECTIVE PROCESSING AND THE DSW/PSL ARE SET TO REFLECT
                                     0000    59 ; THIS (IE.ADP) OTHERWISE THE RSX IS ABORTED.
                                     0000    60 ;
                                     0000    61 ; INPUTS:
                                     0000    62 ;
                                     0000    63 ;	AP = ADDRESS OF EXCEPTION ARGUMENTS
                                     0000    64 ;
                                     0000    65 ; OUTPUTS:
                                     0000    66 ;	NONE
                                     0000    67 ;--
                                     0000    68 RSX$EXCEPTION::				; RSX EXCEPTION HANDLER
                               0000  0000    69 	.WORD	0			; SAVE NO REGISTERS
            50         04 AC     D0  0002    70 	MOVL	4(AP),R0		; ADDRESS PC/PSL ARG LIST
            51            60     D0  0006    71 	MOVL	(R0),R1			; GET THE NUMBER OF ARGUMENTS
            51            6041   DE  0009    72 	MOVAL	(R0)[R1],R1		; GET THE EXCEPTION PSL
                                     000D    73 ;
                                     000D    74 ; CHECK FOR SPECIAL "DEB" COMMAND EXCEPTION
                                     000D    75 ;
         04 A0       0000'8F     B1  000D    76 	CMPW	#SS$_DEBUG,AP_NAME(R0)	; DEBUG COMMAND?
                          26     13  0013    77 	BEQL	20$			; IF EQL THEN YES
                                     0015    78 ;
                                     0015    79 ; RSX FAULT IF IN NATIVE MODE
                                     0015    80 ;
            61            1F     E0  0015    81 	BBS	#PSL_CM,(R1),30$	; IF FROM CM THEN BRANCH
                          37         0018       
                                     0019    82 ;
                                     0019    83 ; NATIVE MODE EXCEPTION
                                     0019    84 ;
                                     0019    85 ; IF THE EXCEPTION IS ACCESS VIOLATION AND THE REFERENCED ADDRESS
                                     0019    86 ; WAS UNDER 65K THEN THIS VIOLATION IS DUE TO A DIRECTIVE PROCEEDURE.
                                     0019    87 ;
                                     0019    88 ; THE DSW IS SET UP AND THE RETURN PC IS JAMMED TO REENTER THE IMAGE
                                     0019    89 ;
       0000'8F         04 A0     B1  0019    90 	CMPW	AP_NAME(R0),#SS$_ACCVIO	; ACCESS VIOLATION?
                          3A     12  001F    91 	BNEQ	50$			; IF NEQ THEN ABORT THE RSX
                       0E A0     B5  0021    92 	TSTW	14(R0)			; WITHIN 65K?
                          35     12  0024    93 	BNEQ	50$			; IF NEQ THEN ABORT RSX
         10 AD       0234'CF     DE  0026    94 	MOVAL	W^REENTER,FP_PC(FP)	; INSERT PC
   00000026 9F         9E 8F     99  002C    95 	CVTBW	#IE.ADP,@#H.DSW		; INSERT DSW ERROR CODE
       0188'CF            01     88  0034    96 	BISB	#1,W^RSX$A_IMPURE+I_PS	; SET C-BIT
                          1A     11  0039    97 	BRB	33$			; CONTINUE IN COMMON
                                     003B    98 ;
                                     003B    99 ; DEBUG EXCEPTION
RSXEXCEPTION                                                     22-AUG-1978 00:23:47   VAX-11 MACRO X0.3-11               Page   3
00              RSX$EXCEPTION -- IMAGE EXCEPTION HANDLER                                                                         (2)

                                     003B   100 ;
            61            1F     E0  003B   101 20$:	BBS	#PSL_CM,(R1),25$	; BR IF IN CM
                          07         003E       
       0188'CF            10     88  003F   102 	BISB	#1@PSL_TBIT,W^RSX$A_IMPURE+I_PS; SET TBIT ON RETURN
                          04     11  0044   103 	BRB	27$			; 
         0C A0            10     88  0046   104 25$:	BISB	#1@PSL_TBIT,12(R0)	; SET TBIT IN RETURN PSL
            50       0000'8F     3C  004A   105 27$:	MOVZWL	#SS$_CONTINUE,R0	; CONTINUE
                                 04  004F   106 	RET				;
                                     0050   107 ;
                                     0050   108 ; THIS EXCEPTION IS FOR A CONDITION NOT ASSOCIATED WITH CM BUT OCCURING
                                     0050   109 ; WHEN THE PROCESSOR WAS IN CM.
                                     0050   110 ;
         10 AD         68'AF     9E  0050   111 30$:	MOVAB	B^60$,FP_PC(FP)		; FORCE RETURN BELOW
         04 AD            1B     E5  0055   112 33$:	BBCC	#PSL_FPD,FP_PSL(FP),35$	; CLEAR FIRST PART DONE
                          00         0059       
                                 04  005A   113 35$:	RET				; REMOVE CALL FRAME
                                     005B   114 ;
                                     005B   115 ; ABORT THE RSX - FATAL ERROR
                                     005B   116 ;
            50       0000'8F     3C  005B   117 50$:	MOVZWL	#SS$_RESIGNAL,R0	; SET UP TO FIND WAY BACK TO ENTRY
       0004'CF       0000'CF     9E  0060   118 	MOVAB	W^RSX$RETEXIT,W^RSX$A_EXITBLOCK+4; RESET FOR NO EXIT HANDLER
                                 04  0067   119 	RET	
                                     0068   120 ;
                                     0068   121 ; REMOVE ARGUMENTS FROM STACK
                                     0068   122 ;
         24 AE            0A     C1  0068   123 60$:	ADDL3	#10,36(SP),R0		; POINT TO STACK BOTTOM
                          50         006C       
            5E            6E40   DE  006D   124 	MOVAL	(SP)[R0],SP		; REMOVE
            50   00000020'9F     9E  0071   125 	MOVAB	@#CTL$AL_CMCNTX+S_PC,R0	; ADDRESS CONTROL REGION DATA
RSXEXCEPTION                                                     22-AUG-1978 00:23:47   VAX-11 MACRO X0.3-11               Page   4
00              COMPATIBILITY MODE TRAP HANDLER                                                                                  (3)

                                     0078   127 	.SBTTL	COMPATIBILITY MODE TRAP HANDLER
                                     0078   128  
                                     0078   129 	.ENABL	LSB
                                     0078   130  
                                     0078   131 ;++
                                     0078   132 ; RSX$CMTRAP - COMPATIBILITY MODE TRAP HANDLER
                                     0078   133 ;
                                     0078   134 ; FUNCTIONAL DESCRIPTION:
                                     0078   135 ;
                                     0078   136 ; THIS ROUTINE IS ENTERED WHEN A CM FAULT OCCURS. THE ENTRY WAS SPECIFIED
                                     0078   137 ; DURING THE RSX INITIALIZATION BY THE $DCLCMH SYSTEM SERVICE.
                                     0078   138 ; ENTRY HERE IS A VERY SPECIAL CASE OF EXCEPTION HANDLING. 
                                     0078   139 ;
                                     0078   140 ; REGISTERS R0-R6 ARE SAVED IN THE CONTROL REGION AT CTL$GL_CMCNTX.
                                     0078   141 ;
                                     0078   142 ; THE TYPE OF CM EXCEPTION IS IN CLT$GL_CMCNTX+28.
                                     0078   143 ;
                                     0078   144 ; THE PC/PSL ARE SAVED AT CTL$GL_CMCNTX+32.
                                     0078   145 ;
                                     0078   146 ; THE ACTION IS TO INTERPRET THE CONDITION AND TO RESPOND IN AN RSX11M
                                     0078   147 ; COMPATIBLE FORM.
                                     0078   148 ;
                                     0078   149 ; ENTRY HERE (SST) IS ALSO FROM RSX$EXCEPTION WHEN AN EXCEPTION
                                     0078   150 ; OCCURS IN CM THAT IS NOT CM DEPENDENT. THE CONTROL AREA IS HOWEVER,
                                     0078   151 ; THE SAME.
                                     0078   152 ;
                                     0078   153 ; INPUTS:
                                     0078   154 ;
                                     0078   155 ;	R0 = ADDRESS IN THE CONTROL REGION OF THE PC/PSL PAIR
                                     0078   156 ;
                                     0078   157 ;	 STACK IS EMPTY.
                                     0078   158 ;
                                     0078   159 ; OUTPUTS:
                                     0078   160 ;
                                     0078   161 ;	AN REI IS DONE TO THE IMAGE.
                                     0078   162 ;	OR THE EXECUTION OF THE IMAGE IS TERMINATED.
                                     0078   163 ;--
                                     0078   164 RSX$CMTRAP::				;
            54         FC A0     9A  0078   165 	MOVZBL	-4(R0),R4		;
                                     007C   166 ;
                                     007C   167 ; GET THE TYPE OF TRAP
                                     007C   168 ;
            5A       0000'CF     9E  007C   169 	MOVAB	W^RSX$A_IMPURE,R10	; ASSURE R10
                          5B     D4  0081   170 	CLRL	R11			; POINT TO IMAGE
                                     0083   171 ;
                                     0083   172 ; SAVE THE PC/PSL IN IMPURE STORAGE IN ORDER TO ALLOW THEM TO CHANGE
                                     0083   173 ;
       0184 CA            60     7D  0083   174 	MOVQ	(R0),I_PC(R10)		;
       0184 CA            02     C0  0088   175 	ADDL	#2,I_PC(R10)		; ADJUST FOR PROPER REI
                                     008D   176 ;
                                     008D   177 ; ENTER THE ROUTINE FOR THE TRAP TYPE
                                     008D   178 ;
                                     008D   179 10$:	CASE	R4,<RESERVED,-		; CASE ON EXCEPTION TYPE
                                     008D   180 			BPT,-		;
                                     008D   181 			IOT,-		;
                                     008D   182 			EMT,-		;
                                     008D   183 			TRAP,-		;
RSXEXCEPTION                                                     22-AUG-1978 00:23:47   VAX-11 MACRO X0.3-11               Page   5
00              COMPATIBILITY MODE TRAP HANDLER                                                                                  (3)

                                     008D   184 			ILL,-		;
                                     008D   185 			ODD,-		;
                                     008D   186 			TBIT,-		;
                                     008D   187 			MEMORY>		;
RSXEXCEPTION                                                     22-AUG-1978 00:23:47   VAX-11 MACRO X0.3-11               Page   6
00              EMT PROCESSOR                                                                                                    (4)

                                     00A3   189 	.SBTTL	EMT PROCESSOR
                                     00A3   190 ;++
                                     00A3   191 ;
                                     00A3   192 ; EMT - RSX TRAP WAS AN EMT
                                     00A3   193 ;
                                     00A3   194 ;--
                          00DC   31  00A3   195 22$:	BRW	IESDP			; VECTOR
                          00F4   31  00A6   196 23$:	BRW	MEMORY			; VECTOR
                                     00A9   197 ;
                                     00A9   198 ; EMT -- CHECK FOR 11M DIRECTIVE
                                     00A9   199 ;
                                     00A9   200 EMT:
         FF 8F         00 B0     91  00A9   201 	CMPB	@(R0),#^O0377		; EMT 377?
                          F6     12  00AE   202 	BNEQ	23$			; IF NEQ THEN NOT DIRECTIVE
                                     00B0   203 ;
                                     00B0   204 ; DIRECTIVE DISPATCHER FOR RSX11M DIRECTIVES
                                     00B0   205 ;
            57            02     9A  00B0   206 	MOVZBL	#2,R7			; ASSUME INITIAL STACK ADJUSTMENT
            55            66     B0  00B3   207 	MOVW	(R6),R5			; GET DPB ADDRESS FLAG
            08            55     E9  00B6   208 	BLBC	R5,25$			; IF LOW CLEAR THEN STACK POINTS TO DPB
            55            56     D0  00B9   209 	MOVL	R6,R5			; IF LOW SET THEN DPB ON STACK
         01 A5            02     85  00BC   210 	MULB3	#2,1(R5),R7		; SET NUMBER TO REMOVE FROM STACK
                          57         00C0       
            56            57     C0  00C1   211 25$:	ADDL	R7,R6			; CLEAN STACK
            07            01     EF  00C4   212 	EXTZV	#1,#7,(R5)+,R4		; GET DIC CODE/2
            54            85         00C7       
       0000'CF44          85     91  00C9   213 	CMPB	(R5)+,W^RSX$B_DIC[R4]	; CHECK FOR BAD DIC AND SIZE
                          D2     12  00CF   214 	BNEQ	22$			; IF NEQ THEN ERROR
         26 AB            01     9B  00D1   215 	MOVZBW	#1,H.DSW(R11)		; ASSUME SUCCESS
       0188 CA       FFEF 8F     AA  00D5   216 	BICW	#^C<1@PSL_TBIT>,I_PS(R10); RESET CONDITION CODES
                     0234'CF     9F  00DC   217 	PUSHAB	W^REENTER		; REENTER IMAGE AFTER DIRECTIVE
                                     00E0   218 ;
                                     00E0   219 ; DISPATCH ON DIRECTIVE NUMBER
                                     00E0   220 ;
                           00000049  00E0   221 MAXDIC=72+1
            00            54     8F  00E0   222 	CASEB	R4,#0,#<<BBB-AAA>/2-1>	; ENTER DIRECTIVE PROCESSING
                       48'8F         00E3       
                                     00E5   223 AAA:
                               FF1B' 00E5   224 	.WORD RSX$QIO-AAA		; QIO
                               FF1B' 00E7   225 	.WORD RSX$QIOW-AAA		; QIO AND WAIT
                               FF1B' 00E9   226 	.WORD RSX$GLUN-AAA		; GET LUN INFORMATION
                               FF1B' 00EB   227 	.WORD RSX$ALUN-AAA		; ASSIGN LUN
                               FF1B' 00ED   228 	.WORD RSX$ALTP-AAA		; ALTER TASK PRIORITY
                               FF1B' 00EF   229 	.WORD RSX$RQST-AAA		; REQUEST TASK PRIORITY
                               0092' 00F1   230 	.WORD BBB-AAA
                               0092' 00F3   231 	.WORD BBB-AAA
                               FF1B' 00F5   232 	.WORD RSX$RUN-AAA		; RUNTASK
                               0092' 00F7   233 	.WORD BBB-AAA
                               0092' 00F9   234 	.WORD BBB-AAA
                               FF1B' 00FB   235 	.WORD RSX$MRKT-AAA		; MARK TIME
                               FF1B' 00FD   236 	.WORD RSX$CSRQ-AAA		; CANCEL SCHEDULE REQUESTS
                               FF1B' 00FF   237 	.WORD RSX$CMKT-AAA		; CANCEL MARK TIME
                               0092' 0101   238 	.WORD BBB-AAA
                               FF1B' 0103   239 	.WORD RSX$CLEF-AAA		; CLEAR EVENT FLAG
                               FF1B' 0105   240 	.WORD RSX$SETF-AAA		; SET EVENT FLAG
                               FF1B' 0107   241 	.WORD RSX$DECL-AAA		; DECLARE SIGNIFICANT EVENT
                               0092' 0109   242 	.WORD BBB-AAA
RSXEXCEPTION                                                     22-AUG-1978 00:23:47   VAX-11 MACRO X0.3-11               Page   7
00              EMT PROCESSOR                                                                                                    (4)

                               FF1B' 010B   243 	.WORD RSX$RDAF-AAA		; READ ALL EVENT FALGS
                               FF1B' 010D   244 	.WORD RSX$WTSE-AAA		; WAIT FOR SINGLE EVENT FLAGS
                               FF1B' 010F   245 	.WORD RSX$WTLO-AAA		; WAIT FOR LOGICAL OR OF FLAGS
                               FF1B' 0111   246 	.WORD RSX$SPND-AAA		; SUSPEND TASK
                               FF1B' 0113   247 	.WORD RSX$RSUM-AAA		; RESUME TASK
                               FF1B' 0115   248 	.WORD RSX$WSIG-AAA		; WAIT FOR SIGNIFICANT EVENT
                               FF1B' 0117   249 	.WORD RSX$EXIT-AAA		; TASK EXIT
                               FF1B' 0119   250 	.WORD RSX$EXIF-AAA		; EXIT IF
                               0092' 011B   251 	.WORD BBB-AAA		
                               0092' 011D   252 	.WORD BBB-AAA		
                               0092' 011F   253 	.WORD BBB-AAA		
                               FF1B' 0121   254 	.WORD RSX$GTIM-AAA		; GET TIME
                               FF1B' 0123   255 	.WORD RSX$GTSK-AAA		; GET TASK PARAMETERS
                               FF1B' 0125   256 	.WORD RSX$GPRT-AAA		; GET PARTITION PARAMETERS
                               0092' 0127   257 	.WORD BBB-AAA
                               0092' 0129   258 	.WORD BBB-AAA		
                               FF1B' 012B   259 	.WORD RSX$SDAT-AAA		; SEND DATA
                               0092' 012D   260 	.WORD BBB-AAA
                               FF1B' 012F   261 	.WORD RSX$RCVD-AAA		; RECEIVE DATA
                               FF1B' 0131   262 	.WORD RSX$RCVX-AAA		; RECEIVE DATA OR EXIT
                               0092' 0133   263 	.WORD BBB-AAA
                               0092' 0135   264 	.WORD BBB-AAA		
                               FF1B' 0137   265 	.WORD RSX$ABRT-AAA		; ABORT TASK
                               0092' 0139   266 	.WORD BBB-AAA
                               0092' 013B   267 	.WORD BBB-AAA
                               FF1B' 013D   268 	.WORD RSX$EXTK-AAA		; EXTEND TASK
                               0092' 013F   269 	.WORD BBB-AAA
                               0092' 0141   270 	.WORD BBB-AAA
                               FF1B' 0143   271 	.WORD RSX$DSCP-AAA		; DISABLE CHECK POINTING
                               FF1B' 0145   272 	.WORD RSX$ENCP-AAA		; ENABLE CHECK POINTING
                               FF1B' 0147   273 	.WORD RSX$DSAR-AAA		; DISABLE AST'S
                               FF1B' 0149   274 	.WORD RSX$ENAR-AAA		; ENABLE AST'S
                               FF1B' 014B   275 	.WORD RSX$SVDB-AAA		; SPECIFY DEBUG VECTOR
                               FF1B' 014D   276 	.WORD RSX$SVTK-AAA		; SPECIFY TASK VECTOR
                               FF1B' 014F   277 	.WORD RSX$SRDA-AAA		; SPECIFY RECEIVE AST'S
                               FF1B' 0151   278 	.WORD RSX$SPRA-AAA		; SPECIFY POWER FAIL AST
                               0092' 0153   279 	.WORD BBB-AAA
                               0092' 0155   280 	.WORD	BBB-AAA		
                               FF1B' 0157   281 	.WORD	RSX$ASTX-AAA		; AST SERVICE EXIT
                               0092' 0159   282 	.WORD	BBB-AAA		
                               0092' 015B   283 	.WORD	BBB-AAA		
                               0092' 015D   284 	.WORD	BBB-AAA		
                               0092' 015F   285 	.WORD	BBB-AAA		
                               0092' 0161   286 	.WORD BBB-AAA			; GET SENSE SWITCHES
                               FF1B' 0163   287 	.WORD RSX$GMCR-AAA		; GET MCR LINE
                               0092' 0165   288 	.WORD	BBB-AAA		
                               0092' 0167   289 	.WORD	BBB-AAA		
                               0092' 0169   290 	.WORD	BBB-AAA		
                               0092' 016B   291 	.WORD	BBB-AAA		
                               0092' 016D   292 	.WORD	BBB-AAA		
                               0092' 016F   293 	.WORD	BBB-AAA		
                               0092' 0171   294 	.WORD	BBB-AAA		
                               0092' 0173   295 	.WORD	BBB-AAA		
                               FF1B' 0175   296 	.WORD	RSX$PARS-AAA		;
                                     0177   297 BBB:	$DSW	#IE.SDP
                                     0182   298 ;
                                     0182   299 ; IESDP - DIC OR DPB SIZE BAD
RSXEXCEPTION                                                     22-AUG-1978 00:23:47   VAX-11 MACRO X0.3-11               Page   8
00              EMT PROCESSOR                                                                                                    (4)

                                     0182   300 ;
         26 AB         9D 8F     99  0182   301 IESDP:	CVTBW	#IE.SDP,H.DSW(R11)	; SET DSW TO ERROR STATUS
       0188 CA            01     A8  0187   302 	BISW	#1@PSL_CC,I_PS(R10)	; SET THE C-BIT
                          00A5   31  018C   303 	BRW	REENTER			; REENTER IMAGE
                                     018F   304  
                                     018F   305 	.DSABL	LSB
RSXEXCEPTION                                                     22-AUG-1978 00:23:47   VAX-11 MACRO X0.3-11               Page   9
00              NON EMT CM TRAPS                                                                                                 (5)

                                     018F   307 	.SBTTL NON EMT CM TRAPS
                                     018F   308 ;
                                     018F   309 ; SST TRAPS
                                     018F   310 ;
                                     018F   311 RESERVED:
         00 B0            01     B1  018F   312 	CMPW	#1,@(R0)		; WAIT?
                          03     12  0193   313 	BNEQ	TBIT			;
                          009C   31  0195   314 	BRW	REENTER
                                     0198   315 TBIT:
       0184 CA            02     C2  0198   316 	SUBL	#2,I_PC(R10)		; ADJUST PC FOR REI
                                     019D   317 IOT:
                                     019D   318 BPT:
                                     019D   319 TRAP:
                                     019D   320 ILL:
                                     019D   321 ODD:
                                     019D   322 MEMORY:
                                     019D   323 ;
                                     019D   324 ; GET OFFSET INTO SST VECTOR
                                     019D   325 ;
            51       0000'CF44   9A  019D   326 	MOVZBL	W^RSX$B_SST[R4],R1	; GET OFFSET INTO SST VECTOR
                                     01A3   327 ;
                                     01A3   328 ; FIND SST VECTOR
                                     01A3   329 ;
            53         14 AB     3C  01A3   330 	MOVZWL	H.ODVL(R11),R3		; GET SIZE OF VECTOR
            52         12 AB     3C  01A7   331 	MOVZWL	H.ODVA(R11),R2		; GET VECTOR ADDRESS
                          0B     13  01AB   332 	BEQL	30$			; IF EQL THEN TRY TASK
            53            51     91  01AD   333 	CMPB	R1,R3			; VECTOR LONG ENOUGH?
                          06     1A  01B0   334 	BGTRU	30$			; IF GTRU NO
            52            6241   3C  01B2   335 	MOVZWL	(R2)[R1],R2		; GET ADDRESS OF USER'S ROUTINE
                          26     12  01B6   336 	BNEQ	50$			; IF NEQ THEN TRY IT
                                     01B8   337 30$:					;
            53         18 AB     3C  01B8   338 	MOVZWL	H.TKVL(R11),R3		; GET SIZE OF SECONDARY VECTOR
            52         16 AB     3C  01BC   339 	MOVZWL	H.TKVA(R11),R2		; TRY TASK VECTOR
                          0B     13  01C0   340 	BEQL	40$			; IF EQL THEN NONE - ABORT
            53            51     91  01C2   341 	CMPB	R1,R3			; VECTOR LONG ENOUGH?
                          06     1A  01C5   342 	BGTRU	40$			; IF GTRU THEN NO
            52            6241   3C  01C7   343 	MOVZWL	(R2)[R1],R2		; GET ADDRESS OF USER'S ROUTINE
                          11     12  01CB   344 	BNEQ	50$			; IF NEQ THEN TRY IT
                                     01CD   345 ;
                                     01CD   346 ; ABORT IMAGE BECAUSE OF UNFIELDED SST
                                     01CD   347 ;
            06            10     78  01CD   348 40$:	ASHL	#16,#RSX$C_SUBSYSTEM,R0	; SET UP ERROR CODE
                          50         01D0       
            54            03     78  01D1   349 	ASHL	#3,R4,R4		; 
                          54         01D4       
            54       8004 8F     A9  01D5   350 	BISW3	#^X08004,R4,R0		; INSERT AND MERGE BITS
                          50         01DA       
                          FE22'  31  01DB   351 	BRW	RSX$ABORT		; ABORT EXECUTION
                                     01DE   352 ;
                                     01DE   353 ; PUT IMAGE IN SST ROUTINE
                                     01DE   354 ;
                                     01DE   355 50$:	IFNOWRT	#8,-8(R6),40$		; IF NO WRITE, THEN NO SST
            08            54     91  01E5   356 	CMPB	R4,#<<RSX$_ACCVIO&^X0F8>@-3>; MEMORY PROBLEM?
                          11     12  01E8   357 	BNEQ	60$			; IF NEQ THEN NO
                                     01EA   358 ;
                                     01EA   359 ; MEMORY PROTECT PROBLEM
                                     01EA   360 ;
RSXEXCEPTION                                                     22-AUG-1978 00:23:47   VAX-11 MACRO X0.3-11               Page  10
00              NON EMT CM TRAPS                                                                                                 (5)

       0188 CA       FFE0 8F     AB  01EA   361 	BICW3	#^X0FFE0,I_PS(R10),-(R6); PUT PSW ON STACK
                          76         01F1       
            76       0184 CA     3C  01F2   362 	MOVZWL	I_PC(R10),-(R6)		; PUT PC ON STACK AND ZERO WORD
                          76     D4  01F7   363 	CLRL	-(R6)			; ZERO TWO MORE WORDS
                          30     11  01F9   364 	BRB	80$			; CONTINUE IN COMMON
                                     01FB   365 ;
                                     01FB   366 ; NON MEMORY VIOLATION SST
                                     01FB   367 ;
            03            54     91  01FB   368 60$:	CMPB	R4,#<<RSX$_NONRSXEMT&^X0F8>@-3>; EMT?
                          05     13  01FE   369 	BEQL	70$			; IF EQL THEN YES
            04            54     91  0200   370 	CMPB	R4,#<<RSX$_TRAP&^X0F8>@-3>; TRAP?
                          19     12  0203   371 	BNEQ	75$			; IF NEQ THEN NO
       0188 CA       FFE0 8F     AB  0205   372 70$:	BICW3	#^X0FFE0,I_PS(R10),-(R6); INSERT PSW
                          76         020C       
            57       0184 CA     D0  020D   373 	MOVL	I_PC(R10),R7		; GET THE PC
            76            57     B0  0212   374 	MOVW	R7,-(R6)		; INSERT IT ON STACK
            76         FE A7     9B  0215   375 	MOVZBW	-2(R7),-(R6)		; PUT LOW BYTE OF TRAP ON STACK
            66            02     A4  0219   376 	MULW	#2,(R6)			; LOW ORDER TIMES TWO
                          0D     11  021C   377 	BRB	80$			; CONTINUE IN COMMON
       0188 CA       FFE0 8F     AB  021E   378 75$:	BICW3	#^X0FFE0,I_PS(R10),-(R6); INSERT PSW
                          76         0225       
            76       0184 CA     B0  0226   379 	MOVW	I_PC(R10),-(R6)		; INSERT PC
       0184 CA            52     D0  022B   380 80$:	MOVL	R2,I_PC(R10)		; SET SECOND RETURN ADDRESS
                     0188 CA     B4  0230   381 	CLRW	I_PS(R10)		; SET CONDITIONS AND T-BIT FOR SST
                                     0234   382 ;
                                     0234   383 ; REENTER IMAGE AFTER DIRECTIVE OR TRAP
                                     0234   384 ;
                                     0234   385 REENTER:				;
       014C CA            06     E7  0234   386 	BBCCI	#SV_PENDWAIT,I_STATE(R10),10$; CLEAR AST WAIT INTERLOCK BIT
                          00         0239       
                          7E     7C  023A   387 10$:	CLRQ	-(SP)			; RESERVE FOUR WORDS OF STACK FOR RESTORE
RSXEXCEPTION                                                     22-AUG-1978 00:23:47   VAX-11 MACRO X0.3-11               Page  11
00              RSX$RESTORE -- RESTORE IMAGE CONTEXT AND ENTER                                                                   (6)

                                     023C   389 	.SBTTL	RSX$RESTORE -- RESTORE IMAGE CONTEXT AND ENTER IMAGE
                                     023C   390 ;++
                                     023C   391 ; RSX$RESTORE - RESTORE IMAGE REGISTERS AND ENTER IMAGE
                                     023C   392 ;
                                     023C   393 ; FUNCTIONAL DESCRIPTION:
                                     023C   394 ;
                                     023C   395 ; THIS ROUTINE IS ENTERED AFTER A TRAP OR DIRECTIVE. ANY PENDING AST'S
                                     023C   396 ; ARE DETECTED AND THE IMAGE EXECUTION IS DIVERTED TO THE AST IF POSSIBLE.
                                     023C   397 ; THIS ROUTINE CAN BE INTERRUPTED BY AN AST. IT IS NECESSARY TO SET AN 
                                     023C   398 ; INTERLOCK TO SIGNAL THE AST LOGIC TO ALWAYS RETURN AT RSX$RESTORE IF
                                     023C   399 ; AN AST OCCURED DURING THE RESTORE.
                                     023C   400 ;
                                     023C   401 ; INPUTS:
                                     023C   402 ;
                                     023C   403 ;	R10 = ADDRESS OF THE IMAGE DATA BASE
                                     023C   404 ;	R11 = ADDRESS OF THE IMAGE HEADER
                                     023C   405 ;
                                     023C   406 ; STACK:
                                     023C   407 ;
                                     023C   408 ;	TWO LONG WORDS ARE ON THE STACK.
                                     023C   409 ;
                                     023C   410 ; OUTPUTS:
                                     023C   411 ;
                                     023C   412 ;	NONE
                                     023C   413 ;--
                                     023C   414 RSX$RESTORE::				; RESTORE REGISTERS
       014C CA            00     E6  023C   415 	BBSSI	#SV_RESTORE,I_STATE(R10),10$; SET INTERLOCK BIT
                          00         0241       
                                     0242   416 10$:
                                     0242   417 ;
                                     0242   418 ; SEE IF ANY AST'S CAN BE DELIVERED
                                     0242   419 ;
            57       0184 CA     7D  0242   420 	MOVQ	I_PC(R10),R7		; SET UP FOR SUBROUTINE CALL
                          FDB6'  30  0247   421 	BSBW	RSX$RETURNAST		; GET AST CONTEXT IF ANY
            6E            57     7D  024A   422 	MOVQ	R7,(SP)			; RESTORE PC/PSL
                                     024D   423 ;
                                     024D   424 ; RESTORE REGISTERS
                                     024D   425 ;
            50   00000000'9F     7D  024D   426 	MOVQ	@#CTL$AL_CMCNTX+S_R0,R0	; RESTORE R0,R1
            52   00000008'9F     7D  0254   427 	MOVQ	@#CTL$AL_CMCNTX+S_R2,R2	; RESTORE R2,R3
            54   00000010'9F     7D  025B   428 	MOVQ	@#CTL$AL_CMCNTX+S_R4,R4	; RESTORE R4,R5
         04 AE            04     E1  0262   429 	BBC	#PSL_TBIT,4(SP),20$	; IF TBIT SET THEN SET TPENDING
                          05         0266       
         04 AE            1E     E2  0267   430 	BBSS	#30,4(SP),20$		; SET TBIT PENDING
                          00         026B       
                                     026C   431 ;
                                     026C   432 ; CLEAR RESTORE IN PROGRESS FLAG
                                     026C   433 ;
                                     026C   434 ; NOTE THAT A WINDOW EXISTS BETWEEN THIS INSTRUCTION AND THE REI SO
                                     026C   435 ; THE AST LOGIC THAT CHECKS FOR RESTORE IN PROGRESS, CHECKS BOTH THE
                                     026C   436 ; SV_RESTORE BIT AND PC = RSX$REI.
                                     026C   437 ;
       014C CA            00     E7  026C   438 20$:	BBCCI	#SV_RESTORE,I_STATE(R10),RSX$REI; SET RESTORE DONE
                          00         0271       
                                     0272   439 RSX$REI::				; PC OF REI INSTRUCTION
                                 02  0272   440 	REI				;
                                     0273   441 ;
RSXEXCEPTION                                                     22-AUG-1978 00:23:47   VAX-11 MACRO X0.3-11               Page  12
00              RSX$RESTORE -- RESTORE IMAGE CONTEXT AND ENTER                                                                   (6)

                                     0273   442 	.END
RSXEXCEPTION                                                     22-AUG-1978 00:23:47   VAX-11 MACRO X0.3-11               Page  13
SYMBOL TABLE                                                                                                                     (6)

$$MSG          = 00000000            H.GARD           0000003A            IE.FEX         = FFFFFFCF            
...GBL         = 00000000            H.HDLN           00000002            IE.FHE         = FFFFFFC5            
AAA              000000E5 R     05   H.IPC            0000000E            IE.FIX         = FFFFFFF7            
ACBC_CTLRCAST  = 00000002            H.IPS            0000000C            IE.FLN         = FFFFFFAF            
ACBC_FLOATAST  = 00000003            H.ISP            00000010            IE.FOP         = FFFFFFCB            
ACBC_PWRAST    = 00000000            H.LUN            0000003E            IE.HFU         = FFFFFFE4            
ACBC_RCVAST    = 00000001            H.NLUN           0000003C            IE.HWR         = FFFFFFFA            
ACBV_INPROG    = 00000001            H.NML            00000031            IE.IBS         = FFFFFFA7            
ACBV_PERM      = 00000000            H.ODVA           00000012            IE.IDU         = FFFFFFA4            
ACBV_TYPE      = 00000008            H.ODVL           00000014            IE.IEF         = FFFFFF9F            
ACB_FLAGS        0000000C            H.OVLY           0000002C            IE.IES         = FFFFFFAE            
ACB_LINK         00000000            H.PFVA           0000001A            IE.IFC         = FFFFFFFE            
ACB_UPC          0000000A            H.RCVA           0000001E            IE.IFU         = FFFFFFE7            
ACB_UPRM         00000008            H.RRVA           00000032            IE.ILL         = FFFFFFD6            
ADR_HIGHLIM      00000004            H.SPRI           00000030            IE.ILU         = FFFFFFA0            
ADR_LOWLIM       00000000            H.TKVA           00000016            IE.ILV         = FFFFFFED            
ADR_SIZE         00000008            H.TKVL           00000018            IE.INS         = FFFFFFFE            
AP_NAME          00000004            H.VEXT           0000002E            IE.IOP         = FFFFFFAD            
AST_PARAM        00000004            H.WND            00000024            IE.IPR         = FFFFFFA1            
AST_PC           00000010            IE.2DV         = FFFFFFD0            IE.ISQ         = FFFFFFC3            
AST_PSL          00000014            IE.ABO         = FFFFFFF1            IE.ITI         = FFFFFFA3            
AST_R0           00000008            IE.ACT         = FFFFFFF9            IE.ITP         = FFFFFFA8            
AST_R1           0000000C            IE.ADP         = FFFFFF9E            IE.ITS         = FFFFFFF8            
BBB              00000177 R     05   IE.ALC         = FFFFFFAC            IE.IUI         = FFFFFFA5            
BIT...         = 00068084            IE.ALG         = FFFFFFAC            IE.LCK         = FFFFFFE5            
BPT              0000019D R     05   IE.ALN         = FFFFFFDE            IE.LNL         = FFFFFFA6            
C$$ORE         = 00000000            IE.AST         = FFFFFFB0            IE.MAP         = FFFFFFAF            
CTL$AL_CMCNTX    ********   X   05   IE.BAD         = FFFFFFFF            IE.MOD         = FFFFFFEB            
C_CANONPS      = 83C00000            IE.BBE         = FFFFFFC8            IE.NBF         = FFFFFFD9            
C_RCVDSTR      = 44564352            IE.BCC         = FFFFFFBE            IE.NBK         = FFFFFFD7            
EMT              000000A9 R     05   IE.BDI         = FFFFFFCC            IE.NDR         = FFFFFFB8            
FCB_ATTRIBS      0000007C            IE.BDR         = FFFFFFCE            IE.NFI         = FFFFFFC4            
FCB_FIB          0000004C            IE.BDV         = FFFFFFC9            IE.NFW         = FFFFFFBB            
FCB_FID          00000000            IE.BHD         = FFFFFFC0            IE.NLK         = FFFFFFB1            
FCB_FNAME        00000014            IE.BLB         = FFFFFFBA            IE.NLN         = FFFFFFDB            
FCB_FNAMEDESC    0000000C            IE.BLK         = FFFFFFEC            IE.NNC         = FFFFFFB3            
FCB_FNB          00000002            IE.BNM         = FFFFFFCA            IE.NNL         = FFFFFFB2            
FCB_PC           00000078            IE.BTF         = FFFFFFB4            IE.NNN         = FFFFFFBC            
FCB_RESULT       00000030            IE.BTP         = FFFFFFD5            IE.NOD         = FFFFFFE9            
FCB_RESULTDESC   00000004            IE.BVR         = FFFFFFC1            IE.NSF         = FFFFFFE6            
FCB_SIZE         000000B4            IE.BYT         = FFFFFFED            IE.NST         = FFFFFFB0            
FP_AP            00000008            IE.CKP         = FFFFFFF6            IE.NSW         = FFFFFFEE            
FP_FP            0000000C            IE.CKS         = FFFFFFE2            IE.NVR         = FFFFFFAA            
FP_PC            00000010            IE.CLO         = FFFFFFDA            IE.NVW         = FFFFFFA9            
FP_PSL           00000004            IE.CNR         = FFFFFFB7            IE.OFL         = FFFFFFBF            
FP_REGISTERS     00000014            IE.CON         = FFFFFFEA            IE.ONP         = FFFFFFFB            
GBL...         = 00000000            IE.DAA         = FFFFFFF8            IE.OVR         = FFFFFFEE            
H.CSP            00000000            IE.DAO         = FFFFFFF3            IE.PES         = FFFFFFAD            
H.CUIC           00000008            IE.DFU         = FFFFFFE8            IE.PNS         = FFFFFFA2            
H.DSW            00000026            IE.DNA         = FFFFFFF9            IE.PRI         = FFFFFFF0            
H.DUIC           0000000A            IE.DNR         = FFFFFFFD            IE.PTS         = FFFFFFFD            
H.EFLM           00000004            IE.DUN         = FFFFFFF7            IE.RAC         = FFFFFFD4            
H.EFSV           00000020            IE.DUP         = FFFFFFC7            IE.RAT         = FFFFFFD3            
H.FCS            00000028            IE.EOF         = FFFFFFF6            IE.RBG         = FFFFFFD8            
H.FORT           0000002A            IE.EOT         = FFFFFFC2            IE.RBS         = FFFFFFF1            
H.FPSA           00000022            IE.EOV         = FFFFFFF5            IE.RCN         = FFFFFFD2            
H.FPVA           0000001C            IE.EXP         = FFFFFFB5            IE.RER         = FFFFFFE0            
RSXEXCEPTION                                                     22-AUG-1978 00:23:47   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                     (6)

IE.RNM         = FFFFFFCD            I_FLOATAST       000001A0            LUT_UNIT         00000020            
IE.RSU         = FFFFFFEF            I_FLOATCSR       000001A4            MAXDIC         = 00000049            
IE.SDP         = FFFFFF9D            I_FLOATERR       000001A8            MEMORY           0000019D R     05   
IE.SNC         = FFFFFFDD            I_FLOATTMP       000001B4            ODD              0000019D R     05   
IE.SPC         = FFFFFFFA            I_GARD           000000C8            PSL_CC         = 00000000            
IE.SQC         = FFFFFFDC            I_HIGHEFN        00000148            PSL_CM         = 0000001F            
IE.SRE         = FFFFFFF2            I_HIGHSIZE       000000D0            PSL_FPD        = 0000001B            
IE.STK         = FFFFFFC6            I_IMAGEVBN       000000D4            PSL_FU         = 00000006            
IE.TCH         = FFFFFFF5            I_INISIZE        000000CC            PSL_TBIT       = 00000004            
IE.TMM         = FFFFFFB9            I_LENGTH         000001EC            QIOV_FILES     = 00000000            
IE.TMO         = FFFFFFB6            I_LOGNAME        000000B8            QIO_FLAGS        0000001C            
IE.ULK         = FFFFFFAB            I_LUT            00000144            QIO_FUNCTION     0000001A            
IE.ULN         = FFFFFFFB            I_NLUN           00000140            QIO_IOSB         0000000E            
IE.UNS         = FFFFFFFC            I_PC             00000184            QIO_LUT          00000016            
IE.UPN         = FFFFFFFF            I_PROCNAME       00000128            QIO_SECONDBLK    0000001E            
IE.VER         = FFFFFFFC            I_PS             00000188            QIO_SIZE         00000022            
IE.WAC         = FFFFFFE3            I_PWRAST         0000019C            REENTER          00000234 R     05   
IE.WAT         = FFFFFFE1            I_R0             00000164            RESERVED         0000018F R     05   
IE.WCK         = FFFFFFAA            I_R1             00000168            RSX$ABORT        ********   X   05   
IE.WER         = FFFFFFDF            I_R2             0000016C            RSX$ABRT         ********   X   05   
IE.WLK         = FFFFFFF4            I_R3             00000170            RSX$ALTP         ********   X   05   
IE.WOV         = FFFFFFAB            I_R4             00000174            RSX$ALUN         ********   X   05   
IESDP            00000182 R     05   I_R5             00000178            RSX$ASTX         ********   X   05   
ILL              0000019D R     05   I_R6             0000017C            RSX$A_EXITBLOCK  ********   X   05   
IOT              0000019D R     05   I_RAD50NAME      00000124            RSX$A_IMPURE     ********   X   05   
IS.BV          = 00000005            I_RCVAST         00000198            RSX$B_DIC        ********   X   05   
IS.CC          = 00000301            I_RCVMAIL        0000013C            RSX$B_SST        ********   X   05   
IS.CLR         = 00000000            I_RUNFLAGS       00000190            RSX$CLEF         ********   X   05   
IS.CR          = 00000D01            I_SCRATCH        00000000            RSX$CMKT         ********   X   05   
IS.EOT         = 00000401            I_STATE          0000014C            RSX$CMTRAP       00000078 RG    05   
IS.ESC         = 00001B01            I_TYPE           00000180            RSX$CSRQ         ********   X   05   
IS.ESQ         = 00009B01            I_UIC            00000118            RSX$C_SUBSYSTEM= 00000006            
IS.PES         = 00008001            I_WAIT           00000154            RSX$DECL         ********   X   05   
IS.PND         = 00000000            I_WAITSAVE       0000015C            RSX$DSAR         ********   X   05   
IS.RDD         = 00000002            LUTC_CR        = 00000005            RSX$DSCP         ********   X   05   
IS.SET         = 00000002            LUTC_DISK      = 00000002            RSX$ENAR         ********   X   05   
IS.SPD         = 00000002            LUTC_LP        = 00000004            RSX$ENCP         ********   X   05   
IS.SUC         = 00000001            LUTC_RMS       = 00000000            RSX$EXCEPTION    00000000 RG    05   
IS.TAB         = 00000901            LUTC_TAPE      = 00000003            RSX$EXIF         ********   X   05   
IS.TMO         = 00000002            LUTC_TRM       = 00000001            RSX$EXIT         ********   X   05   
I_ADR0           000000D8            LUTV_CTRLC     = 00000002            RSX$EXTK         ********   X   05   
I_ASCIINAME      0000011C            LUTV_CTRLO     = 00000000            RSX$GLUN         ********   X   05   
I_ASTPOOL        000000A8            LUTV_PRM       = 00000003            RSX$GMCR         ********   X   05   
I_ASTQUEUE       000000A0            LUTV_TI        = 00000001            RSX$GPRT         ********   X   05   
I_BAILOUTFP      0000018C            LUT_CHAN         0000000C            RSX$GTIM         ********   X   05   
I_CMDAD          000000C4            LUT_CHAR         00000014            RSX$GTSK         ********   X   05   
I_CMDSZ          000000C0            LUT_CTRLC        00000034            RSX$MRKT         ********   X   05   
I_CURAST         00000194            LUT_FLAGS        0000000A            RSX$PARS         ********   X   05   
I_FCBPOOL        000000B0            LUT_INFONAME     00000030            RSX$QIO          ********   X   05   
I_FCC            000001B0            LUT_INFOUNIT     00000032            RSX$QIOW         ********   X   05   
I_FLOATA0        000001BC            LUT_LINK         00000000            RSX$RCVD         ********   X   05   
I_FLOATA1        000001C4            LUT_REALNAME     00000020            RSX$RCVX         ********   X   05   
I_FLOATA2        000001CC            LUT_REF          00000008            RSX$RDAF         ********   X   05   
I_FLOATA3        000001D4            LUT_RSXNAME      00000010            RSX$REI          00000272 RG    05   
I_FLOATA4        000001DC            LUT_RSXUNIT      00000012            RSX$RESTORE      0000023C RG    05   
I_FLOATA5        000001E4            LUT_SIZE         00000038            RSX$RETEXIT      ********   X   05   
I_FLOATADR       000001AC            LUT_TYPE         00000018            RSX$RETURNAST    ********   X   05   
RSXEXCEPTION                                                     22-AUG-1978 00:23:47   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                     (6)

RSX$RQST         ********   X   05   S_TYPE           0000001C            
RSX$RSUM         ********   X   05   TBIT             00000198 R     05   
RSX$RUN          ********   X   05   TRAP             0000019D R     05   
RSX$SDAT         ********   X   05   W.BATT           00000006            
RSX$SETF         ********   X   05   W.BFPD           0000000C            
RSX$SPND         ********   X   05   W.BHVR           00000004            
RSX$SPRA         ********   X   05   W.BLGH           00000010            
RSX$SRDA         ********   X   05   W.BLPD           0000000E            
RSX$SVDB         ********   X   05   W.BLVR           00000002            
RSX$SVTK         ********   X   05   W.BNPD           0000000D            
RSX$WSIG         ********   X   05   W.BOFF           0000000A            
RSX$WTLO         ********   X   05   W.BPCB           00000000            
RSX$WTSE         ********   X   05   W.BSIZ           00000008            
RSX$_ACCVIO    = 00068044            
RSX$_BADLIBREF = 0006806C            
RSX$_BADSTACK  = 0006804C            
RSX$_BREAK     = 0006800C            
RSX$_EXITSTATUS= 00068180            
RSX$_EXTERNABRT= 0006805C            
RSX$_ILLINST   = 0006802C            
RSX$_INSFDYNMEM= 00068054            
RSX$_IOT       = 00068014            
RSX$_LIBNOTFND = 00068074            
RSX$_LOADERROR = 0006807C            
RSX$_NONRSXEMT = 0006801C            
RSX$_NOSUCHDEV = 000680C2            
RSX$_NOTSKIMG  = 00068064            
RSX$_ODDADDR   = 00068034            
RSX$_PMD       = 000680CA            
RSX$_RCVMBXSIZ = 0000012C            
RSX$_RESERVED  = 00068004            
RSX$_TBIT      = 0006803C            
RSX$_TRAP      = 00068024            
SS$_ACCVIO       ********   X   05   
SS$_CONTINUE     ********   X   05   
SS$_DEBUG        ********   X   05   
SS$_RESIGNAL     ********   X   05   
SV_ASTLVL        00000005            
SV_DCL           00000002            
SV_FLOATAST      0000000A            
SV_FRESTORE      00000003            
SV_NOAST         00000004            
SV_PENDWAIT      00000006            
SV_PWRAST        00000009            
SV_RCVAST        00000008            
SV_RESTORE       00000000            
SV_TRANSLATE     00000001            
SV_WAIT          00000007            
S_PC             00000020            
S_PS             00000024            
S_R0             00000000            
S_R1             00000004            
S_R2             00000008            
S_R3             0000000C            
S_R4             00000010            
S_R5             00000014            
S_R6             00000018            
RSXEXCEPTION                                                     22-AUG-1978 00:23:47   VAX-11 MACRO X0.3-11               Page  16
PROGRAM SECTION SYNOPSIS                                                                                                         (6)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
..ABS.           00000042      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000000      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXDEF           000001F0      04     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXCODE          00000273      05     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
15810. BYTES LEFT IN FREE MEMORY POOL.
28. BYTES OF RECLAIMED MEMORY.
OBJ$:RSXEXCEPT,LIS$:RSXEXCEPT/-SP=SRC$:C,RSXEXCEPT
18 MLB DIR RDS - 483 GETS TO DEFINE 18 MACROS. 16 INTER. FILE WRITES. 
