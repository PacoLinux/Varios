RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 00:24:03   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)     134  RSX$CLEF - RSX11M CLEF$$ DIRECTIVE
   (3)     170  RSX$CMKT - RSX11M CMKT$ DIRECTIVE
   (4)     202  RSX$DECL/RSX$WSIG - RSX11M DECL$ AND WSIG$ DIRE
   (5)     235  RSX$EXIF - RSX11M EXIF$ DIRECTIVE
   (6)     271  RSX$MRKT - RSX11M MRKT$ DIRECTIVE
   (7)     351  RSX$RDAF - RSX11M RDAF$ DIRECTIVE
   (8)     389  RSX$SETF - RSX11M SETF$ DIRECTIVE
   (9)     429  RSX$WTLO - RSX11M WTLO$ DIRECTIVE
   (10)    473  RSX$WTSE - RSX11M WTSE$ DIRECTIVE
   (11)    511  RSX$WAIT - COMMON CODE FOR WAIT FOR SINGLE AND 
   (12)    566  CVTEFN - CONVERT EVENT FLAG NUMBER
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 00:24:03   VAX-11 MACRO X0.3-11               Page   1
V04.0                                                                                                                            (1)

                                     0000     1 	.TITLE	RSXEFN - RSX11M EVENT FLAG DIRECTIVES
                                     0000     2 	.IDENT	/V04.0/		;
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY:
                                     0000    25 ;
                                     0000    26 ;	STARLET RSX AME.
                                     0000    27 ;
                                     0000    28 ; ABSTRACT:
                                     0000    29 ;
                                     0000    30 ;	RSX11M EVENT FLAG DIRECTIVE EMULATION.
                                     0000    31 ;
                                     0000    32 ; AUTHOR:
                                     0000    33 ;
                                     0000    34 ;	R.HEINEN 4-NOV-76
                                     0000    35 ;--
                                     0000    36 ;
                                     0000    37 ; EXTERNAL SYMBOLS
                                     0000    38 ;
                                     0000    39 	DRERR$			; DEFINE DIRECTIVE ERROR CODES
                                     0000    40 	$RSXDEF			; DEFINE RSX SYMBOLS
                                     0000    41 	IOERR$			; DEFINE I/O ERROR CODES
                                     0000    42  
                                 00000000    43 	.PSECT	RSXCODE,NOWRT
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 00:24:03   VAX-11 MACRO X0.3-11               Page   2
V04.0           RSX$CLEF - RSX11M CLEF$$ DIRECTIVE                                                                               (2)

                                     0000    45 	.SBTTL	RSX$CLEF - RSX11M CLEF$$ DIRECTIVE
                                     0000    46 ;++
                                     0000    47 ; RSX$CLEF - RSX11M CLEAR EVENT FLAG DIRECTIVE
                                     0000    48 ;
                                     0000    49 ; FUNCTIONAL DESCRIPTION:
                                     0000    50 ;
                                     0000    51 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     0000    52 ; "CLEF$$" DIRECTIVE.
                                     0000    53 ;
                                     0000    54 ; INPUT PARAMETERS:
                                     0000    55 ;
                                     0000    56 ;	R5 = ADDRESS OF DPB+2
                                     0000    57 ;	R6 = CM IMAGE STACK ADDRESS
                                     0000    58 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     0000    59 ;	R11 = ADDRESS OF IMAGE HEADER
                                     0000    60 ;
                                     0000    61 ; OUTPUT PARAMETERS:
                                     0000    62 ;
                                     0000    63 ;	R10,R11 ARE PRESERVED
                                     0000    64 ;
                                     0000    65 ; IMPLICIT OUTPUTS:
                                     0000    66 ;
                                     0000    67 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     0000    68 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     0000    69 ;
                                     0000    70 ; DSW RETURN CODES:
                                     0000    71 ;
                                     0000    72 ;	IS.CLR FLAG WAS CLEAR
                                     0000    73 ;	IS.SET FLAG WAS SET
                                     0000    74 ;	IE.IEF INVALID EVENT FLAG SPECIFIED
                                     0000    75 ;--
                                     0000    76 RSX$CLEF::				; CLEAR EVENT FLAG TASK DIRECTIVE
                          0161   30  0000    77 	BSBW	CVTEFN			; CONVERT EFN
                                     0003    78 	$CLREF_S R1			; CLEAR IT
                          00E0   31  000C    79 	BRW	SETCLRDSW		; MAP THE DSW RETURN CODE
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 00:24:03   VAX-11 MACRO X0.3-11               Page   3
V04.0           RSX$CMKT - RSX11M CMKT$ DIRECTIVE                                                                                (3)

                                     000F    81 	.SBTTL	RSX$CMKT - RSX11M CMKT$ DIRECTIVE
                                     000F    82 ;++
                                     000F    83 ; RSX$CMKT - RSX11M CANCEL MARK TIME DIRECTIVE
                                     000F    84 ;
                                     000F    85 ; FUNCTIONAL DESCRIPTION:
                                     000F    86 ;
                                     000F    87 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     000F    88 ; "CMKT$" DIRECTIVE.
                                     000F    89 ;
                                     000F    90 ; INPUT PARAMETERS:
                                     000F    91 ;
                                     000F    92 ;	R5 = ADDRESS OF DPB+2
                                     000F    93 ;	R6 = CM IMAGE STACK ADDRESS
                                     000F    94 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     000F    95 ;	R11 = ADDRESS OF IMAGE HEADER
                                     000F    96 ;
                                     000F    97 ; OUTPUT PARAMETERS:
                                     000F    98 ;
                                     000F    99 ;	R10,R11 ARE PRESERVED
                                     000F   100 ;
                                     000F   101 ; IMPLICIT OUTPUTS:
                                     000F   102 ;
                                     000F   103 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     000F   104 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     000F   105 ;
                                     000F   106 ; DSW RETURN CODES:
                                     000F   107 ;	IS.SUC	SUCCESSFUL
                                     000F   108 ;--
                                     000F   109 RSX$CMKT::				; CANCEL MARK TIME DIRECTIVE
                                     000F   110 	$CANTIM_S			; ISSUE SERVICE CALL
                                 05  001A   111 	RSB				; RETURN
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 00:24:03   VAX-11 MACRO X0.3-11               Page   4
V04.0           RSX$DECL/RSX$WSIG - RSX11M DECL$ AND WSIG$ DIRE                                                                  (4)

                                     001B   113 	.SBTTL	RSX$DECL/RSX$WSIG - RSX11M DECL$ AND WSIG$ DIRECTIVES
                                     001B   114 ;++
                                     001B   115 ; RSX$DECL - RSX11M DECLARE SIGNIFICANT EVENT DIRECTIVE
                                     001B   116 ; RSX$WSIG - RSX11M WAIT FOR SIGNIFICANT EVENT DIRECTIVE
                                     001B   117 ;
                                     001B   118 ; FUNCTIONAL DESCRIPTION:
                                     001B   119 ;
                                     001B   120 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     001B   121 ; "DECL$" DIRECTIVE.
                                     001B   122 ;
                                     001B   123 ; INPUT PARAMETERS:
                                     001B   124 ;
                                     001B   125 ;	R5 = ADDRESS OF DPB+2
                                     001B   126 ;	R6 = CM IMAGE STACK ADDRESS
                                     001B   127 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     001B   128 ;	R11 = ADDRESS OF IMAGE HEADER
                                     001B   129 ;
                                     001B   130 ; OUTPUT PARAMETERS:
                                     001B   131 ;
                                     001B   132 ;	R10,R11 ARE PRESERVED
                                     001B   133 ;
                                     001B   134 ; IMPLICIT OUTPUTS:
                                     001B   135 ;
                                     001B   136 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     001B   137 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     001B   138 ;
                                     001B   139 ; DSW RETURN CODES:
                                     001B   140 ;	IS.SUC	SUCCESSFUL
                                     001B   141 ;--
                                     001B   142 RSX$DECL::				; DECLARE SIGNIFICANT EVENT DIRECTIVE
                                     001B   143 RSX$WSIG::				; WAIT FOR SIGNIFICANT EVENT DIRECTIVE
                                 05  001B   144 	RSB				; AND RETURN
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 00:24:03   VAX-11 MACRO X0.3-11               Page   5
V04.0           RSX$EXIF - RSX11M EXIF$ DIRECTIVE                                                                                (5)

                                     001C   146 	.SBTTL	RSX$EXIF - RSX11M EXIF$ DIRECTIVE
                                     001C   147 ;++
                                     001C   148 ; RSX$EXIF - RSX11M EXIT IF DIRECTIVE
                                     001C   149 ;
                                     001C   150 ; FUNCTIONAL DESCRIPTION:
                                     001C   151 ;
                                     001C   152 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     001C   153 ; "EXIF$" DIRECTIVE.
                                     001C   154 ;
                                     001C   155 ; INPUT PARAMETERS:
                                     001C   156 ;
                                     001C   157 ;	R5 = ADDRESS OF DPB+2
                                     001C   158 ;	R6 = CM IMAGE STACK ADDRESS
                                     001C   159 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     001C   160 ;	R11 = ADDRESS OF IMAGE HEADER
                                     001C   161 ;
                                     001C   162 ; OUTPUT PARAMETERS:
                                     001C   163 ;
                                     001C   164 ;
                                     001C   165 ; IMPLICIT OUTPUTS:
                                     001C   166 ;
                                     001C   167 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     001C   168 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     001C   169 ;
                                     001C   170 ; DSW RETURN CODES:
                                     001C   171 ;	IS.SUC	SUCCESSFUL
                                     001C   172 ;	IE.IEF	INVALID EVENT FLAG SPECIFIED
                                     001C   173 ;--
                                     001C   174 RSX$EXIF::				; EXIT IF DIRECTIVE
                          0145   30  001C   175 	BSBW	CVTEFN			; CONVERT EFN
            05            00     EF  001F   176 	EXTZV	#0,#5,R1,R2		; GET FLAG NUMBER OF CLUSTER
            52            51         0022       
                                     0024   177 	$READEF_S	R1,I_SCRATCH(R10); READ THE EVENT FLAG
            6A            52     E1  002F   178 	BBC	R2,I_SCRATCH(R10),10$	; IF CLEAR THEN NO EXIT
                          03         0032       
                          FFCA'  31  0033   179 	BRW	RSX$EXIT		; EXIT THE IMAGE
                                 05  0036   180 10$:	RSB				;
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 00:24:03   VAX-11 MACRO X0.3-11               Page   6
V04.0           RSX$MRKT - RSX11M MRKT$ DIRECTIVE                                                                                (6)

                                     0037   182 	.SBTTL	RSX$MRKT - RSX11M MRKT$ DIRECTIVE
                                     0037   183 ;++
                                     0037   184 ; RSX$MRKT - RSX11M MARK TIME DIRECTIVE
                                     0037   185 ;
                                     0037   186 ; FUNCTIONAL DESCRIPTION:
                                     0037   187 ;
                                     0037   188 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     0037   189 ; "MRKT$" DIRECTIVE.
                                     0037   190 ; THE ACTION IS TO SET UP A TIMER AND IF AN AST SERVICE ROUTINE IS
                                     0037   191 ; SPECIFIED, THEN ALSO ALLOCATE AN AST CONTEXT BLOCK FOR THE DELIVERY
                                     0037   192 ; OT THE AST.
                                     0037   193 ;
                                     0037   194 ; INPUT PARAMETERS:
                                     0037   195 ;
                                     0037   196 ;	R5 = ADDRESS OF DPB+2
                                     0037   197 ;	R6 = CM IMAGE STACK ADDRESS
                                     0037   198 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     0037   199 ;	R11 = ADDRESS OF IMAGE HEADER
                                     0037   200 ;
                                     0037   201 ; OUTPUT PARAMETERS:
                                     0037   202 ;
                                     0037   203 ;	R10,R11 ARE PRESERVED
                                     0037   204 ;
                                     0037   205 ; IMPLICIT OUTPUTS:
                                     0037   206 ;
                                     0037   207 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     0037   208 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     0037   209 ;
                                     0037   210 ; DSW RETURN CODES:
                                     0037   211 ;	IS.SUC	SUCCESSFUL
                                     0037   212 ;	IE.UPN INSUFFICIENT DYNAMIC MEMORY -- SS$_INSFMEM
                                     0037   213 ;	IE.NOD QUOTA EXCEEDED -- SS$_EXQUOTA
                                     0037   214 ;	IE.ITI	INVALID TIME UNIT
                                     0037   215 ;	IE.IEF	INVALID EVENT FLAG
                                     0037   216 ;--
                                     0037   217 RSX$MRKT::				; MARK TIME DIRECTIVE
            51            85     3C  0037   218 	MOVZWL	(R5)+,R1		; GET EVENT FLAG NUMBER
                          05     13  003A   219 	BEQL	5$			; IF EQL THEN NONE
                          75     B5  003C   220 	TSTW	-(R5)			; POINT TO EFN
                          0123   30  003E   221 	BSBW	CVTEFN			; CONVERT EFN
            57            51     D0  0041   222 5$:	MOVL	R1,R7			; COPY EFN
            52            85     3C  0044   223 	MOVZWL	(R5)+,R2		; GET MAGNITUDE OF TIME
                          68     13  0047   224 	BEQL	IEITI			; IF EQL THEN ERROR
            50            85     3C  0049   225 	MOVZWL	(R5)+,R0		; GET UNITS
                          63     13  004C   226 	BEQL	IEITI			; IF EQL THEN ERROR
                          FFAF'  30  004E   227 	BSBW	RSX$TIMEMAG		; CONVERT TIME TO QUAD
            5D            52     E9  0051   228 	BLBC	R2,IEITI		; IF LOW CLEAR THEN ERROR IN CONVERT
            6A            50     7D  0054   229 	MOVQ	R0,I_SCRATCH(R10)	; INSERT IN ARG LIST
                          51     D4  0057   230 	CLRL	R1			; SET NO AST SERVICE
                          52     D4  0059   231 	CLRL	R2			; SET NO AST PARAMETER
                          65     B5  005B   232 	TSTW	(R5)			; ANY AST TO DO?
                          19     13  005D   233 	BEQL	25$			; IF EQL THEN NO AST SERVICE
                          FF9E'  30  005F   234 	BSBW	RSX$SETUPAST		; BUILD CONTEXT BLOCK
                       0C A2     B4  0062   235 	CLRW	ACB_FLAGS(R2)		; SET NO POST AST PROCESSING
         0A A2            65     B0  0065   236 	MOVW	(R5),ACB_UPC(R2)	; INSERT AST SERVICE ADDRESS
         08 A2            57     B0  0069   237 	MOVW	R7,ACB_UPRM(R2)		; INSERT EFN USED
                          04     13  006D   238 	BEQL	10$			; IF EQL THEN NONE
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 00:24:03   VAX-11 MACRO X0.3-11               Page   7
V04.0           RSX$MRKT - RSX11M MRKT$ DIRECTIVE                                                                                (6)

         08 A2            1F     A2  006F   239 	SUBW	#31,ACB_UPRM(R2)	; CONVERT TO HIS EFN MAP
            51       0000'CF     9E  0073   240 10$:	MOVAB	W^RSX$MARKAST,R1	; ADDRESS SERVICE ROUTINE
                                     0078   241 25$:	$SETIMR_S	R7,I_SCRATCH(R10),(R1),R2
            26            50     E8  0087   242 	BLBS	R0,40$			; IF LOW SET THEN SUCCESS
                                     008A   243 ;
                                     008A   244 ; DEALLOCATE THE AST CONTEXT BLOCK IF PRESENT
                                     008A   245 ;
                          52     D5  008A   246 	TSTL	R2			; BLOCK PRESENT?
                          05     13  008C   247 	BEQL	27$			; IF EQL THEN NO
       00A8 CA            62     0E  008E   248 	INSQUE	(R2),I_ASTPOOL(R10)	; RELEASE THE BLOCK
                                     0093   249 ;
                                     0093   250 ; ERROR IS EITHER SS$_INSFMEM OR SS$_EXQUOTA
                                     0093   251 ;
            50       0000'8F     B1  0093   252 27$:	CMPW	#SS$_INSFMEM,R0		; INSUFFICIENT MEMORY?
                          0B     12  0098   253 	BNEQ	30$			; IF NEQ THEN NO
                                     009A   254 	$DSW	#IE.UPN			; SET ERROR AS NO MEMORY
                                     00A5   255 30$:	$DSW	#IE.NOD			; EXCEEDED QUOTA
                                 05  00B0   256 40$:	RSB				; RETURN
                                     00B1   257 ;
                                     00B1   258 ; BAD TIME UNIT VALUE
                                     00B1   259 ;
                                     00B1   260 IEITI:	$DSW	#IE.ITI			; SET STATUS AND RETURN
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 00:24:03   VAX-11 MACRO X0.3-11               Page   8
V04.0           RSX$RDAF - RSX11M RDAF$ DIRECTIVE                                                                                (7)

                                     00BC   262 	.SBTTL	RSX$RDAF - RSX11M RDAF$ DIRECTIVE
                                     00BC   263 ;++
                                     00BC   264 ; RSX$RDAF - RSX11M READ ALL EVENT FLAGS DIRECTIVE
                                     00BC   265 ;
                                     00BC   266 ; FUNCTIONAL DESCRIPTION:
                                     00BC   267 ;
                                     00BC   268 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     00BC   269 ; "RDAF$" DIRECTIVE.
                                     00BC   270 ;
                                     00BC   271 ; INPUT PARAMETERS:
                                     00BC   272 ;
                                     00BC   273 ;	R5 = ADDRESS OF DPB+2
                                     00BC   274 ;	R6 = CM IMAGE STACK ADDRESS
                                     00BC   275 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     00BC   276 ;	R11 = ADDRESS OF IMAGE HEADER
                                     00BC   277 ;
                                     00BC   278 ; OUTPUT PARAMETERS:
                                     00BC   279 ;
                                     00BC   280 ;	R10,R11 ARE PRESERVED
                                     00BC   281 ;
                                     00BC   282 ; IMPLICIT OUTPUTS:
                                     00BC   283 ;
                                     00BC   284 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     00BC   285 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     00BC   286 ;
                                     00BC   287 ; DSW RETURN CODES:
                                     00BC   288 ;	IS.SUC	SUCCESSFUL
                                     00BC   289 ;	IE.ADP	BUFFER ACCESS VIOLATION
                                     00BC   290 ;--
                                     00BC   291 RSX$RDAF::				; READ ALL EVENT FLAGS DIRECTIVE
            52            65     3C  00BC   292 	MOVZWL	(R5),R2			; ADDRESS BUFFER
                                     00BF   293 	$READEF_S #32,(R2)		; READ GROUP 
                          82     D5  00CA   294 	TSTL	(R2)+			; POINT TO NEXT BUFFER PLACE
            62       013C CA     D0  00CC   295 	MOVL	I_RCVMAIL(R10),(R2)	; ZERO WORD AND TEST FOR EFNS PRESENT
                          0F     13  00D1   296 	BEQL	10$			; IF EQL THEN NO COMMON EFNS
                                     00D3   297 	$READEF_S #64,(R2)		; READ NEXT GROUP
                                 05  00E2   298 10$:	RSB				; RETURN
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 00:24:03   VAX-11 MACRO X0.3-11               Page   9
V04.0           RSX$SETF - RSX11M SETF$ DIRECTIVE                                                                                (8)

                                     00E3   300 	.SBTTL	RSX$SETF - RSX11M SETF$ DIRECTIVE
                                     00E3   301 ;++
                                     00E3   302 ; RSX$SETF - RSX11M SET EVENT FLAG DIRECTIVE
                                     00E3   303 ;
                                     00E3   304 ; FUNCTIONAL DESCRIPTION:
                                     00E3   305 ;
                                     00E3   306 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     00E3   307 ; "SETF$" DIRECTIVE.
                                     00E3   308 ;
                                     00E3   309 ; INPUT PARAMETERS:
                                     00E3   310 ;
                                     00E3   311 ;	R5 = ADDRESS OF DPB+2
                                     00E3   312 ;	R6 = CM IMAGE STACK ADDRESS
                                     00E3   313 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     00E3   314 ;	R11 = ADDRESS OF IMAGE HEADER
                                     00E3   315 ;
                                     00E3   316 ; OUTPUT PARAMETERS:
                                     00E3   317 ;
                                     00E3   318 ;	R10,R11 ARE PRESERVED
                                     00E3   319 ;
                                     00E3   320 ; IMPLICIT OUTPUTS:
                                     00E3   321 ;
                                     00E3   322 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     00E3   323 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     00E3   324 ;
                                     00E3   325 ; DSW RETURN CODES:
                                     00E3   326 ;	IS.SET  FLAG WAS SET
                                     00E3   327 ;	IS.CLR  FLAG WAS CLEAR
                                     00E3   328 ;	IE.IEF	INVALID EVENT FLAG SPECIFIED
                                     00E3   329 ;--
                                     00E3   330 RSX$SETF::				; SET EVENT FLAG DIRECTIVE
                          007E   30  00E3   331 	BSBW	CVTEFN			; CONVERT EFN
                                     00E6   332 	$SETEF_S R1			; SET EVENT FLAG
                                     00EF   333 SETCLRDSW:				; COMMON DSW MAP CODE FOR CLEAR/SET
         26 AB            02     99  00EF   334 	CVTBW	#IS.SET,H.DSW(R11)	; ASSUME SET
       0000'8F            50     B1  00F3   335 	CMPW	R0,#SS$_WASSET		; SET?
                          04     13  00F8   336 	BEQL	10$			; IF EQL THEN YES
         26 AB            00     99  00FA   337 	CVTBW	#IS.CLR,H.DSW(R11)	; SET WAS CLEAR
                                 05  00FE   338 10$:	RSB				; RETURN
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 00:24:03   VAX-11 MACRO X0.3-11               Page  10
V04.0           RSX$WTLO - RSX11M WTLO$ DIRECTIVE                                                                                (9)

                                     00FF   340 	.SBTTL	RSX$WTLO - RSX11M WTLO$ DIRECTIVE
                                     00FF   341 ;++
                                     00FF   342 ; RSX$WTLO - RSX11M WAIT FOR LOGICAL OR DIRECTIVE
                                     00FF   343 ;
                                     00FF   344 ; FUNCTIONAL DESCRIPTION:
                                     00FF   345 ;
                                     00FF   346 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     00FF   347 ; "WTLO$" DIRECTIVE.
                                     00FF   348 ; THE ACTION IS TO SET UP THE ARGUMENTS FOR THE WAIT AND TO ENTER
                                     00FF   349 ; THE RSX WAIT FOR EVENT CODE "RSX$WAIT".
                                     00FF   350 ;
                                     00FF   351 ; INPUT PARAMETERS:
                                     00FF   352 ;
                                     00FF   353 ;	R5 = ADDRESS OF DPB+2
                                     00FF   354 ;	R6 = CM IMAGE STACK ADDRESS
                                     00FF   355 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     00FF   356 ;	R11 = ADDRESS OF IMAGE HEADER
                                     00FF   357 ;
                                     00FF   358 ; OUTPUT PARAMETERS:
                                     00FF   359 ;
                                     00FF   360 ;	R10,R11 ARE PRESERVED
                                     00FF   361 ;
                                     00FF   362 ; IMPLICIT OUTPUTS:
                                     00FF   363 ;
                                     00FF   364 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     00FF   365 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     00FF   366 ;
                                     00FF   367 ; DSW RETURN CODES:
                                     00FF   368 ;	IS.SUC	SUCCESSFUL
                                     00FF   369 ;	IE.IEF  BAD EVENT FLAG
                                     00FF   370 ;--
                                     00FF   371 RSX$WTLO::				; WAIT FOR LOGICAL OR DIRECTIVE
            51            85     9A  00FF   372 	MOVZBL	(R5)+,R1		; GET GROUP NUMBER
                          6F     13  0102   373 	BEQL	IEIEF			; IF EQL THEN ILLEGAL
            04            51     91  0104   374 	CMPB	R1,#4			; TEST RANGE
                          6A     1A  0107   375 	BGTRU	IEIEF			; IF GTRU THEN ERROR
            52            65     3C  0109   376 	MOVZWL	(R5),R2			; GET MASK
                          65     13  010C   377 	BEQL	IEIEF			; IF EQL THEN ERROR
            04            51     E9  010E   378 	BLBC	R1,10$			; IF LOW CLEAR THEN LOW MAP
            52            10     78  0111   379 	ASHL	#16,R2,R2		; SHIFT MASK TO HIGH ORDER
                          52         0114       
            3D       0148 CA     3D  0115   380 10$:	ACBW	I_HIGHEFN(R10),#61,R1,RSX$WAIT; ADJUST TO PROPER GROUP AND TEST
            0017          51         011A       
                                     011D   381 					; FOR LEGAL EFN
                                     011D   382 	$DSW	#IE.IEF			; ILLEGAL EFN
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 00:24:03   VAX-11 MACRO X0.3-11               Page  11
V04.0           RSX$WTSE - RSX11M WTSE$ DIRECTIVE                                                                               (10)

                                     0128   384 	.SBTTL	RSX$WTSE - RSX11M WTSE$ DIRECTIVE
                                     0128   385 ;++
                                     0128   386 ; RSX$WTSE - RSX11M WAIT FOR SINGLE DIRECTIVE
                                     0128   387 ;
                                     0128   388 ; FUNCTIONAL DESCRIPTION:
                                     0128   389 ;
                                     0128   390 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     0128   391 ; "WTSE$" DIRECTIVE.
                                     0128   392 ; THE ACTION IS TO SET UP THE ARGUMENTS FOR THE WAIT AND TO ENTER THE
                                     0128   393 ; RSX WAIT ROUTINE "RSX$WAIT".
                                     0128   394 ;
                                     0128   395 ;
                                     0128   396 ; INPUT PARAMETERS:
                                     0128   397 ;
                                     0128   398 ;	R5 = ADDRESS OF DPB+2
                                     0128   399 ;	R6 = CM IMAGE STACK ADDRESS
                                     0128   400 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     0128   401 ;	R11 = ADDRESS OF IMAGE HEADER
                                     0128   402 ;
                                     0128   403 ; OUTPUT PARAMETERS:
                                     0128   404 ;
                                     0128   405 ;	R10,R11 ARE PRESERVED
                                     0128   406 ;
                                     0128   407 ; IMPLICIT OUTPUTS:
                                     0128   408 ;
                                     0128   409 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     0128   410 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     0128   411 ;
                                     0128   412 ; DSW RETURN CODES:
                                     0128   413 ;	IS.SUC	SUCCESSFUL
                                     0128   414 ;	IE.IEF	INVALID EVENT FLAG SPECIFIED
                                     0128   415 ;--
                                     0128   416 RSX$WTSE::				; WAIT FOR SINGLE DIRECTIVE
                          0039   30  0128   417 	BSBW	CVTEFN			; CONVERT EFN
            05            00     EF  012B   418 	EXTZV	#0,#5,R1,R2		; GET THE FLAG NUMBER IN THE EFN
            52            51         012E       
            01            52     78  0130   419 	ASHL	R2,#1,R2		; SET THE BIT
                          52         0133       
                                     0134   420 30$:	
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 00:24:03   VAX-11 MACRO X0.3-11               Page  12
V04.0           RSX$WAIT - COMMON CODE FOR WAIT FOR SINGLE AND                                                                  (11)

                                     0134   422 	.SBTTL	RSX$WAIT - COMMON CODE FOR WAIT FOR SINGLE AND OR OF EVENTS
                                     0134   423 ;++
                                     0134   424 ; RSX$WAIT - WAITFOR COMMON CODE
                                     0134   425 ;
                                     0134   426 ; FUNCTIONAL DESCRIPTION:
                                     0134   427 ;
                                     0134   428 ; THIS ROUTINE SETS UP AND POSSIBLY DOES A WAIT FOR LOGICAL OR OF EVENTS.
                                     0134   429 ; THE NORMAL ACTION IS TO LOAD THE WAIT FOR CONTEXT INTO THE IMPURE DATA
                                     0134   430 ; BASE AND DO A WAIT FOR LOGICAL OR ON THAT CONTEXT. IF AN AST OCCURS
                                     0134   431 ; DURING THIS WAIT AND THE AST CAUSES AN IMAGE AST TO BE QUEUED, THEN THIS WAIT
                                     0134   432 ; MUST BE INTERRUPTED FOR THE AST. THE AST LOGIC, DETECTING THIS CONDITION,
                                     0134   433 ; SAVES THE CURRENT WAIT CONTEXT AND SETS UP AN ILLEGAL ARGUMENT LIST.
                                     0134   434 ; AFTER THE RET FROM AST LEVEL THE WAIT IS RE-STARTED AND WILL FAIL.
                                     0134   435 ; WHEN IT FAILS, THIS ROUTINE WILL COMPLETE BY RETURNING TO THE DIRECTIVE
                                     0134   436 ; PROCESSING LOGIC. AT THAT TIME, THE AST IS DELIVERED. ON AST EXIT,
                                     0134   437 ; THE SAVED WAIT FOR CONTEXT IS PUT BACK AND THIS ROUTINE REENTERED.
                                     0134   438 ;
                                     0134   439 ; INPUTS:
                                     0134   440 ;
                                     0134   441 ;	R1,R2 = QUAD WORD WAIT FOR CONTEXT
                                     0134   442 ;	R10 = ADDRESS OF THE IMAGE IMPURE DATA BASE
                                     0134   443 ;	R11 = ADDRESS OF THE IMAGE
                                     0134   444 ;
                                     0134   445 ; OUTPUTS:
                                     0134   446 ;
                                     0134   447 ;	R10,R11 ARE PRESERVED.
                                     0134   448 ;
                                     0134   449 ; THE WAIT FOR CONTEXT IN THE IMPURE DATA BASE IS CLEARED.
                                     0134   450 ;--
                                     0134   451 RSX$WAIT::				; WAIT FOR EVENT
       014C CA            07     E6  0134   452 	BBSSI	#SV_WAIT,I_STATE(R10),10$; SET WAIT SET UP IN PROGRESS
                          00         0139       
                                     013A   453 ;
                                     013A   454 ; IF SV_PENDWAIT IS SET THAT MEANS AN AST HAS OCCURED SINCE THE RSX WAS ENTERED.
                                     013A   455 ; THIS MEANS THAT THE AST SOULD BE DONE FIRST, THEN THE WAIT.
                                     013A   456 ;
       014C CA            06     E0  013A   457 10$:	BBS	#SV_PENDWAIT,I_STATE(R10),20$; BR IF WAIT SHOULD NOT BE DONE
                          14         013F       
                                     0140   458 ;
                                     0140   459 ; DO THE WAIT
                                     0140   460 ;
            50       0154 CA     9E  0140   461 	MOVAB	I_WAIT(R10),R0		; ADDRESS WAIT ARG LIST
            60            51     7D  0145   462 	MOVQ	R1,(R0)			; INSERT MASK AND CLUSTER DATA
            70            02     9A  0148   463 	MOVZBL	#2,-(R0)		; INSERT SIZE OF LIST
                                     014B   464 ;
                                     014B   465 ; THIS WAIT IS FLUSHED AT AST LEVEL BY CLEARING THE WAIT MASK AND CLUSTER DATA
                                     014B   466 ;
                                     014B   467 	$WFLOR_G	(R0)			; DO SERVICE
                          05     11  0152   468 	BRB	30$			; EXIT DIRECTIVE
                                     0154   469 ;
                                     0154   470 ; SAVE CURRENT WAIT DATA FOR LATER WAIT
                                     0154   471 ;
       015C CA            51     7D  0154   472 20$:	MOVQ	R1,I_WAITSAVE(R10)	;
       014C CA            07     E7  0159   473 30$:	BBCCI	#SV_WAIT,I_STATE(R10),35$; CLEAR WAIT
                          00         015E       
                     0154 CA     7C  015F   474 35$:	CLRQ	I_WAIT(R10)		; RESET CONTEXT
                                 05  0163   475 	RSB				; RETURN
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 00:24:03   VAX-11 MACRO X0.3-11               Page  13
V04.0           CVTEFN - CONVERT EVENT FLAG NUMBER                                                                              (12)

                                     0164   477 	.SBTTL	CVTEFN - CONVERT EVENT FLAG NUMBER
                                     0164   478  
                                     0164   479 	.ENABL LSB
                                     0164   480 ;++
                                     0164   481 ; CVTEFN - CONVERT EVENT FLAG NUMBER TO RSX MAP AND CHECK FOR VALID
                                     0164   482 ;
                                     0164   483 ; INPUTS:	
                                     0164   484 ;
                                     0164   485 ;	R5 = ADDRESS OF THE EVENT FLAG VALUE
                                     0164   486 ;
                                     0164   487 ; OUTPUTS:
                                     0164   488 ;
                                     0164   489 ;	R1 = EVENT FLAG NUMBER
                                     0164   490 ;	R5 = R5+2
                                     0164   491 ;--
            51            85     3C  0164   492 CVTEFN:	MOVZWL	(R5)+,R1		; GET RSX FLAG
                          08     13  0167   493 	BEQL	10$			; IF EQL THEN ERROR
            1F       0148 CA     3D  0169   494 	ACBW	I_HIGHEFN(R10),#31,R1,15$; MAP TO RSX EVENT FLAGS
            000D          51         016E       
                          8E     D5  0171   495 10$:	TSTL	(SP)+			; POP RETURN ADDRESS
                                     0173   496 ;
                                     0173   497 ; IEIEF - SET INVALID EVENT FLAG AND EXIT DIRECTIVE PROCESSING
                                     0173   498 ;
                                     0173   499 IEIEF:					; SET IE.IEF ERROR FOR DIRECTIVE
                                     0173   500 	$DSW	#IE.IEF			; SET STATUS AND RETURN
                                     017E   501 ;
                                 05  017E   502 15$:	RSB				;
                                     017F   503  
                                     017F   504 	.DSABL LSB
                                     017F   505 ;
                                     017F   506 	.END
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 00:24:03   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                    (12)

$$MSG          = 00000000            H.ISP            00000010            IE.FOP         = FFFFFFCB            
...GBL         = 00000000            H.LUN            0000003E            IE.HFU         = FFFFFFE4            
ACBC_CTLRCAST  = 00000002            H.NLUN           0000003C            IE.HWR         = FFFFFFFA            
ACBC_FLOATAST  = 00000003            H.NML            00000031            IE.IBS         = FFFFFFA7            
ACBC_PWRAST    = 00000000            H.ODVA           00000012            IE.IDU         = FFFFFFA4            
ACBC_RCVAST    = 00000001            H.ODVL           00000014            IE.IEF         = FFFFFF9F            
ACBV_INPROG    = 00000001            H.OVLY           0000002C            IE.IES         = FFFFFFAE            
ACBV_PERM      = 00000000            H.PFVA           0000001A            IE.IFC         = FFFFFFFE            
ACBV_TYPE      = 00000008            H.RCVA           0000001E            IE.IFU         = FFFFFFE7            
ACB_FLAGS        0000000C            H.RRVA           00000032            IE.ILL         = FFFFFFD6            
ACB_LINK         00000000            H.SPRI           00000030            IE.ILU         = FFFFFFA0            
ACB_UPC          0000000A            H.TKVA           00000016            IE.ILV         = FFFFFFED            
ACB_UPRM         00000008            H.TKVL           00000018            IE.INS         = FFFFFFFE            
ADR_HIGHLIM      00000004            H.VEXT           0000002E            IE.IOP         = FFFFFFAD            
ADR_LOWLIM       00000000            H.WND            00000024            IE.IPR         = FFFFFFA1            
ADR_SIZE         00000008            IE.2DV         = FFFFFFD0            IE.ISQ         = FFFFFFC3            
AP_NAME          00000004            IE.ABO         = FFFFFFF1            IE.ITI         = FFFFFFA3            
AST_PARAM        00000004            IE.ACT         = FFFFFFF9            IE.ITP         = FFFFFFA8            
AST_PC           00000010            IE.ADP         = FFFFFF9E            IE.ITS         = FFFFFFF8            
AST_PSL          00000014            IE.ALC         = FFFFFFAC            IE.IUI         = FFFFFFA5            
AST_R0           00000008            IE.ALG         = FFFFFFAC            IE.LCK         = FFFFFFE5            
AST_R1           0000000C            IE.ALN         = FFFFFFDE            IE.LNL         = FFFFFFA6            
BIT...         = 00068084            IE.AST         = FFFFFFB0            IE.MAP         = FFFFFFAF            
C$$ORE         = 00000000            IE.BAD         = FFFFFFFF            IE.MOD         = FFFFFFEB            
CVTEFN           00000164 R     05   IE.BBE         = FFFFFFC8            IE.NBF         = FFFFFFD9            
C_CANONPS      = 83C00000            IE.BCC         = FFFFFFBE            IE.NBK         = FFFFFFD7            
C_RCVDSTR      = 44564352            IE.BDI         = FFFFFFCC            IE.NDR         = FFFFFFB8            
FCB_ATTRIBS      0000007C            IE.BDR         = FFFFFFCE            IE.NFI         = FFFFFFC4            
FCB_FIB          0000004C            IE.BDV         = FFFFFFC9            IE.NFW         = FFFFFFBB            
FCB_FID          00000000            IE.BHD         = FFFFFFC0            IE.NLK         = FFFFFFB1            
FCB_FNAME        00000014            IE.BLB         = FFFFFFBA            IE.NLN         = FFFFFFDB            
FCB_FNAMEDESC    0000000C            IE.BLK         = FFFFFFEC            IE.NNC         = FFFFFFB3            
FCB_FNB          00000002            IE.BNM         = FFFFFFCA            IE.NNL         = FFFFFFB2            
FCB_PC           00000078            IE.BTF         = FFFFFFB4            IE.NNN         = FFFFFFBC            
FCB_RESULT       00000030            IE.BTP         = FFFFFFD5            IE.NOD         = FFFFFFE9            
FCB_RESULTDESC   00000004            IE.BVR         = FFFFFFC1            IE.NSF         = FFFFFFE6            
FCB_SIZE         000000B4            IE.BYT         = FFFFFFED            IE.NST         = FFFFFFB0            
FP_AP            00000008            IE.CKP         = FFFFFFF6            IE.NSW         = FFFFFFEE            
FP_FP            0000000C            IE.CKS         = FFFFFFE2            IE.NVR         = FFFFFFAA            
FP_PC            00000010            IE.CLO         = FFFFFFDA            IE.NVW         = FFFFFFA9            
FP_PSL           00000004            IE.CNR         = FFFFFFB7            IE.OFL         = FFFFFFBF            
FP_REGISTERS     00000014            IE.CON         = FFFFFFEA            IE.ONP         = FFFFFFFB            
GBL...         = 00000000            IE.DAA         = FFFFFFF8            IE.OVR         = FFFFFFEE            
H.CSP            00000000            IE.DAO         = FFFFFFF3            IE.PES         = FFFFFFAD            
H.CUIC           00000008            IE.DFU         = FFFFFFE8            IE.PNS         = FFFFFFA2            
H.DSW            00000026            IE.DNA         = FFFFFFF9            IE.PRI         = FFFFFFF0            
H.DUIC           0000000A            IE.DNR         = FFFFFFFD            IE.PTS         = FFFFFFFD            
H.EFLM           00000004            IE.DUN         = FFFFFFF7            IE.RAC         = FFFFFFD4            
H.EFSV           00000020            IE.DUP         = FFFFFFC7            IE.RAT         = FFFFFFD3            
H.FCS            00000028            IE.EOF         = FFFFFFF6            IE.RBG         = FFFFFFD8            
H.FORT           0000002A            IE.EOT         = FFFFFFC2            IE.RBS         = FFFFFFF1            
H.FPSA           00000022            IE.EOV         = FFFFFFF5            IE.RCN         = FFFFFFD2            
H.FPVA           0000001C            IE.EXP         = FFFFFFB5            IE.RER         = FFFFFFE0            
H.GARD           0000003A            IE.FEX         = FFFFFFCF            IE.RNM         = FFFFFFCD            
H.HDLN           00000002            IE.FHE         = FFFFFFC5            IE.RSU         = FFFFFFEF            
H.IPC            0000000E            IE.FIX         = FFFFFFF7            IE.SDP         = FFFFFF9D            
H.IPS            0000000C            IE.FLN         = FFFFFFAF            IE.SNC         = FFFFFFDD            
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 00:24:03   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                    (12)

IE.SPC         = FFFFFFFA            I_HIGHEFN        00000148            PSL_TBIT       = 00000004            
IE.SQC         = FFFFFFDC            I_HIGHSIZE       000000D0            QIOV_FILES     = 00000000            
IE.SRE         = FFFFFFF2            I_IMAGEVBN       000000D4            QIO_FLAGS        0000001C            
IE.STK         = FFFFFFC6            I_INISIZE        000000CC            QIO_FUNCTION     0000001A            
IE.TCH         = FFFFFFF5            I_LENGTH         000001EC            QIO_IOSB         0000000E            
IE.TMM         = FFFFFFB9            I_LOGNAME        000000B8            QIO_LUT          00000016            
IE.TMO         = FFFFFFB6            I_LUT            00000144            QIO_SECONDBLK    0000001E            
IE.ULK         = FFFFFFAB            I_NLUN           00000140            QIO_SIZE         00000022            
IE.ULN         = FFFFFFFB            I_PC             00000184            RSX$CLEF         00000000 RG    05   
IE.UNS         = FFFFFFFC            I_PROCNAME       00000128            RSX$CMKT         0000000F RG    05   
IE.UPN         = FFFFFFFF            I_PS             00000188            RSX$C_SUBSYSTEM= 00000006            
IE.VER         = FFFFFFFC            I_PWRAST         0000019C            RSX$DECL         0000001B RG    05   
IE.WAC         = FFFFFFE3            I_R0             00000164            RSX$EXIF         0000001C RG    05   
IE.WAT         = FFFFFFE1            I_R1             00000168            RSX$EXIT         ********   X   05   
IE.WCK         = FFFFFFAA            I_R2             0000016C            RSX$MARKAST      ********   X   05   
IE.WER         = FFFFFFDF            I_R3             00000170            RSX$MRKT         00000037 RG    05   
IE.WLK         = FFFFFFF4            I_R4             00000174            RSX$RDAF         000000BC RG    05   
IE.WOV         = FFFFFFAB            I_R5             00000178            RSX$SETF         000000E3 RG    05   
IEIEF            00000173 R     05   I_R6             0000017C            RSX$SETUPAST     ********   X   05   
IEITI            000000B1 R     05   I_RAD50NAME      00000124            RSX$TIMEMAG      ********   X   05   
IS.BV          = 00000005            I_RCVAST         00000198            RSX$WAIT         00000134 RG    05   
IS.CC          = 00000301            I_RCVMAIL        0000013C            RSX$WSIG         0000001B RG    05   
IS.CLR         = 00000000            I_RUNFLAGS       00000190            RSX$WTLO         000000FF RG    05   
IS.CR          = 00000D01            I_SCRATCH        00000000            RSX$WTSE         00000128 RG    05   
IS.EOT         = 00000401            I_STATE          0000014C            RSX$_ACCVIO    = 00068044            
IS.ESC         = 00001B01            I_TYPE           00000180            RSX$_BADLIBREF = 0006806C            
IS.ESQ         = 00009B01            I_UIC            00000118            RSX$_BADSTACK  = 0006804C            
IS.PES         = 00008001            I_WAIT           00000154            RSX$_BREAK     = 0006800C            
IS.PND         = 00000000            I_WAITSAVE       0000015C            RSX$_EXITSTATUS= 00068180            
IS.RDD         = 00000002            LUTC_CR        = 00000005            RSX$_EXTERNABRT= 0006805C            
IS.SET         = 00000002            LUTC_DISK      = 00000002            RSX$_ILLINST   = 0006802C            
IS.SPD         = 00000002            LUTC_LP        = 00000004            RSX$_INSFDYNMEM= 00068054            
IS.SUC         = 00000001            LUTC_RMS       = 00000000            RSX$_IOT       = 00068014            
IS.TAB         = 00000901            LUTC_TAPE      = 00000003            RSX$_LIBNOTFND = 00068074            
IS.TMO         = 00000002            LUTC_TRM       = 00000001            RSX$_LOADERROR = 0006807C            
I_ADR0           000000D8            LUTV_CTRLC     = 00000002            RSX$_NONRSXEMT = 0006801C            
I_ASCIINAME      0000011C            LUTV_CTRLO     = 00000000            RSX$_NOSUCHDEV = 000680C2            
I_ASTPOOL        000000A8            LUTV_PRM       = 00000003            RSX$_NOTSKIMG  = 00068064            
I_ASTQUEUE       000000A0            LUTV_TI        = 00000001            RSX$_ODDADDR   = 00068034            
I_BAILOUTFP      0000018C            LUT_CHAN         0000000C            RSX$_PMD       = 000680CA            
I_CMDAD          000000C4            LUT_CHAR         00000014            RSX$_RCVMBXSIZ = 0000012C            
I_CMDSZ          000000C0            LUT_CTRLC        00000034            RSX$_RESERVED  = 00068004            
I_CURAST         00000194            LUT_FLAGS        0000000A            RSX$_TBIT      = 0006803C            
I_FCBPOOL        000000B0            LUT_INFONAME     00000030            RSX$_TRAP      = 00068024            
I_FCC            000001B0            LUT_INFOUNIT     00000032            SETCLRDSW        000000EF R     05   
I_FLOATA0        000001BC            LUT_LINK         00000000            SS$_INSFMEM      ********   X   05   
I_FLOATA1        000001C4            LUT_REALNAME     00000020            SS$_WASSET       ********   X   05   
I_FLOATA2        000001CC            LUT_REF          00000008            SV_ASTLVL        00000005            
I_FLOATA3        000001D4            LUT_RSXNAME      00000010            SV_DCL           00000002            
I_FLOATA4        000001DC            LUT_RSXUNIT      00000012            SV_FLOATAST      0000000A            
I_FLOATA5        000001E4            LUT_SIZE         00000038            SV_FRESTORE      00000003            
I_FLOATADR       000001AC            LUT_TYPE         00000018            SV_NOAST         00000004            
I_FLOATAST       000001A0            LUT_UNIT         00000020            SV_PENDWAIT      00000006            
I_FLOATCSR       000001A4            PSL_CC         = 00000000            SV_PWRAST        00000009            
I_FLOATERR       000001A8            PSL_CM         = 0000001F            SV_RCVAST        00000008            
I_FLOATTMP       000001B4            PSL_FPD        = 0000001B            SV_RESTORE       00000000            
I_GARD           000000C8            PSL_FU         = 00000006            SV_TRANSLATE     00000001            
RSXEFN          - RSX11M EVENT FLAG DIRECTIVES                   22-AUG-1978 00:24:03   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                    (12)

SV_WAIT          00000007            
SYS$CANTIM       ********   X   05   
SYS$CLREF        ********   X   05   
SYS$READEF       ********   X   05   
SYS$SETEF        ********   X   05   
SYS$SETIMR       ********   X   05   
SYS$WFLOR        ********   X   05   
S_PC             00000020            
S_PS             00000024            
S_R0             00000000            
S_R1             00000004            
S_R2             00000008            
S_R3             0000000C            
S_R4             00000010            
S_R5             00000014            
S_R6             00000018            
S_TYPE           0000001C            
W.BATT           00000006            
W.BFPD           0000000C            
W.BHVR           00000004            
W.BLGH           00000010            
W.BLPD           0000000E            
W.BLVR           00000002            
W.BNPD           0000000D            
W.BOFF           0000000A            
W.BPCB           00000000            
W.BSIZ           00000008            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
..ABS.           00000042      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000000      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXDEF           000001F0      04     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXCODE          0000017F      05     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
16270. BYTES LEFT IN FREE MEMORY POOL.
28. BYTES OF RECLAIMED MEMORY.
OBJ$:RSXEFN,LIS$:RSXEFN/-SP=SRC$:C,RSXEFN
28 MLB DIR RDS - 506 GETS TO DEFINE 23 MACROS. 16 INTER. FILE WRITES. 
