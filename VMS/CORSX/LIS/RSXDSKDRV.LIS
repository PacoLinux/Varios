RSXDSKDRV       - RSX11M AME DISK DRIVER                         22-AUG-1978 00:23:30   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (3)     160  DSK_RVB AND DSK_RLB FUNCTIONS
   (4)     188  RSX$OVERLAY - LOAD OVERLAY
   (5)     232  DSK_WVB AND DSK_WLB FUNCTIONS
   (6)     255  DSK_SET FUNCTIONS
RSXDSKDRV       - RSX11M AME DISK DRIVER                         22-AUG-1978 00:23:30   VAX-11 MACRO X0.3-11               Page   1
V05.0                                                                                                                            (1)

                                     0000     1 	.TITLE	RSXDSKDRV - RSX11M AME DISK DRIVER
                                     0000     2 	.IDENT	/V05.0/		;
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY:
                                     0000    25 ;
                                     0000    26 ;	VAX/VMS RSX11M AME
                                     0000    27 ;
                                     0000    28 ; ABSTRACT:
                                     0000    29 ;
                                     0000    30 ;	DISK I/O DRIVER
                                     0000    31 ;
                                     0000    32 ; AUTHOR: R.HEINEN 4-NOV-76
                                     0000    33 ;--
                                     0000    34 ;
                                     0000    35 ; EXTERNAL SYMBOLS
                                     0000    36 ;
                                     0000    37 	$RSXDEF			; DEFINE RSX SYMBOLS
                                     0000    38 	SPCIO$			; DEFINE RSX11M SPECIAL I/O CODES
                                     0000    39 	FILIO$			; DEFINE RSX11M FILE I/O FUNCTION CODES
RSXDSKDRV       - RSX11M AME DISK DRIVER                         22-AUG-1978 00:23:30   VAX-11 MACRO X0.3-11               Page   2
V05.0                                                                                                                            (2)

                                     0000    41 RSX$DSK_DRV::				; DISK I/O DRIVER
                                     0000    42 	CASE	R3,<-			; DISK DRIVER
                                     0000    43 		RSX$IOKILL,-		; KILL I/O
                                     0000    44 		DSK_WLB,-		; WRITE LOGICAL BLOCK
                                     0000    45 		DSK_RLB,-		; READ LOGICAL BLOCK
                                     0000    46 		RSX$DLVRQIOAST,-	; ATTACH IS NOOP
                                     0000    47 		RSX$DLVRQIOAST,-	; DETACH DEVICE
                                     0000    48 		DSK_SET,-		; FUNCTION CODE 5
                                     0000    49 		RSX$IEIFC,-		; FUNCTION CODE 6
                                     0000    50 		RSX$IEIFC,-		; ILLEGAL
                                     0000    51 		RSX$IEIFC,-		; ILLEGAL
                                     0000    52 		RSX$FILEIO,-		; FUNCTION CODE 9
                                     0000    53 		RSX$IEIFC,-		; ILLEGAL
                                     0000    54 		RSX$FILEIO,-		; REMOVE FILE NAME
                                     0000    55 		RSX$FILEIO,-		; ENTER FILE NAME
                                     0000    56 		RSX$FILEIO,-		; ACCESS FOR READ
                                     0000    57 		RSX$FILEIO,-		; ACCESS FOR WRITE
                                     0000    58 		RSX$FILEIO,-		; ACCESS FOR EXTEND
                                     0000    59 		RSX$FILEIO,-		; DEACCESS
                                     0000    60 		DSK_RVB,-		; READ VIRTUAL BLOCK
                                     0000    61 		DSK_WVB,-		; WRITE VIRTUAL BLOCK
                                     0000    62 		RSX$FILEIO,-		; EXTEND FILE
                                     0000    63 		RSX$FILEIO,-		; CREATE FILE
                                     0000    64 		RSX$FILEIO,-		; DELETE FILE
                                     0000    65 		RSX$FILEIO,-		; READ ATTRIBUTES
                                     0000    66 		RSX$FILEIO,-		; WRITE ATTRIBUTES
                                     0000    67 		RSX$FILEIO,-		; ACP CONTROL
                                     0000    68 		>
                          FFC7'  31  0036    69 	BRW	RSX$IEIFC		; ERROR EXIT
RSXDSKDRV       - RSX11M AME DISK DRIVER                         22-AUG-1978 00:23:30   VAX-11 MACRO X0.3-11               Page   3
V05.0           DSK_RVB AND DSK_RLB FUNCTIONS                                                                                    (3)

                                     0039    71 	.SBTTL	DSK_RVB AND DSK_RLB FUNCTIONS
                                     0039    72  
                                     0039    73 	.ENABL	LSB
                                     0039    74 ;
                                     0039    75 ; READ VIRTUAL BLOCK FUNCTION
                                     0039    76 ;
                                     0039    77 DSK_RVB:				; READ VIRTUAL BLOCK
         0C AA       0000'8F     3C  0039    78 	MOVZWL	#IO$_READVBLK,I_SCRATCH+12(R10); SET UP FUNCTION CODE
                          2F     11  003F    79 	BRB	20$			; CONTINUE IN COMMON
                                     0041    80 DSK_RLB:				; READ LOGICAL BLOCK
         0C AA       0000'8F     3C  0041    81 	MOVZWL	#IO$_READLBLK,I_SCRATCH+12(R10); SET UP FUNCTION CODE
            08            57     91  0047    82 	CMPB	R7,#<IO.LOV&^X0FF>	; LOAD OVERLAY
                          19     12  004A    83 	BNEQ	15$			; IF NEQ THEN NO
                     0000'CF     9F  004C    84 	PUSHAB	W^RSX$A_OVDEV		; GET ADDRESS OF OVERLAY LUT
            58            8E     D1  0050    85 	CMPL	(SP)+,R8		; CORRECT LUT?
                          10     12  0053    86 	BNEQ	15$			; IF NO TREAT NORMALLY
            54            65     3C  0055    87 	MOVZWL	(R5),R4			; SET ADDRESS OF TARGET
            53         02 A5     3C  0058    88 	MOVZWL	2(R5),R3		; GET SIZE TO READ
            55         08 A5     D0  005C    89 	MOVL	8(R5),R5		; GET VBN OF IMAGE
                          11     10  0060    90 	BSBB	RSX$OVERLAY		; LOAD THE OVERLAY
                          FF9B'  31  0062    91 	BRW	RSX$DLVRQIOAST		; POST THE STATUS
            57            01     B3  0065    92 15$:	BITW	#IQ.X,R7		; INHIBIT ERROR RETRY?
                          06     13  0068    93 	BEQL	20$			; IF EQL THEN NO
         0C AA       0000'8F     A8  006A    94 	BISW	#IO$M_INHRETRY,I_SCRATCH+12(R10); INHIBIT RETRY
                          FF8D'  31  0070    95 20$:	BRW	RSX$ISSUQIO		; DO FUNCTION
                                     0073    96  
                                     0073    97 	.DSABL	LSB
RSXDSKDRV       - RSX11M AME DISK DRIVER                         22-AUG-1978 00:23:30   VAX-11 MACRO X0.3-11               Page   4
V05.0           RSX$OVERLAY - LOAD OVERLAY                                                                                       (4)

                                     0073    99 	.SBTTL	RSX$OVERLAY - LOAD OVERLAY
                                     0073   100 ;++
                                     0073   101 ; RSX$OVERLAY - LOAD OVERLAY
                                     0073   102 ;
                                     0073   103 ; FUNCTIONAL DESCRIPTION:
                                     0073   104 ;
                                     0073   105 ; THIS ROUTINE IS USED FOR IO.LOV AND INITIAL HEADER/ROOT SEGMENT LOADS.
                                     0073   106 ;
                                     0073   107 ; INPUTS:
                                     0073   108 ;
                                     0073   109 ;	R3 = NUMBER OF BYTES TO LOAD
                                     0073   110 ;	R4 = VIRTUAL ADDRESS OF LOAD
                                     0073   111 ;	R5 = VIRTUAL BLOCK NUMBER
                                     0073   112 ;	R10 = ADDRESS OF THE IMAGE IMPURE DATA BASE
                                     0073   113 ;	R11 = ADDRESS OF THE IMAGE
                                     0073   114 ;
                                     0073   115 ; OUTPUTS:
                                     0073   116 ;
                                     0073   117 ;	R0 = STATUS OF THE OPERATION
                                     0073   118 ;
                                     0073   119 ;	ALL OTHER REGISTERS ARE PRESERVED.
                                     0073   120 ;
                                     0073   121 ;--
                                     0073   122 RSX$OVERLAY::				;
                     00FC 8F     BB  0073   123 	PUSHR	#^M<R2,R3,R4,R5,R6,R7>	; SAVE USED REGISTERS
            55       00D4 CA     C0  0077   124 	ADDL	I_IMAGEVBN(R10),R5	; POINT TO HEADER RELATIVE BLOCK
            56       2000 8F     3C  007C   125 	MOVZWL	#<8*1024>,R6		; SET UP STARTING SIZE
            57            54     D0  0081   126 	MOVL	R4,R7			; SAVE STARTING VA
                          54     D4  0084   127 	CLRL	R4			; SET UP FOR QUAD ARITH.
            53            56     7B  0086   128 	EDIV	R6,R3,R4,R2		; GET PARAMETERS
            52            54         0089       
                          03     12  008B   129 10$:	BNEQ	15$			; IF NEQ THEN READ A FULL 8K
            56            52     D0  008D   130 	MOVL	R2,R6			; ELSE READ REMAINDER
                                     0090   131 15$:	$QIOW_S	I_SCRATCH+4(R10),W^RSX$A_OVDEV+LUT_CHAN,#IO$_READVBLK,I_SCRATCH+8(R10),
                                     0090   132 		(R7),R6,R5		;
            10            50     E9  00B3   133 	BLBC	R0,25$			; IF LOW CLEAR THEN ERROR
            50         08 AA     7D  00B6   134 	MOVQ	I_SCRATCH+8(R10),R0	; GET IOSB STATUS
            09            50     E9  00BA   135 	BLBC	R0,25$			; AND BR IF THAT SHOWS ERROR
            57            56     C0  00BD   136 	ADDL	R6,R7			; POINT TO NEXT AREA
            55            10     C0  00C0   137 	ADDL	#16,R5			; POINT TO NEXT AREA IN FILE
            C5            54     F4  00C3   138 	SOBGEQ	R4,10$			; LOOP TILL DONE
                     00FC 8F     BA  00C6   139 25$:	POPR	#^M<R2,R3,R4,R5,R6,R7>	; RESTORE REGISTERS
            10            53     F0  00CA   140 	INSV	R3,#16,#16,R0		; SET UPPER HALF OF STATUS TO SIZE
            50            10         00CD       
                                 05  00CF   141 	RSB
RSXDSKDRV       - RSX11M AME DISK DRIVER                         22-AUG-1978 00:23:30   VAX-11 MACRO X0.3-11               Page   5
V05.0           DSK_WVB AND DSK_WLB FUNCTIONS                                                                                    (5)

                                     00D0   143 	.SBTTL	DSK_WVB AND DSK_WLB FUNCTIONS
                                     00D0   144 	.ENABL	LSB
                                     00D0   145 ;
                                     00D0   146 ; WRITE VIRTUAL BLOCK
                                     00D0   147 ;
                                     00D0   148 DSK_WVB:				; WRITE VIRTUAL BLOCK
         0C AA       0000'8F     3C  00D0   149 	MOVZWL	#IO$_WRITEVBLK,I_SCRATCH+12(R10); SET FUNCTION CODE
                          1C     11  00D6   150 	BRB	25$			; CONTINUE IN COMMON
                                     00D8   151 ;
                                     00D8   152 ; WRITE LOGICAL BLOCK
                                     00D8   153 ;
                                     00D8   154 DSK_WLB:				; WRITE LOGICAL BLOCK
         0C AA       0000'8F     3C  00D8   155 	MOVZWL	#IO$_WRITELBLK,I_SCRATCH+12(R10); SET FUNCTION CODE
            20            57     91  00DE   156 	CMPB	R7,#<IO.WPB&^X0FF>	; WRITE PHYSICAL?
                          06     12  00E1   157 	BNEQ	15$	
         0C AA       0000'8F     3C  00E3   158 	MOVZWL	#IO$_WRITEPBLK,I_SCRATCH+12(R10)
            57            01     B3  00E9   159 15$:	BITW	#IQ.X,R7		; INHIBIT RETRY?
                          06     13  00EC   160 	BEQL	25$			; IF EQL THEN NO
         0C AA       0000'8F     A8  00EE   161 	BISW	#IO$M_INHRETRY,I_SCRATCH+12(R10); SET TO INHIBIT RETRY
                          FF09'  31  00F4   162 25$:	BRW	RSX$ISSUQIO
                                     00F7   163 ;
                                     00F7   164 	.DSABL	LSB
RSXDSKDRV       - RSX11M AME DISK DRIVER                         22-AUG-1978 00:23:30   VAX-11 MACRO X0.3-11               Page   6
V05.0           DSK_SET FUNCTIONS                                                                                                (6)

                                     00F7   166 	.SBTTL	DSK_SET FUNCTIONS
                                     00F7   167 ;
                                     00F7   168 ; DISK SPECIAL FUNCTIONS
                                     00F7   169 ;
                                     00F7   170 DSK_SET:				; PACKACK IS THE ONLY LEGAL FUNCTION
            57       0550 8F     B1  00F7   171 	CMPW	#IO.SEC,R7		; PACKACK?
                          09     12  00FC   172 	BNEQ	30$			; IF NEQ THEN NO
         0C AA       0000'8F     3C  00FE   173 	MOVZWL	#IO$_PACKACK,I_SCRATCH+12(R10); SET THE FUNCTION
                          FEF9'  31  0104   174 	BRW	RSX$ISSUQIO		; 
                          FEF6'  31  0107   175 30$:	BRW	RSX$IEIFC		; ILLEGAL FUNCTION
                                     010A   176 	.END
RSXDSKDRV       - RSX11M AME DISK DRIVER                         22-AUG-1978 00:23:30   VAX-11 MACRO X0.3-11               Page   7
SYMBOL TABLE                                                                                                                     (6)

$$MSG          = 00000000            H.FPVA           0000001C            IE.FOP         = FFFFFFCB            
$$T1           = 00000001            H.GARD           0000003A            IE.HFU         = FFFFFFE4            
...GBL         = 00000000            H.HDLN           00000002            IE.IES         = FFFFFFAE            
ACBC_CTLRCAST  = 00000002            H.IPC            0000000E            IE.IFC         = FFFFFFFE            
ACBC_FLOATAST  = 00000003            H.IPS            0000000C            IE.IFU         = FFFFFFE7            
ACBC_PWRAST    = 00000000            H.ISP            00000010            IE.ILL         = FFFFFFD6            
ACBC_RCVAST    = 00000001            H.LUN            0000003E            IE.ISQ         = FFFFFFC3            
ACBV_INPROG    = 00000001            H.NLUN           0000003C            IE.LCK         = FFFFFFE5            
ACBV_PERM      = 00000000            H.NML            00000031            IE.MOD         = FFFFFFEB            
ACBV_TYPE      = 00000008            H.ODVA           00000012            IE.NBF         = FFFFFFD9            
ACB_FLAGS        0000000C            H.ODVL           00000014            IE.NBK         = FFFFFFD7            
ACB_LINK         00000000            H.OVLY           0000002C            IE.NDR         = FFFFFFB8            
ACB_UPC          0000000A            H.PFVA           0000001A            IE.NFI         = FFFFFFC4            
ACB_UPRM         00000008            H.RCVA           0000001E            IE.NFW         = FFFFFFBB            
ADR_HIGHLIM      00000004            H.RRVA           00000032            IE.NLK         = FFFFFFB1            
ADR_LOWLIM       00000000            H.SPRI           00000030            IE.NLN         = FFFFFFDB            
ADR_SIZE         00000008            H.TKVA           00000016            IE.NNC         = FFFFFFB3            
AP_NAME          00000004            H.TKVL           00000018            IE.NNL         = FFFFFFB2            
AST_PARAM        00000004            H.VEXT           0000002E            IE.NNN         = FFFFFFBC            
AST_PC           00000010            H.WND            00000024            IE.NOD         = FFFFFFE9            
AST_PSL          00000014            IE.2DV         = FFFFFFD0            IE.NSF         = FFFFFFE6            
AST_R0           00000008            IE.ABO         = FFFFFFF1            IE.NST         = FFFFFFB0            
AST_R1           0000000C            IE.ALC         = FFFFFFAC            IE.OFL         = FFFFFFBF            
BIT...         = 00068084            IE.ALN         = FFFFFFDE            IE.ONP         = FFFFFFFB            
C$$ORE         = 00000000            IE.AST         = FFFFFFB0            IE.OVR         = FFFFFFEE            
C_CANONPS      = 83C00000            IE.BAD         = FFFFFFFF            IE.PES         = FFFFFFAD            
C_RCVDSTR      = 44564352            IE.BBE         = FFFFFFC8            IE.PRI         = FFFFFFF0            
DSK_RLB          00000041 R     01   IE.BCC         = FFFFFFBE            IE.RAC         = FFFFFFD4            
DSK_RVB          00000039 R     01   IE.BDI         = FFFFFFCC            IE.RAT         = FFFFFFD3            
DSK_SET          000000F7 R     01   IE.BDR         = FFFFFFCE            IE.RBG         = FFFFFFD8            
DSK_WLB          000000D8 R     01   IE.BDV         = FFFFFFC9            IE.RCN         = FFFFFFD2            
DSK_WVB          000000D0 R     01   IE.BHD         = FFFFFFC0            IE.RER         = FFFFFFE0            
FCB_ATTRIBS      0000007C            IE.BLB         = FFFFFFBA            IE.RNM         = FFFFFFCD            
FCB_FIB          0000004C            IE.BLK         = FFFFFFEC            IE.RSU         = FFFFFFEF            
FCB_FID          00000000            IE.BNM         = FFFFFFCA            IE.SNC         = FFFFFFDD            
FCB_FNAME        00000014            IE.BTF         = FFFFFFB4            IE.SPC         = FFFFFFFA            
FCB_FNAMEDESC    0000000C            IE.BTP         = FFFFFFD5            IE.SQC         = FFFFFFDC            
FCB_FNB          00000002            IE.BVR         = FFFFFFC1            IE.SRE         = FFFFFFF2            
FCB_PC           00000078            IE.BYT         = FFFFFFED            IE.STK         = FFFFFFC6            
FCB_RESULT       00000030            IE.CKS         = FFFFFFE2            IE.TMM         = FFFFFFB9            
FCB_RESULTDESC   00000004            IE.CLO         = FFFFFFDA            IE.TMO         = FFFFFFB6            
FCB_SIZE         000000B4            IE.CNR         = FFFFFFB7            IE.ULK         = FFFFFFAB            
FP_AP            00000008            IE.CON         = FFFFFFEA            IE.VER         = FFFFFFFC            
FP_FP            0000000C            IE.DAA         = FFFFFFF8            IE.WAC         = FFFFFFE3            
FP_PC            00000010            IE.DAO         = FFFFFFF3            IE.WAT         = FFFFFFE1            
FP_PSL           00000004            IE.DFU         = FFFFFFE8            IE.WCK         = FFFFFFAA            
FP_REGISTERS     00000014            IE.DNA         = FFFFFFF9            IE.WER         = FFFFFFDF            
GBL...         = 00000000            IE.DNR         = FFFFFFFD            IE.WLK         = FFFFFFF4            
H.CSP            00000000            IE.DUN         = FFFFFFF7            IO$M_INHRETRY    ********   X   01   
H.CUIC           00000008            IE.DUP         = FFFFFFC7            IO$_PACKACK      ********   X   01   
H.DSW            00000026            IE.EOF         = FFFFFFF6            IO$_READLBLK     ********   X   01   
H.DUIC           0000000A            IE.EOT         = FFFFFFC2            IO$_READVBLK     ********   X   01   
H.EFLM           00000004            IE.EOV         = FFFFFFF5            IO$_WRITELBLK    ********   X   01   
H.EFSV           00000020            IE.EXP         = FFFFFFB5            IO$_WRITEPBLK    ********   X   01   
H.FCS            00000028            IE.FEX         = FFFFFFCF            IO$_WRITEVBLK    ********   X   01   
H.FORT           0000002A            IE.FHE         = FFFFFFC5            IO.ACE         = 00000F00            
H.FPSA           00000022            IE.FLN         = FFFFFFAF            IO.ACR         = 00000D00            
RSXDSKDRV       - RSX11M AME DISK DRIVER                         22-AUG-1978 00:23:30   VAX-11 MACRO X0.3-11               Page   8
SYMBOL TABLE                                                                                                                     (6)

IO.ACW         = 00000E00            IO.LEI         = 00000F08            IO.SPF         = 00000520            
IO.ADS         = 00001800            IO.LKE         = 00001400            IO.SPW         = 00001D48            
IO.APC         = 00001800            IO.LOD         = 00001800            IO.SSO         = 00000900            
IO.APV         = 00001808            IO.LOV         = 00000208            IO.STA         = 00001B00            
IO.ATA         = 00000308            IO.LSI         = 00001200            IO.STC         = 00000540            
IO.ATT         = 00000300            IO.LTI         = 00000F00            IO.STP         = 00001D00            
IO.CAS         = 00001B10            IO.LTK         = 00000028            IO.SYN         = 00000620            
IO.CBO         = 00001B48            IO.LTY         = 00001000            IO.TRM         = 00000508            
IO.CCI         = 00001800            IO.MAO         = 00000708            IO.UDI         = 00001308            
IO.CCO         = 00000120            IO.MCS         = 00001700            IO.UEI         = 00001328            
IO.CIN         = 00001D40            IO.MDA         = 00001C00            IO.UER         = 00001320            
IO.CLK         = 00001A00            IO.MDI         = 00001900            IO.ULK         = 00000A00            
IO.CLN         = 00000700            IO.MDO         = 00001B00            IO.UNL         = 00000022            
IO.CNT         = 00001E00            IO.MLO         = 00000C00            IO.USI         = 00001330            
IO.CON         = 00001B00            IO.MOD         = 00000600            IO.UTI         = 00001310            
IO.CPR         = 00001B08            IO.MSO         = 00000A00            IO.UTY         = 00001318            
IO.CPW         = 00001D50            IO.NLB         = 00001D58            IO.WAL         = 00000108            
IO.CRC         = 00000220            IO.NLK         = 00001300            IO.WAT         = 00001700            
IO.CRE         = 00001400            IO.ONL         = 00001F00            IO.WBT         = 00000140            
IO.CRJ         = 00001B20            IO.R1C         = 00000500            IO.WDD         = 00000124            
IO.CSI         = 00001600            IO.RAD         = 00001100            IO.WLB         = 00000100            
IO.CSM         = 00001D38            IO.RAL         = 00000208            IO.WLC         = 00000110            
IO.CTI         = 00001B00            IO.RAT         = 00001600            IO.WLS         = 00000108            
IO.CTL         = 00001D00            IO.RBC         = 00000600            IO.WLT         = 00000108            
IO.CTR         = 00001B88            IO.RCI         = 00001A00            IO.WLV         = 00000140            
IO.CTY         = 00000700            IO.RCV         = 00001A00            IO.WMS         = 00000110            
IO.DAC         = 00001000            IO.RDB         = 00000280            IO.WNS         = 00000110            
IO.DCI         = 00001900            IO.RDD         = 00001008            IO.WPB         = 00000120            
IO.DEL         = 00001500            IO.RDN         = 00000012            IO.WVB         = 00001200            
IO.DET         = 00000400            IO.REL         = 00001700            IO.XMT         = 00001900            
IO.DIS         = 00001C00            IO.RHD         = 00000208            IO.XNA         = 00001908            
IO.DLB         = 00001D60            IO.RLB         = 00000200            IQ.Q           = 00000002            
IO.DSI         = 00001700            IO.RLV         = 00000240            IQ.S           = 00000004            
IO.DTI         = 00001C00            IO.RMT         = 00001010            IQ.UMD         = 00000004            
IO.DTY         = 00000D00            IO.RNA         = 00000B00            IQ.X           = 00000001            
IO.ENA         = 00000C00            IO.RNC         = 00000220            IS.BV          = 00000005            
IO.EOF         = 00000600            IO.RNE         = 00000210            IS.CC          = 00000301            
IO.EXT         = 00001300            IO.RNS         = 00000210            IS.CR          = 00000D01            
IO.FDX         = 00000610            IO.RPB         = 00000220            IS.EOT         = 00000401            
IO.FLN         = 00001500            IO.RPR         = 00000900            IS.ESC         = 00001B01            
IO.FNA         = 00000900            IO.RST         = 00000201            IS.ESQ         = 00009B01            
IO.GLC         = 00001D18            IO.RTC         = 00000700            IS.PES         = 00008001            
IO.GLI         = 00001D10            IO.RTI         = 00001D00            IS.PND         = 00000000            
IO.GNI         = 00001D08            IO.RTK         = 00000030            IS.RDD         = 00000002            
IO.GRC         = 00001D28            IO.RTM         = 00000280            IS.SUC         = 00000001            
IO.GRI         = 00001D20            IO.RVB         = 00001100            IS.TAB         = 00000901            
IO.GRN         = 00001D30            IO.RWD         = 00000500            IS.TMO         = 00000002            
IO.GTS         = 00000500            IO.RWU         = 00000560            I_ADR0           000000D8            
IO.HDX         = 00000608            IO.SAO         = 00000800            I_ASCIINAME      0000011C            
IO.HIS         = 00001A00            IO.SCS         = 00001600            I_ASTPOOL        000000A8            
IO.HNG         = 00000600            IO.SDI         = 00001600            I_ASTQUEUE       000000A0            
IO.INI         = 00001900            IO.SDO         = 00001500            I_BAILOUTFP      0000018C            
IO.INL         = 00000500            IO.SEC         = 00000550            I_CMDAD          000000C4            
IO.ITI         = 00001E00            IO.SET         = 00000018            I_CMDSZ          000000C0            
IO.KIL         = 0000000A            IO.SLO         = 00000B00            I_CURAST         00000194            
IO.LDI         = 00000E00            IO.SMO         = 00000570            I_FCBPOOL        000000B0            
IO.LED         = 00001400            IO.SPB         = 00000510            I_FCC            000001B0            
RSXDSKDRV       - RSX11M AME DISK DRIVER                         22-AUG-1978 00:23:30   VAX-11 MACRO X0.3-11               Page   9
SYMBOL TABLE                                                                                                                     (6)

I_FLOATA0        000001BC            LUT_LINK         00000000            SV_RESTORE       00000000            
I_FLOATA1        000001C4            LUT_REALNAME     00000020            SV_TRANSLATE     00000001            
I_FLOATA2        000001CC            LUT_REF          00000008            SV_WAIT          00000007            
I_FLOATA3        000001D4            LUT_RSXNAME      00000010            SYS$QIOW         ********   X   01   
I_FLOATA4        000001DC            LUT_RSXUNIT      00000012            S_PC             00000020            
I_FLOATA5        000001E4            LUT_SIZE         00000038            S_PS             00000024            
I_FLOATADR       000001AC            LUT_TYPE         00000018            S_R0             00000000            
I_FLOATAST       000001A0            LUT_UNIT         00000020            S_R1             00000004            
I_FLOATCSR       000001A4            PSL_CC         = 00000000            S_R2             00000008            
I_FLOATERR       000001A8            PSL_CM         = 0000001F            S_R3             0000000C            
I_FLOATTMP       000001B4            PSL_FPD        = 0000001B            S_R4             00000010            
I_GARD           000000C8            PSL_FU         = 00000006            S_R5             00000014            
I_HIGHEFN        00000148            PSL_TBIT       = 00000004            S_R6             00000018            
I_HIGHSIZE       000000D0            QIOV_FILES     = 00000000            S_TYPE           0000001C            
I_IMAGEVBN       000000D4            QIO_FLAGS        0000001C            W.BATT           00000006            
I_INISIZE        000000CC            QIO_FUNCTION     0000001A            W.BFPD           0000000C            
I_LENGTH         000001EC            QIO_IOSB         0000000E            W.BHVR           00000004            
I_LOGNAME        000000B8            QIO_LUT          00000016            W.BLGH           00000010            
I_LUT            00000144            QIO_SECONDBLK    0000001E            W.BLPD           0000000E            
I_NLUN           00000140            QIO_SIZE         00000022            W.BLVR           00000002            
I_PC             00000184            RSX$A_OVDEV      ********   X   01   W.BNPD           0000000D            
I_PROCNAME       00000128            RSX$C_SUBSYSTEM= 00000006            W.BOFF           0000000A            
I_PS             00000188            RSX$DLVRQIOAST   ********   X   01   W.BPCB           00000000            
I_PWRAST         0000019C            RSX$DSK_DRV      00000000 RG    01   W.BSIZ           00000008            
I_R0             00000164            RSX$FILEIO       ********   X   01   
I_R1             00000168            RSX$IEIFC        ********   X   01   
I_R2             0000016C            RSX$IOKILL       ********   X   01   
I_R3             00000170            RSX$ISSUQIO      ********   X   01   
I_R4             00000174            RSX$OVERLAY      00000073 RG    01   
I_R5             00000178            RSX$_ACCVIO    = 00068044            
I_R6             0000017C            RSX$_BADLIBREF = 0006806C            
I_RAD50NAME      00000124            RSX$_BADSTACK  = 0006804C            
I_RCVAST         00000198            RSX$_BREAK     = 0006800C            
I_RCVMAIL        0000013C            RSX$_EXITSTATUS= 00068180            
I_RUNFLAGS       00000190            RSX$_EXTERNABRT= 0006805C            
I_SCRATCH        00000000            RSX$_ILLINST   = 0006802C            
I_STATE          0000014C            RSX$_INSFDYNMEM= 00068054            
I_TYPE           00000180            RSX$_IOT       = 00068014            
I_UIC            00000118            RSX$_LIBNOTFND = 00068074            
I_WAIT           00000154            RSX$_LOADERROR = 0006807C            
I_WAITSAVE       0000015C            RSX$_NONRSXEMT = 0006801C            
LUTC_CR        = 00000005            RSX$_NOSUCHDEV = 000680C2            
LUTC_DISK      = 00000002            RSX$_NOTSKIMG  = 00068064            
LUTC_LP        = 00000004            RSX$_ODDADDR   = 00068034            
LUTC_RMS       = 00000000            RSX$_PMD       = 000680CA            
LUTC_TAPE      = 00000003            RSX$_RCVMBXSIZ = 0000012C            
LUTC_TRM       = 00000001            RSX$_RESERVED  = 00068004            
LUTV_CTRLC     = 00000002            RSX$_TBIT      = 0006803C            
LUTV_CTRLO     = 00000000            RSX$_TRAP      = 00068024            
LUTV_PRM       = 00000003            SV_ASTLVL        00000005            
LUTV_TI        = 00000001            SV_DCL           00000002            
LUT_CHAN         0000000C            SV_FLOATAST      0000000A            
LUT_CHAR         00000014            SV_FRESTORE      00000003            
LUT_CTRLC        00000034            SV_NOAST         00000004            
LUT_FLAGS        0000000A            SV_PENDWAIT      00000006            
LUT_INFONAME     00000030            SV_PWRAST        00000009            
LUT_INFOUNIT     00000032            SV_RCVAST        00000008            
RSXDSKDRV       - RSX11M AME DISK DRIVER                         22-AUG-1978 00:23:30   VAX-11 MACRO X0.3-11               Page  10
PROGRAM SECTION SYNOPSIS                                                                                                         (6)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        0000010A      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
..ABS.           00000042      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000000      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXDEF           000001F0      04     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
11494. BYTES LEFT IN FREE MEMORY POOL.
2734. BYTES OF RECLAIMED MEMORY.
OBJ$:RSXDSKDRV,LIS$:RSXDSKDRV/-SP=SRC$:C,RSXDSKDRV
26 MLB DIR RDS - 643 GETS TO DEFINE 21 MACROS. 17 INTER. FILE WRITES. 
