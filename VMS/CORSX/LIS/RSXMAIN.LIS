RSXMAIN         - RSX AME MAIN PROGRAM                           22-AUG-1978 00:30:30   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)     203  RSXMAIN - RSX AME MAIN PROGRAM
RSXMAIN         - RSX AME MAIN PROGRAM                           22-AUG-1978 00:30:30   VAX-11 MACRO X0.3-11               Page   1
00                                                                                                                               (1)

                                     0000     1 	.TITLE	RSXMAIN - RSX AME MAIN PROGRAM
                                     0000     2 	.IDENT	/00/
                                     0000     3 ;
                                     0000     4 ; COPYRIGHT (C) 1977
                                     0000     5 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     6 ;
                                     0000     7 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     8 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000     9 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    10 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    11 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    12 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    13 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    14 ;
                                     0000    15 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    16 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    17 ; EQUIPMENT CORPORATION.
                                     0000    18 ;
                                     0000    19 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    20 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    21 ;++
                                     0000    22 ;
                                     0000    23 ; FACILITY:
                                     0000    24 ;
                                     0000    25 ;	STARLET RSX11M COMPATIBILITY MODE EMULATOR.
                                     0000    26 ;
                                     0000    27 ; ABSTRACT:
                                     0000    28 ;
                                     0000    29 ;	THIS MODULE IS ENTERED TO START A COMPATIBILITY MODE IMAGE.
                                     0000    30 ;--
                                     0000    31 ;
                                     0000    32 ; AUTHOR: R.HEINEN 4-MAY-77
                                     0000    33 ;
                                     0000    34 ; VERSION: X01
                                     0000    35 ;
                                     0000    36 ; CLI COMMAND PARSE DATA
                                     0000    37 ;
                                     0000    38  
                                     0000    39 	.IF NDF	C$$ORE
                                     0000    40  
                                     0000    41 CLIDAT:	$CLIREQDESC	CLI$K_GETCMD
                                     0000    42 	.MDELETE	$CLIREQDESC
                                     0000    43  
                                     0000    44 	.ENDC
                                     0000    45  
                                     0000    46 ;
                                     0000    47 ; EXTERNAL DEFINITIONS
                                     0000    48 ;
                                     0000    49 	$RSXDEF				; DEFINE RSX SYMBOLS
                                     0000    50 	$DEVDEF				; DEFINE DEVICE CHARACTERISTICS
                                     0000    51  
                                     0000    52 	.IF NDF	C$$ORE
                                     0000    53  
                                     0000    54 	$FABDEF				; DEFINE FAB
                                     0000    55 	$RABDEF				; DEFINE RAB
                                     0000    56  
                                     0000    57 	.ENDC
RSXMAIN         - RSX AME MAIN PROGRAM                           22-AUG-1978 00:30:30   VAX-11 MACRO X0.3-11               Page   2
00                                                                                                                               (1)

                                     0000    58  
                                     0000    59 ;
                                     0000    60 ; LOCAL STORAGE
                                     0000    61 ;
                                 00000000    62 	.PSECT	RSXIMPURE,NOEXE,LONG
                                     0000    63 ;
                                     0000    64 ; ARGUMENTS FOR RSX AME
                                     0000    65 ;
                           00000003  0000    66 RSXARGS:	.LONG	3
                           00000000  0004    67 FILCHAN:	.LONG	0
                  00000000 00000000  0008    68 GCML:		.LONG	0,0
                                     0010    69  
                                     0010    70 	.ALIGN	LONG
                                     0010    71  
                                     0010    72  
                                     0010    73 	.IF NDF	C$$ORE
                                     0010    74  
                                     0010    75 ERRFAB:	$FAB	RAT=<CR>,-
                                     0010    76 		SHR=<PUT>
                                     0010    77  
                                     0010    78 	.ALIGN	LONG
                                     0010    79 INFAB:	$FAB	SHR=<GET>
                                     0010    80  
                                     0010    81 	.ALIGN	LONG
                                     0010    82 FILEFAB:$FAB	NAM=RESULT,SHR=<GET>,FOP=<UFO>
                                     0010    83 RESULT:	$NAM	ESA=FILENAME,ESS=50
                                     0010    84 		.BLKB	1
                                     0010    85 FILENAME:	.BLKB	50
                                     0010    86  
                                     0010    87 	.ALIGN	LONG
                                     0010    88 INRAB:	$RAB	RAC=<SEQ>,-
                                     0010    89 		ROP=<PMT,CVT>,-
                                     0010    90 		UBF=UTLBUF,-
                                     0010    91 		USZ=UTLBUF_SIZ,-
                                     0010    92 		PBF=PROMPT,-
                                     0010    93 		PSZ=PROMPT_SIZ
                                     0010    94  
                                     0010    95 PROMPT:		.ASCII	<10><13>/MCR>/
                                     0010    96 PROMPT_SIZ=.-PROMPT
                                     0010    97 ERRMSG:	.LONG	20$-10$
                                     0010    98 	.LONG	10$
                                     0010    99 10$:	.ASCII	/RSX!AD - !AC/
                                     0010   100 20$:	
                                     0010   101  
                                     0010   102 MSGSIZ:	.LONG	0
                                     0010   103 MSGDESC:.LONG	20$-10$
                                     0010   104 	.LONG	10$
                                     0010   105 10$:	.BLKB	256
                                     0010   106 20$:
                                     0010   107  
                                     0010   108 UTLBUF_SIZ=256
                                     0010   109 	.ASCII	/MCR>/
                                     0010   110 UTLBUF:	.BLKB	UTLBUF_SIZ
                                     0010   111  
                                     0010   112 	.ENDC
RSXMAIN         - RSX AME MAIN PROGRAM                           22-AUG-1978 00:30:30   VAX-11 MACRO X0.3-11               Page   3
00              RSXMAIN - RSX AME MAIN PROGRAM                                                                                   (2)

                                     0010   114 	.SBTTL	RSXMAIN - RSX AME MAIN PROGRAM
                                     0010   115  
                                 00000000   116 	.PSECT	RSXCODE,NOWRT
                                     0000   117 ;++
                                     0000   118 ; RSXMAIN - RSX AME MAIN PROGRAM
                                     0000   119 ;
                                     0000   120 ; FUNCTIONAL DESCRIPTION:
                                     0000   121 ;
                                     0000   122 ; THIS ROUTINE IS THE ENTRY TO THE AME FROM THE IMAGE ACTIVATOR.
                                     0000   123 ; THERE ARE THREE WAYS IN WHICH THE AME CAN BE ACTIVATED.
                                     0000   124 ;
                                     0000   125 ;	1) DIRECT CALL TO A IMAGE SECTION RSX$RUNIMAGE.
                                     0000   126 ;		THIS IS THE WAY BACK TRANSLATORS ENTER THE AME.
                                     0000   127 ;	2) MCR COMMAND.
                                     0000   128 ;		WHEN ACTIVATED IN THIS WAY THE COMMAND INTERPRETER HAS
                                     0000   129 ;		SET UP THE RESULT PARSE ROUTINES TO MAKE THE COMMAND LINE
                                     0000   130 ;		AVAILABLE.
                                     0000   131 ;	3) RUN COMPATIBLITYMODE PROGRAM.
                                     0000   132 ;		THIS ENTRY HAS NO COMMAND INTERPRETER RESULT PARSE.
                                     0000   133 ;
                                     0000   134 ; TEMP *****
                                     0000   135 ;
                                     0000   136 ;	MCR <CR>
                                     0000   137 ;
                                     0000   138 ; INPUTS:
                                     0000   139 ;
                                     0000   140 ;	IMAGE ACTIVATION STACK.
                                     0000   141 ;
                                     0000   142 ; OUTPUTS:
                                     0000   143 ;
                                     0000   144 ;	IMAGE EXIT WITH APPROPRAITE STATUS.
                                     0000   145 ;--
                                     0000   146 RSX$MAIN:				;
                                     0000   147  
                                     0000   148 	.IF DF	C$$ORE
                                     0000   149  
                               0000  0000   150 	.WORD	0			;
                 00000002'9F     17  0002   151 	JMP	@#DSC$START+2		; ENTER AT DSC STARTING ADDRESS
                                     0008   152  
                                     0008   153 RSX$START::				; ENTRY POINT TO THE RSX AME
                                     0008   154  
                                     0008   155 	.ENDC
                               0000  0008   156 	.WORD	<0>
                                     000A   157 2$:					;
                     0008'CF     7C  000A   158 	CLRQ	W^GCML			; SET NO COMMAND LINE
                          59     D4  000E   159 	CLRL	R9			; ASSUME SINGLE COMMAND MODE
                                     0010   160  
                                     0010   161 	.IF NDF	C$$ORE
                                     0010   162  
                                     0010   163 	PUSHAB	W^EXIT			; SET UP EXIT ADDRESS
                                     0010   164 	MOVL	CLI$A_UTILSERV(AP),R1	; ADDRESS CLI UTILITY ROUTINE
                                     0010   165 	BEQL	5$			; IF EQL THEN PROMPT ON SYS$INPUT
                                     0010   166 	PUSHAB	W^CLIDAT		; SET UP TO CALL CLI
                                     0010   167 	CALLS	#1,(R1)			; CALL CLI
                                     0010   168 	BLBS	R0,7$			; IF LOW CLEAR THEN PROMPT
                                     0010   169 5$:	MOVL	16(AP),R0		; GET THE CHANNEL FROM THE IMAGE ACTIVATOR
                                     0010   170 	MOVZWL	10(R0),R3		; 
RSXMAIN         - RSX AME MAIN PROGRAM                           22-AUG-1978 00:30:30   VAX-11 MACRO X0.3-11               Page   4
00              RSXMAIN - RSX AME MAIN PROGRAM                                                                                   (2)

                                     0010   171 	BNEQ	100$			; IF NEQ THEN IMAGE ACTIVATOR STARTED US
                                     0010   172 	BRB	10$			; OTHERWISE PROMPT
                                     0010   173 7$:	MOVQ	W^CLI$Q_RQDESC+CLIDAT,W^GCML; GET COMMAND DESC.
                                     0010   174 	TSTL	W^GCML			; ANY COMMAND?
                                     0010   175 	BNEQ	50$			; IF NEQ THEN YES
                                     0010   176 10$:	INCL	R9			; SET MULTI COMMAND
                                     0010   177 	MOVAB	W^INFAB,R1		;
                                     0010   178 	MOVAB	W^RSX$T_SYSINPUT,R0	; ADDRESS NAME OF SYSINPUT DEVICE
                                     0010   179 	MOVB	(R0)+,FAB$B_FNS(R1)	; INSERT IN FAB
                                     0010   180 	MOVL	R0,FAB$L_FNA(R1)	;
                                     0010   181 	$OPEN	FAB=R1			; OPEN SYS$INPUT
                                     0010   182 	BLBC	R0,200$			; IF LOW SET THEN ERROR
                                     0010   183 15$:	BSBW	GETCMD			; GET A COMMAND FROM INPUT
                                     0010   184 	BLBC	R0,20$			; IF LOW CLEAR THEN GET COMMAND ERROR
                                     0010   185 	BSBB	50$			; PARSE COMMAND AND RUN IMAGE
                                     0010   186 	BRB	15$			; PROMPT FOR NEXT COMMAND
                                     0010   187 20$:	MOVL	R0,R11			; SAVE STATUS
                                     0010   188 	$CLOSE	FAB=W^INFAB		; CLOSE SYS$INPUT
                                     0010   189 	CMPL	R11,#RMS$_EOF		; END OF FILE?
                                     0010   190 	BNEQ	210$			; IF NEQ THEN REAL ERROR
                                     0010   191 	MOVZBL	#SS$_NORMAL,R11		; SET NORMAL EXIT
                                     0010   192 45$:	RSB				; RETURN TO EXIT
                                     0010   193 50$:	BSBW	PARSECMD		; PARSE THE COMMAND
                                     0010   194 	BLBC	R0,200$			; IF LOW CLEAR THEN ERROR
                                     0010   195 	TSTL	R3			; FILE OPEN?
                                     0010   196 	BEQL	45$			; IF NO THEN COMMENT
                                     0010   197 100$:	MOVL	R3,W^FILCHAN		; SET UP CHANNEL NUMBER OF IMAGE FILE
                                     0010   198 	CALLG	W^RSXARGS,W^RSX$RUNIMAGE; RUN IMAGE
                                     0010   199 	MOVL	R0,R11			; COPY STATUS
                                     0010   200 	$DASSGN_S	W^FILCHAN	; DEASSIGN CHANNEL
                                     0010   201 	BRB	210$			; CONTINUE IN COMMON
                                     0010   202 200$:	MOVL	R0,R11			; SAVE ERROR CODE
                                     0010   203 210$:	BLBS	R11,300$		; EXIT IMAGE
                                     0010   204 	BLBC	R9,300$			; IF SINGLE COMMAND EXIT WITH BAD STATUS
                                     0010   205 	$GETMSG_S	R11,W^MSGSIZ,W^MSGDESC,#7
                                     0010   206 	MOVAB	W^FILENAME-1,R0		; ADDRESS FILE NAME DESC
                                     0010   207 	MOVZWL	#UTLBUF_SIZ,W^GCML	;  SET UP DESC
                                     0010   208 	MOVAB	W^UTLBUF,W^GCML+4	; ADDRESS TARGET BUFFER
                                     0010   209 	MOVL	W^MSGDESC+4,R1		; 
                                     0010   210 	$FAO_S		W^ERRMSG,W^GCML,W^GCML,W^MSGSIZ,R1,R0
                                     0010   211 	MOVAB	W^GCML,R10		; FAKE DESC.
                                     0010   212 	BSBW	RSX$PRINTERR		; PRINT THE MESSAGE
                                     0010   213 300$:	RSB				; RETURN
                                     0010   214  
                                     0010   215 	.IFF
                                     0010   216  
       0000'CF       0000'CF     FA  0010   217 	CALLG	W^RSXARGS,W^RSX$RUNIMAGE ; START COMPATIBILITY MODE IMAGE
            F0            50     E8  0017   218 	BLBS	R0,2$			; IF LBS GO AGAIN
                                     001A   219  
                                     001A   220 	.ENDC
                                     001A   221  
                                     001A   222  
                                     001A   223 EXIT:	$EXIT_S	R11			; EXIT RUN
                                     0023   224 ;
                                     0023   225 ; GET THE NEXT COMMAND
                                     0023   226 ;
                                     0023   227  
RSXMAIN         - RSX AME MAIN PROGRAM                           22-AUG-1978 00:30:30   VAX-11 MACRO X0.3-11               Page   5
00              RSXMAIN - RSX AME MAIN PROGRAM                                                                                   (2)

                                     0023   228 	.IF NDF	C$$ORE
                                     0023   229  
                                     0023   230 GETCMD:					; GET THE NEXT COMMAND
                                     0023   231 	MOVW	W^INFAB+FAB$W_IFI,W^RAB$W_ISI+INRAB; CONNECT RAB
                                     0023   232 	$GET	RAB=W^INRAB		; GET THE COMMAND LINE
                                     0023   233 	BLBC	R0,110$			; BR IF ERROR
                                     0023   234 	MOVW	W^RAB$W_RSZ+INRAB,W^GCML; INSERT RECORD SIZE
                                     0023   235 	MOVAB	W^UTLBUF,W^GCML+4	; SAVE ADDRESS
                                     0023   236 	BBS	#DEV$V_TRM,@#CTL$GL_INP_DEV,100$; INPUT A TERMINAL?
                                     0023   237 	MOVQ	W^GCML,-(SP)		; SAVE CURRENT PARAMS
                                     0023   238 	ADDW	#4,W^GCML		; ADJUST FOR OUTPUT HEADER
                                     0023   239 	SUBL	#4,W^GCML+4		; ADJUST ADDRESS
                                     0023   240 	MOVAB	W^GCML,R10		; SET UP FAKE SCRATCH AREA
                                     0023   241 	BSBW	RSX$PRINTERR		; ECHO THE LINE
                                     0023   242 	MOVQ	(SP)+,W^GCML		; RESTORE ORIGIONAL LINE DATA
                                     0023   243 100$:	MOVZBL	#SS$_NORMAL,R0		; ALWAYS SUCCESS
                                     0023   244 110$:	RSB				;
                                     0023   245 ;
                                     0023   246 ; PARSE COMMAND LINE
                                     0023   247 ;
                                     0023   248 PARSECMD:				;
                                     0023   249 	MOVQ	W^GCML,R7		; PICK UP COMMAND DATA
                                     0023   250 	CMPB	#^A/;/,(R8)		; FIRST CHARACTER ;?
                                     0023   251 	BEQL	100$			; IF EQL THEN NO DATA COMMENT
                                     0023   252 	LOCC	#^A/!/,W^GCML,(R8)	; LOOK FOR ! COMMENTS
                                     0023   253 	SUBL	R0,W^GCML		; ADJUST DATA SIZE
                                     0023   254 	BEQL	100$			; IF EQL THEN NONE LEFT
                                     0023   255 	LOCC	#^A/ /,W^GCML,(R8)	; LOOK FOR SPACE TO DELINIATE FILE NAME
                                     0023   256 	MOVL	R8,W^FAB$L_FNA+FILEFAB	; SET UP FILE NAME ADDRESS
                                     0023   257 	MOVL	#RMS$_FNF,R0		; FAKE NO FILE ERROR
                                     0023   258 	SUBL3	R8,R1,R7		; CALC SIZE OF NAME
                                     0023   259 	BEQL	80$			; IF EQL THEN NO NAME AND NO COMMAND
                                     0023   260 	MOVB	R7,W^FAB$B_FNS+FILEFAB	; SAVE SIZE OF NAME
                                     0023   261 	MOVAB	W^RSX$T_SYSDEF,R0	; ADDRESS DEFAULT NAME
                                     0023   262 	MOVB	(R0)+,W^FAB$B_DNS+FILEFAB
                                     0023   263 	MOVL	R0,W^FAB$L_DNA+FILEFAB
                                     0023   264 	LOCC	#^A/[/,R7,(R8)		; DIRECTORY?
                                     0023   265 	BNEQ	20$			; IF NEQ THEN CHANGE DEFAULT STRING
                                     0023   266 	LOCC	#^A/</,R7,(R8)		;
                                     0023   267 	BEQL	30$			;
                                     0023   268 20$:	MOVAB	W^RSX$T_USERDEF,R0	; ADDRESS USER DEFUALT NAME
                                     0023   269 	MOVB	(R0)+,W^FAB$B_DNS+FILEFAB;
                                     0023   270 	MOVL	R0,W^FAB$L_DNA+FILEFAB	;
                                     0023   271 30$:	CLRB	W^NAM$B_ESL+RESULT	; SET NO EXPANDED NAME
                                     0023   272 	$OPEN	FAB=W^FILEFAB		; OPEN THE FILE
                                     0023   273 	BLBC	R0,75$			; BR IF ERROR
                                     0023   274 	MOVW	W^FAB$L_STV+FILEFAB,R3	; RETURN CHANNEL NUMBER
                                     0023   275 75$:	MOVB	W^NAM$B_ESL+RESULT,W^FILENAME-1; SAVE SISE OF EXPANDED NAME
                                     0023   276 80$:	RSB				;
                                     0023   277 100$:	CLRL	R3			;
                                     0023   278 	RSB
                                     0023   279  
                                     0023   280 	.ENDC
RSXMAIN         - RSX AME MAIN PROGRAM                           22-AUG-1978 00:30:30   VAX-11 MACRO X0.3-11               Page   6
00              RSXMAIN - RSX AME MAIN PROGRAM                                                                                   (3)

                                     0023   282  
                                     0023   283 	.END	RSX$MAIN
RSXMAIN         - RSX AME MAIN PROGRAM                           22-AUG-1978 00:30:30   VAX-11 MACRO X0.3-11               Page   7
SYMBOL TABLE                                                                                                                     (3)

$$MSG          = 00000000            DEV$V_FOD      = 0000000E            H.ODVA           00000012            
...GBL         = 00000000            DEV$V_FOR      = 00000018            H.ODVL           00000014            
ACBC_CTLRCAST  = 00000002            DEV$V_GEN      = 00000011            H.OVLY           0000002C            
ACBC_FLOATAST  = 00000003            DEV$V_IDV      = 0000001A            H.PFVA           0000001A            
ACBC_PWRAST    = 00000000            DEV$V_MBX      = 00000014            H.RCVA           0000001E            
ACBC_RCVAST    = 00000001            DEV$V_MNT      = 00000013            H.RRVA           00000032            
ACBV_INPROG    = 00000001            DEV$V_NET      = 0000000D            H.SPRI           00000030            
ACBV_PERM      = 00000000            DEV$V_ODV      = 0000001B            H.TKVA           00000016            
ACBV_TYPE      = 00000008            DEV$V_RCK      = 0000001E            H.TKVL           00000018            
ACB_FLAGS        0000000C            DEV$V_REC      = 00000000            H.VEXT           0000002E            
ACB_LINK         00000000            DEV$V_RND      = 0000001C            H.WND            00000024            
ACB_UPC          0000000A            DEV$V_RTM      = 0000001D            IE.2DV         = FFFFFFD0            
ACB_UPRM         00000008            DEV$V_SDI      = 00000004            IE.ABO         = FFFFFFF1            
ADR_HIGHLIM      00000004            DEV$V_SHR      = 00000010            IE.ALC         = FFFFFFAC            
ADR_LOWLIM       00000000            DEV$V_SPL      = 00000006            IE.ALN         = FFFFFFDE            
ADR_SIZE         00000008            DEV$V_SQD      = 00000005            IE.AST         = FFFFFFB0            
AP_NAME          00000004            DEV$V_SWL      = 00000019            IE.BAD         = FFFFFFFF            
AST_PARAM        00000004            DEV$V_TRM      = 00000002            IE.BBE         = FFFFFFC8            
AST_PC           00000010            DEV$V_WCK      = 0000001F            IE.BCC         = FFFFFFBE            
AST_PSL          00000014            DSC$START        ********   X   06   IE.BDI         = FFFFFFCC            
AST_R0           00000008            EXIT             0000001A R     06   IE.BDR         = FFFFFFCE            
AST_R1           0000000C            FCB_ATTRIBS      0000007C            IE.BDV         = FFFFFFC9            
BIT...         = 00000020            FCB_FIB          0000004C            IE.BHD         = FFFFFFC0            
C$$ORE         = 00000000            FCB_FID          00000000            IE.BLB         = FFFFFFBA            
C_CANONPS      = 83C00000            FCB_FNAME        00000014            IE.BLK         = FFFFFFEC            
C_RCVDSTR      = 44564352            FCB_FNAMEDESC    0000000C            IE.BNM         = FFFFFFCA            
DEV$M_ALL      = 00800000            FCB_FNB          00000002            IE.BTF         = FFFFFFB4            
DEV$M_AVL      = 00040000            FCB_PC           00000078            IE.BTP         = FFFFFFD5            
DEV$M_CCL      = 00000002            FCB_RESULT       00000030            IE.BVR         = FFFFFFC1            
DEV$M_DIR      = 00000008            FCB_RESULTDESC   00000004            IE.BYT         = FFFFFFED            
DEV$M_DMT      = 00200000            FCB_SIZE         000000B4            IE.CKS         = FFFFFFE2            
DEV$M_ELG      = 00400000            FILCHAN          00000004 R     05   IE.CLO         = FFFFFFDA            
DEV$M_FOD      = 00004000            FP_AP            00000008            IE.CNR         = FFFFFFB7            
DEV$M_FOR      = 01000000            FP_FP            0000000C            IE.CON         = FFFFFFEA            
DEV$M_GEN      = 00020000            FP_PC            00000010            IE.DAA         = FFFFFFF8            
DEV$M_IDV      = 04000000            FP_PSL           00000004            IE.DAO         = FFFFFFF3            
DEV$M_MBX      = 00100000            FP_REGISTERS     00000014            IE.DFU         = FFFFFFE8            
DEV$M_MNT      = 00080000            GBL...         = 00000000            IE.DNA         = FFFFFFF9            
DEV$M_NET      = 00002000            GCML             00000008 R     05   IE.DNR         = FFFFFFFD            
DEV$M_ODV      = 08000000            H.CSP            00000000            IE.DUN         = FFFFFFF7            
DEV$M_RCK      = 40000000            H.CUIC           00000008            IE.DUP         = FFFFFFC7            
DEV$M_REC      = 00000001            H.DSW            00000026            IE.EOF         = FFFFFFF6            
DEV$M_RND      = 10000000            H.DUIC           0000000A            IE.EOT         = FFFFFFC2            
DEV$M_RTM      = 20000000            H.EFLM           00000004            IE.EOV         = FFFFFFF5            
DEV$M_SDI      = 00000010            H.EFSV           00000020            IE.EXP         = FFFFFFB5            
DEV$M_SHR      = 00010000            H.FCS            00000028            IE.FEX         = FFFFFFCF            
DEV$M_SPL      = 00000040            H.FORT           0000002A            IE.FHE         = FFFFFFC5            
DEV$M_SQD      = 00000020            H.FPSA           00000022            IE.FLN         = FFFFFFAF            
DEV$M_SWL      = 02000000            H.FPVA           0000001C            IE.FOP         = FFFFFFCB            
DEV$M_TRM      = 00000004            H.GARD           0000003A            IE.HFU         = FFFFFFE4            
DEV$M_WCK      = 80000000            H.HDLN           00000002            IE.IES         = FFFFFFAE            
DEV$V_ALL      = 00000017            H.IPC            0000000E            IE.IFC         = FFFFFFFE            
DEV$V_AVL      = 00000012            H.IPS            0000000C            IE.IFU         = FFFFFFE7            
DEV$V_CCL      = 00000001            H.ISP            00000010            IE.ILL         = FFFFFFD6            
DEV$V_DIR      = 00000003            H.LUN            0000003E            IE.ISQ         = FFFFFFC3            
DEV$V_DMT      = 00000015            H.NLUN           0000003C            IE.LCK         = FFFFFFE5            
DEV$V_ELG      = 00000016            H.NML            00000031            IE.MOD         = FFFFFFEB            
RSXMAIN         - RSX AME MAIN PROGRAM                           22-AUG-1978 00:30:30   VAX-11 MACRO X0.3-11               Page   8
SYMBOL TABLE                                                                                                                     (3)

IE.NBF         = FFFFFFD9            I_CMDSZ          000000C0            LUT_CTRLC        00000034            
IE.NBK         = FFFFFFD7            I_CURAST         00000194            LUT_FLAGS        0000000A            
IE.NDR         = FFFFFFB8            I_FCBPOOL        000000B0            LUT_INFONAME     00000030            
IE.NFI         = FFFFFFC4            I_FCC            000001B0            LUT_INFOUNIT     00000032            
IE.NFW         = FFFFFFBB            I_FLOATA0        000001BC            LUT_LINK         00000000            
IE.NLK         = FFFFFFB1            I_FLOATA1        000001C4            LUT_REALNAME     00000020            
IE.NLN         = FFFFFFDB            I_FLOATA2        000001CC            LUT_REF          00000008            
IE.NNC         = FFFFFFB3            I_FLOATA3        000001D4            LUT_RSXNAME      00000010            
IE.NNL         = FFFFFFB2            I_FLOATA4        000001DC            LUT_RSXUNIT      00000012            
IE.NNN         = FFFFFFBC            I_FLOATA5        000001E4            LUT_SIZE         00000038            
IE.NOD         = FFFFFFE9            I_FLOATADR       000001AC            LUT_TYPE         00000018            
IE.NSF         = FFFFFFE6            I_FLOATAST       000001A0            LUT_UNIT         00000020            
IE.NST         = FFFFFFB0            I_FLOATCSR       000001A4            PSL_CC         = 00000000            
IE.OFL         = FFFFFFBF            I_FLOATERR       000001A8            PSL_CM         = 0000001F            
IE.ONP         = FFFFFFFB            I_FLOATTMP       000001B4            PSL_FPD        = 0000001B            
IE.OVR         = FFFFFFEE            I_GARD           000000C8            PSL_FU         = 00000006            
IE.PES         = FFFFFFAD            I_HIGHEFN        00000148            PSL_TBIT       = 00000004            
IE.PRI         = FFFFFFF0            I_HIGHSIZE       000000D0            QIOV_FILES     = 00000000            
IE.RAC         = FFFFFFD4            I_IMAGEVBN       000000D4            QIO_FLAGS        0000001C            
IE.RAT         = FFFFFFD3            I_INISIZE        000000CC            QIO_FUNCTION     0000001A            
IE.RBG         = FFFFFFD8            I_LENGTH         000001EC            QIO_IOSB         0000000E            
IE.RCN         = FFFFFFD2            I_LOGNAME        000000B8            QIO_LUT          00000016            
IE.RER         = FFFFFFE0            I_LUT            00000144            QIO_SECONDBLK    0000001E            
IE.RNM         = FFFFFFCD            I_NLUN           00000140            QIO_SIZE         00000022            
IE.RSU         = FFFFFFEF            I_PC             00000184            RSX$C_SUBSYSTEM= 00000006            
IE.SNC         = FFFFFFDD            I_PROCNAME       00000128            RSX$MAIN         00000000 R     06   
IE.SPC         = FFFFFFFA            I_PS             00000188            RSX$RUNIMAGE     ********   X   06   
IE.SQC         = FFFFFFDC            I_PWRAST         0000019C            RSX$START        00000008 RG    06   
IE.SRE         = FFFFFFF2            I_R0             00000164            RSX$_ACCVIO    = 00068044            
IE.STK         = FFFFFFC6            I_R1             00000168            RSX$_BADLIBREF = 0006806C            
IE.TMM         = FFFFFFB9            I_R2             0000016C            RSX$_BADSTACK  = 0006804C            
IE.TMO         = FFFFFFB6            I_R3             00000170            RSX$_BREAK     = 0006800C            
IE.ULK         = FFFFFFAB            I_R4             00000174            RSX$_EXITSTATUS= 00068180            
IE.VER         = FFFFFFFC            I_R5             00000178            RSX$_EXTERNABRT= 0006805C            
IE.WAC         = FFFFFFE3            I_R6             0000017C            RSX$_ILLINST   = 0006802C            
IE.WAT         = FFFFFFE1            I_RAD50NAME      00000124            RSX$_INSFDYNMEM= 00068054            
IE.WCK         = FFFFFFAA            I_RCVAST         00000198            RSX$_IOT       = 00068014            
IE.WER         = FFFFFFDF            I_RCVMAIL        0000013C            RSX$_LIBNOTFND = 00068074            
IE.WLK         = FFFFFFF4            I_RUNFLAGS       00000190            RSX$_LOADERROR = 0006807C            
IS.BV          = 00000005            I_SCRATCH        00000000            RSX$_NONRSXEMT = 0006801C            
IS.CC          = 00000301            I_STATE          0000014C            RSX$_NOSUCHDEV = 000680C2            
IS.CR          = 00000D01            I_TYPE           00000180            RSX$_NOTSKIMG  = 00068064            
IS.EOT         = 00000401            I_UIC            00000118            RSX$_ODDADDR   = 00068034            
IS.ESC         = 00001B01            I_WAIT           00000154            RSX$_PMD       = 000680CA            
IS.ESQ         = 00009B01            I_WAITSAVE       0000015C            RSX$_RCVMBXSIZ = 0000012C            
IS.PES         = 00008001            LUTC_CR        = 00000005            RSX$_RESERVED  = 00068004            
IS.PND         = 00000000            LUTC_DISK      = 00000002            RSX$_TBIT      = 0006803C            
IS.RDD         = 00000002            LUTC_LP        = 00000004            RSX$_TRAP      = 00068024            
IS.SUC         = 00000001            LUTC_RMS       = 00000000            RSXARGS          00000000 R     05   
IS.TAB         = 00000901            LUTC_TAPE      = 00000003            SV_ASTLVL        00000005            
IS.TMO         = 00000002            LUTC_TRM       = 00000001            SV_DCL           00000002            
I_ADR0           000000D8            LUTV_CTRLC     = 00000002            SV_FLOATAST      0000000A            
I_ASCIINAME      0000011C            LUTV_CTRLO     = 00000000            SV_FRESTORE      00000003            
I_ASTPOOL        000000A8            LUTV_PRM       = 00000003            SV_NOAST         00000004            
I_ASTQUEUE       000000A0            LUTV_TI        = 00000001            SV_PENDWAIT      00000006            
I_BAILOUTFP      0000018C            LUT_CHAN         0000000C            SV_PWRAST        00000009            
I_CMDAD          000000C4            LUT_CHAR         00000014            SV_RCVAST        00000008            
RSXMAIN         - RSX AME MAIN PROGRAM                           22-AUG-1978 00:30:30   VAX-11 MACRO X0.3-11               Page   9
SYMBOL TABLE                                                                                                                     (3)

SV_RESTORE       00000000            
SV_TRANSLATE     00000001            
SV_WAIT          00000007            
SYS$EXIT         ********   X   06   
S_PC             00000020            
S_PS             00000024            
S_R0             00000000            
S_R1             00000004            
S_R2             00000008            
S_R3             0000000C            
S_R4             00000010            
S_R5             00000014            
S_R6             00000018            
S_TYPE           0000001C            
W.BATT           00000006            
W.BFPD           0000000C            
W.BHVR           00000004            
W.BLGH           00000010            
W.BLPD           0000000E            
W.BLVR           00000002            
W.BNPD           0000000D            
W.BOFF           0000000A            
W.BPCB           00000000            
W.BSIZ           00000008            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
..ABS.           00000042      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000000      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXDEF           000001F0      04     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXIMPURE        00000010      05     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD    WRT LONG  
RSXCODE          00000023      06     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
16394. BYTES LEFT IN FREE MEMORY POOL.
258. BYTES OF RECLAIMED MEMORY.
OBJ$:RSXMAIN,LIS$:RSXMAIN/-SP=SRC$:C,RSXMAIN
22 MLB DIR RDS - 483 GETS TO DEFINE 17 MACROS. 18 INTER. FILE WRITES. 
