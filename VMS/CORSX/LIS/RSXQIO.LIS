RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 00:27:03   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)     129  RSX$QIO/RSX$QIOW - QIO DIRECTIVE DISPATCHER
   (3)     260  RSX$IEIFC - ILLEGAL I/O FUNCTION
   (4)     285  RSX$IOKILL - DEVICE INDEPENDENT IO.KIL FUNCTION
   (5)     311  RSX$DLVRQIOAST - DELIVER AST TO COMPLETE I/O
   (6)     350  RSX$ISSUQIO - ISSUE QIO
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 00:27:03   VAX-11 MACRO X0.3-11               Page   1
V05.0                                                                                                                            (1)

                                     0000     1 	.TITLE	RSXQIO -- RSX11M QIO DIRECTIVE
                                     0000     2 	.IDENT	/V05.0/		;
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY:
                                     0000    25 ;
                                     0000    26 ;	VAX/VMS RSX11M AME
                                     0000    27 ;
                                     0000    28 ; ABSTRACT:
                                     0000    29 ;
                                     0000    30 ;	RSX11M QIO DIRECTIVE
                                     0000    31 ;
                                     0000    32 ; AUTHOR: R.HEINEN 4-NOV-76
                                     0000    33 ;--
                                     0000    34 ;
                                     0000    35 ; EXTERNAL SYMBOLS
                                     0000    36 ;
                                     0000    37 	$RSXDEF			; DEFINE RSX SYMBOLS
                                     0000    38 	DRERR$			; DEFINE RSX11M DIRECTIVE STATUS CODES
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 00:27:03   VAX-11 MACRO X0.3-11               Page   2
V05.0           RSX$QIO/RSX$QIOW - QIO DIRECTIVE DISPATCHER                                                                      (2)

                                     0000    40 	.SBTTL	RSX$QIO/RSX$QIOW - QIO DIRECTIVE DISPATCHER
                                 00000000    41 	.PSECT	RSXCODE,NOWRT
                                     0000    42  
                                     0000    43 	.ENABL	LSB
                                     0000    44  
                                     0000    45 ;++
                                     0000    46 ; RSX$QIO - RSX11M QIO DIRECTIVE
                                     0000    47 ; RSX$QIOW - RSX11M QIO AND WAIT DIRECTIVE
                                     0000    48 ;
                                     0000    49 ; FUNCTIONAL DESCRIPTION:
                                     0000    50 ;
                                     0000    51 ; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
                                     0000    52 ; "QIO$" OR "QIOW$" DIRECTIVE.
                                     0000    53 ;
                                     0000    54 ; THE FIRST OPERATION IS TO CHECK FOR ALL THE ERROR CONDITIONS THAT
                                     0000    55 ; CAUSE DSW ERRORS. THESE INCLUDE ILLEGAL LUNS, ILLEGAL EVENT FLAGS,
                                     0000    56 ; AND IOSB ACCESS VIOLATIONS. 
                                     0000    57 ;
                                     0000    58 ; AFTER THE DSW ERROR CHECKS ALL ERRORS ARE RETURNED VIA THE I/O DONE
                                     0000    59 ; STATUS POSTING LOGIC OF THE ROUTINES "RSX$DLVRQIOAST" AND 
                                     0000    60 ; "RSX$IODONEAST". THESE ROUTINES FORM THE BASIS FOR THE I/O STATUS
                                     0000    61 ; POST AND SUBSEQUENT AST DELIVERY TO THE IMAGE.
                                     0000    62 ;
                                     0000    63 ; CALLING SEQUENCE:
                                     0000    64 ;
                                     0000    65 ;	CALLED VIA JSB FROM "RSX$EXCEPTION".
                                     0000    66 ;
                                     0000    67 ; INPUT PARAMETERS:
                                     0000    68 ;
                                     0000    69 ;	R5 = ADDRESS OF DPB+2
                                     0000    70 ;	R6 = CM IMAGE STACK ADDRESS
                                     0000    71 ;	R10 = ADDRESS OF CM IMAGE DATA BASE
                                     0000    72 ;	R11 = ADDRESS OF IMAGE HEADER
                                     0000    73 ;
                                     0000    74 ; IMPLICIT INPUTS:
                                     0000    75 ;
                                     0000    76 ;	THE DPB IS ALREADY VALIDATED FOR READ ACCESS.
                                     0000    77 ;	THE DPB SIZE AND TYPE ARE CORRECT.
                                     0000    78 ;
                                     0000    79 ; OUTPUT PARAMETERS:
                                     0000    80 ;
                                     0000    81 ;	R6,R10,R11 ARE PRESERVED
                                     0000    82 ;
                                     0000    83 ; IMPLICIT OUTPUTS:
                                     0000    84 ;
                                     0000    85 ;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
                                     0000    86 ;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
                                     0000    87 ;
                                     0000    88 ; COMPLETION CODES:
                                     0000    89 ;
                                     0000    90 ;	IS.SUC	SUCCESSFUL
                                     0000    91 ;	IE.UPN	NO MEMORY FOR REQUEST
                                     0000    92 ;	IE.ILU	ILLEGAL LUN NUMBER
                                     0000    93 ;	IE.ULN	UNASSIGNED LUN
                                     0000    94 ;	IE.IEF	ILLEGAL EFN
                                     0000    95 ;	IE.ADP	IOSB ACCESS VIOLATION
                                     0000    96 ;--
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 00:27:03   VAX-11 MACRO X0.3-11               Page   3
V05.0           RSX$QIO/RSX$QIOW - QIO DIRECTIVE DISPATCHER                                                                      (2)

                                     0000    97 ;
                                     0000    98 ; QIO AND WAIT DIRECTIVE
                                     0000    99 ;
                                     0000   100 RSX$QIOW::				; QIO AND WIAT DIRECTIVE
                       04 A5     9F  0000   101 	PUSHAB	4(R5)			; SAVE EFN ADDRESS
                          31     10  0003   102 	BSBB	RSX$QIO			; DO THE I/O
                          55   8ED0  0005   103 	POPL	R5			; GET THE EFN
                       26 AB     95  0008   104 	TSTB	H.DSW(R11)		; SUCCESS?
                          07     19  000B   105 	BLSS	10$			; IF LSS THEN NOT SUCCESSFUL
                          65     B5  000D   106 	TSTW	(R5)			; ANY EFN?
                          03     13  000F   107 	BEQL	10$			; IF EQL THEN NO
                          FFEC'  31  0011   108 	BRW	RSX$WTSE		; DO WAIT FOR
                                 05  0014   109 10$:	RSB				; RETURN
                                     0015   110 ;
                                     0015   111 ; IEILU - ILLEGAL LUN NUMBER
                                     0015   112 ;
                                     0015   113 IEILU:	$DSW	#IE.ILU			; SET STATUS AND RETURN
                                     0020   114 ;
                                     0020   115 ; IEULN - ILLEGAL LUN NUMBER
                                     0020   116 ;
                                     0020   117 IEULN:	$DSW	#IE.ULN			; SET STATUS AND RETURN
                                     002B   118 ;
                                     002B   119 ; DPB ACCESS VIOLATION
                                     002B   120 ;
                                     002B   121 IESDP:	$DSW	#IE.SDP			;
                                     0036   122 ;
                                     0036   123 ; QIO (NO WAIT) DIRECTIVE
                                     0036   124 ;
                                     0036   125 RSX$QIO::				; QIO DIRECTIVE
            57            85     3C  0036   126 	MOVZWL	(R5)+,R7		; GET FUNCTION CODE FOR LATER
            50            85     3C  0039   127 	MOVZWL	(R5)+,R0		; GET LUN NUMBER
                          D7     13  003C   128 	BEQL	IEILU			; IF EQL THEN ERROR
       0140 CA            50     B1  003E   129 	CMPW	R0,I_NLUN(R10)		; LUN NUMBER IN RANGE?
                          D0     1A  0043   130 	BGTRU	IEILU			; INVALID LUN - POST ERROR
            58       0144 DA40   D0  0045   131 	MOVL	@I_LUT(R10)[R0],R8	; ADDRESS LUT ENTRY
                          D3     13  004B   132 	BEQL	IEULN			; IF EQL THEN UNASSIGNED
         04 AA            85     3C  004D   133 	MOVZWL	(R5)+,I_SCRATCH+4(R10)	; GET EFN SPECIFIED
                          14     13  0051   134 	BEQL	5$			; IF EQL THEN NO ADJUSTMENT NEEDED
            1F       0148 CA     F1  0053   135 	ACBL	I_HIGHEFN(R10),#31,I_SCRATCH+4(R10),5$; ADJUST TO MAP EFN AND CHECK IT
            000B       04 AA         0058       
                                     005C   136 	$DSW	#IE.IEF			; ILLEGAL EVENT FLAG
            50            65     3C  0067   137 5$:	MOVZWL	(R5),R0			; ADDRESS IOSB
            BE            50     E8  006A   138 	BLBS	R0,IESDP		; CHECK FOR ODD ADDRESS
                          60     D4  006D   139 	CLRL	(R0)			; ZERO IOSB 
                       0C A5     B5  006F   140 	TSTW	12(R5)			; CHECK DPB BEFORE ACCESS
         14 AA       0000'CF     9E  0072   141 	MOVAB	W^RSX$IODONEAST,I_SCRATCH+20(R10); SET UP AST SERVICE
                          FF85'  30  0078   142 	BSBW	RSX$SETUPAST		; SET UP AN AST CONTROL BLOCK
                       1C A2     D4  007B   143 	CLRL	QIO_FLAGS(R2)		; CLEAR FLAGS 
         18 AA            52     D0  007E   144 	MOVL	R2,I_SCRATCH+24(R10)	; ADDRESS AST PARAMETER
         10 AA         0E A2     7E  0082   145 	MOVAQ	QIO_IOSB(R2),I_SCRATCH+16(R10); SAVE AREA IN BLOCK AS IOSB
         08 A2            85     D0  0087   146 	MOVL	(R5)+,ACB_UPRM(R2)	; SAVE HIS IOSB AND AST ADDRESS
                       0C A2     B4  008B   147 	CLRW	ACB_FLAGS(R2)		; SET NO SPECIAL TYPE
         16 A2            58     D0  008E   148 	MOVL	R8,QIO_LUT(R2)		; SAVE LUT ADDRESS
            57         F8 8F     78  0092   149 	ASHL	#-8,R7,R3		; GET THE MAJOR FUNCTION CODE
                          53         0096       
         1C AA            65     3C  0097   150 	MOVZWL	(R5),I_SCRATCH+28(R10)	; P1=RSX P1
         20 AA         02 A5     3C  009B   151 	MOVZWL	2(R5),I_SCRATCH+32(R10)	; P2=RSX P2
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 00:27:03   VAX-11 MACRO X0.3-11               Page   4
V05.0           RSX$QIO/RSX$QIOW - QIO DIRECTIVE DISPATCHER                                                                      (2)

         24 AA         08 A5     B0  00A0   152 	MOVW	8(R5),I_SCRATCH+36(R10)	; INSERT RSX#5 AND #6 TO STARLET#3
         26 AA         06 A5     B0  00A5   153 	MOVW	6(R5),I_SCRATCH+38(R10)	;
         28 AA         04 A5     3C  00AA   154 	MOVZWL	4(R5),I_SCRATCH+40(R10)	; P4= RSX P3
                       2C AA     7C  00AF   155 	CLRQ	I_SCRATCH+44(R10)	; NO STARLET#5 OR 6
                                     00B2   156 ;
                                     00B2   157 ; ENTER DRIVER MODULE
                                     00B2   158 ;
            50         00'8F     9A  00B2   159 	MOVZBL	#SS$_NORMAL,R0		; ASSUME NORMAL COMPLETION
                          51     D4  00B6   160 	CLRL	R1			; NO STATUS
                                     00B8   161 	CASE	TYPE=B,LUT_TYPE(R8),<-	;
                                     00B8   162 		RSX$RMS_DRV,-		; 0= RMS
                                     00B8   163 		RSX$TTY_DRV,-		; 1= TTY
                                     00B8   164 		RSX$DSK_DRV,-		; 2= DISKS
                                     00B8   165 		RSX$MT_DRV,-		; 3= TAPES
                                     00B8   166 		RSX$LP_DRV,-		; 4= LP
                                     00B8   167 		RSX$CR_DRV,-		; 5= CR
                                     00B8   168 		>
                          FF34'  31  00C9   169 	BRW	RSX$UKN_DRV		; UNKNOWN DEVICE
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 00:27:03   VAX-11 MACRO X0.3-11               Page   5
V05.0           RSX$IEIFC - ILLEGAL I/O FUNCTION                                                                                 (3)

                                     00CC   171 	.SBTTL	RSX$IEIFC - ILLEGAL I/O FUNCTION
                                     00CC   172 ;++
                                     00CC   173 ; RSX$IEIFC - ILLEGAL I/O FUNCTION
                                     00CC   174 ;
                                     00CC   175 ; FUNCTIONAL DESCRIPTION:
                                     00CC   176 ;
                                     00CC   177 ; THIS ROUTINE COMPLETES I/O OPERATIONS WITH ILLEGAL FUNCTION CODES.
                                     00CC   178 ;
                                     00CC   179 ; INPUTS:
                                     00CC   180 ;
                                     00CC   181 ;	R2 = ADDRESS OF THE QIO CONTEXT
                                     00CC   182 ;	R6 = ADDRESS OF THE IMAGE STACK
                                     00CC   183 ;	R8 = ADDRESS OF THE LUT
                                     00CC   184 ;	R10 = ADDRESS OF THE IMAGE IMPURE AREA
                                     00CC   185 ;	R11 = ADDRESS OF THE IMAGE
                                     00CC   186 ;
                                     00CC   187 ; OUTPUTS:
                                     00CC   188 ;
                                     00CC   189 ;	R6,R10,R11 ARE PRESERVED.
                                     00CC   190 ;--
                                     00CC   191 RSX$IEIFC::				; ILLEGAL I/O FUNCTION
            50       0000'8F     3C  00CC   192 	MOVZWL	#SS$_ILLIOFUNC,R0	; SET STATUS
                          51     D4  00D1   193 	CLRL	R1
                          0F     11  00D3   194 	BRB	RSX$DLVRQIOAST		;
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 00:27:03   VAX-11 MACRO X0.3-11               Page   6
V05.0           RSX$IOKILL - DEVICE INDEPENDENT IO.KIL FUNCTION                                                                  (4)

                                     00D5   196 	.SBTTL	RSX$IOKILL - DEVICE INDEPENDENT IO.KIL FUNCTION
                                     00D5   197 ;++
                                     00D5   198 ; RSX$IOKILL - KILL I/O ON DEVICE
                                     00D5   199 ;
                                     00D5   200 ; FUNCTIONAL DESCRIPTION:
                                     00D5   201 ;
                                     00D5   202 ; THIS ROUTINE IS USED TO PERFORM KILL I/O FUNCTIONS ON DEVICES
                                     00D5   203 ; THAT DO NOT REQUIRE SPECIAL ATTENTION.
                                     00D5   204 ;
                                     00D5   205 ; INPUTS:
                                     00D5   206 ;
                                     00D5   207 ;	R2 = ADDRESS OF THE QIO CONTEXT BLOCK
                                     00D5   208 ;	R5 = ADDRESS OF QIO DPB
                                     00D5   209 ;	R6 = INAGE STACK POINTER
                                     00D5   210 ;	R8 = ADDRESS OF THE LUT
                                     00D5   211 ;	R10 = ADDRESS OF THE IMAGE IMPURE POINTER
                                     00D5   212 ;	R11 = ADDRESS OF THE IMAGE
                                     00D5   213 ;
                                     00D5   214 ; OUTPUTS:
                                     00D5   215 ;
                                     00D5   216 ;	R2,R6,R8,R10,R11 ARE PRESERVED.
                                     00D5   217 ;--
                                     00D5   218 RSX$IOKILL::				; KILL I/O
                                     00D5   219 	$CANCEL_S	LUT_CHAN(R8)	; KILL THE I/O
            50         00'8F     9A  00E0   220 	MOVZBL	#SS$_NORMAL,R0		; SET SUCCESS STATUS
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 00:27:03   VAX-11 MACRO X0.3-11               Page   7
V05.0           RSX$DLVRQIOAST - DELIVER AST TO COMPLETE I/O                                                                     (5)

                                     00E4   222 	.SBTTL RSX$DLVRQIOAST - DELIVER AST TO COMPLETE I/O
                                     00E4   223 ;++
                                     00E4   224 ; RSX$DLVRQIOAST - DELIVER AST TO COMPLETE I/O
                                     00E4   225 ;
                                     00E4   226 ; FUNCTIONAL DESCRIPTION:
                                     00E4   227 ;
                                     00E4   228 ; THIS ROUTINE DECLARES AN AST FOR I/O POST PROCESSING IN ORDER TO
                                     00E4   229 ; TRANSLATE THE STATUS.
                                     00E4   230 ; IT IS USED ONLY AS A BAILOUT IN THE CASE THAT THE REQUEST FAILED.
                                     00E4   231 ; AND THE FAILURE WAS NOT AN RSX11M DIRECTIVE ERROR.
                                     00E4   232 ; THE I/O SPECIFIED EVENT FLAG MUST BE SET IF THE ENTRY IS TO RSX$DLVRQIOASTS.
                                     00E4   233 ;
                                     00E4   234 ; INPUTS:
                                     00E4   235 ;
                                     00E4   236 ;	R0 = ERROR CODE TO DELIVER 
                                     00E4   237 ;	R1 = SECOND STATUS TO DELIVER
                                     00E4   238 ;	R2 = AST PARAMETER BLOCK FOR QIO
                                     00E4   239 ;	R6 = IMAGE STACK POINTER
                                     00E4   240 ;	R8 = LUT ENTRY ADDRESS
                                     00E4   241 ;	R10 = ADDRESS OF THE IMAGE DATA BASE
                                     00E4   242 ;	R11 = ADDRRESS OF THE IMAGE HEADER
                                     00E4   243 ;
                                     00E4   244 ;	I_SCRATCH+4 CONTAINS THE EFN TO SET
                                     00E4   245 ;
                                     00E4   246 ; OUTPUTS:
                                     00E4   247 ;
                                     00E4   248 ;	R6,R10,R11 ARE PRESERVED.
                                     00E4   249 ;
                                     00E4   250 ; IF NO SPACE IS AVAILABLE FOR THE DECLARE THEN IE.UPN IS RETURNED
                                     00E4   251 ; AS A DSW ERROR.
                                     00E4   252 ;--
                                     00E4   253 RSX$DLVRQIOAST::			; DELIVER AST TO IMAGE
         0E A2            50     7D  00E4   254 	MOVQ	R0,QIO_IOSB(R2)		; SAVE STATUS
                                     00E8   255 	$SETEF_S	I_SCRATCH+4(R10); SET THE EVENT FLAG
            7E            00     7D  00F2   256 	MOVQ	#0,-(SP)		; FAKE A NATIVE MODE AST
                          52     DD  00F5   257 	PUSHL	R2			; SET UP CONTEXT BLOCK ADDRESS
       0000'CF            03     FB  00F7   258 	CALLS	#3,W^RSX$IODONEAST	; FAKE AST
                                 05  00FC   259 	RSB				; RETURN
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 00:27:03   VAX-11 MACRO X0.3-11               Page   8
V05.0           RSX$ISSUQIO - ISSUE QIO                                                                                          (6)

                                     00FD   261 	.SBTTL	RSX$ISSUQIO - ISSUE QIO
                                     00FD   262 ;++
                                     00FD   263 ; RSX$ISSUQIO - ISSUE QIO BASED ON SET UP PARAMETERS
                                     00FD   264 ;
                                     00FD   265 ; FUNCTIONAL DESCRIPTION:
                                     00FD   266 ;
                                     00FD   267 ; THIS ROUTINE COMPLETES AN I/O OPERATION THAT HAS BEEN SET UP BY
                                     00FD   268 ; OTHER QIO SUBROUTINES. THE QIO DATA IS IN I_SCRATCH 
                                     00FD   269 ;
                                     00FD   270 ; INPUT:
                                     00FD   271 ;
                                     00FD   272 ;	R2 = ADDRESS OF THE QIO CONTEXT BLOCK
                                     00FD   273 ;	R6 = IMAGE STACK ADDRESS
                                     00FD   274 ;	R8 = LUT ENTRY ADDRESS
                                     00FD   275 ;	R10 = ADDRESS OF THE IMAGE DATA BASE
                                     00FD   276 ;	R11 = ADDRESS OF THE IMAGE HEADER
                                     00FD   277 ;
                                     00FD   278 ; IMPLICIT INPUTS:
                                     00FD   279 ;
                                     00FD   280 ; THE QIO ARGUMENT LIST LESS LIST HEADER IS SET UP IN THE IMAGE DATA
                                     00FD   281 ; BASE.
                                     00FD   282 ; THE ADDRESS OF THE ACTUAL SYSTEM QIO ROUTINE ( WAIT OR NOT ) IS IN I_SCRATCH+50
                                     00FD   283 ;
                                     00FD   284 ; OUTPUTS:
                                     00FD   285 ;
                                     00FD   286 ;	R6,R10,R11 ARE PRESERVED.
                                     00FD   287 ;--
                                     00FD   288 RSX$ISSUQIO::				; ISSUE QIO 
         08 AA         0C A8     D0  00FD   289 	MOVL	LUT_CHAN(R8),I_SCRATCH+8(R10); SET THE CHANNEL NUMBER
            6A            0C     9A  0102   290 	MOVZBL	#12,I_SCRATCH(R10)	; SET NUMBER OF PARAMS
   00000000'9F            6A     FA  0105   291 	CALLG	I_SCRATCH(R10),@#SYS$QIO; DO FUNCTION
            D5            50     E9  010C   292 	BLBC	R0,RSX$DLVRQIOAST	; IF ERROR THEN POST
                                 05  010F   293 	RSB				; OTHERWISE RETURN
                                     0110   294 ;
                                     0110   295 	.END
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 00:27:03   VAX-11 MACRO X0.3-11               Page   9
SYMBOL TABLE                                                                                                                     (6)

$$MSG          = 00000000            H.LUN            0000003E            IE.HFU         = FFFFFFE4            
...GBL         = 00000000            H.NLUN           0000003C            IE.HWR         = FFFFFFFA            
ACBC_CTLRCAST  = 00000002            H.NML            00000031            IE.IBS         = FFFFFFA7            
ACBC_FLOATAST  = 00000003            H.ODVA           00000012            IE.IDU         = FFFFFFA4            
ACBC_PWRAST    = 00000000            H.ODVL           00000014            IE.IEF         = FFFFFF9F            
ACBC_RCVAST    = 00000001            H.OVLY           0000002C            IE.IES         = FFFFFFAE            
ACBV_INPROG    = 00000001            H.PFVA           0000001A            IE.IFC         = FFFFFFFE            
ACBV_PERM      = 00000000            H.RCVA           0000001E            IE.IFU         = FFFFFFE7            
ACBV_TYPE      = 00000008            H.RRVA           00000032            IE.ILL         = FFFFFFD6            
ACB_FLAGS        0000000C            H.SPRI           00000030            IE.ILU         = FFFFFFA0            
ACB_LINK         00000000            H.TKVA           00000016            IE.ILV         = FFFFFFED            
ACB_UPC          0000000A            H.TKVL           00000018            IE.INS         = FFFFFFFE            
ACB_UPRM         00000008            H.VEXT           0000002E            IE.IOP         = FFFFFFAD            
ADR_HIGHLIM      00000004            H.WND            00000024            IE.IPR         = FFFFFFA1            
ADR_LOWLIM       00000000            IE.2DV         = FFFFFFD0            IE.ISQ         = FFFFFFC3            
ADR_SIZE         00000008            IE.ABO         = FFFFFFF1            IE.ITI         = FFFFFFA3            
AP_NAME          00000004            IE.ACT         = FFFFFFF9            IE.ITP         = FFFFFFA8            
AST_PARAM        00000004            IE.ADP         = FFFFFF9E            IE.ITS         = FFFFFFF8            
AST_PC           00000010            IE.ALC         = FFFFFFAC            IE.IUI         = FFFFFFA5            
AST_PSL          00000014            IE.ALG         = FFFFFFAC            IE.LCK         = FFFFFFE5            
AST_R0           00000008            IE.ALN         = FFFFFFDE            IE.LNL         = FFFFFFA6            
AST_R1           0000000C            IE.AST         = FFFFFFB0            IE.MAP         = FFFFFFAF            
BIT...         = 00068084            IE.BAD         = FFFFFFFF            IE.MOD         = FFFFFFEB            
C$$ORE         = 00000000            IE.BBE         = FFFFFFC8            IE.NBF         = FFFFFFD9            
C_CANONPS      = 83C00000            IE.BCC         = FFFFFFBE            IE.NBK         = FFFFFFD7            
C_RCVDSTR      = 44564352            IE.BDI         = FFFFFFCC            IE.NDR         = FFFFFFB8            
FCB_ATTRIBS      0000007C            IE.BDR         = FFFFFFCE            IE.NFI         = FFFFFFC4            
FCB_FIB          0000004C            IE.BDV         = FFFFFFC9            IE.NFW         = FFFFFFBB            
FCB_FID          00000000            IE.BHD         = FFFFFFC0            IE.NLK         = FFFFFFB1            
FCB_FNAME        00000014            IE.BLB         = FFFFFFBA            IE.NLN         = FFFFFFDB            
FCB_FNAMEDESC    0000000C            IE.BLK         = FFFFFFEC            IE.NNC         = FFFFFFB3            
FCB_FNB          00000002            IE.BNM         = FFFFFFCA            IE.NNL         = FFFFFFB2            
FCB_PC           00000078            IE.BTF         = FFFFFFB4            IE.NNN         = FFFFFFBC            
FCB_RESULT       00000030            IE.BTP         = FFFFFFD5            IE.NOD         = FFFFFFE9            
FCB_RESULTDESC   00000004            IE.BVR         = FFFFFFC1            IE.NSF         = FFFFFFE6            
FCB_SIZE         000000B4            IE.BYT         = FFFFFFED            IE.NST         = FFFFFFB0            
FP_AP            00000008            IE.CKP         = FFFFFFF6            IE.NSW         = FFFFFFEE            
FP_FP            0000000C            IE.CKS         = FFFFFFE2            IE.NVR         = FFFFFFAA            
FP_PC            00000010            IE.CLO         = FFFFFFDA            IE.NVW         = FFFFFFA9            
FP_PSL           00000004            IE.CNR         = FFFFFFB7            IE.OFL         = FFFFFFBF            
FP_REGISTERS     00000014            IE.CON         = FFFFFFEA            IE.ONP         = FFFFFFFB            
GBL...         = 00000000            IE.DAA         = FFFFFFF8            IE.OVR         = FFFFFFEE            
H.CSP            00000000            IE.DAO         = FFFFFFF3            IE.PES         = FFFFFFAD            
H.CUIC           00000008            IE.DFU         = FFFFFFE8            IE.PNS         = FFFFFFA2            
H.DSW            00000026            IE.DNA         = FFFFFFF9            IE.PRI         = FFFFFFF0            
H.DUIC           0000000A            IE.DNR         = FFFFFFFD            IE.PTS         = FFFFFFFD            
H.EFLM           00000004            IE.DUN         = FFFFFFF7            IE.RAC         = FFFFFFD4            
H.EFSV           00000020            IE.DUP         = FFFFFFC7            IE.RAT         = FFFFFFD3            
H.FCS            00000028            IE.EOF         = FFFFFFF6            IE.RBG         = FFFFFFD8            
H.FORT           0000002A            IE.EOT         = FFFFFFC2            IE.RBS         = FFFFFFF1            
H.FPSA           00000022            IE.EOV         = FFFFFFF5            IE.RCN         = FFFFFFD2            
H.FPVA           0000001C            IE.EXP         = FFFFFFB5            IE.RER         = FFFFFFE0            
H.GARD           0000003A            IE.FEX         = FFFFFFCF            IE.RNM         = FFFFFFCD            
H.HDLN           00000002            IE.FHE         = FFFFFFC5            IE.RSU         = FFFFFFEF            
H.IPC            0000000E            IE.FIX         = FFFFFFF7            IE.SDP         = FFFFFF9D            
H.IPS            0000000C            IE.FLN         = FFFFFFAF            IE.SNC         = FFFFFFDD            
H.ISP            00000010            IE.FOP         = FFFFFFCB            IE.SPC         = FFFFFFFA            
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 00:27:03   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (6)

IE.SQC         = FFFFFFDC            I_HIGHEFN        00000148            PSL_TBIT       = 00000004            
IE.SRE         = FFFFFFF2            I_HIGHSIZE       000000D0            QIOV_FILES     = 00000000            
IE.STK         = FFFFFFC6            I_IMAGEVBN       000000D4            QIO_FLAGS        0000001C            
IE.TCH         = FFFFFFF5            I_INISIZE        000000CC            QIO_FUNCTION     0000001A            
IE.TMM         = FFFFFFB9            I_LENGTH         000001EC            QIO_IOSB         0000000E            
IE.TMO         = FFFFFFB6            I_LOGNAME        000000B8            QIO_LUT          00000016            
IE.ULK         = FFFFFFAB            I_LUT            00000144            QIO_SECONDBLK    0000001E            
IE.ULN         = FFFFFFFB            I_NLUN           00000140            QIO_SIZE         00000022            
IE.UNS         = FFFFFFFC            I_PC             00000184            RSX$CR_DRV       ********   X   05   
IE.UPN         = FFFFFFFF            I_PROCNAME       00000128            RSX$C_SUBSYSTEM= 00000006            
IE.VER         = FFFFFFFC            I_PS             00000188            RSX$DLVRQIOAST   000000E4 RG    05   
IE.WAC         = FFFFFFE3            I_PWRAST         0000019C            RSX$DSK_DRV      ********   X   05   
IE.WAT         = FFFFFFE1            I_R0             00000164            RSX$IEIFC        000000CC RG    05   
IE.WCK         = FFFFFFAA            I_R1             00000168            RSX$IODONEAST    ********   X   05   
IE.WER         = FFFFFFDF            I_R2             0000016C            RSX$IOKILL       000000D5 RG    05   
IE.WLK         = FFFFFFF4            I_R3             00000170            RSX$ISSUQIO      000000FD RG    05   
IE.WOV         = FFFFFFAB            I_R4             00000174            RSX$LP_DRV       ********   X   05   
IEILU            00000015 R     05   I_R5             00000178            RSX$MT_DRV       ********   X   05   
IESDP            0000002B R     05   I_R6             0000017C            RSX$QIO          00000036 RG    05   
IEULN            00000020 R     05   I_RAD50NAME      00000124            RSX$QIOW         00000000 RG    05   
IS.BV          = 00000005            I_RCVAST         00000198            RSX$RMS_DRV      ********   X   05   
IS.CC          = 00000301            I_RCVMAIL        0000013C            RSX$SETUPAST     ********   X   05   
IS.CLR         = 00000000            I_RUNFLAGS       00000190            RSX$TTY_DRV      ********   X   05   
IS.CR          = 00000D01            I_SCRATCH        00000000            RSX$UKN_DRV      ********   X   05   
IS.EOT         = 00000401            I_STATE          0000014C            RSX$WTSE         ********   X   05   
IS.ESC         = 00001B01            I_TYPE           00000180            RSX$_ACCVIO    = 00068044            
IS.ESQ         = 00009B01            I_UIC            00000118            RSX$_BADLIBREF = 0006806C            
IS.PES         = 00008001            I_WAIT           00000154            RSX$_BADSTACK  = 0006804C            
IS.PND         = 00000000            I_WAITSAVE       0000015C            RSX$_BREAK     = 0006800C            
IS.RDD         = 00000002            LUTC_CR        = 00000005            RSX$_EXITSTATUS= 00068180            
IS.SET         = 00000002            LUTC_DISK      = 00000002            RSX$_EXTERNABRT= 0006805C            
IS.SPD         = 00000002            LUTC_LP        = 00000004            RSX$_ILLINST   = 0006802C            
IS.SUC         = 00000001            LUTC_RMS       = 00000000            RSX$_INSFDYNMEM= 00068054            
IS.TAB         = 00000901            LUTC_TAPE      = 00000003            RSX$_IOT       = 00068014            
IS.TMO         = 00000002            LUTC_TRM       = 00000001            RSX$_LIBNOTFND = 00068074            
I_ADR0           000000D8            LUTV_CTRLC     = 00000002            RSX$_LOADERROR = 0006807C            
I_ASCIINAME      0000011C            LUTV_CTRLO     = 00000000            RSX$_NONRSXEMT = 0006801C            
I_ASTPOOL        000000A8            LUTV_PRM       = 00000003            RSX$_NOSUCHDEV = 000680C2            
I_ASTQUEUE       000000A0            LUTV_TI        = 00000001            RSX$_NOTSKIMG  = 00068064            
I_BAILOUTFP      0000018C            LUT_CHAN         0000000C            RSX$_ODDADDR   = 00068034            
I_CMDAD          000000C4            LUT_CHAR         00000014            RSX$_PMD       = 000680CA            
I_CMDSZ          000000C0            LUT_CTRLC        00000034            RSX$_RCVMBXSIZ = 0000012C            
I_CURAST         00000194            LUT_FLAGS        0000000A            RSX$_RESERVED  = 00068004            
I_FCBPOOL        000000B0            LUT_INFONAME     00000030            RSX$_TBIT      = 0006803C            
I_FCC            000001B0            LUT_INFOUNIT     00000032            RSX$_TRAP      = 00068024            
I_FLOATA0        000001BC            LUT_LINK         00000000            SS$_ILLIOFUNC    ********   X   05   
I_FLOATA1        000001C4            LUT_REALNAME     00000020            SS$_NORMAL       ********   X   05   
I_FLOATA2        000001CC            LUT_REF          00000008            SV_ASTLVL        00000005            
I_FLOATA3        000001D4            LUT_RSXNAME      00000010            SV_DCL           00000002            
I_FLOATA4        000001DC            LUT_RSXUNIT      00000012            SV_FLOATAST      0000000A            
I_FLOATA5        000001E4            LUT_SIZE         00000038            SV_FRESTORE      00000003            
I_FLOATADR       000001AC            LUT_TYPE         00000018            SV_NOAST         00000004            
I_FLOATAST       000001A0            LUT_UNIT         00000020            SV_PENDWAIT      00000006            
I_FLOATCSR       000001A4            PSL_CC         = 00000000            SV_PWRAST        00000009            
I_FLOATERR       000001A8            PSL_CM         = 0000001F            SV_RCVAST        00000008            
I_FLOATTMP       000001B4            PSL_FPD        = 0000001B            SV_RESTORE       00000000            
I_GARD           000000C8            PSL_FU         = 00000006            SV_TRANSLATE     00000001            
RSXQIO          -- RSX11M QIO DIRECTIVE                          22-AUG-1978 00:27:03   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (6)

SV_WAIT          00000007            
SYS$CANCEL       ********   X   05   
SYS$QIO          ********   X   05   
SYS$SETEF        ********   X   05   
S_PC             00000020            
S_PS             00000024            
S_R0             00000000            
S_R1             00000004            
S_R2             00000008            
S_R3             0000000C            
S_R4             00000010            
S_R5             00000014            
S_R6             00000018            
S_TYPE           0000001C            
W.BATT           00000006            
W.BFPD           0000000C            
W.BHVR           00000004            
W.BLGH           00000010            
W.BLPD           0000000E            
W.BLVR           00000002            
W.BNPD           0000000D            
W.BOFF           0000000A            
W.BPCB           00000000            
W.BSIZ           00000008            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
..ABS.           00000042      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000000      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXDEF           000001F0      04     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXCODE          00000110      05     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
16390. BYTES LEFT IN FREE MEMORY POOL.
478. BYTES OF RECLAIMED MEMORY.
OBJ$:RSXQIO,LIS$:RSXQIO/-SP=SRC$:C,RSXQIO
20 MLB DIR RDS - 487 GETS TO DEFINE 19 MACROS. 14 INTER. FILE WRITES. 
