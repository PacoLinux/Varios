RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 00:25:54   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)     208  RSX$PMD - PMD EXITITING IMAGE
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 00:25:54   VAX-11 MACRO X0.3-11               Page   1
V03.0                                                                                                                            (1)

                                     0000     1 	.TITLE	RSXPMD - PMD ROUTINE FOR RSX11M AME
                                     0000     2 	.IDENT	/V03.0/
                                     0000     3 ;
                                     0000     4 ; COPYRIGHT (C) 1977
                                     0000     5 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     6 ;
                                     0000     7 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     8 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000     9 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    10 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    11 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    12 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    13 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    14 ;
                                     0000    15 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    16 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    17 ; EQUIPMENT CORPORATION.
                                     0000    18 ;
                                     0000    19 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    20 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    21 ;
                                     0000    22 ;++
                                     0000    23 ;
                                     0000    24 ; FACILTIY:
                                     0000    25 ;
                                     0000    26 ;	STARLET RSX11M COMPATIBILTIY MODE EMULATOR
                                     0000    27 ;
                                     0000    28 ; ABSTRACT:
                                     0000    29 ;
                                     0000    30 ;	PMD ROUTINE FOR IMAGE TERMINATION.
                                     0000    31 ;--
                                     0000    32 ;
                                     0000    33 ; AUTHOR: R.HEINEN 3-JUN-77
                                     0000    34 ;
                                     0000    35 ; EXTERNAL DEFINITIONS
                                     0000    36 ;
                                     0000    37 	$RSXDEF				; DEFINE INTERNAL RSX DEFINITIONS
                                     0000    38 ;
                                     0000    39 ; LOCAL STORAGE
                                     0000    40 ;
                                     0000    41 ;
                                 00000000    42 	.PSECT	RSXIMPURE,LONG,NOEXE
                                     0000    43 ;
                                     0000    44 ; FAB AND RAB FOR OUTPUT FILE
                                     0000    45 ;
                                     0000    46 PMDFAB:	$FAB	FAC=<PUT>,RAT=<CR>,DNA=DEFAUL,DNS=16,NAM=RESULT
                                     0050    47 PMDRAB:	$RAB	FAB=PMDFAB
                                     0094    48 RESULT:	$NAM	ESA=FILENAM,ESS=50
                           000000CD  00CC    49 	.BLKB	1
                           000000FF  00CD    50 FILENAM:	.BLKB	50
                                     00FF    51  
                                 00000000    52 	.PSECT	RSXPURE,NOWRT,LONG,NOEXE
                                     0000    53  
                           0000000C' 0000    54 TRMMSG:	.LONG	20$-10$
                           00000008' 0004    55 	.LONG	10$
43 41 21 20 2D 20 44 41 21 58 53 52  0008    56 10$:	.ASCII	/RSX!AD - !AC/
                                     0014    57 20$:
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 00:25:54   VAX-11 MACRO X0.3-11               Page   2
V03.0                                                                                                                            (1)

                                     0014    58  
44 4D 50 3A 4B 53 49 44 24 53 59 53  0014    59 DEFAUL:	.ASCII	/SYS$DISK:PMD.PMD/
                        44 4D 50 2E  0020       
                                     0024    60 ;
                                     0024    61 ; MESSAGES FOR OUTPUT
                                     0024    62 ;
                              0C 01  0024    63 FORM:	.BYTE	1,12		
4D 2D 54 53 4F 50 09 09 09 0A 0D 15  0026    64 HDRMSG:	.ASCII	<21><13><10>/			POST-MORTEM DUMP/
      50 4D 55 44 20 4D 45 54 52 4F  0032       
20 4C 41 43 49 47 4F 4C 20 0A 0D 18  003C    65 LUNMSG:	.ASCII	<24><13><10>/ LOGICAL UNIT   DEVICE/
43 49 56 45 44 20 20 20 54 49 4E 55  0048       
                                 45  0054       
20 59 41 4C 52 45 56 4F 20 0A 0D 3A  0055    66 OVLYMSG:.ASCII	<58><13><10>/ OVERLAY SEGMENTS LOADED AND RESIDENT LIBRARIES MAPPED/
41 4F 4C 20 53 54 4E 45 4D 47 45 53  0061       
49 53 45 52 20 44 4E 41 20 44 45 44  006D       
49 52 41 52 42 49 4C 20 54 4E 45 44  0079       
         44 45 50 50 41 4D 20 53 45  0085       
                              0A 0D  008E    67 	.BYTE	13,10
41 20 20 4B 43 41 54 53 20 0A 0D 26  0090    68 STKMSG:	.ASCII	<38><13><10>/ STACK  ADDRESS CONTENTS ASCII RAD50/
45 54 4E 4F 43 20 53 53 45 52 44 44  009C       
41 52 20 49 49 43 53 41 20 53 54 4E  00A8       
                           30 35 44  00B4       
                                     00B7    69 ;
                                     00B7    70 ; FAO CONTROL STRINGS
                                     00B7    71 ;
                           00000019  00B7    72 NAMFAO:	.LONG	25
                           000000BF' 00BB    73 	.LONG	10$
43 41 21 20 3A 4B 53 41 54 20 0A 0D  00BF    74 10$:	.ASCII	<13><10>/ TASK: !AC				TIME: !%D/
25 21 20 3A 45 4D 49 54 09 09 09 09  00CB       
                                 44  00D7       
                           0000000E  00D8    75 PCFAO:	.LONG	14
                           000000E0' 00DC    76 	.LONG	10$
21 09 57 4F 21 20 3A 43 50 20 0A 0D  00E0    77 10$:	.ASCII	<13><10>/ PC: !OW	!AD/
                              44 41  00EC       
                           0000002F  00EE    78 REG1FAO:.LONG	47
                           000000F6' 00F2    79 	.LONG	10$
20 4F 52 09 3A 53 47 45 52 20 0A 0D  00F6    80 10$:	.ASCII	<13><10>/ REGS:	RO - !OW  R1 - !OW  R2 - !OW  R3 - !OW/
20 2D 20 31 52 20 20 57 4F 21 20 2D  0102       
4F 21 20 2D 20 32 52 20 20 57 4F 21  010E       
   57 4F 21 20 2D 20 33 52 20 20 57  011A       
                           0000002E  0125    81 REG2FAO:.LONG	46
                           0000012D' 0129    82 	.LONG	10$
2D 20 34 52 20 20 20 20 20 20 20 20  012D    83 10$:	.ASCII	/        R4 - !OW  R5 - !OW  SP - !OW  PS - !OW/
21 20 2D 20 35 52 20 20 57 4F 21 20  0139       
57 4F 21 20 2D 20 50 53 20 20 57 4F  0145       
      57 4F 21 20 2D 20 53 50 20 20  0151       
41 54 53 20 4B 53 41 54 20 0A 0D 10' 015B    84 STSFAO:	.ASCII	<16><13><10>/ TASK STATUS: /
                     20 3A 53 55 54  0167       
                           0000001F  016C    85 EFNFAO:	.LONG	31
                           00000174' 0170    86 	.LONG	10$
41 4C 46 20 54 4E 45 56 45 20 0A 0D  0174    87 10$:	.ASCII	<13><10>/ EVENT FLAGS: !OW !OW !OW !OW/
20 57 4F 21 20 57 4F 21 20 3A 53 47  0180       
               57 4F 21 20 57 4F 21  018C       
                           00000025  0193    88 UICFAO:	.LONG	37
                           0000019B' 0197    89 	.LONG	10$
44 20 54 4E 45 52 52 55 43 20 0A 0D  019B    90 10$:	.ASCII	<13><10>/ CURRENT DIRECTORY: !AC    DSW: !OW/
41 21 20 3A 59 52 4F 54 43 45 52 49  01A7       
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 00:25:54   VAX-11 MACRO X0.3-11               Page   3
V03.0                                                                                                                            (1)

4F 21 20 3A 57 53 44 20 20 20 20 43  01B3       
                                 57  01BF       
                           00000024  01C0    91 PRIFAO:	.LONG	36
                           000001C8' 01C4    92 	.LONG	10$
3A 59 54 49 52 4F 49 52 50 20 0A 0D  01C8    93 10$:	.ASCII	<13><10>/ PRIORITY:  !ZB.  TI DEVICE - !AC:/
44 20 49 54 20 20 2E 42 5A 21 20 20  01D4       
3A 43 41 21 20 2D 20 45 43 49 56 45  01E0       
                           00000015  01EC    94 LOAFAO:	.LONG	21
                           000001F4' 01F0    95 	.LONG	10$
49 56 45 44 20 44 41 4F 4C 20 0A 0D  01F4    96 10$:	.ASCII	<13><10>/ LOAD DEVICE - !AC:/
         3A 43 41 21 20 2D 20 45 43  0200       
                           00000011  0209    97 LUTFAO:	.LONG	17
                           00000211' 020D    98 	.LONG	10$
20 57 4F 21 20 20 20 20 20 20 20 20  0211    99 10$:	.ASCII	/        !OW  !AC:/
                     3A 43 41 21 20  021D       
                           00000035  0222   100 OVLYFAO:.LONG	53
                           0000022A' 0226   101 	.LONG	10$
45 52 20 47 4E 49 54 52 41 54 53 20  022A   102 10$:	.ASCII	/ STARTING RELITIVE BLOCK: !OW  BASE: !OW  LENGTH: !OW/
4B 43 4F 4C 42 20 45 56 49 54 49 4C  0236       
3A 45 53 41 42 20 20 57 4F 21 20 3A  0242       
48 54 47 4E 45 4C 20 20 57 4F 21 20  024E       
                     57 4F 21 20 3A  025A       
                           0000001D  025F   103 STKFAO:	.LONG	29
                           00000267' 0263   104 	.LONG	10$
20 57 4F 21 20 20 20 20 20 20 20 20  0267   105 10$:	.ASCII	/        !OW  !OW   !AF    !AC/
20 20 46 41 21 20 20 20 57 4F 21 20  0273       
                     43 41 21 20 20  027F       
                           0000001E  0284   106 LIMFAO:	.LONG	30
                           0000028C' 0288   107 	.LONG	10$
4C 20 4C 41 55 54 52 49 56 20 0A 0D  028C   108 10$:	.ASCII	<13><10>/ VIRTUAL LIMITS: !OW - !OW/<13><10>
2D 20 57 4F 21 20 3A 53 54 49 4D 49  0298       
                  0A 0D 57 4F 21 20  02A4       
                           00000028  02AA   109 DMPFAO:	.LONG	40
                           000002B2' 02AE   110 	.LONG	10$
21 20 20 57 4F 21 20 20 57 4F 21 20  02B2   111 10$:	.ASCII	/ !OW  !OW  !OW  !OW  !OW   !! !AD!! !AF/
57 4F 21 20 20 57 4F 21 20 20 57 4F  02BE       
20 21 21 44 41 21 20 21 21 20 20 20  02CA       
                           46 41 21  02D6       
                           00000027  02D9   112 BYTFAO:	.LONG	39
                           000002E1' 02DD   113 	.LONG	10$
20 42 4F 21 20 20 20 20 20 20 20 20  02E1   114 10$:	.ASCII	/        !OB !OB !OB !OB !OB !OB !OB !OB/
20 42 4F 21 20 42 4F 21 20 42 4F 21  02ED       
20 42 4F 21 20 42 4F 21 20 42 4F 21  02F9       
                           42 4F 21  0305       
                           0000001E  0308   115 DUPFAO:	.LONG	30
                           00000310' 030C   116 	.LONG	10$
45 54 41 43 49 4C 50 55 44 20 0A 0D  0310   117 10$:	.ASCII	<13><10>/ DUPLICATE FROM !OW TO !OW/<13><10>
4F 54 20 57 4F 21 20 4D 4F 52 46 20  031C       
                  0A 0D 57 4F 21 20  0328       
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 00:25:54   VAX-11 MACRO X0.3-11               Page   4
V03.0           RSX$PMD - PMD EXITITING IMAGE                                                                                    (2)

                                     032E   119 	.SBTTL	RSX$PMD - PMD EXITITING IMAGE
                                     032E   120  
                                 00000000   121 	.PSECT	RSXCODE,NOWRT
                                     0000   122 ;++
                                     0000   123 ; RSX$PMD - PMD THE EXITING IMAGE
                                     0000   124 ;
                                     0000   125 ; FUNCTIONAL DESCRIPTION:
                                     0000   126 ;
                                     0000   127 ; THIS ROUTINE IS ENTERED DURING IMAGE EXIT IF AN ABORT HAS OCCURED 
                                     0000   128 ; AND THE TASK HAS THE PMD ON EXIT BIT SET.
                                     0000   129 ; A FILE IS CREATED THAT CONTAINS THE DUMP. THE FILE IS CALLED:
                                     0000   130 ;
                                     0000   131 ; DISK:[DIRECTORY]PROCESSNAME.PMD OR DISK:[DIRECTORY]INPUTDEVICE.PMD
                                     0000   132 ;
                                     0000   133 ; INPUTS:
                                     0000   134 ;
                                     0000   135 ;	R9 = RSX ABORT CODE
                                     0000   136 ;	R10 = ADDRESS OF THE IMAGE IMPURE VECTOR
                                     0000   137 ;
                                     0000   138 ; OUPUTS:
                                     0000   139 ;
                                     0000   140 ;	R10 IS PRESERVED
                                     0000   141 ;--
                                     0000   142 RSX$PMD::				; PMD THE CURRENT IMAGE
                                     0000   143 ;
                                     0000   144 ; OPEN PMD FILE
                                     0000   145 ;
       002C'CF       011D CA     9E  0000   146 	MOVAB	I_ASCIINAME+1(R10),W^FAB$L_FNA+PMDFAB; SET UP NAME
       0034'CF       011C CA     90  0007   147 	MOVB	I_ASCIINAME(R10),W^FAB$B_FNS+PMDFAB; INSERT SIZE
                                     000E   148 10$:	$CREATE	FAB=W^PMDFAB
            07            50     E9  0019   149 	BLBC	R0,15$			; IF LOW CLEAR THEN RMS ERROR
            50   000680CA 8F     D0  001C   150 	MOVL	#RSX$_PMD,R0		; ASSUME PMD MESSAGE
         5C AA            28     9A  0023   151 15$:	MOVZBL	#40,I_SCRATCH+92(R10)	; GET PMD MESSAGE
         60 AA         64 AA     9E  0027   152 	MOVAB	I_SCRATCH+100(R10),I_SCRATCH+96(R10)
                                     002C   153 	$GETMSG_S	R0,I_SCRATCH+92(R10),I_SCRATCH+92(R10),#7
            6A         50 8F     9A  003F   154 	MOVZBL	#80,I_SCRATCH(R10)	;
         04 AA         08 AA     9E  0043   155 	MOVAB	I_SCRATCH+8(R10),I_SCRATCH+4(R10);
            50       00CC'CF     9E  0048   156 	MOVAB	W^FILENAM-1,R0		;
            60       009F'CF     90  004D   157 	MOVB	W^RESULT+NAM$B_ESL,(R0)	;
                                     0052   158 	$FAO_S	W^TRMMSG,I_SCRATCH(R10),I_SCRATCH(R10),I_SCRATCH+92(R10),-
                                     0052   159 		I_SCRATCH+96(R10),R0
                          FF94'  30  0069   160 	BSBW	RSX$PRINTERR		; OUTPUT MESSAGE
            5B       0050'CF     9E  006C   161 	MOVAB	W^PMDRAB,R11		; ADDRESS RAB
                                     0071   162 	$CONNECT RAB=R11		; CONNECT RAB TO DATA STREAM
                                     007A   163 ;
                                     007A   164 ; OUTPUT HEADER
                                     007A   165 ;
            50       0026'CF     9E  007A   166 	MOVAB	W^HDRMSG,R0		;
                          0370   30  007F   167 	BSBW	OUTPUT			; OUTPUT LINE
                                     0082   168 ;
                                     0082   169 ; OUTPUT NAME MESSSAGE
                                     0082   170 ;
            58            6A     9E  0082   171 	MOVAB	I_SCRATCH(R10),R8	; ADDRESS DESCRIPTOR
         04 A8         0C A8     9E  0085   172 	MOVAB	12(R8),4(R8)
            68         64 8F     9A  008A   173 	MOVZBL	#100,(R8)		;
            50       011C CA     9E  008E   174 	MOVAB	I_ASCIINAME(R10),R0	;
                                     0093   175 	$FAO_S	W^NAMFAO,8(R8),(R8),R0,#0
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 00:25:54   VAX-11 MACRO X0.3-11               Page   5
V03.0           RSX$PMD - PMD EXITITING IMAGE                                                                                    (2)

                          033C   30  00A7   176 	BSBW	OUTFAO			; OUTPUT THE LINE
                                     00AA   177 ;
                                     00AA   178 ; OUTPUT PC MESSAGE
                                     00AA   179 ;
            52         5C AA     9E  00AA   180 	MOVAB	I_SCRATCH+92(R10),R2	; ADDRESS DESC
            62            28     9A  00AE   181 	MOVZBL	#40,(R2)		;
         04 A2         08 A2     9E  00B1   182 	MOVAB	8(R2),4(R2)		;
                                     00B6   183 	$GETMSG_S	R9,(R2),(R2),#7
                                     00C7   184 	$FAO_S	W^PCFAO,8(R8),(R8),I_PC(R10),(R2),4(R2)
                          0303   30  00E0   185 	BSBW	OUTFAO
                                     00E3   186 ;
                                     00E3   187 ; OUTPUT THE REGISTERS
                                     00E3   188 ;
            54   00000000'9F     9E  00E3   189 	MOVAB	@#CTL$AL_CMCNTX,R4	; ADDRESS REGISTERS SAVE
                                     00EA   190 	$FAO_S	W^REG1FAO,8(R8),(R8),(R4),4(R4),8(R4),12(R4)
                          02DE   30  0105   191 	BSBW	OUTFAO
                                     0108   192 	$FAO_S	W^REG2FAO,8(R8),(R8),16(R4),20(R4),24(R4),I_PS(R10)
                          02BE   30  0125   193 	BSBW	OUTFAO		
                                     0128   194 ;
                                     0128   195 ; OUTPUT THE STATUS
                                     0128   196 ;
            52       015B'CF     9E  0128   197 	MOVAB	W^STSFAO,R2		; ADDRESS THE STATUS MESSAGE HEADER
            53            82     9A  012D   198 	MOVZBL	(R2)+,R3		; GET ITS SIZE AND ADDRESS IT
            62            53     28  0130   199 	MOVC3	R3,(R2),I_SCRATCH+12(R10); COPY IT TO IMPURE STORAGE
                       0C AA         0133       
                                     0135   200 ;
                                     0135   201 ; AST LEVEL?
                                     0135   202 ;
       014C CA            05     E1  0135   203 	BBC	#SV_ASTLVL,I_STATE(R10),17$; BR IF NOT IS AST
                          07         013A       
            83   20545341 8F     D0  013B   204 	MOVL	#^A/AST /,(R3)+		; INSERT AST MESSAGE
                                     0142   205 ;
                                     0142   206 ; ASTS DISABLED?
                                     0142   207 ;
       014C CA            04     E1  0142   208 17$:	BBC	#SV_NOAST,I_STATE(R10),18$; BR IF AST'S ENABLED
                          07         0147       
            83   20545344 8F     D0  0148   209 	MOVL	#^A/DST /,(R3)+		; INSERT CODE WORD
                                     014F   210 ;
                                     014F   211 ; WAIT FOR IN PROGRESS?
                                     014F   212 ;
       014C CA            07     E1  014F   213 18$:	BBC	#SV_WAIT,I_STATE(R10),20$; BR IF NOT IN WAIT
                          07         0154       
            83   20524657 8F     D0  0155   214 	MOVL	#^A/WFR /,(R3)+		; INSERT CODE WORD
            53         04 AA     C3  015C   215 20$:	SUBL3	I_SCRATCH+4(R10),R3,I_SCRATCH+8(R10); INSERT PROPER SIZE
                       08 AA         0160       
                          0281   30  0162   216 	BSBW	OUTFAO			; OUTPUT THE LINE
                                     0165   217 ;
                                     0165   218 ; OUTPUT THE EVENT FLAGS
                                     0165   219 ;
                       68 AA     D4  0165   220 	CLRL	I_SCRATCH+104(R10)	; SET COMMONS TO 0 IN CASE NONE PRESENT
                                     0168   221 	$READEF_S	#32,I_SCRATCH+100(R10)
                                     0174   222 	$READEF_S	#64,I_SCRATCH+104(R10)
                                     0184   223 	$FAO_S	W^EFNFAO,8(R8),(R8),I_SCRATCH+100(R10),I_SCRATCH+102(R10),-
                                     0184   224 			I_SCRATCH+104(R10),I_SCRATCH+106(R10)
                          0243   30  01A0   225 	BSBW	OUTFAO
                                     01A3   226 ;
                                     01A3   227 ;
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 00:25:54   VAX-11 MACRO X0.3-11               Page   6
V03.0           RSX$PMD - PMD EXITITING IMAGE                                                                                    (2)

                                     01A3   228 ; OUTPUT THE DIRECTORY AND DSW
                                     01A3   229 ;
            54   00000000'9F     9E  01A3   230 	MOVAB	@#PIO$GT_DDSTRING,R4	;
                                     01AA   231 	$FAO_S	W^UICFAO,8(R8),(R8),R4,H.DSW
                          0221   30  01C2   232 	BSBW	OUTFAO
                                     01C5   233 ;
                                     01C5   234 ; OUTPUT THE PRIORITY
                                     01C5   235 ;
            54       0020'CF     9E  01C5   236 	MOVAB	W^RSX$A_TIIDEV+LUT_REALNAME,R4
                                     01CA   237 	$FAO_S	W^PRIFAO,8(R8),(R8),H.SPRI,R4
                          0201   30  01E2   238 	BSBW	OUTFAO
                                     01E5   239 ;
                                     01E5   240 ; OUTPUT THE LOAD DEVICE
                                     01E5   241 ;
            54       0020'CF     9E  01E5   242 	MOVAB	W^RSX$A_OVDEV+LUT_REALNAME,R4
                                     01EA   243 	$FAO_S	W^LOAFAO,8(R8),(R8),R4,-
                                     01EA   244 				I_IMAGEVBN+2(R10),-
                                     01EA   245 				I_IMAGEVBN(R10)
                          01DF   30  0204   246 	BSBW	OUTFAO
                                     0207   247 ;
                                     0207   248 ; OUTPUT LUT STATUS
                                     0207   249 ;
            50       003C'CF     9E  0207   250 	MOVAB	W^LUNMSG,R0		;
                          01E3   30  020C   251 	BSBW	OUTPUT
            56       0140 CA     3C  020F   252 	MOVZWL	I_NLUN(R10),R6		; GET NUMBER OF LUTS
                          2B     13  0214   253 	BEQL	35$			; IF EQL THEN NONE
            54            01     9A  0216   254 	MOVZBL	#1,R4			; START WITH LUN 1
            55       0144 DA44   D0  0219   255 25$:	MOVL	@I_LUT(R10)[R4],R5	; GET LUT ENTRY
                          1B     13  021F   256 	BEQL	30$			; IF EQL THEN NOT ASSIGNED
            53         20 A5     9E  0221   257 	MOVAB	LUT_REALNAME(R5),R3	;
                                     0225   258 	$FAO_S	W^LUTFAO,8(R8),(R8),R4,R3
                          01AA   30  0239   259 	BSBW	OUTFAO
                          54     D6  023C   260 30$:	INCL	R4			; NEXT LUN
            D8            56     F5  023E   261 	SOBGTR	R6,25$			; CONTINUE UNTIL DONE
                                     0241   262 35$:	
                                     0241   263 ;
                                     0241   264 ; OUTPUT STATUS OF OVERLAYS
                                     0241   265 ;
            50       0055'CF     9E  0241   266 	MOVAB	W^OVLYMSG,R0		; OUTPUT OVERLAY HEADER
                          01A9   30  0246   267 	BSBW	OUTPUT			;
            52   0000002C 9F     3C  0249   268 	MOVZWL	@#H.OVLY,R2		; ADDRESS OVERLAY IMPURE AREA
                          33     13  0250   269 	BEQL	47$			; IF EQL THEN NO OVERLAYS
            53         02 A2     3C  0252   270 	MOVZWL	2(R2),R3		; ADDRESS SEGMENT DESC LIST
            52         0A A2     3C  0256   271 	MOVZWL	10(R2),R2		; GET SIZE OF DESC.
            63            0C     E0  025A   272 40$:	BBS	#12,(R3),45$		; LOADED?
                          20         025D       
            0C            00     EF  025E   273 	EXTZV	#0,#12,(R3),R4		; GET BLOCK ADDRESS
            54            63         0261       
                                     0263   274 	$FAO_S	W^OVLYFAO,8(R8),(R8),R4,2(R3),4(R3); FORMAT
                          0168   30  027B   275 	BSBW	OUTFAO
            53            52     C0  027E   276 45$:	ADDL	R2,R3			; POINT TO NEXT ENTRY
                          63     B5  0281   277 	TSTW	(R3)			; PRESENT?
                          D5     12  0283   278 	BNEQ	40$			; IF NEQ THEN YES
                                     0285   279 ;
                                     0285   280 ; OUTPUT THE STACK
                                     0285   281 ;
            50       0090'CF     9E  0285   282 47$:	MOVAB	W^STKMSG,R0		;
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 00:25:54   VAX-11 MACRO X0.3-11               Page   7
V03.0           RSX$PMD - PMD EXITITING IMAGE                                                                                    (2)

                          0165   30  028A   283 	BSBW	OUTPUT
            54   00000018'9F     D0  028D   284 	MOVL	@#CTL$AL_CMCNTX+S_R6,R4	; ADDRESS CURRENT STACK
            57         65 AA     9E  0294   285 50$:	MOVAB	I_SCRATCH+101(R10),R7	; ADDRESS RAD50 TARGET
            56            57     D0  0298   286 	MOVL	R7,R6			; COPY BUFFER ADDRESS
                          FD62'  30  029B   287 	BSBW	RSX$R50CVT1		; CONVERT TO RAD50
                          74     B5  029E   288 	TSTW	-(R4)			; POINT TO PREVIOUS
            57            56     C3  02A0   289 	SUBL3	R6,R7,R0		; GET SIZE
                          50         02A3       
            76            50     90  02A4   290 	MOVB	R0,-(R6)		; INSERT
                                     02A7   291 	$FAO_S	W^STKFAO,8(R8),(R8),R4,(R4),#2,R4,R6
                          0122   30  02C1   292 	BSBW	OUTFAO
                          84     B5  02C4   293 	TSTW	(R4)+			; POINT TO NEXT WORD
   00000010'EF            54     B1  02C6   294 	CMPW	R4,H.ISP		; DONE?
                          C5     15  02CD   295 	BLEQ	50$			; COMPLETE
                                     02CF   296 ;
                                     02CF   297 ; OUTPUT THE IMAGE
                                     02CF   298 ;
            56       00D8 CA     9E  02CF   299 	MOVAB	I_ADR0(R10),R6		; DO ADR 0
                          1C     10  02D4   300 60$:	BSBB	DUMP			; OUTPUT IT
            56            08     C0  02D6   301 	ADDL	#ADR_SIZE,R6		; ADDRESS NEXT DESC
                          66     D5  02D9   302 	TSTL	(R6)			; IN USE
                          F7     12  02DB   303 	BNEQ	60$			; IF NEQ THEN YES
                                     02DD   304 ;
                                     02DD   305 ; CLOSE FILE
                                     02DD   306 ;
                                     02DD   307 70$:	$DISCONNECT RAB=R11
                                     02E6   308 	$CLOSE	FAB=W^PMDFAB		;
                                 05  02F1   309 	RSB				; RETURN
                                     02F2   310 ;
                                     02F2   311 ; MEMORY DUMP SUBROUTINE
                                     02F2   312 ;
                                     02F2   313 DUMP:
            50       0024'CF     9E  02F2   314 	MOVAB	W^FORM,R0		; FORM FEED
                          00F8   30  02F7   315 	BSBW	OUTPUT			;
                                     02FA   316 ;
                                     02FA   317 ; OUTPUT THE IMAGE LIMITS
                                     02FA   318 ;
            54            66     3C  02FA   319 	MOVZWL	ADR_LOWLIM(R6),R4
            51         04 A6     3C  02FD   320 	MOVZWL	ADR_HIGHLIM(R6),R1
                                     0301   321 	$FAO_S	W^LIMFAO,8(R8),(R8),R4,R1
                          00CE   30  0315   322 	BSBW	OUTFAO
                                     0318   323 ;
                                     0318   324 ; LOOP TO OUTPUT IMAGE
                                     0318   325 ;
            55            54     D0  0318   326 	MOVL	R4,R5			; COPY ADDRESS FOR DUPLICATE TEST
            57         64 AA     9E  031B   327 20$:	MOVAB	I_SCRATCH+100(R10),R7	; ADDRESS PLACE TO PUT RAD50
                          30     BB  031F   328 	PUSHR	#^M<R4,R5>		; SAVE VA AND COMPARISON
            67            00     2C  0321   329 	MOVC5	#0,(R7),#32,#20,(R7)	; BLANK AREA
            14            20         0324       
                          67         0326       
            54            6E     D0  0327   330 	MOVL	(SP),R4			; RESTORE SOURCE ADDRESS
                          57     DD  032A   331 	PUSHL	R7			; SAVE RAD50 BUFFER ADDRESS
                          FCD1'  30  032C   332 	BSBW	RSX$R50CVT1		; CONVERT DUMP TO RAD50
            67            20     90  032F   333 	MOVB	#^A/ /,(R7)		;
            6E            04     C1  0332   334 	ADDL3	#4,(SP),R7		;
                          57         0335       
                          FCC7'  30  0336   335 	BSBW	RSX$R50CVT1		;
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 00:25:54   VAX-11 MACRO X0.3-11               Page   8
V03.0           RSX$PMD - PMD EXITITING IMAGE                                                                                    (2)

            67            20     90  0339   336 	MOVB	#^A/ /,(R7)		;
            6E            08     C1  033C   337 	ADDL3	#8,(SP),R7		;
                          57         033F       
                          FCBD'  30  0340   338 	BSBW	RSX$R50CVT1		;
            67            20     90  0343   339 	MOVB	#^A/ /,(R7)		;
            6E            0C     C1  0346   340 	ADDL3	#12,(SP),R7		;
                          57         0349       
                          FCB3'  30  034A   341 	BSBW	RSX$R50CVT1		;
            67            20     90  034D   342 	MOVB	#^A/ /,(R7)		;
                          31     BA  0350   343 	POPR	#^M<R0,R4,R5>		; RESTORE VA AND R50 ADDRESS
                                     0352   344 	$FAO_S	W^DMPFAO,8(R8),(R8),-
                                     0352   345 		R4,-
                                     0352   346 		(R4),-
                                     0352   347 		2(R4),-
                                     0352   348 		4(R4),-
                                     0352   349 		6(R4),-
                                     0352   350 		#20,R0,-
                                     0352   351 		#8,R4
                          006C   30  0377   352 	BSBW	OUTFAO
                                     037A   353 	$FAO_S	W^BYTFAO,8(R8),(R8),-
                                     037A   354 		(R4),1(R4),-
                                     037A   355 		2(R4),3(R4),-
                                     037A   356 		4(R4),5(R4),-
                                     037A   357 		6(R4),7(R4)
                          0042   30  03A1   358 	BSBW	OUTFAO
            53            54     D0  03A4   359 60$:	MOVL	R4,R3
            84            84     D1  03A7   360 	CMPL	(R4)+,(R4)+		; POINT TO NEXT GROUP
         04 A6            54     B1  03AA   361 	CMPW	R4,ADR_HIGHLIM(R6)	; DONE?
                          19     1E  03AE   362 	BGEQU	80$			; IF GEQU THEN YES
            65            64     D1  03B0   363 	CMPL	(R4),(R5)		; NEXT GROUP A DUPLICATE?
                          07     12  03B3   364 	BNEQ	70$			; IF NEQ THEN NO
         04 A5         04 A4     D1  03B5   365 	CMPL	4(R4),4(R5)		;
                          E8     13  03BA   366 	BEQL	60$			; IF EQL THEN KEEP SEARCHING
            55            53     D1  03BC   367 70$:	CMPL	R3,R5			; ONE LINE DIFFERENCE?
                          02     13  03BF   368 	BEQL	75$
                          0B     10  03C1   369 	BSBB	85$			; OUTPUT DUPLICATE MESSAGE
            55            54     D0  03C3   370 75$:	MOVL	R4,R5			; SET NEW TEST ADDRESS
                          FF52   31  03C6   371 	BRW	20$			; DUMP THIS SECTION
                                     03C9   372 ;
                                     03C9   373 ; END CONDITION ON DUPLICATE?
                                     03C9   374 ;
            55            53     D1  03C9   375 80$:	CMPL	R3,R5			; SAME?
                          17     13  03CC   376 	BEQL	90$			; IF EQL THEN DONE
                                     03CE   377 ;
                                     03CE   378 ; OUTPUT DUPLICATE MESSAGE
                                     03CE   379 ;
                                     03CE   380 85$:	$FAO_S	W^DUPFAO,8(R8),(R8),R5,R4
                          0001   30  03E2   381 	BSBW	OUTFAO
                                 05  03E5   382 90$:	RSB				;
                                     03E6   383 ;
                                     03E6   384 ;
                                     03E6   385 ; UTILITY SUBROUTINES
                                     03E6   386 ;
                                     03E6   387 OUTFAO:					;
         28 AB         0C A8     9E  03E6   388 	MOVAB	12(R8),RAB$L_RBF(R11)	;
         22 AB         08 A8     B0  03EB   389 	MOVW	8(R8),RAB$W_RSZ(R11)
                          08     11  03F0   390 	BRB	OUT
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 00:25:54   VAX-11 MACRO X0.3-11               Page   9
V03.0           RSX$PMD - PMD EXITITING IMAGE                                                                                    (2)

         22 AB            80     9B  03F2   391 OUTPUT:	MOVZBW	(R0)+,RAB$W_RSZ(R11)	;
         28 AB            50     D0  03F6   392 	MOVL	R0,RAB$L_RBF(R11)
                                     03FA   393 OUT:	$PUT	RAB=R11
                                 05  0403   394 	RSB				; IGNORE ERRORS
                                     0404   395 	.END	
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 00:25:54   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (2)

$$.TAB         = 00000094 R     05   FAB$C_REL      = 00000010            FAB$M_SHRUPD   = 00000008            
$$.TABEND      = 000000CC R     05   FAB$C_RFM_DFLT = 00000002            FAB$M_SPL      = 00002000            
$$.TMP         = 00000000            FAB$C_SEQ      = 00000000            FAB$M_SQO      = 00000040            
$$.TMP1        = 00000001            FAB$C_UDF      = 00000000            FAB$M_SUP      = 00000004            
$$.TMP2        = 0000005B            FAB$C_VAR      = 00000002            FAB$M_TEF      = 10000000            
$$MSG          = 00000000            FAB$C_VFC      = 00000003            FAB$M_TMD      = 00000010            
$$T2           = 00000005            FAB$K_BLN        00000050            FAB$M_TMP      = 00000008            
...GBL         = 00000000            FAB$L_ALQ        00000010            FAB$M_TRN      = 00000010            
ACBC_CTLRCAST  = 00000002            FAB$L_CTX        00000018            FAB$M_UFM      = 04000000            
ACBC_FLOATAST  = 00000003            FAB$L_DEV        00000040            FAB$M_UFO      = 00020000            
ACBC_PWRAST    = 00000000            FAB$L_DNA        00000030            FAB$M_UPD      = 00000008            
ACBC_RCVAST    = 00000001            FAB$L_FNA        0000002C            FAB$M_UPI      = 00000040            
ACBV_INPROG    = 00000001            FAB$L_FOP        00000004            FAB$M_WCK      = 00000200            
ACBV_PERM      = 00000000            FAB$L_JNL        00000020            FAB$S_ORG      = 00000004            
ACBV_TYPE      = 00000008            FAB$L_MRN        00000038            FAB$S_PPF_RAT  = 00000008            
ACB_FLAGS        0000000C            FAB$L_NAM        00000028            FAB$V_BIO      = 00000005            
ACB_LINK         00000000            FAB$L_SDC        00000044            FAB$V_BLK      = 00000003            
ACB_UPC          0000000A            FAB$L_STS        00000008            FAB$V_BRO      = 00000006            
ACB_UPRM         00000008            FAB$L_STV        0000000C            FAB$V_CBT      = 00000015            
ADR_HIGHLIM      00000004            FAB$L_XAB        00000024            FAB$V_CIF      = 00000019            
ADR_LOWLIM       00000000            FAB$M_BIO      = 00000020            FAB$V_CR       = 00000001            
ADR_SIZE         00000008            FAB$M_BLK      = 00000008            FAB$V_CTG      = 00000014            
AP_NAME          00000004            FAB$M_BRO      = 00000040            FAB$V_DEL      = 00000002            
AST_PARAM        00000004            FAB$M_CBT      = 00200000            FAB$V_DFW      = 00000005            
AST_PC           00000010            FAB$M_CIF      = 02000000            FAB$V_DLT      = 0000000F            
AST_PSL          00000014            FAB$M_CR       = 00000002            FAB$V_DMO      = 0000000C            
AST_R0           00000008            FAB$M_CTG      = 00100000            FAB$V_ESC      = 0000001B            
AST_R1           0000000C            FAB$M_DEL      = 00000004            FAB$V_FTN      = 00000000            
BIT...         = 0000001A            FAB$M_DFW      = 00000020            FAB$V_GET      = 00000001            
BYTFAO           000002D9 R     06   FAB$M_DLT      = 00008000            FAB$V_INP      = 00000013            
C$$ORE         = 00000000            FAB$M_DMO      = 00001000            FAB$V_JNL      = 00000016            
CTL$AL_CMCNTX    ********   X   07   FAB$M_ESC      = 08000000            FAB$V_KFO      = 0000001E            
C_CANONPS      = 83C00000            FAB$M_FTN      = 00000001            FAB$V_MSE      = 00000004            
C_RCVDSTR      = 44564352            FAB$M_GET      = 00000002            FAB$V_MXV      = 00000001            
DEFAUL           00000014 R     06   FAB$M_INP      = 00080000            FAB$V_NAM      = 00000018            
DMPFAO           000002AA R     06   FAB$M_JNL      = 00400000            FAB$V_NEF      = 0000000A            
DUMP             000002F2 R     07   FAB$M_KFO      = 40000000            FAB$V_NFS      = 00000010            
DUPFAO           00000308 R     06   FAB$M_MSE      = 00000010            FAB$V_NIL      = 00000005            
EFNFAO           0000016C R     06   FAB$M_MXV      = 00000002            FAB$V_OFP      = 0000001D            
FAB$B_BID        00000000            FAB$M_NAM      = 01000000            FAB$V_ORG      = 00000004            
FAB$B_BKS        0000003E            FAB$M_NEF      = 00000400            FAB$V_POS      = 00000008            
FAB$B_BLN        00000001            FAB$M_NFS      = 00010000            FAB$V_PPF      = 00000012            
FAB$B_DNS        00000035            FAB$M_NIL      = 00000020            FAB$V_PPF_IND  = 0000000E            
FAB$B_FAC        00000016            FAB$M_OFP      = 20000000            FAB$V_PPF_RAT  = 00000006            
FAB$B_FNS        00000034            FAB$M_POS      = 00000100            FAB$V_PRN      = 00000002            
FAB$B_FSZ        0000003F            FAB$M_PPF      = 00040000            FAB$V_PUT      = 00000000            
FAB$B_ORG        0000001D            FAB$M_PPF_IND  = 00004000            FAB$V_RCK      = 00000017            
FAB$B_RAT        0000001E            FAB$M_PPF_RAT  = 00003FC0            FAB$V_RWC      = 0000000B            
FAB$B_RFM        0000001F            FAB$M_PRN      = 00000004            FAB$V_RWO      = 00000007            
FAB$B_RTV        0000001C            FAB$M_PUT      = 00000001            FAB$V_SCF      = 0000000E            
FAB$B_SHR        00000017            FAB$M_RCK      = 00800000            FAB$V_SHRDEL   = 00000002            
FAB$C_BID      = 00000003            FAB$M_RWC      = 00000800            FAB$V_SHRGET   = 00000001            
FAB$C_BLN        00000050            FAB$M_RWO      = 00000080            FAB$V_SHRPUT   = 00000000            
FAB$C_FIX      = 00000001            FAB$M_SCF      = 00004000            FAB$V_SHRUPD   = 00000003            
FAB$C_HSH      = 00000030            FAB$M_SHRDEL   = 00000004            FAB$V_SPL      = 0000000D            
FAB$C_IDX      = 00000020            FAB$M_SHRGET   = 00000002            FAB$V_SQO      = 00000006            
FAB$C_MAXRFM   = 00000003            FAB$M_SHRPUT   = 00000001            FAB$V_SUP      = 00000002            
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 00:25:54   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (2)

FAB$V_TEF      = 0000001C            H.TKVL           00000018            IE.NNC         = FFFFFFB3            
FAB$V_TMD      = 00000004            H.VEXT           0000002E            IE.NNL         = FFFFFFB2            
FAB$V_TMP      = 00000003            H.WND            00000024            IE.NNN         = FFFFFFBC            
FAB$V_TRN      = 00000004            HDRMSG           00000026 R     06   IE.NOD         = FFFFFFE9            
FAB$V_UFM      = 0000001A            IE.2DV         = FFFFFFD0            IE.NSF         = FFFFFFE6            
FAB$V_UFO      = 00000011            IE.ABO         = FFFFFFF1            IE.NST         = FFFFFFB0            
FAB$V_UPD      = 00000003            IE.ALC         = FFFFFFAC            IE.OFL         = FFFFFFBF            
FAB$V_UPI      = 00000006            IE.ALN         = FFFFFFDE            IE.ONP         = FFFFFFFB            
FAB$V_WCK      = 00000009            IE.AST         = FFFFFFB0            IE.OVR         = FFFFFFEE            
FAB$W_BLS        0000003C            IE.BAD         = FFFFFFFF            IE.PES         = FFFFFFAD            
FAB$W_DEQ        00000014            IE.BBE         = FFFFFFC8            IE.PRI         = FFFFFFF0            
FAB$W_IFI        00000002            IE.BCC         = FFFFFFBE            IE.RAC         = FFFFFFD4            
FAB$W_MRS        00000036            IE.BDI         = FFFFFFCC            IE.RAT         = FFFFFFD3            
FCB_ATTRIBS      0000007C            IE.BDR         = FFFFFFCE            IE.RBG         = FFFFFFD8            
FCB_FIB          0000004C            IE.BDV         = FFFFFFC9            IE.RCN         = FFFFFFD2            
FCB_FID          00000000            IE.BHD         = FFFFFFC0            IE.RER         = FFFFFFE0            
FCB_FNAME        00000014            IE.BLB         = FFFFFFBA            IE.RNM         = FFFFFFCD            
FCB_FNAMEDESC    0000000C            IE.BLK         = FFFFFFEC            IE.RSU         = FFFFFFEF            
FCB_FNB          00000002            IE.BNM         = FFFFFFCA            IE.SNC         = FFFFFFDD            
FCB_PC           00000078            IE.BTF         = FFFFFFB4            IE.SPC         = FFFFFFFA            
FCB_RESULT       00000030            IE.BTP         = FFFFFFD5            IE.SQC         = FFFFFFDC            
FCB_RESULTDESC   00000004            IE.BVR         = FFFFFFC1            IE.SRE         = FFFFFFF2            
FCB_SIZE         000000B4            IE.BYT         = FFFFFFED            IE.STK         = FFFFFFC6            
FILENAM          000000CD R     05   IE.CKS         = FFFFFFE2            IE.TMM         = FFFFFFB9            
FORM             00000024 R     06   IE.CLO         = FFFFFFDA            IE.TMO         = FFFFFFB6            
FP_AP            00000008            IE.CNR         = FFFFFFB7            IE.ULK         = FFFFFFAB            
FP_FP            0000000C            IE.CON         = FFFFFFEA            IE.VER         = FFFFFFFC            
FP_PC            00000010            IE.DAA         = FFFFFFF8            IE.WAC         = FFFFFFE3            
FP_PSL           00000004            IE.DAO         = FFFFFFF3            IE.WAT         = FFFFFFE1            
FP_REGISTERS     00000014            IE.DFU         = FFFFFFE8            IE.WCK         = FFFFFFAA            
GBL...         = 00000000            IE.DNA         = FFFFFFF9            IE.WER         = FFFFFFDF            
H.CSP            00000000            IE.DNR         = FFFFFFFD            IE.WLK         = FFFFFFF4            
H.CUIC           00000008            IE.DUN         = FFFFFFF7            IS.BV          = 00000005            
H.DSW            00000026            IE.DUP         = FFFFFFC7            IS.CC          = 00000301            
H.DUIC           0000000A            IE.EOF         = FFFFFFF6            IS.CR          = 00000D01            
H.EFLM           00000004            IE.EOT         = FFFFFFC2            IS.EOT         = 00000401            
H.EFSV           00000020            IE.EOV         = FFFFFFF5            IS.ESC         = 00001B01            
H.FCS            00000028            IE.EXP         = FFFFFFB5            IS.ESQ         = 00009B01            
H.FORT           0000002A            IE.FEX         = FFFFFFCF            IS.PES         = 00008001            
H.FPSA           00000022            IE.FHE         = FFFFFFC5            IS.PND         = 00000000            
H.FPVA           0000001C            IE.FLN         = FFFFFFAF            IS.RDD         = 00000002            
H.GARD           0000003A            IE.FOP         = FFFFFFCB            IS.SUC         = 00000001            
H.HDLN           00000002            IE.HFU         = FFFFFFE4            IS.TAB         = 00000901            
H.IPC            0000000E            IE.IES         = FFFFFFAE            IS.TMO         = 00000002            
H.IPS            0000000C            IE.IFC         = FFFFFFFE            I_ADR0           000000D8            
H.ISP            00000010            IE.IFU         = FFFFFFE7            I_ASCIINAME      0000011C            
H.LUN            0000003E            IE.ILL         = FFFFFFD6            I_ASTPOOL        000000A8            
H.NLUN           0000003C            IE.ISQ         = FFFFFFC3            I_ASTQUEUE       000000A0            
H.NML            00000031            IE.LCK         = FFFFFFE5            I_BAILOUTFP      0000018C            
H.ODVA           00000012            IE.MOD         = FFFFFFEB            I_CMDAD          000000C4            
H.ODVL           00000014            IE.NBF         = FFFFFFD9            I_CMDSZ          000000C0            
H.OVLY           0000002C            IE.NBK         = FFFFFFD7            I_CURAST         00000194            
H.PFVA           0000001A            IE.NDR         = FFFFFFB8            I_FCBPOOL        000000B0            
H.RCVA           0000001E            IE.NFI         = FFFFFFC4            I_FCC            000001B0            
H.RRVA           00000032            IE.NFW         = FFFFFFBB            I_FLOATA0        000001BC            
H.SPRI           00000030            IE.NLK         = FFFFFFB1            I_FLOATA1        000001C4            
H.TKVA           00000016            IE.NLN         = FFFFFFDB            I_FLOATA2        000001CC            
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 00:25:54   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (2)

I_FLOATA3        000001D4            LUT_INFOUNIT     00000032            NAM$V_DIR_LVLS = 00000015            
I_FLOATA4        000001DC            LUT_LINK         00000000            NAM$V_EXP_DEV  = 00000007            
I_FLOATA5        000001E4            LUT_REALNAME     00000020            NAM$V_EXP_DIR  = 00000006            
I_FLOATADR       000001AC            LUT_REF          00000008            NAM$V_EXP_NAME = 00000002            
I_FLOATAST       000001A0            LUT_RSXNAME      00000010            NAM$V_EXP_TYPE = 00000001            
I_FLOATCSR       000001A4            LUT_RSXUNIT      00000012            NAM$V_EXP_VER  = 00000000            
I_FLOATERR       000001A8            LUT_SIZE         00000038            NAM$V_GRP_MBR  = 00000013            
I_FLOATTMP       000001B4            LUT_TYPE         00000018            NAM$V_HIGHVER  = 0000000F            
I_GARD           000000C8            LUT_UNIT         00000020            NAM$V_LOWVER   = 0000000E            
I_HIGHEFN        00000148            NAM$B_BID        00000000            NAM$V_NODE     = 00000011            
I_HIGHSIZE       000000D0            NAM$B_BLN        00000001            NAM$V_QUOTED   = 00000012            
I_IMAGEVBN       000000D4            NAM$B_CURLVL     00000038            NAM$V_WILDCARD = 00000008            
I_INISIZE        000000CC            NAM$B_ESL        0000000B            NAM$V_WILD_DIR = 00000014            
I_LENGTH         000001EC            NAM$B_ESS        0000000A            NAM$V_WILD_GRP = 00000018            
I_LOGNAME        000000B8            NAM$B_RSL        00000003            NAM$V_WILD_MBR = 00000019            
I_LUT            00000144            NAM$B_RSS        00000002            NAM$V_WILD_NAME= 00000005            
I_NLUN           00000140            NAM$C_BID      = 00000002            NAM$V_WILD_SFD1= 00000019            
I_PC             00000184            NAM$C_BLN        00000038            NAM$V_WILD_SFD2= 0000001A            
I_PROCNAME       00000128            NAM$C_BLN_DIRWC  00000050            NAM$V_WILD_TYPE= 00000004            
I_PS             00000188            NAM$C_DVI      = 00000010            NAM$V_WILD_UFD = 00000018            
I_PWRAST         0000019C            NAM$C_MAXRSS   = 00000080            NAM$V_WILD_VER = 00000003            
I_R0             00000164            NAM$C_MAXRSSLCL= 00000043            NAM$W_DID        0000002A            
I_R1             00000168            NAM$K_BLN        00000038            NAM$W_DID_NUM    0000002A            
I_R2             0000016C            NAM$K_BLN_DIRWC  00000050            NAM$W_DID_RVN    0000002E            
I_R3             00000170            NAM$L_DIRWCC1    00000040            NAM$W_DID_SEQ    0000002C            
I_R4             00000174            NAM$L_DIRWCC2    00000044            NAM$W_FID        00000024            
I_R5             00000178            NAM$L_DIRWCC3    00000048            NAM$W_FID_NUM    00000024            
I_R6             0000017C            NAM$L_DIRWCC4    0000004C            NAM$W_FID_RVN    00000028            
I_RAD50NAME      00000124            NAM$L_DWC        00000038            NAM$W_FID_SEQ    00000026            
I_RCVAST         00000198            NAM$L_ESA        0000000C            NAM$W_PRV_DID    0000003A            
I_RCVMAIL        0000013C            NAM$L_FNB        00000034            NAMFAO           000000B7 R     06   
I_RUNFLAGS       00000190            NAM$L_RLF        00000010            OUT              000003FA R     07   
I_SCRATCH        00000000            NAM$L_RSA        00000004            OUTFAO           000003E6 R     07   
I_STATE          0000014C            NAM$L_WCC        00000030            OUTPUT           000003F2 R     07   
I_TYPE           00000180            NAM$M_DIR_LVLS = 00E00000            OVLYFAO          00000222 R     06   
I_UIC            00000118            NAM$M_EXP_DEV  = 00000080            OVLYMSG          00000055 R     06   
I_WAIT           00000154            NAM$M_EXP_DIR  = 00000040            PCFAO            000000D8 R     06   
I_WAITSAVE       0000015C            NAM$M_EXP_NAME = 00000004            PIO$GT_DDSTRING  ********   X   07   
LIMFAO           00000284 R     06   NAM$M_EXP_TYPE = 00000002            PMDFAB           00000000 R     05   
LOAFAO           000001EC R     06   NAM$M_EXP_VER  = 00000001            PMDRAB           00000050 R     05   
LUNMSG           0000003C R     06   NAM$M_GRP_MBR  = 00080000            PRIFAO           000001C0 R     06   
LUTC_CR        = 00000005            NAM$M_HIGHVER  = 00008000            PSL_CC         = 00000000            
LUTC_DISK      = 00000002            NAM$M_LOWVER   = 00004000            PSL_CM         = 0000001F            
LUTC_LP        = 00000004            NAM$M_NODE     = 00020000            PSL_FPD        = 0000001B            
LUTC_RMS       = 00000000            NAM$M_QUOTED   = 00040000            PSL_FU         = 00000006            
LUTC_TAPE      = 00000003            NAM$M_WILDCARD = 00000100            PSL_TBIT       = 00000004            
LUTC_TRM       = 00000001            NAM$M_WILD_DIR = 00100000            QIOV_FILES     = 00000000            
LUTFAO           00000209 R     06   NAM$M_WILD_GRP = 01000000            QIO_FLAGS        0000001C            
LUTV_CTRLC     = 00000002            NAM$M_WILD_MBR = 02000000            QIO_FUNCTION     0000001A            
LUTV_CTRLO     = 00000000            NAM$M_WILD_NAME= 00000020            QIO_IOSB         0000000E            
LUTV_PRM       = 00000003            NAM$M_WILD_SFD1= 02000000            QIO_LUT          00000016            
LUTV_TI        = 00000001            NAM$M_WILD_SFD2= 04000000            QIO_SECONDBLK    0000001E            
LUT_CHAN         0000000C            NAM$M_WILD_TYPE= 00000010            QIO_SIZE         00000022            
LUT_CHAR         00000014            NAM$M_WILD_UFD = 01000000            RAB$B_BID        00000000            
LUT_CTRLC        00000034            NAM$M_WILD_VER = 00000008            RAB$B_BLN        00000001            
LUT_FLAGS        0000000A            NAM$S_DIR_LVLS = 00000003            RAB$B_KRF        00000035            
LUT_INFONAME     00000030            NAM$T_DVI        00000014            RAB$B_KSZ        00000034            
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 00:25:54   VAX-11 MACRO X0.3-11               Page  13
SYMBOL TABLE                                                                                                                     (2)

RAB$B_MBC        00000037            RAB$V_BIO      = 0000000B            RSX$_PMD       = 000680CA            
RAB$B_MBF        00000036            RAB$V_CCO      = 0000001F            RSX$_RCVMBXSIZ = 0000012C            
RAB$B_PSZ        00000034            RAB$V_CVT      = 0000001A            RSX$_RESERVED  = 00068004            
RAB$B_RAC        0000001E            RAB$V_EOF      = 00000008            RSX$_TBIT      = 0006803C            
RAB$B_ROP1       00000005            RAB$V_FDL      = 00000006            RSX$_TRAP      = 00068024            
RAB$B_ROP2       00000006            RAB$V_HSH      = 00000007            STKFAO           0000025F R     06   
RAB$B_ROP3       00000007            RAB$V_KGE      = 00000015            STKMSG           00000090 R     06   
RAB$B_TMO        0000001F            RAB$V_KGT      = 00000016            STSFAO           0000015B R     06   
RAB$C_BID      = 00000001            RAB$V_LOA      = 0000000D            SV_ASTLVL        00000005            
RAB$C_BLN        00000044            RAB$V_LOC      = 00000010            SV_DCL           00000002            
RAB$C_KEY      = 00000001            RAB$V_MAS      = 00000005            SV_FLOATAST      0000000A            
RAB$C_RFA      = 00000002            RAB$V_NLK      = 00000014            SV_FRESTORE      00000003            
RAB$C_SEQ      = 00000000            RAB$V_NXR      = 00000017            SV_NOAST         00000004            
RAB$K_BLN        00000044            RAB$V_PMT      = 0000001E            SV_PENDWAIT      00000006            
RAB$L_BKT        00000038            RAB$V_PPF_IND  = 0000000E            SV_PWRAST        00000009            
RAB$L_CTX        00000018            RAB$V_PPF_RAT  = 00000006            SV_RCVAST        00000008            
RAB$L_FAB        0000003C            RAB$V_PTA      = 0000001D            SV_RESTORE       00000000            
RAB$L_KBF        00000030            RAB$V_RAH      = 00000009            SV_TRANSLATE     00000001            
RAB$L_PBF        00000030            RAB$V_RLK      = 00000013            SV_WAIT          00000007            
RAB$L_RBF        00000028            RAB$V_RNE      = 00000018            SYS$CLOSE        ********  GX   07   
RAB$L_RFA0       00000010            RAB$V_RNF      = 0000001B            SYS$CONNECT      ********  GX   07   
RAB$L_RHB        0000002C            RAB$V_TMO      = 00000019            SYS$CREATE       ********  GX   07   
RAB$L_ROP        00000004            RAB$V_TNR      = 00000003            SYS$DISCONNECT   ********  GX   07   
RAB$L_STS        00000008            RAB$V_TPT      = 00000001            SYS$FAO          ********   X   07   
RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            SYS$GETMSG       ********   X   07   
RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            SYS$PUT          ********  GX   07   
RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            SYS$READEF       ********   X   07   
RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            S_PC             00000020            
RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            S_PS             00000024            
RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            S_R0             00000000            
RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            S_R1             00000004            
RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            S_R2             00000008            
RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            S_R3             0000000C            
RAB$M_KGE      = 00200000            REG1FAO          000000EE R     06   S_R4             00000010            
RAB$M_KGT      = 00400000            REG2FAO          00000125 R     06   S_R5             00000014            
RAB$M_LOA      = 00002000            RESULT           00000094 R     05   S_R6             00000018            
RAB$M_LOC      = 00010000            RSX$A_OVDEV      ********   X   07   S_TYPE           0000001C            
RAB$M_MAS      = 00000020            RSX$A_TIIDEV     ********   X   07   TRMMSG           00000000 R     06   
RAB$M_NLK      = 00100000            RSX$C_SUBSYSTEM= 00000006            UICFAO           00000193 R     06   
RAB$M_NXR      = 00800000            RSX$PMD          00000000 RG    07   W.BATT           00000006            
RAB$M_PMT      = 40000000            RSX$PRINTERR     ********   X   07   W.BFPD           0000000C            
RAB$M_PPF_IND  = 00004000            RSX$R50CVT1      ********   X   07   W.BHVR           00000004            
RAB$M_PPF_RAT  = 00003FC0            RSX$_ACCVIO    = 00068044            W.BLGH           00000010            
RAB$M_PTA      = 20000000            RSX$_BADLIBREF = 0006806C            W.BLPD           0000000E            
RAB$M_RAH      = 00000200            RSX$_BADSTACK  = 0006804C            W.BLVR           00000002            
RAB$M_RLK      = 00080000            RSX$_BREAK     = 0006800C            W.BNPD           0000000D            
RAB$M_RNE      = 01000000            RSX$_EXITSTATUS= 00068180            W.BOFF           0000000A            
RAB$M_RNF      = 08000000            RSX$_EXTERNABRT= 0006805C            W.BPCB           00000000            
RAB$M_TMO      = 02000000            RSX$_ILLINST   = 0006802C            W.BSIZ           00000008            
RAB$M_TNR      = 00000008            RSX$_INSFDYNMEM= 00068054            
RAB$M_TPT      = 00000002            RSX$_IOT       = 00068014            
RAB$M_UIF      = 00000010            RSX$_LIBNOTFND = 00068074            
RAB$M_ULK      = 00040000            RSX$_LOADERROR = 0006807C            
RAB$M_WAT      = 00020000            RSX$_NONRSXEMT = 0006801C            
RAB$M_WBH      = 00000400            RSX$_NOSUCHDEV = 000680C2            
RAB$S_PPF_RAT  = 00000008            RSX$_NOTSKIMG  = 00068064            
RAB$V_ASY      = 00000000            RSX$_ODDADDR   = 00068034            
RSXPMD          - PMD ROUTINE FOR RSX11M AME                     22-AUG-1978 00:25:54   VAX-11 MACRO X0.3-11               Page  14
PROGRAM SECTION SYNOPSIS                                                                                                         (2)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
..ABS.           00000042      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000050      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXDEF           000001F0      04     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RSXIMPURE        000000FF      05     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD    WRT LONG  
RSXPURE          0000032E      06     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD  NOWRT LONG  
RSXCODE          00000404      07     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
2832. BYTES LEFT IN FREE MEMORY POOL.
400. BYTES OF RECLAIMED MEMORY.
OBJ$:RSXPMD,LIS$:RSXPMD/-SP=SRC$:C,RSXPMD
92 MLB DIR RDS - 1083 GETS TO DEFINE 43 MACROS. 74 INTER. FILE WRITES. 
