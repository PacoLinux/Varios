PARSFN 0105MS, PARSE FILE NAME 	MACRO M1110  22-AUG-78 01:23  PAGE 7


      1						.TITLE	PARSFN 0105MS, PARSE FILE NAME DESCRIPTOR
						.IDENT	/0105MS/
      2					;
      3					; COPYRIGHT (C) 1977, DIGITAL EQUIPMENT CORP., MAYNARD MASS.
      4					; COPYRIGHT (C) 1975, DIGITAL EQUIPMENT CORP., MAYNARD MASS.
      5					; COPYRIGHT (C) 1973, DIGITAL EQUIPMENT CORP., MAYNARD MASS.
      6					; COPYRIGHT 1974, DIGITAL EQUIPMENT CORP., MAYNARD MASS.
      7
      8					; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
      9					; ON A SINGLE COMPUTER SYSTEM AND CAN BE COPIED (WITH INCLUSION
     10					; OF DEC'S COPYRIGHT NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
     11					; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
     12
     13					; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
     14					; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
     15					; EQUIPMENT CORPORATION.
     16
     17					; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY
     18					; OF ITS SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
     19					;
     20					; PETER H. LIPMAN
     21					; MODIFIED BY SHAO-SUN CHIEN	28-JUN-74
     22					; MODIFIED BY E. H. MARISON	20-DEC-77 CALL .VRCVT INSTEAD OF .ODCVT
     23					;+
     24					; PARSE FILE NAME DESCRIPTOR - CALLED BY PARSE TO ESTABLISH THE
     25					; FILE NAME AND VERSION NUMBER ENTRIES OF FNB.
     26					;
     27					; INPUTS:
     28					;	R0=FDB ADDRESS
     29					;	R1=ADDRESS OF FILE NAME BLOCK
     30					;	R2=POINTER TO DEV, DIR, AND NAME DESCRIPTORS
     31					;	R3=DEFAULT FILE NAME BLOCK OR ZERO IF NONE SPECIFIED
     32					; OUTPUTS:
     33					;	C=0 IF SUCCESSFUL, C=1 IF ERROR, F.ERR SET TO REASON
     34					;	ALL REGISTERS PRESERVED.
     35					;-
     36	000000				.PRSFN::.SAVR1
     37	000004	012760 	000001 	000052 		MOV	#1,F.ERR(R0)
     38	000012	010346 			..PSFN::MOV	R3,-(SP)
     39	000014	005702 				TST	R2		;NO DESCRIPTOR POINTER?
     40	000016	001404 				BEQ	10$		;BRANCH IF YES
     41	000020	016203 	000012 			MOV	N.FNPT(R2),R3	;R3=ADDRESS OF STRING
     42	000024	016202 	000010 			MOV	N.FNSZ(R2),R2	;R2=SIZE OF STRING
     43	000030	010346 			10$:	MOV	R3,-(SP)	;SAVE STRING POINTER
     44	000032	010246 				MOV	R2,-(SP)	;SAVE STRING SIZE
     45
     46	000034	003570 			PARS1:	BLE	PRSDF		;BRANCH IF STRING IS NOW NULL
     47	000036	112304 			4$:	MOVB	(R3)+,R4	;GET NEXT CHARACTER OF STRING
     48	000040	022704 	000056 			CMP	#'.,R4		;IS IT A DOT?
     49	000044	001445 				BEQ	DOT		;BRANCH IF YES
     50	000046	022704 	000073 			CMP	#';,R4		;IS IT A SEMICOLON?
     51	000052	001477 				BEQ	SEMI		;BRANCH IF IT IS
     52	000054	077210 				SOB	R2,4$		;GO LOOK AT NEXT CHARACTER
PARSFN 0105MS, PARSE FILE NAME 	MACRO M1110  22-AUG-78 01:23  PAGE 8


     54					; NO MORE CHARACTERS IN STRING.  THE STRING PASSED OVER IS A
     55					; FILE NAME IF WE HAVN'T ALREADY SEEN ONE; A FILE TYPE IF WE HAVN'T
     56					; SEEN THAT, OR A VERSION.
     57	000056	005203 				INC	R3		;POSITION POINTER AS IF THERE WERE
     58									;A DELIMITER ON THE END.
     59					; HAVE WE ALREADY PASSED THE FILE NAME?
     60	000060	032761 	140004 	000020 		BIT	#NB.NAM!NB.DOT!NB.SMI,N.STAT(R1)
     61	000066	001445 				BEQ	FNAME		;BRANCH IF NO.
     62					; HAVE WE ALREADY PASSED THE FILE TYPE?
     63	000070	032761 	040002 	000020 		BIT	#NB.TYP!NB.SMI,N.STAT(R1)
     64	000076	001474 				BEQ	FTYPE		;BRANCH IF NO
     65					; THE FIELD JUST SCANNED IS A VERSION NUMBER
     66	000100	016605 	000002 		VERSN:	MOV	2(SP),R5	;R5=ADDRESS OF STRING
     67	000104	010304 				MOV	R3,R4		;CALCULATE R4=SIZE OF STRING
     68	000106	160504 				SUB	R5,R4
     69	000110	005304 				DEC	R4
     70	000112	122715 	000052 			CMPB	#'*,@R5		;WILD CARD VERSION?
     71	000116	001407 				BEQ	10$
     72	000120	010103 				MOV	R1,R3
     73	000122	062703 	000016 			ADD	#N.FVER,R3	;R3=ADDRESS TO RETURN NUMBER IN
     74	000126					CALL	.VRCVT		;CONVERT THE STRING TO A NUMBER
     75	000132	103404 				BCS	15$
     76	000134	000530 				BR	PRSDF		;ALL DONE WITH FILE NAME-
     77									;FILL IN DEFAULTS
     78	000136	022704 	000001 		10$:	CMP	#1,R4		;* SEEN, ONLY 1 CHAR?
     79	000142	001402 				BEQ	20$		;YES, IT'S OK
     80	000144	000167 	000360 		15$:	JMP	PRSBX		;SYNTAX ERROR
     81	000150	052761 	000010 	000020 	20$:	BIS	#NB.SVR,N.STAT(R1)
     82	000156	000517 				BR	PRSDF
     83					; FOUND DOT, NAME IN FRONT, ALSO NOTE THAT A TYPE WAS FOUND.  IF NULL
     84					; THEN THAT'S DIFFERENT FROM NULL AND NO DOT.  (I.E. NULL VS.  NOT SPECIFIED)
     85
     86	000160	032761 	040000 	000020 	DOT:	BIT	#NB.SMI,N.STAT(R1) ;IS THIS DOT PART OF VERSION NO.?
     87	000166	001402 				BEQ	10$		;BRANCH IF NO
     88	000170	005203 				INC	R3		;ASSUME DECIMAL VERSION NUMBER
     89	000172	000742 				BR	VERSN		;DOT IS PART OF THE STRING
     90	000174	052761 	100000 	000020 	10$:	BIS	#NB.DOT,N.STAT(R1) ;NOTE THAT DOT WAS SEEN
     91
     92	000202	010304 			FNAME:	MOV	R3,R4		;CALCULATE SIZE OF STRING
     93	000204	166604 	000002 			SUB	2(SP),R4	;TO SEE IF IT'S NULL
     94	000210	005304 				DEC	R4
     95	000212	001412 				BEQ	10$		;BRANCH IF IT IS NULL
     96	000214	052761 	000004 	000020 		BIS	#NB.NAM,N.STAT(R1) ;WE HAVE FOUND A FILE NAME
     97	000222	122776 	000052 	000002 		CMPB	#'*,@2(SP)	;WILD CARD IN FIRST CHARACTER?
     98	000230	001003 				BNE	10$
     99	000232	052761 	000040 	000020 		BIS	#NB.SNM,N.STAT(R1) ;INDICATE THAT A * WAS SEEN
    100	000240	012704 	000006 		10$:	MOV	#N.FNAM,R4	;R4=OFFSET FOR FILE NAME
    101	000244	012705 	000011 			MOV	#9.,R5		;R5=MAX SIZE OF FILE NAME
    102	000250	000432 				BR	PRSMV
PARSFN 0105MS, PARSE FILE NAME 	MACRO M1110  22-AUG-78 01:23  PAGE 9


    104					;
    105					; FOUND A SEMICOLON, THE PRECEEDING STRING IS A FILE NAME
    106					; IF NO FILE NAME WAS SEEN OR IT IS A FILE TYPE.
    107	000252	052761 	040001 	000020 	SEMI:	BIS	#NB.SMI!NB.VER,N.STAT(R1) ;INDICATE THAT SEMI WAS FOUND
    108	000260	032761 	100004 	000020 		BIT	#NB.NAM!NB.DOT,N.STAT(R1)  ;PAST A FILE NAME YET?
    109	000266	001745 				BEQ	FNAME		;BRANCH IF NO,THIS IS A FILE NAME
    110					; THIS IS A FILE TYPE STRING
    111	000270	010304 			FTYPE:	MOV	R3,R4		;CALCULATE STRING SIZE
    112	000272	166604 	000002 			SUB	2(SP),R4
    113	000276	005304 				DEC	R4		;TO SEE IF IT'S NULL
    114	000300	001412 				BEQ	10$		;BRANCH IF IT IS
    115	000302	052761 	000002 	000020 		BIS	#NB.TYP,N.STAT(R1) ;NOTE THAT WE SAW A FILE TYPE
    116	000310	122776 	000052 	000002 		CMPB	#'*,@2(SP)
    117	000316	001003 				BNE	10$
    118	000320	052761 	000020 	000020 		BIS	#NB.STP,N.STAT(R1) ;NOTE WILD CARD TYPE
    119	000326	012704 	000014 		10$:	MOV	#N.FTYP,R4	;R4=OFFSET FOR FILE TYPE STRING
    120	000332	012705 	000003 			MOV	#3,R5		;R5=MAX SIZE STRING
    121					; MOVE FILE NAME OR TYPE INTO ITS PLACE IN THE FILE NAME BLOCK
    122					; R1=FILE NAME BLOCK ADDRESS, R3=POINTER TO TERMINATING CHARACTER
    123					; R4=OFFSET IN FILE NAME BLOCK TO STORE STRING, R5=MAX NO.  OF BYTES IN
    124					; STRING.  0(SP)=PREVIOUS SIZE OF STRING, 2(SP)=STRING POINTER TO
    125					; BEGINNING OF NAME
    126
    127	000336	016602 	000002 		PRSMV:	MOV	2(SP),R2	;R2=PTR TO BEGINNING OF STRING
    128	000342	010366 	000002 			MOV	R3,2(SP)	;UPDATE STRING POINTER
    129	000346	160203 				SUB	R2,R3		;R3=NEW POINTER-OLD POINTER
    130	000350	160316 				SUB	R3,@SP		;UPDATE BYTE REMAINING IN STRING
    131	000352	005303 				DEC	R3		;R3=SIZE OF STRING,EXCLUDING DELIMITER
    132	000354	001414 				BEQ	10$		;BRANCH IF STRING IS NULL
    133	000356	122712 	000052 			CMPB	#'*,@R2		;DOES NAME START WITH WILD CARD?
    134	000362	001003 				BNE	2$		;BRANCH IF NO
    135	000364	022703 	000001 			CMP	#1,R3		;MUST BE THE ONLY CHAR
    136	000370	001406 				BEQ	10$		;IT IS,  IF NOT, ILL RAD50 CHAR
    137	000372	020503 			2$:	CMP	R5,R3		;SIZE LEGAL?
    138	000374	002455 				BLT	PRSBX		;BRANCH IF TOO BIG
    139	000376	060104 				ADD	R1,R4		;R4=ADDRESS TO MOVE STRING TO
    140	000400					CALL	..SGR5		;CONVERT ASCII STRIN TO RAD50
    141	000404	103451 				BCS	PRSBX		;BRANCH IF SYNTAX ERROR
    142					; DONE PUTTING NAME IN NAME BLOCK, GO DO THE NEXT PART OF THE STRING
    143	000406	016603 	000002 		10$:	MOV	2(SP),R3	;R3=ADDRESS OF STRING
    144	000412	011602 				MOV	@SP,R2		;R2=REMAINING SIZE OF STRING
    145	000414	000607 				BR	PARS1
PARSFN 0105MS, PARSE FILE NAME 	MACRO M1110  22-AUG-78 01:23  PAGE 10


    147					;
    148					; STRING PARSE IS COMPLETE-SET UP DEFAULT FIELDS.
    149	000416	062706 	000004 		PRSDF:	ADD	#4,SP		;GET RID OF STRING PTR AND SIZE
    150	000422	016103 	000020 		PRSDF1:	MOV	N.STAT(R1),R3	;R3 = STATUS BITS
    151	000426	032703 	100000 			BIT	#NB.DOT,R3	;IF DOT WAS SEEN
    152	000432	001403 				BEQ	2$
    153	000434	052761 	000002 	000020 		BIS	#NB.TYP,N.STAT(R1) ;INDICATE EXPLICIT TYPE FOUND
    154	000442	012602 			2$:	MOV	(SP)+,R2	;R2=DEFAULT NAME BLOCK ADDRESS
    155	000444	001430 				BEQ	8$		;BRANCH IF NO DEFAULT NAME BLOCK
    156	000446	032703 	000004 			BIT	#NB.NAM,R3 	;WAS A FILE NAME SPECIFIED?
    157	000452	001011 				BNE	4$		;BRANCH IF YES-NO DEFAULT NEEDED
    158	000454	016261 	000006 	000006 		MOV	N.FNAM(R2),N.FNAM(R1) ;MOV DEFAULT NAME FIELD INTO
    159	000462	016261 	000010 	000010 		MOV	N.FNAM+2(R2),N.FNAM+2(R1) ;FILE NAME BLOCK
    160	000470	016261 	000012 	000012 		MOV	N.FNAM+4(R2),N.FNAM+4(R1)
    161					; IF AN EXPLICIT FILE TYPE WAS FOUND OR IF A DOT WAS SEEN THEN
    162					; ASSUME FILE TYPE WAS EXPLICIT AND DON'T USE DEFAULT.
    163					; THIS ALLOWS   FILE.   TO MEAN AN EXPLICIT NULL TYPE.
    164	000476	032703 	100002 		4$:	BIT	#NB.TYP!NB.DOT,R3 ;WAS A FILE TYPE SPECIFIED?
    165	000502	001003 				BNE	6$		;BRANCH IF YES-NO DEFAULT NEEDED
    166	000504	016261 	000014 	000014 		MOV	N.FTYP(R2),N.FTYP(R1) ;MOVE THE DEFAULT FILE TYPE
    167	000512	032703 	040001 		6$:	BIT	#NB.VER!NB.SMI,R3  ;WAS A VERSION SPECIFIED?
    168	000516	001003 				BNE	8$		;BRANCH IF YES-
    169	000520	016261 	000016 	000016 		MOV	N.FVER(R2),N.FVER(R1) ;MOVE THE DEFAULT VERSION NUMBER
    170	000526				8$:
    171	000526					RETURN
    172
    173					; ERROR EXIT
    174	000530	062706 	000006 		PRSBX:	ADD	#6,SP
    175	000534	112760 	177712 	000052 		MOVB	#IE.BNM,F.ERR(R0)
    176	000542	000261 				SEC
    177	000544					RETURN
    178					;
    179					;
    180	000546					$END	PARSFN
    181					;
    182		000001 				.END
PARSFN 0105MS, PARSE FILE NAME 	MACRO M1110  22-AUG-78 01:23  PAGE 10-1
SYMBOL TABLE

A.BFSR= 000004   	FD.RAH= 000001   	F.RACC= 000016   	IE.EXP= 177665   	IE.RER= 177740
A.DFBC= 000100   	FD.RAN= 000002   	F.RATT= 000001   	IE.FEX= 177717   	IE.RNM= 177715
A.DFDR= 000050   	FD.REC= 000001   	F.RCNM= 000034   	IE.FHE= 177705   	IE.RSU= 177757
A.DFUI= 000102   	FD.RWM= 000001   	F.RCTL= 000017   	IE.FIX= 177767   	IE.SDP= 177635
A.DPB = 000014   	FD.SDI= 000020   	F.RSIZ= 000002   	IE.FLN= 177657   	IE.SNC= 177735
A.EFSR= 000006   	FD.SPL= 000200   	F.RTYP= 000000   	IE.FOP= 177713   	IE.SPC= 177772
A.FIPR= 000012   	FD.SQD= 000040   	F.SEQN= 000100   	IE.HFU= 177744   	IE.SQC= 177734
A.IOST= 000044   	FD.TTY= 000004   	F.SPDV= 000072   	IE.HWR= 177772   	IE.SRE= 177762
A.OWUI= 000010   	FD.WBH= 000002   	F.SPUN= 000074   	IE.IBS= 177647   	IE.STK= 177706
BD.FRE= 000001   	FD.WRT= 000001   	F.STBK= 000036   	IE.IDU= 177644   	IE.TCH= 177765
BL.SZ = 000013   	FF.CHR= 000005   	F.UNIT= 000136   	IE.IEF= 177637   	IE.TMM= 177671
B.BBFS= 000010   	FF.NV = 000003   	F.URBD= 000020   	IE.IES= 177656   	IE.TMO= 177666
B.BFST= 000015   	FF.POE= 000002   	F.VBN = 000064   	IE.IFC= 177776   	IE.ULK= 177653
B.NXBD= 000012   	FF.RWD= 000001   	F.VBSZ= 000060   	IE.IFU= 177747   	IE.ULN= 177773
B.VBN = 000004   	FF.RWF= 000006   	HA.CHU= 000003   	IE.ILL= 177726   	IE.UNS= 177774
CH.AND= 000001   	FF.SPC= 000004   	HA.FP = 000002   	IE.ILU= 177640   	IE.UPN= 177777
DIRTYP= 015172   	FNAME   000202R     002	HA.NAM= 000005   	IE.ILV= 177755   	IE.VER= 177774
DOT     000160R     002	FO.APD= 000106   	HA.TYP= 000006   	IE.INS= 177776   	IE.WAC= 177743
D.DFDV= 000024   	FO.MFY= 000002   	HA.UAT= 000004   	IE.IOP= 177655   	IE.WAT= 177741
D.DFID= 000016   	FO.RD = 000001   	HA.UI = 000001   	IE.IPR= 177641   	IE.WCK= 177652
D.DFUN= 000026   	FO.UPD= 000006   	HA.VER= 000007   	IE.ISQ= 177703   	IE.WER= 177737
FA.APD= 000100   	FO.WRT= 000016   	IE.ABO= 177761   	IE.ITI= 177643   	IE.WLK= 177764
FA.CRE= 000010   	FTYPE   000270R     002	IE.ACT= 177771   	IE.ITP= 177650   	IE.WOV= 177653
FA.DLK= 001000   	F.ACTL= 000076   	IE.ADP= 177636   	IE.ITS= 177770   	IE.2DV= 177720
FA.ENB= 100000   	F.ALOC= 000040   	IE.ALC= 177654   	IE.IUI= 177645   	IO.ACE= 007400
FA.EXC= 002000   	F.BBFS= 000062   	IE.ALG= 177654   	IE.LCK= 177745   	IO.ACR= 006400
FA.EXT= 000004   	F.BDB = 000070   	IE.ALN= 177736   	IE.LNL= 177646   	IO.ACW= 007000
FA.NSP= 000100   	F.BGBC= 000057   	IE.AST= 177660   	IE.MAP= 177657   	IO.APC= 014000
FA.POS= 010000   	F.BKDN= 000026   	IE.BAD= 177777   	IE.MOD= 177753   	IO.APV= 014010
FA.RD = 000001   	F.BKDS= 000020   	IE.BBE= 177710   	IE.NBF= 177731   	IO.ATT= 001400
FA.RWD= 004000   	F.BKEF= 000050   	IE.BCC= 177676   	IE.NBK= 177727   	IO.CLN= 003400
FA.SEQ= 040000   	F.BKP1= 000051   	IE.BDI= 177714   	IE.NDR= 177670   	IO.CRE= 012000
FA.SHR= 000040   	F.BKST= 000024   	IE.BDR= 177716   	IE.NFI= 177704   	IO.DAC= 010000
FA.TMP= 000020   	F.BKVB= 000064   	IE.BDV= 177711   	IE.NFW= 177673   	IO.DEL= 012400
FA.WCK= 020000   	F.CHR = 000075   	IE.BHD= 177700   	IE.NLK= 177661   	IO.DET= 002000
FA.WRT= 000002   	F.CNTG= 000034   	IE.BLB= 177672   	IE.NLN= 177733   	IO.ENA= 006000
FCSEFN= 000040   	F.DFNB= 000046   	IE.BLK= 177754   	IE.NNC= 177663   	IO.EXT= 011400
FD.BLK= 000010   	F.DSPT= 000044   	IE.BNM= 177712   	IE.NNL= 177662   	IO.FNA= 004400
FD.CCL= 000002   	F.DVNM= 000134   	IE.BTF= 177664   	IE.NNN= 177674   	IO.KIL= 000012
FD.COM= 020000   	F.EFBK= 000010   	IE.BTP= 177725   	IE.NOD= 177751   	IO.LOV= 001010
FD.CR = 000002   	F.EFN = 000050   	IE.BVR= 177701   	IE.NSF= 177746   	IO.LTK= 000050
FD.DIR= 000010   	F.EOBB= 000032   	IE.BYT= 177755   	IE.NST= 177660   	IO.RAT= 013000
FD.DVR= 000020   	F.ERR = 000052   	IE.CKP= 177766   	IE.NSW= 177756   	IO.RDN= 000022
FD.EFB= 000004   	F.FACC= 000043   	IE.CKS= 177742   	IE.NVR= 177652   	IO.RLB= 001000
FD.EF1= 000010   	F.FFBY= 000014   	IE.CLO= 177732   	IE.NVW= 177651   	IO.RNA= 005400
FD.EOF= 000002   	F.FNAM= 000110   	IE.CNR= 177667   	IE.OFL= 177677   	IO.RTK= 000060
FD.FTN= 000001   	F.FNB = 000102   	IE.CON= 177752   	IE.ONP= 177773   	IO.RVB= 010400
FD.F11= 040000   	F.FTYP= 000116   	IE.DAA= 177770   	IE.OVR= 177756   	IO.SET= 000030
FD.INS= 000010   	F.FVER= 000120   	IE.DAO= 177763   	IE.PES= 177655   	IO.ULK= 005000
FD.INV= 000100   	F.HIBK= 000004   	IE.DFU= 177750   	IE.PNS= 177642   	IO.UNL= 000042
FD.ISP= 002000   	F.LUN = 000042   	IE.DNA= 177771   	IE.PRI= 177760   	IO.WAT= 013400
FD.MNT= 100000   	F.MBCT= 000054   	IE.DNR= 177775   	IE.PTS= 177775   	IO.WLB= 000400
FD.OER= 000040   	F.MBC1= 000055   	IE.DUN= 177767   	IE.RAC= 177724   	IO.WVB= 011000
FD.OSP= 004000   	F.MBFG= 000056   	IE.DUP= 177707   	IE.RAT= 177723   	IQ.Q  = 000002
FD.PLC= 000004   	F.NRBD= 000024   	IE.EOF= 177766   	IE.RBG= 177730   	IQ.S  = 000004
FD.PRN= 000004   	F.NREC= 000030   	IE.EOT= 177702   	IE.RBS= 177761   	IQ.UMD= 000004
FD.PSE= 010000   	F.OVBS= 000030   	IE.EOV= 177765   	IE.RCN= 177722   	IQ.X  = 000001
PARSFN 0105MS, PARSE FILE NAME 	MACRO M1110  22-AUG-78 01:23  PAGE 10-2
SYMBOL TABLE

IS.BV = 000005   	NB.SD1= 000400   	N.FVER= 000016   	R$$OPF= 000000   	S.FNTY= 000004
IS.CC = 001401   	NB.SD2= 001000   	N.NEXT= 000022   	R$$RSL= 000001   	S.FSR2= 000104
IS.CLR= 000000   	NB.SMI= 040000   	N.STAT= 000020   	R$$SEQ= 000000   	S.FTYP= 000002
IS.CR = 006401   	NB.SNM= 000040   	N.UNIT= 000034   	R$$SPL= 000000   	S.NFEN= 000020
IS.EOT= 002001   	NB.STP= 000020   	PARS1   000034R     002	R$$VMS= 000001   	VERSN   000100R     002
IS.ESC= 015401   	NB.SVR= 000010   	PP.SEP= 000002   	R$$11M= 000001   	WI.DLK= 000002
IS.ESQ= 115401   	NB.TYP= 000002   	PP.ZER= 000001   	R.FIX = 000001   	WI.LCK= 000001
IS.PES= 100001   	NB.VER= 000001   	PRSBX   000530R     002	R.SEQ = 000003   	WI.SPL= 000020
IS.PND= 000000   	N.DID = 000024   	PRSDF   000416R     002	R.VAR = 000002   	WI.UPD= 000100
IS.RDD= 000002   	N.DRPT= 000006   	PRSDF1  000422R     002	SEMI    000252R     002	$$MSG = 000000
IS.SET= 000002   	N.DRSZ= 000004   	PRSMV   000336R     002	SYDEV = 054523   	.PRSFN  000000RG    002
IS.SPD= 000002   	N.DVNM= 000032   	P$$ARS= 000001   	SYUNIT= 000000   	.SAVR1= ****** GX
IS.SUC= 000001   	N.DVPT= 000002   	R$$ANI= 000001   	S.BFHD= 000020   	.VRCVT= ****** GX
IS.TAB= 004401   	N.DVSZ= 000000   	R$$BBF= 000000   	S.FATT= 000016   	..PSFN  000012RG    002
IS.TMO= 000002   	N.FID = 000000   	R$$DPB= 000001   	S.FDB = 000140   	..SGR5= ****** GX
NB.DEV= 000200   	N.FNAM= 000006   	R$$EIS= 000001   	S.FNAM= 000006   	...CTL= 000001
NB.DIR= 000100   	N.FNPT= 000012   	R$$LCL= 000001   	S.FNB = 000036   	...GBL= 000000
NB.DOT= 100000   	N.FNSZ= 000010   	R$$MUL= 000000   	S.FNBW= 000017   	...TPC= 000030
NB.NAM= 000004   	N.FTYP= 000014

. ABS.	000000	   000
      	000000	   001
$$RESL	000546	   002
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  4783 WORDS  ( 19 PAGES)
DYNAMIC MEMORY:  5940 WORDS  ( 22 PAGES)
ELAPSED TIME:  00:00:32
OBJ$:PARSFN,LIS$:PARSFN/-SP=SRC$:FCSPRE,PARSFN
