.CSI2	 VAX/VMS CSI2	MACRO M1110  22-AUG-78 01:25
TABLE OF CONTENTS

     3-   60	.CSI2 - RETURN NEXT COMMAND FILE SPECIFICATION
     4-  140	SWITCH - PROCESS SWITCHES
     5-  303	DELSCN - SCAN STRING FOR DELIMETER MATCH
     6-  382	WILDCK - CHECK FOR FILE NAME WILDCARD SYNTAX
     7-  407	SWMAT - MATCH STRING NAME TO TABLE DATA
     8-  478	- DIDVSN - SCAN DEVICE AND DIRECTORY NAME
.CSI2	 VAX/VMS CSI2	MACRO M1110  22-AUG-78 01:25  PAGE 1


      1						.MCALL	CSI$
      2	000000					CSI$
      3					;
      4					; REMOVE COMMENT TO ALLOW NODE NAMES AS SYNTACTICLY PART OF DEVICE NAMES.
      5					;
      6					;	.NODES.=1
      7					;
      8					;
      9		000002 			C.BFLN=C.CMLD
     10		000004 			C.BFAD=C.CMLD+2
     11		000016 			C.FNLN=C.FILD
     12		000020 			C.FNAD=C.FILD+2
     13		000006 			C.DVLN=C.DEVD
     14		000010 			C.DVAD=C.DEVD+2
     15		000012 			C.DILN=C.DIRD
     16		000014 			C.DIAD=C.DIRD+2
     17					;
     18					;
     19		000032 			C.IDVA=	32	;INPUT LAST DEVICE NAME FOUND PTR
     20		000030 			C.IDVL=	30	;INPUT LAST DEVICE NAME FOUND LENGTH
     21		000036 			C.ODVA=	36	;OUTPUT LAST DEVICE NAME FOUND PTR
     22		000034 			C.ODVL=	34	;OUTPUT LAST DEVICE FOUND LENGTH
     23		000042 			C.IDIA=	42	;INPUT LAST DIR INFO PTR FOUND
     24		000040 			C.IDIL=	40	;INPUT LAST DIR INFO FOUND LENGTH
     25		000046 			C.ODIA=	46	;OUTPUT LAST DIR INFO FOUND PTR
     26		000044 			C.ODIL=	44	;OUTPUT LAST DIR INFO FOUND LENGTH
     27		000050 			C.ISTR=	50	;INPUT NEXT STRING SECTION ADDR
     28		000052 			C.OSTR=	52	;OUTPUT NEXT STRING SECTION ADDR
     29					;
     30					;	COMMAND STRING DELIMITERS
     31					;
     32		000072 			COLON=	72	;	:
     33		000054 			COMMA=	54	;	,
     34		000057 			SLASH=	57	;	/
     35		000075 			EQUAL=	75	;	=
     36		000073 			SEMIC=	73	;	;
     37		000135 			RBRAC=	135	;	]
     38		000133 			LBRAC=	133	;	[
     39		000137 			USCORE=	137	;	_
     40		000074 			LPBRAC=	74	;	<
     41		000076 			RPBRAC=	76	;	>
     42					;
     43					;	CHARS DELETED FROM COMMAND STRINGS
     44					;
     45		000040 			BLANK=	40
     46		000011 			TAB=	11
     47		000000 			NULL=	0
     48		000177 			RUBOUT=	177
     49					;
     50					;	OTHER RELEVANT CHARS
     51					;
     52		000101 			CHARA=	101	;	A
     53		000132 			CHARZ=	132	;	Z
     54		000060 			CHAR0=	60	;	0
     55		000071 			CHAR9=	71	;	9
     56		000056 			DOT=	56	;	.
     57		000052 			STAR=	52	;	*
.CSI2	 VAX/VMS CSI2	MACRO M1110  22-AUG-78 01:25  PAGE 1-1


     58		000055 			MINUS=	55	;	-
     59		000053 			PLUS=	53	;	+
     60		000044 			DOLLAR=	44	;	$
     61					;
     62					;
     63					;
.CSI2	 VAX/VMS CSI2	MACRO M1110  22-AUG-78 01:25  PAGE 2


      1						.TITLE	.CSI2	 VAX/VMS CSI2
      2						.IDENT	/01/
      3
      4					;
      5					; COPYRIGHT (C) 1973,1976,1977
      6					; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
      7					;
      8					; THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ONLY ON A
      9					; SINGLE COMPUTER SYSTEM AND MAY  BE  COPIED   ONLY  WITH  THE
     10					; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE,  OR
     11					; ANY OTHER COPIES THEREOF, MAY NOT BE PROVIDED  OR  OTHERWISE
     12					; MADE AVAILABLE TO ANY OTHER PERSON   EXCEPT FOR  USE ON SUCH
     13					; SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE  TERMS.  TITLE
     14					; TO AND OWNERSHIP OF THE SOFTWARE SHALL AT ALL  TIMES  REMAIN
     15					; IN DEC.
     16					;
     17					; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
     18					; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
     19					; EQUIPMENT CORPORATION.
     20					;
     21					; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
     22					; ITS SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
     23					;
     24					;++
     25					; FACILITY:
     26					;
     27					;	VAX/VMS RSX11M SUPPORT ROUTINES
     28					;
     29					; ABSTRACT:
     30					;
     31					;	THIS MODULE REPLACES THE TRADITIONAL CSI1 FOR RSX11M TASKS
     32					;	RUNNING UNDER VAX/VMS. THIS MODULE PARSES VAX/VMS FILE SPECS.
     33					;
     34					; AUTHOR:
     35					;
     36					;	R.HEINEN FOR VAX/VMS FROM A MAROTTO'S AND C. D'ELIA'S RSX11M CSI
     37					;--
     38					;
     39					; LOCAL STORAGE
     40					;
     41
     42	000000					.PSECT	.CSID
     43						.MCALL	GTSK$S
     44					;
     45					; LOCAL DEFINITIONS
     46					;
     47		000001 			ASVAL=1					;SWITCH VALUE TABLE ASCII CVT CODE
     48		000003 			DECVAL=3				;SWITCH TABLE VALUE FOR DECIMAL CONVERT
     49					;
     50					; DEVICE AND DIRECTORY PARSE CONTROL STRINGS
     51					;
     52	000000	   030 	   072 	   000 	DVVECT:	.BYTE	C.IDVL,COLON,0,0,CS.DVF,C.DVLN,0,COLON
	000003	   000 	   004 	   006
	000006	   000 	   072
     53	000010	   040 	   135 	   001 	DIVECT:	.BYTE	C.IDIL,RBRAC,1,0,CS.DIF,C.DILN,1,RBRAC
	000013	   000 	   002 	   012
	000016	   001 	   135
.CSI2	 VAX/VMS CSI2	MACRO M1110  22-AUG-78 01:25  PAGE 2-1


     54					;
     55					; TABLE OF DELIMETERS
     56					;
     57	000020	   075 				.ASCII	/=/
     58	000021	   075 	   072 	   133 	DELSTR:	.ASCII	.=:[]<>/,.
	000024	   135 	   074 	   076
	000027	   057 	   054
.CSI2	 VAX/VMS CSI2	MACRO M1110  22-AUG-78 01:25  PAGE 3
.CSI2 - RETURN NEXT COMMAND FILE SPECIFICATION

     60						.SBTTL	.CSI2 - RETURN NEXT COMMAND FILE SPECIFICATION
     61
     62	000000					.PSECT	.CSII
     63
     64					;++
     65					; .CSI2 - RETURN NEXT COMMAND FILE SPECIFICATION
     66					;
     67					; FUNCTIONAL DESCRIPTION:
     68					;
     69					; THIS ROUTINE FILLS A DATA BASE AS REQUESTED TO REFLECT THE NEXT
     70					; FILE SPECIFICATION IN A COMMAND STRING. THE STRING AND DATABASE
     71					; HAVE ALREADY BEEN PROCESSED BY ".CSI1".
     72					;
     73					; INPUTS:
     74					;
     75					;	R0 = ADDRESS OF THE CSI REQUEST CONTROL BLOCK
     76					;
     77					; OUTPUTS:
     78					;
     79					;	C-BIT SET ON ERROR, CLEAR ON SUCCESS
     80					;
     81					;	R0 = ADDRESS OF THE CONTROL BLOCK
     82					;--
     83	000000				.CSI2::					;
     84	000000	004567 	000000G			JSR	R5,.SAVR1		; SAVE REGISTERS
     85	000004	142760 	177737 	000001 		BICB	#^C<CS.EQU>,C.STAT(R0); CLEAR MOST STATUS BITS
     86	000012	005060 	000024 			CLR	C.MKW1(R0)		;CLEAR SWITCHES MASK
     87	000016	005060 	000026 			CLR	C.MKW2(R0)
     88	000022	005001 				CLR	R1			;SET INPUT SWITCHES
     89	000024	016002 	000050 			MOV	C.ISTR(R0),R2		;GET INPUT STRING ADDR
     90	000030	122710 	000001 			CMPB	#CS.INP,(R0)		;BRANCH IF INPUT REQUEST
     91	000034	001435 				BEQ	20$
     92	000036	122710 	000002 			CMPB	#CS.OUT,(R0)		;BRANCH IF OUTPUT REQUEST
     93	000042	001402 				BEQ	10$
     94	000044	000261 				SEC				;SET ERROR
     95	000046	000207 				RTS	PC			;EXIT
     96	000050	005201 			10$:	INC	R1			;SET OUTPUT SWITCH
     97	000052	016002 	000052 			MOV	C.OSTR(R0),R2		;GET OUTPUT STRING ADDR
     98					;
     99					; PICK UP COMMAND PARSE STYLE FLAG
    100					;
    101	000056	162706 	000040 			SUB	#32.,SP			;
    102	000062	010603 				MOV	SP,R3			; SET ADDRESS
    103	000064					GTSK$S	R3			;
    104	000074	026327 	000010 	105633 		CMP	8.(R3),#^RVMS		; VMS?
    105	000102	001010 				BNE	15$			; IF NEQ THEN NO
    106	000104	026327 	000012 	050712 		CMP	10.(R3),#^RMCR		; MCR?
    107	000112	001404 				BEQ	15$			; IF NE THEN NO
    108	000114	005060 	000034 			CLR	C.ODVL(R0)		; SET NO EXPLICIT DEVICE
    109	000120	005060 	000044 			CLR	C.ODIL(R0)		; AND NO DIRECTORY
    110	000124	062706 	000040 		15$:	ADD	#32.,SP			; REMOVE FORM STACK
    111	000130	004767 	000630 		20$:	JSR	PC,DELSCN		;SCAN TO A DELIM
    112	000134	012703 	000000'			MOV	#DVVECT,R3		;ADDR DEV INFO CTL VECT
    113	000140	004767 	001100 			JSR	PC,DIDVSN		;DO DEV PROCESSING
    114	000144	012703 	000010'			MOV	#DIVECT,R3		;ADDR DIR INFO CTL VECT
    115	000150	004767 	001070 			JSR	PC,DIDVSN		;DO DIR PROCESSING
    116	000154	010260 	000020 			MOV	R2,C.FNAD(R0)		;SET FILE NAME ADDR
.CSI2	 VAX/VMS CSI2	MACRO M1110  22-AUG-78 01:25  PAGE 3-1
.CSI2 - RETURN NEXT COMMAND FILE SPECIFICATION

    117	000160	010403 				MOV	R4,R3
    118	000162	160203 				SUB	R2,R3			;CALC FILE NAME LEN
    119	000164	010360 	000016 			MOV	R3,C.FNLN(R0)		;SET FILE NAME LENGTH
    120	000170	001405 				BEQ	30$			;BRANCH IF NONE
    121	000172	152760 	000001 	000001 		BISB	#CS.NMF,C.STAT(R0)	;SET FILE NAME FOUND STATUS
    122	000200	004767 	000672 			JSR	PC,WILDCK		; CHECK FOR WILD CARDS
    123	000204	010402 			30$:	MOV	R4,R2			;POINT TO LAST FOUND DELIM
    124	000206	005004 				CLR	R4			;CLEAR ERROR SWITCH
    125	000210	122705 	000057 			CMPB	#SLASH,R5
    126	000214	001002 				BNE	40$			;BRANCH IF NO SWITCHES
    127	000216	004767 	000040 			JSR	PC,SWITCH		;GO PROCESS SWITCHES
    128	000222	122705 	000075 		40$:	CMPB	#EQUAL,R5		;BRANCH IF AT END OF STRING
    129	000226	001404 				BEQ	50$
    130	000230	152760 	000020 	000001 		BISB	#CS.MOR,C.STAT(R0)	;ELSE SET MORE STRINGS FOLLOW
    131	000236	005202 				INC	R2			;STEP OVER LAST DELIMITER
    132	000240	005701 			50$:	TST	R1
    133	000242	001003 				BNE	60$			;BRANCH IF OUTPUT
    134	000244	010260 	000050 			MOV	R2,C.ISTR(R0)		;SAVE INPUT STRING PTR
    135	000250	000402 				BR	100$
    136	000252	010260 	000052 		60$:	MOV	R2,C.OSTR(R0)		;SAVE OUTPUT STRING PTR
    137	000256	006004 			100$:	ROR	R4			;SET ERROR VALUE(C-BIT ON IF ERROR)
    138	000260	000207 				RTS	PC			;EXIT
.CSI2	 VAX/VMS CSI2	MACRO M1110  22-AUG-78 01:25  PAGE 4
SWITCH - PROCESS SWITCHES

    140						.SBTTL	SWITCH - PROCESS SWITCHES
    141					;++
    142					; SWITCH - PROCESS SWITCHES
    143					;
    144					; FUNCTIONAL DESCRIPTION:
    145					;
    146					; THIS ROUTINE PROCESSES ALL SWITCHES PRESENT IN THE PRESENT FILE SPEC.
    147					;
    148					; INPUTS:
    149					;
    150					;	R0 = ADDRESS OF THE CONTROL BLOCK
    151					;	R2 = ADDRESS OF THE CURRENT DELIMETER "/"
    152					;	R5 = ADDRESS OF THIS SPEC END
    153					;
    154					; OUTPUTS:
    155					;
    156					;	R0 = ADDRESS OF THE CONTROL BLOCK
    157					;	R4 = ERROR INDICATION ( 1 IF ERROR )
    158					;	R5 = ADDRESS OF THIS SPEC END
    159					;--
    160	000262	005202 			SWITCH:	INC	R2			;STEP OVER THE CURRENT DELIMITER
    161	000264	004767 	000474 			CALL	DELSCN			;AND SCAN TO THE NEXT ONE
    162	000270	010446 				MOV	R4,-(SP)		;SAVE THE DELIMITER POINTER
    163	000272	010546 				MOV	R5,-(SP)		;AND THE CHARACTER ITSELF
    164	000274	005046 				CLR	-(SP)			;INIT NEGATED FLAG TO NOT NEGATED
    165					;
    166					; CHECK FOR NEGATED SWITCH
    167					;
    168	000276	010403 				MOV	R4,R3
    169	000300	160203 				SUB	R2,R3			;R3=SIZE OF SWITCH STRING
    170	000302	003522 				BLE	130$			;IF NO CHARACTER, THEN ERROR
    171	000304	122712 	000055 			CMPB	#MINUS,(R2)		;NEGATED WITH "-"?
    172	000310	001413 				BEQ	10$			;BRANCH IF YES
    173	000312	020327 	000002 			CMP	R3,#2			;IF 2 OR LESS CHAACTERS
    174	000316	003435 				BLE	40$			;THEN CAN'T BE "NO..."
    175	000320	122712 	000116 			CMPB	#'N,(R2)		;SEE IF "NO" ON FRONT
    176	000324	001032 				BNE	40$
    177	000326	122762 	000117 	000001 		CMPB	#'O,1(R2)
    178	000334	001026 				BNE	40$
    179					;
    180					; STRIP OFF THE "NO" AND ASSUME THE SWITCH IS NEGATED
    181					; BUT IT THE LOOKUP FAILS, TRY AGAIN WITH THE ENTIRE SWITCH NAME
    182					;
    183	000336	005202 				INC	R2			;SKIP OVER THE "N"
    184	000340	005202 			10$:	INC	R2			;SKIP OVER THE "O" OR "-"
    185	000342	005216 				INC	(SP)			;INDICATE THAT SWITCH IS NEGATED
    186	000344	010403 				MOV	R4,R3
    187	000346	160203 				SUB	R2,R3			;R3=SIZE OF SWITCH TO SCAN FOR
    188	000350	010246 				MOV	R2,-(SP)		;SAVE ADDRESS OF START OF SWITCH
    189	000352	004767 	000544 			CALL	SWMAT			;SEE IF THIS SWITCH IS IN SWITCH TABLE
    190	000356	012602 				MOV	(SP)+,R2		;RESTORE POINTER TO SWITCH
    191	000360	103404 				BCS	30$			;BRANCH IF SWITCH NOT FOUND
    192	000362	032764 	000001 	000004 		BIT	#1,4(R4)		;IS SWITCH NEGATABLE?
    193	000370	001013 				BNE	50$			;BRANCH IF YES, COMPLETE THE PORCESSING
    194	000372	122742 	000055 		30$:	CMPB	#MINUS,-(R2)		;WAS THE NEGATION WITH "-"
    195	000376	001464 				BEQ	130$			;BRANCH IF YES, SWITCH NOT FOUND
    196	000400	005016 				CLR	(SP)			;SAY NOT NEGATED
.CSI2	 VAX/VMS CSI2	MACRO M1110  22-AUG-78 01:25  PAGE 4-1
SWITCH - PROCESS SWITCHES

    197	000402	005302 				DEC	R2			;BACK OVER THE "N"
    198	000404	016603 	000004 			MOV	4(SP),R3		;RECOVER THE NEXT DELIMITER POINTER
    199	000410	160203 				SUB	R2,R3			;R3=SIZE OF SWITCH TO LOOK FOR
    200	000412	004767 	000504 		40$:	CALL	SWMAT			;MATCH THE SWITCH
    201	000416	103454 				BCS	130$			;BRANCH IF NOT FOUND
    202	000420	051460 	000024 		50$:	BIS	(R4),C.MKW1(R0)		; SET 'OR' OF MASK WORDS
    203	000424	005716 				TST	(SP)			;BRANCH IF NEG SWITCH
    204	000426	001003 				BNE	60$
    205	000430	051460 	000026 			BIS	(R4),C.MKW2(R0)		; SET SWITCH ON
    206	000434	000406 				BR	70$
    207	000436	032764 	000001 	000004 	60$:	BIT	#1,4(R4)		; IS NEGATIVE SWITCH ALLOWED?
    208	000444	001441 				BEQ	130$			;ERROR IF NOT
    209	000446	041460 	000026 			BIC	(R4),C.MKW2(R0)		; SET SWITCH OFF
    210	000452	016405 	000002 		70$:	MOV	2(R4),R5		; ADDR OF LOCN TO BE MASKED
    211	000456	000241 				CLC
    212	000460	006005 				ROR	R5
    213	000462	001413 				BEQ	110$			;BRANCH IF NO MASK ADDR
    214	000464	103405 				BCS	90$			;BRANCH IF TO CLEAR LOCN WITH MASK
    215	000466	006105 				ROL	R5
    216	000470	005716 				TST	(SP)			;BRANCH IF NEG SW TO CLEAR
    217	000472	001006 				BNE	100$
    218	000474	051415 			80$:	BIS	(R4),(R5)		; CLEAR MASK IN LOCN
    219	000476	000405 				BR	110$
    220	000500	000241 			90$:	CLC
    221	000502	006105 				ROL	R5
    222	000504	005716 				TST	(SP)			;BRANCH IF NEG SW TO SET
    223	000506	001372 				BNE	80$
    224	000510	041415 			100$:	BIC	(R4),(R5)		; CLEAR MASK IN LOCN
    225	000512	005726 			110$:	TST	(SP)+
    226	000514	012605 				MOV	(SP)+,R5		;LAST DELIMITER SCANNED
    227	000516	012602 				MOV	(SP)+,R2		;ADDR OF IT
    228	000520	016404 	000004 			MOV	4(R4),R4		; ADDR OF VALUE TABLE (IF ANY)
    229	000524	042704 	000001 			BIC	#1,R4			;DEL NEG SW ALLOWED BIT
    230	000530	120527 	000057 		120$:	CMPB	R5,#SLASH		;DOES ANOTHER SWITCH FOLLOW
    231	000534	001652 				BEQ	SWITCH			;BRANCH IF SO
    232	000536	120527 	000072 			CMPB	R5,#COLON		;DOES A SWITCH VALUE FOLLOW
    233	000542	001422 				BEQ	200$			;GO PROCESS
    234	000544	005004 				CLR	R4			;SET NO ERROR
    235	000546	000207 				RTS	PC			;EXIT
    236					;
    237					; ERROR IN SWITCH PROCESSING
    238					;
    239	000550	005726 			130$:	TST	(SP)+
    240	000552	012605 				MOV	(SP)+,R5		;GET LAST DELIM FOUND
    241	000554	012602 				MOV	(SP)+,R2		;GET ITS ADDR
    242	000556	120527 	000075 		140$:	CMPB	R5,#EQUAL		;IS IT END OF CURRENT SECTION
    243	000562	001407 				BEQ	150$
    244	000564	120527 	000054 			CMPB	R5,#COMMA
    245	000570	001404 				BEQ	150$			;BRANCH IF SO
    246	000572	005202 				INC	R2			;ELSE STEP OVER IT
    247	000574	004767 	000164 			JSR	PC,DELSCN		;GET NEXT DELIM
    248	000600	000766 				BR	140$			;LOOP UNTIL END OF CURRENT SECTION
    249	000602	012704 	000001 		150$:	MOV	#1,R4			;SET ERROR
    250	000606	000207 				RTS	PC			;EXIT
    251					;
    252					; PROCESS SWITCH VALUE
    253					;
.CSI2	 VAX/VMS CSI2	MACRO M1110  22-AUG-78 01:25  PAGE 4-2
SWITCH - PROCESS SWITCHES

    254	000610	010403 			200$:	MOV	R4,R3
    255	000612	001761 				BEQ	140$			;ERROR IF NO VALUE TABLE
    256	000614	005713 				TST	(R3)
    257	000616	001757 				BEQ	140$			;ERROR IF NO MORE ENTRIES
    258	000620	005202 				INC	R2			;STEP OVER LAST DELIM
    259	000622	004767 	000136 			JSR	PC,DELSCN		;SCAN TO NEXT
    260	000626	010446 				MOV	R4,-(SP)		;SAVE PTR TO DELIM
    261	000630	010546 				MOV	R5,-(SP)		;AND DELIM CHAR
    262	000632	016305 	000002 			MOV	2(R3),R5		; GET RESULT ADDR
    263	000636	122327 	000001 			CMPB	(R3)+,#ASVAL		; SHOULD SW-VALUE BE ASCII?
    264	000642	001025 				BNE	300$			;BRANCH IF NUMBERIC CVT REQUIRED
    265	000644	160204 				SUB	R2,R4			;GET VALUE LEN
    266	000646	121304 				CMPB	(R3),R4			; CMPR WITH ALLOWED LENGTH
    267	000650	103001 				BHIS	210$			;BRANCH IF SAME OR SMALLER THAN ALLOWED
    268	000652	111304 				MOVB	(R3),R4			; SET LENGTH ALLOWED
    269	000654	010446 			210$:	MOV	R4,-(SP)		;SAVE LEN
    270	000656	001403 				BEQ	230$			;BRANCH IF NONE TO MOVE
    271	000660	112225 			220$:	MOVB	(R2)+,(R5)+		;MOVE CHARS
    272	000662	005304 				DEC	R4			;UNTIL COUNT EXHAUSTED
    273	000664	001375 				BNE	220$
    274	000666	111304 			230$:	MOVB	(R3),R4			; GET ALLOWED LENGTH
    275	000670	162604 				SUB	(SP)+,R4		;CALC SPACE LEFT TO PAD
    276	000672	001403 				BEQ	250$			;BRANCH IF NONE
    277	000674	105025 			240$:	CLRB	(R5)+			;PAD WITH NULLS
    278	000676	005304 				DEC 	R4
    279	000700	001375 				BNE	240$
    280	000702	062703 	000003 		250$:	ADD	#3,R3			; ADDR OF NEXT VAL TABLE ENTRY
    281	000706	012605 				MOV	(SP)+,R5		;GET LAST DELIM CHAR
    282	000710	012602 				MOV	(SP)+,R2		;GET ADDR OF DELIM CHAR
    283	000712	010304 				MOV	R3,R4
    284	000714	000705 				BR	120$			;GO DECIDE WHAT TO DO
    285	000716	010346 			300$:	MOV	R3,-(SP)
    286	000720	012746 	000000G			MOV	#.ODCVT,-(SP)		; ASSUME NUMERIC CONVERT (OCTAL DFLT)
    287	000724	122743 	000003 			CMPB	#DECVAL,-(R3)		; IS DECIMAL DEFAULT DESIRED?
    288	000730	001002 				BNE	310$			; BRANCH IF NOT
    289	000732	012716 	000000G			MOV	#.DCCVT,(SP)		; ELSE, SPECIFY DECIMAL DEFAULT
    290	000736				310$:					;
    291	000736	010503 				MOV	R5,R3			; SET RESULT ADDR
    292	000740	005013 				CLR	(R3)
    293	000742	160204 				SUB	R2,R4			;LENGTH OF DIGIT STRING
    294	000744	001404 				BEQ	320$			;SKIP NULL STRING
    295	000746	010205 				MOV	R2,R5			;SET STRING ADDR
    296	000750	004736 				JSR	PC,@(SP)+		; CALL NUMERIC CONVERT
    297	000752	103676 				BCS	130$			;BRANCH IF ERROR
    298	000754	000401 				BR	330$			; BRANCH TO LEAVE
    299	000756	005726 			320$:	TST	(SP)+			; PURGE CONVERT ADDR FROM STACK
    300	000760	012603 			330$:	MOV	(SP)+,R3		; RESTORE R3
    301	000762	000747 				BR	250$
.CSI2	 VAX/VMS CSI2	MACRO M1110  22-AUG-78 01:25  PAGE 5
DELSCN - SCAN STRING FOR DELIMETER MATCH

    303						.SBTTL	DELSCN - SCAN STRING FOR DELIMETER MATCH
    304					;++
    305					; FUNCTIONAL DESCRIPTION:
    306					;
    307					; THIS ROUTINE SCANS A STRING FOR A DELIMETER MATCH.
    308					;
    309					; CHARACTERS INSIDE "[","]" ARE IGNORED.
    310					;
    311					; INPUTS:
    312					;
    313					;	R0 = ADDRESS OF THE CSI CONTROL BLOCK
    314					;	R2 = ADDRESS TO START THE SCAN
    315					;
    316					; OUTPUTS:
    317					;
    318					;	R0 = ADDRESS OF THE CSI CONTROL BLOCK
    319					;	R2 = ADDRESS TO START THE SCAN
    320					;	R4 = ADDRESS  OF FOUND DELIMETER
    321					;	R5 = DELIMETER, EOL IS "="
    322					;--
    323	000764	016046 	000004 		DELSCN:	MOV	C.BFAD(R0),-(SP)	;ADDRESS END OF STRING
    324	000770	066016 	000002 			ADD	C.BFLN(R0),(SP)
    325	000774	010204 				MOV	R2,R4			;ADDR FOR SCAN START
    326	000776	012705 	000021'		10$:	MOV	#DELSTR,R5		; ADDRESS LIST
    327	001002	020416 				CMP	R4,(SP)			; END OF STRING?
    328	001004	001430 				BEQ	50$			; IF EQ THEN YES
    329	001006	122514 				CMPB	(R5)+,(R4)		; "="?
    330	001010	001426 				BEQ	50$			; IF EQL THEN YES
    331	001012	121425 				CMPB	(R4),(R5)+		; COLON?
    332
    333						.IF	NDF	.NODES.
    334
    335	001014	001424 				BEQ	50$
    336
    337						.IFF
    338
    339						BNE	15$			; IF NEQ THEN NO
    340						CMP	C.BFAD(R0),R2		; FIRST PART OF STRING?
    341						BNE	50$			; IF NEQ THEN FOUND
    342						INC	R4			; POINT TO NEXT CHAR
    343						CMP	R4,(SP)			; PART OF STRING?
    344						BEQ	45$			; IF EQL THEN NO
    345						CMPB	-1(R5),(R4)+		; DOUBLE COLON?
    346						BNE	45$			; IF NEQ THEN COLON IS DELIM
    347						CMP	R4,(SP)			; IS END OF STRING REACHED?
    348						BEQ	45$			; IF YES THEN RETURN COLON DELIM
    349						BR	10$
    350
    351						.IFTF
    352
    353	001016	121425 			15$:	CMPB	(R4),(R5)+		; LOOK FOR DIRECTORY
    354	001020	001403 				BEQ	20$			;  IF FOUND THEN SKIP DIRECTORY
    355	001022	005205 				INC	R5
    356	001024	121425 				CMPB	(R4),(R5)+		;
    357	001026	001006 				BNE	30$			;
    358	001030	005204 			20$:	INC	R4			; PASS DIRECTORY STRING
    359	001032	121415 				CMPB	(R4),(R5)		;
.CSI2	 VAX/VMS CSI2	MACRO M1110  22-AUG-78 01:25  PAGE 5-1
DELSCN - SCAN STRING FOR DELIMETER MATCH

    360	001034	001375 				BNE	20$			; IF NE THEN NOT FOUND
    361	001036	112705 	000135 			MOVB	#'],R5			; SET TERMINATOR AS BRACKET
    362	001042	000413 				BR	55$			; AND DONE
    363	001044	005205 			30$:	INC	R5			; POINT TO "/"
    364	001046	122514 				CMPB	(R5)+,(R4)		; FOUND?
    365	001050	001406 				BEQ	50$			;
    366	001052	121425 				CMPB	(R4),(R5)+		; FOUND?
    367	001054	001404 				BEQ	50$			;
    368	001056	005204 			40$:	INC	R4			; POINT TO NEXT CHAR
    369	001060	000746 				BR	10$			; AND CONTINUE SEARCH
    370
    371						.IFT
    372
    373	001062				45$:
    374	001062	162704 	000002 			SUB	#2,R4
    375
    376						.ENDC
    377
    378	001066	116505 	177777 		50$:	MOVB	-1(R5),R5		; PICK UP TERMINATOR
    379	001072	005726 			55$:	TST	(SP)+			; CLEAN STACK
    380	001074	000207 				RTS	PC			; EXIT
.CSI2	 VAX/VMS CSI2	MACRO M1110  22-AUG-78 01:25  PAGE 6
WILDCK - CHECK FOR FILE NAME WILDCARD SYNTAX

    382						.SBTTL WILDCK - CHECK FOR FILE NAME WILDCARD SYNTAX
    383					;++
    384					; WILDCK - CHECK FOR FILE NAME WILDCARD SYNTAX
    385					;
    386					; FUNCTIONAL DESCRIPTION:
    387					;
    388					; THIS ROUTINE PROCESSES FILE NAME WILDCARDS.
    389					;
    390					; INPUTS:
    391					;
    392					;	R0 = ADDRESS OF THE CONTROL BLOCK
    393					;	R2 = ADDRESS TO BEGIN CHECK
    394					;
    395					; OUTPUTS:
    396					;
    397					;	R0,R2 ARE PRESERVED
    398					;--
    399	001076	122722 	000052 		WILDCK:	CMPB	#STAR,(R2)+
    400	001102	001403 				BEQ	10$			;BRANCH IF WILD CARD FOUND
    401	001104	020204 				CMP	R2,R4
    402	001106	001373 				BNE	WILDCK			;BRANCH IF NOT AT END OF NAME
    403	001110	000207 				RTS	PC			;EXIT
    404	001112	152760 	000010 	000001 	10$:	BISB	#CS.WLD,C.STAT(R0)	;SET WILD CARD STATUS
    405	001120	000207 				RTS	PC			;EXIT
.CSI2	 VAX/VMS CSI2	MACRO M1110  22-AUG-78 01:25  PAGE 7
SWMAT - MATCH STRING NAME TO TABLE DATA

    407						.SBTTL SWMAT - MATCH STRING NAME TO TABLE DATA
    408					;++
    409					; SWMAT - MATCH STRING NAME TO TABLE DATA
    410					;
    411					; FUNCTIONAL DESCRIPTION:
    412					;
    413					; THIS ROUTINE, GIVEN A STRING NAME DOES A TWO CHARACTER NAME MATCH WITH
    414					; THE SWITCH TABLE DATA GIVEN IN THE CSI CONTROL BLOCK
    415					;
    416					; INPUTS:
    417					;
    418					;	R0 = ADDRESS OF THE CSI CONTROL BLOCK
    419					;	R2 = ADDRESS OF STRING
    420					;	R3 = SIZE OF STRING
    421					;
    422					; OUTPUTS:
    423					;	C-BIT SET ON ERROR, CLEAR ON SUCCESS
    424					;
    425					;	R0 = ADDRESS OF THE CSI CONTROL BLOCK
    426					;	R4 = ADDRESS OF 3 WORDS OF SWITCH DATA
    427					;--
    428	001122	010246 			SWMAT:	MOV	R2,-(SP)		;SAVE ADDRESS
    429	001124	010346 				MOV	R3,-(SP)		;AND SIZE OF SWITCH STRING
    430	001126	016004 	000022 			MOV	C.SWAD(R0),R4		;GET SWITCH TABLE ADDRESS
    431	001132	001441 				BEQ	60$			;NO MATCH IF NO SWITCH TABLE
    432	001134	000434 				BR	50$			;START AT BOTTOM OF LOOP
    433					;
    434					; START HERE FOR 2ND AND SUBSEQUENT WORDS OF ASCII SWITCH IN THE
    435					; SWITCH TABLE.  SIGN BIT IN WORD INDICATES ANOTHER WORD IS PRESENT
    436					;
    437	001136	012405 			10$:	MOV	(R4)+,R5		;IF NEGATIVE, THEN MORE TO CHECK
    438	001140	100405 				BMI	20$
    439	001142	105705 				TSTB	R5			;IS AN EXACT MATCH REQUIRED?
    440	001144	100035 				BPL	80$			;BRANCH IF NO, THIS IS A MATCH
    441	001146	005703 				TST	R3			;MUST BE NO CHARS LEFT TO MATCH
    442	001150	003433 				BLE	80$			;BRANCH IF EXACT MATCH
    443	001152	000423 				BR	45$			;GO LOOK AT NEXT SWITCH TABLE ENTRY
    444					;
    445					; HERE FOR THE FIRST WORD OF EACH SWITCH TABLE ENTRY
    446					;
    447	001154	011405 			20$:	MOV	(R4),R5			;FIRST/NEXT WORD OF ASCII
    448	001156	001427 				BEQ	60$			;WORD OF 0 MEANS END OF TABLE
    449	001160	042705 	100200 			BIC	#100200,R5		;SHUT OFF "MORE CHARS COMING" BITS
    450	001164	005303 				DEC	R3
    451	001166	100413 				BMI	40$			;BRANCH IF SWITCH TOO SHORT
    452	001170	005046 				CLR	-(SP)
    453	001172	112216 				MOVB	(R2)+,(SP)		;FORM WORD WITH NEXT 2 CHARACTERS
    454	001174	005303 				DEC	R3			;IF NO MORE CHARACTERS
    455	001176	100405 				BMI	30$			;LEAVE A NULL IN THE HIGH BYTE
    456	001200	032714 	177600 			BIT	#177400+200,(R4) 	;IF HIGH BYTE IS NULL
    457										;AND IF EXACT MATCH BIT IS 0
    458	001204	001402 				BEQ	30$			;THEN LEAVE A NULL
    459	001206	112266 	000001 			MOVB	(R2)+,1(SP)		;OTHERWISE GET A 2ND CHARACTER
    460	001212	022605 			30$:	CMP	(SP)+,R5		;COMPARE THE WORD
    461	001214	001750 				BEQ	10$			;IF EQUAL, SEE IF MORE TO BE MATCHED
    462					;
    463					; SKIP OVER THE REST OF THIS SWITCH TABLE ENTRY
.CSI2	 VAX/VMS CSI2	MACRO M1110  22-AUG-78 01:25  PAGE 7-1
SWMAT - MATCH STRING NAME TO TABLE DATA

    464					;
    465	001216	005724 			40$:	TST	(R4)+			;LAST ASCII WORD WILL BE POSITIVE
    466	001220	100776 				BMI	40$			;SKIP OVER THE NEGATIVE ONES
    467	001222	062704 	000006 		45$:	ADD	#6,R4			;SKIP THE FIXED LENGTH PART
    468	001226	011603 			50$:	MOV	(SP),R3			;RESTORE THE STRING SIZE
    469	001230	016602 	000002 			MOV	2(SP),R2		;AND ADDRESS OF THE SWITCH
    470	001234	000747 				BR	20$			;AND TRY THE NEXT SWITCH TABLE ENTRY
    471	001236	000261 			60$:	SEC				;SWITCH NOT FOUND
    472					;
    473					; COMMON EXIT, C=0 IF SUCCESSFUL, C=1 IF ERROR
    474					;
    475	001240	032626 			80$:	BIT	(SP)+,(SP)+		;CLEAN 2 WORDS OFF STACK
    476	001242	000207 				RETURN
.CSI2	 VAX/VMS CSI2	MACRO M1110  22-AUG-78 01:25  PAGE 8
- DIDVSN - SCAN DEVICE AND DIRECTORY NAME

    478						.SBTTL - DIDVSN - SCAN DEVICE AND DIRECTORY NAME
    479					;++
    480					; DIDVSN - SCAN DEVICE AND DIRECTORY NAME STRING
    481					;
    482					; FUNCTIONAL DESCRIPTION:
    483					;
    484					; THIS ROUTINE SCANS THE DEVICE AND DIRECTORY STRING PART OF THE FILE SPEC.
    485					; THE SCAN IS BASED ON A CONTROL STRING.
    486					;
    487					; INPUTS
    488					;
    489					;	R0 = ADDRESS OF THE CSI CONTROL BLOCK
    490					;	R1 = INPUT IF 0, OUTPUT IF 1
    491					;	R2 = ADDRESS TO START SCAN
    492					;	R3 = CONTROL STRING ADDRESS
    493					;	R4 = STRING END ADDRESS
    494					;	R5 = DELIMETER
    495					;
    496					; OUTPUTS:
    497					;
    498					;	R0,R1,R2,R4,R5 ARE PRESERVED
    499					;--
    500	001244	010446 			DIDVSN:	MOV	R4,-(SP)		;SAVE STRING SEG END
    501	001246	010246 				MOV	R2,-(SP)		;AND START PTRS
    502	001250	010546 				MOV	R5,-(SP)		;SAVE DELIM
    503	001252	112305 				MOVB	(R3)+,R5		;DISP TO 4WD I/O SAVE PTRS
    504	001254	060005 				ADD	R0,R5			;ADDR OF INPUT SAVE PTRS
    505	001256	005701 				TST	R1			;BRANCH IF INPUT
    506	001260	001401 				BEQ	10$
    507	001262	022525 				CMP	(R5)+,(R5)+		; INCR R5 TO PNT TO OUTPUT
    508	001264	122316 			10$:	CMPB	(R3)+,(SP)		;BRANCH IF NOT DEV/DIR INFO
    509	001266	001005 				BNE	20$
    510	001270	062304 				ADD	(R3)+,R4		;ADJUSTMENT FOR DIR INFO
    511	001272	160204 				SUB	R2,R4			;CALC LEN OF SEG
    512	001274	152360 	000001 			BISB	(R3)+,C.STAT(R0)	;SET FOUND THIS SEG
    513	001300	000405 				BR	30$
    514	001302	062703 	000003 		20$:	ADD	#3,R3			;STEP OVER CTL VECT BYTES
    515	001306	011504 				MOV	(R5),R4			;GET PREVIOUS LEN
    516	001310	016502 	000002 			MOV	2(R5),R2		;AND ADDR
    517	001314	010425 			30$:	MOV	R4,(R5)+		; SAVE LENGTH/ADDR INFO IN ...
    518	001316	010215 				MOV	R2,(R5)			; ... LAST FOUND WORDS
    519	001320	112305 				MOVB	(R3)+,R5		;CALC ADDR OF
    520	001322	060005 				ADD	R0,R5			;RETURN LEN AND ADDR
    521	001324	010425 				MOV	R4,(R5)+		;RETURN LENGTH AND ADDR
    522	001326	010215 				MOV	R2,(R5)
    523	001330	105723 				TSTB	(R3)+			;FALL THRU FOR DIR INFO
    524	001332	001405 				BEQ	40$			;ONLY
    525	001334	005704 				TST	R4
    526	001336	001403 				BEQ	40$			;BRANCH IF NO DIR INFO
    527	001340	060204 				ADD	R2,R4
    528	001342	004767 	177530 			JSR	PC,WILDCK		;WILD CARD SCAN
    529	001346	012605 			40$:	MOV	(SP)+,R5		;RESTORE DELIM
    530	001350	012602 				MOV	(SP)+,R2		;SEG LEN AND ADDR
    531	001352	012604 				MOV	(SP)+,R4
    532	001354	121305 				CMPB	(R3),R5			;BRANCH IF WAS NOT
    533	001356	001004 				BNE	50$			;DEV(OR DIR) INFO
    534	001360	010402 				MOV	R4,R2			;ELSE SET NEW PTRS
.CSI2	 VAX/VMS CSI2	MACRO M1110  22-AUG-78 01:25  PAGE 8-1
- DIDVSN - SCAN DEVICE AND DIRECTORY NAME

    535	001362	005202 				INC	R2
    536	001364	004767 	177374 			JSR	PC,DELSCN		;SCAN TO DELIM
    537	001370	000207 			50$:	RTS	PC
    538		000001 				.END
.CSI2	 VAX/VMS CSI2	MACRO M1110  22-AUG-78 01:25  PAGE 8-2
SYMBOL TABLE

ASVAL = 000001   	C.DEVD= 000006   	C.ODVA= 000036   	G.TSMT= 000022   	RX$IAS= 000043
BLANK = 000040   	C.DIAD= 000014   	C.ODVL= 000034   	G.TSNL= 000020   	RX$11D= 000040
CHARA = 000101   	C.DILN= 000012   	C.OSTR= 000052   	G.TSPC= 000016   	RX$11M= 000041
CHARZ = 000132   	C.DIRD= 000012   	C.SIZE= 000054   	G.TSPN= 000004   	RX$11S= 000042
CHAR0 = 000060   	C.DSDS= 000006   	C.STAT= 000001   	G.TSPR= 000014   	SEMIC = 000073
CHAR9 = 000071   	C.DVAD= 000010   	C.SWAD= 000022   	G.TSRN= 000010   	SLASH = 000057
COLON = 000072   	C.DVLN= 000006   	C.TYPR= 000000   	G.TSSY= 000034   	STAR  = 000052
COMMA = 000054   	C.FILD= 000016   	DECVAL= 000003   	G.TSTN= 000000   	SWITCH  000262R     003
CS.DIF= 000002   	C.FNAD= 000020   	DELSCN  000764R     003	G.TSTS= 000032   	SWMAT   001122R     003
CS.DVF= 000004   	C.FNLN= 000016   	DELSTR  000021R     002	G.TSVA= 000026   	TAB   = 000011
CS.EQU= 000040   	C.IDIA= 000042   	DIDVSN  001244R     003	G.TSVL= 000030   	USCORE= 000137
CS.INP= 000001   	C.IDIL= 000040   	DIVECT  000010R     002	LBRAC = 000133   	WILDCK  001076R     003
CS.MOR= 000020   	C.IDVA= 000032   	DOLLAR= 000044   	LPBRAC= 000074   	$$$OST= 000044
CS.NMF= 000001   	C.IDVL= 000030   	DOT   = 000056   	MINUS = 000055   	$$$0ST= 000000
CS.OUT= 000002   	C.ISTR= 000050   	DVVECT  000000R     002	NULL  = 000000   	.CSI2   000000RG    003
CS.WLD= 000010   	C.MKW1= 000024   	EQUAL = 000075   	PLUS  = 000053   	.DCCVT= ****** GX
C.BFAD= 000004   	C.MKW2= 000026   	G.TSDU= 000036   	RBRAC = 000135   	.ODCVT= ****** GX
C.BFLN= 000002   	C.ODIA= 000046   	G.TSFW= 000024   	RPBRAC= 000076   	.SAVR1= ****** GX
C.CMLD= 000002   	C.ODIL= 000044   	G.TSGC= 000017   	RUBOUT= 000177

. ABS.	000000	   000
      	000000	   001
.CSID 	000031	   002
.CSII 	001372	   003
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  1420 WORDS  ( 6 PAGES)
DYNAMIC MEMORY:  2772 WORDS  ( 10 PAGES)
ELAPSED TIME:  00:00:15
OBJ$:VAXCSI2,LIS$:VAXCSI2/-SP=SRC$:VAXCSIDEF,VAXCSI2
