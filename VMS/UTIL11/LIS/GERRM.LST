GERRM M0010, GET ERROR MESSAGE 	MACRO M1110  22-AUG-78 01:26
TABLE OF CONTENTS

     7-  100	**** GERRM VERSION M0010 ****
GERRM M0010, GET ERROR MESSAGE 	MACRO M1110  22-AUG-78 01:26  PAGE 7


    100						.TITLE	GERRM M0010, GET ERROR MESSAGE STRING
						.SBTTL	**** GERRM VERSION M0010 ****
						.IDENT	/M0010/
    200
    300					; B. SCHREIBER	22-SEP-77
    400					;
    500					;	BLS030 -- LOOK FOR MESSAGE FILE ON LB: RATHER THAN SY:
    600					;
    700					; COPYRIGHT (C) 1977, DIGITAL EQUIPMENT CORP., MAYNARD, MASS.
    800					; COPYRIGHT   1975,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
    900					; COPYRIGHT   1974,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
   1000					;
   1100					; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
   1200					; ON A  SINGLE COMPUTER SYSTEM AND CAN BE  COPIED (WITH INCLUSION
   1300					; OF DEC'S COPYRIGHT  NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
   1400					; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
   1500					;
   1600					; THE  INFORMATION  IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
   1700					; NOTICE  AND  SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
   1800					; EQUIPMENT CORPORATION.
   1900					;
   2000					; DEC  ASSUMES NO  RESPONSIBILITY  FOR  THE  USE  OR  RELIABILITY
   2100					; OF  ITS  SOFTWARE ON  EQUIPMENT WHICH  IS  NOT SUPPLIED BY DEC.
   2200					;
   2300					; PETER H. LIPMAN	31-APR-74
   2400
   2500						.IF	GT,R$$11M
   2600
   2700
   2800						.MCALL	FILIO$
   2900	000000					FILIO$			;DEFINE THE I/O FUNCTION CODES LOCALLY
   3000					;
   3100						.MCALL	NMBLK$,QIO$,WTSE$S,DIR$,CALL,RETURN
   3200
   3300	000000					IMPURE
   3400
   3500	000000				DIRNMB:	NMBLK$	001002,DIR,,LB,0
   3600
   3700		000024'				.=DIRNMB+N.DID
   3800	000024	000004 	000004 			.WORD	4,4
   3900		000036'				.=DIRNMB+S.FNB
   4000
   4400	000036				QIODPB:	QIO$	,,32.,,EOIOST,,<,,,,,>
   4500
   4600		000042'				.EOLUN==QIODPB+Q.IOLU
   4700		000044'				.EOEFN==QIODPB+Q.IOEF
   4800
   4900	000066				.ERRBF::.BLKB	1000
   4950	001066				EOIOST:	.BLKW	2
   5000					;+
   5100					;
   5200					; GET ERROR MESSAGE FROM FILE
   5300					;
   5400					; CALLING SEQUENCE:
   5500					;
   5600					;	CALL	.GERRM
   5700					;
GERRM M0010, GET ERROR MESSAGE 	MACRO M1110  22-AUG-78 01:26  PAGE 7-1
**** GERRM VERSION M0010 ****

   5800					; INPUTS:
   5900					;
   6000					;	R0=STRING ADDRESS TO RETURN STRING
   6100					;	R1=MESSAGE FILE POINTER (FNB FOR 11M, STRING DESCRIPTOR FOR 11D)
   6200					;	R2=RECORD NUMBER (64. BYTE FIXED LENGTH RECORDS)
   6300					;
   6400					; OUTPUTS:
   6500					;
   6600					;	C=0 IF SUCCESSFUL, C=1 IF FAILED
   6700					;	R0=UPDATED STRING ADDRESS
   6800					;	R1=NO. OF CHARACTER ADDED
   6900					;	R2-R5 PRESERVED
   7000					;
   7100					;-
   7200
   7300	001072					PURE.I
   7400	000000	004567 	000000G		.GERRM::JSR	R5,$SAVRG
   7500	000004	005761 	000024 			TST	N.DID(R1)	;IS DIRECTORY ID SET?
   7600	000010	001015 				BNE	20$		;BRANCH IF YES
   7700	000012	012704 	000000'			MOV	#DIRNMB,R4
   7800	000016	005714 				TST	(R4)
   7900	000020	001003 				BNE	10$
   8000	000022					CALL	FIND		;FIND THE DIRECTORY ID
   8100	000026	103516 				BCS	90$		;BRANCH IF NO MESSAGE FILE
   8200	000030	012461 	000024 		10$:	MOV	(R4)+,N.DID(R1) ; SET DIECTORY ID
   8300	000034	012461 	000026 			MOV	(R4)+,N.DID+2(R1) ;
   8400	000040	012461 	000030 			MOV	(R4)+,N.DID+4(R1)
   8500	000044	005711 			20$:	TST	(R1)		;IS FILE ID ALREADY PRESENT
   8600	000046	001004 				BNE	30$		;BRANCH IF YES
   8700	000050	010104 				MOV	R1,R4		;
   8800	000052					CALL	FIND		;FIND THE MESSAGE
   8900	000056	103502 				BCS	90$		;BRANCH IF NO MESSAGE FILE
   9000	000060				30$:				;
   9100	000060	012767 	006400 	000040'		MOV	#IO.ACR,QIODPB+Q.IOFN
   9200	000066					CALL	CLRDPB		;SET R5 TO BE WORD PARAM BLOCK
   9300	000072	010115 				MOV	R1,(R5)		;FNB
   9400
   9500						.IF	GT,R$$DPB
   9600
   9700	000074	012765 	100000 	000010 		MOV	#100000,8.(R5)	;ENABLE ACCESS BIT
   9800						.ENDC
   9900
  10000	000102					CALL	QIOWAT		;ISSUE ACCESS I/O AND WAIT
  10100	000106	103466 				BCS	90$		;BRANCH IF FAILED TO ACCESS
  10200	000110	010204 				MOV	R2,R4
  10300	000112	005304 				DEC	R4
  10400	000114	000241 				CLC			;SHIFT R4 3 BITS RIGHT
  10500	000116	006004 				ROR	R4
  10600	000120	006204 				ASR	R4
  10700	000122	006204 				ASR	R4
  10800	000124	005204 				INC	R4		;SINCE VBN'S START AT 1
  10900	000126	012767 	010400 	000040'		MOV	#IO.RVB,QIODPB+Q.IOFN
  11000	000134					CALL	CLRDPB
  11100	000140	012725 	000066'			MOV	#.ERRBF,(R5)+	;ADDRESS TO READ INTO
  11200	000144	012725 	001000 			MOV	#512.,(R5)+	;SIZE OF TRANSFER
  11300	000150	022525 				CMP	(R5)+,(R5)+
  11400	000152	010415 				MOV	R4,(R5)		;VBN TO READ
GERRM M0010, GET ERROR MESSAGE 	MACRO M1110  22-AUG-78 01:26  PAGE 7-2
**** GERRM VERSION M0010 ****

  11500	000154					CALL	QIOWAT		;ISSUE READ QI/O AND WAIT
  11600	000160	006004 				ROR	R4		;SAVE CARRY
  11700	000162	012767 	010000 	000040'		MOV	#IO.DAC,QIODPB+Q.IOFN
  11800	000170					CALL	CLRDPB
  11900	000174	010115 				MOV	R1,(R5)		;FILE TO DEACCESS
  12000	000176					CALL	QIOWAT		;ISSUE THE DEACCESS QI/O
  12100	000202	103430 				BCS	90$
  12200	000204	006104 				ROL	R4		;RESTORE C BIT FROM READ
  12300	000206	103426 				BCS	90$		;BRANCH IF READ FAILED
  12400	000210	010205 				MOV	R2,R5
  12500	000212	005305 				DEC	R5
  12600	000214	042705 	177770 			BIC	#177770,R5	;R5=RECORD NO. WITHIN BLOCK
  12700	000220	000305 				SWAB	R5		;ASH #6,R5, SHIFT LEFT 6
  12800	000222	006205 				ASR	R5
  12900	000224	006205 				ASR	R5
  13000	000226	062705 	000066'			ADD	#.ERRBF,R5	;FORM R5=ADDRESS OF RECORD
  13100	000232	010003 				MOV	R0,R3
  13200	000234	012704 	000100 			MOV	#64.,R4
  13300	000240	112520 			50$:	MOVB	(R5)+,(R0)+	;MOVE UP TO 64. BYTES ASCIZ
  13400	000242	001403 				BEQ	55$
  13500	000244					SOB	R4,50$
  13600	000250	000401 				BR	60$
  13700	000252	005300 			55$:	DEC	R0		;DON'T COUNT THE NULL
  13800	000254	010001 			60$:	MOV	R0,R1		;
  13900	000256	160301 				SUB	R3,R1		;FORM BYTE COUNT, C=0
  14000	000260	001402 				BEQ	95$		;IF NULL RECORD, RETURN ERR
  14100	000262					RETURN
  14200	000264	005001 			90$:	CLR	R1
  14300	000266	000261 			95$:	SEC
  14400	000270					RETURN
  14500					;+
  14600					; ISSUE A FIND QI/O
  14700					;
  14800					; CALLING SEQUENCE:
  14900					;
  15000					;	CALL	FIND
  15100					;
  15200					; INPUTS:
  15300					;
  15400					;	R4=FNB
  15500					;
  15600					; OUTPUTS:
  15700					;
  15800					;	C=0 IF SUCCESSFUL, C=1 IF ERROR
  15900					;	R5 ALTERED, R0-R4 PRESERVED
  16000					;
  16100					;-
  16200	000272				FIND:
  16300	000272	012767 	004400 	000040'		MOV	#IO.FNA,QIODPB+Q.IOFN
  16400	000300					CALL	CLRDPB
  16500						.IF	GT,R$$DPB
  16600
  16700	000304	010465 	000012 			MOV	R4,10.(R5)	;STORE FNB
  16800
  16900						.IFF
  17000
  17100						MOV	R4,(R5)
GERRM M0010, GET ERROR MESSAGE 	MACRO M1110  22-AUG-78 01:26  PAGE 7-3
**** GERRM VERSION M0010 ****

  17200
  17300						.ENDC
  17400	000310					CALL	QIOWAT		;ISSUE THE FIND QI/O AND WAIT
  17500	000314					RETURN
  17600					;+
  17700					; CLEAR THE 6 WORD PARAMETER AREA OF THE QIODPB
  17800					;
  17900					; CALLING SEQUENCE:
  18000					;
  18100					;	CALL	CLRDPB
  18200					;
  18300					; INPUTS:
  18400					;
  18500					;	NONE
  18600					;
  18700					; OUTPUTS:
  18800					;
  18900					;	R0-R4 PRESERVED
  19000					;	R5 POINTS 1ST WORD OF 6 WORD PARAMETER BLOCK
  19100					;
  19200					;-
  19300	000316				CLRDPB:
  19400	000316	012705 	000066'			MOV	#QIODPB+24.,R5	;POINT TO LAST +2 WORD
  19500	000322	012746 	000006 			MOV	#6,-(SP)	;CLEAR 6 WORDS
  19600	000326	005045 			10$:	CLR	-(R5)		;
  19700	000330	005316 				DEC	(SP)
  19800	000332	003375 				BGT	10$
  19900	000334	005726 				TST	(SP)+
  20000	000336					RETURN
  20100					;+
  20200					;
  20300					; ISSUE THE QIO AND WAIT - QIODPB ALL SET UP.
  20400					;
  20500					; CALLING SEQUENCE:
  20600					;
  20700					;	CALL	QIOWAT
  20800					;
  20900					; INPUTS:
  21000					;
  21100					;	NONE
  21200					;
  21300					; OUTPUTS:
  21400					;
  21500					;	C=0 IF SUCCESSFUL, C=1 IF ERROR
  21600					;
  21700					;-
  21800	000340				QIOWAT:
  21900	000340					DIR$	#QIODPB
  22000	000346	103411 				BCS	10$
  22100	000350					WTSE$S	.EOEFN
  22200	000362	105767 	001066'			TSTB	EOIOST		;NEGATIVE STATUS IS AN ERROR
  22300	000366	003001 				BGT	10$		;BRANCH IF OK, C=0
  22400	000370	000261 				SEC
  22500	000372				10$:	RETURN
GERRM M0010, GET ERROR MESSAGE 	MACRO M1110  22-AUG-78 01:26  PAGE 8
**** GERRM VERSION M0010 ****

    100						.IFF			;IF THIS IS FOR RSX11D
    200
    300						.MCALL	RETURN,MOUT$S
    400
    500						IMPURE
    600					.ERRBF::.BLKB	3*80.		;ENOUGH SPACE FOR 3 LINES
    700						ERRBFS=.-.ERRBF
    800					EOIOST:	.BLKW	2		;I/O STATUS BLOCK FOR MO CALL
    900					.EOLUN::.BLKW	1		;LUN FOR MO, PATCH AND PREASSIGN TO MO
   1000
   1100						PURE.I
   1200					.GERRM::CLR	-(SP)		;SET UP A ZERO COUNT TO RETURN IF ERROR
   1300						MOUT$S	R1,,R2,CONT,USBUF,#.ERRBF,#ERRBFS,#EOIOST,.EOLUN
   1400						BCS	20$
   1500						SEC
   1600						MOVB	EOIOST,R1	;COMPLETED SUCCESSFULLY?
   1700						BMI	20$		;BRANCH IF NO
   1800						MOV	.ERRBF+2,R1	;LENGTH OF RECORD RETURNED
   1900						BEQ	20$		;BRANCH IF EMPTY
   2000						MOV	R1,(SP)		;PUT REAL COUNT ON STACK
   2100						MOV	R1,-(SP)	;PUSH ANOTHER COPY FOR MOVE LOOP
   2200						MOV	#.ERRBF+4,R1
   2300					10$:	MOVB	(R1)+,(R0)+	;MOVE THE RECORD TO THE USER STRING
   2400						DEC	(SP)
   2500						BGT	10$
   2600						TST	(SP)+		;POP THE EXPIRED COUNT AND CLEAR CARRY
   2700					20$:	MOV	(SP)+,R1	;RECOVER THE SAVED COUNT OR 0 IF ERROR
   2800						RETURN
   2900
   3000						.ENDC
   3100					;
   3200					;
   3300		000001 				.END
GERRM M0010, GET ERROR MESSAGE 	MACRO M1110  22-AUG-78 01:26  PAGE 8-1
SYMBOL TABLE

AB.CDT  000105   	IO.APC= 014000   	IO.RTK= 000060   	N.FTYP= 000014   	S.FNAM= 000006
AB.CHU  000064   	IO.APV= 014010   	IO.RVB= 010400   	N.FVER= 000016   	S.FNB = 000036
AB.EXP  000122   	IO.ATT= 001400   	IO.SET= 000030   	N.NEXT= 000022   	S.FNBW= 000017
AB.FNU  000000   	IO.CLN= 003400   	IO.ULK= 005000   	N.STAT= 000020   	S.FNTY= 000004
AB.FP   000062   	IO.CRE= 012000   	IO.UNL= 000042   	N.UNIT= 000034   	S.FTYP= 000002
AB.FSQ  000002   	IO.DAC= 010000   	IO.WAT= 013400   	QIODPB  000036R     002	S.NFEN= 000020
AB.GC   000061   	IO.DEL= 012400   	IO.WLB= 000400   	QIOWAT  000340R     003	$SAVRG= ****** GX
AB.NAM  000006   	IO.DET= 002000   	IO.WVB= 011000   	Q.IOAE= 000012   	$$$ARG= 000006
AB.PC   000060   	IO.ENA= 006000   	IQ.Q  = 000002   	Q.IOEF= 000006   	$$$OST= 000014
AB.RDT  000070   	IO.EXT= 011400   	IQ.S  = 000004   	Q.IOFN= 000002   	.EOEFN= 000044RG    002
AB.REV  000066   	IO.FNA= 004400   	IQ.UMD= 000004   	Q.IOLU= 000004   	.EOLUN= 000042RG    002
AB.UAT  000020   	IO.KIL= 000012   	IQ.X  = 000001   	Q.IOPL= 000014   	.ERRBF  000066RG    002
CLRDPB  000316R     003	IO.LOV= 001010   	NB.NXD= 020000   	Q.IOPR= 000007   	.GERRM  000000RG    003
DIRNMB  000000R     002	IO.LTK= 000050   	NB.WLV= 010000   	Q.IOSB= 000010   	...GBL= 000000
EOIOST  001066R     002	IO.RAT= 013000   	N.DID = 000024   	R$$DPB= 000001   	...PC1= 000000
FIND    000272R     003	IO.RDN= 000022   	N.DVNM= 000032   	R$$DYM= 000001   	...PC2= 000034R     002
IO.ACE= 007400   	IO.RLB= 001000   	N.FID = 000000   	R$$EIS= 000000   	...PC3= 000000
IO.ACR= 006400   	IO.RNA= 005400   	N.FNAM= 000006   	R$$11M= 000001   	...TPC= 000036
IO.ACW= 007000

. ABS.	000131	   000
      	000000	   001
IMPURE	001072	   002
PURE$I	000374	   003
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  4092 WORDS  ( 16 PAGES)
DYNAMIC MEMORY:  4884 WORDS  ( 18 PAGES)
ELAPSED TIME:  00:00:19
OBJ$:GERRM,LIS$:GERRM/-SP=SRC$:PIPMAC,GERRM
