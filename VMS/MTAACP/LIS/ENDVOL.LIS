
; Bliss-32 7.352	Saturday 21-AUG-1978 23:30:53	DBB3:[MTAACP.SRC]ENDVOL.B32;10					Page 1
; Digital Equipment Corporation
;
;	0001	MODULE ENDVOL (
;	0002			LANGUAGE (BLISS32),
;	0003			IDENT = 'A0002B'
;	0004			) =
;	0005	BEGIN
;	0006	
;	0007	!
;	0008	! COPYRIGHT (C) 1977
;	0009	! DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
;	0010	!
;	0011	! THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
;	0012	! COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
;	0013	! ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
;	0014	! MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
;	0015	! EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
;	0016	! TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
;	0017	! REMAIN IN DEC.
;	0018	!
;	0019	! THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
;	0020	! AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
;	0021	! CORPORATION.
;	0022	!
;	0023	! DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
;	0024	! SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
;	0025	
;	0026	!++
;	0027	!
;	0028	! FACILITY:  MTAACP
;	0029	!
;	0030	! ABSTRACT:
;	0031	!	THIS MODULE HANDLES VIRTAUL IO ERRORS INCLUDING MAPPING ERRORS.
;	0032	!
;	0033	!
;	0034	! ENVIRONMENT:
;	0035	!
;	0036	!	STARLET OPERATING SYSTEM, INCLUDING PRIVILEGED SYSTEM SERVICES
;	0037	!	AND INTERNAL EXEC ROUTINES.
;	0038	!
;	0039	!--
;	0040	!
;	0041	!
;	0042	! AUTHOR:  D. H. GILLESPIE,	 CREATION DATE:  
;	0043	!
;	0044	! REVISION HISTORY:
;	0045	!
;	0046	!   D. H. Gillespie, 2-Feb-1978  17:44
;	0047	!   X0003 - CORRECT STATUS RETURNED
;	0048	!
;	0049	!   D. H. Gillespie, 12-May-78  10:11
;	0050	!   A0001 - change CURRENT_VCB to a register
;	0051	!
;	0052	!   D. H. Gillespie, 22-May-78  16:39
;	0053	!   A0002 - add NOTUSED
;	0054	!
;	0055	!**

; Bliss-32 7.352	Saturday 21-AUG-1978 23:30:53	DBB3:[MTAACP.SRC]ENDVOL.B32;10					Page 1-1
; Digital Equipment Corporation
;
;	0056	
;	0057	LIBRARY 'SYS$LIBRARY:LIB.L32';
;	0058	REQUIRE 'SRC$:MTADEF.B32';
;	0354	
;	0355	FORWARD ROUTINE
;	0356		END_OF_VOL	: NOPRES NOVALUE,	!END OF VOLUME PROCESSING
;	0357		INSERT_HEAD	: COMMON_CALL NOVALUE,		!INSERT REQUEST IN ERROR AT HEAD OF BLOCKED IO QUEUE
;	0358		INSERT_TAIL	: COMMON_CALL NOVALUE,		!INSERT MAP FAILURES AT TAIL OF BLOCKED IO QUEUE
;	0359		NEXT_VOL_READ	: NOVALUE L$NEXT_VOL_READ,	!GET NEXT VOLUME ON READ
;	0360		NEXT_VOL_WRITE	: NOVALUE L$NEXT_VOL_WRIT;	!GET NEXT VOLUME ON WRITE
;	0361	
;	0362	EXTERNAL ROUTINE
;	0363		ADJTM,					!ADJUST TAPE MARK COUNTER
;	0364		BLOCK,					!BLOCK CURRENT REQUEST
;	0365		GTNEXT_VOL_READ	: L$GTNEXT_VOL_RE NOVALUE,	!GET NEXT VOLUME FOR READ
;	0366		GTNEXT_VOL_WRIT	: L$GTNEXT_VOL_WR NOVALUE,	!GET NEXT VOLUME FOR WRITE
;	0367		IO_DONE,				!COMPLETE IO
;	0368		LIB$CVT_DTB	: ADDRESSING_MODE(ABSOLUTE),	!CONVERT DECIMAL TO BINARY
;	0369		QUEUE_AST,				!ISSUE AST FOR USER LABELS
;	0370		READ_BLOCK,				!READ ONE TAPE BLOCK
;	0371		RETURN_ALL_ERR,				!RETURN BLOCKED IO IN ERROR
;	0372		SPACE_TM,				!SPACE GIVEN NUMBER OF TAPE MARKS
;	0373		START_VIO,				!START UP VIRTUAL IO
;	0374		REPOSITION	: L$REPOSITION,		!REPOSITION TAPE
;	0375		WRITE_HEADERS	: L$WRITE_HEADER NOVALUE,	!WRITE HDR1 AND HDR2
;	0376		WRITE_TM	: L$WRITE_TM,		!WRITE TAPE MARK
;	0377		WRITE_TRAILERS	: L$WRITE_TRAILER NOVALUE;	!WRITE TRAILER LABEL SET
;	0378	
;	0379	EXTERNAL
;	0380		CURRENT_UCB	: REF BBLOCK,		!ADDRESS OF CURRENT UNIT CONTROL BLOCK
;	0381	
;	0382		CURRENT_WCB	: REF BBLOCK,		!ADDRESS OF CURRENT WINDOW CONTROL BLOCK
;	0383		HDR1		: REF BBLOCK,		!ADDRESS OF HDR1 (EOF1) LABEL
;	0384		IO_PACKET	: REF BBLOCK,		!ADDRESS OF IO REQUEST PACKET
;	0385		USER_STATUS	: VECTOR[2];		!STATUS RETURNED TO USER
;	0386	
;	0387	EXTERNAL LITERAL
;	0388		UCB$L_MT_RECORD;			!GLOBAL DISPLACEMENT IN UCB

; Bliss-32 7.352	Saturday 21-AUG-1978 23:30:53	DBB3:[MTAACP.SRC]ENDVOL.B32;10					Page 2
; Digital Equipment Corporation
;
;	0389	GLOBAL ROUTINE END_OF_VOL : NOPRES NOVALUE  =
;	0390	
;	0391	!++
;	0392	!
;	0393	! FUNCTIONAL DESCRIPTION:
;	0394	!	THIS ROUTINE HANDLES IO ERRORS ON VIRTUAL IO INCLUDING MAPPING ERRORS
;	0395	!
;	0396	! CALLING SEQUENCE:
;	0397	!	END_OF_VOL()
;	0398	!
;	0399	! INPUT PARAMETERS:
;	0400	!	NONE
;	0401	!
;	0402	! IMPLICIT INPUTS:
;	0403	!	CURRENT_VCB	- ADDRESS OF CURRENT VOLUME CONTROL BLOCK
;	0404	!	IO_PACKET	- ADDRESS OF IO REQUEST PACKET
;	0405	!
;	0406	! OUTPUT PARAMETERS:
;	0407	!	NONE
;	0408	!
;	0409	! IMPLICIT OUTPUTS:
;	0410	!	IO_PACKET ZEROED IF IT SHOULD NOT BE COMPLETED
;	0411	!
;	0412	! ROUTINE VALUE:
;	0413	!	NONE
;	0414	!
;	0415	! SIDE EFFECTS:
;	0416	!	END OF VOLUME PROCESSING
;	0417	!
;	0418	!--
;	0419	
;	0420	BEGIN
;	0421	
;	0422	EXTERNAL REGISTER
;	0423		COMMON_REG;
;	0424	
;	0425	
;	0426	LOCAL
;	0427		BLOCKS1,			!NUMBER OF BLOCKS READ
;	0428		BLOCKS2,			!NUMBER OF BLOCKS RECORDED IN TRAILER LABEL
;	0429		IO_ERROR,			!DRIVER ERROR
;	0430		PACKET		: REF BBLOCK;	!ADDRESS OF IO REQUEST PACKET
;	0431	
;	0432	
;	0433	PACKET = .IO_PACKET;
;	0434	
;	0435	! IF VIRTUAL BIT SET THEN MAPPING ERROR.  THIS OCCURS WHEN IO IS BEING HELD
;	0436	! UP FOR EITHER USER LABELS, IO ERROR, END_OF_VOLUME PROCESSING OR BECAUSE
;	0437	! END_OF_FILE HAS BEEN READ
;	0438	IF .PACKET[IRP$V_VIRTUAL] THEN
;	0439	    BEGIN
;	0440	
;	0441	! IF MAPPING ERROR CAUSED BY WRITING USER LABELS AND THEREFORE FORCING A CLOSE
;	0442	! OF THE CURRENT FILE THEN RETURN THE IO IN ERROR 
;	0443	    IF .CURRENT_VCB[VCB$V_MUSTCLOSE] THEN ERR_EXIT(SS$_MUSTCLOSEFL);

; Bliss-32 7.352	Saturday 21-AUG-1978 23:30:53	DBB3:[MTAACP.SRC]ENDVOL.B32;10					Page 2-1
; Digital Equipment Corporation
;
;	0444	
;	0445	! IF THE NUMBER OF TAPE MARKS INTO THE FILE IS TWO AND LABEL INDICATES EOF THEN AT END_OF_FILE
;	0446	    IF .HDR1[HD1$L_HD1LID] EQL 'EOF1' THEN ERR_EXIT(SS$_ENDOFFILE);
;	0447	    KERNEL_CALL(INSERT_TAIL,.PACKET);	!BLOCKED IO BECAUSE OF MAPPING FAILURE
;	0448	    IO_PACKET = 0;
;	0449	    RETURN;
;	0450	    END
;	0451	ELSE
;	0452	
;	0453	! IF  VIRTUAL BIT IS NOT SET THEN AN ERROR OCCURRED ON A VIRTUAL IO REQUEST.
;	0454	! THE ERROR IF SS$_ENDOFTAPE OR SS$_ENDOFFILE INDICATES THAT END OF 
;	0455	! VOLUME PROCESSING IS NECESSARY
;	0456	    BEGIN
;	0457	    IO_ERROR = .(PACKET[IRP$L_IOST1]) <0,16>;
;	0458	    IF .IO_ERROR EQL SS$_MEDOFL THEN
;	0459		BEGIN
;	0460		KERNEL_CALL(INSERT_HEAD,.PACKET);
;	0461		IO_PACKET = 0;		!DON'T COMPLETE IO
;	0462		REPOSITION(.(.CURRENT_UCB + UCB$L_MT_RECORD)<0,32>);
;	0463		KERNEL_CALL(START_VIO);
;	0464		RETURN;
;	0465		END;
;	0466	    IF .IO_ERROR NEQ SS$_ENDOFFILE AND .IO_ERROR NEQ SS$_ENDOFTAPE THEN
;	0467		BEGIN				!RETURN ALL OTHER ERRORS TO USER
;	0468		USER_STATUS[0] = .PACKET[IRP$L_IOST1];
;	0469		USER_STATUS[1] = .PACKET[IRP$L_IOST2];
;	0470		KERNEL_CALL(START_VIO);		!ALLOW OTHER IO TO CONTINUE
;	0471		RETURN;				!COMPLETE I/O IN ERROR
;	0472	 	END
;	0473	    ELSE
;	0474		BEGIN
;	0475	
;	0476	
;	0477	! END OF VOLUME PROCESSING
;	0478		IF NOT .CURRENT_WCB[WCB$V_READ] THEN
;	0479		    BEGIN			!END OF VOLUME ON WRITE
;	0480		    USER_STATUS<16,16> = .(PACKET[IRP$L_IOST1])<16,16>;
;	0481		    USER_STATUS[1] = .PACKET[IRP$L_IOST2];
;	0482		    NEXT_VOL_WRITE();
;	0483		    KERNEL_CALL(IO_DONE,.PACKET);	!THIS IO WAS WRITTEN SUCCESSFULLY
;	0484		    IO_PACKET = 0;
;	0485		    RETURN;			!DON'T COMPLETE IO
;	0486		    END
;	0487		ELSE
;	0488	
;	0489		    BEGIN			!END OF VOLUME ON READ
;	0490		
;	0491	! IF END OF TAPE ON READ, THEN MAKE THAT IO SUCCESSFUL AND REQUEUE ANY
;	0492	! BLOCKED IO.  WILL EVENTUALLY HIT TAPE MARK
;	0493		    IF .IO_ERROR EQL SS$_ENDOFTAPE THEN
;	0494			BEGIN
;	0495			KERNEL_CALL(START_VIO);	!REQUEUE ANY BLOCKED IO
;	0496			USER_STATUS<16,16> = .(PACKET[IRP$L_IOST1])<16,16>;
;	0497			USER_STATUS[1] = .PACKET[IRP$L_IOST2];
;	0498			RETURN;			!COMPLETE CURRENT IO

; Bliss-32 7.352	Saturday 21-AUG-1978 23:30:53	DBB3:[MTAACP.SRC]ENDVOL.B32;10					Page 2-2
; Digital Equipment Corporation
;
;	0499			END
;	0500		    ELSE
;	0501			BEGIN
;	0502	
;	0503	! CALCULATE THE NUMBER OF BLOCKS SINCE LAST TAPE MARK.  THIS WILL BE COMPARED WITH 
;	0504	! THE NUMBER IN THE TRAILER RECORD.  SINCE A TAPE MARK TRIGGERED END_OF_VOL
;	0505	! PROCESSING, RECORD IT.  THEN DISCOVER IF THIS IS THE END_OF_VOL OR
;	0506	! END_OF_FILE.
;	0507			BLOCKS1 = .(.CURRENT_UCB + UCB$L_MT_RECORD)<0,32> - 1 - .CURRENT_VCB[VCB$L_ST_RECORD];
;	0508			KERNEL_CALL(ADJTM,1);	!TAPE MARK TRIGGERED END_OF_FILE
;	0509			IF NOT READ_BLOCK(.HDR1,80) 
;	0510			OR (.HDR1[EO1$L_EO1LID] NEQ 'EOF1'
;	0511			    AND .HDR1[EO1$L_EO1LID] NEQ 'EOV1') THEN ERR_EXIT(SS$_TAPEPOSLOST);
;	0512	
;	0513	! CONVERT THE NUMBER OF BLOCKS RECORED IN THE TRAILER RECORD.  COMPARE IT WITH 
;	0514	! THE NUMBER READ.  IF THE NUMBERS ARE NOT EQUAL THEN RETURN ALL VIRTUAL
;	0515	! IO TO THE USER IN ERROR.
;	0516			LIB$CVT_DTB(EO1$S_BLOCKCNT,HDR1[EO1$T_BLOCKCNT],BLOCKS2);
;	0517			IF .BLOCKS1 NEQ .BLOCKS2 THEN
;	0518			BBLOCK[.CURRENT_VCB[VCB$L_VPFL],VVP$L_BLOCKDIF] =
;	0519				.BBLOCK[.CURRENT_VCB[VCB$L_VPFL],VVP$L_BLOCKDIF] + .BLOCKS1 - .BLOCKS2;
;	0520	
;	0521	! IF END_OF_FILE READ, RETURN ALL PHYSICAL IO IN ERROR, SIGNAL USER TO READ
;	0522	! USER LABELS NOW AND RETURN
;	0523			IF .HDR1[EO1$L_EO1LID] EQL 'EOF1' THEN ERR_EXIT(SS$_ENDOFFILE);
;	0524	
;	0525	! END OF VOLUME PROCESSING
;	0526			KERNEL_CALL(INSERT_HEAD,.PACKET);	!PUT IN BLOCKED IO QUEUE
;	0527			IO_PACKET = 0;		!DON'T COMPLETE IO
;	0528			NEXT_VOL_READ();	!GET NEXT VOLUME ON READ
;	0529			RETURN;				
;	0530			END;
;	0531		    END;			!IF END_OF_FILE OR END_OF_TAPE ON READ
;	0532		END;				!END OF IF WRITE ELSE READ
;	0533	    END;				!END OF IF MAP ELSE ERROR
;	0534	END;					!END OF ROUTINE


							    .TITLE  ENDVOL
							    .IDENT  \A0002B\

							    .GLOBL  ADJTM, BLOCK, GTNEXT_VOL_READ, GTNEXT_VOL_WRIT
							    .GLOBL  IO_DONE, LIB$CVT_DTB, QUEUE_AST, READ_BLOCK, RETURN_ALL_ERR
							    .GLOBL  SPACE_TM, START_VIO, REPOSITION, WRITE_HEADERS
							    .GLOBL  WRITE_TM, WRITE_TRAILERS, CURRENT_UCB, CURRENT_WCB
							    .GLOBL  HDR1, IO_PACKET, USER_STATUS, UCB$L_MT_RECORD
							    .GLOBL  SYS$CMKRNL

							    .PSECT  $CODE$,NOWRT,2

					 0000 00000 	    .ENTRY  END_OF_VOL, Save nothing				      ; 0389
		         5E	       04  C2 00002 	    SUBL2   #4, SP						      ;
				0000G  CF  DD 00005 	    PUSHL   IO_PACKET						      ; 0433
	   50	         6E	       2A  C1 00009 	    ADDL3   #42, PACKET, R0					      ; 0438
	   25	         60	       04  E1 0000D 	    BBC     #4, (R0), 3$					      ;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:30:53	DBB3:[MTAACP.SRC]ENDVOL.B32;10					Page 2-3
; Digital Equipment Corporation
;
	   04	    0B   AB	       06  E1 00011 	    BBC     #6, 11(CURRENT_VCB), 1$				      ; 0443
				0948   8F  BF 00016 	    CHMU    #2376						      ;
	      31464F45   8F	0000G  DF  D1 0001A 1$:     CMPL    @HDR1, #826691397					      ; 0446
				       04  12 00023 	    BNEQ    2$							      ;
				0870   8F  BF 00025 	    CHMU    #2160						      ;
				       6E  DD 00029 2$:     PUSHL   PACKET						      ; 0447
				       01  DD 0002B 	    PUSHL   #1							      ;
				       5E  DD 0002D 	    PUSHL   SP							      ;
				0000V  CF  9F 0002F 	    PUSHAB  INSERT_TAIL						      ;
				     0095  31 00033 	    BRW     7$							      ;
	   50	         6E	       34  C1 00036 3$:     ADDL3   #52, PACKET, R0					      ; 0457
		         52	       60  3C 0003A 	    MOVZWL  (R0), IO_ERROR					      ;
	      000001A4   8F	       52  D1 0003D 	    CMPL    IO_ERROR, #420					      ; 0458
				       29  12 00044 	    BNEQ    4$							      ;
				       6E  DD 00046 	    PUSHL   PACKET						      ; 0460
				       01  DD 00048 	    PUSHL   #1							      ;
				       5E  DD 0004A 	    PUSHL   SP							      ;
				0000V  CF  9F 0004C 	    PUSHAB  INSERT_HEAD						      ;
	      00000000G  9F	       04  FB 00050 	    CALLS   #4, @#SYS$CMKRNL					      ;
				0000G  CF  D4 00057 	    CLRL    IO_PACKET						      ; 0461
	   50	  0000G  CF 00000000G  8F  C1 0005B 	    ADDL3   #UCB$L_MT_RECORD, CURRENT_UCB, R0			      ; 0462
				       60  DD 00065 	    PUSHL   (R0)						      ;
				     0000  30 00067 	    BSBW    REPOSITION						      ;
		         5E	       04  C0 0006A 	    ADDL2   #4, SP						      ;
				       24  11 0006D 	    BRB     5$							      ; 0463
	      00000870   8F	       52  D1 0006F 4$:     CMPL    IO_ERROR, #2160					      ; 0466
				       2B  13 00076 	    BEQL    6$							      ;
	      00000878   8F	       52  D1 00078 	    CMPL    IO_ERROR, #2168					      ;
				       22  13 0007F 	    BEQL    6$							      ;
	   50	         6E	       34  C1 00081 	    ADDL3   #52, PACKET, R0					      ; 0468
		  0000G  CF	       60  D0 00085 	    MOVL    (R0), USER_STATUS					      ;
	   50	         6E	       38  C1 0008A 	    ADDL3   #56, PACKET, R0					      ; 0469
		  0000G  CF	       60  D0 0008E 	    MOVL    (R0), USER_STATUS+4					      ;
				       7E  D4 00093 5$:     CLRL    -(SP)						      ; 0470
				       5E  DD 00095 	    PUSHL   SP							      ;
				0000G  CF  9F 00097 	    PUSHAB  START_VIO						      ;
	      00000000G  9F	       03  FB 0009B 	    CALLS   #3, @#SYS$CMKRNL					      ;
					   04 000A2 	    RET     							      ; 0471
		         50	0000G  CF  D0 000A3 6$:     MOVL    CURRENT_WCB, R0					      ; 0478
		         2B	  0B   A0  E8 000A8 	    BLBS    11(R0), 8$						      ;
	   50	         6E	       36  C1 000AC 	    ADDL3   #54, PACKET, R0					      ; 0480
		  0000G  CF	       60  B0 000B0 	    MOVW    (R0), USER_STATUS+2					      ;
	   50	         6E	       38  C1 000B5 	    ADDL3   #56, PACKET, R0					      ; 0481
		  0000G  CF	       60  D0 000B9 	    MOVL    (R0), USER_STATUS+4					      ;
				     0000  30 000BE 	    BSBW    NEXT_VOL_WRITE					      ; 0482
				       6E  DD 000C1 	    PUSHL   PACKET						      ; 0483
				       01  DD 000C3 	    PUSHL   #1							      ;
				       5E  DD 000C5 	    PUSHL   SP							      ;
				0000G  CF  9F 000C7 	    PUSHAB  IO_DONE						      ;
	      00000000G  9F	       04  FB 000CB 7$:     CALLS   #4, @#SYS$CMKRNL					      ;
				0000G  CF  D4 000D2 	    CLRL    IO_PACKET						      ; 0484
					   04 000D6 	    RET     							      ; 0485
	      00000878   8F	       52  D1 000D7 8$:     CMPL    IO_ERROR, #2168					      ; 0493
				       22  12 000DE 	    BNEQ    9$							      ;
				       7E  D4 000E0 	    CLRL    -(SP)						      ; 0495

; Bliss-32 7.352	Saturday 21-AUG-1978 23:30:53	DBB3:[MTAACP.SRC]ENDVOL.B32;10					Page 2-4
; Digital Equipment Corporation
;
				       5E  DD 000E2 	    PUSHL   SP							      ;
				0000G  CF  9F 000E4 	    PUSHAB  START_VIO						      ;
	      00000000G  9F	       03  FB 000E8 	    CALLS   #3, @#SYS$CMKRNL					      ;
	   50	         6E	       36  C1 000EF 	    ADDL3   #54, PACKET, R0					      ; 0496
		  0000G  CF	       60  B0 000F3 	    MOVW    (R0), USER_STATUS+2					      ;
	   50	         6E	       38  C1 000F8 	    ADDL3   #56, PACKET, R0					      ; 0497
		  0000G  CF	       60  D0 000FC 	    MOVL    (R0), USER_STATUS+4					      ;
					   04 00101 	    RET     							      ; 0498
	   50	  0000G  CF 00000000G  8F  C1 00102 9$:     ADDL3   #UCB$L_MT_RECORD, CURRENT_UCB, R0			      ; 0507
	   50	         60	  30   AB  C3 0010C 	    SUBL3   48(CURRENT_VCB), (R0), R0				      ;
	   52	         50	       01  C3 00111 	    SUBL3   #1, R0, BLOCKS1					      ;
				       01  DD 00115 	    PUSHL   #1							      ; 0508
				       01  DD 00117 	    PUSHL   #1							      ;
				       5E  DD 00119 	    PUSHL   SP							      ;
				0000G  CF  9F 0011B 	    PUSHAB  ADJTM						      ;
	      00000000G  9F	       04  FB 0011F 	    CALLS   #4, @#SYS$CMKRNL					      ;
		         7E	  50   8F  9A 00126 	    MOVZBL  #80, -(SP)						      ; 0509
				0000G  CF  DD 0012A 	    PUSHL   HDR1						      ;
		  0000G  CF	       02  FB 0012E 	    CALLS   #2, READ_BLOCK					      ;
		         16	       50  E9 00133 	    BLBC    R0, 10$						      ;
	      31464F45   8F	0000G  DF  D1 00136 	    CMPL    @HDR1, #826691397					      ; 0510
				       0F  13 0013F 	    BEQL    11$							      ;
	      31564F45   8F	0000G  DF  D1 00141 	    CMPL    @HDR1, #827739973					      ; 0511
				       04  13 0014A 	    BEQL    11$							      ;
				0224   8F  BF 0014C 10$:    CHMU    #548						      ;
				  04   AE  9F 00150 11$:    PUSHAB  BLOCKS2						      ; 0516
	   7E	  0000G  CF	       36  C1 00153 	    ADDL3   #54, HDR1, -(SP)					      ;
				       06  DD 00159 	    PUSHL   #6							      ;
	      00000000G  9F	       03  FB 0015B 	    CALLS   #3, @#LIB$CVT_DTB					      ;
		    04   AE	       52  D1 00162 	    CMPL    BLOCKS1, BLOCKS2					      ; 0517
				       11  13 00166 	    BEQL    12$							      ;
		         50	  3C   AB  D0 00168 	    MOVL    60(CURRENT_VCB), R0					      ; 0518
	   51	  010C   C0	       52  C1 0016C 	    ADDL3   BLOCKS1, 268(R0), R1				      ; 0519
    010C   C0	         51	  04   AE  C3 00172 	    SUBL3   BLOCKS2, R1, 268(R0)				      ;
	      31464F45   8F	0000G  DF  D1 00179 12$:    CMPL    @HDR1, #826691397					      ; 0523
				       04  12 00182 	    BNEQ    13$							      ;
				0870   8F  BF 00184 	    CHMU    #2160						      ;
				       6E  DD 00188 13$:    PUSHL   PACKET						      ; 0526
				       01  DD 0018A 	    PUSHL   #1							      ;
				       5E  DD 0018C 	    PUSHL   SP							      ;
				0000V  CF  9F 0018E 	    PUSHAB  INSERT_HEAD						      ;
	      00000000G  9F	       04  FB 00192 	    CALLS   #4, @#SYS$CMKRNL					      ;
				0000G  CF  D4 00199 	    CLRL    IO_PACKET						      ; 0527
				     0000  30 0019D 	    BSBW    NEXT_VOL_READ					      ; 0528
					   04 001A0 	    RET     							      ; 0389

; Routine Size:  417 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:30:53	DBB3:[MTAACP.SRC]ENDVOL.B32;10					Page 3
; Digital Equipment Corporation
;
;	0535	ROUTINE INSERT_HEAD(PACKET) : COMMON_CALL NOVALUE  =
;	0536	
;	0537	!++
;	0538	!
;	0539	! FUNCTIONAL DESCRIPTION:
;	0540	!	THIS ROUTINE INSERTS IO PACKET AT THE HEADER OF THE BLOCKED IO QUEUE
;	0541	!
;	0542	! CALLING SEQUENCE:
;	0543	!	INSERT_HEAD(ARG1), CALLED IN KERNEL MODE
;	0544	!
;	0545	! INPUT PARAMETERS:
;	0546	!	ARG1 - ADDRESS OF IO REQUEST PACKET
;	0547	!
;	0548	! IMPLICIT INPUTS:
;	0549	!	CURRENT_VCB 	- ADDRESS OF CURRENT VOLUME CONTROL BLOCK
;	0550	!
;	0551	! OUTPUT PARAMETERS:
;	0552	!	NONE
;	0553	!
;	0554	! IMPLICIT OUTPUTS:
;	0555	!	NONE
;	0556	!
;	0557	! ROUTINE VALUE:
;	0558	!	NONE
;	0559	!
;	0560	! SIDE EFFECTS:
;	0561	!	PACKET INSERTED AT HEAD OF QUEUE
;	0562	!
;	0563	!--
;	0564	
;	0565	BEGIN
;	0566	
;	0567	EXTERNAL REGISTER
;	0568		COMMON_REG;
;	0569	
;	0570	
;	0571	INSQUE(.PACKET,CURRENT_VCB[VCB$L_BLOCKFL]);		!CLOBBER NMAP UNTIL THIS FUNCTION IS IN DRIVER
;	0572	
;	0573	END;				!END OF ROUTINE





					 0000 001A1 INSERT_HEAD:
							    .WORD   Save nothing					      ; 0535
		         6B	  04   BC  0E 001A3 	    INSQUE  @PACKET, (CURRENT_VCB)				      ; 0571
					   04 001A7 	    RET     							      ; 0535

; Routine Size:  7 bytes


;	0574	

; Bliss-32 7.352	Saturday 21-AUG-1978 23:30:53	DBB3:[MTAACP.SRC]ENDVOL.B32;10					Page 4
; Digital Equipment Corporation
;
;	0575	ROUTINE INSERT_TAIL(PACKET) : COMMON_CALL NOVALUE  =
;	0576	
;	0577	!++
;	0578	!
;	0579	! FUNCTIONAL DESCRIPTION:
;	0580	!	THIS ROUTINE INSERTS THE PACKET IN THE TAIL OF THE BLOCKED IO REQUEST
;	0581	!	QUEUE
;	0582	!
;	0583	! CALLING SEQUENCE:
;	0584	!	INSERT_TAIL(ARG1), CALLED IN KERNEL MODE
;	0585	!
;	0586	! INPUT PARAMETERS:
;	0587	!	NONE
;	0588	!
;	0589	! IMPLICIT INPUTS:
;	0590	!	CURRENT_VCB	- ADDRESS OF CURRENT VOLUME CONTROL BLOCK
;	0591	!
;	0592	! OUTPUT PARAMETERS:
;	0593	!	NONE
;	0594	!
;	0595	! IMPLICIT OUTPUTS:
;	0596	!	NONE
;	0597	!
;	0598	! ROUTINE VALUE:
;	0599	!	NONE
;	0600	!
;	0601	! SIDE EFFECTS:
;	0602	!	NONE
;	0603	!
;	0604	!--
;	0605	
;	0606	BEGIN
;	0607	
;	0608	EXTERNAL REGISTER
;	0609		COMMON_REG;
;	0610	
;	0611	
;	0612	INSQUE(.PACKET,.CURRENT_VCB[VCB$L_BLOCKBL]);
;	0613	END;				!END OF ROUTINE





					 0000 001A8 INSERT_TAIL:
							    .WORD   Save nothing					      ; 0575
		    04   BB	  04   BC  0E 001AA 	    INSQUE  @PACKET, @4(CURRENT_VCB)				      ; 0612
					   04 001AF 	    RET     							      ; 0575

; Routine Size:  8 bytes


;	0614	
;	0615	

; Bliss-32 7.352	Saturday 21-AUG-1978 23:30:53	DBB3:[MTAACP.SRC]ENDVOL.B32;10					Page 5
; Digital Equipment Corporation
;
;	0616	GLOBAL ROUTINE NEXT_VOL_WRITE : L$NEXT_VOL_WRIT NOVALUE  =
;	0617	
;	0618	!++
;	0619	!
;	0620	! FUNCTIONAL DESCRIPTION:
;	0621	!	THIS ROUTINE WRITES END OF VOLUME TRAILERS, GETS THE NEXT VOLUME
;	0622	!	FOR WRITE, WRITES THE HEADERS FOR THIS VOLUME AND STARTS UP VIRTUAL
;	0623	!	IO
;	0624	!
;	0625	! CALLING SEQUENCE:
;	0626	!	NEXT_VOL_WRITE()
;	0627	!
;	0628	! INPUT PARAMETERS:
;	0629	!	NONE
;	0630	!
;	0631	! IMPLICIT INPUTS:
;	0632	!	BLOCKED IO QUEUE
;	0633	!
;	0634	! OUTPUT PARAMETERS:
;	0635	!	NONE
;	0636	!
;	0637	! IMPLICIT OUTPUTS:
;	0638	!	IO REQUEUE TO NEXT VOLUME
;	0639	!
;	0640	! ROUTINE VALUE:
;	0641	!	NONE
;	0642	!
;	0643	! SIDE EFFECTS:
;	0644	!	NONE
;	0645	!
;	0646	! USER ERRORS:
;	0647	!	NONE
;	0648	!
;	0649	!--
;	0650	
;	0651	BEGIN
;	0652	
;	0653	EXTERNAL REGISTER
;	0654		COMMON_REG;
;	0655	
;	0656	
;	0657	WRITE_TRAILERS('V');		!WRITE TRAILERS
;	0658	IF .CURRENT_VCB[VCB$L_USRLBLAST] NEQ 0 THEN
;	0659	    IF KERNEL_CALL(QUEUE_AST) THEN BLOCK(VCB$M_WAIUSRLBL);
;	0660	WRITE_TM();
;	0661	WRITE_TM();
;	0662	GTNEXT_VOL_WRIT();		!GET THE NEXT VOLUME FOR WRITE
;	0663	WRITE_HEADERS();		!WRITE HDR1 AND HDR2
;	0664	IF .CURRENT_VCB[VCB$L_USRLBLAST] NEQ 0 THEN
;	0665	    IF KERNEL_CALL(QUEUE_AST) THEN BLOCK(VCB$M_WAIUSRLBL);
;	0666	WRITE_TM();			!CLOSE OUT HEADER LABEL SET WITH TAPE MARK
;	0667	KERNEL_CALL(START_VIO);		!REQUEUE IO ON NEXT VOLUME
;	0668	
;	0669	END;


; Bliss-32 7.352	Saturday 21-AUG-1978 23:30:53	DBB3:[MTAACP.SRC]ENDVOL.B32;10					Page 5-1
; Digital Equipment Corporation
;




		         7E	  56   8F  9A 001B0 NEXT_VOL_WRITE::
							    MOVZBL  #86, -(SP)						      ; 0657
				     0000  30 001B4 	    BSBW    WRITE_TRAILERS					      ;
		         5E	       04  C0 001B7 	    ADDL2   #4, SP						      ;
				  44   AB  D5 001BA 	    TSTL    68(CURRENT_VCB)					      ; 0658
				       19  13 001BD 	    BEQL    1$							      ;
				       7E  D4 001BF 	    CLRL    -(SP)						      ; 0659
				       5E  DD 001C1 	    PUSHL   SP							      ;
				0000G  CF  9F 001C3 	    PUSHAB  QUEUE_AST						      ;
	      00000000G  9F	       03  FB 001C7 	    CALLS   #3, @#SYS$CMKRNL					      ;
		         07	       50  E9 001CE 	    BLBC    R0, 1$						      ;
				       10  DD 001D1 	    PUSHL   #16							      ;
		  0000G  CF	       01  FB 001D3 	    CALLS   #1, BLOCK						      ;
				     0000  30 001D8 1$:     BSBW    WRITE_TM						      ; 0660
				     0000  30 001DB 	    BSBW    WRITE_TM						      ; 0661
				     0000  30 001DE 	    BSBW    GTNEXT_VOL_WRIT					      ; 0662
				     0000  30 001E1 	    BSBW    WRITE_HEADERS					      ; 0663
				  44   AB  D5 001E4 	    TSTL    68(CURRENT_VCB)					      ; 0664
				       19  13 001E7 	    BEQL    2$							      ;
				       7E  D4 001E9 	    CLRL    -(SP)						      ; 0665
				       5E  DD 001EB 	    PUSHL   SP							      ;
				0000G  CF  9F 001ED 	    PUSHAB  QUEUE_AST						      ;
	      00000000G  9F	       03  FB 001F1 	    CALLS   #3, @#SYS$CMKRNL					      ;
		         07	       50  E9 001F8 	    BLBC    R0, 2$						      ;
				       10  DD 001FB 	    PUSHL   #16							      ;
		  0000G  CF	       01  FB 001FD 	    CALLS   #1, BLOCK						      ;
				     0000  30 00202 2$:     BSBW    WRITE_TM						      ; 0666
				       7E  D4 00205 	    CLRL    -(SP)						      ; 0667
				       5E  DD 00207 	    PUSHL   SP							      ;
				0000G  CF  9F 00209 	    PUSHAB  START_VIO						      ;
	      00000000G  9F	       03  FB 0020D 	    CALLS   #3, @#SYS$CMKRNL					      ;
					   05 00214 	    RSB     							      ; 0616

; Routine Size:  101 bytes


;	0670	

; Bliss-32 7.352	Saturday 21-AUG-1978 23:30:53	DBB3:[MTAACP.SRC]ENDVOL.B32;10					Page 6
; Digital Equipment Corporation
;
;	0671	GLOBAL ROUTINE NEXT_VOL_READ : L$NEXT_VOL_READ NOVALUE  =
;	0672	
;	0673	!++
;	0674	!
;	0675	! FUNCTIONAL DESCRIPTION:
;	0676	!	THIS ROUTINE POSITIONS THE CURRENT VOLUME AT THE VERY END, GETS THE
;	0677	!	NEXT VOLUME FOR READ, VERIFIES THE HEADERS AND STARTS
;	0678	!	UP VIRTUAL IO
;	0679	!
;	0680	! CALLING SEQUENCE:
;	0681	!	NEXT_VOL_READ()
;	0682	!
;	0683	! INPUT PARAMETERS:
;	0684	!	NONE
;	0685	!
;	0686	! IMPLICIT INPUTS:
;	0687	!	BLOCKED IO QUEUE
;	0688	!
;	0689	! OUTPUT PARAMETERS:
;	0690	!	NONE
;	0691	!
;	0692	! IMPLICIT OUTPUTS:
;	0693	!	REQUEUE BLOCKED IO TO NEXT VOLUME
;	0694	!
;	0695	! ROUTINE VALUE:
;	0696	!	NONE
;	0697	!
;	0698	! SIDE EFFECTS:
;	0699	!	NONE
;	0700	!
;	0701	! USER ERRORS:
;	0702	!	NONE
;	0703	!
;	0704	!--
;	0705	
;	0706	BEGIN
;	0707	
;	0708	EXTERNAL REGISTER
;	0709		COMMON_REG;
;	0710	
;	0711	
;	0712	IF .CURRENT_VCB[VCB$L_USRLBLAST] NEQ 0 THEN
;	0713	    IF KERNEL_CALL(QUEUE_AST) THEN BLOCK(VCB$M_WAIUSRLBL);	!ALLOW USER TO READ UTL'S
;	0714	SPACE_TM(IF .CURRENT_VCB[VCB$B_TM] EQL 0 THEN 1 ELSE 2);
;	0715	GTNEXT_VOL_READ();					!GET THE NEXT VOLUME FOR READ
;	0716	IF .CURRENT_VCB[VCB$L_USRLBLAST] NEQ 0 THEN
;	0717	    IF KERNEL_CALL(QUEUE_AST) THEN BLOCK(VCB$M_WAIUSRLBL);	!ALLOW USER TO READ UTL'S
;	0718	IF .CURRENT_VCB[VCB$B_TM] EQL 0 THEN SPACE_TM(1);
;	0719	KERNEL_CALL(START_VIO);					!REQUEUE BLOCKED VIRTUAL IO
;	0720	
;	0721	END;





; Bliss-32 7.352	Saturday 21-AUG-1978 23:30:53	DBB3:[MTAACP.SRC]ENDVOL.B32;10					Page 6-1
; Digital Equipment Corporation
;

				  44   AB  D5 00215 NEXT_VOL_READ::
							    TSTL    68(CURRENT_VCB)					      ; 0712
				       19  13 00218 	    BEQL    1$							      ;
				       7E  D4 0021A 	    CLRL    -(SP)						      ; 0713
				       5E  DD 0021C 	    PUSHL   SP							      ;
				0000G  CF  9F 0021E 	    PUSHAB  QUEUE_AST						      ;
	      00000000G  9F	       03  FB 00222 	    CALLS   #3, @#SYS$CMKRNL					      ;
		         07	       50  E9 00229 	    BLBC    R0, 1$						      ;
				       10  DD 0022C 	    PUSHL   #16							      ;
		  0000G  CF	       01  FB 0022E 	    CALLS   #1, BLOCK						      ;
				  2E   AB  95 00233 1$:     TSTB    46(CURRENT_VCB)					      ; 0714
				       04  12 00236 	    BNEQ    2$							      ;
				       01  DD 00238 	    PUSHL   #1							      ;
				       02  11 0023A 	    BRB     3$							      ;
				       02  DD 0023C 2$:     PUSHL   #2							      ;
		  0000G  CF	       01  FB 0023E 3$:     CALLS   #1, SPACE_TM					      ;
				     0000  30 00243 	    BSBW    GTNEXT_VOL_READ					      ; 0715
				  44   AB  D5 00246 	    TSTL    68(CURRENT_VCB)					      ; 0716
				       19  13 00249 	    BEQL    4$							      ;
				       7E  D4 0024B 	    CLRL    -(SP)						      ; 0717
				       5E  DD 0024D 	    PUSHL   SP							      ;
				0000G  CF  9F 0024F 	    PUSHAB  QUEUE_AST						      ;
	      00000000G  9F	       03  FB 00253 	    CALLS   #3, @#SYS$CMKRNL					      ;
		         07	       50  E9 0025A 	    BLBC    R0, 4$						      ;
				       10  DD 0025D 	    PUSHL   #16							      ;
		  0000G  CF	       01  FB 0025F 	    CALLS   #1, BLOCK						      ;
				  2E   AB  95 00264 4$:     TSTB    46(CURRENT_VCB)					      ; 0718
				       07  12 00267 	    BNEQ    5$							      ;
				       01  DD 00269 	    PUSHL   #1							      ;
		  0000G  CF	       01  FB 0026B 	    CALLS   #1, SPACE_TM					      ;
				       7E  D4 00270 5$:     CLRL    -(SP)						      ; 0719
				       5E  DD 00272 	    PUSHL   SP							      ;
				0000G  CF  9F 00274 	    PUSHAB  START_VIO						      ;
	      00000000G  9F	       03  FB 00278 	    CALLS   #3, @#SYS$CMKRNL					      ;
					   05 0027F 	    RSB     							      ; 0671

; Routine Size:  107 bytes


;	0722	
;	0723	END
;	0724	ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $CODE$         	   640  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)


; Bliss-32 7.352	Saturday 21-AUG-1978 23:30:53	DBB3:[MTAACP.SRC]ENDVOL.B32;10					Page 6-2
; Digital Equipment Corporation
;



;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]LIB.L32;1		      5582        27         0       243





; Size:		640 code + 0 data bytes
; Run Time:	00:16.5
; Elapsed Time:	00:42.8
; Memory Used:	334 pages
; Compilation Complete
