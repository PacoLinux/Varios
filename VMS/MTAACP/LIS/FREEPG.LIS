
; Bliss-32 7.352	Saturday 21-AUG-1978 23:32:29	DBB3:[MTAACP.SRC]FREEPG.B32;3					Page 1
; Digital Equipment Corporation
;
;	0001	MODULE FREEPG (
;	0002			LANGUAGE (BLISS32),
;	0003			IDENT = 'A0001'
;	0004			) =
;	0005	BEGIN
;	0006	
;	0007	!
;	0008	! COPYRIGHT (C) 1977
;	0009	! DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
;	0010	!
;	0011	! THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
;	0012	! COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
;	0013	! ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
;	0014	! MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
;	0015	! EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
;	0016	! TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
;	0017	! REMAIN IN DEC.
;	0018	!
;	0019	! THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
;	0020	! AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
;	0021	! CORPORATION.
;	0022	!
;	0023	! DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
;	0024	! SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
;	0025	
;	0026	!++
;	0027	!
;	0028	! FACILITY:  MTAACP
;	0029	!
;	0030	! ABSTRACT:
;	0031	!	THIS MODULE HANDLES THE REQUESTING AND RETURNING OF VIRTUAL PAGES
;	0032	
;	0033	!
;	0034	! ENVIRONMENT:
;	0035	!
;	0036	!	STARLET OPERATING SYSTEM, INCLUDING PRIVILEGED SYSTEM SERVICES
;	0037	!	AND INTERNAL EXEC ROUTINES.
;	0038	!
;	0039	!--
;	0040	!
;	0041	!
;	0042	! AUTHOR:  D. H. GILLESPIE,	 CREATION DATE:  9-JUN-77  
;	0043	!
;	0044	! REVISION HISTORY:
;	0045	!
;	0046	!   D. H. Gillespie, 12-May-78  13:20
;	0047	!   A0001 - change CURRENT_VCB to a register
;	0048	!
;	0049	!**
;	0050	
;	0051	LIBRARY 'SYS$LIBRARY:LIB.L32';
;	0052	REQUIRE 'SRC$:MTADEF.B32';

; Bliss-32 7.352	Saturday 21-AUG-1978 23:32:29	DBB3:[MTAACP.SRC]FREEPG.B32;3					Page 2
; Digital Equipment Corporation
;
;	0348	GLOBAL ROUTINE GET_FREE_PAGE(PAGES,ADDR) : COMMON_CALL NOVALUE  =
;	0349	
;	0350	!++
;	0351	!
;	0352	! FUNCTIONAL DESCRIPTION:
;	0353	!	THIS ROUTINE GETS THE REQUESTED NUMBER OF CONTIGUOUS PAGES FROM
;	0354	!	THE FREE PAGE LIST.  IF NONE ARE AVAILABLE, IT EXPANDS VIRTUAL MEMORY.
;	0355	!
;	0356	! CALLING SEQUENCE:
;	0357	!	GET_FREE_PAGE(ARG1,ARG2)
;	0358	!
;	0359	! INPUT PARAMETERS:
;	0360	!	ARG1 - NUMBER OF PAGES
;	0361	!	ARG2 - ADDRESS OF LONG WORD IN WHICH TO RETURN ADDRESS OF FREE PAGE
;	0362	!
;	0363	! IMPLICIT INPUTS:
;	0364	!	FREE_PAGE_HEAD - HEAD OF FREE_PAGE LIST
;	0365	!	LAST_PAGE - LAST PAGE OF VIRTUAL MEMORY
;	0366	!
;	0367	! OUTPUT PARAMETERS:
;	0368	!	ARG2 - ADDRESS OF LONG WORD IN WHICH TO RETURN ADDRESS OF FREE PAGE
;	0369	!
;	0370	! IMPLICIT OUTPUTS:
;	0371	!	NONE
;	0372	!
;	0373	! ROUTINE VALUE:
;	0374	!	NONE
;	0375	!
;	0376	! SIDE EFFECTS:
;	0377	!	NONE
;	0378	!
;	0379	!--
;	0380	
;	0381	BEGIN
;	0382	
;	0383	EXTERNAL REGISTER
;	0384		COMMON_REG;
;	0385	
;	0386	EXTERNAL
;	0387		FREE_PAGE_HEAD:	REF BBLOCK,		!FREE PAGE LIST HEAD
;	0388		LAST_PAGE;				!ADDRESS OF LAST PAGE
;	0389	
;	0390	EXTERNAL ROUTINE
;	0391		SYS$EXPREG:	ADDRESSING_MODE(ABSOLUTE);	!EXPAND REGION
;	0392	
;	0393	LOCAL
;	0394		SIZE,					!NUMBER OF BYTES REQUESTED
;	0395		FPAGE:		VECTOR [2],		!PAGE REFERENCES
;	0396		TOOBIG:		REF BBLOCK;		!ADDRESS OF SPACE WHICH IS BIGGER THAN NEED BE
;	0397	
;	0398	BIND
;	0399		FREEPAGE = FPAGE : REF BBLOCK,
;	0400		ENDADDR  = FPAGE[1];
;	0401	
;	0402	! SCANE FREE PAGE LIST FOR SPECIFIED NUMBER OF PAGES

; Bliss-32 7.352	Saturday 21-AUG-1978 23:32:29	DBB3:[MTAACP.SRC]FREEPG.B32;3					Page 2-1
; Digital Equipment Corporation
;
;	0403	TOOBIG = 0;					!INITIALIZE
;	0404	SIZE = 512 * .PAGES;				!NUMBER OF BYTES REQUESTED
;	0405	FREEPAGE = .FREE_PAGE_HEAD;			!PICKUP FIRST FREE PAGE
;	0406	
;	0407	WHILE .FREEPAGE NEQA FREE_PAGE_HEAD DO
;	0408	    BEGIN
;	0409	    IF .SIZE EQLU .FREEPAGE[FVP$W_SIZE]
;	0410	    THEN
;	0411		BEGIN
;	0412		REMQUE(.FREEPAGE,.ADDR);		!TAKE OUT OF FREE PAGE LIST
;	0413		RETURN;
;	0414		END;
;	0415	    IF .SIZE LSSU .FREEPAGE[FVP$W_SIZE]			!IS THIS SPACE TOO BIG
;	0416	    THEN IF .TOOBIG EQLA 0 THEN TOOBIG = .FREEPAGE;	!IF SO, REMEMBER IT
;	0417	    FREEPAGE = .FREEPAGE[FVP$L_FORWARD];
;	0418	    END;
;	0419	
;	0420	! IF THERE IS ENTRY THAT IS TOO BIG, LEAVE IT IN THE FREE PAGE LIST
;	0421	! BUT MAKE IT SMALLER AND USE THE END OF THE BLOCK TO SATISFY THE REQUEST
;	0422	IF .TOOBIG NEQ 0
;	0423	THEN
;	0424	    BEGIN
;	0425	    TOOBIG[FVP$W_SIZE] = .TOOBIG[FVP$W_SIZE] - .SIZE;
;	0426	    FREEPAGE = .TOOBIG + .TOOBIG[FVP$W_SIZE];
;	0427	    END
;	0428	ELSE
;	0429	    BEGIN
;	0430	    IF NOT SYS$EXPREG(.PAGES,FREEPAGE,EXEC_MODE,0)
;	0431	    THEN ERR_EXIT(SS$_ACPVAFUL);
;	0432	    LAST_PAGE = .ENDADDR;
;	0433	    END;
;	0434	.ADDR = .FREEPAGE;
;	0435	FREEPAGE[FVP$W_SIZE] = .SIZE;
;	0436	END;						!END OF ROUTINE


							    .TITLE  FREEPG
							    .IDENT  \A0001\

							    .GLOBL  FREE_PAGE_HEAD, LAST_PAGE, SYS$EXPREG

							    .PSECT  $CODE$,NOWRT,2

					 000C 00000 	    .ENTRY  GET_FREE_PAGE, Save R2,R3				      ; 0348
		         5E	       04  C2 00002 	    SUBL2   #4, SP						      ;
				       50  D4 00005 	    CLRL    TOOBIG						      ; 0403
	   53	    04   AC	       09  78 00007 	    ASHL    #9, PAGES, SIZE					      ; 0404
				0000G  CF  DD 0000C 	    PUSHL   FREE_PAGE_HEAD					      ; 0405
		         51	       6E  D0 00010 1$:     MOVL    FREEPAGE, R1					      ; 0407
		         52	0000G  CF  9E 00013 	    MOVAB   FREE_PAGE_HEAD, R2					      ;
		         52	       51  D1 00018 	    CMPL    R1, R2						      ;
				       24  13 0001B 	    BEQL    4$							      ;
      08   A1	         10	       00  ED 0001D 	    CMPZV   #0, #16, 8(R1), SIZE				      ; 0409
				       53     00022									      ;
				       05  12 00023 	    BNEQ    2$							      ;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:32:29	DBB3:[MTAACP.SRC]FREEPG.B32;3					Page 2-2
; Digital Equipment Corporation
;
		    08   BC	       61  0F 00025 	    REMQUE  (R1), @ADDR						      ; 0412
					   04 00029 	    RET     							      ; 0413
		         51	       6E  D0 0002A 2$:     MOVL    FREEPAGE, R1					      ; 0415
      08   A1	         10	       00  ED 0002D 	    CMPZV   #0, #16, 8(R1), SIZE				      ;
				       53     00032									      ;
				       07  1B 00033 	    BLEQU   3$							      ;
				       50  D5 00035 	    TSTL    TOOBIG						      ; 0416
				       03  12 00037 	    BNEQ    3$							      ;
		         50	       51  D0 00039 	    MOVL    R1, TOOBIG						      ;
		         6E	       61  D0 0003C 3$:     MOVL    (R1), FREEPAGE					      ; 0417
				       CF  11 0003F 	    BRB     1$							      ; 0407
				       50  D5 00041 4$:     TSTL    TOOBIG						      ; 0422
				       0E  13 00043 	    BEQL    5$							      ;
		    08   A0	       53  A2 00045 	    SUBW2   SIZE, 8(TOOBIG)					      ; 0425
		         51	  08   A0  3C 00049 	    MOVZWL  8(TOOBIG), R1					      ; 0426
	   6E	         50	       51  C1 0004D 	    ADDL3   R1, TOOBIG, FREEPAGE				      ;
				       1D  11 00051 	    BRB     7$							      ; 0422
		         7E	       01  7D 00053 5$:     MOVQ    #1, -(SP)						      ; 0430
				  08   AE  9F 00056 	    PUSHAB  FREEPAGE						      ; 0348
				  04   AC  DD 00059 	    PUSHL   PAGES						      ; 0430
	      00000000G  9F	       04  FB 0005C 	    CALLS   #4, @#SYS$EXPREG					      ;
		         04	       50  E8 00063 	    BLBS    R0, 6$						      ;
				02FC   8F  BF 00066 	    CHMU    #764						      ; 0431
		  0000G  CF	  04   AE  D0 0006A 6$:     MOVL    ENDADDR, LAST_PAGE					      ; 0432
		         50	       6E  D0 00070 7$:     MOVL    FREEPAGE, R0					      ; 0434
		    08   BC	       50  D0 00073 	    MOVL    R0, @ADDR						      ;
		    08   A0	       53  B0 00077 	    MOVW    SIZE, 8(R0)						      ; 0435
					   04 0007B 	    RET     							      ; 0348

; Routine Size:  124 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:32:29	DBB3:[MTAACP.SRC]FREEPG.B32;3					Page 3
; Digital Equipment Corporation
;
;	0437	GLOBAL ROUTINE RET_FREE_PAGE(ADDR) : COMMON_CALL NOVALUE  =
;	0438	
;	0439	!++
;	0440	!
;	0441	! FUNCTIONAL DESCRIPTION:
;	0442	!	THIS ROUTINE RETURNS A BLOCK OF CONTIGUOUS PAGES TO THE FREE PAGE LIST.
;	0443	!	IF THE PAGE IS THE LAST PAGE OF VIRTUAL MEMORY, THEN THE PROGRAM SECTION IS
;	0444	!	CONTRACTED.  SPACE IS PUT BACK SO THAT THE HIGHEST ADDRESS
;	0445	!	IS AT THE TAIL OF THE QUEUE.  CONTIGUOUS MEMORY IS REPRESENTED BY ONE
;	0446	!	FREE PAGE BLOCK.
;	0447	!
;	0448	! CALLING SEQUENCE:
;	0449	!	RET_FREE_PAGE(ARG1)
;	0450	!
;	0451	! INPUT PARAMETERS:
;	0452	!	ARG1 - ADDRESS OF BLOCK TO RETURN
;	0453	!
;	0454	! IMPLICIT INPUTS:
;	0455	!	THE SIZE OF THE BLOCK TO BE RETURNED IS CONTAINED IN THE BLOCK
;	0456	!	STRUCTURE.
;	0457	!
;	0458	! OUTPUT PARAMETERS:
;	0459	!	NONE
;	0460	!
;	0461	! IMPLICIT OUTPUTS:
;	0462	!	IF VIRTUAL MEMORY IS CONTRACTED, LAST_PAGE IS UPDATED
;	0463	!
;	0464	! ROUTINE VALUE:
;	0465	!	NONE
;	0466	!
;	0467	! SIDE EFFECTS:
;	0468	!	NONE
;	0469	!
;	0470	!--
;	0471	
;	0472	BEGIN
;	0473	
;	0474	EXTERNAL REGISTER
;	0475		COMMON_REG;
;	0476	
;	0477	EXTERNAL
;	0478		FREE_PAGE_HEAD:	REF BBLOCK,		!ADDRESS OF FREE PAGE LIST HEAD
;	0479		LAST_PAGE;				!ADDRESS OF LAST PAGE OF VIRTUAL MEMORY
;	0480	
;	0481	EXTERNAL ROUTINE
;	0482		SYS$CNTREG:	ADDRESSING_MODE(ABSOLUTE);
;	0483	
;	0484	MAP
;	0485		ADDR:		REF BBLOCK;		!ADDRESS OF VIRTUAL MEMORY TO RETURN
;	0486	
;	0487	LOCAL
;	0488		FREEPAGE:	REF BBLOCK,		!ADDRESS OF FREE BLOCK
;	0489		NEXTPAGE:	REF BBLOCK;		!ADDRESS OF NEXT PAGE
;	0490	
;	0491	! MAKE THIS BLOCK A FREE BLOCK

; Bliss-32 7.352	Saturday 21-AUG-1978 23:32:29	DBB3:[MTAACP.SRC]FREEPG.B32;3					Page 3-1
; Digital Equipment Corporation
;
;	0492	ADDR[FVP$B_TYPE] = FVP_TYPE;
;	0493	
;	0494	! SEARCH BACKWARDS THROUGH FREEPAGE QUEUE.  INSERT THIS PAGE SO THAT THE
;	0495	! HIGHEST ADDRESS IS AT THE END OF THE QUEUE AND ALL OTHERS ARE SORTED.
;	0496	FREEPAGE = .(FREE_PAGE_HEAD + 4);
;	0497	WHILE .FREEPAGE NEQA FREE_PAGE_HEAD DO
;	0498	    BEGIN
;	0499	    IF .ADDR GTRA .FREEPAGE THEN EXITLOOP;
;	0500	    FREEPAGE = .FREEPAGE[FVP$L_BACKWARD];
;	0501	    END;						!END OF WHILE
;	0502	
;	0503	! THE PREVIOUS ENTRY HAS BEEN FOUND OR
;	0504	! MAY HAVE EITHER NO ENTRIES IN QUEUE OR THIS IS THE LOWEST ADDRESS
;	0505	NEXTPAGE = .FREEPAGE;					!PREVIOUS OR HEAD OF LIST
;	0506	IF .NEXTPAGE NEQA FREE_PAGE_HEAD 			!IF NOT HEAD OF LIST
;	0507	THEN NEXTPAGE = .FREEPAGE[FVP$W_SIZE] + .NEXTPAGE;	!CALCULATE NEXT ENTRY ADDR
;	0508	
;	0509	IF .NEXTPAGE EQLA .ADDR
;	0510	THEN
;	0511	    BEGIN
;	0512	    FREEPAGE[FVP$W_SIZE] = .FREEPAGE[FVP$W_SIZE] + .ADDR[FVP$W_SIZE];
;	0513	    END
;	0514	ELSE							!IF NOT CONTIGUOUS
;	0515	    BEGIN
;	0516	    INSQUE(.ADDR,.FREEPAGE);				!PUT IN QUEUE
;	0517	    FREEPAGE = .ADDR;					!PT AT NEW ENTRY
;	0518	    END;
;	0519	
;	0520	! NOW IF ENTRY CONTIGUOUS WITH NEXT ONE, MERGE THEM
;	0521	NEXTPAGE = .FREEPAGE + .FREEPAGE[FVP$W_SIZE];
;	0522	IF .NEXTPAGE EQLA .FREEPAGE[FVP$L_FORWARD]	 	!IS IT CONTIGUOUS WITH NEXT ENTRY?
;	0523	THEN
;	0524	    BEGIN						!YES
;	0525	    REMQUE(.FREEPAGE[FVP$L_FORWARD],NEXTPAGE);		!REMOVE NEXT ENTRY FROM QUEUE
;	0526	    FREEPAGE[FVP$W_SIZE] = .FREEPAGE[FVP$W_SIZE] + .NEXTPAGE[FVP$W_SIZE];	!INC SIZE OF CURRENT ENTRY
;	0527	    END;
;	0528	
;	0529	! NOW CHECK IF THE LAST PAGE HAS BEEN RETURNED AND IF SO GIVE IT BACK
;	0530	FREEPAGE = .(FREE_PAGE_HEAD+4);				!GET TAIL OR HIGHEST FREE ADDRESS 
;	0531	NEXTPAGE = .FREEPAGE + .FREEPAGE[FVP$W_SIZE] - 1;	!LAST FREE PAGE
;	0532	IF .NEXTPAGE EQLA .LAST_PAGE
;	0533	THEN
;	0534	    BEGIN
;	0535	! UPDATE LAST_PAGE AND REMOVE LAST ENTRY FROM QUEUE
;	0536	    LAST_PAGE = .FREEPAGE - 1;
;	0537	    REMQUE(.FREEPAGE,FREEPAGE);
;	0538	! FIRST GIVE BACK THE SPACE TO THE PROGRAM REGION
;	0539	    NEXTPAGE = .FREEPAGE[FVP$W_SIZE] / 512;		!NUMBER OF PAGES TO GIVE BACK
;	0540	    IF NOT SYS$CNTREG(.NEXTPAGE,0,EXEC_MODE,0)
;	0541	    THEN BUG_CHECK(ACPVAFAIL);
;	0542	
;	0543	    END;
;	0544	
;	0545	END;							!END OF ROUTINE


; Bliss-32 7.352	Saturday 21-AUG-1978 23:32:29	DBB3:[MTAACP.SRC]FREEPG.B32;3					Page 3-2
; Digital Equipment Corporation
;


							    .PSECT  $LOCKEDC2$,NOWRT,2

					      00000 P.AAA:  .WORD   0, -257						      ;
					      00004 	    .WORD    <BUG$_ACPVAFAIL!4>					      ;
					      00006	    .BLKB   2

							    .GLOBL  SYS$CNTREG, BUG$_ACPVAFAIL

							    .PSECT  $CODE$,NOWRT,2

					 040C 0007C 	    .ENTRY  RET_FREE_PAGE, Save R2,R3,R10			      ; 0437
		         5A	0000G  CF  9E 0007E 	    MOVAB   FREE_PAGE_HEAD+4, R10				      ;
		         51	  04   AC  D0 00083 	    MOVL    ADDR, R1						      ; 0492
		    0A   A1	       01  90 00087 	    MOVB    #1, 10(R1)						      ;
		         50	       6A  D0 0008B 	    MOVL    FREE_PAGE_HEAD+4, FREEPAGE				      ; 0496
		         52	  FC   AA  9E 0008E 1$:     MOVAB   FREE_PAGE_HEAD, R2					      ; 0497
		         52	       50  D1 00092 	    CMPL    FREEPAGE, R2					      ;
				       0B  13 00095 	    BEQL    2$							      ;
		         50	       51  D1 00097 	    CMPL    R1, FREEPAGE					      ; 0499
				       06  1A 0009A 	    BGTRU   2$							      ;
		         50	  04   A0  D0 0009C 	    MOVL    4(FREEPAGE), FREEPAGE				      ; 0500
				       EC  11 000A0 	    BRB     1$							      ; 0497
		         52	       50  D0 000A2 2$:     MOVL    FREEPAGE, NEXTPAGE					      ; 0505
		         53	  FC   AA  9E 000A5 	    MOVAB   FREE_PAGE_HEAD, R3					      ; 0506
		         53	       52  D1 000A9 	    CMPL    NEXTPAGE, R3					      ;
				       07  13 000AC 	    BEQL    3$							      ;
		         53	  08   A0  3C 000AE 	    MOVZWL  8(FREEPAGE), R3					      ; 0507
		         52	       53  C0 000B2 	    ADDL2   R3, NEXTPAGE					      ;
		         51	       52  D1 000B5 3$:     CMPL    NEXTPAGE, R1					      ; 0509
				       07  12 000B8 	    BNEQ    4$							      ;
		    08   A0	  08   A1  A0 000BA 	    ADDW2   8(R1), 8(FREEPAGE)					      ; 0512
				       07  11 000BF 	    BRB     5$							      ; 0509
		         60	       61  0E 000C1 4$:     INSQUE  (R1), (FREEPAGE)					      ; 0516
		         50	  04   AC  D0 000C4 	    MOVL    ADDR, FREEPAGE					      ; 0517
		         52	  08   A0  3C 000C8 5$:     MOVZWL  8(FREEPAGE), NEXTPAGE				      ; 0521
		         52	       50  C0 000CC 	    ADDL2   FREEPAGE, NEXTPAGE					      ;
		         60	       52  D1 000CF 	    CMPL    NEXTPAGE, (FREEPAGE)				      ; 0522
				       09  12 000D2 	    BNEQ    6$							      ;
		         52	  00   B0  0F 000D4 	    REMQUE  @0(FREEPAGE), NEXTPAGE				      ; 0525
		    08   A0	  08   A2  A0 000D8 	    ADDW2   8(NEXTPAGE), 8(FREEPAGE)				      ; 0526
		         50	       6A  D0 000DD 6$:     MOVL    FREE_PAGE_HEAD+4, FREEPAGE				      ; 0530
		         51	  08   A0  3C 000E0 	    MOVZWL  8(FREEPAGE), R1					      ; 0531
		         51	       50  C0 000E4 	    ADDL2   FREEPAGE, R1					      ;
	   52	         51	       01  C3 000E7 	    SUBL3   #1, R1, NEXTPAGE					      ;
		  0000G  CF	       52  D1 000EB 	    CMPL    NEXTPAGE, LAST_PAGE					      ; 0532
				       2A  12 000F0 	    BNEQ    7$							      ;
    0000G  CF	         50	       01  C3 000F2 	    SUBL3   #1, FREEPAGE, LAST_PAGE				      ; 0536
		         50	       60  0F 000F8 	    REMQUE  (FREEPAGE), FREEPAGE				      ; 0537
		         52	  08   A0  3C 000FB 	    MOVZWL  8(FREEPAGE), NEXTPAGE				      ; 0539
		         52 00000200   8F  C6 000FF 	    DIVL2   #512, NEXTPAGE					      ;
		         7E	       01  7D 00106 	    MOVQ    #1, -(SP)						      ; 0540
				       7E  D4 00109 	    CLRL    -(SP)						      ;
				       52  DD 0010B 	    PUSHL   NEXTPAGE						      ;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:32:29	DBB3:[MTAACP.SRC]FREEPG.B32;3					Page 3-3
; Digital Equipment Corporation
;
	      00000000G  9F	       04  FB 0010D 	    CALLS   #4, @#SYS$CNTREG					      ;
		         05	       50  E8 00114 	    BLBS    R0, 7$						      ;
		  0000'  CF	       00  FB 00117 	    CALLS   #0, P.AAA						      ; 0541
					   04 0011C 7$:     RET     							      ; 0437

; Routine Size:  161 bytes


;	0546	
;	0547	END
;	0548	ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $CODE$         	   285  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $LOCKEDC2$     	     8  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]LIB.L32;1		      5582         7         0       225





; Size:		285 code + 8 data bytes
; Run Time:	00:09.6
; Elapsed Time:	00:25.4
; Memory Used:	285 pages
; Compilation Complete
