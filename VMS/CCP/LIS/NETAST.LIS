NETAST          - PROCESS AST'S                                  22-AUG-1978 00:46:55   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)    3700  HISTORY
   (1)    4500  DECLARATIONS
   (1)   11100  PROCESS AST'S FROM ALL OVER
   (1)   23300  INCOMING MESSAGE PREPROCESSING
NETAST          - PROCESS AST'S                                  22-AUG-1978 00:46:55   VAX-11 MACRO X0.3-11               Page   1
X01                                                                                                                              (1)

                                     0000   100 
                                     0000   200 	.TITLE	NETAST - PROCESS AST'S
                                     0000   300 	.IDENT	/X01/
                                     0000   400 
                                     0000   500 ;
                                     0000   600 ; COPYRIGHT (C) 1977, 1978
                                     0000   700 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000   800 ;
                                     0000   900 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000  1000 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000  1100 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000  1200 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000  1300 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000  1400 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000  1500 ; REMAIN IN DEC.
                                     0000  1600 ;
                                     0000  1700 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000  1800 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000  1900 ; CORPORATION.
                                     0000  2000 ;
                                     0000  2100 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000  2200 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000  2300 
                                     0000  2400 ;++
                                     0000  2500 ; FACILITY:	NETWORK ACP
                                     0000  2600 ;
                                     0000  2700 ; ABSTRACT:
                                     0000  2800 ;	THIS MODULE SERVICES AST'S.  A CONTROL BLOCK IS PASSED
                                     0000  2900 ;	INDICATING WHAT EVENT OCCURRED AND INCLUDING ANY
                                     0000  3000 ;	PERTINENT DATA.
                                     0000  3100 ;
                                     0000  3200 ; ENVIRONMENT:
                                     0000  3300 ;	MODE = KERNEL
                                     0000  3400 ;
                                     0000  3500 ;--
NETAST          - PROCESS AST'S                                  22-AUG-1978 00:46:55   VAX-11 MACRO X0.3-11               Page   2
X01             HISTORY                                                                                                          (1)

                                     0000  3700 	.SBTTL	HISTORY
                                     0000  3800 ; AUTHOR:	SCOTT G. DAVIS, CREATION DATE:10-JUN-77
                                     0000  3900 ;
                                     0000  4000 ; MODIFIED BY:
                                     0000  4100 ;
                                     0000  4200 ;	, : VERSION
                                     0000  4300 ; 01	- 
NETAST          - PROCESS AST'S                                  22-AUG-1978 00:46:55   VAX-11 MACRO X0.3-11               Page   3
X01             DECLARATIONS                                                                                                     (1)

                                     0000  4500 	.SBTTL	DECLARATIONS
                                     0000  4600 ;
                                     0000  4700 ; INCLUDE FILES:
                                     0000  4800 ;
                                     0000  4900 	$CXBDEF
                                     0000  5000 	$DYNDEF
                                     0000  5100 	$NDBDEF
                                     0000  5200 	$NETMSGDEF
                                     0000  5300 	$SSBDEF
                                     0000  5400 	$UCBDEF
                                     0000  5500 
                                     0000  5600 ;
                                     0000  5700 ; MACROS:
                                     0000  5800 ;
                                     0000  5900 	.MACRO	EVT	ARG
                                     0000  6000 		.IF B	ARG
                                     0000  6100 		.BYTE	0
                                     0000  6200 		.IFF
                                     0000  6300 		.BYTE	NET$C_EV_'ARG
                                     0000  6400 		.ENDC
                                     0000  6500 	.ENDM
                                     0000  6600 
                                     0000  6700 ;
                                     0000  6800 ; EQUATED SYMBOLS:
                                     0000  6900 ;
                                     0000  7000 
                                     0000  7100 ;
                                     0000  7200 ; OWN STORAGE:
                                     0000  7300 ;
                                 00000000  7400 	.PSECT	NET_PURE,NOWRT,NOEXE
                                     0000  7500 EVENTS:					; TABLE OF EVENT CODES FOR MSGS
                                     0000  7600 	EVT	MDAT			; NORMAL DATA MESSAGE
                                     0001  7700 	EVT	MACKD			; ACK OF DATA MSG
                                 FF  0002  7800 	.BYTE	-1			; NOP MSG - SPECIAL CASE
                                     0003  7900 	EVT
                                     0004  8000 	EVT	MLS			; LINK SERVICES MESSAGE
                                     0005  8100 	EVT	MACKI			; ACK OF INT OR LS MSG
                                     0006  8200 	EVT	MCI			; CONNECT INITIATE
                                     0007  8300 	EVT
                                     0008  8400 	EVT	MBOM			; BEGINNING OF MESSAGE DATA SEGMENT
                                     0009  8500 	EVT
                                     000A  8600 	EVT	MCC			; CONNECT CONFIRM
                                     000B  8700 	EVT
                                     000C  8800 	EVT	MINTR			; INTERRUPT MESSAGE
                                     000D  8900 	EVT
                                     000E  9000 	EVT	MDI			; DISCONNECT INITIATE
                                     000F  9100 	EVT
                                     0010  9200 	EVT	MEOM			; END OF MESSAGE DATA SEGMENT
                                     0011  9300 	EVT
                                     0012  9400 	EVT	MDC			; DISCONNECT CONFIRM
                                     0013  9500 	EVT
                                     0014  9600 	EVT
                                     0015  9700 	EVT
                                     0016  9800 	EVT	NSPNOD			; NODE STARTUP MSG
                                     0017  9900 	EVT
                                     0018 10000 	EVT	MBEOM			; BEG AND END OF MSG SEGMENT
                                     0019 10100 	EVT
NETAST          - PROCESS AST'S                                  22-AUG-1978 00:46:55   VAX-11 MACRO X0.3-11               Page   4
X01             DECLARATIONS                                                                                                     (1)

                                     001A 10200 	EVT
                                     001B 10300 	EVT
                                     001C 10400 	EVT
                                     001D 10500 	EVT
                                     001E 10600 	EVT
                                     001F 10700 	EVT
                                     0020 10800 
                                 00000000 10900 	.PSECT	NET_CODE,NOWRT
NETAST          - PROCESS AST'S                                  22-AUG-1978 00:46:55   VAX-11 MACRO X0.3-11               Page   5
X01             PROCESS AST'S FROM ALL OVER                                                                                      (1)

                                     0000 11100 	.SBTTL	PROCESS AST'S FROM ALL OVER
                                     0000 11200 ;++
                                     0000 11300 ; NET$LOCAL_AST - SERVICE LOCAL NSP QUEUE
                                     0000 11400 ; NET$XMT_AST - A CONTROL OR DATA MESSAGE HAS BEEN TRANSMITTED
                                     0000 11500 ; NET$PHYLK_SERV - COMPLETE PHYLK AST SERVICE
                                     0000 11600 ; NET$PROCESS_MSG - COMMON NSP MESSAGE PROCESSING
                                     0000 11700 ;
                                     0000 11800 ; FUNCTIONAL DESCRIPTION:
                                     0000 11900 ;	WHENEVER THERE IS INFORMATION FOR NSP, IT IS PLACED
                                     0000 12000 ;	IN A QUEUE AND SOME SORT OF AST OCCURS.  EVENTUALLY, ALL MESSAGES
                                     0000 12100 ;	END UP IN THE NSP Q AND ARE PROCESSED BECAUSE:
                                     0000 12200 ;
                                     0000 12300 ;	1. MESSAGE HAS ARRIVED FROM PARTNER
                                     0000 12400 ;	2. DATA MESSAGE HAS BEEN TRANSMITTED TO PARTNER (ACK REQUIRED)
                                     0000 12500 ;	3. CONTROL MESSAGE HAS BEEN TRANSMITTED TO PARTNER (NO ACK REQUIRED)
                                     0000 12600 ;
                                     0000 12700 ;--
                                     0000 12800 ;
                               0000  0000 12900 NET$LOCAL_AST::	.WORD	0		; ENTRY POINT
                          3F     11  0002 13000 	BRB	AST_LOOP		; GO TO COMMON CODE
                                     0004 13100 
                               0000  0004 13200 NET$XMT_AST::	.WORD	0		; ENTRY POINT
            5B         04 AC     D0  0006 13300 	MOVL	4(AP),R11		; GET THE MESSAGE ADDRESS
                          3E     11  000A 13400 	BRB	GOT_MSG_OUT		; PROCESS IT
                                     000C 13500 
                               0000  000C 13600 NET$RCV_AST::	.WORD	0		; ENTRY POINT
            50         04 AC     D0  000E 13700 	MOVL	4(AP),R0		; GET THE AST ADDRESS
                                     0012 13800 	$QIO_S	CHAN= NDB$W_CHANNEL-NDB$Q_AST(R0),- ; RE-ENABLE AST
                                     0012 13900 		FUNC=#IO$_SETMODE!IO$M_ATTNAST,- ; RE-ENABLE AST
                                     0012 14000 		P1=(R0)			;
            10            50     E8  0030 14100 	BLBS	R0,30$			; IF LBS OK
            00'           50     B1  0033 14200 	CMPW	R0,S^#SS$_NOPRIV	; WAS THERE A RACE IN DEASSIGNING THE CHANNEL?
                          0B     13  0036 14300 	BEQL	30$			; IF EQL YES - IGNORE THE ERROR
       0000'8F            50     B1  0038 14400 	CMPW	R0,#SS$_IVCHAN		; WAS THERE A RACE IN DEASSIGNING THE CHANNEL?
                          04     13  003D 14500 	BEQL	30$			; IF EQL YES - IGNORE THE ERROR
                                     003F 14600 	BUG_CHECK	NETSYSSRV,FATAL	; BAD QIO
                                     0043 14700 30$:
                                     0043 14800 					; FALL THROUGH TO PROCESS MESSAGES
                                     0043 14900 
                                     0043 15000 AST_LOOP:
            5B       0000'DF     0F  0043 15100 	REMQUE	@W^NET$GL_NSPQFL,R11	; REMOVE QUEUE ENTRY
                          2A     1D  0048 15200 	BVS	AST_DONE		; IF VS NONE
                                     004A 15300 GOT_MSG_OUT:
                                     004A 15400 ;
                                     004A 15500 ; MAKE SURE THAT THE BLOCK TYPE IS REASONABLE
                                     004A 15600 ;
            1B         0A AB     91  004A 15700 	CMPB	CXB$B_TYPE(R11),#DYN$C_CXB ; IS IT FROM ME?
                          06     13  004E 15800 	BEQL	10$			; IF EQL YES
            17         0A AB     91  0050 15900 	CMPB	CXB$B_TYPE(R11),#DYN$C_NET ; IS IT FROM PHYLK?
                          1A     12  0054 16000 	BNEQ	20$			; IF NEQ NO - BUG!
                                     0056 16100 10$:
       0000'CF            5B     D0  0056 16200 	MOVL	R11,W^NET$GL_DEALLOC	; SAVE ADDRESS FOR DEALLOCATION
       0000'CF         10 AB     B0  005B 16300 	MOVW	CXB$W_CHANNEL(R11),W^NET$GW_CHANNEL ; GET THE CHANNEL NUMBER
                          60     10  0061 16400 	BSBB	NET$FND_NDB_CHN		; FIND THE CORRESPONDING NDB
                                     0063 16500 
                                     0063 16600 	ASSUME	CXB$C_DDCCON EQ 1
                                     0063 16700 	ASSUME	CXB$C_DDCDAT EQ 2
NETAST          - PROCESS AST'S                                  22-AUG-1978 00:46:55   VAX-11 MACRO X0.3-11               Page   6
X01             PROCESS AST'S FROM ALL OVER                                                                                      (1)

                                     0063 16800 
                                     0063 16900 	CASE	CXB$B_CODE(R11),LIMIT=#CXB$C_DDCCON,TYPE=B,<- ; DISPATCH ON BLOCK TYPE
                                     0063 17000 		MSG_OUT,-		; CONTROL MSG OUT OR DATA MSG GONE FROM WACKQ
                                     0063 17100 		MSG_OUT,-		; DATA MSG OUT
                                     0063 17200 		MSG_IN,-		; MSG RCVD FROM PHYLK
                                     0063 17300 		LINK_ERROR,-		; LINK ERROR
                                     0063 17400 >
                                     0070 17500 20$:
                                     0070 17600 	BUG_CHECK	BADBUFTYP,FATAL	; ILLEGAL CXB CODE OR BLOCK TYPE
                                     0074 17700 AST_DONE:
                     0000'CF     94  0074 17800 	CLRB	W^NET$GB_AST_FLAG	; DON'T NEED ANY MORE AST'S, THANK YOU
                                 04  0078 17900 	RET				; THAT IS ALL
                                     0079 18000 
                                     0079 18100 LINK_ERROR:
                          FF84'  30  0079 18200 	BSBW	NET$PHYLK_ERROR		; PROCESS THE ERROR
                          C5     11  007C 18300 	BRB	AST_LOOP		; LOOP
NETAST          - PROCESS AST'S                                  22-AUG-1978 00:46:55   VAX-11 MACRO X0.3-11               Page   7
X01             PROCESS AST'S FROM ALL OVER                                                                                      (1)

                                     007E 18500 ;
                                     007E 18600 ; A CONTROL OR DATA MESSAGE HAS BEEN TRANSMITTED
                                     007E 18700 ;
                                     007E 18800 MSG_OUT:
                       14 AB     DD  007E 18900 	PUSHL	CXB$L_SSB(R11)		; SAVE SSB ADDRESS (IF ANY)
                       0B AB     97  0081 19000 	DECB	CXB$B_CODE(R11)		; TIME TO DEALLOCATE?
                          03     12  0084 19100 	BNEQ	10$			; IF NEQ NO
                          FF77'  30  0086 19200 	BSBW	NET$DEALLOC_BUF		; DEALLOCATE THE BUFFER
                                     0089 19300 10$:
                     0000'CF     D4  0089 19400 	CLRL	W^NET$GL_DEALLOC	; THIS CXB IS NOT TO BE REUSED
                          52   8ED0  008D 19500 	POPL	R2			; RESTORE SSB ADDRESS AND SET CONDITION CODES
                          B1     13  0090 19600 	BEQL	AST_LOOP		; IF EQL NO SSB
            1D         0A A2     91  0092 19700 	CMPB	SSB$B_TYPE(R2),#DYN$C_SSB ; IS IT AN SSB?
                          AB     12  0096 19800 	BNEQ	AST_LOOP		; IF NEQ NO
            55         14 A2     D0  0098 19900 	MOVL	SSB$L_UCB(R2),R5	; GET THE UCB ADDRESS
            10         0A A5     91  009C 20000 	CMPB	UCB$B_TYPE(R5),#DYN$C_UCB ; IS IT A UCB?
                          A1     12  00A0 20100 	BNEQ	AST_LOOP		; IF NEQ NO
            56         1A A5     9A  00A2 20200 	MOVZBL	UCB$W_SRCADDR(R5),R6	; GET MY LINK ADDRESS
       FFFC'CF46          55     D1  00A6 20300 	CMPL	R5,W^NET$AL_UCBVCT-4[R6] ; IS IT THE SAME?
                          95     12  00AC 20400 	BNEQ	AST_LOOP		; IF NEQ NO
                       20 A2     95  00AE 20500 	TSTB	SSB$B_TIPC(R2)		; WAS THIS BLOCK REUSED FOR AN SSB?
                          90     13  00B1 20600 	BEQL	AST_LOOP		; LOOKS THAT WAY - IGNORE
                       20 A2     97  00B3 20700 	DECB	SSB$B_TIPC(R2)		; A MESSAGE IS DONE ON THIS SUBCHANNEL
                          8B     12  00B6 20800 	BNEQ	AST_LOOP		; IF NEQ SUBCHANNEL IS STILL BUSY
         1A A2            0F     E5  00B8 20900 	BBCC	#SSB$V_ACKP,SSB$W_RCVSEGACK(R2),20$ ; IF BC, NO ACK PENDING
                          03         00BC       
                          FF40'  30  00BD 21000 	BSBW	NET$XMT_ACK		; ACK PENDING - SEND IT
                          FF80   31  00C0 21100 20$:	BRW	AST_LOOP		; TRY FOR MORE
                                     00C3 21200 
                                     00C3 21300 
                                     00C3 21400 ;++
                                     00C3 21500 ; NET$FND_NDB_CHN - FIND NDB BY CHANNEL NO.
                                     00C3 21600 ;
                                     00C3 21700 ; INPUTS:	NET$GW_CHANNEL - PHYLK CHANNEL NO.
                                     00C3 21800 ;
                                     00C3 21900 ; OUTPUTS:	R9 - NDB ADDRESS OR 0 IF NONE; CONDITION CODES REFLECT R9
                                     00C3 22000 ;
                                     00C3 22100 ;--
                                     00C3 22200 
                                     00C3 22300 NET$FND_NDB_CHN::
                     0000'CF     9F  00C3 22400 	PUSHAB	W^NET$CTL_NEXTNDB	; INIT FOR COROUTINE CALL
                                     00C7 22500 10$:
                          9E     16  00C7 22600 	JSB	@(SP)+			; GET THE NEXT NDB
                          0B     13  00C9 22700 	BEQL	20$			; IF EQL DONE
       0000'CF         14 A9     B1  00CB 22800 	CMPW	NDB$W_CHANNEL(R9),W^NET$GW_CHANNEL ; IS THAT THE CHANNEL?
                          F4     12  00D1 22900 	BNEQ	10$			; IF NEQ NO
            8E            59     D0  00D3 23000 	MOVL	R9,(SP)+		; SET THE CONDITION CODES AND CLEAR STACK
                                 05  00D6 23100 20$:	RSB				; DONE
NETAST          - PROCESS AST'S                                  22-AUG-1978 00:46:55   VAX-11 MACRO X0.3-11               Page   8
X01             INCOMING MESSAGE PREPROCESSING                                                                                   (1)

                                     00D7 23300 	.SBTTL	INCOMING MESSAGE PREPROCESSING
                                     00D7 23400 ;++
                                     00D7 23500 ; MSG_IN - PREPROCESS INCOMING MSG FOR STATE TRANSITION
                                     00D7 23600 ;
                                     00D7 23700 ; FUNCTIONAL DESCRIPTION:
                                     00D7 23800 ;	THIS PROCEDURE EXTRACTS COUNT AND RTHDR INFORMATION, IF ANY,
                                     00D7 23900 ;	FROM AN INCOMING MESSAGE.  IT ALSO DETERMINES THE CORRECT
                                     00D7 24000 ;	NETWORK EVENT CODE TO PASS TO THE STATE TRANSITION ROUTINES.
                                     00D7 24100 ;	NO BLOCKED NSP MESSAGES ARE PROCESSED.
                                     00D7 24200 ;
                                     00D7 24300 ;
                                     00D7 24400 ;
                                     00D7 24500 ; INPUT PARAMETERS:
                                     00D7 24600 ;
                                     00D7 24700 ;	R5 - CHANNEL NO. FOR PHYLK DEVICE
                                     00D7 24800 ;	R9 - NDB ADDRESS
                                     00D7 24900 ;	R11 - ADDRESS OF NSP QUEUE ELEMENT
                                     00D7 25000 ;
                                     00D7 25100 ;
                                     00D7 25200 ; SIDE EFFECTS:
                                     00D7 25300 ;
                                     00D7 25400 ;	POSSIBLE NEW STATE FOR LOGICAL LINK OR NSP IN STARTUP.
                                     00D7 25500 ;	ERROR DUE TO INVALID MSG MAY BE POSTED.
                                     00D7 25600 ;
                                     00D7 25700 ;	R10 POINTS TO CURRENT MSG BUFFER ADDRESS.
                                     00D7 25800 ;	R11 POINTS TO END OF MSG+1.
                                     00D7 25900 ;
                                     00D7 26000 ;--
                                     00D7 26100 
                                     00D7 26200 	.ENABL	LSB
                                     00D7 26300 
                                     00D7 26400 
                                     00D7 26500 MSG_IN:					; REFERENCE LABEL
                          59     D5  00D7 26600 	TSTL	R9			; DID NDB GO AWAY?
                          06     12  00D9 26700 	BNEQ	1$			; IF NEQ NO
                          FF22'  30  00DB 26800 	BSBW	NET$DEALLOC_BUF		; YES, DEALLOCATE THE BUFFER
                          FF62   31  00DE 26900 	BRW	AST_LOOP		; PICK UP NEXT ITEM
                                     00E1 27000 1$:
                       04 A9     D5  00E1 27100 	TSTL	NDB$L_LINE_NAME(R9)	; IS THIS A REAL LINE?
                          12     13  00E4 27200 	BEQL	5$			; IF EQL NO
         17 A9            02     E1  00E6 27300 	BBC	#NDB$V_SHUT,NDB$B_STATUS(R9),2$ ; IF BC LINE IS NOT STARTING
                          03         00EA       
                          FF12'  31  00EB 27400 	BRW	NET$AST_EXIT		; THIS MESSAGE CAME IN BEFORE THE RESTART
                                     00EE 27500 2$:
                     00B4 C9     B5  00EE 27600 	TSTW	NDB$W_RCVBLKS(R9)	; IS COUNT LATCHED?
                          04     19  00F2 27700 	BLSS	5$			; IF LSS YES
                     00B4 C9     B6  00F4 27800 	INCW	NDB$W_RCVBLKS(R9)	; BUMP THE COUNT
                                     00F8 27900 5$:
            5A         0E AB     3C  00F8 28000 	MOVZWL	CXB$W_OFFSET(R11),R10	; GET OFFSET TO NSP MSG
            5A            5B     C0  00FC 28100 	ADDL	R11,R10			; POINT TO NSP MESSAGE
            5B         0C AB     3C  00FF 28200 	MOVZWL	CXB$W_LENGTH(R11),R11	; GET MSG BUFFER LENGTH
            5B            6A4B   9E  0103 28300 	MOVAB	(R10)[R11],R11		; COMPUTE END-OF-BLOCK ADDRESS+1
                                     0107 28400 ;
                                     0107 28500 ; BEGIN MSG DECODING
                                     0107 28600 ;
         0E'AF            00     FB  0107 28700 	CALLS	#0,B^10$		; DO THIS TO CLEAN STACK IF MSG ERROR
                          FF35   31  010B 28800 	BRW	AST_LOOP		; LOOP FOR THE NEXT PHYLK ITEM
NETAST          - PROCESS AST'S                                  22-AUG-1978 00:46:55   VAX-11 MACRO X0.3-11               Page   9
X01             INCOMING MESSAGE PREPROCESSING                                                                                   (1)

                               0000  010E 28900 10$:	.WORD	0			; DUMMY ENTRY MASK
                                     0110 29000  
            42            6A     E8  0110 29100 	BLBS	(R10),35$		; IF LBS COUNT - ILLEGAL
                                     0113 29200 ;
                                     0113 29300 ; CHECK FOR RTHDR - ASSUME NONE
                                     0113 29400 ;
            53       0000'CF     9E  0113 29500 	MOVAB	W^NET$GT_DSTNODE,R3	; SET TO PICK UP DST NODENAME
                          63     94  0118 29600 	CLRB	(R3)			; ASSUME NO NAME TO GET
                                     011A 29700 	COMPARE	NET,MSGID,(R10),#NET$C_RTHDR ; IS IT RTHDR?
                          4E     12  011F 29800 	BNEQ	60$			; IF NEQ NO - CHECK FOR MSGFLG
            6A            06     E1  0121 29900 	BBC	#NET$V_RFMT,(R10),35$	; IF BC, ROUTING BY NUMBER
                          30         0124       
                                     0125 30000 30$:
                                     0125 30100 ;
                                     0125 30200 ; RTHDR FOUND - EXTRACT FIELDS OF INTEREST
                                     0125 30300 ;
                                     0125 30400 	COMPARE	NET,EFMT,(R10)+,#NET$C_NSPV3 ; CHECK PROTOCOL FMT
                          4D     12  012A 30500 	BNEQ	65$			; IF NEQ NG
                          53     DD  012C 30600 	PUSHL	R3			; SAVE ADDRESS OF NODE NAME
            56            06     9A  012E 30700 	MOVZBL	#6,R6			; MAX LTH OF NAME
                          FECC'  30  0131 30800 	BSBW	NET$MOVE_IFIELD		; PICK UP THE IMAGE FIELD
            1E            50     E9  0134 30900 	BLBC	R0,35$			; IF LBC ERROR
            56            6E     D0  0137 31000 	MOVL	(SP),R6			; GET ADDRESS OF NODE NAME
                          FEC3'  30  013A 31100 	BSBW	NET$FND_NDB_NAM		; TRY TO FIND AN NDB
                          7C     13  013D 31200 	BEQL	RTERR			; IF EQL NONE
                          08     BA  013F 31300 	POPR	#^M<R3>			; SET TO MOVE FIELD
       0000'CF            59     D1  0141 31400 	CMPL	R9,W^NET$GL_NODLST	; IS IT ME?
                          1E     13  0146 31500 	BEQL	50$			; IF EQL YES
                                     0148 31600 
                                     0148 31700 	ASSUME NDB$V_LOOPBACK EQ 0
                                     0148 31800 
            0B         17 A9     E8  0148 31900 	BLBS	NDB$B_STATUS(R9),40$	; IF BS, LOOPBACK
                                     014C 32000 ;
                                     014C 32100 ; APPARENTLY, SOME TURKEY SET THIS LINE TO PHYSICAL LOOPBACK.
                                     014C 32200 ;
            56            08     D0  014C 32300 	MOVL	#NDB$C_MSG_LOOPB,R6	; SET MSG CODE
                          FEAE'  30  014F 32400 	BSBW	NET$OPCOM		; TELL THE OPERATOR
                          FEAB'  30  0152 32500 	BSBW	NET$CTL_SET_OFF		; SET THE LINE OFF
                                     0155 32600 35$:
                          64     11  0155 32700 	BRB	RTERR			; RECORD A ROUTING ERROR
                                     0157 32800 40$:
                                     0157 32900 ;
                                     0157 33000 ; MESSAGE CAME OVER LINE IN LOOPBACK
                                     0157 33100 ;
            51         1A A9     9E  0157 33200 	MOVAB	NDB$T_NAME(R9),R1	; IGNORE SOURCE NODE IN MESSAGE
                          FEA2'  30  015B 33300 	BSBW	NET$MOVE_STRING		; USE NAME IN NDB
            56            8A     9A  015E 33400 	MOVZBL	(R10)+,R6		; SKIP OVER NAME IN MESSAGE
            5A            56     C0  0161 33500 	ADDL	R6,R10			; OKAY - MUST HAVE BEEN FROM ME
                          09     11  0164 33600 	BRB	60$			; CONTINUE PROCESSING
                                     0166 33700 50$:
            56            06     9A  0166 33800 	MOVZBL	#6,R6			; SET TO PICK UP SRC NODENAME
                          FE94'  30  0169 33900 	BSBW	NET$MOVE_IFIELD		; GET IT
            4C            50     E9  016C 34000 	BLBC	R0,RTERR		; IF LBC NG
                                     016F 34100 60$:	BMSGOV	ETOERR			; BR IF NOT ENOUGH BYTES
                                     0174 34200 ;
                                     0174 34300 ; PROCESS MSGFLG
                                     0174 34400 ;
NETAST          - PROCESS AST'S                                  22-AUG-1978 00:46:55   VAX-11 MACRO X0.3-11               Page  10
X01             INCOMING MESSAGE PREPROCESSING                                                                                   (1)

                                     0174 34500 	COMPARE	NET,MSGID,(R10),#NET$C_MSGFLG ; VALID BYTE?
                          39     12  0179 34600 65$:	BNEQ	ETOERR			; IF NEQ NO
                                     017B 34700 ;
                                     017B 34800 ; DETERMINE MESSAGE TYPE
                                     017B 34900 ;
                                     017B 35000 	EXTRACT	NET,MSGFLG,(R10)+,R7	; GET MSGFLG
            53       0000'CF47   98  0180 35100 	CVTBL	W^EVENTS[R7],R3		; GET EVENT CODE
                          05     14  0186 35200 	BGTR	70$			; IF GTR OK
                          2A     13  0188 35300 	BEQL	ETOERR			; INVALID MSG TYPE
                          FE73'  31  018A 35400 	BRW	NET$AST_EXIT		; NOP MSG - IGNORE
                                     018D 35500 70$:
                                     018D 35600 ;
                                     018D 35700 ; DETERMINE WHETHER THIS IS A LINK OR AN NSP EVENT
                                     018D 35800 ;
            56       0000'CF     9E  018D 35900 	MOVAB	W^NET$GT_DSTNODE,R6	; POINT TO STORED SOURCE NODENAME
            00'           53     91  0192 36000 	CMPB	R3,S^#NET$C_EV_NSPNOD	; WAS THAT A NODE STARTUP?
                          34     12  0195 36100 	BNEQ	90$			; IF NEQ NO
                          66     95  0197 36200 	TSTB	(R6)			; WAS THERE A RTHDR?
                          19     12  0199 36300 	BNEQ	ETOERR			; IF NEQ YES - NOT ALLOWED
            57         16 A9     9E  019B 36400 	MOVAB	NDB$B_STATE(R9),R7	; NSP EVENT (NODE STARTUP)
                                     019F 36500 	BMSGOV	ETOERR			; IF NOT ANOTHER BYTE - ERROR
            58            8A     9A  01A4 36600 	MOVZBL	(R10)+,R8		; GET STARTTYPE BYTE
            53            00'    9A  01A7 36700 	MOVZBL	S^#NET$C_EV_NSPINI,R3	; ASSUME NODE INIT
                                     01AA 36800 	CASE	R8,<-
                                     01AA 36900 		ETOERR,-		; 0 IS ILLEGAL
                                     01AA 37000 		130$,-			; NODE INIT
                                     01AA 37100 		80$,-			; NODE VERIFICATION
                                     01AA 37200 >
                                     01B4 37300 ;
                                     01B4 37400 ; RECORD FORMAT ERROR
                                     01B4 37500 ;
                                     01B4 37600 ETOERR:					; END-TO-END ERROR
            50       0000'CF     9E  01B4 37700 	MOVAB	W^NET$GW_OFMTERRS,R0	; NON-ROUTING FORMAT ERROR COUNTER ADDRESS
                          05     11  01B9 37800 	BRB	COMERR			; GO TO COMMON CODE
                                     01BB 37900 RTERR:					; ROUTING ERROR
            50       0000'CF     9E  01BB 38000 	MOVAB	W^NET$GW_RFMTERRS,R0	; ROUTING FORMAT ERROR COUNTER ADDRESS
                                     01C0 38100 COMERR:					; COMMON MSG ERROR PROCESSING
                          FE3D'  30  01C0 38200 	BSBW	NET$UP_COUNTER		; BUMP THE PROPER COUNTER
                          FE3A'  31  01C3 38300 DISCARD:	BRW	NET$DISCARD	; DISCARD THE MESSAGE
            53            00'    9A  01C6 38400 80$:	MOVZBL	S^#NET$C_EV_NSPVER,R3	; SET PROPER EVENT
                          78     11  01C9 38500 	BRB	130$			; PROCESS IT
                                     01CB 38600 90$:
                                     01CB 38700 ;
                                     01CB 38800 ; LOGICAL LINK EVENT
                                     01CB 38900 ;
            00'        16 A9     91  01CB 39000 	CMPB	NDB$B_STATE(R9),S^#NET$C_ST_ON ; NSP RUNNING?
                          E3     12  01CF 39100 	BNEQ	ETOERR			; IF NEQ NO
                                     01D1 39200 	BMSGOV	ETOERR,2		; BR IF NOT ENOUGH BYTES
            51            8A     3C  01D9 39300 	MOVZWL	(R10)+,R1		; GET MY LOGICAL LINK ADDRESS
                                     01DC 39400 	BMSGOV	ETOERR,2		; ERROR IF NOT ENOUGH BYTES
       0000'CF            8A     B0  01E4 39500 	MOVW	(R10)+,W^NET$GW_SRCADDR	; SAVE HIS LOGICAL LINK ADDRESS
                          53     DD  01E9 39600 	PUSHL	R3			; SAVE EVENT
       0000'CF            51     B0  01EB 39700 	MOVW	R1,W^NET$GW_DSTADDR	; SAVE MY LOGICAL LINK ADDRESS
                          3F     13  01F0 39800 	BEQL	110$			; IF EQL NONE
            59            51     9A  01F2 39900 	MOVZBL	R1,R9			; GET JUST THE INDEX PART
                          CC     13  01F5 40000 	BEQL	DISCARD			; 0 IS NOT VALID
         00'8F            59     91  01F7 40100 	CMPB	R9,#NET$C_MAXLNK	; IN RANGE?
NETAST          - PROCESS AST'S                                  22-AUG-1978 00:46:55   VAX-11 MACRO X0.3-11               Page  11
X01             INCOMING MESSAGE PREPROCESSING                                                                                   (1)

                          C6     1A  01FB 40200 	BGTRU	DISCARD			; IF GTRU NO - TOSS IT
                                     01FD 40300 ;
                                     01FD 40400 ; DETERMINE IF MESSAGE IS FOR AN EXISTING LOGICAL LINK
                                     01FD 40500 ;
            59       FFFC'CF49   D0  01FD 40600 	MOVL	W^NET$AL_UCBVCT-4[R9],R9 ; GET THE ADDRESS OF ASSOCIATED UCB
                          2C     13  0203 40700 	BEQL	110$			; IF EQL NOT FOR EXISTING LINK
         1A A9            51     B1  0205 40800 	CMPW	R1,UCB$W_SRCADDR(R9)	; DID HE MATCH MY LINK ADDRESS?
                          26     12  0209 40900 	BNEQ	110$			; IF NEQ NO
         52 A9            00'    91  020B 41000 	CMPB	S^#NET$C_ST_CIS,UCB$B_STATE(R9) ; IN CIS STATE?
                          14     13  020F 41100 	BEQL	100$			; IF EQL YES - DONE WITH MATCH
         18 A9         FE AA     B1  0211 41200 	CMPW	-2(R10),UCB$W_DSTADDR(R9) ; DO I RECOGNIZE HIS LINK ADDRESS?
                          19     12  0216 41300 	BNEQ	110$			; IF NEQ NO
                                     0218 41400 ;
                                     0218 41500 ; DETERMINE WHETHER TO MATCH NODE NAMES
                                     0218 41600 ;
                          66     95  0218 41700 	TSTB	(R6)			; ANYTHING THERE?
                          09     13  021A 41800 	BEQL	100$			; IF EQL NO - NOTHING TO MATCH
            57         0C A9     9E  021C 41900 	MOVAB	UCB$T_PARTNER(R9),R7	; GET ADDRESS OF WHO I THINK IT IS
                          FDDD'  30  0220 42000 	BSBW	NET$COMP_STRING		; TRY TO MATCH
                          0C     12  0223 42100 	BNEQ	110$			; IF NEQ NOT RIGHT
                                     0225 42200 100$:
            55            59     D0  0225 42300 	MOVL	R9,R5			; LOGICAL LINKS MATCH OR DON'T NEED TO
                          FDD5'  30  0228 42400 	BSBW	NET$PART_DSTNOD		; SET UP DSTNODE
            57         52 A5     9E  022B 42500 	MOVAB	UCB$B_STATE(R5),R7	; POINT TO LOGICAL LINK STATE BYTE
                          10     11  022F 42600 	BRB	120$			; GO TO COMMON CODE
                                     0231 42700 110$:
                     0000'CF     B5  0231 42800 	TSTW	W^NET$GW_SRCADDR	; DID PARTNER GIVE A LINK ADDRESS?
                          8C     13  0235 42900 	BEQL	DISCARD			; IF EQL NO - ILLEGAL
            57       0000'CF     9E  0237 43000 	MOVAB	W^NET$GB_NULLST,R7	; ASSUME NO UCB (IDLE STATE)
            67            00'    90  023C 43100 	MOVB	S^#NET$C_ST_IDLE,(R7)	; SET IT
                          55     D4  023F 43200 	CLRL	R5			; ASSUME NO UCB
                          08     BA  0241 43300 120$:	POPR	#^M<R3>			; RESTORE EVENT CODE
                                     0243 43400 ;
                                     0243 43500 ; DO EVENT (MSG RCVD) TRANSITION
                                     0243 43600 ;
       0000'CF            00     FB  0243 43700 130$:	CALLS	#0,W^NET$TRN		; DO A TRANSITION
                                 04  0248 43800 	RET				; TRY FOR ANOTHER MESSAGE
                                     0249 43900 
                                     0249 44000 	.DSABL	LSB
                                     0249 44100  
                                     0249 44200 	.END
NETAST          - PROCESS AST'S                                  22-AUG-1978 00:46:55   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (1)

$$T1           = 00000001            DYN$C_RVT      = 0000000E            NDB$V_SHUT     = 00000002            
AST_DONE         00000074 R     04   DYN$C_SFT      = 00000024            NDB$W_BLKSIZE    00000022            
AST_LOOP         00000043 R     04   DYN$C_SSB      = 0000001D            NDB$W_BUFSIZE    000000A8            
BIT...         = 00000000            DYN$C_TQE      = 0000000F            NDB$W_CHANNEL    00000014            
BUG$_BADBUFTYP   ********   X   04   DYN$C_TYPAHD   = 00000014            NDB$W_CHAR       000000AA            
BUG$_NETSYSSRV   ********   X   04   DYN$C_UCB      = 00000010            NDB$W_HISBLKSIZ  000000B8            
COMERR           000001C0 R     04   DYN$C_VCB      = 00000011            NDB$W_HISNSPSIZ  000000BA            
CXB$B_CODE       0000000B            DYN$C_WCB      = 00000012            NDB$W_MAXLNK     00000026            
CXB$B_TYPE       0000000A            ETOERR           000001B4 R     04   NDB$W_NODEADDR   00000018            
CXB$C_DDCCON   = 00000001            EVENTS           00000000 R     03   NDB$W_NSPSIZE    00000024            
CXB$C_DDCDAT   = 00000002            GBL...         = 00000000            NDB$W_RCVBLKS    000000B4            
CXB$C_DDCERR   = 00000004            GOT_MSG_OUT      0000004A R     04   NDB$W_SIZE       00000008            
CXB$C_DDCRCV   = 00000003            IO$M_ATTNAST     ********   X   04   NDB$W_XMTBLKS    000000B6            
CXB$C_LENGTH     00000018            IO$_SETMODE      ********   X   04   NET$AL_UCBVCT    ********   X   04   
CXB$C_NSPSTART   0000001A            LINK_ERROR       00000079 R     04   NET$AST_EXIT     ********   X   04   
CXB$K_LENGTH     00000018            MSG_IN           000000D7 R     04   NET$COMP_STRING  ********   X   04   
CXB$K_NSPSTART   0000001A            MSG_OUT          0000007E R     04   NET$CTL_NEXTNDB  ********   X   04   
CXB$L_BL         00000004            NDB$B_COMMVER    0000002B            NET$CTL_SET_OFF  ********   X   04   
CXB$L_FL         00000000            NDB$B_CONNTMO    0000004F            NET$C_ACKM     = 00000001            
CXB$L_IRP        00000010            NDB$B_FUNC       00000021            NET$C_ACKOFF   = 00000005            
CXB$L_LINK       00000010            NDB$B_NONPRVACC  00000050            NET$C_CC       = 00000002            
CXB$L_SSB        00000014            NDB$B_NUMBUF     0000000B            NET$C_CI       = 00000001            
CXB$W_CHANNEL    00000010            NDB$B_PRVACC     0000007C            NET$C_CTRLM    = 00000002            
CXB$W_LENGTH     0000000C            NDB$B_RTEVER     00000028            NET$C_DATAM    = 00000000            
CXB$W_OFFSET     0000000E            NDB$B_STATE      00000016            NET$C_DATREQ   = 00000000            
CXB$W_SIZE       00000008            NDB$B_STATUS     00000017            NET$C_DC       = 00000004            
DISCARD          000001C3 R     04   NDB$B_TYPE       0000000A            NET$C_DI       = 00000003            
DYN$C_ACB      = 00000002            NDB$C_CTL_LOOP = 00000005            NET$C_EV_MACKD   ********   X   03   
DYN$C_ADP      = 00000001            NDB$C_LENGTH     000000BC            NET$C_EV_MACKI   ********   X   03   
DYN$C_AQB      = 00000003            NDB$C_LOOP     = 00000003            NET$C_EV_MBEOM   ********   X   03   
DYN$C_BRDCST   = 0000001A            NDB$C_MAINT    = 00000004            NET$C_EV_MBOM    ********   X   03   
DYN$C_BUFIO    = 00000013            NDB$C_MSG_DCHK = 00000009            NET$C_EV_MCC     ********   X   03   
DYN$C_CEB      = 00000004            NDB$C_MSG_DOWN = 00000003            NET$C_EV_MCI     ********   X   03   
DYN$C_CRB      = 00000005            NDB$C_MSG_DSRCH= 00000007            NET$C_EV_MDAT    ********   X   03   
DYN$C_CXB      = 0000001B            NDB$C_MSG_LOOPB= 00000008            NET$C_EV_MDC     ********   X   03   
DYN$C_DDB      = 00000006            NDB$C_MSG_MAINT= 00000002            NET$C_EV_MDI     ********   X   03   
DYN$C_DPT      = 0000001E            NDB$C_MSG_NGINI= 00000004            NET$C_EV_MEOM    ********   X   03   
DYN$C_FCB      = 00000007            NDB$C_MSG_OKINI= 00000005            NET$C_EV_MINTR   ********   X   03   
DYN$C_FRK      = 00000008            NDB$C_MSG_SHUT = 00000006            NET$C_EV_MLS     ********   X   03   
DYN$C_GSD      = 00000015            NDB$C_MSG_START= 00000001            NET$C_EV_NSPINI  ********   X   04   
DYN$C_IDB      = 00000009            NDB$C_OFF      = 00000001            NET$C_EV_NSPNOD  ********   X   03   
DYN$C_IRP      = 0000000A            NDB$C_ON       = 00000000            NET$C_EV_NSPVER  ********   X   04   
DYN$C_JPB      = 0000001F            NDB$C_SHUT     = 00000002            NET$C_INTREQ   = 00000001            
DYN$C_KFH      = 00000026            NDB$K_LENGTH     000000BC            NET$C_LOGLNK   = 00000001            
DYN$C_KFI      = 00000018            NDB$L_LINE_NAME  00000004            NET$C_MAXLNK     ********   X   04   
DYN$C_LOG      = 0000000B            NDB$L_NEXT       00000000            NET$C_MAXNSPOVH= 00000018            
DYN$C_MTL      = 00000019            NDB$M_CTL_LOOP = 00000008            NET$C_MSGFLG   = 00000000            
DYN$C_MVL      = 00000016            NDB$M_LOOPBACK = 00000001            NET$C_NODMSG   = 00000005            
DYN$C_NDB      = 0000001C            NDB$M_OFF      = 00000002            NET$C_NOP      = 00000000            
DYN$C_NET      = 00000017            NDB$M_SHUT     = 00000004            NET$C_NSPOVH   = 0000000B            
DYN$C_PBH      = 00000020            NDB$Q_AST        0000000C            NET$C_NSPV3    = 00000000            
DYN$C_PCB      = 0000000C            NDB$Q_ZEROTIME   000000AC            NET$C_PIGGYBACK= 00008000            
DYN$C_PDB      = 00000021            NDB$T_NAME       0000001A            NET$C_PRINRM   = 00000001            
DYN$C_PFL      = 00000023            NDB$T_SYSVER     0000002E            NET$C_RTHDR    = 00000002            
DYN$C_PIB      = 00000022            NDB$V_CTL_LOOP = 00000003            NET$C_RTHDROVH = 0000000F            
DYN$C_PQB      = 0000000D            NDB$V_LOOPBACK = 00000000            NET$C_ST_CIS     ********   X   04   
DYN$C_PTR      = 00000025            NDB$V_OFF      = 00000001            NET$C_ST_IDLE    ********   X   04   
NETAST          - PROCESS AST'S                                  22-AUG-1978 00:46:55   VAX-11 MACRO X0.3-11               Page  13
SYMBOL TABLE                                                                                                                     (1)

NET$C_ST_ON      ********   X   04   NET$V_MSGFLG   = 00000002            UCB$B_VERTSZ     0000003F            
NET$DEALLOC_BUF  ********   X   04   NET$V_MSGID    = 00000000            UCB$C_LENGTH     00000074            
NET$DISCARD      ********   X   04   NET$V_MSGTYP   = 00000002            UCB$C_LOGLNK   = 00000001            
NET$FND_NDB_CHN  000000C3 RG    04   NET$V_REMLFS   = 00000004            UCB$K_LENGTH     00000074            
NET$FND_NDB_NAM  ********   X   04   NET$V_RFMT     = 00000006            UCB$L_AMB        00000054            
NET$GB_AST_FLAG  ********   X   04   NET$V_SUBTYP   = 00000004            UCB$L_ASTQBL     00000010            
NET$GB_NULLST    ********   X   04   NET$XMT_ACK      ********   X   04   UCB$L_ASTQFL     0000000C            
NET$GL_DEALLOC   ********   X   04   NET$XMT_AST      00000004 RG    04   UCB$L_CPID       0000005C            
NET$GL_NODLST    ********   X   04   RTERR            000001BB R     04   UCB$L_CRB        00000020            
NET$GL_NSPQFL    ********   X   04   SS$_IVCHAN       ********   X   04   UCB$L_DDB        00000024            
NET$GT_DSTNODE   ********   X   04   SS$_NOPRIV       ********   X   04   UCB$L_DEVCHAR    00000034            
NET$GW_CHANNEL   ********   X   04   SSB$B_FCVAL      00000021            UCB$L_DEVDEPEND  0000003C            
NET$GW_DSTADDR   ********   X   04   SSB$B_PNDCNT     00000023            UCB$L_DPC        00000080            
NET$GW_OFMTERRS  ********   X   04   SSB$B_REQCNT     00000022            UCB$L_DUETIM     0000005C            
NET$GW_RFMTERRS  ********   X   04   SSB$B_TIPC       00000020            UCB$L_DX_BFPNT   0000009C            
NET$GW_SRCADDR   ********   X   04   SSB$B_TYPE       0000000A            UCB$L_DX_BUF     00000098            
NET$LOCAL_AST    00000000 RG    04   SSB$C_LENGTH     00000024            UCB$L_DX_RXDB    000000A0            
NET$MOVE_IFIELD  ********   X   04   SSB$K_LENGTH     00000024            UCB$L_EMB        00000078            
NET$MOVE_STRING  ********   X   04   SSB$L_UCB        00000014            UCB$L_FIRST      00000014            
NET$M_BOM      = 00000020            SSB$L_WACKQBL    00000010            UCB$L_FPC        0000000C            
NET$M_EOM      = 00000040            SSB$L_WACKQFL    0000000C            UCB$L_FQBL       00000004            
NET$M_INTLS    = 00000010            SSB$L_XQBL       00000004            UCB$L_FQFL       00000000            
NET$M_INTMSG   = 00000020            SSB$L_XQFL       00000000            UCB$L_FR3        00000010            
NET$OPCOM        ********   X   04   SSB$M_ACKP     = 00008000            UCB$L_FR4        00000014            
NET$PART_DSTNOD  ********   X   04   SSB$M_NAKP     = 00007000            UCB$L_IOQBL      00000044            
NET$PHYLK_ERROR  ********   X   04   SSB$S_NAKP     = 00000003            UCB$L_IOQFL      00000040            
NET$RCV_AST      0000000C RG    04   SSB$V_ACKP     = 0000000F            UCB$L_IRP        0000004C            
NET$S_ACKOPT   = 00000001            SSB$V_NAKP     = 0000000C            UCB$L_LINK       0000002C            
NET$S_BOM      = 00000001            SSB$W_RCVSEGACK  0000001A            UCB$L_LOGADR     00000064            
NET$S_EFMT     = 00000002            SSB$W_RCVSEGNUM  00000018            UCB$L_MAXBLOCK   00000084            
NET$S_EOM      = 00000001            SSB$W_SIZE       00000008            UCB$L_MEDIA      0000008C            
NET$S_FCINT    = 00000002            SSB$W_XMTSEGACK  0000001E            UCB$L_NT_DATSSB  00000074            
NET$S_FCMOD    = 00000002            SSB$W_XMTSEGNUM  0000001C            UCB$L_NT_INTSSB  00000078            
NET$S_FCOPT    = 00000002            SYS$QIO          ********   X   04   UCB$L_OPCNT      00000060            
NET$S_INTLS    = 00000001            UCB$B_AMOD       00000053            UCB$L_OWNUIC     0000001C            
NET$S_INTMSG   = 00000001            UCB$B_CEX        00000077            UCB$L_PID        00000028            
NET$S_LTYPE    = 00000002            UCB$B_CM1        0000004A            UCB$L_RQBL       00000004            
NET$S_MPRI     = 00000002            UCB$B_CM2        0000004B            UCB$L_RQFL       00000000            
NET$S_MSGFLG   = 00000005            UCB$B_DEVCLASS   00000038            UCB$L_SVAPTE     00000068            
NET$S_MSGID    = 00000002            UCB$B_DEVTYPE    00000039            UCB$L_SVPN       00000064            
NET$S_MSGTYP   = 00000002            UCB$B_DIPL       00000052            UCB$L_TTCHAR     0000003C            
NET$S_REMLFS   = 00000004            UCB$B_DX_SCTCNT  000000A6            UCB$L_VCB        00000030            
NET$S_RFMT     = 00000001            UCB$B_ERTCNT     00000070            UCB$M_BACKP    = 00000020            
NET$S_SUBTYP   = 00000003            UCB$B_ERTMAX     00000071            UCB$M_BSY      = 00000100            
NET$TRN          ********   X   04   UCB$B_ESCAPE     0000004B            UCB$M_CANCEL   = 00000008            
NET$UP_COUNTER   ********   X   04   UCB$B_FEX        00000076            UCB$M_DEADMO   = 00000400            
NET$V_ACKOPT   = 00000004            UCB$B_FIPL       0000000B            UCB$M_DELMBX   = 00000002            
NET$V_BOM      = 00000005            UCB$B_LOCSRV     0000003C            UCB$M_DIAGBUF  = 00000002            
NET$V_EFMT     = 00000004            UCB$B_OFFNDX     00000094            UCB$M_DX_WRITE = 00000008            
NET$V_EOM      = 00000006            UCB$B_OFFRTC     00000095            UCB$M_ECC      = 00000001            
NET$V_FCINT    = 00000002            UCB$B_REMSRV     0000003D            UCB$M_ERLOGIP  = 00000004            
NET$V_FCMOD    = 00000000            UCB$B_SECTORS    0000003C            UCB$M_INT      = 00000002            
NET$V_FCOPT    = 00000002            UCB$B_SLAVE      00000074            UCB$M_INTTYPE  = 00000080            
NET$V_INTLS    = 00000004            UCB$B_SPR        00000075            UCB$M_JOB      = 00000001            
NET$V_INTMSG   = 00000005            UCB$B_STATE      00000052            UCB$M_MOUNTING = 00000200            
NET$V_LTYPE    = 00000000            UCB$B_TRACKS     0000003D            UCB$M_NOCNVRT  = 00000004            
NET$V_MPRI     = 00000002            UCB$B_TYPE       0000000A            UCB$M_NT_BFROVF= 00000004            
NETAST          - PROCESS AST'S                                  22-AUG-1978 00:46:55   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                     (1)

UCB$M_NT_BREAK = 00000020            UCB$W_DSTADDR    00000018            
UCB$M_NT_NAME  = 00000010            UCB$W_DX_BCR     000000A4            
UCB$M_ONLINE   = 00000010            UCB$W_EC1        00000090            
UCB$M_POWER    = 00000020            UCB$W_EC2        00000092            
UCB$M_PRMMBX   = 00000001            UCB$W_ERRCNT     00000072            
UCB$M_TIM      = 00000001            UCB$W_FUNC       0000007E            
UCB$M_TIMOUT   = 00000040            UCB$W_MB_SEED    FFFFFFFC            
UCB$M_TT_NOTIF = 00000004            UCB$W_MSGCNT     00000016            
UCB$M_TT_TIMO  = 00000002            UCB$W_MSGMAX     00000014            
UCB$M_UNLOAD   = 00001000            UCB$W_NT_CHAN    0000007C            
UCB$M_VALID    = 00000800            UCB$W_OFFSET     0000008A            
UCB$S_LNKPRI   = 00000002            UCB$W_REFC       00000050            
UCB$S_LTYPE    = 00000002            UCB$W_SIZE       00000008            
UCB$T_PARTNER    0000000C            UCB$W_SRCADDR    0000001A            
UCB$V_BACKP    = 00000005            UCB$W_STS        00000058            
UCB$V_BSY      = 00000008            UCB$W_UNIT       00000048            
UCB$V_CANCEL   = 00000003            UCB$W_VPROT      0000001A            
UCB$V_DEADMO   = 0000000A            
UCB$V_DELMBX   = 00000001            
UCB$V_DIAGBUF  = 00000001            
UCB$V_DX_WRITE = 00000003            
UCB$V_ECC      = 00000000            
UCB$V_ERLOGIP  = 00000002            
UCB$V_INT      = 00000001            
UCB$V_INTTYPE  = 00000007            
UCB$V_JOB      = 00000000            
UCB$V_LNKPRI   = 00000006            
UCB$V_LTYPE    = 00000000            
UCB$V_MOUNTING = 00000009            
UCB$V_MSGACK   = 00000004            
UCB$V_MSGFLO   = 00000003            
UCB$V_NOCNVRT  = 00000002            
UCB$V_NT_BFROVF= 00000002            
UCB$V_NT_BREAK = 00000005            
UCB$V_NT_NAME  = 00000004            
UCB$V_ONLINE   = 00000004            
UCB$V_POWER    = 00000005            
UCB$V_PRMMBX   = 00000000            
UCB$V_SEGFLO   = 00000002            
UCB$V_TIM      = 00000000            
UCB$V_TIMOUT   = 00000006            
UCB$V_TT_NOTIF = 00000002            
UCB$V_TT_TIMO  = 00000001            
UCB$V_UNLOAD   = 0000000C            
UCB$V_VALID    = 0000000B            
UCB$W_BCNT       0000006E            
UCB$W_BCR        00000096            
UCB$W_BOFF       0000006C            
UCB$W_BUFQUO     00000018            
UCB$W_BYTESTOGO  0000003E            
UCB$W_CHARGE     0000004A            
UCB$W_CYLINDERS  0000003E            
UCB$W_DA         0000008C            
UCB$W_DC         0000008E            
UCB$W_DEVBUFSIZ  0000003A            
UCB$W_DEVSTS     0000005A            
UCB$W_DIRSEQ     00000088            
NETAST          - PROCESS AST'S                                  22-AUG-1978 00:46:55   VAX-11 MACRO X0.3-11               Page  15
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFE      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
NET_PURE         00000020      03     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD  NOWRT BYTE  
NET_CODE         00000249      04     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
13174. BYTES LEFT IN FREE MEMORY POOL.
1860. BYTES OF RECLAIMED MEMORY.
OBJ$:NETAST,LIS$:NETAST/-SP=EXECML$/ML,M1/ML,M2/ML,SRC$:NETAST
73 MLB DIR RDS - 699 GETS TO DEFINE 27 MACROS. 45 INTER. FILE WRITES. 
