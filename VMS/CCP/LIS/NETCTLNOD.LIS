NETCTLNOD       - PROCESS NODE CONTROL FUNCTIONS                 22-AUG-1978 00:52:21   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)    3400  HISTORY
   (1)    4200  DECLARATIONS
   (1)    9800  REMOTE NODE FUNCTIONS
   (1)   15600  LOCAL NODE FUNCTIONS
NETCTLNOD       - PROCESS NODE CONTROL FUNCTIONS                 22-AUG-1978 00:52:21   VAX-11 MACRO X0.3-11               Page   1
X01                                                                                                                              (1)

                                     0000   100 
                                     0000   200 	.TITLE	NETCTLNOD - PROCESS NODE CONTROL FUNCTIONS
                                     0000   300 	.IDENT	/X01/
                                     0000   400 
                                     0000   500 ;
                                     0000   600 ; COPYRIGHT (C) 1977, 1978
                                     0000   700 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000   800 ;
                                     0000   900 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000  1000 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000  1100 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000  1200 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000  1300 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000  1400 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000  1500 ; REMAIN IN DEC.
                                     0000  1600 ;
                                     0000  1700 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000  1800 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000  1900 ; CORPORATION.
                                     0000  2000 ;
                                     0000  2100 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000  2200 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000  2300 
                                     0000  2400 ;++
                                     0000  2500 ; FACILITY:	NETWORK ACP
                                     0000  2600 ;
                                     0000  2700 ; ABSTRACT:
                                     0000  2800 ;	THIS MODULE PROCESSES CONTROL QIO'S FOR LOCAL AND REMOTE NODE FUNCTIONS
                                     0000  2900 ;
                                     0000  3000 ; ENVIRONMENT:
                                     0000  3100 ;	MODE = KERNEL
                                     0000  3200 ;--
NETCTLNOD       - PROCESS NODE CONTROL FUNCTIONS                 22-AUG-1978 00:52:21   VAX-11 MACRO X0.3-11               Page   2
X01             HISTORY                                                                                                          (1)

                                     0000  3400 	.SBTTL	HISTORY
                                     0000  3500 ; AUTHOR:	SCOTT G. DAVIS, CREATION DATE: 04-JAN-1978
                                     0000  3600 ;
                                     0000  3700 ; MODIFIED BY:
                                     0000  3800 ;
                                     0000  3900 ;	, : VERSION
                                     0000  4000 ; 01	- 
NETCTLNOD       - PROCESS NODE CONTROL FUNCTIONS                 22-AUG-1978 00:52:21   VAX-11 MACRO X0.3-11               Page   3
X01             DECLARATIONS                                                                                                     (1)

                                     0000  4200 	.SBTTL	DECLARATIONS
                                     0000  4300 ;
                                     0000  4400 ; INCLUDE FILES:
                                     0000  4500 ;
                                     0000  4600 	$IRPDEF
                                     0000  4700 	$LOCDEF
                                     0000  4800 	$NCBDEF
                                     0000  4900 	$NDBDEF
                                     0000  5000 	$OBJDEF
                                     0000  5100 	$PRVDEF
                                     0000  5200 	$RMTDEF
                                     0000  5300 	$UCBDEF
                                     0000  5400 
                                     0000  5500 ;
                                     0000  5600 ; MACROS:
                                     0000  5700 ;
                                     0000  5800 
                                     0000  5900 ;
                                     0000  6000 ; EQUATED SYMBOLS:
                                     0000  6100 ;
                                     0000  6200 
                                     0000  6300 	$EQULST	NET_,,,,<-
                                     0000  6400 		<MINPATH,4>,-		; MIN SIZE OF GET PATH BUFFER
                                     0000  6500 		<TASK,0>,-		; OBJECT NO. FOR "TASK"
                                     0000  6600 		<NICE,19>,-		; OBJECT NO. FOR "NICE"
                                     0000  6700 >
                                     0000  6800 	_VIELD	NET,0,<-		; FLAGS TO GUARANTEE TASK AND NICE PRESENCE
                                     0000  6900 		<TASK,,M>,-		; "TASK" OBJECT IDENTIFIED
                                     0000  7000 		<NICE,,M>,-		; "NICE" OBJECT IDENTIFIED
                                     0000  7100 >
                                     0000  7200 ;
                                     0000  7300 ; OWN STORAGE:
                                     0000  7400 ;
                                 00000000  7500 	.PSECT	NET_IMPURE	WRT,NOEXE
                                     0000  7600 
                                     0000  7700 ;
                                     0000  7800 ; NOTE - OBJCOUNT THROUGH CUR_RMTCOUNT MUST BE TOGETHER FOR MOVQ INSTRS
                                     0000  7900 ;
                           00000004  0000  8000 OBJCOUNT:	.BLKL	1		; NO. OF OBJECT RECORDS
                           00000008  0004  8100 RMTCOUNT:	.BLKL	1		; NO. OF RMT RECORDS
                           0000000C  0008  8200 CUR_OBJCOUNT:	.BLKL	1		; CURRENT OBJECT COUNT
                           00000010  000C  8300 CUR_RMTCOUNT:	.BLKL	1		; CURRENT RMT COUNT
                           00000014  0010  8400 NET$GL_DATALOCK::	.BLKL	1	; DATABASE INTERLOC: 0=>FREE, ELSE PID
                           0000001C  0014  8500 NEWBASE:	.BLKQ	1		; BASE ADDRESS OF NEW DATA AREA
                           00000018  001C  8600 RMTPOINTER=NEWBASE+4			; POINTER TO RMT DATA STORAGE
                           00000020  001C  8700 CUR_POINTER:	.BLKL	1		; CURRENT PTR TO DATA STORAGE
                           00000024  0020  8800 NEWPAGCNT:	.BLKL	1		; NO. OF PAGES ALLOCATED
                           00000025  0024  8900 OBJ_FLAG:	.BLKB	1		; FLAG TO SEE IF NICE AND TASK ARE THERE
                           00000030  0025  9000 LOC_BUFFER:	.BLKB	LOC$C_SIZE	; FOR HOLDING LOC RECORD
                                     0030  9100 
                                 00000000  9200 	.PSECT	NET_PURE NOWRT,NOEXE
                                     0000  9300 
                     4B 53 41 54 00' 0000  9400 TASK_NAME:	.ASCIC	/TASK/		; FOR OBJECT NAME MATCH
                                 04  0000       
                     45 43 49 4E 00' 0005  9500 NICE_NAME:	.ASCIC	/NICE/
                                 04  0005       
NETCTLNOD       - PROCESS NODE CONTROL FUNCTIONS                 22-AUG-1978 00:52:21   VAX-11 MACRO X0.3-11               Page   4
X01             DECLARATIONS                                                                                                     (1)

                                 00000000  9700 	.PSECT	NET_CONTROL,NOWRT
                                     0000  9800 	.SBTTL	REMOTE NODE FUNCTIONS
                                     0000  9900 ;++
                                     0000 10000 ;
                                     0000 10100 ; FUNCTIONAL DESCRIPTION
                                     0000 10200 ;
                                     0000 10300 ; NET$GET_LNBYNOD - GET NAME OF LINE TO NODE
                                     0000 10400 ; NET$GET_LOGLNKS - GET LOCAL ADDRESSES OF LOGICAL LINKS TO NODE
                                     0000 10500 ; 
                                     0000 10600 ;--
                                     0000 10700 
                                     0000 10800 NET$GET_LNBYNOD::
                          FFFD'  30  0000 10900 	BSBW	NET$CTL_FNDNDB		; FIND THE NDB OF THE REQ'D NODE
                          03     12  0003 11000 	BNEQ	10$			; IF NEQ OK
                          0159   31  0005 11100 	BRW	NOSUCHNODE		; DIDN'T FIND IT
                                     0008 11200 10$:
            58         04 A9     D0  0008 11300 	MOVL	NDB$L_LINE_NAME(R9),R8	; GET THE ASSOCIATED LINE'S NAME
                          1A     13  000C 11400 	BEQL	REMOTE_DONE		; IF EQL IT'S ME!!!
                                     000E 11500 ;
                                     000E 11600 ; PICK UP THE LINE NAME AND RETURN IT
                                     000E 11700 ;
       0000'CF            04     B1  000E 11800 	CMPW	#NET_MINPATH,W^NET$GL_RES_LTH ; ENOUGH ROOM FOR STRING?
                          08     1B  0013 11900 	BLEQU	20$			; IF LEQU YES
       0000'CF       0000'8F     3C  0015 12000 	MOVZWL	#SS$_RESULTOVF,W^NET$GQ_USR_STAT ; NO ROOM
                                 04  001C 12100 	RET				; DONE
                                     001D 12200 20$:
            5A            04     9A  001D 12300 	MOVZBL	#4,R10			; NO. OF CHARS COMING
                          FFDD'  30  0020 12400 	BSBW	NET$CTL_UPD_CNT		; UPDATE THE COUNTS
       0000'DF            58     D0  0023 12500 	MOVL	R8,@W^NET$GL_RES_PTR	; STUFF THE LINE NAME
                                     0028 12600 
                                     0028 12700 REMOTE_DONE:
                                 04  0028 12800 	RET				; DONE
                                     0029 12900 
                                     0029 13000 NET$GET_LOGLNKS::
            5B         00'8F     9A  0029 13100 	MOVZBL	#NET$C_MAXLNK,R11	; GET THE MAX NO. OF LINKS
            58       0000'CF     D0  002D 13200 	MOVL	W^NET$GL_RES_PTR,R8	; GET POINTER TO RES BUFFER
            57       0000'CF     D0  0032 13300 	MOVL	W^NET$GL_NAME_PTR,R7	; NAME ASKED FOR
            5A            06     D0  0037 13400 	MOVL	#6,R10			; NO. OF BYTES PER ENTRY
                                     003A 13500 10$:
            59       FFFC'CF4B   D0  003A 13600 	MOVL	W^NET$AL_UCBVCT-4[R11],R9 ; GET NEXT UCB ADDRESS
                          1F     13  0040 13700 	BEQL	50$			; IF EQL SLOT EMPTY
            56         0C A9     9E  0042 13800 	MOVAB	UCB$T_PARTNER(R9),R6	; SET TO COMPARE STRINGS
                          66     95  0046 13900 	TSTB	(R6)			; IS IT REALLY THERE?
                          07     12  0048 14000 	BNEQ	20$			; IF NEQ YES
                     FFFC'CF4B   D4  004A 14100 	CLRL	W^NET$AL_UCBVCT-4[R11]	; UCB SEEMS TO HAVE GONE AWAY
                          10     11  004F 14200 	BRB	50$			; IGNORE IT
                                     0051 14300 20$:
                          FFAC'  30  0051 14400 	BSBW	NET$COMP_STRING		; SEE IF THEY MATCH
                          0B     12  0054 14500 	BNEQ	50$			; IF NEQ NO
                                     0056 14600 ;
                                     0056 14700 ; LINK TO NAMED NODE FOUND
                                     0056 14800 ;
                          FFA7'  30  0056 14900 	BSBW	NET$CTL_UPD_CNT		; FIX UP BUFFER COUNTS
            88         1A A9     B0  0059 15000 	MOVW	UCB$W_SRCADDR(R9),(R8)+	; STUFF THE LINK ADDRESS
            88         28 A9     D0  005D 15100 	MOVL	UCB$L_PID(R9),(R8)+	; AND THE PID
                                     0061 15200 50$:
            D6            5B     F5  0061 15300 	SOBGTR	R11,10$			; LOOP
NETCTLNOD       - PROCESS NODE CONTROL FUNCTIONS                 22-AUG-1978 00:52:21   VAX-11 MACRO X0.3-11               Page   5
X01             REMOTE NODE FUNCTIONS                                                                                            (1)

                                 04  0064 15400 	RET				; DONE
NETCTLNOD       - PROCESS NODE CONTROL FUNCTIONS                 22-AUG-1978 00:52:21   VAX-11 MACRO X0.3-11               Page   6
X01             LOCAL NODE FUNCTIONS                                                                                             (1)

                                     0065 15600 	.SBTTL	LOCAL NODE FUNCTIONS
                                     0065 15700 ;++
                                     0065 15800 ;
                                     0065 15900 ; FUNCTIONAL DESCRIPTION
                                     0065 16000 ;
                                     0065 16100 ; NET$GET_LOC_STA - RETURN CURRENT LOCAL NODE STATE
                                     0065 16200 ; NET$SET_LOC_STA - SET NEW LOCAL NODE STATE AND RETURN PREVIOUS STATE
                                     0065 16300 ; NET$GET_LOC_CTR - RETRIEVE LOCAL NODE COUNTERS
                                     0065 16400 ; NET$CLR_LOC_CTR - RESET LOCAL NODE COUNTERS
                                     0065 16500 ; NET$GET_NODNAMS - RETURN NAMES OF NODES INITED WITH LOCAL NODE
                                     0065 16600 ; NET$GET_LOC_NAM - RETURN NAME OF LOCAL NODE
                                     0065 16700 ; NET$GET_LINNAMS - RETURN NAMES OF LINES DOING PHYLK FOR NSP
                                     0065 16800 ; NET$DISC_LINK - DISCONNECT THE GIVEN LOGICAL LINK
                                     0065 16900 ;
                                     0065 17000 ;--
                                     0065 17100 
                                     0065 17200 NET$GET_LOC_STA::
                                     0065 17300 					; ASSUME "ON"
       0000'CF            01     E0  0065 17400 	BBS	#NDB$V_OFF,W^NET$GB_MYSTATUS,20$ ; IF BS "OFF"
                          0B         006A       
       0000'CF            02     E0  006B 17500 	BBS	#NDB$V_SHUT,W^NET$GB_MYSTATUS,10$ ; IF BS "SHUT"
                          01         0070       
                                 04  0071 17600 	RET				; "ON"
                     0000'CF     96  0072 17700 10$:	INCB	W^NET$GW_CTLCOUNT	; "OFF"
                     0000'CF     96  0076 17800 20$:	INCB	W^NET$GW_CTLCOUNT	; "SHUT"
                                 04  007A 17900 	RET				; DONE
                                     007B 18000 
                                     007B 18100 NET$GET_LOC_CTR::
            50            06     D0  007B 18200 	MOVL	#PRV$V_DIAGNOSE,R0	; NEED DIAGNOSTIC PRIVILEGE FOR THIS ONE
                          FF7F'  30  007E 18300 	BSBW	NET$CTL_CHKPRV		; CHECK THE PRIVILEGE
            56       0000'CF     7D  0081 18400 	MOVQ	W^NET$GQ_ZTIMEN,R6	; GET THE TIME OF LAST ZEROING
            58       0000'CF     3E  0086 18500 	MOVAW	W^NET$AW_STARTNCT,R8	; POINT TO NODE COUNTERS
            59       0000'CF     3E  008B 18600 	MOVAW	W^NET$AW_ENDNCT,R9	; POINT TO END
                                     0090 18700 					; FALL THROUGH TO COMMON CODE
                                     0090 18800 
                                     0090 18900 ;++
                                     0090 19000 ;
                                     0090 19100 ; NET$CTL_GET_CNT - GET NODE OR LINE COUNTERS
                                     0090 19200 ;	CONTINUATION OF GET_LOC_CTR AND GET_LIN_CTR
                                     0090 19300 ;
                                     0090 19400 ; INPUTS:	R6 - LOW ORDER OF TICKS FOR LAST TIME ZEROED
                                     0090 19500 ;		R7 - HIGH ORDER OF TICKS FOR LAST TIME ZEROED
                                     0090 19600 ;		R8 - STARTING ADDRESS OF COUNTERS
                                     0090 19700 ;		R9 - ADDRESS BEYOND COUNTERS
                                     0090 19800 ;
                                     0090 19900 ;--
                                     0090 20000 
                                     0090 20100 NET$CTL_GET_CNT::
            5A            02     D0  0090 20200 	MOVL	#2,R10			; ALWAYS 2 BYTES PER ITEM
            53       0000'CF     D0  0093 20300 	MOVL	W^NET$GL_RES_PTR,R3	; GET TARGET BUFFER ADDRESS
                                     0098 20400 ;
                                     0098 20500 ; COMPUTE NO. OF SECONDS ELAPSED SINCE LAST CLEAR
                                     0098 20600 ;
            51            7E     7E  0098 20700 	MOVAQ	-(SP),R1		; SET UP FOR GET TIME
                                     009B 20800 	$GETTIM_S	(R1)		; GET THE TIME IN TICKS
            81            56     C2  00A4 20900 	SUBL	R6,(R1)+		; COMPUTE ELAPSED TICKS
            61            57     D9  00A7 21000 	SBWC	R7,(R1)			; HIGH ORDER
NETCTLNOD       - PROCESS NODE CONTROL FUNCTIONS                 22-AUG-1978 00:52:21   VAX-11 MACRO X0.3-11               Page   7
X01             LOCAL NODE FUNCTIONS                                                                                             (1)

            8E   00989680 8F     7B  00AA 21100 	EDIV	#10000000.,(SP)+,R0,R1	; COMPUTE ELAPSED SECONDS
            51            50         00B1       
                          FF4A'  30  00B3 21200 	BSBW	NET$CTL_UPD_CNT		; CHECK FOR ROOM FOR SECONDS
            83            50     B0  00B6 21300 	MOVW	R0,(R3)+		; STORE THE COUNT
                                     00B9 21400 10$:
                          FF44'  30  00B9 21500 	BSBW	NET$CTL_UPD_CNT		; CHECK FOR ROOM
            83            88     B0  00BC 21600 	MOVW	(R8)+,(R3)+		; STORE THE COUNTER
            59            58     D1  00BF 21700 	CMPL	R8,R9			; AT END?
                          F5     12  00C2 21800 	BNEQ	10$			; IF NEQ NO
                                 04  00C4 21900 	RET				; DONE
                                     00C5 22000 
                                     00C5 22100 NET$CLR_LOC_CTR::
            50            06     D0  00C5 22200 	MOVL	#PRV$V_DIAGNOSE,R0	; NEED DIAGNOSTIC PRIVILEGE FOR THIS ONE
                          FF35'  30  00C8 22300 	BSBW	NET$CTL_CHKPRV		; CHECK THE PRIVILEGE
                                     00CB 22400 ;
                                     00CB 22500 ; SET NEW TIME
                                     00CB 22600 ;
                                     00CB 22700 	$GETTIM_S	W^NET$GQ_ZTIMEN ; GET THE CURRENT TICK COUNT
            58       0000'CF     B0  00D6 22800 	MOVW	W^NET$GW_ACTLNKS,R8	; SAVE NO. OF ACTIVE LINKS
       0000'CF            00     2C  00DB 22900 	MOVC5	#0,W^NET$AW_STARTNCT,#0,- ; CLEAR COUNTERS
                                     00E0       
            00'           00         00E0 23000 		S^#NET$AW_ENDNCT-NET$AW_STARTNCT,W^NET$AW_STARTNCT ;
                     0000'CF         00E2       
       0000'CF            58     B0  00E5 23100 	MOVW	R8,W^NET$GW_ACTLNKS	; RESTORE NO. OF ACTIVE LINKS
       0000'CF            58     B0  00EA 23200 	MOVW	R8,W^NET$GW_HIGHLNKS	; MAKE THIS THE HIGH WATER MARK
                                 04  00EF 23300 EXIT1:	RET				; DONE
                                     00F0 23400 
                                     00F0 23500 NET$GET_NODNAMS::
                     0000'CF     9F  00F0 23600 	PUSHAB	W^NET$CTL_NEXTNDB	; INIT FOR COROUTINE CALL
            53       0000'CF     D0  00F4 23700 	MOVL	W^NET$GL_RES_PTR,R3	; GET DESTINATION BFR ADDR
                                     00F9 23800 10$:
                          9E     16  00F9 23900 	JSB	@(SP)+			; GET ADDRESS OF NEXT NDB
                          F2     13  00FB 24000 	BEQL	EXIT1			; IF EQL DONE
            00'        16 A9     91  00FD 24100 	CMPB	NDB$B_STATE(R9),S^#NET$C_ST_ON ; IS NODE ON?
                          F6     12  0101 24200 	BNEQ	10$			; IF NEQ NO - IGNORE THIS NDB
                          FEFA'  30  0103 24300 	BSBW	NET$CTL_MOV_NAM		; MOVE IN THE NAME
                          F1     11  0106 24400 	BRB	10$			; LOOP
                                     0108 24500 
                                     0108 24600 NET$GET_LOC_NAM::
            59       0000'CF     DE  0108 24700 	MOVAL	W^NET$AB_LOCALNDB,R9	; POINT TO LOCAL NDB
            53       0000'CF     D0  010D 24800 	MOVL	W^NET$GL_RES_PTR,R3	; GET DESTINATION BFR ADDRESS
                          FEEB'  30  0112 24900 	BSBW	NET$CTL_MOV_NAM		; MOVE IN THE NAME
                                 04  0115 25000 	RET				; DONE
                                     0116 25100 
                                     0116 25200 NET$GET_LINNAMS::
            53       0000'CF     D0  0116 25300 	MOVL	W^NET$GL_RES_PTR,R3	; GET POINTER TO OUTPUT BFR
            5A            04     9A  011B 25400 	MOVZBL	#4,R10			; NO. OF BYTES PER ENTRY
            59       0000'CF     D0  011E 25500 	MOVL	W^NET$GL_NODLST,R9	; POINT TO MY NDB
            59            69     D0  0123 25600 10$:	MOVL	NDB$L_NEXT(R9),R9	; GET ADDRESS OF NEXT NDB
                          C7     13  0126 25700 	BEQL	EXIT1			; IF EQL DONE
                          FED5'  30  0128 25800 	BSBW	NET$CTL_UPD_CNT		; CHECK FOR ROOM
            83         04 A9     D0  012B 25900 	MOVL	NDB$L_LINE_NAME(R9),(R3)+ ; STUFF THE LINE NAME
                          F2     11  012F 26000 	BRB	10$			; LOOP
                                     0131 26100 
                                     0131 26200 NET$DISC_LINK::
            50            12     D0  0131 26300 	MOVL	#PRV$V_OPER,R0		; NEED OPERATOR PRIVILEGE FOR THIS ONE
                          FEC9'  30  0134 26400 	BSBW	NET$CTL_CHKPRV		; CHECK THE PRIVILEGE
NETCTLNOD       - PROCESS NODE CONTROL FUNCTIONS                 22-AUG-1978 00:52:21   VAX-11 MACRO X0.3-11               Page   8
X01             LOCAL NODE FUNCTIONS                                                                                             (1)

                          FEC6'  30  0137 26500 	BSBW	NET$CTL_CHKNAM		; SEE IF NAME OK
                     0000'CF     D4  013A 26600 	CLRL	W^NET$GL_DEALLOC	; NO BUFFER TO DEALLOCATE
            5A            6B     9A  013E 26700 	MOVZBL	(R11),R10		; GET THE LINK INDEX
                          54     13  0141 26800 	BEQL	BADPARAM		; IF EQL BAD LINK ADDRESS
       0000'CF            5A     91  0143 26900 	CMPB	R10,W^NET$GW_MAXLNK	; IN RANGE?
                          4D     1A  0148 27000 	BGTRU	BADPARAM		; IF GTRU NO
            55       FFFC'CF4A   D0  014A 27100 	MOVL	W^NET$AL_UCBVCT-4[R10],R5 ; GET THE UCB ADDRESS
                          45     13  0150 27200 	BEQL	BADPARAM		; IF EQL LINK ADDRESS WAS NG
         1A A5            6B     B1  0152 27300 	CMPW	(R11),UCB$W_SRCADDR(R5)	; DOES THE WHOLE ADDRESS MATCH?
                          3F     12  0156 27400 	BNEQ	BADPARAM		; IF NEQ NO
            57         0C A5     9E  0158 27500 	MOVAB	UCB$T_PARTNER(R5),R7	; GET ADDRESS OF PARTNER'S NODENAME
                          FEA1'  30  015C 27600 	BSBW	NET$COMP_STRING		; SEE IF THEY MATCH
                          08     13  015F 27700 	BEQL	DISC_END		; IF EQL MATCH
                                     0161 27800 NOSUCHNODE:
       0000'CF       0000'8F     3C  0161 27900 	MOVZWL	#SS$_NOSUCHNODE,W^NET$GQ_USR_STAT ; NO GOOD
                                 04  0168 28000 	RET				; THAT IS ALL
                                     0169 28100 DISC_END:
                          FE94'  30  0169 28200 	BSBW	NET$PART_DSTNOD		; MAKE SURE DC GOES TO RIGHT PLACE
       0000'CF         7C A5     B0  016C 28300 	MOVW	UCB$W_NT_CHAN(R5),W^NET$GW_CHANNEL ; SET CHANNEL PROPERLY
       0000'CF            00     FB  0172 28400 	CALLS	#0,W^NET$THIRD_PARTY	; BREAK THE LINK
       0000'CF            00'    7D  0177 28500 	MOVQ	S^#SS$_NORMAL,W^NET$GQ_USR_STAT ; GOOD COMPLETION
                                 04  017C 28600 DONE:	RET				; DONE
NETCTLNOD       - PROCESS NODE CONTROL FUNCTIONS                 22-AUG-1978 00:52:21   VAX-11 MACRO X0.3-11               Page   9
X01             LOCAL NODE FUNCTIONS                                                                                             (1)

                                     017D 28800 NET$SET_LOC_STA::
            50            12     D0  017D 28900 	MOVL	#PRV$V_OPER,R0		; NEED OPERATOR PRIVILEGE FOR THIS ONE
                          FE7D'  30  0180 29000 	BSBW	NET$CTL_CHKPRV		; CHECK THE PRIVILEGE
       0000'CF            6B     B0  0183 29100 	MOVW	(R11),W^NET$GW_CTLCOUNT	; PUT BACK THE PARAMETER
                                     0188 29200 
                                     0188 29300 	ASSUME	NDB$C_ON EQ 0
                                     0188 29400 	ASSUME	NDB$C_OFF EQ 1
                                     0188 29500 	ASSUME	NDB$C_SHUT EQ 2
                                     0188 29600 
            50       0017'CF     9E  0188 29700 	MOVAB	W^NET$AB_LOCALNDB+NDB$B_STATUS,R0 ; GET ADDR OF MY STATUS BYTE
                                     018D 29800 	CASE	(R11),TYPE=B,<-		; DISPATCH ON PARAM
                                     018D 29900 		LOCAL_ON,-		;
                                     018D 30000 		LOCAL_OFF,-		;
                                     018D 30100 		LOCAL_SHUT,-		;
                                     018D 30200 >
                                     0197 30300 
                                     0197 30400 BADPARAM:
       0000'CF            00'    D0  0197 30500 	MOVL	S^#SS$_BADPARAM,W^NET$GQ_USR_STAT ; BAD PARAMETER
                                 04  019C 30600 	RET				; DONE
                                     019D 30700 LOCAL_ON:
            60            01     E1  019D 30800 	BBC	#NDB$V_OFF,(R0),10$	; IF BC ALREADY ON
                          07         01A0       
       0000'CF       0000'8F     B0  01A1 30900 	MOVW	#SS$_DEVMOUNT,W^NET$GQ_USR_STAT ; MARKED FOR DISMOUNT
                                     01A8 31000 10$:
                     0010'CF     D5  01A8 31100 	TSTL	W^NET$GL_DATALOCK	; IS DATABASE LOCKED?
                          09     13  01AC 31200 	BEQL	LOCAL_MORE		; IF EQL NO
            50            00'    D0  01AE 31300 	MOVL	S^#SS$_NOPRIV,R0	; DATA BASE LOCKED
                                     01B1 31400 ERROR:
       0000'CF            50     D0  01B1 31500 	MOVL	R0,W^NET$GQ_USR_STAT	; STORE ERROR CODE
                                 04  01B6 31600 	RET				; DONE
                                     01B7 31700 ;
                                     01B7 31800 ; SET STA LOCAL ON PROVIDES THE NEW LOCAL DATABASE AND THE AMOUNT OF
                                     01B7 31900 ; MEMORY TO BE ALLOCATED FOR THE NEW CONFIGURATION.  THE CONFIGURATION
                                     01B7 32000 ; DATABASE IS INTERLOCKED UNTIL ALL PERTINENT INFORMATION IS RECEIVED
                                     01B7 32100 ; AND CHECKED FOR VALIDITY AND REASONABLENESS.  AN "UPDATE OBJ" QIO
                                     01B7 32200 ; MUST BE RECEIVED FOR EACH OBJ RECORD, AND AN "UPDATE RMT" QIO MUST
                                     01B7 32300 ; BE RECEIVED FOR EACH RMT RECORD - ALL OBJ'S FIRST, THEN ALL RMT'S
                                     01B7 32400 ; AT LEAST "TASK" AND "NICE" OBJECTS MUST BE PROVIDED, AS WELL AS AN RMT
                                     01B7 32500 ; RECORD FOR THE LOCAL NODE, INCLUDING DEFAULT PRIVILEGED ACCESS.  WHEN
                                     01B7 32600 ; THE DATABASE HAS BEEN VERIFIED, IT IS MOVED OVER THE OLD DATABASE, AND
                                     01B7 32700 ; ANY FREE MEMORY IS RETURNED.
                                     01B7 32800 ;
                                     01B7 32900 LOCAL_MORE:
                       0C A3     DD  01B7 33000 	PUSHL	IRP$L_PID(R3)		; SAVE THE PID
            60            04     8A  01BA 33100 	BICB	#NDB$M_SHUT,(R0)	; NOT "SHUT"
                                     01BD 33200 ;
                                     01BD 33300 ; SET UP TO REINITIALIZE THE DATA BASE
                                     01BD 33400 ;
            50       0000'CF     D0  01BD 33500 	MOVL	W^NET$GL_NAME_LTH,R0	; GET LTH OF INPUT
                          B8     13  01C2 33600 	BEQL	DONE			; IF EQL NOTHING TO DO
            50            0F     D1  01C4 33700 	CMPL	#LOC$C_SIZE+4,R0	; NEED 2 COUNT WORDS + LOC RECORD
                          CE     12  01C7 33800 	BNEQ	BADPARAM		; IF NEQ NO GOOD
            57       0000'CF     D0  01C9 33900 	MOVL	W^NET$GL_NAME_PTR,R7	; POINT TO DATA
                                     01CE 34000 
                                     01CE 34100 	ASSUME	NCB$W_OBJLEN EQ 0
                                     01CE 34200 	ASSUME	NCB$W_RMTLEN EQ 2
                                     01CE 34300 
NETCTLNOD       - PROCESS NODE CONTROL FUNCTIONS                 22-AUG-1978 00:52:21   VAX-11 MACRO X0.3-11               Page  10
X01             LOCAL NODE FUNCTIONS                                                                                             (1)

            58            87     3C  01CE 34400 	MOVZWL	(R7)+,R8		; GET NO. OF OBJ BYTES
            56            87     3C  01D1 34500 	MOVZWL	(R7)+,R6		; GET NO. OF RMT BYTES
            56            58     C1  01D4 34600 	ADDL3	R8,R6,R10		; GET TOTAL SPACE NEEDED
                          5A         01D7       
            00'           67     91  01D8 34700 	CMPB	LOC$B_NAME(R7),S^#NET$C_MAXNODLTH ; NODE LTH OK?
                          BA     1A  01DB 34800 	BGTRU	BADPARAM		; IF GTRU NO
                       07 A7     95  01DD 34900 	TSTB	LOC$W_ADDRESS(R7)	; EXTENSIBLE ADDRESS?
                          B5     18  01E0 35000 	BGEQ	BADPARAM		; I TAKE ONLY EXTENSIBLE NODE NUMBERS
         00'8F         09 A7     91  01E2 35100 	CMPB	LOC$B_MAXLINKS(R7),#NET$C_MAXLNK ; TOO MANY?
                          02     1B  01E7 35200 	BLEQU	20$			; IF LEQU NO
                          AC     11  01E9 35300 10$:	BRB	BADPARAM		; ERROR
                                     01EB 35400 20$:
            02         09 A7     91  01EB 35500 	CMPB	LOC$B_MAXLINKS(R7),#2 	; TOO FEW?
                          A6     1F  01EF 35600 	BLSSU	BADPARAM		; IF LSSU YES
            67            0B     28  01F1 35700 	MOVC3	#LOC$C_SIZE,(R7),W^LOC_BUFFER ; SQUIRREL AWAY THE NEW LOC DATA
                     0025'CF         01F4       
            50       01FF CA     9E  01F7 35800 	MOVAB	511(R10),R0		; ROUND UP TO NEXT PAGE
            50   00000200 8F     C7  01FC 35900 	DIVL3	#512,R0,W^NEWPAGCNT	; COMPUTE NO. OF PAGES REQUIRED
                     0020'CF         0203       
                                     0206 36000 	$EXPREG_S	PAGCNT=W^NEWPAGCNT,- ; ALLOCATE SPACE
                                     0206 36100 			RETADR=W^NEWBASE ; PUT ADDRESSES HERE
            95            50     E9  0219 36200 	BLBC	R0,ERROR		; IF BC ERROR
       001C'CF       0014'CF     D0  021C 36300 	MOVL	W^NEWBASE,W^CUR_POINTER	; INIT PTR TO STORAGE
            58            20     C7  0223 36400 	DIVL3	#OBJ$C_SIZE,R8,W^OBJCOUNT ; STORE NO. OF OBJ TYPES
                     0000'CF         0226       
            56   00000072 8F     C7  0229 36500 	DIVL3	#RMT$C_SIZE,R6,W^RMTCOUNT ; GET NO. OF RMT RECORDS
                     0004'CF         0230       
                          B4     13  0233 36600 	BEQL	10$			; IF EQL NG - LOCAL RMT AT LEAST
       0008'CF       0000'CF     7D  0235 36700 	MOVQ	W^OBJCOUNT,W^CUR_OBJCOUNT ; SAVE COUNTS
                     0010'CF   8ED0  023C 36800 	POPL	W^NET$GL_DATALOCK	; LOCK THE DATBASE
                     0024'CF     94  0241 36900 	CLRB	W^OBJ_FLAG		; RESET OBJECT FLAGS
                                 04  0245 37000 	RET				; DONE
                                     0246 37100 
                                     0246 37200 
                                     0246 37300 NET$UPD_OBJECT::
       0010'CF         0C A3     D1  0246 37400 	CMPL	IRP$L_PID(R3),W^NET$GL_DATALOCK ; IS THIS THE RIGHT GUY?
                          75     12  024C 37500 	BNEQ	NOPRIV			; IF NEQ NO
                     0008'CF     D5  024E 37600 	TSTL	W^CUR_OBJCOUNT		; CAN I TAKE AN OBJ RECORD?
                          65     13  0252 37700 	BEQL	UNLOCK_ILLCNTRF		; IF EQL NO
            20       0000'CF     D1  0254 37800 	CMPL	W^NET$GL_NAME_LTH,#OBJ$C_SIZE ; RIGHT SIZE?
                          57     12  0259 37900 	BNEQ	UNLOCK_BADPARAM		; IF NEQ NO
                                 28  025B 38000 	MOVC3	W^NET$GL_NAME_LTH,-	; STORE THE OBJ RECORD
       0000'DF       0000'CF         025C 38100 		@W^NET$GL_NAME_PTR,@W^CUR_POINTER ;
                     001C'DF         0262       
       001C'CF            53     D0  0265 38200 	MOVL	R3,W^CUR_POINTER	; STORE THE NEW POINTER
                                     026A 38300 
                                     026A 38400 	ASSUME	OBJ$B_NAME EQ 0
                                     026A 38500 
            57         E0 A3     9E  026A 38600 	MOVAB	OBJ$B_NAME-OBJ$C_SIZE(R3),R7 ; POINT TO THE OBJECT NAME
         18 A7            14     E4  026E 38700 	BBSC	#PRV$V_NETMBX,OBJ$Q_PRIV(R7),5$ ; IGNORE NETMBX PRIVILEGE
                          00         0272       
                                     0273 38800 5$:
            56       0000'CF     9E  0273 38900 	MOVAB	W^TASK_NAME,R6		; POINT TO "TASK"
                          FD85'  30  0278 39000 	BSBW	NET$COMP_STRING		; IS THIS "TASK"?
                          0B     12  027B 39100 	BNEQ	10$			; IF NEQ NO
            00         09 A7     91  027D 39200 	CMPB	OBJ$B_NUMBER(R7),#NET_TASK ; RIGHT OBJECT NUMBER?
                          05     12  0281 39300 	BNEQ	10$			; IF NEQ NO
NETCTLNOD       - PROCESS NODE CONTROL FUNCTIONS                 22-AUG-1978 00:52:21   VAX-11 MACRO X0.3-11               Page  11
X01             LOCAL NODE FUNCTIONS                                                                                             (1)

       0024'CF            01     88  0283 39400 	BISB	#NET_M_TASK,W^OBJ_FLAG	; FLAG IT
                                     0288 39500 10$:
            56       0005'CF     9E  0288 39600 	MOVAB	W^NICE_NAME,R6		; SEE IF "NICE"
                          FD70'  30  028D 39700 	BSBW	NET$COMP_STRING		; MATCH?
                          0B     12  0290 39800 	BNEQ	20$			; IF NEQ NO
            13         09 A7     91  0292 39900 	CMPB	OBJ$B_NUMBER(R7),#NET_NICE ; RIGHT OBJECT NUMBER?
                          05     12  0296 40000 	BNEQ	20$			; IF NEQ NO
       0024'CF            02     88  0298 40100 	BISB	#NET_M_NICE,W^OBJ_FLAG	; FLAG IT
                                     029D 40200 20$:
                     0008'CF     D7  029D 40300 	DECL	W^CUR_OBJCOUNT		; ANOTHER OBJ RECORD
                          25     12  02A1 40400 	BNEQ	UPDATE_DONE		; IF NEQ MORE TO COME
       0018'CF       001C'CF     D0  02A3 40500 	MOVL	W^CUR_POINTER,W^RMTPOINTER ; SET UP POINTER TO RMT RECORDS
                                 8B  02AA 40600 	BICB3	W^OBJ_FLAG,-		; SEE IF "TASK" AND "NICE" ARE THERE
            03       0024'CF         02AB 40700 		#<NET_M_TASK!NET_M_NICE>,R0 ;
                          50         02AF       
                          16     13  02B0 40800 	BEQL	UPDATE_DONE		; IF EQL YES
                                     02B2 40900 
                                     02B2 41000 UNLOCK_BADPARAM:
       0000'CF            00'    D0  02B2 41100 	MOVL	S^#SS$_BADPARAM,W^NET$GQ_USR_STAT ; ASSUME WRONG RECORD SIZE
                          07     11  02B7 41200 	BRB	UNLOCK			; GO TO COMMON CODE
                                     02B9 41300 
                                     02B9 41400 UNLOCK_ILLCNTRF:
       0000'CF       0000'8F     3C  02B9 41500 	MOVZWL	#SS$_ILLCNTRFUNC,W^NET$GQ_USR_STAT ; ASSUME I NEED MORE OBJ RECORDS
                                     02C0 41600 					; FALL THROUGH TO COMMON CODE
                                     02C0 41700 ;
                                     02C0 41800 ; DATABASE IS NO GOOD - CLEAN UP
                                     02C0 41900 ;
                                     02C0 42000 UNLOCK:
                          07     10  02C0 42100 	BSBB	NET$CTL_CLRLOCK		; UNLOCK THE DATA BASE
                                 04  02C2 42200 	RET				; DONE
                                     02C3 42300 
                                     02C3 42400 NOPRIV:
       0000'CF            00'    D0  02C3 42500 	MOVL	S^#SS$_NOPRIV,W^NET$GQ_USR_STAT ; ERROR CODE
                                     02C8 42600 UPDATE_DONE:
                                 04  02C8 42700 	RET				; DONE
                                     02C9 42800 
                                     02C9 42900 ;++
                                     02C9 43000 ; NET$CTL_CLRLOCK - UNLOCK DATABASE AND CONTRACT PROGRAM REGION
                                     02C9 43100 ;
                                     02C9 43200 ;--
                                     02C9 43300 
                                     02C9 43400 NET$CTL_CLRLOCK::
                     0010'CF     D4  02C9 43500 	CLRL	W^NET$GL_DATALOCK	; UNLOCK THE DATABASE
                                     02CD 43600 	$CNTREG_S	W^NEWPAGCNT	; EVAPORATE THE NEW PAGES
                                 05  02DE 43700 	RSB				; DONE
                                     02DF 43800 
                                     02DF 43900 
                                     02DF 44000 NET$UPD_REMOTE::
       0010'CF         0C A3     D1  02DF 44100 	CMPL	IRP$L_PID(R3),W^NET$GL_DATALOCK ; IS THIS THE RIGHT GUY?
                          DC     12  02E5 44200 	BNEQ	NOPRIV			; IF NEQ NO
                     0008'CF     D5  02E7 44300 	TSTL	W^CUR_OBJCOUNT		; ARE THE OBJ RECORDS DONE?
                          D3     12  02EB 44400 	BNEQ	UNLOCK			; IF NEQ NO
   00000072 8F       0000'CF     D1  02ED 44500 	CMPL	W^NET$GL_NAME_LTH,#RMT$C_SIZE ; RIGHT SIZE?
                          C8     12  02F6 44600 	BNEQ	UNLOCK			; IF NEQ NO
                                 28  02F8 44700 	MOVC3	W^NET$GL_NAME_LTH,-	; STORE THE RMT RECORD
       0000'DF       0000'CF         02F9 44800 		@W^NET$GL_NAME_PTR,@W^CUR_POINTER ;
                     001C'DF         02FF       
NETCTLNOD       - PROCESS NODE CONTROL FUNCTIONS                 22-AUG-1978 00:52:21   VAX-11 MACRO X0.3-11               Page  12
X01             LOCAL NODE FUNCTIONS                                                                                             (1)

       001C'CF            53     D0  0302 44900 	MOVL	R3,W^CUR_POINTER	; STORE THE NEW POINTER
                     000C'CF     D7  0307 45000 	DECL	W^CUR_RMTCOUNT		; LAST RMT RECORD?
                          BB     12  030B 45100 	BNEQ	UPDATE_DONE		; IF NEQ NO
                                     030D 45200 ;
                                     030D 45300 ; NEW DATA BASE IS IN PLACE
                                     030D 45400 ;
                     0010'CF     D4  030D 45500 	CLRL	W^NET$GL_DATALOCK	; UNLOCK THE DATA BASE
                                     0311 45600 ;
                                     0311 45700 ; SEE IF AN RMT RECORD MATCHES THE LOCAL RECORD
                                     0311 45800 ;
            57       0018'CF     D0  0311 45900 	MOVL	W^RMTPOINTER,R7		; GET PTR TO RMT RECORD AREA
            5A       0004'CF     D0  0316 46000 	MOVL	W^RMTCOUNT,R10		; GET NO. OF RECORDS
                                     031B 46100 
                                     031B 46200 	ASSUME	LOC$B_NAME EQ 0
                                     031B 46300 	ASSUME	RMT$B_NAME EQ 0
                                     031B 46400 
            56       0025'CF     9E  031B 46500 	MOVAB	W^LOC_BUFFER,R6		; POINT TO NAME SOUGHT
                                     0320 46600 10$:
                          FCDD'  30  0320 46700 	BSBW	NET$COMP_STRING		; NAMES MATCH?
                          0C     13  0323 46800 	BEQL	15$			; IF EQL YES
            57         72 A7     9E  0325 46900 	MOVAB	RMT$C_SIZE(R7),R7	; POINT TO NEXT RECORD
            F4            5A     F5  0329 47000 	SOBGTR	R10,10$			; LOOP
                                     032C 47100 12$:
                          9B     10  032C 47200 	BSBB	NET$CTL_CLRLOCK		; CLEAN UP
                          FE66   31  032E 47300 	BRW	BADPARAM		; POST ERROR
                                     0331 47400 15$:
                       46 A7     95  0331 47500 	TSTB	RMT$B_PRVACC(R7)	; DEFAULT PRIV ACCESS INFO THERE?
                          F6     13  0334 47600 	BEQL	12$			; IF EQL NO
                                     0336 47700 ;
                                     0336 47800 ; PULL IN THE INFO FROM THE LOC RECORD
                                     0336 47900 ;
            59       0000'CF     9E  0336 48000 	MOVAB	W^NET$AB_LOCALNDB,R9	; GET MY NDB ADDRESS
                                     033B 48100 
                                     033B 48200 	ASSUME	LOC$W_ADDRESS EQ 7
                                     033B 48300 	ASSUME	LOC$B_MAXLINKS EQ 9
                                     033B 48400 	ASSUME	LOC$B_MAXNODES EQ 10
                                     033B 48500 	ASSUME	LOC$C_SIZE EQ 11
                                     033B 48600 
            66            07     28  033B 48700 	MOVC3	#7,(R6),NDB$T_NAME(R9)	; MOVE IN MY NEW NODE NAME
                       1A A9         033E       
         18 A9            81     B0  0340 48800 	MOVW	(R1)+,NDB$W_NODEADDR(R9) ; GET NODE NUMBER
       0000'CF            61     91  0344 48900 	CMPB	(R1),W^NET$GB_LINK_IDX	; NEED TO RESET LINK INDEX?
                          06     1E  0349 49000 	BGEQU	20$			; IF GEQU NO
            61            01     81  034B 49100 	ADDB3	#1,(R1),W^NET$GB_LINK_IDX ; FORCE USE OF LOWER INDEX
                     0000'CF         034E       
                                     0351 49200 20$:
         26 A9            81     33  0351 49300 	CVTWB	(R1)+,NDB$W_MAXLNK(R9)	; MAX NO. OF LOG LINKS - MAXNODES UNUSED
                                     0355 49400 ;
                                     0355 49500 ; CLEANUP OLD DATA BASE AND SET UP FOR NEW
                                     0355 49600 ;
            5A       0000'CF     D0  0355 49700 	MOVL	W^NET$GL_PAGCNT,R10	; GET CURRENT PAGE COUNT
            5A   00000200 8F     C5  035A 49800 	MULL3	#512,R10,R6		; GET NO. OF BYTES TO MOVE
                          56         0361       
       0014'DF            56     28  0362 49900 	MOVC3	R6,@W^NEWBASE,@W^NET$GL_OBJNAMES ; COLLAPSE THE DATA BASE
                     0000'DF         0367       
       0014'CF            56     C2  036A 50000 	SUBL2	R6,W^NEWBASE		; ADJUST POINTERS
       0018'CF            56     C2  036F 50100 	SUBL2	R6,W^RMTPOINTER		; THIS ONE, TOO
NETCTLNOD       - PROCESS NODE CONTROL FUNCTIONS                 22-AUG-1978 00:52:21   VAX-11 MACRO X0.3-11               Page  13
X01             LOCAL NODE FUNCTIONS                                                                                             (1)

       0000'CF       0014'CF     7D  0374 50200 	MOVQ	W^NEWBASE,W^NET$GL_OBJNAMES ; STUFF THE NEW POINTERS
       0000'CF       0020'CF     D0  037B 50300 	MOVL	W^NEWPAGCNT,W^NET$GL_PAGCNT ; AND THE PAGE COUNT
       0000'CF       0000'CF     7D  0382 50400 	MOVQ	W^OBJCOUNT,W^NET$GL_OBJCOUNT ; NEW OBJ COUNT AND RMT COUNT
                                     0389 50500 	$CNTREG_S	R10		; GET RID OF THE OLD AREA
            59       0000'CF     9E  0398 50600 	MOVAB	W^NET$AB_LOCALNDB,R9	; POINT TO LOCAL NDB
            58            59     D0  039D 50700 	MOVL	R9,R8			; HERE, TOO
                          FC5D'  30  03A0 50800 	BSBW	NET$FIND_RMT		; MATCH LOCAL NODE NAME AND STUFF DATA
                                 04  03A3 50900 	RET				; DONE
                                     03A4 51000 
                                     03A4 51100 	.ENABL	LSB
                                     03A4 51200 
                                     03A4 51300 LOCAL_OFF:
            60            01     E1  03A4 51400 	BBC	#NDB$V_OFF,(R0),10$	; IF BC NOT OFF
                          08         03A7       
                                     03A8 51500 ALREADY_OFF:
       0000'CF       0000'8F     B0  03A8 51600 	MOVW	#SS$_DEVNOTMOUNT,W^NET$GQ_USR_STAT ; ALREADY OFF
                                 04  03AF 51700 	RET				; DONE
                                     03B0 51800 10$:
   00000034'EF            00'    E2  03B0 51900 	BBSS	S^#DEV$V_DMT,L^NET$UCB0+UCB$L_DEVCHAR,LOCAL_DONE ; MARKED FOR DISMOUNT
                          19         03B7       
            58       0000'CF     D0  03B8 52000 	MOVL	W^NET$GL_NODLST,R8	; SET TO SCAN NDB'S
                                     03BD 52100 20$:
            59            58     D0  03BD 52200 	MOVL	R8,R9			; GET LINK TO NEXT NDB
                          0F     13  03C0 52300 	BEQL	LOCAL_DONE		; IF EQL NO MORE
            58            69     D0  03C2 52400 	MOVL	NDB$L_NEXT(R9),R8	; FETCH LINK TO NEXT NDB
                          FC38'  30  03C5 52500 	BSBW	NET$CTL_SET_OFF		; SET THE LINE OFF
                          F3     11  03C8 52600 	BRB	20$			; LOOP
                                     03CA 52700 
                                     03CA 52800 	.DSABL	LSB
                                     03CA 52900 
                                     03CA 53000 LOCAL_SHUT:
            60            01     E0  03CA 53100 	BBS	#NDB$V_OFF,(R0),ALREADY_OFF ; CAN'T DO A SHUT
                          DA         03CD       
            60            04     88  03CE 53200 	BISB	#NDB$M_SHUT,(R0)	; SET "SHUT" BIT
                                     03D1 53300 LOCAL_DONE:
                                 04  03D1 53400 	RET				; DONE
                                     03D2 53500 
                                     03D2 53600 	.END
NETCTLNOD       - PROCESS NODE CONTROL FUNCTIONS                 22-AUG-1978 00:52:21   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                     (1)

ALREADY_OFF      000003A8 R     05   IRP$V_MBXIO    = 0000000A            NDB$K_LENGTH     000000BC            
BADPARAM         00000197 R     05   IRP$V_MODE     = 00000000            NDB$L_LINE_NAME  00000004            
BIT...         = 00000002            IRP$V_PAGIO    = 00000002            NDB$L_NEXT       00000000            
CUR_OBJCOUNT     00000008 R     03   IRP$V_PHYSIO   = 00000008            NDB$M_CTL_LOOP = 00000008            
CUR_POINTER      0000001C R     03   IRP$V_PRIVIO   = 00000009            NDB$M_LOOPBACK = 00000001            
CUR_RMTCOUNT     0000000C R     03   IRP$V_SWAPIO   = 00000006            NDB$M_OFF      = 00000002            
DEV$V_DMT        ********   X   05   IRP$V_VIRTUAL  = 00000004            NDB$M_SHUT     = 00000004            
DISC_END         00000169 R     05   IRP$W_ABCNT      0000003C            NDB$Q_AST        0000000C            
DONE             0000017C R     05   IRP$W_BCNT       00000032            NDB$Q_ZEROTIME   000000AC            
ERROR            000001B1 R     05   IRP$W_BOFF       00000030            NDB$T_NAME       0000001A            
EXIT1            000000EF R     05   IRP$W_CHAN       00000028            NDB$T_SYSVER     0000002E            
GBL...         = 00000000            IRP$W_FUNC       00000020            NDB$V_CTL_LOOP = 00000003            
IRP$B_CARCON     00000038            IRP$W_OBCNT      0000003E            NDB$V_LOOPBACK = 00000000            
IRP$B_EFN        00000022            IRP$W_SIZE       00000008            NDB$V_OFF      = 00000001            
IRP$B_PRI        00000023            IRP$W_STS        0000002A            NDB$V_SHUT     = 00000002            
IRP$B_RMOD       0000000B            IRP$W_TT_PRMPT   0000003C            NDB$W_BLKSIZE    00000022            
IRP$B_TYPE       0000000A            LOC$B_MAXLINKS   00000009            NDB$W_BUFSIZE    000000A8            
IRP$C_LENGTH     0000004C            LOC$B_MAXNODES   0000000A            NDB$W_CHANNEL    00000014            
IRP$K_LENGTH     0000004C            LOC$B_NAME       00000000            NDB$W_CHAR       000000AA            
IRP$L_AST        00000010            LOC$C_SIZE       0000000B            NDB$W_HISBLKSIZ  000000B8            
IRP$L_ASTPRM     00000014            LOC$K_SIZE       0000000B            NDB$W_HISNSPSIZ  000000BA            
IRP$L_DIAGBUF    00000044            LOC$T_NAME       00000001            NDB$W_MAXLNK     00000026            
IRP$L_IOQBL      00000004            LOC$W_ADDRESS    00000007            NDB$W_NODEADDR   00000018            
IRP$L_IOQFL      00000000            LOCAL_DONE       000003D1 R     05   NDB$W_NSPSIZE    00000024            
IRP$L_IOSB       00000024            LOCAL_MORE       000001B7 R     05   NDB$W_RCVBLKS    000000B4            
IRP$L_IOST1      00000034            LOCAL_OFF        000003A4 R     05   NDB$W_SIZE       00000008            
IRP$L_IOST2      00000038            LOCAL_ON         0000019D R     05   NDB$W_XMTBLKS    000000B6            
IRP$L_MEDIA      00000034            LOCAL_SHUT       000003CA R     05   NET$AB_LOCALNDB  ********   X   05   
IRP$L_PID        0000000C            LOC_BUFFER       00000025 R     03   NET$AL_UCBVCT    ********   X   05   
IRP$L_SEGVBN     00000040            NCB$W_OBJLEN     00000000            NET$AW_ENDNCT    ********   X   05   
IRP$L_SEQNUM     00000048            NCB$W_RMTLEN     00000002            NET$AW_STARTNCT  ********   X   05   
IRP$L_SVAPTE     0000002C            NDB$B_COMMVER    0000002B            NET$CLR_LOC_CTR  000000C5 RG    05   
IRP$L_TT_TERM    00000038            NDB$B_CONNTMO    0000004F            NET$COMP_STRING  ********   X   05   
IRP$L_UCB        0000001C            NDB$B_FUNC       00000021            NET$CTL_CHKNAM   ********   X   05   
IRP$L_WIND       00000018            NDB$B_NONPRVACC  00000050            NET$CTL_CHKPRV   ********   X   05   
IRP$M_BUFIO    = 00000001            NDB$B_NUMBUF     0000000B            NET$CTL_CLRLOCK  000002C9 RG    05   
IRP$M_CHAINED  = 00000020            NDB$B_PRVACC     0000007C            NET$CTL_FNDNDB   ********   X   05   
IRP$M_COMPLX   = 00000008            NDB$B_RTEVER     00000028            NET$CTL_GET_CNT  00000090 RG    05   
IRP$M_DIAGBUF  = 00000080            NDB$B_STATE      00000016            NET$CTL_MOV_NAM  ********   X   05   
IRP$M_FUNC     = 00000002            NDB$B_STATUS     00000017            NET$CTL_NEXTNDB  ********   X   05   
IRP$M_MBXIO    = 00000400            NDB$B_TYPE       0000000A            NET$CTL_SET_OFF  ********   X   05   
IRP$M_PAGIO    = 00000004            NDB$C_CTL_LOOP = 00000005            NET$CTL_UPD_CNT  ********   X   05   
IRP$M_PHYSIO   = 00000100            NDB$C_LENGTH     000000BC            NET$C_MAXLNK     ********   X   05   
IRP$M_PRIVIO   = 00000200            NDB$C_LOOP     = 00000003            NET$C_MAXNODLTH  ********   X   05   
IRP$M_SWAPIO   = 00000040            NDB$C_MAINT    = 00000004            NET$C_ST_ON      ********   X   05   
IRP$M_VIRTUAL  = 00000010            NDB$C_MSG_DCHK = 00000009            NET$DISC_LINK    00000131 RG    05   
IRP$Q_NT_PRVMSK  0000003C            NDB$C_MSG_DOWN = 00000003            NET$FIND_RMT     ********   X   05   
IRP$S_FCODE    = 00000006            NDB$C_MSG_DSRCH= 00000007            NET$GB_LINK_IDX  ********   X   05   
IRP$S_FMOD     = 0000000A            NDB$C_MSG_LOOPB= 00000008            NET$GB_MYSTATUS  ********   X   05   
IRP$S_MODE     = 00000002            NDB$C_MSG_MAINT= 00000002            NET$GET_LINNAMS  00000116 RG    05   
IRP$V_BUFIO    = 00000000            NDB$C_MSG_NGINI= 00000004            NET$GET_LNBYNOD  00000000 RG    05   
IRP$V_CHAINED  = 00000005            NDB$C_MSG_OKINI= 00000005            NET$GET_LOC_CTR  0000007B RG    05   
IRP$V_COMPLX   = 00000003            NDB$C_MSG_SHUT = 00000006            NET$GET_LOC_NAM  00000108 RG    05   
IRP$V_DIAGBUF  = 00000007            NDB$C_MSG_START= 00000001            NET$GET_LOC_STA  00000065 RG    05   
IRP$V_FCODE    = 00000000            NDB$C_OFF      = 00000001            NET$GET_LOGLNKS  00000029 RG    05   
IRP$V_FMOD     = 00000006            NDB$C_ON       = 00000000            NET$GET_NODNAMS  000000F0 RG    05   
IRP$V_FUNC     = 00000001            NDB$C_SHUT     = 00000002            NET$GL_DATALOCK  00000010 RG    03   
NETCTLNOD       - PROCESS NODE CONTROL FUNCTIONS                 22-AUG-1978 00:52:21   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                     (1)

NET$GL_DEALLOC   ********   X   05   PRV$V_NOACNT   = 00000009            UCB$B_OFFRTC     00000095            
NET$GL_NAME_LTH  ********   X   05   PRV$V_OPER     = 00000012            UCB$B_REMSRV     0000003D            
NET$GL_NAME_PTR  ********   X   05   PRV$V_PHY_IO   = 00000016            UCB$B_SECTORS    0000003C            
NET$GL_NODLST    ********   X   05   PRV$V_PRMCEB   = 0000000A            UCB$B_SLAVE      00000074            
NET$GL_OBJCOUNT  ********   X   05   PRV$V_PRMGBL   = 00000018            UCB$B_SPR        00000075            
NET$GL_OBJNAMES  ********   X   05   PRV$V_PRMMBX   = 0000000B            UCB$B_STATE      00000052            
NET$GL_PAGCNT    ********   X   05   PRV$V_PSWAPM   = 0000000C            UCB$B_TRACKS     0000003D            
NET$GL_RES_LTH   ********   X   05   PRV$V_SETPRI   = 0000000D            UCB$B_TYPE       0000000A            
NET$GL_RES_PTR   ********   X   05   PRV$V_SETPRV   = 0000000E            UCB$B_VERTSZ     0000003F            
NET$GQ_USR_STAT  ********   X   05   PRV$V_SYSGBL   = 00000019            UCB$C_LENGTH     00000074            
NET$GQ_ZTIMEN    ********   X   05   PRV$V_SYSNAM   = 00000002            UCB$C_LOGLNK   = 00000001            
NET$GW_ACTLNKS   ********   X   05   PRV$V_TMPMBX   = 0000000F            UCB$K_LENGTH     00000074            
NET$GW_CHANNEL   ********   X   05   PRV$V_VOLPRO   = 00000015            UCB$L_AMB        00000054            
NET$GW_CTLCOUNT  ********   X   05   PRV$V_WORLD    = 00000010            UCB$L_ASTQBL     00000010            
NET$GW_HIGHLNKS  ********   X   05   REMOTE_DONE      00000028 R     05   UCB$L_ASTQFL     0000000C            
NET$GW_MAXLNK    ********   X   05   RMT$B_CONNECT    00000019            UCB$L_CPID       0000005C            
NET$PART_DSTNOD  ********   X   05   RMT$B_NAME       00000000            UCB$L_CRB        00000020            
NET$SET_LOC_STA  0000017D RG    05   RMT$B_NONPRVACC  0000001A            UCB$L_DDB        00000024            
NET$THIRD_PARTY  ********   X   05   RMT$B_PRVACC     00000046            UCB$L_DEVCHAR    00000034            
NET$UCB0         ********   X   05   RMT$C_FILE     = 00000001            UCB$L_DEVDEPEND  0000003C            
NET$UPD_OBJECT   00000246 RG    05   RMT$C_SIZE       00000072            UCB$L_DPC        00000080            
NET$UPD_REMOTE   000002DF RG    05   RMT$K_SIZE       00000072            UCB$L_DUETIM     0000005C            
NET_MINPATH    = 00000004            RMT$Q_RCVPW      00000011            UCB$L_DX_BFPNT   0000009C            
NET_M_NICE     = 00000002            RMT$Q_XMTPW      00000009            UCB$L_DX_BUF     00000098            
NET_M_TASK     = 00000001            RMT$T_NAME       00000001            UCB$L_DX_RXDB    000000A0            
NET_NICE       = 00000013            RMT$T_NONPRVACC  0000001B            UCB$L_EMB        00000078            
NET_TASK       = 00000000            RMT$T_PRVACC     00000047            UCB$L_FIRST      00000014            
NET_V_NICE     = 00000001            RMT$W_NUMBER     00000007            UCB$L_FPC        0000000C            
NET_V_TASK     = 00000000            RMTCOUNT         00000004 R     03   UCB$L_FQBL       00000004            
NEWBASE          00000014 R     03   RMTPOINTER     = 00000018 R     03   UCB$L_FQFL       00000000            
NEWPAGCNT        00000020 R     03   SS$_BADPARAM     ********   X   05   UCB$L_FR3        00000010            
NICE_NAME        00000005 R     04   SS$_DEVMOUNT     ********   X   05   UCB$L_FR4        00000014            
NOPRIV           000002C3 R     05   SS$_DEVNOTMOUNT  ********   X   05   UCB$L_IOQBL      00000044            
NOSUCHNODE       00000161 R     05   SS$_ILLCNTRFUNC  ********   X   05   UCB$L_IOQFL      00000040            
OBJ$B_FILE       0000000A            SS$_NOPRIV       ********   X   05   UCB$L_IRP        0000004C            
OBJ$B_NAME       00000000            SS$_NORMAL       ********   X   05   UCB$L_LINK       0000002C            
OBJ$B_NUMBER     00000009            SS$_NOSUCHNODE   ********   X   05   UCB$L_LOGADR     00000064            
OBJ$C_FILE     = 00000000            SS$_RESULTOVF    ********   X   05   UCB$L_MAXBLOCK   00000084            
OBJ$C_SIZE       00000020            SYS$CNTREG       ********   X   05   UCB$L_MEDIA      0000008C            
OBJ$K_SIZE       00000020            SYS$EXPREG       ********   X   05   UCB$L_NT_DATSSB  00000074            
OBJ$Q_PRIV       00000018            SYS$GETTIM       ********   X   05   UCB$L_NT_INTSSB  00000078            
OBJ$T_FILE       0000000B            TASK_NAME        00000000 R     04   UCB$L_OPCNT      00000060            
OBJ$T_NAME       00000001            UCB$B_AMOD       00000053            UCB$L_OWNUIC     0000001C            
OBJCOUNT         00000000 R     03   UCB$B_CEX        00000077            UCB$L_PID        00000028            
OBJ_FLAG         00000024 R     03   UCB$B_CM1        0000004A            UCB$L_RQBL       00000004            
PRV$V_ALLSPOOL = 00000004            UCB$B_CM2        0000004B            UCB$L_RQFL       00000000            
PRV$V_BUGCHK   = 00000017            UCB$B_DEVCLASS   00000038            UCB$L_SVAPTE     00000068            
PRV$V_CMEXEC   = 00000001            UCB$B_DEVTYPE    00000039            UCB$L_SVPN       00000064            
PRV$V_CMKRNL   = 00000000            UCB$B_DIPL       00000052            UCB$L_TTCHAR     0000003C            
PRV$V_DETACH   = 00000005            UCB$B_DX_SCTCNT  000000A6            UCB$L_VCB        00000030            
PRV$V_DIAGNOSE = 00000006            UCB$B_ERTCNT     00000070            UCB$M_BACKP    = 00000020            
PRV$V_EXQUOTA  = 00000013            UCB$B_ERTMAX     00000071            UCB$M_BSY      = 00000100            
PRV$V_GROUP    = 00000008            UCB$B_ESCAPE     0000004B            UCB$M_CANCEL   = 00000008            
PRV$V_GRPNAM   = 00000003            UCB$B_FEX        00000076            UCB$M_DEADMO   = 00000400            
PRV$V_LOG_IO   = 00000007            UCB$B_FIPL       0000000B            UCB$M_DELMBX   = 00000002            
PRV$V_MOUNT    = 00000011            UCB$B_LOCSRV     0000003C            UCB$M_DIAGBUF  = 00000002            
PRV$V_NETMBX   = 00000014            UCB$B_OFFNDX     00000094            UCB$M_DX_WRITE = 00000008            
NETCTLNOD       - PROCESS NODE CONTROL FUNCTIONS                 22-AUG-1978 00:52:21   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                     (1)

UCB$M_ECC      = 00000001            UCB$W_BYTESTOGO  0000003E            
UCB$M_ERLOGIP  = 00000004            UCB$W_CHARGE     0000004A            
UCB$M_INT      = 00000002            UCB$W_CYLINDERS  0000003E            
UCB$M_INTTYPE  = 00000080            UCB$W_DA         0000008C            
UCB$M_JOB      = 00000001            UCB$W_DC         0000008E            
UCB$M_MOUNTING = 00000200            UCB$W_DEVBUFSIZ  0000003A            
UCB$M_NOCNVRT  = 00000004            UCB$W_DEVSTS     0000005A            
UCB$M_NT_BFROVF= 00000004            UCB$W_DIRSEQ     00000088            
UCB$M_NT_BREAK = 00000020            UCB$W_DSTADDR    00000018            
UCB$M_NT_NAME  = 00000010            UCB$W_DX_BCR     000000A4            
UCB$M_ONLINE   = 00000010            UCB$W_EC1        00000090            
UCB$M_POWER    = 00000020            UCB$W_EC2        00000092            
UCB$M_PRMMBX   = 00000001            UCB$W_ERRCNT     00000072            
UCB$M_TIM      = 00000001            UCB$W_FUNC       0000007E            
UCB$M_TIMOUT   = 00000040            UCB$W_MB_SEED    FFFFFFFC            
UCB$M_TT_NOTIF = 00000004            UCB$W_MSGCNT     00000016            
UCB$M_TT_TIMO  = 00000002            UCB$W_MSGMAX     00000014            
UCB$M_UNLOAD   = 00001000            UCB$W_NT_CHAN    0000007C            
UCB$M_VALID    = 00000800            UCB$W_OFFSET     0000008A            
UCB$S_LNKPRI   = 00000002            UCB$W_REFC       00000050            
UCB$S_LTYPE    = 00000002            UCB$W_SIZE       00000008            
UCB$T_PARTNER    0000000C            UCB$W_SRCADDR    0000001A            
UCB$V_BACKP    = 00000005            UCB$W_STS        00000058            
UCB$V_BSY      = 00000008            UCB$W_UNIT       00000048            
UCB$V_CANCEL   = 00000003            UCB$W_VPROT      0000001A            
UCB$V_DEADMO   = 0000000A            UNLOCK           000002C0 R     05   
UCB$V_DELMBX   = 00000001            UNLOCK_BADPARAM  000002B2 R     05   
UCB$V_DIAGBUF  = 00000001            UNLOCK_ILLCNTRF  000002B9 R     05   
UCB$V_DX_WRITE = 00000003            UPDATE_DONE      000002C8 R     05   
UCB$V_ECC      = 00000000            
UCB$V_ERLOGIP  = 00000002            
UCB$V_INT      = 00000001            
UCB$V_INTTYPE  = 00000007            
UCB$V_JOB      = 00000000            
UCB$V_LNKPRI   = 00000006            
UCB$V_LTYPE    = 00000000            
UCB$V_MOUNTING = 00000009            
UCB$V_MSGACK   = 00000004            
UCB$V_MSGFLO   = 00000003            
UCB$V_NOCNVRT  = 00000002            
UCB$V_NT_BFROVF= 00000002            
UCB$V_NT_BREAK = 00000005            
UCB$V_NT_NAME  = 00000004            
UCB$V_ONLINE   = 00000004            
UCB$V_POWER    = 00000005            
UCB$V_PRMMBX   = 00000000            
UCB$V_SEGFLO   = 00000002            
UCB$V_TIM      = 00000000            
UCB$V_TIMOUT   = 00000006            
UCB$V_TT_NOTIF = 00000002            
UCB$V_TT_TIMO  = 00000001            
UCB$V_UNLOAD   = 0000000C            
UCB$V_VALID    = 0000000B            
UCB$W_BCNT       0000006E            
UCB$W_BCR        00000096            
UCB$W_BOFF       0000006C            
UCB$W_BUFQUO     00000018            
NETCTLNOD       - PROCESS NODE CONTROL FUNCTIONS                 22-AUG-1978 00:52:21   VAX-11 MACRO X0.3-11               Page  17
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFE      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
NET_IMPURE       00000030      03     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD    WRT BYTE  
NET_PURE         0000000A      04     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD  NOWRT BYTE  
NET_CONTROL      000003D2      05     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
14406. BYTES LEFT IN FREE MEMORY POOL.
1176. BYTES OF RECLAIMED MEMORY.
OBJ$:NETCTLNOD,LIS$:NETCTLNOD/-SP=EXECML$/ML,M1/ML,M2/ML,SRC$:NETCTLNOD
71 MLB DIR RDS - 640 GETS TO DEFINE 24 MACROS. 44 INTER. FILE WRITES. 
