NETVIRTIO       - PERFORM VIRTUAL I/O FUNCTIONS                  22-AUG-1978 01:01:58   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)    3400  HISTORY
   (1)    4200  DECLARATIONS
   (1)    6400  PROCESS WRITE VIRTUAL REQUEST
   (1)   16400  PROCESS READ VIRTUAL REQUEST
NETVIRTIO       - PERFORM VIRTUAL I/O FUNCTIONS                  22-AUG-1978 01:01:58   VAX-11 MACRO X0.3-11               Page   1
X01                                                                                                                              (1)

                                     0000   100 
                                     0000   200 	.TITLE	NETVIRTIO - PERFORM VIRTUAL I/O FUNCTIONS
                                     0000   300 	.IDENT	/X01/
                                     0000   400 
                                     0000   500 ;
                                     0000   600 ; COPYRIGHT (C) 1977, 1978
                                     0000   700 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000   800 ;
                                     0000   900 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000  1000 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000  1100 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000  1200 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000  1300 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000  1400 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000  1500 ; REMAIN IN DEC.
                                     0000  1600 ;
                                     0000  1700 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000  1800 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000  1900 ; CORPORATION.
                                     0000  2000 ;
                                     0000  2100 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000  2200 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000  2300 
                                     0000  2400 ;++
                                     0000  2500 ; FACILITY:	NETWORK ACP
                                     0000  2600 ;
                                     0000  2700 ; ABSTRACT:
                                     0000  2800 ;	THIS MODULE PROCESSES READ/WRITE VIRTUAL REQUESTS.
                                     0000  2900 ;
                                     0000  3000 ; ENVIRONMENT:
                                     0000  3100 ;	MODE = KERNEL
                                     0000  3200 ;--
NETVIRTIO       - PERFORM VIRTUAL I/O FUNCTIONS                  22-AUG-1978 01:01:58   VAX-11 MACRO X0.3-11               Page   2
X01             HISTORY                                                                                                          (1)

                                     0000  3400 	.SBTTL	HISTORY
                                     0000  3500 ; AUTHOR:	SCOTT G. DAVIS, CREATION DATE: 25-OCT-77
                                     0000  3600 ;
                                     0000  3700 ; MODIFIED BY:
                                     0000  3800 ;
                                     0000  3900 ;	, : VERSION
                                     0000  4000 ; 01	- 
NETVIRTIO       - PERFORM VIRTUAL I/O FUNCTIONS                  22-AUG-1978 01:01:58   VAX-11 MACRO X0.3-11               Page   3
X01             DECLARATIONS                                                                                                     (1)

                                     0000  4200 	.SBTTL	DECLARATIONS
                                     0000  4300 ;
                                     0000  4400 ; INCLUDE FILES:
                                     0000  4500 ;
                                     0000  4600 	$CXBDEF
                                     0000  4700 	$IRPDEF
                                     0000  4800 	$SSBDEF
                                     0000  4900 	$UCBDEF
                                     0000  5000 
                                     0000  5100 ;
                                     0000  5200 ; MACROS:
                                     0000  5300 ;
                                     0000  5400 
                                     0000  5500 ;
                                     0000  5600 ; EQUATED SYMBOLS:
                                     0000  5700 ;
                                     0000  5800 
                                     0000  5900 ;
                                     0000  6000 ; OWN STORAGE:
                                     0000  6100 ;
NETVIRTIO       - PERFORM VIRTUAL I/O FUNCTIONS                  22-AUG-1978 01:01:58   VAX-11 MACRO X0.3-11               Page   4
X01             DECLARATIONS                                                                                                     (1)

                                 00000000  6300 	.PSECT	NET_CODE,NOWRT
                                     0000  6400 	.SBTTL	PROCESS WRITE VIRTUAL REQUEST
                                     0000  6500 ;++
                                     0000  6600 ; FUNCTIONAL DESCRIPTION:
                                     0000  6700 ;
                                     0000  6800 ; NET$XMT_QIO - THIS ROUTINE TAKES A MESSAGE CHAINED AND
                                     0000  6900 ;	SEGMENTED BY NETDRIVER AND QUEUES THE SEGMENTS FOR TRANSMISSION.
                                     0000  7000 ;
                                     0000  7100 ; CALLING SEQUENCE:
                                     0000  7200 ;
                                     0000  7300 ;	ENTERED VIA CASE IN NETTRN
                                     0000  7400 ;
                                     0000  7500 ; INPUT PARAMETERS:
                                     0000  7600 ;
                                     0000  7700 ;	R5 - UCB ADDRESS OF LOGICAL LINK
                                     0000  7800 ;
                                     0000  7900 ; COMPLETION CODES:
                                     0000  8000 ;
                                     0000  8100 ;	SS$_NOSOLICIT - INTERRUPT MSG NOT SOLICITED BY PARTNER NSP
                                     0000  8200 ;
                                     0000  8300 ; SIDE EFFECTS:
                                     0000  8400 ;
                                     0000  8500 ;	SEGMENTS MAY BE TRANSMITTED TO PARTNER NSP (MAY BE SELF)
                                     0000  8600 ;
                                     0000  8700 ;--
                                     0000  8800 
                                     0000  8900 NET$XMT_QIO::
            53         4C A5     D0  0000  9000 	MOVL	UCB$L_IRP(R5),R3	; GET IRP ADDRESS
            52         74 A5     D0  0004  9100 	MOVL	UCB$L_NT_DATSSB(R5),R2	; ASSUME NORMAL DATA MSG
            57         20 A3     3C  0008  9200 	MOVZWL	IRP$W_FUNC(R3),R7	; GET FUNCTION CODE
            56         2C A3     D0  000C  9300 	MOVL	IRP$L_SVAPTE(R3),R6	; GET ADDRESS OF 1ST SEGMENT OF MSG
                       2C A3     D4  0010  9400 	CLRL	IRP$L_SVAPTE(R3)	; AVOID DOUBLE DEALLOCATION
            57            00'    E1  0013  9500 	BBC	S^#IO$V_INTERRUPT,R7,30$ ; IF BC NOT INTERRUPT MSG
                          45         0016       
                                     0017  9600 ;
                                     0017  9700 ; PROCESS AN INTERRUPT MESSAGE
                                     0017  9800 ;
                     0000'CF     D4  0017  9900 	CLRL	W^NET$GL_RCVBUF		; ASSUME NOT A LOCAL LINK
            54         7C A5     B0  001B 10000 	MOVW	UCB$W_NT_CHAN(R5),R4	; GET PHYSICAL LINK CHANNEL NO.
                          06     12  001F 10100 	BNEQ	5$			; IF NEQ NOT LOCAL LINK
       0000'CF         10 A6     D0  0021 10200 	MOVL	CXB$L_LINK(R6),W^NET$GL_RCVBUF ; STUFF THE BUFFER ADDRESS FOR RCV
                                     0027 10300 5$:
            52         78 A5     D0  0027 10400 	MOVL	UCB$L_NT_INTSSB(R5),R2	; SET SSB ADDRESS FOR INT/LS
                       22 A2     95  002B 10500 	TSTB	SSB$B_REQCNT(R2)	; INTERRUPT MSG SOLICITED?
                          0D     13  002E 10600 	BEQL	10$			; IF EQL NO - ERROR
                       22 A2     97  0030 10700 	DECB	SSB$B_REQCNT(R2)	; DECREMENT SOLICITED COUNT
         10 A6            53     D0  0033 10800 	MOVL	R3,CXB$L_IRP(R6)	; SET UP FOR I/O TERMINATION
                          4A     10  0037 10900 	BSBB	SET_SEGNUM		; SUPPLY A SEGMENT NUMBER
                          FFC4'  30  0039 11000 	BSBW	NET$RE_XMT_MSG		; SEND IT ON ITS WAY!
                                 04  003C 11100 	RET				; DONE
                                     003D 11200 ;
                                     003D 11300 ; INTERRUPT MESSAGE NOT SOLICITED
                                     003D 11400 ;
                                     003D 11500 10$:
         2C A3            56     D0  003D 11600 	MOVL	R6,IRP$L_SVAPTE(R3)	; PUT BACK THE BUFFER ADDRESS FOR DEALLOCATION
            50       0000'CF     D0  0041 11700 	MOVL	W^NET$GL_RCVBUF,R0	; IS THERE A RCV BUFFER, TOO?
                          03     13  0046 11800 	BEQL	15$			; IF EQL NO
NETVIRTIO       - PERFORM VIRTUAL I/O FUNCTIONS                  22-AUG-1978 01:01:58   VAX-11 MACRO X0.3-11               Page   5
X01             PROCESS WRITE VIRTUAL REQUEST                                                                                    (1)

                          FFB5'  30  0048 11900 	BSBW	NET$DEANONPAGED		; DEALLOCATE IT
                                     004B 12000 15$:
       0000'CF       0000'8F     3C  004B 12100 	MOVZWL	#SS$_NOSOLICIT,W^NET$GQ_USR_STAT ; SET STATUS
                          FFAB'  30  0052 12200 	BSBW	NET$IODONE		; TERMINATE THE I/O
                                 04  0055 12300 	RET				; THAT IS ALL
                                     0056 12400 ;
                                     0056 12500 ; PROCESS NORMAL DATA MESSAGE
                                     0056 12600 ;
                                     0056 12700 20$:
                       10 A6     D4  0056 12800 	CLRL	CXB$L_LINK(R6)		; MARK AS NOT LAST SEGMENT OF MSG
            56            50     D0  0059 12900 	MOVL	R0,R6			; GET NEXT LINK
                                     005C 13000 30$:
            58            56     D0  005C 13100 	MOVL	R6,R8			; SAVE ADDRESS FOR IRP STUFFING
                          22     10  005F 13200 	BSBB	SET_SEGNUM		; SUPPLY A SEGMENT NUMBER
         04 B2            66     0E  0061 13300 	INSQUE	(R6),@SSB$L_XQBL(R2)	; QUEUE THE SEGMENT FOR THE DATA SUBCHANNEL
                       7C A5     B5  0065 13400 	TSTW	UCB$W_NT_CHAN(R5)	; IS THIS A LOCAL LINK?
                          0B     12  0068 13500 	BNEQ	40$			; IF NEQ NO
            56         10 A6     D0  006A 13600 	MOVL	CXB$L_LINK(R6),R6	; POINT TO RECEIVE BUFFER
                       10 A8     D4  006E 13700 	CLRL	CXB$L_LINK(R8)		; NOT LAST IN CHAIN
         04 B2            66     0E  0071 13800 	INSQUE	(R6),@SSB$L_XQBL(R2)	; QUEUE THE BUFFER FOR THE DATA SUBCHANNEL
                                     0075 13900 40$:
            50         10 A6     D0  0075 14000 	MOVL	CXB$L_LINK(R6),R0	; GET ADDRESS OF NEXT SEGMENT IN CHAIN
                          DB     12  0079 14100 	BNEQ	20$			; IF NEQ NOT LAST SEGMENT
         10 A8            53     D0  007B 14200 	MOVL	R3,CXB$L_IRP(R8)	; PUT IN IRP ADDRESS FOR TERMINATION
                                     007F 14300 ;
                                     007F 14400 ; NOW TRY TO SEND ON THIS LOGICAL LINK
                                     007F 14500 ;
                          FF7E'  30  007F 14600 	BSBW	NET$USRXMT		; TRANSMIT, FLOW CONTROL PERMITTING
                                 04  0082 14700 	RET				; DONE
                                     0083 14800 
                                     0083 14900 
                                     0083 15000 ;++
                                     0083 15100 ; SET_SEGNUM - PUT SEGNUM FIELD INTO DATA/INT MESSAGE AND SSB ADDRESS INTO CXB
                                     0083 15200 ;
                                     0083 15300 ; INPUTS:	R2 - SSB ADDRESS
                                     0083 15400 ;		R6 - CXB ADDRESS
                                     0083 15500 ;
                                     0083 15600 ;--
                                     0083 15700 
                                     0083 15800 SET_SEGNUM:
                       1C A2     B6  0083 15900 	INCW	SSB$W_XMTSEGNUM(R2)	; BUMP SEGMENT NO.
         1C A2       F000 8F     AB  0086 16000 	BICW3	#^C<4095>,SSB$W_XMTSEGNUM(R2),CXB$C_NSPSTART+5(R6) ; SEGNUM MOD 4096
                       1F A6         008C       
         14 A6            52     D0  008E 16100 	MOVL	R2,CXB$L_SSB(R6)	; STORE THE SSB ADDRESS
                                 05  0092 16200 	RSB				; DONE
NETVIRTIO       - PERFORM VIRTUAL I/O FUNCTIONS                  22-AUG-1978 01:01:58   VAX-11 MACRO X0.3-11               Page   6
X01             PROCESS READ VIRTUAL REQUEST                                                                                     (1)

                                     0093 16400 	.SBTTL	PROCESS READ VIRTUAL REQUEST
                                     0093 16500 ;++
                                     0093 16600 ; FUNCTIONAL DESCRIPTION:
                                     0093 16700 ;
                                     0093 16800 ; NET$RCV_QIO - SEND A LINK SERVICES MSG TO PARTNER
                                     0093 16900 ;
                                     0093 17000 ; CALLING SEQUENCE:
                                     0093 17100 ;
                                     0093 17200 ;	ENTERED VIA CASE IN NETTRN
                                     0093 17300 ;
                                     0093 17400 ; INPUT PARAMETERS:
                                     0093 17500 ;
                                     0093 17600 ;	R5 - LOGICAL LINK UCB ADDRESS
                                     0093 17700 ;
                                     0093 17800 ; IMPLICIT INPUTS:
                                     0093 17900 ;
                                     0093 18000 ;	NONE
                                     0093 18100 ;
                                     0093 18200 ; OUTPUT PARAMETERS:
                                     0093 18300 ;
                                     0093 18400 ;	NONE
                                     0093 18500 ;
                                     0093 18600 ; IMPLICIT OUTPUTS:
                                     0093 18700 ;
                                     0093 18800 ;	NONE
                                     0093 18900 ;
                                     0093 19000 ; COMPLETION CODES:
                                     0093 19100 ;
                                     0093 19200 ;	NONE
                                     0093 19300 ;
                                     0093 19400 ; SIDE EFFECTS:
                                     0093 19500 ;
                                     0093 19600 ;	LINK SERVICES MSG TRANSMITTED TO PARTNER (MAY BE SELF)
                                     0093 19700 ;
                                     0093 19800 ;--
                                     0093 19900 
                                     0093 20000 NET$RCV_QIO::
            53         4C A5     D0  0093 20100 	MOVL	UCB$L_IRP(R5),R3	; GET THE IRP ADDRESS
         3E A5         38 A3     B0  0097 20200 	MOVW	IRP$L_MEDIA+4(R3),UCB$W_BYTESTOGO(R5) ; SET MAX LTH OF RCV
         04 B5            63     0E  009C 20300 	INSQUE	(R3),@UCB$L_RQBL(R5)	; QUEUE THE IRP TO THE LSB'S RCV QUEUE
            52         74 A5     D0  00A0 20400 	MOVL	UCB$L_NT_DATSSB(R5),R2	; SET UP FOR SUBCHANNEL
                       21 A2     96  00A4 20500 	INCB	SSB$B_FCVAL(R2)		; ANOTHER AS YET UNREQUESTED MESSAGE
                          FF56'  30  00A7 20600 	BSBW	NET$XMT_LNKSRV		; SEND A LINK SERVICES MSG
                                 04  00AA 20700 	RET				; DONE
                                     00AB 20800 
                                     00AB 20900 	.END
NETVIRTIO       - PERFORM VIRTUAL I/O FUNCTIONS                  22-AUG-1978 01:01:58   VAX-11 MACRO X0.3-11               Page   7
SYMBOL TABLE                                                                                                                     (1)

BIT...         = 00000000            IRP$S_FCODE    = 00000006            SSB$W_XMTSEGACK  0000001E            
CXB$B_CODE       0000000B            IRP$S_FMOD     = 0000000A            SSB$W_XMTSEGNUM  0000001C            
CXB$B_TYPE       0000000A            IRP$S_MODE     = 00000002            UCB$B_AMOD       00000053            
CXB$C_DDCCON   = 00000001            IRP$V_BUFIO    = 00000000            UCB$B_CEX        00000077            
CXB$C_DDCDAT   = 00000002            IRP$V_CHAINED  = 00000005            UCB$B_CM1        0000004A            
CXB$C_DDCERR   = 00000004            IRP$V_COMPLX   = 00000003            UCB$B_CM2        0000004B            
CXB$C_DDCRCV   = 00000003            IRP$V_DIAGBUF  = 00000007            UCB$B_DEVCLASS   00000038            
CXB$C_LENGTH     00000018            IRP$V_FCODE    = 00000000            UCB$B_DEVTYPE    00000039            
CXB$C_NSPSTART   0000001A            IRP$V_FMOD     = 00000006            UCB$B_DIPL       00000052            
CXB$K_LENGTH     00000018            IRP$V_FUNC     = 00000001            UCB$B_DX_SCTCNT  000000A6            
CXB$K_NSPSTART   0000001A            IRP$V_MBXIO    = 0000000A            UCB$B_ERTCNT     00000070            
CXB$L_BL         00000004            IRP$V_MODE     = 00000000            UCB$B_ERTMAX     00000071            
CXB$L_FL         00000000            IRP$V_PAGIO    = 00000002            UCB$B_ESCAPE     0000004B            
CXB$L_IRP        00000010            IRP$V_PHYSIO   = 00000008            UCB$B_FEX        00000076            
CXB$L_LINK       00000010            IRP$V_PRIVIO   = 00000009            UCB$B_FIPL       0000000B            
CXB$L_SSB        00000014            IRP$V_SWAPIO   = 00000006            UCB$B_LOCSRV     0000003C            
CXB$W_CHANNEL    00000010            IRP$V_VIRTUAL  = 00000004            UCB$B_OFFNDX     00000094            
CXB$W_LENGTH     0000000C            IRP$W_ABCNT      0000003C            UCB$B_OFFRTC     00000095            
CXB$W_OFFSET     0000000E            IRP$W_BCNT       00000032            UCB$B_REMSRV     0000003D            
CXB$W_SIZE       00000008            IRP$W_BOFF       00000030            UCB$B_SECTORS    0000003C            
GBL...         = 00000000            IRP$W_CHAN       00000028            UCB$B_SLAVE      00000074            
IO$V_INTERRUPT   ********   X   03   IRP$W_FUNC       00000020            UCB$B_SPR        00000075            
IRP$B_CARCON     00000038            IRP$W_OBCNT      0000003E            UCB$B_STATE      00000052            
IRP$B_EFN        00000022            IRP$W_SIZE       00000008            UCB$B_TRACKS     0000003D            
IRP$B_PRI        00000023            IRP$W_STS        0000002A            UCB$B_TYPE       0000000A            
IRP$B_RMOD       0000000B            IRP$W_TT_PRMPT   0000003C            UCB$B_VERTSZ     0000003F            
IRP$B_TYPE       0000000A            NET$DEANONPAGED  ********   X   03   UCB$C_LENGTH     00000074            
IRP$C_LENGTH     0000004C            NET$GL_RCVBUF    ********   X   03   UCB$C_LOGLNK   = 00000001            
IRP$K_LENGTH     0000004C            NET$GQ_USR_STAT  ********   X   03   UCB$K_LENGTH     00000074            
IRP$L_AST        00000010            NET$IODONE       ********   X   03   UCB$L_AMB        00000054            
IRP$L_ASTPRM     00000014            NET$RCV_QIO      00000093 RG    03   UCB$L_ASTQBL     00000010            
IRP$L_DIAGBUF    00000044            NET$RE_XMT_MSG   ********   X   03   UCB$L_ASTQFL     0000000C            
IRP$L_IOQBL      00000004            NET$USRXMT       ********   X   03   UCB$L_CPID       0000005C            
IRP$L_IOQFL      00000000            NET$XMT_LNKSRV   ********   X   03   UCB$L_CRB        00000020            
IRP$L_IOSB       00000024            NET$XMT_QIO      00000000 RG    03   UCB$L_DDB        00000024            
IRP$L_IOST1      00000034            SET_SEGNUM       00000083 R     03   UCB$L_DEVCHAR    00000034            
IRP$L_IOST2      00000038            SS$_NOSOLICIT    ********   X   03   UCB$L_DEVDEPEND  0000003C            
IRP$L_MEDIA      00000034            SSB$B_FCVAL      00000021            UCB$L_DPC        00000080            
IRP$L_PID        0000000C            SSB$B_PNDCNT     00000023            UCB$L_DUETIM     0000005C            
IRP$L_SEGVBN     00000040            SSB$B_REQCNT     00000022            UCB$L_DX_BFPNT   0000009C            
IRP$L_SEQNUM     00000048            SSB$B_TIPC       00000020            UCB$L_DX_BUF     00000098            
IRP$L_SVAPTE     0000002C            SSB$B_TYPE       0000000A            UCB$L_DX_RXDB    000000A0            
IRP$L_TT_TERM    00000038            SSB$C_LENGTH     00000024            UCB$L_EMB        00000078            
IRP$L_UCB        0000001C            SSB$K_LENGTH     00000024            UCB$L_FIRST      00000014            
IRP$L_WIND       00000018            SSB$L_UCB        00000014            UCB$L_FPC        0000000C            
IRP$M_BUFIO    = 00000001            SSB$L_WACKQBL    00000010            UCB$L_FQBL       00000004            
IRP$M_CHAINED  = 00000020            SSB$L_WACKQFL    0000000C            UCB$L_FQFL       00000000            
IRP$M_COMPLX   = 00000008            SSB$L_XQBL       00000004            UCB$L_FR3        00000010            
IRP$M_DIAGBUF  = 00000080            SSB$L_XQFL       00000000            UCB$L_FR4        00000014            
IRP$M_FUNC     = 00000002            SSB$M_ACKP     = 00008000            UCB$L_IOQBL      00000044            
IRP$M_MBXIO    = 00000400            SSB$M_NAKP     = 00007000            UCB$L_IOQFL      00000040            
IRP$M_PAGIO    = 00000004            SSB$S_NAKP     = 00000003            UCB$L_IRP        0000004C            
IRP$M_PHYSIO   = 00000100            SSB$V_ACKP     = 0000000F            UCB$L_LINK       0000002C            
IRP$M_PRIVIO   = 00000200            SSB$V_NAKP     = 0000000C            UCB$L_LOGADR     00000064            
IRP$M_SWAPIO   = 00000040            SSB$W_RCVSEGACK  0000001A            UCB$L_MAXBLOCK   00000084            
IRP$M_VIRTUAL  = 00000010            SSB$W_RCVSEGNUM  00000018            UCB$L_MEDIA      0000008C            
IRP$Q_NT_PRVMSK  0000003C            SSB$W_SIZE       00000008            UCB$L_NT_DATSSB  00000074            
NETVIRTIO       - PERFORM VIRTUAL I/O FUNCTIONS                  22-AUG-1978 01:01:58   VAX-11 MACRO X0.3-11               Page   8
SYMBOL TABLE                                                                                                                     (1)

UCB$L_NT_INTSSB  00000078            UCB$V_NT_BFROVF= 00000002            
UCB$L_OPCNT      00000060            UCB$V_NT_BREAK = 00000005            
UCB$L_OWNUIC     0000001C            UCB$V_NT_NAME  = 00000004            
UCB$L_PID        00000028            UCB$V_ONLINE   = 00000004            
UCB$L_RQBL       00000004            UCB$V_POWER    = 00000005            
UCB$L_RQFL       00000000            UCB$V_PRMMBX   = 00000000            
UCB$L_SVAPTE     00000068            UCB$V_SEGFLO   = 00000002            
UCB$L_SVPN       00000064            UCB$V_TIM      = 00000000            
UCB$L_TTCHAR     0000003C            UCB$V_TIMOUT   = 00000006            
UCB$L_VCB        00000030            UCB$V_TT_NOTIF = 00000002            
UCB$M_BACKP    = 00000020            UCB$V_TT_TIMO  = 00000001            
UCB$M_BSY      = 00000100            UCB$V_UNLOAD   = 0000000C            
UCB$M_CANCEL   = 00000008            UCB$V_VALID    = 0000000B            
UCB$M_DEADMO   = 00000400            UCB$W_BCNT       0000006E            
UCB$M_DELMBX   = 00000002            UCB$W_BCR        00000096            
UCB$M_DIAGBUF  = 00000002            UCB$W_BOFF       0000006C            
UCB$M_DX_WRITE = 00000008            UCB$W_BUFQUO     00000018            
UCB$M_ECC      = 00000001            UCB$W_BYTESTOGO  0000003E            
UCB$M_ERLOGIP  = 00000004            UCB$W_CHARGE     0000004A            
UCB$M_INT      = 00000002            UCB$W_CYLINDERS  0000003E            
UCB$M_INTTYPE  = 00000080            UCB$W_DA         0000008C            
UCB$M_JOB      = 00000001            UCB$W_DC         0000008E            
UCB$M_MOUNTING = 00000200            UCB$W_DEVBUFSIZ  0000003A            
UCB$M_NOCNVRT  = 00000004            UCB$W_DEVSTS     0000005A            
UCB$M_NT_BFROVF= 00000004            UCB$W_DIRSEQ     00000088            
UCB$M_NT_BREAK = 00000020            UCB$W_DSTADDR    00000018            
UCB$M_NT_NAME  = 00000010            UCB$W_DX_BCR     000000A4            
UCB$M_ONLINE   = 00000010            UCB$W_EC1        00000090            
UCB$M_POWER    = 00000020            UCB$W_EC2        00000092            
UCB$M_PRMMBX   = 00000001            UCB$W_ERRCNT     00000072            
UCB$M_TIM      = 00000001            UCB$W_FUNC       0000007E            
UCB$M_TIMOUT   = 00000040            UCB$W_MB_SEED    FFFFFFFC            
UCB$M_TT_NOTIF = 00000004            UCB$W_MSGCNT     00000016            
UCB$M_TT_TIMO  = 00000002            UCB$W_MSGMAX     00000014            
UCB$M_UNLOAD   = 00001000            UCB$W_NT_CHAN    0000007C            
UCB$M_VALID    = 00000800            UCB$W_OFFSET     0000008A            
UCB$S_LNKPRI   = 00000002            UCB$W_REFC       00000050            
UCB$S_LTYPE    = 00000002            UCB$W_SIZE       00000008            
UCB$T_PARTNER    0000000C            UCB$W_SRCADDR    0000001A            
UCB$V_BACKP    = 00000005            UCB$W_STS        00000058            
UCB$V_BSY      = 00000008            UCB$W_UNIT       00000048            
UCB$V_CANCEL   = 00000003            UCB$W_VPROT      0000001A            
UCB$V_DEADMO   = 0000000A            
UCB$V_DELMBX   = 00000001            
UCB$V_DIAGBUF  = 00000001            
UCB$V_DX_WRITE = 00000003            
UCB$V_ECC      = 00000000            
UCB$V_ERLOGIP  = 00000002            
UCB$V_INT      = 00000001            
UCB$V_INTTYPE  = 00000007            
UCB$V_JOB      = 00000000            
UCB$V_LNKPRI   = 00000006            
UCB$V_LTYPE    = 00000000            
UCB$V_MOUNTING = 00000009            
UCB$V_MSGACK   = 00000004            
UCB$V_MSGFLO   = 00000003            
UCB$V_NOCNVRT  = 00000002            
NETVIRTIO       - PERFORM VIRTUAL I/O FUNCTIONS                  22-AUG-1978 01:01:58   VAX-11 MACRO X0.3-11               Page   9
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFE      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
NET_CODE         000000AB      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
17242. BYTES LEFT IN FREE MEMORY POOL.
3482. BYTES OF RECLAIMED MEMORY.
OBJ$:NETVIRTIO,LIS$:NETVIRTIO/-SP=EXECML$/ML,M1/ML,M2/ML,SRC$:NETVIRTIO
42 MLB DIR RDS - 478 GETS TO DEFINE 13 MACROS. 28 INTER. FILE WRITES. 
