RUNCVTUIC       - CONVERT UIC TO BINARY                          21-AUG-1978 19:03:49   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      40  DECLARATIONS
   (1)     238  RUN_PARS - PARSE A STRING
   (1)     317  UIC PARSE ACTION ROUTINES
RUNCVTUIC       - CONVERT UIC TO BINARY                          21-AUG-1978 19:03:49   VAX-11 MACRO X0.3-11               Page   1
00                                                                                                                               (1)

                                     0000     1 	.TITLE	RUNCVTUIC - CONVERT UIC TO BINARY
                                     0000     2 	.IDENT	/00/
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY: RUN-DETACHED CLI UTILITY
                                     0000    25 ;
                                     0000    26 ; ABSTRACT:
                                     0000    27 ;
                                     0000    28 ; THIS MODULE CONVERTS A UIC TO BINARY GROUP AND MEMBER CODES.
                                     0000    29 ;
                                     0000    30 ; ENVIRONMENT: USER MODE
                                     0000    31 ;
                                     0000    32 ; AUTHOR: C. A. MONIA	, CREATION DATE: 15-AUG-1977
                                     0000    33 ;
                                     0000    34 ; MODIFIED BY:
                                     0000    35 ;
                                     0000    36 ;	, : VERSION 00
                                     0000    37 ; 01	- 
                                     0000    38 ;--
RUNCVTUIC       - CONVERT UIC TO BINARY                          21-AUG-1978 19:03:49   VAX-11 MACRO X0.3-11               Page   2
00              DECLARATIONS                                                                                                     (1)

                                     0000    40 	.SBTTL	DECLARATIONS
                                     0000    41  
                                     0000    42 ;
                                     0000    43 ; MACROS:
                                     0000    44 ;
                                     0000    45 ; BUILD DISPATCH TABLE FOR CASE INSTRUCTION
                                     0000    46 ;
                                     0000    47  
                                     0000    48 	.MACRO	CASE,SRC,DISPLIST,TYPE=W,BASE=#0,NMODE=S^#,?START,?MAX
                                     0000    49 	CASE'TYPE	SRC,BASE,NMODE'<<MAX-START>/2>-1
                                     0000    50 START:
                                     0000    51 	.IRP	EP,<DISPLIST>
                                     0000    52 	.WORD	EP-START
                                     0000    53 	.ENDR
                                     0000    54 MAX:
                                     0000    55 	.ENDM
                                     0000    56  
                                     0000    57 ;
                                     0000    58 ; DEFINE STATE TABLE ENTRY
                                     0000    59 ;
                                     0000    60  
                                     0000    61 	.MACRO	STATE	NAME
                                     0000    62 	.SAVE
                                     0000    63 	.PSECT	TRANTBL,RD,NOWRT
                                     0000    64 $$T=.
                                     0000    65 	.PSECT	STATETBL,RD,NOWRT
                                     0000    66 	.IF NB	<NAME>
                                     0000    67 NAME:
                                     0000    68 	.ENDC
                                     0000    69 $$S=.
                                     0000    70 	.WORD	$$T-TRSIZE
                                     0000    71 	.RESTORE
                                     0000    72 	.ENDM
                                     0000    73  
                                     0000    74 ;
                                     0000    75 ; DEFINE TRANSITION TABLE ENTRY
                                     0000    76 ;
                                     0000    77  
                                     0000    78 	.MACRO	TRAN,TOKEN,ACTION,NEXTSTATE
                                     0000    79 	.SAVE
                                     0000    80 	.PSECT	TRANTBL,RD,NOWRT
                                     0000    81 	.IF B	TOKEN
                                     0000    82 	.BYTE	-1
                                     0000    83 	.RESTORE
                                     0000    84 	.MEXIT
                                     0000    85 	.IFF
                                     0000    86 	.BYTE	TOKEN
                                     0000    87 	.ENDC
                                     0000    88 	.IF NB	<ACTION>
                                     0000    89 	.WORD	ACTION
                                     0000    90 	.IFF
                                     0000    91 	.WORD	0
                                     0000    92 	.ENDC
                                     0000    93 	.IF NB	<NEXTSTATE>
                                     0000    94 	.IF IDN	$END,<NEXTSTATE>
                                     0000    95 	.WORD	0
                                     0000    96 	.IFF
RUNCVTUIC       - CONVERT UIC TO BINARY                          21-AUG-1978 19:03:49   VAX-11 MACRO X0.3-11               Page   3
00              DECLARATIONS                                                                                                     (1)

                                     0000    97 	.WORD	NEXTSTATE
                                     0000    98 	.ENDC
                                     0000    99 	.IFF
                                     0000   100 	.WORD	$$S+2
                                     0000   101 	.ENDC
                                     0000   102 	.RESTORE
                                     0000   103 	.ENDM
                                     0000   104  
                                     0000   105 ;
                                     0000   106 ; DEFINE DATA STRUCTURE
                                     0000   107 ;
                                     0000   108  
                                     0000   109 	.MACRO	$DSECT
                                     0000   110 	.PSECT	$ABS$,ABS
                                     0000   111 	.ENDM
                                     0000   112  
                                     0000   113 ;
                                     0000   114 ; EQUATED SYMBOLS:
                                     0000   115 ;
                                     0000   116 ; DEFINE TOKEN VALUES
                                     0000   117 ;
                                     0000   118  
                           0000000E  0000   119 CHR$K_EOL=14				; END OF LINE
                           0000000D  0000   120 CHR$K_PERCE=13				; PERCENT SIGN
                                     0000   121  
                                     0000   122 ;
                                     0000   123 ; DEFINE ARGUMENT LIST OFFSETS
                                     0000   124 ;
                                     0000   125  
                                     0000   126 	$DSECT
                                     0000   127  
                           00000000  0000   128 $$$=.
                                     0000   129  
                           00000004  0000   130 	.BLKL	1
                           00000008  0004   131 STRNG:	.BLKL	1			; ADDRESS OF STRING DESCRIPTOR
                           0000000C  0008   132 VALUE:	.BLKL	1			; ADDRESS TO RECEIVE VALUE
                                     000C   133  
                                     000C   134 ;
                                     000C   135 ; DEFINE TRANSITION TABLE OFFSETS
                                     000C   136 ;
                           00000000  000C   137 .=$$$
                                     0000   138  
                           00000001  0000   139 TOKEN:	.BLKB	1			; VALUE OF TOKEN
                           00000003  0001   140 ACTION:	.BLKW	1			; ADDRESS OF ACTION ROUTINE
                           00000005  0003   141 NEXTSTATE:.BLKW	1			; NEXT STATE
                                     0005   142 TRSIZE:					; SIZE OF TRANSITION TABLE ENTRY
                                     0005   143  
                                     0005   144 ;
                                     0005   145 ; OWN STORAGE:
                                     0005   146 ;
                                     0005   147 ; STATE TABLE AND TRANSITION LIST FOR UIC STRING
                                     0005   148 ;
                                     0005   149  
                                     0005   150 	STATE	BEGIN			;
                                     0005   151 	TRAN	CHR$K_LBRAKT,LBRCKT	; LEFT BRACKET
                                     0005   152 	TRAN				;
                                     0005   153 	STATE	A1			;
RUNCVTUIC       - CONVERT UIC TO BINARY                          21-AUG-1978 19:03:49   VAX-11 MACRO X0.3-11               Page   4
00              DECLARATIONS                                                                                                     (1)

                                     0005   154 	TRAN	CHR$K_ALPHA,ALPHAN,A1	; ALPHABETIC
                                     0005   155 	TRAN	CHR$K_NUMERIC,ALPHAN,A1	; NUMERIC
                                     0005   156 	TRAN	CHR$K_DOT,ALPHAN,A1	; DECIMAL POINT
                                     0005   157 	TRAN	CHR$K_PERCE,ALPHAN,A1	; PERCENT SIGN
                                     0005   158 	TRAN	CHR$K_COMMA,COMMA	; COMMA
                                     0005   159 	TRAN				;
                                     0005   160 	STATE	A2			;
                                     0005   161 	TRAN	CHR$K_ALPHA,ALPHAN,A2	; ALPHABETIC
                                     0005   162 	TRAN	CHR$K_NUMERIC,ALPHAN,A2	; NUMERIC
                                     0005   163 	TRAN	CHR$K_DOT,ALPHAN,A2	; DECIMAL POINT
                                     0005   164 	TRAN	CHR$K_PERCE,ALPHAN,A2	; PERCENT SIGN
                                     0005   165 	TRAN	CHR$K_RBRAKT		;
                                     0005   166 	TRAN				;
                                     0005   167 	STATE				;
                                     0005   168 	TRAN	CHR$K_EOL,,$END		; TERMINATE ON END OF LINE
                                     0005   169 	TRAN				;
                                     0005   170  
                                 00000000   171 	.PSECT	RUN_CVTUIC_DAT	RD,WRT,BYTE
                                     0000   172  
                           00000008  0000   173 GROUP:	.BLKL	2			; STRING DESCRIPTOR FOR GROUP
                           00000010  0008   174 OWNER:	.BLKL	2			; STRING DESCRIPTOR FOR OWNER
                           00000014  0010   175 STRNGAD:.BLKL	1			; ADDRESS OF CURRENT STRING DESCRIPTOR
                           00000018  0014   176 UIC:	.BLKL	1			; UIC ADDRESS
                                     0018   177 
                                     0018   178 ;+
                                     0018   179 ; RUN_CVTUIC - CONVERT UIC TO BINARY
                                     0018   180 ;
                                     0018   181 ; THIS PROCEDURE IS CALLED TO PARSE A UIC SPECIFICATION AND CONVERT THE
                                     0018   182 ; GROUP AND OWNER STRINGS TO BINARY.
                                     0018   183 ;
                                     0018   184 ; INPUTS:
                                     0018   185 ;
                                     0018   186 ;	AP POINTS TO AN ARGUMENT LIST IN THE FOLLOWING FORMAT
                                     0018   187 ;
                                     0018   188 ;		.LONG	2			; COUNT
                                     0018   189 ;		.LONG	STRNG			; ADDRESS OF UIC STRING DESCRIPTOR
                                     0018   190 ;		.LONG	UIC			; ADDRESS OF LONGWORD TO RECEIVE UIC
                                     0018   191 ;
                                     0018   192 ; OUTPUTS:
                                     0018   193 ;
                                     0018   194 ;	R0 LBS = UIC SUCCESFULLY CONVERTED
                                     0018   195 ;
                                     0018   196 ;	R0 LBC = SYNTAX ERROR IN UIC SPECIFICATION
                                     0018   197 ;
                                     0018   198 ;-
                                     0018   199  
                                 00000000   200 	.PSECT	RUN_CVTUIC	NOWRT
                                     0000   201  
                                     0000   202 RUN_CVTUIC::				;
                               00FE  0000   203 	.WORD	^M<R1,R2,R3,R4,R5,R6,R7> ; SAVE R1 - R7
                     0000'CF     7C  0002   204 	CLRQ	W^GROUP			; RESET STRING DESCRIPTOR FOR GROUP
                     0008'CF     7C  0006   205 	CLRQ	W^OWNER			; RESET STRING DESCRIPTOR FOR OWNER
            55         04 BC     7D  000A   206 	MOVQ	@STRNG(AP),R5		; GET GET STRING DESCRIPTOR IN R5, R6
            57       0000'CF     9E  000E   207 	MOVAB	W^BEGIN,R7		; POINT TO START OF STATETABLES
                          3D     10  0013   208 	BSBB	RUN_PARS		; PARSE STRING
            15            50     E9  0015   209 	BLBC	R0,10$			; IF LBC SYNTAX ERROR
            51       0008'CF     9E  0018   210 	MOVAB	W^OWNER,R1		; GET OWNER STRING ADDRESS
RUNCVTUIC       - CONVERT UIC TO BINARY                          21-AUG-1978 19:03:49   VAX-11 MACRO X0.3-11               Page   5
00              DECLARATIONS                                                                                                     (1)

                          55     D4  001D   211 	CLRL	R5			; CLEAR WORD INDEX
                          0D     10  001F   212 	BSBB	20$			; CONVERT GROUP TO NUMERIC
            09            50     E9  0021   213 	BLBC	R0,10$			; IF LBC ERROR
            51       0000'CF     9E  0024   214 	MOVAB	W^GROUP,R1		; GET ADDRESS OF GROUP STRING
                          55     D6  0029   215 	INCL	R5			; INCREMENT WORD INDEX
                          01     10  002B   216 	BSBB	20$			; CONVERT OWNER TO NUMERIC
                                     002D   217 10$:					;
                                 04  002D   218 	RET				;
                                     002E   219  
                                     002E   220 ;
                                     002E   221 ; CONVERT GROUP OR OWNER TO BINARY
                                     002E   222 ;
                                     002E   223  
                                     002E   224 20$:					;
            7E       0014'CF     9E  002E   225 	MOVAB	W^UIC,-(SP)		; PUSH ADDRESS TO RECEIVE VALUE
            52            6E     D0  0033   226 	MOVL	(SP),R2			; COPY ADDRESS
            7E            51     D0  0036   227 	MOVL	R1,-(SP)		; PUSH ADDRESS OF STRING DESCRIPTOR
   00000000'EF            02     FB  0039   228 	CALLS	#2,LIB$CVT_OCTBIN	; CONVERT TO BINARY
            0E            50     E9  0040   229 	BLBC	R0,30$			; IF LBC ERROR
                          50     D4  0043   230 	CLRL	R0			; ASSUME VALUE TOO LARGE
                       02 A2     B5  0045   231 	TSTW	2(R2)			; VALUE OK?
                          07     12  0048   232 	BNEQ	30$			; IF NEQ NO
         08 BC45          62     B0  004A   233 	MOVW	(R2),@VALUE(AP)[R5]	; RETURN VALUE
                          50     D6  004F   234 	INCL	R0			; SET SUCCESS
                                     0051   235 30$:					;
                                 05  0051   236 	RSB				;
RUNCVTUIC       - CONVERT UIC TO BINARY                          21-AUG-1978 19:03:49   VAX-11 MACRO X0.3-11               Page   6
00              RUN_PARS - PARSE A STRING                                                                                        (1)

                                     0052   238 	.SBTTL	RUN_PARS - PARSE A STRING
                                     0052   239  
                                     0052   240 ;+
                                     0052   241 ; RUN_PARS - PARSE A STRING
                                     0052   242 ;
                                     0052   243 ; THIS ROUTINE IS ENTERED VIA A BSB OR JSB TO PERFORM TABLE DRIVEN PARSING.
                                     0052   244 ; IT REQUIRES A SET OF STATE AND CORRESPONDING TRANSITION TABLES THAT DEFINE
                                     0052   245 ; THE SYNTAX OF THE STRING TO BE PARSED.
                                     0052   246 ;
                                     0052   247 ; THE SET OF TOKENS RECOGNIZED IS LIMITED TO THE FOLLOWING:
                                     0052   248 ;
                                     0052   249 ;	ALPHABETIC
                                     0052   250 ;	NUMERIC
                                     0052   251 ;	DOT (.)
                                     0052   252 ;	SLASH (/)
                                     0052   253 ;	SEMICOLON (;)
                                     0052   254 ;	LEFT BRACKET ([)
                                     0052   255 ;	RIGHT BRACKET (])
                                     0052   256 ;	COLON (:)
                                     0052   257 ;	BLANK
                                     0052   258 ;	DOLLAR SIGN ($)
                                     0052   259 ;	UNDERSCORE (_)
                                     0052   260 ;	PERCENT (%)
                                     0052   261 ;	END-OF-STRING
                                     0052   262 ;
                                     0052   263 ;
                                     0052   264 ; INPUTS:
                                     0052   265 ;
                                     0052   266 ;	R5, R6 = STRING DESCRIPTOR
                                     0052   267 ;	R7 = ADDRESS OF STATE TABLES
                                     0052   268 ;
                                     0052   269 ; OUTPUTS:
                                     0052   270 ;
                                     0052   271 ;	R0 LBS = STRING IS SYNTACTICALLY CORRECT
                                     0052   272 ;
                                     0052   273 ;	R0 LBC = SYNTAX ERROR
                                     0052   274 ;
                                     0052   275 ;		R5 = COUNT OF REMAINING UNPROCESSED CHARACTERS
                                     0052   276 ;		R6 = ADDRESS OF CHARACTER IN ERROR
                                     0052   277 ;
                                     0052   278 ;-
                                     0052   279  
                                     0052   280 RUN_PARS::				;
                          55     B6  0052   281 	INCW	R5			; BIAS STRING COUNT
                          56     D7  0054   282 	DECL	R6			; BIAS STRING POINTER
                                     0056   283 20$:					;
            57            67     3C  0056   284 	MOVZWL	(R7),R7			; POINT TO TRANSITION TABLE FOR STATE
            50            0E     D0  0059   285 	MOVL	#CHR$K_EOL,R0		; ASSUME END OF STRING
                          55     B7  005C   286 	DECW	R5			; AT END?
                          0D     13  005E   287 	BEQL	30$			; IF EQL YES
                          56     D6  0060   288 	INCL	R6			; INCREMENT STRING POINTER
            50            0D     D0  0062   289 	MOVL	#CHR$K_PERCE,R0		; ASSUME PERCENT SIGN
            25            66     91  0065   290 	CMPB	(R6),#^A/%/		; PERCENT SIGN?
                          03     13  0068   291 	BEQL	30$			; IF EQL YES
                          FF93'  30  006A   292 	BSBW	CHR$TSTCHR		; DETERMINE CHARACTER TYPE
                                     006D   293 30$:					;
            57            05     A0  006D   294 	ADDW	#TRSIZE,R7		; POINT TO NEXT TABLE ENTRY
RUNCVTUIC       - CONVERT UIC TO BINARY                          21-AUG-1978 19:03:49   VAX-11 MACRO X0.3-11               Page   7
00              RUN_PARS - PARSE A STRING                                                                                        (1)

                          67     95  0070   295 	TSTB	TOKEN(R7)		; AT END OF TRANSITION TABLE?
                          18     19  0072   296 	BLSS	ILLCHR			; IF LSS YES, ILLEGAL
            67            50     91  0074   297 	CMPB	R0,TOKEN(R7)		; TEST INPUT
                          F4     12  0077   298 	BNEQ	30$			; IF NEQ, GO TO NEXT TRANSITION
            50         01 A7     3C  0079   299 	MOVZWL	ACTION(R7),R0		; GET ADDRESS OF ACTION ROUTINE
                          02     13  007D   300 	BEQL	40$			; IF EQL NONE
                          60     16  007F   301 	JSB	(R0)			; CALL ACTION ROUTINE
                                     0081   302 40$:					;
            57         03 A7     3C  0081   303 	MOVZWL	NEXTSTATE(R7),R7	; GET OFFSET TO NEXT STATE
                          CF     12  0085   304 	BNEQ	20$			; IF NEQ HAVE NEXT STATE
            50            01     D0  0087   305 	MOVL	#1,R0			; SET SUCCESS
                          02     11  008A   306 	BRB	EXIT			; EXIT
                                     008C   307  
                                     008C   308 ;
                                     008C   309 ; ILLEGAL CHARACTER
                                     008C   310 ;
                                     008C   311  
                                     008C   312 ILLCHR:					;
                          50     D4  008C   313 	CLRL	R0			; SET FAILURE
                                     008E   314 EXIT:					;
                                 05  008E   315 	RSB				;
RUNCVTUIC       - CONVERT UIC TO BINARY                          21-AUG-1978 19:03:49   VAX-11 MACRO X0.3-11               Page   8
00              UIC PARSE ACTION ROUTINES                                                                                        (1)

                                     008F   317 	.SBTTL	UIC PARSE ACTION ROUTINES
                                     008F   318  
                                     008F   319 ;
                                     008F   320 ; ACCUMULATE AN ALPHANUMERIC STRING
                                     008F   321 ;
                                     008F   322  
                                     008F   323 ALPHAN:					;
                                     008F   324 DOT:					;
                     0010'DF     D6  008F   325 	INCL	@W^STRNGAD		; INCREMENT STRING COUNT
                                 05  0093   326 	RSB				;
                                     0094   327  
                                     0094   328 ;
                                     0094   329 ; COMMA
                                     0094   330 ;
                                     0094   331  
                                     0094   332 COMMA:					;
       0010'CF       0008'CF     9E  0094   333 	MOVAB	W^OWNER,W^STRNGAD	; BEGIN OWNER STRING DESCRIPTOR
       000C'CF         01 A6     9E  009B   334 	MOVAB	1(R6),W^OWNER+4		; POINT TO START OF STRING
                                 05  00A1   335 	RSB				; RETURN
                                     00A2   336  
                                     00A2   337 ;
                                     00A2   338 ; LEFT BRACKET
                                     00A2   339 ;
                                     00A2   340  
                                     00A2   341 LBRCKT:					;
       0010'CF       0000'CF     9E  00A2   342 	MOVAB	W^GROUP,W^STRNGAD	; POINT TO GROUP STRING DESCRIPTOR
       0004'CF         01 A6     9E  00A9   343 	MOVAB	1(R6),W^GROUP+4		; POINT TO START OF STRING
                                 05  00AF   344 	RSB				;
                                     00B0   345  
                                     00B0   346 	.END
RUNCVTUIC       - CONVERT UIC TO BINARY                          21-AUG-1978 19:03:49   VAX-11 MACRO X0.3-11               Page   9
SYMBOL TABLE                                                                                                                     (1)

$$$            = 00000000            
$$S            = 00000006 R     04   
$$T            = 0000003A R     03   
A1               00000002 R     04   
A2               00000004 R     04   
ACTION           00000001            
ALPHAN           0000008F R     06   
BEGIN            00000000 R     04   
CHR$K_ALPHA      ********   X   03   
CHR$K_COMMA      ********   X   03   
CHR$K_DOT        ********   X   03   
CHR$K_EOL      = 0000000E            
CHR$K_LBRAKT     ********   X   03   
CHR$K_NUMERIC    ********   X   03   
CHR$K_PERCE    = 0000000D            
CHR$K_RBRAKT     ********   X   03   
CHR$TSTCHR       ********   X   06   
COMMA            00000094 R     06   
DOT              0000008F R     06   
EXIT             0000008E R     06   
GROUP            00000000 R     05   
ILLCHR           0000008C R     06   
LBRCKT           000000A2 R     06   
LIB$CVT_OCTBIN   ********   X   06   
NEXTSTATE        00000003            
OWNER            00000008 R     05   
RUN_CVTUIC       00000000 RG    06   
RUN_PARS         00000052 RG    06   
STRNG            00000004            
STRNGAD          00000010 R     05   
TOKEN            00000000            
TRSIZE           00000005            
UIC              00000014 R     05   
VALUE            00000008            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            0000000C      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
TRANTBL          00000040      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  
STATETBL         00000008      04     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  
RUN_CVTUIC_DAT   00000018      05     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
RUN_CVTUIC       000000B0      06     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
26960. BYTES LEFT IN FREE MEMORY POOL.
OBJ$:RUNCVTUIC,LIS$:RUNCVTUIC/-SP=EXECML$/ML,LIB$:CLIUTL/ML,SRC$:RUNCVTUIC
0 MLB DIR RDS - 0 GETS TO DEFINE 0 MACROS. 5 INTER. FILE WRITES. 
