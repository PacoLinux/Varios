TYPE            - CLI TYPE COMMAND PROCESSOR                     21-AUG-1978 19:33:41   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      40  DECLARATIONS
   (3)      75  TYPE - TYPE FILE UTILITY
   (3)     172  CLI CALL BACK SUBROUTINES
   (4)     197  ERROR ACTION ROUINES
   (4)     198  COMMAND ERROR
   (4)     303  SHOW MESSAGE
TYPE            - CLI TYPE COMMAND PROCESSOR                     21-AUG-1978 19:33:41   VAX-11 MACRO X0.3-11               Page   1
V01                                                                                                                              (1)

                                     0000     1 	.TITLE	TYPE - CLI TYPE COMMAND PROCESSOR
                                     0000     2 	.IDENT	/V01/
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 
                                     0000    24 ;++
                                     0000    25 ; FACILITY:	STARLET CLI UTILITIES
                                     0000    26 ;
                                     0000    27 ; ABSTRACT:	USER INTERFACE PROGRAM
                                     0000    28 ;
                                     0000    29 ;
                                     0000    30 ; ENVIRONMENT:	NATIVE MODE USER CODE
                                     0000    31 ;
                                     0000    32 ; AUTHOR:	W.H.BROWN, CREATION DATE: 2-MAY-1977
                                     0000    33 ;
                                     0000    34 ; MODIFIED BY:
                                     0000    35 ;
                                     0000    36 ;	, : VERSION
                                     0000    37 ; 01	- 
                                     0000    38 ;--
TYPE            - CLI TYPE COMMAND PROCESSOR                     21-AUG-1978 19:33:41   VAX-11 MACRO X0.3-11               Page   2
V01             DECLARATIONS                                                                                                     (2)

                                     0000    40 	.SBTTL	DECLARATIONS
                                     0000    41 ;
                                     0000    42 ; INCLUDE FILES:
                                     0000    43 ;
                                     0000    44 ;
                                     0000    45 ; MACROS:
                                     0000    46 ;
                                     0000    47 ;
                                     0000    48 ; EQUATED SYMBOLS:
                                     0000    49 ;
                           00030000  0000    50 	CLI_SUBSYS = 3@16		; CLI SUBSYSTEM CODE
                           0000000C  0000    51 	TYP_MASK   = ^M<R2,R3>		; STANDARD ENTRY MASK
                                     0000    52 	$CLIDEF				; CLI DEFINITIONS
                                     0000    53 	$STSDEF				; STATUS WORD DEFINITIONS
                                     0000    54 	$RABDEF				; RMS RAB DEFINITIONS
                                     0000    55 	$FABDEF				; RMS FAB DEFINITIONS
                                     0000    56 	$NAMDEF				; RMS NAME BLOCK DEFINITIONS
                                     0000    57 	$SHRDEF				; SHARED MESSAGES
                                     0000    58 	$CLIMSGDEF			; CLI MESSAGES
                                     0000    59 	TYPCTXBLK	ALLO=NO		; DEFINE CONTEXT BLCOK VALUES
                                     0000    60 ;
                                     0000    61 ;
                                     0000    62 ; OWN STORAGE:
                                     0000    63 ;
                                     0000    64  
                                     0000    65 	PURE_SECTION
                                     0000    66  
                  00000008'00000004' 0000    67 TYPNAM:	.LONG	20$-10$,10$
                        45 50 59 54  0008    68 10$:	.ASCII	\TYPE\
                                     000C    69 20$:
      54 55 50 54 55 4F 24 53 59 53  000C    70 OUTFNM:	.ASCII	\SYS$OUTPUT\
                                     0016    71  
                           0000000A  0016    72 	OUTSIZ=.-OUTFNM
                                     0016    73  
TYPE            - CLI TYPE COMMAND PROCESSOR                     21-AUG-1978 19:33:41   VAX-11 MACRO X0.3-11               Page   3
V01             TYPE - TYPE FILE UTILITY                                                                                         (3)

                                     0016    75 	.SBTTL	TYPE - TYPE FILE UTILITY
                                     0016    76 ;++
                                     0016    77 ; FUNCTIONAL DESCRIPTION:
                                     0016    78 ; 
                                     0016    79 ;	TYPE A FILE UTILITY COMMAND IMAGE
                                     0016    80 ; 
                                     0016    81 ; CALLING SEQUENCE:
                                     0016    82 ; 
                                     0016    83 ;	ENTERED FROM CLI VIA A CALL INSTRUCTION
                                     0016    84 ; 
                                     0016    85 ; INPUT PARAMETERS:
                                     0016    86 ; 
                                     0016    87 ;	8(AP) = RESULT PARSE CALL BACK ADDRESS
                                     0016    88 ; 
                                     0016    89 ; IMPLICIT OUTPUTS:
                                     0016    90 ; 
                                     0016    91 ;	THE INPUT FILE IS COPIED TO THE OUTPUT FILE WHICH
                                     0016    92 ;	MAY GET CREATED.
                                     0016    93 ; 
                                     0016    94 ; COMPLETION CODES:
                                     0016    95 ; 
                                     0016    96 ;	RETURN STATUS INDICATES SUCESS OR FAILURE OF OPERATION
                                     0016    97 ; 
                                     0016    98 ; SIDE EFFECTS:
                                     0016    99 ; 
                                     0016   100 ; 	NONE
                                     0016   101 ; 
                                     0016   102 ;--
                                     0016   103 
                                     0016   104 	.LIST	MEB
                                     0016   105  
                               0000' 0016   106 	.ENTRY	TYPE_FILE,0		;
            5B       0000'CF     9E  0018   107 	MOVAB	W^TYP$CTXBLK,R11	; SET ADDRESS OF CONTEXT BLOCK
            6B            01     D0  001D   108 	MOVL	#1,TYP_L_STATUS(R11)	; SET INITIAL STATUS
            50       0000'CF     9E  0020   109 	MOVAB	W^TYP_INITPRS,R0	; REQUEST DESCRIPTOR
                          0106   30  0025   110 	BSBW	CALBAK			; DO CALLBACK
            50       0000'CF     9E  0028   111 	MOVAB	W^TYP_GETCMD,R0		; NOW ASK FOR COMMAND LINE DESCRIPTION
                          00FE   30  002D   112 	BSBW	CALBAK			; DO CALL BACK
            57       0000'CF     9E  0030   113 	MOVAB	W^TYP_OUTRAB,R7		; AND OUTPUT RAB
            56         3C B7     9E  0035   114 	MOVAB	@RAB$L_FAB(R7),R6	; SET OUTPUT FAB
            59       0000'CF     9E  0039   115 	MOVAB	W^TYP_INPRAB,R9		; ETC
            58         3C B9     9E  003E   116 	MOVAB	@RAB$L_FAB(R9),R8	; ETC,ETC
         2C A6         C7 AF     9E  0042   117 10$:	MOVAB	OUTFNM,FAB$L_FNA(R6)	; ASSUME DEFAULT NAME
         34 A6            0A     90  0047   118 	MOVB	#OUTSIZ,FAB$B_FNS(R6)	; AND DEFAULT NAME SIZE
            50       0000'CF     9E  004B   119 	MOVAB	W^TYP_OUTDESC,R0	; REQUEST DESCRIPTOR
                          00DB   30  0050   120 	BSBW	CALBAK			; ISSUE RESULT PARSE CALL BACK
            50       0000'CF     9E  0053   121 	MOVAB	W^TYP_INPDESC,R0	; REQUEST DESCRIPTOR
            55            50     D0  0058   122 	MOVL	R0,R5			; SAVE A COPY
                          00D0   30  005B   123 	BSBW	CALBAK			; REQUEST RESULT PARSE
         1E A8            02     90  005E   124 	MOVB	#FAB$M_CR,FAB$B_RAT(R8)	; SET RECORD ATTRIBUTES INCASE TT INPUT
                                 33  0062   125 	CVTWB	CLI$W_RQSIZE(R5),-	; SET NAME SIZE FIELD RETURNED BY CLI 
         34 A8         08 A5         0063   126 		FAB$B_FNS(R8)		; AS INPUT NAME SIZE
                                 D0  0067   127 	MOVL	CLI$A_RQADDR(R5),-	; LIKEWISE FOR THE ADDRESS OF
         2C A8         0C A5         0068   128 		FAB$L_FNA(R8)		; INPUT FILE NAME ENTERED
            50   00000000'EF     9E  006C   129 	MOVAB	CLI$OPENFILE,R0		; SET ROUTINE NAME
                                     0073   130 20$:	SETBIT	RAB$V_CCO,RAB$L_ROP(R7)	; CANCEL CONTROL O ON FIRST PUT
         04 A7            1F     E2  0073       	BBSS	#RAB$V_CCO,RAB$L_ROP(R7),.+1
TYPE            - CLI TYPE COMMAND PROCESSOR                     21-AUG-1978 19:33:41   VAX-11 MACRO X0.3-11               Page   4
V01             TYPE - TYPE FILE UTILITY                                                                                         (3)

                          00         0077       
                     01AD'CF     9F  0078   131 	PUSHAB	W^INP_OPN_ERR		; OUTPUT OPEN FAILURE AST
                          68     9F  007C   132 	PUSHAB	(R8)			; THE FAB
            60            02     FB  007E   133 	CALLS	#2,(R0)			; OPEN THE NEXT FILE
            BE            50     E9  0081   134 	BLBC	R0,10$			; BR IF OPEN FAILED
                                     0084   135 	ASSUME	FAB$B_RAT+1 EQ FAB$B_RFM ; CHECK FOR ADJACENT BYTES
         1E A6         1E A8     B0  0084   136 	MOVW	FAB$B_RAT(R8),FAB$B_RAT(R6) ; SET RAT&RFM FOR OUT SAME IS INPUT
         36 A6         36 A8     B0  0089   137 	MOVW	FAB$W_MRS(R8),FAB$W_MRS(R6) ; SET MAXIMUM RECORD SIZE FOR INPUT
            50         3F A8     90  008E   138 	MOVB	FAB$B_FSZ(R8),R0	; GET SIZE OF SIZE CONTROL
            14            50     91  0092   139 	CMPB	R0,#20			; CHECK IF ITS TOO BIG
                          02     15  0095   140 	BLEQ	30$			; BR IF NO
                          50     D4  0097   141 	CLRL	R0			; ELSE FORGET IT
         3F A6            50     90  0099   142 30$:	MOVB	R0,FAB$B_FSZ(R6)	; SET VALUE INTO OUTPUT FAB
                     000B'CF     94  009D   143 	CLRB	W^NAM$B_ESL+TYP_OUTNAM	; ZERO EXPANDED NAME LENGTH
                                     00A1   144 	$CREATE	(R6),ERR=W^OUT_OPN_ERR	; CREATE TYPING FILE
                     01B5'CF     DF  00A1       		PUSHAL W^OUT_OPN_ERR
                          66     DF  00A5       		PUSHAL	(R6)
   00000000'9F            02     FB  00A7       		CALLS	#$$.TMP1,@#SYS$CREATE
            74            50     E9  00AE   145 	BLBC	R0,EXIT0		; BR IF OPEN FAILED
                                     00B1   146 	$CONNECT  (R9)			; CONNECT TO INPUT STREAM
                          69     DF  00B1       		PUSHAL	(R9)
   00000000'9F            01     FB  00B3       		CALLS	#$$.TMP1,@#SYS$CONNECT
                                     00BA   147 	$CONNECT  (R7)			; CONNECT TO OUTPUT STREAM
                          67     DF  00BA       		PUSHAL	(R7)
   00000000'9F            01     FB  00BC       		CALLS	#$$.TMP1,@#SYS$CONNECT
                                     00C3   148 50$:	$GET	(R9),ERR=W^GET_ERR	; READ A RECORD
                     018E'CF     DF  00C3       		PUSHAL W^GET_ERR
                          69     DF  00C7       		PUSHAL	(R9)
   00000000'9F            02     FB  00C9       		CALLS	#$$.TMP1,@#SYS$GET
            1F            50     E8  00D0   149 	BLBS	R0,60$			; BR IF NO ERROR
                                     00D3   150 53$:	$CLOSE	(R6),ERR=OUT_CLS_ERR	; CLOSE THE OUTPUT FILE
                 000001BD'EF     DF  00D3       		PUSHAL OUT_CLS_ERR
                          66     DF  00D9       		PUSHAL	(R6)
   00000000'9F            02     FB  00DB       		CALLS	#$$.TMP1,@#SYS$CLOSE
                       02 A9     B4  00E2   151 55$:	CLRW	RAB$W_ISI(R9)		; FAST DISCONNECT FROM THE FILES!!!
                       02 A7     B4  00E5   152 	CLRW	RAB$W_ISI(R7)		; THIS IS OK WITH A CLOSE!!!
            50   00000000'EF     9E  00E8   153 	MOVAB	CLI$OPENNEXT,R0		; SET ROUTINE NAME
                          FF81   31  00EF   154 	BRW	20$			; EXECUTE THE CALL
                                 D0  00F2   155 60$:	MOVL	RAB$L_RBF(R9),-		; COPY BUFFER ADDRESS FOR THE GET
         28 A7         28 A9         00F3   156 		RAB$L_RBF(R7)		; AS RECORD BUFFER FOR PUT
                                 B0  00F7   157 	MOVW	RAB$W_RSZ(R9),-		; ALSO COPY RESULTANT SIZE OF READ
         22 A7         22 A9         00F8   158 		RAB$W_RSZ(R7)		; TO RECORD TO TYPE
                                     00FC   159 	$PUT	(R7),ERR=W^TYP_ERR	; PRINT LINE
                     0196'CF     DF  00FC       		PUSHAL W^TYP_ERR
                          67     DF  0100       		PUSHAL	(R7)
   00000000'9F            02     FB  0102       		CALLS	#$$.TMP1,@#SYS$PUT
                                     0109   160 	CLRBIT	RAB$V_CCO,RAB$L_ROP(R7)	; CANCEL CONTROL O ON FIRST PUT ONLY
         04 A7            1F     E5  0109       	BBCC	#RAB$V_CCO,RAB$L_ROP(R7),.+1
                          00         010D       
   00000000'8F            50     D1  010E   161 	CMPL	R0,#RMS$_CONTROLO	; END DUE TO CONTROL O?
                          AC     12  0115   162 	BNEQ	50$			; IF NO, TRY FOR NEXT LINE
                          BA     11  0117   163 	BRB	53$			; TERMINATE THIS FILE
                                     0119   164  
                               0000  0119   165 TYP_DONE::.WORD	0			; NO MORE INPUT TO PROCESS
            50            01     D0  011B   166 	MOVL	#1,R0			; SET SUCESSFUL STATUS
                                     011E   167  
            50       0000'CF     9E  011E   168 EXIT:	MOVAB	W^TYP_PARSDON,R0	; REQUEST DESCRIPTOR
TYPE            - CLI TYPE COMMAND PROCESSOR                     21-AUG-1978 19:33:41   VAX-11 MACRO X0.3-11               Page   5
V01             TYPE - TYPE FILE UTILITY                                                                                         (3)

                          09     10  0123   169 	BSBB	CALBAK			; REQUEST PARSE TERMINATION
                                     0125   170 EXIT0:	$EXIT_S  TYP_L_STATUS(R11)	; EXIT WITH STATUS 
                          6B     DD  0125       		PUSHL	TYP_L_STATUS(R11)
   00000000'GF            01     FB  0127       		CALLS	#1,G^SYS$EXIT
TYPE            - CLI TYPE COMMAND PROCESSOR                     21-AUG-1978 19:33:41   VAX-11 MACRO X0.3-11               Page   6
V01             CLI CALL BACK SUBROUTINES                                                                                        (3)

                                     012E   172 	.SBTTL	CLI CALL BACK SUBROUTINES
                                     012E   173 ;
                                     012E   174 ; LOCAL SUBROUTINE TO ISSUE CALL BACK TO CLI
                                     012E   175 ;
                                     012E   176 ; INPUT:	R0 IS THE ADDRESS OF THE REQUEST DESCRIPTOR
                                     012E   177 ; OUTPUT:	THE CALL BACK IS ISSUED, AND CONTROL IS RETURN TO CALLER
                                     012E   178 ;
                     0000'CF     9F  012E   179 CALBAK: PUSHAB	W^TYP_BITMAP		; LAST ARGUMENT IN CALL BACK
                     0000'CF     9F  0132   180 	PUSHAB	W^TYP_CLIWRK		; WORK AREA IS ALWAYS SECOND
                          60     9F  0136   181 	PUSHAB	(R0)			; REQUEST DESCRIPTOR IS ALWAYS FIRST
         08 BC            03     FB  0138   182 	CALLS	#3,@8(AP)		; GO TO UTILITY SERVICE ROUTINE
                                 05  013C   183 	RSB
                                     013D   184 ;
                                     013D   185 ; EXPLICIT OUTPUT FILE ACTION
                                     013D   186 ;
                                     013D   187  
                                     013D   188 TYP_OUTPUT::				; AN EXPLICIT OUTPUT GIVEN
                               0000  013D   189 	.WORD	0			; REGISTER SAVE MASK
            51         04 AC     D0  013F   190 	MOVL	4(AP),R1		; GET OUTPUT FILE REQUEST DESCRIPTOR
                                 33  0143   191 	CVTWB	CLI$W_RQSIZE(R1),-	; RESULTANT NAME SIZE
       0034'CF         08 A1         0144   192 		W^TYP_OUTFAB+FAB$B_FNS	; IN OUTPUT FAB
                                 D0  0149   193 	MOVL	CLI$A_RQADDR(R1),-	; SET ADDRESS OF USER SUPPLIED INPUT
       002C'CF         0C A1         014A   194 		W^TYP_OUTFAB+FAB$L_FNA	; FILENAME IN FAB FILENAME ADDRSS LOC
                                 04  014F   195 	RET				; USE THAT NAME WHEN OPEN HAPPENS
TYPE            - CLI TYPE COMMAND PROCESSOR                     21-AUG-1978 19:33:41   VAX-11 MACRO X0.3-11               Page   7
V01             ERROR ACTION ROUINES                                                                                             (4)

                                     0150   197 	.SBTTL	ERROR ACTION ROUINES
                                     0150   198 	.SBTTL	COMMAND ERROR
                                     0150   199 ;+
                                     0150   200 ; TYP$CMDERR - COMMAND PARSE ERROR
                                     0150   201 ;
                                     0150   202 ; ENTER HERE FOR THE RESULT PARSE ERROR ACTION TO PRINT A MESSAGE
                                     0150   203 ; CONCERNING AN ERROR PARSING THE COMMAND
                                     0150   204 ;
                                     0150   205 ; INPUTS:
                                     0150   206 ;
                                     0150   207 ;	4(AP) = ADDRESS OF REQUEST DESCRIPTOR WITH ERROR SEGMENT
                                     0150   208 ;	8(AP) = ERROR CODE
                                     0150   209 ;
                                     0150   210 ; OUTPUTS:
                                     0150   211 ;
                                     0150   212 ;	THE ERROR IS PRINTED AND CONTROL IS RETURNED TO THE
                                     0150   213 ;	ORIGINAL CALLER.
                                     0150   214 ;-
                                     0150   215 TYP$CMDERR::				;
                               000C  0150   216 	.WORD	^M<R2,R3>		; ENTRY MASK
            50         08 AC     D0  0152   217 	MOVL	8(AP),R0		; GET ERROR CODE
         04 AC            0C     C1  0156   218 	ADDL3	#CLI$W_RQSIZE+4,4(AP),R1 ; POINT A DESCRIPTOR FOR BAD SEGMENT
                          51         015A       
                          61     DD  015B   219 	PUSHL	(R1)			; PUSH ADDRESS OF START OF ERROR SEGMENT
            6E            71     C0  015D   220 	ADDL	-(R1),(SP)		; FIND END OF ERROR SEGMENT
                                 C1  0160   221 	ADDL3	W^TYP_GETCMD+CLI$W_RQSIZE,- ; FIND THE END OF THE
       000C'CF       0008'CF         0161   222 		W^TYP_GETCMD+CLI$W_RQSIZE+4,-(SP) ; THE ENTIRE COMMAND
                          7E         0167       
            6E         04 AE     C2  0168   223 	SUBL	4(SP),(SP)		; NOW THE LENGTH OF THE COMMAND
   00000050 8F            6E     D1  016C   224 	CMPL	(SP),#80		; IS LINE TOO LONG
                          04     1B  0173   225 	BLEQU	10$			; BR IF NO
            6E         50 8F     9A  0175   226 	MOVZBL	#80,(SP)		; SET REASONABLE VALUE
                          6E     7F  0179   227 10$:	PUSHAQ	(SP)			; ADDRESS OF THAT DESCRIPTOR
                          51     DD  017B   228 	PUSHL	R1			; ADDRESS OF ERROR SEGMENT
                          02     DD  017D   229 	PUSHL	#2			; NUMBER OF FAO ARGUMENTS
                 000381B0 8F     DD  017F   230 	PUSHL	#CLI$_BADTEXT		; THE ERROR
                          7E     D4  0185   231 	CLRL	-(SP)			; ZERO FAO ARG COUNT
                          50     DD  0187   232 	PUSHL	R0			; PUSH ERROR CODE
                          06     DD  0189   233 	PUSHL	#6			; TOTAL NUMBER OF ARGS IN BLOCK
                          007B   31  018B   234 	BRW	SHOW_MSG		; PRINT THE ERROR
TYPE            - CLI TYPE COMMAND PROCESSOR                     21-AUG-1978 19:33:41   VAX-11 MACRO X0.3-11               Page   8
V01             COMMAND ERROR                                                                                                    (4)

                                     018E   236 ;+
                                     018E   237 ; GET_ERR     - ERROR READING FILE
                                     018E   238 ; TYP_ERR     - ERROR WRITING FILE
                                     018E   239 ; INP_OPN_ERR - INPUT FILE OPEN ERROR
                                     018E   240 ; OUT_OPN_ERR - OUTPUT FILE OPEN ERROR
                                     018E   241 ; OUT_CLS_ERR - OUTPUT CLOSE ERROR
                                     018E   242 ;
                                     018E   243 ; THESE ROUTINES IS ENTERED WHEN AN ERROR IS DETECTED ON A FILE.
                                     018E   244 ; A MESSAGE IS PRINTED AND RETURN IS MADE TO THE ORIGINAL CALLER.
                                     018E   245 ;
                                     018E   246 ; INPUTS:
                                     018E   247 ;
                                     018E   248 ;	4(AP) = ADDRESS OF THE FAB/RAB FOR WHICH ERROR OCCURRED
                                     018E   249 ;
                                     018E   250 ;-
                               000C  018E   251 GET_ERR:.WORD	TYP_MASK		;
                          0C     10  0190   252 	BSBB	RABERR			; PROCESS ERROR ON A RAB
                           000310B0  0192   253 	.LONG	SHR$_READERR!CLI_SUBSYS ; ERROR CODE
                                     0196   254  
                               000C  0196   255 TYP_ERR:.WORD	TYP_MASK		;
                          04     10  0198   256 	BSBB	RABERR			; PROCESS ERROR
                           000310D0  019A   257 	.LONG	SHR$_WRITEERR!CLI_SUBSYS;
                                     019E   258  
            51         04 AC     D0  019E   259 RABERR:	MOVL	4(AP),R1		; GET THE RAB
            50         3C A1     D0  01A2   260 	MOVL	RAB$L_FAB(R1),R0	; AND THE FAB
         08 A0         08 A1     7D  01A6   261 	MOVQ	RAB$L_STS(R1),FAB$L_STS(R0) ; PUT ERROR IN COMMON PLACE
                          1C     11  01AB   262 	BRB	FILERR			; COMMON FILE ERROR
                                     01AD   263  
                                     01AD   264 INP_OPN_ERR:				; ERROR OPENING INPUT FILE
                               000C  01AD   265 	.WORD	TYP_MASK		; REGISTER SAVE MASK
                          14     10  01AF   266 	BSBB	FABERR			; ERROR ROUTINE
                           00031098  01B1   267 	.LONG	SHR$_OPENIN!CLI_SUBSYS	; ERROR CODE
                                     01B5   268  
                                     01B5   269 OUT_OPN_ERR:				; ERROR OPENING INPUT FILE
                               000C  01B5   270 	.WORD	TYP_MASK		; REGISTER SAVE MASK
                          0C     10  01B7   271 	BSBB	FABERR			; ERROR ROUTINE
                           000310A0  01B9   272 	.LONG	SHR$_OPENOUT!CLI_SUBSYS	; ERROR CODE
                                     01BD   273  
                                     01BD   274 OUT_CLS_ERR:				; ERROR CLOSEING OUTPUT FILE
                               000C  01BD   275 	.WORD	TYP_MASK		; REGISTER SAVE MASK
                          04     10  01BF   276 	BSBB	FABERR			; ERROR ROUTINE
                           00031058  01C1   277 	.LONG	SHR$_CLOSEOUT!CLI_SUBSYS ; ERROR CODE
                                     01C5   278  
            50         04 AC     D0  01C5   279 FABERR:	MOVL	4(AP),R0		; GET THE FAB
            51         28 A0     D0  01C9   280 FILERR:	MOVL	FAB$L_NAM(R0),R1	; GET NAME BLOCK ADDRESS
            53         04 A1     D0  01CD   281 	MOVL	NAM$L_RSA(R1),R3	; SET RESULTANT STRING ADDRESS
            52         03 A1     9A  01D1   282 	MOVZBL	NAM$B_RSL(R1),R2	; AND LENGTH
                          12     12  01D5   283 	BNEQ	10$			; BR IF RESULTANT NAME FORMED
            53         0C A1     D0  01D7   284 	MOVL	NAM$L_ESA(R1),R3	; ADDRESS OF EXPANDED STRING
            52         0B A1     9A  01DB   285 	MOVZBL	NAM$B_ESL(R1),R2	; NOW ITS LENGTH
                          08     12  01DF   286 	BNEQ	10$			; BR IF EXPANDED STRING FORMED
            53         2C A0     D0  01E1   287 	MOVL	FAB$L_FNA(R0),R3	; SET INPUT FILE NAME
            52         34 A0     90  01E5   288 	MOVB	FAB$B_FNS(R0),R2	; AND SIZE FOR MESSAGE
            51            9E     D0  01E9   289 10$:	MOVL	@(SP)+,R1		; GET THE ERROR CODE
                          0C     BB  01EC   290 	PUSHR	#^M<R2,R3>		; PUSH DESCRIPTOR FOR FILE NAME
                                     01EE   291 	ASSUME	FAB$L_STV EQ FAB$L_STS+4
            7E         08 A0     7D  01EE   292 	MOVQ	FAB$L_STS(R0),-(SP)	; PUSH RMS ERROR CODES
TYPE            - CLI TYPE COMMAND PROCESSOR                     21-AUG-1978 19:33:41   VAX-11 MACRO X0.3-11               Page   9
V01             COMMAND ERROR                                                                                                    (4)

            6E       0000'8F     B1  01F2   293 	CMPW	#<RMS$_NMF&^XFFFF>,(SP)	; END OF WILD CARD SEQUENCE?
                          39     13  01F7   294 	BEQL	EXTERR			; BR IF YES
            6E       0000'8F     B1  01F9   295 	CMPW	#<RMS$_EOF&^XFFFF>,(SP)	; IS ERROR END-OF-FILE
                          32     13  01FE   296 	BEQL	EXTERR			; BR IF YES - NO MESSAGE NEEDED
                       08 AE     7F  0200   297 	PUSHAQ	8(SP)			; ADDRESS OF NAME DESCRIPTOR
                          01     DD  0203   298 	PUSHL	#1			; NUMBER OF ARGUMENTS
                          51     DD  0205   299 	PUSHL	R1			; MESSAGE CODE
                          05     DD  0207   300 	PUSHL	#5			; TOTAL SIZE OF THE MESSAGE PACKET
                                     0209   301 					; FALL INTO SHOW MESSAGE
TYPE            - CLI TYPE COMMAND PROCESSOR                     21-AUG-1978 19:33:41   VAX-11 MACRO X0.3-11               Page  10
V01             SHOW MESSAGE                                                                                                     (4)

                                     0209   303 	.SBTTL	SHOW MESSAGE
                                     0209   304 ;+
                                     0209   305 ; SHOW_MSG - DISPLAY A MESSAGE
                                     0209   306 ;
                                     0209   307 ; THIS ROUTINE IS ENTERED VIA A BR/JMP TO DISPLAY AN ERROR MESSAGE
                                     0209   308 ;
                                     0209   309 ; INPUTS:
                                     0209   310 ;	0(SP) = THE MESSAGE DESCRIPTOR SET FOR A CALL TO SYS$PUTMSG.
                                     0209   311 ;-
                                     0209   312  
                                     0209   313 SHOW_MSG:				; OUTPUT THE ERROR
            5B       0000'CF     9E  0209   314 	MOVAB	W^TYP$CTXBLK,R11	; SET CONTEXT BLK ADR TO NORMAL PLACE
            50         04 AE     D0  020E   315 	MOVL	4(SP),R0		; GET THE PRIMARY MESSAGE ID
            06            50     E8  0212   316 	BLBS	R0,10$			; BR IF NOT AN ERROR
            50            06     CA  0215   317 	BICL	#6,R0			; REDUCE ERROR TO WARINING
            6B            50     D0  0218   318 	MOVL	R0,TYP_L_STATUS(R11)	; SAVE MOST RECENT STATUS
                     FDE1 CF     7F  021B   319 10$:	PUSHAQ	TYPNAM			; PUSH ADDRESS OF FACILITY NAME
                          7E     D4  021F   320 	CLRL	-(SP)			; ZERO ADDRESS OF ACTION ROUTINE
                       08 AE     9F  0221   321 	PUSHAB	8(SP)			; PUSH ADDRESS OF MESSAGE BUFFER
   00000000'9F            03     FB  0224   322 	CALLS	#3,@#SYS$PUTMSG		; PRINT THE MESSAGE
                                     022B   323 	SETBIT	STS$V_INHIB_MSG,TYP_L_STATUS(R11) ; TELL CLI - NO MORE MESSAGES
            6B            1C     E2  022B       	BBSS	#STS$V_INHIB_MSG,TYP_L_STATUS(R11),.+1
                          00         022E       
            50            6B     D0  022F   324 	MOVL	TYP_L_STATUS(R11),R0	; PASS ERROR TO CALLER
                                 04  0232   325 EXTERR:	RET				;
                                     0233   326  
                                     0233   327  
                                     0233   328 	.END	TYPE_FILE
TYPE            - CLI TYPE COMMAND PROCESSOR                     21-AUG-1978 19:33:41   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (4)

$$.TMP1        = 00000002            CLI$K_UTILOPR  = 00000000            CLI$V_PRITYP   = 00000004            
$$.TMP2        = 00000067            CLI$K_VALCONV  = 00000004            CLI$V_QDEXPA   = 00000002            
BIT...         = 0003FFE9            CLI$K_WORKAREA   00000080            CLI$V_QDUSRV   = 00000001            
CALBAK           0000012E R     03   CLI$L_CLIFLAG    00000018            CLI$V_QUALEXP  = 00000001            
CLI$A_ABSACT     00000014            CLI$L_INIARGCNT  00000000            CLI$V_QUALTRU  = 00000000            
CLI$A_ERRACT     00000004            CLI$L_LINKFLAG   00000014            CLI$V_SUBTYP   = 00000000            
CLI$A_FLSACT     00000010            CLI$L_RQVALU     0000000C            CLI$V_TRMVRBLV = 00000008            
CLI$A_IMGFILED   00000010            CLI$L_USRVAL     00000014            CLI$V_VERIFY   = 00000002            
CLI$A_IMGHDADR   0000000C            CLI$L_WORKAREA   00000000            CLI$V_VFYINP   = 00000005            
CLI$A_PROGXFER   00000004            CLI$M_ABSADR   = 00000002            CLI$W_QDVALSIZ   00000004            
CLI$A_PRSACT     00000010            CLI$M_ALLOCCUR = 00000001            CLI$W_RQSIZE     00000008            
CLI$A_QDVALADR   00000008            CLI$M_BATCH    = 00000008            CLI$W_SERVCOD    00000001            
CLI$A_QUALST     00000018            CLI$M_CONCATINP= 00000002            CLI$_ABFNAM    = 000381B8            
CLI$A_RQADDR     0000000C            CLI$M_DBGEXCP  = 00010000            CLI$_ABKEYW    = 00038000            
CLI$A_TRUACT     0000000C            CLI$M_DBGTRU   = 00000002            CLI$_ABVERB    = 00038008            
CLI$A_UTILSERV   00000008            CLI$M_DEBUG    = 00000001            CLI$_BADRET    = 00038198            
CLI$B_BITNUM     00000001            CLI$M_DUMMY    = 00000002            CLI$_BADTEXT   = 000381B0            
CLI$B_QDBLKSIZ   00000000            CLI$M_EXPNAM   = 00000004            CLI$_BUFOVF    = 00038018            
CLI$B_QDCODE     00000001            CLI$M_INDIRECT = 00000010            CLI$_COMPLX    = 00038020            
CLI$B_QDFLGS     00000002            CLI$M_KEYVALU  = 00000002            CLI$_CONFQUAL  = 00038802            
CLI$B_QDSTAT     00000003            CLI$M_LASTVAL  = 00000001            CLI$_CREQUEJOB = 0003884A            
CLI$B_RQFLGS     00000002            CLI$M_MOREINP  = 00000004            CLI$_DEFOVF    = 00038028            
CLI$B_RQINDX     00000001            CLI$M_MOREVALS = 00000001            CLI$_DEVALSPL  = 0003885A            
CLI$B_RQSTAT     00000003            CLI$M_PARMDEF  = 00000008            CLI$_DEVNOTFOR = 0003887A            
CLI$B_RQTYPE     00000000            CLI$M_PARMPRS  = 00000001            CLI$_DEVNOTSPL = 00038862            
CLI$C_QDBITS     00000014            CLI$M_PARMREQ  = 00000001            CLI$_DIRECT    = 00038030            
CLI$C_QUALDEF    00000014            CLI$M_QDEXPA   = 00000004            CLI$_EXPSYN    = 00038038            
CLI$C_REQDESC    0000001C            CLI$M_QDUSRV   = 00000002            CLI$_FILOPN    = 00038190            
CLI$C_WORKAREA   00000080            CLI$M_QUALEXP  = 00000002            CLI$_ILLVAL    = 0003883A            
CLI$K_ASCIIVAL = 00000041            CLI$M_QUALTRU  = 00000001            CLI$_IMCHNG    = 00038040            
CLI$K_CLISERV  = 00000005            CLI$M_TRMVRBLV = 00000300            CLI$_IMGFNF    = 00038872            
CLI$K_ENDPRM1  = 00000030            CLI$M_VERIFY   = 00000004            CLI$_INSFPRM   = 00038048            
CLI$K_ENDPRM2  = 00000031            CLI$M_VFYINP   = 00000020            CLI$_INVKEY    = 00038178            
CLI$K_ENDPRM3  = 00000032            CLI$OPENFILE     ********   X   03   CLI$_INVQUAL   = 0003880A            
CLI$K_ENDPRM4  = 00000033            CLI$OPENNEXT     ********   X   03   CLI$_INVQUALNUM= 0003881A            
CLI$K_FILSPEC  = 00000044            CLI$Q_QDVALDESC  00000004            CLI$_INVREQTYP = 00038822            
CLI$K_GETCMD   = 00000001            CLI$Q_RQDESC     00000008            CLI$_INVRSP    = 00038180            
CLI$K_GETOPT   = 00000003            CLI$S_PRITYP   = 00000004            CLI$_INVUIC    = 000381A8            
CLI$K_GETQUAL  = 00000002            CLI$S_SUBTYP   = 00000004            CLI$_IVCHAR    = 00038050            
CLI$K_INITPRS  = 00000000            CLI$S_TRMVRBLV = 00000002            CLI$_IVDEVTYPE = 0003886A            
CLI$K_INPSPEC  = 00000001            CLI$V_ABSADR   = 00000001            CLI$_IVFNAM    = 000381C0            
CLI$K_INPUT1   = 00000010            CLI$V_ALLOCCUR = 00000000            CLI$_IVKEYW    = 00038060            
CLI$K_INPUT2   = 00000011            CLI$V_BATCH    = 00000003            CLI$_IVOPER    = 00038068            
CLI$K_INPUT3   = 00000012            CLI$V_CONCATINP= 00000001            CLI$_IVPROT    = 00038070            
CLI$K_INPUT4   = 00000013            CLI$V_DBGEXCP  = 00000010            CLI$_IVQLOC    = 00038078            
CLI$K_KEYVAL   = 00000043            CLI$V_DBGTRU   = 00000001            CLI$_IVSYMB    = 00038080            
CLI$K_KEYWORD  = 00000042            CLI$V_DEBUG    = 00000000            CLI$_IVVALU    = 00038088            
CLI$K_NUMERVAL = 00000040            CLI$V_DUMMY    = 00000001            CLI$_IVVERB    = 00038090            
CLI$K_OUTPUT1  = 00000020            CLI$V_EXPNAM   = 00000002            CLI$_MAXPARM   = 00038098            
CLI$K_OUTPUT2  = 00000021            CLI$V_INDIRECT = 00000004            CLI$_MULKEY    = 000381A0            
CLI$K_OUTPUT3  = 00000022            CLI$V_KEYVALU  = 00000001            CLI$_NOATFIL   = 000380A0            
CLI$K_OUTPUT4  = 00000023            CLI$V_LASTVAL  = 00000000            CLI$_NOCCAT    = 000380A8            
CLI$K_OUTSPEC  = 00000002            CLI$V_MOREINP  = 00000002            CLI$_NOCOMD    = 000380B0            
CLI$K_PARDONE  = 00000003            CLI$V_MOREVALS = 00000000            CLI$_NOKEYW    = 000380B8            
CLI$K_QDBITS     00000014            CLI$V_PARMDEF  = 00000003            CLI$_NOLIST    = 000380C0            
CLI$K_QUALDEF    00000014            CLI$V_PARMPRS  = 00000000            CLI$_NOOPTPRS  = 00038842            
CLI$K_REQDESC    0000001C            CLI$V_PARMREQ  = 00000000            CLI$_NOQUAL    = 000380C8            
TYPE            - CLI TYPE COMMAND PROCESSOR                     21-AUG-1978 19:33:41   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (4)

CLI$_NORMAL    = 00030001            FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            
CLI$_NOTNEG    = 000380D8            FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            
CLI$_NOVALU    = 000380D0            FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            
CLI$_NOVALUE   = 0003882A            FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            
CLI$_NULFIL    = 000380E0            FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            
CLI$_NUMBER    = 000380E8            FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            
CLI$_ONCOMD    = 000380F0            FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            
CLI$_ONERR     = 000380F8            FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            
CLI$_ONEVAL    = 00038158            FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            
CLI$_ONLEVL    = 00038100            FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            
CLI$_ONOVF     = 00038108            FAB$L_MRN        00000038            FAB$S_ORG      = 00000004            
CLI$_OVRFLW    = 00038160            FAB$L_NAM        00000028            FAB$S_PPF_RAT  = 00000008            
CLI$_PARMDEL   = 00038110            FAB$L_SDC        00000044            FAB$V_BIO      = 00000005            
CLI$_PROC_ID   = 0003FFF1            FAB$L_STS        00000008            FAB$V_BLK      = 00000003            
CLI$_QUEJOBCRE = 0003FFF9            FAB$L_STV        0000000C            FAB$V_BRO      = 00000006            
CLI$_REQPRMABS = 00038812            FAB$L_XAB        00000024            FAB$V_CBT      = 00000015            
CLI$_RSLOVF    = 00038118            FAB$M_BIO      = 00000020            FAB$V_CIF      = 00000019            
CLI$_SKPDAT    = 00038120            FAB$M_BLK      = 00000008            FAB$V_CR       = 00000001            
CLI$_SPARE0    = 00038010            FAB$M_BRO      = 00000040            FAB$V_CTG      = 00000014            
CLI$_SPARE1    = 00038058            FAB$M_CBT      = 00200000            FAB$V_DEL      = 00000002            
CLI$_STKOVF    = 00038128            FAB$M_CIF      = 02000000            FAB$V_DFW      = 00000005            
CLI$_SUBMITERR = 00038852            FAB$M_CR       = 00000002            FAB$V_DLT      = 0000000F            
CLI$_SYMDEL    = 00038130            FAB$M_CTG      = 00100000            FAB$V_DMO      = 0000000C            
CLI$_SYMOVF    = 00038138            FAB$M_DEL      = 00000004            FAB$V_ESC      = 0000001B            
CLI$_UNDFIL    = 00038188            FAB$M_DFW      = 00000020            FAB$V_EXE      = 00000007            
CLI$_UNDSYM    = 00038140            FAB$M_DLT      = 00008000            FAB$V_FTN      = 00000000            
CLI$_UNPROPARM = 00038170            FAB$M_DMO      = 00001000            FAB$V_GET      = 00000001            
CLI$_UNPROQUAL = 00038168            FAB$M_ESC      = 08000000            FAB$V_INP      = 00000013            
CLI$_USGOTO    = 00038148            FAB$M_EXE      = 00000080            FAB$V_JNL      = 00000016            
CLI$_VALCNVERR = 00038832            FAB$M_FTN      = 00000001            FAB$V_KFO      = 0000001E            
CLI$_VALREQ    = 00038150            FAB$M_GET      = 00000002            FAB$V_MSE      = 00000004            
CLI_SUBSYS     = 00030000            FAB$M_INP      = 00080000            FAB$V_MXV      = 00000001            
EXIT             0000011E R     03   FAB$M_JNL      = 00400000            FAB$V_NAM      = 00000018            
EXIT0            00000125 R     03   FAB$M_KFO      = 40000000            FAB$V_NEF      = 0000000A            
EXTERR           00000232 R     03   FAB$M_MSE      = 00000010            FAB$V_NFS      = 00000010            
FAB$B_BID        00000000            FAB$M_MXV      = 00000002            FAB$V_NIL      = 00000005            
FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            FAB$V_OFP      = 0000001D            
FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            FAB$V_ORG      = 00000004            
FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            FAB$V_POS      = 00000008            
FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            FAB$V_PPF      = 00000012            
FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            FAB$V_PPF_IND  = 0000000E            
FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            FAB$V_PPF_RAT  = 00000006            
FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            FAB$V_PRN      = 00000002            
FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            FAB$V_PUT      = 00000000            
FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            FAB$V_RCK      = 00000017            
FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            FAB$V_RWC      = 0000000B            
FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            FAB$V_RWO      = 00000007            
FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            FAB$V_SCF      = 0000000E            
FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            FAB$V_SHRDEL   = 00000002            
FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            FAB$V_SHRGET   = 00000001            
FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            FAB$V_SHRPUT   = 00000000            
FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            FAB$V_SHRUPD   = 00000003            
FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            FAB$V_SPL      = 0000000D            
FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            FAB$V_SQO      = 00000006            
FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            FAB$V_SUP      = 00000002            
FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            FAB$V_TEF      = 0000001C            
FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            FAB$V_TMD      = 00000004            
TYPE            - CLI TYPE COMMAND PROCESSOR                     21-AUG-1978 19:33:41   VAX-11 MACRO X0.3-11               Page  13
SYMBOL TABLE                                                                                                                     (4)

FAB$V_TMP      = 00000003            NAM$M_WILD_NAME= 00000020            RAB$B_MBC        00000037            
FAB$V_TRN      = 00000004            NAM$M_WILD_SFD1= 02000000            RAB$B_MBF        00000036            
FAB$V_UFM      = 0000001A            NAM$M_WILD_SFD2= 04000000            RAB$B_PSZ        00000034            
FAB$V_UFO      = 00000011            NAM$M_WILD_SFD3= 08000000            RAB$B_RAC        0000001E            
FAB$V_UPD      = 00000003            NAM$M_WILD_SFD4= 10000000            RAB$B_ROP1       00000005            
FAB$V_UPI      = 00000006            NAM$M_WILD_SFD5= 20000000            RAB$B_ROP2       00000006            
FAB$V_WCK      = 00000009            NAM$M_WILD_SFD6= 40000000            RAB$B_ROP3       00000007            
FAB$W_BLS        0000003C            NAM$M_WILD_SFD7= 80000000            RAB$B_TMO        0000001F            
FAB$W_DEQ        00000014            NAM$M_WILD_TYPE= 00000010            RAB$C_BID      = 00000001            
FAB$W_IFI        00000002            NAM$M_WILD_UFD = 01000000            RAB$C_BLN        00000044            
FAB$W_MRS        00000036            NAM$M_WILD_VER = 00000008            RAB$C_KEY      = 00000001            
FABERR           000001C5 R     03   NAM$S_DIR_LVLS = 00000003            RAB$C_RFA      = 00000002            
FILERR           000001C9 R     03   NAM$T_DVI        00000014            RAB$C_SEQ      = 00000000            
GBL...         = 00000000            NAM$V_DIR_LVLS = 00000015            RAB$K_BLN        00000044            
GET_ERR          0000018E R     03   NAM$V_EXP_DEV  = 00000007            RAB$L_BKT        00000038            
INP_OPN_ERR      000001AD R     03   NAM$V_EXP_DIR  = 00000006            RAB$L_CTX        00000018            
NAM$B_BID        00000000            NAM$V_EXP_NAME = 00000002            RAB$L_DCT        00000038            
NAM$B_BLN        00000001            NAM$V_EXP_TYPE = 00000001            RAB$L_FAB        0000003C            
NAM$B_CURLVL     00000038            NAM$V_EXP_VER  = 00000000            RAB$L_KBF        00000030            
NAM$B_ESL        0000000B            NAM$V_GRP_MBR  = 00000013            RAB$L_PBF        00000030            
NAM$B_ESS        0000000A            NAM$V_HIGHVER  = 0000000F            RAB$L_RBF        00000028            
NAM$B_RSL        00000003            NAM$V_LOWVER   = 0000000E            RAB$L_RFA0       00000010            
NAM$B_RSS        00000002            NAM$V_NODE     = 00000011            RAB$L_RHB        0000002C            
NAM$C_BID      = 00000002            NAM$V_PPF      = 00000010            RAB$L_ROP        00000004            
NAM$C_BLN        00000038            NAM$V_QUOTED   = 00000012            RAB$L_STS        00000008            
NAM$C_BLN_DIRWC  00000050            NAM$V_WILDCARD = 00000008            RAB$L_STV        0000000C            
NAM$C_DVI      = 00000010            NAM$V_WILD_DIR = 00000014            RAB$L_UBF        00000024            
NAM$C_MAXRSS   = 00000080            NAM$V_WILD_GRP = 00000018            RAB$M_ASY      = 00000001            
NAM$C_MAXRSSLCL= 00000060            NAM$V_WILD_MBR = 00000019            RAB$M_BIO      = 00000800            
NAM$K_BLN        00000038            NAM$V_WILD_NAME= 00000005            RAB$M_CCO      = 80000000            
NAM$K_BLN_DIRWC  00000050            NAM$V_WILD_SFD1= 00000019            RAB$M_CVT      = 04000000            
NAM$L_DIRWCC1    00000040            NAM$V_WILD_SFD2= 0000001A            RAB$M_EOF      = 00000100            
NAM$L_DIRWCC2    00000044            NAM$V_WILD_SFD3= 0000001B            RAB$M_FDL      = 00000040            
NAM$L_DIRWCC3    00000048            NAM$V_WILD_SFD4= 0000001C            RAB$M_HSH      = 00000080            
NAM$L_DIRWCC4    0000004C            NAM$V_WILD_SFD5= 0000001D            RAB$M_KGE      = 00200000            
NAM$L_DWC        00000038            NAM$V_WILD_SFD6= 0000001E            RAB$M_KGT      = 00400000            
NAM$L_ESA        0000000C            NAM$V_WILD_SFD7= 0000001F            RAB$M_LIM      = 00004000            
NAM$L_FNB        00000034            NAM$V_WILD_TYPE= 00000004            RAB$M_LOA      = 00002000            
NAM$L_RLF        00000010            NAM$V_WILD_UFD = 00000018            RAB$M_LOC      = 00010000            
NAM$L_RSA        00000004            NAM$V_WILD_VER = 00000003            RAB$M_MAS      = 00000020            
NAM$L_WCC        00000030            NAM$W_DID        0000002A            RAB$M_NLK      = 00100000            
NAM$M_DIR_LVLS = 00E00000            NAM$W_DID_NUM    0000002A            RAB$M_NXR      = 00800000            
NAM$M_EXP_DEV  = 00000080            NAM$W_DID_RVN    0000002E            RAB$M_PMT      = 40000000            
NAM$M_EXP_DIR  = 00000040            NAM$W_DID_SEQ    0000002C            RAB$M_PPF_IND  = 00004000            
NAM$M_EXP_NAME = 00000004            NAM$W_FID        00000024            RAB$M_PPF_RAT  = 00003FC0            
NAM$M_EXP_TYPE = 00000002            NAM$W_FID_NUM    00000024            RAB$M_PTA      = 20000000            
NAM$M_EXP_VER  = 00000001            NAM$W_FID_RVN    00000028            RAB$M_RAH      = 00000200            
NAM$M_GRP_MBR  = 00080000            NAM$W_FID_SEQ    00000026            RAB$M_RLK      = 00080000            
NAM$M_HIGHVER  = 00008000            NAM$W_PRV_DID    0000003A            RAB$M_RNE      = 01000000            
NAM$M_LOWVER   = 00004000            OUTFNM           0000000C R     03   RAB$M_RNF      = 08000000            
NAM$M_NODE     = 00020000            OUTSIZ         = 0000000A            RAB$M_TMO      = 02000000            
NAM$M_PPF      = 00010000            OUT_CLS_ERR      000001BD R     03   RAB$M_TPT      = 00000002            
NAM$M_QUOTED   = 00040000            OUT_OPN_ERR      000001B5 R     03   RAB$M_UIF      = 00000010            
NAM$M_WILDCARD = 00000100            RAB$B_BID        00000000            RAB$M_ULK      = 00040000            
NAM$M_WILD_DIR = 00100000            RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            
NAM$M_WILD_GRP = 01000000            RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            
NAM$M_WILD_MBR = 02000000            RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            
TYPE            - CLI TYPE COMMAND PROCESSOR                     21-AUG-1978 19:33:41   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                     (4)

RAB$V_ASY      = 00000000            SHR$_BADQNAME  = 00001188            STS$K_ERROR    = 00000002            
RAB$V_BIO      = 0000000B            SHR$_BADTIME   = 00001190            STS$K_INFO     = 00000003            
RAB$V_CCO      = 0000001F            SHR$_BADVALUE  = 00001110            STS$K_SEVERE   = 00000004            
RAB$V_CVT      = 0000001A            SHR$_BADWORD   = 00001028            STS$K_SUCCESS  = 00000001            
RAB$V_EOF      = 00000008            SHR$_BEGIN     = 00001030            STS$K_WARNING  = 00000000            
RAB$V_FDL      = 00000006            SHR$_BEGIND    = 00001038            STS$M_CODE     = 00007FF8            
RAB$V_HSH      = 00000007            SHR$_BEGINT    = 00001040            STS$M_COND_ID  = 0FFFFFF8            
RAB$V_KGE      = 00000015            SHR$_CLICB     = 00001048            STS$M_CONTROL  = F0000000            
RAB$V_KGT      = 00000016            SHR$_CLOSEDEL  = 00001218            STS$M_CUST_DEF = 08000000            
RAB$V_LIM      = 0000000E            SHR$_CLOSEIN   = 00001050            STS$M_FAC_NO   = 0FFF0000            
RAB$V_LOA      = 0000000D            SHR$_CLOSEOUT  = 00001058            STS$M_FAC_SP   = 00008000            
RAB$V_LOC      = 00000010            SHR$_CONFDEL   = 000011F8            STS$M_INHIB_MSG= 10000000            
RAB$V_MAS      = 00000005            SHR$_COPIEDB   = 00001060            STS$M_MSG_NO   = 0000FFF8            
RAB$V_NLK      = 00000014            SHR$_COPIEDR   = 00001068            STS$M_SEVERITY = 00000007            
RAB$V_NXR      = 00000017            SHR$_CREATED   = 00001070            STS$M_SUCCESS  = 00000001            
RAB$V_PMT      = 0000001E            SHR$_DELETED   = 00001200            STS$S_CODE     = 0000000C            
RAB$V_PPF_IND  = 0000000E            SHR$_DELINTERR = 00001240            STS$S_COND_ID  = 00000019            
RAB$V_PPF_RAT  = 00000006            SHR$_DELVER    = 00001208            STS$S_CONTROL  = 00000004            
RAB$V_PTA      = 0000001D            SHR$_DIRTOOBUS = 00001220            STS$S_CUST_DEF = 00000001            
RAB$V_RAH      = 00000009            SHR$_ENDED     = 00001078            STS$S_FAC_NO   = 0000000C            
RAB$V_RLK      = 00000013            SHR$_ENDEDD    = 00001080            STS$S_FAC_SP   = 00000001            
RAB$V_RNE      = 00000018            SHR$_ENDEDT    = 00001088            STS$S_INHIB_MSG= 00000001            
RAB$V_RNF      = 0000001B            SHR$_FILNOTDEL = 000011F0            STS$S_MSG_NO   = 0000000D            
RAB$V_TMO      = 00000019            SHR$_FILNOTPUR = 00001230            STS$S_SEVERITY = 00000003            
RAB$V_TPT      = 00000001            SHR$_FILPURGED = 00001250            STS$S_SUCCESS  = 00000001            
RAB$V_UIF      = 00000004            SHR$_HASHCONCAT= 000011D8            STS$V_CODE     = 00000003            
RAB$V_ULK      = 00000012            SHR$_HIGHVER   = 00001148            STS$V_COND_ID  = 00000003            
RAB$V_WAT      = 00000011            SHR$_IDXCONCAT = 00001138            STS$V_CONTROL  = 0000001C            
RAB$V_WBH      = 0000000A            SHR$_INCOMPAT  = 000011E0            STS$V_CUST_DEF = 0000001B            
RAB$W_ISI        00000002            SHR$_NEWFILES  = 00001090            STS$V_FAC_NO   = 00000010            
RAB$W_RFA        00000010            SHR$_NOFILPURG = 00001228            STS$V_FAC_SP   = 0000000F            
RAB$W_RFA4       00000014            SHR$_NOJOBID   = 000011A0            STS$V_INHIB_MSG= 0000001C            
RAB$W_RSZ        00000022            SHR$_NOJOBNAME = 000011A8            STS$V_MSG_NO   = 00000003            
RAB$W_USZ        00000020            SHR$_NOQUEUE   = 00001198            STS$V_SEVERITY = 00000000            
RABERR           0000019E R     03   SHR$_NOTCMPLT  = 000011C0            STS$V_SUCCESS  = 00000000            
RMS$_CONTROLO    ********   X   03   SHR$_NOTCOPIED = 000011B8            SYS$CLOSE        ********  GX   03   
RMS$_EOF         ********   X   03   SHR$_NOVALUE   = 00001100            SYS$CONNECT      ********  GX   03   
RMS$_NMF         ********   X   03   SHR$_NOWILD    = 00001128            SYS$CREATE       ********  GX   03   
SHOW_MSG         00000209 R     03   SHR$_OPENIN    = 00001098            SYS$EXIT         ********   X   03   
SHR$_ABEND     = 000010D8            SHR$_OPENOUT   = 000010A0            SYS$GET          ********  GX   03   
SHR$_ABENDD    = 000010E0            SHR$_OVERLAY   = 000010A8            SYS$PUT          ********  GX   03   
SHR$_ABENDT    = 000010E8            SHR$_PARSEFAIL = 00001248            SYS$PUTMSG       ********   X   03   
SHR$_APPENDEDB = 00001000            SHR$_PURGEVER  = 00001210            TYP$CMDERR       00000150 RG    03   
SHR$_APPENDEDR = 00001008            SHR$_READERR   = 000010B0            TYP$CTXBLK       ********   X   03   
SHR$_ATPC      = 00001158            SHR$_RELCONCAT = 00001140            TYPE_FILE        00000016 RG    03   
SHR$_BADBYTE   = 00001010            SHR$_REPLACED  = 000010B8            TYPNAM           00000000 R     03   
SHR$_BADCOPIES = 00001160            SHR$_RMSERROR  = 000011C8            TYP_A_BUFADR   = 00000008            
SHR$_BADDELIM  = 00001118            SHR$_SEARCHFAIL= 00001238            TYP_BITMAP       ********   X   03   
SHR$_BADFIELD  = 00001018            SHR$_SYNTAX    = 000010F8            TYP_CLIWRK       ********   X   03   
SHR$_BADFORM   = 00001168            SHR$_SYSERROR  = 000011B0            TYP_DONE         00000119 RG    03   
SHR$_BADJOBID  = 00001170            SHR$_SYSERRORPC= 000010F0            TYP_ERR          00000196 R     03   
SHR$_BADJOBNAME= 00001178            SHR$_TEXT      = 00001130            TYP_GETCMD       ********   X   03   
SHR$_BADKEY    = 00001108            SHR$_UNXPCTSTS = 000011D0            TYP_INITPRS      ********   X   03   
SHR$_BADLOGIC  = 00001120            SHR$_VALERR    = 000011E8            TYP_INPDESC      ********   X   03   
SHR$_BADLOGICPC= 00001150            SHR$_WILDCONCAT= 000010C0            TYP_INPRAB       ********   X   03   
SHR$_BADLONG   = 00001020            SHR$_WILDOUTVER= 000010C8            TYP_L_STATUS   = 00000000            
SHR$_BADPRTY   = 00001180            SHR$_WRITEERR  = 000010D0            TYP_MASK       = 0000000C            
TYPE            - CLI TYPE COMMAND PROCESSOR                     21-AUG-1978 19:33:41   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                     (4)

TYP_OUTDESC      ********   X   03   
TYP_OUTFAB       ********   X   03   
TYP_OUTNAM       ********   X   03   
TYP_OUTPUT       0000013D RG    03   
TYP_OUTRAB       ********   X   03   
TYP_PARSDON      ********   X   03   
TYP_Q_BUFDES   = 00000004            
TYP_W_BUFCNT   = 00000004            
TYP_W_BUFSIZ   = 00000006            
_$$_           = 000000EF            
_ALL_          = 00000000            
_BASE_         = 00000000            
_END_          = 0000000C            
_GBL_          = 00000000            
_TOP_          = 00000008            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000080      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
PURE             00000233      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
7954. BYTES LEFT IN FREE MEMORY POOL.
628. BYTES OF RECLAIMED MEMORY.
OBJ$:TYPE,LIS$:TYPE/-SP=EXECML$/ML,LIB$:CLIUTL/ML,SRC$:TYPE
55 MLB DIR RDS - 1012 GETS TO DEFINE 32 MACROS. 84 INTER. FILE WRITES. 
