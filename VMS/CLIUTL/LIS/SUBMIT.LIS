SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      38  DECLARATIONS
   (2)     116  SUBMIT - SUBMIT FILE UTILITY
   (3)     513  VALUE CONVERT ERROR
   (3)     531  COMMAND PARSE ERROR HANDLER
   (3)     571  EXECUTION ERROR
   (3)     599  INPUT FILE OPEN FAILURE
   (3)     634  SHOW MESSAGE
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page   1
V01                                                                                                                              (1)

                                     0000     1 	.TITLE	SUBMIT - CLI SUBMIT COMMAND PROCESSOR
                                     0000     2 	.IDENT	/V01/
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 
                                     0000    24 ;++
                                     0000    25 ; FACILITY:	STARLET CLI UTILITIES
                                     0000    26 ;
                                     0000    27 ; ABSTRACT:	USER INTERFACE PROGRAM
                                     0000    28 ;
                                     0000    29 ; ENVIRONMENT:	NATIVE MODE USER CODE
                                     0000    30 ;
                                     0000    31 ; AUTHOR:	W.H.BROWN, CREATION DATE: 8-JUN-1977
                                     0000    32 ;
                                     0000    33 ; MODIFIED BY:
                                     0000    34 ;
                                     0000    35 ;	, : VERSION
                                     0000    36 ; 01	- 
                                     0000    37 ;--
                                     0000    38 	.SBTTL	DECLARATIONS
                                     0000    39 ;
                                     0000    40 ; INCLUDE FILES:
                                     0000    41 ;
                                     0000    42 ;
                                     0000    43 ; MACROS:
                                     0000    44 ;
                                     0000    45 ; MACRO TO ADD AN OTPION TO THE SYMBIONT MANAGER MESSAGE
                                     0000    46 ;
                                     0000    47 	.MACRO	SETOPT	VAL,TYPE=B
                                     0000    48 	.WORD	SMT_MASK
                                     0000    49 	BSB'TYPE	SMT_SETOPT
                                     0000    50 	.BYTE	SMO$K_'VAL
                                     0000    51 	.ENDM
                                     0000    52 ;
                                     0000    53 ; MACRO TO ADD AN OTPION TO THE SYMBIONT MANAGER MESSAGE
                                     0000    54 ;	WHEN THE OPTION MUST BE EXPLICITLY STATED IN THE COMMAND.
                                     0000    55 ;
                                     0000    56 	.MACRO	SETEXPOPT	VAL,TYPE=B
                                     0000    57 	.WORD	SMT_MASK
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page   2
V01             DECLARATIONS                                                                                                     (1)

                                     0000    58 	BSB'TYPE	SMT_SETEXPOPT
                                     0000    59 	.BYTE	SMO$K_'VAL
                                     0000    60 	.ENDM
                                     0000    61 ;
                                     0000    62 ; MACRO TO SET OPTION WITH BYTE VALUE
                                     0000    63 ;
                                     0000    64 	.MACRO	SETBYTOPT VAL,TYPE=B
                                     0000    65 	.WORD	SMT_MASK
                                     0000    66 	BSB'TYPE 	SMT_SETBYTOPT
                                     0000    67 	.BYTE	SMO$K_'VAL
                                     0000    68 	.ENDM
                                     0000    69  
                                     0000    70 ;
                                     0000    71 ; MACRO TO SET CONTEXT BLOCK ADDRESS INTO R11
                                     0000    72 ;
                                     0000    73 	.MACRO	SETMSGPTR	TYPE=B
                                     0000    74 	BSB'TYPE	SMT_SETMSGPTR
                                     0000    75 	.ENDM
                                     0000    76 ;
                                     0000    77 ; EQUATED SYMBOLS:
                                     0000    78 ;
                                     0000    79 ; MACRO LIBRARY CALLS
                                     0000    80 ;
                                     0000    81 	$CLIDEF				; CLI DEFINITIONS
                                     0000    82 	$STSDEF				; STATUS DEFINITIONS
                                     0000    83 ;	$CLIVERBDEF			; DEFINE VERB DEFINITIONS
                                     0000    84 	$RABDEF				; RECORD ACCESS BLOCK DEFINITIONS
                                     0000    85 	$SMRDEF				; SYMBIONT MANAGER DEFINTIONS
                                     0000    86 	$FABDEF				; RMS FAB DEFINITIONS
                                     0000    87 	$NAMDEF				; RMS NAME BLOCK DEFINITIONS
                                     0000    88 	$SHRDEF				; SHARE MESSAGE DEFINITIONS
                                     0000    89 	$CLIDEFQUALSUBM			; DEFINE QUALIFIER CODES
                                     0000    90 	$CLIMSGDEF
                                     0000    91 	.MACRO	$CLIMSGDEF
                                     0000    92 	.ENDM
                                     0000    93 	SMTCTXBLK	ALLOCATE=NO	; DEFINE OFFSETS INTO CONTEXT BLOCK
                           0000003C  0000    94 	SMT_MASK = ^M<R2,R3,R4,R5>	; COMMON ENTRY MASK
                                     0000    95  
                                     0000    96 ;
                                     0000    97 ; DEFINE LOCAL FLAG BITS
                                     0000    98 ;
                                     0000    99 	_VIELD	SMT,1,<-		; START AT BIT 1
                                     0000   100 		<JOBOPN,,M>,-		; JOB IS OPEN
                                     0000   101 		<FILSNT,,M>,-		; A FILE HAS BEEN SUBMITTED
                                     0000   102 		<CMDERR,,M>,-		; ERROR PROCESSING COMMAND
                                     0000   103 		<NONAME,,M>,-		; PRINT MESSAGE WITH NO NAME
                                     0000   104 		>
                                     0000   105 ;
                                     0000   106 ; OWN STORAGE:
                                     0000   107 ;
                                     0000   108  
                                     0000   109 	PURE_SECTION
                                     0000   110  
               54 49 4D 42 55 53 00' 0000   111 SUBMIT:	.ASCIC	\SUBMIT\		; FACILITY NAME FOR SUBMIT
                                 06  0000       
                  54 4E 49 52 50 00' 0007   112 PRINT:	.ASCIC	\PRINT\			; LIKEWISE FOR PRINT
                                 05  0007       
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page   3
V01             DECLARATIONS                                                                                                     (1)

      48 43 54 41 42 24 53 59 53 00' 000D   113 DEFQUE:	.ASCIC	\SYS$BATCH\		; DEFAULT QUEUE NAME FOR BATCH
                                 09  000D       
      54 4E 49 52 50 24 53 59 53 00' 0017   114 DEFDEV:	.ASCIC	\SYS$PRINT\		; DEFAULT QUEUE NAME FOR PRINTING
                                 09  0017       
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page   4
V01             SUBMIT - SUBMIT FILE UTILITY                                                                                     (2)

                                     0021   116 	.SBTTL	SUBMIT - SUBMIT FILE UTILITY
                                     0021   117 ;++
                                     0021   118 ; FUNCTIONAL DESCRIPTION:
                                     0021   119 ; 
                                     0021   120 ;	SUBMIT A FILE UTILITY COMMAND IMAGE
                                     0021   121 ; 
                                     0021   122 ; CALLING SEQUENCE:
                                     0021   123 ; 
                                     0021   124 ; 	NONE
                                     0021   125 ; 
                                     0021   126 ; INPUT PARAMETERS:
                                     0021   127 ; 
                                     0021   128 ; 	NONE
                                     0021   129 ; 
                                     0021   130 ; IMPLICIT INPUTS:
                                     0021   131 ; 
                                     0021   132 ;	NONE
                                     0021   133 ; 
                                     0021   134 ; OUTPUT PARAMETERS:
                                     0021   135 ; 
                                     0021   136 ; 	NONE
                                     0021   137 ; 
                                     0021   138 ; IMPLICIT OUTPUTS:
                                     0021   139 ; 
                                     0021   140 ; 	NONE
                                     0021   141 ; 
                                     0021   142 ; COMPLETION CODES:
                                     0021   143 ; 
                                     0021   144 ; 	NONE
                                     0021   145 ; 
                                     0021   146 ; SIDE EFFECTS:
                                     0021   147 ; 
                                     0021   148 ; 	NONE
                                     0021   149 ; 
                                     0021   150 ;--
                                     0021   151 
                                     0021   152  
                               0000' 0021   153 	.ENTRY	SUBMIT_FILE,0
            5B       0000'CF     9E  0023   154 	MOVAB	W^SMT$CTXBLK,R11	; SET CONTEX BLOCK
         04 AB            01     9A  0028   155 	MOVZBL	#1,SMT_L_STATUS(R11)	; ASSUME GOOD EXIT STATUS
            57       0000'CF     9E  002C   156 	MOVAB	W^SMT_MESSAGE,R7	; SET ADDRESS OF MESSAGE DATA AREA
                                     0031   157 	$CREMBX_S	-		; CREATE A MAILBOX
                                     0031   158 		PROMSK	= #0,-		; NO PROTECTION
                                     0031   159 		MAXMSG	= #32,-		; BIGEST MESSAGE EVER
                                     0031   160 		BUFQUO	= #64,-		; ENOUGH BUFFER FOR 2 MESSAGES
                                     0031   161 		PRMFLG	= #0,-		; NON PERMANENT
                                     0031   162 		CHAN=SMT_W_RSPCHAN(R11)	; CHANNEL ASSIGNED RETURNED HERE
            50       0000'CF     9E  0049   163 	MOVAB	W^SMT_INITPRS,R0	; REQUEST DESCRIPTOR
                          022D   30  004E   164 	BSBW	CALBAK			; DO CALLBACK
            50       0000'CF     9E  0051   165 	MOVAB	W^SMT_GETCMD,R0		; SET REQUEST DESCRIPTOR FOR GET COMMAND
                          0225   30  0056   166 	BSBW	CALBAK			; AND REQUEST COMMAND DATA FOR CLI
            52         B1 AF     9E  0059   167 	MOVAB	DEFQUE,R2		; SET ADDRESS OF DEFAULT QUEUE
       0003'CF         00'8F     91  005D   168 	CMPB	#CLI$K_VERB_SUBM,W^SMT_GETCMD+CLI$B_RQSTAT ; WAS COMMAND SUBMIT?
                          10     13  0063   169 	BEQL	10$			; BR IF DOING SUBMIT
                                     0065   170 	SETBIT	SMT_V_PRTCMD,SMT_B_BITMAP(R11) ; SET BIT FOR CLI TO TEST
            52            0A     C0  0069   171 	ADDL	S^#<DEFDEV-DEFQUE>,R2	; ADJUST TO ADDRESS OF DEFAULT DEVICE Q
       0000'CF   53494C2E 8F     D0  006C   172 	MOVL	#^A/.LIS/,W^SMT_DEFNAM	; SET DEFAULT NAME STRING
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page   5
V01             SUBMIT - SUBMIT FILE UTILITY                                                                                     (2)

            67            09     B0  0075   173 10$:	MOVW	#SMR$K_CREJOB,(R7)	; INSERT REQUEST JOB CREATION
            62            10     28  0078   174 	MOVC3	#16,(R2),2(R7)		; SET DEFAULT NAME IN MESSAGE
                       02 A7         007B       
         28 AB            53     D0  007D   175 	MOVL	R3,SMT_L_MSGPTR(R11)	; SET POINTER TO FIRST FREE BYTE
            50       0000'CF     9E  0081   176 	MOVAB	W^SMT_GETCMDQUAL,R0	; NOW GET COMMAND LEVEL QUALIFIERS
                          01F5   30  0086   177 	BSBW	CALBAK			; REQUEST CLI TO PARSE THAT
            40         04 AB     E9  0089   178 	BLBC	SMT_L_STATUS(R11),20$	; BR IF PARSE ERROR
         2F AB            03     E0  008D   179 	BBS	#SMT_V_REMOTE,SMT_B_BITMAP(R11),40$ ; BR IF NON-LOCAL OPERATION
                          46         0091       
         10 AB         02 A7     9B  0092   180 	MOVZBW	2(R7),SMT_W_INPCNT(R11) ; SET SIZE OF STRING TO CONVERT
            52         18 AB     7E  0097   181 	MOVAQ	SMT_Q_OUTDES(R11),R2	; GET OUTPUT BUFFER DESCRIPTOR
            62            0F     B0  009B   182 	MOVW	#15,(R2)		; SET LENGTH OF BUFFER
                                     009E   183 	$TRNLOG_S SMT_Q_INPDES(R11),-	; INPUT NAME
                                     009E   184 		(R2),(R2)		; OUTPUT SIZE AND DESCRIPTOR
         02 A7            62     90  00B2   185 	MOVB	(R2),2(R7)		; SET LENGTH OF CONVERTED DEVICE NAME
         30 AB            62     90  00B6   186 	MOVB	(R2),SMT_T_DEVNAM(R11)	; SET SIZE OF DEVICE NAME
         04 B2            62     28  00BA   187 	MOVC3	(R2),@4(R2),SMT_T_DEVNAM+1(R11) ; SAVE ACTUAL DEVICE NAME
                       31 AB         00BE       
                          0179   30  00C0   188 	BSBW	SENDMSG			; SEND THE MESSAGE
            09            50     E8  00C3   189 	BLBS	R0,30$			; BR IF CREATE JOB WORKED
                          00F7   30  00C6   190 15$:	BSBW	ERREXT			; PRINT THE ERROR AND EXIT
                           0003884A  00C9   191 	.LONG	CLI$_CREQUEJOB		; ERROR CREATING JOB ON QUEUE
                          54     11  00CD   192 20$:	BRB	70$			;
         2C AB       0002'CF     B0  00CF   193 30$:	MOVW	W^SMT_LINBUF+2,SMT_W_JOBNUM(R11) ; SAVE NUMBER OF JOB ALLOCATED
                                     00D5   194 	SETBIT	SMT_V_JOBOPN,SMT_W_FLAGS(R11) ;SET FLAG TO INDICATE JOB OPEN
            59       0000'CF     9E  00D8   195 40$:	MOVAB	W^SMT_INPFAB,R9		; NOW INPUT STRUCTURES
            5A       0000'CF     9E  00DD   196 	MOVAB	W^SMT_INPNAM,R10	; FINALLY NAME BLOCK
            67            0A     B0  00E2   197 	MOVW	#SMR$K_ADDFIL,(R7)	; SET ENTER FILE FUNCTION
                                 9E  00E5   198 50$:	MOVAB	2+16+6+6+20(R7),-	; SET ADDRESS OF FIRST BYTE IN OPTION
         28 AB         32 A7         00E6   199 		SMT_L_MSGPTR(R11)	; AREA IN THE MESSAGE BUFFER
            50       0000'CF     9E  00EA   200 	MOVAB	W^SMT_INPDESC,R0	; INPUT FILE REQUEST DESCRIPTOR
            55            50     D0  00EF   201 	MOVL	R0,R5			; SAVE A COPY
                          0189   30  00F2   202 	BSBW	CALBAK			; REQUEST RESULT PARSE
            6B            03     E0  00F5   203 	BBS	#SMT_V_CMDERR,SMT_W_FLAGS(R11),70$ ; BR IF COMMAND ERROR
                          2A         00F8       
                                 33  00F9   204 	CVTWB	CLI$W_RQSIZE(R5),-	; SET NAME SIZE FIELD RETURNED BY CLI 
         34 A9         08 A5         00FA   205 		FAB$B_FNS(R9)		; AS INPUT NAME SIZE
                                 D0  00FE   206 	MOVL	CLI$A_RQADDR(R5),-	; LIKEWISE FOR THE ADDRESS OF
         2C A9         0C A5         00FF   207 		FAB$L_FNA(R9)		; INPUT FILE NAME ENTERED
            50       0000'CF     9E  0103   208 	MOVAB	W^CLI$OPENFILE,R0	; INITIAL FILE OPEN
                     044D'CF     9F  0108   209 60$:	PUSHAB	W^INP_OPN_ERR		; ADDRESS OF ERROR ROUTINE
                          69     9F  010C   210 	PUSHAB	(R9)			; ADDRESS OF THE FAB
            60            02     FB  010E   211 	CALLS	#2,(R0)			; OPEN THE FIRST OR NEXT FILE (IE:*)
            11            50     E8  0111   212 	BLBS	R0,80$			; BR IF OPEN WENT OK
            50       0000'8F     B1  0114   213 	CMPW	#<RMS$_NMF&^XFFFF>,R0	; NO MORE FILES IS SEQUENCE
                          03     12  0119   214 	BNEQ	65$			; 
                          0089   31  011B   215 	BRW	140$			; IF YES - CHECK FOR NEXT INPUT SPEC
         2F AB            04     E0  011E   216 65$:	BBS	#SMT_V_PRTCMD,SMT_B_BITMAP(R11),130$ ; IF PRINT, THATS NON-FATAL
                          7C         0122       
                          33     11  0123   217 70$:	BRB	100$			; TAKE ERROR EXIT
         2F AB            03     E1  0125   218 80$:	BBC	S^#SMT_V_REMOTE,SMT_B_BITMAP(R11),90$ ; BR IF NOT A REMOTE OPR
                          18         0129       
         34 AA            11     E1  012A   219 	BBC	#NAM$V_NODE,NAM$L_FNB(R10),95$ ; BR IF NO NODE PRESENT **ERROR**
                          18         012E       
                                     012F   220 	SETBIT	S^#FAB$V_SCF,FAB$L_FOP(R9) ; TELL RMS TO SUBMIT CMD FILE
                                     0134   221 	$CLOSE	(R9)			; CLOSE NOW TO GET SUBMIT ERROR IF THERE
            86            50     E9  013D   222 	BLBC	R0,15$			; BR IF ERROR
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page   6
V01             SUBMIT - SUBMIT FILE UTILITY                                                                                     (2)

                          5D     11  0140   223 	BRB	130$			;
         34 AA            11     E1  0142   224 90$:	BBC	#NAM$V_NODE,NAM$L_FNB(R10),110$ ; BR IF NODE NOT PRESENT
                          13         0146       
                 000381C0 8F     DD  0147   225 95$:	PUSHL	#CLI$_IVFNAM		; SET NAME ERROR
                     0000'CF     9F  014D   226 	PUSHAB	W^SMT_INPDESC		; ADDRESS OF DESCRIPTOR FOR NAME
   000003F2'EF            02     FB  0151   227 	CALLS	#2,SMT$CMDERR		; REPORT THE ERROR
                          7A     11  0158   228 100$:	BRB	ERROUT			; TAKE ERROR EXIT
                                     015A   229 110$:	ASSUME	NAM$T_DVI+16 EQ NAM$W_FID ; FILE ID ADJACENT TO DEVICE ID?
                                     015A   230 	ASSUME	NAM$W_FID+6  EQ NAM$W_DID ; DIRECTORY ID ADJACENT TO FILE ID?
         14 AA            1C     28  015A   231 	MOVC3	#<16+6+6>,NAM$T_DVI(R10),2(R7); COPY DEVICE, FILE AND DIR ID'S
                       02 A7         015E       
            52         03 AA     9A  0160   232 	MOVZBL	NAM$B_RSL(R10),R2	; GET LENGTH OF RESULTANT STRING
            52         5D 8F     3A  0164   233 	LOCC	#^A/]/,R2,@NAM$L_RSA(R10) ; LOCATE END OF DIRECTORY
                       04 BA         0168       
                          0C     12  016A   234 	BNEQ	120$			; BR IF CHAR FOUND
            52            3E     3A  016C   235 	LOCC	#^A/>/,R2,@NAM$L_RSA(R10) ; ELSE FIND OTHER DIRECTORY TERMINATOR
                       04 BA         016F       
                          05     12  0171   236 	BNEQ	120$			; BR IF THAT WAS FOUND
            52            3A     3A  0173   237 	LOCC	#^A/:/,R2,@NAM$L_RSA(R10) ; NOW LOOK FOR END OF DEVICE NAME
                       04 BA         0176       
                          50     D7  0178   238 120$:	DECL	R0			; ADJ LENGTH OVER THE TERMINATOR
                          51     D6  017A   239 	INCL	R1			; AND THE FIRST BYTE AFTER BRACKET
            83            50     90  017C   240 	MOVB	R0,(R3)+		; STORE SIZE OF FILENAME IN MESSAGE
            61            50     28  017F   241 	MOVC3	R0,(R1),(R3)		; STORE FILE NAME IN PACKET
                          63         0182       
            50   0003886A 8F     D0  0183   242 	MOVL	#CLI$_IVDEVTYPE,R0	; ASSUME CAN'T QUEUE THE FILE
         34 AA            10     E0  018A   243 	BBS	#NAM$V_PPF,NAM$L_FNB(R10),170$ ; BR IF PROCESS PERMANENT FILE
                          2B         018E       
         40 A9   00000000'8F     D3  018F   244 	BITL	#<DEV$M_MBX!DEV$M_DIR>,FAB$L_DEV(R9) ; CHECK FOR BAD DEVICE
                          21     13  0197   245 	BEQL	170$			; BR IF CAN'T QUEUE THE FILE
                          00A0   30  0199   246 	BSBW	SENDMSG			; SEND THE MESSAGE
            1B            50     E9  019C   247 	BLBC	R0,170$			; BR IF SEND FAILED
            50       0000'CF     9E  019F   248 130$:	MOVAB	W^CLI$OPENNEXT,R0	; CLOSE CURRENT AND OPEN NEXT
                          FF61   31  01A4   249 	BRW	60$			;
                                 E1  01A7   250 140$:	BBC	#CLI$V_CONCATINP,-	; BRANCH IF THE MORE INPUT DATA FLAG -
       0003'CF            01         01A8   251 		W^CLI$B_RQSTAT+SMT_INPDESC,150$ ; INDICATES NO MORE COMMAND INPUT
                          03         01AC       
                          FF35   31  01AD   252 	BRW	50$			; ELSE LOOP BACK FOR MORE INPUT SPEC'S
            50       0000'CF     9E  01B0   253 150$:	MOVAB	W^SMT_PARSDON,R0	; REQUEST DESCRIPTOR
                          00C6   30  01B5   254 	BSBW	CALBAK			; REQUEST PARSE TERMINATION
                          36     11  01B8   255 160$:	BRB	NOREXT			; TAKE NORMAL EXIT
                          04     10  01BA   256 170$:	BSBB	ERREXT			; PRINT ERROR AND EXIT
                           00038852  01BC   257 	.LONG	CLI$_SUBMITERR		; ERROR SUBMITTING FILE TO QUEUE
            51            9E     D0  01C0   258 ERREXT:	MOVL	@(SP)+,R1		; GET THE ERROR CODE
            53         30 AB     9E  01C3   259 	MOVAB	SMT_T_DEVNAM(R11),R3	; START OF COUNTED STRING
            52            83     9A  01C7   260 	MOVZBL	(R3)+,R2		; R2,R3 ARE STRING DESCRIPTOR FOR QUEUE
       0439'CF            6C     FA  01CA   261 	CALLG	(AP),W^EXEERR		; SHOW EXECUTION ERROR
         2F AB            04     E0  01CF   262 	BBS	#SMT_V_PRTCMD,SMT_B_BITMAP(R11),NOREXT ; ONLY DELETE BATCH JOBS ON ERROR
                          1C         01D3       
         2F AB            03     E0  01D4   263 ERROUT:	BBS	#SMT_V_REMOTE,SMT_B_BITMAP(R11),TERMIN ; ALL DONE IF REMOTE OPR
                          32         01D8       
            53            67     9E  01D9   264 	MOVAB	(R7),R3			; SET START OF MESSAGE BUFFER
            83            0C     B0  01DC   265 	MOVW	#SMR$K_RMVJOB,(R3)+	; REQUEST IS TO REMOVE THE JOB
         30 AB            10     28  01DF   266 	MOVC	#16,SMT_T_DEVNAM(R11),(R3) ; COPY QUEUE NAME INTO MESSAGE
                          63         01E3       
            83         2C AB     B0  01E4   267 	MOVW	SMT_W_JOBNUM(R11),(R3)+	; SET THE JOB THAT WAS JUST CREATED
         28 AB            53     D0  01E8   268 	MOVL	R3,SMT_L_MSGPTR(R11)	; NEXT BYTE IN MESSAGE
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page   7
V01             SUBMIT - SUBMIT FILE UTILITY                                                                                     (2)

                          4E     10  01EC   269 	BSBB	SENDMSG			; SEND THAT TO SYMBIONT MANAGER
                          1B     11  01EE   270 	BRB	TERMIN			; TERMINATE THIS EXECUTION
            67            0B     B0  01F0   271 NOREXT:	MOVW	#SMR$K_CLSJOB,(R7)	; ASSUME JOB CLOSE OK
         28 AB         02 A7     9E  01F3   272 	MOVAB	2(R7),SMT_L_MSGPTR(R11)	; SET SIZE OF MESSAGE TO 2 BYTES
                          42     10  01F8   273 	BSBB	SENDMSG			; SEND THE MESSAGE
            0E            50     E9  01FA   274 	BLBC	R0,TERMIN		; IF THAT FAILED - DON'T EVER SHOW ID
         2F AB            03     E0  01FD   275 	BBS	#SMT_V_REMOTE,SMT_B_BITMAP(R11),TERMIN ; NO ID IF REMOTE SUBMIT
                          09         0201       
         2F AB            02     E1  0202   276 	BBC	#SMT_V_IDENT,SMT_B_BITMAP(R11),TERMIN ; BR IF NO ID REQUESTED
                          04         0206       
         20'AF            6C     FA  0207   277 	CALLG	(AP),B^SHOWID		; GENERATE CALL FRAME FOR MESSAGE OUT
                                     020B   278 TERMIN:	$DASSGN_S SMT_W_RSPCHAN(R11)	; DEASSIGN RESPONCE MAILBOX CHANNEL
                                     0216   279 	$EXIT_S  SMT_L_STATUS(R11)	; EXIT WITH FINAL STATUS
                                     0220   280  
                               0000  0220   281 SHOWID:	.WORD	0			; CALL ENTRY
                       30 AB     9F  0222   282 	PUSHAB	SMT_T_DEVNAM(R11)	; ADDRESS OF COUNTED STRING
                       2C AB     DD  0225   283 	PUSHL	SMT_W_JOBNUM(R11)	; AND JOB NUMBER
                 00010002 8F     DD  0228   284 	PUSHL	#<2!<1@16>>		; NUMBER OF FAO ARGUMENTS
                 0003FFF9 8F     DD  022E   285 	PUSHL	#CLI$_QUEJOBCRE		; INFORMATIONAL MESSAGE CODE
                          04     DD  0234   286 	PUSHL	#4			; TOTAL LENGTH OF BLOCK
                                     0236   287 	SETBIT	SMT_V_NONAME,SMT_W_FLAGS(R11) ; PRINT MESSAGE WITH NO NAME
                          0247   31  0239   288 	BRW	SHOW_MSG		; PRINT THE MESSAGE
                                     023C   289 ;
                                     023C   290 ; SEND MESSAGE TO THE SYMBIONT MANAGER
                                     023C   291 ;
                          67     9F  023C   292 SENDMSG:PUSHAB	(R7)			; PUSH START OF BUFFER
         28 AB            57     C3  023E   293 	SUBL3	R7,SMT_L_MSGPTR(R11),-(SP) ; FIND ACTUAL LENGTH
                          7E         0242       
            7E         02 AB     3C  0243   294 	MOVZWL	SMT_W_RSPCHAN(R11),-(SP) ; PUSH CHANNEL NUMBER
                       04 AE     7F  0247   295 	PUSHAQ	4(SP)			; ADDRESS OF MESSAGE DESCRIPTOR
   00000000'9F            04     FB  024A   296 	CALLS	#4,@#SYS$SNDSMB		; SEND MESSAGE AND CLEAR DESCRIPTOR
                                     0251   297 	$QIOW_S	#0,SMT_W_RSPCHAN(R11),#IO$_READVBLK,- ; READ RESPONCE
                                     0251   298 		SMT_Q_IOSB(R11),,,@SMT_A_BUFADR(R11),#32
            50         20 AB     3C  0271   299 	MOVZWL	SMT_Q_IOSB(R11),R0	; GET STATUS
            05            50     E9  0275   300 	BLBC	R0,10$			; BR IF ERROR FROM THE SYSTEM
            50       0004'CF     D0  0278   301 	MOVL	W^SMT_LINBUF+4,R0	; GET FINAL STATUS FROM JBC
                                 05  027D   302 10$:	RSB				; RETURN TO CALLER, STATUS IN R0
                                     027E   303 ;
                                     027E   304 ; LOCAL SUBROUTINE TO ISSUE CALL BACK TO CLI
                                     027E   305 ;
                                     027E   306 ; INPUT:	R0 IS THE ADDRESS OF THE REQUEST DESCRIPTOR
                                     027E   307 ; OUTPUT:	THE CALL BACK IS ISSUED, AND CONTROL IS RETURN TO CALLER
                                     027E   308 ;
                                     027E   309 	.ENABL	LSB
                                     027E   310  
                                     027E   311 SMT_CALBAK::				; EXTERNAL ENTRY
                       2F AB     9F  027E   312 CALBAK:	PUSHAB	SMT_B_BITMAP(R11)	; LAST ARGUMENT IN CALL BACK
                          02     11  0281   313 	BRB	10$			; JOIN COMMON CODE
                                     0283   314 SMT_CALBAK1::				; ALTERNATE ENTRY-R2 HAS LAST ARGUMENT
                          62     9F  0283   315 	PUSHAB	(R2)			; SET THIRD ARGUMENT IN ARGUMENT LIST
                     0000'CF     9F  0285   316 10$:	PUSHAB	W^SMT_CLIWORK		; WORK AREA IS ALWAYS SECOND
                          60     9F  0289   317 	PUSHAB	(R0)			; REQUEST DESCRIPTOR IS ALWAYS FIRST
         08 BC            03     FB  028B   318 	CALLS	#3,@CLI$A_UTILSERV(AP)	; GO TO UTILITY SERVICE ROUTINE
                                 05  028F   319 	RSB
                                     0290   320  
                                     0290   321 	.DSABL	LSB			;
                                     0290   322  
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page   8
V01             SUBMIT - SUBMIT FILE UTILITY                                                                                     (2)

                                     0290   323 ;
                                     0290   324 ; QUALIFER ACTION ROUTINES
                                     0290   325 ;
                                     0290   326 ; QUEUE OR DEVICE NAME EXPLICITLY STATED
                                     0290   327 ;
                                     0290   328 SMT_DEVNAM::				; DEVICE NAME SPECIFIED
                               003C  0290   329 	.WORD	SMT_MASK		; ENTRY MASK FOR REGISTER SAVE
            50         04 AC     D0  0292   330 	MOVL	4(AP),R0		; GET REQUEST DESCRIPTOR
            50         04 A0     7D  0296   331 	MOVQ	CLI$Q_QDVALDESC(R0),R0	; VALUES DESCRIPTOR
                          0C     13  029A   332 	BEQL	10$			; BR IF NO VALUE
            52       0000'CF     9E  029C   333 	MOVAB	W^SMT_MSGDAT,R2		; POINT A MESSAGE DATA AREA
            82            50     90  02A1   334 	MOVB	R0,(R2)+		; SET LENGTH OF MESSAGE
            61            50     28  02A4   335 	MOVC3	R0,(R1),(R2)		; SET NAME IN MESSAGE
                          62         02A7       
                                 04  02A8   336 10$:	RET
                                     02A9   337  
                                     02A9   338 SMT_JOBNAME::				; USER HAS SUPPLIED EXPLICIT JOB NAME
                               003C  02A9   339 	.WORD	SMT_MASK		; ENTRY MASK FOR REGISTER SAVE
            50         04 AC     D0  02AB   340 	MOVL	4(AP),R0		; GET REQUEST DESCRIPTOR
            50         04 A0     7D  02AF   341 	MOVQ	CLI$Q_QDVALDESC(R0),R0	; VALUES DESCRIPTOR
                                     02B3   342 	SETMSGPTR	TYPE=W		; SET MESSAGE POINTER TO R3
            08            50     D1  02B6   343 	CMPL	R0,#8			; NAME TOO LONG?
                          03     1B  02B9   344 	BLEQU	10$			; BR IF NO
            50            08     9A  02BB   345 	MOVZBL	#8,R0			; SET MAXIMUM LENGTH
            83            27     90  02BE   346 10$:	MOVB	#SMO$K_JOBNAME,(R3)+	; SET OPTION ID BYTE
            83            50     90  02C1   347 	MOVB	R0,(R3)+		; NOW THE LENGTH OF THE NAME
            61            50     28  02C4   348 	MOVC	R0,(R1),(R3)		; COPY THE NAME INTO THE MESSAGE
                          63         02C7       
                          0094   31  02C8   349 	BRW	SETPT			; RESET POINTER AND EXIT
                                     02CB   350  
                                     02CB   351 ;
                                     02CB   352 ; THE FOLLOWING OPTIONS REQUIRE ONLY A BYTE OF OPTION TYPE TO BE
                                     02CB   353 ; INSERTED INTO THE SYMBIONT MANAGER MESSAGE.
                                     02CB   354 ;
                                     02CB   355 SMT_DOUBLE::				; SPACING REQUESTED
                                     02CB   356 	SETOPT		DOUBLE		;
                                     02D0   357  
                                     02D0   358 SMT_HOLD::				; HOLD THE FILE FOR SUBMITING
                                     02D0   359 	SETOPT		HOLD		; SET HOLD FILE OPTION
                                     02D5   360  
                                     02D5   361 SMT_DELETE::				; DELETE FILE AFTER SUBMITING
                                     02D5   362 	SETOPT		DELETE		; SET OPTION
                                     02DA   363  
                                     02DA   364 SMT_BURST::				; BURST PAGE REQUESTED
                                     02DA   365 	SETEXPOPT	BRSTPAG		; SET OPTION INTO MESSAGE
                                     02DF   366  
                                     02DF   367 SMT_NOBURST::				; NO BURST PAGE REQUESTED
                                     02DF   368 	SETEXPOPT	NOBRSTPAG	;
                                     02E4   369  
                                     02E4   370 SMT_NOFLAG::				; NO FLAG PAGE
                                     02E4   371 	SETEXPOPT	NOFLAGPAG	;
                                     02E9   372  
                                     02E9   373 SMT_FLAGPAG::				; SUBMIT A FLAG PAGE
                                     02E9   374 	SETEXPOPT	FLAGPAG
                                     02EE   375  
                                     02EE   376 SMT_LOWER::				; UPPER/LOWER CASE SUBMITER ONLY
                                     02EE   377 	SETOPT		LOWER
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page   9
V01             SUBMIT - SUBMIT FILE UTILITY                                                                                     (2)

                                     02F3   378  
                                     02F3   379 SMT_NOFEED::				; INHIBIT FORM FEED AT BOTTOM OF PAGE
                                     02F3   380 	SETEXPOPT	NOFEED		;
                                     02F8   381  
                                     02F8   382 SMT_PRTHDR::				; SUBMIT HEADER AT TOP OF EACH FORM
                                     02F8   383 	SETOPT		PAGHDR		; SUBMIT PAGE HEADERS
                                     02FD   384  
                                     02FD   385 	.ENABL	LSB
                                     02FD   386 ;
                                     02FD   387 ; SETEXPOPT - SET EXPLICIT OPTION
                                     02FD   388 ;
                                     02FD   389 ; THIS ROUTINE ENTERS THE OPTION IN THE MESSAGE ONLY IF USER
                                     02FD   390 ; EXPLICITLY INVOKED THE ASSOCIATED QUALIFIER.
                                     02FD   391 ;
                                     02FD   392  
                                     02FD   393 SMT_SETEXPOPT:				; SET EXPLICIT OPTION
            50         04 AC     D0  02FD   394 	MOVL	4(AP),R0		; GET QUALIFIER
                                 E1  0301   395 	BBC	#CLI$V_QUALEXP,-	; WAS QUALIFIER FOUND OR DEFAULTED?
         03 A0            01         0302   396 		CLI$B_QDSTAT(R0),30$	; IGNORE DEFAULTED VALUES FOR THIS
                          5D         0305       
                                     0306   397 ;
                                     0306   398 ; SETOPT - SET OPTION
                                     0306   399 ;
                                     0306   400 ; COMMON ROUTINE TO SET A BYTE OPTION FLAG INTO THE MESSAGE
                                     0306   401 ;
                                     0306   402  
                                     0306   403 SMT_SETOPT:				; SET OPTION IN MESSAGE
                                     0306   404 	SETMSGPTR			; SET POINTER INTO MESSAGE
            83            9E     90  0308   405 	MOVB	@(SP)+,(R3)+		; STORE A BYTE
                          52     11  030B   406 	BRB	SETPT			; RESET THE POINTER
                                     030D   407 ;
                                     030D   408 ; FORMS TYPE OPTION SPECIFIED, CONVERT TO A BINARY BYTE AND INSERT
                                     030D   409 ; IN THE MESSAGE
                                     030D   410 ;
                                     030D   411  
                                     030D   412 SMT_FORMS::				; SET FORMS TYPE
                               003C  030D   413 	.WORD	SMT_MASK		; ENTRY MASK
            50         04 AC     D0  030F   414 	MOVL	4(AP),R0		; GET QUALIFIER DESCRIPTOR
                       04 A0     DF  0313   415 	PUSHAL	CLI$Q_QDVALDESC(R0)	; PUSH ADDRESS OF FORM STRING
   00000000'EF            01     FB  0316   416 	CALLS	#1,LIB$CNVCLIFORMS	; CHANGE FORMS ASCII TO BINARY
            57            50     E9  031D   417 	BLBC	R0,VALER1		; BR IF ERROR CONVERTING VALUE
                                     0320   418 	SETMSGPTR			; SET MESSAGE POINTER FOR DATA STORES
                          12     10  0322   419 	BSBB	SMT_INSBYTOPT		; INSERT BYTE OPTION INTO MESSAGE
                                 24  0324   420 	.BYTE	SMO$K_FORMTYPE		; SET SUBMIT FORMS TYPE
                                     0325   421  
                                     0325   422 SMT_COPIES::				; COPY COUNT SPECIFIED
                                     0325   423 	SETBYTOPT COPIES		;
                                     032A   424  
                                     032A   425 SMT_JOBCOPY::				; SPECIFY JOB REPEAT COUNT
                                     032A   426 	SETBYTOPT JOBCOPY		;
                                     032F   427  
                                     032F   428 SMT_JOBPRI::				; SPECIFY JOB QUEUE PRIORITY
                                     032F   429 	SETBYTOPT JOBPRI		;
                                     0334   430  
                                     0334   431 SMT_SETBYTOPT:				; SET OPTION WITH BYTE VALUE
                          2E     10  0334   432 	BSBB	SMT_GETNUMVAL		; GET THE VALUE
                                     0336   433 SMT_INSBYTOPT:				; INSERT BYTE OPTION INTO MESSAGE
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page  10
V01             SUBMIT - SUBMIT FILE UTILITY                                                                                     (2)

            83            9E     90  0336   434 	MOVB	@(SP)+,(R3)+		; SET OPTION CODE INTO THE BUFFER
            83            51     90  0339   435 	MOVB	R1,(R3)+		; SET A BYTE INTO THE BUFFER
   000000FF 8F            51     D1  033C   436 	CMPL	R1,#255			; VALUE EXCEED A BYTE
                          3B     1A  0343   437 	BGTRU	IVERR			; BR IF YES
                          18     11  0345   438 	BRB	SETPT			; EXIT
                                     0347   439 ;
                                     0347   440 ; SET MESSAGE POINTER FOR DATA STORES
                                     0347   441 ;
                                     0347   442 SMT_SETMSGPTR:				;
            53         28 AB     D0  0347   443 	MOVL	SMT_L_MSGPTR(R11),R3	; SET POINTER INTO WORK REGISTER
                                 05  034B   444 	RSB				; RETURN TO CALLER
                                     034C   445  
                                     034C   446 SMT_PAGCNT::				; PAGE LIMIT SPECIFIED
                               003C  034C   447 	.WORD	SMT_MASK		; COMMON ENTRY MASK
                          14     10  034E   448 	BSBB	SMT_GETNUMVAL		; CONVERT VALUE
            83            09     90  0350   449 	MOVB	#SMO$K_PAGCNT,(R3)+	; SET OPTION FLAG
            83            51     B0  0353   450 	MOVW	R1,(R3)+		; SET WORD VALUE
   00007FFF 8F            51     D1  0356   451 	CMPL	R1,#32767		; VALUE EXCEED A WORD VALUE
                          21     1A  035D   452 	BGTRU	IVERR			; BR IF YES
         28 AB            53     D0  035F   453 SETPT:	MOVL	R3,SMT_L_MSGPTR(R11)	; RESTORE ADJUSTED POINTER
                                 04  0363   454 30$:	RET
                                     0364   455  
                                     0364   456 	.DSABL	LSB
                                     0364   457  
                                     0364   458 SMT_GETNUMVAL:				; GET NUMERIC VALUE
                                     0364   459 	SETMSGPTR			; SET MESSAGE POINTER FOR DATA STORES
            52         04 AC     D0  0366   460 	MOVL	4(AP),R2		; GET QUALIFER VALUE
                                 7D  036A   461 	MOVQ	CLI$Q_QDVALDESC(R0),-	; SAVE ORIGINAL VALUE DESCRIPTOR
         20 AB         04 A0         036B   462 		SMT_Q_IOSB(R11)		; IN SCRATCH AREA
            50       0000'CF     9E  036F   463 	MOVAB	W^SMT_NUMVAL,R0		; GET NUMERIC VALUE REQUEST DESCRIPTOR
                          FF0C   30  0374   464 	BSBW	SMT_CALBAK1		; ISSUE CALLBAK
            73            50     E9  0377   465 VALER1:	BLBC	R0,VALERR		; BR IF ERROR CONVERTING VALUE
            51       000C'CF     D0  037A   466 	MOVL	W^CLI$L_RQVALU+SMT_NUMVAL,R1 ; GET VALUE
                                 05  037F   467 10$:	RSB				; RETURN WITH VALUE IN R1
                                     0380   468  
                                     0380   469 ;
                                     0380   470 ; VALUE EXCEEDS LIMIT FOR SPECIFIED OPTION
                                     0380   471 ;
                                     0380   472  
            50   0003883A 8F     D0  0380   473 IVERR:	MOVL	#CLI$_ILLVAL,R0		; SET ERROR CODE
            51         04 AC     D0  0387   474 	MOVL	4(AP),R1		; GET THE QUALIFIER DESCRIPTOR
                                 7D  038B   475 	MOVQ	SMT_Q_IOSB(R11),-	; RESET DESCRITPOR FOR VALUE
         04 A1         20 AB         038C   476 		CLI$Q_QDVALDESC(R1)	; TO USE IN ERROR PRINT OUT
                          5B     11  0390   477 	BRB	VALERR			; REPORT THE ERROR
                                     0392   478  
                                     0392   479 SMT_TIME::				; HOLD TIME SPECIFIED
                               003C  0392   480 	.WORD	SMT_MASK		; COMMON ENTRY MASK
                                     0394   481 	SETMSGPTR			; SET MESSAGE POINTER FOR DATA STORES
            51         04 AC     D0  0396   482 	MOVL	4(AP),R1		; GET QUALIFIER DESCRIPTOR
                          7E     7C  039A   483 	CLRQ	-(SP)			; GET A QUAD WORD BUFFER
                          6E     7F  039C   484 	PUSHAQ	(SP)			; SECOND ARG IS ADDRESS OF TIME BUFFER
                       04 A1     7F  039E   485 	PUSHAQ	CLI$Q_QDVALDESC(R1)	; PUSH THE ADDRESS OF THE STRING DESC
   00000000'EF            02     FB  03A1   486 	CALLS	#2,LIB$CVT_TIME		; CONVERT THE TIME
            42            50     E9  03A8   487 	BLBC	R0,VALERR		; BR IF ERROR CONVERTING VALUE
            83            20     90  03AB   488 	MOVB	#SMO$K_RLSTIM,(R3)+	; SET OPTION FLAG CODE IN MESSAGE
            83            8E     7D  03AE   489 	MOVQ	(SP)+,(R3)+		; SET TIME VALUE INTO MESSAGE
                          AC     11  03B1   490 	BRB	SETPT			; RESET POINTER AND EXIT ACTION
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page  11
V01             SUBMIT - SUBMIT FILE UTILITY                                                                                     (2)

                                     03B3   491  
                                     03B3   492 SMT_PARAMS::				; BATCH PARAMETERS
                               003C  03B3   493 	.WORD	SMT_MASK		; ENTRY MASK
                                     03B5   494 	SETMSGPTR			; SET POINTER TO MESSAGE BUFFER
            52         04 AC     D0  03B7   495 	MOVL	4(AP),R2		; GET QUALIFIER DESCRIPTOR
            54       0000'CF     9E  03BB   496 	MOVAB	W^SMT_ASCIIVAL,R4	; GET VALUE CONVERT REQUEST DESCRIPTOR
            83            26     90  03C0   497 	MOVB	#SMO$K_PARAMS,(R3)+	; STORE OPTION FLAG
            50            54     D0  03C3   498 10$:	MOVL	R4,R0			; SET REQUEST DESCRIPTOR
                          FEBA   30  03C6   499 	BSBW	SMT_CALBAK1		; REQUEST NEXT ASCII VALUE
            50         08 A4     7D  03C9   500 	MOVQ	CLI$Q_RQDESC(R4),R0	; GET STRING DESCRIPTOR FOR VALUE
            83            50     90  03CD   501 	MOVB	R0,(R3)+		; STORE SIZE OF STRING
                          09     12  03D0   502 	BNEQ	20$			; BR IF NOT THE NULL STRING
         FF A3            01     90  03D2   503 	MOVB	#1,-1(R3)		; CHANGE LENGTH TO ONE
            83            20     90  03D6   504 	MOVB	#^A/ /,(R3)+		; AND MAKE THE STRING EQUAL TO A BLANK
                          08     11  03D9   505 	BRB	30$			;
                          34     BB  03DB   506 20$:	PUSHR	#^M<R2,R4,R5>		; SAVE CRITICAL REGISTERS
            61            50     28  03DD   507 	MOVC	R0,(R1),(R3)		; SET STRING IN MESSAGE
                          63         03E0       
                          34     BA  03E1   508 	POPR	#^M<R2,R4,R5>		; RESTORE REGISTERS AFTER MOVC
         03 A4            00     E0  03E3   509 30$:	BBS	#CLI$V_MOREVALS,CLI$B_RQSTAT(R4),10$ ; BR IF MORE TO PROCESS
                          DB         03E7       
                          83     94  03E8   510 	CLRB	(R3)+			; TERMINATE THE STRING
                          FF72   31  03EA   511 	BRW	SETPT			; SET POINTER AND EXIT
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page  12
V01             VALUE CONVERT ERROR                                                                                              (3)

                                     03ED   513 	.SBTTL	VALUE CONVERT ERROR
                                     03ED   514 ;+
                                     03ED   515 ; VALERR - ERROR CONVERTING VALUE
                                     03ED   516 ;
                                     03ED   517 ; THIS ROUTINE IS ENTERED WHEN EVER AN ERROR IS DETECTED CONVERTING
                                     03ED   518 ; A VALUE.  A MESSAGE IS PRINTED AND RETURN ISSUED TO THE CALLER.
                                     03ED   519 ;
                                     03ED   520 ; INPUTS:
                                     03ED   521 ;	R0 = ERROR CODE FOR CONVERSION ERROR
                                     03ED   522 ;	4(AP) = QUALIFIER DESCRIPTOR WITH VALUE DESCRIPTOR
                                     03ED   523 ;
                                     03ED   524 ;	IT IS ASSUMMED THAT ENTRY IS MADE WITH A CALL FRAME ON THE
                                     03ED   525 ;	STACK.  AFTER THE MESSAGE IS PRINTED, A "RET" IS ISSUED TO
                                     03ED   526 ;	THE ORIGINAL CALLER.
                                     03ED   527 ;-
            51            08     9A  03ED   528 VALERR:	MOVZBL	#CLI$W_QDVALSIZ+4,R1	; SET OFFSET TO ERROR DESCRIPTOR
                          09     11  03F0   529 	BRB	CMDER1			; GOTO COMMAND CODE FOR COMMAND ERROR
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page  13
V01             COMMAND PARSE ERROR HANDLER                                                                                      (3)

                                     03F2   531 	.SBTTL	COMMAND PARSE ERROR HANDLER
                                     03F2   532 ;+
                                     03F2   533 ; SMT$CMDERR - COMMAND PARSE ERROR
                                     03F2   534 ;
                                     03F2   535 ; ENTER HERE FOR THE RESULT PARSE ERROR ACTION TO PRINT A MESSAGE
                                     03F2   536 ; CONCERNING AN ERROR PARSING THE COMMAND
                                     03F2   537 ;
                                     03F2   538 ; INPUTS:
                                     03F2   539 ;
                                     03F2   540 ;	4(AP) = ADDRESS OF REQUEST DESCRIPTOR WITH ERROR SEGMENT
                                     03F2   541 ;	8(AP) = ERROR CODE
                                     03F2   542 ;
                                     03F2   543 ; OUTPUTS:
                                     03F2   544 ;
                                     03F2   545 ;	THE ERROR IS PRINTED AND CONTROL IS RETURNED TO THE
                                     03F2   546 ;	ORIGINAL CALLER.
                                     03F2   547 ;-
                                     03F2   548 SMT$CMDERR::				;
                               003C  03F2   549 	.WORD	SMT_MASK		; ENTRY MASK
            50         08 AC     D0  03F4   550 	MOVL	8(AP),R0		; GET ERROR CODE
            51            0C     D0  03F8   551 	MOVL	#CLI$W_RQSIZE+4,R1	; OFFSET TO BAD SEGMENT DESCRIPTOR
                                     03FB   552 CMDER1:	SETBIT	SMT_V_CMDERR,SMT_W_FLAGS(R11) ; FLAG THAT ERROR OCCURRED
            51         04 AC     C0  03FE   553 	ADDL	4(AP),R1		; POINT R1 AT ERROR SEGMENT DESCRIPTOR
                          61     DD  0402   554 	PUSHL	(R1)			; PUSH ADDRESS OF START OF ERROR SEGMENT
            6E            71     C0  0404   555 	ADDL	-(R1),(SP)		; FIND END OF ERROR SEGMENT
                                 C1  0407   556 	ADDL3	W^SMT_GETCMD+CLI$W_RQSIZE,- ; FIND THE END OF THE
       000C'CF       0008'CF         0408   557 		W^SMT_GETCMD+CLI$W_RQSIZE+4,-(SP) ; THE ENTIRE COMMAND
                          7E         040E       
            6E         04 AE     C2  040F   558 	SUBL	4(SP),(SP)		; NOW THE LENGTH OF THE COMMAND
   00000050 8F            6E     D1  0413   559 	CMPL	(SP),#80		; IS LINE TOO LONG
                          04     1B  041A   560 	BLEQU	10$			; BR IF NO
            6E         50 8F     9A  041C   561 	MOVZBL	#80,(SP)		; SET REASONABLE VALUE
                          6E     7F  0420   562 10$:	PUSHAQ	(SP)			; ADDRESS OF THAT DESCRIPTOR
                          51     DD  0422   563 	PUSHL	R1			; ADDRESS OF ERROR SEGMENT
                 00010002 8F     DD  0424   564 	PUSHL	#<2!<1@16>>		; NUMBER OF FAO ARGUMENTS-SUPRESS PREFIX
                 000381B0 8F     DD  042A   565 	PUSHL	#CLI$_BADTEXT		; THE ERROR
                          7E     D4  0430   566 	CLRL	-(SP)			; ZERO FAO ARG COUNT
                          50     DD  0432   567 	PUSHL	R0			; PUSH ERROR CODE
                          06     DD  0434   568 	PUSHL	#6			; TOTAL NUMBER OF ARGS IN BLOCK
                          004A   31  0436   569 	BRW	SHOW_MSG		; PRINT THE ERROR
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page  14
V01             EXECUTION ERROR                                                                                                  (3)

                                     0439   571 	.SBTTL	EXECUTION ERROR
                                     0439   572 ;+
                                     0439   573 ; EXEERR - COMMAND EXECUTION ERROR
                                     0439   574 ;
                                     0439   575 ; THIS ROUTINE IS CALLED WHEN AN ERROR IS DETECTED ATTEMPTING TO CARRY
                                     0439   576 ; OUT THE COMMAND ISSUED BY THE USER.
                                     0439   577 ;
                                     0439   578 ; INPUTS:
                                     0439   579 ;
                                     0439   580 ;	R0 = SYSTEM ERROR CODE
                                     0439   581 ;	R1 = THE UTILITY ERROR CODE
                                     0439   582 ;	R2 = LENGTH OF QUALIFIYING STRING
                                     0439   583 ;	R3 = ADDRESS OF QUALFIYING STRING
                                     0439   584 ;
                                     0439   585 ; OUTPUTS:
                                     0439   586 ;
                                     0439   587 ;	THE MESSAGE IS DISPLAYED AND RETURN TO THE CALLER IS MADE.
                                     0439   588 ;-
                               0000  0439   589 EXEERR:	.WORD	0			;
                          0C     BB  043B   590 	PUSHR	#^M<R2,R3>		; FORM DESCRIPTOR FOR TEXT
                          7E     D4  043D   591 	CLRL	-(SP)			; FAO COUNT = 0
                          50     DD  043F   592 	PUSHL	R0			; SYSTEM ERROR CODE
                       08 AE     7F  0441   593 	PUSHAQ	8(SP)			; ADDRESS OF TEXT DESCRIPTOR
                          01     DD  0444   594 	PUSHL	#1			; NUMBER OF FAO ARGS
                          51     DD  0446   595 	PUSHL	R1			; UTILITY ERROR CODE
                          05     DD  0448   596 	PUSHL	#5			; TOTAL ARGUMENT COUNT
                          0036   31  044A   597 	BRW	SHOW_MSG		;
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page  15
V01             INPUT FILE OPEN FAILURE                                                                                          (3)

                                     044D   599 	.SBTTL	INPUT FILE OPEN FAILURE
                                     044D   600 ;+
                                     044D   601 ; INP_OPN_ERR - INPUT FILE OPEN ERROR
                                     044D   602 ;
                                     044D   603 ; THIS ROUTINE IS ENTERED WHEN AN OPEN FAILURE IS DETECTED ON THE INPUT
                                     044D   604 ; FILE.  A MESSAGE IS PRINTED AND RETURN IS MADE TO THE ORIGINAL CALLER.
                                     044D   605 ;
                                     044D   606 ; INPUTS:
                                     044D   607 ;
                                     044D   608 ;	4(AP) = ADDRESS OF THE FAB FOR WHICH ERROR OCCURRED
                                     044D   609 ;
                                     044D   610 ; OUTPUTS:
                                     044D   611 ;
                                     044D   612 ;	NONE
                                     044D   613 ;-
                                     044D   614 INP_OPN_ERR:				; ERROR OPENING INPUT FILE
                               003C  044D   615 	.WORD	SMT_MASK		; REGISTER SAVE MASK
            50         04 AC     D0  044F   616 	MOVL	4(AP),R0		; GET THE FAB
            51         28 A0     D0  0453   617 	MOVL	FAB$L_NAM(R0),R1	; GET NAME BLOCK ADDRESS
            53         0C A1     D0  0457   618 	MOVL	NAM$L_ESA(R1),R3	; ADDRESS OF EXPANDED STRING
            52         0B A1     9A  045B   619 	MOVZBL	NAM$B_ESL(R1),R2	; NOW ITS LENGTH
                          08     12  045F   620 	BNEQ	10$			; BR IF EXPANDED STRING FORMED
            53         2C A0     D0  0461   621 	MOVL	FAB$L_FNA(R0),R3	; SET INPUT FILE NAME
            52         34 A0     90  0465   622 	MOVB	FAB$B_FNS(R0),R2	; AND SIZE FOR MESSAGE
                          0C     BB  0469   623 10$:	PUSHR	#^M<R2,R3>		; PUSH DESCRIPTOR FOR FILE NAME
                                     046B   624 	ASSUME	FAB$L_STV EQ FAB$L_STS+4
            7E         08 A0     7D  046B   625 	MOVQ	FAB$L_STS(R0),-(SP)	; PUSH RMS ERROR CODES
            6E       0000'8F     B1  046F   626 	CMPW	#<RMS$_NMF&^XFFFF>,(SP)	; END OF WILD CARD SEQUENCE?
                          50     13  0474   627 	BEQL	EXTERR			; BR IF YES
                       08 AE     7F  0476   628 	PUSHAQ	8(SP)			; ADDRESS OF NAME DESCRIPTOR
                          01     DD  0479   629 	PUSHL	#1			; NUMBER OF ARGUMENTS
                 00031098 8F     DD  047B   630 	PUSHL	#SHR$_OPENIN!<3@16>	; MESSAGE CODE
                          05     DD  0481   631 	PUSHL	#5			; TOTAL SIZE OF THE MESSAGE PACKET
                                     0483   632 					; FALL INTO SHOW MESSAGE
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page  16
V01             SHOW MESSAGE                                                                                                     (3)

                                     0483   634 	.SBTTL	SHOW MESSAGE
                                     0483   635 ;+
                                     0483   636 ; SHOW_MSG - DISPLAY A MESSAGE
                                     0483   637 ;
                                     0483   638 ; THIS ROUTINE IS ENTERED VIA A BR/JMP TO DISPLAY AN ERROR MESSAGE
                                     0483   639 ;
                                     0483   640 ; INPUTS:
                                     0483   641 ;	0(SP) = THE MESSAGE DESCRIPTOR SET FOR A CALL TO SYS$PUTMSG.
                                     0483   642 ;-
                                     0483   643  
                                     0483   644 SHOW_MSG:				; OUTPUT THE ERROR
            5B       0000'CF     9E  0483   645 	MOVAB	W^SMT$CTXBLK,R11	; SET CONTEXT BLK ADR TO NORMAL PLACE
            0E         04 AE     E8  0488   646 	BLBS	4(SP),10$		; BR IF MESSAGE IS INFORMATIONAL
         04 AE            06     CA  048C   647 	BICL	#6,4(SP)		; REDUCE SEVERITY LEVEL TO WARINING
                 10000000 8F     C9  0490   648 	BISL3	#STS$M_INHIB_MSG,4(SP),-; OR MOST RECENT ERROR WITH INHIBIT -
         04 AB         04 AE         0496   649 		SMT_L_STATUS(R11)	; MESSAGE AND SAVE AS CURRENT STATUS
            51       FB69 CF     9E  049A   650 10$:	MOVAB	PRINT,R1		; ADDRESS OF COUNTED STRING
         2F AB            04     E0  049F   651 	BBS	#SMT_V_PRTCMD,SMT_B_BITMAP(R11),20$ ; BR IF ASSUMMED CORRECTLY
                          05         04A3       
            51       FB58 CF     9E  04A4   652 	MOVAB	SUBMIT,R1		; USE SUBMIT
            50            81     9A  04A9   653 20$:	MOVZBL	(R1)+,R0		; FORM STRING DESCRIPTOR FOR NAME
                          03     BB  04AC   654 	PUSHR	#^M<R0,R1>		; FORM A STRING DESCRIPTOR IN STACK
                          6E     7F  04AE   655 	PUSHAQ	(SP)			; NOW PUSH THE ADDRESS OF THAT
            6B            04     E5  04B0   656 	BBCC	#SMT_V_NONAME,SMT_W_FLAGS(R11),30$ ; BR IF NAME IS WANTED
                          02         04B3       
                          6E     D4  04B4   657 	CLRL	(SP)			; ELSE PRINT NO NAME
                          7E     D4  04B6   658 30$:	CLRL	-(SP)			; ZERO ADDRESS OF ACTION ROUTINE
                       10 AE     9F  04B8   659 	PUSHAB	16(SP)			; PUSH ADDRESS OF MESSAGE BUFFER
   00000000'9F            03     FB  04BB   660 	CALLS	#3,@#SYS$PUTMSG		; PRINT THE MESSAGE
            50         04 AB     D0  04C2   661 	MOVL	SMT_L_STATUS(R11),R0	; PASS ERROR TO CALLER
                                 04  04C6   662 EXTERR:	RET				;
                                     04C7   663  
                                     04C7   664  
                                     04C7   665 	.END	SUBMIT_FILE
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page  17
SYMBOL TABLE                                                                                                                     (3)

$$$            = 00000004            CLI$K_PARDONE  = 00000003            CLI$M_VFYINP   = 00000020            
$$$GBL         = 00000000            CLI$K_QDBITS     00000014            CLI$OPENFILE     ********   X   03   
$$.TMP1        = 00000001            CLI$K_QUALDEF    00000014            CLI$OPENNEXT     ********   X   03   
$$.TMP2        = 00000069            CLI$K_REQDESC    0000001C            CLI$Q_QDVALDESC  00000004            
$$T1           = 00000001            CLI$K_SUBM_AFTE= 00000001            CLI$Q_RQDESC     00000008            
$QUALNUM$      = 00000015            CLI$K_SUBM_BURS= 00000002            CLI$S_PRITYP   = 00000004            
BIT...         = 00000005            CLI$K_SUBM_COPI= 00000003            CLI$S_SUBTYP   = 00000004            
CALBAK           0000027E R     03   CLI$K_SUBM_DELE= 00000004            CLI$S_TRMVRBLV = 00000002            
CLI$A_ABSACT     00000014            CLI$K_SUBM_DEVI= 00000005            CLI$V_ABSADR   = 00000001            
CLI$A_ERRACT     00000004            CLI$K_SUBM_FEED= 00000013            CLI$V_ALLOCCUR = 00000000            
CLI$A_FLSACT     00000010            CLI$K_SUBM_FLAG= 00000006            CLI$V_BATCH    = 00000003            
CLI$A_IMGFILED   00000010            CLI$K_SUBM_FORM= 00000007            CLI$V_CONCATINP= 00000001            
CLI$A_IMGHDADR   0000000C            CLI$K_SUBM_HEAD= 00000008            CLI$V_DBGEXCP  = 00000010            
CLI$A_PROGXFER   00000004            CLI$K_SUBM_HOLD= 00000009            CLI$V_DBGTRU   = 00000001            
CLI$A_PRSACT     00000010            CLI$K_SUBM_IDEN= 0000000A            CLI$V_DEBUG    = 00000000            
CLI$A_QDVALADR   00000008            CLI$K_SUBM_JOB_= 0000000B            CLI$V_DUMMY    = 00000001            
CLI$A_QUALST     00000018            CLI$K_SUBM_LOWE= 0000000D            CLI$V_EXPNAM   = 00000002            
CLI$A_RQADDR     0000000C            CLI$K_SUBM_NAME= 0000000C            CLI$V_INDIRECT = 00000004            
CLI$A_TRUACT     0000000C            CLI$K_SUBM_PAGE= 0000000E            CLI$V_KEYVALU  = 00000001            
CLI$A_UTILSERV   00000008            CLI$K_SUBM_PARA= 0000000F            CLI$V_LASTVAL  = 00000000            
CLI$B_BITNUM     00000001            CLI$K_SUBM_PRIO= 00000010            CLI$V_MOREINP  = 00000002            
CLI$B_QDBLKSIZ   00000000            CLI$K_SUBM_QUEU= 00000011            CLI$V_MOREVALS = 00000000            
CLI$B_QDCODE     00000001            CLI$K_SUBM_REMO= 00000014            CLI$V_PARMDEF  = 00000003            
CLI$B_QDFLGS     00000002            CLI$K_SUBM_SPAC= 00000012            CLI$V_PARMPRS  = 00000000            
CLI$B_QDSTAT     00000003            CLI$K_UTILOPR  = 00000000            CLI$V_PARMREQ  = 00000000            
CLI$B_RQFLGS     00000002            CLI$K_VALCONV  = 00000004            CLI$V_PRITYP   = 00000004            
CLI$B_RQINDX     00000001            CLI$K_VERB_SUBM  ********   X   03   CLI$V_QDEXPA   = 00000002            
CLI$B_RQSTAT     00000003            CLI$K_WORKAREA   00000080            CLI$V_QDUSRV   = 00000001            
CLI$B_RQTYPE     00000000            CLI$L_CLIFLAG    00000018            CLI$V_QUALEXP  = 00000001            
CLI$C_QDBITS     00000014            CLI$L_INIARGCNT  00000000            CLI$V_QUALTRU  = 00000000            
CLI$C_QUALDEF    00000014            CLI$L_LINKFLAG   00000014            CLI$V_SUBTYP   = 00000000            
CLI$C_REQDESC    0000001C            CLI$L_RQVALU     0000000C            CLI$V_TRMVRBLV = 00000008            
CLI$C_WORKAREA   00000080            CLI$L_USRVAL     00000014            CLI$V_VERIFY   = 00000002            
CLI$K_ASCIIVAL = 00000041            CLI$L_WORKAREA   00000000            CLI$V_VFYINP   = 00000005            
CLI$K_CLISERV  = 00000005            CLI$M_ABSADR   = 00000002            CLI$W_QDVALSIZ   00000004            
CLI$K_ENDPRM1  = 00000030            CLI$M_ALLOCCUR = 00000001            CLI$W_RQSIZE     00000008            
CLI$K_ENDPRM2  = 00000031            CLI$M_BATCH    = 00000008            CLI$W_SERVCOD    00000001            
CLI$K_ENDPRM3  = 00000032            CLI$M_CONCATINP= 00000002            CLI$_ABFNAM    = 000381B8            
CLI$K_ENDPRM4  = 00000033            CLI$M_DBGEXCP  = 00010000            CLI$_ABKEYW    = 00038000            
CLI$K_FILSPEC  = 00000044            CLI$M_DBGTRU   = 00000002            CLI$_ABVERB    = 00038008            
CLI$K_GETCMD   = 00000001            CLI$M_DEBUG    = 00000001            CLI$_BADRET    = 00038198            
CLI$K_GETOPT   = 00000003            CLI$M_DUMMY    = 00000002            CLI$_BADTEXT   = 000381B0            
CLI$K_GETQUAL  = 00000002            CLI$M_EXPNAM   = 00000004            CLI$_BUFOVF    = 00038018            
CLI$K_INITPRS  = 00000000            CLI$M_INDIRECT = 00000010            CLI$_COMPLX    = 00038020            
CLI$K_INPSPEC  = 00000001            CLI$M_KEYVALU  = 00000002            CLI$_CONFQUAL  = 00038802            
CLI$K_INPUT1   = 00000010            CLI$M_LASTVAL  = 00000001            CLI$_CREQUEJOB = 0003884A            
CLI$K_INPUT2   = 00000011            CLI$M_MOREINP  = 00000004            CLI$_DEFOVF    = 00038028            
CLI$K_INPUT3   = 00000012            CLI$M_MOREVALS = 00000001            CLI$_DEVALSPL  = 0003885A            
CLI$K_INPUT4   = 00000013            CLI$M_PARMDEF  = 00000008            CLI$_DEVNOTFOR = 0003887A            
CLI$K_KEYVAL   = 00000043            CLI$M_PARMPRS  = 00000001            CLI$_DEVNOTSPL = 00038862            
CLI$K_KEYWORD  = 00000042            CLI$M_PARMREQ  = 00000001            CLI$_DIRECT    = 00038030            
CLI$K_NUMERVAL = 00000040            CLI$M_QDEXPA   = 00000004            CLI$_EXPSYN    = 00038038            
CLI$K_OUTPUT1  = 00000020            CLI$M_QDUSRV   = 00000002            CLI$_FILOPN    = 00038190            
CLI$K_OUTPUT2  = 00000021            CLI$M_QUALEXP  = 00000002            CLI$_ILLVAL    = 0003883A            
CLI$K_OUTPUT3  = 00000022            CLI$M_QUALTRU  = 00000001            CLI$_IMCHNG    = 00038040            
CLI$K_OUTPUT4  = 00000023            CLI$M_TRMVRBLV = 00000300            CLI$_IMGFNF    = 00038872            
CLI$K_OUTSPEC  = 00000002            CLI$M_VERIFY   = 00000004            CLI$_INSFPRM   = 00038048            
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page  18
SYMBOL TABLE                                                                                                                     (3)

CLI$_INVKEY    = 00038178            DEFDEV           00000017 R     03   FAB$M_ESC      = 08000000            
CLI$_INVQUAL   = 0003880A            DEFQUE           0000000D R     03   FAB$M_EXE      = 00000080            
CLI$_INVQUALNUM= 0003881A            DEV$M_DIR        ********   X   03   FAB$M_FTN      = 00000001            
CLI$_INVREQTYP = 00038822            DEV$M_MBX        ********   X   03   FAB$M_GET      = 00000002            
CLI$_INVRSP    = 00038180            ERREXT           000001C0 R     03   FAB$M_INP      = 00080000            
CLI$_INVUIC    = 000381A8            ERROUT           000001D4 R     03   FAB$M_JNL      = 00400000            
CLI$_IVCHAR    = 00038050            EXEERR           00000439 R     03   FAB$M_KFO      = 40000000            
CLI$_IVDEVTYPE = 0003886A            EXTERR           000004C6 R     03   FAB$M_MSE      = 00000010            
CLI$_IVFNAM    = 000381C0            FAB$B_BID        00000000            FAB$M_MXV      = 00000002            
CLI$_IVKEYW    = 00038060            FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            
CLI$_IVOPER    = 00038068            FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            
CLI$_IVPROT    = 00038070            FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            
CLI$_IVQLOC    = 00038078            FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            
CLI$_IVSYMB    = 00038080            FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            
CLI$_IVVALU    = 00038088            FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            
CLI$_IVVERB    = 00038090            FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            
CLI$_MAXPARM   = 00038098            FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            
CLI$_MULKEY    = 000381A0            FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            
CLI$_NOATFIL   = 000380A0            FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            
CLI$_NOCCAT    = 000380A8            FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            
CLI$_NOCOMD    = 000380B0            FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            
CLI$_NOKEYW    = 000380B8            FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            
CLI$_NOLIST    = 000380C0            FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            
CLI$_NOOPTPRS  = 00038842            FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            
CLI$_NOQUAL    = 000380C8            FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            
CLI$_NORMAL    = 00030001            FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            
CLI$_NOTNEG    = 000380D8            FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            
CLI$_NOVALU    = 000380D0            FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            
CLI$_NOVALUE   = 0003882A            FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            
CLI$_NULFIL    = 000380E0            FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            
CLI$_NUMBER    = 000380E8            FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            
CLI$_ONCOMD    = 000380F0            FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            
CLI$_ONERR     = 000380F8            FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            
CLI$_ONEVAL    = 00038158            FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            
CLI$_ONLEVL    = 00038100            FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            
CLI$_ONOVF     = 00038108            FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            
CLI$_OVRFLW    = 00038160            FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            
CLI$_PARMDEL   = 00038110            FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            
CLI$_PROC_ID   = 0003FFF1            FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            
CLI$_QUEJOBCRE = 0003FFF9            FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            
CLI$_REQPRMABS = 00038812            FAB$L_MRN        00000038            FAB$S_ORG      = 00000004            
CLI$_RSLOVF    = 00038118            FAB$L_NAM        00000028            FAB$S_PPF_RAT  = 00000008            
CLI$_SKPDAT    = 00038120            FAB$L_SDC        00000044            FAB$V_BIO      = 00000005            
CLI$_SPARE0    = 00038010            FAB$L_STS        00000008            FAB$V_BLK      = 00000003            
CLI$_SPARE1    = 00038058            FAB$L_STV        0000000C            FAB$V_BRO      = 00000006            
CLI$_STKOVF    = 00038128            FAB$L_XAB        00000024            FAB$V_CBT      = 00000015            
CLI$_SUBMITERR = 00038852            FAB$M_BIO      = 00000020            FAB$V_CIF      = 00000019            
CLI$_SYMDEL    = 00038130            FAB$M_BLK      = 00000008            FAB$V_CR       = 00000001            
CLI$_SYMOVF    = 00038138            FAB$M_BRO      = 00000040            FAB$V_CTG      = 00000014            
CLI$_UNDFIL    = 00038188            FAB$M_CBT      = 00200000            FAB$V_DEL      = 00000002            
CLI$_UNDSYM    = 00038140            FAB$M_CIF      = 02000000            FAB$V_DFW      = 00000005            
CLI$_UNPROPARM = 00038170            FAB$M_CR       = 00000002            FAB$V_DLT      = 0000000F            
CLI$_UNPROQUAL = 00038168            FAB$M_CTG      = 00100000            FAB$V_DMO      = 0000000C            
CLI$_USGOTO    = 00038148            FAB$M_DEL      = 00000004            FAB$V_ESC      = 0000001B            
CLI$_VALCNVERR = 00038832            FAB$M_DFW      = 00000020            FAB$V_EXE      = 00000007            
CLI$_VALREQ    = 00038150            FAB$M_DLT      = 00008000            FAB$V_FTN      = 00000000            
CMDER1           000003FB R     03   FAB$M_DMO      = 00001000            FAB$V_GET      = 00000001            
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page  19
SYMBOL TABLE                                                                                                                     (3)

FAB$V_INP      = 00000013            NAM$C_BLN_DIRWC  00000050            NAM$V_WILDCARD = 00000008            
FAB$V_JNL      = 00000016            NAM$C_DVI      = 00000010            NAM$V_WILD_DIR = 00000014            
FAB$V_KFO      = 0000001E            NAM$C_MAXRSS   = 00000080            NAM$V_WILD_GRP = 00000018            
FAB$V_MSE      = 00000004            NAM$C_MAXRSSLCL= 00000060            NAM$V_WILD_MBR = 00000019            
FAB$V_MXV      = 00000001            NAM$K_BLN        00000038            NAM$V_WILD_NAME= 00000005            
FAB$V_NAM      = 00000018            NAM$K_BLN_DIRWC  00000050            NAM$V_WILD_SFD1= 00000019            
FAB$V_NEF      = 0000000A            NAM$L_DIRWCC1    00000040            NAM$V_WILD_SFD2= 0000001A            
FAB$V_NFS      = 00000010            NAM$L_DIRWCC2    00000044            NAM$V_WILD_SFD3= 0000001B            
FAB$V_NIL      = 00000005            NAM$L_DIRWCC3    00000048            NAM$V_WILD_SFD4= 0000001C            
FAB$V_OFP      = 0000001D            NAM$L_DIRWCC4    0000004C            NAM$V_WILD_SFD5= 0000001D            
FAB$V_ORG      = 00000004            NAM$L_DWC        00000038            NAM$V_WILD_SFD6= 0000001E            
FAB$V_POS      = 00000008            NAM$L_ESA        0000000C            NAM$V_WILD_SFD7= 0000001F            
FAB$V_PPF      = 00000012            NAM$L_FNB        00000034            NAM$V_WILD_TYPE= 00000004            
FAB$V_PPF_IND  = 0000000E            NAM$L_RLF        00000010            NAM$V_WILD_UFD = 00000018            
FAB$V_PPF_RAT  = 00000006            NAM$L_RSA        00000004            NAM$V_WILD_VER = 00000003            
FAB$V_PRN      = 00000002            NAM$L_WCC        00000030            NAM$W_DID        0000002A            
FAB$V_PUT      = 00000000            NAM$M_DIR_LVLS = 00E00000            NAM$W_DID_NUM    0000002A            
FAB$V_RCK      = 00000017            NAM$M_EXP_DEV  = 00000080            NAM$W_DID_RVN    0000002E            
FAB$V_RWC      = 0000000B            NAM$M_EXP_DIR  = 00000040            NAM$W_DID_SEQ    0000002C            
FAB$V_RWO      = 00000007            NAM$M_EXP_NAME = 00000004            NAM$W_FID        00000024            
FAB$V_SCF      = 0000000E            NAM$M_EXP_TYPE = 00000002            NAM$W_FID_NUM    00000024            
FAB$V_SHRDEL   = 00000002            NAM$M_EXP_VER  = 00000001            NAM$W_FID_RVN    00000028            
FAB$V_SHRGET   = 00000001            NAM$M_GRP_MBR  = 00080000            NAM$W_FID_SEQ    00000026            
FAB$V_SHRPUT   = 00000000            NAM$M_HIGHVER  = 00008000            NAM$W_PRV_DID    0000003A            
FAB$V_SHRUPD   = 00000003            NAM$M_LOWVER   = 00004000            NOREXT           000001F0 R     03   
FAB$V_SPL      = 0000000D            NAM$M_NODE     = 00020000            PRINT            00000007 R     03   
FAB$V_SQO      = 00000006            NAM$M_PPF      = 00010000            PRO_B_FLAGS      00000001            
FAB$V_SUP      = 00000002            NAM$M_QUOTED   = 00040000            PRO_B_PROMPT     00000000            
FAB$V_TEF      = 0000001C            NAM$M_WILDCARD = 00000100            PRO_K_LENGTH     00000002            
FAB$V_TMD      = 00000004            NAM$M_WILD_DIR = 00100000            PRO_M_CONCAT   = 00000001            
FAB$V_TMP      = 00000003            NAM$M_WILD_GRP = 01000000            PRO_M_IMPCAT   = 00000002            
FAB$V_TRN      = 00000004            NAM$M_WILD_MBR = 02000000            PRO_M_LIST     = 00000004            
FAB$V_UFM      = 0000001A            NAM$M_WILD_NAME= 00000020            PRO_M_OPTION   = 00000008            
FAB$V_UFO      = 00000011            NAM$M_WILD_SFD1= 02000000            PRO_M_REQ      = 00000010            
FAB$V_UPD      = 00000003            NAM$M_WILD_SFD2= 04000000            PRO_M_STRING   = 00000020            
FAB$V_UPI      = 00000006            NAM$M_WILD_SFD3= 08000000            PRO_V_CONCAT   = 00000000            
FAB$V_WCK      = 00000009            NAM$M_WILD_SFD4= 10000000            PRO_V_IMPCAT   = 00000001            
FAB$W_BLS        0000003C            NAM$M_WILD_SFD5= 20000000            PRO_V_LIST     = 00000002            
FAB$W_DEQ        00000014            NAM$M_WILD_SFD6= 40000000            PRO_V_OPTION   = 00000003            
FAB$W_IFI        00000002            NAM$M_WILD_SFD7= 80000000            PRO_V_REQ      = 00000004            
FAB$W_MRS        00000036            NAM$M_WILD_TYPE= 00000010            PRO_V_STRING   = 00000005            
GBL...         = 00000000            NAM$M_WILD_UFD = 01000000            QUA_B_DEFVAL     00000002            
INP_OPN_ERR      0000044D R     03   NAM$M_WILD_VER = 00000008            QUA_B_IMAGE      00000005            
IO$_READVBLK     ********   X   03   NAM$S_DIR_LVLS = 00000003            QUA_B_INDEX      00000001            
IVERR            00000380 R     03   NAM$T_DVI        00000014            QUA_B_OFFSET     00000000            
LIB$CNVCLIFORMS  ********   X   03   NAM$V_DIR_LVLS = 00000015            QUA_B_PARMCNT    00000008            
LIB$CVT_TIME     ********   X   03   NAM$V_EXP_DEV  = 00000007            QUA_G_CHNGLST    00000006            
LINBUFSIZ      = 00000084            NAM$V_EXP_DIR  = 00000006            QUA_M_BATDEF   = 00000100            
NAM$B_BID        00000000            NAM$V_EXP_NAME = 00000002            QUA_M_CHNGLIST = 00000001            
NAM$B_BLN        00000001            NAM$V_EXP_TYPE = 00000001            QUA_M_DEFTRUE  = 00000080            
NAM$B_CURLVL     00000038            NAM$V_EXP_VER  = 00000000            QUA_M_FILE     = 00000004            
NAM$B_ESL        0000000B            NAM$V_GRP_MBR  = 00000013            QUA_M_IMAGE    = 00000400            
NAM$B_ESS        0000000A            NAM$V_HIGHVER  = 0000000F            QUA_M_INTDEF   = 00000200            
NAM$B_RSL        00000003            NAM$V_LOWVER   = 0000000E            QUA_M_KEYVAL   = 00004000            
NAM$B_RSS        00000002            NAM$V_NODE     = 00000011            QUA_M_LOCALKEY = 00000002            
NAM$C_BID      = 00000002            NAM$V_PPF      = 00000010            QUA_M_NEG      = 00000040            
NAM$C_BLN        00000038            NAM$V_QUOTED   = 00000012            QUA_M_ONEVAL   = 00002000            
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page  20
SYMBOL TABLE                                                                                                                     (3)

QUA_M_OUTPUT   = 00000800            RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            
QUA_M_PARM     = 00000010            RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            
QUA_M_VAL      = 00000020            RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            
QUA_M_VALREQ   = 00001000            RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            
QUA_M_VERB     = 00000008            RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            
QUA_S_MAXPARM  = 00000004            RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            
QUA_S_MINPARM  = 00000004            RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            
QUA_V_BATDEF   = 00000008            RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            
QUA_V_CHNGLIST = 00000000            RAB$M_KGE      = 00200000            RMS$_NMF         ********   X   03   
QUA_V_DEFTRUE  = 00000007            RAB$M_KGT      = 00400000            SENDMSG          0000023C R     03   
QUA_V_FILE     = 00000002            RAB$M_LIM      = 00004000            SETPT            0000035F R     03   
QUA_V_IMAGE    = 0000000A            RAB$M_LOA      = 00002000            SHOWID           00000220 R     03   
QUA_V_INTDEF   = 00000009            RAB$M_LOC      = 00010000            SHOW_MSG         00000483 R     03   
QUA_V_KEYVAL   = 0000000E            RAB$M_MAS      = 00000020            SHR$_ABEND     = 000010D8            
QUA_V_LOCALKEY = 00000001            RAB$M_NLK      = 00100000            SHR$_ABENDD    = 000010E0            
QUA_V_MAXPARM  = 00000004            RAB$M_NXR      = 00800000            SHR$_ABENDT    = 000010E8            
QUA_V_MINPARM  = 00000000            RAB$M_PMT      = 40000000            SHR$_APPENDEDB = 00001000            
QUA_V_NEG      = 00000006            RAB$M_PPF_IND  = 00004000            SHR$_APPENDEDR = 00001008            
QUA_V_ONEVAL   = 0000000D            RAB$M_PPF_RAT  = 00003FC0            SHR$_ATPC      = 00001158            
QUA_V_OUTPUT   = 0000000B            RAB$M_PTA      = 20000000            SHR$_BADBYTE   = 00001010            
QUA_V_PARM     = 00000004            RAB$M_RAH      = 00000200            SHR$_BADCOPIES = 00001160            
QUA_V_VAL      = 00000005            RAB$M_RLK      = 00080000            SHR$_BADDELIM  = 00001118            
QUA_V_VALREQ   = 0000000C            RAB$M_RNE      = 01000000            SHR$_BADFIELD  = 00001018            
QUA_V_VERB     = 00000003            RAB$M_RNF      = 08000000            SHR$_BADFORM   = 00001168            
QUA_W_FLAGS      00000003            RAB$M_TMO      = 02000000            SHR$_BADJOBID  = 00001170            
QUA_W_PROMPT     00000009            RAB$M_TPT      = 00000002            SHR$_BADJOBNAME= 00001178            
QUA_W_QUALIST    00000006            RAB$M_UIF      = 00000010            SHR$_BADKEY    = 00001108            
RAB$B_BID        00000000            RAB$M_ULK      = 00040000            SHR$_BADLOGIC  = 00001120            
RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            SHR$_BADLOGICPC= 00001150            
RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            SHR$_BADLONG   = 00001020            
RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            SHR$_BADPRTY   = 00001180            
RAB$B_MBC        00000037            RAB$V_ASY      = 00000000            SHR$_BADQNAME  = 00001188            
RAB$B_MBF        00000036            RAB$V_BIO      = 0000000B            SHR$_BADTIME   = 00001190            
RAB$B_PSZ        00000034            RAB$V_CCO      = 0000001F            SHR$_BADVALUE  = 00001110            
RAB$B_RAC        0000001E            RAB$V_CVT      = 0000001A            SHR$_BADWORD   = 00001028            
RAB$B_ROP1       00000005            RAB$V_EOF      = 00000008            SHR$_BEGIN     = 00001030            
RAB$B_ROP2       00000006            RAB$V_FDL      = 00000006            SHR$_BEGIND    = 00001038            
RAB$B_ROP3       00000007            RAB$V_HSH      = 00000007            SHR$_BEGINT    = 00001040            
RAB$B_TMO        0000001F            RAB$V_KGE      = 00000015            SHR$_CLICB     = 00001048            
RAB$C_BID      = 00000001            RAB$V_KGT      = 00000016            SHR$_CLOSEDEL  = 00001218            
RAB$C_BLN        00000044            RAB$V_LIM      = 0000000E            SHR$_CLOSEIN   = 00001050            
RAB$C_KEY      = 00000001            RAB$V_LOA      = 0000000D            SHR$_CLOSEOUT  = 00001058            
RAB$C_RFA      = 00000002            RAB$V_LOC      = 00000010            SHR$_CONFDEL   = 000011F8            
RAB$C_SEQ      = 00000000            RAB$V_MAS      = 00000005            SHR$_COPIEDB   = 00001060            
RAB$K_BLN        00000044            RAB$V_NLK      = 00000014            SHR$_COPIEDR   = 00001068            
RAB$L_BKT        00000038            RAB$V_NXR      = 00000017            SHR$_CREATED   = 00001070            
RAB$L_CTX        00000018            RAB$V_PMT      = 0000001E            SHR$_DELETED   = 00001200            
RAB$L_DCT        00000038            RAB$V_PPF_IND  = 0000000E            SHR$_DELINTERR = 00001240            
RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            SHR$_DELVER    = 00001208            
RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            SHR$_DIRTOOBUS = 00001220            
RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            SHR$_ENDED     = 00001078            
RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            SHR$_ENDEDD    = 00001080            
RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            SHR$_ENDEDT    = 00001088            
RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            SHR$_FILNOTDEL = 000011F0            
RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            SHR$_FILNOTPUR = 00001230            
RAB$L_STS        00000008            RAB$V_TPT      = 00000001            SHR$_FILPURGED = 00001250            
RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            SHR$_HASHCONCAT= 000011D8            
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page  21
SYMBOL TABLE                                                                                                                     (3)

SHR$_HIGHVER   = 00001148            SMO$K_NOGENDEV = 00000045            SMT_INSBYTOPT    00000336 R     03   
SHR$_IDXCONCAT = 00001138            SMO$K_NOGENPRT = 00000042            SMT_JOBCOPY      0000032A RG    03   
SHR$_INCOMPAT  = 000011E0            SMO$K_NOLOWER  = 00000028            SMT_JOBNAME      000002A9 RG    03   
SHR$_NEWFILES  = 00001090            SMO$K_NOTRMDEV = 0000004B            SMT_JOBPRI       0000032F RG    03   
SHR$_NOFILPURG = 00001228            SMO$K_PAGCNT   = 00000009            SMT_LINBUF       ********   X   03   
SHR$_NOJOBID   = 000011A0            SMO$K_PAGHDR   = 00000006            SMT_LOWER        000002EE RG    03   
SHR$_NOJOBNAME = 000011A8            SMO$K_PARAMS   = 00000026            SMT_L_MSGPTR   = 00000028            
SHR$_NOQUEUE   = 00001198            SMO$K_REQUEUE  = 00000070            SMT_L_STATUS   = 00000004            
SHR$_NOTCMPLT  = 000011C0            SMO$K_RLSTIM   = 00000020            SMT_MASK       = 0000003C            
SHR$_NOTCOPIED = 000011B8            SMO$K_SPCCNT   = 00000062            SMT_MESSAGE      ********   X   03   
SHR$_NOVALUE   = 00001100            SMO$K_TOPOFILE = 00000061            SMT_MSGDAT       ********   X   03   
SHR$_NOWILD    = 00001128            SMO$K_TRMDEV   = 0000004A            SMT_M_CMDERR   = 00000008            
SHR$_OPENIN    = 00001098            SMR$K_ABORT    = 0000000E            SMT_M_FILSNT   = 00000004            
SHR$_OPENOUT   = 000010A0            SMR$K_ADDFIL   = 0000000A            SMT_M_IDENT    = 00000004            
SHR$_OVERLAY   = 000010A8            SMR$K_ALTER    = 0000000D            SMT_M_JOBOPN   = 00000002            
SHR$_PARSEFAIL = 00001248            SMR$K_CLSJOB   = 0000000B            SMT_M_NAME     = 00000002            
SHR$_PURGEVER  = 00001210            SMR$K_CREJOB   = 00000009            SMT_M_NONAME   = 00000010            
SHR$_READERR   = 000010B0            SMR$K_DELETE   = 00000001            SMT_M_PRTCMD   = 00000010            
SHR$_RELCONCAT = 00001140            SMR$K_DETINIT  = 00000010            SMT_M_REMOTE   = 00000008            
SHR$_REPLACED  = 000010B8            SMR$K_ENTER    = 00000008            SMT_NOBURST      000002DF RG    03   
SHR$_RMSERROR  = 000011C8            SMR$K_INITIAL  = 00000000            SMT_NOFEED       000002F3 RG    03   
SHR$_SEARCHFAIL= 00001238            SMR$K_JUSTIFY  = 00000006            SMT_NOFLAG       000002E4 RG    03   
SHR$_SYNTAX    = 000010F8            SMR$K_MERGE    = 00000004            SMT_NUMVAL       ********   X   03   
SHR$_SYSERROR  = 000011B0            SMR$K_PAUSE    = 00000003            SMT_PAGCNT       0000034C RG    03   
SHR$_SYSERRORPC= 000010F0            SMR$K_REDIRECT = 00000005            SMT_PARAMS       000003B3 RG    03   
SHR$_TEXT      = 00001130            SMR$K_RELEASE  = 0000000F            SMT_PARSDON      ********   X   03   
SHR$_UNXPCTSTS = 000011D0            SMR$K_RMVJOB   = 0000000C            SMT_PRTHDR       000002F8 RG    03   
SHR$_VALERR    = 000011E8            SMR$K_START    = 00000002            SMT_Q_INPDES   = 00000010            
SHR$_WILDCONCAT= 000010C0            SMR$K_STOP     = 00000007            SMT_Q_IOSB     = 00000020            
SHR$_WILDOUTVER= 000010C8            SMR$K_SYNCJOB  = 00000011            SMT_Q_OUTDES   = 00000018            
SHR$_WRITEERR  = 000010D0            SMT$CMDERR       000003F2 RG    03   SMT_SETBYTOPT    00000334 R     03   
SMO$K_BRSTPAG  = 00000002            SMT$CTXBLK       ********   X   03   SMT_SETEXPOPT    000002FD R     03   
SMO$K_COPIES   = 0000000A            SMT_ASCIIVAL     ********   X   03   SMT_SETMSGPTR    00000347 R     03   
SMO$K_CURFORM  = 00000040            SMT_A_BUFADR   = 0000000C            SMT_SETOPT       00000306 R     03   
SMO$K_DEFBRST  = 00000046            SMT_A_INPNAM   = 00000014            SMT_TIME         00000392 RG    03   
SMO$K_DEFFLAG  = 00000048            SMT_A_OUTNAM   = 0000001C            SMT_T_DEVNAM   = 00000030            
SMO$K_DELETE   = 00000001            SMT_BURST        000002DA RG    03   SMT_V_CMDERR   = 00000003            
SMO$K_DETJOB   = 00000043            SMT_B_BITMAP   = 0000002F            SMT_V_FILSNT   = 00000002            
SMO$K_DISWAP   = 0000004E            SMT_B_SUBSTEP  = 0000002E            SMT_V_IDENT    = 00000002            
SMO$K_DOUBLE   = 00000007            SMT_CALBAK       0000027E RG    03   SMT_V_JOBOPN   = 00000001            
SMO$K_FLAGPAG  = 00000004            SMT_CALBAK1      00000283 RG    03   SMT_V_NAME     = 00000001            
SMO$K_FORMTYPE = 00000024            SMT_CLIWORK      ********   X   03   SMT_V_NONAME   = 00000004            
SMO$K_GENDEV   = 00000044            SMT_COPIES       00000325 RG    03   SMT_V_PRTCMD   = 00000004            
SMO$K_GENPRT   = 00000041            SMT_DEFNAM       ********   X   03   SMT_V_REMOTE   = 00000003            
SMO$K_HOLD     = 00000021            SMT_DELETE       000002D5 RG    03   SMT_W_BUFCNT   = 00000008            
SMO$K_INIPRI   = 0000004D            SMT_DEVNAM       00000290 RG    03   SMT_W_BUFSIZ   = 0000000A            
SMO$K_JOBCOPY  = 00000023            SMT_DOUBLE       000002CB RG    03   SMT_W_FLAGS    = 00000000            
SMO$K_JOBLIM   = 0000004C            SMT_FLAGPAG      000002E9 RG    03   SMT_W_INPCNT   = 00000010            
SMO$K_JOBNAME  = 00000027            SMT_FORMS        0000030D RG    03   SMT_W_INPSIZ   = 00000012            
SMO$K_JOBPRI   = 00000022            SMT_GETCMD       ********   X   03   SMT_W_JOBNUM   = 0000002C            
SMO$K_LOWER    = 00000025            SMT_GETCMDQUAL   ********   X   03   SMT_W_OUTCNT   = 00000018            
SMO$K_NEXTJOB  = 00000060            SMT_GETNUMVAL    00000364 R     03   SMT_W_OUTSIZ   = 0000001A            
SMO$K_NOBRSTPAG= 00000003            SMT_HOLD         000002D0 RG    03   SMT_W_RSPCHAN  = 00000002            
SMO$K_NODEFBRST= 00000047            SMT_INITPRS      ********   X   03   STS$K_ERROR    = 00000002            
SMO$K_NODEFFLAG= 00000049            SMT_INPDESC      ********   X   03   STS$K_INFO     = 00000003            
SMO$K_NOFEED   = 00000008            SMT_INPFAB       ********   X   03   STS$K_SEVERE   = 00000004            
SMO$K_NOFLAGPAG= 00000005            SMT_INPNAM       ********   X   03   STS$K_SUCCESS  = 00000001            
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page  22
SYMBOL TABLE                                                                                                                     (3)

STS$K_WARNING  = 00000000            
STS$M_CODE     = 00007FF8            
STS$M_COND_ID  = 0FFFFFF8            
STS$M_CONTROL  = F0000000            
STS$M_CUST_DEF = 08000000            
STS$M_FAC_NO   = 0FFF0000            
STS$M_FAC_SP   = 00008000            
STS$M_INHIB_MSG= 10000000            
STS$M_MSG_NO   = 0000FFF8            
STS$M_SEVERITY = 00000007            
STS$M_SUCCESS  = 00000001            
STS$S_CODE     = 0000000C            
STS$S_COND_ID  = 00000019            
STS$S_CONTROL  = 00000004            
STS$S_CUST_DEF = 00000001            
STS$S_FAC_NO   = 0000000C            
STS$S_FAC_SP   = 00000001            
STS$S_INHIB_MSG= 00000001            
STS$S_MSG_NO   = 0000000D            
STS$S_SEVERITY = 00000003            
STS$S_SUCCESS  = 00000001            
STS$V_CODE     = 00000003            
STS$V_COND_ID  = 00000003            
STS$V_CONTROL  = 0000001C            
STS$V_CUST_DEF = 0000001B            
STS$V_FAC_NO   = 00000010            
STS$V_FAC_SP   = 0000000F            
STS$V_INHIB_MSG= 0000001C            
STS$V_MSG_NO   = 00000003            
STS$V_SEVERITY = 00000000            
STS$V_SUCCESS  = 00000000            
SUBMIT           00000000 R     03   
SUBMIT_FILE      00000021 RG    03   
SYS$CLOSE        ********  GX   03   
SYS$CREMBX       ********   X   03   
SYS$DASSGN       ********   X   03   
SYS$EXIT         ********   X   03   
SYS$PUTMSG       ********   X   03   
SYS$QIOW         ********   X   03   
SYS$SNDSMB       ********   X   03   
SYS$TRNLOG       ********   X   03   
TERMIN           0000020B R     03   
VALER1           00000377 R     03   
VALERR           000003ED R     03   
_$$_           = 000000EF            
_ALL_          = 00000000            
_BASE_         = 00000000            
_END_          = 00000040            
_GBL_          = 00000000            
_TOP_          = 00000030            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000080      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
SUBMIT          - CLI SUBMIT COMMAND PROCESSOR                   21-AUG-1978 19:30:28   VAX-11 MACRO X0.3-11               Page  23
PROGRAM SECTION SYNOPSIS                                                                                                         (3)

PURE             000004C7      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
222. BYTES LEFT IN FREE MEMORY POOL.
64. BYTES OF RECLAIMED MEMORY.
OBJ$:SUBMIT,LIS$:SUBMIT/-SP=EXECML$/ML,LIB$:CLIUTL/ML,SRC$:SUBMIT
142 MLB DIR RDS - 1319 GETS TO DEFINE 43 MACROS. 105 INTER. FILE WRITES. 
