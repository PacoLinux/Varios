SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      45  DECLARATIONS
   (3)     274  SHOW$SYSTEM	- main loop
   (4)     348  SYS_PROC_PRES	- display processes
   (5)     413  COPY_PROC	- copy process information
   (6)     558  SYS_FORMAT	- format and print information
   (7)     701  GET_PHD		- copy PHD information
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page   1
X0101                                                                                                                            (1)

                                     0000     1 	.TITLE	SHOW$SYSTEM
                                     0000     2 	.IDENT	/X0101/
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 
                                     0000    24 ;++
                                     0000    25 ; FACILITY:	DCL SHOW command
                                     0000    26 ;
                                     0000    27 ; ABSTRACT:
                                     0000    28 ;
                                     0000    29 ;	This module implements the SHOW SYSTEM command option
                                     0000    30 ;
                                     0000    31 ; ENVIRONMENT:
                                     0000    32 ;
                                     0000    33 ;	Runs in user mode but requires privilege to change mode to kernel
                                     0000    34 ;
                                     0000    35 ; AUTHOR : BEATRICE U. WALTHER,  CREATION DATE: 10-OCT-1977
                                     0000    36 ;
                                     0000    37 ; MODIFIED BY:
                                     0000    38 ;
                                     0000    39 ;	, : VERSION
                                     0000    40 ; 01	- 
                                     0000    41 ;--
                                     0000    42 
                                     0000    43 
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page   2
X0101           DECLARATIONS                                                                                                     (2)

                                     0000    45 	.SBTTL	DECLARATIONS
                                     0000    46 
                                     0000    47 ;
                                     0000    48 ; Include files:
                                     0000    49 ;
                                     0000    50 
                                     0000    51 	$PCBDEF				; process control block defintions
                                     0000    52 	$PHDDEF				; process header definitions
                                     0000    53 	$STATEDEF			; define process states
                                     0000    54 	$IPLDEF				; define IPL values
                                     0000    55 	$PRDEF				; processor register definitions
                                     0000    56 	$SHRDEF				;  define shared messages
                                     0000    57 	$STSDEF				; define status codes
                                     0000    58 
                                     0000    59 ;
                                     0000    60 ; Macros:
                                     0000    61 ;
                                     0000    62 
                                     0000    63 ;+
                                     0000    64 ; The $SHR_MESSAGES macro defines facility-specific message codes
                                     0000    65 ;	which are based on the system-wide shared message codes.
                                     0000    66 ;
                                     0000    67 ;	$SHR_MESSAGES	name, code, <<msg,severity>, ... >
                                     0000    68 ;
                                     0000    69 ;	where:
                                     0000    70 ;	    "name" is the name of the facility (e.g., COPY)
                                     0000    71 ;	    "code" is the corresponding facility code (e.g., 103)
                                     0000    72 ;	    "msg" is the name of the shared message (e.g., BEGIN)
                                     0000    73 ;	    "severity" is the desired message severity (e.g., 1, 0, 2, 4)
                                     0000    74 ;
                                     0000    75 ;-
                                     0000    76 	.MACRO	$SHR_MESSAGES	NAME,CODE,MSGCODES
                                     0000    77 ;
                                     0000    78 	.IF	NDF,SHR$K_SHRDEF  ; issue $SHRDEF if not done yet
                                     0000    79 		SHR$K_SHRDEF = 1 ; define symbol to indic $SHRDEF done
                                     0000    80 		$SHRDEF		 ; define shared message codes
                                     0000    81 	.ENDC
                                     0000    82 	.IRP	MSGPAIR, <'MSGCODES>
                                     0000    83 		$SHRMSG_COD 'NAME', 'CODE', MSGPAIR
                                     0000    84 	.ENDR
                                     0000    85 	.ENDM
                                     0000    86 	.MACRO	$SHRMSG_COD NAME, CODE, MSG, SEVERITY
                                     0000    87 ;
                                     0000    88 	.IF	IDN,SEVERITY,WARNING    ; if WARNING, set 0 sev
                                     0000    89 	  'NAME'$_'MSG' = 0	        ; set 0 sev (WARNING)
                                     0000    90 	.IFF
                                     0000    91 	  .IF	IDN,SEVERITY,SUCCESS    ; if SUCCESS, set 1 sev
                                     0000    92 	    'NAME'$_'MSG' = 1	        ; set 1 sev (SUCCESS)
                                     0000    93 	  .IFF
                                     0000    94 	    .IF	IDN,SEVERITY,ERROR      ; if ERROR, set 2 sev
                                     0000    95 	      'NAME'$_'MSG' = 2	        ; set 2 sev (ERROR)
                                     0000    96 	    .IFF
                                     0000    97 	      .IF IDN,SEVERITY,INFO     ; if INFO, set 3 sev
                                     0000    98 	        'NAME'$_'MSG' = 3       ; set 3 sev (INFO)
                                     0000    99 	      .IFF
                                     0000   100 	        .IF IDN,SEVERITY,SEVERE ; if SEVERE, set 4 sev
                                     0000   101 	          'NAME'$_'MSG' = 4     ; set 4 sev (SEVERE)
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page   3
X0101           DECLARATIONS                                                                                                     (2)

                                     0000   102 	        .IFF
                                     0000   103 	          'NAME'$_'MSG' = 'SEVERITY ; set specified sev
                                     0000   104 	        .ENDC
                                     0000   105 	      .ENDC
                                     0000   106 	    .ENDC
                                     0000   107 	  .ENDC
                                     0000   108 	.ENDC
                                     0000   109 	 'NAME'$_'MSG' = 'NAME'$_'MSG'+SHR$_'MSG'+<'CODE'@16>
                                     0000   110 	.ENDM
                                     0000   111 
                                     0000   112 
                                     0000   113 ;
                                     0000   114 ; Equated symbols:
                                     0000   115 ;
                                     0000   116 
                                     0000   117 	_VIELD	SYS,0,<-		; define bit masks
                                     0000   118 		<PROC,,M>,-		; /PROCESS
                                     0000   119 		>
                                     0000   120 
                                     0000   121 	$SHR_MESSAGES	SHOW,120,<-	; define shared messages
                                     0000   122 		<BADLOGIC,ERROR>,-
                                     0000   123 			>
                                     0000   124 
                                     0000   125 
                           00000040  0000   126 SCRATCH_PAGES=64			; scratch pages needed
                           00000003  0000   127 USER_MODE=3
                           00000000  0000   128 PROGRAM_REGION=0
                           00000010  0000   129 PCB$S_LNAME=16				; maximum length of a process name
                                     0000   130 
                                     0000   131 ;
                                     0000   132 ; FORM
                                     0000   133 ;
                                     0000   134 ; This structure is used to hold information about one process.
                                     0000   135 ; It is subsequently used as an FAO parameter list by the formatting
                                     0000   136 ; routine
                                     0000   137 ;
                                     0000   138 	$DEFINI	FORM
                                     0000   139 $DEF	FORM_PROCINFO
                                     0000   140 $DEF	FORM_L_PID
                           00000004  0000   141 	.BLKL	1			; process id
                                     0004   142 $DEF	FORM_L_LNAME
                           00000008  0004   143 	.BLKL	1			; pointer to process name
                                     0008   144 $DEF	FORM_L_GRP
                           0000000C  0008   145 	.BLKL	1			; group number of UIC
                                     000C   146 $DEF	FORM_L_MEM
                           00000010  000C   147 	.BLKL	1			; member field of UIC
                                     0010   148 $DEF	FORM_L_STATE
                           00000014  0010   149 	.BLKL	1			; process state
                                     0014   150 $DEF	FORM_L_PRI
                           00000018  0014   151 	.BLKL	1			; current priority
                                     0018   152 $DEF	FORM_L_DIOCNT
                           0000001C  0018   153 	.BLKL	1			; accumulated direct I/O count
                                     001C   154 $DEF	FORM_L_CPUTIM
                           00000020  001C   155 	.BLKL	1			; Elapsed CPU time
                                     0020   156 $DEF	FORM_L_PFLTS
                           00000024  0020   157 	.BLKL	1			; page faults
                                     0024   158 $DEF	FORM_Q_PHYS
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page   4
X0101           DECLARATIONS                                                                                                     (2)

                           0000002C  0024   159 	.BLKQ	1			; Process private page count
                                     002C   160 					; Global page count
                                     002C   161 $DEF	FORM_L_STS
                           00000030  002C   162 	.BLKL	1			; process status
                                     0030   163 					; (later pointer to string)
                                     0030   164 $DEF	FORM_L_OWNER
                           00000034  0030   165 	.BLKL	1			; owner of process if any
                                     0034   166 					; (later pointer to string)
                                     0034   167 $DEF	FORM_L_NETWRK
                           00000038  0034   168 	.BLKL	1			; pointer to network indicator (if any)
                                     0038   169 $DEF	FORM_T_LNAME
                           00000048  0038   170 	.BLKB	PCB$S_LNAME		; space for process name
                                     0048   171 $DEF	FORM_K_LENGTH			; define length of structure
                                     0048   172 	$DEFEND	FORM			; end of structure
                                     0000   173 
                                     0000   174 ;
                                     0000   175 ; Own storage
                                     0000   176 ;
                                     0000   177 
                                 00000000   178 	.PSECT	SHOW$RWDATA	LONG,RD,WRT,NOEXE
                                     0000   179 ;
                                     0000   180 ; define CLI call back structures
                                     0000   181 ;
                                     0000   182 
                                     0000   183 SYS_A_GETQUAL:
                                     0000   184 	$CLIREQDESC	-
                                     0000   185 		RQTYPE=CLI$K_GETQUAL,-	; get qualifiers request
                                     0000   186 		QUALST=SYS_A_QUALST	; pointer to qualifier list
                                     001C   187 SYS_A_QUALST:
                                     001C   188 	$CLIQUALDEF	-
                                     001C   189 		QDCODE=CLI$K_SHSS_PROC,-; /PROCESS
                                     001C   190 		SETLST=SYS_V_PROC,-	;
                                     001C   191 		TRUACT=SYS_PROC_PRES	;
                                     0034   192 	$CLIQUALDEF	END_LIST
                                     0035   193 
                                     0035   194 
                                     0035   195 SYS_L_BITLIS:
                           00000039  0035   196 	.BLKL	1			; bit list
                                     0039   197 SYS_Q_SCRATCH:
                           00000041  0039   198 	.BLKQ	1			; descriptor of scratch area
                                     0041   199 					; (pointers to start and end)
                                     0041   200 SYS_Q_CPUTIM:
                           00000049  0041   201 	.BLKQ	1			; space for expanded CPU time
                                     0049   202 PCB_ARGLIS:
                           00000001  0049   203 	.LONG	1			; construct argument list for call
                           00000051  004D   204 	.BLKL	1			; to GET_PHD
                                     0051   205 
                                     0051   206 ;
                                     0051   207 ; text
                                     0051   208 ;
                                     0051   209 
                                 00000000   210 	.PSECT	SHOW$STATE_TBL	LONG,RD,NOWRT,NOEXE
                                     0000   211 
                                     0000   212 SYS_STATE:
                                     0000   213 	.IRP	XXX,<-
                                     0000   214 		COLPG,-			; collided page wait
                                     0000   215 		MWAIT,-			; mutex and miscellaneous resource wait
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page   5
X0101           DECLARATIONS                                                                                                     (2)

                                     0000   216 		CEF,-			; common event flag wait
                                     0000   217 		PFW,-			; page fault wait
                                     0000   218 		LEF,-			; local event flag wait
                                     0000   219 		LEFO,-			; local event flag out of balance set
                                     0000   220 		HIB,-			; hibernate wait
                                     0000   221 		HIBO,-			; hibernate wait out of balance set
                                     0000   222 		SUSP,-			; suspended
                                     0000   223 		SUSPO,-			; suspended out of balance set
                                     0000   224 		FPG,-			; free page wait
                                     0000   225 		COM,-			; compute, in balance set
                                     0000   226 		COMO,-			; compute, out of balance set
                                     0000   227 		CUR,-			; current process
                                     0000   228 		>
                                     0000   229 	.WORD SCH$C_'XXX,SYS_T_'XXX	; code and pointer to text
                                     0000   230 	.SAVE
                                     0000   231 	.PSECT	SHOW$MSG_TXT	LONG,RD,NOWRT,NOEXE
                                     0000   232 SYS_T_'XXX:
                                     0000   233 	.ASCIC	/'XXX'/
                                     0000   234 	.RESTORE
                                     0000   235 	.ENDR
                           0000000E  0038   236 MAX_STATES =<.-SYS_STATE>/4		; size in long words of state table
                                     0038   237 SYS_T_DATE:
                           00000000  0038   238 	.LONG	0			; system date and time
                                     003C   239 SYS_T_BATCH:
                           20 42 00' 003C   240 	.ASCIC	/B /			; batch indicator
                                 02  003C       
                                     003F   241 SYS_T_SUBPROC:
                              53 00' 003F   242 	.ASCIC	/S/			; subprocess indicator
                                 01  003F       
                                     0041   243 SYS_T_NETWRK:
                              4E 00' 0041   244 	.ASCIC	/N/			; network indicator
                                 01  0041       
                                     0043   245 NULL_T_STRING:
                           00000000  0043   246 	.LONG	0			; null string is always needed
                                     0047   247 
                                     0047   248 ;
                                     0047   249 ; define PSECTS to be locked
                                     0047   250 ;
                                     0047   251 
                                 00000000   252 	.PSECT	SHOW$AAAADATA	PAGE,RD,WRT,NOEXE
                                     0000   253 LOCK_DATA_START:
                                     0000   254 TMP_L_DIOCNT:
                           00000004  0000   255 	.BLKL	1			; direct i/o count
                                     0004   256 TMP_L_PAGEFLTS:
                           00000008  0004   257 	.BLKL	1			; page faults
                                     0008   258 TMP_L_CPUTIM:
                           0000000C  0008   259 	.BLKL	1			; CPU time
                                     000C   260 TMP_L_STS:
                           00000010  000C   261 	.BLKL	1			; process status
                                     0010   262 LOCK_DATA_END:
                                     0010   263 
                                     0010   264 ;
                                     0010   265 ; build descriptors to locked areas
                                     0010   266 ;
                                     0010   267 
                                 00000042   268 	.PSECT	SHOW$MSG_TXT BYTE,RD,NOWRT,NOEXE
                                     0042   269 
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page   6
X0101           DECLARATIONS                                                                                                     (2)

                                     0042   270 LOCK_Q_DATA:
                           00000000' 0042   271 	.LONG	LOCK_DATA_START
                           00000010' 0046   272 	.LONG	LOCK_DATA_END
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page   7
X0101           SHOW$SYSTEM - main loop                                                                                          (3)

                                     004A   274 	.SBTTL	SHOW$SYSTEM	- main loop
                                     004A   275 ;++
                                     004A   276 ; FUNCTIONAL DESCRIPTION:
                                     004A   277 ;
                                     004A   278 ;	This routine represents the main control loop of the
                                     004A   279 ;	SHOW SYSTEM Command
                                     004A   280 ;
                                     004A   281 ;
                                     004A   282 ; CALLING SEQUENCE:
                                     004A   283 ;
                                     004A   284 ;	CALLS
                                     004A   285 ;
                                     004A   286 ; INPUT PARAMETERS:
                                     004A   287 ;
                                     004A   288 ;	4(AP) = address of CLI utility service routine
                                     004A   289 ;
                                     004A   290 ; IMPLICIT INPUTS:
                                     004A   291 ;
                                     004A   292 ;	NONE
                                     004A   293 ;
                                     004A   294 ; OUTPUT PARAMETERS:
                                     004A   295 ;
                                     004A   296 ;	NONE
                                     004A   297 ;
                                     004A   298 ; IMPLICIT OUTPUTS:
                                     004A   299 ;
                                     004A   300 ;	NONE
                                     004A   301 ;
                                     004A   302 ; COMPLETION CODES:
                                     004A   303 ;
                                     004A   304 ;	R0 =	SS$_NORMAL
                                     004A   305 ;		Status code as returned by action routines 
                                     004A   306 ;
                                     004A   307 ; SIDE EFFECTS:
                                     004A   308 ;
                                     004A   309 ;	NONE
                                     004A   310 ;
                                     004A   311 ;--
                                     004A   312 
                                 00000000   313 	.PSECT	SHOW$CODE	BYTE,RD,NOWRT,EXE
                                     0000   314 
                               0000' 0000   315 	.ENTRY	SHOW$SYSTEM,0
                                     0002   316 
                                     0002   317 ;
                                     0002   318 ; get scratch space
                                     0002   319 ;
                                     0002   320 
                                     0002   321 	$EXPREG_S	-
                                     0002   322 		PAGCNT=#SCRATCH_PAGES,-
                                     0002   323 		RETADR=W^SYS_Q_SCRATCH,-
                                     0002   324 		ACMODE=#USER_MODE,-
                                     0002   325 		REGION=#PROGRAM_REGION
            1E            50     E9  0017   326 	BLBC	R0,90$			; exit on error
                                     001A   327 
                                     001A   328 ;
                                     001A   329 ; parse qualifiers
                                     001A   330 ;
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page   8
X0101           SHOW$SYSTEM - main loop                                                                                          (3)

                                     001A   331 
       0000'CF   00000000'8F     D0  001A   332 	MOVL	#SS$_NORMAL,W^SHOW$L_STATUS
                                     0023   333 
                                     0023   334 					; assume success
                     0035'CF     DF  0023   335 	PUSHAL	W^SYS_L_BITLIS		; bit list
                     0000'CF     DF  0027   336 	PUSHAL	W^SHOW$A_CLIWORK	; CLI work area
                     0000'CF     DF  002B   337 	PUSHAL	W^SYS_A_GETQUAL		; request qualifiers
         08 BC            03     FB  002F   338 	CALLS	#3,@CLI$A_UTILSERV(AP)	; call CLI
            50       0000'CF     D0  0033   339 	MOVL	W^SHOW$L_STATUS,R0	; load status code of action routine
                                     0038   340 
                                     0038   341 ;
                                     0038   342 ; exits
                                     0038   343 ;
                                     0038   344 
                                     0038   345 90$:
                                 04  0038   346 	RET
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page   9
X0101           SYS_PROC_PRES - display processes                                                                                (4)

                                     0039   348 	.SBTTL	SYS_PROC_PRES	- display processes
                                     0039   349 ;++
                                     0039   350 ; FUNCTIONAL DESCRIPTION:
                                     0039   351 ;
                                     0039   352 ;	This routine is called by the CLI as a true action routine
                                     0039   353 ;	for qualifier /PROCESS
                                     0039   354 ;
                                     0039   355 ;
                                     0039   356 ; CALLING SEQUENCE:
                                     0039   357 ;
                                     0039   358 ;	CALLS
                                     0039   359 ;
                                     0039   360 ; INPUT PARAMETERS:
                                     0039   361 ;
                                     0039   362 ;	NONE
                                     0039   363 ;
                                     0039   364 ; IMPLICIT INPUTS:
                                     0039   365 ;
                                     0039   366 ;	NONE
                                     0039   367 ;
                                     0039   368 ; OUTPUT PARAMETERS:
                                     0039   369 ;
                                     0039   370 ;	NONE
                                     0039   371 ;
                                     0039   372 ; IMPLICIT OUTPUTS:
                                     0039   373 ;
                                     0039   374 ;	NONE
                                     0039   375 ;
                                     0039   376 ; COMPLETION CODES:
                                     0039   377 ;
                                     0039   378 ;	R0 =	SS$_NORMAL
                                     0039   379 ;		Status code as returned by COPY_PROC
                                     0039   380 ;
                                     0039   381 ; SIDE EFFECTS:
                                     0039   382 ;
                                     0039   383 ;	NONE
                                     0039   384 ;
                                     0039   385 ;--
                                     0039   386 
                                 00000039   387 	.PSECT	SHOW$CODE	BYTE,RD,NOWRT,EXE
                                     0039   388 
                                     0039   389 SYS_PROC_PRES:
                               0000  0039   390 	.WORD	0
                                     003B   391 
                                     003B   392 ;
                                     003B   393 ; copy process information into scratch space
                                     003B   394 ;
                                     003B   395 
                                     003B   396 	$CMKRNL_S	<W^COPY_PROC>
            05            50     E9  0048   397 	BLBC	R0,90$			; exit on error
                                     004B   398 
                                     004B   399 ;
                                     004B   400 ; format and print information
                                     004B   401 ;
                                     004B   402 
       011A'CF            00     FB  004B   403 	CALLS	#0,W^SYS_FORMAT
                                     0050   404 
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page  10
X0101           SYS_PROC_PRES - display processes                                                                                (4)

                                     0050   405 ;
                                     0050   406 ; exit
                                     0050   407 ;
                                     0050   408 
                                     0050   409 90$:
       0000'CF            50     D0  0050   410 	MOVL	R0,W^SHOW$L_STATUS	; save status through CLI  return
                                 04  0055   411 	RET
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page  11
X0101           COPY_PROC - copy process information                                                                             (5)

                                     0056   413 	.SBTTL	COPY_PROC	- copy process information
                                     0056   414 ;++
                                     0056   415 ; FUNCTIONAL DESCRIPTION:
                                     0056   416 ;
                                     0056   417 ;	This routine scans all PCB's and copies information about each
                                     0056   418 ; 	process in the system into a scratch area
                                     0056   419 ;
                                     0056   420 ;
                                     0056   421 ; CALLING SEQUENCE:
                                     0056   422 ;
                                     0056   423 ;	CALLS
                                     0056   424 ;
                                     0056   425 ; INPUT PARAMETERS:
                                     0056   426 ;
                                     0056   427 ;	NONE
                                     0056   428 ;
                                     0056   429 ; IMPLICIT INPUTS:
                                     0056   430 ;
                                     0056   431 ;	NONE
                                     0056   432 ;
                                     0056   433 ; OUTPUT PARAMETERS:
                                     0056   434 ;
                                     0056   435 ;	NONE
                                     0056   436 ;
                                     0056   437 ; IMPLICIT OUTPUTS:
                                     0056   438 ;
                                     0056   439 ;	Raw information about all processes is copied into a scratch area
                                     0056   440 ;
                                     0056   441 ; COMPLETION CODES:
                                     0056   442 ;
                                     0056   443 ;	R0 =	SS$_NORMAL
                                     0056   444 ;		SHOW$_BADLOGIC = scratch area overflow
                                     0056   445 ;
                                     0056   446 ; SIDE EFFECTS:
                                     0056   447 ;
                                     0056   448 ;	NONE
                                     0056   449 ;
                                     0056   450 ; REGISTER USAGE
                                     0056   451 ;
                                     0056   452 ;	R6 = 	PCB address of null process
                                     0056   453 ;	R7 =	pointer to scratch area
                                     0056   454 ;	R8 = 	limit of scratch area
                                     0056   455 ;	R9 = 	current pix
                                     0056   456 ;	R10 =	address of current PCB beeing processes
                                     0056   457 ;
                                     0056   458 ;--
                                     0056   459 
                                 00000056   460 	.PSECT	SHOW$CODE	BYTE,RD,NOWRT,EXE
                                     0056   461 
                                     0056   462 COPY_PROC:
                               0FFC  0056   463 	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>
                                     0058   464 
                                     0058   465 ;
                                     0058   466 ; Initialize
                                     0058   467 ;
                                     0058   468 
            57       0039'CF     D0  0058   469 	MOVL	W^SYS_Q_SCRATCH,R7	; start of scratch area
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page  12
X0101           COPY_PROC - copy process information                                                                             (5)

            58       003D'CF     D0  005D   470 	MOVL	W^SYS_Q_SCRATCH+4,R8	; limit of scratch area
                          59     D4  0062   471 	CLRL	R9			; current pix
            5A   00000000'FF49   D0  0064   472 	MOVL 	@SCH$GL_PCBVEC[R9],R10	; get start address of PCB pointer table
            56            5A     D0  006C   473 	MOVL	R10,R6			; remember PCB of null process
                                     006F   474 ;%%%
                                     006F   475 	$LKWSET_S	-		; lock data in working set
                                     006F   476 		INADR=W^LOCK_Q_DATA	; (code is accessed when called)
            51            50     E9  007E   477 	BLBC	R0,99$			; exit on error
                                     0081   478 
                                     0081   479 ;
                                     0081   480 ; scan all PCB's
                                     0081   481 ;
                                     0081   482 
                          0D     11  0081   483 	BRB	12$			; don't skip null process the 1st time
                                     0083   484 10$:
            5A   00000000'FF49   D0  0083   485 	MOVL	@SCH$GL_PCBVEC[R9],R10	; get address of PCB pointer table
            56            5A     D1  008B   486 	CMPL	R10,R6			; is it the NULL process ?
                          23     13  008E   487 	BEQLU	20$			; skip null process
                                     0090   488 12$:
            55            57     D0  0090   489 	MOVL	R7,R5			; save pointer to scratch area
            55   00000048 8F     C0  0093   490 	ADDL	#FORM_K_LENGTH,R5	; test for overflow
            58            55     D1  009A   491 	CMPL	R5,R8			;
                          26     1E  009D   492 	BGEQU	80$			; branch on scratch area overflow
                          0031   30  009F   493 	BSBW	W^COPY_PCB		; copy PCB information into scratch
                          5A     DD  00A2   494 	PUSHL	R10			; address of PCB
       0000'CF            01     FB  00A4   495 	CALLS	#1,W^GET_PHD		; get PHD information
                          0055   30  00A9   496 	BSBW	W^COPY_PHD		; copy PHD information from locked data
                                     00AC   497 					; into scratch
            57   00000048 8F     C0  00AC   498 	ADDL	#FORM_K_LENGTH,R7	; update pointer to scratch area
                                     00B3   499 20$:
            59   00000000'EF     F3  00B3   500 	AOBLEQ	SCH$GL_MAXPIX,R9,10$	; repeat for all PCB's
                          C8         00BA       
            58            57     D1  00BB   501 	CMPL	R7,R8			; check for overflow
                          05     1E  00BE   502 	BGEQU	80$			; branch if overflow
            67            01     CE  00C0   503 	MNEGL	#1,FORM_L_PID(R7)	; mark end of copied area
                          08     11  00C3   504 	BRB	90$			; all done
                                     00C5   505 
                                     00C5   506 ;
                                     00C5   507 ; exits
                                     00C5   508 ;
                                     00C5   509 
                                     00C5   510 80$:
            50   00781122 8F     D0  00C5   511 	MOVL	#SHOW$_BADLOGIC,R0	; scratch area overflow
                                 04  00CC   512 	RET
                                     00CD   513 90$:
            50       0000'8F     3C  00CD   514 	MOVZWL	#SS$_NORMAL,R0		; signal success
                                     00D2   515 99$:
                                 04  00D2   516 	RET
                                     00D3   517 
                                     00D3   518 
                                     00D3   519 ;
                                     00D3   520 ; subroutine to copy PCB information into a scratch area
                                     00D3   521 ;
                                     00D3   522 
                                     00D3   523 COPY_PCB:
            67         60 AA     D0  00D3   524 	MOVL	PCB$L_PID(R10),FORM_L_PID(R7)
                                     00D7   525 					; process id
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page  13
X0101           COPY_PROC - copy process information                                                                             (5)

         6C AA            10     28  00D7   526 	MOVC3	#PCB$S_LNAME,PCB$T_LNAME(R10),FORM_T_LNAME(R7)
                       38 A7         00DB       
                                     00DD   527 					; process name
         08 A7         22 AA     3C  00DD   528 	MOVZWL	PCB$W_GRP(R10),FORM_L_GRP(R7)
                                     00E2   529 					; group number of uic
         0C A7         20 AA     3C  00E2   530 	MOVZWL	PCB$W_MEM(R10),FORM_L_MEM(R7)
                                     00E7   531 					; member number of UIC
         10 A7         30 AA     3C  00E7   532 	MOVZWL	PCB$W_STATE(R10),FORM_L_STATE(R7)
                                     00EC   533 					; scheduling state
         14 A7         0B AA     9A  00EC   534 	MOVZBL	PCB$B_PRI(R10),FORM_L_PRI(R7)
                                     00F1   535 					; current priority
         24 A7         3A AA     3C  00F1   536 	MOVZWL	PCB$W_PPGCNT(R10),FORM_Q_PHYS(R7)
                                     00F6   537 					; process private page count
         28 A7         38 AA     3C  00F6   538 	MOVZWL	PCB$W_GPGCNT(R10),FORM_Q_PHYS+4(R7)
                                     00FB   539 					; global page count
         30 A7         1C AA     D0  00FB   540 	MOVL	PCB$L_OWNER(R10),FORM_L_OWNER(R7)
                                     0100   541 					; owner pid, if any
                                 05  0100   542 	RSB
                                     0101   543 
                                     0101   544 ;
                                     0101   545 ; subroutine to copy PHD information from locked data area into scratch area
                                     0101   546 ;
                                     0101   547 
                                     0101   548 COPY_PHD:
         18 A7       0000'CF     D0  0101   549 	MOVL	W^TMP_L_DIOCNT,FORM_L_DIOCNT(R7)
                                     0107   550 					; direct i/o count
         1C A7       0008'CF     D0  0107   551 	MOVL	W^TMP_L_CPUTIM,FORM_L_CPUTIM(R7)
                                     010D   552 					; elapsed CPU time
         20 A7       0004'CF     D0  010D   553 	MOVL	W^TMP_L_PAGEFLTS,FORM_L_PFLTS(R7)
                                     0113   554 					; page faults
         2C A7       000C'CF     D0  0113   555 	MOVL	W^TMP_L_STS,FORM_L_STS(R7); process status
                                 05  0119   556 	RSB
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page  14
X0101           SYS_FORMAT - format and print information                                                                        (6)

                                     011A   558 	.SBTTL	SYS_FORMAT	- format and print information
                                     011A   559 ;++
                                     011A   560 ; FUNCTIONAL DESCRIPTION:
                                     011A   561 ;
                                     011A   562 ;	This routine scans the previously copied process information,
                                     011A   563 ;	formats it and prints it on SYS$OUTPUT:
                                     011A   564 ;
                                     011A   565 ;
                                     011A   566 ; CALLING SEQUENCE:
                                     011A   567 ;
                                     011A   568 ;	CALLS
                                     011A   569 ;
                                     011A   570 ; INPUT PARAMETERS:
                                     011A   571 ;
                                     011A   572 ;	NONE
                                     011A   573 ;
                                     011A   574 ; IMPLICIT INPUTS:
                                     011A   575 ;
                                     011A   576 ;	Process information previously copied into the scratch area
                                     011A   577 ;
                                     011A   578 ; OUTPUT PARAMETERS:
                                     011A   579 ;
                                     011A   580 ;	NONE
                                     011A   581 ;
                                     011A   582 ; IMPLICIT OUTPUTS:
                                     011A   583 ;
                                     011A   584 ;	NONE
                                     011A   585 ;
                                     011A   586 ; COMPLETION CODES:
                                     011A   587 ;
                                     011A   588 ;	R0 =	SS$_NORMAL
                                     011A   589 ;
                                     011A   590 ; SIDE EFFECTS:
                                     011A   591 ;
                                     011A   592 ;	NONE
                                     011A   593 ;
                                     011A   594 ; REGISTER USAGE:
                                     011A   595 ;
                                     011A   596 ;	R1,R2,R5 =	scratch
                                     011A   597 ;	R7 =		current pointer to scratch area
                                     011A   598 ;	R9 =		process status
                                     011A   599 ;
                                     011A   600 ;--
                                     011A   601 
                                 0000011A   602 	.PSECT	SHOW$CODE	BYTE,RD,NOWRT,EXE
                                     011A   603 
                                     011A   604 SYS_FORMAT:
                               0224  011A   605 	.WORD	^M<R2,R5,R9>
                                     011C   606 
                                     011C   607 ;
                                     011C   608 ; initialize
                                     011C   609 ;
                                     011C   610 
            57       0039'CF     D0  011C   611 	MOVL	W^SYS_Q_SCRATCH,R7	; start of scratch area
                 00000000'8F     DD  0121   612 	PUSHL	#SHOW$_SYSTTL		; message id for title
                     0038'CF     DF  0127   613 	PUSHAL	W^SYS_T_DATE		; system time and date
       0000'CF            02     FB  012B   614 	CALLS	#2,W^SHOW$PRINT_MSG	; print the title
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page  15
X0101           SYS_FORMAT - format and print information                                                                        (6)

                                     0130   615 
                                     0130   616 ;
                                     0130   617 ; scan copied information
                                     0130   618 ;
                                     0130   619 10$:
                          67     D5  0130   620 	TSTL	FORM_L_PID(R7)		; last entry ?
                          0C     19  0132   621 	BLSS	90$			; branch if no more
                          000F   30  0134   622 	BSBW	W^PRINT_PROC		; format and print information
            57   00000048 8F     C0  0137   623 	ADDL2	#FORM_K_LENGTH,R7	; skip to next entry
                          F0     11  013E   624 	BRB	10$			;
                                     0140   625 
                                     0140   626 ;
                                     0140   627 ; exit
                                     0140   628 ;
                                     0140   629 
                                     0140   630 90$:
            50       0000'8F     3C  0140   631 	MOVZWL	#SS$_NORMAL,R0		; signal success
                                 04  0145   632 	RET
                                     0146   633 
                                     0146   634 ;
                                     0146   635 ; subroutine to format and print information
                                     0146   636 ;
                                     0146   637 
                                     0146   638 PRINT_PROC:
                                     0146   639 
                                     0146   640 ;
                                     0146   641 ; rearrange data and perform some arithmetic
                                     0146   642 ;
                                     0146   643 
         04 A7         38 A7     DE  0146   644 	MOVAL	FORM_T_LNAME(R7),FORM_L_LNAME(R7)
                                     014B   645 					; insert pointer to counted string
         1C A7   000186A0 8F     7A  014B   646 	EMUL	#100000,FORM_L_CPUTIM(R7),#0,W^SYS_Q_CPUTIM
       0041'CF            00         0153       
                                     0157   647 					; compute CPU time in system time format
         1C A7       0041'CF     DE  0157   648 	MOVAL	W^SYS_Q_CPUTIM,FORM_L_CPUTIM(R7)
                                     015D   649 					; insert pointer to counted scring
            1F         14 A7     C3  015D   650 	SUBL3	FORM_L_PRI(R7),#31,FORM_L_PRI(R7)
                       14 A7         0161       
                                     0163   651 					; complement priority
         24 A7         28 A7     C0  0163   652 	ADDL2	FORM_Q_PHYS+4(R7),FORM_Q_PHYS(R7)
                                     0168   653 					; compute physical memory occupied
            59         2C A7     D0  0168   654 	MOVL	FORM_L_STS(R7),R9	; save status
         2C A7       0043'CF     DE  016C   655 	MOVAL	W^NULL_T_STRING,FORM_L_STS(R7)
                                     0172   656 					; assume not batch
            59            0E     E1  0172   657 	BBC	#PCB$V_BATCH,R9,20$	; is it a batch job ?
                          06         0175       
         2C A7       003C'CF     DE  0176   658 	MOVAL	W^SYS_T_BATCH,FORM_L_STS(R7)
                                     017C   659 					; insert pointer to string
                                     017C   660 20$:
                       30 A7     D5  017C   661 	TSTL	FORM_L_OWNER(R7)	; test owner pid
                          08     13  017F   662 	BEQLU	30$			; branch if owner non zero
         30 A7       003F'CF     DE  0181   663 	MOVAL	W^SYS_T_SUBPROC,FORM_L_OWNER(R7)
                                     0187   664 					; it is a subprocess
                          06     11  0187   665 	BRB	40$
                                     0189   666 30$:
         30 A7       0043'CF     DE  0189   667 	MOVAL	W^NULL_T_STRING,FORM_L_OWNER(R7)
                                     018F   668 40$:
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page  16
X0101           SYS_FORMAT - format and print information                                                                        (6)

         34 A7       0043'CF     DE  018F   669 	MOVAL	W^NULL_T_STRING,FORM_L_NETWRK(R7)
                                     0195   670 					; assume not a network process
            59            15     E1  0195   671 	BBC	#PCB$V_NETWRK,R9,45$	; branch if not a network process
                          06         0198       
         34 A7       0041'CF     DE  0199   672 	MOVAL	W^SYS_T_NETWRK,FORM_L_NETWRK(R7)
                                     019F   673 					; else insert pointer to network indicator
                                     019F   674 45$:
            55         10 A7     D0  019F   675 	MOVL	FORM_L_STATE(R7),R5	; get process state
                          51     D4  01A3   676 	CLRL	R1			; index into state table
         10 A7       0043'CF     DE  01A5   677 	MOVAL	W^NULL_T_STRING,FORM_L_STATE(R7)
                                     01AB   678 					; in case unknow state
                                     01AB   679 50$:
            52       0000'CF41   D0  01AB   680 	MOVL	W^SYS_STATE[R1],R2	; get state table entry
            55            52     B1  01B1   681 	CMPW	R2,R5			; compare with current state
                          06     12  01B4   682 	BNEQU	60$			; not the one
            52         F0 8F     78  01B6   683 	ASHL	#-16,R2,FORM_L_STATE(R7); insert pointer to proper string
                       10 A7         01BA       
                                     01BC   684 60$:
            51            0E     F3  01BC   685 	AOBLEQ	#MAX_STATES,R1,50$	;
                          EB         01BF       
                                     01C0   686 
                                     01C0   687 ;
                                     01C0   688 ; print information
                                     01C0   689 ;
                                     01C0   690 
            08            59     E9  01C0   691 	BLBC	R9,70$			; test for residency
                 00000000'8F     DD  01C3   692 	PUSHL	#SHOW$_SYSPRES		; process was resident
                          06     11  01C9   693 	BRB	80$
                                     01CB   694 70$:
                 00000000'8F     DD  01CB   695 	PUSHL	#SHOW$_SYSPNRS		; process was non resident
                                     01D1   696 80$:
                          67     DF  01D1   697 	PUSHAL	FORM_PROCINFO(R7)	; parameter list
       0000'CF            02     FB  01D3   698 	CALLS	#2,W^SHOW$PRINT_MSG	; print line
                                 05  01D8   699 	RSB
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page  17
X0101           GET_PHD  - copy PHD information                                                                                  (7)

                                     01D9   701 	.SBTTL	GET_PHD		- copy PHD information
                                     01D9   702 
                                     01D9   703 ;++
                                     01D9   704 ; FUNCTIONAL DESCRIPTION:
                                     01D9   705 ;
                                     01D9   706 ;	copies PHD information into temporary storage
                                     01D9   707 ;
                                     01D9   708 ;
                                     01D9   709 ; CALLING SEQUENCE:
                                     01D9   710 ;
                                     01D9   711 ;	CALLS
                                     01D9   712 ;
                                     01D9   713 ; INPUT PARAMETERS:
                                     01D9   714 ;
                                     01D9   715 ;	4(AP)	= address of PCB
                                     01D9   716 ;
                                     01D9   717 ; IMPLICIT INPUTS:
                                     01D9   718 ;
                                     01D9   719 ;	NONE
                                     01D9   720 ;
                                     01D9   721 ; OUTPUT PARAMETERS:
                                     01D9   722 ;
                                     01D9   723 ;	NONE
                                     01D9   724 ;
                                     01D9   725 ; IMPLICIT OUTPUTS:
                                     01D9   726 ;
                                     01D9   727 ;	PHD information about the given process is copied into a temporary
                                     01D9   728 ;	area.
                                     01D9   729 ;
                                     01D9   730 ; COMPLETION CODES:
                                     01D9   731 ;
                                     01D9   732 ;	R0 =	SS$_NORMAL
                                     01D9   733 ;
                                     01D9   734 ; SIDE EFFECTS:
                                     01D9   735 ;
                                     01D9   736 ;	This routine temporarily raises IPL to SYNCH.
                                     01D9   737 ;	Therefore, its code as well as the data area it is copying to
                                     01D9   738 ;	have to be locked in the working set before being called
                                     01D9   739 ;	THIS CODE HAS TO FIT ON ONE PAGE !!
                                     01D9   740 ;
                                     01D9   741 ;--
                                     01D9   742 
                                 00000000   743 	.PSECT	SHOW$AAAACODE	PAGE,RD,NOWRT,EXE
                                     0000   744 
                                     0000   745 GET_PHD:
                               0004  0000   746 	.WORD	^M<R2>
                                     0002   747 
            51         04 AC     D0  0002   748 	MOVL	4(AP),R1		; get PCB address
            1D         28 A1     E9  0006   749 	BLBC	PCB$L_STS(R1),20$	; process not resident anyway
                                     000A   750 ;%%%
                                     000A   751 	SETIPL	#IPL$_SYNCH		; disable interrupts
            16         28 A1     E9  000D   752 	BLBC	PCB$L_STS(R1),20$	; check again for residency
            52         64 A1     D0  0011   753 	MOVL	PCB$L_PHD(R1),R2	; get pointer to PHD
       0000'CF         50 A2     D0  0015   754 	MOVL	PHD$L_DIOCNT(R2),W^TMP_L_DIOCNT
                                     001B   755 					; direct i/o count
       0004'CF         4C A2     D0  001B   756 	MOVL	PHD$L_PAGEFLTS(R2),W^TMP_L_PAGEFLTS
                                     0021   757 					; page faults
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page  18
X0101           GET_PHD  - copy PHD information                                                                                  (7)

       0008'CF         3C A2     D0  0021   758 	MOVL	PHD$L_CPUTIM(R2),W^TMP_L_CPUTIM
                                     0027   759 					; elapsed CPU time
                                     0027   760 20$:
       000C'CF         28 A1     D0  0027   761 	MOVL	PCB$L_STS(R1),W^TMP_L_STS; copy status while in SYNCH
                                     002D   762 ;%%%
                                     002D   763 	SETIPL	#0			; drop IPL
                                 04  0030   764 	RET
                                     0031   765 	.END
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page  19
SYMBOL TABLE                                                                                                                     (7)

$CLI.          = 0000001C R     03   CLI$K_UTILOPR  = 00000000            CLI$V_QDUSRV   = 00000001            
$CLI..         = 00000034 R     03   CLI$K_VALCONV  = 00000004            CLI$V_QUALEXP  = 00000001            
BIT...         = 00000045            CLI$K_WORKAREA   00000080            CLI$V_QUALTRU  = 00000000            
CLI$A_ABSACT     00000014            CLI$L_CLIFLAG    00000018            CLI$V_SUBTYP   = 00000000            
CLI$A_ERRACT     00000004            CLI$L_INIARGCNT  00000000            CLI$V_TRMVRBLV = 00000008            
CLI$A_FLSACT     00000010            CLI$L_LINKFLAG   00000014            CLI$V_VERIFY   = 00000002            
CLI$A_IMGFILED   00000010            CLI$L_RQVALU     0000000C            CLI$V_VFYINP   = 00000005            
CLI$A_IMGHDADR   0000000C            CLI$L_USRVAL     00000014            CLI$W_QDVALSIZ   00000004            
CLI$A_PROGXFER   00000004            CLI$L_WORKAREA   00000000            CLI$W_RQSIZE     00000008            
CLI$A_PRSACT     00000010            CLI$M_ABSADR   = 00000002            CLI$W_SERVCOD    00000001            
CLI$A_QDVALADR   00000008            CLI$M_ALLOCCUR = 00000001            COPY_PCB         000000D3 R     07   
CLI$A_QUALST     00000018            CLI$M_BATCH    = 00000008            COPY_PHD         00000101 R     07   
CLI$A_RQADDR     0000000C            CLI$M_CONCATINP= 00000002            COPY_PROC        00000056 R     07   
CLI$A_TRUACT     0000000C            CLI$M_DBGEXCP  = 00010000            FORM_K_LENGTH    00000048            
CLI$A_UTILSERV   00000008            CLI$M_DBGTRU   = 00000002            FORM_L_CPUTIM    0000001C            
CLI$B_BITNUM     00000001            CLI$M_DEBUG    = 00000001            FORM_L_DIOCNT    00000018            
CLI$B_QDBLKSIZ   00000000            CLI$M_DUMMY    = 00000002            FORM_L_GRP       00000008            
CLI$B_QDCODE     00000001            CLI$M_EXPNAM   = 00000004            FORM_L_LNAME     00000004            
CLI$B_QDFLGS     00000002            CLI$M_INDIRECT = 00000010            FORM_L_MEM       0000000C            
CLI$B_QDSTAT     00000003            CLI$M_KEYVALU  = 00000002            FORM_L_NETWRK    00000034            
CLI$B_RQFLGS     00000002            CLI$M_LASTVAL  = 00000001            FORM_L_OWNER     00000030            
CLI$B_RQINDX     00000001            CLI$M_MOREINP  = 00000004            FORM_L_PFLTS     00000020            
CLI$B_RQSTAT     00000003            CLI$M_MOREVALS = 00000001            FORM_L_PID       00000000            
CLI$B_RQTYPE     00000000            CLI$M_PARMDEF  = 00000008            FORM_L_PRI       00000014            
CLI$C_QDBITS     00000014            CLI$M_PARMPRS  = 00000001            FORM_L_STATE     00000010            
CLI$C_QUALDEF    00000014            CLI$M_PARMREQ  = 00000001            FORM_L_STS       0000002C            
CLI$C_REQDESC    0000001C            CLI$M_QDEXPA   = 00000004            FORM_PROCINFO    00000000            
CLI$C_WORKAREA   00000080            CLI$M_QDUSRV   = 00000002            FORM_Q_PHYS      00000024            
CLI$K_ASCIIVAL = 00000041            CLI$M_QUALEXP  = 00000002            FORM_T_LNAME     00000038            
CLI$K_CLISERV  = 00000005            CLI$M_QUALTRU  = 00000001            GBL...         = 00000000            
CLI$K_ENDPRM1  = 00000030            CLI$M_TRMVRBLV = 00000300            GET_PHD          00000000 R     08   
CLI$K_ENDPRM2  = 00000031            CLI$M_VERIFY   = 00000004            IPL$_ASTDEL    = 00000002            
CLI$K_ENDPRM3  = 00000032            CLI$M_VFYINP   = 00000020            IPL$_HWCLK     = 00000018            
CLI$K_ENDPRM4  = 00000033            CLI$Q_QDVALDESC  00000004            IPL$_IOPOST    = 00000004            
CLI$K_FILSPEC  = 00000044            CLI$Q_RQDESC     00000008            IPL$_MAILBOX   = 0000000B            
CLI$K_GETCMD   = 00000001            CLI$S_PRITYP   = 00000004            IPL$_POWER     = 0000001F            
CLI$K_GETOPT   = 00000003            CLI$S_SUBTYP   = 00000004            IPL$_QUEUEAST  = 00000006            
CLI$K_GETQUAL  = 00000002            CLI$S_TRMVRBLV = 00000002            IPL$_SCHED     = 00000003            
CLI$K_INITPRS  = 00000000            CLI$V_ABSADR   = 00000001            IPL$_SYNCH     = 00000007            
CLI$K_INPSPEC  = 00000001            CLI$V_ALLOCCUR = 00000000            IPL$_TIMER     = 00000007            
CLI$K_INPUT1   = 00000010            CLI$V_BATCH    = 00000003            LOCK_DATA_END    00000010 R     06   
CLI$K_INPUT2   = 00000011            CLI$V_CONCATINP= 00000001            LOCK_DATA_START  00000000 R     06   
CLI$K_INPUT3   = 00000012            CLI$V_DBGEXCP  = 00000010            LOCK_Q_DATA      00000042 R     05   
CLI$K_INPUT4   = 00000013            CLI$V_DBGTRU   = 00000001            MAX_STATES     = 0000000E            
CLI$K_KEYVAL   = 00000043            CLI$V_DEBUG    = 00000000            NULL_T_STRING    00000043 R     04   
CLI$K_KEYWORD  = 00000042            CLI$V_DUMMY    = 00000001            PCB$B_ASTACT     0000000C            
CLI$K_NUMERVAL = 00000040            CLI$V_EXPNAM   = 00000002            PCB$B_ASTEN      0000000D            
CLI$K_OUTPUT1  = 00000020            CLI$V_INDIRECT = 00000004            PCB$B_PRI        0000000B            
CLI$K_OUTPUT2  = 00000021            CLI$V_KEYVALU  = 00000001            PCB$B_PRIB       00000033            
CLI$K_OUTPUT3  = 00000022            CLI$V_LASTVAL  = 00000000            PCB$B_TYPE       0000000A            
CLI$K_OUTPUT4  = 00000023            CLI$V_MOREINP  = 00000002            PCB$B_WEFC       00000032            
CLI$K_OUTSPEC  = 00000002            CLI$V_MOREVALS = 00000000            PCB$C_LENGTH     0000007C            
CLI$K_PARDONE  = 00000003            CLI$V_PARMDEF  = 00000003            PCB$K_LENGTH     0000007C            
CLI$K_QDBITS     00000014            CLI$V_PARMPRS  = 00000000            PCB$L_ASTQBL     00000014            
CLI$K_QUALDEF    00000014            CLI$V_PARMREQ  = 00000000            PCB$L_ASTQFL     00000010            
CLI$K_REQDESC    0000001C            CLI$V_PRITYP   = 00000004            PCB$L_EFC2P      00000058            
CLI$K_SHSS_PROC  ********   X   03   CLI$V_QDEXPA   = 00000002            PCB$L_EFC3P      0000005C            
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page  20
SYMBOL TABLE                                                                                                                     (7)

PCB$L_EFCS       00000050            PCB$W_TMBU       00000036            PHD$V_ASTLVL   = 00000018            
PCB$L_EFCU       00000054            PCB$W_TQCNT      0000004A            PHD$V_DALCSTX  = 00000001            
PCB$L_EFWM       0000004C            PCB_ARGLIS       00000049 R     03   PHD$V_P0LR     = 00000000            
PCB$L_OWNER      0000001C            PHD$B_ASTLVL     000000CF            PHD$V_PFMFLG   = 00000000            
PCB$L_PHD        00000064            PHD$B_DFPFC      00000038            PHD$V_WSPEAKCHK= 00000002            
PCB$L_PHYPCB     00000018            PHD$B_PAGFIL     0000001F            PHD$W_ASTLM      00000044            
PCB$L_PID        00000060            PHD$B_PGTBPFC    00000039            PHD$W_BAK        00000048            
PCB$L_PQB        0000004C            PHD$C_LENGTH     00000118            PHD$W_DFWSCNT    0000001A            
PCB$L_SQBL       00000004            PHD$C_PHDPAGCTX= 00000008            PHD$W_EMPTPG     000000D8            
PCB$L_SQFL       00000000            PHD$K_LENGTH     00000118            PHD$W_EXTDYNWS   00000076            
PCB$L_STS        00000028            PHD$L_BIOCNT     00000054            PHD$W_FILLM      00000060            
PCB$L_UIC        00000020            PHD$L_CPULIM     00000058            PHD$W_FLAGS      0000003A            
PCB$L_WSSWP      00000024            PHD$L_CPUTIM     0000003C            PHD$W_PHVINDEX   00000046            
PCB$L_WTIME      0000002C            PHD$L_DIOCNT     00000050            PHD$W_PRCLM      00000042            
PCB$S_LNAME    = 00000010            PHD$L_ESP        0000007C            PHD$W_PST        00000020            
PCB$T_LNAME      0000006C            PHD$L_FREP0VA    00000028            PHD$W_PSTBASMAX  0000004A            
PCB$V_ASTPEN   = 00000011            PHD$L_FREP1VA    00000030            PHD$W_PSTFREE    00000026            
PCB$V_BATCH    = 0000000E            PHD$L_FREPTECNT  0000002C            PHD$W_PSTLAST    00000024            
PCB$V_DELPEN   = 00000001            PHD$L_KSP        00000078            PHD$W_PTCNTACT   00000070            
PCB$V_FORCPEN  = 00000002            PHD$L_P0BR       000000C8            PHD$W_PTCNTLCK   0000006C            
PCB$V_HIBER    = 00000013            PHD$L_P0LRASTL   000000CC            PHD$W_PTCNTMAX   00000072            
PCB$V_INQUAN   = 00000003            PHD$L_P1BR       000000D0            PHD$W_PTCNTVAL   0000006E            
PCB$V_LOGIN    = 00000014            PHD$L_P1LR       000000D4            PHD$W_QUANT      00000040            
PCB$V_NETWRK   = 00000015            PHD$L_PAGEFLTS   0000004C            PHD$W_TQLM       00000062            
PCB$V_NOACNT   = 0000000F            PHD$L_PAGFIL     0000001C            PHD$W_WSAUTH     0000000A            
PCB$V_NODELET  = 00000017            PHD$L_PC         000000C0            PHD$W_WSDYN      0000000E            
PCB$V_PHDRES   = 00000012            PHD$L_PCB        00000078            PHD$W_WSFLUID    00000074            
PCB$V_PSWAPM   = 00000004            PHD$L_PGFLCNT    00000034            PHD$W_WSLAST     00000012            
PCB$V_PWRAST   = 00000016            PHD$L_PGFLQUOTA  0000005C            PHD$W_WSLIST     00000008            
PCB$V_RES      = 00000000            PHD$L_PSL        000000C4            PHD$W_WSLOCK     0000000C            
PCB$V_RESPEN   = 00000005            PHD$L_PSTBASOFF  00000020            PHD$W_WSLX       0000004A            
PCB$V_SSFEXC   = 00000006            PHD$L_PTWSLELCK  00000064            PHD$W_WSNEXT     00000010            
PCB$V_SSFEXCE  = 00000007            PHD$L_PTWSLEVAL  00000068            PHD$W_WSQUOTA    00000018            
PCB$V_SSFEXCS  = 00000008            PHD$L_R0         00000088            PR$_ACCR       = 00000029            
PCB$V_SSFEXCU  = 00000009            PHD$L_R1         0000008C            PR$_ACCS       = 00000028            
PCB$V_SSRWAIT  = 0000000A            PHD$L_R10        000000B0            PR$_ASTLVL     = 00000013            
PCB$V_SUSPEN   = 0000000B            PHD$L_R11        000000B4            PR$_ESP        = 00000001            
PCB$V_SWPVBN   = 00000010            PHD$L_R12        000000B8            PR$_ICCS       = 00000018            
PCB$V_WAKEPEN  = 0000000C            PHD$L_R13        000000BC            PR$_ICR        = 0000001A            
PCB$V_WALL     = 0000000D            PHD$L_R2         00000090            PR$_IPL        = 00000012            
PCB$W_APTCNT     00000034            PHD$L_R3         00000094            PR$_ISP        = 00000004            
PCB$W_ASTCNT     0000003C            PHD$L_R4         00000098            PR$_KSP        = 00000000            
PCB$W_BIOCNT     0000003E            PHD$L_R5         0000009C            PR$_MAPEN      = 00000038            
PCB$W_BIOLM      00000040            PHD$L_R6         000000A0            PR$_NICR       = 00000019            
PCB$W_BYTCNT     00000042            PHD$L_R7         000000A4            PR$_P0BR       = 00000008            
PCB$W_BYTLM      00000068            PHD$L_R8         000000A8            PR$_P0LR       = 00000009            
PCB$W_DIOCNT     00000044            PHD$L_R9         000000AC            PR$_P1BR       = 0000000A            
PCB$W_DIOLM      00000046            PHD$L_REFERFLT   00000014            PR$_P1LR       = 0000000B            
PCB$W_FILCNT     00000048            PHD$L_SSP        00000080            PR$_PCBB       = 00000010            
PCB$W_GPGCNT     00000038            PHD$L_USP        00000084            PR$_PME        = 0000003D            
PCB$W_GRP        00000022            PHD$L_WSL        00000118            PR$_RXCS       = 00000020            
PCB$W_MEM        00000020            PHD$M_DALCSTX  = 00000002            PR$_RXDB       = 00000021            
PCB$W_MTXCNT     0000000E            PHD$M_PFMFLG   = 00000001            PR$_SBIER      = 00000034            
PCB$W_PPGCNT     0000003A            PHD$M_WSPEAKCHK= 00000004            PR$_SBIFS      = 00000030            
PCB$W_PRCCNT     0000006A            PHD$Q_PRIVMSK    00000000            PR$_SBIMT      = 00000033            
PCB$W_SIZE       00000008            PHD$S_ASTLVL   = 00000008            PR$_SBIQC      = 00000036            
PCB$W_STATE      00000030            PHD$S_P0LR     = 00000018            PR$_SBIS       = 00000031            
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page  21
SYMBOL TABLE                                                                                                                     (7)

PR$_SBISC      = 00000032            SHR$_BADJOBNAME= 00001178            SHR$_TEXT      = 00001130            
PR$_SBITA      = 00000035            SHR$_BADKEY    = 00001108            SHR$_UNXPCTSTS = 000011D0            
PR$_SBR        = 0000000C            SHR$_BADLOGIC  = 00001120            SHR$_VALERR    = 000011E8            
PR$_SCBB       = 00000011            SHR$_BADLOGICPC= 00001150            SHR$_WILDCONCAT= 000010C0            
PR$_SID        = 0000003E            SHR$_BADLONG   = 00001020            SHR$_WILDOUTVER= 000010C8            
PR$_SIRR       = 00000014            SHR$_BADPRTY   = 00001180            SHR$_WRITEERR  = 000010D0            
PR$_SISR       = 00000015            SHR$_BADQNAME  = 00001188            SS$_NORMAL       ********   X   07   
PR$_SLR        = 0000000D            SHR$_BADTIME   = 00001190            STS$K_ERROR    = 00000002            
PR$_SSP        = 00000002            SHR$_BADVALUE  = 00001110            STS$K_INFO     = 00000003            
PR$_TBIA       = 00000039            SHR$_BADWORD   = 00001028            STS$K_SEVERE   = 00000004            
PR$_TBIS       = 0000003A            SHR$_BEGIN     = 00001030            STS$K_SUCCESS  = 00000001            
PR$_TODR       = 0000001B            SHR$_BEGIND    = 00001038            STS$K_WARNING  = 00000000            
PR$_TXCS       = 00000022            SHR$_BEGINT    = 00001040            STS$M_CODE     = 00007FF8            
PR$_TXDB       = 00000023            SHR$_CLICB     = 00001048            STS$M_COND_ID  = 0FFFFFF8            
PR$_USP        = 00000003            SHR$_CLOSEDEL  = 00001218            STS$M_CONTROL  = F0000000            
PR$_WCSA       = 0000002C            SHR$_CLOSEIN   = 00001050            STS$M_CUST_DEF = 08000000            
PR$_WCSD       = 0000002D            SHR$_CLOSEOUT  = 00001058            STS$M_FAC_NO   = 0FFF0000            
PRINT_PROC       00000146 R     07   SHR$_CONFDEL   = 000011F8            STS$M_FAC_SP   = 00008000            
PROGRAM_REGION = 00000000            SHR$_COPIEDB   = 00001060            STS$M_INHIB_MSG= 10000000            
SCH$C_CEF      = 00000003            SHR$_COPIEDR   = 00001068            STS$M_MSG_NO   = 0000FFF8            
SCH$C_COLPG    = 00000001            SHR$_CREATED   = 00001070            STS$M_SEVERITY = 00000007            
SCH$C_COM      = 0000000C            SHR$_DELETED   = 00001200            STS$M_SUCCESS  = 00000001            
SCH$C_COMO     = 0000000D            SHR$_DELINTERR = 00001240            STS$S_CODE     = 0000000C            
SCH$C_CUR      = 0000000E            SHR$_DELVER    = 00001208            STS$S_COND_ID  = 00000019            
SCH$C_FPG      = 0000000B            SHR$_DIRTOOBUS = 00001220            STS$S_CONTROL  = 00000004            
SCH$C_HIB      = 00000007            SHR$_ENDED     = 00001078            STS$S_CUST_DEF = 00000001            
SCH$C_HIBO     = 00000008            SHR$_ENDEDD    = 00001080            STS$S_FAC_NO   = 0000000C            
SCH$C_LEF      = 00000005            SHR$_ENDEDT    = 00001088            STS$S_FAC_SP   = 00000001            
SCH$C_LEFO     = 00000006            SHR$_FILNOTDEL = 000011F0            STS$S_INHIB_MSG= 00000001            
SCH$C_MWAIT    = 00000002            SHR$_FILNOTPUR = 00001230            STS$S_MSG_NO   = 0000000D            
SCH$C_PFW      = 00000004            SHR$_FILPURGED = 00001250            STS$S_SEVERITY = 00000003            
SCH$C_SUSP     = 00000009            SHR$_HASHCONCAT= 000011D8            STS$S_SUCCESS  = 00000001            
SCH$C_SUSPO    = 0000000A            SHR$_HIGHVER   = 00001148            STS$V_CODE     = 00000003            
SCH$GL_MAXPIX    ********   X   07   SHR$_IDXCONCAT = 00001138            STS$V_COND_ID  = 00000003            
SCH$GL_PCBVEC    ********   X   07   SHR$_INCOMPAT  = 000011E0            STS$V_CONTROL  = 0000001C            
SCRATCH_PAGES  = 00000040            SHR$_NEWFILES  = 00001090            STS$V_CUST_DEF = 0000001B            
SHOW$A_CLIWORK   ********   X   07   SHR$_NOFILPURG = 00001228            STS$V_FAC_NO   = 00000010            
SHOW$L_STATUS    ********   X   07   SHR$_NOJOBID   = 000011A0            STS$V_FAC_SP   = 0000000F            
SHOW$PRINT_MSG   ********   X   07   SHR$_NOJOBNAME = 000011A8            STS$V_INHIB_MSG= 0000001C            
SHOW$SYSTEM      00000000 RG    07   SHR$_NOQUEUE   = 00001198            STS$V_MSG_NO   = 00000003            
SHOW$_BADLOGIC = 00781122            SHR$_NOTCMPLT  = 000011C0            STS$V_SEVERITY = 00000000            
SHOW$_SYSPNRS    ********   X   07   SHR$_NOTCOPIED = 000011B8            STS$V_SUCCESS  = 00000000            
SHOW$_SYSPRES    ********   X   07   SHR$_NOVALUE   = 00001100            SYS$CMKRNL       ********   X   07   
SHOW$_SYSTTL     ********   X   07   SHR$_NOWILD    = 00001128            SYS$EXPREG       ********   X   07   
SHR$K_SHRDEF   = 00000001            SHR$_OPENIN    = 00001098            SYS$LKWSET       ********   X   07   
SHR$_ABEND     = 000010D8            SHR$_OPENOUT   = 000010A0            SYS_A_GETQUAL    00000000 R     03   
SHR$_ABENDD    = 000010E0            SHR$_OVERLAY   = 000010A8            SYS_A_QUALST     0000001C R     03   
SHR$_ABENDT    = 000010E8            SHR$_PARSEFAIL = 00001248            SYS_FORMAT       0000011A R     07   
SHR$_APPENDEDB = 00001000            SHR$_PURGEVER  = 00001210            SYS_L_BITLIS     00000035 R     03   
SHR$_APPENDEDR = 00001008            SHR$_READERR   = 000010B0            SYS_M_PROC     = 00000001            
SHR$_ATPC      = 00001158            SHR$_RELCONCAT = 00001140            SYS_PROC_PRES    00000039 R     07   
SHR$_BADBYTE   = 00001010            SHR$_REPLACED  = 000010B8            SYS_Q_CPUTIM     00000041 R     03   
SHR$_BADCOPIES = 00001160            SHR$_RMSERROR  = 000011C8            SYS_Q_SCRATCH    00000039 R     03   
SHR$_BADDELIM  = 00001118            SHR$_SEARCHFAIL= 00001238            SYS_STATE        00000000 R     04   
SHR$_BADFIELD  = 00001018            SHR$_SYNTAX    = 000010F8            SYS_T_BATCH      0000003C R     04   
SHR$_BADFORM   = 00001168            SHR$_SYSERROR  = 000011B0            SYS_T_CEF        0000000C R     05   
SHR$_BADJOBID  = 00001170            SHR$_SYSERRORPC= 000010F0            SYS_T_COLPG      00000000 R     05   
SHOW$SYSTEM                                                      21-AUG-1978 19:23:35   VAX-11 MACRO X0.3-11               Page  22
SYMBOL TABLE                                                                                                                     (7)

SYS_T_COM        00000035 R     05   
SYS_T_COMO       00000039 R     05   
SYS_T_CUR        0000003E R     05   
SYS_T_DATE       00000038 R     04   
SYS_T_FPG        00000031 R     05   
SYS_T_HIB        0000001D R     05   
SYS_T_HIBO       00000021 R     05   
SYS_T_LEF        00000014 R     05   
SYS_T_LEFO       00000018 R     05   
SYS_T_MWAIT      00000006 R     05   
SYS_T_NETWRK     00000041 R     04   
SYS_T_PFW        00000010 R     05   
SYS_T_SUBPROC    0000003F R     04   
SYS_T_SUSP       00000026 R     05   
SYS_T_SUSPO      0000002B R     05   
SYS_V_PROC     = 00000000            
TMP_L_CPUTIM     00000008 R     06   
TMP_L_DIOCNT     00000000 R     06   
TMP_L_PAGEFLTS   00000004 R     06   
TMP_L_STS        0000000C R     06   
USER_MODE      = 00000003            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            0000011C      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
SHOW$RWDATA      00000051      03     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD    WRT LONG  
SHOW$STATE_TBL   00000047      04     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD  NOWRT LONG  
SHOW$MSG_TXT     0000004A      05     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD  NOWRT LONG  
SHOW$AAAADATA    00000010      06     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD    WRT PAGE  
SHOW$CODE        000001D9      07     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  
SHOW$AAAACODE    00000031      08     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT PAGE  


THERE WERE NO ERRORS OR WARNINGS.
9372. BYTES LEFT IN FREE MEMORY POOL.
1162. BYTES OF RECLAIMED MEMORY.
OBJ$:SHOSYSTEM,LIS$:SHOSYSTEM/-SP=EXECML$/ML,LIB$:CLIUTL/ML,SRC$:SHOSYSTEM
50 MLB DIR RDS - 890 GETS TO DEFINE 30 MACROS. 63 INTER. FILE WRITES. 
