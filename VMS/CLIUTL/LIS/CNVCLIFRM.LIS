CNVCLIFRM       - CONVERT COMMAND INPUT FORMS TYPE               21-AUG-1978 18:56:24   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      39  DECLARATIONS
   (3)      75  CONVERT CLI FORMS
CNVCLIFRM       - CONVERT COMMAND INPUT FORMS TYPE               21-AUG-1978 18:56:24   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	CNVCLIFRM - CONVERT COMMAND INPUT FORMS TYPE
                                     0000     2 	.IDENT	/01/
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ;			  COPYRIGHT (c) 1978 BY
                                     0000     6 ;	      DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
                                     0000     9 ; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
                                     0000    10 ; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
                                     0000    11 ; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
                                     0000    12 ; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
                                     0000    13 ; TRANSFERRED.
                                     0000    14 ;
                                     0000    15 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
                                     0000    16 ; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
                                     0000    17 ; CORPORATION.
                                     0000    18 ;
                                     0000    19 ; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
                                     0000    20 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
                                     0000    21 ;
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY:	CLI UTILITIES
                                     0000    25 ;
                                     0000    26 ; ABSTRACT:	THIS ROUTINE CONVERTS A FORMS TYPE INTO A BINARY VALUE.
                                     0000    27 ;
                                     0000    28 ;
                                     0000    29 ; ENVIRONMENT:	NATIVE MODE, NON-PRIVILEGED
                                     0000    30 ;
                                     0000    31 ; AUTHOR:  STEVE BECKHARDT,  CREATION DATE:  13-FEB-78
                                     0000    32 ;
                                     0000    33 ; MODIFIED BY:
                                     0000    34 ;
                                     0000    35 ;	, : VERSION
                                     0000    36 ; 01	- 
                                     0000    37 ;--
CNVCLIFRM       - CONVERT COMMAND INPUT FORMS TYPE               21-AUG-1978 18:56:24   VAX-11 MACRO X0.3-11               Page   2
01              DECLARATIONS                                                                                                     (2)

                                     0000    39 	.SBTTL	DECLARATIONS
                                     0000    40 ;
                                     0000    41 ; INCLUDE FILES:
                                     0000    42 ;
                                     0000    43 ;
                                     0000    44 ; MACROS:
                                     0000    45 ;
                                     0000    46 
                                     0000    47 ;
                                     0000    48 ; EQUATED SYMBOLS:
                                     0000    49 ;
                                     0000    50 	$CLIMSGDEF			; DEFINE CLI ERROR CODES
                                     0000    51 	$FABDEF				; FAB DEFINITIONS
                                     0000    52 	$RABDEF				; RAB DEFINITIONS
                                     0000    53 
                           00000087  0000    54 RCBFSZ=135				; RECORD BUFFER SIZE FOR FORMS
                                     0000    55 					; DEFINITION FILE
                           00000040  0000    56 LNBFSZ=64				; LOGICAL NAME BUFFER SIZE
                                     0000    57 
                                     0000    58 ;
                                     0000    59 ; OWN STORAGE:
                                     0000    60 ;
                                     0000    61 	PURE_SECTION	PURE_CLIUTL
                                     0000    62  
                                     0000    63 LOGNAMDS:				; LOGICAL NAME DESCRIPTOR
                           00000008' 0000    64 	.LONG	LOGNAMSZ
                           00000008' 0004    65 	.LONG	LOGNAM
                                     0008    66 
            4B 53 49 44 24 53 59 53  0008    67 LOGNAM:	.ASCII	/SYS$DISK/		; LOGICAL DEVICE NAME
                           00000008  0010    68 LOGNAMSZ=.-LOGNAM
                                     0010    69 
4D 52 4F 46 5D 52 47 4D 53 59 53 5B  0010    70 FILNAM:	.ASCII	/[SYSMGR]FORMSTYPE.DAT/	; FILE NAME OF FORMS DEFINITION FILE
         54 41 44 2E 45 50 59 54 53  001C       
                           00000015  0025    71 FILNAMSZ=.-FILNAM
                                     0025    72 
                                     0025    73 
CNVCLIFRM       - CONVERT COMMAND INPUT FORMS TYPE               21-AUG-1978 18:56:24   VAX-11 MACRO X0.3-11               Page   3
01              CONVERT CLI FORMS                                                                                                (3)

                                     0025    75 	.SBTTL	CONVERT CLI FORMS
                                     0025    76 ;++
                                     0025    77 ; FUNCTIONAL DESCRIPTION:
                                     0025    78 ;
                                     0025    79 ;	THIS ROUTINE IS CALLED TO CONVERT THE FORMS TYPE
                                     0025    80 ;	ENTERED ON A COMMAND INTO A BINARY BYTE VALUE.
                                     0025    81 ;	THIS WILL CONVERT EITHER A NUMBER DIRECTLY, OR
                                     0025    82 ;	A ALPHANUMERIC NAME.  ALPHANUMERIC NAMES ARE
                                     0025    83 ;	STORED IN FILE "SYS$DISK:FORMSTYPE.DAT".
                                     0025    84 ;	FORMS DEFINITIONS IN THE FILE MUST BE IN 
                                     0025    85 ;	THE FOLLOWING FORMAT:
                                     0025    86 ;	%	TYPE	NUMBER
                                     0025    87 ;	THE PERCENT SIGN MUST BE THE FIRST CHARACTER IN THE RECORD.
                                     0025    88 ;
                                     0025    89 ; CALLING SEQUENCE:
                                     0025    90 ;
                                     0025    91 ;	VIA "CALL" INSTRUCTION
                                     0025    92 ;
                                     0025    93 ; INPUT PARAMETERS:
                                     0025    94 ;
                                     0025    95 ;	4(AP) IS THE ADDRESS OF A QUAD WORD DESCRIPTOR FOR THE FORM TYPE
                                     0025    96 ;	8(AP) IS THE ADDRESS OF BYTE TO STORE RESULT(OPTION)
                                     0025    97 ;
                                     0025    98 ; IMPLICIT INPUTS:
                                     0025    99 ;
                                     0025   100 ;	NONE
                                     0025   101 ;
                                     0025   102 ; OUTPUT PARAMETERS:
                                     0025   103 ;
                                     0025   104 ;	THE CONVERTED FORMS TYPE IS RETURNED IN R1 AND AT THE LOCATION
                                     0025   105 ;	SPECIFIED IF THE CALL ARGUMENT LIST HAD MORE THAN ONE ARGUMENT.
                                     0025   106 ;
                                     0025   107 ; IMPLICIT OUTPUTS:
                                     0025   108 ;
                                     0025   109 ;	CONVERTED VALUE IN R1
                                     0025   110 ;
                                     0025   111 ; COMPLETION CODES:
                                     0025   112 ;
                                     0025   113 ;	R0 IS SET TRUE OR FALSE DEPENDING UPON SUCCESS OR FAILURE OF CONVERSION
                                     0025   114 ;
                                     0025   115 ; SIDE EFFECTS:
                                     0025   116 ;
                                     0025   117 ;	NONE
                                     0025   118 ;
                                     0025   119 ;--
                                     0025   120 	PURE_SECTION	PURE_CLIUTL
                                     0025   121  
                                     0025   122 LIB$CNVCLIFORMS::			; CONVERT FORMS TYPE
                               0FDC  0025   123 	.WORD	^M<R2,R3,R4,R6,R7,R8,R9,R10,R11>	; SAVE ALL BUT R5
                                     0027   124 
                                     0027   125 	; FIRST SEE IF WE CAN CONVERT A NUMBER
                       04 BC     7F  0027   126 	PUSHAQ	@4(AP)			; POINTER TO TOKEN DESCRIPTOR
   00000000'EF            01     FB  002A   127 	CALLS	#1,LIB$CVT_DECBIN	; TRY TO CONVERT IT
            03            50     E9  0031   128 	BLBC	R0,5$			; CONVERSION FAILED
                          00D5   31  0034   129 	BRW	60$			; SUCCESS!  VALUE IN R1
                                     0037   130 
                                     0037   131 5$:	; NUMBER CONVERSION FAILED.  TRY LOOKING IT UP IN FILE
CNVCLIFRM       - CONVERT COMMAND INPUT FORMS TYPE               21-AUG-1978 18:56:24   VAX-11 MACRO X0.3-11               Page   4
01              CONVERT CLI FORMS                                                                                                (3)

            5A         04 BC     7D  0037   132 	MOVQ	@4(AP),R10		; PUT TOKEN DESCRIPTOR IN R10,R11
                                     003B   133 
                                     003B   134 	; ALLOCATE SPACE FOR FAB, RAB, AND BUFFERS ON STACK
            57         B0 AE     9E  003B   135 	MOVAB	-FAB$C_BLN(SP),R7	; R7 POINTS TO FAB
            58         BC A7     9E  003F   136 	MOVAB	-RAB$C_BLN(R7),R8	; R8 POINTS TO RAB
            59       FF78 C8     9E  0043   137 	MOVAB	-<RCBFSZ+1>(R8),R9	; R9 POINTS TO RECORD BUFFER
            5E         C0 A9     9E  0048   138 	MOVAB	-LNBFSZ(R9),SP		; ADJUST STACK INCLUDING SPACE FOR 
                                     004C   139 					; LOGICAL NAME BUFFER
                                     004C   140 
                                     004C   141 	; TRANSLATE LOGICAL NAME 'SYS$DISK' TO GET DEVICE NAME
                          6E     9F  004C   142 	PUSHAB	(SP)			; BUILD A STRING DESCRIPTOR TO LOGICAL
            7E         40 8F     9A  004E   143 	MOVZBL	#LNBFSZ,-(SP)		; NAME BUFFER ON STACK
            50            6E     9E  0052   144 	MOVAB	(SP),R0			; POINTER TO DESCRIPTOR
                                     0055   145 	$TRNLOG_S	LOGNAMDS,(R0),(R0),,,#6
                                     0069   146 					; TRANSLATE NAME FROM SYSTEM TABLE ONLY
            2F            50     E9  0069   147 	BLBC	R0,10$			; ERROR
                                     006C   148 
                                     006C   149 	; CLEAR FAB AND RAB
            68            00     2C  006C   150 	MOVC5	#0,(R8),#0,#RAB$C_BLN+FAB$C_BLN,(R8)
       0094 8F            00         006F       
                          68         0073       
                                     0074   151 
                                     0074   152 	; SET VARIOUS FAB FIELDS
                                     0074   153 	ASSUME	FAB$B_BLN  EQ FAB$B_BID+1
            67       5003 8F     B0  0074   154 	MOVW	#<FAB$C_BLN@8>+FAB$C_BID,FAB$B_BID(R7)	; BLOCK ID AND LENGTH
         16 A7            02     90  0079   155 	MOVB	#FAB$M_GET,FAB$B_FAC(R7); FILE ACCESS
         2C A7         90 AF     9E  007D   156 	MOVAB	FILNAM,FAB$L_FNA(R7)	; FILE NAME
         34 A7            15     90  0082   157 	MOVB	#FILNAMSZ,FAB$B_FNS(R7)	; FILE NAME SIZE
         30 A7         08 AE     9E  0086   158 	MOVAB	8(SP),FAB$L_DNA(R7)	; DEFAULT FILE NAME (POINTS TO LOGICAL
                                     008B   159 					; NAME BUFFER ON STACK)
         35 A7            6E     90  008B   160 	MOVB	(SP),FAB$B_DNS(R7)	; DEFAULT FILE NAME SIZE (RETURNED
                                     008F   161 					; FROM $TRNLOG)
                                     008F   162 
                                     008F   163 	; OPEN FILE
                                     008F   164 	$OPEN	FAB=(R7)
            03            50     E8  0098   165 	BLBS	R0,15$			; SUCCESSFUL OPEN
                          0089   31  009B   166 10$:	BRW	80$			; ERROR (ASSUME FILE NOT FOUND)
                                     009E   167 
                                     009E   168 15$:	; SET VARIOUS RAB FIELDS
                                     009E   169 	ASSUME	RAB$B_BLN  EQ RAB$B_BID+1
            68       4401 8F     B0  009E   170 	MOVW	#<RAB$C_BLN@8>+RAB$C_BID,RAB$B_BID(R8)	; BLOCK ID AND LENGTH
         3C A8            67     9E  00A3   171 	MOVAB	(R7),RAB$L_FAB(R8)	; FAB ADDRESS
         1E A8            00     90  00A7   172 	MOVB	#RAB$C_SEQ,RAB$B_RAC(R8); RECORD ACCESS
         24 A8            69     9E  00AB   173 	MOVAB	(R9),RAB$L_UBF(R8)	; USER BUFFER ADDRESS (ON STACK)
         20 A8       0087 8F     B0  00AF   174 	MOVW	#RCBFSZ,RAB$W_USZ(R8)	; USER BUFFER SIZE
                                     00B5   175 
                                     00B5   176 	$CONNECT	RAB=(R8)
            5D            50     E9  00BE   177 	BLBC	R0,70$			; CONNECT ERROR
                                     00C1   178 
                                     00C1   179 20$:	; READ A LINE FROM FILE
                                     00C1   180 	$GET	RAB=(R8)
            51            50     E9  00CA   181 	BLBC	R0,70$			; ERROR (ASSUME END OF FILE)
                                     00CD   182 
                                     00CD   183 	; GET LENGTH OF RECORD AND STORE A 0 AT THE END (FOR PARSING ROUTINES)
            50         22 A8     3C  00CD   184 	MOVZWL	RAB$W_RSZ(R8),R0	; RECORD SIZE
                          6940   94  00D1   185 	CLRB	(R9)[R0]		; WE NOW HAVE AN ASCIZ STRING
                                     00D4   186 
CNVCLIFRM       - CONVERT COMMAND INPUT FORMS TYPE               21-AUG-1978 18:56:24   VAX-11 MACRO X0.3-11               Page   5
01              CONVERT CLI FORMS                                                                                                (3)

                                     00D4   187 	; IS THIS LINE INTERESTING? (DOES IT BEGIN WITH %)
            56            59     D0  00D4   188 	MOVL	R9,R6			; POINTER TO BUFFER
            25            86     91  00D7   189 	CMPB	(R6)+,#^A/%/
                          E5     12  00DA   190 	BNEQ	20$			; NOT OF INTEREST.  GET NEXT LINE
                                     00DC   191 
                                     00DC   192 	; NOW GET FIRST TOKEN ON LINE AND SEE IF IT MATCHES INPUT SYMBOL
                          FF21'  30  00DC   193 	BSBW	CHR$GETOKEN		; RETURNS TOKEN DESCRIPTOR IN R3,R4
                          E0     13  00DF   194 	BEQL	20$			; NULL TOKEN; GET NEXT LINE
            6B            5A     2D  00E1   195 	CMPC5	R10,(R11),#0,R3,(R4)	; IT IS CONSIDERED A MATCH IF THE INPUT
            53            00         00E4       
                          64         00E6       
                          50     B5  00E7   196 	TSTW	R0			; SYMBOL IS AN INITIAL SUBSTRING OF THE
                                     00E9   197 					; TOKEN (R0=0)
                          D6     12  00E9   198 	BNEQ	20$			; NO MATCH; GET NEXT LINE
                                     00EB   199 
                                     00EB   200 	; HAVE A MATCH.  R6 POINTS TO NEXT TOKEN (HOPEFULLY VALUE)
                          FF12'  30  00EB   201 	BSBW	CHR$GETOKEN
                          2E     13  00EE   202 	BEQL	70$			; NULL TOKEN --> ERROR
                                     00F0   203 
                                     00F0   204 	; HAVE TOKEN.  SET UP TO CALL ROUTINE TO CONVERT TO BINARY
            6E            53     7D  00F0   205 	MOVQ	R3,(SP)			; PUT TOKEN DESCRIPTOR ON STACK
                                     00F3   206 
                                     00F3   207 	; BUILD ARGUMENT LIST ON STACK
                          6E     7F  00F3   208 	PUSHAQ	(SP)			; POINTER TO TOKEN DESCRIPTOR
   00000000'EF            01     FB  00F5   209 	CALLS	#1,LIB$CVT_DECBIN	; CONVERT TO BINARY
            1F            50     E9  00FC   210 	BLBC	R0,70$			; CONVERSION ERROR
                                     00FF   211 
                                     00FF   212 50$:	; SUCCESS RETURN (WITH CLOSE).  VALUE IS IN R1
                          51     DD  00FF   213 	PUSHL	R1			; SAVE R1 ACROSS CLOSE
                                     0101   214 	$CLOSE	FAB=(R7)		; CLOSE FILE
                          02     BA  010A   215 	POPR	#^M<R1>			; RESTORE R1
                                     010C   216 
                                     010C   217 60$:	; SUCCESS RETURN (WITHOUT CLOSE).  VALUE IS IN R1.
            50   00030001 8F     D0  010C   218 	MOVL	#CLI$_NORMAL,R0		; INDICATE SUCCESS
            01            6C     D1  0113   219 	CMPL	(AP),#1			; STORE IN MEMORY IF MORE THAN ONE ARG
                          16     1B  0116   220 	BLEQU	90$			; DON'T STORE
         08 BC            51     90  0118   221 	MOVB	R1,@8(AP)		; STORE
                          10     11  011C   222 	BRB	90$
                                     011E   223 
                                     011E   224 70$:	; FAILURE RETURN (WITH CLOSE)
                                     011E   225 	$CLOSE	FAB=(R7)		; CLOSE FILE
                                     0127   226 
                                     0127   227 80$:	; FAILURE RETURN (WITHOUT CLOSE)
            50   00038832 8F     D0  0127   228 	MOVL	#CLI$_VALCNVERR,R0	; INDICATE CONVERSION ERROR
                                     012E   229 
                                 04  012E   230 90$:	RET
                                     012F   231 	
                                     012F   232 
                                     012F   233 
                                     012F   234 	.END
CNVCLIFRM       - CONVERT COMMAND INPUT FORMS TYPE               21-AUG-1978 18:56:24   VAX-11 MACRO X0.3-11               Page   6
SYMBOL TABLE                                                                                                                     (3)

$$.TMP1        = 00000001            CLI$_ONEVAL    = 00038158            FAB$L_SDC        00000044            
$$.TMP2        = 00000067            CLI$_ONLEVL    = 00038100            FAB$L_STS        00000008            
BIT...         = 00000020            CLI$_ONOVF     = 00038108            FAB$L_STV        0000000C            
CHR$GETOKEN      ********   X   03   CLI$_OVRFLW    = 00038160            FAB$L_XAB        00000024            
CLI$_ABFNAM    = 000381B8            CLI$_PARMDEL   = 00038110            FAB$M_BIO      = 00000020            
CLI$_ABKEYW    = 00038000            CLI$_PROC_ID   = 0003FFF1            FAB$M_BLK      = 00000008            
CLI$_ABVERB    = 00038008            CLI$_QUEJOBCRE = 0003FFF9            FAB$M_BRO      = 00000040            
CLI$_BADRET    = 00038198            CLI$_REQPRMABS = 00038812            FAB$M_CBT      = 00200000            
CLI$_BADTEXT   = 000381B0            CLI$_RSLOVF    = 00038118            FAB$M_CIF      = 02000000            
CLI$_BUFOVF    = 00038018            CLI$_SKPDAT    = 00038120            FAB$M_CR       = 00000002            
CLI$_COMPLX    = 00038020            CLI$_SPARE0    = 00038010            FAB$M_CTG      = 00100000            
CLI$_CONFQUAL  = 00038802            CLI$_SPARE1    = 00038058            FAB$M_DEL      = 00000004            
CLI$_CREQUEJOB = 0003884A            CLI$_STKOVF    = 00038128            FAB$M_DFW      = 00000020            
CLI$_DEFOVF    = 00038028            CLI$_SUBMITERR = 00038852            FAB$M_DLT      = 00008000            
CLI$_DEVALSPL  = 0003885A            CLI$_SYMDEL    = 00038130            FAB$M_DMO      = 00001000            
CLI$_DEVNOTFOR = 0003887A            CLI$_SYMOVF    = 00038138            FAB$M_ESC      = 08000000            
CLI$_DEVNOTSPL = 00038862            CLI$_UNDFIL    = 00038188            FAB$M_EXE      = 00000080            
CLI$_DIRECT    = 00038030            CLI$_UNDSYM    = 00038140            FAB$M_FTN      = 00000001            
CLI$_EXPSYN    = 00038038            CLI$_UNPROPARM = 00038170            FAB$M_GET      = 00000002            
CLI$_FILOPN    = 00038190            CLI$_UNPROQUAL = 00038168            FAB$M_INP      = 00080000            
CLI$_ILLVAL    = 0003883A            CLI$_USGOTO    = 00038148            FAB$M_JNL      = 00400000            
CLI$_IMCHNG    = 00038040            CLI$_VALCNVERR = 00038832            FAB$M_KFO      = 40000000            
CLI$_IMGFNF    = 00038872            CLI$_VALREQ    = 00038150            FAB$M_MSE      = 00000010            
CLI$_INSFPRM   = 00038048            FAB$B_BID        00000000            FAB$M_MXV      = 00000002            
CLI$_INVKEY    = 00038178            FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            
CLI$_INVQUAL   = 0003880A            FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            
CLI$_INVQUALNUM= 0003881A            FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            
CLI$_INVREQTYP = 00038822            FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            
CLI$_INVRSP    = 00038180            FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            
CLI$_INVUIC    = 000381A8            FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            
CLI$_IVCHAR    = 00038050            FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            
CLI$_IVDEVTYPE = 0003886A            FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            
CLI$_IVFNAM    = 000381C0            FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            
CLI$_IVKEYW    = 00038060            FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            
CLI$_IVOPER    = 00038068            FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            
CLI$_IVPROT    = 00038070            FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            
CLI$_IVQLOC    = 00038078            FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            
CLI$_IVSYMB    = 00038080            FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            
CLI$_IVVALU    = 00038088            FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            
CLI$_IVVERB    = 00038090            FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            
CLI$_MAXPARM   = 00038098            FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            
CLI$_MULKEY    = 000381A0            FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            
CLI$_NOATFIL   = 000380A0            FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            
CLI$_NOCCAT    = 000380A8            FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            
CLI$_NOCOMD    = 000380B0            FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            
CLI$_NOKEYW    = 000380B8            FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            
CLI$_NOLIST    = 000380C0            FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            
CLI$_NOOPTPRS  = 00038842            FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            
CLI$_NOQUAL    = 000380C8            FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            
CLI$_NORMAL    = 00030001            FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            
CLI$_NOTNEG    = 000380D8            FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            
CLI$_NOVALU    = 000380D0            FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            
CLI$_NOVALUE   = 0003882A            FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            
CLI$_NULFIL    = 000380E0            FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            
CLI$_NUMBER    = 000380E8            FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            
CLI$_ONCOMD    = 000380F0            FAB$L_MRN        00000038            FAB$S_ORG      = 00000004            
CLI$_ONERR     = 000380F8            FAB$L_NAM        00000028            FAB$S_PPF_RAT  = 00000008            
CNVCLIFRM       - CONVERT COMMAND INPUT FORMS TYPE               21-AUG-1978 18:56:24   VAX-11 MACRO X0.3-11               Page   7
SYMBOL TABLE                                                                                                                     (3)

FAB$V_BIO      = 00000005            FILNAMSZ       = 00000015            RAB$M_PTA      = 20000000            
FAB$V_BLK      = 00000003            GBL...         = 00000000            RAB$M_RAH      = 00000200            
FAB$V_BRO      = 00000006            LIB$CNVCLIFORMS  00000025 RG    03   RAB$M_RLK      = 00080000            
FAB$V_CBT      = 00000015            LIB$CVT_DECBIN   ********   X   03   RAB$M_RNE      = 01000000            
FAB$V_CIF      = 00000019            LNBFSZ         = 00000040            RAB$M_RNF      = 08000000            
FAB$V_CR       = 00000001            LOGNAM           00000008 R     03   RAB$M_TMO      = 02000000            
FAB$V_CTG      = 00000014            LOGNAMDS         00000000 R     03   RAB$M_TPT      = 00000002            
FAB$V_DEL      = 00000002            LOGNAMSZ       = 00000008            RAB$M_UIF      = 00000010            
FAB$V_DFW      = 00000005            RAB$B_BID        00000000            RAB$M_ULK      = 00040000            
FAB$V_DLT      = 0000000F            RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            
FAB$V_DMO      = 0000000C            RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            
FAB$V_ESC      = 0000001B            RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            
FAB$V_EXE      = 00000007            RAB$B_MBC        00000037            RAB$V_ASY      = 00000000            
FAB$V_FTN      = 00000000            RAB$B_MBF        00000036            RAB$V_BIO      = 0000000B            
FAB$V_GET      = 00000001            RAB$B_PSZ        00000034            RAB$V_CCO      = 0000001F            
FAB$V_INP      = 00000013            RAB$B_RAC        0000001E            RAB$V_CVT      = 0000001A            
FAB$V_JNL      = 00000016            RAB$B_ROP1       00000005            RAB$V_EOF      = 00000008            
FAB$V_KFO      = 0000001E            RAB$B_ROP2       00000006            RAB$V_FDL      = 00000006            
FAB$V_MSE      = 00000004            RAB$B_ROP3       00000007            RAB$V_HSH      = 00000007            
FAB$V_MXV      = 00000001            RAB$B_TMO        0000001F            RAB$V_KGE      = 00000015            
FAB$V_NAM      = 00000018            RAB$C_BID      = 00000001            RAB$V_KGT      = 00000016            
FAB$V_NEF      = 0000000A            RAB$C_BLN        00000044            RAB$V_LIM      = 0000000E            
FAB$V_NFS      = 00000010            RAB$C_KEY      = 00000001            RAB$V_LOA      = 0000000D            
FAB$V_NIL      = 00000005            RAB$C_RFA      = 00000002            RAB$V_LOC      = 00000010            
FAB$V_OFP      = 0000001D            RAB$C_SEQ      = 00000000            RAB$V_MAS      = 00000005            
FAB$V_ORG      = 00000004            RAB$K_BLN        00000044            RAB$V_NLK      = 00000014            
FAB$V_POS      = 00000008            RAB$L_BKT        00000038            RAB$V_NXR      = 00000017            
FAB$V_PPF      = 00000012            RAB$L_CTX        00000018            RAB$V_PMT      = 0000001E            
FAB$V_PPF_IND  = 0000000E            RAB$L_DCT        00000038            RAB$V_PPF_IND  = 0000000E            
FAB$V_PPF_RAT  = 00000006            RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            
FAB$V_PRN      = 00000002            RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            
FAB$V_PUT      = 00000000            RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            
FAB$V_RCK      = 00000017            RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            
FAB$V_RWC      = 0000000B            RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            
FAB$V_RWO      = 00000007            RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            
FAB$V_SCF      = 0000000E            RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            
FAB$V_SHRDEL   = 00000002            RAB$L_STS        00000008            RAB$V_TPT      = 00000001            
FAB$V_SHRGET   = 00000001            RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            
FAB$V_SHRPUT   = 00000000            RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            
FAB$V_SHRUPD   = 00000003            RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            
FAB$V_SPL      = 0000000D            RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            
FAB$V_SQO      = 00000006            RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            
FAB$V_SUP      = 00000002            RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            
FAB$V_TEF      = 0000001C            RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            
FAB$V_TMD      = 00000004            RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            
FAB$V_TMP      = 00000003            RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            
FAB$V_TRN      = 00000004            RAB$M_KGE      = 00200000            RCBFSZ         = 00000087            
FAB$V_UFM      = 0000001A            RAB$M_KGT      = 00400000            SYS$CLOSE        ********  GX   03   
FAB$V_UFO      = 00000011            RAB$M_LIM      = 00004000            SYS$CONNECT      ********  GX   03   
FAB$V_UPD      = 00000003            RAB$M_LOA      = 00002000            SYS$GET          ********  GX   03   
FAB$V_UPI      = 00000006            RAB$M_LOC      = 00010000            SYS$OPEN         ********  GX   03   
FAB$V_WCK      = 00000009            RAB$M_MAS      = 00000020            SYS$TRNLOG       ********   X   03   
FAB$W_BLS        0000003C            RAB$M_NLK      = 00100000            
FAB$W_DEQ        00000014            RAB$M_NXR      = 00800000            
FAB$W_IFI        00000002            RAB$M_PMT      = 40000000            
FAB$W_MRS        00000036            RAB$M_PPF_IND  = 00004000            
FILNAM           00000010 R     03   RAB$M_PPF_RAT  = 00003FC0            
CNVCLIFRM       - CONVERT COMMAND INPUT FORMS TYPE               21-AUG-1978 18:56:24   VAX-11 MACRO X0.3-11               Page   8
PROGRAM SECTION SYNOPSIS                                                                                                         (3)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000050      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
PURE_CLIUTL      0000012F      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
16434. BYTES LEFT IN FREE MEMORY POOL.
1556. BYTES OF RECLAIMED MEMORY.
OBJ$:CNVCLIFRM,LIS$:CNVCLIFRM/-SP=EXECML$/ML,LIB$:CLIUTL/ML,SRC$:CNVCLIFRM
44 MLB DIR RDS - 540 GETS TO DEFINE 21 MACROS. 41 INTER. FILE WRITES. 
