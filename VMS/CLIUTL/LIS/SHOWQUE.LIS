SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      39  DECLARATIONS
   (3)     225  PRINT THE QUEUE ROUTINE
   (4)     332  LIST DEVICE/BATCH QUEUE
   (6)     489  CHECK QUEUE AND JOB
   (8)     616  SEARCH QUEUE
   (9)     725  FORMAT AND OUTPUT MESSAGE
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page   1
X01                                                                                                                              (1)

                                     0000     1 	.TITLE	SHOWQUE - SHOW THE SYSTEM QUEUES
                                     0000     2 	.IDENT	/X01/
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 
                                     0000    24 ;++
                                     0000    25 ; FACILITY:	CLI UTILITY "SHOW"
                                     0000    26 ;
                                     0000    27 ; ABSTRACT:	SHOW THE SYMBIONT MANAGER QUEUE
                                     0000    28 ;
                                     0000    29 ; ENVIRONMENT:	NATIVE NON-PRIVLEGED USER MODE CODE
                                     0000    30 ;
                                     0000    31 ; AUTHOR:	W.H.BROWN, CREATION DATE: 8-JUNE-1977
                                     0000    32 ;
                                     0000    33 ; MODIFIED BY:
                                     0000    34 ;
                                     0000    35 ;	, : VERSION
                                     0000    36 ; 01	- 
                                     0000    37 ;--
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page   2
X01             DECLARATIONS                                                                                                     (2)

                                     0000    39 	.SBTTL	DECLARATIONS
                                     0000    40 ;
                                     0000    41 ; INCLUDE FILES:
                                     0000    42 ;
                                     0000    43 ;
                                     0000    44 ; MACROS:
                                     0000    45 ;
                                     0000    46 ; MACRO TO ISSUE A CALLBACK TO THE UTILITY SERVICE ROUTINE
                                     0000    47 ;
                                     0000    48 	.MACRO	CALLBAK	P1,P2
                                     0000    49 	.IF B <P2>
                                     0000    50 	PUSHAB	SHQ_W_BITS(FP)		; ADDRESS OF BIT MASK
                                     0000    51 	.IFF
                                     0000    52 	PUSHAB	P2			; ADDRESS OF THIRD ARGUEMENT
                                     0000    53 	.ENDC
                                     0000    54 	PUSHAB	W^SHOW$A_CLIWORK	; COMMON WORK AREA
                                     0000    55 	PUSHAB	P1			; THE REQUEST DESCRIPTOR
                                     0000    56 	CALLS	#3,@CLI$A_UTILSERV(AP)	; REQUEST THE SERVICE OF THE CLI
                                     0000    57 	.ENDM				;
                                     0000    58  
                                     0000    59 ;
                                     0000    60 ; MACRO TO REQUST FORMATING AND OUTPUT OF A MESSAGE
                                     0000    61 ;
                                     0000    62 	.MACRO	FAOUT	MSG,CNT
                                     0000    63 	BSBW	FAOUT0
                                     0000    64 	.WORD	<MSG-.-2>
                                     0000    65 	.BYTE	<CNT+3>
                                     0000    66 	.ENDM
                                     0000    67  
                                     0000    68 ;
                                     0000    69 ; MACRO TO REQUEST FORMATING AND OUTPUT OF A MESSAGE
                                     0000    70 ; WHEN FORMAT STRING IS COMPUTED.
                                     0000    71 ;
                                     0000    72 	.MACRO	FAOUTC	MSG,CNT
                                     0000    73 .IIF DIF	<MSG><R1>,	MOVAB	MSG,R1
                                     0000    74 	BSBW	FAOUT1
                                     0000    75 	.BYTE	<CNT+3>
                                     0000    76 	.ENDM
                                     0000    77 ;
                                     0000    78 ; EQUATED SYMBOLS:
                                     0000    79 ;
                                     0000    80 	$CLIDEFQUALSHOW			; DEFINE QUALIFIER CODES
                                     0000    81 	$SMRDEF				; SYMBIONT MANAGER DEFINITONS
                                     0000    82 	$SQRDEF				; SYSTEM QUEUE RECORDS
                                     0000    83 	$SJHDEF				; SYSTEM JOB HEADER DEFS
                                     0000    84 	$SQHDEF				; SYSTEM QUEUE HEADER
                                     0000    85 	$SMQDEF				; SYSTEM QUEUE DEFINITONS
                                     0000    86 	$SYMDEF				; SYMBIONT MANAGER COMMON DEFINITIONS
                                     0000    87  
                                     0000    88 ;
                                     0000    89 ; DEFINE FLAG BITS FOR CLI INTERFACE
                                     0000    90 ;
                                     0000    91 	_VIELD	SHQ,0,<-		;
                                     0000    92 		<QUENAM,,M>,-		; EXPLICIT QUEUE NAMED
                                     0000    93 		<ALL,,M>,-		; ALL ENTRIES DESIRED
                                     0000    94 		<BATCH,,M>,-		; LIST ALL BATCH QUEUES
                                     0000    95 		<BRIEF,,M>,-		; CREATE BRIEF LISTING
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page   3
X01             DECLARATIONS                                                                                                     (2)

                                     0000    96 		<DEVICE,,M>,-		; SHOW DEVICE QUEUES
                                     0000    97 		<ENTRY,,M>,-		; EXPLICIT ENTRY ONLY
                                     0000    98 		<FULL,,M>,-		; EXPANDED LISTING
                                     0000    99 		<QUEPRT,,M>,-		; QUEUE HAS BEEN PRINTED
                                     0000   100 		>
                                     0000   101 ;
                                     0000   102 ; DEFINE WORK - NEGATIVE INDEXS FROM \FP\
                                     0000   103 ;
                                     0000   104  
                                     0000   105 	$OFFSET	-4,NEGATIVE,<-		;
                                     0000   106 		<SHQ_W_FLAGS,1>,-	; INTERNAL FLAGS
                                     0000   107 		<SHQ_W_BITS,1>,-	; CLI BIT DEFINTIONS
                                     0000   108 		<SHQ_B_LCNT,1>,-	; LIST COUNT FOR INTERVIENING JOBS
                                     0000   109 		<SHQ_B_QCNT,1>,-	; "QUEUE" COUNTER FOR LOOP CONTROL
                                     0000   110 		<SHQ_W_SPARE,2>,-	;
                                     0000   111 		<SHQ_Q_STRDESC,8>,-	; QUAD WORD DESCRIPTOR FOR FAO STRING
                                     0000   112 		<SHQ_L_CURQUE>,-		; CURRENT QUEUE INDEX
                                     0000   113 		<SHQ_K_WRKSIZ,0>,-	; SIZE OF WORK AREA(NEGATIVE BYTE COUNT)
                                     0000   114 		>
                                     FFFB       SHQ_W_FLAGS:
                                     FFFA       SHQ_W_BITS:
                                     FFF9       SHQ_B_LCNT:
                                     FFF8       SHQ_B_QCNT:
                                     FFF6       SHQ_W_SPARE:
                                     FFEE       SHQ_Q_STRDESC:
                                     FFEA       SHQ_L_CURQUE:
                                     FFEA       SHQ_K_WRKSIZ:
                                     0000   115 ;
                                     0000   116 ; DEFINE INTERNAL WORK FLAGS
                                     0000   117 ;
                                     0000   118 	_VIELD	SHQ,0,<-		; HOUSEKEEPING FLAGS
                                     0000   119 		FILPRT,-		; A FILE HAS BEEN PRINTED
                                     0000   120 		BATQUE,-		; WORKING ON A BATCH QUEUE
                                     0000   121 		HOLDQUE,-		; WORKING ON HOLD QUEUE
                                     0000   122 		CLKQUE,-		; WORKING ON CLOCK QUEUE
                                     0000   123 		>
                                     0000   124 ;
                                     0000   125 ; OWN STORAGE:
                                     0000   126 ;
                                     0000   127 	IMPURE_DATA
                                     0000   128  
                  3FFFFFFF 00000000  0000   129 INADR:	.LONG	0,<1@30-1>		; LIMITS FOR QUEUE TO MAP
                           00000010  0008   130 RETADR:	.BLKL	2			; RETURN ADDRESS LIMITS FROM MAP SECTION
                           00000018  0010   131 BIGBUF:	.BLKL	2			; LIMITS OF WORK BUFFER
                                     0018   132  
                                     0018   133 ;
                                     0018   134 ; CLI DATA BLOCKS
                                     0018   135 ;
                                     0018   136  
                                     0018   137 QUENAM:	$CLIREQDESC CLI$K_INPUT1,-	; GET THE QUEUE NAME IF THERE
                                     0018   138 		BITNUM=SHQ_V_QUENAM	; BIT TO SET IF NAME IS PRESENT
                                     0034   139  
                                     0034   140 GETQUAL:$CLIREQDESC CLI$K_GETQUAL,-	; REQUEST QUALIFIERS
                                     0034   141 		QUALST=SHQUALS		; QUALIFIER LIST
                                     0050   142  
                                     0050   143 SHQUALS:$CLIQUALDESC CLI$K_SHQU_ALL,-	; SHOW ALL ENTRIES IN SELCTED QUEUES
                                     0050   144 		TSTLST=SHQ_V_ENTRY,-	; CONFLICTS WITH ONLY 1 ENTRY
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page   4
X01             DECLARATIONS                                                                                                     (2)

                                     0050   145 		SETLST=SHQ_V_ALL	; SET FLAG TO LIST ALL
                                     0069   146  
                                     0069   147 	$CLIQUALDESC CLI$K_SHQU_BRIE,-	; BRIEF LISTING
                                     0069   148 		TSTLST=SHQ_V_ENTRY,-	; CONFLICTS WITH ONE ENTRY
                                     0069   149 		SETLST=SHQ_V_BRIEF	; BIT TO SET
                                     0082   150  
                                     0082   151 	$CLIQUALDESC CLI$K_SHQU_BATC,-	; LIST ALL BATCH QUEUES
                                     0082   152 		TSTLST=SHQ_V_ENTRY,-	; CONFLICTS WITH ONE ENTRY
                                     0082   153 		SETLST=SHQ_V_BATCH	; BIT TO SET
                                     009B   154  
                                     009B   155 	$CLIQUALDESC CLI$K_SHQU_DEVI,-	; DEVICE QUEUES
                                     009B   156 		TSTLST=SHQ_V_ENTRY,-	; CONFLICTS WITH ONE ENTRY
                                     009B   157 		SETLST=SHQ_V_DEVICE	; BIT TO SET
                                     00B4   158  
                                     00B4   159 	$CLIQUALDESC CLI$K_SHQU_ENTR,-	; LIST SPECFIC ENTRY
                                     00B4   160 		TSTLST=<SHQ_V_ALL,SHQ_V_BATCH,SHQ_V_DEVICE>,- ; CONFICTS WTIH-
                                     00B4   161 		-			; ALL, BATCH AND DEVICE QUALIFIERS
                                     00B4   162 		SETLST=SHQ_V_ENTRY	; BIT TO SET
                                     00CF   163  
                                     00CF   164 	$CLIQUALDESC CLI$K_SHQU_FULL,-	; FULL LISTING DESIRED
                                     00CF   165 		SETLST=SHQ_V_FULL	; BIT TO SET
                                     00E7   166 	$CLIQUALDESC END_LIST
                                     00E8   167  
                                     00E8   168 ;
                                     00E8   169 ; PURE DATA KEPT IN COMMON SECTION WITH CODE FOR LOCALITY
                                     00E8   170 ;
                                     00E8   171 	PURE_SECTION
                                     0000   172  
                                     0000   173 ;
                                     0000   174 ; PARAMETERS USED TO MAP TO THE GLOBAL SECTION CONTAINING THE QUEUES
                                     0000   175 ;
                                     0000   176  
                                     0000   177 SECNAM:	SYS_STR	<JBCSYSQUE>
                                     0011   178 GBLSCPAR:
                           00000007  0011   179 	.LONG	7			; 7 PARAMETERS
                           00000000' 0015   180 	.LONG	INADR			; POINTER TO INPUT ADDRESS LIMITS
                           00000008' 0019   181 	.LONG	RETADR			; POINTER OUTPUT ADDRESS LIMITS
                           00000000  001D   182 	.LONG	0			; ACCESS MODE-DEFAULTED TO USER
                           00008001  0021   183 	.LONG	<1@0>!<1@15>		; FLAGS=<GBL!SYS>
                           00000000' 0025   184 	.LONG	SECNAM			; SECTION NAME DESCRIPTOR
                           00000000  0029   185 	.LONG	0			; IDENT
                           00000000  002D   186 	.LONG	0			; RELATIVE PAGE NUMBER
                                     0031   187 ;
                                     0031   188 ; FORMAT STRINGS AND CONSTANT FIELDS FOR FAO DIRECTIVES
                                     0031   189 ;
                                     0031   190  
68 63 74 61 42 20 2A 20 20 2F 21 00' 0031   191 BATHDR:	.ASCIC	\!/  * Batch queue "!AC" Joblim=!UB, Inipri=!UB, !ACSwap !AC!/\
22 43 41 21 22 20 65 75 65 75 71 20  003D       
2C 42 55 21 3D 6D 69 6C 62 6F 4A 20  0049       
2C 42 55 21 3D 69 72 70 69 6E 49 20  0055       
43 41 21 20 70 61 77 53 43 41 21 20  0061       
                              2F 21  006D       
                                 3D  0031       
62 6F 4A 20 43 41 21 20 20 20 20 00' 006F   192 BATJOB:	.ASCIC	\    !AC Job !4UW !AD !AD Pri=!UB, !+!AC!17%D\
41 21 20 44 41 21 20 57 55 34 21 20  007B       
21 20 2C 42 55 21 3D 69 72 50 20 44  0087       
         44 25 37 31 21 43 41 21 2B  0093       
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page   5
X01             DECLARATIONS                                                                                                     (2)

                                 2C  006F       
21 3A 43 41 21 20 20 20 20 20 20 00' 009C   193 BATFIL:	.ASCIC	\      !AC:!AC !+ !AC\
         43 41 21 20 2B 21 20 43 41  00A8       
                                 14  009C       
51 20 43 41 21 20 2A 20 20 2F 21 00' 00B1   194 DEVHDR:	.ASCIC	\!/  * !AC Queue "!AC" Forms=!UB, !AC !AC!AC!AC!AC!AC!/\
46 20 22 43 41 21 22 20 65 75 65 75  00BD       
41 21 20 2C 42 55 21 3D 73 6D 72 6F  00C9       
21 43 41 21 43 41 21 43 41 21 20 43  00D5       
               2F 21 43 41 21 43 41  00E1       
                                 36  00B1       
62 6F 4A 20 43 41 21 20 20 20 20 00' 00E8   195 DEVJOB:	.ASCIC	\    !AC Job !4UW !AD !AD, Pri=!UB, !AC!AC!17%D\
41 21 20 44 41 21 20 57 55 34 21 20  00F4       
20 2C 42 55 21 3D 69 72 50 20 2C 44  0100       
   44 25 37 31 21 43 41 21 43 41 21  010C       
                                 2E  00E8       
74 6E 75 6F 63 5F 62 6F 4A 5F 21 00' 0117   196 DVJOBX:	.ASCIC	\!_Job_count=!UB, Form_type=!UB\
74 5F 6D 72 6F 46 20 2C 42 55 21 3D  0123       
               42 55 21 3D 65 70 79  012F       
                                 1E  0117       
21 3A 43 41 21 20 20 20 20 20 20 00' 0136   197 PRTFL2:	.ASCIC	\      !AC:!20ACCopies=!UB, !AC!AC!AC!AC!AC!AC Paglim=!UW\
21 3D 73 65 69 70 6F 43 43 41 30 32  0142       
41 21 43 41 21 43 41 21 20 2C 42 55  014E       
50 20 43 41 21 43 41 21 43 41 21 43  015A       
         57 55 21 3D 6D 69 6C 67 61  0166       
                                 38  0136       
21 3A 43 41 21 20 20 20 20 20 20 00' 016F   198 PRTFL1:	.ASCIC	\      !AC:!20ACCopies=!UB, !AC!AC!AC!AC!AC!AC\
21 3D 73 65 69 70 6F 43 43 41 30 32  017B       
41 21 43 41 21 43 41 21 20 2C 42 55  0187       
      43 41 21 43 41 21 43 41 21 43  0193       
                                 2D  016F       
55 21 5B 20 20 20 20 20 20 20 20 00' 019D   199 INTVJB:	.ASCIC	\        [!UB Intervening jobs]\
6E 69 6E 65 76 72 65 74 6E 49 20 42  01A9       
               5D 73 62 6F 6A 20 67  01B5       
                                 1E  019D       
75 65 75 71 20 73 69 68 54 20 09 00' 01BC   200 REDRCT:	.ASCIC	\	 This queue assigned to !AC\
74 20 64 65 6E 67 69 73 73 61 20 65  01C8       
                     43 41 21 20 6F  01D4       
                                 1C  01BC       
75 71 20 68 63 75 73 20 6F 4E 20 20  01D9   201 NOQUE:	.ASCII	\  No such queue\
                           65 75 65  01E5       
                           0000000F  01E8   202 	NOQSIZ = . - NOQUE
                                     01E8   203  
                                 00  01E8   204 NULL:	.BYTE	0
            20 65 74 65 6C 65 44 00' 01E9   205 DELETE:	.ASCIC	\Delete \
                                 07  01E9       
                  20 67 61 6C 46 00' 01F1   206 FLAG:	.ASCIC	\Flag \
                                 05  01F1       
               20 74 73 72 75 42 00' 01F7   207 BURST:	.ASCIC	\Burst \
                                 06  01F7       
         20 64 65 70 70 6F 74 53 00' 01FE   208 STOPD:	.ASCIC	\Stopped \
                                 08  01FE       
            20 64 65 73 75 61 50 00' 0207   209 PAUSED:	.ASCIC	\Paused \
                                 07  0207       
               20 72 65 77 6F 4C 00' 020F   210 LOWER:	.ASCIC	\Lower \
                                 06  020F       
               76 65 64 6E 65 47 00' 0216   211 GENDEV:	.ASCIC	\Gendev\
                                 06  0216       
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page   6
X01             DECLARATIONS                                                                                                     (2)

               74 72 70 6E 65 47 00' 021D   212 GENPRT:	.ASCIC	\Genprt\
                                 06  021D       
                  6E 65 67 6F 4E 00' 0224   213 NOGEN:	.ASCIC	\Nogen\
                                 05  0224       
               65 63 69 76 65 44 00' 022A   214 DEVICE:	.ASCIC	\Device\
                                 06  022A       
         6C 61 6E 69 6D 72 65 54 00' 0231   215 TERMIN:	.ASCIC	\Terminal\
                                 08  0231       
            74 6E 65 72 72 75 43 00' 023A   216 CURRNT:	.ASCIC	\Current\
                                 07  023A       
            67 6E 69 64 6E 65 50 00' 0242   217 PENDG:	.ASCIC	\Pending\
                                 07  0242       
            67 6E 69 64 6C 6F 48 00' 024A   218 HOLDG:	.ASCIC	\Holding\
                                 07  024A       
                           4F 4E 00' 0252   219 NO:	.ASCIC	\NO\
                                 02  0252       
            20 64 65 65 66 6F 4E 00' 0255   220 NOFEED:	.ASCIC	\Nofeed \
                                 07  0255       
            20 72 64 68 67 61 50 00' 025D   221 PAGHDR:	.ASCIC	\Paghdr \
                                 07  025D       
               63 70 73 6C 62 44 00' 0265   222 DBLSPC:	.ASCIC	\Dblspc\
                                 06  0265       
               20 6C 69 74 6E 75 00' 026C   223 UNTIL:	.ASCIC	\until \
                                 06  026C       
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page   7
X01             PRINT THE QUEUE ROUTINE                                                                                          (3)

                                     0273   225 	.SBTTL	PRINT THE QUEUE ROUTINE
                                     0273   226 ;++
                                     0273   227 ; FUNCTIONAL DESCRIPTION:
                                     0273   228 ;
                                     0273   229 ;	THIS ROUTINE LIST THE CONTENTS OF ALL THE QUEUES
                                     0273   230 ;
                                     0273   231 ; CALLING SEQUENCE:
                                     0273   232 ;
                                     0273   233 ;	CALL	SHO_LISTQUE
                                     0273   234 ;
                                     0273   235 ; INPUT PARAMETERS:
                                     0273   236 ;
                                     0273   237 ;	NONE
                                     0273   238 ;
                                     0273   239 ; IMPLICIT INPUTS:
                                     0273   240 ;
                                     0273   241 ;	NONE
                                     0273   242 ;
                                     0273   243 ; OUTPUT PARAMETERS:
                                     0273   244 ;
                                     0273   245 ;	NONE
                                     0273   246 ;
                                     0273   247 ; IMPLICIT OUTPUTS:
                                     0273   248 ;
                                     0273   249 ;	NONE
                                     0273   250 ;
                                     0273   251 ; COMPLETION CODES:
                                     0273   252 ;
                                     0273   253 ;	NONE
                                     0273   254 ;
                                     0273   255 ; SIDE EFFECTS:
                                     0273   256 ;
                                     0273   257 ;	NONE
                                     0273   258 ;
                                     0273   259 ;--
                                     0273   260 	PURE_SECTION
                                     0273   261 
                               0FFC' 0273   262 	.ENTRY	SHOW$QUEUE,^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>
                                     0275   263  
                                     0275   264 	$EXPREG_S	#16,-		; EXPAND REGION BY 16 PAGES
                                     0275   265 		RETADR=BIGBUF,-		; LIMITS FOR BIG BUFFER
                                     0275   266 		REGION=#0		; P0 SPACE SHOULD BE EXPANDED
            14            50     E9  0288   267 	BLBC	R0,10$			; BR IF AOK
       0014'CF            01     C1  028B   268 	ADDL3	#1,W^BIGBUF+4,W^INADR	; SET NEXT BYTE TO MAP QUEUE
                     0000'CF         0290       
   00000000'9F       FD7A CF     FA  0293   269 	CALLG	W^GBLSCPAR,@#SYS$MGBLSC ; MAP THE SYMBIONT MANAGERS QUEUE
            09            50     E8  029C   270 	BLBS	R0,RESTART		; BR IF ALL IS WELL
                                     029F   271 10$:	$EXIT_S	R0			; EXIT WITH BAD STATUS
            5A       0008'CF     D0  02A8   272 RESTART:MOVL	W^RETADR,R10		; SET BASE OF THE QUEUE
            5E         EA AD     9E  02AD   273 	MOVAB	SHQ_K_WRKSIZ(FP),SP	; ALLOCATE WORK AREA IN THE CALL STACK
            6E            00     2C  02B1   274 	MOVC5	#0,(SP),#0,#-SHQ_K_WRKSIZ,(SP) ; ZERO OUT THE WORK AREA
            16            00         02B4       
                          6E         02B6       
                                     02B7   275 	CALLBAK	GETQUAL			; GET COMMAND QUALIFIERS
                                     02C8   276 	CALLBAK	QUENAM			; RETREIVE THE QUEUE NAME
            6E       0120 CA     9E  02D9   277 	MOVAB	SQH$K_SIZE(R10),(SP)	; SET ADDRESS OF FIRST QUEUE HEADER
                                 93  02DE   278 SCAN0:	BITB	#<SHQ_M_DEVICE!SHQ_M_QUENAM>,- ; CHECK IF DEVICE QUEUE SCAN-
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page   8
X01             PRINT THE QUEUE ROUTINE                                                                                          (3)

         FA AD            11         02DF   279 		SHQ_W_BITS(FP)		; IS REQUIRED AT ALL
                          44     13  02E2   280 	BEQL	40$			; BR IF CAN'T NEED A DEVICE QUEUE LIST
         F8 AD            01     90  02E4   281 	MOVB	#1,SHQ_B_QCNT(FP)	; INIT COUNTER FOR ACB LOOP
            56            6E     D0  02E8   282 10$:	MOVL	(SP),R6			; GET ADDRESS OF NEXT QUEUE TO CHECK
                       FB AD     B4  02EB   283 	CLRW	SHQ_W_FLAGS(FP)		; RESET ALL FLAGS
         08 A6            00     E1  02EE   284 	BBC	#SMQ$V_INUSE,SMQ$B_FLAGS(R6),30$ ; BR IF THIS QUEUE IS EMPTY
                          2A         02F2       
         08 A6            01     E0  02F3   285 	BBS	#SMQ$V_DETJOB,SMQ$B_FLAGS(R6),30$ ; BR IF BATCH QUEUE
                          25         02F7       
         FA AD            04     E0  02F8   286 	BBS	#SHQ_V_DEVICE,SHQ_W_BITS(FP),20$ ; BR IF SHOWING ALL DEVICE Q'S
                          1D         02FC       
            50       0020'CF     7D  02FD   287 	MOVQ	W^QUENAM+CLI$Q_RQDESC,R0 ; GET DESCRIPTOR FOR QUEUE NAME
         FF A140          3A     91  0302   288 	CMPB	#^A/:/,-1(R1)[R0]	; IS LAST CHARACTER IN NAME COLON
                          02     12  0307   289 	BNEQ	15$			; BR IF NO
                          50     D7  0309   290 	DECL	R0			; REMOVE COLON FROM NAME
            52         10 A6     9E  030B   291 15$:	MOVAB	SMQ$T_NAME(R6),R2	; POINT AT QUEUE NAME
            82            50     91  030F   292 	CMPB	R0,(R2)+		; LENGTH'S THE SAME
                          09     12  0312   293 	BNEQ	30$			; BR IN NO - CAN'T MATCH!
            61            50     29  0314   294 	CMPC	R0,(R1),(R2)		; NAMES THE SAME?
                          62         0317       
                          03     12  0318   295 	BNEQ	30$			; BR IF NO - LOOK AT NEXT
                          0065   30  031A   296 20$:	BSBW	LSTDEV			; LIST A DEVICE QUEUE
            6E            20     C0  031D   297 30$:	ADDL	#SMQ$K_SIZE,(SP)	; ADVANCT TO THE NEXT QUEUE
                                 9D  0320   298 	ACBB	SQH$B_MAXQUE(R10),-	; HIGHEST TO GO
            01         06 AA         0321   299 		#1,SHQ_B_QCNT(FP),10$	; DO LOOP PROCESSING
            FFC0       F8 AD         0324       
                                     0328   300 ;
                                     0328   301 ; NOW SCAN BATCH QUEUES
                                     0328   302 ;
                                     0328   303  
                                     0328   304 40$:	ASSUME	SHQ_B_QCNT+1 EQ SHQ_B_LCNT ; 
         F8 AD            01     B0  0328   305 	MOVW	#1,SHQ_B_QCNT(FP)	; INIT COUNTERS
            6E       0120 CA     9E  032C   306 	MOVAB	SQH$K_SIZE(R10),(SP)	; RESET POINTER TO FIRST QUEUE
                                 93  0331   307 	BITB	#<SHQ_M_BATCH!SHQ_M_QUENAM>,- ; CHECK IF SCAN OF BATCH QUEUES-
         FA AD            05         0332   308 		SHQ_W_BITS(FP)		; IS NEEDED AT ALL
                          37     13  0335   309 	BEQL	80$			; BR IF NO SCAN IS REQUIRED
            56            6E     D0  0337   310 50$:	MOVL	(SP),R6			; GET ADDRESS OF NEXT QUEUE TP CHECK
                       FB AD     B4  033A   311 	CLRW	SHQ_W_FLAGS(FP)		; RESET ALL FLAGS
         08 A6            00     E1  033D   312 	BBC	#SMQ$V_INUSE,SMQ$B_FLAGS(R6),70$ ; BR IF THIS QUEUE IS EMPTY
                          21         0341       
         08 A6            01     E1  0342   313 	BBC	#SMQ$V_DETJOB,SMQ$B_FLAGS(R6),70$ ; BR IF NOT BATCH QUEUE
                          1C         0346       
         FA AD            02     E0  0347   314 	BBS	#SHQ_V_BATCH,SHQ_W_BITS(FP),60$ ; BR IF SHOWING ALL BATCH Q'S
                          14         034B       
            50       0020'CF     7D  034C   315 	MOVQ	W^QUENAM+CLI$Q_RQDESC,R0 ; GET DESCRIPTOR FOR QUEUE NAME
            52         10 A6     9E  0351   316 	MOVAB	SMQ$T_NAME(R6),R2	; POINT AT QUEUE NAME
            82            50     91  0355   317 	CMPB	R0,(R2)+		; LENGTH'S THE SAME
                          09     12  0358   318 	BNEQ	70$			; BR IN NO - CAN'T MATCH!
            61            50     29  035A   319 	CMPC	R0,(R1),(R2)		; NAMES THE SAME?
                          62         035D       
                          03     12  035E   320 	BNEQ	70$			; BR IF NO - LOOK AT NEXT
                          00A8   30  0360   321 60$:	BSBW	LSTBAQ			; LIST A BATCH QUEUE
            6E            20     C0  0363   322 70$:	ADDL	#SMQ$K_SIZE,(SP)	; ADVANCT TO THE NEXT QUEUE
                                 9D  0366   323 	ACBB	SQH$B_MAXQUE(R10),-	; HIGHEST TO GO
            01         06 AA         0367   324 		#1,SHQ_B_QCNT(FP),50$	; DO LOOP PROCESSING
            FFC9       F8 AD         036A       
         FA AD            07     E0  036E   325 80$:	BBS	#SHQ_V_QUEPRT,SHQ_W_BITS(FP),90$ ; BR IF A QUEUE WAS PRINTED
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page   9
X01             PRINT THE QUEUE ROUTINE                                                                                          (3)

                          0B         0372       
                     FE62 CF     9F  0373   326 	PUSHAB	NOQUE
                          0F     DD  0377   327 	PUSHL	#NOQSIZ
       0000'CF            02     FB  0379   328 	CALLS	#2,W^SHOW$PRINT_LINE	; TELL NO QUEUE FOUND
            50            01     9A  037E   329 90$:	MOVZBL	#1,R0			; SET SUCESSFUL STATUS
                                 04  0381   330 	RET				; BACK TO CLI
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page  10
X01             LIST DEVICE/BATCH QUEUE                                                                                          (4)

                                     0382   332 	.SBTTL	LIST DEVICE/BATCH QUEUE
                                     0382   333 ;++
                                     0382   334 ; FUNCTIONAL DESCRIPTION:
                                     0382   335 ;
                                     0382   336 ;	THIS ROUTINE IS CALLED TO PRINT THE CONTENTS OF A DEVICE OR
                                     0382   337 ;	A BTACH QUEUE.
                                     0382   338 ;
                                     0382   339 ; CALLING SEQUENCE:
                                     0382   340 ;
                                     0382   341 ;	BSB/JSB	LSTDEV			; LIST A DEVICE QUEUE
                                     0382   342 ;	BSB/JSB	LSTBAQ			; LIST A BATCH QUEUE
                                     0382   343 ;
                                     0382   344 ; INPUT PARAMETERS:
                                     0382   345 ;
                                     0382   346 ;	SHQ_L_CURQUE(FP) CONTAINS ADDRESS OF QUEUE HEADER TO LIST
                                     0382   347 ;
                                     0382   348 ; IMPLICIT INPUTS:
                                     0382   349 ;
                                     0382   350 ;	COMMAND LINE INPUT HAS BEEN PROCESSED
                                     0382   351 ;
                                     0382   352 ; OUTPUT PARAMETERS:
                                     0382   353 ;
                                     0382   354 ;	NONE
                                     0382   355 ;
                                     0382   356 ; IMPLICIT OUTPUTS:
                                     0382   357 ;
                                     0382   358 ;	THE CONTENTS OF THE QUEUE IS LISTED IN ACCORDANCE WITH PARAMETRS.
                                     0382   359 ;
                                     0382   360 ; COMPLETION CODES:
                                     0382   361 ;
                                     0382   362 ;	NONE
                                     0382   363 ;
                                     0382   364 ; SIDE EFFECTS:
                                     0382   365 ;
                                     0382   366 ;	NONE
                                     0382   367 ;
                                     0382   368 ;--
                                     0382   369  
            50       FE62 CF     9E  0382   370 LSTDEV:	MOVAB	NULL,R0			; GET COMMONLY USED PARAMETER
                          60     9F  0387   371 	PUSHAB	(R0)			; ASSUME NO FLAG IS DEFAULTED
         0A A6            00     E1  0389   372 	BBC	#SMQ$V_DEFFLAG,SMQ$B_CHAR(R6),10$ ; BR IF ASSUMED CORRECTLY
                          05         038D       
            6E       FE5F CF     9E  038E   373 	MOVAB	FLAG,(SP)		; SET ADDRESS OF STRING
                          60     9F  0393   374 10$:	PUSHAB	(R0)			; ASSUME NO DEFAULT FLAG
         0A A6            01     E1  0395   375 	BBC	#SMQ$V_DEFBRST,SMQ$B_CHAR(R6),20$ ; BR IF ASSUMED CORRECTLY
                          05         0399       
            6E       FE59 CF     9E  039A   376 	MOVAB	BURST,(SP)		; ELSE SET ADDRESS OF STRING
                          60     9F  039F   377 20$:	PUSHAB	(R0)			; ASSUME QUEUE IS NOT STOPPED
         08 A6            03     E1  03A1   378 	BBC	#SMQ$V_STOPPED,SMQ$B_FLAGS(R6),30$ ; BR IF ASSUMED CORRECTLY
                          05         03A5       
            6E       FE54 CF     9E  03A6   379 	MOVAB	STOPD,(SP)		; ELSE SET ADDRESS OF STRING
                          60     9F  03AB   380 30$:	PUSHAB	(R0)			; ASSUME QUEUE IS NOT PAUSED
         08 A6            02     E1  03AD   381 	BBC	#SMQ$V_PAUSED,SMQ$B_FLAGS(R6),40$ ; BR IF ASSUMED CORRECTLY
                          05         03B1       
            6E       FE51 CF     9E  03B2   382 	MOVAB	PAUSED,(SP)		; ELSE SET ADDRESS OF STRING
                          60     9F  03B7   383 40$:	PUSHAB	(R0)			; ASSUME DEVICE HAS NO LOWER CASE
         0A A6            03     E1  03B9   384 	BBC	#SMQ$V_LOWER,SMQ$B_CHAR(R6),50$ ; BR IF ASSUMED CORRECTLY
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page  11
X01             LIST DEVICE/BATCH QUEUE                                                                                          (4)

                          05         03BD       
            6E       FE4D CF     9E  03BE   385 	MOVAB	LOWER,(SP)		; ELSE SET ADDRESS OF STRING
                     FE4F CF     9F  03C3   386 50$:	PUSHAB	GENDEV			; ASSUME GENERIC DEVICE QUEUE
         08 A6            04     E0  03C7   387 	BBS	#SMQ$V_GENDEV,SMQ$B_FLAGS(R6),60$ ; BR IF ASSUMED CORRECTLY
                          0F         03CB       
            6E       FE4D CF     9E  03CC   388 	MOVAB	GENPRT,(SP)		; ASSUME GENERIC PRINTING IS ALLOWED
         08 A6            05     E1  03D1   389 	BBC	#SMQ$V_NOGENERIC,SMQ$B_FLAGS(R6),60$ ; BR IF GENERIC PRINTING IS OK
                          05         03D5       
            6E       FE4A CF     9E  03D6   390 	MOVAB	NOGEN,(SP)		; ELSE SHOW NO GENERIC PRINTING
                       09 A6     DD  03DB   391 60$:	PUSHL	SMQ$B_FORMS(R6)		; FORMS TYPE
                       10 A6     9F  03DE   392 	PUSHAB	SMQ$T_NAME(R6)		; ADDRESS OF QUEUE NAME
                     FE45 CF     9F  03E1   393 	PUSHAB	DEVICE			; INDICATE DEVICE IS PRINTER
         0A A6            02     E1  03E5   394 	BBC	#SMQ$V_TRMDEV,SMQ$B_CHAR(R6),70$ ; BR IF DEVICE NOT A TERMINAL
                          05         03E9       
            6E       FE43 CF     9E  03EA   395 	MOVAB	TERMIN,(SP)		; SET QUEUE AS A TERMINAL TYPE
                                     03EF   396 70$:	FAOUT	DEVHDR,9		; FORMAT AND OUTPUT DEVICE QUEUE HEADER
         0A A6            04     E1  03F5   397 	BBC	#SMQ$V_REDIRECT,SMQ$B_CHAR(R6),80$ ; BR IF QUEUE NOT REDIRECTED
                          0E         03F9       
         0C A6            5A     C1  03FA   398 	ADDL3	R10,SMQ$L_ASNSCT(R6),R0	; FIND ADDRESS OF QUEUE REDIRECTED TO
                          50         03FE       
                       10 A0     9F  03FF   399 	PUSHAB	SMQ$T_NAME(R0)		; ADDRESS OF THE NAME OF THAT QUEUE
                                     0402   400 	FAOUT	REDRCT,1		; OUTPUT MESSAGE
                          0037   31  0408   401 80$:	BRW	SHQ_DEV			; PRINT REST OF DEVICE QUEUE
                                     040B   402 ;
                                     040B   403 ; LSTBAQ - LIST A BATCH QUEUE
                                     040B   404 ;
                                     040B   405  
                     FDEF CF     9F  040B   406 LSTBAQ:	PUSHAB	STOPD			; ASSUME QUEUE IS STOPPED
         08 A6            03     E0  040F   407 	BBS	#SMQ$V_STOPPED,SMQ$B_FLAGS(R6),10$ ; BR IF ASSUMMED CORRECTLY
                          05         0413       
            6E       FDD0 CF     9E  0414   408 	MOVAB	NULL,(SP)		; SET NULL STRING
                     FE35 CF     9F  0419   409 10$:	PUSHAB	NO			; ASSUME NO SWAPPING FROM THIS QUEUE
         0A A6            04     E0  041D   410 	BBS	#SMQ$V_NOSWAP,SMQ$B_CHAR(R6),20$ ; BR IF ASSUMED CORRECTLY
                          05         0421       
            6E       FDC2 CF     9E  0422   411 	MOVAB	NULL,(SP)		; REPLACE WITH THE NULL STRING
                          00     EF  0427   412 20$:	EXTZV	#SMQ$V_INIPRI,#SMQ$S_INIPRI,- ; START BIT AND SIZE OF VIELD
         0A A6            04         0429   413 		SMQ$B_CHAR(R6),-(SP)	; GET DEFAULT STARTING PRIORITY
                          7E         042C       
                          03     12  042D   414 	BNEQ	30$			; BR IF NOT SYSTEM DEFAULT
                                     042F   415 ; ***
                                     042F   416 ; ***	MOVZBL	@#SYS$GB_DEFPRI,(SP)	; SET SYSTEM DEFAULT
                                     042F   417 ; ***
            6E            04     9A  042F   418 	MOVZBL	#4,(SP)			; *** SET TEMP DEFAULT ***
                       0B A6     DD  0432   419 30$:	PUSHL	SMQ$B_JOBLIM(R6)	; SET QUEUE JOB LIMIT IN MESSAGE
                       10 A6     9F  0435   420 	PUSHAB	SMQ$T_NAME(R6)		; SET ADDRESS OF QUEUE
                                     0438   421 	FAOUT	BATHDR,5		; FORMAT AND OUTPUT STRING
                                     043E   422 					; JOIN BATCH JOB LISTING ROUTINE
                                     043E   423 ;
                                     043E   424 ; ROUTINE TO PRINT ALL THE JOBS IN EITHER BATCH OR DEVICE QUEUES
                                     043E   425 ;
                                     043E   426 ; NOTE:	ON ENTRY, R6 CONTAINS THE ADDRESS OF THE QUEUE TO PRINT,
                                     043E   427 ;	WHICH IS THE ADDRESS OF THE CURRENT JOB LIST.
                                     043E   428 ;
                                     043E   429  
                                     043E   430 	ASSUME	SMQ$L_CURRENT EQ 0	; CHECK ASSUMPTION
                                     043E   431 SHQ_BAT:SETBIT	SHQ_V_BATQUE,SHQ_W_FLAGS(FP) ; MARK BATCH IN PROGRESS
                                     0442   432 SHQ_DEV:SETBIT	SHQ_V_QUEPRT,SHQ_W_BITS(FP) ; MARK A QUEUE AS PRINTED
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page  12
X01             LIST DEVICE/BATCH QUEUE                                                                                          (4)

                     0612'CF     9F  0447   433 	PUSHAB	W^SHQ_SRCQUE		; INIT COROUTINE TO SEARCH QUEUES
                          9E     16  044B   434 10$:	JSB	@(SP)+			; GET NEXT JOB FROM QUEUE
            4F            50     E9  044D   435 	BLBC	R0,30$			; BR WHEN NO MORE CURRENT JOBS
                       2C A4     7F  0450   436 	PUSHAQ	SJH$Q_TIME(R4)		; ADDRESS OF TIME JOB WAS QUEUE'D
                     FD91 CF     9F  0453   437 	PUSHAB	NULL			; NULL COUNTED ASCIC STRING
                          6E     DD  0457   438 	PUSHL	(SP)			; COPY NULL STRING FOR LOWER FIELD
                       0F A4     DD  0459   439 	PUSHL	SJH$B_PRTPRI(R4)	; PRIORITY JOB WAS QUEUE'D AT
                       34 A4     9F  045C   440 	PUSHAB	SJH$Q_JOBNAME(R4)	; ADDRESS OF JOB NAME FIELD
                          08     DD  045F   441 	PUSHL	#8			; SIZE OF THAT FIELD
                       18 A4     9F  0461   442 	PUSHAB	SJH$T_USERNAM(R4)	; AND THE USER THAT QUEUE'D THE FILE
                          0C     DD  0464   443 	PUSHL	#12			; SIZE OF THAT FIELD
                       04 A4     DD  0466   444 	PUSHL	SJH$W_JOBSEQ(R4)	; THE JOB SEQUENCE(ENTRY)NUMBER
                     FDCD CF     9F  0469   445 	PUSHAB	CURRNT			; INDICATE CURRENT JOB LISTING
            51       FC77 CF     9E  046D   446 	MOVAB	DEVJOB,R1		; ADDRESS OF HEADER STRING
         FB AD            01     E1  0472   447 	BBC	#SHQ_V_BATQUE,SHQ_W_FLAGS(FP),20$ ; BR IF NOT DOING BATCH
                          05         0476       
            51       FBF4 CF     9E  0477   448 	MOVAB	BATJOB,R1		; REAL FORMAT STRING
                                     047C   449 20$:	FAOUTC	R1,10			; FORMAT AND OUTPUT-COMPUTED FORMAT
         FB AD            01     E0  0480   450 	BBS	#SHQ_V_BATQUE,SHQ_W_FLAGS(FP),10$ ; BR IF DOING BATCH QUEUE
                          C6         0484       
            50         0E A4     9A  0485   451 	MOVZBL	SJH$B_COPYCNT(R4),R0	; GET JOB COPY COUNT
            51         0D A4     9A  0489   452 	MOVZBL	SJH$B_FORMS(R4),R1	; AND THE FORMS TYPE
                          05     12  048D   453 	BNEQ	24$			; BR IF NON-STANDARD FORMS TYPE
            01            50     91  048F   454 	CMPB	R0,#1			; PRINT 1 COPY?
                          08     13  0492   455 	BEQL	26$			; IF YES, DON'T PRINT THIS LINE
                          03     BB  0494   456 24$:	PUSHR	#^M<R0,R1>		; PUSH FAO PARAMETERS
                                     0496   457 	FAOUT	DVJOBX,2		; PRINT ADDITIONAL INFORMATION
                          FFAC   31  049C   458 26$:	BRW	10$			; TRY FOR NEXT ACTIVE JOB
                                     049F   459 ;
                                     049F   460 ; PRINT THE ACTIVE PRINT QUEUES
                                     049F   461 ;
            56       0120 CA     7E  049F   462 30$:	MOVAQ	SQH$K_SIZE(R10),R6	; POINT BEYOND ACTIVE QUEUES
            76            76     D1  04A4   463 40$:	CMPL	-(R6),-(R6)		; BACK UP TO NEXT QUEUE
                     0612'CF     9F  04A7   464 	PUSHAB	W^SHQ_SRCQUE		; INIT COROUTINE
                          9E     16  04AB   465 50$:	JSB	@(SP)+			; NEXT JOB PLEASE
            05            50     E9  04AD   466 	BLBC	R0,60$			; BR WHEN NO MORE IN THIS QUEUE
                          0039   30  04B0   467 	BSBW	CK_QUE			; PRINT IF MATCHES QUEUE AND USER
                          F6     11  04B3   468 	BRB	50$			; TRY FOR NEXT
            50         20 AA     9E  04B5   469 60$:	MOVAB	SQH$Q_QUEUE(R10),R0	; GET LOWEST QUEUE ADDRESS
            50            56     D1  04B9   470 	CMPL	R6,R0			; BACK UP TO LAST QUEUE
                          E6     1A  04BC   471 	BGTRU	40$			; BR IF MORE QUEUES TO DO
         EA AD            04     C1  04BE   472 	ADDL3	#SMQ$L_HOLDLST,SHQ_L_CURQUE(FP),R6 ; POINT A HOLD LIST
                          56         04C2       
                                     04C3   473 	SETBIT	SHQ_V_HOLDQUE,SHQ_W_FLAGS(FP) ; FLAG DOING HOLD QUEUE
                     0612'CF     9F  04C7   474 	PUSHAB	W^SHQ_SRCQUE		; INIT COROUTINE
                          9E     16  04CB   475 70$:	JSB	@(SP)+			; FIND THE NEXT FILE IN THE QUEUE
            05            50     E9  04CD   476 	BLBC	R0,80$			; BR IF NO MORE IN HOLD LIST
                          0024   30  04D0   477 	BSBW	CK_JOB			; PRINT IF PROPER USER
                          F6     11  04D3   478 	BRB	70$			; GET THE NEXT
            56         18 AA     9E  04D5   479 80$:	MOVAB	SQH$L_TIMQUE(R10),R6	; LIST HEAD FOR TIME QUEUE
                                     04D9   480 	SETBIT	SHQ_V_CLKQUE,SHQ_W_FLAGS(FP) ; FLAG DOING CLOCK QUEUE
                     0612'CF     9F  04DD   481 	PUSHAB	W^SHQ_SRCQUE		; INIT COROUTINE
                          9E     16  04E1   482 90$:	JSB	@(SP)+			; GET NEXT JOB
            05            50     E9  04E3   483 	BLBC	R0,100$			; BR WHEN NO MORE JOBS
                          0003   30  04E6   484 	BSBW	CK_QUE			; CHECK QUEUE AND USER
                          F6     11  04E9   485 	BRB	90$			; GET THE NEXT
                                 05  04EB   486 100$:	RSB				; ALL DONE WITH THIS QUEUE
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page  13
X01             LIST DEVICE/BATCH QUEUE                                                                                          (6)

                                     04EC   488 
                                     04EC   489 	.SBTTL	CHECK QUEUE AND JOB
                                     04EC   490 ;++
                                     04EC   491 ; FUNCTIONAL DESCRIPTION:
                                     04EC   492 ;
                                     04EC   493 ;	THIS ROUTINE IS CALLED TO CONDITIONALLY LIST A JOB
                                     04EC   494 ;	DEPENDING UPON QUEUE AND/OR USERNAME MATCH.
                                     04EC   495 ;
                                     04EC   496 ; CALLING SEQUENCE:
                                     04EC   497 ;
                                     04EC   498 ;	BSB/JSB	CK_QUE			; CHECK QUEUE AND USER
                                     04EC   499 ;	BSB/JSB	CK_JOB			; CHECK ONLY USERNAME
                                     04EC   500 ;
                                     04EC   501 ; INPUT PARAMETERS:
                                     04EC   502 ;
                                     04EC   503 ;	SHQ_L_CURQUE(FP) CONTAINS ADDRESS OF QUEUE HEADER TO LIST
                                     04EC   504 ;	(R4) CONTAINS AN IMAGE OF THE JOB INCLUDING ALL RECORDS
                                     04EC   505 ;
                                     04EC   506 ; IMPLICIT INPUTS:
                                     04EC   507 ;
                                     04EC   508 ;	COMMAND LINE INPUT HAS BEEN PROCESSED
                                     04EC   509 ;
                                     04EC   510 ; OUTPUT PARAMETERS:
                                     04EC   511 ;
                                     04EC   512 ;	NONE
                                     04EC   513 ;
                                     04EC   514 ; IMPLICIT OUTPUTS:
                                     04EC   515 ;
                                     04EC   516 ;	THE CONTENTS OF THE QUEUE IS LISTED IN ACCORDANCE WITH PARAMETRS.
                                     04EC   517 ;
                                     04EC   518 ; COMPLETION CODES:
                                     04EC   519 ;
                                     04EC   520 ;	NONE
                                     04EC   521 ;
                                     04EC   522 ; SIDE EFFECTS:
                                     04EC   523 ;
                                     04EC   524 ;	NONE
                                     04EC   525 ;
                                     04EC   526 ;--
                                     04EC   527 	.ENABL	LSB
                                     04EC   528  
         EA AD            5A     C3  04EC   529 CK_QUE:	SUBL3	R10,SHQ_L_CURQUE(FP),R0	; FIND QUEUE INDEX
                          50         04F0       
         06 A4            50     B1  04F1   530 	CMPW	R0,SJH$W_QINDEX(R4)	; IS THIS JOB IN CURRENT QUEUE
                          13     12  04F5   531 	BNEQ	5$			; IF NOT - DON'T LIST IT
                       F9 AD     96  04F7   532 CK_JOB:	INCB	SHQ_B_LCNT(FP)		; COUNT NUMBER OF INTERVIENING JOBS
         FA AD            01     E0  04FA   533 	BBS	#SHQ_V_ALL,SHQ_W_BITS(FP),10$ ; BR SHOWING ALL JOBS IN QUEUE
                          0C         04FE       
                          0C     29  04FF   534 	CMPC	#12,SJH$T_USERNAM(R4),- ; CHECK IF THE QUEUEE OF THIS JOB -
   00000000'9F         18 A4         0501   535 		@#CTL$T_USERNAME	; IS THE SAME AS CURRENT USER
                          01     13  0508   536 	BEQL	10$			; BR IF USER MATCHES
                                 05  050A   537 5$:	RSB				; IF NO MATCH, THEN RETURN
         F9 AD            01     83  050B   538 10$:	SUBB3	#1,SHQ_B_LCNT(FP),R0	; FIND NUMBER OF INTERVIENING JOBS
                          50         050F       
                          08     15  0510   539 	BLEQ	20$			; BR IF NO INTERVIENING JOBS
                          50     DD  0512   540 	PUSHL	R0			; PUSH COUNT OF INTERVIENING JOBS
                                     0514   541 	FAOUT	INTVJB,1		; FORMAT AND OUTPUT MESSAGE
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page  14
X01             CHECK QUEUE AND JOB                                                                                              (6)

                       F9 AD     94  051A   542 20$:	CLRB	SHQ_B_LCNT(FP)		; RESET INTERVIENING JOB COUNTER
                                     051D   543 	SETBIT	SHQ_V_FILPRT,SHQ_W_FLAGS(FP) ; MARK A FILE PRINTED NOW
                       2C A4     7F  0521   544 	PUSHAQ	SJH$Q_TIME(R4)		; TIME JOB WAS QUEUED
                     FCC0 CF     9F  0524   545 	PUSHAB	NULL			; ASSUME NORMAL CASE - NOT CLOCK QUEUE
         FB AD            03     E1  0528   546 	BBC	#SHQ_V_CLKQUE,SHQ_W_FLAGS(FP),30$ ; BR IF ASSUMMED CORRECTLY
                          05         052C       
            6E       FD3B CF     9E  052D   547 	MOVAB	UNTIL,(SP)		; INDICATE HOLDING UNTIL TIME
                     FCB2 CF     9F  0532   548 30$:	PUSHAB	NULL			; ASSUME LOWER CASE NO REQUIRED
         0C A4            01     E1  0536   549 	BBC	#SJH$V_LOWER,SJH$B_FLAGS(R4),35$ ; BR IF LOWER CASE NOT REQUIRED
                          05         053A       
            6E       FCD0 CF     9E  053B   550 	MOVAB	LOWER,(SP)		; SET MESSAGE TO INDICATE LOWER CASE
                       0F A4     DD  0540   551 35$:	PUSHL	SJH$B_PRTPRI(R4)	; PRIORITY JOB IS QUEUED AT
                       34 A4     9F  0543   552 	PUSHAB	SJH$Q_JOBNAME(R4)	; ADDRESS OF JOB NAME FIELD
                          08     DD  0546   553 	PUSHL	#8			; SIZE OF THAT FIELD
                       18 A4     9F  0548   554 	PUSHAB	SJH$T_USERNAM(R4)	; ADDRESS OF USER THAT QUEUED THE FILE
                          0C     DD  054B   555 	PUSHL	#12			; LENGTH OF THAT STRING
                       04 A4     DD  054D   556 	PUSHL	SJH$W_JOBSEQ(R4)	; THE SEQUENCE NUMBER OF THE JOB
                     FCEE CF     9F  0550   557 	PUSHAB	PENDG			; ASSUME A PENDING JOB
         FB AD            02     E1  0554   558 	BBC	#SHQ_V_HOLDQUE,SHQ_W_FLAGS(FP),40$ ; BR IF CORRECT ASSUMPTION
                          05         0558       
            6E       FCED CF     9E  0559   559 	MOVAB	HOLDG,(SP)		; INDICATE THE JOB IS BEING HELD
            51       FB86 CF     9E  055E   560 40$:	MOVAB	DEVJOB,R1		; ASSUME A DEVICE QUEUE
         FB AD            01     E1  0563   561 	BBC	#SHQ_V_BATQUE,SHQ_W_FLAGS(FP),60$ ; BR IF CORRECT ASSUMPTION
                          05         0567       
            51       FB03 CF     9E  0568   562 	MOVAB	BATJOB,R1		; GET BATCH HEADER FORMAT STRING
                                     056D   563 60$:	FAOUTC	R1,10			; FORMAT AND OUTPUT MESSAGE
         FB AD            01     E0  0571   564 	BBS	#SHQ_V_BATQUE,SHQ_W_FLAGS(FP),66$ ; BR IF DOING BATCH
                          17         0575       
            50         0E A4     9A  0576   565 	MOVZBL	SJH$B_COPYCNT(R4),R0	; GET THE JOB COPY COUNT
            51         0D A4     9A  057A   566 	MOVZBL	SJH$B_FORMS(R4),R1	; AND THE FORMS TYPE
                          05     12  057E   567 	BNEQ	64$			; BR IF NON-STANDARD FORMS TYPE
            50            01     91  0580   568 	CMPB	#1,R0			; MORE THAN DEFAULT COPY COUNT
                          08     13  0583   569 	BEQL	66$			; IF NO DON'T PRINT THIS LINE
                          03     BB  0585   570 64$:	PUSHR	#^M<R0,R1>		; PUSL FAO PARAMETERS
                                     0587   571 	FAOUT	DVJOBX,2		; PRINT EXTENDED DEVICE INFORMATION
         FA AD            06     E1  058D   572 66$:	BBC	#SHQ_V_FULL,SHQ_W_BITS(FP),80$ ; BR NOT DOING FULL LISTING
                          04         0591       
                          64     D5  0592   573 70$:	TSTL	(R4)			; ANY MORE RECORDS TO PRINT
                          01     12  0594   574 	BNEQ	90$			; BR IF YES
                                 05  0596   575 80$:	RSB				;
                                     0597   576  
                                     0597   577 ;
                                     0597   578 ; LIST THE JOB RECORDS FOR THIS JOB
                                     0597   579 ;
                                     0597   580  
            54         40 A4     9E  0597   581 90$:	MOVAB	SYM$K_RECSIZE(R4),R4	; POINT AT NEXT FOB FILE RECORD
            51       FBD0 CF     9E  059B   582 	MOVAB	PRTFL1,R1		; ASSUME PRINT JOB NORMAL CASE
            7E         3A A4     3C  05A0   583 	MOVZWL	SQR$W_PAGCNT(R4),-(SP)	; GET PAGE LIMIT COUNT
                          05     13  05A4   584 	BEQL	100$			; BR IF NORMAL RECORD
            51       FB8C CF     9E  05A6   585 	MOVAB	PRTFL2,R1		; SHOW PAGE LIMIT COUNT
            50       FC39 CF     9E  05AB   586 100$:	MOVAB	NULL,R0			; COMMONLY USED VALUE
                          60     9F  05B0   587 	PUSHAB	(R0)			; ASSUME NULL PARAMETER
         38 A4            04     E1  05B2   588 	BBC	#SQR$V_NOFEED,SQR$B_FLAGS(R4),110$ ; BR IF OPTION IS NULL
                          05         05B6       
            6E       FC9A CF     9E  05B7   589 	MOVAB	NOFEED,(SP)		; SET OPTION PRESENT TEXT
                          60     9F  05BC   590 110$:	PUSHAB	(R0)			; ASSUME NULL PARAMETER
         38 A4            05     E1  05BE   591 	BBC	#SQR$V_PAGHDR,SQR$B_FLAGS(R4),120$ ; BR IF OPTION IS NULL
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page  15
X01             CHECK QUEUE AND JOB                                                                                              (6)

                          05         05C2       
            6E       FC96 CF     9E  05C3   592 	MOVAB	PAGHDR,(SP)		; SET OPTION PRESENT TEXT
                          60     9F  05C8   593 120$:	PUSHAB	(R0)			; ASSUME NULL PARAMETER
         38 A4            03     E1  05CA   594 	BBC	#SQR$V_DOUBLE,SQR$B_FLAGS(R4),130$ ; BR IF OPTION IS NULL
                          05         05CE       
            6E       FC92 CF     9E  05CF   595 	MOVAB	DBLSPC,(SP)		; SET OPTION PRESENT TEXT
                          60     9F  05D4   596 130$:	PUSHAB	(R0)			; ASSUME NULL PARAMETER
         38 A4            01     E1  05D6   597 	BBC	#SQR$V_FLAGPAG,SQR$B_FLAGS(R4),140$ ; BR IF OPTION IS NULL
                          05         05DA       
            6E       FC12 CF     9E  05DB   598 	MOVAB	FLAG,(SP)		; SET OPTION PRESENT TEXT
                          60     9F  05E0   599 140$:	PUSHAB	(R0)			; ASSUME NULL PARAMETER
         38 A4            02     E1  05E2   600 	BBC	#SQR$V_BRSTPAG,SQR$B_FLAGS(R4),150$ ; BR IF OPTION IS NULL
                          05         05E6       
            6E       FC0C CF     9E  05E7   601 	MOVAB	BURST,(SP)		; SET OPTION PRESENT TEXT
                          60     9F  05EC   602 150$:	PUSHAB	(R0)			; ASSUME NULL PARAMETER
         38 A4            00     E1  05EE   603 	BBC	#SQR$V_DELETE,SQR$B_FLAGS(R4),160$ ; BR IF OPTION IS NULL
                          05         05F2       
            6E       FBF2 CF     9E  05F3   604 	MOVAB	DELETE,(SP)		; SET OPTION PRESENT TEXT
                       39 A4     DD  05F8   605 160$:	PUSHL	SQR$B_COPYCNT(R4)	; NUMBER OF COPIES
                       24 A4     9F  05FB   606 	PUSHAB	SQR$T_FILNAM(R4)	; FILE NAME
                       08 A4     9F  05FE   607 	PUSHAB	SQR$T_VOLNAM(R4)	; AND THE DISK
         FB AD            01     E1  0601   608 	BBC	#SHQ_V_BATQUE,SHQ_W_FLAGS(FP),170$ ; BR IF NOT DOING BATCH
                          05         0605       
            51       FA92 CF     9E  0606   609 	MOVAB	BATFIL,R1		; BATCH FILE FORMAT STRING
                                     060B   610 170$:	FAOUTC	R1,10			; PRINT THE LINE
                          FF80   31  060F   611 	BRW	70$			; TRY FOR NEXT FILE
                                     0612   612  
                                     0612   613 	.DSABL	LSB
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page  16
X01             CHECK QUEUE AND JOB                                                                                              (8)

                                     0612   615 
                                     0612   616 	.SBTTL	SEARCH QUEUE
                                     0612   617 ;++
                                     0612   618 ; FUNCTIONAL DESCRIPTION:
                                     0612   619 ;
                                     0612   620 ;	THIS ROUTINE IS CALLED TO SEARCH A QUEUE FOR THE NEXT JOB
                                     0612   621 ;	IT MONITORS THE QUEUE FOR CHANGE AND ATTEMPTS TO RESYNC IF
                                     0612   622 ;	THING CHANGE WHILE THE QUEUE IS BEING PRINTED.
                                     0612   623 ;
                                     0612   624 ; CALLING SEQUENCE:
                                     0612   625 ;
                                     0612   626 ;	BSB/JSB	SRCQUE			;
                                     0612   627 ;
                                     0612   628 ; INPUT PARAMETERS:
                                     0612   629 ;
                                     0612   630 ;	R6 CONTAINS THE ADDRESS OF THE QUEUE TO SEARCH
                                     0612   631 ;
                                     0612   632 ; IMPLICIT INPUTS:
                                     0612   633 ;
                                     0612   634 ;	COMMAND LINE INPUT HAS BEEN PROCESSED
                                     0612   635 ;
                                     0612   636 ; OUTPUT PARAMETERS:
                                     0612   637 ;
                                     0612   638 ;	R4 POINTS AT A COPY OF THE QUEUE JOB HEADER FOLLOWED BY THE
                                     0612   639 ;	ASSOCIATED RECORDS COPIED SEQUENTIALLY INTO A LOCAL BUFFER.
                                     0612   640 ;
                                     0612   641 ; IMPLICIT OUTPUTS:
                                     0612   642 ;
                                     0612   643 ;	REGISTERS R6 TO R9 HOLD SEARCH CONTEXT
                                     0612   644 ;		R6 IS HEADER OF THE QUEUE BEING SEARCHED
                                     0612   645 ;		R7 IS ADDRESS OF THE LINK TO THE LAST JOB FOUND
                                     0612   646 ;		R8 IS THE ADDRESS OF THE LAST JOB FOUND
                                     0612   647 ;		R9 <15-0> QUEUE SEQUENCE NUMBER LAST SEEN
                                     0612   648 ;		R9 <31-16> RESERVED FOR FUTURE USE
                                     0612   649 ;
                                     0612   650 ; COMPLETION CODES:
                                     0612   651 ;
                                     0612   652 ;	R0 LBC INDICATES NO MORE JOBS IN THE CURRENT QUEUE AND
                                     0612   653 ;		SUBROUTINE RETURN HAS BEEN ISSUED.
                                     0612   654 ;
                                     0612   655 ;	R0 LBS INDICATES A JOB HAS BEEN FOUND, R4 POINTS TO A
                                     0612   656 ;		COPY OF THE JOB AND ALL ITS RECORDS, AND
                                     0612   657 ;		COROUNTINE RETURN HAS BEEN ISSUED.
                                     0612   658 ;
                                     0612   659 ; SIDE EFFECTS:
                                     0612   660 ;
                                     0612   661 ;	THIS ROUTINE OPERATES AS A COROUTINE AND USES REGISTERS
                                     0612   662 ;	R6 TO R9 TO HOLD CONTEXT ABOUT THE CURRENT SEARCH.
                                     0612   663 ;	REGISTERS R0 TO R5 MAY BE USED WITHOUT PRESERVATION
                                     0612   664 ;	BY THE CALLEE. REGISTERS R6 TO R9 MUST BE PRESERVE
                                     0612   665 ;	BETWEEN COROUTINE RETURNS.
                                     0612   666 ;
                                     0612   667 ;--
                                     0612   668  
                                     0612   669 SHQ_SRCQUE:				; SEARCH QUEUE FOR NEXT JOB
            57            56     D0  0612   670 	MOVL	R6,R7			; COPY HEAD OF QUEUE AS LAST SEEN
                       F9 AD     94  0615   671 	CLRB	SHQ_B_LCNT(FP)		; ZERO INTERMEDIATE COUNTER
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page  17
X01             SEARCH QUEUE                                                                                                     (8)

                          58     7C  0618   672 	CLRQ	R8			; CLR LAST JOB INDEX AND SEQUENCE NUMBER
            59         1C AA     B1  061A   673 10$:	CMPW	SQH$W_QUESEQ(R10),R9	; HAS QUEUE CHANGED SINCE LOOK
                          24     13  061E   674 	BEQL	50$			; BR IF NO
            59         1C AA     B0  0620   675 	MOVW	SQH$W_QUESEQ(R10),R9	; SET NEW SEQUENCE
            50            56     D0  0624   676 	MOVL	R6,R0			; SET ADDRESS OF QUEUE HEADER
            57            50     D1  0627   677 20$:	CMPL	R0,R7			; FOUND THE PREVIOUS LINK ADDRESS?
                          EE     13  062A   678 	BEQL	10$			; IF YES - CONTINUE WITH SEARCH
            51            60     D0  062C   679 	MOVL	(R0),R1			; GET OFFSET TO NEXT JOB
                          74     13  062F   680 	BEQL	110$			; BR IF NOT FOUND - MUST RESTART
            51            5A     C0  0631   681 	ADDL	R10,R1			; FIND ADDRESS OF JOB
            58            51     D1  0634   682 	CMPL	R1,R8			; WAS THIS THE JOB JUST PROCESSED?
                          05     12  0637   683 	BNEQ	30$			; BR IF NO - KEEP LOOKING
            57            50     D0  0639   684 	MOVL	R0,R7			; PREVIOUS JOB IS GONE, SET NEW PREVIOUS
                          DC     11  063C   685 	BRB	10$			; CONTINUE SCAN
            50         08 A1     DE  063E   686 30$:	MOVAL	SJH$L_NEXTJOB(R1),R0	; SET LINK TO NEXT JOB
                          E3     11  0642   687 	BRB	20$			; CONTIUE TRYING TO FIND THE PLACE
            50            67     D0  0644   688 50$:	MOVL	(R7),R0			; GET LINK TO NEXT JOB
                          3E     13  0647   689 	BEQL	90$			; BR IF JOB IS GONE
            50            5A     C0  0649   690 	ADDL	R10,R0			; FIND ADDRESS OF JOB
            58            50     D1  064C   691 	CMPL	R0,R8			; IS THIS THE LAST ONE PROCESSED
                          06     12  064F   692 	BNEQ	60$			; IF NOT, THIS IS A NEW ONE, GET IT!
            57         08 A8     DE  0651   693 	MOVAL	SJH$L_NEXTJOB(R8),R7	; GET THE LINK ADDRESS TO NEXT JOB
                          ED     11  0655   694 	BRB	50$			; TRY FOR NEXT
                          50     DD  0657   695 60$:	PUSHL	R0			; SAVE ADDRESS OF NEXT JOB TO PROCESS
            53       0010'CF     D0  0659   696 	MOVL	W^BIGBUF,R3		; SET ADDRESS OF BUFFER
                          60     DD  065E   697 70$:	PUSHL	SQR$L_RECLINK(R0)	; SAVE INDEX TO NEXT RECORD
            60       0040 8F     28  0660   698 	MOVC	#SYM$K_RECSIZE,(R0),(R3); COPY RECORD INTO LOCAL BUFFER
                          63         0665       
            50            8E     D0  0666   699 	MOVL	(SP)+,R0		; GET INDEX TO NEXT QUEUE RECORD IN JOB
                          05     13  0669   700 	BEQL	80$			; BR IF NO MORE
            50            5A     C0  066B   701 	ADDL	R10,R0			; FIND ADDRESS
                          EE     11  066E   702 	BRB	70$			; COPY THAT ONE ALSO
                          02     BA  0670   703 80$:	POPR	#^M<R1>			; GET THE ADDRESS OF THE JOB HEADER BACK
            59         1C AA     B1  0672   704 	CMPW	SQH$W_QUESEQ(R10),R9	; HAS THE QUEUE CHANGED RECENTLY?
                          A2     12  0676   705 	BNEQ	10$			; BR IF YES - RESYNC THIS OPERATION
            58            51     D0  0678   706 	MOVL	R1,R8			; SET ADDRESS OF JOB PROCESSED
                          50     D6  067B   707 	INCL	R0			; SET NORMAL STATUS
            54       0010'CF     D0  067D   708 	MOVL	W^BIGBUF,R4		; SET ADDRESS OF BUFFER
                          9E     16  0682   709 	JSB	@(SP)+			; COROUTINE RETURN
                          FF93   31  0684   710 	BRW	10$			; GET NEXT
                                 05  0687   711 90$:	RSB				; NO MORE JOBS
                                     0688   712 ;
                                     0688   713 ; QUEUE CAN NOT BE RESYNCED
                                     0688   714 ;
45 20 43 4E 59 53 20 45 55 45 55 51  0688   715 100$:	.ASCII	\QUEUE SYNC ERROR - RESTARTING\
41 54 53 45 52 20 2D 20 52 4F 52 52  0694       
                     47 4E 49 54 52  06A0       
                                     06A5   716 101$:
                                     06A5   717  
                       E0 AF     9F  06A5   718 110$:	PUSHAB	100$			; ADDRESS OF MESSAGE
                          1D     DD  06A8   719 	PUSHL	#<101$-100$>		; SIZE OF LESSAGE
   00000000'EF            02     FB  06AA   720 	CALLS	#2,SHOW$PRINT_LINE	; TELL THE USER WHATS HAPPENING
                          FBF4   31  06B1   721 	BRW	RESTART			; RESTART THE WHOLE THING
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page  18
X01             SEARCH QUEUE                                                                                                     (9)

                                     06B4   723  
                                     06B4   724 
                                     06B4   725 	.SBTTL	FORMAT AND OUTPUT MESSAGE
                                     06B4   726 ;++
                                     06B4   727 ; FUNCTIONAL DESCRIPTION:
                                     06B4   728 ;
                                     06B4   729 ;	THIS ROUTINE IS CALLED TO FORMAT AND OUTPUT A MESSAGE
                                     06B4   730 ;
                                     06B4   731 ; CALLING SEQUENCE:
                                     06B4   732 ;
                                     06B4   733 ; FOR FAOUT0:
                                     06B4   734 ;
                                     06B4   735 ;	JSB/BSB	FAOUT0			;
                                     06B4   736 ;	.WORD	<FMTSTR-.-2>		; SELF RELATIVE POINTER TO FORMAT STRING
                                     06B4   737 ;	.BYTE	<NUMARG+3>		; ARGUMENT CAOUNT FOR FAO
                                     06B4   738 ;
                                     06B4   739 ; FOR FAOUT1:
                                     06B4   740 ;
                                     06B4   741 ;	MOVAB	FMTSTR,R1		; ADDRESS OF FORMAT STRING
                                     06B4   742 ;	JSB/BSB	FAOUT1			;
                                     06B4   743 ;	.BYTE	<NUMARG+3>		; ARGUMENT COUNT TO FAO
                                     06B4   744 ;
                                     06B4   745 ; INPUT PARAMETERS:
                                     06B4   746 ;
                                     06B4   747 ;	4(SP) IS THE ARGUMENT LIST FOR FAO CALL
                                     06B4   748 ;
                                     06B4   749 ; IMPLICIT INPUTS:
                                     06B4   750 ;
                                     06B4   751 ;	NONE
                                     06B4   752 ;
                                     06B4   753 ; OUTPUT PARAMETERS:
                                     06B4   754 ;
                                     06B4   755 ;	NONE
                                     06B4   756 ;
                                     06B4   757 ; IMPLICIT OUTPUTS:
                                     06B4   758 ;
                                     06B4   759 ;	THE LINE IS FORMATED AND PRINTED
                                     06B4   760 ;
                                     06B4   761 ; COMPLETION CODES:
                                     06B4   762 ;
                                     06B4   763 ;	NONE
                                     06B4   764 ;
                                     06B4   765 ; SIDE EFFECTS:
                                     06B4   766 ;
                                     06B4   767 ;	NONE
                                     06B4   768 ;
                                     06B4   769 ;--
                                     06B4   770 	.ENABL	LSB
                                     06B4   771  
                          08     BA  06B4   772 FAOUT1:	POPR	#^M<R3>			; GET PC OF CALLER
                          08     11  06B6   773 	BRB	10$			; JOIN COMMON CODE
                                     06B8   774  
                          08     BA  06B8   775 FAOUT0:	POPR	#^M<R3>			;  GET PC OF CALLER
            51            83     32  06BA   776 	CVTWL	(R3)+,R1		; GET OFFSET TO FORMAT STRING
            51            53     C0  06BD   777 	ADDL	R3,R1			; FIND ADDRESS OF FORMAT STRING
            50         EE AD     7E  06C0   778 10$:	MOVAQ	SHQ_Q_STRDESC(FP),R0	; SET ADDRESS OF WORD QUADWORD DESC
            60            81     9A  06C4   779 	MOVZBL	(R1)+,(R0)		; SET LENGTH OF STRING
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page  19
X01             FORMAT AND OUTPUT MESSAGE                                                                                        (9)

         04 A0            51     D0  06C7   780 	MOVL	R1,4(R0)		; AND ADDRESS OF THE STRING
            51            83     9A  06CB   781 	MOVZBL	(R3)+,R1		; GET FAO ARGUMENT COUNT
                     0000'CF     7F  06CE   782 	PUSHAQ	W^SHOW$GQ_OUT_DSC	; ADDRESS OF RESULT BUFFER DESCRIPTOR
                       02 A0     3F  06D2   783 	PUSHAW	2(R0)			; ADDRESS OF WORD TO STORE FINAL LENGTH
                          60     7F  06D5   784 	PUSHAQ	(R0)			; INPUT DESCRIPTOR FOR FORMAT STRING
   00000000'9F            51     FB  06D7   785 	CALLS	R1,@#SYS$FAO		; FORMAT THE MESSAGE
                     0004'CF     DD  06DE   786 	PUSHL	W^SHOW$GQ_OUT_DSC+4	; PUSH ADDRESS OF LINE BUFFER
                       F0 AD     DD  06E2   787 	PUSHL	SHQ_Q_STRDESC+2(FP)	; RESULTANT LENGTH
   00000000'EF            02     FB  06E5   788 	CALLS	#2,SHOW$PRINT_LINE	; PRINT THE FORMATED LINE
                          63     17  06EC   789 	JMP	(R3)			; RETURN FROM SUBROUTINE
                                     06EE   790  
                                     06EE   791 	.DSABL	LSB
                                     06EE   792  
                                     06EE   793 	.END
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page  20
SYMBOL TABLE                                                                                                                     (9)

$$$            = 00000004            CLI$K_OUTPUT1  = 00000020            CLI$L_RQVALU     0000000C            
$$$GBL         = 00000000            CLI$K_OUTPUT2  = 00000021            CLI$L_USRVAL     00000014            
$CLI.          = 000000CF R     03   CLI$K_OUTPUT3  = 00000022            CLI$L_WORKAREA   00000000            
$CLI..         = 000000E7 R     03   CLI$K_OUTPUT4  = 00000023            CLI$M_ABSADR   = 00000002            
$QUALNUM$      = 00000002            CLI$K_OUTSPEC  = 00000002            CLI$M_ALLOCCUR = 00000001            
BATFIL           0000009C R     04   CLI$K_PARDONE  = 00000003            CLI$M_BATCH    = 00000008            
BATHDR           00000031 R     04   CLI$K_QDBITS     00000014            CLI$M_CONCATINP= 00000002            
BATJOB           0000006F R     04   CLI$K_QUALDEF    00000014            CLI$M_DBGEXCP  = 00010000            
BIGBUF           00000010 R     03   CLI$K_REQDESC    0000001C            CLI$M_DBGTRU   = 00000002            
BIT...         = 00000045            CLI$K_SHDV_ALLO= 00000001            CLI$M_DEBUG    = 00000001            
BURST            000001F7 R     04   CLI$K_SHDV_BRIE= 00000002            CLI$M_DUMMY    = 00000002            
CK_JOB           000004F7 R     04   CLI$K_SHDV_FULL= 00000003            CLI$M_EXPNAM   = 00000004            
CK_QUE           000004EC R     04   CLI$K_SHDV_MOUN= 00000004            CLI$M_INDIRECT = 00000010            
CLI$A_ABSACT     00000014            CLI$K_SHLG_ALL = 00000004            CLI$M_KEYVALU  = 00000002            
CLI$A_ERRACT     00000004            CLI$K_SHLG_GROU= 00000002            CLI$M_LASTVAL  = 00000001            
CLI$A_FLSACT     00000010            CLI$K_SHLG_PROC= 00000003            CLI$M_MOREINP  = 00000004            
CLI$A_IMGFILED   00000010            CLI$K_SHLG_SYST= 00000001            CLI$M_MOREVALS = 00000001            
CLI$A_IMGHDADR   0000000C            CLI$K_SHOW_DAYT= 00000001            CLI$M_PARMDEF  = 00000008            
CLI$A_PROGXFER   00000004            CLI$K_SHOW_DEFA= 00000003            CLI$M_PARMPRS  = 00000001            
CLI$A_PRSACT     00000010            CLI$K_SHOW_DEVI= 0000000A            CLI$M_PARMREQ  = 00000001            
CLI$A_QDVALADR   00000008            CLI$K_SHOW_LOGI= 00000004            CLI$M_QDEXPA   = 00000004            
CLI$A_QUALST     00000018            CLI$K_SHOW_MAGT= 00000012            CLI$M_QDUSRV   = 00000002            
CLI$A_RQADDR     0000000C            CLI$K_SHOW_NETW= 00000010            CLI$M_QUALEXP  = 00000002            
CLI$A_TRUACT     0000000C            CLI$K_SHOW_PRIN= 0000000F            CLI$M_QUALTRU  = 00000001            
CLI$A_UTILSERV   00000008            CLI$K_SHOW_PROC= 0000000C            CLI$M_TRMVRBLV = 00000300            
CLI$B_BITNUM     00000001            CLI$K_SHOW_PROT= 00000005            CLI$M_VERIFY   = 00000004            
CLI$B_QDBLKSIZ   00000000            CLI$K_SHOW_QUEU= 00000006            CLI$M_VFYINP   = 00000020            
CLI$B_QDCODE     00000001            CLI$K_SHOW_RMS_= 00000011            CLI$Q_QDVALDESC  00000004            
CLI$B_QDFLGS     00000002            CLI$K_SHOW_STAT= 0000000B            CLI$Q_RQDESC     00000008            
CLI$B_QDSTAT     00000003            CLI$K_SHOW_SYMB= 00000007            CLI$S_PRITYP   = 00000004            
CLI$B_RQFLGS     00000002            CLI$K_SHOW_SYST= 0000000D            CLI$S_SUBTYP   = 00000004            
CLI$B_RQINDX     00000001            CLI$K_SHOW_TERM= 0000000E            CLI$S_TRMVRBLV = 00000002            
CLI$B_RQSTAT     00000003            CLI$K_SHOW_TIME= 00000002            CLI$V_ABSADR   = 00000001            
CLI$B_RQTYPE     00000000            CLI$K_SHOW_TRAN= 00000008            CLI$V_ALLOCCUR = 00000000            
CLI$C_QDBITS     00000014            CLI$K_SHOW_WORK= 00000009            CLI$V_BATCH    = 00000003            
CLI$C_QUALDEF    00000014            CLI$K_SHPR_ACCO= 00000002            CLI$V_CONCATINP= 00000001            
CLI$C_REQDESC    0000001C            CLI$K_SHPR_ALL = 00000005            CLI$V_DBGEXCP  = 00000010            
CLI$C_WORKAREA   00000080            CLI$K_SHPR_PRIV= 00000003            CLI$V_DBGTRU   = 00000001            
CLI$K_ASCIIVAL = 00000041            CLI$K_SHPR_QUOT= 00000001            CLI$V_DEBUG    = 00000000            
CLI$K_CLISERV  = 00000005            CLI$K_SHPR_SUBP= 00000004            CLI$V_DUMMY    = 00000001            
CLI$K_ENDPRM1  = 00000030            CLI$K_SHQU_ALL = 00000001            CLI$V_EXPNAM   = 00000002            
CLI$K_ENDPRM2  = 00000031            CLI$K_SHQU_BATC= 00000002            CLI$V_INDIRECT = 00000004            
CLI$K_ENDPRM3  = 00000032            CLI$K_SHQU_BRIE= 00000003            CLI$V_KEYVALU  = 00000001            
CLI$K_ENDPRM4  = 00000033            CLI$K_SHQU_DEVI= 00000004            CLI$V_LASTVAL  = 00000000            
CLI$K_FILSPEC  = 00000044            CLI$K_SHQU_ENTR= 00000005            CLI$V_MOREINP  = 00000002            
CLI$K_GETCMD   = 00000001            CLI$K_SHQU_FULL= 00000006            CLI$V_MOREVALS = 00000000            
CLI$K_GETOPT   = 00000003            CLI$K_SHSS_PROC= 00000001            CLI$V_PARMDEF  = 00000003            
CLI$K_GETQUAL  = 00000002            CLI$K_SHSY_ALL = 00000003            CLI$V_PARMPRS  = 00000000            
CLI$K_INITPRS  = 00000000            CLI$K_SHSY_GLOB= 00000001            CLI$V_PARMREQ  = 00000000            
CLI$K_INPSPEC  = 00000001            CLI$K_SHSY_LOCA= 00000002            CLI$V_PRITYP   = 00000004            
CLI$K_INPUT1   = 00000010            CLI$K_SHTE_PERM= 00000001            CLI$V_QDEXPA   = 00000002            
CLI$K_INPUT2   = 00000011            CLI$K_UTILOPR  = 00000000            CLI$V_QDUSRV   = 00000001            
CLI$K_INPUT3   = 00000012            CLI$K_VALCONV  = 00000004            CLI$V_QUALEXP  = 00000001            
CLI$K_INPUT4   = 00000013            CLI$K_WORKAREA   00000080            CLI$V_QUALTRU  = 00000000            
CLI$K_KEYVAL   = 00000043            CLI$L_CLIFLAG    00000018            CLI$V_SUBTYP   = 00000000            
CLI$K_KEYWORD  = 00000042            CLI$L_INIARGCNT  00000000            CLI$V_TRMVRBLV = 00000008            
CLI$K_NUMERVAL = 00000040            CLI$L_LINKFLAG   00000014            CLI$V_VERIFY   = 00000002            
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page  21
SYMBOL TABLE                                                                                                                     (9)

CLI$V_VFYINP   = 00000005            QUA_B_PARMCNT    00000008            SHQ_M_BATCH    = 00000004            
CLI$W_QDVALSIZ   00000004            QUA_G_CHNGLST    00000006            SHQ_M_BRIEF    = 00000008            
CLI$W_RQSIZE     00000008            QUA_M_BATDEF   = 00000100            SHQ_M_DEVICE   = 00000010            
CLI$W_SERVCOD    00000001            QUA_M_CHNGLIST = 00000001            SHQ_M_ENTRY    = 00000020            
CTL$T_USERNAME   ********   X   04   QUA_M_DEFTRUE  = 00000080            SHQ_M_FULL     = 00000040            
CURRNT           0000023A R     04   QUA_M_FILE     = 00000004            SHQ_M_QUENAM   = 00000001            
DBLSPC           00000265 R     04   QUA_M_IMAGE    = 00000400            SHQ_M_QUEPRT   = 00000080            
DELETE           000001E9 R     04   QUA_M_INTDEF   = 00000200            SHQ_Q_STRDESC    FFFFFFEE            
DEVHDR           000000B1 R     04   QUA_M_KEYVAL   = 00004000            SHQ_SRCQUE       00000612 R     04   
DEVICE           0000022A R     04   QUA_M_LOCALKEY = 00000002            SHQ_V_ALL      = 00000001            
DEVJOB           000000E8 R     04   QUA_M_NEG      = 00000040            SHQ_V_BATCH    = 00000002            
DIR...         = FFFFFFFF            QUA_M_ONEVAL   = 00002000            SHQ_V_BATQUE   = 00000001            
DVJOBX           00000117 R     04   QUA_M_OUTPUT   = 00000800            SHQ_V_BRIEF    = 00000003            
FAOUT0           000006B8 R     04   QUA_M_PARM     = 00000010            SHQ_V_CLKQUE   = 00000003            
FAOUT1           000006B4 R     04   QUA_M_VAL      = 00000020            SHQ_V_DEVICE   = 00000004            
FLAG             000001F1 R     04   QUA_M_VALREQ   = 00001000            SHQ_V_ENTRY    = 00000005            
GBL...         = 00000000            QUA_M_VERB     = 00000008            SHQ_V_FILPRT   = 00000000            
GBLSCPAR         00000011 R     04   QUA_S_MAXPARM  = 00000004            SHQ_V_FULL     = 00000006            
GENDEV           00000216 R     04   QUA_S_MINPARM  = 00000004            SHQ_V_HOLDQUE  = 00000002            
GENPRT           0000021D R     04   QUA_V_BATDEF   = 00000008            SHQ_V_QUENAM   = 00000000            
GETQUAL          00000034 R     03   QUA_V_CHNGLIST = 00000000            SHQ_V_QUEPRT   = 00000007            
HOLDG            0000024A R     04   QUA_V_DEFTRUE  = 00000007            SHQ_W_BITS       FFFFFFFA            
INADR            00000000 R     03   QUA_V_FILE     = 00000002            SHQ_W_FLAGS      FFFFFFFB            
INTVJB           0000019D R     04   QUA_V_IMAGE    = 0000000A            SHQ_W_SPARE      FFFFFFF6            
LOWER            0000020F R     04   QUA_V_INTDEF   = 00000009            SJH$B_COPYCNT    0000000E            
LSTBAQ           0000040B R     04   QUA_V_KEYVAL   = 0000000E            SJH$B_FLAGS      0000000C            
LSTDEV           00000382 R     04   QUA_V_LOCALKEY = 00000001            SJH$B_FORMS      0000000D            
NO               00000252 R     04   QUA_V_MAXPARM  = 00000004            SJH$B_PRTPRI     0000000F            
NOFEED           00000255 R     04   QUA_V_MINPARM  = 00000000            SJH$L_NEXTJOB    00000008            
NOGEN            00000224 R     04   QUA_V_NEG      = 00000006            SJH$L_PARMBLK    0000003C            
NOQSIZ         = 0000000F            QUA_V_ONEVAL   = 0000000D            SJH$L_PROCID     00000010            
NOQUE            000001D9 R     04   QUA_V_OUTPUT   = 0000000B            SJH$L_RECLINK    00000000            
NULL             000001E8 R     04   QUA_V_PARM     = 00000004            SJH$L_UIC        00000014            
PAGHDR           0000025D R     04   QUA_V_VAL      = 00000005            SJH$M_HOLD     = 00000001            
PAUSED           00000207 R     04   QUA_V_VALREQ   = 0000000C            SJH$M_JOBABORT = 00000004            
PENDG            00000242 R     04   QUA_V_VERB     = 00000003            SJH$M_LOWER    = 00000002            
PRO_B_FLAGS      00000001            QUA_W_FLAGS      00000003            SJH$Q_ACNTNAM    00000024            
PRO_B_PROMPT     00000000            QUA_W_PROMPT     00000009            SJH$Q_JOBNAME    00000034            
PRO_K_LENGTH     00000002            QUA_W_QUALIST    00000006            SJH$Q_TIME       0000002C            
PRO_M_CONCAT   = 00000001            QUENAM           00000018 R     03   SJH$T_USERNAM    00000018            
PRO_M_IMPCAT   = 00000002            REDRCT           000001BC R     04   SJH$V_HOLD     = 00000000            
PRO_M_LIST     = 00000004            RESTART          000002A8 R     04   SJH$V_JOBABORT = 00000002            
PRO_M_OPTION   = 00000008            RETADR           00000008 R     03   SJH$V_LOWER    = 00000001            
PRO_M_REQ      = 00000010            SCAN0            000002DE R     04   SJH$W_JOBSEQ     00000004            
PRO_M_STRING   = 00000020            SECNAM           00000000 R     04   SJH$W_MBCHAN     0000000D            
PRO_V_CONCAT   = 00000000            SHOW$A_CLIWORK   ********   X   04   SJH$W_QINDEX     00000006            
PRO_V_IMPCAT   = 00000001            SHOW$GQ_OUT_DSC  ********   X   04   SMO$K_BRSTPAG  = 00000002            
PRO_V_LIST     = 00000002            SHOW$PRINT_LINE  ********   X   04   SMO$K_COPIES   = 0000000A            
PRO_V_OPTION   = 00000003            SHOW$QUEUE       00000273 RG    04   SMO$K_CURFORM  = 00000040            
PRO_V_REQ      = 00000004            SHQUALS          00000050 R     03   SMO$K_DEFBRST  = 00000046            
PRO_V_STRING   = 00000005            SHQ_BAT          0000043E R     04   SMO$K_DEFFLAG  = 00000048            
PRTFL1           0000016F R     04   SHQ_B_LCNT       FFFFFFF9            SMO$K_DELETE   = 00000001            
PRTFL2           00000136 R     04   SHQ_B_QCNT       FFFFFFF8            SMO$K_DETJOB   = 00000043            
QUA_B_DEFVAL     00000002            SHQ_DEV          00000442 R     04   SMO$K_DISWAP   = 0000004E            
QUA_B_IMAGE      00000005            SHQ_K_WRKSIZ     FFFFFFEA            SMO$K_DOUBLE   = 00000007            
QUA_B_INDEX      00000001            SHQ_L_CURQUE     FFFFFFEA            SMO$K_FLAGPAG  = 00000004            
QUA_B_OFFSET     00000000            SHQ_M_ALL      = 00000002            SMO$K_FORMTYPE = 00000024            
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page  22
SYMBOL TABLE                                                                                                                     (9)

SMO$K_GENDEV   = 00000044            SMQ$V_INUSE    = 00000000            SQR$W_DIRNUM     0000001E            
SMO$K_GENPRT   = 00000041            SMQ$V_LOWER    = 00000003            SQR$W_DIRSEQ     00000020            
SMO$K_HOLD     = 00000021            SMQ$V_NOGENERIC= 00000005            SQR$W_DIRVOL     00000022            
SMO$K_INIPRI   = 0000004D            SMQ$V_NOSWAP   = 00000004            SQR$W_FILNUM     00000018            
SMO$K_JOBCOPY  = 00000023            SMQ$V_PAUSED   = 00000002            SQR$W_FILSEQ     0000001A            
SMO$K_JOBLIM   = 0000004C            SMQ$V_REDIRECT = 00000004            SQR$W_JOBSEQ     00000004            
SMO$K_JOBNAME  = 00000027            SMQ$V_STOPPED  = 00000003            SQR$W_PAGCNT     0000003A            
SMO$K_JOBPRI   = 00000022            SMQ$V_TRMDEV   = 00000002            SQR$W_RECID      00000006            
SMO$K_LOWER    = 00000025            SMR$K_ABORT    = 0000000E            SQR$W_RELVOL     0000001C            
SMO$K_NEXTJOB  = 00000060            SMR$K_ADDFIL   = 0000000A            STOPD            000001FE R     04   
SMO$K_NOBRSTPAG= 00000003            SMR$K_ALTER    = 0000000D            SYM$C_RECSIZE    00000040            
SMO$K_NODEFBRST= 00000047            SMR$K_CLSJOB   = 0000000B            SYM$K_RECSIZE    00000040            
SMO$K_NODEFFLAG= 00000049            SMR$K_CREJOB   = 00000009            SYS$EXIT         ********   X   04   
SMO$K_NOFEED   = 00000008            SMR$K_DELETE   = 00000001            SYS$EXPREG       ********   X   04   
SMO$K_NOFLAGPAG= 00000005            SMR$K_DETINIT  = 00000010            SYS$FAO          ********   X   04   
SMO$K_NOGENDEV = 00000045            SMR$K_ENTER    = 00000008            SYS$MGBLSC       ********   X   04   
SMO$K_NOGENPRT = 00000042            SMR$K_INITIAL  = 00000000            TERMIN           00000231 R     04   
SMO$K_NOLOWER  = 00000028            SMR$K_JUSTIFY  = 00000006            UNTIL            0000026C R     04   
SMO$K_NOTRMDEV = 0000004B            SMR$K_MERGE    = 00000004            _$$_           = 000000EF            
SMO$K_PAGCNT   = 00000009            SMR$K_PAUSE    = 00000003            
SMO$K_PAGHDR   = 00000006            SMR$K_REDIRECT = 00000005            
SMO$K_PARAMS   = 00000026            SMR$K_RELEASE  = 0000000F            
SMO$K_REQUEUE  = 00000070            SMR$K_RMVJOB   = 0000000C            
SMO$K_RLSTIM   = 00000020            SMR$K_START    = 00000002            
SMO$K_SPCCNT   = 00000062            SMR$K_STOP     = 00000007            
SMO$K_TOPOFILE = 00000061            SMR$K_SYNCJOB  = 00000011            
SMO$K_TRMDEV   = 0000004A            SQH$B_FLAGS      00000004            
SMQ$B_CHAR       0000000A            SQH$B_MAXQUE     00000006            
SMQ$B_FLAGS      00000008            SQH$B_NUMQUE     00000005            
SMQ$B_FORMS      00000009            SQH$B_SPARE      00000007            
SMQ$B_JOBCNT     00000009            SQH$C_SIZE       00000120            
SMQ$B_JOBLIM     0000000B            SQH$K_SIZE       00000120            
SMQ$C_SIZE       00000020            SQH$L_FIRSTREC   00000008            
SMQ$K_SIZE       00000020            SQH$L_FREEREC    00000000            
SMQ$L_ASNSCT     0000000C            SQH$L_LASTREC    00000010            
SMQ$L_CURRENT    00000000            SQH$L_NEXTREC    0000000C            
SMQ$L_HOLDLST    00000004            SQH$L_OPENJOB    00000014            
SMQ$M_DEFBRST  = 00000002            SQH$L_TIMQUE     00000018            
SMQ$M_DEFFLAG  = 00000001            SQH$Q_QUEUE      00000020            
SMQ$M_DETJOB   = 00000002            SQH$W_QUESEQ     0000001C            
SMQ$M_GENDEV   = 00000010            SQR$B_COPYCNT    00000039            
SMQ$M_INIPRI   = 0000000F            SQR$B_FLAGS      00000038            
SMQ$M_INUSE    = 00000001            SQR$L_RECLINK    00000000            
SMQ$M_LOWER    = 00000008            SQR$M_BRSTPAG  = 00000004            
SMQ$M_NOGENERIC= 00000020            SQR$M_DELETE   = 00000001            
SMQ$M_NOSWAP   = 00000010            SQR$M_DOUBLE   = 00000008            
SMQ$M_PAUSED   = 00000004            SQR$M_FLAGPAG  = 00000002            
SMQ$M_REDIRECT = 00000010            SQR$M_NOFEED   = 00000010            
SMQ$M_STOPPED  = 00000008            SQR$M_PAGHDR   = 00000020            
SMQ$M_TRMDEV   = 00000004            SQR$T_FILNAM     00000024            
SMQ$S_INIPRI   = 00000004            SQR$T_VOLNAM     00000008            
SMQ$T_NAME       00000010            SQR$V_BRSTPAG  = 00000002            
SMQ$V_DEFBRST  = 00000001            SQR$V_DELETE   = 00000000            
SMQ$V_DEFFLAG  = 00000000            SQR$V_DOUBLE   = 00000003            
SMQ$V_DETJOB   = 00000001            SQR$V_FLAGPAG  = 00000001            
SMQ$V_GENDEV   = 00000004            SQR$V_NOFEED   = 00000004            
SMQ$V_INIPRI   = 00000000            SQR$V_PAGHDR   = 00000005            
SHOWQUE         - SHOW THE SYSTEM QUEUES                         21-AUG-1978 19:25:01   VAX-11 MACRO X0.3-11               Page  23
PROGRAM SECTION SYNOPSIS                                                                                                         (9)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFC      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RWDATA           000000E8      03     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD    WRT BYTE  
PURE             000006EE      04     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
8478. BYTES LEFT IN FREE MEMORY POOL.
568. BYTES OF RECLAIMED MEMORY.
OBJ$:SHOWQUE,LIS$:SHOWQUE/-SP=EXECML$/ML,LIB$:CLIUTL/ML,SRC$:SHOWQUE
59 MLB DIR RDS - 872 GETS TO DEFINE 39 MACROS. 71 INTER. FILE WRITES. 
