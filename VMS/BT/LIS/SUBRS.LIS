SUBRS           - SUBROUTINES INVOKED BY BACKTRANSLATOR MACROS   22-AUG-1978 05:17:02   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (3)      60  SETSTRING - INSERT A STRING INTO RESULT LIST
   (3)      87  GETSTRING - STRING VALUE ARGUMENT GETTER
   (3)     132  GETKEYWORD - VERIFY KEYWORD AND RETURN INDEX
   (3)     174  GETSUBVAL - SUBROUTINE TO DO CALL BACK TO CLI F
   (3)     213  REPLACE - TRANSLATE A KEYWORD VALUE
   (3)     242  ORDERSUBVAL - SAVE NUMERIC SUB VALUES INTO POSI
SUBRS           - SUBROUTINES INVOKED BY BACKTRANSLATOR MACROS   22-AUG-1978 05:17:02   VAX-11 MACRO X0.3-11               Page   1
123077                                                                                                                           (1)

                                     0000     1 	.TITLE	SUBRS - SUBROUTINES INVOKED BY BACKTRANSLATOR MACROS
                                     0000     2 	.IDENT	/123077/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; H.J.	AUGUST 1977
                                     0000    24 ;
                                     0000    25 ; BACKTRANSLATOR SUBROUTINES
                                     0000    26 ;
SUBRS           - SUBROUTINES INVOKED BY BACKTRANSLATOR MACROS   22-AUG-1978 05:17:02   VAX-11 MACRO X0.3-11               Page   2
123077                                                                                                                           (2)

                                     0000    28 ;
                                     0000    29 ; MACRO LIBRARY CALLS
                                     0000    30 ;
                                     0000    31 	$BTDEFS				;DEFINE VALUES TO BE USED LOCALLY
                                     0000       	.SAVE
                                 00000000       	.PSECT	$ABS$,ABS
                                     0000       	.RESTORE
                                     0000    32 
                                     0000    33 ;
                                     0000    34 ; LOCAL SYMBOLS
                                     0000    35 ;
                                     0000    36 
                                     0000    37 ;
                                     0000    38 ; ARGUMENT LIST OFFSET DEFINITIONS
                                     0000    39 ;
                                     0000    40 
                                     0000    41 ;
                                     0000    42 ; LOCAL DATA
                                     0000    43 ;
                                     0000    44 	IMPURE
                                 00000000       	.PSECT	IMPURE_	LONG,RD,WRT,NOEXE
                                     0000    45 ;
                                     0000    46 ;
                                     0000    47 ;
                                     0000    48 VALUE_DESC::
                                     0000    49 	$CLIREQDESC -			;REQUEST BLOCK FOR SINGLE VALUE
                                     0000    50 		RQTYPE=CLI$K_ASCIIVAL	;ASCII STRING VALUE
                           0000001C  0000       	.BLKB	CLI$C_REQDESC
                           00000000  001C       	. = $CLI.+CLI$B_RQTYPE
                                 41  0000       	  .BYTE	CLI$K_ASCIIVAL
                           0000001C  0001       	. = $CLI..
                                     001C    51 
                                     001C    52 
                                     001C    53 ; HANDLE UP TO FOUR POSITIONAL SUB VALUES
                                     001C    54 
            00 00 00 00 00 00 00 3A  001C    55 SUBVALS:.BYTE	^A\:\,0,0,0,0,0,0,0 ;SEVEN BYTES TO STORE POSITIONAL NUMBER
            00 00 00 00 00 00 00 3A  0024    56 	.BYTE	^A\:\,0,0,0,0,0,0,0 ;SEVEN BYTES TO STORE POSITIONAL NUMBER
            00 00 00 00 00 00 00 3A  002C    57 	.BYTE	^A\:\,0,0,0,0,0,0,0 ;SEVEN BYTES TO STORE POSITIONAL NUMBER
            00 00 00 00 00 00 00 3A  0034    58 	.BYTE	^A\:\,0,0,0,0,0,0,0 ;SEVEN BYTES TO STORE POSITIONAL NUMBER
SUBRS           - SUBROUTINES INVOKED BY BACKTRANSLATOR MACROS   22-AUG-1978 05:17:02   VAX-11 MACRO X0.3-11               Page   3
123077          SETSTRING - INSERT A STRING INTO RESULT LIST                                                                     (3)

                                     003C    60 	.SBTTL	SETSTRING - INSERT A STRING INTO RESULT LIST
                                     003C    61 	PURE
                                 00000000       	.PSECT	PURE_	BYTE,RD,EXE,NOWRT
                                     0000    62 ;+
                                     0000    63 ; BACKTRANSLATOR SUBROUTINE
                                     0000    64 ;
                                     0000    65 ;  SETSTRING  PLACES THE PASSED STRING INTO THE RESULT LIST
                                     0000    66 ;
                                     0000    67 ;
                                     0000    68 ;   INPUTS:
                                     0000    69 ;	A PARAMETER CONTROL BLOCK CREATED BY THE $SETSTRING MACRO
                                     0000    70 ;
                                     0000    71 ;   OUTPUTS:
                                     0000    72 ;	THE RESULT STRING TEXT OR AN ERROR MESSAGE AND ABORT
                                     0000    73 ;
                                     0000    74 ;-
                                     0000    75 SETSTRING::
                          FFFD'  30  0000    76 	BSBW	PROGSET			;PERFORM COMMON INITIALIZATION
                                     0003    77 					;AND SET THE PROGRAM TO INVOKE
            59            8A     9A  0003    78 	MOVZBL	(R10)+,R9		;PICK UP THE RESULT STRING COUNT
                          FFF7'  30  0006    79 	BSBW	INSERTSTR		;CREATE RESULT STRING TEXT
            5A            59     C0  0009    80 	ADDL	R9,R10			;UPDATE RETURN POINTER FOR RETURNS
            58            00     E0  000C    81 	BBS	#BTR$V_RETURN,R8,10$	;RETURN TO CLI OR CALLER?
                          01         000F       
                                     0010    82 
                                 04  0010    83 	RET				;RETURN TO CLI
                          6A     17  0011    84 10$:	JMP	(R10)			;RETURN TO CALLER
                                     0013    85 
SUBRS           - SUBROUTINES INVOKED BY BACKTRANSLATOR MACROS   22-AUG-1978 05:17:02   VAX-11 MACRO X0.3-11               Page   4
123077          GETSTRING - STRING VALUE ARGUMENT GETTER                                                                         (3)

                                     0013    87 	.SBTTL	GETSTRING - STRING VALUE ARGUMENT GETTER
                                     0013    88 ;+
                                     0013    89 ;  GETSTRING  PICKS UP A STRING QUALIFIER AND GENERATES
                                     0013    90 ;		THE RESULTANT TEXT STRING
                                     0013    91 ;
                                     0013    92 ;   INPUTS:
                                     0013    93 ;	A PARAMETER CONTROL BLOCK CREATED BY $GETSTRING OR $GETDECNUM MACRO
                                     0013    94 ;
                                     0013    95 ;   OUTPUTS:
                                     0013    96 ;	THE RESULT STRING TEXT OR AN ERROR MESSAGE AND ABORT
                                     0013    97 ;
                                     0013    98 ;-
                                     0013    99 DECNUMARG::
                                     0013   100 GETSTRING::
                          FFEA'  30  0013   101 	BSBW	PROGSET			;PERFORM COMMON INITIALIZATION
                                     0016   102 					;AND SET THE PROGRAM TO INVOKE
            59            8A     9A  0016   103 	MOVZBL	(R10)+,R9		;PICK UP THE RESULT STRING COUNT
                          FFE4'  30  0019   104 	BSBW	INSERTSTR		;CREATE RESULT STRING TEXT
            5A            59     C0  001C   105 	ADDL	R9,R10			;UPDATE RETURN POINTER FOR LATER
                          008E   30  001F   106 	BSBW	GETSUBVAL		;GO GET A SUBVALUE
            42            50     E9  0022   107 	BLBC	R0,70$			;BRANCH IF THERE WAS NO VALUE
            58            03     E0  0025   108 	BBS	#BTR$V_VALREQ,R8,20$	;BRANCH TO SUPPRESS DELIMITER
                          06         0028       
            57            3A     90  0029   109 10$:	MOVB	#^A\:\,R7		;SET UP CHARACTER TO INSERT
                          FFD1'  30  002C   110 	BSBW	ADDCHAR			;INSERT THE ':'
                     0600 8F     BB  002F   111 20$:	PUSHR	#^M<R9,R10>		;SAVE SOME REGS
            59       0008'CF     7D  0033   112 	MOVQ	W^CLI$Q_RQDESC+VALUE_DESC,R9 ;GET SIZE AND ADDRESS OF VALUE
                          FFC5'  30  0038   113 	BSBW	ADDSTR			;ADD THE VALUE TEXT ONTO THE PARAMETER
            58            07     E1  003B   114 	BBC	#BTR$V_DECIMAL,R8,30$	;BRANCH IF A STRING VALUE (NOT NUMBER)
                          0C         003E       
            57            2E     90  003F   115 	MOVB	#^A\.\,R7		;FORCE A DECIMAL POINT
            7A49          57     91  0042   116 	CMPB	R7,-(R10)[R9]		;WAS A DECIMAL POINT GIVEN?
                          03     13  0046   117 	BEQL	30$			;BRANCH IF YES
                          FFB5'  30  0048   118 	BSBW	ADDCHAR			;ADD THE DECIMAL POINT
                     0600 8F     BA  004B   119 30$:	POPR	#^M<R9,R10>		;RESTORE REGS
                          005E   30  004F   120 	BSBW	GETSUBVAL		;TRY TO GET ANOTHER VALUE
            07            50     E8  0052   121 	BLBS	R0,60$			;BRANCH IF ANOTHER VALUE, IS IT LEGAL?
            58            00     E0  0055   122 40$:	BBS	#BTR$V_RETURN,R8,50$	;SHOULD WE RETURN TO CALLER OR CLI?
                          01         0058       
                                     0059   123 
                                 04  0059   124 	RET				;RETURN TO CLI
                          6A     17  005A   125 50$:	JMP	(R10)			;RETURN TO CALLER
                                     005C   126 
            58            06     E0  005C   127 60$:	BBS	#BTR$V_LIST,R8,10$	;BRANCH TO COLLECT A STRING LIST
                          C9         005F       
                                     0060   128 	ERROR	UNEXPLIST,FATAL		;REPORT ERROR AND ABORT
            50         44 8F     9A  0060       	MOVZBL	#BTR$_UNEXPLIST+FATAL&^XFF,R0
                          FF99'  31  0064       	BRW	ERR_EXIT
            58            03     E1  0067   129 70$:	BBC	#BTR$V_VALREQ,R8,40$	;BRANCH IF VALUE NOT REQUIRED, NO ERROR
                          EA         006A       
                                     006B   130 NOVAL:	ERROR	MISSNGVAL,FATAL		;REPORT ERROR AND ABORT
            50            0C     9A  006B       	MOVZBL	#BTR$_MISSNGVAL+FATAL&^XFF,R0
                          FF8F'  31  006E       	BRW	ERR_EXIT
SUBRS           - SUBROUTINES INVOKED BY BACKTRANSLATOR MACROS   22-AUG-1978 05:17:02   VAX-11 MACRO X0.3-11               Page   5
123077          GETKEYWORD - VERIFY KEYWORD AND RETURN INDEX                                                                     (3)

                                     0071   132 	.SBTTL	GETKEYWORD - VERIFY KEYWORD AND RETURN INDEX
                                     0071   133 ;+
                                     0071   134 ; GETKEYWORD  CALLS MATCHKEY TO RETURN INDEX OF KEYWORD IN LIST
                                     0071   135 ; GETKEYWORDNVAL IS THE SIMILAR BUT ASSUMES THE GETSUBVAL CALL HAS BEEN DONE
                                     0071   136 ;
                                     0071   137 ;  INPUTS:
                                     0071   138 ;   A STRING TABLE BUILT BY THE $GETKEYWORD MACRO
                                     0071   139 ;   A CLI QUALIFIER DESCRIPTOR BLOCK DESCRIBING THE QUALIFIER VALUE
                                     0071   140 ;
                                     0071   141 ;  OUTPUTS:
                                     0071   142 ;   THE INDEX OF THE QUALIFIER VALUE IN THE KEYWORD LIST OR FAILURE FLAG
                                     0071   143 ;
                                     0071   144 ;-
                                     0071   145 	.ENABL	LSB
                                     0071   146 
                                     0071   147 GETKEYWORDNVAL::
            5A            8E     D0  0071   148 	MOVL	(SP)+,R10		;GET THE RETURN ADDRESS
            59            8A     9A  0074   149 	MOVZBL	(R10)+,R9		;GET THE LENGTH OF THE KEYWORD TABLE
                          08     11  0077   150 	BRB	10$			;USE COMMON CODE
                                     0079   151 
                                     0079   152 GETKEYWORD::
            5A            8E     D0  0079   153 	MOVL	(SP)+,R10		;GET THE RETURN ADDRESS
            59            8A     9A  007C   154 	MOVZBL	(R10)+,R9		;GET THE LENGTH OF THE KEYWORD TABLE
                          2F     10  007F   155 	BSBB	GETSUBVAL		;GET THE SUBVALUE
            17            50     E9  0081   156 10$:	BLBC	R0,20$			;BRANCH IF NO VALUE, CHECK FOR ERROR
                     0008'CF     9F  0084   157 	PUSHAB	W^CLI$Q_RQDESC+VALUE_DESC ;CREATE AN ARGUMENT BLOCK FOR MATCHKEY
                          5A     DD  0088   158 	PUSHL	R10			;PUSH POINTER TO KEYWORD TABLE
       0000'CF            02     FB  008A   159 	CALLS	#2,W^MATCHKEY		;LOCATE THE OPTION
                          50     D5  008F   160 	TSTL	R0			;WHAT KIND OF RETURN OCCURED?
                          0E     14  0091   161 	BGTR	30$			;BRANCH IF GOOD MATCH ON KEYWORD
                          0F     13  0093   162 	BEQL	40$			;BRANCH IF NOT FOUND
                                     0095   163 	ERROR	AMBIGKEYW,FATAL
            50            34     9A  0095       	MOVZBL	#BTR$_AMBIGKEYW+FATAL&^XFF,R0
                          FF65'  31  0098       	BRW	ERR_EXIT
                                     009B   164 
            58            03     E4  009B   165 20$:	BBSC	#BTR$V_VALREQ,R8,NOVAL;BRANCH IF NO KEYWORD AND ONE REQUIRED
                          CC         009E       
                                     009F   166 
                          50     D4  009F   167 	CLRL	R0			;INDICATE NO VALUE
                          6A49   17  00A1   168 30$:	JMP	(R10)[R9]		;RETURN TO CALLER
                                     00A4   169 
                                     00A4   170 40$:	ERROR	INVALKEYW,FATAL
            50            2C     9A  00A4       	MOVZBL	#BTR$_INVALKEYW+FATAL&^XFF,R0
                          FF56'  31  00A7       	BRW	ERR_EXIT
                                     00AA   171 
                                     00AA   172 	.DSABL	LSB
SUBRS           - SUBROUTINES INVOKED BY BACKTRANSLATOR MACROS   22-AUG-1978 05:17:02   VAX-11 MACRO X0.3-11               Page   6
123077          GETSUBVAL - SUBROUTINE TO DO CALL BACK TO CLI F                                                                  (3)

                                     00AA   174 	.SBTTL	GETSUBVAL - SUBROUTINE TO DO CALL BACK TO CLI FOR SUBVALUE
                                     00AA   175 ;+
                                     00AA   176 ; BACKTRANSLATOR SUBROUTINE
                                     00AA   177 ;
                                     00AA   178 ;  GETSUBVAL GETS THE DESCRIPTOR FOR THE VALUE INTO 'VALUE_DESC'
                                     00AA   179 ;
                                     00AA   180 ;  GETSUBKEYVAL IS AN ALTERNATE ENTRY TO PICK UP DESCRIPTORS OF KEYWORD
                                     00AA   181 ;	     SUBVALUES INTO 'VALUE_DESC'.  THIS ENTRY MAY ONLY BE USED
                                     00AA   182 ;	     AFTER A CALL THAT SETS UP VALUE_DESC CORRECTLY (E.G. GETKEYWORD).
                                     00AA   183 ;
                                     00AA   184 ;
                                     00AA   185 ;   INPUTS:
                                     00AA   186 ;	AP IS SET UP AS RESULT OF CALLBACK FROM CLI
                                     00AA   187 ;
                                     00AA   188 ;   OUTPUTS:
                                     00AA   189 ;	THE RESULT STRING DESC OR AN ERROR MESSAGE AND ABORT
                                     00AA   190 ;	R0 LOW BIT = 0 MEANS SUBVALUE DOESN'T EXIST
                                     00AA   191 ;
                                     00AA   192 ;-
                                     00AA   193 	.ENABL	LSB
                                     00AA   194 
                                     00AA   195 GETSUBKEYVAL::
       0003'CF            01     E1  00AA   196 	BBC	#CLI$V_KEYVALU,W^CLI$B_RQSTAT+VALUE_DESC,10$ ;FAIL IF KEYWORD
                          21         00AF       
                                     00B0   197 					;SUB VALUE DOESN'T EXIST
                                     00B0   198 GETSUBVAL::
            50         04 AC     D0  00B0   199 	MOVL	4(AP),R0		;GET POINTER TO QUALIFIER BLOCK
                       04 A0     B5  00B4   200 	TSTW	CLI$W_QDVALSIZ(R0)	;WAS THERE A SUBVALUE?
                          18     13  00B7   201 	BEQL	10$			;BRANCH IF NOT
                          60     9F  00B9   202 	PUSHAB	(R0)			;CREATE A QUALIFIER VALUE ARG BLOCK
                     0000'CF     9F  00BB   203 	PUSHAB	W^CLIWORKAREA		;POINTER TO THE WORK AREA
                     0000'CF     9F  00BF   204 	PUSHAB	W^VALUE_DESC		;POINTER TO THE VALUE DESCRIPTOR
         08 BC            03     FB  00C3   205 	CALLS	#3,@CLI$A_UTILSERV(AP)	;GET THE VALUE
            09            50     E8  00C7   206 	BLBS	R0,20$			;BRANCH ON SUCCESSFUL RETURN
                                     00CA   207 	ERROR	INTFAIL,FATAL		;ABORT
            50         4C 8F     9A  00CA       	MOVZBL	#BTR$_INTFAIL+FATAL&^XFF,R0
                          FF2F'  31  00CE       	BRW	ERR_EXIT
                          50     D4  00D1   208 10$:	CLRL	R0			;INDICATE NO SUBVALUE
                                 05  00D3   209 20$:	RSB				;RETURN
                                     00D4   210 
                                     00D4   211 	.DSABL	LSB
SUBRS           - SUBROUTINES INVOKED BY BACKTRANSLATOR MACROS   22-AUG-1978 05:17:02   VAX-11 MACRO X0.3-11               Page   7
123077          REPLACE - TRANSLATE A KEYWORD VALUE                                                                              (3)

                                     00D4   213 	.SBTTL	REPLACE - TRANSLATE A KEYWORD VALUE
                                     00D4   214 ;+
                                     00D4   215 ; REPLACE  PLACES THE STRING INDICATED BY THE INDEX INTO RESULT OPTION
                                     00D4   216 ;
                                     00D4   217 ;  INPUTS:
                                     00D4   218 ;    R0 CONTAINS INDEX OF STRING IN TABLE
                                     00D4   219 ;    BYTE FOLLOWING RETURN ADDRESS CONTAINS OFFSET TO RETURN TO
                                     00D4   220 ;    BYTES FOLLOWING ARE THE TABLE
                                     00D4   221 ;
                                     00D4   222 ;  OUTPUTS:
                                     00D4   223 ;    THE STRING IS CONCATENATED ONTO THE RESULT OPTION LIST
                                     00D4   224 ;
                                     00D4   225 ;-
                                     00D4   226 REPLACE::
            5A            8E     D0  00D4   227 	MOVL	(SP)+,R10		;GET THE RETURN ADDRESS
            59            8A     98  00D7   228 	CVTBL	(R10)+,R9		;GET OFFSET TO RETURN TO
            50            50     CE  00DA   229 	MNEGL	R0,R0			;MAKE INDEX NEGATIVE FOR LOCC
                          1C     13  00DD   230 	BEQL	10$			;BRANCH IF NO VALUE TO RETURN
                     0600 8F     BB  00DF   231 	PUSHR	#^M<R9,R10>		;SAVE REGS
       00C8 8F            50     3A  00E3   232 	LOCC	R0,#200,(R10)		;LOCATE THE STRING, LENGTH IS DUMMY
                          6A         00E8       
                          51     D6  00E9   233 	INCL	R1			;POINT TO COUNT FIELD OF ARGUMENT
            59            81     9A  00EB   234 	MOVZBL	(R1)+,R9		;GET LENGTH FOR ADDSTR CALL
            5A            51     D0  00EE   235 	MOVL	R1,R10			;SET UP ADDRESS ARGUMENT
                          FF0C'  30  00F1   236 	BSBW	ADDSTR			;ADD THE TEXT TO THE RESULT STRING
                     0600 8F     BA  00F4   237 	POPR	#^M<R9,R10>		;RESTORE REGS
                          6A49   17  00F8   238 	JMP	(R10)[R9]		;RETURN TO CALLER
                                 04  00FB   239 10$:	RET				;RETURN TO CLI
                                     00FC   240 
SUBRS           - SUBROUTINES INVOKED BY BACKTRANSLATOR MACROS   22-AUG-1978 05:17:02   VAX-11 MACRO X0.3-11               Page   8
123077          ORDERSUBVAL - SAVE NUMERIC SUB VALUES INTO POSI                                                                  (3)

                                     00FC   242 	.SBTTL	ORDERSUBVAL - SAVE NUMERIC SUB VALUES INTO POSITIONAL OREDR
                                     00FC   243 ;+
                                     00FC   244 ; BACKTRANSLATOR SUBROUTINE
                                     00FC   245 ;
                                     00FC   246 ;  ORDERSUBVAL  SAVES THE NUMERIC STRING INTO AN ORDERED LIST
                                     00FC   247 ;
                                     00FC   248 ;
                                     00FC   249 ;   INPUTS:
                                     00FC   250 ;	R0 CONTAINS THE POSITION NUMBER TO PUT THE RESULT STRING
                                     00FC   251 ;
                                     00FC   252 ;   OUTPUTS:
                                     00FC   253 ;	THE OUTPUT IS THE NUMERIC LIST IN THE REQUESTED POSITIONAL ORDER
                                     00FC   254 ;
                                     00FC   255 ;-
                                     00FC   256 ORDERSUBVAL::
                          50     DD  00FC   257 	PUSHL	R0			;IS THERE A VALUE?
                                     00FE   258 					;WARNING- STACK IS NOT CLEAN
                          29     13  00FE   259 	BEQL	20$			;BRANCH IF NOT
                          FFA7   30  0100   260 	BSBW	GETSUBKEYVAL		;GET THE SUB VALUE STRING
            44            50     E9  0103   261 	BLBC	R0,70$			;BRANCH IF THERE WAS NO VALUE
            59       0008'CF     7D  0106   262 	MOVQ	W^CLI$Q_RQDESC+VALUE_DESC,R9 ;GET SIZE AND ADDRESS OF VALUE
            59            05     B1  010B   263 	CMPW	#5,R9			;MAKE SURE STRING WILL FIT IN TABLE
                          34     19  010E   264 	BLSS	60$			;BRANCH IF SUBVALUE TOO LONG
            8E            03     78  0110   265 	ASHL	#3,(SP)+,R0		;PUT VALUE INTO CORRECT SLOT
                          50         0113       
            6A            59     28  0114   266 	MOVC3	R9,(R10),W^SUBVALS-7[R0];SAVE THE NUMERIC VALUE
                     0015'CF40       0117       
            71            2E     91  011B   267 	CMPB	#^A\.\,-(R1)		;MAKE SURE IT'S DECIMAL
                          03     13  011E   268 	BEQL	10$			;BRANCH IF IT IS
            83            2E     90  0120   269 	MOVB	#^A\.\,(R3)+		;FORCE THE PERIOD
                          83     94  0123   270 10$:	CLRB	(R3)+			;MAKE IT ASCIZ
            50            01     D0  0125   271 	MOVL	#1,R0			;SET R0 TO INDICATE KEYWORD LOOP
                                 05  0128   272 	RSB				;RETURN FOR NEXT SUBFIELD KEYWORD
                                     0129   273 
                          01     BA  0129   274 20$:	POPR	#^M<R0>			;CLEAN STACK AND CLEAR R0
                          9E     16  012B   275 	JSB	@(SP)+			;CALL BACK TO GET LIST SIZE
                          59     D4  012D   276 	CLRL	R9			;START AT FIRST SUBFIELD
            5A       001C'CF49   7E  012F   277 30$:	MOVAQ	W^SUBVALS[R9],R10	;POINT TO NEXT FIELD
                          03     11  0135   278 	BRB	50$			;JUMP INTO LOOP
                          FEC6'  30  0137   279 40$:	BSBW	ADDCHAR			;PUT THE CHARACTER IN
            57            8A     90  013A   280 50$:	MOVB	(R10)+,R7		;GET A CHARACTER
                          F8     12  013D   281 	BNEQ	40$			;BRANCH IF AT END OF STRING
            59            56     F2  013F   282 	AOBLSS	R6,R9,30$		;LOOP THROUGH THE SUB FIELDS
                          EC         0142       
                                 04  0143   283 	RET				;RETURN BACK TO CLI PARSER-CLEAN STACK
                                     0144   284 
                                     0144   285 60$:	ERROR	KEYVALOVR,FATAL		;ABORT ON ERROR
            50            3C     9A  0144       	MOVZBL	#BTR$_KEYVALOVR+FATAL&^XFF,R0
                          FEB6'  31  0147       	BRW	ERR_EXIT
                                     014A   286 70$:	ERROR	MISSNGVAL,FATAL		;ABORT ON ERROR
            50            0C     9A  014A       	MOVZBL	#BTR$_MISSNGVAL+FATAL&^XFF,R0
                          FEB0'  31  014D       	BRW	ERR_EXIT
                                     0150   287 
                                     0150   288 
                                     0150   289 	.END
SUBRS           - SUBROUTINES INVOKED BY BACKTRANSLATOR MACROS   22-AUG-1978 05:17:02   VAX-11 MACRO X0.3-11               Page   9
SYMBOL TABLE                                                                                                                     (3)

$CLI.          = 00000000 R     03   CLI$C_REQDESC    0000001C            CLI$M_QDUSRV   = 00000002            
$CLI..         = 0000001C R     03   CLI$C_WORKAREA   00000080            CLI$M_QUALEXP  = 00000002            
ADDCHAR          ********   X   04   CLI$K_ASCIIVAL = 00000041            CLI$M_QUALTRU  = 00000001            
ADDSTR           ********   X   04   CLI$K_CLISERV  = 00000005            CLI$M_TRMVRBLV = 00000300            
BIT...         = 00000045            CLI$K_ENDPRM1  = 00000030            CLI$M_VERIFY   = 00000004            
BTR$M_DECIMAL  = 00000080            CLI$K_ENDPRM2  = 00000031            CLI$M_VFYINP   = 00000020            
BTR$M_EXPLICIT = 00000020            CLI$K_ENDPRM3  = 00000032            CLI$Q_QDVALDESC  00000004            
BTR$M_FORCE    = 00000002            CLI$K_ENDPRM4  = 00000033            CLI$Q_RQDESC     00000008            
BTR$M_LIST     = 00000040            CLI$K_FILSPEC  = 00000044            CLI$S_PRITYP   = 00000004            
BTR$M_MULTKEY  = 00000010            CLI$K_GETCMD   = 00000001            CLI$S_SUBTYP   = 00000004            
BTR$M_RETURN   = 00000001            CLI$K_GETOPT   = 00000003            CLI$S_TRMVRBLV = 00000002            
BTR$M_TEMPPOS  = 00000004            CLI$K_GETQUAL  = 00000002            CLI$V_ABSADR   = 00000001            
BTR$M_VALREQ   = 00000008            CLI$K_INITPRS  = 00000000            CLI$V_ALLOCCUR = 00000000            
BTR$V_DECIMAL  = 00000007            CLI$K_INPSPEC  = 00000001            CLI$V_BATCH    = 00000003            
BTR$V_EXPLICIT = 00000005            CLI$K_INPUT1   = 00000010            CLI$V_CONCATINP= 00000001            
BTR$V_FORCE    = 00000001            CLI$K_INPUT2   = 00000011            CLI$V_DBGEXCP  = 00000010            
BTR$V_LIST     = 00000006            CLI$K_INPUT3   = 00000012            CLI$V_DBGTRU   = 00000001            
BTR$V_MULTKEY  = 00000004            CLI$K_INPUT4   = 00000013            CLI$V_DEBUG    = 00000000            
BTR$V_RETURN   = 00000000            CLI$K_KEYVAL   = 00000043            CLI$V_DUMMY    = 00000001            
BTR$V_TEMPPOS  = 00000002            CLI$K_KEYWORD  = 00000042            CLI$V_EXPNAM   = 00000002            
BTR$V_VALREQ   = 00000003            CLI$K_NUMERVAL = 00000040            CLI$V_INDIRECT = 00000004            
BTR$_AMBIGKEYW = 00688030            CLI$K_OUTPUT1  = 00000020            CLI$V_KEYVALU  = 00000001            
BTR$_ILLEGOPT  = 00688018            CLI$K_OUTPUT2  = 00000021            CLI$V_LASTVAL  = 00000000            
BTR$_IMGFNF    = 00688060            CLI$K_OUTPUT3  = 00000022            CLI$V_MOREINP  = 00000002            
BTR$_INTFAIL   = 00688048            CLI$K_OUTPUT4  = 00000023            CLI$V_MOREVALS = 00000000            
BTR$_INVALKEYW = 00688028            CLI$K_OUTSPEC  = 00000002            CLI$V_PARMDEF  = 00000003            
BTR$_KEYVALOVR = 00688038            CLI$K_PARDONE  = 00000003            CLI$V_PARMPRS  = 00000000            
BTR$_MISSNGVAL = 00688008            CLI$K_QDBITS     00000014            CLI$V_PARMREQ  = 00000000            
BTR$_NOTIMPLEM = 00688020            CLI$K_QUALDEF    00000014            CLI$V_PRITYP   = 00000004            
BTR$_OPTVALOVR = 00688050            CLI$K_REQDESC    0000001C            CLI$V_QDEXPA   = 00000002            
BTR$_STRINGOVR = 00688010            CLI$K_UTILOPR  = 00000000            CLI$V_QDUSRV   = 00000001            
BTR$_TOOMANY   = 00688058            CLI$K_VALCONV  = 00000004            CLI$V_QUALEXP  = 00000001            
BTR$_UNEXPLIST = 00688040            CLI$K_WORKAREA   00000080            CLI$V_QUALTRU  = 00000000            
BTRAN          = 00680000            CLI$L_CLIFLAG    00000018            CLI$V_SUBTYP   = 00000000            
CLI$A_ABSACT     00000014            CLI$L_INIARGCNT  00000000            CLI$V_TRMVRBLV = 00000008            
CLI$A_ERRACT     00000004            CLI$L_LINKFLAG   00000014            CLI$V_VERIFY   = 00000002            
CLI$A_FLSACT     00000010            CLI$L_RQVALU     0000000C            CLI$V_VFYINP   = 00000005            
CLI$A_IMGFILED   00000010            CLI$L_USRVAL     00000014            CLI$W_QDVALSIZ   00000004            
CLI$A_IMGHDADR   0000000C            CLI$L_WORKAREA   00000000            CLI$W_RQSIZE     00000008            
CLI$A_PROGXFER   00000004            CLI$M_ABSADR   = 00000002            CLI$W_SERVCOD    00000001            
CLI$A_PRSACT     00000010            CLI$M_ALLOCCUR = 00000001            CLIWORKAREA      ********   X   04   
CLI$A_QDVALADR   00000008            CLI$M_BATCH    = 00000008            DECNUMARG        00000013 RG    04   
CLI$A_QUALST     00000018            CLI$M_CONCATINP= 00000002            ERR_EXIT         ********   X   04   
CLI$A_RQADDR     0000000C            CLI$M_DBGEXCP  = 00010000            FATAL          = 00000004            
CLI$A_TRUACT     0000000C            CLI$M_DBGTRU   = 00000002            GBL...         = 00000000            
CLI$A_UTILSERV   00000008            CLI$M_DEBUG    = 00000001            GETKEYWORD       00000079 RG    04   
CLI$B_BITNUM     00000001            CLI$M_DUMMY    = 00000002            GETKEYWORDNVAL   00000071 RG    04   
CLI$B_QDBLKSIZ   00000000            CLI$M_EXPNAM   = 00000004            GETSTRING        00000013 RG    04   
CLI$B_QDCODE     00000001            CLI$M_INDIRECT = 00000010            GETSUBKEYVAL     000000AA RG    04   
CLI$B_QDFLGS     00000002            CLI$M_KEYVALU  = 00000002            GETSUBVAL        000000B0 RG    04   
CLI$B_QDSTAT     00000003            CLI$M_LASTVAL  = 00000001            INSERTSTR        ********   X   04   
CLI$B_RQFLGS     00000002            CLI$M_MOREINP  = 00000004            LAST_PARAM     = FFFFFFEC            
CLI$B_RQINDX     00000001            CLI$M_MOREVALS = 00000001            MATCHKEY         ********   X   04   
CLI$B_RQSTAT     00000003            CLI$M_PARMDEF  = 00000008            NONE           = 00000000            
CLI$B_RQTYPE     00000000            CLI$M_PARMPRS  = 00000001            NOVAL            0000006B R     04   
CLI$C_QDBITS     00000014            CLI$M_PARMREQ  = 00000001            ORDERSUBVAL      000000FC RG    04   
CLI$C_QUALDEF    00000014            CLI$M_QDEXPA   = 00000004            PRIM_INPUT     = FFFFFFF6            
SUBRS           - SUBROUTINES INVOKED BY BACKTRANSLATOR MACROS   22-AUG-1978 05:17:02   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (3)

PRIM_OUTPUT    = 00000000            
PROGSET          ********   X   04   
PROG_BP2       = 0000000C            
PROG_CBL       = 00000008            
PROG_CNT       = 0000000F            
PROG_DIF       = 0000000F            
PROG_DMP       = 00000007            
PROG_F4V       = 00000002            
PROG_LBR       = 0000000B            
PROG_LIB       = 0000000A            
PROG_MAC       = 00000004            
PROG_MAR       = 00000003            
PROG_PIP       = 00000001            
PROG_SLP       = 00000006            
PROG_SOS       = 00000005            
PROG_SRT       = 0000000E            
PROG_TKB       = 00000009            
PROG_UFD       = 0000000D            
REPLACE          000000D4 RG    04   
SAVE_REG_MASK  = 00000FFC            
SETSTRING        00000000 RG    04   
SUBVALS          0000001C R     03   
VALUE_DESC       00000000 RG    03   


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000080      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
IMPURE_          0000003C      03     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD    WRT LONG  
PURE_            00000150      04     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
18164. BYTES LEFT IN FREE MEMORY POOL.
2046. BYTES OF RECLAIMED MEMORY.
OBJ$:SUBRS,LIS$:SUBRS/-SP/LI:MEB=EXECML$/ML,LIB$:B/ML,SRC$:SUBRS
36 MLB DIR RDS - 374 GETS TO DEFINE 20 MACROS. 53 INTER. FILE WRITES. 
