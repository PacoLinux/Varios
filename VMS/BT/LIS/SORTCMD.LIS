SORT            /RSX - BACKTRANSLATOR FOR SORT COMMAND           22-AUG-1978 05:28:13   VAX-11 MACRO X0.3-11               Page   1
HJ                                                                                                                               (1)

                                     0000     1 	.TITLE	SORT/RSX - BACKTRANSLATOR FOR SORT COMMAND
                                     0000     2 	.IDENT	/HJ/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; H.J.	FEBRUARY 1978
                                     0000    24 ;
                                     0000    25 ; BACKTRANSLATOR SORT
                                     0000    26 ;
SORT            /RSX - BACKTRANSLATOR FOR SORT COMMAND           22-AUG-1978 05:28:13   VAX-11 MACRO X0.3-11               Page   2
HJ                                                                                                                               (2)

                                     0000    28 ;	.SBTTL INITIALIZE DATA DEFINITIONS
                                     0000    29 ;
                                     0000    30 ; MACRO LIBRARY CALLS
                                     0000    31 ;
                                     0000    32 	$BTDEFS				;DEFINE VALUES TO BE USED LOCALLY
                                     0000       	.SAVE
                                 00000000       	.PSECT	$ABS$,ABS
                                     0000       	.RESTORE
                                     0000    33 	$CLIDEF				;DEFINE CLI CODES AND VALUES
                                     0000       	.SAVE
                                 00000000       	.PSECT	$ABS$,ABS
                                     0000       CLI$L_INIARGCNT:
                           00000004  0000        			.BLKL	1
                                     0004       CLI$A_PROGXFER:
                           00000008  0004        			.BLKL	1
                                     0008       CLI$A_UTILSERV:
                           0000000C  0008        			.BLKL	1
                                     000C       CLI$A_IMGHDADR:
                           00000010  000C        			.BLKL	1
                                     0010       CLI$A_IMGFILED:
                           00000014  0010        			.BLKL	1
                                     0014       CLI$L_LINKFLAG:
                           00000018  0014        			.BLKL	1
                                     0018       CLI$L_CLIFLAG:
                           0000001C  0018        			.BLKL	1
                           00000000  001C        	. = 0
                                     0000       CLI$B_RQTYPE:
                           00000001  0000        			.BLKB	1
                                     0001       CLI$W_SERVCOD:
                                     0001       CLI$B_RQINDX:
                                     0001       CLI$B_BITNUM:
                           00000002  0001        			.BLKB	1
                                     0002       CLI$B_RQFLGS:
                           00000003  0002        			.BLKB	1
                                     0003       CLI$B_RQSTAT:
                           00000004  0003        			.BLKB	1
                                     0004       CLI$A_ERRACT:
                           00000008  0004        			.BLKL	1
                                     0008       CLI$Q_RQDESC:
                                     0008       CLI$W_RQSIZE:
                           0000000A  0008        			.BLKW	1
                           0000000C  000A        			.BLKW	1
                                     000C       CLI$L_RQVALU:
                                     000C       CLI$A_RQADDR:
                           00000010  000C        			.BLKL	1
                                     0010       CLI$A_PRSACT:
                           00000014  0010        			.BLKL	1
                                     0014       CLI$A_ABSACT:
                           00000018  0014        			.BLKL	1
                                     0018       CLI$A_QUALST:
                           0000001C  0018        			.BLKL	1
                                     001C       CLI$C_REQDESC:
                                     001C       CLI$K_REQDESC:
                           00000000  001C        	. = 0
                                     0000       CLI$B_QDBLKSIZ:
                           00000001  0000        			.BLKB	1
                                     0001       CLI$B_QDCODE:
SORT            /RSX - BACKTRANSLATOR FOR SORT COMMAND           22-AUG-1978 05:28:13   VAX-11 MACRO X0.3-11               Page   3
HJ                                                                                                                               (2)

                           00000002  0001        			.BLKB	1
                                     0002       CLI$B_QDFLGS:
                           00000003  0002        			.BLKB	1
                                     0003       CLI$B_QDSTAT:
                           00000004  0003        			.BLKB	1
                                     0004       CLI$Q_QDVALDESC:
                                     0004       CLI$W_QDVALSIZ:
                           00000006  0004        			.BLKW	1
                           00000008  0006        			.BLKW	1
                                     0008       CLI$A_QDVALADR:
                           0000000C  0008        			.BLKL	1
                                     000C       CLI$A_TRUACT:
                           00000010  000C        			.BLKL	1
                                     0010       CLI$A_FLSACT:
                           00000014  0010        			.BLKL	1
                                     0014       CLI$C_QUALDEF:
                                     0014       CLI$K_QUALDEF:
                                     0014       CLI$C_QDBITS:
                                     0014       CLI$K_QDBITS:
                                     0014       CLI$L_USRVAL:
                           00000018  0014        			.BLKL	1
                           00000000  0018        	. = 0
                                     0000       CLI$L_WORKAREA:
                           00000080  0000        			.BLKL	32
                                     0080       CLI$C_WORKAREA:
                                     0080       CLI$K_WORKAREA:
                                     0000       	.RESTORE
                                     0000    34 	$CLIDEFQUALSORT			;DEFINE QUALIFIER CODES
                                     0000       	.SAVE
                                 00000080       	.PSECT	$ABS$,ABS
                           00000000  0080       	.=0
                                     0000       PRO_B_PROMPT:
                           00000001  0000       	.BLKB	1
                                     0001       PRO_B_FLAGS:
                           00000002  0001       	.BLKB	1
                                     0002       PRO_K_LENGTH:
                                     0000       	.RESTORE
                                     0000       	.SAVE
                                 00000080       	.PSECT	$ABS$,ABS
                           00000000  0080       	.=0
                                     0000       QUA_B_OFFSET:
                           00000001  0000       	.BLKB	1
                                     0001       QUA_B_INDEX:
                           00000002  0001       	.BLKB	1
                                     0002       QUA_B_DEFVAL:
                           00000003  0002       	.BLKB	1
                                     0003       QUA_W_FLAGS:
                           00000005  0003       	.BLKW	1
                                     0005       QUA_B_IMAGE:
                           00000006  0005       	.BLKB	1
                                     0006       QUA_G_CHNGLST:
                                     0006       QUA_W_QUALIST:
                           00000008  0006       	.BLKW	1
                                     0008       QUA_B_PARMCNT:
                           00000009  0008       	.BLKB	1
                                     0009       QUA_W_PROMPT:
                           0000000B  0009       	.BLKW	1
SORT            /RSX - BACKTRANSLATOR FOR SORT COMMAND           22-AUG-1978 05:28:13   VAX-11 MACRO X0.3-11               Page   4
HJ                                                                                                                               (2)

                                     0000       	.RESTORE
                                     0000    35 
                                     0000    36 ;
                                     0000    37 ; LOCAL SYMBOLS
                                     0000    38 ;
                                     0000    39 
                                     0000    40 ;
                                     0000    41 ; ARGUMENT LIST OFFSET DEFINITIONS
                                     0000    42 ;
                                     0000    43 
                                     0000    44 ;
                                     0000    45 ; LOCAL DATA
                                     0000    46 ;
                                     0000    47 	IMPURE
                                 00000000       	.PSECT	IMPURE_	LONG,RD,WRT,NOEXE
                                     0000    48 ;
                                     0000    49 ;
                                     0000    50 ;
                                     0000    51 INPUT_ARGLIST:
                                     0000    52 	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
                                     0000    53 		INPUT_DESC,-		;FOR FIRST INPUT PARAMETER
                                     0000    54 		CLIWORKAREA,-		;WORK AREA FOR CLI
                                     0000    55 		BITMAP			;BIT ARRAY
                           00000003  0000       		.LONG	3
                           00000010' 0004       		.LONG	INPUT_DESC
                           00000000' 0008       		.LONG	CLIWORKAREA
                           00000000' 000C       		.LONG	BITMAP
                                     0010    56 
                                     0010    57 INPUT_DESC:
                                     0010    58 	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
                                     0010    59 		RQTYPE=CLI$K_INPUT1,-	;FOR PRIMARY INPUT
                                     0010    60 		RQFLGS=CLI$V_PARMREQ,-	;PRIMARY INPUT IS REQUIRED
                                     0010    61 		QUALST=PARM_QUALS	;QUALIFIERS ASSOCIATED WITH FILE
                           0000002C  0010       	.BLKB	CLI$C_REQDESC
                           00000010  002C       	. = $CLI.+CLI$B_RQTYPE
                                 10  0010       	  .BYTE	CLI$K_INPUT1
                           00000012  0011       	. = $CLI.+CLI$B_RQFLGS
                                 01  0012       	.BYTE	$$$.
                           00000028  0013       	. = $CLI.+CLI$A_QUALST
                           00000048' 0028       	    .LONG	<PARM_QUALS-$CLI.>
                                     002C    62 
                                     002C    63 OUTPUT_ARGLIST:
                                     002C    64 	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
                                     002C    65 		OUTPUT_DESC,-		;FOR PRIMARY OUTPUT
                                     002C    66 		CLIWORKAREA,-		;WORK AREA FOR CLI
                                     002C    67 		BITMAP			;BIT ARRAY
                           00000003  002C       		.LONG	3
                           0000003C' 0030       		.LONG	OUTPUT_DESC
                           00000000' 0034       		.LONG	CLIWORKAREA
                           00000000' 0038       		.LONG	BITMAP
                                     003C    68 
                                     003C    69 OUTPUT_DESC:
                                     003C    70 	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
                                     003C    71 		RQTYPE=CLI$K_INPUT2,-	;FOR PRIMARY OUTPUT
                                     003C    72 		QUALST=PARM_QUALS	;QUALIFIERS ASSOCIATED WITH FILE
                           00000058  003C       	.BLKB	CLI$C_REQDESC
                           0000003C  0058       	. = $CLI.+CLI$B_RQTYPE
SORT            /RSX - BACKTRANSLATOR FOR SORT COMMAND           22-AUG-1978 05:28:13   VAX-11 MACRO X0.3-11               Page   5
HJ                                                                                                                               (2)

                                 11  003C       	  .BYTE	CLI$K_INPUT2
                           00000054  003D       	. = $CLI.+CLI$A_QUALST
                           0000001C' 0054       	    .LONG	<PARM_QUALS-$CLI.>
                                     0058    73 
                                     0058    74 PARM_QUALS:
                                     0058    75 	$CLIQUALDESC -			;DEFINE A QUALIFIER
                                     0058    76 		QDCODE=CLI$K_SORT_BLOC,-;/BLOCKSIZE:N
                                     0058    77 		TRUACT=SORT_BLOCKSIZE	;CALL QUALIFIER HANDLER
                           0000006C  0058       	.BLKB	CLI$C_QUALDEF
                           00000058  006C       	. = $CLI.+CLI$B_QDBLKSIZ
                                 17' 0058       	  .BYTE	30065$-.
                                 0A  0059       	  .BYTE	CLI$K_SORT_BLOC
                           00000064  005A       	. = $CLI.+CLI$A_TRUACT
                           FFFFFFE5' 0064       	    .LONG	<SORT_BLOCKSIZE-$CLI.>
                           0000006C  0068       . = $CLI..
                                 00  006C       	.BYTE	0
                                 00  006D       	.BYTE	0
                                 00  006E       	.BYTE	0
                                     006F       30065$:
                                     006F    78 
                                     006F    79 	$CLIQUALDESC -			;DEFINE A QUALIFIER
                                     006F    80 		QDCODE=CLI$K_SORT_FORM,-;/FORMAT:(TYPE=X,RECORD_SIZE=N)
                                     006F    81 		TRUACT=SORT_FORMAT	;CALL QUALIFIER HANDLER
                           00000083  006F       	.BLKB	CLI$C_QUALDEF
                           0000006F  0083       	. = $CLI.+CLI$B_QDBLKSIZ
                                 17' 006F       	  .BYTE	30069$-.
                                 07  0070       	  .BYTE	CLI$K_SORT_FORM
                           0000007B  0071       	. = $CLI.+CLI$A_TRUACT
                           FFFFFFFB' 007B       	    .LONG	<SORT_FORMAT-$CLI.>
                           00000083  007F       . = $CLI..
                                 00  0083       	.BYTE	0
                                 00  0084       	.BYTE	0
                                 00  0085       	.BYTE	0
                                     0086       30069$:
                                     0086    82 
                                     0086    83 
                                     0086    84 	$CLIQUALDESC	END_LIST	;TERMINATE THE QUALIFIER LIST
                                 00  0086       	.BYTE	0
                                     0087    85 
                                     0087    86 QUAL_ARGLIST:
                                     0087    87 	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
                                     0087    88 		QUAL_DESC,-		;FOR COMMAND QUALIFIERS
                                     0087    89 		CLIWORKAREA,-		;WORK AREA FOR CLI
                                     0087    90 		BITMAP			;BIT ARRAY
                           00000003  0087       		.LONG	3
                           00000097' 008B       		.LONG	QUAL_DESC
                           00000000' 008F       		.LONG	CLIWORKAREA
                           00000000' 0093       		.LONG	BITMAP
                                     0097    91 
                                     0097    92 QUAL_DESC:
                                     0097    93 	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
                                     0097    94 		RQTYPE=CLI$K_GETQUAL,-	;FOR COMMAND QUALIFIERS
                                     0097    95 		QUALST=QUAL_LIST	;ADDRESS OF THE QUALIFIERS
                           000000B3  0097       	.BLKB	CLI$C_REQDESC
                           00000097  00B3       	. = $CLI.+CLI$B_RQTYPE
                                 02  0097       	  .BYTE	CLI$K_GETQUAL
                           000000AF  0098       	. = $CLI.+CLI$A_QUALST
SORT            /RSX - BACKTRANSLATOR FOR SORT COMMAND           22-AUG-1978 05:28:13   VAX-11 MACRO X0.3-11               Page   6
HJ                                                                                                                               (2)

                           0000001C' 00AF       	    .LONG	<QUAL_LIST-$CLI.>
                                     00B3    96 
                                     00B3    97 
                                     00B3    98 QUAL_LIST:
                                     00B3    99 	$CLIQUALDESC -			;DEFINE A QUALIFIER
                                     00B3   100 		QDCODE=CLI$K_SORT_ALLO,-;/ALLOCATION:N
                                     00B3   101 		TRUACT=SORT_ALLOCATION	;CALL QUALIFIER HANDLER
                           000000C7  00B3       	.BLKB	CLI$C_QUALDEF
                           000000B3  00C7       	. = $CLI.+CLI$B_QDBLKSIZ
                                 17' 00B3       	  .BYTE	30074$-.
                                 09  00B4       	  .BYTE	CLI$K_SORT_ALLO
                           000000BF  00B5       	. = $CLI.+CLI$A_TRUACT
                           FFFFFF7F' 00BF       	    .LONG	<SORT_ALLOCATION-$CLI.>
                           000000C7  00C3       . = $CLI..
                                 00  00C7       	.BYTE	0
                                 00  00C8       	.BYTE	0
                                 00  00C9       	.BYTE	0
                                     00CA       30074$:
                                     00CA   102 
                                     00CA   103 	$CLIQUALDESC -			;DEFINE A QUALIFIER
                                     00CA   104 		QDCODE=CLI$K_SORT_BUCK,-;/BUCKET_SIZE:N
                                     00CA   105 		TRUACT=SORT_BUCKET	;CALL QUALIFIER HANDLER
                           000000DE  00CA       	.BLKB	CLI$C_QUALDEF
                           000000CA  00DE       	. = $CLI.+CLI$B_QDBLKSIZ
                                 17' 00CA       	  .BYTE	30078$-.
                                 08  00CB       	  .BYTE	CLI$K_SORT_BUCK
                           000000D6  00CC       	. = $CLI.+CLI$A_TRUACT
                           FFFFFF7E' 00D6       	    .LONG	<SORT_BUCKET-$CLI.>
                           000000DE  00DA       . = $CLI..
                                 00  00DE       	.BYTE	0
                                 00  00DF       	.BYTE	0
                                 00  00E0       	.BYTE	0
                                     00E1       30078$:
                                     00E1   106 
                                     00E1   107 	$CLIQUALDESC -			;DEFINE A QUALIFIER
                                     00E1   108 		QDCODE=CLI$K_SORT_CONT,-;/CONTIGUOUS
                                     00E1   109 		TRUACT=SORT_CONTIG	;CALL QUALIFIER HANDLER
                           000000F5  00E1       	.BLKB	CLI$C_QUALDEF
                           000000E1  00F5       	. = $CLI.+CLI$B_QDBLKSIZ
                                 17' 00E1       	  .BYTE	30082$-.
                                 0B  00E2       	  .BYTE	CLI$K_SORT_CONT
                           000000ED  00E3       	. = $CLI.+CLI$A_TRUACT
                           FFFFFF72' 00ED       	    .LONG	<SORT_CONTIG-$CLI.>
                           000000F5  00F1       . = $CLI..
                                 00  00F5       	.BYTE	0
                                 00  00F6       	.BYTE	0
                                 00  00F7       	.BYTE	0
                                     00F8       30082$:
                                     00F8   110 
                                     00F8   111 	$CLIQUALDESC -			;DEFINE A QUALIFIER
                                     00F8   112 		QDCODE=CLI$K_SORT_DEVI,-;/DEVICE:DEV
                                     00F8   113 		TRUACT=SORT_DEVICE	;CALL QUALIFIER HANDLER
                           0000010C  00F8       	.BLKB	CLI$C_QUALDEF
                           000000F8  010C       	. = $CLI.+CLI$B_QDBLKSIZ
                                 17' 00F8       	  .BYTE	30086$-.
                                 0C  00F9       	  .BYTE	CLI$K_SORT_DEVI
                           00000104  00FA       	. = $CLI.+CLI$A_TRUACT
SORT            /RSX - BACKTRANSLATOR FOR SORT COMMAND           22-AUG-1978 05:28:13   VAX-11 MACRO X0.3-11               Page   7
HJ                                                                                                                               (2)

                           FFFFFF66' 0104       	    .LONG	<SORT_DEVICE-$CLI.>
                           0000010C  0108       . = $CLI..
                                 00  010C       	.BYTE	0
                                 00  010D       	.BYTE	0
                                 00  010E       	.BYTE	0
                                     010F       30086$:
                                     010F   114 
                                     010F   115 	$CLIQUALDESC -			;DEFINE A QUALIFIER
                                     010F   116 		QDCODE=CLI$K_SORT_INDE,-;/INDEX:N
                                     010F   117 		TRUACT=SORT_INDEX	;CALL QUALIFIER HANDLER
                           00000123  010F       	.BLKB	CLI$C_QUALDEF
                           0000010F  0123       	. = $CLI.+CLI$B_QDBLKSIZ
                                 17' 010F       	  .BYTE	30090$-.
                                 0D  0110       	  .BYTE	CLI$K_SORT_INDE
                           0000011B  0111       	. = $CLI.+CLI$A_TRUACT
                           FFFFFF66' 011B       	    .LONG	<SORT_INDEX-$CLI.>
                           00000123  011F       . = $CLI..
                                 00  0123       	.BYTE	0
                                 00  0124       	.BYTE	0
                                 00  0125       	.BYTE	0
                                     0126       30090$:
                                     0126   118 
                                     0126   119 	$CLIQUALDESC -			;DEFINE A QUALIFIER
                                     0126   120 		QDCODE=CLI$K_SORT_KEY ,-;/KEY:(DATA=A,ORDER=B,START=M,LEN=N)
                                     0126   121 		TRUACT=SORT_KEY		;CALL QUALIFIER HANDLER
                           0000013A  0126       	.BLKB	CLI$C_QUALDEF
                           00000126  013A       	. = $CLI.+CLI$B_QDBLKSIZ
                                 17' 0126       	  .BYTE	30094$-.
                                 02  0127       	  .BYTE	CLI$K_SORT_KEY
                           00000132  0128       	. = $CLI.+CLI$A_TRUACT
                           FFFFFF5B' 0132       	    .LONG	<SORT_KEY-$CLI.>
                           0000013A  0136       . = $CLI..
                                 00  013A       	.BYTE	0
                                 00  013B       	.BYTE	0
                                 00  013C       	.BYTE	0
                                     013D       30094$:
                                     013D   122 
                                     013D   123 	$CLIQUALDESC -			;DEFINE A QUALIFIER
                                     013D   124 		QDCODE=CLI$K_SORT_PROC,-;/PROC:X
                                     013D   125 		TRUACT=SORT_PROCESS	;CALL QUALIFIER HANDLER
                           00000151  013D       	.BLKB	CLI$C_QUALDEF
                           0000013D  0151       	. = $CLI.+CLI$B_QDBLKSIZ
                                 17' 013D       	  .BYTE	30098$-.
                                 01  013E       	  .BYTE	CLI$K_SORT_PROC
                           00000149  013F       	. = $CLI.+CLI$A_TRUACT
                           FFFFFF50' 0149       	    .LONG	<SORT_PROCESS-$CLI.>
                           00000151  014D       . = $CLI..
                                 00  0151       	.BYTE	0
                                 00  0152       	.BYTE	0
                                 00  0153       	.BYTE	0
                                     0154       30098$:
                                     0154   126 
                                     0154   127 	$CLIQUALDESC -			;DEFINE A QUALIFIER
                                     0154   128 		QDCODE=CLI$K_SORT_RELA,-;/RELATIVE
                                     0154   129 		TRUACT=SORT_RELATIVE	;CALL QUALIFIER HANDLER
                           00000168  0154       	.BLKB	CLI$C_QUALDEF
                           00000154  0168       	. = $CLI.+CLI$B_QDBLKSIZ
SORT            /RSX - BACKTRANSLATOR FOR SORT COMMAND           22-AUG-1978 05:28:13   VAX-11 MACRO X0.3-11               Page   8
HJ                                                                                                                               (2)

                                 17' 0154       	  .BYTE	30102$-.
                                 0E  0155       	  .BYTE	CLI$K_SORT_RELA
                           00000160  0156       	. = $CLI.+CLI$A_TRUACT
                           FFFFFF76' 0160       	    .LONG	<SORT_RELATIVE-$CLI.>
                           00000168  0164       . = $CLI..
                                 00  0168       	.BYTE	0
                                 00  0169       	.BYTE	0
                                 00  016A       	.BYTE	0
                                     016B       30102$:
                                     016B   130 
                                     016B   131 	$CLIQUALDESC -			;DEFINE A QUALIFIER
                                     016B   132 		QDCODE=CLI$K_SORT_RSX1	;/RSX11
                           0000017F  016B       	.BLKB	CLI$C_QUALDEF
                           0000016B  017F       	. = $CLI.+CLI$B_QDBLKSIZ
                                 17' 016B       	  .BYTE	30106$-.
                                 06  016C       	  .BYTE	CLI$K_SORT_RSX1
                           0000017F  016D       . = $CLI..
                                 00  017F       	.BYTE	0
                                 00  0180       	.BYTE	0
                                 00  0181       	.BYTE	0
                                     0182       30106$:
                                     0182   133 
                                     0182   134 	$CLIQUALDESC -			;DEFINE A QUALIFIER
                                     0182   135 		QDCODE=CLI$K_SORT_SEQU,-;/SEQUENTIAL
                                     0182   136 		TRUACT=SORT_SEQUENTIAL	;CALL QUALIFIER HANDLER
                           00000196  0182       	.BLKB	CLI$C_QUALDEF
                           00000182  0196       	. = $CLI.+CLI$B_QDBLKSIZ
                                 17' 0182       	  .BYTE	30110$-.
                                 0F  0183       	  .BYTE	CLI$K_SORT_SEQU
                           0000018E  0184       	. = $CLI.+CLI$A_TRUACT
                           FFFFFF53' 018E       	    .LONG	<SORT_SEQUENTIAL-$CLI.>
                           00000196  0192       . = $CLI..
                                 00  0196       	.BYTE	0
                                 00  0197       	.BYTE	0
                                 00  0198       	.BYTE	0
                                     0199       30110$:
                                     0199   137 
                                     0199   138 	$CLIQUALDESC -			;DEFINE A QUALIFIER
                                     0199   139 		QDCODE=CLI$K_SORT_SPEC,-;/SPECIFICATION:FILESPEC
                                     0199   140 		TRUACT=SORT_SPEC	;CALL QUALIFIER HANDLER
                           000001AD  0199       	.BLKB	CLI$C_QUALDEF
                           00000199  01AD       	. = $CLI.+CLI$B_QDBLKSIZ
                                 17' 0199       	  .BYTE	30114$-.
                                 05  019A       	  .BYTE	CLI$K_SORT_SPEC
                           000001A5  019B       	. = $CLI.+CLI$A_TRUACT
                           FFFFFF47' 01A5       	    .LONG	<SORT_SPEC-$CLI.>
                           000001AD  01A9       . = $CLI..
                                 00  01AD       	.BYTE	0
                                 00  01AE       	.BYTE	0
                                 00  01AF       	.BYTE	0
                                     01B0       30114$:
                                     01B0   141 
                                     01B0   142 	$CLIQUALDESC -			;DEFINE A QUALIFIER
                                     01B0   143 		QDCODE=CLI$K_SORT_WORK,-;/WORK_FILES:N
                                     01B0   144 		TRUACT=SORT_WORKFILES	;CALL QUALIFIER HANDLER
                           000001C4  01B0       	.BLKB	CLI$C_QUALDEF
                           000001B0  01C4       	. = $CLI.+CLI$B_QDBLKSIZ
SORT            /RSX - BACKTRANSLATOR FOR SORT COMMAND           22-AUG-1978 05:28:13   VAX-11 MACRO X0.3-11               Page   9
HJ                                                                                                                               (2)

                                 17' 01B0       	  .BYTE	30118$-.
                                 04  01B1       	  .BYTE	CLI$K_SORT_WORK
                           000001BC  01B2       	. = $CLI.+CLI$A_TRUACT
                           FFFFFF48' 01BC       	    .LONG	<SORT_WORKFILES-$CLI.>
                           000001C4  01C0       . = $CLI..
                                 00  01C4       	.BYTE	0
                                 00  01C5       	.BYTE	0
                                 00  01C6       	.BYTE	0
                                     01C7       30118$:
                                     01C7   145 
                                     01C7   146 
                                     01C7   147 	$CLIQUALDESC	END_LIST	;TERMINATE THE QUALIFIER LIST
                                 00  01C7       	.BYTE	0
SORT            /RSX - BACKTRANSLATOR FOR SORT COMMAND           22-AUG-1978 05:28:13   VAX-11 MACRO X0.3-11               Page  10
HJ                                                                                                                               (3)

                                     01C8   149 ;	.SBTTL SORT/RSX
                                     01C8   150 ;+
                                     01C8   151 ; BACKTRANSLATOR SORT
                                     01C8   152 ;
                                     01C8   153 ; CONVERTS DCL COMMAND TO COMPATIBILITY MODE IMAGE COMMAND
                                     01C8   154 ;
                                     01C8   155 ;
                                     01C8   156 ; INPUTS:
                                     01C8   157 ;  THE INPUTS ARE RETURNED FROM THE DCL RESULT PARSER AS RESPONSES
                                     01C8   158 ;  TO THE VARIOUS REQUEST DESCRIPTORS THAT ARE GIVEN TO IT.
                                     01C8   159 ;
                                     01C8   160 ;
                                     01C8   161 ; OUTPUTS:
                                     01C8   162 ;  THE OUTPUT CONSISTS OF TWO STRINGS OR AN ERROR MESSAGE AND ABORT.
                                     01C8   163 ;  THE CALLER OPENS THE IMAGE AND INVOKES THE COMPATIBILITY EMULATOR
                                     01C8   164 ;  IF NO ERROR OCCURS.
                                     01C8   165 ;
                                     01C8   166 ;  1- FILENAME STRING OF COMPATIBILITY MODE IMAGE TO BE ACTIVATED.
                                     01C8   167 ;
                                     01C8   168 ;  2- COMMAND LINE TO BE GIVEN TO THE IMAGE.
                                     01C8   169 ;
                                     01C8   170 ;-
                                     01C8   171 
                                     01C8   172 	PURE
                                 00000000       	.PSECT	PURE_	BYTE,RD,EXE,NOWRT
                                     0000   173 
                                     0000   174 SORT::
                                 FA  0000   175 	CALLG	W^QUAL_ARGLIST,-	;PROCESS COMMAND OPTIONS -
         08 BC       0087'CF         0001   176 		@CLI$A_UTILSERV(AP)	;DEFAULT OPTIONS TO OUTPUT FILESPEC
                                 FA  0006   177 	CALLG	W^OUTPUT_ARGLIST,-	;PROCESS PRIMARY OUTPUT
         08 BC       002C'CF         0007   178 		@CLI$A_UTILSERV(AP)
            59       0044'CF     7D  000C   179 	MOVQ	W^CLI$Q_RQDESC+OUTPUT_DESC,R9 ;PICK UP STRING DESCRIPTOR
                          FFEC'  30  0011   180 	BSBW	INSERTARG		;SAVE IT AS PRIMARY OUTPUT
       0000'CF         F6 8F     90  0014   181 	MOVB	#PRIM_INPUT,W^HOLDLOC	;CAUSE OPTIONS TO GO ON INPUT
       0000'CF         F6 8F     90  001A   182 	MOVB	#PRIM_INPUT,W^PARAMLOC	;SET UP TO INPUT
                                 FA  0020   183 	CALLG	W^INPUT_ARGLIST,-	;PROCESS THE PRIMARY INPUT
         08 BC       0000'CF         0021   184 		@CLI$A_UTILSERV(AP)
            59       0018'CF     7D  0026   185 	MOVQ	W^CLI$Q_RQDESC+INPUT_DESC,R9 ;PICK UP STRING DESCRIPTOR
                          FFD2'  30  002B   186 	BSBW	INSERTARG		;SAVE IT AS PRIMARY INPUT
                                     002E   187 	DEFPROG	SRT			;RETURN DEFAULT PROGRAM TO RUN
            50            0E     D0  002E       	MOVL	#PROG_SRT,R0
                                 05  0031   188 	RSB				;RETURN TO GENERATE COMMAND TEXT
                                     0032   189 
                                     0032   190 
                                     0032   191 SORT_ALLOCATION:
                                     0032   192 	$GETDECNUM	</AL>		;ACCEPT ALLOCATION FOR OUTPUT FILE
                               0FFC  0032       	.WORD	SAVE_REG_MASK
                          FFC9'  30  0034       	BSBW	GETSTRING
                                 80  0037       	.BYTE	$$$FLAGS
                                 00  0038       	.BYTE	0
                                 03  0039       	.BYTE	$$CNT
                           4C 41 2F  003A       	.ASCII	\/AL\
                                     003D   193 
                                     003D   194 SORT_BLOCKSIZE:
                                     003D   195 	$GETDECNUM	</BL>		;ACCEPT BLOCK SIZE ON INPUT OR OUTPUT
                               0FFC  003D       	.WORD	SAVE_REG_MASK
                          FFBE'  30  003F       	BSBW	GETSTRING
SORT            /RSX - BACKTRANSLATOR FOR SORT COMMAND           22-AUG-1978 05:28:13   VAX-11 MACRO X0.3-11               Page  11
HJ                                                                                                                               (3)

                                 80  0042       	.BYTE	$$$FLAGS
                                 00  0043       	.BYTE	0
                                 03  0044       	.BYTE	$$CNT
                           4C 42 2F  0045       	.ASCII	\/BL\
                                     0048   196 
                                     0048   197 SORT_BUCKET:
                                     0048   198 	$GETDECNUM	</BU>		;ACCEPT BUCKET SIZE OPTION
                               0FFC  0048       	.WORD	SAVE_REG_MASK
                          FFB3'  30  004A       	BSBW	GETSTRING
                                 80  004D       	.BYTE	$$$FLAGS
                                 00  004E       	.BYTE	0
                                 03  004F       	.BYTE	$$CNT
                           55 42 2F  0050       	.ASCII	\/BU\
                                     0053   199 
                                     0053   200 SORT_CONTIG:
                                     0053   201 	$SETSTRING	</CO>		;ACCEPT /CONTIGUOUS FOR OUTPUT FILE
                               0FFC  0053       	.WORD	SAVE_REG_MASK
                          FFA8'  30  0055       	BSBW	SETSTRING
                                 00  0058       	.BYTE	$$$FLAGS
                                 00  0059       	.BYTE	0
                                 03  005A       	.BYTE	$$CNT
                           4F 43 2F  005B       	.ASCII	\/CO\
                                     005E   202 
                                     005E   203 SORT_DEVICE:
                                     005E   204 	$GETSTRING	</DE>,POS=<PRIM_INPUT> ;ACCEPT WORKFILE DEVICE NAME
                               0FFC  005E       	.WORD	SAVE_REG_MASK
                          FF9D'  30  0060       	BSBW	GETSTRING
                                 04  0063       	.BYTE	$$$FLAGS
                                 00  0064       	.BYTE	0
                                 F6  0065       	.BYTE	PRIM_INPUT
                                 03  0066       	.BYTE	$$CNT
                           45 44 2F  0067       	.ASCII	\/DE\
                                     006A   205 
                                     006A   206 SORT_FORMAT:
                                     006A   207 	$GETSTRING	</FO>,FLAGS=<BTR$M_LIST> ;ACCEPT RECORD FORMAT, SIZE
                               0FFC  006A       	.WORD	SAVE_REG_MASK
                          FF91'  30  006C       	BSBW	GETSTRING
                                 40  006F       	.BYTE	$$$FLAGS
                                 00  0070       	.BYTE	0
                                 03  0071       	.BYTE	$$CNT
                           4F 46 2F  0072       	.ASCII	\/FO\
                                     0075   208 
                                     0075   209 SORT_INDEX:
                                     0075   210 	$GETDECNUM	</IN>,POS=<PRIM_INPUT> ;ACCEPT NUMBER OF INDEX KEYS
                               0FFC  0075       	.WORD	SAVE_REG_MASK
                          FF86'  30  0077       	BSBW	GETSTRING
                                 84  007A       	.BYTE	$$$FLAGS
                                 00  007B       	.BYTE	0
                                 F6  007C       	.BYTE	PRIM_INPUT
                                 03  007D       	.BYTE	$$CNT
                           4E 49 2F  007E       	.ASCII	\/IN\
                                     0081   211 
                                     0081   212 SORT_KEY:
                                     0081   213 	$GETSTRING	</KE>,POS=<PRIM_INPUT>,FLAGS=<BTR$M_LIST> ;ACCEPT SORT
                               0FFC  0081       	.WORD	SAVE_REG_MASK
                          FF7A'  30  0083       	BSBW	GETSTRING
                                 44  0086       	.BYTE	$$$FLAGS
SORT            /RSX - BACKTRANSLATOR FOR SORT COMMAND           22-AUG-1978 05:28:13   VAX-11 MACRO X0.3-11               Page  12
HJ                                                                                                                               (3)

                                 00  0087       	.BYTE	0
                                 F6  0088       	.BYTE	PRIM_INPUT
                                 03  0089       	.BYTE	$$CNT
                           45 4B 2F  008A       	.ASCII	\/KE\
                                     008D   214 					;KEY INFORMATION
                                     008D   215 
                                     008D   216 SORT_PROCESS:
                                     008D   217 	$SETSTRING	</PR>,FLAGS=<BTR$M_RETURN> ;SET UP /PROCESS OPTION
                               0FFC  008D       	.WORD	SAVE_REG_MASK
                          FF6E'  30  008F       	BSBW	SETSTRING
                                 01  0092       	.BYTE	$$$FLAGS
                                 00  0093       	.BYTE	0
                                 03  0094       	.BYTE	$$CNT
                           52 50 2F  0095       	.ASCII	\/PR\
                                     0098   218 10$:	$GETKEYWORD	LIST=<-		;ACCEPT /PROCESS:TYPE OPTION
                                     0098   219 				RECORD,-
                                     0098   220 				TAG,-
                                     0098   221 				ADDRESS,-
                                     0098   222 				INDEX>
                          FF65'  30  0098       	BSBW	GETKEYWORD
                                 1A' 009B       	.BYTE	30123$-30124$
                                     009C       30124$:
                                 06' 009C       	.BYTE	$$CNT
                  44 52 4F 43 45 52  009D       	.ASCII	\RECORD\
                                 03' 00A3       	.BYTE	$$CNT
                           47 41 54  00A4       	.ASCII	\TAG\
                                 07' 00A7       	.BYTE	$$CNT
               53 53 45 52 44 44 41  00A8       	.ASCII	\ADDRESS\
                                 05' 00AF       	.BYTE	$$CNT
                     58 45 44 4E 49  00B0       	.ASCII	\INDEX\
                                 00  00B5       	.BYTE	0
                                     00B6       30123$:
                                     00B6   223 	$REPLACE	<:R,:T,:A,:I>,10$
                          FF47'  30  00B6       	BSBW	REPLACE
                                 DE' 00B9       	.BYTE	10$-30126$
                                     00BA       30126$:
                                 FF  00BA       	.BYTE	$$INDEX
                                 02  00BB       	.BYTE	$$CNT
                              52 3A  00BC       	.ASCII	\:R\
                                 FE  00BE       	.BYTE	$$INDEX
                                 02  00BF       	.BYTE	$$CNT
                              54 3A  00C0       	.ASCII	\:T\
                                 FD  00C2       	.BYTE	$$INDEX
                                 02  00C3       	.BYTE	$$CNT
                              41 3A  00C4       	.ASCII	\:A\
                                 FC  00C6       	.BYTE	$$INDEX
                                 02  00C7       	.BYTE	$$CNT
                              49 3A  00C8       	.ASCII	\:I\
                                     00CA       30125$:
                                     00CA   224 
                                     00CA   225 SORT_RELATIVE:
                                     00CA   226 	$SETSTRING	</RE>		;ACCEPT RELATIVE OUTPUT FILE OPTION
                               0FFC  00CA       	.WORD	SAVE_REG_MASK
                          FF31'  30  00CC       	BSBW	SETSTRING
                                 00  00CF       	.BYTE	$$$FLAGS
                                 00  00D0       	.BYTE	0
                                 03  00D1       	.BYTE	$$CNT
SORT            /RSX - BACKTRANSLATOR FOR SORT COMMAND           22-AUG-1978 05:28:13   VAX-11 MACRO X0.3-11               Page  13
HJ                                                                                                                               (3)

                           45 52 2F  00D2       	.ASCII	\/RE\
                                     00D5   227 
                                     00D5   228 SORT_SEQUENTIAL:
                                     00D5   229 	$SETSTRING	</SE>		;ACCEPT SEQUENTIAL OUTPUT FILE OPTION
                               0FFC  00D5       	.WORD	SAVE_REG_MASK
                          FF26'  30  00D7       	BSBW	SETSTRING
                                 00  00DA       	.BYTE	$$$FLAGS
                                 00  00DB       	.BYTE	0
                                 03  00DC       	.BYTE	$$CNT
                           45 53 2F  00DD       	.ASCII	\/SE\
                                     00E0   230 
                                     00E0   231 SORT_SPEC:
                                     00E0   232 	$INLINE				;PROCESS LOCALLY TO MAKE 2ND INPUT
                               0FFC  00E0       	.WORD	SAVE_REG_MASK
                          FF1B'  30  00E2   233 	BSBW	GETSUBVAL		;PICK UP FILESPEC (CLI HAS 'VALREQ')
            59       0008'CF     7D  00E5   234 	MOVQ	W^CLI$Q_RQDESC+VALUE_DESC,R9 ;GET DESCRIPTOR FOR FILESPEC
       0000'CF         F5 8F     90  00EA   235 	MOVB	#PRIM_INPUT-1,W^PARAMLOC;FLAG AS SECOND INPUT FILE
                          FF0D'  30  00F0   236 	BSBW	INSERTARG		;PUT IT INTO THE INPUT LIST
                     0000'CF     94  00F3   237 	CLRB	W^PARAMLOC		;RESET BACK TO PRIMARY OUTPUT POSITION
                                 04  00F7   238 	RET				;RETURN TO CLI
                                     00F8   239 
                                     00F8   240 SORT_WORKFILES:
                                     00F8   241 	$GETDECNUM	</FI>		;SET UP /WORKFILES:N
                               0FFC  00F8       	.WORD	SAVE_REG_MASK
                          FF03'  30  00FA       	BSBW	GETSTRING
                                 80  00FD       	.BYTE	$$$FLAGS
                                 00  00FE       	.BYTE	0
                                 03  00FF       	.BYTE	$$CNT
                           49 46 2F  0100       	.ASCII	\/FI\
                                     0103   242 
                                     0103   243 
                                     0103   244 	.END
SORT            /RSX - BACKTRANSLATOR FOR SORT COMMAND           22-AUG-1978 05:28:13   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                     (3)

$$$            = 00000004            CLI$B_QDSTAT     00000003            CLI$L_INIARGCNT  00000000            
$$$.           = 00000001            CLI$B_RQFLGS     00000002            CLI$L_LINKFLAG   00000014            
$$$FLAGS       = 00000080            CLI$B_RQINDX     00000001            CLI$L_RQVALU     0000000C            
$$$GBL         = 00000000            CLI$B_RQSTAT     00000003            CLI$L_USRVAL     00000014            
$$CNT          = 00000003            CLI$B_RQTYPE     00000000            CLI$L_WORKAREA   00000000            
$$INDEX        = FFFFFFFB            CLI$C_QDBITS     00000014            CLI$M_ABSADR   = 00000002            
$$T1           = 00000003            CLI$C_QUALDEF    00000014            CLI$M_ALLOCCUR = 00000001            
$CLI.          = 000001B0 R     03   CLI$C_REQDESC    0000001C            CLI$M_BATCH    = 00000008            
$CLI..         = 000001C7 R     03   CLI$C_WORKAREA   00000080            CLI$M_CONCATINP= 00000002            
$QUALNUM$      = 00000011            CLI$K_ASCIIVAL = 00000041            CLI$M_DBGEXCP  = 00010000            
BIT...         = 00000008            CLI$K_CLISERV  = 00000005            CLI$M_DBGTRU   = 00000002            
BITMAP           ********   X   03   CLI$K_ENDPRM1  = 00000030            CLI$M_DEBUG    = 00000001            
BTR$M_DECIMAL  = 00000080            CLI$K_ENDPRM2  = 00000031            CLI$M_DUMMY    = 00000002            
BTR$M_EXPLICIT = 00000020            CLI$K_ENDPRM3  = 00000032            CLI$M_EXPNAM   = 00000004            
BTR$M_FORCE    = 00000002            CLI$K_ENDPRM4  = 00000033            CLI$M_INDIRECT = 00000010            
BTR$M_LIST     = 00000040            CLI$K_FILSPEC  = 00000044            CLI$M_KEYVALU  = 00000002            
BTR$M_MULTKEY  = 00000010            CLI$K_GETCMD   = 00000001            CLI$M_LASTVAL  = 00000001            
BTR$M_RETURN   = 00000001            CLI$K_GETOPT   = 00000003            CLI$M_MOREINP  = 00000004            
BTR$M_TEMPPOS  = 00000004            CLI$K_GETQUAL  = 00000002            CLI$M_MOREVALS = 00000001            
BTR$M_VALREQ   = 00000008            CLI$K_INITPRS  = 00000000            CLI$M_PARMDEF  = 00000008            
BTR$V_DECIMAL  = 00000007            CLI$K_INPSPEC  = 00000001            CLI$M_PARMPRS  = 00000001            
BTR$V_EXPLICIT = 00000005            CLI$K_INPUT1   = 00000010            CLI$M_PARMREQ  = 00000001            
BTR$V_FORCE    = 00000001            CLI$K_INPUT2   = 00000011            CLI$M_QDEXPA   = 00000004            
BTR$V_LIST     = 00000006            CLI$K_INPUT3   = 00000012            CLI$M_QDUSRV   = 00000002            
BTR$V_MULTKEY  = 00000004            CLI$K_INPUT4   = 00000013            CLI$M_QUALEXP  = 00000002            
BTR$V_RETURN   = 00000000            CLI$K_KEYVAL   = 00000043            CLI$M_QUALTRU  = 00000001            
BTR$V_TEMPPOS  = 00000002            CLI$K_KEYWORD  = 00000042            CLI$M_TRMVRBLV = 00000300            
BTR$V_VALREQ   = 00000003            CLI$K_NUMERVAL = 00000040            CLI$M_VERIFY   = 00000004            
BTR$_AMBIGKEYW = 00688030            CLI$K_OUTPUT1  = 00000020            CLI$M_VFYINP   = 00000020            
BTR$_ILLEGOPT  = 00688018            CLI$K_OUTPUT2  = 00000021            CLI$Q_QDVALDESC  00000004            
BTR$_IMGFNF    = 00688060            CLI$K_OUTPUT3  = 00000022            CLI$Q_RQDESC     00000008            
BTR$_INTFAIL   = 00688048            CLI$K_OUTPUT4  = 00000023            CLI$S_PRITYP   = 00000004            
BTR$_INVALKEYW = 00688028            CLI$K_OUTSPEC  = 00000002            CLI$S_SUBTYP   = 00000004            
BTR$_KEYVALOVR = 00688038            CLI$K_PARDONE  = 00000003            CLI$S_TRMVRBLV = 00000002            
BTR$_MISSNGVAL = 00688008            CLI$K_QDBITS     00000014            CLI$V_ABSADR   = 00000001            
BTR$_NOTIMPLEM = 00688020            CLI$K_QUALDEF    00000014            CLI$V_ALLOCCUR = 00000000            
BTR$_OPTVALOVR = 00688050            CLI$K_REQDESC    0000001C            CLI$V_BATCH    = 00000003            
BTR$_STRINGOVR = 00688010            CLI$K_SORT_ALLO= 00000009            CLI$V_CONCATINP= 00000001            
BTR$_TOOMANY   = 00688058            CLI$K_SORT_BLOC= 0000000A            CLI$V_DBGEXCP  = 00000010            
BTR$_UNEXPLIST = 00688040            CLI$K_SORT_BUCK= 00000008            CLI$V_DBGTRU   = 00000001            
BTRAN          = 00680000            CLI$K_SORT_CONT= 0000000B            CLI$V_DEBUG    = 00000000            
CLI$A_ABSACT     00000014            CLI$K_SORT_DEVI= 0000000C            CLI$V_DUMMY    = 00000001            
CLI$A_ERRACT     00000004            CLI$K_SORT_DUPL= 00000003            CLI$V_EXPNAM   = 00000002            
CLI$A_FLSACT     00000010            CLI$K_SORT_FORM= 00000007            CLI$V_INDIRECT = 00000004            
CLI$A_IMGFILED   00000010            CLI$K_SORT_INDE= 0000000D            CLI$V_KEYVALU  = 00000001            
CLI$A_IMGHDADR   0000000C            CLI$K_SORT_KEY = 00000002            CLI$V_LASTVAL  = 00000000            
CLI$A_PROGXFER   00000004            CLI$K_SORT_OVER= 00000010            CLI$V_MOREINP  = 00000002            
CLI$A_PRSACT     00000010            CLI$K_SORT_PROC= 00000001            CLI$V_MOREVALS = 00000000            
CLI$A_QDVALADR   00000008            CLI$K_SORT_RELA= 0000000E            CLI$V_PARMDEF  = 00000003            
CLI$A_QUALST     00000018            CLI$K_SORT_RSX1= 00000006            CLI$V_PARMPRS  = 00000000            
CLI$A_RQADDR     0000000C            CLI$K_SORT_SEQU= 0000000F            CLI$V_PARMREQ  = 00000000            
CLI$A_TRUACT     0000000C            CLI$K_SORT_SPEC= 00000005            CLI$V_PRITYP   = 00000004            
CLI$A_UTILSERV   00000008            CLI$K_SORT_WORK= 00000004            CLI$V_QDEXPA   = 00000002            
CLI$B_BITNUM     00000001            CLI$K_UTILOPR  = 00000000            CLI$V_QDUSRV   = 00000001            
CLI$B_QDBLKSIZ   00000000            CLI$K_VALCONV  = 00000004            CLI$V_QUALEXP  = 00000001            
CLI$B_QDCODE     00000001            CLI$K_WORKAREA   00000080            CLI$V_QUALTRU  = 00000000            
CLI$B_QDFLGS     00000002            CLI$L_CLIFLAG    00000018            CLI$V_SUBTYP   = 00000000            
SORT            /RSX - BACKTRANSLATOR FOR SORT COMMAND           22-AUG-1978 05:28:13   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                     (3)

CLI$V_TRMVRBLV = 00000008            QUAL_LIST        000000B3 R     03   SORT_RELATIVE    000000CA R     04   
CLI$V_VERIFY   = 00000002            QUA_B_DEFVAL     00000002            SORT_SEQUENTIAL  000000D5 R     04   
CLI$V_VFYINP   = 00000005            QUA_B_IMAGE      00000005            SORT_SPEC        000000E0 R     04   
CLI$W_QDVALSIZ   00000004            QUA_B_INDEX      00000001            SORT_WORKFILES   000000F8 R     04   
CLI$W_RQSIZE     00000008            QUA_B_OFFSET     00000000            VALUE_DESC       ********   X   04   
CLI$W_SERVCOD    00000001            QUA_B_PARMCNT    00000008            
CLIWORKAREA      ********   X   03   QUA_G_CHNGLST    00000006            
FATAL          = 00000004            QUA_M_BATDEF   = 00000100            
GBL...         = 00000000            QUA_M_CHNGLIST = 00000001            
GETKEYWORD       ********   X   04   QUA_M_DEFTRUE  = 00000080            
GETSTRING        ********   X   04   QUA_M_FILE     = 00000004            
GETSUBVAL        ********   X   04   QUA_M_IMAGE    = 00000400            
HOLDLOC          ********   X   04   QUA_M_INTDEF   = 00000200            
INPUT_ARGLIST    00000000 R     03   QUA_M_KEYVAL   = 00004000            
INPUT_DESC       00000010 R     03   QUA_M_LOCALKEY = 00000002            
INSERTARG        ********   X   04   QUA_M_NEG      = 00000040            
LAST_PARAM     = FFFFFFEC            QUA_M_ONEVAL   = 00002000            
NONE           = 00000000            QUA_M_OUTPUT   = 00000800            
OUTPUT_ARGLIST   0000002C R     03   QUA_M_PARM     = 00000010            
OUTPUT_DESC      0000003C R     03   QUA_M_VAL      = 00000020            
PARAMLOC         ********   X   04   QUA_M_VALREQ   = 00001000            
PARM_QUALS       00000058 R     03   QUA_M_VERB     = 00000008            
PRIM_INPUT     = FFFFFFF6            QUA_S_MAXPARM  = 00000004            
PRIM_OUTPUT    = 00000000            QUA_S_MINPARM  = 00000004            
PROG_BP2       = 0000000C            QUA_V_BATDEF   = 00000008            
PROG_CBL       = 00000008            QUA_V_CHNGLIST = 00000000            
PROG_CNT       = 0000000F            QUA_V_DEFTRUE  = 00000007            
PROG_DIF       = 0000000F            QUA_V_FILE     = 00000002            
PROG_DMP       = 00000007            QUA_V_IMAGE    = 0000000A            
PROG_F4V       = 00000002            QUA_V_INTDEF   = 00000009            
PROG_LBR       = 0000000B            QUA_V_KEYVAL   = 0000000E            
PROG_LIB       = 0000000A            QUA_V_LOCALKEY = 00000001            
PROG_MAC       = 00000004            QUA_V_MAXPARM  = 00000004            
PROG_MAR       = 00000003            QUA_V_MINPARM  = 00000000            
PROG_PIP       = 00000001            QUA_V_NEG      = 00000006            
PROG_SLP       = 00000006            QUA_V_ONEVAL   = 0000000D            
PROG_SOS       = 00000005            QUA_V_OUTPUT   = 0000000B            
PROG_SRT       = 0000000E            QUA_V_PARM     = 00000004            
PROG_TKB       = 00000009            QUA_V_VAL      = 00000005            
PROG_UFD       = 0000000D            QUA_V_VALREQ   = 0000000C            
PRO_B_FLAGS      00000001            QUA_V_VERB     = 00000003            
PRO_B_PROMPT     00000000            QUA_W_FLAGS      00000003            
PRO_K_LENGTH     00000002            QUA_W_PROMPT     00000009            
PRO_M_CONCAT   = 00000001            QUA_W_QUALIST    00000006            
PRO_M_IMPCAT   = 00000002            REPLACE          ********   X   04   
PRO_M_LIST     = 00000004            SAVE_REG_MASK  = 00000FFC            
PRO_M_OPTION   = 00000008            SETSTRING        ********   X   04   
PRO_M_REQ      = 00000010            SORT             00000000 RG    04   
PRO_M_STRING   = 00000020            SORT_ALLOCATION  00000032 R     04   
PRO_V_CONCAT   = 00000000            SORT_BLOCKSIZE   0000003D R     04   
PRO_V_IMPCAT   = 00000001            SORT_BUCKET      00000048 R     04   
PRO_V_LIST     = 00000002            SORT_CONTIG      00000053 R     04   
PRO_V_OPTION   = 00000003            SORT_DEVICE      0000005E R     04   
PRO_V_REQ      = 00000004            SORT_FORMAT      0000006A R     04   
PRO_V_STRING   = 00000005            SORT_INDEX       00000075 R     04   
QUAL_ARGLIST     00000087 R     03   SORT_KEY         00000081 R     04   
QUAL_DESC        00000097 R     03   SORT_PROCESS     0000008D R     04   
SORT            /RSX - BACKTRANSLATOR FOR SORT COMMAND           22-AUG-1978 05:28:13   VAX-11 MACRO X0.3-11               Page  16
PROGRAM SECTION SYNOPSIS                                                                                                         (3)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000080      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
IMPURE_          000001C8      03     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD    WRT LONG  
PURE_            00000103      04     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
11716. BYTES LEFT IN FREE MEMORY POOL.
1758. BYTES OF RECLAIMED MEMORY.
OBJ$:SORTCMD,LIS$:SORTCMD/-SP/LI:MEB=EXECML$/ML,LIB$:B/ML,SRC$:SORTCMD
61 MLB DIR RDS - 663 GETS TO DEFINE 39 MACROS. 134 INTER. FILE WRITES. 
