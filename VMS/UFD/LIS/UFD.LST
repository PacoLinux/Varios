UFD - CREATE DIRECTORY FILE	MACRO M1110  22-AUG-78 00:39
TABLE OF CONTENTS

     2-   28	MACRO CALLS AND	DEFINITIONS
     3-   65	ASSORTED DATA -	DPB'S AND THE FDB
     4-   96	OTHER RANDOM DATA
     5-  161	ERROR MESSAGES
     6-  196	MAIN PROGRAM
     7-  374	ERROR EXITS
     8-  422	ERROR MESSAGE PRINTER
     9-  443	QIO CALL ROUTINE
UFD - CREATE DIRECTORY FILE	MACRO M1110  22-AUG-78 00:39  PAGE 1


      1					.TITLE	UFD - CREATE DIRECTORY FILE
      2
      3						 .IDENT	 "V0415"
      4
      5					;
      6					; COPYRIGHT  1975,  DIGITAL EQUIPMENT CORP.,  MAYNARD,	MASS.
      7					; COPYRIGHT  1974,  DIGITAL EQUIPMENT CORP.,  MAYNARD,	MASS.
      8					;
      9					; THIS SOFTWARE	IS FURNISHED TO	PURCHASER UNDER	A LICENSE FOR USE
     10					; ON A SINGLE COMPUTER SYSTEM AND CAN BE COPIED	(WITH INCLUSION
     11					; OF DEC'S COPYRIGHT NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
     12					; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
     13					;
     14					; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE	WITHOUT
     15					; NOTICE AND SHOULD NOT	BE CONSTRUED AS	A COMMITMENT BY	DIGITAL
     16					; EQUIPMENT CORPORATION.
     17					;
     18					; DEC ASSUMES NO RESPONSIBILITY	FOR THE	USE OR RELIABILITY
     19					; OF ITS SOFTWARE ON EQUIPMENT WHICH IS	NOT SUPPLIED BY	DEC.
     20					;
     21					; ELLEN	R SIMICH 1 APR 76
     22					;
     23					; ANDREW C. GOLDSTEIN  23-JUN-78  13:37
     24
     25
     26						.ENABL	LC
UFD - CREATE DIRECTORY FILE	MACRO M1110  22-AUG-78 00:39  PAGE 2
MACRO CALLS AND	DEFINITIONS

     28					.SBTTL	MACRO CALLS AND	DEFINITIONS
     29
     30					; MACROS FROM SYSTEM LIBRARY
     31
     32						.MCALL	FSRSZ$,FDBDF$,FDOP$A,FDRC$A,FDBK$A,OFNB$W,WRITE$,CLOSE$
     33						.MCALL	FINIT$,WAIT$,DELET$,DIR$,QIOW$,QIOW$S,GMCR$,GLUN$,EXIT$S
     34
     35
     36					; MACRO	TO CALL	QIO ROUTINE
     37
     38					.MACRO	QIO	DPB
     39						JSR	R5,XQIO
     40						.WORD	DPB
     41					.ENDM	QIO
     42
     43					; MACRO	FOR SOB'S
     44
     45						.IF	NDF	R$$EIS
     46					.MACRO	SOB	RX,LABEL
     47						DEC	RX
     48						BNE	LABEL
     49					.ENDM	SOB
     50						.ENDC
     51
     52
     53		000001 			UFDLUN=1
     54		000001 			UFDEFN=1
     55		000002 			COLUN=2
     56		000002 			COEFN=2
     57
     58		000001 			EX$SUC	= 1
     59		000003 			EX$ERR	= 3
     60		100000 			FD.MNT	= 100000
     61		040000 			FD.F11	= 40000
     62		000004 			U.C1	= 4
     63		000200 			UC.CON	= 200
UFD - CREATE DIRECTORY FILE	MACRO M1110  22-AUG-78 00:39  PAGE 3
ASSORTED DATA -	DPB'S AND THE FDB

     65					.SBTTL	ASSORTED DATA -	DPB'S AND THE FDB
     66
     67					;
     68					; GET COMMAND LINE
     69					;
     70	000000				GCML:	GMCR$
     71					;
     72					; GET LUN INFO
     73					;
     74	000122				GLUN:	GLUN$	UFDLUN,LUNBUF
     75					;
     76					; READ ATTRIBUTES FROM CONTAINING DIRECTORY
     77					;
     78	000130				RATT:	QIOW$	IO.RAT,UFDLUN,UFDEFN,,IOSTAT,,<$FDB+F.FNB+N.DID,RATBLK,,,,>
     79					;
     80					; WRITE	ATTRIBUTES TO NEW DIRECTORY
     81					;
     82	000160				WATT:	QIOW$	IO.WAT,UFDLUN,UFDEFN,,IOSTAT,,<$FDB+F.FNB,WATBLK,,,,>
     83
     84
     85					;
     86					; FCS STRUCTURES TO CREATE NEW FILE
     87					;
     88	000210					FSRSZ$	0
     89
     90
     91	000210				$FDB:	FDBDF$
     92	000350					FDOP$A	UFDLUN,$UDEV
     93	000350					FDRC$A	FD.RWM
     94	000350					FDBK$A	DATBUF,512.,,,IOSTAT
UFD - CREATE DIRECTORY FILE	MACRO M1110  22-AUG-78 00:39  PAGE 4
OTHER RANDOM DATA

     96					.SBTTL	OTHER RANDOM DATA
     97					;
     98					; READ ATTRIBUTES CONTROL BLOCK
     99					;
    100	000350	   374 	   040 		RATBLK:	.BYTE	-4,32.		; RECORD ATTRIBUTES
    101	000352	000414'				.WORD	RECATT
    102	000354	   375 	   004 			.BYTE	-3,4		; FILE CHARACTERISTICS
    103	000356	000574'				.WORD	$FCHAR
    104	000360	   353 	   004 			.BYTE	-21.,4		; FILE OWNER UIC
    105	000362	000566'				.WORD	$FOWN
    106	000364	   352 	   002 			.BYTE	-22.,2		; FILE PROTECTION
    107	000366	000572'				.WORD	$FPRO
    108	000370	000000 				.WORD	0		; END
    109					;
    110					; WRITE	ATTRIBUTES CONTROL BLOCK
    111					;
    112	000372	   004 	   040 		WATBLK:	.BYTE	4,32.		; RECORD ATTRIBUTES
    113	000374	000414'				.WORD	RECATT
    114	000376	   003 	   004 			.BYTE	3,4		; FILE CHARACTERISTICS
    115	000400	000574'				.WORD	$FCHAR
    116	000402	   353 	   004 			.BYTE	-21.,4		; FILE OWNER UIC
    117	000404	000566'				.WORD	$FOWN
    118	000406	   026 	   002 			.BYTE	22.,2		; FILE PROTECTION
    119	000410	000572'				.WORD	$FPRO
    120	000412	000000 				.WORD	0		; END
    121					;
    122					; RECORD ATTRIBUTES
    123					;
    124	000414				RECATT:	.BLKB	32.
    125					;
    126					; RANDOM VARIABLES - PARSER OUTPUT
    127					;
    128	000454	000000 	000000 		$UUIC::	.WORD	0,0		; FILE OWNER
    129	000460	000000 			$UPRO::	.WORD	0		; PROTECTION
    130	000462	000000 			$UALL::	.WORD	0		; RECORDS TO ALLOCATE
    131	000464	000000 	000000 	000000 	$UDEV::	.WORD	0,0,0,0,0,0	; DEVICE NAME DESCRIPTOR (NULL DIR & FILE)
	000472	000000 	000000 	000000
    132
    133
    134	000500				$NAMEL::.BLKW	1		; TOTAL LENGTH OF DIRECTORY STRING
    135	000502	000000 			$NAMEC::.WORD	0		; COUNT	OF NAMES GIVEN
    136	000504	000000 			$NAMEP::.WORD	0		; POINTER TO NEXT AVAILABLE NAME
    137	000506				$NAME1::.BLKW	3		; FIRST	DIRECTORY NAME
    138	000514				$NAME2::.BLKW	3		; SECOND DIRECTORY NAME
    139	000522				$NAME3::.BLKW	3		; THIRD	DIRECTORY NAME
    140	000530				$NAME4::.BLKW	3		; FOURTH DIRECTORY NAME
    141	000536				$NAME5::.BLKW	3		; FIFTH	DIRECTORY NAME
    142	000544				$NAME6::.BLKW	3		; SIXTH	DIRECTORY NAME
    143	000552				$NAME7::.BLKW	3		; SEVENTH DIRECTORY NAME
    144	000560				$NAME8::.BLKW	3		; EIGHTH DIRECTORY NAME
    145					;
    146					; FILE DATA
    147					;
    148	000566	000000 	000000 		$FOWN::	.WORD	0,0		; FILE OWNER
    149	000572	000000 			$FPRO::	.WORD	0		; FILE PROTECTION
    150	000574	000000 	000000 		$FCHAR::.WORD	0,0		; FILE CHARACTERISTICS
    151
UFD - CREATE DIRECTORY FILE	MACRO M1110  22-AUG-78 00:39  PAGE 4-1
OTHER RANDOM DATA

    152	000600	000000 			.EXSTS::.WORD	0		; EXIT STATUS
    153	000602	000000 			ERRNUM:	.WORD	0		; ERROR	INDEX
    154	000604	000000 			CRFLG:	.WORD	0		; CREATION FLAG
    155	000606				IOSTAT:	.BLKW	2		; I/O STATUS BLOCK
    156
    157	000612				STRING::			; STRING BUFFER
    158	000612				LUNBUF:				; AND BUFFER FOR GET LUN INFO
    159	000612				DATBUF:	.BLKB	512.		; DATA BUFFER
UFD - CREATE DIRECTORY FILE	MACRO M1110  22-AUG-78 00:39  PAGE 5
ERROR MESSAGES

    161					.SBTTL  ERROR MESSAGES
    162
    163	000000					.PSECT	MSGSTR,D
    164					;
    165					; ERROR	MESSAGE	INDEX TABLE
    166					;
    167	000000	000030'			ERRMSG:	.WORD	ERRM0
    168	000002	000076'				.WORD	ERRM1
    169	000004	000123'				.WORD	ERRM2
    170	000006	000160'				.WORD	ERRM3
    171	000010	000214'				.WORD	ERRM4
    172	000012	000255'				.WORD	ERRM5
    173	000014	000320'				.WORD	ERRM6
    174	000016	000353'				.WORD	ERRM7
    175	000020	000420'				.WORD	ERRM8
    176	000022	000475'				.WORD	ERRM9
    177	000024	000545'				.WORD	ERRM10
    178	000026	000614'				.WORD	ERRM11
    179					;
    180					; THE ERROR MESSAGES THEMSELVES
    181					;
    182	000030	   015 	   125 	   106 	ERRM0:	.ASCIZ	<15>"UFD -- can't read MCR command buffer"
	000033	   104 	   040 	   055
	000036	   055 	   040 	   143
	000041	   141 	   156 	   047
	000044	   164 	   040 	   162
	000047	   145 	   141 	   144
	000052	   040 	   115 	   103
	000055	   122 	   040 	   143
	000060	   157 	   155 	   155
	000063	   141 	   156 	   144
	000066	   040 	   142 	   165
	000071	   146 	   146 	   145
	000074	   162 	   000
    183	000076	   015 	   125 	   106 	ERRM1:	.ASCIZ	<15>"UFD -- syntax error"
	000101	   104 	   040 	   055
	000104	   055 	   040 	   163
	000107	   171 	   156 	   164
	000112	   141 	   170 	   040
	000115	   145 	   162 	   162
	000120	   157 	   162 	   000
    184	000123	   015 	   125 	   106 	ERRM2:	.ASCIZ	<15>"UFD -- device not in system"
	000126	   104 	   040 	   055
	000131	   055 	   040 	   144
	000134	   145 	   166 	   151
	000137	   143 	   145 	   040
	000142	   156 	   157 	   164
	000145	   040 	   151 	   156
	000150	   040 	   163 	   171
	000153	   163 	   164 	   145
	000156	   155 	   000
    185	000160	   015 	   125 	   106 	ERRM3:	.ASCIZ	<15>"UFD -- not	Files-11 device"
	000163	   104 	   040 	   055
	000166	   055 	   040 	   156
	000171	   157 	   164 	   011
	000174	   106 	   151 	   154
	000177	   145 	   163 	   055
UFD - CREATE DIRECTORY FILE	MACRO M1110  22-AUG-78 00:39  PAGE 5-1
ERROR MESSAGES

	000202	   061 	   061 	   040
	000205	   144 	   145 	   166
	000210	   151 	   143 	   145
	000213	   000
    186	000214	   015 	   125 	   106 	ERRM4:	.ASCIZ	<15>"UFD -- directory already exists"
	000217	   104 	   040 	   055
	000222	   055 	   040 	   144
	000225	   151 	   162 	   145
	000230	   143 	   164 	   157
	000233	   162 	   171 	   040
	000236	   141 	   154 	   162
	000241	   145 	   141 	   144
	000244	   171 	   040 	   145
	000247	   170 	   151 	   163
	000252	   164 	   163 	   000
    187	000255	   015 	   125 	   106 	ERRM5:	.ASCIZ	<15>"UFD -- failed to create directory"
	000260	   104 	   040 	   055
	000263	   055 	   040 	   146
	000266	   141 	   151 	   154
	000271	   145 	   144 	   040
	000274	   164 	   157 	   040
	000277	   143 	   162 	   145
	000302	   141 	   164 	   145
	000305	   040 	   144 	   151
	000310	   162 	   145 	   143
	000313	   164 	   157 	   162
	000316	   171 	   000
    188	000320	   015 	   125 	   106 	ERRM6:	.ASCIZ	<15>"UFD -- volume not mounted"
	000323	   104 	   040 	   055
	000326	   055 	   040 	   166
	000331	   157 	   154 	   165
	000334	   155 	   145 	   040
	000337	   156 	   157 	   164
	000342	   040 	   155 	   157
	000345	   165 	   156 	   164
	000350	   145 	   144 	   000
    189	000353	   015 	   125 	   106 	ERRM7:	.ASCIZ	<15>"UFD -- too	many subdirectory levels"
	000356	   104 	   040 	   055
	000361	   055 	   040 	   164
	000364	   157 	   157 	   011
	000367	   155 	   141 	   156
	000372	   171 	   040 	   163
	000375	   165 	   142 	   144
	000400	   151 	   162 	   145
	000403	   143 	   164 	   157
	000406	   162 	   171 	   040
	000411	   154 	   145 	   166
	000414	   145 	   154 	   163
	000417	   000
    190	000420	   015 	   125 	   106 	ERRM8:	.ASCIZ	<15>"UFD -- access failure on existing directory"
	000423	   104 	   040 	   055
	000426	   055 	   040 	   141
	000431	   143 	   143 	   145
	000434	   163 	   163 	   040
	000437	   146 	   141 	   151
	000442	   154 	   165 	   162
	000445	   145 	   040 	   157
UFD - CREATE DIRECTORY FILE	MACRO M1110  22-AUG-78 00:39  PAGE 5-2
ERROR MESSAGES

	000450	   156 	   040 	   145
	000453	   170 	   151 	   163
	000456	   164 	   151 	   156
	000461	   147 	   040 	   144
	000464	   151 	   162 	   145
	000467	   143 	   164 	   157
	000472	   162 	   171 	   000
    191	000475	   015 	   125 	   106 	ERRM9:	.ASCIZ	<15>"UFD -- close failure on directory file"
	000500	   104 	   040 	   055
	000503	   055 	   040 	   143
	000506	   154 	   157 	   163
	000511	   145 	   040 	   146
	000514	   141 	   151 	   154
	000517	   165 	   162 	   145
	000522	   040 	   157 	   156
	000525	   040 	   144 	   151
	000530	   162 	   145 	   143
	000533	   164 	   157 	   162
	000536	   171 	   040 	   146
	000541	   151 	   154 	   145
	000544	   000
    192	000545	   015 	   125 	   106 	ERRM10:	.ASCIZ	<15>"UFD -- failed to initialize directory"
	000550	   104 	   040 	   055
	000553	   055 	   040 	   146
	000556	   141 	   151 	   154
	000561	   145 	   144 	   040
	000564	   164 	   157 	   040
	000567	   151 	   156 	   151
	000572	   164 	   151 	   141
	000575	   154 	   151 	   172
	000600	   145 	   040 	   144
	000603	   151 	   162 	   145
	000606	   143 	   164 	   157
	000611	   162 	   171 	   000
    193	000614	   015 	   125 	   106 	ERRM11:	.ASCIZ	<15>"UFD -- directory string is too long"
	000617	   104 	   040 	   055
	000622	   055 	   040 	   144
	000625	   151 	   162 	   145
	000630	   143 	   164 	   157
	000633	   162 	   171 	   040
	000636	   163 	   164 	   162
	000641	   151 	   156 	   147
	000644	   040 	   151 	   163
	000647	   040 	   164 	   157
	000652	   157 	   040 	   154
	000655	   157 	   156 	   147
	000660	   000
    194						.EVEN
UFD - CREATE DIRECTORY FILE	MACRO M1110  22-AUG-78 00:39  PAGE 6
MAIN PROGRAM

    196					.SBTTL  MAIN PROGRAM
    197
    198					;+
    199					;
    200					; *** -	$UFD - ENTRY FOR UFD MAIN PROGRAM
    201					;
    202					; CREATING A UFD BASICALLY INVOLVES FOLLOWING THE GIVEN	DIRECTORY PATCH
    203					; UNTIL	WE FIND	SOMETHING MISSING. DIRECTORIES NOT PRESENT ARE CREATED UNTIL
    204					; THE END OF THE DIRECTORY STRING IS REACHED. EACH DIRECTORY CREATED
    205					; INHERITS BY DEFAULT THE ATTRIBUTES, OWNERSHIP, AND PROTECTION	OF THE
    206					; PREVIOUS DIRECTORY.
    207					;
    208					;-
    209
    210
    211	000000					.PSECT	CODE
    212
    213
    214					;
    215					; INITIALIZE AND PARSE THE COMMAND LINE.
    216					;
    217	000000				$UFD::
    218	000000	005067 	000602'			CLR	ERRNUM		; INIT ERROR INDEX
    219	000004	012767 	000001 	000262'		MOV	#1,$FDB+F.ERR	; INIT ERROR STATUS
    220
    221	000012					DIR$	#GCML		; READ THE COMMAND LINE
    222	000020	103002 				BCC	10$
    223	000022	000167 	000706 			JMP	CMLERR		; NO COMMAND LINE
    224
    225	000026	012767 	000506'	000504'	10$:	MOV	#$NAME1,$NAMEP	; SET UP NAME BLOCK POINTER
    226	000034	005067 	000502'			CLR	$NAMEC		; INIT NAME COUNT
    227	000040	012767 	000001 	000500'		MOV	#1,$NAMEL	; INIT NAME LENGTH
    228	000046	012701 	000001 			MOV	#1,R1		; SET BLANK RECOGNITION
    229	000052	012702 	000000G			MOV	#.UFDKT,R2	; GET KEYWORD TABLE
    230	000056	013703 	000000G			MOV	@#$DSW,R3	; GET COMMAND LINE LENGTH
    231	000062	012704 	000002'			MOV	#GCML+2,R4	; GET COMMAND LINE ADDR
    232	000066	012705 	000000G			MOV	#.PSTRT,R5	; GET START STATE FOR PARSER
    233	000072	004767 	000000G			CALL	.TPARS		; AND PARSE THE	COMMAND	LINE
    234	000076	103002 				BCC	20$
    235	000100	000167 	000624 			JMP	SYNERR		; SYNTAX ERROR
    236					;
    237					; ASSIGN THE DEVICE AND	CHECK THE CHARACTERISTICS
    238					;
    239	000104				20$:	FINIT$			; INIT FCS
    240	000110	012700 	000210'			MOV	#$FDB,R0
    241	000114	012701 	000312'			MOV	#$FDB+F.FNB,R1
    242	000120	012702 	000464'			MOV	#$UDEV,R2
    243	000124	005003 				CLR	R3
    244	000126	004767 	000000G			CALL	.PRSDV		; PARSE	DEVICE NAME
    245	000132	103414 				BCS	30$
    246	000134					DIR$	#GLUN		; GET LUN INFO
    247
    248	000142	016701 	000616'			MOV	LUNBUF+U.C1,R1	;ERS CHECK FOR VALID SWITCHES
    249	000146	042701 	037700 			BIC	#^C<FD.MNT!FD.F11!77>,R1
    250	000152	022701 	000000C			CMP	#FD.MNT!FD.F11!FD.DIR,R1
    251
    252	000156	001404 				BEQ	40$
UFD - CREATE DIRECTORY FILE	MACRO M1110  22-AUG-78 00:39  PAGE 6-1
MAIN PROGRAM

    253	000160	000167 	000534 			JMP	NDDEV		; ANYTHING ELSE	- OUT
    254	000164	000167 	000534 		30$:	JMP	BADDEV		; DEVICE DOES NOT EXIST
    255					;
    256					; INIT THE FILE	NAME IN	THE FDB	TO ".DIR;1" AND	START WITH THE MFD.
    257					;
    258	000170	012760 	015172 	000116 	40$:	MOV	#^RDIR,F.FTYP(R0)
    259	000176	012760 	000001 	000120 		MOV	#1,F.FVER(R0)
    260	000204	012760 	000004 	000126 		MOV	#4,F.FNB+N.DID(R0)
    261	000212	012760 	000004 	000130 		MOV	#4,F.FNB+N.DID+2(R0)
    262	000220	005060 	000132 			CLR	F.FNB+N.DID+4(R0)
    263
    264	000224	012705 	000506'			MOV	#$NAME1,R5	; POINT	TO FIRST NAME
    265					;
    266					; NOW LOOP, SEARCHING FOR THE NEXT FILE	NAME
    267					;
    268	000230	012701 	000320'		50$:	MOV	#$FDB+F.FNAM,R1
    269	000234	012521 				MOV	(R5)+,(R1)+
    270	000236	012521 				MOV	(R5)+,(R1)+
    271	000240	012521 				MOV	(R5)+,(R1)+
    272	000242	012701 	000312'			MOV	#$FDB+F.FNB,R1
    273	000246	005011 				CLR	(R1)		; INDICATE NO FILE
    274	000250	004767 	000000G			CALL	.FIND
    275	000254	103423 				BCS	80$		; BRANCH IF NOT	FOUND
    276
    277									; RE-ENTER HERE	FOR NEWLY CREATED DIRECTORY
    278	000256	016060 	000102 	000126 	60$:	MOV	F.FNB(R0),F.FNB+N.DID(R0) ; COPY FILE ID TO DIRECTORY ID
    279	000264	016060 	000104 	000130 		MOV	F.FNB+2(R0),F.FNB+N.DID+2(R0)
    280	000272	016060 	000106 	000132 		MOV	F.FNB+4(R0),F.FNB+N.DID+4(R0)
    281	000300	005367 	000502'			DEC	$NAMEC		; COUNT	NAMES GIVEN
    282	000304	003351 				BGT	50$
    283					;
    284					;WE GET	HERE WHEN ALL DIRECTORIES HAVE BEEN FOUND OR CREATED
    285					;
    286	000306	005767 	000604'			TST	CRFLG		; SEE IF WE CREATED ANYTHING
    287	000312	001002 				BNE	70$		; BRANCH IF YES
    288	000314	000167 	000374 			JMP	DUPLIC		; ALL THERE - DUPLICATE	DIRECTORY
    289	000320	000167 	000506 		70$:	JMP	EXIT		; SUCCESS
    290					;
    291					; WE GET HERE WHEN A LOOKUP FAILS. EITHER (HOPEFULLY) THE DIRECTORY DOESN'T
    292					; EXIST, OR THERE WAS AN ERROR.
    293					;
    294	000324	122760 	000000G	000052 	80$:	CMPB	#IE.NSF,F.ERR(R0) ; CHECK ERROR	STATUS
    295	000332	001414 				BEQ	110$		; BRANCH IF NOT	FOUND
    296	000334	126027 	000052 	000000G	90$:	CMPB	F.ERR(R0),#IE.PRI ; CHECK FOR PRIVILEGE	VIOLATION
    297	000342	001006 				BNE	100$		; BRANCH IF NOT
    298	000344	026027 	000126 	000004 		CMP	F.FNB+N.DID(R0),#4 ; CHECK FOR MFD
    299	000352	001002 				BNE	100$		; BRANCH IF NOT
    300	000354	000167 	000324 			JMP	VNMO		; PRIVILEGE VIOLATION ON MFD MEANS VOL NOT MOUNTED
    301	000360	000167 	000310 		100$:	JMP	ACCFAI		; OTHER	ERROR
    302
    303	000364				110$:	QIO	RATT		; READ ATTRIBUTES OF PRECEDING DIRECTORY
    304	000372	103760 				BCS	90$		; BRANCH IF ERROR
    305					;
    306					; INITIALIZE THE ATTRIBUTES OF THE NEW DIRECTORY AND COPY THE RECORD
    307					; ATTRIBUTES INTO THE FDB. NOTE	THAT WE	DISTINGUISH LEVEL 1 FROM LEVEL 2
    308					; DIRECTORIES BY THE RECORD TYPE (FIXED	VERSUS VARIABLE).
    309					;
UFD - CREATE DIRECTORY FILE	MACRO M1110  22-AUG-78 00:39  PAGE 6-2
MAIN PROGRAM

    310	000374	052767 	000200 	000574'		BIS	#UC.CON,$FCHAR	; FORCE	CONTIGUOUS
    311	000402	016701 	000454'			MOV	$UUIC,R1	; CHECK	UIC FROM PARSER
    312	000406	056701 	000456'			BIS	$UUIC+2,R1
    313	000412	001406 				BEQ	120$		; BRANCH IF DEFAULT
    314	000414	016767 	000454'	000566'		MOV	$UUIC,$FOWN
    315	000422	016767 	000456'	000570'		MOV	$UUIC+2,$FOWN+2
    316
    317	000430	052767 	104210 	000572'	120$:	BIS	#104210,$FPRO	; DEFAULT PROTECTION HAS NO DELETE PERMIT
    318	000436	016701 	000460'			MOV	$UPRO,R1	; CHECK	PROTECTION FROM	PARSER
    319	000442	001402 				BEQ	130$		; BRANCH IF DEFAULT
    320	000444	010167 	000572'			MOV	R1,$FPRO
    321
    322	000450	010001 			130$:	MOV	R0,R1
    323	000452	012702 	000414'			MOV	#RECATTR,R2	; POINT	TO ATTRIBUTES
    324	000456	012703 	000007 			MOV	#7,R3		; WORD COUNT
    325	000462	012221 			140$:	MOV	(R2)+,(R1)+	; COPY ATTRIBUTES INTO FDB
    326	000464					SOB	R3,140$
    327
    328	000470	016701 	000462'			MOV	$UALL,R1	; GET DESIRED NUMBER OF	ENTRIES
    329	000474	006201 				ASR	R1		; COMPUTE # OF BLOCKS
    330	000476	006201 				ASR	R1		; /16 FOR LEVEL	2
    331	000500	006201 				ASR	R1		; /32 FOR LEVEL	1
    332	000502	006201 				ASR	R1
    333	000504	126027 	000000 	000000G		CMPB	F.RTYPE(R0),#R.FIX
    334	000512	001001 				BNE	150$		; BRANCH IF LEVEL 2
    335	000514	006201 				ASR	R1
    336	000516	005201 			150$:	INC	R1		; ROUND	UP TO AT LEAST 1 BLOCK
    337	000520	010160 	000034 			MOV	R1,F.CNTG(R0)	; AND SET IN FDB
    338					;
    339					; NOW CREATE THE DIRECTORY FILE	AND WRITE THE ATTRIBUTES. IF IT	IS A
    340					; LEVEL	2 DIRECTORY, WRITE THE INITIAL EMPTY FIRST BLOCK.
    341					;
    342	000524					OFNB$W	R0
    343	000536	103464 				BCS	NCREAT		; BRANCH ON CREATE FAILURE
    344	000540					QIO	WATT		; WRITE	ATTRIBUTES
    345	000546	103435 				BCS	180$		; BRANCH ON FAILURE
    346
    347	000550	126027 	000000 	000000G		CMPB	F.RTYPE(R0),#R.FIX
    348	000556	001417 				BEQ	170$		; BRANCH IF LEVEL 1
    349	000560	012701 	000612'			MOV	#DATBUF,R1	; POINT	TO BUFFER
    350	000564	012702 	000377 			MOV	#255.,R2	; WORD COUNT
    351	000570	012721 	177777 			MOV	#-1,(R1)+	; END OF DATA MARKER
    352	000574	005021 			160$:	CLR	(R1)+		; THE REST IS ZERO
    353	000576					SOB	R2,160$
    354	000602					WRITE$	R0		; WRITE	INITIAL	BLOCK
    355	000606	103415 				BCS	180$
    356	000610					WAIT$	R0
    357	000614	103412 				BCS	180$
    358
    359	000616	016046 	000102 		170$:	MOV	F.FNB(R0),-(SP)	; SAVE THE FILE	ID ACROSS THE CLOSE
    360	000622					CLOSE$	R0		; CLOSE	THE FILE
    361	000626	012660 	000102 			MOV	(SP)+,F.FNB(R0)
    362	000632	103416 				BCS	CLOSEF
    363	000634	005267 	000604'			INC	CRFLG		; SET THE CREATED FLAG
    364	000640	000606 				BR	60$		; BRANCH BACK FOR NEXT LEVEL
    365					;
    366					; WE GET HERE IF EITHER	THE WRITE ATTRIBUTES OR	THE DATA WRITE FAILS
UFD - CREATE DIRECTORY FILE	MACRO M1110  22-AUG-78 00:39  PAGE 6-3
MAIN PROGRAM

    367					; DELETE THE DIRECTORY AND QUIT.
    368					;
    369	000642	016046 	000052 		180$:	MOV	F.ERR(R0),-(SP)	; SAVE ERROR STATUS FOR	MESSAGE
    370	000646					DELET$	R0
    371	000652	012660 	000052 			MOV	(SP)+,F.ERR(R0)
    372	000656	000402 				BR	INIFAI
UFD - CREATE DIRECTORY FILE	MACRO M1110  22-AUG-78 00:39  PAGE 7
ERROR EXITS

    374					.SBTTL	ERROR EXITS
    375					;
    376					; BRANCHES TO THE ERROR	EXITS BUMP UP AN ERROR INDEX WHICH IS
    377					; USED TO LOCATE THE APPROPRIATE ERROR MESSAGE.	THE MESSAGE IS
    378					; OUTPUT TO "CO".
    379					;
    380
    381	000660	005267 	000602'		NAMLEN::INC	ERRNUM		; NAME TOO LONG
    382	000664	005267 	000602'		INIFAI:	INC	ERRNUM		; INITIALIZATION FAILURE
    383	000670	005267 	000602'		CLOSEF:	INC	ERRNUM		; CLOSE	FAILURE
    384	000674	005267 	000602'		ACCFAI:	INC	ERRNUM		; ACCESS FAILURE ON DIRECTORY
    385	000700	005267 	000602'		NAMLEV::INC	ERRNUM		; TOO MANY LEVELS
    386	000704	005267 	000602'		VNMO:	INC	ERRNUM		; VOLUME NOT MOUNTED
    387	000710	005267 	000602'		NCREAT:	INC	ERRNUM		; FAILED TO CREATE
    388	000714	005267 	000602'		DUPLIC:	INC	ERRNUM		; DUPLICATE DIRECTORY
    389	000720	005267 	000602'		NDDEV:	INC	ERRNUM		; NOT A	DIRECTORY DEVICE
    390	000724	005267 	000602'		BADDEV:	INC	ERRNUM		; BAD DEVICE NAME
    391	000730	005267 	000602'		SYNERR::INC	ERRNUM		; SYNTAX ERROR
    392	000734				CMLERR:				; COMMAND LINE I/O ERROR
    393	000734	016700 	000602'			MOV	ERRNUM,R0	; GET ERROR INDEX
    394	000740	006300 				ASL	R0
    395	000742	016000 	000000'			MOV	ERRMSG(R0),R0	; GET ERROR MESSAGE ADDR
    396	000746	004767 	000072 			CALL	PRTMSG		; AND PRINT IT
    397
    398	000752	116701 	000262'			MOVB	$FDB+F.ERR,R1	; GET ERROR STATUS FROM	FDB
    399	000756	002023 				BGE	20$		; BRANCH IF NO ERROR
    400	000760	105767 	000263'			TSTB	$FDB+F.ERR+1	; CHECK	FOR DIRECTIVE ERROR
    401	000764	002002 				BGE	10$
    402	000766	162701 	000200 			SUB	#128.,R1	; USE DIRECTIVE	ERROR MESSAGES
    403	000772	012700 	000612'		10$:	MOV	#DATBUF,R0	; BUILD	MESSAGE	STRING IN DATA BUFFER
    404	000776	010002 				MOV	R0,R2
    405	001000	012703 	000030'			MOV	#ERRM0,R3	; GET MESSAGE HEADER
    406	001004	012320 				MOV	(R3)+,(R0)+
    407	001006	012320 				MOV	(R3)+,(R0)+
    408	001010	012320 				MOV	(R3)+,(R0)+
    409	001012	012320 				MOV	(R3)+,(R0)+
    410	001014	004767 	000000G			CALL	.FCSER		; GET I/O ERROR	MESSAGE	STRING
    411	001020	010200 				MOV	R2,R0		; GET BACK START OF BUFFER
    412	001022	004767 	000016 			CALL	PRTMSG		; ABD PRINT IT
    413
    414	001026	012700 	000003 		20$:	MOV	#EX$ERR,R0	; SET ERROR STATUS
    415	001032	004767 	000000 		EXIT:	CALL	$EXST		; EXIT WITH STATUS
    416
    417					;
    418					; EXIT WITH STATUS
    419					;
    420	001036				$EXST:	EXIT$S
UFD - CREATE DIRECTORY FILE	MACRO M1110  22-AUG-78 00:39  PAGE 8
ERROR MESSAGE PRINTER

    422					.SBTTL	ERROR MESSAGE PRINTER
    423
    424					;+
    425					;
    426					; CALL:	CALL	PRTMSG
    427					;
    428					;	R0 = ADDRESS OF	ASCIZ STRING
    429					;
    430					; PRINTS THE GIVEN MESSAGE TEXT	ON THE CONSOLE LUN
    431					;
    432					;-
    433
    434	001044	010001 			PRTMSG:	MOV	R0,R1
    435	001046	105721 			10$:	TSTB	(R1)+		; LOOK FOR THE TERMINATOR
    436	001050	001401 				BEQ	20$
    437	001052	000775 				BR	10$
    438	001054	160001 			20$:	SUB	R0,R1		; COMPUTE CHARACTER COUNT
    439
    440	001056					QIOW$S	#IO.WVB,#COLUN,#COEFN,,,,<R0,R1,<#' >>
    441	001124	000207 				RETURN
UFD - CREATE DIRECTORY FILE	MACRO M1110  22-AUG-78 00:39  PAGE 9
QIO CALL ROUTINE

    443					.SBTTL	QIO CALL ROUTINE
    444
    445					;+
    446					;
    447					; CALL:	JSR	R5,XQIO
    448					;	.WORD	DPB
    449					;	(RETURN)
    450					;
    451					;-
    452
    453
    454	001126				XQIO:	DIR$	(R5)+		; DO IT
    455	001132	103406 				BCS	10$		; CHECK	FOR DIRECTIVE ERROR
    456	001134	116767 	000606'	000262'		MOVB	IOSTAT,$FDB+F.ERR ; CHECK FOR I/O ERROR
    457	001142	003002 				BGT	10$
    458	001144	000261 				SEC			; SET CARRY ON ERROR
    459	001146	000205 				RTS	R5
    460
    461	001150	013767 	000000G	000262'	10$:	MOV	@#$DSW,$FDB+F.ERR
    462	001156	000205 				RTS	R5
    463
    464
    465
    466		000000'				.END	$UFD
UFD - CREATE DIRECTORY FILE	MACRO M1110  22-AUG-78 00:39  PAGE 9-1
SYMBOL TABLE

ACCFAI  000674R     004	F.BKDS= 000020   	F.STBK= 000036   	PRTMSG  001044R     004	$FPRO   000572RG
BADDEV  000724R     004	F.BKEF= 000050   	F.UNIT= 000136   	Q.IOAE= 000012   	$NAMEC  000502RG
CLOSEF  000670R     004	F.BKP1= 000051   	F.URBD= 000020   	Q.IOEF= 000006   	$NAMEL  000500RG
CMLERR  000734R     004	F.BKST= 000024   	F.VBN = 000064   	Q.IOFN= 000002   	$NAMEP  000504RG
COEFN = 000002   	F.BKVB= 000064   	F.VBSZ= 000060   	Q.IOLU= 000004   	$NAME1  000506RG
COLUN = 000002   	F.CHR = 000075   	GCML    000000R  	Q.IOPL= 000014   	$NAME2  000514RG
CRFLG   000604R  	F.CNTG= 000034   	GLUN    000122R  	Q.IOPR= 000007   	$NAME3  000522RG
DATBUF  000612R  	F.DFNB= 000046   	G.LUBA= 000004   	Q.IOSB= 000010   	$NAME4  000530RG
DUPLIC  000714R     004	F.DSPT= 000044   	G.LUBL= 000006   	RATBLK  000350R  	$NAME5  000536RG
ERRMSG  000000R     003	F.DVNM= 000134   	G.LUCW= 000004   	RATT    000130R  	$NAME6  000544RG
ERRM0   000030R     003	F.EFBK= 000010   	G.LUFB= 000003   	RECATT  000414R  	$NAME7  000552RG
ERRM1   000076R     003	F.EFN = 000050   	G.LULU= 000002   	R.FIX = ****** GX	$NAME8  000560RG
ERRM10  000545R     003	F.EOBB= 000032   	G.LUNA= 000000   	STRING  000612RG 	$UALL   000462RG
ERRM11  000614R     003	F.ERR = 000052   	G.LUNU= 000002   	SYNERR  000730RG    004	$UDEV   000464RG
ERRM2   000123R     003	F.FACC= 000043   	G.MCRB= 000002   	S.BFHD= 000020   	$UFD    000000RG    004
ERRM3   000160R     003	F.FFBY= 000014   	IE.NSF= ****** GX	S.FATT= 000016   	$UPRO   000460RG
ERRM4   000214R     003	F.FNAM= 000110   	IE.PRI= ****** GX	S.FDB = 000140   	$UUIC   000454RG
ERRM5   000255R     003	F.FNB = 000102   	INIFAI  000664R     004	S.FNAM= 000006   	$$$ARG= 000002
ERRM6   000320R     003	F.FTYP= 000116   	IOSTAT  000606R  	S.FNB = 000036   	$$$OST= 000014
ERRM7   000353R     003	F.FVER= 000120   	IO.RAT= ****** GX	S.FNBW= 000017   	.CLOSE= ****** G
ERRM8   000420R     003	F.HIBK= 000004   	IO.WAT= ****** GX	S.FNTY= 000004   	.DELET= ****** G
ERRM9   000475R     003	F.LUN = 000042   	IO.WVB= ****** GX	S.FTYP= 000002   	.EXSTS  000600RG
ERRNUM  000602R  	F.MBCT= 000054   	LUNBUF  000612R  	S.NFEN= 000020   	.FCSER= ****** GX
EXIT    001032R     004	F.MBC1= 000055   	NAMLEN  000660RG    004	UC.CON= 000200   	.FIND = ****** GX
EX$ERR= 000003   	F.MBFG= 000056   	NAMLEV  000700RG    004	UFDEFN= 000001   	.FINIT= ****** G
EX$SUC= 000001   	F.NRBD= 000024   	NCREAT  000710R     004	UFDLUN= 000001   	.FSRCB= ****** G
FD.DIR= ****** GX	F.NREC= 000030   	NDDEV   000720R     004	U.C1  = 000004   	.OPFNB= ****** G
FD.F11= 040000   	F.OVBS= 000030   	N.DID = 000024   	VNMO    000704R     004	.PRSDV= ****** GX
FD.MNT= 100000   	F.RACC= 000016   	N.DVNM= 000032   	WATBLK  000372R  	.PSTRT= ****** GX
FD.RWM= ****** GX	F.RATT= 000001   	N.FID = 000000   	WATT    000160R  	.TPARS= ****** GX
FO.WRT= ****** GX	F.RCNM= 000034   	N.FNAM= 000006   	XQIO    001126R     004	.UFDKT= ****** GX
F.ACTL= 000076   	F.RCTL= 000017   	N.FTYP= 000014   	$DSW  = ****** GX	.WAIT = ****** G
F.ALOC= 000040   	F.RSIZ= 000002   	N.FVER= 000016   	$EXST   001036R     004	.WRITE= ****** G
F.BBFS= 000062   	F.RTYP= 000000   	N.NEXT= 000022   	$FCHAR  000574RG 	...PC1= 000210R
F.BDB = 000070   	F.SEQN= 000100   	N.STAT= 000020   	$FDB    000210R  	...PC2= 000350R
F.BGBC= 000057   	F.SPDV= 000072   	N.UNIT= 000034   	$FOWN   000566RG 	...TPC= 000140
F.BKDN= 000026   	F.SPUN= 000074   	PAR$$$= 000000

. ABS.	000000	   000
      	001612	   001
$$FSR1	000000	   002
MSGSTR	000662	   003
CODE  	001160	   004
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  5022 WORDS  ( 20 PAGES)
DYNAMIC MEMORY:  5940 WORDS  ( 22 PAGES)
ELAPSED TIME:  00:00:37
OBJ$:UFD,LIS$:UFD/-SP=SRC$:UFD
