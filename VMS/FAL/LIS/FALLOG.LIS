FALLOG          - FAL LOGGING ROUTINES                           22-AUG-1978 01:13:09   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      39  DECLARATIONS
   (3)     149  FAL$STATISTICS - COMPUTE AND PRINT STATISTICS
   (4)     350  FAL$PRINT_FAO - PRINT OUTPUT FROM FAO
   (5)     396  FAL$DISPLAY_MSG - DISPLAY MESSAGE BUFFER
FALLOG          - FAL LOGGING ROUTINES                           22-AUG-1978 01:13:09   VAX-11 MACRO X0.3-11               Page   1
X0.1-14                                                                                                                          (1)

                                     0000     1 	.TITLE	FALLOG - FAL LOGGING ROUTINES
                                     0000     2 	.IDENT	/X0.1-14/
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ;			  COPYRIGHT (c) 1977, 1978 BY
                                     0000     6 ;	      DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
                                     0000     9 ; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
                                     0000    10 ; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
                                     0000    11 ; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
                                     0000    12 ; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
                                     0000    13 ; TRANSFERRED.
                                     0000    14 ;
                                     0000    15 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
                                     0000    16 ; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
                                     0000    17 ; CORPORATION.
                                     0000    18 ;
                                     0000    19 ; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
                                     0000    20 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
                                     0000    21 ;
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY: DECNET FILE ACCESS LISTENER (FAL)
                                     0000    25 ;
                                     0000    26 ; ABSTRACT: NONE
                                     0000    27 ;
                                     0000    28 ; ENVIRONMENT:
                                     0000    29 ;
                                     0000    30 ;	THE FAL IMAGE EXECUTES IN THE CONTEXT OF A PROCESS CREATED BY
                                     0000    31 ;	NETACP. IT RUNS IN USER MODE AND REQUIRES NETWORK PRIVILEGE.
                                     0000    32 ;
                                     0000    33 ; AUTHOR: JAMES A. KRYCKA,	CREATION DATE: 16-JUN-77
                                     0000    34 ;
                                     0000    35 ; MODIFICATIONS:
                                     0000    36 ;
                                     0000    37 ;--
FALLOG          - FAL LOGGING ROUTINES                           22-AUG-1978 01:13:09   VAX-11 MACRO X0.3-11               Page   2
X0.1-14         DECLARATIONS                                                                                                     (2)

                                     0000    39 	.SBTTL	DECLARATIONS
                                 00000000    40 	.PSECT	FAL$IMPURE_LOG	SHR,NOEXE,RD,WRT,LONG
                                     0000    41 
                                     0000    42 ;
                                     0000    43 ; INCLUDE FILES:
                                     0000    44 ;
                                     0000    45 	$FALSTBDEF			; DEFINE STATISTICS BLOCK SYMBOLS
                                     0000    46 	$FALWRKDEF			; DEFINE FAL WORK AREA SYMBOLS
                                     0000    47 	$RABDEF				; DEFINE RAB OFFSETS
                                     0000    48 	MISC_SYMBOLS			; DEFINE MISCELLANEOUS FAL SYMBOLS
                                     0000    49 ;	.LIST	MEB
                                     0000    50 ;
                                     0000    51 ; MACROS:
                                     0000    52 ;
                                     0000    53 ;	NONE
                                     0000    54 ;
                                     0000    55 ; EQUATED SYMBOLS:
                                     0000    56 ;
                                     0000    57 
                           00000100  0000    58 FAL$K_PRTBUF==256			; PRINT BUFFER LENGTH
                                     0000    59 
                                     0000    60 ;
                                     0000    61 ; OWN STORAGE:
                                     0000    62 ;
                                     0000    63 
                                     0000    64 ;
                                     0000    65 ; DATA STRUCTURES FOR THE PRINT FILE
                                     0000    66 ;
                                     0000    67 
                                     0000    68 	.ALIGN	LONG			; REQUIRED FOR FABS AND RABS
                                     0000    69 FAL$PRTFAB::				; FILE ACCESS BLOCK
                                     0000    70 	$FAB	FAC=PUT-		;
                                     0000    71 		FOP=SQO-		;
                                     0000    72 		RAT=CR-			;
                                     0000    73 		FNA=FAL$GT_PRTNAM-	;
                                     0000    74 		FNS=K_PRTNAM		;
                                     0050    75 FAL$PRTRAB::				; RECORD ACCESS BLOCK
                                     0050    76 	$RAB	FAB=FAL$PRTFAB-		;
                                     0050    77 		RBF=FAL$GB_PRTBUF-	;
                                     0050    78 		RSZ=0			; T.B.S. DYNAMICALLY
                                     0094    79 FAL$GT_PRTNAM::				; PRINT DEVICE NAME
      54 55 50 54 55 4F 24 53 59 53  0094    80 	.ASCII	\SYS$OUTPUT\		;
                           0000000A  009E    81 K_PRTNAM=.-FAL$GT_PRTNAM		; PRINT DEVICE NAME LENGTH
                                     009E    82 FAL$GQ_PRTBUF::				; OUTPUT STRING DESCRIPTOR FOR FAO
                                     009E    83 	QBLOCK	SPACE=FAL$K_PRTBUF-	; BUFFER LENGTH
                                     009E    84 		BUFADR=FAL$GB_PRTBUF	; BUFFER ADDRESS
                                     01A6    85 FAL$GW_PRTLEN::				; FORMATTED MESSAGE LENGTH FROM FAO
                           000001A8  01A6    86 	.BLKW	1			;
                                     01A8    87 
                                     01A8    88 
                                     01A8    89 ;
                                     01A8    90 ; TIME RELATED STORAGE
                                     01A8    91 ;
                                     01A8    92 
                                     01A8    93 FAL$GQ_TIME0::				; TIME OF LINK CONNECT
                           000001B0  01A8    94 	.BLKQ	1			;
                                     01B0    95 FAL$GQ_TIME1::				; TIME OF LINK DISCONNECT
FALLOG          - FAL LOGGING ROUTINES                           22-AUG-1978 01:13:09   VAX-11 MACRO X0.3-11               Page   3
X0.1-14         DECLARATIONS                                                                                                     (2)

                           000001B8  01B0    96 	.BLKQ	1			;
                                     01B8    97 
                                     01B8    98 ;
                                     01B8    99 ; FLAGS TO CONTROL LOGGING PRINTOUT
                                     01B8   100 ;
                                     01B8   101 
                                     01B8   102 FAL$GB_LOG::				; FAL LOG FLAGS
                           000001B9  01B8   103 	.BLKB	1			;
                                     01B9   104 
                                     01B9   105 ;
                                     01B9   106 ; FAO RELATED DESCRIPTOR BLOCKS WITH TEXT
                                     01B9   107 ;
                                     01B9   108 
                                     01B9   109 FAL$GQ_CALLER::				; REQUESTOR ID MESSAGE
                                     01B9   110 	QBLOCK	TEXT=<<FAL !AC was requested by !AS>>
                                     01DD   111 FAL$GQ_LINKUP::				; LINK ESTABLISHED MESSAGE
                                     01DD   112 	QBLOCK	TEXT=<<Logical link was established on !20%D>>
                                     020A   113 FAL$GQ_LINKDOWN::			; LINK TERMINATED MESSAGE
                                     020A   114 	QBLOCK	TEXT=<<Logical link was terminated  on !20%D>>
                                     0237   115 FAL$GQ_STAT1::				; STATISTICS MESSAGE PART 1
                                     0237   116 	QBLOCK	TEXT=<-
                                     0237   117 		<Link connect time for file activity was!%D!/!/>-
                                     0237   118 		<File Access Statisitcs:     Receive  Transmit Composite!/>-
                                     0237   119 		<!23*-     !7*-  !8*- !9*->-
                                     0237   120 	>
                                     02BF   121 FAL$GQ_STAT2::				; STATISTICS MESSAGE PART 2
                                     02BF   122 	QBLOCK	TEXT=<-
                                     02BF   123 		<Total DAP Messages       !3(10UL)!/>-
                                     02BF   124 		<Total DAP Bytes          !3(10UL)!/>-
                                     02BF   125 		<Total Data Records       !3(10UL)!/>-
                                     02BF   126 		<Total Data Bytes         !3(10UL)>-
                                     02BF   127 	>
                                     0351   128 FAL$GQ_STAT3::				; STATISTICS MESSAGE PART 3
                                     0351   129 	QBLOCK	TEXT=<-
                                     0351   130 		<Overhead from DAP        !7UB.!1UB%!7UB.!1UB%!7UB.!1UB%!/>-
                                     0351   131 		<Data Throughput (Baud)   !3(10UL)  !/>-
                                     0351   132 	>
                                     03B7   133 FAL$GQ_DISPLAY::			; PRINT MESSAGE
                                     03B7   134 	QBLOCK	TEXT=<<!AC !UW!_-!#(3XB)>>
                                     03D0   135 
                                     03D0   136 ;
                                     03D0   137 ; ADDITIONAL TEXT IN COUNTED ASCII STRING FORMAT
                                     03D0   138 ;
                                     03D0   139 
                                     03D0   140 FAL$GT_VERSION::			; FAL VERSION NUMBER
2E 31 56 20 6E 6F 69 73 72 65 56 00' 03D0   141 	.ASCIC	\Version V1.0\		;
                                 30  03DC       
                                 0C  03D0       
                                     03DD   142 FAL$GT_RCV::				; TEXT FOR DISPLAY
   3E 2D 2D 2D 2D 20 56 43 45 52 00' 03DD   143 	.ASCIC	\RECV ---->\		;
                                 0A  03DD       
                                     03E8   144 FAL$GT_XMT::				; TEXT FOR DISPLAY
   54 49 4D 58 20 2D 2D 2D 2D 3C 00' 03E8   145 	.ASCIC	\<---- XMIT\		;
                                 0A  03E8       
                                     03F3   146 FAL$GT_INT::				; TEXT FOR DISPLAY
   3E 2D 2D 2D 2D 20 45 54 4E 49 00' 03F3   147 	.ASCIC	\INTE ---->\		;
                                 0A  03F3       
FALLOG          - FAL LOGGING ROUTINES                           22-AUG-1978 01:13:09   VAX-11 MACRO X0.3-11               Page   4
X0.1-14         FAL$STATISTICS - COMPUTE AND PRINT STATISTICS                                                                    (3)

                                     03FE   149 	.SBTTL	FAL$STATISTICS - COMPUTE AND PRINT STATISTICS
                                 00000000   150 	.PSECT	FAL$CODE_LOG	NOSHR,EXE,RD,NOWRT,BYTE
                                     0000   151 
                                     0000   152 ;++
                                     0000   153 ; FUNCTIONAL DESCRIPTION:
                                     0000   154 ;
                                     0000   155 ;	FAL$STATISTICS COMPUTES AND PRINTS STATISTICS TO THE PRINT FILE.
                                     0000   156 ;
                                     0000   157 ; CALLING SEQUENCE:
                                     0000   158 ;
                                     0000   159 ;	BSB/JSB	FAL$STATISTICS
                                     0000   160 ;
                                     0000   161 ; INPUT PARAMETERS:
                                     0000   162 ;
                                     0000   163 ;	NONE
                                     0000   164 ;
                                     0000   165 ; OUTPUT PARAMETERS:
                                     0000   166 ;
                                     0000   167 ;	R0-R1	DESTROYED
                                     0000   168 ;
                                     0000   169 ; IMPLICIT OUTPUTS:
                                     0000   170 ;
                                     0000   171 ;	NONE
                                     0000   172 ;
                                     0000   173 ; COMPLETION CODES:
                                     0000   174 ;
                                     0000   175 ;	NONE
                                     0000   176 ;
                                     0000   177 ; SIDE EFFECTS:
                                     0000   178 ;
                                     0000   179 ;	NONE
                                     0000   180 ;
                                     0000   181 ;--
                                     0000   182 
                                     0000   183 FAL$STATISTICS::			; CONTROL POINT
                                     0000   184 	$GETTIM_S TIMADR=W^FAL$GQ_TIME1	; GET CURRENT DATE AND TIME
                                     000B   185 	CHECK_SS			; CHECK STATUS CODE
                                     000E   186 	$FAO_S	CTRSTR=W^FAL$GQ_LINKDOWN- ; FORMAT THE MESSAGE
                                     000E   187 		OUTLEN=W^FAL$GW_PRTLEN-	;
                                     000E   188 		OUTBUF=W^FAL$GQ_PRTBUF-	;
                                     000E   189 		P1=#FAL$GQ_TIME1	; ABSOLUTE DATE AND TIME ADDRESS
                                     0027   190 	CHECK_SS			; CHECK STATUS CODE
                          0176   30  002A   191 	BSBW	FAL$PRINT_FAO		; PRINT MESSAGE
                                     002D   192 	CHECK_SS			; CHECK STATUS CODE
                                     0030   193 
                                     0030   194 ;
                                     0030   195 ; COMPUTE TOTAL LINK CONNECT TIME AND STORE IN DELTA TIME FORMAT.
                                     0030   196 ; I.E., DELTA = -(END_TIME - START_TIME) = (START_TIME - END_TIME).
                                     0030   197 ;
                                     0030   198 
                                 C2  0030   199 	SUBL2	W^FAL$GQ_TIME1,-	; DOUBLE PRECISION SUBTRACTION OF
       01A8'CF       01B0'CF         0031   200 		W^FAL$GQ_TIME0		;  TIME0 - TIME1
                                 D9  0037   201 	SBWC	W^FAL$GQ_TIME1+4,-	;  "
       01AC'CF       01B4'CF         0038   202 		W^FAL$GQ_TIME0+4	;  "
                                     003E   203 
                                     003E   204 ;
                                     003E   205 ; OUTPUT TOTAL LINK CONNECT TIME AND STATISTICS MESSAGE HEADER.
FALLOG          - FAL LOGGING ROUTINES                           22-AUG-1978 01:13:09   VAX-11 MACRO X0.3-11               Page   5
X0.1-14         FAL$STATISTICS - COMPUTE AND PRINT STATISTICS                                                                    (3)

                                     003E   206 ;
                                     003E   207 
                                     003E   208 	$FAO_S	CTRSTR=W^FAL$GQ_STAT1-	; FORMAT THE MESSAGE
                                     003E   209 		OUTLEN=W^FAL$GW_PRTLEN-	;
                                     003E   210 		OUTBUF=W^FAL$GQ_PRTBUF-	;
                                     003E   211 		P1=#FAL$GQ_TIME0	; DELTA DAYS AND TIME ADDRESS
                                     0057   212 	CHECK_SS			; CHECK STATUS CODE
                          0146   30  005A   213 	BSBW	FAL$PRINT_FAO		; PRINT MESSAGE
                                     005D   214 
                                     005D   215 ;
                                     005D   216 ; COMPUTE AND PRINT STATISTICS.
                                     005D   217 ;
                                     005D   218 
            57       00C0 C8     DE  005D   219 	MOVAL	FAL$L_STB(R8),R7	; GET ADDRESS OF STATISTICS BLOCK
                                     0062   220 
                                     0062   221 ;
                                     0062   222 ; TOTAL THE COUNTERS.
                                     0062   223 ;
                                     0062   224 
                                 C1  0062   225 	ADDL3	FAL$L_RCV_MSG(R7),-	; TOTAL DAP MESSAGES
         04 A7            67         0063   226 		FAL$L_XMT_MSG(R7),R8	; "
                          58         0066       
                                 C1  0067   227 	ADDL3	FAL$L_RCV_BYTE(R7),-	; TOTAL DAP MESSAGE BYTES
         0C A7         08 A7         0068   228 		FAL$L_XMT_BYTE(R7),R9	; "
                          59         006C       
                                 C1  006D   229 	ADDL3	FAL$L_RCV_REC(R7),-	; TOTAL DATA RECORDS
         14 A7         10 A7         006E   230 		FAL$L_XMT_REC(R7),R10	; "
                          5A         0072       
                                     0073   231 
                                 C1  0073   232 	ADDL3	FAL$L_RCV_DATA(R7),-	; TOTAL DATA RECORD BYTES
         1C A7         18 A7         0074   233 		FAL$L_XMT_DATA(R7),R11	; "
                          5B         0078       
                                     0079   234 
                                     0079   235 ;
                                     0079   236 ; FORMAT AND PRINT THE COUNTERS.
                                     0079   237 ;
                                     0079   238 
                                     0079   239 	$FAO_S	CTRSTR=W^FAL$GQ_STAT2-	; FORMAT THE MESSAGE
                                     0079   240 		OUTLEN=W^FAL$GW_PRTLEN-	;
                                     0079   241 		OUTBUF=W^FAL$GQ_PRTBUF-	;
                                     0079   242 		P1=FAL$L_RCV_MSG(R7)-	; # OF DAP MESSAGES RECEIVED
                                     0079   243 		P2=FAL$L_XMT_MSG(R7)-	; # OF DAP MESSAGES TRANSMITTED
                                     0079   244 		P3=R8-			; # OF DAP MESSAGES EXCHANGED
                                     0079   245 		P4=FAL$L_RCV_BYTE(R7)-	; # OF DAP MESSAGE BYTES RECEIVED
                                     0079   246 		P5=FAL$L_XMT_BYTE(R7)-	; # OF DAP MESSAGE BYTES TRANSMITTED
                                     0079   247 		P6=R9-			; # OF DAP MESSAGE BYTES EXCHANGED
                                     0079   248 		P7=FAL$L_RCV_REC(R7)-	; # OF DATA RECORDS RECEIVED
                                     0079   249 		P8=FAL$L_XMT_REC(R7)-	; # OF DATA RECORDS TRANSMITTED
                                     0079   250 		P9=R10-			; # OF DATA RECORDS EXCHANGED
                                     0079   251 		P10=FAL$L_RCV_DATA(R7)-	; # OF DATA RECORD BYTES RECEIVED
                                     0079   252 		P11=FAL$L_XMT_DATA(R7)-	; # OF DATA RECORD BYTES TRANSMITTED
                                     0079   253 		P12=R11			; # OF DATA RECORD BYTES EXCHANGED
                                     00AB   254 	CHECK_SS			; CHECK STATUS CODE
                          00F2   30  00AE   255 	BSBW	FAL$PRINT_FAO		; PRINT MESSAGE
                                     00B1   256 
                                     00B1   257 ;
                                     00B1   258 ; COMPUTE PROTOCOL OVERHEAD AS <TOTAL_BYTES - DATA_BYTES> / <TOTAL_BYTES>.
FALLOG          - FAL LOGGING ROUTINES                           22-AUG-1978 01:13:09   VAX-11 MACRO X0.3-11               Page   6
X0.1-14         FAL$STATISTICS - COMPUTE AND PRINT STATISTICS                                                                    (3)

                                     00B1   259 ;
                                     00B1   260 
            50         08 A7     D0  00B1   261 	MOVL	FAL$L_RCV_BYTE(R7),R0	; DETERMINE DAP OVERHEAD
            51         18 A7     D0  00B5   262 	MOVL	FAL$L_RCV_DATA(R7),R1	;  OF RECEIVED DAP MESSAGES
            50            51     C3  00B9   263 	SUBL3	R1,R0,R1		; DETERMINE OVERHEAD BYTES
                          51         00BC       
                          00C6   30  00BD   264 	BSBW	FAL$CVT_VAL2PCT		; COMPUTE PERCENTAGE
            52            50     7D  00C0   265 	MOVQ	R0,R2			; COPY RESULTS TO <R2,R3>
            50         0C A7     D0  00C3   266 	MOVL	FAL$L_XMT_BYTE(R7),R0	; DETERMINE DAP OVERHEAD
            51         1C A7     D0  00C7   267 	MOVL	FAL$L_XMT_DATA(R7),R1	;  OF TRANSMITTED DAP MESSAGES
            50            51     C3  00CB   268 	SUBL3	R1,R0,R1		; DETERMINE OVERHEAD BYTES
                          51         00CE       
                          00B4   30  00CF   269 	BSBW	FAL$CVT_VAL2PCT		; COMPUTE PERCENTAGE
            54            50     7D  00D2   270 	MOVQ	R0,R4			; COPY RESULTS TO <R4,R5>
            50            59     D0  00D5   271 	MOVL	R9,R0			; DETERMINE OVERALL DAP OVERHEAD
            50            5B     C3  00D8   272 	SUBL3	R11,R0,R1		; DETERMINE OVERHEAD BYTES
                          51         00DB       
                          00A7   30  00DC   273 	BSBW	FAL$CVT_VAL2PCT		; COMPUTE PERCENTAGE
                                     00DF   274 					;  RESULTS ARE IN <R0,R1>
                                     00DF   275 
                                     00DF   276 ;
                                     00DF   277 ; COMPUTE (USER DATA) LINE THROUGHPUT.
                                     00DF   278 ;
                                     00DF   279 
                          03     BB  00DF   280 	PUSHR	#^M<R0,R1>		; SAVE REGISTERS
            56       00A6'CF     9E  00E1   281 	MOVAB	W^FAL$GB_PRTBUF,R6	; GET 14 BYTE SCRATCH BUFFER ADDRESS
                                     00E6   282 	$NUMTIM_S TIMBUF=(R6)-		; CONVERT DELTA LINK CONNECT TIME
                                     00E6   283 		TIMADR=W^FAL$GQ_TIME0	;  TO NUMERIC VALUES
                                     00F3   284 	CHECK_SS			; CHECK STATUS CODE
                          03     BA  00F6   285 	POPR	#^M<R0,R1>		; RESTORE REGISTERS
                          86     D5  00F8   286 	TSTL	(R6)+			; SKIP TO DAY FIELD ADDRESS
            59            86     3C  00FA   287 	MOVZWL	(R6)+,R9		; GET DAY VALUE
            59            18     C4  00FD   288 	MULL2	#24,R9			; CONVERT TO HOURS
            58            86     3C  0100   289 	MOVZWL	(R6)+,R8		; GET HOUR VALUE
            59            58     C0  0103   290 	ADDL2	R8,R9			; OBTAIN TOTAL HOURS
            59            3C     C4  0106   291 	MULL2	#60,R9			; CONVERT TO MINUTES
            58            86     3C  0109   292 	MOVZWL	(R6)+,R8		; GET MINUTE VALUE
            59            58     C0  010C   293 	ADDL2	R8,R9			; OBTAIN TOTAL MINUTES
            59            3C     C4  010F   294 	MULL2	#60,R9			; CONVERT TO SECONDS
            58            86     3C  0112   295 	MOVZWL	(R6)+,R8		; GET SECONDS VALUE
            59            58     C0  0115   296 	ADDL2	R8,R9			; OBTAIN TOTAL SECONDS
            59   00000064 8F     C4  0118   297 	MULL2	#100,R9			; CONVERT TO TENTHS
            58            86     3C  011F   298 	MOVZWL	(R6)+,R8		; GET TENTHS VALUE
            59            58     C0  0122   299 	ADDL2	R8,R9			; OBTAIN TOTAL TENTHS
            56            59     4E  0125   300 	CVTLF	R9,R6			; PUT TENTHS IN FLOATING FORMAT
            58         18 A7     4E  0128   301 	CVTLF	FAL$L_RCV_DATA(R7),R8	; PUT #BYTES IN FLOATING FORMAT
            58   00004548 8F     44  012C   302 	MULF2	#800,R8			; CONVERT TO #BITS X 100
            58            56     46  0133   303 	DIVF2	R6,R8			; #BYTES / #SECONDS
            58            58     4B  0136   304 	CVTRFL	R8,R8			; ROUND RESULT AND STORE AS INTEGER
            59         1C A7     4E  0139   305 	CVTLF	FAL$L_XMT_DATA(R7),R9	; PUT #BYTES IN FLOATING FORMAT
            59   00004548 8F     44  013D   306 	MULF2	#800,R9			; CONVERT TO #BITS X 100
            59            56     46  0144   307 	DIVF2	R6,R9			; #BYTES / #SECONDS
            59            59     4B  0147   308 	CVTRFL	R9,R9			; ROUND RESULT AND STORE AS INTEGER
            5A            5B     4E  014A   309 	CVTLF	R11,R10			; PUT TOTAL #BYTES IN FLOATING FORMAT
            5A   00004548 8F     44  014D   310 	MULF2	#800,R10		; CONVERT TO #BITS X 100
            5A            56     46  0154   311 	DIVF2	R6,R10			; #BYTES / #SECONDS
            5A            5A     4B  0157   312 	CVTRFL	R10,R10			; ROUND RESULT AND STORE AS INTEGER
FALLOG          - FAL LOGGING ROUTINES                           22-AUG-1978 01:13:09   VAX-11 MACRO X0.3-11               Page   7
X0.1-14         FAL$STATISTICS - COMPUTE AND PRINT STATISTICS                                                                    (3)

                                     015A   313 
                                     015A   314 ;
                                     015A   315 ; FORMAT AND PRINT PROTOCOL OVERHEAD AND THROUGHPUT STATISTICS.
                                     015A   316 ;
                                     015A   317 
                                     015A   318 	$FAO_S	CTRSTR=W^FAL$GQ_STAT3-	; FORMAT THE MESSAGE
                                     015A   319 		OUTLEN=W^FAL$GW_PRTLEN-	;
                                     015A   320 		OUTBUF=W^FAL$GQ_PRTBUF-	;
                                     015A   321 		P1=R2-			; RECEIVE PROTOCOL EFFICIENCY
                                     015A   322 		P2=R3-			; "
                                     015A   323 		P3=R4-			; TRANSMIT PROTOCOL EFFICIENCY
                                     015A   324 		P4=R5-			; "
                                     015A   325 		P5=R0-			; OVERALL PROTOCOL EFFICIENCY
                                     015A   326 		P6=R1-			; "
                                     015A   327 		P7=R8-			; RECEIVE THROUGHPUT
                                     015A   328 		P8=R9-			; TRANSMIT THROUGHPUT
                                     015A   329 		P9=R10			; FULL-DUPLEX THROUGHPUT
                                     017F   330 	CHECK_SS			; CHECK STATUS CODE
                          001E   30  0182   331 	BSBW	FAL$PRINT_FAO		; PRINT MESSAGE
                                 05  0185   332 	RSB				; EXIT
                                     0186   333 
                                     0186   334 ;
                                     0186   335 ; ROUTINE TO COMPUTE A PERCENTAGE IN XX.Y FORMAT, GIVEN AN INTEGER DIVISOR
                                     0186   336 ; AND AN INTEGER DIVIDEND.
                                     0186   337 ;
                                     0186   338 
                                     0186   339 FAL$CVT_VAL2PCT:			; CONTROL POINT
            50            50     4E  0186   340 	CVTLF	R0,R0			; PUT DIVISOR IN FLOATING POINT FORMAT
                          10     13  0189   341 	BEQL	10$			; BRANCH IF DIVISION BY ZERO
            51            51     4E  018B   342 	CVTLF	R1,R1			; PUT DIVIDEND IN FLOATING POINT FORMAT
            51   0000457A 8F     44  018E   343 	MULF2	#1000,R1		; COMPUTE PERCENTAGE X 10
            51            50     46  0195   344 	DIVF2	R0,R1			; "
            50            51     4B  0198   345 	CVTRFL	R1,R0			; ROUND RESULT AND STORE AS INTEGER
                          51     D4  019B   346 10$:	CLRL	R1			; PREPARE FOR DOUBLE PRECISION DIVISION
            50            0A     7B  019D   347 	EDIV	#10,R0,R0,R1		; SPLIT RESULT INTO X.Y FORMAT
            51            50         01A0       
                                 05  01A2   348 	RSB				; EXIT
FALLOG          - FAL LOGGING ROUTINES                           22-AUG-1978 01:13:09   VAX-11 MACRO X0.3-11               Page   8
X0.1-14         FAL$PRINT_FAO - PRINT OUTPUT FROM FAO                                                                            (4)

                                     01A3   350 	.SBTTL	FAL$PRINT_FAO - PRINT OUTPUT FROM FAO
                                 000001A3   351 	.PSECT	FAL$CODE_LOG	NOSHR,EXE,RD,NOWRT,BYTE
                                     01A3   352 
                                     01A3   353 ;++
                                     01A3   354 ; FUNCTIONAL DESCRIPTION:
                                     01A3   355 ;
                                     01A3   356 ;	FAL$PRINT_FAO OUTPUTS THE BUFFER FORMATTED BY FAO TO THE PRINT FILE.
                                     01A3   357 ;
                                     01A3   358 ; CALLING SEQUENCE:
                                     01A3   359 ;
                                     01A3   360 ;	BSB/JSB	FAL$PRINT_FAO
                                     01A3   361 ;
                                     01A3   362 ; INPUT PARAMETERS:
                                     01A3   363 ;
                                     01A3   364 ;	NONE
                                     01A3   365 ;
                                     01A3   366 ; IMPLICIT INPUTS:
                                     01A3   367 ;
                                     01A3   368 ;	FAL$GB_PRTBUF
                                     01A3   369 ;	FAL$GW_PRTLEN
                                     01A3   370 ;
                                     01A3   371 ; OUTPUT PARAMETERS:
                                     01A3   372 ;
                                     01A3   373 ;	R0-R1	DESTROYED
                                     01A3   374 ;
                                     01A3   375 ; IMPLICIT OUTPUTS:
                                     01A3   376 ;
                                     01A3   377 ;	PRTRAB IS UPDATED
                                     01A3   378 ;
                                     01A3   379 ; COMPLETION CODES:
                                     01A3   380 ;
                                     01A3   381 ;	NONE
                                     01A3   382 ;
                                     01A3   383 ; SIDE EFFECTS:
                                     01A3   384 ;
                                     01A3   385 ;	NONE
                                     01A3   386 ;
                                     01A3   387 ;--
                                     01A3   388 
                                     01A3   389 FAL$PRINT_FAO::				; CONTROL POINT
                                 B0  01A3   390 	MOVW	W^FAL$GW_PRTLEN,-	; UPDATE BUFFER SIZE IN PRINT RAB
       0072'CF       01A6'CF         01A4   391 		W^FAL$PRTRAB+RAB$W_RSZ	;
                                     01AA   392 	$PUT	RAB=W^FAL$PRTRAB	; OUTPUT THE RECORD
                                     01B5   393 	CHECK_RMS			; CHECK COMPLETION CODE
                                 05  01B8   394 	RSB				; EXIT
FALLOG          - FAL LOGGING ROUTINES                           22-AUG-1978 01:13:09   VAX-11 MACRO X0.3-11               Page   9
X0.1-14         FAL$DISPLAY_MSG - DISPLAY MESSAGE BUFFER                                                                         (5)

                                     01B9   396 	.SBTTL	FAL$DISPLAY_MSG - DISPLAY MESSAGE BUFFER
                                 000001B9   397 	.PSECT	FAL$CODE_LOG	NOSHR,EXE,RD,NOWRT,BYTE
                                     01B9   398 
                                     01B9   399 ;++
                                     01B9   400 ; FUNCTIONAL DESCRIPTION:
                                     01B9   401 ;
                                     01B9   402 ;	FAL$DISPLAY_MSG DISPLAYS THE MESSAGE LENGTH (IN BYTES) AND UP TO
                                     01B9   403 ;	THE SPECIFIED NUMBER OF BYTES OF THE MESSAGE BUFFER IN HEXADECIMAL.
                                     01B9   404 ;
                                     01B9   405 ; CALLING SEQUENCE:
                                     01B9   406 ;
                                     01B9   407 ;	CALL	#4,FAL$DISPLAY_MSG
                                     01B9   408 ;
                                     01B9   409 ; INPUT PARAMETERS:
                                     01B9   410 ;
                                     01B9   411 ;	4(AP)	MAXIMUM NUMBER OF BYTES TO DISPLAY
                                     01B9   412 ;	8(AP)	MESSAGE HEADING INDICATOR
                                     01B9   413 ;	12(AP)	ADDRESS OF THE MESSAGE
                                     01B9   414 ;	16(AP)	SIZE OF THE MESSAGE IN BYTES
                                     01B9   415 ;
                                     01B9   416 ; IMPLICIT INPUTS:
                                     01B9   417 ;
                                     01B9   418 ;	NONE
                                     01B9   419 ;
                                     01B9   420 ; OUTPUT PARAMETERS:
                                     01B9   421 ;
                                     01B9   422 ;	R0-R1	DESTROYED
                                     01B9   423 ;
                                     01B9   424 ; IMPLICIT OUTPUTS:
                                     01B9   425 ;
                                     01B9   426 ;	NONE
                                     01B9   427 ;
                                     01B9   428 ; COMPLETION CODES:
                                     01B9   429 ;
                                     01B9   430 ;	NONE
                                     01B9   431 ;
                                     01B9   432 ; SIDE EFFECTS:
                                     01B9   433 ;
                                     01B9   434 ;	NONE
                                     01B9   435 ;
                                     01B9   436 ;--
                                     01B9   437 
                               0004' 01B9   438 	.ENTRY	FAL$DISPLAY_MSG,^M<R2>	; ENTRY POINT
                                     01BB   439 
                                 E1  01BB   440 	BBC	#FAL$V_LOG_MSG,-	; LOG EACH MESSAGE?
       01B8'CF            01         01BC   441 		W^FAL$GB_LOG,50$	;  BRANCH IF NO
                          58         01C0       
                                     01C1   442 
                                     01C1   443 ;
                                     01C1   444 ; DETERMINE NUMBER OF BYTES TO DISPLAY
                                     01C1   445 ;
                                     01C1   446 
            50         04 AC     D0  01C1   447 	MOVL	4(AP),R0		; GET MAX #BYTES TO DISPLAY
                          52     13  01C5   448 	BEQL	50$			; IF NONE, WE'RE FINISHED
            50         10 AC     D1  01C7   449 	CMPL	16(AP),R0		; IS MESSAGE SIZE GEQ MAX COUNT?
                          04     18  01CB   450 	BGEQ	10$			; YES
            50         10 AC     D0  01CD   451 	MOVL	16(AP),R0		; NO, USE ACTUAL MESSAGE SIZE
FALLOG          - FAL LOGGING ROUTINES                           22-AUG-1978 01:13:09   VAX-11 MACRO X0.3-11               Page  10
X0.1-14         FAL$DISPLAY_MSG - DISPLAY MESSAGE BUFFER                                                                         (5)

            51            50     D0  01D1   452 10$:	MOVL	R0,R1			; SAVE COUNT
                                     01D4   453 
                                     01D4   454 ;
                                     01D4   455 ; CONSTRUCT PARAMETER LIST FOR FAO ON THE STACK
                                     01D4   456 ;
                                     01D4   457 
            52         0C AC     D0  01D4   458 	MOVL	12(AP),R2		; GET MESSAGE ADDRESS
            7E            82     9A  01D8   459 20$:	MOVZBL	(R2)+,-(SP)		; PUT EACH CHARACTER IN LIST
            FA            50     F5  01DB   460 	SOBGTR	R0,20$			; CONTINUE UNTIL DONE
                          51     DD  01DE   461 	PUSHL	R1			; PUT #BYTES TO CONVERT IN LIST
                       10 AC     DD  01E0   462 	PUSHL	16(AP)			; PUT MESSAGE SIZE IN LIST
                                     01E3   463 	$CASEB	SELECTOR=8(AP),DISPL=<-	; DETERMINE MESSAGE HEADING
                                     01E3   464 		30$-			;  TRANSMITTED MESSAGE
                                     01E3   465 		35$-			;  RECEIVED MESSAGE
                                     01E3   466 	>				;  RECEVIED INTERRUPT MESSAGE
                     03F3'CF     9F  01EC   467 	PUSHAB	W^FAL$GT_INT		; PUT ADDRESS OF TEXT IN LIST
                          0A     11  01F0   468 	BRB	40$			;
                     03E8'CF     9F  01F2   469 30$:	PUSHAB	W^FAL$GT_XMT		; YES, PUT ADDRESS OF TEXT IN LIST
                          04     11  01F6   470 	BRB	40$			;
                     03DD'CF     9F  01F8   471 35$:	PUSHAB	W^FAL$GT_RCV		; YES, PUT ADDRESS OF TEXT IN LIST
            51            5E     D0  01FC   472 40$:	MOVL	SP,R1			; GET ADDRESS OF FAO PARAMETER LIST
                                     01FF   473 
                                     01FF   474 ;
                                     01FF   475 ; FORMAT AND PRINT THE MESSAGE
                                     01FF   476 ;
                                     01FF   477 
                                     01FF   478 	$FAOL_S	CTRSTR=W^FAL$GQ_DISPLAY- ; FORMAT MESSAGE
                                     01FF   479 		OUTLEN=W^FAL$GW_PRTLEN-	;
                                     01FF   480 		OUTBUF=W^FAL$GQ_PRTBUF- ;
                                     01FF   481 		PRMLST=(R1)		;
                                     0214   482 	CHECK_SS			; CHECK STATUS CODE
                          8A     10  0217   483 	BSBB	FAL$PRINT_FAO		; PRINT MESSAGE
                                     0219   484 
                                     0219   485 ;
                                     0219   486 ; "RET" INSTRUCTION WILL ADJUST SP TO THAT FAO PARAMETER LIST
                                     0219   487 ; THAT WAS CONSTRUCTED ON THE STACK IS ELIMINATED.
                                     0219   488 ;
                                     0219   489 
                                 04  0219   490 50$:	RET				; EXIT
                                     021A   491 	.END
FALLOG          - FAL LOGGING ROUTINES                           22-AUG-1978 01:13:09   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (5)

$$.TAB         = 00000050 R     02   FAB$M_ESC      = 08000000            FAB$V_INP      = 00000013            
$$.TABEND      = 00000094 R     02   FAB$M_EXE      = 00000080            FAB$V_JNL      = 00000016            
$$.TMP         = 00000000            FAB$M_FTN      = 00000001            FAB$V_KFO      = 0000001E            
$$.TMP1        = 00000001            FAB$M_GET      = 00000002            FAB$V_MSE      = 00000004            
$$.TMP2        = 000000CF            FAB$M_INP      = 00080000            FAB$V_MXV      = 00000001            
$$COUNT        = 00000002            FAB$M_JNL      = 00400000            FAB$V_NAM      = 00000018            
$$T2           = 0000000C            FAB$M_KFO      = 40000000            FAB$V_NEF      = 0000000A            
BIT...         = 00000004            FAB$M_MSE      = 00000010            FAB$V_NFS      = 00000010            
FAB$B_BID        00000000            FAB$M_MXV      = 00000002            FAB$V_NIL      = 00000005            
FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            FAB$V_OFP      = 0000001D            
FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            FAB$V_ORG      = 00000004            
FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            FAB$V_POS      = 00000008            
FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            FAB$V_PPF      = 00000012            
FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            FAB$V_PPF_IND  = 0000000E            
FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            FAB$V_PPF_RAT  = 00000006            
FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            FAB$V_PRN      = 00000002            
FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            FAB$V_PUT      = 00000000            
FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            FAB$V_RCK      = 00000017            
FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            FAB$V_RWC      = 0000000B            
FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            FAB$V_RWO      = 00000007            
FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            FAB$V_SCF      = 0000000E            
FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            FAB$V_SHRDEL   = 00000002            
FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            FAB$V_SHRGET   = 00000001            
FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            FAB$V_SHRPUT   = 00000000            
FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            FAB$V_SHRUPD   = 00000003            
FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            FAB$V_SPL      = 0000000D            
FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            FAB$V_SQO      = 00000006            
FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            FAB$V_SUP      = 00000002            
FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            FAB$V_TEF      = 0000001C            
FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            FAB$V_TMD      = 00000004            
FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            FAB$V_TMP      = 00000003            
FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            FAB$V_TRN      = 00000004            
FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            FAB$V_UFM      = 0000001A            
FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            FAB$V_UFO      = 00000011            
FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            FAB$V_UPD      = 00000003            
FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            FAB$V_UPI      = 00000006            
FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            FAB$V_WCK      = 00000009            
FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            FAB$W_BLS        0000003C            
FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            FAB$W_DEQ        00000014            
FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            FAB$W_IFI        00000002            
FAB$L_MRN        00000038            FAB$S_ORG      = 00000004            FAB$W_MRS        00000036            
FAB$L_NAM        00000028            FAB$S_PPF_RAT  = 00000008            FAL$B_VALUE      00000010            
FAB$L_SDC        00000044            FAB$V_BIO      = 00000005            FAL$CHECK_RMS    ********   X   04   
FAB$L_STS        00000008            FAB$V_BLK      = 00000003            FAL$CHECK_SS     ********   X   04   
FAB$L_STV        0000000C            FAB$V_BRO      = 00000006            FAL$CVT_VAL2PCT  00000186 R     04   
FAB$L_XAB        00000024            FAB$V_CBT      = 00000015            FAL$C_STBBLN     00000020            
FAB$M_BIO      = 00000020            FAB$V_CIF      = 00000019            FAL$C_WRKBLN     00000400            
FAB$M_BLK      = 00000008            FAB$V_CR       = 00000001            FAL$DISPLAY_MSG  000001B9 RG    04   
FAB$M_BRO      = 00000040            FAB$V_CTG      = 00000014            FAL$GB_LOG       000001B8 RG    02   
FAB$M_CBT      = 00200000            FAB$V_DEL      = 00000002            FAL$GB_PRTBUF  = 000000A6 RG    02   
FAB$M_CIF      = 02000000            FAB$V_DFW      = 00000005            FAL$GQ_CALLER    000001B9 RG    02   
FAB$M_CR       = 00000002            FAB$V_DLT      = 0000000F            FAL$GQ_DISPLAY   000003B7 RG    02   
FAB$M_CTG      = 00100000            FAB$V_DMO      = 0000000C            FAL$GQ_LINKDOWN  0000020A RG    02   
FAB$M_DEL      = 00000004            FAB$V_ESC      = 0000001B            FAL$GQ_LINKUP    000001DD RG    02   
FAB$M_DFW      = 00000020            FAB$V_EXE      = 00000007            FAL$GQ_PRTBUF    0000009E RG    02   
FAB$M_DLT      = 00008000            FAB$V_FTN      = 00000000            FAL$GQ_STAT1     00000237 RG    02   
FAB$M_DMO      = 00001000            FAB$V_GET      = 00000001            FAL$GQ_STAT2     000002BF RG    02   
FALLOG          - FAL LOGGING ROUTINES                           22-AUG-1978 01:13:09   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (5)

FAL$GQ_STAT3     00000351 RG    02   FAL$V_CONNECT  = 00000002            RAB$M_LOC      = 00010000            
FAL$GQ_TIME0     000001A8 RG    02   FAL$V_EOF      = 0000000A            RAB$M_MAS      = 00000020            
FAL$GQ_TIME1     000001B0 RG    02   FAL$V_FILE_MODE= 00000008            RAB$M_NLK      = 00100000            
FAL$GT_INT       000003F3 RG    02   FAL$V_LOG_MSG  = 00000001            RAB$M_NXR      = 00800000            
FAL$GT_PRTNAM    00000094 RG    02   FAL$V_LOG_STAT = 00000000            RAB$M_PMT      = 40000000            
FAL$GT_RCV       000003DD RG    02   FAL$V_MBXAST   = 00000012            RAB$M_PPF_IND  = 00004000            
FAL$GT_VERSION   000003D0 RG    02   FAL$V_RCVAST   = 00000010            RAB$M_PPF_RAT  = 00003FC0            
FAL$GT_XMT       000003E8 RG    02   FAL$V_XMTAST   = 00000011            RAB$M_PTA      = 20000000            
FAL$GW_PRTLEN    000001A6 RG    02   FAL$W_ACTUALSIZ  00000016            RAB$M_RAH      = 00000200            
FAL$K_BUFFERSIZ= 00000080            FAL$W_LNKCHN     00000018            RAB$M_RLK      = 00080000            
FAL$K_DAP      = 000000C0            FAL$W_MAXDAPSIZ  00000014            RAB$M_RNE      = 01000000            
FAL$K_FAB      = 00000050            FAL$W_MBXCHN     0000001A            RAB$M_RNF      = 08000000            
FAL$K_MBXBUF   = 00000040            GBL...         = 00000000            RAB$M_TMO      = 02000000            
FAL$K_MBXPROT  = 00000000            K_PRTNAM       = 0000000A            RAB$M_TPT      = 00000002            
FAL$K_MBXQUOTA = 00000200            MBXEFN         = 00000003            RAB$M_UIF      = 00000010            
FAL$K_NAM      = 00000038            RAB$B_BID        00000000            RAB$M_ULK      = 00040000            
FAL$K_NCBBUF   = 00000040            RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            
FAL$K_PRTBUF   = 00000100  G         RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            
FAL$K_RAB      = 00000044            RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            
FAL$K_RESULTSIZ= 00000080            RAB$B_MBC        00000037            RAB$V_ASY      = 00000000            
FAL$K_STB      = 00000020            RAB$B_MBF        00000036            RAB$V_BIO      = 0000000B            
FAL$K_STBBLN     00000020            RAB$B_PSZ        00000034            RAB$V_CCO      = 0000001F            
FAL$K_WRKBLN     00000400            RAB$B_RAC        0000001E            RAB$V_CVT      = 0000001A            
FAL$L_FAB        00000200            RAB$B_ROP1       00000005            RAB$V_EOF      = 00000008            
FAL$L_NAM        00000294            RAB$B_ROP2       00000006            RAB$V_FDL      = 00000006            
FAL$L_RAB        00000250            RAB$B_ROP3       00000007            RAB$V_HSH      = 00000007            
FAL$L_RCV_BYTE   00000008            RAB$B_TMO        0000001F            RAB$V_KGE      = 00000015            
FAL$L_RCV_DATA   00000018            RAB$C_BID      = 00000001            RAB$V_KGT      = 00000016            
FAL$L_RCV_MSG    00000000            RAB$C_BLN        00000044            RAB$V_LIM      = 0000000E            
FAL$L_RCV_REC    00000010            RAB$C_KEY      = 00000001            RAB$V_LOA      = 0000000D            
FAL$L_SPARE      0000004C            RAB$C_RFA      = 00000002            RAB$V_LOC      = 00000010            
FAL$L_STB        000000C0            RAB$C_SEQ      = 00000000            RAB$V_MAS      = 00000005            
FAL$L_XMT_BYTE   0000000C            RAB$K_BLN        00000044            RAB$V_NLK      = 00000014            
FAL$L_XMT_DATA   0000001C            RAB$L_BKT        00000038            RAB$V_NXR      = 00000017            
FAL$L_XMT_MSG    00000004            RAB$L_CTX        00000018            RAB$V_PMT      = 0000001E            
FAL$L_XMT_REC    00000014            RAB$L_DCT        00000038            RAB$V_PPF_IND  = 0000000E            
FAL$PRINT_FAO    000001A3 RG    04   RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            
FAL$PRTFAB       00000000 RG    02   RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            
FAL$PRTRAB       00000050 RG    02   RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            
FAL$Q_BOUNDS     00000034            RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            
FAL$Q_FLG        00000000            RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            
FAL$Q_LNKIOSB    0000001C            RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            
FAL$Q_MBX        0000002C            RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            
FAL$Q_MBXIOSB    00000024            RAB$L_STS        00000008            RAB$V_TPT      = 00000001            
FAL$Q_NCB        0000002C            RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            
FAL$Q_RCV        0000003C            RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            
FAL$Q_STATE_CTX  00000008            RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            
FAL$Q_XMT        00000044            RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            
FAL$STATISTICS   00000000 RG    04   RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            
FAL$T_BUFFER     00000380            RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            
FAL$T_DAP        00000100            RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            
FAL$T_MBXBUF     00000080            RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            
FAL$T_NCBBUF     00000080            RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            
FAL$T_RESULTANT  00000300            RAB$M_KGE      = 00200000            RCVEFN         = 00000001            
FAL$V_ATT_MSG  = 00000001            RAB$M_KGT      = 00400000            SYS$FAO          ********   X   04   
FAL$V_BLOCK_IO = 00000009            RAB$M_LIM      = 00004000            SYS$FAOL         ********   X   04   
FAL$V_CNF_MSG  = 00000000            RAB$M_LOA      = 00002000            SYS$GETTIM       ********   X   04   
FALLOG          - FAL LOGGING ROUTINES                           22-AUG-1978 01:13:09   VAX-11 MACRO X0.3-11               Page  13
SYMBOL TABLE                                                                                                                     (5)

SYS$NUMTIM       ********   X   04   
SYS$PUT          ********  GX   04   
XMTEFN         = 00000002            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
FAL$IMPURE_LOG   000003FE      02     NOPIC   USR   CON   REL   LCL   SHR NOEXE   RD    WRT LONG  
$ABS$            00000400      03     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
FAL$CODE_LOG     0000021A      04     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
11982. BYTES LEFT IN FREE MEMORY POOL.
1064. BYTES OF RECLAIMED MEMORY.
OBJ$:FALLOG,LIS$:FALLOG/-SP=LIB$:FAL.MLB/ML,SRC$:FALLOG
58 MLB DIR RDS - 736 GETS TO DEFINE 36 MACROS. 52 INTER. FILE WRITES. 
