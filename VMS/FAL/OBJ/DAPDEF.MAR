;	.TITLE	$DAPDEF - DATA ACCESS PROTOCOL DEFINITIONS 
;	.IDENT	/X0.1-19/ 
 
; 
;			  COPYRIGHT (c) 1977, 1978 BY 
;	      DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS. 
; 
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED 
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE 
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER 
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY 
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY 
; TRANSFERRED. 
; 
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE 
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT 
; CORPORATION. 
; 
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS 
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL. 
; 
 
;++ 
; FACILITY: DATA ACCESS PROTOCOL (DAP)--A COMPONENT OF DECNET 
; 
; ABSTRACT: THIS MODULE DEFINES THE DAP INTERNAL CONTROL BLOCK. 
; 
; ENVIRONMENT: 
; 
;	THE MDL TRANSLATOR MUST BE USED TO CONVERT DAPDEF.MDL INTO 
;	DAPDEF.MAR (AND DAPDEF.B32). 
; 
; AUTHOR: JAMES A. KRYCKA,	CREATION DATE: 17-OCT-77 
; 
; MODIFICATIONS: 
; 
;-- 
 
;++ 
; NOTE:	COMMENT FIELDS THAT BEGIN WITH ';*' IN THE MDL DEFINITIONS BELOW, 
;	INDICATE THAT THE DAP FIELD OR BIT DEFINITION IS AN IMPLEMENTATION 
;	OF A 'RESERVED' ITEM IN THE DAP V4.1 SPECIFICATION OR THAT IT WAS 
;	DEFINED AFTER THE DAP V4.1 SPECIFICATION. 
; 
; NOTE:	COMMENT FIELDS THAT BEGIN WITH ';#' IN THE MDL DEFINITIONS BELOW 
;	INDICATE THAT THE DAP FIELD OR BIT DEFINITION WAS DEFINED IN THE 
;	DAP V4.1 SPECIFICATION BUT WAS SUBSEQUENTLY REMOVED (MADE RESERVED). 
; 
; NOTE:	TO KEEP THE TOTAL NUMBER OF DAP SYMBOLS TO A MINIMUM, SYMBLOS NOT 
;	REQUIRED FOR THIS IMPLEMENTATION ARE COMMENTED OUT. 
; 
; NOTE:	LONGWORD AND QUADWORD FIELDS ARE LONGWORD ALLIGNED WITHIN THE 
;	CONTROL BLOCK. 
;-- 
 
	.MACRO	$DAPDEF,$GBL

	$DEFINI	DAP,$GBL

 
;++ 
; DEFINE SYMBOLS IN THE PROLOGUE OF THE DAP CONTROL BLOCK 
;-- 
 
; *****	OFFSET = 00 ***** 
 
$DEF	DAP$Q_DCODE_FLG		 		; DECODE ROUTINE FLAGS 
				;  BITS 00-31 ARE DEFINED EXTERNAL TO DAP 
				;  BITS 32-63 ARE DEFINED BY DAP 
	$VIELD	DAP,0,<- 			; 
		<,32,>- 			;  SKIP OVER RESERVED BITS 
		<AFTER_V41,,>- 		;  PARTNER IMPLEMENTED TO DAP AFTER V4.1 
		<VAXVMS,,>- 		;  PARTNER IS VAX/VMS 
		>			; 
			.BLKQ	1 
$DEF	DAP$L_DCODE_STS		 		; STATUS CODE OF MESSAGE DECODE ATTEMPT 
			.BLKB	1 
$DEF	DAP$B_FIELD_ID		 	; ID OF FIELD IN ERROR; ELSE 0 
			.BLKB	1 
$DEF	DAP$B_MSG_TYPE		 	; MESSAGE TYPE (0 IF INVALID) 
			.BLKB	1 
$DEF	DAP$B_MAC_CODE		 	; DAP MACCODE ERROR VALUE; ELSE 0 
			.BLKB	1 
$DEF	DAP$L_MSG_MASK		 		; BIT MASK OF VALID MESSAGES TO RECEIVE 
				;  BIT OFFSETS AND BIT MASKS ARE: 
				;	DAP$K_CNF_MSG;	<1@DAP$K_CNF_MSG> 
				;  THRU	DAP$K_STS_MSG;	<1@DAP$K_STS_MSG> 
			.BLKL	1 
$DEF	DAP$Q_MSG_BUF1		 		; ON INPUT, DESCRIPTOR OF MESSAGE TO DECODE 
				; ON OUTPUT, DESCRIPTOR OF NEXT BLOCKED 
				;  MESSAGE IF COUNT NON-ZERO 
			.BLKQ	1 
$DEF	DAP$Q_MSG_BUF2		 		; ON OUTPUT, DESCRIPTOR OF MESSAGE JUST 
				;  DECODED; SAME AS MSG_BUF1 ON INPUT IF 
				;  NO BLOCKED MESSAGE FOLLOWS 
 
;++ 
; DEFINE SYMBOLS RELATED TO THE DAP MESSAGE HEADER. 
;-- 
 
; *****	OFFSET = 20 ***** 
 
			.BLKQ	1 
$DEF	DAP$L_OPERATOR		 		; OPERATOR FIELD SUBDIVIDED INTO: 
$DEF	DAP$B_TYPE		 		; DAP MESSAGE TYPE FIELD (1) : B 
$EQULST DAP$K_,$GBL,0,1,<- 			; DAP MESSAGE TYPE: 
		<CNF_MSG,1>- 		;  CONFIGURATION MESSAGE 
		<ATT_MSG,2>- 		;  ATTRIBUTES MESSAGE 
		<ACC_MSG,3>- 		;  ACCESS MESSAGE 
		<CTL_MSG,4>- 		;  CONTROL MESSAGE 
		<CON_MSG,5>- 		;  CONTINUE TRANSFER MESSAGE 
		<ACK_MSG,6>- 		;  ACKNOWLEDGE MESSAGE 
		<CMP_MSG,7>- 		;  ACCESS COMPLETE MESSAGE 
		<DAT_MSG,8>- 		;  DATA MESSAGE 
		<STS_MSG,9>- 		;  STATUS MESSAGE 
		>		; 
			.BLKB	1 
$DEF	DAP$B_FLAGS		 		; DAP MESSAGE FLAGS FIELD (EX-5) : BM 
	$VIELD	DAP,0,<- 			; MENU OF FIELDS TO FOLLOW: 
		<STREAMID,,>- 		;  STREAMID 
		<LENGTH,,>- 		;  LENGTH 
		<TMP1..,6,>- 		;  UNDEFINED 
-;	      LEN256		;* LEN256 
		>			; 
$EQU	DAP$K_FLAGS_I	<-		; DEFINE FLAGS OPTIONS THAT ARE INVALID: 
	      <1@DAP$V_TMP1..>!-;  RESERVED AND UNDEFINED BITS 
	      0>		; 
;	    K FLAGS_U,<-	; DEFINE FLAGS OPTIONS UNSUPPORTED BY VAX: 
;	      0>		; 
;	    K FLAGS_D,0		; DEFINE DEFAULT FLAGS VALUE 
			.BLKB	1 
$DEF	DAP$B_STREAMID		 	; DATA STREAM IDENTIFICATION FIELD (1) : B 
;	    K STREAM_D,0	; DEFINE DEFAULT STREAMID VALUE 
			.BLKB	1 
$DEF	DAP$B_LENGTH		 		; LENGTH (OF REST OF MESSAGE) FIELD (1) : B 
;	    K LENGTH_D,0	; DEFINE DEFAULT LENGTH VALUE 
 
;++ 
; DEFINE SYMBOLS RELATED TO THE CONFIGURATION MESSAGE (TYPE=1). 
;-- 
 
; *****	OFFSET = 24 ***** 
 
			.BLKB	1 
$DEF	DAP$W_BUFSIZ		 		; BUFFER SIZE FIELD (2) : B 
$EQU	DAP$K_BUFSIZ_V	<4096+256>		;  MAXIMUM VALUE FOR VAX 
			.BLKW	1 
$DEF	DAP$B_OSTYPE		 		; OPERATING SYSTEM TYPE FIELD (1) : B 
$EQULST DAP$K_,$GBL,0,1,<- 			; OPERATING SYSTEM TYPE: 
-;	    RT11,1		;  RT-11 
-;	    RSTS,2		;  RSTS/E 
-;	    RSX11S,3		;  RSX-11S 
-;	    RSX11M,4		;  RSX-11M 
-;	    RSX11D,5		;  RSX-11D 
-;	    IAS,6		;  IAS 
		<VAXVMS,7>- 		;  VAX/VMS 
-;	    TOPS20,8		;* TOPS-20 
-;	    TOPS10,9		;* TOPS-10 
-;	    RTS8,10		;* RTS-8 
-;	    OS8,11		;* OS-8 
		>		; 
			.BLKB	1 
$DEF	DAP$B_FILESYS		 		; FILE SYSTEM TYPE FIELD (1) : B 
$EQULST DAP$K_,$GBL,0,1,<- 			; FILE SYSTEM TYPE: 
-;	    RMS11,1		;  RMS-11 
-;	    RMS20,2		;  RMS-20 
		<RMS32,3>- 		;  RMS-32 
-;	    FCS11,4		;  FCS-11 
-;	    RT_FILSYS,5		;  RT-11 
-;	    NO_FILSYS,6		;  NO FILE SYSTEM PRESENT 
-;	    TOPS20F,7		;* TOPS-20 
-;	    TOPS10F,8		;* TOPS-10 
-;	    OS8F,9		;* OS-8 
		>		; 
			.BLKB	1 
$DEF	DAP$Q_VERSION		 		; DAP VERSION FIELD SUBDIVIDED INTO: 
$DEF	DAP$B_VERNUM		 		;  DAP VERSION NUMBER FIELD (1) : B 
$EQU	DAP$K_VERNUM_V	4		;  VALUE FOR VAX 
			.BLKB	1 
$DEF	DAP$B_ECONUM		 		;  ECO VERSION NUMBER FIELD (1) : B 
$EQU	DAP$K_ECONUM_V	2		;  VALUE FOR VAX 
			.BLKB	1 
$DEF	DAP$B_USRNUM		 		;  USER PROTOCOL VERSION NUMBER FIELD (1) : B 
$EQU	DAP$K_USRNUM_V	0		;  VALUE FOR VAX 
			.BLKB	1 
$DEF	DAP$B_SOFTVER		 		;  DEC SOFTWARE RELEASE NUMBER FIELD (1) : B 
$EQU	DAP$K_SOFTVER_V	1		;  VALUE FOR VAX 
			.BLKB	1 
$DEF	DAP$B_USRSOFT		 		;  USER SOFTWARE RELEASE NUMBER FIELD (1) : B 
$EQU	DAP$K_USRSOFT_V	0		;  VALUE FOR VAX 
			.BLKB	1 
			.BLKB	3 
$DEF	DAP$Q_SYSCAP		 		; SYSTEM CAPABILITIES FIELD (EX-12) : BM 
	$VIELD	DAP,0,<- 			; PARTNER NODE SUPPORTS: 
		<FILALL,,>- 		;  ALLOCATION OF SPACE AT FILE CREATION 
		<SEQORG,,>- 		;  SEQUENTIAL FILE ORGANIZATION 
		<RELORG,,>- 		;  RELATIVE FILE ORGANIZATION 
		<,2,>- 			;  RESERVED FOR: 
-;	    HSHORG		;  HASHED FILE ORGANIZATION 
-;	    IDXORG		;  SINGLE KEYED INDEXED FILE ORGAIZATION 
		<SEQREC,,>- 		;  SEQUENTIAL RECORD ACCESS 
		<RANREC,,>- 		;  RANDOM ACCESS BY RECORD # 
		<RANVBN,,>- 		;  RANDOM ACCESS BY VIRTUAL BLOCK # 
		<,5,>- 			;  RESERVED FOR: 
-;	    RANKEY		;  RANDOM ACCESS BY KEY 
-;	    RANHSH		;  RANDOM ACCESS BY USER GENERATED HASH CODE 
-;	    RANRFA		;  RANDOM ACCESS BY RECORD FILE ADDRESS 
-;	    MULKEY		;  MULTI-KEYED INDEXED FILE ORGANIZATION 
-;	    SWMODE		;  DYNAMIC SWITCHING OF ACCESS MODE 
		<APPEND,,>- 		;  APPEND RECORD ACCESS 
		<SUBMIT,,>- 		;  COMMAND FILE SUBMISSION/EXECUTION 
		<,2,>- 			;  RESERVED FOR: 
-;	    COMPRS		;  FILE COMPRESSION 
-;	    MDS			;  MULTIPLE DATA STREAMS PER FILE 
		<STSRTN,,>- 		;  RETURN OF STATUS MSG AFTER XFR 
		<MSGBLK,,>- 		;  BLOCKING OF DAP MESSAGES UP TO RESPONSE 
		<,10,>- 			;  RESERVED FOR: 
-;	    UNRBLK		;* UNRESTRICTED BLOCKING OF DAP MESSAGES 
-;	    BIGBLK		;* BLOCKING OF DAP MESSAGES OVER 256 BYTES 
-;	    CHKSUM		;* FILE CHECKSUM OPTION 
-;	    KEYXAB		;* KEY DEFINITION XAB MESSAGE 
-;	    ALLXAB		;* ALLOCATION XAB MESSAGE 
-;	    SUMXAB		;* SUMMARY XAB MESSAGE 
-;	    FHCXAB		;* FILE HEADER CHARACTERISTICS XAB MESSAGE 
-;	    DATXAB		;* DATE AND TIME XAB MESSAGE 
-;	    PROXAB		;* FILE PROTECTION XAB MESSSAGE 
-;	    ACLXAB		;* ACCESS CONTROL LIST XAB MESSAGE 
		<FOPSPL,,>- 		;* FILE SPOOLING ON CLOSE FOP OPTION 
		<FOPSCF,,>- 		;* COMMAND FILE EXECUTION ON CLOSE FOP OPTION 
		<FOPDLT,,>- 		;* FILE DELETION OF CLOSE FOP OPTION 
		<,2,>- 			;  RESERVED FOR: 
-;	    DFSPEC		;* DEFAULT FILE SPECIFICATION STRING 
-;	    RLSPEC		;* RELATED FILE SPECIFICATION STRING 
		<,30,>- 			;  UNDEFINED 
		>			; 
$EQU	DAP$K_SYSCAP_V	<-			; DEFINE SYSCAP OPTIONS SUPPORTED BY VAX 
	    <1@DAP$V_FILALL>!-	;  FILALL 
	    <1@DAP$V_SEQORG>!-	;  SEQORG 
	    <1@DAP$V_RELORG>!-	;  RELORG 
	    <1@DAP$V_SEQREC>!-	;  SEQREC 
	    <1@DAP$V_RANREC>!-	;  RANREC 
	    <1@DAP$V_RANVBN>!-	;  RANVBN 
	    <1@DAP$V_APPEND>!-	;  APPEND 
	    <1@DAP$V_SUBMIT>!-	;  SUBMIT 
	    <1@DAP$V_STSRTN>!-	;  STSRTN 
	    <1@DAP$V_MSGBLK>!-	;  MSGBLK 
	    <1@DAP$V_FOPSPL>!-	;  FOPSPL 
	    <1@DAP$V_FOPSCF>!-	;  FOPSCF 
	    <1@DAP$V_FOPDLT>!-	;  FOPDLT 
	    0>			; 
 
;++ 
; DEFINE SYMBOLS RELATED TO THE ATTRIBUTES MESSAGE (TYPE=2). 
;-- 
 
; *****	OFFSET = 38 ***** 
 
			.BLKQ	1 
$DEF	DAP$L_ATTMENU		 		; ATTRIBUTES MENU FIELD (EX-6) : BM 
	$VIELD	DAP,0,<- 			; MENU OF FIELDS TO FOLLOW: 
		<DATATYPE,,M>- 	;  DATA TYPE 
		<ORG,,M>- 		;  FILE ORGANIZATION 
		<RFM,,M>- 		;  RECORD FORMAT 
		<RAT,,M>- 		;  RECORD ATTRIBUTES 
		<BLS,,M>- 		;  BLOCK SIZE 
		<MRS,,M>- 		;  MAXIMUM RECORD SIZE 
		<ALQ,,M>- 		;  ALLOCATION QUANTITY 
		<BKS,,M>- 		;  BUCKET SIZE 
		<FSZ,,M>- 		;  FIXED CONTROL AREA SIZE 
		<MRN,,M>- 		;  MAXIMUM RECORD NUMBER 
		<RUNSYS,,M>- 		;  RUN-TIME SYSTEM IDENTIFICATION 
		<DEQ,,M>- 		;  DEFAULT EXTENSION QUANTITY 
		<FOP,,M>- 		;  FILE OPTIONS 
		<TMP1..,1,>- 		;  RESERVED FOR BSZ 
		<DEV,,M>- 		;* DEVICE CHARACTERISTICS 
		<TMP2..,1,>- 		;  RESERVED FOR SDC 
		<TMP3..,16,>- 		;  UNDEFINED 
		>			; 
$EQU	DAP$K_ATTMENU_I	<-		; DEFINE ATTMENU OPTIONS THAT ARE INVALID: 
	    <1@DAP$V_TMP1..>!-	;  RESERVED AND UNDEFINED BITS 
	    <1@DAP$V_TMP2..>!-	;  " 
	    <1@DAP$V_TMP3..>!-	;  " 
	    0>			; 
;	  K ATTMENU_U,<-	; DEFINE ATTMENU OPTIONS UNSUPPORTED BY VAX: 
;	    0>			; 
;	  K ATTMENU_D,0		; DEFINE DEFAULT ATTMENU VALUE 
			.BLKL	1 
$DEF	DAP$B_DATATYPE		 		; DATATYPE FIELD (EX-2) : BM 
	$VIELD	DAP,0,<- 			; DEFINE OFFSETS AND MASKS: 
		<ASCII,,>- 		;  DATA IN ASCII FORMAT 
		<IMAGE,,M>- 		;  DATA IN IMAGE FORMAT 
		<TMP1..,2,>- 		;  RESERVED FOR EBCDIC 
-				;  "		CMPFMT 
		<EXEC,,>- 		;  FILE CONTAINS EXECUTABLE CODE 
		<PRIV,,>- 		;  FILE CONTAINS PRIVILEGED CODE 
		<TMP2..,1,>- 		;# RESERVED (IGNORE IF RECEIVED) 
		<TMP3..,1,>- 		;  UNDEFINED 
		>			; 
$EQU	DAP$K_DATATYP_I	<-		; DEFINE DATATYPE OPTIONS THAT ARE INVALID: 
	    <1@DAP$V_TMP1..>!-	;  RESERVED AND UNDEFINED BITS 
	    <1@DAP$V_TMP3..>!-	;  " 
	    0>			; 
;	  K DATATYP_U,<-	; DEFINE DATATYPE OPTIONS UNSUPPORTED BY VAX: 
;	    0>			; 
;	  K DATATYP_D,<-	; DEFINE DEFAULT DATATYPE VALUE 
;	    DAP$M_IMAGE!-	;  IMAGE 
;	    0>			; 
			.BLKB	1 
$DEF	DAP$B_ORG		 			; FILE ORGANIZATION FIELD (1) : B 
$EQULST DAP$K_,$GBL,0,1,<- 			; FILE ORGANIZATION: 
		<SEQ,0>- 		;  SEQUENTIAL 
		<REL,16>- 		;  RELATIVE 
		<IDX,32>- 		;  INDEXED 
-; 	    HSH,48		;  HASHED 
		>		; 
;	  K ORG_D,DAP$K_SEQ	; DEFINE DEFAULT ORG VALUE 
			.BLKB	1 
$DEF	DAP$B_RFM		 			; RECORD FORMAT FIELD (1) : B 
$EQULST DAP$K_,$GBL,0,1,<- 			; RECORD FORMAT: 
		<UDF,0>- 		;  UNDEFINED 
		<FIX,1>- 		;  FIXED LENGTH 
		<VAR,2>- 		;  VARIABLE LENGTH 
		<VFC,3>- 		;  VARIABLE WITH FIXED CONTROL 
		<STM,4>- 		;  ASCII STREAM 
		<LSA,5>- 		;  LINE SEQUENCED ASCII 
		>		; 
;	  K RFM_D,DAP$K_FIX	; DEFINE DEFAULT RFM VALUE 
			.BLKB	1 
$DEF	DAP$B_RAT		 			; RECORD ATTRIBUTES FIELD (EX-3) : BM 
	$VIELD	DAP,0,<- 			; MEANING: 
		<FTN,,>- 			;  FORTRAN CARRIAGE CONTROL 
		<CR,,>- 			;  LF-RECORD-CR CONTROL 
		<PRN,,>- 			;* PRINT FILE FORMAT 
		<BLK,,>- 			;  RECORDS DO NOT CROSS BLOCK BOUNDARIES 
		<EMBEDDED,,M>- 	;  RECORDS HAVE EMBEDDED CONTROL CHARACTERS 
		<TMP1..,3,>- 		;  UNDEFINED 
		>			; 
$EQU	DAP$K_RAT_I	<-			; DEFINE RAT OPTIONS THAT ARE INVALID: 
	    <1@DAP$V_TMP1..>!-	;  RESERVED AND UNDEFINED BITS 
	    0>			; 
;	  K RAT_U,<-		; DEFINE RAT OPTIONS UNSUPPORTED BY VAX: 
;	    0>			; 
;	  K RAT_D,<-		; DEFINE DEFAULT RAT VALUE 
;	    DAP$M_EMBEDDED!-	;  RECORDS HAVE EMBEDDED CONTROL CHARACTERS 
;	    0>			; 
			.BLKB	1 
$DEF	DAP$W_BLS		 			; BLOCK SIZE FIELD (2) : B 
$EQU	DAP$K_BLS_D	512			; DEFINE DEFAULT BLS VALUE 
			.BLKW	1 
$DEF	DAP$W_MRS		 			; MAXIMUN RECORD SIZE FIELD (2) : B 
;	  K MRS_D,0		; DEFINE DEFAULT MRS VALUE 
			.BLKW	1 
$DEF	DAP$L_ALQ		 			; ALLOCATION QUANTITY FIELD (I-5) : B 
;	  K ALQ_D,0		; DEFINE DEFAULT ALQ VALUE 
			.BLKL	1 
$DEF	DAP$B_BKS		 			; BUCKET SIZE FIELD (1) : B 
;	  K BKS_D,0		; DEFINE DEFAULT BKS VALUE 
			.BLKB	1 
$DEF	DAP$B_FSZ		 			; FIXED CONTROL AREA SIZE FIELD (1) : B 
;	  K FSZ_D,0		; DEFINE DEFAULT FSZ VALUE 
			.BLKB	1 
$DEF	DAP$W_DEQ		 			; DEFAULT EXTENSION QUANTITY FIELD (2) : B 
;	  K DEQ_D,0		; DEFINE DEFAULT DEQ VALUE 
			.BLKW	1 
$DEF	DAP$L_MRN		 			; MAXIMUM RECORD NUMBER FIELD (I-5) : B 
;	  K MRN_D,0		; DEFINE DEFAULT MRN VALUE 
			.BLKL	1 
$DEF	DAP$Q_RUNSYS		 		; RUN-TIME SYSTEM FIELD (I-40) : A 
				;  DESCRIPTOR 
			.BLKQ	1 
$DEF	DAP$L_FOP		 			; FILE OPTIONS FIELD (EX-6) : BM 
	$VIELD	DAP,0,<- 			; OPTIONS: 
		<RWO,,M>- 		;  REWIND MAGTAPE ON OPEN 
		<RWC,,M>- 		;  REWIND MAGTAPE ON CLOSE 
		<TMP1..,1,>- 		;  RESERVED BIT IN DAP SPEC 
		<POS,,M>- 		;  POSITION MAGTAPE PAST LAST CREATED FILE 
		<DLK,,M>- 		;  DO NOT LOCK IF NOT PROPERLY CLOSED ?????? 
		<TMP2..,2,>- 		;  RESERVED BIT IN DAP SPEC 
-				;# " 
		<CTG,,M>- 		;  CONTIGUOUS FILE EXTENSION 
		<SUP,,M>- 		;  SUPERSEDE EXISTING FILE 
		<NEF,,M>- 		;  INHIBIT MAGTAPE END OF FILE POSITIONING 
		<TMP,,M>- 		;  CREATE TEMPORARY FILE 
		<TMD,,M>- 		;  CREATE TEMPORARY FILE AND MARK FOR DELETE 
		<FID,,M>- 		;  OPEN FILE BY FILE ID 
		<DMO,,M>- 		;  DISMOUNT MAGTAPE ON CLOSE 
		<WCK,,M>- 		;  ENABLE WRITE CHECKING 
		<RCK,,M>- 		;  ENABLE READ CHECKING 
		<CIF,,M>- 		;  CREATE IF NO FILE PRESENT ELSE OPEN FILE 
		<TMP3..,1,>- 		;  RESERVED FOR LKO 
		<SQO,,M>- 		;* SEQUENTIAL ACCESS ONLY 
		<MXV,,M>- 		;* MAXIMIZE VERSION NUMBER 
		<SPL,,M>- 		;* SPOOL FILE ON CLOSE 
		<SCF,,M>- 		;* SUBMIT COMMAND FILE ON CLOSE 
		<DLT,,M>- 		;* DELETE FILE ON CLOSE 
-				;   IT MAY BE USED STAND-ALONE, OR AS A 
-				;   SUB-OPTION TO SCF OR SPL 
		<CBT,,M>- 		;* CONTIGUOUS BEST TRY 
		<TMP4..,8,>- 		;  UNDEFINED 
		>			; 
$EQU	DAP$K_FOP_I	<-			; DEFINE FOP OPTIONS THAT ARE INVALID: 
	    <1@DAP$V_TMP1..>!-	;  RESERVED AND UNDEFINED BITS 
	    <1@DAP$V_TMP2..>!-	;  " 
	    <1@DAP$V_TMP3..>!-	;  " 
	    <1@DAP$V_TMP4..>!-	;  " 
	    0>			; 
;	  K FOP_U,<-		; DEFINE FOP OPTIONS UNSUPPORTED BY VAX: 
;	    DAP$M_DLK!-		;  DLK 
;	    DAP$M_FID!-		;  FID 
;	    0>			; 
;	  K FOP_D,0		; DEFINE DEFAULT FOP VALUE 
;	F BSZ,B			; BYTE SIZE FIELD (1) : B 
			.BLKL	1 
$DEF	DAP$L_DEV		 			;*DEVICE CHARACTERISTICS FIELD (EX-6) : BM 
	$VIELD	DAP,0,<- 			; MEANING: 
		<DEVREC,,>- 		;* DEVICE IS RECORD ORIENTED 
		<DEVCCL,,>- 		;* CARRIAGE CONTROL DEVICE 
		<DEVTRM,,>- 		;* DEVICE IS A TERMINAL 
		<DEVDIR,,>- 		;* DEVICE IS DIRECTORY STRUCTURED 
		<DEVSDI,,>- 		;* DEVICE IS SINGLE DIRECTORY STRUCTURED 
		<DEVSQD,,>- 		;* SEQ. BLOCK ORIENTED DEVICE (E.G., MAGTAPE) 
		<TMP1..,1,>- 		;  RESERVED BIT IN DAP SPEC 
		<DEVFOD,,>- 		;* FILES ORIENTED DEVICE (E.G., DISK, MAGTAPE) 
		<DEVSHR,,>- 		;* DEVICE IS SHARABLE 
		<DEVSPL,,>- 		;* DEVICE IS BEING SPOOLED 
		<DEVMNT,,>- 		;* DEVICE IS MOUNTED 
		<DEVDMT,,>- 		;* DIVICE IS MARKED FOR DISMOUNT 
		<DEVALL,,>- 		;* DEVICE IS ALLOCATED 
		<DEVIDV,,>- 		;* DEVICE IS CAPABLE OF PROVIDING INPUT 
		<DEVODV,,>- 		;* DEVICE IS CAPABLE OF PROVIDING OUTPUT 
		<DEVSWL,,>- 		;* DEVICE IS SOFTWARE WRITE LOCKED 
		<DEVAVL,,>- 		;* DEVICE IS AVAILABLE 
		<DEVELG,,>- 		;* DEVICE HAS ERROR LOGGING ENABLED 
		<DEVMBX,,>- 		;* DEVICE IS A MAILBOX 
		<DEVRTM,,>- 		;* DEVICE IS REALTIME IN NATURE 
		<DEVRND,,>- 		;* DEVICE ALLOWS RANDOM ACCESS 
		<DEVRCK,,>- 		;* DEVICE HAS READ CHECKING ENABLED 
		<DEVWCK,,>- 		;* DEVICE HAS WRITE CHECKING ENABLED 
		<DEVFOR,,>- 		;* DEVICE IS MOUNTED AS FOREIGN (NOT FILES-11) 
		<DEVNET,,>- 		;* NETWORK DEVICE 
		<DEVGEN,,>- 		;* GENERIC DEVICE 
		<TMP2..,6,>- 		;  UNDEFINED 
		>			; 
$EQU	DAP$K_DEV_I	<-			; DEFINE DEV OPTIONS THAT ARE INVALID: 
	    <1@DAP$V_TMP1..>!-	;  " 
	    <1@DAP$V_TMP2..>!-	;  " 
	    0>			; 
;	  K DEV_U,<-		; DEFINE DEV OPTIONS UNSUPPORTED BY VAX: 
;	    0>			; 
;	  K DEV_D,0		; DEFINE DEFAULT DEV VALUE 
;	F SDC,L			; SPOOLING DEVICE CHARACTERISTICS FIELD (EX-6) : BM 
 
;++ 
; DEFINE SYMBOLS RELATED TO THE ACCESS MESSAGE (TYPE=3). 
;-- 
 
; *****	OFFSET = 60 ***** 
 
			.BLKL	1 
$DEF	DAP$B_ACCFUNC		 		; ACCESS FUNCTION FIELD (1) : B 
$EQULST DAP$K_,$GBL,0,1,<- 			; ACCESS FUNCTION: 
		<OPEN,1>- 		;  OPEN A FILE 
		<CREATE,2>- 		;  CREATE A FILE 
-;	    RENAME,3		;* RENAME A FILE 
		<ERASE,4>- 		;  ERASE (DELETE) A FILE 
-;	    DIR_LIST,6		;* RETURN DIRECTORY LIST 
		<SUBMIT,7>- 		;  SUBMIT (COPY AND EXECUTE) A COMMAND FILE 
		<EXECUTE,8>- 		;  EXECUTE A COMMAND FILE 
		>		; 
			.BLKB	1 
$DEF	DAP$B_ACCOPT		 		; ACCESS OPTIONS FIELD (EX-5) : BM 
	$VIELD	DAP,0,<- 			; MEANING: 
		<NONFATAL,,M>- 	;  I/O ERRORS ARE NOT FATAL 
		<STS_STORE,,>- 		;  RETURN STATUS MSG AFTER STORAGE OPERATION 
		<STS_RETRV,,>- 		;  RETURN STATUS MSG AFTER RETRIEVAL OPERATION 
		<TMP1..,5,>- 		;  UNDEFINED 
-;	    SND_CHECK,,,M	;* RETURN CHECKSUM ON CLOSE 
		>			; 
$EQU	DAP$K_ACCOPT_I	<-			; DEFINE ACCOPT OPTIONS THAT ARE INVALID: 
	    <1@DAP$V_TMP1..>!-	;  RESERVED AND UNDEFINED BITS 
	    0>			; 
;	  K ACCOPT_U,<-		; DEFINE ACCOPT OPTIONS UNSUPPORTED BY VAX: 
;	    DAP$M_SND_CHECK!-	;  RETURN CHECHSUM 
;	    0>			; 
			.BLKB	1 
$DEF	DAP$B_FAC		 			; FILE ACCESS FIELD (EX-3) : BM 
	$VIELD	DAP,0,<- 			; ACCESS FOR: 
		<PUT,,>- 			;  PUT RECORD 
		<GET,,M>- 		;  GET RECORD 
		<DEL,,>- 			;  DELETE RECORD 
		<UPD,,>- 			;  UPDATE RECORD 
		<TRN,,>- 			;  TRUNCATE FILE 
		<BIO,,>- 			;  BLOCK I/O OPERATIONS 
		<TMP1..,2,>- 		;  UNDEFINED 
		>			; 
$EQU	DAP$K_FAC_I	<-			; DEFINE FAC OPTIONS THAT ARE INVALID: 
	    <1@DAP$V_TMP1..>!-	;  RESERVED AND UNDEFINED BITS 
	    0>			; 
;	  K FAC_U,<-		; DEFINE FAC OPTIONS UNSUPPORTED BY VAX: 
;	    0>			; 
;	  K FAC_D,<-		; DEFINE DEFAULT FAC VALUE 
;	    DAP$M_GET!-		; GET 
;	    0>			; 
			.BLKB	1 
$DEF	DAP$B_SHR		 			; FILE SHARING FIELD (EX-3) : BM 
	$VIELD	DAP,0,<- 			; SHARED ACCESS FOR: 
		<,1,>- 			;  PUT RECORD 
		<,1,>- 			;  GET RECORD 
		<,1,>- 			;  DELETE RECORD 
		<,1,>- 			;  UPDATE RECORD 
		<TMP1..,2,>- 		;# RESERVED 
		<NIL,,M>- 		;  NO SHARED ACCESS ALLOWED 
		<TMP2..,1,>- 		;  UNDEFINED 
		>			; 
$EQU	DAP$K_SHR_I	<-			; DEFINE SHR OPTIONS THAT ARE INVALID: 
	    <1@DAP$V_TMP1..>!-	;  RESERVED AND UNDEFINED BITS 
	    <1@DAP$V_TMP2..>!-	;  " 
	    0>			; 
;	  K SHR_U,<-		; DEFINE SHR OPTIONS UNSUPPORTED BY VAX: 
;	    0>			; 
;	  K SHR_D,<-		; DEFINE DEFAULT SHR VALUE 
;	    DAP$M_GET!-		;  GET REOCRD 
;	    0>			; 
			.BLKB	1 
$DEF	DAP$Q_FILESPEC		 		; FILE SPECIFICATION FIELD (I-128) : A 
				;  DESCRIPTOR 
;	F DISPLAY,W		; DISPLAY ATTRIBUTES FIELD (EX-4) : BM 
;	F PASSWORD,Q		; PASSWORD FIELD (I-40) : B 
;				;  DESCRIPTOR 
 
;++ 
; DEFINE SYMBOLS RELATED TO THE CONTROL MESSAGE (TYPE=4). 
;-- 
 
; *****	OFFSET = 6C ***** 
 
			.BLKQ	1 
$DEF	DAP$B_CTLFUNC		 		; CONTROL FUNCTION FIELD (1) : B 
$EQULST DAP$K_,$GBL,0,1,<- 			; CONTROL FUNCTION: 
		<GET_READ,1>- 		;  GET/READ A RECORD/BLOCK 
		<CONNECT,2>- 		;  ESTABLISH A DATA STREAM 
		<UPDATE,3>- 		;  UPDATE A RECORD 
		<PUT_WRITE,4>- 		;  PUT/WRITE A RECORD/BLOCK 
		<DELETE,5>- 		;  DELETE A RECORD 
		<REWIND,6>- 		;* REWIND A FILE 
-;	    TRUNCATE,7		;* TRUNCATE SEQUENTIAL FILE 
-;	    RELEASE,9		;* RELEASE RECORD 
-;	    FREE,10		;* FREE ALL RECORDS 
		<SPACE,11>- 		;* FORWARD OR BACKWARD SPACE A FILE 
-;	    FLUSH,12		;* FLUSH ALL RECORDS 
-;	    NXTVOL,13		;* PERFORM END-OF-VOLUME PROCESSING 
		<FIND,14>- 		;* FIND A RECORD 
-;	    EXTEND,15		;* EXTEND FILE 
-;	    DISPLAY,16		;* DISPLAY FILE ATTRIBUTES 
		>		; 
			.BLKB	1 
$DEF	DAP$B_CTLMENU		 		; CONTROL MENU FIELD (EX-4) : BM 
	$VIELD	DAP,0,<- 			; MENU OF FIELDS TO FOLLOW: 
		<RAC,,M>- 		;  RAC 
		<KEY,,M>- 		;  KEY 
		<TMP1..,1,>- 		;  RESERVED FOR KRF 
		<ROP,,M>- 		;  ROP 
		<TMP2..,2,>- 		;  RESERVED FOR HSH 
-				;  "		DISPLAY 
		<TMP3..,2,>- 		;  UNDEFINED 
		>			; 
$EQU	DAP$K_CTLMENU_I	<-		; DEFINE CTLMENU OPTIONS THAT ARE INVALID: 
	    <1@DAP$V_TMP1..>!-	;  RESERVED AND UNDEFINED BITS 
	    <1@DAP$V_TMP2..>!-	;  " 
	    <1@DAP$V_TMP3..>!-	;  " 
	    0>			; 
;	  K CTLMENU_U,<-	; DEFINE CTLMENU OPTIONS UNSUPPORTED BY VAX: 
;	    0>			; 
;	  K CTLMENU_D,0		; DEFINE DEFAULT CTLMENU VALUE 
			.BLKB	1 
$DEF	DAP$B_RAC		 			; RECORD ACCESS FIELD (1) : B 
$EQULST DAP$K_,$GBL,0,1,<- 			; RECORD ACCESS TYPE: 
		<SEQ_ACC,0>- 		;  SEQUENTIAL RECORD ACCESS 
		<KEY_ACC,1>- 		;  KEYED ACCESS 
		<RFA_ACC,2>- 		;  ACCESS BY RFA 
		<SEQ_FILE,3>- 		;  SEQUENTIAL FILE TRANSFER 
		<BLK_VBN,4>- 		;  BLOCK MODE ACCESS BY VBN 
		<BLK_FILE,5>- 		;  BLOCK MODE FILE TRANSFER 
		>		; 
;	  K RAC_D,DAP$K_SEQ_FILE ; DEFINE DEFAULT RAC VALUE 
			.BLKB	1 
				 			; PADDING 
;	F KRF,B			; KEY OF REFERENCE FIELD (1) : B 
			.BLKB	1 
$DEF	DAP$Q_KEY		 			; KEY FIELD (I-255) : B 
;	  K KEY_D,0		; DEFINE DEFAULT KEY VALUE 
			.BLKQ	1 
$DEF	DAP$L_ROP		 			; RECORD OPTIONS FIELD (EX-6) : BM 
	$VIELD	DAP,0,<- 			; MEANING: 
		<EOF,,>- 			;  POSITION TO END-OF-FILE 
		<TMP1..,10,>- 		;  RESERVED BIT IN DAP SPEC 
-				;  " 
-				;  RESERVED FOR HSH 
-				;  "		LOA 
-				;  "		ULK 
-				;  RESERVED BIT IN DAP SPEC 
-				;  "		RAH 
-				;  "		WBH 
-				;  "		KGE 
-				;  "		KGT 
		<TMP2..,21,>- 		;  UNDEFINED 
		>			; 
$EQU	DAP$K_ROP_I	<-			; DEFINE ROP OPTIONS THAT ARE INVALID: 
	    <1@DAP$V_TMP1..>!-	;  RESERVED AND UNDEFINED BITS 
	    <1@DAP$V_TMP2..>!-	;  " 
	    0>			; 
;	  K ROP_U,<-		; DEFINE ROP OPTIONS UNSUPPORTED BY VAX: 
;	    0>			; 
;	  K ROP_D,0		; DEFINE DEFAULT ROP VALUE 
;	F HSH,L			; HASH CODE FIELD (I-5) : B 
;	F DISPLAY2,W		; DISPLAY ATTRIBUTES FIELD (EX-4) : BM 
 
;++ 
; DEFINE SYMBOLS RELATED TO THE CONTINUE TRANSFER MESSAGE (TYPE=5). 
;-- 
 
; *****	OFFSET = 7C ***** 
 
			.BLKL	1 
$DEF	DAP$B_CONFUNC		 		; CONTINUE TRANSFER FUNCTION FIELD (1) : B 
$EQULST DAP$K_,$GBL,0,1,<- 			; RECOVERY ACTION: 
		<RETRY,1>- 		;  TRY ACCESS FUNCTION AGAIN 
		<SKIP_REC,2>- 		;  SKIP RECORD IN ERROR AND CONTINUE 
		<ABORT,3>- 		;  ABORT TRANSFER 
		>		; 
			.BLKB	1 
				 			; PADDING 
 
 
 
 
;++ 
; DEFINE SYMBOLS RELATED TO THE ACKNOWLEDGE MESSAGE (TYPE=6). 
;-- 
 
;	NONE 
 
;++ 
; DEFINE SYMBOLS RELATED TO THE ACCESS COMPLETE MESSAGE (TYPE=7). 
;-- 
 
; *****	OFFSET = 80 ***** 
 
			.BLKB	3 
$DEF	DAP$B_CMPFUNC		 		; ACCESS COMPLETE FUNCTION FIELD (1) : B 
$EQULST DAP$K_,$GBL,0,1,<- 			; ACCESS COMPLETE FUNCTION: 
		<CLOSE,1>- 		;  CLOSE THE FILE 
		<RESPONSE,2>- 		;  RESPONSE TO PARTNER'S CMPFUNC REQUEST 
		<PURGE,3>- 		;  CLOSE AND ERASE THE FILE 
		<DISCON,4>- 		;  DISCONNECT RECORD STREAM 
		>		; 
			.BLKB	1 
				 			; PADDING 
;	F CHKSUM,W		; CHECKSUM FIELD (2) : B 
			.BLKB	3 
$DEF	DAP$L_FOP2		 		; FILE OPTIONS FIELD (EX-6) : BM 
				;  (SEE FOP FIELD OF ATTRIBUTES MESSAGE 
				;  FOR ALL BIT DEFINITIONS) 
 
 
 
 
;++ 
; DEFINE SYMBOLS RELATED TO THE DATA MESSAGE (TYPE=8). 
;-- 
 
; *****	OFFSET = 88 ***** 
 
			.BLKL	1 
$DEF	DAP$Q_NUMBER		 		; RECORD NUMBER FIELD (I-8) : B 
			.BLKQ	1 
$DEF	DAP$Q_FILEDATA		 		; FILE DATA FIELD (REST OF MESSAGE) 
				;  DESCRIPTOR 
 
;++ 
; DEFINE SYMBOLS RELATED TO THE STATUS MESSAGE (TYPE=9). 
;-- 
 
; *****	OFFSET = 98 ***** 
 
			.BLKQ	1 
$DEF	DAP$W_STSCODE		 		; DAP STATUS CODE FIELD (2) : B 
;	  V <M			; SUBFIELDS: 
;	    MICCODE,12		;  MICRO STATUS CODE 
;	    MACCODE,4		;  MACRO STATUS CODE 
;	    >			; 
$EQULST DAP$_,$GBL,0,1,<- 		; MACCODE FIELD STATUS CODES: 
		<PENDING,0>- 		;  OPERATION IN PROGRESS 
		<SUCCESS,1>- 		;  SUCCESSFUL COMPLETION 
		<UNSUPPORT,2>- 		;  DAP IMPELMENTATION DOES NOT SUPPORT REQUEST 
		<FILE_OPEN,4>- 		;  ERRORS RELATED TO OPENING A FILE 
		<FILE_XFER,5>- 		;  ERRORS ENCOUNTERED WHILE FILE IS OPEN; 
-				;  I.E., DURING FILE TRANSFER OR RECORD ACCESS 
		<FILE_CLOS,7>- 		;  ERRORS RELATED TO CLOSING A FILE 
		<FORMAT,8>- 		;  PARSE ERROR CAUSED BY INCORRECT FORMAT 
		<INVALID,9>- 		;  INVALID FIELD VALUE 
		<MSG_SYNC,10>- 		;  DAP MESSAGE RECEIVED OUT-OF-ORDER 
		>		; 
			.BLKW	1 
				 			; PADDING 
			.BLKW	1 
$DEF	DAP$Q_RFA		 			; RECORD FILE ADDRESS FIELD (I-8) : B 
			.BLKQ	1 
$DEF	DAP$L_RECNUM		 		; RECORD NUMBER FIELD (I-8) : B 
			.BLKL	1 
$DEF	DAP$L_STV		 			; SECONDARY STATUS FIELD (I-8) : B 
 
 
 
 
; *****	OFFSET = AC ***** 
 
			.BLKL	1 
				 			; UNUSED LOCATIONS 
			.BLKL	5 
$DEF	DAP$C_BLN
$DEF	DAP$K_BLN					; DEFINE LENGTH OF THIS CONTROL BLOCK 

	$DEFEND	DAP,$GBL,DEF		; 

	.ENDM	$DAPDEF
 
;++ 
; $DAPFLDDEF DEFINES DAP FIELD IDENTIFICATION SYMBOLS. 
;-- 
 
	.MACRO	$DAPFLDDEF,$GBL 

	$DEFINI	DAP,$GBL

 
$EQULST DAP$_,$GBL,0,1,<- 			; MISCELLANEOUS FIELD ID CODES: 
		<UNKNOWN,0>- 		;  UNKNOWN FIELD 
		<TYPE,8>- 		;  DAP MESSAGE TYPE FIELD 
		>		; 
$EQULST DAP$_,$GBL,0,1,<- 			; MESSAGE HEADER FIELD ID CODES: 
		<FLAGS,8>- 		;  DAP MESSAGE FLAGS FIELD 
		<STREAMID,9>- 		;  DATA STREAM IDENTIFICATION FIELD 
		<LENGTH,10>- 		;  LENGTH FIELD 
		>		; 
$EQULST DAP$_,$GBL,0,1,<- 			; CONFIGURATION MESSAGE FIELD ID CODES: 
		<BUFSIZ,16>- 		;  BUFFER SIZE FIELD 
		<OSTYPE,17>- 		;  OPERATING SYSTEM TYPE FIELD 
		<FILESYS,18>- 		;  FILE SYSTEM TYPE FIELD 
		<VERNUM,19>- 		;  DAP VERSION NUMBER FIELD 
		<ECONUM,20>- 		;  ECO VERSION NUMBER FIELD 
		<USRNUM,21>- 		;  USER PROTOCOL VERSION NUMBER FIELD 
		<SOFTVER,22>- 		;  DEC SOFTWARE RELEASE NUMBER FIELD 
		<USRSOFT,23>- 		;  USER SOFTWARE RELEASE NUMBER FIELD 
		<SYSCAP,24>- 		;  SYSTEM CAPABILITIES FIELD 
		>		; 
$EQULST DAP$_,$GBL,0,1,<- 			; ATTRIBUTES MESSAGE FIELD ID CODES: 
		<ATTMENU,16>- 		;  ATTRIBUTES MENU FIELD 
		<DATATYPE,17>- 		;  DATA TYPE FIELD 
		<ORG,18>- 		;  FILE ORGANIZATION FIELD 
		<RFM,19>- 		;  RECORD FORMAT FIELD 
		<RAT,20>- 		;  RECORD ATTRIBUTES FIELD 
		<BLS,21>- 		;  BLOCK SIZE FIELD 
		<MRS,22>- 		;  MAXIMUM RECORD SIZE FIELD 
		<ALQ,23>- 		;  ALLOCATION QUANTITY FIELD 
		<BKS,24>- 		;  BUCKET SIZE FIELD 
		<FSZ,25>- 		;  FIXED CONTROL AREA SIZE FIELD 
		>
$EQULST DAP$_,$GBL,,1,<-
		<MRN,26>- 		;  MAXIMUM RECORD NUMBER FIELD 
		<RUNSYS,27>- 		;  RUN-TIME SYSTEM FIELD 
		<DEQ,28>- 		;  DEFAULT EXTENSION QUANTITY FIELD 
		<FOP,29>- 		;  FILE OPTIONS FIELD 
-;	  BSZ,30		;  BYTE SIZE FIELD 
		<DEV,31>- 		;  DEVICE CHARACTERISTICS FIELD 
-				;  RESERVED FOR SDC,32 
		>		; 
$EQULST DAP$_,$GBL,0,1,<- 			; ACCESS MESSAGE FIELD ID CODES: 
		<ACCFUNC,16>- 		;  ACCESS FUNCTION FIELD 
		<ACCOPT,17>- 		;  ACCESS OPTIONS FIELD 
		<FILESPEC,18>- 		;  FILE SPECIFICATION FIELD 
		<FAC,19>- 		;  FILE ACCESS FIELD 
		<SHR,20>- 		;  FILE SHARING FIELD 
-;	  DISPLAY,21		;  DISPLAY ATTRIBUTES FIELD 
-;	  PASSWORD,22		;  PASSWORD FIELD 
		>		; 
$EQULST DAP$_,$GBL,0,1,<- 			; CONTROL MESSAGE FIELD ID CODES: 
		<CTLFUNC,16>- 		;  CONTROL FUNCTION FIELD 
		<CTLMENU,17>- 		;  CONTROL MENU FIELD 
		<RAC,18>- 		;  RECORD ACCESS FIELD 
		<KEY,19>- 		;  KEY FIELD 
-;	  KRF,20		;  KEY OF REFERENCE FIELD 
		<ROP,21>- 		;  RECORD OPTIONS FIELD 
-;	  HSH,22		;  HASH FIELD 
-;	  DISPLAY2,23		;  DISPLAY ATTRIBUTES FIELD 
		>		; 
$EQULST DAP$_,$GBL,0,1,<- 			; CONTINUE TRANSFER MESSAGE FIELD ID CODES: 
		<CONFUNC,16>- 		;  CONTINUE TRANSFER FUNCTION FIELD 
		>		; 
				; ACKNOWLEDGE MESSAGE FIELD ID CODES: 
				;  NONE 
$EQULST DAP$_,$GBL,0,1,<- 			; ACCESS COMPLETE MESSAGE FIELD ID CODES: 
		<CMPFUNC,16>- 		;  ACCESS COMPLETE FUNCTION FIELD 
		<FOP2,17>- 		;  FILE OPTIONS FIELD 
		>		; 
$EQULST DAP$_,$GBL,0,1,<- 			; DATA MESSAGE FIELD ID CODES: 
		<NUMBER,16>- 		;  RECORD NUMBER FIELD 
		<FILEDATA,17>- 		;  FILE DATA FIELD 
		>		; 
$EQULST DAP$_,$GBL,0,1,<- 			; STATUS MESSAGE FIELD ID CODES: 
		<STSCODE,16>- 		;  STATUS CODE FIELD USED FOR BOTH: 
-				;   MACCODE,16 
-				;   MICCODE,17 
		<RFA,18>- 		;  RECORD FILE ADDRESS FIELD 
		<RECNUM,19>- 		;  RECORD NUMBER FIELD 
		<STV,20>- 		;  SECONDARY STATUS FIELD 
		>		; 

	$DEFEND	DAP,$GBL,FLDDEF		; 

	.ENDM	$DAPFLDDEF
	.END 
 
 
