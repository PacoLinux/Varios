;	.TITLE	$FALDEF - FAL CONTROL BLOCK DEFINITIONS 
;	.IDENT	/X0.1-16/ 
 
; 
;			  COPYRIGHT (c) 1977, 1978 BY 
;	      DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS. 
; 
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED 
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE 
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER 
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY 
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY 
; TRANSFERRED. 
; 
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE 
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT 
; CORPORATION. 
; 
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS 
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL. 
; 
 
;++ 
; FACILITY: DECNET FILE ACCESS LISTENER (FAL) 
; 
; ABSTRACT: 
; 
;	THIS MODULE DEFINES SYMBOLS FOR THE FAL CONTROL BLOCKS WHICH ARE 
;	INVOKED BY THE $FALWRKDEF AND $FALSTBDEF MACROS. 
; 
; ENVIRONMENT: 
; 
;	THE MDL TRANSLATOR MUST BE USED TO CONVERT FALDEF.MDL INTO 
;	FALDEF.MAR (AND FALDEF.B32). 
; 
; AUTHOR: JAMES A. KRYCKA,	CREATION DATE: 16-JUN-77 
; 
; MODIFICATIONS: 
; 
;-- 
 
;++ 
; $FALWRKDEF DEFINES FAL WORK AREA OFFSETS AND SYMBOLS. 
;-- 
 
	.MACRO	$FALWRKDEF,$GBL 

	$DEFINI	FAL,$GBL

$DEF	FAL$Q_FLG		 			; MISCELLANEOUS FLAG 
	$VIELD	FAL,0,<- 			; FLAGS DENOTE: 
		<CNF_MSG,,>- 		;  PROCESSED CONFIGURATION MESSAGE 
		<ATT_MSG,,>- 		;  PROCESSED ATTRIBUTES MESSAGE 
		<CONNECT,,>- 		;  PERFORMED CONNECT FUNCTION 
		<,5,>- 			; 
		<FILE_MODE,,>- 		;  FILE TRANSFER MODE (VS RECORD TRANSFER MODE) 
		<BLOCK_IO,,>- 		;  BLOCK I/O MODE 
		<EOF,,>- 			;  END-OF-FILE ENCOUNTERED DURING RECORD ACCESS 
		<,5,>- 			; 
		<RCVAST,,>- 		; RECEIVE MESSAGE AST FLAG 
		<XMTAST,,>- 		; TRANSMIT MESSAGE AST FLAG 
		<MBXAST,,>- 		; MAILBOX MESSAGE AST FLAG 
		<,5,>- 			; 
		>			; 
			.BLKQ	1 
$DEF	FAL$Q_STATE_CTX		 		; STATE TRANSITION TABLE CONTEXT: 
;	  S TBL_ADDR,0,L	;  STATE TABLE ADDRESS 
;	  S CUR_ADDR,4,L	;  CURRENT TABLE ENTRY ADDRESS 
			.BLKQ	1 
$DEF	FAL$B_VALUE		 		; STATE TRANSITION VALUE 
			.BLKB	1 
				 			; SPARE LOCATIONS 
			.BLKB	3 
$DEF	FAL$W_MAXDAPSIZ		 		; MAXIMUM DAP MESSAGE SIZE (DETERMINED VIA 
				;  EXCHANGE OF CONFIGURATION MESSAGES) 
			.BLKW	1 
$DEF	FAL$W_ACTUALSIZ		 		; ACTUAL SIZE OF ALLOCATED RCV AND XMT BUFFERS 
			.BLKW	1 
$DEF	FAL$W_LNKCHN		 		; LINK CHANNEL # 
			.BLKW	1 
$DEF	FAL$W_MBXCHN		 		; ASSOCIATED MAILBOX CHANNEL # 
			.BLKW	1 
$DEF	FAL$Q_LNKIOSB		 		; LINK CHANNEL I/O STATUS BLOCK 
			.BLKQ	1 
$DEF	FAL$Q_MBXIOSB		 		; MAILBOX CHANNEL I/O STATUS BLOCK 
			.BLKQ	1 
$DEF	FAL$Q_MBX		 			; MAILBOX MESSAGE DESCRIPTOR BLOCK 
$DEF	FAL$Q_NCB		 		; NCB DESCRIPTOR BLOCK 
			.BLKQ	1 
$DEF	FAL$Q_BOUNDS		 		; LOWER/UPPER ADDRESS BOUNDS OF THE 
				;  COMBINED RCV AND XMT BUFFERS 
			.BLKQ	1 
$DEF	FAL$Q_RCV		 			; RECEIVE DAP MESSAGE DESCRIPTOR 
			.BLKQ	1 
$DEF	FAL$Q_XMT		 			; TRANSMIT DAP MESSAGE DESCRIPTOR 
			.BLKQ	1 
$DEF	FAL$L_SPARE		 		; UNUSED LOCATIONS 
				; ******** OFFSET = ^X80 = 128 ******** 
			.BLKL	13 
$DEF	FAL$T_MBXBUF		 		; MAILBOX BUFFER 
$EQU	FAL$K_MBXBUF	64			; MAILBOX BUFFER SIZE 
$DEF	FAL$T_NCBBUF		 	; NCB BUFFER 
$EQU	FAL$K_NCBBUF	64			; NCB BUFFER SIZE 
			.BLKB	64 
$DEF	FAL$L_STB		 		; STATISTICS BLOCK 
$EQU	FAL$K_STB	32			; STATISTICS BLOCK SIZE 
			.BLKL	8 
				 			; UNUSED LOCATIONS 
				; ******** OFFSET = ^X100 = 256 ******** 
			.BLKL	8 
$DEF	FAL$T_DAP		 		; DAP CONTROL BLOCK STORAGE AREA 
$EQU	FAL$K_DAP	192			; MAX DAP CONTROL BLOCK SIZE 
			.BLKB	192 
				 			; UNUSED LOCATIONS 
				; ******** OFFSET = ^X200 = 512 ******** 
			.BLKL	16 
$DEF	FAL$L_FAB		 		; FAB CONTROL BLOCK STORAGE AREA 
$EQU	FAL$K_FAB	80			; FAB CONTROL BLOCK SIZE 
			.BLKL	20 
$DEF	FAL$L_RAB		 		; RAB CONTROL BLOCK STORAGE AREA 
$EQU	FAL$K_RAB	68			; RAB CONTROL BLOCK SIZE 
			.BLKL	17 
$DEF	FAL$L_NAM		 		; NAM CONTROL BLOCK STORAGE AREA 
$EQU	FAL$K_NAM	56			; NAM CONTROL BLOCK SIZE 
			.BLKL	14 
				 			; UNUSED LOCATIONS 
				; ******** OFFSET = ^X300 = 768 ******** 
			.BLKL	13 
$DEF	FAL$T_RESULTANT		 	; RESULTANT STRING STORAGE AREA 
$EQU	FAL$K_RESULTSIZ	128		; RESULTANT STRING SIZE (MAX) 
			.BLKB	128 
$DEF	FAL$T_BUFFER		 		; SCRATCH BUFFER 
$EQU	FAL$K_BUFFERSIZ	128		; SCRATCH BUFFER SIZE 
			.BLKB	128 
$DEF	FAL$C_WRKBLN
$DEF	FAL$K_WRKBLN				; DEFINE LENGTH OF THIS CONTROL BLOCK 

	$DEFEND	FAL,$GBL,WRKDEF		; 

	.ENDM	$FALWRKDEF
 
;++ 
; $FALSTBDEF DEFINES FAL STATISTICS BLOCK OFFSETS AND SYMBOLS. 
;-- 
 
	.MACRO	$FALSTBDEF,$GBL 

	$DEFINI	FAL,$GBL

$DEF	FAL$L_RCV_MSG		 		; TOTAL # OF DAP MESSAGES RECEIVED 
			.BLKL	1 
$DEF	FAL$L_XMT_MSG		 		; TOTAL # OF DAP MESSAGES TRANSMITTED 
			.BLKL	1 
$DEF	FAL$L_RCV_BYTE		 		; TOTAL # OF DAP MESSAGE BYTES RECEIVED 
			.BLKL	1 
$DEF	FAL$L_XMT_BYTE		 		; TOTAL # OF DAP MESSAGE BYTES TRANSMITTED 
			.BLKL	1 
$DEF	FAL$L_RCV_REC		 		; TOTAL # OF DATA RECORDS RECEIVED 
			.BLKL	1 
$DEF	FAL$L_XMT_REC		 		; TOTAL # OF DATA RECORDS TRANSMITTED 
			.BLKL	1 
$DEF	FAL$L_RCV_DATA		 		; TOTAL # OF DATA RECORD BYTES RECEIVED 
			.BLKL	1 
$DEF	FAL$L_XMT_DATA		 		; TOTAL # OF DATA RECORD BYTES TRANSMITTED 
			.BLKL	1 
$DEF	FAL$C_STBBLN
$DEF	FAL$K_STBBLN				; DEFINE LENGTH OF THIS CONTROL BLOCK 

	$DEFEND	FAL,$GBL,STBDEF		; 

	.ENDM	$FALSTBDEF
	.END 
 
 
