DATA	MACRO M1110  21-AUG-78 21:43
TABLE OF CONTENTS

     7-    2	**********  DEFINITIONS  **********
     7-    8	CHARACTER TABLES
     8-   92	"XUPARROW" AND "XSYMBOL"  CHARACTERS
     9-  110	DATA DEFINITIONS
    10-  288	STORAGE FOR INITIAL BLOCK SIZE AND EXTENSION SIZE OF CREATED FILES
    11-  299	MACRO LIBRARY SEARCH VARIABLES
    11-  315	LISTING TITLE BUFFER
    11-  335	LISTING SUBTITLE BUFFER
    12-  346	INTERMEDIATE CODE BUFFER
    12-  353	QIO PARAMETER BLOCK FOR INTERMEDIATE FILE I/O
    12-  358	LISTING / INPUT LINE BUFFER
    12-  367	MACRO TEXT LINE BUFFER
    12-  372	OBJECT CODE BUFFER
    12-  377	SAVE / RESTORE PSECT CONTEXT BUFFER
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 1


      1						.IDENT	\X03.11\
      2					;
      3					; COPYRIGHT (C) 1977, 1978
      4					; DIGITAL EQUIPMENT CORPORATION, MAYNARD MASSACHUSETTS 01754
      5					;
      6					; THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ON A SINGLE
      7					; COMPUTER SYSTEM AND MAY BE COPIED ONLY WITH THE INCLUSION OF THE
      8					; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
      9					; MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
     10					; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
     11					; TERMS.  TITLE TO AND OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES
     12					; REMAIN IN DEC.
     13					;
     14					; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
     15					; AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL EQUIPMENT
     16					; CORPORATION.
     17					;
     18					; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
     19					; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
     20					;
     21
     22					;++
     23					; FACILITY:	VAX-11 MACRO OBJECT MODULE LIBRARY "MAR.OLB"
     24					;
     25					; ABSTRACT:	THIS MODULE IS PART OF THE VAX-11 MACRO ASSEMBLER, ITS DESCRIPTION
     26					;		IS ON THE FOLLOWING PAGE.
     27					;
     28					;
     29					; ENVIRNOMENT:	VAX-11 MACRO RUNS ON ANY VAX-11 WITH COMPATIBILITY MODE, UNDER
     30					;		THE CME (COMPATIBILITY MODE EMULATOR) OF VAX/VMS OR ON A PDP-11
     31					;		WITH EXTENDED INSTRUCTIONS UNDER RSX-11/M.
     32					;
     33					; AUTHOR:	STEVE POULSEN, CREATION DATE:  22-JUL-76
     34					;		DALE A. ROEDGER, 10-JAN-77 - 19-DEC-77
     35					;		DAVE N. CUTLER
     36					;		BENN L. SCHREIBER
     37					;
     38					; MODIFIED BY:
     39					;
     40					;--
     41					.IF NDF $DATA$
     42						.NLIST
     43					.ENDC
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 2
SYMBOL TABLE DEFINITIONS

     45					.SBTTL	SYMBOL TABLE DEFINITIONS
     46					;
     47					; THE SYMBOL TABLE IS ORGANIZED AS A HASH TABLE POINTING TO LINKED
     48					; LISTS OF SYMBOL BLOCKS.  THE FLAGS WORD IN EACH BLOCK TELLS THE
     49					; TYPE OF THE SYMBOL (ID, KEYWORD, ETC).
     50					;
     51					; EACH ENTRY IN THE SYMBOL TABLE HAS THE FOLLOWING FORMAT:
     52					;
     53					;	*****************
     54					;	*     LINK      *	SYMLINK		<-- REFERENCE POINT
     55					;	*****************
     56					;	*     FLAGS     *	SYMFLAGS
     57					;	*****************
     58					;	*     VALUE     *	SYMVL1
     59					;	***           ***
     60					;	*     VALUE     *	SYMVL2
     61					;	*****************
     62					;	*  LEN  *  SEG  *	SYMLEN / SYMSEG
     63					;	*****************
     64					;	*    SYMBOL     *	SYMCHRS
     65					;	*     NAME      *
     66					;	*****************
     67					;
     68					;
     69		000000 			SYMLINK	=	0		; LINK TO NEXT SYMBOL BLOCK IN CHAIN
     70		000002 			SYMFLAGS=	2		; FLAGS DESCRIBING SYMBOL
     71		000004 			SYMVL1	=	4		; SYMBOL VALUE (LSB)
     72		000006 			SYMVL2	=	6		; SYMBOL VALUE (MSB)
     73		000010 			SYMSEG	=	8.		; SEGMENT NUMBER CONTAINING SYMBOL
     74		000011 			SYMLEN	=	9.		; NUMBER OF CHARACTERS IN NAME
     75		000012 			SYMCHRS	=	10.		; START OF SYMBOL'S NAME
     76		000017 			SYMMAX	=	15.		; 15 CHARACTERS MAXIMUM SYMBOL LENGTH
     77					;
     78					;
     79					; THE FLAGS WORD CONTAINS THE TOKEN TYPE OF THE SYMBOL (0=NOT YET DEFINED)
     80					; AND BITS DESCRIBING THE SYMBOL.  THE FOLLOWING BITS ARE DEFINED:
     81					;
     82		000377 			S.TKMSK	=	000377		; MASK TO GET TOKEN TYPE
     83		000040 			S.ODBG	=	000040		; OUTPUT SYMBOL IN THE DEBUG RECORD OF .OBJ
     84		000100 			S.EPT	=	000100		; SYMBOL IS ENTRY POINT MASK
     85		000200 			S.ASN	=	000200		; SYMBOL CREATED BY ASSIGNMENT STATEMENT
     86		000400 			S.REF	=	000400		; SYMBOL REFERENCED IN THIS MODULE
     87		001000 			S.LOCL	=	001000		; SYMBOL IS LOCAL LABEL
     88		002000 			S.DBG	=	002000		; SYMBOL HAS THE DEBUG ATTRIBUTE
     89		004000 			S.ABS	=	004000		; SYMBOL IS ABSOLUTE DEFINITION
     90		010000 			S.EXTN	=	010000		; SYMBOL IS EXTERNAL
     91		020000 			S.GLOBL	=	020000		; SYMBOL IS GLOBAL
     92		040000 			S.WEAK	=	040000		; SYMBOL IS WEAKLY DEFINED
     93		100000 			S.DF	=	100000		; USER SYMBOL IS DEFINED (VALUE KNOWN)
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 3
PSECT SYMBOL BLOCK DEFINITIONS

     95					.SBTTL	PSECT SYMBOL BLOCK DEFINITIONS
     96					;
     97					; THE PSECT SYMBOL BLOCK IS SIMILAR TO THAT OF OTHER USER DEFINED SYMBOLS
     98					; BUT NEEDS TO CONTAIN ADDITIONAL INFORMATION, SO THE STRUCTURE HAS BEEN EXPANDED.
     99					; NEW OFFSET NAMES HAVE BEEN ADDED TO ALLOW SYMBOLIC REFERENCING OF EACH VALUE
    100					;
    101					;	*****************
    102					;	*     LINK      *	SYMLINK		<-- REFERENCE POINT
    103					;	*****************
    104					;	*     FLAGS     *	SYMFLAGS
    105					;	*****************
    106					;	*    MAXIMUM    *	SYMVL1
    107					;	***           ***
    108					;	*    LENGTH     *	SYMVL2
    109					;	*****************
    110					;	*  LEN  *  SEG  *	SYMLEN / SYMSEG
    111					;	*****************
    112					;	*    CURRENT	*	PSECV1
    113					;	***	      ***
    114					;	*    LOCATION	*	PSECV2
    115					;	*****************
    116					;	* PSECT OPTIONS	*	PSECOP
    117					;	*****************
    118					;	*     PSECT     *	PSECCH
    119					;	*     NAME      *
    120					;	*****************
    121					;
    122		000012 			PSECV1	=	10.		; VALUE OF CURRENT LOCATION COUNTER (LSB)
    123		000014 			PSECV2	=	12.		; VALUE OF CURRENT LOCATION COUNTER (MSB)
    124		000016 			PSECOP	=	14.		; PSECT OPTION FLAGS / ALIGNMENT FACTOR
    125		000020 			PSECCH	=	16.		; START OF PSECT NAME
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 4
MACRO ARGUMENT DEFINITIONS

    127					.SBTTL	MACRO ARGUMENT DEFINITIONS
    128					;
    129					; REAL MACRO ARGUMENTS ARE IDENTIFIED WHEN A MACRO IS CALLED.  THE
    130					; 'GETARGS' ROUTINE BUILDS A BLOCK AT THE END OF ALLOCATED CORE TO
    131					; HOLD THE ARGUMENTS.  AFTER THE ARGUMENT BLOCK IS COMPLETED, IT IS
    132					; MOVED TO THE END OF FREE CORE.  THUS MACRO DEFINITIONS GROW DOWN
    133					; FROM THE END OF ALLOCATED CORE WHILE MACRO CALLS ARE STACKED STARTING
    134					; AT THE HIGH END OF FREE CORE.  THE FORMAT OF AN ARGUMENT BLOCK IS
    135					; AS FOLLOWS:
    136					;
    137					;
    138		000000 			M.LINK	=	0		; LINK TO PREVIOUS BLOCK
    139		000002 			M.NXTL	=	2		; POINTER TO NEXT LINE
    140		000004 			M.GETL	=	4		; POINTER TO GET-NEXT-LINE ROUTINE
    141		000006 			M.IFLV	=	6		; IF LEVEL
    142		000010 			M.IFVL	=	8.		; IF VALUE
    143		000012 			M.END	=	10.		; POINTER TO END OF BLOCK
    144		000014 			M.ARGC	=	12.		; COUNT OF FORMAL ARGUMENTS
    145		000016 			M.ARGS	=	14.		; START OF ARGUMENT OFFSET LIST
    146					;
    147					; THE ARGUMENT OFFSET LIST IS A LIST OF SINGLE WORD OFFSETS TO THE
    148					; ARGUMENT DESCRIPTORS.  THERE IS ONE ELEMENT IN THE LIST FOR EACH
    149					; FORMAL ARGUMENT, AND A ZERO ENTRY MEANS THAT NO REAL ARGUMENT WAS
    150					; SUPPLIED.  THE ARGUMENT DESCRIPTOR CONSISTS OF A LENGTH WORD FOLLOWED
    151					; BY THE TEXT FOR THE ARGUMENT.
    152					;
    153
    154					.SBTTL	CHARACTER CONSTANT DEFINITIONS
    155
    156		000011 			TAB	=	^O11			; HORIZONTAL TAB
    157		000012 			LF	=	^O12			; LINE FEED
    158		000014 			FF	=	^O14			; FORM FEED
    159		000015 			CR	=	^O15			; CARRIAGE RETURN
    160		000040 			BLNK	=	^O40			; SPACE OR BLANK
    161		000040 			SPACE	=	^O40			; SPACE OR BLANK
    162		000054 			COMMA	=	^O54			; COMMA
    163		000073 			SEMI	=	^O73			; SEMI-COLON
    164		000074 			LFTANG	=	^O74			; LEFT ANGLE BRACKET
    165		000076 			RGTANG	=	^O76			; RIGHT ANGLE BRACKET
    166		000140 			LOWCASE	=	^O140			; LOWER CASE LIMIT
    167		000074 			LPTLEN	=	60.			; MAXIMUM NUMBER OF LINES PER LISTING PAGE
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 5
MACRO DEFINITIONS

    169					.SBTTL	MACRO DEFINITIONS
    170					;
    171					;	LPUSH, LPOP	PUSH/POP 32 BIT VALUES ON V1STACK AND V2STACK
    172					;
    173					.MACRO	LPUSH	SRC1,SRC2
    174						ADD	#2,R4				; INCREMENT STACK POINTER
    175						MOV	SRC1,V1STACK(R4)		; STACK LSB
    176						MOV	SRC2,V2STACK(R4)		; STACK MSB
    177					.ENDM	LPUSH
    178
    179					.MACRO	LPOP	DST1,DST2
    180						MOV	V1STACK(R4),DST1		; POP LSB
    181						MOV	V2STACK(R4),DST2		;  POP MSB
    182						SUB	#2,R4				; BACK UP STACK POINTER
    183					.ENDM	LPOP
    184
    185					;
    186					;	INCRPC, DECRPC	INCREMENT AND DECREMENT PSEUDO-PC
    187					;
    188					.MACRO	INCRPC	VALUE
    189						ADD	VALUE,PC1			; INCREMENT PC
    190						ADC	PC2				; WITH CARRY TO MSB
    191					.ENDM	INCRPC
    192
    193					.MACRO	DECRPC	VALUE
    194						SUB	VALUE,PC1			; DECREMENT PC
    195						SBC	PC2				; WITH BORROW FROM MSB
    196					.ENDM	DECRPC
    197
    198					;	OUT		GENERATE BLOCK OF INTERMEDIATE CODE
    199					;
    200					; THE LIST OF ITEMS IN THE SECOND ARGUMENT ARE PUSHED ON THE STACK IN REVERSE
    201					; ORDER.  THE ACTION NUMBER IS SHIFTED TO THE UPPER BYTE AND THE LENGTH, IN
    202					; BYTES, IS "OR'ED" IN, THE ENTIRE WORD IS PUSHED ON THE STACK AND "OUTFRAME"
    203					; IS CALLED TO WRITE THE DATA INTO THE INTERMEDIATE BUFFER.
    204					;
    205					.MACRO	OUT	ACTN,DATA
    206						OUT1	DATA				; PUSH DATA ON STACK IN REVERSE ORDER
    207						CNT = CNT + 2				; COUNT ACTION-LENGTH WORD
    208						MOV	ACTN*256.+CNT,-(SP)		; ENCODE ACTION-LENGTH
    209						.IF IDN	<ACTN>,<#I.ERR>
    210						JSR	PC,OUTERR
    211						.IFF
    212						.IF IDN	<ACTN>,<#I.WRN>
    213						JSR	PC,OUTWRN
    214						.IFF
    215						JSR	PC,OUTFRA
    216						.ENDC
    217						.ENDC
    218					.ENDM	OUT
    219
    220					.MACRO	OUT1	D1,D2,D3,D4,D5,D6,D7,D8
    221						.NARG	CNT
    222						.IF NE CNT
    223						CNT = CNT*2				; GET NUMBER OF BYTES OF DATA
    224						.IRP DAT,<D8,D7,D6,D5,D4,D3,D2,D1>	; REVERSE ARGUMENTS
    225						.IF NB DAT
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 5-1
MACRO DEFINITIONS

    226						MOV DAT,-(SP)				; PUSH DATA ONTO STACK
    227						.ENDC
    228						.ENDR
    229						.ENDC
    230					.ENDM	OUT1
    231
    232					;
    233					;	SPNOR -- CALL ROUTINE TO IGNORE SPACES AND TABS IN INPUT LINE
    234					;
    235					.MACRO	SPNOR
    236						JSR	PC,SKIPSP
    237					.ENDM	SPNOR
    238
    239					;
    240					;	SAVAL -- CALL CO-ROUTINE TO SAVE ALL REGISTERS
    241					;
    242					.MACRO	SAVAL
    243						JSR	R5,.SAVAL
    244					.ENDM	SAVAL
    245
    246					;
    247					;	SAVRG -- CALL CO-ROUTINE TO SAVE R1 THRU R3
    248					;
    249					.MACRO	SAVRG
    250						JSR	R3,.SAVRG
    251					.ENDM	SAVRG
    252
    253					;
    254					;	ERRPRT -- CALL ERROR PRINT ROUTINE
    255					;
    256					.MACRO	ERRPRT	MSG,FIL=0
    257						MOV	#MSG,R0
    258						MOV	#FIL,R1
    259						JSR	PC,ERRPRI
    260					.ENDM	ERRPRT
    261					;
    262					;	CNTSTR -- MACRO TO MAKE COUNTED ASCII STRINGS
    263					;		  THE COUNT IS IN THE FIRST WORD
    264					;
    265					.MACRO	CNTSTR	TXT,?L1
    266					$TT$ = .
    267						.WORD	L1-$TT$-2
    268						.ASCII	?TXT?
    269					L1:	.EVEN
    270					.ENDM	CNTSTR
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 6
PASS 2 MACRO DEFINITIONS

    272					.SBTTL	PASS 2 MACRO DEFINITIONS
    273					;
    274					;THIS MACRO CALLS 'LFORM' TO OUTPUT 'N' BYTES TO THE LISTING FILE
    275					;IN HEX FORMAT.
    276					;
    277					.MACRO	FORMAT	N
    278						MOV	N,R0
    279						JSR PC,LFORM
    280					.ENDM	FORMAT
    281
    282					;
    283					; THESE MACROS ARE USED TO OUTPUT BYTES TO THE OBJECT FILE.
    284					; DATA -- PLACES BYTES IN THE OUTPUT BUFFER
    285					;
    286					; GEN -- CALLS THE .GEN ROUTINE WHICH OUTPUTS THE BUFFER IF IT IS NEAR
    287					;	THE OVERFLOW POINT AND THE PLACES THE BYTE INTO THE EMPTY BUFFER
    288					;
    289					.MACRO	GEN	BYT
    290						MOV	#BYT,R0
    291						JSR	PC,.GEN
    292					.ENDM	GEN
    293
    294					.MACRO	DATA	BYT
    295						LET OBJBYT	:B= BYT
    296						CALL OUTOBJ
    297					.ENDM	DATA
    298
    299					;
    300					;THIS MACRO IS USED TO SIGNAL PASS 2 ERRORS.
    301					;
    302					.MACRO	P2ERR	NAM
    303						MOV	#NAM,R0
    304						JSR	PC,P2EMSG
    305					.ENDM	P2ERR
    306
    307					;
    308					; MACRO TO PLACE SYMBOLS IN ONE LINKED LIST.  THIS MACRO IS
    309					; USED WHEN ONLY A SINGLE LINKED LIST INSTEAD OF A HASH TABLE
    310					; IS USED.  THE SYMBOL 'INSYMP' IS THE LINK POINTER, AND
    311					; IT SHOULD BE ZEROED BEFORE THE LIST IS CREATED.
    312					;
    313					.MACRO	INSYM	NAM,VL1,FLAG=0			; NAME, VALUE, FLAG
    314						INSYTM=.
    315						.WORD INSYMP				; LINK
    316						INSYMP = INSYTM
    317						.WORD FLAG				; FLAGS
    318						.WORD VL1   				; VALUE
    319						.WORD 0					; VALUE
    320						.BYTE 0					; SEGMENT
    321						.NCHR INSYMC,	<NAM>
    322						.BYTE INSYMC				; LENGTH
    323						.ASCII	/NAM/				; NAME
    324						.EVEN
    325					.ENDM	INSYM
    326
    327					.SBTTL
    328					.IIF NDF $DATA$,	.LIST
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 7


      1					.TITLE	DATA
      2					.SBTTL	**********  DEFINITIONS  **********
      3
      4					.MCALL	QIOW$,	QDPB$
      5
      6		000001 				$DATA$ = 1				; ALLOCATE DATA
      7
      8					.SBTTL	CHARACTER TABLES
      9	000000				.PSECT CHTAB,D,GBL
     10					;
     11					; THIS TABLE IS 137 (OCTAL) WORDS LONG. (IE. IT CONTAINS NO LOWER CASE)
     12					;
     13					; THE 'CHRTAB' TABLE IS USED TO DETERMINE WHICH TOKENS CAN POSSIBLY
     14					; BE STARTED WITH A GIVEN CHARACTER.  THE PROCEDURE IS TO OBTAIN THE
     15					; FIRST CHARACTER OF THE TOKEN, SHIFT IT LEFT (THIS IS A WORD TABLE!),
     16					; AND GET THE TABLE ENTRY CORRESPONDING TO THE ASCII VALUE OF THE
     17					; CHARACTER.  IF THE CHARACTER ITSELF IS A TOKEN (LIKE DDPLUS) THEN
     18					; THE VALUE OF THE TABLE ENTRY WILL BE ODD.  THE TOKEN VALUE OF THAT
     19					; CHARACTER IS CALCULATED BY SHIFTING THE TABLE ENTRY ONE PLACE
     20					; RIGHT.  IF THE TABLE ENTRY IS EVEN IT IS A NAME OF A ROUTINE TO
     21					; BRANCH TO TO DECIDE THE TOKEN TYPE.  THIS ROUTINE MAY SCAN FURTHER
     22					; AS IN THE CASE OF A SYMBOL, OR IT MAY SIMPLY LOOK AHEAD TO RESOLVE
     23					; AN AMBIGUITY.  IN ANY CASE, THE ROUTINE INVOLVED WILL RETURN THE
     24					; TOKEN CLASS IN R0, THE ASSOCIATED VALUE (IF ANY) IN VAL1/VAL2, AND
     25					; THE CHARACTER POINTER WILL BE UPDATED PAST THE TOKEN SCANNED.
     26					;
     27	000000				CHRTAB::
     28	000000	000000 				.WORD 0			; IGNORE NULL
     29		000010 				.REPT 8.
     30						.WORD CHRERR		; 0 - 10 ARE ILLEGAL CHARACTERS
     31						.ENDR
     32	000022	000000 				.WORD 0			; IGNORE TAB
     33	000024	000000 				.WORD 0			; IGNORE LINE FEED
     34	000026	000000G				.WORD CHRERR		; VERTICAL TAB IS ERROR
     35	000030	000000 				.WORD 0			; IGNORE FORM FEED
     36	000032	000027 				.WORD DEOL*2+1		; CR IS END OF LINE
     37		000022 				.REPT 18.
     38						.WORD CHRERR		; CONTROL N - CONTROL SHIFT O ARE ERRORS
     39						.ENDR
     40	000100	000000 				.WORD 0			; IGNORE SPACE
     41	000102	000075 				.WORD DOR*2+1		; !
     42	000104	000000G				.WORD CHRERR		; " IS AN ERROR
     43	000106	000000G				.WORD XPOUND		; #
     44	000110	000000G				.WORD SYMBOL		; $
     45	000112	000000G				.WORD CHRERR		; %
     46	000114	000073 				.WORD DAND*2+1		; &
     47	000116	000000G				.WORD CHRERR		; '
     48	000120	000057 				.WORD DOPN*2+1		; (
     49	000122	000061 				.WORD DCLS*2+1		; )
     50	000124	000067 				.WORD DTIMES*2+1	; *
     51	000126	000063 				.WORD DPLUS*2+1		; +
     52	000130	000037 				.WORD DCOMMA*2+1	; ,
     53	000132	000065 				.WORD DMINUS*2+1	; -
     54	000134	000000G				.WORD SYMBOL		; .
     55	000136	000071 				.WORD DDIV*2+1		; /
     56		000012 				.REPT 10.
     57						.WORD NUMBER		; DIGITS
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 7-1
CHARACTER TABLES

     58						.ENDR
     59	000164	000041 				.WORD DCOLON*2+1	; :
     60	000166	000000G				.WORD CHRERR		; ;
     61	000170	000053 				.WORD DANGOPN*2+1	; <
     62	000172	000043 				.WORD DEQ*2+1		; =
     63	000174	000055 				.WORD DANGCLS*2+1	; >
     64	000176	000000G				.WORD CHRERR		; ?
     65	000200	000101 				.WORD DAT*2+1		; @
     66		000006 				.REPT 6			; LETTERS A - F CAN START SYMBOL OR NUMBER
     67						.WORD SYMNUM		;
     68						.ENDR
     69	000216	000000G				.WORD XSYMBL		; LETTER G
     70	000220	000000G				.WORD SYMBOL		; LETTER H
     71	000222	000000G				.WORD XSYMBL		; LETTER I
     72	000224	000000G				.WORD SYMBOL		; LETTER J
     73	000226	000000G				.WORD SYMBOL		; LETTER K
     74	000230	000000G				.WORD XSYMBL		; LETTER L
     75		000006 				.REPT 6
     76						.WORD SYMBOL		; LETTERS M-R
     77						.ENDR
     78	000246	000000G				.WORD XSYMBL		; LETTER S
     79		000003 				.REPT 3
     80						.WORD SYMBOL		; LETTERS T-V
     81						.ENDR
     82	000256	000000G				.WORD XSYMBL		; LETTER W
     83		000003 				.REPT 3
     84						.WORD SYMBOL		; LETTER X-Z
     85						.ENDR
     86	000266	000047 				.WORD DSQOPN*2+1	; [
     87	000270	000077 				.WORD DXOR*2+1		; \
     88	000272	000051 				.WORD DSQCLS*2+1	; ]
     89	000274	000000G				.WORD XUPARROW		; ^
     90	000276	000000G				.WORD SYMBOL		; _
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 8
"XUPARROW" AND "XSYMBOL"  CHARACTERS

     92					.SBTTL	"XUPARROW" AND "XSYMBOL"  CHARACTERS
     93					;
     94					; THESE TABLES ARE USED TO SCAN RADIX CONTROL FUNCTIONS.
     95					; 'CTAB' POINTS TO A LIST OF CHARACTERS LEGAL AFTER AN "^", AND
     96					; 'RTAB' POINTS TO A CORRESPONDING LIST OF TOKEN TYPES.
     97					;
     98					; 'UPTAB' POINTS TO A LIST OF CHARACTERS LEGAL BEFORE AN "^", AND
     99					; 'UPTOK' POINTS TO THE CORRESPONDING LIST OF TOKEN TYPES.
    100					;
    101
    102	000300	   101 	   102 	   103 	CTAB::	.ASCIZ	/ABCDFMOX/			; ^'X' CHARACTERS
	000303	   104 	   106 	   115
	000306	   117 	   130 	   000
    103
    104	000311	   123 	   102 	   127 	UPTAB::	.ASCIZ	/SBWLIG/			; 'X'^ CHARACTERS
	000314	   114 	   111 	   107
	000317	   000
    105						.EVEN
    106	000320	000043 	000044 	000045 	RTAB::	.WORD	DUPA,DUPB,DUPC,DUPD,DUPF,DUPM,DUPO,DUPX
	000326	000046 	000050 	000051
	000334	000047 	000052
    107	000340	000057 	000053 	000060 	UPTOK::	.WORD	DSUP,DBUP,DWUP,DLUP,DIUP,DGUP
	000346	000056 	000055 	000054
    108
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 9
DATA DEFINITIONS

    110					.SBTTL	DATA DEFINITIONS
    111	000000				.PSECT	DATA,D,GBL
    112					;
    113					;
    114					; THIS SECTION DEFINES THE DATA USED BY THE MARS ASSEMBLER.  THE
    115					; $DEF MACRO EITHER DECLARES THE DATA NAME TO BE GLOBL, OR IT
    116					; ALLOCATES CORE FOR THE DATA, DEPENDING ON THE DEFINITION OF
    117					; THE SWITCH $DATA$.
    118					;
    119					; THE FORMAT IS:	$DEF	NAME, SIZE,	<VALUE>
    120					;
    121					; IF THE <VALUE> IS NOT INCLUDED, AN INITIAL VALUE OF ZERO IS
    122					; ASSUMED.  THE SIZE IS THE SIZE (IN BYTES) OF THE DATA.
    123					;
    124					;
    125					.MACRO	$DEF,	NAME,	SIZE,	VALUE
    126							.GLOBL	NAME
    127					.IF DF $DATA$
    128					    .IF EQ SIZE-1
    129						NAME:	.BYTE VALUE
    130					    .IFF
    131						.IF EQ SIZE-2
    132						NAME:	.WORD VALUE
    133						.IFF
    134						NAME:	.BLKB SIZE
    135						.ENDC
    136					    .ENDC
    137					.ENDC
    138					.ENDM	$DEF
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 10
DATA DEFINITIONS

    140	000000				$DEF	ABSEXPR,	2		; TRUE IS EXPRESSION IS ABSOLUTE
    141	000002				$DEF	ASCCNT,		2		; ASCII STRING CHARACTER COUNT
    142	000004				$DEF	ASNPTR,		2		; POINTER TO ASSIGNMENT ID
    143	000006				$DEF	BOL,		2		; SET TRUE IF OPCODE NOT YET FOUND
    144	000010				$DEF	CHAR,		2		; CURRENT INPUT CHARACTER
    145	000012				$DEF	CMDFLG,		2		; FLAGS OF SWITCHES SET IN COMMAND LINE
    146	000014				$DEF	CMLINE,		2		; POINTER TO COMMAND LINE DESCRIPTOR
    147	000016				$DEF	COMPEXPR,	2		; SET IF EXPRESSION IS/ISN'T COMPILE TIME EXPR
    148	000020				$DEF	CONTLN,		2		; SET FALSE TO PROHIBIT LINE CONTINUATION
    149	000022				$DEF	CORLST,		2		; FREE BLOCK POINTER
    150	000024				$DEF	CRSYM,		2		; CREATED SYMBOL NUMBER
    151	000026				$DEF	DATIPT,		2		; POINTER TO DATE/TIME
    152	000030				$DEF	DATPTR,		2		; POINTER TO DATA GENERATION ROUTINE
    153	000032				$DEF	DATRPT,		2		; SET TRUE IF REPEATING DATA DEF
    154	000034				$DEF	DCLTYP,		2		; TYPE OF CURRENT DECLARATION
    155	000036				$DEF	EMASK,		2		; ENTRY REGISTER MASK
    156	000040				$DEF	ENABLS,		2,	-1	; ENABLE OPTIONS LIST
    157	000042				$DEF	ENDMCH,		2		; FLAG SET TO CHECK MACRO DIRECTIVES
    158	000044				$DEF	ERRCT,		2		; COUNT OF ERRORS ENCOUNTERED
    159	000046				$DEF	ERRLST,		2		; LINKED LIST OF ERROR LINE #'S
    160	000050				$DEF	ERRPT,		2		; POINTER TO LAST TOKEN SCANNED
    161	000052				$DEF	ERRPTX,		2,	LINEBF	; POINTER TO CURRENT TOKEN SCANNED
    162	000054				$DEF	EVALEXPR,	2		; SET FALSE IF EXPRESSION NOT TO BE EVALUATED ON PASS 2
    163	000056				$DEF	EXPEND,		2		; END OF EXPRESSION POINTER
    164	000060				$DEF	EXPOP1,		2		; VALUE OF REF EXPRESSION (LSB)
    165	000062				$DEF	EXPOP2,		2		; VALUE OF REF EXPRESSION (MSB)
    166	000064				$DEF	EXPOPT,		2		; TRUE IF EXPRESSION CAN BE OPTIMIZED
    167	000066				$DEF	EXPPTR,		2		; POINTER TO EXPRESSION START IN INTERMEDIATE CODE
    168	000070				$DEF	FLTBEG,		0		; BEGINNING OF FLOATING VARS
    169	000070				$DEF	FLTSGN,		2		; SIGN BIT
    170	000072				$DEF	FLTDOT,		2		; DECIMAL POINT FLAG
    171	000074				$DEF	FLTEXP,		2		; DECIMAL EXPONENT
    172	000076				$DEF	FLTBEX,		2		; BINARY EXPONENT (MUST PRECEED FLTBUF!)
    173	000100				$DEF	FLTBUF,		8.		; MAIN AC
    174	000110				$DEF	FLTSAV,		8.		; TEMP STORAGE
    175	000120				$DEF	FLTWDC,		2,		; 1=SINGLE PRECISION, 2=DOUBLE
    176	000122				$DEF	FREEPT,		2,	FREEST	; POINTER TO FREE CORE
    177	000124				$DEF	FRIEND,		2,	FREEND	; POINTER TO END OF FREE CORE
    178	000126				$DEF	FRST,		2		; ALPHABETIZATION POINTER
    179	000130				$DEF	IDENTP,		2		; POINTER TO IDENT
    180	000132				$DEF	IFCNDN,		2,	-1	; POINTER TO IF CONDITION NAMES
    181	000134				$DEF	IFCNDP,		2		; POINTER TO IF CONDITION ROUTINE
    182	000136				$DEF	IFCNT,		2		; IF FALSE SCAN NESTING LEVEL
    183	000140				$DEF	IFLVL,		2		; IF CONDITION NESTING LEVEL
    184	000142				$DEF	IFPT1,		2		; TEMP POINTERS USED BY
    185	000144				$DEF	IFPT2,		2		; THE 'IF' ROUTINES
    186	000146				$DEF	IFSNAM,		2,	-1	; SPECIAL IF KEYWORD LIST
    187	000150				$DEF	IFSTAT,		2		; TRUE IF IF STATEMENT
    188	000152				$DEF	IFVAL,		2		; IF CONDITION STACK
    189	000154				$DEF	INPUTP,		2		; POINTER TO CURRENT INPUT BLOCK
    190	000156				$DEF	IMODE,		2		; SECONDARY MODE FOR OPERANDS
    191	000160				$DEF	INSERT,		2		; TRUE IF SYMBOL TO BE INSERTED IN SYMBOL TABLE
    192	000162				$DEF	IREG,		2		; SECONDARY REGISTER FOR OPERANDS
    193	000164				$DEF	IRPSTAT,	2		; TRUE IF IRP
    194	000166				$DEF	KEYMAC,		2		; POINTER TO KEYWORDS IF KEYWORD MACRO
    195	000170				$DEF	KEYPTR,		2		; POINTER TO KEYWORD SCANNED
    196	000172				$DEF	LCLIM,		2,	140	; LOWER LIMIT OF LOWER CASE CHARS
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 10-1
DATA DEFINITIONS

    197	000174				$DEF	LINBAS,		2		; BASE LINE NUMBER OF CURRENT FILE
    198	000176				$DEF	LINENM,		2		; SEQUENTIAL LINE NUMBER FOR ASSEMBLY
    199	000200				$DEF	LINELN,		2		; LENGTH OF CURRENT SOURCE LINE
    200	000202				$DEF	LINEPT,		2		; POINTER INTO LINEBF TO CHARACTER AFTER
    201										; "NEXTCH". (IE. 2 CHARACTERS AHEAD)
    202	000204				$DEF	LISTDR,		2,	-1	; POINTER TO LISTING DIRECTIVES
    203	000206				$DEF	LISTIT,		2		; SET TRUE TO LIST LINE
    204	000210				$DEF	LISTLV,		2		; LISTING LEVEL
    205	000212				$DEF	LPTCT,		2		; LISTING PAGE LINE COUNT
    206	000214				$DEF	LPTPAG,		2		; CURRENT PAGE NUMBER
    207	000216				$DEF	LSB,		2		; LOCAL SYMBOL BLOCK NUMBER
    208	000220				$DEF	LSTXST,		2		; TRUE IF LISTING FILE EXISTS
    209	000222				$DEF	NEWPND,		2		; SET TRUE IF NEW PAGE PENDING
    210	000224				$DEF	NTYPTR,		2		; POINTER TO .NTYPE ID
    211	000226				$DEF	MACL,		2		; SET TRUE IF MACRO TEXT LINE PRESENT
    212	000230				$DEF	MAXWTH,		2,	132.	; MAX LISTING LINE WIDTH
    213	000232				$DEF	MEBLST,		2		; SPECIAL LIST MEB FLAG, TO FORCE LISTING
    214	000234				$DEF	MCARGC,		2		; COUNT OF MACRO ARGUMENTS
    215	000236				$DEF	MCARGP,		2		; POINTER TO MACRO ARG NAME LIST
    216	000240				$DEF	MCASCI,		2,	-1	; FLAG FOR GETSYM TO GET ALL CHRS
    217	000242				$DEF	MCINP,		2		; POINTER TO START OF SYMBOL NAME
    218	000244				$DEF	MCINPE,		2		; POINTER TO END OF MACRO INPUT LINE
    219	000246				$DEF	MCLVL,		2		; MACRO DEFINITION LEVEL
    220	000250				$DEF	MCNAM,		2		; POINTER TO MACRO NAME BLOCK
    221	000252				$DEF	MCSPLP,		2,	SPLDIR	; SPECIAL MACRO DIRECTIVE NAMES
    222	000254				$DEF	MCTXT,		2		; POINTER TO MACRO TEXT START
    223	000256				$DEF	MCTXTL,		2		; POINTER TO START OF NEW MACRO LINE
    224	000260				$DEF	MCTXTP,		2		; MACRO TEXT OUTPUT POINTER
    225	000262				$DEF	MDLHD,		2		; POINTER TO MODULE HEAD NAME BLOCK
    226	000264				$DEF	MODE,		2		; PRIMARY MODE OF OPERAND
    227	000266				$DEF	MOPNUM,		2		; NUMBER OF OPERANDS IN INSTRUCTION
    228	000270				$DEF	MOPPTR,		2		; POINTER TO OPERAND DESCRIPTORS
    229	000272				$DEF	MORFIL,		2		; FALSE IF END OF FILES REACHED
    230	000274				$DEF	NEST,		2		; CURRENT BLOCK NESTING LEVEL
    231	000276				$DEF	NEXT,		2		; NEXT SYMBOL TO PARSE
    232	000300				$DEF	NEXTCH,		2		; NEXT AVAILABLE CHARACTER
    233	000302				$DEF	OBJBYT,		2		; BYTE TO OUTPUT TO OBJECT CODE
    234	000304				$DEF	OFREE,		2		; PREVIOUS VALUE OF 'FREE'
    235	000306				$DEF	OPRND,		2		; SET TRUE IF SCANNING OPERAND FIELD
    236	000310				$DEF	OPSIZE,		2		; NUMBER OF BYTES IN OPERAND
    237	000312				$DEF	OUTRET,		2		; TEMPORARY STORAGE FOR OUTFRAME ROUTINE
    238	000314				$DEF	P2,		2		; PASS 2 FLAG TRUE = PASS 2
    239	000316				$DEF	P2ERPT,		4		; POINTER TO PASS 2 ERROR
    240	000322				$DEF	P2LINE,		2		; PASS 2 SOURCE LINE NUMBER
    241	000324				$DEF	PACDAT,		32.		; TEMPORARY BUFFER FOR PACKED DECIMAL DATA
    242	000364				$DEF	PARSE,		2		; SET FALSE TO STOP PARSE
    243	000366				$DEF	PC1,		2		; LOCATION COUNTER (LSB)
    244	000370				$DEF	PC2,		2		; LOCATION COUNTER (MSB)
    245	000372				$DEF	PRMSEG,		2,		; SEGMENT OF EXPRESSION SYMBOL
    246	000374				$DEF	PSECTN,		2,	0	; POINTER TO PSECT NAME LIST
    247	000376				$DEF	PSECTO,		2,	-1	; POINTER TO PSECT OPTION LIST
    248	000400				$DEF	PSCTPOS,	2		; POSITIVE SENSE PSECT OPTIONS
    249	000402				$DEF	PSCTNEG,	2		; NEGATIVE SENSE PSECT OPTIONS
    250	000404				$DEF	PSECTP,		2		; POINTER TO CURRENT PSECT'S NAME
    251	000406				$DEF	PSTACK,		100.		; PARSE STACK
    252	000552				$DEF	PSTMAX,		2		; MAX PSECT NUMBER ALLOCATED
    253	000554				$DEF	PSTNUM,		2		; CURRENT PSECT NUMBER
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 10-2
DATA DEFINITIONS

    254	000556				$DEF	RDXPTR,		2,	DNUMBER	; INPUT RADIX ROUTINE POINTER
    255	000560				$DEF	RECTYP,		2		; CURRENT OBJECT CODE RECORD TYPE
    256	000562				$DEF	REFDFLT,	2,	2	; DEFAULT REFERENCE WIDTH
    257	000564				$DEF	REFSIZE,	2		; USER SUPPLIED WIDTH FOR REF
    258	000566				$DEF	REG,		2		; PRIMARY REGISTER OF OPERAND
    259	000570				$DEF	STATUS,		2,	-1	; ASSEMBLY STATUS SINCE VAX-11 MACRO WAS
    260										; LOADED. 0 => NO ERRORS, 1 => WARNINGS,
    261										; 2 OR 3 => ERRORS.
    262	000572				$DEF	STKSAV,		2		; HOLDS THE STACK POINTER FOR CRASHES
    263	000574				$DEF	STOIMF,		2		; TRUE IF STORING IMMEDIATE IN OBJ
    264	000576				$DEF	STOIMP,		2		; LOCATION OF DATA LENGTH IN OBJBUF
    265	000600				$DEF	SMBLEN,		2		; LENGTH IN BYTES OF SYMBOL TABLE ENTRIES
    266	000602				$DEF	SRCPAG,		2		; SOURCE PAGE NUMBER OF CURRENT FILE
    267	000604				$DEF	SYMLNK,		2		; POINTER TO LAST SYMBOL LINK
    268	000606				$DEF	TESTSIZE,	2		; USER SUPPLIED DATA TYPE FOR TEST
    269	000610				$DEF	TITLEP,		2		; POINTER TO TITLE NAME BLOCK
    270	000612				$DEF	TITTXT,		2		; LENGTH OF TITLE TEXT
    271	000614				$DEF	TRNSFR,		2		; TRANSFER ADDRESS POINTER
    272	000616				$DEF	TEMP0,		2		; TEMPORARY STORAGE 0
    273	000620				$DEF	TEMP1,		2		; TEMPORARY STORAGE 1
    274	000622				$DEF	TOCFLG,		2		; TBL OF CONT. FLAG, FALSE=> HDR NOT PRINTED
    275	000624				$DEF	V1STACK,	100.		; NUMERIC STACK (LSB)
    276	000770				$DEF	V2STACK,	100.		; NUMERIC STACK (MSB)
    277	001134				$DEF	V1NEXT,		2		; NEXT VALUE (LSB)
    278	001136				$DEF	V2NEXT,		2		; NEXT VALUE (MSB)
    279	001140				$DEF	VAL1,		2		; CURRENT VALUE <15 - 00>
    280	001142				$DEF	VAL2,		2		; CURRENT VALUE <31 - 16>
    281	001144				$DEF	VAL3,		2		; CURRENT VALUE <47 - 32>
    282	001146				$DEF	VAL4,		2		; CURRENT VALUE <63 - 48>
    283	001150				$DEF	WARNCT,		2		; WARNING COUNT
    284	001152				$DEF	WRNERR,		2		; PTR TO "WARNING" OR "ERROR"
    285	001154				$DEF	XPC1,		2		; OLD PC1
    286	001156				$DEF	XPC2,		2		; OLD PC2
    287
    288					.SBTTL	STORAGE FOR INITIAL BLOCK SIZE AND EXTENSION SIZE OF CREATED FILES
    289
    290	001160	177716 			INTCTG:: .WORD	-50.			; INITIAL SIZE OF INTERMEDIATE FILE
    291	001162	177747 			INTALO:: .WORD	-25.			; EXTENSION SIZE OF INTER. FILE
    292
    293	001164	177773 			OBJCTG:: .WORD	-5.			; INITIAL SIZE OF OBJECT FILE
    294	001166	177773 			OBJALO:: .WORD	-5.			; EXTENSION SIZE OF OBJECT FILE
    295
    296	001170	177747 			LSTCTG:: .WORD	-25.			; INITIAL SIZE OF LISTING FILE
    297	001172	177747 			LSTALO:: .WORD	-25.			; EXTENSION SIZE OF LISTING FILE
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 11
MACRO LIBRARY SEARCH VARIABLES

    299					.SBTTL	MACRO LIBRARY SEARCH VARIABLES
    300	001174				$DEF	BLKVBN,		2		; STARTING VIRTUAL BLOCK OF LIBRARY INDEX
    301	001176				$DEF	CURMLB,		2		; POINTER TO CURRENT MACRO LIBRARY FILE ID
    302	001200				$DEF	LASTML,		2		; POINTER TO LAST MACRO LIBRARY OPENED
    303	001202				$DEF	MLBBOT,		2		; ADDRESS OF LAST READ BUFFER
    304	001204				$DEF	MLBIND,		2		; POINTER TO TOP LEVEL INDEX BLOCK BUFFER
    305	001206				$DEF	MLBLEN,		2		; LENGTH OF LAST READ BUFFER
    306	001210				$DEF	MNCNT,		2		; NUMBER OF USED MACRO NAME TABLE ENTRIES
    307
    308					.GLOBL	GETLIB,GETMAC,GETINT,GETPSC,GETRES
    309	001212	000000 			GETLIB:	.WORD	0			; NUMBER OF LIB. HEADERS READ
    310	001214	000000 			GETMAC:	.WORD	0			; NUMBER OF READS TO DEFINE MACROS
    311	001216	000000 			GETINT:	.WORD	0			; NUMBER OF WRITES TO INTERMEDIATE FILE
    312	001220	000000 			GETPSC:	.WORD	0			; NUMBER OF PSECT DIRECTIVES ISSUED
    313	001222	000000 			GETRES:	.WORD	0			; NUMBER OF RESTORE DIRECTIVES ISSUED
    314
    315					.SBTTL	LISTING TITLE BUFFER
    316	001224	   014 			LPTHDR::.BYTE	FF			; FORM FEED CHARACTER
    317	001225				LPTHD1::.BLKB	16.			; 15 CHARS FOR PROGRAM TITLE + SPACE
    318	001245				LPTHD2::.BLKB	47.			; LIMIT OF 47 CHARS FOR REST OF TITLE
    319	001324					.BLKB	22.			; SPACE + DATE/TIME FIELD 21 CHARS
    320	001352				DATIME::
    321	001352					.BLKB	03			; 3 SPACES BETWEEN DATE & VERSION
    322	001355				LPTHD3::.BLKB	35.			; SPACE FOR VERSION STRING
    323	001420				LPTHD4::.BLKB	08.			; PAGE NUMBER FIELD
    324	001430				LPTHDX::				; END OF HEADER STRING
    325	001430	   024 			VRSION::.BYTE	20$-10$			; COUNT OF STRING
    326	001431	   126 	   101 	   130 	10$:	.ASCII	\VAX-11 MACRO X0.3-11\	; VERSION STRING
	001434	   055 	   061 	   061
	001437	   040 	   115 	   101
	001442	   103 	   122 	   117
	001445	   040 	   130 	   060
	001450	   056 	   063 	   055
	001453	   061 	   061
    327	001455				20$:
    328
    329
    330	001455	   006 			XTITLE::.BYTE	20$-10$			; LENGTH OF DEFAULT TITLE
    331	001456	   056 	   115 	   101 	10$:	.ASCII	\.MAIN.\		; DEFAULT MODULE NAME
	001461	   111 	   116 	   056
    332	001464				20$:
    333					.EVEN
    334
    335					.SBTTL	LISTING SUBTITLE BUFFER
    336	001464				SBTLB1::.BLKB	16.			; IDENT STRING BUFFER
    337	001504				SBTLB2::.BLKB	47.			; SBTTL STRING BUFFER
    338	001563					.BLKB	22.			; TIME DATE STRING FOR SRC FILE
    339	001611				SBTDAT::.BLKB	03			; 3 SPACES
    340	001614				SBTLB3::.BLKB	39.			; SOURCE FILE NAME BUFFER
    341	001663					.BLKB	05			; SOURCE PAGE BUFFER
    342	001670				SBTLBX::				; END OF SBTTL BUFFER
    343						.EVEN
    344	001670	000000 			SBTTLN::.WORD	0			; LENGTH OF SUBTITLE LINE
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 12
INTERMEDIATE CODE BUFFER

    346					.SBTTL	INTERMEDIATE CODE BUFFER
    347
    348	001672				$DEF	FRMBUF,		1436.		; INTERMEDIATE CODE BUFFER
    349	004526				$DEF	FRMWRN,		98.		; WARNING LIMIT
    350	004670				$DEF	FRMPTR,		2		; POINTER INTO FRMBUF
    351	004672				$DEF	FRMTOP,		2		; TOP OF INFO IN FRMBUF
    352
    353					.SBTTL	QIO PARAMETER BLOCK FOR INTERMEDIATE FILE I/O
    354	004674				INTQIO::QIOW$	IO.WVB,5,1,,INTRSB,,<FRMBUF,1536.,,1,0>
    355
    356	004724	000000 	000000 		INTRSB::.WORD	0,0			; INTERMEDIATE FILE I/O STATUS BLOCK
    357
    358					.SBTTL	LISTING / INPUT LINE BUFFER
    359	004730					.BLKB	2			; OVERFLOW BYTES FOR LISTING BUFFER
    360	004732				$DEF	LSTLND,		41.		; END OF LISTING LINE BUFFER
    361	005003				$DEF	LSTLCT,		7,		; SOURCE SEQUENCE NUMBER
    362	005012				$DEF	LSTLIN,		0,		; START OF LISTING LINE BUFFER (GOING BACKWARDS!)
    363	005012				$DEF	LINEBF,		400.		; SOURCE LINE INPUT BUFFER
    364	005632				$DEF	LINEBN,		0		; END OF LINE BUFFER
    365	005632				$DEF	LSTLPT,		2,	-1	; POINTER INTO LISTING LINE BUFFER (LSTLIN)
    366
    367					.SBTTL	MACRO TEXT LINE BUFFER
    368	005634				$DEF	MACLBF,		512.		; MACRO TEXT LINE BUFFER
    369	006634				$DEF	MACLGT,		2		; TRUE IF MACRO LINE IN LINE BUFFER
    370	006636				$DEF	MACLN,		2		; LENGTH OF MACRO TEXT LINE
    371
    372					.SBTTL	OBJECT CODE BUFFER
    373	006640				$DEF	OBJBUF,		475.		; OBJECT CODE BUFFER
    374	007573				$DEF	OBJWRN,		35.		; END OF BUFFER WARNING LIMIT
    375	007636				$DEF	OBJPTR,		2		; POINTER INTO OBJBUF
    376
    377					.SBTTL	SAVE / RESTORE PSECT CONTEXT BUFFER
    378	007640				$DEF	SAVBUF,		16		; PSECT SAVE/RESTORE BUFFER
    379	007656				$DEF	SAVBUN,		2		; END OF BUFFER MARKER
    380	007660				$DEF	SAVPTR,		2		; POINTER INTO SAVE BUFFER
    381
    382					.EVEN
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 17
OBJECT CODE DEFINITIONS

      1					;++
      2					;  TERMINAL SYMBOLS FOR MACRO-11/700 GRAMMER
      3					;--
      4		000001 			ERR01             ==	1.
      5		000002 			ERR02             ==	2.
      6		000003 			ERR03             ==	3.
      7		000004 			ERR04             ==	4.
      8		000005 			ERR05             ==	5.
      9		000006 			ERR06             ==	6.
     10		000007 			ERR07             ==	7.
     11		000010 			ERR08             ==	8.
     12		000011 			ERR09             ==	9.
     13		000012 			GOALSY            ==	10.
     14		000013 			DEOL              ==	11.
     15		000014 			ID                ==	12.
     16		000015 			MACTXT            ==	13.
     17		000016 			DOPCODE           ==	14.
     18		000017 			DCOMMA            ==	15.
     19		000020 			DCOLON            ==	16.
     20		000021 			DEQ               ==	17.
     21		000022 			DPC               ==	18.
     22		000023 			DSQOPN            ==	19.
     23		000024 			DSQCLS            ==	20.
     24		000025 			DANGOPN           ==	21.
     25		000026 			DANGCLS           ==	22.
     26		000027 			DOPN              ==	23.
     27		000030 			DCLS              ==	24.
     28		000031 			DPLUS             ==	25.
     29		000032 			DMINUS            ==	26.
     30		000033 			DTIMES            ==	27.
     31		000034 			DDIV              ==	28.
     32		000035 			DAND              ==	29.
     33		000036 			DOR               ==	30.
     34		000037 			DXOR              ==	31.
     35		000040 			DAT               ==	32.
     36		000041 			DPOUND            ==	33.
     37		000042 			DINTEGER          ==	34.
     38		000043 			DUPA              ==	35.
     39		000044 			DUPB              ==	36.
     40		000045 			DUPC              ==	37.
     41		000046 			DUPD              ==	38.
     42		000047 			DUPO              ==	39.
     43		000050 			DUPF              ==	40.
     44		000051 			DUPM              ==	41.
     45		000052 			DUPX              ==	42.
     46		000053 			DBUP              ==	43.
     47		000054 			DGUP              ==	44.
     48		000055 			DIUP              ==	45.
     49		000056 			DLUP              ==	46.
     50		000057 			DSUP              ==	47.
     51		000060 			DWUP              ==	48.
     52		000061 			RRREG             ==	49.
     53		000062 			DMASK             ==	50.
     54		000063 			KASCIC            ==	51.
     55		000064 			KASCII            ==	52.
     56		000065 			KASCIZ            ==	53.
     57		000066 			KPACKED           ==	54.
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 17-1
OBJECT CODE DEFINITIONS

     58		000067 			KADDRESS          ==	55.
     59		000070 			KBYTE             ==	56.
     60		000071 			KDOUBLE           ==	57.
     61		000072 			KFIELD            ==	58.
     62		000073 			KFLOAT            ==	59.
     63		000074 			KLONG             ==	60.
     64		000075 			KQUAD             ==	61.
     65		000076 			KWORD             ==	62.
     66		000077 			KBLKA             ==	63.
     67		000100 			KBLKB             ==	64.
     68		000101 			KBLKD             ==	65.
     69		000102 			KBLKF             ==	66.
     70		000103 			KBLKL             ==	67.
     71		000104 			KBLKQ             ==	68.
     72		000105 			KBLKW             ==	69.
     73		000106 			KIF               ==	70.
     74		000107 			KIIF              ==	71.
     75		000110 			KIFF              ==	72.
     76		000111 			KIFT              ==	73.
     77		000112 			KIFTF             ==	74.
     78		000113 			KIRP              ==	75.
     79		000114 			KIRPC             ==	76.
     80		000115 			KREPT             ==	77.
     81		000116 			KENDC             ==	78.
     82		000117 			KENDR             ==	79.
     83		000120 			KMACRO            ==	80.
     84		000121 			KMCALL            ==	81.
     85		000122 			KMEXIT            ==	82.
     86		000123 			KENDM             ==	83.
     87		000124 			KMDELETE          ==	84.
     88		000125 			KDEBUG            ==	85.
     89		000126 			KDSABL            ==	86.
     90		000127 			KENABL            ==	87.
     91		000130 			KENTRY            ==	88.
     92		000131 			KVECTOR           ==	89.
     93		000132 			KALIGN            ==	90.
     94		000133 			KEVEN             ==	91.
     95		000134 			KODD              ==	92.
     96		000135 			KEXTRN            ==	93.
     97		000136 			KGLOBL            ==	94.
     98		000137 			KINCLUDE          ==	95.
     99		000140 			KLIBRARY          ==	96.
    100		000141 			KLIST             ==	97.
    101		000142 			KNLIST            ==	98.
    102		000143 			KNARG             ==	99.
    103		000144 			KNCHR             ==	100.
    104		000145 			KPAGE             ==	101.
    105		000146 			KPSECT            ==	102.
    106		000147 			KRESTORE          ==	103.
    107		000150 			KSAVE             ==	104.
    108		000151 			KTITLE            ==	105.
    109		000152 			KIDENT            ==	106.
    110		000153 			KSBTTL            ==	107.
    111		000154 			KWEAK             ==	108.
    112		000155 			KREF1             ==	109.
    113		000156 			KREF2             ==	110.
    114		000157 			KREF4             ==	111.
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 17-2
OBJECT CODE DEFINITIONS

    115		000160 			KREF8             ==	112.
    116		000161 			KERROR            ==	113.
    117		000162 			KPRINT            ==	114.
    118		000163 			KWARN             ==	115.
    119		000164 			KNTYPE            ==	116.
    120		000165 			KOPDEF            ==	117.
    121		000166 			KEND              ==	118.
    122		000167 			KXFER		  ==	119.
    123
    124		000001 			.END
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 17-3
SYMBOL TABLE

ABSEXP  000000RG    003	DUPM  = 000051 G 	IFPT1   000142RG    003	I.STOL= 000051 G 	KNLIST= 000142 G
ASCCNT  000002RG    003	DUPO  = 000047 G 	IFPT2   000144RG    003	I.STRB= 000052 G 	KNTYPE= 000164 G
ASNPTR  000004RG    003	DUPX  = 000052 G 	IFSNAM  000146RG    003	I.STRL= 000054 G 	KODD  = 000134 G
BLKVBN  001174RG    003	DWUP  = 000060 G 	IFSTAT  000150RG    003	I.STRW= 000053 G 	KOPDEF= 000165 G
BLNK  = 000040   	DXOR  = 000037 G 	IFVAL   000152RG    003	I.STSB= 000055 G 	KPACKE= 000066 G
BOL     000006RG    003	EMASK   000036RG    003	IMODE   000156RG    003	I.STSW= 000056 G 	KPAGE = 000145 G
CHAR    000010RG    003	ENABLS  000040RG    003	INPUTP  000154RG    003	I.SUB = 000057 G 	KPRINT= 000162 G
CHRERR= ****** GX	ENDMCH  000042RG    003	INSERT  000160RG    003	I.WRN = 000060 G 	KPSECT= 000146 G
CHRTAB  000000RG    002	ERRCT   000044RG    003	INTALO  001162RG    003	I.XOR = 000061 G 	KQUAD = 000075 G
CMDFLG  000012RG    003	ERRLST  000046RG    003	INTCTG  001160RG    003	KADDRE= 000067 G 	KREF1 = 000155 G
CMLINE  000014RG    003	ERRPT   000050RG    003	INTQIO  004674RG    003	KALIGN= 000132 G 	KREF2 = 000156 G
COMMA = 000054   	ERRPTX  000052RG    003	INTRSB  004724RG    003	KASCIC= 000063 G 	KREF4 = 000157 G
COMPEX  000016RG    003	ERR01 = 000001 G 	IO.WVB= ****** GX	KASCII= 000064 G 	KREF8 = 000160 G
CONTLN  000020RG    003	ERR02 = 000002 G 	IREG    000162RG    003	KASCIZ= 000065 G 	KREPT = 000115 G
CORLST  000022RG    003	ERR03 = 000003 G 	IRPSTA  000164RG    003	KBLKA = 000077 G 	KRESTO= 000147 G
CR    = 000015   	ERR04 = 000004 G 	I.ADD = 000001 G 	KBLKB = 000100 G 	KSAVE = 000150 G
CRSYM   000024RG    003	ERR05 = 000005 G 	I.AND = 000002 G 	KBLKD = 000101 G 	KSBTTL= 000153 G
CTAB    000300RG    002	ERR06 = 000006 G 	I.ASH = 000003 G 	KBLKF = 000102 G 	KTITLE= 000151 G
CURMLB  001176RG    003	ERR07 = 000007 G 	I.ASN = 000004 G 	KBLKL = 000103 G 	KVECTO= 000131 G
DAND  = 000035 G 	ERR08 = 000010 G 	I.AUGP= 000005 G 	KBLKQ = 000104 G 	KWARN = 000163 G
DANGCL= 000026 G 	ERR09 = 000011 G 	I.BDST= 000006 G 	KBLKW = 000105 G 	KWEAK = 000154 G
DANGOP= 000025 G 	EVALEX  000054RG    003	I.CHKL= 000007 G 	KBYTE = 000070 G 	KWORD = 000076 G
DAT   = 000040 G 	EXPEND  000056RG    003	I.DIV = 000010 G 	KDEBUG= 000125 G 	KXFER = 000167 G
DATIME  001352RG    003	EXPOPT  000064RG    003	I.END = 000011 G 	KDOUBL= 000071 G 	LASTML  001200RG    003
DATIPT  000026RG    003	EXPOP1  000060RG    003	I.EPT = 000012 G 	KDSABL= 000126 G 	LCLIM   000172RG    003
DATPTR  000030RG    003	EXPOP2  000062RG    003	I.ERR = 000013 G 	KENABL= 000127 G 	LF    = 000012
DATRPT  000032RG    003	EXPPTR  000066RG    003	I.FLAG= 000014 G 	KEND  = 000166 G 	LFTANG= 000074
DBUP  = 000053 G 	FF    = 000014   	I.FNEW= 000015 G 	KENDC = 000116 G 	LINBAS  000174RG    003
DCLS  = 000030 G 	FLTBEG  000070RG    003	I.ILG = 000000 G 	KENDM = 000123 G 	LINEBF  005012RG    003
DCLTYP  000034RG    003	FLTBEX  000076RG    003	I.LGLA= 000016 G 	KENDR = 000117 G 	LINEBN  005632RG    003
DCOLON= 000020 G 	FLTBUF  000100RG    003	I.MACL= 000017 G 	KENTRY= 000130 G 	LINELN  000200RG    003
DCOMMA= 000017 G 	FLTDOT  000072RG    003	I.MUL = 000020 G 	KERROR= 000161 G 	LINENM  000176RG    003
DDIV  = 000034 G 	FLTEXP  000074RG    003	I.NEG = 000021 G 	KEVEN = 000133 G 	LINEPT  000202RG    003
DEOL  = 000013 G 	FLTSAV  000110RG    003	I.NEWL= 000022 G 	KEXTRN= 000135 G 	LISTDR  000204RG    003
DEQ   = 000021 G 	FLTSGN  000070RG    003	I.NEWP= 000023 G 	KEYMAC  000166RG    003	LISTIT  000206RG    003
DGUP  = 000054 G 	FLTWDC  000120RG    003	I.NOT = 000024 G 	KEYPTR  000170RG    003	LISTLV  000210RG    003
DINTEG= 000042 G 	FREEND= ****** GX	I.OP  = 000025 G 	KFIELD= 000072 G 	LOWCAS= 000140
DIUP  = 000055 G 	FREEPT  000122RG    003	I.OR  = 000026 G 	KFLOAT= 000073 G 	LPTCT   000212RG    003
DLUP  = 000056 G 	FREEST= ****** GX	I.PRIL= 000027 G 	KGLOBL= 000136 G 	LPTHDR  001224RG    003
DMASK = 000062 G 	FRIEND  000124RG    003	I.PRT = 000030 G 	KIDENT= 000152 G 	LPTHDX  001430RG    003
DMINUS= 000032 G 	FRMBUF  001672RG    003	I.PSEC= 000031 G 	KIF   = 000106 G 	LPTHD1  001225RG    003
DNUMBE= ****** GX	FRMPTR  004670RG    003	I.RDEF= 000062 G 	KIFF  = 000110 G 	LPTHD2  001245RG    003
DOPCOD= 000016 G 	FRMTOP  004672RG    003	I.REF = 000032 G 	KIFT  = 000111 G 	LPTHD3  001355RG    003
DOPN  = 000027 G 	FRMWRN  004526RG    003	I.REST= 000033 G 	KIFTF = 000112 G 	LPTHD4  001420RG    003
DOR   = 000036 G 	FRST    000126RG    003	I.SAME= 000034 G 	KIIF  = 000107 G 	LPTLEN= 000074
DPC   = 000022 G 	GETINT  001216RG    003	I.SAVE= 000035 G 	KINCLU= 000137 G 	LPTPAG  000214RG    003
DPLUS = 000031 G 	GETLIB  001212RG    003	I.SBTT= 000036 G 	KIRP  = 000113 G 	LSB     000216RG    003
DPOUND= 000041 G 	GETMAC  001214RG    003	I.SPIC= 000037 G 	KIRPC = 000114 G 	LSTALO  001172RG    003
DSQCLS= 000024 G 	GETPSC  001220RG    003	I.SPID= 000040 G 	KLIBRA= 000140 G 	LSTCTG  001170RG    003
DSQOPN= 000023 G 	GETRES  001222RG    003	I.STIB= 000041 G 	KLIST = 000141 G 	LSTLCT  005003RG    003
DSUP  = 000057 G 	GOALSY= 000012 G 	I.STIL= 000043 G 	KLONG = 000074 G 	LSTLIN  005012RG    003
DTIMES= 000033 G 	ID    = 000014 G 	I.STIW= 000042 G 	KMACRO= 000120 G 	LSTLND  004732RG    003
DUPA  = 000043 G 	IDENTP  000130RG    003	I.STKE= 000044 G 	KMCALL= 000121 G 	LSTLPT  005632RG    003
DUPB  = 000044 G 	IFCNDN  000132RG    003	I.STKG= 000045 G 	KMDELE= 000124 G 	LSTXST  000220RG    003
DUPC  = 000045 G 	IFCNDP  000134RG    003	I.STKL= 000046 G 	KMEXIT= 000122 G 	MACL    000226RG    003
DUPD  = 000046 G 	IFCNT   000136RG    003	I.STKP= 000047 G 	KNARG = 000143 G 	MACLBF  005634RG    003
DUPF  = 000050 G 	IFLVL   000140RG    003	I.STKS= 000050 G 	KNCHR = 000144 G 	MACLGT  006634RG    003
DATA	MACRO M1110  21-AUG-78 21:43  PAGE 17-4
SYMBOL TABLE

MACLN   006636RG    003	M.NXTL= 000002   	PSTACK  000406RG    003	SMBLEN  000600RG    003	TAB   = 000011
MACTXT= 000015 G 	NEST    000274RG    003	PSTMAX  000552RG    003	SPACE = 000040   	TEMP0   000616RG    003
MAXWTH  000230RG    003	NEWPND  000222RG    003	PSTNUM  000554RG    003	SPLDIR= ****** GX	TEMP1   000620RG    003
MCARGC  000234RG    003	NEXT    000276RG    003	P2      000314RG    003	SRCPAG  000602RG    003	TESTSI  000606RG    003
MCARGP  000236RG    003	NEXTCH  000300RG    003	P2ERPT  000316RG    003	STATUS  000570RG    003	TITLEP  000610RG    003
MCASCI  000240RG    003	NTYPTR  000224RG    003	P2LINE  000322RG    003	STKSAV  000572RG    003	TITTXT  000612RG    003
MCINP   000242RG    003	NUMBER= ****** GX	Q.IOAE= 000012   	STOIMF  000574RG    003	TOCFLG  000622RG    003
MCINPE  000244RG    003	OBJALO  001166RG    003	Q.IOEF= 000006   	STOIMP  000576RG    003	TRNSFR  000614RG    003
MCLVL   000246RG    003	OBJBUF  006640RG    003	Q.IOFN= 000002   	SYMBOL= ****** GX	UPTAB   000311RG    002
MCNAM   000250RG    003	OBJBYT  000302RG    003	Q.IOLU= 000004   	SYMCHR= 000012   	UPTOK   000340RG    002
MCSPLP  000252RG    003	OBJCTG  001164RG    003	Q.IOPL= 000014   	SYMFLA= 000002   	VAL1    001140RG    003
MCTXT   000254RG    003	OBJPTR  007636RG    003	Q.IOPR= 000007   	SYMLEN= 000011   	VAL2    001142RG    003
MCTXTL  000256RG    003	OBJWRN  007573RG    003	Q.IOSB= 000010   	SYMLIN= 000000   	VAL3    001144RG    003
MCTXTP  000260RG    003	OFREE   000304RG    003	RDXPTR  000556RG    003	SYMLNK  000604RG    003	VAL4    001146RG    003
MDLHD   000262RG    003	OPRND   000306RG    003	RECTYP  000560RG    003	SYMMAX= 000017   	VRSION  001430RG    003
MEBLST  000232RG    003	OPSIZE  000310RG    003	REFDFL  000562RG    003	SYMNUM= ****** GX	V1NEXT  001134RG    003
MLBBOT  001202RG    003	OUTRET  000312RG    003	REFSIZ  000564RG    003	SYMSEG= 000010   	V1STAC  000624RG    003
MLBIND  001204RG    003	PACDAT  000324RG    003	REG     000566RG    003	SYMVL1= 000004   	V2NEXT  001136RG    003
MLBLEN  001206RG    003	PARSE   000364RG    003	RGTANG= 000076   	SYMVL2= 000006   	V2STAC  000770RG    003
MNCNT   001210RG    003	PC1     000366RG    003	RRREG = 000061 G 	S.ABS = 004000   	WARNCT  001150RG    003
MODE    000264RG    003	PC2     000370RG    003	RTAB    000320RG    002	S.ASN = 000200   	WRNERR  001152RG    003
MOPNUM  000266RG    003	PRMSEG  000372RG    003	SAVBUF  007640RG    003	S.DBG = 002000   	XPC1    001154RG    003
MOPPTR  000270RG    003	PSCTNE  000402RG    003	SAVBUN  007656RG    003	S.DF  = 100000   	XPC2    001156RG    003
MORFIL  000272RG    003	PSCTPO  000400RG    003	SAVPTR  007660RG    003	S.EPT = 000100   	XPOUND= ****** GX
M.ARGC= 000014   	PSECCH= 000020   	SBTDAT  001611RG    003	S.EXTN= 010000   	XSYMBL= ****** GX
M.ARGS= 000016   	PSECOP= 000016   	SBTLBX  001670RG    003	S.GLOB= 020000   	XTITLE  001455RG    003
M.END = 000012   	PSECTN  000374RG    003	SBTLB1  001464RG    003	S.LOCL= 001000   	XUPARR= ****** GX
M.GETL= 000004   	PSECTO  000376RG    003	SBTLB2  001504RG    003	S.ODBG= 000040   	$COUNT= 000063
M.IFLV= 000006   	PSECTP  000404RG    003	SBTLB3  001614RG    003	S.REF = 000400   	$DATA$= 000001
M.IFVL= 000010   	PSECV1= 000012   	SBTTLN  001670RG    003	S.TKMS= 000377   	$$$ARG= 000005
M.LINK= 000000   	PSECV2= 000014   	SEMI  = 000073   	S.WEAK= 040000   	$$$OST= 000014

. ABS.	000000	   000
      	000000	   001
CHTAB 	000354	   002
DATA  	007662	   003
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  4120 WORDS  ( 17 PAGES)
DYNAMIC MEMORY:  4884 WORDS  ( 18 PAGES)
ELAPSED TIME:  00:00:42
OBJ$:DATA,LIS$:DATA/-SP=SRC$:COMMON,DATA,INTER,TERM
