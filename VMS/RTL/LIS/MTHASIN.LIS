MTH$ASIN        ; Floating Point Arcsine routine                 21-AUG-1978 19:01:53   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      91  HISTORY	; Detailed Current Edit History
   (3)     103  DECLARATIONS	; Declarative Part of Module
   (4)     132  MTH$ASIN  - Standard Single Precision Floating 
   (5)     192  MTH$ASIN_R5 - Special ASIN routine
MTH$ASIN        ; Floating Point Arcsine routine                 21-AUG-1978 19:01:53   VAX-11 MACRO X0.3-11               Page   1
0-3                                                                                                                              (1)

                                     0000     1 	.TITLE	MTH$ASIN 	; Floating Point Arcsine routine
                                     0000     2 				; (ASIN)
                                     0000     3 	.IDENT /0-3/		; File: MTHASIN.MAR
                                     0000     4 ;
                                     0000     5 ; Copyright (C) 1977
                                     0000     6 ; Digital Equipment Corporation, Maynard, Massachusetts 01754
                                     0000     7 ;
                                     0000     8 ; This  software  is furnished under a license for use only on a single
                                     0000     9 ; computer  system  and  may  be  copied only with the inclusion of the
                                     0000    10 ; above copyright notice.  This software, or  any other copies thereof,
                                     0000    11 ; may not  be  provided or otherwise made available to any other person
                                     0000    12 ; except  for  use on such system and to one who agree to these license 
                                     0000    13 ; terms.  Title  to  and  ownership of the software shall  at all times 
                                     0000    14 ; remain in DEC.
                                     0000    15 ;
                                     0000    16 ; The information  in  the software is subject to change without notice
                                     0000    17 ; and should  not  be  construed  as  a commitment by Digital Equipment 
                                     0000    18 ; Corporation.
                                     0000    19 ;
                                     0000    20 ; DEC assumes  no  responsibility  for  the use  or  reliability of its
                                     0000    21 ; software on equipment which is not supplied by DEC.
                                     0000    22 ;
                                     0000    23 ;
                                     0000    24 ; FACILITY: MATH LIBRARY
                                     0000    25 ;++
                                     0000    26 ; ABSTRACT:
                                     0000    27 ;
                                     0000    28 ; MTH$ASIN is a function  which  returns the floating point arcsine
                                     0000    29 ; of its single precision floating point argument. The call is standard
                                     0000    30 ; call-by-reference.
                                     0000    31 ;
                                     0000    32 ;--
                                     0000    33 ;
                                     0000    34 ; VERSION: 01
                                     0000    35 ;
                                     0000    36 ; HISTORY:
                                     0000    37 ; AUTHOR:
                                     0000    38 ;	Peter Yuo, 29-Jun-77: Version 01
                                     0000    39 ;
                                     0000    40 ; MODIFIED BY:
                                     0000    41 ;
                                     0000    42 ;
                                     0000    43 ;
MTH$ASIN        ; Floating Point Arcsine routine                 21-AUG-1978 19:01:53   VAX-11 MACRO X0.3-11               Page   2
0-3             HISTORY ; Detailed Current Edit History                                                                          (2)

                                     0000    45 	.SBTTL	HISTORY	; Detailed Current Edit History
                                     0000    46 
                                     0000    47 
                                     0000    48 ; ALGORITHMIC DIFFERENCES FROM FP-11/C ROUTINE:	none
                                     0000    49 ;
                                     0000    50 ; Edit History for Version 01 of MTH$ASIN 
                                     0000    51 ;
                                     0000    52 ; 0-2	MTH$$ERROR changed to MTH$$SIGNAL.
                                     0000    53 ;	MTH$_... changed to MTH__....
                                     0000    54 ;	Changed error handling mechanism. Put error result in R0 before 
                                     0000    55 ;	calling MTH$$SIGNAL in order to allow user modify error result.
MTH$ASIN        ; Floating Point Arcsine routine                 21-AUG-1978 19:01:53   VAX-11 MACRO X0.3-11               Page   3
0-3             DECLARATIONS ; Declarative Part of Module                                                                        (3)

                                     0000    57 	.SBTTL	DECLARATIONS	; Declarative Part of Module
                                     0000    58 
                                     0000    59 ;
                                     0000    60 ; INCLUDE FILES:	OTSPARAMS.MAR
                                     0000    61 ;
                                     0000    62 ; EXTERNAL SYMBOLS:	MTH$JACKET_HDLR
                                     0000    63 ;
                                     0000    64 ; EQUATED SYMBOLS:
                                     0000    65 
                           00004080  0000    66 	SF_1.0	= ^F1.0			; 1.0
                           0FDB40C9  0000    67 	LF_PI_OV_2	= ^O007733@16 + ^O040311
                                     0000    68 					; PI/2
                           00000004  0000    69 	value	= 4			; value.rf.r
                                     0000    70 
                                     0000    71 ;
                                     0000    72 ; MACROS:	none
                                     0000    73 ;
                                     0000    74 ; PSECT DECLARATIONS:
                                     0000    75 
                                 00000000    76 	.PSECT	MTH$CODE	PIC,SHR,LONG,EXE,NOWRT
                                     0000    77 					; program section for math routines
                                     0000    78 ;
                                     0000    79 ; OWN STORAGE:	none
                                     0000    80 ;
                                     0000    81 ;
                                     0000    82 ; CONSTANTS:
                                     0000    83 ;
                                     0000    84 
MTH$ASIN        ; Floating Point Arcsine routine                 21-AUG-1978 19:01:53   VAX-11 MACRO X0.3-11               Page   4
0-3             MTH$ASIN  - Standard Single Precision Floating                                                                   (4)

                                     0000    86 	.SBTTL	MTH$ASIN  - Standard Single Precision Floating ASIN
                                     0000    87 
                                     0000    88 
                                     0000    89 ;++
                                     0000    90 ; FUNCTIONAL DESCRIPTION:
                                     0000    91 ;
                                     0000    92 ; ASIN  - single precision floating point function
                                     0000    93 ;
                                     0000    94 ; ASIN(X) is computed as:
                                     0000    95 ;
                                     0000    96 ;	If X = 0, then ASIN(X) = 0.
                                     0000    97 ;	If X = 1, then ASIN(X) = PI/2.
                                     0000    98 ;	If X = -1, then ASIN(X) = -PI/2.
                                     0000    99 ;	If 0 < |X| < 1, then ASIN(X) = ATAN(X/SQRT(1-X**2)).
                                     0000   100 ;	If 1 < |X|, error.
                                     0000   101 ;
                                     0000   102 ; CALLING SEQUENCE:
                                     0000   103 ;
                                     0000   104 ;	ASIN.wf.v = MTH$ASIN(x.rf.r)
                                     0000   105 ;
                                     0000   106 ; INPUT PARAMETERS:
                                     0000   107 
                           00000004  0000   108 	LONG = 4			; define longword multiplier
                           00000004  0000   109 	x = 1 * LONG			; Contents of x is the argument
                                     0000   110 
                                     0000   111 ; IMPLICIT INPUTS:	none
                                     0000   112 ;
                                     0000   113 ; OUTPUT PARAMETERS:
                                     0000   114 ;
                                     0000   115 ;	VALUE:	floating arcsine of the argument
                                     0000   116 ;
                                     0000   117 ; IMPLICIT OUTPUTS:	none
                                     0000   118 ;
                                     0000   119 ; COMPLETION CODES:	none
                                     0000   120 ;
                                     0000   121 ; SIDE EFFECTS:
                                     0000   122 ;
                                     0000   123 ; Signals: MTH$_INVARG if |X| > 1 with reserved operand in R0 (copied to
                                     0000   124 ; the signal mechanism vector CHF$L_MCH_R0/R1 by LIB$SIGNAL).
                                     0000   125 ; Associated message is: "INVALID ARGUMENT". Result is reserved
                                     0000   126 ; operand -0.0 unless a user supplied (or any) error handler changes CHF$L_MCH_R0/R1
                                     0000   127 ;
                                     0000   128 ; NOTE: This procedure disables floating point underflow, enables integer
                                     0000   129 ; overflow.
                                     0000   130 ;
                                     0000   131 ;---
                                     0000   132 
                                     0000   133 
                               403C' 0000   134 	.ENTRY	MTH$ASIN, ^M<IV, R2, R3, R4, R5>
                                     0002   135 					; standard call-by-reference entry
                                     0002   136 					; disable DV (and FU), enable IV
                                     0002   137 	MTH$FLAG_JACKET			; flag that this is a jacket procedure in
                                     0002      
            6D       0000'CF     3E  0002       	MOVAW	W^MTH$$JACKET_HND, (FP)
                                     0007       					; set handler address to jacket
                                     0007       					; handler
                                     0007       
MTH$ASIN        ; Floating Point Arcsine routine                 21-AUG-1978 19:01:53   VAX-11 MACRO X0.3-11               Page   5
0-3             MTH$ASIN  - Standard Single Precision Floating                                                                   (4)

                                     0007   138 					; case of an error in routine
                                     0007   139 					; If an error, convert signal to user PC
                                     0007   140 					; and resignal
            50         04 BC     50  0007   141 	MOVF	@value(AP), R0		; R0 = |X| = @value(AP)
                          01     10  000B   142 	BSBB	MTH$ASIN_R5		; call special ASIN routine
                                 04  000D   143 	RET				; return with result in R0
                                     000E   144 
MTH$ASIN        ; Floating Point Arcsine routine                 21-AUG-1978 19:01:53   VAX-11 MACRO X0.3-11               Page   6
0-3             MTH$ASIN_R5 - Special ASIN routine                                                                               (5)

                                     000E   146 	.SBTTL	MTH$ASIN_R5 - Special ASIN routine
                                     000E   147 
                                     000E   148 ; Special ASIN - used by the stnadard routine, direct JSB call.
                                     000E   149 ;
                                     000E   150 ; CALLING SEQUENCE:
                                     000E   151 ;	save anything needed in R0:R5
                                     000E   152 ;	MOVF	..., R0			; input in R0
                                     000E   153 ;	JSB	MTH$ASIN_R5
                                     000E   154 ;	RSB				; return with result in R0
                                     000E   155 ;
                                     000E   156 
                                     000E   157 MTH$ASIN_R5::				; special ASIN routine
            55            50     50  000E   158 	MOVF	R0, R5			; save X in R5
            50       8000 8F     AA  0011   159 	BICW	#^X8000, R0		; R0 = |X|
                          50     53  0016   160 	TSTF	R0			; test if |X| > 0
                          01     14  0018   161 	BGTR	TEST_FOR_1.0		; branch if |X| > 0
                                     001A   162 
                                     001A   163 ;
                                     001A   164 ; X = 0
                                     001A   165 ;
                                     001A   166 
                                 05  001A   167 	RSB				; return 0 if |X| = 0
                                     001B   168 
                                     001B   169 ;
                                     001B   170 ; 0 < |X|
                                     001B   171 ;
                                     001B   172 
                                     001B   173 TEST_FOR_1.0:
            08            50     51  001B   174 	CMPF	R0, S^#SF_1.0		; compare |X| with 1.0
                          19     18  001E   175 	BGEQ	GEQ_TO_1.0		; branch if |X| >= 1.0
                                     0020   176 
                                     0020   177 ;
                                     0020   178 ; 0 < |X| < 1.0
                                     0020   179 ;
                                     0020   180 
            55            55     45  0020   181 	MULF3	R5, R5, R0		; R0 = X**2
                          50         0023       
            08            50     43  0024   182 	SUBF3	R0, S^#SF_1.0, R0	; R0 = 1.0 - X**2
                          50         0027       
                 00000000'EF     16  0028   183 	JSB	MTH$SQRT_R2		; R0 = SQRT(1-X**2)
            55            50     47  002E   184 	DIVF3	R0, R5, R0		; R0 = X/SQRT(1-X**2)
                          50         0031       
                 00000000'EF     16  0032   185 	JSB	MTH$ATAN_R4		; R0 = ATAN(X/SQRT(1-X**2))
                                 05  0038   186 	RSB				; return with result in R0
                                     0039   187 
                                     0039   188 
                                     0039   189 ;
                                     0039   190 ; 1 =< |X| 
                                     0039   191 ;
                                     0039   192 
                                     0039   193 GEQ_TO_1.0:
                          0F     14  0039   194 	BGTR	ERROR			; branch to ERROR if |X| > 1.0
                                     003B   195 
                                     003B   196 
                                     003B   197 ;
                                     003B   198 ; |X| = 1.0
                                     003B   199 ;
MTH$ASIN        ; Floating Point Arcsine routine                 21-AUG-1978 19:01:53   VAX-11 MACRO X0.3-11               Page   7
0-3             MTH$ASIN_R5 - Special ASIN routine                                                                               (5)

                                     003B   200 
            50   0FDB40C9 8F     50  003B   201 	MOVF	#LF_PI_OV_2, R0		; R0 = PI/2
                          55     53  0042   202 	TSTF	R5			; test the sign of X
                          03     18  0044   203 	BGEQ	10$			; branch if X > 0
            50            50     52  0046   204 	MNEGF	R0, R0			; R0 = -PI/2
                                 05  0049   205 10$:	RSB				; return with result in R0
                                     004A   206 
                                     004A   207 ;
                                     004A   208 ; 1 < |X|, error
                                     004A   209 ;
                                     004A   210 
                          6E     DD  004A   211 ERROR:	PUSHL	(SP)			; return PC from JSB routine
            7E         51 8F     9A  004C   212 	MOVZBL	#MTH__INVARG, -(SP)	; condition value
            01            0F     78  0050   213 	ASHL	#15, #1, R0		; R0 = result = reserved operand -0.0
                          50         0053       
                                     0054   214 					; goes to signal mechanism vector
                                     0054   215 					; (CHF$L_MCH_R0/R1) so error handler
                                     0054   216 					; can modify the result.
       0000'CF            02     FB  0054   217 	CALLS	#2, W^MTH$$SIGNAL	; signal error and use real user's PC
                                     0059   218 					; independent of CALL vs JSB
                                 05  0059   219 	RSB				; return - R0 restored from CHF$L_MCH_R0/R1
                                     005A   220 
                                     005A   221 
                                     005A   222 
                                     005A   223 
                                     005A   224 	.END
MTH$ASIN        ; Floating Point Arcsine routine                 21-AUG-1978 19:01:53   VAX-11 MACRO X0.3-11               Page   8
SYMBOL TABLE                                                                                                                     (5)

ERROR            0000004A R     02   
FOR$K_ERR_PREFX= 00000018            
GEQ_TO_1.0       00000039 R     02   
LF_PI_OV_2     = 0FDB40C9            
LONG           = 00000004            
MTH$$JACKET_HND  ********   X   02   
MTH$$SIGNAL      ********   X   02   
MTH$ASIN         00000000 RG    02   
MTH$ASIN_R5      0000000E RG    02   
MTH$ATAN_R4      ********   X   02   
MTH$K_ERR_PREFX= 00000016            
MTH$SQRT_R2      ********   X   02   
MTH__FLOOVEMAT = 00000058            
MTH__FLOUNDMAT = 00000059            
MTH__INVARG    = 00000051            
MTH__LOGZERNEG = 00000053            
MTH__SINSIGLOS = 00000057            
MTH__SQUROONEG = 00000054            
MTH__UNDEXP    = 00000052            
MTH__WRONUMARG = 00000050            
SF_1.0         = 00004080            
TEST_FOR_1.0     0000001B R     02   
VALUE          = 00000004            
X              = 00000004            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
MTH$CODE         0000005A      02       PIC   USR   CON   REL   LCL   SHR   EXE   RD  NOWRT LONG  


THERE WERE NO ERRORS OR WARNINGS.
27802. BYTES LEFT IN FREE MEMORY POOL.
OBJ$:MTHASIN,LIS$:MTHASIN/-SP=LIB$:S/ML,SRC$:P,MTHASIN
0 MLB DIR RDS - 0 GETS TO DEFINE 0 MACROS. 2 INTER. FILE WRITES. 
