COM$$R50WD      ; FORTRAN COMPATIBILITY - ASCII TO RADIX-50 CON  21-AUG-1978 18:53:41   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      91  HISTORY		; Detailed Current Edit History
   (3)     106  DECLARATIONS
   (4)     134  COM$$R50WD_R6 - CONVERT 3 ASCII CHARS INTO ONE 
COM$$R50WD      ; FORTRAN COMPATIBILITY - ASCII TO RADIX-50 CON  21-AUG-1978 18:53:41   VAX-11 MACRO X0.3-11               Page   1
1-1                                                                                                                              (1)

                                     0000     1 	.TITLE	COM$$R50WD	; FORTRAN COMPATIBILITY - ASCII TO RADIX-50 CONVERSION ROUTINE
                                     0000     2 	.IDENT	/1-1/		; File: COMR50WD.MAR
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; Copyright (C) 1977
                                     0000     6 ; Digital Equipment Corporation, Maynard, Massachusetts 01754
                                     0000     7 ;
                                     0000     8 ; This software is furnished under a license for use only on a single
                                     0000     9 ; computer  system  and  may be copied only with the inclusion of the
                                     0000    10 ; above copyright notice. This software, or any other copies thereof,
                                     0000    11 ; may not be provided or otherwise made available to any other person
                                     0000    12 ; except for use on such system and to one who agree to these license 
                                     0000    13 ; terms.  Title to  and  ownership of the software shall at all times 
                                     0000    14 ; remain in DEC.
                                     0000    15 ;
                                     0000    16 ; The information in the software is subject to change without notice
                                     0000    17 ; and should  not  be construed  as a commitment by Digital Equipment 
                                     0000    18 ; Corporation.
                                     0000    19 ;
                                     0000    20 ; DEC assumes  no  responsibility  for the use or  reliability of its
                                     0000    21 ; software on equipment which is not supplied by DEC.
                                     0000    22 ;
                                     0000    23 ;
                                     0000    24 ; FACILITY: FORTRAN COMPATABILITY LIBRARY
                                     0000    25 ;++
                                     0000    26 ; ABSTRACT:
                                     0000    27 ;
                                     0000    28 ;	COM$$R50WD_R6 performs conversion of 3 ASCII characters to 1 word.
                                     0000    29 ;	It is used by FORTRAN compatibility routines RAD50 and IRAD50.
                                     0000    30 ;
                                     0000    31 ;--
                                     0000    32 ;
                                     0000    33 ; VERSION: 0
                                     0000    34 ;
                                     0000    35 ; HISTORY:
                                     0000    36 ;
                                     0000    37 ; AUTHOR:
                                     0000    38 ;	Peter Yuo, 12-Sep-77: Version 0
                                     0000    39 ;
                                     0000    40 ; MODIFIED BY:
                                     0000    41 ;
                                     0000    42 ;
                                     0000    43 ;
COM$$R50WD      ; FORTRAN COMPATIBILITY - ASCII TO RADIX-50 CON  21-AUG-1978 18:53:41   VAX-11 MACRO X0.3-11               Page   2
1-1             HISTORY  ; Detailed Current Edit History                                                                         (2)

                                     0000    45 	.SBTTL	HISTORY		; Detailed Current Edit History
                                     0000    46 
                                     0000    47 
                                     0000    48 ; Edit History for Version 01 of ASCR5O
                                     0000    49 ;
                                     0000    50 ; 0-03	Clear RADIX_VALUE at initialization in R50WD_R6
                                     0000    51 ; 00-06	- Define formal for RAD50 so no access vio.  TNH 5-Jan-78
                                     0000    52 ; 00-07	- Make PSECT be F4PCOMPAT$CODE.  TNH 5-Jan-78
                                     0000    53 ; 0-8	- Bug fix for RAD50.  JMT 5-Jan-78
                                     0000    54 ; 0-9	- Another bug fix for RAD50.  JMT 9-Jan-77
                                     0000    55 ; 1-1	- Break module COM$ASCR50 into 3 modules:
                                     0000    56 ;		COM$RAD50 - routine RAD50
                                     0000    57 ;		COM$IRAD50 - routine IRAD50
                                     0000    58 ;		COM$$R50WD - common ASCII to RAD50 conversion routine
COM$$R50WD      ; FORTRAN COMPATIBILITY - ASCII TO RADIX-50 CON  21-AUG-1978 18:53:41   VAX-11 MACRO X0.3-11               Page   3
1-1             DECLARATIONS                                                                                                     (3)

                                     0000    60 	.SBTTL	DECLARATIONS
                                     0000    61 
                                     0000    62 ;
                                     0000    63 ; INCLUDE FILES:
                                     0000    64 ;
                                     0000    65 
                                     0000    66 ;
                                     0000    67 ; EXTERNAL SYMBOLS:
                                     0000    68 ;
                                     0000    69 	.DSABL	GBL
                                     0000    70 
                                     0000    71 ;
                                     0000    72 ; MACROS:
                                     0000    73 ;
                                     0000    74 
                                     0000    75 ;
                                     0000    76 ; PSECT DECLARATIONS:
                                     0000    77 ;
                                 00000000    78 	.PSECT	F4PCOMPAT$CODE	PIC,USR,CON,REL,LCL,SHR,EXE,RD,NOWRT
                                     0000    79 
                                     0000    80 ;
                                     0000    81 ; EQUATED SYMBOLS:
                                     0000    82 ;
                                     0000    83 
                                     0000    84 ;
                                     0000    85 ; OWN STORAGE:
                                     0000    86 ;
COM$$R50WD      ; FORTRAN COMPATIBILITY - ASCII TO RADIX-50 CON  21-AUG-1978 18:53:41   VAX-11 MACRO X0.3-11               Page   4
1-1             COM$$R50WD_R6 - CONVERT 3 ASCII CHARS INTO ONE                                                                   (4)

                                     0000    88 	.SBTTL	COM$$R50WD_R6 - CONVERT 3 ASCII CHARS INTO ONE WORD RADIX-50 VALUE
                                     0000    89 
                                     0000    90 
                                     0000    91 ;++
                                     0000    92 ; FUNCTIONAL DESCRIPTION:
                                     0000    93 ;
                                     0000    94 ;	Algorithmic steps:
                                     0000    95 ;	1) Initialization
                                     0000    96 ;	   REM_CHAR_IN_WORD = 3 (3 radix50 chars/word)
                                     0000    97 ;	2) If (CHARS_REM - 1) < 0 then (CURRENT_CHAR = 0, go to
                                     0000    98 ;					step 5 to fill up the rest of the word)
                                     0000    99 ;	   otherwise (CURRENT_CHAR = CHAR(NEXT_INPUT_POSITION),
                                     0000   100 ;		      NEXT_INPUT_POSITION = NEXT_INPUT_POSITION + 1).
                                     0000   101 ;	3) Get the corresponding radix-50 value
                                     0000   102 ;	   a. If ASCII('A') =< ASCII(CURRENT_CHAR) =< ASCII('Z') then
                                     0000   103 ;	      CURRENT_CHAR = ASCII(CURRENT_CHAR) - 100(octal)
                                     0000   104 ;	   b. If ASCII('0') =< ASCII(CURRENT_CHAR) =< ASCII('9') then
                                     0000   105 ;	      CURRENT_CHAR = ASCII(CURRENT_CHAR) - 22(octal)
                                     0000   106 ;	   c. If ASCII(CURRENT_CHAR) = ASCII(' ') then
                                     0000   107 ;	      CURRENT_CHAR = ASCII(' ') - 40(octal)
                                     0000   108 ;	   d. If ASCII(CURRENT_CHAR) = ASCII('$') then
                                     0000   109 ;	      CURRENT_CHAR = ASCII('$') - 11(octal)
                                     0000   110 ;	   e. If ASCII(CURRENT_CHAR) = ASCII('.') then
                                     0000   111 ;	      CURRENT_CHAR = ASCII('.') - 22(octal)
                                     0000   112 ;	   f. If nonen of the above then CURRENT_CHAR = 0.
                                     0000   113 ;	ADD_COUNT:
                                     0000   114 ;	4) ACTUAL_CHAR_COUNT = ACTUAL_CHAR_COUNT + 1
                                     0000   115 ;	ACCUM:
                                     0000   116 ;	5) RADIX_VALUE = RADIX_VALUE * 50(octal) + CURRENT_CHAR
                                     0000   117 ;	6) If (CHARS_REM = CHARS_REM - 1) > 0 THEN go back to step 2
                                     0000   118 ;	7) return with the result in RADIX-VLAUE
                                     0000   119 ;--
                                     0000   120 
                                     0000   121 COM$$R50WD_R6::
                                     0000   122 ;
                                     0000   123 ; Initialization
                                     0000   124 ;
                                     0000   125 
            56            03     D0  0000   126 	MOVL	#3, R6			; R6 = CHARS_REM_IN_WORD = 3
                          51     D4  0003   127 	CLRL	R1			; clear RADIX_VALUE
                                     0005   128 
                                     0005   129 ;
                                     0005   130 ; Clear CHARRENT_CHAR
                                     0005   131 ; If (CHARS_REM - 1) =< 0 then (CURRENT_CHAR = 0, go to ACCUM to fill
                                     0005   132 ;				up the rest of the word)
                                     0005   133 ; else (CURRENT_CHAR = CHAR (NEXT_INPUT_POSITION),
                                     0005   134 ;	NEXT_INPUT_POSITION = NEXT_INPUT_POSITION + 1)
                                     0005   135 ;
                          53     D4  0005   136 AGAIN1:	CLRL	R3			; clear CURRENT_CHAR
                          55     D7  0007   137 	DECL	R5			; CHARS_REM = CHARS_REM - 1
                          46     19  0009   138 	BLSS	ACCUM			; branch to fill up the rest of the word
            53            82     9A  000B   139 	MOVZBL	(R2)+, R3		; CURRENT_CHAR = next input char
                                     000E   140 					; and advance NEXT_INPUT_POSITION
                                     000E   141 
                                     000E   142 ;
                                     000E   143 ; Get the corresponding RADIX-50 value
                                     000E   144 ; a. If ASCII(CURRENT_CHAR) =< ASCII(' ') then go to SPACE_NONRADIX
COM$$R50WD      ; FORTRAN COMPATIBILITY - ASCII TO RADIX-50 CON  21-AUG-1978 18:53:41   VAX-11 MACRO X0.3-11               Page   5
1-1             COM$$R50WD_R6 - CONVERT 3 ASCII CHARS INTO ONE                                                                   (4)

                                     000E   145 ; b. If ASCII(CURRENT_CHAR) > ASCII('Z') then go to SPACE_NONRADIX
                                     000E   146 ; c. If ASCII(CURRENT_CHAR) < ASCII('A') then go to CHECK_NUMBER
                                     000E   147 ; d. current char is A-Z, so CURRENT_CHAR = CURRENT_CHAR - 100(octal)
                                     000E   148 ;    go to ACCUM
                                     000E   149 ; CHECK_NUMBER:
                                     000E   150 ; e. If ASCII(CURRENT_CHAR) < ASCII('0') then go to CHECK_DOLLAR
                                     000E   151 ; f. If ASCII(CURRENT_CHAR) > ASCII('9') then go to SPACE_NONRADIX
                                     000E   152 ; g. current char is 0-9, so CURRENT_CHAR = CURRENT_CHAR - 22(octal)
                                     000E   153 ;    go to ACCUM
                                     000E   154 ; CHECK_DOLLAR:
                                     000E   155 ; h. If ASCII(CURRENT_CHAR) = ASCII('$') then (CURRENT_CHAR = 33(octal),
                                     000E   156 ;						go to ACCUM)
                                     000E   157 ; i. If ASCII(CURRENT_CHAR) = ASCII('.') then (CURRENT_CHAR = 34(octal),
                                     000E   158 ;						go to ACCUM)
                                     000E   159 ; SPACE_NONRADIX:
                                     000E   160 ; CURRENT_CHAR = 0
                                     000E   161 ;
                                     000E   162 
            20            53     91  000E   163 	CMPB	R3, #^A/ /		; compare CURRENT_CHAR with space
                          38     15  0011   164 	BLEQ	SPACE_NONRADIX		; branch if CURRENT_CHAR is a space
                                     0013   165 					; or non-radix-50 char
         5A 8F            53     91  0013   166 	CMPB	R3, #^A/Z/		; compare CURRENT_CHAR with 'Z'
                          32     14  0017   167 	BGTR	SPACE_NONRADIX		; CURRENT_CHAR is non-radix-50
         41 8F            53     91  0019   168 	CMPB	R3, #^A/A/		; compare CURRENT_CHAR with 'A'
                          09     19  001D   169 	BLSS	CHECK_NUMBER		; branch to check if CURRENT_CHAR is
                                     001F   170 					; a number
            53   00000040 8F     C2  001F   171 	SUBL	#^O100, R3		; R3 = correspondin radix-50 value
                                     0026   172 					; for A-Z
                          27     11  0026   173 	BRB	ADD_COUNT		; branch to add acutal count
                                     0028   174 CHECK_NUMBER:
            30            53     91  0028   175 	CMPB	R3, #^A/0/		; compare CURRENT_CHAR  with '0'
                          0A     19  002B   176 	BLSS	CHECK_DOLLAR		; go to check for '$'
            39            53     91  002D   177 	CMPB	R3, #^A/9/		; compare CURRENT_CHAR with '9'
                          19     14  0030   178 	BGTR	SPACE_NONRADIX		; CURRENT_CHAR is non-radix-50
            53            12     C2  0032   179 	SUBL	#^O22, R3		; get corresponding radix-50 value
                                     0035   180 					; for 0-9
                          18     11  0035   181 	BRB	ADD_COUNT		; branch to add actual count
                                     0037   182 CHECK_DOLLAR:
            24            53     91  0037   183 	CMPB	R3, #^A/$/		; compare CURRENT_CHAR with '$'
                          05     12  003A   184 	BNEQ	CHECK_PERIOD		; branch to check for period
            53            1B     D0  003C   185 	MOVL	#^O33, R3		; CURRENT_CHAR = corresponding
                                     003F   186 					; radix-50 value
                          0E     11  003F   187 	BRB	ADD_COUNT		; branch to add to ACUTAL_COUNT
                                     0041   188 CHECK_PERIOD:
            2E            53     91  0041   189 	CMPB	R3, #^A/./		; compare CURRENT_CHAR with '.'
                          05     12  0044   190 	BNEQ	SPACE_NONRADIX		; current char is not radix-50
            53            1C     D0  0046   191 	MOVL	#^O34, R3		; get corresponding radix-50 value
                          04     11  0049   192 	BRB	ADD_COUNT		; branch to add ACTUAL_COUNT
                                     004B   193 SPACE_NONRADIX:
                          53     D4  004B   194 	CLRL	R3			; CURRENT_CHAR = 0
                          02     11  004D   195 	BRB	ACCUM			; go to fill up the rest of the word
                                     004F   196 
                                     004F   197 ;
                                     004F   198 ; Accumulate ACTUAL_COUNT
                                     004F   199 ;
                                     004F   200 
                                     004F   201 ADD_COUNT:
COM$$R50WD      ; FORTRAN COMPATIBILITY - ASCII TO RADIX-50 CON  21-AUG-1978 18:53:41   VAX-11 MACRO X0.3-11               Page   6
1-1             COM$$R50WD_R6 - CONVERT 3 ASCII CHARS INTO ONE                                                                   (4)

                          50     D6  004F   202 	INCL	R0			; ACTUAL_COUNT = ACTUAL_COUNT + 1
                                     0051   203 
                                     0051   204 ;
                                     0051   205 ; Accumulate ACTUAL_VALUE
                                     0051   206 ;
                                     0051   207 
            51            03     78  0051   208 ACCUM:	ASHL	#3, R1, R1		; R1 = 8*RADIX_VALUE
                          51         0054       
            53            51     C0  0055   209 	ADDL	R1, R3			; R3 = 8*RADIX_VALUE + CURRENT_CHAR
            51            02     78  0058   210 	ASHL	#2, R1, R1		; R1 = 32*RADIX_VALUE
                          51         005B       
            51            53     C0  005C   211 	ADDL	R3, R1			; R1 = 40*RADIX_VALUE + CURRENT_CHAR
                                     005F   212 					; = 50(octal)*RADIX_VALUE + CURRENT_CHAR
                                     005F   213 
                                     005F   214 ;
                                     005F   215 ; If any more char to process go back, otherwise return
                                     005F   216 ;
                                     005F   217 
                          56     D7  005F   218 	DECL	R6			; decrement CHARS_REM_IN_WORD by 1
                          A2     14  0061   219 	BGTR	AGAIN1			; go back to process more char
                                 05  0063   220 	RSB				; return with R1 = RADIX_VALUE
                                     0064   221 					; R0 = ACTUAL_COUNT
                                     0064   222 
                                     0064   223 
                                     0064   224 
                                     0064   225 	.END
COM$$R50WD      ; FORTRAN COMPATIBILITY - ASCII TO RADIX-50 CON  21-AUG-1978 18:53:41   VAX-11 MACRO X0.3-11               Page   7
SYMBOL TABLE                                                                                                                     (4)

ACCUM            00000051 R     02   
ADD_COUNT        0000004F R     02   
AGAIN1           00000005 R     02   
CHECK_DOLLAR     00000037 R     02   
CHECK_NUMBER     00000028 R     02   
CHECK_PERIOD     00000041 R     02   
COM$$R50WD_R6    00000000 RG    02   
FOR$K_ERR_PREFX= 00000018            
MTH$K_ERR_PREFX= 00000016            
MTH__FLOOVEMAT = 00000058            
MTH__FLOUNDMAT = 00000059            
MTH__INVARG    = 00000051            
MTH__LOGZERNEG = 00000053            
MTH__SINSIGLOS = 00000057            
MTH__SQUROONEG = 00000054            
MTH__UNDEXP    = 00000052            
MTH__WRONUMARG = 00000050            
SPACE_NONRADIX   0000004B R     02   


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
F4PCOMPAT$CODE   00000064      02       PIC   USR   CON   REL   LCL   SHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
27910. BYTES LEFT IN FREE MEMORY POOL.
OBJ$:COMR50WD,LIS$:COMR50WD/-SP=LIB$:S/ML,SRC$:P,COMR50WD
0 MLB DIR RDS - 0 GETS TO DEFINE 0 MACROS. 2 INTER. FILE WRITES. 
