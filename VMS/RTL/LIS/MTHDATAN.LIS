MTH$DATAN       ; Floating Point Arc Tangent Functions (DATAN,D  21-AUG-1978 19:03:29   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (4)     100  DECLARATIONS	; Declarative Part of Module
   (5)     100  MTH$DATAN - Standard Single Precision Floating 
   (6)     100  MTH$DATAN2 - Standard Double Floating Arctangen
   (7)     100  MTH$DATAN_R7 - Special DATAN routine
MTH$DATAN       ; Floating Point Arc Tangent Functions (DATAN,D  21-AUG-1978 19:03:29   VAX-11 MACRO X0.3-11               Page   1
01-10                                                                                                                            (1)

                                     0000   100 	.TITLE	MTH$DATAN	; Floating Point Arc Tangent Functions (DATAN,DATAN2)
                                     0000   200 	.IDENT /01-10/		; File: MTHDATAN.MAR
                                     0000   300 ;
                                     0000   400 ; Copyright (C) 1977
                                     0000   500 ; Digital Equipment Corporation, Maynard, Massachusetts 01754
                                     0000   600 ;
                                     0000   700 ; This software is furnished under a license for use only on a single
                                     0000   800 ; computer  system  and  may be copied only with the inclusion of the
                                     0000   900 ; above copyright notice. This software, or any other copies thereof,
                                     0000  1000 ; may not be provided or otherwise made available to any other person
                                     0000  1100 ; except for use on such system and to one who agree to these license 
                                     0000  1200 ; terms.  Title to  and  ownership of the software shall at all times 
                                     0000  1300 ; remain in DEC.
                                     0000  1400 ;
                                     0000  1500 ; The information in the software is subject to change without notice
                                     0000  1600 ; and should  not  be construed  as a commitment by Digital Equipment 
                                     0000  1700 ; Corporation.
                                     0000  1800 ;
                                     0000  1900 ; DEC assumes  no  responsibility  for the use or  reliability of its
                                     0000  2000 ; software on equipment which is not supplied by DEC.
                                     0000  2100 ;
                                     0000  2200 ;
                                     0000  2300 ; FACILITY: MATH LIBRARY
                                     0000  2400 ;++
                                     0000  2500 ; ABSTRACT:
                                     0000  2600 ;
                                     0000  2700 ; MTH$DATAN  is  a  function  which  returns  the floating point arc-
                                     0000  2800 ; tangent value  of  its  single  precision  floating point argument.
                                     0000  2900 ; MTH$DATAN2  is  two  argument double floating arctangent. The call is
                                     0000  3000 ; standard call-by-reference.
                                     0000  3100 ; MTH$DATAN_R7  is  a  special routine which is the same as MTH$DATAN
                                     0000  3200 ; except a  faster non-standard JSB call is used with the argument in
                                     0000  3300 ; R0 and no registers are saved.
                                     0000  3400 ;
                                     0000  3500 ;--
                                     0000  3600 ;
                                     0000  3700 ; VERSION: 01
                                     0000  3800 ;
                                     0000  3900 ; HISTORY:
                                     0000  4000 ; AUTHOR:
                                     0000  4100 ;	Peter Yuo, 15-Oct-76: Version 01
                                     0000  4200 ;
                                     0000  4300 ; MODIFIED BY:
                                     0000  4400 ;
                                     0000  4500 ; 01-1	Peter Yuo, 22-May-77
                                     0000  4600 ;
                                     0000  4700 ;
MTH$DATAN       ; Floating Point Arc Tangent Functions (DATAN,D  21-AUG-1978 19:03:29   VAX-11 MACRO X0.3-11               Page   2
01-10                                                                                                                            (3)

                                     0000   200 
                                     0000   300 
                                     0000   400 ; ALGORITHMIC DIFFERENCES FROM FP-11/C ROUTINE:
                                     0000   500 ;	1. To avoid various flags subroutine calls have been used.
                                     0000   600 ;
                                     0000   700 ; Edit History for Version 01 of MTH$DATANDATAN2
                                     0000   800 ;
                                     0000   900 
                                     0000  1000 
                                     0000  1100 ; 01-1	Code saving after code review March 1977
                                     0000  1200 ;	In DATAN2, fix references to OWN constants so DATAN2 will work.
                                     0000  1300 ; 01-3	In MTH$DATAN2, comparison of exponents of arguments X and
                                     0000  1400 ;	Y is with 58 instead of 26.
                                     0000  1500 ;
                                     0000  1600 ; 01-8	- Signal INVALID ARG TO MATH LIBRARY if x=y=0.  TNH 16-June-78
                                     0000  1700 ; 01-9	- Fix comments.  TNH 16-June-78
                                     0000  1800 ; 01-10	- Move .ENTRY mask to module header.  TNH 14-Aug-78
MTH$DATAN       ; Floating Point Arc Tangent Functions (DATAN,D  21-AUG-1978 19:03:29   VAX-11 MACRO X0.3-11               Page   3
01-10           DECLARATIONS ; Declarative Part of Module                                                                        (4)

                                     0000   100 	.SBTTL	DECLARATIONS	; Declarative Part of Module
                                     0000   200 
                                     0000   300 ;
                                     0000   400 ; INCLUDE FILES:	OTSPARAMS.MAR
                                     0000   500 ;
                                     0000   600 ; EXTERNAL SYMBOLS:	MTH$JACKET_HDLR
                                     0000   700 ;
                                     0000   710 	.DSABL	GBL			; Force .EXTRN declaration
                                     0000   720 	.EXTRN	MTH$$SIGNAL		; Signal SEVERE error
                                     0000   800 ; EQUATED SYMBOLS:
                                     0000   850 
                           000040FC  0000   875 	ACMASK = ^M<IV, R2, R3, R4, R5, R6, R7>	; .ENTRY mask + int ovf enable
                           30A33F89  0000   900 	F_TAN_PI_OV_12	=	^X30A33F89	; DATA(PI/12)
                                     0000  1000 ;
                                     0000  1100 ;
                                     0000  1200 ; MACROS:	none
                                     0000  1300 ;
                                     0000  1400 ; PSECT DECLARATIONS:
                                     0000  1500 
                                 00000000  1600 	.PSECT	MTH$CODE	PIC,SHR,LONG,EXE,NOWRT
                                     0000  1700 					; program section for math routines
                                     0000  1800 ;
                                     0000  1900 ; OWN STORAGE:	none
                                     0000  2000 ;
                                     0000  2100 ; CONSTANTS:
                                     0000  2200 
                                     0000  2300 ;
                                     0000  2400 ; Table to be used in POLY
                                     0000  2500 ;
                                     0000  2600 DATANTAB:
                          D1C7 3E35  0000  2700 	.WORD	^O037065,^O150707	; C8 = 0.0443895157187
                          E618 E4C0  0004  2800 	.WORD	^O162300,^O163030
                          C69B BE84  0008  2900 	.WORD	^O137204,^O143233	; C7 = -0.06483193510303
                          010B 0808  000C  3000 	.WORD	^O004010,^O000413
                          4602 3E9D  0010  3100 	.WORD	^O037235,^O043002	; C6 = 0.0767936896066
                          C526 2E6C  0014  3200 	.WORD	^O027154,^O142446
                          2BB9 BEBA  0018  3300 	.WORD	^O137272,^O025671	; C5 = -0.0909037114191074
                          6B98 9D0A  001C  3400 	.WORD	^O116412,^O065630
                          8E27 3EE3  0020  3500 	.WORD	^O037343,^O107047	; C4 = 0.11111097898051048
                          2B01 2795  0024  3600 	.WORD	^O023625,^O025401
                          4924 BF12  0028  3700 	.WORD	^O137422,^O044444	; C3 = -0.14285714102825545
                          9C69 72DD  002C  3800 	.WORD	^O071335,^O116151
                          CCCC 3F4C  0030  3900 	.WORD	^O037514,^O146314	; C2 = 0.19999999998729448
                          EBA8 CC94  0034  4000 	.WORD	^O146224,^O165650
                          AAAA BFAA  0038  4100 	.WORD	^O137652,^O125252	; C1 = -0.33333333333329930
                          9782 AAAA  003C  4200 	.WORD	^O125252,^O113602
                          0000 4080  0040  4300 	.WORD	^O040200,^O000000	; C0 = 0.999999999999999
                          0000 0000  0044  4400 	.WORD	^O000000,^O000000
                           00000009  0048  4500 DATANLEN = .- DATANTAB/8
                                     0048  4600 
                                     0048  4700 D_MPI_OVER_2:
                          0FDA C0C9  0048  4800 	.WORD	^O140311, ^O007732	; -PI/2
                          68C1 A221  004C  4900 	.WORD	^O121041, ^O064301
                                     0050  5000 D_PI:
                          0FDA 4149  0050  5100 	.WORD	^O040511,^O007732	; PI
                          68C1 A221  0054  5200 	.WORD	^O121041,^O064301
                                     0058  5300 D_PI_OVER_2:
MTH$DATAN       ; Floating Point Arc Tangent Functions (DATAN,D  21-AUG-1978 19:03:29   VAX-11 MACRO X0.3-11               Page   4
01-10           DECLARATIONS ; Declarative Part of Module                                                                        (4)

                          0FDA 40C9  0058  5400 	.WORD	^O040311,^O007732	; PI/2
                          68C1 A221  005C  5500 	.WORD	^O121041,^O064301
                                     0060  5600 D_PI_OVER_6:
                          0A91 4006  0060  5700 	.WORD	^O040006,^O005221	; PI/6
                          9B2C C16B  0064  5800 	.WORD	^O140553,^O115454
                                     0068  5900 D_SQRT_3:
                          B3D7 40DD  0068  6000 	.WORD	^O040335,^O131727	; DSQRT(3)
                          6554 42C2  006C  6100 	.WORD	^O041302,^O062524
MTH$DATAN       ; Floating Point Arc Tangent Functions (DATAN,D  21-AUG-1978 19:03:29   VAX-11 MACRO X0.3-11               Page   5
01-10           MTH$DATAN - Standard Single Precision Floating                                                                   (5)

                                     0070   100 	.SBTTL	MTH$DATAN - Standard Single Precision Floating Arc Tangent
                                     0070   200 
                                     0070   300 
                                     0070   400 ;++
                                     0070   500 ; FUNCTIONAL DESCRIPTION:
                                     0070   600 ;
                                     0070   700 ; DATAN - double precision floating point function
                                     0070   800 ;
                                     0070   900 ; DATAN(X) is computed by the following calculation steps:
                                     0070  1000 ;
                                     0070  1100 ;	1. If X < 0 then
                                     0070  1200 ;	   begin
                                     0070  1300 ;		perform steps 2, 3, and 4 with arg = |X|
                                     0070  1400 ;		negate the result since DATAN(X) = -DATAN(-X)
                                     0070  1500 ;		return
                                     0070  1600 ;	   end
                                     0070  1700 ;
                                     0070  1800 ;	2. At this point argument is positive or has been made positive.
                                     0070  1900 ;	   If X > 1 then
                                     0070  2000 ;	   begin
                                     0070  2100 ;		perform steps 3 and 4 with arg = 1/|X|
                                     0070  2200 ;		negate result and add a bias of PI/2 since DATAN(|X|) = PI/2 -
                                     0070  2300 ;		DATAN(1/|X|)
                                     0070  2400 ;		return
                                     0070  2500 ;	   end
                                     0070  2600 ;
                                     0070  2700 ;	3. At this point the argument is 1 >= X >= 0
                                     0070  2800 ;	   If |X| > DTAN(PI/12) then
                                     0070  2900 ;	   begin
                                     0070  3000 ;		perform step 4 with arg = (X*DSQRT(3) - 1) / (DSQRT(3) + X)
                                     0070  3100 ;		add PI/6 to the result
                                     0070  3200 ;		return
                                     0070  3300 ;	   end
                                     0070  3400 ;	Note: (X*DSQRT(3) - 1) / (X + DSQRT(3)) >= DTAN(PI/12) for |X| >= DTAN(PI/12)
                                     0070  3500 ;
                                     0070  3600 ;	4. Finally the argument is |X| >= DTAN(PI/12)
                                     0070  3700 ;	   do begin
                                     0070  3800 ;		DATAN(X) = X * SUM(Ci * X**(2i)), i = 0:4
                                     0070  3900 ;		return
                                     0070  4000 ;	   end
                                     0070  4100 ;
                                     0070  4200 ;	   The coefficients Ci's are drawn from Hart #4941
                                     0070  4300 ;	   The relative error is =< 10**-9.54
                                     0070  4400 ;
                                     0070  4500 ; CALLING SEQUENCE:
                                     0070  4600 ;
                                     0070  4700 ;	Arctangent.wd.v = MTH$DATAN(x.rd.r)
                                     0070  4800 ;
                                     0070  4900 ; INPUT PARAMETERS:
                                     0070  5000 
                           00000004  0070  5100 	LONG = 4			; define longword multiplier
                           00000004  0070  5200 	x = 1 * LONG			; x is an angle in radians
                                     0070  5300 ;
                                     0070  5400 ; IMPLICIT INPUTS:	none
                                     0070  5500 ;
                                     0070  5600 ; OUTPUT PARAMETERS:
                                     0070  5700 ;
MTH$DATAN       ; Floating Point Arc Tangent Functions (DATAN,D  21-AUG-1978 19:03:29   VAX-11 MACRO X0.3-11               Page   6
01-10           MTH$DATAN - Standard Single Precision Floating                                                                   (5)

                                     0070  5800 ;	VALUE:	double precision floating arctangent angle of the argument
                                     0070  5900 ;
                                     0070  6000 ; IMPLICIT OUTPUTS:	none
                                     0070  6100 ;
                                     0070  6200 ; SIDE EFFECTS:
                                     0070  6300 ;
                                     0070  6400 ; Signals:	none
                                     0070  6500 ;
                                     0070  6600 ; NOTE: This procedure disables floating point underflow, enable integer
                                     0070  6700 ; overflow, causes no floating overflow or other arithmetic traps, and
                                     0070  6800 ; preserves enables across the call.
                                     0070  6900 ;
                                     0070  7000 ;---
                                     0070  7100 
                                     0070  7200 
                               40FC' 0070  7300 	.ENTRY	MTH$DATAN, ACMASK	; standard call-by-reference entry
                                     0072  7400 					; disable DV (and FU), enable IV
                                     0072  7500 	MTH$FLAG_JACKET			; flag that this is a jacket procedure in
                                     0072      
            6D       0000'CF     3E  0072       	MOVAW	W^MTH$$JACKET_HND, (FP)
                                     0077       					; set handler address to jacket
                                     0077       					; handler
                                     0077       
                                     0077  7600 					; case of an error in special JSB routine
            50         04 BC     70  0077  7700 	MOVD	@x(AP), R0		; R0/R1 = arg 
                          62     10  007B  7800 	BSBB	MTH$DATAN_R7		; call special DATAN rountine
                                 04  007D  7900 	RET				; return - result in R0
                                     007E  8000 
MTH$DATAN       ; Floating Point Arc Tangent Functions (DATAN,D  21-AUG-1978 19:03:29   VAX-11 MACRO X0.3-11               Page   7
01-10           MTH$DATAN2 - Standard Double Floating Arctangen                                                                  (6)

                                     007E   100 	.SBTTL	MTH$DATAN2 - Standard Double Floating Arctangent With 2 Arguments
                                     007E   200 ;++
                                     007E   300 ; FUNCTIONAL DESCRIPTION:
                                     007E   400 ;
                                     007E   500 ; DATAN2  - double precision floating point function
                                     007E   600 ;
                                     007E   700 ; DATAN2(X,Y) is computed as following:
                                     007E   800 ;
                                     007E   900 ;	If Y = 0 or X/Y > 2**57, DATAN2(X,Y) = PI/2 * (sign X)
                                     007E  1000 ;	If Y > 0 and X/Y =< 2**57, DATAN2(X,Y) = DATAN(X/Y)
                                     007E  1100 ;	If Y < 0 and X/Y =< 2**57, DATAN2(X,Y) = PI * (sign X) + DATAN(X/Y)
                                     007E  1200 ;
                                     007E  1300 ;
                                     007E  1400 ; CALLING SEQUENCE:
                                     007E  1500 ;
                                     007E  1600 ;	Arctangent2.wd.v = MTH$DATAN2(x.rd.r, y.rd.r)
                                     007E  1700 ;
                                     007E  1800 ; INPUT PARAMETERS:
                                     007E  1900 
                           00000004  007E  2000 	x = 1 * LONG			; x is the first argument
                           00000008  007E  2100 	y = 2 * LONG			; y is the second argument
                                     007E  2200 
                                     007E  2300 ; SIDE EFFECTS:	See description of MTH$DATAN 
                                     007E  2400 ;
                                     007E  2500 ;--
                                     007E  2600 
                                     007E  2700 
                               40FC' 007E  2800 	.ENTRY	MTH$DATAN2, ACMASK	; standard call-by-reference entry
                                     0080  2900 					; disable DV (and FU), enable IV
                                     0080  3000 	MTH$FLAG_JACKET			; flag that this is a jacket procedure in
                                     0080      
            6D       0000'CF     3E  0080       	MOVAW	W^MTH$$JACKET_HND, (FP)
                                     0085       					; set handler address to jacket
                                     0085       					; handler
                                     0085       
                                     0085  3100 					; case of an error in special JSB routine
            50         04 BC     70  0085  3200 	MOVD	@x(AP), R0		; R0/R1 = arg1 
            52         08 BC     70  0089  3300 	MOVD	@y(AP), R2		; R2/R3 = arg2
                                     008D  3400 ;
                                     008D  3500 ; Test if Y = 0 or X/Y > 2**57
                                     008D  3600 ;
                          2F     13  008D  3700 	BEQL	INF			; branch to INF if Y = 0
            50       807F 8F     AB  008F  3800 	BICW3	#^X807F, R0, R4		; R4 = exponent(X)
                          54         0094       
            52       807F 8F     AB  0095  3900 	BICW3	#^X807F, R2, R5		; R5 = exponent(Y)
                          55         009A       
            54            55     A2  009B  4000 	SUBW	R5, R4			; R4 = exponent(X) - exponent(Y)
       1D00 8F            54     B1  009E  4100 	CMPW	R4, #58*128		; compare R4 with 58
                          19     14  00A3  4200 	BGTR	INF			; if X/Y > 2**57, branch to INF
                                     00A5  4300 ;
                                     00A5  4400 ; Test if Y > 0 or Y < 0
                                     00A5  4500 ;
                          52     B5  00A5  4600 	TSTW	R2			; test the sign of Y
                          12     14  00A7  4700 	BGTR	A2PLUS			; branch to A2PLUS if Y > 0
                          50     B5  00A9  4800 	TSTW	R0			; test the sign of X
                          07     18  00AB  4900 	BGEQ	A1PLUS			; branch to A1PLUS if X >= 0
                                     00AD  5000 ;
MTH$DATAN       ; Floating Point Arc Tangent Functions (DATAN,D  21-AUG-1978 19:03:29   VAX-11 MACRO X0.3-11               Page   8
01-10           MTH$DATAN2 - Standard Double Floating Arctangen                                                                  (6)

                                     00AD  5100 ; Y < 0 and X < 0 and X/Y =< 2**57
                                     00AD  5200 ;
                          2D     10  00AD  5300 	BSBB	MTH$DATAN_R7D		; R0/R1 = DATAN(X/Y)
            50         9E AF     62  00AF  5400 	SUBD	D_PI, R0		; R0/R1 = -PI + DATAN(X/Y)
                                 04  00B3  5500 	RET				; return
                                     00B4  5600 ;
                                     00B4  5700 ; Y < 0 and X > 0 and X/Y =< 2**57
                                     00B4  5800 ;
                                     00B4  5900 A1PLUS:
                          26     10  00B4  6000 	BSBB	MTH$DATAN_R7D		; R0/R1 = DATAN(X/Y)
            50         97 AF     60  00B6  6100 	ADDD	D_PI, R0		; R0/R1 = PI + DATAN(X/Y)
                                 04  00BA  6200 	RET				; return
                                     00BB  6300 ;
                                     00BB  6400 ; Y > 0 and X/Y =< 2**57
                                     00BB  6500 ;
                                     00BB  6600 A2PLUS:
                          1F     10  00BB  6700 	BSBB	MTH$DATAN_R7D		; R0/R1 = DATAN(X/Y)
                                 04  00BD  6800 	RET				; return
                                     00BE  6900 ;
                                     00BE  7000 ; Y = 0 or X/Y > 2**57
                                     00BE  7100 ;
                                     00BE  7200 INF:
                          50     B5  00BE  7300 	TSTW	R0			; test the sign of X
                          07     14  00C0  7400 	BGTR	1$			; branch if X > 0
                          0A     13  00C2  7450 	BEQL	2$			; branch if X = 0
            50         81 AF     70  00C4  7500 	MOVD	D_MPI_OVER_2, R0	; R0/R1 = DATAN(X/Y) = -PI/2
                                 04  00C8  7600 	RET				; return
                                     00C9  7650 
            50         8C AF     70  00C9  7700 1$:	MOVD	D_PI_OVER_2, R0		; R0/R1 = DATAN(X/Y) = PI/2
                                 04  00CD  7800 	RET				; return
                                     00CE  7900 
                                     00CE  8000 ;+
                                     00CE  8100 ; Here if both X = 0 and Y = 0.  Signal INVALID ARG TO MATH LIBRARY
                                     00CE  8200 ;-
                                     00CE  8300 
            01            0F     79  00CE  8400 2$:	ASHQ	#15, #1, R0		; R0/R1 = reserved operand, copied
                          50         00D1       
                                     00D2  8500 					; to CHF$L_MCH_SAVR0/R1 so handlers
                                     00D2  8600 					; can change if they want to continue.
            7E         51 8F     9A  00D2  8700 	MOVZBL	#MTH__INVARG, -(SP)	; code for INVALID ARG TO MATH LIBRARY
       0000'CF            01     FB  00D6  8800 	CALLS	#1, W^MTH$$SIGNAL	; Signal SEVERE error
                                 04  00DB  8900 	RET				; return if a handler says SS$_CONTINUE
MTH$DATAN       ; Floating Point Arc Tangent Functions (DATAN,D  21-AUG-1978 19:03:29   VAX-11 MACRO X0.3-11               Page   9
01-10           MTH$DATAN_R7 - Special DATAN routine                                                                             (7)

                                     00DC   100 	.SBTTL	MTH$DATAN_R7 - Special DATAN routine
                                     00DC   200 
                                     00DC   300 ; Special DATAN - used by the standard routine, and directly.
                                     00DC   400 ;
                                     00DC   500 ; CALLING SEQUENCES:
                                     00DC   600 ;	save anything needed in R0:R7
                                     00DC   700 ;	MOVD	...,R0			; input in R0/R1
                                     00DC   800 ;	JSB	MTH$DATAN_R7
                                     00DC   900 ;	return with result in R0/R1
                                     00DC  1000 ; Note: This routine is written to avoid causing any integer overflows, floating
                                     00DC  1100 ; overflows, or floating underflows or divide by 0 conditions, whether enabled or
                                     00DC  1200 ; not.
                                     00DC  1300 ;
                                     00DC  1400 ; REGISTERS USED:
                                     00DC  1500 ;	R0/R1 - Floating argument then result
                                     00DC  1600 ;	R0:R5 - POLYD
                                     00DC  1700 ;	R6/R7 - Y during POLYD
                                     00DC  1800 
                                     00DC  1900 
                                     00DC  2200 
                                     00DC  2300 MTH$DATAN_R7D:				; for local use only!
            50            52     66  00DC  2400 	DIVD	R2, R0
                                     00DF  2500 MTH$DATAN_R7::				; Special DATAN routine
                          50     73  00DF  2600 	TSTD	R0			; test the sign of X
                          0B     18  00E1  2700 	BGEQ	POSTAN			; branch if X is positive
                                     00E3  2800 ;
                                     00E3  2900 ; X < 0
                                     00E3  3000 ;
            50       8000 8F     AA  00E3  3100 	BICW	#^X8000, R0		; R0/R1 = -X
                          04     10  00E8  3200 	BSBB	POSTAN			; branch to calculate DATAN(-X)
            50            50     72  00EA  3300 	MNEGD	R0, R0			; R0/R1 = DATAN(X) = -DATAN(-X)
                                 05  00ED  3400 	RSB				; return, R0/R1 = DATAN(X)
                                     00EE  3500 ;
                                     00EE  3600 ; Subroutine:
                                     00EE  3700 ;	Input: R0/R1 = X (>= 0)
                                     00EE  3800 ;	Output: R0/R1 = DATAN(X)
                                     00EE  3900 ;
                                     00EE  4000 POSTAN:
            08            50     71  00EE  4100 	CMPD	R0, #1			; compare X with 1.0
                          0D     15  00F1  4200 	BLEQ	LEQ_THAN_1		; branch if |X| =< 1
                                     00F3  4300 ;
                                     00F3  4400 ; |X| > 1
                                     00F3  4500 ;
            08            50     67  00F3  4600 	DIVD3	R0, #1, R0		; R0/R1 = 1/|X|
                          50         00F6       
                          07     10  00F7  4700 	BSBB	LEQ_THAN_1		; jump to calculate DATAN(1/|X|)
       FF5A CF            50     63  00F9  4800 	SUBD3	R0, D_PI_OVER_2, R0	; R0/R1 = PI/2 - DATAN(1/|X|)
                          50         00FE       
                                 05  00FF  4900 	RSB				; return, R0/R1 = DATAN(|X|)= DATAN(1/|X|)
                                     0100  5000 ;
                                     0100  5100 ; Subroutine:
                                     0100  5200 ;	Input: R0/R1 = X (=< 1)
                                     0100  5300 ;	Output: R0/R1 = DATAN(X)
                                     0100  5400 ;
                                     0100  5500 LEQ_THAN_1:
   30A33F89 8F            50     51  0100  5600 	CMPF	R0, #F_TAN_PI_OV_12	; compare X with DTAN(PI/12)
                          24     15  0107  5700 	BLEQ	LE_TAN_PI_OV_12	; branch if R0 =< DTAN(PI/12)
MTH$DATAN       ; Floating Point Arc Tangent Functions (DATAN,D  21-AUG-1978 19:03:29   VAX-11 MACRO X0.3-11               Page  10
01-10           MTH$DATAN_R7 - Special DATAN routine                                                                             (7)

                                     0109  5800 ;
                                     0109  5900 ; DTAN(PI/12) < |X| =< 1
                                     0109  6000 ;
            50       FF5B CF     65  0109  6100 	MULD3	D_SQRT_3, R0, R6	; R6/R7 = DSQRT(3) * X
                          56         010E       
            56            08     62  010F  6200 	SUBD	#1, R6			; R6/R7 = DSQRT(3) * X - 1
            50       FF52 CF     60  0112  6300 	ADDD	D_SQRT_3, R0		; R0/R1 = X + DSQRT(3)
            56            50     66  0117  6400 	DIVD	R0, R6			; R6/R7 = Y = (DSQRT(3)*X-1)/(X+DSQRT(3))
            56            56     65  011A  6500 	MULD3	R6, R6, R0		; R0/R1 = Y * Y
                          50         011D       
            08            50     75  011E  6600 	POLYD	R0, #DATANLEN-1, DATANTAB
                     FEDC CF         0121       
                                     0124  6700 					; R0/R1 = SUM(Ci*Y**2i)
            50            56     64  0124  6800 	MULD	R6, R0			; R0/R1 = Y*SUM(Ci*Y**2i)
            50       FF35 CF     60  0127  6900 	ADDD	D_PI_OVER_6, R0		; R0/R1 = PI/6 + DATAN(Q)
                                 05  012C  7000 	RSB				; return, R0/R1 = DATAN(|X|)= PI/6 + DATAN(Q)
                                     012D  7100 ;
                                     012D  7200 ; 0 =< X =< DTAN(PI/12)
                                     012D  7300 ;
                                     012D  7400 LE_TAN_PI_OV_12:
            56            50     70  012D  7500 	MOVD	R0, R6			; R6/R7 = Y
            50            56     64  0130  7600 	MULD	R6, R0			; R0/R1 = Y*Y
            08            50     75  0133  7700 	POLYD	R0, #DATANLEN-1, DATANTAB
                     FEC7 CF         0136       
                                     0139  7800 					; R0/R1 = SUM(Ci*Y**2i)
            50            56     64  0139  7900 	MULD	R6, R0			; R0/R1 = Y * SUM(Ci*Y**2i)
                                 05  013C  8000 	RSB				; R0/R1 = DATAN(X) = X * SUM(Ci*X**2I)
                                     013D  8100 
                                     013D  8200 	.END
MTH$DATAN       ; Floating Point Arc Tangent Functions (DATAN,D  21-AUG-1978 19:03:29   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (7)

A1PLUS           000000B4 R     02   
A2PLUS           000000BB R     02   
ACMASK         = 000040FC            
DATANLEN       = 00000009            
DATANTAB         00000000 R     02   
D_MPI_OVER_2     00000048 R     02   
D_PI             00000050 R     02   
D_PI_OVER_2      00000058 R     02   
D_PI_OVER_6      00000060 R     02   
D_SQRT_3         00000068 R     02   
FOR$K_ERR_PREFX= 00000018            
F_TAN_PI_OV_12 = 30A33F89            
INF              000000BE R     02   
LEQ_THAN_1       00000100 R     02   
LE_TAN_PI_OV_12  0000012D R     02   
LONG           = 00000004            
MTH$$JACKET_HND  ********   X   02   
MTH$$SIGNAL      ********   X   01   
MTH$DATAN        00000070 RG    02   
MTH$DATAN2       0000007E RG    02   
MTH$DATAN_R7     000000DF RG    02   
MTH$DATAN_R7D    000000DC R     02   
MTH$K_ERR_PREFX= 00000016            
MTH__FLOOVEMAT = 00000058            
MTH__FLOUNDMAT = 00000059            
MTH__INVARG    = 00000051            
MTH__LOGZERNEG = 00000053            
MTH__SINSIGLOS = 00000057            
MTH__SQUROONEG = 00000054            
MTH__UNDEXP    = 00000052            
MTH__WRONUMARG = 00000050            
POSTAN           000000EE R     02   
X              = 00000004            
Y              = 00000008            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
MTH$CODE         0000013D      02       PIC   USR   CON   REL   LCL   SHR   EXE   RD  NOWRT LONG  


THERE WERE NO ERRORS OR WARNINGS.
27598. BYTES LEFT IN FREE MEMORY POOL.
OBJ$:MTHDATAN,LIS$:MTHDATAN/-SP=LIB$:S/ML,SRC$:P,MTHDATAN
0 MLB DIR RDS - 0 GETS TO DEFINE 0 MACROS. 4 INTER. FILE WRITES. 
