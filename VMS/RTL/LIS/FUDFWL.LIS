
; Bliss-32 10.1-416	Monday 21-AUG-1978 19:30:57	DBB3:[RTL.SRC]FUDFWL.B32;9					Page 1
;
;00100  0001	MODULE FOR$$UDF_WL (	! FORTRAN Write List Directed UDF
;00200  0002		IDENT ='0-19'	! File: FUDFWL.B32
;00300  0003			) =
;00400  0004	BEGIN
;00500  0005	
;00600  0006	!
;00700  0007	! COPYRIGHT (C) 1977
;00800  0008	! DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
;00900  0009	!
;01000  0010	! THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
;01100  0011	! COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
;01200  0012	! ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
;01300  0013	! MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
;01400  0014	! EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
;01500  0015	! TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
;01600  0016	! REMAIN IN DEC.
;01700  0017	!
;01800  0018	! THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
;01900  0019	! AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
;02000  0020	! CORPORATION.
;02100  0021	!
;02200  0022	! DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
;02300  0023	! SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
;02400  0024	
;02500  0025	!++
;02600  0026	! FACILITY:  FORTRAN Support Library - not user callable
;02700  0027	!
;02800  0028	! ABSTRACT:
;02900  0029	!
;03000  0030	! ENVIRONMENT:  User access mode; reentrant AST level or not.
;03100  0031	!
;03200  0032	! AUTHOR:	Jonathan M. Taylor;	CREATION DATE: 27-Jul-77
;03300  0033	!
;03400  0034	! MODIFIED BY:
;03500  0035	!	Jonathan M. Taylor, 27-Jul-77: Version 0
;03600  0036	! 0-1	-  original
;03700  0037	! 0-2	- bug fixes
;03800  0038	! 0-3	- more of same
;03900  0039	! 0-4	- put field size values in UPLIT
;04000  0040	! 0-5	- bug fix for COMPLEX field size
;04100  0041	! 0-6	- No parameters to record level routines JMT 17-OCT-77
;04200  0042	! 0-7	- Use FOR$K_abcmno7yz as E7TERNAL LITERALs.  TNH 27-Oct-77
;04300  0043	! 0-8	- Bug fix!  Use CNV_OUT_G, not CNV_OUT_F for float, double, and
;04400  0044	!	  complex data types.  JMT 8-Nov-77
;04500  0045	! 0-9	- Bug fix.  Use scale factor of 1 for floating output
;04600  0046	!	  conversions.  JMT 16-Nov-77
;04700  0047	! 0-10	- Be a little more suaver about COMPLEX data.  JMT 16-Nov-77
;04800  0048	! 0-11	- Use FERR.  TNH 16-Dec-77
;04900  0049	! 0-12	- Fix bug when string is longer than record buffer.  JMT 12-Jan-78
;05000  0050	! 0-13	- Take out external references to routines not used.  JMT 14-Jan-78
;05100  0051	! 0-14	- Store error in ISB$B_ERR_NO, don't signal!  JMT 14-Jan-78
;05200  0052	! 0-15	- Global register CCB.  JMT 8-Apr-78
;05300  0053	! 0-16	- Change to STARLET library.  DGP 20-Apr-78
;05400  0054	! 0-17	- Change REQUIRE files for VAX system build.  DGP 28-Apr-78
;05500  0055	! 0-18	- Change STARLET to RTLSTARLE to avoid conflicts.  DGP 1-May-78

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:30:57	DBB3:[RTL.SRC]FUDFWL.B32;9					Page 1-1
;
;05510  0056	! 0-19	- Use JSB linkage.  TNH 22-May-78
;05600  0057	!--

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:30:57	DBB3:[RTL.SRC]FUDFWL.B32;9					Page 2
;
;00100  0058	!
;00200  0059	! LINKAGES:
;00300  0060	!
;00500  0061	REQUIRE 'RTLIN:FLNK';		! Define all linkages
; %PRINT:	File: FLNK.B32; Version 1, edit 12, TNH 2-Aug-78
;00600  0283	
;00700  0284	!
;00800  0285	! TABLE OF CONTENTS:
;00900  0286	!
;01000  0287	
;01100  0288	FORWARD ROUTINE
;01200  0289		FOR$$UDF_WL0: JSB_UDF0 NOVALUE,	! UDF initialization
;01300  0290		FOR$$UDF_WL1: CALL_CCB NOVALUE,	! format one user I/O list element
;01400  0291		FOR$$UDF_WL9: JSB_UDF9 NOVALUE;	! UDF termination
;01500  0292	
;01600  0293	BUILTIN
;01700  0294		ACTUALCOUNT;		! Number of parameters passed
;01800  0295	!
;01900  0296	! INCLUDE FILES:
;02000  0297	!
;02100  0298		REQUIRE 'RTLML:FERR';		! FORTRAN error number definitions
; %PRINT:	Filename: FERR.MDL! Version 0, edit 36, TNH 19-June-78
;02200  0416		REQUIRE 'RTLML:FISB';		! I/O statement block (ISB) offsets 
; %PRINT:	File: FISB.MDL which produces FISB.B32! Version 1, EDIT 16, DGP 02-Jun-78
;02300  0625		REQUIRE 'RTLML:FLUB';		! Only needed to get LUB length!
; %PRINT:	File: FLUB.MDL which produces FLUB.B32! Version 0, edit 30, TNH, 17-June-78
;02400  0793		REQUIRE 'RTLIN:FMAC';		! Macros
; %PRINT:	Filename: FMAC.B32; Version 1, edit 29, TNH, 7-JUN-78
; %PRINT:	 REQUIRE FILE: LPSECT.B32, VERSION 01-5, TNH, 27-Jun-78
;02500  0973						! type codes
;02600  0974		LIBRARY	'RTLSTARLE';		! STARLET library for macros and symbols
;02700  0975	
;02800  0976	!
;02900  0977	! MACROS:
;03000  0978	!
;03100  0979	
;03200  0980	
;03300  0981	!
;03400  0982	! EQUATED SYMBOLS:
;03500  0983	!
;03600  0984	!	NONE
;03700  0985	
;03800  0986	
;03900  0987	!
;04000  0988	! PSECT DECLARATIONS:
;04100  0989	!
;04200  0990	
;04300  0991		DECLARE_PSECTS (FOR);	! declare PSECTs for FOR$ facility
;04400  0992	
;04500  0993	!
;04600  0994	! OWN STORAGE:
;04700  0995	!
;04800  0996	!	None
;04900  0997	!
;05000  0998	! EXTERNAL REFERENCES:

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:30:57	DBB3:[RTL.SRC]FUDFWL.B32;9					Page 2-1
;
;05100  0999	!
;05200  1000	
;05300  1001	EXTERNAL ROUTINE
;05400  1002	
;05500  1003	!    The following are general library routines available for any
;05600  1004	!    one's use (value is true if fits in field):
;05700  1005	
;05800  1006		FOR$CNV_OUT_L,		! FORTRAN L (Logical) output conversion
;05900  1007		FOR$CNV_OUT_I,		! FORTRAN I (integer) output conversion
;06000  1008		FOR$CNV_OUT_G,		! FORTRAN G (E/F) output conversion
;06100  1009					! output conversion
;06200  1010					! output conversion
;06300  1011	
;06400  1012		FOR$$REC_WSL0: JSB_REC0 NOVALUE,	! initialize list directed output
;06500  1013		FOR$$REC_WSL1: JSB_REC1 NOVALUE,	! write list directed
;06600  1014		FOR$$REC_WSL9: JSB_REC9 NOVALUE;	! end list directed output

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:30:57	DBB3:[RTL.SRC]FUDFWL.B32;9					Page 3
;
;00100  1015	GLOBAL ROUTINE FOR$$UDF_WL0
;00200  1016		: JSB_UDF0 NOVALUE =
;00300  1017	
;00400  1018	    BEGIN
;00500  1019	
;00600  1020	    EXTERNAL REGISTER
;00700  1021		CCB;
;00800  1022	
;00900  1023	    FOR$$REC_WSL0 ();
;01000  1024	
;01100  1025	    END;


							    .TITLE  FOR$$UDF_WL
							    .IDENT  \0-19\

							    .EXTRN  FOR$CNV_OUT_L, FOR$CNV_OUT_I, FOR$CNV_OUT_G, FOR$$REC_WSL0
							    .EXTRN  FOR$$REC_WSL1, FOR$$REC_WSL9

							    .PSECT  FOR$CODE,NOWRT,  SHR,  PIC,2

				     0000G 30 00000 FOR$$UDF_WL0::
							    BSBW    FOR$$REC_WSL0					      ; 1023
					   05 00003 	    RSB     							      ; 1015

; Routine Size:  4 bytes



; Bliss-32 10.1-416	Monday 21-AUG-1978 19:30:57	DBB3:[RTL.SRC]FUDFWL.B32;9					Page 4
;
;00100  1026	GLOBAL ROUTINE FOR$$UDF_WL1 (
;00200  1027		ELEM_TYPE,
;00300  1028		ELEM_SIZE,
;00400  1029		ELEM_ADR,
;00500  1030		FC_FLAG)
;00600  1031		: CALL_CCB NOVALUE =
;00700  1032	
;00800  1033	!++
;00900  1034	! FUNCTIONAL DESCRIPTION:
;01000  1035	!
;01100  1036	!	Write list-directed User Data Formatter.
;01200  1037	!	Accept an I/O element, format it, and put it in the record buffer.
;01300  1038	!	Calls record level processors to perform the actual I/O.
;01400  1039	!
;01410  1040	! CALLING SEQUENCE:
;01420  1041	!
;01430  1042	!	CALL FOR$$UDF_WL1 (elem_type.rlu.v, elem_size.rlu.v, elem_adr.rx.r [, fc_flag.rlu.v])
;01440  1043	!
;01500  1044	! FORMAL PARAMETERS:
;01600  1045	!
;01610  1046	!	ELEM_TYPE.rlu.v		Type code of user I/O list
;01620  1047	!				element. Form: ELEM_TYPE_x
;01630  1048	!				x = B,W,L,WU,LU,F,D,FC or T.
;01640  1049	!	ELEM_SIZE.rlu.v		Size of user I/O list element
;01650  1050	!				in addressable machine units
;01660  1051	!				If 0, this is end of I/O list call.
;01670  1052	!	ELEM_ADR.rx.r		Adr. of user I/O list element
;01680  1053	!				x = b, w, l, wu, lu, f, d, fc or t.
;01700  1054	!	[FC_FLAG.rlu.v]		If present:
;01800  1055	!				    0 - real part of COMPLEX number
;01900  1056	!				    1 - imaginary part of COMPLEX number
;02000  1057	!
;02100  1058	! IMPLICIT INPUTS:
;02200  1059	!
;02300  1060	!	NONE
;02400  1061	!
;02500  1062	! IMPLICIT OUTPUTS:
;02600  1063	!
;02700  1064	!	NONE
;02800  1065	!
;02900  1066	! ROUTINE VALUE:
;03000  1067	! COMPLETION CODES:
;03100  1068	!
;03200  1069	!	NONE
;03300  1070	!
;03400  1071	! SIDE EFFECTS:
;03500  1072	!
;03600  1073	!	NONE
;03700  1074	!
;03800  1075	!--
;03900  1076	
;04000  1077	    BEGIN
;04100  1078	
;04200  1079	    EXTERNAL REGISTER
;04300  1080		CCB: REF BLOCK[, BYTE];

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:30:57	DBB3:[RTL.SRC]FUDFWL.B32;9					Page 4-1
;
;04400  1081	
;04500  1082	    BIND
;04600  1083		FIELDSIZE =
;04700  1084		    UPLIT BYTE(
;04800  1085				2,	! WU
;04900  1086				2,	! LU
;05000  1087				0,	! not used
;05100  1088				5,	! B
;05200  1089				7,	! W
;05300  1090				12,	! L
;05400  1091				0,	! not used
;05500  1092				15,	! F
;05600  1093				25,	! D
;05700  1094				32 )	! FC
;05800  1095		    :VECTOR[, BYTE];
;05900  1096	    MAP
;06000  1097		ELEM_ADR: REF VECTOR;	! element is call-by-reference
;06100  1098	
;06200  1099	    LOCAL
;06300  1100		DIFF,			! number of bytes left in record buffer
;06400  1101		LELEM_TYPE,		! If first part of COMPLEX then FC else .ELEM_TYPE
;06500  1102		L;			! Field length of this element
;06600  1103	
;06700  1104	    ! If we're being called to write the first part of a COMPLEX number,
;06800  1105	    ! then change the ELEM_TYPE to COMPLEX.  If called for the second part
;06900  1106	    ! of a COMPLEX number then just return since the first part really
;07000  1107	    ! wrote both parts...
;07100  1108	    !-
;07200  1109	
;07300  1110	    LELEM_TYPE =
;07400  1111	    (IF ACTUALCOUNT() GTR (FC_FLAG - ELEM_TYPE)/%UPVAL
;07500  1112	    THEN
;07600  1113		BEGIN
;07700  1114		IF .FC_FLAG THEN RETURN;
;07800  1115		DSC$K_DTYPE_FC
;07900  1116		END
;08000  1117	    ELSE
;08100  1118		.ELEM_TYPE);
;08200  1119	
;08300  1120	    !+
;08400  1121	    ! compute field length
;08500  1122	    !-
;08600  1123	
;08700  1124	    L = (IF .LELEM_TYPE EQL DSC$K_DTYPE_T
;08800  1125	         THEN
;08900  1126			.ELEM_SIZE + 1	! leave room for prepended blank
;09000  1127		 ELSE
;09100  1128			.FIELDSIZE[.LELEM_TYPE - 3]);
;09200  1129	
;09300  1130	    !+
;09400  1131	    ! If there is not enough room in this record buffer for the element,
;09500  1132	    ! then write this buffer and start anew.
;09600  1133	    !-
;09700  1134	
;09800  1135	    IF .L GTR CH$DIFF (.CCB[ISB$A_BUF_END], .CCB[ISB$A_BUF_PTR])

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:30:57	DBB3:[RTL.SRC]FUDFWL.B32;9					Page 4-2
;
;09900  1136	    THEN
;10000  1137		FOR$$REC_WSL1 ();
;10100  1138	
;10200  1139	    !+
;10300  1140	    ! If the element is a string literal, then move it into the record.
;10400  1141	    !-
;10500  1142	
;10600  1143	    IF .LELEM_TYPE EQL DSC$K_DTYPE_T
;10700  1144	    THEN
;10800  1145		BEGIN
;10900  1146		LOCAL
;11000  1147		    P;				! Pointer to the string literal
;11100  1148	
;11200  1149		P = CH$PTR (.ELEM_ADR);
;11300  1150		CH_WCHAR_A (CCB[ISB$A_BUF_PTR]) = %C' ';
;11400  1151		L = .L - 1;
;11500  1152	
;11600  1153		!+
;11700  1154		! If the string is longer than the record buffer,
;11800  1155		! move in the part that fits and write the record.
;11900  1156		!-
;12000  1157	
;12100  1158		WHILE .L GTR (DIFF = CH$DIFF (.CCB[ISB$A_BUF_END], .CCB[ISB$A_BUF_PTR]))
;12200  1159		DO
;12300  1160		    BEGIN
;12400  1161		    CCB[ISB$A_BUF_PTR] = CH$MOVE (.DIFF, .P, .CCB[ISB$A_BUF_PTR]);
;12500  1162		    P = CH$PLUS (.P, .DIFF);
;12600  1163		    L = .L - .DIFF;
;12700  1164		    FOR$$REC_WSL1 ();
;12800  1165		    END;
;12900  1166	
;13000  1167		!+
;13100  1168		! move in the rest of the string.
;13200  1169		!-
;13300  1170	
;13400  1171		CCB[ISB$A_BUF_PTR] = CH$MOVE (.L, .P, .CCB[ISB$A_BUF_PTR]);
;13500  1172	
;13600  1173		END
;13700  1174	
;13800  1175	    ELSE
;13900  1176	
;14000  1177		BEGIN
;14100  1178	
;14200  1179		LOCAL
;14300  1180		    DSC: BLOCK[8, BYTE];		! static string descriptor for output field
;14400  1181	
;14500  1182		!+
;14600  1183		! Perform the appropriate conversions.
;14700  1184		!-
;14800  1185	
;14900  1186		IF .LELEM_TYPE EQL DSC$K_DTYPE_FC
;15000  1187		THEN
;15100  1188		    BEGIN
;15200  1189		    CH_WCHAR_A (CCB[ISB$A_BUF_PTR]) = %C' ';
;15300  1190		    CH_WCHAR_A (CCB[ISB$A_BUF_PTR]) = %C'(';

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:30:57	DBB3:[RTL.SRC]FUDFWL.B32;9					Page 4-3
;
;15400  1191	
;15500  1192		    DSC[DSC$A_POINTER] = .CCB[ISB$A_BUF_PTR];
;15600  1193		    DSC[DSC$W_LENGTH] = 14;
;15700  1194	
;15800  1195		    IF NOT FOR$CNV_OUT_G (ELEM_ADR[0], DSC, 7, 1)
;15900  1196		    THEN
;16000  1197			CCB[ISB$B_ERR_NO] = FOR$K_OUTCONERR;
;16100  1198	
;16200  1199		    CCB[ISB$A_BUF_PTR] = CH$PLUS (.CCB[ISB$A_BUF_PTR], 14);
;16300  1200	
;16400  1201		    CH_WCHAR_A (CCB[ISB$A_BUF_PTR]) = %C',';
;16500  1202	
;16600  1203		    DSC[DSC$A_POINTER] = .CCB[ISB$A_BUF_PTR];
;16700  1204	
;16800  1205		    IF NOT FOR$CNV_OUT_G (ELEM_ADR[1], DSC, 7, 1)
;16900  1206		    THEN
;17000  1207			CCB[ISB$B_ERR_NO] = FOR$K_OUTCONERR;
;17100  1208	
;17200  1209		    CCB[ISB$A_BUF_PTR] = CH$PLUS (.CCB[ISB$A_BUF_PTR], 14);
;17300  1210	
;17400  1211		    CH_WCHAR_A (CCB[ISB$A_BUF_PTR]) = %C')';
;17500  1212		    END
;17600  1213	
;17700  1214		ELSE
;17800  1215	
;17900  1216		    BEGIN
;18000  1217	
;18100  1218		    DSC[DSC$W_LENGTH] = .L;
;18200  1219		    DSC[DSC$A_POINTER] = .CCB[ISB$A_BUF_PTR];
;18300  1220	
;18400  1221		    IF NOT (
;18500  1222		    CASE .LELEM_TYPE FROM DSC$K_DTYPE_WU TO DSC$K_DTYPE_D OF
;18600  1223		    SET
;18700  1224		[ DSC$K_DTYPE_WU, DSC$K_DTYPE_LU]:
;18800  1225			FOR$CNV_OUT_L (.(.ELEM_ADR)<0, .ELEM_SIZE * %BPUNIT, 0>, DSC);
;18900  1226	
;19000  1227		[ DSC$K_DTYPE_B, DSC$K_DTYPE_W, DSC$K_DTYPE_L]:
;19100  1228			FOR$CNV_OUT_I (.(.ELEM_ADR)<0, .ELEM_SIZE * %BPUNIT, 1>, DSC);
;19200  1229	
;19300  1230		[ DSC$K_DTYPE_F, DSC$K_DTYPE_D]:
;19400  1231			BEGIN
;19500  1232			LOCAL
;19600  1233			    D_VALUE: VECTOR[2];	! holds double precision floating value
;19700  1234			D_VALUE[0] = .ELEM_ADR[0];
;19800  1235			D_VALUE[1] = (IF .ELEM_SIZE EQL %UPVAL
;19900  1236					THEN
;20000  1237					    0
;20100  1238					ELSE
;20200  1239					    .ELEM_ADR[1]);
;20300  1240			FOR$CNV_OUT_G(D_VALUE, DSC,
;20400  1241			    (IF .ELEM_TYPE EQL DSC$K_DTYPE_F
;20500  1242			     THEN
;20600  1243				7
;20700  1244			    ELSE
;20800  1245				16), 1)

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:30:57	DBB3:[RTL.SRC]FUDFWL.B32;9					Page 4-4
;
;20900  1246			END;
;21000  1247	
;21100  1248		[ INRANGE,
;21200  1249		 OUTRANGE ]:			! this can not happen
;21300  1250	
;21400  1251		    TES)
;21500  1252		    THEN
;21600  1253	
;21700  1254	
;21800  1255			CCB[ISB$B_ERR_NO] = FOR$K_OUTCONERR;
;21900  1256		    CCB[ISB$A_BUF_PTR] = CH$PLUS(.CCB[ISB$A_BUF_PTR], .L);
;22000  1257		    END;
;22100  1258	
;22200  1259		END;
;22300  1260	    RETURN;
;22400  1261	    END;



      20  19  0F  00  0C  07  05  00  02  02  00004 P.AAA:  .BYTE   2, 2, 0, 5, 7, 12, 0, 15, 25, 32			      ;
					      0000E	    .BLKB   2

						    FIELDSIZE=		P.AAA


					 07FC 00010 	    .ENTRY  FOR$$UDF_WL1, Save R2,R3,R4,R5,R6,R7,R8,R9,R10	      ; 1026
		         5A 	0000G  CF  9E 00012 	    MOVAB   FOR$CNV_OUT_G, R10					      ;
		         5E 	       10  C2 00017 	    SUBL2   #16, SP						      ;
		         03 	       6C  91 0001A 	    CMPB    (AP), #3						      ; 1111
				       0A  1B 0001D 	    BLEQU   2$							      ;
		         01 	  10   AC  E9 0001F 	    BLBC    FC_FLAG, 1$						      ; 1114
					   04 00023 	    RET     							      ;
		         52 	       0C  D0 00024 1$:     MOVL    #12, LELEM_TYPE					      ; 1111
				       04  11 00027 	    BRB     3$							      ;
		         52 	  04   AC  D0 00029 2$:     MOVL    ELEM_TYPE, LELEM_TYPE				      ;
				       53  D4 0002D 3$:     CLRL    R3							      ; 1124
		         0E 	       52  D1 0002F 	    CMPL    LELEM_TYPE, #14					      ;
				       09  12 00032 	    BNEQ    4$							      ;
				       53  D6 00034 	    INCL    R3							      ;
	   58 	    08   AC	       01  C1 00036 	    ADDL3   #1, ELEM_SIZE, L					      ; 1126
				       05  11 0003B 	    BRB     5$							      ; 1124
		         58 	  C0 AF42  9A 0003D 4$:     MOVZBL  FIELDSIZE-3[LELEM_TYPE], L				      ;
	   50 	    BC   AB	  B8   AB  C3 00042 5$:     SUBL3   -72(CCB), -68(CCB), R0				      ; 1135
		         50 	       58  D1 00048 	    CMPL    L, R0						      ;
				       03  15 0004B 	    BLEQ    6$							      ;
				     0000G 30 0004D 	    BSBW    FOR$$REC_WSL1					      ; 1137
		         56 	  B8   AB  9E 00050 6$:     MOVAB   -72(CCB), R6					      ; 1150
		         37 	       53  E9 00054 	    BLBC    R3, 9$						      ; 1143
		         59 	  0C   AC  D0 00057 	    MOVL    ELEM_ADR, P						      ; 1149
		         50 	       66  D0 0005B 	    MOVL    (R6), T						      ; 1150
				       66  D6 0005E 	    INCL    (R6)						      ;
		         60 	       20  90 00060 	    MOVB    #32, (T)						      ;
				       58  D7 00063 	    DECL    L							      ; 1151
	   57 	    BC   AB	  B8   AB  C3 00065 7$:     SUBL3   -72(CCB), -68(CCB), DIFF				      ; 1158
		         57 	       58  D1 0006B 	    CMPL    L, DIFF						      ;

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:30:57	DBB3:[RTL.SRC]FUDFWL.B32;9					Page 4-5
;
				       14  15 0006E 	    BLEQ    8$							      ;
      B8   BB	         69 	       57  28 00070 	    MOVC3   DIFF, (P), @-72(CCB)				      ; 1161
		    B8   AB	       53  D0 00075 	    MOVL    R3, -72(CCB)					      ;
		         59 	       57  C0 00079 	    ADDL2   DIFF, P						      ; 1162
		         58 	       57  C2 0007C 	    SUBL2   DIFF, L						      ; 1163
				     0000G 30 0007F 	    BSBW    FOR$$REC_WSL1					      ; 1164
				       E1  11 00082 	    BRB     7$							      ; 1158
      B8   BB	         69 	       58  28 00084 8$:     MOVC3   L, (P), @-72(CCB)					      ; 1171
		    B8   AB	       53  D0 00089 	    MOVL    R3, -72(CCB)					      ;
					   04 0008D 	    RET     							      ; 1143
		         0C 	       52  D1 0008E 9$:     CMPL    LELEM_TYPE, #12					      ; 1186
				       5D  12 00091 	    BNEQ    12$							      ;
		         50 	       66  D0 00093 	    MOVL    (R6), T						      ; 1189
				       66  D6 00096 	    INCL    (R6)						      ;
		         60 	       20  90 00098 	    MOVB    #32, (T)						      ;
		         50 	       66  D0 0009B 	    MOVL    (R6), T						      ; 1190
				       66  D6 0009E 	    INCL    (R6)						      ;
		         60 	       28  90 000A0 	    MOVB    #40, (T)						      ;
		    0C   AE	       66  D0 000A3 	    MOVL    (R6), DSC+4						      ; 1192
		    08   AE	       0E  B0 000A7 	    MOVW    #14, DSC						      ; 1193
				       01  DD 000AB 	    PUSHL   #1							      ; 1195
				       07  DD 000AD 	    PUSHL   #7							      ;
				  10   AE  9F 000AF 	    PUSHAB  DSC							      ;
				  0C   AC  DD 000B2 	    PUSHL   ELEM_ADR						      ;
		         6A 	       04  FB 000B5 	    CALLS   #4, FOR$CNV_OUT_G					      ;
		         04 	       50  E8 000B8 	    BLBS    R0, 10$						      ;
		    A4   AB	       3F  90 000BB 	    MOVB    #63, -92(CCB)					      ; 1197
		         66 	       0E  C0 000BF 10$:    ADDL2   #14, (R6)						      ; 1199
		         50 	       66  D0 000C2 	    MOVL    (R6), T						      ; 1201
				       66  D6 000C5 	    INCL    (R6)						      ;
		         60 	       2C  90 000C7 	    MOVB    #44, (T)						      ;
		    0C   AE	       66  D0 000CA 	    MOVL    (R6), DSC+4						      ; 1203
				       01  DD 000CE 	    PUSHL   #1							      ; 1205
				       07  DD 000D0 	    PUSHL   #7							      ;
				  10   AE  9F 000D2 	    PUSHAB  DSC							      ;
	   7E 	    0C   AC	       04  C1 000D5 	    ADDL3   #4, ELEM_ADR, -(SP)					      ;
		         6A 	       04  FB 000DA 	    CALLS   #4, FOR$CNV_OUT_G					      ;
		         04 	       50  E8 000DD 	    BLBS    R0, 11$						      ;
		    A4   AB	       3F  90 000E0 	    MOVB    #63, -92(CCB)					      ; 1207
		         66 	       0E  C0 000E4 11$:    ADDL2   #14, (R6)						      ; 1209
		         50 	       66  D0 000E7 	    MOVL    (R6), T						      ; 1211
				       66  D6 000EA 	    INCL    (R6)						      ;
		         60 	       29  90 000EC 	    MOVB    #41, (T)						      ;
					   04 000EF 	    RET     							      ; 1186
		    08   AE	       58  B0 000F0 12$:    MOVW    L, DSC						      ; 1218
		    0C   AE	       66  D0 000F4 	    MOVL    (R6), DSC+4						      ; 1219
	   08 	         03 	       52  CF 000F8 	    CASEL   LELEM_TYPE, #3, #8					      ; 1221
	 0071 	       0014 	     0014     000FC 13$:    .WORD   14$-13$,-						      ;
	 0029 	       0029 	     0029     00102		    14$-13$,-						      ;
	 003E 	       003E 	     0071     00108		    22$-13$,-						      ;
								    15$-13$,-						      ;
								    15$-13$,-						      ;
								    15$-13$,-						      ;
								    22$-13$,-						      ;
								    16$-13$,-						      ;

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:30:57	DBB3:[RTL.SRC]FUDFWL.B32;9					Page 4-6
;
								    16$-13$						      ;
				       5D  11 0010E 	    BRB     22$							      ; 1222
				  08   AE  9F 00110 14$:    PUSHAB  DSC							      ; 1225
	   50 	    08   AC	       03  78 00113 	    ASHL    #3, ELEM_SIZE, R0					      ;
      0C   BC	         50 	       00  EF 00118 	    EXTZV   #0, R0, @ELEM_ADR, -(SP)				      ;
				       7E     0011D									      ;
		  0000G  CF	       02  FB 0011E 	    CALLS   #2, FOR$CNV_OUT_L					      ;
				       45  11 00123 	    BRB     21$							      ;
				  08   AE  9F 00125 15$:    PUSHAB  DSC							      ; 1228
	   50 	    08   AC	       03  78 00128 	    ASHL    #3, ELEM_SIZE, R0					      ;
      0C   BC	         50 	       00  EE 0012D 	    EXTV    #0, R0, @ELEM_ADR, -(SP)				      ;
				       7E     00132									      ;
		  0000G  CF	       02  FB 00133 	    CALLS   #2, FOR$CNV_OUT_I					      ;
				       30  11 00138 	    BRB     21$							      ;
		         50 	  0C   AC  D0 0013A 16$:    MOVL    ELEM_ADR, R0					      ; 1234
		         6E 	       60  D0 0013E 	    MOVL    (R0), D_VALUE					      ;
		         04 	  08   AC  D1 00141 	    CMPL    ELEM_SIZE, #4					      ; 1235
				       04  12 00145 	    BNEQ    17$							      ;
				       50  D4 00147 	    CLRL    R0							      ;
				       04  11 00149 	    BRB     18$							      ;
		         50 	  04   A0  D0 0014B 17$:    MOVL    4(R0), R0						      ;
		    04   AE	       50  D0 0014F 18$:    MOVL    R0, D_VALUE+4					      ;
				       01  DD 00153 	    PUSHL   #1							      ; 1240
		         0A 	  04   AC  D1 00155 	    CMPL    ELEM_TYPE, #10					      ; 1241
				       04  12 00159 	    BNEQ    19$							      ;
				       07  DD 0015B 	    PUSHL   #7							      ;
				       02  11 0015D 	    BRB     20$							      ;
				       10  DD 0015F 19$:    PUSHL   #16							      ;
				  10   AE  9F 00161 20$:    PUSHAB  DSC							      ; 1240
				  0C   AE  9F 00164 	    PUSHAB  D_VALUE						      ;
		         6A 	       04  FB 00167 	    CALLS   #4, FOR$CNV_OUT_G					      ;
		         04 	       50  E8 0016A 21$:    BLBS    R0, 23$						      ;
		    A4   AB	       3F  90 0016D 22$:    MOVB    #63, -92(CCB)					      ; 1255
		         66 	       58  C0 00171 23$:    ADDL2   L, (R6)						      ; 1256
					   04 00174 24$:    RET     							      ; 1026

; Routine Size:  357 bytes



; Bliss-32 10.1-416	Monday 21-AUG-1978 19:30:57	DBB3:[RTL.SRC]FUDFWL.B32;9					Page 5
;
;00100  1262	GLOBAL ROUTINE FOR$$UDF_WL9
;00200  1263		: JSB_UDF9 NOVALUE =
;00300  1264	
;00400  1265	    BEGIN
;00500  1266	
;00600  1267	    EXTERNAL REGISTER
;00700  1268		CCB;
;00800  1269	
;00900  1270	    FOR$$REC_WSL9 ();
;01000  1271	
;01100  1272	    END;





				     0000G 30 00175 FOR$$UDF_WL9::
							    BSBW    FOR$$REC_WSL9					      ; 1270
					   05 00178 	    RSB     							      ; 1262

; Routine Size:  4 bytes


;01200  1273	
;01300  1274	END
;01400  1275	ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  FOR$CODE       	   377  NOWRT,  RD ,  EXE,  SHR,  LCL,  REL,  CON,  PIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]STARLET.L32;1		      2688        11         0       110





; Size:		365 code + 12 data bytes
; Run Time:	00:14.7
; Elapsed Time:	00:55.4

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:30:57									Page 5-1
;
; Memory Used:	260 pages
; Compilation Complete
