LIB$AST_IN_PROG - Inquire if AST in progress                     21-AUG-1978 18:56:53   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      86  DECLARATIONS
   (3)     118  LIB$AST_IN_PROG  - is AST in progress?
LIB$AST_IN_PROG - Inquire if AST in progress                     21-AUG-1978 18:56:53   VAX-11 MACRO X0.3-11               Page   1
0-4                                                                                                                              (1)

                                     0000     1 	.TITLE	LIB$AST_IN_PROG - Inquire if AST in progress
                                     0000     2 	.IDENT	/0-4/			; File: LIBASTINP.MAR
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ;			  COPYRIGHT (c) 1977 BY
                                     0000     6 ;	      DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
                                     0000     9 ; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
                                     0000    10 ; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
                                     0000    11 ; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
                                     0000    12 ; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
                                     0000    13 ; TRANSFERRED.
                                     0000    14 ;
                                     0000    15 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
                                     0000    16 ; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
                                     0000    17 ; CORPORATION.
                                     0000    18 ;
                                     0000    19 ; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
                                     0000    20 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
                                     0000    21 ;
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY: General Utility Library
                                     0000    25 ;
                                     0000    26 ; ABSTRACT:
                                     0000    27 ;
                                     0000    28 ;	Return SUCCESS (1) if an AST is active in the current mode.
                                     0000    29 ;
                                     0000    30 ; ENVIRONMENT: All Modes, AST Reentrant
                                     0000    31 ;
                                     0000    32 ;--
                                     0000    33 ; AUTHOR: Jonathan M. Taylor, CREATION DATE: 23-Jan-78
                                     0000    34 ;
                                     0000    35 ; MODIFIED BY:
                                     0000    36 ;
                                     0000    37 ;	JMT, 23-Jan-78 : VERSION 0
                                     0000    38 ; 01	- Original 
LIB$AST_IN_PROG - Inquire if AST in progress                     21-AUG-1978 18:56:53   VAX-11 MACRO X0.3-11               Page   2
0-4             DECLARATIONS                                                                                                     (2)

                                     0000    40 	.SBTTL	DECLARATIONS
                                     0000    41 
                                     0000    42 ;
                                     0000    43 ; EXTERNAL SYMBOLS:
                                     0000    44 ;
                                     0000    45 	.DSABL	GBL
                                     0000    46 	.EXTRN	LIB$STOP
                                     0000    47 	.EXTRN	LIB$_FATERRLIB
                                     0000    48 	.EXTRN	SYS$GETJPI
                                     0000    49 
                                     0000    50 ;
                                     0000    51 ; INCLUDE FILES:
                                     0000    52 ;
                                     0000    53 
                                     0000    54 ;
                                     0000    55 ; MACROS:
                                     0000    56 ;
                                     0000    57 	$JPIDEF				; define system service constants
                                     0000    58 
                                     0000    59 ;
                                     0000    60 ; EQUATED SYMBOLS:
                                     0000    61 ;	none
                                     0000    62 
                                     0000    63 ;
                                     0000    64 ; OWN STORAGE:
                                     0000    65 ;	none
                                     0000    66 
                                     0000    67 ;
                                     0000    68 ; PSECT DECLARATIONS:
                                     0000    69 ;
                                 00000000    70 	.PSECT LIB$CODE PIC, SHR, LONG, EXE, NOWRT
LIB$AST_IN_PROG - Inquire if AST in progress                     21-AUG-1978 18:56:53   VAX-11 MACRO X0.3-11               Page   3
0-4             LIB$AST_IN_PROG  - is AST in progress?                                                                           (3)

                                     0000    72 	.SBTTL	LIB$AST_IN_PROG  - is AST in progress?
                                     0000    73 
                                     0000    74 ;++
                                     0000    75 ; FUNCTIONAL DESCRIPTION:
                                     0000    76 ;
                                     0000    77 ;	Call system service GETJPI to get access modes with active
                                     0000    78 ;	ASTs.  Pick off the bit corresponding to the current-mode
                                     0000    79 ;	(taken from the PSL) and return it.
                                     0000    80 ;
                                     0000    81 ; CALLING SEQUENCE:
                                     0000    82 ;
                                     0000    83 ;	at_ast_level.wl.v = LIB$AST_IN_PROG
                                     0000    84 ;
                                     0000    85 ; INPUT PARAMETERS:
                                     0000    86 ;
                                     0000    87 ;	NONE
                                     0000    88 ;
                                     0000    89 ; IMPLICIT INPUTS:
                                     0000    90 ;
                                     0000    91 ;	NONE
                                     0000    92 ;
                                     0000    93 ; OUTPUT PARAMETERS:
                                     0000    94 ;
                                     0000    95 ;	NONE
                                     0000    96 ;
                                     0000    97 ; IMPLICIT OUTPUTS:
                                     0000    98 ;
                                     0000    99 ;	NONE
                                     0000   100 ;
                                     0000   101 ; FUNCTION VALUE:
                                     0000   102 ;
                                     0000   103 ;	Returns SUCCESS (1) if we're currently as AST level, otherwise 0.
                                     0000   104 ;
                                     0000   105 ;
                                     0000   106 ; SIDE EFFECTS:
                                     0000   107 ;
                                     0000   108 ;	NONE
                                     0000   109 ;
                                     0000   110 ;--
                               0000' 0000   111 	.ENTRY	LIB$AST_IN_PROG, 0
                          7E     D4  0002   112 	CLRL	-(SP)			; set up a one-item item-list
                          7E     7C  0004   113 	CLRQ	-(SP)			;	+--------------+
                       08 AE     DF  0006   114 	PUSHAL	8(SP)			;ITMLST:|_0300_|___4___|
                 03000004 8F     DD  0009   115 	PUSHL	#<JPI$_ASTACT@16>+4	;	|______*_______+---+
                                     000F   116 					;	|______0_______|   |
                                     000F   117 					;	|______0_______|   |
                                     000F   118 					;	|______0_______| <-+
            50            5E     D0  000F   119 	MOVL	SP, R0
                                     0012   120 	$GETJPI_S	ITMLST = (R0)
            16            50     E9  0025   121 	BLBC	R0, 10$			; branch if not successful
            50         10 AE     D0  0028   122 	MOVL	16(SP), R0		; R0 = bitvector by mode
                          51     DC  002C   123 	MOVPSL	R1
            51            08     9C  002E   124 	ROTL	#8, R1, R1
                          51         0031       
            51         FC 8F     8A  0032   125 	BICB	#-4, R1			; R1<0:7> = current mode
            51            51     8E  0036   126 	MNEGB	R1, R1			; R1 = 0,-1,-2,-3
            50            51     9C  0039   127 	ROTL	R1, R0, R0		; get proper flag into lsb
LIB$AST_IN_PROG - Inquire if AST in progress                     21-AUG-1978 18:56:53   VAX-11 MACRO X0.3-11               Page   4
0-4             LIB$AST_IN_PROG  - is AST in progress?                                                                           (3)

                          50         003C       
                                 04  003D   128 	RET
                                     003E   129 
                 00000000'8F     DD  003E   130 10$:	PUSHL	#LIB$_FATERRLIB
   00000000'EF            01     FB  0044   131 	CALLS	#1, LIB$STOP
                                 04  004B   132 	RET				; just to make the signaled PC
                                     004C   133 					; lie in this module!!
                                     004C   134 
                                     004C   135 
                                     004C   136 	.END
LIB$AST_IN_PROG - Inquire if AST in progress                     21-AUG-1978 18:56:53   VAX-11 MACRO X0.3-11               Page   5
SYMBOL TABLE                                                                                                                     (3)

$$T1           = 00000001            JPI$_STS       = 00000305            
BIT...         = 00000103            JPI$_TMBU      = 0000030B            
FOR$K_ERR_PREFX= 00000018            JPI$_TQCNT     = 00000315            
GBL...         = 00000000            JPI$_TQLM      = 00000410            
JPI$C_ADRTYPE  = 00000001            JPI$_UIC       = 00000304            
JPI$C_CTLTYPE  = 00000002            JPI$_USERNAME  = 00000202            
JPI$C_LISTEND  = 00000000            JPI$_VIRTPEAK  = 00000200            
JPI$C_PCBTYPE  = 00000003            JPI$_VOLUMES   = 00000205            
JPI$C_PHDTYPE  = 00000004            JPI$_WSAUTH    = 00000401            
JPI$_ACCOUNT   = 00000203            JPI$_WSPEAK    = 00000201            
JPI$_APTCNT    = 0000030A            JPI$_WSQUOTA   = 00000402            
JPI$_ASTACT    = 00000300            JPI$_WSSIZE    = 00000411            
JPI$_ASTCNT    = 0000030E            LIB$AST_IN_PROG  00000000 RG    03   
JPI$_ASTEN     = 00000301            LIB$STOP         ********   X   01   
JPI$_ASTLM     = 00000409            LIB$_FATERRLIB   ********   X   01   
JPI$_BIOCNT    = 0000030F            MTH$K_ERR_PREFX= 00000016            
JPI$_BIOLM     = 00000310            MTH__FLOOVEMAT = 00000058            
JPI$_BUFIO     = 0000040C            MTH__FLOUNDMAT = 00000059            
JPI$_BYTCNT    = 00000311            MTH__INVARG    = 00000051            
JPI$_BYTLM     = 0000031A            MTH__LOGZERNEG = 00000053            
JPI$_CPULIM    = 0000040D            MTH__SINSIGLOS = 00000057            
JPI$_CPUTIM    = 00000407            MTH__SQUROONEG = 00000054            
JPI$_CURPRIV   = 00000400            MTH__UNDEXP    = 00000052            
JPI$_DFPFC     = 00000406            MTH__WRONUMARG = 00000050            
JPI$_DFWSCNT   = 00000403            SYS$GETJPI       ********   X   01   
JPI$_DIOCNT    = 00000312            
JPI$_DIOLM     = 00000313            
JPI$_DIRIO     = 0000040B            
JPI$_EFCS      = 00000317            
JPI$_EFCU      = 00000318            
JPI$_EFWM      = 00000316            
JPI$_EXCVEC    = 00000100            
JPI$_FILCNT    = 00000314            
JPI$_FILLM     = 0000040F            
JPI$_FINALEXC  = 00000101            
JPI$_FREP0VA   = 00000404            
JPI$_FREP1VA   = 00000405            
JPI$_GPGCNT    = 0000030C            
JPI$_GRP       = 00000308            
JPI$_LASTADR   = 00000102            
JPI$_LASTCTL   = 00000207            
JPI$_LASTPCB   = 0000031D            
JPI$_LASTPHD   = 00000412            
JPI$_LOGINTIM  = 00000206            
JPI$_MEM       = 00000307            
JPI$_OWNER     = 00000303            
JPI$_PAGEFLTS  = 0000040A            
JPI$_PGFLQUOTA = 0000040E            
JPI$_PID       = 00000319            
JPI$_PPGCNT    = 0000030D            
JPI$_PRCCNT    = 0000031B            
JPI$_PRCLM     = 00000408            
JPI$_PRCNAM    = 0000031C            
JPI$_PRI       = 00000302            
JPI$_PRIB      = 00000309            
JPI$_PROCPRIV  = 00000204            
JPI$_STATE     = 00000306            
LIB$AST_IN_PROG - Inquire if AST in progress                     21-AUG-1978 18:56:53   VAX-11 MACRO X0.3-11               Page   6
PROGRAM SECTION SYNOPSIS                                                                                                         (3)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000000      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
LIB$CODE         0000004C      03       PIC   USR   CON   REL   LCL   SHR   EXE   RD  NOWRT LONG  


THERE WERE NO ERRORS OR WARNINGS.
23660. BYTES LEFT IN FREE MEMORY POOL.
1268. BYTES OF RECLAIMED MEMORY.
OBJ$:LIBASTINP,LIS$:LIBASTINP/-SP=LIB$:S/ML,SRC$:P,LIBASTINP
10 MLB DIR RDS - 165 GETS TO DEFINE 10 MACROS. 10 INTER. FILE WRITES. 
