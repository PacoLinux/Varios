FOR$INI_DES     ; FORTRAN array descriptor initialization        21-AUG-1978 18:55:25   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)     100  DECLARATIONS
   (5)     100  FOR$INI_DES1_R2		! One dimension array desc. in
   (8)     100  FOR$INI_DES2_R3		! Two dimension array desc. in
   (11)    100  FOR$INI_DESC_R6		! N dimension array desc. init
FOR$INI_DES     ; FORTRAN array descriptor initialization        21-AUG-1978 18:55:25   VAX-11 MACRO X0.3-11               Page   1
01-15                                                                                                                            (1)

                                     0000   100 	.TITLE	FOR$INI_DES	; FORTRAN array descriptor initialization
                                     0000   200 				; File: FORINIDES.MAR
                                     0000   300 	.IDENT	/01-15/		;
                                     0000   400 
                                     0000   500 ;
                                     0000   600 ; Copyright (C) 1976
                                     0000   700 ; Digital Equipment Corporation, Maynard, Massachusetts 01754
                                     0000   800 ;
                                     0000   900 ; This software is furnished under a license for use only on a single
                                     0000  1000 ; computer  system  and  may be copied only with the inclusion of the
                                     0000  1100 ; above copyright notice. This software, or any other copies thereof,
                                     0000  1200 ; may not be provided or otherwise made available to any other person
                                     0000  1300 ; except for use on such system and to one who agree to these license 
                                     0000  1400 ; terms.  Title to  and  ownership of the software shall at all times 
                                     0000  1500 ; remain in DEC.
                                     0000  1600 ;
                                     0000  1700 ; The information in the software is subject to change without notice
                                     0000  1800 ; and should  not  be construed  as a commitment by Digital Equipment 
                                     0000  1900 ; Corporation.
                                     0000  2000 ;
                                     0000  2100 ; DEC assumes  no  responsibility  for the use or  reliability of its
                                     0000  2200 ; software on equipment which is not supplied by DEC.
                                     0000  2300 ;
                                     0000  2400 ;++
                                     0000  2500 ; FACILITY: FORTRAN support library
                                     0000  2600 ;
                                     0000  2700 ; ABSTRACT:
                                     0000  2800 ;
                                     0000  2900 ;	FORTRAN support routines to initialize variable
                                     0000  3000 ;	dimensioned array descriptors at FORTRAN procedure entry time.
                                     0000  3100 ;	For speed the important special cases of 1 and 2 dimensions
                                     0000  3200 ;	are provided for as separate routines.
                                     0000  3300 ;
                                     0000  3400 ; ENVIRONMENT:	Any access mode--usually user mode, AST re-entrant
                                     0000  3500 ;
                                     0000  3600 ; AUTHOR:	Thomas N. Hastings, CREATION DATE: 1-Apr-77
                                     0000  3700 ;
                                     0000  3800 ; MODIFIED BY:
                                     0000  3900 ;	Thomas N. Hastings, 2-Apr-77: VERSION 01
                                     0000  4000 ; 01	- original version
                                     0000  4050 ; 01-15	- Call LIB$STOP directly.  TNH 20-Dec-77
                                     0000  4100 ;--
FOR$INI_DES     ; FORTRAN array descriptor initialization        21-AUG-1978 18:55:25   VAX-11 MACRO X0.3-11               Page   2
01-15           DECLARATIONS                                                                                                     (2)

                                     0000   100 	.SBTTL	DECLARATIONS
                                     0000   200 
                                     0000   300 ;
                                     0000   400 ; INCLUDE FILES:
                                     0000   500 ;
                                     0000   800 ;
                                     0000   900 ; EXTERNAL SYMBOLS:
                                     0000  1000 ;
                                     0000  1010 	.DSABL	GBL			; Declare all externals
                                     0000  1020 	.EXTRN	FOR$_ADJARRDIM		; 32-bit condition value for signal
                                     0000  1030 	.EXTRN	LIB$STOP		; SIGNAL_STOP error
                                     0000  1100 
                                     0000  1200 ;
                                     0000  1300 ; MACROS:
                                     0000  1400 ;
                                     0000  1500 	$DSCDEF			; define string descriptor symbols
                                     0000  1600 ;
                                     0000  1700 ; EQUATED SYMBOLS:
                                     0000  1800 ;
                           0000005D  0000  1850 	FOR__ADJARRDIM = 93		; FORTRAN error # - temporary
                                     0000  1900 
                           FFFFFFF8  0000  2000 	DSC$L_LOW_INDX = DSC$W_LENGTH-8	; place to store lowest index
                                     0000  2100 					; for use by FORTRAN with INDEX instr.
                           FFFFFFFC  0000  2210 	DSC$L_HIGH_INDX = DSC$L_LOW_INDX+4 ; place to store highest index
                                     0000  2220 					; for use by FORTRAN with INDEX instr.
                                     0000  2230 ; Note: the above are defined here, rather than in SRMDEF, since
                                     0000  2240 ; they are not part of the calling standard between modules.
                                     0000  2250 ; They are only a convention between the Common OTS and a single
                                     0000  2260 ; FORTRAN module.
                                     0000  2300 
                                     0000  2400 ;
                                     0000  2500 ; OWN STORAGE:
                                     0000  2600 ;
                                     0000  2700 ;	none
                                     0000  2800 ;
                                     0000  2900 ;
                                     0000  3000 ; PSECT DECLARATIONS:
                                     0000  3100 ;
                                     0000  3200 
                                 00000000  3300 	.PSECT	FOR$CODE PIC,SHR,LONG,EXE,NOWRT
                                     0000  3400 					; program section for FOR$ code
                                     0000  3500 
FOR$INI_DES     ; FORTRAN array descriptor initialization        21-AUG-1978 18:55:25   VAX-11 MACRO X0.3-11               Page   3
01-15           DECLARATIONS                                                                                                     (4)

                                     0000   100 
                                     0000   200  ;    C.10.5  Array Descriptor (DSC$K_CLASS_A) 
                                     0000   300   
                                     0000   400  ;  An array descriptor consists of 3 contiguous blocks. The first block 
                                     0000   500  ;  contains  the  descriptor  prototype  information and is part of every 
                                     0000   600  ;  array descriptor.  The second and third blocks are optional.   If  the 
                                     0000   700  ;  third block is present then so is the second. 
                                     0000   800   
                                     0000   900  ;    A complete array descriptor has the form: 
                                     0000  1000   
                                     0000  1100  ;       +-------+-------+---------------+ 
                                     0000  1200  ;       |   4   | DTYPE |    LENGTH     |  :Descriptor 
                                     0000  1300  ;       +-------+-------+---------------+ 
                                     0000  1400  ;       |            POINTER            | 
                                     0000  1500  ;       +-------+-------+---------------+ 
                                     0000  1600  ;       | DIMCT | AFLAGS|   Reserved    |          Block 1 - Prototype 
                                     0000  1700  ;       +-------+-------+---------------+ 
                                     0000  1800  ;       |            ARSIZE             | 
                                     0000  1900  ;       +-------------------------------+ 
                                     0000  2000  ; 
                                     0000  2100  ;       +-------------------------------+ 
                                     0000  2200  ;       |              A0               | 
                                     0000  2300  ;       +-------------------------------+ 
                                     0000  2400  ;       |              M1               | 
                                     0000  2500  ;       +-------------------------------+ 
                                     0000  2600  ;       |              ...              |          Block 2 - Multipliers 
                                     0000  2700  ;       +-------------------------------+ 
                                     0000  2800  ;       |            M(n-1)             | 
                                     0000  2900  ;       +-------------------------------+ 
                                     0000  3000  ;       |              Mn               | 
                                     0000  3100  ;       +-------------------------------+ 
                                     0000  3200  ; 
                                     0000  3300  ;       +-------------------------------+ 
                                     0000  3400  ;       |              L1               | 
                                     0000  3500  ;       +-------------------------------+ 
                                     0000  3600  ;       |              U1               | 
                                     0000  3700  ;       +-------------------------------+ 
                                     0000  3800  ;       |              ...              |          Block 3 - Bounds 
                                     0000  3900  ;       +-------------------------------+ 
                                     0000  4000  ;       |              Ln               | 
                                     0000  4100  ;       +-------------------------------+ 
                                     0000  4200  ;       |              Un               | 
                                     0000  4300  ;       +-------------------------------+ 
                                     0000  4400  ; 
                                     0000  4500  ; 
                                     0000  4600 ;
                                     0000  4700 ; PSECT DECLARATIONS:
                                     0000  4800 ;
                                     0000  4900 
                                 00000000  5000 	.PSECT	FOR$CODE PIC,SHR,LONG,EXE,NOWRT
                                     0000  5100 					; program section for FOR$ code
                                     0000  5200 
FOR$INI_DES     ; FORTRAN array descriptor initialization        21-AUG-1978 18:55:25   VAX-11 MACRO X0.3-11               Page   4
01-15           FOR$INI_DES1_R2  ! One dimension array desc. in                                                                  (5)

                                     0000   100 	.SBTTL	FOR$INI_DES1_R2		! One dimension array desc. init. 
                                     0000   200 
                                     0000   300 ;++
                                     0000   400 ; FUNCTIONAL DESCRIPTION:
                                     0000   500 ;
                                     0000   600 ;	Initialize one-dimension array descriptor entries based on the lower
                                     0000   700 ;	and upper subscripts limits.  The LOW_INDX and HIGH_INDX
                                     0000   800 ;	entries are FORTRAN specific for in-line subscript checking
                                     0000   900 ;	using the INDEX instruction and are outside the standardized
                                     0000  1000 ;	array descriptor paased between modules.
                                     0000  1100 ;
                                     0000  1200 ; CALLING SEQUENCE:
                                     0000  1300 ;
                                     0000  1400 ;	MOVA	address_of_descriptor, R0
                                     0000  1500 ;	JSB	FOR$INI_DES1_R2
                                     0000  1600 ;
                                     0000  1700 ; INPUT PARAMETERS:
                                     0000  1800 ;
                                     0000  1900 ;	R0 = address of array descriptor
                                     0000  2000 ;
                                     0000  2100 ; IMPLICIT INPUTS:
                                     0000  2200 ;
                                     0000  2300 ;	length of each data element - LENGTH
                                     0000  2400 ;	data type of each element - DTYPE
                                     0000  2500 ;	address of first allocated entry - POINTER
                                     0000  2600 ;	lower subscript limit - L1
                                     0000  2700 ;	upper subscript limit - U1
                                     0000  2800 ;
                                     0000  2900 ; OUTPUT PARAMETERS:
                                     0000  3000 ;
                                     0000  3100 ;	NONE
                                     0000  3200 ;
                                     0000  3300 ; IMPLICIT OUTPUTS:
                                     0000  3400 ;
                                     0000  3500 ;	multiplier - M1
                                     0000  3600 ;	array size in bytes - ARSIZE
                                     0000  3700 ;	highest linear index - HIGH_INDX
                                     0000  3800 ;	lowest linear index - LOW_INDX
                                     0000  3900 ;	address of A(0) - A0
                                     0000  4000 ;
                                     0000  4100 ; COMPLETION CODES:
                                     0000  4200 ;
                                     0000  4300 ;	NONE
                                     0000  4400 ;
                                     0000  4500 ; SIDE EFFECTS:
                                     0000  4600 ;
                                     0000  4700 ;	NONE
                                     0000  4800 ;
                                     0000  4900 ;--
FOR$INI_DES     ; FORTRAN array descriptor initialization        21-AUG-1978 18:55:25   VAX-11 MACRO X0.3-11               Page   5
01-15           FOR$INI_DES1_R2  ! One dimension array desc. in                                                                  (7)

                                     0000   100 
                                     0000   200 ; Register usage:
                                     0000   300 ;
                                     0000   400 ;	R0 = address of descriptor
                                     0000   500 ;	R1 = length of data element in bytes (if string, length of string)
                                     0000   600 ;	R2 = lower limit on subscript
                                     0000   700 
                           00000018  0000   800 	L_L1 = DSC$L_M1+4		; lower limit (L1) for one-dim
                           0000001C  0000   900 	L_U1 = L_L1+4			; upper limit (U1) for one-dim
                                     0000  1000 
                                     0000  1100 
                                     0000  1200 FOR$INI_DES1_R2::
            51            60     3C  0000  1300 	MOVZWL	DSC$W_LENGTH(R0), R1	; R1 = length of data element
                                     0003  1400 
         1C A0         18 A0     C3  0003  1500 	SUBL3	L_L1(R0), L_U1(R0), R2	; R2 = U1 - L1
                          52         0008       
                          52     D6  0009  1600 	INCL	R2			; R2 = M1 = U1 - L1 + 1
                          29     15  000B  1700 	BLEQ	ERROR			; error if 0 or negative
         14 A0            52     D0  000D  1800 	MOVL	R2, DSC$L_M1(R0)	; store M1
                                     0011  1900 
            51            52     C5  0011  2000 	MULL3	R2, R1, DSC$L_ARSIZE(R0) ; store array size in bytes 
                       0C A0         0014       
                                     0016  2100 
                                     0016  2200 
         F8 A0         18 A0     7D  0016  2300 	MOVQ	L_L1(R0), DSC$L_LOW_INDX(R0)	; store low and high linear index
                                     001B  2400 					; i.e., L1 and U1
                                     001B  2500 
         18 A0            51     C5  001B  2600 	MULL3	R1, L_L1(R0), R2		; R2 = low * length
                          52         001F       
         04 A0            52     C3  0020  2700 	SUBL3	R2, DSC$A_POINTER(R0), DSC$A_A0(R0) ; A0 = POINTER - low * length
                       10 A0         0024       
                                     0026  2800 
            0E         02 A0     91  0026  2900 	CMPB	DSC$B_DTYPE(R0), #DSC$K_DTYPE_T	; is this CHARACTER?
                          01     13  002A  3000 	BEQL	10$			; branch if yes
                                 05  002C  3100 	RSB				; return if not
                                     002D  3200 
         F8 A0            52     D0  002D  3300 10$:	MOVL	R2, DSC$L_LOW_INDX(R0)	; store scaled low index by length
         FC A0            51     C4  0031  3400 	MULL	R1, DSC$L_HIGH_INDX(R0)	; scale high index by length
                                 05  0035  3500 	RSB				; return
                                     0036  3600 
                                     0036  3700 ;+
                                     0036  3800 ; Here on dimensioning error.
                                     0036  3900 ; SIGNAL_STOP error FOR$_ADJARRDIM (93='ADJUSTABLE ARRAY DIMENSION ERROR')
                                     0036  4000 ;-
                                     0036  4100 
                 00000000'8F     DD  0036  4200 ERROR:	PUSHL	#FOR$_ADJARRDIM		; FORTRAN error #
   00000000'EF            01     FB  003C  4300 	CALLS	#1, LIB$STOP		; SIGNAL_STOP error
                                 05  0043  4500 	RSB				; should never come back
                                     0044  4600 
FOR$INI_DES     ; FORTRAN array descriptor initialization        21-AUG-1978 18:55:25   VAX-11 MACRO X0.3-11               Page   6
01-15           FOR$INI_DES2_R3  ! Two dimension array desc. in                                                                  (8)

                                     0044   100 	.SBTTL	FOR$INI_DES2_R3		! Two dimension array desc. init. 
                                     0044   200 
                                     0044   300 ;++
                                     0044   400 ; FUNCTIONAL DESCRIPTION:
                                     0044   500 ;
                                     0044   600 ;	Initialize two-dimension array descriptor entries based on the lower
                                     0044   700 ;	and upper subscripts limits and the address of the
                                     0044   800 ;	first allocated entry.  The LOW_INDX and HIGH_INDX
                                     0044   900 ;	entries are FORTRAN specific for in-line subscript checking
                                     0044  1000 ;	using the INDEX instruction and are outside the standardized
                                     0044  1100 ;	array descriptor paased between modules.
                                     0044  1200 ;
                                     0044  1300 ; CALLING SEQUENCE:
                                     0044  1400 ;
                                     0044  1500 ;	MOVA	address_of_descriptor, R0
                                     0044  1600 ;	JSB	FOR$INI_DES2_R3
                                     0044  1700 ;
                                     0044  1800 ; INPUT PARAMETERS:
                                     0044  1900 ;
                                     0044  2000 ;	R0 = address of array descriptor
                                     0044  2100 ;
                                     0044  2200 ; IMPLICIT INPUTS:
                                     0044  2300 ;
                                     0044  2400 ;	length of each data element - LENGTH
                                     0044  2500 ;	data type of each element - DTYPE
                                     0044  2600 ;	address of first allocated entry - POINTER
                                     0044  2700 ;	lower  1st subscript limit - L1
                                     0044  2800 ;	upper  1st subscript limit - U1
                                     0044  2900 ;	lower  2nd subscript limit - L2
                                     0044  3000 ;	upper  2nd subscript limit - U2
                                     0044  3100 ;
                                     0044  3200 ; OUTPUT PARAMETERS:
                                     0044  3300 ;
                                     0044  3400 ;	NONE
                                     0044  3500 ;
                                     0044  3600 ; IMPLICIT OUTPUTS:
                                     0044  3700 ;
                                     0044  3800 ;	1st dimension multiplier - M1
                                     0044  3900 ;	2nd dimension multiplier - M2
                                     0044  4000 ;	array size in bytes - ARSIZE
                                     0044  4100 ;	highest linear index - HIGH_INDX
                                     0044  4200 ;	lowest linear index - LOW_INDX
                                     0044  4300 ;	address of A(0) - A0
                                     0044  4400 ;
                                     0044  4500 ; COMPLETION CODES:
                                     0044  4600 ;
                                     0044  4700 ;	NONE
                                     0044  4800 ;
                                     0044  4900 ; SIDE EFFECTS:
                                     0044  5000 ;
                                     0044  5100 ;	NONE
                                     0044  5200 ;
                                     0044  5300 ;--
FOR$INI_DES     ; FORTRAN array descriptor initialization        21-AUG-1978 18:55:25   VAX-11 MACRO X0.3-11               Page   7
01-15           FOR$INI_DES2_R3  ! Two dimension array desc. in                                                                 (10)

                                     0044   100 
                                     0044   200 ; Register usage:
                                     0044   300 ;
                                     0044   400 ;	R0 = address of descriptor
                                     0044   500 ;	R1 = length of data element in bytes (if string, length of string)
                                     0044   600 ;	R2 = lower limit on subscript
                                     0044   700 ;	R3 = upper limit on subscript
                                     0044   800 
                           0000001C  0044   900 	L_L1 = DSC$L_M2+4		; lower limit 1 for 2-dim
                           00000020  0044  1000 	L_U1 = L_L1+4			; upper limit 1 for 2-dim
                           00000024  0044  1100 	L_L2 = L_L1+8			; lower limit 2 for 2-dim
                           00000028  0044  1200 	L_U2 = L_L1+12			; upper limit 2 for 2-dim
                                     0044  1300 
                                     0044  1400 
                                     0044  1500 FOR$INI_DES2_R3::
            51            60     3C  0044  1600 	MOVZWL	DSC$W_LENGTH(R0), R1	; R1 = length of data element
                                     0047  1700 
         20 A0         1C A0     C3  0047  1800 	SUBL3	L_L1(R0), L_U1(R0), R2 ; R2 = U1 - L1
                          52         004C       
                          52     D6  004D  1900 	INCL	R2			; R2 = M1 = U1 - L1 + 1
                          E5     15  004F  2000 	BLEQ	ERROR			; error if 0 or negative
         28 A0         24 A0     C3  0051  2100 	SUBL3	L_L2(R0), L_U2(R0), R3 ; R3 = U2 - L2
                          53         0056       
                          53     D6  0057  2200 	INCL	R3			; R3 = M2 = U2 - L2 + 1
                          DB     15  0059  2300 	BLEQ	ERROR			; error if multiplier is 0 or negative
         14 A0            52     7D  005B  2400 	MOVQ	R2, DSC$L_M1(R0)	; store M1 and M2
                                     005F  2500 
            53            52     C4  005F  2600 	MULL	R2, R3			; R3 = M1 * M2
            53            51     C5  0062  2700 	MULL3	R1, R3, DSC$L_ARSIZE(R0) ; store array size in bytes 
                       0C A0         0065       
                                     0067  2800 					; = data type length * M1 * M2
                                     0067  2900 
            52         28 A0     C5  0067  3000 	MULL3	L_U2(R0), R2, R3	; R3 = M1 * U2
                          53         006B       
            53         20 A0     C0  006C  3100 	ADDL	L_U1(R0), R3		; R3 = high index = U2*M1 + U1
                                     0070  3200 
            52         24 A0     C4  0070  3300 	MULL	L_L2(R0), R2		; R2 = M1*L2
            52         1C A0     C0  0074  3400 	ADDL	L_L1(R0), R2		; R2 = low index = L2*M1 + L1
         F8 A0            52     7D  0078  3500 	MOVQ	R2, DSC$L_LOW_INDX(R0)	; store low and high linear index
                                     007C  3600 
            52            51     C4  007C  3700 	MULL	R1, R2			; R2 = low * length
         04 A0            52     C3  007F  3800 	SUBL3	R2, DSC$A_POINTER(R0), DSC$A_A0(R0) ; A0 = POINTER - low * length
                       10 A0         0083       
                                     0085  3900 
            0E         02 A0     91  0085  4000 	CMPB	DSC$B_DTYPE(R0), #DSC$K_DTYPE_T	; is this CHARACTER?
                          01     13  0089  4100 	BEQL	10$			; branch if yes
                                 05  008B  4200 	RSB				; return if not
                                     008C  4300 
            53            51     C4  008C  4400 10$:	MULL	R1, R3			; R3 = scaled high by length
         F8 A0            52     7D  008F  4500 	MOVQ	R2, DSC$L_LOW_INDX(R0)	; store scaled low and high index
                                 05  0093  4600 	RSB				; return
FOR$INI_DES     ; FORTRAN array descriptor initialization        21-AUG-1978 18:55:25   VAX-11 MACRO X0.3-11               Page   8
01-15           FOR$INI_DESC_R6  ! N dimension array desc. init                                                                 (11)

                                     0094   100 	.SBTTL	FOR$INI_DESC_R6		! N dimension array desc. init. 
                                     0094   200 
                                     0094   300 ;++
                                     0094   400 ; FUNCTIONAL DESCRIPTION:
                                     0094   500 ;
                                     0094   600 ;	Initialize n-dimension array descriptor entries base on the lower
                                     0094   700 ;	and upper subscripts limits and the address of the
                                     0094   800 ;	first allocated entry.  The LOW_INDX and HIGH_INDX
                                     0094   900 ;	entries are FORTRAN specific for in-line subscript checking
                                     0094  1000 ;	using the INDEX instruction and are outside the standardized
                                     0094  1100 ;	array descriptor paased between modules.
                                     0094  1200 ;
                                     0094  1300 ; CALLING SEQUENCE:
                                     0094  1400 ;
                                     0094  1500 ;	MOVA	address_of_descriptor, R0
                                     0094  1600 ;	JSB	FOR$INI_DESC_R3
                                     0094  1700 ;
                                     0094  1800 ; INPUT PARAMETERS:
                                     0094  1900 ;
                                     0094  2000 ;	R0 = address of array descriptor
                                     0094  2100 ;
                                     0094  2200 ; IMPLICIT INPUTS:
                                     0094  2300 ;
                                     0094  2400 ;	length of each data element - LENGTH
                                     0094  2500 ;	data type of each element - DTYPE
                                     0094  2600 ;	address of first allocated entry - POINTER
                                     0094  2700 ;	lower  1st subscript limit - L1
                                     0094  2800 ;	upper  1st subscript limit - U1
                                     0094  2900 ;	lower  2nd subscript limit - L2
                                     0094  3000 ;	upper  2nd subscript limit - U2
                                     0094  3100 ;	..
                                     0094  3200 ;	lower  nth subscript limit - Ln
                                     0094  3300 ;	upper  nth subscript limit - Un
                                     0094  3400 ;
                                     0094  3500 ; OUTPUT PARAMETERS:
                                     0094  3600 ;
                                     0094  3700 ;	NONE
                                     0094  3800 ;
                                     0094  3900 ; IMPLICIT OUTPUTS:
                                     0094  4000 ;
                                     0094  4100 ;	1st dimension multiplier - M1
                                     0094  4200 ;	..
                                     0094  4300 ;	nth dimension multiplier - Mn
                                     0094  4400 ;	highest linear index - HIGH_INDX
                                     0094  4500 ;	lowest linear index - LOW_INDX
                                     0094  4600 ;	address of A(0) - A0
                                     0094  4700 ;
                                     0094  4800 ; COMPLETION CODES:
                                     0094  4900 ;
                                     0094  5000 ;	NONE
                                     0094  5100 ;
                                     0094  5200 ; SIDE EFFECTS:
                                     0094  5300 ;
                                     0094  5400 ;	NONE
                                     0094  5500 ;
                                     0094  5600 ;--
FOR$INI_DES     ; FORTRAN array descriptor initialization        21-AUG-1978 18:55:25   VAX-11 MACRO X0.3-11               Page   9
01-15           FOR$INI_DESC_R6  ! N dimension array desc. init                                                                 (12)

                                     0094   100 ; Register usage:
                                     0094   200 ;
                                     0094   300 ;	R0 = address of descriptor
                                     0094   400 ;	R1 = length of data element in bytes (if string, length of string)
                                     0094   500 ;	R2 = Mi then partial product * Mi + Li
                                     0094   600 ;	R3 = accumulated product of Mi, then partial product * Mi + Ui
                                     0094   700 ;	R4 = pointer to multipliers (M1...Mn)
                                     0094   800 ;	R5 = pointer to lower/upper subscript limits (L1, U1, ..., Ln, Un)
                                     0094   900 ;	R6 = no. of dimensions
                                     0094  1000 
                                     0094  1100 FOR$INI_DESC_R6::
            51            60     3C  0094  1200 	MOVZWL	DSC$W_LENGTH(R0), R1	; R1 = length of data element
            54         14 A0     DE  0097  1300 	MOVAL	DSC$L_M1(R0), R4	; R4 = adr. of M1
            56         0B A0     9A  009B  1400 	MOVZBL	DSC$B_DIMCT(R0), R6	; R6 = dimension count
            55            6446   DE  009F  1500 	MOVAL	(R4)[R6], R5		; R5 = adr. of L1
            53            01     D0  00A3  1600 	MOVL	#1, R3			; R3 = initial array size in bytes
                                     00A6  1700 
            85            85     C3  00A6  1800 10$:	SUBL3	(R5)+, (R5)+, R2 	; R2 = Ui - Li
                          52         00A9       
                          52     D6  00AA  1900 	INCL	R2			; R2 = Mi = Ui - Li + 1
                          88     15  00AC  2000 	BLEQ	ERROR			; error if 0 or negative
            84            52     D0  00AE  2100 	MOVL	R2, (R4)+		; store Mi
            53            52     C4  00B1  2200 	MULL	R2, R3			; R3 = accumulated product of Mi
            EF            56     F5  00B4  2300 	SOBGTR	R6, 10$			; loop for each dimension
                                     00B7  2400 
            53            51     C5  00B7  2500 	MULL3	R1, R3, DSC$L_ARSIZE(R0) ; store array size in bytes 
                       0C A0         00BA       
                                     00BC  2600 					; = data type length * M1 * M2
                                     00BC  2700 
            54            04     C2  00BC  2800 	SUBL	#4, R4			; R4 = address Mn, so skip Mn next loop
            56         0B A0     9A  00BF  2900 	MOVZBL	DSC$B_DIMCT(R0), R6	; R6 = no. of dimensions
            52            75     7D  00C3  3000 	MOVQ	-(R5), R2		; R2/R3 = Ln/Un
                          0C     11  00C6  3100 	BRB	30$			; skip Mn
                                     00C8  3200 
            53            74     C4  00C8  3300 20$:	MULL	-(R4), R3		; R3 = partial product * Mi
            53            75     C0  00CB  3400 	ADDL	-(R5), R3		; R3 = partial product * Mi + Ui
            52            64     C4  00CE  3500 	MULL	(R4), R2		; R2 = partial product * Mi
            52            75     C0  00D1  3600 	ADDL	-(R5), R2		; R2 = partial product * Mi + Li
            F1            56     F5  00D4  3700 30$:	SOBGTR	R6, 20$			; loop no. of dimensions-1
                                     00D7  3800 
         F8 A0            52     7D  00D7  3900 	MOVQ	R2, DSC$L_LOW_INDX(R0)	; store low and high linear index
                                     00DB  4000 
            52            51     C4  00DB  4100 	MULL	R1, R2			; R2 = low * length
         04 A0            52     C3  00DE  4200 	SUBL3	R2, DSC$A_POINTER(R0), DSC$A_A0(R0) ; A0 = POINTER - low * length
                       10 A0         00E2       
                                     00E4  4300 
            0E         02 A0     91  00E4  4400 	CMPB	DSC$B_DTYPE(R0), #DSC$K_DTYPE_T ; is this CHARACTER?
                          01     13  00E8  4500 	BEQL	40$			; branch if yes
                                 05  00EA  4600 	RSB				; return if not
                                     00EB  4700 
            53            51     C4  00EB  4800 40$:	MULL	R1, R3			; R3 = scaled high by length
         F8 A0            52     7D  00EE  4900 	MOVQ	R2, DSC$L_LOW_INDX(R0)	; store scaled low and high index
                                 05  00F2  5000 	RSB				; return
                                     00F3  5100 	.END
FOR$INI_DES     ; FORTRAN array descriptor initialization        21-AUG-1978 18:55:25   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                    (12)

BIT...         = 00000008            DSC$K_D_BLN      00000008            
DSC$A_A0         00000010            DSC$K_JI_BLN     0000000C            
DSC$A_FRAME      00000008            DSC$K_J_BLN      00000008            
DSC$A_POINTER    00000004            DSC$K_PI_BLN     0000000C            
DSC$B_AFLAGS     0000000A            DSC$K_P_BLN      00000008            
DSC$B_CLASS      00000003            DSC$K_S_BLN      00000008            
DSC$B_DIMCT      0000000B            DSC$K_Z_BLN      00000008            
DSC$B_DTYPE      00000002            DSC$L_ARSIZE     0000000C            
DSC$C_D_BLN      00000008            DSC$L_HIGH_INDX= FFFFFFFC            
DSC$C_JI_BLN     0000000C            DSC$L_LOW_INDX = FFFFFFF8            
DSC$C_J_BLN      00000008            DSC$L_M1         00000014            
DSC$C_PI_BLN     0000000C            DSC$L_M2         00000018            
DSC$C_P_BLN      00000008            DSC$S_FL_BOUNDS= 00000001            
DSC$C_S_BLN      00000008            DSC$S_FL_COEFF = 00000001            
DSC$C_Z_BLN      00000008            DSC$S_FL_COLUMN= 00000001            
DSC$K_CLASS_A  = 00000004            DSC$V_FL_BOUNDS= 00000007            
DSC$K_CLASS_D  = 00000002            DSC$V_FL_COEFF = 00000006            
DSC$K_CLASS_J  = 00000007            DSC$V_FL_COLUMN= 00000005            
DSC$K_CLASS_JI = 00000008            DSC$W_LENGTH     00000000            
DSC$K_CLASS_P  = 00000005            DSC$W_MAXLEN     00000008            
DSC$K_CLASS_PI = 00000006            ERROR            00000036 R     03   
DSC$K_CLASS_S  = 00000001            FOR$INI_DES1_R2  00000000 RG    03   
DSC$K_CLASS_V  = 00000003            FOR$INI_DES2_R3  00000044 RG    03   
DSC$K_CLASS_Z  = 00000000            FOR$INI_DESC_R6  00000094 RG    03   
DSC$K_DTYPE_B  = 00000006            FOR$K_ERR_PREFX= 00000018            
DSC$K_DTYPE_BU = 00000002            FOR$_ADJARRDIM   ********   X   01   
DSC$K_DTYPE_D  = 0000000B            FOR__ADJARRDIM = 0000005D            
DSC$K_DTYPE_DC = 0000000D            GBL...         = 00000000            
DSC$K_DTYPE_DPC= 000000B9            LIB$STOP         ********   X   01   
DSC$K_DTYPE_EOM= 000000BD            L_L1           = 0000001C            
DSC$K_DTYPE_EOR= 000000BF            L_L2           = 00000024            
DSC$K_DTYPE_F  = 0000000A            L_U1           = 00000020            
DSC$K_DTYPE_FC = 0000000C            L_U2           = 00000028            
DSC$K_DTYPE_FLD= 000000B7            MTH$K_ERR_PREFX= 00000016            
DSC$K_DTYPE_L  = 00000008            MTH__FLOOVEMAT = 00000058            
DSC$K_DTYPE_LBL= 000000BA            MTH__FLOUNDMAT = 00000059            
DSC$K_DTYPE_LU = 00000004            MTH__INVARG    = 00000051            
DSC$K_DTYPE_MOD= 000000BC            MTH__LOGZERNEG = 00000053            
DSC$K_DTYPE_NL = 00000010            MTH__SINSIGLOS = 00000057            
DSC$K_DTYPE_NLO= 00000011            MTH__SQUROONEG = 00000054            
DSC$K_DTYPE_NR = 00000012            MTH__UNDEXP    = 00000052            
DSC$K_DTYPE_NRO= 00000013            MTH__WRONUMARG = 00000050            
DSC$K_DTYPE_NU = 0000000F            
DSC$K_DTYPE_NZ = 00000014            
DSC$K_DTYPE_P  = 00000015            
DSC$K_DTYPE_PCT= 000000B8            
DSC$K_DTYPE_Q  = 00000009            
DSC$K_DTYPE_QU = 00000005            
DSC$K_DTYPE_RTN= 000000BE            
DSC$K_DTYPE_SLB= 000000BB            
DSC$K_DTYPE_T  = 0000000E            
DSC$K_DTYPE_V  = 00000001            
DSC$K_DTYPE_W  = 00000007            
DSC$K_DTYPE_WU = 00000003            
DSC$K_DTYPE_Z  = 00000000            
DSC$K_DTYPE_ZEM= 00000017            
DSC$K_DTYPE_ZI = 00000016            
FOR$INI_DES     ; FORTRAN array descriptor initialization        21-AUG-1978 18:55:25   VAX-11 MACRO X0.3-11               Page  11
PROGRAM SECTION SYNOPSIS                                                                                                        (12)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            0000001C      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
FOR$CODE         000000F3      03       PIC   USR   CON   REL   LCL   SHR   EXE   RD  NOWRT LONG  


THERE WERE NO ERRORS OR WARNINGS.
22734. BYTES LEFT IN FREE MEMORY POOL.
1890. BYTES OF RECLAIMED MEMORY.
OBJ$:FORINIDES,LIS$:FORINIDES/-SP=LIB$:S/ML,SRC$:P,FORINIDES
5 MLB DIR RDS - 176 GETS TO DEFINE 8 MACROS. 9 INTER. FILE WRITES. 
