
; Bliss-32 10.1-416	Monday 21-AUG-1978 19:12:55	DBB3:[RTL.SRC]CSETST.B32;15					Page 1
;
;00100  0001	MODULE COM$$ERRSET_TST (		! FORTRAN compatibility error set and test (ERRTST/ERRSET) 
;00200  0002		IDENT = '1-12',		! File: CSETST.B32
;00300  0003		LINKAGE (FORTRAN)	! Call-by-reference
;00400  0004			) =
;00500  0005	BEGIN
;00600  0006	
;00700  0007	!
;00800  0008	!			  COPYRIGHT (c) 1977 BY
;00900  0009	!	      DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;01000  0010	!
;01100  0011	! THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
;01200  0012	! ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
;01300  0013	! INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
;01400  0014	! COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
;01500  0015	! OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
;01600  0016	! TRANSFERRED.
;01700  0017	!
;01800  0018	! THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
;01900  0019	! AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
;02000  0020	! CORPORATION.
;02100  0021	!
;02200  0022	! DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
;02300  0023	! SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;02400  0024	!
;02500  0025	
;02600  0026	!++
;02700  0027	! FACILITY:  FORTRAN compatibility Library
;02800  0028	!
;02900  0029	! ABSTRACT:
;03000  0030	!
;03100  0031	!	FORTRAN compatibility error set and test and condition handler.
;03200  0032	!	FOR$$COM_HANDLE performs default error handling
;03300  0033	!	which creates an environment compatible with the PDP-11
;03400  0034	!	FORTRAN IV-PLUS error environment.
;03500  0035	!	This environment is only created if the user has a:
;03600  0036	!	CALL ERRTST or CALL ERRSET in his program.
;03700  0037	!
;03800  0038	! ENVIRONMENT:  User Mode - AST re-entrant
;03900  0039	!
;04000  0040	! AUTHOR:  Thomas N. Hastings, CREATION DATE:  14-Dec-1977
;04100  0041	!
;04200  0042	! MODIFIED BY:
;04300  0043	!
;04400  0044	! 	Thomas N. Hastings, 14-Dec-1977: VERSION 0
;04500  0045	! 00-01	- original
;04600  0046	! 00-10	- Call back with indirect.  TNH 3-Jan-78.
;04700  0047	! 00-14	- PSECT F4PCOMPAT$CODE.  TNH 5-Jan-78.
;04800  0048	! 00-15	- Fix MAXLIM.  TNH 5-Jan-78.
;04900  0049	! 00-16	- Down count ERROR_COUNT.  TNH 6-Jan-78
;05000  0050	! 00-17	- Math errors are continue type.  TNH 6-Jan-78
;05100  0051	! 00-21	- remove debugging printing.  TNH 9-Jan-78
;05200  0052	!	Jonathan M. Taylor, 12-Jan-78: VERSION 0
;05300  0053	! 1-1	- original; Made modules COM$ERRSET, COM$ERRTST, and COM$$ERRSET_TST
;05400  0054	!	  from old module COM$ERRSET_TST.  JMT 12-Jan-78
;05500  0055	! 1-3	- Fix bug (remove a dot!).  JMT 18-Jan-78

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:12:55	DBB3:[RTL.SRC]CSETST.B32;15					Page 1-1
;
;05600  0056	! 1-04	- Change to STARLET library. DGP 20-Apr-78
;05700  0057	! 1-05	- Change REQUIRE files for VAX system build.  DGP 28-Apr-78
;05800  0058	! 1-06	- Change STARLET to RTLSTARLE to avoid conflicts.  DGP 1-May-78
;05810  0059	! 1-07	- Declare PSECT CONCATENATE, GLOBAL, ALIGN(2).  TNH 10-June-78
;05820  0060	! 1-08	- Change SS$_ARITH to SS$_INTOVF...SS$_SUBRNG.  TNH 19-June-78
;05830  0061	! 1-10	- Remove EXTERNAL SS$_INTOVF, SS$_SUBRNG.  TNH 19-June-78
;05840  0062	! 1-11	- Declare EXTERNAL SS$_INTOVF, SS$_SUBRNG.  TNH 4-July-78
;05850  0063	! 1-12	- Remove EXTERNAL SS$_INTOVF, SS$_SUBRNG.  TNH 11-July-78
;05860  0064	!	  Cannot have with SYS$LIBRARY:STARLET.
;05900  0065	!--

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:12:55	DBB3:[RTL.SRC]CSETST.B32;15					Page 2
;
;00100  0066	!
;00200  0067	! TABLE OF CONTENTS:
;00300  0068	!
;00400  0069	
;00500  0070	FORWARD ROUTINE
;00600  0071		COM_STARTUP,		! Compatibility startup routine
;00700  0072		COM_HANDLER;		! FORTRAN compatibility error handler
;00800  0073	
;00900  0074	!
;01000  0075	! INCLUDE FILES:
;01100  0076	!
;01200  0077		REQUIRE 'RTLIN:CEST';		! Common ERRTST, ERRSET macros
; %PRINT:	File: CEST.B32; Version 0, edit 1, JMT 12-Jan-78
;01300  0116		REQUIRE 'RTLML:FERR';		! FORTRAN error numbers
; %PRINT:	Filename: FERR.MDL! Version 0, edit 36, TNH 19-June-78
;01400  0234		REQUIRE 'RTLIN:FMAC';		! Define macros
; %PRINT:	Filename: FMAC.B32; Version 1, edit 29, TNH, 7-JUN-78
; %PRINT:	 REQUIRE FILE: LPSECT.B32, VERSION 01-5, TNH, 27-Jun-78
;01500  0414		REQUIRE	'RTLML:FPAR';		! Signal srglist offsets
; %PRINT:	File: FPAR.MDL! version 0, edit 11, TNH, 30-May-78
;01600  0516		REQUIRE 'RTLIN:ODBG';		! Debugging macros
; %PRINT:	Filename: NODBG.B32; Version 0, edit 20, JMT, 17-Jan-78
;01700  0592		REQUIRE 'RTLML:MERR';		! Math library error numbers
; %PRINT:	Filename: MERR.MDL! Version 0, edit 4, TNH 30-Jan-78
;01800  0638		LIBRARY 'RTLSTARLE';	! STARLET library for macros and symbols
;01900  0639	!
;02000  0640	! MACROS:
;02100  0641	!	None
;02200  0642	
;02300  0643	! EQUATED SYMBOLS:
;02400  0644	!
;02500  0645	
;02600  0646	LITERAL
;02650  0647		S_SEVERITY = 3,			! size of condition value severity field
;02700  0648		K_ERROR_LIMIT = 15;		! initial image error count limit
;02800  0649	
;02900  0650	!
;03000  0651	! OWN STORAGE:
;03100  0652	!
;03200  0653	!
;03300  0654	!   PSECT DECLARATIONS:
;03400  0655	!
;03500  0656	    PSECT
;03600  0657		PLIT = LIB$INITIALIZE (READ, NOWRITE, NOEXECUTE, NOSHARE, NOPIC,
;03610  0658		    CONCATENATE, GLOBAL, ALIGN(2), ADDRESSING_MODE (GENERAL);
;03700  0659	
;03800  0660	    !+
;03900  0661	    ! Make LIB$INITIALIZE PSECT contribution so LIBINITIALIZE will call
;04000  0662	    ! COM_STARTUP which will setup default handler and co-routine back.
;04100  0663	    ! Don't use LIB$INITIALIZD_ PSECT, since that for Common Run-time library standard features.
;04200  0664	    !-
;04300  0665	
;04400  0666		BIND VECT = UPLIT (COM_STARTUP);
;04500  0667	
;04600  0668	    !+

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:12:55	DBB3:[RTL.SRC]CSETST.B32;15					Page 2-1
;
;04700  0669	    ! Now declare usual PSECTs
;04800  0670	    !-
;04900  0671	
;05000  0672		DECLARE_PSECTS (F4PCOMPAT);		! declare PSECTs for F4PCOMPAT$ facility
;05100  0673							! Keep separate from sharable library
;05200  0674	
;05300  0675	GLOBAL
;05400  0676		COM$$ERRORCOUNT: INITIAL (K_ERROR_LIMIT) VOLATILE;			! Image error count limit.
;05500  0677							! Decremented  by COM_HANDLER.
;05600  0678							! EXIT on continuable error if 0.
;05700  0679	
;05800  0680	!+
;05900  0681	!	Define FORTRAN compatibility error byte table
;06000  0682	!	One byte per FORTRAN error number.
;06100  0683	!
;06200  0684	!	Define macro to generate byte data for initializing OWN COM$$ERR_TAB.
;06300  0685	!-
;06400  0686	
;06500  0687	MACRO
;06600  0688		A (OCCURRED,		! error occurred since last CALL ERRTST
;06700  0689		   EREQ_ALLOW,		! ERR= allowed
;06800  0690		   CONT_ALLOW,		! continue allowed
;06900  0691		   LOG,			! print error message
;07000  0692		   CONT_TYPE,		! 1 = take ERR= if present, else EXIT
;07100  0693					! 0 = continue
;07200  0694		   COUNT,		! count against image limit
;07300  0695		   CONTINUE) =		! 1 = continuable (or ERR=), 0 = EXIT
;07400M 0696			(OCCURRED^7 + EREQ_ALLOW^6 + CONT_ALLOW^5 +
;07500M 0697			LOG^3 + CONT_TYPE^2 + COUNT^1 + CONTINUE) %;
;07600  0698	
;07700  0699	!+
;07800  0700	! Statically allocate a byte table, one byte for each FORTRAN error number
;07900  0701	! Each byte contains the error control status bits.
;08000  0702	!-
;08100  0703	
;08200  0704	GLOBAL
;08300  0705	    COM$$ERR_TAB: BLOCKVECTOR[FOR$K_MAX_ERR+1, 1, BYTE] INITIAL ( BYTE (
;08400  0706	
;08500  0707		!+
;08600  0708		! O E C L C C C
;08700  0709		! C R O O O O O
;08800  0710		! C E N G N U N
;08900  0711		! U Q T   T N T
;09000  0712		! R _ _   _ T I
;09100  0713		! R A A   T   N
;09200  0714		! E L L   Y   U
;09300  0715		! D L L   P   E
;09400  0716		!   O O   E
;09500  0717		!   W W
;09600  0718		!-
;09700  0719	
;09800  0720		0,			! 0
;09900  0721		A(0,1,0,1,1,1,1),	! NOTFORSPE,	1	! NOT A FORTRAN-SPECIFIC ERROR
;10000  0722					! Used as a catch-all error number
;10100  0723					! for error other than FOR$ and MTH$

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:12:55	DBB3:[RTL.SRC]CSETST.B32;15					Page 2-2
;
;10200  0724		REP 20-1-1 OF BYTE (0),	! skip 2-19
;10300  0725		A(0,1,0,1,1,1,1),	! REWERR,	20	! REWIND ERROR
;10400  0726		A(0,1,0,1,1,1,1),	! DUPFILSPE,	21	! DUPLICATE FILE SPECIFICATIONS
;10500  0727		A(0,1,0,1,1,1,1),	! INPRECTOO,	22	! INPUT RECORD TOO LONG
;10600  0728		A(0,1,0,1,1,1,1),	! BACERR,	23	! BACKSPACE ERROR
;10700  0729		A(0,1,0,1,1,1,1),	! ENDDURREA,	24	! END-OF-FILE DURING READ
;10800  0730		A(0,1,0,1,1,1,1),	! RECNUMOUT,	25	! RECORD NUMBER OUTSIDE RANGE
;10900  0731		A(0,1,0,1,1,1,1),	! OPEDEFREQ,	26	! OPEN OR DEFINEFILE REQUIRED TO SPECIFY DIRECT ACCESS
;11000  0732		A(0,1,0,1,1,1,1),	! MORONEREC,	27	! MORE THAN ONE RECORD IN I/O STATEMENT
;11100  0733		A(0,1,0,1,1,1,1),	! CLOERR,	28	! CLOSE ERROR
;11200  0734		A(0,1,0,1,1,1,1),	! FILNOTFOU,	29	! FILE NOT FOUND
;11300  0735		A(0,1,0,1,1,1,1),	! OPEFAI,	30	! OPEN FAILURE
;11400  0736		A(0,1,0,1,1,1,1),	! MIXFILACC,	31	! MIXED FILE ACCESS MODES
;11500  0737		A(0,1,0,1,1,1,1),	! INVLOGUNI,	32	! INVALID LOGICAL UNIT NUMBER
;11600  0738		A(0,1,0,1,1,1,1),	! ENDFILERR,	33	! ENDFILE ERROR
;11700  0739		A(0,1,0,1,1,1,1),	! UNIALROPE,	34	! UNIT ALREADY OPEN
;11800  0740		A(0,1,0,1,1,1,1),	! SPARECFOR,	35	! SPANNED RECORD FORMAT ERROR
;11900  0741		A(0,1,0,1,1,1,1),	! ATTREANON,	36	! ATTEMPT TO READ NON-EXISTENT RECORD
;12000  0742		A(0,1,0,1,1,1,1),	! INCRECLEN,	37	! INCONSISTENT RECORD LENGTH
;12100  0743		A(0,1,0,1,1,1,1),	! ERRDURWRI,	38	! ERROR DURING WRITE
;12200  0744		A(0,1,0,1,1,1,1),	! ERRDURREA,	39	! ERROR DURING READ
;12300  0745		A(0,1,0,1,1,1,1),	! RECIO_OPE,	40	! RECURSIVE I/O OPERATION
;12400  0746		A(0,1,0,1,1,1,1),	! INSVIRMEM,	41	! INSUFFICIENT VIRTUAL MEMORY
;12500  0747		A(0,1,0,1,1,1,1),	! NO_SUCDEV,	42	! NO SUCH DEVICE 
;12600  0748		A(0,1,0,1,1,1,1),	! FILNAMSPE,	43	! FILE NAME SPECIFICATION ERROR 
;12700  0749		A(0,1,0,1,1,1,1),	! RECSPEERR,	44	! RECORD SPECIFICATION ERROR
;12800  0750		A(0,1,0,1,1,1,1),	! KEYVALERR,	45	! KEYWORD VALUE ERROR IN OPEN STATEMENT
;12900  0751		A(0,1,0,1,1,1,1),	! INCOPECLO,	46	! INCONSISTENT OPEN/CLOSE PARAMETERS
;13000  0752		A(0,1,0,1,1,1,1),	! WRIREAFIL,	47	! WRITE TO READONLY FILE
;13100  0753		A(0,1,0,1,1,1,1),	! INVARGFOR,	48	! INVALID ARGUMENT TO FORTRAN I/O LIBRARY
;13200  0754	
;13300  0755		REP 59-48-1 OF BYTE (0),	! Skip 49-58
;13400  0756	
;13500  0757		A(0,1,1,1,1,0,1),	! LISIO_SYN,	59	! LIST-DIRECTED I/O SYNTAX ERROR
;13600  0758		A(0,1,0,1,1,1,1),	! INFFORLOO,	60	! INFINITE FORMAT LOOP
;13700  0759		A(0,1,1,1,1,1,1),	! FORVARMIS,	61	! FORMAT/VARIABLE-TYPE MISMATCH
;13800  0760		A(0,1,0,1,1,1,1),	! SYNERRFOR,	62	! SYNTAX ERROR IN FORMAT
;13900  0761		A(0,1,1,1,0,0,1),	! OUTCONERR,	63	! OUTPUT CONVERSION ERROR
;14000  0762		A(0,1,1,1,1,1,1),	! INPCONERR,	64	! INPUT CONVERSION ERROR
;14100  0763	
;14200  0764		0,			! skip 65
;14300  0765	
;14400  0766		A(0,1,0,1,1,1,1),	! OUTSTAOVE,	66	! OUTPUT STATEMENT OVERFLOWED RECORD
;14500  0767		A(0,1,0,1,1,1,1),	! INPSTAREQ,	67	! INPUT STATEMENT REQUIRED TOO MUCH DATA
;14600  0768		A(0,1,1,1,1,1,1),	! VFEVALERR,	68	! VARIABLE FORMAT EXPRESSION VALUE ERROR
;14700  0769	
;14800  0770		0,			! skip 69
;14900  0771	
;15000  0772		A(0,0,1,1,0,1,1),	! INTOVF,	70	! INTEGER OVERFLOW
;15100  0773		A(0,0,1,1,0,1,1),	! INTZERDIV,	71	! INTEGER ZERO DIVIDE
;15200  0774		A(0,0,1,1,0,1,1),	! FLOOVE,	72	! FLOATING OVERFLOW
;15300  0775		A(0,0,1,1,0,1,1),	! FLOZERDIV,	73	! FLOATING ZERO DIVIDE
;15400  0776		A(0,0,1,1,0,1,1),	! FLOUND,	74	! FLOATING UNDERFLOW
;15500  0777	
;15600  0778		0,			! skip 75

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:12:55	DBB3:[RTL.SRC]CSETST.B32;15					Page 2-3
;
;15700  0779	
;15800  0780		A(0,0,1,1,0,1,1),	! DECSTROVE,	76	! DECIMAL STRING OVERFLOW
;15900  0781		A(0,0,1,1,0,1,1),	! ARRREFOUT,	77	! ARRAY REFERENCE OUTSIDE ARRAY
;16000  0782	
;16100  0783		0,0,			! skip 78, 79
;16200  0784	
;16300  0785		A(0,0,0,1,0,1,1),	! WRONUMARG, 	80	! wrong number of arguments
;16400  0786		A(0,0,0,1,0,1,1),	! INVARGMTH, 	81	! invalid argument to math library
;16500  0787		A(0,0,1,1,0,1,1),	! UNDEXP, 	82	! undefined exponentiation
;16600  0788		A(0,0,1,1,0,1,1),	! LOGZERNEG, 	83	! logarithm of zero or negative value
;16700  0789		A(0,0,1,1,0,1,1),	! SQUROONEG, 	84	! square root of negative value
;16800  0790	
;16900  0791		0, 0,			! Skip 85 and 86 (used on PDP-11),
;17000  0792	
;17100  0793		A(0,0,1,1,0,1,1),	! SINCOSSIG, 	87	! sine or cosine significance lost
;17200  0794		A(0,0,1,1,0,1,1),	! FLOOVEMAT, 	88	! floating overflow in math library
;17300  0795		A(0,0,1,1,0,1,1),	! FLOUNDMAT, 	89	! floating underflow in math library
;17400  0796	
;17500  0797		REP 93-89-1 OF BYTE (0),	! skip 90-92
;17600  0798	
;17700  0799	
;17800  0800		A(0,0,0,1,0,1,1)));	! ADJARRDIM,	93	! ADJUSTABLE ARRAY DIMENSION ERROR
;17900  0801	
;18000  0802	
;18100  0803	!
;18200  0804	! EXTERNAL REFERENCES:
;18300  0805	!
;18400  0806	
;18500  0807	EXTERNAL ROUTINE
;18600  0808		FOR$$ERRSNS_SAV: NOVALUE ADDRESSING_MODE (GENERAL),	! Save FORTRAN error info for ERRSNS
;18700  0809								! No logical unit associated with it.
;18800  0810		LIB$FIXUP_FLT: ADDRESSING_MODE (GENERAL),	! Fixup reserved floating operands
;18900  0811		LIB$INITIALIZE: ADDRESSING_MODE (GENERAL);	! Cause LIB$INITIALIZE to be
;19000  0812								! linked in so called before main program
;19100  0813								! causes COM$$STARTUP to be called
;19200  0814								! before main program.
;19210  0815	

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:12:55	DBB3:[RTL.SRC]CSETST.B32;15					Page 3
;
;00100  0816	ROUTINE COM_STARTUP (	!  Initialize FORTRAN compatibility ERRTST, ERRSET support
;00200  0817		CO_ROUT_INIT,		! Adr. of co-routine entry in LIB$INITIALIZE
;00300  0818		CLI_CO_ROUT)		! Adr. of CLI co-routine
;00400  0819		=			! Value returned is main program completion code
;00500  0820	!++
;00600  0821	! FUNCTIONAL DESCRIPTION:
;00700  0822	!
;00800  0823	!	It establishes a ERRTST/ERRSET default handler.
;00900  0824	!	Then it performs a co-routine call-back to LIB$INITIALIZE
;01000  0825	!	which keeps the handler on the stack before the main program.
;01100  0826	!
;01200  0827	! FORMAL PARAMETERS:
;01300  0828	!
;01400  0829	!	co_rout_init			Adr. of a procedure to be called in order
;01500  0830	!					to affect a co-routine linkage with the
;01600  0831	!					caller (LIB$INITIALIZE).
;01700  0832	!	cli_co_rout			Adr. of CLI co-routine
;01800  0833	!	..				Any other arguments passed to main programs
;01900  0834	!
;02000  0835	! IMPLICIT INPUTS:
;02100  0836	!
;02200  0837	!	NONE
;02300  0838	!
;02400  0839	! IMPLICIT OUTPUTS:
;02500  0840	!
;02600  0841	!	NONE
;02700  0842	!
;02800  0843	! ROUTINE VALUE:
;02900  0844	! COMPLETION CODES:
;03000  0845	!
;03100  0846	!	The completion code returned by the main program
;03200  0847	!
;03300  0848	! SIDE EFFECTS:
;03400  0849	!
;03500  0850	!	Sets up a handler and does a co-routine call-back using co_rout_init.
;03600  0851	!--
;03700  0852	
;03800  0853	    BEGIN
;03900  0854	
;04000  0855	    ENABLE
;04100  0856		COM_HANDLER ;			! Establish language independent handler
;04200  0857	
;04300  0858	    !+
;04400  0859	    ! Perform co-routine call-back to caller (LIB$INITIALIZE)
;04500  0860	    ! which will call any other library and user initialization procedures
;04600  0861	    ! and then call the main program.
;04700  0862	    ! When the main program return, return its completion status to caller
;04800  0863	    ! which will get back to debugger or CLI.
;04900  0864	    !-
;05000  0865	
;05100  0866	    RETURN (.CO_ROUT_INIT) ();
;05200  0867	    END;				! End of COM_STARTUP routine


							    .TITLE  COM$$ERRSET_TST

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:12:55	DBB3:[RTL.SRC]CSETST.B32;15					Page 3-1
;
							    .IDENT  \1-12\

							    .PSECT  F4PCOMPAT$DATA,NOEXE,  PIC,2

				    0000000F  00000 COM$$ERRORCOUNT::
							    .LONG   15							      ;
				      4F  00  00004 COM$$ERR_TAB::
							    .BYTE   0, 79						      ;
					  00# 00006 	    .BYTE   0[18]						      ;
  4F  4F  4F  4F  4F  4F  4F  4F  4F  4F  4F  00018 	    .BYTE   79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, - ;
  4F  4F  4F  4F  4F  4F  4F  4F  4F  4F  4F  00023		    79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, - ;
		  4F  4F  4F  4F  4F  4F  4F  0002E		    79							      ;
					  00# 00035 	    .BYTE   0[10]						      ;
  00  6F  4F  4F  00  6F  69  4F  6F  4F  6D  0003F 	    .BYTE   109, 79, 111, 79, 105, 111, 0, 79, 79, 111, 0, 43, 43, -  ;
  0B  00  00  2B  2B  00  2B  2B  2B  2B  2B  0004A		    43, 43, 43, 0, 43, 43, 0, 0, 11, 11, 43, 43, 43, 0, 0, -  ;
	  2B  2B  2B  00  00  2B  2B  2B  0B  00055		    43, 43, 43						      ;
					  00# 0005E 	    .BYTE   0[3]						      ;
					  0B  00061 	    .BYTE   11							      ;

							    .PSECT  LIB$INITIALIZE,NOWRT,NOEXE,  GBL,2

				    00000000' 00000 P.AAA:  .ADDRESS COM_STARTUP					      ;

						    VECT=		P.AAA
							    .EXTRN  FOR$$ERRSNS_SAV, LIB$FIXUP_FLT, LIB$INITIALIZE

							    .PSECT  F4PCOMPAT$CODE,NOWRT,  SHR,  PIC,2

					 0000 00000 COM_STARTUP:
							    .WORD   Save nothing					      ; 0816
		         6D 00000006   EF  DE 00002 	    MOVAL   1$, (FP)						      ; 0853
		    04   BC	       00  FB 00009 	    CALLS   #0, @CO_ROUT_INIT					      ; 0866
					   04 0000D 	    RET     							      ; 0816
					 0000 0000E 1$:     .WORD   Save nothing					      ; 0853
				       7E  D4 00010 	    CLRL    -(SP)						      ;
				       5E  DD 00012 	    PUSHL   SP							      ;
		         7E 	  04   AC  7D 00014 	    MOVQ    4(AP), -(SP)					      ;
		  0000V  CF	       03  FB 00018 	    CALLS   #3, COM_HANDLER					      ;
					   04 0001D 	    RET     							      ;

; Routine Size:  30 bytes



; Bliss-32 10.1-416	Monday 21-AUG-1978 19:12:55	DBB3:[RTL.SRC]CSETST.B32;15					Page 4
;
;00100  0868	ROUTINE COM_HANDLER (		!  FORTRAN compatibility default error handler
;00200  0869		SIG_ARGS_ADR,		! Adr. of signal arg list
;00300  0870		MCH_ARGS_ADR)		! Adr. of mechanism arg list
;00400  0871		=			! Value is that of a condition handler
;00500  0872	!++
;00600  0873	! FUNCTIONAL DESCRIPTION:
;00700  0874	!
;00800  0875	!	COM_HANDLER performs default error handling
;00900  0876	!	which creates an environment compatible with the PDP-11
;01000  0877	!	FORTRAN IV-PLUS error environment.
;01100  0878	!	This environment is only created if the user has a:
;01200  0879	!	The actions taken depends on the conditon code being signaled:
;01300  0880	!
;01400  0881	!	SS$_UNWIND	Just return and keep unwinding.
;01500  0882	!	SS$_SSFAIL	Return SS$_CONTINUE so O.S. caller
;01600  0883	!			can check error status at call site.
;01700  0884	!	SS$_ROPERAND	Fixup floating/double operand by calling LIB$FIXUP_FLT.
;01710  0885	!	SS$_INTOVF...SS$_SUBRNG Convert to FORTRAN error number from
;01720  0886	!			arithemtic trap condition value.
;01800  0887	!	
;01900  0888	!	If a math error which returns a reserved operand, change it to +0.0 and continue
;02000  0889	!	    execution with no message printed.
;02100  0890	!	If not a FOR$ error, save error info for ERRSNS
;02200  0891	!	(If a FOR$ error, FOR$$ERRSNS_SAV already called when signaled).
;02300  0892	!	Determine FORTRAN error number from condition value.
;02400  0893	!	Use 1 (NOT FORTRAN SPECIFIC ERROR) if not a FORTRAN specific error.
;02500  0894	!	Flag that error number has had an occurrence (for ERRTST)
;02600  0895	!	If error can never continue or ERR=, set severity to SEVERE and resignal (which EXITs).
;02700  0896	!	If error is ERR= type, set severity to SEVERE and resignal (which EXITSs),
;02800  0897	!	    since ERR= transfer would already have taken place if present.
;02900  0898	!	If error wants to be counted, decrement image error count.
;03000  0899	!	    If exceed limit, set severity to SEVERE and resignal (which EXITs).
;03100  0900	!	If error is to continue, set severity to ERROR, else to SEVERE.
;03200  0901	!	If error is to be logged, resignal else continue.
;03300  0902	!
;03400  0903	! FORMAL PARAMETERS:
;03500  0904	!
;03600  0905	!	SIG_ARGS_ADR.ml.ra	Adr. of signal arg list
;03700  0906	!	MCH_ARGS_ADR.ml.ra	Adr. of mechanism arg list
;03800  0907	!
;03900  0908	! IMPLICIT INPUTS:
;04000  0909	!
;04100  0910	!	NONE
;04200  0911	!
;04300  0912	! IMPLICIT OUTPUTS:
;04400  0913	!
;04500  0914	!	Decrements OWN count of no. of continuable error remaining before EXIT (ERROR_LIMIT).
;04600  0915	!
;04700  0916	! ROUTINE VALUE:
;04800  0917	! COMPLETION CODES:
;04900  0918	!
;05000  0919	!	SS$_CONTINUE if signaled code was SS$_SSFAIL or error is to be continued without logging.
;05100  0920	!	SS$_RESIGNAL otherwise.
;05200  0921	!
;05300  0922	! SIDE EFFECTS:

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:12:55	DBB3:[RTL.SRC]CSETST.B32;15					Page 4-1
;
;05400  0923	!
;05500  0924	!	Signaled condition value is changed to ERROR or SEVERE
;05600  0925	!	in order to cause image to continue or EXIT after printing message.
;05700  0926	!--
;05800  0927	
;05900  0928	    BEGIN
;06000  0929	    LOCAL
;06100  0930		FORT_ERR_NO;			! FORTRAN error number
;06200  0931	    MAP
;06300  0932		SIG_ARGS_ADR: REF BLOCK[8, BYTE], ! SIGNAL arg list
;06400  0933		MCH_ARGS_ADR: REF BLOCK[5, BYTE]; ! mechanism arg list
;06500  0934	
;06600  0935	
;06700  0936	    !+
;06800  0937	    ! Check for unwinding since handler gets called when it does an unwind.
;06900  0938	    ! Just return to continue unwinding, since nothing to do.
;07000  0939	    !-
;07100  0940	
;07200  0941	    IF .SIG_ARGS_ADR[CHF$L_SIG_NAME] EQL SS$_UNWIND THEN RETURN SS$_NORMAL;
;07300  0942	
;07400  0943	    !+
;07500  0944	    ! Check if this is a system service failure exception (i.e., SSFAIL mode
;07600  0945	    ! set by user in violation of modularity standards).  If yes just return
;07700  0946	    ! SS$_CONTINUE status to condition handling facility which will return to the
;07800  0947	    ! OTS call-site to operating system which will check error code returned in R0.
;07900  0948	    !-
;08000  0949	
;08100  0950	    IF .SIG_ARGS_ADR[CHF$L_SIG_NAME] EQL SS$_SSFAIL THEN RETURN SS$_CONTINUE;
;08200  0951	    !+
;08300  0952	    ! Print signal arg list if debugging \\\\\\
;08400  0953	    !-
;08500  0954	
;08600  0955	    PRINT_DEC (COM_HANDLER,
;08700P 0956		'Run-time Library version V0.5.', LIB$K_VERSION,
;08800P 0957		' FORTRAN error # = ', .BLOCK[SIG_ARGS_ADR[FOR$L_SIG_NAME], STS$V_CODE],
;08900P 0958		' for unit = ', .SIG_ARGS_ADR[FOR$L_SIG_LUN]);
;09000  0959	    PRINT_HEX (COM_HANDLER,
;09100P 0960		    ' user PC = ', .SIG_ARGS_ADR[FOR$L_SIG_UPC],
;09200P 0961		    ' RMS {FAB,RAB}$L_STS = ', .SIG_ARGS_ADR[FOR$L_SIG_STS],
;09300P 0962		    ' RMS {FAB,RAB}$L_STV = ', .SIG_ARGS_ADR[FOR$L_SIG_STV]);
;09400  0963	
;09500  0964	    !+
;09600  0965	    ! If signal is SS$_ROPERAND (reserved operand fault),
;09700  0966	    ! go fixup if floating point by setting operand to +0.0.
;09800  0967	    ! Then continue execution without a message.  Do not convert this error
;09900  0968	    ! to a FORTRAN error # since this error didn't happen on the PDP-11.
;10000  0969	    !-
;10100  0970	
;10200  0971	    IF LIB$FIXUP_FLT (.SIG_ARGS_ADR, .MCH_ARGS_ADR) 
;10300  0972	    THEN 
;10400  0973		RETURN SS$_CONTINUE;
;10500  0974	
;10600  0975	    !+
;10700  0976	    ! If this is a math library error which is about to return a reserved operand,
;10800  0977	    ! convert R0/R1 to +0.0 in mechanism arg list so user program

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:12:55	DBB3:[RTL.SRC]CSETST.B32;15					Page 4-2
;
;10900  0978	    ! will get the same function value as on the PDP-11.
;11000  0979	    !-
;11100  0980	
;11200  0981	    IF .STS_FAC_NO EQL MTH$K_FAC_NO
;11300  0982	    THEN
;11400  0983		CASE .STS_CODE FROM MTH$K_UNDEXP TO MTH$K_FLOOVEMAT OF
;11500  0984		    SET
;11600  0985		    [MTH$K_UNDEXP, MTH$K_LOGZERNEG, MTH$K_SQUROONEG, MTH$K_SINCOSSIG, MTH$K_FLOOVEMAT]:
;11700  0986			BEGIN
;11800  0987			MCH_ARGS_ADR[CHF$L_MCH_SAVR0] = 0;
;11900  0988			MCH_ARGS_ADR[CHF$L_MCH_SAVR1] = 0;
;12000  0989			END;
;12100  0990		    [INRANGE]:		;	! do nothing
;12200  0991		    [OUTRANGE]:			! do nothing
;12300  0992		    TES;
;12400  0993	
;12500  0994	    !+
;12600  0995	    ! If this is an arithmetic trap error, map to FORTRAN error number.
;12700  0996	    ! Condition values are: _INTOVF, _INTDIV, _FLTOVF, _FLTDIV, _FLTUND, _DEVOFV, _SUBRNG.
;12710  0997	    ! and are assumed to be consectutive and in ascending order according
;12720  0998	    ! to hardware trap number.  Trap codes 1:5 map to error 70:74
;12800  0999	    ! and trap code 7 maps to error 77.  Other codes map to error 1.
;12900  1000	    !-
;13000  1001	
;13100  1002	    IF .STS_COND_ID GEQU SS$_INTOVF^-S_SEVERITY AND .STS_COND_ID LEQU SS$_SUBRNG^-S_SEVERITY
;13200  1003	    THEN
;13300  1004		BEGIN
;13400  1005		BIND 
;13500  1006		    TRAN = UPLIT BYTE (70, 71, 72, 73, 74, 1, 77);
;13600  1007		MAP 
;13700  1008		    TRAN: VECTOR[7,BYTE];
;13800  1009		FORT_ERR_NO = .TRAN[.STS_COND_ID - (SS$_INTOVF^-S_SEVERITY)];
;13900  1010		END
;14000  1011	
;14100  1012	    ELSE
;14200  1013	
;14300  1014		!+
;14400  1015		! Setup FORTRAN error number and check range for index into error table.
;14500  1016		! If out of range, map to error 1 (NOT FORTRAN SPECIFIC ERROR)
;14600  1017		!-
;14700  1018	
;14800  1019		FORT_ERR_NO = (SELECTONEU .STS_FAC_NO OF
;14900  1020				SET
;15000  1021				[FOR$K_FAC_NO]:	.STS_CODE;		! FOR$ errors
;15100  1022				[MTH$K_FAC_NO]:	.STS_CODE;		! MTH$ errors
;15200  1023				[OTHERWISE]:	FOR$K_NOTFORSPE;	! other, use error code 1
;15300  1024									! NOT FORTRAN SPECIFIC ERROR
;15400  1025				TES);
;15500  1026	
;15600  1027	    !+
;15700  1028	    ! If error table has no bits set for this error, also map to 1
;15800  1029	    ! since error is not defined.
;15900  1030	    !-
;16000  1031	
;16100  1032	    IF .COM$$ERR_TAB[.FORT_ERR_NO, B_EC_ANY] EQL 0

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:12:55	DBB3:[RTL.SRC]CSETST.B32;15					Page 4-3
;
;16200  1033	    THEN
;16300  1034		FORT_ERR_NO = FOR$K_NOTFORSPE;
;16400  1035	
;16500  1036	    !+
;16600  1037	    ! Save error info for ERRSNS if this error is not FOR$ error.
;16700  1038	    ! (FOR$ errors already called FOR$$ERRSNS_SAV when error was signaled).
;16800  1039	    !-
;16900  1040	
;17000  1041	    IF .STS_FAC_NO NEQ FOR$K_FAC_NO
;17100  1042	    THEN
;17200  1043		FOR$$ERRSNS_SAV (.FORT_ERR_NO, 0, 0, 0, .SIG_ARGS_ADR[CHF$L_SIG_NAME]);
;17300  1044	
;17400  1045	    !+
;17500  1046	    ! Flag that this FORTRAN error number happened for subsequent CALL ERRTST
;17600  1047	    !-
;17700  1048	
;17800  1049	    COM$$ERR_TAB[.FORT_ERR_NO, V_EC_OCCURRED] = 1;
;17900  1050	
;18000  1051	    !+
;18100  1052	    ! If this error can never continue (or ERR=) or continue type
;18200  1053	    ! is ERR= (if present in I/O statement), set severity to SEVERE and resignal.
;18300  1054	    ! Note: if continue type is ERR=, user did not supply if control
;18400  1055	    ! gets here to defualt condition handler setup before main program called.
;18500  1056	    !-
;18600  1057	
;18700  1058	    IF NOT .COM$$ERR_TAB[.FORT_ERR_NO, V_EC_CONTINUE] OR .COM$$ERR_TAB[.FORT_ERR_NO, V_EC_CONT_TYPE]
;18800  1059	    THEN
;18900  1060		BEGIN
;19000  1061		STS_SEVERITY = STS$K_SEVERE;
;19100  1062		RETURN SS$_RESIGNAL
;19200  1063		END;
;19300  1064	
;19400  1065	    !+
;19500  1066	    ! If this error wants to be counted, decrement image error count limit.
;19600  1067	    !-
;19700  1068	
;19800  1069	    IF .COM$$ERR_TAB[.FORT_ERR_NO, V_EC_COUNT]
;19900  1070	    THEN
;20000  1071		BEGIN
;20100  1072		COM$$ERRORCOUNT = .COM$$ERRORCOUNT - 1;
;20200  1073	
;20300  1074		!+
;20400  1075		! If error limit goes to 0, set error severity 
;20500  1076		! to SEVERE and resignal so that image exits after printing message.
;20600  1077		!-
;20700  1078	
;20800  1079		IF .COM$$ERRORCOUNT LEQ 0
;20900  1080		THEN
;21000  1081		    BEGIN
;21100  1082		    STS_SEVERITY = STS$K_SEVERE;
;21200  1083		    RETURN SS$_RESIGNAL
;21300  1084		    END;
;21400  1085		END;
;21500  1086	
;21600  1087	    !+

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:12:55	DBB3:[RTL.SRC]CSETST.B32;15					Page 4-4
;
;21700  1088	    ! If here, error is to continue (V_EC_CONTINUE = 0),
;21800  1089	    ! set severity to ERROR so continue if resignaled (ie if logged).
;21900  1090	    !-
;22000  1091	
;22100  1092	    STS_SEVERITY = STS$K_ERROR;
;22200  1093	
;22300  1094	    !+
;22400  1095	    ! If this error is to be logged, log it by resignaling and continue image.
;22500  1096	    ! Otherwise just continue image (without resignaling so no message).
;22600  1097	    !-
;22700  1098	
;22800  1099	    IF .COM$$ERR_TAB[.FORT_ERR_NO, V_EC_LOG]
;22900  1100	    THEN
;23000  1101		RETURN SS$_RESIGNAL
;23100  1102	    ELSE
;23200  1103		RETURN SS$_CONTINUE
;23300  1104	    END;		! End of COM_HANDLER



					      0001E	    .BLKB   2
		  4D  01  4A  49  48  47  46  00020 P.AAB:  .BYTE   70, 71, 72, 73, 74, 1, 77				      ;
					      00027	    .BLKB   1

						    TRAN=		P.AAB


					 001C 00028 COM_HANDLER:
							    .WORD   Save R2,R3,R4					      ; 0868
		         54 00000000'  EF  9E 0002A 	    MOVAB   COM$$ERR_TAB, R4					      ;
		         50 	  04   AC  D0 00031 	    MOVL    SIG_ARGS_ADR, R0					      ; 0941
		         53 	  04   A0  9E 00035 	    MOVAB   4(R0), R3						      ;
	      00000920   8F	       63  D1 00039 	    CMPL    (R3), #2336						      ;
				       19  13 00040 	    BEQL    1$							      ;
	      0000045C   8F	       63  D1 00042 	    CMPL    (R3), #1116						      ; 0950
				       10  13 00049 	    BEQL    1$							      ;
		         52 	  08   AC  D0 0004B 	    MOVL    MCH_ARGS_ADR, R2					      ; 0971
				       05  BB 0004F 	    PUSHR   #^M<R0,R2>						      ;
	      00000000G  00	       02  FB 00051 	    CALLS   #2, LIB$FIXUP_FLT					      ;
		         03 	       50  E9 00058 	    BLBC    R0, 2$						      ;
				     00B5  31 0005B 1$:     BRW     15$							      ;
      02   A3	         0C 	       00  ED 0005E 2$:     CMPZV   #0, #12, 2(R3), #22					      ; 0981
				       16     00063									      ;
				       20  12 00064 	    BNEQ    5$							      ;
	   63 	         0C 	       03  EF 00066 	    EXTZV   #3, #12, (R3), R0					      ; 0983
				       50     0006A									      ;
	   06 00000052   8F	       50  CF 0006B 	    CASEL   R0, #82, #6						      ;
	 0010 	       0010 	     0010     00073 3$:     .WORD   4$-3$,-						      ;
	 0010 	       0013 	     0013     00079		    4$-3$,-						      ;
				     0010     0007F		    4$-3$,-						      ;
								    5$-3$,-						      ;
								    5$-3$,-						      ;
								    4$-3$,-						      ;
								    4$-3$						      ;
				       03  11 00081 	    BRB     5$							      ;

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:12:55	DBB3:[RTL.SRC]CSETST.B32;15					Page 4-5
;
				  0C   A2  7C 00083 4$:     CLRQ    12(R2)						      ; 0987
	   63 	         19 	       03  ED 00086 5$:     CMPZV   #3, #25, (R3), #143					      ; 1002
			    0000008F   8F     0008A									      ;
				       18  1F 0008F 	    BLSSU   6$							      ;
	   63 	         19 	       03  ED 00091 	    CMPZV   #3, #25, (R3), #149					      ;
			    00000095   8F     00095									      ;
				       0D  1A 0009A 	    BGTRU   6$							      ;
	   63 	         19 	       03  EF 0009C 	    EXTZV   #3, #25, (R3), R0					      ; 1009
				       50     000A0									      ;
		         52 	FEEB CF40  9A 000A1 	    MOVZBL  TRAN-143[R0], FORT_ERR_NO				      ;
				       1A  11 000A7 	    BRB     9$							      ; 1002
      02   A3	         0C 	       00  ED 000A9 6$:     CMPZV   #0, #12, 2(R3), #24					      ; 1019
				       18     000AE									      ;
				       08  13 000AF 	    BEQL    7$							      ;
      02   A3	         0C 	       00  ED 000B1 	    CMPZV   #0, #12, 2(R3), #22					      ;
				       16     000B6									      ;
				       07  12 000B7 	    BNEQ    8$							      ;
	   63 	         0C 	       03  EF 000B9 7$:     EXTZV   #3, #12, (R3), FORT_ERR_NO				      ;
				       52     000BD									      ;
				       03  11 000BE 	    BRB     9$							      ;
		         52 	       01  D0 000C0 8$:     MOVL    #1, FORT_ERR_NO					      ;
				     6442  95 000C3 9$:     TSTB    COM$$ERR_TAB[FORT_ERR_NO]				      ; 1032
				       03  12 000C6 	    BNEQ    10$							      ;
		         52 	       01  D0 000C8 	    MOVL    #1, FORT_ERR_NO					      ; 1034
      02   A3	         0C 	       00  ED 000CB 10$:    CMPZV   #0, #12, 2(R3), #24					      ; 1041
				       18     000D0									      ;
				       0F  13 000D1 	    BEQL    11$							      ;
				       63  DD 000D3 	    PUSHL   (R3)						      ; 1043
				       7E  7C 000D5 	    CLRQ    -(SP)						      ;
				       7E  D4 000D7 	    CLRL    -(SP)						      ;
				       52  DD 000D9 	    PUSHL   FORT_ERR_NO						      ;
	      00000000G  00	       05  FB 000DB 	    CALLS   #5, FOR$$ERRSNS_SAV					      ;
	   50 	         52 	       54  C1 000E2 11$:    ADDL3   R4, FORT_ERR_NO, R0					      ; 1049
		         60 	  80   8F  88 000E6 	    BISB2   #128, (R0)						      ;
		         10 	       60  E9 000EA 	    BLBC    (R0), 12$						      ; 1058
	   0C 	         60 	       02  E0 000ED 	    BBS     #2, (R0), 12$					      ;
	   0F 	         60 	       01  E1 000F1 	    BBC     #1, (R0), 13$					      ; 1069
				  FC   A4  D7 000F5 	    DECL    COM$$ERRORCOUNT					      ; 1072
				  FC   A4  D5 000F8 	    TSTL    COM$$ERRORCOUNT					      ; 1079
				       07  14 000FB 	    BGTR    13$							      ;
	   03 	         00 	       04  F0 000FD 12$:    INSV    #4, #0, #3, (R3)					      ; 1082
				       63     00101									      ;
				       09  11 00102 	    BRB     14$							      ; 1083
	   03 	         00 	       02  F0 00104 13$:    INSV    #2, #0, #3, (R3)					      ; 1092
				       63     00108									      ;
	   06 	         60 	       03  E1 00109 	    BBC     #3, (R0), 15$					      ; 1099
		         50 	0918   8F  3C 0010D 14$:    MOVZWL  #2328, R0						      ; 1101
					   04 00112 	    RET     							      ;
		         50 	       01  D0 00113 15$:    MOVL    #1, R0						      ; 1103
					   04 00116 	    RET     							      ; 0868

; Routine Size:  239 bytes


;23400  1105	END			! End of module

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:12:55	DBB3:[RTL.SRC]CSETST.B32;15					Page 4-6
;
;23500  1106	ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  LIB$INITIALIZE 	     4  NOWRT,  RD ,NOEXE,NOSHR,  GBL,  REL,  CON,NOPIC,ALIGN(2)
;  F4PCOMPAT$DATA 	    98    WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,  PIC,ALIGN(2)
;  F4PCOMPAT$CODE 	   279  NOWRT,  RD ,  EXE,  SHR,  LCL,  REL,  CON,  PIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]STARLET.L32;1		      2688        16         0       116





; Size:		269 code + 112 data bytes
; Run Time:	00:15.2
; Elapsed Time:	00:35.8
; Memory Used:	203 pages
; Compilation Complete
