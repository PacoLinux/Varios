
; Bliss-32 10.1-416	Monday 21-AUG-1978 19:15:34	DBB3:[RTL.SRC]FENDFI.B32;12					Page 1
;
;00100  0001	MODULE FOR$$ENDFILE (	! FORTRAN ENDFILE statement 
;00200  0002		IDENT = '0-15'	! File FENDFI.B32
;00300  0003			) =
;00400  0004	BEGIN
;00500  0005	
;00600  0006	!
;00700  0007	!			  COPYRIGHT (c) 1977 BY
;00800  0008	!	      DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;00900  0009	!
;01000  0010	! THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
;01100  0011	! ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
;01200  0012	! INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
;01300  0013	! COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
;01400  0014	! OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
;01500  0015	! TRANSFERRED.
;01600  0016	!
;01700  0017	! THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
;01800  0018	! AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
;01900  0019	! CORPORATION.
;02000  0020	!
;02100  0021	! DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
;02200  0022	! SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;02300  0023	!
;02400  0024	
;02500  0025	!++
;02600  0026	! FACILITY:  FORTRAN Support Library
;02700  0027	!
;02800  0028	! ABSTRACT:
;02900  0029	!
;03000  0030	!	Contains routine FOR$ENDFILE for support of FORTRAN endfile
;03100  0031	!	statement.
;03200  0032	!
;03300  0033	! ENVIRONMENT:  User Mode - AST re-entrant
;03400  0034	!
;03500  0035	! AUTHOR:  Jonathan M. Taylor, CREATION DATE: 24-Oct-1977
;03600  0036	!
;03700  0037	! MODIFIED BY:
;03800  0038	!
;03900  0039	!	Jonathan M. Taylor, 24-Oct-1977: VERSION 0
;04000  0040	! 0-1	- original
;04100  0041	! 0-2	- Use FOR$K_abcmno2yz as E2TERNAL LITERALs.  TNH 27-Oct-77
;04200  0042	! 0-3	- Increment record number after writing cntrl/Z.  JMT 28-Oct-77
;04300  0043	! 0-4	- Changed ENDFILIGN to ENDFILERR.  TNH 29-Oct-77
;04400  0044	! 0-6	- Use FERR not FENO.  TNH 6-Dec-77
;04500  0045	! 0-7	- Change V_NOSPANREC to V_SPANNED in LUB.  JMT 14-Oct-77
;04600  0046	! 0-9	- Global register CCB.  JMT 8-Apr-78
;04700  0047	! 0-10	- Change to STARLET library.  DGP 20-Apr-78
;04800  0048	! 0-11	- Change REQUIRE files for VAX system build.  DGP 28-Apr-78
;04900  0049	! 0-12	- Change STARLET to RTLSTARLE to avoid conflicts.  DGP 1-May-78
;04910  0050	! 0-13	- Use JSB linkage.  TNH 22-May-78
;04920  0051	! 0-14	- Pass OPEN$K_LUN_MIN to FOR$$CB_PUSH.  TNH 22-May-78
;04930  0052	! 0-15	- Set LUB$V_ENDFILOPN.  TNH 17-June-78
;05000  0053	!--

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:15:34	DBB3:[RTL.SRC]FENDFI.B32;12					Page 2
;
;00100  0054	!
;00200  0055	! LINKAGES:
;00300  0056	!
;00500  0057	REQUIRE 'RTLIN:FLNK';		! define all linkages
; %PRINT:	File: FLNK.B32; Version 1, edit 12, TNH 2-Aug-78
;00600  0279	
;00700  0280	!
;00800  0281	! TABLE OF CONTENTS:
;00900  0282	!
;01000  0283	
;01100  0284	FORWARD ROUTINE
;01200  0285		FOR$ENDFILE: NOVALUE;
;01300  0286	
;01400  0287	!
;01500  0288	! INCLUDE FILES:
;01600  0289	!
;01700  0290		REQUIRE 'RTLML:FERR';		! FORTRAN error number definitions
; %PRINT:	Filename: FERR.MDL! Version 0, edit 36, TNH 19-June-78
;01800  0408		REQUIRE 'RTLIN:FMAC';		! Define macros
; %PRINT:	Filename: FMAC.B32; Version 1, edit 29, TNH, 7-JUN-78
; %PRINT:	 REQUIRE FILE: LPSECT.B32, VERSION 01-5, TNH, 27-Jun-78
;01900  0588		LIBRARY 'RTLSTARLE';	! STARLET library for symbols and macros
;02000  0589		REQUIRE 'RTLIN:FOPN';		! OPEN parameters
; %PRINT:	Filename: FOPN.B32; version 0, edit 22, TNH, 30-May-78
;02100  0728		REQUIRE 'RTLML:FPAR';		! inter-module constants
; %PRINT:	File: FPAR.MDL! version 0, edit 11, TNH, 30-May-78
;02200  0830		REQUIRE 'RTLML:FLUB';		! LUB offset definitions
; %PRINT:	File: FLUB.MDL which produces FLUB.B32! Version 0, edit 30, TNH, 17-June-78
;02300  0998		REQUIRE 'RTLML:FISB';		! to get ISB length only
; %PRINT:	File: FISB.MDL which produces FISB.B32! Version 1, EDIT 16, DGP 02-Jun-78
;02400  1207	!
;02500  1208	! MACROS:
;02600  1209	!	NONE
;02700  1210	
;02800  1211	!
;02900  1212	! EQUATED SYMBOLS:
;03000  1213	!	NONE
;03100  1214	
;03200  1215	!
;03300  1216	! PSECT DECLARATIONS:
;03400  1217	!
;03500  1218	
;03600  1219		DECLARE_PSECTS (FOR);		! declare PSECTs for FOR$ facility
;03700  1220	
;03800  1221	!
;03900  1222	! OWN STORAGE:
;04000  1223	!	NONE
;04100  1224	
;04200  1225	!
;04300  1226	! EXTERNAL REFERENCES:
;04400  1227	!
;04500  1228	
;04600  1229	EXTERNAL ROUTINE
;04700  1230		FOR$$ERR_OPECLO,			! error handler
;04800  1231		FOR$$CB_PUSH: JSB_CB_PUSH NOVALUE,		! Get a LUB/ISB/RAB

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:15:34	DBB3:[RTL.SRC]FENDFI.B32;12					Page 2-1
;
;04900  1232		FOR$$CB_POP: JSB_CB_POP NOVALUE,		! Return the I/O system
;05000  1233		FOR$$SIGNAL_STO: NOVALUE,	! convert error number and signal_stop
;05100  1234		FOR$$OPEN_DEFLT: CALL_CCB NOVALUE;	! default OPEN routine

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:15:34	DBB3:[RTL.SRC]FENDFI.B32;12					Page 3
;
;00100  1235	GLOBAL ROUTINE FOR$ENDFILE  (	! FORTRAN ENDFILE statement support 
;00200  1236		UNIT)
;00300  1237		: NOVALUE =
;00400  1238	!++
;00500  1239	! FUNCTIONAL DESCRIPTION:
;00600  1240	!
;00700  1241	!	Perform FORTRAN ENDFILE semantics.  Check file and record type
;00800  1242	!	for legality of the ENDFILE.
;00810  1243	!	Open the file if not already open and set flag to finish defaults later.
;00900  1244	!	Write a one byte ^Z record.
;01000  1245	!
;01100  1246	! FORMAL PARAMETERS:
;01200  1247	!
;01300  1248	!	UNIT.rlu.v			logical unit number
;01400  1249	!
;01500  1250	! IMPLICIT INPUTS:
;01600  1251	!
;01700  1252	!	LUB$V_NOTSEQORG			1 if ORGANIZATION is not 'SEQUENTIAL'
;01800  1253	!	LUB$V_DIRECT			1 if ACCESS = 'DIRECT' or define file done
;01900  1254	!	LUB$V_FIXED			1 if fixed length records specified in open
;02000  1255	!	LUB$V_UNFORMAT			1 if FORMAT = 'UNFORMATTED' or define
;02100  1256	!					file done
;02200  1257	!	LUB$V_SEGMENTED			1 if SEGMENTED RECORDTYPE in OPEN statement
;02300  1258	!					or defaulted that way
;02400  1259	!	LUB$V_OPENED			1 if file already open on this unit
;02500  1260	!
;02600  1261	! IMPLICIT OUTPUTS:
;02700  1262	!
;02800  1263	!	LUB$L_LOG_RECNO			Incremented if ^Z record written
;02900  1264	!
;03000  1265	! ROUTINE VALUE:
;03100  1266	! COMPLETION CODES:
;03200  1267	!
;03300  1268	!	NONE
;03400  1269	!
;03500  1270	! SIDE EFFECTS:
;03600  1271	!
;03700  1272	!	File is opened if closed previous to ENDFILE
;03800  1273	!	SIGNAL_STOPs error FOR$_ENDFILERR if ENDFILE ignored for this type file
;03900  1274	!	SIGNAL_STOPs FOR$_ENDFILERR if RMS $PUT error.
;04000  1275	!
;04100  1276	!--
;04200  1277	
;04300  1278	    BEGIN
;04400  1279	
;04500  1280	    GLOBAL REGISTER
;04600  1281		CCB = 11: REF BLOCK[, BYTE];
;04700  1282	
;04800  1283	    LOCAL
;04900  1284		L_UNWIND_ACTION: VOLATILE,
;05000  1285		L_EOF_CHAR: BYTE;
;05100  1286	
;05200  1287	    ENABLE
;05300  1288		FOR$$ERR_OPECLO (L_UNWIND_ACTION);
;05400  1289	

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:15:34	DBB3:[RTL.SRC]FENDFI.B32;12					Page 3-1
;
;05500  1290	    !+
;05600  1291	    ! Action on error is not to pop a LUB.
;05700  1292	    !-
;05800  1293	
;05900  1294	    L_UNWIND_ACTION = FOR$K_UNWINDNOP;
;06000  1295	
;06100  1296	    !+
;06200  1297	    ! Allocate a LUB/ISB/RAB for this logical unit.
;06300  1298	    ! ON return, CCB points to the current control block.
;06400  1299	    !-
;06500  1300	
;06600  1301	    FOR$$CB_PUSH (.UNIT, OPEN$K_LUN_MIN);
;06700  1302	
;06800  1303	    !+
;06900  1304	    ! UNwind action is now to pop the LUB.
;07000  1305	    !-
;07100  1306	
;07200  1307	    L_UNWIND_ACTION = FOR$K_UNWINDPOP;
;07300  1308	
;07400  1309	    !+
;07500  1310	    ! Check various file attributes.  File must be:
;07600  1311	    !	Sequential organization
;07700  1312	    !	Sequential access
;07800  1313	    !	Variable length records
;07900  1314	    !	Must have segmented records if unformatteed
;08000  1315	    !-
;08100  1316	
;08200  1317	    IF .CCB[LUB$V_NOTSEQORG] OR
;08300  1318		.CCB[LUB$V_DIRECT] OR
;08400  1319		.CCB[LUB$V_FIXED] OR
;08500  1320		(.CCB[LUB$V_UNFORMAT] AND .CCB[LUB$V_SEGMENTED] EQL 0)
;08600  1321	    THEN
;08700  1322		FOR$$SIGNAL_STO (FOR$K_ENDFILERR)
;08800  1323	    ELSE
;08900  1324	
;09000  1325		BEGIN
;09100  1326	
;09200  1327		!+
;09300  1328		! If the file is not open, default open it.
;09310  1329		! But do not specify whether formatted or unformatted.
;09320  1330		! That will depend on the next I/O statement executed
;09330  1331		! so just set LUB$V_ENDFILOPN to be tested on every I/O statement.
;09340  1332		! When set, it will be cleared and the remaining defaults will be specified.
;09400  1333		!-
;09500  1334	
;09600  1335		IF .CCB[LUB$V_OPENED] EQL 0
;09700  1336		THEN
;09710  1337		    BEGIN
;09800  1338		    FOR$$OPEN_DEFLT (OPEN$K_ACC_SEQ,
;09900  1339				     OPEN$K_TYP_NEW,
;10000  1340				     OPEN$K_FOR_UNS);
;10010  1341		    CCB[LUB$V_ENDFILOPN] = 1;
;10020  1342		    END;
;10100  1343	
;10200  1344		!+

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:15:34	DBB3:[RTL.SRC]FENDFI.B32;12					Page 3-2
;
;10300  1345		! Manually write a one byte control Z record to the file.
;10400  1346		!-
;10500  1347	
;10600  1348		L_EOF_CHAR = FOR$K_CONTROL_Z;
;10700  1349		CCB[RAB$L_RBF] = L_EOF_CHAR;
;10800  1350		CCB[RAB$W_RSZ] = 1;
;10900  1351	
;11000  1352		IF NOT $PUT (RAB = .CCB)
;11100  1353		THEN
;11200  1354		    FOR$$SIGNAL_STO (FOR$K_ENDFILERR);
;11300  1355	
;11400  1356		!+
;11500  1357		! Increment the logical record number for backspace.
;11600  1358		!-
;11700  1359	
;11800  1360		CCB[LUB$L_LOG_RECNO] = .CCB[LUB$L_LOG_RECNO] + 1;
;11900  1361	
;12000  1362		END;
;12100  1363	
;12200  1364	    !+
;12300  1365	    ! Return the I/O system to its former state.
;12400  1366	    !-
;12500  1367	
;12600  1368	    FOR$$CB_POP ();
;12700  1369	
;12800  1370	    RETURN;
;12900  1371	    END;


							    .TITLE  FOR$$ENDFILE
							    .IDENT  \0-15\

							    .EXTRN  FOR$$ERR_OPECLO, FOR$$CB_PUSH, FOR$$CB_POP, FOR$$SIGNAL_STO
							    .EXTRN  FOR$$OPEN_DEFLT, SYS$PUT

							    .PSECT  FOR$CODE,NOWRT,  SHR,  PIC,2

					 0804 00000 	    .ENTRY  FOR$ENDFILE, Save R2,R11				      ; 1235
		         5E 	       08  C2 00002 	    SUBL2   #8, SP						      ;
				  04   AE  D4 00005 	    CLRL    L_UNWIND_ACTION					      ; 1278
		         6D 0000006A   EF  DE 00008 	    MOVAL   6$, (FP)						      ;
		    04   AE	       01  D0 0000F 	    MOVL    #1, L_UNWIND_ACTION					      ; 1294
		         52 	  04   AC  D0 00013 	    MOVL    UNIT, R2						      ; 1301
				       50  D4 00017 	    CLRL    R0							      ;
				     0000G 30 00019 	    BSBW    FOR$$CB_PUSH					      ;
				  04   AE  D4 0001C 	    CLRL    L_UNWIND_ACTION					      ; 1307
		         52 	  FC   AB  9E 0001F 	    MOVAB   -4(CCB), R2						      ; 1317
	   10 	         62 	       0E  E0 00023 	    BBS     #14, (R2), 1$					      ;
	   0C 	         62 	       04  E0 00027 	    BBS     #4, (R2), 1$					      ; 1318
	   08 	         62 	       0A  E0 0002B 	    BBS     #10, (R2), 1$					      ; 1319
	   0D 	         62 	       09  E1 0002F 	    BBC     #9, (R2), 2$					      ; 1320
	   09 	         62 	       0B  E0 00033 	    BBS     #11, (R2), 2$					      ;
				       21  DD 00037 1$:     PUSHL   #33							      ; 1322
		  0000G  CF	       01  FB 00039 	    CALLS   #1, FOR$$SIGNAL_STO					      ;
				       34  11 0003E 	    BRB     5$							      ; 1317

; Bliss-32 10.1-416	Monday 21-AUG-1978 19:15:34	DBB3:[RTL.SRC]FENDFI.B32;12					Page 3-3
;
		         10 	       62  E8 00040 2$:     BLBS    (R2), 3$						      ; 1335
		         7E 	       01  CE 00043 	    MNEGL   #1, -(SP)						      ; 1338
				       02  DD 00046 	    PUSHL   #2							      ;
				       02  DD 00048 	    PUSHL   #2							      ;
		  0000G  CF	       03  FB 0004A 	    CALLS   #3, FOR$$OPEN_DEFLT					      ;
		    FE   AB	       02  88 0004F 	    BISB2   #2, -2(CCB)						      ; 1341
		         6E 	       1A  90 00053 3$:     MOVB    #26, L_EOF_CHAR					      ; 1348
		    28   AB	       6E  9E 00056 	    MOVAB   L_EOF_CHAR, 40(CCB)					      ; 1349
		    22   AB	       01  B0 0005A 	    MOVW    #1, 34(CCB)						      ; 1350
				       5B  DD 0005E 	    PUSHL   CCB							      ; 1352
	      00000000G  9F	       01  FB 00060 	    CALLS   #1, @#SYS$PUT					      ;
		         07 	       50  E8 00067 	    BLBS    R0, 4$						      ;
				       21  DD 0006A 	    PUSHL   #33							      ; 1354
		  0000G  CF	       01  FB 0006C 	    CALLS   #1, FOR$$SIGNAL_STO					      ;
				  E0   AB  D6 00071 4$:     INCL    -32(CCB)						      ; 1360
				     0000G 30 00074 5$:     BSBW    FOR$$CB_POP						      ; 1368
					   04 00077 	    RET     							      ; 1235
					 0000 00078 6$:     .WORD   Save nothing					      ; 1278
		         50 	  08   AC  D0 0007A 	    MOVL    8(AP), R0						      ;
		         50 	  04   A0  D0 0007E 	    MOVL    4(R0), R0						      ;
				  FC   A0  9F 00082 	    PUSHAB  L_UNWIND_ACTION					      ;
				       01  DD 00085 	    PUSHL   #1							      ;
				       5E  DD 00087 	    PUSHL   SP							      ;
		         7E 	  04   AC  7D 00089 	    MOVQ    4(AP), -(SP)					      ;
		  0000G  CF	       03  FB 0008D 	    CALLS   #3, FOR$$ERR_OPECLO					      ;
					   04 00092 	    RET     							      ;

; Routine Size:  147 bytes


;13000  1372	
;13100  1373	END
;13200  1374	ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  FOR$CODE       	   147  NOWRT,  RD ,  EXE,  SHR,  LCL,  REL,  CON,  PIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]STARLET.L32;1		      2688         4         0       110


; Bliss-32 10.1-416	Monday 21-AUG-1978 19:15:34	DBB3:[RTL.SRC]FENDFI.B32;12					Page 3-4
;




; Size:		147 code + 0 data bytes
; Run Time:	00:09.7
; Elapsed Time:	00:23.4
; Memory Used:	187 pages
; Compilation Complete
