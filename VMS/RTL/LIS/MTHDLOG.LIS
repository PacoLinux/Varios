MTH$DLOG        ; Floating Point Natural and Common              21-AUG-1978 19:04:17   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)     100  HISTORY	; Detailed Current Edit History
   (3)     100  DECLARATIONS	; Declarative Part of Module
   (4)     100  MTH$DLOG  - Standard Single Precision Floating 
   (5)     100  MTH$DLOG10  - Standard Single Precision Floatin
   (6)     100  MTH$DLOGDLOG10_R8  - Special DLOG/DLOG10 routin
MTH$DLOG        ; Floating Point Natural and Common              21-AUG-1978 19:04:17   VAX-11 MACRO X0.3-11               Page   1
01-9                                                                                                                             (1)

                                     0000   100 	.TITLE	MTH$DLOG 	; Floating Point Natural and Common
                                     0000   200 				; Logarithm Functions (DLOG,DLOG10)
                                     0000   300 	.IDENT /01-9/		; File: MTHDLOG.MAR
                                     0000   400 ;
                                     0000   500 ; Copyright (C) 1977
                                     0000   600 ; Digital Equipment Corporation, Maynard, Massachusetts 01754
                                     0000   700 ;
                                     0000   800 ; This  software  is furnished under a license for use only on a single
                                     0000   900 ; computer  system  and  may  be  copied only with the inclusion of the
                                     0000  1000 ; above copyright notice.  This software, or  any other copies thereof,
                                     0000  1100 ; may not  be  provided or otherwise made available to any other person
                                     0000  1200 ; except  for  use on such system and to one who agree to these license 
                                     0000  1300 ; terms.  Title  to  and  ownership of the software shall  at all times 
                                     0000  1400 ; remain in DEC.
                                     0000  1500 ;
                                     0000  1600 ; The information  in  the software is subject to change without notice
                                     0000  1700 ; and should  not  be  construed  as  a commitment by Digital Equipment 
                                     0000  1800 ; Corporation.
                                     0000  1900 ;
                                     0000  2000 ; DEC assumes  no  responsibility  for  the use  or  reliability of its
                                     0000  2100 ; software on equipment which is not supplied by DEC.
                                     0000  2200 ;
                                     0000  2300 ;
                                     0000  2400 ; FACILITY: MATH LIBRARY
                                     0000  2500 ;++
                                     0000  2600 ; ABSTRACT:
                                     0000  2700 ;
                                     0000  2800 ; MTH$DLOG and MTH$DLOG10 are functions which return the floating point
                                     0000  2900 ; natural  or common logarithm of their single precision floating point
                                     0000  3000 ; argument. The call is standard call-by-reference.
                                     0000  3100 ; MTH$DLOG_R8  and  MTH$DLOG10_R8   are  special routines which are the
                                     0000  3200 ; same as MTH$DLOG and MTH$DLOG10 except a faster non-standard JSB call
                                     0000  3300 ; is used with the argument in R0 and no registers are saved.
                                     0000  3400 ;
                                     0000  3500 ;--
                                     0000  3600 ;
                                     0000  3700 ; VERSION: 01
                                     0000  3800 ;
                                     0000  3900 ; HISTORY:
                                     0000  4000 ; AUTHOR:
                                     0000  4100 ;	Peter Yuo, 15-Oct-76: Version 01
                                     0000  4200 ;
                                     0000  4300 ; MODIFIED BY:
                                     0000  4400 ;
                                     0000  4500 ; 01-1	Peter Yuo, 22-May-77
                                     0000  4600 ;
                                     0000  4700 ;
MTH$DLOG        ; Floating Point Natural and Common              21-AUG-1978 19:04:17   VAX-11 MACRO X0.3-11               Page   2
01-9            HISTORY ; Detailed Current Edit History                                                                          (2)

                                     0000   100 	.SBTTL	HISTORY	; Detailed Current Edit History
                                     0000   200 
                                     0000   300 
                                     0000   400 ; ALGORITHMIC DIFFERENCE FROM FP-11C ROUTINE:
                                     0000   500 ;	1. Uses POLYD so greater accuracy.
                                     0000   600 ;
                                     0000   700 ; Edit History for Version 01 of MTH$DLOGDLOG10 
                                     0000   800 ;
                                     0000   900 ; 01-2	May 20, 1977	P. Yuo
                                     0000  1000 ;	Multiplication of EXPONENT(X) by ln(2) is done after POLY instead of before,
                                     0000  1100 ; so one less register is used.
                                     0000  1200 ;
                                     0000  1300 ; 01-4	May 22, 1977	P. Yuo
                                     0000  1400 ;	Code saving after code review
                                     0000  1500 ; 01-6	MTH$$ERROR changed to MTH$$SIGNAL.
                                     0000  1600 ;	MTH$_... changed to MTH__....
                                     0000  1700 ;	Changed error handling mechanism. Put error result in R0:R1 before
                                     0000  1800 ;	calling MTH$$SIGNAL in order to allow user modify error result.
                                     0000  1900 ; 01-8	Add Rich Lary's code bums for speed...  JMT 26-Jan-78
                                     0000  2000 ; 01-9	Move .ENTRY mask definition to module header.  TNH 14-Aug-78
MTH$DLOG        ; Floating Point Natural and Common              21-AUG-1978 19:04:17   VAX-11 MACRO X0.3-11               Page   3
01-9            DECLARATIONS ; Declarative Part of Module                                                                        (3)

                                     0000   100 	.SBTTL	DECLARATIONS	; Declarative Part of Module
                                     0000   200 
                                     0000   300 ;
                                     0000   400 ; INCLUDE FILES:	OTSPARAMS.MAR
                                     0000   500 ;
                                     0000   600 ; EXTERNAL SYMBOLS:	MTH$JACKET_HDLR
                                     0000   700 ;
                                     0000   800 ; EQUATED SYMBOLS:
                                     0000   900 
                           000041FC  0000   933 	ACMASK = ^M<IV, R2, R3, R4, R5, R6, R7, R8>
                                     0000   966 					; register save mask and IV enable
                           00004080  0000  1000 	SD_1		=	^F1.0	; short floating literal 1.0
                           00003F80  0000  1100 	D_1_OVER_4	=	^X3F80	; 0.25
                                     0000  1200 
                                     0000  1300 ;
                                     0000  1400 ; MACROS:	none
                                     0000  1500 ;
                                     0000  1600 ; PSECT DECLARATIONS:
                                     0000  1700 
                                 00000000  1800 	.PSECT	MTH$CODE	PIC,SHR,LONG,EXE,NOWRT
                                     0000  1900 					; program section for math routines
                                     0000  2000 ;
                                     0000  2100 ; OWN STORAGE:	none
                                     0000  2200 ;
                                     0000  2300 ; CONSTANTS:
                                     0000  2400 
                                     0000  2500 ;
                                     0000  2600 ; Table used by POLYD
                                     0000  2700 ;
                                     0000  2800 DLOGTAB:
                          8CB8 3F2D  0000  2900 	.WORD	^O037455,^O106270	; C6 = 0.16948212488
                          F9F8 DE76  0004  3000 	.WORD	^O157166,^O174770
                          75D9 3F39  0008  3100 	.WORD	^O037471,^O072731	; C5 = 0.1811136267967
                          9E4D BFCE  000C  3200 	.WORD	^O137716,^O117115
                          926B 3F63  0010  3300 	.WORD	^O037543,^O111153	; C4 = 0.22223823332791
                          BB35 6041  0014  3400 	.WORD	^O060101,^O135465
                          491E 3F92  0018  3500 	.WORD	^O037622,^O044436	; C3 = 0.2857140915904889
                          6632 0EC6  001C  3600 	.WORD	^O007306,^O063062
                          CCCC 3FCC  0020  3700 	.WORD	^O037714,^O146314	; C2 = 0.400000001206045365
                          EBFB D728  0024  3800 	.WORD	^O153450,^O165773
                          AAAA 402A  0028  3900 	.WORD	^O040052,^O125252	; C1 = 0.6666666666633660894
                          09A3 AAA7  002C  4000 	.WORD	^O125247,^O004643
                          0000 4100  0030  4100 	.WORD	^O040400,^O000000	; C0 = 2.00000000000000261
                          002F 0000  0034  4200 	.WORD	^O000000,^O000057
                           00000007  0038  4300 DLOGLEN = .-DLOGTAB/8			; no. of coefficients
                                     0038  4400 ;
                                     0038  4500 ; More constants
                                     0038  4600 ;
                                     0038  4700 D_DLOG10_E:				; LOG10(e)
                          5BD8 3FDE  0038  4800 	.WORD	^O037736,^O055730
                          2872 A937  003C  4900 	.WORD	^O124467,^O024162
                                     0040  5000 D_DLOG_2_OV_128:				; DLOG(2)/128.
                          7217 3CB1  0040  5100 	.WORD	^O036261,^O071027
                          CF7A F7D1  0044  5200 	.WORD	^O173721,^O147572
                                     0048  5300 D_SQRT_2_OV_2:				; DSQRT(2)/2
                          04F3 4035  0048  5400 	.WORD	^O040065,^O002363
                          DE65 33F9  004C  5500 	.WORD	^O031771,^O157145
MTH$DLOG        ; Floating Point Natural and Common              21-AUG-1978 19:04:17   VAX-11 MACRO X0.3-11               Page   4
01-9            DECLARATIONS ; Declarative Part of Module                                                                        (3)

                                     0050  5600 D_MI_LG_2_OV_2:			; -DLOG(2)/2
                          7217 BFB1  0050  5700 	.WORD	^O137661,^O071027
                          CF7A F7D1  0054  5800 	.WORD	^O173721,^O147572
                                     0058  5900 
                                     0058  6000 
                                     0058  6100 
MTH$DLOG        ; Floating Point Natural and Common              21-AUG-1978 19:04:17   VAX-11 MACRO X0.3-11               Page   5
01-9            MTH$DLOG  - Standard Single Precision Floating                                                                   (4)

                                     0058   100 	.SBTTL	MTH$DLOG  - Standard Single Precision Floating DLOG
                                     0058   200 
                                     0058   300 
                                     0058   400 ;++
                                     0058   500 ; FUNCTIONAL DESCRIPTION:
                                     0058   600 ;
                                     0058   700 ; DLOG  - single precision floating point function
                                     0058   800 ;
                                     0058   900 ; DLOG(X) is computed using the following approximation technique:
                                     0058  1000 ;
                                     0058  1100 ;	If X <= 0 , error.
                                     0058  1200 ;
                                     0058  1300 ;	Let X = Y * (2**A), where 1/2 <= Y < 1
                                     0058  1400 ;	then DLOG(X) = A * DLOG(2) + DLOG(Y)
                                     0058  1500 ;
                                     0058  1600 ;	If |X-1| <= 0.25, let W = (X-1) / (X+1)
                                     0058  1700 ;	DLOG(X) = W * SUM(Ci * W ** (2*i))
                                     0058  1800 ;
                                     0058  1900 ;	Otherwise, let W = (Y-DSQRT(2)/2)/(Y+DSQRT(2)/2)
                                     0058  2000 ;	DLOG(X) = A * DLOG(2) - 1/2 * DLOG(2) + W * SUM(Ci * W **(2*i)
                                     0058  2100 ;
                                     0058  2200 ;	The coefficients are drawn from Hart #2662.
                                     0058  2300 ;	The polynomial approximation used is of degree 4.
                                     0058  2400 ;
                                     0058  2500 ;	The relative error is less than or equal to 10**-9.9.
                                     0058  2600 ;
                                     0058  2700 ; CALLING SEQUENCE:
                                     0058  2800 ;
                                     0058  2900 ;	logarithm.wd.v = MTH$DLOG(x.rd.r)
                                     0058  3000 ;
                                     0058  3100 ; INPUT PARAMETERS:
                                     0058  3200 
                           00000004  0058  3300 	LONG = 4			; define longword multiplier
                           00000004  0058  3400 	x = 1 * LONG			; Contents of x is the argument
                                     0058  3500 
                                     0058  3600 ; IMPLICIT INPUTS:	none
                                     0058  3700 ;
                                     0058  3800 ; OUTPUT PARAMETERS:
                                     0058  3900 ;
                                     0058  4000 ;	VALUE:	double precision floating logarithm of the argument
                                     0058  4100 ;
                                     0058  4200 ; IMPLICIT OUTPUTS:	none
                                     0058  4300 ;
                                     0058  4400 ; COMPLETION CODES:	none
                                     0058  4500 ;
                                     0058  4600 ; SIDE EFFECTS:
                                     0058  4700 ;
                                     0058  4800 ; Signals: MTH$_LOGZERNEG if |X| =< 0.0 with reserved operand in R0/R1
                                     0058  4900 ; (copied to the signal mechanism vector CHF$L_MCH_R0/R1 by LIB$SIGNAL).
                                     0058  5000 ; Associated message is: "LOGARITHM OF ZERO OR NEGATIVE VALUE". Result is reserved
                                     0058  5100 ; operand -0.0 unless a user supplied (or any) error handler changes CHF$L_MCH_R0/R1
                                     0058  5200 ;
                                     0058  5300 ; NOTE: This procedure disables floating point underflow, enables integer
                                     0058  5400 ; overflow, causes no floating overflow or other arithmetic traps, and
                                     0058  5500 ; preserves enables across the call.
                                     0058  5600 ;
                                     0058  5700 ;---
MTH$DLOG        ; Floating Point Natural and Common              21-AUG-1978 19:04:17   VAX-11 MACRO X0.3-11               Page   6
01-9            MTH$DLOG  - Standard Single Precision Floating                                                                   (4)

                                     0058  5800 
                                     0058  5900 
                               41FC' 0058  6000 	.ENTRY	MTH$DLOG, ACMASK	; standard call-by-reference entry
                                     005A  6100 					; disable DV (and FU), enable IV
                                     005A  6200 	MTH$FLAG_JACKET			; flag that this is a jacket procedure in
                                     005A      
            6D       0000'CF     3E  005A       	MOVAW	W^MTH$$JACKET_HND, (FP)
                                     005F       					; set handler address to jacket
                                     005F       					; handler
                                     005F       
                                     005F  6300 					; case of an error in special JSB routine
            50         04 BC     70  005F  6400 	MOVD	@x(AP), R0		; R0/R1 = arg 
                          1A     10  0063  6500 	BSBB	MTH$DLOG_R8 		; call special DLOG rountine
                                 04  0065  6600 	RET				; return - result in R0
                                     0066  6700 
MTH$DLOG        ; Floating Point Natural and Common              21-AUG-1978 19:04:17   VAX-11 MACRO X0.3-11               Page   7
01-9            MTH$DLOG10  - Standard Single Precision Floatin                                                                  (5)

                                     0066   100 	.SBTTL	MTH$DLOG10  - Standard Single Precision Floating Common logarithm
                                     0066   200 
                                     0066   300 ;++
                                     0066   400 ; FUNCTIONAL DESCRIPTION:
                                     0066   500 ;
                                     0066   600 ; DLOG10  - single precision floating point function
                                     0066   700 ;
                                     0066   800 ; DLOG10(X) is computed as DLOG10(E) * DLOG(X).
                                     0066   900 ;
                                     0066  1000 ; See description of MTH$DLOG 
                                     0066  1100 ;
                                     0066  1200 ; CALLING SEQUENCE:
                                     0066  1300 ;
                                     0066  1400 ;	logarithm_base_10.wd.v = MTH$DLOG10(x.rd.r)
                                     0066  1500 ;
                                     0066  1600 ; INPUT PARAMETERS:
                                     0066  1700 
                           00000004  0066  1800 	LONG = 4			; define longword multiplier
                           00000004  0066  1900 	x = 1 * LONG			; Contents of x is the argument 
                                     0066  2000 
                                     0066  2100 ;
                                     0066  2200 ; SIDE EFFECTS:	See description of MTH$DLOG
                                     0066  2300 ;
                                     0066  2400 ;--
                                     0066  2500 
                                     0066  2600 
                               41FC' 0066  2700 	.ENTRY	MTH$DLOG10, ACMASK	; standard call-by-reference entry
                                     0068  2800 					; disable DV (and FU), enable IV
                                     0068  2900 	MTH$FLAG_JACKET			; flag that this is a jacket procedure in
                                     0068      
            6D       0000'CF     3E  0068       	MOVAW	W^MTH$$JACKET_HND, (FP)
                                     006D       					; set handler address to jacket
                                     006D       					; handler
                                     006D       
                                     006D  3000 					; case of an error in special JSB routine
            50         04 BC     70  006D  3100 	MOVD	@x(AP), R0		; R0/R1 = arg 
                          01     10  0071  3200 	BSBB	MTH$DLOG10_R8 		; call special DLOG10 routine
                                 04  0073  3300 	RET				; return - result in R0
                                     0074  3400 
MTH$DLOG        ; Floating Point Natural and Common              21-AUG-1978 19:04:17   VAX-11 MACRO X0.3-11               Page   8
01-9            MTH$DLOGDLOG10_R8  - Special DLOG/DLOG10 routin                                                                  (6)

                                     0074   100 	.SBTTL	MTH$DLOGDLOG10_R8  - Special DLOG/DLOG10 routines
                                     0074   200 
                                     0074   300 ; Special DLOG/DLOG10 - used by the standard routine, and directly.
                                     0074   400 ;
                                     0074   500 ; CALLING SEQUENCE:
                                     0074   600 ;	save anything needed in R0:R9
                                     0074   700 ;	MOVD	..., R0			; input in R0/R1
                                     0074   800 ;	JSB	MTH$DLOG10_R8 /MTH$DLOG_R8 
                                     0074   900 ;	return with result in R0/R1
                                     0074  1000 ; Note: This routine is written to avoid causing any integer overflows, floating
                                     0074  1100 ; overflows, or floating underflows or divide by 0 conditions, whether enabled or
                                     0074  1200 ; not.
                                     0074  1300 ;
                                     0074  1400 ; REGISTERS USED:
                                     0074  1500 ;	R0/R1 - Double floating argument then result
                                     0074  1600 ;	R2/R3 - scratch
                                     0074  1700 ;	R0:R5 - POLYD
                                     0074  1800 ;	R6/R7 - W during POLYD
                                     0074  1900 ;	R8 - exponent(X)
                                     0074  2000 
                                     0074  2100 
                                     0074  2400 
                                     0074  2500 MTH$DLOG10_R8::				; special DLOG10 routine
                          50     73  0074  2600 	TSTD	R0			; test the sign of X
                          6A     15  0076  2700 	BLEQ	ERROR			; branch if X is not positive
                                     0078  2800 					; user PC on top of stack
                                     0078  2900 					; Note: ERROR routine depends on user
                                     0078  3000 					; PC being on top of stack, so subroutine
                                     0078  3100 					; call to MTH$DLOG_R8 is not used
                          09     10  0078  3200 	BSBB	DLOG_COMMON_R8 		; call common DLOG/DLOG10 routine
            50         BB AF     64  007A  3300 	MULD	D_DLOG10_E, R0		; R0/R1 = DLOG10(e) * DLOG(X)
                                 05  007E  3400 	RSB				; return
                                     007F  3500 
                                     007F  3600 MTH$DLOG_R8::				; Special routine for DLOG
                          50     73  007F  3700 	TSTD	R0			; test sign of X
                          5F     15  0081  3800 	BLEQ	ERROR			; jump if X is not positive
                                     0083  3900 					; user PC on top of stack
                                     0083  4000 DLOG_COMMON_R8:				; common part of DLOG/DLOG10
            50            08     63  0083  4100 	SUBD3	S^#SD_1, R0, R6		; R6/R7 = X-1.0
                          56         0086       
            56       8000 8F     AB  0087  4200 	BICW3	#^X8000, R6, R2		; R2/R3 = |X-1|
                          52         008C       
       3F80 8F            52     B1  008D  4300 	CMPW	R2, #D_1_OVER_4		; compare |X-1| woth 0.25
                          14     18  0092  4400 	BGEQ	GEQ_THAN_0.25		; branch if |X-1| >= 0.25
                                     0094  4500 ;
                                     0094  4600 ; |X - 1| =< 0.25
                                     0094  4700 ;
            50            08     60  0094  4800 	ADDD	S^#SD_1, R0		; R0/R1 = X + 1
            56            50     66  0097  4900 	DIVD	R0, R6			; R6/R7 = W = (X-1)/(X+1)
            56            56     65  009A  5000 	MULD3	R6, R6, R0		; R0/R1 = Y = W**2
                          50         009D       
            06            50     75  009E  5100 	POLYD	R0, #DLOGLEN-1, DLOGTAB	; R0/R1 = SUM(CI*W**(I*2))
                     FF5C CF         00A1       
            50            56     64  00A4  5200 	MULD	R6, R0			; R0/R1 = W * SUM(Ci*W**(i*2))
                                 05  00A7  5300 	RSB				; return
                                     00A8  5400 ;
                                     00A8  5500 ; |X - 1| >= 0.25
MTH$DLOG        ; Floating Point Natural and Common              21-AUG-1978 19:04:17   VAX-11 MACRO X0.3-11               Page   9
01-9            MTH$DLOGDLOG10_R8  - Special DLOG/DLOG10 routin                                                                  (6)

                                     00A8  5600 ;
                                     00A8  5700 GEQ_THAN_0.25:
            58            50     B0  00A8  5800 	MOVW	R0, R8			; R8 = exp and high mantissa
            50       7F80 8F     AA  00AB  5900 	BICW	#^X7F80, R0		; clear exp from R0
            50       4000 8F     A8  00B0  6000 	BISW	#^X4000, R0		; force R0 into [1/2,1]
            58            50     A2  00B5  6100 	SUBW	R0, R8
            50         8D AF     63  00B8  6200 	SUBD3	D_SQRT_2_OV_2, R0, R6
                          56         00BC       
                                     00BD  6300 					; R6/R7 = Z - DSQRT(2)/2
            50         88 AF     60  00BD  6400 	ADDD	D_SQRT_2_OV_2, R0	; R0/R1 = Z + DSQRT(2)/2
            56            50     66  00C1  6500 	DIVD	R0, R6			; R6/R7 = W = (Z - DSQRT(2)/2)
                                     00C4  6600 					;         /(Z + DSQRT(2)/2)
            56            56     65  00C4  6700 	MULD3	R6, R6, R0		; R0/R1 = Y = W ** 2
                          50         00C7       
            06            50     75  00C8  6800 	POLYD	R0, #DLOGLEN-1, DLOGTAB	; R0/R1 = SUM(Ci*W**(i*2)) i = 0:3
                     FF32 CF         00CB       
            50            56     64  00CE  6900 	MULD	R6, R0			; R0/R1 = W * SUM(Ci*W**(i*2)) i=0:3
            50       FF7B CF     60  00D1  7000 	ADDD	D_MI_LG_2_OV_2, R0	; R0/R1 = W * SUM(Ci*W**(i*2)) -
                                     00D6  7100 					;      (1/2)*LN(2)
            52            58     6D  00D6  7200 	CVTWD	R8, R2			; R2/R3 = converted floating form of
                                     00D9  7300 					; exp of X
            52       FF63 CF     64  00D9  7400 	MULD	D_DLOG_2_OV_128, R2	; R2/R3 = exponent(X) * LN(2)
            50            52     60  00DE  7500 	ADDD	R2, R0			; R0/R1 = W * SUM(Ci*W**(i*2)) -
                                     00E1  7600 					; (1/2)*LN(2) + exponent(X) * LN(2)
                                 05  00E1  7700 	RSB				; return
                                     00E2  7800 
                                     00E2  7900 ;
                                     00E2  8000 ; X =< 0.0, signal error
                                     00E2  8100 ;
                          6E     DD  00E2  8200 ERROR:	PUSHL	(SP)			; return PC from JSB routine
            7E         53 8F     9A  00E4  8300 	MOVZBL	#MTH__LOGZERNEG, -(SP)	; condition value
            01            0F     79  00E8  8400 	ASHQ	#15, #1, R0		; R0 = result = reserved operand -0.0
                          50         00EB       
                                     00EC  8500 					; goes to signal mechanism vector
                                     00EC  8600 					; (CHF$L_MCH_R0/R1) so error handler
                                     00EC  8700 					; can modify the result.
       0000'CF            02     FB  00EC  8800 	CALLS	#2, W^MTH$$SIGNAL	; signal error and use real user's PC
                                     00F1  8900 					; independent of CALL vs JSB
                                 05  00F1  9000 	RSB				; return - R0 restored from CHF$L_MCH_R0/R1
                                     00F2  9100 
                                     00F2  9200 
                                     00F2  9300 
                                     00F2  9400 	.END
MTH$DLOG        ; Floating Point Natural and Common              21-AUG-1978 19:04:17   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (6)

ACMASK         = 000041FC            
DLOGLEN        = 00000007            
DLOGTAB          00000000 R     02   
DLOG_COMMON_R8   00000083 R     02   
D_1_OVER_4     = 00003F80            
D_DLOG10_E       00000038 R     02   
D_DLOG_2_OV_128  00000040 R     02   
D_MI_LG_2_OV_2   00000050 R     02   
D_SQRT_2_OV_2    00000048 R     02   
ERROR            000000E2 R     02   
FOR$K_ERR_PREFX= 00000018            
GEQ_THAN_0.25    000000A8 R     02   
LONG           = 00000004            
MTH$$JACKET_HND  ********   X   02   
MTH$$SIGNAL      ********   X   02   
MTH$DLOG         00000058 RG    02   
MTH$DLOG10       00000066 RG    02   
MTH$DLOG10_R8    00000074 RG    02   
MTH$DLOG_R8      0000007F RG    02   
MTH$K_ERR_PREFX= 00000016            
MTH__FLOOVEMAT = 00000058            
MTH__FLOUNDMAT = 00000059            
MTH__INVARG    = 00000051            
MTH__LOGZERNEG = 00000053            
MTH__SINSIGLOS = 00000057            
MTH__SQUROONEG = 00000054            
MTH__UNDEXP    = 00000052            
MTH__WRONUMARG = 00000050            
SD_1           = 00004080            
X              = 00000004            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
MTH$CODE         000000F2      02       PIC   USR   CON   REL   LCL   SHR   EXE   RD  NOWRT LONG  


THERE WERE NO ERRORS OR WARNINGS.
27680. BYTES LEFT IN FREE MEMORY POOL.
OBJ$:MTHDLOG,LIS$:MTHDLOG/-SP=LIB$:S/ML,SRC$:P,MTHDLOG
0 MLB DIR RDS - 0 GETS TO DEFINE 0 MACROS. 4 INTER. FILE WRITES. 
