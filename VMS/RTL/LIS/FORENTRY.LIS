FOR$ENTRY       - entry points for I/O statement initialization  21-AUG-1978 18:55:02   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)     100  HISTORY		; Detailed Current Edit History
   (3)     100  DECLARATIONS
   (4)     100  FOR$READ_SF - READ Sequential formatted
FOR$ENTRY       - entry points for I/O statement initialization  21-AUG-1978 18:55:02   VAX-11 MACRO X0.3-11               Page   1
0-12                                                                                                                             (1)

                                     0000   100 	.TITLE	FOR$ENTRY - entry points for I/O statement initialization
                                     0000   200 	.IDENT	/0-12/
                                     0000   300 ;
                                     0000   400 ; Copyright (C) 1977
                                     0000   500 ; Digital Equipment Corporation, Maynard, Massachusetts 01754
                                     0000   600 ;
                                     0000   700 ; This software is furnished under a license for use only on a single
                                     0000   800 ; computer  system  and  may be copied only with the inclusion of the
                                     0000   900 ; above copyright notice. This software, or any other copies thereof,
                                     0000  1000 ; may not be provided or otherwise made available to any other person
                                     0000  1100 ; except for use on such system and to one who agree to these license 
                                     0000  1200 ; terms.  Title to  and  ownership of the software shall at all times 
                                     0000  1300 ; remain in DEC.
                                     0000  1400 ;
                                     0000  1500 ; The information in the software is subject to change without notice
                                     0000  1600 ; and should  not  be construed  as a commitment by Digital Equipment 
                                     0000  1700 ; Corporation.
                                     0000  1800 ;
                                     0000  1900 ; DEC assumes  no  responsibility  for the use or  reliability of its
                                     0000  2000 ; software on equipment which is not supplied by DEC.
                                     0000  2100 ;
                                     0000  2200 ;
                                     0000  2300 ;++
                                     0000  2400 ; FACILITY: FORTRAN Support Library - user callable
                                     0000  2500 ;
                                     0000  2600 ; ABSTRACT:
                                     0000  2700 ;
                                     0000  2800 ;	This module contains the User Program Interface (UPI) entry points
                                     0000  2900 ;	for the standard FORTRAN I/O statements. Each of these entry points
                                     0000  3000 ;	is called from FORTRAN compiled code. Each puts a bit-encoded value in R11
                                     0000  3100 ;	and then branches to the common routine FOR$$IO_BEG. The effect is as if
                                     0000  3200 ;	the compiled code had directly called FOR$$IO_BEG with the additonal
                                     0000  3300 ;	bit-encoded control argument in R0.
                                     0000  3400 ;
                                     0000  3500 ; MAINTENANCE NOTE:
                                     0000  3600 ;	The transfer vector (RTLVECTOR+ALLGBL) must have the following:
                                     0000  3700 ;
                                     0000  3800 ;	.TRANSFER	FOR$READ_SF
                                     0000  3900 ;	.MASK		FOR$$IO_BEG
                                     0000  4000 ;	BRW		FOR$READ_SF+2
                                     0000  4100 ;
                                     0000  4200 ;	This puts the correct mask in entry vector, that is FOR$$IO_BEG entry mask.
                                     0000  4300 ;	Furthermore this module must only use R0 and R1, least is use a register
                                     0000  4400 ;	which might not be in entry mask for FOR$$IO_BEG.
                                     0000  4500 ;
                                     0000  4600 ; ENVIRONMENT: User access mode; mixture of AST level or not
                                     0000  4700 ;
                                     0000  4800 ; AUTHOR:	Richard B. Grove, CREATION DATE: 28-May-78
                                     0000  4900 ;
                                     0000  5000 ; MODIFIED BY:
                                     0000  5100 ;	T. Hastings, 29-July-78
FOR$ENTRY       - entry points for I/O statement initialization  21-AUG-1978 18:55:02   VAX-11 MACRO X0.3-11               Page   2
0-12            HISTORY  ; Detailed Current Edit History                                                                         (2)

                                     0000   100 	.SBTTL	HISTORY		; Detailed Current Edit History
                                     0000   200 
                                     0000   300 
                                     0000   400 ; Edit History for Version 1
                                     0000   500 ;
                                     0000   600 ; 0-10	- Add comment about vectors.  TNH 23-June-78
                                     0000   700 ; 0-12	- Pass arg in R0, not R0R, add comments.  TNH 29-July-78
FOR$ENTRY       - entry points for I/O statement initialization  21-AUG-1978 18:55:02   VAX-11 MACRO X0.3-11               Page   3
0-12            DECLARATIONS                                                                                                     (3)

                                     0000   100 	.SBTTL	DECLARATIONS
                                     0000   200 
                                     0000   300 ;
                                     0000   400 ; INCLUDE FILES:
                                     0000   500 ;
                                     0000   600 
                                     0000   700 	$FORPAR				; Define inter-module FORTRAN symbols
                                     0000   800 
                                     0000   900 ;
                                     0000  1000 ; EXTERNAL SYMBOLS:
                                     0000  1100 ;
                                     0000  1200 
                                     0000  1300 	.DSABL	GBL			; Declare all external symbols
                                     0000  1400 	.EXTRN	FOR$$IO_BEG		; common I/O statement processing
                                     0000  1500 
                                     0000  1600 
                                     0000  1700 ;
                                     0000  1800 ; MACROS:
                                     0000  1900 ;
                                     0000  2000 
                                     0000  2100 ;
                                     0000  2200 ; PSECT DECLARATIONS:
                                     0000  2300 ;
                                     0000  2400 
                                 00000000  2500 	.PSECT	FOR$CODE PIC,USR,CON,REL,LCL,SHR,EXE,RD,NOWRT
                                     0000  2600 
                                     0000  2700 ;
                                     0000  2800 ; EQUATED SYMBOLS:
                                     0000  2900 ;
                                     0000  3000 
                                     0000  3100 ;+
                                     0000  3200 ; The bit-encoded control argument passed in R11 contains the following fields:
                                     0000  3300 ;
                                     0000  3400 ;	FOR$K_REC_NO	- Direct-access record number present
                                     0000  3500 ;	FOR$K_FMT_ADR	- Address of compiled or object-time FORMAT
                                     0000  3600 ;	FOR$K_USR_BUF	- User buffer address (ENCODE or DECODE)
                                     0000  3700 ;	FOR$K_LIST_DIR	- List-directed I/O statement
                                     0000  3800 ;	FOR$K_WRITE	- Object-time FORMAT to be compiled at run time
                                     0000  3900 ;	<8,8>	- I/O statement type of form FOR$K_STTM_xyz (See FPAR.MDL)
                                     0000  4000 
                                     0000  4100 ;
                                     0000  4200 ; OWN STORAGE:
                                     0000  4300 ;
                                     0000  4400 
FOR$ENTRY       - entry points for I/O statement initialization  21-AUG-1978 18:55:02   VAX-11 MACRO X0.3-11               Page   4
0-12            FOR$READ_SF - READ Sequential formatted                                                                          (4)

                                     0000   100 	.SBTTL	FOR$READ_SF - READ Sequential formatted
                                     0000   200 
                                     0000   300 ;++
                                     0000   400 ; FUNCTIONAL DESCRIPTION:
                                     0000   500 ;
                                     0000   600 ;	Initialize the FORTRAN I/O system to perform
                                     0000   700 ;	a READ sequential formatted I/O statement.
                                     0000   800 ;
                                     0000   900 ; CALLING SEQUENCE:
                                     0000  1000 ;
                                     0000  1100 ;	CALL FOR$READ_SF (unit.rl.v, format_adr.mbu.ra
                                     0000  1200 ;		[, err_adr.j.r [, end_adr.j.r]])
                                     0000  1300 ;
                                     0000  1400 ; INPUT PARAMETERS:
                                     0000  1500 ;
                                     0000  1600 ;	unit.rl.v		logical unit number
                                     0000  1700 ;	format_adr.mbu.ra	adr. of compiled format byte array
                                     0000  1800 ;	[err_adr.j.r]		optional ERR= address
                                     0000  1900 ;	[end_adr.j.r]		optional END= address
                                     0000  2000 ;
                                     0000  2100 ; IMPLICIT INPUTS:
                                     0000  2200 ;	NONE except those used by FOR$$IO_BEG.
                                     0000  2300 ;
                                     0000  2400 ; OUTPUT PARAMETERS:
                                     0000  2500 ;	NONE
                                     0000  2600 ;
                                     0000  2700 ; IMPLICIT OUTPUTS:
                                     0000  2800 ;	NONE except those left by FOR$$IO_BEG.
                                     0000  2900 ;
                                     0000  3000 ; COMPLETION CODES:
                                     0000  3100 ;	NONE
                                     0000  3200 ;
                                     0000  3300 ; SIDE EFFECTS:
                                     0000  3400 ;	NONE except those of FOR$$IO_BEG.
                                     0000  3500 ;
                                     0000  3600 ;--
                                     0000  3700 
                               0000' 0000  3800 FOR$READ_SF::	.MASK	FOR$$IO_BEG
            50            02     3C  0002  3900 	MOVZWL	#FOR$K_STTM_RSF*256+		-
                                     0005  4000 		    <1@FOR$K_FMT_ADR>, R0
                          FFFA'  31  0005  4100 	BRW	FOR$$IO_BEG+2		; branch past call mask
FOR$ENTRY       - entry points for I/O statement initialization  21-AUG-1978 18:55:02   VAX-11 MACRO X0.3-11               Page   5
0-12            FOR$READ_SF - READ Sequential formatted                                                                          (5)

                                     0008   100 ;+
                                     0008   200 ; STATEMENT:	WRITE sequential formatted
                                     0008   300 ;
                                     0008   400 ; CALLING SEQUENCE:
                                     0008   500 ;
                                     0008   600 ;	CALL FOR$WRITE_SF (unit.rl.v, format_adr.rbu.ra
                                     0008   700 ;		[, err_adr.j.r [, end_adr.j.r]])
                                     0008   800 ;-
                                     0008   900 
                               0000' 0008  1000 FOR$WRITE_SF::	.MASK	FOR$$IO_BEG
            50       0102 8F     3C  000A  1100 	MOVZWL	#FOR$K_STTM_WSF*256+		-
                                     000F  1200 		    <1@FOR$K_FMT_ADR>, R0
                          FFF0'  31  000F  1300 	BRW	FOR$$IO_BEG+2		; branch past call mask
                                     0012  1400 
                                     0012  1500 ;+
                                     0012  1600 ; STATEMENT:	READ sequentail object-time formatted
                                     0012  1700 ;
                                     0012  1800 ; CALLING SEQUENCE:
                                     0012  1900 ;
                                     0012  2000 ;	CALL FOR$READ_SO (unit.rl.v, ot_format_adr.rt.r
                                     0012  2100 ;		[, err_adr.j.r [, end_adr.j.r]])
                                     0012  2200 ;-
                                     0012  2300 
                               0000' 0012  2400 FOR$READ_SO::	.MASK	FOR$$IO_BEG
            50       0082 8F     3C  0014  2500 	MOVZWL	#FOR$K_STTM_RSF*256+		-
                                     0019  2600 		    <1@FOR$K_OBJ_FMT>+<1@FOR$K_FMT_ADR>, R0
                          FFE6'  31  0019  2700 	BRW	FOR$$IO_BEG+2		; branch past call mask
                                     001C  2800 
                                     001C  2900 ;+
                                     001C  3000 ; STATEMENT:	WRITE sequential object-time formatted
                                     001C  3100 ;
                                     001C  3200 ; CALLING SEQUENCE:
                                     001C  3300 ;
                                     001C  3400 ;	CALL FOR$WRITE_SO (unit.rl.v, ot_format_adr.rt.r
                                     001C  3500 ;		[, err_adr.j.r [, end_adr.j.r]])
                                     001C  3600 ;-
                                     001C  3700 
                               0000' 001C  3800 FOR$WRITE_SO::	.MASK	FOR$$IO_BEG
            50       0182 8F     3C  001E  3900 	MOVZWL	#FOR$K_STTM_WSF*256+		-
                                     0023  4000 		    <1@FOR$K_OBJ_FMT>+<1@FOR$K_FMT_ADR>, R0
                          FFDC'  31  0023  4100 	BRW	FOR$$IO_BEG+2		; branch past call mask
                                     0026  4200 
                                     0026  4300 ;+
                                     0026  4400 ; STATEMENT:	READ sequential unformatted
                                     0026  4500 ;
                                     0026  4600 ; CALLING SEQUENCE:
                                     0026  4700 ;
                                     0026  4800 ;	CALL FOR$READ_SU (unit.rl.v, 
                                     0026  4900 ;		[, err_adr.j.r [, end_adr.j.r]])
                                     0026  5000 ;-
                                     0026  5100 
                               0000' 0026  5200 FOR$READ_SU::	.MASK	FOR$$IO_BEG
            50       0200 8F     3C  0028  5300 	MOVZWL	#FOR$K_STTM_RSU*256+		-
                                     002D  5400 		    0, R0
                          FFD2'  31  002D  5500 	BRW	FOR$$IO_BEG+2		; branch past call mask
                                     0030  5600 
FOR$ENTRY       - entry points for I/O statement initialization  21-AUG-1978 18:55:02   VAX-11 MACRO X0.3-11               Page   6
0-12            FOR$READ_SF - READ Sequential formatted                                                                          (6)

                                     0030   100 ;+
                                     0030   200 ; STATEMENT:	WRITE sequential unformatted
                                     0030   300 ;
                                     0030   400 ; CALLING SEQUENCE:
                                     0030   500 ;
                                     0030   600 ;	CALL FOR$WRITE_SU (unit.rl.v, 
                                     0030   700 ;		[, err_adr.j.r [, end_adr.j.r]])
                                     0030   800 ;-
                                     0030   900 
                               0000' 0030  1000 FOR$WRITE_SU::	.MASK	FOR$$IO_BEG
            50       0300 8F     3C  0032  1100 	MOVZWL	#FOR$K_STTM_WSU*256+		-
                                     0037  1200 		    0, R0
                          FFC8'  31  0037  1300 	BRW	FOR$$IO_BEG+2		; branch past call mask
                                     003A  1400 
                                     003A  1500 ;+
                                     003A  1600 ; STATEMENT:	READ direct formatted
                                     003A  1700 ;
                                     003A  1800 ; CALLING SEQUENCE:
                                     003A  1900 ;
                                     003A  2000 ;	CALL FOR$READ_DF (unit.rl.v, record_no.rl.v, format_adr.mbu.ra
                                     003A  2100 ;		[, err_adr.j.r [, end_adr.j.r]])
                                     003A  2200 ;-
                                     003A  2300 
                               0000' 003A  2400 FOR$READ_DF::	.MASK	FOR$$IO_BEG
            50       0403 8F     3C  003C  2500 	MOVZWL	#FOR$K_STTM_RDF*256+		-
                                     0041  2600 		    <1@FOR$K_FMT_ADR>+<1@FOR$K_REC_NO>, R0
                          FFBE'  31  0041  2700 	BRW	FOR$$IO_BEG+2		; branch past call mask
                                     0044  2800 
                                     0044  2900 ;+
                                     0044  3000 ; STATEMENT:	WRITE direct formatted
                                     0044  3100 ;
                                     0044  3200 ; CALLING SEQUENCE:
                                     0044  3300 ;
                                     0044  3400 ;	CALL FOR$WRITE_DF (unit.rl.v, record_no.rl.v, format_adr.rbu.ra
                                     0044  3500 ;		[, err_adr.j.r [, end_adr.j.r]])
                                     0044  3600 ;-
                                     0044  3700 
                               0000' 0044  3800 FOR$WRITE_DF::	.MASK	FOR$$IO_BEG
            50       0503 8F     3C  0046  3900 	MOVZWL	#FOR$K_STTM_WDF*256+		-
                                     004B  4000 		    <1@FOR$K_FMT_ADR>+<1@FOR$K_REC_NO>, R0
                          FFB4'  31  004B  4100 	BRW	FOR$$IO_BEG+2		; branch past call mask
                                     004E  4200 
                                     004E  4300 ;+
                                     004E  4400 ; STATEMENT:	READ direct object-time formatted
                                     004E  4500 ;
                                     004E  4600 ; CALLING SEQUENCE:
                                     004E  4700 ;
                                     004E  4800 ;	CALL FOR$READ_DO (unit.rl.v, record_no.rl.v, ot_format_adr.rt.r
                                     004E  4900 ;		[, err_adr.j.r [, end_adr.j.r]])
                                     004E  5000 ;-
                                     004E  5100 
                               0000' 004E  5200 FOR$READ_DO::	.MASK	FOR$$IO_BEG
            50       0483 8F     3C  0050  5300 	MOVZWL	#FOR$K_STTM_RDF*256+		-
                                     0055  5400 		    <1@FOR$K_OBJ_FMT>+<1@FOR$K_FMT_ADR>+<1@FOR$K_REC_NO>, R0
                          FFAA'  31  0055  5500 	BRW	FOR$$IO_BEG+2		; branch past call mask
                                     0058  5600 
FOR$ENTRY       - entry points for I/O statement initialization  21-AUG-1978 18:55:02   VAX-11 MACRO X0.3-11               Page   7
0-12            FOR$READ_SF - READ Sequential formatted                                                                          (7)

                                     0058   100 ;+
                                     0058   200 ; STATEMENT:	WRITE direct object-time formatted
                                     0058   300 ;
                                     0058   400 ; CALLING SEQUENCE:
                                     0058   500 ;
                                     0058   600 ;	CALL FOR$WRITE_DO (unit.rl.v, record_no.rl.v, ot_format_adr.rt.r
                                     0058   700 ;		[, err_adr.j.r [, end_adr.j.r]])
                                     0058   800 ;-
                                     0058   900 
                               0000' 0058  1000 FOR$WRITE_DO::	.MASK	FOR$$IO_BEG
            50       0583 8F     3C  005A  1100 	MOVZWL	#FOR$K_STTM_WDF*256+		-
                                     005F  1200 		    <1@FOR$K_OBJ_FMT>+<1@FOR$K_FMT_ADR>+<1@FOR$K_REC_NO>, R0
                          FFA0'  31  005F  1300 	BRW	FOR$$IO_BEG+2		; branch past call mask
                                     0062  1400 
                                     0062  1500 ;+
                                     0062  1600 ; STATEMENT:	READ direct unformatted
                                     0062  1700 ;
                                     0062  1800 ; CALLING SEQUENCE:
                                     0062  1900 ;
                                     0062  2000 ;	CALL FOR$READ_DU (unit.rl.v, record_no.rl.v
                                     0062  2100 ;		[, err_adr.j.r [, end_adr.j.r]])
                                     0062  2200 ;-
                                     0062  2300 
                               0000' 0062  2400 FOR$READ_DU::	.MASK	FOR$$IO_BEG
            50       0601 8F     3C  0064  2500 	MOVZWL	#FOR$K_STTM_RDU*256+		-
                                     0069  2600 		    <1@FOR$K_REC_NO>, R0
                          FF96'  31  0069  2700 	BRW	FOR$$IO_BEG+2		; branch past call mask
                                     006C  2800 
                                     006C  2900 ;+
                                     006C  3000 ; STATEMENT:	WRITE direct unformatted
                                     006C  3100 ;
                                     006C  3200 ; CALLING SEQUENCE:
                                     006C  3300 ;
                                     006C  3400 ;	CALL FOR$WRITE_DU (unit.rl.v, record_no.rl.v
                                     006C  3500 ;		[, err_adr.j.r [, end_adr.j.r]])
                                     006C  3600 ;-
                                     006C  3700 
                               0000' 006C  3800 FOR$WRITE_DU::	.MASK	FOR$$IO_BEG
            50       0701 8F     3C  006E  3900 	MOVZWL	#FOR$K_STTM_WDU*256+		-
                                     0073  4000 		    <1@FOR$K_REC_NO>, R0
                          FF8C'  31  0073  4100 	BRW	FOR$$IO_BEG+2		; branch past call mask
                                     0076  4200 
                                     0076  4300 ;+
                                     0076  4400 ; STATEMENT:	READ sequential list_directed
                                     0076  4500 ;
                                     0076  4600 ; CALLING SEQUENCE:
                                     0076  4700 ;
                                     0076  4800 ;	CALL FOR$READ_SL (unit.rl.v,
                                     0076  4900 ;		[, err_adr.j.r [, end_adr.j.r]])
                                     0076  5000 ;-
                                     0076  5100 
                               0000' 0076  5200 FOR$READ_SL::	.MASK	FOR$$IO_BEG
            50       0840 8F     3C  0078  5300 	MOVZWL	#FOR$K_STTM_RSL*256+		-
                                     007D  5400 		    <1@FOR$K_LIST_DIR>, R0
                          FF82'  31  007D  5500 	BRW	FOR$$IO_BEG+2		; branch past call mask
                                     0080  5600 
FOR$ENTRY       - entry points for I/O statement initialization  21-AUG-1978 18:55:02   VAX-11 MACRO X0.3-11               Page   8
0-12            FOR$READ_SF - READ Sequential formatted                                                                          (8)

                                     0080   100 ;+
                                     0080   200 ; STATEMENT:	WRITE sequential list_directed
                                     0080   300 ;
                                     0080   400 ; CALLING SEQUENCE:
                                     0080   500 ;
                                     0080   600 ;	CALL FOR$WRITE_SL (unit.rl.v,
                                     0080   700 ;		[, err_adr.j.r [, end_adr.j.r]])
                                     0080   800 ;-
                                     0080   900 
                               0000' 0080  1000 FOR$WRITE_SL::	.MASK	FOR$$IO_BEG
            50       0940 8F     3C  0082  1100 	MOVZWL	#FOR$K_STTM_WSL*256+		-
                                     0087  1200 		    <1@FOR$K_LIST_DIR>, R0
                          FF78'  31  0087  1300 	BRW	FOR$$IO_BEG+2		; branch past call mask
                                     008A  1400 
                                     008A  1500 ;+
                                     008A  1600 ; STATEMENT:	DECODE memory formatted
                                     008A  1700 ;
                                     008A  1800 ; CALLING SEQUENCE:
                                     008A  1900 ;
                                     008A  2000 ;	CALL FOR$DECODE_MF (char_cnt.rlu.v, format_adr.mbu.ra, usr_buf_adr.rbu.ra
                                     008A  2100 ;		[, err_adr.j.r [, end_adr.j.r]])
                                     008A  2200 ;-
                                     008A  2300 
                               0000' 008A  2400 FOR$DECODE_MF::	.MASK	FOR$$IO_BEG
            50       0A06 8F     3C  008C  2500 	MOVZWL	#FOR$K_STTM_RMF*256+		-
                                     0091  2600 		    <1@FOR$K_USR_BUF>+<1@FOR$K_FMT_ADR>, R0
                          FF6E'  31  0091  2700 	BRW	FOR$$IO_BEG+2		; branch past call mask
                                     0094  2800 
                                     0094  2900 ;+
                                     0094  3000 ; STATEMENT:	ENCODE memory formatted
                                     0094  3100 ;
                                     0094  3200 ; CALLING SEQUENCE:
                                     0094  3300 ;
                                     0094  3400 ;	CALL FOR$ENCODE_MF (char_cnt.rlu.v, format_adr.rbu.ra, usr_buf_adr.wbu.ra
                                     0094  3500 ;		[, err_adr.j.r [, end_adr.j.r]])
                                     0094  3600 ;-
                                     0094  3700 
                               0000' 0094  3800 FOR$ENCODE_MF::	.MASK	FOR$$IO_BEG
            50       0B06 8F     3C  0096  3900 	MOVZWL	#FOR$K_STTM_WMF*256+		-
                                     009B  4000 		    <1@FOR$K_USR_BUF>+<1@FOR$K_FMT_ADR>, R0
                          FF64'  31  009B  4100 	BRW	FOR$$IO_BEG+2		; branch past call mask
                                     009E  4200 
                                     009E  4300 ;+
                                     009E  4400 ; STATEMENT:	DECODE memory object-time formatted
                                     009E  4500 ;
                                     009E  4600 ; CALLING SEQUENCE:
                                     009E  4700 ;
                                     009E  4800 ;	CALL FOR$DECODE_MO (char_cnt.rlu.v, ot_format_adr.mbu.ra, usr_buf_adr.rbu.ra
                                     009E  4900 ;		[, err_adr.j.r [, end_adr.j.r]])
                                     009E  5000 ;-
                                     009E  5100 
                               0000' 009E  5200 FOR$DECODE_MO::	.MASK	FOR$$IO_BEG
            50       0A86 8F     3C  00A0  5300 	MOVZWL	#FOR$K_STTM_RMF*256+		-
                                     00A5  5400 		    <1@FOR$K_OBJ_FMT>+<1@FOR$K_USR_BUF>+<1@FOR$K_FMT_ADR>, R0
                          FF5A'  31  00A5  5500 	BRW	FOR$$IO_BEG+2		; branch past call mask
                                     00A8  5600 
FOR$ENTRY       - entry points for I/O statement initialization  21-AUG-1978 18:55:02   VAX-11 MACRO X0.3-11               Page   9
0-12            FOR$READ_SF - READ Sequential formatted                                                                          (9)

                                     00A8   100 ;+
                                     00A8   200 ; STATEMENT:	ENCODE memory object-time formatted
                                     00A8   300 ;
                                     00A8   400 ; CALLING SEQUENCE:
                                     00A8   500 ;
                                     00A8   600 ;	CALL FOR$ENCODE_MO (char_cnt.rlu.v, ot_format_adr.rbu.ra, usr_buf_adr.wbu.ra
                                     00A8   700 ;		[, err_adr.j.r [, end_adr.j.r]])
                                     00A8   800 ;-
                                     00A8   900 
                               0000' 00A8  1000 FOR$ENCODE_MO::	.MASK	FOR$$IO_BEG
            50       0B86 8F     3C  00AA  1100 	MOVZWL	#FOR$K_STTM_WMF*256+		-
                                     00AF  1200 		    <1@FOR$K_OBJ_FMT>+<1@FOR$K_USR_BUF>+<1@FOR$K_FMT_ADR>, R0
                          FF50'  31  00AF  1300 	BRW	FOR$$IO_BEG+2		; branch past call mask
                                     00B2  1400 
                                     00B2  1500 
                                     00B2  1600 
                                     00B2  1700 
                                     00B2  1800 	.END
FOR$ENTRY       - entry points for I/O statement initialization  21-AUG-1978 18:55:02   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (9)

FOR$$IO_BEG      ********   X   01   MTH__LOGZERNEG = 00000053            
FOR$A_SIG_RNS    00000010            MTH__SINSIGLOS = 00000057            
FOR$DECODE_MF    0000008A RG    03   MTH__SQUROONEG = 00000054            
FOR$DECODE_MO    0000009E RG    03   MTH__UNDEXP    = 00000052            
FOR$ENCODE_MF    00000094 RG    03   MTH__WRONUMARG = 00000050            
FOR$ENCODE_MO    000000A8 RG    03   
FOR$K_CONTROL_Z= 0000001A            
FOR$K_ERR_PREFX= 00000018            
FOR$K_FMT_ADR  = 00000001            
FOR$K_LIST_DIR = 00000006            
FOR$K_OBJ_FMT  = 00000007            
FOR$K_REC_NO   = 00000000            
FOR$K_STTM_RDF = 00000004            
FOR$K_STTM_RDU = 00000006            
FOR$K_STTM_RMF = 0000000A            
FOR$K_STTM_RSF = 00000000            
FOR$K_STTM_RSL = 00000008            
FOR$K_STTM_RSU = 00000002            
FOR$K_STTM_WDF = 00000005            
FOR$K_STTM_WDU = 00000007            
FOR$K_STTM_WMF = 0000000B            
FOR$K_STTM_WSF = 00000001            
FOR$K_STTM_WSL = 00000009            
FOR$K_STTM_WSU = 00000003            
FOR$K_UNWINDNOP= 00000001            
FOR$K_UNWINDPOP= 00000000            
FOR$K_UNWINDRET= 00000002            
FOR$K_USR_BUF  = 00000002            
FOR$K_WRITE    = 00000008            
FOR$L_SIG_ACNT   00000000            
FOR$L_SIG_FCNT   00000008            
FOR$L_SIG_LUN    0000000C            
FOR$L_SIG_NAME   00000004            
FOR$L_SIG_PC     00000020            
FOR$L_SIG_PSL    00000024            
FOR$L_SIG_STS    00000018            
FOR$L_SIG_STV    0000001C            
FOR$L_SIG_UPC    00000014            
FOR$READ_DF      0000003A RG    03   
FOR$READ_DO      0000004E RG    03   
FOR$READ_DU      00000062 RG    03   
FOR$READ_SF      00000000 RG    03   
FOR$READ_SL      00000076 RG    03   
FOR$READ_SO      00000012 RG    03   
FOR$READ_SU      00000026 RG    03   
FOR$WRITE_DF     00000044 RG    03   
FOR$WRITE_DO     00000058 RG    03   
FOR$WRITE_DU     0000006C RG    03   
FOR$WRITE_SF     00000008 RG    03   
FOR$WRITE_SL     00000080 RG    03   
FOR$WRITE_SO     0000001C RG    03   
FOR$WRITE_SU     00000030 RG    03   
GBL...         = 00000000            
MTH$K_ERR_PREFX= 00000016            
MTH__FLOOVEMAT = 00000058            
MTH__FLOUNDMAT = 00000059            
MTH__INVARG    = 00000051            
FOR$ENTRY       - entry points for I/O statement initialization  21-AUG-1978 18:55:02   VAX-11 MACRO X0.3-11               Page  11
PROGRAM SECTION SYNOPSIS                                                                                                         (9)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000028      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
FOR$CODE         000000B2      03       PIC   USR   CON   REL   LCL   SHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
25576. BYTES LEFT IN FREE MEMORY POOL.
536. BYTES OF RECLAIMED MEMORY.
OBJ$:FORENTRY,LIS$:FORENTRY/-SP=LIB$:S/ML,SRC$:P,FORENTRY
2 MLB DIR RDS - 84 GETS TO DEFINE 6 MACROS. 5 INTER. FILE WRITES. 
