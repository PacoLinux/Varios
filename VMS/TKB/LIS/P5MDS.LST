P5MDS	MACRO M1110  22-AUG-78 01:56  PAGE 3


      1						.TITLE	P5MDS
      2						.IDENT	/13/
      3					                                                                                ;**-1
      4					;
      5					; COPYRIGHT   1973,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
      6					; COPYRIGHT   1974,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
      7					; COPYRIGHT (C) 1977
      8					;
      9					; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
     10					; ON A  SINGLE COMPUTER SYSTEM AND CAN BE COPIED (WITH INCLUSION
     11					; OF DEC'S COPYRIGHT NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
     12					; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
     13					;
     14					; THE  INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
     15					; NOTICE AND  SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
     16					; EQUIPMENT CORPORATION.
     17					;
     18					; DEC  ASSUMES NO  RESPONSIBILITY  FOR  THE  USE  OR RELIABILITY
     19					; OF ITS  SOFTWARE ON  EQUIPMENT WHICH  IS NOT SUPPLIED BY DEC.
     20					;
     21					; VERSION:	13
     22					;                                                                               ;**-1
     23					; D. N. CUTLER/C. MONIA 27-JAN-74
     24					;
     25					; PHASE 5 MODULE SCAN
     26					;
     27					; MODIFIED BY:
     28					;
     29					;	JAK100	29-JAN-77	;READ ONLY DISK COMPRESSION
     30					;	JAK112	01-DEC-77	REPORT SEGMENT NOT FOUND FOR GBLPAT
     31					;	JAK116	22-FEB-77	FIX FOR COMPRESSING FILES > 32K BYTES
     32					;
     33					; MACRO LIBRARY CALLS
     34					;
     35
     36						.MCALL	CLOSE$,OFNB$U
     37
     38					;
     39					; LOCAL DATA
     40					;
     41					 										;JAK100
     42	000000				TSKSW:	.BLKW	1		; TASK SWITCH WORD				;JAK100
     43					 										;JAK100
     44					; AUTOLOAD ENTRY POINT NAME
     45					;
     46
     47	000002	124375 	077530 		$ALSYM::.RAD50	/$AUTO/		;
     48
     49					;
     50					; AUTOLOAD VECTOR PROTOTYPE
     51					;
     52
     53	000006	004737 	000000 		$ALVCT::JSR	PC,@#0		; CALL TO AUTO
     54	000012				$ALADR::.BLKW	1		; CALLED SEGMENT DESCRIPTOR ADDRESS
     55	000014					.BLKW	1		; ADDRESS OF REAL AUTOLOAD ENTRY POINT
     56
     57					;+
P5MDS	MACRO M1110  22-AUG-78 01:56  PAGE 3-1


     58					; **-$P5MDS-PHASE 5 MODULE SCAN
     59					;
     60					; THIS ROUTINE IS CALLED TO DO THE PHASE 5 MODULE SCAN OF ALL SEG-
     61					; MENTS IN THE ALLOCATION. AS EACH SEGMENT IS CONSIDERED, THE ELE-
     62					; MENT LIST IS SCANNED. THE SCAN STARTS WITH THE FIRST ELEMENT IN
     63					; THE LIST AND CONTINUES TO THE END OF THE LIST. AS EACH ELEMENT
     64					; IS CONSIDERED, THE NECESSARY RELOCATION IS PERFORMED AND THE RE-
     65					; SULTANT TEXT IS WRITTEN INTO THE TASK IMAGE.FILE.
     66					;
     67					; INPUTS:
     68					;
     69					;	NONE.
     70					;
     71					; OUTPUTS:
     72					;
     73					;	NONE.
     74					;-
     75
     76	000016				$P5MDS::SAVRG			;SAVE NONVOLITILE REGISTERS
     77	000022	032767 	000000G	000000G		BIT	#TS$KF,$SWTCH	; TASK IMAGE FILE SPECIFIED?
     78	000030	001537 				BEQ	70$		; IF EQ NO
     79	000032	016700 	000000G			MOV	$TSKPT,R0	; GET TASK IMAGE RECORD BLOCK
     80	000036	010004 				MOV	R0,R4		; SAVE RECORD BLOCK POINTER
     81	000040					CALL	$STRCB		; SETUP RECORD BLOCK
     82	000044	010400 				MOV	R4,R0		; RETRIEVE POINTER
     83	000046					OFNB$U	R0		; OPEN TASK FILE FOR UPDATE
     84	000060	103524 				BCS	80$		; IF C/S ERROR
     85	000062	016700 	000000G			MOV	$INPPT,R0	; GET INPUT FILE RECORD BLOCK
     86	000066					CALL	$STRCB		; SET FDB RESIDENT
     87	000072	005067 	000000G		20$:	CLR	$BFFLG		;SET BUFFER FLAG FALSE
     88	000076	005067 	000000G			CLR	$WRSEG		;CLEAR SEGMENT BEING WRITTEN INTO
     89	000102	005067 	177702 			CLR	$ALVCT+2	; ASSUME AUTOLOAD ENTRY NOT DEFINED
     90	000106	016701 	000000G			MOV	$RTSEG,R1	; GET VIRTUAL ADDRESS OF ROOT SEGMENT
     91	000112					CALL	$CVRL		; CONVERT TO REAL ADDRESS
     92	000116	062700 	000000G			ADD	#S$GSTB,R0	;POINT TO SYMBOL TABLE
     93	000122	012701 	000002'			MOV	#$ALSYM,R1	; GET ADDRESS OF ENTRY NAME
     94	000126	162701 	000000G			SUB	#S$YM,R1	;CALCULATE PROPER OFFSET
     95	000132					CALL	$SRCH		;SEARCH FOR SYMBOL
     96	000136	103426 				BCS	50$		;IF CS NOT THERE
     97	000140	132760 	000000G	000000G		BITB	#SY$DEF,S$YFLG(R0);SYMBOL DEFINITION?
     98	000146	001422 				BEQ	50$		;IF EQ NO
     99	000150	132760 	000000G	000000G		BITB	#SY$IND,S$YFLG(R0);INDIRECT REFERENCE?
    100	000156	001404 				BEQ	30$		;IF EQ NO
    101	000160	016001 	000000G			MOV	S$YVAL(R0),R1	; GET V/A OF REAL SYMBOL
    102	000164					CALL	$CVRL		; CONVERT TO REAL ADDRESS
    103	000170	016001 	000000G		30$:	MOV	S$YVAL(R0),R1	;GET SYMBOL VALUE
    104	000174	132760 	000000G	000000G		BITB	#SY$REL,S$YFLG(R0);ABS SYMBOL?
    105	000202	001402 				BEQ	40$		;IF EQ YES
    106	000204	066701 	000000G			ADD	$OFFST,R1	;ADD OFFSET BIAS
    107	000210				40$:				;
    108	000210	010167 	177574 			MOV	R1,$ALVCT+2	; SET ADDRESS OF AUTO
    109	000214	012700 	000356'		50$:	MOV	#P5MDS,R0	;GET PHASE CONTROL ROUTINE ADDRESS
    110	000220					CALL	$PCTRL		;CALL PHASE CONTROL ROUTINE
    111	000224					CALL	$FINFL		;FINISH TASK IMAGE FILE
    112	000230					CALL	PTCHK		; LOOK FOR BAD PATCHES				;JAK112
    113	000234	016701 	000000G			MOV	$TSKNM,R1	; GET ADDRESS OF TASK FILE NAME BLOCK		;JAK100
    114	000240					CALL	$CVRL		; CONVERT TO REAL ADDRESS			;JAK100
P5MDS	MACRO M1110  22-AUG-78 01:56  PAGE 3-2


    115	000244	016067 	000000G	177526 		MOV	E$LSWT(R0),TSKSW ;GET TASK SWITCHES				;JAK100
    116	000252	022767 	000001 	000000G		CMP	#1,$NUMSG	; OVERLAYS?					;JAK116
    117	000260	001417 				BEQ	67$		; IF EQ NO					;JAK116
    118	000262	032767 	000000G	177510 		BIT	#SW$MU,TSKSW	; MULTIUSER TASK?				;JAK100
    119	000270	001403 				BEQ	60$		; IF NE NO					;JAK100
    120	000272	012700 	000002 			MOV	#2,R0		; SET R-O OFFSET				;JAK100
    121	000276	000405 				BR	65$		; GO COMPRESS					;JAK100
    122	000300				60$:										;JAK100
    123	000300	032767 	000000G	177472 		BIT	#SW$NH,TSKSW	; LIBRARY?					;JAK100
    124	000306	001404 				BEQ	67$		; IF EQ NO					;JAK100
    125	000310	005000 				CLR	R0		; SET R-W OFFSET				;**-2
    126	000312				65$:										;JAK100
    127	000312					CALL	$CMPRS		; COMPRESS FILE					;JAK100
    128	000316	000404 				BR	70$		; FILE WAS CLOSED IN $CMPRS			;JAK100
    129	000320				67$:										;JAK100
    130	000320					CLOSE$	$TSKPT		;CLOSE TASK IMAGE FILE
    131	000330				70$:	RETURN			;
    132	000332				80$:				;
    133	000332	012701 	000000C			MOV	#<S$V0*400!E$R25>,R1 ; UNABLE TO RE-OPEN TASK FILE
    134	000336	016002 	000000G			MOV	R$NAME(R0),R2	; GET ADDRESS OF NAME STRING
    135	000342					CALL	$ERMSG		; OUTPUT ERROR MESSAGE
    136	000346	042767 	000000G	000000G		BIC	#TS$KF,$SWTCH	; CLEAR TASK IMAGE OPTION BIT
    137	000354					RETURN			; EXIT
    138					;
    139					; SEGMENT RELOCATION
    140					;
    141					; THIS ROUTINE IS CALLED FOR EACH SEGMENT IN THE ALLOCATION.
    142					;
    143
    144	000356				P5MDS:	SAVRG			;SAVE NONVOLITILE REGISTERS
    145	000362	016700 	000000G			MOV	$CRVSG,R0	; GET VIRTUAL ADDRESS OF CURRENT SEGMENT
    146	000366					CALL	$ADRST		;SET ADDRESS LIMITS
    147	000372	012746 	000000G			MOV	#$STINP,-(SP)	; SET ADDRESS OF INPUT SETUP ROUTINE
    148	000376				20$:	CALL	@(SP)+		;SET UP NEXT INPUT FILE
    149	000400	103403 				BCS	P5MDS1		;IF CS NO MORE
    150	000402					CALL	$P5ELM		;PROCESS ELEMENT
    151	000406	000773 				BR	20$		;GO AGAIN
    152	000410				P5MDS1:				; OUTPUT SEGMENT TABLES, AUTOLOAD VECTORS
    153	000410					CALLR	$P5EOS		; PERFORM END-OF-SEGMENT CLEANUP
    154					 										;JAK112
    155					 ;										;JAK112
    156					;	THIS ROUTINE SCANS THE PATCH LIST FOR PATCHES THAT			;JAK112
    157					;	COULD NOT BE APPLIED.							;JAK112
    158					;										;JAK112
    159					 										;JAK112
    160	000414				PTCHK:										;JAK112
    161	000414	012705 	000000G			MOV	#$PATHD,R5	; GET PATCH LISTHEAD				;JAK112
    162	000420				10$:										;JAK112
    163	000420	011505 				MOV	(R5),R5		; GET NEXT IN LIST				;JAK112
    164	000422	001411 				BEQ	20$		; IF EQ END OF LIST				;JAK112
    165	000424	010502 				MOV	R5,R2		;						;JAK112
    166	000426	005722 				TST	(R2)+		; SKIP OVER LINK WORD				;JAK112
    167	000430	005722 				TST	(R2)+		; SIGN BIT SET IF PATCH HAS BEEN APPLIED	;JAK112
    168	000432	100772 				BMI	10$		; IF MINUS GO TO NEXT IN LIST			;JAK112
    169	000434	012701 	000000C			MOV	#<S$V0*400!E$R97>,R1 ;						;JAK112
    170	000440					CALL	$ERMSG		; OUTPUT ERROR MESSAGE				;JAK112
    171	000444	000765 				BR	10$		; CONTINUE					;JAK112
P5MDS	MACRO M1110  22-AUG-78 01:56  PAGE 3-3


    172	000446				20$:										;JAK112
    173	000446					RETURN									;JAK112
    174					 										;JAK112
    175
    176		000001 				.END
P5MDS	MACRO M1110  22-AUG-78 01:56  PAGE 3-4
SYMBOL TABLE

B.BBFS= 000010   	FD.RAN= 000002   	F.ERR = 000052   	NB.SVR= 000010   	S.FNTY= 000004
B.BFST= 000015   	FD.REC= 000001   	F.FACC= 000043   	NB.TYP= 000002   	S.FTYP= 000002
B.NXBD= 000012   	FD.RWM= 000001   	F.FFBY= 000014   	NB.VER= 000001   	S.NFEN= 000020
B.VBN = 000004   	FD.SDI= 000020   	F.FNAM= 000110   	N.DID = 000024   	TSKSW   000000R
CH.AND= 000001   	FD.SQD= 000040   	F.FNB = 000102   	N.DVNM= 000032   	TS$KF = ****** GX
CR    = 000015   	FD.TTY= 000004   	F.FTYP= 000116   	N.FID = 000000   	VT    = 000013
E$LSWT= ****** GX	FD.WBH= 000002   	F.FVER= 000120   	N.FNAM= 000006   	$ADRST= ****** GX
E$R25 = ****** GX	FF    = 000014   	F.HIBK= 000004   	N.FTYP= 000014   	$ALADR  000012RG
E$R97 = ****** GX	FF.CHR= 000005   	F.LUN = 000042   	N.FVER= 000016   	$ALSYM  000002RG
FA.APD= 000100   	FF.NV = 000003   	F.MBCT= 000054   	N.NEXT= 000022   	$ALVCT  000006RG
FA.CRE= 000010   	FF.POE= 000002   	F.MBC1= 000055   	N.STAT= 000020   	$BFFLG= ****** GX
FA.DLK= 001000   	FF.RWD= 000001   	F.MBFG= 000056   	N.UNIT= 000034   	$CMPRS= ****** GX
FA.ENB= 100000   	FF.RWF= 000006   	F.NRBD= 000024   	PAR$$$= 000067   	$CRVSG= ****** GX
FA.EXC= 002000   	FF.SPC= 000004   	F.NREC= 000030   	PTCHK   000414R  	$CVRL = ****** GX
FA.EXT= 000004   	FO.APD= 000106   	F.OVBS= 000030   	P5MDS   000356R  	$ERMSG= ****** GX
FA.NSP= 000100   	FO.MFY= 000002   	F.RACC= 000016   	P5MDS1  000410R  	$FINFL= ****** GX
FA.POS= 010000   	FO.RD = 000001   	F.RATT= 000001   	R$NAME= ****** GX	$INPPT= ****** GX
FA.RD = 000001   	FO.UPD= 000006   	F.RCNM= 000034   	R$$11M= 000000   	$NUMSG= ****** GX
FA.RWD= 004000   	FO.WRT= 000016   	F.RCTL= 000017   	R.FIX = 000001   	$OFFST= ****** GX
FA.SEQ= 040000   	F.ACTL= 000076   	F.RSIZ= 000002   	R.SEQ = 000003   	$PATHD= ****** GX
FA.SHR= 000040   	F.ALOC= 000040   	F.RTYP= 000000   	R.VAR = 000002   	$PCTRL= ****** GX
FA.TMP= 000020   	F.BBFS= 000062   	F.SEQN= 000100   	SPA   = 000040   	$P5ELM= ****** GX
FA.WCK= 020000   	F.BDB = 000070   	F.SPDV= 000072   	SW$MU = ****** GX	$P5EOS= ****** GX
FA.WRT= 000002   	F.BGBC= 000057   	F.SPUN= 000074   	SW$NH = ****** GX	$P5MDS  000016RG
FD.BLK= 000010   	F.BKDN= 000026   	F.STBK= 000036   	SY$DEF= ****** GX	$RTSEG= ****** GX
FD.CCL= 000002   	F.BKDS= 000020   	F.UNIT= 000136   	SY$IND= ****** GX	$SAVRG= ****** GX
FD.COM= 020000   	F.BKEF= 000050   	F.URBD= 000020   	SY$REL= ****** GX	$SRCH = ****** GX
FD.CR = 000002   	F.BKP1= 000051   	F.VBN = 000064   	S$GSTB= ****** GX	$STINP= ****** GX
FD.DIR= 000010   	F.BKST= 000024   	F.VBSZ= 000060   	S$V0  = ****** GX	$STRCB= ****** GX
FD.FTN= 000001   	F.BKVB= 000064   	HT    = 000011   	S$YFLG= ****** GX	$SWTCH= ****** GX
FD.F11= 040000   	F.CHR = 000075   	LF    = 000012   	S$YM  = ****** GX	$TSKNM= ****** GX
FD.INS= 000010   	F.CNTG= 000034   	NB.DEV= 000200   	S$YVAL= ****** GX	$TSKPT= ****** GX
FD.ISP= 002000   	F.DFNB= 000046   	NB.DIR= 000100   	S.BFHD= 000020   	$WRSEG= ****** GX
FD.MNT= 100000   	F.DSPT= 000044   	NB.NAM= 000004   	S.FATT= 000016   	$$    = 000001
FD.OSP= 004000   	F.DVNM= 000134   	NB.SD1= 000400   	S.FDB = 000140   	.CLOSE= ****** G
FD.PLC= 000004   	F.EFBK= 000010   	NB.SD2= 001000   	S.FNAM= 000006   	.OPFNB= ****** G
FD.PRN= 000004   	F.EFN = 000050   	NB.SNM= 000040   	S.FNB = 000036   	...GBL= 000000
FD.PSE= 010000   	F.EOBB= 000032   	NB.STP= 000020   	S.FNBW= 000017   	...TPC= 000140
FD.RAH= 000001

. ABS.	000000	   000
      	000450	   001
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  2454 WORDS  ( 10 PAGES)
DYNAMIC MEMORY:  3828 WORDS  ( 14 PAGES)
ELAPSED TIME:  00:00:21
OBJ$:P5MDS,LIS$:P5MDS/-SP=SRC$:MACFLM,FCSPR,P5MDS
