P5CEL	MACRO M1110  22-AUG-78 01:54  PAGE 3


      1						.TITLE	P5CEL
      2						.IDENT	/03/
      3					                                                                                ;**-1
      4
      5					;
      6					; COPYRIGHT (C) 1978
      7					; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
      8					;
      9					; THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ONLY ON A
     10					; SINGLE COMPUTER SYSTEM AND MAY  BE  COPIED   ONLY  WITH  THE
     11					; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE,  OR
     12					; ANY OTHER COPIES THEREOF, MAY NOT BE PROVIDED  OR  OTHERWISE
     13					; MADE AVAILABLE TO ANY OTHER PERSON   EXCEPT FOR  USE ON SUCH
     14					; SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE  TERMS.  TITLE
     15					; TO AND OWNERSHIP OF THE SOFTWARE SHALL AT ALL  TIMES  REMAIN
     16					; IN DEC.
     17					;
     18					; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
     19					; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
     20					; EQUIPMENT CORPORATION.
     21					;
     22					; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
     23					; ITS SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
     24					;
     25					; VERSION 03
     26					;                                                                               ;**-1
     27					; C. MONIA 11-JAN-75
     28					;
     29					; MODIFICATIONS:
     30					;
     31					; NO.		DATE		PROGRAMMER
     32					; ---		----		----------
     33					;
     34					; 043		23-SEP-75	C. MONIA
     35					; 054		27-MAR-76	C. MONIA
     36					; 059		09-MAY-76	C. MONIA
     37					; JAK114	09-JAN-78	ADD VSECT GSD ENTRY TYPE TO DISPATCH TABLE
     38					;
     39					;
     40					; OUTPUT THE TASK BUILDER CREF FOR EACH ELEMENT
     41					;
     42					; EQUATED SYMBOLS
     43					;
     44
     45		000001 			CRFSH=000001			; PRODUCE NARROW CREF FORMAT (1 = YES)
     46
     47					;
     48					; MACRO LIBRARY CALLS
     49					;
     50
     51						.MCALL	PUT$S
     52
     53					;
     54					; LOCAL DATA
     55					;
     56					; CREF HEADER DATA (ADJACENCY ASSUMED)
     57					;
P5CEL	MACRO M1110  22-AUG-78 01:54  PAGE 3-1


     58
     59		000000'			$$=.
     60
     61	000000	077272 	000000 		CRFNM:	.RAD50	/TKB   /	; TASK NAME
     62	000004	000000 			CRFID:	.WORD	0		; TASK I/D
     63	000006				CRFTIM:	.BLKW	5.		; CREATION TIME
     64	000020				CRFLG:	.BLKW	1		; HEADER FLAGS WORD
     65
     66		000022 			HDSIZ=.-$$
     67
     68					;
     69					; LOCAL SYMBOL STORAGE
     70					;
     71
     72	000022				LCLSYM:	.BLKW	6.		;
     73
     74					;
     75					; CREF DATA RECORD BUFFER (ADJACENCY ASSUMED)
     76					;
     77
     78		000036'			$$=.
     79
     80	000036				SYM:	.BLKW	2		; SYMBOL NAME (2-WORD, RADIX 50)
     81	000042				MODN:	.BLKW	2		; MODULE NAME (2-WORD, RADIX 50)
     82	000046				SYVAL:	.BLKW	1		; SYMBOL VALUE (2-WORD, RADIX 50)
     83	000050				SYFLG:	.BLKB	1		; SYMBOL FLAGS
     84	000051				SYFMT:	.BLKB	1		; FORMAT BYTE
     85
     86		000014 			DSIZ=.-$$
     87
     88					;
     89					; MODULE FUNCTION DETAILS:
     90					;
     91					;+
     92					; **-$P5CEL-CREATE THE CROSS REFERENCE FOR EACH ELEMENT IN THE SEGMENT
     93					;
     94					; INPUTS:
     95					;
     96					;	PHASE THREE SYMBOL AND SECTION TABLES
     97					;
     98					; OUTPUTS:
     99					;
    100					;	THE CREF FILE FOR EACH ELEMENT IS PRODUCED
    101					;
    102					;-
    103
    104
    105	000052				$P5CEL::			;
    106	000052					SAVRG			; SAVE NON-VOLATILE REGISTERS
    107	000056					CALL	$WSINI		; INITIALIZE PATH LIST
    108	000062				10$:				;
    109	000062					CALL	$GTBYT		; GET RECORD LENGTH
    110	000066	103410 				BCS	20$		; IF C/S-EOF(ILLEGAL FORMAT)
    111	000070	010003 				MOV	R0,R3		; SAVE RECORD LENGTH
    112	000072					CALL	$GTWRD		; GET BLOCK TYPE
    113	000076	162703 	000002 			SUB	#2,R3		; ADJUST BYTE COUNT
    114	000102	020027 	000006 			CMP	R0,#LGBLK	; LEGAL BLOCK TYPE
P5CEL	MACRO M1110  22-AUG-78 01:54  PAGE 3-2


    115	000106	101401 				BLOS	30$		; IF LOS YES
    116	000110				20$:				;
    117	000110	005000 				CLR	R0		; FORCE ILLEGAL FORMAT
    118	000112				30$:				;
    119	000112	006300 				ASL	R0		; MAKE WORD INDEX
    120	000114					CALL	@DSPVCT(R0)	; CALL BLOCK DEPENDANT ROUTINE
    121	000120	000760 				BR	10$		; GO AGAIN
    122
    123					;
    124					; DISPATCH VECTOR TABLE
    125					;
    126
    127	000122				DSPVCT:				;
    128	000122	000602'				.WORD	ILFMT		; BLOCK 0-ILLEGAL BLOCK TYPE
    129	000124	000140'				.WORD	STGSD		; BLOCK 1-START GSD
    130	000126	000600'				.WORD	ENGSD		; BLOCK 2-END GSD
    131	000130	000622'				.WORD	RPEAT		; BLOCK 3-TXT
    132	000132	000622'				.WORD	RPEAT		; BLOCK 4-RLD
    133	000134	000622'				.WORD	RPEAT		; BLOCK 5-ISD
    134	000136	000572'				.WORD	MODND		; BLOCK 6-MODULE END
    135		000006 			LGBLK=<.-DSPVCT-2>/2
    136
    137					;
    138					; START GSD -BLOCK TYPE 1
    139					;
    140
    141	000140				STGSD:				;
    142	000140	012704 	000024'			MOV	#LCLSYM+2,R4	; GET ADDRESS TO STORE SYMBOL
    143	000144	012705 	000004 			MOV	#4,R5		; SET REPEAT COUNT
    144	000150				10$:				;
    145	000150					CALL	$GTWRD		; GET A WORD
    146	000154	010024 				MOV	R0,(R4)+	; SAVE IN TEMP BUFFER
    147	000156					SOB	R5,10$		; REPEAT
    148	000162	162703 	000010 			SUB	#8.,R3		; ADJUST FOR SYMBOL ENTRY
    149	000166	012701 	000022'			MOV	#LCLSYM,R1	; GET ADDRESS OF SYMBOL DESCRIPTOR
    150	000172	116102 	000000G			MOVB	S$CNT(R1),R2	; GET TYPE OF GSD ENTRY
    151	000176	020227 	000007 			CMP	R2,#LGTYP	; LEGAL TYPE ?
    152	000202	101177 				BHI	ILFMT		; IF HI ILLEGAL FORMAT
    153	000204	006302 				ASL	R2		; MAKE WORD INDEX
    154	000206	016700 	000000G			MOV	$CRSEG,R0	; GET ADDRESS OF CURRENT SEGMENT
    155	000212					CALL	@GSDVCT(R2)	; DISPATCH TO ROUTINE
    156	000216	005703 				TST	R3		; ANY MORE TO PROCESS
    157	000220	003347 				BGT	STGSD		; IF GT GO AGAIN
    158	000222					RETURN			;
    159
    160					;
    161					; GSD ENTRY TYPE DISPATCH TABLE
    162					;
    163
    164	000224				GSDVCT:				;
    165	000224	000244'				.WORD	MODNME		; MODULE NAME
    166	000226	000320'				.WORD	SCTNME		; SECTION NAME
    167	000230	000322'				.WORD	INTSYM		; INTERNAL SYMBOL
    168	000232	000324'				.WORD	XFRADR		; TRANSFER ADDRESS
    169	000234	000330'				.WORD	SYMDCL		; SYMBOL DECLARATION
    170	000236	000320'				.WORD	SCTNME		; PROGRAM SECTION NAME
    171	000240	000576'				.WORD	VIDENT		; VERSION IDENTIFICATION
P5CEL	MACRO M1110  22-AUG-78 01:54  PAGE 3-3


    172	000242	000326'				.WORD	VSTNME		; VIRTUAL SECTION NAME				;JAK114
    173		000007 			LGTYP=<.-GSDVCT-2>/2
    174
    175					;
    176					; MODULE NAME
    177					;
    178
    179						.ENABL	LSB
    180
    181	000244				MODNME:				;
    182	000244	016067 	000000G	177564 		MOV	S$GNME(R0),SYM	; SET SEGMENT NAME
    183	000252	016067 	000002G	177560 		MOV	S$GNME+2(R0),SYM+2 ; ...
    184	000260	112767 	000001 	177563 		MOVB	#1,SYFMT	; SET FORMAT NUMBER
    185	000266	016167 	000000G	177546 		MOV	S$YM(R1),MODN	; SAVE MODULE NAME
    186	000274	016167 	000002G	177542 		MOV	S$YM+2(R1),MODN+2 ; ...
    187	000302	026727 	000000G	000001 		CMP	$NUMSG,#1	; MORE THAN ONE SEGMENT?
    188	000310	001402 				BEQ	5$		; IF EQ NO
    189	000312					CALL	28$		; OUTPUT CREF RECORD
    190	000316				5$:				;
    191	000316					RETURN			;
    192
    193					;
    194					; SECTION AND PROGRAM SECTION NAME
    195					;
    196
    197	000320				SCTNME:				;
    198	000320					RETURN			;
    199
    200					;
    201					; INTERNAL SYMBOL
    202					;
    203
    204	000322				INTSYM:				;
    205	000322					RETURN			;
    206
    207					;
    208					; TRANSFER ADDRESS
    209					;
    210
    211	000324				XFRADR:				;
    212	000324					RETURN			;
    213
    214					 										;JAK114
    215					;										;JAK114
    216					; VIRTUAL SECTION NAME								;JAK114
    217					;										;JAK114
    218					 										;JAK114
    219	000326				VSTNME:				;						;JAK114
    220	000326					RETURN			;						;JAK114
    221					 										;JAK114
    222					;
    223					; SYMBOL DECLARATION
    224					;
    225
    226	000330				SYMDCL:				;
    227	000330	012702 	000036'			MOV	#SYM,R2		; GET ADDRESS TO STORE SYMBOL DATA
    228	000334	016122 	000000G			MOV	S$YM(R1),(R2)+	; STORE SYMBOL NAME
P5CEL	MACRO M1110  22-AUG-78 01:54  PAGE 3-4


    229	000340	016122 	000002G			MOV	S$YM+2(R1),(R2)+ ; ...
    230	000344	116102 	000000G			MOVB	S$YFLG(R1),R2	; GET FLAGS BYTE
    231	000350	142702 	000000C			BICB	#^C<SY$DEF!SY$REL>,R2	;++036 CLEAR ALL BUT DEF. AND REL. FLAGS
    232	000354	110267 	177470 			MOVB	R2,SYFLG	; SET FLAGS
    233	000360					CALL	$WSRCS		; SEARCH FOR SYMBOL
    234	000364	103501 				BCS	30$		; IF C/S SYMBOL NOT IN TABLE
    235	000366	010104 				MOV	R1,R4		; SAVE PATH FLAG
    236	000370	116005 	000000G			MOVB	S$YFLG(R0),R5	; SAVE SYMBOL FLAGS
    237	000374	005002 				CLR	R2		; ASSUME DEFINITION NOT FOUND
    238	000376	132705 	000000G			BITB	#SY$DEF,R5	; DEFINITION FOUND?
    239	000402	001416 				BEQ	20$		; IF EQ NO
    240	000404	132705 	000000G			BITB	#SY$IND,R5	; INDIRECT DEFINITION?
    241	000410	001404 				BEQ	10$		; IF EQ NO
    242	000412	016001 	000000G			MOV	S$YVAL(R0),R1	; GET ADDRESS OF REAL ENTRY
    243	000416					CALL	$CVRL		; CONVERT TO REAL ADDRESS
    244	000422				10$:				;
    245	000422	016002 	000000G			MOV	S$YVAL(R0),R2	; GET SYMBOL VALUE
    246	000426	132705 	000000G			BITB	#SY$REL,R5	; RELOCATABLE SYMBOL
    247	000432	001402 				BEQ	20$		; IF EQ NO
    248	000434	066702 	000000G			ADD	$OFFST,R2	; ADD OFFSET BIAS
    249	000440				20$:				;
    250	000440	010267 	177402 			MOV	R2,SYVAL	; SET SYMBOL VALUE
    251	000444	005704 				TST	R4		; FOUND IN CURRENT SEGMENT?
    252	000446	001040 				BNE	27$		; IF NE NO
    253	000450	142705 	000000C			BICB	#^C<SY$ATR!SY$ATL!SY$IND>,R5 ; CLEAR ALL BUT AUTOLOAD FLAGS
    254	000454	150567 	177370 			BISB	R5,SYFLG	; MERGE FLAGS
    255	000460	132705 	000000G			BITB	#SY$IND,R5	; SYMBOL DEFINED IN OTHER SEGMENT?
    256	000464	001431 				BEQ	27$		; IF EQ NO
    257	000466				23$:				;
    258	000466	010667 	000000G			MOV	SP,$WSEXT	; FORCE SEARCH OF ALL TREES
    259	000472					CALL	@(SP)+		; SEARCH FOR REAL DEFINITION
    260	000474	103006 				BCC	25$		; IF C/C HAVE SYMBOL
    261	000476	005067 	000000G			CLR	$WSEXT		; RESET  SEARCH EXTENT FLAG
    262	000502	142767 	000000G	177340 		BICB	#SY$IND,SYFLG	; CLEAR INDIRECT FLAG
    263	000510	000420 				BR	270$		;
    264	000512				25$:				;
    265	000512	100765 				BMI	23$		; IF MI FOUND ON PATH DOWN
    266	000514	005067 	000000G			CLR	$WSEXT		; RESET SEARCH EXTENT FLAG
    267	000520	132760 	000000G	000000G		BITB	#SY$IND,S$YFLG(R0) ; INDIRECT DEFINITION?
    268	000526	001357 				BNE	23$		; IF NE NO CONTINUE SEARCH
    269	000530	132760 	000000G	000000G		BITB	#SY$DEF,S$YFLG(R0) ; DEFINITION?
    270	000536	001753 				BEQ	23$		; IF EQ NO
    271	000540	026767 	000000G	000000G		CMP	$CRVSR,$RTSEG	; FOUND IN ROOT SEGMENT?
    272	000546	001747 				BEQ	23$		; IF EQ YES
    273	000550				27$:				;
    274	000550	005226 				INC	(SP)+		; CLEAN STACK
    275	000552				270$:				;
    276	000552	105067 	177273 			CLRB	SYFMT		; SET FORMAT NUMBER
    277	000556				28$:				;
    278	000556	012701 	000036'			MOV	#SYM,R1		; POINT TO SYMBOL BUFFER
    279	000562	012702 	000014 			MOV	#DSIZ,R2	; SET RECORD SIZE
    280	000566	000420 				BR	PUTS		; PUT THE RECORD
    281	000570				30$:				;
    282	000570					RETURN			;
    283
    284						.DSABL	LSB
    285
P5CEL	MACRO M1110  22-AUG-78 01:54  PAGE 3-5


    286					;
    287					; BLOCK TYPE 6 - END OF MODULE
    288					;
    289
    290	000572				MODND:				;
    291	000572	005726 				TST	(SP)+		; REMOVE RETURN
    292	000574					RETURN			;
    293
    294
    295					;
    296					; VERSION IDENTIFIER
    297					;
    298
    299	000576				VIDENT:				;
    300	000576					RETURN			;
    301
    302					;
    303					; END GSD
    304					;
    305
    306	000600				ENGSD:				;
    307	000600	000410 				BR	RPEAT		;
    308					;
    309					; ILLEGAL FORMAT-BLOCK TYPE 0
    310					;
    311
    312	000602				ILFMT:				;
    313	000602	016702 	000000G			MOV	$INPPT,R2	; GET INPUT FILE RECORD BLOCK
    314	000606	016202 	000000G			MOV	R$NAME(R2),R2	; GET ADDRESS OF NAME STRING
    315	000612	012701 				MOV	(PC)+,R1	; DIAGNOSTIC
    316	000614	   000G	   000G			.BYTE	E$R14,S$V2	; FATAL-NO RETURN
    317	000616					CALL	$ERMSG		; OUTPUT ERROR MESSAGE
    318
    319
    320
    321					;
    322					; IGNORE REMAINDER OF RECORD
    323					;
    324
    325	000622				RPEAT:				;
    326	000622	005067 	000000G			CLR	$NBYTE		; FORCE READ OF NEXT RECORD
    327	000626					RETURN			;
    328
    329					;
    330					; PUT A CREF RECORD
    331					;
    332
    333	000630				PUTS:				;
    334	000630	016700 	000000G			MOV	$CRFPT,R0	; GET ADDRESS OF CREF FDB
    335	000634	010260 	000002 			MOV	R2,F.RSIZ(R0)	; SET MAX RECORD LENGTH
    336	000640					PUT$S	R0,R1,R2	; OUTPUT THE RECORD
    337	000654	103006 				BCC	10$		; IF C/C OUTPUT OK
    338	000656	016002 	000000G			MOV	R$NAME(R0),R2	; GET ADDRESS OF RECORD BLOCK
    339	000662	012701 	000000C			MOV	#<S$V2*400!E$R25>,R1 ; GET ERROR/SEVERITY
    340	000666					CALL	$ERMSG		; FATAL, NO RETURN
    341	000672				10$:				;
    342	000672					RETURN			;
P5CEL	MACRO M1110  22-AUG-78 01:54  PAGE 3-6


    343
    344					;+
    345					; **-$CRFHD-OUTPUT THE CREF HEADER
    346					;
    347					; THIS SUBROUTINE IS CALLED TO WRITE THE CREF HEADER RECORD
    348					; INTO THE CREF FILE.
    349					;
    350					; INPUTS:
    351					;
    352					;	$BLTIM=CREATION TIME OF TASK
    353					;
    354					; OUTPUTS:
    355					;
    356					;	CREF FILE HEADER RECORD IS WRITTEN
    357					;
    358					;-
    359
    360	000674				$CRFHD::			;
    361	000674	012700 	000000G			MOV	#$BLTIM,R0	; GET TIME OF CREATION
    362	000700	012702 	000006'			MOV	#CRFTIM,R2	; GET ADDRESS TO STORE TIME
    363	000704	012701 	000005 			MOV	#5,R1		; SET WORD COUNT
    364	000710				10$:				;
    365	000710	012022 				MOV	(R0)+,(R2)+	; COPY CREATION TIME
    366	000712					SOB	R1,10$		; ...
    367	000716	005012 				CLR	(R2)		; ASSUME WIDE FORMAT
    368	000720	032767 	000000G	000000G		BIT	#WI$DE,$SWTCH	; WIDE FORMAT WANTED?
    369	000726	001002 				BNE	20$		; IF NE YES
    370	000730	012712 	000001 			MOV	#CRFSH,(R2)	; SET FLAG FOR NARROW FORMAT
    371	000734				20$:				;
    372	000734	012701 	000000'			MOV	#CRFNM,R1	; GET ADDRESS OF HEADER RECORD BUFFER
    373	000740	012702 	000022 			MOV	#HDSIZ,R2	; GET HEADER SIZE
    374	000744	000731 				BR	PUTS		; OUTPUT HEADER
    375
    376		000001 				.END
P5CEL	MACRO M1110  22-AUG-78 01:54  PAGE 3-7
SYMBOL TABLE

B.BBFS= 000010   	FD.PLC= 000004   	F.ERR = 000052   	NB.DIR= 000100   	S$YFLG= ****** GX
B.BFST= 000015   	FD.PRN= 000004   	F.FACC= 000043   	NB.NAM= 000004   	S$YM  = ****** GX
B.NXBD= 000012   	FD.PSE= 010000   	F.FFBY= 000014   	NB.SD1= 000400   	S$YVAL= ****** GX
B.VBN = 000004   	FD.RAH= 000001   	F.FNAM= 000110   	NB.SD2= 001000   	S.BFHD= 000020
CH.AND= 000001   	FD.RAN= 000002   	F.FNB = 000102   	NB.SNM= 000040   	S.FATT= 000016
CR    = 000015   	FD.REC= 000001   	F.FTYP= 000116   	NB.STP= 000020   	S.FDB = 000140
CRFID   000004R  	FD.RWM= 000001   	F.FVER= 000120   	NB.SVR= 000010   	S.FNAM= 000006
CRFLG   000020R  	FD.SDI= 000020   	F.HIBK= 000004   	NB.TYP= 000002   	S.FNB = 000036
CRFNM   000000R  	FD.SQD= 000040   	F.LUN = 000042   	NB.VER= 000001   	S.FNBW= 000017
CRFSH = 000001   	FD.TTY= 000004   	F.MBCT= 000054   	N.DID = 000024   	S.FNTY= 000004
CRFTIM  000006R  	FD.WBH= 000002   	F.MBC1= 000055   	N.DVNM= 000032   	S.FTYP= 000002
DSIZ  = 000014   	FF    = 000014   	F.MBFG= 000056   	N.FID = 000000   	S.NFEN= 000020
DSPVCT  000122R  	FF.CHR= 000005   	F.NRBD= 000024   	N.FNAM= 000006   	VIDENT  000576R
ENGSD   000600R  	FF.NV = 000003   	F.NREC= 000030   	N.FTYP= 000014   	VSTNME  000326R
E$R14 = ****** GX	FF.POE= 000002   	F.OVBS= 000030   	N.FVER= 000016   	VT    = 000013
E$R25 = ****** GX	FF.RWD= 000001   	F.RACC= 000016   	N.NEXT= 000022   	WI$DE = ****** GX
FA.APD= 000100   	FF.RWF= 000006   	F.RATT= 000001   	N.STAT= 000020   	XFRADR  000324R
FA.CRE= 000010   	FF.SPC= 000004   	F.RCNM= 000034   	N.UNIT= 000034   	$BLTIM= ****** GX
FA.DLK= 001000   	FO.APD= 000106   	F.RCTL= 000017   	PAR$$$= 000000   	$CRFHD  000674RG
FA.ENB= 100000   	FO.MFY= 000002   	F.RSIZ= 000002   	PUTS    000630R  	$CRFPT= ****** GX
FA.EXC= 002000   	FO.RD = 000001   	F.RTYP= 000000   	RPEAT   000622R  	$CRSEG= ****** GX
FA.EXT= 000004   	FO.UPD= 000006   	F.SEQN= 000100   	R$NAME= ****** GX	$CRVSR= ****** GX
FA.NSP= 000100   	FO.WRT= 000016   	F.SPDV= 000072   	R$$11M= 000000   	$CVRL = ****** GX
FA.POS= 010000   	F.ACTL= 000076   	F.SPUN= 000074   	R.FIX = 000001   	$ERMSG= ****** GX
FA.RD = 000001   	F.ALOC= 000040   	F.STBK= 000036   	R.SEQ = 000003   	$GTBYT= ****** GX
FA.RWD= 004000   	F.BBFS= 000062   	F.UNIT= 000136   	R.VAR = 000002   	$GTWRD= ****** GX
FA.SEQ= 040000   	F.BDB = 000070   	F.URBD= 000020   	SCTNME  000320R  	$INPPT= ****** GX
FA.SHR= 000040   	F.BGBC= 000057   	F.VBN = 000064   	SPA   = 000040   	$NBYTE= ****** GX
FA.TMP= 000020   	F.BKDN= 000026   	F.VBSZ= 000060   	STGSD   000140R  	$NUMSG= ****** GX
FA.WCK= 020000   	F.BKDS= 000020   	GSDVCT  000224R  	SYFLG   000050R  	$OFFST= ****** GX
FA.WRT= 000002   	F.BKEF= 000050   	HDSIZ = 000022   	SYFMT   000051R  	$P5CEL  000052RG
FD.BLK= 000010   	F.BKP1= 000051   	HT    = 000011   	SYM     000036R  	$RTSEG= ****** GX
FD.CCL= 000002   	F.BKST= 000024   	ILFMT   000602R  	SYMDCL  000330R  	$SAVRG= ****** GX
FD.COM= 020000   	F.BKVB= 000064   	INTSYM  000322R  	SYVAL   000046R  	$SWTCH= ****** GX
FD.CR = 000002   	F.CHR = 000075   	LCLSYM  000022R  	SY$ATL= ****** GX	$WSEXT= ****** GX
FD.DIR= 000010   	F.CNTG= 000034   	LF    = 000012   	SY$ATR= ****** GX	$WSINI= ****** GX
FD.FTN= 000001   	F.DFNB= 000046   	LGBLK = 000006   	SY$DEF= ****** GX	$WSRCS= ****** GX
FD.F11= 040000   	F.DSPT= 000044   	LGTYP = 000007   	SY$IND= ****** GX	$$    = 000001
FD.INS= 000010   	F.DVNM= 000134   	MODN    000042R  	SY$REL= ****** GX	.PUTSQ= ****** G
FD.ISP= 002000   	F.EFBK= 000010   	MODND   000572R  	S$CNT = ****** GX	...GBL= 000000
FD.MNT= 100000   	F.EFN = 000050   	MODNME  000244R  	S$GNME= ****** GX	...TPC= 000140
FD.OSP= 004000   	F.EOBB= 000032   	NB.DEV= 000200   	S$V2  = ****** GX

. ABS.	000000	   000
      	000746	   001
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  2585 WORDS  ( 11 PAGES)
DYNAMIC MEMORY:  3828 WORDS  ( 14 PAGES)
ELAPSED TIME:  00:00:17
OBJ$:P5CEL,LIS$:P5CEL/-SP=SRC$:MACFLM,FCSPR,P5CEL
