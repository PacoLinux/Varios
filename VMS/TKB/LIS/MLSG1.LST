MLSG1	MACRO M1110  22-AUG-78 01:47  PAGE 3


      1						.TITLE	MLSG1
      2						.IDENT	/13/
      3					                                                                                ;**-1
      4					;
      5					; COPYRIGHT   1975,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.               ;**NEW**
      6					;                                                                               ;**-1
      7					; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
      8					; ON A  SINGLE COMPUTER SYSTEM AND CAN BE COPIED (WITH INCLUSION
      9					; OF DEC'S COPYRIGHT NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
     10					; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
     11					;
     12					; THE  INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
     13					; NOTICE AND  SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
     14					; EQUIPMENT CORPORATION.
     15					;
     16					; DEC  ASSUMES NO  RESPONSIBILITY  FOR  THE  USE  OR RELIABILITY
     17					; OF ITS  SOFTWARE ON  EQUIPMENT WHICH  IS NOT SUPPLIED BY DEC.
     18					;
     19					; VERSION 13
     20					;
     21					; D. N. CUTLER/C. MONIA 10-DEC-73
     22					;
     23					; MODIFICATIONS:                                                                ;**NEW**
     24					;                                                                               ;**NEW**
     25					; NO.		DATE		PROGRAMMER                                      ;**NEW**
     26					; ---		----		----------                                      ;**NEW**
     27					;                                                                               ;**NEW**
     28					; 033		07-JAN-75	C. MONIA                                        ;**NEW**
     29					; 039		22-MAR-75	C. MONIA
     30					; 043		21-OCT-75	C. MONIA
     31					; 049		26-FEB-76	C. MONIA
     32					; 052		22-MAR-76	C. MONIA
     33					; 059		08-APR-76	C. MONIA
     34					; 062		20-MAY-76	C. MONIA
     35					;                                                                               ;**NEW**
     36					; PARSE THE OVERLAY DESCRIPTION
     37					;                                                                               ;**NEW**
     38					; MACRO LIBRARY CALLS
     39					;
     40
     41						.MCALL	CSI$1
     42
     43
     44					;
     45					; LOCAL MACROS
     46					;
     47					;                                                                               ;**-1
     48					; GENERATE OPERATOR TABLES
     49					;
     50					; GOPR OPR,VAL
     51					;
     52					; WHERE:
     53					;
     54					;	OPR=OPERATOR CHARACTER.
     55					;	VAL=OPERATOR VALUE.
     56					;
     57
MLSG1	MACRO M1110  22-AUG-78 01:47  PAGE 3-1


     58						.MACRO	GOPR OPR,VAL
     59						.PSECT	OPRL
     60						.ASCII	/OPR/
     61						.PSECT	OVAL
     62						.BYTE	VAL
     63						.PSECT
     64						.ENDM
     65
     66					;
     67					; LOCAL DATA
     68					;
     69					;
     70					; AUTOLOAD INDICATOR SEEN
     71					;
     72
     73	000000				AFLG:	.BLKW	1		;
     74					;
     75					; AUTOLOAD ENTRY POINT NAME
     76					;
     77
     78	000002	124375 	077530 		AUTO:	.RAD50	/$AUTO/		;
     79
     80
     81					;
     82					; CONTROL BYTE STRING
     83					;
     84
     85	000006	   133 	   074 	   044 	CNTRL:	.ASCII	/[<$09AZ /	;
	000011	   060 	   071 	   101
	000014	   132 	   040
     86
     87
     88					;
     89					; LAST ITEM TYPE
     90					;
     91
     92	000016				LITEM:	.BLKW	1		;
     93
     94					;
     95					; RESIDENCY OPERATOR SEEN
     96					;
     97
     98	000020				RFLG:	.BLKW	1		;
     99
    100					;
    101					; RESIDENCY OPERATOR SEEN IN STRUCTURE
    102					;
    103
    104	000022				RFLG0:	.BLKW	1		;
    105
    106					;
    107					;
    108					; OPERATOR TABLES
    109					;
    110	000000					.PSECT	OPRL
    111	000000				OBAS:				; REF LABEL
    112	000000					.PSECT	OVAL
MLSG1	MACRO M1110  22-AUG-78 01:47  PAGE 3-2


    113	000000				OPRV:				; REF LABEL
    114	000000					GOPR	^/(/,L$PAR
    115	000024					GOPR	^/)/,R$PAR
    116	000024					GOPR	^/,/,C$OMA
    117	000024					GOPR	^/-/,D$ASH
    118	000024					GOPR	^/*/,S$TAR
    119	000024					GOPR	^/!/,E$XCL
    120
    121	000006					.PSECT	OPRL
    122	000006				OBASE:				; REF LABEL
    123	000024					.PSECT
    124
    125					;
    126					; TEMPORARY STORAGE
    127					;
    128
    129	000024				TMP:	.BLKW	5		;
    130
    131
    132					;
    133					;+
    134					; **-$MLSG1-PARSE THE SEGMENT DESCRIPTION
    135					;
    136					; INPUTS:
    137					;
    138					;	OVERLAY DESCRIPTION READ BY $MLSG0
    139					;
    140					; OUTPUTS:
    141					;
    142					;	LINKED LIST OF ODL ITEM TYPES
    143					;
    144					;	THIS ROUTINE IS CALLED BY $MULSG TO PARSE THE
    145					; ODL. THE INPUT, TAKEN FROM DYNAMIC STORAGE, CONSISTS OF
    146					; EACH LINE IN THE DESCRIPTION WITH AN APPROPRIATE CODE
    147					; IDENTIFYING THE ASSOCIATED ODL DIRECTIVE. THE PARSING PHASE
    148					; RESULTS IN A LINKED LIST OF ITEMS LATER USED (BY $MULSG2)
    149					; TO GENERATE THE SEGMENT DESCRIPTORS.
    150					;
    151					;-
    152					;
    153
    154	000036				$MLSG1::			;
    155	000036	005067 	177736 			CLR	AFLG		; CLEAR AUTOLOAD FLAG
    156	000042	005067 	177752 			CLR	RFLG		; RESET RESIDENCY FLAG
    157	000046	005067 	177750 			CLR	RFLG0		; CLEAR STRUCTURE RESIDENCY FLAG
    158	000052	005067 	000000G			CLR	$ALVL		; CLEAR AUTOLOAD LEVEL COUNT
    159	000056	005067 	000000G			CLR	$AFLG		; CLEAR AUTOLOAD REQUIRED FLAG
    160	000062	012767 	000000G	177726 		MOV	#S$OS,LITEM	; SET LAST ITEM TO SOS
    161	000070	012700 	000000G			MOV	#$DSTK,R0	; GET ADDRESS OF DESCRIPTION STACK
    162	000074	010001 			10$:	MOV	R0,R1		;COPY HEADER ADDRESS
    163	000076	005020 				CLR	(R0)+		;CLEAR LINK TO FIRST
    164	000100	010120 				MOV	R1,(R0)+	;LAST POINTS TO FIRST INITIALLY
    165	000102	020027 	000000C			CMP	R0,#$DSTK+<N$PLVL*4> ; END OF LIST?
    166	000106	103772 				BLO	10$		;IF LO NO
    167	000110	012703 	000002G			MOV	#$DSTK+2,R3	; SET INITIAL DESCRIPTION STACK POINTER
    168	000114	012700 	000000G			MOV	#$SOSOP,R0	; GET ADDRESS OF SOS ENTRY
    169	000120	005010 				CLR	(R0)		;CLEAR LINK TO NEXT
MLSG1	MACRO M1110  22-AUG-78 01:47  PAGE 3-3


    170	000122	010033 				MOV	R0,@(R3)+	;LINK NEW LAST TO OLD LAST
    171	000124	010043 				MOV	R0,-(R3)	;SET NEW LAST
    172	000126	012704 	000000G			MOV	#$TSTK,R4	; GET ADDRESS OF TEXT STACK
    173	000132	016700 	000000G			MOV	$RTDIR,R0	; GET POINTER TO ROOT SEGMENT DIRECTIVE
    174	000136	010044 				MOV	R0,-(R4)	;SET ADDRESS OF ROOT DIRECTIVE ENTRY
    175	000140	016044 	000000G			MOV	N$XT(R0),-(R4)	; SET ADDRESS OF ROOT DIRECTIVE ENTRY
    176	000144				ITMBEG:	CALL	ITEM		;GET NEXT ITEM
    177	000150	012705 	000016'			MOV	#LITEM,R5	;GET ADDRESS OF LAST ITEM
    178	000154	111502 				MOVB	(R5),R2		;GET LAST ITEM TYPE
    179	000156	006202 				ASR	R2		;CONVERT TO SHIFT COUNT
    180	000160	012701 	000001 			MOV	#1,R1		;SET INITIAL MASK WORD
    181
    182
    183						.IF	NDF	V1145
    184
    185	000164	005302 			10$:	DEC	R2		;DECREMENT SHIFT COUNT
    186	000166	002402 				BLT	20$		;IF LT DONE
    187	000170	006301 				ASL	R1		;SHIFT MASK
    188	000172	000774 				BR	10$		;
    189	000174				20$:				;REF LABEL
    190
    191						.ENDC
    192
    193
    194						.IF	DF	V1145
    195
    196						ASH	R2,R1		;SHIFT MASK
    197
    198						.ENDC
    199
    200
    201	000174	116002 	000000G			MOVB	T$YP(R0),R2	; GET CURRENT ITEM TYPE
    202	000200	030162 	000000G			BIT	R1,$CBAS(R2)	; LEGAL CONSTRUCTION?
    203	000204	001523 				BEQ	ITMCM1		;IF EQ NO
    204	000206	000172 	000210'			JMP	@40$-2(R2)	;DISPATCH ON CURRENT ITEM
    205
    206					;
    207					; CURRENT ITEM DISPATCH VECTOR
    208					;
    209
    210	000212	000610'			40$:	.WORD	ITMEOS		;EOS
    211	000214	000332'				.WORD	ITMLPR		;LPAR
    212	000216	000424'				.WORD	ITMRPR		;RPAR
    213	000220	000236'				.WORD	ITMCM		; COMMA
    214	000222	000516'				.WORD	ITMOP1		;DASH
    215	000224	000560'				.WORD	ITMSTR		; STAR
    216	000226	000260'				.WORD	ITMEXC		; EXCLAMATION POINT
    217	000230	000462'				.WORD	ITMOPA		;SCTN
    218	000232	000462'				.WORD	ITMOPA		;SEGN
    219	000234	000462'				.WORD	ITMOPA		;FILE
    220
    221					;
    222					; COMMA
    223					;
    224
    225	000236				ITMCM:				;
    226	000236	022703 	000002G			CMP	#$DSTK+2,R3	; AT ZERO PARENTHESES LEVEL
MLSG1	MACRO M1110  22-AUG-78 01:47  PAGE 3-4


    227	000242	001125 				BNE	ITMOP1		; IF NE NO
    228	000244	016767 	177552 	177546 		MOV	RFLG0,RFLG	; COPY RESIDENCY FLAG
    229	000252	005067 	177544 			CLR	RFLG0		; RESET RESIDENCY FLAG FOR STRUCTURE
    230	000256	000517 				BR	ITMOP1		;
    231
    232					;
    233					; EXCL-EXCLAMATION POINT
    234					;
    235
    236	000260				ITMEXC:				;
    237	000260	020327 	000002G			CMP	R3,#$DSTK+2	; AT ZERO PARENTHESES LEVEL
    238	000264	001403 				BEQ	10$		; IF EQ YES
    239	000266	105767 	177526 			TSTB	RFLG		; LEGAL SYNTAX?
    240	000272	002070 				BGE	ITMCM1		; IF GE NO
    241	000274				10$:				;
    242	000274	012767 	000000G	177520 		MOV	#RS$FLG,RFLG0	; SET RESIDENCY FLAG FOR THIS STRUCTURE
    243	000302	032767 	000000G	000000G		BIT	#MP$SY,$SWTCH	; TARGET SYSTEM MAPPED?
    244	000310	001515 				BEQ	ITMOP2		; IF EQ NO
    245	000312	032767 	000000G	000000G		BIT	#RS$OV,$SWTCH	; RECOGNIZING RESIDENT OVERLAYS?
    246	000320	001111 				BNE	ITMOP2		; IF NE NO
    247	000322	012767 	000002G	000000G		MOV	#S$ZSEG+2,$SZSEG ; SET SIZE OF SEGMENT DESCRIPTORS
    248	000330	000505 				BR	ITMOP2		; SET LAST ITEM TYPE
    249
    250					;
    251					; LPAR-LEFT PARENTHESIS
    252					;
    253
    254	000332	005767 	000000G		ITMLPR:	TST	$ALVL		; AUTOLOAD ENTRY NONZERO
    255	000336	001003 				BNE	10$		;IF NE YES
    256	000340	005767 	177434 			TST	AFLG		; PREVIOUS OPERATOR STAR?
    257	000344	001402 				BEQ	20$		; IF EQ NO
    258	000346	005267 	000000G		10$:	INC	$ALVL		; INCEMENT AUTOLOAD LEVEL
    259	000352	022323 			20$:	CMP	(R3)+,(R3)+	;ADVANCE STACK LEVEL
    260	000354	020327 	000000C			CMP	R3,#$DSTK+<N$PLVL*4> ; STACK OVERFLOW?
    261	000360	103016 				BHIS	40$		; IF HIS YES
    262	000362	122715 	000000G			CMPB	#L$PAR,(R5)	; PREVIOUS ITEM LEFT PAREN.?
    263	000366	001002 				BNE	30$		; IF NE NO
    264	000370	011560 	000000G			MOV	(R5),T$YP(R0)	; COPY ITEM TYPE
    265	000374				30$:				;
    266	000374	122715 	000000G			CMPB	#E$XCL,(R5)	; PREVIOUS ITEM EXCLAMATION POINT?
    267	000400	001046 				BNE	ITMOP1		; IF NE NO
    268	000402	152760 	000000G	000001G		BISB	#RS$FLG,T$YP+1(R0) ; SET RESIDENCY FLAG IN ITEM
    269	000410	005067 	177404 			CLR	RFLG		; CLEAR RESIDENCY FLAG
    270	000414	000440 				BR	ITMOP1		;
    271	000416				40$:				;
    272	000416	012701 				MOV	(PC)+,R1	;TOO MANY PARENTHESIS LEVELS
    273	000420	   000G	   000G			.BYTE	E$R45,S$V2	;FATAL-NO RETURN
    274	000422	000501 				BR	ITMES2		;
    275
    276					;
    277					; RPAR-RIGHT PARENTHESIS
    278					;
    279
    280	000424	010033 			ITMRPR:	MOV	R0,@(R3)+	;LINK ITEM TO CURRENT LIST
    281	000426	010043 				MOV	R0,-(R3)	;
    282	000430	005767 	000000G			TST	$ALVL		; AUTOLOAD LEVEL NON-ZERO?
    283	000434	001402 				BEQ	10$		;IF EQ NO
MLSG1	MACRO M1110  22-AUG-78 01:47  PAGE 3-5


    284	000436	005367 	000000G			DEC	$ALVL		; DECREMENT AUTOLOAD LEVEL
    285	000442	024343 			10$:	CMP	-(R3),-(R3)	;REDUCE STACK LEVEL
    286	000444	020327 	000002G			CMP	R3,#$DSTK+2	; LEVEL OK?
    287	000450	103035 				BHIS	ITMOP2		;IF HIS YES
    288	000452	000463 				BR	ITMES1		;
    289
    290					;
    291					; SYNTAX ERROR EXIT
    292					;
    293
    294	000454	012701 			ITMCM1:	MOV	(PC)+,R1	;SYNTAX ERROR
    295	000456	   000G	   000G			.BYTE	E$R37,S$V2	;FATAL-NO RETURN
    296	000460	000462 				BR	ITMES2		;
    297
    298					;
    299					; SCTN/SEGN/FILE-OPERAND
    300					;
    301
    302	000462				ITMOPA:				;++021
    303	000462	012702 	000020'			MOV	#RFLG,R2	; GET ADDRESS OF RESIDENCY FLAG
    304	000466	122725 	000000G			CMPB	#L$PAR,(R5)+	; PREVIOUS ITEM LEFT PAREN.?
    305	000472	001003 				BNE	10$		; IF NE NO
    306	000474	111512 				MOVB	(R5),(R2)	; COPY RESIDENCY FLAG
    307	000476	142712 	000177 			BICB	#177,(R2)	; CLEAR ALL BUT FLAG
    308	000502				10$:				;
    309	000502	005305 				DEC	R5		; RESET TYPE POINTER
    310	000504	151260 	000001G			BISB	(R2),T$YP+1(R0)	; SET RESIDENCY INDICATOR
    311	000510	005767 	177264 			TST	AFLG		; TEST AUTOLOAD FLAG
    312	000514	001003 				BNE	ITMOP0		; IF EQ ITEM AUTOLOADABLE
    313	000516	005767 	000000G		ITMOP1:	TST	$ALVL		; AUTOLOAD LEVEL NON-ZERO?
    314	000522	001404 				BEQ	ITMOP3		;IF EQ NO
    315	000524	005260 	000000G		ITMOP0:	INC	T$YP(R0)	; SET AUTOLOAD BIT IN ITEM
    316	000530	010667 	000000G			MOV	SP,$AFLG	; SET AUTOLOAD FLAG
    317	000534	010033 			ITMOP3:	MOV	R0,@(R3)+	;LINK ITEM TO CURRENT LIST
    318	000536	010043 				MOV	R0,-(R3)	;
    319	000540	005067 	177234 			CLR	AFLG		; CLEAR THE AUTOLOAD FLAG
    320	000544				ITMOP2:				;
    321	000544	016015 	000000G			MOV	T$YP(R0),(R5)	; SET LAST ITEM TYPE
    322	000550	042715 	000001 			BIC	#1,(R5)		; CLEAR POSSIBLE AUTOLOAD FLAG
    323	000554	000167 	177364 			JMP	ITMBEG		;
    324
    325					;
    326					; STAR-ASTERISK
    327					;
    328
    329	000560				ITMSTR:				;
    330	000560	122715 	000000G			CMPB	#L$PAR,(R5)	; PREVIOUS ITEM LEFT PAREN?
    331	000564	001006 				BNE	10$		; IF NE NO
    332	000566	012702 	000020'			MOV	#RFLG,R2	; POINT TO RESIDENCY FLAG
    333	000572	116512 	000001 			MOVB	1(R5),(R2)	; COPY FLAGS
    334	000576	142712 	000177 			BICB	#177,(R2)	; CLEAR ALL BUT RESIDENCY FLAG
    335	000602				10$:				;
    336	000602	010667 	177172 			MOV	SP,AFLG		; SET AUTOLOAD FLAG
    337	000606	000756 				BR	ITMOP2		;
    338
    339
    340					;
MLSG1	MACRO M1110  22-AUG-78 01:47  PAGE 3-6


    341					; EOS-END OF STATEMENT
    342					;
    343
    344	000610	010033 			ITMEOS:	MOV	R0,@(R3)+	;LINK ITEM TO CURRENT LIST
    345	000612	010043 				MOV	R0,-(R3)	;
    346	000614	020327 	000002G			CMP	R3,#$DSTK+2	; ZERO PARENTHESIS LEVEL
    347	000620	001404 				BEQ	ITMES3		; IF EQ YES
    348	000622	012701 			ITMES1:	MOV	(PC)+,R1	;UNBALANCED PARENTHESIS
    349	000624	   000G	   000G			.BYTE	E$R46,S$V2	;FATAL-NO RETURN
    350	000626	000167 	001022 		ITMES2:	JMP	FILNM2		;
    351	000632				ITMES3:				;
    352	000632					RETURN			;
    353
    354
    355
    356
    357					;
    358					; SUBROUTINE TO BYPASS LEADING OR TRAILING BLANKS AND HT'S
    359					;
    360
    361	000634				BYPASS:				;++033                                          ;**NEW**
    362	000634	105710 				TSTB	(R0)		;TERMINAL ZERO?                                 ;**-1
    363	000636	001403 				BEQ	5$		;IF EQ YES
    364	000640	122710 	000073 			CMPB	#';,(R0)	;COMMENT TERMINATOR?
    365	000644	001006 				BNE	10$		;IF NE NO
    366	000646	020427 	177774G		5$:	CMP	R4,#$TSTK-4	; ANY TO UNSTACK?
    367	000652	103003 				BHIS	10$		;IF HIS NO
    368	000654	022424 				CMP	(R4)+,(R4)+	;REMOVE ENTRY FROM TEXT STACK
    369	000656	011400 				MOV	(R4),R0		;GET ADDRESS OF NEXT BYTE
    370	000660	000765 				BR	BYPASS		;GO AGAIN
    371	000662	010014 			10$:	MOV	R0,(R4)		;SAVE ADDRESS OF NEXT BYTE
    372	000664					RETURN			;
    373
    374					;
    375					; SUBROUTINE TO GET NEXT ITEM FROM SEGMENT DESCRIPTION
    376					;
    377					; INPUTS:
    378					;
    379					;	R4=ADDRESS OF TOP OF TEXT POINTER STACK.
    380					;
    381					; OUTPUTS:
    382					;
    383					;	R0=ADDRESS OF NEXT ITEM.
    384					;
    385
    386	000666	012700 	000000G		ITEM:	MOV	#$EOSOP,R0	; ASSUME EOS
    387	000672	105774 	000000 			TSTB	@(R4)		;END OF SEGMENT DESCRIPTION?
    388	000676	001471 				BEQ	40$		;IF EQ YES
    389	000700	122774 	000073 	000000 		CMPB	#';,@(R4)	;COMMENT ALSO ENDS DESCRIPTION
    390	000706	001465 				BEQ	40$		;IF EQ COMMENT TERMINATION
    391	000710	011400 				MOV	(R4),R0		;GET ADDRESS OF NEXT BYTE
    392	000712	012701 	000006'			MOV	#CNTRL,R1	;GET ADDRESS OF CONTROL BYTE STRING
    393	000716	122110 				CMPB	(R1)+,(R0)	;LEFT BRACKET?
    394	000720	001461 				BEQ	50$		;IF EQ YES
    395	000722	122110 				CMPB	(R1)+,(R0)	;LEFT ANGLE BRACKET?
    396	000724	001457 				BEQ	50$		;IF EQ YES
    397	000726	122110 				CMPB	(R1)+,(R0)	;"$"?
MLSG1	MACRO M1110  22-AUG-78 01:47  PAGE 3-7


    398	000730	001455 				BEQ	50$		;IF EQ YES
    399	000732	122110 				CMPB	(R1)+,(R0)	;POSSIBLY NUMERIC?
    400	000734	101006 				BHI	10$		;IF HI NO
    401	000736	122110 				CMPB	(R1)+,(R0)	;NUMERIC?
    402	000740	103051 				BHIS	50$		;IF HIS YES
    403	000742	122110 				CMPB	(R1)+,(R0)	;POSSIBLY ALPHABETIC?
    404	000744	101002 				BHI	10$		;IF HI NO
    405	000746	121110 				CMPB	(R1),(R0)	;ALPHABETIC?
    406	000750	103045 				BHIS	50$		;IF HIS YES
    407
    408					;
    409					; OPERATOR PROCESSING
    410					;
    411
    412	000752	012705 	000006 		10$:	MOV	#OBASE-OBAS,R5	;GET NUMBER OF OPERATORS
    413	000756	112001 				MOVB	(R0)+,R1	;GET NEXT BYTE
    414	000760	120165 	177777'		20$:	CMPB	R1,OBAS-1(R5)	;OPERATOR MATCH?
    415	000764	001406 				BEQ	30$		;IF EQ YES
    416	000766					SOB	R5,20$		;REPEAT
    417	000772	012701 				MOV	(PC)+,R1	;ILLEGAL OPERATOR
    418	000774	   000G	   000G			.BYTE	E$R43,S$V2	;FATAL-NO RETURN
    419	000776	000167 	000652 			JMP	FILNM2		;
    420	001002				30$:	CALL	BYPASS		;BYPASS TRAILING BLANKS AND HT'S
    421	001006	012700 	000000G			MOV	#$EXCL,R0	; GET EXCLAMATION POINT ENTRY
    422	001012	126527 	177777'	000000G		CMPB	OPRV-1(R5),#E$XCL ; EXCLAMATION POINT?
    423	001020	001420 				BEQ	40$		; IF EQ YES
    424	001022	012700 	000000G			MOV	#$STAR,R0	; ASSUME ASTERISK OPERATOR
    425	001026	126527 	177777'	000000G		CMPB	OPRV-1(R5),#S$TAR ; AUTOLOAD OPERATOR?
    426	001034	001412 				BEQ	40$		; IF EQ YES
    427	001036	012701 	000004 			MOV	#4,R1		;GET SIZE OF BLOCK NEEDED
    428	001042					CALL	$ALBLK		;ALLOCATE STORAGE
    429	001046	012760 	002000 	000000G		MOV	#4*400,T$YP(R0)	; SET SIZE OF ENTRY
    430	001054	116560 	177777'	000000G		MOVB	OPRV-1(R5),T$YP(R0) ; SET TYPE OF ENTRY
    431	001062				40$:	RETURN			;
    432
    433					;
    434					; OPERAND PROCESSING
    435					;
    436
    437	001064	012705 	000024'		50$:	MOV	#TMP,R5		;GET ADDRESS OF TEMP STORAGE
    438	001070	010046 				MOV	R0,-(SP)	;SAVE ADDRESS FOR POSSIBLE RESCAN
    439	001072					CALL	$RP		;CONVERT OPERAND NAME
    440	001076	005300 				DEC	R0		;BACK UP TO TERMINATOR
    441	001100	024545 				CMP	-(R5),-(R5)	;POINT TO NAME
    442	001102	122710 	000072 			CMPB	#':,(R0)	;COLON TERMINATOR?
    443	001106	001462 				BEQ	FILNM		;IF EQ YES-FILE
    444	001110	122710 	000056 			CMPB	#'.,(R0)	;PERIOD TERMINATOR?
    445	001114	001457 				BEQ	FILNM		;IF EQ YES-FILE
    446	001116	122710 	000133 			CMPB	#'[,(R0)	;LEFT BRACKET TERMINATOR?
    447	001122	001454 				BEQ	FILNM		;IF EQ YES-FILE
    448	001124	122710 	000074 			CMPB	#'<,(R0)	;LEFT ANGLE BRACKET TERMINATOR?
    449	001130	001451 				BEQ	FILNM		;IF EQ YES-FILE
    450	001132	122710 	000057 			CMPB	#'/,(R0)	;SLASH?
    451	001136	001446 				BEQ	FILNM		;IF EQ YES-FILE
    452	001140	010001 				MOV	R0,R1		;COPY ADDRESS OF NEXT BYTE
    453	001142	161601 				SUB	(SP),R1		;CALCULATE LENGTH OF NAME
    454	001144	020127 	000007 			CMP	R1,#7		;POSSIBLE DIRECTIVE OR LABEL?
MLSG1	MACRO M1110  22-AUG-78 01:47  PAGE 3-8


    455	001150	103041 				BHIS	FILNM		;IF HIS NO
    456	001152					CALL	$SCNL		; SCAN DIRECTIVE LIST FOR MATCH
    457	001156	103436 				BCS	FILNM		;IF CS NO FIND EM-FILE
    458	001160	005726 				TST	(SP)+		;CLEAN STACK
    459	001162					CALL	BYPASS		;BYPASS TRAILING BLANKS AND HT'S
    460	001166	105761 	000000G			TSTB	T$YP(R1)	; FACTOR DIRECTIVE
    461	001172	001415 				BEQ	70$		;IF EQ YES
    462	001174	010146 				MOV	R1,-(SP)	;SAVE ADDRESS OF ENTRY
    463	001176	116101 	000001G			MOVB	T$YP+1(R1),R1	; GET SIZE OF ENTRY
    464	001202	010146 				MOV	R1,-(SP)	;SAVE SIZE OF ENTRY
    465	001204					CALL	$ALBLK		;ALLOCATE STORAGE
    466	001210	010001 				MOV	R0,R1		;COPY ADDRESS OF BLOCK
    467	001212	012605 				MOV	(SP)+,R5	;RETRIEVE SIZE OF ENTRY
    468	001214	012602 				MOV	(SP)+,R2	;RETRIEVE ADDRESS OF ENTRY
    469	001216	112221 			60$:	MOVB	(R2)+,(R1)+	;COPY ENTRY
    470	001220					SOB	R5,60$		;REPEAT
    471	001224					RETURN			;
    472	001226	020427 	000000C		70$:	CMP	R4,#$TSTK-<N$SLVL*4>	; ANY MORE ROOM ON TEXT STACK ?
    473	001232	101404 				BLOS	80$		;IF LOS NO
    474	001234	010144 				MOV	R1,-(R4)	;STACK ENTRY ADDRESS
    475	001236	016144 	000000G			MOV	N$XT(R1),-(R4)		; STACK ADDRESS OF NEXT BYTE
    476	001242	000611 				BR	ITEM		;GO AGAIN
    477	001244	012701 			80$:	MOV	(PC)+,R1	;TOO MANY NESTED .SEG/.ROOT DIRECTIVES
    478	001246	   000G	   000G			.BYTE	E$R44,S$V2	;FATAL-NO RETURN
    479	001250	000167 	000400 			JMP	FILNM2		;
    480
    481					;
    482					; FILE OPERAND PROCESSING
    483					;
    484
    485	001254	012600 			FILNM:	MOV	(SP)+,R0	;RETRIEVE ADDRESS OF NEXT BYTE FOR RESCAN
    486	001256	012705 	000000G			MOV	#$LNBUF,R5	;GET ADDRESS OF LINE BUFFER
    487	001262	005046 				CLR	-(SP)		;CLEAR BRACKET COUNT
    488	001264	105710 			10$:	TSTB	(R0)		;ZERO BYTE?
    489	001266	001434 				BEQ	20$		;IF EQ YES
    490	001270	122710 	000055 			CMPB	#'-,(R0)	;DASH?
    491	001274	001431 				BEQ	20$		;IF EQ YES
    492	001276	122710 	000051 			CMPB	#'),(R0)	;RIGHT PARENTHESIS?
    493	001302	001426 				BEQ	20$		;IF EQ YES
    494	001304	122710 	000050 			CMPB	#'(,(R0)	;++039 LEFT PARENTHESES
    495	001310	001423 				BEQ	20$		;++039 IF EQ YES
    496	001312	122710 	000052 			CMPB	#'*,(R0)	;++039 ASTERISK?
    497	001316	001420 				BEQ	20$		;++039 IF EQ YES
    498	001320	005716 				TST	(SP)		;IN BRACKETS?
    499	001322	001003 				BNE	13$		;IF NE YES
    500	001324	122710 	000054 			CMPB	#',,(R0)	;COMMA?
    501	001330	001413 				BEQ	20$		;IF EQ YES
    502	001332	005216 			13$:	INC	(SP)		;ASSUME LEFT BRACKET
    503	001334	122710 	000133 			CMPB	#'[,(R0)	;LEFT BRACKET?
    504	001340	001405 				BEQ	17$		;IF EQ YES
    505	001342	005316 				DEC	(SP)		;DECREMENT BRACKET COUNT
    506	001344	122710 	000135 			CMPB	#'],(R0)	;RIGHT BRACKET?
    507	001350	001001 				BNE	17$		;IF NE NO
    508	001352	005316 				DEC	(SP)		;DECREMENT BRACKET COUNT
    509	001354	112025 			17$:	MOVB	(R0)+,(R5)+	;MOVE BYTE TO LINE BUFFER
    510	001356	000742 				BR	10$		;CONTINUE SCAN
    511	001360	005726 			20$:	TST	(SP)+		;BALANCED BRACKETS?
MLSG1	MACRO M1110  22-AUG-78 01:47  PAGE 3-9


    512	001362	001132 				BNE	40$		;IF NE NO
    513	001364					CALL	BYPASS		;BYPASS TRAILING BLANKS AND HT'S
    514	001370	012701 	000000G			MOV	#T$MSIZ,R1	;GET SIZE OF CSI BLOCK
    515	001374					CALL	$ALBLK		;ALLOCATE CSI BLOCK
    516	001400	162705 	000000G			SUB	#$LNBUF,R5	;CALCULATE LENGTH OF LINE SEGMENT
    517	001404					CSI$1	R0,#$LNBUF,R5	;ANALYZE SYNTAX
    518	001422	103512 				BCS	40$		;IF CS SYNTAX ERROR
    519	001424	010005 				MOV	R0,R5		;SAVE ADDRESS OF CSI BLOCK
    520	001426					CALL	$CLRMN		; INITIALIZE SWITCH VALUE LIST
    521	001432	016700 	000000G			MOV	$INIPT,R0	; GET INPUT FILE RECORD BLOCK
    522	001436	010501 				MOV	R5,R1		;SET ADDRESS OF CSI BLOCK
    523	001440					CALL	$SCANO		;SCAN FOR OUTPUT FILE
    524	001444	103501 				BCS	40$		;IF CS SYNTAX ERROR
    525	001446					CALL	$BLMNT		; BUILD MODULE NAME LIST IF LIBRARY FILE
    526	001452	012701 	000000C			MOV	#<S$V2*400!E$R78>,R1 ; ASSUME ERROR
    527	001456	103476 				BCS	FILNM2		; IF C/S INCORRECT MODULE SPECIFICATION
    528	001460	012700 	000000G			MOV	#$FRHD,R0	;GET ADDRESS OF FREE SPACE POOL LISTHEAD
    529	001464	012701 	000000G			MOV	#T$MSIZ,R1	;GET SIZE OF BLOCK  TO RELEASE
    530	001470	010502 				MOV	R5,R2		;SET ADDRESS OF BLOCK TO RELEASE
    531	001472					CALL	$RLCB		;RELEASE BLOCK
    532	001476	016700 	000000G			MOV	$INIPT,R0	; GET INPUT FILE RECORD BLOCK POINTER
    533	001502	016046 	000046 			MOV	F.DFNB(R0),-(SP) ; SAVE POINTER TO NAMEBLOCK
    534	001506	032760 	000000G	000000G		BIT	#SW$LB,R$SWTH(R0) ; LIBRARY FILE?
    535	001514	001403 				BEQ	30$		; IF EQ NO
    536	001516	012760 	000000G	000046 		MOV	#$LIBNB,F.DFNB(R0) ; REPLACE DEFAULT NAME BLOCK
    537	001524				30$:				;
    538	001524					CALL	$PRFND		;PARSE/FIND FILE
    539	001530	012660 	000046 			MOV	(SP)+,F.DFNB(R0) ; RESTORE DEFAULT NAMEBLOCK POINTER
    540	001534	016002 	000000G			MOV	R$NAME(R0),R2	;GET ADDRESS OF NAME STRING
    541	001540	012701 				MOV	(PC)+,R1	;ASSUME PARSE/FIND FAILURE
    542	001542	   000G	   000G			.BYTE	E$R57,S$V2	;FATAL-NO RETURN
    543	001544	103460 				BCS	FILNM3		;IF CS PARSE/FIND FAILURE
    544	001546					CALL	$ALELD		; ALLOCATE ELEMENT DESCRIPTOR
    545	001552	032760 	000000G	000000G		BIT	#SW$DL,E$LSWT(R0) ; DEFAULT LIBRARY SPECIFIED?
    546	001560	001410 				BEQ	35$		; IF EQ NO
    547	001562	005767 	000000G			TST	$LIBNM		; PREVIOUS DEFAULT SPECIFIED?
    548	001566	001030 				BNE	40$		; IF NE YES, SYNTAX ERROR
    549	001570	010167 	000000G			MOV	R1,$LIBNM	; SET DEFAULT LIBRARY
    550	001574	016760 	000000G	000000G		MOV	$LBSWT,E$LSWT(R0) ; SET LIBRARY FILE SWITCH WORD
    551	001602				35$:				;
    552	001602	016760 	000000G	000002G		MOV	$LBMOD,E$LIDT+2(R0) ; SET IN ADDRESS OF MODULE NAME LIST
    553	001610	016702 	000000G			MOV	$INIPT,R2	; GET ADDRESS OF RECORD BLOCK POINTER
    554	001614	016762 	000000G	000000G		MOV	$DFINP,R$SWTH(R2) ; RESET SWITCH WORD
    555	001622	010146 				MOV	R1,-(SP)	; SAVE VIRTUAL ADDRESS OF DESCRIPTOR
    556	001624	012701 	000006 			MOV	#6,R1		; GET LENGTH OF BLOCK FOR ITEM
    557	001630					CALL	$ALBLK		; ALLOCATE CORE BLOCK
    558	001634	010001 				MOV	R0,R1		; COPY ADDRESS OF BLOCK
    559	001636	005721 				TST	(R1)+		; POINT TO TYPE/SIZE
    560	001640	012721 	000000C			MOV	#<6*400!F$ILE>,(R1)+ ; SET TYPE/SIZE
    561	001644	012621 				MOV	(SP)+,(R1)+	; SET VIRTUAL ADDRESS OF ELEMENT DESCR.
    562	001646					RETURN			;
    563	001650	012701 			40$:	MOV	(PC)+,R1	;SYNTAX ERROR
    564	001652	   000G	   000G			.BYTE	E$R37,S$V2	;FATAL-NO RETURN
    565	001654	012702 	000000G		FILNM2:	MOV	#$LNDES,R2	;GET ADDRESS OF LINE DESCRIPTOR
    566	001660	016400 	000002 			MOV	2(R4),R0	;GET ADDRESS OF PARSED DIRECTIVE
    567	001664	116022 	000001G			MOVB	T$YP+1(R0),(R2)+ ; GET SIZE OF ENTRY+LINE
    568	001670	105022 				CLRB	(R2)+		; CLEAR TOP BYTE OF COUNT WORD
MLSG1	MACRO M1110  22-AUG-78 01:47  PAGE 3-10


    569	001672	162742 	000013 			SUB	#11.,-(R2)	; SUBTRACT OUT SIZE OF ENTRY
    570	001676	062700 	000002G			ADD	#N$XT+2,R0	; CALCULATE ADDRESS OF LINE
    571	001702	010062 	000002 			MOV	R0,2(R2)	;SET ADDRESS OF LINE
    572	001706				FILNM3:	CALL	$ERMSG		;OUTPUT ERROR MESSAGE
    573
    574		000001 				.END
MLSG1	MACRO M1110  22-AUG-78 01:47  PAGE 3-11
SYMBOL TABLE

AFLG    000000R  	FA.SHR= 000040   	F.BKVB= 000064   	ITMOP1  000516R  	S$V2  = ****** GX
AUTO    000002R  	FA.TMP= 000020   	F.CHR = 000075   	ITMOP2  000544R  	S$ZSEG= ****** GX
BYPASS  000634R  	FA.WCK= 020000   	F.CNTG= 000034   	ITMOP3  000534R  	S.BFHD= 000020
B.BBFS= 000010   	FA.WRT= 000002   	F.DFNB= 000046   	ITMRPR  000424R  	S.FATT= 000016
B.BFST= 000015   	FD.BLK= 000010   	F.DSPT= 000044   	ITMSTR  000560R  	S.FDB = 000140
B.NXBD= 000012   	FD.CCL= 000002   	F.DVNM= 000134   	LF    = 000012   	S.FNAM= 000006
B.VBN = 000004   	FD.COM= 020000   	F.EFBK= 000010   	LITEM   000016R  	S.FNB = 000036
CH.AND= 000001   	FD.CR = 000002   	F.EFN = 000050   	L$PAR = ****** GX	S.FNBW= 000017
CNTRL   000006R  	FD.DIR= 000010   	F.EOBB= 000032   	MP$SY = ****** GX	S.FNTY= 000004
CR    = 000015   	FD.FTN= 000001   	F.ERR = 000052   	NB.DEV= 000200   	S.FTYP= 000002
CS.DIF= 000002   	FD.F11= 040000   	F.FACC= 000043   	NB.DIR= 000100   	S.NFEN= 000020
CS.DVF= 000004   	FD.INS= 000010   	F.FFBY= 000014   	NB.NAM= 000004   	TMP     000024R
CS.EQU= 000040   	FD.ISP= 002000   	F.FNAM= 000110   	NB.SD1= 000400   	T$MSIZ= ****** GX
CS.INP= 000001   	FD.MNT= 100000   	F.FNB = 000102   	NB.SD2= 001000   	T$YP  = ****** GX
CS.MOR= 000020   	FD.OSP= 004000   	F.FTYP= 000116   	NB.SNM= 000040   	VT    = 000013
CS.NMF= 000001   	FD.PLC= 000004   	F.FVER= 000120   	NB.STP= 000020   	$AFLG = ****** GX
CS.OUT= 000002   	FD.PRN= 000004   	F.HIBK= 000004   	NB.SVR= 000010   	$ALBLK= ****** GX
CS.WLD= 000010   	FD.PSE= 010000   	F.LUN = 000042   	NB.TYP= 000002   	$ALELD= ****** GX
C$OMA = ****** GX	FD.RAH= 000001   	F.MBCT= 000054   	NB.VER= 000001   	$ALVL = ****** GX
C.CMLD= 000002   	FD.RAN= 000002   	F.MBC1= 000055   	N$PLVL= ****** GX	$BLMNT= ****** GX
C.DEVD= 000006   	FD.REC= 000001   	F.MBFG= 000056   	N$SLVL= ****** GX	$CBAS = ****** GX
C.DIRD= 000012   	FD.RWM= 000001   	F.NRBD= 000024   	N$XT  = ****** GX	$CLRMN= ****** GX
C.DSDS= 000006   	FD.SDI= 000020   	F.NREC= 000030   	N.DID = 000024   	$DFINP= ****** GX
C.FILD= 000016   	FD.SQD= 000040   	F.OVBS= 000030   	N.DVNM= 000032   	$DSTK = ****** GX
C.MKW1= 000024   	FD.TTY= 000004   	F.RACC= 000016   	N.FID = 000000   	$EOSOP= ****** GX
C.MKW2= 000026   	FD.WBH= 000002   	F.RATT= 000001   	N.FNAM= 000006   	$ERMSG= ****** GX
C.SIZE= 000054   	FF    = 000014   	F.RCNM= 000034   	N.FTYP= 000014   	$EXCL = ****** GX
C.STAT= 000001   	FF.CHR= 000005   	F.RCTL= 000017   	N.FVER= 000016   	$FRHD = ****** GX
C.SWAD= 000022   	FF.NV = 000003   	F.RSIZ= 000002   	N.NEXT= 000022   	$INIPT= ****** GX
C.TYPR= 000000   	FF.POE= 000002   	F.RTYP= 000000   	N.STAT= 000020   	$LBMOD= ****** GX
D$ASH = ****** GX	FF.RWD= 000001   	F.SEQN= 000100   	N.UNIT= 000034   	$LBSWT= ****** GX
E$LIDT= ****** GX	FF.RWF= 000006   	F.SPDV= 000072   	OBAS    000000R     002	$LIBNB= ****** GX
E$LSWT= ****** GX	FF.SPC= 000004   	F.SPUN= 000074   	OBASE   000006R     002	$LIBNM= ****** GX
E$R37 = ****** GX	FILNM   001254R  	F.STBK= 000036   	OPRV    000000R     003	$LNBUF= ****** GX
E$R43 = ****** GX	FILNM2  001654R  	F.UNIT= 000136   	PAR$$$= 000000   	$LNDES= ****** GX
E$R44 = ****** GX	FILNM3  001706R  	F.URBD= 000020   	RFLG    000020R  	$MLSG1  000036RG
E$R45 = ****** GX	FO.APD= 000106   	F.VBN = 000064   	RFLG0   000022R  	$PRFND= ****** GX
E$R46 = ****** GX	FO.MFY= 000002   	F.VBSZ= 000060   	RS$FLG= ****** GX	$RLCB = ****** GX
E$R57 = ****** GX	FO.RD = 000001   	HT    = 000011   	RS$OV = ****** GX	$RP   = ****** GX
E$R78 = ****** GX	FO.UPD= 000006   	ITEM    000666R  	R$NAME= ****** GX	$RTDIR= ****** GX
E$XCL = ****** GX	FO.WRT= 000016   	ITMBEG  000144R  	R$PAR = ****** GX	$SCANO= ****** GX
FA.APD= 000100   	F$ILE = ****** GX	ITMCM   000236R  	R$SWTH= ****** GX	$SCNL = ****** GX
FA.CRE= 000010   	F.ACTL= 000076   	ITMCM1  000454R  	R$$11M= 000000   	$SOSOP= ****** GX
FA.DLK= 001000   	F.ALOC= 000040   	ITMEOS  000610R  	R.FIX = 000001   	$STAR = ****** GX
FA.ENB= 100000   	F.BBFS= 000062   	ITMES1  000622R  	R.SEQ = 000003   	$SWTCH= ****** GX
FA.EXC= 002000   	F.BDB = 000070   	ITMES2  000626R  	R.VAR = 000002   	$SZSEG= ****** GX
FA.EXT= 000004   	F.BGBC= 000057   	ITMES3  000632R  	SPA   = 000040   	$TSTK = ****** GX
FA.NSP= 000100   	F.BKDN= 000026   	ITMEXC  000260R  	SW$DL = ****** GX	$$    = 000001
FA.POS= 010000   	F.BKDS= 000020   	ITMLPR  000332R  	SW$LB = ****** GX	.CSI1 = ****** G
FA.RD = 000001   	F.BKEF= 000050   	ITMOPA  000462R  	S$OS  = ****** GX	...GBL= 000000
FA.RWD= 004000   	F.BKP1= 000051   	ITMOP0  000524R  	S$TAR = ****** GX	...TPC= 000140
FA.SEQ= 040000   	F.BKST= 000024

. ABS.	000000	   000
      	001712	   001
OPRL  	000006	   002
OVAL  	000006	   003
MLSG1	MACRO M1110  22-AUG-78 01:47  PAGE 3-12
SYMBOL TABLE

ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  2891 WORDS  ( 12 PAGES)
DYNAMIC MEMORY:  3828 WORDS  ( 14 PAGES)
ELAPSED TIME:  00:00:27
OBJ$:MLSG1,LIS$:MLSG1/-SP=SRC$:MACFLM,FCSPR,MLSG1
