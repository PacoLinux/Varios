SCAN	MACRO M1110  22-AUG-78 01:58  PAGE 3


      1						.TITLE	SCAN
      2						.IDENT	/03/								;**NEW**
      3															;**-1
      4					;
      5					; COPYRIGHT   1974,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
      6					;
      7					; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
      8					; ON A  SINGLE COMPUTER SYSTEM AND CAN BE  COPIED (WITH INCLUSION
      9					; OF DEC'S COPYRIGHT  NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
     10					; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
     11					;
     12					; THE  INFORMATION  IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
     13					; NOTICE  AND  SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
     14					; EQUIPMENT CORPORATION.
     15					;
     16					; DEC  ASSUMES NO  RESPONSIBILITY  FOR  THE  USE  OR  RELIABILITY
     17					; OF  ITS  SOFTWARE ON  EQUIPMENT WHICH  IS  NOT SUPPLIED BY DEC.
     18					;
     19					; VERSION 03									;**NEW**
     20					;										;**-1
     21					; D.N. CUTLER 16-OCT-72
     22					;
     23					; MONITOR DEPENDENT COMMAND STRING ANALYSIS ROUTINES
     24					;
     25					; MACRO LIBRARY CALLS								;**NEW**
     26					;										;**NEW**
     27															;**NEW**
     28						.MCALL	CSI$,CSI$1,CSI$2						;**NEW**
     29															;**-5
     30					;
     31					; EQUATED SYMBOLS
     32					;
     33
     34	000000					CSI$			;DEFINE CSI BLOCK OFFSET DEFINITIONS		;**NEW**
     35		000054 			T$MSIZ==C.SIZE			;SIZE OF CSI BLOCK				;**NEW**
     36															;**-4
     37					;+
     38					; **-$SCANI/$SCANO-SCAN FOR INPUT/OUTPUT FILE SPECIFCICATION
     39					;
     40					; THIS ROUTINE IS CALLED TO SCAN A COMMAND STRING FOR THE NEXT INPUT
     41					; OR OUTPUT FILE. $SYNTX MUST HAVE BEEN PREVIOUSLY CALLED TO SET UP
     42					; THE COMMAND BUFFER AND TO DO THE SYNTAX ANALYSIS.
     43					;
     44					; INPUTS:
     45					;
     46					;	R0=ADDRESS OF RECORD BLOCK.
     47					;	R1=ADDRESS OF TEMP BUFFER AREA.
     48					;
     49					; OUTPUTS:
     50					;
     51					;	C=1 IF NO FILE SPECIFIED OR ILLEGAL SWITCH.				;**NEW**
     52					;	C=0 IF REQUEST IS SUCESSFUL.						;**-1
     53					;	IN EITHER CASE R0 IS RETURNED AS THE MORE FILES FLAG.			;**NEW**
     54					;		IF R0 EQ 0, THEN MORE FILES ARE SPECIFIED.			;**NEW**
     55					;		IF R0 EQ 1, THEN NO MORE FILES ARE SPECIFIED.			;**NEW**
     56					;-
     57
SCAN	MACRO M1110  22-AUG-78 01:58  PAGE 3-1


     58	000000	112761 	000001 	000000 	$SCANI::MOVB	#CS.INP,C.TYPR(R1);SET FOR INPUT FILE				;**NEW**
     59	000006	000403 				BR	SCANO		;						;**NEW**
     60	000010	112761 	000002 	000000 	$SCANO::MOVB	#CS.OUT,C.TYPR(R1);SET FOR OUTPUT FILE				;**NEW**
     61	000016				SCANO:	SAVRG			;SAVE NONVOLITILE REGISTERS			;**NEW**
     62	000022	010005 				MOV	R0,R5		;SAVE RECORD BLOCK ADDRESS			;**NEW**
     63	000024					CSI$2	R1,,R$SWBK(R5)	;GET FILE SPECIFICATION				;**NEW**
     64	000040	010102 				MOV	R1,R2		;COPY CSI BLOCK ADDRESS				;**NEW**
     65	000042	116204 	000001 			MOVB	C.STAT(R2),R4	;GET STATUS BYTE				;**NEW**
     66	000046	103444 				BCS	10$		;IF CS ILLEGAL SWITCH				;**NEW**
     67	000050	132704 	000005 			BITB	#CS.NMF!CS.DVF,R4;FILE OR DEVICE SPECIFIED?			;**NEW**
     68	000054	001464 				BEQ	60$		;IF EQ NO					;**NEW**
     69	000056	132704 	000010 			BITB	#CS.WLD,R4	;WILD CARD SPECIFIED?				;**NEW**
     70	000062	001041 				BNE	20$		;IF NE YES					;**NEW**
     71	000064	022762 	000000G	000006 		CMP	#F$DEVL,C.DEVD(R2);LEGAL DEVICE NAME LENGTH?			;**NEW**
     72	000072	103447 				BLO	40$		;IF LO NO					;**NEW**
     73	000074	022762 	000000G	000012 		CMP	#F$DIRL,C.DIRD(R2);LEGAL DIRECTORY NAME LENGTH?			;**NEW**
     74	000102	103436 				BLO	35$		;IF LO NO					;**NEW**
     75	000104	022762 	000000G	000016 		CMP	#F$FILL,C.FILD(R2);LEGAL FILENAAME LENGTH?			;**NEW**
     76	000112	103425 				BLO	20$		;IF LO NO					;**NEW**
     77	000114	016505 	000044 			MOV	F.DSPT(R5),R5	;GET ADDRESS OF DATA SET DESCRIPTOR		;**NEW**
     78	000120	062702 	000006 			ADD	#C.DSDS,R2	;POINT TO CSI DATA SET DESCRIPTOR		;**NEW**
     79	000124	012746 	000003 			MOV	#3,-(SP)	;SET LOOP COUNT					;**NEW**
     80	000130	012203 			3$:	MOV	(R2)+,R3	;GET LENGTH OF LINE SEGMENT			;**NEW**
     81	000132	010325 				MOV	R3,(R5)+	;STORE IN DESCRIPTOR				;**NEW**
     82	000134	012201 				MOV	(R2)+,R1	;GET ADDRESS OF LINE SEGMENT			;**NEW**
     83	000136	012500 				MOV	(R5)+,R0	;GET ADDRESS TO STORE LINE SEGMENT		;**NEW**
     84	000140	005303 			5$:	DEC	R3		;DECREMENT BYTE COUNT				;**NEW**
     85	000142	002402 				BLT	7$		;IF LT DONE					;**NEW**
     86	000144	112120 				MOVB	(R1)+,(R0)+	;						;**NEW**
     87	000146	000774 				BR	5$		;						;**NEW**
     88	000150	005316 			7$:	DEC	(SP)		;DECREMENT LOOP COUNT				;**NEW**
     89	000152	003366 				BGT	3$		;IF GT MORE TO GO				;**NEW**
     90	000154	005726 				TST	(SP)+		;CLEAN STACK					;**NEW**
     91	000156	000424 				BR	70$		;						;**NEW**
     92															;**NEW**
     93					;										;**NEW**
     94					; ILLEGAL SWITCH SPECIFICATION							;**NEW**
     95					;										;**NEW**
     96															;**NEW**
     97	000160	012701 			10$:	MOV	(PC)+,R1	;GET ERROR,SEVERITY				;**NEW**
     98	000162	   000G	   000G			.BYTE	E$R3,S$V2	;FATAL-NO RETURN				;**NEW**
     99	000164	000402 				BR	30$		;						;**NEW**
    100															;**NEW**
    101					;										;**NEW**
    102					; ILLEGAL FILE SPECIFICATION							;**NEW**
    103					;										;**NEW**
    104															;**NEW**
    105	000166	012701 			20$:	MOV	(PC)+,R1	;GET ERROR,SEVERITY				;**NEW**
    106	000170	   000G	   000G			.BYTE	E$R55,S$V2	;FATAL-NO RETURN				;**NEW**
    107	000172	062702 	000016 		30$:	ADD	#C.FILD,R2	;POINT TO FILENAME DESCRIPTOR			;**NEW**
    108	000176	000411 				BR	50$		;						;**NEW**
    109															;**NEW**
    110					;										;**NEW**
    111					; ILLEGAL DIRECTORY NAME							;**NEW**
    112					;										;**NEW**
    113															;**NEW**
    114	000200	012701 			35$:	MOV	(PC)+,R1	;GET ERROR,SEVERITY				;**NEW**
SCAN	MACRO M1110  22-AUG-78 01:58  PAGE 3-2


    115	000202	   000G	   000G			.BYTE	E$R58,S$V2	;FATAL-NO RETURN				;**NEW**
    116	000204	062702 	000012 			ADD	#C.DIRD,R2	;POINT TO DIRECTORY NAME			;**NEW**
    117	000210	000404 				BR	50$		;						;**NEW**
    118															;**NEW**
    119					;										;**NEW**
    120					; ILLEGAL DEVICE SPECIFICATION							;**NEW**
    121					;										;**NEW**
    122															;**NEW**
    123	000212	012701 			40$:	MOV	(PC)+,R1	;GET ERROR,SEVERITY				;**NEW**
    124	000214	   000G	   000G			.BYTE	E$R56,S$V2	;FATAL-NO RETURN				;**NEW**
    125	000216	062702 	000006 			ADD	#C.DEVD,R2	;POINT TO DEVICE NAME DESCRIPTOR		;**NEW**
    126	000222				50$:	CALL	$ERMSG		;OUTPUT ERROR MESSAGE				;**NEW**
    127	000226	000261 			60$:	SEC			;SET CARRY					;**NEW**
    128	000230	006046 			70$:	ROR	-(SP)		;SAVE CARRY BIT					;**NEW**
    129	000232	005000 				CLR	R0		;ASSUME MORE FILES ARE SPECIFIED		;**NEW**
    130	000234	132704 	000020 			BITB	#CS.MOR,R4	;MORE FILES?					;**NEW**
    131	000240	001001 				BNE	80$		;IF NE YES					;**NEW**
    132	000242	005200 				INC	R0		;SET NO FILES					;**NEW**
    133	000244	006126 			80$:	ROL	(SP)+		;RESTORE CARRY					;**NEW**
    134	000246					RETURN			;						;**NEW**
    135															;**-63
    136					;+
    137					; **-$SYNTX-COMMAND STRING SYNTAX ANALYSIS
    138					;
    139					; THIS ROUTINE IS CALLED TO ANALYZE A COMMAND STRING FOR CORRECT SYN-
    140					; TAX AND TO SET UP THE COMMAND BUFFER FOR THE ABOVE SCAN ROUTINES.
    141					;
    142					; INPUTS:
    143					;
    144					;	R0=ADDRESS OF BYTE COUNT,REC ADDR DOUBLEWORD.				;**NEW**
    145					;	R1=ADDRESS OF TEMP BUFFER AREA						;**-1
    146					;
    147					; OUTPUTS:
    148					;
    149					;	C=1 IF SYNTAX ERROR.
    150					;	C=0 IF NO SYNTAX ERROR.
    151					;-
    152
    153	000250	012061 	000002 		$SYNTX::MOV	(R0)+,C.CMLD(R1);SET LENGTH OF LINE				;**NEW**
    154	000254	011061 	000004 			MOV	(R0),C.CMLD+2(R1);SET ADDRESS OF LINE				;**NEW**
    155	000260					CSI$1	R1		;ANALYZE SYNTAX					;**NEW**
    156	000266	103010 				BCC	10$		;IF CS RETURN					;**NEW**
    157	000270	010102 				MOV	R1,R2		;COPY ADDRESS OF CSI BLOCK			;**NEW**
    158	000272	062702 	000002 			ADD	#C.CMLD,R2	;POINT TO LINE SEGMENT DESCRIPTOR		;**NEW**
    159	000276	012701 				MOV	(PC)+,R1	;SYNTAX ERROR					;**NEW**
    160	000300	   000G	   000G			.BYTE	E$R1,S$V1	;DIAGNOSTIC					;**NEW**
    161	000302					CALL	$ERMSG		;OUTPUT ERROR MESSAGE				;**NEW**
    162	000306	000261 				SEC			;SET CARRY					;**NEW**
    163	000310				10$:	RETURN			;						;**NEW**
    164															;**-20
    165		000001 				.END
SCAN	MACRO M1110  22-AUG-78 01:58  PAGE 3-3
SYMBOL TABLE

B.BBFS= 000010   	FA.POS= 010000   	FO.APD= 000106   	F.MBCT= 000054   	N.FTYP= 000014
B.BFST= 000015   	FA.RD = 000001   	FO.MFY= 000002   	F.MBC1= 000055   	N.FVER= 000016
B.NXBD= 000012   	FA.RWD= 004000   	FO.RD = 000001   	F.MBFG= 000056   	N.NEXT= 000022
B.VBN = 000004   	FA.SEQ= 040000   	FO.UPD= 000006   	F.NRBD= 000024   	N.STAT= 000020
CH.AND= 000001   	FA.SHR= 000040   	FO.WRT= 000016   	F.NREC= 000030   	N.UNIT= 000034
CR    = 000015   	FA.TMP= 000020   	F$DEVL= ****** GX	F.OVBS= 000030   	PAR$$$= 000001
CS.DIF= 000002   	FA.WCK= 020000   	F$DIRL= ****** GX	F.RACC= 000016   	R$SWBK= ****** GX
CS.DVF= 000004   	FA.WRT= 000002   	F$FILL= ****** GX	F.RATT= 000001   	R$$11M= 000000
CS.EQU= 000040   	FD.BLK= 000010   	F.ACTL= 000076   	F.RCNM= 000034   	R.FIX = 000001
CS.INP= 000001   	FD.CCL= 000002   	F.ALOC= 000040   	F.RCTL= 000017   	R.SEQ = 000003
CS.MOR= 000020   	FD.COM= 020000   	F.BBFS= 000062   	F.RSIZ= 000002   	R.VAR = 000002
CS.NMF= 000001   	FD.CR = 000002   	F.BDB = 000070   	F.RTYP= 000000   	SCANO   000016R
CS.OUT= 000002   	FD.DIR= 000010   	F.BGBC= 000057   	F.SEQN= 000100   	SPA   = 000040
CS.WLD= 000010   	FD.FTN= 000001   	F.BKDN= 000026   	F.SPDV= 000072   	S$V1  = ****** GX
C.CMLD= 000002   	FD.F11= 040000   	F.BKDS= 000020   	F.SPUN= 000074   	S$V2  = ****** GX
C.DEVD= 000006   	FD.INS= 000010   	F.BKEF= 000050   	F.STBK= 000036   	S.BFHD= 000020
C.DIRD= 000012   	FD.ISP= 002000   	F.BKP1= 000051   	F.UNIT= 000136   	S.FATT= 000016
C.DSDS= 000006   	FD.MNT= 100000   	F.BKST= 000024   	F.URBD= 000020   	S.FDB = 000140
C.FILD= 000016   	FD.OSP= 004000   	F.BKVB= 000064   	F.VBN = 000064   	S.FNAM= 000006
C.MKW1= 000024   	FD.PLC= 000004   	F.CHR = 000075   	F.VBSZ= 000060   	S.FNB = 000036
C.MKW2= 000026   	FD.PRN= 000004   	F.CNTG= 000034   	HT    = 000011   	S.FNBW= 000017
C.SIZE= 000054   	FD.PSE= 010000   	F.DFNB= 000046   	LF    = 000012   	S.FNTY= 000004
C.STAT= 000001   	FD.RAH= 000001   	F.DSPT= 000044   	NB.DEV= 000200   	S.FTYP= 000002
C.SWAD= 000022   	FD.RAN= 000002   	F.DVNM= 000134   	NB.DIR= 000100   	S.NFEN= 000020
C.TYPR= 000000   	FD.REC= 000001   	F.EFBK= 000010   	NB.NAM= 000004   	T$MSIZ= 000054 G
E$R1  = ****** GX	FD.RWM= 000001   	F.EFN = 000050   	NB.SD1= 000400   	VT    = 000013
E$R3  = ****** GX	FD.SDI= 000020   	F.EOBB= 000032   	NB.SD2= 001000   	$ERMSG= ****** GX
E$R55 = ****** GX	FD.SQD= 000040   	F.ERR = 000052   	NB.SNM= 000040   	$SAVRG= ****** GX
E$R56 = ****** GX	FD.TTY= 000004   	F.FACC= 000043   	NB.STP= 000020   	$SCANI  000000RG
E$R58 = ****** GX	FD.WBH= 000002   	F.FFBY= 000014   	NB.SVR= 000010   	$SCANO  000010RG
FA.APD= 000100   	FF    = 000014   	F.FNAM= 000110   	NB.TYP= 000002   	$SYNTX  000250RG
FA.CRE= 000010   	FF.CHR= 000005   	F.FNB = 000102   	NB.VER= 000001   	$$    = 000001
FA.DLK= 001000   	FF.NV = 000003   	F.FTYP= 000116   	N.DID = 000024   	.CSI1 = ****** G
FA.ENB= 100000   	FF.POE= 000002   	F.FVER= 000120   	N.DVNM= 000032   	.CSI2 = ****** G
FA.EXC= 002000   	FF.RWD= 000001   	F.HIBK= 000004   	N.FID = 000000   	...GBL= 000000
FA.EXT= 000004   	FF.RWF= 000006   	F.LUN = 000042   	N.FNAM= 000006   	...TPC= 000140
FA.NSP= 000100   	FF.SPC= 000004

. ABS.	000000	   000
      	000312	   001
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  2369 WORDS  ( 10 PAGES)
DYNAMIC MEMORY:  3828 WORDS  ( 14 PAGES)
ELAPSED TIME:  00:00:14
OBJ$:SCAN,LIS$:SCAN/-SP=SRC$:MACFLM,FCSPR,SCAN
