P5MEL	MACRO M1110  22-AUG-78 01:56  PAGE 2


      1						.TITLE	P5MEL
      2						.IDENT	/03/
      3					                                                                                ;**-1
      4
      5					;
      6					; COPYRIGHT (C) 1976
      7					; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
      8					;
      9					; THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ONLY ON A
     10					; SINGLE COMPUTER SYSTEM AND MAY  BE  COPIED   ONLY  WITH  THE
     11					; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE,  OR
     12					; ANY OTHER COPIES THEREOF, MAY NOT BE PROVIDED  OR  OTHERWISE
     13					; MADE AVAILABLE TO ANY OTHER PERSON   EXCEPT FOR  USE ON SUCH
     14					; SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE  TERMS.  TITLE
     15					; TO AND OWNERSHIP OF THE SOFTWARE SHALL AT ALL  TIMES  REMAIN
     16					; IN DEC.
     17					;
     18					; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
     19					; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
     20					; EQUIPMENT CORPORATION.
     21					;
     22					; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
     23					; ITS SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
     24					;
     25					;
     26					; VERSION 03
     27					;                                                                               ;**-1
     28					; D. N. CUTLER/C. MONIA 27-JAN-74/ J.A. KASSON 20-APR-76
     29					;
     30					; OUTPUT THE TASK BUILDER MAP FOR EACH ELEMENT
     31					;
     32					; MODIFICATIONS:
     33					;
     34					; NO.		DATE		PROGRAMMER
     35					; ---		----		----------
     36					;
     37					; 039		31-MAR-75	C. MONIA
     38					;
     39					;
     40					; LOCAL DATA
     41
     42	000000				SYMPT:	.BLKW	1		;SYMBOL BUFFER POINTER
     43	000002				T1:	.BLKW	1		;TEMP STORAGE
     44					;
     45					; LOCAL SYMBOL STORAGE
     46					;
     47
     48	000004				LCLSYM:	.BLKW	6		;
     49
     50					;
     51					; MODULE FUNCTION DETAILS:
     52					;
     53					;+
     54					; **-$P5MEL-OUTPUT THE TASK BUILDER MAP FOR EACH ELEMENT IN THE SEGMENT
     55					;
     56					; INPUTS:
     57					;
P5MEL	MACRO M1110  22-AUG-78 01:56  PAGE 2-1


     58					;	PHASE THREE TABLES
     59					;
     60					; OUTPUTS:
     61					;
     62					;	A MAP OF EACH ELEMENT IS PRODUCED
     63					;
     64					;-
     65					;
     66
     67	000020				$P5MEL::			;
     68	000020					SAVRG			; SAVE NON-VOLATILE REGISTERS
     69	000024	016704 	000000G			MOV	$CRELM,R4	; GET ADDRESS OF CURRENT ELEMENT
     70	000030	032764 	000000G	000000G		BIT	#SW$MA,E$LSWT(R4) ; ELEMENT INCLUDED IN MAP?
     71	000036	001402 				BEQ	5$		; IF EQ YES
     72	000040	000167 	000430 			JMP	MODN1		; ELSE TERMINATE ELEMENT PROCESSING
     73	000044				5$:				;
     74	000044	016700 	000000G			MOV	$CRVSG,R0	; GET VIRTUAL ADDRESS OF CURRENT SEGMENT
     75	000050					CALL	$ADRSM		; SET ADDRESS LIMITS
     76	000054					CALL	P5ELT		; OUTPUT ELEMENT NAME
     77	000060				10$:				;
     78	000060					CALL	$GTBYT		; GET RECORD LENGTH
     79	000064	103410 				BCS	20$		; IF C/S-EOF(ILLEGAL FORMAT)
     80	000066	010003 				MOV	R0,R3		; SAVE RECORD LENGTH
     81	000070					CALL	$GTWRD		; GET BLOCK TYPE
     82	000074	162703 	000002 			SUB	#2,R3		; ADJUST BYTE COUNT
     83	000100	020027 	000006 			CMP	R0,#LGBLK	; LEGAL BLOCK TYPE
     84	000104	101401 				BLOS	30$		; IF LOS YES
     85	000106				20$:				;
     86	000106	005000 				CLR	R0		; FORCE ILLEGAL FORMAT
     87	000110				30$:				;
     88	000110	006300 				ASL	R0		; MAKE WORD INDEX
     89	000112					CALL	@DSPVCT(R0)	; CALL BLOCK DEPENDANT ROUTINE
     90	000116	000760 				BR	10$		; GO AGAIN
     91
     92					;
     93					; DISPATCH VECTOR TABLE
     94					;
     95
     96	000120				DSPVCT:				;
     97	000120	000446'				.WORD	ILFMT		; BLOCK 0-ILLEGAL BLOCK TYPE
     98	000122	000136'				.WORD	STGSD		; BLOCK 1-START GSD
     99	000124	000444'				.WORD	ENGSD		; BLOCK 2-END GSD
    100	000126	000560'				.WORD	RPEAT		; BLOCK 3-TXT
    101	000130	000560'				.WORD	RPEAT		; BLOCK 4-RLD
    102	000132	000560'				.WORD	RPEAT		; BLOCK 5-ISD
    103	000134	000466'				.WORD	MODND		; BLOCK 6-MODULE END
    104		000006 			LGBLK=<.-DSPVCT-2>/2
    105
    106					;
    107					; START GSD -BLOCK TYPE 1
    108					;
    109
    110	000136				STGSD:				;
    111	000136	012704 	000006'			MOV	#LCLSYM+2,R4	; GET ADDRESS TO STORE SYMBOL
    112	000142	012705 	000004 			MOV	#4,R5		; SET REPEAT COUNT
    113	000146				10$:				;
    114	000146					CALL	$GTWRD		; GET A WORD
P5MEL	MACRO M1110  22-AUG-78 01:56  PAGE 2-2


    115	000152	010024 				MOV	R0,(R4)+	; SAVE IN TEMP BUFFER
    116	000154					SOB	R5,10$		; REPEAT
    117	000160	162703 	000010 			SUB	#8.,R3		; ADJUST FOR SYMBOL ENTRY
    118	000164	012701 	000004'			MOV	#LCLSYM,R1	; GET ADDRESS OF SYMBOL DESCRIPTOR
    119	000170	116102 	000000G			MOVB	S$CNT(R1),R2	; GET TYPE OF GSD ENTRY
    120	000174	020227 	000007 			CMP	R2,#LGTYP	; LEGAL TYPE ?
    121	000200	101122 				BHI	ILFMT		; IF HI ILLEGAL FORMAT
    122	000202	006302 				ASL	R2		; MAKE WORD INDEX
    123	000204	016700 	000000G			MOV	$CRSEG,R0	; GET ADDRESS OF CURRENT SEGMENT
    124	000210					CALL	@GSDVCT(R2)	; DISPATCH TO ROUTINE
    125	000214	005703 				TST	R3		; ANY MORE TO PROCESS
    126	000216	003347 				BGT	STGSD		; IF GT GO AGAIN
    127	000220					RETURN			;
    128
    129					;
    130					; GSD ENTRY TYPE DISPATCH TABLE
    131					;
    132
    133	000222				GSDVCT:				;
    134	000222	000242'				.WORD	MODNME		; MODULE NAME
    135	000224	000244'				.WORD	SCTNME		; SECTION NAME
    136	000226	000266'				.WORD	INTSYM		; INTERNAL SYMBOL
    137	000230	000270'				.WORD	XFRADR		; TRANSFER ADDRESS
    138	000232	000272'				.WORD	SYMDCL		; SYMBOL DECLARATION
    139	000234	000244'				.WORD	SCTNME		; PROGRAM SECTION NAME
    140	000236	000442'				.WORD	VIDENT		; VERSION IDENTIFICATION
    141	000240	000244'				.WORD	SCTNME		;VIRTUAL ARRAY STORAGE SECTION
    142		000007 			LGTYP=<.-GSDVCT-2>/2
    143
    144					;
    145					; MODULE NAME
    146					;
    147
    148	000242				MODNME:				;
    149	000242					RETURN			;
    150
    151					;
    152					; SECTION AND PROGRAM SECTION NAME
    153					;
    154
    155	000244				SCTNME:				;
    156	000244	062700 	000000G			ADD	#S$GCST,R0	; POINT TO SECTION NAME
    157	000250					CALL	$SRCH		; SEARCH FOR SYMBOL
    158	000254	103474 				BCS	ILFMT		; IF C/S ILLEGAL FORMAT
    159	000256	012701 	000004'			MOV	#LCLSYM,R1	; GET ADDRESS OF LOCAL SYMBOL
    160	000262					CALLR	$MPSCT		; OUTPUT SECTION NAME
    161
    162					;
    163					; INTERNAL SYMBOL
    164					;
    165
    166	000266				INTSYM:				;
    167	000266					RETURN			;
    168
    169					;
    170					; TRANSFER ADDRESS
    171					;
P5MEL	MACRO M1110  22-AUG-78 01:56  PAGE 2-3


    172
    173	000270				XFRADR:				;
    174	000270					RETURN			;
    175
    176					;
    177					; SYMBOL DECLARATION
    178					;
    179
    180	000272				SYMDCL:				;
    181	000272	132761 	000000G	000000G		BITB	#SY$DEF,S$YFLG(R1) ; SYMBOL DEFINITION?
    182	000300	001414 				BEQ	20$		; IF EQ NO
    183	000302	062700 	000000G			ADD	#S$GSTB,R0	; POINT TO SYMBOL TABLE
    184	000306					CALL	$SRCH		; SEARCH FOR SYMBOL NAME
    185	000312	103440 				BCS	70$		; IF C/S CHECK IF SELECTIVE MODULE
    186	000314	132760 	000000G	000000G		BITB	#SY$DEF,S$YFLG(R0) ; DEFINITION?                                ;**-2
    187	000322	001434 				BEQ	70$		;++039 IF EQ NO, CHECK IF SELECTIVE MODULE
    188	000324					CALL	P5SYM		; OUTPUT SYMBOL NAME
    189	000330	000430 				BR	60$		;
    190	000332				20$:				;
    191	000332	132761 	000000G	000000G		BITB	#SY$WK,S$YFLG(R1);WEAK REFERENCE
    192	000340	001024 				BNE	60$		; IF NE WEAK
    193
    194	000342	012746 	000000G			MOV	#$WSRCS,-(SP)	; SET ADDRESS OF SEARCH ROUTINE
    195	000346				30$:				;
    196	000346					CALL	@(SP)+		; SEARCH FOR SYMBOL
    197	000350	103414 				BCS	50$		; IF C/S NOT THERE
    198	000352	003404 				BLE	35$		;IF LE FOUND ON PATH DOWN
    199	000354	026767 	000000G	000000G		CMP	$CRVSR,$RTSEG	;FOUND IN MAIN ROOT
    200	000362	001006 				BNE	40$		;IF NE, UNDEFINED REFERENCE
    201	000364				35$:
    202	000364	132760 	000000G	000000G		BITB	#SY$DEF,S$YFLG(R0) ; DEFINITION ?
    203	000372	001765 				BEQ	30$		; IF EQ-NO CONTINUE SEARCH
    204	000374	005726 				TST	(SP)+		; CLEAN STACK
    205	000376	000405 				BR	60$		; EXIT
    206	000400				40$:				;
    207	000400	005726 				TST	(SP)+		; CLEAN STACK
    208	000402				50$:				;
    209	000402	012700 	000004'			MOV	#LCLSYM,R0	; GET ADDRESS OF LOCAL SYMBOL DESCRIPTOR
    210	000406					CALL	P5USY		; OUTPUT UNDEFINED SYMBOL REFERENCE
    211	000412				60$:				;
    212	000412					RETURN			;
    213	000414				70$:				;
    214	000414	132767 	000000G	000000C		BITB	#SY$WK,LCLSYM+S$YFLG;WEAK DEFINITION?
    215	000422	001006 				BNE	80$		;IF NE YES- IGNORE
    216	000424	016701 	000000G			MOV	$CRELM,R1	; GET ADDRESS OF ELEMENT DESCRIPTOR
    217	000430	032761 	000000G	000000G		BIT	#SW$SS,E$LSWT(R1) ; SELECTIVE EXTRACTION MODULE ?
    218	000436	001403 				BEQ	ILFMT		; IF EQ ILLEGAL FORMAT
    219	000440				80$:
    220	000440					RETURN			;
    221
    222					;
    223					; VERSION IDENTIFIER
    224					;
    225
    226	000442				VIDENT:				;
    227	000442					RETURN			;
    228
P5MEL	MACRO M1110  22-AUG-78 01:56  PAGE 2-4


    229					;
    230					; END GSD
    231					;
    232
    233	000444				ENGSD:				;
    234	000444	000445 				BR	RPEAT		;
    235					;
    236					; ILLEGAL FORMAT-BLOCK TYPES 0 - 6
    237					;
    238
    239	000446				ILFMT:				;
    240	000446	016702 	000000G			MOV	$INPPT,R2	; GET INPUT FILE RECORD BLOCK
    241	000452	016202 	000000G			MOV	R$NAME(R2),R2	; GET ADDRESS OF NAME STRING
    242	000456	012701 				MOV	(PC)+,R1	; DIAGNOSTIC
    243	000460	   000G	   000G			.BYTE	E$R14,S$V2	; FATAL-NO RETURN
    244	000462					CALL	$ERMSG		; OUTPUT ERROR MESSAGE
    245
    246					;
    247					; BLOCK TYPE 6 - MODULE END
    248					;
    249
    250	000466				MODND:				;
    251	000466	005726 				TST	(SP)+		; REMOVE RETURN
    252	000470	016704 	000000G			MOV	$CRELM,R4	; GET ELEMENT DESCRIPTOR ADDRESS
    253	000474				MODN1:				;
    254	000474	016403 	000000G			MOV	E$LCMT(R4),R3	; GET CMT TABLE ADDRESS
    255	000500	001426 				BEQ	30$		; IF EQ NONE
    256	000502	016446 	000000G			MOV	E$LNUM(R4),-(SP) ; GET HIGHEST SECTION NUMBER
    257	000506	005216 				INC	(SP)		; CONVERT TO LOOP COUNT
    258	000510				10$:				;
    259	000510	012301 				MOV	(R3)+,R1	; GET ADDRESS OF ENTRY
    260	000512					CALL	$CVRL		; CONVERT TO REAL
    261	000516					CALL	$WRMPG		; WRITE-MARK PAGE
    262	000522	012301 				MOV	(R3)+,R1	; GET MAX LENGTH OF ENTRY
    263	000524	132760 	000000C	000000G		BITB	#<CS$LIB!CS$ALO>,C$SFLG(R0) ; LIB. OR OVR SECTION?
    264	000532	001006 				BNE	20$		; IF NE YES, DON'T UPDATE LENGTH
    265	000534	132760 	000000G	000000G		BITB	#CS$REL,C$SFLG(R0) ; ABS SECTION
    266	000542	001402 				BEQ	20$		; IF EQ YES
    267	000544	060160 	000000G			ADD	R1,C$SCUR(R0)	; UPDATE CURRENT OFFSET ADDRESS
    268	000550				20$:				;
    269	000550	005316 				DEC	(SP)		; DECREMENT COUNT
    270	000552	003356 				BGT	10$		; IF GT GO AGAIN
    271	000554	005726 				TST	(SP)+		; CLEAN STACK
    272	000556				30$:				;
    273	000556					RETURN			;
    274
    275					;
    276					; IGNORE REMAINDER OF RECORD
    277					;
    278
    279	000560				RPEAT:				;
    280	000560	005067 	000000G			CLR	$NBYTE		; FORCE READ OF NEXT RECORD
    281	000564					RETURN			;
    282
    283	000000					.PSECT	MTX3,D,GBL
    284
    285					;
P5MEL	MACRO M1110  22-AUG-78 01:56  PAGE 2-5


    286	000000	   045 	   062 	   116 	FMT8:	.ASCIZ	/%2NFILE: %X  TITLE: %2R  IDENT: %2R%N/;
	000003	   106 	   111 	   114
	000006	   105 	   072 	   040
	000011	   045 	   130 	   040
	000014	   040 	   124 	   111
	000017	   124 	   114 	   105
	000022	   072 	   040 	   045
	000025	   062 	   122 	   040
	000030	   040 	   111 	   104
	000033	   105 	   116 	   124
	000036	   072 	   040 	   045
	000041	   062 	   122 	   045
	000044	   116 	   000
    287	000046	   040 	   040 	   040 	FMT9:	.ASCIZ	/    <%2R>: %P %P %P %U.%N/;
	000051	   040 	   074 	   045
	000054	   062 	   122 	   076
	000057	   072 	   040 	   045
	000062	   120 	   040 	   045
	000065	   120 	   040 	   045
	000070	   120 	   040 	   045
	000073	   125 	   056 	   045
	000076	   116 	   000
    288	000100	   040 	   076 	   076 	FMT35:	.ASCIZ	/ >>>>>>>>>>>> UNDEFINED REFERENCE: %2R%2N/
	000103	   076 	   076 	   076
	000106	   076 	   076 	   076
	000111	   076 	   076 	   076
	000114	   076 	   040 	   125
	000117	   116 	   104 	   105
	000122	   106 	   111 	   116
	000125	   105 	   104 	   040
	000130	   122 	   105 	   106
	000133	   105 	   122 	   105
	000136	   116 	   103 	   105
	000141	   072 	   040 	   045
	000144	   062 	   122 	   045
	000147	   062 	   116 	   000
    289	000152	   045 	   067 	   123 	FMT56:	.ASCIZ	/%7S/
	000155	   000
    290
    291						.EVEN
    292
    293	000566					.PSECT
    294
    295					;+
    296					; **-P5ELT-MAP ELEMENT
    297					;
    298					; THIS ROUTINE IS CALLED TO WRITE AN ELEMENT NAME INTO THE LOAD
    299					; MAP FILE.
    300					;
    301					; INPUTS:
    302					;
    303					;	$CRELM=ADDRESS OF CURRENT ELEMENT DESCRIPTOR.
    304					;
    305					; OUTPUTS:
    306					;
    307					;	ELEMENT NAME IS WRITTEN INTO THE LOAD MAP FILE.
    308					;-
P5MEL	MACRO M1110  22-AUG-78 01:56  PAGE 2-6


    309
    310	000566				P5ELT:
    311	000566					CALL	$MPFSH		;FLUSH SYMBOL BUFFER
    312	000572	016701 	000000G			MOV	$INPPT,R1	;GET INPUT FILE RECORD BLOCK
    313	000576					CALL	$MPFLE		;SET UP FILE NAME
    314	000602	016701 	000000G			MOV	$CRELM,R1	;GET ADDRESS OF ELEMENT DESCRIPTOR
    315	000606	016122 	000000G			MOV	E$LMOD(R1),(R2)+;INSERT MODULE NAME
    316	000612	016122 	000002G			MOV	E$LMOD+2(R1),(R2)+;
    317	000616	016122 	000000G			MOV	E$LIDT(R1),(R2)+;INSERT VERSION IDENTIFICATION
    318	000622	016122 	000002G			MOV	E$LIDT+2(R1),(R2)+;
    319	000626	012701 	000000'			MOV	#FMT8,R1	;GET ADDRESS OF FORMAT
    320	000632					CALL	$MPOUT		;
    321	000636					RETURN
    322
    323					;+
    324					; **-$MPSCT-MAP SECTION
    325					;
    326					; THIS ROUTINE IS CALLED TO WRITE A SECTION NAME INTO THE LOAD
    327					; MAP FILE.
    328					;
    329					; INPUTS:
    330					;
    331					;	R0=ADDRESS OF SECTION TABLE ENTRY.
    332					;	R1=ADDRESS OF GSD ENTRY.
    333					;
    334					; OUTPUTS:
    335					;
    336					;	SECTION NAME IS WRITTEN INTO THE LOAD MAP FILE.
    337					;
    338					;	**NOTE**
    339					;
    340					; PAGE BUFFER CONTAINING SYMBOL MAY BE DISPLACED
    341					;
    342					;-
    343
    344	000640				$MPSCT:
    345	000640	010146 				MOV	R1,-(SP)	; SAVE ADDRESS OF GSD ENTRY
    346	000642	010046 				MOV	R0,-(SP)	; SAVE SECTION ENTRY ADDRESS
    347	000644					CALL	$MPFSH		; FLUSH SMBOL BUFFER
    348	000650	016767 	000000G	177124 		MOV	$NCLNM,T1	;REINITIALIZE COLUNM COUNT
    349	000656	011600 				MOV	(SP),R0		; RETRIEVE ENTRY ADDRESS
    350	000660	010216 				MOV	R2,(SP)		; SAVE BUFFER ADDRESS
    351	000662	132760 	000000G	000000G		BITB	#CS$IND,C$SFLG(R0);INDIRECT ENTRY?
    352	000670	001404 				BEQ	10$		;IF EQ NO
    353	000672	016001 	000000G			MOV	C$SBSE(R0),R1	; GET VIRTUAL ADDRESS OF REAL ENTRY
    354	000676					CALL	$CVRL		; CONVERT TO READ ADDRESS
    355	000702				10$:				;
    356	000702	012602 				MOV	(SP)+,R2	; RETRIEVE ADDRESS OF BUFFER
    357	000704	012601 				MOV	(SP)+,R1	; RETRIEVE ADDRESS OF GSD ENTRY
    358	000706					CALL	$MPCHK		; CHECK SECTION NAME
    359	000712	016012 	000000G			MOV	C$SCUR(R0),(R2)	;GET CURRENT SECTION BASE
    360	000716	012222 				MOV	(R2)+,(R2)+	;COPY SECTION BASE ADDRESS
    361	000720	016112 	000000G			MOV	C$SBSE(R1),(R2)	;INSERT LENGTH OF SECTION
    362	000724					CALL	$MPCAL		;CALCULATE ENDING ADDRESS AND RELOCATE
    363	000730	012701 	000046'			MOV	#FMT9,R1	;GET ADDRESS OF FORMAT
    364	000734	026767 	000000G	000000G		CMP	$ABSNM,$SYMBF	;ABS SECTION?
    365	000742	001411 				BEQ	20$		;IF EQ YES
P5MEL	MACRO M1110  22-AUG-78 01:56  PAGE 2-7


    366	000744	026727 	000000G			CMP	$SYMBF,(PC)+	;BLANK CONTROL SECTION?
    367	000750	127402 				.RAD50	/. B/		;
    368	000752	001003 				BNE	15$		;IF NE NO
    369	000754	005767 	000010G			TST	$SYMBF+10	;ZERO LENGTH?
    370	000760	001402 				BEQ	20$		;IF EQ YES
    371	000762	000167 	000000G		15$:	JMP	$MPOUT		;OUTPUT SECTION NAME
    372	000766	105267 	000001G		20$:	INCB	$MPFLG+1	;SET ABS SECTION WAITING FLAG
    373	000772				30$:	RETURN			;
    374					;+
    375					; **-P5USY-UNDEFINED SYMBOL REFERENCE
    376					;
    377					; THIS ROUTINE IS CALLED TO OUTPUT AN UNDEFINED SYMBOL REFERENCE FOR
    378					; A MODULE.
    379					;
    380					; INPUTS:
    381					;
    382					; 	R0=ADDRESS OF SYMBOL DESCRIPTOR.
    383					;
    384					; OUTPUTS:
    385					;
    386					;	UNDEFINED SYMBOL REFERENCE IS WRITTEN INTO MAP FILE.
    387					;-
    388
    389	000774	010046 			P5USY:	MOV	R0,-(SP)	;SAVE ENTRY ADDRESS
    390	000776	012701 	000046'			MOV	#FMT9,R1	;GET ADDRESS OF FORMAT
    391	001002	105767 	000001G			TSTB	$MPFLG+1	;ABS SECTION WAITING?
    392	001006	001402 				BEQ	10$		;IF EQ NO
    393	001010					CALL	$MPOUT		;OUTPUT SECTION NAME
    394	001014				10$:	CALL	$MPFSH		;FLUSH ANY SYMBOLS IN BUFFER
    395	001020	016767 	000000G	176754 		MOV	$NCLNM,T1	;RE-INITIALIZE COLUNM COUNT
    396	001026	012600 				MOV	(SP)+,R0	;RETRIEVE ENTRY ADDRESS
    397	001030	016022 	000000G			MOV	S$YM(R0),(R2)+	;INSERT SYMBOL NAME
    398	001034	016012 	000002G			MOV	S$YM+2(R0),(R2)	;
    399	001040	012701 	000100'			MOV	#FMT35,R1	;GET ADDRESS OF FORMAT
    400	001044					CALL	$MPOUT		;OUTPUT UNDEFINED SYMBOL REFERENCE
    401	001050					RETURN			;
    402
    403					;+
    404					; **-P5SYM-MAP SYMBOL
    405					;
    406					; THIS ROUTINE IS CALLED TO WRITE A SYMBOL NAME INTO THE LOAD
    407					; MAP FILE.
    408					;
    409					; INPUTS:
    410					;
    411					;	R0=ADDRESS OF SYMBOL DESCRIPTOR.
    412					;
    413					; OUTPUTS:
    414					;
    415					;	SYMBOL IS WRITTEN INTO THE LOAD MAP FILE.
    416					;-
    417
    418	001052				P5SYM:
    419	001052	012701 	000046'			MOV	#FMT9,R1	;GET ADDRESS OF FORMAT
    420	001056	010046 				MOV	R0,-(SP)	;SAVE SYMBOL DESCRIPTOR ADDRESS
    421	001060	105767 	000001G			TSTB	$MPFLG+1	;ABS SECTION WAITING?
    422	001064	001402 				BEQ	5$		;IF EQ NO
P5MEL	MACRO M1110  22-AUG-78 01:56  PAGE 2-8


    423	001066					CALL	$MPOUT		;OUTPUT SECTION NAME
    424	001072	016702 	176702 		5$:	MOV	SYMPT,R2	;ASSUME BUFFER NOT EMPTY
    425	001076	005767 	000000G			TST	$MPFLG		;ANYTHING IN BUFFER?
    426	001102	001006 				BNE	10$		;IF EQ NO
    427	001104	012701 	000152'			MOV	#FMT56,R1
    428	001110					CALL	$MPOUT
    429	001114	012702 	000000G			MOV	#$SYMBF,R2
    430	001120	012600 			10$:	MOV	(SP)+,R0	;RETRIEVE SYMBOL DESCRIPTOR ADDRESS
    431	001122					CALL	$MPSYM
    432	001126	005267 	000000G		20$:	INC	$MPFLG		;UPDATE MAP BUFFER FLAG
    433	001132	010267 	176642 			MOV	R2,SYMPT	;SET NEW BUFFER POINTER
    434	001136	005367 	176640 			DEC	T1		;END OF BUFFER?
    435	001142	001005 				BNE	30$		;IF NE NO
    436	001144					CALL	$MPFSH		;YES-FLUSH SYMBOL BUFFER
    437	001150	016767 	000000G	176624 		MOV	$NCLNM,T1	;RESTORE COLUNM COUNT
    438	001156				30$:	RETURN			;
    439
    440		000001 				.END
P5MEL	MACRO M1110  22-AUG-78 01:56  PAGE 2-9
SYMBOL TABLE

CR    = 000015   	FMT56   000152R     002	RPEAT   000560R  	S$YM  = ****** GX	$MPCHK= ****** GX
CS$ALO= ****** GX	FMT8    000000R     002	R$NAME= ****** GX	T1      000002R  	$MPFLE= ****** GX
CS$IND= ****** GX	FMT9    000046R     002	R$$11M= 000000   	VIDENT  000442R  	$MPFLG= ****** GX
CS$LIB= ****** GX	GSDVCT  000222R  	SCTNME  000244R  	VT    = 000013   	$MPFSH= ****** GX
CS$REL= ****** GX	HT    = 000011   	SPA   = 000040   	XFRADR  000270R  	$MPOUT= ****** GX
C$SBSE= ****** GX	ILFMT   000446R  	STGSD   000136R  	$ABSNM= ****** GX	$MPSCT  000640R
C$SCUR= ****** GX	INTSYM  000266R  	SW$MA = ****** GX	$ADRSM= ****** GX	$MPSYM= ****** GX
C$SFLG= ****** GX	LCLSYM  000004R  	SW$SS = ****** GX	$CRELM= ****** GX	$NBYTE= ****** GX
DSPVCT  000120R  	LF    = 000012   	SYMDCL  000272R  	$CRSEG= ****** GX	$NCLNM= ****** GX
ENGSD   000444R  	LGBLK = 000006   	SYMPT   000000R  	$CRVSG= ****** GX	$P5MEL  000020RG
E$LCMT= ****** GX	LGTYP = 000007   	SY$DEF= ****** GX	$CRVSR= ****** GX	$RTSEG= ****** GX
E$LIDT= ****** GX	MODND   000466R  	SY$WK = ****** GX	$CVRL = ****** GX	$SAVRG= ****** GX
E$LMOD= ****** GX	MODNME  000242R  	S$CNT = ****** GX	$ERMSG= ****** GX	$SRCH = ****** GX
E$LNUM= ****** GX	MODN1   000474R  	S$GCST= ****** GX	$GTBYT= ****** GX	$SYMBF= ****** GX
E$LSWT= ****** GX	P5ELT   000566R  	S$GSTB= ****** GX	$GTWRD= ****** GX	$WRMPG= ****** GX
E$R14 = ****** GX	P5SYM   001052R  	S$V2  = ****** GX	$INPPT= ****** GX	$WSRCS= ****** GX
FF    = 000014   	P5USY   000774R  	S$YFLG= ****** GX	$MPCAL= ****** GX	$$    = 000001
FMT35   000100R     002

. ABS.	000000	   000
      	001160	   001
MTX3  	000156	   002
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  1229 WORDS  ( 5 PAGES)
DYNAMIC MEMORY:  2772 WORDS  ( 10 PAGES)
ELAPSED TIME:  00:00:13
OBJ$:P5MEL,LIS$:P5MEL/-SP=SRC$:MACFLM,P5MEL
