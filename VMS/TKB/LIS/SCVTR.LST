SCVTR	MACRO M1110  22-AUG-78 01:58  PAGE 2


      1						.TITLE	SCVTR
      2						.IDENT	/03/								;**NEW**
      3															;**-1
      4					;
      5					; COPYRIGHT   1974,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
      6					;
      7					; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
      8					; ON A  SINGLE COMPUTER SYSTEM AND CAN BE  COPIED (WITH INCLUSION
      9					; OF DEC'S COPYRIGHT  NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
     10					; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
     11					;
     12					; THE  INFORMATION  IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
     13					; NOTICE  AND  SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
     14					; EQUIPMENT CORPORATION.
     15					;
     16					; DEC  ASSUMES NO  RESPONSIBILITY  FOR  THE  USE  OR  RELIABILITY
     17					; OF  ITS  SOFTWARE ON  EQUIPMENT WHICH  IS  NOT SUPPLIED BY DEC.
     18					;
     19					; VERSION 03									;**NEW**
     20					;										;**-1
     21					; D.N. CUTLER 23-NOV-72
     22					;
     23					; SCAN CONVERSION ROUTINES
     24					;+										;**NEW**
     25					; **-$AS-ASCII CONVERSION							;**NEW**
     26					;										;**NEW**
     27					; INPUTS:									;**NEW**
     28					;										;**NEW**
     29					;	R0=ADDRESS OF NEXT BYTE IN INPUT BUFFER.				;**NEW**
     30					;	R5=ADDRESS TO STORE CONVERTED VALUE.					;**NEW**
     31					;										;**NEW**
     32					; OUTPUTS:									;**NEW**
     33					;										;**NEW**
     34					;	UP TO 2 ASCII CHARACTERS ARE MOVED TO THE SPECIFIED ADDRESS		;**NEW**
     35					;	BLANK FILLED.								;**NEW**
     36					;		R0=ADDRESS OF NEXT BYTE IN INPUT BUFFER.			;**NEW**
     37					;		R2=TERMINAL CHARACTER.						;**NEW**
     38					;		R5=ADDRESS TO STORE NEXT CONVERTED VALUE.			;**NEW**
     39					;-										;**NEW**
     40															;**NEW**
     41	000000	012725 	020040 		$AS::	MOV	#"  ,(R5)+	;BLANK FILL OUTPUT WORD				;**NEW**
     42	000004	012701 	000101 			MOV	#'A,R1		;SET LOW LIMIT					;**NEW**
     43	000010	012746 	000132 			MOV	#'Z,-(SP)	;SET HIGH LIMIT					;**NEW**
     44	000014	112002 				MOVB	(R0)+,R2	;GET NEXT BYTE					;**NEW**
     45	000016	020201 				CMP	R2,R1		;WITHIN RANGE?					;**NEW**
     46	000020	103414 				BLO	10$		;IF LO NO					;**NEW**
     47	000022	020216 				CMP	R2,(SP)		;WITHIN RANGE?					;**NEW**
     48	000024	101012 				BHI	10$		;IF HI NO					;**NEW**
     49	000026	110265 	177776 			MOVB	R2,-2(R5)	;STORE FIRST CHARACTER				;**NEW**
     50	000032	112002 				MOVB	(R0)+,R2	;GET NEXT CHARACTER				;**NEW**
     51	000034	020201 				CMP	R2,R1		;WITHIN RANGE?					;**NEW**
     52	000036	103405 				BLO	10$		;IF LO NO					;**NEW**
     53	000040	020216 				CMP	R2,(SP)		;WITHIN RANGE?					;**NEW**
     54	000042	101003 				BHI	10$		;IF HI NO					;**NEW**
     55	000044	110265 	177777 			MOVB	R2,-1(R5)	;STORE SECOND BYTE				;**NEW**
     56	000050	112002 				MOVB	(R0)+,R2	;GET NEXT BYTE					;**NEW**
     57	000052	005726 			10$:	TST	(SP)+		;CLEAN STACK					;**NEW**
SCVTR	MACRO M1110  22-AUG-78 01:58  PAGE 2-1


     58	000054	000460 				BR	RR2		;SKIP TRAILING BLANKS				;**NEW**
     59															;**NEW**
     60					;+
     61					; **-$DC-SIGNED DECIMAL CONVERSION
     62					; **-$OT-SIGNED OCTAL CONVERSION
     63					;
     64					; INPUTS:
     65					;
     66					;	R0=ADDRESS OF NEXT BYTE IN INPUT BUFFER.
     67					;	R5=ADDRESS TO STORE CONVERTED VALUE.
     68					;
     69					; OUTPUTS:
     70					;
     71					;	NUMBER IS CONVERTED AND STORED IN THE SPECIFIED ADDRESS.
     72					;	TRAILING BLANKS AND HT'S ARE BYPASSED.
     73					;		R0=ADDRESS OF NEXT BYTE IN INPUT BUFFER.
     74					;		R2=TERMINAL CHARACTER.
     75					;		R5=ADDRESS TO STORE NEXT CONVERTED VALUE.
     76					;-
     77
     78	000056	012702 	000000G		$DC::	MOV	#$CDTB,R2	;SET FOR DECIMAL CONVERSION
     79	000062	000402 				BR	OT1		;
     80	000064	012702 	000000G		$OT::	MOV	#$COTB,R2	;SET FOR OCTAL CONVERSION
     81	000070	005046 			OT1:	CLR	-(SP)		;ASSUME POSITIVE NUMBER
     82	000072	122710 	000053 			CMPB	#'+,(R0)	;LEADING PLUS SIGN?
     83	000076	001404 				BEQ	10$		;IF EQ YES
     84	000100	122710 	000055 			CMPB	#'-,(R0)	;LEADING MINUS SIGN?
     85	000104	001002 				BNE	20$		;IF NE NO
     86	000106	005316 				DEC	(SP)		;CHANGE TO NEGATIVE NUMBER
     87	000110	005200 			10$:	INC	R0		;BYPASS SIGN CHARACTER
     88	000112				20$:	CALL	(R2)		;CONVERT NUMBER TO BINARY
     89	000114	005726 				TST	(SP)+		;PLUS OR MINUS?
     90	000116	001401 				BEQ	30$		;IF EQ PLUS
     91	000120	005401 				NEG	R1		;MAKE RESULT NEGATIVE
     92	000122	010125 			30$:	MOV	R1,(R5)+	;STORE PARAMETER
     93	000124	000434 				BR	RR2		;
     94
     95					;+										;**NEW**
     96					; **-$DV-DEVICE/UNIT CONVERSION							;**NEW**
     97					;										;**NEW**
     98					; INPUTS:									;**NEW**
     99					;										;**NEW**
    100					;	R0=ADDRESS OF NEXT BYTE IN INPUT BUFFER.				;**NEW**
    101					;	R5=ADDRESS TO STORE CONVERTED VALUE.					;**NEW**
    102					;										;**NEW**
    103					; OUTPUTS:									;**NEW**
    104					;										;**NEW**
    105					;	THE DEVICE NAME AND UNIT ARE CONVERTED AND STORED IN			;**NEW**
    106					;	THE SPECIFIED ADDRESSES.						;**NEW**
    107					;		R0=ADDRESS OF NEXT BYTE IN INPUT BUFFER.			;**NEW**
    108					;		R2=TERMINAL CHARACTER.						;**NEW**
    109					;		R5=ADDRESS TO STORE NEXT CONVERTED VALUE.			;**NEW**
    110					;-										;**NEW**
    111															;**NEW**
    112	000126				$DV::	CALL	$AS		;CONVERT DEVICE NAME				;**NEW**
    113	000132	005300 				DEC	R0		;BACKUP TO TERMINATOR				;**NEW**
    114	000134					CALL	$OT		;CONVERT UNIT NUMBER				;**NEW**
SCVTR	MACRO M1110  22-AUG-78 01:58  PAGE 2-2


    115	000140					RETURN			;						;**NEW**
    116															;**NEW**
    117					;+
    118					; **-$RP-RAD50 CONVERSION/PERIOD TERMINATOR
    119					; **-$RR-RAD50 CONVERSION/PERIOD RAD50 CHARACTER
    120					;
    121					; INPUTS:
    122					;
    123					;	R0=ADDRESS OF NEXT BYTE IN INPUT BUFFER.
    124					;	R5=ADDRESS TO STORE CONVERTED VALUES.
    125					;
    126					; OUTPUTS:
    127					;
    128					;	TWO RAD50 WORDS ARE CONVERTED AND STORED IN THE SPECIFIED
    129					;	ADDRESS. TRAILING BLANKS AND HT'S ARE BYPASSED.
    130					;		R0=ADDRESS OF NEXT BYTE IN INPUT BUFFER.
    131					;		R2=TERMINAL CHARACTER.
    132					;		R5=ADDRESS TO STORE NEXT CONVERTED VALUE.
    133					;-
    134
    135	000142	005001 			$RP::	CLR	R1		;SET FOR PERIOD TERMINATOR
    136	000144	000401 				BR	RR1		;
    137	000146	010601 			$RR::	MOV	SP,R1		;SET FOR PERIOD RAD50 CHARACTER
    138	000150	010146 			RR1:	MOV	R1,-(SP)	;SAVE PERIOD DISPOSITION FLAG
    139	000152	005025 				CLR	(R5)+		;CLEAR TWO WORDS
    140	000154	005025 				CLR	(R5)+		;
    141	000156					CALL	$CAT5		;CONVERT FIRST HALF
    142	000162	010165 	177774 			MOV	R1,-4(R5)	;STORE FIRST HALF OF RESULT
    143	000166	103412 				BCS	20$		;IF CS DONE
    144	000170	011601 				MOV	(SP),R1		;RETRIEVE FLAG
    145	000172					CALL	$CAT5		;CONVERT SECOND HALF
    146	000176	010165 	177776 			MOV	R1,-2(R5)	;SAVE SECOND HALF OF RESULT
    147	000202	103404 				BCS	20$		;IF CS DONE
    148	000204	011601 			10$:	MOV	(SP),R1		;RETRIEVE FLAG
    149	000206					CALL	$CAT5		;SKIP TO END OF RAD50 FIELD
    150	000212	103374 				BCC	10$		;IF CC GO AGAIN
    151	000214	005726 			20$:	TST	(SP)+		;CLEAN STACK
    152	000216	122702 	000040 		RR2:	CMPB	#' ,R2		;BLANK TERMINATOR?
    153	000222	001403 				BEQ	10$		;IF EQ YES
    154	000224	122702 	000011 			CMPB	#HT,R2		;HT TERMINATOR?
    155	000230	001002 				BNE	20$		;IF NE NO
    156	000232	112002 			10$:	MOVB	(R0)+,R2	;BYPASS BLANK OR HT
    157	000234	001370 				BNE	RR2		;IF NE GO AGAIN
    158	000236				20$:	RETURN			;
    159
    160					;+
    161					; **-$SETNB-SET NONBLANK
    162					;
    163					; INPUTS:
    164					;
    165					;	R0=ADDRESS OF NEXT BYTE IN INPUT BUFFER.
    166					;
    167					; OUTPUTS:
    168					;
    169					;	LEADING BLANKS AND HT'S ARE BYPASSED.
    170					;		R0=ADDRESS OF NEXT BYTE IN INPUT BUFFER.
    171					;-
SCVTR	MACRO M1110  22-AUG-78 01:58  PAGE 2-3


    172
    173	000240	122710 	000040 		$SETNB::CMPB	#' ,(R0)	;BLANK?
    174	000244	001403 				BEQ	10$		;IF EQ YES
    175	000246	122710 	000011 			CMPB	#HT,(R0)	;HT?
    176	000252	001002 				BNE	20$		;IF NE NO
    177	000254	005200 			10$:	INC	R0		;INCREMENT TO NEXT BYTE
    178	000256	000770 				BR	$SETNB		;GO AGAIN
    179	000260				20$:	RETURN			;
    180
    181		000001 				.END
SCVTR	MACRO M1110  22-AUG-78 01:58  PAGE 2-4
SYMBOL TABLE

CR    = 000015   	RR1     000150R  	VT    = 000013   	$COTB = ****** GX	$RP     000142RG
FF    = 000014   	RR2     000216R  	$AS     000000RG 	$DC     000056RG 	$RR     000146RG
HT    = 000011   	R$$11M= 000000   	$CAT5 = ****** GX	$DV     000126RG 	$SETNB  000240RG
LF    = 000012   	SPA   = 000040   	$CDTB = ****** GX	$OT     000064RG 	$$    = 000001
OT1     000070R

. ABS.	000000	   000
      	000262	   001
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  660 WORDS  ( 3 PAGES)
DYNAMIC MEMORY:  2772 WORDS  ( 10 PAGES)
ELAPSED TIME:  00:00:07
OBJ$:SCVTR,LIS$:SCVTR/-SP=SRC$:MACFLM,SCVTR
