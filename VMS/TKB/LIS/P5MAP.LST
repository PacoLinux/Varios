P5MAP	MACRO M1110  22-AUG-78 01:56  PAGE 3


      1						.TITLE	P5MAP
      2						.IDENT	/10/
      3					                                                                                ;**-1
      4					;
      5					; COPYRIGHT   1973,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
      6					; COPYRIGHT   1974,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
      7					; COPYRIGHT   1975,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
      8					;
      9					; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
     10					; ON A  SINGLE COMPUTER SYSTEM AND CAN BE COPIED (WITH INCLUSION
     11					; OF DEC'S COPYRIGHT NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
     12					; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
     13					;
     14					; THE  INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
     15					; NOTICE AND  SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
     16					; EQUIPMENT CORPORATION.
     17					;
     18					; DEC  ASSUMES NO  RESPONSIBILITY  FOR  THE  USE  OR RELIABILITY
     19					; OF ITS  SOFTWARE ON  EQUIPMENT WHICH  IS NOT SUPPLIED BY DEC.
     20					;
     21					; VERSION 10
     22					;                                                                               ;**-1
     23					; D. N. CUTLER/C. MONIA 27-JAN-74
     24					;
     25					;
     26					; MODIFICATIONS:                                                                ;**NEW**
     27					;                                                                               ;**NEW**
     28					; NO.		DATE		PROGRAMMER                                      ;**NEW**
     29					; ---		----		----------                                      ;**NEW**
     30					;                                                                               ;**NEW**
     31					; 036		15-JAN-75	C. MONIA                                        ;**NEW**
     32					; 043		23-SEP-75	C. MONIA
     33					; 054		27-MAR-76	C. MONIA
     34					; 057		20-APR-76	J. KASSON
     35					; 060		14-MAY-76	J. KASSON
     36					; 062		01-JUL-76	C. MONIA
     37					;                                                                               ;**NEW**
     38					; OUTPUT THE TASK BUILDER MAP                                                   ;**NEW**
     39					; MACRO LIBRARY CALLS
     40					;
     41
     42						.MCALL	CLOSE$,OFNB$W                                                   ;**NEW**
     43						.MCALL	QIOW$,DIR$
     44					                                                                                ;**NEW**
     45					;                                                                               ;**NEW**
     46					;++036 LOCAL DATA                                                               ;**NEW**
     47					;++036                                                                          ;**NEW**
     48					;++036 TIME PARAMETERS FOR THS BUILD                                            ;**NEW**
     49					;++036                                                                          ;**NEW**
     50					                                                                                ;**NEW**
     51	000000				$TITLE::.BLKW	8.		;TITLE  BUFFER
     52	000020				$STTLE::.BLKW	2		;SUBITLE BBUFFER
     53	000024				$BLTIM::.BLKW	8.		;TIME BUFFER
     54	000044				$NCLNM::.BLKW	1		;NUMBER OF LISTING COLUNMS
     55					;
     56					; QIOW ATTACH AND DETACH DPB'S
     57					;
P5MAP	MACRO M1110  22-AUG-78 01:56  PAGE 3-1


     58	000046				CODPB:	QIOW$	IO.ATT,2,2
     59
     60					                                                                                ;**NEW**
     61					                                                                                ;**-1
     62					;
     63					; MODULE FUNCTION DETAILS
     64					;
     65					;+
     66					; **-$P5MAP-OUTPUT TASK BUILDER MAP
     67					;
     68					; THIS ROUTINE IS CALLED TO WRITE THE TASK BUILDER
     69					; MAP FILE.
     70					;
     71					;
     72					; INPUTS:
     73					;
     74					;	TABLES CONSTRUCTED IN PHASE 3
     75					;
     76					; OUTPUTS:
     77					;
     78					;	THE TASK BUILDER MAP FILE IS WRITTEN
     79					;
     80					;+
     81					;
     82
     83	000076				$P5MAP::
     84	000076					SAVRG			; SAVE NON-VOLATILE REGISTERS
     85	000102	016700 	000000G			MOV	$INPPT,R0	; GET INPUT FILE RECORD BLOCK
     86	000106					CALL	$STRCB		; SET FDB RESIDENT
     87	000112	012705 	000000G			MOV	#$SWTCH,R5	; GET ADDRESS OF SWITCH WORD
     88	000116	032715 	000000G			BIT	#MA$PF,(R5)	; MAP FILE SPECIFIED ?
     89	000122	001462 				BEQ	15$		; IF EQ NO
     90	000124	016700 	000000G			MOV	$MAPPT,R0	; GET MAP FILE RECORD BLOCK POINTER
     91	000130	010004 				MOV	R0,R4		; SAVE MAP RECORD BLOCK POINTER
     92	000132					CALL	$STRCB		; SETUP RECORD BLOCK
     93	000136	010400 				MOV	R4,R0		; RETRIEVE POINTER
     94	000140					OFNB$W	R0		; OPEN MAP FILE
     95	000152	103011 				BCC	10$		; IF C/C OKAY
     96	000154	016002 	000000G			MOV	R$NAME(R0),R2	; GET ADDRESS OF NAME STRING
     97	000160	012701 				MOV	(PC)+,R1	; GET ERROR/SEVERITY
     98	000162	   000G	   000G			.BYTE	E$R11,S$V0	; DIAGNOSTIC
     99	000164					CALL	$ERMSG		; OUTPUT ERROR MESSAGE
    100	000170	042715 	000000G			BIC	#MA$PF,(R5)	; CLEAR MAP FILE OPTION SWITCH
    101	000174	000435 				BR	15$		; OUTPUT ONLY UNDEFINED SYMBOLS VIA CO
    102	000176				10$:				;
    103	000176	132764 	000004 	000017 		BITB	#FD.TTY,F.RCTL(R4)	;TERMINAL DEVICE?
    104	000204	001411 				BEQ	11$		;IF EQ NO
    105	000206	116467 	000042 	177636 		MOVB	F.LUN(R4),CODPB+Q.IOLU	;SET LUN
    106	000214	012767 	000000G	177626 		MOV	#IO.ATT,CODPB+Q.IOFN	;INSERT ATTACH FUNCTION
    107	000222					DIR$	#CODPB		;ATTACH TERMINAL
    108	000230				11$:
    109	000230	005067 	000000G			CLR	$MPFLG		; CLEAR MAP BUFFER FLAG
    110	000234	012767 	000007 	177602 		MOV	#7,$NCLNM	;INITIALIZE FOR WIDE LISTING
    111	000242	032767 	000000G	000000G		BIT	#WI$DE,$SWTCH	;NARROW LISTING?
    112	000250	001003 				BNE	12$		;IF NE NO
    113	000252	012767 	000004 	177564 		MOV	#4,$NCLNM	;SET FOR NARROW LISTING
    114	000260				12$:
P5MAP	MACRO M1110  22-AUG-78 01:56  PAGE 3-2


    115	000260					CALL	$MPHDG		; OUTPUT MAP HEADING
    116	000264					CALL	$MPOLD		;OUTPUT OVERLAY DESCRIPTOR
    117	000270				15$:				;
    118	000270	012700 	000342'			MOV	#P5RSC,R0	; GET PHASE CONTROL ROUTINE ADDRESS
    119	000274					CALL	$PCTRL		; CALL PHASE CONTROL ROUTINE
    120	000300	012700 	000440'			MOV	#P5MAP,R0	; GET PHASE CONTROL ROUTINE ADDRESS
    121	000304					CALL	$PCTRL		; CALL PHASE CONTROL ROUTINE
    122	000310	032715 	000000G			BIT	#MA$PF,(R5)	; MAP FILE REQUIRED
    123	000314	001410 				BEQ	20$		; IF EQ NO
    124	000316	012767 	000000G	177524 		MOV	#IO.DET,CODPB+Q.IOFN	;INSERT DETACH FUNCTION
    125	000324					DIR$	#CODPB		;DETACH TERMINAL
    126	000332					CALL	$MPSTS		; PRINT TASK BUILDER STATISTICS
    127	000336				20$:				;
    128	000336					CALLR	$P5CRF		;++036 CONDITIONALLY OUTPUT CREF FILE           ;**NEW**
    129					                                                                                ;**-9
    130					;
    131					; RESET THE BASE ADDRESS FOR ALL SECTIONS WITHIN THE
    132					; SEGMENT PRIOR TO DISPLAYING THE ALLOCATION FOR
    133					; EVERY ELEMENT
    134					;
    135
    136	000342				P5RSC:				;
    137	000342					SAVRG			; SAVE THE NON-VOLATILE REGISTERS
    138	000346	016700 	000000G			MOV	$CRSEG,R0	; GET ADDRESS OF SECTION
    139	000352	062700 	000000G			ADD	#S$GCST,R0	; POINT TO SECTION TABLE
    140	000356	012746 	000000G			MOV	#$ISED,-(SP)	; PUSH ADDRESS OF SYMBOL EDIT ROUTINE
    141	000362				10$:				;
    142	000362					CALL	@(SP)+		; GET NEXT ENTRY
    143	000364	103424 				BCS	20$		; IF C/S NO MORE
    144	000366	132760 	000000G	000000G		BITB	#CS$IND,C$SFLG(R0) ; INDIRECT ENTRY?
    145	000374	001372 				BNE	10$		; IF NE YES
    146	000376	132760 	000000G	000000G		BITB	#CS$REL,C$SFLG(R0) ; ABS SECTION?
    147	000404	001766 				BEQ	10$		; IF EQ YES
    148	000406	016060 	000000G	000000G		MOV	C$SBSE(R0),C$SCUR(R0) ; RESET CURRENT BASE
    149	000414	132760 	000000G	000001G		BITB	#CS$VSC,C$SFLG+1(R0) ; VIRTUAL SECTION?
    150	000422	001402 				BEQ	15$		; IF EQ NO
    151	000424	005060 	000000G			CLR	C$SCUR(R0)	; CLEAR CURRENT BASE
    152	000430				15$:				;
    153	000430					CALL	$WRMPG		; WRITE-MARK PAGE
    154	000434	000752 				BR	10$		; GO AGAIN
    155	000436				20$:				;
    156	000436					RETURN			;
    157
    158
    159					;
    160					; MAP OUTPUT ROUTINE FOR EACH SEGMENT
    161					;
    162					;
    163
    164	000440				P5MAP:				;
    165	000440					SAVRG			; SAVE NON-VOLATILE REGISTERS
    166	000444					CALL	$WSINI		; INITIALIZE WHOLE-SEARCH ALGORITHM
    167	000450	032767 	000000G	000000G		BIT	#MA$PF,$SWTCH	; MAP FILE SPECIFIED?
    168	000456	001451 				BEQ	30$		; IF EQ NO
    169	000460	016700 	000000G			MOV	$CRVSG,R0	; GET VIRTUAL ADDRESS OF CURRENT SEGMENT
    170	000464					CALL	$ADRSM		; SET ADDRESS LIMITS
    171	000470					CALL	$MPSEG		; OUTPUT SEGMENT NAME
P5MAP	MACRO M1110  22-AUG-78 01:56  PAGE 3-3


    172	000474				10$:				;
    173	000474	032767 	000000G	000000G		BIT	#LG$SH,$SWTCH	;SHORT MAP?
    174	000502	001037 				BNE	30$		;IF NE YES
    175	000504	012746 	000000G			MOV	#$ISED,-(SP)	; SET TO OUTPUT SELECTED ELEMENTS
    176	000510	016700 	000000G			MOV	$CRSEG,R0	; GET REAL ADDRESS OF CURRENT SEGMENT
    177	000514	062700 	000000G			ADD	#S$GCST,R0	; POINT TO CONTROL SECTION TABLE
    178	000520				5$:				;
    179	000520					CALL	@(SP)+		; GET NEXT SECTION
    180	000522	103420 				BCS	8$		; IF C/S DONE
    181	000524	132760 	000000G	000000G		BITB	#CS$IND,C$SFLG(R0) ; SECTION DEFINED IN THIS SEGMENT?
    182	000532	001404 				BEQ	7$		; IF EQ YES
    183	000534	016001 	000000G			MOV	C$SBSE(R0),R1	; GET ADDRESS OF REAL ENTRY
    184	000540					CALL	$CVRL		; CONVERT TO REAL
    185	000544				7$:				;
    186	000544					CALL	$WRMPG		; WRITE-MARK PAGE
    187	000550	166060 	000000G	000000G		SUB	C$SLGS(R0),C$SCUR(R0) ; RESET CURRENT BASE
    188	000556	005060 	000000G			CLR	C$SLGS(R0)	; RESET LENGTH IN SEGMENT
    189	000562	000756 				BR	5$		; GET NEXT SECTION
    190	000564				8$:				;
    191	000564	012746 	000000G			MOV	#$STIMP,-(SP)	; SET TO OUTPUT SELECTED ELEMENTS
    192	000570				20$:				;
    193	000570					CALL	@(SP)+		; SETUP NEXT INPUT FILE
    194	000572	103403 				BCS	30$		; IF C/S NO MORE TO PROCESS
    195	000574					CALL	$P5MEL		; SCAN ELEMENT
    196	000600	000773 				BR	20$		; GO AGAIN
    197
    198					;
    199					; OUTPUT ANY UNDEFINED SYMBOLS
    200					;
    201
    202	000602				30$:				;
    203	000602	016700 	000000G			MOV	$CRSEG,R0	; GET ADDRESS OF CURRENT SEGMENT
    204	000606	005760 	000000G			TST	S$GUND(R0)	; ANY UNDEFINED SYMBOLS?
    205	000612	001414 				BEQ	40$		; IF EQ NO
    206	000614	010002 				MOV	R0,R2		; COPY DESCRIPTOR ADDRESS
    207	000616	062702 	177776G			ADD	#S$GNME-2,R2	; POINT TO SEGMENT NAME
    208	000622	010246 				MOV	R2,-(SP)	; SAVE ADDRESS
    209	000624	011246 				MOV	(R2),-(SP)	; SAVE CONTENTS
    210	000626	016012 	000000G			MOV	S$GUND(R0),(R2) ; SETUP PARAMETER BLOCK
    211	000632	012701 				MOV	(PC)+,R1	; GET ERROR/SEVERITY
    212	000634	   000G	   000G			.BYTE	E$R28,S$V0	; DIAGNOSTIC
    213	000636					CALL	$ERMSG		; OUTPUT ERROR MESSAGE
    214	000642	012636 				MOV	(SP)+,@(SP)+	; RESTORE DESCRIPTOR CONTENTS
    215	000644				40$:				;
    216	000644	032767 	000000G	000000G		BIT	#MA$PF,$SWTCH	; MAP FILE SPECIFIED?
    217	000652	001403 				BEQ	P5MEX		; IF EQ NO
    218	000654					CALL	$MPUND		; FLUSH OUTPUT AND UNDEFINED SYMBOLS
    219	000660					RETURN
    220	000662				P5MEX:				;
    221	000662	016700 	000000G			MOV	$CRSEG,R0	;GET ADDRESS OF CURRENT SEGMENT
    222	000666	005760 	000000G			TST	S$GUND(R0)	;ANY UNDEFINES?
    223	000672	001433 				BEQ	10$		;IF EQ NO
    224	000674	012767 	000000G	177146 		MOV	#IO.ATT,CODPB+Q.IOFN	;INSERT ATTACH FUNCTION
    225	000702	012767 	000002 	177142 		MOV	#2,CODPB+Q.IOLU	;INSERT LUN
    226	000710					DIR$	#CODPB		;ATTACH TERMINAL
    227	000716	012701 	000000G			MOV	#$MPPUT,R1	;ADDRESS OF OUTPUT ROUTINE
    228	000722					CALL	$MPGUN		;GET UNDEFINED SYMBOL
P5MAP	MACRO M1110  22-AUG-78 01:56  PAGE 3-4


    229	000726	012702 	000001 			MOV	#1,R2		;BUFFER LENGTH IN BYTES
    230	000732	012701 	000000G			MOV	#$OUTBF,R1	;OUTPUT BUFFER
    231	000736	012711 	000040 			MOV	#SPA,(R1)	;INSERT SPACE INTO OUTPUT BUFFER
    232	000742					CALL	$PUTCO		;OUTPUT CARRIAGE RETURN
    233	000746	012767 	000000G	177074 		MOV	#IO.DET,CODPB+Q.IOFN	;INSERT DETACH FUNCTION
    234	000754					DIR$	#CODPB	;DETACH TERMINAL
    235	000762				10$:
    236	000762					RETURN			;
    237
    238		000001 				.END
P5MAP	MACRO M1110  22-AUG-78 01:56  PAGE 3-5
SYMBOL TABLE

B.BBFS= 000010   	FD.PLC= 000004   	F.ERR = 000052   	NB.SVR= 000010   	S.NFEN= 000020
B.BFST= 000015   	FD.PRN= 000004   	F.FACC= 000043   	NB.TYP= 000002   	VT    = 000013
B.NXBD= 000012   	FD.PSE= 010000   	F.FFBY= 000014   	NB.VER= 000001   	WI$DE = ****** GX
B.VBN = 000004   	FD.RAH= 000001   	F.FNAM= 000110   	N.DID = 000024   	$ADRSM= ****** GX
CH.AND= 000001   	FD.RAN= 000002   	F.FNB = 000102   	N.DVNM= 000032   	$BLTIM  000024RG
CODPB   000046R  	FD.REC= 000001   	F.FTYP= 000116   	N.FID = 000000   	$CRSEG= ****** GX
CR    = 000015   	FD.RWM= 000001   	F.FVER= 000120   	N.FNAM= 000006   	$CRVSG= ****** GX
CS$IND= ****** GX	FD.SDI= 000020   	F.HIBK= 000004   	N.FTYP= 000014   	$CVRL = ****** GX
CS$REL= ****** GX	FD.SQD= 000040   	F.LUN = 000042   	N.FVER= 000016   	$ERMSG= ****** GX
CS$VSC= ****** GX	FD.TTY= 000004   	F.MBCT= 000054   	N.NEXT= 000022   	$INPPT= ****** GX
C$SBSE= ****** GX	FD.WBH= 000002   	F.MBC1= 000055   	N.STAT= 000020   	$ISED = ****** GX
C$SCUR= ****** GX	FF    = 000014   	F.MBFG= 000056   	N.UNIT= 000034   	$MAPPT= ****** GX
C$SFLG= ****** GX	FF.CHR= 000005   	F.NRBD= 000024   	PAR$$$= 000000   	$MPFLG= ****** GX
C$SLGS= ****** GX	FF.NV = 000003   	F.NREC= 000030   	P5MAP   000440R  	$MPGUN= ****** GX
E$R11 = ****** GX	FF.POE= 000002   	F.OVBS= 000030   	P5MEX   000662R  	$MPHDG= ****** GX
E$R28 = ****** GX	FF.RWD= 000001   	F.RACC= 000016   	P5RSC   000342R  	$MPOLD= ****** GX
FA.APD= 000100   	FF.RWF= 000006   	F.RATT= 000001   	Q.IOAE= 000012   	$MPPUT= ****** GX
FA.CRE= 000010   	FF.SPC= 000004   	F.RCNM= 000034   	Q.IOEF= 000006   	$MPSEG= ****** GX
FA.DLK= 001000   	FO.APD= 000106   	F.RCTL= 000017   	Q.IOFN= 000002   	$MPSTS= ****** GX
FA.ENB= 100000   	FO.MFY= 000002   	F.RSIZ= 000002   	Q.IOLU= 000004   	$MPUND= ****** GX
FA.EXC= 002000   	FO.RD = 000001   	F.RTYP= 000000   	Q.IOPL= 000014   	$NCLNM  000044RG
FA.EXT= 000004   	FO.UPD= 000006   	F.SEQN= 000100   	Q.IOPR= 000007   	$OUTBF= ****** GX
FA.NSP= 000100   	FO.WRT= 000016   	F.SPDV= 000072   	Q.IOSB= 000010   	$PCTRL= ****** GX
FA.POS= 010000   	F.ACTL= 000076   	F.SPUN= 000074   	R$NAME= ****** GX	$PUTCO= ****** GX
FA.RD = 000001   	F.ALOC= 000040   	F.STBK= 000036   	R$$11M= 000000   	$P5CRF= ****** GX
FA.RWD= 004000   	F.BBFS= 000062   	F.UNIT= 000136   	R.FIX = 000001   	$P5MAP  000076RG
FA.SEQ= 040000   	F.BDB = 000070   	F.URBD= 000020   	R.SEQ = 000003   	$P5MEL= ****** GX
FA.SHR= 000040   	F.BGBC= 000057   	F.VBN = 000064   	R.VAR = 000002   	$SAVRG= ****** GX
FA.TMP= 000020   	F.BKDN= 000026   	F.VBSZ= 000060   	SPA   = 000040   	$STIMP= ****** GX
FA.WCK= 020000   	F.BKDS= 000020   	HT    = 000011   	S$GCST= ****** GX	$STRCB= ****** GX
FA.WRT= 000002   	F.BKEF= 000050   	IO.ATT= ****** GX	S$GNME= ****** GX	$STTLE  000020RG
FD.BLK= 000010   	F.BKP1= 000051   	IO.DET= ****** GX	S$GUND= ****** GX	$SWTCH= ****** GX
FD.CCL= 000002   	F.BKST= 000024   	LF    = 000012   	S$V0  = ****** GX	$TITLE  000000RG
FD.COM= 020000   	F.BKVB= 000064   	LG$SH = ****** GX	S.BFHD= 000020   	$WRMPG= ****** GX
FD.CR = 000002   	F.CHR = 000075   	MA$PF = ****** GX	S.FATT= 000016   	$WSINI= ****** GX
FD.DIR= 000010   	F.CNTG= 000034   	NB.DEV= 000200   	S.FDB = 000140   	$$    = 000001
FD.FTN= 000001   	F.DFNB= 000046   	NB.DIR= 000100   	S.FNAM= 000006   	$$$ARG= 000000
FD.F11= 040000   	F.DSPT= 000044   	NB.NAM= 000004   	S.FNB = 000036   	$$$OST= 000014
FD.INS= 000010   	F.DVNM= 000134   	NB.SD1= 000400   	S.FNBW= 000017   	.OPFNB= ****** G
FD.ISP= 002000   	F.EFBK= 000010   	NB.SD2= 001000   	S.FNTY= 000004   	...GBL= 000000
FD.MNT= 100000   	F.EFN = 000050   	NB.SNM= 000040   	S.FTYP= 000002   	...TPC= 000140
FD.OSP= 004000   	F.EOBB= 000032   	NB.STP= 000020

. ABS.	000000	   000
      	000764	   001
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  3064 WORDS  ( 12 PAGES)
DYNAMIC MEMORY:  3828 WORDS  ( 14 PAGES)
ELAPSED TIME:  00:00:23
OBJ$:P5MAP,LIS$:P5MAP/-SP=SRC$:MACFLM,FCSPR,P5MAP
