STINP	MACRO M1110  22-AUG-78 02:00  PAGE 3


    100						.TITLE	STINP
    200						.IDENT	/10/
    300					                                                                                ;**-1
    400					;
    500					; COPYRIGHT   1974,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
    600					;
    700					; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
    800					; ON A  SINGLE COMPUTER SYSTEM AND CAN BE  COPIED (WITH INCLUSION
    900					; OF DEC'S COPYRIGHT  NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
   1000					; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
   1100					;
   1200					; THE  INFORMATION  IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
   1300					; NOTICE  AND  SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
   1400					; EQUIPMENT CORPORATION.
   1500					;
   1600					; DEC  ASSUMES NO  RESPONSIBILITY  FOR  THE  USE  OR  RELIABILITY
   1700					; OF  ITS  SOFTWARE ON  EQUIPMENT WHICH  IS  NOT SUPPLIED BY DEC.
   1800					;
   1900					; VERSION 10
   2000					;                                                                               ;**-2
   2100					; D.N. CUTLER/C. MONIA	21-JAN-74
   2200					;
   2300					; MODIFICATIONS:
   2400					;
   2500					; NO.		DATE		PROGRAMMER
   2600					; ---		----		----------
   2700					;
   2800					; 043		16-OCT-75	C. MONIA
   2900					; 054		27-MAR-76	C. MONIA
   3000					;
   3100					; MACRO LIBRARY CALLS
   3200					;
   3300
   3400						.MCALL	CLOSE$,GET$S,OFNB$R
   3500
   3600					;
   3700					; LOCAL DATA
   3800					;
   3900
   4000	000000				BYPSW:	.BLKW	1		; BYPASS SELECTED FILES
   4100	000002				OPSW:	.BLKW	1		; DO NOT OPEN FILES
   4200
   4300					;+
   4400					; **-$STELM-SETUP SEGMENT ELEMENT DESCRIPTORS
   4500					; **-$STIMP-SETUP INPUT FILE FOR MAP
   4600					; **-$STINP-SET UP INPUT FILE
   4700					;
   4800					; THESE ROUTINES ARE CALLED TO SET UP THE NEXT INPUT FILE FROM THE CUR-
   4900					; RENT ELEMENT LIST. THE FILE IS SET UP IN THE $INPPT RECORD BLOCK.
   5000					; THE ROUTINE IS A MONITOR DEPENDENT ROUTINE SINCE IT MUST KNOW THE
   5100					; FORMAT OF THE MONITOR DEPENDENT DATA IN THE ELEMENT DESCRIPTOR. THE
   5200					; CURRENT FILE IS CLOSED, THE NEXT FILE IN THE ELEMENT LIST IS OPEN-
   5300					; ED AND $NBYTE IS CLEARED. A COROUTINE CALL IS THEN MADE TO THE CALLER.
   5400					;
   5500					; $STIMP IS INVOKED TO OPEN ONLY THOSE FILES TO BE INCLUDED IN THE MAP
   5600					; WHEN SW$MA IS CLEAR IN THE ELEMENT SWITCH WORD.
   5700					;
STINP	MACRO M1110  22-AUG-78 02:00  PAGE 3-1


   5800					; $STELM IS INVOKED TO SETUP THE NEXT ELEMENT DESCRIPTOR WITHOUT OPENING
   5900					; THE ASSOCIATED FILE
   6000					;
   6100					;
   6200					;
   6300					; INPUTS:
   6400					;
   6500					;	$INPPT RECORD BLOCK.
   6600					;
   6700					; OUTPUTS:
   6800					;
   6900					;	C=1 IF NO MORE FILES ARE IN THE ELEMENT LIST.
   7000					;		RETURN IS VIA RETURN.
   7100					;	C=0 IF NEXT FILE IS OPENED SUCESSFULLY.
   7200					;		RETURN IS VIA CALL @(SP)+.
   7300					;-
   7400
   7500	000000					.PSECT	$$STIN,I,GBL
   7600
   7700						.ENABL	LSB
   7800
   7900	000000				$STELM::			;
   8000	000000	010667 	000002'			MOV	SP,OPSW		; SET TO BYPASS FILE OPEN
   8100	000004	000402 				BR	2$		;
   8200
   8300	000006				$STIMP::			;
   8400	000006	005067 	000002'			CLR	OPSW		; SET TO OPEN APPROPRIATE FILES
   8500	000012				2$:				;
   8600	000012	012767 	000000G	000000'		MOV	#SW$MA,BYPSW	; SET TO EXCLUDE SELECTED FILES
   8700	000020	000404 				BR	5$		;
   8800
   8900
   9000	000022				$STINP::			;
   9100	000022	005067 	000000'			CLR	BYPSW		; PROCESS ALL FILES
   9200	000026	005067 	000002'			CLR	OPSW		; OPEN ALL FILES
   9300	000032				5$:				;
   9400	000032	012600 				MOV	(SP)+,R0	; GET RETURN ADDRESS
   9500	000034	016701 	000000G			MOV	$CRSEG,R1	;GET ADDRESS OF CURRENT SEGMENT
   9600	000040	016146 	000000G			MOV	S$GELT(R1),-(SP);SET ADDRESS OF NEXT ELEMENT
   9700	000044	010046 				MOV	R0,-(SP)	;RESTORE RETURN ADDRESS
   9800	000046				10$:				;
   9900	000046	016601 	000002 			MOV	2(SP),R1	; GET VIRTUAL ADDRESS OF NEXT ELEMENT
  10000	000052	001003 				BNE	20$		;IF NE GOT ONE
  10100	000054	012616 				MOV	(SP)+,(SP)	;REMOVE ZERO WORD
  10200	000056	000261 				SEC			;SET CARRY
  10300	000060					RETURN			;
  10400	000062				20$:				;
  10500	000062					CALL	$CVRL		; CONVERT VIRTUAL TO REAL ADDRESS
  10600	000066	016066 	000000G	000002 		MOV	E$LNXT(R0),2(SP) ; SET VIRTUAL ADDRESS OF NEXT                  ;**-1
  10700	000074	011646 				MOV	(SP),-(SP)	; COPY RETURN ADDRESS
  10800	000076	010166 	000002 			MOV	R1,2(SP)	; SAVE VIRTUAL ADDRESS OF CURRENT ELEMENT
  10900	000102	010167 	000000G			MOV	R1,$CRVEL	; SET VIRTUAL ADDRESS OF CURRENT ELEMENT
  11000	000106	010067 	000000G			MOV	R0,$CRELM	;SET ADDR OF CURRENT ELEMENT DESCRIPTOR
  11100	000112	005067 	000000G			CLR	$NBYTE		;CLEAR BYTE COUNT
  11200	000116	016701 	000000G			MOV	$INPPT,R1	; GET INPUT FILE RECORD BLOCK POINTER
  11300	000122					CALL	$STFNB		; SETUP FILE NAME BLOCK
  11400	000126	016700 	000000G			MOV	$INPPT,R0	;GET INPUT FILE RECORD BLOCK
STINP	MACRO M1110  22-AUG-78 02:00  PAGE 3-2


  11500	000132	016701 	000000G			MOV	$CRELM,R1	; GET ELEMENT DESCRIPTOR ADDRESS
  11600	000136	005767 	000002'			TST	OPSW		; OPEN ANY FILE?
  11700	000142	001020 				BNE	30$		; IF NE NO
  11800	000144	036167 	000000G	000000'		BIT	E$LSWT(R1),BYPSW ; BYPASS OPEN ON SELECTED FILE?
  11900	000152	001014 				BNE	30$		; IF NE YES
  12000	000154					OFNB$R	R0		; OPEN INPUT FILE
  12100	000166	103006 				BCC	30$		;IF CC OKAY
  12200	000170	016002 	000000G			MOV	R$NAME(R0),R2	;GET ADDRESS OF NAME STRING
  12300	000174	012701 				MOV	(PC)+,R1	;OPEN FAILURE
  12400	000176	   000G	   000G			.BYTE	E$R11,S$V2	;FATAL-NO RETURN
  12500	000200					CALL	$ERMSG		;OUTPUT ERROR MESSAGE
  12600	000204	022767 	000003 	000000G	30$:	CMP	#3,$PHASE	;PHASE 3?
  12700	000212	001516 				BEQ	80$		;IF EQ YES
  12800	000214	032761 	000000G	000000G		BIT	#SW$CC,E$LSWT(R1);CONCATENATED FILE?
  12900	000222	001004 				BNE	40$		;IF NE YES
  13000	000224	032761 	000000G	000000G		BIT	#SW$LB,E$LSWT(R1);LIBRARY FILE?
  13100	000232	001506 				BEQ	80$		;IF EQ NO
  13200	000234	012600 			40$:	MOV	(SP)+,R0	;GET RETURN ADDRESS
  13300	000236	016146 	000000G			MOV	E$LMOD(R1),-(SP);SET ADDRESS OF NEXT ENTRY
  13400	000242	010046 				MOV	R0,-(SP)	;RESTORE RETURN ADDRESS
  13500	000244				50$:				;
  13600	000244	016601 	000002 			MOV	2(SP),R1	; GET VIRTUAL ADDRESS OF NEXT ENTRY
  13700	000250	001475 				BEQ	70$		;IF EQ NO MORE
  13800	000252					CALL	$CVRL		; CONVERT TO REAL ADDRESS
  13900	000256	016066 	000000G	000002 		MOV	E$LNXT(R0),2(SP);SET ADDRESS OF NEXT ENTRY                      ;**-1
  14000	000264	011646 				MOV	(SP),-(SP)	; COPY RETURN ADDRESS
  14100	000266	010166 	000002 			MOV	R1,2(SP)	; SAVE VIRTUAL ADDRESS OF CURRENT
  14200	000272	010167 	000000G			MOV	R1,$CRVEL	; SET VIRTUAL ADDRESS OF CURRENT ELEMENT
  14300	000276	010067 	000000G			MOV	R0,$CRELM	;SET ADDR OF CURRENT ELEMENT DESCRIPTOR
  14400	000302	005067 	000000G			CLR	$NBYTE		;CLEAR BYTE COUNT
  14500	000306	005767 	000002'			TST	OPSW		; FILE OPEN?
  14600	000312	001041 				BNE	60$		; IF NE NO
  14700	000314	036067 	000000G	000000'		BIT	E$LSWT(R0),BYPSW ; OPEN BYPASSED FOR FILE?
  14800	000322	001035 				BNE	60$		; IF NE YES
  14900	000324	032760 	000000G	000000G		BIT	#SW$CC,E$LSWT(R0);CONCATENATED FILE?
  15000	000332	001031 				BNE	60$		;IF NE YES
  15100	000334	005001 				CLR	R1		;CLEAR HIGH PART OF VIRTUAL BLOCK NUMBER
  15200	000336	016002 	000000G			MOV	E$LMND(R0),R2	;SET LOW PART OF VIRTUAL BLOCK NUMBER
  15300	000342	016003 	000002G			MOV	E$LMND+2(R0),R3	;GET BYTE WITHIN BLOCK
  15400	000346	016700 	000000G			MOV	$INPPT,R0	;GET INPUT FILE RECORD BLOCK
  15500	000352	112760 	000002 	000000 		MOVB	#2,F.RTYP(R0)	;SET VARIABLE LENGTH RECORD TYPE
  15600	000360	112760 	000004 	000001 		MOVB	#4,F.RATT(R0)	;SET RECORD ATTRIBUTES
  15700	000366					CALL	.POINT		;POINT TO PROPER RECORD
  15800	000372	103403 				BCS	55$		;IF CS I/O ERROR
  15900	000374					GET$S	R0		; GET MODULE HEADER RECORD
  16000	000400	103006 				BCC	60$		;IF CC OKAY
  16100	000402	016002 	000000G		55$:	MOV	R$NAME(R0),R2	;GET ADDRESS OF NAME STRING
  16200	000406	012701 				MOV	(PC)+,R1	;I/O ERROR
  16300	000410	   000G	   000G			.BYTE	E$R10,S$V2	;FATAL-NO RETURN
  16400	000412					CALL	$ERMSG		;OUTPUT ERROR MESSAGE
  16500	000416				60$:				;                                               ;**NEW**
  16600	000416					CALL	ALCMT		; ALLOCATE CMT TABLE
  16700	000422					CALL	@(SP)+		;CALL THE CALLER                                ;**-1
  16800	000424					CALL	$DLCMT		; DEALLOCATE CMT TABLE
  16900	000430	016601 	000002 			MOV	2(SP),R1	; RESTORE VIRTUAL ADDRESS OF CURRENT
  17000	000434	012616 				MOV	(SP)+,(SP)	; ADJUST STACK
  17100	000436					CALL	$UNLPG		; UNLOCK PAGE FROM CORE
STINP	MACRO M1110  22-AUG-78 02:00  PAGE 3-3


  17200	000442	000700 				BR	50$		;GO AGAIN
  17300	000444	012616 			70$:	MOV	(SP)+,(SP)	;REMOVE ZERO WORD
  17400	000446	000411 				BR	90$		;
  17500	000450				80$:				;                                               ;**NEW**
  17600	000450					CALL	ALCMT		; ALLOCATE CMT TABLE
  17700	000454					CALL	@(SP)+		;CALL THE CALLER                                ;**-1
  17800	000456					CALL	$DLCMT		; DEALLOCATE CMT TABLE
  17900	000462	016601 	000002 			MOV	2(SP),R1	; GET DESCRIPTOR VIRTUAL ADDRESS                ;**NEW**
  18000	000466					CALL	$UNLPG		; UNLOCK DESCRIPTOR FROM MEMORY                 ;**NEW**
  18100	000472				90$:				;
  18200	000472	005767 	000002'			TST	OPSW		; FILE OPEN?
  18300	000476	001010 				BNE	100$		; IF NE NO
  18400	000500	016700 	000000G			MOV	$INPPT,R0	; GET POINTER TO INPUT FILE RECORD BLOCK
  18500	000504	036067 	000000G	000000'		BIT	R$SWTH(R0),BYPSW ; OPEN BYPASSED?
  18600	000512	001002 				BNE	100$		; IF NE YES
  18700	000514					CLOSE$	R0		; CLOSE FILE
  18800	000520				100$:				;
  18900	000520	012616 				MOV	(SP)+,(SP)	; REMOVE VIRTUAL ADDRESS FROM STACK             ;**-2
  19000	000522	000167 	177320 			JMP	10$		;                                               ;**NEW**
  19100
  19200						.DSABL	LSB
  19300
  19400					;
  19500					; ALLOCATE CMT TABLE ENTRY IN DYNAMIC STORAGE
  19600					;
  19700
  19800	000526				ALCMT:				;
  19900	000526	016601 	000004 			MOV	4(SP),R1	; GET VIRTUAL DESCRIPTOR ADDRESS
  20000	000532					CALL	$CVLOK		; CONVERT TO REAL, LOCK IN MEMORY
  20100	000536					SAVRG			; SAVE NON-VOLATILE REGISTERS
  20200	000542	010003 				MOV	R0,R3		; COPY REAL ADDRESS
  20300	000544	016301 	000000G			MOV	E$LNUM(R3),R1	; GET HIGHEST SECTION NUMBER
  20400	000550	100433 				BMI	20$		; IF MI NONE
  20500	000552	005201 				INC	R1		; CONVERT TO NUMBER OF SECTIONS
  20600	000554	006301 				ASL	R1		; CONVERT TO WORD COUNT
  20700	000556	010105 				MOV	R1,R5		; SAVE WORD COUNT
  20800	000560	162705 	000000C			SUB	#<P$GSIZ-P$GHD>/2,R5 ; ASSUME CMT EXCEEDS A PAGE
  20900	000564	101001 				BHI	5$		; IF HI CMT EXCEEDS A PAGE
  21000	000566	010105 				MOV	R1,R5		; RESET SIZE OF CMT
  21100	000570				5$:				;
  21200	000570	006301 				ASL	R1		; CONVERT TO CMT SIZE
  21300	000572					CALL	$ALBLK		; ALLOCATE CORE BLOCK
  21400	000576	010063 	000000G			MOV	R0,E$LCMT(R3)	; SAVE CURRENT CMT ADDRESS
  21500	000602	010004 				MOV	R0,R4		; SAVE ADDRESS OF BLOCK
  21600	000604	016301 	000000G			MOV	E$LVMT(R3),R1	; GET ADDRESS OF VIRTUAL CMT
  21700	000610					CALL	7$		; SETUP FIRST PART OF CMT
  21800	000614	016301 	000002G			MOV	E$LVMT+2(R3),R1	; GET ADDRESS OF SECOND PART OF TABLE
  21900	000620	001407 				BEQ	20$		; IF EQ NONE
  22000	000622	012705 	000000C			MOV	#<P$GSIZ-P$GHD>/2,R5 ; GET PAGE SIZE
  22100	000626				7$:				;
  22200	000626					CALL	$CVRL		; CONVERT TO REAL
  22300	000632				10$:				;
  22400	000632	012024 				MOV	(R0)+,(R4)+	; COPY CMT ENTRY
  22500	000634					SOB	R5,10$		; LOOP FOR ALL ENTRIES
  22600	000640				20$:				;
  22700	000640					RETURN			;
  22800
STINP	MACRO M1110  22-AUG-78 02:00  PAGE 3-4


  22900	000004					.PSECT
  23000
  23100					;+
  23200					; **-$DLCMT-DEALLOCATE CONTROL SECTION MAPPING TABLE
  23300					;
  23400					; THIS SUBROUTINE IS CALLED TO DEALLOCATE THE COPY OF THE
  23500					; CONTROL SECTION MAPPING TABLE THAT IS STORED IN REAL
  23600					; MEMORY. THE DEALLOCATION IS PERFORMED AFTER THE ELEMENT
  23700					; HAS BEEN PROCESSED.
  23800					;
  23900					; INPUTS:
  24000					;
  24100					;	$CRELM=REAL ADDRESS OF CURRENT ELEMENT
  24200					;
  24300					; OUTPUTS:
  24400					;
  24500					;	THE CONTROL SECTION MAPPING TABLE (IF ANY) IS RETURNED TO THE
  24600					;	CORE POOL. THE ELEMENT DESCRIPTOR CMT ADDRESS IS CLEARED
  24700					;
  24800					;	THE CALLING ROUTINE IS RESPONSIBLE FOR INSURING THAT THE
  24900					;	ADDRESS IN $CRELM IS VALID AND THE PAGE CONTAING THE DES-
  25000					;	CRIPTOR IS WRITE-MARKED.
  25100					;
  25200					;-
  25300
  25400	000004				$DLCMT::			;
  25500	000004	016700 	000000G			MOV	$CRELM,R0	; GET REAL ADDRESS OF CURRENT ELEMTN
  25600	000010	016002 	000000G			MOV	E$LCMT(R0),R2	; GET ADDRESS OF CMT
  25700	000014	001413 				BEQ	10$		; IF EQ NONE
  25800	000016	005060 	000000G			CLR	E$LCMT(R0)	; CLEAR CMT ADDRESS
  25900	000022	016001 	000000G			MOV	E$LNUM(R0),R1	; GET HIGHEST SECTION NUMBER
  26000	000026	005201 				INC	R1		; CONVERT TO NUMBER OF SECTIONS
  26100	000030	006301 				ASL	R1		; CONVERT TO BYTE COUNT
  26200	000032	006301 				ASL	R1		; ...
  26300	000034	012700 	000000G			MOV	#$FRHD,R0	; GET ADDRESS OF FREE CORE POOL LISTHEAD
  26400	000040					CALL	$RLCB		; RELEASE CORE BLOCK
  26500	000044				10$:				;
  26600	000044					RETURN			;
  26700
  26800					                                                                                ;**-1
  26900		000001 				.END
STINP	MACRO M1110  22-AUG-78 02:00  PAGE 3-5
SYMBOL TABLE

ALCMT   000526R     002	FD.F11= 040000   	F.BKVB= 000064   	F.VBSZ= 000060   	S$V2  = ****** GX
BYPSW   000000R  	FD.INS= 000010   	F.CHR = 000075   	HT    = 000011   	S.BFHD= 000020
B.BBFS= 000010   	FD.ISP= 002000   	F.CNTG= 000034   	LF    = 000012   	S.FATT= 000016
B.BFST= 000015   	FD.MNT= 100000   	F.DFNB= 000046   	NB.DEV= 000200   	S.FDB = 000140
B.NXBD= 000012   	FD.OSP= 004000   	F.DSPT= 000044   	NB.DIR= 000100   	S.FNAM= 000006
B.VBN = 000004   	FD.PLC= 000004   	F.DVNM= 000134   	NB.NAM= 000004   	S.FNB = 000036
CH.AND= 000001   	FD.PRN= 000004   	F.EFBK= 000010   	NB.SD1= 000400   	S.FNBW= 000017
CR    = 000015   	FD.PSE= 010000   	F.EFN = 000050   	NB.SD2= 001000   	S.FNTY= 000004
E$LCMT= ****** GX	FD.RAH= 000001   	F.EOBB= 000032   	NB.SNM= 000040   	S.FTYP= 000002
E$LMND= ****** GX	FD.RAN= 000002   	F.ERR = 000052   	NB.STP= 000020   	S.NFEN= 000020
E$LMOD= ****** GX	FD.REC= 000001   	F.FACC= 000043   	NB.SVR= 000010   	VT    = 000013
E$LNUM= ****** GX	FD.RWM= 000001   	F.FFBY= 000014   	NB.TYP= 000002   	$ALBLK= ****** GX
E$LNXT= ****** GX	FD.SDI= 000020   	F.FNAM= 000110   	NB.VER= 000001   	$CRELM= ****** GX
E$LSWT= ****** GX	FD.SQD= 000040   	F.FNB = 000102   	N.DID = 000024   	$CRSEG= ****** GX
E$LVMT= ****** GX	FD.TTY= 000004   	F.FTYP= 000116   	N.DVNM= 000032   	$CRVEL= ****** GX
E$R10 = ****** GX	FD.WBH= 000002   	F.FVER= 000120   	N.FID = 000000   	$CVLOK= ****** GX
E$R11 = ****** GX	FF    = 000014   	F.HIBK= 000004   	N.FNAM= 000006   	$CVRL = ****** GX
FA.APD= 000100   	FF.CHR= 000005   	F.LUN = 000042   	N.FTYP= 000014   	$DLCMT  000004RG
FA.CRE= 000010   	FF.NV = 000003   	F.MBCT= 000054   	N.FVER= 000016   	$ERMSG= ****** GX
FA.DLK= 001000   	FF.POE= 000002   	F.MBC1= 000055   	N.NEXT= 000022   	$FRHD = ****** GX
FA.ENB= 100000   	FF.RWD= 000001   	F.MBFG= 000056   	N.STAT= 000020   	$INPPT= ****** GX
FA.EXC= 002000   	FF.RWF= 000006   	F.NRBD= 000024   	N.UNIT= 000034   	$NBYTE= ****** GX
FA.EXT= 000004   	FF.SPC= 000004   	F.NREC= 000030   	OPSW    000002R  	$PHASE= ****** GX
FA.NSP= 000100   	FO.APD= 000106   	F.OVBS= 000030   	PAR$$$= 000000   	$RLCB = ****** GX
FA.POS= 010000   	FO.MFY= 000002   	F.RACC= 000016   	P$GHD = ****** GX	$SAVRG= ****** GX
FA.RD = 000001   	FO.RD = 000001   	F.RATT= 000001   	P$GSIZ= ****** GX	$STELM  000000RG    002
FA.RWD= 004000   	FO.UPD= 000006   	F.RCNM= 000034   	R$NAME= ****** GX	$STFNB= ****** GX
FA.SEQ= 040000   	FO.WRT= 000016   	F.RCTL= 000017   	R$SWTH= ****** GX	$STIMP  000006RG    002
FA.SHR= 000040   	F.ACTL= 000076   	F.RSIZ= 000002   	R$$11M= 000000   	$STINP  000022RG    002
FA.TMP= 000020   	F.ALOC= 000040   	F.RTYP= 000000   	R.FIX = 000001   	$UNLPG= ****** GX
FA.WCK= 020000   	F.BBFS= 000062   	F.SEQN= 000100   	R.SEQ = 000003   	$$    = 000001
FA.WRT= 000002   	F.BDB = 000070   	F.SPDV= 000072   	R.VAR = 000002   	.CLOSE= ****** G
FD.BLK= 000010   	F.BGBC= 000057   	F.SPUN= 000074   	SPA   = 000040   	.GETSQ= ****** G
FD.CCL= 000002   	F.BKDN= 000026   	F.STBK= 000036   	SW$CC = ****** GX	.OPFNB= ****** G
FD.COM= 020000   	F.BKDS= 000020   	F.UNIT= 000136   	SW$LB = ****** GX	.POINT= ****** GX
FD.CR = 000002   	F.BKEF= 000050   	F.URBD= 000020   	SW$MA = ****** GX	...GBL= 000000
FD.DIR= 000010   	F.BKP1= 000051   	F.VBN = 000064   	S$GELT= ****** GX	...TPC= 000140
FD.FTN= 000001   	F.BKST= 000024

. ABS.	000000	   000
      	000046	   001
$$STIN	000642	   002
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  2585 WORDS  ( 11 PAGES)
DYNAMIC MEMORY:  3828 WORDS  ( 14 PAGES)
ELAPSED TIME:  00:00:18
OBJ$:STINP,LIS$:STINP/-SP=SRC$:MACFLM,FCSPR,STINP
