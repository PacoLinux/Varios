RESLB	MACRO M1110  22-AUG-78 01:58  PAGE 2


      1						.TITLE	RESLB
      2						.IDENT	/01/
      3
      4					;
      5					; COPYRIGHT (C) 1976
      6					; COPYRIGHT (C)	1977
      7					; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
      8					;
      9					; THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ONLY ON A
     10					; SINGLE COMPUTER SYSTEM AND MAY  BE  COPIED   ONLY  WITH  THE
     11					; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE,  OR
     12					; ANY OTHER COPIES THEREOF, MAY NOT BE PROVIDED  OR  OTHERWISE
     13					; MADE AVAILABLE TO ANY OTHER PERSON   EXCEPT FOR  USE ON SUCH
     14					; SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE  TERMS.  TITLE
     15					; TO AND OWNERSHIP OF THE SOFTWARE SHALL AT ALL  TIMES  REMAIN
     16					; IN DEC.
     17					;
     18					; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
     19					; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
     20					; EQUIPMENT CORPORATION.
     21					;
     22					; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
     23					; ITS SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
     24					;
     25					; VERSION 01
     26					;
     27					; C. MONIA 10-MAY-76
     28					;
     29					; MODIFICATIONS:
     30					;
     31					; JAK099	23-MAY-77	;MAKE LB: THE DEFAULT LIBRARY DEVICE
     32					;
     33					;
     34					;
     35					; PARSE RESIDENT LIBRARY OPTION INPUTS
     36					;
     37					; MACRO LIBRARY CALLS
     38					;
     39
     40						.MCALL	CSI$,CSI$SW,CSI$SV,CSI$ND,CSI$1,CSI$2
     41	000000					CSI$
     42
     43					;
     44					; LOCAL DATA
     45					;
     46					; DEFAULT LIBRARY STRING
     47					;
     48
     49	000000					.PSECT	LBR$D,D,GBL
     50
     51	000000	   114 	   102 		LBDEV:	.ASCII	/LB/		;DEVICE						;JAK099
     52	000002				LBDVE:				; REF LABEL					;JAK099
     53	000002	   133 	   061 	   054 	LBDIR:	.ASCII	/[1,1]/		; DIRECTORY
	000005	   061 	   135
     54	000007				LBDRE:				; REF. LABEL
     55
     56	000000					.PSECT
RESLB	MACRO M1110  22-AUG-78 01:58  PAGE 2-1


     57
     58					;
     59					; CSI SWITCH BLOCK
     60					;
     61
     62	000000				SWTAB:	CSI$SW	RO,LD$ACC,$PARM+C.SIZE,CLEAR,,SVTAB
     63	000010					CSI$SW	RW,LD$ACC,$PARM+C.SIZE,SET,,SVTAB
     64	000020					CSI$ND
     65
     66					;
     67					; SWITCH VALUE DESCRIPTOR TABLE
     68					;
     69
     70	000022				SVTAB:	CSI$SV	OCTAL,$PARM+C.SIZE+2,2
     71	000026					CSI$ND
     72
     73					;+
     74					; **-$LBR-PARSE LIBRARY OR COMMON KEYWORD INPUT
     75					;
     76					; THIS ROUTINE IS CALLED BY THE PHASE 2 OPTION PROCESSOR
     77					; TO PARSE THE RESIDENT LIBRARY KEYWORD OPTIONS 'LIBR' OR
     78					; 'COMMON'. THE PARSED STRING DESCRIPTORS ARE PASSED AS
     79					; INPUT TO THE LIBRARY KEYWORD PROCESSOR
     80					;
     81					; INPUTS:
     82					;
     83					;	R0=ADDRESS OF CURRENT COMMAND BYTE
     84					;	R5=ADDRESS OF PARAMETER LIST
     85					;
     86					; OUTPUTS:
     87					;
     88					;	R0=ADDRESS OF NEXT BYTE IN COMMAND LINE
     89					;	R2=TERMINAL CHARACTER
     90					;	R5=ADDRESS FOLLOWING CSI BLOCK IN $PARM
     91					;	$PARM CONTAINS CSI BLOCK WITH PARSED STRING DESCR-
     92					;	IPTORS SETUP
     93					;
     94					;-
     95
     96	000030				$LBR::				;
     97	000030	010502 				MOV	R5,R2		; COPY ADDRESS OF PARAMETER LIST
     98	000032	012701 	000030 			MOV	#C.SIZE/2+2,R1	; SET SIZE OF DESCRIPTOR PLUS SWITCH WORDS
     99	000036				10$:				;
    100	000036	005022 				CLR	(R2)+		; CLEAR DESCRIPTOR
    101	000040					SOB	R1,10$		; LOOP
    102	000044	012765 	000000'	000010 		MOV	#LBDEV,C.DEVD+2(R5)	; SET DEFAULT DEVICE STRING DESCRIPTOR	;JAK099
    103	000052	012765 	000002 	000006 		MOV	#<LBDVE-LBDEV>,C.DEVD(R5) ;					;JAK099
    104	000060	012765 	000002'	000014 		MOV	#LBDIR,C.DIRD+2(R5) ; SET DEFAULT DIRECTORY STRING DESCR.
    105	000066	012765 	000005 	000012 		MOV	#<LBDRE-LBDIR>,C.DIRD(R5) ; ...
    106	000074	010001 				MOV	R0,R1		; COPY STRING POINTER
    107	000076	010046 				MOV	R0,-(SP)	; SAVE STRING POINTER
    108	000100	112702 	000040 			MOVB	#' ,R2		; SET CHARACTER FOR COMPARISON
    109	000104				20$:				;
    110	000104	111110 				MOVB	(R1),(R0)	; COMPRESS ALL NON-PRINTING CHARACTERS
    111	000106	001412 				BEQ	30$		; IF EQ, END OF LINE
    112	000110	005201 				INC	R1		; INCREMENT POINTER
    113	000112	121002 				CMPB	(R0),R2		; PASS CHARACTER?
RESLB	MACRO M1110  22-AUG-78 01:58  PAGE 2-2


    114	000114	101773 				BLOS	20$		; IF LOS NO
    115	000116	005200 				INC	R0		; INCREMENT BYTE POINTER
    116	000120	126027 	177777 	000073 		CMPB	-1(R0),#';	; COMMENT TERMINATOR?
    117	000126	001366 				BNE	20$		; IF NE NO
    118	000130	005002 				CLR	R2		; PASS REMAINING CHARACTERS
    119	000132	000764 				BR	20$		;
    120	000134				30$:				;
    121	000134	160001 				SUB	R0,R1		; COMPUTE NUMBER OF BYTES DISCARDED
    122	000136	160167 	000000G			SUB	R1,$LNDES	; ADJUST BYTE COUNT
    123	000142	012600 				MOV	(SP)+,R0	; RESET BYTE POINTER
    124	000144	010001 				MOV	R0,R1		; COPY POINTER
    125	000146				40$:				;
    126	000146	112002 				MOVB	(R0)+,R2	; GET A BYTE
    127	000150	001414 				BEQ	50$		; IF EQ END-OF-STRING
    128	000152	120227 	000073 			CMPB	R2,#';		; COMMENT TERMINATOR?
    129	000156	001411 				BEQ	50$		; IF EQ YES
    130	000160	120227 	000041 			CMPB	R2,#'!		; EXCLAMATION POINT TERMINATOR?
    131	000164	001406 				BEQ	50$		; IF EQ YES
    132	000166	120227 	000054 			CMPB	R2,#',		; COMMA TERMINATOR?
    133	000172	001403 				BEQ	50$		; IF EQ YES
    134	000174	120227 	000072 			CMPB	R2,#':		; COLON TERMINATOR?
    135	000200	001362 				BNE	40$		; IF NE NO
    136	000202				50$:				;
    137	000202	010046 				MOV	R0,-(SP)	; SAVE STRING POINTER
    138	000204	005300 				DEC	R0		; DECREMENT POINTER
    139	000206	010165 	000020 			MOV	R1,C.FILD+2(R5) ; SET FILENAME DESCRIPTOR
    140	000212	160100 				SUB	R1,R0		; COMPUTE LENGTH OF STRING
    141	000214	010065 	000016 			MOV	R0,C.FILD(R5)	; SET LENGTH OF STRING
    142	000220	012600 				MOV	(SP)+,R0	; RESTORE POINTER
    143	000222	062705 	000054 			ADD	#C.SIZE,R5	; ADJUST LIST POINTER
    144	000226					RETURN			; EXIT
    145
    146					;+
    147					; **-$ACC-CHECK RESIDENT LIBRARY ACCESS CODE
    148					;
    149					; THIS ROUTINE IS CALLED BY THE PHASE 2 PARSER TO VERIFY THAT
    150					; THE SPECIFIED RESIDENT LIBRARY ACCESS IS EITHER R/W OR R/O.
    151					;
    152					; INPUTS:
    153					;
    154					;	R0=ADDRESS OF CURRENT COMMAND BYTE
    155					;	R5=ADDRESS OF PARAMETER LIST
    156					;
    157					; OUTPUTS:
    158					;
    159					;	R0=ADDRESS OF NEXT BYTE IN COMMAND STRING
    160					;	R2=TERMINAL BYTE
    161					;	R5=ADDRESS OF NEXT AVAILABLE WORD IN PARAMETER LIST
    162					;	ADDRESS POINTED TO BY R5 ON INPUT RECEIVES  SETTING
    163					;	OF SWITCH LD$ACC. WHERE:
    164					;
    165					;	LD$ACC=1, INDICATES R/W ACCESS REQUESTED
    166					;	LD$ACC=0, INDICATES R/O ACCESS REQUESTED
    167					;
    168					;-
    169
    170	000230				$ACC::				;
RESLB	MACRO M1110  22-AUG-78 01:58  PAGE 2-3


    171	000230	005025 				CLR	(R5)+		; ASSUME NO ACCESS SPECIFIED
    172	000232	122027 	000122 			CMPB	(R0)+,#'R	;
    173	000236	001100 				BNE	ERXT		; IF NE ERROR
    174	000240	121027 	000117 			CMPB	(R0),#'O	; R/O ACCESS?
    175	000244	001406 				BEQ	10$		; IF EQ YES, EXIT
    176	000246	012765 	000000G	177776 		MOV	#LD$ACC,-2(R5)	; ASSUME R/W ACCESS
    177	000254	121027 	000127 			CMPB	(R0),#'W	; READ/WRITE ACCESS?
    178	000260	001067 				BNE	ERXT		; IF NE NO
    179	000262				10$:				;
    180	000262	005200 				INC	R0		; ADJUST BYTE POINTER
    181	000264	112002 				MOVB	(R0)+,R2	; GET TERMINAL BYTE
    182	000266					RETURN			;
    183
    184					;+
    185					; **-$RESLB-PARSE RESIDENT LIBRARY KEYWORD INPUT
    186					;
    187					; THIS SUBROUTINE IS CALLED BY THE PHASE 2 OPTION PARSER TO
    188					; PARSE THE RESIDENT LIBRARY KEYWORD OPTIONS 'RESLIB' AND
    189					; 'RESCOM'. THE PARSED STRING DESCRIPTOR IS FURNISHED AS INPUT
    190					; TO THE LIBRARY KEYWORD PROCESSOR.
    191					;
    192					; INPUTS:
    193					;
    194					;	R0=ADDRESS OF CURRENT COMMAND BYTE
    195					;	R5=ADDRESS OF PARAMETER LIST
    196					;
    197					; OUTPUTS:
    198					;
    199					;	R0=ADDRESS OF NEXT BYTE IN COMMAND LINE
    200					;	R2=TERMINAL CHARACTER
    201					;	$PARM CONTAINS PARSED STRING DESCRIPTORS FOR FILE
    202					;
    203					;-
    204
    205	000270				$RESLB::			;
    206	000270	010065 	000004 			MOV	R0,C.CMLD+2(R5)	; SET ADDRESS OF STRING
    207	000274	005046 				CLR	-(SP)		; CLEAR BRACKET COUNT
    208	000276				10$:				;
    209	000276	112002 				MOVB	(R0)+,R2	; GET A CHARACTER
    210	000300	001422 				BEQ	40$		; IF EQ, END-OF-STRING
    211	000302	120227 	000054 			CMPB	R2,#',		; COMMA TERMINATOR?
    212	000306	001415 				BEQ	30$		; IF EQ YES
    213	000310	120227 	000041 			CMPB	R2,#'!		; EXCLAMATION POINT TERMINATOR?
    214	000314	001414 				BEQ	40$		; IF EQ YES
    215	000316	120227 	000133 			CMPB	R2,#'[		; OPEN BRACKET?
    216	000322	001002 				BNE	20$		; IF NE NO
    217	000324	005216 				INC	(SP)		; INCREMENT BRACKET COUNT
    218	000326	000763 				BR	10$		; GET NEXT CHARACTER
    219	000330				20$:				;
    220	000330	120227 	000135 			CMPB	R2,#']		; CLOSE BRACKET?
    221	000334	001360 				BNE	10$		; IF NE NO, GET NEXT
    222	000336	005316 				DEC	(SP)		; DECREMENT BRACKET COUNT
    223	000340	000756 				BR	10$		; GET NEXT CHARACTER
    224	000342				30$:				;
    225	000342	005716 				TST	(SP)		; IN BRACKETS?
    226	000344	001354 				BNE	10$		; IF NE YES CONTINUE
    227	000346				40$:				;
RESLB	MACRO M1110  22-AUG-78 01:58  PAGE 2-4


    228	000346	005726 				TST	(SP)+		; OUTSIDE OF BRACKETS?
    229	000350	001033 				BNE	ERXT		; IF NE NO, ERROR
    230	000352	010001 				MOV	R0,R1		; SAVE STRING POINTER
    231	000354	166500 	000004 			SUB	C.CMLD+2(R5),R0	; COMPUTE SIZE OF STRING
    232	000360	005300 				DEC	R0		; ...
    233	000362	010065 	000002 			MOV	R0,C.CMLD(R5)	; SAVE SIZE OF STRING
    234	000366	005065 	000054 			CLR	C.SIZE(R5)	; CLEAR SWITCH WORD
    235	000372	005065 	000056 			CLR	C.SIZE+2(R5)	; CLEAR SWITCH VALUE
    236	000376					CSI$1	R5		; SCAN COMMAND STRING
    237	000404	103415 				BCS	ERXT		; IF C/S ERROR
    238	000406					CSI$2	,OUTPUT,#SWTAB	; PARSE COMMAND STRING
    239	000424	032760 	000000G	000024 		BIT	#LD$ACC,C.MKW1(R0) ; ACCESS SPECIFIED?
    240	000432	101402 				BLOS	ERXT		; IF C/S OR EQ ERROR
    241	000434	010100 				MOV	R1,R0		; RESTORE STRING POINTER
    242	000436					RETURN			;
    243	000440				ERXT:				;
    244	000440	005226 				INC	(SP)+		; CLEAN STACK
    245	000442	012701 	000000C			MOV	#<S$V1*400!E$R30>,R1 ; GET ERROR/SEVERITY
    246	000446	012702 	000000G			MOV	#$LNDES,R2	; POINT TO LINE DESCRIPTOR
    247	000452					CALLR	$ERMSG		; REPORT ERROR
    248
    249		000001 				.END
RESLB	MACRO M1110  22-AUG-78 01:58  PAGE 2-5
SYMBOL TABLE

CHR$$ = 000127   	CS.WLD= 000010   	C.SWAD= 000022   	LD$ACC= ****** GX	$ACC    000230RG
CNT$$ = 000002   	C.CMLD= 000002   	C.TYPR= 000000   	LF    = 000012   	$ERMSG= ****** GX
CR    = 000015   	C.DEVD= 000006   	ERXT    000440R  	PAR$$$= 000005   	$LBR    000030RG
CS.DIF= 000002   	C.DIRD= 000012   	E$R30 = ****** GX	R$$11M= 000000   	$LNDES= ****** GX
CS.DVF= 000004   	C.DSDS= 000006   	FF    = 000014   	SIZ$$ = 000002   	$PARM = ****** GX
CS.EQU= 000040   	C.FILD= 000016   	HT    = 000011   	SPA   = 000040   	$RESLB  000270RG
CS.INP= 000001   	C.MKW1= 000024   	LBDEV   000000R     002	SVTAB   000022R  	$$    = 000000
CS.MOR= 000020   	C.MKW2= 000026   	LBDIR   000002R     002	SWTAB   000000R  	.CSI1 = ****** G
CS.NMF= 000001   	C.SIZE= 000054   	LBDRE   000007R     002	S$V1  = ****** GX	.CSI2 = ****** G
CS.OUT= 000002   	C.STAT= 000001   	LBDVE   000002R     002	VT    = 000013

. ABS.	000000	   000
      	000456	   001
LBR$D 	000007	   002
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  2254 WORDS  ( 9 PAGES)
DYNAMIC MEMORY:  2772 WORDS  ( 10 PAGES)
ELAPSED TIME:  00:00:11
OBJ$:RESLB,LIS$:RESLB/-SP=SRC$:MACFLM,RESLB
