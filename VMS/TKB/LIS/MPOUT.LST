MPOUT	MACRO M1110  22-AUG-78 01:48  PAGE 3


      1						.TITLE	MPOUT
      2						.IDENT	/02/
      3					                                                                                ;**-1
      4					;
      5					;
      6					; COPYRIGHT (C) 1976
      7					; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
      8					;
      9					; THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ONLY ON A
     10					; SINGLE COMPUTER SYSTEM AND MAY  BE  COPIED   ONLY  WITH  THE
     11					; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE,  OR
     12					; ANY OTHER COPIES THEREOF, MAY NOT BE PROVIDED  OR  OTHERWISE
     13					; MADE AVAILABLE TO ANY OTHER PERSON   EXCEPT FOR  USE ON SUCH
     14					; SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE  TERMS.  TITLE
     15					; TO AND OWNERSHIP OF THE SOFTWARE SHALL AT ALL  TIMES  REMAIN
     16					; IN DEC.
     17					;
     18					; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
     19					; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
     20					; EQUIPMENT CORPORATION.
     21					;
     22					; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
     23					; ITS SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
     24					;
     25					;
     26					; VERSION 02
     27					;                                                                               ;**-1
     28					; D. N. CUTLER/C. MONIA 25-JAN-74/ J.A.KASSON 20-APR-76
     29					;
     30					; MODIFICATIONS
     31					;
     32					; NO.		DATE		PROGRAMMER
     33					; ---		----		----------
     34					;
     35					; 021		25-JAN-74	C. MONIA
     36					; 034		07-JAN-75	C. MONIA
     37					; 036		14-JAN-75	C. MONIA                                        ;**NEW**
     38					; 039		22-MAR-75	C. MONIA
     39					; 043		28-OCT-75	C. MONIA
     40					; 048		11-FEB-76	C. MONIA
     41					; 053		17-MAR-76	C. MONIA
     42					;
     43					; MONITOR DEPENDENT LOAD MAP OUTPUT ROUTINES
     44					;
     45					; MACRO LIBRARY CALLS
     46					;
     47
     48						.MCALL	GTIM$S,PUT$S
     49
     50					;
     51					; LOCAL DATA
     52					;
     53
     54	000000	127402 	046324 		BLKNM:	.RAD50	/. BLK./	;NAME OF BLANK CONTROL SECTION
     55	000004				$MPFLG::.BLKW	1		;MAP BUFFER TRUE/FALSE FLAG
     56	000006				$SYMBF::.BLKW	60.		;++034 SYMBOL OUTPUT BUFFER
     57
MPOUT	MACRO M1110  22-AUG-78 01:48  PAGE 3-1


     58	000000					.PSECT	MTXT$D,D,GBL
     59
     60
     61	000000	   045 	   062 	   122 	FMT10:	.ASCIZ	/%2R %P%2A  /	;
	000003	   040 	   045 	   120
	000006	   045 	   062 	   101
	000011	   040 	   040 	   000
     62	000014	   040 	   040 		FMT14:	.ASCII	/  /
     63	000016	   055 	   122 		FMT15:	.ASCII	/-R/
     64	000020	   045 	   106 	   045 	$FMT16::.ASCII	/%F%X   MEMORY ALLOCATION MAP  TKB %2R      PAGE %M%N/
	000023	   130 	   040 	   040
	000026	   040 	   115 	   105
	000031	   115 	   117 	   122
	000034	   131 	   040 	   101
	000037	   114 	   114 	   117
	000042	   103 	   101 	   124
	000045	   111 	   117 	   116
	000050	   040 	   115 	   101
	000053	   120 	   040 	   040
	000056	   124 	   113 	   102
	000061	   040 	   045 	   062
	000064	   122 	   040 	   040
	000067	   040 	   040 	   040
	000072	   040 	   120 	   101
	000075	   107 	   105 	   040
	000100	   045 	   115 	   045
	000103	   116
     65	000104	   045 	   062 	   122 		.ASCIZ	/%2R%15S%Y   %2Z%4N/
	000107	   045 	   061 	   065
	000112	   123 	   045 	   131
	000115	   040 	   040 	   040
	000120	   045 	   062 	   132
	000123	   045 	   064 	   116
	000126	   000
     66	000127	   045 	   064 	   116 	FMT21:	.ASCII	/%4N************%2N/	;
	000132	   052 	   052 	   052
	000135	   052 	   052 	   052
	000140	   052 	   052 	   052
	000143	   052 	   052 	   052
	000146	   045 	   062 	   116
     67	000151	   125 	   116 	   104 		.ASCIZ	/UNDEFINED REFERENCES: %2N/	;
	000154	   105 	   106 	   111
	000157	   116 	   105 	   104
	000162	   040 	   122 	   105
	000165	   106 	   105 	   122
	000170	   105 	   116 	   103
	000173	   105 	   123 	   072
	000176	   040 	   045 	   062
	000201	   116 	   000
     68	000203	   040 	   040 	   040 	FMT22:	.ASCIZ	/    %2R%N/
	000206	   040 	   045 	   062
	000211	   122 	   045 	   116
	000214	   000
     69	000215	   040 	   040 	   040 	FMT23:	.ASCIZ	/    %2R/
	000220	   040 	   045 	   062
	000223	   122 	   000
     70	000225	   124 	   117 	   124 	FMT42:	.ASCIZ	/TOTAL TASK SIZE: %M. WORDS%N/
MPOUT	MACRO M1110  22-AUG-78 01:48  PAGE 3-2


	000230	   101 	   114 	   040
	000233	   124 	   101 	   123
	000236	   113 	   040 	   123
	000241	   111 	   132 	   105
	000244	   072 	   040 	   045
	000247	   115 	   056 	   040
	000252	   127 	   117 	   122
	000255	   104 	   123 	   045
	000260	   116 	   000
     71	000262	   045 	   064 	   116 	FMT43:	.ASCII	/%4N*** TASK BUILDER STATISTICS:%2N/
	000265	   052 	   052 	   052
	000270	   040 	   124 	   101
	000273	   123 	   113 	   040
	000276	   102 	   125 	   111
	000301	   114 	   104 	   105
	000304	   122 	   040 	   123
	000307	   124 	   101 	   124
	000312	   111 	   123 	   124
	000315	   111 	   103 	   123
	000320	   072 	   045 	   062
	000323	   116
     72	000324	   045 	   064 	   123 		.ASCIZ	/%4STOTAL WORK FILE REFERENCES: %T.%N/
	000327	   124 	   117 	   124
	000332	   101 	   114 	   040
	000335	   127 	   117 	   122
	000340	   113 	   040 	   106
	000343	   111 	   114 	   105
	000346	   040 	   122 	   105
	000351	   106 	   105 	   122
	000354	   105 	   116 	   103
	000357	   105 	   123 	   072
	000362	   040 	   045 	   124
	000365	   056 	   045 	   116
	000370	   000
     73	000371	   045 	   064 	   123 	FMT44:	.ASCII	/%4SWORK  FILE  READS: %T.%N/
	000374	   127 	   117 	   122
	000377	   113 	   040 	   040
	000402	   106 	   111 	   114
	000405	   105 	   040 	   040
	000410	   122 	   105 	   101
	000413	   104 	   123 	   072
	000416	   040 	   045 	   124
	000421	   056 	   045 	   116
     74	000424	   045 	   064 	   123 		.ASCIZ	/%4SWORK  FILE WRITES: %T.%N/
	000427	   127 	   117 	   122
	000432	   113 	   040 	   040
	000435	   106 	   111 	   114
	000440	   105 	   040 	   127
	000443	   122 	   111 	   124
	000446	   105 	   123 	   072
	000451	   040 	   045 	   124
	000454	   056 	   045 	   116
	000457	   000
     75	000460	   045 	   064 	   123 	FMT45:	.ASCII	/%4SSIZE OF CORE POOL: %M. WORDS (%M. PAGES)%N/
	000463	   123 	   111 	   132
	000466	   105 	   040 	   117
	000471	   106 	   040 	   103
MPOUT	MACRO M1110  22-AUG-78 01:48  PAGE 3-3


	000474	   117 	   122 	   105
	000477	   040 	   120 	   117
	000502	   117 	   114 	   072
	000505	   040 	   045 	   115
	000510	   056 	   040 	   127
	000513	   117 	   122 	   104
	000516	   123 	   040 	   050
	000521	   045 	   115 	   056
	000524	   040 	   120 	   101
	000527	   107 	   105 	   123
	000532	   051 	   045 	   116
     76	000535	   045 	   064 	   123 		.ASCIZ	/%4SSIZE OF WORK FILE: %M. WORDS (%M. PAGES)%2N/
	000540	   123 	   111 	   132
	000543	   105 	   040 	   117
	000546	   106 	   040 	   127
	000551	   117 	   122 	   113
	000554	   040 	   106 	   111
	000557	   114 	   105 	   072
	000562	   040 	   045 	   115
	000565	   056 	   040 	   127
	000570	   117 	   122 	   104
	000573	   123 	   040 	   050
	000576	   045 	   115 	   056
	000601	   040 	   120 	   101
	000604	   107 	   105 	   123
	000607	   051 	   045 	   062
	000612	   116 	   000
     77	000614	   045 	   064 	   123 	FMT46:	.ASCIZ	/%4SELAPSED TIME:%3Z%N/
	000617	   105 	   114 	   101
	000622	   120 	   123 	   105
	000625	   104 	   040 	   124
	000630	   111 	   115 	   105
	000633	   072 	   045 	   063
	000636	   132 	   045 	   116
	000641	   000
     78	000642	   045 	   116 	   000 	FMT57:	.ASCIZ	/%N/
     79
     80						.EVEN
     81
     82	000176					.PSECT
     83
     84
     85					;+
     86					; **-$MPCAL-CALCULATE ADDRESS LIMITS OF SECTION AND RELOCATE
     87					;
     88					; INPUTS:
     89					;
     90					;	R0=ADDRESS OF SECTION TABLE ENTRY
     91					;	R2=PARAMETER BUFFER ADDRESS. BUFFER IS SETUP AS FOLLOWS
     92					;
     93					;		.WORD	C$SCUR		; CURRENT BASE
     94					;		.WORD	C$SCUR		; CURRENT BASE
     95					;	R2=>	.WORD	LENGTH		; LENGTH CONTRIBUTED BY MODULE
     96					;
     97					; OUTPUTS:
     98					;
     99					;	PARAMETER BUFFER SETUP AS FOLLOWS:
MPOUT	MACRO M1110  22-AUG-78 01:48  PAGE 3-4


    100					;
    101					;		.WORD	C$SCUR		; CURRENT BASE (RELOCATED)
    102					;		.WORD	TOP		; TOP ADDRESS CONTRIBUTED BY MODULE
    103					;		.WORD	LENGTH		; LENGTH CONTRIBUTED BY MODULE
    104					;		.WORD	LENGTH		; LENGTH CONTRIBUTED BY MODULE
    105					;
    106					;-
    107
    108	000176				$MPCAL::			;                                               ; 043
    109	000176	012212 				MOV	(R2)+,(R2)	; COPY LENGTH                                   ; 043
    110	000200	005742 				TST	-(R2)		; TEST LENGTH, ADJUST POINTER                   ; 043
    111	000202	001402 				BEQ	10$		; IF EQ ZERO LENGTH                             ; 043
    112	000204	061242 				ADD	(R2),-(R2)	;ADD LENGTH TO BASE ADDRESS                     ;**-1
    113	000206	005322 				DEC	(R2)+		;BACK OFF TO REAL ENDING ADDRESS
    114	000210	132760 	000000G	000000G	10$:	BITB	#CS$REL,C$SFLG(R0);ABS SECTION?
    115	000216	001432 				BEQ	20$		;IF EQ YES
    116	000220	032760 	000000C	000000G		BIT	#<CS$VAS*400!CS$LIB>,C$SFLG(R0);LIB SECTION?
    117	000226	001026 				BNE	20$		;IF NE YES
    118	000230	132760 	000000G	000001G		BITB	#CS$VSC,C$SFLG+1(R0) ; VIRTUAL SECTION?
    119	000236	001005 				BNE	15$		; IF NE YES
    120	000240	066742 	000000G			ADD	$OFFST,-(R2)	; RELOCATE ENDING ADDRESS
    121	000244	066742 	000000G			ADD	$OFFST,-(R2)	; RELOCATE STARTING ADDRESS
    122	000250	000415 				BR	20$		; EXIT
    123	000252				15$:				;
    124	000252					CALL	(PC)		; COMPUTE BASE ADDRESS
    125	000254	010046 				MOV	R0,-(SP)	; SAVE ADDRESS OF SECTION
    126	000256	016046 	000000G			MOV	C$SBSE(R0),-(SP) ; SAVE BASE ADDRESS
    127	000262	016046 	000000G			MOV	C$SLTH(R0),-(SP) ; SAVE LENGTH
    128
    129						.IF DF	V1145
    130
    131						CLR	R0		; CLEAR HIGH PART OF LENGTH
    132						MOV	-(R2),R1	; GET TOP ADDRESS
    133						DIV	(SP)+,R0	; DIVIDE
    134
    135						.IFF
    136
    137	000266	014200 				MOV	-(R2),R0	; GET TOP ADDRESS
    138	000270	012601 				MOV	(SP)+,R1	; GET LENGTH
    139	000272					CALL	$DIV		; DIVIDE
    140
    141						.ENDC
    142
    143	000276	062601 				ADD	(SP)+,R1	; RELOCATE ADDRESS
    144	000300	010112 				MOV	R1,(R2)		; SET ADDRESS
    145	000302	012600 				MOV	(SP)+,R0	; RESTORE R0
    146	000304				20$:	RETURN			;
    147
    148					;
    149					; CHECK FOR BLANK SECTION NAME
    150					;
    151
    152	000306	016022 	000000G		$MPCHK::	MOV	S$YM(R0),(R2)+	;INSERT FIRST HALF OF SYMBOL
    153	000312	016022 	000002G			MOV	S$YM+2(R0),(R2)+;INSERT SECOND HALF OF SYMBOL
    154	000316	001011 				BNE	10$		;IF NE SECOND HALF NONZERO
    155	000320	005762 	177774 			TST	-4(R2)		;TEST FIRST HALF
    156	000324	001006 				BNE	10$		;IF NE LEAVE AS IS
MPOUT	MACRO M1110  22-AUG-78 01:48  PAGE 3-5


    157	000326	016762 	177446 	177774 		MOV	BLKNM,-4(R2)	;SET DEFAULT BLANK SECTION NAME
    158	000334	016762 	177442 	177776 		MOV	BLKNM+2,-2(R2)	;
    159	000342				10$:	RETURN			;
    160
    161					;
    162					; EDIT SIZE
    163					;
    164
    165	000344	012212 			$MPEDT::	MOV	(R2)+,(R2)	;COPY ENDING ADDRESS
    166	000346	166212 	177774 			SUB	-4(R2),(R2)	;SUBTRACT STARTING ADDRESS
    167	000352	005212 				INC	(R2)		;INCREMENT TO MAKE LENGTH
    168	000354	012212 				MOV	(R2)+,(R2)	; COPY LENGTH                                   ; 043
    169	000356					RETURN
    170
    171					;
    172					; SET UP FILE NAME IN BUFFER
    173					;
    174
    175	000360	062701 	000102 		$MPFLE::	ADD	#F.FNB,R1	;POINT TO FILE NAME BLOCK
    176	000364	016122 	000006 			MOV	N.FNAM(R1),(R2)+;SET FILENAME
    177	000370	016122 	000010 			MOV	N.FNAM+2(R1),(R2)+;
    178	000374	016122 	000012 			MOV	N.FNAM+4(R1),(R2)+;
    179	000400	016122 	000014 			MOV	N.FTYP(R1),(R2)+;SET FILE TYPE
    180	000404	016122 	000016 			MOV	N.FVER(R1),(R2)+;SET FILE VERSION
    181	000410					RETURN			;
    182
    183					;
    184					; FLUSH SYMBOL BUFFER
    185					;
    186
    187	000412				$MPFSH::
    188	000412					SAVRG
    189	000416	105767 	177362 			TSTB	$MPFLG		;IS BUFFER EMPTY?
    190	000422	001005 				BNE	10$		;IF NE BUFFER FULL
    191	000424	012702 	000006'			MOV	#$SYMBF,R2	;ASSUME BUFFER EMPTY
    192	000430	005067 	177350 			CLR	$MPFLG		;MAKE SURE FLAG IS CLEAR
    193	000434					RETURN			;
    194	000436				10$:	CALL	$MPTLE		;PAGE FULL?
    195	000442	005005 				CLR	R5
    196	000444	012702 	000006'			MOV	#$SYMBF,R2	;ASSUME BUFFER EMPTY
    197	000450	116703 	177330 			MOVB	$MPFLG,R3	;GET BUFFER FLAG VALUE
    198	000454	012700 	000000G			MOV	#$OUTBF,R0		;ADDRESS OF OUTPUT BUFFER
    199	000460	012701 	000000'		20$:	MOV	#FMT10,R1
    200	000464					CALL	$EDMSG		;EDIT ONE COLUNM AT A TIME
    201	000470	060105 				ADD	R1,R5		;RUNNING TOTAL OF LINE LENGTH
    202	000472					SOB	R3,20$
    203	000476	010501 				MOV	R5,R1		;LENGTH IS EXPECTED IN R1
    204	000500					CALL	MPOUT2		;OUTPUT WHOLE LINE
    205	000504	012701 	000642'			MOV	#FMT57,R1		;END OF LINE INSERT CR-LF
    206	000510					CALL	$MPOUT
    207	000514					RETURN
    208
    209					;
    210					; MAP OUTPUT ROUTINE
    211					;
    212
    213	000516	012702 	000006'		$MPOUT::MOV	#$SYMBF,R2	;GET ADDRESS OF ARGUMENT BLOCK
MPOUT	MACRO M1110  22-AUG-78 01:48  PAGE 3-6


    214	000522	010246 			$MPOT1::MOV	R2,-(SP)	;SAVE BUFFER ADDRESS
    215	000524	010146 				MOV	R1,-(SP)	;SAVE FORMT ADDRESS
    216	000526					CALL	$MPTLE		;TEST FOR FULL PAGE
    217	000532	012601 				MOV	(SP)+,R1	;RESTORE FORMAT ADDRESS
    218	000534	012602 				MOV	(SP)+,R2	;RESTORE BUFFER ADDRESS
    219	000536	012700 	000000G		MPOT2:	MOV	#$OUTBF,R0	;GET ADDRESS OF OUTPUT BUFFER
    220	000542					CALL	$EDMSG		;EDIT OUTPUT MESSAGE
    221	000546	016700 	000000G		MPOUT2:	MOV	$MAPPT,R0	;GET MAP FILE RECORD BLOCK
    222	000552					PUT$S	R0,#$OUTBF,R1	; OUTPUT RECORD
    223	000570	103006 				BCC	30$		;IF CC OKAY
    224	000572	016002 	000000G			MOV	R$NAME(R0),R2	;GET ADDRESS OF NAME STRING
    225	000576	012701 				MOV	(PC)+,R1	;GET ERROR/SEVERITY
    226	000600	   000G	   000G			.BYTE	E$R25,S$V2	;FATAL-NO RETURN
    227	000602					CALL	$ERMSG		;OUTPUT ERROR MESSAGE
    228	000606	005067 	177172 		30$:	CLR	$MPFLG		;SET MAP FLAG TO "FALSE"
    229	000612	012702 	000006'			MOV	#$SYMBF,R2	;RETURN ADDRESS OF SYMBOL BUFFER
    230	000616					RETURN			;
    231
    232					;
    233					; TITLE - SKIPS TO NEXT PAGE AND OUTPUTS TITLE
    234					;
    235
    236	000620				$MPTLE::
    237	000620	026727 	000000G	000000G		CMP	$LNCNT,#P$LNTH	;PAGE FULL?
    238	000626	100424 				BMI	40$		;IF LT NO
    239	000630	016700 	000000G			MOV	$CRSEG,R0	;GET ADDRESS OF CURRENT SEGMENT
    240	000634	016067 	000000G	000000G		MOV	S$GNME(R0),$STTLE	;INSERT SEGMENT NAME
    241	000642	016067 	000002G	000002G		MOV	S$GNME+2(R0),$STTLE+2	;INTO SUBTITLE
    242	000650	005267 	000016G			INC	$TITLE+14.		; INCREMENT PAGE COUNT
    243	000654	016746 	177124 			MOV	$MPFLG,-(SP)		;SAVE BUFFER FLAG
    244	000660	012702 	000000G			MOV	#$TITLE,R2	;GET ADDRESS OF TITLE BUFFER
    245	000664	012701 	000020'			MOV	#$FMT16,R1	;GET ADDRESS OF TITLE FORMAT
    246	000670					CALL	MPOT2		;OUTPUT TITLE
    247	000674	012667 	177104 			MOV	(SP)+,$MPFLG	;RESTORE BUFFER FLAG
    248	000700				40$:
    249	000700					RETURN
    250
    251					                                                                                ; 043
    252					;+                                                                              ; 043
    253					; **-$MPSTS-OUTPUT TASK BUILDER STATISTICS                                      ; 043
    254					;                                                                               ; 043
    255					; THIS SUBROUTINE IS CALLED TO WRITE THE WORKFILE                               ; 043
    256					; USEAGE STATISTICS INTO THE MAP FILE                                           ; 043
    257					;                                                                               ; 043
    258					; INPUTS:                                                                       ; 043
    259					;                                                                               ; 043
    260					;	$BGTIM=STARTING TASK BUILD TIME                                         ; 043
    261					;	$FRSIZ=SIZE OF CORE POOL                                                ; 043
    262					;	$HGVAD=SIZE OF WORKFILE (IN WORDS)                                      ; 043
    263					;	$WRKAC=NUMBER OF WORKFILE ACCESSES (DOUBLE PRECISION)                   ; 043
    264					;	$WRKRD=NUMBER OF WORKFILE READS (DOUBLE PRECISION)                      ; 043
    265					;	$WRKWR=NUMBER OF WORKFILE WRITES (DOUBLE PRECISION)                     ; 043
    266					;                                                                               ; 043
    267					; OUTPUTS:                                                                      ; 043
    268					;                                                                               ; 043
    269					;	WORKFILE STATISTICS ARE APPENDED TO THE MAP FILE                        ; 043
    270					;                                                                               ; 043
MPOUT	MACRO M1110  22-AUG-78 01:48  PAGE 3-7


    271					;-                                                                              ; 043
    272					                                                                                ; 043
    273	000702				$MPSTS::			;                                               ; 043
    274	000702	012702 	000006'			MOV	#$SYMBF,R2	; GET ADDRESS OF PARAMETER STORAGE              ; 043
    275	000706	012722 	000000G			MOV	#$WRKAC,(R2)+	; GET POINTER TO WORK FILE ACCESS COUNT         ; 043
    276	000712	026727 	000000G	177771G		CMP	$LNCNT,#P$LNTH-7 ;ROOM FOR TITLE ON  THIS PAGE
    277	000720	003403 				BLE	5$		;IF LE YES
    278	000722	012767 	000000G	000000G		MOV	#P$LNTH,$LNCNT	;FORCE TO NEW PAGE
    279	000730				5$:
    280	000730	012701 	000262'			MOV	#FMT43,R1	; GET FORMAT STRING ADDRESS                     ; 043
    281	000734					CALL	$MPOUT		; OUTPUT TOTAL ACCESSES                         ; 043
    282	000740	012722 	000000G			MOV	#$WRKRD,(R2)+	; SET POINTER TO READ ACCESSES                  ; 043
    283	000744	012722 	000000G			MOV	#$WRKWR,(R2)+	; SET POINTER TO WRITE ACCESSES                 ; 043
    284	000750	012701 	000371'			MOV	#FMT44,R1	; GET ADDRESS OF FORMAT STRING                  ; 043
    285	000754					CALL	$MPOUT		; OUTPUT DISK ACCESS DATA                       ; 043
    286	000760	016712 	000000G			MOV	$FRSIZ,(R2)	; SET SIZE OF CORE POOL IN BYTES                ; 043
    287	000764	000241 				CLC			; CLEAR CARRY                                   ; 043
    288	000766	006012 				ROR	(R2)		; CONVERT TO WORDS                              ; 043
    289	000770	012212 				MOV	(R2)+,(R2)	; COPY SIZE                                     ; 043
    290	000772	105012 				CLRB	(R2)		; TRUNCATE TO NUMBER OF BLOCKS                  ; 043
    291	000774	000322 				SWAB	(R2)+		; CONVERT TO NUMBER OF BLOCKS                   ; 043
    292	000776	016712 	000000G			MOV	$HGVAD,(R2)	; COPY HIGH VIRTUAL ADDRESS                     ; 043
    293	001002	012212 				MOV	(R2)+,(R2)	; COPY ADDRESS                                  ; 043
    294	001004	062712 	000377 			ADD	#377,(R2)	; ROUND TO NEXT BLOCK                           ; 043
    295	001010	105012 				CLRB	(R2)		; TRUNCATE                                      ; 043
    296	001012	000312 				SWAB	(R2)		; CONVERT TO NUMBER OF BLOCKS                   ; 043
    297	001014	012701 	000460'			MOV	#FMT45,R1	; GET ADDRESS OF FORMAT                         ; 043
    298	001020					CALL	$MPOUT		; OUTPUT TO MAP FILE                            ; 043
    299	001024					GTIM$S	#$SYMBF		; GET CURRENT TIME                              ; 043
    300	001036	012701 	000003 			MOV	#3,R1		; SET LOOP COUNT                                ; 043
    301	001042	012700 	000014G			MOV	#$BGTIM+G.TICT,R0 ; POINT TO BEGINNING TIME                     ; 043
    302	001046	012702 	000022'			MOV	#$SYMBF+G.TICT,R2 ; POINT TO CURRENT TIME                        ; 043
    303	001052				10$:				;                                               ; 043
    304	001052	164042 				SUB	-(R0),-(R2)	; SUBTRACT TIME UNITS                           ; 043
    305	001054	100004 				BPL	20$		; IF PL NO UNDERFLOW                            ; 043
    306	001056	062712 	000074 			ADD	#60.,(R2)	; ADD IN BORROW                                 ; 043
    307	001062	005362 	177776 			DEC	-2(R2)		; DECREMENT NEXT HIGHER UNIT                    ; 043
    308	001066				20$:				;                                               ; 043
    309	001066					SOB	R1,10$		; LOOP                                          ; 043
    310	001072	012701 	000614'			MOV	#FMT46,R1	; GET FORMAT NUMBER                             ; 043
    311	001076					CALLR	$MPOT1		; OUTPUT TO MAP FILE                            ; 043
    312					                                                                                ; 043
    313
    314					;+
    315					; **-$MPUND-MAP UNDEFINED SYMBOLS
    316					;
    317					; THIS ROUTINE IS CALLED AT THE END OF THE PHASE 5 PROCESSING OF A SEG-
    318					; MENT TO OUTPUT A LIST OF UNDEFINED SYMBOLS IF ANY EXIST.
    319					;
    320					; INPUTS:
    321					;
    322					;	$CRSEG=ADDRESS OF CURRENT SEGMENT DESCRIPTOR.
    323					;
    324					; OUTPUTS:
    325					;
    326					;	LIST OF UNDEFINED SYMBOLS IS WRITTEN INTO THE LOAD MAP FILE.
    327					;-
MPOUT	MACRO M1110  22-AUG-78 01:48  PAGE 3-8


    328
    329	001102				$MPUND::CALL	$MPFSH		;FLUSH SYMBOL BUFFER
    330	001106	016700 	000000G			MOV	$CRSEG,R0	;GET ADDRESS OF CURRENT SEGMENT
    331	001112	005760 	000000G			TST	S$GUND(R0)	;ANY UNDEFINED SYMBOLS?
    332	001116	001417 				BEQ	20$		;IF EQ NONE
    333	001120	026727 	000000G	177766G		CMP	$LNCNT,#P$LNTH-10.	;ROOM FOR UNDEFINED SYMBOL
    334	001126	003403 				BLE	5$		;IF LE YES
    335	001130	012767 	000000G	000000G		MOV	#P$LNTH,$LNCNT	;FORCE NEW PAGE
    336	001136	012701 	000127'		5$:	MOV	#FMT21,R1	;GET ADDRESS OF FORMAT
    337	001142					CALL	$MPOUT		;OUTPUT HEADING
    338	001146				10$:
    339	001146	012701 	000516'			MOV	#$MPOUT,R1	;ADDRESS OF OUTPUT ROUTINE
    340	001152					CALL	$MPGUN		;GET UNDEFINED SYMBOL
    341	001156				20$:	RETURN			;
    342
    343					;+
    344					;
    345					; **-$MPGUN -GET UNDEFINED SYMBOL
    346					;
    347					; THIS ROUTINE IS CALLED TO FIND ANY UNDEFINED
    348					; SYMBOLS IN A SEGMENT
    349					;
    350					;-
    351	001160				$MPGUN::
    352	001160					SAVRG			;SAVE NON-VOLITITLE REGISTERS
    353	001164	016700 	000000G			MOV	$CRSEG,R0	;GET ADDRESS OF CURRENT SEGMENT
    354	001170	010105 				MOV	R1,R5
    355	001172	062700 	000000G			ADD	#S$GSTB,R0	;POINT TO SYMBOL TABLE
    356	001176	012746 	000000G			MOV	#$ISED,-(SP)	;SET ADDRESS OF SYMBOL EDIT ROUTINE
    357	001202				10$:	CALL	@(SP)+		;GET NEXT SYMBOL
    358	001204	103422 				BCS	30$		;IF CS DONE
    359	001206	132760 	000000G	000000G		BITB	#SY$DEF,S$YFLG(R0);SYMBOL DEFINED?
    360	001214	001372 				BNE	10$		;IF NE YES-BYPASS
    361	001216	132760 	000000G	000000G		BITB	#SY$WK,S$YFLG(R0)	;WEAK DEFINITION?
    362	001224	001366 				BNE	10$		;IF NE YES -BYPASS
    363	001226	016067 	000000G	176552 		MOV	S$YM(R0),$SYMBF	;SET SYMBOL NAME
    364	001234	016067 	000002G	176546 		MOV	S$YM+2(R0),$SYMBF+2;
    365	001242	012701 	000203'			MOV	#FMT22,R1	;GET ADDRESS OF FORMAT
    366	001246					CALL	(R5)		;OUTPUT SYMBOL
    367	001250	000754 				BR	10$	;GET NEXT UNDEFINED SYMBOL
    368	001252				30$:
    369	001252					RETURN
    370
    371
    372					;+
    373					;
    374					; MPPUT- OUTPUT UNDEFINED SYMBOLS TO TERMINAL
    375					;
    376					; INPUTS:
    377					;	$SYMBF CONTAINS SYMBOL
    378					;	R1 = ADDRESS OF FORMAT
    379					;
    380					; OUTPUTS:
    381					;	SYMBOL PRINTED ON TERMINAL
    382					;
    383					;-
    384	001254				$MPPUT::
MPOUT	MACRO M1110  22-AUG-78 01:48  PAGE 3-9


    385	001254	012701 	000215'			MOV	#FMT23,R1	;ADDRESS OF FORMAT
    386	001260	012702 	000006'			MOV	#$SYMBF,R2	;ADDRESS OF PARAMETER BUFFER
    387	001264	012700 	000000G			MOV	#$OUTBF,R0	;ADDRESS OF OUTPUT BUFFER
    388	001270					CALL	$EDMSG
    389	001274	010102 				MOV	R1,R2		;LENGTH OF OUTPUT BUFFER IN BYTES
    390	001276	012701 	000000G			MOV	#$OUTBF,R1	;ADDRESS OF PUTPUT BUFFER
    391	001302					CALL	$PUTCO		;OUTPUT SYMBOL
    392	001306					RETURN
    393
    394					;+
    395					; $MPSYM- INSERTS SYMBOL NAME AND VALUE INTO SYMBOL
    396					;	 BUFFER
    397					;
    398					;	INPUTS:
    399					;	   R2=SYMBOL BUFFER ADDRESS
    400					;	   R0=ADDRESS OF SYMBOL DESCRIPTOR
    401					;
    402					;	OUTPUT:
    403					;	   SYMBOL AND VALUE INSERTED INTO SYMBOL BUFFER
    404					;
    405					;-
    406	001310				$MPSYM::
    407	001310	016022 	000000G		10$:	MOV	S$YM(R0),(R2)+	;INSERT SYMBOL NAME
    408	001314	016022 	000002G			MOV	S$YM+2(R0),(R2)+;
    409	001320	016022 	000000G			MOV	S$YVAL(R0),(R2)+;INSERT SYMBOL VALUE
    410	001324	012722 	000014'			MOV	#FMT14,(R2)+	;ASSUME ABS SYMBOL
    411	001330	016001 	000000G			MOV	S$YCMT(R0),R1	;GET SECTION ENTRY ADDRESS
    412	001334	010246 				MOV	R2,-(SP)	; SAVE BUFFER POINTER
    413	001336					CALL	$CVRL		; CONVERT TO REAL ADDRESS
    414	001342	012602 				MOV	(SP)+,R2	; RESTORE POINTER
    415	001344	132760 	000000G	000000G		BITB	#CS$REL,C$SFLG(R0) ; ABS SECTION?
    416	001352	001412 				BEQ	20$		;IF EQ YES
    417	001354	012742 	000016'			MOV	#FMT15,-(R2)	;SET REL SUFFIX POINTER
    418	001360	032760 	000000C	000000G		BIT	#<CS$VSC!CS$VAS*400!CS$LIB>,C$SFLG(R0) ; LIB OR VIRTUAL SECTION?
    419	001366	001003 				BNE	15$		;IF NE YES
    420	001370	066742 	000000G			ADD	$OFFST,-(R2)	;ADD OFFSET BIAS
    421	001374	005722 				TST	(R2)+		;ADJUST R2
    422	001376	005722 			15$:	TST	(R2)+		;ADJUST R2
    423	001400				20$:
    424	001400					RETURN
    425
    426		000001 				.END
MPOUT	MACRO M1110  22-AUG-78 01:48  PAGE 3-10
SYMBOL TABLE

BLKNM   000000R  	FD.RAN= 000002   	F.DSPT= 000044   	MPOUT2  000546R  	S.FTYP= 000002
B.BBFS= 000010   	FD.REC= 000001   	F.DVNM= 000134   	NB.DEV= 000200   	S.NFEN= 000020
B.BFST= 000015   	FD.RWM= 000001   	F.EFBK= 000010   	NB.DIR= 000100   	VT    = 000013
B.NXBD= 000012   	FD.SDI= 000020   	F.EFN = 000050   	NB.NAM= 000004   	$BGTIM= ****** GX
B.VBN = 000004   	FD.SQD= 000040   	F.EOBB= 000032   	NB.SD1= 000400   	$CRSEG= ****** GX
CH.AND= 000001   	FD.TTY= 000004   	F.ERR = 000052   	NB.SD2= 001000   	$CVRL = ****** GX
CR    = 000015   	FD.WBH= 000002   	F.FACC= 000043   	NB.SNM= 000040   	$DIV  = ****** GX
CS$LIB= ****** GX	FF    = 000014   	F.FFBY= 000014   	NB.STP= 000020   	$EDMSG= ****** GX
CS$REL= ****** GX	FF.CHR= 000005   	F.FNAM= 000110   	NB.SVR= 000010   	$ERMSG= ****** GX
CS$VAS= ****** GX	FF.NV = 000003   	F.FNB = 000102   	NB.TYP= 000002   	$FMT16  000020RG    002
CS$VSC= ****** GX	FF.POE= 000002   	F.FTYP= 000116   	NB.VER= 000001   	$FRSIZ= ****** GX
C$SBSE= ****** GX	FF.RWD= 000001   	F.FVER= 000120   	N.DID = 000024   	$HGVAD= ****** GX
C$SFLG= ****** GX	FF.RWF= 000006   	F.HIBK= 000004   	N.DVNM= 000032   	$ISED = ****** GX
C$SLTH= ****** GX	FF.SPC= 000004   	F.LUN = 000042   	N.FID = 000000   	$LNCNT= ****** GX
E$R25 = ****** GX	FMT10   000000R     002	F.MBCT= 000054   	N.FNAM= 000006   	$MAPPT= ****** GX
FA.APD= 000100   	FMT14   000014R     002	F.MBC1= 000055   	N.FTYP= 000014   	$MPCAL  000176RG
FA.CRE= 000010   	FMT15   000016R     002	F.MBFG= 000056   	N.FVER= 000016   	$MPCHK  000306RG
FA.DLK= 001000   	FMT21   000127R     002	F.NRBD= 000024   	N.NEXT= 000022   	$MPEDT  000344RG
FA.ENB= 100000   	FMT22   000203R     002	F.NREC= 000030   	N.STAT= 000020   	$MPFLE  000360RG
FA.EXC= 002000   	FMT23   000215R     002	F.OVBS= 000030   	N.UNIT= 000034   	$MPFLG  000004RG
FA.EXT= 000004   	FMT42   000225R     002	F.RACC= 000016   	PAR$$$= 000000   	$MPFSH  000412RG
FA.NSP= 000100   	FMT43   000262R     002	F.RATT= 000001   	P$LNTH= ****** GX	$MPGUN  001160RG
FA.POS= 010000   	FMT44   000371R     002	F.RCNM= 000034   	R$NAME= ****** GX	$MPOT1  000522RG
FA.RD = 000001   	FMT45   000460R     002	F.RCTL= 000017   	R$$11M= 000000   	$MPOUT  000516RG
FA.RWD= 004000   	FMT46   000614R     002	F.RSIZ= 000002   	R.FIX = 000001   	$MPPUT  001254RG
FA.SEQ= 040000   	FMT57   000642R     002	F.RTYP= 000000   	R.SEQ = 000003   	$MPSTS  000702RG
FA.SHR= 000040   	FO.APD= 000106   	F.SEQN= 000100   	R.VAR = 000002   	$MPSYM  001310RG
FA.TMP= 000020   	FO.MFY= 000002   	F.SPDV= 000072   	SPA   = 000040   	$MPTLE  000620RG
FA.WCK= 020000   	FO.RD = 000001   	F.SPUN= 000074   	SY$DEF= ****** GX	$MPUND  001102RG
FA.WRT= 000002   	FO.UPD= 000006   	F.STBK= 000036   	SY$WK = ****** GX	$OFFST= ****** GX
FD.BLK= 000010   	FO.WRT= 000016   	F.UNIT= 000136   	S$GNME= ****** GX	$OUTBF= ****** GX
FD.CCL= 000002   	F.ACTL= 000076   	F.URBD= 000020   	S$GSTB= ****** GX	$PUTCO= ****** GX
FD.COM= 020000   	F.ALOC= 000040   	F.VBN = 000064   	S$GUND= ****** GX	$SAVRG= ****** GX
FD.CR = 000002   	F.BBFS= 000062   	F.VBSZ= 000060   	S$V2  = ****** GX	$STTLE= ****** GX
FD.DIR= 000010   	F.BDB = 000070   	G.TICP= 000016   	S$YCMT= ****** GX	$SYMBF  000006RG
FD.FTN= 000001   	F.BGBC= 000057   	G.TICT= 000014   	S$YFLG= ****** GX	$TITLE= ****** GX
FD.F11= 040000   	F.BKDN= 000026   	G.TIDA= 000004   	S$YM  = ****** GX	$WRKAC= ****** GX
FD.INS= 000010   	F.BKDS= 000020   	G.TIHR= 000006   	S$YVAL= ****** GX	$WRKRD= ****** GX
FD.ISP= 002000   	F.BKEF= 000050   	G.TIMI= 000010   	S.BFHD= 000020   	$WRKWR= ****** GX
FD.MNT= 100000   	F.BKP1= 000051   	G.TIMO= 000002   	S.FATT= 000016   	$$    = 000001
FD.OSP= 004000   	F.BKST= 000024   	G.TISC= 000012   	S.FDB = 000140   	$$$OST= 000020
FD.PLC= 000004   	F.BKVB= 000064   	G.TIYR= 000000   	S.FNAM= 000006   	.PUTSQ= ****** G
FD.PRN= 000004   	F.CHR = 000075   	HT    = 000011   	S.FNB = 000036   	...GBL= 000000
FD.PSE= 010000   	F.CNTG= 000034   	LF    = 000012   	S.FNBW= 000017   	...TPC= 000140
FD.RAH= 000001   	F.DFNB= 000046   	MPOT2   000536R  	S.FNTY= 000004

. ABS.	000000	   000
      	001402	   001
MTXT$D	000646	   002
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  2881 WORDS  ( 12 PAGES)
DYNAMIC MEMORY:  3828 WORDS  ( 14 PAGES)
ELAPSED TIME:  00:00:25
OBJ$:MPOUT,LIS$:MPOUT/-SP=SRC$:MACFLM,FCSPR,MPOUT
