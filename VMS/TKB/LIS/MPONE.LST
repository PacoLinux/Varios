MPONE	MACRO M1110  22-AUG-78 01:48  PAGE 2


      1						.TITLE	MPONE
      2						.IDENT	/03/
      3
      4					;
      5					; COPYRIGHT (C) 1977
      6					; COPYRIGHT (C) 1976
      7					; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
      8					;
      9					; THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ONLY ON A
     10					; SINGLE COMPUTER SYSTEM AND MAY  BE  COPIED   ONLY  WITH  THE
     11					; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE,  OR
     12					; ANY OTHER COPIES THEREOF, MAY NOT BE PROVIDED  OR  OTHERWISE
     13					; MADE AVAILABLE TO ANY OTHER PERSON   EXCEPT FOR  USE ON SUCH
     14					; SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE  TERMS.  TITLE
     15					; TO AND OWNERSHIP OF THE SOFTWARE SHALL AT ALL  TIMES  REMAIN
     16					; IN DEC.
     17					;
     18					; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
     19					; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
     20					; EQUIPMENT CORPORATION.
     21					;
     22					; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
     23					; ITS SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
     24					;
     25					;
     26					;
     27					; VERSION 03
     28					;                                                                               ;**-1
     29					; D. N. CUTLER/C. MONIA 25-JAN-74/ J.A. KASSON 20-APR-76
     30					;
     31					; MODIFICATIONS
     32					;
     33					; NO.		DATE		PROGRAMMER
     34					; ---		----		----------
     35					;
     36					; 021		25-JAN-74	C. MONIA
     37					; 034		07-JAN-75	C. MONIA
     38					; JAK100	 5-APR-77	; CHANGES FOR MULTIUSER TASKS
     39					;	JAK107	16-DEC-77	ADD  RE-ENTRANT CHECKPOINTABILITY "RC"
     40					;
     41
     42						.MCALL	GTIM$S
     43
     44					;
     45					; LOCAL MACROS
     46					;
     47					;+
     48					; GNSWT - CREATES TABLE OF TASK SWITCH OPTIONS AND
     49					;	  CORRESPONDING TEXT
     50					;
     51					;	A= OPTION SWITCH
     52					;	B=SWITCH NUEMONIC
     53					;	C=SWITCH FLAG VALUE WHEN TRUE
     54					;
     55					;
     56
     57						.MACRO GNSWT	A,B,C
MPONE	MACRO M1110  22-AUG-78 01:48  PAGE 2-1


     58						.WORD	A
     59						.ASCII	/-B,/
     60						.WORD	C
     61						.ENDM
     62
     63
     64
     65	000000					.PSECT	STBL$D,D,GBL
     66	000000				OPSW:			;SWITCH OPTION VECTOR
     67
     68						.IF	NDF	R$$11M
     69
     70						GNSWT	SW$FP,FP,1
     71						GNSWT	SW$AB,AB,0
     72						GNSWT	SW$CP,CP,0
     73						GNSWT	SW$DS,DS,0
     74						GNSWT	SW$FX,FX,0
     75						GNSWT	SW$DA,DA,1
     76						GNSWT	SW$PI,PI,1
     77						GNSWT	SW$PR,PR,1
     78						GNSWT	SW$TR,TR,1
     79
     80						.IFF
     81
     82	000000					GNSWT	SW$AC,AC,1
     83	000010					GNSWT	SW$ALO,AL,0
     84	000020					GNSWT	SW$CM,CM,1
     85	000030					GNSWT	SW$CP,CP,0
     86	000040					GNSWT	SW$DA,DA,1
     87	000050					GNSWT	SW$EA,EA,1
     88	000060					GNSWT	SW$FP,FP,1
     89	000070					GNSWT	SW$NH,HD,0
     90	000100					GNSWT	SW$NT,NT,1
     91	000110					GNSWT	SW$PI,PI,1
     92	000120					GNSWT	SW$PM,PM,1
     93	000130					GNSWT	SW$PR,PR,1
     94	000140					GNSWT	SW$NS,SE,0
     95	000150					GNSWT	SW$SL,SL,1
     96	000160					GNSWT	SW$TR,TR,1
     97	000170					GNSWT	SW$MU,MU,1							;JAK107
     98
     99						.ENDC
    100
    101		000020 			OPSWN=<.-OPSW>/8.		;NUMBER OF OPTIONS
    102
    103					 										;JAK107
    104	000200				SWOVR:				; OVERFLOW SWITCH OPTION VECTOR			;JAK107
    105					 										;JAK107
    106	000200					GNSWT	RO$CHK,RC,0							;JAK107
    107					 										;JAK107
    108		000001 			SWOVRN=<.-SWOVR>/8.		; NUMBER OF OVERFLOW OPTIONS			;JAK107
    109
    110	000000					.PSECT	MTX1$D,D,GBL
    111
    112	000000	   117 	   104 	   124 	FMT6:	.ASCIZ	/ODT XFR ADDRESS: %P%N/;
	000003	   040 	   130 	   106
	000006	   122 	   040 	   101
MPONE	MACRO M1110  22-AUG-78 01:48  PAGE 2-2


	000011	   104 	   104 	   122
	000014	   105 	   123 	   123
	000017	   072 	   040 	   045
	000022	   120 	   045 	   116
	000025	   000
    113	000026	   120 	   122 	   107 	FMT7:	.ASCIZ	/PRG XFR ADDRESS: %P%N/;
	000031	   040 	   130 	   106
	000034	   122 	   040 	   101
	000037	   104 	   104 	   122
	000042	   105 	   123 	   123
	000045	   072 	   040 	   045
	000050	   120 	   045 	   116
	000053	   000
    114	000054	   123 	   124 	   101 	FMT20:	.ASCIZ	/STACK    LIMITS: %P %P %P %U.%N/;
	000057	   103 	   113 	   040
	000062	   040 	   040 	   040
	000065	   114 	   111 	   115
	000070	   111 	   124 	   123
	000073	   072 	   040 	   045
	000076	   120 	   040 	   045
	000101	   120 	   040 	   045
	000104	   120 	   040 	   045
	000107	   125 	   056 	   045
	000112	   116 	   000
    115	000114	   111 	   104 	   105 	FMT23:	.ASCIZ	/IDENTIFICATION : %2R%N/;
	000117	   116 	   124 	   111
	000122	   106 	   111 	   103
	000125	   101 	   124 	   111
	000130	   117 	   116 	   040
	000133	   072 	   040 	   045
	000136	   062 	   122 	   045
	000141	   116 	   000
    116	000143	   124 	   101 	   123 	FMT24:	.ASCII	/TASK ATTRIBUTES: /
	000146	   113 	   040 	   101
	000151	   124 	   124 	   122
	000154	   111 	   102 	   125
	000157	   124 	   105 	   123
	000162	   072 	   040
    117		000020 				.REPT	OPSWN
    118						.ASCII	/%VA/
    119						.ENDR
    120	000244	   045 	   116 	   000 		.ASCIZ	/%N/
    121	000247	   124 	   101 	   123 	FMT42:	.ASCIZ	/TASK ADDRESS LIMITS: %P %P%N/
	000252	   113 	   040 	   101
	000255	   104 	   104 	   122
	000260	   105 	   123 	   123
	000263	   040 	   114 	   111
	000266	   115 	   111 	   124
	000271	   123 	   072 	   040
	000274	   045 	   120 	   040
	000277	   045 	   120 	   045
	000302	   116 	   000
    122	000304	   124 	   117 	   124 	FMT43:	.ASCIZ	/TOTAL  TASK  SIZE  : %T. WORDS%N/
	000307	   101 	   114 	   040
	000312	   040 	   124 	   101
	000315	   123 	   113 	   040
	000320	   040 	   123 	   111
MPONE	MACRO M1110  22-AUG-78 01:48  PAGE 2-3


	000323	   132 	   105 	   040
	000326	   040 	   072 	   040
	000331	   045 	   124 	   056
	000334	   040 	   127 	   117
	000337	   122 	   104 	   123
	000342	   045 	   116 	   000
    123	000345	   120 	   101 	   122 	FMT51:	.ASCIZ	/PARTITION NAME : %2R%N/
	000350	   124 	   111 	   124
	000353	   111 	   117 	   116
	000356	   040 	   116 	   101
	000361	   115 	   105 	   040
	000364	   072 	   040 	   045
	000367	   062 	   122 	   045
	000372	   116 	   000
    124	000374	   045 	   120 	   040 	FMT47:	.ASCIZ	/%P  %P  %P  %U.  %VS%2R%N/
	000377	   040 	   045 	   120
	000402	   040 	   040 	   045
	000405	   120 	   040 	   040
	000410	   045 	   125 	   056
	000413	   040 	   040 	   045
	000416	   126 	   123 	   045
	000421	   062 	   122 	   045
	000424	   116 	   000
    125	000426	   045 	   064 	   116 	FMT48:	.ASCIZ	/%4N%X OVERLAY DESCRIPTION:%2N/
	000431	   045 	   130 	   040
	000434	   117 	   126 	   105
	000437	   122 	   114 	   101
	000442	   131 	   040 	   104
	000445	   105 	   123 	   103
	000450	   122 	   111 	   120
	000453	   124 	   111 	   117
	000456	   116 	   072 	   045
	000461	   062 	   116 	   000
    126	000464	   055 	   055 	   055 	FMT49:	.ASCIZ	/----    ---        ------%N/
	000467	   055 	   040 	   040
	000472	   040 	   040 	   055
	000475	   055 	   055 	   040
	000500	   040 	   040 	   040
	000503	   040 	   040 	   040
	000506	   040 	   055 	   055
	000511	   055 	   055 	   055
	000514	   055 	   045 	   116
	000517	   000
    127	000520	   102 	   101 	   123 	FMT50:	.ASCIZ	/BASE    TOP        LENGTH%N/
	000523	   105 	   040 	   040
	000526	   040 	   040 	   124
	000531	   117 	   120 	   040
	000534	   040 	   040 	   040
	000537	   040 	   040 	   040
	000542	   040 	   114 	   105
	000545	   116 	   107 	   124
	000550	   110 	   045 	   116
	000553	   000
    128	000554	   124 	   101 	   123 	FMT53:	.ASCIZ	/TASK  UIC      : [%O,%O]%N/
	000557	   113 	   040 	   040
	000562	   125 	   111 	   103
	000565	   040 	   040 	   040
MPONE	MACRO M1110  22-AUG-78 01:48  PAGE 2-4


	000570	   040 	   040 	   040
	000573	   072 	   040 	   133
	000576	   045 	   117 	   054
	000601	   045 	   117 	   135
	000604	   045 	   116 	   000
    129	000607	   124 	   101 	   123 	FMT54:	.ASCIZ	/TASK    NAME   : %2R%N/
	000612	   113 	   040 	   040
	000615	   040 	   040 	   116
	000620	   101 	   115 	   105
	000623	   040 	   040 	   040
	000626	   072 	   040 	   045
	000631	   062 	   122 	   045
	000634	   116 	   000
    130	000636	   124 	   101 	   123 	FMT55:	.ASCIZ	/TASK  PRIORITY : %M.%N/
	000641	   113 	   040 	   040
	000644	   120 	   122 	   111
	000647	   117 	   122 	   111
	000652	   124 	   131 	   040
	000655	   072 	   040 	   045
	000660	   115 	   056 	   045
	000663	   116 	   000
    131	000665	   115 	   101 	   120 	FMT56:	.ASCIZ	/MAPPED  ARRAY  AREA: %T. WORDS%N/
	000670	   120 	   105 	   104
	000673	   040 	   040 	   101
	000676	   122 	   122 	   101
	000701	   131 	   040 	   040
	000704	   101 	   122 	   105
	000707	   101 	   072 	   040
	000712	   045 	   124 	   056
	000715	   040 	   127 	   117
	000720	   122 	   104 	   123
	000723	   045 	   116 	   000
    132	000726	   124 	   101 	   123 	FMT57:	.ASCIZ	/TASK   EXTENSION   : %T. WORDS%N/
	000731	   113 	   040 	   040
	000734	   040 	   105 	   130
	000737	   124 	   105 	   116
	000742	   123 	   111 	   117
	000745	   116 	   040 	   040
	000750	   040 	   072 	   040
	000753	   045 	   124 	   056
	000756	   040 	   127 	   117
	000761	   122 	   104 	   123
	000764	   045 	   116 	   000
    133	000767	   124 	   117 	   124 	FMT60:	.ASCIZ	/TOTAL ADDRESS WINDOWS: %M.%N/
	000772	   101 	   114 	   040
	000775	   101 	   104 	   104
	001000	   122 	   105 	   123
	001003	   123 	   040 	   127
	001006	   111 	   116 	   104
	001011	   117 	   127 	   123
	001014	   072 	   040 	   045
	001017	   115 	   056 	   045
	001022	   116 	   000
    134	001024	   124 	   101 	   123 	FMT61:	.ASCIZ	/TASK  IMAGE  SIZE  : %T. WORDS%N/
	001027	   113 	   040 	   040
	001032	   111 	   115 	   101
	001035	   107 	   105 	   040
MPONE	MACRO M1110  22-AUG-78 01:48  PAGE 2-5


	001040	   040 	   123 	   111
	001043	   132 	   105 	   040
	001046	   040 	   072 	   040
	001051	   045 	   124 	   056
	001054	   040 	   127 	   117
	001057	   122 	   104 	   123
	001062	   045 	   116 	   000
    135	001065	   122 	   055 	   127 	FMT62:	.ASCIZ	/R-W DISK BLK LIMITS: %P %P %P %U.%N/;				;JAK100
	001070	   040 	   104 	   111
	001073	   123 	   113 	   040
	001076	   102 	   114 	   113
	001101	   040 	   114 	   111
	001104	   115 	   111 	   124
	001107	   123 	   072 	   040
	001112	   045 	   120 	   040
	001115	   045 	   120 	   040
	001120	   045 	   120 	   040
	001123	   045 	   125 	   056
	001126	   045 	   116 	   000
    136	001131	   122 	   055 	   117 	FMT63:	.ASCIZ	/R-O DISK BLK LIMITS: %P %P %P %U.%N/;				;JAK100
	001134	   040 	   104 	   111
	001137	   123 	   113 	   040
	001142	   102 	   114 	   113
	001145	   040 	   114 	   111
	001150	   115 	   111 	   124
	001153	   123 	   072 	   040
	001156	   045 	   120 	   040
	001161	   045 	   120 	   040
	001164	   045 	   120 	   040
	001167	   045 	   125 	   056
	001172	   045 	   116 	   000
    137	001175	   040 	   000 		BLANK:	.ASCIZ	/ /
    138
    139
    140						.EVEN
    141
    142	000000					.PSECT
    143					;	LOCAL DATA
    144					;
    145	000000				TEMP:	.BLKW	2	;TEMPORARY USED TO CALC LENGTHS
    146	000004				TOTAL:	.BLKW	2	;TOTAL STORAGE
    147	000010				TAB:	.BLKW	1		;INDENT SPACES PER LEVEL
    148	000012				IDENT:	.BLKW	1		;TOTAL INDENT FOR A LEVEL
    149	000014				ELSWT:	.BLKW	1	; TEMPORARY ELEMENT SWITCH WORD				;JAK100
    150
    151					;;+
    152					; **-$MPHDG-MAP HEADING
    153					;
    154					; THIS ROUTINE IS CALLED TO WRITE A HEADING INTO THE LOAD MAP FILE
    155					;
    156					; INPUTS:
    157					;
    158					;	$TSKPT=ADDRESS OF TASK IMAGE FILE RECORD BLOCK.
    159					;
    160					; OUTPUTS:
    161
    162					;	MAP HEADING IS WRITTEN INTO THE LOAD MAP FILE.
MPONE	MACRO M1110  22-AUG-78 01:48  PAGE 2-6


    163					;-
    164
    165	000016				$MPHDG::
    166	000016					SAVRG			;SAVE NON-VOLATILE REGISTERS
    167	000022	012702 	000000G			MOV	#$TITLE,R2	;GET ADDRESS OF TITLE BUFFER
    168	000026					CALL	MPTSK		;SETUP TASK NAME
    169	000032	016722 	000000G			MOV	$VERSN,(R2)+	;INSERT VERSION OF TKB
    170	000036	016722 	000002G			MOV	$VERSN+2,(R2)+	;
    171	000042	012722 	000001 			MOV	#1,(R2)+	;START PAGE COUNT
    172	000046	005022 				CLR	(R2)+		;INSERT BLANKS FOR SEGMENT NAME
    173	000050	005022 				CLR	(R2)+		;
    174	000052	010203 				MOV	R2,R3
    175	000054					GTIM$S	R3		;GET TIME PARAMETERS
    176	000064	012701 	000000G			MOV	#$FMT16,R1	;GET ADDRESS OF TITLE FORMAT
    177	000070	012702 	000000G			MOV	#$TITLE,R2	;GET ADDRESS OF TITLE BUFFER
    178	000074					CALL	$MPOT1		;PRINT TITLE
    179	000100	012702 	000000G			MOV	#$TNAME,R2	;ADDRESS OF TASK NAME
    180	000104	005712 				TST	(R2)		;TASK NAME SPECIFIED?
    181	000106	001404 				BEQ	10$		;IF EQ NO - DO PAR NAME
    182	000110	012701 	000607'			MOV	#FMT54,R1	;ADDRESS OF FORMAT
    183	000114					CALL	$MPOT1		;PRINT
    184	000120				10$:
    185	000120	012702 	000000G			MOV	#$PNAME,R2	;GET ADDRESS OF PARITION NAME
    186	000124	012701 	000345'			MOV	#FMT51,R1	;GET ADDRESS OF FORMAT
    187	000130					CALL	$MPOT1		;OUTPUT PARTITION NAME
    188	000134	012702 	000000G			MOV	#$IDENT,R2	;GET ADDR OF PROGRAM IDENTIFICATION
    189	000140	012701 	000114'			MOV	#FMT23,R1	;GET ADDRESS OF FORMAT
    190	000144					CALL	$MPOT1		;OUTPUT PRG IDENTIFICATION
    191	000150	116722 	000001G			MOVB	$TKUIC+1,(R2)+	;GET GROUP CODE
    192	000154	105022 				CLRB	(R2)+		;CLEAR HIGH BYTE OF CODE
    193	000156	116722 	000000G			MOVB	$TKUIC,(R2)+	;GET PROGRAMMER CODE
    194	000162	105022 				CLRB	(R2)+		;CLEAR HIGH BYTE OF PROGRAMMER CODE
    195	000164	012701 	000554'			MOV	#FMT53,R1	;GET ADDRESS OF FORMAT
    196	000170					CALL	$MPOUT		;OUTPUT UIC
    197	000174	012702 	000000G			MOV	#$SYMBF,R2
    198	000200	016712 	000000G			MOV	$PRIOR,(R2)	;ADDRESS OF TASK'S PRIORITY
    199	000204	001404 				BEQ	20$		;IF EQ SKIP
    200	000206	012701 	000636'			MOV	#FMT55,R1	;ADDRESS OF FORMAT
    201	000212					CALL 	$MPOUT		;PRINT
    202	000216				20$:
    203	000216	016700 	000000G			MOV	$RTSEG,R0	;VIRTUAL ADDRESS OF ROOT
    204	000222					CALL	$ADRSM		; SET ADDRESS LIMITS
    205	000226	012702 	000000G			MOV	#$SYMBF,R2	;BUFFER ADDRESS
    206	000232	005767 	000000G			TST	$STACK		;ANY STACK SPECIFIED?
    207	000236	001416 				BEQ	30$		;IF EQ NO
    208	000240	016712 	000000G			MOV	$BEGRW,(R2)	;SET BASE ADDRESS OF STACK
    209	000244	066712 	000000G			.IIF   DF  R$$11M, ADD	$HDSIZ,(R2)	; INCLUDE HEADER
    210	000250	012212 				MOV	(R2)+,(R2)	;COPY BASE ADDRESS
    211	000252	005322 				DEC	(R2)+		;BACK OFF BY ONE
    212	000254	016712 	000000G			MOV	$STACK,(R2)	;SET LENGTH OF STACK
    213	000260	012212 				MOV	(R2)+,(R2)	; COPY STACK LENGTH                             ; 043
    214	000262	064242 				ADD	-(R2),-(R2)	; ADD BASE TO LENGTH                            ; 043
    215	000264	012701 	000054'			MOV	#FMT20,R1	;GET ADDRESS OF FORMAT
    216	000270					CALL	$MPOUT		;OUTPUT STACK LIMITS
    217	000274				30$:
    218	000274	012702 	000000G			MOV	#$ODTAD,R2	;GET ODT VECTOR ADDRESS
    219	000300	022712 	000001 			CMP	#1,(R2)		;ODT SPECIFIED?
MPONE	MACRO M1110  22-AUG-78 01:48  PAGE 2-7


    220	000304	001404 				BEQ	40$		;IF EQ NO
    221	000306	012701 	000000'			MOV	#FMT6,R1	;GET ADDRESS OF FORMAT
    222	000312					CALL	$MPOT1		;OUTPUT ODT TRANSFER ADDRESS
    223	000316	012702 	000000G		40$:	MOV	#$XFRAD,R2	;GET PRG VECTOR ADDRESS
    224	000322	022712 	000001 			CMP	#1,(R2)		;PRG SPECIFIED?
    225	000326	001404 				BEQ	50$		;IF EQ NO
    226	000330	012701 	000026'			MOV	#FMT7,R1	;GET ADDRESS OF FORMAT
    227	000334					CALL	$MPOT1		;OUTPUT PRG XFR ADDRESS
    228	000340				50$:				;
    229	000340	016701 	000000G			MOV	$TSKNM,R1	; GET ADDRESS OF TASK NAME BLOCK
    230	000344	001407 				BEQ	51$		; IF EQ NO TASK FILE
    231	000346					CALL	$CVRL		; CONVERT TO REAL ADDRESS
    232	000352	016001 	000000G			MOV	E$LSWT(R0),R1	; GET TASK FILE SWITCH WORD
    233	000356	010167 	177432 			MOV	R1,ELSWT ; SAVE SWITCH WORD FOR LATER				;JAK100
    234	000362	000411 				BR	52$		;
    235	000364				51$:				;
    236	000364	016701 	000000G			MOV	$STBNM,R1	; GET ADDRESS OF STB FILE NAME BLOCK
    237	000370	001507 				BEQ	95$		; IF EQ NO STB FILE                             ; 043
    238	000372					CALL	$CVRL		; CONVERT TO REAL ADDRESS
    239	000376	016001 	000000G			MOV	E$LSWT(R0),R1	; GET STB FILE SWITCH WORD
    240	000402	042701 	000000C			BIC	#^C<SW$PI!SW$NH>,R1 ; ISOLATE /PI, /NH SWITCHES
    241	000406				52$:				;
    242						.IF	DF	R$$11M
    243
    244	000406	032701 	000000G			BIT	#SW$AC,R1	;++021 'ACP' TASK
    245	000412	001402 				BEQ	60$		;++021 IF EQ NO
    246	000414	052701 	000000G			BIS	#SW$PR,R1	;++021 SET '/PR' SWITCH
    247
    248						.ENDC
    249
    250	000420				60$:
    251	000420	016703 	000000G			MOV	$DFTSK,R3	;EXCLUSIVE OR
    252	000424	010102 				MOV	R1,R2		;DEFAULT SWITCH WORD
    253	000426	040301 				BIC	R3,R1		;SWITCH WORD
    254	000430	040203 				BIC	R2,R3		;
    255	000432	050301 				BIS	R3,R1		;
    256	000434	001465 				BEQ	95$		; IF EQ NO OPTIONS SELECTED                     ; 043
    257	000436	012705 	000000'			MOV	#OPSW,R5	;GET ADDRESS OF SWITCH VECTOR
    258	000442	012704 	000020 			MOV	#OPSWN,R4	;GET REPEAT COUNT
    259	000446	012702 	000000G			MOV	#$SYMBF,R2	;GET ADDRESS OF SYMBOL BUFFER
    260	000452					CALL	62$		; GET SWITCH OPTIONS				;JAK107
    261	000456	012705 	000200'			MOV	#SWOVR,R5	; GET ADDRESS OF OVERFLOW SWITCH VECTOR		;JAK107
    262	000462	012704 	000001 			MOV	#SWOVRN,R4	; GET NUMBER OF OVERFLOW SWITCHES		;JAK107
    263	000466					CALL	62$		; GET OVERFLOW OPTIONS				;JAK107
    264	000472	000431 				BR	77$		; 						;JAK107
    265
    266
    267	000474				62$:
    268	000474	032501 				BIT	(R5)+,R1	;OPTION SELECTED?
    269	000476	001422 				BEQ	70$		;IF EQ NO
    270	000500	012722 	000004 			MOV	#4,(R2)+	;
    271	000504	010522 				MOV	R5,(R2)+	;INSERT OPTION TEXT ADDRESS
    272	000506	005003 				CLR	R3		;
    273	000510	036567 	177776 	000000G		BIT	-2(R5),$DFTSK	;GET SWITCH DEFAULT VALUE
    274	000516	001401 				BEQ	65$		; IF EQ NOT SET
    275	000520	005203 				INC	R3		;SET SWITCH BIT
    276	000522	022525 			65$:	CMP	(R5)+,(R5)+	;MOVE OVER CODE
MPONE	MACRO M1110  22-AUG-78 01:48  PAGE 2-8


    277	000524	020325 				CMP	R3,(R5)+	;DEFAULT=YES?
    278	000526	001410 				BEQ	75$		;IF EQ YES
    279	000530	062762 	000001 	177776 		ADD	#1,-2(R2)		;OMIT "-" FROM TEXT
    280	000536	005362 	177774 			DEC	-4(R2)		;DECREMENT COUNT
    281	000542	000402 				BR	75$
    282	000544				70$:
    283	000544	022525 				CMP	(R5)+,(R5)+	;ADVANCE TO NEXT OPTION
    284	000546	005725 				TST	(R5)+
    285	000550				75$:
    286	000550					SOB	R4,62$		;REPEAT
    287	000554					RETURN			;						;JAK107
    288	000556				77$:										;JAK107
    289	000556	005362 	177774 			DEC	-4(R2)		;DECREMENT COUNT OF LAST
    290	000562	012701 	000143'			MOV	#FMT24,R1	;GET ADDRESS OF FORMAT
    291	000566	020227 	000140G		80$:	CMP	R2,#$SYMBF+<2*3*OPSWN>;FILL BUFFER YET?
    292	000572	103004 				BHIS	90$		;IF HIS YES
    293	000574	005022 				CLR	(R2)+		;CLEAR COUNT
    294	000576	012722 	001175'			MOV	#BLANK,(R2)+	;INSERT ADDRESS OF BLANK FILLER
    295	000602	000771 				BR	80$		;GO AGAIN
    296	000604				90$:	CALL	$MPOUT		;OUTPUT OPTIONS
    297	000610				95$:				;                                               ; 043
    298	000610	012702 	000000G			MOV	#$SYMBF,R2
    299	000614	016712 	000000G			MOV	$MXWND,(R2)	;MAX NUM. OF WINDOWS ALLOCATED
    300	000620	012701 	000767'			MOV	#FMT60,R1	;FORMAT ADDRESS
    301	000624					CALL	$MPOUT		;PRINT
    302	000630	012702 	000000G			MOV	#$SYMBF,R2	;ADDRESS OF PARAMETER STORAGE
    303	000634	016700 	000000G			MOV	$LBOFF,R0	;LENGTH OF VSECT AREA IN 32 WORD BLKS
    304	000640	001406 				BEQ	100$		;IF EQ DON'T PRINT
    305	000642					CALL	MUL32		;CALL NUMBER OF WORDS
    306	000646	012701 	000665'			MOV	#FMT56,R1	;ADDRESS OF FORMAT
    307	000652					CALL	$MPOUT	;PRINT
    308	000656				100$:
    309	000656	012702 	000000G			MOV	#$SYMBF,R2	;ADDRESS OF PARAMETER STORAGE
    310	000662	016700 	000000G			MOV	$LBEXT,R0	;LENGTH OF EXTEND
    311	000666	001406 				BEQ	110$		;IF EQ NONE -DON'T PRINT
    312	000670					CALL	MUL32		;GET NUM OF WORDS PER BLK
    313	000674	012701 	000726'			MOV	#FMT57,R1	;FOMAT ADDRESS
    314	000700					CALL	$MPOUT		;PRINT
    315	000704				110$:
    316	000704	012702 	000000G			MOV	#$SYMBF,R2	; GET ADDRESS OF PARAMETER STORAGE              ; 043
    317	000710	016700 	000000G			MOV	$MXLGH,R0	;GET MAX TASK SIZE				; 043
    318	000714					CALL	MUL32		;GET NUM OF WORDS PER BLK
    319
    320	000720	012701 	001024'			MOV	#FMT61,R1	;ADDRESS OF FORMAT				; 043
    321	000724					CALL	$MPOUT								; 043
    322	000730	026767 	177044 	177046 		CMP	TEMP,TOTAL	;WAS LBEXT OR LBOFF ADD IN?
    323	000736	001004 				BNE	115$		;IF NE YES - PRINT TOTAL
    324	000740	026767 	177036 	177040 		CMP	TEMP+2,TOTAL+2	; WAS EITHER ADDED IN?
    325	000746	001410 				BEQ	120$		;IF EQ NO
    326	000750				115$:
    327	000750	012702 	000000G			MOV	#$SYMBF,R2	;ADDRESS OF PARAMETER BUFFER
    328	000754	012712 	000004'			MOV	#TOTAL,(R2)	;ADDRESS OF TOTAL STORAGE
    329	000760	012701 	000304'			MOV	#FMT43,R1	;FORMAT ADDRESS
    330	000764					CALL	$MPOUT		;PRINT TOTAL STORAGE
    331	000770				120$:				;
    332	000770	016712 	000000G			MOV	$OFFST,(R2)	; SET TASK OFFSET
    333	000774	012212 				MOV	(R2)+,(R2)	; COPY OFFSET
MPONE	MACRO M1110  22-AUG-78 01:48  PAGE 2-9


    334	000776	066712 	000000G			ADD	$HVRTL,(R2)	; CONPUTE TOP VIRTUAL ADDRESS
    335	001002	012701 	000247'			MOV	#FMT42,R1	; GET ADDRESS OF FORMAT                         ; 043
    336	001006					CALL	$MPOUT		; OUTPUT MAP FILE                               ; 043
    337	001012	032767 	000000G	000000G		BIT	#TS$KF,$SWTCH	; TASK IMAGE FILE SPECIFIED?			;JAK100
    338	001020	001441 				BEQ	140$		; IF EQ NO					;JAK100
    339	001022	016722 	000000G			MOV	$HDRBN,(R2)+	; START BLK OF TASK IMAGE			;JAK100
    340	001026	016712 	000000G			MOV	$ROBLK,(R2)	; LAST BLK IN R-W IMAGE				;JAK100
    341	001032	005312 				DEC	(R2)		; BACK OFF BY ONE				;JAK100
    342	001034	032767 	000000G	176752 		BIT	#SW$NH,ELSWT	; BUILDING LIBRARY?				;JAK100
    343	001042	001404 				BEQ	130$		; IF EQ NO					;JAK100
    344	001044	005262 	177776 			INC	-2(R2)		; STARTING BLK IS ONE GREATER			;JAK100
    345	001050	016712 	000000G			MOV	$REBLK,(R2)	; LAST BLK IN LIBRARY				;JAK100
    346	001054				130$:										;JAK100
    347	001054					CALL	$MPEDT		; CALCULATE SIZE				;JAK100
    348	001060	012701 	001065'			MOV	#FMT62,R1	; GET ADDRESS OF FORMAT				;JAK100
    349	001064					CALL	$MPOUT		; OUT LINE					;JAK100
    350	001070	032767 	000000G	176716 		BIT	#SW$MU,ELSWT	; MULTIUSER TASK?				;JAK100
    351	001076	001412 				BEQ	140$		; IF EQ NO					;JAK100
    352	001100	016722 	000000G			MOV	$ROBLK,(R2)+	; START BLK OF R-O				;JAK100
    353	001104	016712 	000000G			MOV	$REBLK,(R2)	; END BLK OF R-O				;JAK100
    354	001110					CALL	$MPEDT		; CALCULATE LENGTH				;JAK100
    355	001114	012701 	001131'			MOV	#FMT63,R1	; ADDRESS OF FORMAT				;JAK100
    356	001120					CALL	$MPOUT		; OUTPUT LINE					;JAK100
    357	001124				140$:										;JAK100
    358	001124					RETURN
    359
    360					;
    361					; MUL32-MULTIPLIES NUMBER IN R0 BY 32 THEN
    362					;	ADDS RESULT TO TOTAL
    363					;
    364	001126				MUL32:
    365	001126	012712 	000000'			MOV	#TEMP,(R2)	;ADDRESS OF DOUBLE-PRECISION PARAMETER
    366						.IF DF	V1145							; 043
    367
    368						MUL 	#32.,R0		;						; 043
    369
    370						.IFF									; 043
    371
    372	001132	012701 	000040 			MOV	#32.,R1		;GET NUMBER OF WORDS PER BLOCK			; 043
    373	001136					CALL	$MUL		;MULTIPLY					; 043
    374
    375						.ENDC
    376
    377	001142	010032 				MOV	R0,@(R2)+	;SET HIGH PART OF LENGTH			; 043
    378	001144	010167 	176632 			MOV	R1,TEMP+2	;SET LOW PART OF LENGTH				; 043
    379	001150	066767 	176626 	176630 		ADD	TEMP+2,TOTAL+2	;ADD LOW PART TO TOTAL
    380	001156	005567 	176622 			ADC	TOTAL		;ADD CARRY
    381	001162	066767 	176612 	176614 		ADD	TEMP,TOTAL	;INCLUDE HIGH PART OF RESULT
    382	001170					RETURN
    383
    384
    385					;;+
    386					; MPTSK-SETUP TASK NAME IN BUFFER
    387					;
    388	001172				MPTSK:
    389	001172	010246 				MOV	R2,-(SP)	;SAVE PARAMETER BLOCK ADDRESS
    390	001174	016701 	000000G			MOV	$TSKNM,R1	; GET ADDRESS OF TASK NAME BLOCK
MPONE	MACRO M1110  22-AUG-78 01:48  PAGE 2-10


    391	001200	001413 				BEQ	10$		;IF EQ NO TASK FILE
    392	001202					CALL	$CVRL		;CONVERT TO REAL ADDRESS
    393	001206	062700 	000004G			ADD	#E$LMND+4,R0	;STEP PAST DEVICE AND UNIT
    394	001212	011602 				MOV	(SP),R2		;RESTORE PARAMETER BLOCK ADDRESS
    395	001214	012022 				MOV	(R0)+,(R2)+	;SETUP FILE NAME
    396	001216	012022 				MOV	(R0)+,(R2)+	;
    397	001220	012022 				MOV	(R0)+,(R2)+	;
    398	001222	012022 				MOV	(R0)+,(R2)+	;SETUP FILE TYPE
    399	001224	012022 				MOV	(R0)+,(R2)+	;SETUP FILE VERSION NUMBER
    400	001226	000405 				BR	30$
    401	001230				10$:
    402	001230	012701 	000005 			MOV	#5,R1		;SET LOOP COUNT
    403	001234				20$:
    404	001234	005022 				CLR	(R2)+		;CLEAR TASK FILE NAME
    405	001236					SOB	R1,20$		;
    406	001242				30$:
    407	001242	005726 				TST	(SP)+		;CLEAN STACK
    408	001244					RETURN
    409					;+
    410					; $MPOLD-CREATE AND OUTPUT OVERLAY DESCRIPTION IN LOAD MAP
    411					;
    412					;INPUTS:
    413					;	$NUMSG-NUMBER OF SEGMENTS
    414					;
    415					;OUTPUTS:
    416					;	OVERLAY DESCRIPTOR
    417					;
    418					;-
    419	001246				$MPOLD::
    420	001246	026727 	000000G	000001 		CMP	$NUMSG,#1	;MORE THEN ONE SEGMENT?
    421	001254	001434 				BEQ	20$		;IF EQ NO
    422	001256					CALL	MPTSK		; GET TASK NAME
    423	001262	012701 	000426'			MOV	#FMT48,R1	;ADDRESSS OF HEADING
    424	001266					CALL 	$MPOUT
    425	001272	012701 	000520'			MOV	#FMT50,R1	;ADDRESS OF COLUNM HEADINGS
    426	001276					CALL	$MPOUT
    427	001302	012701 	000464'			MOV	#FMT49,R1	;UNDER SCORE
    428	001306					CALL	$MPOUT
    429	001312	012767 	000005 	176470 		MOV	#5,TAB		; INITIAL FOR WIDE LISTING
    430	001320	032767 	000000G	000000G		BIT	#WI$DE,$SWTCH	;NARROW LISTING?
    431	001326	001003 				BNE	10$		;IF NE	NO
    432	001330	012767 	000002 	176452 		MOV	#2,TAB	;SET FOR NARROW LISTING
    433	001336				10$:
    434	001336	012700 	001350'			MOV	#MPOLD,R0
    435	001342					CALL	$PCTRL
    436	001346				20$:
    437	001346					RETURN
    438
    439					;+
    440					; MPOLD- GENERATE OVERLAY DESCRIPTOR
    441					;
    442					;
    443
    444	001350				MPOLD:
    445	001350					SAVRG			;SAVE NON-VOLATILE REGISTERS
    446	001354	016700 	000000G			MOV	$CRVSG,R0	;GET VIRTUAL ADDRESS OF CURRENT SEGMENT
    447	001360					CALL	$ADRSM		;SET ADDRESS LIMITS
MPONE	MACRO M1110  22-AUG-78 01:48  PAGE 2-11


    448	001364	012702 	000000G			MOV	#$SYMBF,R2	;ARGUMENT BUFFER ADDRESS
    449	001370	026767 	000000G	000000G		CMP	$CRVSG,$RTSEG	;CURRENT ROOT?
    450	001376	001003 				BNE	10$		;IF NE NO
    451	001400	016767 	000000G	000000G		MOV	$OFFST,$BEGRW
    452	001406				10$:
    453	001406	016722 	000000G			MOV	$BEGRW,(R2)+	;INSERT STAT ADDRESS
    454	001412	016712 	000000G			MOV	$ENDRW,(R2)
    455	001416	021262 	177776 			CMP	(R2),-2(R2)	;LENGTH ZERO?
    456	001422	001014 				BNE	15$		;IF NE NO
    457	001424	016762 	000000G	177776 		MOV	$BEGRO,-2(R2)	; R-O SEGMENT BASE				;JAK100
    458	001432	016712 	000000G			MOV	$ENDRO,(R2)	; R-O SEGMENT END				;JAK100
    459	001436	021262 	177776 			CMP	(R2),-2(R2)	; ZERO LENGTH?					;JAK100
    460	001442	001004 				BNE	15$		; IF NE NO					;JAK100
    461	001444	005722 				TST	(R2)+
    462	001446	005022 				CLR	(R2)+
    463	001450	005022 				CLR	(R2)+
    464	001452	000403 				BR	20$
    465	001454				15$:
    466	001454					CALL	$MPEDT		;CALCULATE LENGTH
    467	001460	005722 				TST	(R2)+		;
    468	001462				20$:
    469	001462	016712 	176322 			MOV	TAB,(R2)
    470	001466	016703 	000000G			MOV	$LVL,R3		;START CALCULATION FOR TAB
    471
    472	001472	001404 				BEQ	30$		;IF EQ LEVEL = 0
    473	001474				25$:
    474	001474	066712 	176310 			ADD	TAB,(R2)	;ADD INDENT VALUUE
    475	001500					SOB	R3,25$		;DEC LEVEL COUNT AND CONTINUE TILL ZERO
    476	001504				30$:
    477	001504	005722 				TST	(R2)+
    478	001506	016700 	000000G			MOV	$CRSEG,R0	;GET ADDRESS OF CURRENT SEGMENT
    479	001512	016022 	000000G			MOV	S$GNME(R0),(R2)+	;INSERT SEGMENT NAME
    480	001516	016012 	000002G			MOV	S$GNME+2(R0),(R2)
    481
    482	001522	012701 	000374'			MOV	#FMT47,R1	;ADDRESS OF FORMAT
    483	001526					CALL	$MPOUT
    484
    485	001532				40$:
    486	001532					RETURN
    487
    488		000001 				.END
MPONE	MACRO M1110  22-AUG-78 01:48  PAGE 2-12
SYMBOL TABLE

BLANK   001175R     003	FMT62   001065R     003	SW$AC = ****** GX	$BEGRO= ****** GX	$MXWND= ****** GX
CR    = 000015   	FMT63   001131R     003	SW$ALO= ****** GX	$BEGRW= ****** GX	$NUMSG= ****** GX
ELSWT   000014R  	FMT7    000026R     003	SW$CM = ****** GX	$CRSEG= ****** GX	$ODTAD= ****** GX
E$LMND= ****** GX	G.TICP= 000016   	SW$CP = ****** GX	$CRVSG= ****** GX	$OFFST= ****** GX
E$LSWT= ****** GX	G.TICT= 000014   	SW$DA = ****** GX	$CVRL = ****** GX	$PCTRL= ****** GX
FF    = 000014   	G.TIDA= 000004   	SW$EA = ****** GX	$DFTSK= ****** GX	$PNAME= ****** GX
FMT20   000054R     003	G.TIHR= 000006   	SW$FP = ****** GX	$ENDRO= ****** GX	$PRIOR= ****** GX
FMT23   000114R     003	G.TIMI= 000010   	SW$MU = ****** GX	$ENDRW= ****** GX	$REBLK= ****** GX
FMT24   000143R     003	G.TIMO= 000002   	SW$NH = ****** GX	$FMT16= ****** GX	$ROBLK= ****** GX
FMT42   000247R     003	G.TISC= 000012   	SW$NS = ****** GX	$HDRBN= ****** GX	$RTSEG= ****** GX
FMT43   000304R     003	G.TIYR= 000000   	SW$NT = ****** GX	$HDSIZ= ****** GX	$SAVRG= ****** GX
FMT47   000374R     003	HT    = 000011   	SW$PI = ****** GX	$HVRTL= ****** GX	$STACK= ****** GX
FMT48   000426R     003	IDENT   000012R  	SW$PM = ****** GX	$IDENT= ****** GX	$STBNM= ****** GX
FMT49   000464R     003	LF    = 000012   	SW$PR = ****** GX	$LBEXT= ****** GX	$SWTCH= ****** GX
FMT50   000520R     003	MPOLD   001350R  	SW$SL = ****** GX	$LBOFF= ****** GX	$SYMBF= ****** GX
FMT51   000345R     003	MPTSK   001172R  	SW$TR = ****** GX	$LVL  = ****** GX	$TITLE= ****** GX
FMT53   000554R     003	MUL32   001126R  	S$GNME= ****** GX	$MPEDT= ****** GX	$TKUIC= ****** GX
FMT54   000607R     003	OPSW    000000R     002	TAB     000010R  	$MPHDG  000016RG 	$TNAME= ****** GX
FMT55   000636R     003	OPSWN = 000020   	TEMP    000000R  	$MPOLD  001246RG 	$TSKNM= ****** GX
FMT56   000665R     003	RO$CHK= ****** GX	TOTAL   000004R  	$MPOT1= ****** GX	$VERSN= ****** GX
FMT57   000726R     003	R$$11M= 000000   	TS$KF = ****** GX	$MPOUT= ****** GX	$XFRAD= ****** GX
FMT6    000000R     003	SPA   = 000040   	VT    = 000013   	$MUL  = ****** GX	$$    = 000001
FMT60   000767R     003	SWOVR   000200R     002	WI$DE = ****** GX	$MXLGH= ****** GX	$$$OST= 000020
FMT61   001024R     003	SWOVRN= 000001   	$ADRSM= ****** GX

. ABS.	000000	   000
      	001534	   001
STBL$D	000210	   002
MTX1$D	001200	   003
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  1852 WORDS  ( 8 PAGES)
DYNAMIC MEMORY:  2772 WORDS  ( 10 PAGES)
ELAPSED TIME:  00:00:20
OBJ$:MPONE,LIS$:MPONE/-SP=SRC$:MACFLM,MPONE
