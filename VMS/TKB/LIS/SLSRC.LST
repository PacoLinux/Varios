SLSRC	MACRO M1110  22-AUG-78 01:59  PAGE 2


      1						.TITLE	SLSRC
      2						.IDENT	/00/
      3					;
      4					; COPYRIGHT (C) 1976
      5					; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
      6					;
      7					; THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ONLY ON A
      8					; SINGLE COMPUTER SYSTEM AND MAY  BE  COPIED   ONLY  WITH  THE
      9					; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE,  OR
     10					; ANY OTHER COPIES THEREOF, MAY NOT BE PROVIDED  OR  OTHERWISE
     11					; MADE AVAILABLE TO ANY OTHER PERSON   EXCEPT FOR  USE ON SUCH
     12					; SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE  TERMS.  TITLE
     13					; TO AND OWNERSHIP OF THE SOFTWARE SHALL AT ALL  TIMES  REMAIN
     14					; IN DEC.
     15					;
     16					; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
     17					; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
     18					; EQUIPMENT CORPORATION.
     19					;
     20					; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
     21					; ITS SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
     22					;
     23
     24					; VERSION 01
     25					;
     26					; C. MONIA 23-SEP-75
     27					;
     28					; SYMBOL TABLE WHOLE SEARCH ROUTINE (SLOW VERSION)
     29					;
     30					; LOCAL DATA
     31					;
     32					; CURRENT PATH LIST ADDRESS
     33					;
     34
     35	000000				PATH:	.BLKW	1		;
     36
     37					;
     38					; SYMBOL NAME
     39					;
     40
     41	000002				SYM:	.BLKW	2		;
     42
     43
     44					;
     45					; SEARCH EXTENT FLAG
     46					;
     47
     48	000006	000000 			$WSEXT::.WORD	0		;
     49
     50					;+
     51					; **-$WSRCS-PERFORM WHOLE SEARCH OF SYMBOL TABLES
     52					;
     53					; THIS SUBROUTINE IS CALLED TO SEARCH FOR A GLOBAL SYMBOL
     54					; IN A SEGMENT THAT IS ON A COMMON PATH WITH THE CURRENT
     55					; SEGMENT BEING PROCESSED. PRIOR TO CALLING THIS ROUTINE
     56					; SUBROUTINE $WSINI MUST BE INVOKED TO BUILD THE
     57					; PATH LIST CONTAINING THE VIRTUAL ADDRESS OF ALL SEGMENTS
SLSRC	MACRO M1110  22-AUG-78 01:59  PAGE 2-1


     58					; THAT ARE VISIBLE FROM THE CURRENT SEGMENT.
     59					;
     60					; THE CURRENT SEGMENT IS SEARCHED ON THE INITIAL CALL. IF THE
     61					; SYMBOL IS FOUND, A CO-ROUTINE CALL IS MADE TO THE CALLER WITH
     62					; THE C-BIT CLEAR. SUBSEQUENT CO-ROUTINE CALLS ARE MADE TO SEEK
     63					; ADDITIONAL SYMBOL TABLE ENTRIES IN THE STRUCTURE. THE SEARCH
     64					; FOR THESE ENTRIES IS PERFORMED BY REFERENCING THE LOCAL SYMBOL
     65					; TABLE WITHIN EACH OVERLAY SEGMENT. A CO-ROUTINE CALL IS MADE
     66					; TO THE CALLER FOR EACH SYMBOL FOUND.
     67					;
     68					; WHEN NO MORE ENTRIES REMAIN, THE ROUTINE EXITS VIA A RETURN
     69					; WITH THE C-BIT SET. CALLER MAY TERMINATE THE SEARCH BY REMOVING
     70					; THE CO-ROUTINE ADDRESS FROM THE STACK.
     71					;
     72					; INPUTS:
     73					;
     74					;	R1=ADDRESS OF SYMBOL DESCRIPTOR
     75					;	$CRSEG=REAL ADDRESS OF CURRENT SEGMENT
     76					;	$CRVSG=VIRTUAL ADDRESS OF CURRENT SEGMENT
     77					;
     78					; IF TASK HAS MORE THAN ONE SEGMENT, THE FOLLOWING ADDITIONAL
     79					; INPUTS ARE REQUIRED:
     80					;
     81					;	$PATH=ADDRESS OF PATH LIST BUILT BY $WSINI
     82					;	$WSEXT=SEARCH EXTENT FLAG. IF CLEAR, THE SEARCH IS CONFINED
     83					;	       TO THE CURRENT CO-TREE AND MAIN ROOT. ELSE THE SEARCH
     84					;	       EXTENT COVERS ALL CO-TREES.
     85					;
     86					; OUTPUTS:
     87					;
     88					;	C/CLEAR -- FOUND SYMBOL, EXIT IS VIA CO-ROUTINE CALL.
     89					;
     90					;		R0=REAL ADDRESS OF DESCRIPTOR
     91					;		R1=PATH FLAG. ONE OF THE FOLLOWING
     92					;		   VALUES IS RETURNED:
     93					;
     94					;			R1=0; FOUND IN CURRENT SEGMENT
     95					;			R1<0; FOUND TOWARDS THE ROOT
     96					;			R1=1; FOUND UP-TREE
     97					;			R1=2; FOUND IN CO-TREE
     98					;
     99					;	CONDITION CODES REFLECT THE CONTENTS OF R1.
    100					;
    101					;		$CRVSM=VIRTUAL ADDRESS OF FOUND SYMBOL
    102					;		$CRVSR=VIRTUAL ADDRESS OF FOUND SEGMENT
    103					;
    104					;	C/SET -- NO FURTHER ENTRIES CAN BE FOUND. EXIT IS
    105					;	         VIA A RETURN WITH R1 CLEARED.
    106					;
    107					;	CONDITION CODES REFLECT THE CONTENTS OF R1
    108					;
    109					;-
    110
    111	000010				$WSRCS::			;
    112	000010	016700 	000000G			MOV	$CRSEG,R0	; GET REAL ADDRESS OF CURRENT SEGMENT
    113	000014	062700 	000000G			ADD	#S$GSTB,R0	; OFFSET TO SYMBOL TABLE LISTHEAD
    114	000020	016767 	000000G	000000G		MOV	$CRVSG,$CRVSR	; SET VIRTUAL ADDRESS OF SEARCH SEGMENT
SLSRC	MACRO M1110  22-AUG-78 01:59  PAGE 2-2


    115	000026	012702 	000002'			MOV	#SYM,R2		; GET ADDRESS OF DESCRIPTOR
    116	000032	016122 	000000G			MOV	S$YM(R1),(R2)+	; COPY SYMBOL NAME
    117	000036	016112 	000002G			MOV	S$YM+2(R1),(R2) ; ...
    118	000042					CALL	$SRCH		; SEARCH FOR SYMBOL
    119	000046	103404 				BCS	10$		; IF C/S NOT IN CURRENT SEGMENT
    120	000050	010167 	000000G			MOV	R1,$CRVSM	; RECORD VIRTUAL ADDRESS OF SYMBOL
    121	000054	005001 				CLR	R1		; SET PATH FLAG=CURRENT
    122	000056					CALL	@(SP)+		; CALL THE CALLER
    123	000060				10$:				;
    124	000060	016701 	000000G			MOV	$SGLST,R1	; SEGMENT LIST CREATED?
    125	000064	001450 				BEQ	40$		; IF EQ NO
    126	000066	016767 	000000G	177704 		MOV	$PATH,PATH	; SET PATH LIST ADDRESS
    127	000074				20$:				;
    128	000074	016700 	177700 			MOV	PATH,R0		; GET PATH LIST ADDRESS
    129	000100	022020 				CMP	(R0)+,(R0)+	; POINT TO NEXT ENTRY
    130	000102	010067 	177672 			MOV	R0,PATH		; SAVE ADDRESS
    131	000106	012001 				MOV	(R0)+,R1	; GET VIRTUAL ADDRESS OF SEGMENT
    132	000110	001436 				BEQ	40$		; IF EQ END OF LIST
    133	000112	005767 	177670 			TST	$WSEXT		; SEARCH ALL CO-TREES?
    134	000116	001012 				BNE	30$		; IF NE YES
    135	000120	026767 	000000G	000000G		CMP	$CRVSG,$RTSEG	; AT ROOT?
    136	000126	001406 				BEQ	30$		; IF EQ YES, SEARCH ALL SEGMENTS
    137	000130	020167 	000000G			CMP	R1,$RTSEG	; FOUND ROOT SEGMENT?
    138	000134	001403 				BEQ	30$		; IF EQ YES, SEARCH SEGMENT
    139	000136	021027 	000002 			CMP	(R0),#2		; SEGMENT IN CO-TREE?
    140	000142	001754 				BEQ	20$		; IF EQ YES
    141	000144				30$:				;
    142	000144	011046 				MOV	(R0),-(SP)	; SAVE PATH FLAG
    143	000146	010167 	000000G			MOV	R1,$CRVSR	; SAVE VIRTUAL ADDRESS OF SEGMENT
    144	000152					CALL	$CVRL		; CONVERT TO REAL
    145	000156	062700 	000000G			ADD	#S$GSTB,R0	; POINT TO SYMBOL TABLE LISTHEAD
    146	000162	012701 	000000C			MOV	#SYM-S$YM,R1	; GET ADDRESS OF LOCAL DESCRIPTOR
    147	000166					CALL	$SRCH		; SEARCH FOR SYMBOL
    148	000172	010167 	000000G			MOV	R1,$CRVSM	; SAVE VIRTUAL ADDRESS OF SYMBOL
    149	000176	012601 				MOV	(SP)+,R1	; RETRIEVE PATH FLAG
    150	000200	103735 				BCS	20$		; IF C/S NOT FOUND
    151	000202					CALL	@(SP)+		; CALL THE CALLER
    152	000204	000733 				BR	20$		; GO AGAIN
    153	000206				40$:				;
    154	000206	000261 				SEC			; SET CARRY
    155	000210				$ISYMV::			; REFERENCE ENTRY POINT
    156	000210				$SRCIV::			; REFERENCE ENTRY POINT
    157	000210					RETURN			;
    158
    159		000001 				.END
SLSRC	MACRO M1110  22-AUG-78 01:59  PAGE 2-3
SYMBOL TABLE

CR    = 000015   	R$$11M= 000000   	VT    = 000013   	$CVRL = ****** GX	$SRCH = ****** GX
FF    = 000014   	SPA   = 000040   	$CRSEG= ****** GX	$ISYMV  000210RG 	$SRCIV  000210RG
HT    = 000011   	SYM     000002R  	$CRVSG= ****** GX	$PATH = ****** GX	$WSEXT  000006RG
LF    = 000012   	S$GSTB= ****** GX	$CRVSM= ****** GX	$RTSEG= ****** GX	$WSRCS  000010RG
PATH    000000R  	S$YM  = ****** GX	$CRVSR= ****** GX	$SGLST= ****** GX	$$    = 000001

. ABS.	000000	   000
      	000212	   001
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  675 WORDS  ( 3 PAGES)
DYNAMIC MEMORY:  2772 WORDS  ( 10 PAGES)
ELAPSED TIME:  00:00:06
OBJ$:SLSRC,LIS$:SLSRC/-SP=SRC$:MACFLM,SLSRC
