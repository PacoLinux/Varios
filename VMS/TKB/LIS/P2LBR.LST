P2LBR	MACRO M1110  22-AUG-78 01:51  PAGE 3


    100						.TITLE	P2LBR
    200						.IDENT	/07/
    300
    400					;
    500					; COPYRIGHT (C) 1976
    600					; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
    700					;
    800					; THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ONLY ON A
    900					; SINGLE COMPUTER SYSTEM AND MAY  BE  COPIED   ONLY  WITH  THE
   1000					; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE,  OR
   1100					; ANY OTHER COPIES THEREOF, MAY NOT BE PROVIDED  OR  OTHERWISE
   1200					; MADE AVAILABLE TO ANY OTHER PERSON   EXCEPT FOR  USE ON SUCH
   1300					; SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE  TERMS.  TITLE
   1400					; TO AND OWNERSHIP OF THE SOFTWARE SHALL AT ALL  TIMES  REMAIN
   1500					; IN DEC.
   1600					;
   1700					; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
   1800					; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
   1900					; EQUIPMENT CORPORATION.
   2000					;
   2100					; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
   2200					; ITS SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
   2300					;
   2400
   2500					; VERSION 07
   2600					;
   2700					;
   2800					; D. N. CUTLER/C. MONIA 19-DEC-73
   2900					;
   3000					;
   3100					; MODIFICATIONS:
   3200					;
   3300					; NO.		DATE		PROGRAMMER
   3400					; ---		----		----------
   3500					;
   3600					; 003		04-AUG-73	C. MONIA
   3700					; 017		26-OCT-73	C. MONIA
   3800					; 061		16-MAY-76	C. MONIA
   3900					; JAK090	4/19/77		; LINKING LIBRARY TO A LIBRARY
   4000					;
   4100					;
   4200					;
   4300					; PHASE 2 RESIDENT LIBRARY REQUEST PROCESSING
   4400					;
   4500					; MACRO LIBRARY CALLS
   4600					;
   4700
   4800						.MCALL	CLOSE$,CSI$,GET$S,NMBLK$,OFNB$R
   4900	000000					CSI$
   5000
   5100					;
   5200					; LOCAL DATA
   5300					;
   5400					; ADDRESS OF LABEL BLOCK BUFFER
   5500					;
   5600
   5700	000000				LBADR:	.BLKW	1		;
P2LBR	MACRO M1110  22-AUG-78 01:51  PAGE 3-1


   5800
   5900					;
   6000					; LIBRARY DEFAULT NAMEBLOCK
   6100					;
   6200
   6300	000002				LBRNB:	NMBLK$
   6350	000040	100003 			TSKTYP::.RAD50	/TSK/		; PATCH TO /EXE/ FOR VAX/VMS
   6400
   6500					;
   6600					; MODULE FUNCTION-DETAILS
   6700					;
   6800					;+
   6900					;
   7000					; **-$LIBR-PROCESS RESIDENT LIBRARY/COMMON REQUESTS
   7100					;
   7200					; INPUTS:
   7300					;
   7400					;	R3:	NUMBER OF OPTION PARAMETERS SPECIFIED
   7500					;	R5:	POINTER TO START OF OPTION DATA ($PARM)
   7600					;
   7700					;	$PARM CONTAINS A CSI BLOCK WITH THE LIBRARY DATASET DESCRIPTORS
   7800					;	SETUP. THE LIBRARY FILE SWITCH WORD AND APR NUMBER ARE IN
   7900					;	LOCATIONS $PARM+C.SIZE AND $PARM+C.SIZE+2 RESPECTIVELY.
   8000					;
   8100					; OUTPUTS:
   8200					;
   8300					;	THE RESIDENT LIBRARY LIST IS BUILT.
   8400					;	ELEMENT DESCRIPTORS FOR EACH REFERENCED LIBRARY
   8500					;	ARE LINKED TO THE ELEMENT LISTHEAD FOR
   8600					;	THE ROOT SEGMENT.
   8700					;
   8800					;
   8900					;	(A)	THE LIBRARY NAME MUST BE UNIQUE,
   9000					;
   9100					;	(B)	THE AREA OF MEMORY ALLOCATED TO THE
   9200					;		LIBRARY MUST NOT INTERSECT MEMORY ALLOCATED
   9300					;		TO OTHER LIBRARIES OR TO THE TASK ITSELF,
   9400					;
   9500					;	(C)	THE TOTAL NUMBER OF REFERENCED LIBRARIES MUST BE
   9600					;		7 OR LESS.
   9700					;
   9800					;	IF ANY OF THE ABOVE TESTS FAIL, THE
   9900					;	REQUEST IS REJECTED.
  10000					;-
  10100
  10200	000042				$LIBR::				;
  10300	000042					SAVVR			; SAVE THE VOLATILE REGISTERS
  10400	000046	016700 	000000G			MOV	$INIPT,R0	; GET ADDRESS OF INPUT FILE FDB
  10500	000052					CALL	$STRCB		; SETUP RECORD BLOCK
  10600	000056	012701 	000000G			MOV	#L$BPRI,R1	; GET SIZE OF BLOCK TO ALLOCATE
  10700	000062					CALL	$ALBLK		; ALLOCATE BLOCK
  10800	000066	010067 	177706 			MOV	R0,LBADR	; SAVE ADDRESS OF BLOCK
  10900	000072	012701 	000017 			MOV	#S.FNBW,R1	; GET SIZE OF FILE NAME BLOCK IN WORDS
  11000	000076	012700 	000002'			MOV	#LBRNB,R0	; GET ADDRESS OF NAME BLOCK
  11100	000102				10$:				;
  11200	000102	005020 				CLR	(R0)+		; CLEAR NAME BLOCK
  11300	000104					SOB	R1,10$		; ...
P2LBR	MACRO M1110  22-AUG-78 01:51  PAGE 3-2


  11400	000110	012703 	000000C			MOV	#<S$V1*400!E$R66>,R3 ; ASSUME PIC LIBRARY BEING BUILT
  11500	000114	032767 	000000G	000000G		BIT	#SW$NH,$TKSW	; BUILDING LIBRARY?
  11600	000122	001404 				BEQ	20$		; IF EQ NO
  11700	000124	032767 	000000G	000000G		BIT	#SW$PI,$TKSW	; PIC LIBRARY?
  11800	000132	001061 				BNE	40$		; IF NE YES, ERROR
  11900	000134				20$:				;
  12000	000134	016767 	177700 	177654 		MOV	TSKTYP,LBRNB+N.FTYP ; SET DEFAULT FILE TYPE
  12100	000142	012767 	054523 	177664 		MOV	#"SY,LBRNB+N.DVNM ; SET DEFAULT DEVICE TYPE
  12200	000150	010502 				MOV	R5,R2		; SET ADDRESS OF DATA SET DESCRIPTOR
  12300	000152	062702 	000006 			ADD	#C.DSDS,R2	; OFFSET TO DATASET DESCRIPTORS
  12400	000156					CALL	PRFND		; PARSE/FIND FILE
  12500	000162	012701 	000002'			MOV	#LBRNB,R1	; GET ADDRESS OF NAME BLOCK
  12600	000166	012702 	000017 			MOV	#S.FNBW,R2	; GET SIZE OF NAME BLOCK IN WORDS
  12700	000172	062700 	000102 			ADD	#F.FNB,R0	; POINT TO FILE NAME BLOCK
  12800	000176				30$:				;
  12900	000176	012021 				MOV	(R0)+,(R1)+	; COPY NAMEBLOCK
  13000	000200					SOB	R2,30$		; ...
  13100	000204	062701 	177742 			ADD	#N.FID-S.FNB,R1	; POINT TO FILE I/D
  13200	000210	005021 				CLR	(R1)+		; RESET I/D
  13300	000212	005021 				CLR	(R1)+		; ...
  13400	000214	005011 				CLR	(R1)		; ...
  13500	000216	012767 	074742 	177572 		MOV	#^RSTB,LBRNB+N.FTYP ; RESET FILE TYPE
  13600	000224	016502 	000054 			MOV	C.SIZE(R5),R2	; GET SWITCH WORD
  13700	000230	016504 	000056 			MOV	C.SIZE+2(R5),R4	; GET APR NUMBER
  13800	000234	001423 				BEQ	60$		; IF EQ NONE SPECIFIED
  13900	000236	012703 	000000C			MOV	#<S$V1*400!E$R67>,R3 ; ASSUME ILLEGAL APR NUMBER
  14000	000242	020427 	000007 			CMP	R4,#7.		; VALID APR?
  14100	000246	101013 				BHI	40$		; IF HI NO
  14200	000250	052702 	000000G			BIS	#LD$RSV,R2	; SET APR RESERVATION FLAG
  14300	000254	032767 	000000G	000000G		BIT	#MP$SY,$SWTCH	; MAPPED SYSTEM?
  14400	000262	001407 				BEQ	50$		; IF EQ NO IGNORE APR
  14500	000264	006204 				ASR	R4		; CONVERT APR TO ADDRESS
  14600	000266	006004 				ROR	R4		; ...
  14700	000270	006004 				ROR	R4		; ...
  14800	000272	006004 				ROR	R4		; ...
  14900	000274	000403 				BR	60$		;
  15000	000276				40$:				;
  15100	000276	000167 	001044 			JMP	ERXT		; TAKE ERROR EXIT
  15200	000302				50$:				;
  15300	000302	005004 				CLR	R4		; NO APR SPECIFIED
  15400	000304				60$:				;
  15500	000304	016705 	177470 			MOV	LBADR,R5	; GET ADDRESS OF LIBRARY LIST
  15600	000310	012703 	000000C			MOV	#<S$V1*400!E$R68>,R3 ; ASSUME LIBRARY FILE I/O ERROR
  15700	000314					OFNB$R	$INIPT		; OPEN TASK IMAGE FILE
  15800	000332	103524 				BCS	110$		; IF C/S ERROR
  15900	000334	112760 	000001 	000000 		MOVB	#R.FIX,F.RTYP(R0) ; SET RECORD TYPE=FIXED LENGTH
  16000	000342	012760 	001000 	000002 		MOV	#512.,F.RSIZ(R0) ; SET RECORD SIZE
  16100	000350	112760 	000004 	000016 		MOVB	#FD.PLC,F.RACC(R0) ; ACCESS=PARTIAL LOCATE MODE
  16200	000356					GET$S	R0		; READ FIRST LABEL BLOCK
  16300	000362	103510 				BCS	110$		; IF C/S I-O ERROR
  16400	000364	016001 	000026 			MOV	F.NRBD+2(R0),R1	; GET ADDRESS OF RECORD BUFFER
  16500	000370	032761 	000000G	000000G		BIT	#TS$PIC,L$BFLG(R1) ; TASK PIC?
  16600	000376	001410 				BEQ	70$		; IF EQ NO
  16700	000400	052702 	000000G			BIS	#LD$REL,R2	; SET PIC FLAG
  16800	000404	032767 	000000G	000000G		BIT	#MP$SY,$SWTCH	; SYSTEM MAPPED?
  16900	000412	001002 				BNE	70$		; IF NE YES
  17000	000414	052702 	000000G			BIS	#LD$RSV,R2	; FLAG RESERVED APR
P2LBR	MACRO M1110  22-AUG-78 01:51  PAGE 3-3


  17100	000420				70$:				;
  17200	000420	022121 				CMP	(R1)+,(R1)+	; POINT TO TASK DATA BLOCK
  17300	000422	010500 				MOV	R5,R0		; COPY LIBRARY LIST POINTER
  17400	000424	012746 	000010 			MOV	#8.,-(SP)	; PUSH MAX. NUMBER OF LIBRARIES
  17500	000430				80$:				;
  17600	000430	012746 	000000C			MOV	#<L$BLIB-L$BPAR>/2,-(SP) ; PUSH SIZE OF BLOCK IN WORDS
  17700	000434				90$:				;
  17800	000434	012120 				MOV	(R1)+,(R0)+	; COPY LIBRARY DESCRIPTOR
  17900	000436	005316 				DEC	(SP)		; LOOP
  18000	000440	001375 				BNE	90$		; ...
  18100	000442	005226 				INC	(SP)+		; CLEAN STACK
  18200	000444	032760 	000000G	000000C		BIT	#LD$REL,<L$DFLG-L$DCUR>(R0) ; PIC LIBRARY?			;JAK090
  18300	000452	001403 				BEQ	95$		; IF EQ NO					;**-1
  18400	000454	052760 	000000G	000000C		BIS	#LD$RSV,<L$DFLG-L$DCUR>(R0) ; SET APR RESERVATION FLAG		;JAK090
  18500	000462				95$:				;						;**-1
  18600	000462	005316 				DEC	(SP)		; DECREMENT LIBRARY BLOCK COUNT
  18700	000464	001361 				BNE	80$		; IF NE MOVE NEXT BLOCK
  18800	000466	005226 				INC	(SP)+		; CLEAN STACK
  18900	000470	016705 	177304 			MOV	LBADR,R5	; GET ADDRESS OF LIBRARY BLOCK
  19000	000474	024545 				CMP	-(R5),-(R5)	; ADJUST R5 TO MATCH OFFSETS
  19100	000476	010265 	000000G			MOV	R2,L$BFLG(R5)	; SET FLAG WORD
  19200	000502	012700 	000010'			MOV	#LBRNB+N.FNAM,R0 ; POINT TO FILE NAME
  19300	000506	012065 	000000G			MOV	(R0)+,L$BPAR(R5) ; SETUP LIBRARY NAME
  19400	000512	011065 	000002G			MOV	(R0),L$BPAR+2(R5) ; ...
  19500	000516	032767 	000000G	000000G		BIT	#MP$SY,$SWTCH	; SYSTEM MAPPED?
  19600	000524	001422 				BEQ	100$		; IF EQ NO
  19700	000526	032702 	000000G			BIT	#LD$REL,R2	; LIBRARY PIC
  19800	000532	001417 				BEQ	100$		; IF EQ NO
  19900	000534	166565 	000000G	000000G		SUB	L$BSA(R5),L$BMXV(R5) ; REMOVE ADDRESS BIAS FROM LIBRARY
  20000	000542	166565 	000000G	000000G		SUB	L$BSA(R5),L$BHGV(R5) ; ...
  20100	000550	012703 	000000C			MOV	#<S$V1*400!E$R67>,R3 ; ASSUME NO ROOM FOR LIBRARY
  20200	000554	010465 	000000G			MOV	R4,L$BSA(R5)	; SET NEW BIAS
  20300	000560	060465 	000000G			ADD	R4,L$BHGV(R5)	; RECOMPUTE TOP ADDRESS IN WINDOW ZERO
  20400	000564	060465 	000000G			ADD	R4,L$BMXV(R5)	; RECOMPUTE TOP VIRTUAL ADDRESS OF LIBRARY
  20500	000570	103405 				BCS	110$		; IF C/S ERROR
  20600	000572				100$:				;
  20700	000572					CLOSE$	$INIPT		; CLOSE TASK FILE
  20800	000602	000406 				BR	130$		;
  20900	000604				110$:				;
  21000	000604					CLOSE$	$INIPT		; CLOSE TASK FILE
  21100	000614				120$:				;
  21200	000614	000167 	000526 			JMP	ERXT		; REPORT ERROR
  21300	000620				130$:				;
  21400	000620	022767 	000006 	000004G		CMP	#6,$LBRHD+4	; TOO MANY LIBRARIES REFERENCED
  21500	000626	103466 				BLO	205$		; IF LO YES
  21600	000630	005067 	177164 			CLR	LBRNB+N.FVER	; RESET FILE VERSION
  21700	000634					CALL	FNDLF		; FIND LIBRARY FILE
  21800	000640	005067 	177150 			CLR	LBRNB+N.FNAM+4	; RESET THIRD WORD OF NAME
  21900	000644				140$:				;
  22000	000644	012703 	000000C			MOV	#<S$V1*400!E$R71>,R3 ; ASSUME INVALID APR RESERVATION
  22100	000650	012700 	000702'			MOV	#170$,R0	; GET DISPATCH TABLE ADDRESS
  22200	000654	016501 	000000G			MOV	L$BFLG(R5),R1	; GET FLAGS
  22300	000660	032701 	000000G			BIT	#LD$RSV,R1	; APR RESERVED?
  22400	000664	001401 				BEQ	150$		; IF EQ NO
  22500	000666	022020 				CMP	(R0)+,(R0)+	; ADJUST TABLE ADDRESS
  22600	000670				150$:				;
  22700	000670	032701 	000000G			BIT	#LD$REL,R1	; LIBRARY PIC?
P2LBR	MACRO M1110  22-AUG-78 01:51  PAGE 3-4


  22800	000674	001401 				BEQ	160$		; IF EQ NO
  22900	000676	005720 				TST	(R0)+		; ADJUST TABLE ADDRESS
  23000	000700				160$:				;
  23100	000700	000130 				JMP	@(R0)+		; DISPATCH ON TABLE ADDRESS
  23200	000702	000724'			170$:	.WORD	190$		; ADDRESS BOUND CHECK
  23300	000704	000712'				.WORD	180$		; ADDRESS BOUND CHECK IF UNMAPPED
  23400	000706	001346'				.WORD	ERXT		; APR RESERVED FOR ABS. LIBRARY
  23500	000710	000724'				.WORD	190$		; CHECK ADDRESS BOUND IF APR RESERVED
  23600	000712				180$:				;
  23700	000712	005002 				CLR	R2		; CLEAR TOP ADDRESS LIMIT
  23800	000714	032767 	000000G	000000G		BIT	#MP$SY,$SWTCH	; SYSTEM MAPPED?
  23900	000722	001022 				BNE	200$		; IF NE YES
  24000	000724				190$:				;
  24100	000724	012703 	000000C			MOV	#<S$V1*400!E$R80>,R3  ; ASSUME INCORRECT ADDRESS ALIGNMENT
  24200	000730	016501 	000000G			MOV	L$BSA(R5),R1	; GET STARTING ADDRESS OF LIBRARY
  24300	000734	036701 	000000G			BIT	$ADBND,R1	; ALIGNMENT OK?
  24400	000740	001066 				BNE	213$		; IF NE NO
  24500	000742	016502 	000000G			MOV	L$BMXV(R5),R2	; GET TOP VIRTUAL ADDRESS IN LIBRARY
  24600	000746	160102 				SUB	R1,R2		; COMPUTE LENGTH
  24700	000750	062702 	000100 			ADD	#100,R2		; ROUND TO 32W BLOCKS
  24800	000754	042702 	000077 			BIC	#77,R2		; ...
  24900	000760	006102 				ROL	R2		; CONVERT TO 32W BLOCKS
  25000	000762	006102 				ROL	R2		; ...
  25100	000764	106102 				ROLB	R2		; ...
  25200	000766	000302 				SWAB	R2		; ...
  25300	000770				200$:				;
  25400	000770	010500 				MOV	R5,R0		; COPY CURRENT LIBRARY BLOCK ADDRESS
  25500	000772	022020 				CMP	(R0)+,(R0)+	; POINT TO LIBRARY NAME
  25600	000774					CALL	$VLBMP		; VERIFY ADDRESS BOUNDS
  25700	001000	012703 	000000C			MOV	#<S$V1*400!E$R61>,R3 ; ASSUME BOUNDARY ERROR
  25800	001004				205$:				;
  25900	001004	103560 				BCS	ERXT		; IF C/S ERROR
  26000	001006				210$:				;
  26100	001006	012703 	000000C			MOV	#<S$V1*400!E$R67>,R3 ; ASSUME TOO MANY LIBRARIES
  26200	001012	012704 	000004G			MOV	#$LBRHD+4,R4	; POINT TO LIBRARY COUNT
  26300	001016	005214 				INC	(R4)		; INCREMENT COUNT
  26400	001020	021427 	000010 			CMP	(R4),#8.	; TOO MANY LIBRARY REFS.?
  26500	001024	103150 				BHIS	ERXT		; IF HIS YES
  26600	001026	016501 	000000G			MOV	L$BSEG(R5),R1	; GET SIZE OF SEGMENT DESCRIPTORS
  26700	001032	020127 	000002G			CMP	R1,#S$ZSEG+2	; LIBRARY HAVE RESIDENT OVERLAYS?
  26800	001036	103402 				BLO	212$		; IF LO, NO
  26900	001040	010167 	000000G			MOV	R1,$SZSEG	;  SET SIZE OF SEGMENT DESCRIPTORS
  27000	001044				212$:				;
  27100	001044	012703 	000000C			MOV	#<S$V1*400!E$R92>,R3 ; ASSUME LIBRARY OFFSET TOO LARGE
  27200	001050	016701 	000000G			MOV	$LBOFF,R1	; GET TASK OFFSET
  27300	001054	066501 	000000G			ADD	L$BOFF(R5),R1	; ADD LIBRARY OFFSET
  27400	001060	103532 				BCS	ERXT		; IF C/S ERROR
  27500	001062	010167 	000000G			MOV	R1,$LBOFF	; SAVE OFFSET
  27600	001066	066567 	000000G	000000G		ADD	L$BWND(R5),$MXWND ; UPDATE NUMBER OF TASK WINDOWS
  27700	001074	012703 	000000C			MOV	#<S$V1*400!E$R88>,R3 ; ASSUME LIBRARY REFERENCES OVERLAID LIBR.
  27800	001100	026565 	000000G	000000G		CMP	L$BLDZ(R5),L$BMXZ(R5) ; LIBRARY OVERLAID?
  27900	001106	001404 				BEQ	215$		; IF EQ NO
  28000	001110	032767 	000000G	000000G		BIT	#SW$NH,$TKSW	; BUILDING LIBRARY?
  28100	001116				213$:				;
  28200	001116	001113 				BNE	ERXT		; IF NE YES, ERROR
  28300	001120				215$:				;
  28400	001120	012701 	000000G			MOV	#L$DLGH,R1	; GET LENGTH OF ENTRY
P2LBR	MACRO M1110  22-AUG-78 01:51  PAGE 3-5


  28500	001124					CALL	$ALBLK		; ALLOCATE BLOCK
  28600	001130	010054 				MOV	R0,@-(R4)	; LINK TO OLD LAST
  28700	001132	010014 				MOV	R0,(R4)		; SET NEW LAST
  28800	001134	005720 				TST	(R0)+		; STEP PAST LINK WORD FOR COPY
  28900	001136	022525 				CMP	(R5)+,(R5)+	; ADJUST LIBRARY LIST POINTER
  29000	001140	012701 	000000C			MOV	#L$DLGH-4/2,R1	; SET NUMBER OF WORDS TO COPY
  29100	001144				220$:				;
  29200	001144	012520 				MOV	(R5)+,(R0)+	; COPY ENTRY
  29300	001146					SOB	R1,220$		; ...
  29400	001152					CALL	$ALEL1		; ALLOCATE LARGE ELEMENT DESCR.
  29500	001156					CALL	$LCKPG		; LOCK DESCRIPTOR IN MEMORY
  29600	001162	011460 	000000G			MOV	(R4),E$LLGH(R0)	; SET ADDRESS OF LIBRARY LIST ENTRY
  29700	001166	010146 				MOV	R1,-(SP)	; SAVE DESCRIPTOR VIRTUAL ADDRESS
  29800	001170	016701 	000000G			MOV	$LBSWT,R1	; GET LIBRARY FILE SWITCH WORD
  29900	001174	042701 	000000C			BIC	#^C<SW$MA>,R1	; CLEAR ALL BUT MAP SWITCH
  30000	001200	052701 	000000G			BIS	#SW$RL,R1	; SET RESIDENT LIBRARY ELEMENT FLAG
  30100	001204	010160 	000000G			MOV	R1,E$LSWT(R0)	; SET ELEMENT SWITCH WORD
  30200	001210	010001 				MOV	R0,R1		; SAVE REAL ADDRESS OF DESCRIPTOR
  30300	001212					CALL	$GTRT		; GET ADDRESS OF ROOT SEGMENT IN R0
  30400	001216	062700 	000000G			ADD	#S$GELT,R0	; POINT TO ELEMENT DESCRIPTOR
  30500	001222	012061 	000000G			MOV	(R0)+,E$LNXT(R1) ; SET ADDRESS OF LINK-NEXT
  30600	001226	001001 				BNE	230$		; IF NE HAVE LINK NEXT
  30700	001230	011610 				MOV	(SP),(R0)	; THIS FILE ALSO LAST IN LIST
  30800	001232				230$:				;
  30900	001232	012601 				MOV	(SP)+,R1	; RETRIEVE ADDRESS OF ELEMENT DESCR.
  31000	001234	010140 				MOV	R1,-(R0)	; MAKE THIS ELEMENT FIRST
  31100	001236					CALL	$UNLPG		; UNLOCK PAGE
  31200	001242	005715 				TST	(R5)		; REACHED END OF LIST?
  31300	001244	001442 				BEQ	EXIT		; IF EQ YES
  31400	001246	024545 				CMP	-(R5),-(R5)	; ADJUST POINTER TO MATCH OFFSETS
  31500	001250	000167 	177344 			JMP	130$		; GO AGAIN
  31600
  31700					;
  31800					; FIND CURRENT STB FILE
  31900					;
  32000
  32100	001254				FNDLF:				;
  32200	001254	012701 	000010'			MOV	#LBRNB+N.FNAM,R1 ; POINT TO FILE NAME
  32300	001260	016521 	000000G			MOV	L$BPAR(R5),(R1)+ ; SET FILENAME
  32400	001264	016521 	000002G			MOV	L$BPAR+2(R5),(R1)+ ; ...
  32500	001270	005002 				CLR	R2		; CLEAR DATASET POINTER
  32600
  32700					;
  32800					; PARSE FIND .TSK OR .STB FILE
  32900					;
  33000
  33100	001272				PRFND:				;
  33200	001272	016700 	000000G			MOV	$INIPT,R0	; GET ADDRESS OF RECORD BLOCK
  33300	001276	016046 	000044 			MOV	F.DSPT(R0),-(SP) ; SAVE ADDRESS OF DATASET DESCRIPTOR
  33400	001302	016046 	000046 			MOV	F.DFNB(R0),-(SP) ; SAVE ADDRESS OF DEFAULT NAMEBLOCK
  33500	001306	010260 	000044 			MOV	R2,F.DSPT(R0)	; SET ADDRESS OF DATASET DESCRIPTOR
  33600	001312	012760 	000002'	000046 		MOV	#LBRNB,F.DFNB(R0) ; SET ADDRESS OF DEFAULT NAME BLOCK
  33700	001320					CALL	$PRFND		; PARSE/FIND THE FILE
  33800	001324	012660 	000046 			MOV	(SP)+,F.DFNB(R0) ; RESTORE ADDRESS OF DEFAULT NAME BLOCK
  33900	001330	012660 	000044 			MOV	(SP)+,F.DSPT(R0) ; RESTORE ADDRESS OF DATASET DESCRIPTOR
  34000	001334	103401 				BCS	10$		; IF C/S ERROR
  34100	001336					RETURN			;
P2LBR	MACRO M1110  22-AUG-78 01:51  PAGE 3-6


  34200	001340				10$:				;
  34300	001340	005226 				INC	(SP)+		; REMOVE RETURN ADDRESS FROM STACK
  34400	001342	012703 	000000C			MOV	#<S$V1*400!E$R62>,R3 ; SET ERROR/SEVERITY
  34500	001346				ERXT:				;
  34600	001346					CALL	$P2OPE		; REPORT ERROR
  34700
  34800					;
  34900					; RETURN LIBRARY BLOCK TO DYNAMIC STORAGE AND EXIT
  35000					;
  35100
  35200	001352				EXIT:				;
  35300	001352	016702 	176422 			MOV	LBADR,R2	; GET ADDRESS OF LIBRARY BLOCK
  35400	001356	012701 	000000G			MOV	#L$BPRI,R1	; GET SIZE OF ALLOCATION
  35500	001362	012700 	000000G			MOV	#$FRHD,R0	; GET LISTHEAD ADDRESS
  35600	001366					CALLR	$RLCB		; RELEASE CORE BLOCK
  35700
  35800		000001 				.END
P2LBR	MACRO M1110  22-AUG-78 01:51  PAGE 3-7
SYMBOL TABLE

B.BBFS= 000010   	FA.RD = 000001   	F.BKDN= 000026   	LD$RSV= ****** GX	SW$RL = ****** GX
B.BFST= 000015   	FA.RWD= 004000   	F.BKDS= 000020   	LF    = 000012   	S$GELT= ****** GX
B.NXBD= 000012   	FA.SEQ= 040000   	F.BKEF= 000050   	L$BFLG= ****** GX	S$V1  = ****** GX
B.VBN = 000004   	FA.SHR= 000040   	F.BKP1= 000051   	L$BHGV= ****** GX	S$ZSEG= ****** GX
CH.AND= 000001   	FA.TMP= 000020   	F.BKST= 000024   	L$BLDZ= ****** GX	S.BFHD= 000020
CR    = 000015   	FA.WCK= 020000   	F.BKVB= 000064   	L$BLIB= ****** GX	S.FATT= 000016
CS.DIF= 000002   	FA.WRT= 000002   	F.CHR = 000075   	L$BMXV= ****** GX	S.FDB = 000140
CS.DVF= 000004   	FD.BLK= 000010   	F.CNTG= 000034   	L$BMXZ= ****** GX	S.FNAM= 000006
CS.EQU= 000040   	FD.CCL= 000002   	F.DFNB= 000046   	L$BOFF= ****** GX	S.FNB = 000036
CS.INP= 000001   	FD.COM= 020000   	F.DSPT= 000044   	L$BPAR= ****** GX	S.FNBW= 000017
CS.MOR= 000020   	FD.CR = 000002   	F.DVNM= 000134   	L$BPRI= ****** GX	S.FNTY= 000004
CS.NMF= 000001   	FD.DIR= 000010   	F.EFBK= 000010   	L$BSA = ****** GX	S.FTYP= 000002
CS.OUT= 000002   	FD.FTN= 000001   	F.EFN = 000050   	L$BSEG= ****** GX	S.NFEN= 000020
CS.WLD= 000010   	FD.F11= 040000   	F.EOBB= 000032   	L$BWND= ****** GX	TSKTYP  000040RG
C.CMLD= 000002   	FD.INS= 000010   	F.ERR = 000052   	L$DCUR= ****** GX	TS$PIC= ****** GX
C.DEVD= 000006   	FD.ISP= 002000   	F.FACC= 000043   	L$DFLG= ****** GX	VT    = 000013
C.DIRD= 000012   	FD.MNT= 100000   	F.FFBY= 000014   	L$DLGH= ****** GX	$ADBND= ****** GX
C.DSDS= 000006   	FD.OSP= 004000   	F.FNAM= 000110   	MP$SY = ****** GX	$ALBLK= ****** GX
C.FILD= 000016   	FD.PLC= 000004   	F.FNB = 000102   	NB.DEV= 000200   	$ALEL1= ****** GX
C.MKW1= 000024   	FD.PRN= 000004   	F.FTYP= 000116   	NB.DIR= 000100   	$FRHD = ****** GX
C.MKW2= 000026   	FD.PSE= 010000   	F.FVER= 000120   	NB.NAM= 000004   	$GTRT = ****** GX
C.SIZE= 000054   	FD.RAH= 000001   	F.HIBK= 000004   	NB.SD1= 000400   	$INIPT= ****** GX
C.STAT= 000001   	FD.RAN= 000002   	F.LUN = 000042   	NB.SD2= 001000   	$LBOFF= ****** GX
C.SWAD= 000022   	FD.REC= 000001   	F.MBCT= 000054   	NB.SNM= 000040   	$LBRHD= ****** GX
C.TYPR= 000000   	FD.RWM= 000001   	F.MBC1= 000055   	NB.STP= 000020   	$LBSWT= ****** GX
ERXT    001346R  	FD.SDI= 000020   	F.MBFG= 000056   	NB.SVR= 000010   	$LCKPG= ****** GX
EXIT    001352R  	FD.SQD= 000040   	F.NRBD= 000024   	NB.TYP= 000002   	$LIBR   000042RG
E$LLGH= ****** GX	FD.TTY= 000004   	F.NREC= 000030   	NB.VER= 000001   	$MXWND= ****** GX
E$LNXT= ****** GX	FD.WBH= 000002   	F.OVBS= 000030   	N.DID = 000024   	$PRFND= ****** GX
E$LSWT= ****** GX	FF    = 000014   	F.RACC= 000016   	N.DVNM= 000032   	$P2OPE= ****** GX
E$R61 = ****** GX	FF.CHR= 000005   	F.RATT= 000001   	N.FID = 000000   	$RLCB = ****** GX
E$R62 = ****** GX	FF.NV = 000003   	F.RCNM= 000034   	N.FNAM= 000006   	$SAVVR= ****** GX
E$R66 = ****** GX	FF.POE= 000002   	F.RCTL= 000017   	N.FTYP= 000014   	$STRCB= ****** GX
E$R67 = ****** GX	FF.RWD= 000001   	F.RSIZ= 000002   	N.FVER= 000016   	$SWTCH= ****** GX
E$R68 = ****** GX	FF.RWF= 000006   	F.RTYP= 000000   	N.NEXT= 000022   	$SZSEG= ****** GX
E$R71 = ****** GX	FF.SPC= 000004   	F.SEQN= 000100   	N.STAT= 000020   	$TKSW = ****** GX
E$R80 = ****** GX	FNDLF   001254R  	F.SPDV= 000072   	N.UNIT= 000034   	$UNLPG= ****** GX
E$R88 = ****** GX	FO.APD= 000106   	F.SPUN= 000074   	PAR$$$= 000067   	$VLBMP= ****** GX
E$R92 = ****** GX	FO.MFY= 000002   	F.STBK= 000036   	PRFND   001272R  	$$    = 000001
FA.APD= 000100   	FO.RD = 000001   	F.UNIT= 000136   	R$$11M= 000000   	.CLOSE= ****** G
FA.CRE= 000010   	FO.UPD= 000006   	F.URBD= 000020   	R.FIX = 000001   	.GETSQ= ****** G
FA.DLK= 001000   	FO.WRT= 000016   	F.VBN = 000064   	R.SEQ = 000003   	.OPFNB= ****** G
FA.ENB= 100000   	F.ACTL= 000076   	F.VBSZ= 000060   	R.VAR = 000002   	...GBL= 000000
FA.EXC= 002000   	F.ALOC= 000040   	HT    = 000011   	SPA   = 000040   	...PC1= 000000
FA.EXT= 000004   	F.BBFS= 000062   	LBADR   000000R  	SW$MA = ****** GX	...PC2= 000016R
FA.NSP= 000100   	F.BDB = 000070   	LBRNB   000002R  	SW$NH = ****** GX	...PC3= 000000
FA.POS= 010000   	F.BGBC= 000057   	LD$REL= ****** GX	SW$PI = ****** GX	...TPC= 000140

. ABS.	000000	   000
      	001372	   001
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  3247 WORDS  ( 13 PAGES)
DYNAMIC MEMORY:  3828 WORDS  ( 14 PAGES)
ELAPSED TIME:  00:00:24
OBJ$:P2LBR,LIS$:P2LBR/-SP=SRC$:MACFLM,FCSPR,P2LBR
