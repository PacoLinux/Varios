P2POP	MACRO M1110  22-AUG-78 01:52  PAGE 2


      1						.TITLE	P2POP
      2						.IDENT	/08/
      3					                                                                                ;**-1
      4					;
      5					; COPYRIGHT   1973,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
      6					; COPYRIGHT   1974,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
      7					; COPYRIGHT   1975,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
      8					; COPYRIGHT   1976,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
      9					;
     10					; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
     11					; ON A  SINGLE COMPUTER SYSTEM AND CAN BE COPIED (WITH INCLUSION
     12					; OF DEC'S COPYRIGHT NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
     13					; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
     14					;
     15					; THE  INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
     16					; NOTICE AND  SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
     17					; EQUIPMENT CORPORATION.
     18					;
     19					; DEC  ASSUMES NO  RESPONSIBILITY  FOR  THE  USE  OR RELIABILITY
     20					; OF ITS  SOFTWARE ON  EQUIPMENT WHICH  IS NOT SUPPLIED BY DEC.
     21					;
     22					; VERSION 08
     23					;                                                                               ;**-1
     24					; C. MONIA 26-MAR-74
     25					;
     26					; MODIFICATIONS:
     27					;
     28					; NO.		DATE		PROGRAMMER
     29					; ---		----		----------
     30					;
     31					; 039		22-MAR-75	C. MONIA
     32					; 041		15-MAY-75	C. MONIA
     33					; 043		21-JAN-76	C. MONIA
     34					; 044		21-JAN-76	C. MONIA
     35					; 045		21-JAN-76	C. MONIA
     36					; 050		26-FEB-76	C. MONIA
     37					; 051		02-MAR-76	C. MONIA
     38					; 052		02-MAR-76	C. MONIA
     39					; 061		17-MAY-76	C. MONIA
     40					;
     41					;
     42					; POST-OPTION PROCESSING
     43					;
     44					; MACRO LIBRARY CALLS
     45					;
     46
     47						.MCALL	GTIM$S
     48					;
     49					; LOCAL MACROS
     50					;
     51					; CREATE DEFAULT GLOBAL DEFINITION
     52					;
     53					; GBLDF	SYM,VAL
     54					;
     55					; WHERE:
     56					;
     57					;	SYM=1 TO 6 CHARACTER SYMBOL NAME
P2POP	MACRO M1110  22-AUG-78 01:52  PAGE 2-1


     58					;	VAL=UNRELOCATED SYMBOL VALUE
     59					;
     60
     61						.MACRO	GBLDF	SYM,VAL
     62						.PSECT	GBLD$D,D
     63						.WORD	0
     64					NN=.
     65					.=.-4
     66						.RAD50	/SYM/
     67					.=NN
     68						.WORD	VAL
     69						.WORD	0
     70						.PSECT
     71						.ENDM
     72
     73					;
     74					; LOCAL DATA
     75					;
     76
     77						.IF	DF	R$$11M
     78
     79					;
     80					; APR ALLOCATION BITMAP TABLE
     81					;
     82
     83		000002 				.RADIX	2
     84
     85	000000	   001 			APRMP:	.BYTE	00000001	;
     86	000001	   003 				.BYTE	00000011	;
     87	000002	   007 				.BYTE	00000111	;
     88	000003	   017 			APRMK:	.BYTE	00001111	; APR MASK FOR PRIVELEGED TASKS
     89	000004	   037 				.BYTE	00011111	;
     90	000005	   077 				.BYTE	00111111	;
     91	000006	   177 				.BYTE	01111111	;
     92	000007	   377 				.BYTE	11111111	;
     93
     94		000010 				.RADIX	8.
     95
     96						.ENDC
     97
     98
     99					;
    100					; HIGH ADDRESS LIMIT
    101					;
    102
    103	000010				HGHAD:	.BLKW	1		;
    104
    105						.IF	DF	R$$11M
    106
    107					;
    108					; TABLE OF ADDRESS OFFSETS FOR PRIVILEGED TASKS
    109					;
    110
    111	000012	100000 			OFFST:	.WORD	100000		; APR 4 OFFSET
    112	000014	120000 				.WORD	120000		; APR 5 OFFSET
    113	000016	140000 				.WORD	140000		; APR 6 OFFSET
    114
P2POP	MACRO M1110  22-AUG-78 01:52  PAGE 2-2


    115					;
    116					; TABLE OF PARTITION LIMITS FOR PRIVILEGED TASKS
    117					;
    118
    119	000020	057777 			PLIMIT:	.WORD	60000-1		; APR 4 LIMIT
    120	000022	037777 				.WORD	40000-1		; APR 5 LIMIT
    121	000024	017777 				.WORD	20000-1		; APR 6 LIMIT
    122
    123						.ENDC
    124
    125
    126					;+
    127					; **-$P2POP-PERFORM POST-OPTION PROCESSING
    128					;
    129					; THIS ROUTINE IS CALLED AFTER ALL OPTIONS HAVE BEEN ENTERED TO
    130					; MAP LIBRARIES IN THE TASKS ADDRESSING SPACE
    131					;
    132					; INPUTS:
    133					;	NONE
    134					;
    135					; OUTPUTS:
    136					;	NONE
    137					;
    138					;-
    139
    140	000026				$P2POP::			;
    141	000026					GTIM$S	#$BGTIM		; RECORD START OF PROCESSING
    142	000040	016700 	000000G			MOV	$NUMWN,R0	; GET NUMBER OF TASK ADDRESS WINDOWS
    143	000044	066700 	000000G			ADD	$MXWND,R0	; COMPUTE WINDOW ALLOCATION
    144	000050	020027 	000010 			CMP	R0,#8.		; TOO MANY WINDOWS REQUIRED?
    145	000054	101404 				BLOS	21$		; IF LOS NO
    146	000056	012701 	000000C			MOV	#<S$V2*400!E$R86>,R1 ; GET ERROR/SEVERITY
    147	000062	005002 				CLR	R2		; CLEAR PARAMETER BLOCK ADDRESS
    148	000064	000503 				BR	50$		; REPORT FATAL ERROR
    149	000066				21$:				;
    150	000066	012700 	000000G			MOV	#$LUNHD,R0	; GET ADDRESS OF ASSIGNMENT LISTHEAD
    151	000072	012701 	000000G			MOV	#$DFASG,R1	; GET DEFAULT ASSIGNMENT LIST
    152	000076	012102 				MOV	(R1)+,R2	; GET NUMBER OF ASSIGNMENTS
    153	000100				22$:				;
    154	000100	005302 				DEC	R2		; DECREMENT ASSIGNMENT COUNT
    155	000102	002413 				BLT	26$		; IF LT DONE
    156	000104	026167 	000006 	000000G		CMP	6(R1),$NUNIT	; LUN WITHIN RANGE?
    157	000112	101004 				BHI	24$		; IF HI NO
    158	000114	012011 				MOV	(R0)+,(R1)	; DISPLACE OLD FIRST IN LIST
    159	000116	001001 				BNE	23$		; IF NE LIST NOT EMPTY
    160	000120	010110 				MOV	R1,(R0)		; SET THIS AS ENTRY AS LAST IN LIST
    161	000122				23$:				;
    162	000122	010140 				MOV	R1,-(R0)	; SET NEW FIRST
    163	000124				24$:				;
    164	000124	062701 	000010 			ADD	#10,R1		; ADVANCE TO NEXT ASSIGNMENT
    165	000130	000763 				BR	22$		;
    166	000132				26$:				;
    167
    168						.IF	NDF	R$$11M
    169
    170						RETURN			;
    171
P2POP	MACRO M1110  22-AUG-78 01:52  PAGE 2-3


    172						.IFF
    173
    174					;
    175					; ASSIGN THE DEFAULT PARTITION IF NECESSARY AND
    176					; ALLOCATE APRS IF THE TARGET SYSTEM IS MAPPED.
    177					;
    178
    179	000132	012767 	177777 	177650 		MOV	#177777,HGHAD	; SET HIGH ADDRESS BOUND TO MAX
    180	000140	016701 	000000G			MOV	$OFFST,R1	; GET BASE ADDRESS
    181	000144	016702 	000000G			MOV	$HGHAD,R2	; GET HIGH ADDRESS LIMIT
    182	000150	032767 	000000G	000000G		BIT	#PA$RT,$MEMFL	;++041 EXPLICIT PARTITION SPECIFIED?
    183	000156	001050 				BNE	60$		;++041 IF NE YES
    184	000160	032767 	000000G	000000G		BIT	#EX$TSK,$MEMFL	;++041 TASK EXTENSION SPECIFIED?
    185	000166	001044 				BNE	60$		;++041 IF NE YES
    186	000170	005000 				CLR	R0		; ELSE REQUEST DEFAULT
    187	000172					CALL	$GTPPR		; GET BASE ADDRESS, LENGTH
    188	000176	103004 				BCC	30$		; IF C/C OK
    189	000200	012701 	000000C			MOV	#<S$V2*400!E$R70>,R1 ; ERROR, RUNNING ON 'FOREIGN' SYSTEM
    190	000204	010602 				MOV	SP,R2		; SET DUMMY PARAMETER BLOCK ADDRESS
    191	000206	000432 				BR	50$		;
    192	000210				30$:				;
    193	000210	032767 	000000G	000000G		BIT	#MP$SY,$SWTCH	;++041 MAPPED SYSTEM?
    194	000216	001002 				BNE	35$		;++041 IF NE YES
    195	000220	005702 				TST	R2		;++041 SYSTEM CONTROLLED PARTITION?
    196	000222	001420 				BEQ	40$		;++041 IF EQ YES ERROR
    197	000224				35$:				;++041
    198	000224	010267 	000000G			MOV	R2,$PARSZ	;++041 SET PARTITION SIZE
    199	000230					CALL	$VTKMP		;++041 VERIFY NO DUPLICATE NAME
    200	000234	103413 				BCS	40$		;++041 IF C/S DUPLICATE NAME
    201	000236	036701 	000000G			BIT	$ADBND,R1	; TEST ADDRESS ALIGNMENT
    202	000242	001010 				BNE	40$		; IF NE INCORRECT BOUND
    203	000244	020267 	000000G			CMP	R2,$ADLIM	; CHECK ADDRESS LIMITS
    204	000250	101005 				BHI	40$		; IF HI ERROR
    205	000252	010167 	000000G			MOV	R1,$OFFST	; SET BASE ADDDRESS
    206	000256	010267 	000000G			MOV	R2,$HGHAD	; SET HIGH ADDRESS BOUND
    207	000262	000406 				BR	60$		;
    208	000264				40$:				;
    209	000264	012701 	000000C			MOV	#<S$V2*400!E$R81>,R1 ; GET ERROR/SEVERITY
    210	000270	012702 	000000G			MOV	#$PNAME,R2	; POINT TO PARTITION NAME
    211	000274				50$:				;
    212	000274					CALL	$ERMSG		; OUTPUT ERROR, NO RETURN
    213	000300				60$:				;
    214	000300	005005 				CLR	R5		; CLEAR APR MAP
    215	000302	032767 	000000G	000000G		BIT	#MP$SY,$SWTCH	; MAPPED SYSTEM ?
    216	000310	001443 				BEQ	100$		; IF EQ NO, SET RELOCATION BIAS FOR LIBS
    217	000312	032767 	000000G	000000G		BIT	#SW$NH,$TKSW	; BUILDING LIBRARY?
    218	000320	001032 				BNE	80$		; IF NE YES
    219	000322	005701 				TST	R1		; TASK START AT ZERO?
    220	000324	001357 				BNE	40$		; IF NE NO, ERROR
    221	000326	032767 	000000C	000000G		BIT	#<SW$PR!SW$AC>,$TKSW ; TASK PRIVELEGED?
    222	000334	001424 				BEQ	80$		; IF EQ NO
    223	000336	016704 	000000G			MOV	$PRVAP,R4	; GET FIRST APR TO MAP TASK
    224	000342	001421 				BEQ	80$		; IF EQ USE NON-PRIVELGED MAPPING
    225	000344	162704 	000004 			SUB	#4,R4		; SUBTRACT LOW LIMIT
    226	000350	156405 	000003'			BISB	APRMK(R4),R5	; RESERVE EXEC. APR SET
    227	000354	152705 	000200 			BISB	#200,R5		; EXCLUDE I/O PAGE
    228	000360	006304 				ASL	R4		; CONVERT NUMBER TO WORD BIAS
P2POP	MACRO M1110  22-AUG-78 01:52  PAGE 2-4


    229	000362	016467 	000012'	000000G		MOV	OFFST(R4),$OFFST ; SET TASK ADDRESS BIAS
    230	000370	020264 	000020'			CMP	R2,PLIMIT(R4)	; PARTITION BOUNDARY LEGAL?
    231	000374	101333 				BHI	40$		; IF HI NO
    232	000376	066402 	000012'			ADD	OFFST(R4),R2	; BIAS UPPER TASK LIMIT
    233	000402	010267 	000000G			MOV	R2,$HGHAD	; RESET HIGH ADDRESS BOUND                      ;**NEW**
    234	000406				80$:				;                                               ;**-7
    235	000406					CALL	CVAPR		; CONVERT R2 HIGH LIMIT TO NUMBER OF APRS
    236	000412	156205 	000000'			BISB	APRMP(R2),R5	; RESERVE ALL TASK APRS
    237	000416	000400 				BR	100$		;
    238
    239					;
    240					; NOW ALLOCATE APRS TO ALL REFERENCED LIBRARIES
    241					;
    242
    243	000420				100$:				;
    244	000420	012704 	177776 			MOV	#-2,R4		; SET FLAG FOR RESERVED/ABS ALLOCATION
    245	000424					CALL	APRAL		; ALLOCATE APRS
    246	000430	005404 				NEG	R4		; SET FLAG FOR PIC ALLOCATION
    247	000432				APRAL:				;
    248	000432	005046 				CLR	-(SP)		; ALLOCATE STACK FOR LIBRARY ENTRY ADDRESS
    249	000434	005046 				CLR	-(SP)		; ALLOCATE SPACE FOR LIBRARY SIZE
    250	000436	012700 	000000C			MOV	#<$LBRHD-L$DNXT>,R0 ; GET LISTHEAD ADDRESS MINUS OFFSET
    251	000442				10$:				;
    252	000442	016000 	000000G			MOV	L$DNXT(R0),R0	; GET NEXT ENTRY
    253	000446	001466 				BEQ	80$		; IF EQ DONE WITH ALLOCATION
    254	000450	032760 	000000G	000000G		BIT	#LD$RSV,L$DFLG(R0) ; APR RESERVED ?
    255	000456	000164 	000464'			JMP	20$(R4)		; BRANCH ON CONDITION CODES
    256	000462	001024 				BNE	50$		; IF NE CHECK APRS
    257	000464	000401 			20$:	BR	30$		; CHECK IF LIBRARY ABSOLUTE
    258	000466	001365 				BNE	10$		; BYPASS, ALREADY RESERVED
    259	000470				30$:				;
    260	000470	032760 	000000G	000000G		BIT	#LD$REL,L$DFLG(R0) ; RELOCATABLE LIBRARY ?
    261	000476	000164 	000504'			JMP	40$(R4)		; DISPATCH ON CONDITION CODES
    262	000502	001414 				BEQ	50$		; CHECK APRS FOR ABS LIBRARY
    263	000504	000756 			40$:	BR	10$		; DEFER PIC ALLOCATION
    264	000506	001755 				BEQ	10$		; IF EQ BYPASS ABS LIBRARY
    265	000510	016001 	000000G			MOV	L$DMXV(R0),R1	; GET TOP ADDRESS
    266	000514	166001 	000000G			SUB	L$DSA(R0),R1	; COMPUTE LENGTH-1
    267	000520	020116 				CMP	R1,(SP)		; THIS LIBRARY MAX?
    268	000522	103747 				BLO	10$		; IF LO NO
    269	000524	010116 				MOV	R1,(SP)		; SET NEW MAX
    270	000526	010066 	000002 			MOV	R0,2(SP)	; SAVE ENTRY ADDRESS
    271	000532	000743 				BR	10$		; GET NEXT ENTRY
    272	000534				50$:				;
    273	000534	016001 	000000G			MOV	L$DSA(R0),R1	; GET STARTING ADDRESS
    274	000540	032767 	000000G	000000G		BIT	#MP$SY,$SWTCH	; TARGET SYSTEM MAPPED?
    275	000546	001461 				BEQ	115$		; IF EQ NO
    276	000550	010102 				MOV	R1,R2		; SET STARTING ADDRESS
    277	000552					CALL	CVAPR		; CONVERT TO APR NUMBER
    278	000556	010201 				MOV	R2,R1		; SAVE APR
    279	000560	016002 	000000G			MOV	L$DMXV(R0),R2	; GET MAX VIRTUAL TASK ADDRESS
    280	000564	166002 	000000G			SUB	L$DSA(R0),R2	; CONVERT TO LENGTH
    281	000570					CALL	CVAPR		; CONVERT TO APR INDEX
    282	000574	116202 	000000'			MOVB	APRMP(R2),R2	; GET APR MAPPING
    283	000600				60$:				;
    284	000600	005301 				DEC	R1		; DECREMENT APR NUMBER
    285	000602	002403 				BLT	70$		; IF LT MAP POSITIONED FOR TEST
P2POP	MACRO M1110  22-AUG-78 01:52  PAGE 2-5


    286	000604	106302 				ASLB	R2		; SHIFT MAP
    287	000606	103505 				BCS	130$		; IF C/S NO ROOM FOR LIBRARY
    288	000610	000773 				BR	60$		; GO AGAIN
    289	000612				70$:				;
    290	000612	016001 	000000G			MOV	L$DSA(R0),R1	; GET STARTING ADDRESS
    291	000616	130205 				BITB	R2,R5		; APRS AVAILABLE ?
    292	000620	001100 				BNE	130$		; IF NE NO
    293	000622	000432 				BR	110$		; RESERVE APRS
    294	000624				80$:				;
    295	000624	012602 				MOV	(SP)+,R2	; RETRIEVE LENGTH OF MAX PIC
    296	000626	012600 				MOV	(SP)+,R0	; RETRIEVE ADDRESS OF MAX.
    297	000630	000164 	000636'			JMP	90$(R4)		; DISPATCH ON COND. CODES
    298	000634	000500 				BR	POPEX		; EXIT
    299	000636	000240 			90$:	NOP			;
    300	000640	001476 				BEQ	POPEX		; ALLOCATED ALL LIBS., EXIT
    301	000642					CALL	CVAPR		; CONVERT TO APR INDEX
    302	000646	005001 				CLR	R1		; SET INITIAL APR
    303	000650	116202 	000000'			MOVB	APRMP(R2),R2	; GET APR MAPPING
    304	000654	100403 				BMI	100$		; IF MI AT TOP OF MEMORY
    305	000656				95$:				;
    306	000656	005201 				INC	R1		; INCREMENT APR NUMBER
    307	000660	106102 				ROLB	R2		; ROTATE MAP
    308	000662	100375 				BPL	95$		; IF PL GO AGAIN
    309	000664				100$:				;
    310	000664	130205 				BITB	R2,R5		; THIS APR SET ALLOCATED ?
    311	000666	001404 				BEQ	105$		; IF EQ NO
    312	000670	106002 				RORB	R2		; SHIFT MAP
    313	000672	103453 				BCS	130$		; IF C/S NO ROOM
    314	000674	005301 				DEC	R1		; DECREMENT APR
    315	000676	000772 				BR	100$		; GO AGAIN
    316	000700				105$:				;
    317	000700	006201 				ASR	R1		; CONVERT APR TO 4K ADDRESS
    318	000702	006001 				ROR	R1		;
    319	000704	006001 				ROR	R1		;
    320	000706	006001 				ROR	R1		;
    321	000710				110$:				;
    322	000710	150205 				BISB	R2,R5		; ALLOCATE APRS
    323	000712				115$:				;
    324	000712	020167 	177072 			CMP	R1,HGHAD	;++041 THIS ADDRESS LOWEST?
    325	000716	103005 				BHIS	117$		;++041 IF HIS NO
    326	000720	010167 	177064 			MOV	R1,HGHAD	;++041 SET NEW UPPER LIMIT
    327	000724	001402 				BEQ	117$		; IF EQ AT LOW LIMIT
    328	000726	005367 	177056 			DEC	HGHAD		; DECREMENT HIGH ADDRESS BOUND
    329	000732				117$:				;++041
    330	000732	010160 	000000G			MOV	R1,L$DCUR(R0)	; SET CURRENT BASE
    331	000736	010160 	000000G			MOV	R1,L$DSA(R0)	; SET STARTING ADDRESS
    332	000742	032767 	000000G	000000G		BIT	#MP$SY,$SWTCH	; MAPPED SYSTEM?
    333	000750	001417 				BEQ	118$		; IF EQ NO
    334	000752	032760 	000000G	000000G		BIT	#LD$REL,L$DFLG(R0) ; LIBRARY RELOCATABLE?
    335	000760	001413 				BEQ	118$		; IF EQ NO
    336	000762	032760 	000000G	000000G		BIT	#LD$RSV,L$DFLG(R0) ; APR RESERVED?
    337	000770	001007 				BNE	118$		; IF NE YES
    338	000772	052760 	000000G	000000G		BIS	#LD$RSV,L$DFLG(R0) ; RESERVE APRS NOW
    339	001000	060160 	000000G			ADD	R1,L$DMXV(R0)	; RELOCATE TOP ADDRESS
    340	001004	060160 	000000G			ADD	R1,L$DHGV(R0)	; RELOCATE WINDOW 0 TOP ADDRESS
    341	001010				118$:				;
    342	001010	000174 	001016'			JMP	@120$(R4)	; DISPATCH OFF FLAG
P2POP	MACRO M1110  22-AUG-78 01:52  PAGE 2-6


    343	001014	000442'				.WORD	10$		; GET NEXT ENTRY
    344	001016	000432'			120$:	.WORD	APRAL		; GET NEXT PIC ALLOCATION
    345	001020	000432'				.WORD	APRAL		; ...
    346	001022				130$:				;
    347	001022	010002 				MOV	R0,R2		; COPY ENTRY ADDRESS
    348	001024	005722 				TST	(R2)+		; POINT TO LIBRARY NAME
    349	001026	012701 	000000C			MOV	#<S$V2*400!E$R65>,R1 ; GET ERROR/SEVERITY
    350	001032					CALL	$ERMSG		; FATAL-NO RETURN
    351	001036				POPEX:				;
    352	001036	010567 	000000G			MOV	R5,$APRMP	; RECORD APR ALLOCATION
    353	001042	032767 	000000G	000000G		BIT	#EX$TSK,$MEMFL	;++041 EXTEND TASK IMAGE?
    354	001050	001003 				BNE	10$		;++041 IF NE YES
    355	001052	005767 	000000G			TST	$PARSZ		;++041 SYSTEM CONTROLLED PARTITION?
    356	001056	001003 				BNE	20$		;++041 IF NE NO
    357	001060				10$:				;++041
    358	001060	016767 	176724 	000000G		MOV	HGHAD,$HGHAD	;++041 RESET HIGH ADDRESS LIMIT
    359	001066				20$:				;++041
    360	001066					RETURN			;
    361
    362					;
    363					; CONVERT ADDRESS IN R2 TO APR NUMBER
    364					;
    365
    366	001070				CVAPR:				;
    367	001070	042702 	017777 			BIC	#17777,R2	; TRUNCATE TO 4K
    368	001074	006302 				ASL	R2		; BIT 15 TO C
    369	001076	006102 				ROL	R2		; BITS 15 - 13 TO 2 - 0
    370	001100	006102 				ROL	R2		;
    371	001102	006102 				ROL	R2		;
    372	001104					RETURN			;
    373
    374						.ENDC
    375
    376		000001 				.END
P2POP	MACRO M1110  22-AUG-78 01:52  PAGE 2-7
SYMBOL TABLE

APRAL   000432R  	G.TIHR= 000006   	L$DMXV= ****** GX	S$V2  = ****** GX	$MXWND= ****** GX
APRMK   000003R  	G.TIMI= 000010   	L$DNXT= ****** GX	VT    = 000013   	$NUMWN= ****** GX
APRMP   000000R  	G.TIMO= 000002   	L$DSA = ****** GX	$ADBND= ****** GX	$NUNIT= ****** GX
CR    = 000015   	G.TISC= 000012   	MP$SY = ****** GX	$ADLIM= ****** GX	$OFFST= ****** GX
CVAPR   001070R  	G.TIYR= 000000   	OFFST   000012R  	$APRMP= ****** GX	$PARSZ= ****** GX
EX$TSK= ****** GX	HGHAD   000010R  	PA$RT = ****** GX	$BGTIM= ****** GX	$PNAME= ****** GX
E$R65 = ****** GX	HT    = 000011   	PLIMIT  000020R  	$DFASG= ****** GX	$PRVAP= ****** GX
E$R70 = ****** GX	LD$REL= ****** GX	POPEX   001036R  	$ERMSG= ****** GX	$P2POP  000026RG
E$R81 = ****** GX	LD$RSV= ****** GX	R$$11M= 000000   	$GTPPR= ****** GX	$SWTCH= ****** GX
E$R86 = ****** GX	LF    = 000012   	SPA   = 000040   	$HGHAD= ****** GX	$TKSW = ****** GX
FF    = 000014   	L$DCUR= ****** GX	SW$AC = ****** GX	$LBRHD= ****** GX	$VTKMP= ****** GX
G.TICP= 000016   	L$DFLG= ****** GX	SW$NH = ****** GX	$LUNHD= ****** GX	$$    = 000001
G.TICT= 000014   	L$DHGV= ****** GX	SW$PR = ****** GX	$MEMFL= ****** GX	$$$OST= 000020
G.TIDA= 000004

. ABS.	000000	   000
      	001106	   001
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  1515 WORDS  ( 6 PAGES)
DYNAMIC MEMORY:  2772 WORDS  ( 10 PAGES)
ELAPSED TIME:  00:00:12
OBJ$:P2POP,LIS$:P2POP/-SP=SRC$:MACFLM,P2POP
