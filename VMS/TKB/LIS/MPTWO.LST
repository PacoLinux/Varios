MPTWO	MACRO M1110  22-AUG-78 01:48  PAGE 2


      1						.TITLE	MPTWO
      2						.IDENT	/03/
      3					;
      4					;
      5					; COPYRIGHT (C) 1976
      6					; COPYRIGHT (C) 1977
      7					; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
      8					;
      9					; THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ONLY ON A
     10					; SINGLE COMPUTER SYSTEM AND MAY  BE  COPIED   ONLY  WITH  THE
     11					; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE,  OR
     12					; ANY OTHER COPIES THEREOF, MAY NOT BE PROVIDED  OR  OTHERWISE
     13					; MADE AVAILABLE TO ANY OTHER PERSON   EXCEPT FOR  USE ON SUCH
     14					; SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE  TERMS.  TITLE
     15					; TO AND OWNERSHIP OF THE SOFTWARE SHALL AT ALL  TIMES  REMAIN
     16					; IN DEC.
     17					;
     18					; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
     19					; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
     20					; EQUIPMENT CORPORATION.
     21					;
     22					; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
     23					; ITS SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
     24					;
     25					;
     26					; VERSION 03
     27					;                                                                               ;**-1
     28					; D. N. CUTLER/C. MONIA 25-JAN-74/ J.A. KASSON 20-APR-76
     29					;
     30					; MODIFICATIONS
     31					;
     32					; NO.		DATE		PROGRAMMER
     33					; ---		----		----------
     34					;
     35					; 021		25-JAN-74	C. MONIA
     36					; 034		07-JAN-75	C. MONIA
     37					; 036		14-JAN-75	C. MONIA                                        ;**NEW**
     38					; 039		22-MAR-75	C. MONIA
     39					; 043		28-OCT-75	C. MONIA
     40					; 048		11-FEB-76	C. MONIA
     41					; 053		17-MAR-76	C. MONIA
     42					; JAK100	 5-APR-77	; CHANGES FOR MULTIUSER TASKS
     43					;
     44
     45
     46					;
     47					; LOCAL DATA
     48					;
     49	000000				LEFT:	.BLKW	1	;NUMBER OF SYMBOLS LEFT TO BE OUTPUT
     50	000002				NSPC:			;NUMBER OF SYMBOLS PER COLUNM
     51	000002				STRTE:	.BLKW	1	;START OF SECTION CONTRIBUTOR
     52	000004				CRSEC:	.BLKW	1	;CURRENT SECTION
     53	000006				CSLTH:	.BLKW	1	;LENGTH OF CURRENT SECTION
     54	000010				CSBSE:	.BLKW	1	;BASE ADDRESS OF CURRENT SECTION
     55	000012				NSPP:	.BLKW	1	;NUMBER OF SYMBOLS PER PAGE
     56	000014				T1:	.BLKW	1
     57	000016				T2:	.BLKW	1
MPTWO	MACRO M1110  22-AUG-78 01:48  PAGE 2-1


     58	000020				T3:	.BLKW	1
     59	000022				CCNTBL:	.BLKW	7.	;COLUNM COUNT TABLE
     60	000040				CPTR:	.BLKW	21.	;TOP OF COLUNM SYMBOL POINTER
     61
     62
     63					; LOCAL MACRO
     64					;
     65					;+
     66
     67
     68	000000					.PSECT	STB1$D,D,GBL
     69					;+
     70					; GNATR- CREATES TABLE CONTAINING LENGTH OF ATTRIBUTE
     71					;	 TEXT, ATTRIBUTE SWITCH, AND TEXT FOR ATTRIBTES.
     72					;
     73					;	A=ATTRIBUTE SWITCH
     74					;	B=ATTRIBUTE'S TEXT FOR FLAG =1
     75					;	C=ATTRIBUTE'S TEXT FOR FLAG =0
     76					;
     77					;
     78
     79						.MACRO	GNATR	A,B,C
     80						.NCHR	B'C,<B>
     81						.WORD	B'C
     82						.WORD	A
     83					B:	.ASCII	/B,/
     84					.=B+4
     85					C:	.ASCII	/C,/
     86					.=C+4
     87						.ENDM
     88
     89	000000				PSARG:		;ATTRIBUTE SWITCH VECTOR
     90	000000					GNATR	CS$ACC,RO,RW
     91	000014					GNATR	CS$TYP,D,I
     92	000030					GNATR	CS$GBL,GBL,LCL
     93	000044					GNATR	CS$REL,REL,ABS
     94	000060					GNATR	CS$ALO,OVR,CON
     95		000005 			PSARGN=<.-PSARG>/12.	;NUMBER OF ATTRIBUTES
     96	000000					.PSECT	MTX2$D,D,GBL
     97
     98	000000	   045 	   116 	   052 	FMT1:	.ASCIZ	/%N*** ROOT SEGMENT: %2R%3N/;
	000003	   052 	   052 	   040
	000006	   122 	   117 	   117
	000011	   124 	   040 	   123
	000014	   105 	   107 	   115
	000017	   105 	   116 	   124
	000022	   072 	   040 	   045
	000025	   062 	   122 	   045
	000030	   063 	   116 	   000
     99	000033	   052 	   052 	   052 	FMT2:	.ASCIZ	/*** SEGMENT: %2R%3N/;
	000036	   040 	   123 	   105
	000041	   107 	   115 	   105
	000044	   116 	   124 	   072
	000047	   040 	   045 	   062
	000052	   122 	   045 	   063
	000055	   116 	   000
    100	000057	   122 	   055 	   117 	FMT3:	.ASCIZ	/R-O MEM  LIMITS: %P %P %P %U.%N/
MPTWO	MACRO M1110  22-AUG-78 01:48  PAGE 2-2


	000062	   040 	   115 	   105
	000065	   115 	   040 	   040
	000070	   114 	   111 	   115
	000073	   111 	   124 	   123
	000076	   072 	   040 	   045
	000101	   120 	   040 	   045
	000104	   120 	   040 	   045
	000107	   120 	   040 	   045
	000112	   125 	   056 	   045
	000115	   116 	   000
    101	000117	   122 	   057 	   127 	FMT4:	.ASCIZ	*R/W MEM  LIMITS: %P %P %P %U.%N*;
	000122	   040 	   115 	   105
	000125	   115 	   040 	   040
	000130	   114 	   111 	   115
	000133	   111 	   124 	   123
	000136	   072 	   040 	   045
	000141	   120 	   040 	   045
	000144	   120 	   040 	   045
	000147	   120 	   040 	   045
	000152	   125 	   056 	   045
	000155	   116 	   000
    102	000157	   104 	   111 	   123 	FMT5:	.ASCIZ	/DISK BLK LIMITS: %P %P %P %U.%N/;
	000162	   113 	   040 	   102
	000165	   114 	   113 	   040
	000170	   114 	   111 	   115
	000173	   111 	   124 	   123
	000176	   072 	   040 	   045
	000201	   120 	   040 	   045
	000204	   120 	   040 	   045
	000207	   120 	   040 	   045
	000212	   125 	   056 	   045
	000215	   116 	   000
    103	000217	   045 	   062 	   116 	FMT32:	.ASCIZ	/%2NMEMORY ALLOCATION SYNOPSIS:%2N/;
	000222	   115 	   105 	   115
	000225	   117 	   122 	   131
	000230	   040 	   101 	   114
	000233	   114 	   117 	   103
	000236	   101 	   124 	   111
	000241	   117 	   116 	   040
	000244	   123 	   131 	   116
	000247	   117 	   120 	   123
	000252	   111 	   123 	   072
	000255	   045 	   062 	   116
	000260	   000
    104	000261	   123 	   105 	   103 	FMT52:	.ASCIZ	/SECTION%40STITLE  IDENT  FILE%N/
	000264	   124 	   111 	   117
	000267	   116 	   045 	   064
	000272	   060 	   123 	   124
	000275	   111 	   124 	   114
	000300	   105 	   040 	   040
	000303	   111 	   104 	   105
	000306	   116 	   124 	   040
	000311	   040 	   106 	   111
	000314	   114 	   105 	   045
	000317	   116 	   000
    105	000321	   055 	   055 	   055 	FMT53:	.ASCIZ	/-------%40S-----  -----  ----%N/
	000324	   055 	   055 	   055
MPTWO	MACRO M1110  22-AUG-78 01:48  PAGE 2-3


	000327	   055 	   045 	   064
	000332	   060 	   123 	   055
	000335	   055 	   055 	   055
	000340	   055 	   040 	   040
	000343	   055 	   055 	   055
	000346	   055 	   055 	   040
	000351	   040 	   055 	   055
	000354	   055 	   055 	   045
	000357	   116 	   000
    106	000361	   045 	   062 	   122 	FMT54:	.ASCII	/%2R:(/
	000364	   072 	   050
    107		000005 				.REPT	PSARGN
    108						.ASCII	/%VA/
    109						.ENDR
    110	000405	   051 	   040 	   045 		.ASCIZ	/) %P %P %U.%N/
	000410	   120 	   040 	   045
	000413	   120 	   040 	   045
	000416	   125 	   056 	   045
	000421	   116 	   000
    111	000423	   045 	   062 	   066 	FMT55:	.ASCIZ	/%26S%P %P %U. %2R %2R %X%N/
	000426	   123 	   045 	   120
	000431	   040 	   045 	   120
	000434	   040 	   045 	   125
	000437	   056 	   040 	   045
	000442	   062 	   122 	   040
	000445	   045 	   062 	   122
	000450	   040 	   045 	   130
	000453	   045 	   116 	   000
    112	000456	   045 	   063 	   116 	FMT56:	.ASCIZ	/%3NGLOBAL SYMBOLS:%2N/
	000461	   107 	   114 	   117
	000464	   102 	   101 	   114
	000467	   040 	   123 	   131
	000472	   115 	   102 	   117
	000475	   114 	   123 	   072
	000500	   045 	   062 	   116
	000503	   000
    113	000504	   045 	   106 	   000 	FMT57:	.ASCIZ	/%F/
    114						.EVEN
    115
    116	000112					.PSECT
    117
    118
    119					;+
    120					; **-$MPSEG-MAP SEGMENT
    121					;
    122					; THIS ROUTINE IS CALLED TO WRITE A SEGMENT NAME INTO THE LOAD
    123					; MAP FILE.
    124					;
    125					; INPUTS:
    126					;
    127					;	$CRSEG=ADDRESS OF CURRENT SEGMENT DESCRIPTOR.
    128					;
    129					; OUTPUTS:
    130					;
    131					;	SEGMENT NAME IS WRITTEN INTO THE LOAD MAP FILE.
    132					;-
    133
MPTWO	MACRO M1110  22-AUG-78 01:48  PAGE 2-4


    134	000112				$MPSEG::SAVRG			;SAVE NONVOLITILE REGISTERS
    135	000116					CALL	$MPFSH		;FLUSH SYMBOL BUFFER
    136	000122	026727 	000000G	000001 		CMP	$NUMSG,#1	;MORE THEN ONE SEGMENT?
    137	000130	001403 				BEQ	5$		;IF EQ YES - DON'T FORCE NEW PAGE
    138	000132	012767 	000000G	000000G		MOV	#P$LNTH,$LNCNT	;FORCE FULL PAGE
    139	000140				5$:
    140	000140	016700 	000000G			MOV	$CRSEG,R0	;GET ADDRESS OF CURRENT SEGMENT
    141	000144	016022 	000000G			MOV	S$GNME(R0),(R2)+;INSERT SEGMENT NAME
    142	000150	016012 	000002G			MOV	S$GNME+2(R0),(R2);
    143	000154	012701 	000033'			MOV	#FMT2,R1	; GET ADDRESS OF FORMAT
    144	000160	026767 	000000G	000000G		CMP	$CRVSG,$RTSEG	; CURRENT ROOT?
    145	000166	001005 				BNE	10$		; IF NE NO
    146	000170	012701 	000000'			MOV	#FMT1,R1	; GET ALTERNATE FORMAT ADDRESS
    147	000174	016767 	000000G	000000G		MOV	$OFFST,$BEGRW	; SET BEGINNING OF RW MEMORY
    148	000202				10$:	CALL	$MPOUT		;OUTPUT SEGMENT NAME
    149	000206	016701 	000000G			MOV	$CRSEG,R1	; GET ADDRESS OF CURRENT SEGMENT		;JAK100
    150	000212	032761 	000000G	000000G		BIT	#SG$RO,S$GSTS(R1) ; R-O SEGMENT?				;JAK100
    151	000220	001031 				BNE	20$		; IF NE YES					;JAK100
    152	000222	012701 	000117'			MOV	#FMT4,R1	; GET ADDRESS OF FORMAT
    153	000226	016722 	000000G			MOV	$BEGRW,(R2)+	;INSERT BEGINNING OF RW AREA
    154	000232	016712 	000000G			MOV	$ENDRW,(R2)	;INSERT END OF RW AREA
    155	000236	021262 	177776 			CMP	(R2),-2(R2)	;++021 ANY LENGTH ?
    156	000242	001004 				BNE	15$		;++021 IF NE YES
    157	000244	005722 				TST	(R2)+		;++021 POINT TO LENGTH
    158	000246	005022 				CLR	(R2)+		; CLEAR LENGTH                                  ; 043
    159	000250	005012 				CLR	(R2)		; ...                                           ; 043
    160	000252	000402 				BR	17$		;++021
    161	000254				15$:				;++021
    162	000254					CALL	$MPEDT		;++021 OUTPUT CORE LIMITS
    163	000260				17$:				;
    164	000260					CALL	$MPOUT		;++021 OUTPUT CORE LIMITS
    165	000264	026767 	000000G	000000G		CMP	$CRVSG,$RTSEG	; CURRENT ROOT?
    166	000272	001016 				BNE	25$		;IF NE NO
    167	000274	026767 	000000G	000000G		CMP	$ENDRO,$ENDRW	; ANY RO AREA
    168	000302	001412 				BEQ	25$		;IF EQ NO
    169	000304				20$:										;JAK100
    170	000304	016722 	000000G			MOV	$BEGRO,(R2)+	;INSERT BEGINNING OF RO AREA
    171	000310	016712 	000000G			MOV	$ENDRO,(R2)	;
    172	000314	012701 	000057'			MOV	#FMT3,R1	;GET ADDRESS OF FORMAT
    173	000320					CALL	$MPEDT		;OUTPUT RO CORE LIMITS
    174	000324					CALL	$MPOUT		; OUTPUT LINE					;JAK100
    175	000330	032767 	000000G	000000G	25$:	BIT	#TS$KF,$SWTCH	;TASK IMAGE FILE SPECIFIED?
    176	000336	001436 				BEQ	100$		;IF EQ NO
    177	000340	016701 	000000G			MOV	$CRSEG,R1	; GET REAL ADDRESS OF CURRENT SEGMENT           ; 048
    178	000344	132761 	000000G	000000G		BITB	#SG$DSK,S$GSTS(R1) ; SEGMENT HAVE DISK ALLOCATION?              ; 048
    179	000352	001030 				BNE	100$		; IF NE NO                                      ; 048
    180	000354	016112 	000000G			MOV	S$GBLK(R1),(R2)	;INSERT STARTING DISK BLOCK NUMBER
    181	000360	012212 				MOV	(R2)+,(R2)	;COPY BLOCK NUMBER
    182	000362	016100 	000000G			MOV	S$GLNG(R1),R0	;GET LENGTH
    183	000366	000241 				CLC			;CLEAR CARRY FOR DIVIDE BY 2
    184	000370	001004 				BNE	27$		;++021 IF NE SEGMENT HAS LENGTH
    185	000372	005722 				TST	(R2)+		;++021 POINT TO LENGTH
    186	000374	005022 				CLR	(R2)+		; CLEAR LENGTH                                  ; 043
    187	000376	005022 				CLR	(R2)+		; ...                                           ; 043
    188	000400	000411 				BR	28$		;++021 OUTPUT DISK BLOCK LIMITS
    189	000402				27$:				;++021
    190	000402	006000 				ROR	R0		;CONVERT LENGTH TO WORDS
MPTWO	MACRO M1110  22-AUG-78 01:48  PAGE 2-5


    191	000404	062700 	000377 			ADD	#377,R0		;ROUND TO NEXT BLOCK
    192	000410	105000 				CLRB	R0		;CLEAR LOW BYTE
    193	000412	000300 				SWAB	R0		;DIVIDE BY 256. WORDS
    194	000414	005300 				DEC	R0		;BACK OFF BY ONE
    195	000416	060012 				ADD	R0,(R2)		;CALCULATE ENDING BLOCK NUMBER
    196	000420					CALL	$MPEDT		;CALC LENGTH
    197	000424				28$:				;
    198	000424	012701 	000157'			MOV	#FMT5,R1	;GET ADDRESS OF FORAMT
    199	000430					CALL	$MPOUT		;OUTPUT
    200	000434	012701 	000217'		100$:	MOV	#FMT32,R1	;GET ADDRESS OF FORMAT
    201	000440					CALL	$MPOUT		;OUTPUT SYNOPSIS HEADING
    202	000444	012701 	000261'			MOV	#FMT52,R1
    203	000450					CALL	$MPOUT		;OUTPUT HEADING
    204	000454	012701 	000321'			MOV	#FMT53,R1
    205	000460					CALL	$MPOUT		;UNDERSCORING
    206	000464	016700 	000000G			MOV	$CRSEG,R0	;GET ADDRESS OF CURRENT SEGMENT
    207	000470	032767 	000000G	000000G		BIT	#SE$QA,$SWTCH	;SEQUENCE ALLOCATION?
    208	000476	001404 				BEQ	105$		;IF EQ NO
    209	000500	062700 	000000G			ADD	#S$GSEQ,R0	;POINT TO SEQUENCE LISTHEAD
    210	000504	010046 				MOV	R0,-(SP)	;SET ADDRESS OF FIRST LINK WORD
    211	000506	000404 				BR	110$		;
    212	000510	062700 	000000G		105$:	ADD	#S$GCST,R0	;POINT TO SECTION TABLE
    213	000514	012746 	000000G			MOV	#$ISED,-(SP)	;SET ADDRESS OF SYMBOL EDIT ROUTINE
    214	000520	032767 	000000G	000000G	110$:	BIT	#SE$QA,$SWTCH	;SEQUENCE ALLOCATION?
    215	000526	001410 				BEQ	120$		;IF EQ NO
    216	000530	013600 				MOV	@(SP)+,R0	;GET ADDRESS OF NEXT ENTRY
    217	000532	001543 				BEQ	165$		;IF EQ DONE
    218	000534	010046 				MOV	R0,-(SP)	;SET ADDRESS OF NEXT LINK WORD
    219	000536	016001 	000002 			MOV	2(R0),R1	; GET VA OF SECTION TABLE ENTRY
    220	000542					CALL	$CVRL		; CONVERT TO REAL ADDRESS
    221	000546	000412 				BR	130$		;
    222	000550				120$:	CALL	@(SP)+		;GET NEXT SYMBOL
    223	000552	103533 				BCS	165$		;IF CS DONE
    224	000554	132760 	000000G	000000G		BITB	#CS$IND,C$SFLG(R0)	;INDIRECT REFERECE?
    225	000562	001404 				BEQ	130$		;IF EQ NO
    226	000564	016001 	000000G			MOV	C$SBSE(R0),R1	;POINTER TO DEFINITION
    227	000570					CALL	$CVRL		;CONVERT TO REAL
    228	000574	012702 	000000G		130$:	MOV	#$SYMBF,R2	;GET ADDRESS OF SYMBOL BUFFER
    229	000600					CALL	$MPCHK		;CHECK SECTION NAME
    230	000604	026267 	177774 	000000G		CMP	-4(R2),$ABSNM	;ABS SECTION?
    231	000612	001742 				BEQ	110$		;IN EQ YES - IGNORE
    232	000614					CALL	MPCSA		;INSERT PSECT'S ATTRIBUTES
    233	000620	010167 	177160 			MOV	R1,CRSEC	;SAVE VIRT ADDRESS OF CURRENT SECTION
    234	000624	016012 	000000G			MOV	C$SBSE(R0),(R2) ;SET BASE ADDRESS OF SECTION
    235	000630	012267 	177154 			MOV	(R2)+,CSBSE	;SAVE BASE ADDRESS OF SECTION
    236	000634	016001 	000000G			MOV	C$SFLG(R0),R1	;GET FLAGS
    237	000640	010167 	177152 			MOV	R1,T2		;SAVE FLAGS
    238	000644	132701 	000000G			BITB	#CS$REL,R1	;ABS SECTION?
    239	000650	001406 				BEQ	135$		; IF EQ YES
    240	000652	032701 	000000C			BIT	#<CS$VSC!CS$VAS*400!CS$LIB>,R1 ; LIBRARY OR VIRTUAL SECTION?
    241	000656	001003 				BNE	135$		;IF NE YES
    242	000660	066762 	000000G	177776 		ADD	$OFFST,-2(R2)	;ADD IN OFFSET
    243	000666				135$:
    244	000666	016067 	000000G	177106 		MOV	C$SCUR(R0),STRTE ;SAVE BASE ADDRESS
    245	000674	016012 	000000G			MOV	C$SLTH(R0),(R2)	;SET LENGTH OF SECTION
    246	000700	011267 	177102 			MOV	(R2),CSLTH	;SAVE LENGTH OF SECTION
    247	000704	012222 				MOV	(R2)+,(R2)+	;COPY LENGTH
MPTWO	MACRO M1110  22-AUG-78 01:48  PAGE 2-6


    248	000706	012701 	000361'			MOV	#FMT54,R1	;GET ADDRESS OF FORMAT
    249	000712	005067 	177076 			CLR	T1		;T1 IS USE TO FLAG BLANK SECTION
    250	000716	005760 	000000G			TST	S$YM(R0)	; BLANK SECTION?
    251	000722	001002 				BNE	140$		; IF NE NO
    252	000724	105267 	177064 			INCB	T1		; SET - INDICATING BLANK SECTION
    253	000730				140$:
    254	000730	132760 	000000C	000000G		BITB	#<CS$LIB!CS$ALO>,C$SFLG(R0) ; LIBRARY OR OVR?
    255	000736	001004 				BNE	144$		;IF EQ NO
    256	000740	132760 	000000G	000000G		BITB	#CS$REL,C$SFLG(R0);ABS SECTION?
    257	000746	001002 				BNE	145$		;IF NE NO
    258	000750				144$:
    259	000750	105267 	177041 			INCB	T1+1		; SET -FLAG OVR OR LIB
    260	000754				145$:
    261	000754					CALL	$MPOUT		;OUTPUT SECTION INFO
    262	000760	012746 	000000G			MOV	#$STELM,-(SP)	;STEP THRU ELEMENTS
    263	000764				150$:	CALL	@(SP)+
    264	000766	103405 				BCS	160$		;IS C SET NO MORE ELEMENTS
    265	000770	016700 	000000G			MOV	$CRELM,R0	;ADDRESS OF ELEMENT TABLE
    266	000774					CALL	MPCTB		;FIND & PRINT CONTRIBUTION
    267	001000	000771 				BR	150$		;GET NEXT ELEMENT
    268	001002				160$:
    269	001002	016701 	176776 			MOV	CRSEC,R1	;GET VIRTUAL ADDRESS OF SECTION
    270	001006					CALL	$CVRL		;CONVERT TO REAL
    271	001012					CALL	$WRMPG		; WRITE MARK PAGE
    272	001016	016760 	176760 	000000G		MOV	STRTE,C$SLGS(R0)	;CALCULATE LENGTH
    273	001024	166060 	000000G	000000G		SUB	C$SCUR(R0),C$SLGS(R0)	; OF SECTION CONTRIBUTIONS
    274	001032	016760 	176744 	000000G		MOV	STRTE,C$SCUR(R0)	; NEW CURRENT BASE
    275	001040	000627 				BR	110$
    276	001042				165$:
    277	001042					CALL	MPGBL
    278	001046					RETURN
    279
    280
    281					;+
    282					;
    283					; MPCSA -INSERT CONTROL SECTION ATTRIBUTES
    284					;
    285					;-
    286	001050				MPCSA:	SAVRG
    287	001054	012705 	000000'			MOV	#PSARG,R5	;ATTRIBUTE VECTOR
    288	001060	012704 	000005 			MOV	#PSARGN,R4	;NUMBER OF ATTRIBUTES
    289	001064				10$:
    290	001064	012512 				MOV	(R5)+,(R2)	;LENGTH OF TEXT
    291	001066	005222 				INC	(R2)+		;INCREMENT LENGTH
    292	001070	005012 				CLR	(R2)
    293	001072	032560 	000000G			BIT	(R5)+,C$SFLG(R0);ATTRIBUTE FLAG SET?
    294	001076	001002 				BNE	15$
    295	001100	012712 	000004 			MOV	#4,(R2)		;GET ADDRESS OF TEXT FOR FLAG =0
    296	001104	060522 			15$:	ADD	R5,(R2)+	;GET ADDRESS OF TEXT FOR FLAG =1
    297	001106	022525 				CMP	(R5)+,(R5)+	;MOVE TO NEXT ENTRY
    298	001110	022525 				CMP	(R5)+,(R5)+
    299	001112					SOB	R4,10$		;MORE?
    300	001116	005362 	177774 			DEC	-4(R2)		;NO DO AWAY WITH LAST COMMA
    301	001122					RETURN
    302
    303					;
    304					; MPCTB-FIND CONTRIBUTORS TO SECTION
MPTWO	MACRO M1110  22-AUG-78 01:48  PAGE 2-7


    305					;
    306
    307	001124				MPCTB:
    308	001124					SAVRG
    309	001130	016005 	000000G			MOV	E$LNUM(R0),R5	;SAVE NUM OF SECTS IN MAPPING TABLE
    310	001134	100506 				BMI	25$		;IF MI	MAPPINF TABLE HAS NO ENRIES
    311	001136	005205 				INC	R5		;INCR. NUMBER OF ENTRIES
    312	001140	016003 	000000G			MOV	E$LCMT(R0),R3	;REAL ADDRESS OF MAPPING TABLE
    313	001144				10$:
    314	001144	012702 	000000G			MOV	#$SYMBF,R2	;ADDRESS OF ARGUMENT POINTER
    315	001150	022367 	176630 			CMP	(R3)+,CRSEC	;MAP ENTRY FOR CURRENT SECTION
    316	001154	001073 				BNE	20$		;IF NE NO
    317	001156	016722 	176620 			MOV	STRTE,(R2)+	;INSERT START OF CONTRIBUTION
    318	001162	016701 	176630 			MOV	T2,R1		;GET SECTION FLAGS
    319	001166	132701 	000000G			BITB	#CS$REL,R1	;ABS. SECTION?
    320	001172	001422 				BEQ	12$		;IF EQ YES
    321	001174	032701 	000000C			BIT	#<CS$VAS*400!CS$LIB>,R1  ; LIBRARY OR VIRTUAL ARRAY?
    322	001200	001017 				BNE	12$		;IF NE YES
    323	001202	032701 	000000C			BIT	#CS$VSC*400,R1	; VIRTUAL SECTION?
    324	001206	001411 				BEQ	11$		; IF EQ NO
    325
    326						.IF DF	V1145
    327
    328						CLR	R0		; CLEAR HIGH PART OF LENGTH
    329						MOV	-(R2),R1	; GET STARTING ADDRESS
    330						DIV	CSLTH,R0	; REDUCE STARTING ADDRESS TO MODULUS OF LENGTH
    331
    332						.IFF
    333
    334	001210	014200 				MOV	-(R2),R0	; GET STARTING ADDRESS
    335	001212	016701 	176570 			MOV	CSLTH,R1	; GET LENGTH
    336	001216					CALL	$DIV		; REDUCE STARTING ADDRESS TO MODULUS OF LENGTH
    337
    338						.ENDC
    339
    340	001222	066701 	176562 			ADD	CSBSE,R1	; BIAS BY BASE ADDRESS
    341	001226	010122 				MOV	R1,(R2)+	; SET BASE OF CONTRIBUTION
    342	001230	000403 				BR	12$		;
    343	001232				11$:				;
    344	001232	066762 	000000G	177776 		ADD	$OFFST,-2(R2)	; INCLUDE OFFSET
    345	001240				12$:
    346	001240	011312 				MOV	(R3),(R2)	;INSERT LENGTH
    347	001242	105767 	176546 			TSTB	T1		;BLANK SECTION?
    348	001246	001402 				BEQ	15$		;IF EQ	NO
    349	001250	005713 				TST	(R3)		;BLANK SECTION -LENGTH ZERO?
    350	001252	001434 				BEQ	20$		;IF EQ YES S- SKIP
    351	001254				15$:
    352	001254	012222 				MOV	(R2)+,(R2)+	;COPY LENGTH
    353	001256	105767 	176533 			TSTB	T1+1		; CONCATINATED SECTION?
    354	001262	001002 				BNE	150$		; IF NE NO
    355	001264	061367 	176512 			ADD	(R3),STRTE	;START OF NEXT CONTRBUTION
    356	001270				150$:
    357	001270	016700 	000000G			MOV	$CRELM,R0	; GET ADDRESS OF CURRENT ELEMENT
    358	001274	032760 	000000G	000000G		BIT	#SW$MA,E$LSWT(R0)	; EXCLUDE MODULE?
    359	001302	001020 				BNE	20$			;IF NE YES
    360	001304	016022 	000000G			MOV	E$LMOD(R0),(R2)+	;INSERT TITLE
    361	001310	016022 	000002G			MOV	E$LMOD+2(R0),(R2)+
MPTWO	MACRO M1110  22-AUG-78 01:48  PAGE 2-8


    362	001314	016022 	000000G			MOV	E$LIDT(R0),(R2)+;INSERT IDENT
    363	001320	016022 	000002G			MOV	E$LIDT+2(R0),(R2)+
    364	001324	016701 	000000G			MOV	$INPPT,R1	;GET INPUT FILE RECORD BLK
    365	001330					CALL	$MPFLE		;SET UP FILENAME
    366	001334	012701 	000423'			MOV	#FMT55,R1	; GET ADDRESS OF FORMAT
    367	001340					CALL	$MPOUT		; OUTPUT CONTRIBUTOR
    368	001344				20$:
    369	001344	005723 				TST	(R3)+		;MOVE TO NEXT MAPPING ENTRY
    370	001346	005305 				DEC	R5		;MORE MAPPING ENTRIES?
    371	001350	001275 				BNE	10$		;IF NE YES
    372	001352				25$:
    373	001352					RETURN
    374
    375					;+
    376					; MPGBL- OUTPUTS GOBAL SYMBOLS FOR A SEGMENT
    377					;
    378					;-
    379
    380	001354				MPGBL:
    381	001354					SAVRG			;SAVE NON-VOLITILE REGISTERS
    382	001360	016700 	000000G			MOV	$CRSEG,R0	;REAL ADDRESS OFCURRENT SEGMENT
    383	001364	016067 	000000G	176406 		MOV	S$GNTB(R0),LEFT	;NO. OF SYMBOLS
    384	001372	001560 				BEQ	100$		;IF EQ	NONE
    385	001374	010046 				MOV	R0,-(SP)	;SAVE R0
    386	001376	026727 	000000G	177773G		CMP	$LNCNT,#P$LNTH-5;PAST LINE 55?
    387	001404	100403 				BMI	10$		;IF MI NO
    388	001406	012767 	000000G	000000G		MOV	#P$LNTH,$LNCNT	;FORCE FORM FEED
    389	001414				10$:
    390	001414	012701 	000456'			MOV 	#FMT56,R1	;OUTPUT SYMBOL TABLE HEADER
    391	001420					CALL 	$MPOUT
    392	001424	012600 				MOV	(SP)+,R0	;RESTORE R0
    393	001426	062700 	000000G			ADD	#S$GSTB,R0	;SYMBOL LISTHEAD ADDRESS
    394	001432	012746 	000000G			MOV	#$ISED,-(SP)	;SET ADDRESS OF SYMBOL EDIT ROUTINE
    395	001436				30$:
    396	001436					CALL	CSOP		;CALC. # OF SYMBOLS ON THIS PAGE
    397	001442	016767 	176344 	176344 		MOV	NSPP,T1		;NUMBER OF SYMBOLS PER PAGE
    398	001450	016767 	176326 	176340 		MOV	NSPC,T2		;NUM. OF SYMBOLS PER COLUNM
    399	001456	016767 	000000G	176334 		MOV	$NCLNM,T3	;NUM. OF COLUNMS
    400	001464	012705 	000040'			MOV	#CPTR,R5	;COLUNM POINTER TABLE
    401	001470	012704 	000022'			MOV	#CCNTBL,R4		;COLUNM COUNTER TABLE
    402	001474				40$:
    403	001474					CALL	@(SP)+		;GET SYMBOL
    404	001476	011225 				MOV	(R2),(R5)+	;INSERT LCOUNT
    405	001500	016225 	000002 			MOV	2(R2),(R5)+	;NSERT LHEAD
    406	001504	010125 				MOV	R1,(R5)+	;INSERT POINTER TO TOP OF COLUNM
    407	001506	016724 	176304 			MOV	T2,(R4)+		;INSERT COLUNM COUNT
    408	001512	166767 	176300 	176274 		SUB	T2,T1		;PAGE FULL?
    409	001520	100417 				BMI	50$		;IF MI YES
    410	001522	000401 				BR	450$
    411
    412	001524				45$:
    413	001524					CALL	@(SP)+		;THREAD DOWN SYMBOL TABLE
    414	001526				450$:	CALL	TSTSYM		;TEST SYMBOL FLAGS
    415
    416	001532	103774 				BCS	45$		;IF SET NOT WANTED
    417	001534	005367 	176256 			DEC	T2		;END OF LINE?
    418	001540	001371 				BNE	45$		;IF NE NO
MPTWO	MACRO M1110  22-AUG-78 01:48  PAGE 2-9


    419	001542	005767 	176246 			TST	T1		;END OF PAGE?
    420	001546	001412 				BEQ	60$		;IF EQ YES
    421	001550	016767 	176226 	176240 		MOV	NSPC,T2		;RESTORE COLUNM LENGTH
    422	001556	000746 				BR	40$		;DO NEXT COLUNM
    423	001560				50$:
    424	001560	066767 	176232 	176226 		ADD	T2,T1		;RESTORE COLUNM LENGTH
    425	001566	016764 	176222 	177776 		MOV	T1,-2(R4)	;CHANGE LENGTH
    426	001574				60$:
    427	001574	012746 	000000G			MOV	#$ISD1,-(SP)	;ADDRESS OF SYMBOL TABLE EDIT
    428	001600	016704 	176206 			MOV	NSPP,R4		;NUMBER OF SYMBOLS PER PAGE
    429	001604				65$:
    430
    431	001604	012702 	000040'			MOV 	#CPTR,R2
    432	001610	012705 	000022'			MOV	#CCNTBL,R5	;ADDRESS OF COLUNM COUNTER TABLE
    433	001614	016767 	000000G	176172 		MOV	$NCLNM,T1	;NUMBER OF COLUNMS
    434	001622	012703 	000000G			MOV	#$SYMBF,R3	;ADDRESS OF PARAMETER STORAGE
    435	001626				70$:
    436	001626	005715 				TST	(R5)		;IS THERE A NEXT SYMBOL?
    437	001630	001427 				BEQ	85$		;IF EQ NO MORE FOR COLUNM
    438	001632					CALL	@(SP)+		;GET SYMBOL
    439	001634	103430 				BCS	90$		;IF C SET NO MORE
    440	001636					CALL	TSTSYM		;TEST SYMBOL FLAGS
    441	001642	103410 				BCS	75$		;IF SET DON'T WANT
    442
    443	001644	010246 				MOV	R2,-(SP)	;SAVE CPTR POINTER
    444	001646	010302 				MOV 	R3,R2		;GET SYMBF POINTER ONTO R2
    445	001650					CALL	$MPSYM		;GET SYMBOL AND INSERT
    446	001654	010203 				MOV	R2,R3		;PUT SYMBF PTR BACK
    447	001656	012602 				MOV	(SP)+,R2	;PUT CPTR BACK
    448	001660	005325 				DEC	(R5)+		;DEC. COUNT OF SYMBOLS IN COLUNM
    449	001662	000403 				BR	80$		;IF NE MORE SYMBOLS IN COLUNM
    450	001664				75$:
    451	001664	024242 				CMP	-(R2),-(R2)
    452	001666	005742 				TST 	-(R2)
    453	001670	000756 				BR	70$
    454	001672	005267 	000000G		80$:	INC	$MPFLG		;UPDATE MAP BUFFER FLAG
    455	001676	005304 				DEC	R4		;MORE SYMBOLS ON PAGE?
    456	001700	001406 				BEQ	90$		;IF EQ NO
    457	001702	005367 	176106 			DEC	T1		;END OF LINE?
    458
    459	001706	001347 				BNE	70$		;IF NE NO
    460	001710				85$:
    461	001710					CALL	$MPFSH		;END OF LINE
    462	001714	000733 				BR	65$		;DO NEXT LINE
    463	001716				90$:
    464	001716					CALL	$MPFSH		;END OF PAGE
    465	001722	005226 				INC	(SP)+		;CLEAR STACK
    466	001724	005767 	176050 			TST	LEFT		;ANY SYMBOLS LEFT
    467	001730	001242 				BNE	30$		;IF NE YES
    468	001732	005226 				INC	(SP)+
    469	001734				100$:
    470
    471	001734					RETURN
    472
    473
    474					;
    475					; TSTSYM - TEST SYMBOL FLAG FOR DEFINITION, INDIRECTNESS,AND
MPTWO	MACRO M1110  22-AUG-78 01:48  PAGE 2-10


    476					;	   EXCLUSION.
    477					;
    478
    479	001736				TSTSYM:
    480	001736	000241 				CLC			;CLEAR CARRY BIT
    481	001740	132760 	000000G	000000G		BITB	#SY$DEF,S$YFLG(R0)	;DEFINITION?
    482	001746	001410 				BEQ	10$		;IF EQ NO
    483	001750	132760 	000000G	000000G		BITB	#SY$IND,S$YFLG(R0)	;INDIRECT?
    484	001756	001004 				BNE	10$		;IF NE YES
    485	001760	132760 	000000G	000001G		BITB	#SY$EXC,S$YFLG+1(R0)	;EXCLUDE FLAG SET
    486	001766	001401 				BEQ	20$		;IF NE YES
    487	001770	000261 			10$:	SEC			;SET C - SYMBOL NOT WANTED
    488	001772				20$:	RETURN
    489					;
    490					;
    491					;
    492					; CSOP- CALCULATE NUMBER OF SYMBOLS ON CURRENT PAGE
    493					;
    494
    495	001774				CSOP:
    496	001774					SAVRG			;SAVE NON0VOLATILE REGISTERS
    497	002000	012704 	000000G			MOV	#P$LNTH,R4	;LINES ON A PAGE
    498	002004	166704 	000000G			SUB	$LNCNT,R4	;LINES REMAINING ON PAGE
    499	002010	001002 				BNE	5$		;IF EQ PREVIOUS PAGE NOT FULL
    500	002012	012704 	177773G			MOV	#P$LNTH-5,R4	;NEW PAGE
    501	002016				5$:
    502	002016	005002 				CLR	R2
    503	002020	016701 	000000G			MOV	$NCLNM,R1
    504	002024	060402 			10$:	ADD	R4,R2
    505	002026					SOB	R1,10$
    506	002032	010267 	175754 			MOV	R2,NSPP		;NUMBER OF SYMBOLS ON THIS PGE
    507	002036				15$:
    508	002036	016703 	175736 			MOV	LEFT,R3		;GET NUMBER OF SYMBOLS LEFT
    509	002042	160203 				SUB	R2,R3		; # LEFT - #PER PAGE
    510	002044	100403 				BMI	20$		; IF MI LESS THEN A PAGE LEFT
    511	002046	010467 	175730 			MOV	R4,NSPC		;NO. OF SYMBOLS PER COLUNM
    512	002052	000420 				BR	45$
    513	002054				20$:
    514	002054	016767 	175720 	175730 		MOV	LEFT,NSPP	;NO. ON THIS PAGE IS ONLY WHATS LEFT
    515	002062	005003 				CLR	R3		;ZERO WHAT'S LEFT
    516	002064				25$:
    517	002064	005002 				CLR	R2
    518	002066	016701 	175720 			MOV	NSPP,R1		;NUMBER OF SYMBOLS PER COLUNM =
    519
    520	002072	166701 	000000G		30$:	SUB	$NCLNM,R1	;# SYMBOLS / # COLUNMS
    521	002076	001403 				BEQ	35$		;IF EQ	DIVIDE IS OVER
    522	002100	100402 				BMI	35$		;IF MI	REMAINDER
    523	002102	005202 				INC	R2		;
    524	002104	000772 				BR	30$		;CONTINUE DIVIDE
    525	002106				35$:
    526	002106	005202 				INC	R2		;ROUND UP IF REMAIDER
    527	002110				40$:
    528	002110	010267 	175666 			MOV	R2,NSPC	;SAVE NO. OF SYMBOLS PER COLUNM
    529	002114	010367 	175660 		45$:	MOV	R3,LEFT		;SAVE LEFTOVER
    530	002120					RETURN
    531
    532		000001 				.END
MPTWO	MACRO M1110  22-AUG-78 01:48  PAGE 2-11
SYMBOL TABLE

ABS     000054R     002	E$LCMT= ****** GX	MPCSA   001050R  	S$GBLK= ****** GX	$ENDRO= ****** GX
CCNTBL  000022R  	E$LIDT= ****** GX	MPCTB   001124R  	S$GCST= ****** GX	$ENDRW= ****** GX
CON     000070R     002	E$LMOD= ****** GX	MPGBL   001354R  	S$GLNG= ****** GX	$INPPT= ****** GX
CPTR    000040R  	E$LNUM= ****** GX	NSPC    000002R  	S$GNME= ****** GX	$ISD1 = ****** GX
CR    = 000015   	E$LSWT= ****** GX	NSPP    000012R  	S$GNTB= ****** GX	$ISED = ****** GX
CRSEC   000004R  	FF    = 000014   	OVR     000064R     002	S$GSEQ= ****** GX	$LNCNT= ****** GX
CSBSE   000010R  	FMT1    000000R     003	OVRCON= 000003   	S$GSTB= ****** GX	$MPCHK= ****** GX
CSLTH   000006R  	FMT2    000033R     003	PSARG   000000R     002	S$GSTS= ****** GX	$MPEDT= ****** GX
CSOP    001774R  	FMT3    000057R     003	PSARGN= 000005   	S$YFLG= ****** GX	$MPFLE= ****** GX
CS$ACC= ****** GX	FMT32   000217R     003	P$LNTH= ****** GX	S$YM  = ****** GX	$MPFLG= ****** GX
CS$ALO= ****** GX	FMT4    000117R     003	REL     000050R     002	TSTSYM  001736R  	$MPFSH= ****** GX
CS$GBL= ****** GX	FMT5    000157R     003	RELABS= 000003   	TS$KF = ****** GX	$MPOUT= ****** GX
CS$IND= ****** GX	FMT52   000261R     003	RO      000004R     002	T1      000014R  	$MPSEG  000112RG
CS$LIB= ****** GX	FMT53   000321R     003	RORW  = 000002   	T2      000016R  	$MPSYM= ****** GX
CS$REL= ****** GX	FMT54   000361R     003	RW      000010R     002	T3      000020R  	$NCLNM= ****** GX
CS$TYP= ****** GX	FMT55   000423R     003	R$$11M= 000000   	VT    = 000013   	$NUMSG= ****** GX
CS$VAS= ****** GX	FMT56   000456R     003	SE$QA = ****** GX	$ABSNM= ****** GX	$OFFST= ****** GX
CS$VSC= ****** GX	FMT57   000504R     003	SG$DSK= ****** GX	$BEGRO= ****** GX	$RTSEG= ****** GX
C$SBSE= ****** GX	GBL     000034R     002	SG$RO = ****** GX	$BEGRW= ****** GX	$SAVRG= ****** GX
C$SCUR= ****** GX	GBLLCL= 000003   	SPA   = 000040   	$CRELM= ****** GX	$STELM= ****** GX
C$SFLG= ****** GX	HT    = 000011   	STRTE   000002R  	$CRSEG= ****** GX	$SWTCH= ****** GX
C$SLGS= ****** GX	I       000024R     002	SW$MA = ****** GX	$CRVSG= ****** GX	$SYMBF= ****** GX
C$SLTH= ****** GX	LCL     000040R     002	SY$DEF= ****** GX	$CVRL = ****** GX	$WRMPG= ****** GX
D       000020R     002	LEFT    000000R  	SY$EXC= ****** GX	$DIV  = ****** GX	$$    = 000001
DI    = 000001   	LF    = 000012   	SY$IND= ****** GX

. ABS.	000000	   000
      	002122	   001
STB1$D	000074	   002
MTX2$D	000510	   003
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  1603 WORDS  ( 7 PAGES)
DYNAMIC MEMORY:  2772 WORDS  ( 10 PAGES)
ELAPSED TIME:  00:00:19
OBJ$:MPTWO,LIS$:MPTWO/-SP=SRC$:MACFLM,MPTWO
