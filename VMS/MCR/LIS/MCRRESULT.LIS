MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      39  DECLARATIONS
   (3)      78  RESULT PARSE INITIAL ENTRY
   (7)     490  VALUE CONVERSION ROUTINES
   (8)     596  PROCESS BIT LISTS
   (9)     687  PROCESS COMMAND QUALIFIER
   (10)    761  PROCESS QUALIFIER
   (12)    883  GET OPTION VALUE
   (13)    945  GET COMMAND LINE
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	MCRRESULT	RESULT PARSE MAIN ROUTINE
                                     0000     2 	.IDENT	/01/
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 
                                     0000    24 ;++
                                     0000    25 ; FACILITY:	STARLET MCR CLI
                                     0000    26 ;
                                     0000    27 ; ABSTRACT:	RESULT PARSE MAIN ROUTINE
                                     0000    28 ;
                                     0000    29 ; ENVIRONMENT:	NATIVE MODE USER CODE
                                     0000    30 ;
                                     0000    31 ; AUTHOR:	W.H.BROWN, CREATION DATE:  13-APR-77
                                     0000    32 ;
                                     0000    33 ; MODIFIED BY:
                                     0000    34 ;
                                     0000    35 ;	, : VERSION
                                     0000    36 ; 01	- 
                                     0000    37 ;--
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page   2
01              DECLARATIONS                                                                                                     (2)

                                     0000    39 	.SBTTL	DECLARATIONS
                                     0000    40 ;
                                     0000    41 ; INCLUDE FILES:
                                     0000    42 ;
                                     0000    43 ;	C.MLB
                                     0000    44 ;	LIB.MLB
                                     0000    45 ;
                                     0000    46 ; MACROS:
                                     0000    47 ;
                                     0000    48 ;
                                     0000    49 ; EQUATED SYMBOLS:
                                     0000    50 ;
                                     0000    51 ; MACRO LIBRARY CALLS
                                     0000    52 ;
                                     0000    53 	DEFCMDWRK			; DEFINE WORK AREA OFFSETS
                                     0000    54 	DEFERRCOD			; DEFINE ERROR/STATUS VALUES
                                     0000    55 	DEFPROBLK			; DEFINE PROMPT DESCRIPTOR BLOCK OFFSETS
                                     0000    56 	DEFPTRDSC			; DEFINE RESULT PARSE DESCRIPTOR FORMAT
                                     0000    57 	DEFQUABLK			; DEFINE QUALIFIER BLOCK VALUES
                                     0000    58 	$CLIDEF				; CLI DEFINITIONS
                                     0000    59 	DEFMCRRPW			; DCL RESULT PARSE WORK DEFINITIONS
                                     0000    60 	DEFOPIMCR			; DCL OUTPUT PARSE INDIACTORS
                                     0000    61 	$CLIVERBDEF			; VERB TYPE CODES
                                     0000    62  
                                     0000    63 ;
                                     0000    64 ; UTILITY CALL PARAMETER OFFSETS
                                     0000    65 ;
                           00000004  0000    66 	RQDESC	=	4		; OFFSET TO REQUEST DESCRIPTOR
                           00000008  0000    67 	RQWORK	=	8		; OFFSET TO WORK BLOCK
                           0000000C  0000    68 	RQBITS	=	12		; OFFSET TO BIT ARRAY ADDRESS
                                     0000    69 ;
                                     0000    70 ; INTERNAL ERROR BIT - DON'T USE R5 AS RESULT DESCRIPTOR INDEX
                                     0000    71 ;
                           0000001F  0000    72 	INTERROR = 31			; BIT 31 FLAGS INTERNAL ERROR
                                     0000    73 ;
                                     0000    74 ; OWN STORAGE:
                                     0000    75 ;
                                     0000    76 ;	THIS MODULE HAS NO LOCAL STORAGE
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page   3
01              RESULT PARSE INITIAL ENTRY                                                                                       (3)

                                     0000    78 	.SBTTL	RESULT PARSE INITIAL ENTRY
                                     0000    79 ;++
                                     0000    80 ; FUNCTIONAL DESCRIPTION:
                                     0000    81 ;
                                     0000    82 ;	THIS IS THE ENTRY POINT USED FOR ALL UTILITY SEVICE
                                     0000    83 ;	CALL BACK REQUEST FOR SERVICE.
                                     0000    84 ;
                                     0000    85 ; CALLING SEQUENCE:
                                     0000    86 ;
                                     0000    87 ;	CALL	MCR$UTILSERV
                                     0000    88 ;
                                     0000    89 ; INPUT PARAMETERS:
                                     0000    90 ;
                                     0000    91 ;	RQDESC(AP) IS THE ADDRESS OF THE REQUEST DESCRIPTOR
                                     0000    92 ;	RQWORK(AP) IS THE ADDRESS OF A WORK AREA FOR RESULT PARSE DATA
                                     0000    93 ;	RQBITS(AP) IS THE ADDRESS OF A BIT ARRAY FOR INPUT/OUTPUT 
                                     0000    94 ;		PARAMETER DEFINITION REQUESTS
                                     0000    95 ;
                                     0000    96 ; IMPLICIT INPUTS:
                                     0000    97 ;
                                     0000    98 ;	NONE
                                     0000    99 ;
                                     0000   100 ; OUTPUT PARAMETERS:
                                     0000   101 ;
                                     0000   102 ;	THE FUNCTION IS PURFORMED, OR AN ERROR IS RETURNED
                                     0000   103 ;
                                     0000   104 ; IMPLICIT OUTPUTS:
                                     0000   105 ;
                                     0000   106 ;	NONE
                                     0000   107 ;
                                     0000   108 ; COMPLETION CODES:
                                     0000   109 ;
                                     0000   110 ;	R0 = SUCCESS/FAILURE DEPENDING ON RESULT OF SEARCH
                                     0000   111 ;
                                     0000   112 ; SIDE EFFECTS:
                                     0000   113 ;
                                     0000   114 ;	NONE
                                     0000   115 ;
                                     0000   116 ;--
                                     0000   117 
                                 00000000   118 	.PSECT	MCR$ZCODE	BYTE,RD,NOWRT
                                     0000   119  
                               0FFC' 0000   120 	.ENTRY	MCR$UTLSERV,^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>
                                     0002   121  
            59         04 AC     D0  0002   122 	MOVL	RQDESC(AP),R9		; AND ADDRESS OF THE REQUEST DESCRIPTOR
            69            05     91  0006   123 	CMPB	#CLI$K_CLISERV,CLI$B_RQTYPE(R9) ; REQUEST FOR SUPER MODE SERVICE
                          05     12  0009   124 	BNEQ	5$			; BR IF NO
                       01 A9     BE  000B   125 	CHMS	CLI$W_SERVCOD(R9)	; PASS USERS REQUEST TO SUPER MODE
                          62     11  000E   126 	BRB	RET0			;
            5A         08 AC     D0  0010   127 5$:	MOVL	RQWORK(AP),R10		; GET ADDRESS OF WORK AREA
                                     0014   128 	IFNORD	#4,RPW_L_MCRWRK(R10),10$ ; CHECK IF WORK AREA IS ACCESSABLE
            5B         04 AA     D0  001B   129 	MOVL	RPW_L_MCRWRK(R10),R11	; IF YES-GET THE WORK AREA
                       03 A9     94  001F   130 10$:	CLRB	CLI$B_RQSTAT(R9)	; INITIAL RETURN STATUS
                       08 A9     7C  0022   131 	CLRQ	CLI$Q_RQDESC(R9)	; AND ZERO THE PARAMETER DESCRIPTOR
            55            01     D0  0025   132 	MOVL	#1,R5			; SET DEFAULT RESULT PARSE INDEX
         73'AF            6C     FA  0028   133 	CALLG	(AP),B^RSLTPRS		; CALL FOR ERROR FRAME
            50   00030000 8F     C8  002C   134 	BISL	#<CLI$_ABKEYW&^X0FFF0000>,R0 ; INCLUDE SUBSYSTEM NUMBER
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page   4
01              RESULT PARSE INITIAL ENTRY                                                                                       (3)

            3C            50     E8  0033   135 	BLBS	R0,RET0			; BR IF NO ERRORS
            50            1F     E4  0036   136 CALERR:	BBSC	#INTERROR,R0,10$	; BR IF THIS IS A INTERNAL ERROR
                          1B         0039       
                                     003A   137 	GETEXTDESC			; TAKE APART DESCRIPTOR(POINT OF ERROR)
                          53     DD  003D   138 	PUSHL	R3			; SAVE POINT OF ERROR
                          55     D6  003F   139 	INCL	R5			; ADVANCE TO NEXT
                                     0041   140 	GETEXTDESC			; TAKE THAT APART
            52            53     D0  0044   141 	MOVL	R3,R2			; COPY ENDING ADDRESS OF ERROR
                          08     BA  0047   142 	POPR	#^M<R3>			; GET POINT OF ERROR BACK
            52            53     C2  0049   143 	SUBL	R3,R2			; FIND LENGTH OF ERROR SEGMENT
                          53     D7  004C   144 	DECL	R3			; BACKUP TO PRECEEDING TERMAINATOR
            51            04     91  004E   145 	CMPB	#PTR_K_ENDLINE,R1	; WAS ERROR AT END-OF-LINE?
                          02     12  0051   146 	BNEQ	10$			; BR IF NO-ALL IS CORRECT
                          52     D6  0053   147 	INCL	R2			; ADJUST LENGTH FOR LAST LAST BYTE IN TOKEN
         08 A9            52     7D  0055   148 10$:	MOVQ	R2,CLI$Q_RQDESC(R9)	; SET IN DESCRIPTOR
                       04 A9     DD  0059   149 	PUSHL	CLI$A_ERRACT(R9)	; GET USER ERROR ROUTINE ADDRESS/OFFSET
                          14     13  005C   150 	BEQL	RET0			; BR IF NO ERROR ROUTINE
            69            11     E0  005E   151 	BBS	#CLI$V_ABSADR+<CLI$B_RQFLGS*8>,(R9),20$ ; BR IF ADR IS ABSOLUTE
                          03         0061       
            6E            59     C0  0062   152 	ADDL	R9,(SP)			; FIND REAL ADDRESS OF ROUTINE
            5B            6A     D0  0065   153 20$:	MOVL	(R10),R11		; SET USER CONTEXT WORD
                          5B     DD  0068   154 	PUSHL	R11			; AND PASS IN ARGUMENT LIST
                          50     DD  006A   155 	PUSHL	R0			; ERROR CODE IS SECOND ARGUMENT INPUT,
                          59     DD  006C   156 	PUSHL	R9			; REQUEST DESCRIPTOR IS FIRST ARGUMENT 
         0C BE            03     FB  006E   157 	CALLS	#3,@12(SP)		; GIVE THE USER CHANCE TO HANDLE ERROR
                                 04  0072   158 RET0:	RET				; GO BACK FROM CALL BACK
                                     0073   159  
                                     0073   160 ;
                                     0073   161 ; RESULT PARSE DISPATCHER
                                     0073   162 ;
                                     0073   163  
                               0000  0073   164 RSLTPRS:.WORD	0			; REGISTERS ALREADY SAVED!
                          04     EF  0075   165 	EXTZV	#CLI$V_PRITYP,#CLI$S_PRITYP,- ; EXTRACT THE PRIMARY REQUEST
            69            04         0077   166 		CLI$B_RQTYPE(R9),R1	; FROM THE REQUEST DESCRIPTOR
                          51         0079       
                          11     13  007A   167 	BEQL	10$			; BR IF REQUEST IS UTILITY TYPE
                          00     EF  007C   168 	EXTZV	#CLI$V_SUBTYP,#CLI$S_SUBTYP,- ; GET THE PARAMETER NUMBER
            69            04         007E   169 		CLI$B_RQTYPE(R9),R0	; OR SUB TYPE FOR RESULT
                          50         0080       
                                     0081   170 	CASE	R1,-			; DISPATCH ON REQUEST TYPE
                                     0081   171 		LIMIT=#CLI$K_INPSPEC,<-	;STARTING WTIH INPUT SPECIFICATION
                                     0081   172 		SETQUAL,-		; REQUEST FOR INPUT DEFINTION
                                     0081   173 		SETQUAL,-		; REQUEST FOR OUTPUT DEFINTION
                                     0081   174 		CMPPRM,-		; COMPLETED WITH PARAMETER SET
                                     0081   175 		MCR$VALCNV,-		; REQUEST FOR VALUE CONVERSION
                                     0081   176 		>
                                     008D   177 					; FALL THROUGH ON UTILITY OR ERROR
                                     008D   178 10$:	CASE	CLI$B_RQTYPE(R9),-	; DECODE UTILITY REQUEST
                                     008D   179 		LIMIT=#CLI$K_INITPRS,-	; LOW VALUE FOR CASE
                                     008D   180 		TYPE=B,<-		; TYPE OF CASE IS BYTE
                                     008D   181 		MCR$RPINIT,-		; INIT RESULT PARSE
                                     008D   182 		MCR$GETCMD,-		; GET COMMAND LINE DESCRIPTOR
                                     008D   183 		SETQUAL,-		; SET QUALIFER STATE
                                     008D   184 		MCR$GETOPT,-		; GET COMMAND OPTION
                                     008D   185 		>
                                     0099   186 	SETSTAT	INVREQTYP		; INVALID REQUEST TYPE
                                 04  009E   187 	RET				; DONE WITH THIS COMMAND
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page   5
01              RESULT PARSE INITIAL ENTRY                                                                                       (4)

                                     009F   189 ;
                                     009F   190 ; REQUEST IS FOR TERMINATEION OF PARAMETER SET
                                     009F   191 ;
            56         40 AA40   DE  009F   192 CMPPRM:	MOVAL	RPW_AG_PRMLIM(R10)[R0],R6 ; SET ADDRESS OF PROPER LIMIT DESC
            7E            01     7D  00A4   193 	MOVQ	#1,-(SP)		; SET SUCCESS PLUS A ZERO LONG WORD
            58            5E     D0  00A7   194 	MOVL	SP,R8			; MARK POINT OF ERROR PARAMETERS
                                     00AA   195 					; NOTE: R5 WAS ZEROED IN INITIAL ENTRY
         08 AA            55     91  00AA   196 10$:	CMPB	R5,RPW_B_STRPARM(R10)	; IS INDEX AT END COMD QUALIFIER AREA?
                          06     12  00AE   197 	BNEQ	20$			; BR IF NO
            55         01 A6     9A  00B0   198 	MOVZBL	PLM_B_FSTDESC(R6),R5	; ELSE SET START OF PARAMETER AREA
                          65     13  00B4   199 	BEQL	80$			; BR IF PARAMETER IS NON-EXISTANT
         02 A6            55     91  00B6   200 20$:	CMPB	R5,PLM_B_LSTDESC(R6)	; IS INDEX OUT OF CURRENT PARAMETER?
                          1F     1A  00BA   201 	BGTRU	50$			; BR IF ALL DONE
                                     00BC   202 	GETEXTDESC			; GET AND EXTRACT DESCRITPTOR
            01            51     91  00BF   203 	CMPB	R1,#PTR_K_PARMQUAL	; PARAMETER QUALIFIER?
                          05     13  00C2   204 	BEQL	30$			; BR IF IT IS
            00            51     91  00C4   205 	CMPB	R1,#PTR_K_COMDQUAL	; COMMAND QUALIFIER?
                          0E     12  00C7   206 	BNEQ	40$			; IF NO BR AND CONTINUE SEARCH
         20 AA            55     E0  00C9   207 30$:	BBS	R5,RPW_AG_BITS(R10),40$	; BR IF THE QUALIFIER HAS BEEN SEEN
                          09         00CD       
                                     00CE   208 	SETSTAT	UNPROQUAL
         1E'AF            6C     FA  00D3   209 	CALLG	(AP),B^100$		; PROCESS ERROR CALL BACK
                          55     D6  00D7   210 40$:	INCL	R5			; ADD 1 TO BUFFER INDEX
                          CF     11  00D9   211 	BRB	10$			; KEEP LOOKING
            55            66     9A  00DB   212 50$:	MOVZBL	PLM_B_NXTDESC(R6),R5	; NEXT DESCRIPTOR TO PROCESS
                          3B     13  00DE   213 	BEQL	80$			; BR IF NO PARAMETER PRESENT
         02 A6            55     91  00E0   214 	CMPB	R5,PLM_B_LSTDESC(R6)	; ALL BEEN PROCESSED
                          09     1A  00E4   215 	BGTRU	55$			; BR IF YES
                                     00E6   216 	SETSTAT	UNPROPARM		; UNPROCESSED PARAMETERS
         1E'AF            6C     FA  00EB   217 	CALLG	(AP),B^100$		; GENERATE AN ERROR
            55         02 A6     9A  00EF   218 55$:	MOVZBL	PLM_B_LSTDESC(R6),R5	; INDEX TO LAST DESCRIPTOR
                          55     96  00F3   219 	INCB	R5			; SET TO NEXT DESCRIPTOR INDEX
         03 A6            55     91  00F5   220 	CMPB	R5,PLM_B_TRMDESC(R6)	; IS THIS THE TERMINATOR DESCRIPTOR?
                          20     1E  00F9   221 	BGEQU	80$			; BR IF YES-NOTHING MORE TO DO!
            66            55     90  00FB   222 	MOVB	R5,PLM_B_NXTDESC(R6)	; SET THAT AS NEXT FOR NEXT CALLBACK
                                     00FE   223 60$:	GETPARM				; FIND THE NEXT PARAMETER
            0A            50     E9  0101   224 	BLBC	R0,70$			; BR IF NONE REMAIN
            01            53     91  0104   225 	CMPB	R3,#PTR_K_BLANK		; CHECK IF END OF PARAMETER LIST
                          05     13  0107   226 	BEQL	70$			; BR IF YES-SET NEW LIMIT TO HERE
            05            53     91  0109   227 	CMPB	R3,#PTR_K_COMMA		; HOW ABOUT LIST SEPARATOR?
                          F0     12  010C   228 	BNEQ	60$			; KEEP LOOKING
            55            01     83  010E   229 70$:	SUBB3	#1,R5,PLM_B_LSTDESC(R6)	; SET NEW LAST
                       02 A6         0111       
                                 88  0113   230 	BISB	#CLI$M_MOREINP,-	; SET FLAG THAT MORE INPUT EXISTS
         03 A9            04         0114   231 		CLI$B_RQSTAT(R9)	; INDICATE MORE DATA TO COME
                                 90  0117   232 	MOVB	PLM_B_NXTDESC(R6),-	; SET PREVIOUS NEXT AS
         01 A6            66         0118   233 		PLM_B_FSTDESC(R6)	; AS FIRST IN THIS PARAMETER
                          21     BA  011B   234 80$:	POPR	#^M<R0,R5>		; GET STATUS AND POINT OF ERROR(IF ONE)
                                 04  011D   235 90$:	RET
                                     011E   236  
                                     011E   237 ; THIS ROUTINE IS CALLED TO FACILITATE MULTIPLE ERROR
                                     011E   238 ; ACTION CALLS WHEN PROCESSING THE END OF A PARAMETER SET
                                     011E   239 ;
                               0820  011E   240 100$:	.WORD	^M<R5,R11>		; SAVE REGISTERS 5 AND 11
                          21     BB  0120   241 	PUSHR	#^M<R0,R5>		; SET ERROR AND PLACE IN THE LINE
            50            68     D0  0122   242 	MOVL	(R8),R0			; GET PRVIOUS ERROR
            55         04 A8     D0  0125   243 	MOVL	4(R8),R5		; GET PREVIOUS PLACE
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page   6
01              RESULT PARSE INITIAL ENTRY                                                                                       (4)

            68            8E     7D  0129   244 	MOVQ	(SP)+,(R8)		; SET THE NEW AS NEXT TO DO
            EE            50     E8  012C   245 	BLBS	R0,90$			; BR IF FIRST TIME THROUGH
                          FF04   31  012F   246 	BRW	CALERR			; GO CALL THE UTILITY WITH ERROR
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page   7
01              RESULT PARSE INITIAL ENTRY                                                                                       (5)

                                     0132   248 ;
                                     0132   249 ; REQUEST IS EITHER INPUT OR OUTPUT PARAMETER
                                     0132   250 ;
                                     0132   251  
            58         0C AC     D0  0132   252 SETQUAL:MOVL	RQBITS(AP),R8		; GET USERS BIT ARRAY
                     021C'CF     DF  0136   253 	PUSHAL	W^SCANQUAL		; SET INITIAL ADDRESS FOR QUALIFER SCAN
                          9E     16  013A   254 10$:	JSB	@(SP)+			; CO-ROUTINE LINK TO SCAN QUALIFIERS
            08            50     E9  013C   255 	BLBC	R0,20$			; BR WHEN ALL ARE SCANNED
                       03 A7     94  013F   256 	CLRB	CLI$B_QDSTAT(R7)	; RESET ALL STATUS FLAGS
                       04 A7     7C  0142   257 	CLRQ	CLI$Q_QDVALDESC(R7)	; SET VALUE DESCRIPTOR TO ZERO
                          F3     11  0145   258 	BRB	10$			; TRY FOR NEXT
                                     0147   259 ;
                                     0147   260 ; DEFAULT AND COMMAND QUALIFIERS ALL DONE
                                     0147   261 ;
            02            69     91  0147   262 20$:	CMPB	CLI$B_RQTYPE(R9),#CLI$K_GETQUAL ; IS THIS REQUEST FOR QUALIFER 
                          0A     12  014A   263 	BNEQ	25$			; DEFINTION ONLY- BR IF NO
                                 90  014C   264 	MOVB	WRK_B_VERBTYP(R11),-	; SET COMMAND GENERIC VERB TYPE INTO
         03 A9         C8 AB         014D   265 		CLI$B_RQSTAT(R9)	; REQUEST DESCRIPTOR STATUS BYTE
                                     0151   266 	PROCMDQUAL			; FIND COMMAND QUALIFIER
                          24     11  0154   267 	BRB	40$			; TAKE ACTION
                          00E7   30  0156   268 25$:	BSBW	PROCIO			; PROCESS INPUT/OUTPUT DESCRIPTION
            52         01 A9     9A  0159   269 	MOVZBL	CLI$B_BITNUM(R9),R2	; GET THE PARAMETER PRESENT FLAG BIT
                                 E0  015D   270 	BBS	#CLI$V_PARMPRS,-	; BR IF THE PARAMETER IS PRESENT
         03 A9            00         015E   271 		CLI$B_RQSTAT(R9),30$	;
                          14         0161       
                                     0162   272 	CLRBIT	R2,(R8)			; INDICATE PARAMETER ABSENT
                                     0166   273 	SETSTAT	REQPRMABS		; SET REQUIRED PARAMETER ABSENT
                                 E0  016B   274 	BBS	#CLI$V_PARMREQ,-	; BR IF PARAMETER IS REQUIRED
         02 A9            00         016C   275 		CLI$B_RQFLGS(R9),140$	; 
                          75         016F       
            51         14 A9     D0  0170   276 	MOVL	CLI$A_ABSACT(R9),R1	; GET PARAMETER ABSENT ACTION ADDRESS
                          65     11  0174   277 	BRB	120$			; JOIN COMMON ROUTINE
                                     0176   278 30$:	SETBIT	R2,(R8)			; SET PARAMETER PRESENT FLAG
                     021C'CF     9F  017A   279 40$:	PUSHAB	W^SCANQUAL		; SET INITIAL COROUTINE ADDRESS
                          6E     DD  017E   280 	PUSHL	(SP)			; COPY COROUTINE INITIAL ADDRESS
                          6E     DD  0180   281 	PUSHL	(SP)			; THREE MORE TIMES FOR
                          6E     DD  0182   282 	PUSHL	(SP)			; SUBSEQUENT SCANS OF QUALIFIERS
                          9E     16  0184   283 45$:	JSB	@(SP)+			; GET NEXT QUALIFIER DESCRIPTOR
            1A            50     E9  0186   284 	BLBC	R0,50$			; BR WHEN SCAN IS DONE
         03 A7            01     E0  0189   285 	BBS	#CLI$V_QUALEXP,CLI$B_QDSTAT(R7),45$ ; LOOP IF FOUND EXPLICITLY
                          F6         018D       
            51         01 A7     9A  018E   286 	MOVZBL	CLI$B_QDCODE(R7),R1	; GET THE INDEX INTO THE TABLE
                                     0192   287 	GETPARMQUAL			; FIND THE ASSOCIATED STRUCTURE
         04 A2            07     E1  0195   288 	BBC	#QUA_V_DEFTRUE,QUA_W_FLAGS(R2),45$ ; BR IF NOT DEFAULTED TRUE
                          EA         0199       
         03 A7            01     88  019A   289 	BISB	#CLI$M_QUALTRU,CLI$B_QDSTAT(R7) ; MARK QUALIFIER TRUE
                          03A4   30  019E   290 	BSBW	MCR$SETDEFVAL		; SET UP THE DEFAULT VALUE IF THERE
                          E1     11  01A1   291 	BRB	45$			; LOOK AT NEXT
                          9E     16  01A3   292 50$:	JSB	@(SP)+			; GET NEXT DESCRIPTOR
            0A            50     E9  01A5   293 	BLBC	R0,60$			; BR WHEN NO MORE
         03 A7            00     E0  01A8   294 	BBS	#CLI$V_QUALTRU,CLI$B_QDSTAT(R7),50$ ; BR IF TRUE
                          F6         01AC       
                          02C1   30  01AD   295 	BSBW	MCR$CLRSETLST		; CLEAR THE BITS
                          F1     11  01B0   296 	BRB	50$			; LOOK FOR MORE FALSSE QUALIFIERS
                          9E     16  01B2   297 60$:	JSB	@(SP)+			; GET NEXT QUALIFIER DESCRIPTOR
            13            50     E9  01B4   298 	BLBC	R0,100$			; BR WHEN NO MORE
         03 A7            00     E1  01B7   299 	BBC	#CLI$V_QUALTRU,CLI$B_QDSTAT(R7),60$ ; BR IF FALSE
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page   8
01              RESULT PARSE INITIAL ENTRY                                                                                       (5)

                          F6         01BB       
                       F3 AF     9F  01BC   300 	PUSHAB	B^60$			; SUBROUTINE RETURN ADDRESS
         03 A7            01     E1  01BF   301 	BBC	#CLI$V_QUALEXP,CLI$B_QDSTAT(R7),70$ ; BR IF NOT EXPLICITLY FOUND
                          03         01C3       
                          0282   31  01C4   302 	BRW	MCR$TSTSETLST		; TEST THEN SET SET LIST, ETC.
                          029E   31  01C7   303 70$:	BRW	MCR$SETSETLST		; ONLY SET THE SET LIST FOR DEFAULTS
                          9E     16  01CA   304 100$:	JSB	@(SP)+			; GET NEXT QUALIFIER DESCRIPTOR
            08            50     E9  01CC   305 	BLBC	R0,110$			; BR WHEN NO MORE QUALIFIERS
                                 E0  01CF   306 	BBS	#CLI$V_ALLOCCUR+<CLI$B_QDFLGS*8>,- ; IF ALL OCCURANCES IS SET
            67            10         01D0   307 		(R7),100$		; CALL BACK ALREADY BEEN DONE
                          F7         01D2       
                          11     10  01D3   308 	BSBB	QUALACT			; TAKE QUALIFIER ACTION
                          F3     11  01D5   309 	BRB	100$			; TRY FOR NEXT
            51         10 A9     D0  01D7   310 110$:	MOVL	CLI$A_PRSACT(R9),R1	; PRESENT ACTION ADDRESS OFFSET
                          05     13  01DB   311 120$:	BEQL	130$			; BR IF NO PARAMETER ACTION
            50            59     D0  01DD   312 	MOVL	R9,R0			; SET ADDRESS OF ARGUMENT TO CALL WITH
                          20     10  01E0   313 	BSBB	CALLBAK			; ISSUE CALL BACK
                                     01E2   314 130$:	SETSTAT	SUCCESS			; SET GOOD RETURN
                                 04  01E5   315 140$:	RET				; BACK TO DISPATCHER
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page   9
01              RESULT PARSE INITIAL ENTRY                                                                                       (6)

                                     01E6   317 ;
                                     01E6   318 ; QUALACT - QUALIFIER ACTION CALLBACK SUBROUTINE
                                     01E6   319 ;
                                     01E6   320 	.ENABL	LSB
                                     01E6   321  
         02 A7            02     E1  01E6   322 QUALACT:BBC	#CLI$V_QDEXPA,CLI$B_QDFLGS(R7),5$ ; BR IF ACTION ALWAYS DESIRED
                          05         01EA       
         03 A7            01     E1  01EB   323 	BBC	#CLI$V_QUALEXP,CLI$B_QDSTAT(R7),40$ ; IF NOT EXPLICIT
                          2B         01EF       
            51         10 A7     D0  01F0   324 5$:	MOVL	CLI$A_FLSACT(R7),R1	; ASSUME QUALIFIER IS FALSE
                                 E1  01F4   325 	BBC	#CLI$V_QUALTRU,-	; BR IF THAT ASSUMPTION
         03 A7            00         01F5   326 		CLI$B_QDSTAT(R7),10$	; WAS CORRECT
                          04         01F8       
            51         0C A7     D0  01F9   327 	MOVL	CLI$A_TRUACT(R7),R1	; GET TRUE ACTION ADDRESS OFFSET
                          1C     13  01FD   328 10$:	BEQL	40$			; BR IF NO ACTION ROUTINE
            50            57     D0  01FF   329 	MOVL	R7,R0			; ARGUMENT FOR CALL BACK
                                     0202   330 					; JOIN CALL BACK
                                     0202   331  
            69            11     E0  0202   332 CALLBAK:BBS	#CLI$V_ABSADR+<CLI$B_RQFLGS*8>,(R9),20$ ; BR IF ADR IS ABSOLUTE
                          03         0205       
            51            50     C0  0206   333 	ADDL	R0,R1			; RELOCATE ADDRESS
            5B            6A     D0  0209   334 20$:	MOVL	(R10),R11		; SET USER CONTEXT WORD
                          5B     DD  020C   335 	PUSHL	R11			; PASS USER CONTEXT WORD
                     FDEE CF     9F  020E   336 	PUSHAB	MCR$UTLSERV		; GIVE THE ACTION ROUTINE CALL BACK ADR
                          60     9F  0212   337 	PUSHAB	(R0)			; PASS CALLERS STRUCTURE AS ARGUMENT
            61            03     FB  0214   338 	CALLS	#3,(R1)			; CALL THE ACTION ROUTINE
            5B         04 AA     D0  0217   339 	MOVL	RPW_L_MCRWRK(R10),R11	; RESET THE COMMAND WORK ADDRESS
                                 05  021B   340 40$:	RSB				; RETURN TO MY CALLER
                                     021C   341  
                                     021C   342 	.DSABL	LSB
                                     021C   343 ;
                                     021C   344 ; COOROUTINE TO SCAN UTILITY QUALIFIER DESCRIPTORS
                                     021C   345 ;
                                     021C   346 SCANQUAL:				; SCAN LIST OF QUALIFIERS
            57         18 A9     D0  021C   347 	MOVL	CLI$A_QUALST(R9),R7	; GET OFFSET TO QUALIFIER LIST
                          18     13  0220   348 	BEQL	20$			; BR IF NONE AT ALL
            69            11     E0  0222   349 	BBS	#CLI$V_ABSADR+<CLI$B_RQFLGS*8>,(R9),10$ ; BR IF ADR IS ABSOLUTE
                          03         0225       
            57            59     C0  0226   350 	ADDL	R9,R7			; ADJUST ADDRESS TO ABSOLUTE
                                     0229   351 10$:	SETSTAT	NORMAL			; ASSUME MORE QUALIFIERS TO PROCESS
                          67     95  022C   352 	TSTB	(R7)			; END OF LIST
                          0A     13  022E   353 	BEQL	20$			; BR IF END OF LIST
                          9E     16  0230   354 	JSB	@(SP)+			; RETURN WITH A DESCRIPTOR
            50            67     9A  0232   355 	MOVZBL	CLI$B_QDBLKSIZ(R7),R0	; GET SIZE OF DESCRIPTOR
            57            50     C0  0235   356 	ADDL	R0,R7			; ADVANCE TO NEXT BLOCK
                          EF     11  0238   357 	BRB	10$			; CK IF MORE
                                     023A   358 20$:	SETSTAT	INVQUAL			; RETURN AN ERROR
                                 05  023F   359 RSB0:	RSB				; RETURN TO CALLER
                                     0240   360  
                                     0240   361 ;
                                     0240   362 ; RETURN HERE AFTER PROCESSING THE REQUEST
                                     0240   363 ; IF CLI$V_PARMPRS IS SET,THAN THE PARAMETER WAS FOUND
                                     0240   364 ;
                                     0240   365  
                          00     EF  0240   366 PROCIO:	EXTZV	#CLI$V_SUBTYP,#CLI$S_SUBTYP,- ; AND THE SUB TYPE VIELD
            69            04         0242   367 		CLI$B_RQTYPE(R9),R0	; INTO R0
                          50         0244       
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  10
01              RESULT PARSE INITIAL ENTRY                                                                                       (6)

            56         40 AA     DE  0245   368 	MOVAL	RPW_AG_PRMLIM(R10),R6	; ASSUME PARMETER IS FIRST PARAMETER
                          04     ED  0249   369 	CMPZV	#CLI$V_PRITYP,#CLI$S_PRITYP,-; CHECK THE PRIMARY REQUEST TYPE TO
            69            04         024B   370 		CLI$B_RQTYPE(R9),#CLI$K_OUTSPEC ; SEE IF REQUEST IS FOR OUTPUT
                          02         024D       
                          03     13  024E   371 	BEQL	OUTPUT			; BR IF REQUEST IS FOR OUTPUT
                          00DF   31  0250   372 	BRW	INPUT			; ELSE PROCESS INPUT
            51         F0 AB     D0  0253   373 OUTPUT:	MOVL	WRK_L_PAROUT(R11),R1	; SET POINTER TO OUTPUT PARSE TABLE
                          E6     13  0257   374 	BEQL	RSB0			; BR IF NO TABLE
         01 A1         FF 8F     91  0259   375 	CMPB	#OPI_K_MCRUTLIST,1(R1)	; MCR UTILITY OUTPUT LIST
                          18     12  025E   376 	BNEQ	OUTQUA			; BR IF NO - MUST BE A QUALIFIER
            57            50     D0  0260   377 	MOVL	R0,R7			; SAVE OUTPUT NUMBER
                          55     D4  0263   378 	CLRL	R5			; FIRST INDEX MINUS 1
                          FD98'  30  0265   379 10$:	BSBW	MCR$GETPARM		; LOCATE NEXT PARMETER IN COMMAND
            D4            50     E9  0268   380 	BLBC	R0,RSB0			; BR IF NOT HERE
                                 E0  026B   381 	BBS	#<PTR_V_EQUAL+PTR_V_FLAGS>,- ; BR IF PARAMETER AFTER EQUAL
            64            14         026C   382 		(R4),RSB0		; THEN OUTPUT IS ONT PRESENT
                          D0         026E       
            F3            57     F4  026F   383 	SOBGEQ	R7,10$			; COUNT TO THE DESIRED PARAMETER
            66            55     90  0272   384 	MOVB	R5,PLM_B_NXTDESC(R6)	; SET AS PLACE TO LOOK NEXT
                          00CE   31  0275   385 	BRW	SETPRM			;
            81            50     91  0278   386 OUTQUA:	CMPB	R0,(R1)+		; REQUEST IN RANGE?
                          C2     1E  027B   387 	BGEQU	RSB0			; BR IF NO
            51            6140   9A  027D   388 	MOVZBL	(R1)[R0],R1		; GET OUTPUT PARSE INDICATOR
                                     0281   389 	GETQUALDESC			; FIND DESCRIPTOR FOR MCR CMD QUALIFER
            50            08     D0  0284   390 	MOVL	#QUA_V_BATDEF,R0	; ASSUME RUNNING IN BATCH MODE
                                     0287   391 	IFBATCH	20$			; BR IF IN BATCH MODE
                                     028F   392 	ASSUME	QUA_V_INTDEF EQ QUA_V_BATDEF+1 ; CHECK FOR ASSUMED RELATIONSHIP
                          50     D6  028F   393 	INCL	R0			; CHANGE TO INTERACTIVE BIT
         04 A2            50     E1  0291   394 20$:	BBC	R0,QUA_W_FLAGS(R2),30$ ; BR IF PARAMETER ABSENT BY DEFAULT
                          04         0295       
                                 88  0296   395 	BISB	#CLI$M_PARMPRS!CLI$M_PARMDEF,-; SET PARAMETER PRESENT & DEFAULT
         03 A9            09         0297   396 		CLI$B_RQSTAT(R9) 	; IN REQUEST STATUS BYTE
                          7E     7C  029A   397 30$:	CLRQ	-(SP)			; SET VALUES FOR QUALIFER TO ZERO
                     0000'CF     9F  029C   398 	PUSHAB	W^MCR$FNDCMDQUAL	; SET COROUTINE ADDRESS
                          9E     16  02A0   399 40$:	JSB	@(SP)+			; COROUTINE LINK
            10            50     E9  02A2   400 	BLBC	R0,50$			; BR IF NO MORE COMMADN QUALIFIERS
            51            64     91  02A5   401 	CMPB	(R4),R1			; IS THIS THE QUALIFIER FOR THIS OUTPUT?
                          F6     12  02A8   402 	BNEQ	40$			; BR IF NO
         04 AE            54     7D  02AA   403 	MOVQ	R4,4(SP)		; SAVE DESCRIPTOR ADDRESS AND INDEX
                                     02AE   404 	SETBIT	R5,RPW_AG_BITS(R10)	; INDICATE THAT QUALIFIER WAS USED
                          EB     11  02B3   405 	BRB	40$			; LOOK FOR ANOTHER OCCURANCE
            54            8E     7D  02B5   406 50$:	MOVQ	(SP)+,R4		; RETREIVE PARAMETERS FOR LAST OCCURANCE
                          1A     13  02B8   407 	BEQL	80$			; BR IF NOT IN COMMAND EXPLICITLY
                                 8A  02BA   408 	BICB	#CLI$M_PARMPRS!CLI$M_PARMDEF,-; CLR PARAMETER PRESENT & DEFAULT
         03 A9            09         02BB   409 		CLI$B_RQSTAT(R9) 	; IN REQUEST STATUS BYTE
            64            14     E0  02BE   410 	BBS	#PTR_V_NEGATE+PTR_V_FLAGS,(R4),80$ ; BR IF ASSUMED CORRECTLY
                          12         02C1       
         03 A9            01     88  02C2   411 	BISB	#CLI$M_PARMPRS,CLI$B_RQSTAT(R9) ; SET EXPLICITLY PRESENT
                          84     D5  02C6   412 	TSTL	(R4)+			; ADVANCE POINTER TO NEXT DESCRIPTOR
                                     02C8   413 	EXTRSLDESC			; TAKE DESCRIPTOR APART
            02            51     91  02CB   414 	CMPB	R1,#PTR_K_QUALVALU	; IS THIS A QUALIFIER VALUE?
                          04     12  02CE   415 	BNEQ	80$			; BR IF NO
         08 A9            52     7D  02D0   416 	MOVQ	R2,CLI$Q_RQDESC(R9)	; SET RETURNED VALUE
         03 A9            00     E1  02D4   417 80$:	BBC	#CLI$V_PARMPRS,CLI$B_RQSTAT(R9),90$ ; BR IF PARAMETER NO HERE
                          58         02D8       
                                     02D9   418 	PROCMDQUAL			; PROCESS COMMAND QUALIFIERS
         02 A9            02     E0  02DC   419 	BBS	#CLI$V_EXPNAM,CLI$B_RQFLGS(R9),90$ ; BR IF EXPLICIT NAMES ONLY
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  11
01              RESULT PARSE INITIAL ENTRY                                                                                       (6)

                          50         02E0       
                       08 A9     B5  02E1   420 	TSTW	CLI$W_RQSIZE(R9)	; NAME FOUND FOR THIS PARAMETER?
                          4B     12  02E4   421 	BNEQ	90$			; BR IF YES
            56         40 AA     DE  02E6   422 	MOVAL	RPW_AG_PRMLIM(R10),R6	; POINT AT FIRST LIMIT DESCRIPTOR
            55         01 A6     9A  02EA   423 	MOVZBL	PLM_B_FSTDESC(R6),R5	; INDEX TO FIRST PARAMETER
                                     02EE   424 	SETDESCADR			; SET ADDRESS OF DESCRIPTOR IN R4
                                     02F1   425 	EXTRSLDESC			; TAKE THE DESCRIPTOR A PART
            52         5D 8F     3A  02F4   426 	LOCC	#^A/]/,R2,(R3)		; LOOK FOR A DIRECTORY SPEC
                          63         02F8       
                          1D     12  02F9   427 	BNEQ	84$			; BR IF FOUND A DIRECTORY
            52            3E     3A  02FB   428 	LOCC	#^A/>/,R2,(R3)		; IF NO LOOK FOR THE OTHER DIRECTORY END
                          63         02FE       
                          17     12  02FF   429 	BNEQ	84$			; BR IF THAT DIRECTORY WAS FOUND
            52            3A     3A  0301   430 	LOCC	#^A/:/,R2,(R3)		; NOW LOOK FOR DEVICE NAME
                          63         0304       
                          19     13  0305   431 	BEQL	86$			; BR IF NO DEVICE NAME HERE
                          7E     7C  0307   432 	CLRQ	-(SP)			; MAKE A QUADWORD BUFFER
            6E            50     7D  0309   433 82$:	MOVQ	R0,(SP)			; SAVE LAST COLON WAS FOUND
                          51     D6  030C   434 	INCL	R1			; ADVANCE ADDRESS OVER THAT COLON
                          50     D7  030E   435 	DECL	R0			; SUBTRACT 1 FROM COUNT FOR THE COLON
            50            3A     3A  0310   436 	LOCC	#^A/:/,R0,(R1)		; LOOK FOR MORE COLONS
                          61         0313       
                          F3     12  0314   437 	BNEQ	82$			; BR IF MORE COLONS HERE
                          03     BA  0316   438 	POPR	#^M<R0,R1>		; GET ADDRESS OF LENGTH FOR LAST COLON
            52         FF A0     9E  0318   439 84$:	MOVAB	-1(R0),R2		; SET LENGTH MINUS THE TERMINATOR
            53         01 A1     9E  031C   440 	MOVAB	1(R1),R3		; AND ADDRESS BEYOND THE TERMINATOR
            52            2E     3A  0320   441 86$:	LOCC	#^A/./,R2,(R3)		; LOOK FOR A TYPE FIELD
                          63         0323       
                          04     12  0324   442 	BNEQ	88$			; BR IF TYPE FIELD PRESENT
            52            3B     3A  0326   443 	LOCC	#^A/;/,R2,(R3)		; NOW LOOK FOR EXPLICIT VERSION
                          63         0329       
            52            50     C2  032A   444 88$:	SUBL	R0,R2			; ALSO REMOVE THAT IF FOUND
         08 A9            52     7D  032D   445 	MOVQ	R2,CLI$Q_RQDESC(R9)	; SET SIZE AND ADDRESS OF DESCRIPTOR
                                 05  0331   446 90$:	RSB				; RETURN TO DISPATCHER
                                     0332   447 ;
                                     0332   448 ; PROCESS REQUEST FOR AN INPUT SPEC DEFINITON
                                     0332   449 ;
            51         F0 AB     D0  0332   450 INPUT:	MOVL	WRK_L_PAROUT(R11),R1	; POINT AT OUTPUT PARSE INDICATORS
                          09     13  0336   451 	BEQL	5$			; BR IF NONE
                          86     D5  0338   452 	TSTL	(R6)+			; ASSUME MCR INPUT LIST
         01 A1         FF 8F     91  033A   453 	CMPB	#OPI_K_MCRUTLIST,1(R1)	; IS THIS A NORMAL LIST
                          05     13  033F   454 	BEQL	SETPRM			; BR IF NORMAL LIST
            56         40 AA40   DE  0341   455 5$:	MOVAL	RPW_AG_PRMLIM(R10)[R0],R6 ; SET ADDRESS OF LIMIT DESCRIPTOR
                                     0346   456 SETPRM:	EXTNXTDESC			; TAKE NEXT DESCRIPTOR APART
            46            50     E9  0349   457 	BLBC	R0,90$			; ALL DONE
                          52     B5  034C   458 	TSTW	R2			; ANY PARAMETER HERE
                          42     13  034E   459 	BEQL	90$			; BR IF NULL PARAMETER
         08 A9            52     7D  0350   460 	MOVQ	R2,CLI$Q_RQDESC(R9)	; SAVE ADDRESS OF PARAMETER
                                 88  0354   461 	BISB	#CLI$M_PARMPRS,-	; SET FLAG THAT PARAMETER IS PRESENT
         03 A9            01         0355   462 		CLI$B_RQSTAT(R9)	; IN USERS REQUEST STATUS BYTE
                          56     DD  0358   463 	PUSHL	R6			; SAVE PARAMETER DESCRIPTOR POINTER
                                     035A   464 	PROCMDQUAL			; TAKE CARE OF COMMAND QUALIFIERS
                          56   8ED0  035D   465 	POPL	R6			; RESTORE PARM LIMIT DESCRITPTOR POINTER
                                     0360   466 10$:	EXTNXTDESC			; TAKE THE NEXT DESCRIPTOR APART
            2C            50     E9  0363   467 	BLBC	R0,90$			; BR IF NO MORE
            01            51     91  0366   468 	CMPB	R1,#PTR_K_PARMQUAL	; IS THIS A PARAMETER QUALIFIER
                          16     12  0369   469 	BNEQ	30$			; BR IF NO
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  12
01              RESULT PARSE INITIAL ENTRY                                                                                       (6)

                     FEAD CF     9F  036B   470 	PUSHAB	SCANQUAL		; SET INITIAL COROUTINE ADDRESS
                          9E     16  036F   471 20$:	JSB	@(SP)+			; GET NEXT DESCRIPTOR
            1F            50     E9  0371   472 	BLBC	R0,RET1			; NO FIND IS AN ERROR
         01 A7            64     91  0374   473 	CMPB	(R4),CLI$B_QDCODE(R7)	; IS THIS THE QUALIFIER DESCRIPTOR?
                          F5     12  0378   474 	BNEQ	20$			; IF NO LOOK AT NEXT
                          8E     D5  037A   475 	TSTL	(SP)+			; CLEAR COROUTINE ADDRESS
                          016A   30  037C   476 	BSBW	MCR$HANDLQUAL		; SET UP QUALIFER RESULT PARSE DATA
                          DF     11  037F   477 	BRB	10$			; CHECK FOR MORE
            03            51     91  0381   478 30$:	CMPB	R1,#PTR_K_PARAMETR	; THE NEXT PARAMETER
                          DA     12  0384   479 	BNEQ	10$			; BR IF NO
                          66     97  0386   480 	DECB	PLM_B_NXTDESC(R6)	; BACK UP INDEX FOR NEXT RESULT PARSE
                                 91  0388   481 	CMPB	PLM_B_NXTDESC(R6),-	; CHECK IF NEXT IS LEQ LAST,
         02 A6            66         0389   482 		PLM_B_LSTDESC(R6)	; IN THE CURRENT PARAMETER
                          04     1A  038C   483 	BGTRU	90$			; IF GTRU, NO MORE ELEMEMTS IN THIS SET
                                 88  038E   484 	BISB	#CLI$M_CONCATINP,-	; SET FLAG TO SAY CONCATONATED INPUT
         03 A9            02         038F   485 		CLI$B_RQSTAT(R9)	; LIST IS NO EXHAUSTED.
                                 05  0392   486 90$:	RSB				; BACK TO I/O PROCESSOR
                                 04  0393   487 RET1:	RET
                                     0394   488  
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  13
01              VALUE CONVERSION ROUTINES                                                                                        (7)

                                     0394   490 	.SBTTL	VALUE CONVERSION ROUTINES
                                     0394   491 ;++
                                     0394   492 ; FUNCTIONAL DESCRIPTION:
                                     0394   493 ;
                                     0394   494 ;	THIS ROUTINE IS CALLED WHEN THE UTILITY HAS REQUESTED
                                     0394   495 ;	A QUALIFIER VALUE CONVERSION.
                                     0394   496 ;
                                     0394   497 ; CALLING SEQUENCE:
                                     0394   498 ;
                                     0394   499 ;	ENTERED VIA A CASE FOLLOWING A CALL
                                     0394   500 ;
                                     0394   501 ; INPUT PARAMETERS:
                                     0394   502 ;
                                     0394   503 ;	NONE
                                     0394   504 ;
                                     0394   505 ; IMPLICIT INPUTS:
                                     0394   506 ;
                                     0394   507 ;	R9 = ADDRESS OF REQUEST DESCRIPTOR FOR VALUE CONVERSION
                                     0394   508 ;	R10 = ADDRESS OF IMAGE LOCAL WORK AREA
                                     0394   509 ;	R11 = ADDRESS OF PASS 1 PARSE WORK AREA
                                     0394   510 ;
                                     0394   511 ; OUTPUT PARAMETERS:
                                     0394   512 ;
                                     0394   513 ;	VALUE IS CONVERTED AND STRING DESCRIPTOR IN QUALFIER DESCRIPTOR
                                     0394   514 ;	IS UPDATED TO DESCRIBE THE REMAINING VALUE-IF ANY.
                                     0394   515 ;
                                     0394   516 ; IMPLICIT OUTPUTS:
                                     0394   517 ;
                                     0394   518 ;	NONE
                                     0394   519 ;
                                     0394   520 ; COMPLETION CODES:
                                     0394   521 ;
                                     0394   522 ;	MCR$NORMAL FOR SUCCESSFUL CONVERSION
                                     0394   523 ;	MCR$VALCNVERR FOR CONVERSION ERROR
                                     0394   524 ;	MCR$NOVALUE IF VALUE NOT PRESENT
                                     0394   525 ;
                                     0394   526 ; SIDE EFFECTS:
                                     0394   527 ;
                                     0394   528 ;	NONE
                                     0394   529 ;
                                     0394   530 ;--
                                     0394   531  
                                     0394   532 MCR$VALCNV:				; REQUEST FOR VALUE CONVERSION
            57         0C AC     D0  0394   533 	MOVL	12(AP),R7		; GET QUALIFIER DESCRIPTOR
                                     0398   534 	SETINTR	NOVALUE			; ASSUME NO VALUE PRESENT
            52         04 A7     7D  039F   535 	MOVQ	CLI$Q_QDVALDESC(R7),R2	; COPY QUALIFIER VALUE STRING DESCRITOR
                          59     13  03A3   536 	BEQL	40$			; BR IF NO VALUE
                          7E     7C  03A5   537 	CLRQ	-(SP)			; ASSUME NOT CONVERTING DEFAULT VALUE
            55            53     D0  03A7   538 	MOVL	R3,R5			; COPY ADDRESS OF STRING
            54       FD44 CB     DE  03AA   539 	MOVAL	WRK_AB_BUFFER(R11),R4	; BASE ADDRESS OF BUFFER
            55            54     C2  03AF   540 	SUBL	R4,R5			; FIND BYTE OFFSET INTO BUFFER
            54       FBC0 CB     DE  03B2   541 	MOVAL	WRK_AG_RESULT(R11),R4	; RESULT PARSE BUFFER
            51         FC A4     DE  03B7   542 	MOVAL	-4(R4),R1		; SET INDEX BASE INTO RESULT BUFFER
                          08     ED  03BB   543 10$:	CMPZV	#PTR_V_OFFSET,#PTR_S_OFFSET,-
            64            0C         03BD   544 		(R4),R5			; IS THIS THE DESCRIPTOR?
                          55         03BF       
                          0C     12  03C0   545 	BNEQ	20$			; BR IF FOUND THE DESCRIPTOR
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  14
01              VALUE CONVERSION ROUTINES                                                                                        (7)

            54            51     C3  03C2   546 	SUBL3	R1,R4,R5		; FIND BYTE OFFSET TO DESCRIPTOR
                          55         03C5       
            55            04     C6  03C6   547 	DIVL	#4,R5			; NOW LONGWORD INDEX INTO RESULT BUFFER
                                     03C9   548 	EXTRSLDESC			; TAKE RESULT DESCRIPTOR APART
                          22     11  03CC   549 	BRB	30$			; PROCESS THE REQUEST WITH USER VALUE
                          84     D5  03CE   550 20$:	TSTL	(R4)+			; ADVANCE TO NEXT DESCRIPTOR
       FD40 CB            54     D1  03D0   551 	CMPL	R4,WRK_L_RSLNXT(R11)	; IS THIS THE LAST DESCRIPTOR?
                          E4     1F  03D5   552 	BLSSU	10$			; BR IF NO
                                     03D7   553 	SETBIT	#31,(SP)		; SET FLAG FOR INTERNAL VALUE
            52            2C     3A  03DB   554 	LOCC	#^A/,/,R2,(R3)		; CHECK FOR MULTIPLE VALUES
                          63         03DE       
                          0F     13  03DF   555 	BEQL	30$			; BR IF LAST VALUE VALUES
            52            50     C2  03E1   556 	SUBL	R0,R2			; FIND LENGTH OF CURRENT VALUE
            50            01     A3  03E4   557 	SUBW3	#1,R0,(SP)		; SET REMAINING LENTH
                          6E         03E7       
            53            52     C1  03E8   558 	ADDL3	R2,R3,4(SP)		; FIND ADDRESS OF COMMA
                       04 AE         03EB       
                       04 AE     D6  03ED   559 	INCL	4(SP)			; PLUS 1 TO START OF REAL VALUE
                                     03F0   560 30$:	CASE	CLI$B_RQTYPE(R9),-	; DECODE REQUEST TYPE
                                     03F0   561 		TYPE=B,-		; CASE ON A BYTE
                                     03F0   562 		LIMIT=#CLI$K_NUMERVAL,<-; LOWEST REQUEST FOR VALUE LEGAL
                                     03F0   563 		50$,-			; NUMERIC CONVERSION
                                     03F0   564 		100$,-			; ASCII VALUE
                                     03F0   565 		>
                                     03F9   566 	SETSTAT	INVREQTYP		; INCORRECT VALUE
                                 04  03FE   567 40$:	RET				; EXIT CONVERSION
                          FBFE'  30  03FF   568 50$:	BSBW	MCR$CNVNUMDEC		; CONVERT NUMERIC-DEFAULT RADIX=DECIMAL
                          06     12  0402   569 	BNEQ	70$			; IF NOT EQUAL - CONVERSION ERROR
         0C A9            51     D0  0404   570 	MOVL	R1,CLI$L_RQVALU(R9)	; SET RESULTANT VALUE
                          19     11  0408   571 	BRB	120$			; EXIT CONVERSION
                                     040A   572 70$:	SETSTAT	VALCNVERR		; SET ERROR
                          6E     B4  040F   573 	CLRW	(SP)			; ZERO ANY BYTE COUNT HERE IF ANY
            50            6E     C8  0411   574 	BISL	(SP),R0			; INCLUDE INTERNAL BIT IF THERE
                                 04  0414   575 	RET				; RETURN TO DISPATCHER
                                     0415   576  
                                     0415   577 ;
                                     0415   578 ; REQUEST ASCII STRING VALUE
                                     0415   579 ;
                                     0415   580  
         08 A9            52     7D  0415   581 100$:	MOVQ	R2,CLI$Q_RQDESC(R9)	; SET ADDRESS AND SIZE OUTPUT VALUE
            6243          3A     91  0419   582 	CMPB	#^A/:/,(R2)[R3]		; WAS TERMINATOR A COLON
                          04     12  041D   583 	BNEQ	120$			; BR IF NO
         03 A9            02     88  041F   584 	BISB	#CLI$M_KEYVALU,CLI$B_RQSTAT(R9) ; INDICATE SUBVALUE FOLLOWING
         04 A7            8E     7D  0423   585 120$:	MOVQ	(SP)+,CLI$Q_QDVALDESC(R7) ; GET DEFAULT VALUE INFORMATION BACK
         04 A7            1F     E4  0427   586 	BBSC	#31,CLI$Q_QDVALDESC(R7),140$ ; BR IF DOING DEFAULT VALUE
                          03         042B       
                          00E0   30  042C   587 	BSBW	MCR$SETQUALVAL		; SET UP DESCRIPTOR FOR REMAINING VALUE
            52         04 A7     7D  042F   588 140$:	MOVQ	CLI$Q_QDVALDESC(R7),R2	; GET REMAINING VALUE
                          10     13  0433   589 	BEQL	150$			; BR IF THERE IS NONE
         03 A9            01     88  0435   590 	BISB	#CLI$M_MOREVALS,CLI$B_RQSTAT(R9) ; SET FLAG TO INDICATE MORE
                                     0439   591 	SETINTR	ILLVAL			; ASSUME THAT NO MORE ALLOWED
         02 A9            00     E0  0440   592 	BBS	#CLI$V_LASTVAL,CLI$B_RQFLGS(R9),RET2 ; BR IF ERROR
                          03         0444       
                                     0445   593 150$:	SETSTAT	SUCCESS			; INDICATE GOOD STATUS
                                 04  0448   594 RET2:	RET				; ALL DONE
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  15
01              PROCESS BIT LISTS                                                                                                (8)

                                     0449   596 	.SBTTL	PROCESS BIT LISTS
                                     0449   597 ;++
                                     0449   598 ; FUNCTIONAL DESCRIPTION:
                                     0449   599 ;
                                     0449   600 ;	THESE ROUTINES ARE CALLED TO PROCESS THE BIT LISTS SUPPLIED
                                     0449   601 ;	WITH A PARAMETER QUALIFIER. THERE ARE 3 LISTS, THE TEST,SET
                                     0449   602 ;	AND CLEAR LISTS.  THE TEST LIST IS INTENDED TO DETECT CONFLICTING
                                     0449   603 ;	QUALIFIERS AND IS TESTED ONLY WHEN THE QUALIFIER IS FOUND
                                     0449   604 ;	EXPLICITLY TRUE IN THE COMMAND.  THE SET LIST IS SET WHEN THE
                                     0449   605 ;	QUALIFIER IS FOUND TO BE TRUE,CLEARED WHEN THE QUALIFIER IS
                                     0449   606 ;	FOUND TO BE FALSE. THE CLEAR LIST INDICATES A SET OF BITS THAT 
                                     0449   607 ;	SHOULD BE CLEARED IF THE QUALFIER IS TRUE.  THIS PERMITS
                                     0449   608 ;	THE PRESENTS OF A QUALIFIER TO OVERRIDE THE PRESENTS OF
                                     0449   609 ;	ANOTHER.
                                     0449   610 ;
                                     0449   611 ; CALLING SEQUENCE:
                                     0449   612 ;
                                     0449   613 ;	BSB/JSB	MCR$SETSETLST		; SET THE SET LIST, CLEAR THE CLEAR LIST
                                     0449   614 ;	BSB/JSB	MCR$CLRSETLST		; CLEAR THE SET LIST, SET THE CLEAR LIST
                                     0449   615 ;	BSB/JSB	MCR$TSTSETLST		; TEST THE TEST LIST, THEN DO SETSETLST
                                     0449   616 ;
                                     0449   617 ; INPUT PARAMETERS:
                                     0449   618 ;
                                     0449   619 ;	R7 CONTAINS THE ADDRESS OF THE PROPER QUALIFIER DESCRIPTOR
                                     0449   620 ;
                                     0449   621 ; IMPLICIT INPUTS:
                                     0449   622 ;
                                     0449   623 ;	R8 = ADDRESS OF UTILITY BIT ARRAY
                                     0449   624 ;	R9 = ADDRESS OF REQUEST DESCRIPTOR
                                     0449   625 ;	R10 = ADDRESS OF WORK BLOCK
                                     0449   626 ;	R11 = ADDRESS OF PASS 1 PARSE WORK AREA
                                     0449   627 ;
                                     0449   628 ; OUTPUT PARAMETERS:
                                     0449   629 ;
                                     0449   630 ;	THE BITS ARE SET/CLEARED
                                     0449   631 ;
                                     0449   632 ; IMPLICIT OUTPUTS:
                                     0449   633 ;
                                     0449   634 ;	NONE
                                     0449   635 ;
                                     0449   636 ; COMPLETION CODES:
                                     0449   637 ;
                                     0449   638 ;	NONE
                                     0449   639 ;
                                     0449   640 ; SIDE EFFECTS:
                                     0449   641 ;
                                     0449   642 ;	TOP LEVEL ERROR IS ISSUED OF BIT TEST FAILURE
                                     0449   643 ;
                                     0449   644 ;--
                                     0449   645 
                                     0449   646 	.ENABL	LSB
                                     0449   647  
                                     0449   648 MCR$TSTSETLST::				; TEST THE TEST LIST, THEN DO SET LIST
            52         14 A7     9E  0449   649 	MOVAB	CLI$C_QDBITS(R7),R2	; GET ADDRESS OF BIT TEST LIST
         02 A7            01     E1  044D   650 	BBC	#CLI$V_QDUSRV,CLI$B_QDFLGS(R7),5$ ; BR IF NO USER CONTEX VALUE
                          02         0451       
                          82     D5  0452   651 	TSTL	(R2)+			; SKIP OVER THE USERS VALUE
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  16
01              PROCESS BIT LISTS                                                                                                (8)

            51            82     9A  0454   652 5$:	MOVZBL	(R2)+,R1		; GET COUNT OF BITS TO TEST
                          0F     13  0457   653 	BEQL	MCR$SETSETLST		; GO SET THE BITS
                                     0459   654 	SETSTAT	CONFQUAL		; ASSUME CONFLICTING QUALIFERS
            53            82     9A  045E   655 10$:	MOVZBL	(R2)+,R3		; GET BIT NUMBER
            68            53     E0  0461   656 	BBS	R3,(R8),RET2		; TAKE ERROR EXIT
                          E3         0464       
            F6            51     F5  0465   657 	SOBGTR	R1,10$			; BR IF MORE TO DO
                                     0468   658  
                                     0468   659 MCR$SETSETLST::				; SET THE SET LIST
            50            01     D0  0468   660 	MOVL	#1,R0			; SET A TRUE INDICATOR
                          06     10  046B   661 	BSBB	50$			; PROCESS SET LIST
                          50     D4  046D   662 	CLRL	R0			; NOW A FALSE
                          13     11  046F   663 	BRB	60$			; AND DO CLEAR LIST
                                     0471   664  
                                     0471   665 MCR$CLRSETLST::				; CLEAR THE SET LIST
                          50     D4  0471   666 	CLRL	R0			; GET A FALSE
                                     0473   667 ;	BSBB	50$			; CLEAR THE SET LIST
                                     0473   668 ;	INCL	R0			; NOW TRUE
                                     0473   669 ;	BRB	60$			; SET THE CLEAR LIST
                                     0473   670  
            52         14 A7     9E  0473   671 50$:	MOVAB	CLI$C_QDBITS(R7),R2	; GET ADDRESS OF TEST LIST
         02 A7            01     E1  0477   672 	BBC	#CLI$V_QDUSRV,CLI$B_QDFLGS(R7),55$ ; BR IF NO USER VALUE PRESENT
                          02         047B       
                          82     D5  047C   673 	TSTL	(R2)+			; SKIP USER CONTEX LONGWORD
            51            82     9A  047E   674 55$:	MOVZBL	(R2)+,R1		; GET COUNT OF TEST LIST
            52            51     C0  0481   675 	ADDL	R1,R2			; AND SKIP OVER THE LIST
            51            82     9A  0484   676 60$:	MOVZBL	(R2)+,R1		; GET COUNT OF SET LIST
                          11     13  0487   677 	BEQL	90$			; BR IF NONE
            53            82     9A  0489   678 70$:	MOVZBL	(R2)+,R3		; GET A BIT
                                     048C   679 	SETBIT	R3,(R8)			; SET THE BIT
            04            50     E8  0490   680 	BLBS	R0,80$			; BR IF THAT WAS THE CORRECT ACTION
                                     0493   681 	CLRBIT	R3,(R8)			; ELSE CLEAR IT
            EF            51     F5  0497   682 80$:	SOBGTR	R1,70$			; DO ALL BITS
                                 05  049A   683 90$:	RSB				; RETURN
                                     049B   684  
                                     049B   685 	.DSABL	LSB
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  17
01              PROCESS COMMAND QUALIFIER                                                                                        (9)

                                     049B   687 	.SBTTL	PROCESS COMMAND QUALIFIER
                                     049B   688 ;++
                                     049B   689 ; FUNCTIONAL DESCRIPTION:
                                     049B   690 ;
                                     049B   691 ;	THIS ROUTINE IS CALLED WHEN A PARAMETER HAS BEEN FOUND PRESENT
                                     049B   692 ;	IN THE COMMAND. THIS ROUTINE SEARCHED FOR ANY COMMAND QUALIFIERS
                                     049B   693 ;	PRESENT ITN THE RANGE OF THE COMMAND, WHERE THE RANGE OF THE
                                     049B   694 ;	COMMAND IS DEFINED AS ON THE VERB, OR WITHIN THE CURRENT LIMITS
                                     049B   695 ;	OF ANY COMMAND PARAMETERS.  ONLY QUALIFIERS EXPLICITLY REQUESTED
                                     049B   696 ;	ARE PROCESSED.
                                     049B   697 ;
                                     049B   698 ; CALLING SEQUENCE:
                                     049B   699 ;
                                     049B   700 ;	BSB/JSB	MCR$PROCMDQUAL
                                     049B   701 ;
                                     049B   702 ; INPUT PARAMETERS:
                                     049B   703 ;
                                     049B   704 ;	NONE
                                     049B   705 ;
                                     049B   706 ; IMPLICIT INPUTS:
                                     049B   707 ;
                                     049B   708 ;	R8 = ADDRESS OF UTILITY BIT ARRAY
                                     049B   709 ;	R9 = ADDRESS OF REQUEST DESCRIPTOR
                                     049B   710 ;	R10 = ADDRESS OF WORK BLOCK
                                     049B   711 ;	R11 = ADDRESS OF PASS 1 PARSE WORK AREA
                                     049B   712 ;
                                     049B   713 ; OUTPUT PARAMETERS:
                                     049B   714 ;
                                     049B   715 ;	ALL QUALIFIERS SPECIFIED BY THE UTILITY, AND PRESENT ARE PROCESSED.
                                     049B   716 ;
                                     049B   717 ; IMPLICIT OUTPUTS:
                                     049B   718 ;
                                     049B   719 ;	NONE
                                     049B   720 ;
                                     049B   721 ; COMPLETION CODES:
                                     049B   722 ;
                                     049B   723 ;	NONE
                                     049B   724 ;
                                     049B   725 ; SIDE EFFECTS:
                                     049B   726 ;
                                     049B   727 ;	NONE
                                     049B   728 ;
                                     049B   729 ;--
                                     049B   730 
                                     049B   731  
                                     049B   732 MCR$PROCMDQUAL::			; PROCESS COMMAND QUALIFIERS
                     0000'CF     9F  049B   733 	PUSHAB	W^MCR$FNDCMDQUAL	; INIT COROUTINE
                          9E     16  049F   734 10$:	JSB	@(SP)+			; FIND NEXT QUALIFIER IN COMMAND
            44            50     E9  04A1   735 	BLBC	R0,80$			; BR IF NO MORE
                     FD74 CF     9F  04A4   736 	PUSHAB	W^SCANQUAL		; SCAN THE UTILITIES QUALIFIERS
                          9E     16  04A8   737 20$:	JSB	@(SP)+			; FIND NEXT QUALIFIER DESCRIPTOR BLOCK
            F2            50     E9  04AA   738 	BLBC	R0,10$			; BR IF NO MORE UTILITY DESCRIPTORS
            64         01 A7     91  04AD   739 	CMPB	CLI$B_QDCODE(R7),(R4)	; MATCH UTILITY CODE?
                          F5     12  04B1   740 	BNEQ	20$			; BR IF NO-CKECK UTILITIES NEXT DESCPTR
                          8E     D5  04B3   741 	TSTL	(SP)+			; CLR QUAL DESC SCAN COROUTINE
                     0070 8F     BB  04B5   742 	PUSHR	#^M<R4,R5,R6>		; SAVE INFO USED BY COROUTINE
                                 E0  04B9   743 	BBS	#CLI$V_ALLOCCUR+<CLI$B_QDFLGS*8>,- ; BR IF UTILITY WANTS TO SEE
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  18
01              PROCESS COMMAND QUALIFIER                                                                                        (9)

            67            10         04BA   744 		(R7),60$		; ALL OCCURANCES OF THIS QUALIFIER
                          1C         04BC       
                                     04BD   745 	SETBIT	R5,RPW_AG_BITS(R10)	; INDICATE QUALIFIER PROCESSED
                       0C AE     DD  04C2   746 	PUSHL	12(SP)			; COPY COROUTINE ADDRESS
                          9E     16  04C5   747 30$:	JSB	@(SP)+			; CONTINUE SCAN FOR THIS QUALIFIER
            0C            50     E9  04C7   748 	BLBC	R0,40$			; BR IF NO MORE OCCURANCES
            64         01 A7     91  04CA   749 	CMPB	CLI$B_QDCODE(R7),(R4)	; IS THIS THE SAME QUALIFIER?
                          F5     12  04CE   750 	BNEQ	30$			; IF NO LOOK SOME MORE
                     0071 8F     BA  04D0   751 	POPR	#^M<R0,R4,R5,R6>	; POP RETURN ADDRESS PLUS PARAMETERS
                          C9     11  04D4   752 	BRB	10$			; PROCESS THIS WHEN WE FIND IT AGAIN
            54            6E     7D  04D6   753 40$:	MOVQ	(SP),R4			; SET THE VALUE OF QUALIFIER DESCRIPTOR
                          0E     10  04D9   754 60$:	BSBB	MCR$HANDLQUAL		; HANDLE THE QUALIFIER
                     0070 8F     BA  04DB   755 	POPR	#^M<R4,R5,R6>		; RESTORE INFO USED BY COROUTINE
            67            10     E1  04DF   756 	BBC	#CLI$V_ALLOCCUR+<CLI$B_RQFLGS*8>,(R7),10$ ; DOING ALL OCCURANCES
                          BC         04E2       
                          FD00   30  04E3   757 	BSBW	QUALACT			; IF YES TAKE ACTION AT THIS TIME
                          B7     11  04E6   758 	BRB	10$			; LOOK FOR MORE
                                 05  04E8   759 80$:	RSB				;
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  19
01              PROCESS QUALIFIER                                                                                               (10)

                                     04E9   761 	.SBTTL	PROCESS QUALIFIER
                                     04E9   762 ;++
                                     04E9   763 ; FUNCTIONAL DESCRIPTION:
                                     04E9   764 ;
                                     04E9   765 ;	THE FOLLOWING IS A SET OF ROUTINES THAT PROCESS QUALIFERS
                                     04E9   766 ;	AND THERE VALUES.
                                     04E9   767 ;
                                     04E9   768 ;    MCR$HANDLQUAL
                                     04E9   769 ;
                                     04E9   770 ;	THIS ROUTINE IS CALLED TO PROCESS A QUALIFIER FOUND IN THE
                                     04E9   771 ;	COMMAND LINE, AND SET ALL UTILITY STRUCTURES CORRECTLY.
                                     04E9   772 ;
                                     04E9   773 ;    MCR$SETQUALVAL
                                     04E9   774 ;
                                     04E9   775 ;	THIS ROUTINE IS CALLED TO SET THE STRING LIMITS OF
                                     04E9   776 ;	A EXPLICIT VALUE ENTERED VIA THE COMMAND STREAM.
                                     04E9   777 ;
                                     04E9   778 ;    MCR$SETDEFVAL
                                     04E9   779 ;
                                     04E9   780 ;	THIS ROUTINE IS CALLED TO SET THE STRING LIMITS FOR
                                     04E9   781 ;	A DEFAULT VALUE ASSOCIATED WITH A QUALIFER THAT IS TRUE.
                                     04E9   782 ;
                                     04E9   783 ; CALLING SEQUENCE:
                                     04E9   784 ;
                                     04E9   785 ;	BSB/JSB	MCR$<ENTRY>
                                     04E9   786 ;
                                     04E9   787 ; INPUT PARAMETERS:
                                     04E9   788 ;
                                     04E9   789 ;  MCR$HANDLQUAL
                                     04E9   790 ;
                                     04E9   791 ;	R4 CONTAINS THE ADDRESS OF THE RESULT PARSE DESCRIPTOR FOR THE QUALIFIER
                                     04E9   792 ;	R5 IS INDEX TO THE RESULT DESCRIPTOR FOR THE QUALFIER
                                     04E9   793 ;	R7 CONTAINS THE ADDRESS OF THE UTILITY QUALIFIER DESCRIPTOR
                                     04E9   794 ;
                                     04E9   795 ; MCR$SETQUALVAL
                                     04E9   796 ;
                                     04E9   797 ;	R5 IS INDEX TO THE RESULT DESCRIPTOR FOR THE QUALFIER OR LAST VALUE
                                     04E9   798 ;	R7 CONTAINS THE ADDRESS OF THE UTILITY QUALIFIER DESCRIPTOR
                                     04E9   799 ;
                                     04E9   800 ; MCR$SETDEFVAL
                                     04E9   801 ;
                                     04E9   802 ;	R2 CONTAINS THE ADDRESS OF MCR INTERNAL QUALIFER DESCRIPTOR
                                     04E9   803 ;	R7 CONTAINS THE ADDRESS OF THE UTILITY QUALIFIER DESCRIPTOR
                                     04E9   804 ;
                                     04E9   805 ; IMPLICIT INPUTS:
                                     04E9   806 ;
                                     04E9   807 ;	R8 = ADDRESS OF UTILITY BIT ARRAY
                                     04E9   808 ;	R9 = ADDRESS OF REQUEST DESCRIPTOR
                                     04E9   809 ;	R10 = ADDRESS OF WORK BLOCK
                                     04E9   810 ;	R11 = ADDRESS OF PASS 1 PARSE WORK AREA
                                     04E9   811 ;
                                     04E9   812 ; OUTPUT PARAMETERS:
                                     04E9   813 ;
                                     04E9   814 ;	UTILITY QUALIFER DATA STRUTURE IS SET PROPERLY
                                     04E9   815 ;
                                     04E9   816 ; IMPLICIT OUTPUTS:
                                     04E9   817 ;
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  20
01              PROCESS QUALIFIER                                                                                               (10)

                                     04E9   818 ;	NONE
                                     04E9   819 ;
                                     04E9   820 ; COMPLETION CODES:
                                     04E9   821 ;
                                     04E9   822 ;	NONE
                                     04E9   823 ;
                                     04E9   824 ; SIDE EFFECTS:
                                     04E9   825 ;
                                     04E9   826 ;	NONE
                                     04E9   827 ;
                                     04E9   828 ;--
                                     04E9   829 
                                     04E9   830 	.ENABL	LSB
                                     04E9   831 
                                     04E9   832 MCR$HANDLQUAL::				; PROCESS A QUALIFIER
                       04 A7     7C  04E9   833 	CLRQ	CLI$Q_QDVALDESC(R7)	; SET VALUE TO NONE
                                     04EC   834 	SETBIT	R5,RPW_AG_BITS(R10)	; COUNT THIS QUALIFIER AS PROCESSED
                                 88  04F1   835 	BISB	#CLI$M_QUALEXP,-	; SET FLAG TO INDICATE QUALIFIER WAS
         03 A7            02         04F2   836 		CLI$B_QDSTAT(R7)	; EXPLICITLY FOUND
         03 A7            01     8A  04F5   837 	BICB	#CLI$M_QUALTRU,CLI$B_QDSTAT(R7) ; AND SET STATE TO FALSE
                                 E0  04F9   838 	BBS	#PTR_V_NEGATE+PTR_V_FLAGS,- ; BR IF THE ASSUMED STATE,FALSE,
            64            14         04FA   839 		PTR_L_DESCR(R4),40$	; BR IF ASSUMED CORRECTLY
                          3C         04FC       
                                 88  04FD   840 	BISB	#CLI$M_QUALTRU,-	; ASSUMED INCORRECTLY, SET STATE OF
         03 A7            01         04FE   841 		CLI$B_QDSTAT(R7)	; QUALIFIER TO TRUE
                          18     ED  0501   842 	CMPZV	#PTR_V_TERM,#PTR_S_TERM,- ; TERMINATOR VIELD LIMITS
            64            04         0503   843 		PTR_L_DESCR(R4),#PTR_K_COLON ; EXPLICIT VALUE GIVEN?
                          02         0505       
                          07     13  0506   844 	BEQL	MCR$SETQUALVAL		; BR IF YES, SET USER SPECIFIED VALUE
                          18     ED  0508   845 	CMPZV	#PTR_V_TERM,#PTR_S_TERM,- ; TERMINATOR VIELD LIMITS
            64            04         050A   846 		PTR_L_DESCR(R4),#PTR_K_LPAREN ; EXPLICIT VALUE GIVEN?
                          07         050C       
                          2B     12  050D   847 	BNEQ	70$			; BR IF N0, SET DEFAULT IF THERE IS ONE
                                     050F   848 MCR$SETQUALVAL:				; SET QUALIFIER VALUE ONLY
                       04 A7     7C  050F   849 	CLRQ	CLI$Q_QDVALDESC(R7)	; ASSUME NO VALUE PRESENT
                          55     D6  0512   850 	INCL	R5			; ADV INDEX TO NEXT RESULT DESCRIPTOR
                                     0514   851 	GETEXTDESC			; TAKE THAT 1 APART
            02            51     91  0517   852 	CMPB	R1,#PTR_K_QUALVALU	; WAS THIS A VALUE?
                          1D     12  051A   853 	BNEQ	40$			; BR IF NO
                          0C     BB  051C   854 	PUSHR	#^M<R2,R3>		; SET CURRENT LIMIT VALUES
                          0A     11  051E   855 	BRB	20$			; JOIN COMMON LOOP
                          55     D6  0520   856 10$:	INCL	R5			; ADD 1 TO INDEX INTO RESULT BUFFER
                                     0522   857 	GETEXTDESC			; TAKE THE DESCRIPTOR APART
            02            51     91  0525   858 	CMPB	R1,#PTR_K_QUALVALU	; LAST VALUE IN LIST?
                          06     12  0528   859 	BNEQ	30$			; BR IF YES-EXIT THE LOOP
            53            52     C1  052A   860 20$:	ADDL3	R2,R3,(SP)		; FIND END OF LAST VALUE
                          6E         052D       
                          F0     11  052E   861 	BRB	10$			; LOOK FOR MORE
                          0C     BA  0530   862 30$:	POPR	#^M<R2,R3>		; GET VALUE LIMITS BACK
            52            53     C2  0532   863 	SUBL	R3,R2			; CHANGE TO LENGTH
         04 A7            52     7D  0535   864 	MOVQ	R2,CLI$Q_QDVALDESC(R7)	; SET VALUE
                                 05  0539   865 40$:	RSB				; PROCESS BIT LISTS-RETURN FROM THERE
                                     053A   866  
            10            69     91  053A   867 70$:	CMPB	(R9),#CLI$K_INPUT1	; IS THIS A PARAMETER PARSE
                          17     19  053D   868 	BLSS	80$			; BR IF NO - NO DEFAULT VALUES THEN
            51            64     9A  053F   869 	MOVZBL	(R4),R1			; GET QUALIFIER NUMBER
                                     0542   870 	GETPARMQUAL			; LOCATE ASSOCIATED QUALIFER BLOCK
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  21
01              PROCESS QUALIFIER                                                                                               (10)

                                     0545   871  
                                     0545   872 MCR$SETDEFVAL:				; RETURN QUALIFER DEFAULT VALUE
            50         03 A2     9A  0545   873 	MOVZBL	QUA_B_DEFVAL(R2),R0	; GET OFFSET TO DEFAULT VALUE STRING
                          0B     13  0549   874 	BEQL	80$			; BR IF NO DEFAULT VALUE
            50            52     C0  054B   875 	ADDL	R2,R0			; FIND REAL ADDRESS OF DEFAULT VALUE
         04 A7            80     9B  054E   876 	MOVZBW	(R0)+,CLI$W_QDVALSIZ(R7) ; SET SIZE OF VALUE STRING
         08 A7            50     D0  0552   877 	MOVL	R0,CLI$A_QDVALADR(R7)	; AND THE ADDRESS OF THE STRING
                                 05  0556   878 80$:	RSB				; RETURN FROM DEFAULT VALUE PROCESSING
                                     0557   879  
                                     0557   880 	.DSABL	LSB
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  22
01              PROCESS QUALIFIER                                                                                               (12)

                                     0557   882 
                                     0557   883 	.SBTTL	GET OPTION VALUE
                                     0557   884 ;++
                                     0557   885 ; FUNCTIONAL DESCRIPTION:
                                     0557   886 ;
                                     0557   887 ;	AN OPTION IS A MCR COMMAND PARAMETER THAT IS MADE TO
                                     0557   888 ;	APPEAR AS A QUALIFIER.  THIS ROUTINE IS CALLED BY
                                     0557   889 ;	AN IMAGE THAT HAS SEVERAL OPTIONS TO PROCESS AND WOULD
                                     0557   890 ;	LIKE TO BE TOLD WHICH IT IS TO DO.  OPTIONS APPEAR IN
                                     0557   891 ;	THE RESULT PARSE BUFFER AS THE FIRST ENTRY AND AS
                                     0557   892 ;	PARAMETER QUALIFIER.  THE ONLY OUTPUT OF THIS ROUTINE
                                     0557   893 ;	IS THE EXECUTION OF THE ACTION ROUTINE FOR THE OPTION.
                                     0557   894 ;	FAILURE TO SPECIFY ACTION ROUTINES FOR OPTIONS RESULTS
                                     0557   895 ;	IN CAUSING THIS CALL BACK TO BE A NO-OP.
                                     0557   896 ;
                                     0557   897 ; CALLING SEQUENCE:
                                     0557   898 ;
                                     0557   899 ;	ENTERED VIA A CASE FOLLOWING A CALL
                                     0557   900 ;
                                     0557   901 ; INPUT PARAMETERS:
                                     0557   902 ;
                                     0557   903 ;	NONE
                                     0557   904 ;
                                     0557   905 ; IMPLICIT INPUTS:
                                     0557   906 ;
                                     0557   907 ;	R9 = ADDRESS OF REQUEST DESCRIPTOR FOR VALUE CONVERSION
                                     0557   908 ;	R10 = ADDRESS OF IMAGE LOCAL WORK AREA
                                     0557   909 ;	R11 = ADDRESS OF PASS 1 PARSE WORK AREA
                                     0557   910 ;
                                     0557   911 ; OUTPUT PARAMETERS:
                                     0557   912 ;
                                     0557   913 ;	THE OPTION QUALIFER ACTION ROUTINE IS EXECUTED FOR THE QUALIFIER
                                     0557   914 ;	THAT MATCHES THE CODE.
                                     0557   915 ;
                                     0557   916 ; IMPLICIT OUTPUTS:
                                     0557   917 ;
                                     0557   918 ;	NONE
                                     0557   919 ;
                                     0557   920 ; COMPLETION CODES:
                                     0557   921 ;
                                     0557   922 ;	MCR$INVQUAL IF NO MATCH ON THE QUALIFIER CODE
                                     0557   923 ;	    ELSE AS SET BY THE OPTION ACTION ROUTINE.
                                     0557   924 ;
                                     0557   925 ; SIDE EFFECTS:
                                     0557   926 ;
                                     0557   927 ;	NONE
                                     0557   928 ;
                                     0557   929 ;--
                                     0557   930 MCR$GETOPT:				; FIND COMMAND OPTION
                                     0557   931 	SETSTAT	<NOOPTPRS>		; ASSUME NO OPTION PRESENT
            54       FBC0 CB     DE  055C   932 	MOVAL	WRK_AG_RESULT(R11),R4	; SET ADDRESS OF FIRST RESULT DESCRIPTOR
                          1C     ED  0561   933 	CMPZV	#PTR_V_TYPE,#PTR_S_TYPE,- ; CHECK THAT QUALIFER TYPE IS
            64            04         0563   934 		PTR_L_DESCR(R4),#PTR_K_PARMQUAL ; PARAMETER QUALIFER
                          01         0565       
                          15     12  0566   935 	BNEQ	20$			; IF NOT-THIS COMMAND HAS NO OPTIONS
                     FCB0 CF     9F  0568   936 	PUSHAB	SCANQUAL		; SET COROUTINE TO SCAN INPUT QUALIFERS
                          9E     16  056C   937 10$:	JSB	@(SP)+			; GET CALLERS NEXT QUALIFIER DESCRIPTOR
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  23
01              GET OPTION VALUE                                                                                                (12)

            0C            50     E9  056E   938 	BLBC	R0,20$			; BR IF NOT FOUND
         01 A7            64     91  0571   939 	CMPB	(R4),CLI$B_QDCODE(R7)	; IS THIS THE QUALIFIER HE WANTED
                          F5     12  0575   940 	BNEQ	10$			; BR IF NO-KEEP LOOKING
                          FF6F   30  0577   941 	BSBW	MCR$HANDLQUAL		; SET USERS STRUCTURE
                          FC69   30  057A   942 	BSBW	QUALACT			; TAKE PROPER ACTION
                                 04  057D   943 20$:	RET				; RETURN TO DISPATCHER
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  24
01              GET COMMAND LINE                                                                                                (13)

                                     057E   945 	.SBTTL	GET COMMAND LINE
                                     057E   946 ;++
                                     057E   947 ; FUNCTIONAL DESCRIPTION:
                                     057E   948 ;
                                     057E   949 ;	THIS ROUTINE IS CALLED TO SET A DESCRITOR FOR THE COMMAND
                                     057E   950 ;	THAT WAS JUST PROCESSED BY MCR.
                                     057E   951 ;
                                     057E   952 ; CALLING SEQUENCE:
                                     057E   953 ;
                                     057E   954 ;	THIS ROUTINE IS ENTERED BY A CASE FOLLOWING A CALL
                                     057E   955 ;
                                     057E   956 ; INPUT PARAMETERS:
                                     057E   957 ;
                                     057E   958 ;	NONE
                                     057E   959 ;
                                     057E   960 ; IMPLICIT INPUTS:
                                     057E   961 ;
                                     057E   962 ;	R9 = ADDRESS OF REQUEST DESCRIPTOR
                                     057E   963 ;	R11 = ADDRESS OF PASS 1 PARSE WORK AREA
                                     057E   964 ;
                                     057E   965 ; OUTPUT PARAMETERS:
                                     057E   966 ;
                                     057E   967 ;	THE REQUEST DESCRIPTOR IS SET TO CONTAIN A QUADWORD DESCRIPTOR
                                     057E   968 ;	THE THE FINAL COMMAND IN THE BUFFER.
                                     057E   969 ;
                                     057E   970 ; IMPLICIT OUTPUTS:
                                     057E   971 ;
                                     057E   972 ;	NONE
                                     057E   973 ;
                                     057E   974 ; COMPLETION CODES:
                                     057E   975 ;
                                     057E   976 ;	SUCCESS
                                     057E   977 ;
                                     057E   978 ; SIDE EFFECTS:
                                     057E   979 ;
                                     057E   980 ;	NONE
                                     057E   981 ;
                                     057E   982 ;--
                                     057E   983 
                                     057E   984 
                                     057E   985 MCR$GETCMD::				; GET COMMAND LINE
                          FA7F'  30  057E   986 	BSBW	MCR$GETMCRWRK		; SET WORK AREA POINTER
         03 A9         C8 AB     90  0581   987 	MOVB	WRK_B_VERBTYP(R11),CLI$B_RQSTAT(R9); GET VERB TYPE FOR CALLER
            53       FD46 CB     9E  0586   988 	MOVAB	WRK_AB_BUFFER+2(R11),R3	; START OF COMMAND BUFFER
       01FC 8F            00     3A  058B   989 	LOCC	#0,#CMDBUFSIZ,(R3)	; FIND END OF THE COMMAND
                          63         0590       
            51            53     C3  0591   990 	SUBL3	R3,R1,R2		; FIND THE LENGTH OF THE COMMAND
                          52         0594       
         08 A9            52     7D  0595   991 	MOVQ	R2,CLI$Q_RQDESC(R9)	; SET RESULT IN CALLER DATA BLOCK
            50   80000000 8F     D0  0599   992 	MOVL	#1@31,R0		; SET INTERNAL ERROR BIT
         03 A9            24     91  05A0   993 	CMPB	#CLI$K_VERB_RUN,CLI$B_RQSTAT(R9) ; WAS COMMAND A RUN?
                          19     13  05A4   994 	BEQL	30$			; IF YES - THERE IS NO COMMAND LINE
         03 A9         FF 8F     91  05A6   995 	CMPB	#CLI$K_VERB_FORE,CLI$B_RQSTAT(R9) ; IS IT A FOREIGN COMMAND?
                          0F     13  05AB   996 	BEQL	20$			; IF YES - ALL IS WELL
            2F            63     91  05AD   997 10$:	CMPB	(R3),#^A\/\		; ELSE STRIP THE COMMAND VERB
                          0A     13  05B0   998 	BEQL	20$			; BR IF END OF VERB
            20            63     91  05B2   999 	CMPB	(R3),#^A/ /		; IS IT A SPACE
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  25
01              GET COMMAND LINE                                                                                                (13)

                          05     13  05B5  1000 	BEQL	20$			; BR IF YES
                          53     D6  05B7  1001 	INCL	R3			; POINT AT NEXT BYTE IN THE RECORD
            F1            52     F5  05B9  1002 	SOBGTR	R2,10$			; CHECK THE ENTIRE COMMAND LINE
                                     05BC  1003 20$:	SETSTAT	SUCCESS			; SET THE STATUS TO SUCESS
                                 04  05BF  1004 30$:	RET				; RETURN TO DISPATCHER
                                     05C0  1005  
                                     05C0  1006 	.END
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  26
SYMBOL TABLE                                                                                                                    (13)

BIT...         = 000000FE            CLI$K_VALCONV  = 00000004            CLI$K_WORKAREA   00000080            
CALERR           00000036 R     03   CLI$K_VERB_ALLO= 00000001            CLI$L_CLIFLAG    00000018            
CALLBAK          00000202 R     03   CLI$K_VERB_ANAL= 00000002            CLI$L_INIARGCNT  00000000            
CLI$A_ABSACT     00000014            CLI$K_VERB_APPE= 0000002F            CLI$L_LINKFLAG   00000014            
CLI$A_ERRACT     00000004            CLI$K_VERB_ASSI= 00000003            CLI$L_RQVALU     0000000C            
CLI$A_FLSACT     00000010            CLI$K_VERB_BASI= 00000004            CLI$L_USRVAL     00000014            
CLI$A_IMGFILED   00000010            CLI$K_VERB_BLIS= 00000005            CLI$L_WORKAREA   00000000            
CLI$A_IMGHDADR   0000000C            CLI$K_VERB_CANC= 00000033            CLI$M_ABSADR   = 00000002            
CLI$A_PROGXFER   00000004            CLI$K_VERB_COBO= 00000006            CLI$M_ALLOCCUR = 00000001            
CLI$A_PRSACT     00000010            CLI$K_VERB_CONT= 00000007            CLI$M_BATCH    = 00000008            
CLI$A_QDVALADR   00000008            CLI$K_VERB_COPY= 00000008            CLI$M_CONCATINP= 00000002            
CLI$A_QUALST     00000018            CLI$K_VERB_CREA= 00000009            CLI$M_DBGEXCP  = 00010000            
CLI$A_RQADDR     0000000C            CLI$K_VERB_DATA= 0000000A            CLI$M_DBGTRU   = 00000002            
CLI$A_TRUACT     0000000C            CLI$K_VERB_DEAL= 0000000B            CLI$M_DEBUG    = 00000001            
CLI$A_UTILSERV   00000008            CLI$K_VERB_DEAS= 0000000C            CLI$M_DUMMY    = 00000002            
CLI$B_BITNUM     00000001            CLI$K_VERB_DEBU= 0000000D            CLI$M_EXPNAM   = 00000004            
CLI$B_QDBLKSIZ   00000000            CLI$K_VERB_DEFI= 0000000E            CLI$M_INDIRECT = 00000010            
CLI$B_QDCODE     00000001            CLI$K_VERB_DELE= 0000000F            CLI$M_KEYVALU  = 00000002            
CLI$B_QDFLGS     00000002            CLI$K_VERB_DEPO= 00000010            CLI$M_LASTVAL  = 00000001            
CLI$B_QDSTAT     00000003            CLI$K_VERB_DIFF= 00000011            CLI$M_MOREINP  = 00000004            
CLI$B_RQFLGS     00000002            CLI$K_VERB_DIRE= 00000012            CLI$M_MOREVALS = 00000001            
CLI$B_RQINDX     00000001            CLI$K_VERB_DISM= 00000013            CLI$M_PARMDEF  = 00000008            
CLI$B_RQSTAT     00000003            CLI$K_VERB_DUMP= 00000030            CLI$M_PARMPRS  = 00000001            
CLI$B_RQTYPE     00000000            CLI$K_VERB_EDIT= 00000014            CLI$M_PARMREQ  = 00000001            
CLI$C_QDBITS     00000014            CLI$K_VERB_EOD = 00000015            CLI$M_QDEXPA   = 00000004            
CLI$C_QUALDEF    00000014            CLI$K_VERB_EXAM= 00000016            CLI$M_QDUSRV   = 00000002            
CLI$C_REQDESC    0000001C            CLI$K_VERB_EXIT= 00000017            CLI$M_QUALEXP  = 00000002            
CLI$C_WORKAREA   00000080            CLI$K_VERB_FORE= 000000FF            CLI$M_QUALTRU  = 00000001            
CLI$K_ASCIIVAL = 00000041            CLI$K_VERB_FORT= 00000018            CLI$M_TRMVRBLV = 00000300            
CLI$K_CLISERV  = 00000005            CLI$K_VERB_GOTO= 00000019            CLI$M_VERIFY   = 00000004            
CLI$K_ENDPRM1  = 00000030            CLI$K_VERB_HELP= 0000001A            CLI$M_VFYINP   = 00000020            
CLI$K_ENDPRM2  = 00000031            CLI$K_VERB_IF  = 0000001B            CLI$Q_QDVALDESC  00000004            
CLI$K_ENDPRM3  = 00000032            CLI$K_VERB_INIT= 0000001C            CLI$Q_RQDESC     00000008            
CLI$K_ENDPRM4  = 00000033            CLI$K_VERB_INQU= 0000001D            CLI$S_PRITYP   = 00000004            
CLI$K_FILSPEC  = 00000044            CLI$K_VERB_LIBR= 00000034            CLI$S_SUBTYP   = 00000004            
CLI$K_GETCMD   = 00000001            CLI$K_VERB_LINK= 0000001E            CLI$S_TRMVRBLV = 00000002            
CLI$K_GETOPT   = 00000003            CLI$K_VERB_LOGO= 0000001F            CLI$V_ABSADR   = 00000001            
CLI$K_GETQUAL  = 00000002            CLI$K_VERB_MACR= 00000020            CLI$V_ALLOCCUR = 00000000            
CLI$K_INITPRS  = 00000000            CLI$K_VERB_MCR = 00000021            CLI$V_BATCH    = 00000003            
CLI$K_INPSPEC  = 00000001            CLI$K_VERB_MOUN= 0000002B            CLI$V_CONCATINP= 00000001            
CLI$K_INPUT1   = 00000010            CLI$K_VERB_ON  = 00000022            CLI$V_DBGEXCP  = 00000010            
CLI$K_INPUT2   = 00000011            CLI$K_VERB_PATC= 0000002C            CLI$V_DBGTRU   = 00000001            
CLI$K_INPUT3   = 00000012            CLI$K_VERB_PRIN= 00000023            CLI$V_DEBUG    = 00000000            
CLI$K_INPUT4   = 00000013            CLI$K_VERB_PURG= 00000031            CLI$V_DUMMY    = 00000001            
CLI$K_KEYVAL   = 00000043            CLI$K_VERB_RENA= 00000032            CLI$V_EXPNAM   = 00000002            
CLI$K_KEYWORD  = 00000042            CLI$K_VERB_REPL= 0000002D            CLI$V_INDIRECT = 00000004            
CLI$K_NUMERVAL = 00000040            CLI$K_VERB_REQU= 00000036            CLI$V_KEYVALU  = 00000001            
CLI$K_OUTPUT1  = 00000020            CLI$K_VERB_RUN = 00000024            CLI$V_LASTVAL  = 00000000            
CLI$K_OUTPUT2  = 00000021            CLI$K_VERB_SET = 00000025            CLI$V_MOREINP  = 00000002            
CLI$K_OUTPUT3  = 00000022            CLI$K_VERB_SHOW= 00000026            CLI$V_MOREVALS = 00000000            
CLI$K_OUTPUT4  = 00000023            CLI$K_VERB_SORT= 00000035            CLI$V_PARMDEF  = 00000003            
CLI$K_OUTSPEC  = 00000002            CLI$K_VERB_STAR= 00000027            CLI$V_PARMPRS  = 00000000            
CLI$K_PARDONE  = 00000003            CLI$K_VERB_STOP= 00000028            CLI$V_PARMREQ  = 00000000            
CLI$K_QDBITS     00000014            CLI$K_VERB_SUBM= 00000029            CLI$V_PRITYP   = 00000004            
CLI$K_QUALDEF    00000014            CLI$K_VERB_SYNC= 00000037            CLI$V_QDEXPA   = 00000002            
CLI$K_REQDESC    0000001C            CLI$K_VERB_TYPE= 0000002A            CLI$V_QDUSRV   = 00000001            
CLI$K_UTILOPR  = 00000000            CLI$K_VERB_UNLO= 0000002E            CLI$V_QUALEXP  = 00000001            
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  27
SYMBOL TABLE                                                                                                                    (13)

CLI$V_QUALTRU  = 00000000            CLI$_NULFIL    = 000380E0            MCR_M_DEFALT   = 00000008            
CLI$V_SUBTYP   = 00000000            CLI$_NUMBER    = 000380E8            MCR_M_DELINP   = 00000080            
CLI$V_TRMVRBLV = 00000008            CLI$_ONCOMD    = 000380F0            MCR_M_DOLLARS  = 00000100            
CLI$V_VERIFY   = 00000002            CLI$_ONERR     = 000380F8            MCR_M_ESCAPE   = 00000004            
CLI$V_VFYINP   = 00000005            CLI$_ONEVAL    = 00038158            MCR_M_ESCTRM   = 00000200            
CLI$W_QDVALSIZ   00000004            CLI$_ONLEVL    = 00038100            MCR_M_GLOBAL   = 00000400            
CLI$W_RQSIZE     00000008            CLI$_ONOVF     = 00038108            MCR_M_LOWER    = 00000800            
CLI$W_SERVCOD    00000001            CLI$_OVRFLW    = 00038160            MCR_M_OPNINP   = 00000040            
CLI$_ABFNAM    = 000381B8            CLI$_PARMDEL   = 00038110            MCR_M_RAD50    = 00000001            
CLI$_ABKEYW    = 00038000            CLI$_PROC_ID   = 0003FFF1            MCR_M_STRSUB   = 00001000            
CLI$_ABVERB    = 00038008            CLI$_QUEJOBCRE = 0003FFF9            MCR_V_ALPHAN   = 00000001            
CLI$_BADRET    = 00038198            CLI$_REQPRMABS = 00038812            MCR_V_DEFALT   = 00000003            
CLI$_BADTEXT   = 000381B0            CLI$_RSLOVF    = 00038118            MCR_V_DELINP   = 00000007            
CLI$_BUFOVF    = 00038018            CLI$_SKPDAT    = 00038120            MCR_V_DOLLARS  = 00000008            
CLI$_COMPLX    = 00038020            CLI$_SPARE0    = 00038010            MCR_V_ESCAPE   = 00000002            
CLI$_CONFQUAL  = 00038802            CLI$_SPARE1    = 00038058            MCR_V_ESCTRM   = 00000009            
CLI$_CREQUEJOB = 0003884A            CLI$_STKOVF    = 00038128            MCR_V_FORCMD   = 0000000E            
CLI$_DEFOVF    = 00038028            CLI$_SUBMITERR = 00038852            MCR_V_GLOBAL   = 0000000A            
CLI$_DEVALSPL  = 0003885A            CLI$_SYMDEL    = 00038130            MCR_V_LOWER    = 0000000B            
CLI$_DEVNOTFOR = 0003887A            CLI$_SYMOVF    = 00038138            MCR_V_OPNINP   = 00000006            
CLI$_DEVNOTSPL = 00038862            CLI$_UNDFIL    = 00038188            MCR_V_RAD50    = 00000000            
CLI$_DIRECT    = 00038030            CLI$_UNDSYM    = 00038140            MCR_V_STRSUB   = 0000000C            
CLI$_EXPSYN    = 00038038            CLI$_UNPROPARM = 00038170            MSGBUFSIZ      = 00000084            
CLI$_FILOPN    = 00038190            CLI$_UNPROQUAL = 00038168            OPI_K_MCRUTLIST= FFFFFFFF            
CLI$_ILLVAL    = 0003883A            CLI$_USGOTO    = 00038148            OUTPUT           00000253 R     03   
CLI$_IMCHNG    = 00038040            CLI$_VALCNVERR = 00038832            OUTQUA           00000278 R     03   
CLI$_IMGFNF    = 00038872            CLI$_VALREQ    = 00038150            PLM_B_FSTDESC    00000001            
CLI$_INSFPRM   = 00038048            CMDBUFSIZ      = 000001FC            PLM_B_LSTDESC    00000002            
CLI$_INVKEY    = 00038178            CMPPRM           0000009F R     03   PLM_B_NXTDESC    00000000            
CLI$_INVQUAL   = 0003880A            CTL$AG_CLIDATA   ********   X   03   PLM_B_TRMDESC    00000003            
CLI$_INVQUALNUM= 0003881A            GBL...         = 00000000            PLM_K_SIZE       00000004            
CLI$_INVREQTYP = 00038822            INPBUFSIZ      = 00000084            PRC_B_DEFRADIX   00000092            
CLI$_INVRSP    = 00038180            INPUT            00000332 R     03   PRC_B_EXMDEPMOD  00000091            
CLI$_INVUIC    = 000381A8            INTERROR       = 0000001F            PRC_B_EXMDEPWID  00000090            
CLI$_IVCHAR    = 00038050            MCR$CLRSETLST    00000471 RG    03   PRC_K_DEC      = 00000001            
CLI$_IVDEVTYPE = 0003886A            MCR$CNVNUMDEC    ********   X   03   PRC_K_HEX      = 00000000            
CLI$_IVFNAM    = 000381C0            MCR$EXTNXTDESC   ********   X   03   PRC_K_LENGTH     000000A0            
CLI$_IVKEYW    = 00038060            MCR$EXTRSLDESC   ********   X   03   PRC_K_OCT      = 00000002            
CLI$_IVOPER    = 00038068            MCR$FNDCMDQUAL   ********   X   03   PRC_L_CLIWRK0    0000005C            
CLI$_IVPROT    = 00038070            MCR$GETCMD       0000057E RG    03   PRC_L_CLIWRK1    00000060            
CLI$_IVQLOC    = 00038078            MCR$GETEXTDESC   ********   X   03   PRC_L_CLIWRK2    00000064            
CLI$_IVSYMB    = 00038080            MCR$GETMCRWRK    ********   X   03   PRC_L_CLIWRK3    00000068            
CLI$_IVVALU    = 00038088            MCR$GETOPT       00000557 R     03   PRC_L_CLIWRK4    0000006C            
CLI$_IVVERB    = 00038090            MCR$GETPARM      ********   X   03   PRC_L_ERRRAB     00000010            
CLI$_MAXPARM   = 00038098            MCR$GETPARMQUAL  ********   X   03   PRC_L_EXMDEPADR  0000008C            
CLI$_MULKEY    = 000381A0            MCR$GETQUALDESC  ********   X   03   PRC_L_EXTARG     00000078            
CLI$_NOATFIL   = 000380A0            MCR$HANDLQUAL    000004E9 RG    03   PRC_L_EXTBLK     00000070            
CLI$_NOCCAT    = 000380A8            MCR$PROCMDQUAL   0000049B RG    03   PRC_L_EXTCOD     00000080            
CLI$_NOCOMD    = 000380B0            MCR$RPINIT       ********   X   03   PRC_L_EXTHND     00000074            
CLI$_NOKEYW    = 000380B8            MCR$SETDEFVAL    00000545 R     03   PRC_L_EXTPRM     0000007C            
CLI$_NOLIST    = 000380C0            MCR$SETDESCADR   ********   X   03   PRC_L_INDEPTH    00000048            
CLI$_NOOPTPRS  = 00038842            MCR$SETQUALVAL   0000050F R     03   PRC_L_INDFAB     0000001C            
CLI$_NOQUAL    = 000380C8            MCR$SETSETLST    00000468 RG    03   PRC_L_INDINPRAB  00000014            
CLI$_NORMAL    = 00030001            MCR$TSTSETLST    00000449 RG    03   PRC_L_INDOUTRAB  00000018            
CLI$_NOTNEG    = 000380D8            MCR$UTLSERV      00000000 RG    03   PRC_L_INPRAB     00000008            
CLI$_NOVALU    = 000380D0            MCR$VALCNV       00000394 R     03   PRC_L_LSTSTATUS  00000094            
CLI$_NOVALUE   = 0003882A            MCR_M_ALPHAN   = 00000002            PRC_L_ONCTLY     0000009C            
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  28
SYMBOL TABLE                                                                                                                    (13)

PRC_L_ONERROR    00000058            PRO_M_REQ      = 00000010            QUA_S_MINPARM  = 00000004            
PRC_L_OUTRAB     0000000C            PRO_M_STRING   = 00000020            QUA_V_BATDEF   = 00000008            
PRC_L_PROCUIC    00000098            PRO_V_CONCAT   = 00000000            QUA_V_CHNGLIST = 00000000            
PRC_L_SAVAP      00000000            PRO_V_IMPCAT   = 00000001            QUA_V_DEFTRUE  = 00000007            
PRC_L_SAVFP      00000004            PRO_V_LIST     = 00000002            QUA_V_FILE     = 00000002            
PRC_L_SEVERITY   00000040            PRO_V_OPTION   = 00000003            QUA_V_IMAGE    = 0000000A            
PRC_L_STACKLM    00000088            PRO_V_REQ      = 00000004            QUA_V_INTDEF   = 00000009            
PRC_L_STACKPT    00000084            PRO_V_STRING   = 00000005            QUA_V_KEYVAL   = 0000000E            
PRC_L_STATUS     00000044            PTR_K_BLANK    = 00000001            QUA_V_LOCALKEY = 00000001            
PRC_L_SYMBOL     0000004C            PTR_K_COLON    = 00000002            QUA_V_MAXPARM  = 00000004            
PRC_M_CNTRLY   = 00000002            PTR_K_COMDQUAL = 00000000            QUA_V_MINPARM  = 00000000            
PRC_M_DBGQUAL  = 00000200            PTR_K_COMMA    = 00000005            QUA_V_NEG      = 00000006            
PRC_M_DBGTRUE  = 00000400            PTR_K_ENDLINE  = 00000004            QUA_V_ONEVAL   = 0000000D            
PRC_M_DISABL   = 00000004            PTR_K_LPAREN   = 00000007            QUA_V_OUTPUT   = 0000000B            
PRC_M_EXIT     = 00000008            PTR_K_PARAMETR = 00000003            QUA_V_PARM     = 00000004            
PRC_M_GOEOF    = 00000001            PTR_K_PARMQUAL = 00000001            QUA_V_VAL      = 00000005            
PRC_M_GOTO     = 00000010            PTR_K_PLUS     = 00000004            QUA_V_VALREQ   = 0000000C            
PRC_M_HANGUP   = 00001000            PTR_K_QUALVALU = 00000002            QUA_V_VERB     = 00000003            
PRC_M_IND      = 00000020            PTR_K_RPAREN   = 00000006            QUA_W_FLAGS      00000004            
PRC_M_MODE     = 00000040            PTR_K_SLASH    = 00000003            QUA_W_QUALIST    00000007            
PRC_M_NOCTLY   = 00004000            PTR_L_DESCR      00000000            RET0             00000072 R     03   
PRC_M_PAUSE    = 00002000            PTR_S_FLAGS    = 00000004            RET1             00000393 R     03   
PRC_M_USRDET   = 00000100            PTR_S_OFFSET   = 0000000C            RET2             00000448 R     03   
PRC_M_VERIFY   = 00000080            PTR_S_TERM     = 00000004            RPW_AG_BITS      00000020            
PRC_M_YLEVEL   = 00000800            PTR_S_TYPE     = 00000004            RPW_AG_PRMLIM    00000040            
PRC_Q_ALLOCREG   00000020            PTR_S_VALUE    = 00000008            RPW_B_LSTDESC    00000009            
PRC_Q_GLOBAL     00000028            PTR_V_EQUAL    = 00000000            RPW_B_STRPARM    00000008            
PRC_Q_LABEL      00000030            PTR_V_FLAGS    = 00000014            RPW_K_HDRSIZ     00000040            
PRC_Q_LOCAL      00000038            PTR_V_NEGATE   = 00000000            RPW_L_MCRWRK     00000004            
PRC_V_CNTRLY   = 00000001            PTR_V_OFFSET   = 00000008            RPW_L_USERCTX    00000000            
PRC_V_DBGQUAL  = 00000009            PTR_V_TERM     = 00000018            RQBITS         = 0000000C            
PRC_V_DBGTRUE  = 0000000A            PTR_V_TYPE     = 0000001C            RQDESC         = 00000004            
PRC_V_DISABL   = 00000002            PTR_V_VALUE    = 00000000            RQWORK         = 00000008            
PRC_V_EXIT     = 00000003            QUALACT          000001E6 R     03   RSB0             0000023F R     03   
PRC_V_GOEOF    = 00000000            QUA_B_CODE       00000001            RSLBUFSIZ      = 00000180            
PRC_V_GOTO     = 00000004            QUA_B_DEFVAL     00000003            RSLTPRS          00000073 R     03   
PRC_V_HANGUP   = 0000000C            QUA_B_IMAGE      00000006            SCANQUAL         0000021C R     03   
PRC_V_IND      = 00000005            QUA_B_INDEX      00000002            SETPRM           00000346 R     03   
PRC_V_MODE     = 00000006            QUA_B_OFFSET     00000000            SETQUAL          00000132 R     03   
PRC_V_NOCTLY   = 0000000E            QUA_B_PARMCNT    00000009            WRK_AB_BUFFER    FFFFFD44            
PRC_V_PAUSE    = 0000000D            QUA_G_CHNGLST    00000007            WRK_AG_RESULT    FFFFFBC0            
PRC_V_USRDET   = 00000008            QUA_M_BATDEF   = 00000100            WRK_B_CMDFLG     FFFFFFC9            
PRC_V_VERIFY   = 00000007            QUA_M_CHNGLIST = 00000001            WRK_B_CURADX     FFFFFFCA            
PRC_V_YLEVEL   = 0000000B            QUA_M_DEFTRUE  = 00000080            WRK_B_PARMCNT    FFFFFFCB            
PRC_W_CLIFLAG    00000052            QUA_M_FILE     = 00000004            WRK_B_VERBTYP    FFFFFFC8            
PRC_W_ERRIFI     00000052            QUA_M_IMAGE    = 00000400            WRK_K_LENGTH     FFFFFBC0            
PRC_W_FLAGS      00000054            QUA_M_INTDEF   = 00000200            WRK_L_CHARPTR    FFFFFFFC            
PRC_W_INPCHAN    00000050            QUA_M_KEYVAL   = 00004000            WRK_L_IMAGE      FFFFFFEC            
PRC_W_ONLEVEL    00000056            QUA_M_LOCALKEY = 00000002            WRK_L_MAXPARM    FFFFFFCC            
PROCIO           00000240 R     03   QUA_M_NEG      = 00000040            WRK_L_MINPARM    FFFFFFD0            
PRO_B_FLAGS      00000001            QUA_M_ONEVAL   = 00002000            WRK_L_PAROUT     FFFFFFF0            
PRO_B_PROMPT     00000000            QUA_M_OUTPUT   = 00000800            WRK_L_PROMPT     FFFFFFF4            
PRO_K_LENGTH     00000002            QUA_M_PARM     = 00000010            WRK_L_QUABLK     FFFFFFE8            
PRO_M_CONCAT   = 00000001            QUA_M_VAL      = 00000020            WRK_L_RSLNXT     FFFFFD40            
PRO_M_IMPCAT   = 00000002            QUA_M_VALREQ   = 00001000            WRK_L_SAVAP      FFFFFFD8            
PRO_M_LIST     = 00000004            QUA_M_VERB     = 00000008            WRK_L_SAVFP      FFFFFFDC            
PRO_M_OPTION   = 00000008            QUA_S_MAXPARM  = 00000004            WRK_L_SAVSP      FFFFFFD4            
MCRRESULT       RESULT PARSE MAIN ROUTINE                        22-AUG-1978 01:49:25   VAX-11 MACRO X0.3-11               Page  29
SYMBOL TABLE                                                                                                                    (13)

WRK_M_ALL      = 00000001            
WRK_M_ASK      = 00000100            
WRK_M_COMMAND  = 00000002            
WRK_M_CONTINU  = 00000400            
WRK_M_EQUAL    = 00000008            
WRK_M_IMCHNG   = 00000004            
WRK_M_QUAL     = 00000010            
WRK_M_QUOTE    = 00000020            
WRK_M_STAR     = 00000040            
WRK_M_TRAILSPC = 00000200            
WRK_M_VERB     = 00000080            
WRK_Q_IOSB       FFFFFFE0            
WRK_V_ALL      = 00000000            
WRK_V_ASK      = 00000008            
WRK_V_COMMAND  = 00000001            
WRK_V_CONTINU  = 0000000A            
WRK_V_EQUAL    = 00000003            
WRK_V_IMCHNG   = 00000002            
WRK_V_QUAL     = 00000004            
WRK_V_QUOTE    = 00000005            
WRK_V_STAR     = 00000006            
WRK_V_TRAILSPC = 00000009            
WRK_V_VERB     = 00000007            
WRK_W_FLAGS      FFFFFFFA            
WRK_W_LOCFLG     FFFFFFF8            
_$$_           = 00000055            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFC      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
MCR$ZCODE        000005C0      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
8792. BYTES LEFT IN FREE MEMORY POOL.
382. BYTES OF RECLAIMED MEMORY.
OBJ$:MCRRESULT,LIS$:MCRRESULT/-SP=EXECML$/ML,LIB$:MCR/ML,SRC$:MCRRESULT
38 MLB DIR RDS - 797 GETS TO DEFINE 37 MACROS. 71 INTER. FILE WRITES. 
