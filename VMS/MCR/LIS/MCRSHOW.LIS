MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)     102  SHOW DEFAULT
   (1)     142  SHOW LOGICAL NAME EQUIVALENCES
   (1)     208  SHOW PROTECTION
   (1)     255  SHOW SYMBOL TABLE ENTRIES
   (1)     316  DISPLAY LIST
   (1)     339  DISPLAY ITEM
   (1)     374  SHOW STATUS
   (1)     462  SHOW DAYTIME
MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	MCRSHOW - SHOW INFORMATION MCR COMMAND EXECUTION
                                     0000     2 	.IDENT	/01/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; D. N. CUTLER 15-APR-77
                                     0000    24 ;
                                     0000    25 ; MODIFIED BY B. WALTHER 3-DEC-1977
                                     0000    26 ;
                                     0000    27 ; SHOW INFORMATION MCR COMMAND EXECUTION
                                     0000    28 ;
                                     0000    29 ;	SHOW DAYTIME
                                     0000    30 ;	SHOW DEFAULT DIRECTORY AND DEVICE
                                     0000    31 ;	SHOW LOGICAL NAME EQUIVALENCES
                                     0000    32 ;	SHOW PROTECTION
                                     0000    33 ;	SHOW STATUS
                                     0000    34 ;
                                     0000    35 ; MACRO LIBRARY CALLS
                                     0000    36 ;
                                     0000    37  
                                     0000    38 	$CLIDEFQUALSHOW			;DEFINE SHOW QUALIFIER NUMBERS
                                     0000    39 	DEFCMDWRK			;DEFINE WORK AREA OFFSETS
                                     0000    40 	DEFERRCOD			;DEFINE ERROR/STATUS VALUES
                                     0000    41 	DEFPTRDSC			;DEFINE RESULT PARSE DESCRIPTOR FORMAT
                                     0000    42 	DEFSYMTBL			;DEFINE SYMBOL ENTRY OFFSETS
                                     0000    43 	$LOGDEF				;DEFINE LOG OFFSETS
                                     0000    44 	$JPIDEF				;GET JOB PROCESS INFORMATION DEFINITIONS
                                     0000    45  
                                     0000    46 ;
                                     0000    47 ; LOCAL DATA
                                     0000    48 ;
                                     0000    49  
                                 00000000    50 	.PSECT	MCR$ZCODE,BYTE,RD,NOWRT
                                     0000    51 ACCESS:					;ALLOWED ACCESS DESIGNATORS
                        44 45 57 52  0000    52 	.ASCII	/RWED/			;
                                     0004    53 FORMATMSG:				;TABLE DISPLAY CONTROL STRING
20 53 41 21 20 3D 20 53 41 21 20 20  0004    54 	.ASCII	/  !AS = !AS   !AC/	;
                     43 41 21 20 20  0010       
                                     0015    55 FORMATEND:				;
                                     0015    56 NOACCESS:				;NO ACCESS ALLOWED DESIGNATOR
MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page   2
01                                                                                                                               (1)

         53 53 45 43 43 41 20 4F 4E  0015    57 	.ASCII	/NO ACCESS/		;
                                     001E    58 NOACCESSEND:				;
                                     001E    59 PROTECTMSG:				;DEFAULT PROTECTION CONTROL STRING
44 41 21 3D 4D 45 54 53 59 53 20 20  001E    60 	.ASCII	/  SYSTEM=!AD, OWNER=!AD, GROUP=!AD, WORLD=!AD/ ;
2C 44 41 21 3D 52 45 4E 57 4F 20 2C  002A       
20 2C 44 41 21 3D 50 55 4F 52 47 20  0036       
         44 41 21 3D 44 4C 52 4F 57  0042       
                                     004B    61 PROTECTEND:				;
                                     004B    62 STATUS_MSG:				;
                                     004B    63 	.ASCII	-			;
20 6E 6F 20 73 75 74 61 74 53 20 20  004B    64 	&  Status on  !%D!_ Elapsed CPU :!%D&;
73 70 61 6C 45 20 5F 21 44 25 21 20  0057       
   44 25 21 3A 20 55 50 43 20 64 65  0063       
                                     006E    65 	.ASCII	-			;
2F 49 20 2E 66 66 75 42 20 20 2F 21  006E    66 	&!/  Buff. I/O :  !5UW!_Cur. ws. :   !5UW!_Open files :     !5UW&;
43 5F 21 57 55 35 21 20 20 3A 20 4F  007A       
20 20 20 3A 20 2E 73 77 20 2E 72 75  0086       
66 20 6E 65 70 4F 5F 21 57 55 35 21  0092       
21 20 20 20 20 20 3A 20 73 65 6C 69  009E       
                           57 55 35  00AA       
                                     00AD    67 	.ASCII	-			;
4F 2F 49 20 2E 72 69 44 20 20 2F 21  00AD    68 	&!/  Dir. I/O :   !5UW!_Phys. Mem. : !5UW!_Page Faults :!9UL&;
50 5F 21 57 55 35 21 20 20 20 3A 20  00B9       
20 3A 20 2E 6D 65 4D 20 2E 73 79 68  00C5       
46 20 65 67 61 50 5F 21 57 55 35 21  00D1       
   4C 55 39 21 3A 20 73 74 6C 75 61  00DD       
                                     00E8    69 STATUS_END:				;
                                     00E8    70 LOG_NAME_TABLE:				;OFFSETS TO TEXT STRINGS
                                 1F' 00E8    71 	.BYTE	TEXT_T_NULLSTR-LOG_NAME_TABLE;
                                 04' 00E9    72 	.BYTE	TEXT_T_SYSTEM-LOG_NAME_TABLE;
                                 0D' 00EA    73 	.BYTE	TEXT_T_GROUP-LOG_NAME_TABLE;
                                 15' 00EB    74 	.BYTE	TEXT_T_PROCESS-LOG_NAME_TABLE;
                                     00EC    75 TEXT_T_SYSTEM:				;
         29 6D 65 74 73 79 73 28 00' 00EC    76 	.ASCIC	/(system)/		;
                                 08  00EC       
                                     00F5    77 TEXT_T_GROUP:				;
            29 70 75 6F 72 67 28 00' 00F5    78 	.ASCIC	/(group)/		;
                                 07  00F5       
                                     00FD    79 TEXT_T_PROCESS:				;
      29 73 73 65 63 6F 72 70 28 00' 00FD    80 	.ASCIC	/(process)/		;
                                 09  00FD       
                                     0107    81 TEXT_T_NULLSTR:				;
                           00000000  0107    82 	.LONG	0			;NULL STRING
                                     010B    83 JPI_CODES:				;LIST OF JPI ITEM CODES
                           00000000  010B    84 FAO_CPUTIM=<.-JPI_CODES>*2		;FOR SHOW STATUS
                               0407  010B    85 	.WORD	JPI$_CPUTIM		;
                               040C  010D    86 	.WORD	JPI$_BUFIO		;
                           00000008  010F    87 FAO_WSSIZE=<.-JPI_CODES>*2		;
                               0411  010F    88 	.WORD	JPI$_WSSIZE		;
                           0000000C  0111    89 	FAO_FILLM=<.-JPI_CODES>*2	;
                               040F  0111    90 	.WORD	JPI$_FILLM		;
                               040B  0113    91 	.WORD	JPI$_DIRIO		;
                           00000014  0115    92 FAO_GPGCNT=<.-JPI_CODES>*2		;
                               030C  0115    93 	.WORD	JPI$_GPGCNT		;
                               040A  0117    94 	.WORD	JPI$_PAGEFLTS		;
                           0000001C  0119    95 FAO_FILCNT=<.-JPI_CODES>*2		;
                           0000001C  0119    96 FAO_Q_CPU=FAO_FILCNT			;USE THIS LOCATION TWICE
MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page   3
01                                                                                                                               (1)

                               0314  0119    97 	.WORD	JPI$_FILCNT		;
                           00000020  011B    98 FAO_PPGCNT=<.-JPI_CODES>*2		;
                               030D  011B    99 	.WORD	JPI$_PPGCNT		;
                           00000009  011D   100 JPI_ARGS = <.-JPI_CODES>/2		;COMPUTE NUMBER OF JPI CODES
MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page   4
01              SHOW DEFAULT                                                                                                     (1)

                                     011D   102 	.SBTTL	SHOW DEFAULT
                                     011D   103 ;+
                                     011D   104 ; MCR$SHOWDEF - SHOW DEFAULT DEVICE AND DIRECTORY
                                     011D   105 ;
                                     011D   106 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE SHOW 
                                     011D   107 ; DEFAULT DEVICE AND DIRECTORY MCR COMMAND.
                                     011D   108 ;
                                     011D   109 ; INPUTS:
                                     011D   110 ;
                                     011D   111 ;	R8 = ADDRESS OF SCRATCH BUFFER DESCRIPTOR.
                                     011D   112 ;	R9 = ADDRESS OF SCRATCH STACK.
                                     011D   113 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     011D   114 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     011D   115 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     011D   116 ;
                                     011D   117 ; OUTPUTS:
                                     011D   118 ;
                                     011D   119 ;	THE CURRENT DEFAULT DIRECTORY IS WRITTEN TO THE OUTPUT STREAM.
                                     011D   120 ;-
                                     011D   121  
                                     011D   122 MCR$SHOWDEF::				;SHOW DEVICE AND DIRECTORY INFORMATION
         04 A8            02     C0  011D   123 	ADDL	#2,4(R8)		;MAKE ROOM FOR LEADING SPACES
            51       0000'CF     9E  0121   124 	MOVAB	W^MCR$T_DSKNAM,R1	;ADDRESS OF DISK NAME COUNTED STRING
            50            81     9A  0126   125 	MOVZBL	(R1)+,R0		;GET QUAD WORD DESCRIPTOR
                          03     BB  0129   126 	PUSHR	#^M<R0,R1>		;PUT QUAD WORD DESCRIPTOR IN STACK
                          7E     7C  012B   127 	CLRQ	-(SP)			;FIRST TWO ARGS ARE ZERO
                          7E     D4  012D   128 	CLRL	-(SP)			;ALSO THIRD IS ZERO
                          68     7F  012F   129 	PUSHAQ	(R8)			;ADDRESS OF BUFFER DESCRIPTOR
                          68     3F  0131   130 	PUSHAW	(R8)			;PLACE TO RESTORE LENGTH
                       14 AE     7F  0133   131 	PUSHAQ	20(SP)			;ADDRESS OF DESCRIPTOR IN STACK
   00000000'9F            08     FB  0136   132 	CALLS	#8,@#SYS$TRNLOG		;TRANSLATE AND CLEAR THE STACK
            68            88     C1  013D   133 	ADDL3	(R8)+,(R8),R2		; FIND FIRST BYTE AFTER DEVICE NAME
                          52         0140       
            51   00000000'9F     9E  0141   134 	MOVAB	@#PIO$GT_DDSTRING,R1	;GET ADDRESS OF DEFAULT DIRECTORY STRING
            50            81     9A  0148   135 	MOVZBL	(R1)+,R0		;GET LENGTH OF DEFAULT DIRECTORY STRING
            61            50     28  014B   136 	MOVC	R0,(R1),(R2)		;INSERT DEFAULT DIRECTORY STRING
                          62         014E       
            52            68     D0  014F   137 	MOVL	(R8),R2			;POINT AT START OF DEVICE NAME
            72       2020 8F     B0  0152   138 	MOVW	#^A/  /,-(R2)		;INSERT LEADER FOR NEATNESS
            53            52     C3  0157   139 	SUBL3	R2,R3,R1		;FIND LENGTH OF STRING
                          51         015A       
                          023E   31  015B   140 	BRW	EXTMSG			;
MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page   5
01              SHOW LOGICAL NAME EQUIVALENCES                                                                                   (1)

                                     015E   142 	.SBTTL	SHOW LOGICAL NAME EQUIVALENCES
                                     015E   143 ;+
                                     015E   144 ; MCR$SHOWLOG  - SHOW LOGICAL NAME EQUIVALENCES
                                     015E   145 ;;
                                     015E   146 ; MCR$SHOWTRAN - SHOW LOGICAL NAME TRANSLATION
                                     015E   147 ;
                                     015E   148 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE SHOW LOGICAL
                                     015E   149 ; NAME EQUIVALENCES MCR COMMAND.
                                     015E   150 ;
                                     015E   151 ; INPUTS:
                                     015E   152 ;
                                     015E   153 ;	R8 = ADDRESS OF SCRATCH BUFFER DESCRIPTOR.
                                     015E   154 ;	R9 = ADDRESS OF SCRATCH STACK.
                                     015E   155 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     015E   156 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     015E   157 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     015E   158 ;
                                     015E   159 ; OUTPUTS:
                                     015E   160 ;
                                     015E   161 ;	THE SPECIFIED LOGICAL NAME EQUIVALENCE OR ALL LOGICAL NAME EQUIVALENCES
                                     015E   162 ;	FROM THE PROCESS LOGICAL NAME TABLE ARE WRITTEN TO THE OUTPUT STREAM.
                                     015E   163 ;-
                                     015E   164  
                                     015E   165 MCR$SHOWTRAN::				;SHOW THE TRANSLATION FOR A NAME
                          8A     D5  015E   166 	TSTL	(R10)+			;SKIP OPTION NAME
                                     0160   167 	GETDVAL				;SEPARATE DESCRIPTOR
                                     0163   168 	COMPSTRING			;REMOVE QUOTES IF THERE
                          50     D4  0166   169 	CLRL	R0			;TRANSLATE FROM ANY TABLE
                          22     11  0168   170 	BRB	SHWNAM			;PRINT THE RESULT
                                     016A   171  
                                     016A   172 MCR$SHOWLOG::				;SHOW LOGICAL NAME EQUIVALENCES
                          8A     D5  016A   173 	TSTL	(R10)+			;SKIP PAST OPTION DESCRIPTOR
                                     016C   174 10$:	GETDVAL				;GET NEXT DESCRIPTOR VALUE
            55            03     91  016F   175 	CMPB	#PTR_K_PARAMETR,R5	;PARAMETER?
                          12     13  0172   176 	BEQL	20$			;IF EQL YES
            51            04     91  0174   177 	CMPB	#CLI$K_SHLG_ALL,R1	;'ALL' QUALIFIER?
                          F3     12  0177   178 	BNEQ	10$			;IF NEQ NO
                                     0179   179  
                                     0179   180 ;
                                     0179   181 ; DISPLAY ALL PROCESS LOGICAL NAME EQUIVALENCES
                                     0179   182 ;
                                     0179   183  
            5A   00000000'9F     9E  0179   184 	MOVAB	@#CTL$GL_PLTFL,R10	;GET ADDRESS OF PROCESS NAME TABLE LISTHEAD
            57            14     9A  0180   185 	MOVZBL	#LOG$C_LENGTH,R7	;SET OFFSET TO LOGICAL NAME
                          00F0   31  0183   186 	BRW	DISPLIST		;DISPLAY LIST
                                     0186   187  
                                     0186   188 ;
                                     0186   189 ; DISPLAY SPECIFIED PROCESS LOGICAL NAME EQUIVALENCE
                                     0186   190 ;
                                     0186   191  
                                     0186   192 20$:	COMPSTRING			;COMPRESS QUOTED STRING
            50            03     90  0189   193 	MOVB	#3,R0			;ONLY LOOK IN USER TABLE
                                     018C   194 SHWNAM:
                          79     D4  018C   195 	CLRL	-(R9)			;RESERVE LOCATION FOR RESULTANT TABLE
            79            51     7D  018E   196 	MOVQ	R1,-(R9)		;SAVE STRING DESCRIPTOR
         04 A8            3C     C1  0191   197 	ADDL3	#60,4(R8),-(R9)		;BUILD EQUIVALENCE NAME DESCRIPTOR
                          79         0195       
MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page   6
01              SHOW LOGICAL NAME EQUIVALENCES                                                                                   (1)

            79            3F     9A  0196   198 	MOVZBL	#LOG$C_NAMLENGTH-1,-(R9) ;
                                     0199   199 	$TRNLOG_S 8(R9),(R9),(R9),16(R9),,R0;TRANSLATE LOGICAL NAME IN SPECIFIED TABLE
   00000000'8F            50     D1  01AE   200 	CMPL	R0,#SS$_NORMAL		;TEST FOR SUCCESSFUL TRANSLATION
                          05     13  01B5   201 	BEQLU	10$			;BRANCH IF SUCCESS
                          69     B4  01B7   202 	CLRW	(R9)			;ELSE CLEAR BYTE COUNT OF RESULTANT STRING
                          00E6   31  01B9   203 	BRW	DISPITEM		;AND GO DISPLAY ITEM
            53         10 A9     9A  01BC   204 10$:	MOVZBL	16(R9),R3		;GET RESULTANT TABLE
                          53     D6  01C0   205 	INCL	R3			;INDEX INTO TEXT TABLE
                          00DF   31  01C2   206 	BRW	DISPTRANS		;DISPLAY ITEM
MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page   7
01              SHOW PROTECTION                                                                                                  (1)

                                     01C5   208 	.SBTTL	SHOW PROTECTION
                                     01C5   209 ;+
                                     01C5   210 ; MCR$SHOWPROT - SHOW PROTECTION
                                     01C5   211 ;
                                     01C5   212 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE SHOW PROTECTION
                                     01C5   213 ; MCR COMMAND.
                                     01C5   214 ;
                                     01C5   215 ; INPUTS:
                                     01C5   216 ;
                                     01C5   217 ;	R8 = ADDRESS OF SCRATCH BUFFER DESCRIPTOR.
                                     01C5   218 ;	R9 = ADDRESS OF SCRATCH STACK.
                                     01C5   219 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     01C5   220 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     01C5   221 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     01C5   222 ;
                                     01C5   223 ; OUTPUTS:
                                     01C5   224 ;
                                     01C5   225 ;	THE CURRENT DEFAULT PROTECTION IS CONVERTED TO ASCII AND WRITTEN TO
                                     01C5   226 ;	THE OUTPUT STREAM.
                                     01C5   227 ;-
                                     01C5   228  
                                     01C5   229 MCR$SHOWPROT::				;SHOW PROTECTION INFORMATION
            50   00000000'9F     3C  01C5   230 	MOVZWL	@#PIO$GW_DFPROT,R0	;GET DEFAULT PROTECTION
            57            0C     9A  01CC   231 	MOVZBL	#12,R7			;SET OUTER LOOP INDEX
                          7E     D4  01CF   232 10$:	CLRL	-(SP)			;ALLOCATE SPACE FOR ACCESS DESIGNATORS
            79       FE40 CF     9E  01D1   233 	MOVAB	NOACCESS,-(R9)		;ASSUME NO ACCESS ALLOWED
            79            09     9A  01D6   234 	MOVZBL	#NOACCESSEND-NOACCESS,-(R9) ;
            04            57     EF  01D9   235 	EXTZV	R7,#4,R0,R1		;EXTRACT NEXT PROTECTION FIELD
            51            50         01DC       
            52            51     D2  01DE   236 	MCOML	R1,R2			;COMPLEMENT PROTECTION FIELD
            52            0F     D3  01E1   237 	BITL	#^XF,R2			;ALL ACCESS DENIED?
                          1A     13  01E4   238 	BEQL	40$			;IF EQL YES
                          56     D4  01E6   239 	CLRL	R6			;CLEAR INNER LOOP INDEX
         04 A9            6E     9E  01E8   240 	MOVAB	(SP),4(R9)		;SET ADDRESS OF ACCESS DESIGNATORS
                          69     D4  01EC   241 	CLRL	(R9)			;CLEAR COUNT OF ACCESS DESIGNATORS
            51            56     E0  01EE   242 20$:	BBS	R6,R1,30$		;IF SET, ACCESS DENIED
                          0A         01F1       
         00 B94E     FE09 CF46   90  01F2   243 	MOVB	ACCESS[R6],@(R9)[SP]	;INSERT ACCESS DESIGNATOR
                          69     D6  01FA   244 	INCL	(R9)			;INCREMENT COUNT OF ACCESS DESIGNATORS
            56            04     F2  01FC   245 30$:	AOBLSS	#4,R6,20$		;ANY MORE TO CHECK?
                          EE         01FF       
         FC 8F            00     9D  0200   246 40$:	ACBB	#0,#-4,R7,10$		;ANY MORE FIELDS TO CHECK?
            FFC8          57         0204       
                     FE13 CF     9F  0207   247 	PUSHAB	PROTECTMSG		;BUILD FORMAT CONTROL STRING DESCRIPTOR
                          2D     DD  020B   248 	PUSHL	#PROTECTEND-PROTECTMSG	;
            50            5E     D0  020D   249 	MOVL	SP,R0			;COPY ADDRESS OF CONTROL STRING DESCRIPTOR
                                     0210   250 	$FAOL_S	(R0),(R8),(R8),(R9)	;FORMAT PROTECTION MESSAGE
            51            68     7D  021F   251 	MOVQ	(R8),R1			;RETRIEVE OUTPUT MESSAGE PARAMETERS
            5E            18     C0  0222   252 	ADDL	#6*4,SP			;CLEAN STACK
                          0174   31  0225   253 	BRW	EXTMSG			;
MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page   8
01              SHOW SYMBOL TABLE ENTRIES                                                                                        (1)

                                     0228   255 	.SBTTL	SHOW SYMBOL TABLE ENTRIES
                                     0228   256 ;+
                                     0228   257 ; MCR$SHOWSYMBOL - SHOW SYMBOL TABLE ENTRIES
                                     0228   258 ;
                                     0228   259 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE SHOW SYMBOL
                                     0228   260 ; TABLE ENTRIES MCR COMMAND.
                                     0228   261 ;
                                     0228   262 ; INPUTS:
                                     0228   263 ;
                                     0228   264 ;	R8 = ADDRESS OF SCRATCH BUFFER DESCRIPTOR.
                                     0228   265 ;	R9 = ADDRESS OF SCRATCH STACK.
                                     0228   266 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     0228   267 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     0228   268 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     0228   269 ;
                                     0228   270 ; OUTPUTS:
                                     0228   271 ;
                                     0228   272 ;	THE SPECIFIED SYMBOL TABLE ENTRY OR ALL SYMBOL TABLE ENTRIES FROM
                                     0228   273 ;	EITHER THE LOCAL OR GLOBAL SYMBOL TABLE ARE WRITTEN TO THE OUTPUT
                                     0228   274 ;	STREAM.
                                     0228   275 ;-
                                     0228   276  
                                     0228   277 MCR$SHOWSYMBL::				;SHOW SYMBOL TABLE ENTRIES
                          8A     D5  0228   278 	TSTL	(R10)+			;SKIP PAST OPTION DESCRIPTOR
            57            10     9A  022A   279 10$:	MOVZBL	#PRC_Q_LOCAL-PRC_Q_GLOBAL,R7 ;SET OFFSET TO LOCAL SYMBOL TABLE
                                     022D   280 20$:	GETDVAL				;GET NEXT DESCRIPTOR VALUE
            55            03     91  0230   281 	CMPB	#PTR_K_PARAMETR,R5	;PARAMETER?
                          1D     13  0233   282 	BEQL	40$			;IF EQL YES
            55            04     91  0235   283 	CMPB	#PTR_K_ENDLINE,R5	;END OF LINE?
                          0E     13  0238   284 	BEQL	30$			;IF EQL YES
            51            03     91  023A   285 	CMPB	#CLI$K_SHSY_ALL,R1	;'ALL' QUALIFIER?
                          EE     13  023D   286 	BEQL	20$			;IF EQL YES
                          57     D4  023F   287 	CLRL	R7			;SET OFFSET TO GLOBAL SYMBOL TABLE
            51            01     91  0241   288 	CMPB	#CLI$K_SHSY_GLOB,R1	;'GLOBAL' QUALIFIER?
                          E7     13  0244   289 	BEQL	20$			;IF EQL YES
                          E2     11  0246   290 	BRB	10$			;
                                     0248   291  
                                     0248   292 ;
                                     0248   293 ; DISPLAY ALL SYMBOL ENTRIES
                                     0248   294 ;
                                     0248   295  
            5A         28 AB47   9E  0248   296 30$:	MOVAB	PRC_Q_GLOBAL(R11)[R7],R10 ;GET ADDRESS OF SYMBOL TABLE LISTHEAD
            57            0C     9A  024D   297 	MOVZBL	#SYM_T_SYMBOL,R7	;SET OFFSET TO SYMBOL NAME
                          24     11  0250   298 	BRB	DISPLIST		;DISPLAY LIST
                                     0252   299  
                                     0252   300 ;
                                     0252   301 ; DISPLAY SPECIFIED SYMBOL VALUE
                                     0252   302 ;
                                     0252   303  
                                     0252   304 40$:	COMPSTRING			;COMPRESS STRING AND BUILD DESCRIPTOR
            79            51     7D  0255   305 	MOVQ	R1,-(R9)		;SAVE SYMBOL ENTRY DESCRIPTOR
                          79     7C  0258   306 	CLRQ	-(R9)			;ASSUME SYMBOL NOT DEFINED
            50         28 AB47   9E  025A   307 	MOVAB	PRC_Q_GLOBAL(R11)[R7],R0 ;GET ADDRESS OF SYMBOL TABLE LISTHEAD
                                     025F   308 	SEARCHT				;SEARCH SPECIFIC SYMBOL TABLE
            3D            50     E9  0262   309 	BLBC	R0,DISPITEM		;IF LBC SEARCH FAILURE
            52         0C A3     9A  0265   310 	MOVZBL	SYM_T_SYMBOL(R3),R2	;GET LENGTH OF SYMBOL
            52         0D A342   9E  0269   311 	MOVAB	SYM_T_SYMBOL+1(R3)[R2],R2 ;GET ADDRESS OF VALUE LENGTH
MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page   9
01              SHOW SYMBOL TABLE ENTRIES                                                                                        (1)

            51            82     9A  026E   312 	MOVZBL	(R2)+,R1		;GET LENGTH OF VALUE
            69            51     7D  0271   313 	MOVQ	R1,(R9)			;SAVE VALUE DESCRIPTOR
                          2C     11  0274   314 	BRB	DISPITEM		;DISPLAY ITEM
MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page  10
01              DISPLAY LIST                                                                                                     (1)

                                     0276   316 	.SBTTL	DISPLAY LIST
                                     0276   317 ;
                                     0276   318 ; DISPLIST - DISPLAY LIST OF ENTRIES
                                     0276   319 ;
                                     0276   320 ; THIS ROUTINE DISPLAYS A LIST OF LOGICAL OR SYMBOL NAMES.
                                     0276   321 ;
                                     0276   322  
                                     0276   323 DISPLIST:				;DISPLAY LIST
            5C            5A     D0  0276   324 	MOVL	R10,AP			;COPY ADDRESS OF NAME TABLE LISTHEAD
            5A            6A     D0  0279   325 10$:	MOVL	(R10),R10		;GET ADDRESS OF NEXT ENTRY
            5C            5A     D1  027C   326 	CMPL	R10,AP			;END OF TABLE?
                          20     13  027F   327 	BEQL	20$			;IF EQL YES
            79         01 AA47   9E  0281   328 	MOVAB	1(R10)[R7],-(R9)	;BUILD NAME DESCRIPTOR
            79            6A47   9A  0286   329 	MOVZBL	(R10)[R7],-(R9)		;
         04 A9            69     C1  028A   330 	ADDL3	(R9),4(R9),-(R9)	;BUILD VALUE OR EQUIVALENCE NAME DESCRIPTOR
                          79         028E       
            79         00 B9     9A  028F   331 	MOVZBL	@(R9),-(R9)		;
                       04 A9     D6  0293   332 	INCL	4(R9)			;
                          0A     10  0296   333 	BSBB	DISPITEM		;FORMAT AND OUTPUT ENTRY
            59            18     C0  0298   334 	ADDL	#24,R9			;ADJUST SCRATCH STACK POINTER
            68         84 8F     9A  029B   335 	MOVZBL	#MSGBUFSIZ,(R8)		;RESET SCRATCH BUFFER DESCRIPTOR SIZE
                          D8     11  029F   336 	BRB	10$			;
                                 05  02A1   337 20$:	RSB				;
MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page  11
01              DISPLAY ITEM                                                                                                     (1)

                                     02A2   339 	.SBTTL	DISPLAY ITEM
                                     02A2   340 ;
                                     02A2   341 ; DISPITEM - DISPLAY ITEM
                                     02A2   342 ;
                                     02A2   343 ; THIS ROUTINE IS CALLED TO DISPLAY A LOGICAL OR SYMBOL NAME.
                                     02A2   344 ;
                                     02A2   345 ; DISPTRANS - DISPLAY TRANSLATION 
                                     02A2   346 ;
                                     02A2   347 ;  INPUT:  R3 = INDEX INTO LOGICAL NAME TABLE TEXT TABLE
                                     02A2   348 ;
                                     02A2   349  
                                     02A2   350 DISPITEM:				;DISPLAY ITEM
                          53     D4  02A2   351 	CLRL	R3			;MAKE SURE WE POINT TO NULL STRING
                                     02A4   352 DISPTRANS:
            54       FE40 CF     9E  02A4   353 	MOVAB	LOG_NAME_TABLE,R4	;GET ADDRESS OF TEXT TABLE
            53            54     C0  02A9   354 	ADDL2	R4,R3			;POINT TO CORRECT ENTRY
            53            63     9A  02AC   355 	MOVZBL	(R3),R3			;AND GET OFFSET TO TEXT
            53            54     C0  02AF   356 	ADDL2	R4,R3			;COMPUTE POINTER TO TEXT
            54            69     9E  02B2   357 	MOVAB	(R9),R4			;GET ADDRESS OF VALUE DESCRIPTOR
                          64     D5  02B5   358 	TSTL	(R4)			;ZERO LENGTH VALUE?
                          11     13  02B7   359 	BEQL	20$			;IF EQL YES
         04 B4            1B     91  02B9   360 	CMPB	#27,@4(R4)		;FIRST CHARACTER ESCAPE?
                          0B     12  02BD   361 	BNEQ	20$			;IF NEQ NO
            64            04     C2  02BF   362 	SUBL	#4,(R4)			;REDUCE LENGTH OF VALUE BY HEADER
                          02     18  02C2   363 	BGEQ	10$			;IF GEQ OKAY
                          64     D4  02C4   364 	CLRL	(R4)			;CLEAR VALUE LENGTH
         04 A4            04     C0  02C6   365 10$:	ADDL	#4,4(R4)		;POINT PAST VALUE HEADER
            55         08 A9     9E  02CA   366 20$:	MOVAB	8(R9),R5		;GET ADDRESS OF NAME DESCRIPTOR
            79       FD32 CF     9E  02CE   367 	MOVAB	FORMATMSG,-(R9)		;BUILD FORMAT CONTROL STRING DESCRIPTOR
            79            11     9A  02D3   368 	MOVZBL	#FORMATEND-FORMATMSG,-(R9) ;
                                     02D6   369 	$FAO_S	(R9),(R8),(R8),R5,R4,R3
                                     02E9   370 					;FORMAT OUTPUT MESSAGE
            51            68     7D  02E9   371 	MOVQ	(R8),R1			;GET OUTPUT MESSAGE PARAMETERS
                          00AD   31  02EC   372 	BRW	EXTMSG			;OUTPUT MESSAGE
MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page  12
01              SHOW STATUS                                                                                                      (1)

                                     02EF   374 	.SBTTL	SHOW STATUS
                                     02EF   375 ;+
                                     02EF   376 ;
                                     02EF   377 ; MCR$SHOWSTAT - SHOW STATUS
                                     02EF   378 ;
                                     02EF   379 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE SHOW STATUS
                                     02EF   380 ; MCR COMMAND.
                                     02EF   381 ;
                                     02EF   382 ; INPUTS:
                                     02EF   383 ;
                                     02EF   384 ;	R8 = ADDRESS OF SCRATCH BUFFER DESCRIPTOR.
                                     02EF   385 ;	R9 = ADDRESS OF SCRATCH STACK.
                                     02EF   386 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     02EF   387 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     02EF   388 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     02EF   389 ;
                                     02EF   390 ; OUTPUTS:
                                     02EF   391 ;
                                     02EF   392 ;	 VALUES CHARACTERIZING THE CURRENT PROCESS'S STATUS
                                     02EF   393 ;	ARE FORMATTED AND WRITTEN TO THE OUTPUT STREAM.
                                     02EF   394 ; SIDE EFFECTS:
                                     02EF   395 ;
                                     02EF   396 ;	THIS ROUTINE IS USING THE COMMAND BUFFER INSTEAD OF THE SCRATCH BUFFER
                                     02EF   397 ;	(THE LATTER IS USED AS SCRATCH STACK)
                                     02EF   398 ;-
                                     02EF   399  
                                     02EF   400 MCR$SHOWSTAT::
                                     02EF   401 
                                     02EF   402 ;
                                     02EF   403 ; BUILD DESCRIPTOR TO COMMAND BUFFER
                                     02EF   404 ;
                                     02EF   405 
                          58     DD  02EF   406 	PUSHL	R8			;SAVE DESCRIPTOR TO SCRATCH BUFFER
            58         04 A8     D0  02F1   407 	MOVL	4(R8),R8		;BUILD DESCRIPTOR TO COMMAND BUFFER
                                     02F5   408 					;IN SCRATCH BUFFER
            68   000001FC 8F     D0  02F5   409 	MOVL	#CMDBUFSIZ,(R8)		;LENGTH OF BUFFER
         04 A8       FD44 CD     DE  02FC   410 	MOVAL	WRK_AB_BUFFER(FP),4(R8)	;POINTER TO START OF COMMAND BUFFER
                                     0302   411 
                                     0302   412 ;
                                     0302   413 ; INITIALIZE POINTERS AND INDEXES
                                     0302   414 ;
                                     0302   415 
            50         04 A8     D0  0302   416  	MOVL	4(R8),R0		;POINTER TO SCRATCH BUFFER
                          51     D4  0306   417 	CLRL	R1			;INDEX INTO JPI RESULTANT LIST
            59            24     C2  0308   418 	SUBL2	#JPI_ARGS*4,R9		;ALLOCATE JPI RESULTANT LIST
                                     030B   419 
                                     030B   420 ;
                                     030B   421 ; CONSTRUCT LIST OF JPI ITEM DESCRIPTOR BLOCKS IN SCRATCH BUFFER
                                     030B   422 ;
                                     030B   423 
            60            04     B0  030B   424 10$:	MOVW	#4,(R0)			;LENGTH OF RESULT (=LONGWORD)
         02 A0       FDF8 CF41   B0  030E   425 	MOVW	JPI_CODES[R1],2(R0)	;JPI CODE
         04 A0            6941   DE  0315   426 	MOVAL	(R9)[R1],4(R0)		;POINTER TO RESULT BUFFER (=LONGWORD)
                       08 A0     D4  031A   427 	CLRL	8(R0)			;NO NEED FOR RESULTANT LENGTH
            50            0C     C0  031D   428 	ADDL2	#12,R0			;POINT TO NEXT ITEM DESCRIPTOR 
            51            08     F3  0320   429 	AOBLEQ	#JPI_ARGS-1,R1,10$	;REPEAT FOR EACH ITEM IN LIST
                          E7         0323       
MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page  13
01              SHOW STATUS                                                                                                      (1)

                          60     D4  0324   430 	CLRL	(R0)			;END ITEM LIST
                                     0326   431 ;
                                     0326   432 ; GET JOB PROCESS PARAMETERS
                                     0326   433 ;
                                     0326   434 
                                     0326   435 	$GETJPI_S	ITMLST=@4(R8)	;
                                     033A   436 
                                     033A   437 ;
                                     033A   438 ; PERFORM SOME ARITHMETIC ON VALUES OBTAINED
                                     033A   439 ;
                                     033A   440 
         0C A9         1C A9     C2  033A   441 	SUBL2	FAO_FILCNT(R9),FAO_FILLM(R9);COMPUTE COUNT OF OPEN FILES
         14 A9         20 A9     C0  033F   442 	ADDL2	FAO_PPGCNT(R9),FAO_GPGCNT(R9);COMPUTE TOTAL PHYSICAL MEMORY OCCUPIED
            69   FFFE7960 8F     7A  0344   443 	EMUL	#-100000,FAO_CPUTIM(R9),#0,FAO_Q_CPU(R9)
         1C A9            00         034B       
                                     034E   444 					;CALCULATE TIME IN 100NS UNITS
            69         1C A9     DE  034E   445 	MOVAL	FAO_Q_CPU(R9),FAO_CPUTIM(R9);REPLACE BY POINTER TO QUADWORD
                          79     D4  0352   446 	CLRL	-(R9)			;INSERT SYSTEM TIME AND DATE AT TOP
                                     0354   447 
                                     0354   448 ;
                                     0354   449 ; FORMAT AND PRINT INFORMATION
                                     0354   450 ;
                                     0354   451 
                     FCF3 CF     9F  0354   452 	PUSHAB	W^STATUS_MSG		;FAO MESSAGE TEXT
                 0000009D 8F     DD  0358   453 	PUSHL	#STATUS_END-STATUS_MSG	;LENGTH OF MESSAGE
            50            5E     D0  035E   454 	MOVL	SP,R0			;
                                     0361   455 	$FAOL_S	(R0),(R8),(R8),(R9)	;BUILD MESSAGE IN SCRATCH BUFFER
            51            68     7D  0370   456 	MOVQ	(R8),R1			;DESCRIPTOR OF MESSAGE
            5E            08     C0  0373   457 	ADDL	#2*4,SP			;CLEAN STACK
                     0100 8F     BA  0376   458 	POPR	#^M<R8>			;RESTORE SCRATCH BUFFER DESCRIPTOR
                          001F   31  037A   459 	BRW	EXTMSG			;GO OUTPUT MESSAGE
                                     037D   460 
MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page  14
01              SHOW DAYTIME                                                                                                     (1)

                                     037D   462 	.SBTTL	SHOW DAYTIME
                                     037D   463 ;+
                                     037D   464 ; MCR$SHOWTIME - SHOW DAYTIME
                                     037D   465 ;
                                     037D   466 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE SHOW DAYTIME
                                     037D   467 ; MCR COMMAND.
                                     037D   468 ;
                                     037D   469 ; INPUTS:
                                     037D   470 ;
                                     037D   471 ;	R8 = ADDRESS OF SCRATCH BUFFER DESCRIPTOR.
                                     037D   472 ;	R9 = ADDRESS OF SCRATCH STACK.
                                     037D   473 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     037D   474 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     037D   475 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     037D   476 ;
                                     037D   477 ; OUTPUTS:
                                     037D   478 ;
                                     037D   479 ;	THE CURRENT TIME AND DATE ARE CONVERTED TO ASCII AND WRITTEN TO THE
                                     037D   480 ;	OUTPUT STREAM.
                                     037D   481 ;-
                                     037D   482  
                                     037D   483 MCR$SHOWTIME::				;SHOW TIME AND DATE INFORMATION
            52         04 A8     D0  037D   484 	MOVL	4(R8),R2		;GET ADDRESS OF SCRATCH BUFFER
            62       2020 8F     B0  0381   485 	MOVW	#^A/  /,(R2)		;INSERT LEADING BLANKS
         04 A8            02     C0  0386   486 	ADDL	#2,4(R8)		;POINT PAST LEADING BLANKS
                                     038A   487 	$ASCTIM_S ,(R8)			;CONVERT CURRENT TIME TO ASCII
            51            16     3C  0399   488 	MOVZWL	#22,R1			;SET LENGTH OF OUTPUT MESSAGE
                                     039C   489 EXTMSG:	MSGOUT				;OUTPUT MESSAGE TEXT
                                     039F   490 	STATUS	NORMAL			;SET NORMAL COMPLETION STATUS
                                 05  03A2   491 	RSB				;
                                     03A3   492  
                                     03A3   493 	.END
MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                     (1)

$$$            = 00000004            CLI$_CREQUEJOB = 0003884A            CLI$_STKOVF    = 00038128            
$$$GBL         = 00000000            CLI$_DEFOVF    = 00038028            CLI$_SUBMITERR = 00038852            
$$T1           = 00000001            CLI$_DEVALSPL  = 0003885A            CLI$_SYMDEL    = 00038130            
$$T2           = 00000006            CLI$_DEVNOTFOR = 0003887A            CLI$_SYMOVF    = 00038138            
$QUALNUM$      = 00000002            CLI$_DEVNOTSPL = 00038862            CLI$_UNDFIL    = 00038188            
ACCESS           00000000 R     03   CLI$_DIRECT    = 00038030            CLI$_UNDSYM    = 00038140            
BIT...         = 00000103            CLI$_EXPSYN    = 00038038            CLI$_UNPROPARM = 00038170            
CLI$K_SHDV_ALLO= 00000001            CLI$_FILOPN    = 00038190            CLI$_UNPROQUAL = 00038168            
CLI$K_SHDV_BRIE= 00000002            CLI$_ILLVAL    = 0003883A            CLI$_USGOTO    = 00038148            
CLI$K_SHDV_FULL= 00000003            CLI$_IMCHNG    = 00038040            CLI$_VALCNVERR = 00038832            
CLI$K_SHDV_MOUN= 00000004            CLI$_IMGFNF    = 00038872            CLI$_VALREQ    = 00038150            
CLI$K_SHLG_ALL = 00000004            CLI$_INSFPRM   = 00038048            CMDBUFSIZ      = 000001FC            
CLI$K_SHLG_GROU= 00000002            CLI$_INVKEY    = 00038178            CTL$GL_PLTFL     ********   X   03   
CLI$K_SHLG_PROC= 00000003            CLI$_INVQUAL   = 0003880A            DISPITEM         000002A2 R     03   
CLI$K_SHLG_SYST= 00000001            CLI$_INVQUALNUM= 0003881A            DISPLIST         00000276 R     03   
CLI$K_SHOW_DAYT= 00000001            CLI$_INVREQTYP = 00038822            DISPTRANS        000002A4 R     03   
CLI$K_SHOW_DEFA= 00000003            CLI$_INVRSP    = 00038180            EXTMSG           0000039C R     03   
CLI$K_SHOW_DEVI= 0000000A            CLI$_INVUIC    = 000381A8            FAO_CPUTIM     = 00000000            
CLI$K_SHOW_LOGI= 00000004            CLI$_IVCHAR    = 00038050            FAO_FILCNT     = 0000001C            
CLI$K_SHOW_MAGT= 00000012            CLI$_IVDEVTYPE = 0003886A            FAO_FILLM      = 0000000C            
CLI$K_SHOW_NETW= 00000010            CLI$_IVFNAM    = 000381C0            FAO_GPGCNT     = 00000014            
CLI$K_SHOW_PRIN= 0000000F            CLI$_IVKEYW    = 00038060            FAO_PPGCNT     = 00000020            
CLI$K_SHOW_PROC= 0000000C            CLI$_IVOPER    = 00038068            FAO_Q_CPU      = 0000001C            
CLI$K_SHOW_PROT= 00000005            CLI$_IVPROT    = 00038070            FAO_WSSIZE     = 00000008            
CLI$K_SHOW_QUEU= 00000006            CLI$_IVQLOC    = 00038078            FORMATEND        00000015 R     03   
CLI$K_SHOW_RMS_= 00000011            CLI$_IVSYMB    = 00038080            FORMATMSG        00000004 R     03   
CLI$K_SHOW_STAT= 0000000B            CLI$_IVVALU    = 00038088            GBL...         = 00000000            
CLI$K_SHOW_SYMB= 00000007            CLI$_IVVERB    = 00038090            INPBUFSIZ      = 00000084            
CLI$K_SHOW_SYST= 0000000D            CLI$_MAXPARM   = 00038098            JPI$C_ADRTYPE  = 00000001            
CLI$K_SHOW_TERM= 0000000E            CLI$_MULKEY    = 000381A0            JPI$C_CTLTYPE  = 00000002            
CLI$K_SHOW_TIME= 00000002            CLI$_NOATFIL   = 000380A0            JPI$C_LISTEND  = 00000000            
CLI$K_SHOW_TRAN= 00000008            CLI$_NOCCAT    = 000380A8            JPI$C_PCBTYPE  = 00000003            
CLI$K_SHOW_WORK= 00000009            CLI$_NOCOMD    = 000380B0            JPI$C_PHDTYPE  = 00000004            
CLI$K_SHPR_ACCO= 00000002            CLI$_NOKEYW    = 000380B8            JPI$_ACCOUNT   = 00000203            
CLI$K_SHPR_ALL = 00000005            CLI$_NOLIST    = 000380C0            JPI$_APTCNT    = 0000030A            
CLI$K_SHPR_PRIV= 00000003            CLI$_NOOPTPRS  = 00038842            JPI$_ASTACT    = 00000300            
CLI$K_SHPR_QUOT= 00000001            CLI$_NOQUAL    = 000380C8            JPI$_ASTCNT    = 0000030E            
CLI$K_SHPR_SUBP= 00000004            CLI$_NORMAL    = 00030001            JPI$_ASTEN     = 00000301            
CLI$K_SHQU_ALL = 00000001            CLI$_NOTNEG    = 000380D8            JPI$_ASTLM     = 00000409            
CLI$K_SHQU_BATC= 00000002            CLI$_NOVALU    = 000380D0            JPI$_BIOCNT    = 0000030F            
CLI$K_SHQU_BRIE= 00000003            CLI$_NOVALUE   = 0003882A            JPI$_BIOLM     = 00000310            
CLI$K_SHQU_DEVI= 00000004            CLI$_NULFIL    = 000380E0            JPI$_BUFIO     = 0000040C            
CLI$K_SHQU_ENTR= 00000005            CLI$_NUMBER    = 000380E8            JPI$_BYTCNT    = 00000311            
CLI$K_SHQU_FULL= 00000006            CLI$_ONCOMD    = 000380F0            JPI$_BYTLM     = 0000031A            
CLI$K_SHSS_PROC= 00000001            CLI$_ONERR     = 000380F8            JPI$_CPULIM    = 0000040D            
CLI$K_SHSY_ALL = 00000003            CLI$_ONEVAL    = 00038158            JPI$_CPUTIM    = 00000407            
CLI$K_SHSY_GLOB= 00000001            CLI$_ONLEVL    = 00038100            JPI$_CURPRIV   = 00000400            
CLI$K_SHSY_LOCA= 00000002            CLI$_ONOVF     = 00038108            JPI$_DFPFC     = 00000406            
CLI$K_SHTE_PERM= 00000001            CLI$_OVRFLW    = 00038160            JPI$_DFWSCNT   = 00000403            
CLI$_ABFNAM    = 000381B8            CLI$_PARMDEL   = 00038110            JPI$_DIOCNT    = 00000312            
CLI$_ABKEYW    = 00038000            CLI$_PROC_ID   = 0003FFF1            JPI$_DIOLM     = 00000313            
CLI$_ABVERB    = 00038008            CLI$_QUEJOBCRE = 0003FFF9            JPI$_DIRIO     = 0000040B            
CLI$_BADRET    = 00038198            CLI$_REQPRMABS = 00038812            JPI$_EFCS      = 00000317            
CLI$_BADTEXT   = 000381B0            CLI$_RSLOVF    = 00038118            JPI$_EFCU      = 00000318            
CLI$_BUFOVF    = 00038018            CLI$_SKPDAT    = 00038120            JPI$_EFWM      = 00000316            
CLI$_COMPLX    = 00038020            CLI$_SPARE0    = 00038010            JPI$_EXCVEC    = 00000100            
CLI$_CONFQUAL  = 00038802            CLI$_SPARE1    = 00038058            JPI$_FILCNT    = 00000314            
MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                     (1)

JPI$_FILLM     = 0000040F            MCR$SEARCHT      ********   X   03   PRC_L_INDFAB     0000001C            
JPI$_FINALEXC  = 00000101            MCR$SHOWDEF      0000011D RG    03   PRC_L_INDINPRAB  00000014            
JPI$_FREP0VA   = 00000404            MCR$SHOWLOG      0000016A RG    03   PRC_L_INDOUTRAB  00000018            
JPI$_FREP1VA   = 00000405            MCR$SHOWPROT     000001C5 RG    03   PRC_L_INPRAB     00000008            
JPI$_GPGCNT    = 0000030C            MCR$SHOWSTAT     000002EF RG    03   PRC_L_LSTSTATUS  00000094            
JPI$_GRP       = 00000308            MCR$SHOWSYMBL    00000228 RG    03   PRC_L_ONCTLY     0000009C            
JPI$_LASTADR   = 00000102            MCR$SHOWTIME     0000037D RG    03   PRC_L_ONERROR    00000058            
JPI$_LASTCTL   = 00000207            MCR$SHOWTRAN     0000015E RG    03   PRC_L_OUTRAB     0000000C            
JPI$_LASTPCB   = 0000031D            MCR$T_DSKNAM     ********   X   03   PRC_L_PROCUIC    00000098            
JPI$_LASTPHD   = 00000412            MCR_M_ALPHAN   = 00000002            PRC_L_SAVAP      00000000            
JPI$_LOGINTIM  = 00000206            MCR_M_DEFALT   = 00000008            PRC_L_SAVFP      00000004            
JPI$_MEM       = 00000307            MCR_M_DELINP   = 00000080            PRC_L_SEVERITY   00000040            
JPI$_OWNER     = 00000303            MCR_M_DOLLARS  = 00000100            PRC_L_STACKLM    00000088            
JPI$_PAGEFLTS  = 0000040A            MCR_M_ESCAPE   = 00000004            PRC_L_STACKPT    00000084            
JPI$_PGFLQUOTA = 0000040E            MCR_M_ESCTRM   = 00000200            PRC_L_STATUS     00000044            
JPI$_PID       = 00000319            MCR_M_GLOBAL   = 00000400            PRC_L_SYMBOL     0000004C            
JPI$_PPGCNT    = 0000030D            MCR_M_LOWER    = 00000800            PRC_M_CNTRLY   = 00000002            
JPI$_PRCCNT    = 0000031B            MCR_M_OPNINP   = 00000040            PRC_M_DBGQUAL  = 00000200            
JPI$_PRCLM     = 00000408            MCR_M_RAD50    = 00000001            PRC_M_DBGTRUE  = 00000400            
JPI$_PRCNAM    = 0000031C            MCR_M_STRSUB   = 00001000            PRC_M_DISABL   = 00000004            
JPI$_PRI       = 00000302            MCR_V_ALPHAN   = 00000001            PRC_M_EXIT     = 00000008            
JPI$_PRIB      = 00000309            MCR_V_DEFALT   = 00000003            PRC_M_GOEOF    = 00000001            
JPI$_PROCPRIV  = 00000204            MCR_V_DELINP   = 00000007            PRC_M_GOTO     = 00000010            
JPI$_STATE     = 00000306            MCR_V_DOLLARS  = 00000008            PRC_M_HANGUP   = 00001000            
JPI$_STS       = 00000305            MCR_V_ESCAPE   = 00000002            PRC_M_IND      = 00000020            
JPI$_TMBU      = 0000030B            MCR_V_ESCTRM   = 00000009            PRC_M_MODE     = 00000040            
JPI$_TQCNT     = 00000315            MCR_V_FORCMD   = 0000000E            PRC_M_NOCTLY   = 00004000            
JPI$_TQLM      = 00000410            MCR_V_GLOBAL   = 0000000A            PRC_M_PAUSE    = 00002000            
JPI$_UIC       = 00000304            MCR_V_LOWER    = 0000000B            PRC_M_USRDET   = 00000100            
JPI$_USERNAME  = 00000202            MCR_V_OPNINP   = 00000006            PRC_M_VERIFY   = 00000080            
JPI$_VIRTPEAK  = 00000200            MCR_V_RAD50    = 00000000            PRC_M_YLEVEL   = 00000800            
JPI$_VOLUMES   = 00000205            MCR_V_STRSUB   = 0000000C            PRC_Q_ALLOCREG   00000020            
JPI$_WSAUTH    = 00000401            MSGBUFSIZ      = 00000084            PRC_Q_GLOBAL     00000028            
JPI$_WSPEAK    = 00000201            NOACCESS         00000015 R     03   PRC_Q_LABEL      00000030            
JPI$_WSQUOTA   = 00000402            NOACCESSEND      0000001E R     03   PRC_Q_LOCAL      00000038            
JPI$_WSSIZE    = 00000411            PIO$GT_DDSTRING  ********   X   03   PRC_V_CNTRLY   = 00000001            
JPI_ARGS       = 00000009            PIO$GW_DFPROT    ********   X   03   PRC_V_DBGQUAL  = 00000009            
JPI_CODES        0000010B R     03   PRC_B_DEFRADIX   00000092            PRC_V_DBGTRUE  = 0000000A            
LOG$B_AMOD       0000000E            PRC_B_EXMDEPMOD  00000091            PRC_V_DISABL   = 00000002            
LOG$B_TABLE      0000000B            PRC_B_EXMDEPWID  00000090            PRC_V_EXIT     = 00000003            
LOG$B_TYPE       0000000A            PRC_K_DEC      = 00000001            PRC_V_GOEOF    = 00000000            
LOG$C_GROUP    = 00000001            PRC_K_HEX      = 00000000            PRC_V_GOTO     = 00000004            
LOG$C_LENGTH     00000014            PRC_K_LENGTH     000000A0            PRC_V_HANGUP   = 0000000C            
LOG$C_NAMLENGTH= 00000040            PRC_K_OCT      = 00000002            PRC_V_IND      = 00000005            
LOG$C_PROCESS  = 00000002            PRC_L_CLIWRK0    0000005C            PRC_V_MODE     = 00000006            
LOG$C_SYSTEM   = 00000000            PRC_L_CLIWRK1    00000060            PRC_V_NOCTLY   = 0000000E            
LOG$K_LENGTH     00000014            PRC_L_CLIWRK2    00000064            PRC_V_PAUSE    = 0000000D            
LOG$L_LTBL       00000004            PRC_L_CLIWRK3    00000068            PRC_V_USRDET   = 00000008            
LOG$L_LTFL       00000000            PRC_L_CLIWRK4    0000006C            PRC_V_VERIFY   = 00000007            
LOG$L_MBXUCB     00000010            PRC_L_ERRRAB     00000010            PRC_V_YLEVEL   = 0000000B            
LOG$T_NAME       00000014            PRC_L_EXMDEPADR  0000008C            PRC_W_CLIFLAG    00000052            
LOG$W_GROUP      0000000C            PRC_L_EXTARG     00000078            PRC_W_ERRIFI     00000052            
LOG$W_SIZE       00000008            PRC_L_EXTBLK     00000070            PRC_W_FLAGS      00000054            
LOG_NAME_TABLE   000000E8 R     03   PRC_L_EXTCOD     00000080            PRC_W_INPCHAN    00000050            
MCR$COMPSTRING   ********   X   03   PRC_L_EXTHND     00000074            PRC_W_ONLEVEL    00000056            
MCR$GETDVAL      ********   X   03   PRC_L_EXTPRM     0000007C            PROTECTEND       0000004B R     03   
MCR$MSGOUT       ********   X   03   PRC_L_INDEPTH    00000048            PROTECTMSG       0000001E R     03   
MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page  17
SYMBOL TABLE                                                                                                                     (1)

PRO_B_FLAGS      00000001            QUA_M_OUTPUT   = 00000800            WRK_K_LENGTH     FFFFFBC0            
PRO_B_PROMPT     00000000            QUA_M_PARM     = 00000010            WRK_L_CHARPTR    FFFFFFFC            
PRO_K_LENGTH     00000002            QUA_M_VAL      = 00000020            WRK_L_IMAGE      FFFFFFEC            
PRO_M_CONCAT   = 00000001            QUA_M_VALREQ   = 00001000            WRK_L_MAXPARM    FFFFFFCC            
PRO_M_IMPCAT   = 00000002            QUA_M_VERB     = 00000008            WRK_L_MINPARM    FFFFFFD0            
PRO_M_LIST     = 00000004            QUA_S_MAXPARM  = 00000004            WRK_L_PAROUT     FFFFFFF0            
PRO_M_OPTION   = 00000008            QUA_S_MINPARM  = 00000004            WRK_L_PROMPT     FFFFFFF4            
PRO_M_REQ      = 00000010            QUA_V_BATDEF   = 00000008            WRK_L_QUABLK     FFFFFFE8            
PRO_M_STRING   = 00000020            QUA_V_CHNGLIST = 00000000            WRK_L_RSLNXT     FFFFFD40            
PRO_V_CONCAT   = 00000000            QUA_V_DEFTRUE  = 00000007            WRK_L_SAVAP      FFFFFFD8            
PRO_V_IMPCAT   = 00000001            QUA_V_FILE     = 00000002            WRK_L_SAVFP      FFFFFFDC            
PRO_V_LIST     = 00000002            QUA_V_IMAGE    = 0000000A            WRK_L_SAVSP      FFFFFFD4            
PRO_V_OPTION   = 00000003            QUA_V_INTDEF   = 00000009            WRK_M_ALL      = 00000001            
PRO_V_REQ      = 00000004            QUA_V_KEYVAL   = 0000000E            WRK_M_ASK      = 00000100            
PRO_V_STRING   = 00000005            QUA_V_LOCALKEY = 00000001            WRK_M_COMMAND  = 00000002            
PTR_K_BLANK    = 00000001            QUA_V_MAXPARM  = 00000004            WRK_M_CONTINU  = 00000400            
PTR_K_COLON    = 00000002            QUA_V_MINPARM  = 00000000            WRK_M_EQUAL    = 00000008            
PTR_K_COMDQUAL = 00000000            QUA_V_NEG      = 00000006            WRK_M_IMCHNG   = 00000004            
PTR_K_COMMA    = 00000005            QUA_V_ONEVAL   = 0000000D            WRK_M_QUAL     = 00000010            
PTR_K_ENDLINE  = 00000004            QUA_V_OUTPUT   = 0000000B            WRK_M_QUOTE    = 00000020            
PTR_K_LPAREN   = 00000007            QUA_V_PARM     = 00000004            WRK_M_STAR     = 00000040            
PTR_K_PARAMETR = 00000003            QUA_V_VAL      = 00000005            WRK_M_TRAILSPC = 00000200            
PTR_K_PARMQUAL = 00000001            QUA_V_VALREQ   = 0000000C            WRK_M_VERB     = 00000080            
PTR_K_PLUS     = 00000004            QUA_V_VERB     = 00000003            WRK_Q_IOSB       FFFFFFE0            
PTR_K_QUALVALU = 00000002            QUA_W_FLAGS      00000004            WRK_V_ALL      = 00000000            
PTR_K_RPAREN   = 00000006            QUA_W_QUALIST    00000007            WRK_V_ASK      = 00000008            
PTR_K_SLASH    = 00000003            RSLBUFSIZ      = 00000180            WRK_V_COMMAND  = 00000001            
PTR_L_DESCR      00000000            SHWNAM           0000018C R     03   WRK_V_CONTINU  = 0000000A            
PTR_S_FLAGS    = 00000004            SS$_NORMAL       ********   X   03   WRK_V_EQUAL    = 00000003            
PTR_S_OFFSET   = 0000000C            STATUS_END       000000E8 R     03   WRK_V_IMCHNG   = 00000002            
PTR_S_TERM     = 00000004            STATUS_MSG       0000004B R     03   WRK_V_QUAL     = 00000004            
PTR_S_TYPE     = 00000004            SYM_B_TYPE       0000000A            WRK_V_QUOTE    = 00000005            
PTR_S_VALUE    = 00000008            SYM_K_DECIMAL  = 00000004            WRK_V_STAR     = 00000006            
PTR_V_EQUAL    = 00000000            SYM_K_HEXDEC   = 00000005            WRK_V_TRAILSPC = 00000009            
PTR_V_FLAGS    = 00000014            SYM_K_LOGICAL  = 00000002            WRK_V_VERB     = 00000007            
PTR_V_NEGATE   = 00000000            SYM_K_OCTAL    = 00000003            WRK_W_FLAGS      FFFFFFFA            
PTR_V_OFFSET   = 00000008            SYM_K_PERM     = 00000001            WRK_W_LOCFLG     FFFFFFF8            
PTR_V_TERM     = 00000018            SYM_K_STRING   = 00000000            
PTR_V_TYPE     = 0000001C            SYM_L_BL         00000004            
PTR_V_VALUE    = 00000000            SYM_L_FL         00000000            
QUA_B_CODE       00000001            SYM_T_SYMBOL     0000000C            
QUA_B_DEFVAL     00000003            SYM_W_SIZE       00000008            
QUA_B_IMAGE      00000006            SYS$ASCTIM       ********   X   03   
QUA_B_INDEX      00000002            SYS$FAO          ********   X   03   
QUA_B_OFFSET     00000000            SYS$FAOL         ********   X   03   
QUA_B_PARMCNT    00000009            SYS$GETJPI       ********   X   03   
QUA_G_CHNGLST    00000007            SYS$TRNLOG       ********   X   03   
QUA_M_BATDEF   = 00000100            TEXT_T_GROUP     000000F5 R     03   
QUA_M_CHNGLIST = 00000001            TEXT_T_NULLSTR   00000107 R     03   
QUA_M_DEFTRUE  = 00000080            TEXT_T_PROCESS   000000FD R     03   
QUA_M_FILE     = 00000004            TEXT_T_SYSTEM    000000EC R     03   
QUA_M_IMAGE    = 00000400            WRK_AB_BUFFER    FFFFFD44            
QUA_M_INTDEF   = 00000200            WRK_AG_RESULT    FFFFFBC0            
QUA_M_KEYVAL   = 00004000            WRK_B_CMDFLG     FFFFFFC9            
QUA_M_LOCALKEY = 00000002            WRK_B_CURADX     FFFFFFCA            
QUA_M_NEG      = 00000040            WRK_B_PARMCNT    FFFFFFCB            
QUA_M_ONEVAL   = 00002000            WRK_B_VERBTYP    FFFFFFC8            
MCRSHOW         - SHOW INFORMATION MCR COMMAND EXECUTION         22-AUG-1978 01:52:31   VAX-11 MACRO X0.3-11               Page  18
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFC      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
MCR$ZCODE        000003A3      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
9272. BYTES LEFT IN FREE MEMORY POOL.
104. BYTES OF RECLAIMED MEMORY.
OBJ$:MCRSHOW,LIS$:MCRSHOW/-SP=EXECML$/ML,LIB$:MCR/ML,SRC$:MCRSHOW
50 MLB DIR RDS - 822 GETS TO DEFINE 36 MACROS. 58 INTER. FILE WRITES. 
