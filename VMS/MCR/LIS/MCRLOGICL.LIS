MCRLOGICL       - LOGICAL NAME MCR COMMAND EXECUTION             22-AUG-1978 01:45:18   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      58  ALLOCATE DEVICE
   (1)      97  ASSIGN LOGICAL NAME TO EQUIVALENCE STRING
   (1)     163  DEALLOCATE DEVICE
MCRLOGICL       - LOGICAL NAME MCR COMMAND EXECUTION             22-AUG-1978 01:45:18   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	MCRLOGICL - LOGICAL NAME MCR COMMAND EXECUTION
                                     0000     2 	.IDENT	/01/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977, 1978
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; W. H. BROWN 4-JAN-1978
                                     0000    24 ;
                                     0000    25 ; LOGICAL NAME MCR COMMAND EXECUTION
                                     0000    26 ;
                                     0000    27 ;	ALLOCATE DEVICE
                                     0000    28 ;	ASSIGN/DEASSIGN LOGICAL NAME
                                     0000    29 ;	DEALLOCATE DEVICE
                                     0000    30 ;	DEFINE LOGICAL NAME
                                     0000    31 ;
                                     0000    32 ; MACRO LIBRARY CALLS
                                     0000    33 ;
                                     0000    34  
                                     0000    35 	$CLIDEFQUALDEAL			; DEFINE DEALLOCATE QUALIFIER NUMBERS
                                     0000    36 	DEFCMDWRK			; DEFINE WORK AREA OFFSETS
                                     0000    37 	DEFERRCOD			; DEFINE ERROR/STATUS VALUES
                                     0000    38 	DEFPTRDSC			; DEFINE RESULT PARSE DESCRIPTOR FORMAT
                                     0000    39 	$LOGDEF				; DEFINE LOG OFFSETS
                                     0000    40 	$PSLDEF				; DEFINE PROCESSOR STATUS FIELDS
                                     0000    41 	$SSDEF				; DEFINE SYSTEM STATUS VALUES
                           00000003  0000    42 	CLI$K_ASN_TERM==3
                           00000002  0000    43 	CLI$K_ASN_GROU==2
                           00000001  0000    44 	CLI$K_ASN_GBL ==1
                                     0000    45  
                                     0000    46 ;
                                     0000    47 ; LOCAL DATA
                                     0000    48 ;
                                     0000    49  
                                 00000000    50 	.PSECT	MCR$ZCODE,BYTE,RD,NOWRT
                                     0000    51 ALLOCATE:				; ALLOCATE TEXT
      44 45 54 41 43 4F 4C 4C 41 20  0000    52 	.ASCII	/ ALLOCATED/		; 
                                     000A    53 A:					; 
                                     000A    54 SUPERSEDE:				; LOGICAL NAME SUPERSEDED MESSAGE
4C 20 53 55 4F 49 56 45 52 50 20 20  000A    55 	.ASCII	/  PREVIOUS LOGICAL NAME ASSIGNMENT REPLACED/ ; 
20 45 4D 41 4E 20 4C 41 43 49 47 4F  0016       
52 20 54 4E 45 4D 4E 47 49 53 53 41  0022       
MCRLOGICL       - LOGICAL NAME MCR COMMAND EXECUTION             22-AUG-1978 01:45:18   VAX-11 MACRO X0.3-11               Page   2
01                                                                                                                               (1)

               44 45 43 41 4C 50 45  002E       
                                     0035    56 B:					; 
MCRLOGICL       - LOGICAL NAME MCR COMMAND EXECUTION             22-AUG-1978 01:45:18   VAX-11 MACRO X0.3-11               Page   3
01              ALLOCATE DEVICE                                                                                                  (1)

                                     0035    58 	.SBTTL	ALLOCATE DEVICE
                                     0035    59 ;+
                                     0035    60 ; MCR$ALLOCATE - ALLOCATE DEVICE
                                     0035    61 ;
                                     0035    62 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE ALLOCATE MCR
                                     0035    63 ; COMMAND.
                                     0035    64 ;
                                     0035    65 ; INPUTS:
                                     0035    66 ;
                                     0035    67 ;	R8 = ADDRESS OF SCRATCH BUFFER DESCRIPTOR.
                                     0035    68 ;	R9 = ADDRESS OF SCRATCH STACK.
                                     0035    69 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     0035    70 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     0035    71 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     0035    72 ;
                                     0035    73 ; OUTPUTS:
                                     0035    74 ;
                                     0035    75 ;	THE SPECIFIED DEVICE IS ALLOCATED AND ASSIGNED THE SPECIFIED LOGICAL
                                     0035    76 ;	NAME. IF THE LOGICAL NAME WAS PREVIOUSLY ASSIGNED, THEN A MESSAGE TO
                                     0035    77 ;	THAT EFFECT IS WRITTEN TO THE OUTPUT STREAM.
                                     0035    78 ;-
                                     0035    79  
                                     0035    80 	.ENABL	LSB
                                     0035    81 MCR$ALLOCATE::				; ALLOCATE DEVICE
                          00BF   30  0035    82 	BSBW	GETDEV			; GET DEVICE NAME TO ALLOCATE
                                     0038    83 	$ALLOC_S (R9),(R8),(R8)		; ALLOCATE DEVICE
            6A            50     E9  0047    84 	BLBC	R0,50$			; IF LBC ALLOCATION FAILURE
            79            68     7D  004A    85 	MOVQ	(R8),-(R9)		; SAVE DEVICE NAME DESCRIPTOR
            68            88     C1  004D    86 	ADDL3	(R8)+,(R8),R0		; CALCULATE ADDRESS TO APPEND TEXT
                          50         0050       
         AB AF            0A     28  0051    87 	MOVC	#A-ALLOCATE,ALLOCATE,(R0) ; APPEND TEXT TO DEVICE NAME
                          60         0055       
            52            68     D0  0056    88 	MOVL	(R8),R2			; GET STARTING ADDRESS OF DEVICE NAME
            72       2020 8F     B0  0059    89 	MOVW	#^A/  /,-(R2)		; INSERT 2 LEADING SPACES
            53            52     C3  005E    90 	SUBL3	R2,R3,R1		; CALCULATE LENGTH OF MESSAGE
                          51         0061       
                                     0062    91 	MSGOUT				; OUTPUT ALLOCATION MESSAGE
                          008F   30  0065    92 	BSBW	GETDEV			; GET LOGICAL NAME
            46            50     E9  0068    93 	BLBC	R0,40$			; BR IF NAME IS HERE
            57            02     9A  006B    94 	MOVZBL	#LOG$C_PROCESS,R7	; SET TABLE NUMBER
                          1F     11  006E    95 	BRB	30$			; ELSE EXIT
MCRLOGICL       - LOGICAL NAME MCR COMMAND EXECUTION             22-AUG-1978 01:45:18   VAX-11 MACRO X0.3-11               Page   4
01              ASSIGN LOGICAL NAME TO EQUIVALENCE STRING                                                                        (1)

                                     0070    97 	.SBTTL	ASSIGN LOGICAL NAME TO EQUIVALENCE STRING
                                     0070    98 ;+
                                     0070    99 ; MCR$ASSIGN - ASSIGN LOGICAL NAME TO EQUIVALENCE STRING
                                     0070   100 ;
                                     0070   101 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE ASSIGN MCR
                                     0070   102 ; COMMAND.
                                     0070   103 ;
                                     0070   104 ; INPUTS:
                                     0070   105 ;
                                     0070   106 ;	R8 = ADDRESS OF SCRATCH BUFFER DESCRIPTOR.
                                     0070   107 ;	R9 = ADDRESS OF SCRATCH STACK.
                                     0070   108 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     0070   109 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     0070   110 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     0070   111 ;
                                     0070   112 ; OUTPUTS:
                                     0070   113 ;
                                     0070   114 ;	THE SPECIFIED LOGICAL NAME IS ASSIGNED TO THE SPECIFIED EQUIVALENCE
                                     0070   115 ;	STRING. IF A PREVIOUS LOGICAL ASSIGNMENT IS SUPERSEDED, THEN A
                                     0070   116 ;	MESSAGE TO THAT EFFECT IS WRITTEN TO THE OUTPUT STREAM.
                                     0070   117 ;-
                                     0070   118  
                                     0070   119 MCR$ASSIGN::				; ASSIGN LOGICAL NAME TO EQUIVALENCE STRING
            57            02     9A  0070   120 	MOVZBL	#LOG$C_PROCESS,R7	; SET TABLE NUMBER
                          60     10  0073   121 	BSBB	100$			; SET TABLE NUMBER
            03            55     91  0075   122 	CMPB	R5,#PTR_K_PARAMETR	; IS NEXT DESCRIPTOR FOR A PARAMETER?
                          42     14  0078   123 	BGTR	65$			; BR IF EOL IS NEXT
                                     007A   124 	ASSUME	PTR_V_EQUAL EQ 0	;
            38            53     E8  007A   125 	BLBS	R3,60$			; BR IF EQUAL BEFORE FIRST PARAMETER
                                     007D   126 	COMPSTRING			; REMOVE QUOTES
            79            51     7D  0080   127 	MOVQ	R1,-(R9)		; SAVE DESCRIPTOR FOR NAME
                          50     10  0083   128 	BSBB	100$			; CHECK FOR QUALIFIERS
            03            55     91  0085   129 	CMPB	R5,#PTR_K_PARAMETR	; CHECK FOR REQUIRED PARAMETER
                          47     12  0088   130 	BNEQ	80$			; BR IF SYNTAX ERROR
                          007A   30  008A   131 	BSBW	SETNAM			; SET LOGICAL NAME
                          46     10  008D   132 	BSBB	100$			; CHECK FOR QUALIFIERS
                                     008F   133 30$:	$CRELOG_S R7,(R9),8(R9),#PSL$C_SUPER ; CREATE LOGICAL NAME IN SPECIFIED TABLE
            50       0631 8F     B1  009F   134 	CMPW	#SS$_SUPERSEDE,R0	; PREVIOUS ASSIGNMENT SUPERSEDED?
                          0E     12  00A4   135 	BNEQ	50$			; IF NEQ NO
            51            2B     9A  00A6   136 	MOVZBL	#B-SUPERSEDE,R1		; GET LENGTH OF SUPERSEDE MESSAGE
            52       FF5D CF     9E  00A9   137 	MOVAB	SUPERSEDE,R2		; GET ADDRESS OF SUPERSEDE MESSAGE
                                     00AE   138 	MSGOUT				; OUTPUT MESSAGE
                                     00B1   139 40$:	STATUS	NORMAL			; SET NORMAL COMPLETION
                                 05  00B4   140 50$:	RSB				; 
                          004F   30  00B5   141 60$:	BSBW	SETNAM			; SET LOGICAL NAME TO DELETE
                          1B     10  00B8   142 	BSBB	100$			; CHECK FOR QUALIFERS
                          07     11  00BA   143 	BRB	70$			;
         FA AD            03     E1  00BC   144 65$:	BBC	#WRK_V_EQUAL,WRK_W_FLAGS(FP),80$ ; BR IF NO "=" SEEN
                          10         00C0       
                          59     D4  00C1   145 	CLRL	R9			; NO PARAMETERS - DELETE ALL
                                     00C3   146 70$:	$DELLOG_S R7,(R9),#PSL$C_SUPER	; DELETE LOGICAL NAMES
                                 05  00D0   147 	RSB				;
                                     00D1   148  
                                     00D1   149 ;
                                     00D1   150 ; COMMAND HAS INVALID SYNTAX
                                     00D1   151 ;
                                     00D1   152  
MCRLOGICL       - LOGICAL NAME MCR COMMAND EXECUTION             22-AUG-1978 01:45:18   VAX-11 MACRO X0.3-11               Page   5
01              ASSIGN LOGICAL NAME TO EQUIVALENCE STRING                                                                        (1)

                                     00D1   153 80$:	STATUS	INSFPRM			; TELL ERROR
                                 05  00D4   154 	RSB				;
                                     00D5   155 100$:	GETDVAL				; TAKE RESULT DESCRIPTOR APART
            01            55     D1  00D8   156 	CMPL	R5,#PTR_K_PARMQUAL	; IS THIS FOR A QUALIFIER
                          06     14  00DB   157 	BGTR	110$			; BR IF NO
            57         FF A1     9E  00DD   158 	MOVAB	LOG$C_SYSTEM-1(R1),R7	; GET THE TABLE NUMBER
                          F2     11  00E1   159 	BRB	100$			; LOOK FOR MORE
                                 05  00E3   160 110$:	RSB
                                     00E4   161 	.DSABL	LSB
MCRLOGICL       - LOGICAL NAME MCR COMMAND EXECUTION             22-AUG-1978 01:45:18   VAX-11 MACRO X0.3-11               Page   6
01              DEALLOCATE DEVICE                                                                                                (1)

                                     00E4   163 	.SBTTL	DEALLOCATE DEVICE
                                     00E4   164 ;+
                                     00E4   165 ; MCR$DEALLOCATE - DEALLOCATE DEVICE
                                     00E4   166 ;
                                     00E4   167 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE DEALLOCATE
                                     00E4   168 ; MCR COMMAND.
                                     00E4   169 ;
                                     00E4   170 ; INPUTS:
                                     00E4   171 ;
                                     00E4   172 ;	R8 = ADDRESS OF SCRATCH BUFFER DESCRIPTOR.
                                     00E4   173 ;	R9 = ADDRESS OF SCRATCH STACK.
                                     00E4   174 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     00E4   175 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     00E4   176 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     00E4   177 ;
                                     00E4   178 ; OUTPUTS:
                                     00E4   179 ;
                                     00E4   180 ;	THE SPECIFIED DEVICE IS DEALLOCATED OR ALL DEVICES ARE DEALLOCATED.
                                     00E4   181 ;-
                                     00E4   182  
                                     00E4   183 MCR$DEALLOCAT::				; DEALLOCATE DEVICE
                          11     10  00E4   184 	BSBB	GETDEV			; GET DEVICE NAME TO DEALLOCATE
            02            50     E8  00E6   185 	BLBS	R0,10$			; BR IF DEVICE NAME HERE
                          59     D4  00E9   186 	CLRL	R9			; DEALLOCATE ALL
                                     00EB   187 10$:	$DALLOC_S (R9)			; DEALLOCATE DEVICE
                                 05  00F6   188 	RSB				; 
                                     00F7   189  
                                     00F7   190 ;+
                                     00F7   191 ; GETDEV - GET DEVICE NAME
                                     00F7   192 ;
                                     00F7   193 ; COMMON ROUTINE TO GET A DEVICE NAME AND REMOVE COLON IF PRESENT
                                     00F7   194 ;
                                     00F7   195 ; INPUTS:	SAME AS DEASSIGN AND DEALLOCATE
                                     00F7   196 ;-
                                     00F7   197  
                                     00F7   198 GETDEV:	GETDVAL				; GET NEXT DESCRIPTOR VALUES
                          50     D4  00FA   199 	CLRL	R0			; ASSUME NOT A PARAMETER
            03            55     91  00FC   200 	CMPB	R5,#PTR_K_PARAMETR	; ITEM TYPE PARAMETER?
                          05     12  00FF   201 	BNEQ	20$			; BR IF NO
                          04     10  0101   202 	BSBB	SETNAM			; SET THE NAME
                                     0103   203 	STATUS	NORMAL			; SET GOOD STATUS
                                 05  0106   204 20$:	RSB				;
                                     0107   205  
                                     0107   206 ;
                                     0107   207 ; LOCAL ROUTINE TO SET THE DEVICE NAME DESCRIPTOR
                                     0107   208 ;
                                     0107   209  
                                     0107   210 SETNAM:	COMPSTRING			; REMOVE QUOTES
            3A            7142   91  010A   211 	CMPB	-(R1)[R2],#^A/:/	; NAME END WITH COLON
                          02     13  010E   212 	BEQL	10$			; BR IF YES
                          51     D6  0110   213 	INCL	R1			; NO - PUT IT BACK
            79            51     7D  0112   214 10$:	MOVQ	R1,-(R9)		; SAVE DEVICE NAME DESCRIPTOR
                                 05  0115   215 	RSB
                                     0116   216  
                                     0116   217 	.END
MCRLOGICL       - LOGICAL NAME MCR COMMAND EXECUTION             22-AUG-1978 01:45:18   VAX-11 MACRO X0.3-11               Page   7
SYMBOL TABLE                                                                                                                     (1)

$$$            = 00000004            CLI$_NOTNEG    = 000380D8            MCR_M_DELINP   = 00000080            
$$$GBL         = 00000000            CLI$_NOVALU    = 000380D0            MCR_M_DOLLARS  = 00000100            
$QUALNUM$      = 00000002            CLI$_NOVALUE   = 0003882A            MCR_M_ESCAPE   = 00000004            
A                0000000A R     03   CLI$_NULFIL    = 000380E0            MCR_M_ESCTRM   = 00000200            
ALLOCATE         00000000 R     03   CLI$_NUMBER    = 000380E8            MCR_M_GLOBAL   = 00000400            
B                00000035 R     03   CLI$_ONCOMD    = 000380F0            MCR_M_LOWER    = 00000800            
BIT...         = 00000000            CLI$_ONERR     = 000380F8            MCR_M_OPNINP   = 00000040            
CLI$K_ASN_GBL  = 00000001  G         CLI$_ONEVAL    = 00038158            MCR_M_RAD50    = 00000001            
CLI$K_ASN_GROU = 00000002  G         CLI$_ONLEVL    = 00038100            MCR_M_STRSUB   = 00001000            
CLI$K_ASN_TERM = 00000003  G         CLI$_ONOVF     = 00038108            MCR_V_ALPHAN   = 00000001            
CLI$K_DEAL_ALL = 00000001            CLI$_OVRFLW    = 00038160            MCR_V_DEFALT   = 00000003            
CLI$_ABFNAM    = 000381B8            CLI$_PARMDEL   = 00038110            MCR_V_DELINP   = 00000007            
CLI$_ABKEYW    = 00038000            CLI$_PROC_ID   = 0003FFF1            MCR_V_DOLLARS  = 00000008            
CLI$_ABVERB    = 00038008            CLI$_QUEJOBCRE = 0003FFF9            MCR_V_ESCAPE   = 00000002            
CLI$_BADRET    = 00038198            CLI$_REQPRMABS = 00038812            MCR_V_ESCTRM   = 00000009            
CLI$_BADTEXT   = 000381B0            CLI$_RSLOVF    = 00038118            MCR_V_FORCMD   = 0000000E            
CLI$_BUFOVF    = 00038018            CLI$_SKPDAT    = 00038120            MCR_V_GLOBAL   = 0000000A            
CLI$_COMPLX    = 00038020            CLI$_SPARE0    = 00038010            MCR_V_LOWER    = 0000000B            
CLI$_CONFQUAL  = 00038802            CLI$_SPARE1    = 00038058            MCR_V_OPNINP   = 00000006            
CLI$_CREQUEJOB = 0003884A            CLI$_STKOVF    = 00038128            MCR_V_RAD50    = 00000000            
CLI$_DEFOVF    = 00038028            CLI$_SUBMITERR = 00038852            MCR_V_STRSUB   = 0000000C            
CLI$_DEVALSPL  = 0003885A            CLI$_SYMDEL    = 00038130            MSGBUFSIZ      = 00000084            
CLI$_DEVNOTFOR = 0003887A            CLI$_SYMOVF    = 00038138            PRC_B_DEFRADIX   00000092            
CLI$_DEVNOTSPL = 00038862            CLI$_UNDFIL    = 00038188            PRC_B_EXMDEPMOD  00000091            
CLI$_DIRECT    = 00038030            CLI$_UNDSYM    = 00038140            PRC_B_EXMDEPWID  00000090            
CLI$_EXPSYN    = 00038038            CLI$_UNPROPARM = 00038170            PRC_K_DEC      = 00000001            
CLI$_FILOPN    = 00038190            CLI$_UNPROQUAL = 00038168            PRC_K_HEX      = 00000000            
CLI$_ILLVAL    = 0003883A            CLI$_USGOTO    = 00038148            PRC_K_LENGTH     000000A0            
CLI$_IMCHNG    = 00038040            CLI$_VALCNVERR = 00038832            PRC_K_OCT      = 00000002            
CLI$_IMGFNF    = 00038872            CLI$_VALREQ    = 00038150            PRC_L_CLIWRK0    0000005C            
CLI$_INSFPRM   = 00038048            CMDBUFSIZ      = 000001FC            PRC_L_CLIWRK1    00000060            
CLI$_INVKEY    = 00038178            GBL...         = 00000000            PRC_L_CLIWRK2    00000064            
CLI$_INVQUAL   = 0003880A            GETDEV           000000F7 R     03   PRC_L_CLIWRK3    00000068            
CLI$_INVQUALNUM= 0003881A            INPBUFSIZ      = 00000084            PRC_L_CLIWRK4    0000006C            
CLI$_INVREQTYP = 00038822            LOG$B_AMOD       0000000E            PRC_L_ERRRAB     00000010            
CLI$_INVRSP    = 00038180            LOG$B_TABLE      0000000B            PRC_L_EXMDEPADR  0000008C            
CLI$_INVUIC    = 000381A8            LOG$B_TYPE       0000000A            PRC_L_EXTARG     00000078            
CLI$_IVCHAR    = 00038050            LOG$C_GROUP    = 00000001            PRC_L_EXTBLK     00000070            
CLI$_IVDEVTYPE = 0003886A            LOG$C_LENGTH     00000014            PRC_L_EXTCOD     00000080            
CLI$_IVFNAM    = 000381C0            LOG$C_NAMLENGTH= 00000040            PRC_L_EXTHND     00000074            
CLI$_IVKEYW    = 00038060            LOG$C_PROCESS  = 00000002            PRC_L_EXTPRM     0000007C            
CLI$_IVOPER    = 00038068            LOG$C_SYSTEM   = 00000000            PRC_L_INDEPTH    00000048            
CLI$_IVPROT    = 00038070            LOG$K_LENGTH     00000014            PRC_L_INDFAB     0000001C            
CLI$_IVQLOC    = 00038078            LOG$L_LTBL       00000004            PRC_L_INDINPRAB  00000014            
CLI$_IVSYMB    = 00038080            LOG$L_LTFL       00000000            PRC_L_INDOUTRAB  00000018            
CLI$_IVVALU    = 00038088            LOG$L_MBXUCB     00000010            PRC_L_INPRAB     00000008            
CLI$_IVVERB    = 00038090            LOG$T_NAME       00000014            PRC_L_LSTSTATUS  00000094            
CLI$_MAXPARM   = 00038098            LOG$W_GROUP      0000000C            PRC_L_ONCTLY     0000009C            
CLI$_MULKEY    = 000381A0            LOG$W_SIZE       00000008            PRC_L_ONERROR    00000058            
CLI$_NOATFIL   = 000380A0            MCR$ALLOCATE     00000035 RG    03   PRC_L_OUTRAB     0000000C            
CLI$_NOCCAT    = 000380A8            MCR$ASSIGN       00000070 RG    03   PRC_L_PROCUIC    00000098            
CLI$_NOCOMD    = 000380B0            MCR$COMPSTRING   ********   X   03   PRC_L_SAVAP      00000000            
CLI$_NOKEYW    = 000380B8            MCR$DEALLOCAT    000000E4 RG    03   PRC_L_SAVFP      00000004            
CLI$_NOLIST    = 000380C0            MCR$GETDVAL      ********   X   03   PRC_L_SEVERITY   00000040            
CLI$_NOOPTPRS  = 00038842            MCR$MSGOUT       ********   X   03   PRC_L_STACKLM    00000088            
CLI$_NOQUAL    = 000380C8            MCR_M_ALPHAN   = 00000002            PRC_L_STACKPT    00000084            
CLI$_NORMAL    = 00030001            MCR_M_DEFALT   = 00000008            PRC_L_STATUS     00000044            
MCRLOGICL       - LOGICAL NAME MCR COMMAND EXECUTION             22-AUG-1978 01:45:18   VAX-11 MACRO X0.3-11               Page   8
SYMBOL TABLE                                                                                                                     (1)

PRC_L_SYMBOL     0000004C            PSL$C_SUPER    = 00000002            QUA_B_OFFSET     00000000            
PRC_M_CNTRLY   = 00000002            PSL$C_USER     = 00000003            QUA_B_PARMCNT    00000009            
PRC_M_DBGQUAL  = 00000200            PSL$M_CM       = 80000000            QUA_G_CHNGLST    00000007            
PRC_M_DBGTRUE  = 00000400            PSL$M_CURMOD   = 03000000            QUA_M_BATDEF   = 00000100            
PRC_M_DISABL   = 00000004            PSL$M_DV       = 00000080            QUA_M_CHNGLIST = 00000001            
PRC_M_EXIT     = 00000008            PSL$M_FPD      = 08000000            QUA_M_DEFTRUE  = 00000080            
PRC_M_GOEOF    = 00000001            PSL$M_FU       = 00000040            QUA_M_FILE     = 00000004            
PRC_M_GOTO     = 00000010            PSL$M_IPL      = 001F0000            QUA_M_IMAGE    = 00000400            
PRC_M_HANGUP   = 00001000            PSL$M_IS       = 04000000            QUA_M_INTDEF   = 00000200            
PRC_M_IND      = 00000020            PSL$M_IV       = 00000020            QUA_M_KEYVAL   = 00004000            
PRC_M_MODE     = 00000040            PSL$M_PRVMOD   = 00C00000            QUA_M_LOCALKEY = 00000002            
PRC_M_NOCTLY   = 00004000            PSL$M_SAFBITS  = 000037FF            QUA_M_NEG      = 00000040            
PRC_M_PAUSE    = 00002000            PSL$M_TBIT     = 00000010            QUA_M_ONEVAL   = 00002000            
PRC_M_USRDET   = 00000100            PSL$M_TP       = 40000000            QUA_M_OUTPUT   = 00000800            
PRC_M_VERIFY   = 00000080            PSL$S_CURMOD   = 00000002            QUA_M_PARM     = 00000010            
PRC_M_YLEVEL   = 00000800            PSL$S_IPL      = 00000005            QUA_M_VAL      = 00000020            
PRC_Q_ALLOCREG   00000020            PSL$S_PRVMOD   = 00000002            QUA_M_VALREQ   = 00001000            
PRC_Q_GLOBAL     00000028            PSL$V_CM       = 0000001F            QUA_M_VERB     = 00000008            
PRC_Q_LABEL      00000030            PSL$V_CURMOD   = 00000018            QUA_S_MAXPARM  = 00000004            
PRC_Q_LOCAL      00000038            PSL$V_DV       = 00000007            QUA_S_MINPARM  = 00000004            
PRC_V_CNTRLY   = 00000001            PSL$V_FPD      = 0000001B            QUA_V_BATDEF   = 00000008            
PRC_V_DBGQUAL  = 00000009            PSL$V_FU       = 00000006            QUA_V_CHNGLIST = 00000000            
PRC_V_DBGTRUE  = 0000000A            PSL$V_IPL      = 00000010            QUA_V_DEFTRUE  = 00000007            
PRC_V_DISABL   = 00000002            PSL$V_IS       = 0000001A            QUA_V_FILE     = 00000002            
PRC_V_EXIT     = 00000003            PSL$V_IV       = 00000005            QUA_V_IMAGE    = 0000000A            
PRC_V_GOEOF    = 00000000            PSL$V_PRVMOD   = 00000016            QUA_V_INTDEF   = 00000009            
PRC_V_GOTO     = 00000004            PSL$V_TBIT     = 00000004            QUA_V_KEYVAL   = 0000000E            
PRC_V_HANGUP   = 0000000C            PSL$V_TP       = 0000001E            QUA_V_LOCALKEY = 00000001            
PRC_V_IND      = 00000005            PTR_K_BLANK    = 00000001            QUA_V_MAXPARM  = 00000004            
PRC_V_MODE     = 00000006            PTR_K_COLON    = 00000002            QUA_V_MINPARM  = 00000000            
PRC_V_NOCTLY   = 0000000E            PTR_K_COMDQUAL = 00000000            QUA_V_NEG      = 00000006            
PRC_V_PAUSE    = 0000000D            PTR_K_COMMA    = 00000005            QUA_V_ONEVAL   = 0000000D            
PRC_V_USRDET   = 00000008            PTR_K_ENDLINE  = 00000004            QUA_V_OUTPUT   = 0000000B            
PRC_V_VERIFY   = 00000007            PTR_K_LPAREN   = 00000007            QUA_V_PARM     = 00000004            
PRC_V_YLEVEL   = 0000000B            PTR_K_PARAMETR = 00000003            QUA_V_VAL      = 00000005            
PRC_W_CLIFLAG    00000052            PTR_K_PARMQUAL = 00000001            QUA_V_VALREQ   = 0000000C            
PRC_W_ERRIFI     00000052            PTR_K_PLUS     = 00000004            QUA_V_VERB     = 00000003            
PRC_W_FLAGS      00000054            PTR_K_QUALVALU = 00000002            QUA_W_FLAGS      00000004            
PRC_W_INPCHAN    00000050            PTR_K_RPAREN   = 00000006            QUA_W_QUALIST    00000007            
PRC_W_ONLEVEL    00000056            PTR_K_SLASH    = 00000003            RSLBUFSIZ      = 00000180            
PRO_B_FLAGS      00000001            PTR_L_DESCR      00000000            SETNAM           00000107 R     03   
PRO_B_PROMPT     00000000            PTR_S_FLAGS    = 00000004            SS$_ABORT      = 0000002C            
PRO_K_LENGTH     00000002            PTR_S_OFFSET   = 0000000C            SS$_ACCONFLICT = 00000800            
PRO_M_CONCAT   = 00000001            PTR_S_TERM     = 00000004            SS$_ACCVIO     = 0000000C            
PRO_M_IMPCAT   = 00000002            PTR_S_TYPE     = 00000004            SS$_ACPVAFUL   = 000002FC            
PRO_M_LIST     = 00000004            PTR_S_VALUE    = 00000008            SS$_ARTRES     = 00000474            
PRO_M_OPTION   = 00000008            PTR_V_EQUAL    = 00000000            SS$_ASTFLT     = 0000040C            
PRO_M_REQ      = 00000010            PTR_V_FLAGS    = 00000014            SS$_BADATTRIB  = 00000034            
PRO_M_STRING   = 00000020            PTR_V_NEGATE   = 00000000            SS$_BADCHKSUM  = 00000808            
PRO_V_CONCAT   = 00000000            PTR_V_OFFSET   = 00000008            SS$_BADESCAPE  = 0000003C            
PRO_V_IMPCAT   = 00000001            PTR_V_TERM     = 00000018            SS$_BADFILEHDR = 00000810            
PRO_V_LIST     = 00000002            PTR_V_TYPE     = 0000001C            SS$_BADFILENAME= 00000818            
PRO_V_OPTION   = 00000003            PTR_V_VALUE    = 00000000            SS$_BADFILEVER = 00000820            
PRO_V_REQ      = 00000004            QUA_B_CODE       00000001            SS$_BADIMGHDR  = 00000044            
PRO_V_STRING   = 00000005            QUA_B_DEFVAL     00000003            SS$_BADIRECTORY= 00000828            
PSL$C_EXEC     = 00000001            QUA_B_IMAGE      00000006            SS$_BADPARAM   = 00000014            
PSL$C_KERNEL   = 00000000            QUA_B_INDEX      00000002            SS$_BADSTACK   = 000002B4            
MCRLOGICL       - LOGICAL NAME MCR COMMAND EXECUTION             22-AUG-1978 01:45:18   VAX-11 MACRO X0.3-11               Page   9
SYMBOL TABLE                                                                                                                     (1)

SS$_BEGOFFILE  = 00000938            SS$_FLTOVF     = 0000048C            SS$_NOMOREFILES= 00000930            
SS$_BLOCKCNTERR= 00000940            SS$_FLTUND     = 0000049C            SS$_NONEXDRV   = 000001C4            
SS$_BREAK      = 00000414            SS$_FORMAT     = 000000BC            SS$_NONEXPR    = 000008E8            
SS$_BUFBYTALI  = 0000030C            SS$_GPTFULL    = 000000C4            SS$_NONLOCAL   = 000008F0            
SS$_BUFFEROVF  = 00000601            SS$_GSDFULL    = 000000CC            SS$_NOPRIV     = 00000024            
SS$_BUGCHECK   = 000002A4            SS$_HANGUP     = 000002CC            SS$_NORMAL     = 00000001            
SS$_CANCEL     = 00000830            SS$_HEADERFULL = 000008C8            SS$_NOSIGNAL   = 00000900            
SS$_CHANINTLK  = 0000004C            SS$_IDXFILEFULL= 000008D0            SS$_NOSOLICIT  = 00000284            
SS$_CLIFRCEXT  = 00000980            SS$_ILLBLKNUM  = 000000DC            SS$_NOSUCHDEV  = 00000908            
SS$_CMODSUPR   = 0000041C            SS$_ILLCNTRFUNC= 000000E4            SS$_NOSUCHFILE = 00000910            
SS$_CMODUSER   = 00000424            SS$_ILLEFC     = 000000EC            SS$_NOSUCHNODE = 0000028C            
SS$_COMPAT     = 0000042C            SS$_ILLIOFUNC  = 000000F4            SS$_NOSUCHSEC  = 00000978            
SS$_CONTINUE   = 00000001            SS$_ILLLBLAST  = 00000968            SS$_NOTAPEOP   = 00000264            
SS$_CONTROLC   = 00000651            SS$_ILLPAGCNT  = 000000FC            SS$_NOTFILEDEV = 000001CC            
SS$_CONTROLO   = 00000609            SS$_ILLSEQOP   = 000002DC            SS$_NOTINTBLSZ = 000001D4            
SS$_CONTROLY   = 00000611            SS$_ILLSER     = 00000104            SS$_NOTLABELMT = 000001DC            
SS$_CREATED    = 00000619            SS$_ILLUSRLBLRD= 00000958            SS$_NOTMODIFIED= 00000659            
SS$_CTRLERR    = 00000054            SS$_ILLUSRLBLWT= 00000960            SS$_NOTNETDEV  = 000002EC            
SS$_DATACHECK  = 0000005C            SS$_INCVOLLABEL= 0000010C            SS$_NOTRAN     = 00000629            
SS$_DATAOVERUN = 00000838            SS$_INSFARG    = 00000114            SS$_NOTSQDEV   = 000001E4            
SS$_DEBUG      = 0000046C            SS$_INSFMEM    = 00000124            SS$_OPCCUS     = 00000434            
SS$_DECOVF     = 000004A4            SS$_INSFRAME   = 0000012C            SS$_OPCDEC     = 0000043C            
SS$_DEVACTIVE  = 000002C4            SS$_INSFWSL    = 0000011C            SS$_OPINCOMPL  = 000002D4            
SS$_DEVALLOC   = 00000840            SS$_INTDIV     = 00000484            SS$_PAGOWNVIO  = 000001EC            
SS$_DEVALRALLOC= 00000641            SS$_INTOVF     = 0000047C            SS$_PAGRDERR   = 00000444            
SS$_DEVASSIGN  = 00000848            SS$_IVADDR     = 00000134            SS$_PARITY     = 000001F4            
SS$_DEVFOREIGN = 00000064            SS$_IVCHAN     = 0000013C            SS$_PARTESCAPE = 000001FC            
SS$_DEVICEFULL = 00000850            SS$_IVCHNLSEC  = 0000026C            SS$_PFMBSY     = 00000204            
SS$_DEVMOUNT   = 0000006C            SS$_IVDEVNAM   = 00000144            SS$_PLHLDR     = 00000404            
SS$_DEVNOTALLOC= 00000858            SS$_IVGSDNAM   = 0000014C            SS$_PSTFULL    = 0000020C            
SS$_DEVNOTMBX  = 00000074            SS$_IVLOGNAM   = 00000154            SS$_RADRMOD    = 0000044C            
SS$_DEVNOTMOUNT= 0000007C            SS$_IVLOGTAB   = 0000015C            SS$_REJECT     = 00000294            
SS$_DEVOFFLINE = 00000084            SS$_IVPROTECT  = 000002F4            SS$_REMOTE     = 00000649            
SS$_DIRFULL    = 00000860            SS$_IVQUOTAL   = 00000164            SS$_RESIGNAL   = 00000918            
SS$_DRVERR     = 0000008C            SS$_IVSECFLG   = 0000016C            SS$_RESULTOVF  = 00000214            
SS$_DUPFILENAME= 00000868            SS$_IVSECIDCTL = 000002E4            SS$_ROPRAND    = 00000454            
SS$_DUPLNAM    = 00000094            SS$_IVSSRQ     = 00000174            SS$_SECTBLFUL  = 0000021C            
SS$_ENDOFFILE  = 00000870            SS$_IVSTSFLG   = 0000017C            SS$_SSFAIL     = 0000045C            
SS$_ENDOFTAPE  = 00000878            SS$_IVTIME     = 00000184            SS$_SUBRNG     = 000004AC            
SS$_ENDOFUSRLBL= 00000970            SS$_LCKPAGFUL  = 000000D4            SS$_SUPERSEDE  = 00000631            
SS$_EXQUOTA    = 0000001C            SS$_LENVIO     = 0000018C            SS$_TAPEPOSLOST= 00000224            
SS$_EXTIDXFILE = 00000880            SS$_LKWSETFUL  = 00000194            SS$_TBIT       = 00000464            
SS$_FCPREADERR = 00000888            SS$_MBFULL     = 000008D8            SS$_TIMEOUT    = 0000022C            
SS$_FCPREPSTN  = 00000988            SS$_MBTOOSML   = 0000019C            SS$_TOOMANYVER = 00000990            
SS$_FCPREWNDERR= 00000890            SS$_MCHECK     = 000002BC            SS$_TOOMUCHDATA= 0000029C            
SS$_FCPSPACERR = 00000898            SS$_MEDOFL     = 000001A4            SS$_UNASEFC    = 00000234            
SS$_FCPWRITERR = 000008A0            SS$_MSGNOTFND  = 00000621            SS$_UNSAFE     = 0000023C            
SS$_FILACCERR  = 0000009C            SS$_MTLBLLONG  = 00000304            SS$_UNWIND     = 00000920            
SS$_FILALRACC  = 000000A4            SS$_MUSTCLOSEFL= 00000948            SS$_UNWINDING  = 00000928            
SS$_FILELOCKED = 000008A8            SS$_NOAQB      = 00000314            SS$_VASFULL    = 00000244            
SS$_FILENUMCHK = 000008B0            SS$_NODATA     = 000001AC            SS$_VECINUSE   = 0000024C            
SS$_FILESEQCHK = 000008B8            SS$_NOHANDLER  = 000008F8            SS$_VOLINV     = 00000254            
SS$_FILESTRUCT = 000008C0            SS$_NOHOMEBLK  = 000008E0            SS$_WAITUSRLBL = 00000950            
SS$_FILNOTACC  = 000000AC            SS$_NOIOCHAN   = 000001B4            SS$_WASCLR     = 00000001            
SS$_FILNOTCNTG = 000002AC            SS$_NOLINKS    = 0000027C            SS$_WASECC     = 00000639            
SS$_FILNOTEXP  = 000000B4            SS$_NOLOGNAM   = 000001BC            SS$_WASSET     = 00000009            
SS$_FLTDIV     = 00000494            SS$_NOMBX      = 00000274            SS$_WRITLCK    = 0000025C            
MCRLOGICL       - LOGICAL NAME MCR COMMAND EXECUTION             22-AUG-1978 01:45:18   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (1)

SS$_WRONGACP   = 0000031C            
SUPERSEDE        0000000A R     03   
SYS$ALLOC        ********   X   03   
SYS$CRELOG       ********   X   03   
SYS$DALLOC       ********   X   03   
SYS$DELLOG       ********   X   03   
WRK_AB_BUFFER    FFFFFD44            
WRK_AG_RESULT    FFFFFBC0            
WRK_B_CMDFLG     FFFFFFC9            
WRK_B_CURADX     FFFFFFCA            
WRK_B_PARMCNT    FFFFFFCB            
WRK_B_VERBTYP    FFFFFFC8            
WRK_K_LENGTH     FFFFFBC0            
WRK_L_CHARPTR    FFFFFFFC            
WRK_L_IMAGE      FFFFFFEC            
WRK_L_MAXPARM    FFFFFFCC            
WRK_L_MINPARM    FFFFFFD0            
WRK_L_PAROUT     FFFFFFF0            
WRK_L_PROMPT     FFFFFFF4            
WRK_L_QUABLK     FFFFFFE8            
WRK_L_RSLNXT     FFFFFD40            
WRK_L_SAVAP      FFFFFFD8            
WRK_L_SAVFP      FFFFFFDC            
WRK_L_SAVSP      FFFFFFD4            
WRK_M_ALL      = 00000001            
WRK_M_ASK      = 00000100            
WRK_M_COMMAND  = 00000002            
WRK_M_CONTINU  = 00000400            
WRK_M_EQUAL    = 00000008            
WRK_M_IMCHNG   = 00000004            
WRK_M_QUAL     = 00000010            
WRK_M_QUOTE    = 00000020            
WRK_M_STAR     = 00000040            
WRK_M_TRAILSPC = 00000200            
WRK_M_VERB     = 00000080            
WRK_Q_IOSB       FFFFFFE0            
WRK_V_ALL      = 00000000            
WRK_V_ASK      = 00000008            
WRK_V_COMMAND  = 00000001            
WRK_V_CONTINU  = 0000000A            
WRK_V_EQUAL    = 00000003            
WRK_V_IMCHNG   = 00000002            
WRK_V_QUAL     = 00000004            
WRK_V_QUOTE    = 00000005            
WRK_V_STAR     = 00000006            
WRK_V_TRAILSPC = 00000009            
WRK_V_VERB     = 00000007            
WRK_W_FLAGS      FFFFFFFA            
WRK_W_LOCFLG     FFFFFFF8            
_$$_           = 00000012            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFC      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
MCRLOGICL       - LOGICAL NAME MCR COMMAND EXECUTION             22-AUG-1978 01:45:18   VAX-11 MACRO X0.3-11               Page  11
PROGRAM SECTION SYNOPSIS                                                                                                         (1)

MCR$ZCODE        00000116      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
5474. BYTES LEFT IN FREE MEMORY POOL.
3364. BYTES OF RECLAIMED MEMORY.
OBJ$:MCRLOGICL,LIS$:MCRLOGICL/-SP=EXECML$/ML,LIB$:MCR/ML,SRC$:MCRLOGICL
53 MLB DIR RDS - 899 GETS TO DEFINE 35 MACROS. 66 INTER. FILE WRITES. 
