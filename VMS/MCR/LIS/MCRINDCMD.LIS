MCRINDCMD       - MCR INDIRECT COMMANDS                          22-AUG-1978 01:43:58   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      79  INDIRECT COMMAND EXECUTION
   (1)     144  ENABLE/DISABLE OPTION
   (1)     186  SEARCH TABLE
   (1)     228  DELAY EXECUTION FOR SOME TIME
   (1)     274  PAUSE EXECUTION FOR SOME TIME
   (1)     299  OPEN DATA FILE
   (1)     411  CLOSE DATA FILE
   (1)     451  DATA OUTPUT ROUTINES
MCRINDCMD       - MCR INDIRECT COMMANDS                          22-AUG-1978 01:43:58   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	MCRINDCMD - MCR INDIRECT COMMANDS
                                     0000     2 	.IDENT	/01/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; W. H. BROWN 17-NOV-1977
                                     0000    24 ;
                                     0000    25 ; MCR INDIRECT COMMANDS
                                     0000    26 ;
                                     0000    27 ; MACRO LIBRARY CALLS
                                     0000    28 ;
                                     0000    29  
                                     0000    30 	DEFCMDWRK			; DEFINE WORK AREA OFFSETS
                                     0000    31 	DEFERRCOD			; DEFINE ERROR/STATUS CODES
                                     0000    32 	$RABDEF				; RECORD ACCESS BLOCK DEFINTIONS
                                     0000    33 	$FABDEF				; FILE ACCESS BLOCK DEFINTIONS
                           0000001F  0000    34 	MCR$K_TIMEFN = 31		; SAME EVENT FLAG AS ^Y ENABLE
                                     0000    35  
                                     0000    36 ;
                                     0000    37 ; LOCAL MACRO TO DEFINE A COMMAND
                                     0000    38 ;
                                     0000    39  
                                     0000    40 	.MACRO	INDCOMD	NAME
                                     0000    41 	.SAVE
                                     0000    42 	.PSECT	MCR$ZDATA
                                     0000    43 	.ASCIC	\NAME\
                                     0000    44 	.RESTORE
                                     0000    45 	.WORD	<MCR$'NAME-INDISP>
                                     0000    46 	.ENDM
                                     0000    47  
                                     0000    48 ;
                                     0000    49 ; MACRO TO END THE INDIRECT COMMAND LIST
                                     0000    50 ;
                                     0000    51  
                                     0000    52 	.MACRO	ENDCOMD
                                     0000    53 	.SAVE
                                     0000    54 	.PSECT	MCR$ZDATA
                                     0000    55 	.BYTE	0
                                     0000    56 	.RESTORE
                                     0000    57 	.ENDM
MCRINDCMD       - MCR INDIRECT COMMANDS                          22-AUG-1978 01:43:58   VAX-11 MACRO X0.3-11               Page   2
01                                                                                                                               (1)

                                     0000    58  
                                     0000    59 ;
                                     0000    60 ; LOCAL DATA
                                     0000    61 ;
                                     0000    62  
                                 00000000    63 	.PSECT	MCR$ZDATA	BYTE,RD,NOWRT
                                     0000    64  
                                     0000    65 MCR$INDLST:				; ORIGIN OF INDIRECT COMMMAND LIST
                                     0000    66  
                                 00000000    67 	.PSECT	MCR$ZCODE	BYTE,RD,NOWRT
                                     0000    68  
                        54 41 44 2E  0000    69 DATFIL:	.ASCII	/.DAT/			; DEFAULT TYPE FOR DATA FILES
                                     0004    70  
                     41 54 41 44 00' 0004    71 ENABLS:	.ASCIC	\DATA\			; NOTE: THE ORDER OF THIS TABLE
                                 04  0004       
                     4C 4C 4F 44 00' 0009    72 	.ASCIC	\DOLL\			;	STARTING WITH DOLLARS
                                 04  0009       
               45 50 41 43 53 45 00' 000E    73 	.ASCIC	\ESCAPE\		; 	AND THE ORDER OF THE
                                 06  000E       
               4C 41 42 4F 4C 47 00' 0015    74 	.ASCIC	\GLOBAL\		;	ASSOCIATED BITS
                                 06  0015       
                  52 45 57 4F 4C 00' 001C    75 	.ASCIC	\LOWER\			;	IN THE CLIFLAG WORD
                                 05  001C       
                     53 42 55 53 00' 0022    76 	.ASCIC	\SUBS\			;	MUST MATCH
                                 04  0022       
                                 00  0027    77 	.BYTE	0			; TERMINATE THE LIST
MCRINDCMD       - MCR INDIRECT COMMANDS                          22-AUG-1978 01:43:58   VAX-11 MACRO X0.3-11               Page   3
01              INDIRECT COMMAND EXECUTION                                                                                       (1)

                                     0028    79 	.SBTTL	INDIRECT COMMAND EXECUTION
                                     0028    80 ;+
                                     0028    81 ; MCR$INDIRECT - INDIRECT COMMAND EXECUTION
                                     0028    82 ;
                                     0028    83 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE ANY
                                     0028    84 ; COMMAND STARTING WITH A ".".
                                     0028    85 ;
                                     0028    86 ; INPUTS:
                                     0028    87 ;
                                     0028    88 ;	R6 = COMMAND BUFFER DISPLAY PARAMETER.
                                     0028    89 ;	R9 = ADDRESS OF NEXT BYTE IN COMMAND BUFFER.
                                     0028    90 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     0028    91 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     0028    92 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     0028    93 ;
                                     0028    94 ; OUTPUTS:
                                     0028    95 ;
                                     0028    96 ;	THE COMMAND IS DECODED AND IF RECOGNIZED EXECUTED BY RETURNING
                                     0028    97 ;	CONTROL TO THE COMMAND MODULE.  IF THE COMMAND IS IN ERROR
                                     0028    98 ;	OR DOES NOT GET EXECUTED, THEN CONTROL IS TRANSFERED TO THE
                                     0028    99 ;	COMMAND INITIATOR.
                                     0028   100 ;
                                     0028   101 ;
                                     0028   102 ;
                                     0028   103 ;
                                     0028   104 ;		R0 = MCR$_NORMAL - NORMAL COMPLETION.
                                     0028   105 ;-
                                     0028   106  
                                 00000028   107 	.PSECT	MCR$ZCODE,BYTE,RD,NOWRT
                                     0028   108 	.ENABL	LSB
                                     0028   109  
                                     0028   110 MCR$INDCMD::				; INDIRECT COMMAND
         CA AD            08     90  0028   111 	MOVB	#8,WRK_B_CURADX(FP)	; RESET TO DEFAULT RADIX
            55       0000'CF     9E  002C   112 	MOVAB	W^MCR$INDLST,R5		; SET START OF COMMAND LIST
                          006D   30  0031   113 	BSBW	MCR$SRCTBL		; SEARCH FOR MATCH
            30            50     E9  0034   114 	BLBC	R0,90$			; BR IF NO MATCH
            01            54     AF  0037   115 	CASEW	R4,#1,S^#<<<INDEND-INDISP>/2>-1> ; DISPATCH ON COMMAND TYPE
                          15'        003A       
                                     003B   116 INDISP:	INDCOMD	IF			; IF COMMAND
                                     003D   117 	INDCOMD	SETT			; SET TRUE
                                     003F   118 	INDCOMD	SETF			; SET FALSE
                                     0041   119 	INDCOMD	SETS			; SET STRING
                                     0043   120 	INDCOMD	SETN			; SET NUMERIC VALUE
                                     0045   121 	INDCOMD	ASKS			; ASK FOR A STRING
                                     0047   122 	INDCOMD	ASKN			; ASK FOR NUMERIC VALUE
                                     0049   123 	INDCOMD	ASK			; ASK FOR A LOGICAL
                                     004B   124 	INDCOMD	INC			; ADD 1 TO VALUE
                                     004D   125 	INDCOMD	DEC			; SUBTRACT 1 FROM VALUE
                                     004F   126 	INDCOMD	OPEN			; OPEN A DATA FILE
                                     0051   127 	INDCOMD	DATA			; ADD DATA TO A FILE
                                     0053   128 	INDCOMD	CLOSE			; CLOSE THE FILE
                                     0055   129 	INDCOMD	TEST			; TEST A STRING EXPRESSION
                                     0057   130 	INDCOMD	GOTO			; GOTO LABEL
                                     0059   131 	INDCOMD	GOSUB			; GOTO SUBROUTINE
                                     005B   132 	INDCOMD	RETURN			; RETURN FROM SUBROUTINE
                                     005D   133 	INDCOMD	CHAIN			; CHAIN TO NEXT FILE
                                     005F   134 	INDCOMD	DISA			; DISABLE OPTION
MCRINDCMD       - MCR INDIRECT COMMANDS                          22-AUG-1978 01:43:58   VAX-11 MACRO X0.3-11               Page   4
01              INDIRECT COMMAND EXECUTION                                                                                       (1)

                                     0061   135 	INDCOMD	ENAB			; ENABLE AN OPTION
                                     0063   136 	INDCOMD	DELAY			; DELAY EXECUTION
                                     0065   137 	INDCOMD	PAUSE			; PAUSE INDIRECT COMMAND PROCESS
                                     0067   138 INDEND:	ENDCOMD				; END OF LIST
                                     0067   139 90$:	STATUS	IVVERB			; ILLEGAL VERB
                                 05  006A   140 	RSB				;
                                     006B   141  
                                     006B   142 	.DSABL	LSB
MCRINDCMD       - MCR INDIRECT COMMANDS                          22-AUG-1978 01:43:58   VAX-11 MACRO X0.3-11               Page   5
01              ENABLE/DISABLE OPTION                                                                                            (1)

                                     006B   144 	.SBTTL	ENABLE/DISABLE OPTION
                                     006B   145 ;+
                                     006B   146 ; MCR$ENAB - ENABLE  AN OPTION
                                     006B   147 ; MCR$DISA - DISABLE AN OPTION
                                     006B   148 ;
                                     006B   149 ; THIS ROUTINE IS ENTERED WHEN A ".DIABLE" OF .ENABLE" DIRECTIVE
                                     006B   150 ; IS ENCOUNTERD. THE SPECIFIED OPTION IS SET AS INDICATED.
                                     006B   151 ;-
                                     006B   152 	.ENABL	LSB
                                     006B   153 MCR$ENAB::				; ENABLE THE OPTION
                          01     DD  006B   154 	PUSHL	#1			; PUSH A TRUE FOR ENABLE
                          02     11  006D   155 	BRB	10$			;
                                     006F   156 MCR$DISA::				; DISABLE OPTION
                          00     DD  006F   157 	PUSHL	#0			; PUSH FALSE FOR DISABLE
                                     0071   158 10$:	MOVTOKN				; COPY TERMINATOR AND GET TOKEN
            55         8D AF     9E  0074   159 	MOVAB	ENABLS,R5		; SET TABLE ADDRESS
                          27     10  0078   160 	BSBB	MCR$SRCTBL		; SEARCH FOR OPTION
            1D            50     E9  007A   161 	BLBC	R0,60$			; BR IF NO MATCH
                          54     D7  007D   162 	DECL	R4			; WAS ENABLE = DATA
                          14     13  007F   163 	BEQL	50$			; BR IF YES
            54            07     C0  0081   164 	ADDL	#MCR_V_DOLLARS-1,R4	; FIND BIT NUMBER
         52 AB            54     E2  0084   165 	BBSS	R4,PRC_W_CLIFLAG(R11),20$ ; SET THE OPTION
                          00         0088       
            05            8E     E8  0089   166 20$:	BLBS	(SP)+,40$		; BR IF OPTION IS ENABLE
         52 AB            54     E5  008C   167 	BBCC	R4,PRC_W_CLIFLAG(R11),40$ ; CLEAR THE OPTION
                          00         0090       
                                     0091   168 40$:	STATUS	NORMAL
                                 05  0094   169 	RSB
                                     0095   170  
                                     0095   171 ;
                                     0095   172 ; HANDLE ".ENABLE DATA"
                                     0095   173 ;
                                     0095   174  
                          01     BA  0095   175 50$:	POPR	#^M<R0>			; GET FLAG
                          01A2   31  0097   176 	BRW	MCR$ENABDATA		; HANDLE ENABLE DATA
                                     009A   177 ;
                                     009A   178 ; UNRECOGNIZED OPTION
                                     009A   179 ;
                          8E     D5  009A   180 60$:	TSTL	(SP)+			; CLEAR FLAG FROM THE STACK
                                     009C   181 	STATUS	INVKEY			; SET ERROR
                                 05  00A0   182 	RSB				;
                                     00A1   183  
                                     00A1   184 	.DSABL	LSB
MCRINDCMD       - MCR INDIRECT COMMANDS                          22-AUG-1978 01:43:58   VAX-11 MACRO X0.3-11               Page   6
01              SEARCH TABLE                                                                                                     (1)

                                     00A1   186 	.SBTTL	SEARCH TABLE
                                     00A1   187 ;+
                                     00A1   188 ; MCR$SCRTBL - SEARCH TABLE
                                     00A1   189 ;
                                     00A1   190 ; THIS ROUTINE IS CALLED TO SEARCH A TABLE FOR A MATCH OF A KEYWORD.
                                     00A1   191 ; ONLY THE LENGTH OF THE ENTRY IN THE TABLE IS CHECKED. THE KEY
                                     00A1   192 ; ENTERED MUST BE AS LONG AS THAT ENTERED BUT MAY BE LONGER.
                                     00A1   193 ; TABLE MUST BE ORDERED WITH TOKENS AFTER ANY OTHER TOKEN OF
                                     00A1   194 ; WHICH IT IS A SUBSTRING.
                                     00A1   195 ;
                                     00A1   196 ; INPUTS:
                                     00A1   197 ;
                                     00A1   198 ;	R1 = THE LENGTH OF THE KEYWORD TO MATCH
                                     00A1   199 ;	R2 = STARTING ADDRESS
                                     00A1   200 ;	R5 = THE TABLE ADDRESS TO SEARCH
                                     00A1   201 ;
                                     00A1   202 ; OUTPUTS:
                                     00A1   203 ;
                                     00A1   204 ;	R4 IS THE INDEX INTO THE TABLE IF MATCH FOUND
                                     00A1   205 ;
                                     00A1   206 ;	R0 = ZERO IF NO MATCH
                                     00A1   207 ;	R0 = TRUE IF MATCH
                                     00A1   208 ;
                                     00A1   209 ;	REGISTER R3 - R5 ARE MODIFIED
                                     00A1   210 ;-
                                     00A1   211  
                                     00A1   212 MCR$SRCTBL::				;
                          54     D4  00A1   213 	CLRL	R4			; ZERO CASE INDEX
                          06     BB  00A3   214 	PUSHR	#^M<R1,R2>		; PUSH DESCRIPTOR FOR TOKEN TO MATCH
                          54     D6  00A5   215 10$:	INCL	R4			; COUNT UP COMMAND CASE INDEX
            51            65     9E  00A7   216 	MOVAB	(R5),R1			; COPY ADDRESS OF NEXT KEYWORK
            50            81     9A  00AA   217 	MOVZBL	(R1)+,R0		; FIND MAXIMUM LENGTH OF COMMAND NAME
                          12     13  00AD   218 	BEQL	30$			; BR IF NO COMMAND MATCH
            51            50     C1  00AF   219 	ADDL3	R0,R1,R5		; SET ADDRESS OF NEXT KEYWORD
                          55         00B2       
            6E            50     D1  00B3   220 	CMPL	R0,(SP)			; IS NAME VERB SHORTER THAN USER ENTERED
                          ED     14  00B6   221 	BGTR	10$			; BR IF NO MATCH POSSIBLE
            61            50     29  00B8   222 20$:	CMPC	R0,(R1),@4(SP)		; CHECK FOR COMMAND MATCH
                       04 BE         00BB       
                          E6     12  00BD   223 	BNEQ	10$			; BR IF NO MATCH
                          50     D6  00BF   224 	INCL	R0			; SET NORMAL STATUS
                          06     BA  00C1   225 30$:	POPR	#^M<R1,R2>		; RESTORE DESCRIPTOR FOR TOKEN
                                 05  00C3   226 RSB0:	RSB				;
MCRINDCMD       - MCR INDIRECT COMMANDS                          22-AUG-1978 01:43:58   VAX-11 MACRO X0.3-11               Page   7
01              DELAY EXECUTION FOR SOME TIME                                                                                    (1)

                                     00C4   228 	.SBTTL	DELAY EXECUTION FOR SOME TIME
                                     00C4   229 ;+
                                     00C4   230 ; MCR$DELAY - DELAY EXECUTION FOR SOME TIME
                                     00C4   231 ;
                                     00C4   232 ; THIS ROUTINE IS CALLED TO PROCESS THE DELAY MCR INDIRECT COMMAND.
                                     00C4   233 ; THE COMMAND INTERPRETER IS SUSPENDED FOR THAT AMOUNT OF TIME.
                                     00C4   234 ;
                                     00C4   235 ; INPUTS:
                                     00C4   236 ;
                                     00C4   237 ;	R9 = NEXT CHARACTER IN THE PARSE BUFFER
                                     00C4   238 ;	R10 = RESULT PARSE DESCRIPTOR BUFFER POINTER
                                     00C4   239 ;	R11 = PROCESS IMPURE AREA
                                     00C4   240 ;	FP = COMMAND IMPURE AREA
                                     00C4   241 ;
                                     00C4   242 ; OUTPUTS:
                                     00C4   243 ;
                                     00C4   244 ;	THE DELAY IS EFFECTED.
                                     00C4   245 ;-
                                     00C4   246 	.ENABL	LSB
                           54 53 4D  00C4   247 10$:	.ASCII	\MST\			; MINUTES, SECONDS, TICKS
                           FFF0BDC0  00C7   248 20$:	.LONG	-10000000/10		; 100 NANOSECONDS PER TICK
                           FF676980  00CB   249 	.LONG	-10000000*1		; 100 NANOSECONDS PER SECOND
                           DC3CBA00  00CF   250 	.LONG	-10000000*60		; 100 NANOSECONDS PER MINUTE
                                     00D3   251 MCR$DELAY:
                                     00D3   252 	GETOKEN				; GET UNITS AND UNIT INDICATOR
                          41     13  00D6   253 	BEQL	40$			; BR IF NONE
                          50     95  00D8   254 	TSTB	R0			; CHECK FOR END OF LINE
                          3D     12  00DA   255 	BNEQ	40$			; BR IF NOT END OF LINE
                          51     D7  00DC   256 	DECL	R1			; SUBTRACT 1 FROM LENGTH FOR UNITS
            52            51     7D  00DE   257 	MOVQ	R1,R2			; SET STRING DESCRIPTOR FOR CONVERT
                                     00E1   258 	CNVNUMDEC			; CONVERT NUMBER TO DECIMAL
                          33     12  00E4   259 	BNEQ	40$			; BR IF ERROR CONVERTING NUMBER
            55            51     D0  00E6   260 	MOVL	R1,R5			; SAVE UNIT COUNT
            03            63     3A  00E9   261 	LOCC	(R3),#3,10$		; LOCATE THE UNIT
                       D6 AF         00EC       
                          29     13  00EE   262 	BEQL	40$			; BR IF SYNTAX ERROR
            55         CF AF40   7A  00F0   263 	EMUL	20$-4[R0],R5,#0,-(SP)	; FIND DELAY IN 100 NANOSECOND UNITS
            7E            00         00F5       
            50            5E     D0  00F7   264 	MOVL	SP,R0			; SAVE ADDRESS OF TIME VALUE
                                     00FA   265 	DISABLE				; NO CONTROL Y INTERRUPTIONS NOW
                                     00FD   266 	$SETIMR_S #MCR$K_TIMEFN,(R0)	; START A TIMER
                                     010C   267 	$WAITFR_S #MCR$K_TIMEFN		; AND WAIT FOR IT TO RUN OUT
            5E            10     C0  0115   268 	ADDL	#8*2,SP			; CLEAR STACK OF TIME AND DISABLE
                                 05  0118   269 	RSB				;
                                     0119   270 40$:	STATUS	EXPSYN			;
                                 05  011C   271 	RSB				;
                                     011D   272 	.DSABL	LSB
MCRINDCMD       - MCR INDIRECT COMMANDS                          22-AUG-1978 01:43:58   VAX-11 MACRO X0.3-11               Page   8
01              PAUSE EXECUTION FOR SOME TIME                                                                                    (1)

                                     011D   274 	.SBTTL	PAUSE EXECUTION FOR SOME TIME
                                     011D   275 ;+
                                     011D   276 ; MCR$PAUSE - PAUSE EXECUTION FOR SOME TIME
                                     011D   277 ;
                                     011D   278 ; THIS ROUTINE IS CALLED TO PROCESS THE PAUSE MCR INDIRECT COMMAND.
                                     011D   279 ; THE COMMAND INTERPRETERIS PLACED INTO A PSEUDO ^Y STATE UNTIL
                                     011D   280 ; A CONTINUE COMMAND IS EXECUTED.
                                     011D   281 ;
                                     011D   282 ; INPUTS:
                                     011D   283 ;
                                     011D   284 ;	R9 = NEXT CHARACTER IN THE PARSE BUFFER
                                     011D   285 ;	R10 = RESULT PARSE DESCRIPTOR BUFFER POINTER
                                     011D   286 ;	R11 = PROCESS IMPURE AREA
                                     011D   287 ;	FP = COMMAND IMPURE AREA
                                     011D   288 ;
                                     011D   289 ; OUTPUTS:
                                     011D   290 ;
                                     011D   291 ;	THE PAUSE IS EFFECTED.
                                     011D   292 ;-
                                     011D   293 MCR$PAUSE:
                                 A8  011D   294 	BISW	#<PRC_M_PAUSE!PRC_M_YLEVEL>,- ; IDICATE PAUSE AND PROCESS
         54 AB       2800 8F         011E   295 		PRC_W_FLAGS(R11)	; AT ^Y LEVEL
                                     0123   296 	STATUS	NORMAL			;
                                 05  0126   297 	RSB				;
MCRINDCMD       - MCR INDIRECT COMMANDS                          22-AUG-1978 01:43:58   VAX-11 MACRO X0.3-11               Page   9
01              OPEN DATA FILE                                                                                                   (1)

                                     0127   299 	.SBTTL	OPEN DATA FILE
                                     0127   300 ;+
                                     0127   301 ; MCR$OPEN - OPEN A DATA FILE
                                     0127   302 ;
                                     0127   303 ; THIS ROUTINE IS CALLED TO PROCESS THE INDIRECT COMMAND FILE OPEN
                                     0127   304 ; THE PROPER FILE IS OPENED AND A CONNECT IS PERFORMED.
                                     0127   305 ;
                                     0127   306 ; INPUTS:
                                     0127   307 ;
                                     0127   308 ;	R9 = NEXT CHARACTER IN THE PARSE BUFFER
                                     0127   309 ;	R10 = RESULT PARSE DESCRIPTOR BUFFER POINTER
                                     0127   310 ;	R11 = PROCESS IMPURE AREA
                                     0127   311 ;	FP = COMMAND IMPURE AREA
                                     0127   312 ;
                                     0127   313 ; OUTPUTS:
                                     0127   314 ;
                                     0127   315 ;	THE PROPER FILE INDEX IN THE PROCESS PARAMETERS IMPURE AREA 
                                     0127   316 ;	IS SET TO POINT AT THE CONNECTED RAB.
                                     0127   317 ;-
                                     0127   318  
                                     0127   319 MCR$OPEN::				; OPEN THE FILE
                          0098   30  0127   320 	BSBW	GETFIL			; GET THE PROPER FILE INDEX
                          97     12  012A   321 	BNEQ	RSB0			; BR IF FILE ALREADY OPEN
                                     012C   322 	DISABLE				; DISABLE ASTS
                          8E     7C  012F   323 	CLRQ	(SP)+			; REAMOVE RETURN INFORMATION
            51         4B 8F     9A  0131   324 	MOVZBL	#RAB$C_BLN+7,R1		; SET SIZE OF ALLOCATION
                          FEC8'  30  0135   325 	BSBW	MCR$ALLDYNMEM		; ALLOCATE MEMEORY FOR RAB
            7F            50     E9  0138   326 	BLBC	R0,40$			; BR IF ALLOCATION FAILED
            67            52     D0  013B   327 	MOVL	R2,(R7)			; SAVE ADDRESS OF ALLOCATED BLOCK
            56            59     D0  013E   328 	MOVL	R9,R6			; SET ERROR PRINT LIMIT
                                     0141   329 	PROCFILE			; PROCESS THE FILE SPEC
            73            50     E9  0144   330 	BLBC	R0,40$			; BR IF ERROR
       FD40 CD            5A     D0  0147   331 	MOVL	R10,WRK_L_RSLNXT(FP)	; SET ADDRESS OF LAST DESCRIPTOR
                          7A     D5  014C   332 	TSTL	-(R10)			; BACK UP RESULT PARSE INDICATOR
                                     014E   333 	GETDVAL				; TAKE DESCRIPTOR APART
            58         1C AB     D0  0151   334 	MOVL	PRC_L_INDFAB(R11),R8	; GET THE PROCESS FAB
         35 A8            04     90  0155   335 	MOVB	#4,FAB$B_DNS(R8)	; SIZE OF DEFAULT NAME STRING
         30 A8       FEA3 CF     9E  0159   336 	MOVAB	DATFIL,FAB$L_DNA(R8)	; AND ITS ADDRESS
         34 A8            51     90  015F   337 	MOVB	R1,FAB$B_FNS(R8)	; SET FILE NAME STRING SIZE
         2C A8            52     D0  0163   338 	MOVL	R2,FAB$L_FNA(R8)	; AND THE ADDRESS
         04 A8   00040040 8F     D0  0167   339 	MOVL	#FAB$M_PPF!FAB$M_SQO,FAB$L_FOP(R8) ; SET FILE OPTIONS
         1E A8            02     90  016F   340 	MOVB	#FAB$M_CR,FAB$B_RAT(R8)	; SET RECORD TO BE IMPLIED CR/LF
         16 A8            01     90  0173   341 	MOVB	#FAB$M_PUT,FAB$B_FAC(R8); SET PUT ACCESS INORDER TO WRITE
         36 A8         84 8F     9B  0177   342 	MOVZBW	#132,FAB$W_MRS(R8)	; AND SET THE MAXIMUM RECORD SIZE
                       02 A8     B4  017C   343 	CLRW	FAB$W_IFI(R8)		; RESET THE IFI FIELD
                                     017F   344 	$CREATE	FAB=(R8)		; CREATE THE FILE
            30            50     E9  0188   345 	BLBC	R0,60$			; BR IF ERROR CREATING FILE
            6C            00     2C  018B   346 	MOVC5	#0,(AP),#0,#RAB$C_BLN,@0(R7) ; INIT THE RAB TO ZERO
       0044 8F            00         018E       
                       00 B7         0192       
            52            67     D0  0194   347 	MOVL	(R7),R2			; GET ADDRESS OF THE RAB
         3C A2            58     D0  0197   348 	MOVL	R8,RAB$L_FAB(R2)	; SET FAB FOR THE CONNECT
            62       4401 8F     B0  019B   349 	MOVW	#RAB$C_BLN@8+RAB$C_BID,(R2) ; SET RAB ID FIELDS
         37 A2            01     90  01A0   350 	MOVB	#1,RAB$B_MBC(R2)	; SET BLOCK COUNT TO 1
         36 A2         FF 8F     90  01A4   351 	MOVB	#-1,RAB$B_MBF(R2)	; AND -1 FOR MULTI BUFFER COUNT
                                     01A9   352 	$CONNECT RAB=(R2)		; CONNECT TO THE RECORD STREAM
            06            50     E9  01B2   353 	BLBC	R0,60$			; CLOSE THE FILE
MCRINDCMD       - MCR INDIRECT COMMANDS                          22-AUG-1978 01:43:58   VAX-11 MACRO X0.3-11               Page  10
01              OPEN DATA FILE                                                                                                   (1)

         18 A2         02 A8     B0  01B5   354 	MOVW	FAB$W_IFI(R8),RAB$L_CTX(R2) ; SAVE FILE INTERNAL INDEX
                                 05  01BA   355 40$:	RSB				;
                                     01BB   356  
                                     01BB   357 ;
                                     01BB   358 ; ERROR ON THE FILE - CLOSE IT
                                     01BB   359 ;
                                     01BB   360  
                          50     DD  01BB   361 60$:	PUSHL	R0			; SAVE THE STATUS OF ERROR
                          57     10  01BD   362 	BSBB	MCR$CLSFIL		; CLOSE THE CURRENT FILE
                          01     BA  01BF   363 	POPR	#^M<R0>			; RETREIVE FINAL STATUS
                                 05  01C1   364 	RSB
                                     01C2   365  
                                     01C2   366 ;+
                                     01C2   367 ; GETFIL - LOCAL SUBROUTINE TO GET THE FILE SLOT FOR DATA FILES
                                     01C2   368 ;
                                     01C2   369 ; INPUTS:
                                     01C2   370 ;
                                     01C2   371 ;	FILE NUMBER, IF PRESENT, IS NEXT ON THE COMMAND LINE
                                     01C2   372 ;
                                     01C2   373 ; OUTPUT:
                                     01C2   374 ;
                                     01C2   375 ;	THE SLOT NUMBER IS COMPUTED AND R7 IS SET TO POINT AT
                                     01C2   376 ;	THE PROPER FILE DESCRIPTOR IN THE PROCESS IMPURE AREA.
                                     01C2   377 ;	CONDITION CODE 'Z' IS SET IF FILE NOT OPEN.
                                     01C2   378 ;-
            57         60 AB     DE  01C2   379 GETFIL:	MOVAL	PRC_L_CLIWRK1(R11),R7	; SET DEFAULT FILE INDEX
         FC AD            02     C1  01C6   380 	ADDL3	#2,WRK_L_CHARPTR(FP),R2	; ADVANCE TO FIRST NONE BLANK CHARACTER
                          52         01CA       
            82            23     91  01CB   381 	CMPB	#^A/#/,(R2)+		; CHANNEL NUMBER COMMING?
                          25     12  01CE   382 	BNEQ	10$			; BR IF NO
            56            59     D0  01D0   383 	MOVL	R9,R6			; COPY POINT IN BUFFER
            89         FE A2     D0  01D3   384 	MOVL	-2(R2),(R9)+		; COPY INPUT DATA TO PARSE BUFFER
                          59     D7  01D7   385 	DECL	R9			; REALLY ONLY WANT 3 BYTES
                          51     D4  01D9   386 	CLRL	R1			; ZERO UPPER 3 BYTES OF REGISTER
         FC AD            52     D0  01DB   387 	MOVL	R2,WRK_L_CHARPTR(FP)	; SET FOR GET CHARACTER
            82            30     83  01DF   388 	SUBB3	#^A/0/,(R2)+,R1		; CONVERT CHANNEL TO BINARY
                          51         01E2       
                          20     19  01E3   389 	BLSS	40$			; BR IF NOT A DIGIT
            03            51     D1  01E5   390 	CMPL	R1,#3			; VALUE IN RANGE
                          1B     1A  01E8   391 	BGTRU	40$			; BR IF OUT OF RANGE
            57            6741   DE  01EA   392 	MOVAL	(R7)[R1],R7		; FIND PROPER SLOT
            03            62     3A  01EE   393 	LOCC	(R2),#3,B^30$		; CHECK FOR VALID DELIMITERS
                       02'AF         01F1       
                          10     13  01F3   394 	BEQL	40$			; BR IF NONE
                                     01F5   395 10$:	STATUS	UNDFIL			; ASSUME NO FILE HERE
                          67     D5  01F9   396 	TSTL	(R7)			; IS THE FILE OPEN
                          04     13  01FB   397 	BEQL	20$			; BR IF NO FILE
                                     01FD   398 	STATUS	FILOPN			; SET PROPER ERROR INCASE
                                 05  0201   399 20$:	RSB				;
                           00 09 20  0202   400 30$:	.ASCII	\ 	\<0>		; VALID DELIMITERS
                                     0205   401  
                                     0205   402 ;
                                     0205   403 ; REPORT FATAL ERROR TO TOP LEVEL CALLER
                                     0205   404 ;
                                     0205   405  
                                     0205   406  
                                     0205   407 40$:	STATUS	ILLVAL			; SET ERROR TO BAD VALUE
MCRINDCMD       - MCR INDIRECT COMMANDS                          22-AUG-1978 01:43:58   VAX-11 MACRO X0.3-11               Page  11
01              OPEN DATA FILE                                                                                                   (1)

                          8E     D5  020A   408 	TSTL	(SP)+			; CLEAR STACK
                                 05  020C   409 	RSB				; REPORT ERROR
MCRINDCMD       - MCR INDIRECT COMMANDS                          22-AUG-1978 01:43:58   VAX-11 MACRO X0.3-11               Page  12
01              CLOSE DATA FILE                                                                                                  (1)

                                     020D   411 	.SBTTL	CLOSE DATA FILE
                                     020D   412 ;+
                                     020D   413 ; MCR$CLOSE - CLOSE A DATA FILE
                                     020D   414 ;
                                     020D   415 ; THIS ROUTINE IS CALLED TO PROCESS THE INDIRECT COMMAND FILE CLOSE
                                     020D   416 ; THE PROPER FILE IS CLOSED.
                                     020D   417 ;
                                     020D   418 ; INPUTS:
                                     020D   419 ;
                                     020D   420 ;	R9 = NEXT CHARACTER IN THE PARSE BUFFER
                                     020D   421 ;	R10 = RESULT PARSE DESCRIPTOR BUFFER POINTER
                                     020D   422 ;	R11 = PROCESS IMPURE AREA
                                     020D   423 ;	FP = COMMAND IMPURE AREA
                                     020D   424 ;
                                     020D   425 ; OUTPUTS:
                                     020D   426 ;
                                     020D   427 ;	THE FILE THAT IS OPEN IN THE INDICATED SLOT IS CLOSED.
                                     020D   428 ;	THE PROPER FILE INDEX IN THE PROCESS PARAMETERS IMPURE AREA 
                                     020D   429 ;	IS SET TO ZERO AND THE ASSOCIATED MEMORY IS RELEASED.
                                     020D   430 ;-
                                     020D   431 	.ENABL	LSB
                                     020D   432 MCR$CLOSE::				; CLOSE THE FILE
                          B3     10  020D   433 	BSBB	GETFIL			; GET THE FILE INDEX
                          2A     13  020F   434 	BEQL	40$			; BR IF NO FILE OPEN
                                     0211   435 	DISABLE				; DISABLE ASTS
                          8E     7C  0214   436 	CLRQ	(SP)+			; GET RID OF AST PARAMETERS
                                     0216   437 MCR$CLSFIL::				; ENTRY FOR "STOP" AND OPEN ERRORS
            52            67     D0  0216   438 	MOVL	(R7),R2			; GET ADDRESS OF RAB
                          67     D4  0219   439 	CLRL	(R7)			; INDICATE SLOT IS FREE
            50         1C AB     D0  021B   440 	MOVL	PRC_L_INDFAB(R11),R0	; AND THE PROCESS FAB
         02 A0         18 A2     B0  021F   441 	MOVW	RAB$L_CTX(R2),FAB$W_IFI(R0) ; SET INTERNAL FILE INDEX
                                     0224   442 	$CLOSE	FAB=(R0)		; CLOSE THE FILE
                          50     DD  022D   443 	PUSHL	R0			; SAVE STATUS OF CLOSE
            50            52     D0  022F   444 	MOVL	R2,R0			; SET ADDRESS OF BLOCK
            51         48 8F     9A  0232   445 	MOVZBL	#RAB$C_BLN+7&^C7,R1	; SIZE OF BLOCK
                          FDC7'  30  0236   446 	BSBW	MCR$DEADYNMEM		; DEALLOCATE THE BLOCK
                          01     BA  0239   447 	POPR	#^M<R0>			; RETRIEVE STATUS OF CLOSE
                                 05  023B   448 40$:	RSB				;
                                     023C   449 	.DSABL	LSB
MCRINDCMD       - MCR INDIRECT COMMANDS                          22-AUG-1978 01:43:58   VAX-11 MACRO X0.3-11               Page  13
01              DATA OUTPUT ROUTINES                                                                                             (1)

                                     023C   451 	.SBTTL	DATA OUTPUT ROUTINES
                                     023C   452 ;+
                                     023C   453 ; MCR$DATA - ADD ONE LINE OF DATA TO AN OUTPUT FILE
                                     023C   454 ; MCR$ENABDATA - ADD ALL INTERVENING LINES TO THE DATA FILE
                                     023C   455 ;
                                     023C   456 ; THESE ROUTINES ARE USED TO STORE DATA IN THE CURRENTLY OPEN FILE
                                     023C   457 ;
                                     023C   458 ; INPUTS:
                                     023C   459 ;
                                     023C   460 ;	R9 = NEXT CHARACTER IN THE PARSE BUFFER
                                     023C   461 ;	R10 = RESULT PARSE DESCRIPTOR BUFFER POINTER
                                     023C   462 ;	R11 = PROCESS IMPURE AREA
                                     023C   463 ;	FP = COMMAND IMPURE AREA
                                     023C   464 ;
                                     023C   465 ; OUTPUTS:
                                     023C   466 ;
                                     023C   467 ; 	THE DATA IS WRITTEN TO THE FILE
                                     023C   468 ;-
                                     023C   469 MCR$ENABDATA::				; ENABLE DATA MODE TO THE FILE
                          84     10  023C   470 	BSBB	GETFIL			; GET THE ASSOCIATED FILE SLOT
                          22     13  023E   471 	BEQL	60$			; BR IF NO FILE OPEN
            54         14 AB     D0  0240   472 10$:	MOVL	PRC_L_INDINPRAB(R11),R4	; INPUT RAB ADDRESS
                          FDB9'  30  0244   473 	BSBW	MCR$GETINPUT		; READ A LINE OF INPUT
            18            50     E9  0247   474 	BLBC	R0,60$			; BR IF ERROR READING FILE
            82            2E     91  024A   475 	CMPB	#^A/./,(R2)+		; IS IT AN INDIRECT COMMAND
                          09     12  024D   476 	BNEQ	30$			; BR IF NO
            62   41534944 8F     D1  024F   477 	CMPL	#^A/DISA/,(R2)		; IS A DISABLE?
                          07     13  0256   478 	BEQL	50$			; BR IF YES
                          11     10  0258   479 30$:	BSBB	PUTLIN			; PUT A LINE INTO FILE
            05            50     E9  025A   480 	BLBC	R0,60$			; BR IF ERROR WRITING FILE
                          E1     11  025D   481 	BRB	10$			; PARSE NEXT LINE
                                     025F   482 50$:	STATUS NORMAL			;
                                 05  0262   483 60$:	RSB				;
                                     0263   484  
                                     0263   485 	.ENABL	LSB
                                     0263   486 MCR$DATA::				; PUT SINGLE LINE TO DATA FILE
                          FF5C   30  0263   487 	BSBW	GETFIL			; GET THE FILE SLOT
                          2A     13  0266   488 	BEQL	30$			; BR IF NO FILE OPEN
                       FC AD     D6  0268   489 	INCL	WRK_L_CHARPTR(FP)	; SKIP THE SEPARATING BLANK
         FC AD            01     C1  026B   490 PUTLIN:	ADDL3	#1,WRK_L_CHARPTR(FP),R2	; POINT AT NEXT BYTE IN INPUT
                          52         026F       
       0084 8F            00     3A  0270   491 	LOCC	#0,#INPBUFSIZ,(R2)	; FIND END OF LINE
                          62         0275       
         FC AD         FF A1     9E  0276   492 	MOVAB	-1(R1),WRK_L_CHARPTR(FP); RESET CHARACTER POINTER TO EOL
            51            52     C2  027B   493 	SUBL	R2,R1			; FIND LENGTH
            50            67     D0  027E   494 	MOVL	(R7),R0			; GET THE RAB
         22 A0            51     B0  0281   495 	MOVW	R1,RAB$W_RSZ(R0)	; SET RECORD LENGTH
         28 A0            52     D0  0285   496 	MOVL	R2,RAB$L_RBF(R0)	; AND THE ADDRESS
                                     0289   497 	$PUT	RAB=(R0)		; WRITE THE RECORD
                                 05  0292   498 30$:	RSB				; RETURN WITH STATUS FROM WRITE
                                     0293   499  
                                     0293   500 	.DSABL	LSB
                                     0293   501 	.END
MCRINDCMD       - MCR INDIRECT COMMANDS                          22-AUG-1978 01:43:58   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                     (1)

$$.TMP1        = 00000001            CLI$_ONLEVL    = 00038100            FAB$L_MRN        00000038            
$$.TMP2        = 00000060            CLI$_ONOVF     = 00038108            FAB$L_NAM        00000028            
BIT...         = 00000004            CLI$_OVRFLW    = 00038160            FAB$L_SDC        00000044            
CLI$_ABFNAM    = 000381B8            CLI$_PARMDEL   = 00038110            FAB$L_STS        00000008            
CLI$_ABKEYW    = 00038000            CLI$_PROC_ID   = 0003FFF1            FAB$L_STV        0000000C            
CLI$_ABVERB    = 00038008            CLI$_QUEJOBCRE = 0003FFF9            FAB$L_XAB        00000024            
CLI$_BADRET    = 00038198            CLI$_REQPRMABS = 00038812            FAB$M_BIO      = 00000020            
CLI$_BADTEXT   = 000381B0            CLI$_RSLOVF    = 00038118            FAB$M_BLK      = 00000008            
CLI$_BUFOVF    = 00038018            CLI$_SKPDAT    = 00038120            FAB$M_BRO      = 00000040            
CLI$_COMPLX    = 00038020            CLI$_SPARE0    = 00038010            FAB$M_CBT      = 00200000            
CLI$_CONFQUAL  = 00038802            CLI$_SPARE1    = 00038058            FAB$M_CIF      = 02000000            
CLI$_CREQUEJOB = 0003884A            CLI$_STKOVF    = 00038128            FAB$M_CR       = 00000002            
CLI$_DEFOVF    = 00038028            CLI$_SUBMITERR = 00038852            FAB$M_CTG      = 00100000            
CLI$_DEVALSPL  = 0003885A            CLI$_SYMDEL    = 00038130            FAB$M_DEL      = 00000004            
CLI$_DEVNOTFOR = 0003887A            CLI$_SYMOVF    = 00038138            FAB$M_DFW      = 00000020            
CLI$_DEVNOTSPL = 00038862            CLI$_UNDFIL    = 00038188            FAB$M_DLT      = 00008000            
CLI$_DIRECT    = 00038030            CLI$_UNDSYM    = 00038140            FAB$M_DMO      = 00001000            
CLI$_EXPSYN    = 00038038            CLI$_UNPROPARM = 00038170            FAB$M_ESC      = 08000000            
CLI$_FILOPN    = 00038190            CLI$_UNPROQUAL = 00038168            FAB$M_EXE      = 00000080            
CLI$_ILLVAL    = 0003883A            CLI$_USGOTO    = 00038148            FAB$M_FTN      = 00000001            
CLI$_IMCHNG    = 00038040            CLI$_VALCNVERR = 00038832            FAB$M_GET      = 00000002            
CLI$_IMGFNF    = 00038872            CLI$_VALREQ    = 00038150            FAB$M_INP      = 00080000            
CLI$_INSFPRM   = 00038048            CMDBUFSIZ      = 000001FC            FAB$M_JNL      = 00400000            
CLI$_INVKEY    = 00038178            DATFIL           00000000 R     04   FAB$M_KFO      = 40000000            
CLI$_INVQUAL   = 0003880A            ENABLS           00000004 R     04   FAB$M_MSE      = 00000010            
CLI$_INVQUALNUM= 0003881A            FAB$B_BID        00000000            FAB$M_MXV      = 00000002            
CLI$_INVREQTYP = 00038822            FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            
CLI$_INVRSP    = 00038180            FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            
CLI$_INVUIC    = 000381A8            FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            
CLI$_IVCHAR    = 00038050            FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            
CLI$_IVDEVTYPE = 0003886A            FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            
CLI$_IVFNAM    = 000381C0            FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            
CLI$_IVKEYW    = 00038060            FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            
CLI$_IVOPER    = 00038068            FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            
CLI$_IVPROT    = 00038070            FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            
CLI$_IVQLOC    = 00038078            FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            
CLI$_IVSYMB    = 00038080            FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            
CLI$_IVVALU    = 00038088            FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            
CLI$_IVVERB    = 00038090            FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            
CLI$_MAXPARM   = 00038098            FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            
CLI$_MULKEY    = 000381A0            FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            
CLI$_NOATFIL   = 000380A0            FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            
CLI$_NOCCAT    = 000380A8            FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            
CLI$_NOCOMD    = 000380B0            FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            
CLI$_NOKEYW    = 000380B8            FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            
CLI$_NOLIST    = 000380C0            FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            
CLI$_NOOPTPRS  = 00038842            FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            
CLI$_NOQUAL    = 000380C8            FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            
CLI$_NORMAL    = 00030001            FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            
CLI$_NOTNEG    = 000380D8            FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            
CLI$_NOVALU    = 000380D0            FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            
CLI$_NOVALUE   = 0003882A            FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            
CLI$_NULFIL    = 000380E0            FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            
CLI$_NUMBER    = 000380E8            FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            
CLI$_ONCOMD    = 000380F0            FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            
CLI$_ONERR     = 000380F8            FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            
CLI$_ONEVAL    = 00038158            FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            
MCRINDCMD       - MCR INDIRECT COMMANDS                          22-AUG-1978 01:43:58   VAX-11 MACRO X0.3-11               Page  15
SYMBOL TABLE                                                                                                                     (1)

FAB$S_ORG      = 00000004            FAB$W_MRS        00000036            MCR_V_DOLLARS  = 00000008            
FAB$S_PPF_RAT  = 00000008            GBL...         = 00000000            MCR_V_ESCAPE   = 00000002            
FAB$V_BIO      = 00000005            GETFIL           000001C2 R     04   MCR_V_ESCTRM   = 00000009            
FAB$V_BLK      = 00000003            INDEND           00000067 R     04   MCR_V_FORCMD   = 0000000E            
FAB$V_BRO      = 00000006            INDISP           0000003B R     04   MCR_V_GLOBAL   = 0000000A            
FAB$V_CBT      = 00000015            INPBUFSIZ      = 00000084            MCR_V_LOWER    = 0000000B            
FAB$V_CIF      = 00000019            MCR$ALLDYNMEM    ********   X   04   MCR_V_OPNINP   = 00000006            
FAB$V_CR       = 00000001            MCR$ASK          ********   X   04   MCR_V_RAD50    = 00000000            
FAB$V_CTG      = 00000014            MCR$ASKN         ********   X   04   MCR_V_STRSUB   = 0000000C            
FAB$V_DEL      = 00000002            MCR$ASKS         ********   X   04   MSGBUFSIZ      = 00000084            
FAB$V_DFW      = 00000005            MCR$CHAIN        ********   X   04   PRC_B_DEFRADIX   00000092            
FAB$V_DLT      = 0000000F            MCR$CLOSE        0000020D RG    04   PRC_B_EXMDEPMOD  00000091            
FAB$V_DMO      = 0000000C            MCR$CLSFIL       00000216 RG    04   PRC_B_EXMDEPWID  00000090            
FAB$V_ESC      = 0000001B            MCR$CNVNUMDEC    ********   X   04   PRC_K_DEC      = 00000001            
FAB$V_EXE      = 00000007            MCR$DATA         00000263 RG    04   PRC_K_HEX      = 00000000            
FAB$V_FTN      = 00000000            MCR$DEADYNMEM    ********   X   04   PRC_K_LENGTH     000000A0            
FAB$V_GET      = 00000001            MCR$DEC          ********   X   04   PRC_K_OCT      = 00000002            
FAB$V_INP      = 00000013            MCR$DELAY        000000D3 R     04   PRC_L_CLIWRK0    0000005C            
FAB$V_JNL      = 00000016            MCR$DISA         0000006F RG    04   PRC_L_CLIWRK1    00000060            
FAB$V_KFO      = 0000001E            MCR$DISABLE      ********   X   04   PRC_L_CLIWRK2    00000064            
FAB$V_MSE      = 00000004            MCR$ENAB         0000006B RG    04   PRC_L_CLIWRK3    00000068            
FAB$V_MXV      = 00000001            MCR$ENABDATA     0000023C RG    04   PRC_L_CLIWRK4    0000006C            
FAB$V_NAM      = 00000018            MCR$GETDVAL      ********   X   04   PRC_L_ERRRAB     00000010            
FAB$V_NEF      = 0000000A            MCR$GETINPUT     ********   X   04   PRC_L_EXMDEPADR  0000008C            
FAB$V_NFS      = 00000010            MCR$GETOKEN      ********   X   04   PRC_L_EXTARG     00000078            
FAB$V_NIL      = 00000005            MCR$GOSUB        ********   X   04   PRC_L_EXTBLK     00000070            
FAB$V_OFP      = 0000001D            MCR$GOTO         ********   X   04   PRC_L_EXTCOD     00000080            
FAB$V_ORG      = 00000004            MCR$IF           ********   X   04   PRC_L_EXTHND     00000074            
FAB$V_POS      = 00000008            MCR$INC          ********   X   04   PRC_L_EXTPRM     0000007C            
FAB$V_PPF      = 00000012            MCR$INDCMD       00000028 RG    04   PRC_L_INDEPTH    00000048            
FAB$V_PPF_IND  = 0000000E            MCR$INDLST       00000000 R     03   PRC_L_INDFAB     0000001C            
FAB$V_PPF_RAT  = 00000006            MCR$K_TIMEFN   = 0000001F            PRC_L_INDINPRAB  00000014            
FAB$V_PRN      = 00000002            MCR$MOVTOKN      ********   X   04   PRC_L_INDOUTRAB  00000018            
FAB$V_PUT      = 00000000            MCR$OPEN         00000127 RG    04   PRC_L_INPRAB     00000008            
FAB$V_RCK      = 00000017            MCR$PAUSE        0000011D R     04   PRC_L_LSTSTATUS  00000094            
FAB$V_RWC      = 0000000B            MCR$PROCFILE     ********   X   04   PRC_L_ONCTLY     0000009C            
FAB$V_RWO      = 00000007            MCR$RETURN       ********   X   04   PRC_L_ONERROR    00000058            
FAB$V_SCF      = 0000000E            MCR$SETF         ********   X   04   PRC_L_OUTRAB     0000000C            
FAB$V_SHRDEL   = 00000002            MCR$SETN         ********   X   04   PRC_L_PROCUIC    00000098            
FAB$V_SHRGET   = 00000001            MCR$SETS         ********   X   04   PRC_L_SAVAP      00000000            
FAB$V_SHRPUT   = 00000000            MCR$SETT         ********   X   04   PRC_L_SAVFP      00000004            
FAB$V_SHRUPD   = 00000003            MCR$SRCTBL       000000A1 RG    04   PRC_L_SEVERITY   00000040            
FAB$V_SPL      = 0000000D            MCR$TEST         ********   X   04   PRC_L_STACKLM    00000088            
FAB$V_SQO      = 00000006            MCR_M_ALPHAN   = 00000002            PRC_L_STACKPT    00000084            
FAB$V_SUP      = 00000002            MCR_M_DEFALT   = 00000008            PRC_L_STATUS     00000044            
FAB$V_TEF      = 0000001C            MCR_M_DELINP   = 00000080            PRC_L_SYMBOL     0000004C            
FAB$V_TMD      = 00000004            MCR_M_DOLLARS  = 00000100            PRC_M_CNTRLY   = 00000002            
FAB$V_TMP      = 00000003            MCR_M_ESCAPE   = 00000004            PRC_M_DBGQUAL  = 00000200            
FAB$V_TRN      = 00000004            MCR_M_ESCTRM   = 00000200            PRC_M_DBGTRUE  = 00000400            
FAB$V_UFM      = 0000001A            MCR_M_GLOBAL   = 00000400            PRC_M_DISABL   = 00000004            
FAB$V_UFO      = 00000011            MCR_M_LOWER    = 00000800            PRC_M_EXIT     = 00000008            
FAB$V_UPD      = 00000003            MCR_M_OPNINP   = 00000040            PRC_M_GOEOF    = 00000001            
FAB$V_UPI      = 00000006            MCR_M_RAD50    = 00000001            PRC_M_GOTO     = 00000010            
FAB$V_WCK      = 00000009            MCR_M_STRSUB   = 00001000            PRC_M_HANGUP   = 00001000            
FAB$W_BLS        0000003C            MCR_V_ALPHAN   = 00000001            PRC_M_IND      = 00000020            
FAB$W_DEQ        00000014            MCR_V_DEFALT   = 00000003            PRC_M_MODE     = 00000040            
FAB$W_IFI        00000002            MCR_V_DELINP   = 00000007            PRC_M_NOCTLY   = 00004000            
MCRINDCMD       - MCR INDIRECT COMMANDS                          22-AUG-1978 01:43:58   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                     (1)

PRC_M_PAUSE    = 00002000            RAB$L_STS        00000008            RAB$V_TPT      = 00000001            
PRC_M_USRDET   = 00000100            RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            
PRC_M_VERIFY   = 00000080            RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            
PRC_M_YLEVEL   = 00000800            RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            
PRC_Q_ALLOCREG   00000020            RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            
PRC_Q_GLOBAL     00000028            RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            
PRC_Q_LABEL      00000030            RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            
PRC_Q_LOCAL      00000038            RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            
PRC_V_CNTRLY   = 00000001            RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            
PRC_V_DBGQUAL  = 00000009            RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            
PRC_V_DBGTRUE  = 0000000A            RAB$M_KGE      = 00200000            RSB0             000000C3 R     04   
PRC_V_DISABL   = 00000002            RAB$M_KGT      = 00400000            RSLBUFSIZ      = 00000180            
PRC_V_EXIT     = 00000003            RAB$M_LIM      = 00004000            SYS$CLOSE        ********  GX   04   
PRC_V_GOEOF    = 00000000            RAB$M_LOA      = 00002000            SYS$CONNECT      ********  GX   04   
PRC_V_GOTO     = 00000004            RAB$M_LOC      = 00010000            SYS$CREATE       ********  GX   04   
PRC_V_HANGUP   = 0000000C            RAB$M_MAS      = 00000020            SYS$PUT          ********  GX   04   
PRC_V_IND      = 00000005            RAB$M_NLK      = 00100000            SYS$SETIMR       ********   X   04   
PRC_V_MODE     = 00000006            RAB$M_NXR      = 00800000            SYS$WAITFR       ********   X   04   
PRC_V_NOCTLY   = 0000000E            RAB$M_PMT      = 40000000            WRK_AB_BUFFER    FFFFFD44            
PRC_V_PAUSE    = 0000000D            RAB$M_PPF_IND  = 00004000            WRK_AG_RESULT    FFFFFBC0            
PRC_V_USRDET   = 00000008            RAB$M_PPF_RAT  = 00003FC0            WRK_B_CMDFLG     FFFFFFC9            
PRC_V_VERIFY   = 00000007            RAB$M_PTA      = 20000000            WRK_B_CURADX     FFFFFFCA            
PRC_V_YLEVEL   = 0000000B            RAB$M_RAH      = 00000200            WRK_B_PARMCNT    FFFFFFCB            
PRC_W_CLIFLAG    00000052            RAB$M_RLK      = 00080000            WRK_B_VERBTYP    FFFFFFC8            
PRC_W_ERRIFI     00000052            RAB$M_RNE      = 01000000            WRK_K_LENGTH     FFFFFBC0            
PRC_W_FLAGS      00000054            RAB$M_RNF      = 08000000            WRK_L_CHARPTR    FFFFFFFC            
PRC_W_INPCHAN    00000050            RAB$M_TMO      = 02000000            WRK_L_IMAGE      FFFFFFEC            
PRC_W_ONLEVEL    00000056            RAB$M_TPT      = 00000002            WRK_L_MAXPARM    FFFFFFCC            
PUTLIN           0000026B R     04   RAB$M_UIF      = 00000010            WRK_L_MINPARM    FFFFFFD0            
RAB$B_BID        00000000            RAB$M_ULK      = 00040000            WRK_L_PAROUT     FFFFFFF0            
RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            WRK_L_PROMPT     FFFFFFF4            
RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            WRK_L_QUABLK     FFFFFFE8            
RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            WRK_L_RSLNXT     FFFFFD40            
RAB$B_MBC        00000037            RAB$V_ASY      = 00000000            WRK_L_SAVAP      FFFFFFD8            
RAB$B_MBF        00000036            RAB$V_BIO      = 0000000B            WRK_L_SAVFP      FFFFFFDC            
RAB$B_PSZ        00000034            RAB$V_CCO      = 0000001F            WRK_L_SAVSP      FFFFFFD4            
RAB$B_RAC        0000001E            RAB$V_CVT      = 0000001A            WRK_M_ALL      = 00000001            
RAB$B_ROP1       00000005            RAB$V_EOF      = 00000008            WRK_M_ASK      = 00000100            
RAB$B_ROP2       00000006            RAB$V_FDL      = 00000006            WRK_M_COMMAND  = 00000002            
RAB$B_ROP3       00000007            RAB$V_HSH      = 00000007            WRK_M_CONTINU  = 00000400            
RAB$B_TMO        0000001F            RAB$V_KGE      = 00000015            WRK_M_EQUAL    = 00000008            
RAB$C_BID      = 00000001            RAB$V_KGT      = 00000016            WRK_M_IMCHNG   = 00000004            
RAB$C_BLN        00000044            RAB$V_LIM      = 0000000E            WRK_M_QUAL     = 00000010            
RAB$C_KEY      = 00000001            RAB$V_LOA      = 0000000D            WRK_M_QUOTE    = 00000020            
RAB$C_RFA      = 00000002            RAB$V_LOC      = 00000010            WRK_M_STAR     = 00000040            
RAB$C_SEQ      = 00000000            RAB$V_MAS      = 00000005            WRK_M_TRAILSPC = 00000200            
RAB$K_BLN        00000044            RAB$V_NLK      = 00000014            WRK_M_VERB     = 00000080            
RAB$L_BKT        00000038            RAB$V_NXR      = 00000017            WRK_Q_IOSB       FFFFFFE0            
RAB$L_CTX        00000018            RAB$V_PMT      = 0000001E            WRK_V_ALL      = 00000000            
RAB$L_DCT        00000038            RAB$V_PPF_IND  = 0000000E            WRK_V_ASK      = 00000008            
RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            WRK_V_COMMAND  = 00000001            
RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            WRK_V_CONTINU  = 0000000A            
RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            WRK_V_EQUAL    = 00000003            
RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            WRK_V_IMCHNG   = 00000002            
RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            WRK_V_QUAL     = 00000004            
RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            WRK_V_QUOTE    = 00000005            
RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            WRK_V_STAR     = 00000006            
MCRINDCMD       - MCR INDIRECT COMMANDS                          22-AUG-1978 01:43:58   VAX-11 MACRO X0.3-11               Page  17
SYMBOL TABLE                                                                                                                     (1)

WRK_V_TRAILSPC = 00000009            
WRK_V_VERB     = 00000007            
WRK_W_FLAGS      FFFFFFFA            
WRK_W_LOCFLG     FFFFFFF8            
_$$_           = 0000020E            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFC      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
MCR$ZDATA        00000071      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  
MCR$ZCODE        00000293      04     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
10816. BYTES LEFT IN FREE MEMORY POOL.
862. BYTES OF RECLAIMED MEMORY.
OBJ$:MCRINDCMD,LIS$:MCRINDCMD/-SP=EXECML$/ML,LIB$:MCR/ML,SRC$:MCRINDCMD
43 MLB DIR RDS - 740 GETS TO DEFINE 32 MACROS. 63 INTER. FILE WRITES. 
