MCRHANDLE       - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:38:52   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      40  CHANGE MODE TO SUPERVISOR HANDLER
   (1)     106  CONTROL Y AST HANDLER
   (1)     209  ENABLE CONTROL Y AST
   (1)     235  COMMAND INTERPRETER CONDITION HANDLER
MCRHANDLE       - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:38:52   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	MCRHANDLE - CONDITION AND CONTROL Y AST HANDLER ROUTINES
                                     0000     2 	.IDENT	/01/
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000     9 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    10 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    11 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    12 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    13 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    14 ; REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    17 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    18 ; CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; D. N. CUTLER 29-MAR-77
                                     0000    24 ;
                                     0000    25 ; CONDITION AND CONTROL Y AST HANDLER ROUTINES
                                     0000    26 ;
                                     0000    27 ; MACRO LIBRARY CALLS
                                     0000    28 ;
                                     0000    29  
                                     0000    30 	DEFCMDWRK			;DEFINE WORK AREA OFFSETS
                                     0000    31 	DEFERRCOD			;DEFINE ERROR/STATUS CODES
                                     0000    32 	$CLISERVDEF			;CLI SERVICE CODES
                                     0000    33 	$CHFDEF				;DEFINE CONDITION ARGLIST OFFSETS
                                     0000    34 	$DEVDEF				;DEFINE DEVICE CHARACTERISTIC BITS
                                     0000    35 	$IODEF				;DEFINE I/O FUNCTION CODES
                                     0000    36 	$PSLDEF				;DEFINE PROCESSOR STATUS FIELDS
                                     0000    37 	$RABDEF				;DEFINE RAB OFFSETS
                                     0000    38 	$SSDEF				;DEFINE SYSTEM STATUS VALUES
MCRHANDLE       - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:38:52   VAX-11 MACRO X0.3-11               Page   2
01              CHANGE MODE TO SUPERVISOR HANDLER                                                                                (1)

                                     0000    40 	.SBTTL	CHANGE MODE TO SUPERVISOR HANDLER
                                     0000    41 ;+
                                     0000    42 ; MCR$CHANGE_MODE - CHANGE MODE TO SUPERVISOR HANDLER
                                     0000    43 ;
                                     0000    44 ; THIS ROUTINE IS ENTERED WHEN A CHANGE MODE TO SUPERVISOR INSTRUCTION IS
                                     0000    45 ; EXECTED BY THE RESULT PARSER IN USER MODE OR THE CLI PROPER IN SUPER MODE.
                                     0000    46 ;
                                     0000    47 ; INPUTS:
                                     0000    48 ;
                                     0000    49 ;	 (SP) = CHANGE MODE ARGUMENT
                                     0000    50 ;	4(SP) = PC AFTER CHANGE MODE INSTRUCTION
                                     0000    51 ;	8(SP) = PSL OF CHANGE MODE INSTRUCTION
                                     0000    52 ;
                                     0000    53 ; OUTPUTS:
                                     0000    54 ;
                                     0000    55 ;	A CHECK IS MADE TO SEE IF THE
                                     0000    56 ;	PREVIOUS MODE WAS USER OR SUPERVISOR.
                                     0000    57 ;
                                     0000    58 ;	PREVIOUS MODE USER:
                                     0000    59 ;
                                     0000    60 ;		THIS IS REQUEST FOR SERVICE FROM THE RUNNING IMAGE.
                                     0000    61 ;		THE REQUEST IS DECODED AND PROCESSED, THE RETURN
                                     0000    62 ;		IS MADE TO THE POINT OF CALL WITH STATUS OF REQUEST.
                                     0000    63 ;
                                     0000    64 ;	PREVIOUS MODE SUPERVISOR:
                                     0000    65 ;
                                     0000    66 ;		THIS IS RESERVED FOR COMMAND PROCESSING ERRORS.
                                     0000    67 ;-
                                     0000    68  
                                 00000000    69 	.PSECT	MCR$ZCODE,BYTE,RD,NOWRT
                                     0000    70 MCR$CHANGE_MODE::			;HANDLE CHANGE MODE TO SUPERVISOR
         08 AE            18     E0  0000    71 	BBS	#PSL$V_CURMOD,8(SP),10$	;BR IF CHANGE MODE FROM USER
                          03         0004       
                                     0005    72  
                                     0005    73 ;
                                     0005    74 ; CHANGE MODE FROM SUPER
                                     0005    75 ;
                                     0005    76  
                          FFF8'  31  0005    77 	BRW	MCR$RESTART		;*** NYI ***
                                     0008    78  
                                     0008    79 ;
                                     0008    80 ; BUILD A FRAME THAT LOOKS LIKE AN AST FRAME, EXCEPT THAT IN PLACE OF
                                     0008    81 ; THE SAVE R1 IS THE CHANGE MODE ARGUMENT, AND ZERO FOR SAVED R0 AND
                                     0008    82 ; THE AST ARGUMENT.
                                     0008    83 ;
                                     0008    84  
                          7E     7C  0008    85 10$:	CLRQ	-(SP)			;DUMMY SAVED R0 AND AST ARGUMENT
                          05     DD  000A    86 	PUSHL	#5			;NUMBER OF ARGUMENTS IN AST ROUTINE
         14'AF            6E     FA  000C    87 	CALLG	(SP),B^30$		;CREATE A CALL FRAME IN SUPER MODE
            5E            10     C0  0010    88 	ADDL	#<4*4>,SP		;CLEAR ARGUMENTS AND ARG COUNT
                                 02  0013    89 	REI				;RETURN TO USER
                                     0014    90  
                               0000  0014    91 30$:	.WORD	0			;REGISTERS SAVED BY RESULT PARSER
                                     0016    92 	CASE	12(AP),-		;DECODE USER REQUEST
                                     0016    93 		LIMIT = #CLI$K_PAUSE,-	;LOW LIMIT OF REQUEST
                                     0016    94 		TYPE = W,<-		;CASE ON 16 BIT VALUE
                                     0016    95 		PAUSE,-			;REQUEST IS PAUSE
MCRHANDLE       - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:38:52   VAX-11 MACRO X0.3-11               Page   3
01              CHANGE MODE TO SUPERVISOR HANDLER                                                                                (1)

                                     0016    96 		>			;
                                     001D    97  
            50   00038822 8F     D0  001D    98 INVREQ:	MOVL	#CLI$_INVREQTYP,R0	;SET ERROR CODE
                                 04  0024    99 	RET				;
                                     0025   100  
            50   00000008'9F     D0  0025   101 PAUSE:	MOVL	@#CTL$AG_CLIDATA+PRC_L_INPRAB,R0 ;GET PROCESS INPUT RAB
         18 A0            02     E1  002C   102 	BBC	#DEV$V_TRM,RAB$L_CTX(R0),INVREQ ;CAN'T PAUSE IF NOT INTERACTIVE
                          EC         0030       
            5B   00000000'9F     9E  0031   103 	MOVAB	@#CTL$AG_CLIDATA,R11	;GET ADDRESS OF PROCESS WORK AREA
                          006E   31  0038   104 	BRW	IMGPAUSE		;SET UP IMAGE PAUSE
MCRHANDLE       - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:38:52   VAX-11 MACRO X0.3-11               Page   4
01              CONTROL Y AST HANDLER                                                                                            (1)

                                     003B   106 	.SBTTL	CONTROL Y AST HANDLER
                                     003B   107 ;+
                                     003B   108 ; MCR$CONTRLY - CONTROL Y AST HANDLER
                                     003B   109 ;
                                     003B   110 ; THIS ROUTINE IS CALLED WHEN A CONTROL Y AST OCCURS WHILE RUNNING IN USER
                                     003B   111 ; OR SUPERVISOR MODE.
                                     003B   112 ;
                                     003B   113 ; INPUTS:
                                     003B   114 ;
                                     003B   115 ;	AP = ADDRESS OF AST ARGUMENT LIST.
                                     003B   116 ;
                                     003B   117 ; OUTPUTS:
                                     003B   118 ;
                                     003B   119 ;	THE CONTROL Y AST IS RE-ENABLED AND A CHECK IS MADE TO SEE IF THE
                                     003B   120 ;	PREVIOUS MODE WAS USER OR SUPERVISOR.
                                     003B   121 ;
                                     003B   122 ;	PREVIOUS MODE USER:
                                     003B   123 ;
                                     003B   124 ;		A COMMAND WORK AREA IS ALLOCATED ON THE STACK, THE PROCESS
                                     003B   125 ;		SAVED ARGUMENT AND FRAME POINTERS ARE MOVED TO THE COMMAND
                                     003B   126 ;		WORK AREA, THE CURRENT ARGUMENT AND FRAME POINTERS ARE SAVED
                                     003B   127 ;		IN THE PROCESS SAVE AREA, AST'S ARE ENABLED, AND THE COMMAND
                                     003B   128 ;		INTERPRETER RESTART POINT IS JUMPED TO.
                                     003B   129 ;
                                     003B   130 ;	PREVIOUS MODE SUPERVISOR:
                                     003B   131 ;
                                     003B   132 ;		IF CONTROL Y AST'S ARE CURRENTLY SOFTWARE DISABLED, THEN THE
                                     003B   133 ;		AST IS DISMISSED IMMEDIATELY. OTHERWISE THE SAVED PROCESS
                                     003B   134 ;		ARGUMENT AND FRAME POINTERS ARE RESTORED, AST'S ARE ENABLED,
                                     003B   135 ;		AND THE COMMAND INTERPRETER RESTART POINT IS JUMPED TO.
                                     003B   136 ;-
                                     003B   137  
                                     003B   138 	.ENABL	LSB
                                 0000003B   139 	.PSECT	MCR$ZCODE,BYTE,RD,NOWRT
                               0FFC' 003B   140 	.ENTRY	MCR$CONTRLY,^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>
            5B   00000000'9F     9E  003D   141 	MOVAB	@#CTL$AG_CLIDATA,R11	;GET ADDRESS OF PROCESS WORK AREA
         04 AC       02CC 8F     B1  0044   142 	CMPW	#SS$_HANGUP,4(AP)	;TERMINAL LINE HANGUP?
                          08     12  004A   143 	BNEQ	10$			;IF NEQ NO
         54 AB       1000 8F     A8  004C   144 	BISW	#PRC_M_HANGUP,PRC_W_FLAGS(R11) ;SET HANGUP PENDING
                          07     11  0052   145 	BRB	15$			;
                          71     10  0054   146 10$:	BSBB	MCR$ENBCONTRLY		;RE-ENABLE CONTROL Y AST
         54 AB            0E     E0  0056   147 	BBS	#PRC_V_NOCTLY,PRC_W_FLAGS(R11),35$ ;BR IF MUST IGNORE
                          2E         005A       
         14 AC            18     E0  005B   148 15$:	BBS	#PSL$V_CURMOD,20(AP),60$ ;IF SET, PREVIOUS MODE USER
                          49         005F       
                     0000'CF     9F  0060   149 	PUSHAB	W^MCR$LOW_LIMIT		;GET ADDRESS OF LOWER ADDRESS LIMIT
         10 AC            8E     D1  0064   150 	CMPL	(SP)+,16(AP)		;ADDRESS WITHIN LIMITS?
                          0A     1A  0068   151 	BGTRU	20$			;IF GTRU NO
                     0000'CF     9F  006A   152 	PUSHAB	W^MCR$HIGH_LIMIT	;GET ADDRESS OF HIGH ADDRESS LIMIT
         10 AC            8E     D1  006E   153 	CMPL	(SP)+,16(AP)		;ADDRESS WITHIN LIMITS?
                          1C     1A  0072   154 	BGTRU	50$			;IF GTRU YES
         54 AB            02     E0  0074   155 20$:	BBS	#PRC_V_DISABL,PRC_W_FLAGS(R11),30$ ;IF SET, CONTROL Y/C AST'S DISABLED
                          0C         0078       
         54 AB            0B     E0  0079   156 	BBS	#PRC_V_YLEVEL,PRC_W_FLAGS(R11),40$ ;IF SET, AT CONTROL Y/C LEVEL
                          0C         007D       
         14 AB         08 AB     D1  007E   157 	CMPL	PRC_L_INPRAB(R11),PRC_L_INDINPRAB(R11) ;INDIRECT LEVEL ZERO?
                          05     13  0083   158 	BEQL	40$			;IF EQL YES
MCRHANDLE       - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:38:52   VAX-11 MACRO X0.3-11               Page   5
01              CONTROL Y AST HANDLER                                                                                            (1)

         54 AB            02     A8  0085   159 30$:	BISW	#PRC_M_CNTRLY,PRC_W_FLAGS(R11) ;SET CONTROL Y/C REQUEST
                                 04  0089   160 35$:	RET				;
                                     008A   161  
                                     008A   162 ;
                                     008A   163 ; PREVIOUS MODE SUPERVISOR
                                     008A   164 ;
                                     008A   165  
            5D         04 AB     D0  008A   166 40$:	MOVL	PRC_L_SAVFP(R11),FP	;RESTORE SAVED FRAME POINTER
                          28     11  008E   167 	BRB	70$			;
                                     0090   168  
                                     0090   169 ;
                                     0090   170 ; SUPERVISOR MODE CONTROL Y/C WHILE ACTIVATING IMAGE
                                     0090   171 ;
                                     0090   172  
            5D         04 AB     D0  0090   173 50$:	MOVL	PRC_L_SAVFP(R11),FP	;RESTORE SAVED FRAME POINTER
                                     0094   174  
                                     0094   175 ;
                                     0094   176 ; CREATE DUMMY CONTROL Y/C AST FRAME
                                     0094   177 ;
                                     0094   178  
                                     0094   179 MCR$SCNTRLY::				;SUPERVISOR CONTROL Y/C
         D4 AD            14     C3  0094   180 	SUBL3	#5*4,WRK_L_SAVSP(FP),SP	;ALLOCATE DUMMY AST ARGUMENT LIST
                          5E         0098       
                          05     DD  0099   181 	PUSHL	#5			;SET NUMBER OF ARGUMENTS
            5C            5E     D0  009B   182 	MOVL	SP,AP			;SET ARGUMENT POINTER
                       C3'AF     9F  009E   183 	PUSHAB	B^80$			;SET RETURN ADDRESS
            7E            5C     7D  00A1   184 	MOVQ	AP,-(SP)		;SAVE ARGUMENT AND FRAME POINTERS
                          7E     7C  00A4   185 	CLRQ	-(SP)			;CLEAR PSW, MASK, AND HANDLER ADDRESS
            5D            5E     D0  00A6   186 	MOVL	SP,FP			;SET NEW FRAME POINTER
                                     00A9   187  
                                     00A9   188 ;
                                     00A9   189 ; PREVIOUS MODE USER
                                     00A9   190 ;
                                     00A9   191  
                                     00A9   192 IMGPAUSE:				;ENTER HERE FOR PAUSE
            5E       FBC0 CD     9E  00A9   193 60$:	MOVAB	WRK_K_LENGTH(FP),SP	;ALLOCATE COMMAND WORK AREA
         D8 AD            6B     7D  00AE   194 	MOVQ	PRC_L_SAVAP(R11),WRK_L_SAVAP(FP) ;SAVE ARGUMENT AND FRAME POINTERS
            5C            14     C0  00B2   195 	ADDL	#20,AP			;POINT TO SAVED PSL
            6B            5C     7D  00B5   196 	MOVQ	AP,PRC_L_SAVAP(R11)	;SAVE CURRENT ARGUMENT AND FRAME POINTERS
         54 AB       0800 8F     A8  00B8   197 70$:	BISW	#PRC_M_YLEVEL,PRC_W_FLAGS(R11) ;SET CONTROL Y/C LEVEL
                          00     BC  00BE   198 	CHMK	#0			;ENABLE AST'S
                          FF3D'  31  00C0   199 	BRW	MCR$RESTART		;
                                     00C3   200  
                                     00C3   201 ;
                                     00C3   202 ; CONTINUE AFTER SIMULATED CONTROL Y/C AST FROM USER MODE
                                     00C3   203 ;
                                     00C3   204  
            5E            10     C0  00C3   205 80$:	ADDL	#4*4,SP			;REMOVE DUMMY AST ARGUMENTS
                                 02  00C6   206 	REI				;
                                     00C7   207 	.DSABL	LSB
MCRHANDLE       - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:38:52   VAX-11 MACRO X0.3-11               Page   6
01              ENABLE CONTROL Y AST                                                                                             (1)

                                     00C7   209 	.SBTTL	ENABLE CONTROL Y AST
                                     00C7   210 ;+
                                     00C7   211 ; MCR$ENBCONTRLY - ENABLE CONTROL Y AST
                                     00C7   212 ;
                                     00C7   213 ; THIS ROUTINE IS CALLED TO ENABLE CONTROL Y AST'S ON THE INPUT CHANNEL.
                                     00C7   214 ;
                                     00C7   215 ; INPUTS:
                                     00C7   216 ;
                                     00C7   217 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     00C7   218 ;
                                     00C7   219 ; OUTPUTS:
                                     00C7   220 ;
                                     00C7   221 ;	R0 = FINAL REQUEST STATUS.
                                     00C7   222 ;-
                                     00C7   223  
                                     00C7   224 MCR$ENBCONTRLY::			;ENABLE CONTROL Y AST
         54 AB            06     E0  00C7   225 	BBS	#PRC_V_MODE,PRC_W_FLAGS(R11),10$ ;IF SET, NOT INTERACTIVE JOB
                          2B         00CB       
            50         08 AB     D0  00CC   226 	MOVL	PRC_L_INPRAB(R11),R0	;GET ADDRESS OF INPUT RAB
         18 A0            02     E1  00D0   227 	BBC	#DEV$V_TRM,RAB$L_CTX(R0),10$ ;IF CLR, 'INPUT' NOT FROM TERMINAL
                          22         00D4       
                                     00D5   228 	$QIOW_S	#31,-			;EVENT FLAG
                                     00D5   229 		PRC_W_INPCHAN(R11),-	;INPUT CHANNEL
                                     00D5   230 		#IO$_SETMODE!IO$M_CTRLYAST,,,,- ;FUNCTION CODE
                                     00D5   231 		W^MCR$CONTRLY,,-	;AST ROUTINE ADDRESS
                                     00D5   232 		#PSL$C_SUPER		;ENABLE MODE
                                 05  00F7   233 10$:	RSB				;
MCRHANDLE       - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:38:52   VAX-11 MACRO X0.3-11               Page   7
01              COMMAND INTERPRETER CONDITION HANDLER                                                                            (1)

                                     00F8   235 	.SBTTL	COMMAND INTERPRETER CONDITION HANDLER
                                     00F8   236 ;+
                                     00F8   237 ; MCR$CONDHAND - COMMAND INTERPRETER CONDITION HANDLER
                                     00F8   238 ;
                                     00F8   239 ; THIS ROUTINE IS CALLED AS THE RESULT OF AN EXCEPTION CONDITION THAT OCCURS
                                     00F8   240 ; WHILE EXECUTING IN THE COMMAND INTERPRETER.
                                     00F8   241 ;
                                     00F8   242 ; INPUTS:
                                     00F8   243 ;
                                     00F8   244 ;	CHF$L_MCHARGLST(AP) = ADDRESS OF MECHANISM ARGUMENTS.
                                     00F8   245 ;
                                     00F8   246 ; OUTPUTS:
                                     00F8   247 ;
                                     00F8   248 ;	THE EXCEPTION IS FORCED FORCED FATAL BY MAKING IT APPEAR AS THOUGH IT
                                     00F8   249 ;	HAD VECTORED THROUGH THE LAST CHANCE HANDLER AND THE CATCH ALL HANDLER
                                     00F8   250 ;	IS CALLED WITH THE ORIGINAL EXCEPTION ARGUMENT LIST.
                                     00F8   251 ;-
                                     00F8   252  
                               0000' 00F8   253 	.ENTRY	MCR$CONDHAND,^M<>
   00000074'9F         13'AF     9E  00FA   254 	MOVAB	B^10$,@#CTL$AG_CLIDATA+PRC_L_EXTHND ;RESET EXIT HANDLER ADDRESS
            50         08 AC     D0  0102   255 	MOVL	CHF$L_MCHARGLST(AP),R0	;GET ADDRESS OF MECHANISM ARRAY
         04 A0            03     CE  0106   256 	MNEGL	#3,CHF$L_MCH_FRAME(R0)	;FORCE FATAL EXCEPTION CONDITION
   00000000'9F            6C     FA  010A   257 	CALLG	(AP),@#EXE$CATCH_ALL	;CALL CATCH ALL CONDITION HANDLER
                          E5     11  0111   258 	BRB	MCR$CONDHAND		;
                               0000  0113   259 10$:	.WORD	0			;ENTRY MASK FOR DUMMY EXIT HANDLER
            50            01     3C  0115   260 	MOVZWL	#SS$_CONTINUE,R0	;SET CONTINUATION STATUS
                                 04  0118   261 	RET				;
                                     0119   262  
                                     0119   263 	.END
MCRHANDLE       - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:38:52   VAX-11 MACRO X0.3-11               Page   8
SYMBOL TABLE                                                                                                                     (1)

$$T1           = 00000001            CLI$_NOLIST    = 000380C0            DEV$M_SQD      = 00000020            
BIT...         = 00000000            CLI$_NOOPTPRS  = 00038842            DEV$M_SWL      = 02000000            
CHF$L_MCHARGLST  00000008            CLI$_NOQUAL    = 000380C8            DEV$M_TRM      = 00000004            
CHF$L_MCH_ARGS   00000000            CLI$_NORMAL    = 00030001            DEV$M_WCK      = 80000000            
CHF$L_MCH_DEPTH  00000008            CLI$_NOTNEG    = 000380D8            DEV$V_ALL      = 00000017            
CHF$L_MCH_FRAME  00000004            CLI$_NOVALU    = 000380D0            DEV$V_AVL      = 00000012            
CHF$L_MCH_SAVR0  0000000C            CLI$_NOVALUE   = 0003882A            DEV$V_CCL      = 00000001            
CHF$L_MCH_SAVR1  00000010            CLI$_NULFIL    = 000380E0            DEV$V_DIR      = 00000003            
CHF$L_SIGARGLST  00000004            CLI$_NUMBER    = 000380E8            DEV$V_DMT      = 00000015            
CHF$L_SIG_ARG1   00000008            CLI$_ONCOMD    = 000380F0            DEV$V_ELG      = 00000016            
CHF$L_SIG_ARGS   00000000            CLI$_ONERR     = 000380F8            DEV$V_FOD      = 0000000E            
CHF$L_SIG_NAME   00000004            CLI$_ONEVAL    = 00038158            DEV$V_FOR      = 00000018            
CLI$K_DEFGLOBAL= 00000003            CLI$_ONLEVL    = 00038100            DEV$V_GEN      = 00000011            
CLI$K_DEFLOCAL = 00000002            CLI$_ONOVF     = 00038108            DEV$V_IDV      = 0000001A            
CLI$K_PAUSE    = 00000001            CLI$_OVRFLW    = 00038160            DEV$V_MBX      = 00000014            
CLI$_ABFNAM    = 000381B8            CLI$_PARMDEL   = 00038110            DEV$V_MNT      = 00000013            
CLI$_ABKEYW    = 00038000            CLI$_PROC_ID   = 0003FFF1            DEV$V_NET      = 0000000D            
CLI$_ABVERB    = 00038008            CLI$_QUEJOBCRE = 0003FFF9            DEV$V_ODV      = 0000001B            
CLI$_BADRET    = 00038198            CLI$_REQPRMABS = 00038812            DEV$V_RCK      = 0000001E            
CLI$_BADTEXT   = 000381B0            CLI$_RSLOVF    = 00038118            DEV$V_REC      = 00000000            
CLI$_BUFOVF    = 00038018            CLI$_SKPDAT    = 00038120            DEV$V_RND      = 0000001C            
CLI$_COMPLX    = 00038020            CLI$_SPARE0    = 00038010            DEV$V_RTM      = 0000001D            
CLI$_CONFQUAL  = 00038802            CLI$_SPARE1    = 00038058            DEV$V_SDI      = 00000004            
CLI$_CREQUEJOB = 0003884A            CLI$_STKOVF    = 00038128            DEV$V_SHR      = 00000010            
CLI$_DEFOVF    = 00038028            CLI$_SUBMITERR = 00038852            DEV$V_SPL      = 00000006            
CLI$_DEVALSPL  = 0003885A            CLI$_SYMDEL    = 00038130            DEV$V_SQD      = 00000005            
CLI$_DEVNOTFOR = 0003887A            CLI$_SYMOVF    = 00038138            DEV$V_SWL      = 00000019            
CLI$_DEVNOTSPL = 00038862            CLI$_UNDFIL    = 00038188            DEV$V_TRM      = 00000002            
CLI$_DIRECT    = 00038030            CLI$_UNDSYM    = 00038140            DEV$V_WCK      = 0000001F            
CLI$_EXPSYN    = 00038038            CLI$_UNPROPARM = 00038170            EXE$CATCH_ALL    ********   X   03   
CLI$_FILOPN    = 00038190            CLI$_UNPROQUAL = 00038168            GBL...         = 00000000            
CLI$_ILLVAL    = 0003883A            CLI$_USGOTO    = 00038148            IMGPAUSE         000000A9 R     03   
CLI$_IMCHNG    = 00038040            CLI$_VALCNVERR = 00038832            INPBUFSIZ      = 00000084            
CLI$_IMGFNF    = 00038872            CLI$_VALREQ    = 00038150            INVREQ           0000001D R     03   
CLI$_INSFPRM   = 00038048            CMDBUFSIZ      = 000001FC            IO$M_ABORT     = 00000100            
CLI$_INVKEY    = 00038178            CTL$AG_CLIDATA   ********   X   03   IO$M_ACCESS    = 00000040            
CLI$_INVQUAL   = 0003880A            DEV$M_ALL      = 00800000            IO$M_ATTNAST   = 00000100            
CLI$_INVQUALNUM= 0003881A            DEV$M_AVL      = 00040000            IO$M_BINARY    = 00000040            
CLI$_INVREQTYP = 00038822            DEV$M_CCL      = 00000002            IO$M_CANCTRLO  = 00000040            
CLI$_INVRSP    = 00038180            DEV$M_DIR      = 00000008            IO$M_COMMOD    = 00000040            
CLI$_INVUIC    = 000381A8            DEV$M_DMT      = 00200000            IO$M_CREATE    = 00000080            
CLI$_IVCHAR    = 00038050            DEV$M_ELG      = 00400000            IO$M_CTRLCAST  = 00000100            
CLI$_IVDEVTYPE = 0003886A            DEV$M_FOD      = 00004000            IO$M_CTRLYAST  = 00000080            
CLI$_IVFNAM    = 000381C0            DEV$M_FOR      = 01000000            IO$M_CVTLOW    = 00000100            
CLI$_IVKEYW    = 00038060            DEV$M_GEN      = 00020000            IO$M_DATACHECK = 00004000            
CLI$_IVOPER    = 00038068            DEV$M_IDV      = 04000000            IO$M_DELETE    = 00000100            
CLI$_IVPROT    = 00038070            DEV$M_MBX      = 00100000            IO$M_DMOUNT    = 00000400            
CLI$_IVQLOC    = 00038078            DEV$M_MNT      = 00080000            IO$M_DSABLMBX  = 00000400            
CLI$_IVSYMB    = 00038080            DEV$M_NET      = 00002000            IO$M_ENABLMBX  = 00000080            
CLI$_IVVALU    = 00038088            DEV$M_ODV      = 08000000            IO$M_FCODE     = 0000003F            
CLI$_IVVERB    = 00038090            DEV$M_RCK      = 40000000            IO$M_HANGUP    = 00000200            
CLI$_MAXPARM   = 00038098            DEV$M_REC      = 00000001            IO$M_INHERLOG  = 00000800            
CLI$_MULKEY    = 000381A0            DEV$M_RND      = 10000000            IO$M_INHEXTGAP = 00001000            
CLI$_NOATFIL   = 000380A0            DEV$M_RTM      = 20000000            IO$M_INHRETRY  = 00008000            
CLI$_NOCCAT    = 000380A8            DEV$M_SDI      = 00000010            IO$M_INHSEEK   = 00001000            
CLI$_NOCOMD    = 000380B0            DEV$M_SHR      = 00010000            IO$M_INTERRUPT = 00000040            
CLI$_NOKEYW    = 000380B8            DEV$M_SPL      = 00000040            IO$M_INTSKIP   = 00000100            
MCRHANDLE       - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:38:52   VAX-11 MACRO X0.3-11               Page   9
SYMBOL TABLE                                                                                                                     (1)

IO$M_MOUNT     = 00000200            IO$_ACPCONTROL = 00000038            MCR_M_DEFALT   = 00000008            
IO$M_NOECHO    = 00000040            IO$_CREATE     = 00000033            MCR_M_DELINP   = 00000080            
IO$M_NOFILTR   = 00000200            IO$_DEACCESS   = 00000034            MCR_M_DOLLARS  = 00000100            
IO$M_NOFORMAT  = 00000100            IO$_DELETE     = 00000035            MCR_M_ESCAPE   = 00000004            
IO$M_NOW       = 00000040            IO$_DIAGNOSE   = 0000001D            MCR_M_ESCTRM   = 00000200            
IO$M_NOWAIT    = 00000080            IO$_DRVCLR     = 00000004            MCR_M_GLOBAL   = 00000400            
IO$M_PACKED    = 00000080            IO$_ERASETAPE  = 00000006            MCR_M_LOWER    = 00000800            
IO$M_PURGE     = 00000800            IO$_LOGICAL    = 0000002F            MCR_M_OPNINP   = 00000040            
IO$M_READATTN  = 00000080            IO$_MODIFY     = 00000036            MCR_M_RAD50    = 00000001            
IO$M_REVERSE   = 00000040            IO$_MOUNT      = 00000039            MCR_M_STRSUB   = 00001000            
IO$M_SHUTDOWN  = 00000080            IO$_NOP        = 00000000            MCR_V_ALPHAN   = 00000001            
IO$M_STARTUP   = 00000040            IO$_OFFSET     = 00000006            MCR_V_DEFALT   = 00000003            
IO$M_SYNCH     = 00000200            IO$_PACKACK    = 00000008            MCR_V_DELINP   = 00000007            
IO$M_TIMED     = 00000080            IO$_PHYSICAL   = 0000001F            MCR_V_DOLLARS  = 00000008            
IO$M_TRMNOECHO = 00001000            IO$_READHEAD   = 0000000E            MCR_V_ESCAPE   = 00000002            
IO$M_WRTATTN   = 00000100            IO$_READLBLK   = 00000021            MCR_V_ESCTRM   = 00000009            
IO$S_FCODE     = 00000006            IO$_READPBLK   = 0000000C            MCR_V_FORCMD   = 0000000E            
IO$V_ABORT     = 00000008            IO$_READPRESET = 00000019            MCR_V_GLOBAL   = 0000000A            
IO$V_ACCESS    = 00000006            IO$_READPROMPT = 00000037            MCR_V_LOWER    = 0000000B            
IO$V_ATTNAST   = 00000008            IO$_READTRACKD = 00000010            MCR_V_OPNINP   = 00000006            
IO$V_BINARY    = 00000006            IO$_READVBLK   = 00000031            MCR_V_RAD50    = 00000000            
IO$V_CANCTRLO  = 00000006            IO$_RECAL      = 00000003            MCR_V_STRSUB   = 0000000C            
IO$V_COMMOD    = 00000006            IO$_RELEASE    = 00000005            MSGBUFSIZ      = 00000084            
IO$V_CREATE    = 00000007            IO$_RETCENTER  = 00000007            PAUSE            00000025 R     03   
IO$V_CTRLCAST  = 00000008            IO$_REWIND     = 00000024            PRC_B_DEFRADIX   00000092            
IO$V_CTRLYAST  = 00000007            IO$_REWINDOFF  = 00000022            PRC_B_EXMDEPMOD  00000091            
IO$V_CVTLOW    = 00000008            IO$_SEARCH     = 00000009            PRC_B_EXMDEPWID  00000090            
IO$V_DATACHECK = 0000000E            IO$_SEEK       = 00000002            PRC_K_DEC      = 00000001            
IO$V_DELETE    = 00000008            IO$_SENSECHAR  = 0000001B            PRC_K_HEX      = 00000000            
IO$V_DMOUNT    = 0000000A            IO$_SENSEMODE  = 00000027            PRC_K_LENGTH     000000A0            
IO$V_DSABLMBX  = 0000000A            IO$_SETCHAR    = 0000001A            PRC_K_OCT      = 00000002            
IO$V_ENABLMBX  = 00000007            IO$_SETMODE    = 00000023            PRC_L_CLIWRK0    0000005C            
IO$V_FCODE     = 00000000            IO$_SKIPFILE   = 00000025            PRC_L_CLIWRK1    00000060            
IO$V_HANGUP    = 00000009            IO$_SKIPRECORD = 00000026            PRC_L_CLIWRK2    00000064            
IO$V_INHERLOG  = 0000000B            IO$_SPACEFILE  = 00000002            PRC_L_CLIWRK3    00000068            
IO$V_INHEXTGAP = 0000000C            IO$_SPACERECORD= 00000009            PRC_L_CLIWRK4    0000006C            
IO$V_INHRETRY  = 0000000F            IO$_STARTSPNDL = 00000019            PRC_L_ERRRAB     00000010            
IO$V_INHSEEK   = 0000000C            IO$_UNLOAD     = 00000001            PRC_L_EXMDEPADR  0000008C            
IO$V_INTERRUPT = 00000006            IO$_VIRTUAL    = 0000003F            PRC_L_EXTARG     00000078            
IO$V_INTSKIP   = 00000008            IO$_WRITECHECK = 0000000A            PRC_L_EXTBLK     00000070            
IO$V_MOUNT     = 00000009            IO$_WRITECHECKH= 00000018            PRC_L_EXTCOD     00000080            
IO$V_NOECHO    = 00000006            IO$_WRITEHEAD  = 0000000D            PRC_L_EXTHND     00000074            
IO$V_NOFILTR   = 00000009            IO$_WRITELBLK  = 00000020            PRC_L_EXTPRM     0000007C            
IO$V_NOFORMAT  = 00000008            IO$_WRITEMARK  = 0000001C            PRC_L_INDEPTH    00000048            
IO$V_NOW       = 00000006            IO$_WRITEOF    = 00000028            PRC_L_INDFAB     0000001C            
IO$V_NOWAIT    = 00000007            IO$_WRITEPBLK  = 0000000B            PRC_L_INDINPRAB  00000014            
IO$V_PACKED    = 00000007            IO$_WRITETRACKD= 0000000F            PRC_L_INDOUTRAB  00000018            
IO$V_PURGE     = 0000000B            IO$_WRITEVBLK  = 00000030            PRC_L_INPRAB     00000008            
IO$V_READATTN  = 00000007            MCR$CHANGE_MODE  00000000 RG    03   PRC_L_LSTSTATUS  00000094            
IO$V_REVERSE   = 00000006            MCR$CONDHAND     000000F8 RG    03   PRC_L_ONCTLY     0000009C            
IO$V_SHUTDOWN  = 00000007            MCR$CONTRLY      0000003B RG    03   PRC_L_ONERROR    00000058            
IO$V_STARTUP   = 00000006            MCR$ENBCONTRLY   000000C7 RG    03   PRC_L_OUTRAB     0000000C            
IO$V_SYNCH     = 00000009            MCR$HIGH_LIMIT   ********   X   03   PRC_L_PROCUIC    00000098            
IO$V_TIMED     = 00000007            MCR$LOW_LIMIT    ********   X   03   PRC_L_SAVAP      00000000            
IO$V_TRMNOECHO = 0000000C            MCR$RESTART      ********   X   03   PRC_L_SAVFP      00000004            
IO$V_WRTATTN   = 00000008            MCR$SCNTRLY      00000094 RG    03   PRC_L_SEVERITY   00000040            
IO$_ACCESS     = 00000032            MCR_M_ALPHAN   = 00000002            PRC_L_STACKLM    00000088            
MCRHANDLE       - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:38:52   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (1)

PRC_L_STACKPT    00000084            PSL$M_TP       = 40000000            RAB$M_LOC      = 00010000            
PRC_L_STATUS     00000044            PSL$S_CURMOD   = 00000002            RAB$M_MAS      = 00000020            
PRC_L_SYMBOL     0000004C            PSL$S_IPL      = 00000005            RAB$M_NLK      = 00100000            
PRC_M_CNTRLY   = 00000002            PSL$S_PRVMOD   = 00000002            RAB$M_NXR      = 00800000            
PRC_M_DBGQUAL  = 00000200            PSL$V_CM       = 0000001F            RAB$M_PMT      = 40000000            
PRC_M_DBGTRUE  = 00000400            PSL$V_CURMOD   = 00000018            RAB$M_PPF_IND  = 00004000            
PRC_M_DISABL   = 00000004            PSL$V_DV       = 00000007            RAB$M_PPF_RAT  = 00003FC0            
PRC_M_EXIT     = 00000008            PSL$V_FPD      = 0000001B            RAB$M_PTA      = 20000000            
PRC_M_GOEOF    = 00000001            PSL$V_FU       = 00000006            RAB$M_RAH      = 00000200            
PRC_M_GOTO     = 00000010            PSL$V_IPL      = 00000010            RAB$M_RLK      = 00080000            
PRC_M_HANGUP   = 00001000            PSL$V_IS       = 0000001A            RAB$M_RNE      = 01000000            
PRC_M_IND      = 00000020            PSL$V_IV       = 00000005            RAB$M_RNF      = 08000000            
PRC_M_MODE     = 00000040            PSL$V_PRVMOD   = 00000016            RAB$M_TMO      = 02000000            
PRC_M_NOCTLY   = 00004000            PSL$V_TBIT     = 00000004            RAB$M_TPT      = 00000002            
PRC_M_PAUSE    = 00002000            PSL$V_TP       = 0000001E            RAB$M_UIF      = 00000010            
PRC_M_USRDET   = 00000100            RAB$B_BID        00000000            RAB$M_ULK      = 00040000            
PRC_M_VERIFY   = 00000080            RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            
PRC_M_YLEVEL   = 00000800            RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            
PRC_Q_ALLOCREG   00000020            RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            
PRC_Q_GLOBAL     00000028            RAB$B_MBC        00000037            RAB$V_ASY      = 00000000            
PRC_Q_LABEL      00000030            RAB$B_MBF        00000036            RAB$V_BIO      = 0000000B            
PRC_Q_LOCAL      00000038            RAB$B_PSZ        00000034            RAB$V_CCO      = 0000001F            
PRC_V_CNTRLY   = 00000001            RAB$B_RAC        0000001E            RAB$V_CVT      = 0000001A            
PRC_V_DBGQUAL  = 00000009            RAB$B_ROP1       00000005            RAB$V_EOF      = 00000008            
PRC_V_DBGTRUE  = 0000000A            RAB$B_ROP2       00000006            RAB$V_FDL      = 00000006            
PRC_V_DISABL   = 00000002            RAB$B_ROP3       00000007            RAB$V_HSH      = 00000007            
PRC_V_EXIT     = 00000003            RAB$B_TMO        0000001F            RAB$V_KGE      = 00000015            
PRC_V_GOEOF    = 00000000            RAB$C_BID      = 00000001            RAB$V_KGT      = 00000016            
PRC_V_GOTO     = 00000004            RAB$C_BLN        00000044            RAB$V_LIM      = 0000000E            
PRC_V_HANGUP   = 0000000C            RAB$C_KEY      = 00000001            RAB$V_LOA      = 0000000D            
PRC_V_IND      = 00000005            RAB$C_RFA      = 00000002            RAB$V_LOC      = 00000010            
PRC_V_MODE     = 00000006            RAB$C_SEQ      = 00000000            RAB$V_MAS      = 00000005            
PRC_V_NOCTLY   = 0000000E            RAB$K_BLN        00000044            RAB$V_NLK      = 00000014            
PRC_V_PAUSE    = 0000000D            RAB$L_BKT        00000038            RAB$V_NXR      = 00000017            
PRC_V_USRDET   = 00000008            RAB$L_CTX        00000018            RAB$V_PMT      = 0000001E            
PRC_V_VERIFY   = 00000007            RAB$L_DCT        00000038            RAB$V_PPF_IND  = 0000000E            
PRC_V_YLEVEL   = 0000000B            RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            
PRC_W_CLIFLAG    00000052            RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            
PRC_W_ERRIFI     00000052            RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            
PRC_W_FLAGS      00000054            RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            
PRC_W_INPCHAN    00000050            RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            
PRC_W_ONLEVEL    00000056            RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            
PSL$C_EXEC     = 00000001            RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            
PSL$C_KERNEL   = 00000000            RAB$L_STS        00000008            RAB$V_TPT      = 00000001            
PSL$C_SUPER    = 00000002            RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            
PSL$C_USER     = 00000003            RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            
PSL$M_CM       = 80000000            RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            
PSL$M_CURMOD   = 03000000            RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            
PSL$M_DV       = 00000080            RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            
PSL$M_FPD      = 08000000            RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            
PSL$M_FU       = 00000040            RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            
PSL$M_IPL      = 001F0000            RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            
PSL$M_IS       = 04000000            RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            
PSL$M_IV       = 00000020            RAB$M_KGE      = 00200000            RSLBUFSIZ      = 00000180            
PSL$M_PRVMOD   = 00C00000            RAB$M_KGT      = 00400000            SS$_ABORT      = 0000002C            
PSL$M_SAFBITS  = 000037FF            RAB$M_LIM      = 00004000            SS$_ACCONFLICT = 00000800            
PSL$M_TBIT     = 00000010            RAB$M_LOA      = 00002000            SS$_ACCVIO     = 0000000C            
MCRHANDLE       - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:38:52   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (1)

SS$_ACPVAFUL   = 000002FC            SS$_FCPREWNDERR= 00000890            SS$_MCHECK     = 000002BC            
SS$_ARTRES     = 00000474            SS$_FCPSPACERR = 00000898            SS$_MEDOFL     = 000001A4            
SS$_ASTFLT     = 0000040C            SS$_FCPWRITERR = 000008A0            SS$_MSGNOTFND  = 00000621            
SS$_BADATTRIB  = 00000034            SS$_FILACCERR  = 0000009C            SS$_MTLBLLONG  = 00000304            
SS$_BADCHKSUM  = 00000808            SS$_FILALRACC  = 000000A4            SS$_MUSTCLOSEFL= 00000948            
SS$_BADESCAPE  = 0000003C            SS$_FILELOCKED = 000008A8            SS$_NOAQB      = 00000314            
SS$_BADFILEHDR = 00000810            SS$_FILENUMCHK = 000008B0            SS$_NODATA     = 000001AC            
SS$_BADFILENAME= 00000818            SS$_FILESEQCHK = 000008B8            SS$_NOHANDLER  = 000008F8            
SS$_BADFILEVER = 00000820            SS$_FILESTRUCT = 000008C0            SS$_NOHOMEBLK  = 000008E0            
SS$_BADIMGHDR  = 00000044            SS$_FILNOTACC  = 000000AC            SS$_NOIOCHAN   = 000001B4            
SS$_BADIRECTORY= 00000828            SS$_FILNOTCNTG = 000002AC            SS$_NOLINKS    = 0000027C            
SS$_BADPARAM   = 00000014            SS$_FILNOTEXP  = 000000B4            SS$_NOLOGNAM   = 000001BC            
SS$_BADSTACK   = 000002B4            SS$_FLTDIV     = 00000494            SS$_NOMBX      = 00000274            
SS$_BEGOFFILE  = 00000938            SS$_FLTOVF     = 0000048C            SS$_NOMOREFILES= 00000930            
SS$_BLOCKCNTERR= 00000940            SS$_FLTUND     = 0000049C            SS$_NONEXDRV   = 000001C4            
SS$_BREAK      = 00000414            SS$_FORMAT     = 000000BC            SS$_NONEXPR    = 000008E8            
SS$_BUFBYTALI  = 0000030C            SS$_GPTFULL    = 000000C4            SS$_NONLOCAL   = 000008F0            
SS$_BUFFEROVF  = 00000601            SS$_GSDFULL    = 000000CC            SS$_NOPRIV     = 00000024            
SS$_BUGCHECK   = 000002A4            SS$_HANGUP     = 000002CC            SS$_NORMAL     = 00000001            
SS$_CANCEL     = 00000830            SS$_HEADERFULL = 000008C8            SS$_NOSIGNAL   = 00000900            
SS$_CHANINTLK  = 0000004C            SS$_IDXFILEFULL= 000008D0            SS$_NOSOLICIT  = 00000284            
SS$_CLIFRCEXT  = 00000980            SS$_ILLBLKNUM  = 000000DC            SS$_NOSUCHDEV  = 00000908            
SS$_CMODSUPR   = 0000041C            SS$_ILLCNTRFUNC= 000000E4            SS$_NOSUCHFILE = 00000910            
SS$_CMODUSER   = 00000424            SS$_ILLEFC     = 000000EC            SS$_NOSUCHNODE = 0000028C            
SS$_COMPAT     = 0000042C            SS$_ILLIOFUNC  = 000000F4            SS$_NOSUCHSEC  = 00000978            
SS$_CONTINUE   = 00000001            SS$_ILLLBLAST  = 00000968            SS$_NOTAPEOP   = 00000264            
SS$_CONTROLC   = 00000651            SS$_ILLPAGCNT  = 000000FC            SS$_NOTFILEDEV = 000001CC            
SS$_CONTROLO   = 00000609            SS$_ILLSEQOP   = 000002DC            SS$_NOTINTBLSZ = 000001D4            
SS$_CONTROLY   = 00000611            SS$_ILLSER     = 00000104            SS$_NOTLABELMT = 000001DC            
SS$_CREATED    = 00000619            SS$_ILLUSRLBLRD= 00000958            SS$_NOTMODIFIED= 00000659            
SS$_CTRLERR    = 00000054            SS$_ILLUSRLBLWT= 00000960            SS$_NOTNETDEV  = 000002EC            
SS$_DATACHECK  = 0000005C            SS$_INCVOLLABEL= 0000010C            SS$_NOTRAN     = 00000629            
SS$_DATAOVERUN = 00000838            SS$_INSFARG    = 00000114            SS$_NOTSQDEV   = 000001E4            
SS$_DEBUG      = 0000046C            SS$_INSFMEM    = 00000124            SS$_OPCCUS     = 00000434            
SS$_DECOVF     = 000004A4            SS$_INSFRAME   = 0000012C            SS$_OPCDEC     = 0000043C            
SS$_DEVACTIVE  = 000002C4            SS$_INSFWSL    = 0000011C            SS$_OPINCOMPL  = 000002D4            
SS$_DEVALLOC   = 00000840            SS$_INTDIV     = 00000484            SS$_PAGOWNVIO  = 000001EC            
SS$_DEVALRALLOC= 00000641            SS$_INTOVF     = 0000047C            SS$_PAGRDERR   = 00000444            
SS$_DEVASSIGN  = 00000848            SS$_IVADDR     = 00000134            SS$_PARITY     = 000001F4            
SS$_DEVFOREIGN = 00000064            SS$_IVCHAN     = 0000013C            SS$_PARTESCAPE = 000001FC            
SS$_DEVICEFULL = 00000850            SS$_IVCHNLSEC  = 0000026C            SS$_PFMBSY     = 00000204            
SS$_DEVMOUNT   = 0000006C            SS$_IVDEVNAM   = 00000144            SS$_PLHLDR     = 00000404            
SS$_DEVNOTALLOC= 00000858            SS$_IVGSDNAM   = 0000014C            SS$_PSTFULL    = 0000020C            
SS$_DEVNOTMBX  = 00000074            SS$_IVLOGNAM   = 00000154            SS$_RADRMOD    = 0000044C            
SS$_DEVNOTMOUNT= 0000007C            SS$_IVLOGTAB   = 0000015C            SS$_REJECT     = 00000294            
SS$_DEVOFFLINE = 00000084            SS$_IVPROTECT  = 000002F4            SS$_REMOTE     = 00000649            
SS$_DIRFULL    = 00000860            SS$_IVQUOTAL   = 00000164            SS$_RESIGNAL   = 00000918            
SS$_DRVERR     = 0000008C            SS$_IVSECFLG   = 0000016C            SS$_RESULTOVF  = 00000214            
SS$_DUPFILENAME= 00000868            SS$_IVSECIDCTL = 000002E4            SS$_ROPRAND    = 00000454            
SS$_DUPLNAM    = 00000094            SS$_IVSSRQ     = 00000174            SS$_SECTBLFUL  = 0000021C            
SS$_ENDOFFILE  = 00000870            SS$_IVSTSFLG   = 0000017C            SS$_SSFAIL     = 0000045C            
SS$_ENDOFTAPE  = 00000878            SS$_IVTIME     = 00000184            SS$_SUBRNG     = 000004AC            
SS$_ENDOFUSRLBL= 00000970            SS$_LCKPAGFUL  = 000000D4            SS$_SUPERSEDE  = 00000631            
SS$_EXQUOTA    = 0000001C            SS$_LENVIO     = 0000018C            SS$_TAPEPOSLOST= 00000224            
SS$_EXTIDXFILE = 00000880            SS$_LKWSETFUL  = 00000194            SS$_TBIT       = 00000464            
SS$_FCPREADERR = 00000888            SS$_MBFULL     = 000008D8            SS$_TIMEOUT    = 0000022C            
SS$_FCPREPSTN  = 00000988            SS$_MBTOOSML   = 0000019C            SS$_TOOMANYVER = 00000990            
MCRHANDLE       - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:38:52   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (1)

SS$_TOOMUCHDATA= 0000029C            WRK_W_LOCFLG     FFFFFFF8            
SS$_UNASEFC    = 00000234            
SS$_UNSAFE     = 0000023C            
SS$_UNWIND     = 00000920            
SS$_UNWINDING  = 00000928            
SS$_VASFULL    = 00000244            
SS$_VECINUSE   = 0000024C            
SS$_VOLINV     = 00000254            
SS$_WAITUSRLBL = 00000950            
SS$_WASCLR     = 00000001            
SS$_WASECC     = 00000639            
SS$_WASSET     = 00000009            
SS$_WRITLCK    = 0000025C            
SS$_WRONGACP   = 0000031C            
SYS$QIOW         ********   X   03   
WRK_AB_BUFFER    FFFFFD44            
WRK_AG_RESULT    FFFFFBC0            
WRK_B_CMDFLG     FFFFFFC9            
WRK_B_CURADX     FFFFFFCA            
WRK_B_PARMCNT    FFFFFFCB            
WRK_B_VERBTYP    FFFFFFC8            
WRK_K_LENGTH     FFFFFBC0            
WRK_L_CHARPTR    FFFFFFFC            
WRK_L_IMAGE      FFFFFFEC            
WRK_L_MAXPARM    FFFFFFCC            
WRK_L_MINPARM    FFFFFFD0            
WRK_L_PAROUT     FFFFFFF0            
WRK_L_PROMPT     FFFFFFF4            
WRK_L_QUABLK     FFFFFFE8            
WRK_L_RSLNXT     FFFFFD40            
WRK_L_SAVAP      FFFFFFD8            
WRK_L_SAVFP      FFFFFFDC            
WRK_L_SAVSP      FFFFFFD4            
WRK_M_ALL      = 00000001            
WRK_M_ASK      = 00000100            
WRK_M_COMMAND  = 00000002            
WRK_M_CONTINU  = 00000400            
WRK_M_EQUAL    = 00000008            
WRK_M_IMCHNG   = 00000004            
WRK_M_QUAL     = 00000010            
WRK_M_QUOTE    = 00000020            
WRK_M_STAR     = 00000040            
WRK_M_TRAILSPC = 00000200            
WRK_M_VERB     = 00000080            
WRK_Q_IOSB       FFFFFFE0            
WRK_V_ALL      = 00000000            
WRK_V_ASK      = 00000008            
WRK_V_COMMAND  = 00000001            
WRK_V_CONTINU  = 0000000A            
WRK_V_EQUAL    = 00000003            
WRK_V_IMCHNG   = 00000002            
WRK_V_QUAL     = 00000004            
WRK_V_QUOTE    = 00000005            
WRK_V_STAR     = 00000006            
WRK_V_TRAILSPC = 00000009            
WRK_V_VERB     = 00000007            
WRK_W_FLAGS      FFFFFFFA            
MCRHANDLE       - CONDITION AND CONTROL Y AST HANDLER ROUTINES   22-AUG-1978 01:38:52   VAX-11 MACRO X0.3-11               Page  13
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFC      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
MCR$ZCODE        00000119      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
3930. BYTES LEFT IN FREE MEMORY POOL.
3410. BYTES OF RECLAIMED MEMORY.
OBJ$:MCRHANDLE,LIS$:MCRHANDLE/-SP=EXECML$/ML,LIB$:MCR/ML,SRC$:MCRHANDLE
58 MLB DIR RDS - 1025 GETS TO DEFINE 26 MACROS. 90 INTER. FILE WRITES. 
