MCREXADEP       - EXAMINE AND DEPOSIT COMMANDS                   22-AUG-1978 01:36:20   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      84  EXAM/DEPO COMMAND 
MCREXADEP       - EXAMINE AND DEPOSIT COMMANDS                   22-AUG-1978 01:36:20   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	MCREXADEP - EXAMINE AND DEPOSIT COMMANDS
                                     0000     2 	.IDENT	/01/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977, 1978
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; W. H. BROWN 28-JUL-1977
                                     0000    24 ;
                                     0000    25 ; EXAMINE / DEPOSIT DCLS COMMAND EXECUTION
                                     0000    26 ;
                                     0000    27 ; MACRO LIBRARY CALLS
                                     0000    28 ;
                                     0000    29  
                                     0000    30 	$PSLDEF				; PROCESSOR STATUS LONG WORDS
                                     0000    31 	DEFCMDWRK			; DEFINE WORK AREA OFFSETS
                                     0000    32 	DEFERRCOD			; DEFINE ERROR/STATUS CODES
                                     0000    33 	$CLIDEFQUALEXAM			; AND LIKEWISE FOR EXAMIN
                                     0000    34 ;
                                     0000    35 ; LCOAL DEFINITIONS
                                     0000    36 ;
                                     0000    37 ; DISPLAY CONTROL MODE
                                     0000    38 ;
                                     0000    39  
                           00000000  0000    40 	HEXMOD	=  0			; EXAMINE MODE IS HEX
                           00000001  0000    41 	DECMOD	=  1			; EXAMINE MODE IS DECIMAL
                           00000002  0000    42 	OCTMOD	=  2			; EXAMINE MODE IS OCTAL
                           FFFFFFFF  0000    43 	ASCMOD	= -1			; EXAMINE MODE IS ASCII
                                     0000    44 ;
                                     0000    45 ; WIDTH CONTROL VALUES
                                     0000    46 ;
                           00000004  0000    47 	LONGWID	= 4			; LONG WORD WIDTH
                           00000001  0000    48 	BYTEWID	= 1			; BYTE WIDTH
                           00000002  0000    49 	WORDWID	= 2			; WORD WIDTH
                                     0000    50  
                                     0000    51 ; LOCAL DATA
                                     0000    52 ;
                                     0000    53  
                                 00000000    54 	.PSECT	MCR$ZCODE	BYTE,RD,NOWRT
                                     0000    55  
                                     0000    56 ; DISPLAY WIDTH CONTROL ARRAYS FOR EACH MODE
                                     0000    57 ;
MCREXADEP       - EXAMINE AND DEPOSIT COMMANDS                   22-AUG-1978 01:36:20   VAX-11 MACRO X0.3-11               Page   2
01                                                                                                                               (1)

                        01 03 03 02  0000    58 BW:	.BYTE	2,3,3,1			; DISPLAY WIDTH FOR BYTE OF EACH MODE
                        02 06 05 04  0004    59 WW:	.BYTE	4,5,6,2			; LIKEWISE FOR WORD WIDTH
                        04 08 0A 08  0008    60 LW:	.BYTE	8,10,8,4		; AND THE SAME FOR LONGWORDS
                                     000C    61  
                                     000C    62 ;
                                     000C    63 ; RADIX TABLE FOR NUMERIC CONVERSION.	NOTE:	RADIX 0 IS ASCII CONVERT
                                     000C    64 ;
                           08 0A 10  000C    65 RADIX:	.BYTE	16,10,8			; RADIX CONVERT TABLE
                                     000F    66  
                                     000F    67 ;
                                     000F    68 ; BIT ARRAY TO DEFINE WHICH OPTIONS EFFECT MODE OR WIDTH.
                                     000F    69 ; BIT SET INDICATES MODE SPECIFIER.
                                     000F    70 ;
                                     000F    71  
                                 5A  000F    72 TYPE:	.BYTE	<1@CLI$K_EXAM_ASCI>!-	; ASCII IS A MODE SWITCH
                                     0010    73 		<1@CLI$K_EXAM_DECI>!-	; DECIMAL IS A MODE SWITCH
                                     0010    74 		<1@CLI$K_EXAM_HEXA>!-	; HEXIDECIMAL
                                     0010    75 		<1@CLI$K_EXAM_OCTA>	; AND OCTAL
                                     0010    76  
                                     0010    77 ;
                                     0010    78 ; QUALIFIER VALUE TABLE.  THIS ARRAY HAS THE ASSOCIATED DATA FOR
                                     0010    79 ; THE RESPECTIVE OPTION TO BE LOADED INTO THE TABLE.
                                     0010    80 ;
               02 02 04 00 01 01 FF  0010    81 VALU:	.BYTE	ASCMOD,BYTEWID,DECMOD,HEXMOD,LONGWID,OCTMOD,WORDWID
                                     0017    82  
MCREXADEP       - EXAMINE AND DEPOSIT COMMANDS                   22-AUG-1978 01:36:20   VAX-11 MACRO X0.3-11               Page   3
01              EXAM/DEPO COMMAND                                                                                                (1)

                                     0017    84 	.SBTTL	EXAM/DEPO COMMAND 
                                     0017    85 ;+
                                     0017    86 ; MCR$EXAMINE - EXAMINE MEMORY COMMAND
                                     0017    87 ;
                                     0017    88 ;
                                     0017    89 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE EXAMINE
                                     0017    90 ; AND DEPOSIT COMMANDS.
                                     0017    91 ;
                                     0017    92 ; INPUTS:
                                     0017    93 ;
                                     0017    94 ;	R9 = ADDRESS OF NEXT BYTE IN COMMAND BUFFER.
                                     0017    95 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     0017    96 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     0017    97 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     0017    98 ;
                                     0017    99 ; WORK AREA LOCATIONS:
                                     0017   100 ;
                                     0017   101 ;	PRC_L_EXMDEPADR HAS "DOT"
                                     0017   102 ;	PRC_B_EXMDEPWID HAS CURRENT WIDTH, IE: BYTE, WORD, LONGWORD.
                                     0017   103 ;	PRC_B_EXMDEPMOD HAS CURRENT MODE, IE: HEX, ASCII, DECIMAL, OCTAL.
                                     0017   104 ;
                                     0017   105 ; OUTPUTS:
                                     0017   106 ;
                                     0017   107 ;	THE CURRENT DEFAULT RADIX AND WIDTH ARE SET TO THOSE SPECIFIED,IF ANY.
                                     0017   108 ;	THE SPECIFIED LOCATION(S) ARE DISPLAYED IN THE CURRENT RADIX AND WIDTH.
                                     0017   109 ;-
                                     0017   110 	.ENABL	LSB
                                     0017   111  
                                     0017   112 MCR$EXAMINE::				;
                          00C8   30  0017   113 	BSBW	GETIVL			; GET LOCATION
                          58     DD  001A   114 	PUSHL	R8			; SAVE VALUE
                          50     95  001C   115 	TSTB	R0			; END-OF-LINE?
                          0E     13  001E   116 	BEQL	20$			; BR IF YES
            50            3A     91  0020   117 	CMPB	#^A/:/,R0		; LIST?
                          03     13  0023   118 	BEQL	10$			; BR IF OK
                          012E   31  0025   119 	BRW	EXPSYN			; ALL DONE - SYNTAX ERROR
                                     0028   120 10$:	MOVCHAR				; COPY COLON INTO COMMAND BUFFER
                          00C0   30  002B   121 	BSBW	GETVAL			; FIND OTHER LIMIT
       008C CB            88     9E  002E   122 20$:	MOVAB	(R8)+,PRC_L_EXMDEPADR(R11) ; SET NEW "DOT"
                          57   8ED0  0033   123 	POPL	R7			; SET NEXT ADDRESS TO EXAMINE
            50            57     D0  0036   124 EXAMIN:	MOVL	R7,R0			; GET A COPY OF CURRENT ADDRESS
            52            6E     9E  0039   125 	MOVAB	(SP),R2			; BUFFER TO USE
                          01B4   30  003C   126 	BSBW	MCR$CNVHXL		; FORMAT HEX LONGWORD
            82       203A 8F     B0  003F   127 	MOVW	#^A/: /,(R2)+		; SEPARATE ADDRESS FOR CONTENTS
                          51     D4  0044   128 	CLRL	R1			; BUFFER WIDTH ADJUSTMENT OF ZERO
            52            51     C0  0046   129 40$:	ADDL	R1,R2			; POINT AT NEXT FREE BYTE
            82            20     90  0049   130 	MOVB	#^A/ /,(R2)+		; SPACE OUT FOR NEATNESS
            53       0090 CB     9A  004C   131 	MOVZBL	PRC_B_EXMDEPWID(R11),R3	; GET WIDTH OF CELL TO DISPLAY
                                     0051   132 	IFNORD	R3,(R7),50$,#PSL$C_USER ; CHECK FOR USER ACCESS TO DATA
            51       0091 CB     98  0057   133 	CVTBL	PRC_B_EXMDEPMOD(R11),R1	; MODE WE ARE DISPLAYING IN
                          40     19  005C   134 	BLSS	90$			; BR IF ASCII MODE
            02            53     D1  005E   135 	CMPL	R3,#2			; CHECK WIDTH OF DISPLAY
                          23     14  0061   136 	BGTR	70$			; IF GTR THAN WIDTH IS LONGWORD
                          17     13  0063   137 	BEQL	60$			; BR IF WORD WIDTH
            50            87     9A  0065   138 	MOVZBL	(R7)+,R0		; BYTE WIDTH - GET VALUE
            53         94 AF41   9A  0068   139 	MOVZBL	BW[R1],R3		; WIDTH OF FORMATED DISPLAY
                          20     11  006D   140 	BRB	80$			;
MCREXADEP       - EXAMINE AND DEPOSIT COMMANDS                   22-AUG-1978 01:36:20   VAX-11 MACRO X0.3-11               Page   4
01              EXAM/DEPO COMMAND                                                                                                (1)

            57         01 A8     9E  006F   141 50$:	MOVAB	1(R8),R7		; FORCE TERMINATION AFTER NEXT DISPLAY
            82   2A2A2A2A 8F     D0  0073   142 	MOVL	#^A/****/,(R2)+		; INDICATE ACCESS VIOLATION
                          36     11  007A   143 	BRB	110$			; SHOW WHAT WE HAVE TO SHOW
            50            87     3C  007C   144 60$:	MOVZWL	(R7)+,R0		; VALUE
            53         81 AF41   9A  007F   145 	MOVZBL	WW[R1],R3		; GET WIDTH FOR WORD DISPLAY
                          09     11  0084   146 	BRB	80$			; 
            50            87     D0  0086   147 70$:	MOVL	(R7)+,R0		; VALUE
            53       FF7A CF41   9A  0089   148 	MOVZBL	LW[R1],R3		; WIDTH OF FORMATTED DISPLAY
                          08     BB  008F   149 80$:	PUSHR	#^M<R3>			; SAVE WIDTH
            51       FF76 CF41   9A  0091   150 	MOVZBL	RADIX[R1],R1		; RADIX
                          015F   30  0097   151 	BSBW	MCR$CNVNUM		; GET VALUE
                          01     BA  009A   152 	POPR	#^M<R0>			; GET WIDTH OF DISPLAY INTO R0
                          14     11  009C   153 	BRB	110$			;
                          52     D7  009E   154 90$:	DECL	R2			; BACK OVER SPACE
            50            53     D0  00A0   155 	MOVL	R3,R0			; COPY WIDTH OF DISPLAY
            62            87     90  00A3   156 100$:	MOVB	(R7)+,(R2)		; COPY DATA INTO OUTPUT BUFFER
            20            82     91  00A6   157 	CMPB	(R2)+,#^A/ /		; CHARACTER PRINTABLE ?
                          04     18  00A9   158 	BGEQ	105$			; BR IF YES
         FF A2            2E     90  00AB   159 	MOVB	#^A/./,-1(R2)		; IF NO-PRINT A "DOT"
            F1            53     F5  00AF   160 105$:	SOBGTR	R3,100$			; MOVE ENOUGH BYTES?
            52            5E     C3  00B2   161 110$:	SUBL3	SP,R2,R1		; SET BYTE COUNT IN THE LINE
                          51         00B5       
            52            5E     D0  00B6   162 	MOVL	SP,R2			; STARTING ADDRESS
            50            51     C0  00B9   163 	ADDL	R1,R0			; ADD COUNT FOR NEXT DISPLAY
         4C 8F            50     91  00BC   164 	CMPB	R0,#76			; ENOUGH ROOM FOR STRING PLUS SPACE
                          08     1E  00C0   165 	BGEQU	120$			; BR IF NOT ENOUGH
            58            57     D1  00C2   166 	CMPL	R7,R8			; FINISHED?
                          03     1E  00C5   167 	BGEQU	120$			; BR IF NO MORE TO PRINT
                          FF7C   31  00C7   168 	BRW	40$			; ELSE PRINT SOME MORE
                                     00CA   169 120$:	MSGOUT				; PRINT IT
            58            57     D1  00CD   170 	CMPL	R7,R8			; DONE?
                          03     1E  00D0   171 	BGEQU	130$			; BR IF YES
                          FF61   31  00D2   172 	BRW	EXAMIN			; ELSE FORMAT ANOTHER LINE
                                     00D5   173 130$:	STATUS	NORMAL
                          7F     11  00D8   174 160$:	BRB	EXIT			; EXIT
                                     00DA   175  
                                     00DA   176 ;+
                                     00DA   177 ; GETIVL - GET INITIAL VALUE FROM THE COMMAND LINE.
                                     00DA   178 ;
                                     00DA   179 ; GETVAL - GET NEXT VALUE FROM THE COMMAND LINE.
                                     00DA   180 ;
                                     00DA   181 ; INPUTS:
                                     00DA   182 ;
                                     00DA   183 ;	R9 = ADDRESS OF NEXT BYTE IN COMMAND BUFFER.
                                     00DA   184 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     00DA   185 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     00DA   186 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     00DA   187 ;
                                     00DA   188 ; WORK AREA LOCATIONS:
                                     00DA   189 ;
                                     00DA   190 ;	PRC_L_EXMDEPADR HAS "DOT"
                                     00DA   191 ;	PRC_B_EXMDEPWID HAS CURRENT WIDTH, IE: BYTE, WORD, LONGWORD.
                                     00DA   192 ;	PRC_B_EXMDEPMOD HAS CURRENT MODE, IE: HEX, ASCII, DECIMAL, OCTAL.
                                     00DA   193 ;
                                     00DA   194 ; OUTPUTS:
                                     00DA   195 ;
                                     00DA   196 ;	ANY QUALIFIERS IN THE COMMAND LINE PRECEEDING THE NEXT VALUE
MCREXADEP       - EXAMINE AND DEPOSIT COMMANDS                   22-AUG-1978 01:36:20   VAX-11 MACRO X0.3-11               Page   5
01              EXAM/DEPO COMMAND                                                                                                (1)

                                     00DA   197 ;	ARE PROCESSED AND THE NEXT EXPRESSION ON THE COMMAND LINE
                                     00DA   198 ;	IS EVALUATED AND RETURN IN R8.  REGISTERS R0 TO R9 ARE MODIFIED.
                                     00DA   199 ;	R9 IS UPDATED TO THE NEXT BYTE TO STORE IN THE COMMAND BUFFER.
                                     00DA   200 ;-
                                     00DA   201  
                                     00DA   202 	.ENABL	LSB
                                     00DA   203  
                        2C 3D 3A 00  00DA   204 10$:	.ASCII	<0>\:=,\		; SPECIAL TERMINATORS FOR "DOT"
                                     00DE   205 11$:
                                     00DE   206 ;
                                     00DE   207 ; RADIX CONVERT TABLE - COVERT DISPLAY MODE TO RADIX INDEX
                                     00DE   208 ;
                                 00  00DE   209 	.BYTE	PRC_K_HEX		; MINUS ONE INDEX(ASCII)-CONVERT IN HEX
                           02 01 00  00DF   210 15$:	.BYTE	PRC_K_HEX,PRC_K_DEC,PRC_K_OCT ; RADIX TRANSLATE
                                     00E2   211  
                          01     BA  00E2   212 GETIVL:	POPR	#^M<R0>			; GET RETURN ADDRESS
         D4 AD            5E     D0  00E4   213 	MOVL	SP,WRK_L_SAVSP(FP)	; MARK THE STACK FOR ERRORS
            5E         B0 AE     9E  00E8   214 	MOVAB	-80(SP),SP		; ALLOCATE A LINE BUFFER
                          50     DD  00EC   215 	PUSHL	R0			; REPLACE RETURN ADDRESS
                          62     10  00EE   216 GETVAL:	BSBB	130$			; PEEK AT NEXT CHARACTER IN INPUT
            56            69     9E  00F0   217 	MOVAB	(R9),R6			; POINT AT TERMINATOR
            50            20     91  00F3   218 	CMPB	#^A/ /,R0		; BLANK?
                          05     12  00F6   219 	BNEQ	20$			; BR IF NO AND CONTINUE
                                     00F8   220 	MOVCHAR				; ELSE COPY SPACE TO BUFFER
                          F1     11  00FB   221 	BRB	GETVAL			; TRY AGAIN
            2F            50     91  00FD   222 20$:	CMPB	R0,#^A\/\		; QUALIFIER COMMING?
                          1E     12  0100   223 	BNEQ	40$			; BR IF NO QUALIFIER IN SIGHT
                                     0102   224 	PROCQUAL			; PROCESS THE QUALIFIER
            51            50     E9  0105   225 	BLBC	R0,EXIT			; BR IF ERROR IN QUALIFIER
            50            7A     F6  0108   226 	CVTLB	-(R10),R0		; GET QUALIFIER CODE
            51       0090 CB     9E  010B   227 	MOVAB	PRC_B_EXMDEPWID(R11),R1	; ASSUME CHANGING WIDTH
       FEFA CF            50     E1  0110   228 	BBC	R0,TYPE,30$		; BR IF ASSUMED CORRECTLY
                          02         0115       
                          51     D6  0116   229 	INCL	R1			; POINT AT MODE LOCATION
            61       FEF2 CF40   90  0118   230 30$:	MOVB	VALU-1[R0],(R1)		; SET MODE OR WIDTH
                          CE     11  011E   231 	BRB	GETVAL			; TRY FOR MORE
                          58     D4  0120   232 40$:	CLRL	R8			; ZERO ACCUMULATOR
            50            2E     91  0122   233 	CMPB	#^A/./,R0		; REFERENCE TO LAST LOCATION
                          11     12  0125   234 	BNEQ	50$			; BR IF NO
            58       008C CB     D0  0127   235 	MOVL	PRC_L_EXMDEPADR(R11),R8	; GET THE PREVIOUS LOCATION
                                     012C   236 	MOVCHAR				; PUT DOT INTO COMMAND BUFFER
                          21     10  012F   237 	BSBB	130$			; LOOK AT NEXT CHAR
            04            50     3A  0131   238 	LOCC	R0,#<11$-10$>,10$	; ANY OF THE SPECIAL TERMINATORS
                       A4 AF         0134       
                          1A     12  0136   239 	BNEQ	130$			; BR IF YES-NO EXPRESSION TO EVALUATE
                          58     DD  0138   240 50$:	PUSHL	R8			; SAVE INITIAL VALUE
            51       0091 CB     98  013A   241 	CVTBL	PRC_B_EXMDEPMOD(R11),R1	; GET MODE OF OPERATION
            51         9C AF41   9A  013F   242 	MOVZBL	15$[R1],R1		; CONVERT TO SYSTEM STANDARD RADIX
                          FEB9'  30  0144   243 	BSBW	MCR$EXPRADIX		; EXPRESSION WITH RADIX
            0F            50     E9  0147   244 	BLBC	R0,EXIT			; BR IF ERROR EVALUATING EXPRESSION
            56         FF A9     9E  014A   245 	MOVAB	-1(R9),R6		; SET PRINT LIMIT INCASE OF SYNTAX ERROR
            8E            51     C1  014E   246 	ADDL3	R1,(SP)+,R8		; GET FINAL VALUE TO WORK WITH
                          58         0151       
                                     0152   247 130$:	SETNBLK				; PEEK AT NEXT NON-BLANK CHAR
                                 05  0155   248 	RSB				;
                                     0156   249  
                                     0156   250 EXPSYN:	STATUS	EXPSYN			; SYNTAX ERROR
MCREXADEP       - EXAMINE AND DEPOSIT COMMANDS                   22-AUG-1978 01:36:20   VAX-11 MACRO X0.3-11               Page   6
01              EXAM/DEPO COMMAND                                                                                                (1)

            5E         D4 AD     D0  0159   251 EXIT:	MOVL	WRK_L_SAVSP(FP),SP	; CLEAR THE STACK
                                 05  015D   252 	RSB				; RETURN TO CALLER
                                     015E   253 	.DSABL	LSB
                                     015E   254  
                                     015E   255 OVRFLW:	STATUS	OVRFLW			; VALUE TO LARGE FOR CELL
         FA AD            02     A8  0162   256 	BISW	#WRK_M_COMMAND,WRK_W_FLAGS(FP) ; INDICATE ERROR DURING EXECUTION
                          F1     11  0166   257 	BRB	EXIT			; SHOW ERROR
                                     0168   258  
                                     0168   259 ;+
                                     0168   260 ; MCR$DEPOSIT - DEPOSIT DATA IN MEMORY
                                     0168   261 ;
                                     0168   262 ; THIS ROUTINE IS CALLED AS AN INTERNAL COMMAND TO EXECUTE THE DEPOSIT
                                     0168   263 ;	MCRS COMMAND.
                                     0168   264 ;
                                     0168   265 ; INPUTS:
                                     0168   266 ;
                                     0168   267 ;	R9 = ADDRESS OF NEXT BYTE IN COMMAND BUFFER.
                                     0168   268 ;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
                                     0168   269 ;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
                                     0168   270 ;	FP = BASE ADDRESS OF COMMAND WORK AREA.
                                     0168   271 ;
                                     0168   272 ; WORK AREA LOCATIONS:
                                     0168   273 ;
                                     0168   274 ;	PRC_L_EXMDEPADR HAS "DOT"
                                     0168   275 ;	PRC_B_EXMDEPWID HAS CURRENT WIDTH, IE: BYTE, WORD, LONGWORD.
                                     0168   276 ;	PRC_B_EXMDEPMOD HAS CURRENT MODE, IE: HEX, ASCII, DECIMAL, OCTAL.
                                     0168   277 ;
                                     0168   278 ; OUTPUTS:
                                     0168   279 ;
                                     0168   280 ;	THE CURRENT DEFAULT RADIX AND WIDTH ARE SET TO THOSE SPECIFIED,IF ANY.
                                     0168   281 ;	THE SPECIFIED LOCATION(S) ARE SET IN THE CURRENT RADIX AND WIDTH.
                                     0168   282 ;-
                                     0168   283  
                        E1 00 F0 F8  0168   284 SHFCNT:	.BYTE	-8,-16,0,-31		; SHIFT COUNT FOR SIGN EXTEND
                                     016C   285  
                                     016C   286 MCR$DEPOSIT::				; DEPOSIT DATA IN MEMORY
                          FF73   30  016C   287 	BSBW	GETIVL			; INIT AND GET VALUE
            50            3D     91  016F   288 	CMPB	#^A/=/,R0		; VALID TERMINATOR
                          E2     12  0172   289 	BNEQ	EXPSYN			; BR ON SYNTAX ERROR
                          58     DD  0174   290 	PUSHL	R8			; SAVE INITIAL VALUE
            57            58     D0  0176   291 	MOVL	R8,R7			; SET AS LAST LOCATION USED("DOT").
                                     0179   292 10$:	MOVCHAR				; MOVE TERMINATOR
         FF 8F       0091 CB     91  017C   293 	CMPB	PRC_B_EXMDEPMOD(R11),#ASCMOD ; DOING ASCII
                          22     12  0182   294 	BNEQ	40$			; BR IF NO
            52            69     9E  0184   295 	MOVAB	(R9),R2			; SET ADDRESS OF CHARACTER
                                     0187   296 20$:	MOVCHAR				; MOVE NEXT CHARACTER
                          FB     12  018A   297 	BNEQ	20$			; BR IF NOT END-OF-LINE
                          59     D7  018C   298 	DECL	R9			; BSCK UP OVER EOL BYTE
            59            52     C3  018E   299 	SUBL3	R2,R9,R1		; FIND LENGTH OF STRING
                          51         0191       
                          12     13  0192   300 	BEQL	40$			; BR IF ZERO VALUE
                                     0194   301 	COMPSTRING			; COMPRESS THE STRING
                                     0197   302 	IFNOWRT	R1,(R7),90$,#PSL$C_USER	; VERFIFY PROPER ACCESS
            62            51     28  019D   303 	MOVC3	R1,(R2),(R7)		; STORE THE DATA
                          67         01A0       
            57            53     D0  01A1   304 	MOVL	R3,R7			; SET ENDING ADDRESS
                          3F     11  01A4   305 	BRB	90$			; SHOW THE DAMAGE
MCREXADEP       - EXAMINE AND DEPOSIT COMMANDS                   22-AUG-1978 01:36:20   VAX-11 MACRO X0.3-11               Page   7
01              EXAM/DEPO COMMAND                                                                                                (1)

            52       0090 CB     9A  01A6   306 40$:	MOVZBL	PRC_B_EXMDEPWID(R11),R2	; SET WIDTH OF OPERATION
                                     01AB   307 	IFNOWRT	R2,(R7),90$,#PSL$C_USER	; VERIFY PROPER ACCESS
                          57     DD  01B1   308 	PUSHL	R7			; SAVE ADDRESS TO DEPOSIT
                          FF38   30  01B3   309 	BSBW	GETVAL			; GET VALUE
                          57   8ED0  01B6   310 	POPL	R7			; RESTORE THE ADDRESS
            52       0090 CB     9A  01B9   311 	MOVZBL	PRC_B_EXMDEPWID(R11),R2	; SET WIDTH
            51         A5 AF42   9A  01BE   312 	MOVZBL	SHFCNT-1[R2],R1		; GET SHIFT COUNT
            58            51     78  01C3   313 	ASHL	R1,R8,R1		; GET THE SIGN OF THE VALUE
                          51         01C6       
                          04     13  01C7   314 	BEQL	50$			; BR IF POSITIVE NUMBER
                          51     D6  01C9   315 	INCL	R1			; NEGATIVE SIGN?
                          91     12  01CB   316 	BNEQ	OVRFLW			; BR IF NO-OVERFLOW HAS OCCURED
            52            02     C2  01CD   317 50$:	SUBL	#2,R2			; DECODE WIDTH
                          0C     14  01D0   318 	BGTR	70$			; BR IF LONGWORD
                          05     19  01D2   319 	BLSS	60$			; BR IF BYTE
            87            58     B0  01D4   320 	MOVW	R8,(R7)+		; STORE DATA
                          08     11  01D7   321 	BRB	80$			;
            87            58     90  01D9   322 60$:	MOVB	R8,(R7)+		; STORE DATA
                          03     11  01DC   323 	BRB	80$			;
            87            58     D0  01DE   324 70$:	MOVL	R8,(R7)+		; ETC
                          50     95  01E1   325 80$:	TSTB	R0			; END OF LINE
                          94     12  01E3   326 	BNEQ	10$			; BR IF NO
            58            67     9E  01E5   327 90$:	MOVAB	(R7),R8			; SET UPPER LIMIT
       008C CB            57     D0  01E8   328 	MOVL	R7,PRC_L_EXMDEPADR(R11)	; SET "DOT"
                          57   8ED0  01ED   329 	POPL	R7			; GET FIRST VALUE
                          FE43   31  01F0   330 	BRW	EXAMIN			; PRINT THE RESULT
                                     01F3   331 ;+
                                     01F3   332 ; MCR$CNVNUM - CONVERT NUMBER
                                     01F3   333 ;
                                     01F3   334 ; THIS ROUTINE CONVERTS A BINARY NUMBER INTO A ASCII STRING IN ANY RADIX
                                     01F3   335 ; FROM 2-9 OR HEX.
                                     01F3   336 ;
                                     01F3   337 ; INPUTS:
                                     01F3   338 ;	R0 = NUMBER
                                     01F3   339 ;	R1 = RADIX
                                     01F3   340 ;	R2 = BUFFER TO STORE RESULT
                                     01F3   341 ;	R3 = NUMBER OF CHARACTERS
                                     01F3   342 ;
                                     01F3   343 ; ALTERNATE ENTRY MCR$CNVHXL - FOR CONVERSION OF HEX LONG WORDS
                                     01F3   344 ;
                                     01F3   345 ;
                                     01F3   346 ; OUTPUTS:
                                     01F3   347 ;	THE NUMBER IS CONVERTED TO  STRING, AND THE BUFFER POINTER
                                     01F3   348 ;	IS ADVANCE TO BEYOND THE LAST CHARACTER.
                                     01F3   349 ;-
                                     01F3   350  
                                     01F3   351 MCR$CNVHXL::				; CONVERT HEX LONG WORD
            53            08     D0  01F3   352 	MOVL	#8,R3			; SET NUMBER OF CHARATERS TO OUTPUT
            51            10     D0  01F6   353 	MOVL	#16,R1			; AND RADIX
                                     01F9   354  
                                     01F9   355 MCR$CNVNUM::				; CONVERT NUMBER TO STRING
            5C            51     D0  01F9   356 	MOVL	R1,AP			; SAVE RADIX IN SCRATCH REGISTER
                          51     D4  01FC   357 	CLRL	R1			; SET EXTENDED WORD OF ZERO
            50            5C     7B  01FE   358 10$:	EDIV	AP,R0,R0,-(SP)		; REMOVE THE RADIX
            7E            50         0201       
            6E            30     80  0203   359 	ADDB	#^A/0/,(SP)		; CONVERT TO ASCII
            39            6E     91  0206   360 	CMPB	(SP),#^A/9/		; DECIMAL NUMBER
MCREXADEP       - EXAMINE AND DEPOSIT COMMANDS                   22-AUG-1978 01:36:20   VAX-11 MACRO X0.3-11               Page   8
01              EXAM/DEPO COMMAND                                                                                                (1)

                          03     1B  0209   361 	BLEQU	20$			; BR IF YES
            6E            07     80  020B   362 	ADDB	#7,(SP)			; SET TO HEX CHARACTER
                          53     D7  020E   363 20$:	DECL	R3			; COUNT DOWN THE NUMBER OF CHARACTERS
                          08     13  0210   364 	BEQL	40$			; BR IF DONE
                          04     14  0212   365 	BGTR	30$			; BR IF NO ZERO SUPPRESSION
                          50     D5  0214   366 	TSTL	R0			; ANY MORE DATA?
                          02     13  0216   367 	BEQL	40$			; BR IF NO
                          E4     10  0218   368 30$:	BSBB	10$			; CONVERT NEXT DIGIT
            82            8E     F6  021A   369 40$:	CVTLB	(SP)+,(R2)+		; STORE A DIGIT
                                 05  021D   370 	RSB				; UNWIND RECURSIVE LOOP
                                     021E   371  
                                     021E   372 	.END
MCREXADEP       - EXAMINE AND DEPOSIT COMMANDS                   22-AUG-1978 01:36:20   VAX-11 MACRO X0.3-11               Page   9
SYMBOL TABLE                                                                                                                     (1)

$$$            = 00000004            CLI$_NOOPTPRS  = 00038842            MCR_M_DELINP   = 00000080            
$$$GBL         = 00000000            CLI$_NOQUAL    = 000380C8            MCR_M_DOLLARS  = 00000100            
$QUALNUM$      = 00000008            CLI$_NORMAL    = 00030001            MCR_M_ESCAPE   = 00000004            
ASCMOD         = FFFFFFFF            CLI$_NOTNEG    = 000380D8            MCR_M_ESCTRM   = 00000200            
BIT...         = 00000008            CLI$_NOVALU    = 000380D0            MCR_M_GLOBAL   = 00000400            
BW               00000000 R     03   CLI$_NOVALUE   = 0003882A            MCR_M_LOWER    = 00000800            
BYTEWID        = 00000001            CLI$_NULFIL    = 000380E0            MCR_M_OPNINP   = 00000040            
CLI$K_EXAM_ASCI= 00000001            CLI$_NUMBER    = 000380E8            MCR_M_RAD50    = 00000001            
CLI$K_EXAM_BYTE= 00000002            CLI$_ONCOMD    = 000380F0            MCR_M_STRSUB   = 00001000            
CLI$K_EXAM_DECI= 00000003            CLI$_ONERR     = 000380F8            MCR_V_ALPHAN   = 00000001            
CLI$K_EXAM_HEXA= 00000004            CLI$_ONEVAL    = 00038158            MCR_V_DEFALT   = 00000003            
CLI$K_EXAM_LONG= 00000005            CLI$_ONLEVL    = 00038100            MCR_V_DELINP   = 00000007            
CLI$K_EXAM_OCTA= 00000006            CLI$_ONOVF     = 00038108            MCR_V_DOLLARS  = 00000008            
CLI$K_EXAM_WORD= 00000007            CLI$_OVRFLW    = 00038160            MCR_V_ESCAPE   = 00000002            
CLI$_ABFNAM    = 000381B8            CLI$_PARMDEL   = 00038110            MCR_V_ESCTRM   = 00000009            
CLI$_ABKEYW    = 00038000            CLI$_PROC_ID   = 0003FFF1            MCR_V_FORCMD   = 0000000E            
CLI$_ABVERB    = 00038008            CLI$_QUEJOBCRE = 0003FFF9            MCR_V_GLOBAL   = 0000000A            
CLI$_BADRET    = 00038198            CLI$_REQPRMABS = 00038812            MCR_V_LOWER    = 0000000B            
CLI$_BADTEXT   = 000381B0            CLI$_RSLOVF    = 00038118            MCR_V_OPNINP   = 00000006            
CLI$_BUFOVF    = 00038018            CLI$_SKPDAT    = 00038120            MCR_V_RAD50    = 00000000            
CLI$_COMPLX    = 00038020            CLI$_SPARE0    = 00038010            MCR_V_STRSUB   = 0000000C            
CLI$_CONFQUAL  = 00038802            CLI$_SPARE1    = 00038058            MSGBUFSIZ      = 00000084            
CLI$_CREQUEJOB = 0003884A            CLI$_STKOVF    = 00038128            OCTMOD         = 00000002            
CLI$_DEFOVF    = 00038028            CLI$_SUBMITERR = 00038852            OVRFLW           0000015E R     03   
CLI$_DEVALSPL  = 0003885A            CLI$_SYMDEL    = 00038130            PRC_B_DEFRADIX   00000092            
CLI$_DEVNOTFOR = 0003887A            CLI$_SYMOVF    = 00038138            PRC_B_EXMDEPMOD  00000091            
CLI$_DEVNOTSPL = 00038862            CLI$_UNDFIL    = 00038188            PRC_B_EXMDEPWID  00000090            
CLI$_DIRECT    = 00038030            CLI$_UNDSYM    = 00038140            PRC_K_DEC      = 00000001            
CLI$_EXPSYN    = 00038038            CLI$_UNPROPARM = 00038170            PRC_K_HEX      = 00000000            
CLI$_FILOPN    = 00038190            CLI$_UNPROQUAL = 00038168            PRC_K_LENGTH     000000A0            
CLI$_ILLVAL    = 0003883A            CLI$_USGOTO    = 00038148            PRC_K_OCT      = 00000002            
CLI$_IMCHNG    = 00038040            CLI$_VALCNVERR = 00038832            PRC_L_CLIWRK0    0000005C            
CLI$_IMGFNF    = 00038872            CLI$_VALREQ    = 00038150            PRC_L_CLIWRK1    00000060            
CLI$_INSFPRM   = 00038048            CMDBUFSIZ      = 000001FC            PRC_L_CLIWRK2    00000064            
CLI$_INVKEY    = 00038178            DECMOD         = 00000001            PRC_L_CLIWRK3    00000068            
CLI$_INVQUAL   = 0003880A            EXAMIN           00000036 R     03   PRC_L_CLIWRK4    0000006C            
CLI$_INVQUALNUM= 0003881A            EXIT             00000159 R     03   PRC_L_ERRRAB     00000010            
CLI$_INVREQTYP = 00038822            EXPSYN           00000156 R     03   PRC_L_EXMDEPADR  0000008C            
CLI$_INVRSP    = 00038180            GBL...         = 00000000            PRC_L_EXTARG     00000078            
CLI$_INVUIC    = 000381A8            GETIVL           000000E2 R     03   PRC_L_EXTBLK     00000070            
CLI$_IVCHAR    = 00038050            GETVAL           000000EE R     03   PRC_L_EXTCOD     00000080            
CLI$_IVDEVTYPE = 0003886A            HEXMOD         = 00000000            PRC_L_EXTHND     00000074            
CLI$_IVFNAM    = 000381C0            INPBUFSIZ      = 00000084            PRC_L_EXTPRM     0000007C            
CLI$_IVKEYW    = 00038060            LONGWID        = 00000004            PRC_L_INDEPTH    00000048            
CLI$_IVOPER    = 00038068            LW               00000008 R     03   PRC_L_INDFAB     0000001C            
CLI$_IVPROT    = 00038070            MCR$CNVHXL       000001F3 RG    03   PRC_L_INDINPRAB  00000014            
CLI$_IVQLOC    = 00038078            MCR$CNVNUM       000001F9 RG    03   PRC_L_INDOUTRAB  00000018            
CLI$_IVSYMB    = 00038080            MCR$COMPSTRING   ********   X   03   PRC_L_INPRAB     00000008            
CLI$_IVVALU    = 00038088            MCR$DEPOSIT      0000016C RG    03   PRC_L_LSTSTATUS  00000094            
CLI$_IVVERB    = 00038090            MCR$EXAMINE      00000017 RG    03   PRC_L_ONCTLY     0000009C            
CLI$_MAXPARM   = 00038098            MCR$EXPRADIX     ********   X   03   PRC_L_ONERROR    00000058            
CLI$_MULKEY    = 000381A0            MCR$MOVCHAR      ********   X   03   PRC_L_OUTRAB     0000000C            
CLI$_NOATFIL   = 000380A0            MCR$MSGOUT       ********   X   03   PRC_L_PROCUIC    00000098            
CLI$_NOCCAT    = 000380A8            MCR$PROCQUAL     ********   X   03   PRC_L_SAVAP      00000000            
CLI$_NOCOMD    = 000380B0            MCR$SETNBLK      ********   X   03   PRC_L_SAVFP      00000004            
CLI$_NOKEYW    = 000380B8            MCR_M_ALPHAN   = 00000002            PRC_L_SEVERITY   00000040            
CLI$_NOLIST    = 000380C0            MCR_M_DEFALT   = 00000008            PRC_L_STACKLM    00000088            
MCREXADEP       - EXAMINE AND DEPOSIT COMMANDS                   22-AUG-1978 01:36:20   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (1)

PRC_L_STACKPT    00000084            PSL$C_EXEC     = 00000001            QUA_V_FILE     = 00000002            
PRC_L_STATUS     00000044            PSL$C_KERNEL   = 00000000            QUA_V_IMAGE    = 0000000A            
PRC_L_SYMBOL     0000004C            PSL$C_SUPER    = 00000002            QUA_V_INTDEF   = 00000009            
PRC_M_CNTRLY   = 00000002            PSL$C_USER     = 00000003            QUA_V_KEYVAL   = 0000000E            
PRC_M_DBGQUAL  = 00000200            PSL$M_CM       = 80000000            QUA_V_LOCALKEY = 00000001            
PRC_M_DBGTRUE  = 00000400            PSL$M_CURMOD   = 03000000            QUA_V_MAXPARM  = 00000004            
PRC_M_DISABL   = 00000004            PSL$M_DV       = 00000080            QUA_V_MINPARM  = 00000000            
PRC_M_EXIT     = 00000008            PSL$M_FPD      = 08000000            QUA_V_NEG      = 00000006            
PRC_M_GOEOF    = 00000001            PSL$M_FU       = 00000040            QUA_V_ONEVAL   = 0000000D            
PRC_M_GOTO     = 00000010            PSL$M_IPL      = 001F0000            QUA_V_OUTPUT   = 0000000B            
PRC_M_HANGUP   = 00001000            PSL$M_IS       = 04000000            QUA_V_PARM     = 00000004            
PRC_M_IND      = 00000020            PSL$M_IV       = 00000020            QUA_V_VAL      = 00000005            
PRC_M_MODE     = 00000040            PSL$M_PRVMOD   = 00C00000            QUA_V_VALREQ   = 0000000C            
PRC_M_NOCTLY   = 00004000            PSL$M_SAFBITS  = 000037FF            QUA_V_VERB     = 00000003            
PRC_M_PAUSE    = 00002000            PSL$M_TBIT     = 00000010            QUA_W_FLAGS      00000004            
PRC_M_USRDET   = 00000100            PSL$M_TP       = 40000000            QUA_W_QUALIST    00000007            
PRC_M_VERIFY   = 00000080            PSL$S_CURMOD   = 00000002            RADIX            0000000C R     03   
PRC_M_YLEVEL   = 00000800            PSL$S_IPL      = 00000005            RSLBUFSIZ      = 00000180            
PRC_Q_ALLOCREG   00000020            PSL$S_PRVMOD   = 00000002            SHFCNT           00000168 R     03   
PRC_Q_GLOBAL     00000028            PSL$V_CM       = 0000001F            TYPE             0000000F R     03   
PRC_Q_LABEL      00000030            PSL$V_CURMOD   = 00000018            VALU             00000010 R     03   
PRC_Q_LOCAL      00000038            PSL$V_DV       = 00000007            WORDWID        = 00000002            
PRC_V_CNTRLY   = 00000001            PSL$V_FPD      = 0000001B            WRK_AB_BUFFER    FFFFFD44            
PRC_V_DBGQUAL  = 00000009            PSL$V_FU       = 00000006            WRK_AG_RESULT    FFFFFBC0            
PRC_V_DBGTRUE  = 0000000A            PSL$V_IPL      = 00000010            WRK_B_CMDFLG     FFFFFFC9            
PRC_V_DISABL   = 00000002            PSL$V_IS       = 0000001A            WRK_B_CURADX     FFFFFFCA            
PRC_V_EXIT     = 00000003            PSL$V_IV       = 00000005            WRK_B_PARMCNT    FFFFFFCB            
PRC_V_GOEOF    = 00000000            PSL$V_PRVMOD   = 00000016            WRK_B_VERBTYP    FFFFFFC8            
PRC_V_GOTO     = 00000004            PSL$V_TBIT     = 00000004            WRK_K_LENGTH     FFFFFBC0            
PRC_V_HANGUP   = 0000000C            PSL$V_TP       = 0000001E            WRK_L_CHARPTR    FFFFFFFC            
PRC_V_IND      = 00000005            QUA_B_CODE       00000001            WRK_L_IMAGE      FFFFFFEC            
PRC_V_MODE     = 00000006            QUA_B_DEFVAL     00000003            WRK_L_MAXPARM    FFFFFFCC            
PRC_V_NOCTLY   = 0000000E            QUA_B_IMAGE      00000006            WRK_L_MINPARM    FFFFFFD0            
PRC_V_PAUSE    = 0000000D            QUA_B_INDEX      00000002            WRK_L_PAROUT     FFFFFFF0            
PRC_V_USRDET   = 00000008            QUA_B_OFFSET     00000000            WRK_L_PROMPT     FFFFFFF4            
PRC_V_VERIFY   = 00000007            QUA_B_PARMCNT    00000009            WRK_L_QUABLK     FFFFFFE8            
PRC_V_YLEVEL   = 0000000B            QUA_G_CHNGLST    00000007            WRK_L_RSLNXT     FFFFFD40            
PRC_W_CLIFLAG    00000052            QUA_M_BATDEF   = 00000100            WRK_L_SAVAP      FFFFFFD8            
PRC_W_ERRIFI     00000052            QUA_M_CHNGLIST = 00000001            WRK_L_SAVFP      FFFFFFDC            
PRC_W_FLAGS      00000054            QUA_M_DEFTRUE  = 00000080            WRK_L_SAVSP      FFFFFFD4            
PRC_W_INPCHAN    00000050            QUA_M_FILE     = 00000004            WRK_M_ALL      = 00000001            
PRC_W_ONLEVEL    00000056            QUA_M_IMAGE    = 00000400            WRK_M_ASK      = 00000100            
PRO_B_FLAGS      00000001            QUA_M_INTDEF   = 00000200            WRK_M_COMMAND  = 00000002            
PRO_B_PROMPT     00000000            QUA_M_KEYVAL   = 00004000            WRK_M_CONTINU  = 00000400            
PRO_K_LENGTH     00000002            QUA_M_LOCALKEY = 00000002            WRK_M_EQUAL    = 00000008            
PRO_M_CONCAT   = 00000001            QUA_M_NEG      = 00000040            WRK_M_IMCHNG   = 00000004            
PRO_M_IMPCAT   = 00000002            QUA_M_ONEVAL   = 00002000            WRK_M_QUAL     = 00000010            
PRO_M_LIST     = 00000004            QUA_M_OUTPUT   = 00000800            WRK_M_QUOTE    = 00000020            
PRO_M_OPTION   = 00000008            QUA_M_PARM     = 00000010            WRK_M_STAR     = 00000040            
PRO_M_REQ      = 00000010            QUA_M_VAL      = 00000020            WRK_M_TRAILSPC = 00000200            
PRO_M_STRING   = 00000020            QUA_M_VALREQ   = 00001000            WRK_M_VERB     = 00000080            
PRO_V_CONCAT   = 00000000            QUA_M_VERB     = 00000008            WRK_Q_IOSB       FFFFFFE0            
PRO_V_IMPCAT   = 00000001            QUA_S_MAXPARM  = 00000004            WRK_V_ALL      = 00000000            
PRO_V_LIST     = 00000002            QUA_S_MINPARM  = 00000004            WRK_V_ASK      = 00000008            
PRO_V_OPTION   = 00000003            QUA_V_BATDEF   = 00000008            WRK_V_COMMAND  = 00000001            
PRO_V_REQ      = 00000004            QUA_V_CHNGLIST = 00000000            WRK_V_CONTINU  = 0000000A            
PRO_V_STRING   = 00000005            QUA_V_DEFTRUE  = 00000007            WRK_V_EQUAL    = 00000003            
MCREXADEP       - EXAMINE AND DEPOSIT COMMANDS                   22-AUG-1978 01:36:20   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (1)

WRK_V_IMCHNG   = 00000002            
WRK_V_QUAL     = 00000004            
WRK_V_QUOTE    = 00000005            
WRK_V_STAR     = 00000006            
WRK_V_TRAILSPC = 00000009            
WRK_V_VERB     = 00000007            
WRK_W_FLAGS      FFFFFFFA            
WRK_W_LOCFLG     FFFFFFF8            
WW               00000004 R     03   
_$$_           = 00000058            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFC      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
MCR$ZCODE        0000021E      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD  NOWRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
14108. BYTES LEFT IN FREE MEMORY POOL.
476. BYTES OF RECLAIMED MEMORY.
OBJ$:MCREXADEP,LIS$:MCREXADEP/-SP=EXECML$/ML,LIB$:MCR/ML,SRC$:MCREXADEP
39 MLB DIR RDS - 572 GETS TO DEFINE 30 MACROS. 42 INTER. FILE WRITES. 
