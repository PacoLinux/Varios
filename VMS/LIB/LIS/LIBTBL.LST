FORMAT	MACRO M1110  22-AUG-78 02:14
TABLE OF CONTENTS

     1-  300	OBJECT LANGUAGE DEFS
FORMAT	MACRO M1110  22-AUG-78 02:14  PAGE 1


    100						.TITLE	FORMAT
    200						.IDENT	/X0300/
    300						.SBTTL	OBJECT LANGUAGE DEFS
FORMAT	MACRO M1110  22-AUG-78 02:14  PAGE 3


      1					; COPYRIGHT (C) 1976, 1977
      2					; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
      3					;
      4					; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
      5					; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
      6					; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
      7					; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
      8					; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
      9					; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
     10					; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
     11					;
     12					; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
     13					; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
     14					; EQUIPMENT CORPORATION.
     15					;
     16					; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
     17					; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
LIBTBL	MACRO M1110  22-AUG-78 02:14  PAGE 4


      1						.TITLE	LIBTBL
      2						.IDENT	/03/
      3
      4					;
      5					; VERSION 03
      6					;
      7					; WRITTEN BY:
      8					;	GEORGE W. BERRY
      9					;
     10					; MODIFIED BY:
     11					;	C.A. D'ELIA	10-JUN-74
     12					;	C.A. D'ELIA	25-JUN-74  (VIRTUAL TABLES)
     13					;	THOMAS J. MILLER 14-NOV-74
     14					;
     15					;
     16
     17					;
     18					; MACRO CALLS
     19					;
     20
     21						.MCALL	IOERR$
     22	000000					IOERR$
     23						.MCALL	FDOFF$
     24	000000					FDOFF$	DEF$L
     25						.MCALL	FCSBT$
     26	000000					FCSBT$	DEF$L
     27
     28
     35
     36						.MCALL	GET$S
     37
     38
     40
     41
     42					;
     43					; LOCAL DATA
     44					;
     45
     46	000000				LASTV:	.BLKW	1		;+++STAR FIRST 2 BYTES OF LAST SYMBOL INSERTED
     47	000002				ELESIZ:	.BLKW	1		;SIZE OF VIRTUAL MEMORY NEEDED FOR ELEMENT
     48
     49					;+
     50					; **-$RDEP-READ EPT
     51					;
     52					; THIS ROUTINE READS THE EPT.
     53					;
     54					; INPUTS:
     55					;
     56					;	L$BUF CONTAINS THE LIBRARY HEADER RECORD
     57					;
     58					; OUTPUTS:
     59					;
     60					;	$EPBLK (EPT BLOCK DESCRIPTOR) IS SET UP
     61					;
     62					;-
     63	000004				$RDEP::	SAVRG			;SAVE R3-R5
     64	000010	012705 	000000G			MOV	#$EPBLK,R5
LIBTBL	MACRO M1110  22-AUG-78 02:14  PAGE 4-1


     65	000014	012701 	000000G			MOV	#$EPTHL,R1	;POINT R1 TO EPT LIST HEADS
     66	000020	116703 	000000G			MOVB	L$ES,R3		;PUT SIZE OF EPT ENTRY IN R3
     67	000024	016702 	000000G			MOV	L$ET,R2		;PUT VBN OF START OF EPT IN R2
     68	000030	012704 	000000G			MOV	#L$EI,R4	;PUT ADDR OF EPT'S ALLOCATED IN R4
     69	000034	000414 				BR	RDR		;GO TO COMMON CODE
     70					;+
     71					;
     72					; **-$RDMN=READ MNT
     73					;
     74					; THIS ROUTINE READS THE MNT.
     75					;
     76					; INPUTS:
     77					;
     78					;	L$BUF CONTAINS THE LIBRARY HEADER RECORD
     79					;
     80					; OUTPUTS:
     81					;
     82					;	$MNBLK (MNT BLOCK DESCRIPTOR) IS SET UP.
     83					;
     84					;-
     85	000036				$RDMN::	SAVRG
     86	000042	012705 	000000G			MOV	#$MNBLK,R5
     87	000046	012701 	000000G			MOV	#$MNTHL,R1	;POINT R1 TO MNT LIST HEADS
     88	000052	116703 	000000G			MOVB	L$MS,R3		;PUT SIZE OF MNT ENTRY IN R3
     89	000056	016702 	000000G			MOV	L$MT,R2		;PUT VBN OF START OF MNT IN R2
     90	000062	012704 	000000G			MOV	#L$MI,R4	;PUT ADDR OF MNT'S ALLOCATED IN R4
     91
     92	000066	016700 	000000G		RDR:	MOV	$LIBPT,R0	;POINT R0 TO LIBRARY FDB, ETC
     93	000072	112760 	000001 	000000 		MOVB	#R.FIX,F.RTYP(R0)  ;INDICATE READ FIXED LENGTH RECORDS
     94	000100	112760 	000010 	000001 		MOVB	#FD.BLK,F.RATT(R0) ;CAN'T CROSS BLOCK BOUNDRIES
     95	000106	010360 	000002 			MOV	R3,F.RSIZ(R0)	;SET THE DESIRED RECORD LENGTH
     96	000112	010325 				MOV	R3,(R5)+	;STORE TABLE ENTRY SIZE
     97	000114	010125 				MOV	R1,(R5)+	;AND ADDRESS OF LIST HEADS
     98	000116	011415 				MOV	(R4),(R5)	;AND NUMBER OF ENTRIES ALLOCATED
     99	000120	010167 	000000G			MOV	R1,$HDLST	;SET ADDR OF CURRENT LIST HEADS
    100	000124	062703 	000002 			ADD	#V$MEML,R3	;+++STAR CALC SIZE OF REQ'D VIRTUAL MEMORY BLKS
    101	000130	010367 	177646 			MOV	R3,ELESIZ	;AND STORE IT
    102	000134					CALL	SETUP		;POSITION FILE
    103	000140	012401 				MOV	(R4)+,R1	;GET NUMBER OF ENTRIES ALLOCATED
    104	000142	161401 				SUB	(R4),R1		;AND, SUBTRACT ENTRIES AVAILABLE
    105	000144	003505 				BLE	RTN		;LEAVE IF NONE HAVE BEEN USED
    106	000146	010146 				MOV	R1,-(SP)	;ELSE, SAVE ENTRIES USED ON STACK
    107	000150	005067 	177624 			CLR	LASTV		;INITIALIZE LAST VALUE INSERTED
    108	000154	005003 				CLR	R3		;INITIAL PARTITION LIST OFFSET IS ZERO
    109	000156	016704 	000000G			MOV	$HDLST,R4	;POINT R4 TO FIRST LIST HEAD INITIALLY
    110	000162	005005 				CLR	R5		;AND ASSIGN VIRTUAL ZERO TO IT
    111	000164				RDELE:
    112
    119
    120	000164					GET$S	$LIBPT,#$OUTBF+4 ;GET TABLE ELEMENT
    121
    122
    124
    125
    126	000202	103475 				BCS	ERROR		;BRANCH IF READ ERROR OCCURRED
    127	000204	016002 	000026 			MOV	F.NRBD+2(R0),R2	;GET ADDR OF ELEMENT
    128	000210	010246 				MOV	R2,-(SP)	;AND SAVE IT
LIBTBL	MACRO M1110  22-AUG-78 02:14  PAGE 4-2


    129	000212	126267 	000005 	177560 		CMPB	T$CHAR(R2),LASTV;+++STAR COMPARE THIS TO OLD ONE
    130	000220	103460 				BLO	LIBERR		;+++STAR BR IF LOW - ERROR
    131	000222	116267 	000005 	177550 		MOVB	T$CHAR(R2),LASTV;+++STAR UPDATE
    132	000230				10$:
    133	000230	126263 	000005 	000000G		CMPB	T$CHAR(R2),$PARTD(R3) ;+++STAR CMP ELE WITH PARTN DESC
    134	000236	101414 				BLOS	INSERT		;BRANCH IF THIS IS CORRECT PARTITION
    135	000240					CALL	UNLOCK		;UNLOCK OLD PARTITION (IF NECESSARY)
    136	000244	062703 	000002 			ADD	#2,R3		;UPDATE PARTITION LIST OFFSET
    137	000250	020327 	000000C			CMP	R3,#<NU$PAR*2>-2  ;COMPARE IT WITH MAXIMUM OFFSET
    138	000254	003042 				BGT	LIBERR		;IF GREATER, THEN ERROR
    139	000256	016704 	000000G			MOV	$HDLST,R4	;NEW LINK WORD IS NEXT...
    140	000262	060304 				ADD	R3,R4		;...PARTITION LIST HEAD
    141	000264	005005 				CLR	R5		;IT'S VIRTUAL LOCATION IS ZERO
    142	000266	000760 				BR	10$		;REPEAT TEST FOR THIS PARTITION
    143	000270	016701 	177506 		INSERT:	MOV	ELESIZ,R1	;SET SIZE OF MEMORY REQUIRED
    144	000274					CALL	$ALVRT		;ALLOCATE THE VIRTUAL MEMORY
    145	000300					CALL	$LCKPG		;LOCK PAGE CONTAINING NEW LOCN
    146	000304					CALL	$NWLNK		;UNLOCK OLD LINK AND INSERT ELEMENT
    147	000310	012600 				MOV	(SP)+,R0	;POINT R0 TO NEW ELEMENT
    148	000312	010401 				MOV	R4,R1		;POINT R1 TO VIRTUAL MEMORY BLOCK
    149	000314	062701 	000002 			ADD	#V$MEML,R1	;+++STAR BUMP R1 PAST THE LINK WORD
    150	000320	016702 	177456 			MOV	ELESIZ,R2	;GET SIZE OF VIRTUAL ALLOCATION
    151	000324	162702 	000002 			SUB	#V$MEML,R2	;+++STAR SUBT OFF THE LENGTH OF LINK
    152	000330	062702 	000004 			ADD	#T$SLEN,R2	;+++STAR MOVE R2 TO THE SYMBOL
    153	000334				20$:
    154	000334	112021 				MOVB	(R0)+,(R1)+	;+++STAR COPY ELEMENT INTO VIRTUAL STORAGE
    155	000336					SOB	R2,20$		;+++STAR LOOP TIL DONE
    156	000342	005316 				DEC	(SP)		;DECREMENT ELEMENT COUNT
    157	000344	003307 				BGT	RDELE		;IF SOME REMAIN, REPEAT PROCESS
    158	000346	005726 				TST	(SP)+		;CLEAN THE STACK
    159	000350	010501 			UNLOCK:	MOV	R5,R1		;PUT VIRTUAL LOCN OF LINK IN R1
    160	000352	001402 				BEQ	RTN		;IF NULL, DON'T TRY TO UNLOCK IT
    161	000354					CALL	$UNLPG		;UNLOCK VIRTUAL PAGE CONTAINING OLD LINK
    162	000360				RTN:	RETURN
    163
    164					;
    165					; GENERAL ERROR EXIT
    166					;
    167	000362	012701 			LIBERR:	MOV	(PC)+,R1	;ERROR -- BAD LIBRARY
    168	000364	   000G	   000G			.BYTE	E$R29,S$V2
    169	000366	000405 				BR	ERRNM
    170
    171	000370	012701 			PERR:	MOV	(PC)+,R1	;ERROR IN POSITIONING FILE
    172	000372	   000G	   000G			.BYTE	E$R14,S$V2	;WITH .POINT
    173	000374	000402 				BR	ERRNM
    174
    175	000376	012701 			ERROR:	MOV	(PC)+,R1	;CAN'T READ LIBRARY FILE
    176	000400	   000G	   000G			.BYTE	E$R01,S$V2
    177	000402	016002 	000000G		ERRNM:	MOV	R$NAME(R0),R2	;GIVE FILE NAME
    178	000406	000167 	000000G		ERXIT:	JMP	$ERMSG		;FATAL ERROR EXIT
    179
    180					;+
    181					;
    182					; SETUP FOR EPT OR MNT READ
    183					;
    184					; THIS ROUTINE POSITIONS THE FILE AT THE DESIRED TABLE BLOCK.
    185					;
LIBTBL	MACRO M1110  22-AUG-78 02:14  PAGE 4-3


    186					; INPUTS:
    187					;
    188					;	R0 = $LIBPT
    189					;	R2 = STARTING BLOCK OF TABLE
    190					;
    191					; OUTPUTS:
    192					;
    193					;	R0 IS UNCHANGED
    194					;	R1 AND R3 ARE LOST
    195					;
    196					;-
    197
    198	000412	005001 			SETUP:	CLR	R1		;CLEAR HIGH VBN
    199	000414	005003 				CLR	R3		;CLEAR BYTE ADDRESS
    200	000416					CALL	.POINT		;POSITION FILE
    201	000422	103004 				BCC	10$		;BRANCH TO LEAVE ON SUCCESS
    202	000424	122760 	177766 	000052 		CMPB	#IE.EOF,F.ERR(R0) ;IGNORE EOF ERRORS
    203	000432	001356 				BNE	PERR		;BRANCH IF NOT EOF ERROR
    204	000434				10$:	RETURN
    205
    206
    207
    208		000001 				.END
LIBTBL	MACRO M1110  22-AUG-78 02:14  PAGE 4-4
SYMBOL TABLE

CH.AND= 000001   	FO.MFY= 000002   	IE.ABO= 177761   	IE.NST= 177660   	MH$TTL= 000003
CTLGRP= 000120   	FO.RD = 000001   	IE.ALC= 177654   	IE.OFL= 177677   	MTC$MX= 000213
ELESIZ  000002R  	FO.UPD= 000006   	IE.ALN= 177736   	IE.ONP= 177773   	M$HDMS  000003      003
EOM$MX= 000007   	FO.WRT= 000016   	IE.AST= 177660   	IE.OVR= 177756   	M$HDNM  000005      003
ERRNM   000402R  	F.ACTL= 000076   	IE.BAD= 177777   	IE.PES= 177655   	M$HDSL  000002      003
ERROR   000376R  	F.ALOC= 000040   	IE.BBE= 177710   	IE.PRI= 177760   	M$HDST  000001      003
ERXIT   000406R  	F.BBFS= 000062   	IE.BCC= 177676   	IE.RAC= 177724   	M$TCPN  000002      004
E$OMAD  000003      012	F.BDB = 000070   	IE.BDI= 177714   	IE.RAT= 177723   	NB.DEV= 000200
E$OMER  000001      012	F.BGBC= 000057   	IE.BDR= 177716   	IE.RBG= 177730   	NB.DIR= 000100
E$OMPS  000002      012	F.BKDN= 000026   	IE.BDV= 177711   	IE.RCN= 177722   	NB.NAM= 000004
E$R01 = ****** GX	F.BKDS= 000020   	IE.BHD= 177700   	IE.RER= 177740   	NB.SD1= 000400
E$R14 = ****** GX	F.BKEF= 000050   	IE.BLB= 177672   	IE.RNM= 177715   	NB.SD2= 001000
E$R29 = ****** GX	F.BKP1= 000051   	IE.BLK= 177754   	IE.RSU= 177757   	NB.SNM= 000040
FA.APD= 000100   	F.BKST= 000024   	IE.BNM= 177712   	IE.SNC= 177735   	NB.STP= 000020
FA.CRE= 000010   	F.BKVB= 000064   	IE.BTF= 177664   	IE.SPC= 177772   	NB.SVR= 000010
FA.DLK= 001000   	F.CHR = 000075   	IE.BTP= 177725   	IE.SQC= 177734   	NB.TYP= 000002
FA.ENB= 100000   	F.CNTG= 000034   	IE.BVR= 177701   	IE.SRE= 177762   	NB.VER= 000001
FA.EXC= 002000   	F.DFNB= 000046   	IE.BYT= 177755   	IE.STK= 177706   	NU$PAR= ****** GX
FA.EXT= 000004   	F.DSPT= 000044   	IE.CKS= 177742   	IE.TMM= 177671   	N.DID = 000024
FA.NSP= 000100   	F.DVNM= 000134   	IE.CLO= 177732   	IE.TMO= 177666   	N.DVNM= 000032
FA.POS= 010000   	F.EFBK= 000010   	IE.CNR= 177667   	IE.ULK= 177653   	N.FID = 000000
FA.RD = 000001   	F.EFN = 000050   	IE.CON= 177752   	IE.VER= 177774   	N.FNAM= 000006
FA.RWD= 004000   	F.EOBB= 000032   	IE.DAA= 177770   	IE.WAC= 177743   	N.FTYP= 000014
FA.SEQ= 040000   	F.ERR = 000052   	IE.DAO= 177763   	IE.WAT= 177741   	N.FVER= 000016
FA.SHR= 000040   	F.FACC= 000043   	IE.DFU= 177750   	IE.WCK= 177652   	N.NEXT= 000022
FA.TMP= 000020   	F.FFBY= 000014   	IE.DNA= 177771   	IE.WER= 177737   	N.STAT= 000020
FA.WCK= 020000   	F.FNAM= 000110   	IE.DNR= 177775   	IE.WLK= 177764   	N.UNIT= 000034
FA.WRT= 000002   	F.FNB = 000102   	IE.DUN= 177767   	IE.2DV= 177720   	OBJ$SL= 000000
FD.BLK= 000010   	F.FTYP= 000116   	IE.DUP= 177707   	INSERT  000270R  	OB$DBG= 000004
FD.CCL= 000002   	F.FVER= 000120   	IE.EOF= 177766   	IS.BV = 000005   	OB$EOM= 000003
FD.COM= 020000   	F.HIBK= 000004   	IE.EOT= 177702   	IS.CC = 001401   	OB$GSD= 000001
FD.CR = 000002   	F.LUN = 000042   	IE.EOV= 177765   	IS.CR = 006401   	OB$HDR= 000000
FD.DIR= 000010   	F.MBCT= 000054   	IE.EXP= 177665   	IS.EOT= 002001   	OB$LNK= 000005
FD.FTN= 000001   	F.MBC1= 000055   	IE.FEX= 177717   	IS.ESC= 015401   	OB$TIR= 000002
FD.F11= 040000   	F.MBFG= 000056   	IE.FHE= 177705   	IS.ESQ= 115401   	OPRGRP= 000062
FD.INS= 000010   	F.NRBD= 000024   	IE.FLN= 177657   	IS.PES= 100001   	O$BJTY  000000      002
FD.ISP= 002000   	F.NREC= 000030   	IE.FOP= 177713   	IS.PND= 000000   	PAGALI= 000011
FD.MNT= 100000   	F.OVBS= 000030   	IE.HFU= 177744   	IS.RDD= 000002   	PAR$$$= 000067
FD.OSP= 004000   	F.RACC= 000016   	IE.IES= 177656   	IS.SUC= 000001   	PERR    000370R
FD.PLC= 000004   	F.RATT= 000001   	IE.IFC= 177776   	IS.TAB= 004401   	PF$GBL= 000020
FD.PRN= 000004   	F.RCNM= 000034   	IE.IFU= 177747   	IS.TMO= 000002   	PF$OVL= 000004
FD.PSE= 010000   	F.RCTL= 000017   	IE.ILL= 177726   	LASTV   000000R  	PF$PIC= 000001
FD.RAH= 000001   	F.RSIZ= 000002   	IE.ISQ= 177703   	LIBERR  000362R  	PF$RD = 000200
FD.RAN= 000002   	F.RTYP= 000000   	IE.LCK= 177745   	L$EI  = ****** GX	PF$REL= 000010
FD.REC= 000001   	F.SEQN= 000100   	IE.MOD= 177753   	L$ES  = ****** GX	PF$SHR= 000040
FD.RWM= 000001   	F.SPDV= 000072   	IE.NBF= 177731   	L$ET  = ****** GX	PF$UNI= 000002
FD.SDI= 000020   	F.SPUN= 000074   	IE.NBK= 177727   	L$MI  = ****** GX	PF$WRT= 000001
FD.SQD= 000040   	F.STBK= 000036   	IE.NDR= 177670   	L$MS  = ****** GX	PF$XEQ= 000100
FD.TTY= 000004   	F.UNIT= 000136   	IE.NFI= 177704   	L$MT  = ****** GX	PSD$MX= 000031
FD.WBH= 000002   	F.URBD= 000020   	IE.NFW= 177673   	MAXALI= 000011   	P$SALI  000002      006
FF.CHR= 000005   	F.VBN = 000064   	IE.NLK= 177661   	MHD$MX= 000111   	P$SALO  000005      006
FF.NV = 000003   	F.VBSZ= 000060   	IE.NLN= 177733   	MH$CPY= 000004   	P$SFL0  000003      006
FF.POE= 000002   	GS$ARG= 000003   	IE.NNC= 177663   	MH$GTX= 000006   	P$SFL1  000004      006
FF.RWD= 000001   	GS$EPM= 000002   	IE.NNL= 177662   	MH$LNM= 000001   	P$SNAM  000012      006
FF.RWF= 000006   	GS$PSC= 000000   	IE.NNN= 177674   	MH$MHD= 000000   	P$SNLN  000011      006
FF.SPC= 000004   	GS$SYM= 000001   	IE.NOD= 177751   	MH$MTC= 000005   	Q$$CMO= 000000
FO.APD= 000106   	G$SDTY  000001      005	IE.NSF= 177746   	MH$SRC= 000002   	RDELE   000164R
LIBTBL	MACRO M1110  22-AUG-78 02:14  PAGE 4-5
SYMBOL TABLE

RDR     000066R  	SRF$MX= 000025   	S$$LIB= 000000   	UNLOCK  000350R  	$PARTD= ****** GX
RTN     000360R  	STAGRP= 000000   	S.FATT= 000016   	V$MEML= 000002   	$RDEP   000004RG
R$MXLN= 001000   	STOGRP= 000024   	S.FDB = 000140   	$     = 000000      012	$RDMN   000036RG
R$NAME= ****** GX	S$DNAM  000013      011	S.FNAM= 000006   	$ALVRT= ****** GX	$SAVRG= ****** GX
R$$11M= 000000   	S$DNLN  000012      011	S.FNB = 000036   	$EPBLK= ****** GX	$UNLPG= ****** GX
R.FIX = 000001   	S$DPSI  000005      011	S.FNBW= 000017   	$EPTHL= ****** GX	$$    = 000001
R.SEQ = 000003   	S$DVAL  000006      011	S.FNTY= 000004   	$ERMSG= ****** GX	$$MSG = 000000
R.VAR = 000002   	S$MXLN= 000017   	S.FTYP= 000002   	$HDLST= ****** GX	$$S   = 000005
SDF$MX= 000032   	S$RNAM  000006      010	S.NFEN= 000020   	$LCKPG= ****** GX	$$0   = 000002
SETUP   000412R  	S$RNLN  000005      010	TIRMAX= 000121   	$LIBPT= ****** GX	$$1   = 000002
SF$DEF= 000002   	S$SDTY  000002      007	T$CHAR= 000005   	$MNBLK= ****** GX	.GETSQ= ****** G
SF$REL= 000010   	S$SFL0  000003      007	T$HEAD= 000000   	$MNTHL= ****** GX	.POINT= ****** GX
SF$UNI= 000004   	S$SFL1  000004      007	T$SLEN= 000004   	$NWLNK= ****** GX	...GBL= 000000
SF$VAL= 000020   	S$V2  = ****** GX	T$SMBL= 000004   	$OUTBF= ****** GX	...TPC= 000140
SF$WK = 000001

. ABS.	000000	   000
      	000436	   001
OBJREC	000001	   002
MHDREC	000111	   003
MTCREC	000213	   004
GSDREC	000002	   005
PSDEF 	000031	   006
SYMBOL	000005	   007
SYMREF	000025	   010
SYMDEF	000032	   011
EOMREC	000007	   012
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  3669 WORDS  ( 15 PAGES)
DYNAMIC MEMORY:  4884 WORDS  ( 18 PAGES)
ELAPSED TIME:  00:00:20
OBJ$:LIBTBL,LIS$:LIBTBL/-SP=SRC$:NEWFORMAT.,LIBPRE,LIBTBL
