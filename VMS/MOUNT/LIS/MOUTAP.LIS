
; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 1
; Digital Equipment Corporation
;
;	0001	MODULE MOUTAP (
;	0002			LANGUAGE (BLISS32),
;	0003			IDENT = 'X0018'
;	0004			) =
;	0005	BEGIN
;	0006	
;	0007	!
;	0008	! COPYRIGHT (C) 1977
;	0009	! DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
;	0010	!
;	0011	! THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
;	0012	! COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
;	0013	! ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
;	0014	! MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
;	0015	! EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
;	0016	! TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
;	0017	! REMAIN IN DEC.
;	0018	!
;	0019	! THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
;	0020	! AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
;	0021	! CORPORATION.
;	0022	!
;	0023	! DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
;	0024	! SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
;	0025	
;	0026	!++
;	0027	!
;	0028	! FACILITY:  MOUNT UTILITY
;	0029	!
;	0030	! ABSTRACT:
;	0031	!
;	0032	!	THESE ROUTINES HANDLE THE MOUNTING OF MAGNETIC TAPE
;	0033	!
;	0034	! ENVIRONMENT:
;	0035	!
;	0036	!	VAX/VMS OPERATING SYSTEM, INCLUDING PRIVILEGED SYSTEM SERVICES
;	0037	!	AND INTERNAL EXEC ROUTINES.
;	0038	!
;	0039	!--
;	0040	!
;	0041	!
;	0042	! AUTHOR:  D. H. GILLESPIE,	 CREATION DATE:  05-DEC-1977  
;	0043	!
;	0044	! REVISION HISTORY:
;	0045	!
;	0046	!   D. H. Gillespie, 28-Dec-1977  10:40
;	0047	!   X0002 - CHANGE MOUNT FOREIGN AND NOLABELED MAG TAPE
;	0048	!
;	0049	!   D. H. Gillespie, 16-Jan-1978  14:05
;	0050	!   X0003 - FIX MULTIPLE UNIT BUG
;	0051	!
;	0052	!   Andrew C. Goldstein, 13-Feb-1978  11:38
;	0053	!   X0004 - Make volume owner UIC of mounter if foreign or nolabel
;	0054	!
;	0055	!   D. H. Gillespie, 14-Feb-1978  8:54

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 1-1
; Digital Equipment Corporation
;
;	0056	!   X0005 - add delay on rewind if medium offline
;	0057	!
;	0058	!   D. H. Gillespie, 14-Feb-1978  9:00
;	0059	!   X0006 -  change to system symbols for density
;	0060	!
;	0061	!   D. H. Gillespie, 14-Feb-1978  9:05
;	0062	!   X0007 - CHECK FOR VOLUMES MOUNTED ON CONSECUTIVE UNITS
;	0063	!
;	0064	!   D. H. Gillespie, 14-Feb-1978  13:14
;	0065	!   X0008 - ADD CHECK FOR LENGTH OF VOLUME LABELS
;	0066	!
;	0067	!   D. H. Gillespie, 16-Feb-1978  14:26
;	0068	!   X0009 - add check for legal block size on labeled tape
;	0069	!
;	0070	!   D. H. Gillespie, 28-Feb-1978  12:47
;	0071	!   X0010 - ADD DATA CHECK OPTIONS
;	0072	!
;	0073	!   D. H. Gillespie, 14-Mar-1978  16:54
;	0074	!   X0011 - BUG SETTING RCK AND WCK IN SECONDARY UCB
;	0075	!
;	0076	!   D. H. Gillespie, 17-May-78  16:10
;	0077	!   X0012 - add valid bit handling
;	0078	!
;	0079	!   D. H. Gillespie, 2-Jun-78  9:48
;	0080	!   X0013 - add handling of /RECORD:value
;	0081	!
;	0082	!   D. H. Gillespie, 7-Jun-78  16:25
;	0083	!   X0014 - add OPT_OVR_ACC, setting characteristics before initial read, and fix handler bug
;	0084	!
;	0085	!   D. H. Gillespie, 13-Jun-78  14:17
;	0086	!   X0015 - prevent mounting when user lacks logical + phy I/O privilege + read access
;	0087	!
;	0088	!   D. H. Gillespie, 19-Jun-78  17:20
;	0089	!   X0016 - add informational message
;	0090	!
;	0091	!   D. H. Gillespie, 26-Jul-78  12:36
;	0092	!   X0017 - correct bug - not setting valid in offline loop
;	0093	!
;	0094	!   D. H. Gillespie, 27-Jul-78  16:57
;	0095	!    X0018 - Correct bug in prevention of mounting, use process' original privilege
;	0096	!
;	0097	!**
;	0098	
;	0099	LIBRARY 'SYS$LIBRARY:LIB.L32';
;	0100	REQUIRE 'SRC$:MOUDEF.B32';
;	0407	REQUIRE 'LIBD$:[VMSLIB.OBJ]MOUNTMSG.B32';
;	0507	
;	0508	FORWARD ROUTINE
;	0509		CLEAR_VALID	: NOVALUE,		!CLEAR UCB VALID BIT
;	0510		ERROR_HANDLER,				!HANDLER TO CLEAR VALID ON SECONDARY UCB'S
;	0511		SET_VALID	: NOVALUE,		!SET UCB VALID BIT
;	0512		GET_UIC,				!GET PROCESS UIC
;	0513		KERNEL_HANDLER	: NOVALUE,		!KERNEL MODE EXCEPTION HANDLER
;	0514		MAKE_TAPE_MOUNT,			!KERNEL MOUDE TAPE MOUNT
;	0515		MOUNT_TAPE	: NOVALUE,		!MOUNT MAGNETIC TAPE

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 1-2
; Digital Equipment Corporation
;
;	0516		READ_VOLLABEL,				!READ AND VERIFY VOL1 ANSI LABEL
;	0517		TAPE_OWN_PRO	: NOVALUE;		!DETERMINE OWNER AND PROTECTION OF TAPE
;	0518	
;	0519	
;	0520	EXTERNAL ROUTINE
;	0521		ALLOC_LOGNAME,				!ALLOCATE LOGICAL NAME
;	0522		ALLOCATE_MEM,				!ALLOCATE MEMORY
;	0523		ENTER_LOGNAME,				!ENTER LOGICAL NAME
;	0524		GET_CHANNELUCB,				!GET UCB FROM CHANNEL
;	0525		LIB$CVT_OTB	: ADDRESSING_MODE(ABSOLUTE),
;	0526		LOCK_IODB,				!LOCK I/O DATA BASE
;	0527		SEND_ERRLOG,				!SEND MESSAGE TO ERROR LOGGER
;	0528		START_ACP,				!STARTUP ACP
;	0529		TRAN_LOGNAME,				!TRANSLATE LOGICAL NAME
;	0530		UNLOCK_IODB;				!UNLOCK I/O DATABASE
;	0531	
;	0532	
;	0533	EXTERNAL
;	0534		CHANNEL,				!CHANNEL OF VOLUME BEING MOUNTED
;	0535		CLEANUP_FLAGS	: BITVECTOR,		!CLEANUP FLAGS
;	0536		CLEANUP_ALLOC	: BITVECTOR,		!CLEANUP ALLOCATION FLAGS
;	0537		CTL$GL_VOLUMES	: ADDRESSING_MODE(ABSOLUTE),
;	0538		DEVICE_CHAR	: BBLOCK,		!CURRENT CHAR OF DEVICE BEING MOUNTED
;	0539		MOUNT_OPTIONS	: BITVECTOR,		!MOUNT OPTION BITS
;	0540		VOL1		: BBLOCK;		!VOL1 LABEL
;	0541	
;	0542	OWN
;	0543		CHARACTERISTIC	: VECTOR [2],		!CHARACTERISTICS TO SET
;	0544		PRIVILEGE_MASK	: REF BBLOCK,		!USER PRIVILEGES
;	0545		PROTO_VCB	: BBLOCK[VCB$C_LENGTH],	!PROTOTYPE VCB
;	0546		PROTO_RVT	: BBLOCK[$BYTEOFFSET(RVT$L_UCBLST) + (4*DEVMAX)],
;	0547		PROTO_MVL	: BBLOCK[MVL$K_FIXLEN + (MVL$K_LENGTH*LABMAX)],
;	0548		SYSEXV		: VECTOR [2],		!PLACE TO SAVE SYSTEM VECTORS
;	0549		TAPEOWNER_UIC,				!OWNER UIC OF TAPE
;	0550		TAPE_PROTECTION,			!TAPE PROTECTION
;	0551		VOLUME_UIC;
;	0552	
;	0553	BIND  DENSITY		= CHARACTERISTIC[1] : BBLOCK;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 2
; Digital Equipment Corporation
;
;	0554	GLOBAL ROUTINE READ_VOLLABEL(VOLUME_LABEL)  =
;	0555	
;	0556	!++
;	0557	!
;	0558	! FUNCTIONAL DESCRIPTION:
;	0559	!	THIS ROUTINE READS THE FIRST BLOCK ON THE MAGNETIC TAPE AND
;	0560	!	CHECKS THAT IT IS AN ANSI TAPE
;	0561	!
;	0562	! CALLING SEQUENCE:
;	0563	!	READ_VOLLABEL(ARG1)
;	0564	!
;	0565	! INPUT PARAMETERS:
;	0566	!	ARG1 - ADDRESS OF VOLUME LABEL STRING DESCRIPTOR
;	0567	!
;	0568	! IMPLICIT INPUTS:
;	0569	!	CHANNEL - CHANNEL NUMBER ASSIGNED TO DEVICE BEING MOUNTED
;	0570	!
;	0571	! OUTPUT PARAMETERS:
;	0572	!	NONE
;	0573	!
;	0574	! IMPLICIT OUTPUTS:
;	0575	!	VOL1 - VOL1 MAGNETIC TAPE LABEL
;	0576	!	TAPEOWNER_UIC - OWNER OF TAPE
;	0577	!	TAPE_PROTECTION - TAPE PROTECTION
;	0578	!
;	0579	! ROUTINE VALUE:
;	0580	!	1		- IF VALID ANSI VOLUME LABEL
;	0581	!	SS$_NOTLABELMT	- NOT LABELED ANSI MAGNETIC TAPE
;	0582	!	SS$_INCVOLLABEL - INCORRECT VOLUME LABEL
;	0583	!	SS$_DEVOFFLINE	- DEVICE NOT ON SYSTEM
;	0584	!	SS$_MEDOFL	- MEDIUM OFF_LINE
;	0585	!
;	0586	! SIDE EFFECTS:
;	0587	!	NONE
;	0588	!
;	0589	! USER ERRORS:
;	0590	!	NONE
;	0591	!
;	0592	!--
;	0593	
;	0594	BEGIN
;	0595	
;	0596	MAP
;	0597		VOLUME_LABEL	: REF VECTOR;	!VOLUME LABEL STRING DESCRIPTOR
;	0598	
;	0599	BIND
;	0600		SECONDS	= UPLIT(-10000000,-1);	!ONE SECOND IN 100 nsec UNITS
;	0601	
;	0602	LOCAL
;	0603		IO_STATUS	: VECTOR [2],	!I/O STATUS BLOCK
;	0604		STATUS;
;	0605	
;	0606	! POSITION TAPE TO BOT AND CHECK STATUS
;	0607	INCRU J FROM 0 TO 9 DO		!WAIT 10 SECONDS BEFORE DECIDING THAT THE DEVICE IS OFFLINE
;	0608	    BEGIN

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 2-1
; Digital Equipment Corporation
;
;	0609	! INITIALIZE CHARACTERISTICS
;	0610	    KERNEL_CALL(SET_VALID,.CHANNEL);
;	0611	    STATUS = $QIOW(	CHAN = .CHANNEL,
;     P 0612				FUNC = IO$_REWIND,
;     P 0613				IOSB = IO_STATUS);
;	0614	    IF .STATUS THEN STATUS = .IO_STATUS<0,16>;
;	0615	    IF .STATUS NEQ SS$_MEDOFL AND .STATUS NEQ SS$_VOLINV THEN EXITLOOP;
;	0616	    IF $SETIMR(DAYTIM = SECONDS, EFN = 0)
;	0617	    THEN $WAITFR (EFN = 0);
;	0618	    END;
;	0619	
;	0620	! ALL ERRORS OTHER THAN DEVICE NOT IN SYSTEM OR MEDIUM OFF LINE REPORTED TO USER
;	0621	IF NOT .STATUS THEN
;	0622	    IF .STATUS EQL SS$_DEVOFFLINE OR .STATUS EQL SS$_MEDOFL
;	0623	    THEN RETURN .STATUS
;	0624	    ELSE ERR_EXIT(.STATUS);
;	0625	
;	0626	
;	0627	!
;	0628	! SET CHARACTERISTICS BEFORE READ IN CASE THE AUTOMATIC DENSITY SELECT IS NOT WORKING
;	0629	!
;	0630	CHARACTERISTIC[0] = .(DEVICE_CHAR + 4);
;	0631	CHARACTERISTIC[1] = .(DEVICE_CHAR + 8);
;	0632	
;	0633	! NOW SET DENSITY
;	0634	IF .MOUNT_OPTIONS[OPT_DENSITY] THEN
;	0635	    BEGIN
;	0636	    IF .MOUNT_OPTIONS[OPT_DENS_800]
;	0637	    THEN DENSITY[MT$V_DENSITY] = MT$K_NRZI_800
;	0638	    ELSE DENSITY[MT$V_DENSITY] = MT$K_PE_1600;
;	0639	    END;
;	0640	
;	0641	STATUS = $QIOW(	CHAN = .CHANNEL,
;     P 0642			IOSB = IO_STATUS,
;     P 0643			FUNC = IO$_SETMODE,
;     P 0644			P1 = CHARACTERISTIC);
;	0645	IF .STATUS THEN STATUS = .IO_STATUS<0,16>;
;	0646	IF NOT .STATUS THEN ERR_EXIT(.STATUS);
;	0647	
;	0648	! READ FIRST BLOCK ON TAPE AND CHECK STATUS
;	0649	STATUS = $QIOW(	CHAN = .CHANNEL,
;     P 0650			FUNC = IO$_READLBLK,
;     P 0651			IOSB = IO_STATUS,
;     P 0652			P1 = VOL1,
;     P 0653			P2 = 80);
;	0654	
;	0655	IF .STATUS THEN STATUS = .IO_STATUS<0,16>;
;	0656	
;	0657	! IF FIRST RECORD IS TM THEN NOT ANSI TAPE
;	0658	! IF LABEL IS MORE THAN 80 CHARACTERS IGNORE ERROR
;	0659	IF NOT .STATUS THEN 
;	0660	    IF .STATUS NEQ SS$_DATAOVERUN THEN RETURN (SS$_NOTLABELMT);
;	0661	
;	0662	! NOW CHECK THAT FIRST BLOCK IS VOL1 ANSI LABEL 
;	0663	IF .VOL1[VL1$L_VL1LID] NEQ 'VOL1' 

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 2-2
; Digital Equipment Corporation
;
;	0664	THEN RETURN(SS$_NOTLABELMT);
;	0665	TAPE_OWN_PRO();
;	0666	
;	0667	! NOW CHECK LABEL
;	0668	IF CH$NEQ(.VOLUME_LABEL[0],.VOLUME_LABEL[1],VL1$S_VOLLBL,
;	0669	    VOL1[VL1$T_VOLLBL],' ')
;	0670	THEN RETURN (SS$_INCVOLLABEL);
;	0671	
;	0672	RETURN 1;
;	0673	END;					!END OF ROUTINE


							    .TITLE  MOUTAP
							    .IDENT  \X0018\

							    .PSECT  $PLIT$,NOWRT,NOEXE,2

					      00000 P.AAA:  .LONG   -10000000, -1					      ;

							    .PSECT  $OWN$,NOEXE,2

					      00000 CHARACTERISTIC:
							    .BLKB   8
					      00008 PRIVILEGE_MASK:
							    .BLKB   4
					      0000C PROTO_VCB:
							    .BLKB   84
					      00060 PROTO_RVT:
							    .BLKB   76
					      000AC PROTO_MVL:
							    .BLKB   140
					      00138 SYSEXV: .BLKB   8
					      00140 TAPEOWNER_UIC:
							    .BLKB   4
					      00144 TAPE_PROTECTION:
							    .BLKB   4
					      00148 VOLUME_UIC:
							    .BLKB   4

						    DENSITY=		CHARACTERISTIC+4
						    SECONDS=		P.AAA
							    .GLOBL  ALLOC_LOGNAME, ALLOCATE_MEM, ENTER_LOGNAME, GET_CHANNELUCB
							    .GLOBL  LIB$CVT_OTB, LOCK_IODB, SEND_ERRLOG, START_ACP
							    .GLOBL  TRAN_LOGNAME, UNLOCK_IODB, CHANNEL, CLEANUP_FLAGS
							    .GLOBL  CLEANUP_ALLOC, CTL$GL_VOLUMES, DEVICE_CHAR, MOUNT_OPTIONS
							    .GLOBL  VOL1, SYS$CMKRNL, SYS$QIOW, SYS$SETIMR, SYS$WAITFR

							    .PSECT  $CODE$,NOWRT,2

					 0F0C 00000 	    .ENTRY  READ_VOLLABEL, Save R2,R3,R8,R9,R10,R11		      ; 0554
		         58	0000G  CF  9E 00002 	    MOVAB   CHANNEL, R8						      ;
		         59	0000'  CF  9E 00007 	    MOVAB   CHARACTERISTIC, R9					      ;
		         5A 00000000G  00  9E 0000C 	    MOVAB   LIB$STOP, R10					      ;
		         5B 00000000G  9F  9E 00013 	    MOVAB   @#SYS$QIOW, R11					      ;
		         5E	       08  C2 0001A 	    SUBL2   #8, SP						      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 2-3
; Digital Equipment Corporation
;
				       53  D4 0001D 	    CLRL    J							      ; 0607
				       68  DD 0001F 1$:     PUSHL   CHANNEL						      ; 0610
				       01  DD 00021 	    PUSHL   #1							      ;
				       5E  DD 00023 	    PUSHL   SP							      ;
				0000V  CF  9F 00025 	    PUSHAB  SET_VALID						      ;
	      00000000G  9F	       04  FB 00029 	    CALLS   #4, @#SYS$CMKRNL					      ;
				       7E  7C 00030 	    CLRQ    -(SP)						      ; 0613
				       7E  7C 00032 	    CLRQ    -(SP)						      ;
				       7E  7C 00034 	    CLRQ    -(SP)						      ;
				       7E  7C 00036 	    CLRQ    -(SP)						      ;
				  20   AE  9F 00038 	    PUSHAB  IO_STATUS						      ;
				       24  DD 0003B 	    PUSHL   #36							      ;
				       68  DD 0003D 	    PUSHL   CHANNEL						      ;
				       7E  D4 0003F 	    CLRL    -(SP)						      ;
		         6B	       0C  FB 00041 	    CALLS   #12, SYS$QIOW					      ;
		         52	       50  D0 00044 	    MOVL    R0, STATUS						      ;
		         03	       52  E9 00047 	    BLBC    STATUS, 2$						      ; 0614
		         52	       6E  3C 0004A 	    MOVZWL  IO_STATUS, STATUS					      ;
	      000001A4   8F	       52  D1 0004D 2$:     CMPL    STATUS, #420					      ; 0615
				       09  13 00054 	    BEQL    3$							      ;
	      00000254   8F	       52  D1 00056 	    CMPL    STATUS, #596					      ;
				       22  12 0005D 	    BNEQ    5$							      ;
				       7E  7C 0005F 3$:     CLRQ    -(SP)						      ; 0616
				0000'  CF  9F 00061 	    PUSHAB  SECONDS						      ; 0554
				       7E  D4 00065 	    CLRL    -(SP)						      ; 0616
	      00000000G  9F	       04  FB 00067 	    CALLS   #4, @#SYS$SETIMR					      ;
		         09	       50  E9 0006E 	    BLBC    R0, 4$						      ;
				       7E  D4 00071 	    CLRL    -(SP)						      ; 0617
	      00000000G  9F	       01  FB 00073 	    CALLS   #1, @#SYS$WAITFR					      ;
				       53  D6 0007A 4$:     INCL    J							      ; 0607
		         09	       53  D1 0007C 	    CMPL    J, #9						      ;
				       9E  1B 0007F 	    BLEQU   1$							      ;
		         1B	       52  E8 00081 5$:     BLBS    STATUS, 8$						      ; 0621
	      00000084   8F	       52  D1 00084 	    CMPL    STATUS, #132					      ; 0622
				       09  13 0008B 	    BEQL    6$							      ;
	      000001A4   8F	       52  D1 0008D 	    CMPL    STATUS, #420					      ;
				       04  12 00094 	    BNEQ    7$							      ;
		         50	       52  D0 00096 6$:     MOVL    STATUS, R0						      ; 0623
					   04 00099 	    RET     							      ;
				       52  DD 0009A 7$:     PUSHL   STATUS						      ; 0624
		         6A	       01  FB 0009C 	    CALLS   #1, LIB$STOP					      ;
		         69	0000G  CF  7D 0009F 8$:     MOVQ    DEVICE_CHAR+4, CHARACTERISTIC			      ; 0630
		         14	0000G  CF  E9 000A4 	    BLBC    MOUNT_OPTIONS, 10$					      ; 0634
	   08	  0000G  CF	       01  E1 000A9 	    BBC     #1, MOUNT_OPTIONS, 9$				      ; 0636
	   05	         00	       03  F0 000AF 	    INSV    #3, #0, #5, DENSITY+1				      ; 0637
				  05   A9     000B3									      ;
				       06  11 000B5 	    BRB     10$							      ; 0636
	   05	         00	       04  F0 000B7 9$:     INSV    #4, #0, #5, DENSITY+1				      ; 0638
				  05   A9     000BB									      ;
				       7E  7C 000BD 10$:    CLRQ    -(SP)						      ; 0644
				       7E  7C 000BF 	    CLRQ    -(SP)						      ;
				       7E  D4 000C1 	    CLRL    -(SP)						      ;
				       59  DD 000C3 	    PUSHL   R9							      ;
				       7E  7C 000C5 	    CLRQ    -(SP)						      ;
				  20   AE  9F 000C7 	    PUSHAB  IO_STATUS						      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 2-4
; Digital Equipment Corporation
;
				       23  DD 000CA 	    PUSHL   #35							      ;
				       68  DD 000CC 	    PUSHL   CHANNEL						      ;
				       7E  D4 000CE 	    CLRL    -(SP)						      ;
		         6B	       0C  FB 000D0 	    CALLS   #12, SYS$QIOW					      ;
		         52	       50  D0 000D3 	    MOVL    R0, STATUS						      ;
		         06	       52  E9 000D6 	    BLBC    STATUS, 11$						      ; 0645
		         52	       6E  3C 000D9 	    MOVZWL  IO_STATUS, STATUS					      ;
		         05	       52  E8 000DC 	    BLBS    STATUS, 12$						      ; 0646
				       52  DD 000DF 11$:    PUSHL   STATUS						      ;
		         6A	       01  FB 000E1 	    CALLS   #1, LIB$STOP					      ;
				       7E  7C 000E4 12$:    CLRQ    -(SP)						      ; 0653
				       7E  7C 000E6 	    CLRQ    -(SP)						      ;
		         7E	  50   8F  9A 000E8 	    MOVZBL  #80, -(SP)						      ;
				0000G  CF  9F 000EC 	    PUSHAB  VOL1						      ;
				       7E  7C 000F0 	    CLRQ    -(SP)						      ;
				  20   AE  9F 000F2 	    PUSHAB  IO_STATUS						      ;
				       21  DD 000F5 	    PUSHL   #33							      ;
				       68  DD 000F7 	    PUSHL   CHANNEL						      ;
				       7E  D4 000F9 	    CLRL    -(SP)						      ;
		         6B	       0C  FB 000FB 	    CALLS   #12, SYS$QIOW					      ;
		         52	       50  D0 000FE 	    MOVL    R0, STATUS						      ;
		         06	       52  E9 00101 	    BLBC    STATUS, 13$						      ; 0655
		         52	       6E  3C 00104 	    MOVZWL  IO_STATUS, STATUS					      ;
		         09	       52  E8 00107 	    BLBS    STATUS, 14$						      ; 0659
	      00000838   8F	       52  D1 0010A 13$:    CMPL    STATUS, #2104					      ; 0660
				       0B  12 00111 	    BNEQ    15$							      ;
	      314C4F56   8F	0000G  CF  D1 00113 14$:    CMPL    VOL1, #827084630					      ; 0663
				       06  13 0011C 	    BEQL    16$							      ;
		         50	01DC   8F  3C 0011E 15$:    MOVZWL  #476, R0						      ; 0664
					   04 00123 	    RET     							      ;
		  0000V  CF	       00  FB 00124 16$:    CALLS   #0, TAPE_OWN_PRO					      ; 0665
		         50	  04   AC  D0 00129 	    MOVL    VOLUME_LABEL, R0					      ; 0668
	   20	    04   B0	       60  2D 0012D 	    CMPC5   (R0), @4(R0), #32, #6, VOL1+4			      ;
		  0000G  CF	       06     00132									      ;
				       06  13 00136 	    BEQL    17$							      ;
		         50	010C   8F  3C 00138 	    MOVZWL  #268, R0						      ; 0670
					   04 0013D 	    RET     							      ;
		         50	       01  D0 0013E 17$:    MOVL    #1, R0						      ; 0672
					   04 00141 	    RET     							      ; 0554

; Routine Size:  322 bytes



; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 3
; Digital Equipment Corporation
;
;	0674	ROUTINE TAPE_OWN_PRO : NOVALUE  =
;	0675	
;	0676	!++
;	0677	!
;	0678	! FUNCTIONAL DESCRIPTION:
;	0679	!	THIS ROUTINE DETERMINES THE OWNER AND PROTECTION OF THE VOLUME
;	0680	!
;	0681	! CALLING SEQUENCE:
;	0682	!	TAPE_OWN_PRO()
;	0683	!
;	0684	! INPUT PARAMETERS:
;	0685	!	NONE
;	0686	!
;	0687	! IMPLICIT INPUTS:
;	0688	!	VOL1 -	LOCATION 38-40 D%C
;	0689	!		LOCATION 41-45 	GROUP UIC
;	0690	!		LOCATION 46-50	MEMEMBER UIC
;	0691	!
;	0692	! OUTPUT PARAMETERS:
;	0693	!	NONE
;	0694	!
;	0695	! IMPLICIT OUTPUTS:
;	0696	!	TAPEOWNER_UIC - OWNING UIC OF TAPE
;	0697	!	TAPE_PROTECTION -  TAPE PROTECTION 
;	0698	!
;	0699	! ROUTINE VALUE:
;	0700	!	NONE
;	0701	!
;	0702	! SIDE EFFECTS:
;	0703	!	NONE
;	0704	!
;	0705	! USER ERRORS:
;	0706	!	NONE
;	0707	!
;	0708	!--
;	0709	
;	0710	BEGIN
;	0711	
;	0712	LOCAL
;	0713		CONV_BUF	: VECTOR [6,BYTE],	!BUFFER TO HOLD PART OF UIC WHILE CONVERTING
;	0714		OWNER,					!OWNER OF TAPE
;	0715		P,					!POINTER INTO VOL1 OWNERSHIP FIELD
;	0716		PROTECTION	: BITVECTOR[16],	!VOLUME PROTECTION
;	0717		VALUE;					!VALUE OF BINARY CONVERTION
;	0718	
;	0719	
;	0720	! BIT NUMBERS FOR DIFFERENT PROTECTIONS
;	0721	LITERAL
;	0722		WORLD_CREATE = 14,
;	0723		WORLD_WRITE = 13,
;	0724		WORLD_READ = 12,
;	0725		GROUP_CREATE = 10,
;	0726		GROUP_WRITE = 9,
;	0727		GROUP_READ = 8;
;	0728	

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 3-1
; Digital Equipment Corporation
;
;	0729	PROTECTION = %X'0000';
;	0730	OWNER = KERNEL_CALL(GET_UIC);
;	0731	! IF ANSI TAPE PRODUCED BY VAX SYSTEM, DECODE OWNER FIELD
;	0732	IF .(VOL1[VL1$T_VOLOWNER])<0,24> EQL 'D%C' THEN
;	0733	    BEGIN
;	0734	    P = VOL1[VL1$T_VOLOWNER] + 3;
;	0735	    IF .(.P)<0,8> NEQ ' ' THEN
;	0736		BEGIN
;	0737		CH$MOVE(5,.P,CONV_BUF);
;	0738		IF .(.P) <0,8> GEQ 'A' THEN
;	0739		CONV_BUF<0,8> = .(.P)<0,8> - ('A' - '0');
;	0740		IF NOT LIB$CVT_OTB(5,CONV_BUF,VALUE) THEN ERR_EXIT(MOUN$_BADVOL1);
;	0741		OWNER<16,16> = .VALUE<0,16>;
;	0742		END;
;	0743	    P = .P + 5;
;	0744	    IF .(.P)<0,8> NEQ ' ' THEN
;	0745		BEGIN
;	0746		CH$MOVE(5,.P,CONV_BUF);
;	0747		IF .(.P) <0,8> GEQ 'A' THEN
;	0748		CONV_BUF<0,8> = .(.P)<0,8> - ('A' - '0');
;	0749		IF NOT LIB$CVT_OTB(5,CONV_BUF,VALUE) THEN ERR_EXIT(MOUN$_BADVOL1);
;	0750		OWNER<0,16> = .VALUE<0,16>;
;	0751		END;
;	0752	
;	0753	! NOW PROTECTION MUST BE DECODED
;	0754	! IF BOTH GROUP AND MEMBER ARE BLANK THEN ALL PRIVILEGES GRANTED
;	0755		
;	0756	    P = .P -5;					!POINTER TO GROUP
;	0757	    IF NOT CH$FAIL(CH$FIND_NOT_CH(10,.P,' ')) THEN
;	0758	! THEY ARE NOT BLANK, SO NOW CHECK IF MEMBER IS BLANK
;	0759		BEGIN
;	0760		P = .P + 5;				!POINTER TO MEMBER FIELD
;	0761		IF NOT CH$FAIL(CH$FIND_NOT_CH(5,.P,' ')) THEN
;	0762		    BEGIN
;	0763		    IF .(.P)<0,8> LSS 'A' THEN
;	0764			BEGIN
;	0765			PROTECTION[GROUP_CREATE] = 1;
;	0766			PROTECTION[GROUP_WRITE] = 1;
;	0767			PROTECTION[GROUP_READ] = 1;
;	0768			END
;	0769		    ELSE
;	0770			BEGIN
;	0771			PROTECTION[GROUP_CREATE] = 1;
;	0772			PROTECTION[GROUP_WRITE] = 1;
;	0773			END;
;	0774		    END;
;	0775		P = .P - 5;				!POINTER TO GROUP
;	0776		IF .(.P)<0,8> LSS 'A' THEN
;	0777		    BEGIN				!FIRST CHAR 0-9
;	0778		    PROTECTION[WORLD_CREATE] = 1;
;	0779		    PROTECTION[WORLD_WRITE] = 1;
;	0780		    PROTECTION[WORLD_READ] = 1;
;	0781		    END
;	0782		ELSE
;	0783		    BEGIN

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 3-2
; Digital Equipment Corporation
;
;	0784		    PROTECTION[WORLD_CREATE] = 1;
;	0785		    PROTECTION[WORLD_WRITE] = 1;
;	0786		    END;
;	0787		END;
;	0788	    END;
;	0789	TAPEOWNER_UIC = .OWNER;
;	0790	TAPE_PROTECTION = .PROTECTION;
;	0791	END;						!END OF ROUTINE TAPE_OWN_PRO





					 0DFC 00142 TAPE_OWN_PRO:
							    .WORD   Save R2,R3,R4,R5,R6,R7,R8,R10,R11			      ; 0674
		         5A 00000000G  00  9E 00144 	    MOVAB   LIB$STOP, R10					      ;
		         5B 00000000G  9F  9E 0014B 	    MOVAB   @#LIB$CVT_OTB, R11					      ;
		         5E	       0C  C2 00152 	    SUBL2   #12, SP						      ;
				       57  D4 00155 	    CLRL    PROTECTION						      ; 0729
				       7E  D4 00157 	    CLRL    -(SP)						      ; 0730
				       5E  DD 00159 	    PUSHL   SP							      ;
				0000V  CF  9F 0015B 	    PUSHAB  GET_UIC						      ;
	      00000000G  9F	       03  FB 0015F 	    CALLS   #3, @#SYS$CMKRNL					      ;
		         58	       50  D0 00166 	    MOVL    R0, OWNER						      ;
    0000G  CF	         18	       00  ED 00169 	    CMPZV   #0, #24, VOL1+37, #4400452				      ; 0732
			    00432544   8F     0016F									      ;
				       03  13 00174 	    BEQL    1$							      ;
				     00AB  31 00176 	    BRW     13$							      ;
		         56	0000G  CF  9E 00179 1$:     MOVAB   VOL1+40, P						      ; 0734
		         20	       66  91 0017E 	    CMPB    (P), #32						      ; 0735
				       2B  13 00181 	    BEQL    4$							      ;
      04   AE	         66	       05  28 00183 	    MOVC3   #5, (P), CONV_BUF					      ; 0737
		    41   8F	       66  91 00188 	    CMPB    (P), #65						      ; 0738
				       05  1F 0018C 	    BLSSU   2$							      ;
      04   AE	         66	       11  83 0018E 	    SUBB3   #17, (P), CONV_BUF					      ; 0739
				       5E  DD 00193 2$:     PUSHL   SP							      ; 0740
				  08   AE  9F 00195 	    PUSHAB  CONV_BUF						      ;
				       05  DD 00198 	    PUSHL   #5							      ;
		         6B	       03  FB 0019A 	    CALLS   #3, LIB$CVT_OTB					      ;
		         09	       50  E8 0019D 	    BLBS    R0, 3$						      ;
			    007280BC   8F  DD 001A0 	    PUSHL   #7504060						      ;
		         6A	       01  FB 001A6 	    CALLS   #1, LIB$STOP					      ;
	   10	         10	       6E  F0 001A9 3$:     INSV    VALUE, #16, #16, OWNER				      ; 0741
				       58     001AD									      ;
		         56	       05  C0 001AE 4$:     ADDL2   #5, P						      ; 0743
		         20	       66  91 001B1 	    CMPB    (P), #32						      ; 0744
				       29  13 001B4 	    BEQL    7$							      ;
      04   AE	         66	       05  28 001B6 	    MOVC3   #5, (P), CONV_BUF					      ; 0746
		    41   8F	       66  91 001BB 	    CMPB    (P), #65						      ; 0747
				       05  1F 001BF 	    BLSSU   5$							      ;
      04   AE	         66	       11  83 001C1 	    SUBB3   #17, (P), CONV_BUF					      ; 0748
				       5E  DD 001C6 5$:     PUSHL   SP							      ; 0749
				  08   AE  9F 001C8 	    PUSHAB  CONV_BUF						      ;
				       05  DD 001CB 	    PUSHL   #5							      ;
		         6B	       03  FB 001CD 	    CALLS   #3, LIB$CVT_OTB					      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 3-3
; Digital Equipment Corporation
;
		         09	       50  E8 001D0 	    BLBS    R0, 6$						      ;
			    007280BC   8F  DD 001D3 	    PUSHL   #7504060						      ;
		         6A	       01  FB 001D9 	    CALLS   #1, LIB$STOP					      ;
		         58	       6E  B0 001DC 6$:     MOVW    VALUE, OWNER					      ; 0750
		         56	       04  C2 001DF 7$:     SUBL2   #4, P						      ; 0756
	   76	         0A	       20  3B 001E2 	    SKPC    #32, #10, -(P)					      ; 0757
				       02  12 001E6 	    BNEQ    8$							      ;
				       51  D4 001E8 	    CLRL    R1							      ;
				       51  D5 001EA 8$:     TSTL    R1							      ;
				       36  13 001EC 	    BEQL    13$							      ;
		         56	       05  C0 001EE 	    ADDL2   #5, P						      ; 0760
	   66	         05	       20  3B 001F1 	    SKPC    #32, #5, (P)					      ; 0761
				       02  12 001F5 	    BNEQ    9$							      ;
				       51  D4 001F7 	    CLRL    R1							      ;
				       51  D5 001F9 9$:     TSTL    R1							      ;
				       12  13 001FB 	    BEQL    11$							      ;
		    41   8F	       66  91 001FD 	    CMPB    (P), #65						      ; 0763
				       07  1E 00201 	    BGEQU   10$							      ;
		         57	0700   8F  A8 00203 	    BISW2   #1792, PROTECTION					      ; 0767
				       05  11 00208 	    BRB     11$							      ; 0763
		         57	0600   8F  A8 0020A 10$:    BISW2   #1536, PROTECTION					      ; 0772
		         56	       04  C2 0020F 11$:    SUBL2   #4, P						      ; 0775
		    41   8F	       76  91 00212 	    CMPB    -(P), #65						      ; 0776
				       07  1E 00216 	    BGEQU   12$							      ;
		         57	7000   8F  A8 00218 	    BISW2   #28672, PROTECTION					      ; 0780
				       05  11 0021D 	    BRB     13$							      ; 0776
		         57	6000   8F  A8 0021F 12$:    BISW2   #24576, PROTECTION					      ; 0785
		  0000'  CF	       58  D0 00224 13$:    MOVL    OWNER, TAPEOWNER_UIC				      ; 0789
		  0000'  CF	       57  D0 00229 	    MOVL    PROTECTION, TAPE_PROTECTION				      ; 0790
					   04 0022E 	    RET     							      ; 0674

; Routine Size:  237 bytes


;	0792	

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 4
; Digital Equipment Corporation
;
;	0793	GLOBAL ROUTINE MOUNT_TAPE : NOVALUE  =
;	0794	
;	0795	!++
;	0796	!
;	0797	! FUNCTIONAL DESCRIPTION:
;	0798	!	THIS ROUTINE PERFORMS THE MECHANICS OF MOUNTING MAGNETIC TAPE 
;	0799	! 	GIVEN AS INPUT THE PARSED AND PARTIALLY VALIDATED COMMAND LINE.
;	0800	!
;	0801	! CALLING SEQUENCE:
;	0802	!	MOUNT_TAPES()
;	0803	!
;	0804	! INPUT PARAMETERS:
;	0805	!	NONE
;	0806	!
;	0807	! IMPLICIT INPUTS:
;	0808	!	MOUNT PARSER DATA BASE
;	0809	!	CHANNEL CHANNEL NUMBER FOR I/O
;	0810	!	VOL1 ANSI VOL1 LABEL IF FILES_11
;	0811	!
;	0812	! OUTPUT PARAMETERS:
;	0813	!	NONE
;	0814	!
;	0815	! IMPLICIT OUTPUTS:
;	0816	!	NONE
;	0817	!
;	0818	! ROUTINE VALUE:
;	0819	!	NONE
;	0820	!
;	0821	! SIDE EFFECTS:
;	0822	!	VCB,RVT,MVL CREATED
;	0823	!
;	0824	! USER ERRORS:
;	0825	!	NONE
;	0826	!
;	0827	!--
;	0828	
;	0829	BEGIN
;	0830	
;	0831	
;	0832	! START OF BUFFER
;	0833	MACRO	STADR	= 0,0,0,0%;
;	0834	
;	0835	! DEFINE DESCRIPTOR VECTOR DISPLACEMENTS
;	0836	MACRO LEN	= 0,0,32,0%;
;	0837	MACRO ADDR	= 4,0,32,0%;
;	0838	
;	0839	EXTERNAL
;	0840		RECORDSZ,					!VALUE OF /RECORD:
;	0841		BLOCKSIZE,					!VALUE OF /BLOCKSIZE:
;	0842		CLEANUP_ALLOC	: BITVECTOR[DEVMAX],		!BITS INDICATING WHICH PHYSICAL DEVICES WERE ALLOCATED
;	0843		CLEANUP_FLAGS	: BITVECTOR[32],
;	0844		CTL$GL_PHD	: REF BBLOCK ADDRESSING_MODE(ABSOLUTE),	!VECTOR PAGE PTER TO PROCESS HEADER
;	0845		DEVICE_COUNT,						!NUMBER OF DEVICES SPECIFIED
;	0846		DEVICE_STRING	: BBLOCKVECTOR[DEVMAX,8],	!VECTOR OF DEVICES STRING DESCRIPTORS
;	0847		DRIVE_COUNT	: VECTOR[DEVMAX],		!NUMBER OF DRIVES SPECIFIED FOR EACH DEVICE

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 4-1
; Digital Equipment Corporation
;
;	0848		LABEL_COUNT,					!NUMBER OF LABELS INPUT
;	0849		LABEL_STRING	: BBLOCKVECTOR[LABMAX,8],	!VECTOR OF LABEL STRING DESCRIPTORS
;	0850		NAME_BUFFER	: BBLOCKVECTOR[DEVMAX,NAMEBUF_LEN],	!VECTOR OF NAME BUFFERS
;	0851		PHYS_COUNT,				!NUMBER OF PHYSICAL DEVICES ALLOCATED
;	0852		PHYS_NAME	: BBLOCKVECTOR[DEVMAX,8],	!VECTOR OF PHYSICAL DEVICES ALLOCATED
;	0853		TEMP_CHANNEL;
;	0854	
;	0855	LOCAL
;	0856		DEVICE		: REF VECTOR[,BYTE],
;	0857		DEVICE_LEN,
;	0858		BLOCKSZ,					!BLOCK SIZE FOR THIS VOLUME
;	0859		DEVICE_NAME	: VECTOR [2],			!DEVICE NAME DESCRIPTOR
;	0860		IO_STATUS	: VECTOR [2],			!I/O STATUS BLOCK
;	0861		MVL_ENTRY	: REF BBLOCKVECTOR[LABMAX,MVL$K_LENGTH],
;	0862		NUMBER,						!NUMBER OF DRIVES SPECIFIED
;	0863		PROCESS_UIC,
;	0864		STATUS,
;	0865		UCB,
;	0866		UCBLIST		: REF VECTOR,			!VECTOR OF UCB IN RVT
;	0867		UNITS;! 
;	0868	! ENABLE HANDLER TO CLEAR VALID ON SECONDARY DEVICES
;	0869	!
;	0870	ENABLE ERROR_HANDLER;
;	0871							!NUMBER OF ALLOCATED UNITS
;	0872		
;	0873	! INITIALIZE PROTOTYPES
;	0874	CH$FILL(0,VCB$K_LENGTH,PROTO_VCB);
;	0875	CH$FILL(0,$BYTEOFFSET(RVT$L_UCBLST) + (4*DEVMAX),PROTO_RVT);
;	0876	CH$FILL(0,MVL$K_FIXLEN + (MVL$K_LENGTH * LABMAX),PROTO_MVL);
;	0877	
;	0878	! DETERMINE USER'S PRIVILEGE AND TAPE OWNER
;	0879	PRIVILEGE_MASK = CTL$GL_PHD[PHD$Q_PRIVMSK];		!PROCESS PRIVILEGE MASK
;	0880	PROCESS_UIC = KERNEL_CALL(GET_UIC);			!PROCESS UIC
;	0881	IF .MOUNT_OPTIONS[OPT_FOREIGN] OR .MOUNT_OPTIONS[OPT_NOLABEL]
;	0882	THEN
;	0883	    VOLUME_UIC = .PROCESS_UIC				!IF NOT FILES-11, USER PROCESS UIC
;	0884	ELSE
;	0885	    VOLUME_UIC	 = .TAPEOWNER_UIC;			!FILES-11 OWNER DECODED FROM TAPE
;	0886	
;	0887	! CHECK PRIVILEGES
;	0888	IF  (
;	0889	    .MOUNT_OPTIONS[OPT_OVR_PRO]		 		!GENERAL OVERRIDE PRIVILEGE OF SOME KIND
;	0890	    AND NOT (.PRIVILEGE_MASK[PRV$V_VOLPRO]	 	!USER MUST EITHER HAVE PRIVILEGE
;	0891		OR .VOLUME_UIC EQL .PROCESS_UIC)		!OR BE THE OWNER
;	0892	    )
;	0893	OR  (
;	0894	    (.MOUNT_OPTIONS[OPT_UNIQUEACP]			!MUST HAVE OPERATOR PRIVILEGE
;	0895	    OR .MOUNT_OPTIONS[OPT_SAMEACP]			!TO MONKEY WITH THE ACP
;	0896	    OR .MOUNT_OPTIONS[OPT_FILEACP]
;	0897	    )
;	0898	    AND NOT .PRIVILEGE_MASK[PRV$V_OPER] 
;	0899	    ) 
;	0900	THEN ERR_EXIT(SS$_NOPRIV);
;	0901	
;	0902	! IF NOT FILES-11 MOUNT OR MOUNT FOREIGN OR MOUNT NO LABELS THEN

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 4-2
; Digital Equipment Corporation
;
;	0903	! ONLY ONE UNIT CAN BE INVOLVED.  IF FILES-11 ALLOCATE
;	0904	! SECONDARY UNITS CHECKING THAT THE MAXIMUM NUMBER OF DEVICES  IS NOT EXCEEDED.
;	0905	IF .DEVICE_COUNT EQL 0
;	0906	OR ((NOT .MOUNT_OPTIONS[OPT_IS_FILES11]
;	0907	    OR .MOUNT_OPTIONS[OPT_FOREIGN]
;	0908	    OR .MOUNT_OPTIONS[OPT_NOLABEL])
;	0909	    AND (.DEVICE_COUNT NEQ 1 OR .DRIVE_COUNT[0] GTR 1))
;	0910	THEN ERR_EXIT(MOUN$_DEVICES);
;	0911	
;	0912	! CHECK LENGTH OF LABELS
;	0913	INCR J FROM 0 TO .LABEL_COUNT -1 DO
;	0914	    BEGIN
;	0915	    IF .LABEL_STRING[.J,LEN] GTRU VL1$S_VOLLBL THEN ERR_EXIT(SS$_MTLBLLONG);
;	0916	    END;
;	0917	! POSITION TAPE TO BEGINNING AGAIN
;	0918	STATUS = $QIOW(	CHAN = .CHANNEL,
;     P 0919			FUNC = IO$_REWIND,
;     P 0920			IOSB = IO_STATUS);
;	0921	
;	0922	IF .STATUS THEN STATUS = .IO_STATUS<0,16>;
;	0923	IF NOT .STATUS THEN ERR_EXIT(.STATUS);
;	0924	
;	0925	! INITIALIZE CHARACTERISTICS
;	0926	CHARACTERISTIC[0] = .(DEVICE_CHAR + 4);
;	0927	CHARACTERISTIC[1] = .(DEVICE_CHAR + 8);
;	0928	
;	0929	! DETERMINE BLOCK SIZE TO SET
;	0930	IF .MOUNT_OPTIONS[OPT_FOREIGN] THEN BLOCKSZ = 512
;	0931	ELSE BLOCKSZ = 2048;
;	0932	IF .MOUNT_OPTIONS[OPT_BLOCKSIZE] THEN
;	0933	
;	0934	! CHECK THAT BLOCKSIZE FOR MOUNTED LABELED TAPE IS NOT LESS THAN 18
;	0935	    BEGIN
;	0936	    IF NOT .MOUNT_OPTIONS[OPT_FOREIGN]
;	0937	    AND NOT .MOUNT_OPTIONS[OPT_NOLABEL]
;	0938	    AND .BLOCKSIZE LSS 18 THEN ERR_EXIT(MOUN$_ILLANSIBS);
;	0939	    BLOCKSZ = .BLOCKSIZE;
;	0940	    END;
;	0941	
;	0942	(CHARACTERISTIC[0])<16,16> = .BLOCKSZ<0,16>;
;	0943	!
;	0944	! check legal record size
;	0945	!
;	0946	IF .RECORDSZ GTRU .BLOCKSZ THEN ERR_EXIT(MOUN$_RECGTRBL);
;	0947	
;	0948	! NOW SET DENSITY
;	0949	IF .MOUNT_OPTIONS[OPT_DENSITY] THEN
;	0950	    BEGIN
;	0951	    IF .MOUNT_OPTIONS[OPT_DENS_800]
;	0952	    THEN DENSITY[MT$V_DENSITY] = MT$K_NRZI_800
;	0953	    ELSE DENSITY[MT$V_DENSITY] = MT$K_PE_1600;
;	0954	    END;
;	0955	
;	0956	STATUS = $QIOW(	CHAN = .CHANNEL,
;     P 0957			IOSB = IO_STATUS,

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 4-3
; Digital Equipment Corporation
;
;     P 0958			FUNC = IO$_SETMODE,
;     P 0959			P1 = CHARACTERISTIC);
;	0960	IF .STATUS THEN STATUS = .IO_STATUS<0,16>;
;	0961	IF NOT .STATUS THEN ERR_EXIT(.STATUS);
;	0962	
;	0963	! ALLOCATE SECONDARY UNITS TO VOLUME AND RECORD UCB IN RVT
;	0964	UCBLIST = PROTO_RVT[RVT$L_UCBLST];
;	0965	UNITS = 0;
;	0966	INCR DEVICES FROM 0 TO .DEVICE_COUNT-1
;	0967	DO
;	0968	    BEGIN
;	0969	    NUMBER = .DRIVE_COUNT[.DEVICES];
;	0970	    IF .NUMBER EQL 0 THEN NUMBER = 1;
;	0971	    INCR DRIVES FROM 0 TO .NUMBER-1
;	0972	    DO
;	0973		BEGIN
;	0974		IF .UNITS EQL DEVMAX THEN ERR_EXIT(MOUN$_DEVICES);
;	0975		IF .DEVICES EQL 0 AND .DRIVES EQL 0 THEN
;	0976		    BEGIN
;	0977		    UCB = KERNEL_CALL(GET_CHANNELUCB,.CHANNEL);
;	0978		    UCBLIST[.UNITS] = .UCB;
;	0979		    END
;	0980		ELSE
;	0981		    BEGIN
;	0982	
;	0983	! TRANSLATE INPUT STRING AND ALLOCATE IT
;	0984		    DEVICE_NAME[0] = NAMEBUF_LEN;
;	0985		    DEVICE_NAME[1] = NAME_BUFFER[.UNITS,STADR];
;	0986		    TRAN_LOGNAME(DEVICE_STRING[.DEVICES,LEN],DEVICE_NAME[0]);
;	0987	
;	0988	! CHECK THAT DEVICE IS GENERIC IF NOT FIRST ONE FOR THIS DEVICE SPEC
;	0989		    IF .DRIVES NEQ 0 THEN
;	0990			BEGIN
;	0991			DEVICE = .DEVICE_NAME[1];
;	0992			DEVICE_LEN = .DEVICE_NAME[0];
;	0993			IF .DEVICE_LEN EQL 0 THEN ERR_EXIT(MOUN$_NOTGENDEV);
;	0994			IF .DEVICE[.DEVICE_LEN-1] EQL ':'
;	0995			THEN DEVICE_LEN = .DEVICE_LEN - 1;
;	0996			IF (.DEVICE[.DEVICE_LEN-1] GEQ '0'
;	0997			AND .DEVICE[.DEVICE_LEN -1] LEQ '9' )
;	0998			THEN ERR_EXIT(MOUN$_NOTGENDEV);
;	0999			END;
;	1000	
;	1001	! NOW DO  ALLOCATE WHICH MAY BE GENERIC
;	1002		    PHYS_NAME[.UNITS,LEN] = NAMEBUF_LEN;
;	1003		    PHYS_NAME[.UNITS,ADDR] = NAME_BUFFER[.UNITS,STADR];
;	1004	
;	1005		    STATUS =
;	1006			$ALLOC(	DEVNAM = DEVICE_NAME[0],
;     P 1007				PHYLEN = PHYS_NAME[.UNITS,LEN],
;     P 1008				PHYBUF = PHYS_NAME[.UNITS,LEN]);
;	1009		    IF NOT .STATUS THEN ERR_EXIT(.STATUS);
;	1010		    PHYS_COUNT = .PHYS_COUNT + 1;
;	1011		    IF .STATUS NEQ SS$_DEVALRALLOC
;	1012		    THEN CLEANUP_ALLOC[.UNITS] = 1;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 4-4
; Digital Equipment Corporation
;
;	1013		    TEMP_CHANNEL = 0;
;	1014		    STATUS = $ASSIGN(	DEVNAM = PHYS_NAME[.UNITS,LEN],
;     P 1015					CHAN = TEMP_CHANNEL);
;	1016		    IF NOT .STATUS THEN ERR_EXIT(.STATUS);
;	1017		    CLEANUP_FLAGS[CLF_DEASSTEMP] = 1;
;	1018		    UCB = KERNEL_CALL(GET_CHANNELUCB,.TEMP_CHANNEL);
;	1019		    $DASSGN(	CHAN = .TEMP_CHANNEL);
;	1020		    CLEANUP_FLAGS[CLF_DEASSTEMP] = 0;
;	1021	
;	1022	! CHECK THAT DUPLICATE DEVICE HAS NOT BEEN SPECIFIED
;	1023		    INCR J FROM 0 TO .UNITS - 1 DO
;	1024			BEGIN
;	1025			IF .UCBLIST[.J] EQL .UCB THEN ERR_EXIT(MOUN$_DUPDEVSPC);
;	1026			END;
;	1027		    UCBLIST[.UNITS] = .UCB;
;	1028		    END;				!END OF IF PRIMARY DEVICE
;	1029		UNITS = .UNITS + 1;
;	1030		END;					!END OF DRIVES DO_LOOP
;	1031	    END;					!END OF DEVICES DO_LOOP
;	1032	PROTO_RVT[RVT$B_NVOLS] = .UNITS;		!NUMBER OF UNITS AVAILABLE TO VOLUME SET
;	1033	
;	1034	! NOW FILL IN VCB PROTOTYPE
;	1035	PROTO_VCB[VCB$W_TRANS] = 1;
;	1036	PROTO_VCB[VCB$W_MCOUNT] = 1;
;	1037	PROTO_VCB[VCB$W_RECORDSZ] = .RECORDSZ;
;	1038	
;	1039	! IF FIES-11 USE LABEL IN VOL1 ELSE USE USER'S LABEL
;	1040	IF .MOUNT_OPTIONS[OPT_IS_FILES11] THEN
;	1041	    CH$COPY(VL1$S_VOLLBL,VOL1[VL1$T_VOLLBL],' ',VCB$S_VOLNAME,PROTO_VCB[VCB$T_VOLNAME])
;	1042	ELSE
;	1043	    CH$COPY(.LABEL_STRING[0,LEN],.LABEL_STRING[0,ADDR],' ',VCB$S_VOLNAME,PROTO_VCB[VCB$T_VOLNAME]);
;	1044	
;	1045	! IF FILES-11 MOUNT, FILL IN MVL + VCB
;	1046	IF NOT .MOUNT_OPTIONS[OPT_FOREIGN]
;	1047	AND NOT .MOUNT_OPTIONS[OPT_NOLABEL] THEN
;	1048	    BEGIN
;	1049	
;	1050	! NOW FILL MVL IN WITH LABELS
;	1051	    IF .LABEL_COUNT EQL 0 THEN LABEL_COUNT = 1;
;	1052	    PROTO_MVL[MVL$B_NVOLS] = .LABEL_COUNT;
;	1053	    MVL_ENTRY = PROTO_MVL+MVL$K_FIXLEN;
;	1054	    MVL_ENTRY[0,MVL$V_MOUNTED] = 1;		!FIRST VOLUME MOUNTED
;	1055	    INCR I FROM 0 TO .LABEL_COUNT-1
;	1056	    DO	
;	1057		BEGIN
;	1058		IF .I EQL 0
;	1059		THEN CH$COPY(VL1$S_VOLLBL,VOL1[VL1$T_VOLLBL],' ',MVL$S_VOLLBL,MVL_ENTRY[.I,MVL$T_VOLLBL])
;	1060		ELSE
;	1061		    BEGIN
;	1062		    IF .I LSS .PHYS_COUNT THEN
;	1063			BEGIN
;	1064			STATUS = $ASSIGN( DEVNAM = PHYS_NAME[.I,LEN],
;     P 1065					  CHAN	 = TEMP_CHANNEL);
;	1066			IF NOT .STATUS THEN ERR_EXIT(.STATUS);
;	1067			CLEANUP_FLAGS[CLF_DEASSTEMP] = 1;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 4-5
; Digital Equipment Corporation
;
;	1068			KERNEL_CALL(SET_VALID,.TEMP_CHANNEL);
;	1069			STATUS = $QIOW(	CHAN = .TEMP_CHANNEL,
;     P 1070					FUNC = IO$_REWIND,
;     P 1071					IOSB = IO_STATUS);
;	1072			IF .STATUS AND .IO_STATUS<0,16> THEN
;	1073			    BEGIN
;	1074			    STATUS = $QIOW(	CHAN = .TEMP_CHANNEL,
;     P 1075						FUNC = IO$_READLBLK,
;     P 1076						IOSB = IO_STATUS,
;     P 1077						P1   = VOL1,
;     P 1078						P2   = 80);
;	1079			    IF .STATUS THEN STATUS = .IO_STATUS<0,16>;
;	1080			    IF .STATUS OR .STATUS EQL SS$_DATAOVERUN THEN
;	1081				BEGIN
;	1082				IF CH$EQL(.LABEL_STRING[.I,LEN], .LABEL_STRING[.I,ADDR],
;	1083					VL1$S_VOLLBL,VOL1[VL1$T_VOLLBL],' ') THEN
;	1084				    BEGIN
;	1085				    MVL_ENTRY[.I,MVL$V_MOUNTED] = 1;
;	1086				    MVL_ENTRY[.I,MVL$B_RVN] = .I;
;	1087				    END;
;	1088				END;
;	1089			    END;
;	1090			$DASSGN	( CHAN = .TEMP_CHANNEL);
;	1091			CLEANUP_FLAGS[CLF_DEASSTEMP] = 0;
;	1092			END;
;	1093			
;	1094		    CH$COPY(.LABEL_STRING[.I,LEN],.LABEL_STRING[.I,ADDR],' ',
;	1095			MVL$S_VOLLBL,MVL_ENTRY[.I,MVL$T_VOLLBL]);
;	1096		    END;
;	1097	    END;
;	1098	
;	1099	    PROTO_VCB[VCB$V_OVRACC] = .MOUNT_OPTIONS[OPT_OVR_ACC];
;	1100	    PROTO_VCB[VCB$V_OVREXP] = .MOUNT_OPTIONS[OPT_OVR_EXP];
;	1101	    PROTO_VCB[VCB$V_OVRLBL] = .MOUNT_OPTIONS[OPT_OVR_ID];
;	1102	    PROTO_VCB[VCB$V_OVRSETID] = .MOUNT_OPTIONS[OPT_OVR_SETID];
;	1103	    END;
;	1104	STATUS = KERNEL_CALL(MAKE_TAPE_MOUNT);
;	1105		
;	1106	IF NOT .STATUS THEN ERR_EXIT(.STATUS);
;	1107	!
;	1108	! PRINT INFORMATION MESSAGE STATING WHICH VOLUMES ARE MOUNTED ON WHICH UNITS
;	1109	!
;	1110	IF NOT .MOUNT_OPTIONS[OPT_FOREIGN] AND NOT .MOUNT_OPTIONS[OPT_NOLABEL] THEN
;	1111	    BEGIN
;	1112	    LOCAL LADDR : REF VECTOR[,BYTE];
;	1113	    LOCAL SIZE;
;	1114	    MVL_ENTRY = PROTO_MVL+MVL$K_FIXLEN;
;	1115	    INCR I FROM 0 TO .PHYS_COUNT-1 DO
;	1116		BEGIN
;	1117		INCR J FROM 0 TO .PROTO_MVL[MVL$B_NVOLS] -1 DO
;	1118		    BEGIN
;	1119		    IF .MVL_ENTRY[.J,MVL$B_RVN] EQL .I
;	1120		    AND .MVL_ENTRY[.J,MVL$V_MOUNTED]
;	1121		    THEN
;	1122			BEGIN

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 4-6
; Digital Equipment Corporation
;
;	1123			LADDR = MVL_ENTRY[.J,MVL$T_VOLLBL];
;	1124			DECR K FROM MVL$S_VOLLBL TO 0 DO
;	1125			    BEGIN
;	1126			    SIZE = .K;
;	1127			    IF .K EQL 0 THEN EXITLOOP;
;	1128			    IF .LADDR[.K-1] NEQ ' ' THEN EXITLOOP;
;	1129			    END;
;	1130			ERR_MESSAGE(MOUN$_MOUNTED,3,.SIZE,MVL_ENTRY[.J,MVL$T_VOLLBL],
;     P 1131		    	    PHYS_NAME[.I,LEN]);
;	1132			END;
;	1133		    END;
;	1134		END;
;	1135	    END
;	1136	ELSE
;	1137	    BEGIN
;	1138	    LOCAL LADDR	: REF VECTOR[,BYTE];
;	1139	    LOCAL SIZE;
;	1140	    LADDR = PROTO_VCB[VCB$T_VOLNAME];
;	1141	    DECR K FROM VCB$S_VOLNAME TO 0 DO
;	1142		BEGIN
;	1143		SIZE = .K;
;	1144		IF .K EQL 0 THEN EXITLOOP;
;	1145		IF .LADDR[.K-1] NEQ ' ' THEN EXITLOOP;
;	1146		END;
;	1147	    ERR_MESSAGE(MOUN$_MOUNTED,3,.SIZE,PROTO_VCB[VCB$T_VOLNAME],PHYS_NAME[0,LEN]);
;	1148	    END;
;	1149	END;



							    .GLOBL  RECORDSZ, BLOCKSIZE, CTL$GL_PHD, DEVICE_COUNT
							    .GLOBL  DEVICE_STRING, DRIVE_COUNT, LABEL_COUNT, LABEL_STRING
							    .GLOBL  NAME_BUFFER, PHYS_COUNT, PHYS_NAME, TEMP_CHANNEL
							    .GLOBL  SYS$ALLOC, SYS$ASSIGN, SYS$DASSGN

					 0FFC 0022F 	    .ENTRY  MOUNT_TAPE, Save R2,R3,R4,R5,R6,R7,R8,R9,R10,R11	      ; 0793
		         5E	       18  C2 00231 	    SUBL2   #24, SP						      ;
		         6D 00000592   EF  DE 00234 	    MOVAL   71$, (FP)						      ; 0829
	   00	         6E	       00  2C 0023B 	    MOVC5   #0, (SP), #0, #84, PROTO_VCB			      ; 0874
		  0000'  CF	0054   8F     0023F									      ;
	   00	         6E	       00  2C 00245 	    MOVC5   #0, (SP), #0, #76, PROTO_RVT			      ; 0875
		  0000'  CF	004C   8F     00249									      ;
	   00	         6E	       00  2C 0024F 	    MOVC5   #0, (SP), #0, #140, PROTO_MVL			      ; 0876
		  0000'  CF	008C   8F     00253									      ;
		  0000'  CF 00000000G  9F  D0 00259 	    MOVL    @#CTL$GL_PHD, PRIVILEGE_MASK			      ; 0879
				       7E  D4 00262 	    CLRL    -(SP)						      ; 0880
				       5E  DD 00264 	    PUSHL   SP							      ;
				0000V  CF  9F 00266 	    PUSHAB  GET_UIC						      ;
	      00000000G  9F	       03  FB 0026A 	    CALLS   #3, @#SYS$CMKRNL					      ;
	   06	  0000G  CF	       03  E0 00271 	    BBS     #3, MOUNT_OPTIONS+1, 1$				      ; 0881
	   07	  0000G  CF	       04  E1 00277 	    BBC     #4, MOUNT_OPTIONS+1, 2$				      ;
		  0000'  CF	       50  D0 0027D 1$:     MOVL    PROCESS_UIC, VOLUME_UIC				      ; 0883
				       07  11 00282 	    BRB     3$							      ; 0881
		  0000'  CF	0000'  CF  D0 00284 2$:     MOVL    TAPEOWNER_UIC, VOLUME_UIC				      ; 0885
	   0D	  0000G  CF	       20  E1 0028B 3$:     BBC     #32, MOUNT_OPTIONS, 4$				      ; 0889

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 4-7
; Digital Equipment Corporation
;
	   07	  0000'  DF	       15  E0 00291 	    BBS     #21, @PRIVILEGE_MASK, 4$				      ; 0890
		         50	0000'  CF  D1 00297 	    CMPL    VOLUME_UIC, PROCESS_UIC				      ; 0891
				       18  12 0029C 	    BNEQ    6$							      ;
	   0C	  0000G  CF	       02  E0 0029E 4$:     BBS     #2, MOUNT_OPTIONS+3, 5$				      ; 0894
	   06	  0000G  CF	       03  E0 002A4 	    BBS     #3, MOUNT_OPTIONS+3, 5$				      ; 0895
	   0F	  0000G  CF	       04  E1 002AA 	    BBC     #4, MOUNT_OPTIONS+3, 7$				      ; 0896
	   09	  0000'  DF	       12  E0 002B0 5$:     BBS     #18, @PRIVILEGE_MASK, 7$				      ; 0898
				       24  DD 002B6 6$:     PUSHL   #36							      ; 0900
	      00000000G  00	       01  FB 002B8 	    CALLS   #1, LIB$STOP					      ;
		         50	0000G  CF  D0 002BF 7$:     MOVL    DEVICE_COUNT, R0					      ; 0905
				       1E  13 002C4 	    BEQL    9$							      ;
	   0C	  0000G  CF	       21  E1 002C6 	    BBC     #33, MOUNT_OPTIONS, 8$				      ; 0906
	   06	  0000G  CF	       03  E0 002CC 	    BBS     #3, MOUNT_OPTIONS+1, 8$				      ; 0907
	   19	  0000G  CF	       04  E1 002D2 	    BBC     #4, MOUNT_OPTIONS+1, 10$				      ; 0908
		         01	       50  D1 002D8 8$:     CMPL    R0, #1						      ; 0909
				       07  12 002DB 	    BNEQ    9$							      ;
		         01	0000G  CF  D1 002DD 	    CMPL    DRIVE_COUNT, #1					      ;
				       0D  15 002E2 	    BLEQ    10$							      ;
			    00728174   8F  DD 002E4 9$:     PUSHL   #7504244						      ; 0910
	      00000000G  00	       01  FB 002EA 	    CALLS   #1, LIB$STOP					      ;
		         53	0000G  CF  D0 002F1 10$:    MOVL    LABEL_COUNT, R3					      ; 0913
		         52	       01  CE 002F6 	    MNEGL   #1, J						      ;
				       16  11 002F9 	    BRB     12$							      ;
				0000GCF42  7F 002FB 11$:    PUSHAQ  LABEL_STRING[J]					      ; 0915
		         06	       9E  D1 00300 	    CMPL    @(SP)+, #6						      ;
				       0C  1B 00303 	    BLEQU   12$							      ;
		         7E	0304   8F  3C 00305 	    MOVZWL  #772, -(SP)						      ;
	      00000000G  00	       01  FB 0030A 	    CALLS   #1, LIB$STOP					      ;
	   E6	         52	       53  F2 00311 12$:    AOBLSS  R3, J, 11$						      ; 0913
				       7E  7C 00315 	    CLRQ    -(SP)						      ; 0920
				       7E  7C 00317 	    CLRQ    -(SP)						      ;
				       7E  7C 00319 	    CLRQ    -(SP)						      ;
				       7E  7C 0031B 	    CLRQ    -(SP)						      ;
				  28   AE  9F 0031D 	    PUSHAB  IO_STATUS						      ;
				       24  DD 00320 	    PUSHL   #36							      ;
				0000G  CF  DD 00322 	    PUSHL   CHANNEL						      ;
				       7E  D4 00326 	    CLRL    -(SP)						      ;
	      00000000G  9F	       0C  FB 00328 	    CALLS   #12, @#SYS$QIOW					      ;
		         58	       50  D0 0032F 	    MOVL    R0, STATUS						      ;
		         07	       58  E9 00332 	    BLBC    STATUS, 13$						      ; 0922
		         58	  08   AE  3C 00335 	    MOVZWL  IO_STATUS, STATUS					      ;
		         09	       58  E8 00339 	    BLBS    STATUS, 14$						      ; 0923
				       58  DD 0033C 13$:    PUSHL   STATUS						      ;
	      00000000G  00	       01  FB 0033E 	    CALLS   #1, LIB$STOP					      ;
		  0000'  CF	0000G  CF  7D 00345 14$:    MOVQ    DEVICE_CHAR+4, CHARACTERISTIC			      ; 0926
	   07	  0000G  CF	       03  E1 0034C 	    BBC     #3, MOUNT_OPTIONS+1, 15$				      ; 0930
		         52	0200   8F  3C 00352 	    MOVZWL  #512, BLOCKSZ					      ;
				       05  11 00357 	    BRB     16$							      ;
		         52	0800   8F  3C 00359 15$:    MOVZWL  #2048, BLOCKSZ					      ; 0931
		         25	0000G  CF  E9 0035E 16$:    BLBC    MOUNT_OPTIONS+2, 18$				      ; 0932
	   1A	  0000G  CF	       03  E0 00363 	    BBS     #3, MOUNT_OPTIONS+1, 17$				      ; 0936
	   14	  0000G  CF	       04  E0 00369 	    BBS     #4, MOUNT_OPTIONS+1, 17$				      ; 0937
		         12	0000G  CF  D1 0036F 	    CMPL    BLOCKSIZE, #18					      ; 0938
				       0D  18 00374 	    BGEQ    17$							      ;
			    007280DC   8F  DD 00376 	    PUSHL   #7504092						      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 4-8
; Digital Equipment Corporation
;
	      00000000G  00	       01  FB 0037C 	    CALLS   #1, LIB$STOP					      ;
		         52	0000G  CF  D0 00383 17$:    MOVL    BLOCKSIZE, BLOCKSZ					      ; 0939
		  0000'  CF	       52  B0 00388 18$:    MOVW    BLOCKSZ, CHARACTERISTIC+2				      ; 0942
		         52	0000G  CF  D1 0038D 	    CMPL    RECORDSZ, BLOCKSZ					      ; 0946
				       0D  1B 00392 	    BLEQU   19$							      ;
			    0072813C   8F  DD 00394 	    PUSHL   #7504188						      ;
	      00000000G  00	       01  FB 0039A 	    CALLS   #1, LIB$STOP					      ;
		         16	0000G  CF  E9 003A1 19$:    BLBC    MOUNT_OPTIONS, 21$					      ; 0949
	   09	  0000G  CF	       01  E1 003A6 	    BBC     #1, MOUNT_OPTIONS, 20$				      ; 0951
	   05	         00	       03  F0 003AC 	    INSV    #3, #0, #5, DENSITY+1				      ; 0952
				0000'  CF     003B0									      ;
				       07  11 003B3 	    BRB     21$							      ; 0951
	   05	         00	       04  F0 003B5 20$:    INSV    #4, #0, #5, DENSITY+1				      ; 0953
				0000'  CF     003B9									      ;
				       7E  7C 003BC 21$:    CLRQ    -(SP)						      ; 0959
				       7E  7C 003BE 	    CLRQ    -(SP)						      ;
				       7E  D4 003C0 	    CLRL    -(SP)						      ;
				0000'  CF  9F 003C2 	    PUSHAB  CHARACTERISTIC					      ;
				       7E  7C 003C6 	    CLRQ    -(SP)						      ;
				  28   AE  9F 003C8 	    PUSHAB  IO_STATUS						      ;
				       23  DD 003CB 	    PUSHL   #35							      ;
				0000G  CF  DD 003CD 	    PUSHL   CHANNEL						      ;
				       7E  D4 003D1 	    CLRL    -(SP)						      ;
	      00000000G  9F	       0C  FB 003D3 	    CALLS   #12, @#SYS$QIOW					      ;
		         58	       50  D0 003DA 	    MOVL    R0, STATUS						      ;
		         07	       58  E9 003DD 	    BLBC    STATUS, 22$						      ; 0960
		         58	  08   AE  3C 003E0 	    MOVZWL  IO_STATUS, STATUS					      ;
		         09	       58  E8 003E4 	    BLBS    STATUS, 23$						      ; 0961
				       58  DD 003E7 22$:    PUSHL   STATUS						      ;
	      00000000G  00	       01  FB 003E9 	    CALLS   #1, LIB$STOP					      ;
		         5B	0000'  CF  9E 003F0 23$:    MOVAB   PROTO_RVT+12, UCBLIST				      ; 0964
				       52  D4 003F5 	    CLRL    UNITS						      ; 0965
		    04   AE	0000G  CF  D0 003F7 	    MOVL    DEVICE_COUNT, 4(SP)					      ; 0966
		         54	       01  CE 003FD 	    MNEGL   #1, DEVICES						      ;
				     015E  31 00400 	    BRW     40$							      ;
		         5A	0000GCF44  D0 00403 24$:    MOVL    DRIVE_COUNT[DEVICES], NUMBER			      ; 0969
				       03  12 00409 	    BNEQ    25$							      ; 0970
		         5A	       01  D0 0040B 	    MOVL    #1, NUMBER						      ;
		         59	       01  CE 0040E 25$:    MNEGL   #1, DRIVES						      ; 0971
				     0144  31 00411 	    BRW     38$							      ;
		         10	       52  D1 00414 26$:    CMPL    UNITS, #16						      ; 0974
				       0D  12 00417 	    BNEQ    27$							      ;
			    00728174   8F  DD 00419 	    PUSHL   #7504244						      ;
	      00000000G  00	       01  FB 0041F 	    CALLS   #1, LIB$STOP					      ;
				       54  D5 00426 27$:    TSTL    DEVICES						      ; 0975
				       1D  12 00428 	    BNEQ    28$							      ;
				       59  D5 0042A 	    TSTL    DRIVES						      ;
				       19  12 0042C 	    BNEQ    28$							      ;
				0000G  CF  DD 0042E 	    PUSHL   CHANNEL						      ; 0977
				       01  DD 00432 	    PUSHL   #1							      ;
				       5E  DD 00434 	    PUSHL   SP							      ;
				0000G  CF  9F 00436 	    PUSHAB  GET_CHANNELUCB					      ;
	      00000000G  9F	       04  FB 0043A 	    CALLS   #4, @#SYS$CMKRNL					      ;
		         57	       50  D0 00441 	    MOVL    R0, UCB						      ;
				     010B  31 00444 	    BRW     37$							      ; 0978

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 4-9
; Digital Equipment Corporation
;
		    10   AE	       20  D0 00447 28$:    MOVL    #32, DEVICE_NAME					      ; 0984
	   50	         52	       05  78 0044B 	    ASHL    #5, UNITS, R0					      ; 0985
		         6E	0000GCF40  9E 0044F 	    MOVAB   NAME_BUFFER[R0], (SP)				      ;
		    14   AE	       6E  D0 00455 	    MOVL    (SP), DEVICE_NAME+4					      ;
				  10   AE  9F 00459 	    PUSHAB  DEVICE_NAME						      ; 0986
				0000GCF44  7F 0045C 	    PUSHAQ  DEVICE_STRING[DEVICES]				      ;
		  0000G  CF	       02  FB 00461 	    CALLS   #2, TRAN_LOGNAME					      ;
				       59  D5 00466 	    TSTL    DRIVES						      ; 0989
				       3B  13 00468 	    BEQL    31$							      ;
		         53	  14   AE  D0 0046A 	    MOVL    DEVICE_NAME+4, DEVICE				      ; 0991
		         56	  10   AE  D0 0046E 	    MOVL    DEVICE_NAME, DEVICE_LEN				      ; 0992
				       0D  12 00472 	    BNEQ    29$							      ; 0993
			    007280CC   8F  DD 00474 	    PUSHL   #7504076						      ;
	      00000000G  00	       01  FB 0047A 	    CALLS   #1, LIB$STOP					      ;
		         3A	  FF A643  91 00481 29$:    CMPB    -1(DEVICE_LEN)[DEVICE], #58				      ; 0994
				       02  12 00486 	    BNEQ    30$							      ;
				       56  D7 00488 	    DECL    DEVICE_LEN						      ; 0995
		         30	  FF A643  91 0048A 30$:    CMPB    -1(DEVICE_LEN)[DEVICE], #48				      ; 0996
				       14  1F 0048F 	    BLSSU   31$							      ;
		         39	  FF A643  91 00491 	    CMPB    -1(DEVICE_LEN)[DEVICE], #57				      ; 0997
				       0D  1A 00496 	    BGTRU   31$							      ;
			    007280CC   8F  DD 00498 	    PUSHL   #7504076						      ; 0998
	      00000000G  00	       01  FB 0049E 	    CALLS   #1, LIB$STOP					      ;
		         55	0000GCF42  7E 004A5 31$:    MOVAQ   PHYS_NAME[UNITS], R5				      ; 1002
		         65	       20  D0 004AB 	    MOVL    #32, (R5)						      ;
				0000GCF42  7F 004AE 	    PUSHAQ  PHYS_NAME+4[UNITS]					      ; 1003
		         9E	  04   AE  D0 004B3 	    MOVL    4(SP), @(SP)+					      ;
				       7E  D4 004B7 	    CLRL    -(SP)						      ; 1008
				       55  DD 004B9 	    PUSHL   R5							      ;
				       55  DD 004BB 	    PUSHL   R5							      ;
				  1C   AE  9F 004BD 	    PUSHAB  DEVICE_NAME						      ;
	      00000000G  9F	       04  FB 004C0 	    CALLS   #4, @#SYS$ALLOC					      ;
		         58	       50  D0 004C7 	    MOVL    R0, STATUS						      ;
		         09	       58  E8 004CA 	    BLBS    STATUS, 32$						      ; 1009
				       58  DD 004CD 	    PUSHL   STATUS						      ;
	      00000000G  00	       01  FB 004CF 	    CALLS   #1, LIB$STOP					      ;
				0000G  CF  D6 004D6 32$:    INCL    PHYS_COUNT						      ; 1010
	      00000641   8F	       58  D1 004DA 	    CMPL    STATUS, #1601					      ; 1011
				       06  13 004E1 	    BEQL    33$							      ;
	   00	  0000G  CF	       52  E2 004E3 	    BBSS    UNITS, CLEANUP_ALLOC, 33$				      ; 1012
				0000G  CF  D4 004E9 33$:    CLRL    TEMP_CHANNEL					      ; 1013
				       7E  7C 004ED 	    CLRQ    -(SP)						      ; 1015
				0000G  CF  9F 004EF 	    PUSHAB  TEMP_CHANNEL					      ;
				       55  DD 004F3 	    PUSHL   R5							      ;
	      00000000G  9F	       04  FB 004F5 	    CALLS   #4, @#SYS$ASSIGN					      ;
		         58	       50  D0 004FC 	    MOVL    R0, STATUS						      ;
		         09	       58  E8 004FF 	    BLBS    STATUS, 34$						      ; 1016
				       58  DD 00502 	    PUSHL   STATUS						      ;
	      00000000G  00	       01  FB 00504 	    CALLS   #1, LIB$STOP					      ;
		  0000G  CF	       10  88 0050B 34$:    BISB2   #16, CLEANUP_FLAGS					      ; 1017
				0000G  CF  DD 00510 	    PUSHL   TEMP_CHANNEL					      ; 1018
				       01  DD 00514 	    PUSHL   #1							      ;
				       5E  DD 00516 	    PUSHL   SP							      ;
				0000G  CF  9F 00518 	    PUSHAB  GET_CHANNELUCB					      ;
	      00000000G  9F	       04  FB 0051C 	    CALLS   #4, @#SYS$CMKRNL					      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 4-10
; Digital Equipment Corporation
;
		         57	       50  D0 00523 	    MOVL    R0, UCB						      ;
				0000G  CF  DD 00526 	    PUSHL   TEMP_CHANNEL					      ; 1019
	      00000000G  9F	       01  FB 0052A 	    CALLS   #1, @#SYS$DASSGN					      ;
		  0000G  CF	       10  8A 00531 	    BICB2   #16, CLEANUP_FLAGS					      ; 1020
		         55	       01  CE 00536 	    MNEGL   #1, J						      ; 1023
				       13  11 00539 	    BRB     36$							      ;
		         57	     6B45  D1 0053B 35$:    CMPL    (UCBLIST)[J], UCB					      ; 1025
				       0D  12 0053F 	    BNEQ    36$							      ;
			    007280D4   8F  DD 00541 	    PUSHL   #7504084						      ;
	      00000000G  00	       01  FB 00547 	    CALLS   #1, LIB$STOP					      ;
	   E9	         55	       52  F2 0054E 36$:    AOBLSS  UNITS, J, 35$					      ; 1023
		       6B42	       57  D0 00552 37$:    MOVL    UCB, (UCBLIST)[UNITS]				      ; 1027
				       52  D6 00556 	    INCL    UNITS						      ; 1029
	   02	         59	       5A  F2 00558 38$:    AOBLSS  NUMBER, DRIVES, 39$					      ; 0971
				       03  11 0055C 	    BRB     40$							      ;
				     FEB3  31 0055E 39$:    BRW     26$							      ;
	   02	         54	  04   AE  F2 00561 40$:    AOBLSS  4(SP), DEVICES, 41$					      ; 0966
				       03  11 00566 	    BRB     42$							      ;
				     FE98  31 00568 41$:    BRW     24$							      ;
		  0000'  CF	       52  90 0056B 42$:    MOVB    UNITS, PROTO_RVT+11					      ; 1032
		  0000'  CF	       01  B0 00570 	    MOVW    #1, PROTO_VCB+12					      ; 1035
		  0000'  CF	       01  B0 00575 	    MOVW    #1, PROTO_VCB+76					      ; 1036
		  0000'  CF	0000G  CF  B0 0057A 	    MOVW    RECORDSZ, PROTO_VCB+80				      ; 1037
	   0C	  0000G  CF	       21  E1 00581 	    BBC     #33, MOUNT_OPTIONS, 43$				      ; 1040
	   20	  0000G  CF	       06  2C 00587 	    MOVC5   #6, VOL1+4, #32, #12, PROTO_VCB+20			      ; 1041
		  0000'  CF	       0C     0058D									      ;
				       0C  11 00591 	    BRB     44$							      ; 1040
	   20	  0000G  DF	0000G  CF  2C 00593 43$:    MOVC5   LABEL_STRING, @LABEL_STRING+4, #32, #12, PROTO_VCB+20     ; 1043
		  0000'  CF	       0C     0059B									      ;
	   03	  0000G  CF	       03  E1 0059F 44$:    BBC     #3, MOUNT_OPTIONS+1, 46$				      ; 1046
				     0164  31 005A5 45$:    BRW     60$							      ;
	   F7	  0000G  CF	       04  E0 005A8 46$:    BBS     #4, MOUNT_OPTIONS+1, 45$				      ; 1047
				0000G  CF  D5 005AE 	    TSTL    LABEL_COUNT						      ; 1051
				       05  12 005B2 	    BNEQ    47$							      ;
		  0000G  CF	       01  D0 005B4 	    MOVL    #1, LABEL_COUNT					      ;
		  0000'  CF	0000G  CF  90 005B9 47$:    MOVB    LABEL_COUNT, PROTO_MVL+11				      ; 1052
		         57	0000'  CF  9E 005C0 	    MOVAB   PROTO_MVL+12, MVL_ENTRY				      ; 1053
		    07   A7	       01  88 005C5 	    BISB2   #1, 7(MVL_ENTRY)					      ; 1054
		         59	0000G  CF  D0 005C9 	    MOVL    LABEL_COUNT, R9					      ; 1055
		         56	       01  CE 005CE 	    MNEGL   #1, I						      ;
				       0D  11 005D1 	    BRB     49$							      ;
				       56  D5 005D3 48$:    TSTL    I							      ; 1058
				       0C  12 005D5 	    BNEQ    50$							      ;
				     6746  7F 005D7 	    PUSHAQ  (MVL_ENTRY)[I]					      ; 1059
	   9E	  0000G  CF	       06  28 005DA 	    MOVC3   #6, VOL1+4, @(SP)+					      ;
				     00E8  31 005E0 49$:    BRW     57$							      ; 1058
		  0000G  CF	       56  D1 005E3 50$:    CMPL    I, PHYS_COUNT					      ; 1062
				       03  19 005E8 	    BLSS    51$							      ;
				     00C8  31 005EA 	    BRW     56$							      ;
				       7E  7C 005ED 51$:    CLRQ    -(SP)						      ; 1065
				0000G  CF  9F 005EF 	    PUSHAB  TEMP_CHANNEL					      ;
				0000GCF46  7F 005F3 	    PUSHAQ  PHYS_NAME[I]					      ;
	      00000000G  9F	       04  FB 005F8 	    CALLS   #4, @#SYS$ASSIGN					      ;
		         58	       50  D0 005FF 	    MOVL    R0, STATUS						      ;
		         09	       58  E8 00602 	    BLBS    STATUS, 52$						      ; 1066

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 4-11
; Digital Equipment Corporation
;
				       58  DD 00605 	    PUSHL   STATUS						      ;
	      00000000G  00	       01  FB 00607 	    CALLS   #1, LIB$STOP					      ;
		  0000G  CF	       10  88 0060E 52$:    BISB2   #16, CLEANUP_FLAGS					      ; 1067
				0000G  CF  DD 00613 	    PUSHL   TEMP_CHANNEL					      ; 1068
				       01  DD 00617 	    PUSHL   #1							      ;
				       5E  DD 00619 	    PUSHL   SP							      ;
				0000V  CF  9F 0061B 	    PUSHAB  SET_VALID						      ;
	      00000000G  9F	       04  FB 0061F 	    CALLS   #4, @#SYS$CMKRNL					      ;
				       7E  7C 00626 	    CLRQ    -(SP)						      ; 1071
				       7E  7C 00628 	    CLRQ    -(SP)						      ;
				       7E  7C 0062A 	    CLRQ    -(SP)						      ;
				       7E  7C 0062C 	    CLRQ    -(SP)						      ;
				  28   AE  9F 0062E 	    PUSHAB  IO_STATUS						      ;
				       24  DD 00631 	    PUSHL   #36							      ;
				0000G  CF  DD 00633 	    PUSHL   TEMP_CHANNEL					      ;
				       7E  D4 00637 	    CLRL    -(SP)						      ;
	      00000000G  9F	       0C  FB 00639 	    CALLS   #12, @#SYS$QIOW					      ;
		         58	       50  D0 00640 	    MOVL    R0, STATUS						      ;
		         5F	       58  E9 00643 	    BLBC    STATUS, 55$						      ; 1072
		         5B	  08   AE  E9 00646 	    BLBC    IO_STATUS, 55$					      ;
				       7E  7C 0064A 	    CLRQ    -(SP)						      ; 1078
				       7E  7C 0064C 	    CLRQ    -(SP)						      ;
		         7E	  50   8F  9A 0064E 	    MOVZBL  #80, -(SP)						      ;
				0000G  CF  9F 00652 	    PUSHAB  VOL1						      ;
				       7E  7C 00656 	    CLRQ    -(SP)						      ;
				  28   AE  9F 00658 	    PUSHAB  IO_STATUS						      ;
				       21  DD 0065B 	    PUSHL   #33							      ;
				0000G  CF  DD 0065D 	    PUSHL   TEMP_CHANNEL					      ;
				       7E  D4 00661 	    CLRL    -(SP)						      ;
	      00000000G  9F	       0C  FB 00663 	    CALLS   #12, @#SYS$QIOW					      ;
		         58	       50  D0 0066A 	    MOVL    R0, STATUS						      ;
		         07	       58  E9 0066D 	    BLBC    STATUS, 53$						      ; 1079
		         58	  08   AE  3C 00670 	    MOVZWL  IO_STATUS, STATUS					      ;
		         09	       58  E8 00674 	    BLBS    STATUS, 54$						      ; 1080
	      00000838   8F	       58  D1 00677 53$:    CMPL    STATUS, #2104					      ;
				       25  12 0067E 	    BNEQ    55$							      ;
				0000GCF46  7F 00680 54$:    PUSHAQ  LABEL_STRING+4[I]					      ; 1082
		         50	       9E  D0 00685 	    MOVL    @(SP)+, R0						      ;
				0000GCF46  7F 00688 	    PUSHAQ  LABEL_STRING[I]					      ;
	   20	         60	       9E  2D 0068D 	    CMPC5   @(SP)+, (R0), #32, #6, VOL1+4			      ;
		  0000G  CF	       06     00691									      ;
				       0E  12 00695 	    BNEQ    55$							      ;
				  07 A746  7F 00697 	    PUSHAQ  7(MVL_ENTRY)[I]					      ; 1085
		         9E	       01  88 0069B 	    BISB2   #1, @(SP)+						      ;
				  06 A746  7F 0069E 	    PUSHAQ  6(MVL_ENTRY)[I]					      ; 1086
		         9E	       56  90 006A2 	    MOVB    I, @(SP)+						      ;
				0000G  CF  DD 006A5 55$:    PUSHL   TEMP_CHANNEL					      ; 1090
	      00000000G  9F	       01  FB 006A9 	    CALLS   #1, @#SYS$DASSGN					      ;
		  0000G  CF	       10  8A 006B0 	    BICB2   #16, CLEANUP_FLAGS					      ; 1091
				0000GCF46  7F 006B5 56$:    PUSHAQ  LABEL_STRING+4[I]					      ; 1094
		         50	       9E  D0 006BA 	    MOVL    @(SP)+, R0						      ;
				     6746  7F 006BD 	    PUSHAQ  (MVL_ENTRY)[I]					      ;
				0000GCF46  7F 006C0 	    PUSHAQ  LABEL_STRING[I]					      ;
	   20	         60	       9E  2C 006C5 	    MOVC5   @(SP)+, (R0), #32, #6, @(SP)+			      ;
		         9E	       06     006C9									      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 4-12
; Digital Equipment Corporation
;
	   02	         56	       59  F2 006CB 57$:    AOBLSS  R9, I, 58$						      ; 1055
				       03  11 006CF 	    BRB     59$							      ;
				     FEFF  31 006D1 58$:    BRW     48$							      ;
    0000G  CF	         01	       26  EF 006D4 59$:    EXTZV   #38, #1, MOUNT_OPTIONS, R0				      ; 1099
				       50     006DA									      ;
	   01	         01	       50  F0 006DB 	    INSV    R0, #1, #1, PROTO_VCB+44				      ;
				0000'  CF     006DF									      ;
    0000G  CF	         01	       04  EF 006E2 	    EXTZV   #4, #1, MOUNT_OPTIONS+2, R0				      ; 1100
				       50     006E8									      ;
	   01	         00	       50  F0 006E9 	    INSV    R0, #0, #1, PROTO_VCB+44				      ;
				0000'  CF     006ED									      ;
    0000G  CF	         01	       06  EF 006F0 	    EXTZV   #6, #1, MOUNT_OPTIONS+2, R0				      ; 1101
				       50     006F6									      ;
	   01	         02	       50  F0 006F7 	    INSV    R0, #2, #1, PROTO_VCB+44				      ;
				0000'  CF     006FB									      ;
    0000G  CF	         01	       05  EF 006FE 	    EXTZV   #5, #1, MOUNT_OPTIONS+2, R0				      ; 1102
				       50     00704									      ;
	   01	         03	       50  F0 00705 	    INSV    R0, #3, #1, PROTO_VCB+44				      ;
				0000'  CF     00709									      ;
				       7E  D4 0070C 60$:    CLRL    -(SP)						      ; 1104
				       5E  DD 0070E 	    PUSHL   SP							      ;
				0000V  CF  9F 00710 	    PUSHAB  MAKE_TAPE_MOUNT					      ;
	      00000000G  9F	       03  FB 00714 	    CALLS   #3, @#SYS$CMKRNL					      ;
		         58	       50  D0 0071B 	    MOVL    R0, STATUS						      ;
		         09	       58  E8 0071E 	    BLBS    STATUS, 61$						      ; 1106
				       58  DD 00721 	    PUSHL   STATUS						      ;
	      00000000G  00	       01  FB 00723 	    CALLS   #1, LIB$STOP					      ;
	   6B	  0000G  CF	       03  E0 0072A 61$:    BBS     #3, MOUNT_OPTIONS+1, 68$				      ; 1110
	   65	  0000G  CF	       04  E0 00730 	    BBS     #4, MOUNT_OPTIONS+1, 68$				      ;
		         57	0000'  CF  9E 00736 	    MOVAB   PROTO_MVL+12, MVL_ENTRY				      ; 1114
		         56	0000G  CF  D0 0073B 	    MOVL    PHYS_COUNT, R6					      ; 1115
		         53	       01  CE 00740 	    MNEGL   #1, I						      ;
				       51  11 00743 	    BRB     67$							      ;
		         58	0000'  CF  9A 00745 62$:    MOVZBL  PROTO_MVL+11, R8					      ; 1117
		         52	       01  CE 0074A 	    MNEGL   #1, J						      ;
				       43  11 0074D 	    BRB     66$							      ;
				  06 A742  7F 0074F 63$:    PUSHAQ  6(MVL_ENTRY)[J]					      ; 1119
	   9E	         08	       00  ED 00753 	    CMPZV   #0, #8, @(SP)+, I					      ;
				       53     00757									      ;
				       38  12 00758 	    BNEQ    66$							      ;
				  07 A742  7F 0075A 	    PUSHAQ  7(MVL_ENTRY)[J]					      ; 1120
		         31	       9E  E9 0075E 	    BLBC    @(SP)+, 66$						      ;
		         51	     6742  7E 00761 	    MOVAQ   (MVL_ENTRY)[J], R1					      ; 1123
		         54	       51  D0 00765 	    MOVL    R1, LADDR						      ;
		         50	       06  D0 00768 	    MOVL    #6, K						      ; 1124
		         55	       50  D0 0076B 64$:    MOVL    K, SIZE						      ; 1126
				       0A  13 0076E 	    BEQL    65$							      ; 1127
		         20	  FF A044  91 00770 	    CMPB    -1(K)[LADDR], #32					      ; 1128
				       03  12 00775 	    BNEQ    65$							      ;
		         F1	       50  F4 00777 	    SOBGEQ  K, 64$						      ; 1124
				0000GCF43  7F 0077A 65$:    PUSHAQ  PHYS_NAME[I]					      ; 1131
				       51  DD 0077F 	    PUSHL   R1							      ;
				       55  DD 00781 	    PUSHL   SIZE						      ;
				       03  DD 00783 	    PUSHL   #3							      ;
			    0072A003   8F  DD 00785 	    PUSHL   #7512067						      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 4-13
; Digital Equipment Corporation
;
	      00000000G  00	       05  FB 0078B 	    CALLS   #5, LIB$SIGNAL					      ;
	   B9	         52	       58  F2 00792 66$:    AOBLSS  R8, J, 63$						      ; 1117
	   AB	         53	       56  F2 00796 67$:    AOBLSS  R6, I, 62$						      ; 1115
					   04 0079A 	    RET     							      ; 1110
		         50	0000'  CF  9E 0079B 68$:    MOVAB   PROTO_VCB+20, LADDR					      ; 1140
		         51	       0C  D0 007A0 	    MOVL    #12, K						      ; 1141
		         52	       51  D0 007A3 69$:    MOVL    K, SIZE						      ; 1143
				       0A  13 007A6 	    BEQL    70$							      ; 1144
		         20	  FF A140  91 007A8 	    CMPB    -1(K)[LADDR], #32					      ; 1145
				       03  12 007AD 	    BNEQ    70$							      ;
		         F1	       51  F4 007AF 	    SOBGEQ  K, 69$						      ; 1141
				0000G  CF  9F 007B2 70$:    PUSHAB  PHYS_NAME						      ; 1147
				0000'  CF  9F 007B6 	    PUSHAB  PROTO_VCB+20					      ;
				       52  DD 007BA 	    PUSHL   SIZE						      ;
				       03  DD 007BC 	    PUSHL   #3							      ;
			    0072A003   8F  DD 007BE 	    PUSHL   #7512067						      ;
	      00000000G  00	       05  FB 007C4 	    CALLS   #5, LIB$SIGNAL					      ;
					   04 007CB 	    RET     							      ; 0793
					 0000 007CC 71$:    .WORD   Save nothing					      ; 0829
				       7E  D4 007CE 	    CLRL    -(SP)						      ;
				       5E  DD 007D0 	    PUSHL   SP							      ;
		         7E	  04   AC  7D 007D2 	    MOVQ    4(AP), -(SP)					      ;
		  0000V  CF	       03  FB 007D6 	    CALLS   #3, ERROR_HANDLER					      ;
					   04 007DB 	    RET     							      ;

; Routine Size:  1453 bytes



; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 5
; Digital Equipment Corporation
;
;	1150	ROUTINE GET_UIC  =
;	1151	
;	1152	!++
;	1153	!
;	1154	! FUNCTIONAL DESCRIPTION:
;	1155	!	THIS IS A KLUGE ROUTINE TO GET THE UIC OF A PROCESS.  IT WILL DISAPPEAR
;	1156	! 	WHEN $GETJPP BECOMES STABLE.
;	1157	!
;	1158	! CALLING SEQUENCE:
;	1159	!	GET_UIC(), CALLED IN KERNEL MODE
;	1160	!
;	1161	! INPUT PARAMETERS:
;	1162	!	NONE
;	1163	!
;	1164	! IMPLICIT INPUTS:
;	1165	!	NONE
;	1166	!
;	1167	! OUTPUT PARAMETERS:
;	1168	!	NONE
;	1169	!
;	1170	! IMPLICIT OUTPUTS:
;	1171	!	NONE
;	1172	!
;	1173	! ROUTINE VALUE:
;	1174	!	UIC OF THIS PROCESS
;	1175	!
;	1176	! SIDE EFFECTS:
;	1177	!	NONE
;	1178	!
;	1179	! USER ERRORS:
;	1180	!	NONE
;	1181	!
;	1182	!--
;	1183	
;	1184	BEGIN
;	1185	
;	1186	EXTERNAL
;	1187		SCH$GL_CURPCB	: REF BBLOCK ADDRESSING_MODE(ABSOLUTE);
;	1188	
;	1189	RETURN(.SCH$GL_CURPCB[PCB$L_UIC]);
;	1190	END;				!END OF ROUTINE GET_UIC



							    .GLOBL  SCH$GL_CURPCB

					 0000 007DC GET_UIC:.WORD   Save nothing					      ; 1150
		         50 00000000G  9F  D0 007DE 	    MOVL    @#SCH$GL_CURPCB, R0					      ; 1189
		         50	  20   A0  D0 007E5 	    MOVL    32(R0), R0						      ;
					   04 007E9 	    RET     							      ; 1150

; Routine Size:  14 bytes


;	1191	

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 5-1
; Digital Equipment Corporation
;
;	1192	

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 6
; Digital Equipment Corporation
;
;	1193	ROUTINE MAKE_TAPE_MOUNT  =
;	1194	
;	1195	!++
;	1196	!
;	1197	! FUNCTIONAL DESCRIPTION:
;	1198	!	THIS ROUTINE DOES THE DATA BASE MANIPULATION TO GET A 
;	1199	!	VOLUME MOUNTED
;	1200	!
;	1201	! CALLING SEQUENCE:
;	1202	!	MAKE_TAPE_MOUNT(), CALLED IN KERNEL MODE
;	1203	!
;	1204	! INPUT PARAMETERS:
;	1205	!	NONE
;	1206	!
;	1207	! IMPLICIT INPUTS:
;	1208	!	MOUNT PARSER VARIABLES
;	1209	!	OWN VARIABLES IN THIS MODULE
;	1210	!
;	1211	! OUTPUT PARAMETERS:
;	1212	!	NONE
;	1213	!
;	1214	! IMPLICIT OUTPUTS:
;	1215	!	NONE
;	1216	!
;	1217	! ROUTINE VALUE:
;	1218	!	1 - SUCCESS
;	1219	!	OTHER STATUS CODES
;	1220	!
;	1221	! SIDE EFFECTS:
;	1222	!	NONE
;	1223	!
;	1224	! USER ERRORS:
;	1225	!	NONE
;	1226	!
;	1227	!--
;	1228	
;	1229	BEGIN
;	1230	LINKAGE
;	1231		CHECK_PROT	= JSB(REGISTER = 1, REGISTER = 2, REGISTER = 4)
;	1232			: NOTUSED(3,5,6,7,8,9,10,11);
;	1233	
;	1234	
;	1235	EXTERNAL ROUTINE
;	1236		CTL$GQ_PROCPRIV	: ADDRESSING_MODE(ABSOLUTE),
;	1237		EXE$CHKRDACCES	: ADDRESSING_MODE(ABSOLUTE) CHECK_PROT;
;	1238	
;	1239	
;	1240	EXTERNAL
;	1241		OWNER_UIC,				!OWNER UIC FROM COMMAND LINE
;	1242		PROTECTION,				!PROTECTION FROM COMMAND LINE
;	1243		REAL_MVL	: REF BBLOCK,		!REAL MVL
;	1244		REAL_RVT	: REF BBLOCK,		!REAL RVT
;	1245		REAL_VCB	: REF BBLOCK,		!REAL VCB
;	1246		SCH$GL_CURPCB	: REF BBLOCK ADDRESSING_MODE(ABSOLUTE),
;	1247		USER_UIC;				!USER UIC FROM COMMAND LINE

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 6-1
; Digital Equipment Corporation
;
;	1248	
;	1249	LOCAL
;	1250		PRIMARY_UCB	: REF BBLOCK,		!PRIMARY UCB
;	1251		UCB		: REF BBLOCK,		!SECONDARY UCB
;	1252		UCBLIST		: REF VECTOR[DEVMAX];	!UCB LIST IN RVT
;	1253	
;	1254	! DISABLE THE KERNEL EXCEPTION VECTORS AND ENABLE OUR CONDITION HANDLER.
;	1255	!
;	1256	ENABLE KERNEL_HANDLER;
;	1257	$SETEXV(VECTOR = 0, PRVHND = SYSEXV[0]);
;	1258	$SETEXV(VECTOR = 1, PRVHND = SYSEXV[1]);
;	1259	
;	1260	! ***** FOR DEBUG: IF THE PREVIOUS HANDLER ADDRESSES ARE FOUND TO BE IN 
;	1261	! PROCESS SPACE, PUT THEM BACK SINCE THEY BELONG TO THE DEBUGGER.
;	1262	IF .SYSEXV[0] GTR 0
;	1263	THEN $SETEXV(VECTOR = 0, ADDRES = .SYSEXV[0]);
;	1264	IF .SYSEXV[1] GTR 0
;	1265	THEN $SETEXV(VECTOR = 1, ADDRES = .SYSEXV[1]);
;	1266	PRIMARY_UCB = GET_CHANNELUCB(.CHANNEL);
;	1267	!
;	1268	! SETUP OWNERSHIP AND PROTECTION
;	1269	!
;	1270	PRIMARY_UCB[UCB$L_OWNUIC] = .VOLUME_UIC;
;	1271	IF .MOUNT_OPTIONS[OPT_OWNER_UIC]
;	1272	THEN PRIMARY_UCB[UCB$L_OWNUIC] = .OWNER_UIC;
;	1273	
;	1274	IF .MOUNT_OPTIONS[OPT_FOREIGN] OR .MOUNT_OPTIONS[OPT_NOLABEL]
;	1275	THEN PRIMARY_UCB[UCB$W_VPROT] = %X'FF00'
;	1276	ELSE PRIMARY_UCB[UCB$W_VPROT] = .TAPE_PROTECTION<0,16>;
;	1277	
;	1278	IF .MOUNT_OPTIONS[OPT_PROTECTION]
;	1279	THEN PRIMARY_UCB[UCB$W_VPROT] = .PROTECTION<0,16>;
;	1280	
;	1281	!
;	1282	! NOW CHECK THAT THE USER CAN AT LEAST READ TAPE
;	1283	!
;	1284	(LOCAL PROC_PRIV  : REF BBLOCK;
;	1285	PROC_PRIV = CTL$GQ_PROCPRIV;
;	1286	IF NOT EXE$CHKRDACCES(.PRIMARY_UCB[UCB$W_VPROT],.PRIMARY_UCB[UCB$L_OWNUIC],
;	1287		.SCH$GL_CURPCB)
;	1288	AND NOT .PROC_PRIV[PRV$V_LOG_IO]
;	1289	AND NOT .PROC_PRIV[PRV$V_PHY_IO]
;	1290	THEN ERR_EXIT(SS$_NOPRIV));
;	1291	
;	1292	! CREATE REAL VCB
;	1293	REAL_VCB = ALLOCATE_MEM(VCB$K_LENGTH,0);
;	1294	REAL_VCB[VCB$B_TYPE] = DYN$C_VCB;
;	1295	CH$MOVE(VCB$K_LENGTH-11,PROTO_VCB+11,.REAL_VCB+11);
;	1296	
;	1297	! IF NOT FOREIGN AND NO LABLES THEN ALLOCATE RVT AND MVL
;	1298	IF NOT .MOUNT_OPTIONS[OPT_FOREIGN] AND NOT .MOUNT_OPTIONS[OPT_NOLABEL] THEN
;	1299	    BEGIN
;	1300	    REAL_RVT = ALLOCATE_MEM($BYTEOFFSET(RVT$L_UCBLST) + (.PROTO_RVT[RVT$B_NVOLS] * 4),0);
;	1301	    REAL_RVT[RVT$B_TYPE] = DYN$C_RVT;
;	1302	    CH$MOVE(.REAL_RVT[RVT$W_SIZE]-11,PROTO_RVT+11,.REAL_RVT+11);

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 6-2
; Digital Equipment Corporation
;
;	1303	    REAL_MVL = ALLOCATE_MEM(MVL$K_FIXLEN + (.PROTO_MVL[MVL$B_NVOLS] * MVL$K_LENGTH),0);
;	1304	    REAL_MVL[MVL$B_TYPE] = DYN$C_MVL;
;	1305	    CH$MOVE(.REAL_MVL[MVL$W_SIZE] - 11,PROTO_MVL+11,.REAL_MVL + 11);
;	1306	    REAL_MVL[MVL$L_VCB] = .REAL_VCB;
;	1307	    REAL_VCB[VCB$L_RVT] = .REAL_RVT;
;	1308	    REAL_VCB[VCB$L_MVL] = .REAL_MVL;
;	1309	    REAL_VCB[VCB$L_BLOCKFL] = REAL_VCB[VCB$L_BLOCKFL];
;	1310	    REAL_VCB[VCB$L_BLOCKBL] = REAL_VCB[VCB$L_BLOCKFL];
;	1311	    REAL_VCB[VCB$L_VPFL] = REAL_VCB[VCB$L_VPFL];
;	1312	    REAL_VCB[VCB$L_VPBL] = REAL_VCB[VCB$L_VPFL];
;	1313	    END;
;	1314	
;	1315	ALLOC_LOGNAME();
;	1316	
;	1317	! SET UNLOAD AS DEFAULT IN CASE OF ABNORMAL DISMOUNT
;	1318	PRIMARY_UCB[UCB$V_UNLOAD] = 1;
;	1319	
;	1320	
;	1321	
;	1322	! CHECK FOR DATA CHECK REQUESTS AT MOUNT TIME
;	1323	BBLOCK[PRIMARY_UCB[UCB$L_DEVCHAR],DEV$V_RCK] = .MOUNT_OPTIONS[OPT_READCHECK];
;	1324	BBLOCK[PRIMARY_UCB[UCB$L_DEVCHAR],DEV$V_WCK] = .MOUNT_OPTIONS[OPT_WRITECHECK];
;	1325	IF NOT .MOUNT_OPTIONS[OPT_FOREIGN] 
;	1326	AND NOT .MOUNT_OPTIONS[OPT_NOLABEL] THEN
;	1327	    BEGIN
;	1328	    PRIMARY_UCB[UCB$L_DEVCHAR] = .PRIMARY_UCB[UCB$L_DEVCHAR] AND NOT DEV$M_REC;
;	1329	    START_ACP(.PRIMARY_UCB,.REAL_VCB,AQB$K_MTA);
;	1330	    END
;	1331	ELSE
;	1332	    BEGIN
;	1333	    LOCK_IODB();
;	1334	    PRIMARY_UCB[UCB$L_VCB] = .REAL_VCB;
;	1335	    PRIMARY_UCB[UCB$L_DEVCHAR] = .PRIMARY_UCB[UCB$L_DEVCHAR] OR
;	1336			(DEV$M_MNT OR DEV$M_FOR OR DEV$M_REC);
;	1337	    PRIMARY_UCB[UCB$L_DEVCHAR] = .PRIMARY_UCB[UCB$L_DEVCHAR] AND 
;	1338			NOT (DEV$M_DIR OR DEV$M_SDI);
;	1339	    UNLOCK_IODB();
;	1340	    END;
;	1341	
;	1342	IF .CLEANUP_FLAGS[CLF_DEALLOCATE] 
;	1343	THEN PRIMARY_UCB[UCB$V_DEADMO] = 1;
;	1344	
;	1345	IF NOT .MOUNT_OPTIONS[OPT_WRITE] THEN BBLOCK[PRIMARY_UCB[UCB$L_DEVCHAR],DEV$V_SWL] = 1;
;	1346	
;	1347	! MAKE ALLOCATION PERMANENT
;	1348	PRIMARY_UCB[UCB$B_AMOD] = 0;
;	1349	SEND_ERRLOG(1,.PRIMARY_UCB);
;	1350	
;	1351	! NOW SET SECONDARY UCB VALUES
;	1352	IF .REAL_RVT NEQ 0 AND .REAL_RVT[RVT$B_NVOLS] GTR 1
;	1353	THEN
;	1354	    BEGIN
;	1355	    UCBLIST = REAL_RVT[RVT$L_UCBLST];
;	1356	    INCR I FROM 1 TO .REAL_RVT[RVT$B_NVOLS] -1
;	1357	    DO

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 6-3
; Digital Equipment Corporation
;
;	1358		BEGIN
;	1359		UCB = .UCBLIST[.I];
;	1360		UCB[UCB$V_UNLOAD] = 1;
;	1361		UCB[UCB$L_OWNUIC] = .PRIMARY_UCB[UCB$L_OWNUIC];
;	1362		UCB[UCB$W_VPROT] = .PRIMARY_UCB[UCB$W_VPROT];
;	1363		UCB[UCB$L_VCB] = .REAL_VCB;
;	1364		UCB[UCB$L_DEVCHAR] = .UCB[UCB$L_DEVCHAR]
;	1365				OR (DEV$M_MNT OR DEV$M_DIR OR DEV$M_SDI);
;	1366		BBLOCK[UCB[UCB$L_DEVCHAR],DEV$V_RCK] = 
;	1367				.BBLOCK[PRIMARY_UCB[UCB$L_DEVCHAR],DEV$V_RCK];
;	1368		BBLOCK[UCB[UCB$L_DEVCHAR],DEV$V_WCK] =
;	1369				.BBLOCK[PRIMARY_UCB[UCB$L_DEVCHAR],DEV$V_WCK];
;	1370		BBLOCK[UCB[UCB$L_DEVCHAR],DEV$V_REC] = 0;
;	1371		UCB[UCB$W_DEVBUFSIZ] = .PRIMARY_UCB[UCB$W_DEVBUFSIZ];
;	1372		(UCB[UCB$L_DEVDEPEND])<0,16> = .(PRIMARY_UCB[UCB$L_DEVDEPEND])<0,16>;
;	1373		IF .CLEANUP_ALLOC[.I]
;	1374		THEN UCB[UCB$V_DEADMO] = 1;
;	1375		IF NOT .MOUNT_OPTIONS[OPT_WRITE]
;	1376		THEN BBLOCK[UCB[UCB$L_DEVCHAR],DEV$V_SWL] = 1;
;	1377		UCB[UCB$B_AMOD] = 0;			!MAKE ALLOCATION PERMANENT
;	1378		SEND_ERRLOG(1,.UCB);
;	1379		END;
;	1380	    END;
;	1381	
;	1382	ENTER_LOGNAME(.PRIMARY_UCB,.REAL_VCB);
;	1383	CTL$GL_VOLUMES = .CTL$GL_VOLUMES + 1;
;	1384	
;	1385	! REASTORE THE SYSTEM EXCEPTION VECTORS.
;	1386	$SETEXV(VECTOR = 0, ADDRES = .SYSEXV[0]);
;	1387	$SETEXV(VECTOR = 1, ADDRES = .SYSEXV[1]);
;	1388	RETURN 1;
;	1389	END;						!END OF ROUTINE MAKE_TAPE_MOUNT



							    .GLOBL  CTL$GQ_PROCPRIV, EXE$CHKRDACCES, OWNER_UIC, PROTECTION
							    .GLOBL  REAL_MVL, REAL_RVT, REAL_VCB, USER_UIC, SYS$SETEXV

					 0FFC 007EA MAKE_TAPE_MOUNT:
							    .WORD   Save R2,R3,R4,R5,R6,R7,R8,R9,R10,R11		      ; 1193
		         59	0000G  CF  9E 007EC 	    MOVAB   MOUNT_OPTIONS, R9					      ;
		         5A 00000000G  9F  9E 007F1 	    MOVAB   @#SYS$SETEXV, R10					      ;
		         5B	0000'  CF  9E 007F8 	    MOVAB   SYSEXV, R11						      ;
		         6D 00000267   EF  DE 007FD 	    MOVAL   21$, (FP)						      ; 1229
				       5B  DD 00804 	    PUSHL   R11							      ; 1257
				       7E  7C 00806 	    CLRQ    -(SP)						      ;
				       7E  D4 00808 	    CLRL    -(SP)						      ;
		         6A	       04  FB 0080A 	    CALLS   #4, SYS$SETEXV					      ;
				  04   AB  9F 0080D 	    PUSHAB  SYSEXV+4						      ; 1258
				       7E  7C 00810 	    CLRQ    -(SP)						      ;
				       01  DD 00812 	    PUSHL   #1							      ;
		         6A	       04  FB 00814 	    CALLS   #4, SYS$SETEXV					      ;
		         50	       6B  D0 00817 	    MOVL    SYSEXV, R0						      ; 1262
				       09  15 0081A 	    BLEQ    1$							      ;
				       7E  7C 0081C 	    CLRQ    -(SP)						      ; 1263

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 6-4
; Digital Equipment Corporation
;
				       50  DD 0081E 	    PUSHL   R0							      ;
				       7E  D4 00820 	    CLRL    -(SP)						      ;
		         6A	       04  FB 00822 	    CALLS   #4, SYS$SETEXV					      ;
		         50	  04   AB  D0 00825 1$:     MOVL    SYSEXV+4, R0					      ; 1264
				       09  15 00829 	    BLEQ    2$							      ;
				       7E  7C 0082B 	    CLRQ    -(SP)						      ; 1265
				       50  DD 0082D 	    PUSHL   R0							      ;
				       01  DD 0082F 	    PUSHL   #1							      ;
		         6A	       04  FB 00831 	    CALLS   #4, SYS$SETEXV					      ;
				0000G  CF  DD 00834 2$:     PUSHL   CHANNEL						      ; 1266
		  0000G  CF	       01  FB 00838 	    CALLS   #1, GET_CHANNELUCB					      ;
		         57	       50  D0 0083D 	    MOVL    R0, PRIMARY_UCB					      ;
		    1C   A7	  10   AB  D0 00840 	    MOVL    VOLUME_UIC, 28(PRIMARY_UCB)				      ; 1270
	   06	    02   A9	       02  E1 00845 	    BBC     #2, MOUNT_OPTIONS+2, 3$				      ; 1271
		    1C   A7	0000G  CF  D0 0084A 	    MOVL    OWNER_UIC, 28(PRIMARY_UCB)				      ; 1272
		         58	  1A   A7  9E 00850 3$:     MOVAB   26(PRIMARY_UCB), R8					      ; 1275
	   05	    01   A9	       03  E0 00854 	    BBS     #3, MOUNT_OPTIONS+1, 4$				      ; 1274
	   07	    01   A9	       04  E1 00859 	    BBC     #4, MOUNT_OPTIONS+1, 5$				      ;
		         68	FF00   8F  B0 0085E 4$:     MOVW    #-256, (R8)						      ; 1275
				       04  11 00863 	    BRB     6$							      ; 1274
		         68	  0C   AB  B0 00865 5$:     MOVW    TAPE_PROTECTION, (R8)				      ; 1276
	   05	    02   A9	       01  E1 00869 6$:     BBC     #1, MOUNT_OPTIONS+2, 7$				      ; 1278
		         68	0000G  CF  B0 0086E 	    MOVW    PROTECTION, (R8)					      ; 1279
		         53 00000000G  8F  D0 00873 7$:     MOVL    #CTL$GQ_PROCPRIV, PROC_PRIV				      ; 1285
		         51	       68  3C 0087A 	    MOVZWL  (R8), R1						      ; 1286
		         52	  1C   A7  D0 0087D 	    MOVL    28(PRIMARY_UCB), R2					      ;
		         54 00000000G  9F  D0 00881 	    MOVL    @#SCH$GL_CURPCB, R4					      ;
			    00000000G  9F  16 00888 	    JSB     @#EXE$CHKRDACCES					      ;
		         11	       50  E8 0088E 	    BLBS    R0, 8$						      ;
	   0D	         63	       07  E0 00891 	    BBS     #7, (PROC_PRIV), 8$					      ; 1288
	   09	         63	       16  E0 00895 	    BBS     #22, (PROC_PRIV), 8$				      ; 1289
				       24  DD 00899 	    PUSHL   #36							      ; 1290
	      00000000G  00	       01  FB 0089B 	    CALLS   #1, LIB$STOP					      ;
				       7E  D4 008A2 8$:     CLRL    -(SP)						      ; 1293
		         7E	  54   8F  9A 008A4 	    MOVZBL  #84, -(SP)						      ;
		  0000G  CF	       02  FB 008A8 	    CALLS   #2, ALLOCATE_MEM					      ;
		  0000G  CF	       50  D0 008AD 	    MOVL    R0, REAL_VCB					      ;
		         50	0000G  CF  D0 008B2 	    MOVL    REAL_VCB, R0					      ; 1294
		    0A   A0	       11  90 008B7 	    MOVB    #17, 10(R0)						      ;
      0B   A0	  FEDF   CB	0049   8F  28 008BB 	    MOVC3   #73, PROTO_VCB+11, 11(R0)				      ; 1295
	   03	    01   A9	       03  E1 008C4 	    BBC     #3, MOUNT_OPTIONS+1, 10$				      ; 1298
				     0086  31 008C9 9$:     BRW     11$							      ;
	   F8	    01   A9	       04  E0 008CC 10$:    BBS     #4, MOUNT_OPTIONS+1, 9$				      ;
				       7E  D4 008D1 	    CLRL    -(SP)						      ; 1300
		         50	FF33   CB  9A 008D3 	    MOVZBL  PROTO_RVT+11, R0					      ;
	   7E	         50	       02  78 008D8 	    ASHL    #2, R0, -(SP)					      ;
		         6E	       0C  C0 008DC 	    ADDL2   #12, (SP)						      ;
		  0000G  CF	       02  FB 008DF 	    CALLS   #2, ALLOCATE_MEM					      ;
		  0000G  CF	       50  D0 008E4 	    MOVL    R0, REAL_RVT					      ;
		         50	0000G  CF  D0 008E9 	    MOVL    REAL_RVT, R0					      ; 1301
		    0A   A0	       0E  90 008EE 	    MOVB    #14, 10(R0)						      ;
		         51	  08   A0  3C 008F2 	    MOVZWL  8(R0), R1						      ; 1302
		         51	       0B  C2 008F6 	    SUBL2   #11, R1						      ;
      0B   A0	  FF33   CB	       51  28 008F9 	    MOVC3   R1, PROTO_RVT+11, 11(R0)				      ;
				       7E  D4 00900 	    CLRL    -(SP)						      ; 1303

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 6-5
; Digital Equipment Corporation
;
		         50	FF7F   CB  9A 00902 	    MOVZBL  PROTO_MVL+11, R0					      ;
	   7E	         50	       03  78 00907 	    ASHL    #3, R0, -(SP)					      ;
		         6E	       0C  C0 0090B 	    ADDL2   #12, (SP)						      ;
		  0000G  CF	       02  FB 0090E 	    CALLS   #2, ALLOCATE_MEM					      ;
		  0000G  CF	       50  D0 00913 	    MOVL    R0, REAL_MVL					      ;
		         56	0000G  CF  D0 00918 	    MOVL    REAL_MVL, R6					      ; 1304
		    0A   A6	       16  90 0091D 	    MOVB    #22, 10(R6)						      ;
		         50	  08   A6  3C 00921 	    MOVZWL  8(R6), R0						      ; 1305
		         50	       0B  C2 00925 	    SUBL2   #11, R0						      ;
      0B   A6	  FF7F   CB	       50  28 00928 	    MOVC3   R0, PROTO_MVL+11, 11(R6)				      ;
		         50	0000G  CF  D0 0092F 	    MOVL    REAL_VCB, R0					      ; 1306
		         66	       50  D0 00934 	    MOVL    R0, (R6)						      ;
		    20   A0	0000G  CF  D0 00937 	    MOVL    REAL_RVT, 32(R0)					      ; 1307
		    34   A0	       56  D0 0093D 	    MOVL    R6, 52(R0)						      ; 1308
		         60	       50  D0 00941 	    MOVL    R0, (R0)						      ; 1309
		    04   A0	       50  D0 00944 	    MOVL    R0, 4(R0)						      ; 1310
		    3C   A0	  3C   A0  9E 00948 	    MOVAB   60(R0), 60(R0)					      ; 1311
		    40   A0	  3C   A0  9E 0094D 	    MOVAB   60(R0), 64(R0)					      ; 1312
		  0000G  CF	       00  FB 00952 11$:    CALLS   #0, ALLOC_LOGNAME					      ; 1315
		    59   A7	       10  88 00957 	    BISB2   #16, 89(PRIMARY_UCB)				      ; 1318
		         53	  34   A7  9E 0095B 	    MOVAB   52(PRIMARY_UCB), R3					      ; 1323
	   69	         01	       23  EF 0095F 	    EXTZV   #35, #1, MOUNT_OPTIONS, R0				      ;
				       50     00963									      ;
	   01	         1E	       50  F0 00964 	    INSV    R0, #30, #1, (R3)					      ;
				       63     00968									      ;
	   69	         01	       24  EF 00969 	    EXTZV   #36, #1, MOUNT_OPTIONS, R0				      ; 1324
				       50     0096D									      ;
	   01	         1F	       50  F0 0096E 	    INSV    R0, #31, #1, (R3)					      ;
				       63     00972									      ;
	   17	    01   A9	       03  E0 00973 	    BBS     #3, MOUNT_OPTIONS+1, 12$				      ; 1325
	   12	    01   A9	       04  E0 00978 	    BBS     #4, MOUNT_OPTIONS+1, 12$				      ; 1326
		         63	       01  8A 0097D 	    BICB2   #1, (R3)						      ; 1328
				       03  DD 00980 	    PUSHL   #3							      ; 1329
				0000G  CF  DD 00982 	    PUSHL   REAL_VCB						      ;
				       57  DD 00986 	    PUSHL   PRIMARY_UCB						      ;
		  0000G  CF	       03  FB 00988 	    CALLS   #3, START_ACP					      ;
				       1A  11 0098D 	    BRB     13$							      ; 1325
		  0000G  CF	       00  FB 0098F 12$:    CALLS   #0, LOCK_IODB					      ; 1333
		    30   A7	0000G  CF  D0 00994 	    MOVL    REAL_VCB, 48(PRIMARY_UCB)				      ; 1334
		         63 01080001   8F  C8 0099A 	    BISL2   #17301505, (R3)					      ; 1335
		         63	       18  8A 009A1 	    BICB2   #24, (R3)						      ; 1337
		  0000G  CF	       00  FB 009A4 	    CALLS   #0, UNLOCK_IODB					      ; 1339
	   04	  0000G  CF	       01  E1 009A9 13$:    BBC     #1, CLEANUP_FLAGS, 14$				      ; 1342
		    59   A7	       04  88 009AF 	    BISB2   #4, 89(PRIMARY_UCB)					      ; 1343
	   04	    01   A9	       01  E0 009B3 14$:    BBS     #1, MOUNT_OPTIONS+1, 15$				      ; 1345
		    03   A3	       02  88 009B8 	    BISB2   #2, 3(R3)						      ;
				  53   A7  94 009BC 15$:    CLRB    83(PRIMARY_UCB)					      ; 1348
				       57  DD 009BF 	    PUSHL   PRIMARY_UCB						      ; 1349
				       01  DD 009C1 	    PUSHL   #1							      ;
		  0000G  CF	       02  FB 009C3 	    CALLS   #2, SEND_ERRLOG					      ;
		         50	0000G  CF  D0 009C8 	    MOVL    REAL_RVT, R0					      ; 1352
				       73  13 009CD 	    BEQL    20$							      ;
		         01	  0B   A0  91 009CF 	    CMPB    11(R0), #1						      ;
				       6D  1B 009D3 	    BLEQU   20$							      ;
	   55	         50	       0C  C1 009D5 	    ADDL3   #12, R0, UCBLIST					      ; 1355

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 6-6
; Digital Equipment Corporation
;
		         56	  0B   A0  9A 009D9 	    MOVZBL  11(R0), R6						      ; 1356
				       54  D4 009DD 	    CLRL    I							      ;
				       5D  11 009DF 	    BRB     19$							      ;
		         52	     6544  D0 009E1 16$:    MOVL    (UCBLIST)[I], UCB					      ; 1359
		    59   A2	       10  88 009E5 	    BISB2   #16, 89(UCB)					      ; 1360
		    1C   A2	  1C   A7  D0 009E9 	    MOVL    28(PRIMARY_UCB), 28(UCB)				      ; 1361
		    1A   A2	       68  B0 009EE 	    MOVW    (R8), 26(UCB)					      ; 1362
		    30   A2	0000G  CF  D0 009F2 	    MOVL    REAL_VCB, 48(UCB)					      ; 1363
		         50	  34   A2  9E 009F8 	    MOVAB   52(UCB), R0						      ; 1364
		         60 00080018   8F  C8 009FC 	    BISL2   #524312, (R0)					      ; 1365
	   63	         01	       1E  EF 00A03 	    EXTZV   #30, #1, (R3), R1					      ; 1366
				       51     00A07									      ;
	   01	         1E	       51  F0 00A08 	    INSV    R1, #30, #1, (R0)					      ;
				       60     00A0C									      ;
	   63	         01	       1F  EF 00A0D 	    EXTZV   #31, #1, (R3), R1					      ; 1368
				       51     00A11									      ;
	   01	         1F	       51  F0 00A12 	    INSV    R1, #31, #1, (R0)					      ;
				       60     00A16									      ;
		         60	       01  8A 00A17 	    BICB2   #1, (R0)						      ; 1370
		    3A   A2	  3A   A7  D0 00A1A 	    MOVL    58(PRIMARY_UCB), 58(UCB)				      ; 1371
	   04	  0000G  CF	       54  E1 00A1F 	    BBC     I, CLEANUP_ALLOC, 17$				      ; 1373
		    59   A2	       04  88 00A25 	    BISB2   #4, 89(UCB)						      ; 1374
	   04	    01   A9	       01  E0 00A29 17$:    BBS     #1, MOUNT_OPTIONS+1, 18$				      ; 1375
		    03   A0	       02  88 00A2E 	    BISB2   #2, 3(R0)						      ; 1376
				  53   A2  94 00A32 18$:    CLRB    83(UCB)						      ; 1377
				       52  DD 00A35 	    PUSHL   UCB							      ; 1378
				       01  DD 00A37 	    PUSHL   #1							      ;
		  0000G  CF	       02  FB 00A39 	    CALLS   #2, SEND_ERRLOG					      ;
	   9F	         54	       56  F2 00A3E 19$:    AOBLSS  R6, I, 16$						      ; 1356
				0000G  CF  DD 00A42 20$:    PUSHL   REAL_VCB						      ; 1382
				       57  DD 00A46 	    PUSHL   PRIMARY_UCB						      ;
		  0000G  CF	       02  FB 00A48 	    CALLS   #2, ENTER_LOGNAME					      ;
			    00000000G  9F  D6 00A4D 	    INCL    @#CTL$GL_VOLUMES					      ; 1383
				       7E  7C 00A53 	    CLRQ    -(SP)						      ; 1386
				       6B  DD 00A55 	    PUSHL   SYSEXV						      ;
				       7E  D4 00A57 	    CLRL    -(SP)						      ;
		         6A	       04  FB 00A59 	    CALLS   #4, SYS$SETEXV					      ;
				       7E  7C 00A5C 	    CLRQ    -(SP)						      ; 1387
				  04   AB  DD 00A5E 	    PUSHL   SYSEXV+4						      ;
				       01  DD 00A61 	    PUSHL   #1							      ;
		         6A	       04  FB 00A63 	    CALLS   #4, SYS$SETEXV					      ;
		         50	       01  D0 00A66 	    MOVL    #1, R0						      ; 1388
					   04 00A69 	    RET     							      ; 1193
					 0000 00A6A 21$:    .WORD   Save nothing					      ; 1229
				       7E  D4 00A6C 	    CLRL    -(SP)						      ;
				       5E  DD 00A6E 	    PUSHL   SP							      ;
		         7E	  04   AC  7D 00A70 	    MOVQ    4(AP), -(SP)					      ;
		  0000V  CF	       03  FB 00A74 	    CALLS   #3, KERNEL_HANDLER					      ;
					   04 00A79 	    RET     							      ;

; Routine Size:  656 bytes



; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 7
; Digital Equipment Corporation
;
;	1390	ROUTINE KERNEL_HANDLER (SIGNAL, MECHANISM) : NOVALUE =
;	1391	
;	1392	!++
;	1393	!
;	1394	! FUNCTIONAL DESCRIPTION:
;	1395	!
;	1396	!	This routine is the condition handler for all of the kernel mode
;	1397	!	code. It undoes any damage done so far and returns the error
;	1398	!	status to the user mode caller.
;	1399	!
;	1400	!
;	1401	! CALLING SEQUENCE:
;	1402	!	KERNEL_HANDLER (ARG1, ARG2)
;	1403	!
;	1404	! INPUT PARAMETERS:
;	1405	!	ARG1: address of signal vector
;	1406	!	ARG2: address of mechanism vector
;	1407	!
;	1408	! IMPLICIT INPUTS:
;	1409	!	global pointers to blocks allocated
;	1410	!
;	1411	! OUTPUT PARAMETERS:
;	1412	!	NONE
;	1413	!
;	1414	! IMPLICIT OUTPUTS:
;	1415	!	NONE
;	1416	!
;	1417	! ROUTINE VALUE:
;	1418	!	NONE
;	1419	!
;	1420	! SIDE EFFECTS:
;	1421	!	stack unwound, allocations undone
;	1422	!
;	1423	!--
;	1424	
;	1425	BEGIN
;	1426	
;	1427	MAP
;	1428		SIGNAL		: REF BBLOCK,	! signal vector
;	1429		MECHANISM	: REF BBLOCK;	! mechanism vector
;	1430	
;	1431	LOCAL
;	1432		UCB		: REF BBLOCK,
;	1433		P		: REF BBLOCK,	! pointer to scan system lists
;	1434		AREA;				! allocation area code
;	1435	
;	1436	EXTERNAL
;	1437		MOUNT_OPTIONS	: BITVECTOR,	! command parser options
;	1438		CLEANUP_FLAGS	: BITVECTOR,	! cleanup action flags
;	1439		MAILBOX_CHANNEL,		! channel number of ACP mailbox
;	1440		REAL_VCB	: REF BBLOCK,	! address of VCB allocated
;	1441		REAL_RVT	: REF BBLOCK,	! address of FCB allocated
;	1442		REAL_MVL	: REF BBLOCK,	! address of window allocated
;	1443		REAL_AQB	: REF BBLOCK,	! address of AQB allocated
;	1444		LOG_ENTRY	: REF BBLOCK,	! address of logical name allocated

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 7-1
; Digital Equipment Corporation
;
;	1445		MTL_ENTRY	: REF BBLOCK,	! address of mounted volume list entry
;	1446		IOC$GL_AQBLIST	: REF BBLOCK ADDRESSING_MODE (ABSOLUTE);
;	1447						! system AQB list
;	1448	
;	1449	EXTERNAL ROUTINE
;	1450		LOCK_IODB,			! interlock system I/O database
;	1451		UNLOCK_IODB,			! unlock system I/O database
;	1452		DEALLOCATE_MEM;			! deallocate system dynamic memory
;	1453	
;	1454	
;	1455	! Deallocate whatever control blocks exist to wherever they came from.
;	1456	!
;	1457	
;	1458	IF .SIGNAL[CHF$L_SIG_NAME] NEQ SS$_UNWIND
;	1459	THEN
;	1460	    BEGIN
;	1461	
;	1462	! Restore the system exception vectors.
;	1463	!
;	1464	
;	1465	    $SETEXV (VECTOR = 0, ADDRES = .SYSEXV[0]);
;	1466	    $SETEXV (VECTOR = 1, ADDRES = .SYSEXV[1]);
;	1467	
;	1468	! If there is a mailbox in existence, deassign its channel, thereby
;	1469	! deleting the mailbox.
;	1470	!
;	1471	
;	1472	    IF .CLEANUP_FLAGS[CLF_DEASSMBX]
;	1473	    THEN
;	1474		$DASSGN (CHAN = .MAILBOX_CHANNEL);
;	1475	
;	1476	! If we have created an AQB but no ACP, we must remove the AQB from the
;	1477	! system list.
;	1478	!
;	1479	
;	1480	    IF .CLEANUP_FLAGS[CLF_DELAQB]
;	1481	    THEN
;	1482		BEGIN
;	1483		LOCK_IODB ();
;	1484		P = .IOC$GL_AQBLIST;
;	1485		IF .P EQL .REAL_AQB
;	1486		THEN
;	1487		    IOC$GL_AQBLIST = .REAL_AQB[AQB$L_LINK]
;	1488		ELSE
;	1489		    BEGIN
;	1490		    UNTIL .P[AQB$L_LINK] EQL .REAL_AQB
;	1491		    DO P = .P[AQB$L_LINK];
;	1492		    P[AQB$L_LINK] = .REAL_AQB[AQB$L_LINK];
;	1493		    END;
;	1494		DEALLOCATE_MEM (.REAL_AQB, 0);
;	1495		UNLOCK_IODB ();
;	1496		END;
;	1497	
;	1498	    AREA = 2;				! assume process allocation area
;	1499	    IF .MOUNT_OPTIONS[OPT_GROUP]

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 7-2
; Digital Equipment Corporation
;
;	1500	    OR .MOUNT_OPTIONS[OPT_SYSTEM]
;	1501	    THEN AREA = 1;			! system paged pool if system or group
;	1502	
;	1503	    IF .REAL_VCB NEQ 0
;	1504	    THEN DEALLOCATE_MEM (.REAL_VCB, 0);
;	1505	
;	1506	    IF .REAL_RVT NEQ 0
;	1507	    THEN DEALLOCATE_MEM (.REAL_RVT, 0);
;	1508	
;	1509	    IF .REAL_MVL NEQ 0
;	1510	    THEN DEALLOCATE_MEM (.REAL_MVL, 0);
;	1511	
;	1512	    IF .LOG_ENTRY NEQ 0
;	1513	    THEN DEALLOCATE_MEM (.LOG_ENTRY, .AREA);
;	1514	
;	1515	    IF .MTL_ENTRY NEQ 0
;	1516	    THEN DEALLOCATE_MEM (.MTL_ENTRY, .AREA);
;	1517	!
;	1518	! cleanup protection on primary UCB
;	1519	!
;	1520	    UCB = GET_CHANNELUCB(.CHANNEL);
;	1521	    UCB[UCB$L_OWNUIC] = 0;
;	1522	    UCB[UCB$W_VPROT] = 0;
;	1523	
;	1524	! Return the condition code in R0.
;	1525	!
;	1526	
;	1527	    MECHANISM[CHF$L_MCH_SAVR0] = .SIGNAL[CHF$L_SIG_NAME];
;	1528	    $UNWIND ();
;	1529	
;	1530	    END;
;	1531	END;					! end of routine KERNEL_HANDLER



							    .GLOBL  MAILBOX_CHANNEL, REAL_AQB, LOG_ENTRY, MTL_ENTRY
							    .GLOBL  IOC$GL_AQBLIST, DEALLOCATE_MEM, SYS$UNWIND

					 0E0C 00A7A KERNEL_HANDLER:
							    .WORD   Save R2,R3,R9,R10,R11				      ; 1390
		         59 00000000G  9F  9E 00A7C 	    MOVAB   @#IOC$GL_AQBLIST, R9				      ;
		         5A 00000000G  9F  9E 00A83 	    MOVAB   @#SYS$SETEXV, R10					      ;
		         5B	0000G  CF  9E 00A8A 	    MOVAB   DEALLOCATE_MEM, R11					      ;
		         53	  04   AC  D0 00A8F 	    MOVL    SIGNAL, R3						      ; 1458
	      00000920   8F	  04   A3  D1 00A93 	    CMPL    4(R3), #2336					      ;
				       01  12 00A9B 	    BNEQ    1$							      ;
					   04 00A9D 	    RET     							      ;
				       7E  7C 00A9E 1$:     CLRQ    -(SP)						      ; 1465
				0000'  CF  DD 00AA0 	    PUSHL   SYSEXV						      ;
				       7E  D4 00AA4 	    CLRL    -(SP)						      ;
		         6A	       04  FB 00AA6 	    CALLS   #4, SYS$SETEXV					      ;
				       7E  7C 00AA9 	    CLRQ    -(SP)						      ; 1466
				0000'  CF  DD 00AAB 	    PUSHL   SYSEXV+4						      ;
				       01  DD 00AAF 	    PUSHL   #1							      ;
		         6A	       04  FB 00AB1 	    CALLS   #4, SYS$SETEXV					      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 7-3
; Digital Equipment Corporation
;
	   0B	  0000G  CF	       03  E1 00AB4 	    BBC     #3, CLEANUP_FLAGS, 2$				      ; 1472
				0000G  CF  DD 00ABA 	    PUSHL   MAILBOX_CHANNEL					      ; 1474
	      00000000G  9F	       01  FB 00ABE 	    CALLS   #1, @#SYS$DASSGN					      ;
	   35	  0000G  CF	       02  E1 00AC5 2$:     BBC     #2, CLEANUP_FLAGS, 6$				      ; 1480
		  0000G  CF	       00  FB 00ACB 	    CALLS   #0, LOCK_IODB					      ; 1483
		         50	       69  D0 00AD0 	    MOVL    IOC$GL_AQBLIST, P					      ; 1484
		         51	0000G  CF  D0 00AD3 	    MOVL    REAL_AQB, R1					      ; 1485
		         51	       50  D1 00AD8 	    CMPL    P, R1						      ;
				       06  12 00ADB 	    BNEQ    3$							      ;
		         69	  10   A1  D0 00ADD 	    MOVL    16(R1), IOC$GL_AQBLIST				      ; 1487
				       11  11 00AE1 	    BRB     5$							      ; 1485
		         51	  10   A0  D1 00AE3 3$:     CMPL    16(P), R1						      ; 1490
				       06  13 00AE7 	    BEQL    4$							      ;
		         50	  10   A0  D0 00AE9 	    MOVL    16(P), P						      ; 1491
				       F4  11 00AED 	    BRB     3$							      ; 1490
		    10   A0	  10   A1  D0 00AEF 4$:     MOVL    16(R1), 16(P)					      ; 1492
				       7E  D4 00AF4 5$:     CLRL    -(SP)						      ; 1494
				       51  DD 00AF6 	    PUSHL   R1							      ;
		         6B	       02  FB 00AF8 	    CALLS   #2, DEALLOCATE_MEM					      ;
		  0000G  CF	       00  FB 00AFB 	    CALLS   #0, UNLOCK_IODB					      ; 1495
		         52	       02  D0 00B00 6$:     MOVL    #2, AREA						      ; 1498
	   05	  0000G  CF	       07  E0 00B03 	    BBS     #7, MOUNT_OPTIONS, 7$				      ; 1499
		         03	0000G  CF  E9 00B09 	    BLBC    MOUNT_OPTIONS+1, 8$					      ; 1500
		         52	       01  D0 00B0E 7$:     MOVL    #1, AREA						      ; 1501
		         50	0000G  CF  D0 00B11 8$:     MOVL    REAL_VCB, R0					      ; 1503
				       07  13 00B16 	    BEQL    9$							      ;
				       7E  D4 00B18 	    CLRL    -(SP)						      ; 1504
				       50  DD 00B1A 	    PUSHL   R0							      ;
		         6B	       02  FB 00B1C 	    CALLS   #2, DEALLOCATE_MEM					      ;
		         50	0000G  CF  D0 00B1F 9$:     MOVL    REAL_RVT, R0					      ; 1506
				       07  13 00B24 	    BEQL    10$							      ;
				       7E  D4 00B26 	    CLRL    -(SP)						      ; 1507
				       50  DD 00B28 	    PUSHL   R0							      ;
		         6B	       02  FB 00B2A 	    CALLS   #2, DEALLOCATE_MEM					      ;
		         50	0000G  CF  D0 00B2D 10$:    MOVL    REAL_MVL, R0					      ; 1509
				       07  13 00B32 	    BEQL    11$							      ;
				       7E  D4 00B34 	    CLRL    -(SP)						      ; 1510
				       50  DD 00B36 	    PUSHL   R0							      ;
		         6B	       02  FB 00B38 	    CALLS   #2, DEALLOCATE_MEM					      ;
		         50	0000G  CF  D0 00B3B 11$:    MOVL    LOG_ENTRY, R0					      ; 1512
				       05  13 00B40 	    BEQL    12$							      ;
				       05  BB 00B42 	    PUSHR   #^M<R0,R2>						      ; 1513
		         6B	       02  FB 00B44 	    CALLS   #2, DEALLOCATE_MEM					      ;
		         50	0000G  CF  D0 00B47 12$:    MOVL    MTL_ENTRY, R0					      ; 1515
				       05  13 00B4C 	    BEQL    13$							      ;
				       05  BB 00B4E 	    PUSHR   #^M<R0,R2>						      ; 1516
		         6B	       02  FB 00B50 	    CALLS   #2, DEALLOCATE_MEM					      ;
				0000G  CF  DD 00B53 13$:    PUSHL   CHANNEL						      ; 1520
		  0000G  CF	       01  FB 00B57 	    CALLS   #1, GET_CHANNELUCB					      ;
				  1C   A0  D4 00B5C 	    CLRL    28(UCB)						      ; 1521
				  1A   A0  B4 00B5F 	    CLRW    26(UCB)						      ; 1522
		         50	  08   AC  D0 00B62 	    MOVL    MECHANISM, R0					      ; 1527
		    0C   A0	  04   A3  D0 00B66 	    MOVL    4(R3), 12(R0)					      ;
				       7E  7C 00B6B 	    CLRQ    -(SP)						      ; 1528
	      00000000G  9F	       02  FB 00B6D 	    CALLS   #2, @#SYS$UNWIND					      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 7-4
; Digital Equipment Corporation
;
					   04 00B74 14$:    RET     							      ; 1390

; Routine Size:  251 bytes


;	1532	

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 8
; Digital Equipment Corporation
;
;	1533	ROUTINE SET_VALID(CHANNEL) : NOVALUE  =
;	1534	
;	1535	!++
;	1536	!
;	1537	! FUNCTIONAL DESCRIPTION:
;	1538	!
;	1539	!	This routine sets the valid bit for the UCB associated with the input channel
;	1540	!
;	1541	!
;	1542	! CALLING SEQUENCE:
;	1543	!	SET_VALID(CHANNEL), called in KERNEL mode
;	1544	!
;	1545	! INPUT PARAMETERS:
;	1546	!	ARG1 - channel number
;	1547	!
;	1548	! IMPLICIT INPUTS:
;	1549	!	NONE
;	1550	!
;	1551	! OUTPUT PARAMETERS:
;	1552	!	NONE
;	1553	!
;	1554	! IMPLICIT OUTPUTS:
;	1555	!	VALID bit set
;	1556	!
;	1557	! ROUTINE VALUE:
;	1558	!	NONE
;	1559	!
;	1560	! SIDE EFFECTS:
;	1561	!	NONE
;	1562	!
;	1563	!--
;	1564	BEGIN
;	1565	
;	1566	LOCAL UCB : REF BBLOCK;
;	1567	
;	1568	EXTERNAL ROUTINE GET_CHANNELUCB;
;	1569	
;	1570	UCB = GET_CHANNELUCB(.CHANNEL);
;	1571	UCB[UCB$V_VALID] = 1;
;	1572	END;				! end of routine SET_VALID





					 0000 00B75 SET_VALID:
							    .WORD   Save nothing					      ; 1533
				  04   AC  DD 00B77 	    PUSHL   CHANNEL						      ; 1570
		  0000G  CF	       01  FB 00B7A 	    CALLS   #1, GET_CHANNELUCB					      ;
		    59   A0	       08  88 00B7F 	    BISB2   #8, 89(UCB)						      ; 1571
					   04 00B83 	    RET     							      ; 1533

; Routine Size:  15 bytes



; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 8-1
; Digital Equipment Corporation
;
;	1573	

; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 9
; Digital Equipment Corporation
;
;	1574	ROUTINE CLEAR_VALID(UCB) : NOVALUE  =
;	1575	
;	1576	!++
;	1577	!
;	1578	! FUNCTIONAL DESCRIPTION:
;	1579	!
;	1580	!	This routine clears the valid bit in the input UCB
;	1581	!
;	1582	!
;	1583	! CALLING SEQUENCE:
;	1584	!	CLEAR_VALID(UCB), called in KERNEL mode
;	1585	!
;	1586	! INPUT PARAMETERS:
;	1587	!	ARG1 - address of UCB
;	1588	!
;	1589	! IMPLICIT INPUTS:
;	1590	!	NONE
;	1591	!
;	1592	! OUTPUT PARAMETERS:
;	1593	!	NONE
;	1594	!
;	1595	! IMPLICIT OUTPUTS:
;	1596	!	VALID bit cleared
;	1597	!
;	1598	! ROUTINE VALUE:
;	1599	!	NONE
;	1600	!
;	1601	! SIDE EFFECTS:
;	1602	!	NONE
;	1603	!
;	1604	!--
;	1605	
;	1606	BEGIN
;	1607	
;	1608	MAP UCB : REF BBLOCK;
;	1609	
;	1610	UCB[UCB$V_VALID] = 0;
;	1611	END;				! end of routine CLEAR_VALID





					 0000 00B84 CLEAR_VALID:
							    .WORD   Save nothing					      ; 1574
		         50	  04   AC  D0 00B86 	    MOVL    UCB, R0						      ; 1610
		    59   A0	       08  8A 00B8A 	    BICB2   #8, 89(R0)						      ;
					   04 00B8E 	    RET     							      ; 1574

; Routine Size:  11 bytes



; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 10
; Digital Equipment Corporation
;
;	1612	ROUTINE ERROR_HANDLER(SIGNAL, MECHANISM)  =
;	1613	
;	1614	!++
;	1615	!
;	1616	! FUNCTIONAL DESCRIPTION:
;	1617	!
;	1618	!	 This routine clears the valid bit for all secondary UCB's
;	1619	!
;	1620	!
;	1621	! CALLING SEQUENCE:
;	1622	!	ERROR_HANDLER()
;	1623	!
;	1624	! INPUT PARAMETERS:
;	1625	!	NONE
;	1626	!
;	1627	! IMPLICIT INPUTS:
;	1628	!	PROTO_RVT - lists all UCB's
;	1629	!
;	1630	! OUTPUT PARAMETERS:
;	1631	!	NONE
;	1632	!
;	1633	! IMPLICIT OUTPUTS:
;	1634	!	NONE
;	1635	!
;	1636	! ROUTINE VALUE:
;	1637	!	NONE
;	1638	!
;	1639	! SIDE EFFECTS:
;	1640	!	NONE
;	1641	!
;	1642	!--
;	1643	
;	1644	BEGIN
;	1645	
;	1646	MAP
;	1647		SIGNAL		: REF BBLOCK,	! SIGNAL VECTOR
;	1648		MECHANISM	: REF BBLOCK;	! MECHANISM VECTOR
;	1649	
;	1650	LOCAL UCBLIST	: REF VECTOR;
;	1651	
;	1652	IF .BBLOCK[SIGNAL[CHF$L_SIG_NAME],STS$V_SEVERITY] EQL STS$K_SEVERE THEN
;	1653	    BEGIN
;	1654	    IF .PROTO_RVT[RVT$B_NVOLS] GTR 1 THEN
;	1655		BEGIN
;	1656	        UCBLIST = PROTO_RVT[RVT$L_UCBLST];
;	1657	        DECR I FROM .PROTO_RVT[RVT$B_NVOLS] - 1 TO 1 DO
;	1658	            KERNEL_CALL(CLEAR_VALID,.UCBLIST[.I]);
;	1659		END;
;	1660	    END;
;	1661	RETURN SS$_RESIGNAL;
;	1662	END;			! end of routine ERROR_HANDLER





; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 10-1
; Digital Equipment Corporation
;

					 000C 00B8F ERROR_HANDLER:
							    .WORD   Save R2,R3						      ; 1612
		         50	  04   AC  D0 00B91 	    MOVL    SIGNAL, R0						      ; 1652
      04   A0	         03	       00  ED 00B95 	    CMPZV   #0, #3, 4(R0), #4					      ;
				       04     00B9A									      ;
				       27  12 00B9B 	    BNEQ    3$							      ;
		         01	0000'  CF  91 00B9D 	    CMPB    PROTO_RVT+11, #1					      ; 1654
				       20  1B 00BA2 	    BLEQU   3$							      ;
		         53	0000'  CF  9E 00BA4 	    MOVAB   PROTO_RVT+12, UCBLIST				      ; 1656
		         52	0000'  CF  9A 00BA9 	    MOVZBL  PROTO_RVT+11, I					      ; 1657
				       11  11 00BAE 	    BRB     2$							      ;
				     6342  DD 00BB0 1$:     PUSHL   (UCBLIST)[I]					      ; 1658
				       01  DD 00BB3 	    PUSHL   #1							      ;
				       5E  DD 00BB5 	    PUSHL   SP							      ;
				  CA   AF  9F 00BB7 	    PUSHAB  CLEAR_VALID						      ;
	      00000000G  9F	       04  FB 00BBA 	    CALLS   #4, @#SYS$CMKRNL					      ;
		         EC	       52  F5 00BC1 2$:     SOBGTR  I, 1$						      ; 1657
		         50	0918   8F  3C 00BC4 3$:     MOVZWL  #2328, R0						      ; 1661
					   04 00BC9 	    RET     							      ; 1612

; Routine Size:  59 bytes


;	1663	
;	1664	END
;	1665	ELUDOM




							    .GLOBL  LIB$SIGNAL, LIB$STOP

;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $OWN$          	   332    WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $PLIT$         	     8  NOWRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $CODE$         	  3018  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]LIB.L32;1		      5582       100         1       302






; Bliss-32 7.352	Saturday 22-AUG-1978 00:05:04	DBB3:[MOUNT.SRC]MOUTAP.B32;53					Page 10-2
; Digital Equipment Corporation
;
; Size:		3018 code + 340 data bytes
; Run Time:	01:42.0
; Elapsed Time:	03:38.9
; Memory Used:	561 pages
; Compilation Complete
