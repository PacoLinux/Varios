
; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 1
; Digital Equipment Corporation
;
;	0001	MODULE MOUPAR (
;	0002			LANGUAGE (BLISS32),
;	0003			IDENT = 'X0014'
;	0004			) =
;	0005	BEGIN
;	0006	
;	0007	!
;	0008	! Copyright (c) 1977
;	0009	! Digital Equipment Corporation, Maynard, Massachusetts 01754
;	0010	!
;	0011	! This software is furnished  under a license for use only on a single
;	0012	! computer  system and  may be  copied only with  the inclusion of the
;	0013	! above copyright notice.  This software, or any other copies thereof,
;	0014	! may not be provided or  otherwise made available to any other person
;	0015	! except for use on such system and to one who agrees to these license
;	0016	! terms.  Title to and  ownership of the  software  shall at all times
;	0017	! remain in DEC.
;	0018	!
;	0019	! The information in this software is subject to change without notice
;	0020	! and should  not be construed  as a commitment  by Digital  Equipment
;	0021	! Corporation.
;	0022	!
;	0023	! DEC assumes  no  responsibility  for  the use or  reliability of its
;	0024	! software on equipment which is not supplied by DEC.
;	0025	
;	0026	!++
;	0027	!
;	0028	! FACILITY:  MOUNT Utility Structure Level 1
;	0029	!
;	0030	! ABSTRACT:
;	0031	!
;	0032	!	This module contains the data base and utilities used to acquire the
;	0033	!	MOUNT command line from the CLI parser.
;	0034	!
;	0035	! ENVIRONMENT:
;	0036	!
;	0037	!	STARLET operating system, including privileged system services
;	0038	!	and internal exec routines.
;	0039	!
;	0040	!--
;	0041	!
;	0042	!
;	0043	! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  29-Sep-1977  16:58
;	0044	!
;	0045	! REVISION HISTORY:
;	0046	!
;	0047	!   D. H. Gillespie, 5-Dec-1977  17:11
;	0048	!   X0002 - PUT DEVMAX AND LABMAX IN MOUDEF.B32
;	0049	!
;	0050	!   D. H. Gillespie, 6-Dec-1977  9:51
;	0051	!   X0003 - CHANGE DEFAULT DENSITY TO 1600 BPI
;	0052	!
;	0053	!   D. H. Gillespie, 16-Dec-1977  15:35
;	0054	!   X0004 - ADD LOGICAL AND PHYSICAL I/O PROTECTION INDICATORS
;	0055	!

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 1-1
; Digital Equipment Corporation
;
;	0056	!   D. H. Gillespie, 19-Dec-1977  13:15
;	0057	!   X0005 - FIX BUG IN PROCESSING MORE THAN ONE LABEL
;	0058	!
;	0059	!   D. H. Gillespie, 13-Jan-1978  10:41
;	0060	!   X0006 - Fix DRIVES_ACT bug
;	0061	!
;	0062	!   Andrew C. Goldstein, 2-Feb-1978  11:23
;	0063	!   X0007 - Make ':' optional in /PROC=SAME switch
;	0064	!
;	0065	!   Andrew C. Goldstein, 22-Feb-1978  13:01
;	0066	!   X0008 - Add /DATACHECK switch
;	0067	!
;	0068	!   Andrew C. Goldstein, 7-Mar-1978  11:34
;	0069	!   X0009 - Remove trailing colon from logical name
;	0070	!
;	0071	!   Andrew C. Goldstein, 2-May-78  18:49
;	0072	!   X0010 - Add explicit absolute address parameter to $CLIREQDESC calls
;	0073	!
;	0074	!   D. H. Gillespie, 2-Jun-78  9:24
;	0075	!   X0011 - add /RECORD:value
;	0076	!
;	0077	!   D. H. Gillespie, 7-Jun-78  15:45
;	0078	!   X0012 - add OPT_DRIVES and OPT_OVR_ACC
;	0079	!
;	0080	!   Andrew C. Goldstein, 15-Jun-78  15:05
;	0081	!   X0013 - Make : or = optional for no access protection
;	0082	!
;	0083	!   D. H. Gillespie, 19-Jul-78  13:02
;	0084	!   X0014 - add range check for value of /BLOCK and /RECORD
;	0085	!
;	0086	!**
;	0087	
;	0088	
;	0089	LIBRARY 'SYS$LIBRARY:LIB.L32';
;	0090	REQUIRE 'SRC$:MOUDEF.B32';
;	0397	REQUIRE 'LIBD$:[VMSLIB.OBJ]MOUNTMSG.B32';
;	0497	LIBRARY 'SYS$LIBRARY:CLIMAC.L32';
;	0498	LIBRARY 'SYS$LIBRARY:TPAMAC.L32';

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 2
; Digital Equipment Corporation
;
;	0499	!+
;	0500	!
;	0501	! Impure data area. This area contains the MOUNT parameters extracted from
;	0502	! the command line by the associated parsing routines.
;	0503	!
;	0504	!-
;	0505	
;	0506	
;	0507	GLOBAL
;	0508		MOUNT_OPTIONS	: BITVECTOR [64], ! option flags
;	0509		PROTECTION,			! value of /PROTECTION switch
;	0510		OWNER_UIC,			! value of /OWNER_UIC switch
;	0511		USER_UIC,			! value of /USER_UIC switch
;	0512		EXTENSION,			! value of /EXTENSION switch
;	0513		WINDOW,				! value of /WINDOW switch
;	0514		ACCESSED,			! value of /ACCESSED switch
;	0515		BLOCKSIZE,			! value of /BLOCK switch
;	0516		RECORDSZ,			! value of /RECORD switch
;	0517		DEVICE_COUNT,			! number of devices specified
;	0518		LABEL_COUNT,			! number of volume labels specified
;	0519		VID_STRING	: VECTOR [2],	! descriptor of VISUAL_ID string
;	0520		COMMENT_STRING	: VECTOR [2],	! descriptor of COMMENT string
;	0521		ACP_STRING	: VECTOR [2],	! descriptor of ACP device or name string
;	0522		LOG_NAME	: VECTOR [2],	! descriptor of logical name string
;	0523		DRIVE_COUNT	: VECTOR [DEVMAX], ! value of /DRIVES switch
;	0524		DEVICE_STRING	: VECTOR [DEVMAX*2], ! descriptors of device name strings
;	0525		LABEL_STRING	: VECTOR [LABMAX*2], ! descriptors of volume label strings
;	0526	
;	0527		PARSE_IMP_END	: VECTOR [0];	! end of data area
;	0528	
;	0529	LITERAL
;	0530		PARSE_IMP_LEN	= PARSE_IMP_END - MOUNT_OPTIONS;
;	0531	
;	0532	
;	0533	!
;	0534	! Assorted impure data.
;	0535	!
;	0536	
;	0537	OWN
;	0538		CLI_WORK_AREA	: BBLOCK [CLI$K_WORKAREA],
;	0539		TPARSE_BLOCK	: BBLOCK [TPA$K_LENGTH0]
;	0540				  INITIAL (TPA$K_COUNT0, TPA$M_BLANKS OR TPA$M_ABBREV),
;	0541		UIC;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 3
; Digital Equipment Corporation
;
;	0542	!+
;	0543	!
;	0544	! Request descriptors to the CLI parser. Labels are deemed sufficiently
;	0545	! obvious to make cluttering the code with comments unnecessary.
;	0546	!
;	0547	!-
;	0548	
;	0549	FORWARD ROUTINE
;	0550		PARSE_ERROR	: NOVALUE,
;	0551		DENSITY_ACT	: NOVALUE,
;	0552		VID_ACT		: NOVALUE,
;	0553		COMMENT_ACT	: NOVALUE,
;	0554		BLOCK_ACT	: NOVALUE,
;	0555		SHARE_ACT	: NOVALUE,
;	0556		NOLABEL_ACT,
;	0557		EBCDIC_ACT	: NOVALUE,
;	0558		PROTECTION_ACT	: NOVALUE,
;	0559		DATACHECK_ACT	: NOVALUE,
;	0560		OWNER_UIC_ACT	: NOVALUE,
;	0561		USER_UIC_ACT	: NOVALUE,
;	0562		OVERRIDE_ACT	: NOVALUE,
;	0563		EXTENSION_ACT	: NOVALUE,
;	0564		WINDOW_ACT	: NOVALUE,
;	0565		ACCESSED_ACT	: NOVALUE,
;	0566		PROCESSOR_ACT	: NOVALUE,
;	0567		DEVICE_ACT	: NOVALUE,
;	0568		LABEL_ACT	: NOVALUE,
;	0569		LOG_NAME_ACT	: NOVALUE,
;	0570		DRIVES_ACT	: NOVALUE,
;	0571		RECORD_ACT	: NOVALUE;
;	0572	
;	0573	$CLIQUALCODES (MOUNT,
;     P 0574		DENSITY,
;     P 0575		VISUAL_IDENT,
;     P 0576		COMMENT,
;     P 0577		SHARE,
;     P 0578		GROUP,
;     P 0579		SYSTEM,
;     P 0580		WRITE,
;     P 0581		UNLOCK,
;     P 0582		FOREIGN,
;     P 0583		LABEL,
;     P 0584		BLOCK,
;     P 0585		EBCDIC,
;     P 0586		PROTECTION,
;     P 0587		DATACHECK,
;     P 0588		OWNER_UIC,
;     P 0589		USER_UIC,
;     P 0590		OVERRIDE,
;     P 0591		EXTENSION,
;     P 0592		WINDOW,
;     P 0593		ACCESSED,
;     P 0594		PROCESSOR,
;     P 0595		DRIVES,
;     P 0596		RECO

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 3-1
; Digital Equipment Corporation
;
;     P 0597		);
;	0598	
;	0599	! CLI request and qualifier descriptor blocks. Note that the ordering of
;	0600	! the qualifier descriptors is critical because of interrelated bit list
;	0601	! processing. Note also that correct operation of this parser is critically
;	0602	! dependent on the advertised order of CLI processing: first establish the
;	0603	! state of all qualifiers, using explicit and default data, then setting and
;	0604	! clearing the bit set and clear lists, then testing the bit test lists, and
;	0605	! finally calling all of the action routines. Within each step, the qualifiers
;	0606	! are processed in the order listed.
;	0607	!
;	0608	
;	0609	OWN
;	0610		INIT_PARSE	: $CLIREQDESC (RQTYPE = INITPRS,
;     P 0611					RQFLGS = ABSADR,
;     P 0612					ERRACT = PARSE_ERROR
;     P 0613				),
;	0614		END_PARAM1	: $CLIREQDESC (RQTYPE = ENDPRM1,
;     P 0615					RQFLGS = ABSADR,
;     P 0616					ERRACT = PARSE_ERROR
;     P 0617				),
;	0618		END_PARAM2	: $CLIREQDESC (RQTYPE = ENDPRM2,
;     P 0619					RQFLGS = ABSADR,
;     P 0620					ERRACT = PARSE_ERROR
;     P 0621				),
;	0622		END_PARAM3	: $CLIREQDESC (RQTYPE = ENDPRM3,
;     P 0623					RQFLGS = ABSADR,
;     P 0624					ERRACT = PARSE_ERROR
;     P 0625				),
;	0626	
;	0627		DENSITY_Q	: $CLIQUALDESC (
;     P 0628					QDCODE = DENSITY,
;     P 0629					SETLST = OPT_DENSITY,
;     P 0630					TRUACT = DENSITY_ACT
;     P 0631				),
;	0632		VID_Q		: $CLIQUALDESC (
;     P 0633					QDCODE = VISUAL_IDENT,
;     P 0634					TRUACT = VID_ACT
;     P 0635				),
;	0636		COMMENT_Q	: $CLIQUALDESC (
;     P 0637					QDCODE = COMMENT,
;     P 0638					TRUACT = COMMENT_ACT
;     P 0639				),
;	0640		OVERRIDE_Q	: $CLIQUALDESC (
;     P 0641					QDCODE = OVERRIDE,
;     P 0642					TRUACT = OVERRIDE_ACT
;     P 0643				),
;	0644		SHARE_Q		: $CLIQUALDESC (
;     P 0645					QDCODE = SHARE,
;     P 0646					SETLST = OPT_SHARE,
;     P 0647					CLRLST = OPT_NOSHARE,
;     P 0648					FLSACT = SHARE_ACT
;     P 0649				),
;	0650		GROUP_Q		: $CLIQUALDESC (
;     P 0651					QDCODE = GROUP,

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 3-2
; Digital Equipment Corporation
;
;     P 0652					SETLST = OPT_GROUP,
;     P 0653					TSTLST = OPT_SHARE
;     P 0654				),
;	0655		SYSTEM_Q	: $CLIQUALDESC (
;     P 0656					QDCODE = SYSTEM,
;     P 0657					SETLST = OPT_SYSTEM,
;     P 0658					TSTLST = (OPT_SHARE, OPT_GROUP)
;     P 0659				),
;	0660		WRITE_Q		: $CLIQUALDESC (
;     P 0661					QDCODE = WRITE,
;     P 0662					SETLST = OPT_WRITE
;     P 0663				),
;	0664		LABEL_Q		: $CLIQUALDESC (
;     P 0665					QDCODE = LABEL,
;     P 0666					CLRLST = OPT_NOLABEL,
;     P 0667					FLSACT = NOLABEL_ACT
;     P 0668				),
;	0669		FOREIGN_Q	: $CLIQUALDESC (
;     P 0670					QDCODE = FOREIGN,
;     P 0671					SETLST = OPT_FOREIGN,
;     P 0672					TSTLST = OPT_NOLABEL,
;     P 0673					TRUACT = NOLABEL_ACT
;     P 0674				),
;	0675		UNLOCK_Q	: $CLIQUALDESC (
;     P 0676					QDCODE = UNLOCK,
;     P 0677					SETLST = OPT_UNLOCK,
;     P 0678					TSTLST = (OPT_FOREIGN, OPT_SHARE, OPT_GROUP, OPT_SYSTEM)
;     P 0679				),
;	0680		BLOCK_Q		: $CLIQUALDESC (
;     P 0681					QDCODE = BLOCK,
;     P 0682					SETLST = OPT_BLOCK,
;     P 0683					TRUACT = BLOCK_ACT
;     P 0684				),
;	0685		REC_Q		: $CLIQUALDESC (
;     P 0686					QDCODE = RECO,
;     P 0687					SETLST = OPT_RECORDSZ,
;     P 0688					TRUACT = RECORD_ACT
;     P 0689				),
;	0690		EBCDIC_Q	: $CLIQUALDESC (
;     P 0691					QDCODE = EBCDIC,
;     P 0692					TSTLST = OPT_FOREIGN,
;     P 0693					TRUACT = EBCDIC_ACT
;     P 0694				),
;	0695		PROTECTION_Q	: $CLIQUALDESC (
;     P 0696					QDCODE = PROTECTION,
;     P 0697					SETLST = OPT_PROTECTION,
;     P 0698					TRUACT = PROTECTION_ACT
;     P 0699				),
;	0700		DATACHECK_Q	: $CLIQUALDESC (
;     P 0701					QDCODE = DATACHECK,
;     P 0702					TRUACT = DATACHECK_ACT
;     P 0703				),
;	0704		OWNER_UIC_Q	: $CLIQUALDESC (
;     P 0705					QDCODE = OWNER_UIC,
;     P 0706					SETLST = OPT_OWNER_UIC,

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 3-3
; Digital Equipment Corporation
;
;     P 0707					TRUACT = OWNER_UIC_ACT
;     P 0708				),
;	0709		USER_UIC_Q	: $CLIQUALDESC (
;     P 0710					QDCODE = USER_UIC,
;     P 0711					SETLST = OPT_USER_UIC,
;     P 0712					TRUACT = USER_UIC_ACT
;     P 0713				),
;	0714		EXTENSION_Q	: $CLIQUALDESC (
;     P 0715					QDCODE = EXTENSION,
;     P 0716					SETLST = OPT_EXTENSION,
;     P 0717					TSTLST = OPT_FOREIGN,
;     P 0718					TRUACT = EXTENSION_ACT
;     P 0719				),
;	0720		WINDOW_Q	: $CLIQUALDESC (
;     P 0721					QDCODE = WINDOW,
;     P 0722					SETLST = OPT_WINDOW,
;     P 0723					TSTLST = OPT_FOREIGN,
;     P 0724					TRUACT = WINDOW_ACT
;     P 0725				),
;	0726		ACCESSED_Q	: $CLIQUALDESC (
;     P 0727					QDCODE = ACCESSED,
;     P 0728					SETLST = OPT_ACCESSED,
;     P 0729					TSTLST = OPT_FOREIGN,
;     P 0730					TRUACT = ACCESSED_ACT
;     P 0731				),
;	0732		PROCESSOR_Q	: $CLIQUALDESC (
;     P 0733					QDCODE = PROCESSOR,
;     P 0734					TSTLST = OPT_FOREIGN,
;     P 0735					TRUACT = PROCESSOR_ACT
;     P 0736				),
;	0737		DRIVES_Q	: $CLIQUALDESC (
;     P 0738					QDCODE = DRIVES,
;     P 0739					TRUACT = DRIVES_ACT
;     P 0740				),
;	0741		QUAL_END	: $CLIQUALEND,
;	0742	
;	0743	
;	0744		GET_QUAL	: $CLIREQDESC (RQTYPE = GETQUAL,
;     P 0745					RQFLGS = ABSADR,
;     P 0746					QUALST = DENSITY_Q,
;     P 0747					ERRACT = PARSE_ERROR
;     P 0748				),
;	0749		GET_DEVICE	: $CLIREQDESC (RQTYPE = INPUT1,
;     P 0750					RQFLGS = (ABSADR, PARMREQ),
;     P 0751					BITNUM = OPT_DEVICE,
;     P 0752					QUALST = DRIVES_Q,
;     P 0753					PRSACT = DEVICE_ACT,
;     P 0754					ERRACT = PARSE_ERROR
;     P 0755				),
;	0756		GET_LABEL	: $CLIREQDESC (RQTYPE = INPUT2,
;     P 0757					RQFLGS = (ABSADR, PARMREQ),
;     P 0758					BITNUM = OPT_LABEL,
;     P 0759					PRSACT = LABEL_ACT,
;     P 0760					ERRACT = PARSE_ERROR
;     P 0761				),

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 3-4
; Digital Equipment Corporation
;
;	0762		GET_LOG_NAME	: $CLIREQDESC (RQTYPE = INPUT3,
;     P 0763					RQFLGS = ABSADR,
;     P 0764					BITNUM = OPT_LOG_NAME,
;     P 0765					PRSACT = LOG_NAME_ACT,
;     P 0766					ERRACT = PARSE_ERROR
;     P 0767				),
;	0768		CONVERT_NUMBER	: $CLIREQDESC (RQTYPE = NUMERVAL,
;     P 0769					RQFLGS = (ABSADR, LASTVAL),
;     P 0770					ERRACT = PARSE_ERROR
;     P 0771				);

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 4
; Digital Equipment Corporation
;
;	0772	GLOBAL ROUTINE MOUNT_PARSE (CLI_CALLBACK) : NOVALUE =
;	0773	
;	0774	!++
;	0775	!
;	0776	! FUNCTIONAL DESCRIPTION:
;	0777	!
;	0778	!	This routine parses the MOUNT command line by calling the CLI
;	0779	!	result parse routines, and leaves the results in the global data
;	0780	!	area.
;	0781	!
;	0782	!
;	0783	! CALLING SEQUENCE:
;	0784	!	MOUNT_PARSE (ARG1)
;	0785	!
;	0786	! INPUT PARAMETERS:
;	0787	!	ARG1: address of CLI service routine
;	0788	!
;	0789	! IMPLICIT INPUTS:
;	0790	!	NONE
;	0791	!
;	0792	! OUTPUT PARAMETERS:
;	0793	!	NONE
;	0794	!
;	0795	! IMPLICIT OUTPUTS:
;	0796	!	parser impure area on preceding pages
;	0797	!
;	0798	! ROUTINE VALUE:
;	0799	!	NONE
;	0800	!
;	0801	! SIDE EFFECTS:
;	0802	!	NONE
;	0803	!
;	0804	!--
;	0805	
;	0806	BEGIN
;	0807	
;	0808	
;	0809	! Initialize result parsing.
;	0810	!
;	0811	
;	0812	MOUNT_OPTIONS = MOUNT_OPTIONS+4 = 0;
;	0813	MOUNT_OPTIONS[OPT_NOSHARE] = 1;
;	0814	MOUNT_OPTIONS[OPT_NOLABEL] = 1;
;	0815	
;	0816	(.CLI_CALLBACK) (INIT_PARSE, CLI_WORK_AREA);
;	0817	
;	0818	! Parse command qualifiers. (Most of the action routines are called during
;	0819	! this call.)
;	0820	!
;	0821	
;	0822	(.CLI_CALLBACK) (GET_QUAL, CLI_WORK_AREA, MOUNT_OPTIONS);
;	0823	
;	0824	! Now acquire device names.
;	0825	!
;	0826	

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 4-1
; Digital Equipment Corporation
;
;	0827	DO (.CLI_CALLBACK) (GET_DEVICE, CLI_WORK_AREA, MOUNT_OPTIONS)
;	0828	WHILE .GET_DEVICE[CLI$V_CONCATINP];
;	0829	
;	0830	(.CLI_CALLBACK) (END_PARAM1, CLI_WORK_AREA);
;	0831	
;	0832	! Now acquire volume names.
;	0833	!
;	0834	
;	0835	DO (.CLI_CALLBACK) (GET_LABEL, CLI_WORK_AREA, MOUNT_OPTIONS)
;	0836	WHILE .GET_LABEL[CLI$V_CONCATINP];
;	0837	
;	0838	(.CLI_CALLBACK) (END_PARAM2, CLI_WORK_AREA);
;	0839	
;	0840	! Finally get optional logical name.
;	0841	!
;	0842	
;	0843	(.CLI_CALLBACK) (GET_LOG_NAME, CLI_WORK_AREA, MOUNT_OPTIONS);
;	0844	
;	0845	(.CLI_CALLBACK) (END_PARAM3, CLI_WORK_AREA);
;	0846	
;	0847	! Do post parsing fixups.
;	0848	!
;	0849	
;	0850	IF NOT .MOUNT_OPTIONS[OPT_LABEL]	! if no label given
;	0851	THEN
;	0852	    BEGIN				! construct null label string
;	0853	    LABEL_STRING[0] = 0;
;	0854	    LABEL_STRING[1] = LABEL_STRING[1];
;	0855	    END;
;	0856	
;	0857	IF .MOUNT_OPTIONS[OPT_OVR_ID]
;	0858	AND NOT .MOUNT_OPTIONS[OPT_NOSHARE]
;	0859	THEN ERR_EXIT (MOUN$_CONFQUAL);
;	0860	
;	0861	END;					! end of routine MOUNT_PARSE


							    .TITLE  MOUPAR
							    .IDENT  \X0014\

							    .PSECT  $OWN$,NOEXE,2

					      00000 CLI_WORK_AREA:
							    .BLKB   128
					      00080 TPARSE_BLOCK:
							    .LONG   8, 3						      ;
					      00088	    .BLKB   28
					      000A4 UIC:    .BLKB   4
					      000A8 INIT_PARSE:
							    .BYTE   0							      ;
					      000A9 	    .BYTE   0							      ;
					      000AA 	    .BYTE   2							      ;
					      000AB 	    .BYTE   0							      ;
					      000AC 	    .ADDRESS  PARSE_ERROR					      ;
					      000B0 	    .LONG   0, 0						      ;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 4-2
; Digital Equipment Corporation
;
					      000B8 	    .LONG   0							      ;
					      000BC 	    .LONG   0							      ;
					      000C0 	    .LONG   0							      ;
					      000C4 END_PARAM1:
							    .BYTE   48							      ;
					      000C5 	    .BYTE   0							      ;
					      000C6 	    .BYTE   2							      ;
					      000C7 	    .BYTE   0							      ;
					      000C8 	    .ADDRESS  PARSE_ERROR					      ;
					      000CC 	    .LONG   0, 0						      ;
					      000D4 	    .LONG   0							      ;
					      000D8 	    .LONG   0							      ;
					      000DC 	    .LONG   0							      ;
					      000E0 END_PARAM2:
							    .BYTE   49							      ;
					      000E1 	    .BYTE   0							      ;
					      000E2 	    .BYTE   2							      ;
					      000E3 	    .BYTE   0							      ;
					      000E4 	    .ADDRESS  PARSE_ERROR					      ;
					      000E8 	    .LONG   0, 0						      ;
					      000F0 	    .LONG   0							      ;
					      000F4 	    .LONG   0							      ;
					      000F8 	    .LONG   0							      ;
					      000FC END_PARAM3:
							    .BYTE   50							      ;
					      000FD 	    .BYTE   0							      ;
					      000FE 	    .BYTE   2							      ;
					      000FF 	    .BYTE   0							      ;
					      00100 	    .ADDRESS  PARSE_ERROR					      ;
					      00104 	    .LONG   0, 0						      ;
					      0010C 	    .LONG   0							      ;
					      00110 	    .LONG   0							      ;
					      00114 	    .LONG   0							      ;
					      00118 DENSITY_Q:
							    .BYTE   24							      ;
					      00119 	    .BYTE    CLI$K_MOUN_DENS					      ;
					      0011A 	    .BYTE   0							      ;
					      0011B 	    .BYTE   0							      ;
					      0011C 	    .LONG   0, 0						      ;
					      00124 	    .ADDRESS  DENSITY_ACT					      ;
					      00128 	    .LONG   0							      ;
					      0012C 	    .BYTE   0							      ;
					      0012D 	    .BYTE   1, 0						      ;
					      0012F 	    .BYTE   0							      ;
					      00130 VID_Q:  .BYTE   23							      ;
					      00131 	    .BYTE    CLI$K_MOUN_VISU					      ;
					      00132 	    .BYTE   0							      ;
					      00133 	    .BYTE   0							      ;
					      00134 	    .LONG   0, 0						      ;
					      0013C 	    .ADDRESS  VID_ACT						      ;
					      00140 	    .LONG   0							      ;
					      00144 	    .BYTE   0							      ;
					      00145 	    .BYTE   0							      ;
					      00146 	    .BYTE   0							      ;
					      00147 COMMENT_Q:

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 4-3
; Digital Equipment Corporation
;
							    .BYTE   23							      ;
					      00148 	    .BYTE    CLI$K_MOUN_COMM					      ;
					      00149 	    .BYTE   0							      ;
					      0014A 	    .BYTE   0							      ;
					      0014B 	    .LONG   0, 0						      ;
					      00153 	    .ADDRESS  COMMENT_ACT					      ;
					      00157 	    .LONG   0							      ;
					      0015B 	    .BYTE   0							      ;
					      0015C 	    .BYTE   0							      ;
					      0015D 	    .BYTE   0							      ;
					      0015E OVERRIDE_Q:
							    .BYTE   23							      ;
					      0015F 	    .BYTE    CLI$K_MOUN_OVER					      ;
					      00160 	    .BYTE   0							      ;
					      00161 	    .BYTE   0							      ;
					      00162 	    .LONG   0, 0						      ;
					      0016A 	    .ADDRESS  OVERRIDE_ACT					      ;
					      0016E 	    .LONG   0							      ;
					      00172 	    .BYTE   0							      ;
					      00173 	    .BYTE   0							      ;
					      00174 	    .BYTE   0							      ;
					      00175 SHARE_Q:.BYTE   25							      ;
					      00176 	    .BYTE    CLI$K_MOUN_SHAR					      ;
					      00177 	    .BYTE   0							      ;
					      00178 	    .BYTE   0							      ;
					      00179 	    .LONG   0, 0						      ;
					      00181 	    .LONG   0							      ;
					      00185 	    .ADDRESS  SHARE_ACT						      ;
					      00189 	    .BYTE   0							      ;
					      0018A 	    .BYTE   1, 6						      ;
					      0018C 	    .BYTE   1, 4						      ;
					      0018E GROUP_Q:.BYTE   25							      ;
					      0018F 	    .BYTE    CLI$K_MOUN_GROU					      ;
					      00190 	    .BYTE   0							      ;
					      00191 	    .BYTE   0							      ;
					      00192 	    .LONG   0, 0						      ;
					      0019A 	    .LONG   0							      ;
					      0019E 	    .LONG   0							      ;
					      001A2 	    .BYTE   1, 6						      ;
					      001A4 	    .BYTE   1, 7						      ;
					      001A6 	    .BYTE   0							      ;
					      001A7 SYSTEM_Q:
							    .BYTE   26							      ;
					      001A8 	    .BYTE    CLI$K_MOUN_SYST					      ;
					      001A9 	    .BYTE   0							      ;
					      001AA 	    .BYTE   0							      ;
					      001AB 	    .LONG   0, 0						      ;
					      001B3 	    .LONG   0							      ;
					      001B7 	    .LONG   0							      ;
					      001BB 	    .BYTE   2, 6, 7						      ;
					      001BE 	    .BYTE   1, 8						      ;
					      001C0 	    .BYTE   0							      ;
					      001C1 WRITE_Q:.BYTE   24							      ;
					      001C2 	    .BYTE    CLI$K_MOUN_WRIT					      ;
					      001C3 	    .BYTE   0							      ;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 4-4
; Digital Equipment Corporation
;
					      001C4 	    .BYTE   0							      ;
					      001C5 	    .LONG   0, 0						      ;
					      001CD 	    .LONG   0							      ;
					      001D1 	    .LONG   0							      ;
					      001D5 	    .BYTE   0							      ;
					      001D6 	    .BYTE   1, 9						      ;
					      001D8 	    .BYTE   0							      ;
					      001D9 LABEL_Q:.BYTE   24							      ;
					      001DA 	    .BYTE    CLI$K_MOUN_LABE					      ;
					      001DB 	    .BYTE   0							      ;
					      001DC 	    .BYTE   0							      ;
					      001DD 	    .LONG   0, 0						      ;
					      001E5 	    .LONG   0							      ;
					      001E9 	    .ADDRESS  NOLABEL_ACT					      ;
					      001ED 	    .BYTE   0							      ;
					      001EE 	    .BYTE   0							      ;
					      001EF 	    .BYTE   1, 12						      ;
					      001F1 FOREIGN_Q:
							    .BYTE   25							      ;
					      001F2 	    .BYTE    CLI$K_MOUN_FORE					      ;
					      001F3 	    .BYTE   0							      ;
					      001F4 	    .BYTE   0							      ;
					      001F5 	    .LONG   0, 0						      ;
					      001FD 	    .ADDRESS  NOLABEL_ACT					      ;
					      00201 	    .LONG   0							      ;
					      00205 	    .BYTE   1, 12						      ;
					      00207 	    .BYTE   1, 11						      ;
					      00209 	    .BYTE   0							      ;
					      0020A UNLOCK_Q:
							    .BYTE   28							      ;
					      0020B 	    .BYTE    CLI$K_MOUN_UNLO					      ;
					      0020C 	    .BYTE   0							      ;
					      0020D 	    .BYTE   0							      ;
					      0020E 	    .LONG   0, 0						      ;
					      00216 	    .LONG   0							      ;
					      0021A 	    .LONG   0							      ;
					      0021E 	    .BYTE   4, 11, 6, 7, 8					      ;
					      00223 	    .BYTE   1, 10						      ;
					      00225 	    .BYTE   0							      ;
					      00226 BLOCK_Q:.BYTE   24							      ;
					      00227 	    .BYTE    CLI$K_MOUN_BLOC					      ;
					      00228 	    .BYTE   0							      ;
					      00229 	    .BYTE   0							      ;
					      0022A 	    .LONG   0, 0						      ;
					      00232 	    .ADDRESS  BLOCK_ACT						      ;
					      00236 	    .LONG   0							      ;
					      0023A 	    .BYTE   0							      ;
					      0023B 	    .BYTE   1, 15						      ;
					      0023D 	    .BYTE   0							      ;
					      0023E REC_Q:  .BYTE   24							      ;
					      0023F 	    .BYTE    CLI$K_MOUN_RECO					      ;
					      00240 	    .BYTE   0							      ;
					      00241 	    .BYTE   0							      ;
					      00242 	    .LONG   0, 0						      ;
					      0024A 	    .ADDRESS  RECORD_ACT					      ;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 4-5
; Digital Equipment Corporation
;
					      0024E 	    .LONG   0							      ;
					      00252 	    .BYTE   0							      ;
					      00253 	    .BYTE   1, 37						      ;
					      00255 	    .BYTE   0							      ;
					      00256 EBCDIC_Q:
							    .BYTE   24							      ;
					      00257 	    .BYTE    CLI$K_MOUN_EBCD					      ;
					      00258 	    .BYTE   0							      ;
					      00259 	    .BYTE   0							      ;
					      0025A 	    .LONG   0, 0						      ;
					      00262 	    .ADDRESS  EBCDIC_ACT					      ;
					      00266 	    .LONG   0							      ;
					      0026A 	    .BYTE   1, 11						      ;
					      0026C 	    .BYTE   0							      ;
					      0026D 	    .BYTE   0							      ;
					      0026E PROTECTION_Q:
							    .BYTE   24							      ;
					      0026F 	    .BYTE    CLI$K_MOUN_PROT					      ;
					      00270 	    .BYTE   0							      ;
					      00271 	    .BYTE   0							      ;
					      00272 	    .LONG   0, 0						      ;
					      0027A 	    .ADDRESS  PROTECTION_ACT					      ;
					      0027E 	    .LONG   0							      ;
					      00282 	    .BYTE   0							      ;
					      00283 	    .BYTE   1, 17						      ;
					      00285 	    .BYTE   0							      ;
					      00286 DATACHECK_Q:
							    .BYTE   23							      ;
					      00287 	    .BYTE    CLI$K_MOUN_DATA					      ;
					      00288 	    .BYTE   0							      ;
					      00289 	    .BYTE   0							      ;
					      0028A 	    .LONG   0, 0						      ;
					      00292 	    .ADDRESS  DATACHECK_ACT					      ;
					      00296 	    .LONG   0							      ;
					      0029A 	    .BYTE   0							      ;
					      0029B 	    .BYTE   0							      ;
					      0029C 	    .BYTE   0							      ;
					      0029D OWNER_UIC_Q:
							    .BYTE   24							      ;
					      0029E 	    .BYTE    CLI$K_MOUN_OWNE					      ;
					      0029F 	    .BYTE   0							      ;
					      002A0 	    .BYTE   0							      ;
					      002A1 	    .LONG   0, 0						      ;
					      002A9 	    .ADDRESS  OWNER_UIC_ACT					      ;
					      002AD 	    .LONG   0							      ;
					      002B1 	    .BYTE   0							      ;
					      002B2 	    .BYTE   1, 18						      ;
					      002B4 	    .BYTE   0							      ;
					      002B5 USER_UIC_Q:
							    .BYTE   24							      ;
					      002B6 	    .BYTE    CLI$K_MOUN_USER					      ;
					      002B7 	    .BYTE   0							      ;
					      002B8 	    .BYTE   0							      ;
					      002B9 	    .LONG   0, 0						      ;
					      002C1 	    .ADDRESS  USER_UIC_ACT					      ;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 4-6
; Digital Equipment Corporation
;
					      002C5 	    .LONG   0							      ;
					      002C9 	    .BYTE   0							      ;
					      002CA 	    .BYTE   1, 19						      ;
					      002CC 	    .BYTE   0							      ;
					      002CD EXTENSION_Q:
							    .BYTE   25							      ;
					      002CE 	    .BYTE    CLI$K_MOUN_EXTE					      ;
					      002CF 	    .BYTE   0							      ;
					      002D0 	    .BYTE   0							      ;
					      002D1 	    .LONG   0, 0						      ;
					      002D9 	    .ADDRESS  EXTENSION_ACT					      ;
					      002DD 	    .LONG   0							      ;
					      002E1 	    .BYTE   1, 11						      ;
					      002E3 	    .BYTE   1, 23						      ;
					      002E5 	    .BYTE   0							      ;
					      002E6 WINDOW_Q:
							    .BYTE   25							      ;
					      002E7 	    .BYTE    CLI$K_MOUN_WIND					      ;
					      002E8 	    .BYTE   0							      ;
					      002E9 	    .BYTE   0							      ;
					      002EA 	    .LONG   0, 0						      ;
					      002F2 	    .ADDRESS  WINDOW_ACT					      ;
					      002F6 	    .LONG   0							      ;
					      002FA 	    .BYTE   1, 11						      ;
					      002FC 	    .BYTE   1, 24						      ;
					      002FE 	    .BYTE   0							      ;
					      002FF ACCESSED_Q:
							    .BYTE   25							      ;
					      00300 	    .BYTE    CLI$K_MOUN_ACCE					      ;
					      00301 	    .BYTE   0							      ;
					      00302 	    .BYTE   0							      ;
					      00303 	    .LONG   0, 0						      ;
					      0030B 	    .ADDRESS  ACCESSED_ACT					      ;
					      0030F 	    .LONG   0							      ;
					      00313 	    .BYTE   1, 11						      ;
					      00315 	    .BYTE   1, 25						      ;
					      00317 	    .BYTE   0							      ;
					      00318 PROCESSOR_Q:
							    .BYTE   24							      ;
					      00319 	    .BYTE    CLI$K_MOUN_PROC					      ;
					      0031A 	    .BYTE   0							      ;
					      0031B 	    .BYTE   0							      ;
					      0031C 	    .LONG   0, 0						      ;
					      00324 	    .ADDRESS  PROCESSOR_ACT					      ;
					      00328 	    .LONG   0							      ;
					      0032C 	    .BYTE   1, 11						      ;
					      0032E 	    .BYTE   0							      ;
					      0032F 	    .BYTE   0							      ;
					      00330 DRIVES_Q:
							    .BYTE   23							      ;
					      00331 	    .BYTE    CLI$K_MOUN_DRIV					      ;
					      00332 	    .BYTE   0							      ;
					      00333 	    .BYTE   0							      ;
					      00334 	    .LONG   0, 0						      ;
					      0033C 	    .ADDRESS  DRIVES_ACT					      ;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 4-7
; Digital Equipment Corporation
;
					      00340 	    .LONG   0							      ;
					      00344 	    .BYTE   0							      ;
					      00345 	    .BYTE   0							      ;
					      00346 	    .BYTE   0							      ;
					      00347 QUAL_END:
							    .BYTE   0							      ;
					      00348 GET_QUAL:
							    .BYTE   2							      ;
					      00349 	    .BYTE   0							      ;
					      0034A 	    .BYTE   2							      ;
					      0034B 	    .BYTE   0							      ;
					      0034C 	    .ADDRESS  PARSE_ERROR					      ;
					      00350 	    .LONG   0, 0						      ;
					      00358 	    .LONG   0							      ;
					      0035C 	    .LONG   0							      ;
					      00360 	    .ADDRESS  DENSITY_Q						      ;
					      00364 GET_DEVICE:
							    .BYTE   16							      ;
					      00365 	    .BYTE   30							      ;
					      00366 	    .BYTE   3							      ;
					      00367 	    .BYTE   0							      ;
					      00368 	    .ADDRESS  PARSE_ERROR					      ;
					      0036C 	    .LONG   0, 0						      ;
					      00374 	    .ADDRESS  DEVICE_ACT					      ;
					      00378 	    .LONG   0							      ;
					      0037C 	    .ADDRESS  DRIVES_Q						      ;
					      00380 GET_LABEL:
							    .BYTE   17							      ;
					      00381 	    .BYTE   31							      ;
					      00382 	    .BYTE   3							      ;
					      00383 	    .BYTE   0							      ;
					      00384 	    .ADDRESS  PARSE_ERROR					      ;
					      00388 	    .LONG   0, 0						      ;
					      00390 	    .ADDRESS  LABEL_ACT						      ;
					      00394 	    .LONG   0							      ;
					      00398 	    .LONG   0							      ;
					      0039C GET_LOG_NAME:
							    .BYTE   18							      ;
					      0039D 	    .BYTE   29							      ;
					      0039E 	    .BYTE   2							      ;
					      0039F 	    .BYTE   0							      ;
					      003A0 	    .ADDRESS  PARSE_ERROR					      ;
					      003A4 	    .LONG   0, 0						      ;
					      003AC 	    .ADDRESS  LOG_NAME_ACT					      ;
					      003B0 	    .LONG   0							      ;
					      003B4 	    .LONG   0							      ;
					      003B8 CONVERT_NUMBER:
							    .BYTE   64							      ;
					      003B9 	    .BYTE   0							      ;
					      003BA 	    .BYTE   3							      ;
					      003BB 	    .BYTE   0							      ;
					      003BC 	    .ADDRESS  PARSE_ERROR					      ;
					      003C0 	    .LONG   0, 0						      ;
					      003C8 	    .LONG   0							      ;
					      003CC 	    .LONG   0							      ;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 4-8
; Digital Equipment Corporation
;
					      003D0 	    .LONG   0							      ;

							    .PSECT  $GLOBAL$,NOEXE,2

					      00000 MOUNT_OPTIONS::
							    .BLKB   8
					      00008 PROTECTION::
							    .BLKB   4
					      0000C OWNER_UIC::
							    .BLKB   4
					      00010 USER_UIC::
							    .BLKB   4
					      00014 EXTENSION::
							    .BLKB   4
					      00018 WINDOW::.BLKB   4
					      0001C ACCESSED::
							    .BLKB   4
					      00020 BLOCKSIZE::
							    .BLKB   4
					      00024 RECORDSZ::
							    .BLKB   4
					      00028 DEVICE_COUNT::
							    .BLKB   4
					      0002C LABEL_COUNT::
							    .BLKB   4
					      00030 VID_STRING::
							    .BLKB   8
					      00038 COMMENT_STRING::
							    .BLKB   8
					      00040 ACP_STRING::
							    .BLKB   8
					      00048 LOG_NAME::
							    .BLKB   8
					      00050 DRIVE_COUNT::
							    .BLKB   64
					      00090 DEVICE_STRING::
							    .BLKB   128
					      00110 LABEL_STRING::
							    .BLKB   128
					      00190 PARSE_IMP_END::
							    .BLKB   0

							    .GLOBL  CLI$K_MOUN_DENS, CLI$K_MOUN_VISU, CLI$K_MOUN_COMM
							    .GLOBL  CLI$K_MOUN_SHAR, CLI$K_MOUN_GROU, CLI$K_MOUN_SYST
							    .GLOBL  CLI$K_MOUN_WRIT, CLI$K_MOUN_UNLO, CLI$K_MOUN_FORE
							    .GLOBL  CLI$K_MOUN_LABE, CLI$K_MOUN_BLOC, CLI$K_MOUN_EBCD
							    .GLOBL  CLI$K_MOUN_PROT, CLI$K_MOUN_DATA, CLI$K_MOUN_OWNE
							    .GLOBL  CLI$K_MOUN_USER, CLI$K_MOUN_OVER, CLI$K_MOUN_EXTE
							    .GLOBL  CLI$K_MOUN_WIND, CLI$K_MOUN_ACCE, CLI$K_MOUN_PROC
							    .GLOBL  CLI$K_MOUN_DRIV, CLI$K_MOUN_RECO

							    .PSECT  $CODE$,NOWRT,2

					 0C04 00000 	    .ENTRY  MOUNT_PARSE, Save R2,R10,R11			      ; 0772
		         5A	0000'  CF  9E 00002 	    MOVAB   MOUNT_OPTIONS, R10					      ;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 4-9
; Digital Equipment Corporation
;
		         5B	0000'  CF  9E 00007 	    MOVAB   CLI_WORK_AREA, R11					      ;
				       6A  7C 0000C 	    CLRQ    MOUNT_OPTIONS					      ; 0812
		         6A	1010   8F  A8 0000E 	    BISW2   #4112, MOUNT_OPTIONS				      ; 0814
		         52	  04   AC  D0 00013 	    MOVL    CLI_CALLBACK, R2					      ; 0816
				       5B  DD 00017 	    PUSHL   R11							      ;
				00A8   CB  9F 00019 	    PUSHAB  INIT_PARSE						      ;
		         62	       02  FB 0001D 	    CALLS   #2, (R2)						      ;
				       5A  DD 00020 	    PUSHL   R10							      ; 0822
				       5B  DD 00022 	    PUSHL   R11							      ;
				0348   CB  9F 00024 	    PUSHAB  GET_QUAL						      ;
		         62	       03  FB 00028 	    CALLS   #3, (R2)						      ;
				       5A  DD 0002B 1$:     PUSHL   R10							      ; 0827
				       5B  DD 0002D 	    PUSHL   R11							      ;
				0364   CB  9F 0002F 	    PUSHAB  GET_DEVICE						      ;
		         62	       03  FB 00033 	    CALLS   #3, (R2)						      ;
	   EF	  0367   CB	       01  E0 00036 	    BBS     #1, GET_DEVICE+3, 1$				      ; 0828
				       5B  DD 0003C 	    PUSHL   R11							      ; 0830
				00C4   CB  9F 0003E 	    PUSHAB  END_PARAM1						      ;
		         62	       02  FB 00042 	    CALLS   #2, (R2)						      ;
				       5A  DD 00045 2$:     PUSHL   R10							      ; 0835
				       5B  DD 00047 	    PUSHL   R11							      ;
				0380   CB  9F 00049 	    PUSHAB  GET_LABEL						      ;
		         62	       03  FB 0004D 	    CALLS   #3, (R2)						      ;
	   EF	  0383   CB	       01  E0 00050 	    BBS     #1, GET_LABEL+3, 2$					      ; 0836
				       5B  DD 00056 	    PUSHL   R11							      ; 0838
				00E0   CB  9F 00058 	    PUSHAB  END_PARAM2						      ;
		         62	       02  FB 0005C 	    CALLS   #2, (R2)						      ;
				       5A  DD 0005F 	    PUSHL   R10							      ; 0843
				       5B  DD 00061 	    PUSHL   R11							      ;
				039C   CB  9F 00063 	    PUSHAB  GET_LOG_NAME					      ;
		         62	       03  FB 00067 	    CALLS   #3, (R2)						      ;
				       5B  DD 0006A 	    PUSHL   R11							      ; 0845
				00FC   CB  9F 0006C 	    PUSHAB  END_PARAM3						      ;
		         62	       02  FB 00070 	    CALLS   #2, (R2)						      ;
	   0B	    03   AA	       07  E0 00073 	    BBS     #7, MOUNT_OPTIONS+3, 3$				      ; 0850
				0110   CA  D4 00078 	    CLRL    LABEL_STRING					      ; 0853
		  0114   CA	0114   CA  9E 0007C 	    MOVAB   LABEL_STRING+4, LABEL_STRING+4			      ; 0854
	   11	    02   AA	       06  E1 00083 3$:     BBC     #6, MOUNT_OPTIONS+2, 4$				      ; 0857
	   0D	         6A	       04  E0 00088 	    BBS     #4, MOUNT_OPTIONS, 4$				      ; 0858
			    0072802C   8F  DD 0008C 	    PUSHL   #7503916						      ; 0859
	      00000000G  00	       01  FB 00092 	    CALLS   #1, LIB$STOP					      ;
					   04 00099 4$:     RET     							      ; 0772

; Routine Size:  154 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 5
; Digital Equipment Corporation
;
;	0862	!+
;	0863	!
;	0864	! Parameter and qualifier action routines. Each routine is named corresponding
;	0865	! to its associated parameter of qualifier. Each routine does whatever
;	0866	! conversion is necessary and stores the parameter or qualifier value in
;	0867	! the appropriate location in the output area.
;	0868	!
;	0869	!-
;	0870	
;	0871	
;	0872	!
;	0873	! CLI error action routine. This routine is called on all CLI errors.
;	0874	! It simply signalls the error back to main level.
;	0875	!
;	0876	ROUTINE PARSE_ERROR (REQ_DESC, ERROR_CODE) : NOVALUE =
;	0877	BEGIN
;	0878	
;	0879	MAP
;	0880		REQ_DESC	: REF BBLOCK;
;	0881	
;	0882	SIGNAL_STOP (.ERROR_CODE);
;	0883	
;	0884	END;					! end of routine PARSE_ERROR





					 0000 0009A PARSE_ERROR:
							    .WORD   Save nothing					      ; 0876
				  08   AC  DD 0009C 	    PUSHL   ERROR_CODE						      ; 0882
	      00000000G  00	       01  FB 0009F 	    CALLS   #1, LIB$STOP					      ;
					   04 000A6 	    RET     							      ; 0876

; Routine Size:  13 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 6
; Digital Equipment Corporation
;
;	0885	!
;	0886	! Get device name
;	0887	!
;	0888	ROUTINE DEVICE_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	0889	BEGIN
;	0890	
;	0891	MAP
;	0892		REQ_DESC	: REF BBLOCK;
;	0893	
;	0894	! Clear the parameter required bit for succeeding calls. Count the device
;	0895	! and enter the name descriptor into the device list.
;	0896	!
;	0897	
;	0898	REQ_DESC[CLI$V_PARMREQ] = 0;
;	0899	
;	0900	IF .DEVICE_COUNT GEQ DEVMAX THEN ERR_EXIT (MOUN$_MAXDEV);
;	0901	DEVICE_STRING[.DEVICE_COUNT*2] = .REQ_DESC[CLI$W_RQSIZE];
;	0902	DEVICE_STRING[.DEVICE_COUNT*2+1] = .REQ_DESC[CLI$A_RQADDR];
;	0903	DEVICE_COUNT = .DEVICE_COUNT + 1;
;	0904	
;	0905	END;					! end of routine DEVICE_ACT





					 0804 000A7 DEVICE_ACT:
							    .WORD   Save R2,R11						      ; 0888
		         5B	0000'  CF  9E 000A9 	    MOVAB   DEVICE_COUNT, R11					      ;
		         52	  04   AC  D0 000AE 	    MOVL    REQ_DESC, R2					      ; 0898
		    02   A2	       01  8A 000B2 	    BICB2   #1, 2(R2)						      ;
		         10	       6B  D1 000B6 	    CMPL    DEVICE_COUNT, #16					      ; 0900
				       0D  19 000B9 	    BLSS    1$							      ;
			    00728084   8F  DD 000BB 	    PUSHL   #7504004						      ;
	      00000000G  00	       01  FB 000C1 	    CALLS   #1, LIB$STOP					      ;
	   50	         6B	       01  78 000C8 1$:     ASHL    #1, DEVICE_COUNT, R0				      ; 0901
		    68 AB40	  08   A2  3C 000CC 	    MOVZWL  8(R2), DEVICE_STRING[R0]				      ;
		    6C AB40	  0C   A2  D0 000D2 	    MOVL    12(R2), DEVICE_STRING+4[R0]				      ; 0902
				       6B  D6 000D8 	    INCL    DEVICE_COUNT					      ; 0903
					   04 000DA 	    RET     							      ; 0888

; Routine Size:  52 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 7
; Digital Equipment Corporation
;
;	0906	!
;	0907	! Get volume label
;	0908	!
;	0909	ROUTINE LABEL_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	0910	BEGIN
;	0911	
;	0912	MAP
;	0913		REQ_DESC	: REF BBLOCK;
;	0914	
;	0915	! Clear the parameter required bit for succeeding calls. Count the label
;	0916	! and enter the name descriptor into the label list.
;	0917	!
;	0918	
;	0919	REQ_DESC[CLI$V_PARMREQ] = 0;
;	0920	
;	0921	IF .LABEL_COUNT GEQ LABMAX THEN ERR_EXIT (MOUN$_MAXLAB);
;	0922	LABEL_STRING[.LABEL_COUNT*2] = .REQ_DESC[CLI$W_RQSIZE];
;	0923	LABEL_STRING[.LABEL_COUNT*2+1] = .REQ_DESC[CLI$A_RQADDR];
;	0924	LABEL_COUNT = .LABEL_COUNT + 1;
;	0925	
;	0926	END;					! end of routine LABEL_ACT





					 0804 000DB LABEL_ACT:
							    .WORD   Save R2,R11						      ; 0909
		         5B	0000'  CF  9E 000DD 	    MOVAB   LABEL_COUNT, R11					      ;
		         52	  04   AC  D0 000E2 	    MOVL    REQ_DESC, R2					      ; 0919
		    02   A2	       01  8A 000E6 	    BICB2   #1, 2(R2)						      ;
		         10	       6B  D1 000EA 	    CMPL    LABEL_COUNT, #16					      ; 0921
				       0D  19 000ED 	    BLSS    1$							      ;
			    0072808C   8F  DD 000EF 	    PUSHL   #7504012						      ;
	      00000000G  00	       01  FB 000F5 	    CALLS   #1, LIB$STOP					      ;
	   50	         6B	       01  78 000FC 1$:     ASHL    #1, LABEL_COUNT, R0					      ; 0922
		  00E4 CB40	  08   A2  3C 00100 	    MOVZWL  8(R2), LABEL_STRING[R0]				      ;
		  00E8 CB40	  0C   A2  D0 00107 	    MOVL    12(R2), LABEL_STRING+4[R0]				      ; 0923
				       6B  D6 0010E 	    INCL    LABEL_COUNT						      ; 0924
					   04 00110 	    RET     							      ; 0909

; Routine Size:  54 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 8
; Digital Equipment Corporation
;
;	0927	!
;	0928	! Get logical name
;	0929	!
;	0930	ROUTINE LOG_NAME_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	0931	BEGIN
;	0932	
;	0933	MAP
;	0934		REQ_DESC	: REF BBLOCK;
;	0935	
;	0936	LOCAL
;	0937		P;				! string scan pointer
;	0938	
;	0939	! Simply copy the logical name descriptor.
;	0940	!
;	0941	
;	0942	LOG_NAME[0] = .REQ_DESC[CLI$W_RQSIZE];
;	0943	LOG_NAME[1] = .REQ_DESC[CLI$A_RQADDR];
;	0944	
;	0945	! Scan for a trailing or embedded colon. If found, use string preceding
;	0946	! the colon.
;	0947	!
;	0948	
;	0949	P = CH$FIND_CH (.LOG_NAME[0], .LOG_NAME[1], ':');
;	0950	IF NOT CH$FAIL (.P)
;	0951	THEN LOG_NAME[0] = .P - .LOG_NAME[1];
;	0952	
;	0953	IF .REQ_DESC[CLI$W_RQSIZE] GTR LOG$C_NAMLENGTH-1
;	0954	THEN ERR_EXIT (MOUN$_LOGNAME);
;	0955	
;	0956	END;					! end of routine LOG_NAME_ACT





					 0804 00111 LOG_NAME_ACT:
							    .WORD   Save R2,R11						      ; 0930
		         5B	0000'  CF  9E 00113 	    MOVAB   LOG_NAME, R11					      ;
		         52	  04   AC  D0 00118 	    MOVL    REQ_DESC, R2					      ; 0942
		         6B	  08   A2  3C 0011C 	    MOVZWL  8(R2), LOG_NAME					      ;
		    04   AB	  0C   A2  D0 00120 	    MOVL    12(R2), LOG_NAME+4					      ; 0943
      04   BB	         6B	       3A  3A 00125 	    LOCC    #58, LOG_NAME, @LOG_NAME+4				      ; 0949
				       02  12 0012A 	    BNEQ    1$							      ;
				       51  D4 0012C 	    CLRL    R1							      ;
		         50	       51  D0 0012E 1$:     MOVL    R1, P						      ;
				       05  13 00131 	    BEQL    2$							      ; 0950
	   6B	         50	  04   AB  C3 00133 	    SUBL3   LOG_NAME+4, P, LOG_NAME				      ; 0951
		         3F	  08   A2  B1 00138 2$:     CMPW    8(R2), #63						      ; 0953
				       0D  1B 0013C 	    BLEQU   3$							      ;
			    0072807C   8F  DD 0013E 	    PUSHL   #7503996						      ; 0954
	      00000000G  00	       01  FB 00144 	    CALLS   #1, LIB$STOP					      ;
					   04 0014B 3$:     RET     							      ; 0930

; Routine Size:  59 bytes


; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 8-1
; Digital Equipment Corporation
;


; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 9
; Digital Equipment Corporation
;
;	0957	!
;	0958	! Set magtape density
;	0959	!
;	0960	ROUTINE DENSITY_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	0961	BEGIN
;	0962	
;	0963	MAP
;	0964		REQ_DESC	: REF BBLOCK;
;	0965	
;	0966	EXTERNAL
;	0967		DENSITY_STB	: VECTOR [0],	! state table address
;	0968		DENSITY_KTB	: VECTOR [0];	! keyword table address
;	0969	
;	0970	EXTERNAL ROUTINE
;	0971		LIB$TPARSE;
;	0972	
;	0973	! Parse the density string (setting the DENS_1600 bit if so).
;	0974	!
;	0975	
;	0976	TPARSE_BLOCK[TPA$L_STRINGCNT] = .REQ_DESC[CLI$W_QDVALSIZ];
;	0977	TPARSE_BLOCK[TPA$L_STRINGPTR] = .REQ_DESC[CLI$A_QDVALADR];
;	0978	IF NOT LIB$TPARSE (TPARSE_BLOCK, DENSITY_STB, DENSITY_KTB)
;	0979	THEN ERR_EXIT (MOUN$_BADDENS);
;	0980	
;	0981	END;					! end of routine DENSITY_ACT



							    .GLOBL  DENSITY_STB, DENSITY_KTB, LIB$TPARSE

					 0000 0014C DENSITY_ACT:
							    .WORD   Save nothing					      ; 0960
		         50	  04   AC  D0 0014E 	    MOVL    REQ_DESC, R0					      ; 0976
		  0000'  CF	  04   A0  3C 00152 	    MOVZWL  4(R0), TPARSE_BLOCK+8				      ;
		  0000'  CF	  08   A0  D0 00158 	    MOVL    8(R0), TPARSE_BLOCK+12				      ; 0977
				0000G  CF  9F 0015E 	    PUSHAB  DENSITY_KTB						      ; 0978
				0000G  CF  9F 00162 	    PUSHAB  DENSITY_STB						      ;
				0000'  CF  9F 00166 	    PUSHAB  TPARSE_BLOCK					      ;
		  0000G  CF	       03  FB 0016A 	    CALLS   #3, LIB$TPARSE					      ;
		         0D	       50  E8 0016F 	    BLBS    R0, 1$						      ;
			    00728014   8F  DD 00172 	    PUSHL   #7503892						      ; 0979
	      00000000G  00	       01  FB 00178 	    CALLS   #1, LIB$STOP					      ;
					   04 0017F 1$:     RET     							      ; 0960

; Routine Size:  52 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 10
; Digital Equipment Corporation
;
;	0982	!
;	0983	! Get visual-ID string
;	0984	!
;	0985	ROUTINE VID_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	0986	BEGIN
;	0987	
;	0988	MAP
;	0989		REQ_DESC	: REF BBLOCK;
;	0990	
;	0991	! Simply save away the descriptor.
;	0992	!
;	0993	
;	0994	IF .REQ_DESC[CLI$W_QDVALSIZ] NEQ 0
;	0995	THEN
;	0996	    BEGIN
;	0997	    MOUNT_OPTIONS[OPT_VID] = 1;
;	0998	    VID_STRING[0] = .REQ_DESC[CLI$W_QDVALSIZ];
;	0999	    VID_STRING[1] = .REQ_DESC[CLI$A_QDVALADR];
;	1000	    END;
;	1001	
;	1002	END;					! end of routine VID_ACT





					 0000 00180 VID_ACT:.WORD   Save nothing					      ; 0985
		         50	  04   AC  D0 00182 	    MOVL    REQ_DESC, R0					      ; 0994
				  04   A0  B5 00186 	    TSTW    4(R0)						      ;
				       11  13 00189 	    BEQL    1$							      ;
		  0000'  CF	       04  88 0018B 	    BISB2   #4, MOUNT_OPTIONS					      ; 0997
		  0000'  CF	  04   A0  3C 00190 	    MOVZWL  4(R0), VID_STRING					      ; 0998
		  0000'  CF	  08   A0  D0 00196 	    MOVL    8(R0), VID_STRING+4					      ; 0999
					   04 0019C 1$:     RET     							      ; 0985

; Routine Size:  29 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 11
; Digital Equipment Corporation
;
;	1003	!
;	1004	! Get comment string
;	1005	!
;	1006	ROUTINE COMMENT_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	1007	BEGIN
;	1008	
;	1009	MAP
;	1010		REQ_DESC	: REF BBLOCK;
;	1011	
;	1012	! Simply save away the descriptor.
;	1013	!
;	1014	
;	1015	IF .REQ_DESC[CLI$W_QDVALSIZ] NEQ 0
;	1016	THEN
;	1017	    BEGIN
;	1018	    MOUNT_OPTIONS[OPT_COMMENT] = 1;
;	1019	    COMMENT_STRING[0] = .REQ_DESC[CLI$W_QDVALSIZ];
;	1020	    COMMENT_STRING[1] = .REQ_DESC[CLI$A_QDVALADR];
;	1021	    END;
;	1022	
;	1023	END;					! end of routine COMMENT_ACT





					 0000 0019D COMMENT_ACT:
							    .WORD   Save nothing					      ; 1006
		         50	  04   AC  D0 0019F 	    MOVL    REQ_DESC, R0					      ; 1015
				  04   A0  B5 001A3 	    TSTW    4(R0)						      ;
				       11  13 001A6 	    BEQL    1$							      ;
		  0000'  CF	       08  88 001A8 	    BISB2   #8, MOUNT_OPTIONS					      ; 1018
		  0000'  CF	  04   A0  3C 001AD 	    MOVZWL  4(R0), COMMENT_STRING				      ; 1019
		  0000'  CF	  08   A0  D0 001B3 	    MOVL    8(R0), COMMENT_STRING+4				      ; 1020
					   04 001B9 1$:     RET     							      ; 1006

; Routine Size:  29 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 12
; Digital Equipment Corporation
;
;	1024	ROUTINE BLOCK_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	1025	BEGIN
;	1026	
;	1027	MAP
;	1028		REQ_DESC	: REF BBLOCK;
;	1029	
;	1030	LOCAL
;	1031		STATUS;
;	1032	
;	1033	! If there is a value, convert it to the numerical blocksize.
;	1034	!
;	1035	
;	1036	IF .REQ_DESC[CLI$W_QDVALSIZ] NEQ 0
;	1037	THEN
;	1038	    BEGIN
;	1039	    STATUS = (.CLI_CALLBACK) (CONVERT_NUMBER, CLI_WORK_AREA, .REQ_DESC);
;	1040	    IF NOT .STATUS THEN ERR_EXIT (.STATUS);
;	1041	    IF .CONVERT_NUMBER[CLI$L_RQVALU] GTRU 65534
;	1042	    THEN ERR_EXIT(MOUN$_SZTOOBIG);
;	1043	    MOUNT_OPTIONS[OPT_BLOCKSIZE] = 1;
;	1044	    BLOCKSIZE = .CONVERT_NUMBER[CLI$L_RQVALU];
;	1045	    END;
;	1046	
;	1047	END;					! end of routine BLOCK_ACT





					 0800 001BA BLOCK_ACT:
							    .WORD   Save R11						      ; 1024
		         5B 00000000G  00  9E 001BC 	    MOVAB   LIB$STOP, R11					      ;
		         50	  04   AC  D0 001C3 	    MOVL    REQ_DESC, R0					      ; 1036
				  04   A0  B5 001C7 	    TSTW    4(R0)						      ;
				       36  13 001CA 	    BEQL    3$							      ;
				       50  DD 001CC 	    PUSHL   R0							      ; 1039
				0000'  CF  9F 001CE 	    PUSHAB  CLI_WORK_AREA					      ;
				0000'  CF  9F 001D2 	    PUSHAB  CONVERT_NUMBER					      ;
		    08   BC	       03  FB 001D6 	    CALLS   #3, @CLI_CALLBACK					      ;
		         05	       50  E8 001DA 	    BLBS    STATUS, 1$						      ; 1040
				       50  DD 001DD 	    PUSHL   STATUS						      ;
		         6B	       01  FB 001DF 	    CALLS   #1, LIB$STOP					      ;
	      0000FFFE   8F	0000'  CF  D1 001E2 1$:     CMPL    CONVERT_NUMBER+12, #65534				      ; 1041
				       09  1B 001EB 	    BLEQU   2$							      ;
			    0072817C   8F  DD 001ED 	    PUSHL   #7504252						      ; 1042
		         6B	       01  FB 001F3 	    CALLS   #1, LIB$STOP					      ;
		  0000'  CF	       01  88 001F6 2$:     BISB2   #1, MOUNT_OPTIONS+2					      ; 1043
		  0000'  CF	0000'  CF  D0 001FB 	    MOVL    CONVERT_NUMBER+12, BLOCKSIZE			      ; 1044
					   04 00202 3$:     RET     							      ; 1024

; Routine Size:  73 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 13
; Digital Equipment Corporation
;
;	1048	ROUTINE RECORD_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	1049	BEGIN
;	1050	
;	1051	MAP
;	1052		REQ_DESC	: REF BBLOCK;
;	1053	
;	1054	LOCAL
;	1055		STATUS;
;	1056	
;	1057	! If there is a value, convert it to the numerical record size.
;	1058	!
;	1059	
;	1060	IF .REQ_DESC[CLI$W_QDVALSIZ] NEQ 0
;	1061	THEN
;	1062	    BEGIN
;	1063	    STATUS = (.CLI_CALLBACK) (CONVERT_NUMBER, CLI_WORK_AREA, .REQ_DESC);
;	1064	    IF NOT .STATUS THEN ERR_EXIT (.STATUS);
;	1065	    IF .CONVERT_NUMBER[CLI$L_RQVALU] GTRU 65534
;	1066	    THEN ERR_EXIT(MOUN$_SZTOOBIG);
;	1067	    MOUNT_OPTIONS[OPT_RECORDSZ] = 1;
;	1068	    RECORDSZ = .CONVERT_NUMBER[CLI$L_RQVALU];
;	1069	    END;
;	1070	
;	1071	END;					! end of routine RECORD_ACT





					 0800 00203 RECORD_ACT:
							    .WORD   Save R11						      ; 1048
		         5B 00000000G  00  9E 00205 	    MOVAB   LIB$STOP, R11					      ;
		         50	  04   AC  D0 0020C 	    MOVL    REQ_DESC, R0					      ; 1060
				  04   A0  B5 00210 	    TSTW    4(R0)						      ;
				       37  13 00213 	    BEQL    4$							      ;
				       50  DD 00215 	    PUSHL   R0							      ; 1063
				0000'  CF  9F 00217 	    PUSHAB  CLI_WORK_AREA					      ;
				0000'  CF  9F 0021B 	    PUSHAB  CONVERT_NUMBER					      ;
		    08   BC	       03  FB 0021F 	    CALLS   #3, @CLI_CALLBACK					      ;
		         05	       50  E8 00223 	    BLBS    STATUS, 1$						      ; 1064
				       50  DD 00226 	    PUSHL   STATUS						      ;
		         6B	       01  FB 00228 	    CALLS   #1, LIB$STOP					      ;
	      0000FFFE   8F	0000'  CF  D1 0022B 1$:     CMPL    CONVERT_NUMBER+12, #65534				      ; 1065
				       09  1B 00234 	    BLEQU   2$							      ;
			    0072817C   8F  DD 00236 	    PUSHL   #7504252						      ; 1066
		         6B	       01  FB 0023C 	    CALLS   #1, LIB$STOP					      ;
	   00	  0000'  CF	       25  E2 0023F 2$:     BBSS    #37, MOUNT_OPTIONS, 3$				      ; 1067
		  0000'  CF	0000'  CF  D0 00245 3$:     MOVL    CONVERT_NUMBER+12, RECORDSZ				      ; 1068
					   04 0024C 4$:     RET     							      ; 1048

; Routine Size:  74 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 14
; Digital Equipment Corporation
;
;	1072	ROUTINE SHARE_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	1073	BEGIN
;	1074	
;	1075	MAP
;	1076		REQ_DESC	: REF BBLOCK;
;	1077	
;	1078	LOCAL
;	1079		STATUS;
;	1080	
;	1081	! This does bit fixups and validation on the /SHARE - /NOSHARE qualifier that
;	1082	! are not possible with the CLI bitlist processing.
;	1083	!
;	1084	
;	1085	IF .MOUNT_OPTIONS[OPT_GROUP] OR .MOUNT_OPTIONS[OPT_SYSTEM]
;	1086	THEN
;	1087	    BEGIN
;	1088	    IF .REQ_DESC[CLI$V_QUALEXP]
;	1089	    THEN ERR_EXIT (MOUN$_CONFQUAL)
;	1090	    ELSE MOUNT_OPTIONS[OPT_NOSHARE] = 0;
;	1091	    END;
;	1092	
;	1093	END;					! end of routine SHARE_ACT





					 0000 0024D SHARE_ACT:
							    .WORD   Save nothing					      ; 1072
	   05	  0000'  CF	       07  E0 0024F 	    BBS     #7, MOUNT_OPTIONS, 1$				      ; 1085
		         1C	0000'  CF  E9 00255 	    BLBC    MOUNT_OPTIONS+1, 3$					      ;
		         50	  04   AC  D0 0025A 1$:     MOVL    REQ_DESC, R0					      ; 1088
	   0E	    03   A0	       01  E1 0025E 	    BBC     #1, 3(R0), 2$					      ;
			    0072802C   8F  DD 00263 	    PUSHL   #7503916						      ; 1089
	      00000000G  00	       01  FB 00269 	    CALLS   #1, LIB$STOP					      ;
					   04 00270 	    RET     							      ; 1088
		  0000'  CF	       10  8A 00271 2$:     BICB2   #16, MOUNT_OPTIONS					      ; 1090
					   04 00276 3$:     RET     							      ; 1072

; Routine Size:  42 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 15
; Digital Equipment Corporation
;
;	1094	ROUTINE NOLABEL_ACT (REQ_DESC, CLI_CALLBACK) =
;	1095	BEGIN
;	1096	
;	1097	MAP
;	1098		REQ_DESC	: REF BBLOCK;
;	1099	
;	1100	LOCAL
;	1101		STATUS;
;	1102	
;	1103	! If a device is being mounted /FOREIGN or /OVER:ID or /NOLABEL and /NOSHARE,
;	1104	! the volume label is optional.
;	1105	!
;	1106	
;	1107	IF .MOUNT_OPTIONS[OPT_NOSHARE]
;	1108	THEN GET_LABEL[CLI$V_PARMREQ] = 0;
;	1109	RETURN 1;
;	1110	
;	1111	END;					! end of routine NOLABEL_ACT





					 0000 00277 NOLABEL_ACT:
							    .WORD   Save nothing					      ; 1094
	   05	  0000'  CF	       04  E1 00279 	    BBC     #4, MOUNT_OPTIONS, 1$				      ; 1107
		  0000'  CF	       01  8A 0027F 	    BICB2   #1, GET_LABEL+2					      ; 1108
		         50	       01  D0 00284 1$:     MOVL    #1, R0						      ; 1109
					   04 00287 	    RET     							      ; 1094

; Routine Size:  17 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 16
; Digital Equipment Corporation
;
;	1112	!
;	1113	! Set EBCDIC mode
;	1114	!
;	1115	ROUTINE EBCDIC_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	1116	BEGIN
;	1117	
;	1118	MAP
;	1119		REQ_DESC	: REF BBLOCK;
;	1120	
;	1121	EXTERNAL
;	1122		EBCDIC_STB	: VECTOR [0],	! state table address
;	1123		EBCDIC_KTB	: VECTOR [0];	! keyword table address
;	1124	
;	1125	EXTERNAL ROUTINE
;	1126		LIB$TPARSE;
;	1127	
;	1128	! Parse the options string, setting the appropriate bits.
;	1129	!
;	1130	
;	1131	TPARSE_BLOCK[TPA$L_STRINGCNT] = .REQ_DESC[CLI$W_QDVALSIZ];
;	1132	TPARSE_BLOCK[TPA$L_STRINGPTR] = .REQ_DESC[CLI$A_QDVALADR];
;	1133	IF NOT LIB$TPARSE (TPARSE_BLOCK, EBCDIC_STB, EBCDIC_KTB)
;	1134	THEN ERR_EXIT (MOUN$_BADEBC);
;	1135	
;	1136	END;					! end of routine EBCDIC_ACT



							    .GLOBL  EBCDIC_STB, EBCDIC_KTB

					 0000 00288 EBCDIC_ACT:
							    .WORD   Save nothing					      ; 1115
		         50	  04   AC  D0 0028A 	    MOVL    REQ_DESC, R0					      ; 1131
		  0000'  CF	  04   A0  3C 0028E 	    MOVZWL  4(R0), TPARSE_BLOCK+8				      ;
		  0000'  CF	  08   A0  D0 00294 	    MOVL    8(R0), TPARSE_BLOCK+12				      ; 1132
				0000G  CF  9F 0029A 	    PUSHAB  EBCDIC_KTB						      ; 1133
				0000G  CF  9F 0029E 	    PUSHAB  EBCDIC_STB						      ;
				0000'  CF  9F 002A2 	    PUSHAB  TPARSE_BLOCK					      ;
		  0000G  CF	       03  FB 002A6 	    CALLS   #3, LIB$TPARSE					      ;
		         0D	       50  E8 002AB 	    BLBS    R0, 1$						      ;
			    00728164   8F  DD 002AE 	    PUSHL   #7504228						      ; 1134
	      00000000G  00	       01  FB 002B4 	    CALLS   #1, LIB$STOP					      ;
					   04 002BB 1$:     RET     							      ; 1115

; Routine Size:  52 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 17
; Digital Equipment Corporation
;
;	1137	ROUTINE EXTENSION_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	1138	BEGIN
;	1139	
;	1140	MAP
;	1141		REQ_DESC	: REF BBLOCK;
;	1142	
;	1143	LOCAL
;	1144		STATUS;
;	1145	
;	1146	! Convert the value string to its numerical value.
;	1147	!
;	1148	
;	1149	STATUS = (.CLI_CALLBACK) (CONVERT_NUMBER, CLI_WORK_AREA, .REQ_DESC);
;	1150	IF NOT .STATUS THEN ERR_EXIT (.STATUS);
;	1151	EXTENSION = .CONVERT_NUMBER[CLI$L_RQVALU];
;	1152	
;	1153	END;					! end of routine EXTENSION_ACT





					 0000 002BC EXTENSION_ACT:
							    .WORD   Save nothing					      ; 1137
				  04   AC  DD 002BE 	    PUSHL   REQ_DESC						      ; 1149
				0000'  CF  9F 002C1 	    PUSHAB  CLI_WORK_AREA					      ;
				0000'  CF  9F 002C5 	    PUSHAB  CONVERT_NUMBER					      ;
		    08   BC	       03  FB 002C9 	    CALLS   #3, @CLI_CALLBACK					      ;
		         09	       50  E8 002CD 	    BLBS    STATUS, 1$						      ; 1150
				       50  DD 002D0 	    PUSHL   STATUS						      ;
	      00000000G  00	       01  FB 002D2 	    CALLS   #1, LIB$STOP					      ;
		  0000'  CF	0000'  CF  D0 002D9 1$:     MOVL    CONVERT_NUMBER+12, EXTENSION			      ; 1151
					   04 002E0 	    RET     							      ; 1137

; Routine Size:  37 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 18
; Digital Equipment Corporation
;
;	1154	ROUTINE WINDOW_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	1155	BEGIN
;	1156	
;	1157	MAP
;	1158		REQ_DESC	: REF BBLOCK;
;	1159	
;	1160	LOCAL
;	1161		STATUS;
;	1162	
;	1163	! Convert the value string to its numerical value.
;	1164	!
;	1165	
;	1166	STATUS = (.CLI_CALLBACK) (CONVERT_NUMBER, CLI_WORK_AREA, .REQ_DESC);
;	1167	IF NOT .STATUS THEN ERR_EXIT (.STATUS);
;	1168	WINDOW = .CONVERT_NUMBER[CLI$L_RQVALU];
;	1169	
;	1170	END;					! end of routine WINDOW_ACT





					 0000 002E1 WINDOW_ACT:
							    .WORD   Save nothing					      ; 1154
				  04   AC  DD 002E3 	    PUSHL   REQ_DESC						      ; 1166
				0000'  CF  9F 002E6 	    PUSHAB  CLI_WORK_AREA					      ;
				0000'  CF  9F 002EA 	    PUSHAB  CONVERT_NUMBER					      ;
		    08   BC	       03  FB 002EE 	    CALLS   #3, @CLI_CALLBACK					      ;
		         09	       50  E8 002F2 	    BLBS    STATUS, 1$						      ; 1167
				       50  DD 002F5 	    PUSHL   STATUS						      ;
	      00000000G  00	       01  FB 002F7 	    CALLS   #1, LIB$STOP					      ;
		  0000'  CF	0000'  CF  D0 002FE 1$:     MOVL    CONVERT_NUMBER+12, WINDOW				      ; 1168
					   04 00305 	    RET     							      ; 1154

; Routine Size:  37 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 19
; Digital Equipment Corporation
;
;	1171	ROUTINE ACCESSED_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	1172	BEGIN
;	1173	
;	1174	MAP
;	1175		REQ_DESC	: REF BBLOCK;
;	1176	
;	1177	LOCAL
;	1178		STATUS;
;	1179	
;	1180	! Convert the value string to its numerical value.
;	1181	!
;	1182	
;	1183	STATUS = (.CLI_CALLBACK) (CONVERT_NUMBER, CLI_WORK_AREA, .REQ_DESC);
;	1184	IF NOT .STATUS THEN ERR_EXIT (.STATUS);
;	1185	ACCESSED = .CONVERT_NUMBER[CLI$L_RQVALU];
;	1186	
;	1187	END;					! end of routine ACCESSED_ACT





					 0000 00306 ACCESSED_ACT:
							    .WORD   Save nothing					      ; 1171
				  04   AC  DD 00308 	    PUSHL   REQ_DESC						      ; 1183
				0000'  CF  9F 0030B 	    PUSHAB  CLI_WORK_AREA					      ;
				0000'  CF  9F 0030F 	    PUSHAB  CONVERT_NUMBER					      ;
		    08   BC	       03  FB 00313 	    CALLS   #3, @CLI_CALLBACK					      ;
		         09	       50  E8 00317 	    BLBS    STATUS, 1$						      ; 1184
				       50  DD 0031A 	    PUSHL   STATUS						      ;
	      00000000G  00	       01  FB 0031C 	    CALLS   #1, LIB$STOP					      ;
		  0000'  CF	0000'  CF  D0 00323 1$:     MOVL    CONVERT_NUMBER+12, ACCESSED				      ; 1185
					   04 0032A 	    RET     							      ; 1171

; Routine Size:  37 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 20
; Digital Equipment Corporation
;
;	1188	ROUTINE PROTECTION_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	1189	BEGIN
;	1190	
;	1191	MAP
;	1192		REQ_DESC	: REF BBLOCK;
;	1193	
;	1194	EXTERNAL
;	1195		PROTECTION_STB	: VECTOR [0],	! state table address
;	1196		PROTECTION_KTB	: VECTOR [0];	! keyword table address
;	1197	
;	1198	EXTERNAL ROUTINE
;	1199		LIB$TPARSE;
;	1200	
;	1201	! Parse the switch value string (storing the binary protection).
;	1202	! Complement thereafter, since the parser produces the complement.
;	1203	!
;	1204	
;	1205	TPARSE_BLOCK[TPA$L_STRINGCNT] = .REQ_DESC[CLI$W_QDVALSIZ];
;	1206	TPARSE_BLOCK[TPA$L_STRINGPTR] = .REQ_DESC[CLI$A_QDVALADR];
;	1207	IF NOT LIB$TPARSE (TPARSE_BLOCK, PROTECTION_STB, PROTECTION_KTB)
;	1208	THEN ERR_EXIT (MOUN$_BADPRO);
;	1209	
;	1210	PROTECTION<0,16> = NOT .PROTECTION<0,16>;
;	1211	
;	1212	END;					! end of routine PROTECTION_ACT



							    .GLOBL  PROTECTION_STB, PROTECTION_KTB

					 0000 0032B PROTECTION_ACT:
							    .WORD   Save nothing					      ; 1188
		         50	  04   AC  D0 0032D 	    MOVL    REQ_DESC, R0					      ; 1205
		  0000'  CF	  04   A0  3C 00331 	    MOVZWL  4(R0), TPARSE_BLOCK+8				      ;
		  0000'  CF	  08   A0  D0 00337 	    MOVL    8(R0), TPARSE_BLOCK+12				      ; 1206
				0000G  CF  9F 0033D 	    PUSHAB  PROTECTION_KTB					      ; 1207
				0000G  CF  9F 00341 	    PUSHAB  PROTECTION_STB					      ;
				0000'  CF  9F 00345 	    PUSHAB  TPARSE_BLOCK					      ;
		  0000G  CF	       03  FB 00349 	    CALLS   #3, LIB$TPARSE					      ;
		         0D	       50  E8 0034E 	    BLBS    R0, 1$						      ;
			    0072801C   8F  DD 00351 	    PUSHL   #7503900						      ; 1208
	      00000000G  00	       01  FB 00357 	    CALLS   #1, LIB$STOP					      ;
		  0000'  CF	0000'  CF  B2 0035E 1$:     MCOMW   PROTECTION, PROTECTION				      ; 1210
					   04 00365 	    RET     							      ; 1188

; Routine Size:  59 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 21
; Digital Equipment Corporation
;
;	1213	ROUTINE DATACHECK_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	1214	BEGIN
;	1215	
;	1216	MAP
;	1217		REQ_DESC	: REF BBLOCK;
;	1218	
;	1219	EXTERNAL
;	1220		DATACHECK_STB	: VECTOR [0],	! state table address
;	1221		DATACHECK_KTB	: VECTOR [0];	! keyword table address
;	1222	
;	1223	EXTERNAL ROUTINE
;	1224		LIB$TPARSE;
;	1225	
;	1226	! Parse the DATACHECK options string.
;	1227	!
;	1228	
;	1229	TPARSE_BLOCK[TPA$L_STRINGCNT] = .REQ_DESC[CLI$W_QDVALSIZ];
;	1230	TPARSE_BLOCK[TPA$L_STRINGPTR] = .REQ_DESC[CLI$A_QDVALADR];
;	1231	IF NOT LIB$TPARSE (TPARSE_BLOCK, DATACHECK_STB, DATACHECK_KTB)
;	1232	THEN ERR_EXIT (MOUN$_BADDATCHK);
;	1233	
;	1234	END;					! end of routine DATACHECK_ACT



							    .GLOBL  DATACHECK_STB, DATACHECK_KTB

					 0000 00366 DATACHECK_ACT:
							    .WORD   Save nothing					      ; 1213
		         50	  04   AC  D0 00368 	    MOVL    REQ_DESC, R0					      ; 1229
		  0000'  CF	  04   A0  3C 0036C 	    MOVZWL  4(R0), TPARSE_BLOCK+8				      ;
		  0000'  CF	  08   A0  D0 00372 	    MOVL    8(R0), TPARSE_BLOCK+12				      ; 1230
				0000G  CF  9F 00378 	    PUSHAB  DATACHECK_KTB					      ; 1231
				0000G  CF  9F 0037C 	    PUSHAB  DATACHECK_STB					      ;
				0000'  CF  9F 00380 	    PUSHAB  TPARSE_BLOCK					      ;
		  0000G  CF	       03  FB 00384 	    CALLS   #3, LIB$TPARSE					      ;
		         0D	       50  E8 00389 	    BLBS    R0, 1$						      ;
			    0072800C   8F  DD 0038C 	    PUSHL   #7503884						      ; 1232
	      00000000G  00	       01  FB 00392 	    CALLS   #1, LIB$STOP					      ;
					   04 00399 1$:     RET     							      ; 1213

; Routine Size:  52 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 22
; Digital Equipment Corporation
;
;	1235	ROUTINE OWNER_UIC_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	1236	BEGIN
;	1237	
;	1238	MAP
;	1239		REQ_DESC	: REF BBLOCK;
;	1240	
;	1241	EXTERNAL
;	1242		UIC_STB		: VECTOR [0],	! state table address
;	1243		UIC_KTB		: VECTOR [0];	! keyword table address
;	1244	
;	1245	EXTERNAL ROUTINE
;	1246		LIB$TPARSE;
;	1247	
;	1248	! Parse the UIC string and store it in the owner UIC longword.
;	1249	!
;	1250	
;	1251	TPARSE_BLOCK[TPA$L_STRINGCNT] = .REQ_DESC[CLI$W_QDVALSIZ];
;	1252	TPARSE_BLOCK[TPA$L_STRINGPTR] = .REQ_DESC[CLI$A_QDVALADR];
;	1253	IF NOT LIB$TPARSE (TPARSE_BLOCK, UIC_STB, UIC_KTB)
;	1254	THEN ERR_EXIT (MOUN$_BADUIC);
;	1255	OWNER_UIC = .UIC;
;	1256	
;	1257	END;					! end of routine OWNER_UIC_ACT



							    .GLOBL  UIC_STB, UIC_KTB

					 0000 0039A OWNER_UIC_ACT:
							    .WORD   Save nothing					      ; 1235
		         50	  04   AC  D0 0039C 	    MOVL    REQ_DESC, R0					      ; 1251
		  0000'  CF	  04   A0  3C 003A0 	    MOVZWL  4(R0), TPARSE_BLOCK+8				      ;
		  0000'  CF	  08   A0  D0 003A6 	    MOVL    8(R0), TPARSE_BLOCK+12				      ; 1252
				0000G  CF  9F 003AC 	    PUSHAB  UIC_KTB						      ; 1253
				0000G  CF  9F 003B0 	    PUSHAB  UIC_STB						      ;
				0000'  CF  9F 003B4 	    PUSHAB  TPARSE_BLOCK					      ;
		  0000G  CF	       03  FB 003B8 	    CALLS   #3, LIB$TPARSE					      ;
		         0D	       50  E8 003BD 	    BLBS    R0, 1$						      ;
			    00728024   8F  DD 003C0 	    PUSHL   #7503908						      ; 1254
	      00000000G  00	       01  FB 003C6 	    CALLS   #1, LIB$STOP					      ;
		  0000'  CF	0000'  CF  D0 003CD 1$:     MOVL    UIC, OWNER_UIC					      ; 1255
					   04 003D4 	    RET     							      ; 1235

; Routine Size:  59 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 23
; Digital Equipment Corporation
;
;	1258	ROUTINE USER_UIC_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	1259	BEGIN
;	1260	
;	1261	MAP
;	1262		REQ_DESC	: REF BBLOCK;
;	1263	
;	1264	EXTERNAL
;	1265		UIC_STB		: VECTOR [0],	! state table address
;	1266		UIC_KTB		: VECTOR [0];	! keyword table address
;	1267	
;	1268	EXTERNAL ROUTINE
;	1269		LIB$TPARSE;
;	1270	
;	1271	! Parse the UIC string and store it in the user UIC longword.
;	1272	!
;	1273	
;	1274	TPARSE_BLOCK[TPA$L_STRINGCNT] = .REQ_DESC[CLI$W_QDVALSIZ];
;	1275	TPARSE_BLOCK[TPA$L_STRINGPTR] = .REQ_DESC[CLI$A_QDVALADR];
;	1276	IF NOT LIB$TPARSE (TPARSE_BLOCK, UIC_STB, UIC_KTB)
;	1277	THEN ERR_EXIT (MOUN$_BADUIC);
;	1278	USER_UIC = .UIC;
;	1279	
;	1280	END;					! end of routine USER_UIC_ACT





					 0000 003D5 USER_UIC_ACT:
							    .WORD   Save nothing					      ; 1258
		         50	  04   AC  D0 003D7 	    MOVL    REQ_DESC, R0					      ; 1274
		  0000'  CF	  04   A0  3C 003DB 	    MOVZWL  4(R0), TPARSE_BLOCK+8				      ;
		  0000'  CF	  08   A0  D0 003E1 	    MOVL    8(R0), TPARSE_BLOCK+12				      ; 1275
				0000G  CF  9F 003E7 	    PUSHAB  UIC_KTB						      ; 1276
				0000G  CF  9F 003EB 	    PUSHAB  UIC_STB						      ;
				0000'  CF  9F 003EF 	    PUSHAB  TPARSE_BLOCK					      ;
		  0000G  CF	       03  FB 003F3 	    CALLS   #3, LIB$TPARSE					      ;
		         0D	       50  E8 003F8 	    BLBS    R0, 1$						      ;
			    00728024   8F  DD 003FB 	    PUSHL   #7503908						      ; 1277
	      00000000G  00	       01  FB 00401 	    CALLS   #1, LIB$STOP					      ;
		  0000'  CF	0000'  CF  D0 00408 1$:     MOVL    UIC, USER_UIC					      ; 1278
					   04 0040F 	    RET     							      ; 1258

; Routine Size:  59 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 24
; Digital Equipment Corporation
;
;	1281	ROUTINE OVERRIDE_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	1282	BEGIN
;	1283	
;	1284	MAP
;	1285		REQ_DESC	: REF BBLOCK;
;	1286	
;	1287	EXTERNAL
;	1288		OVERRIDE_STB	: VECTOR [0],	! state table address
;	1289		OVERRIDE_KTB	: VECTOR [0];	! keyword table address
;	1290	
;	1291	EXTERNAL ROUTINE
;	1292		LIB$TPARSE;
;	1293	
;	1294	! Parse the OVERRIDE string and set appropriate flags.
;	1295	!
;	1296	
;	1297	TPARSE_BLOCK[TPA$L_STRINGCNT] = .REQ_DESC[CLI$W_QDVALSIZ];
;	1298	TPARSE_BLOCK[TPA$L_STRINGPTR] = .REQ_DESC[CLI$A_QDVALADR];
;	1299	IF NOT LIB$TPARSE (TPARSE_BLOCK, OVERRIDE_STB, OVERRIDE_KTB)
;	1300	THEN ERR_EXIT (MOUN$_BADOVR);
;	1301	
;	1302	IF .MOUNT_OPTIONS[OPT_OVR_ID]
;	1303	THEN GET_LABEL[CLI$V_PARMREQ] = 0;
;	1304	
;	1305	END;					! end of routine OVERRIDE_ACT



							    .GLOBL  OVERRIDE_STB, OVERRIDE_KTB

					 0000 00410 OVERRIDE_ACT:
							    .WORD   Save nothing					      ; 1281
		         50	  04   AC  D0 00412 	    MOVL    REQ_DESC, R0					      ; 1297
		  0000'  CF	  04   A0  3C 00416 	    MOVZWL  4(R0), TPARSE_BLOCK+8				      ;
		  0000'  CF	  08   A0  D0 0041C 	    MOVL    8(R0), TPARSE_BLOCK+12				      ; 1298
				0000G  CF  9F 00422 	    PUSHAB  OVERRIDE_KTB					      ; 1299
				0000G  CF  9F 00426 	    PUSHAB  OVERRIDE_STB					      ;
				0000'  CF  9F 0042A 	    PUSHAB  TPARSE_BLOCK					      ;
		  0000G  CF	       03  FB 0042E 	    CALLS   #3, LIB$TPARSE					      ;
		         0D	       50  E8 00433 	    BLBS    R0, 1$						      ;
			    0072816C   8F  DD 00436 	    PUSHL   #7504236						      ; 1300
	      00000000G  00	       01  FB 0043C 	    CALLS   #1, LIB$STOP					      ;
	   05	  0000'  CF	       06  E1 00443 1$:     BBC     #6, MOUNT_OPTIONS+2, 2$				      ; 1302
		  0000'  CF	       01  8A 00449 	    BICB2   #1, GET_LABEL+2					      ; 1303
					   04 0044E 2$:     RET     							      ; 1281

; Routine Size:  63 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 25
; Digital Equipment Corporation
;
;	1306	ROUTINE PROCESSOR_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	1307	BEGIN
;	1308	
;	1309	MAP
;	1310		REQ_DESC	: REF BBLOCK;
;	1311	
;	1312	EXTERNAL
;	1313		PROCESSOR_STB	: VECTOR [0],	! state table address
;	1314		PROCESSOR_KTB	: VECTOR [0];	! keyword table address
;	1315	
;	1316	EXTERNAL ROUTINE
;	1317		LIB$TPARSE;
;	1318	
;	1319	! Parse the PROCESSOR switch options (leaving values and bits set).
;	1320	!
;	1321	
;	1322	TPARSE_BLOCK[TPA$L_STRINGCNT] = .REQ_DESC[CLI$W_QDVALSIZ];
;	1323	TPARSE_BLOCK[TPA$L_STRINGPTR] = .REQ_DESC[CLI$A_QDVALADR];
;	1324	IF NOT LIB$TPARSE (TPARSE_BLOCK, PROCESSOR_STB, PROCESSOR_KTB)
;	1325	THEN ERR_EXIT (MOUN$_BADACP);
;	1326	
;	1327	END;					! end of routine PROCESSOR_ACT



							    .GLOBL  PROCESSOR_STB, PROCESSOR_KTB

					 0000 0044F PROCESSOR_ACT:
							    .WORD   Save nothing					      ; 1306
		         50	  04   AC  D0 00451 	    MOVL    REQ_DESC, R0					      ; 1322
		  0000'  CF	  04   A0  3C 00455 	    MOVZWL  4(R0), TPARSE_BLOCK+8				      ;
		  0000'  CF	  08   A0  D0 0045B 	    MOVL    8(R0), TPARSE_BLOCK+12				      ; 1323
				0000G  CF  9F 00461 	    PUSHAB  PROCESSOR_KTB					      ; 1324
				0000G  CF  9F 00465 	    PUSHAB  PROCESSOR_STB					      ;
				0000'  CF  9F 00469 	    PUSHAB  TPARSE_BLOCK					      ;
		  0000G  CF	       03  FB 0046D 	    CALLS   #3, LIB$TPARSE					      ;
		         0D	       50  E8 00472 	    BLBS    R0, 1$						      ;
			    0072815C   8F  DD 00475 	    PUSHL   #7504220						      ; 1325
	      00000000G  00	       01  FB 0047B 	    CALLS   #1, LIB$STOP					      ;
					   04 00482 1$:     RET     							      ; 1306

; Routine Size:  52 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 26
; Digital Equipment Corporation
;
;	1328	ROUTINE DRIVES_ACT (REQ_DESC, CLI_CALLBACK) : NOVALUE =
;	1329	BEGIN
;	1330	
;	1331	MAP
;	1332		REQ_DESC	: REF BBLOCK;
;	1333	
;	1334	LOCAL
;	1335		STATUS;
;	1336	
;	1337	! Convert the value string to its numerical value.
;	1338	!
;	1339	
;	1340	STATUS = (.CLI_CALLBACK) (CONVERT_NUMBER, CLI_WORK_AREA, .REQ_DESC);
;	1341	IF NOT .STATUS THEN ERR_EXIT (.STATUS);
;	1342	MOUNT_OPTIONS[OPT_DRIVES] = 1;
;	1343	DRIVE_COUNT[.DEVICE_COUNT] = .CONVERT_NUMBER[CLI$L_RQVALU];
;	1344	
;	1345	END;					! end of routine DRIVES_ACT





					 0000 00483 DRIVES_ACT:
							    .WORD   Save nothing					      ; 1328
				  04   AC  DD 00485 	    PUSHL   REQ_DESC						      ; 1340
				0000'  CF  9F 00488 	    PUSHAB  CLI_WORK_AREA					      ;
				0000'  CF  9F 0048C 	    PUSHAB  CONVERT_NUMBER					      ;
		    08   BC	       03  FB 00490 	    CALLS   #3, @CLI_CALLBACK					      ;
		         09	       50  E8 00494 	    BLBS    STATUS, 1$						      ; 1341
				       50  DD 00497 	    PUSHL   STATUS						      ;
	      00000000G  00	       01  FB 00499 	    CALLS   #1, LIB$STOP					      ;
	   00	  0000'  CF	       27  E2 004A0 1$:     BBSS    #39, MOUNT_OPTIONS, 2$				      ; 1342
		         50	0000'  CF  D0 004A6 2$:     MOVL    DEVICE_COUNT, R0					      ; 1343
		  0000'CF40	0000'  CF  D0 004AB 	    MOVL    CONVERT_NUMBER+12, DRIVE_COUNT[R0]			      ;
					   04 004B3 	    RET     							      ; 1328

; Routine Size:  49 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 27
; Digital Equipment Corporation
;
;	1346	!+
;	1347	!
;	1348	! TPARSE action routines for the following TPARSE tables.
;	1349	!
;	1350	!-
;	1351	
;	1352	!
;	1353	! Store UIC group number
;	1354	!
;	1355	ROUTINE GET_UIC_GROUP =
;	1356	BEGIN
;	1357	
;	1358	TPARSE_ARGS (CONTEXT);
;	1359	
;	1360	UIC<16,16> = .CONTEXT[TPA$L_NUMBER];
;	1361	RETURN 1;
;	1362	
;	1363	END;					! end of routine GET_UIC_GROUP





					 0000 004B4 GET_UIC_GROUP:
							    .WORD   Save nothing					      ; 1355
		  0000'  CF	  1C   AC  B0 004B6 	    MOVW    28(CONTEXT), UIC+2					      ; 1360
		         50	       01  D0 004BC 	    MOVL    #1, R0						      ; 1361
					   04 004BF 	    RET     							      ; 1355

; Routine Size:  12 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 28
; Digital Equipment Corporation
;
;	1364	!
;	1365	! Store UIC member number
;	1366	!
;	1367	ROUTINE GET_UIC_MEMBER =
;	1368	BEGIN
;	1369	
;	1370	TPARSE_ARGS (CONTEXT);
;	1371	
;	1372	UIC<0,16> = .CONTEXT[TPA$L_NUMBER];
;	1373	RETURN 1;
;	1374	
;	1375	END;					! end of routine GET_UIC_MEMBER





					 0000 004C0 GET_UIC_MEMBER:
							    .WORD   Save nothing					      ; 1367
		  0000'  CF	  1C   AC  B0 004C2 	    MOVW    28(CONTEXT), UIC					      ; 1372
		         50	       01  D0 004C8 	    MOVL    #1, R0						      ; 1373
					   04 004CB 	    RET     							      ; 1367

; Routine Size:  12 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 29
; Digital Equipment Corporation
;
;	1376	!
;	1377	! Store ACP string (either device name or file name).
;	1378	!
;	1379	ROUTINE GET_ACP_NAME =
;	1380	BEGIN
;	1381	
;	1382	TPARSE_ARGS (CONTEXT);
;	1383	
;	1384	IF .CONTEXT[TPA$L_TOKENCNT] GTR 20
;	1385	THEN ERR_EXIT (MOUN$_ACPNAME);
;	1386	
;	1387	ACP_STRING[0] = .CONTEXT[TPA$L_TOKENCNT];
;	1388	ACP_STRING[1] = .CONTEXT[TPA$L_TOKENPTR];
;	1389	RETURN 1;
;	1390	
;	1391	END;					! end of routine GET_ACP_NAME





					 0000 004CC GET_ACP_NAME:
							    .WORD   Save nothing					      ; 1379
		         14	  10   AC  D1 004CE 	    CMPL    16(CONTEXT), #20					      ; 1384
				       0D  15 004D2 	    BLEQ    1$							      ;
			    00728144   8F  DD 004D4 	    PUSHL   #7504196						      ; 1385
	      00000000G  00	       01  FB 004DA 	    CALLS   #1, LIB$STOP					      ;
		  0000'  CF	  10   AC  7D 004E1 1$:     MOVQ    16(CONTEXT), ACP_STRING				      ; 1387
		         50	       01  D0 004E7 	    MOVL    #1, R0						      ; 1389
					   04 004EA 	    RET     							      ; 1379

; Routine Size:  31 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 30
; Digital Equipment Corporation
;
;	1392	!+
;	1393	!
;	1394	! TPARSE state tables to parse the various qualifier value strings.
;	1395	!
;	1396	!-
;	1397	
;	1398	!
;	1399	! Parse magtape density (either "800" or "1600").
;	1400	!
;	1401	$INIT_STATE (DENSITY_STB, DENSITY_KTB);
;	1402	
;	1403	$STATE	(,
;     P 1404		('1600'),
;     P 1405		('800',,, 1^OPT_DENS_800, MOUNT_OPTIONS)
;     P 1406		);
;	1407	
;	1408	$STATE	(,
;     P 1409		(TPA$_EOS, TPA$_EXIT)
;     P 1410		);
;	1411	
;	1412	!
;	1413	! Parse EBCDIC options: LABELS, DATA, both, or neither (implying both).
;	1414	!
;	1415	$INIT_STATE (EBCDIC_STB, EBCDIC_KTB);
;	1416	
;	1417	$STATE	(,
;     P 1418		(TPA$_EOS, TPA$_EXIT,, 1^OPT_EBC_DATA OR 1^OPT_EBC_LABELS, MOUNT_OPTIONS),
;     P 1419		(TPA$_LAMBDA)
;     P 1420		);
;	1421	
;	1422	$STATE	(EBCOPT,
;     P 1423		('DATA',,, 1^OPT_EBC_DATA, MOUNT_OPTIONS),
;     P 1424		('LABELS',,, 1^OPT_EBC_LABELS, MOUNT_OPTIONS)
;     P 1425		);
;	1426	
;	1427	$STATE	(,
;     P 1428		(',', EBCOPT),
;     P 1429		(TPA$_EOS, TPA$_EXIT)
;     P 1430		);
;	1431	
;	1432	!
;	1433	! Parse data check options, of the form [READ][,WRITE]. Default is write.
;	1434	!
;	1435	$INIT_STATE (DATACHECK_STB, DATACHECK_KTB);
;	1436	
;	1437	$STATE	(,
;     P 1438		(TPA$_EOS, TPA$_EXIT,, 1^(OPT_WRITECHECK-32), MOUNT_OPTIONS+4),
;     P 1439		(TPA$_LAMBDA)
;     P 1440		);
;	1441	
;	1442	$STATE	(CHECKOPT,
;     P 1443		('READ',,, 1^(OPT_READCHECK-32), MOUNT_OPTIONS+4),
;     P 1444		('WRITE',,, 1^(OPT_WRITECHECK-32), MOUNT_OPTIONS+4)
;     P 1445		);
;	1446	

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 30-1
; Digital Equipment Corporation
;
;	1447	$STATE	(,
;     P 1448		(',', CHECKOPT),
;     P 1449		(TPA$_EOS, TPA$_EXIT)
;     P 1450		);
;	1451	
;	1452	!
;	1453	! Parse protection string "(SYSTEM:RWED,OWNER:RWED,GROUP:RWED,WORLD:RWED)"
;	1454	!
;	1455	$INIT_STATE (PROTECTION_STB, PROTECTION_KTB);
;	1456	
;	1457	$STATE	(NEXTPRO,
;     P 1458		('SYSTEM', SYPR,, %X'000F0000', PROTECTION),
;     P 1459		('OWNER',  OWPR,, %X'00F00000', PROTECTION),
;     P 1460		('GROUP',  GRPR,, %X'0F000000', PROTECTION),
;     P 1461		('WORLD',  WOPR,, %X'F0000000', PROTECTION)
;     P 1462		);
;	1463	
;	1464	$STATE	(SYPR,
;     P 1465		(':'),
;     P 1466		('='),
;     P 1467		(TPA$_LAMBDA, ENDPRO)
;     P 1468		);
;	1469	
;	1470	$STATE	(SYPR0,
;     P 1471		('R', SYPR0,, %X'0001', PROTECTION),
;     P 1472		('W', SYPR0,, %X'0002', PROTECTION),
;     P 1473		('E', SYPR0,, %X'0004', PROTECTION),
;     P 1474		('P', SYPR0,, %X'0004', PROTECTION),
;     P 1475		('D', SYPR0,, %X'0008', PROTECTION),
;     P 1476		('L', SYPR0,, %X'0008', PROTECTION),
;     P 1477		(TPA$_LAMBDA, ENDPRO)
;     P 1478		);
;	1479	
;	1480	$STATE	(OWPR,
;     P 1481		(':'),
;     P 1482		('='),
;     P 1483		(TPA$_LAMBDA, ENDPRO)
;     P 1484		);
;	1485	
;	1486	$STATE	(OWPR0,
;     P 1487		('R', OWPR0,, %X'0010', PROTECTION),
;     P 1488		('W', OWPR0,, %X'0020', PROTECTION),
;     P 1489		('E', OWPR0,, %X'0040', PROTECTION),
;     P 1490		('P', OWPR0,, %X'0040', PROTECTION),
;     P 1491		('D', OWPR0,, %X'0080', PROTECTION),
;     P 1492		('L', OWPR0,, %X'0080', PROTECTION),
;     P 1493		(TPA$_LAMBDA, ENDPRO)
;     P 1494		);
;	1495	
;	1496	$STATE	(GRPR,
;     P 1497		(':'),
;     P 1498		('='),
;     P 1499		(TPA$_LAMBDA, ENDPRO)
;     P 1500		);
;	1501	

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 30-2
; Digital Equipment Corporation
;
;	1502	$STATE	(GRPR0,
;     P 1503		('R', GRPR0,, %X'0100', PROTECTION),
;     P 1504		('W', GRPR0,, %X'0200', PROTECTION),
;     P 1505		('E', GRPR0,, %X'0400', PROTECTION),
;     P 1506		('P', GRPR0,, %X'0400', PROTECTION),
;     P 1507		('D', GRPR0,, %X'0800', PROTECTION),
;     P 1508		('L', GRPR0,, %X'0800', PROTECTION),
;     P 1509		(TPA$_LAMBDA, ENDPRO)
;     P 1510		);
;	1511	
;	1512	$STATE	(WOPR,
;     P 1513		(':'),
;     P 1514		('='),
;     P 1515		(TPA$_LAMBDA, ENDPRO)
;     P 1516		);
;	1517	
;	1518	$STATE	(WOPR0,
;     P 1519		('R', WOPR0,, %X'1000', PROTECTION),
;     P 1520		('W', WOPR0,, %X'2000', PROTECTION),
;     P 1521		('E', WOPR0,, %X'4000', PROTECTION),
;     P 1522		('P', WOPR0,, %X'4000', PROTECTION),
;     P 1523		('D', WOPR0,, %X'8000', PROTECTION),
;     P 1524		('L', WOPR0,, %X'8000', PROTECTION),
;     P 1525		(TPA$_LAMBDA, ENDPRO)
;     P 1526		);
;	1527	
;	1528	$STATE	(ENDPRO,
;     P 1529		(',', NEXTPRO),
;     P 1530		(TPA$_EOS, TPA$_EXIT)
;     P 1531		);
;	1532	
;	1533	!
;	1534	! Parse UIC string and store binary value.
;	1535	!
;	1536	$INIT_STATE (UIC_STB, UIC_KTB);
;	1537	
;	1538	$STATE	(,
;     P 1539		('['),
;     P 1540		('<')
;     P 1541		);
;	1542	
;	1543	$STATE	(,
;     P 1544		(TPA$_OCTAL,, GET_UIC_GROUP)
;     P 1545		);
;	1546	
;	1547	$STATE	(,
;     P 1548		(',')
;     P 1549		);
;	1550	
;	1551	$STATE	(,
;     P 1552		(TPA$_OCTAL,, GET_UIC_MEMBER)
;     P 1553		);
;	1554	
;	1555	$STATE	(,
;     P 1556		(']'),

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 30-3
; Digital Equipment Corporation
;
;     P 1557		('>')
;     P 1558		);
;	1559	
;	1560	$STATE	(,
;     P 1561		(TPA$_EOS, TPA$_EXIT)
;     P 1562		);
;	1563	
;	1564	!
;	1565	! Parse OVERRIDE options (ACCESSIBILITY, EXPIRATION, SETIDENTIFICATION, IDENTIFICATION).
;	1566	!
;	1567	$INIT_STATE (OVERRIDE_STB, OVERRIDE_KTB);
;	1568	
;	1569	$STATE	(NEXTOVR,
;     P 1570		('ACCESSIBILITY',,,1^OPT_OVR_ACC, MOUNT_OPTIONS),
;     P 1571		('EXPIRATION',,, 1^OPT_OVR_EXP, MOUNT_OPTIONS),
;     P 1572		('SETIDENTIFICATION',,, 1^OPT_OVR_SETID, MOUNT_OPTIONS),
;     P 1573		('IDENTIFICATION',, NOLABEL_ACT, 1^OPT_OVR_ID, MOUNT_OPTIONS)
;     P 1574		);
;	1575	
;	1576	$STATE	(,
;     P 1577		(',',NEXTOVR),
;     P 1578		(TPA$_EOS, TPA$_EXIT)
;     P 1579		);
;	1580	
;	1581	!
;	1582	! Parse PROCESSOR options, set bits and store name.
;	1583	!
;	1584	$INIT_STATE (PROCESSOR_STB, PROCESSOR_KTB);
;	1585	
;	1586	$STATE	(,
;     P 1587		('UNIQUE',,, 1^OPT_UNIQUEACP, MOUNT_OPTIONS),
;     P 1588		('SAME', SAMEPROC,, 1^OPT_SAMEACP, MOUNT_OPTIONS),
;     P 1589		((FILENAME),, GET_ACP_NAME, 1^OPT_FILEACP, MOUNT_OPTIONS)
;     P 1590		);
;	1591	
;	1592	$STATE	(ENDPROC,
;     P 1593		(TPA$_EOS, TPA$_EXIT)
;     P 1594		);
;	1595	
;	1596	$STATE	(SAMEPROC,
;     P 1597		(':'),
;     P 1598		('=')
;     P 1599		);
;	1600	
;	1601	$STATE	(,
;     P 1602		((DEVICENAME), ENDPROC, GET_ACP_NAME)
;     P 1603		);
;	1604	
;	1605	$STATE	(FILENAME,
;     P 1606		(TPA$_SYMBOL, FILENAME),
;     P 1607		('.', FILENAME),
;     P 1608		(';', FILENAME),
;     P 1609		(TPA$_LAMBDA, TPA$_EXIT)
;     P 1610		);
;	1611	

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 30-4
; Digital Equipment Corporation
;
;	1612	$STATE	(DEVICENAME,
;     P 1613		(TPA$_SYMBOL)
;     P 1614		);
;	1615	
;	1616	$STATE	(,
;     P 1617		(':', TPA$_EXIT),
;     P 1618		(TPA$_EOS, TPA$_EXIT)
;     P 1619		);
;	1620	
;	1621	END
;	1622	ELUDOM



							    .PSECT  LIB$KEY1$,NOWRT,NOEXE,  SHR,0

					      00000 ;TPA$KEYST0
						    U.2:    .BLKB   0
					      00000 U.4:    .ASCII  \1600\						      ;
					      00004 	    .BYTE   -1							      ;
					      00005 ;TPA$KEYST0
						    U.6:    .BLKB   0
					      00005 U.8:    .ASCII  \800\						      ;
					      00008 	    .BYTE   -1							      ;
					      00009 U.12:   .BYTE   -1							      ;
					      0000A ;TPA$KEYST0
						    U.21:   .BLKB   0
					      0000A U.23:   .ASCII  \DATA\						      ;
					      0000E 	    .BYTE   -1							      ;
					      0000F ;TPA$KEYST0
						    U.27:   .BLKB   0
					      0000F U.29:   .ASCII  \LABELS\						      ;
					      00015 	    .BYTE   -1							      ;
					      00016 U.33:   .BYTE   -1							      ;
					      00017 ;TPA$KEYST0
						    U.44:   .BLKB   0
					      00017 U.46:   .ASCII  \READ\						      ;
					      0001B 	    .BYTE   -1							      ;
					      0001C ;TPA$KEYST0
						    U.50:   .BLKB   0
					      0001C U.52:   .ASCII  \WRITE\						      ;
					      00021 	    .BYTE   -1							      ;
					      00022 U.56:   .BYTE   -1							      ;
					      00023 ;TPA$KEYST0
						    U.62:   .BLKB   0
					      00023 U.64:   .ASCII  \SYSTEM\						      ;
					      00029 	    .BYTE   -1							      ;
					      0002A ;TPA$KEYST0
						    U.70:   .BLKB   0
					      0002A U.72:   .ASCII  \OWNER\						      ;
					      0002F 	    .BYTE   -1							      ;
					      00030 ;TPA$KEYST0
						    U.78:   .BLKB   0
					      00030 U.80:   .ASCII  \GROUP\						      ;
					      00035 	    .BYTE   -1							      ;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 30-5
; Digital Equipment Corporation
;
					      00036 ;TPA$KEYST0
						    U.86:   .BLKB   0
					      00036 U.88:   .ASCII  \WORLD\						      ;
					      0003B 	    .BYTE   -1							      ;
					      0003C U.94:   .BYTE   -1							      ;
					      0003D ;TPA$KEYST0
						    U.233:  .BLKB   0
					      0003D U.235:  .ASCII  \ACCESSIBILITY\					      ;
					      0004A 	    .BYTE   -1							      ;
					      0004B ;TPA$KEYST0
						    U.239:  .BLKB   0
					      0004B U.241:  .ASCII  \EXPIRATION\					      ;
					      00055 	    .BYTE   -1							      ;
					      00056 ;TPA$KEYST0
						    U.245:  .BLKB   0
					      00056 U.247:  .ASCII  \SETIDENTIFICATION\					      ;
					      00067 	    .BYTE   -1							      ;
					      00068 ;TPA$KEYST0
						    U.251:  .BLKB   0
					      00068 U.253:  .ASCII  \IDENTIFICATION\					      ;
					      00076 	    .BYTE   -1							      ;
					      00077 U.258:  .BYTE   -1							      ;
					      00078 ;TPA$KEYST0
						    U.264:  .BLKB   0
					      00078 U.266:  .ASCII  \UNIQUE\						      ;
					      0007E 	    .BYTE   -1							      ;
					      0007F ;TPA$KEYST0
						    U.270:  .BLKB   0
					      0007F U.272:  .ASCII  \SAME\						      ;
					      00083 	    .BYTE   -1							      ;
					      00084 U.284:  .BYTE   -1							      ;

							    .PSECT  LIB$STATE$,NOWRT,NOEXE,  SHR,0

					      00000 DENSITY_STB::
							    .BLKB   0
					      00000 U.5:    .WORD   256							      ;
					      00002 U.9:    .WORD   25857						      ;
					      00004 U.10:   .LONG    <<MOUNT_OPTIONS-U.10>-4>				      ;
					      00008 U.11:   .LONG   2							      ;
					      0000C U.13:   .WORD   5623						      ;
					      0000E U.14:   .WORD   -1							      ;
					      00010 EBCDIC_STB::
							    .BLKB   0
					      00010 U.16:   .WORD   29175						      ;
					      00012 U.17:   .LONG    <<MOUNT_OPTIONS-U.17>-4>				      ;
					      00016 U.18:   .LONG   24576						      ;
					      0001A U.19:   .WORD   -1							      ;
					      0001C U.20:   .WORD   1526						      ;
					      0001E EBCOPT: .BLKB   0
					      0001E U.24:   .WORD   24832						      ;
					      00020 U.25:   .LONG    <<MOUNT_OPTIONS-U.25>-4>				      ;
					      00024 U.26:   .LONG   8192						      ;
					      00028 U.30:   .WORD   25857						      ;
					      0002A U.31:   .LONG    <<MOUNT_OPTIONS-U.31>-4>				      ;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 30-6
; Digital Equipment Corporation
;
					      0002E U.32:   .LONG   16384						      ;
					      00032 U.34:   .WORD   4140						      ;
					      00034 U.35:   .WORD    <<EBCOPT-U.35>-2>					      ;
					      00036 U.36:   .WORD   5623						      ;
					      00038 U.37:   .WORD   -1							      ;
					      0003A	    .BLKB   2
					      0003C DATACHECK_STB::
							    .BLKB   0
					      0003C U.39:   .WORD   29175						      ;
					      0003E U.40:   .LONG    <<<MOUNT_OPTIONS+4>-U.40>-4>			      ;
					      00042 U.41:   .LONG   16							      ;
					      00046 U.42:   .WORD   -1							      ;
					      00048 U.43:   .WORD   1526						      ;
					      0004A CHECKOPT:
							    .BLKB   0
					      0004A U.47:   .WORD   24832						      ;
					      0004C U.48:   .LONG    <<<MOUNT_OPTIONS+4>-U.48>-4>			      ;
					      00050 U.49:   .LONG   8							      ;
					      00054 U.53:   .WORD   25857						      ;
					      00056 U.54:   .LONG    <<<MOUNT_OPTIONS+4>-U.54>-4>			      ;
					      0005A U.55:   .LONG   16							      ;
					      0005E U.57:   .WORD   4140						      ;
					      00060 U.58:   .WORD    <<CHECKOPT-U.58>-2>				      ;
					      00062 U.59:   .WORD   5623						      ;
					      00064 U.60:   .WORD   -1							      ;
					      00066	    .BLKB   2
					      00068 PROTECTION_STB::
							    .BLKB   0
					      00068 NEXTPRO:.BLKB   0
					      00068 U.65:   .WORD   28928						      ;
					      0006A U.66:   .LONG    <<PROTECTION-U.66>-4>				      ;
					      0006E U.67:   .LONG   983040						      ;
					      00072 U.69:   .WORD    <<U.68-U.69>-2>					      ;
					      00074 U.73:   .WORD   28929						      ;
					      00076 U.74:   .LONG    <<PROTECTION-U.74>-4>				      ;
					      0007A U.75:   .LONG   15728640						      ;
					      0007E U.77:   .WORD    <<U.76-U.77>-2>					      ;
					      00080 U.81:   .WORD   28930						      ;
					      00082 U.82:   .LONG    <<PROTECTION-U.82>-4>				      ;
					      00086 U.83:   .LONG   251658240						      ;
					      0008A U.85:   .WORD    <<U.84-U.85>-2>					      ;
					      0008C U.89:   .WORD   29955						      ;
					      0008E U.90:   .LONG    <<PROTECTION-U.90>-4>				      ;
					      00092 U.91:   .LONG   -268435456						      ;
					      00096 U.93:   .WORD    <<U.92-U.93>-2>					      ;
					      00098 ;SYPR
						    U.68:   .BLKB   0
					      00098 U.95:   .WORD   58							      ;
					      0009A U.96:   .WORD   61							      ;
					      0009C U.97:   .WORD   5622						      ;
					      0009E U.99:   .WORD    <<U.98-U.99>-2>					      ;
					      000A0 SYPR0:  .BLKB   0
					      000A0 U.100:  .WORD   28754						      ;
					      000A2 U.101:  .LONG    <<PROTECTION-U.101>-4>				      ;
					      000A6 U.102:  .LONG   1							      ;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 30-7
; Digital Equipment Corporation
;
					      000AA U.103:  .WORD    <<SYPR0-U.103>-2>					      ;
					      000AC U.104:  .WORD   28759						      ;
					      000AE U.105:  .LONG    <<PROTECTION-U.105>-4>				      ;
					      000B2 U.106:  .LONG   2							      ;
					      000B6 U.107:  .WORD    <<SYPR0-U.107>-2>					      ;
					      000B8 U.108:  .WORD   28741						      ;
					      000BA U.109:  .LONG    <<PROTECTION-U.109>-4>				      ;
					      000BE U.110:  .LONG   4							      ;
					      000C2 U.111:  .WORD    <<SYPR0-U.111>-2>					      ;
					      000C4 U.112:  .WORD   28752						      ;
					      000C6 U.113:  .LONG    <<PROTECTION-U.113>-4>				      ;
					      000CA U.114:  .LONG   4							      ;
					      000CE U.115:  .WORD    <<SYPR0-U.115>-2>					      ;
					      000D0 U.116:  .WORD   28740						      ;
					      000D2 U.117:  .LONG    <<PROTECTION-U.117>-4>				      ;
					      000D6 U.118:  .LONG   8							      ;
					      000DA U.119:  .WORD    <<SYPR0-U.119>-2>					      ;
					      000DC U.120:  .WORD   28748						      ;
					      000DE U.121:  .LONG    <<PROTECTION-U.121>-4>				      ;
					      000E2 U.122:  .LONG   8							      ;
					      000E6 U.123:  .WORD    <<SYPR0-U.123>-2>					      ;
					      000E8 U.124:  .WORD   5622						      ;
					      000EA U.125:  .WORD    <<U.98-U.125>-2>					      ;
					      000EC ;OWPR
						    U.76:   .BLKB   0
					      000EC U.126:  .WORD   58							      ;
					      000EE U.127:  .WORD   61							      ;
					      000F0 U.128:  .WORD   5622						      ;
					      000F2 U.129:  .WORD    <<U.98-U.129>-2>					      ;
					      000F4 OWPR0:  .BLKB   0
					      000F4 U.130:  .WORD   28754						      ;
					      000F6 U.131:  .LONG    <<PROTECTION-U.131>-4>				      ;
					      000FA U.132:  .LONG   16							      ;
					      000FE U.133:  .WORD    <<OWPR0-U.133>-2>					      ;
					      00100 U.134:  .WORD   28759						      ;
					      00102 U.135:  .LONG    <<PROTECTION-U.135>-4>				      ;
					      00106 U.136:  .LONG   32							      ;
					      0010A U.137:  .WORD    <<OWPR0-U.137>-2>					      ;
					      0010C U.138:  .WORD   28741						      ;
					      0010E U.139:  .LONG    <<PROTECTION-U.139>-4>				      ;
					      00112 U.140:  .LONG   64							      ;
					      00116 U.141:  .WORD    <<OWPR0-U.141>-2>					      ;
					      00118 U.142:  .WORD   28752						      ;
					      0011A U.143:  .LONG    <<PROTECTION-U.143>-4>				      ;
					      0011E U.144:  .LONG   64							      ;
					      00122 U.145:  .WORD    <<OWPR0-U.145>-2>					      ;
					      00124 U.146:  .WORD   28740						      ;
					      00126 U.147:  .LONG    <<PROTECTION-U.147>-4>				      ;
					      0012A U.148:  .LONG   128							      ;
					      0012E U.149:  .WORD    <<OWPR0-U.149>-2>					      ;
					      00130 U.150:  .WORD   28748						      ;
					      00132 U.151:  .LONG    <<PROTECTION-U.151>-4>				      ;
					      00136 U.152:  .LONG   128							      ;
					      0013A U.153:  .WORD    <<OWPR0-U.153>-2>					      ;
					      0013C U.154:  .WORD   5622						      ;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 30-8
; Digital Equipment Corporation
;
					      0013E U.155:  .WORD    <<U.98-U.155>-2>					      ;
					      00140 ;GRPR
						    U.84:   .BLKB   0
					      00140 U.156:  .WORD   58							      ;
					      00142 U.157:  .WORD   61							      ;
					      00144 U.158:  .WORD   5622						      ;
					      00146 U.159:  .WORD    <<U.98-U.159>-2>					      ;
					      00148 GRPR0:  .BLKB   0
					      00148 U.160:  .WORD   28754						      ;
					      0014A U.161:  .LONG    <<PROTECTION-U.161>-4>				      ;
					      0014E U.162:  .LONG   256							      ;
					      00152 U.163:  .WORD    <<GRPR0-U.163>-2>					      ;
					      00154 U.164:  .WORD   28759						      ;
					      00156 U.165:  .LONG    <<PROTECTION-U.165>-4>				      ;
					      0015A U.166:  .LONG   512							      ;
					      0015E U.167:  .WORD    <<GRPR0-U.167>-2>					      ;
					      00160 U.168:  .WORD   28741						      ;
					      00162 U.169:  .LONG    <<PROTECTION-U.169>-4>				      ;
					      00166 U.170:  .LONG   1024						      ;
					      0016A U.171:  .WORD    <<GRPR0-U.171>-2>					      ;
					      0016C U.172:  .WORD   28752						      ;
					      0016E U.173:  .LONG    <<PROTECTION-U.173>-4>				      ;
					      00172 U.174:  .LONG   1024						      ;
					      00176 U.175:  .WORD    <<GRPR0-U.175>-2>					      ;
					      00178 U.176:  .WORD   28740						      ;
					      0017A U.177:  .LONG    <<PROTECTION-U.177>-4>				      ;
					      0017E U.178:  .LONG   2048						      ;
					      00182 U.179:  .WORD    <<GRPR0-U.179>-2>					      ;
					      00184 U.180:  .WORD   28748						      ;
					      00186 U.181:  .LONG    <<PROTECTION-U.181>-4>				      ;
					      0018A U.182:  .LONG   2048						      ;
					      0018E U.183:  .WORD    <<GRPR0-U.183>-2>					      ;
					      00190 U.184:  .WORD   5622						      ;
					      00192 U.185:  .WORD    <<U.98-U.185>-2>					      ;
					      00194 ;WOPR
						    U.92:   .BLKB   0
					      00194 U.186:  .WORD   58							      ;
					      00196 U.187:  .WORD   61							      ;
					      00198 U.188:  .WORD   5622						      ;
					      0019A U.189:  .WORD    <<U.98-U.189>-2>					      ;
					      0019C WOPR0:  .BLKB   0
					      0019C U.190:  .WORD   28754						      ;
					      0019E U.191:  .LONG    <<PROTECTION-U.191>-4>				      ;
					      001A2 U.192:  .LONG   4096						      ;
					      001A6 U.193:  .WORD    <<WOPR0-U.193>-2>					      ;
					      001A8 U.194:  .WORD   28759						      ;
					      001AA U.195:  .LONG    <<PROTECTION-U.195>-4>				      ;
					      001AE U.196:  .LONG   8192						      ;
					      001B2 U.197:  .WORD    <<WOPR0-U.197>-2>					      ;
					      001B4 U.198:  .WORD   28741						      ;
					      001B6 U.199:  .LONG    <<PROTECTION-U.199>-4>				      ;
					      001BA U.200:  .LONG   16384						      ;
					      001BE U.201:  .WORD    <<WOPR0-U.201>-2>					      ;
					      001C0 U.202:  .WORD   28752						      ;
					      001C2 U.203:  .LONG    <<PROTECTION-U.203>-4>				      ;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 30-9
; Digital Equipment Corporation
;
					      001C6 U.204:  .LONG   16384						      ;
					      001CA U.205:  .WORD    <<WOPR0-U.205>-2>					      ;
					      001CC U.206:  .WORD   28740						      ;
					      001CE U.207:  .LONG    <<PROTECTION-U.207>-4>				      ;
					      001D2 U.208:  .LONG   32768						      ;
					      001D6 U.209:  .WORD    <<WOPR0-U.209>-2>					      ;
					      001D8 U.210:  .WORD   28748						      ;
					      001DA U.211:  .LONG    <<PROTECTION-U.211>-4>				      ;
					      001DE U.212:  .LONG   32768						      ;
					      001E2 U.213:  .WORD    <<WOPR0-U.213>-2>					      ;
					      001E4 U.214:  .WORD   5622						      ;
					      001E6 U.215:  .WORD    <<U.98-U.215>-2>					      ;
					      001E8 ;ENDPRO
						    U.98:   .BLKB   0
					      001E8 U.216:  .WORD   4140						      ;
					      001EA U.217:  .WORD    <<NEXTPRO-U.217>-2>				      ;
					      001EC U.218:  .WORD   5623						      ;
					      001EE U.219:  .WORD   -1							      ;
					      001F0 UIC_STB::
							    .BLKB   0
					      001F0 U.221:  .WORD   91							      ;
					      001F2 U.222:  .WORD   1084						      ;
					      001F4 U.223:  .WORD   -31244						      ;
					      001F6 U.224:  .LONG    <<GET_UIC_GROUP-U.224>-4>				      ;
					      001FA U.225:  .WORD   1068						      ;
					      001FC U.226:  .WORD   -31244						      ;
					      001FE U.227:  .LONG    <<GET_UIC_MEMBER-U.227>-4>				      ;
					      00202 U.228:  .WORD   93							      ;
					      00204 U.229:  .WORD   1086						      ;
					      00206 U.230:  .WORD   5623						      ;
					      00208 U.231:  .WORD   -1							      ;
					      0020A	    .BLKB   2
					      0020C OVERRIDE_STB::
							    .BLKB   0
					      0020C NEXTOVR:.BLKB   0
					      0020C U.236:  .WORD   24832						      ;
					      0020E U.237:  .LONG    <<MOUNT_OPTIONS-U.237>-4>				      ;
					      00212 U.238:  .LONG   0							      ;
					      00216 U.242:  .WORD   24833						      ;
					      00218 U.243:  .LONG    <<MOUNT_OPTIONS-U.243>-4>				      ;
					      0021C U.244:  .LONG   1048576						      ;
					      00220 U.248:  .WORD   24834						      ;
					      00222 U.249:  .LONG    <<MOUNT_OPTIONS-U.249>-4>				      ;
					      00226 U.250:  .LONG   2097152						      ;
					      0022A U.254:  .WORD   -6909						      ;
					      0022C U.255:  .LONG    <<NOLABEL_ACT-U.255>-4>				      ;
					      00230 U.256:  .LONG    <<MOUNT_OPTIONS-U.256>-4>				      ;
					      00234 U.257:  .LONG   4194304						      ;
					      00238 U.259:  .WORD   4140						      ;
					      0023A U.260:  .WORD    <<NEXTOVR-U.260>-2>				      ;
					      0023C U.261:  .WORD   5623						      ;
					      0023E U.262:  .WORD   -1							      ;
					      00240 PROCESSOR_STB::
							    .BLKB   0
					      00240 U.267:  .WORD   24832						      ;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 30-10
; Digital Equipment Corporation
;
					      00242 U.268:  .LONG    <<MOUNT_OPTIONS-U.268>-4>				      ;
					      00246 U.269:  .LONG   67108864						      ;
					      0024A U.273:  .WORD   28929						      ;
					      0024C U.274:  .LONG    <<MOUNT_OPTIONS-U.274>-4>				      ;
					      00250 U.275:  .LONG   134217728						      ;
					      00254 U.277:  .WORD    <<U.276-U.277>-2>					      ;
					      00256 U.278:  .WORD   -4616						      ;
					      00258 U.280:  .WORD    <<U.279-U.280>-2>					      ;
					      0025A U.281:  .LONG    <<GET_ACP_NAME-U.281>-4>				      ;
					      0025E U.282:  .LONG    <<MOUNT_OPTIONS-U.282>-4>				      ;
					      00262 U.283:  .LONG   268435456						      ;
					      00266 ENDPROC:.BLKB   0
					      00266 U.285:  .WORD   5623						      ;
					      00268 U.286:  .WORD   -1							      ;
					      0026A ;SAMEPROC
						    U.276:  .BLKB   0
					      0026A U.287:  .WORD   58							      ;
					      0026C U.288:  .WORD   1085						      ;
					      0026E U.289:  .WORD   -25096						      ;
					      00270 U.291:  .WORD    <<U.290-U.291>-2>					      ;
					      00272 U.292:  .LONG    <<GET_ACP_NAME-U.292>-4>				      ;
					      00276 U.293:  .WORD    <<ENDPROC-U.293>-2>				      ;
					      00278 ;FILENAME
						    U.279:  .BLKB   0
					      00278 U.294:  .WORD   4593						      ;
					      0027A U.295:  .WORD    <<U.279-U.295>-2>					      ;
					      0027C U.296:  .WORD   4142						      ;
					      0027E U.297:  .WORD    <<U.279-U.297>-2>					      ;
					      00280 U.298:  .WORD   4155						      ;
					      00282 U.299:  .WORD    <<U.279-U.299>-2>					      ;
					      00284 U.300:  .WORD   5622						      ;
					      00286 U.301:  .WORD   -1							      ;
					      00288 ;DEVICENAME
						    U.290:  .BLKB   0
					      00288 U.302:  .WORD   1521						      ;
					      0028A U.303:  .WORD   4154						      ;
					      0028C U.304:  .WORD   -1							      ;
					      0028E U.305:  .WORD   5623						      ;
					      00290 U.306:  .WORD   -1							      ;

							    .PSECT  LIB$KEY0$,NOWRT,NOEXE,  SHR,1

					      00000 DENSITY_KTB::
							    .BLKB   0
					      00000 ;TPA$KEY0
						    U.1:    .BLKB   0
					      00000 U.3:    .WORD    <U.2-U.1>						      ;
					      00002 U.7:    .WORD    <U.6-U.1>						      ;
					      00004 EBCDIC_KTB::
							    .BLKB   0
					      00004 ;TPA$KEY0
						    U.15:   .BLKB   0
					      00004 U.22:   .WORD    <U.21-U.15>					      ;
					      00006 U.28:   .WORD    <U.27-U.15>					      ;
					      00008 DATACHECK_KTB::

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 30-11
; Digital Equipment Corporation
;
							    .BLKB   0
					      00008 ;TPA$KEY0
						    U.38:   .BLKB   0
					      00008 U.45:   .WORD    <U.44-U.38>					      ;
					      0000A U.51:   .WORD    <U.50-U.38>					      ;
					      0000C PROTECTION_KTB::
							    .BLKB   0
					      0000C ;TPA$KEY0
						    U.61:   .BLKB   0
					      0000C U.63:   .WORD    <U.62-U.61>					      ;
					      0000E U.71:   .WORD    <U.70-U.61>					      ;
					      00010 U.79:   .WORD    <U.78-U.61>					      ;
					      00012 U.87:   .WORD    <U.86-U.61>					      ;
					      00014 UIC_KTB::
							    .BLKB   0
					      00014 ;TPA$KEY0
						    U.220:  .BLKB   0
					      00014 OVERRIDE_KTB::
							    .BLKB   0
					      00014 ;TPA$KEY0
						    U.232:  .BLKB   0
					      00014 U.234:  .WORD    <U.233-U.232>					      ;
					      00016 U.240:  .WORD    <U.239-U.232>					      ;
					      00018 U.246:  .WORD    <U.245-U.232>					      ;
					      0001A U.252:  .WORD    <U.251-U.232>					      ;
					      0001C PROCESSOR_KTB::
							    .BLKB   0
					      0001C ;TPA$KEY0
						    U.263:  .BLKB   0
					      0001C U.265:  .WORD    <U.264-U.263>					      ;
					      0001E U.271:  .WORD    <U.270-U.263>					      ;


							    .GLOBL  LIB$STOP

;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $GLOBAL$       	   400    WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $OWN$          	   980    WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $CODE$         	  1259  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  LIB$KEY0$      	    32  NOWRT,  RD ,NOEXE,  SHR,  LCL,  REL,  CON,NOPIC,ALIGN(1)
;  LIB$STATE$     	   658  NOWRT,  RD ,NOEXE,  SHR,  LCL,  REL,  CON,NOPIC,ALIGN(0)
;  LIB$KEY1$      	   133  NOWRT,  RD ,NOEXE,  SHR,  LCL,  REL,  CON,NOPIC,ALIGN(0)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]LIB.L32;1		      5582        35         0       242

; Bliss-32 7.352	Saturday 21-AUG-1978 23:58:12	DBB3:[MOUNT.SRC]MOUPAR.B32;24					Page 30-12
; Digital Equipment Corporation
;
;  DBA4:[SYSLIB]CLIMAC.L32;1		        14        14       100        14
;  DBA4:[SYSLIB]TPAMAC.L32;1		        39        28        71        22





; Size:		1259 code + 2203 data bytes
; Run Time:	02:53.0
; Elapsed Time:	06:50.1
; Memory Used:	435 pages
; Compilation Complete
