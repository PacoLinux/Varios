
; Bliss-32 7.352	Saturday 22-AUG-1978 00:11:26	DBB3:[MOUNT.SRC]SRCVOL.B32;11					Page 1
; Digital Equipment Corporation
;
;	0001	MODULE SRCVOL (
;	0002			LANGUAGE (BLISS32),
;	0003			IDENT = 'X0003'
;	0004			) =
;	0005	BEGIN
;	0006	
;	0007	!
;	0008	! Copyright (c) 1977
;	0009	! Digital Equipment Corporation, Maynard, Massachusetts 01754
;	0010	!
;	0011	! This software is furnished  under a license for use only on a single
;	0012	! computer  system and  may be  copied only with  the inclusion of the
;	0013	! above copyright notice.  This software, or any other copies thereof,
;	0014	! may not be provided or  otherwise made available to any other person
;	0015	! except for use on such system and to one who agrees to these license
;	0016	! terms.  Title to and  ownership of the  software  shall at all times
;	0017	! remain in DEC.
;	0018	!
;	0019	! The information in this software is subject to change without notice
;	0020	! and should  not be construed  as a commitment  by Digital  Equipment
;	0021	! Corporation.
;	0022	!
;	0023	! DEC assumes  no  responsibility  for  the use or  reliability of its
;	0024	! software on equipment which is not supplied by DEC.
;	0025	
;	0026	!++
;	0027	!
;	0028	! FACILITY:  MOUNT Utility Structure Level 1
;	0029	!
;	0030	! ABSTRACT:
;	0031	!
;	0032	!	This routine searches the device database for a particular volume.
;	0033	!
;	0034	! ENVIRONMENT:
;	0035	!
;	0036	!	STARLET operating system, including privileged system services
;	0037	!	and internal exec routines.
;	0038	!
;	0039	!--
;	0040	!
;	0041	!
;	0042	! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  13-Oct-1977  20:09
;	0043	!
;	0044	! REVISION HISTORY:
;	0045	!
;	0046	!   D. H. Gillespie, 5-Dec-1977  18:26
;	0047	!   X0002 - PUT NAMEBUF_LEN IN MOUDEF.B32
;	0048	!
;	0049	!   Andrew C. Goldstein, 17-Feb-1978  15:01
;	0050	!   X0003 - Use new bug check
;	0051	!
;	0052	!**
;	0053	
;	0054	
;	0055	LIBRARY 'SYS$LIBRARY:LIB.L32';

; Bliss-32 7.352	Saturday 22-AUG-1978 00:11:26	DBB3:[MOUNT.SRC]SRCVOL.B32;11					Page 1-1
; Digital Equipment Corporation
;
;	0056	REQUIRE 'SRC$:MOUDEF.B32';
;	0363	REQUIRE 'LIBD$:[VMSLIB.OBJ]MOUNTMSG.B32';
;	0463	
;	0464	
;	0465	FORWARD ROUTINE
;	0466		SEARCH_VOL,			! search for mounted volume
;	0467		SEARCH_HANDLER	: NOVALUE;	! condition handler for above
;	0468	
;	0469	
;	0470	!
;	0471	! Own storage to save system exception vectors.
;	0472	!
;	0473	OWN
;	0474		SYSEXV		: VECTOR [2];

; Bliss-32 7.352	Saturday 22-AUG-1978 00:11:26	DBB3:[MOUNT.SRC]SRCVOL.B32;11					Page 2
; Digital Equipment Corporation
;
;	0475	GLOBAL ROUTINE SEARCH_VOL (NAME) =
;	0476	
;	0477	!++
;	0478	!
;	0479	! FUNCTIONAL DESCRIPTION:
;	0480	!
;	0481	!	This routine searches the device database for a particular volume.
;	0482	!	Only file structured devices mounted /SYSTEM, /GROUP, or /SHARE
;	0483	!	are considered.
;	0484	!
;	0485	!
;	0486	! CALLING SEQUENCE:
;	0487	!	SEARCH_VOL (ARG1)
;	0488	!
;	0489	! INPUT PARAMETERS:
;	0490	!	ARG1: string descriptor of volume label
;	0491	!
;	0492	! IMPLICIT INPUTS:
;	0493	!	MOUNT_OPTIONS: command option bits
;	0494	!
;	0495	! OUTPUT PARAMETERS:
;	0496	!	NONE
;	0497	!
;	0498	! IMPLICIT OUTPUTS:
;	0499	!	NONE
;	0500	!
;	0501	! ROUTINE VALUE:
;	0502	!	UCB address of found volume or zero
;	0503	!
;	0504	! SIDE EFFECTS:
;	0505	!	mount count of found volume is incremented if /SHARE mode mount
;	0506	!
;	0507	!--
;	0508	
;	0509	BEGIN
;	0510	
;	0511	MAP
;	0512		NAME		: REF VECTOR;	! volume name string descriptor
;	0513	
;	0514	LABEL
;	0515		SEARCH_LOOP;			! outer device search loop
;	0516	
;	0517	LOCAL
;	0518		STATUS,				! random status value
;	0519		DDB		: REF BBLOCK,	! pointer to current DDB
;	0520		UCB		: REF BBLOCK,	! pointer to current UCB
;	0521		VCB		: REF BBLOCK;	! pointer to current VCB
;	0522	
;	0523	EXTERNAL
;	0524		MOUNT_OPTIONS	: BITVECTOR,	! MOUNT command options
;	0525		PHYS_NAME	: VECTOR,	! physical device name descriptor
;	0526		NAME_BUFFER	: VECTOR [,BYTE], ! physical device name buffer
;	0527		IOC$GL_DEVLIST	: ADDRESSING_MODE (ABSOLUTE);
;	0528						! I/O database listhead
;	0529	

; Bliss-32 7.352	Saturday 22-AUG-1978 00:11:26	DBB3:[MOUNT.SRC]SRCVOL.B32;11					Page 2-1
; Digital Equipment Corporation
;
;	0530	EXTERNAL ROUTINE
;	0531		LOCK_IODB,			! lock I/O database mutex
;	0532		UNLOCK_IODB,			! unlock I/O database mutex
;	0533		ALLOC_LOGNAME,			! create logical name and MTL entry
;	0534		ENTER_LOGNAME;			! hook up logical name and MTL entry
;	0535	
;	0536	
;	0537	! Disable the kernel exception vectors and enable our condition handler.
;	0538	! Needless to say, the search must be done with the I/O database locked to
;	0539	! prevent list perturbations. We run down the DDB list, following the UCB
;	0540	! list off each one, looking for file structured devices that are mounted
;	0541	! but not allocated.
;	0542	!
;	0543	
;	0544	ENABLE SEARCH_HANDLER;
;	0545	$SETEXV (VECTOR = 0, PRVHND = SYSEXV[0]);
;	0546	$SETEXV (VECTOR = 1, PRVHND = SYSEXV[1]);
;	0547	
;	0548	! ***** For debug: If the handler addresses are found to be in process space,
;	0549	! restore them since they belong to the debugger.
;	0550	!
;	0551	IF .SYSEXV[0] GTR 0
;	0552	THEN $SETEXV (VECTOR = 0, ADDRES = .SYSEXV[0]);
;	0553	IF .SYSEXV[1] GTR 0
;	0554	THEN $SETEXV (VECTOR = 1, ADDRES = .SYSEXV[1]);
;	0555	
;	0556	ALLOC_LOGNAME ();			! pre-allocate logical name and MTL
;	0557	
;	0558	LOCK_IODB ();
;	0559	DDB = .IOC$GL_DEVLIST;
;	0560	
;	0561	SEARCH_LOOP:
;	0562	BEGIN
;	0563	DO
;	0564	    BEGIN
;	0565	    IF .DDB[DDB$B_TYPE] NEQ DYN$C_DDB
;	0566	    THEN BUG_CHECK (NOTDDBDDB, FATAL, 'Corrupted DDB list');
;	0567	    UCB = .DDB[DDB$L_UCB];
;	0568	
;	0569	    UNTIL .UCB EQL 0 DO
;	0570		BEGIN
;	0571		IF .UCB[UCB$B_TYPE] NEQ DYN$C_UCB
;	0572		THEN BUG_CHECK (NOTUCBUCB, FATAL, 'Corrupted UCB list');
;	0573	
;	0574		IF  .BBLOCK[UCB[UCB$L_DEVCHAR], DEV$V_FOD]
;	0575		AND .BBLOCK[UCB[UCB$L_DEVCHAR], DEV$V_MNT]
;	0576		AND NOT .BBLOCK[UCB[UCB$L_DEVCHAR], DEV$V_ALL]
;	0577		AND NOT .BBLOCK[UCB[UCB$L_DEVCHAR], DEV$V_DMT]
;	0578		THEN
;	0579		    BEGIN
;	0580		    VCB = .UCB[UCB$L_VCB];
;	0581		    IF .VCB[VCB$B_TYPE] NEQ DYN$C_VCB
;	0582		    THEN BUG_CHECK (NOTVCBUCB, FATAL, 'Not VCB pointer in UCB');
;	0583		    IF CH$EQL (.NAME[0], .NAME[1],
;	0584				VCB$S_VOLNAME, VCB[VCB$T_VOLNAME], ' ')

; Bliss-32 7.352	Saturday 22-AUG-1978 00:11:26	DBB3:[MOUNT.SRC]SRCVOL.B32;11					Page 2-2
; Digital Equipment Corporation
;
;	0585		    THEN LEAVE SEARCH_LOOP;
;	0586		    END;
;	0587		UCB = .UCB[UCB$L_LINK];
;	0588		END;				! end of UCB scan loop
;	0589	    DDB = .DDB[DDB$L_LINK];
;	0590	    END					! end of DDB scan loop
;	0591	UNTIL .DDB EQL 0;
;	0592	
;	0593	END;					! end of block SEARCH_LOOP
;	0594	
;	0595	! If we find a suitable volume that matches the name, the search is over.
;	0596	! If the mount is /SHARE, we increment the volume mount count here and now
;	0597	! to avoid race conditions. Finding a volume on a /SYSTEM or /GROUP mount
;	0598	! is an error.
;	0599	!
;	0600	
;	0601	STATUS = 0;
;	0602	IF .UCB NEQ 0
;	0603	THEN
;	0604	    BEGIN
;	0605	    IF NOT .MOUNT_OPTIONS[OPT_SHARE]
;	0606	    THEN STATUS = MOUN$_VOLALRMNT
;	0607	
;	0608	    ELSE IF .BBLOCK[UCB[UCB$L_DEVCHAR], DEV$V_FOR] NEQ .MOUNT_OPTIONS[OPT_FOREIGN]
;	0609	    THEN STATUS = MOUN$_INCOMPAT
;	0610	
;	0611	    ELSE
;	0612		BEGIN
;	0613		STATUS = 1;
;	0614		VCB[VCB$W_MCOUNT] = .VCB[VCB$W_MCOUNT] + 1;
;	0615		END;
;	0616	    END;
;	0617	
;	0618	UNLOCK_IODB ();
;	0619	
;	0620	IF NOT .STATUS THEN ERR_EXIT (.STATUS);
;	0621	
;	0622	! We a have a successful shared mount. Construct the physical device name
;	0623	! from the DDB and UCB and fill in the logical name and MTL entries.
;	0624	!
;	0625	
;	0626	PHYS_NAME[0] = NAMEBUF_LEN;
;	0627	PHYS_NAME[1] = NAME_BUFFER;
;	0628	$FAO (
;     P 0629	    DESCRIPTOR ('_!AC!UW:'),
;     P 0630	    PHYS_NAME[0],
;     P 0631	    PHYS_NAME[0],
;     P 0632	    BBLOCK [.UCB[UCB$L_DDB], DDB$T_NAME],
;     P 0633	    .UCB[UCB$W_UNIT]
;     P 0634	    );
;	0635	
;	0636	ENTER_LOGNAME (.UCB, .VCB);
;	0637	
;	0638	! Restore the system exception vectors.
;	0639	!

; Bliss-32 7.352	Saturday 22-AUG-1978 00:11:26	DBB3:[MOUNT.SRC]SRCVOL.B32;11					Page 2-3
; Digital Equipment Corporation
;
;	0640	
;	0641	$SETEXV (VECTOR = 0, ADDRES = .SYSEXV[0]);
;	0642	$SETEXV (VECTOR = 1, ADDRES = .SYSEXV[1]);
;	0643	
;	0644	RETURN 1;
;	0645	
;	0646	END;					! end of routine SEARCH_VOL


							    .TITLE  SRCVOL
							    .IDENT  \X0003\

							    .PSECT  $LOCKEDC2$,NOWRT,2

					      00000 P.AAA:  .WORD   0, -257						      ;
					      00004 	    .WORD    <BUG$_NOTDDBDDB!4>					      ;
					      00006	    .BLKB   2
					      00008 P.AAB:  .WORD   0, -257						      ;
					      0000C 	    .WORD    <BUG$_NOTUCBUCB!4>					      ;
					      0000E	    .BLKB   2
					      00010 P.AAC:  .WORD   0, -257						      ;
					      00014 	    .WORD    <BUG$_NOTVCBUCB!4>					      ;
					      00016	    .BLKB   2

							    .PSECT  $PLIT$,NOWRT,NOEXE,2

					      00000 P.AAE:  .ASCII  \_!AC!UW:\						      ;
					      00008 P.AAD:  .LONG   8							      ;
					      0000C 	    .ADDRESS  P.AAE						      ;

							    .PSECT  $OWN$,NOEXE,2

					      00000 SYSEXV: .BLKB   8

							    .GLOBL  MOUNT_OPTIONS, PHYS_NAME, NAME_BUFFER, IOC$GL_DEVLIST
							    .GLOBL  LOCK_IODB, UNLOCK_IODB, ALLOC_LOGNAME, ENTER_LOGNAME
							    .GLOBL  SYS$SETEXV, BUG$_NOTDDBDDB, BUG$_NOTUCBUCB, BUG$_NOTVCBUCB
							    .GLOBL  SYS$FAO

							    .PSECT  $CODE$,NOWRT,2

					 0E7C 00000 	    .ENTRY  SEARCH_VOL, Save R2,R3,R4,R5,R6,R9,R10,R11		      ; 0475
		         59	0000G  CF  9E 00002 	    MOVAB   PHYS_NAME, R9					      ;
		         5A	0000'  CF  9E 00007 	    MOVAB   SYSEXV, R10						      ;
		         5B 00000000G  9F  9E 0000C 	    MOVAB   @#SYS$SETEXV, R11					      ;
		         6D 0000011F   EF  DE 00013 	    MOVAL   15$, (FP)						      ; 0509
				       5A  DD 0001A 	    PUSHL   R10							      ; 0545
				       7E  7C 0001C 	    CLRQ    -(SP)						      ;
				       7E  D4 0001E 	    CLRL    -(SP)						      ;
		         6B	       04  FB 00020 	    CALLS   #4, SYS$SETEXV					      ;
				  04   AA  9F 00023 	    PUSHAB  SYSEXV+4						      ; 0546
				       7E  7C 00026 	    CLRQ    -(SP)						      ;
				       01  DD 00028 	    PUSHL   #1							      ;
		         6B	       04  FB 0002A 	    CALLS   #4, SYS$SETEXV					      ;
		         50	       6A  D0 0002D 	    MOVL    SYSEXV, R0						      ; 0551

; Bliss-32 7.352	Saturday 22-AUG-1978 00:11:26	DBB3:[MOUNT.SRC]SRCVOL.B32;11					Page 2-4
; Digital Equipment Corporation
;
				       09  15 00030 	    BLEQ    1$							      ;
				       7E  7C 00032 	    CLRQ    -(SP)						      ; 0552
				       50  DD 00034 	    PUSHL   R0							      ;
				       7E  D4 00036 	    CLRL    -(SP)						      ;
		         6B	       04  FB 00038 	    CALLS   #4, SYS$SETEXV					      ;
		         50	  04   AA  D0 0003B 1$:     MOVL    SYSEXV+4, R0					      ; 0553
				       09  15 0003F 	    BLEQ    2$							      ;
				       7E  7C 00041 	    CLRQ    -(SP)						      ; 0554
				       50  DD 00043 	    PUSHL   R0							      ;
				       01  DD 00045 	    PUSHL   #1							      ;
		         6B	       04  FB 00047 	    CALLS   #4, SYS$SETEXV					      ;
		  0000G  CF	       00  FB 0004A 2$:     CALLS   #0, ALLOC_LOGNAME					      ; 0556
		  0000G  CF	       00  FB 0004F 	    CALLS   #0, LOCK_IODB					      ; 0558
		         56 00000000G  9F  D0 00054 	    MOVL    @#IOC$GL_DEVLIST, DDB				      ; 0559
		         06	  0A   A6  91 0005B 3$:     CMPB    10(DDB), #6						      ; 0565
				       05  13 0005F 	    BEQL    4$							      ;
		  0000'  CF	       00  FB 00061 	    CALLS   #0, P.AAA						      ; 0566
		         54	  04   A6  D0 00066 4$:     MOVL    4(DDB), UCB						      ; 0567
				       54  D5 0006A 5$:     TSTL    UCB							      ; 0569
				       42  13 0006C 	    BEQL    9$							      ;
		         10	  0A   A4  91 0006E 	    CMPB    10(UCB), #16					      ; 0571
				       05  13 00072 	    BEQL    6$							      ;
		  0000'  CF	       00  FB 00074 	    CALLS   #0, P.AAB						      ; 0572
	   2C	    35   A4	       06  E1 00079 6$:     BBC     #6, 53(UCB), 8$					      ; 0574
	   27	    36   A4	       03  E1 0007E 	    BBC     #3, 54(UCB), 8$					      ; 0575
	   22	    36   A4	       07  E0 00083 	    BBS     #7, 54(UCB), 8$					      ; 0576
	   1D	    36   A4	       05  E0 00088 	    BBS     #5, 54(UCB), 8$					      ; 0577
		         55	  30   A4  D0 0008D 	    MOVL    48(UCB), VCB					      ; 0580
		         11	  0A   A5  91 00091 	    CMPB    10(VCB), #17					      ; 0581
				       05  13 00095 	    BEQL    7$							      ;
		  0000'  CF	       00  FB 00097 	    CALLS   #0, P.AAC						      ; 0582
		         50	  04   AC  D0 0009C 7$:     MOVL    NAME, R0						      ; 0583
	   20	    04   B0	       60  2D 000A0 	    CMPC5   (R0), @4(R0), #32, #12, 20(VCB)			      ;
		    14   A5	       0C     000A5									      ;
				       0B  13 000A8 	    BEQL    10$							      ;
		         54	  2C   A4  D0 000AA 8$:     MOVL    44(UCB), UCB					      ; 0587
				       BA  11 000AE 	    BRB     5$							      ; 0569
		         56	       66  D0 000B0 9$:     MOVL    (DDB), DDB						      ; 0589
				       A6  12 000B3 	    BNEQ    3$							      ; 0591
				       52  D4 000B5 10$:    CLRL    STATUS						      ; 0601
				       54  D5 000B7 	    TSTL    UCB							      ; 0602
				       2D  13 000B9 	    BEQL    13$							      ;
	   09	  0000G  CF	       06  E0 000BB 	    BBS     #6, MOUNT_OPTIONS, 11$				      ; 0605
		         52 007280B4   8F  D0 000C1 	    MOVL    #7504052, STATUS					      ; 0606
				       1E  11 000C8 	    BRB     13$							      ; 0605
    0000G  CF	         01	       03  EF 000CA 11$:    EXTZV   #3, #1, MOUNT_OPTIONS+1, R0				      ; 0608
				       50     000D0									      ;
      37   A4	         01	       00  ED 000D1 	    CMPZV   #0, #1, 55(UCB), R0					      ;
				       50     000D6									      ;
				       09  13 000D7 	    BEQL    12$							      ;
		         52 007280AC   8F  D0 000D9 	    MOVL    #7504044, STATUS					      ; 0609
				       06  11 000E0 	    BRB     13$							      ; 0608
		         52	       01  D0 000E2 12$:    MOVL    #1, STATUS						      ; 0613
				  4C   A5  B6 000E5 	    INCW    76(VCB)						      ; 0614
		  0000G  CF	       00  FB 000E8 13$:    CALLS   #0, UNLOCK_IODB					      ; 0618

; Bliss-32 7.352	Saturday 22-AUG-1978 00:11:26	DBB3:[MOUNT.SRC]SRCVOL.B32;11					Page 2-5
; Digital Equipment Corporation
;
		         09	       52  E8 000ED 	    BLBS    STATUS, 14$						      ; 0620
				       52  DD 000F0 	    PUSHL   STATUS						      ;
	      00000000G  00	       01  FB 000F2 	    CALLS   #1, LIB$STOP					      ;
		         69	       20  D0 000F9 14$:    MOVL    #32, PHYS_NAME					      ; 0626
		    04   A9	0000G  CF  9E 000FC 	    MOVAB   NAME_BUFFER, PHYS_NAME+4				      ; 0627
		         7E	  48   A4  3C 00102 	    MOVZWL  72(UCB), -(SP)					      ; 0634
	   7E	    24   A4	       14  C1 00106 	    ADDL3   #20, 36(UCB), -(SP)					      ;
				       59  DD 0010B 	    PUSHL   R9							      ;
				       59  DD 0010D 	    PUSHL   R9							      ;
				0000'  CF  9F 0010F 	    PUSHAB  P.AAD						      ;
	      00000000G  9F	       05  FB 00113 	    CALLS   #5, @#SYS$FAO					      ;
				       30  BB 0011A 	    PUSHR   #^M<R4,R5>						      ; 0636
		  0000G  CF	       02  FB 0011C 	    CALLS   #2, ENTER_LOGNAME					      ;
				       7E  7C 00121 	    CLRQ    -(SP)						      ; 0641
				       6A  DD 00123 	    PUSHL   SYSEXV						      ;
				       7E  D4 00125 	    CLRL    -(SP)						      ;
		         6B	       04  FB 00127 	    CALLS   #4, SYS$SETEXV					      ;
				       7E  7C 0012A 	    CLRQ    -(SP)						      ; 0642
				  04   AA  DD 0012C 	    PUSHL   SYSEXV+4						      ;
				       01  DD 0012F 	    PUSHL   #1							      ;
		         6B	       04  FB 00131 	    CALLS   #4, SYS$SETEXV					      ;
		         50	       01  D0 00134 	    MOVL    #1, R0						      ; 0644
					   04 00137 	    RET     							      ; 0475
					 0000 00138 15$:    .WORD   Save nothing					      ; 0509
				       7E  D4 0013A 	    CLRL    -(SP)						      ;
				       5E  DD 0013C 	    PUSHL   SP							      ;
		         7E	  04   AC  7D 0013E 	    MOVQ    4(AP), -(SP)					      ;
		  0000V  CF	       03  FB 00142 	    CALLS   #3, SEARCH_HANDLER					      ;
					   04 00147 	    RET     							      ;

; Routine Size:  328 bytes



; Bliss-32 7.352	Saturday 22-AUG-1978 00:11:26	DBB3:[MOUNT.SRC]SRCVOL.B32;11					Page 3
; Digital Equipment Corporation
;
;	0647	ROUTINE SEARCH_HANDLER (SIGNAL, MECHANISM) : NOVALUE =
;	0648	
;	0649	!++
;	0650	!
;	0651	! FUNCTIONAL DESCRIPTION:
;	0652	!
;	0653	!	This routine is the condition handler for the volume search
;	0654	!	routine. It undoes any damage done so far and returns the error
;	0655	!	status to the user mode caller.
;	0656	!
;	0657	!
;	0658	! CALLING SEQUENCE:
;	0659	!	KERNEL_HANDLER (ARG1, ARG2)
;	0660	!
;	0661	! INPUT PARAMETERS:
;	0662	!	ARG1: address of signal vector
;	0663	!	ARG2: address of mechanism vector
;	0664	!
;	0665	! IMPLICIT INPUTS:
;	0666	!	global pointers to blocks allocated
;	0667	!
;	0668	! OUTPUT PARAMETERS:
;	0669	!	NONE
;	0670	!
;	0671	! IMPLICIT OUTPUTS:
;	0672	!	NONE
;	0673	!
;	0674	! ROUTINE VALUE:
;	0675	!	NONE
;	0676	!
;	0677	! SIDE EFFECTS:
;	0678	!	stack unwound, allocations undone
;	0679	!
;	0680	!--
;	0681	
;	0682	BEGIN
;	0683	
;	0684	MAP
;	0685		SIGNAL		: REF BBLOCK,	! signal vector
;	0686		MECHANISM	: REF BBLOCK;	! mechanism vector
;	0687	
;	0688	LOCAL
;	0689		AREA;				! allocation area code
;	0690	
;	0691	EXTERNAL
;	0692		MOUNT_OPTIONS	: BITVECTOR,	! command parser options
;	0693		LOG_ENTRY	: REF BBLOCK,	! address of logical name allocated
;	0694		MTL_ENTRY	: REF BBLOCK;	! address of mounted volume list entry
;	0695	
;	0696	EXTERNAL ROUTINE
;	0697		UNLOCK_IODB,			! unlock I/O database mutex
;	0698		DEALLOCATE_MEM;			! deallocate system dynamic memory
;	0699	
;	0700	
;	0701	IF .SIGNAL[CHF$L_SIG_NAME] NEQ SS$_UNWIND

; Bliss-32 7.352	Saturday 22-AUG-1978 00:11:26	DBB3:[MOUNT.SRC]SRCVOL.B32;11					Page 3-1
; Digital Equipment Corporation
;
;	0702	THEN
;	0703	    BEGIN
;	0704	
;	0705	! Restore the system exception vectors.
;	0706	!
;	0707	
;	0708	    $SETEXV (VECTOR = 0, ADDRES = .SYSEXV[0]);
;	0709	    $SETEXV (VECTOR = 1, ADDRES = .SYSEXV[1]);
;	0710	
;	0711	! Deallocate whatever control blocks exist to wherever they came from.
;	0712	!
;	0713	
;	0714	    AREA = 2;				! assume process allocation area
;	0715	    IF .MOUNT_OPTIONS[OPT_GROUP]
;	0716	    OR .MOUNT_OPTIONS[OPT_SYSTEM]
;	0717	    THEN AREA = 1;			! system paged pool if system or group
;	0718	
;	0719	    IF .LOG_ENTRY NEQ 0
;	0720	    THEN DEALLOCATE_MEM (.LOG_ENTRY, .AREA);
;	0721	
;	0722	    IF .MTL_ENTRY NEQ 0
;	0723	    THEN DEALLOCATE_MEM (.MTL_ENTRY, .AREA);
;	0724	
;	0725	! Return the condition code in R0.
;	0726	!
;	0727	
;	0728	    MECHANISM[CHF$L_MCH_SAVR0] = .SIGNAL[CHF$L_SIG_NAME];
;	0729	    $UNWIND ();
;	0730	
;	0731	    END;
;	0732	END;					! end of routine KERNEL_HANDLER



							    .GLOBL  LOG_ENTRY, MTL_ENTRY, DEALLOCATE_MEM, SYS$UNWIND

					 080C 00148 SEARCH_HANDLER:
							    .WORD   Save R2,R3,R11					      ; 0647
		         5B 00000000G  9F  9E 0014A 	    MOVAB   @#SYS$SETEXV, R11					      ;
		         52	  04   AC  D0 00151 	    MOVL    SIGNAL, R2						      ; 0701
	      00000920   8F	  04   A2  D1 00155 	    CMPL    4(R2), #2336					      ;
				       55  13 0015D 	    BEQL    5$							      ;
				       7E  7C 0015F 	    CLRQ    -(SP)						      ; 0708
				0000'  CF  DD 00161 	    PUSHL   SYSEXV						      ;
				       7E  D4 00165 	    CLRL    -(SP)						      ;
		         6B	       04  FB 00167 	    CALLS   #4, SYS$SETEXV					      ;
				       7E  7C 0016A 	    CLRQ    -(SP)						      ; 0709
				0000'  CF  DD 0016C 	    PUSHL   SYSEXV+4						      ;
				       01  DD 00170 	    PUSHL   #1							      ;
		         6B	       04  FB 00172 	    CALLS   #4, SYS$SETEXV					      ;
		         53	       02  D0 00175 	    MOVL    #2, AREA						      ; 0714
	   05	  0000G  CF	       07  E0 00178 	    BBS     #7, MOUNT_OPTIONS, 1$				      ; 0715
		         03	0000G  CF  E9 0017E 	    BLBC    MOUNT_OPTIONS+1, 2$					      ; 0716
		         53	       01  D0 00183 1$:     MOVL    #1, AREA						      ; 0717
		         50	0000G  CF  D0 00186 2$:     MOVL    LOG_ENTRY, R0					      ; 0719

; Bliss-32 7.352	Saturday 22-AUG-1978 00:11:26	DBB3:[MOUNT.SRC]SRCVOL.B32;11					Page 3-2
; Digital Equipment Corporation
;
				       07  13 0018B 	    BEQL    3$							      ;
				       09  BB 0018D 	    PUSHR   #^M<R0,R3>						      ; 0720
		  0000G  CF	       02  FB 0018F 	    CALLS   #2, DEALLOCATE_MEM					      ;
		         50	0000G  CF  D0 00194 3$:     MOVL    MTL_ENTRY, R0					      ; 0722
				       07  13 00199 	    BEQL    4$							      ;
				       09  BB 0019B 	    PUSHR   #^M<R0,R3>						      ; 0723
		  0000G  CF	       02  FB 0019D 	    CALLS   #2, DEALLOCATE_MEM					      ;
		         50	  08   AC  D0 001A2 4$:     MOVL    MECHANISM, R0					      ; 0728
		    0C   A0	  04   A2  D0 001A6 	    MOVL    4(R2), 12(R0)					      ;
				       7E  7C 001AB 	    CLRQ    -(SP)						      ; 0729
	      00000000G  9F	       02  FB 001AD 	    CALLS   #2, @#SYS$UNWIND					      ;
					   04 001B4 5$:     RET     							      ; 0647

; Routine Size:  109 bytes


;	0733	
;	0734	END
;	0735	ELUDOM




							    .GLOBL  LIB$STOP

;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $OWN$          	     8    WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $LOCKEDC2$     	    24  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $PLIT$         	    16  NOWRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $CODE$         	   437  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]LIB.L32;1		      5582        32         0       251





; Size:		437 code + 48 data bytes
; Run Time:	00:21.8
; Elapsed Time:	00:55.6
; Memory Used:	338 pages
; Compilation Complete
