
; Bliss-32 7.352	Saturday 21-AUG-1978 23:47:31	DBB3:[MOUNT.SRC]VMOUNT.B32;34					Page 1
; Digital Equipment Corporation
;
;	0001	MODULE VMOUNT (
;	0002			MAIN = MOUNT_COMMAND,
;	0003			LANGUAGE (BLISS32),
;	0004			IDENT = 'X0018'
;	0005			) =
;	0006	BEGIN
;	0007	
;	0008	!
;	0009	! Copyright (c) 1977
;	0010	! Digital Equipment Corporation, Maynard, Massachusetts 01754
;	0011	!
;	0012	! This software is furnished  under a license for use only on a single
;	0013	! computer  system and  may be  copied only with  the inclusion of the
;	0014	! above copyright notice.  This software, or any other copies thereof,
;	0015	! may not be provided or  otherwise made available to any other person
;	0016	! except for use on such system and to one who agrees to these license
;	0017	! terms.  Title to and  ownership of the  software  shall at all times
;	0018	! remain in DEC.
;	0019	!
;	0020	! The information in this software is subject to change without notice
;	0021	! and should  not be construed  as a commitment  by Digital  Equipment
;	0022	! Corporation.
;	0023	!
;	0024	! DEC assumes  no  responsibility  for  the use or  reliability of its
;	0025	! software on equipment which is not supplied by DEC.
;	0026	
;	0027	!++
;	0028	!
;	0029	! FACILITY:  MOUNT Utility Structure Level 1
;	0030	!
;	0031	! ABSTRACT:
;	0032	!
;	0033	! 	This is the main routine of the MOUNT utility. It provides the
;	0034	!	general control flow of the MOUNT command and contains most of
;	0035	!	the base data structures.
;	0036	!
;	0037	! ENVIRONMENT:
;	0038	!
;	0039	!	STARLET operating system, including privileged system services
;	0040	!	and internal exec routines.
;	0041	!
;	0042	!--
;	0043	!
;	0044	!
;	0045	! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  5-Sep-1977  16:58
;	0046	!
;	0047	! REVISION HISTORY:
;	0048	!
;	0049	!   D. H. Gillespie, 4-Dec-1977  16:43
;	0050	!   X0002 - ADD DEALLOCATION OF MORE THAN ONE DEVICE
;	0051	!
;	0052	!   D. H. Gillespie, 5-Dec-1977  9:07
;	0053	!   X0003 - ADD FOR MAGNETIC TAPE - OVERRIDING EXPIRATION REQUIRES PRIVILEGE, RECOGNITION OF SS$NOTLABELMT
;	0054	!
;	0055	!   Andrew C. Goldstein, 22-Dec-1977  15:01

; Bliss-32 7.352	Saturday 21-AUG-1978 23:47:31	DBB3:[MOUNT.SRC]VMOUNT.B32;34					Page 1-1
; Digital Equipment Corporation
;
;	0056	!   X0004 - Add Files-11 Structure level 2
;	0057	!
;	0058	!   Andrew C. Goldstein, 13-Feb-1978  21:52
;	0059	!   X0005 - Change $GTCHAN to $GETCHN
;	0060	!
;	0061	!   Andrew C. Goldstein, 23-Feb-1978  20:05
;	0062	!   X0006 - Signal severity problem in SEARCH_VOL status
;	0063	!
;	0064	!   D. H. Gillespie, 23-Mar-1978  10:25
;	0065	!   X0007 - Correct PHYS-COUNT bug
;	0066	!
;	0067	!   Andrew C. Goldstein, 27-Mar-1978  16:27
;	0068	!   X0008 - Mask severity in signal name check in condition handler
;	0069	!
;	0070	!   Andrew C. Goldstein, 29-Mar-1978  17:17
;	0071	!   X0009 - Disable generic device search
;	0072	!
;	0073	!   Andrew C. Goldstein, 12-May-78  14:57
;	0074	!   X0010 - Clear volume valid bit on failure
;	0075	!
;	0076	!   Andrew C. Goldstein, 16-May-78  17:27
;	0077	!   X0011 - Add full search argument to READ_HOMEBLOCK
;	0078	!
;	0079	!   D. H. Gillespie, 17-May-78  16:00
;	0080	!   X0012 - add deassigning of temporary channel
;	0081	!
;	0082	!   D. H. Gillespie, 7-Jun-78  10:51
;	0083	!   X0013 - add OPT_OVR_ACC and implement illegal options check
;	0084	!
;	0085	!   Andrew C. Goldstein, 20-Jun-78  22:40
;	0086	!   X0014 - Add informational messages
;	0087	!
;	0088	!   Andrew C. Goldstein, 18-Jul-78  21:10
;	0089	!   X0015 - Propagate random facility codes through error signal
;	0090	!
;	0091	!   Andrew C. Goldstein, 18-Jul-78  21:26
;	0092	!   X0016 - Inhibit volume label check on foreign volume even if specified
;	0093	!
;	0094	!   Andrew C. Goldstein, 27-Jul-78  16:25
;	0095	!   X0017 - Add mount message for shared mount
;	0096	!
;	0097	!   Andrew C. Goldstein, 15-Aug-78  15:20
;	0098	!   X0018 - Change name of INIT message file
;	0099	!
;	0100	!**
;	0101	
;	0102	
;	0103	LIBRARY 'SYS$LIBRARY:LIB.L32';
;	0104	REQUIRE 'SRC$:MOUDEF.B32';
;	0411	REQUIRE 'LIBD$:[VMSLIB.OBJ]MOUNTMSG.B32';
;	0511	REQUIRE 'LIBD$:[VMSLIB.OBJ]INITMSG.REQ';
;	0571	
;	0572	
;	0573	FORWARD ROUTINE
;	0574		MOUNT_COMMAND,			! main program

; Bliss-32 7.352	Saturday 21-AUG-1978 23:47:31	DBB3:[MOUNT.SRC]VMOUNT.B32;34					Page 1-2
; Digital Equipment Corporation
;
;	0575		MAIN_HANDLER;			! main condition handler

; Bliss-32 7.352	Saturday 21-AUG-1978 23:47:31	DBB3:[MOUNT.SRC]VMOUNT.B32;34					Page 2
; Digital Equipment Corporation
;
;	0576	!+
;	0577	!
;	0578	! Own storage for general use in the MOUNT utility
;	0579	!
;	0580	!-
;	0581	
;	0582	GLOBAL LITERAL
;	0583		DEVCHAR_LEN	= 32;		! length of device characteristics buffer
;	0584	
;	0585	GLOBAL
;	0586		CLEANUP_ALLOC	: BITVECTOR [DEVMAX],	!BIT FLAGS INDICATING WHICH PHYSICAL DEVICES NEED TO BE DEALLOCATED
;	0587		CLEANUP_FLAGS	: BITVECTOR [32], ! error cleanup status flags
;	0588		CHANNEL,			! channel number for I/O
;	0589		MAILBOX_CHANNEL,		! channel number of ACP termination mailbox
;	0590		TEMP_CHANNEL,			! channel number of temporary channel for multiple mag tape units
;	0591		PHYS_COUNT,			! number of physical devices in use
;	0592		PHYS_NAME	: VECTOR [DEVMAX*2],	! descriptor of physical device name
;	0593		NAME_BUFFER	: VECTOR [NAMEBUF_LEN*DEVMAX, BYTE],
;	0594						! string buffer for physical device name
;	0595		LOG_BUFFER	: VECTOR [20, BYTE],
;	0596						! buffer to construct logical name
;	0597		HOME_BLOCK	: BBLOCK [512],	! buffer for volume header label or home block
;	0598		DEVICE_CHAR	: BBLOCK [DEVCHAR_LEN],
;	0599						! buffer for device characteristics
;	0600		HOMEBLOCK_LBN,			! LBN of home block read
;	0601		HEADER_LBN,			! LBN of file header read
;	0602		DEV_INDEX,			! index into device table of current disk
;	0603		USER_STATUS	: VECTOR [2],	! status return for various routines
;	0604		CURRENT_VCB	: REF BBLOCK,	! address of VCB used by CHECK_HEADER2
;	0605		REAL_MVL	: REF BBLOCK,	! ADDRESS OF MVL ALLOCATED FOR MAG TAPE VOLUME
;	0606		REAL_RVT	: REF BBLOCK,	! ADDRESS OF RVT ALLOCATED FOR MAG TAPE VOLUME
;	0607		REAL_VCB	: REF BBLOCK,	! address of VCB allocated for volume
;	0608		REAL_FCB	: REF BBLOCK,	! address of FCB allocated for volume
;	0609		REAL_WCB	: REF BBLOCK,	! address of window allocated for volume
;	0610		REAL_AQB	: REF BBLOCK,	! address of AQB allocated for volume
;	0611		LOG_ENTRY	: REF BBLOCK,	! address of logical name entry
;	0612		MTL_ENTRY	: REF BBLOCK;	! address of mounted volume list entry
;	0613	
;	0614	
;	0615	GLOBAL BIND
;	0616		VOL1 		= HOME_BLOCK;	! BUFFER FOR VOL1 MAGNETIC TAPE LABEL
;	0617	
;	0618	OWN
;	0619		DEVCHAR_DESC	: VECTOR [2] INITIAL (DEVCHAR_LEN, DEVICE_CHAR);
;	0620						! descriptor for device characteristics

; Bliss-32 7.352	Saturday 21-AUG-1978 23:47:31	DBB3:[MOUNT.SRC]VMOUNT.B32;34					Page 3
; Digital Equipment Corporation
;
;	0621	GLOBAL ROUTINE MOUNT_COMMAND (START_ADDRESS, CLI_CALLBACK) =
;	0622	
;	0623	!++
;	0624	!
;	0625	! FUNCTIONAL DESCRIPTION:
;	0626	!
;	0627	!	This is the main routine of the MOUNT utility.
;	0628	!
;	0629	! CALLING SEQUENCE:
;	0630	!	MOUNT_COMMAND (ARG1, ARG2)
;	0631	!
;	0632	! INPUT PARAMETERS:
;	0633	!	ARG1: program start address
;	0634	!	ARG2: CLI service callback address
;	0635	!
;	0636	! IMPLICIT INPUTS:
;	0637	!	NONE
;	0638	!
;	0639	! OUTPUT PARAMETERS:
;	0640	!	NONE
;	0641	!
;	0642	! IMPLICIT OUTPUTS:
;	0643	!	NONE
;	0644	!
;	0645	! ROUTINE VALUE:
;	0646	!	assorted status values
;	0647	!
;	0648	! SIDE EFFECTS:
;	0649	!	volume(s) mounted, device data base updated
;	0650	!
;	0651	!--
;	0652	
;	0653	BEGIN
;	0654	
;	0655	LOCAL
;	0656		P,				! string scan pointer
;	0657		STATUS,				! system service status
;	0658		DEVICE_NAME	: VECTOR [2];	! descriptor of translated device name
;	0659	
;	0660	EXTERNAL
;	0661		MOUNT_OPTIONS	: BITVECTOR,	! parser option flags
;	0662		DEVICE_STRING	: VECTOR,	! device name string descriptor
;	0663		LABEL_STRING	: VECTOR;	! volume label string descriptor
;	0664	
;	0665	EXTERNAL ROUTINE
;	0666		MOUNT_PARSE,			! command line parser
;	0667		SEARCH_VOL,			! search I/O database for volume
;	0668		TRAN_LOGNAME,			! translate logical name
;	0669		READ_VOLLABEL,			! read magtape volume header label
;	0670		READ_HOMEBLOCK,			! read disk home block
;	0671		MOUNT_TAPE,			! mount magtape
;	0672		MOUNT_DISK1,			! mount level 1 disk
;	0673		MOUNT_DISK2;			! mount level 1 disk
;	0674	
;	0675	BIND

; Bliss-32 7.352	Saturday 21-AUG-1978 23:47:31	DBB3:[MOUNT.SRC]VMOUNT.B32;34					Page 3-1
; Digital Equipment Corporation
;
;	0676		OPTIONS		= MOUNT_OPTIONS : VECTOR;
;	0677	
;	0678	
;	0679	! Enable the condition handler. Then parse the command line. Errors are
;	0680	! signalled.
;	0681	!
;	0682	
;	0683	ENABLE MAIN_HANDLER;
;	0684	
;	0685	CHANNEL = 0;
;	0686	
;	0687	MOUNT_PARSE (.CLI_CALLBACK);
;	0688	
;	0689	! If the device is being mounted /SHARE, /GROUP, or /SYSTEM, search the
;	0690	! device database for a matching volume label. If found, and the mount is /SHARE,
;	0691	! the routine will already have completed the mount. If found and the mount is
;	0692	! /GROUP or /SYSTEM, this is an error.
;	0693	!
;	0694	
;	0695	STATUS = 0;
;	0696	IF NOT .MOUNT_OPTIONS[OPT_NOSHARE]
;	0697	THEN STATUS = KERNEL_CALL (SEARCH_VOL, LABEL_STRING[0]);
;	0698	IF .STATUS
;	0699	THEN
;	0700	    ERR_MESSAGE (MOUN$_MOUNTED, 3, .LABEL_STRING[0], .LABEL_STRING[1], PHYS_NAME[0])
;	0701	
;	0702	ELSE
;	0703	
;	0704	IF .STATUS GTRU 7
;	0705	THEN ERR_EXIT (.STATUS)
;	0706	
;	0707	! Volume not found: either not there or this is a /NOSHARE mount.
;	0708	! Now acquire the first device: translate the device name, allocate the device,
;	0709	! and assign a channel to it.
;	0710	!
;	0711	
;	0712	ELSE
;	0713	    BEGIN
;	0714	    DEVICE_NAME[0] = NAMEBUF_LEN;
;	0715	    DEVICE_NAME[1] = NAME_BUFFER;
;	0716	    TRAN_LOGNAME (DEVICE_STRING[0], DEVICE_NAME[0]);
;	0717	
;	0718	! **** Temporary until operator assist is implemented. If the device name
;	0719	! does not include a unit number, append one to prevent a generic device search.
;	0720	!
;	0721	
;	0722	    P = CH$FIND_CH (.DEVICE_NAME[0], .DEVICE_NAME[1], ':');
;	0723	    IF CH$FAIL (.P)
;	0724	    THEN P = .DEVICE_NAME[0] + .DEVICE_NAME[1];
;	0725	    IF CH$RCHAR (.P-1) LSSU '0' OR CH$RCHAR (.P-1) GTRU '9'
;	0726	    THEN
;	0727		BEGIN
;	0728		CH$WCHAR_A ('0', P);
;	0729		CH$WCHAR_A (':', P);
;	0730		DEVICE_NAME[0] = .DEVICE_NAME[0] + 1;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:47:31	DBB3:[MOUNT.SRC]VMOUNT.B32;34					Page 3-2
; Digital Equipment Corporation
;
;	0731		END;
;	0732	
;	0733	! **** End temporary code.
;	0734	
;	0735	    PHYS_NAME[0] = NAMEBUF_LEN;
;	0736	    PHYS_NAME[1] = NAME_BUFFER;
;	0737	    STATUS = $ALLOC (DEVNAM = DEVICE_NAME[0],
;     P 0738			     PHYLEN = PHYS_NAME[0],
;     P 0739			     PHYBUF = PHYS_NAME[0]);
;	0740	    IF NOT .STATUS THEN ERR_EXIT (.STATUS);
;	0741	    PHYS_COUNT = 1;
;	0742	    IF .STATUS NEQ SS$_DEVALRALLOC
;	0743	    THEN
;	0744		BEGIN
;	0745		CLEANUP_FLAGS[CLF_DEALLOCATE] = 1;
;	0746		CLEANUP_ALLOC[0] = 1;
;	0747		END;
;	0748	
;	0749	    STATUS = $ASSIGN (DEVNAM = PHYS_NAME[0],
;     P 0750			      CHAN   = CHANNEL);
;	0751	    IF NOT .STATUS THEN ERR_EXIT (.STATUS);
;	0752	
;	0753	! Get the device characteristics and do device type validation: Make sure
;	0754	! the device is mountable at all, and check that the mount qualifiers are
;	0755	! consistent with the device type.
;	0756	!
;	0757	
;	0758	    $GETCHN (CHAN = .CHANNEL, PRIBUF = DEVCHAR_DESC);
;	0759	
;	0760	    IF NOT .DEVICE_CHAR[DEV$V_FOD]
;	0761	    THEN ERR_EXIT (SS$_NOTFILEDEV);
;	0762	
;	0763	    IF NOT .DEVICE_CHAR[DEV$V_AVL]
;	0764	    THEN ERR_EXIT (SS$_DEVOFFLINE);
;	0765	
;	0766	    IF .DEVICE_CHAR[DEV$V_MNT]
;	0767	    THEN ERR_EXIT (SS$_DEVMOUNT);
;	0768	
;	0769	!
;	0770	! test legal options for device type
;	0771	!
;	0772	    IF
;	0773		BEGIN
;	0774		IF .DEVICE_CHAR[DEV$V_SQD]
;	0775		THEN
;	0776		    ((.OPTIONS[0] AND NOT TAPE_OPTIONS1) NEQ 0
;	0777		    OR (.OPTIONS[1] AND NOT TAPE_OPTIONS2) NEQ 0)
;	0778		ELSE
;	0779		    ((.OPTIONS[0] AND NOT DISK_OPTIONS1) NEQ 0
;	0780		    OR (.OPTIONS[1] AND NOT DISK_OPTIONS2) NEQ 0)
;	0781		END
;	0782	    THEN ERR_EXIT (MOUN$_ILLOPT);
;	0783	
;	0784	! Now attempt to read the home block or volume header label, as appropriate
;	0785	! for the device type.

; Bliss-32 7.352	Saturday 21-AUG-1978 23:47:31	DBB3:[MOUNT.SRC]VMOUNT.B32;34					Page 3-3
; Digital Equipment Corporation
;
;	0786	!
;	0787	
;	0788	    IF .DEVICE_CHAR[DEV$V_SQD]
;	0789	    THEN
;	0790		STATUS = READ_VOLLABEL (LABEL_STRING[0])
;	0791	    ELSE
;	0792		STATUS = READ_HOMEBLOCK (LABEL_STRING[0], .MOUNT_OPTIONS[OPT_FOREIGN]);
;	0793	
;	0794	! Now check the status of the volume against the various mount options. Note,
;	0795	! in particular, whether the user is attempting to override volume protection.
;	0796	!
;	0797	
;	0798	    MOUNT_OPTIONS[OPT_IS_FILES11] = 1;	! assume volume is Files-11
;	0799	    IF NOT .STATUS
;	0800	    THEN
;	0801		BEGIN
;	0802		IF .STATUS EQL SS$_NOHOMEBLK
;	0803		OR .STATUS EQL SS$_NOTLABELMT	! if home block is not found
;	0804		THEN
;	0805		    BEGIN
;	0806		    MOUNT_OPTIONS[OPT_IS_FILES11] = 0;
;	0807		    IF NOT  (  .MOUNT_OPTIONS[OPT_FOREIGN]
;	0808			    OR .MOUNT_OPTIONS[OPT_NOLABEL])
;	0809		    THEN
;	0810			IF .DEVICE_CHAR[DEV$V_SQD]
;	0811			THEN ERR_EXIT (.STATUS)
;	0812			ELSE ERR_EXIT (.STATUS, 0, MOUN$_VOLIDENT, 6,
;     P 0813					HM2$S_VOLNAME, HOME_BLOCK[HM2$T_VOLNAME],
;     P 0814					HM2$S_OWNERNAME, HOME_BLOCK[HM2$T_OWNERNAME],
;     P 0815					HM2$S_FORMAT, HOME_BLOCK[HM2$T_FORMAT]);
;	0816		    END
;	0817	
;	0818		ELSE IF .STATUS EQL SS$_INCVOLLABEL ! if volume label mismatch
;	0819		THEN
;	0820		    BEGIN
;	0821		    IF .MOUNT_OPTIONS[OPT_LABEL]
;	0822		    AND NOT .MOUNT_OPTIONS[OPT_FOREIGN]
;	0823		    AND NOT .MOUNT_OPTIONS[OPT_OVR_ID]
;	0824		    THEN
;	0825			IF .DEVICE_CHAR[DEV$V_SQD]
;	0826			THEN ERR_EXIT (.STATUS)
;	0827			ELSE ERR_EXIT (.STATUS, 0, MOUN$_VOLIDENT, 6,
;     P 0828					HM2$S_VOLNAME, HOME_BLOCK[HM2$T_VOLNAME],
;     P 0829					HM2$S_OWNERNAME, HOME_BLOCK[HM2$T_OWNERNAME],
;     P 0830					HM2$S_FORMAT, HOME_BLOCK[HM2$T_FORMAT]);
;	0831		    END
;	0832	
;	0833		ELSE ERR_EXIT (.STATUS);	! other errors currently not handled
;	0834						! (good luck, Debby)
;	0835	    END;
;	0836	
;	0837	    IF .MOUNT_OPTIONS[OPT_IS_FILES11]	! if this is a Files-11 volume
;	0838	    AND (  .MOUNT_OPTIONS[OPT_FOREIGN]
;	0839		OR .MOUNT_OPTIONS[OPT_NOLABEL]
;	0840		OR .MOUNT_OPTIONS[OPT_PROTECTION]

; Bliss-32 7.352	Saturday 21-AUG-1978 23:47:31	DBB3:[MOUNT.SRC]VMOUNT.B32;34					Page 3-4
; Digital Equipment Corporation
;
;	0841		OR .MOUNT_OPTIONS[OPT_OVR_ACC]
;	0842		OR .MOUNT_OPTIONS[OPT_OVR_EXP]
;	0843		OR .MOUNT_OPTIONS[OPT_OWNER_UIC]
;	0844		OR .MOUNT_OPTIONS[OPT_USER_UIC]
;	0845		)
;	0846	    THEN MOUNT_OPTIONS[OPT_OVR_PRO] = 1;
;	0847	
;	0848	! Call the device specific routine that actually does the mount.
;	0849	!
;	0850	
;	0851	    IF .DEVICE_CHAR[DEV$V_SQD]
;	0852	    THEN
;	0853		MOUNT_TAPE ()
;	0854	    ELSE
;	0855		IF .MOUNT_OPTIONS[OPT_IS_FILES11B]
;	0856		THEN MOUNT_DISK2 ()
;	0857		ELSE MOUNT_DISK1 ();
;	0858	
;	0859	! Finally deassign the channel and deallocate the device if it is not being
;	0860	! mounted /NOSHARE.
;	0861	!
;	0862	
;	0863	    $DASSGN (CHAN = .CHANNEL);
;	0864	    IF NOT .MOUNT_OPTIONS[OPT_NOSHARE]
;	0865	    THEN $DALLOC (DEVNAM = PHYS_NAME[0]);
;	0866	
;	0867	
;	0868	    END;				! shared mount path rejoins us here
;	0869	
;	0870	RETURN 1;
;	0871	
;	0872	END;					! end of routine MOUNT_COMMAND


							    .TITLE  VMOUNT
							    .IDENT  \X0018\

							    .PSECT  $OWN$,NOEXE,2

					      00000 DEVCHAR_DESC:
							    .LONG   32							      ;
					      00004 	    .ADDRESS  DEVICE_CHAR					      ;

							    .PSECT  $GLOBAL$,NOEXE,2

					      00000 CLEANUP_ALLOC::
							    .BLKB   2
					      00002	    .BLKB   2
					      00004 CLEANUP_FLAGS::
							    .BLKB   4
					      00008 CHANNEL::
							    .BLKB   4
					      0000C MAILBOX_CHANNEL::
							    .BLKB   4
					      00010 TEMP_CHANNEL::

; Bliss-32 7.352	Saturday 21-AUG-1978 23:47:31	DBB3:[MOUNT.SRC]VMOUNT.B32;34					Page 3-5
; Digital Equipment Corporation
;
							    .BLKB   4
					      00014 PHYS_COUNT::
							    .BLKB   4
					      00018 PHYS_NAME::
							    .BLKB   128
					      00098 NAME_BUFFER::
							    .BLKB   512
					      00298 LOG_BUFFER::
							    .BLKB   20
					      002AC HOME_BLOCK::
							    .BLKB   512
					      004AC DEVICE_CHAR::
							    .BLKB   32
					      004CC HOMEBLOCK_LBN::
							    .BLKB   4
					      004D0 HEADER_LBN::
							    .BLKB   4
					      004D4 DEV_INDEX::
							    .BLKB   4
					      004D8 USER_STATUS::
							    .BLKB   8
					      004E0 CURRENT_VCB::
							    .BLKB   4
					      004E4 REAL_MVL::
							    .BLKB   4
					      004E8 REAL_RVT::
							    .BLKB   4
					      004EC REAL_VCB::
							    .BLKB   4
					      004F0 REAL_FCB::
							    .BLKB   4
					      004F4 REAL_WCB::
							    .BLKB   4
					      004F8 REAL_AQB::
							    .BLKB   4
					      004FC LOG_ENTRY::
							    .BLKB   4
					      00500 MTL_ENTRY::
							    .BLKB   4

						    DEVCHAR_LEN==	32
						    VOL1==		HOME_BLOCK
							    .GLOBL  MOUNT_OPTIONS, DEVICE_STRING, LABEL_STRING, MOUNT_PARSE
							    .GLOBL  SEARCH_VOL, TRAN_LOGNAME, READ_VOLLABEL, READ_HOMEBLOCK
							    .GLOBL  MOUNT_TAPE, MOUNT_DISK1, MOUNT_DISK2, SYS$CMKRNL
							    .GLOBL  SYS$ALLOC, SYS$ASSIGN, SYS$GETCHN, SYS$DASSGN
							    .GLOBL  SYS$DALLOC

							    .PSECT  $CODE$,NOWRT,2

					 0F04 00000 	    .ENTRY  MOUNT_COMMAND, Save R2,R8,R9,R10,R11		      ; 0621
		         58	0000G  CF  9E 00002 	    MOVAB   LABEL_STRING, R8					      ;
		         59 00000000G  00  9E 00007 	    MOVAB   LIB$STOP, R9					      ;
		         5A	0000G  CF  9E 0000E 	    MOVAB   MOUNT_OPTIONS, R10					      ;
		         5B	0000'  CF  9E 00013 	    MOVAB   DEVICE_CHAR, R11					      ;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:47:31	DBB3:[MOUNT.SRC]VMOUNT.B32;34					Page 3-6
; Digital Equipment Corporation
;
		         5E	       08  C2 00018 	    SUBL2   #8, SP						      ;
		         6D 0000023F   EF  DE 0001B 	    MOVAL   34$, (FP)						      ; 0653
				FB5C   CB  D4 00022 	    CLRL    CHANNEL						      ; 0685
				  08   AC  DD 00026 	    PUSHL   CLI_CALLBACK					      ; 0687
		  0000G  CF	       01  FB 00029 	    CALLS   #1, MOUNT_PARSE					      ;
				       52  D4 0002E 	    CLRL    STATUS						      ; 0695
	   14	         6A	       04  E0 00030 	    BBS     #4, MOUNT_OPTIONS, 1$				      ; 0696
				       58  DD 00034 	    PUSHL   R8							      ; 0697
				       01  DD 00036 	    PUSHL   #1							      ;
				       5E  DD 00038 	    PUSHL   SP							      ;
				0000G  CF  9F 0003A 	    PUSHAB  SEARCH_VOL						      ;
	      00000000G  9F	       04  FB 0003E 	    CALLS   #4, @#SYS$CMKRNL					      ;
		         52	       50  D0 00045 	    MOVL    R0, STATUS						      ;
		         18	       52  E9 00048 1$:     BLBC    STATUS, 2$						      ; 0698
				FB6C   CB  9F 0004B 	    PUSHAB  PHYS_NAME						      ; 0700
		         7E	       68  7D 0004F 	    MOVQ    LABEL_STRING, -(SP)					      ;
				       03  DD 00052 	    PUSHL   #3							      ;
			    0072A003   8F  DD 00054 	    PUSHL   #7512067						      ;
	      00000000G  00	       05  FB 0005A 	    CALLS   #5, LIB$SIGNAL					      ;
				       0A  11 00061 	    BRB     3$							      ; 0698
		         07	       52  D1 00063 2$:     CMPL    STATUS, #7						      ; 0704
				       08  1B 00066 	    BLEQU   4$							      ;
				       52  DD 00068 	    PUSHL   STATUS						      ; 0705
		         69	       01  FB 0006A 	    CALLS   #1, LIB$STOP					      ;
				     01EC  31 0006D 3$:     BRW     33$							      ; 0704
		         6E	       20  D0 00070 4$:     MOVL    #32, DEVICE_NAME					      ; 0714
		    04   AE	FBEC   CB  9E 00073 	    MOVAB   NAME_BUFFER, DEVICE_NAME+4				      ; 0715
				       5E  DD 00079 	    PUSHL   SP							      ; 0716
				0000G  CF  9F 0007B 	    PUSHAB  DEVICE_STRING					      ;
		  0000G  CF	       02  FB 0007F 	    CALLS   #2, TRAN_LOGNAME					      ;
      04   BE	         6E	       3A  3A 00084 	    LOCC    #58, DEVICE_NAME, @DEVICE_NAME+4			      ; 0722
				       02  12 00089 	    BNEQ    5$							      ;
				       51  D4 0008B 	    CLRL    R1							      ;
		         50	       51  D0 0008D 5$:     MOVL    R1, P						      ;
				       05  12 00090 	    BNEQ    6$							      ; 0723
	   50	         6E	  04   AE  C1 00092 	    ADDL3   DEVICE_NAME+4, DEVICE_NAME, P			      ; 0724
		         30	  FF   A0  91 00097 6$:     CMPB    -1(P), #48						      ; 0725
				       06  1F 0009B 	    BLSSU   7$							      ;
		         39	  FF   A0  91 0009D 	    CMPB    -1(P), #57						      ;
				       07  1B 000A1 	    BLEQU   8$							      ;
		         80	3A30   8F  B0 000A3 7$:     MOVW    #14896, (P)+					      ; 0728
				       6E  D6 000A8 	    INCL    DEVICE_NAME						      ; 0730
		  FB6C   CB	       20  D0 000AA 8$:     MOVL    #32, PHYS_NAME					      ; 0735
		  FB70   CB	FBEC   CB  9E 000AF 	    MOVAB   NAME_BUFFER, PHYS_NAME+4				      ; 0736
				       7E  D4 000B6 	    CLRL    -(SP)						      ; 0739
				FB6C   CB  9F 000B8 	    PUSHAB  PHYS_NAME						      ;
				FB6C   CB  9F 000BC 	    PUSHAB  PHYS_NAME						      ;
				  0C   AE  9F 000C0 	    PUSHAB  DEVICE_NAME						      ;
	      00000000G  9F	       04  FB 000C3 	    CALLS   #4, @#SYS$ALLOC					      ;
		         52	       50  D0 000CA 	    MOVL    R0, STATUS						      ;
		         05	       52  E8 000CD 	    BLBS    STATUS, 9$						      ; 0740
				       52  DD 000D0 	    PUSHL   STATUS						      ;
		         69	       01  FB 000D2 	    CALLS   #1, LIB$STOP					      ;
		  FB68   CB	       01  D0 000D5 9$:     MOVL    #1, PHYS_COUNT					      ; 0741
	      00000641   8F	       52  D1 000DA 	    CMPL    STATUS, #1601					      ; 0742

; Bliss-32 7.352	Saturday 21-AUG-1978 23:47:31	DBB3:[MOUNT.SRC]VMOUNT.B32;34					Page 3-7
; Digital Equipment Corporation
;
				       0A  13 000E1 	    BEQL    10$							      ;
		  FB58   CB	       02  88 000E3 	    BISB2   #2, CLEANUP_FLAGS					      ; 0745
		  FB54   CB	       01  88 000E8 	    BISB2   #1, CLEANUP_ALLOC					      ; 0746
				       7E  7C 000ED 10$:    CLRQ    -(SP)						      ; 0750
				FB5C   CB  9F 000EF 	    PUSHAB  CHANNEL						      ;
				FB6C   CB  9F 000F3 	    PUSHAB  PHYS_NAME						      ;
	      00000000G  9F	       04  FB 000F7 	    CALLS   #4, @#SYS$ASSIGN					      ;
		         52	       50  D0 000FE 	    MOVL    R0, STATUS						      ;
		         05	       52  E8 00101 	    BLBS    STATUS, 11$						      ; 0751
				       52  DD 00104 	    PUSHL   STATUS						      ;
		         69	       01  FB 00106 	    CALLS   #1, LIB$STOP					      ;
				       7E  7C 00109 11$:    CLRQ    -(SP)						      ; 0758
				0000'  CF  9F 0010B 	    PUSHAB  DEVCHAR_DESC					      ;
				       7E  D4 0010F 	    CLRL    -(SP)						      ;
				FB5C   CB  DD 00111 	    PUSHL   CHANNEL						      ;
	      00000000G  9F	       05  FB 00115 	    CALLS   #5, @#SYS$GETCHN					      ;
	   08	    01   AB	       06  E0 0011C 	    BBS     #6, DEVICE_CHAR+1, 12$				      ; 0760
		         7E	01CC   8F  3C 00121 	    MOVZWL  #460, -(SP)						      ; 0761
		         69	       01  FB 00126 	    CALLS   #1, LIB$STOP					      ;
	   07	    02   AB	       02  E0 00129 12$:    BBS     #2, DEVICE_CHAR+2, 13$				      ; 0763
		         7E	  84   8F  9A 0012E 	    MOVZBL  #132, -(SP)						      ; 0764
		         69	       01  FB 00132 	    CALLS   #1, LIB$STOP					      ;
	   07	    02   AB	       03  E1 00135 13$:    BBC     #3, DEVICE_CHAR+2, 14$				      ; 0766
		         7E	  6C   8F  9A 0013A 	    MOVZBL  #108, -(SP)						      ; 0767
		         69	       01  FB 0013E 	    CALLS   #1, LIB$STOP					      ;
	   13	         6B	       05  E1 00141 14$:    BBC     #5, DEVICE_CHAR, 15$				      ; 0774
	      038865C0   8F	       6A  D3 00145 	    BITL    OPTIONS, #59270592					      ; 0776
				       1D  12 0014C 	    BNEQ    17$							      ;
	      FFFFFF87   8F	  04   AA  D3 0014E 	    BITL    OPTIONS+4, #-121					      ; 0777
				       11  11 00156 	    BRB     16$							      ;
	      00317003   8F	       6A  D3 00158 15$:    BITL    OPTIONS, #3239939					      ; 0779
				       0A  12 0015F 	    BNEQ    17$							      ;
	      FFFFFFE7   8F	  04   AA  D3 00161 	    BITL    OPTIONS+4, #-25					      ; 0780
				       09  13 00169 16$:    BEQL    18$							      ;
			    00728034   8F  DD 0016B 17$:    PUSHL   #7503924						      ; 0782
		         69	       01  FB 00171 	    CALLS   #1, LIB$STOP					      ;
	   09	         6B	       05  E1 00174 18$:    BBC     #5, DEVICE_CHAR, 19$				      ; 0788
				       58  DD 00178 	    PUSHL   R8							      ; 0790
		  0000G  CF	       01  FB 0017A 	    CALLS   #1, READ_VOLLABEL					      ;
				       0D  11 0017F 	    BRB     20$							      ;
      01   AA	         01	       03  EF 00181 19$:    EXTZV   #3, #1, MOUNT_OPTIONS+1, -(SP)			      ; 0792
				       7E     00186									      ;
				       58  DD 00187 	    PUSHL   R8							      ;
		  0000G  CF	       02  FB 00189 	    CALLS   #2, READ_HOMEBLOCK					      ;
		         52	       50  D0 0018E 20$:    MOVL    R0, STATUS						      ;
	   00	         6A	       21  E2 00191 	    BBSS    #33, MOUNT_OPTIONS, 21$				      ; 0798
		         63	       52  E8 00195 21$:    BLBS    STATUS, 27$						      ; 0799
	      000008E0   8F	       52  D1 00198 	    CMPL    STATUS, #2272					      ; 0802
				       09  13 0019F 	    BEQL    22$							      ;
	      000001DC   8F	       52  D1 001A1 	    CMPL    STATUS, #476					      ; 0803
				       10  12 001A8 	    BNEQ    24$							      ;
	   00	         6A	       21  E5 001AA 22$:    BBCC    #33, MOUNT_OPTIONS, 23$				      ; 0806
	   48	    01   AA	       03  E0 001AE 23$:    BBS     #3, MOUNT_OPTIONS+1, 27$				      ; 0807
	   43	    01   AA	       04  E0 001B3 	    BBS     #4, MOUNT_OPTIONS+1, 27$				      ; 0808
				       18  11 001B8 	    BRB     25$							      ; 0810

; Bliss-32 7.352	Saturday 21-AUG-1978 23:47:31	DBB3:[MOUNT.SRC]VMOUNT.B32;34					Page 3-8
; Digital Equipment Corporation
;
	      0000010C   8F	       52  D1 001BA 24$:    CMPL    STATUS, #268					      ; 0818
				       33  12 001C1 	    BNEQ    26$							      ;
	   33	    03   AA	       07  E1 001C3 	    BBC     #7, MOUNT_OPTIONS+3, 27$				      ; 0821
	   2E	    01   AA	       03  E0 001C8 	    BBS     #3, MOUNT_OPTIONS+1, 27$				      ; 0822
	   29	    02   AA	       06  E0 001CD 	    BBS     #6, MOUNT_OPTIONS+2, 27$				      ; 0823
	   20	         6B	       05  E0 001D2 25$:    BBS     #5, DEVICE_CHAR, 26$				      ; 0825
				  F0   AB  9F 001D6 	    PUSHAB  HOME_BLOCK+496					      ; 0830
				       0C  DD 001D9 	    PUSHL   #12							      ;
				  E4   AB  9F 001DB 	    PUSHAB  HOME_BLOCK+484					      ;
				       0C  DD 001DE 	    PUSHL   #12							      ;
				  D8   AB  9F 001E0 	    PUSHAB  HOME_BLOCK+472					      ;
				       0C  DD 001E3 	    PUSHL   #12							      ;
				       06  DD 001E5 	    PUSHL   #6							      ;
			    0072A00B   8F  DD 001E7 	    PUSHL   #7512075						      ;
				       7E  D4 001ED 	    CLRL    -(SP)						      ;
				       52  DD 001EF 	    PUSHL   STATUS						      ;
		         69	       0A  FB 001F1 	    CALLS   #10, LIB$STOP					      ;
				       05  11 001F4 	    BRB     27$							      ; 0821
				       52  DD 001F6 26$:    PUSHL   STATUS						      ; 0833
		         69	       01  FB 001F8 	    CALLS   #1, LIB$STOP					      ;
	   26	         6A	       21  E1 001FB 27$:    BBC     #33, MOUNT_OPTIONS, 29$				      ; 0837
	   1D	    01   AA	       03  E0 001FF 	    BBS     #3, MOUNT_OPTIONS+1, 28$				      ; 0838
	   18	    01   AA	       04  E0 00204 	    BBS     #4, MOUNT_OPTIONS+1, 28$				      ; 0839
	   13	    02   AA	       01  E0 00209 	    BBS     #1, MOUNT_OPTIONS+2, 28$				      ; 0840
	   0F	         6A	       26  E0 0020E 	    BBS     #38, MOUNT_OPTIONS, 28$				      ; 0841
	   0A	    02   AA	       04  E0 00212 	    BBS     #4, MOUNT_OPTIONS+2, 28$				      ; 0842
	   05	    02   AA	       02  E0 00217 	    BBS     #2, MOUNT_OPTIONS+2, 28$				      ; 0843
	   04	    02   AA	       03  E1 0021C 	    BBC     #3, MOUNT_OPTIONS+2, 29$				      ; 0844
	   00	         6A	       20  E2 00221 28$:    BBSS    #32, MOUNT_OPTIONS, 29$				      ; 0846
	   07	         6B	       05  E1 00225 29$:    BBC     #5, DEVICE_CHAR, 30$				      ; 0851
		  0000G  CF	       00  FB 00229 	    CALLS   #0, MOUNT_TAPE					      ; 0853
				       10  11 0022E 	    BRB     32$							      ; 0851
	   07	         6A	       22  E1 00230 30$:    BBC     #34, MOUNT_OPTIONS, 31$				      ; 0855
		  0000G  CF	       00  FB 00234 	    CALLS   #0, MOUNT_DISK2					      ; 0856
				       05  11 00239 	    BRB     32$							      ; 0855
		  0000G  CF	       00  FB 0023B 31$:    CALLS   #0, MOUNT_DISK1					      ; 0857
				FB5C   CB  DD 00240 32$:    PUSHL   CHANNEL						      ; 0863
	      00000000G  9F	       01  FB 00244 	    CALLS   #1, @#SYS$DASSGN					      ;
	   0D	         6A	       04  E0 0024B 	    BBS     #4, MOUNT_OPTIONS, 33$				      ; 0864
				       7E  D4 0024F 	    CLRL    -(SP)						      ; 0865
				FB6C   CB  9F 00251 	    PUSHAB  PHYS_NAME						      ;
	      00000000G  9F	       02  FB 00255 	    CALLS   #2, @#SYS$DALLOC					      ;
		         50	       01  D0 0025C 33$:    MOVL    #1, R0						      ; 0870
					   04 0025F 	    RET     							      ; 0621
					 0000 00260 34$:    .WORD   Save nothing					      ; 0653
				       7E  D4 00262 	    CLRL    -(SP)						      ;
				       5E  DD 00264 	    PUSHL   SP							      ;
		         7E	  04   AC  7D 00266 	    MOVQ    4(AP), -(SP)					      ;
		  0000V  CF	       03  FB 0026A 	    CALLS   #3, MAIN_HANDLER					      ;
					   04 0026F 	    RET     							      ;

; Routine Size:  624 bytes



; Bliss-32 7.352	Saturday 21-AUG-1978 23:47:31	DBB3:[MOUNT.SRC]VMOUNT.B32;34					Page 4
; Digital Equipment Corporation
;
;	0873	ROUTINE MAIN_HANDLER (SIGNAL, MECHANISM) =
;	0874	
;	0875	!++
;	0876	!
;	0877	! FUNCTIONAL DESCRIPTION:
;	0878	!
;	0879	!	This routine is the main level condition handler for the MOUNT
;	0880	!	utility. It undoes anything that MOUNT has done so far and returns
;	0881	!	the condition code as status to MOUNT's	caller (i.e., the CLI).
;	0882	!
;	0883	!
;	0884	! CALLING SEQUENCE:
;	0885	!	MAIN_HANDLER (ARG1, ARG2)
;	0886	!
;	0887	! INPUT PARAMETERS:
;	0888	!	ARG1: address of signal array
;	0889	!	ARG2: address of mechanism array
;	0890	!
;	0891	! IMPLICIT INPUTS:
;	0892	!	NONE
;	0893	!
;	0894	! OUTPUT PARAMETERS:
;	0895	!	NONE
;	0896	!
;	0897	! IMPLICIT OUTPUTS:
;	0898	!	NONE
;	0899	!
;	0900	! ROUTINE VALUE:
;	0901	!	NONE
;	0902	!
;	0903	! SIDE EFFECTS:
;	0904	!	stack unwound, control passed to CLI
;	0905	!
;	0906	!--
;	0907	
;	0908	BEGIN
;	0909	
;	0910	MAP
;	0911		SIGNAL		: REF BBLOCK,	! signal array
;	0912		MECHANISM	: REF BBLOCK;	! mechanism array
;	0913	
;	0914	EXTERNAL
;	0915		USER_STATUS	: VECTOR;	! status return of some routines
;	0916	
;	0917	EXTERNAL ROUTINE
;	0918		CLEAR_VALID;			! clear valid bit in UCB
;	0919	
;	0920	
;	0921	! Do cleanup as indicated by the status flags. Force the facility code to be
;	0922	! mount and resignal the error to be printed by the catch all handler.
;	0923	!
;	0924	
;	0925	IF .BBLOCK [SIGNAL[CHF$L_SIG_NAME], STS$V_FAC_NO] EQL 0
;	0926	OR .BBLOCK [SIGNAL[CHF$L_SIG_NAME], STS$V_FAC_NO] EQL INIT$_FACILITY
;	0927	THEN BBLOCK [SIGNAL[CHF$L_SIG_NAME], STS$V_FAC_NO] = MOUN$_FACILITY;

; Bliss-32 7.352	Saturday 21-AUG-1978 23:47:31	DBB3:[MOUNT.SRC]VMOUNT.B32;34					Page 4-1
; Digital Equipment Corporation
;
;	0928	IF .BBLOCK [SIGNAL[CHF$L_SIG_NAME], STS$V_MSG_NO] EQL 0
;	0929	THEN BBLOCK [SIGNAL[CHF$L_SIG_NAME], STS$V_MSG_NO] = .USER_STATUS[0] ^ (-$BITPOSITION (STS$V_MSG_NO));
;	0930	
;	0931	IF .BBLOCK [SIGNAL[CHF$L_SIG_NAME], STS$V_SEVERITY] EQL STS$K_SEVERE
;	0932	THEN
;	0933	    BEGIN
;	0934	
;	0935	    IF .CHANNEL NEQ 0
;	0936	    THEN
;	0937		BEGIN
;	0938		KERNEL_CALL (CLEAR_VALID);
;	0939		$DASSGN (CHAN = .CHANNEL);
;	0940		END;
;	0941	
;	0942	    IF .CLEANUP_FLAGS[CLF_DEASSTEMP] THEN
;	0943	    $DASSGN(CHAN = .TEMP_CHANNEL);
;	0944	
;	0945	    INCR I FROM 0 TO .PHYS_COUNT-1
;	0946	    DO
;	0947		BEGIN
;	0948		IF .CLEANUP_ALLOC[.I]
;	0949		THEN $DALLOC(DEVNAM = PHYS_NAME[.I * 2]);
;	0950		END;
;	0951	    END;
;	0952	
;	0953	RETURN SS$_RESIGNAL;
;	0954	
;	0955	END;					! end of routine MAIN_HANDLER



							    .GLOBL  CLEAR_VALID

					 0C0C 00270 MAIN_HANDLER:
							    .WORD   Save R2,R3,R10,R11					      ; 0873
		         5A 00000000G  9F  9E 00272 	    MOVAB   @#SYS$DASSGN, R10					      ;
		         5B	0000'  CF  9E 00279 	    MOVAB   CHANNEL, R11					      ;
		         50	  04   AC  D0 0027E 	    MOVL    SIGNAL, R0						      ; 0925
		         50	       04  C0 00282 	    ADDL2   #4, R0						      ;
		  0FFF   8F	  02   A0  B3 00285 	    BITW    2(R0), #4095					      ;
				       0C  13 0028B 	    BEQL    1$							      ;
      02   A0	         0C	       00  ED 0028D 	    CMPZV   #0, #12, 2(R0), #117				      ; 0926
			    00000075   8F     00292									      ;
				       0A  12 00297 	    BNEQ    2$							      ;
	   0C	         00 00000072   8F  F0 00299 1$:     INSV    #114, #0, #12, 2(R0)				      ; 0927
				  02   A0     002A1									      ;
		  FFF8   8F	       60  B3 002A3 2$:     BITW    (R0), #65528					      ; 0928
				       0C  12 002A8 	    BNEQ    3$							      ;
	   51	  0000G  CF	  FD   8F  78 002AA 	    ASHL    #-3, USER_STATUS, R1				      ; 0929
	   0D	         03	       51  F0 002B1 	    INSV    R1, #3, #13, (R0)					      ;
				       60     002B5									      ;
	   60	         03	       00  ED 002B6 3$:     CMPZV   #0, #3, (R0), #4					      ; 0931
				       04     002BA									      ;
				       46  12 002BB 	    BNEQ    8$							      ;
				       6B  D5 002BD 	    TSTL    CHANNEL						      ; 0935

; Bliss-32 7.352	Saturday 21-AUG-1978 23:47:31	DBB3:[MOUNT.SRC]VMOUNT.B32;34					Page 4-2
; Digital Equipment Corporation
;
				       14  13 002BF 	    BEQL    4$							      ;
				       7E  D4 002C1 	    CLRL    -(SP)						      ; 0938
				       5E  DD 002C3 	    PUSHL   SP							      ;
				0000G  CF  9F 002C5 	    PUSHAB  CLEAR_VALID						      ;
	      00000000G  9F	       03  FB 002C9 	    CALLS   #3, @#SYS$CMKRNL					      ;
				       6B  DD 002D0 	    PUSHL   CHANNEL						      ; 0939
		         6A	       01  FB 002D2 	    CALLS   #1, SYS$DASSGN					      ;
	   06	    FC   AB	       04  E1 002D5 4$:     BBC     #4, CLEANUP_FLAGS, 5$				      ; 0942
				  08   AB  DD 002DA 	    PUSHL   TEMP_CHANNEL					      ; 0943
		         6A	       01  FB 002DD 	    CALLS   #1, SYS$DASSGN					      ;
		         53	  0C   AB  D0 002E0 5$:     MOVL    PHYS_COUNT, R3					      ; 0945
		         52	       01  CE 002E4 	    MNEGL   #1, I						      ;
				       16  11 002E7 	    BRB     7$							      ;
	   11	    F8   AB	       52  E1 002E9 6$:     BBC     I, CLEANUP_ALLOC, 7$				      ; 0948
				       7E  D4 002EE 	    CLRL    -(SP)						      ; 0949
	   50	         52	       01  78 002F0 	    ASHL    #1, I, R0						      ;
				  10 AB40  DF 002F4 	    PUSHAL  PHYS_NAME[R0]					      ;
	      00000000G  9F	       02  FB 002F8 	    CALLS   #2, @#SYS$DALLOC					      ;
	   E6	         52	       53  F2 002FF 7$:     AOBLSS  R3, I, 6$						      ; 0945
		         50	0918   8F  3C 00303 8$:     MOVZWL  #2328, R0						      ; 0953
					   04 00308 	    RET     							      ; 0873

; Routine Size:  153 bytes


;	0956	
;	0957	END
;	0958	ELUDOM




							    .GLOBL  LIB$SIGNAL, LIB$STOP

;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $GLOBAL$       	  1284    WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $OWN$          	     8    WRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $CODE$         	   777  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]LIB.L32;1		      5582        33         0       245





; Bliss-32 7.352	Saturday 21-AUG-1978 23:47:31	DBB3:[MOUNT.SRC]VMOUNT.B32;34					Page 4-3
; Digital Equipment Corporation
;

; Size:		777 code + 1292 data bytes
; Run Time:	00:34.8
; Elapsed Time:	01:22.3
; Memory Used:	398 pages
; Compilation Complete
