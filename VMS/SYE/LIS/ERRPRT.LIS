
                22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 1   
					ERRPRT.FOR.89       

0001    	PROGRAM	ERRPRT
         
        C
        C	COPYRIGHT (C) 1978
        C	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
        C
        C	THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
        C	SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
        C	SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
        C	OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
        C	AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
        C	AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
        C	OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
        C
        C	THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
        C	NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
        C	EQUIPMENT CORPORATION.
        C
        C	DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
        C	SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
        C
         
        C++
        C
        C	FACILITY:	ERROR LOGGING
        C
        C	ABSTRACT:
        C
        C
        C	ENVIRONMENT:
        C
        C
        C	AUTHOR:	WM P STOREY,	CREATION DATE: 9-JAN-78
        C
        C	MODIFIED BY: V. L. MCMILLEN,	21-JUN-1978
        C
        C	 , VERSION  ,
        C	01	-
        C
        C--
         
        C
        C	INCLUDE FILES:
        C
0002    	INCLUDE	'SRC$:EMBDEF.FOR/NOLIST'
0159    	INCLUDE	'SRC$:SYECOM.FOR/NOLIST'
         
         
        C
        C	EQUATED SYMBOLS:
        C
0173    	PARAMETER	LSTLUN = 2
0174    	PARAMETER	SYSLUN = 1
         
         
0175    	PARAMETER	SYE$M_ENTTYPVLD = 1

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 2   
					ERRPRT.FOR.89       

0176    	PARAMETER	SYE$M_DEVCLS = 2
0177    	PARAMETER	SYE$M_DEVTYP = 4
0178    	PARAMETER	SYE$M_HISTO = 8
         
0179    	INTEGER*4	EMB$_DV_ERTIME(0:1)
0180    	EQUIVALENCE 	(EMB$Q_DV_TIME,EMB$_DV_ERTIME(0))
         
0181    	INTEGER*4	IOSB(0:1)
0182    	EQUIVALENCE(	IOSB(0),	EMB$Q_DV_IOSB) 
         
0183    	BYTE		MESSAGE(485)
0184    	EQUIVALENCE(	MESSAGE(1),	EMB$B_SS_MSGTXT)
         
         
        C
        C	OWN STORAGE:
        C
0185    	INTEGER*4	ERTIMELO(0:1)
0186    	INTEGER*4	ERTIMEHI(0:1)
0187    	INTEGER*4	HISTO(0:23)
0188    	INTEGER*4	L_OLD_ERRCNT(DEVSUMMAX,0:7)
0189    	INTEGER*4	L_OLD_OPCNT(DEVSUMMAX,0:7)
0190    	INTEGER*4	SELTIMELO(0:1)
0191    	INTEGER*4	SELTIMEHI(0:1)
         
0192    	INTEGER*2	DEVSUM(DEVSUMMAX,0:7,0:1)
0193    	INTEGER*2	FLAGS (0:255)
0194    	INTEGER*2	INDEX
0195    	INTEGER*2	Q
0196    	INTEGER*2	RECPROC
0197    	INTEGER*2	SELDEVLEN
0198    	INTEGER*2	SUMMARY(-7:4)
0199    	INTEGER*2	TIMBUF(0:6)
0200    	INTEGER*2	W_CORRUPTED
0201    	INTEGER*2	W_QUESTION
0202    	INTEGER*2	W_UNIT
0203    	INTEGER*2	W_UNKNOWN
0204    	INTEGER*2	SIZE
0205    	INTEGER*2	ERROR,FILE_OPEN
         
0206    	BYTE		DISMOUNT(30)
0207    	BYTE		MAJDEV
0208    	BYTE		MAJENT
0209    	BYTE		MINDEV
0210    	BYTE		MINENT
0211    	BYTE		MOUNT(30)
0212    	BYTE		OPTION
0213    	BYTE		SELDEVNAM(0:16)		! (0) needed for negation move.
         
0214    	LOGICAL*1	DEVICE
0215    	LOGICAL*1	MATCH
0216    	LOGICAL*1	NEGATE
0217    	LOGICAL*1	UNKNOWN
         
0218    	CHARACTER*16	STRING
0219    	EQUIVALENCE (STRING,SELDEVNAM(1))

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 3   
					ERRPRT.FOR.89       

0220    	CHARACTER*30	INNAME
0221    	CHARACTER*30	OUTNAME
0222    	CHARACTER*25	SYSTEM ERROR (0:10)
0223    	CHARACTER*24	TIME
         
        C
        C	EXTERNAL ROUTINES:
        C
0224    	INTEGER*2	DEVCHK
0225    	LOGICAL*4	SYS$BINTIM
0226    	LOGICAL*4	SYS$NUMTIM
0227    	INTEGER*4	TIMCMP
         
0228    	EXTERNAL	LSTOPEN
0229    	EXTERNAL	SYEOPEN
         
         
0230    	DATA		ERTIMELO(1)/'7FFFFFFF'X/		! RUNTIME INIT/
0231    	DATA		ERTIMELO(0)/'FFFFFFFF'X/		!
0232    	DATA		ERTIMEHI(1)/0/				! RUNTIME INIT
0233    	DATA		ERTIMEHI(0)/0/				!
0234    	DATA		SELTIMELO(0)/0/
0235    	DATA		SELTIMELO(1)/0/
0236    	DATA		SELTIMEHI(1)/'7FFFFFFF'X/
0237    	DATA		SELTIMEHI(0)/'FFFFFFFF'X/
         
0238    	DATA		NEGATE/.FALSE./
0239    	DATA		UNKNOWN/.FALSE./
         
0240    	DATA		DEVSUMCNT/14/
         
0241    	DATA		NAMDEVSUM(1,0)/3/
0242    	DATA		NAMDEVSUM(1,1)/'D'/
0243    	DATA		NAMDEVSUM(1,2)/'B'/
0244    	DATA		NAMDEVSUM(1,3)/'A'/
         
0245    	DATA		NAMDEVSUM(2,0)/3/
0246    	DATA		NAMDEVSUM(2,1)/'D'/
0247    	DATA		NAMDEVSUM(2,2)/'B'/
0248    	DATA		NAMDEVSUM(2,3)/'B'/
         
0249    	DATA		NAMDEVSUM(3,0)/3/
0250    	DATA		NAMDEVSUM(3,1)/'D'/
0251    	DATA		NAMDEVSUM(3,2)/'B'/
0252    	DATA		NAMDEVSUM(3,3)/'C'/
         
0253    	DATA		NAMDEVSUM(4,0)/3/
0254    	DATA		NAMDEVSUM(4,1)/'D'/
0255    	DATA		NAMDEVSUM(4,2)/'B'/
0256    	DATA		NAMDEVSUM(4,3)/'D'/
         
0257    	DATA		NAMDEVSUM(5,0)/3/
0258    	DATA		NAMDEVSUM(5,1)/'D'/
0259    	DATA		NAMDEVSUM(5,2)/'M'/
0260    	DATA		NAMDEVSUM(5,3)/'A'/
         

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 4   
					ERRPRT.FOR.89       

0261    	DATA		NAMDEVSUM(6,0)/3/
0262    	DATA		NAMDEVSUM(6,1)/'D'/
0263    	DATA		NAMDEVSUM(6,2)/'M'/
0264    	DATA		NAMDEVSUM(6,3)/'B'/
         
0265    	DATA		NAMDEVSUM(7,0)/3/
0266    	DATA		NAMDEVSUM(7,1)/'D'/
0267    	DATA		NAMDEVSUM(7,2)/'R'/
0268    	DATA		NAMDEVSUM(7,3)/'A'/
         
0269    	DATA		NAMDEVSUM(8,0)/3/
0270    	DATA		NAMDEVSUM(8,1)/'D'/
0271    	DATA		NAMDEVSUM(8,2)/'R'/
0272    	DATA		NAMDEVSUM(8,3)/'B'/
         
0273    	DATA		NAMDEVSUM(9,0)/3/
0274    	DATA		NAMDEVSUM(9,1)/'D'/
0275    	DATA		NAMDEVSUM(9,2)/'R'/
0276    	DATA		NAMDEVSUM(9,3)/'C'/
         
0277    	DATA		NAMDEVSUM(10,0)/3/
0278    	DATA		NAMDEVSUM(10,1)/'D'/
0279    	DATA		NAMDEVSUM(10,2)/'R'/
0280    	DATA		NAMDEVSUM(10,3)/'D'/
         
0281    	DATA		NAMDEVSUM(11,0)/3/
0282    	DATA		NAMDEVSUM(11,1)/'M'/
0283    	DATA		NAMDEVSUM(11,2)/'T'/
0284    	DATA		NAMDEVSUM(11,3)/'A'/
         
0285    	DATA		NAMDEVSUM(12,0)/3/
0286    	DATA		NAMDEVSUM(12,1)/'M'/
0287    	DATA		NAMDEVSUM(12,2)/'T'/
0288    	DATA		NAMDEVSUM(12,3)/'B'/
         
0289    	DATA		NAMDEVSUM(13,0)/3/
0290    	DATA		NAMDEVSUM(13,1)/'M'/
0291    	DATA		NAMDEVSUM(13,2)/'T'/
0292    	DATA		NAMDEVSUM(13,3)/'C'/
         
0293    	DATA		NAMDEVSUM(14,0)/3/
0294    	DATA		NAMDEVSUM(14,1)/'M'/
0295    	DATA		NAMDEVSUM(14,2)/'T'/
0296    	DATA		NAMDEVSUM(14,3)/'D'/
         
         
        C
        C	The INTEGER*2 array FLAGS is used as a bit-multiplexed
        C	method to detect at the earliest possible stage error
        C	log entries that are  invalid.  Such checking reduces (in
        C	the remainder of the SYE program) code which  performs
        C	consistency checking.
        C
        C	The use of FLAGS is predicated on the variable to be
        C	checked being a byte variable;  that is, as FLAGS is
        C	dimensioned (0:255),  only byte variables can be 

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 5   
					ERRPRT.FOR.89       

        C	validated via FLAGS.
        C
        C	One bit per each word is used for the following checks.
        C	Valid hex values arnd corresponding meaning are given.
        C
        C
        C	Bit 0  -  Valid Entry type
        C
        C		Hardware errors:
        C
        C		01	device error bit set.
        C		02	machine check.
        C		04	bus error.
        C		05	SBI alert.		
        C		06	soft ECC error.		
        C		07	asynchronous write error.
        C		08	hard ECC error
        C
        C		System information:
        C
        C		20	system startup.Cold start.
        C		21	orderly shutdown (error log terminated).
        C		22	system power fail.
        C		23	display input file (ERROR.SYS) created.
        C		24	warm start (i.e., system power fail recovery).
        C		25	crash re-start.
        C		26	periodic time-stamp.
        C		27	system service message.
        C		28	system bugcheck.
        C		29	operator message.
        C		2A	network message.
        C
        C		Configuration changes:
        C
        C		40	volume mounts.
        C		41	volume dismounts.
        C		42(NYI)	handler/driver load.
        C		43(NYI)	handler/driver unload.
        C	
        C		Vector area problems:
        C
        C		60	device timeout.
        C		61(NYI)	undefined interrupt.
        C		70	user bugcheck (really a system error!)
        C
        C
        C	Bit 1  -  Device class for entry type of device error ('01'X)
        C							or
        C						 device timeout('60'X).
        C
        C
        C		Mass storage.
        C
        C		01	disks.
        C		02	tapes.
        C

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 6   
					ERRPRT.FOR.89       

        C
        C	Bit 2  -  Device type for entry type of device error('01'X)
        C							or
        C						device timeout('60'X).
        C
        C		01	RK06,TE16.
        C		02	RK07,TU45.
        C		03	RP04,TU77.
        C		04	RP05.
        C		05	RP06.
        C		06	RM03.
        C		07(NYI)	RP07.
        C		08(NYI)	RP07HT.
        C
        C
        C	Bit 3  -  Entry types included in hour-of-day histogram.
        C
        C		Hardware errors:
        C
        C		01	device error bit set.
        C		02	machine check.
        C		04	bus error.
        C		05	SBI alert.
        C		06	soft ECC error.
        C		07	asyncronous write error.
        C		08	HARD ECC ERROR.
        C
        C		Vector area problems:
        C
        C		60	device timeout.
        C		61	undefined interrupt.
        C
0297    	DATA		FLAGS('00'X)/0/
0298    	DATA		FLAGS('01'X)/15/
0299    	DATA		FLAGS('02'X)/15/
0300    	DATA		FLAGS('03'X)/SYE$M_DEVTYP/
0301    	DATA		FLAGS('04'X)/13/
0302    	DATA		FLAGS('05'X)/13/
0303    	DATA		FLAGS('06'X)/13/
0304    	DATA		FLAGS('07'X)/13/
0305    	DATA		FLAGS('08'X)/9/
0306    	DATA		FLAGS('09'X)/4/
0307    	DATA		FLAGS('0A'X)/0/
0308    	DATA		FLAGS('0B'X)/SYE$M_DEVTYP/
0309    	DATA		FLAGS('0E'X)/SYE$M_DEVTYP/
0310    	DATA		FLAGS('20'X)/SYE$M_ENTTYPVLD/
0311    	DATA		FLAGS('21'X)/SYE$M_ENTTYPVLD/
0312    	DATA		FLAGS('22'X)/SYE$M_ENTTYPVLD/
0313    	DATA		FLAGS('23'X)/SYE$M_ENTTYPVLD/
0314    	DATA		FLAGS('24'X)/SYE$M_ENTTYPVLD/
0315    	DATA		FLAGS('25'X)/SYE$M_ENTTYPVLD/
0316    	DATA		FLAGS('26'X)/SYE$M_ENTTYPVLD/
0317    	DATA		FLAGS('27'X)/SYE$M_ENTTYPVLD/
0318    	DATA		FLAGS('28'X)/SYE$M_ENTTYPVLD/
0319    	DATA		FLAGS('29'X)/SYE$M_ENTTYPVLD/
0320    	DATA		FLAGS('2A'X)/SYE$M_ENTTYPVLD/

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 7   
					ERRPRT.FOR.89       

0321    	DATA		FLAGS('40'X)/SYE$M_ENTTYPVLD/
0322    	DATA		FLAGS('41'X)/SYE$M_ENTTYPVLD/
0323    	DATA		FLAGS('60'X)/9/
         
0324    	DATA		SYSTEM ERROR(0)/'System startup'/
0325    	DATA		SYSTEM ERROR(1)/'Error log terminated'/
0326    	DATA		SYSTEM ERROR(2)/'System powerfail'/
0327    	DATA		SYSTEM ERROR(3)/'ERROR.SYS created'/
0328    	DATA		SYSTEM ERROR(4)/'Warm Start-System pwr recovery'/
0329    	DATA		SYSTEM ERROR(5)/'Crash re-start'/
0330    	DATA		SYSTEM ERROR(6)/'Periodic time stamp'/
0331    	DATA		SYSTEM ERROR(7)/'System service message'/
0332    	DATA		SYSTEM ERROR(8)/'System bugcheck'/
0333    	DATA		SYSTEM ERROR(9)/'Operator message'/
0334    	DATA		SYSTEM ERROR(10)/'Network message'/
         
        C++
        C
        C	FUNCTIONAL DESCRIPTION:
        C
        C	Main program for SYE, the VAX/VMS Errlog display program.
         
        C
        C	FORMAL PARAMETERS:
        C
        C				None.
         
        C
        C	IMPLICIT INPUTS:
        C
        C				None.
         
        C
        C	IMPLICIT OUTPUTS:
        C
        C				None.
         
        C
        C	SIDE EFFECTS:
        C
        C				None.
        C--
         
        C
        C	Initialize runtime statistical package.
        C
0335    	CALL TIMRB
         
        C
        C	Identify program and version.
        C
0336    	ERROR=0
0337    90	CONTINUE
0338    	TYPE 100, 'SYE x1.0'
         
        C

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 8   
					ERRPRT.FOR.89       

        C	Establish input filename and open file.
        C
0339    	TYPE 101,'_input file:	[ [SYSERR]ERRLOG.OLD ]	?'
0340    	ACCEPT 102, Q,INNAME
         
0341    	IF(Q .EQ. 0)
        	1	THEN
0342    			INNAME	= '[SYSERR]ERRLOG.OLD'
0343    			Q	= 15
0344    	ENDIF
         
         
0345     100 	FORMAT(' ',A)
0346     101	FORMAT('$',A)
0347     102	FORMAT(Q,A)
0348     103	FORMAT(Q,I7)
0349     104	FORMAT(' ',T43,A)
         
0350    	FILE_OPEN=1
0351    	OPEN(	UNIT	= SYSLUN,
        	1	NAME	= INNAME(1:MIN(Q,30)),
        	2	TYPE	= 'OLD',	
        	3	READONLY,
        	4	RECORDSIZE = EMB$K_MAX,	! HACK=RMS$_RTB
        	5	ERR	= 200)
        	!6	!SHARED
         
0352    	ERROR=0
0353    	GO TO 250
0354    200	CONTINUE
0355    	ERROR=ERROR+1
0356    	IF (ERROR .LE. 8)
        	1	THEN
0357    			TYPE 100,'%SYE-W-FILOPNERR, file open error'
0358    			IF (FILE_OPEN .EQ. 1) GO TO 90
0359    			IF (FILE_OPEN .EQ. 2) GO TO 250
0360    		ELSE
0361    			TYPE 100, '%SYE-W-FILOPNERR, file open error'
0362    			TYPE 100, '%SYE-F-ABORT,open failure after 8 retries'
0363    			STOP '%SYE UNSUCCESSFUL COMPLETION'
0364    	ENDIF
0365    250	CONTINUE
        C
        C	Establish output filename and open file.
        C
0366    	FILE_OPEN=2
        	
0367    	TYPE 101,'_output file:	[SYS$OUTPUT]		?'
0368    	ACCEPT 102, Q,OUTNAME
         
0369    	IF(Q .EQ. 0)
        	1	THEN
0370    			OUTNAME = 'SYS$OUTPUT'
0371    			Q	= 10
0372    	ENDIF
         

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 9   
					ERRPRT.FOR.89       

0373    	OPEN(	UNIT	= LSTLUN,
        	1	NAME	= OUTNAME(1:MIN(Q,30)),
        	2	ERR	= 200)
        	!	USEROPEN= LSTOPEN)
        	!	TYPE	= 'NEW'			! DEFAULT
        	!	ACCESS	= 'SEQUENTIAL'		! DEFAULT
        	!	FORM	= 'FORMATTED'		! DEFAULT
        	!	CARRIAGECONTROL	= 'FORTRAN'	! DEFAULT
         
        C
        C	ONCE USEROPEN  WORKS, USE SYS$GETCHAN TO GET DEVICE CHARISTICS
        C	(I.E., TTY OR NOT) OF LSTLUN.
        C			OR
        C	IF WE KNEW CORRESPONDENCE BETWEEN FORTRAN LUNS AND CHANNEL NUMBERS
        C	WE COULD DO A SYS$GETCHAN.
        C
0374    	TTY	= .TRUE.
         
        C
        C	Establish options.
        C
0375     300	CONTINUE
         
0376    	TYPE 101,'_options:	[ROLL-UP] 		?'
0377    	ACCEPT 102, Q, OPTION
         
0378    	IF(Q .EQ. 0)
        	1	THEN
0379    			OPTION = 'R'
0380    			GO TO 399
0381    		ELSE
        C			Convert lower- to upper-case.
        C
0382    			OPTION = OPTION .AND. '337'O
0383    	ENDIF
         
0384    	IF(
        	1	OPTION .NE. 'R'
        	2		.AND.
        	3	OPTION .NE. 'C'
        	4		.AND.
        	5	OPTION .NE. 'B'
        	6		.AND.
        	7	OPTION .NE. 'S'
        	8		.AND.
        	9	OPTION .NE. 'F'		! Altho acceptable, not documented.
        	1		.AND.
        	2	OPTION .NE. 'U')
        	3			THEN
0385    					TYPE 104,'options available:'
0386    					TYPE 104,'	R - roll up.'
0387    					TYPE 104,'	C - cryptic.'
0388    					TYPE 104,'	B - brief.'
0389    					TYPE 104,'	S - standard'
0390    					TYPE 104,'	U - unknown entry dump.'
0391    					GO TO 300

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 10  
					ERRPRT.FOR.89       

0392    	ENDIF
         
        C* * * * * *	TEMP
0393    	IF(OPTION .EQ. 'F')
        	1	THEN
0394    			TYPE 101, '					not yet implemented'
0395    			TYPE 101, '					will use option = STANDARD'
0396    			OPTION = 'S'
0397    	ENDIF
        C* * * * * *	TEMP
         
         
0398    	IF(OPTION .EQ. 'U')
        	1	THEN
0399    			UNKNOWN = .TRUE.
0400    			OPTION = 'S'
0401    	ENDIF
         
         
        C
        C	Establish device selection parameters.
        C
0402    	TYPE 101,'_device name:	[<all>]			?'
0403    	ACCEPT 303, SELDEVLEN,STRING
0404     303	FORMAT(Q,A)
         
0405    	IF(SELDEVLEN .GT. 0)
        	1    THEN
0406    			IF(SELDEVNAM(SELDEVLEN) .EQ. ':')
        	1			SELDEVLEN = SELDEVLEN - 1
         
0407    			IF((SELDEVNAM(SELDEVLEN) .GE. '0')
        	1				.AND.
        	2		   (SELDEVNAM(SELDEVLEN) .LE. '9'))
        	3			THEN
0408    				    W_UNIT = SELDEVNAM(SELDEVLEN) - 48
0409    				    SELDEVLEN = SELDEVLEN - 1
0410    				ELSE
0411    				    W_UNIT = -1
0412    			ENDIF
         
0413    			IF(SELDEVNAM(1) .EQ. '-')
        	1		   THEN
0414    				NEGATE = .TRUE.
         
0415    				DO 305, I=1,SELDEVLEN
0416    				   SELDEVNAM(I-1) = SELDEVNAM(I)
0417     305				CONTINUE
         
0418    				SELDEVLEN = SELDEVLEN - 1
0419    			ENDIF
0420    	     ELSE
0421    			W_UNIT = -1
0422    	ENDIF
         
        C

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 11  
					ERRPRT.FOR.89       

        C	Establish time period to inspect.
        C
0423     310	TIME = ' '
         
0424    	TYPE 101,'_after date:	[17-NOV-1858] 		?'
0425    	ACCEPT 102, Q, TIME
         
         
0426    	IF(Q .NE. 0)
        	1	THEN
0427    			IF(.NOT. SYS$BINTIM(%DESCR(TIME(1:Q)),SELTIMELO(0)))
        	1					GO TO 310
0428    	ENDIF
         
0429    	CALL SYS$ASCTIM(,%DESCR(TIME),SELTIMELO(0),%VAL(0))
0430    	TYPE 104, TIME
         
0431     320	TIME = ' '
         
0432    	TYPE 101, '_before date:	[31-DEC-9999] 		?'
0433    	ACCEPT 102, Q, TIME
         
        C
        C	Strip trailing blanks from inputted response
        C	in order to handle  a line of blanks as the 
        C	default case.  Note that a single blank appears 
        C	to SYS$BINTIM as if time zero (i.e., 17-NOV-1858)
        C	has been specified.
        C
         
0434     330	CONTINUE
         
0435    	IF(Q .NE. 0)
        	1   THEN
0436    		IF(TIME(Q:Q) .EQ. ' ')
        	1	    THEN
0437    			Q = Q - 1
0438    			GO TO 330
0439    		ENDIF
0440    	ENDIF
         
0441    	IF(Q .EQ. 0)
        	1	THEN
0442    			TIME 	= '31-DEC-9999 23:59:59.99'
0443    			Q	= 24
0444    	ENDIF
         
         
0445    	IF(.NOT. SYS$BINTIM(%DESCR(TIME(1:Q)),SELTIMEHI(0)))
        	1			GO TO 320
         
0446    	CALL SYS$ASCTIM(,%DESCR(TIME),SELTIMEHI(0),%VAL(0))
0447    	TYPE 104, TIME
         
         
         

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 12  
					ERRPRT.FOR.89       

         
         
0448     399	CONTINUE
         
0449     400	CONTINUE
         
         
0450     500	DO 510, I=0,EMB$K_MAX
0451    	    EMB(I) = 0
0452     510	CONTINUE
         
        C
        C	Initialize local variables in case of dump at 90000.
        C
0453    	Q	= 0
         
0454    	MAJENT	= 0
0455    	MINENT	= 0
0456    	MAJDEV	= 0
0457    	MINDEV	= 0
         
        C
        C	Assume the error log entry about to be read is okay.
        C		(.FALSE.  is okay)
        C
0458    	L_QUESTION = .FALSE.
         
        C
        C	Assume also that entry will not be device related.
        C
0459    	DEVICE	= .FALSE.
         
        C
        C	Update the count of records read.
        C
0460    	RECCNT	= RECCNT + 1		! EOF BOUNDARY CONDITIONS
         
         
0461    	READ(SYSLUN,511,END=90100)		! HACK=RMS$_RTB
        	1		Q,(EMB(I),I=0,(MAX(0,(MIN(EMB$K_MAX,(Q-1))))))
0462     511	FORMAT(Q,<MAX(1,Q)>A1)			! HACK=RMS$_RTB
         
         
         
        C
        C	Perform validity checks.
        C
         
         
         
        C
        C	Error log entries which are of dubious integrity are
        C	indicated by the executive routines having set the high-
        C	order bit of EMB$B_DV_ENTRY.
        C
        C	Such doubtful entries that nevertheless successfully pass

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 13  
					ERRPRT.FOR.89       

        C	the validity and consistency checking of SYE are said to
        C	be questionable.  On the other hand, such doubtful entries
        C	that fail the validity and consistency checks are said to
        C	be corrupt.    Note, for the sake of completeness, that 
        C	entries which fail the checks (but were considered properly
        C	logged by the executive routines that logged them) are
        C	referred to as unknown entries.
        C
        C	Questionable entries are indicated in the SYE printed output
        C	by
        C		a.)  if OPTION='C', question marks (rather than blanks)
        C		     separate the device register values.
        C		b.)  if OPTION='B' or 'S' or 'U', question marks
        C		     (rather than astericks) flag the beginning 
        C		     of each entry.
        C		c.)  if the number of questionable entries is non-
        C		     zero, the count of questionable entries is 
        C		     printed.
        C
0463    	I	= EMB$B_DV_ENTRY
         
0464    	IF(IAND(I,'80'X) .EQ. '80'X)
        	1	THEN
0465    			EMB$B_DV_ENTRY = EMB$B_DV_ENTRY .AND. '7F'X
0466    			L_QUESTION = .TRUE.
0467    			W_QUESTION = W_QUESTION + 1
0468    	ENDIF
         
0469    	IF (IAND (FLAGS(EMB$B_DV_ENTRY),SYE$M_ENTTYPVLD) .NE. SYE$M_ENTTYPVLD)
        	1			GO TO 90000
         
0470    	IF((EMB$B_DV_ENTRY .EQ. '01'X)
        	1		.OR.
        	2  (EMB$B_DV_ENTRY .EQ. '60'X))
        	3	THEN
0471    			DEVICE = .TRUE.
         
0472    			IF(IAND(FLAGS(EMB$B_DV_CLASS),SYE$M_DEVCLS)
        	1			.NE. SYE$M_DEVCLS)  GO TO 90000
         
0473    			IF(IAND(FLAGS(EMB$B_DV_TYPE),SYE$M_DEVTYP)
        	1			.NE. SYE$M_DEVTYP)  GO TO 90000
         
0474    	ENDIF
        C
        C	Perform filtering process.
        C
         
        C
        C	Time check beginning period.
        C
0475    	IF(TIMCMP(EMB$_DV_ERTIME,SELTIMELO))  500,570,570
         
0476     570	CONTINUE
         
        C

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 14  
					ERRPRT.FOR.89       

        C	Time check ending period.
        C
0477    	IF(TIMCMP(EMB$_DV_ERTIME,SELTIMEHI))  580,580,500
         
0478     580	CONTINUE
         
        C
        C	Break entry code into major and minor fields.
        C
0479    	MAJENT	= EMB$B_DV_ENTRY / 32
0480    	MINENT	= EMB$B_DV_ENTRY - (MAJENT * 32)
         
0481    	IF(SELDEVLEN .GT. 0)		! IF GT, DEVICE SELECTION SPECIFIED
        	1   THEN
0482    		MATCH = .FALSE.
         
0483    		IF(DEVICE)
        	1	   THEN
0484    			IF(SELDEVLEN .LE. EMB$T_DV_NAME(0))
        	1		   THEN
         
0485    				DO 585, I=1,SELDEVLEN
0486    			    	   IF(SELDEVNAM(I) .NE. EMB$T_DV_NAME(I)) 
        	1						GO TO 595
0487     585				CONTINUE
         
0488    				IF(W_UNIT .GE. 0	! IF GE, UNIT SELECTION 
        	1				.AND.
        	2			   W_UNIT .NE. EMB$W_DV_UNIT)  GO TO 595
         
0489    				MATCH = .TRUE.
         
0490    			ENDIF
         
0491    			GO TO 595
         
0492    		ENDIF
         
         
0493    		GO TO(			!
        	1		590,		!  0  -  Hardware errors other than dev.
        	2		591,		!  1  -  System information.
        	3		592,		!  2  -  Configuration changes.
        	4		591)		!  3  -  User bugcheck.
        	5		     MAJENT+1	!
0494    		GO TO 595		!  Catch all others.
         
0495     590		CONTINUE
         
0496    		IF((SELDEVNAM(1) .EQ. 'C')
        	1		.AND.
        	2	   (SELDEVNAM(2) .EQ. 'P'))  MATCH = .TRUE.
         
0497    		GO TO 595
         
         

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 15  
					ERRPRT.FOR.89       

0498     591		CONTINUE
         
0499    		IF((SELDEVNAM(1) .EQ. 'S')
        	1		.AND.
        	2	   (SELDEVNAM(2) .EQ. 'Y')
        	3		.AND.
        	4          (MINENT .NE.  6)) MATCH = .TRUE.
         
0500    		GO TO 595
         
         
0501     592		CONTINUE
         
0502    		IF((SELDEVNAM(1) .EQ. 'C')
        	1		.AND.
        	2	   (SELDEVNAM(2) .EQ. 'O'))  
        	3	   THEN
0503    			MATCH = .TRUE.
0504    			GO TO 595
0505    		ENDIF
         
0506    		IF(SELDEVLEN .LE. EMB$B_VM_NAMLNG)
        	1	   THEN
0507    			DO 593, I=1,SELDEVLEN
0508    			   IF(SELDEVNAM(I) .NE. EMB$T_VM_NAMTXT(I))  GO TO 595
0509     593			CONTINUE
         
0510    			IF((W_UNIT .GE. 0)	! If GE, unit selection spec'f'd
        	1			.AND.
        	2		(W_UNIT .NE. EMB$W_VM_UNIT))  GO TO 595
         
0511    			MATCH = .TRUE.
0512    		ENDIF
         
0513    		GO TO 595
         
         
0514     595		CONTINUE
         
        					!		MATCH
        					!	true		false
        					!	----		-----
        					!    t:
        					!    r:
        					! N  u: reject.		accept.
        					! E  e:
0515    		IF(MATCH .EQ. NEGATE)	! G
        	1		GO TO 500	! A
        					! T  f:
        					! E  a:
        					!    l:  accept.	reject.
        					!    s:
        					!    e:
        					!
         
0516    	ENDIF

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 16  
					ERRPRT.FOR.89       

         
        C
        C	All specified criteria met;  record will be processed.
        C
         
        C
        C	Update detailed summary.
        C
0517    	RECPROC	= RECPROC + 1
         
        C
        C	Establish time of earliest entry.
        C
0518    	IF(TIMCMP(EMB$_DV_ERTIME,ERTIMELO))  620,630,630
         
0519     620	ERTIMELO(0) = EMB$_DV_ERTIME(0)
0520    	ERTIMELO(1) = EMB$_DV_ERTIME(1)
         
0521     630	CONTINUE
         
        C
        C	Establish time of most recently occurring entry.
        C
0522    	IF(TIMCMP(EMB$_DV_ERTIME,ERTIMEHI))  660,660,650
         
         
0523     650	ERTIMEHI(0) = EMB$_DV_ERTIME(0)
0524    	ERTIMEHI(1) = EMB$_DV_ERTIME(1)
         
0525     660	CONTINUE
         
        C
        C	Update hour-of-day histogram data.
        C
0526    	IF((IAND(FLAGS(EMB$B_DV_ENTRY),SYE$M_HISTO) .EQ. SYE$M_HISTO)
        	1			.AND.
        	2	SYS$NUMTIM(TIMBUF(0),EMB$Q_DV_TIME))
        	3	THEN
0527    			HISTO(TIMBUF(3)) = HISTO(TIMBUF(3)) + 1
0528    	ENDIF
         
         
        C
        C	Update major entry summaries.
        C
0529    	IF(MAJENT .GT. 0)
        	1	THEN
0530    			SUMMARY(MAJENT) = SUMMARY(MAJENT) + 1
0531    		ELSE
0532    			SUMMARY(1-MINENT)=SUMMARY(1-MINENT) + 1
0533    	ENDIF
         
0534    	IF(DEVICE)
        	1   THEN
        C
        C	   Update device name summaries.

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 17  
					ERRPRT.FOR.89       

        C
         
         
0535    	   I	= DEVCHK(EMB$T_DV_NAME(0))
         
0536    	   J	= MOD(EMB$W_DV_UNIT,8)
         
0537    	   K	= IAND(IOSB(0),'01'X)
         
0538    	   DEVSUM(I,J,K) = DEVSUM(I,J,K) + 1
         
0539    	ENDIF
         
0540    	IF(OPTION .EQ. 'R')  GO TO 500
         
         
        C
        C	CASE on major entry type.
        C
0541    	GO TO (				!
        	1	1000,			! 00 - HARDWARE ERRORS
        	2	2000,			! 01 - SYSTEM
        	3	3000,			! 02 - CONFIGURATION CHANGES
        	4	4000,			! 03 - VECTOR AREA PROBLEMS
        	5	5000)			! 04 - SOFTWARE
        	6		MAJENT+1
0542    	GO TO	90000			! CATCH INVALID ENTRIES
         
         
        C
        C	HARDWARE ERRORS
        C
0543     1000	CONTINUE
         
0544    	GO TO (				!
        	1	1001,			! 001 - DEVICE ERROR
        	2	1002,			! 002 - MACHINE CHECK
        	3	90000,			! 003 - MEMORY MANAGEMENT ERROR
        	4	1004,			! 004 - SBI FAULT
        	5	1005,			! 005 - SBI ALERT
        	6	1006,			! 006 - SOFT ECC ERROR
        	7	1007,			! 007 - ASYCHRONOUS WRITE ERROR
        	8	1008)			! 008 - HARD ECC ERROR
        	9		MINENT		!
0545    	GO TO	90000			! CATCH INVALID ENTRIES
         
0546     1001	CONTINUE			! HARDWARE DEVICE ERRORS
         
0547    	MAJDEV	= EMB$B_DV_CLASS / 32
0548    	MINDEV	= EMB$B_DV_CLASS - (MAJDEV * 32)
         
0549    	GO TO (				!
        	1	1010,			! 0 - MASS STORAGE
        	2	1011,			! 1 - COMMUNICATIONS
        	3	1012)			! 2 - TERMINALS, UNIT RECORD
        	4		MAJDEV+1	!

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 18  
					ERRPRT.FOR.89       

0550    	GO TO 90000
         
0551     1002	CONTINUE			! HARDWARE MACHINE CHECK ERROR
         
0552    	IF (OPTION .NE. 'C')
        	1	THEN
0553    			CALL HEADER (LSTLUN,'Machine Check Error')
0554    			IF(OPTION .EQ. 'S')  CALL MACCHK(LSTLUN)
0555    			IF(OPTION .EQ. 'B') CALL B_MACCHK(LSTLUN)
0556    		ELSE
0557    			CALL C_MACCHK(LSTLUN)
0558    	ENDIF
0559    	GO TO 500
         
0560     1004	CONTINUE			! HARDWARE SBI FAULT ERROR
         
0561    	IF (OPTION .NE. 'C')
        	1	THEN
0562    			CALL HEADER (LSTLUN,'SBI fault error')
0563    			IF(OPTION .EQ. 'S')  CALL SBI_FAULT (LSTLUN)
0564    			IF(OPTION  .EQ. 'B') CALL B_SBI_FAULT(LSTLUN)
0565    		ELSE
0566    			CALL C_SBI_FAULT(LSTLUN)
0567    	ENDIF
         
0568    	GO TO 500
         
         
0569     1005	CONTINUE			!SBI ALERT
         
0570    	IF (OPTION .NE. 'C')
        	1	THEN
0571    			CALL HEADER (LSTLUN,'SBI Alert error')
0572    			IF(OPTION .EQ. 'S')  CALL ECC_ALERT (LSTLUN)
0573    			IF(OPTION .EQ. 'B') CALL B_ECC_ALERT(LSTLUN)
0574    		ELSE
0575    			CALL C_ECC_ALERT(LSTLUN)
0576    	ENDIF
         
0577    	GO TO 500
         
0578     1006	CONTINUE			!CORRECTED READ DATA ERROR
         
0579    	IF (OPTION .NE. 'C')
        	1	THEN
0580    			CALL HEADER (LSTLUN,'Corrected Read Data error')
0581    			IF(OPTION .EQ. 'S')  CALL ECC_ALERT (LSTLUN)
0582    			IF(OPTION .EQ. 'B') CALL B_ECC_ALERT(LSTLUN)
0583    		ELSE
0584    			CALL C_ECC_ALERT(LSTLUN)
0585    	ENDIF
         
0586    	GO TO 500
         
0587     1007	CONTINUE			!ASYNCHRONOUS WRITE ERROR
         

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 19  
					ERRPRT.FOR.89       

0588    	IF (OPTION .NE. 'C')
        	1	THEN
0589    			CALL HEADER (LSTLUN,'Asynchronous Write error')
0590    			IF(OPTION .EQ. 'S')  CALL SBI_FAULT(LSTLUN)
0591    			IF(OPTION .EQ. 'B') CALL B_SBI_FAULT(LSTLUN)
0592    		ELSE
0593    			CALL C_SBI_FAULT(LSTLUN)
0594    	ENDIF
         
0595    	GO TO 500
         
0596     1008	CONTINUE			!HARD ECC ERROR
         
0597    	IF (OPTION .NE. 'C')
        	1	THEN
0598    			CALL HEADER (LSTLUN,'Read Data Substitute')
0599    			IF(OPTION .EQ. 'S')  CALL ECC_ALERT(LSTLUN)
0600    			IF(OPTION .EQ. 'B') CALL B_ECC_ALERT(LSTLUN)
0601    		ELSE
0602    			CALL C_ECC_ALERT(LSTLUN)
0603    	ENDIF
         
0604    	GO TO 500
         
         
0605     1010	CONTINUE			! DEVICE ERROR  -  MASS STORAGE
         
         
0606    	GO TO (				!
        	1	1100,			! 001 - DISKS
        	2	1200)			! 002 - TAPES
        	3		MINDEV
         
        	
0607     1011	CONTINUE			! COMMUNICATIONS (I. E., DMC11)
0608     1012	CONTINUE			! UNIT RECORD (I. E., CD11)
         
0609    	GO TO 90000			! CATCH INVALID ENTRIES FOR
        					! 	1) MASS STORAGE OTHER THAN
        					!		DISKS AND TAPES
        					!	2) COMMUNICATIONS
        					! 	3) UNIT RECORD
        					!
         
         
0610     1100	CONTINUE			! DISKS
         
         
0611    	GO TO (				!
        	1	1110,			!  1  -  RK06
        	2	1110,			!  2  -  RK07
        	3	1150,			!  3  -  RP04
        	4	1150,			!  4  -  RP05
        	5	1150,			!  5  -  RP06
        	6	1170)			!  6  -  RM03
        	7				!  7  -  RP07

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 20  
					ERRPRT.FOR.89       

        	8				!  8  -  RP07HT
        	9		EMB$B_DV_TYPE	!
         
0612    	IF(
        	2	EMB$T_DV_NAME(1) .EQ. 'D'	! ??? TYPE = 0 FOR RK06
        	3		.AND.			! ??? TYPE = 0 FOR RK06
        	4	EMB$T_DV_NAME(2) .EQ. 'M')	! ??? TYPE = 0 FOR RK06
        	5			GO TO 1110	! ??? TYPE = 0 FOR RK06
         
0613    	IF(
        	2	EMB$T_DV_NAME(1) .EQ. 'D'	!
        	3		.AND.			!
        	4	EMB$T_DV_NAME(2) .EQ. 'B')	!
        	5			GO TO 1150	! ??? TYPE = 0 FOR RP05
         
         
0614    	IF(					!
        	1	EMB$T_DV_NAME(1) .EQ. 'D'	!
        	2		.AND.			!
        	3	EMB$T_DV_NAME(2) .EQ. 'R')	!
        	4			GO TO 1170	!
         
         
0615    	GO TO 90000			! CATCH INVALID ENTRIES
         
0616     1110	CONTINUE			! RK06 HARDWARE ERRORS
         
0617    	IF(OPTION .EQ. 'B')  
        	1	THEN
0618    			CALL DVHEAD(LSTLUN,'RK06/7',0)
0619    			CALL B_RK06(LSTLUN,EMB$L_DV_REGSAV)
0620    	ENDIF
         
0621    	IF(OPTION .EQ. 'C')  CALL C_RK06(LSTLUN,EMB$L_DV_REGSAV)
         
         
0622    	IF(OPTION .EQ. 'S')
        	1	THEN
0623    			CALL DVHEAD(LSTLUN,'RK06/7',1)
0624    			CALL RK06(LSTLUN,EMB$L_DV_REGSAV)
0625    			GO TO 1690
0626    	ENDIF
         
0627    	GO TO 500
         
0628     1150	CONTINUE			! RP04/5/6 HARDWARE ERRORS
         
0629    	IF(OPTION .EQ. 'B')
        	1	THEN
0630    			CALL DVHEAD(LSTLUN,'RP04/5/6',0)
0631    			CALL B_RP05(LSTLUN,EMB$L_DV_REGSAV)
0632    	ENDIF
         
0633    	IF(OPTION .EQ. 'C')  CALL C_RP05(LSTLUN,EMB$L_DV_REGSAV)
         
         

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 21  
					ERRPRT.FOR.89       

         
0634    	IF(OPTION .EQ. 'S')
        	1	THEN
0635    			CALL DVHEAD(LSTLUN,'RP04/5/6',1)
0636    			CALL RP05(LSTLUN,EMB$L_DV_REGSAV)
0637    			GO TO 1690
0638    	ENDIF
         
0639    	GO TO 500
         
0640     1170	CONTINUE			! RM03 HARDWARE ERRORS
         
0641    	IF(OPTION .EQ. 'B')  
        	1	THEN
0642    			CALL DVHEAD(LSTLUN,'RM03',0)
0643    			CALL B_RM03(LSTLUN,EMB$L_DV_REGSAV)
0644    	ENDIF
         
0645    	IF(OPTION .EQ. 'C')  CALL C_RM03(LSTLUN,EMB$L_DV_REGSAV)
         
0646    	IF(OPTION .EQ. 'S')
        	1	THEN
0647    			CALL DVHEAD(LSTLUN,'RM03',1)
0648    			CALL RM03(LSTLUN,EMB$L_DV_REGSAV)
0649    			GO TO 1690
0650    	ENDIF
         
0651    	GO TO 500
         
0652     1200	CONTINUE			! TAPES
         
0653    	GO TO (				!
        	1	1210,			!  1  -  TE16
        	2	1220,			!  2  -  TU45
        	3	90000)			!  3  -  TU77
        	4		EMB$B_DV_TYPE	!
         
        C	GO TO 90000			! CATCH ALL.
         
0654     1210	CONTINUE			! TE16 HARDWARE ERROR
         
0655    	IF(OPTION .EQ. 'B')  
        	1	THEN
0656    			CALL DVHEAD (LSTLUN,'TE16',0)
0657    			CALL B_TE16(LSTLUN,EMB$L_DV_REGSAV)
0658    	ENDIF
         
0659    	IF(OPTION .EQ. 'C')  CALL C_TE16(LSTLUN,EMB$L_DV_REGSAV)
         
         
         
0660    	IF(OPTION .EQ. 'S')
        	1	THEN
0661    			CALL DVHEAD(LSTLUN,'TE16',1)
0662    			CALL TE16(LSTLUN,EMB$L_DV_REGSAV)
0663    			GO TO 1690

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 22  
					ERRPRT.FOR.89       

0664    	ENDIF
         
0665    	GO TO 500
         
0666    1220	CONTINUE
         
0667    	IF (OPTION .EQ. 'B')
        	1	THEN
0668    			CALL DVHEAD (LSTLUN,'TU45',0)
0669    			CALL B_TE16 (LSTLUN,EMB$L_DV_REGSAV)
0670    	ENDIF
0671    	IF (OPTION .EQ.'C')
        	1	CALL C_TE16(LSTLUN,EMB$L_DV_REGSAV)
         
0672    	IF (OPTION .EQ. 'S')
        	1	THEN
0673    			CALL DVHEAD (LSTLUN,'TU45',1)
0674    			CALL TE16(LSTLUN,EMB$L_DV_REGSAV)
0675    			GO TO 1690
0676    	ENDIF
0677    	GO TO 500
0678     1690	CONTINUE			! COMMON EXIT FOR DEVICE ERRORS
         
0679    	CALL DVTAIL(LSTLUN)
0680    	GO TO 500
         
0681     2000	CONTINUE			! SYSTEM ERRORS
         
0682    	IF (OPTION .NE. 'C')
        	1	THEN
0683    			CALL HEADER (LSTLUN,SYSTEM ERROR(MINENT))
         
0684    			GO TO (			!
        	1		2100,			! 0 - SYSTEM START UP
        	2		2200,			! 1 - ERROR LOG TERMINATED
        	3		2300,			! 2 - SYSTEM POWER FAIL
        	4		2400,			! 3 - ERROR.SYS CREATED
        	5		2100,			! 4 - WARM START
        	6		2500,			! 5 - CRASH RE-START
        	7		2400,			! 6 - PERIODIC TIMESTAMP
        	8		2600,			! 7 - SYSTEM SERVICE MESSAGE
        	9		2700,			! 8 - SYSTEM BUGCHECK
        	1		2600,			! 9 - OPERATOR MESSAGE
        	2		2600)			! 10 - NETWORK MESSAGE
        	3			MINENT+1	!
0685    		ELSE
0686    			GO TO 90000
0687    	ENDIF
        		
         
0688     2100	CONTINUE				!WARM AND COLD START MESSAGES
         
0689    	CALL LINCHK (LSTLUN,2)
0690    	WRITE (LSTLUN,2111) EMB$L_SU_DAYTIM
0691     2111	FORMAT('0Time of day clock:',T23,Z8)
         

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 23  
					ERRPRT.FOR.89       

0692    	GO TO 500
         
0693     2200	CONTINUE				!ERROR LOG TERMINATED-NYI 
0694     2300	CONTINUE
0695     2400	CONTINUE				!ERRLOG.SYS FILE CREATED
        						!PERIODIC TIME STAMP
0696    	GO TO 500
         
0697     2500	CONTINUE				!CRASH RESTART
         
0698    	IF(OPTION .EQ. 'S')  CALL	CRASH_RESTART(LSTLUN)
         
0699    	GO TO 500
         
         
0700     2600	CONTINUE				!SYSTEM SERVICE MESSAGE
        						!OPERATOR MESSAGE
        						!NETWORK MESSAGE
         
0701    	SIZE=EMB$W_SS_MSGSZ/62
0702    	IF (EMB$W_SS_MSGSZ-(SIZE*62) .NE. 0)
        	1	SIZE=SIZE+1
0703    	CALL LINCHK(LSTLUN, SIZE+2)
0704    	WRITE (LSTLUN,2611)
0705     2611	FORMAT('0Message text:')
         
0706    	IF (SIZE .NE. 0)
        	1	THEN
0707    			WRITE (LSTLUN,2621) (MESSAGE(I),I=1,EMB$W_SS_MSGSZ)
0708     2621			FORMAT (' ',T10,62A1)
0709    		ELSE
0710    			WRITE (LSTLUN,2631)
0711     2631			FORMAT (' ',T10,'[none]')
0712    	ENDIF
         
0713    	GO TO 500
         
0714     2700	CONTINUE				!SYSTEM  BUGCHECK
         
0715    	IF(OPTION .EQ. 'S')  CALL BUGCHECK (LSTLUN)
0716    	GO TO 500
         
0717     3000	CONTINUE			! CONFIGURATION CHANGES
         
0718    	GO TO (				!
        	1	3100,			! 0 - VOLUME MOUNT
        	2	3300,			! 1 - VOLUME DISMOUNT
        	3	3500,			! 2 - HANDLER LOAD
        	4	3700)			! 3 - HANDLER UNLOAD
        	5		MINENT+1	!
0719    	GO TO 90000			! CATCH INVALID ENTRIES
         
0720     3100	CONTINUE			! VOLUME MOUNT
         
0721    	INDEX	= DEVCHK(EMB$B_VM_NAMLNG)
         

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 24  
					ERRPRT.FOR.89       

0722    	DO 3150, I=1,12
0723    	    VOLNAM(INDEX,EMB$W_VM_UNIT,I) = EMB$T_VM_LABEL(I)
0724     3150	CONTINUE
         
0725    	L_OLD_OPCNT(INDEX,EMB$W_VM_UNIT) = EMB$L_VM_OPRCNT
0726    	L_OLD_ERRCNT(INDEX,EMB$W_VM_UNIT) = EMB$L_VM_ERRCNT
         
         
0727    	IF(OPTION .NE. 'C')
        	1  THEN
0728    		CALL HEADER(LSTLUN,'Volume mounted')
         
0729    		CALL LINCHK(LSTLUN,2)
0730    		WRITE(LSTLUN,3171)  (EMB$T_VM_LABEL(L),L=1,12),
        	1		(EMB$T_VM_NAMTXT(L),L=1,EMB$B_VM_NAMLNG),
        	2		(EMB$W_VM_UNIT)
0731     3171		FORMAT('0',12A1,' on ',<EMB$B_VM_NAMLNG>A1,I1,':')
0732    	ENDIF
         
         
0733    	GO TO 500
         
         
0734     3300	CONTINUE			! VOLUME DISMOUNT
         
0735    	INDEX	= DEVCHK(EMB$B_VM_NAMLNG)
         
0736    	I	= EMB$L_VM_OPRCNT - L_OLD_OPCNT(INDEX,EMB$W_VM_UNIT)
0737    	J	= EMB$L_VM_ERRCNT - L_OLD_ERRCNT(INDEX,EMB$W_VM_UNIT)
         
0738    	L_OLD_OPCNT(INDEX,EMB$W_VM_UNIT) = 0
0739    	L_OLD_ERRCNT(INDEX,EMB$W_VM_UNIT) = 0
         
0740    	IF(OPTION .NE. 'C')
        	1  THEN
0741    		CALL HEADER(LSTLUN,'Volume dismounted')
         
0742    		CALL LINCHK(LSTLUN,2)
0743    		WRITE(LSTLUN,3171)  (EMB$T_VM_LABEL(L),L=1,12),
        	1		(EMB$T_VM_NAMTXT(L),L=1,EMB$B_VM_NAMLNG),
        	2		EMB$W_VM_UNIT
         
0744    		IF(VOLNAM(INDEX,EMB$W_VM_UNIT,1) .EQ. 0)
        	1	   THEN
0745    			CALL LINCHK(LSTLUN,1)
0746    			WRITE(LSTLUN,90151)
        	1	'	???no corresponding MOUNT entry previously processed???'
         
0747    			I = 0
0748    			J = 0
0749    		ENDIF
         
         
0750    		CALL LINCHK(LSTLUN,4)
0751    		WRITE(LSTLUN,3371)  EMB$L_VM_OPRCNT,I,
        	1			    EMB$L_VM_ERRCNT,J

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 25  
					ERRPRT.FOR.89       

0752     3371		FORMAT('0Statistics:',T48,'unit',T60,'volume'/
        	1		' ',T10,'operations:',T40,I11,'.',T54,I11,'.'/
        	2		' ',T10,'errors:',T40,I11,'.',T54,I11,'.')
         
         
0753    	ENDIF
         
0754    	DO 3380, I=1,12
0755    	    VOLNAM(INDEX,EMB$W_VM_UNIT,I) = 0
0756     3380	CONTINUE
         
0757    	GO TO 500
         
         
0758     3500	CONTINUE			! HANDLER LOAD
         
0759     3700	CONTINUE			! HANDLER UNLOAD
         
0760     4000	CONTINUE			! VECTOR AREA PROBLEMS
         
        C
        C	At the present time, only device interrupt timeouts are valid for this
        C	type of error.  The sole difference between device timeout and device
        C	error-bit-set is the ascii string in the outputted SYE header.  As this
        C	difference is special-cased in subroutine DVHEAD, device interrupt 
        C	timeout is merged into the device hardware error flow.
        C	Also here falls USER BUGCHECK!
        C
0761    	IF ((MINENT .EQ. 16) .AND. (OPTION .EQ. 'S'))
        	1	THEN
0762    			CALL HEADER (LSTLUN,'User Bugcheck')
0763    			CALL BUGCHECK (LSTLUN)
0764    			GO TO 500
0765    	ENDIF
0766    	GO TO 1001			! JOIN COMMON CODE
         
0767     5000	CONTINUE
0768     6000	CONTINUE
         
0769    90000	CONTINUE			! CATCH ALL LABEL
         
         
        C
        C	There are three types  of bad records:
        C		a.) Questionable entries are entries of dubious 
        C		    integrity (flagged by the executive routines
        C		    by setting the sign bit of EMB$B_DV_ENTRY)
        C		    which nevertheless passed the consistency 
        C		    checks of SYE.
        C		b.) Corrupted entries are entries of dubious 
        C		    integrity (flagged by the executive routines
        C		    by setting the sign bit of EMB$B_DV_ENTRY)
        C		    which failed the consistency checks of SYE.
        C		c.) Unknown entries are entries which failed the
        C		    validity and consistency checks of SYE
         

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 26  
					ERRPRT.FOR.89       

         
         
         
0770    	IF(L_QUESTION)
        	1	THEN
0771    			W_QUESTION = W_QUESTION - 1
0772    			W_CORRUPTED = W_CORRUPTED + 1
0773    		ELSE
0774    			W_UNKNOWN = W_UNKNOWN + 1
0775    	ENDIF
         
         
        C
        C	Normally,  error  log  entries that fail to pass the various validity
        C	and consistency checks within SYE are discarded.    However,  should
        C	the user of SYE specify option = 'U', these unknown/unsupported/illegal
        C	entries are dumped.
0776    	IF(UNKNOWN)
        	1  THEN
         
0777    		IF(DEVICE)
        	1	   THEN
0778    			CALL DVHEAD(LSTLUN,'Unknown/unsupported',1)
0779    			CALL DVTAIL(LSTLUN)
0780    		   ELSE
0781    			CALL HEADER(LSTLUN,'Unknown/unsupported Entry')
0782    		ENDIF
         
0783    		CALL DUMPREG(LSTLUN,((Q+3)/4),EMB(0))
0784    	ENDIF
         
0785    	GO TO 500
         
0786    90100	CONTINUE			! END OF FILE ON SYSLUN
         
0787    	CLOSE (UNIT=SYSLUN)
         
0788    	CALL FRCTOF(LSTLUN)
         
0789    	IF(SUMMARY(0) .NE. 0)			! SUMMARY(0)==DEVICE ERRORS
        	1 THEN
0790    	  CALL LINCHK(LSTLUN,1)
0791    	  WRITE(LSTLUN,90151)  'Device Error Roll-up:'
0792    	  DO 90150, I=1,DEVSUMCNT
0793    	    DO 90140, J=7,0,-1
0794    		DO 90130, K=0,1
0795    		    IF(DEVSUM(I,J,K) .NE. 0)
        	1		THEN
0796    			    CALL LINCHK(LSTLUN,7)
0797    			    WRITE(LSTLUN,90153)  (NAMDEVSUM(I,L),
        	1					L=1,NAMDEVSUM(I,0)),
        	2					(L,L=0,J)
0798    			    WRITE(LSTLUN,90155)
0799    			    WRITE(LSTLUN,90155) 'hard',(DEVSUM(I,L,0),L=0,J)
0800    			    WRITE(LSTLUN,90155) 'soft',(DEVSUM(I,L,1),L=0,J)
0801    			    WRITE(LSTLUN,90151)  ' '

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 27  
					ERRPRT.FOR.89       

0802    			    WRITE(LSTLUN,90151)  ' '
0803    			    GO TO 90150
0804    		    ENDIF
         
0805    90130		CONTINUE
         
0806    90140	    CONTINUE
         
0807    90150	  CONTINUE
         
0808    	ENDIF
         
0809    90151	FORMAT(' ',A)
0810    90153	FORMAT(/'0',<NAMDEVSUM(I,0)>A1,T9,8I8/)
0811    90155	FORMAT(' ',T4,A,T10,8(I7,'.'))
         
         
0812    	DO 90210, I=0,23
         
0813    	   IF(HISTO(I) .NE. 0)
        	1	THEN
0814    			J = I
0815    			GO TO 90220
0816    	   ENDIF
         
0817    90210	CONTINUE
         
0818    	GO TO 90300			! NO HISTO TO PROCESS
         
0819    90220	CONTINUE
         
0820    	DO 90230, I=23,J,-1
         
0821    	   IF(HISTO(I) .NE. 0)
        	1	THEN
0822    			K = I
0823    			GO TO 90250
0824    	   ENDIF
         
0825    90230	CONTINUE
         
0826    90250	CONTINUE
         
0827    	CALL LINCHK(LSTLUN,2 + (K-J+1) )
         
0828    	WRITE(LSTLUN,90151)  'Hour-of-day error histogram:'
0829    	WRITE(LSTLUN,90151)  ' '
         
         
        C
        C	20*1
        C	16*5
        C	10*10
        C	 5*100
        C
0830    	DO 90260, I=J,K

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 28  
					ERRPRT.FOR.89       

         
0831    	   L = MAX(800,HISTO(I))
0832    	   N = MIN(50,HISTO(I))
         
0833    	   IF(N .LE. 0)
        	1	THEN
0834    			WRITE(LSTLUN,90257)  I,HISTO(I)
0835    		ELSE
0836    			WRITE(LSTLUN,90257)  I,HISTO(I),('*',L=1,N)
0837    	   ENDIF
0838    90257	   FORMAT(' ',T10,I2,':00',I7,'. ',:<N>A1)
         
0839    90260	CONTINUE
         
         
0840    90300	CONTINUE
         
0841    	CALL LINCHK(LSTLUN,19)
0842    	WRITE(LSTLUN,90311)  (SUMMARY(I),I=-7,-3),(SUMMARY(I),I=-1,4)
0843    90311	FORMAT(//////'0Summary Totals:'/
        	1	' ',T10,'Hard ECC errors:',T40,I7,'.'/
        	2	' ',T10,'Asynchronous write errors:',T40,I7,'.'/
        	3	' ',T10,'Soft ECC errors:',T40,I7,'.'/
        	4	' ',T10,'SBI alert errors:',T40,I7,'.'/
        	5	' ',T10,'Bus errors:',T40,I7,'.'/
        	6	' ',T10,'Machine checks:',T40,I7,'.'/
        	7	' ',T10,'Device errors:',T40,I7,'.'/
        	8	' ',T10,'System information:',T40,I7,'.'/
        	9	' ',T10,'Config changes:',T40,I7,'.'/
        	1	' ',T10,'Vector area prob:',T40,I7,'.'/
        	2	' ',T10,'Software:',T40,I7,'.')
         
0844    	CALL LINCHK(LSTLUN,3)
0845    	WRITE(LSTLUN,90321)  RECPROC,RECCNT-1
0846    90321	FORMAT('0',T10,'Records processed:',T40,I7,'.'/
        	1	' ',T10,'Records read:',T40,I7,'.')
         
0847    	IF(W_QUESTION .NE. 0)
        	1   THEN
0848    		CALL LINCHK(LSTLUN,2)
0849    		WRITE(LSTLUN,90326) W_QUESTION
0850    90326		FORMAT('0',T10,'Questionable entries:',T40,I7,'.')
0851    	ENDIF
         
0852    	IF(W_UNKNOWN .NE. 0)
        	1   THEN
0853    		CALL LINCHK(LSTLUN,2)
0854    		WRITE(LSTLUN,90329)  W_UNKNOWN
0855    90329	FORMAT('0',T10,'Unknown/illegal entries:',T40,I7,'.')
0856    	ENDIF
          
0857    	IF(W_CORRUPTED .NE. 0)
        	1   THEN
0858    		CALL LINCHK(LSTLUN,2)
0859    		WRITE(LSTLUN,90330)  W_CORRUPTED
0860    90330		FORMAT('0',T10,'Corrupted entries:',T40,I7,'.')

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 29  
					ERRPRT.FOR.89       

0861    	ENDIF
         
         
         
0862    	IF(RECPROC .NE. 0)
        	1   THEN
0863    		CALL LINCHK(LSTLUN,3)
0864    		WRITE(LSTLUN,90151)  ' '
0865    		CALL	SYS$ASCTIM(,%DESCR(TIME),ERTIMELO(0),%VAL(0))
         
0866    		WRITE(LSTLUN,90331)  'earliest',TIME
         
0867    		CALL	SYS$ASCTIM(,%DESCR(TIME),ERTIMEHI(0),%VAL(0))
         
0868    		WRITE(LSTLUN,90331)  'last',TIME
0869    90331		FORMAT(' ',T10,'Date of ',A,' entry',T40,A)
0870    	ENDIF
         
0871    	CALL TIMRE
         
0872    	STOP 'Successful completion'
         
0873    	END

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 30  
					ERRPRT.FOR.89       

		.TITLE	ERRPRT
		.IDENT	01

    0000	.PSECT	EMB
    0000  EMB:

    0000	.PSECT	SYECOM
    0000  L_QUESTION:
    0004  TTY:
    0008  DEVSUMCNT:
    000A  RECCNT:
    000C  NAMDEVSUM:
    0160  VOLNAM:

    0000	.PSECT	$LOCAL
    0000  SELDEVNAM:
    0001  STRING:

    0004	.PSECT	EMB
    0004  EMB$W_HD_ENTRY:
    0004  EMB$B_HD_ENTRY:
    0004  EMB$W_DV_ENTRY:
    0004  EMB$B_DV_ENTRY:
    0006  EMB$_DV_ERTIME:
    0006  EMB$Q_DV_TIME:
    0012  EMB$Q_DV_IOSB:
    0012  IOSB:
    0004  EMB$W_TS_ENTRY:
    0004  EMB$B_TS_ENTRY:
    0004  EMB$W_SS_ENTRY:
    0004  EMB$B_SS_ENTRY:
    0012  EMB$B_SS_MSGTXT:
    0012  MESSAGE:
    0004  EMB$W_VM_ENTRY:
    0004  EMB$B_VM_ENTRY:
    0010  EMB$L_SU_DAYTIM:
    000E  EMB$W_SU_ERRSEQ:
    0006  EMB$Q_SU_TIME:
    0004  EMB$W_SU_ENTRY:
    0032  EMB$T_VM_LABEL:
    0030  EMB$W_VM_NUMSET:
    002E  EMB$W_VM_VOLNUM:
    001F  EMB$T_VM_NAMTXT:
    001E  EMB$B_VM_NAMLNG:
    001C  EMB$W_VM_UNIT:
    0018  EMB$L_VM_OPRCNT:
    0014  EMB$L_VM_ERRCNT:
    0010  EMB$L_VM_OWNUIC:
    000E  EMB$W_VM_ERRSEQ:
    0006  EMB$Q_VM_TIME:
    0010  EMB$W_SS_MSGSZ:
    000E  EMB$W_SS_ERRSEQ:
    0006  EMB$Q_SS_TIME:
    000E  EMB$W_TS_ERRSEQ:
    0006  EMB$Q_TS_TIME:
    004E  EMB$L_DV_REGSAV:

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 31  
					ERRPRT.FOR.89       

    003E  EMB$T_DV_NAME:
    003C  EMB$W_DV_FUNC:
    003A  EMB$B_DV_SLAVE:
    0036  EMB$L_DV_CHAR:
    0032  EMB$L_DV_OWNUIC:
    002E  EMB$L_DV_OPCNT:
    002C  EMB$W_DV_ERRCNT:
    002A  EMB$W_DV_UNIT:
    0026  EMB$L_DV_MEDIA:
    0024  EMB$W_DV_BCNT:
    0022  EMB$W_DV_BOFF:
    001E  EMB$L_DV_RQPID:
    001D  EMB$B_DV_TYPE:
    001C  EMB$B_DV_CLASS:
    001A  EMB$W_DV_DEVSTS:
    0011  EMB$B_DV_ERTMAX:
    0010  EMB$B_DV_ERTCNT:
    000E  EMB$W_DV_ERRSEQ:
    000E  EMB$W_HD_ERRSEQ:
    0006  EMB$Q_HD_TIME:
    0000  EMB$L_SID:

    0000	.PSECT	$PDATA
    0000	.LONG	^X00000001
    0004	.LONG	^X00000002
    0008	.LONG	^X00000004
    000C	.LONG	^X00000007
    0010	.LONG	^X00000008
    0014	.LONG	^X00000000
    0018	.XBYTE	53,59,45,20,78,31,2E,30
    0020	.XBYTE	5F,69,6E,70,75,74,20,66,69,6C,65,3A,09,5B,20,5B
    0030	.XBYTE	53,59,53,45,52,52,5D,45,52,52,4C,4F,47,2E,4F,4C
    0040	.XBYTE	44,20,5D,09,3F
    0045	.XBYTE	25,53,59,45,2D,57,2D,46,49,4C,4F,50,4E,45,52,52
    0055	.XBYTE	2C,20,66,69,6C,65,20,6F,70,65,6E,20,65,72,72,6F
    0065	.XBYTE	72
    0066	.XBYTE	25,53,59,45,2D,46,2D,41,42,4F,52,54,2C,6F,70,65
    0076	.XBYTE	6E,20,66,61,69,6C,75,72,65,20,61,66,74,65,72,20
    0086	.XBYTE	38,20,72,65,74,72,69,65,73
    008F	.XBYTE	25,53,59,45,20,55,4E,53,55,43,43,45,53,53,46,55
    009F	.XBYTE	4C,20,43,4F,4D,50,4C,45,54,49,4F,4E
    00AB	.XBYTE	5F,6F,75,74,70,75,74,20,66,69,6C,65,3A,09,5B,53
    00BB	.XBYTE	59,53,24,4F,55,54,50,55,54,5D,09,09,3F
    00C8	.XBYTE	5F,6F,70,74,69,6F,6E,73,3A,09,5B,52,4F,4C,4C,2D
    00D8	.XBYTE	55,50,5D,20,09,09,3F
    00DF	.XBYTE	6F,70,74,69,6F,6E,73,20,61,76,61,69,6C,61,62,6C
    00EF	.XBYTE	65,3A
    00F1	.XBYTE	09,52,20,2D,20,72,6F,6C,6C,20,75,70,2E
    00FE	.XBYTE	09,43,20,2D,20,63,72,79,70,74,69,63,2E
    010B	.XBYTE	09,42,20,2D,20,62,72,69,65,66,2E
    0116	.XBYTE	09,53,20,2D,20,73,74,61,6E,64,61,72,64
    0123	.XBYTE	09,55,20,2D,20,75,6E,6B,6E,6F,77,6E,20,65,6E,74
    0133	.XBYTE	72,79,20,64,75,6D,70,2E
    013B	.XBYTE	09,09,09,09,09,6E,6F,74,20,79,65,74,20,69,6D,70
    014B	.XBYTE	6C,65,6D,65,6E,74,65,64
    0153	.XBYTE	09,09,09,09,09,77,69,6C,6C,20,75,73,65,20,6F,70

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 32  
					ERRPRT.FOR.89       

    0163	.XBYTE	74,69,6F,6E,20,3D,20,53,54,41,4E,44,41,52,44
    0172	.XBYTE	5F,64,65,76,69,63,65,20,6E,61,6D,65,3A,09,5B,3C
    0182	.XBYTE	61,6C,6C,3E,5D,09,09,09,3F
    018B	.XBYTE	20
    018C	.XBYTE	5F,61,66,74,65,72,20,64,61,74,65,3A,09,5B,31,37
    019C	.XBYTE	2D,4E,4F,56,2D,31,38,35,38,5D,20,09,09,3F
    01AA	.XBYTE	5F,62,65,66,6F,72,65,20,64,61,74,65,3A,09,5B,33
    01BA	.XBYTE	31,2D,44,45,43,2D,39,39,39,39,5D,20,09,09,3F
    01C9	.XBYTE	4D,61,63,68,69,6E,65,20,43,68,65,63,6B,20,45,72
    01D9	.XBYTE	72,6F,72,00
    01DD	.XBYTE	53,42,49,20,66,61,75,6C,74,20,65,72,72,6F,72,00
    01ED	.XBYTE	53,42,49,20,41,6C,65,72,74,20,65,72,72,6F,72,00
    01FD	.XBYTE	43,6F,72,72,65,63,74,65,64,20,52,65,61,64,20,44
    020D	.XBYTE	61,74,61,20,65,72,72,6F,72,00
    0217	.XBYTE	41,73,79,6E,63,68,72,6F,6E,6F,75,73,20,57,72,69
    0227	.XBYTE	74,65,20,65,72,72,6F,72,00
    0230	.XBYTE	52,65,61,64,20,44,61,74,61,20,53,75,62,73,74,69
    0240	.XBYTE	74,75,74,65,00
    0245	.XBYTE	52,4B,30,36,2F,37,00
    024C	.XBYTE	52,50,30,34,2F,35,2F,36,00
    0255	.XBYTE	52,4D,30,33,00
    025A	.XBYTE	54,45,31,36,00
    025F	.XBYTE	54,55,34,35,00
    0264	.XBYTE	56,6F,6C,75,6D,65,20,6D,6F,75,6E,74,65,64,00
    0273	.XBYTE	56,6F,6C,75,6D,65,20,64,69,73,6D,6F,75,6E,74,65
    0283	.XBYTE	64,00
    0285	.XBYTE	09,3F,3F,3F,6E,6F,20,63,6F,72,72,65,73,70,6F,6E
    0295	.XBYTE	64,69,6E,67,20,4D,4F,55,4E,54,20,65,6E,74,72,79
    02A5	.XBYTE	20,70,72,65,76,69,6F,75,73,6C,79,20,70,72,6F,63
    02B5	.XBYTE	65,73,73,65,64,3F,3F,3F
    02BD	.XBYTE	55,73,65,72,20,42,75,67,63,68,65,63,6B,00
    02CB	.XBYTE	55,6E,6B,6E,6F,77,6E,2F,75,6E,73,75,70,70,6F,72
    02DB	.XBYTE	74,65,64,00
    02DF	.XBYTE	55,6E,6B,6E,6F,77,6E,2F,75,6E,73,75,70,70,6F,72
    02EF	.XBYTE	74,65,64,20,45,6E,74,72,79,00
    02F9	.LONG	^X00000003
    02FD	.XBYTE	44,65,76,69,63,65,20,45,72,72,6F,72,20,52,6F,6C
    030D	.XBYTE	6C,2D,75,70,3A
    0312	.XBYTE	68,61,72,64
    0316	.XBYTE	73,6F,66,74
    031A	.XBYTE	48,6F,75,72,2D,6F,66,2D,64,61,79,20,65,72,72,6F
    032A	.XBYTE	72,20,68,69,73,74,6F,67,72,61,6D,3A
    0336	.XBYTE	2A
    0337	.LONG	^X00000013
    033B	.XBYTE	65,61,72,6C,69,65,73,74
    0343	.XBYTE	6C,61,73,74
    0347	.XBYTE	53,75,63,63,65,73,73,66,75,6C,20,63,6F,6D,70,6C
    0357	.XBYTE	65,74,69,6F,6E

    0C10	.PSECT	$LOCAL
    0C10	.LONG	^X010E0010
    0C14	.ADDR	STRING
    0C18	.LONG	^X010E001E
    0C1C	.ADDR	INNAME
    0C20	.LONG	^X010E001E
    0C24	.ADDR	OUTNAME

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 33  
					ERRPRT.FOR.89       

    0C28	.LONG	^X010E0018
    0C2C	.ADDR	TIME
    0C30	.LONG	^X010E0008
    0C34	.ADDR	$PDATA+^X18
    0C38	.LONG	^X010E0025
    0C3C	.ADDR	$PDATA+^X20
    0C40	.LONG	^X010E0000
    0C44	.ADDR	INNAME
    0C48	.LONG	^X00000007
    0C4C	.LONG	^X00010201
    0C50	.LONG	^X0000070E
    0C54	.ADDR	$LOCAL+^XC40
    0C58	.LONG	^X0001010F
    0C5C	.LONG	^X00000008
    0C60	.LONG	^X01F30206
    0C64	.LONG	^X00000003
    0C68	.LONG	^X010E0021
    0C6C	.ADDR	$PDATA+^X45
    0C70	.LONG	^X010E0029
    0C74	.ADDR	$PDATA+^X66
    0C78	.LONG	^X010E001C
    0C7C	.ADDR	$PDATA+^X8F
    0C80	.LONG	^X010E001D
    0C84	.ADDR	$PDATA+^XAB
    0C88	.LONG	^X010E0000
    0C8C	.ADDR	OUTNAME
    0C90	.LONG	^X00000004
    0C94	.LONG	^X00020201
    0C98	.LONG	^X0000070E
    0C9C	.ADDR	$LOCAL+^XC88
    0CA0	.LONG	^X00000003
    0CA4	.LONG	^X010E0017
    0CA8	.ADDR	$PDATA+^XC8
    0CAC	.LONG	^X010E0012
    0CB0	.ADDR	$PDATA+^XDF
    0CB4	.LONG	^X010E000D
    0CB8	.ADDR	$PDATA+^XF1
    0CBC	.LONG	^X010E000D
    0CC0	.ADDR	$PDATA+^XFE
    0CC4	.LONG	^X010E000B
    0CC8	.ADDR	$PDATA+^X10B
    0CCC	.LONG	^X010E000D
    0CD0	.ADDR	$PDATA+^X116
    0CD4	.LONG	^X010E0018
    0CD8	.ADDR	$PDATA+^X123
    0CDC	.LONG	^X010E0018
    0CE0	.ADDR	$PDATA+^X13B
    0CE4	.LONG	^X010E001F
    0CE8	.ADDR	$PDATA+^X153
    0CEC	.LONG	^X010E0019
    0CF0	.ADDR	$PDATA+^X172
    0CF4	.LONG	^X010E001E
    0CF8	.ADDR	$PDATA+^X18C
    0CFC	.LONG	^X010E0000
    0D00	.ADDR	TIME
    0D04	.LONG	^X00000002

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 34  
					ERRPRT.FOR.89       

    0D08	.ADDR	$LOCAL+^XCFC
    0D0C	.ADDR	SELTIMELO
    0D10	.LONG	^X00000004
    0D14	.LONG	^X00000000
    0D18	.ADDR	$LOCAL+^XC28
    0D1C	.ADDR	SELTIMELO
    0D20	.LONG	^X00000000
    0D24	.LONG	^X010E001F
    0D28	.ADDR	$PDATA+^X1AA
    0D2C	.LONG	^X00000002
    0D30	.ADDR	$LOCAL+^XCFC
    0D34	.ADDR	SELTIMEHI
    0D38	.LONG	^X00000004
    0D3C	.LONG	^X00000000
    0D40	.ADDR	$LOCAL+^XC28
    0D44	.ADDR	SELTIMEHI
    0D48	.LONG	^X00000000
    0D4C	.LONG	^X00000002
    0D50	.ADDR	EMB$_DV_ERTIME
    0D54	.ADDR	SELTIMELO
    0D58	.LONG	^X00000002
    0D5C	.ADDR	EMB$_DV_ERTIME
    0D60	.ADDR	SELTIMEHI
    0D64	.LONG	^X00000002
    0D68	.ADDR	EMB$_DV_ERTIME
    0D6C	.ADDR	ERTIMELO
    0D70	.LONG	^X00000002
    0D74	.ADDR	EMB$_DV_ERTIME
    0D78	.ADDR	ERTIMEHI
    0D7C	.LONG	^X00000002
    0D80	.ADDR	TIMBUF
    0D84	.ADDR	EMB$Q_DV_TIME
    0D88	.LONG	^X00000001
    0D8C	.ADDR	EMB$T_DV_NAME
    0D90	.LONG	^X00000002
    0D94	.ADDR	EMB$W_DV_UNIT
    0D98	.ADDR	$PDATA+^X10
    0D9C	.LONG	^X010E0013
    0DA0	.ADDR	$PDATA+^X1C9
    0DA4	.LONG	^X00000001
    0DA8	.ADDR	$PDATA+^X4
    0DAC	.LONG	^X010E000F
    0DB0	.ADDR	$PDATA+^X1DD
    0DB4	.LONG	^X010E000F
    0DB8	.ADDR	$PDATA+^X1ED
    0DBC	.LONG	^X010E0019
    0DC0	.ADDR	$PDATA+^X1FD
    0DC4	.LONG	^X010E0018
    0DC8	.ADDR	$PDATA+^X217
    0DCC	.LONG	^X010E0014
    0DD0	.ADDR	$PDATA+^X230
    0DD4	.LONG	^X010E0006
    0DD8	.ADDR	$PDATA+^X245
    0DDC	.LONG	^X00000002
    0DE0	.ADDR	$PDATA+^X4
    0DE4	.ADDR	EMB$L_DV_REGSAV

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 35  
					ERRPRT.FOR.89       

    0DE8	.LONG	^X010E0008
    0DEC	.ADDR	$PDATA+^X24C
    0DF0	.LONG	^X010E0004
    0DF4	.ADDR	$PDATA+^X255
    0DF8	.LONG	^X010E0004
    0DFC	.ADDR	$PDATA+^X25A
    0E00	.LONG	^X010E0004
    0E04	.ADDR	$PDATA+^X25F
    0E08	.LONG	^X010E0019
    0E0C	.LONG	^X00000000
    0E10	.LONG	^X00000002
    0E14	.ADDR	$PDATA+^X4
    0E18	.ADDR	$LOCAL+^XE08
    0E1C	.LONG	^X00000002
    0E20	.ADDR	$PDATA+^X4
    0E24	.ADDR	$PDATA+^X4
    0E28	.LONG	^X00000002
    0E2C	.ADDR	$PDATA+^X4
    0E30	.LONG	^X00000000
    0E34	.LONG	^X00000001
    0E38	.ADDR	EMB$B_VM_NAMLNG
    0E3C	.LONG	^X010E000E
    0E40	.ADDR	$PDATA+^X264
    0E44	.LONG	^X010E0011
    0E48	.ADDR	$PDATA+^X273
    0E4C	.LONG	^X00000002
    0E50	.ADDR	$PDATA+^X4
    0E54	.ADDR	$PDATA
    0E58	.LONG	^X010E0038
    0E5C	.ADDR	$PDATA+^X285
    0E60	.LONG	^X00000002
    0E64	.ADDR	$PDATA+^X4
    0E68	.ADDR	$PDATA+^X8
    0E6C	.LONG	^X010E000D
    0E70	.ADDR	$PDATA+^X2BD
    0E74	.LONG	^X010E0013
    0E78	.ADDR	$PDATA+^X2CB
    0E7C	.LONG	^X010E0019
    0E80	.ADDR	$PDATA+^X2DF
    0E84	.LONG	^X00000003
    0E88	.ADDR	$PDATA+^X4
    0E8C	.LONG	^X00000000
    0E90	.ADDR	EMB
    0E94	.LONG	^X00000001
    0E98	.LONG	^X00010201
    0E9C	.LONG	^X010E0015
    0EA0	.ADDR	$PDATA+^X2FD
    0EA4	.LONG	^X00000002
    0EA8	.ADDR	$PDATA+^X4
    0EAC	.ADDR	$PDATA+^XC
    0EB0	.LONG	^X010E0004
    0EB4	.ADDR	$PDATA+^X312
    0EB8	.LONG	^X010E0004
    0EBC	.ADDR	$PDATA+^X316
    0EC0	.LONG	^X010E0001
    0EC4	.ADDR	$PDATA+^X18B

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 36  
					ERRPRT.FOR.89       

    0EC8	.LONG	^X010E001C
    0ECC	.ADDR	$PDATA+^X31A
    0ED0	.LONG	^X010E0001
    0ED4	.ADDR	$PDATA+^X336
    0ED8	.LONG	^X00000002
    0EDC	.ADDR	$PDATA+^X4
    0EE0	.ADDR	$PDATA+^X337
    0EE4	.LONG	^X00000002
    0EE8	.ADDR	$PDATA+^X4
    0EEC	.ADDR	$PDATA+^X2F9
    0EF0	.LONG	^X00000004
    0EF4	.LONG	^X00000000
    0EF8	.ADDR	$LOCAL+^XC28
    0EFC	.ADDR	ERTIMELO
    0F00	.LONG	^X00000000
    0F04	.LONG	^X010E0008
    0F08	.ADDR	$PDATA+^X33B
    0F0C	.LONG	^X00000004
    0F10	.LONG	^X00000000
    0F14	.ADDR	$LOCAL+^XC28
    0F18	.ADDR	ERTIMEHI
    0F1C	.LONG	^X00000000
    0F20	.LONG	^X010E0004
    0F24	.ADDR	$PDATA+^X343
    0F28	.LONG	^X010E0015
    0F2C	.ADDR	$PDATA+^X347
    0F30	.LONG	^X00000002
    0F34	.ADDR	$PDATA+^X4
    0F38	.CKARG	$LOCAL+^XD9C
    0F3C	.LONG	^X00000002
    0F40	.ADDR	$PDATA+^X4
    0F44	.CKARG	$LOCAL+^XDAC
    0F48	.LONG	^X00000002
    0F4C	.ADDR	$PDATA+^X4
    0F50	.CKARG	$LOCAL+^XDB4
    0F54	.LONG	^X00000002
    0F58	.ADDR	$PDATA+^X4
    0F5C	.CKARG	$LOCAL+^XDBC
    0F60	.LONG	^X00000002
    0F64	.ADDR	$PDATA+^X4
    0F68	.CKARG	$LOCAL+^XDC4
    0F6C	.LONG	^X00000002
    0F70	.ADDR	$PDATA+^X4
    0F74	.CKARG	$LOCAL+^XDCC
    0F78	.LONG	^X00000003
    0F7C	.ADDR	$PDATA+^X4
    0F80	.CKARG	$LOCAL+^XDD4
    0F84	.ADDR	$PDATA+^X14
    0F88	.LONG	^X00000003
    0F8C	.ADDR	$PDATA+^X4
    0F90	.CKARG	$LOCAL+^XDD4
    0F94	.ADDR	$PDATA
    0F98	.LONG	^X00000003
    0F9C	.ADDR	$PDATA+^X4
    0FA0	.CKARG	$LOCAL+^XDE8
    0FA4	.ADDR	$PDATA+^X14

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 37  
					ERRPRT.FOR.89       

    0FA8	.LONG	^X00000003
    0FAC	.ADDR	$PDATA+^X4
    0FB0	.CKARG	$LOCAL+^XDE8
    0FB4	.ADDR	$PDATA
    0FB8	.LONG	^X00000003
    0FBC	.ADDR	$PDATA+^X4
    0FC0	.CKARG	$LOCAL+^XDF0
    0FC4	.ADDR	$PDATA+^X14
    0FC8	.LONG	^X00000003
    0FCC	.ADDR	$PDATA+^X4
    0FD0	.CKARG	$LOCAL+^XDF0
    0FD4	.ADDR	$PDATA
    0FD8	.LONG	^X00000003
    0FDC	.ADDR	$PDATA+^X4
    0FE0	.CKARG	$LOCAL+^XDF8
    0FE4	.ADDR	$PDATA+^X14
    0FE8	.LONG	^X00000003
    0FEC	.ADDR	$PDATA+^X4
    0FF0	.CKARG	$LOCAL+^XDF8
    0FF4	.ADDR	$PDATA
    0FF8	.LONG	^X00000003
    0FFC	.ADDR	$PDATA+^X4
    1000	.CKARG	$LOCAL+^XE00
    1004	.ADDR	$PDATA+^X14
    1008	.LONG	^X00000003
    100C	.ADDR	$PDATA+^X4
    1010	.CKARG	$LOCAL+^XE00
    1014	.ADDR	$PDATA
    1018	.LONG	^X00000002
    101C	.ADDR	$PDATA+^X4
    1020	.CKARG	$LOCAL+^XE3C
    1024	.LONG	^X00000002
    1028	.ADDR	$PDATA+^X4
    102C	.CKARG	$LOCAL+^XE44
    1030	.LONG	^X00000002
    1034	.ADDR	$PDATA+^X4
    1038	.CKARG	$LOCAL+^XE6C
    103C	.LONG	^X00000003
    1040	.ADDR	$PDATA+^X4
    1044	.CKARG	$LOCAL+^XE74
    1048	.ADDR	$PDATA
    104C	.LONG	^X00000002
    1050	.ADDR	$PDATA+^X4
    1054	.CKARG	$LOCAL+^XE7C

    035C	.PSECT	$PDATA
    035C  .100:
    035C	.XBYTE	0F,01,20,29,04
    0361  .101:
    0361	.XBYTE	0F,01,24,29,04
    0366  .102:
    0366	.XBYTE	14,29,04
    0369  .104:
    0369	.XBYTE	0F,01,20,0D,2B,29,04
    0370  .303:
    0370	.XBYTE	14,29,04

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 38  
					ERRPRT.FOR.89       

    0373  .511:
    0373	.XBYTE	14,95,80
    0376	.ADDR	L$OCFN
    037A	.XBYTE	01,04
    037C  .2111:
    037C	.XBYTE	0F,13,30,54,69,6D,65,20,6F,66,20,64,61,79,20,63
    038C	.XBYTE	6C,6F,63,6B,3A,0D,17,19,08,04
    0396  .2611:
    0396	.XBYTE	0F,0E,30,4D,65,73,73,61,67,65,20,74,65,78,74,3A
    03A6	.XBYTE	04
    03A7  .2621:
    03A7	.XBYTE	0F,01,20,0D,0A,95,01,3E,01,04
    03B1  .2631:
    03B1	.XBYTE	0F,01,20,0D,0A,0F,06,5B,6E,6F,6E,65,5D,04
    03BF  .3171:
    03BF	.XBYTE	0F,01,30,95,01,0C,01,0F,04,20,6F,6E,20,95,80
    03CE	.ADDR	L$HEJI
    03D2	.XBYTE	01,18,01,0F,01,3A,04
    03D9  .3371:
    03D9	.XBYTE	0F,0C,30,53,74,61,74,69,73,74,69,63,73,3A,0D,30
    03E9	.XBYTE	0F,04,75,6E,69,74,0D,3C,0F,06,76,6F,6C,75,6D,65
    03F9	.XBYTE	05,0F,01,20,0D,0A,0F,0B,6F,70,65,72,61,74,69,6F
    0409	.XBYTE	6E,73,3A,0D,28,18,0B,0F,01,2E,0D,36,18,0B,0F,01
    0419	.XBYTE	2E,05,0F,01,20,0D,0A,0F,07,65,72,72,6F,72,73,3A
    0429	.XBYTE	0D,28,18,0B,0F,01,2E,0D,36,18,0B,0F,01,2E,04
    0438  .90151:
    0438	.XBYTE	0F,01,20,29,04
    043D  .90153:
    043D	.XBYTE	05,0F,01,30,95,80
    0443	.ADDR	L$PEDE
    0447	.XBYTE	01,0D,09,98,01,08,08,05,04
    0450  .90155:
    0450	.XBYTE	0F,01,20,0D,04,29,0D,0A,01,82,01,08,18,07,0F,01
    0460	.XBYTE	2E,03,04
    0463  .90257:
    0463	.XBYTE	0F,01,20,0D,0A,18,02,0F,03,3A,30,30,18,07,0F,02
    0473	.XBYTE	2E,20,07,95,80
    0478	.ADDR	L$DFLA
    047C	.XBYTE	01,04
    047E  .90311:
    047E	.XBYTE	05,05,05,05,05,05,0F,10,30,53,75,6D,6D,61,72,79
    048E	.XBYTE	20,54,6F,74,61,6C,73,3A,05,0F,01,20,0D,0A,0F,10
    049E	.XBYTE	48,61,72,64,20,45,43,43,20,65,72,72,6F,72,73,3A
    04AE	.XBYTE	0D,28,18,07,0F,01,2E,05,0F,01,20,0D,0A,0F,1A,41
    04BE	.XBYTE	73,79,6E,63,68,72,6F,6E,6F,75,73,20,77,72,69,74
    04CE	.XBYTE	65,20,65,72,72,6F,72,73,3A,0D,28,18,07,0F,01,2E
    04DE	.XBYTE	05,0F,01,20,0D,0A,0F,10,53,6F,66,74,20,45,43,43
    04EE	.XBYTE	20,65,72,72,6F,72,73,3A,0D,28,18,07,0F,01,2E,05
    04FE	.XBYTE	0F,01,20,0D,0A,0F,11,53,42,49,20,61,6C,65,72,74
    050E	.XBYTE	20,65,72,72,6F,72,73,3A,0D,28,18,07,0F,01,2E,05
    051E	.XBYTE	0F,01,20,0D,0A,0F,0B,42,75,73,20,65,72,72,6F,72
    052E	.XBYTE	73,3A,0D,28,18,07,0F,01,2E,05,0F,01,20,0D,0A,0F
    053E	.XBYTE	0F,4D,61,63,68,69,6E,65,20,63,68,65,63,6B,73,3A
    054E	.XBYTE	0D,28,18,07,0F,01,2E,05,0F,01,20,0D,0A,0F,0E,44
    055E	.XBYTE	65,76,69,63,65,20,65,72,72,6F,72,73,3A,0D,28,18
    056E	.XBYTE	07,0F,01,2E,05,0F,01,20,0D,0A,0F,13,53,79,73,74

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 39  
					ERRPRT.FOR.89       

    057E	.XBYTE	65,6D,20,69,6E,66,6F,72,6D,61,74,69,6F,6E,3A,0D
    058E	.XBYTE	28,18,07,0F,01,2E,05,0F,01,20,0D,0A,0F,0F,43,6F
    059E	.XBYTE	6E,66,69,67,20,63,68,61,6E,67,65,73,3A,0D,28,18
    05AE	.XBYTE	07,0F,01,2E,05,0F,01,20,0D,0A,0F,11,56,65,63,74
    05BE	.XBYTE	6F,72,20,61,72,65,61,20,70,72,6F,62,3A,0D,28,18
    05CE	.XBYTE	07,0F,01,2E,05,0F,01,20,0D,0A,0F,09,53,6F,66,74
    05DE	.XBYTE	77,61,72,65,3A,0D,28,18,07,0F,01,2E,04
    05EB  .90321:
    05EB	.XBYTE	0F,01,30,0D,0A,0F,12,52,65,63,6F,72,64,73,20,70
    05FB	.XBYTE	72,6F,63,65,73,73,65,64,3A,0D,28,18,07,0F,01,2E
    060B	.XBYTE	05,0F,01,20,0D,0A,0F,0D,52,65,63,6F,72,64,73,20
    061B	.XBYTE	72,65,61,64,3A,0D,28,18,07,0F,01,2E,04
    0628  .90326:
    0628	.XBYTE	0F,01,30,0D,0A,0F,15,51,75,65,73,74,69,6F,6E,61
    0638	.XBYTE	62,6C,65,20,65,6E,74,72,69,65,73,3A,0D,28,18,07
    0648	.XBYTE	0F,01,2E,04
    064C  .90329:
    064C	.XBYTE	0F,01,30,0D,0A,0F,18,55,6E,6B,6E,6F,77,6E,2F,69
    065C	.XBYTE	6C,6C,65,67,61,6C,20,65,6E,74,72,69,65,73,3A,0D
    066C	.XBYTE	28,18,07,0F,01,2E,04
    0673  .90330:
    0673	.XBYTE	0F,01,30,0D,0A,0F,12,43,6F,72,72,75,70,74,65,64
    0683	.XBYTE	20,65,6E,74,72,69,65,73,3A,0D,28,18,07,0F,01,2E
    0693	.XBYTE	04
    0694  .90331:
    0694	.XBYTE	0F,01,20,0D,0A,0F,08,44,61,74,65,20,6F,66,20,29
    06A4	.XBYTE	0F,06,20,65,6E,74,72,79,0D,28,29,04

    0018	.PSECT	$LOCAL
    0018  ERTIMELO+4:
    0018	.LONG	^X7FFFFFFF
    0014  ERTIMELO:
    0014	.LONG	^XFFFFFFFF
    0020  ERTIMEHI+4:
    0020	.LONG	^X00000000
    001C  ERTIMEHI:
    001C	.LONG	^X00000000
    0584  SELTIMELO:
    0584	.LONG	^X00000000
    0588  SELTIMELO+4:
    0588	.LONG	^X00000000
    0590  SELTIMEHI+4:
    0590	.LONG	^X7FFFFFFF
    058C  SELTIMEHI:
    058C	.LONG	^XFFFFFFFF
    0B90  NEGATE:
    0B90	.XBYTE	00
    0B91  UNKNOWN:
    0B91	.XBYTE	00

    0008	.PSECT	SYECOM
    0008  DEVSUMCNT:
    0008	.WORD	^X000E
    000C  NAMDEVSUM:
    000C	.XBYTE	03
    0020  NAMDEVSUM+20:

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 40  
					ERRPRT.FOR.89       

    0020	.XBYTE	44
    0034  NAMDEVSUM+40:
    0034	.XBYTE	42
    0048  NAMDEVSUM+60:
    0048	.XBYTE	41
    000D  NAMDEVSUM+1:
    000D	.XBYTE	03
    0021  NAMDEVSUM+21:
    0021	.XBYTE	44
    0035  NAMDEVSUM+41:
    0035	.XBYTE	42
    0049  NAMDEVSUM+61:
    0049	.XBYTE	42
    000E  NAMDEVSUM+2:
    000E	.XBYTE	03
    0022  NAMDEVSUM+22:
    0022	.XBYTE	44
    0036  NAMDEVSUM+42:
    0036	.XBYTE	42
    004A  NAMDEVSUM+62:
    004A	.XBYTE	43
    000F  NAMDEVSUM+3:
    000F	.XBYTE	03
    0023  NAMDEVSUM+23:
    0023	.XBYTE	44
    0037  NAMDEVSUM+43:
    0037	.XBYTE	42
    004B  NAMDEVSUM+63:
    004B	.XBYTE	44
    0010  NAMDEVSUM+4:
    0010	.XBYTE	03
    0024  NAMDEVSUM+24:
    0024	.XBYTE	44
    0038  NAMDEVSUM+44:
    0038	.XBYTE	4D
    004C  NAMDEVSUM+64:
    004C	.XBYTE	41
    0011  NAMDEVSUM+5:
    0011	.XBYTE	03
    0025  NAMDEVSUM+25:
    0025	.XBYTE	44
    0039  NAMDEVSUM+45:
    0039	.XBYTE	4D
    004D  NAMDEVSUM+65:
    004D	.XBYTE	42
    0012  NAMDEVSUM+6:
    0012	.XBYTE	03
    0026  NAMDEVSUM+26:
    0026	.XBYTE	44
    003A  NAMDEVSUM+46:
    003A	.XBYTE	52
    004E  NAMDEVSUM+66:
    004E	.XBYTE	41
    0013  NAMDEVSUM+7:
    0013	.XBYTE	03
    0027  NAMDEVSUM+27:

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 41  
					ERRPRT.FOR.89       

    0027	.XBYTE	44
    003B  NAMDEVSUM+47:
    003B	.XBYTE	52
    004F  NAMDEVSUM+67:
    004F	.XBYTE	42
    0014  NAMDEVSUM+8:
    0014	.XBYTE	03
    0028  NAMDEVSUM+28:
    0028	.XBYTE	44
    003C  NAMDEVSUM+48:
    003C	.XBYTE	52
    0050  NAMDEVSUM+68:
    0050	.XBYTE	43
    0015  NAMDEVSUM+9:
    0015	.XBYTE	03
    0029  NAMDEVSUM+29:
    0029	.XBYTE	44
    003D  NAMDEVSUM+49:
    003D	.XBYTE	52
    0051  NAMDEVSUM+69:
    0051	.XBYTE	44
    0016  NAMDEVSUM+10:
    0016	.XBYTE	03
    002A  NAMDEVSUM+30:
    002A	.XBYTE	4D
    003E  NAMDEVSUM+50:
    003E	.XBYTE	54
    0052  NAMDEVSUM+70:
    0052	.XBYTE	41
    0017  NAMDEVSUM+11:
    0017	.XBYTE	03
    002B  NAMDEVSUM+31:
    002B	.XBYTE	4D
    003F  NAMDEVSUM+51:
    003F	.XBYTE	54
    0053  NAMDEVSUM+71:
    0053	.XBYTE	42
    0018  NAMDEVSUM+12:
    0018	.XBYTE	03
    002C  NAMDEVSUM+32:
    002C	.XBYTE	4D
    0040  NAMDEVSUM+52:
    0040	.XBYTE	54
    0054  NAMDEVSUM+72:
    0054	.XBYTE	43
    0019  NAMDEVSUM+13:
    0019	.XBYTE	03
    002D  NAMDEVSUM+33:
    002D	.XBYTE	4D
    0041  NAMDEVSUM+53:
    0041	.XBYTE	54
    0055  NAMDEVSUM+73:
    0055	.XBYTE	44

    0814	.PSECT	$LOCAL
    0814  FLAGS:

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 42  
					ERRPRT.FOR.89       

    0814	.WORD	^X0000
    0816  FLAGS+2:
    0816	.WORD	^X000F
    0818  FLAGS+4:
    0818	.WORD	^X000F
    081A  FLAGS+6:
    081A	.WORD	^X0004
    081C  FLAGS+8:
    081C	.WORD	^X000D
    081E  FLAGS+10:
    081E	.WORD	^X000D
    0820  FLAGS+12:
    0820	.WORD	^X000D
    0822  FLAGS+14:
    0822	.WORD	^X000D
    0824  FLAGS+16:
    0824	.WORD	^X0009
    0826  FLAGS+18:
    0826	.WORD	^X0004
    0828  FLAGS+20:
    0828	.WORD	^X0000
    082A  FLAGS+22:
    082A	.WORD	^X0004
    0830  FLAGS+28:
    0830	.WORD	^X0004
    0854  FLAGS+64:
    0854	.WORD	^X0001
    0856  FLAGS+66:
    0856	.WORD	^X0001
    0858  FLAGS+68:
    0858	.WORD	^X0001
    085A  FLAGS+70:
    085A	.WORD	^X0001
    085C  FLAGS+72:
    085C	.WORD	^X0001
    085E  FLAGS+74:
    085E	.WORD	^X0001
    0860  FLAGS+76:
    0860	.WORD	^X0001
    0862  FLAGS+78:
    0862	.WORD	^X0001
    0864  FLAGS+80:
    0864	.WORD	^X0001
    0866  FLAGS+82:
    0866	.WORD	^X0001
    0868  FLAGS+84:
    0868	.WORD	^X0001
    0894  FLAGS+128:
    0894	.WORD	^X0001
    0896  FLAGS+130:
    0896	.WORD	^X0001
    08D4  FLAGS+192:
    08D4	.WORD	^X0009
    0A76  SYSTEMERROR:
    0A76	.XBYTE	53,79,73,74,65,6D,20,73,74,61,72,74,75,70
    0A84	.XBYTE	20 [11]

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 43  
					ERRPRT.FOR.89       

    0A8F  SYSTEMERROR+25:
    0A8F	.XBYTE	45,72,72,6F,72,20,6C,6F,67,20,74,65,72,6D,69,6E
    0A9F	.XBYTE	61,74,65,64
    0AA3	.XBYTE	20 [5]
    0AA8  SYSTEMERROR+50:
    0AA8	.XBYTE	53,79,73,74,65,6D,20,70,6F,77,65,72,66,61,69,6C
    0AB8	.XBYTE	20 [9]
    0AC1  SYSTEMERROR+75:
    0AC1	.XBYTE	45,52,52,4F,52,2E,53,59,53,20,63,72,65,61,74,65
    0AD1	.XBYTE	64
    0AD2	.XBYTE	20 [8]
    0ADA  SYSTEMERROR+100:
    0ADA	.XBYTE	57,61,72,6D,20,53,74,61,72,74,2D,53,79,73,74,65
    0AEA	.XBYTE	6D,20,70,77,72,20,72,65,63
    0AF3  SYSTEMERROR+125:
    0AF3	.XBYTE	43,72,61,73,68,20,72,65,2D,73,74,61,72,74
    0B01	.XBYTE	20 [11]
    0B0C  SYSTEMERROR+150:
    0B0C	.XBYTE	50,65,72,69,6F,64,69,63,20,74,69,6D,65,20,73,74
    0B1C	.XBYTE	61,6D,70
    0B1F	.XBYTE	20 [6]
    0B25  SYSTEMERROR+175:
    0B25	.XBYTE	53,79,73,74,65,6D,20,73,65,72,76,69,63,65,20,6D
    0B35	.XBYTE	65,73,73,61,67,65
    0B3B	.XBYTE	20 [3]
    0B3E  SYSTEMERROR+200:
    0B3E	.XBYTE	53,79,73,74,65,6D,20,62,75,67,63,68,65,63,6B
    0B4D	.XBYTE	20 [10]
    0B57  SYSTEMERROR+225:
    0B57	.XBYTE	4F,70,65,72,61,74,6F,72,20,6D,65,73,73,61,67,65
    0B67	.XBYTE	20 [9]
    0B70  SYSTEMERROR+250:
    0B70	.XBYTE	4E,65,74,77,6F,72,6B,20,6D,65,73,73,61,67,65
    0B7F	.XBYTE	20 [10]

    0000	.PSECT	$CODE
    0000  ERRPRT::
    0000	.WORD	^M<IV,R2,R3,R4,R5,R8,R9,R10,R11>
    0002	MOVAL	$LOCAL+^XBFC, R11
									    ; 0335
    0009	CALLS	#0, TIMRB
									    ; 0336
    0010	CLRW	ERROR(R11)
									    ; 0337
    0013  .90:
									    ; 0338
    0013	PUSHAL	.100
    0019	MNEGL	#2, -(SP)
    001C	CALLS	#2, FOR$WRITE_SF
    0023	PUSHAB	$LOCAL+^XC30(R11)
    0026	CALLS	#1, FOR$IO_T_DS
    002D	CALLS	#0, FOR$IO_END
									    ; 0339
    0034	PUSHAL	.101
    003A	MNEGL	#2, -(SP)
    003D	CALLS	#2, FOR$WRITE_SF

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 44  
					ERRPRT.FOR.89       

    0044	PUSHAB	$LOCAL+^XC38(R11)
    0047	CALLS	#1, FOR$IO_T_DS
    004E	CALLS	#0, FOR$IO_END
									    ; 0340
    0055	PUSHAL	.102
    005B	MNEGL	#3, -(SP)
    005E	CALLS	#2, FOR$READ_SF
    0065	PUSHAW	Q(R11)
    0068	CALLS	#1, FOR$IO_W_R
    006F	PUSHAB	$LOCAL+^XC18(R11)
    0072	CALLS	#1, FOR$IO_T_DS
    0079	CALLS	#0, FOR$IO_END
									    ; 0341
    0080	TSTW	Q(R11)
    0083	BNEQ	L$CCHI
									    ; 0342
    0085	MOVC5	#18, $PDATA+^X6B0, #^X20, #30, INNAME(R11)
									    ; 0343
    0090	MOVW	#15, Q(R11)
									    ; 0344
    0094  L$CCHI:
									    ; 0350
    0094	MOVW	#1, FILE_OPEN(R11)
									    ; 0351
    0098	MOVW	Q(R11), R0
    009C	CMPW	R0, #30
    009F	BLEQ	$CODE+^XA4
    00A1	MOVW	#30, R0
    00A4	CVTWL	R0, R0
    00A7	MOVW	R0, $LOCAL+^XC40(R11)
    00AB	CALLG	$LOCAL+^XC48(R11), FOR$OPEN
    00B3	BLBC	R0, .200
									    ; 0352
    00B6	CLRW	ERROR(R11)
									    ; 0353
    00B9	BRW	.250
									    ; 0354
    00BC  .200:
									    ; 0355
    00BC	INCW	ERROR(R11)
									    ; 0356
    00BF	CMPW	ERROR(R11), #8
    00C3	BGTR	L$CCNL
									    ; 0357
    00C5	PUSHAL	.100
    00CB	MNEGL	#2, -(SP)
    00CE	CALLS	#2, FOR$WRITE_SF
    00D5	PUSHAB	$LOCAL+^XC68(R11)
    00D8	CALLS	#1, FOR$IO_T_DS
    00DF	CALLS	#0, FOR$IO_END
									    ; 0358
    00E6	CMPW	FILE_OPEN(R11), #1
    00EA	BNEQ	$CODE+^XEF
    00EC	BRW	.90
									    ; 0359
    00EF	CMPW	FILE_OPEN(R11), #2

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 45  
					ERRPRT.FOR.89       

    00F3	BEQL	.250
									    ; 0360
    00F5	BRB	L$CCDM
    00F7  L$CCNL:
									    ; 0361
    00F7	PUSHAL	.100
    00FD	MNEGL	#2, -(SP)
    0100	CALLS	#2, FOR$WRITE_SF
    0107	PUSHAB	$LOCAL+^XC68(R11)
    010A	CALLS	#1, FOR$IO_T_DS
    0111	CALLS	#0, FOR$IO_END
									    ; 0362
    0118	PUSHAL	.100
    011E	MNEGL	#2, -(SP)
    0121	CALLS	#2, FOR$WRITE_SF
    0128	PUSHAB	$LOCAL+^XC70(R11)
    012B	CALLS	#1, FOR$IO_T_DS
    0132	CALLS	#0, FOR$IO_END
									    ; 0363
    0139	PUSHAL	$LOCAL+^XC78(R11)
    013C	CALLS	#1, FOR$STOP
									    ; 0364
    0143  L$CCDM:
									    ; 0365
    0143  .250:
									    ; 0366
    0143	MOVW	#2, FILE_OPEN(R11)
									    ; 0367
    0147	PUSHAL	.101
    014D	MNEGL	#2, -(SP)
    0150	CALLS	#2, FOR$WRITE_SF
    0157	PUSHAB	$LOCAL+^XC80(R11)
    015B	CALLS	#1, FOR$IO_T_DS
    0162	CALLS	#0, FOR$IO_END
									    ; 0368
    0169	PUSHAL	.102
    016F	MNEGL	#3, -(SP)
    0172	CALLS	#2, FOR$READ_SF
    0179	PUSHAW	Q(R11)
    017C	CALLS	#1, FOR$IO_W_R
    0183	PUSHAB	$LOCAL+^XC20(R11)
    0186	CALLS	#1, FOR$IO_T_DS
    018D	CALLS	#0, FOR$IO_END
									    ; 0369
    0194	TSTW	Q(R11)
    0197	BNEQ	L$CCJM
									    ; 0370
    0199	MOVC5	#10, $PDATA+^X6C2, #^X20, #30, OUTNAME(R11)
									    ; 0371
    01A4	MOVW	#10, Q(R11)
									    ; 0372
    01A8  L$CCJM:
									    ; 0373
    01A8	MOVW	Q(R11), R0
    01AC	CMPW	R0, #30
    01AF	BLEQ	$CODE+^X1B4

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 46  
					ERRPRT.FOR.89       

    01B1	MOVW	#30, R0
    01B4	CVTWL	R0, R0
    01B7	MOVW	R0, $LOCAL+^XC88(R11)
    01BC	CALLG	$LOCAL+^XC90(R11), FOR$OPEN
    01C5	BLBS	R0, $CODE+^X1CB
    01C8	BRW	.200
									    ; 0374
    01CB	MNEGL	#1, TTY
									    ; 0375
    01D2  .300:
									    ; 0376
    01D2	PUSHAL	.101
    01D8	MNEGL	#2, -(SP)
    01DB	CALLS	#2, FOR$WRITE_SF
    01E2	PUSHAB	$LOCAL+^XCA4(R11)
    01E6	CALLS	#1, FOR$IO_T_DS
    01ED	CALLS	#0, FOR$IO_END
									    ; 0377
    01F4	PUSHAL	.102
    01FA	MNEGL	#3, -(SP)
    01FD	CALLS	#2, FOR$READ_SF
    0204	PUSHAW	Q(R11)
    0207	CALLS	#1, FOR$IO_W_R
    020E	PUSHAB	OPTION(R11)
    0211	CALLS	#1, FOR$IO_B_R
    0218	CALLS	#0, FOR$IO_END
									    ; 0378
    021F	TSTW	Q(R11)
    0222	BNEQ	L$CCFN
									    ; 0379
    0224	MOVB	#82, OPTION(R11)
									    ; 0380
    0229	BRW	.399
									    ; 0381
    022C  L$CCFN:
									    ; 0382
    022C	BICB2	#^X20, OPTION(R11)
									    ; 0383
    0231  L$CCBO:
									    ; 0384
    0231	CMPB	OPTION(R11), #82
    0236	BNEQ	$CODE+^X23B
    0238	BRW	L$CCHO
    023B	CMPB	OPTION(R11), #67
    0240	BNEQ	$CODE+^X245
    0242	BRW	L$CCHO
    0245	CMPB	OPTION(R11), #66
    024A	BNEQ	$CODE+^X24F
    024C	BRW	L$CCHO
    024F	CMPB	OPTION(R11), #83
    0254	BNEQ	$CODE+^X259
    0256	BRW	L$CCHO
    0259	CMPB	OPTION(R11), #70
    025E	BNEQ	$CODE+^X263
    0260	BRW	L$CCHO
    0263	CMPB	OPTION(R11), #85

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 47  
					ERRPRT.FOR.89       

    0268	BNEQ	$CODE+^X26D
    026A	BRW	L$CCHO
									    ; 0385
    026D	PUSHAL	.104
    0273	MNEGL	#2, -(SP)
    0276	CALLS	#2, FOR$WRITE_SF
    027D	PUSHAB	$LOCAL+^XCAC(R11)
    0281	CALLS	#1, FOR$IO_T_DS
    0288	CALLS	#0, FOR$IO_END
									    ; 0386
    028F	PUSHAL	.104
    0295	MNEGL	#2, -(SP)
    0298	CALLS	#2, FOR$WRITE_SF
    029F	PUSHAB	$LOCAL+^XCB4(R11)
    02A3	CALLS	#1, FOR$IO_T_DS
    02AA	CALLS	#0, FOR$IO_END
									    ; 0387
    02B1	PUSHAL	.104
    02B7	MNEGL	#2, -(SP)
    02BA	CALLS	#2, FOR$WRITE_SF
    02C1	PUSHAB	$LOCAL+^XCBC(R11)
    02C5	CALLS	#1, FOR$IO_T_DS
    02CC	CALLS	#0, FOR$IO_END
									    ; 0388
    02D3	PUSHAL	.104
    02D9	MNEGL	#2, -(SP)
    02DC	CALLS	#2, FOR$WRITE_SF
    02E3	PUSHAB	$LOCAL+^XCC4(R11)
    02E7	CALLS	#1, FOR$IO_T_DS
    02EE	CALLS	#0, FOR$IO_END
									    ; 0389
    02F5	PUSHAL	.104
    02FB	MNEGL	#2, -(SP)
    02FE	CALLS	#2, FOR$WRITE_SF
    0305	PUSHAB	$LOCAL+^XCCC(R11)
    0309	CALLS	#1, FOR$IO_T_DS
    0310	CALLS	#0, FOR$IO_END
									    ; 0390
    0317	PUSHAL	.104
    031D	MNEGL	#2, -(SP)
    0320	CALLS	#2, FOR$WRITE_SF
    0327	PUSHAB	$LOCAL+^XCD4(R11)
    032B	CALLS	#1, FOR$IO_T_DS
    0332	CALLS	#0, FOR$IO_END
									    ; 0391
    0339	BRW	.300
									    ; 0392
    033C  L$CCHO:
									    ; 0393
    033C	CMPB	OPTION(R11), #70
    0341	BNEQ	L$CCNO
									    ; 0394
    0343	PUSHAL	.101
    0349	MNEGL	#2, -(SP)
    034C	CALLS	#2, FOR$WRITE_SF
    0353	PUSHAB	$LOCAL+^XCDC(R11)

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 48  
					ERRPRT.FOR.89       

    0357	CALLS	#1, FOR$IO_T_DS
    035E	CALLS	#0, FOR$IO_END
									    ; 0395
    0365	PUSHAL	.101
    036B	MNEGL	#2, -(SP)
    036E	CALLS	#2, FOR$WRITE_SF
    0375	PUSHAB	$LOCAL+^XCE4(R11)
    0379	CALLS	#1, FOR$IO_T_DS
    0380	CALLS	#0, FOR$IO_END
									    ; 0396
    0387	MOVB	#83, OPTION(R11)
									    ; 0397
    038C  L$CCNO:
									    ; 0398
    038C	CMPB	OPTION(R11), #85
    0391	BNEQ	L$CCDP
									    ; 0399
    0393	MNEGB	#1, UNKNOWN(R11)
									    ; 0400
    0397	MOVB	#83, OPTION(R11)
									    ; 0401
    039C  L$CCDP:
									    ; 0402
    039C	PUSHAL	.101
    03A2	MNEGL	#2, -(SP)
    03A5	CALLS	#2, FOR$WRITE_SF
    03AC	PUSHAB	$LOCAL+^XCEC(R11)
    03B0	CALLS	#1, FOR$IO_T_DS
    03B7	CALLS	#0, FOR$IO_END
									    ; 0403
    03BE	PUSHAL	.303
    03C4	MNEGL	#3, -(SP)
    03C7	CALLS	#2, FOR$READ_SF
    03CE	PUSHAW	SELDEVLEN(R11)
    03D1	CALLS	#1, FOR$IO_W_R
    03D8	PUSHAB	$LOCAL+^XC10(R11)
    03DB	CALLS	#1, FOR$IO_T_DS
    03E2	CALLS	#0, FOR$IO_END
									    ; 0405
    03E9	MOVW	SELDEVLEN(R11), R10
    03ED	MOVW	W_UNIT(R11), R9
    03F1	TSTW	R10
    03F3	BLEQ	L$OCAA
									    ; 0406
    03F5	CVTWL	R10, R0
    03F8	CMPB	SELDEVNAM(R11)[R0], #58
    03FE	BNEQ	L$OCGA
    0400	DECW	R10
    0402  L$OCGA:
									    ; 0407
    0402	CVTWL	R10, R12
    0405	CMPB	SELDEVNAM(R11)[R12], #48
    040B	BLSS	L$OCMA
    040D	CMPB	SELDEVNAM(R11)[R12], #57
    0413	BGTR	L$OCMA
									    ; 0408

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 49  
					ERRPRT.FOR.89       

    0415	SUBB3	#48, SELDEVNAM(R11)[R12], R12
    041C	CVTBW	R12, R9
									    ; 0409
    041F	DECW	R10
									    ; 0410
    0421	BRB	L$OCCB
    0423  L$OCMA:
									    ; 0411
    0423	MNEGW	#1, R9
									    ; 0412
    0426  L$OCCB:
									    ; 0413
    0426	CMPB	SELDEVNAM+1(R11), #45
    042B	BNEQ	L$OCIB
									    ; 0414
    042D	MNEGB	#1, NEGATE(R11)
									    ; 0415
    0431	CVTWL	R10, R12
    0434	MOVL	#1, I(R11)
    0437  L$OCMC:
									    ; 0416
    0437	MOVL	I(R11), R0
    043A	MOVB	SELDEVNAM(R11)[R0], SELDEVNAM-1(R11)[R0]
									    ; 0417
    0443	AOBLEQ	R12, I(R11), L$OCMC
									    ; 0418
    0447	DECW	R10
									    ; 0419
    0449  L$OCIB:
									    ; 0420
    0449	BRB	L$OCFE
    044B  L$OCAA:
									    ; 0421
    044B	MNEGW	#1, R9
									    ; 0422
    044E  L$OCFE:
    044E	MOVW	R9, W_UNIT(R11)
    0452	MOVW	R10, SELDEVLEN(R11)
									    ; 0423
    0456  .310:
    0456	MOVC5	#0, (SP), #^X20, #24, TIME(R11)
									    ; 0424
    045D	PUSHAL	.101
    0463	MNEGL	#2, -(SP)
    0466	CALLS	#2, FOR$WRITE_SF
    046D	PUSHAB	$LOCAL+^XCF4(R11)
    0471	CALLS	#1, FOR$IO_T_DS
    0478	CALLS	#0, FOR$IO_END
									    ; 0425
    047F	PUSHAL	.102
    0485	MNEGL	#3, -(SP)
    0488	CALLS	#2, FOR$READ_SF
    048F	PUSHAW	Q(R11)
    0492	CALLS	#1, FOR$IO_W_R
    0499	PUSHAB	$LOCAL+^XC28(R11)
    049C	CALLS	#1, FOR$IO_T_DS

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 50  
					ERRPRT.FOR.89       

    04A3	CALLS	#0, FOR$IO_END
									    ; 0426
    04AA	TSTW	Q(R11)
    04AD	BEQL	L$OCBF
									    ; 0427
    04AF	CVTWL	Q(R11), R0
    04B3	MOVW	R0, $LOCAL+^XCFC(R11)
    04B8	CALLG	$LOCAL+^XD04(R11), SYS$BINTIM
    04C1	BLBC	R0, .310
									    ; 0428
    04C4  L$OCBF:
									    ; 0429
    04C4	CALLG	$LOCAL+^XD10(R11), SYS$ASCTIM
									    ; 0430
    04CD	PUSHAL	.104
    04D3	MNEGL	#2, -(SP)
    04D6	CALLS	#2, FOR$WRITE_SF
    04DD	PUSHAB	$LOCAL+^XC28(R11)
    04E0	CALLS	#1, FOR$IO_T_DS
    04E7	CALLS	#0, FOR$IO_END
									    ; 0431
    04EE  .320:
    04EE	MOVC5	#0, (SP), #^X20, #24, TIME(R11)
									    ; 0432
    04F5	PUSHAL	.101
    04FB	MNEGL	#2, -(SP)
    04FE	CALLS	#2, FOR$WRITE_SF
    0505	PUSHAB	$LOCAL+^XD24(R11)
    0509	CALLS	#1, FOR$IO_T_DS
    0510	CALLS	#0, FOR$IO_END
									    ; 0433
    0517	PUSHAL	.102
    051D	MNEGL	#3, -(SP)
    0520	CALLS	#2, FOR$READ_SF
    0527	PUSHAW	Q(R11)
    052A	CALLS	#1, FOR$IO_W_R
    0531	PUSHAB	$LOCAL+^XC28(R11)
    0534	CALLS	#1, FOR$IO_T_DS
    053B	CALLS	#0, FOR$IO_END
									    ; 0434
    0542  .330:
									    ; 0435
    0542	TSTW	Q(R11)
    0545	BEQL	L$OCLG
									    ; 0436
    0547	CVTWL	Q(R11), R0
    054B	DECL	R0
    054D	CMPB	TIME(R11)[R0], #32
    0553	BNEQ	L$OCBH
									    ; 0437
    0555	DECW	Q(R11)
									    ; 0438
    0558	BRB	.330
									    ; 0439
    055A  L$OCBH:
									    ; 0440

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 51  
					ERRPRT.FOR.89       

    055A  L$OCLG:
									    ; 0441
    055A	TSTW	Q(R11)
    055D	BNEQ	L$OCHH
									    ; 0442
    055F	MOVC5	#23, $PDATA+^X6CC, #^X20, #24, TIME(R11)
									    ; 0443
    056A	MOVW	#24, Q(R11)
									    ; 0444
    056E  L$OCHH:
									    ; 0445
    056E	CVTWL	Q(R11), R0
    0572	MOVW	R0, $LOCAL+^XCFC(R11)
    0577	CALLG	$LOCAL+^XD2C(R11), SYS$BINTIM
    0580	BLBS	R0, $CODE+^X586
    0583	BRW	.320
									    ; 0446
    0586	CALLG	$LOCAL+^XD38(R11), SYS$ASCTIM
									    ; 0447
    058F	PUSHAL	.104
    0595	MNEGL	#2, -(SP)
    0598	CALLS	#2, FOR$WRITE_SF
    059F	PUSHAB	$LOCAL+^XC28(R11)
    05A2	CALLS	#1, FOR$IO_T_DS
    05A9	CALLS	#0, FOR$IO_END
									    ; 0448
    05B0  .399:
									    ; 0450
    05B0  .500:
    05B0	CLRL	I(R11)
    05B2  L$OCPI:
									    ; 0451
    05B2	MOVL	I(R11), R0
    05B5	CLRB	EMB[R0]
									    ; 0452
    05BC	AOBLEQ	#499, I(R11), L$OCPI
									    ; 0453
    05C4	CLRW	Q(R11)
									    ; 0454
    05C7	CLRB	MAJENT(R11)
									    ; 0455
    05CA	CLRB	MINENT(R11)
									    ; 0456
    05CD	CLRB	MAJDEV(R11)
									    ; 0457
    05D0	CLRB	MINDEV(R11)
									    ; 0458
    05D3	CLRL	L_QUESTION
									    ; 0459
    05D9	CLRB	DEVICE(R11)
									    ; 0460
    05DC	INCW	RECCNT
									    ; 0461
    05E2	PUSHAL	.90100
    05E6	CLRL	-(SP)
    05E8	PUSHAL	.511

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 52  
					ERRPRT.FOR.89       

    05EE	PUSHL	#1
    05F0	CALLS	#4, FOR$READ_SF
    05F7	PUSHAW	Q(R11)
    05FA	CALLS	#1, FOR$IO_W_R
    0601	SUBW3	#1, Q(R11), R0
    0606	CMPW	R0, #499
    060B	BLEQ	$CODE+^X612
    060D	MOVW	#499, R0
    0612	TSTW	R0
    0614	BGEQ	$CODE+^X618
    0616	CLRW	R0
    0618	CVTWL	R0, R12
    061B	CLRL	I(R11)
    061D  L$OCML:
    061D	MOVL	I(R11), R0
    0620	PUSHAB	EMB[R0]
    0627	CALLS	#1, FOR$IO_B_R
    062E	AOBLEQ	R12, I(R11), L$OCML
    0632	CALLS	#0, FOR$IO_END
									    ; 0463
    0639	MOVAL	EMB, R12
    0640	CVTBL	EMB$B_DV_ENTRY(R12), I(R11)
									    ; 0464
    0644	BICL3	#^XFFFFFF7F, I(R11), R0
    064C	CMPL	R0, #128
    0653	BNEQ	L$OCAO
									    ; 0465
    0655	BICB2	#^X80, EMB$B_DV_ENTRY(R12)
									    ; 0466
    065A	MNEGL	#1, L_QUESTION
									    ; 0467
    0661	INCW	W_QUESTION(R11)
									    ; 0468
    0664  L$OCAO:
									    ; 0469
    0664	CVTBL	EMB$B_DV_ENTRY(R12), R0
    0668	BICW3	#^XFFFE, FLAGS(R11)[R0], R0
    0671	DECW	R0
    0673	BEQL	$CODE+^X678
    0675	BRW	.90000
									    ; 0470
    0678	CMPB	EMB$B_DV_ENTRY(R12), #1
    067C	BEQL	L$DFMH
    067E	CMPB	EMB$B_DV_ENTRY(R12), #96
    0683	BNEQ	L$EDGA
    0685  L$DFMH:
									    ; 0471
    0685	MNEGB	#1, DEVICE(R11)
									    ; 0472
    0689	CVTBL	EMB$B_DV_CLASS(R12), R0
    068D	BICW3	#^XFFFD, FLAGS(R11)[R0], R0
    0696	CMPW	R0, #2
    0699	BEQL	$CODE+^X69E
    069B	BRW	.90000
									    ; 0473
    069E	CVTBL	EMB$B_DV_TYPE(R12), R0

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 53  
					ERRPRT.FOR.89       

    06A2	BICW3	#^XFFFB, FLAGS(R11)[R0], R0
    06AB	CMPW	R0, #4
    06AE	BEQL	$CODE+^X6B3
    06B0	BRW	.90000
									    ; 0474
    06B3  L$EDGA:
									    ; 0475
    06B3	CALLG	$LOCAL+^XD4C(R11), TIMCMP
    06BC	TSTL	R0
    06BE	BGEQ	$CODE+^X6C3
    06C0	BRW	.500
									    ; 0477
    06C3	CALLG	$LOCAL+^XD58(R11), TIMCMP
    06CC	TSTL	R0
    06CE	BLEQ	$CODE+^X6D3
    06D0	BRW	.500
									    ; 0479
    06D3	DIVB3	#32, EMB$B_DV_ENTRY(R12), MAJENT(R11)
									    ; 0480
    06D9	MULB3	#32, MAJENT(R11), R0
    06DE	SUBB3	R0, EMB$B_DV_ENTRY(R12), MINENT(R11)
									    ; 0481
    06E4	TSTW	SELDEVLEN(R11)
    06E7	BGTR	$CODE+^X6EC
    06E9	BRW	L$EDIB
									    ; 0482
    06EC	CLRB	MATCH(R11)
									    ; 0483
    06EF	BBC	#0, DEVICE(R11), L$EDOB
									    ; 0484
    06F4	CVTBW	EMB$T_DV_NAME, R0
    06FB	CMPW	SELDEVLEN(R11), R0
    06FF	BGTR	L$EDEC
									    ; 0485
    0701	CVTWL	SELDEVLEN(R11), R12
    0705	MOVL	#1, I(R11)
    0708  L$EDAD:
									    ; 0486
    0708	MOVL	I(R11), R0
    070B	CMPB	SELDEVNAM(R11)[R0], EMB$T_DV_NAME[R0]
    0716	BEQL	$CODE+^X71B
    0718	BRW	.595
									    ; 0487
    071B	AOBLEQ	R12, I(R11), L$EDAD
									    ; 0488
    071F	TSTW	W_UNIT(R11)
    0722	BLSS	L$DFCI
    0724	CMPW	W_UNIT(R11), EMB$W_DV_UNIT
    072C	BEQL	$CODE+^X731
    072E	BRW	.595
    0731  L$DFCI:
									    ; 0489
    0731	MNEGB	#1, MATCH(R11)
									    ; 0490
    0735  L$EDEC:
									    ; 0491

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 54  
					ERRPRT.FOR.89       

    0735	BRW	.595
									    ; 0492
    0738  L$EDOB:
									    ; 0493
    0738	ADDB3	#1, MAJENT(R11), R0
    073D	CASEB	R0, #1, #3
    0741	.DISPL	.590
    0743	.DISPL	.591
    0745	.DISPL	.592
    0747	.DISPL	.591
									    ; 0494
    0749	BRW	.595
									    ; 0495
    074C  .590:
									    ; 0496
    074C	CMPB	SELDEVNAM+1(R11), #67
    0752	BNEQ	L$EDHG
    0754	CMPB	SELDEVNAM+2(R11), #80
    075A	BNEQ	L$EDHG
    075C	MNEGB	#1, MATCH(R11)
    0760  L$EDHG:
									    ; 0497
    0760	BRB	.595
									    ; 0498
    0762  .591:
									    ; 0499
    0762	CMPB	SELDEVNAM+1(R11), #83
    0768	BNEQ	L$EDNG
    076A	CMPB	SELDEVNAM+2(R11), #89
    0770	BNEQ	L$EDNG
    0772	CMPB	MINENT(R11), #6
    0776	BEQL	L$EDNG
    0778	MNEGB	#1, MATCH(R11)
    077C  L$EDNG:
									    ; 0500
    077C	BRB	.595
									    ; 0501
    077E  .592:
									    ; 0502
    077E	CMPB	SELDEVNAM+1(R11), #67
    0784	BNEQ	L$EDDH
    0786	CMPB	SELDEVNAM+2(R11), #79
    078C	BNEQ	L$EDDH
									    ; 0503
    078E	MNEGB	#1, MATCH(R11)
									    ; 0504
    0792	BRB	.595
									    ; 0505
    0794  L$EDDH:
									    ; 0506
    0794	CVTBW	EMB$B_VM_NAMLNG, R0
    079B	CMPW	SELDEVLEN(R11), R0
    079F	BGTR	L$EDJH
									    ; 0507
    07A1	CVTWL	SELDEVLEN(R11), R12
    07A5	MOVL	#1, I(R11)

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 55  
					ERRPRT.FOR.89       

    07A8  L$EDFI:
									    ; 0508
    07A8	MOVL	I(R11), R0
    07AB	CMPB	SELDEVNAM(R11)[R0], EMB$T_VM_NAMTXT-1[R0]
    07B6	BNEQ	.595
									    ; 0509
    07B8	AOBLEQ	R12, I(R11), L$EDFI
									    ; 0510
    07BC	TSTW	W_UNIT(R11)
    07BF	BLSS	L$DFII
    07C1	CMPW	W_UNIT(R11), EMB$W_VM_UNIT
    07C9	BNEQ	.595
    07CB  L$DFII:
									    ; 0511
    07CB	MNEGB	#1, MATCH(R11)
									    ; 0512
    07CF  L$EDJH:
									    ; 0513
    07CF	BRB	.595
									    ; 0514
    07D1  .595:
									    ; 0515
    07D1	CMPB	MATCH(R11), NEGATE(R11)
    07D6	BNEQ	$CODE+^X7DB
    07D8	BRW	.500
									    ; 0516
    07DB  L$EDIB:
									    ; 0517
    07DB	INCW	RECPROC(R11)
									    ; 0518
    07DE	CALLG	$LOCAL+^XD64(R11), TIMCMP
    07E7	MOVAL	EMB, R12
    07EE	TSTL	R0
    07F0	BGEQ	.630
									    ; 0519
    07F2	MOVL	EMB$_DV_ERTIME(R12), ERTIMELO(R11)
									    ; 0520
    07F8	MOVL	EMB$_DV_ERTIME+4(R12), ERTIMELO+4(R11)
    07FE  .630:
									    ; 0522
    07FE	CALLG	$LOCAL+^XD70(R11), TIMCMP
    0807	TSTL	R0
    0809	BLEQ	.660
									    ; 0523
    080B	MOVL	EMB$_DV_ERTIME(R12), ERTIMEHI(R11)
									    ; 0524
    0811	MOVL	EMB$_DV_ERTIME+4(R12), ERTIMEHI+4(R11)
    0817  .660:
									    ; 0526
    0817	CALLG	$LOCAL+^XD7C(R11), SYS$NUMTIM
    0820	BLBC	R0, L$EDGL
    0823	CVTBL	EMB$B_DV_ENTRY(R12), R0
    0827	BICW3	#^XFFF7, FLAGS(R11)[R0], R0
    0830	CMPW	R0, #8
    0833	BNEQ	L$EDGL
									    ; 0527

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 56  
					ERRPRT.FOR.89       

    0835	CVTWL	TIMBUF+6(R11), R0
    083A	INCL	HISTO(R11)[R0]
									    ; 0528
    083F  L$EDGL:
									    ; 0529
    083F	MOVB	MAJENT(R11), R10
    0843	BLEQ	L$EDML
									    ; 0530
    0845	CVTBL	R10, R0
    0848	INCW	SUMMARY+14(R11)[R0]
									    ; 0531
    084D	BRB	L$EDCM
    084F  L$EDML:
									    ; 0532
    084F	SUBB3	MINENT(R11), #1, R0
    0854	CVTBL	R0, R0
    0857	INCW	SUMMARY+14(R11)[R0]
									    ; 0533
    085C  L$EDCM:
									    ; 0534
    085C	BBC	#0, DEVICE(R11), L$EDIM
									    ; 0535
    0861	CALLG	$LOCAL+^XD88(R11), DEVCHK
    086A	CVTWL	R0, I(R11)
									    ; 0536
    086D	CALLG	$LOCAL+^XD90(R11), MTH$IMOD
    0876	CVTWL	R0, J(R11)
									    ; 0537
    087A	BICL3	#^XFFFFFFFE, IOSB(R12), K(R11)
									    ; 0538
    0884	MULL3	#8, K(R11), R0
    0889	ADDL2	J(R11), R0
    088D	MULL2	#20, R0
    0890	ADDL2	I(R11), R0
    0893	INCW	DEVSUM-2(R11)[R0]
									    ; 0539
    0898  L$EDIM:
									    ; 0540
    0898	CMPB	OPTION(R11), #82
    089D	BNEQ	$CODE+^X8A2
    089F	BRW	.500
									    ; 0541
    08A2	ADDB3	#1, R10, R0
    08A6	CASEB	R0, #1, #4
    08AA	.DISPL	.1000
    08AC	.DISPL	.2000
    08AE	.DISPL	.3000
    08B0	.DISPL	.4000
    08B2	.DISPL	.5000
									    ; 0542
    08B4	BRW	.90000
									    ; 0543
    08B7  .1000:
									    ; 0544
    08B7	CASEB	MINENT(R11), #1, #7
    08BC	.DISPL	.1001

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 57  
					ERRPRT.FOR.89       

    08BE	.DISPL	.1002
    08C0	.DISPL	.90000
    08C2	.DISPL	.1004
    08C4	.DISPL	.1005
    08C6	.DISPL	.1006
    08C8	.DISPL	.1007
    08CA	.DISPL	.1008
									    ; 0545
    08CC	BRW	.90000
									    ; 0546
    08CF  .1001:
									    ; 0547
    08CF	DIVB3	#32, EMB$B_DV_CLASS, MAJDEV(R11)
									    ; 0548
    08D8	MULB3	#32, MAJDEV(R11), R0
    08DD	SUBB3	R0, EMB$B_DV_CLASS, MINDEV(R11)
									    ; 0549
    08E6	ADDB3	#1, MAJDEV(R11), R0
    08EB	CASEB	R0, #1, #2
    08EF	.DISPL	.1010
    08F1	.DISPL	.1011
    08F3	.DISPL	.1012
									    ; 0550
    08F5	BRW	.90000
									    ; 0551
    08F8  .1002:
									    ; 0552
    08F8	MOVB	OPTION(R11), R12
    08FC	CMPB	R12, #67
    0900	BEQL	L$JDOF
									    ; 0553
    0902	CALLG	$LOCAL+^XF30(R11), HEADER
									    ; 0554
    090B	CMPB	R12, #83
    090F	BNEQ	L$JDKH
    0911	CALLG	$LOCAL+^XDA4(R11), MACCHK
    091A  L$JDKH:
									    ; 0555
    091A	CMPB	R12, #66
    091E	BNEQ	L$JDII
    0920	CALLG	$LOCAL+^XDA4(R11), B_MACCHK
    0929  L$JDII:
									    ; 0556
    0929	BRB	L$JDGJ
    092B  L$JDOF:
									    ; 0557
    092B	CALLG	$LOCAL+^XDA4(R11), C_MACCHK
									    ; 0558
    0934  L$JDGJ:
									    ; 0559
    0934	BRW	.500
									    ; 0560
    0937  .1004:
									    ; 0561
    0937	MOVB	OPTION(R11), R12
    093B	CMPB	R12, #67

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 58  
					ERRPRT.FOR.89       

    093F	BEQL	L$JDEK
									    ; 0562
    0941	CALLG	$LOCAL+^XF3C(R11), HEADER
									    ; 0563
    094A	CMPB	R12, #83
    094E	BNEQ	L$JDIL
    0950	CALLG	$LOCAL+^XDA4(R11), SBI_FAULT
    0959  L$JDIL:
									    ; 0564
    0959	CMPB	R12, #66
    095D	BNEQ	L$JDGM
    095F	CALLG	$LOCAL+^XDA4(R11), B_SBI_FAULT
    0968  L$JDGM:
									    ; 0565
    0968	BRB	L$JDEN
    096A  L$JDEK:
									    ; 0566
    096A	CALLG	$LOCAL+^XDA4(R11), C_SBI_FAULT
									    ; 0567
    0973  L$JDEN:
									    ; 0568
    0973	BRW	.500
									    ; 0569
    0976  .1005:
									    ; 0570
    0976	MOVB	OPTION(R11), R12
    097A	CMPB	R12, #67
    097E	BEQL	L$JDCO
									    ; 0571
    0980	CALLG	$LOCAL+^XF48(R11), HEADER
									    ; 0572
    0989	CMPB	R12, #83
    098D	BNEQ	L$JDGP
    098F	CALLG	$LOCAL+^XDA4(R11), ECC_ALERT
    0998  L$JDGP:
									    ; 0573
    0998	CMPB	R12, #66
    099C	BNEQ	L$MDIA
    099E	CALLG	$LOCAL+^XDA4(R11), B_ECC_ALERT
    09A7  L$MDIA:
									    ; 0574
    09A7	BRB	L$MDGB
    09A9  L$JDCO:
									    ; 0575
    09A9	CALLG	$LOCAL+^XDA4(R11), C_ECC_ALERT
									    ; 0576
    09B2  L$MDGB:
									    ; 0577
    09B2	BRW	.500
									    ; 0578
    09B5  .1006:
									    ; 0579
    09B5	MOVB	OPTION(R11), R12
    09B9	CMPB	R12, #67
    09BD	BEQL	L$MDEC
									    ; 0580

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 59  
					ERRPRT.FOR.89       

    09BF	CALLG	$LOCAL+^XF54(R11), HEADER
									    ; 0581
    09C8	CMPB	R12, #83
    09CC	BNEQ	L$MDID
    09CE	CALLG	$LOCAL+^XDA4(R11), ECC_ALERT
    09D7  L$MDID:
									    ; 0582
    09D7	CMPB	R12, #66
    09DB	BNEQ	L$MDOD
    09DD	CALLG	$LOCAL+^XDA4(R11), B_ECC_ALERT
    09E6  L$MDOD:
									    ; 0583
    09E6	BRB	L$MDEE
    09E8  L$MDEC:
									    ; 0584
    09E8	CALLG	$LOCAL+^XDA4(R11), C_ECC_ALERT
									    ; 0585
    09F1  L$MDEE:
									    ; 0586
    09F1	BRW	.500
									    ; 0587
    09F4  .1007:
									    ; 0588
    09F4	MOVB	OPTION(R11), R12
    09F8	CMPB	R12, #67
    09FC	BEQL	L$MDKE
									    ; 0589
    09FE	CALLG	$LOCAL+^XF60(R11), HEADER
									    ; 0590
    0A07	CMPB	R12, #83
    0A0B	BNEQ	L$MDOF
    0A0D	CALLG	$LOCAL+^XDA4(R11), SBI_FAULT
    0A16  L$MDOF:
									    ; 0591
    0A16	CMPB	R12, #66
    0A1A	BNEQ	L$MDEG
    0A1C	CALLG	$LOCAL+^XDA4(R11), B_SBI_FAULT
    0A25  L$MDEG:
									    ; 0592
    0A25	BRB	L$MDKG
    0A27  L$MDKE:
									    ; 0593
    0A27	CALLG	$LOCAL+^XDA4(R11), C_SBI_FAULT
									    ; 0594
    0A30  L$MDKG:
									    ; 0595
    0A30	BRW	.500
									    ; 0596
    0A33  .1008:
									    ; 0597
    0A33	MOVB	OPTION(R11), R12
    0A37	CMPB	R12, #67
    0A3B	BEQL	L$MDAH
									    ; 0598
    0A3D	CALLG	$LOCAL+^XF6C(R11), HEADER
									    ; 0599

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 60  
					ERRPRT.FOR.89       

    0A46	CMPB	R12, #83
    0A4A	BNEQ	L$MDEI
    0A4C	CALLG	$LOCAL+^XDA4(R11), ECC_ALERT
    0A55  L$MDEI:
									    ; 0600
    0A55	CMPB	R12, #66
    0A59	BNEQ	L$MDKI
    0A5B	CALLG	$LOCAL+^XDA4(R11), B_ECC_ALERT
    0A64  L$MDKI:
									    ; 0601
    0A64	BRB	L$MDAJ
    0A66  L$MDAH:
									    ; 0602
    0A66	CALLG	$LOCAL+^XDA4(R11), C_ECC_ALERT
									    ; 0603
    0A6F  L$MDAJ:
									    ; 0604
    0A6F	BRW	.500
									    ; 0605
    0A72  .1010:
									    ; 0606
    0A72	CASEB	MINDEV(R11), #1, #1
    0A77	.DISPL	.1100
    0A79	.DISPL	.1200
									    ; 0607
    0A7B  .1011:
									    ; 0608
    0A7B  .1012:
									    ; 0609
    0A7B	BRW	.90000
									    ; 0610
    0A7E  .1100:
									    ; 0611
    0A7E	MOVAL	EMB, R12
    0A85	CASEB	EMB$B_DV_TYPE(R12), #1, #5
    0A8A	.DISPL	.1110
    0A8C	.DISPL	.1110
    0A8E	.DISPL	.1150
    0A90	.DISPL	.1150
    0A92	.DISPL	.1150
    0A94	.DISPL	.1170
									    ; 0612
    0A96	CMPB	EMB$T_DV_NAME+1(R12), #68
    0A9B	BNEQ	L$DFOI
    0A9D	CMPB	EMB$T_DV_NAME+2(R12), #77
    0AA2	BEQL	.1110
    0AA4  L$DFOI:
									    ; 0613
    0AA4	CMPB	EMB$T_DV_NAME+1(R12), #68
    0AA9	BNEQ	L$DFEJ
    0AAB	CMPB	EMB$T_DV_NAME+2(R12), #66
    0AB0	BEQL	.1150
    0AB2  L$DFEJ:
									    ; 0614
    0AB2	CMPB	EMB$T_DV_NAME+1(R12), #68
    0AB7	BNEQ	L$DFKJ

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 61  
					ERRPRT.FOR.89       

    0AB9	CMPB	EMB$T_DV_NAME+2(R12), #82
    0ABE	BNEQ	$CODE+^XAC3
    0AC0	BRW	.1170
    0AC3  L$DFKJ:
									    ; 0615
    0AC3	BRW	.90000
									    ; 0616
    0AC6  .1110:
									    ; 0617
    0AC6	MOVB	OPTION(R11), R12
    0ACA	CMPB	R12, #66
    0ACE	BNEQ	L$MDAM
									    ; 0618
    0AD0	CALLG	$LOCAL+^XF78(R11), DVHEAD
									    ; 0619
    0AD9	CALLG	$LOCAL+^XDDC(R11), B_RK06
									    ; 0620
    0AE2  L$MDAM:
									    ; 0621
    0AE2	CMPB	R12, #67
    0AE6	BNEQ	L$MDIO
    0AE8	CALLG	$LOCAL+^XDDC(R11), C_RK06
    0AF1  L$MDIO:
									    ; 0622
    0AF1	CMPB	R12, #83
    0AF5	BNEQ	L$MDGP
									    ; 0623
    0AF7	CALLG	$LOCAL+^XF88(R11), DVHEAD
									    ; 0624
    0B00	CALLG	$LOCAL+^XDDC(R11), RK06
									    ; 0625
    0B09	BRW	.1690
									    ; 0626
    0B0C  L$MDGP:
									    ; 0627
    0B0C	BRW	.500
									    ; 0628
    0B0F  .1150:
									    ; 0629
    0B0F	MOVB	OPTION(R11), R12
    0B13	CMPB	R12, #66
    0B17	BNEQ	L$AEAC
									    ; 0630
    0B19	CALLG	$LOCAL+^XF98(R11), DVHEAD
									    ; 0631
    0B22	CALLG	$LOCAL+^XDDC(R11), B_RP05
									    ; 0632
    0B2B  L$AEAC:
									    ; 0633
    0B2B	CMPB	R12, #67
    0B2F	BNEQ	L$AEAE
    0B31	CALLG	$LOCAL+^XDDC(R11), C_RP05
    0B3A  L$AEAE:
									    ; 0634
    0B3A	CMPB	R12, #83
    0B3E	BNEQ	L$AEOE

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 62  
					ERRPRT.FOR.89       

									    ; 0635
    0B40	CALLG	$LOCAL+^XFA8(R11), DVHEAD
									    ; 0636
    0B49	CALLG	$LOCAL+^XDDC(R11), RP05
									    ; 0637
    0B52	BRW	.1690
									    ; 0638
    0B55  L$AEOE:
									    ; 0639
    0B55	BRW	.500
									    ; 0640
    0B58  .1170:
									    ; 0641
    0B58	MOVB	OPTION(R11), R12
    0B5C	CMPB	R12, #66
    0B60	BNEQ	L$AEOG
									    ; 0642
    0B62	CALLG	$LOCAL+^XFB8(R11), DVHEAD
									    ; 0643
    0B6B	CALLG	$LOCAL+^XDDC(R11), B_RM03
									    ; 0644
    0B74  L$AEOG:
									    ; 0645
    0B74	CMPB	R12, #67
    0B78	BNEQ	L$AEOI
    0B7A	CALLG	$LOCAL+^XDDC(R11), C_RM03
    0B83  L$AEOI:
									    ; 0646
    0B83	CMPB	R12, #83
    0B87	BNEQ	L$AEMJ
									    ; 0647
    0B89	CALLG	$LOCAL+^XFC8(R11), DVHEAD
									    ; 0648
    0B92	CALLG	$LOCAL+^XDDC(R11), RM03
									    ; 0649
    0B9B	BRW	.1690
									    ; 0650
    0B9E  L$AEMJ:
									    ; 0651
    0B9E	BRW	.500
									    ; 0652
    0BA1  .1200:
									    ; 0653
    0BA1	CASEB	EMB$B_DV_TYPE, #1, #2
    0BA9	.DISPL	.1210
    0BAB	.DISPL	.1220
    0BAD	.DISPL	.90000
									    ; 0654
    0BAF  .1210:
									    ; 0655
    0BAF	MOVB	OPTION(R11), R12
    0BB3	CMPB	R12, #66
    0BB7	BNEQ	L$AENM
									    ; 0656
    0BB9	CALLG	$LOCAL+^XFD8(R11), DVHEAD
									    ; 0657

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 63  
					ERRPRT.FOR.89       

    0BC2	CALLG	$LOCAL+^XDDC(R11), B_TE16
									    ; 0658
    0BCB  L$AENM:
									    ; 0659
    0BCB	CMPB	R12, #67
    0BCF	BNEQ	L$AENO
    0BD1	CALLG	$LOCAL+^XDDC(R11), C_TE16
    0BDA  L$AENO:
									    ; 0660
    0BDA	CMPB	R12, #83
    0BDE	BNEQ	L$DEAA
									    ; 0661
    0BE0	CALLG	$LOCAL+^XFE8(R11), DVHEAD
									    ; 0662
    0BE9	CALLG	$LOCAL+^XDDC(R11), TE16
									    ; 0663
    0BF2	BRB	.1690
									    ; 0664
    0BF4  L$DEAA:
									    ; 0665
    0BF4	BRW	.500
									    ; 0666
    0BF7  .1220:
									    ; 0667
    0BF7	MOVB	OPTION(R11), R12
    0BFB	CMPB	R12, #66
    0BFF	BNEQ	L$DEAC
									    ; 0668
    0C01	CALLG	$LOCAL+^XFF8(R11), DVHEAD
									    ; 0669
    0C0A	CALLG	$LOCAL+^XDDC(R11), B_TE16
									    ; 0670
    0C13  L$DEAC:
									    ; 0671
    0C13	CMPB	R12, #67
    0C17	BNEQ	L$DEID
    0C19	CALLG	$LOCAL+^XDDC(R11), C_TE16
    0C22  L$DEID:
									    ; 0672
    0C22	CMPB	R12, #83
    0C26	BNEQ	L$DEOD
									    ; 0673
    0C28	CALLG	$LOCAL+^X1008(R11), DVHEAD
									    ; 0674
    0C31	CALLG	$LOCAL+^XDDC(R11), TE16
									    ; 0675
    0C3A	BRB	.1690
									    ; 0676
    0C3C  L$DEOD:
									    ; 0677
    0C3C	BRW	.500
									    ; 0678
    0C3F  .1690:
									    ; 0679
    0C3F	CALLG	$LOCAL+^XDA4(R11), DVTAIL
									    ; 0680

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 64  
					ERRPRT.FOR.89       

    0C48	BRW	.500
									    ; 0681
    0C4B  .2000:
									    ; 0682
    0C4B	CMPB	OPTION(R11), #67
    0C50	BEQL	L$DEOF
									    ; 0683
    0C52	CVTBL	MINENT(R11), R0
    0C56	MULL2	#25, R0
    0C59	MOVAB	SYSTEMERROR(R11)[R0], $LOCAL+^XE0C(R11)
    0C61	CALLG	$LOCAL+^XE10(R11), HEADER
									    ; 0684
    0C6A	ADDB3	#1, MINENT(R11), R0
    0C6F	CASEB	R0, #1, #10
    0C73	.DISPL	.2100
    0C75	.DISPL	.2200
    0C77	.DISPL	.2300
    0C79	.DISPL	.2400
    0C7B	.DISPL	.2100
    0C7D	.DISPL	.2500
    0C7F	.DISPL	.2400
    0C81	.DISPL	.2600
    0C83	.DISPL	.2700
    0C85	.DISPL	.2600
    0C87	.DISPL	.2600
									    ; 0685
    0C89	BRB	L$DELJ
    0C8B  L$DEOF:
									    ; 0686
    0C8B	BRW	.90000
									    ; 0687
    0C8E  L$DELJ:
									    ; 0688
    0C8E  .2100:
									    ; 0689
    0C8E	CALLG	$LOCAL+^XE1C(R11), LINCHK
									    ; 0690
    0C97	PUSHAL	.2111
    0C9D	PUSHL	#2
    0C9F	CALLS	#2, FOR$WRITE_SF
    0CA6	PUSHAL	EMB$L_SU_DAYTIM
    0CAC	CALLS	#1, FOR$IO_L_R
    0CB3	CALLS	#0, FOR$IO_END
									    ; 0692
    0CBA	BRW	.500
									    ; 0693
    0CBD  .2200:
									    ; 0694
    0CBD  .2300:
									    ; 0695
    0CBD  .2400:
									    ; 0696
    0CBD	BRW	.500
									    ; 0697
    0CC0  .2500:
									    ; 0698

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 65  
					ERRPRT.FOR.89       

    0CC0	CMPB	OPTION(R11), #83
    0CC5	BNEQ	L$DEPK
    0CC7	CALLG	$LOCAL+^XDA4(R11), CRASH_RESTART
    0CD0  L$DEPK:
									    ; 0699
    0CD0	BRW	.500
									    ; 0700
    0CD3  .2600:
									    ; 0701
    0CD3	DIVW3	#62, EMB$W_SS_MSGSZ, R10
									    ; 0702
    0CDB	MULW3	#62, R10, R0
    0CDF	CMPW	EMB$W_SS_MSGSZ, R0
    0CE6	BEQL	L$DENL
    0CE8	INCW	R10
    0CEA  L$DENL:
									    ; 0703
    0CEA	ADDW3	#2, R10, -(SP)
    0CEE	MOVL	SP, $LOCAL+^XE30(R11)
    0CF3	CALLG	$LOCAL+^XE28(R11), LINCHK
    0CFC	ADDL2	#2, SP
									    ; 0704
    0CFF	PUSHAL	.2611
    0D05	PUSHL	#2
    0D07	CALLS	#2, FOR$WRITE_SF
    0D0E	CALLS	#0, FOR$IO_END
									    ; 0706
    0D15	TSTW	R10
    0D17	BEQL	L$DEJM
									    ; 0707
    0D19	PUSHAL	.2621
    0D1F	PUSHL	#2
    0D21	CALLS	#2, FOR$WRITE_SF
    0D28	CVTWL	EMB$W_SS_MSGSZ, R12
    0D2F	MOVL	#1, I(R11)
    0D32  L$DEFN:
    0D32	MOVL	I(R11), R0
    0D35	PUSHAB	MESSAGE-1[R0]
    0D3C	CALLS	#1, FOR$IO_B_R
    0D43	AOBLEQ	R12, I(R11), L$DEFN
    0D47	CALLS	#0, FOR$IO_END
									    ; 0709
    0D4E	BRB	L$DEOO
    0D50  L$DEJM:
									    ; 0710
    0D50	PUSHAL	.2631
    0D56	PUSHL	#2
    0D58	CALLS	#2, FOR$WRITE_SF
    0D5F	CALLS	#0, FOR$IO_END
									    ; 0712
    0D66  L$DEOO:
    0D66	MOVW	R10, SIZE(R11)
									    ; 0713
    0D6A	BRW	.500
									    ; 0714
    0D6D  .2700:

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 66  
					ERRPRT.FOR.89       

									    ; 0715
    0D6D	CMPB	OPTION(R11), #83
    0D72	BNEQ	L$DEKP
    0D74	CALLG	$LOCAL+^XDA4(R11), BUGCHECK
    0D7D  L$DEKP:
									    ; 0716
    0D7D	BRW	.500
									    ; 0717
    0D80  .3000:
									    ; 0718
    0D80	ADDB3	#1, MINENT(R11), R0
    0D85	CASEB	R0, #1, #3
    0D89	.DISPL	.3100
    0D8B	.DISPL	.3300
    0D8D	.DISPL	.3500
    0D8F	.DISPL	.3700
									    ; 0719
    0D91	BRW	.90000
									    ; 0720
    0D94  .3100:
									    ; 0721
    0D94	CALLG	$LOCAL+^XE34(R11), DEVCHK
    0D9D	MOVW	R0, INDEX(R11)
									    ; 0722
    0DA1	MOVL	#1, I(R11)
    0DA4	CVTWL	R0, R10
    0DA7	MOVAL	EMB, R12
    0DAE  L$HEMC:
									    ; 0723
    0DAE	MULL3	#8, I(R11), R0
    0DB2	CVTWL	EMB$W_VM_UNIT(R12), R1
    0DB6	ADDL2	R1, R0
    0DB9	MULL2	#20, R0
    0DBC	ADDL2	R10, R0
    0DBF	MOVL	I(R11), R1
    0DC2	MOVB	EMB$T_VM_LABEL-1(R12)[R1], VOLNAM-161[R0]
									    ; 0724
    0DCC	AOBLEQ	#12, I(R11), L$HEMC
									    ; 0725
    0DD0	CVTWL	EMB$W_VM_UNIT(R12), R0
    0DD4	MULL2	#20, R0
    0DD7	ADDL2	R10, R0
    0DDA	MOVL	EMB$L_VM_OPRCNT(R12), L_OLD_OPCNT-4(R11)[R0]
									    ; 0726
    0DE1	CVTWL	EMB$W_VM_UNIT(R12), R0
    0DE5	MULL2	#20, R0
    0DE8	ADDL2	R10, R0
    0DEB	MOVL	EMB$L_VM_ERRCNT(R12), L_OLD_ERRCNT-4(R11)[R0]
									    ; 0727
    0DF2	CMPB	OPTION(R11), #67
    0DF7	BEQL	L$HEND
									    ; 0728
    0DF9	CALLG	$LOCAL+^X1018(R11), HEADER
									    ; 0729
    0E02	CALLG	$LOCAL+^XE1C(R11), LINCHK
									    ; 0730

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 67  
					ERRPRT.FOR.89       

    0E0B	PUSHAL	.3171
    0E11	PUSHL	#2
    0E13	CALLS	#2, FOR$WRITE_SF
    0E1A	MOVL	#1, R12
    0E1D  L$HEPF:
    0E1D	PUSHAB	EMB$T_VM_LABEL-1[R12]
    0E24	CALLS	#1, FOR$IO_B_R
    0E2B	AOBLEQ	#12, R12, L$HEPF
    0E2F	CVTBL	EMB$B_VM_NAMLNG, R10
    0E36	MOVL	#1, R12
    0E39  L$HEAH:
    0E39	PUSHAB	EMB$T_VM_NAMTXT-1[R12]
    0E40	CALLS	#1, FOR$IO_B_R
    0E47	AOBLEQ	R10, R12, L$HEAH
    0E4B	MOVL	R12, L(R11)
    0E4F	PUSHAW	EMB$W_VM_UNIT
    0E55	CALLS	#1, FOR$IO_W_R
    0E5C	CALLS	#0, FOR$IO_END
									    ; 0732
    0E63  L$HEND:
									    ; 0733
    0E63	BRW	.500
									    ; 0734
    0E66  .3300:
									    ; 0735
    0E66	CALLG	$LOCAL+^XE34(R11), DEVCHK
    0E6F	MOVW	R0, INDEX(R11)
									    ; 0736
    0E73	MOVAL	EMB, R9
    0E7A	CVTWL	EMB$W_VM_UNIT(R9), R1
    0E7E	MULL2	#20, R1
    0E81	CVTWL	R0, R8
    0E84	ADDL2	R8, R1
    0E87	SUBL3	L_OLD_OPCNT-4(R11)[R1], EMB$L_VM_OPRCNT(R9), I(R11)
									    ; 0737
    0E8F	CVTWL	EMB$W_VM_UNIT(R9), R0
    0E93	MULL2	#20, R0
    0E96	ADDL2	R8, R0
    0E99	SUBL3	L_OLD_ERRCNT-4(R11)[R0], EMB$L_VM_ERRCNT(R9), J(R11)
									    ; 0738
    0EA2	CVTWL	EMB$W_VM_UNIT(R9), R0
    0EA6	MULL2	#20, R0
    0EA9	ADDL2	R8, R0
    0EAC	CLRL	L_OLD_OPCNT-4(R11)[R0]
									    ; 0739
    0EB1	CVTWL	EMB$W_VM_UNIT(R9), R0
    0EB5	MULL2	#20, R0
    0EB8	ADDL2	R8, R0
    0EBB	CLRL	L_OLD_ERRCNT-4(R11)[R0]
									    ; 0740
    0EC0	CMPB	OPTION(R11), #67
    0EC5	BNEQ	$CODE+^XECA
    0EC7	BRW	L$HEEJ
									    ; 0741
    0ECA	CALLG	$LOCAL+^X1024(R11), HEADER
									    ; 0742

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 68  
					ERRPRT.FOR.89       

    0ED3	CALLG	$LOCAL+^XE1C(R11), LINCHK
									    ; 0743
    0EDC	PUSHAL	.3171
    0EE2	PUSHL	#2
    0EE4	CALLS	#2, FOR$WRITE_SF
    0EEB	MOVL	#1, R12
    0EEE  L$HEIK:
    0EEE	PUSHAB	EMB$T_VM_LABEL-1(R9)[R12]
    0EF2	CALLS	#1, FOR$IO_B_R
    0EF9	AOBLEQ	#12, R12, L$HEIK
    0EFD	CVTBL	EMB$B_VM_NAMLNG(R9), R10
    0F01	MOVL	#1, R12
    0F04  L$HEJL:
    0F04	PUSHAB	EMB$T_VM_NAMTXT-1(R9)[R12]
    0F08	CALLS	#1, FOR$IO_B_R
    0F0F	AOBLEQ	R10, R12, L$HEJL
    0F13	MOVL	R12, L(R11)
    0F17	PUSHAW	EMB$W_VM_UNIT(R9)
    0F1A	CALLS	#1, FOR$IO_W_R
    0F21	CALLS	#0, FOR$IO_END
									    ; 0744
    0F28	CVTWL	EMB$W_VM_UNIT(R9), R0
    0F2C	MULL2	#20, R0
    0F2F	ADDL2	R8, R0
    0F32	TSTB	VOLNAM-1[R0]
    0F39	BNEQ	L$HECN
									    ; 0745
    0F3B	CALLG	$LOCAL+^XE4C(R11), LINCHK
									    ; 0746
    0F44	PUSHAL	.90151
    0F4A	PUSHL	#2
    0F4C	CALLS	#2, FOR$WRITE_SF
    0F53	PUSHAB	$LOCAL+^XE58(R11)
    0F57	CALLS	#1, FOR$IO_T_DS
    0F5E	CALLS	#0, FOR$IO_END
									    ; 0747
    0F65	CLRL	I(R11)
									    ; 0748
    0F67	CLRL	J(R11)
									    ; 0749
    0F6A  L$HECN:
									    ; 0750
    0F6A	CALLG	$LOCAL+^XE60(R11), LINCHK
									    ; 0751
    0F73	PUSHAL	.3371
    0F79	PUSHL	#2
    0F7B	CALLS	#2, FOR$WRITE_SF
    0F82	PUSHAL	EMB$L_VM_OPRCNT(R9)
    0F85	CALLS	#1, FOR$IO_L_R
    0F8C	PUSHAL	I(R11)
    0F8E	CALLS	#1, FOR$IO_L_R
    0F95	PUSHAL	EMB$L_VM_ERRCNT(R9)
    0F98	CALLS	#1, FOR$IO_L_R
    0F9F	PUSHAL	J(R11)
    0FA2	CALLS	#1, FOR$IO_L_R
    0FA9	CALLS	#0, FOR$IO_END

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 69  
					ERRPRT.FOR.89       

									    ; 0753
    0FB0  L$HEEJ:
									    ; 0754
    0FB0	MOVL	#1, I(R11)
    0FB3  L$HEKO:
									    ; 0755
    0FB3	MULL3	#8, I(R11), R0
    0FB7	CVTWL	EMB$W_VM_UNIT(R9), R1
    0FBB	ADDL2	R1, R0
    0FBE	MULL2	#20, R0
    0FC1	ADDL2	R8, R0
    0FC4	CLRB	VOLNAM-161[R0]
									    ; 0756
    0FCB	AOBLEQ	#12, I(R11), L$HEKO
									    ; 0757
    0FCF	BRW	.500
									    ; 0758
    0FD2  .3500:
									    ; 0759
    0FD2  .3700:
									    ; 0760
    0FD2  .4000:
									    ; 0761
    0FD2	CMPB	MINENT(R11), #16
    0FD6	BNEQ	L$LEAA
    0FD8	CMPB	OPTION(R11), #83
    0FDD	BNEQ	L$LEAA
									    ; 0762
    0FDF	CALLG	$LOCAL+^X1030(R11), HEADER
									    ; 0763
    0FE8	CALLG	$LOCAL+^XDA4(R11), BUGCHECK
									    ; 0764
    0FF1	BRW	.500
									    ; 0765
    0FF4  L$LEAA:
									    ; 0766
    0FF4	BRW	.1001
									    ; 0767
    0FF7  .5000:
									    ; 0769
    0FF7  .90000:
									    ; 0770
    0FF7	BLBC	L_QUESTION, L$LEKB
									    ; 0771
    0FFE	DECW	W_QUESTION(R11)
									    ; 0772
    1001	INCW	W_CORRUPTED(R11)
									    ; 0773
    1004	BRB	L$LEAC
    1006  L$LEKB:
									    ; 0774
    1006	INCW	W_UNKNOWN(R11)
									    ; 0775
    1009  L$LEAC:
									    ; 0776
    1009	BBC	#0, UNKNOWN(R11), L$LEGC

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 70  
					ERRPRT.FOR.89       

									    ; 0777
    100E	BBC	#0, DEVICE(R11), L$LEMC
									    ; 0778
    1013	CALLG	$LOCAL+^X103C(R11), DVHEAD
									    ; 0779
    101C	CALLG	$LOCAL+^XDA4(R11), DVTAIL
									    ; 0780
    1025	BRB	L$LEEE
    1027  L$LEMC:
									    ; 0781
    1027	CALLG	$LOCAL+^X104C(R11), HEADER
									    ; 0782
    1030  L$LEEE:
									    ; 0783
    1030	ADDW3	#3, Q(R11), R0
    1035	DIVW3	#4, R0, -(SP)
    1039	MOVL	SP, $LOCAL+^XE8C(R11)
    103E	CALLG	$LOCAL+^XE84(R11), DUMPREG
    1047	ADDL2	#2, SP
									    ; 0784
    104A  L$LEGC:
									    ; 0785
    104A	BRW	.500
									    ; 0786
    104D  .90100:
									    ; 0787
    104D	CALLG	$LOCAL+^XE94(R11), FOR$CLOSE
									    ; 0788
    1056	CALLG	$LOCAL+^XDA4(R11), FRCTOF
									    ; 0789
    105F	TSTW	SUMMARY+14(R11)
    1063	BNEQ	$CODE+^X1068
    1065	BRW	L$LEAH
									    ; 0790
    1068	CALLG	$LOCAL+^XE4C(R11), LINCHK
									    ; 0791
    1071	PUSHAL	.90151
    1077	PUSHL	#2
    1079	CALLS	#2, FOR$WRITE_SF
    1080	PUSHAB	$LOCAL+^XE9C(R11)
    1084	CALLS	#1, FOR$IO_T_DS
    108B	CALLS	#0, FOR$IO_END
									    ; 0792
    1092	CVTWL	DEVSUMCNT, $LOCAL+^X1058(R11)
    109B	MOVL	#1, I(R11)
    109E  L$LEMH:
									    ; 0793
    109E	MOVL	#7, J(R11)
    10A2  L$LELJ:
									    ; 0794
    10A2	CLRL	K(R11)
    10A5  L$LECL:
									    ; 0795
    10A5	MULL3	#8, K(R11), R0
    10AA	ADDL2	J(R11), R0
    10AE	MULL2	#20, R0

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 71  
					ERRPRT.FOR.89       

    10B1	ADDL2	I(R11), R0
    10B4	TSTW	DEVSUM-2(R11)[R0]
    10B9	BNEQ	$CODE+^X10BE
    10BB	BRW	L$LEDM
									    ; 0796
    10BE	CALLG	$LOCAL+^XEA4(R11), LINCHK
									    ; 0797
    10C7	PUSHAL	.90153
    10CD	PUSHL	#2
    10CF	CALLS	#2, FOR$WRITE_SF
    10D6	MOVL	I(R11), R0
    10D9	CVTBL	NAMDEVSUM-1[R0], R12
    10E1	MOVL	#1, L(R11)
    10E5  L$LEPM:
    10E5	MULL3	#20, L(R11), R0
    10EA	ADDL2	I(R11), R0
    10ED	PUSHAB	NAMDEVSUM-1[R0]
    10F4	CALLS	#1, FOR$IO_B_R
    10FB	AOBLEQ	R12, L(R11), L$LEPM
    1100	CLRL	L(R11)
    1103  L$LEIO:
    1103	PUSHAL	L(R11)
    1106	CALLS	#1, FOR$IO_L_R
    110D	AOBLEQ	J(R11), L(R11), L$LEIO
    1113	CALLS	#0, FOR$IO_END
									    ; 0798
    111A	PUSHAL	.90155
    1120	PUSHL	#2
    1122	CALLS	#2, FOR$WRITE_SF
    1129	CALLS	#0, FOR$IO_END
									    ; 0799
    1130	PUSHAL	.90155
    1136	PUSHL	#2
    1138	CALLS	#2, FOR$WRITE_SF
    113F	PUSHAB	$LOCAL+^XEB0(R11)
    1143	CALLS	#1, FOR$IO_T_DS
    114A	CLRL	L(R11)
    114D  L$PEBB:
    114D	MULL3	#20, L(R11), R0
    1152	ADDL2	I(R11), R0
    1155	PUSHAW	DEVSUM-2(R11)[R0]
    115A	CALLS	#1, FOR$IO_W_R
    1161	AOBLEQ	J(R11), L(R11), L$PEBB
    1167	CALLS	#0, FOR$IO_END
									    ; 0800
    116E	PUSHAL	.90155
    1174	PUSHL	#2
    1176	CALLS	#2, FOR$WRITE_SF
    117D	PUSHAB	$LOCAL+^XEB8(R11)
    1181	CALLS	#1, FOR$IO_T_DS
    1188	CLRL	L(R11)
    118B  L$PEKC:
    118B	MULL3	#20, L(R11), R0
    1190	ADDL2	I(R11), R0
    1193	PUSHAW	DEVSUM+318(R11)[R0]
    1198	CALLS	#1, FOR$IO_W_R

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 72  
					ERRPRT.FOR.89       

    119F	AOBLEQ	J(R11), L(R11), L$PEKC
    11A5	CALLS	#0, FOR$IO_END
									    ; 0801
    11AC	PUSHAL	.90151
    11B2	PUSHL	#2
    11B4	CALLS	#2, FOR$WRITE_SF
    11BB	PUSHAB	$LOCAL+^XEC0(R11)
    11BF	CALLS	#1, FOR$IO_T_DS
    11C6	CALLS	#0, FOR$IO_END
									    ; 0802
    11CD	PUSHAL	.90151
    11D3	PUSHL	#2
    11D5	CALLS	#2, FOR$WRITE_SF
    11DC	PUSHAB	$LOCAL+^XEC0(R11)
    11E0	CALLS	#1, FOR$IO_T_DS
    11E7	CALLS	#0, FOR$IO_END
									    ; 0803
    11EE	BRB	.90150
									    ; 0804
    11F0  L$LEDM:
									    ; 0805
    11F0	ACBL	#1, #1, K(R11), L$LECL
									    ; 0806
    11F7	DECL	J(R11)
    11FA	BLSS	$CODE+^X11FF
    11FC	BRW	L$LELJ
									    ; 0807
    11FF  .90150:
    11FF	ACBL	$LOCAL+^X1058(R11), #1, I(R11), L$LEMH
									    ; 0808
    1207  L$LEAH:
									    ; 0812
    1207	CLRL	I(R11)
    1209  L$PEEF:
									    ; 0813
    1209	MOVL	I(R11), R0
    120C	TSTL	HISTO(R11)[R0]
    1211	BEQL	L$PEFG
									    ; 0814
    1213	MOVL	R0, J(R11)
									    ; 0815
    1217	BRB	.90220
									    ; 0816
    1219  L$PEFG:
									    ; 0817
    1219	AOBLEQ	#23, I(R11), L$PEEF
									    ; 0818
    121D	BRW	.90300
									    ; 0819
    1220  .90220:
									    ; 0820
    1220	MOVL	#23, I(R11)
    1223  L$PENH:
									    ; 0821
    1223	MOVL	I(R11), R0
    1226	TSTL	HISTO(R11)[R0]

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 73  
					ERRPRT.FOR.89       

    122B	BEQL	L$PEGJ
									    ; 0822
    122D	MOVL	R0, K(R11)
									    ; 0823
    1231	BRB	.90250
									    ; 0824
    1233  L$PEGJ:
									    ; 0825
    1233	ACBL	J(R11), #-1, I(R11), L$PENH
									    ; 0826
    123E  .90250:
									    ; 0827
    123E	SUBL3	J(R11), K(R11), R0
    1244	ADDL3	#3, R0, -(SP)
    1248	MOVL	SP, $LOCAL+^XE30(R11)
    124D	CALLG	$LOCAL+^XE28(R11), LINCHK
    1256	ADDL2	#4, SP
									    ; 0828
    1259	PUSHAL	.90151
    125F	PUSHL	#2
    1261	CALLS	#2, FOR$WRITE_SF
    1268	PUSHAB	$LOCAL+^XEC8(R11)
    126C	CALLS	#1, FOR$IO_T_DS
    1273	CALLS	#0, FOR$IO_END
									    ; 0829
    127A	PUSHAL	.90151
    1280	PUSHL	#2
    1282	CALLS	#2, FOR$WRITE_SF
    1289	PUSHAB	$LOCAL+^XEC0(R11)
    128D	CALLS	#1, FOR$IO_T_DS
    1294	CALLS	#0, FOR$IO_END
									    ; 0830
    129B	MOVL	K(R11), $LOCAL+^X105C(R11)
    12A1	MOVL	J(R11), I(R11)
    12A5  L$PEIK:
									    ; 0831
    12A5	MOVL	I(R11), R0
    12A8	MOVZWL	#800, R12
    12AD	CMPL	R12, HISTO(R11)[R0]
    12B3	BGEQ	$CODE+^X12BB
    12B5	MOVL	HISTO(R11)[R0], R12
									    ; 0832
    12BB	MOVL	#50, R1
    12BE	CMPL	R1, HISTO(R11)[R0]
    12C4	BLEQ	$CODE+^X12CC
    12C6	MOVL	HISTO(R11)[R0], R1
    12CC	MOVL	R1, N(R11)
									    ; 0833
    12D0	BGTR	L$PEJN
									    ; 0834
    12D2	PUSHAL	.90257
    12D8	PUSHL	#2
    12DA	CALLS	#2, FOR$WRITE_SF
    12E1	PUSHAL	I(R11)
    12E3	CALLS	#1, FOR$IO_L_R
    12EA	MOVL	I(R11), R0

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 74  
					ERRPRT.FOR.89       

    12ED	PUSHAL	HISTO(R11)[R0]
    12F2	CALLS	#1, FOR$IO_L_R
    12F9	CALLS	#0, FOR$IO_END
									    ; 0835
    1300	BRB	L$PEFO
    1302  L$PEJN:
									    ; 0836
    1302	PUSHAL	.90257
    1308	PUSHL	#2
    130A	CALLS	#2, FOR$WRITE_SF
    1311	PUSHAL	I(R11)
    1313	CALLS	#1, FOR$IO_L_R
    131A	MOVL	I(R11), R0
    131D	PUSHAL	HISTO(R11)[R0]
    1322	CALLS	#1, FOR$IO_L_R
    1329	MOVL	#1, R12
    132C  L$PELO:
    132C	PUSHAB	$LOCAL+^XED0(R11)
    1330	CALLS	#1, FOR$IO_T_DS
    1337	AOBLEQ	N(R11), R12, L$PELO
    133C	CALLS	#0, FOR$IO_END
									    ; 0837
    1343  L$PEFO:
    1343	MOVL	R12, L(R11)
									    ; 0839
    1347	ACBL	$LOCAL+^X105C(R11), #1, I(R11), L$PEIK
									    ; 0840
    134F  .90300:
									    ; 0841
    134F	CALLG	$LOCAL+^XED8(R11), LINCHK
									    ; 0842
    1358	PUSHAL	.90311
    135E	PUSHL	#2
    1360	CALLS	#2, FOR$WRITE_SF
    1367	MNEGL	#7, I(R11)
    136A  L$DFMB:
    136A	MOVL	I(R11), R0
    136D	PUSHAW	SUMMARY+14(R11)[R0]
    1372	CALLS	#1, FOR$IO_W_R
    1379	AOBLEQ	#-3, I(R11), L$DFMB
    1381	MNEGL	#1, I(R11)
    1384  L$DFNC:
    1384	MOVL	I(R11), R0
    1387	PUSHAW	SUMMARY+14(R11)[R0]
    138C	CALLS	#1, FOR$IO_W_R
    1393	AOBLEQ	#4, I(R11), L$DFNC
    1397	CALLS	#0, FOR$IO_END
									    ; 0844
    139E	CALLG	$LOCAL+^XEE4(R11), LINCHK
									    ; 0845
    13A7	PUSHAL	.90321
    13AD	PUSHL	#2
    13AF	CALLS	#2, FOR$WRITE_SF
    13B6	PUSHAW	RECPROC(R11)
    13B9	CALLS	#1, FOR$IO_W_R
    13C0	SUBW3	#1, RECCNT, R0

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 75  
					ERRPRT.FOR.89       

    13C8	CVTWL	R0, -(SP)
    13CB	CALLS	#1, FOR$IO_W_V
    13D2	CALLS	#0, FOR$IO_END
									    ; 0847
    13D9	TSTW	W_QUESTION(R11)
    13DC	BEQL	L$DFEE
									    ; 0848
    13DE	CALLG	$LOCAL+^XE1C(R11), LINCHK
									    ; 0849
    13E7	PUSHAL	.90326
    13ED	PUSHL	#2
    13EF	CALLS	#2, FOR$WRITE_SF
    13F6	PUSHAW	W_QUESTION(R11)
    13F9	CALLS	#1, FOR$IO_W_R
    1400	CALLS	#0, FOR$IO_END
									    ; 0851
    1407  L$DFEE:
									    ; 0852
    1407	TSTW	W_UNKNOWN(R11)
    140A	BEQL	L$DFAF
									    ; 0853
    140C	CALLG	$LOCAL+^XE1C(R11), LINCHK
									    ; 0854
    1415	PUSHAL	.90329
    141B	PUSHL	#2
    141D	CALLS	#2, FOR$WRITE_SF
    1424	PUSHAW	W_UNKNOWN(R11)
    1427	CALLS	#1, FOR$IO_W_R
    142E	CALLS	#0, FOR$IO_END
									    ; 0856
    1435  L$DFAF:
									    ; 0857
    1435	TSTW	W_CORRUPTED(R11)
    1438	BEQL	L$DFMF
									    ; 0858
    143A	CALLG	$LOCAL+^XE1C(R11), LINCHK
									    ; 0859
    1443	PUSHAL	.90330
    1449	PUSHL	#2
    144B	CALLS	#2, FOR$WRITE_SF
    1452	PUSHAW	W_CORRUPTED(R11)
    1455	CALLS	#1, FOR$IO_W_R
    145C	CALLS	#0, FOR$IO_END
									    ; 0861
    1463  L$DFMF:
									    ; 0862
    1463	TSTW	RECPROC(R11)
    1466	BNEQ	$CODE+^X146B
    1468	BRW	L$DFIG
									    ; 0863
    146B	CALLG	$LOCAL+^XEE4(R11), LINCHK
									    ; 0864
    1474	PUSHAL	.90151
    147A	PUSHL	#2
    147C	CALLS	#2, FOR$WRITE_SF
    1483	PUSHAB	$LOCAL+^XEC0(R11)

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 76  
					ERRPRT.FOR.89       

    1487	CALLS	#1, FOR$IO_T_DS
    148E	CALLS	#0, FOR$IO_END
									    ; 0865
    1495	CALLG	$LOCAL+^XEF0(R11), SYS$ASCTIM
									    ; 0866
    149E	PUSHAL	.90331
    14A4	PUSHL	#2
    14A6	CALLS	#2, FOR$WRITE_SF
    14AD	PUSHAB	$LOCAL+^XF04(R11)
    14B1	CALLS	#1, FOR$IO_T_DS
    14B8	PUSHAB	$LOCAL+^XC28(R11)
    14BB	CALLS	#1, FOR$IO_T_DS
    14C2	CALLS	#0, FOR$IO_END
									    ; 0867
    14C9	CALLG	$LOCAL+^XF0C(R11), SYS$ASCTIM
									    ; 0868
    14D2	PUSHAL	.90331
    14D8	PUSHL	#2
    14DA	CALLS	#2, FOR$WRITE_SF
    14E1	PUSHAB	$LOCAL+^XF20(R11)
    14E5	CALLS	#1, FOR$IO_T_DS
    14EC	PUSHAB	$LOCAL+^XC28(R11)
    14EF	CALLS	#1, FOR$IO_T_DS
    14F6	CALLS	#0, FOR$IO_END
									    ; 0870
    14FD  L$DFIG:
									    ; 0871
    14FD	CALLS	#0, TIMRE
									    ; 0872
    1504	PUSHAL	$LOCAL+^XF28(R11)
    1508	CALLS	#1, FOR$STOP
    150F  L$OCFN:
    150F	.WORD	^M<IV>
    1511	MOVW	#1, R0
    1514	CMPW	R0, Q
    151B	BGEQ	$CODE+^X1524
    151D	MOVW	Q, R0
    1524	CVTWL	R0, R0
    1527	RET	
    1528  L$HEJI:
    1528	.WORD	^M<IV>
    152A	CVTBL	EMB$B_VM_NAMLNG, R0
    1531	RET	
    1532  L$PEDE:
    1532	.WORD	^M<IV>
    1534	MOVL	I, R0
    153B	CVTBL	NAMDEVSUM-1[R0], R0
    1543	RET	
    1544  L$DFLA:
    1544	.WORD	^M<IV>
    1546	MOVL	N, R0
    154D	RET	

    06B0	.PSECT	$PDATA
    06B0	.XBYTE	5B,53,59,53,45,52,52,5D,45,52,52,4C,4F,47,2E,4F
    06C0	.XBYTE	4C,44

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 77  
					ERRPRT.FOR.89       

    06C2	.XBYTE	53,59,53,24,4F,55,54,50,55,54
    06CC	.XBYTE	33,31,2D,44,45,43,2D,39,39,39,39,20,32,33,3A,35
    06DC	.XBYTE	39,3A,35,39,2E,39,39
		.END

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 78  
					ERRPRT.FOR.89       

PROGRAM SECTIONS

    Name                 Bytes   Attributes

  0 $CODE                 5454   PIC CON REL LCL   SHR   EXE   RD NOWRT LONG
  1 $PDATA                1763   PIC CON REL LCL   SHR NOEXE   RD NOWRT LONG
  2 $LOCAL                4192   PIC CON REL LCL NOSHR NOEXE   RD   WRT LONG
  3 EMB                    503   PIC OVR REL GBL   SHR NOEXE   RD   WRT LONG
  4 SYECOM                2272   PIC OVR REL GBL   SHR NOEXE   RD   WRT LONG


ENTRY POINTS

    Address  Type Name           

  0-00000000      ERRPRT         


VARIABLES

    Address  Type Name               Address  Type Name               Address  Type Name               Address  Type Name           

  2-00000B8E  L*1 DEVICE           4-00000008  I*2 DEVSUMCNT        3-0000001C  L*1 EMB$B_DV_CLASS   3-00000004  L*1 EMB$B_DV_ENTRY 
  3-00000010  L*1 EMB$B_DV_ERTCNT  3-00000011  L*1 EMB$B_DV_ERTMAX  3-0000003A  L*1 EMB$B_DV_SLAVE   3-0000001D  L*1 EMB$B_DV_TYPE  
  3-00000004  L*1 EMB$B_HD_ENTRY   3-00000004  L*1 EMB$B_SS_ENTRY   3-00000012  L*1 EMB$B_SS_MSGTXT  3-00000004  L*1 EMB$B_TS_ENTRY 
  3-00000004  L*1 EMB$B_VM_ENTRY   3-0000001E  L*1 EMB$B_VM_NAMLNG  3-00000036  I*4 EMB$L_DV_CHAR    3-00000026  I*4 EMB$L_DV_MEDIA 
  3-0000002E  I*4 EMB$L_DV_OPCNT   3-00000032  I*4 EMB$L_DV_OWNUIC  3-0000004E  I*4 EMB$L_DV_REGSAV  3-0000001E  I*4 EMB$L_DV_RQPID 
  3-00000000  I*4 EMB$L_SID        3-00000010  I*4 EMB$L_SU_DAYTIM  3-00000014  I*4 EMB$L_VM_ERRCNT  3-00000018  I*4 EMB$L_VM_OPRCNT
  3-00000010  I*4 EMB$L_VM_OWNUIC  3-00000012  R*8 EMB$Q_DV_IOSB    3-00000006  I*4 EMB$Q_DV_TIME    3-00000006  R*8 EMB$Q_HD_TIME  
  3-00000006  R*8 EMB$Q_SS_TIME    3-00000006  R*8 EMB$Q_SU_TIME    3-00000006  R*8 EMB$Q_TS_TIME    3-00000006  R*8 EMB$Q_VM_TIME  
  3-00000024  I*2 EMB$W_DV_BCNT    3-00000022  I*2 EMB$W_DV_BOFF    3-0000001A  I*2 EMB$W_DV_DEVSTS  3-00000004  I*2 EMB$W_DV_ENTRY 
  3-0000002C  I*2 EMB$W_DV_ERRCNT  3-0000000E  I*2 EMB$W_DV_ERRSEQ  3-0000003C  I*2 EMB$W_DV_FUNC    3-0000002A  I*2 EMB$W_DV_UNIT  
  3-00000004  I*2 EMB$W_HD_ENTRY   3-0000000E  I*2 EMB$W_HD_ERRSEQ  3-00000004  I*2 EMB$W_SS_ENTRY   3-0000000E  I*2 EMB$W_SS_ERRSEQ
  3-00000010  I*2 EMB$W_SS_MSGSZ   3-00000004  I*2 EMB$W_SU_ENTRY   3-0000000E  I*2 EMB$W_SU_ERRSEQ  3-00000004  I*2 EMB$W_TS_ENTRY 
  3-0000000E  I*2 EMB$W_TS_ERRSEQ  3-00000004  I*2 EMB$W_VM_ENTRY   3-0000000E  I*2 EMB$W_VM_ERRSEQ  3-00000030  I*2 EMB$W_VM_NUMSET
  3-0000001C  I*2 EMB$W_VM_UNIT    3-0000002E  I*2 EMB$W_VM_VOLNUM  2-00000BF8  I*2 ERROR            2-00000BFA  I*2 FILE_OPEN      
  2-00000BFC  I*4 I                2-00000BE6  I*2 INDEX            2-00000B92  CHR INNAME           2-00000C00  I*4 J              
  2-00000C04  I*4 K                2-00000C08  I*4 L                4-00000000  L*4 L_QUESTION       2-00000B89  L*1 MAJDEV         
  2-00000B8A  L*1 MAJENT           2-00000B8F  L*1 MATCH            2-00000B8B  L*1 MINDEV           2-00000B8C  L*1 MINENT         
  2-00000C0C  I*4 N                2-00000B90  L*1 NEGATE           2-00000B8D  L*1 OPTION           2-00000BB0  CHR OUTNAME        
  2-00000BE8  I*2 Q                4-0000000A  I*2 RECCNT           2-00000BEA  I*2 RECPROC          2-00000BEC  I*2 SELDEVLEN      
  2-00000BF6  I*2 SIZE             2-00000001  CHR STRING           2-00000BCE  CHR TIME             4-00000004  L*4 TTY            
  2-00000B91  L*1 UNKNOWN          2-00000BEE  I*2 W_CORRUPTED      2-00000BF0  I*2 W_QUESTION       2-00000BF2  I*2 W_UNIT         
  2-00000BF4  I*2 W_UNKNOWN      


ARRAYS

    Address  Type Name		       Bytes  Dimensions

  2-00000594  I*2 DEVSUM                 640  (20,0:7,0:1)
  2-00000A3A  L*1 DISMOUNT                30  (30)
  3-00000000  L*1 EMB                    500  (0:499)
  3-0000003E  L*1 EMB$T_DV_NAME           16  (0:15)
  3-00000032  L*1 EMB$T_VM_LABEL          12  (12)
  3-0000001F  L*1 EMB$T_VM_NAMTXT         15  (15)

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 79  
					ERRPRT.FOR.89       

  3-00000006  I*4 EMB$_DV_ERTIME           8  (0:1)
  2-0000001C  I*4 ERTIMEHI                 8  (0:1)
  2-00000014  I*4 ERTIMELO                 8  (0:1)
  2-00000814  I*2 FLAGS                  512  (0:255)
  2-00000024  I*4 HISTO                   96  (0:23)
  3-00000012  I*4 IOSB                     8  (0:1)
  2-00000084  I*4 L_OLD_ERRCNT           640  (20,0:7)
  2-00000304  I*4 L_OLD_OPCNT            640  (20,0:7)
  3-00000012  L*1 MESSAGE                485  (485)
  2-00000A58  L*1 MOUNT                   30  (30)
  4-0000000C  L*1 NAMDEVSUM              340  (20,0:16)
  2-00000000  L*1 SELDEVNAM               17  (0:16)
  2-0000058C  I*4 SELTIMEHI                8  (0:1)
  2-00000584  I*4 SELTIMELO                8  (0:1)
  2-00000A14  I*2 SUMMARY                 24  (-7:4)
  2-00000A76  CHR SYSTEMERROR            275  (0:10)
  2-00000A2C  I*2 TIMBUF                  14  (0:6)
  4-00000160  L*1 VOLNAM                1920  (20,0:7,12)


LABELS

    Address   Label       Address   Label       Address   Label       Address   Label       Address   Label       Address   Label   

  0-00000013  90        1-0000035C  100'      1-00000361  101'      1-00000366  102'          **      103'      1-00000369  104'    
  0-000000BC  200       0-00000143  250       0-000001D2  300       1-00000370  303'          **      305       0-00000456  310     
  0-000004EE  320       0-00000542  330       0-000005B0  399           **      400       0-000005B0  500           **      510     
  1-00000373  511'          **      570           **      580           **      585       0-0000074C  590       0-00000762  591     
  0-0000077E  592           **      593       0-000007D1  595           **      620       0-000007FE  630           **      650     
  0-00000817  660       0-000008B7  1000      0-000008CF  1001      0-000008F8  1002      0-00000937  1004      0-00000976  1005    
  0-000009B5  1006      0-000009F4  1007      0-00000A33  1008      0-00000A72  1010      0-00000A7B  1011      0-00000A7B  1012    
  0-00000A7E  1100      0-00000AC6  1110      0-00000B0F  1150      0-00000B58  1170      0-00000BA1  1200      0-00000BAF  1210    
  0-00000BF7  1220      0-00000C3F  1690      0-00000C4B  2000      0-00000C8E  2100      1-0000037C  2111'     0-00000CBD  2200    
  0-00000CBD  2300      0-00000CBD  2400      0-00000CC0  2500      0-00000CD3  2600      1-00000396  2611'     1-000003A7  2621'   
  1-000003B1  2631'     0-00000D6D  2700      0-00000D80  3000      0-00000D94  3100          **      3150      1-000003BF  3171'   
  0-00000E66  3300      1-000003D9  3371'         **      3380      0-00000FD2  3500      0-00000FD2  3700      0-00000FD2  4000    
  0-00000FF7  5000          **      6000      0-00000FF7  90000     0-0000104D  90100         **      90130         **      90140   
  0-000011FF  90150     1-00000438  90151'    1-0000043D  90153'    1-00000450  90155'        **      90210     0-00001220  90220   
      **      90230     0-0000123E  90250     1-00000463  90257'        **      90260     0-0000134F  90300     1-0000047E  90311'  
  1-000005EB  90321'    1-00000628  90326'    1-0000064C  90329'    1-00000673  90330'    1-00000694  90331'  


FUNCTIONS AND SUBROUTINES REFERENCED

BUGCHECK          B_ECC_ALERT       B_MACCHK          B_RK06            B_RM03            B_RP05            B_SBI_FAULT    
B_TE16            CRASH_RESTART     C_ECC_ALERT       C_MACCHK          C_RK06            C_RM03            C_RP05         
C_SBI_FAULT       C_TE16            DEVCHK            DUMPREG           DVHEAD            DVTAIL            ECC_ALERT      
FOR$CLOSE         FOR$OPEN          FRCTOF            HEADER            LINCHK            MACCHK            MTH$IMOD       
RK06              RM03              RP05              SBI_FAULT         SYS$ASCTIM        SYS$BINTIM        SYS$NUMTIM     
TE16              TIMCMP            TIMRB             TIMRE          


Total Space Allocated = 14184 Bytes


COMPILER OPTIONS

ERRPRT          22-Aug-1978 02:47:36	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 80  
					ERRPRT.FOR.89       


/CHECK=(NOBOUNDS,OVERFLOW)
/DEBUG=(NOSYMBOLS,TRACEBACK)
/OPTIMIZE  /WARNINGS  /I4  /NOD_LINES  
