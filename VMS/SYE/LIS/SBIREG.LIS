
                22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 1   
					SBIREG.FOR.16       

0001    	SUBROUTINE SBI_REG (LUN,REG)
0002    	BYTE 	LUN
0003    	INTEGER*4	REG(0:20)
         
        C
        C	INCLUDE FILES:
        C
0004    	INCLUDE	'SRC$:SBEMBDEF.FOR/NOLIST'
         
        C
        C	EQUATED SYMBOLS:
        C
         
0036    	PARAMETER	SBIFS=0
0037    	PARAMETER	SBISC=1
0038    	PARAMETER	SBIMT=2
0039    	PARAMETER	SBIERR=3
0040    	PARAMETER	SSBITA=4
0041    	PARAMETER	SBIS=5
0042    	PARAMETER	BIT00='00000001'X
0043    	PARAMETER	BIT01='00000002'X
0044    	PARAMETER	BIT02='00000004'X
0045    	PARAMETER	BIT03='00000008'X
0046    	PARAMETER	BIT04='00000010'X
0047    	PARAMETER	BIT05='00000020'X
0048    	PARAMETER	BIT06='00000040'X
0049    	PARAMETER	BIT07='00000080'X
0050    	PARAMETER	BIT08='00000100'X
0051    	PARAMETER	BIT09='00000200'X
0052    	PARAMETER	BIT10='00000400'X
0053    	PARAMETER	BIT11='00000800'X
0054    	PARAMETER	BIT12='00001000'X
0055    	PARAMETER	BIT13='00002000'X
0056    	PARAMETER	BIT14='00004000'X
0057    	PARAMETER	BIT15='00008000'X
0058    	PARAMETER	BIT16='00010000'X
0059    	PARAMETER	BIT17='00020000'X
0060    	PARAMETER	BIT18='00040000'X
0061    	PARAMETER	BIT19='00080000'X
0062    	PARAMETER	BIT20='00100000'X
0063    	PARAMETER	BIT21='00200000'X
0064    	PARAMETER	BIT22='00400000'X
0065    	PARAMETER	BIT23='00800000'X
0066    	PARAMETER	BIT24='01000000'X
0067    	PARAMETER	BIT25='02000000'X
0068    	PARAMETER	BIT26='04000000'X
0069    	PARAMETER	BIT27='08000000'X
0070    	PARAMETER	BIT28='10000000'X
0071    	PARAMETER	BIT29='20000000'X
0072    	PARAMETER	BIT30='40000000'X
0073    	PARAMETER	BIT31='80000000'X
        C
        C	OWN STORAGE:
        C
0074    	INTEGER*2	LINE_CT
0075    	INTEGER*4	TAG,TEMP,TR_COUNT,STATUS

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 2   
					SBIREG.FOR.16       

0076    	INTEGER*4	SIZE,INDEX,FPOS,LENGTH,COUNT
         
0077    	CHARACTER*3	CONFIRM_CODE (0:3)
0078    	CHARACTER*4	MASK(0:15)
0079    	CHARACTER*10	MODE (0:3)
0080    	CHARACTER*2	NUMBER(0:15)
0081    	CHARACTER*20	FORCE_REPLACE (0:3)
0082    	CHARACTER*25	FORCE_MISS (0:3)
0083    	CHARACTER*32	SBIFS_BITS (16:31),TAG_BITS (0:7)
0084    	CHARACTER*32	COMMAND_BITS (0:15),SBISC_BITS (16:31)
0085    	CHARACTER*32	REVERSE_CACHE (0:15),LOCK_CODE (0:3)
0086    	CHARACTER*32	SBIS_BITS(15:31)
0087    	CHARACTER*32	SBIMT_BITS(8:31)
0088    	CHARACTER*55	STRING
        C
        C	EXTERNAL ROUTINES
        C
0089    	INTEGER*2	BITCNT
0090    	INTEGER*2	VBITCNT
         
         
0091    	DATA	SBIFS_BITS(16)	/'FAULT SILO LOCK<16>'/
0092    	DATA	SBIFS_BITS(17)	/'SBI FAULT SIGNAL<17>'/
0093    	DATA	SBIFS_BITS(18)	/'FAULT INTERRUPT ENABLE<18>'/
0094    	DATA	SBIFS_BITS(19)	/'FAULT LATCH<19>'/
0095    	DATA	SBIFS_BITS(26)	/'XMITTER DURING FAULT CYCLE<26>'/
0096    	DATA	SBIFS_BITS(27)	/'MULTIPLE TRANSMITTER FAULT<27>'/
0097    	DATA	SBIFS_BITS(29)	/'UNEXPECTED READ DATA FAULT<29>'/
0098    	DATA	SBIFS_BITS(31)	/'PARITY FAULT<31>'/
         
0099    	DATA	TAG_BITS(0)	/'READ DATA/INTER. SUMMARY RSP'/
0100    	DATA	TAG_BITS(1)	/'RESERVED CODE'/
0101    	DATA	TAG_BITS(2)	/'RESERVED CODE'/
0102    	DATA	TAG_BITS(3)	/'COMMAND/ADDRESS'/
0103    	DATA	TAG_BITS(4)	/'RESERVED CODE'/
0104    	DATA	TAG_BITS(5)	/'WRITE DATA'/
0105    	DATA	TAG_BITS(6)	/'INTERRUPT SUMMARY READ'/
0106    	DATA	TAG_BITS(7)	/'RESERVED FOR DIAG. PURPOSES'/
         
0107    	DATA	COMMAND_BITS(0)	/'RESERVED'/
0108    	DATA	COMMAND_BITS(1)	/'READ MASKED'/
0109    	DATA	COMMAND_BITS(2)	/'WRITE MASKED'/
0110    	DATA	COMMAND_BITS(3)	/'RESERVED'/
0111    	DATA	COMMAND_BITS(4)	/'INTERLOCK READ MASKED'/
0112    	DATA	COMMAND_BITS(5)	/'RESERVED'/
0113    	DATA	COMMAND_BITS(6)	/'RESERVED'/
0114    	DATA	COMMAND_BITS(7)	/'INTERLOCK WRITE MASKED'/
0115    	DATA	COMMAND_BITS(8)	/'EXTENDED READ'/
0116    	DATA	COMMAND_BITS(10)	/'RESERVED'/
0117    	DATA	COMMAND_BITS(11)	/'EXTENDED WRITE MASKED'/
0118    	DATA	COMMAND_BITS(12)	/'RESERVED'/
0119    	DATA	COMMAND_BITS(13)	/'RESERVED'/
0120    	DATA	COMMAND_BITS(14)	/'RESERVED'/
0121    	DATA	COMMAND_BITS(15)	/'RESERVED'/
         
0122    	DATA	SBISC_BITS(16)	/'COUNT(1''S COMPLEMENT)<19:16>:'/

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 3   
					SBIREG.FOR.16       

0123    	DATA	SBISC_BITS(20)	/'COMPARE TAG<22:20>:'/
0124    	DATA	SBISC_BITS(23)	/'COMPARE COMMAND<26:23>:'/
0125    	DATA	SBISC_BITS(24)	/'COMPARE MASK(BINARY)<26:23>:'/
0126    	DATA	SBISC_BITS(27)	/'CONDITION LOCK CODE<28:27>:'/
0127    	DATA	SBISC_BITS(29)	/'LOCK UNCONDITIONAL<29>'/
0128    	DATA	SBISC_BITS(30)	/'SILO LOCK INTERRUPT ENABLED<30>'/
0129    	DATA	SBISC_BITS(31)	/'COMPARE SILO LOCKED<31>'/
         
0130    	DATA	LOCK_CODE(0)	/'NO COMPARE'/
0131    	DATA	LOCK_CODE(1)	/'ID ONLY'/
0132    	DATA	LOCK_CODE(2)	/'ID AND TAG '/
0133    	DATA	LOCK_CODE(3)	/'ID,TAG,AND COMMAND/MASK'/
         
0134    	DATA	SBIMT_BITS(8)	/'FORCE TIMEOUT<8>'/
0135    	DATA	SBIMT_BITS(9)	/'GROUP 0 MATCH<9>'/
0136    	DATA	SBIMT_BITS(10)	/'GROUP 1 MATCH<10>'/
0137    	DATA	SBIMT_BITS(11)	/'FORCE P1 REVERSAL ON SBI<11>'/
0138    	DATA	SBIMT_BITS(12)	/'DISABLE SBI CYCLES<12>'/
0139    	DATA	SBIMT_BITS(13)	/'FORCE REPLACE<14:13:>:'/
0140    	DATA	SBIMT_BITS(15)	/'FORCE MISS<16:15>:'/
0141    	DATA	SBIMT_BITS(17)	/'REVERSE  PARITY CODE<20:17>'/
0142    	DATA	SBIMT_BITS(21)	/'ENABLE SBI INVALIDATE<21>'/
0143    	DATA	SBIMT_BITS(22)	/'FORCE SBI INVALIDATE<22>'/
0144    	DATA	SBIMT_BITS(23)	/'MAINTENANCE ID<27:23>:'/
0145    	DATA	SBIMT_BITS(28)	/'FORCE MULTIPLE XMITTER FAULT<28>'/
0146    	DATA	SBIMT_BITS(29)	/'FORCE UNEXP. READ DATA FAULT<29>'/
0147    	DATA	SBIMT_BITS(30)	/'FORCE WRITE SEQUENCE FAULT<30>'/
0148    	DATA	SBIMT_BITS(31)	/'FORCE P0 REVERSAL ON SBI<31>'/
         
0149    	DATA	REVERSE_CACHE(0)	/'NOP'/
0150    	DATA	REVERSE_CACHE(1)	/'REVERSE PARITY G1,BYTE A,ADDR'/
0151    	DATA	REVERSE_CACHE(2)	/'REVERSE PARITY G1,BYTE B,ADDR'/
0152    	DATA	REVERSE_CACHE(3)	/'REVERSE PARITY G1,BYTE C,ADDR'/
0153    	DATA	REVERSE_CACHE(4)	/'REVERSE PARITY G0,BYTE A,ADDR'/
0154    	DATA	REVERSE_CACHE(5)	/'REVERSE PARITY G0,BYTE B,ADDR'/
0155    	DATA	REVERSE_CACHE(6)	/'REVERSE PARITY G0,BYTE C,ADDR'/
0156    	DATA	REVERSE_CACHE(7)	/'UNUSED'/
0157    	DATA	REVERSE_CACHE(8)	/'REVERSE PARITY G1,BYTE 3,DATA'/
0158    	DATA	REVERSE_CACHE(9)	/'REVERSE PARITY G1,BYTE 2,DATA'/
0159    	DATA	REVERSE_CACHE(10)	/'REVERSE PARITY G1,BYTE 1,DATA'/
0160    	DATA	REVERSE_CACHE(11)	/'REVERSE PARITY G1,BYTE 0,DATA'/
0161    	DATA	REVERSE_CACHE(12)	/'REVERSE PARITY G0,BYTE 3,DATA'/
0162    	DATA	REVERSE_CACHE(13)	/'REVERSE PARITY G0,BYTE 2,DATA'/
0163    	DATA	REVERSE_CACHE(14)	/'REVERSE PARITY G0,BYTE 1,DATA'/
0164    	DATA	REVERSE_CACHE(15)	/'REVERSE PARITY G0,BYTE 0,DATA'/
         
0165    	DATA	FORCE_REPLACE(0)	/'RANDOM REPLACEMENT'/
0166    	DATA	FORCE_REPLACE(1)	/'GROUP 1 ALWAYS'/
0167    	DATA	FORCE_REPLACE(2)	/'GROUP 0 ALWAYS'/
0168    	DATA	FORCE_REPLACE(3)	/'UNDEFINED'/
         
0169    	DATA	FORCE_MISS(0)	/'NO MISSES FORCED'/
0170    	DATA	FORCE_MISS(1)	/'FORCE MISS ON GROUP 1'/
0171    	DATA	FORCE_MISS(2)	/'FORCE MISS ON GROUP 0'/
0172    	DATA	FORCE_MISS(3)	/'FORCE MISS ON BOTH GROUPS'/
         

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 4   
					SBIREG.FOR.16       

         
0173    	DATA	MODE(0)	/'KERNEL'/
0174    	DATA	MODE(1)	/'EXECUTIVE'/
0175    	DATA	MODE(2)	/'SUPERVISOR'/
0176    	DATA	MODE(3)	/'USER'/
         
0177    	DATA	MASK(0)	/'0000'/
0178    	DATA	MASK(1)	/'0001'/
0179    	DATA	MASK(2)	/'0010'/
0180    	DATA	MASK(3)	/'0011'/
0181    	DATA	MASK(4)	/'0100'/
0182    	DATA	MASK(5)	/'0101'/
0183    	DATA	MASK(6)	/'0110'/
0184    	DATA	MASK(7)	/'0111'/
0185    	DATA	MASK(8)	/'1000'/
0186    	DATA	MASK(9)	/'1001'/
0187    	DATA	MASK(10)	/'1010'/
0188    	DATA	MASK(11)	/'1011'/
0189    	DATA	MASK(12)	/'1100'/
0190    	DATA	MASK(13)	/'1101'/
0191    	DATA	MASK(14)	/'1110'/
0192    	DATA	MASK(15)	/'1111'/
         
0193    	DATA	NUMBER(0)	/' 0'/
0194    	DATA	NUMBER(1)	/' 1'/
0195    	DATA	NUMBER(2)	/' 2'/
0196    	DATA	NUMBER(3)	/' 3'/
0197    	DATA	NUMBER(4)	/' 4'/
0198    	DATA	NUMBER(5)	/' 5'/
0199    	DATA	NUMBER(6)	/' 6'/
0200    	DATA	NUMBER(7)	/' 7'/
0201    	DATA	NUMBER(8)	/' 8'/
0202    	DATA	NUMBER(9)	/' 9'/
0203    	DATA	NUMBER(10)	/'10'/
0204    	DATA	NUMBER(11)	/'11'/
0205    	DATA	NUMBER(12)	/'12'/
0206    	DATA	NUMBER(13)	/'13'/
0207    	DATA	NUMBER(14)	/'14'/
0208    	DATA	NUMBER(15)	/'15'/
         
0209    	DATA	SBIS_BITS(15)	/'TR''S:'/
0210    	DATA	SBIS_BITS(16)	/'CONFIRM CODE<17:16>:'/
0211    	DATA	SBIS_BITS(18)	/'COMMAND CODE<21:18>:'/
0212    	DATA	SBIS_BITS(19)	/'MASK(BINARY)<21:18>:'/
0213    	DATA	SBIS_BITS(22)	/'TAG<24:22>:'/
0214    	DATA	SBIS_BITS(25)	/'ID<29:25>:'/
0215    	DATA	SBIS_BITS(30)	/'INTERLOCK BIT SET<30>'/
0216    	DATA	SBIS_BITS(31)	/'FIRST ENTRY AFTER FAULT<31>'/
         
0217    	DATA	CONFIRM_CODE(0)	/'N/R'/
0218    	DATA	CONFIRM_CODE(1)	/'ACK'/
0219    	DATA	CONFIRM_CODE(2)	/'BSY'/
0220    	DATA	CONFIRM_CODE(3)	/'ERR'/
         
        C
        C	BEGIN OUTPUT

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 5   
					SBIREG.FOR.16       

        C
         
         
        C
        C	SBI REGISTER HEADER
        C
         
0221    	CALL LINCHK (LUN,2)
0222    	WRITE (LUN,100) 'SBI REGISTERS:'
0223    100	FORMAT ('0',A)
         
        C
        C	BEGIN OUTPUT OF REGISTERS
        C
         
        C
        C	SBIFS REGISTER
        C
         
0224    	LINE_CT=BITCNT(REG(FAULT) .AND. 'AC0F0000'X)
0225    	CALL LINCHK (LUN,LINE_CT+1)
0226    	WRITE (LUN,200)'SBIFS(ID#1B)',REG(FAULT)
0227    200	FORMAT (' ',T10,A,T23,Z8)
0228    	CALL BITS_OUTPUT (LUN,REG(FAULT),SBIFS_BITS(16),16,31,0)
         
        C
        C	SBISC REGISTER
        C
         
0229    	LINE_CT=(BITCNT(REG(SBISC) .AND. 'E0000000'X))+7
0230    	TAG=LIB$EXTZV(20,3,REG(SBISC))
0231    	IF (TAG .EQ. 3) LINE_CT=LINE_CT+1
0232    	CALL LINCHK (LUN,LINE_CT)
0233    	WRITE (LUN,200)'SBISC(ID#1C)',REG(SBISC)
0234    300	FORMAT(' ',T40,A,:,T71,Z2)
0235    	IF (( REG(SBISC) .AND. BIT31) .NE.0)
        	1	WRITE (LUN,300) SBISC_BITS(31)
0236    	IF ((REG(SBISC) .AND. BIT30) .NE. 0)
        	1	WRITE (LUN,300) SBISC_BITS(30)
0237    	IF ((REG(SBISC) .AND. BIT29) .NE. 0)
        	1	WRITE (LUN,300)	 SBISC_BITS(29)
0238    	TEMP=LIB$EXTZV (27,2,REG(SBISC))
0239    	WRITE (LUN,300)	SBISC_BITS(27),TEMP
0240    	WRITE (LUN,310) LOCK_CODE(TEMP)
0241    310	FORMAT (' ',T45,A)
0242    	TEMP=LIB$EXTZV(23,4,REG(SBISC))
0243    	IF (TAG .EQ.3)
        	1	THEN
0244    			WRITE (LUN,300) SBISC_BITS(23),TEMP
0245    			WRITE (LUN,310) COMMAND_BITS(TEMP)
0246    		ELSE
0247    			WRITE (LUN,320) SBISC_BITS(24),MASK(TEMP)
0248    	ENDIF
0249    320	FORMAT (' ',T40,A,T69,A)
0250    	WRITE (LUN,300)	SBISC_BITS(20),TAG
0251    	WRITE (LUN,310) TAG_BITS(TAG)

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 6   
					SBIREG.FOR.16       

0252    	TEMP=LIB$EXTZV (16,4,REG(SBISC))
0253    	WRITE (LUN,300) SBISC_BITS(16),TEMP
         
        C
        C	SBIMT REGISTER
        C
         
0254    	LINE_CT=(BITCNT(REG(SBIMT) .AND. 'F0601F00'X))+8
0255    	CALL LINCHK (LUN,LINE_CT)
0256    	WRITE (LUN,200) 'SBIMT(ID#1D)',REG(SBIMT)
0257    	CALL BITS_OUTPUT (LUN,REG(SBIMT),SBIMT_BITS(8),8,12,0)
0258    	TEMP=LIB$EXTZV(13,2,REG(SBIMT))
0259    	WRITE  (LUN,300) SBIMT_BITS(13),TEMP
0260    	WRITE (LUN,310) FORCE_REPLACE(TEMP)
0261    	TEMP=LIB$EXTZV(15,2,REG(SBIMT))
0262    	WRITE (LUN,300) SBIMT_BITS(15),TEMP
0263    	WRITE (LUN,310) FORCE_MISS(TEMP)
0264    	TEMP=LIB$EXTZV (17,4,REG(SBIMT))
0265    	WRITE (LUN,300) SBIMT_BITS(17),TEMP
0266    	WRITE (LUN,310)REVERSE_CACHE (TEMP)
0267    	CALL BITS_OUTPUT (LUN,REG(SBIMT),SBIMT_BITS(21),21,22,0)
0268    	TEMP=LIB$EXTZV(23,5,REG(SBIMT))
0269    	WRITE (LUN,300) SBIMT_BITS(23),TEMP
0270    	CALL BITS_OUTPUT(LUN,REG(SBIMT),SBIMT_BITS(28),28,31,0)
         
        C
        C	SBIER REGISTER
        C
         
0271    	CALL SBIER(LUN,REG(SBIERR))
         
        C
        C	SBITA REGISTER
        C
         
0272    	CALL  SBITA (LUN, REG(SSBITA))
         
        C
        C	SBIS REGISTER
        C
         
0273    	CALL LINCHK (LUN,17)
0274    	WRITE (LUN,100) 'SBI SILO SUMMARY:'
0275    	WRITE (LUN,330) (REG(I),I=SBIS,SBIS+15)
0276    330	FORMAT (' ',T23,Z8)
        C
        C	DETAILED SILO OUTPUT
        C
0277    	CALL LINCHK (LUN,2)
0278    	WRITE (LUN,100) 'SILO REGISTERS (DETAILED):'
0279    	COUNT=15
0280    	DO 400 I=SBIS,SBIS+15
0281    	LINE_CT=(BITCNT(REG(I) .AND. 'C0000000'X))+8
0282    	TAG=LIB$EXTZV (22,3,REG(I))
0283    	IF (TAG .EQ.3) LINE_CT=LINE_CT+1
0284    	TR_COUNT=VBITCNT(REG(I),0,15)

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 7   
					SBIREG.FOR.16       

0285    	IF (TR_COUNT .GT. 8) LINE_CT=LINE_CT+1
0286    	CALL LINCHK (LUN,LINE_CT)
0287    	IF (COUNT .EQ.0)
        	1	THEN
0288    			STRING='FAULT+ 1'
0289    		ELSEIF (COUNT .EQ. 1) THEN
0290    			STRING='FAULT'
0291    		ELSE
0292    			STRING='FAULT-'//NUMBER(COUNT-1)
0293    	ENDIF
0294    	COUNT=COUNT-1
0295    	WRITE (LUN,200)STRING,REG(I)
0296    	CALL BITS_OUTPUT(LUN,REG(I),SBIS_BITS(30),30,31,0)
0297    	TEMP=LIB$EXTZV(25,5,REG(I))
0298    	WRITE (LUN,300)SBIS_BITS(25),TEMP
0299    	WRITE (LUN,300) SBIS_BITS(22),TAG
0300    	WRITE (LUN,310)TAG_BITS(TAG)
0301    	TEMP=LIB$EXTZV(18,4,REG(I))
0302    	IF (TAG .EQ.3)
        	1	THEN
0303    			WRITE (LUN,300) SBIS_BITS(18),TEMP
0304    			WRITE (LUN,310) COMMAND_BITS(TEMP)
0305    		ELSE
0306    			WRITE(LUN,320) SBIS_BITS(19),MASK(TEMP)
0307    	ENDIF
0308    	TEMP=LIB$EXTZV (16,2,REG(I))
0309    	WRITE (LUN,300) SBIS_BITS(16),TEMP
0310    	WRITE (LUN,310)CONFIRM_CODE(TEMP)
0311    	STRING=SBIS_BITS(15)(1:5)
0312    	INDEX=0
0313    	SIZE=16
0314    	LENGTH=5
0315    	IF (TR_COUNT .NE. 0)
        	1	THEN
0316    			DO 500	J=1,TR_COUNT
0317    				STATUS=LIB$FFS(INDEX,SIZE,REG(I),FPOS)
0318    				IF (.NOT. STATUS) GO TO 600
0319    				STRING=STRING(1:LENGTH)//NUMBER(FPOS)//','
0320    				LENGTH=LENGTH+3
0321    				IF (FPOS .GE. 15) GO TO 600
0322    				INDEX=FPOS+1
0323    				SIZE=16-FPOS
0324    500	CONTINUE
0325    600	CONTINUE
0326    	ENDIF
0327    	IF (LENGTH .GT. 29)
        	1	THEN
0328    			WRITE  (LUN,300) STRING (1:29)
0329    			WRITE (LUN,610) STRING (30:LENGTH-1)
0330    		ELSE
0331    			WRITE (LUN,300)	STRING (1:LENGTH-1)
0332    	ENDIF
0333    610	FORMAT (' ',T45,A)
0334    400	CONTINUE
0335    	RETURN
0336    	END

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 8   
					SBIREG.FOR.16       

		.TITLE	SBI_REG
		.IDENT	01

    0000	.PSECT	EMB
    0000  EMB:
    00A8  EMB$L_SB_PSL:
    00A4  EMB$L_SB_PC:
    0064  EMB$L_SB_SBIRGS:
    0024  EMB$L_SB_SILO:
    0020  EMB$L_SB_TIMOUT:
    001C  EMB$L_SB_ERROR:
    0018  EMB$L_SB_MAINT:
    0014  EMB$L_SB_SILCMP:
    0010  EMB$L_SB_FAULT:
    000E  EMB$W_SB_ERRSEQ:
    0006  EMB$Q_SB_TIME:
    0004  EMB$W_SB_ENTRY:
    0000  EMB$L_SB_SID:

    0000	.PSECT	$PDATA
    0000	.LONG	^X00000000
    0004	.LONG	^X00000002
    0008	.LONG	^X00000003
    000C	.LONG	^X00000004
    0010	.LONG	^X00000005
    0014	.XBYTE	53,42,49,20,52,45,47,49,53,54,45,52,53,3A
    0022	.XBYTE	53,42,49,46,53,28,49,44,23,31,42,29
    002E	.LONG	^X00000010
    0032	.LONG	^X0000001F
    0036	.LONG	^X00000014
    003A	.XBYTE	53,42,49,53,43,28,49,44,23,31,43,29
    0046	.LONG	^X0000001B
    004A	.LONG	^X00000017
    004E	.LONG	^X00000008
    0052	.XBYTE	53,42,49,4D,54,28,49,44,23,31,44,29
    005E	.LONG	^X0000000C
    0062	.LONG	^X0000000D
    0066	.LONG	^X0000000F
    006A	.LONG	^X00000011
    006E	.LONG	^X00000015
    0072	.LONG	^X00000016
    0076	.LONG	^X0000001C
    007A	.XBYTE	53,42,49,20,53,49,4C,4F,20,53,55,4D,4D,41,52,59
    008A	.XBYTE	3A
    008B	.XBYTE	53,49,4C,4F,20,52,45,47,49,53,54,45,52,53,20,28
    009B	.XBYTE	44,45,54,41,49,4C,45,44,29,3A
    00A5	.LONG	^X0000001E
    00A9	.LONG	^X00000019
    00AD	.LONG	^X00000012

    1060	.PSECT	$LOCAL
    1060	.LONG	^X04080004
    1064	.LONG	^X00000000
    1068	.LONG	^X01200000,^X00000054
    1070	.LONG	^X00000000
    1074	.LONG	^X010E0037

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 9   
					SBIREG.FOR.16       

    1078	.ADDR	STRING
    107C	.LONG	^X00000002
    1080	.LONG	^X00000000
    1084	.ADDR	$PDATA+^X4
    1088	.LONG	^X010E000E
    108C	.ADDR	$PDATA+^X14
    1090	.LONG	^X00000001
    1094	.LONG	^X00000000
    1098	.LONG	^X00000002
    109C	.LONG	^X00000000
    10A0	.LONG	^X00000000
    10A4	.LONG	^X010E000C
    10A8	.ADDR	$PDATA+^X22
    10AC	.LONG	^X010E0020
    10B0	.ADDR	SBIFS_BITS
    10B4	.LONG	^X00000006
    10B8	.LONG	^X00000000
    10BC	.LONG	^X00000000
    10C0	.ADDR	$LOCAL+^X10AC
    10C4	.ADDR	$PDATA+^X2E
    10C8	.ADDR	$PDATA+^X32
    10CC	.ADDR	$PDATA
    10D0	.LONG	^X00000003
    10D4	.ADDR	$PDATA+^X36
    10D8	.ADDR	$PDATA+^X8
    10DC	.LONG	^X00000000
    10E0	.LONG	^X00000002
    10E4	.LONG	^X00000000
    10E8	.ADDR	LINE_CT
    10EC	.LONG	^X010E000C
    10F0	.ADDR	$PDATA+^X3A
    10F4	.LONG	^X010E0000
    10F8	.LONG	^X00000000
    10FC	.LONG	^X00000003
    1100	.ADDR	$PDATA+^X46
    1104	.ADDR	$PDATA+^X4
    1108	.LONG	^X00000000
    110C	.LONG	^X00000003
    1110	.ADDR	$PDATA+^X4A
    1114	.ADDR	$PDATA+^XC
    1118	.LONG	^X00000000
    111C	.LONG	^X010E0000
    1120	.LONG	^X00000000
    1124	.LONG	^X00000003
    1128	.ADDR	$PDATA+^X2E
    112C	.ADDR	$PDATA+^XC
    1130	.LONG	^X00000000
    1134	.LONG	^X010E000C
    1138	.ADDR	$PDATA+^X52
    113C	.LONG	^X010E0020
    1140	.ADDR	SBIMT_BITS
    1144	.LONG	^X00000006
    1148	.LONG	^X00000000
    114C	.LONG	^X00000000
    1150	.ADDR	$LOCAL+^X113C
    1154	.ADDR	$PDATA+^X4E

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 10  
					SBIREG.FOR.16       

    1158	.ADDR	$PDATA+^X5E
    115C	.ADDR	$PDATA
    1160	.LONG	^X00000003
    1164	.ADDR	$PDATA+^X62
    1168	.ADDR	$PDATA+^X4
    116C	.LONG	^X00000000
    1170	.LONG	^X00000003
    1174	.ADDR	$PDATA+^X66
    1178	.ADDR	$PDATA+^X4
    117C	.LONG	^X00000000
    1180	.LONG	^X00000003
    1184	.ADDR	$PDATA+^X6A
    1188	.ADDR	$PDATA+^XC
    118C	.LONG	^X00000000
    1190	.LONG	^X010E0020
    1194	.ADDR	SBIMT_BITS+416
    1198	.LONG	^X00000006
    119C	.LONG	^X00000000
    11A0	.LONG	^X00000000
    11A4	.ADDR	$LOCAL+^X1190
    11A8	.ADDR	$PDATA+^X6E
    11AC	.ADDR	$PDATA+^X72
    11B0	.ADDR	$PDATA
    11B4	.LONG	^X00000003
    11B8	.ADDR	$PDATA+^X4A
    11BC	.ADDR	$PDATA+^X10
    11C0	.LONG	^X00000000
    11C4	.LONG	^X010E0020
    11C8	.ADDR	SBIMT_BITS+640
    11CC	.LONG	^X00000006
    11D0	.LONG	^X00000000
    11D4	.LONG	^X00000000
    11D8	.ADDR	$LOCAL+^X11C4
    11DC	.ADDR	$PDATA+^X76
    11E0	.ADDR	$PDATA+^X32
    11E4	.ADDR	$PDATA
    11E8	.LONG	^X00000002
    11EC	.LONG	^X00000000
    11F0	.ADDR	$PDATA+^X6A
    11F4	.LONG	^X010E0011
    11F8	.ADDR	$PDATA+^X7A
    11FC	.LONG	^X010E001A
    1200	.ADDR	$PDATA+^X8B
    1204	.LONG	^X00000003
    1208	.ADDR	$PDATA+^X72
    120C	.ADDR	$PDATA+^X8
    1210	.LONG	^X00000000
    1214	.LONG	^X00000003
    1218	.LONG	^X00000000
    121C	.ADDR	$PDATA
    1220	.ADDR	$PDATA+^X66
    1224	.LONG	^X010E0020
    1228	.ADDR	SBIS_BITS+480
    122C	.LONG	^X00000006
    1230	.LONG	^X00000000
    1234	.LONG	^X00000000

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 11  
					SBIREG.FOR.16       

    1238	.ADDR	$LOCAL+^X1224
    123C	.ADDR	$PDATA+^XA5
    1240	.ADDR	$PDATA+^X32
    1244	.ADDR	$PDATA
    1248	.LONG	^X00000003
    124C	.ADDR	$PDATA+^XA9
    1250	.ADDR	$PDATA+^X10
    1254	.LONG	^X00000000
    1258	.LONG	^X00000003
    125C	.ADDR	$PDATA+^XAD
    1260	.ADDR	$PDATA+^XC
    1264	.LONG	^X00000000
    1268	.LONG	^X00000003
    126C	.ADDR	$PDATA+^X2E
    1270	.ADDR	$PDATA+^X4
    1274	.LONG	^X00000000
    1278	.LONG	^X00000004
    127C	.ADDR	INDEX
    1280	.ADDR	SIZE
    1284	.LONG	^X00000000
    1288	.ADDR	FPOS
    128C	.LONG	^X010E001D
    1290	.ADDR	STRING
    1294	.LONG	^X010E0000
    1298	.ADDR	STRING+29
    129C	.LONG	^X010E0000
    12A0	.ADDR	STRING

    00B1	.PSECT	$PDATA
    00B1  .100:
    00B1	.XBYTE	0F,01,30,29,04
    00B6  .200:
    00B6	.XBYTE	0F,01,20,0D,0A,29,0D,17,19,08,04
    00C1  .300:
    00C1	.XBYTE	0F,01,20,0D,28,29,07,0D,47,19,02,04
    00CD  .310:
    00CD	.XBYTE	0F,01,20,0D,2D,29,04
    00D4  .320:
    00D4	.XBYTE	0F,01,20,0D,28,29,0D,45,29,04
    00DE  .330:
    00DE	.XBYTE	0F,01,20,0D,17,19,08,04
    00E6  .610:
    00E6	.XBYTE	0F,01,20,0D,2D,29,04

    0148	.PSECT	$LOCAL
    0148  SBIFS_BITS:
    0148	.XBYTE	46,41,55,4C,54,20,53,49,4C,4F,20,4C,4F,43,4B,3C
    0158	.XBYTE	31,36,3E
    015B	.XBYTE	20 [13]
    0168  SBIFS_BITS+32:
    0168	.XBYTE	53,42,49,20,46,41,55,4C,54,20,53,49,47,4E,41,4C
    0178	.XBYTE	3C,31,37,3E
    017C	.XBYTE	20 [12]
    0188  SBIFS_BITS+64:
    0188	.XBYTE	46,41,55,4C,54,20,49,4E,54,45,52,52,55,50,54,20
    0198	.XBYTE	45,4E,41,42,4C,45,3C,31,38,3E

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 12  
					SBIREG.FOR.16       

    01A2	.XBYTE	20 [6]
    01A8  SBIFS_BITS+96:
    01A8	.XBYTE	46,41,55,4C,54,20,4C,41,54,43,48,3C,31,39,3E
    01B7	.XBYTE	20 [17]
    0288  SBIFS_BITS+320:
    0288	.XBYTE	58,4D,49,54,54,45,52,20,44,55,52,49,4E,47,20,46
    0298	.XBYTE	41,55,4C,54,20,43,59,43,4C,45,3C,32,36,3E
    02A6	.XBYTE	20 [2]
    02A8  SBIFS_BITS+352:
    02A8	.XBYTE	4D,55,4C,54,49,50,4C,45,20,54,52,41,4E,53,4D,49
    02B8	.XBYTE	54,54,45,52,20,46,41,55,4C,54,3C,32,37,3E
    02C6	.XBYTE	20 [2]
    02E8  SBIFS_BITS+416:
    02E8	.XBYTE	55,4E,45,58,50,45,43,54,45,44,20,52,45,41,44,20
    02F8	.XBYTE	44,41,54,41,20,46,41,55,4C,54,3C,32,39,3E
    0306	.XBYTE	20 [2]
    0328  SBIFS_BITS+480:
    0328	.XBYTE	50,41,52,49,54,59,20,46,41,55,4C,54,3C,33,31,3E
    0338	.XBYTE	20 [16]
    0348  TAG_BITS:
    0348	.XBYTE	52,45,41,44,20,44,41,54,41,2F,49,4E,54,45,52,2E
    0358	.XBYTE	20,53,55,4D,4D,41,52,59,20,52,53,50
    0364	.XBYTE	20 [4]
    0368  TAG_BITS+32:
    0368	.XBYTE	52,45,53,45,52,56,45,44,20,43,4F,44,45
    0375	.XBYTE	20 [19]
    0388  TAG_BITS+64:
    0388	.XBYTE	52,45,53,45,52,56,45,44,20,43,4F,44,45
    0395	.XBYTE	20 [19]
    03A8  TAG_BITS+96:
    03A8	.XBYTE	43,4F,4D,4D,41,4E,44,2F,41,44,44,52,45,53,53
    03B7	.XBYTE	20 [17]
    03C8  TAG_BITS+128:
    03C8	.XBYTE	52,45,53,45,52,56,45,44,20,43,4F,44,45
    03D5	.XBYTE	20 [19]
    03E8  TAG_BITS+160:
    03E8	.XBYTE	57,52,49,54,45,20,44,41,54,41
    03F2	.XBYTE	20 [22]
    0408  TAG_BITS+192:
    0408	.XBYTE	49,4E,54,45,52,52,55,50,54,20,53,55,4D,4D,41,52
    0418	.XBYTE	59,20,52,45,41,44
    041E	.XBYTE	20 [10]
    0428  TAG_BITS+224:
    0428	.XBYTE	52,45,53,45,52,56,45,44,20,46,4F,52,20,44,49,41
    0438	.XBYTE	47,2E,20,50,55,52,50,4F,53,45,53
    0443	.XBYTE	20 [5]
    0448  COMMAND_BITS:
    0448	.XBYTE	52,45,53,45,52,56,45,44
    0450	.XBYTE	20 [24]
    0468  COMMAND_BITS+32:
    0468	.XBYTE	52,45,41,44,20,4D,41,53,4B,45,44
    0473	.XBYTE	20 [21]
    0488  COMMAND_BITS+64:
    0488	.XBYTE	57,52,49,54,45,20,4D,41,53,4B,45,44
    0494	.XBYTE	20 [20]
    04A8  COMMAND_BITS+96:

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 13  
					SBIREG.FOR.16       

    04A8	.XBYTE	52,45,53,45,52,56,45,44
    04B0	.XBYTE	20 [24]
    04C8  COMMAND_BITS+128:
    04C8	.XBYTE	49,4E,54,45,52,4C,4F,43,4B,20,52,45,41,44,20,4D
    04D8	.XBYTE	41,53,4B,45,44
    04DD	.XBYTE	20 [11]
    04E8  COMMAND_BITS+160:
    04E8	.XBYTE	52,45,53,45,52,56,45,44
    04F0	.XBYTE	20 [24]
    0508  COMMAND_BITS+192:
    0508	.XBYTE	52,45,53,45,52,56,45,44
    0510	.XBYTE	20 [24]
    0528  COMMAND_BITS+224:
    0528	.XBYTE	49,4E,54,45,52,4C,4F,43,4B,20,57,52,49,54,45,20
    0538	.XBYTE	4D,41,53,4B,45,44
    053E	.XBYTE	20 [10]
    0548  COMMAND_BITS+256:
    0548	.XBYTE	45,58,54,45,4E,44,45,44,20,52,45,41,44
    0555	.XBYTE	20 [19]
    0588  COMMAND_BITS+320:
    0588	.XBYTE	52,45,53,45,52,56,45,44
    0590	.XBYTE	20 [24]
    05A8  COMMAND_BITS+352:
    05A8	.XBYTE	45,58,54,45,4E,44,45,44,20,57,52,49,54,45,20,4D
    05B8	.XBYTE	41,53,4B,45,44
    05BD	.XBYTE	20 [11]
    05C8  COMMAND_BITS+384:
    05C8	.XBYTE	52,45,53,45,52,56,45,44
    05D0	.XBYTE	20 [24]
    05E8  COMMAND_BITS+416:
    05E8	.XBYTE	52,45,53,45,52,56,45,44
    05F0	.XBYTE	20 [24]
    0608  COMMAND_BITS+448:
    0608	.XBYTE	52,45,53,45,52,56,45,44
    0610	.XBYTE	20 [24]
    0628  COMMAND_BITS+480:
    0628	.XBYTE	52,45,53,45,52,56,45,44
    0630	.XBYTE	20 [24]
    0648  SBISC_BITS:
    0648	.XBYTE	43,4F,55,4E,54,28,31,27,53,20,43,4F,4D,50,4C,45
    0658	.XBYTE	4D,45,4E,54,29,3C,31,39,3A,31,36,3E,3A
    0665	.XBYTE	20 [3]
    06C8  SBISC_BITS+128:
    06C8	.XBYTE	43,4F,4D,50,41,52,45,20,54,41,47,3C,32,32,3A,32
    06D8	.XBYTE	30,3E,3A
    06DB	.XBYTE	20 [13]
    0728  SBISC_BITS+224:
    0728	.XBYTE	43,4F,4D,50,41,52,45,20,43,4F,4D,4D,41,4E,44,3C
    0738	.XBYTE	32,36,3A,32,33,3E,3A
    073F	.XBYTE	20 [9]
    0748  SBISC_BITS+256:
    0748	.XBYTE	43,4F,4D,50,41,52,45,20,4D,41,53,4B,28,42,49,4E
    0758	.XBYTE	41,52,59,29,3C,32,36,3A,32,33,3E,3A
    0764	.XBYTE	20 [4]
    07A8  SBISC_BITS+352:
    07A8	.XBYTE	43,4F,4E,44,49,54,49,4F,4E,20,4C,4F,43,4B,20,43

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 14  
					SBIREG.FOR.16       

    07B8	.XBYTE	4F,44,45,3C,32,38,3A,32,37,3E,3A
    07C3	.XBYTE	20 [5]
    07E8  SBISC_BITS+416:
    07E8	.XBYTE	4C,4F,43,4B,20,55,4E,43,4F,4E,44,49,54,49,4F,4E
    07F8	.XBYTE	41,4C,3C,32,39,3E
    07FE	.XBYTE	20 [10]
    0808  SBISC_BITS+448:
    0808	.XBYTE	53,49,4C,4F,20,4C,4F,43,4B,20,49,4E,54,45,52,52
    0818	.XBYTE	55,50,54,20,45,4E,41,42,4C,45,44,3C,33,30,3E
    0827	.XBYTE	20 [1]
    0828  SBISC_BITS+480:
    0828	.XBYTE	43,4F,4D,50,41,52,45,20,53,49,4C,4F,20,4C,4F,43
    0838	.XBYTE	4B,45,44,3C,33,31,3E
    083F	.XBYTE	20 [9]
    0A48  LOCK_CODE:
    0A48	.XBYTE	4E,4F,20,43,4F,4D,50,41,52,45
    0A52	.XBYTE	20 [22]
    0A68  LOCK_CODE+32:
    0A68	.XBYTE	49,44,20,4F,4E,4C,59
    0A6F	.XBYTE	20 [25]
    0A88  LOCK_CODE+64:
    0A88	.XBYTE	49,44,20,41,4E,44,20,54,41,47,20
    0A93	.XBYTE	20 [21]
    0AA8  LOCK_CODE+96:
    0AA8	.XBYTE	49,44,2C,54,41,47,2C,41,4E,44,20,43,4F,4D,4D,41
    0AB8	.XBYTE	4E,44,2F,4D,41,53,4B
    0ABF	.XBYTE	20 [9]
    0CE8  SBIMT_BITS:
    0CE8	.XBYTE	46,4F,52,43,45,20,54,49,4D,45,4F,55,54,3C,38,3E
    0CF8	.XBYTE	20 [16]
    0D08  SBIMT_BITS+32:
    0D08	.XBYTE	47,52,4F,55,50,20,30,20,4D,41,54,43,48,3C,39,3E
    0D18	.XBYTE	20 [16]
    0D28  SBIMT_BITS+64:
    0D28	.XBYTE	47,52,4F,55,50,20,31,20,4D,41,54,43,48,3C,31,30
    0D38	.XBYTE	3E
    0D39	.XBYTE	20 [15]
    0D48  SBIMT_BITS+96:
    0D48	.XBYTE	46,4F,52,43,45,20,50,31,20,52,45,56,45,52,53,41
    0D58	.XBYTE	4C,20,4F,4E,20,53,42,49,3C,31,31,3E
    0D64	.XBYTE	20 [4]
    0D68  SBIMT_BITS+128:
    0D68	.XBYTE	44,49,53,41,42,4C,45,20,53,42,49,20,43,59,43,4C
    0D78	.XBYTE	45,53,3C,31,32,3E
    0D7E	.XBYTE	20 [10]
    0D88  SBIMT_BITS+160:
    0D88	.XBYTE	46,4F,52,43,45,20,52,45,50,4C,41,43,45,3C,31,34
    0D98	.XBYTE	3A,31,33,3A,3E,3A
    0D9E	.XBYTE	20 [10]
    0DC8  SBIMT_BITS+224:
    0DC8	.XBYTE	46,4F,52,43,45,20,4D,49,53,53,3C,31,36,3A,31,35
    0DD8	.XBYTE	3E,3A
    0DDA	.XBYTE	20 [14]
    0E08  SBIMT_BITS+288:
    0E08	.XBYTE	52,45,56,45,52,53,45,20,20,50,41,52,49,54,59,20
    0E18	.XBYTE	43,4F,44,45,3C,32,30,3A,31,37,3E

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 15  
					SBIREG.FOR.16       

    0E23	.XBYTE	20 [5]
    0E88  SBIMT_BITS+416:
    0E88	.XBYTE	45,4E,41,42,4C,45,20,53,42,49,20,49,4E,56,41,4C
    0E98	.XBYTE	49,44,41,54,45,3C,32,31,3E
    0EA1	.XBYTE	20 [7]
    0EA8  SBIMT_BITS+448:
    0EA8	.XBYTE	46,4F,52,43,45,20,53,42,49,20,49,4E,56,41,4C,49
    0EB8	.XBYTE	44,41,54,45,3C,32,32,3E
    0EC0	.XBYTE	20 [8]
    0EC8  SBIMT_BITS+480:
    0EC8	.XBYTE	4D,41,49,4E,54,45,4E,41,4E,43,45,20,49,44,3C,32
    0ED8	.XBYTE	37,3A,32,33,3E,3A
    0EDE	.XBYTE	20 [10]
    0F68  SBIMT_BITS+640:
    0F68	.XBYTE	46,4F,52,43,45,20,4D,55,4C,54,49,50,4C,45,20,58
    0F78	.XBYTE	4D,49,54,54,45,52,20,46,41,55,4C,54,3C,32,38,3E
    0F88  SBIMT_BITS+672:
    0F88	.XBYTE	46,4F,52,43,45,20,55,4E,45,58,50,2E,20,52,45,41
    0F98	.XBYTE	44,20,44,41,54,41,20,46,41,55,4C,54,3C,32,39,3E
    0FA8  SBIMT_BITS+704:
    0FA8	.XBYTE	46,4F,52,43,45,20,57,52,49,54,45,20,53,45,51,55
    0FB8	.XBYTE	45,4E,43,45,20,46,41,55,4C,54,3C,33,30,3E
    0FC6	.XBYTE	20 [2]
    0FC8  SBIMT_BITS+736:
    0FC8	.XBYTE	46,4F,52,43,45,20,50,30,20,52,45,56,45,52,53,41
    0FD8	.XBYTE	4C,20,4F,4E,20,53,42,49,3C,33,31,3E
    0FE4	.XBYTE	20 [4]
    0848  REVERSE_CACHE:
    0848	.XBYTE	4E,4F,50
    084B	.XBYTE	20 [29]
    0868  REVERSE_CACHE+32:
    0868	.XBYTE	52,45,56,45,52,53,45,20,50,41,52,49,54,59,20,47
    0878	.XBYTE	31,2C,42,59,54,45,20,41,2C,41,44,44,52
    0885	.XBYTE	20 [3]
    0888  REVERSE_CACHE+64:
    0888	.XBYTE	52,45,56,45,52,53,45,20,50,41,52,49,54,59,20,47
    0898	.XBYTE	31,2C,42,59,54,45,20,42,2C,41,44,44,52
    08A5	.XBYTE	20 [3]
    08A8  REVERSE_CACHE+96:
    08A8	.XBYTE	52,45,56,45,52,53,45,20,50,41,52,49,54,59,20,47
    08B8	.XBYTE	31,2C,42,59,54,45,20,43,2C,41,44,44,52
    08C5	.XBYTE	20 [3]
    08C8  REVERSE_CACHE+128:
    08C8	.XBYTE	52,45,56,45,52,53,45,20,50,41,52,49,54,59,20,47
    08D8	.XBYTE	30,2C,42,59,54,45,20,41,2C,41,44,44,52
    08E5	.XBYTE	20 [3]
    08E8  REVERSE_CACHE+160:
    08E8	.XBYTE	52,45,56,45,52,53,45,20,50,41,52,49,54,59,20,47
    08F8	.XBYTE	30,2C,42,59,54,45,20,42,2C,41,44,44,52
    0905	.XBYTE	20 [3]
    0908  REVERSE_CACHE+192:
    0908	.XBYTE	52,45,56,45,52,53,45,20,50,41,52,49,54,59,20,47
    0918	.XBYTE	30,2C,42,59,54,45,20,43,2C,41,44,44,52
    0925	.XBYTE	20 [3]
    0928  REVERSE_CACHE+224:
    0928	.XBYTE	55,4E,55,53,45,44

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 16  
					SBIREG.FOR.16       

    092E	.XBYTE	20 [26]
    0948  REVERSE_CACHE+256:
    0948	.XBYTE	52,45,56,45,52,53,45,20,50,41,52,49,54,59,20,47
    0958	.XBYTE	31,2C,42,59,54,45,20,33,2C,44,41,54,41
    0965	.XBYTE	20 [3]
    0968  REVERSE_CACHE+288:
    0968	.XBYTE	52,45,56,45,52,53,45,20,50,41,52,49,54,59,20,47
    0978	.XBYTE	31,2C,42,59,54,45,20,32,2C,44,41,54,41
    0985	.XBYTE	20 [3]
    0988  REVERSE_CACHE+320:
    0988	.XBYTE	52,45,56,45,52,53,45,20,50,41,52,49,54,59,20,47
    0998	.XBYTE	31,2C,42,59,54,45,20,31,2C,44,41,54,41
    09A5	.XBYTE	20 [3]
    09A8  REVERSE_CACHE+352:
    09A8	.XBYTE	52,45,56,45,52,53,45,20,50,41,52,49,54,59,20,47
    09B8	.XBYTE	31,2C,42,59,54,45,20,30,2C,44,41,54,41
    09C5	.XBYTE	20 [3]
    09C8  REVERSE_CACHE+384:
    09C8	.XBYTE	52,45,56,45,52,53,45,20,50,41,52,49,54,59,20,47
    09D8	.XBYTE	30,2C,42,59,54,45,20,33,2C,44,41,54,41
    09E5	.XBYTE	20 [3]
    09E8  REVERSE_CACHE+416:
    09E8	.XBYTE	52,45,56,45,52,53,45,20,50,41,52,49,54,59,20,47
    09F8	.XBYTE	30,2C,42,59,54,45,20,32,2C,44,41,54,41
    0A05	.XBYTE	20 [3]
    0A08  REVERSE_CACHE+448:
    0A08	.XBYTE	52,45,56,45,52,53,45,20,50,41,52,49,54,59,20,47
    0A18	.XBYTE	30,2C,42,59,54,45,20,31,2C,44,41,54,41
    0A25	.XBYTE	20 [3]
    0A28  REVERSE_CACHE+480:
    0A28	.XBYTE	52,45,56,45,52,53,45,20,50,41,52,49,54,59,20,47
    0A38	.XBYTE	30,2C,42,59,54,45,20,30,2C,44,41,54,41
    0A45	.XBYTE	20 [3]
    0094  FORCE_REPLACE:
    0094	.XBYTE	52,41,4E,44,4F,4D,20,52,45,50,4C,41,43,45,4D,45
    00A4	.XBYTE	4E,54
    00A6	.XBYTE	20 [2]
    00A8  FORCE_REPLACE+20:
    00A8	.XBYTE	47,52,4F,55,50,20,31,20,41,4C,57,41,59,53
    00B6	.XBYTE	20 [6]
    00BC  FORCE_REPLACE+40:
    00BC	.XBYTE	47,52,4F,55,50,20,30,20,41,4C,57,41,59,53
    00CA	.XBYTE	20 [6]
    00D0  FORCE_REPLACE+60:
    00D0	.XBYTE	55,4E,44,45,46,49,4E,45,44
    00D9	.XBYTE	20 [11]
    00E4  FORCE_MISS:
    00E4	.XBYTE	4E,4F,20,4D,49,53,53,45,53,20,46,4F,52,43,45,44
    00F4	.XBYTE	20 [9]
    00FD  FORCE_MISS+25:
    00FD	.XBYTE	46,4F,52,43,45,20,4D,49,53,53,20,4F,4E,20,47,52
    010D	.XBYTE	4F,55,50,20,31
    0112	.XBYTE	20 [4]
    0116  FORCE_MISS+50:
    0116	.XBYTE	46,4F,52,43,45,20,4D,49,53,53,20,4F,4E,20,47,52
    0126	.XBYTE	4F,55,50,20,30

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 17  
					SBIREG.FOR.16       

    012B	.XBYTE	20 [4]
    012F  FORCE_MISS+75:
    012F	.XBYTE	46,4F,52,43,45,20,4D,49,53,53,20,4F,4E,20,42,4F
    013F	.XBYTE	54,48,20,47,52,4F,55,50,53
    004C  MODE:
    004C	.XBYTE	4B,45,52,4E,45,4C
    0052	.XBYTE	20 [4]
    0056  MODE+10:
    0056	.XBYTE	45,58,45,43,55,54,49,56,45
    005F	.XBYTE	20 [1]
    0060  MODE+20:
    0060	.XBYTE	53,55,50,45,52,56,49,53,4F,52
    006A  MODE+30:
    006A	.XBYTE	55,53,45,52
    006E	.XBYTE	20 [6]
    000C  MASK:
    000C	.XBYTE	30,30,30,30
    0010  MASK+4:
    0010	.XBYTE	30,30,30,31
    0014  MASK+8:
    0014	.XBYTE	30,30,31,30
    0018  MASK+12:
    0018	.XBYTE	30,30,31,31
    001C  MASK+16:
    001C	.XBYTE	30,31,30,30
    0020  MASK+20:
    0020	.XBYTE	30,31,30,31
    0024  MASK+24:
    0024	.XBYTE	30,31,31,30
    0028  MASK+28:
    0028	.XBYTE	30,31,31,31
    002C  MASK+32:
    002C	.XBYTE	31,30,30,30
    0030  MASK+36:
    0030	.XBYTE	31,30,30,31
    0034  MASK+40:
    0034	.XBYTE	31,30,31,30
    0038  MASK+44:
    0038	.XBYTE	31,30,31,31
    003C  MASK+48:
    003C	.XBYTE	31,31,30,30
    0040  MASK+52:
    0040	.XBYTE	31,31,30,31
    0044  MASK+56:
    0044	.XBYTE	31,31,31,30
    0048  MASK+60:
    0048	.XBYTE	31,31,31,31
    0074  NUMBER:
    0074	.XBYTE	20,30
    0076  NUMBER+2:
    0076	.XBYTE	20,31
    0078  NUMBER+4:
    0078	.XBYTE	20,32
    007A  NUMBER+6:
    007A	.XBYTE	20,33
    007C  NUMBER+8:

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 18  
					SBIREG.FOR.16       

    007C	.XBYTE	20,34
    007E  NUMBER+10:
    007E	.XBYTE	20,35
    0080  NUMBER+12:
    0080	.XBYTE	20,36
    0082  NUMBER+14:
    0082	.XBYTE	20,37
    0084  NUMBER+16:
    0084	.XBYTE	20,38
    0086  NUMBER+18:
    0086	.XBYTE	20,39
    0088  NUMBER+20:
    0088	.XBYTE	31,30
    008A  NUMBER+22:
    008A	.XBYTE	31,31
    008C  NUMBER+24:
    008C	.XBYTE	31,32
    008E  NUMBER+26:
    008E	.XBYTE	31,33
    0090  NUMBER+28:
    0090	.XBYTE	31,34
    0092  NUMBER+30:
    0092	.XBYTE	31,35
    0AC8  SBIS_BITS:
    0AC8	.XBYTE	54,52,27,53,3A
    0ACD	.XBYTE	20 [27]
    0AE8  SBIS_BITS+32:
    0AE8	.XBYTE	43,4F,4E,46,49,52,4D,20,43,4F,44,45,3C,31,37,3A
    0AF8	.XBYTE	31,36,3E,3A
    0AFC	.XBYTE	20 [12]
    0B28  SBIS_BITS+96:
    0B28	.XBYTE	43,4F,4D,4D,41,4E,44,20,43,4F,44,45,3C,32,31,3A
    0B38	.XBYTE	31,38,3E,3A
    0B3C	.XBYTE	20 [12]
    0B48  SBIS_BITS+128:
    0B48	.XBYTE	4D,41,53,4B,28,42,49,4E,41,52,59,29,3C,32,31,3A
    0B58	.XBYTE	31,38,3E,3A
    0B5C	.XBYTE	20 [12]
    0BA8  SBIS_BITS+224:
    0BA8	.XBYTE	54,41,47,3C,32,34,3A,32,32,3E,3A
    0BB3	.XBYTE	20 [21]
    0C08  SBIS_BITS+320:
    0C08	.XBYTE	49,44,3C,32,39,3A,32,35,3E,3A
    0C12	.XBYTE	20 [22]
    0CA8  SBIS_BITS+480:
    0CA8	.XBYTE	49,4E,54,45,52,4C,4F,43,4B,20,42,49,54,20,53,45
    0CB8	.XBYTE	54,3C,33,30,3E
    0CBD	.XBYTE	20 [11]
    0CC8  SBIS_BITS+512:
    0CC8	.XBYTE	46,49,52,53,54,20,45,4E,54,52,59,20,41,46,54,45
    0CD8	.XBYTE	52,20,46,41,55,4C,54,3C,33,31,3E
    0CE3	.XBYTE	20 [5]
    0000  CONFIRM_CODE:
    0000	.XBYTE	4E,2F,52
    0003  CONFIRM_CODE+3:
    0003	.XBYTE	41,43,4B

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 19  
					SBIREG.FOR.16       

    0006  CONFIRM_CODE+6:
    0006	.XBYTE	42,53,59
    0009  CONFIRM_CODE+9:
    0009	.XBYTE	45,52,52

    0000	.PSECT	$CODE
    0000  SBI_REG::
    0000	.WORD	^M<IV,R2,R3,R4,R5,R8,R9,R10,R11>
    0002	MOVAL	$LOCAL+^X1024, R11
    0009	MOVL	REG(AP), $LOCAL+^X1064(R11)
    000E	MOVL	REG(AP), $LOCAL+^X1070(R11)
									    ; 0221
    0013	MOVAB	@LUN(AP), $LOCAL+^X1080(R11)
    0018	CALLG	$LOCAL+^X107C(R11), LINCHK
									    ; 0222
    0020	PUSHAL	.100
    0026	CVTBL	@LUN(AP), -(SP)
    002A	CALLS	#2, FOR$WRITE_SF
    0031	PUSHAB	$LOCAL+^X1088(R11)
    0034	CALLS	#1, FOR$IO_T_DS
    003B	CALLS	#0, FOR$IO_END
									    ; 0224
    0042	CVTFL	FAULT(R11), R10
    0046	MOVAL	@$LOCAL+^X1070(R11), R8
    004A	BICL3	#^X53F0FFFF, (R8)[R10], -(SP)
    0053	MOVL	SP, $LOCAL+^X1094(R11)
    0057	CALLG	$LOCAL+^X1090(R11), BITCNT
    005F	ADDL2	#4, SP
    0062	MOVW	R0, R9
									    ; 0225
    0065	MOVAB	@LUN(AP), $LOCAL+^X109C(R11)
    006A	ADDW3	#1, R9, -(SP)
    006E	MOVL	SP, $LOCAL+^X10A0(R11)
    0072	CALLG	$LOCAL+^X1098(R11), LINCHK
    007A	ADDL2	#2, SP
									    ; 0226
    007D	PUSHAL	.200
    0083	CVTBL	@LUN(AP), -(SP)
    0087	CALLS	#2, FOR$WRITE_SF
    008E	PUSHAB	$LOCAL+^X10A4(R11)
    0092	CALLS	#1, FOR$IO_T_DS
    0099	PUSHAL	(R8)[R10]
    009C	CALLS	#1, FOR$IO_L_R
    00A3	CALLS	#0, FOR$IO_END
									    ; 0228
    00AA	MOVAB	@LUN(AP), $LOCAL+^X10B8(R11)
    00B0	MOVAL	(R8)[R10], $LOCAL+^X10BC(R11)
    00B6	CALLG	$LOCAL+^X10B4(R11), BITS_OUTPUT
									    ; 0229
    00BF	BICL3	#^X1FFFFFFF, 4(R8), -(SP)
    00C8	MOVL	SP, $LOCAL+^X1094(R11)
    00CC	CALLG	$LOCAL+^X1090(R11), BITCNT
    00D4	ADDL2	#4, SP
    00D7	ADDW3	#7, R0, R9
									    ; 0230
    00DB	MOVAL	4(R8), $LOCAL+^X10DC(R11)

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 20  
					SBIREG.FOR.16       

    00E1	CALLG	$LOCAL+^X10D0(R11), LIB$EXTZV
    00EA	MOVL	R0, TAG(R11)
									    ; 0231
    00EE	CMPL	R0, #3
    00F1	BNEQ	L$KBIM
    00F3	INCW	R9
    00F5  L$KBIM:
    00F5	MOVW	R9, LINE_CT(R11)
									    ; 0232
    00F9	MOVAB	@LUN(AP), $LOCAL+^X10E4(R11)
    00FF	CALLG	$LOCAL+^X10E0(R11), LINCHK
									    ; 0233
    0108	PUSHAL	.200
    010E	CVTBL	@LUN(AP), R10
    0112	PUSHL	R10
    0114	CALLS	#2, FOR$WRITE_SF
    011B	PUSHAB	$LOCAL+^X10EC(R11)
    011F	CALLS	#1, FOR$IO_T_DS
    0126	PUSHAL	4(R8)
    0129	CALLS	#1, FOR$IO_L_R
    0130	CALLS	#0, FOR$IO_END
									    ; 0235
    0137	BITL	4(R8), #^X80000000
    013F	BEQL	L$KBEN
    0141	PUSHAL	.300
    0147	PUSHL	R10
    0149	CALLS	#2, FOR$WRITE_SF
    0150	MOVW	#32, $LOCAL+^X10F4(R11)
    0155	MOVAB	SBISC_BITS+480(R11), $LOCAL+^X10F8(R11)
    015C	PUSHAB	$LOCAL+^X10F4(R11)
    0160	CALLS	#1, FOR$IO_T_DS
    0167	CALLS	#0, FOR$IO_END
    016E  L$KBEN:
									    ; 0236
    016E	BITL	4(R8), #^X40000000
    0176	BEQL	L$KBKN
    0178	PUSHAL	.300
    017E	PUSHL	R10
    0180	CALLS	#2, FOR$WRITE_SF
    0187	MOVW	#32, $LOCAL+^X10F4(R11)
    018C	MOVAB	SBISC_BITS+448(R11), $LOCAL+^X10F8(R11)
    0193	PUSHAB	$LOCAL+^X10F4(R11)
    0197	CALLS	#1, FOR$IO_T_DS
    019E	CALLS	#0, FOR$IO_END
    01A5  L$KBKN:
									    ; 0237
    01A5	BITL	4(R8), #^X20000000
    01AD	BEQL	L$KBAO
    01AF	PUSHAL	.300
    01B5	PUSHL	R10
    01B7	CALLS	#2, FOR$WRITE_SF
    01BE	MOVW	#32, $LOCAL+^X10F4(R11)
    01C3	MOVAB	SBISC_BITS+416(R11), $LOCAL+^X10F8(R11)
    01CA	PUSHAB	$LOCAL+^X10F4(R11)
    01CE	CALLS	#1, FOR$IO_T_DS
    01D5	CALLS	#0, FOR$IO_END

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 21  
					SBIREG.FOR.16       

    01DC  L$KBAO:
									    ; 0238
    01DC	MOVAL	4(R8), $LOCAL+^X1108(R11)
    01E2	CALLG	$LOCAL+^X10FC(R11), LIB$EXTZV
    01EB	MOVL	R0, TEMP(R11)
									    ; 0239
    01EF	PUSHAL	.300
    01F5	CVTBL	@LUN(AP), R10
    01F9	PUSHL	R10
    01FB	CALLS	#2, FOR$WRITE_SF
    0202	MOVW	#32, $LOCAL+^X10F4(R11)
    0207	MOVAB	SBISC_BITS+352(R11), $LOCAL+^X10F8(R11)
    020E	PUSHAB	$LOCAL+^X10F4(R11)
    0212	CALLS	#1, FOR$IO_T_DS
    0219	PUSHAL	TEMP(R11)
    021C	CALLS	#1, FOR$IO_L_R
    0223	CALLS	#0, FOR$IO_END
									    ; 0240
    022A	PUSHAL	.310
    0230	PUSHL	R10
    0232	CALLS	#2, FOR$WRITE_SF
    0239	MULL3	#32, TEMP(R11), R0
    023E	MOVW	#32, $LOCAL+^X10F4(R11)
    0243	MOVAB	LOCK_CODE(R11)[R0], $LOCAL+^X10F8(R11)
    024B	PUSHAB	$LOCAL+^X10F4(R11)
    024F	CALLS	#1, FOR$IO_T_DS
    0256	CALLS	#0, FOR$IO_END
									    ; 0242
    025D	MOVAL	4(R8), $LOCAL+^X1118(R11)
    0263	CALLG	$LOCAL+^X110C(R11), LIB$EXTZV
    026C	MOVL	R0, TEMP(R11)
									    ; 0243
    0270	CMPL	TAG(R11), #3
    0274	BNEQ	L$KBMO
									    ; 0244
    0276	PUSHAL	.300
    027C	CVTBL	@LUN(AP), R10
    0280	PUSHL	R10
    0282	CALLS	#2, FOR$WRITE_SF
    0289	MOVW	#32, $LOCAL+^X10F4(R11)
    028E	MOVAB	SBISC_BITS+224(R11), $LOCAL+^X10F8(R11)
    0295	PUSHAB	$LOCAL+^X10F4(R11)
    0299	CALLS	#1, FOR$IO_T_DS
    02A0	PUSHAL	TEMP(R11)
    02A3	CALLS	#1, FOR$IO_L_R
    02AA	CALLS	#0, FOR$IO_END
									    ; 0245
    02B1	PUSHAL	.310
    02B7	PUSHL	R10
    02B9	CALLS	#2, FOR$WRITE_SF
    02C0	MULL3	#32, TEMP(R11), R0
    02C5	MOVW	#32, $LOCAL+^X10F4(R11)
    02CA	MOVAB	COMMAND_BITS(R11)[R0], $LOCAL+^X10F8(R11)
    02D2	PUSHAB	$LOCAL+^X10F4(R11)
    02D6	CALLS	#1, FOR$IO_T_DS
    02DD	CALLS	#0, FOR$IO_END

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 22  
					SBIREG.FOR.16       

									    ; 0246
    02E4	BRB	L$KBCP
    02E6  L$KBMO:
									    ; 0247
    02E6	PUSHAL	.320
    02EC	CVTBL	@LUN(AP), -(SP)
    02F0	CALLS	#2, FOR$WRITE_SF
    02F7	MOVW	#32, $LOCAL+^X10F4(R11)
    02FC	MOVAB	SBISC_BITS+256(R11), $LOCAL+^X10F8(R11)
    0303	PUSHAB	$LOCAL+^X10F4(R11)
    0307	CALLS	#1, FOR$IO_T_DS
    030E	MULL3	#4, TEMP(R11), R0
    0313	MOVW	#4, $LOCAL+^X111C(R11)
    0318	MOVAB	MASK(R11)[R0], $LOCAL+^X1120(R11)
    0320	PUSHAB	$LOCAL+^X111C(R11)
    0324	CALLS	#1, FOR$IO_T_DS
    032B	CALLS	#0, FOR$IO_END
									    ; 0248
    0332  L$KBCP:
									    ; 0250
    0332	PUSHAL	.300
    0338	CVTBL	@LUN(AP), R10
    033C	PUSHL	R10
    033E	CALLS	#2, FOR$WRITE_SF
    0345	MOVW	#32, $LOCAL+^X10F4(R11)
    034A	MOVAB	SBISC_BITS+128(R11), $LOCAL+^X10F8(R11)
    0351	PUSHAB	$LOCAL+^X10F4(R11)
    0355	CALLS	#1, FOR$IO_T_DS
    035C	PUSHAL	TAG(R11)
    035F	CALLS	#1, FOR$IO_L_R
    0366	CALLS	#0, FOR$IO_END
									    ; 0251
    036D	PUSHAL	.310
    0373	PUSHL	R10
    0375	CALLS	#2, FOR$WRITE_SF
    037C	MULL3	#32, TAG(R11), R0
    0381	MOVW	#32, $LOCAL+^X10F4(R11)
    0386	MOVAB	TAG_BITS(R11)[R0], $LOCAL+^X10F8(R11)
    038E	PUSHAB	$LOCAL+^X10F4(R11)
    0392	CALLS	#1, FOR$IO_T_DS
    0399	CALLS	#0, FOR$IO_END
									    ; 0252
    03A0	MOVAL	4(R8), $LOCAL+^X1130(R11)
    03A6	CALLG	$LOCAL+^X1124(R11), LIB$EXTZV
    03AF	MOVL	R0, TEMP(R11)
									    ; 0253
    03B3	PUSHAL	.300
    03B9	CVTBL	@LUN(AP), -(SP)
    03BD	CALLS	#2, FOR$WRITE_SF
    03C4	MOVW	#32, $LOCAL+^X10F4(R11)
    03C9	MOVAB	SBISC_BITS(R11), $LOCAL+^X10F8(R11)
    03D0	PUSHAB	$LOCAL+^X10F4(R11)
    03D4	CALLS	#1, FOR$IO_T_DS
    03DB	PUSHAL	TEMP(R11)
    03DE	CALLS	#1, FOR$IO_L_R
    03E5	CALLS	#0, FOR$IO_END

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 23  
					SBIREG.FOR.16       

									    ; 0254
    03EC	MOVAL	@$LOCAL+^X1070(R11), R9
    03F0	BICL3	#^XF9FE0FF, 8(R9), -(SP)
    03F9	MOVL	SP, $LOCAL+^X1094(R11)
    03FD	CALLG	$LOCAL+^X1090(R11), BITCNT
    0405	ADDL2	#4, SP
    0408	ADDW3	#8, R0, LINE_CT(R11)
									    ; 0255
    040D	MOVAB	@LUN(AP), $LOCAL+^X10E4(R11)
    0413	CALLG	$LOCAL+^X10E0(R11), LINCHK
									    ; 0256
    041C	PUSHAL	.200
    0422	CVTBL	@LUN(AP), -(SP)
    0426	CALLS	#2, FOR$WRITE_SF
    042D	PUSHAB	$LOCAL+^X1134(R11)
    0431	CALLS	#1, FOR$IO_T_DS
    0438	PUSHAL	8(R9)
    043B	CALLS	#1, FOR$IO_L_R
    0442	CALLS	#0, FOR$IO_END
									    ; 0257
    0449	MOVAB	@LUN(AP), $LOCAL+^X1148(R11)
    044F	MOVAL	8(R9), $LOCAL+^X114C(R11)
    0455	CALLG	$LOCAL+^X1144(R11), BITS_OUTPUT
									    ; 0258
    045E	MOVAL	8(R9), $LOCAL+^X116C(R11)
    0464	CALLG	$LOCAL+^X1160(R11), LIB$EXTZV
    046D	MOVL	R0, TEMP(R11)
									    ; 0259
    0471	PUSHAL	.300
    0477	CVTBL	@LUN(AP), R10
    047B	PUSHL	R10
    047D	CALLS	#2, FOR$WRITE_SF
    0484	MOVW	#32, $LOCAL+^X10F4(R11)
    0489	MOVAB	SBIMT_BITS+160(R11), $LOCAL+^X10F8(R11)
    0490	PUSHAB	$LOCAL+^X10F4(R11)
    0494	CALLS	#1, FOR$IO_T_DS
    049B	PUSHAL	TEMP(R11)
    049E	CALLS	#1, FOR$IO_L_R
    04A5	CALLS	#0, FOR$IO_END
									    ; 0260
    04AC	PUSHAL	.310
    04B2	PUSHL	R10
    04B4	CALLS	#2, FOR$WRITE_SF
    04BB	MULL3	#20, TEMP(R11), R0
    04C0	MOVW	#20, $LOCAL+^X10F4(R11)
    04C5	MOVAB	FORCE_REPLACE(R11)[R0], $LOCAL+^X10F8(R11)
    04CD	PUSHAB	$LOCAL+^X10F4(R11)
    04D1	CALLS	#1, FOR$IO_T_DS
    04D8	CALLS	#0, FOR$IO_END
									    ; 0261
    04DF	MOVAL	8(R9), $LOCAL+^X117C(R11)
    04E5	CALLG	$LOCAL+^X1170(R11), LIB$EXTZV
    04EE	MOVL	R0, TEMP(R11)
									    ; 0262
    04F2	PUSHAL	.300
    04F8	CVTBL	@LUN(AP), R10

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 24  
					SBIREG.FOR.16       

    04FC	PUSHL	R10
    04FE	CALLS	#2, FOR$WRITE_SF
    0505	MOVW	#32, $LOCAL+^X10F4(R11)
    050A	MOVAB	SBIMT_BITS+224(R11), $LOCAL+^X10F8(R11)
    0511	PUSHAB	$LOCAL+^X10F4(R11)
    0515	CALLS	#1, FOR$IO_T_DS
    051C	PUSHAL	TEMP(R11)
    051F	CALLS	#1, FOR$IO_L_R
    0526	CALLS	#0, FOR$IO_END
									    ; 0263
    052D	PUSHAL	.310
    0533	PUSHL	R10
    0535	CALLS	#2, FOR$WRITE_SF
    053C	MULL3	#25, TEMP(R11), R0
    0541	MOVW	#25, $LOCAL+^X10F4(R11)
    0546	MOVAB	FORCE_MISS(R11)[R0], $LOCAL+^X10F8(R11)
    054E	PUSHAB	$LOCAL+^X10F4(R11)
    0552	CALLS	#1, FOR$IO_T_DS
    0559	CALLS	#0, FOR$IO_END
									    ; 0264
    0560	MOVAL	8(R9), $LOCAL+^X118C(R11)
    0566	CALLG	$LOCAL+^X1180(R11), LIB$EXTZV
    056F	MOVL	R0, TEMP(R11)
									    ; 0265
    0573	PUSHAL	.300
    0579	CVTBL	@LUN(AP), R10
    057D	PUSHL	R10
    057F	CALLS	#2, FOR$WRITE_SF
    0586	MOVW	#32, $LOCAL+^X10F4(R11)
    058B	MOVAB	SBIMT_BITS+288(R11), $LOCAL+^X10F8(R11)
    0592	PUSHAB	$LOCAL+^X10F4(R11)
    0596	CALLS	#1, FOR$IO_T_DS
    059D	PUSHAL	TEMP(R11)
    05A0	CALLS	#1, FOR$IO_L_R
    05A7	CALLS	#0, FOR$IO_END
									    ; 0266
    05AE	PUSHAL	.310
    05B4	PUSHL	R10
    05B6	CALLS	#2, FOR$WRITE_SF
    05BD	MULL3	#32, TEMP(R11), R0
    05C2	MOVW	#32, $LOCAL+^X10F4(R11)
    05C7	MOVAB	REVERSE_CACHE(R11)[R0], $LOCAL+^X10F8(R11)
    05CF	PUSHAB	$LOCAL+^X10F4(R11)
    05D3	CALLS	#1, FOR$IO_T_DS
    05DA	CALLS	#0, FOR$IO_END
									    ; 0267
    05E1	MOVAB	@LUN(AP), $LOCAL+^X119C(R11)
    05E7	MOVAL	8(R9), $LOCAL+^X11A0(R11)
    05ED	CALLG	$LOCAL+^X1198(R11), BITS_OUTPUT
									    ; 0268
    05F6	MOVAL	8(R9), $LOCAL+^X11C0(R11)
    05FC	CALLG	$LOCAL+^X11B4(R11), LIB$EXTZV
    0605	MOVL	R0, TEMP(R11)
									    ; 0269
    0609	PUSHAL	.300
    060F	CVTBL	@LUN(AP), -(SP)

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 25  
					SBIREG.FOR.16       

    0613	CALLS	#2, FOR$WRITE_SF
    061A	MOVW	#32, $LOCAL+^X10F4(R11)
    061F	MOVAB	SBIMT_BITS+480(R11), $LOCAL+^X10F8(R11)
    0626	PUSHAB	$LOCAL+^X10F4(R11)
    062A	CALLS	#1, FOR$IO_T_DS
    0631	PUSHAL	TEMP(R11)
    0634	CALLS	#1, FOR$IO_L_R
    063B	CALLS	#0, FOR$IO_END
									    ; 0270
    0642	MOVAB	@LUN(AP), $LOCAL+^X11D0(R11)
    0648	MOVAL	8(R9), $LOCAL+^X11D4(R11)
    064E	CALLG	$LOCAL+^X11CC(R11), BITS_OUTPUT
									    ; 0271
    0657	MOVAB	@LUN(AP), $LOCAL+^X109C(R11)
    065C	MOVAL	12(R9), $LOCAL+^X10A0(R11)
    0661	CALLG	$LOCAL+^X1098(R11), SBIER
									    ; 0272
    0669	MOVAB	@LUN(AP), $LOCAL+^X109C(R11)
    066E	MOVAL	16(R9), $LOCAL+^X10A0(R11)
    0673	CALLG	$LOCAL+^X1098(R11), SBITA
									    ; 0273
    067B	MOVAB	@LUN(AP), $LOCAL+^X11EC(R11)
    0681	CALLG	$LOCAL+^X11E8(R11), LINCHK
									    ; 0274
    068A	PUSHAL	.100
    0690	CVTBL	@LUN(AP), R10
    0694	PUSHL	R10
    0696	CALLS	#2, FOR$WRITE_SF
    069D	PUSHAB	$LOCAL+^X11F4(R11)
    06A1	CALLS	#1, FOR$IO_T_DS
    06A8	CALLS	#0, FOR$IO_END
									    ; 0275
    06AF	PUSHAL	.330
    06B5	PUSHL	R10
    06B7	CALLS	#2, FOR$WRITE_SF
    06BE	MOVL	#5, R10
    06C1  L$LCOB:
    06C1	PUSHAL	(R9)[R10]
    06C4	CALLS	#1, FOR$IO_L_R
    06CB	AOBLEQ	#20, R10, L$LCOB
    06CF	MOVL	R10, I(R11)
    06D3	CALLS	#0, FOR$IO_END
									    ; 0277
    06DA	MOVAB	@LUN(AP), $LOCAL+^X1080(R11)
    06DF	CALLG	$LOCAL+^X107C(R11), LINCHK
									    ; 0278
    06E7	PUSHAL	.100
    06ED	CVTBL	@LUN(AP), -(SP)
    06F1	CALLS	#2, FOR$WRITE_SF
    06F8	PUSHAB	$LOCAL+^X11FC(R11)
    06FC	CALLS	#1, FOR$IO_T_DS
    0703	CALLS	#0, FOR$IO_END
									    ; 0279
    070A	MOVL	#15, COUNT(R11)
									    ; 0280
    070E	MOVL	#5, I(R11)

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 26  
					SBIREG.FOR.16       

    0712  L$LCFD:
									    ; 0281
    0712	MOVAL	@$LOCAL+^X1070(R11), R9
    0716	MOVL	I(R11), R8
    071A	BICL3	#^X3FFFFFFF, (R9)[R8], -(SP)
    0723	MOVL	SP, $LOCAL+^X1094(R11)
    0727	CALLG	$LOCAL+^X1090(R11), BITCNT
    072F	ADDL2	#4, SP
    0732	ADDW3	#8, R0, R10
									    ; 0282
    0736	MOVAL	(R9)[R8], $LOCAL+^X1210(R11)
    073C	CALLG	$LOCAL+^X1204(R11), LIB$EXTZV
    0745	MOVL	R0, TAG(R11)
									    ; 0283
    0749	CMPL	R0, #3
    074C	BNEQ	L$LCGE
    074E	INCW	R10
    0750  L$LCGE:
									    ; 0284
    0750	MOVAL	(R9)[R8], $LOCAL+^X1218(R11)
    0756	CALLG	$LOCAL+^X1214(R11), VBITCNT
    075F	CVTWL	R0, TR_COUNT(R11)
									    ; 0285
    0763	CMPL	TR_COUNT(R11), #8
    0767	BLEQ	L$LCME
    0769	INCW	R10
    076B  L$LCME:
    076B	MOVW	R10, LINE_CT(R11)
									    ; 0286
    076F	MOVAB	@LUN(AP), $LOCAL+^X10E4(R11)
    0775	CALLG	$LOCAL+^X10E0(R11), LINCHK
									    ; 0287
    077E	MOVL	COUNT(R11), R10
    0782	BNEQ	L$LCCF
									    ; 0288
    0784	MOVC5	#8, $PDATA+^XED, #^X20, #55, STRING(R11)
									    ; 0289
    078F	BRB	L$LCIF
    0791  L$LCCF:
    0791	CMPL	R10, #1
    0794	BNEQ	L$LCOF
									    ; 0290
    0796	MOVC5	#5, $PDATA+^XF5, #^X20, #55, STRING(R11)
									    ; 0291
    07A1	BRB	L$LCIF
    07A3  L$LCOF:
									    ; 0292
    07A3	MULL3	#2, R10, R0
    07A7	SUBL2	#2, SP
    07AA	MOVC3	#2, NUMBER-2(R11)[R0], (SP)
    07B1	SUBL2	#6, SP
    07B4	MOVC3	#6, $PDATA+^XFA, (SP)
    07BC	MOVC5	#8, (SP), #^X20, #55, STRING(R11)
    07C3	MOVL	R1, SP
									    ; 0293
    07C6  L$LCIF:

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 27  
					SBIREG.FOR.16       

									    ; 0294
    07C6	MOVAB	-(R10), COUNT(R11)
									    ; 0295
    07CA	PUSHAL	.200
    07D0	CVTBL	@LUN(AP), -(SP)
    07D4	CALLS	#2, FOR$WRITE_SF
    07DB	PUSHAB	$LOCAL+^X1074(R11)
    07DE	CALLS	#1, FOR$IO_T_DS
    07E5	PUSHAL	(R9)[R8]
    07E8	CALLS	#1, FOR$IO_L_R
    07EF	CALLS	#0, FOR$IO_END
									    ; 0296
    07F6	MOVAB	@LUN(AP), $LOCAL+^X1230(R11)
    07FC	MOVAL	(R9)[R8], $LOCAL+^X1234(R11)
    0802	CALLG	$LOCAL+^X122C(R11), BITS_OUTPUT
									    ; 0297
    080B	MOVAL	(R9)[R8], $LOCAL+^X1254(R11)
    0811	CALLG	$LOCAL+^X1248(R11), LIB$EXTZV
    081A	MOVL	R0, TEMP(R11)
									    ; 0298
    081E	PUSHAL	.300
    0824	CVTBL	@LUN(AP), R10
    0828	PUSHL	R10
    082A	CALLS	#2, FOR$WRITE_SF
    0831	MOVW	#32, $LOCAL+^X10F4(R11)
    0836	MOVAB	SBIS_BITS+320(R11), $LOCAL+^X10F8(R11)
    083D	PUSHAB	$LOCAL+^X10F4(R11)
    0841	CALLS	#1, FOR$IO_T_DS
    0848	PUSHAL	TEMP(R11)
    084B	CALLS	#1, FOR$IO_L_R
    0852	CALLS	#0, FOR$IO_END
									    ; 0299
    0859	PUSHAL	.300
    085F	PUSHL	R10
    0861	CALLS	#2, FOR$WRITE_SF
    0868	MOVW	#32, $LOCAL+^X10F4(R11)
    086D	MOVAB	SBIS_BITS+224(R11), $LOCAL+^X10F8(R11)
    0874	PUSHAB	$LOCAL+^X10F4(R11)
    0878	CALLS	#1, FOR$IO_T_DS
    087F	PUSHAL	TAG(R11)
    0882	CALLS	#1, FOR$IO_L_R
    0889	CALLS	#0, FOR$IO_END
									    ; 0300
    0890	PUSHAL	.310
    0896	PUSHL	R10
    0898	CALLS	#2, FOR$WRITE_SF
    089F	MULL3	#32, TAG(R11), R0
    08A4	MOVW	#32, $LOCAL+^X10F4(R11)
    08A9	MOVAB	TAG_BITS(R11)[R0], $LOCAL+^X10F8(R11)
    08B1	PUSHAB	$LOCAL+^X10F4(R11)
    08B5	CALLS	#1, FOR$IO_T_DS
    08BC	CALLS	#0, FOR$IO_END
									    ; 0301
    08C3	MOVAL	(R9)[R8], $LOCAL+^X1264(R11)
    08C9	CALLG	$LOCAL+^X1258(R11), LIB$EXTZV
    08D2	MOVL	R0, TEMP(R11)

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 28  
					SBIREG.FOR.16       

									    ; 0302
    08D6	CMPL	TAG(R11), #3
    08DA	BNEQ	L$LCEG
									    ; 0303
    08DC	PUSHAL	.300
    08E2	CVTBL	@LUN(AP), R10
    08E6	PUSHL	R10
    08E8	CALLS	#2, FOR$WRITE_SF
    08EF	MOVW	#32, $LOCAL+^X10F4(R11)
    08F4	MOVAB	SBIS_BITS+96(R11), $LOCAL+^X10F8(R11)
    08FB	PUSHAB	$LOCAL+^X10F4(R11)
    08FF	CALLS	#1, FOR$IO_T_DS
    0906	PUSHAL	TEMP(R11)
    0909	CALLS	#1, FOR$IO_L_R
    0910	CALLS	#0, FOR$IO_END
									    ; 0304
    0917	PUSHAL	.310
    091D	PUSHL	R10
    091F	CALLS	#2, FOR$WRITE_SF
    0926	MULL3	#32, TEMP(R11), R0
    092B	MOVW	#32, $LOCAL+^X10F4(R11)
    0930	MOVAB	COMMAND_BITS(R11)[R0], $LOCAL+^X10F8(R11)
    0938	PUSHAB	$LOCAL+^X10F4(R11)
    093C	CALLS	#1, FOR$IO_T_DS
    0943	CALLS	#0, FOR$IO_END
									    ; 0305
    094A	BRB	L$LCKG
    094C  L$LCEG:
									    ; 0306
    094C	PUSHAL	.320
    0952	CVTBL	@LUN(AP), -(SP)
    0956	CALLS	#2, FOR$WRITE_SF
    095D	MOVW	#32, $LOCAL+^X10F4(R11)
    0962	MOVAB	SBIS_BITS+128(R11), $LOCAL+^X10F8(R11)
    0969	PUSHAB	$LOCAL+^X10F4(R11)
    096D	CALLS	#1, FOR$IO_T_DS
    0974	MULL3	#4, TEMP(R11), R0
    0979	MOVW	#4, $LOCAL+^X111C(R11)
    097E	MOVAB	MASK(R11)[R0], $LOCAL+^X1120(R11)
    0986	PUSHAB	$LOCAL+^X111C(R11)
    098A	CALLS	#1, FOR$IO_T_DS
    0991	CALLS	#0, FOR$IO_END
									    ; 0307
    0998  L$LCKG:
									    ; 0308
    0998	MOVAL	(R9)[R8], $LOCAL+^X1274(R11)
    099E	CALLG	$LOCAL+^X1268(R11), LIB$EXTZV
    09A7	MOVL	R0, TEMP(R11)
									    ; 0309
    09AB	PUSHAL	.300
    09B1	CVTBL	@LUN(AP), R10
    09B5	PUSHL	R10
    09B7	CALLS	#2, FOR$WRITE_SF
    09BE	MOVW	#32, $LOCAL+^X10F4(R11)
    09C3	MOVAB	SBIS_BITS+32(R11), $LOCAL+^X10F8(R11)
    09CA	PUSHAB	$LOCAL+^X10F4(R11)

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 29  
					SBIREG.FOR.16       

    09CE	CALLS	#1, FOR$IO_T_DS
    09D5	PUSHAL	TEMP(R11)
    09D8	CALLS	#1, FOR$IO_L_R
    09DF	CALLS	#0, FOR$IO_END
									    ; 0310
    09E6	PUSHAL	.310
    09EC	PUSHL	R10
    09EE	CALLS	#2, FOR$WRITE_SF
    09F5	MULL3	#3, TEMP(R11), R0
    09FA	MOVW	#3, $LOCAL+^X10F4(R11)
    09FF	MOVAB	CONFIRM_CODE(R11)[R0], $LOCAL+^X10F8(R11)
    0A07	PUSHAB	$LOCAL+^X10F4(R11)
    0A0B	CALLS	#1, FOR$IO_T_DS
    0A12	CALLS	#0, FOR$IO_END
									    ; 0311
    0A19	MOVC5	#5, SBIS_BITS(R11), #^X20, #55, STRING(R11)
									    ; 0312
    0A22	CLRL	INDEX(R11)
									    ; 0313
    0A25	MOVL	#16, SIZE(R11)
									    ; 0314
    0A29	MOVL	#5, LENGTH(R11)
									    ; 0315
    0A2D	TSTL	TR_COUNT(R11)
    0A30	BEQL	L$LCAH
									    ; 0316
    0A32	MOVL	#1, J(R11)
    0A36	MOVAL	@$LOCAL+^X1070(R11), R10
    0A3A	MOVL	I(R11), R9
    0A3E  L$LCEI:
									    ; 0317
    0A3E	MOVAL	(R10)[R9], $LOCAL+^X1284(R11)
    0A44	CALLG	$LOCAL+^X1278(R11), LIB$FFS
    0A4D	MOVL	R0, STATUS(R11)
									    ; 0318
    0A51	BLBC	R0, .600
									    ; 0319
    0A54	MOVB	#44, -(SP)
    0A58	MULL3	#2, FPOS(R11), R0
    0A5D	SUBL2	#2, SP
    0A60	MOVC3	#2, NUMBER(R11)[R0], (SP)
    0A67	SUBL2	LENGTH(R11), SP
    0A6B	MOVC3	LENGTH(R11), STRING(R11), (SP)
    0A71	ADDL3	#3, LENGTH(R11), R8
    0A76	MOVC5	R8, (SP), #^X20, #55, STRING(R11)
    0A7D	ADDL3	R0, R1, SP
									    ; 0320
    0A81	ADDL2	#3, LENGTH(R11)
									    ; 0321
    0A85	CMPL	FPOS(R11), #15
    0A89	BGEQ	.600
									    ; 0322
    0A8B	ADDL3	#1, FPOS(R11), INDEX(R11)
									    ; 0323
    0A91	SUBL3	FPOS(R11), #16, SIZE(R11)
									    ; 0324

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 30  
					SBIREG.FOR.16       

    0A97	AOBLEQ	TR_COUNT(R11), J(R11), L$LCEI
									    ; 0325
    0A9D  .600:
									    ; 0326
    0A9D  L$LCAH:
									    ; 0327
    0A9D	MOVL	LENGTH(R11), R9
    0AA1	CMPL	R9, #29
    0AA4	BLEQ	L$LCLK
									    ; 0328
    0AA6	PUSHAL	.300
    0AAC	CVTBL	@LUN(AP), R10
    0AB0	PUSHL	R10
    0AB2	CALLS	#2, FOR$WRITE_SF
    0AB9	PUSHAB	$LOCAL+^X128C(R11)
    0ABD	CALLS	#1, FOR$IO_T_DS
    0AC4	CALLS	#0, FOR$IO_END
									    ; 0329
    0ACB	PUSHAL	.610
    0AD1	PUSHL	R10
    0AD3	CALLS	#2, FOR$WRITE_SF
    0ADA	SUBL3	#30, R9, R0
    0ADE	MOVW	R0, $LOCAL+^X1294(R11)
    0AE3	PUSHAB	$LOCAL+^X1294(R11)
    0AE7	CALLS	#1, FOR$IO_T_DS
    0AEE	CALLS	#0, FOR$IO_END
									    ; 0330
    0AF5	BRB	L$LCHL
    0AF7  L$LCLK:
									    ; 0331
    0AF7	PUSHAL	.300
    0AFD	CVTBL	@LUN(AP), -(SP)
    0B01	CALLS	#2, FOR$WRITE_SF
    0B08	SUBL3	#1, R9, R0
    0B0C	MOVW	R0, $LOCAL+^X129C(R11)
    0B11	PUSHAB	$LOCAL+^X129C(R11)
    0B15	CALLS	#1, FOR$IO_T_DS
    0B1C	CALLS	#0, FOR$IO_END
									    ; 0332
    0B23  L$LCHL:
									    ; 0334
    0B23	ACBL	#20, #1, I(R11), L$LCFD
									    ; 0335
    0B2A	RET	

    00ED	.PSECT	$PDATA
    00ED	.XBYTE	46,41,55,4C,54,2B,20,31
    00F5	.XBYTE	46,41,55,4C,54
    00FA	.XBYTE	46,41,55,4C,54,2D
		.END

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 31  
					SBIREG.FOR.16       

PROGRAM SECTIONS

    Name                 Bytes   Attributes

  0 $CODE                 2859   PIC CON REL LCL   SHR   EXE   RD NOWRT LONG
  1 $PDATA                 256   PIC CON REL LCL   SHR NOEXE   RD NOWRT LONG
  2 $LOCAL                4772   PIC CON REL LCL NOSHR NOEXE   RD   WRT LONG
  3 EMB                    500   PIC OVR REL GBL   SHR NOEXE   RD   WRT LONG


ENTRY POINTS

    Address  Type Name           

  0-00000000      SBI_REG        


VARIABLES

    Address  Type Name               Address  Type Name               Address  Type Name               Address  Type Name           

  2-00001050  I*4 COUNT            2-00001028  I*4 EMB$C_SB_LENGTH  2-0000102C  I*4 EMB$K_SB_LENGTH  3-0000001C  I*4 EMB$L_SB_ERROR 
  3-00000010  I*4 EMB$L_SB_FAULT   3-00000018  I*4 EMB$L_SB_MAINT   3-000000A4  I*4 EMB$L_SB_PC      3-000000A8  I*4 EMB$L_SB_PSL   
  3-00000064  I*4 EMB$L_SB_SBIRGS  3-00000000  R*4 EMB$L_SB_SID     3-00000014  I*4 EMB$L_SB_SILCMP  3-00000024  I*4 EMB$L_SB_SILO  
  3-00000020  I*4 EMB$L_SB_TIMOUT  2-00001024  I*4 EMB$L_SID        3-00000006  R*8 EMB$Q_SB_TIME    3-00000004  I*2 EMB$W_SB_ENTRY 
  3-0000000E  I*2 EMB$W_SB_ERRSEQ  2-00001054  R*4 FAULT            2-00001048  I*4 FPOS             2-00001058  I*4 I              
  2-00001044  I*4 INDEX            2-0000105C  I*4 J                2-0000104C  I*4 LENGTH           2-00001020  I*2 LINE_CT        
 AP-00000004@ L*1 LUN              2-00001040  I*4 SIZE             2-0000103C  I*4 STATUS           2-00000FE8  CHR STRING         
  2-00001030  I*4 TAG              2-00001034  I*4 TEMP             2-00001038  I*4 TR_COUNT       


ARRAYS

    Address  Type Name		       Bytes  Dimensions

  2-00000448  CHR COMMAND_BITS           512  (0:15)
  2-00000000  CHR CONFIRM_CODE            12  (0:3)
  3-00000000  L*1 EMB                    500  (0:499)
  2-000000E4  CHR FORCE_MISS             100  (0:3)
  2-00000094  CHR FORCE_REPLACE           80  (0:3)
  2-00000A48  CHR LOCK_CODE              128  (0:3)
  2-0000000C  CHR MASK                    64  (0:15)
  2-0000004C  CHR MODE                    40  (0:3)
  2-00000074  CHR NUMBER                  32  (0:15)
 AP-00000008@ I*4 REG                     84  (0:20)
  2-00000848  CHR REVERSE_CACHE          512  (0:15)
  2-00000148  CHR SBIFS_BITS             512  (16:31)
  2-00000CE8  CHR SBIMT_BITS             768  (8:31)
  2-00000648  CHR SBISC_BITS             512  (16:31)
  2-00000AC8  CHR SBIS_BITS              544  (15:31)
  2-00000348  CHR TAG_BITS               256  (0:7)


LABELS

    Address   Label       Address   Label       Address   Label       Address   Label       Address   Label       Address   Label   

SBI_REG         22-Aug-1978 02:53:29	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 32  
					SBIREG.FOR.16       


  1-000000B1  100'      1-000000B6  200'      1-000000C1  300'      1-000000CD  310'      1-000000D4  320'      1-000000DE  330'    
      **      400           **      500       0-00000A9D  600       1-000000E6  610'    


FUNCTIONS AND SUBROUTINES REFERENCED

BITCNT            BITS_OUTPUT       LIB$EXTZV         LIB$FFS           LINCHK            SBIER             SBITA          
VBITCNT        


Total Space Allocated = 8387 Bytes


COMPILER OPTIONS

/CHECK=(NOBOUNDS,OVERFLOW)
/DEBUG=(NOSYMBOLS,TRACEBACK)
/OPTIMIZE  /WARNINGS  /I4  /NOD_LINES  
