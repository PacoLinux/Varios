
                22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 1   
					MACCHK.FOR.44       

0001    	SUBROUTINE MACCHK (LUN)
0002    	BYTE	LUN
         
        C
        C	INCLUDE FILES:
0003    	INCLUDE  'SRC$:MCEMBDEF.FOR/NOLIST'
0045    	INCLUDE	'SRC$:SYECOM.FOR/NOLIST'
        C
         
        C
        C	OWN STORAGE:
        C
0059    	BYTE		DG1,DG0,AG0,AG1,ADS,FS
0060    	INTEGER*2	LENGTH, G0,G1,BEG
0061    	INTEGER*4	TRAP_CODE,AST_CODE,TO_CODE,MCT_CODE
0062    	INTEGER*4	TEMP,SIZE,STATUS,FPOS,INDEX,LINE_CT
0063    	INTEGER*4	BIT(0:31)
0064    	INTEGER*4	REG(0:11)
0065    	EQUIVALENCE	(REG(0), EMB$B_MC_SUMCOD)
0066    	CHARACTER*20	TIME_OUT (0:3),FORCE_TB_PARITY(0:15),FORCE_REPLACE(0:3)
0067    	CHARACTER*32	PARITY_BITS (8),CACHE_FLAGS(2)
0068    	CHARACTER*20	ASTLVL (0:7),IPA(0:3)
0069    	CHARACTER*32	SUMCODE (0:22),TBER1_BITS(4:8)
0070    	CHARACTER*32	CES_BITS (0:16)
0071    	CHARACTER*32	TRAP (7)
0072    	CHARACTER*32	TBER0_BITS (0:20)
0073    	CHARACTER*32	STRING,TITLEB
0074    	CHARACTER*2	BYTE(0:3)
0075    	CHARACTER*20	ADS_MCT_FS0 (0:1,0:15), FS1(0:1)
0076    	CHARACTER*63	TITLEA
         
        C
        C	EXTERNAL ROUTINES:
0077    	INTEGER*2 BITCNT
0078    	INTEGER*2 VBITCNT
        C
         
0079    	DATA	SUMCODE(0)	/'CP READ TIMEOUT OR ERR CNF FAULT'/
0080    	DATA	SUMCODE(1)	/'INVALID'/
0081    	DATA 	SUMCODE(3)	/'CP TB PARITY ERROR FAULT'/
0082    	DATA	SUMCODE(4)	/'INVALID'/
0083    	DATA	SUMCODE(5)	/'CP READ DATA SUBSTITUTE FAULT'/
0084    	DATA	SUMCODE(6)	/'INVALID'/
0085    	DATA	SUMCODE(7)	/'INVALID'/
0086    	DATA	SUMCODE(8)	/'INVALID'/
0087    	DATA	SUMCODE(9)	/'INVALID'/
0088    	DATA	SUMCODE('A'X)	/'IB TB PARITY ERROR FAULT'/
0089    	DATA	SUMCODE('B'X)	/'INVALID'/
0090    	DATA	SUMCODE('C'X)	/'IB READ DATA SUBSTITUTE FAULT'/
0091    	DATA	SUMCODE('D'X)	/'IB READ TIMEOUT OR ERR CNF FAULT'/
0092    	DATA	SUMCODE('E'X)	/'INVALID'/
0093    	DATA	SUMCODE('F'X)	/'IB CACHE PARITY ERROR FAULT'/
0094    	DATA 	SUMCODE('10'X)	/'INVALID'/
0095    	DATA	SUMCODE('11'X)	/'CONTROL STORE PARITY ERR ABORT'/
0096    	DATA	SUMCODE('12'X)	/'CP TB PARITY ERROR ABORT'/
0097    	DATA	SUMCODE('13'X)	/'CP CACHE PARITY ERROR ABORT'/

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 2   
					MACCHK.FOR.44       

0098    	DATA	SUMCODE('14'X)	/'CP READ TIMEOUT OR ERR CNF ABORT'/
0099    	DATA	SUMCODE('15'X)	/'CP READ DATA SUBSTITUTE ABORT'/
0100    	DATA	SUMCODE('16'X)	/'MICROCODE INVALID ADDRESS ABORT'/
         
0101    	DATA	CACHE_FLAGS(1)	/'CACHE GROUP 0 DISABLED'/
0102    	DATA	CACHE_FLAGS(2)	/'CACHE GROUP 1 DISABLED'/
0103    	DATA	CES_BITS(0)	/'AST LEVEL<02:00>:'/
0104    	DATA	CES_BITS(3)	/'PERFORMANCE MONITORING ENABLE<3>'/
0105    	DATA 	CES_BITS(4)	/'ARITHMETIC TRAP CODE<06:04>:'/
0106    	DATA	CES_BITS(7)	/'ALU C31 BIT SET<7>'/
0107    	DATA	CES_BITS(8)	/'ALU Z BIT SET<8>'/
0108    	DATA	CES_BITS(9)	/'ALU N BIT SET<9>'/
0109    	DATA	CES_BITS(10)	/'EALU Z BIT SET<10>'/
0110    	DATA	CES_BITS(11)	/'EALU N BIT SET<11>'/
0111    	DATA	CES_BITS(15)	/'CS PE IN WD(S)<15:12>:'/
0112    	DATA	CES_BITS(16)	/'NESTED ERROR<16>'/
         
0113    	DATA	TRAP(1)		/'INTEGER OVERFLOW'/
0114    	DATA 	TRAP(2)		/'INTEGER DIVIDE BY ZERO'/
0115    	DATA	TRAP(3)		/'FLOATING OVERFLOW'/
0116    	DATA	TRAP(4)		/'FLOATING/DECIMAL DIVIDE BY ZERO'/
0117    	DATA	TRAP(5)		/'FLOATING UNDERFLOW'/
0118    	DATA	TRAP(6)		/'DECIMAL OVERFLOW'/
0119    	DATA	TRAP(7)		/'SUBSCRIPT RANGE TRAP'/
         
0120    	DATA	ASTLVL(0)	/'KERNEL AST'/
0121    	DATA	ASTLVL(1)	/'EXECUTIVE AST'/
0122    	DATA	ASTLVL(2)	/'SUPERVISOR AST'/
0123    	DATA	ASTLVL(3)	/'USER AST'/
0124    	DATA	ASTLVL(4)	/'NO PENDING ASTS'/
0125    	DATA 	ASTLVL(5)	/'RESERVED FOR DEC'/
0126    	DATA	ASTLVL(6)	/'RESERVED FOR DEC'/
0127    	DATA	ASTLVL(7)	/'RESERVED FOR DEC'/
         
0128    	DATA	PARITY_BITS(1)	/'CP CACHE PARITY ERR<14>'/
0129    	DATA	PARITY_BITS(2)	/'IB CACHE PARITY ERR<14>'/
0130    	DATA	PARITY_BITS(3)	/'ADDRESS PARITY OK'/
0131    	DATA	PARITY_BITS(4)	/'ADDRESS PARITY ERROR'/
0132    	DATA	PARITY_BITS(5)	/'DATA PARITY OK'/
0133    	DATA	PARITY_BITS(6)	/'DATA PARITY ERROR'/
0134    	DATA	PARITY_BITS(7)	/'GROUP 0 BYTE '/
0135    	DATA	PARITY_BITS(8)	/'GROUP 1 BYTE '/
         
0136    	DATA	BYTE (0)	/'0,'/
0137    	DATA	BYTE (1)	/'1,'/
0138    	DATA	BYTE (2)	/'2,'/
0139    	DATA	BYTE (3)	/'3 '/
         
0140    	DATA	TBER0_BITS(0)	/'MEMORY MANAGEMENT ENABLED<0>'/
0141    	DATA	TBER0_BITS(1)	/'FORCE TB PARITY ERROR<04:01>:'/
0142    	DATA	TBER0_BITS(6)	/'TB HIT GROUP0<6>'/
0143    	DATA	TBER0_BITS(7)	/'TB HIT GROUP1<7>'/
0144    	DATA	TBER0_BITS(8)	/'AUTO RELOAD<8>'/
0145    	DATA	TBER0_BITS(9)	/'IB WRITE CHECK<9>'/
0146    	DATA	TBER0_BITS(10)	/'LAST MEMORY REFERENCE<15:10>:'/
0147    	DATA	TBER0_BITS(16)	/'FORCE MISS GROUP0<16>'/

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 3   
					MACCHK.FOR.44       

0148    	DATA	TBER0_BITS(17)	/'FORCE MISS GROUP1<17>'/
0149    	DATA	TBER0_BITS(18)	/'FORCE REPLACE <19:18>:'/
0150    	DATA	TBER0_BITS(20)	/'FORCE REPLACE BOTH<20>'/
         
0151    	DATA	FORCE_TB_PARITY(0)	/'INVALID CODE'/
0152    	DATA	FORCE_TB_PARITY(1)	/'INVALID CODE'/
0153    	DATA	FORCE_TB_PARITY(2)	/'FORCE G0 DATA BYTE 0'/
0154    	DATA	FORCE_TB_PARITY(3)	/'FORCE G0 DATA BYTE 1'/
0155    	DATA	FORCE_TB_PARITY(4)	/'FORCE G0 DATA BYTE 2'/
0156    	DATA	FORCE_TB_PARITY(5)	/'FORCE G1 DATA BYTE 0'/
0157    	DATA	FORCE_TB_PARITY(6)	/'FORCE G1 DATA BYTE 1'/
0158    	DATA	FORCE_TB_PARITY(7)	/'FORCE G1 DATA BYTE 2'/
0159    	DATA	FORCE_TB_PARITY(8)	/'FORCE G0 ADDR. BYTE 0'/
0160    	DATA	FORCE_TB_PARITY(9)	/'FORCE G0 ADDR. BYTE 1'/
0161    	DATA	FORCE_TB_PARITY(10)	/'FORCE GO ADDR.BYTE 2'/
0162    	DATA	FORCE_TB_PARITY(11)	/'FORCE G1 ADDR. BYTE 0'/
0163    	DATA	FORCE_TB_PARITY(12)	/'FORCE G1 ADDR. BYTE 1'/
0164    	DATA	FORCE_TB_PARITY(13)	/'FORCE G1 ADDR. BYTE 2'/
0165    	DATA	FORCE_TB_PARITY(14)	/'INVALID CODE'/
0166    	DATA	FORCE_TB_PARITY(15)	/'INVALID CODE'/
         
0167    	DATA	FORCE_REPLACE(0)	/'RANDOM GROUP'/
0168    	DATA	FORCE_REPLACE(1)	/'GROUP 0'/
0169    	DATA	FORCE_REPLACE(2)	/'GROUP 1'/
0170    	DATA	FORCE_REPLACE(3)	/'UNDEFINED'/
         
0171    	DATA	ADS_MCT_FS0(0,0)	/'TEST.RCHK'/
0172    	DATA	ADS_MCT_FS0(0,1)	/'MEM.NOP'/
0173    	DATA	ADS_MCT_FS0(0,2)	/'TEST.WCHK'/
0174    	DATA	ADS_MCT_FS0(0,3)	/'NOT USED'/
0175    	DATA	ADS_MCT_FS0(0,4)	/'NOT USED'/
0176    	DATA	ADS_MCT_FS0(0,5)	/'WRITE.V.NOCHK'/
0177    	DATA	ADS_MCT_FS0(0,6)	/'WRITE.V.WCHK'/
0178    	DATA	ADS_MCT_FS0(0,7)	/'LOCKWRITE.V.XCHK'/
0179    	DATA	ADS_MCT_FS0(0,8)	/'READ.V.RCHK'/
0180    	DATA	ADS_MCT_FS0(0,9)	/'READ.V.NOCHK'/
0181    	DATA	ADS_MCT_FS0(0,10)	/'READ.V.WCHK'/
0182    	DATA	ADS_MCT_FS0(0,11)	/'READ.V.IBCHK'/
0183    	DATA 	ADS_MCT_FS0(0,12)	/'READ.V.NEWPC'/
0184    	DATA	ADS_MCT_FS0(0,13)	/'LOCKREAD.V.NOCHK'/
0185    	DATA	ADS_MCT_FS0(0,14)	/'LOCKREAD.V.WCHK'/
0186    	DATA	ADS_MCT_FS0(0,15)	/'NOT USED'/
0187    	DATA	ADS_MCT_FS0(1,0)	/'SBI HOLD'/
0188    	DATA	ADS_MCT_FS0(1,1)	/'SBI.HOLD+UNJAM'/
0189    	DATA	ADS_MCT_FS0(1,2)	/'INVALIDATE'/
0190    	DATA	ADS_MCT_FS0(1,3)	/'VALIDATE'/
0191    	DATA	ADS_MCT_FS0(1,4)	/'EXTWRITE.P'/
0192    	DATA	ADS_MCT_FS0(1,5)	/'WRITE.P'/
0193    	DATA	ADS_MCT_FS0(1,6)	/'NOT USED'/
0194    	DATA	ADS_MCT_FS0(1,7)	/'LOCKWRITE.P'/
0195    	DATA	ADS_MCT_FS0(1,8)	/'NOT USED'/
0196    	DATA	ADS_MCT_FS0(1,9)	/'READ.P'/
0197    	DATA	ADS_MCT_FS0(1,10)	/'NOT USED'/
0198    	DATA	ADS_MCT_FS0(1,11)	/'READ.INT.SUM'/
0199    	DATA	ADS_MCT_FS0(1,12)	/'NOT USED'/
0200    	DATA	ADS_MCT_FS0(1,13)	/'LOCKREAD.P'/

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 4   
					MACCHK.FOR.44       

0201    	DATA	ADS_MCT_FS0(1,14)	/'NOT USED'/
0202    	DATA	ADS_MCT_FS0(1,15)	/'ALLOW.IB.READ'/
         
0203    	DATA	FS1(0)	/'NO MEM. OPER.'/
0204    	DATA	FS1(1)	/'ALLOW.IB.READ'/
0205    	DATA	TIME_OUT(0)	/'DEVICE NO RESPONSE'/
0206    	DATA	TIME_OUT(1)	/'DEVICE WAS BUSY'/
0207    	DATA	TIME_OUT(2)	/'WAITING FOR READ DATA'/
0208    	DATA	TIME_OUT(3)	/'IMPOSSIBLE CODE'/
         
0209    	DATA	TBER1_BITS(4)	/'BAD IPA<04>'/
0210    	DATA	TBER1_BITS(5)	/'LAST IPA LOAD<03:00>:'/
0211    	DATA	TBER1_BITS(6)	/'LAST TB WRITE PULSE SET<06>'/
0212    	DATA	TBER1_BITS(8)	/'CP TB PARITY ERR<08>'/
        	
0213    	DATA	IPA(0)	/'AUTO LOADED'/
0214    	DATA	IPA(1)	/'PROTECTION VIOLATION'/
0215    	DATA	IPA(2)	/'PARITY ERROR'/
0216    	DATA	IPA(3)	/'TB MISS'/
0217    	DATA	SIZE	/0/
0218    	DATA	LENGTH	/22/
0219    	DATA		BIT(0)	/'00000001'X/
0220    	DATA		BIT(1)	/'00000002'X/
0221    	DATA		BIT(2)	/'00000004'X/
0222    	DATA		BIT(3)	/'00000008'X/
0223    	DATA		BIT(4)	/'00000010'X/
0224    	DATA		BIT(5)	/'00000020'X/
0225    	DATA		BIT(6)	/'00000040'X/
0226    	DATA		BIT(7)	/'00000080'X/
0227    	DATA		BIT(8)	/'00000100'X/
0228    	DATA		BIT(9)	/'00000200'X/
0229    	DATA		BIT(10) /'00000400'X/
0230    	DATA		BIT(11) /'00000800'X/
0231    	DATA		BIT(12) /'00001000'X/
0232    	DATA		BIT(13) /'00002000'X/
0233    	DATA		BIT(14) /'00004000'X/
0234    	DATA		BIT(15) /'00008000'X/
0235    	DATA		BIT(16)	/'00010000'X/
0236    	DATA		BIT(17) /'00020000'X/
0237    	DATA		BIT(18) /'00040000'X/
0238    	DATA		BIT(19) /'00080000'X/
0239    	DATA		BIT(20) /'00100000'X/
0240    	DATA		BIT(21) /'00200000'X/
0241    	DATA		BIT(22) /'00400000'X/
0242    	DATA		BIT(23)	/'00800000'X/
0243    	DATA		BIT(24) /'01000000'X/
0244    	DATA		BIT(25) /'02000000'X/
0245    	DATA		BIT(26)	/'04000000'X/
0246    	DATA		BIT(27)	/'08000000'X/
0247    	DATA		BIT(28) /'10000000'X/
0248    	DATA		BIT(29) /'20000000'X/
0249    	DATA		BIT(30) /'40000000'X/
0250    	DATA		BIT(31) /'80000000'X/
         
0251    	DATA		TITLEA /'SUMPARM  CES-0C   uPC      VIR. ADR D REG-08
        	1 TBER0-12 TBER1-13  '/

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 5   
					MACCHK.FOR.44       

0252    	DATA		TITLEB	/'SBITA-1A PARITY   SBIER-19 PC      '/
         
         
         
        C 
        C	BEGIN OUTPUT OF DATA
        C
         
        C
        C	OUTPUT STACK SUMMARY
        C
         
0253    	CALL LINCHK(LUN,14)
0254    	WRITE (LUN,100)
0255    100	FORMAT('0MACHINE CHECK STACK SUMMARY:')
0256    	WRITE (LUN,200)REG
0257    200	FORMAT (' ',T23,Z8)
         
        C
        C	OUTPUT DETAILED DESCRIPTION
        C
         
        C
        C	SUMMARY PARAMETERS
        C
         
0258    	LINE_CT=3
0259    	IF (EMB$B_MC_TOPF .NE. 0) LINE_CT=LINE_CT+1
0260    	IF (EMB$B_MC_OPCODE .NE. 0) LINE_CT=LINE_CT+1
0261    	IF (EMB$B_MC_CACHEF .NE. 0) LINE_CT=LINE_CT+1
0262    	CALL LINCHK (LUN,LINE_CT)
0263    	WRITE (LUN,150)
0264    150	FORMAT ('0MACHINE CHECK DETAILED DESCRIPTION:')
0265    	WRITE (LUN,250) 'SUMMARY CODE:',EMB$B_MC_SUMCOD,
        	1	SUMCODE(EMB$B_MC_SUMCOD .AND. '1F'X)
0266    250	FORMAT (' ',T10,A,T29,Z2,T40,A)
        C
        C	WRITE TIMEOUT PENDING FLAG IF SET
        C
0267    	IF (EMB$B_MC_TOPF)
        	1		WRITE (LUN,202)
0268    202		FORMAT (' ',T10,'TIMEOUT PENDING FLAG SET')
         
        C
        C	WRITE OUT OPCODE IF NOT ZERO
        C
0269    	IF (EMB$B_MC_OPCODE .NE. 0)
        	1		WRITE (LUN, 201) EMB$B_MC_OPCODE
0270    201	FORMAT (' ',T10,'INST. OPCODE:',T29,Z2)
         
        C
        C	WRITE OUT CACHE DISABLE FLAG
        C
         
0271    	IF (EMB$B_MC_CACHEF .NE. 0)
        	1		WRITE (LUN,210) CACHE_FLAGS(EMB$B_MC_CACHEF)

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 6   
					MACCHK.FOR.44       

         
        C
        C	CES REGISTER OUTPUT
        C
         
0272    	TEMP=(BITCNT (EMB$L_MC_CES .AND. '00018F88'X))
0273    	IF ((EMB$L_MC_CES .AND. '70'X) .NE. 0) TEMP=TEMP+2
0274    	CALL LINCHK (LUN,TEMP+3)			!INCL COUNT FOR ASTLVL
0275    	WRITE (LUN,210)'CES(ID#0C)',EMB$L_MC_CES	!OUTPUT REGISTER LINE
0276    210	FORMAT (' ',T10,A,:,T23,Z8)
         
0277    	IF ((EMB$L_MC_CES .AND. BIT(16)) .NE. 0)
        	1	WRITE (LUN,300) CES_BITS(16)
0278    300	FORMAT (' ',T40,A,:,T65,Z8)
0279    	IF	((EMB$L_MC_CES .AND. BIT(15)) .NE. 0)
        	1	THEN
0280    		   LENGTH=22
0281    		   BEG=12
0282    		   STRING=CES_BITS(15)(1:LENGTH)
0283    		   DO 500 I=BEG,14
0284    		      IF ((EMB$L_MC_CES .AND. BIT(I)) .NE. 0) THEN
0285    			STRING=STRING(1:LENGTH)//BYTE(ABS(BEG-I))
0286    			LENGTH=LENGTH+2
0287    		      ENDIF
0288    500		   CONTINUE
0289    		   WRITE (LUN,300)STRING(1:LENGTH-1)
0290    		ELSE
0291    		   WRITE (LUN,300)'CNTRL STORE P BIT NOT SET<15>'
0292    	ENDIF
0293    	CALL BITS_OUTPUT(LUN,EMB$L_MC_CES,CES_BITS(7),7,11,0)
         
0294    	TRAP_CODE=LIB$EXTZV (4,3,EMB$L_MC_CES)
0295    	IF (TRAP_CODE .NE. 0)
        	1	THEN
0296    			WRITE (LUN,320) CES_BITS(4),TRAP_CODE
0297    			WRITE (LUN,330) TRAP(TRAP_CODE)
0298    	ENDIF
0299    320	FORMAT (' ',T40,A,T72,Z1)
0300    330	FORMAT (' ',T45,A)
0301    	IF ((EMB$L_MC_CES .AND. BIT(03)) .NE. 0)
        	1	WRITE (LUN,300) CES_BITS(3)
         
0302    	AST_CODE=LIB$EXTZV (0,3,EMB$L_MC_CES)
0303    	WRITE (LUN, 320) CES_BITS(0),AST_CODE
0304    	WRITE (LUN,330) ASTLVL(AST_CODE)
         
        C
        C	OUTPUT uPC,VA,D REGISTERS
        C
         
0305    	CALL LINCHK(LUN,3)
0306    	WRITE (LUN,335) EMB$L_MC_UPC,EMB$L_MC_VA,EMB$L_MC_D
0307    335	FORMAT(' ',T10,'MICRO PC:',T23,Z8/
        	1	' ',T10,'VIRTUAL ADDR:',T23,Z8/
        	2	' ',T10,'D REG(ID#08):',T23,Z8)
         

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 7   
					MACCHK.FOR.44       

        C
        C	TBER0 REGISTER
        C
         
0308    	TEMP=(BITCNT(EMB$L_MC_TBER0 .AND. '001303C1'X))
0309    	SIZE=LIB$EXTZV (1,4,EMB$L_MC_TBER0)
0310    	IF (SIZE .GE.2)	TEMP=TEMP+2
0311    	TEMP=TEMP+6
0312    	CALL LINCHK(LUN,TEMP)
0313    	WRITE(LUN,210)'TBER0(ID#12)',EMB$L_MC_TBER0
0314    	IF ((EMB$L_MC_TBER0 .AND. BIT(0)) .NE.0)
        	1	WRITE(LUN,300)TBER0_BITS(0)
0315    	IF (SIZE .GE. 2)
        	1	THEN
0316    			WRITE (LUN,320)	TBER0_BITS(1),SIZE
0317    			WRITE (LUN,330) FORCE_TB_PARITY(SIZE)
0318    	ENDIF
0319    	CALL BITS_OUTPUT(LUN,EMB$L_MC_TBER0,TBER0_BITS(6),6,7,0)
0320    	WRITE (LUN,300)	TBER0_BITS(10)
0321    	IF ((EMB$L_MC_TBER0 .AND. BIT(08)) .NE. 0)
        	1	WRITE (LUN,340) TBER0_BITS(8)
0322    	IF ((EMB$L_MC_TBER0 .AND. BIT(09)) .NE. 0)
        	1	WRITE (LUN,340) TBER0_BITS(9)
0323    340	FORMAT (' ',T44,A)
0324    	WRITE (LUN,350)
0325    350	FORMAT (' ',T44,'ADS', T48, 'MCT', T52, 'FS', T55, 'uCODE')
0326    	IF ((EMB$L_MC_TBER0 .AND. BIT(15)) .NE. 0) FS=1
0327    	IF ((EMB$L_MC_TBER0 .AND. BIT(14)) .NE. 0) ADS=1
0328    	MCT_CODE=LIB$EXTZV(10,4,EMB$L_MC_TBER0)
0329    	IF (FS .EQ.1)
        	1	THEN
0330    			STRING=FS1(ADS)
0331    		ELSE
0332    			STRING=ADS_MCT_FS0(ADS,MCT_CODE)
0333    	ENDIF
0334    	WRITE (LUN,360)ADS,MCT_CODE,FS,STRING
0335    360	FORMAT (' ',T45,Z1,T49,Z1,T53,Z1,T55,A)
0336    	CALL BITS_OUTPUT (LUN,EMB$L_MC_TBER0,TBER0_BITS(16),16,17,0)
0337    	TEMP=LIB$EXTZV(18,2,EMB$L_MC_TBER0)
0338    	WRITE (LUN,320) TBER0_BITS(18),TEMP
0339    	WRITE (LUN,330) FORCE_REPLACE(TEMP)
0340    	IF ((EMB$L_MC_TBER0 .AND. BIT(20)) .NE. 0)
        	1	WRITE (LUN,320)TBER0_BITS(20)
         
        C
        C	TBER1 REGISTER
        C
         
         
0341    	TEMP=(BITCNT(EMB$L_MC_TBER1 .AND. '00000150'X))
0342    	TEMP=TEMP+(VBITCNT(EMB$L_MC_TBER1,0,3))+2
0343    	AG0=VBITCNT (EMB$L_MC_TBER1,9,11)
0344    	AG1=VBITCNT (EMB$L_MC_TBER1,12,14)
0345    	DG0=VBITCNT (EMB$L_MC_TBER1,15,17)
0346    	DG1=VBITCNT (EMB$L_MC_TBER1,18,20)
0347    	IF (AG0 .NE. 0) TEMP=TEMP+1

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 8   
					MACCHK.FOR.44       

0348    	IF (AG1 .NE. 0) TEMP=TEMP+1
0349    	IF (DG0 .NE. 0)	TEMP=TEMP+1
0350    	IF (DG1 .NE. 0) TEMP=TEMP+1
         
0351    	CALL LINCHK (LUN,TEMP+1)
0352    	WRITE (LUN,210)'TBER1(ID#13)',EMB$L_MC_TBER1
         
0353    	IF ((EMB$L_MC_TBER1 .AND. BIT(04)) .NE. 0)
        	1	WRITE (LUN,300) TBER1_BITS(4)
0354    	TEMP=LIB$EXTZV(0,4,EMB$L_MC_TBER1)
0355    	WRITE (LUN,320) TBER1_BITS(5),TEMP
0356    	SIZE=4
0357    	INDEX=0
0358    	TEMP=(VBITCNT(EMB$L_MC_TBER1,0,3))
0359    	IF (TEMP .NE. 0)THEN
0360    		DO 6000 I=1,TEMP
0361    			STATUS=LIB$FFS(INDEX,SIZE,EMB$L_MC_TBER1,FPOS)
0362    			IF (.NOT. STATUS) GO TO 7000
0363    			INDEX=FPOS+1
0364    			WRITE (LUN,330) IPA(FPOS)
0365    			IF (FPOS .GE.3) GO TO 7000
0366    			SIZE=3-FPOS
0367    6000		CONTINUE
0368    	ENDIF
0369    7000	CONTINUE
         
0370    	IF ((EMB$L_MC_TBER1 .AND. BIT(06)).NE. 0)
        	1	WRITE (LUN,300) TBER1_BITS(6)
0371    	IF ((EMB$L_MC_TBER1 .AND. BIT(08)) .NE. 0)
        	1	WRITE (LUN,300) TBER1_BITS(8)
0372    	IF ((AG0+AG1) .EQ. 0)
        	1	THEN
0373    			STRING=PARITY_BITS(3)(1:17)//'<14:09>'
0374    			WRITE (LUN,300) STRING
0375    		ELSE
0376    			STRING=PARITY_BITS(4)(1:20)//'<14:09>'
0377    			WRITE (LUN,300) STRING
0378    			IF (AG0 .NE. 0) THEN
0379    			   STRING=PARITY_BITS(7) (1:13)
0380    			   LENGTH=13
0381    			   BEG=9
0382    			   DO 8000 I=BEG,11
0383    			      IF (( EMB$L_MC_TBER1 .AND. BIT(I)) .NE. 0) THEN
0384    				 STRING=STRING(1:LENGTH)//BYTE(ABS(BEG-I))
0385    				 LENGTH=LENGTH+2
0386    			      ENDIF
0387    8000			   CONTINUE
0388    				WRITE (LUN,330)STRING(1:LENGTH-1)
0389    			ENDIF
0390    			IF (AG1 .NE. 0) THEN
0391    				STRING=PARITY_BITS(8) (1:13)
0392    				LENGTH=13
0393    				BEG=12
0394    				DO 9000 I=BEG,14
0395    					IF (( EMB$L_MC_TBER1 .AND. BIT(I)) .NE. 0)THEN
0396    						STRING=STRING(1:LENGTH)//BYTE(ABS(BEG-I))

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 9   
					MACCHK.FOR.44       

0397    						LENGTH=LENGTH+2
0398    					ENDIF
0399    9000				CONTINUE
0400    				WRITE (LUN,330)STRING(1:LENGTH-1)
0401    			ENDIF
0402    	ENDIF
         
0403    	IF ((DG0+DG1) .EQ. 0)
        	1	THEN
0404    			STRING=PARITY_BITS(5)(1:14)//'<20:15>'
0405    			WRITE (LUN,300) STRING
0406    		ELSE
0407    			STRING=PARITY_BITS(6)(1:17)//'<20:15>'
0408    			WRITE (LUN,300) STRING
0409    			IF (DG0 .NE. 0) THEN
0410    				STRING=PARITY_BITS(7) (1:13)
0411    				LENGTH=13
0412    				BEG=15
0413    				DO 11000 I=BEG,17
0414    					IF (( EMB$L_MC_TBER1 .AND. BIT(I)) .NE. 0) THEN
0415    						STRING=STRING(1:LENGTH)//BYTE(ABS(BEG-I))
0416    						LENGTH=LENGTH+2
0417    					ENDIF
0418    11000				CONTINUE
0419    				WRITE (LUN,330)STRING(1:LENGTH-1)
0420    			ENDIF
0421    			IF (DG1 .NE. 0) THEN
0422    				STRING=PARITY_BITS(8)
0423    				LENGTH=13
0424    				BEG=18
0425    				DO 12000 I=BEG,20
0426    					IF ((EMB$L_MC_TBER1 .AND. BIT(I)) .NE.0) THEN
0427    						STRING=STRING(1:LENGTH)//BYTE(ABS(BEG-I))
0428    						LENGTH=LENGTH+2
0429    					ENDIF
0430    12000				CONTINUE
0431    				WRITE (LUN,330)STRING(1:LENGTH-1)
0432    			ENDIF
0433    	ENDIF
        C
        C	OUTPUT TIMOAD
        C
         
0434    	CALL SBITA(LUN,EMB$L_MC_TIMOAD)
         
        C
        C	PARITY REGISTER
        C
0435    	IF (( EMB$L_MC_PARITY .AND. BIT(15)) .EQ. 0) 
        	1	THEN
0436    			CALL LINCHK (LUN,4)
0437    			WRITE (LUN,210) 'PARITY(ID#1E)',EMB$L_MC_PARITY
0438    			WRITE (LUN,300) 'PARITY ERROR BIT NOT SET<15>'
0439    			GO TO 5000
0440    	ENDIF
0441    	TEMP =3

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 10  
					MACCHK.FOR.44       

0442    	DG1=VBITCNT (EMB$L_MC_PARITY,10,13)
0443    	IF (DG1 .NE. 4)TEMP=TEMP+1
0444    	DG0=VBITCNT (EMB$L_MC_PARITY,6,9)
0445    	IF (DG0 .NE. 4) TEMP=TEMP+1
0446    	AG0=VBITCNT(EMB$L_MC_PARITY,3,5)
0447    	IF (AG0 .NE. 3) TEMP=TEMP+1
0448    	AG1=VBITCNT (EMB$L_MC_PARITY,0,2)
0449    	IF (AG1 .NE.3) TEMP=TEMP+1
0450    	CALL LINCHK (LUN,TEMP+1)
0451    	WRITE (LUN,210)'PARITY',EMB$L_MC_PARITY
0452    	IF ((EMB$L_MC_PARITY .AND. BIT(14)).NE. 0)
        	1	THEN
0453    			WRITE (LUN,300) PARITY_BITS (1)
0454    		ELSE
0455    			WRITE (LUN,300) PARITY_BITS (2)
0456    	ENDIF
0457    	IF ((AG0+AG1) .EQ. 6) 
        	1	THEN
0458    			STRING=PARITY_BITS(3)(1:17)//'<05:00>'
0459    			WRITE (LUN,300) STRING
0460    		ELSE
0461    			STRING=PARITY_BITS(4)(1:20)//'<05:00>'
0462    			WRITE (LUN,300) STRING
0463    			IF (AG0  .NE. 3)
        	1		   THEN
0464    			    STRING=PARITY_BITS(7) (1:13)
0465    			    LENGTH=13
0466    			    BEG=5
0467    			    DO 1000 I=BEG,3,-1
0468    			      IF ((EMB$L_MC_PARITY .AND. BIT(I)) .EQ. 0)THEN
0469    				STRING=STRING(1:LENGTH)//BYTE(BEG-I)
0470    				LENGTH=LENGTH+2
0471    			      ENDIF
0472    1000			    CONTINUE
0473    			    WRITE (LUN,330)STRING(1:LENGTH-1)
0474     			ENDIF
0475    			IF (AG1 .NE. 3)
        	1		   THEN
0476    			      STRING=PARITY_BITS(8) (1:13)
0477    			      LENGTH=13
0478    			      BEG=2
0479    			      DO 2000, I=BEG,0,-1
0480    			         IF ((EMB$L_MC_PARITY .AND. BIT(I)) .EQ.0) THEN
0481    			            STRING=STRING(1:LENGTH)//BYTE(BEG-I)
0482    			            LENGTH=LENGTH+2
0483    			         ENDIF
0484    2000			      CONTINUE
0485    			      WRITE (LUN,330) STRING(1:LENGTH-1)
0486    			ENDIF
0487    	ENDIF
         
0488    	IF ((DG0+DG1) .EQ. 8)
        	1	THEN
0489    		   STRING=PARITY_BITS(5)(1:24)//'<13:06>'
0490    		   WRITE (LUN,300)STRING
0491    		ELSE

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 11  
					MACCHK.FOR.44       

0492    		   STRING=PARITY_BITS(6)(1:17)//'<13:06>'
0493    		   WRITE (LUN,300)STRING
0494    		   IF (DG0 .NE.4)
        	1	      THEN
0495    		         STRING=PARITY_BITS (7)
0496    		         LENGTH=13
0497    		         BEG=9
0498    		         DO 3000 I=BEG,6,-1
0499    		            IF((EMB$L_MC_PARITY .AND. BIT(I)) .EQ.0) THEN
0500    		               STRING=STRING(1:LENGTH)//BYTE(BEG-I)
0501    		               LENGTH=LENGTH+2
0502    		            ENDIF
0503    3000		         CONTINUE
0504    			 WRITE (LUN,330)STRING(1:LENGTH-1)
0505    		   ENDIF
0506    		   IF (DG1 .NE. 4)
        	1	      THEN 
0507    		         STRING=PARITY_BITS (8)
0508    		         LENGTH=13
0509    			 BEG=13
0510    			 DO 4000 I=BEG,10,-1
0511    			    IF ((EMB$L_MC_PARITY .AND. BIT(I)) .EQ.0) THEN
0512    			      STRING=STRING(1:LENGTH)//BYTE(BEG-I)
0513    			      LENGTH=LENGTH+2
0514    			    ENDIF
0515    4000			 CONTINUE
0516    			 WRITE (LUN,330)STRING(1:LENGTH-1)
0517    		ENDIF
0518    	ENDIF
0519    5000	CONTINUE
        C
        C	SBIER REGISTER
        C
0520    	CALL SBIER(LUN,EMB$L_MC_SBIERR)
         
        C
        C	OUTPUT PC
        C
         
0521    	CALL LINCHK(LUN,1)
0522    	WRITE (LUN,210) 'PC:',EMB$L_MC_PC
         
        C
        C	OUTPUT PSL
        C
         
0523    	CALL PSL(LUN,EMB$L_MC_PSL)
0524    	RETURN
         
         
0525    	ENTRY B_MACCHK(LUN)
0526    	CALL LINCHK(LUN,3)
0527    	IF (TTY)
        	1	THEN
0528    			WRITE (LUN,10000)TITLEA
0529    		ELSE

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 12  
					MACCHK.FOR.44       

0530    			WRITE (LUN,10000)TITLEA//TITLEB
0531    	ENDIF
0532    10000	FORMAT ('0',T10,A)
0533    	CALL CRYPTK8(LUN,'        ',REG(0),12)
0534    	RETURN
         
         
0535    	ENTRY C_MACCHK(LUN)
         
0536    	CALL LINCHK(LUN,1)
0537    	CALL CRYPTK8(LUN,'MCHK    ',REG(0),12)
0538    	RETURN
0539    	END

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 13  
					MACCHK.FOR.44       

		.TITLE	MACCHK
		.IDENT	01

    0000	.PSECT	EMB
    0000  EMB:

    0000	.PSECT	SYECOM
    0000  L_QUESTION:
    0004  TTY:
    0008  DEVSUMCNT:
    000A  RECCNT:
    000C  NAMDEVSUM:
    0160  VOLNAM:

    0010	.PSECT	EMB
    0010  EMB$B_MC_SUMCOD:
    0010  REG:
    003C  EMB$L_MC_PSL:
    0038  EMB$L_MC_PC:
    0034  EMB$L_MC_SBIERR:
    0030  EMB$L_MC_PARITY:
    002C  EMB$L_MC_TIMOAD:
    0028  EMB$L_MC_TBER1:
    0024  EMB$L_MC_TBER0:
    0020  EMB$L_MC_D:
    001C  EMB$L_MC_VA:
    0018  EMB$L_MC_UPC:
    0014  EMB$L_MC_CES:
    0013  EMB$B_MC_CACHEF:
    0012  EMB$B_MC_OPCODE:
    0011  EMB$B_MC_TOPF:
    000E  EMB$W_MC_ERRSEQ:
    0006  EMB$Q_MC_TIME:
    0004  EMB$W_MC_ENTRY:
    0000  EMB$L_SID:

    0000	.PSECT	$PDATA
    0000	.LONG	^X00000014
    0004	.LONG	^X0000000E
    0008	.XBYTE	53,55,4D,4D,41,52,59,20,43,4F,44,45,3A
    0015	.XBYTE	43,45,53,28,49,44,23,30,43,29
    001F	.LONG	^X0000000C
    0023	.LONG	^X00000002
    0027	.LONG	^X00000001
    002B	.XBYTE	43,4E,54,52,4C,20,53,54,4F,52,45,20,50,20,42,49
    003B	.XBYTE	54,20,4E,4F,54,20,53,45,54,3C,31,35,3E
    0048	.LONG	^X00000007
    004C	.LONG	^X0000000B
    0050	.LONG	^X00000000
    0054	.LONG	^X00000004
    0058	.LONG	^X00000003
    005C	.XBYTE	54,42,45,52,30,28,49,44,23,31,32,29
    0068	.LONG	^X00000006
    006C	.LONG	^X0000000A
    0070	.LONG	^X00000010
    0074	.LONG	^X00000011

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 14  
					MACCHK.FOR.44       

    0078	.LONG	^X00000012
    007C	.LONG	^X00000009
    0080	.LONG	^X0000000F
    0084	.XBYTE	54,42,45,52,31,28,49,44,23,31,33,29
    0090	.LONG	^X0000000D
    0094	.XBYTE	50,41,52,49,54,59,28,49,44,23,31,45,29
    00A1	.XBYTE	50,41,52,49,54,59,20,45,52,52,4F,52,20,42,49,54
    00B1	.XBYTE	20,4E,4F,54,20,53,45,54,3C,31,35,3E
    00BD	.LONG	^X00000005
    00C1	.XBYTE	50,41,52,49,54,59
    00C7	.XBYTE	50,43,3A
    00CA	.XBYTE	20,20,20,20,20,20,20,20,00
    00D3	.XBYTE	4D,43,48,4B,20,20,20,20,00

    111C	.PSECT	$LOCAL
    111C	.LONG	^X04080004
    1120	.ADDR	REG
    1124	.LONG	^X01200000,^X00000030
    112C	.LONG	^X010E0020
    1130	.ADDR	STRING
    1134	.LONG	^X010E003F
    1138	.ADDR	TITLEA
    113C	.LONG	^X00000002
    1140	.LONG	^X00000000
    1144	.ADDR	$PDATA+^X4
    1148	.LONG	^X00000002
    114C	.LONG	^X00000000
    1150	.ADDR	LINE_CT
    1154	.LONG	^X010E000D
    1158	.ADDR	$PDATA+^X8
    115C	.LONG	^X010E0000
    1160	.LONG	^X00000000
    1164	.LONG	^X00000001
    1168	.LONG	^X00000000
    116C	.LONG	^X00000002
    1170	.LONG	^X00000000
    1174	.LONG	^X00000000
    1178	.LONG	^X010E000A
    117C	.ADDR	$PDATA+^X15
    1180	.LONG	^X010E0000
    1184	.ADDR	STRING
    1188	.LONG	^X010E001D
    118C	.ADDR	$PDATA+^X2B
    1190	.LONG	^X010E0020
    1194	.ADDR	CES_BITS+224
    1198	.LONG	^X00000006
    119C	.LONG	^X00000000
    11A0	.ADDR	EMB$L_MC_CES
    11A4	.ADDR	$LOCAL+^X1190
    11A8	.ADDR	$PDATA+^X48
    11AC	.ADDR	$PDATA+^X4C
    11B0	.ADDR	$PDATA+^X50
    11B4	.LONG	^X00000003
    11B8	.ADDR	$PDATA+^X54
    11BC	.ADDR	$PDATA+^X58
    11C0	.ADDR	EMB$L_MC_CES

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 15  
					MACCHK.FOR.44       

    11C4	.LONG	^X00000003
    11C8	.ADDR	$PDATA+^X50
    11CC	.ADDR	$PDATA+^X58
    11D0	.ADDR	EMB$L_MC_CES
    11D4	.LONG	^X00000002
    11D8	.LONG	^X00000000
    11DC	.ADDR	$PDATA+^X58
    11E0	.LONG	^X00000003
    11E4	.ADDR	$PDATA+^X27
    11E8	.ADDR	$PDATA+^X54
    11EC	.ADDR	EMB$L_MC_TBER0
    11F0	.LONG	^X00000002
    11F4	.LONG	^X00000000
    11F8	.ADDR	TEMP
    11FC	.LONG	^X010E000C
    1200	.ADDR	$PDATA+^X5C
    1204	.LONG	^X010E0020
    1208	.ADDR	TBER0_BITS+192
    120C	.LONG	^X00000006
    1210	.LONG	^X00000000
    1214	.ADDR	EMB$L_MC_TBER0
    1218	.ADDR	$LOCAL+^X1204
    121C	.ADDR	$PDATA+^X68
    1220	.ADDR	$PDATA+^X48
    1224	.ADDR	$PDATA+^X50
    1228	.LONG	^X00000003
    122C	.ADDR	$PDATA+^X6C
    1230	.ADDR	$PDATA+^X54
    1234	.ADDR	EMB$L_MC_TBER0
    1238	.LONG	^X010E0020
    123C	.ADDR	TBER0_BITS+512
    1240	.LONG	^X00000006
    1244	.LONG	^X00000000
    1248	.ADDR	EMB$L_MC_TBER0
    124C	.ADDR	$LOCAL+^X1238
    1250	.ADDR	$PDATA+^X70
    1254	.ADDR	$PDATA+^X74
    1258	.ADDR	$PDATA+^X50
    125C	.LONG	^X00000003
    1260	.ADDR	$PDATA+^X78
    1264	.ADDR	$PDATA+^X23
    1268	.ADDR	EMB$L_MC_TBER0
    126C	.LONG	^X00000003
    1270	.ADDR	EMB$L_MC_TBER1
    1274	.ADDR	$PDATA+^X50
    1278	.ADDR	$PDATA+^X58
    127C	.LONG	^X00000003
    1280	.ADDR	EMB$L_MC_TBER1
    1284	.ADDR	$PDATA+^X7C
    1288	.ADDR	$PDATA+^X4C
    128C	.LONG	^X00000003
    1290	.ADDR	EMB$L_MC_TBER1
    1294	.ADDR	$PDATA+^X1F
    1298	.ADDR	$PDATA+^X4
    129C	.LONG	^X00000003
    12A0	.ADDR	EMB$L_MC_TBER1

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 16  
					MACCHK.FOR.44       

    12A4	.ADDR	$PDATA+^X80
    12A8	.ADDR	$PDATA+^X74
    12AC	.LONG	^X00000003
    12B0	.ADDR	EMB$L_MC_TBER1
    12B4	.ADDR	$PDATA+^X78
    12B8	.ADDR	$PDATA
    12BC	.LONG	^X010E000C
    12C0	.ADDR	$PDATA+^X84
    12C4	.LONG	^X00000003
    12C8	.ADDR	$PDATA+^X50
    12CC	.ADDR	$PDATA+^X54
    12D0	.ADDR	EMB$L_MC_TBER1
    12D4	.LONG	^X00000004
    12D8	.ADDR	INDEX
    12DC	.ADDR	SIZE
    12E0	.ADDR	EMB$L_MC_TBER1
    12E4	.ADDR	FPOS
    12E8	.LONG	^X00000002
    12EC	.LONG	^X00000000
    12F0	.ADDR	EMB$L_MC_TIMOAD
    12F4	.LONG	^X00000002
    12F8	.LONG	^X00000000
    12FC	.ADDR	$PDATA+^X54
    1300	.LONG	^X010E000D
    1304	.ADDR	$PDATA+^X94
    1308	.LONG	^X010E001C
    130C	.ADDR	$PDATA+^XA1
    1310	.LONG	^X00000003
    1314	.ADDR	EMB$L_MC_PARITY
    1318	.ADDR	$PDATA+^X6C
    131C	.ADDR	$PDATA+^X90
    1320	.LONG	^X00000003
    1324	.ADDR	EMB$L_MC_PARITY
    1328	.ADDR	$PDATA+^X68
    132C	.ADDR	$PDATA+^X7C
    1330	.LONG	^X00000003
    1334	.ADDR	EMB$L_MC_PARITY
    1338	.ADDR	$PDATA+^X58
    133C	.ADDR	$PDATA+^XBD
    1340	.LONG	^X00000003
    1344	.ADDR	EMB$L_MC_PARITY
    1348	.ADDR	$PDATA+^X50
    134C	.ADDR	$PDATA+^X23
    1350	.LONG	^X010E0006
    1354	.ADDR	$PDATA+^XC1
    1358	.LONG	^X00000002
    135C	.LONG	^X00000000
    1360	.ADDR	EMB$L_MC_SBIERR
    1364	.LONG	^X00000002
    1368	.LONG	^X00000000
    136C	.ADDR	$PDATA+^X27
    1370	.LONG	^X010E0003
    1374	.ADDR	$PDATA+^XC7
    1378	.LONG	^X00000002
    137C	.LONG	^X00000000
    1380	.ADDR	EMB$L_MC_PSL

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 17  
					MACCHK.FOR.44       

    1384	.LONG	^X010E0008
    1388	.ADDR	$PDATA+^XCA
    138C	.LONG	^X010E0008
    1390	.ADDR	$PDATA+^XD3
    1394	.LONG	^X00000004
    1398	.LONG	^X00000000
    139C	.CKARG	$LOCAL+^X1384
    13A0	.ADDR	REG
    13A4	.ADDR	$PDATA+^X1F
    13A8	.LONG	^X00000004
    13AC	.LONG	^X00000000
    13B0	.CKARG	$LOCAL+^X138C
    13B4	.ADDR	REG
    13B8	.ADDR	$PDATA+^X1F

    00DC	.PSECT	$PDATA
    00DC  .100:
    00DC	.XBYTE	0F,1D,30,4D,41,43,48,49,4E,45,20,43,48,45,43,4B
    00EC	.XBYTE	20,53,54,41,43,4B,20,53,55,4D,4D,41,52,59,3A,04
    00FC  .200:
    00FC	.XBYTE	0F,01,20,0D,17,19,08,04
    0104  .150:
    0104	.XBYTE	0F,24,30,4D,41,43,48,49,4E,45,20,43,48,45,43,4B
    0114	.XBYTE	20,44,45,54,41,49,4C,45,44,20,44,45,53,43,52,49
    0124	.XBYTE	50,54,49,4F,4E,3A,04
    012B  .250:
    012B	.XBYTE	0F,01,20,0D,0A,29,0D,1D,19,02,0D,28,29,04
    0139  .202:
    0139	.XBYTE	0F,01,20,0D,0A,0F,18,54,49,4D,45,4F,55,54,20,50
    0149	.XBYTE	45,4E,44,49,4E,47,20,46,4C,41,47,20,53,45,54,04
    0159  .201:
    0159	.XBYTE	0F,01,20,0D,0A,0F,0D,49,4E,53,54,2E,20,4F,50,43
    0169	.XBYTE	4F,44,45,3A,0D,1D,19,02,04
    0172  .210:
    0172	.XBYTE	0F,01,20,0D,0A,29,07,0D,17,19,08,04
    017E  .300:
    017E	.XBYTE	0F,01,20,0D,28,29,07,0D,41,19,08,04
    018A  .320:
    018A	.XBYTE	0F,01,20,0D,28,29,0D,48,19,01,04
    0195  .330:
    0195	.XBYTE	0F,01,20,0D,2D,29,04
    019C  .335:
    019C	.XBYTE	0F,01,20,0D,0A,0F,09,4D,49,43,52,4F,20,50,43,3A
    01AC	.XBYTE	0D,17,19,08,05,0F,01,20,0D,0A,0F,0D,56,49,52,54
    01BC	.XBYTE	55,41,4C,20,41,44,44,52,3A,0D,17,19,08,05,0F,01
    01CC	.XBYTE	20,0D,0A,0F,0D,44,20,52,45,47,28,49,44,23,30,38
    01DC	.XBYTE	29,3A,0D,17,19,08,04
    01E3  .340:
    01E3	.XBYTE	0F,01,20,0D,2C,29,04
    01EA  .350:
    01EA	.XBYTE	0F,01,20,0D,2C,0F,03,41,44,53,0D,30,0F,03,4D,43
    01FA	.XBYTE	54,0D,34,0F,02,46,53,0D,37,0F,05,75,43,4F,44,45
    020A	.XBYTE	04
    020B  .360:
    020B	.XBYTE	0F,01,20,0D,2D,19,01,0D,31,19,01,0D,35,19,01,0D
    021B	.XBYTE	37,29,04

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 18  
					MACCHK.FOR.44       

    021E  .10000:
    021E	.XBYTE	0F,01,30,0D,0A,29,04

    0490	.PSECT	$LOCAL
    0490  SUMCODE:
    0490	.XBYTE	43,50,20,52,45,41,44,20,54,49,4D,45,4F,55,54,20
    04A0	.XBYTE	4F,52,20,45,52,52,20,43,4E,46,20,46,41,55,4C,54
    04B0  SUMCODE+32:
    04B0	.XBYTE	49,4E,56,41,4C,49,44
    04B7	.XBYTE	20 [25]
    04F0  SUMCODE+96:
    04F0	.XBYTE	43,50,20,54,42,20,50,41,52,49,54,59,20,45,52,52
    0500	.XBYTE	4F,52,20,46,41,55,4C,54
    0508	.XBYTE	20 [8]
    0510  SUMCODE+128:
    0510	.XBYTE	49,4E,56,41,4C,49,44
    0517	.XBYTE	20 [25]
    0530  SUMCODE+160:
    0530	.XBYTE	43,50,20,52,45,41,44,20,44,41,54,41,20,53,55,42
    0540	.XBYTE	53,54,49,54,55,54,45,20,46,41,55,4C,54
    054D	.XBYTE	20 [3]
    0550  SUMCODE+192:
    0550	.XBYTE	49,4E,56,41,4C,49,44
    0557	.XBYTE	20 [25]
    0570  SUMCODE+224:
    0570	.XBYTE	49,4E,56,41,4C,49,44
    0577	.XBYTE	20 [25]
    0590  SUMCODE+256:
    0590	.XBYTE	49,4E,56,41,4C,49,44
    0597	.XBYTE	20 [25]
    05B0  SUMCODE+288:
    05B0	.XBYTE	49,4E,56,41,4C,49,44
    05B7	.XBYTE	20 [25]
    05D0  SUMCODE+320:
    05D0	.XBYTE	49,42,20,54,42,20,50,41,52,49,54,59,20,45,52,52
    05E0	.XBYTE	4F,52,20,46,41,55,4C,54
    05E8	.XBYTE	20 [8]
    05F0  SUMCODE+352:
    05F0	.XBYTE	49,4E,56,41,4C,49,44
    05F7	.XBYTE	20 [25]
    0610  SUMCODE+384:
    0610	.XBYTE	49,42,20,52,45,41,44,20,44,41,54,41,20,53,55,42
    0620	.XBYTE	53,54,49,54,55,54,45,20,46,41,55,4C,54
    062D	.XBYTE	20 [3]
    0630  SUMCODE+416:
    0630	.XBYTE	49,42,20,52,45,41,44,20,54,49,4D,45,4F,55,54,20
    0640	.XBYTE	4F,52,20,45,52,52,20,43,4E,46,20,46,41,55,4C,54
    0650  SUMCODE+448:
    0650	.XBYTE	49,4E,56,41,4C,49,44
    0657	.XBYTE	20 [25]
    0670  SUMCODE+480:
    0670	.XBYTE	49,42,20,43,41,43,48,45,20,50,41,52,49,54,59,20
    0680	.XBYTE	45,52,52,4F,52,20,46,41,55,4C,54
    068B	.XBYTE	20 [5]
    0690  SUMCODE+512:
    0690	.XBYTE	49,4E,56,41,4C,49,44

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 19  
					MACCHK.FOR.44       

    0697	.XBYTE	20 [25]
    06B0  SUMCODE+544:
    06B0	.XBYTE	43,4F,4E,54,52,4F,4C,20,53,54,4F,52,45,20,50,41
    06C0	.XBYTE	52,49,54,59,20,45,52,52,20,41,42,4F,52,54
    06CE	.XBYTE	20 [2]
    06D0  SUMCODE+576:
    06D0	.XBYTE	43,50,20,54,42,20,50,41,52,49,54,59,20,45,52,52
    06E0	.XBYTE	4F,52,20,41,42,4F,52,54
    06E8	.XBYTE	20 [8]
    06F0  SUMCODE+608:
    06F0	.XBYTE	43,50,20,43,41,43,48,45,20,50,41,52,49,54,59,20
    0700	.XBYTE	45,52,52,4F,52,20,41,42,4F,52,54
    070B	.XBYTE	20 [5]
    0710  SUMCODE+640:
    0710	.XBYTE	43,50,20,52,45,41,44,20,54,49,4D,45,4F,55,54,20
    0720	.XBYTE	4F,52,20,45,52,52,20,43,4E,46,20,41,42,4F,52,54
    0730  SUMCODE+672:
    0730	.XBYTE	43,50,20,52,45,41,44,20,44,41,54,41,20,53,55,42
    0740	.XBYTE	53,54,49,54,55,54,45,20,41,42,4F,52,54
    074D	.XBYTE	20 [3]
    0750  SUMCODE+704:
    0750	.XBYTE	4D,49,43,52,4F,43,4F,44,45,20,49,4E,56,41,4C,49
    0760	.XBYTE	44,20,41,44,44,52,45,53,53,20,41,42,4F,52,54
    076F	.XBYTE	20 [1]
    0360  CACHE_FLAGS:
    0360	.XBYTE	43,41,43,48,45,20,47,52,4F,55,50,20,30,20,44,49
    0370	.XBYTE	53,41,42,4C,45,44
    0376	.XBYTE	20 [10]
    0380  CACHE_FLAGS+32:
    0380	.XBYTE	43,41,43,48,45,20,47,52,4F,55,50,20,31,20,44,49
    0390	.XBYTE	53,41,42,4C,45,44
    0396	.XBYTE	20 [10]
    0810  CES_BITS:
    0810	.XBYTE	41,53,54,20,4C,45,56,45,4C,3C,30,32,3A,30,30,3E
    0820	.XBYTE	3A
    0821	.XBYTE	20 [15]
    0870  CES_BITS+96:
    0870	.XBYTE	50,45,52,46,4F,52,4D,41,4E,43,45,20,4D,4F,4E,49
    0880	.XBYTE	54,4F,52,49,4E,47,20,45,4E,41,42,4C,45,3C,33,3E
    0890  CES_BITS+128:
    0890	.XBYTE	41,52,49,54,48,4D,45,54,49,43,20,54,52,41,50,20
    08A0	.XBYTE	43,4F,44,45,3C,30,36,3A,30,34,3E,3A
    08AC	.XBYTE	20 [4]
    08F0  CES_BITS+224:
    08F0	.XBYTE	41,4C,55,20,43,33,31,20,42,49,54,20,53,45,54,3C
    0900	.XBYTE	37,3E
    0902	.XBYTE	20 [14]
    0910  CES_BITS+256:
    0910	.XBYTE	41,4C,55,20,5A,20,42,49,54,20,53,45,54,3C,38,3E
    0920	.XBYTE	20 [16]
    0930  CES_BITS+288:
    0930	.XBYTE	41,4C,55,20,4E,20,42,49,54,20,53,45,54,3C,39,3E
    0940	.XBYTE	20 [16]
    0950  CES_BITS+320:
    0950	.XBYTE	45,41,4C,55,20,5A,20,42,49,54,20,53,45,54,3C,31
    0960	.XBYTE	30,3E

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 20  
					MACCHK.FOR.44       

    0962	.XBYTE	20 [14]
    0970  CES_BITS+352:
    0970	.XBYTE	45,41,4C,55,20,4E,20,42,49,54,20,53,45,54,3C,31
    0980	.XBYTE	31,3E
    0982	.XBYTE	20 [14]
    09F0  CES_BITS+480:
    09F0	.XBYTE	43,53,20,50,45,20,49,4E,20,57,44,28,53,29,3C,31
    0A00	.XBYTE	35,3A,31,32,3E,3A
    0A06	.XBYTE	20 [10]
    0A10  CES_BITS+512:
    0A10	.XBYTE	4E,45,53,54,45,44,20,45,52,52,4F,52,3C,31,36,3E
    0A20	.XBYTE	20 [16]
    0A30  TRAP:
    0A30	.XBYTE	49,4E,54,45,47,45,52,20,4F,56,45,52,46,4C,4F,57
    0A40	.XBYTE	20 [16]
    0A50  TRAP+32:
    0A50	.XBYTE	49,4E,54,45,47,45,52,20,44,49,56,49,44,45,20,42
    0A60	.XBYTE	59,20,5A,45,52,4F
    0A66	.XBYTE	20 [10]
    0A70  TRAP+64:
    0A70	.XBYTE	46,4C,4F,41,54,49,4E,47,20,4F,56,45,52,46,4C,4F
    0A80	.XBYTE	57
    0A81	.XBYTE	20 [15]
    0A90  TRAP+96:
    0A90	.XBYTE	46,4C,4F,41,54,49,4E,47,2F,44,45,43,49,4D,41,4C
    0AA0	.XBYTE	20,44,49,56,49,44,45,20,42,59,20,5A,45,52,4F
    0AAF	.XBYTE	20 [1]
    0AB0  TRAP+128:
    0AB0	.XBYTE	46,4C,4F,41,54,49,4E,47,20,55,4E,44,45,52,46,4C
    0AC0	.XBYTE	4F,57
    0AC2	.XBYTE	20 [14]
    0AD0  TRAP+160:
    0AD0	.XBYTE	44,45,43,49,4D,41,4C,20,4F,56,45,52,46,4C,4F,57
    0AE0	.XBYTE	20 [16]
    0AF0  TRAP+192:
    0AF0	.XBYTE	53,55,42,53,43,52,49,50,54,20,52,41,4E,47,45,20
    0B00	.XBYTE	54,52,41,50
    0B04	.XBYTE	20 [12]
    03A0  ASTLVL:
    03A0	.XBYTE	4B,45,52,4E,45,4C,20,41,53,54
    03AA	.XBYTE	20 [10]
    03B4  ASTLVL+20:
    03B4	.XBYTE	45,58,45,43,55,54,49,56,45,20,41,53,54
    03C1	.XBYTE	20 [7]
    03C8  ASTLVL+40:
    03C8	.XBYTE	53,55,50,45,52,56,49,53,4F,52,20,41,53,54
    03D6	.XBYTE	20 [6]
    03DC  ASTLVL+60:
    03DC	.XBYTE	55,53,45,52,20,41,53,54
    03E4	.XBYTE	20 [12]
    03F0  ASTLVL+80:
    03F0	.XBYTE	4E,4F,20,50,45,4E,44,49,4E,47,20,41,53,54,53
    03FF	.XBYTE	20 [5]
    0404  ASTLVL+100:
    0404	.XBYTE	52,45,53,45,52,56,45,44,20,46,4F,52,20,44,45,43
    0414	.XBYTE	20 [4]

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 21  
					MACCHK.FOR.44       

    0418  ASTLVL+120:
    0418	.XBYTE	52,45,53,45,52,56,45,44,20,46,4F,52,20,44,45,43
    0428	.XBYTE	20 [4]
    042C  ASTLVL+140:
    042C	.XBYTE	52,45,53,45,52,56,45,44,20,46,4F,52,20,44,45,43
    043C	.XBYTE	20 [4]
    0260  PARITY_BITS:
    0260	.XBYTE	43,50,20,43,41,43,48,45,20,50,41,52,49,54,59,20
    0270	.XBYTE	45,52,52,3C,31,34,3E
    0277	.XBYTE	20 [9]
    0280  PARITY_BITS+32:
    0280	.XBYTE	49,42,20,43,41,43,48,45,20,50,41,52,49,54,59,20
    0290	.XBYTE	45,52,52,3C,31,34,3E
    0297	.XBYTE	20 [9]
    02A0  PARITY_BITS+64:
    02A0	.XBYTE	41,44,44,52,45,53,53,20,50,41,52,49,54,59,20,4F
    02B0	.XBYTE	4B
    02B1	.XBYTE	20 [15]
    02C0  PARITY_BITS+96:
    02C0	.XBYTE	41,44,44,52,45,53,53,20,50,41,52,49,54,59,20,45
    02D0	.XBYTE	52,52,4F,52
    02D4	.XBYTE	20 [12]
    02E0  PARITY_BITS+128:
    02E0	.XBYTE	44,41,54,41,20,50,41,52,49,54,59,20,4F,4B
    02EE	.XBYTE	20 [18]
    0300  PARITY_BITS+160:
    0300	.XBYTE	44,41,54,41,20,50,41,52,49,54,59,20,45,52,52,4F
    0310	.XBYTE	52
    0311	.XBYTE	20 [15]
    0320  PARITY_BITS+192:
    0320	.XBYTE	47,52,4F,55,50,20,30,20,42,59,54,45,20
    032D	.XBYTE	20 [19]
    0340  PARITY_BITS+224:
    0340	.XBYTE	47,52,4F,55,50,20,31,20,42,59,54,45,20
    034D	.XBYTE	20 [19]
    0DB0  BYTE:
    0DB0	.XBYTE	30,2C
    0DB2  BYTE+2:
    0DB2	.XBYTE	31,2C
    0DB4  BYTE+4:
    0DB4	.XBYTE	32,2C
    0DB6  BYTE+6:
    0DB6	.XBYTE	33,20
    0B10  TBER0_BITS:
    0B10	.XBYTE	4D,45,4D,4F,52,59,20,4D,41,4E,41,47,45,4D,45,4E
    0B20	.XBYTE	54,20,45,4E,41,42,4C,45,44,3C,30,3E
    0B2C	.XBYTE	20 [4]
    0B30  TBER0_BITS+32:
    0B30	.XBYTE	46,4F,52,43,45,20,54,42,20,50,41,52,49,54,59,20
    0B40	.XBYTE	45,52,52,4F,52,3C,30,34,3A,30,31,3E,3A
    0B4D	.XBYTE	20 [3]
    0BD0  TBER0_BITS+192:
    0BD0	.XBYTE	54,42,20,48,49,54,20,47,52,4F,55,50,30,3C,36,3E
    0BE0	.XBYTE	20 [16]
    0BF0  TBER0_BITS+224:
    0BF0	.XBYTE	54,42,20,48,49,54,20,47,52,4F,55,50,31,3C,37,3E

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 22  
					MACCHK.FOR.44       

    0C00	.XBYTE	20 [16]
    0C10  TBER0_BITS+256:
    0C10	.XBYTE	41,55,54,4F,20,52,45,4C,4F,41,44,3C,38,3E
    0C1E	.XBYTE	20 [18]
    0C30  TBER0_BITS+288:
    0C30	.XBYTE	49,42,20,57,52,49,54,45,20,43,48,45,43,4B,3C,39
    0C40	.XBYTE	3E
    0C41	.XBYTE	20 [15]
    0C50  TBER0_BITS+320:
    0C50	.XBYTE	4C,41,53,54,20,4D,45,4D,4F,52,59,20,52,45,46,45
    0C60	.XBYTE	52,45,4E,43,45,3C,31,35,3A,31,30,3E,3A
    0C6D	.XBYTE	20 [3]
    0D10  TBER0_BITS+512:
    0D10	.XBYTE	46,4F,52,43,45,20,4D,49,53,53,20,47,52,4F,55,50
    0D20	.XBYTE	30,3C,31,36,3E
    0D25	.XBYTE	20 [11]
    0D30  TBER0_BITS+544:
    0D30	.XBYTE	46,4F,52,43,45,20,4D,49,53,53,20,47,52,4F,55,50
    0D40	.XBYTE	31,3C,31,37,3E
    0D45	.XBYTE	20 [11]
    0D50  TBER0_BITS+576:
    0D50	.XBYTE	46,4F,52,43,45,20,52,45,50,4C,41,43,45,20,3C,31
    0D60	.XBYTE	39,3A,31,38,3E,3A
    0D66	.XBYTE	20 [10]
    0D90  TBER0_BITS+640:
    0D90	.XBYTE	46,4F,52,43,45,20,52,45,50,4C,41,43,45,20,42,4F
    0DA0	.XBYTE	54,48,3C,32,30,3E
    0DA6	.XBYTE	20 [10]
    00D0  FORCE_TB_PARITY:
    00D0	.XBYTE	49,4E,56,41,4C,49,44,20,43,4F,44,45
    00DC	.XBYTE	20 [8]
    00E4  FORCE_TB_PARITY+20:
    00E4	.XBYTE	49,4E,56,41,4C,49,44,20,43,4F,44,45
    00F0	.XBYTE	20 [8]
    00F8  FORCE_TB_PARITY+40:
    00F8	.XBYTE	46,4F,52,43,45,20,47,30,20,44,41,54,41,20,42,59
    0108	.XBYTE	54,45,20,30
    010C  FORCE_TB_PARITY+60:
    010C	.XBYTE	46,4F,52,43,45,20,47,30,20,44,41,54,41,20,42,59
    011C	.XBYTE	54,45,20,31
    0120  FORCE_TB_PARITY+80:
    0120	.XBYTE	46,4F,52,43,45,20,47,30,20,44,41,54,41,20,42,59
    0130	.XBYTE	54,45,20,32
    0134  FORCE_TB_PARITY+100:
    0134	.XBYTE	46,4F,52,43,45,20,47,31,20,44,41,54,41,20,42,59
    0144	.XBYTE	54,45,20,30
    0148  FORCE_TB_PARITY+120:
    0148	.XBYTE	46,4F,52,43,45,20,47,31,20,44,41,54,41,20,42,59
    0158	.XBYTE	54,45,20,31
    015C  FORCE_TB_PARITY+140:
    015C	.XBYTE	46,4F,52,43,45,20,47,31,20,44,41,54,41,20,42,59
    016C	.XBYTE	54,45,20,32
    0170  FORCE_TB_PARITY+160:
    0170	.XBYTE	46,4F,52,43,45,20,47,30,20,41,44,44,52,2E,20,42
    0180	.XBYTE	59,54,45,20
    0184  FORCE_TB_PARITY+180:

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 23  
					MACCHK.FOR.44       

    0184	.XBYTE	46,4F,52,43,45,20,47,30,20,41,44,44,52,2E,20,42
    0194	.XBYTE	59,54,45,20
    0198  FORCE_TB_PARITY+200:
    0198	.XBYTE	46,4F,52,43,45,20,47,4F,20,41,44,44,52,2E,42,59
    01A8	.XBYTE	54,45,20,32
    01AC  FORCE_TB_PARITY+220:
    01AC	.XBYTE	46,4F,52,43,45,20,47,31,20,41,44,44,52,2E,20,42
    01BC	.XBYTE	59,54,45,20
    01C0  FORCE_TB_PARITY+240:
    01C0	.XBYTE	46,4F,52,43,45,20,47,31,20,41,44,44,52,2E,20,42
    01D0	.XBYTE	59,54,45,20
    01D4  FORCE_TB_PARITY+260:
    01D4	.XBYTE	46,4F,52,43,45,20,47,31,20,41,44,44,52,2E,20,42
    01E4	.XBYTE	59,54,45,20
    01E8  FORCE_TB_PARITY+280:
    01E8	.XBYTE	49,4E,56,41,4C,49,44,20,43,4F,44,45
    01F4	.XBYTE	20 [8]
    01FC  FORCE_TB_PARITY+300:
    01FC	.XBYTE	49,4E,56,41,4C,49,44,20,43,4F,44,45
    0208	.XBYTE	20 [8]
    0210  FORCE_REPLACE:
    0210	.XBYTE	52,41,4E,44,4F,4D,20,47,52,4F,55,50
    021C	.XBYTE	20 [8]
    0224  FORCE_REPLACE+20:
    0224	.XBYTE	47,52,4F,55,50,20,30
    022B	.XBYTE	20 [13]
    0238  FORCE_REPLACE+40:
    0238	.XBYTE	47,52,4F,55,50,20,31
    023F	.XBYTE	20 [13]
    024C  FORCE_REPLACE+60:
    024C	.XBYTE	55,4E,44,45,46,49,4E,45,44
    0255	.XBYTE	20 [11]
    0DB8  ADS_MCT_FS0:
    0DB8	.XBYTE	54,45,53,54,2E,52,43,48,4B
    0DC1	.XBYTE	20 [11]
    0DE0  ADS_MCT_FS0+40:
    0DE0	.XBYTE	4D,45,4D,2E,4E,4F,50
    0DE7	.XBYTE	20 [13]
    0E08  ADS_MCT_FS0+80:
    0E08	.XBYTE	54,45,53,54,2E,57,43,48,4B
    0E11	.XBYTE	20 [11]
    0E30  ADS_MCT_FS0+120:
    0E30	.XBYTE	4E,4F,54,20,55,53,45,44
    0E38	.XBYTE	20 [12]
    0E58  ADS_MCT_FS0+160:
    0E58	.XBYTE	4E,4F,54,20,55,53,45,44
    0E60	.XBYTE	20 [12]
    0E80  ADS_MCT_FS0+200:
    0E80	.XBYTE	57,52,49,54,45,2E,56,2E,4E,4F,43,48,4B
    0E8D	.XBYTE	20 [7]
    0EA8  ADS_MCT_FS0+240:
    0EA8	.XBYTE	57,52,49,54,45,2E,56,2E,57,43,48,4B
    0EB4	.XBYTE	20 [8]
    0ED0  ADS_MCT_FS0+280:
    0ED0	.XBYTE	4C,4F,43,4B,57,52,49,54,45,2E,56,2E,58,43,48,4B
    0EE0	.XBYTE	20 [4]

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 24  
					MACCHK.FOR.44       

    0EF8  ADS_MCT_FS0+320:
    0EF8	.XBYTE	52,45,41,44,2E,56,2E,52,43,48,4B
    0F03	.XBYTE	20 [9]
    0F20  ADS_MCT_FS0+360:
    0F20	.XBYTE	52,45,41,44,2E,56,2E,4E,4F,43,48,4B
    0F2C	.XBYTE	20 [8]
    0F48  ADS_MCT_FS0+400:
    0F48	.XBYTE	52,45,41,44,2E,56,2E,57,43,48,4B
    0F53	.XBYTE	20 [9]
    0F70  ADS_MCT_FS0+440:
    0F70	.XBYTE	52,45,41,44,2E,56,2E,49,42,43,48,4B
    0F7C	.XBYTE	20 [8]
    0F98  ADS_MCT_FS0+480:
    0F98	.XBYTE	52,45,41,44,2E,56,2E,4E,45,57,50,43
    0FA4	.XBYTE	20 [8]
    0FC0  ADS_MCT_FS0+520:
    0FC0	.XBYTE	4C,4F,43,4B,52,45,41,44,2E,56,2E,4E,4F,43,48,4B
    0FD0	.XBYTE	20 [4]
    0FE8  ADS_MCT_FS0+560:
    0FE8	.XBYTE	4C,4F,43,4B,52,45,41,44,2E,56,2E,57,43,48,4B
    0FF7	.XBYTE	20 [5]
    1010  ADS_MCT_FS0+600:
    1010	.XBYTE	4E,4F,54,20,55,53,45,44
    1018	.XBYTE	20 [12]
    0DCC  ADS_MCT_FS0+20:
    0DCC	.XBYTE	53,42,49,20,48,4F,4C,44
    0DD4	.XBYTE	20 [12]
    0DF4  ADS_MCT_FS0+60:
    0DF4	.XBYTE	53,42,49,2E,48,4F,4C,44,2B,55,4E,4A,41,4D
    0E02	.XBYTE	20 [6]
    0E1C  ADS_MCT_FS0+100:
    0E1C	.XBYTE	49,4E,56,41,4C,49,44,41,54,45
    0E26	.XBYTE	20 [10]
    0E44  ADS_MCT_FS0+140:
    0E44	.XBYTE	56,41,4C,49,44,41,54,45
    0E4C	.XBYTE	20 [12]
    0E6C  ADS_MCT_FS0+180:
    0E6C	.XBYTE	45,58,54,57,52,49,54,45,2E,50
    0E76	.XBYTE	20 [10]
    0E94  ADS_MCT_FS0+220:
    0E94	.XBYTE	57,52,49,54,45,2E,50
    0E9B	.XBYTE	20 [13]
    0EBC  ADS_MCT_FS0+260:
    0EBC	.XBYTE	4E,4F,54,20,55,53,45,44
    0EC4	.XBYTE	20 [12]
    0EE4  ADS_MCT_FS0+300:
    0EE4	.XBYTE	4C,4F,43,4B,57,52,49,54,45,2E,50
    0EEF	.XBYTE	20 [9]
    0F0C  ADS_MCT_FS0+340:
    0F0C	.XBYTE	4E,4F,54,20,55,53,45,44
    0F14	.XBYTE	20 [12]
    0F34  ADS_MCT_FS0+380:
    0F34	.XBYTE	52,45,41,44,2E,50
    0F3A	.XBYTE	20 [14]
    0F5C  ADS_MCT_FS0+420:
    0F5C	.XBYTE	4E,4F,54,20,55,53,45,44

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 25  
					MACCHK.FOR.44       

    0F64	.XBYTE	20 [12]
    0F84  ADS_MCT_FS0+460:
    0F84	.XBYTE	52,45,41,44,2E,49,4E,54,2E,53,55,4D
    0F90	.XBYTE	20 [8]
    0FAC  ADS_MCT_FS0+500:
    0FAC	.XBYTE	4E,4F,54,20,55,53,45,44
    0FB4	.XBYTE	20 [12]
    0FD4  ADS_MCT_FS0+540:
    0FD4	.XBYTE	4C,4F,43,4B,52,45,41,44,2E,50
    0FDE	.XBYTE	20 [10]
    0FFC  ADS_MCT_FS0+580:
    0FFC	.XBYTE	4E,4F,54,20,55,53,45,44
    1004	.XBYTE	20 [12]
    1024  ADS_MCT_FS0+620:
    1024	.XBYTE	41,4C,4C,4F,57,2E,49,42,2E,52,45,41,44
    1031	.XBYTE	20 [7]
    1038  FS1:
    1038	.XBYTE	4E,4F,20,4D,45,4D,2E,20,4F,50,45,52,2E
    1045	.XBYTE	20 [7]
    104C  FS1+20:
    104C	.XBYTE	41,4C,4C,4F,57,2E,49,42,2E,52,45,41,44
    1059	.XBYTE	20 [7]
    0080  TIME_OUT:
    0080	.XBYTE	44,45,56,49,43,45,20,4E,4F,20,52,45,53,50,4F,4E
    0090	.XBYTE	53,45
    0092	.XBYTE	20 [2]
    0094  TIME_OUT+20:
    0094	.XBYTE	44,45,56,49,43,45,20,57,41,53,20,42,55,53,59
    00A3	.XBYTE	20 [5]
    00A8  TIME_OUT+40:
    00A8	.XBYTE	57,41,49,54,49,4E,47,20,46,4F,52,20,52,45,41,44
    00B8	.XBYTE	20,44,41,54
    00BC  TIME_OUT+60:
    00BC	.XBYTE	49,4D,50,4F,53,53,49,42,4C,45,20,43,4F,44,45
    00CB	.XBYTE	20 [5]
    0770  TBER1_BITS:
    0770	.XBYTE	42,41,44,20,49,50,41,3C,30,34,3E
    077B	.XBYTE	20 [21]
    0790  TBER1_BITS+32:
    0790	.XBYTE	4C,41,53,54,20,49,50,41,20,4C,4F,41,44,3C,30,33
    07A0	.XBYTE	3A,30,30,3E,3A
    07A5	.XBYTE	20 [11]
    07B0  TBER1_BITS+64:
    07B0	.XBYTE	4C,41,53,54,20,54,42,20,57,52,49,54,45,20,50,55
    07C0	.XBYTE	4C,53,45,20,53,45,54,3C,30,36,3E
    07CB	.XBYTE	20 [5]
    07F0  TBER1_BITS+128:
    07F0	.XBYTE	43,50,20,54,42,20,50,41,52,49,54,59,20,45,52,52
    0800	.XBYTE	3C,30,38,3E
    0804	.XBYTE	20 [12]
    0440  IPA:
    0440	.XBYTE	41,55,54,4F,20,4C,4F,41,44,45,44
    044B	.XBYTE	20 [9]
    0454  IPA+20:
    0454	.XBYTE	50,52,4F,54,45,43,54,49,4F,4E,20,56,49,4F,4C,41
    0464	.XBYTE	54,49,4F,4E

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 26  
					MACCHK.FOR.44       

    0468  IPA+40:
    0468	.XBYTE	50,41,52,49,54,59,20,45,52,52,4F,52
    0474	.XBYTE	20 [8]
    047C  IPA+60:
    047C	.XBYTE	54,42,20,4D,49,53,53
    0483	.XBYTE	20 [13]
    1104  SIZE:
    1104	.LONG	^X00000000
    10E6  LENGTH:
    10E6	.WORD	^X0016
    0000  BIT:
    0000	.LONG	^X00000001
    0004  BIT+4:
    0004	.LONG	^X00000002
    0008  BIT+8:
    0008	.LONG	^X00000004
    000C  BIT+12:
    000C	.LONG	^X00000008
    0010  BIT+16:
    0010	.LONG	^X00000010
    0014  BIT+20:
    0014	.LONG	^X00000020
    0018  BIT+24:
    0018	.LONG	^X00000040
    001C  BIT+28:
    001C	.LONG	^X00000080
    0020  BIT+32:
    0020	.LONG	^X00000100
    0024  BIT+36:
    0024	.LONG	^X00000200
    0028  BIT+40:
    0028	.LONG	^X00000400
    002C  BIT+44:
    002C	.LONG	^X00000800
    0030  BIT+48:
    0030	.LONG	^X00001000
    0034  BIT+52:
    0034	.LONG	^X00002000
    0038  BIT+56:
    0038	.LONG	^X00004000
    003C  BIT+60:
    003C	.LONG	^X00008000
    0040  BIT+64:
    0040	.LONG	^X00010000
    0044  BIT+68:
    0044	.LONG	^X00020000
    0048  BIT+72:
    0048	.LONG	^X00040000
    004C  BIT+76:
    004C	.LONG	^X00080000
    0050  BIT+80:
    0050	.LONG	^X00100000
    0054  BIT+84:
    0054	.LONG	^X00200000
    0058  BIT+88:
    0058	.LONG	^X00400000

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 27  
					MACCHK.FOR.44       

    005C  BIT+92:
    005C	.LONG	^X00800000
    0060  BIT+96:
    0060	.LONG	^X01000000
    0064  BIT+100:
    0064	.LONG	^X02000000
    0068  BIT+104:
    0068	.LONG	^X04000000
    006C  BIT+108:
    006C	.LONG	^X08000000
    0070  BIT+112:
    0070	.LONG	^X10000000
    0074  BIT+116:
    0074	.LONG	^X20000000
    0078  BIT+120:
    0078	.LONG	^X40000000
    007C  BIT+124:
    007C	.LONG	^X80000000
    10A6  TITLEA:
    10A6	.XBYTE	53,55,4D,50,41,52,4D,20,20,43,45,53,2D,30,43,20
    10B6	.XBYTE	20,20,75,50,43,20,20,20,20,20,20,56,49,52,2E,20
    10C6	.XBYTE	41,44,52,20,44,20,52,45,47,2D,30,38,20,54,42,45
    10D6	.XBYTE	52,30,2D,31,32,20,54,42,45,52,31,2D,31,33,20
    1086  TITLEB:
    1086	.XBYTE	53,42,49,54,41,2D,31,41,20,50,41,52,49,54,59,20
    1096	.XBYTE	20,20,53,42,49,45,52,2D,31,39,20,50,43,20,20,20

    0000	.PSECT	$CODE
    0000  MACCHK::
    0000	.WORD	^M<IV,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>
    0002	MOVAL	$LOCAL+^X10F0, R11
									    ; 0253
    0009	MOVAB	@LUN(AP), $LOCAL+^X1140(R11)
    000E	CALLG	$LOCAL+^X113C(R11), LINCHK
									    ; 0254
    0016	PUSHAL	.100
    001C	CVTBL	@LUN(AP), R10
    0020	PUSHL	R10
    0022	CALLS	#2, FOR$WRITE_SF
    0029	CALLS	#0, FOR$IO_END
									    ; 0256
    0030	PUSHAL	.200
    0036	PUSHL	R10
    0038	CALLS	#2, FOR$WRITE_SF
    003F	PUSHAL	$LOCAL+^X111C(R11)
    0042	CALLS	#1, FOR$IO_X_DA
    0049	CALLS	#0, FOR$IO_END
									    ; 0258
    0050	MOVL	#3, R10
									    ; 0259
    0053	MOVAL	EMB, R7
    005A	TSTB	EMB$B_MC_TOPF(R7)
    005D	BEQL	L$KBDO
    005F	INCL	R10
    0061  L$KBDO:
									    ; 0260

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 28  
					MACCHK.FOR.44       

    0061	TSTB	EMB$B_MC_OPCODE(R7)
    0064	BEQL	L$KBJO
    0066	INCL	R10
    0068  L$KBJO:
									    ; 0261
    0068	TSTB	EMB$B_MC_CACHEF(R7)
    006B	BEQL	L$KBPO
    006D	INCL	R10
    006F  L$KBPO:
    006F	MOVL	R10, LINE_CT(R11)
									    ; 0262
    0073	MOVAB	@LUN(AP), $LOCAL+^X114C(R11)
    0078	CALLG	$LOCAL+^X1148(R11), LINCHK
									    ; 0263
    0080	PUSHAL	.150
    0086	CVTBL	@LUN(AP), R10
    008A	PUSHL	R10
    008C	CALLS	#2, FOR$WRITE_SF
    0093	CALLS	#0, FOR$IO_END
									    ; 0265
    009A	PUSHAL	.250
    00A0	PUSHL	R10
    00A2	CALLS	#2, FOR$WRITE_SF
    00A9	PUSHAB	$LOCAL+^X1154(R11)
    00AC	CALLS	#1, FOR$IO_T_DS
    00B3	PUSHAB	EMB$B_MC_SUMCOD(R7)
    00B6	CALLS	#1, FOR$IO_B_R
    00BD	BICB3	#^XE0, EMB$B_MC_SUMCOD(R7), R0
    00C3	CVTBL	R0, R0
    00C6	MULL2	#32, R0
    00C9	MOVW	#32, $LOCAL+^X115C(R11)
    00CD	MOVAB	SUMCODE(R11)[R0], $LOCAL+^X1160(R11)
    00D4	PUSHAB	$LOCAL+^X115C(R11)
    00D7	CALLS	#1, FOR$IO_T_DS
    00DE	CALLS	#0, FOR$IO_END
									    ; 0267
    00E5	BBC	#0, EMB$B_MC_TOPF(R7), L$ICGA
    00EA	PUSHAL	.202
    00F0	PUSHL	R10
    00F2	CALLS	#2, FOR$WRITE_SF
    00F9	CALLS	#0, FOR$IO_END
    0100  L$ICGA:
									    ; 0269
    0100	TSTB	EMB$B_MC_OPCODE(R7)
    0103	BEQL	L$ICCB
    0105	PUSHAL	.201
    010B	PUSHL	R10
    010D	CALLS	#2, FOR$WRITE_SF
    0114	PUSHAB	EMB$B_MC_OPCODE(R7)
    0117	CALLS	#1, FOR$IO_B_R
    011E	CALLS	#0, FOR$IO_END
    0125  L$ICCB:
									    ; 0271
    0125	TSTB	EMB$B_MC_CACHEF(R7)
    0128	BEQL	L$ICOB
    012A	PUSHAL	.210

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 29  
					MACCHK.FOR.44       

    0130	PUSHL	R10
    0132	CALLS	#2, FOR$WRITE_SF
    0139	CVTBL	EMB$B_MC_CACHEF(R7), R0
    013D	MULL2	#32, R0
    0140	MOVW	#32, $LOCAL+^X115C(R11)
    0144	MOVAB	CACHE_FLAGS-32(R11)[R0], $LOCAL+^X1160(R11)
    014B	PUSHAB	$LOCAL+^X115C(R11)
    014E	CALLS	#1, FOR$IO_T_DS
    0155	CALLS	#0, FOR$IO_END
    015C  L$ICOB:
									    ; 0272
    015C	BICL3	#^XFFFE7077, EMB$L_MC_CES(R7), -(SP)
    0165	MOVL	SP, $LOCAL+^X1168(R11)
    0169	CALLG	$LOCAL+^X1164(R11), BITCNT
    0171	ADDL2	#4, SP
    0174	CVTWL	R0, R10
									    ; 0273
    0177	BITL	EMB$L_MC_CES(R7), #^X70
    017F	BEQL	L$ICKC
    0181	ADDL2	#2, R10
    0184  L$ICKC:
									    ; 0274
    0184	MOVAB	@LUN(AP), $LOCAL+^X1170(R11)
    018A	ADDL3	#3, R10, -(SP)
    018E	MOVL	R10, TEMP(R11)
    0192	MOVL	SP, $LOCAL+^X1174(R11)
    0197	CALLG	$LOCAL+^X116C(R11), LINCHK
    019F	ADDL2	#4, SP
									    ; 0275
    01A2	PUSHAL	.210
    01A8	CVTBL	@LUN(AP), R6
    01AC	PUSHL	R6
    01AE	CALLS	#2, FOR$WRITE_SF
    01B5	PUSHAB	$LOCAL+^X1178(R11)
    01B9	CALLS	#1, FOR$IO_T_DS
    01C0	PUSHAL	EMB$L_MC_CES(R7)
    01C3	CALLS	#1, FOR$IO_L_R
    01CA	CALLS	#0, FOR$IO_END
									    ; 0277
    01D1	BITL	EMB$L_MC_CES(R7), BIT+64(R11)
    01D7	BEQL	L$ICAD
    01D9	PUSHAL	.300
    01DF	PUSHL	R6
    01E1	CALLS	#2, FOR$WRITE_SF
    01E8	MOVW	#32, $LOCAL+^X115C(R11)
    01EC	MOVAB	CES_BITS+512(R11), $LOCAL+^X1160(R11)
    01F2	PUSHAB	$LOCAL+^X115C(R11)
    01F5	CALLS	#1, FOR$IO_T_DS
    01FC	CALLS	#0, FOR$IO_END
    0203  L$ICAD:
									    ; 0279
    0203	BITL	EMB$L_MC_CES(R7), BIT+60(R11)
    0209	BNEQ	$CODE+^X20E
    020B	BRW	L$ICMD
									    ; 0280
    020E	MOVW	#22, R9

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 30  
					MACCHK.FOR.44       

									    ; 0281
    0211	MOVW	#12, R8
									    ; 0282
    0214	CVTWL	R9, R0
    0217	MOVC5	R0, CES_BITS+480(R11), #^X20, #32, STRING(R11)
									    ; 0283
    0221	CVTWL	R8, R10
    0224  L$ICAF:
									    ; 0284
    0224	BITL	EMB$L_MC_CES(R7), BIT(R11)[R10]
    022B	BEQL	L$ICBG
									    ; 0285
    022D	CVTWL	R8, R0
    0230	SUBL2	R10, R0
    0233	BGEQ	$CODE+^X238
    0235	MNEGL	R0, R0
    0238	ADDL2	R0, R0
    023B	SUBL2	#2, SP
    023E	MOVC3	#2, BYTE(R11)[R0], (SP)
    0245	CVTWL	R9, R0
    0248	SUBL2	R0, SP
    024B	MOVC3	R0, STRING(R11), (SP)
    0251	SUBL3	SP, R3, $LOCAL+^X13BC(R11)
    0257	ADDL3	#2, $LOCAL+^X13BC(R11), R0
    025D	MOVC5	R0, (SP), #^X20, #32, STRING(R11)
    0265	ADDL3	R0, R1, SP
									    ; 0286
    0269	ADDW2	#2, R9
									    ; 0287
    026C  L$ICBG:
									    ; 0288
    026C	AOBLEQ	#14, R10, L$ICAF
    0270	MOVW	R8, BEG(R11)
    0274	MOVL	R10, I(R11)
									    ; 0289
    0278	PUSHAL	.300
    027E	PUSHL	R6
    0280	CALLS	#2, FOR$WRITE_SF
    0287	SUBW3	#1, R9, R0
    028B	MOVW	R9, LENGTH(R11)
    028F	CVTWL	R0, R0
    0292	MOVW	R0, $LOCAL+^X1180(R11)
    0297	PUSHAB	$LOCAL+^X1180(R11)
    029B	CALLS	#1, FOR$IO_T_DS
    02A2	CALLS	#0, FOR$IO_END
									    ; 0290
    02A9	BRB	L$ICHH
    02AB  L$ICMD:
									    ; 0291
    02AB	PUSHAL	.300
    02B1	PUSHL	R6
    02B3	CALLS	#2, FOR$WRITE_SF
    02BA	PUSHAB	$LOCAL+^X1188(R11)
    02BE	CALLS	#1, FOR$IO_T_DS
    02C5	CALLS	#0, FOR$IO_END
									    ; 0292

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 31  
					MACCHK.FOR.44       

    02CC  L$ICHH:
									    ; 0293
    02CC	MOVAB	@LUN(AP), $LOCAL+^X119C(R11)
    02D2	CALLG	$LOCAL+^X1198(R11), BITS_OUTPUT
									    ; 0294
    02DB	CALLG	$LOCAL+^X11B4(R11), LIB$EXTZV
    02E4	MOVL	R0, TRAP_CODE(R11)
									    ; 0295
    02E7	BEQL	L$ICNI
									    ; 0296
    02E9	PUSHAL	.320
    02EF	CVTBL	@LUN(AP), R10
    02F3	PUSHL	R10
    02F5	CALLS	#2, FOR$WRITE_SF
    02FC	MOVW	#32, $LOCAL+^X115C(R11)
    0300	MOVAB	CES_BITS+128(R11), $LOCAL+^X1160(R11)
    0306	PUSHAB	$LOCAL+^X115C(R11)
    0309	CALLS	#1, FOR$IO_T_DS
    0310	PUSHAL	TRAP_CODE(R11)
    0312	CALLS	#1, FOR$IO_L_R
    0319	CALLS	#0, FOR$IO_END
									    ; 0297
    0320	PUSHAL	.330
    0326	PUSHL	R10
    0328	CALLS	#2, FOR$WRITE_SF
    032F	MULL3	#32, TRAP_CODE(R11), R0
    0333	MOVW	#32, $LOCAL+^X115C(R11)
    0337	MOVAB	TRAP-32(R11)[R0], $LOCAL+^X1160(R11)
    033E	PUSHAB	$LOCAL+^X115C(R11)
    0341	CALLS	#1, FOR$IO_T_DS
    0348	CALLS	#0, FOR$IO_END
									    ; 0298
    034F  L$ICNI:
									    ; 0301
    034F	MOVAL	EMB, R9
    0356	BITL	EMB$L_MC_CES(R9), BIT+12(R11)
    035C	BEQL	L$ICPJ
    035E	PUSHAL	.300
    0364	CVTBL	@LUN(AP), -(SP)
    0368	CALLS	#2, FOR$WRITE_SF
    036F	MOVW	#32, $LOCAL+^X115C(R11)
    0373	MOVAB	CES_BITS+96(R11), $LOCAL+^X1160(R11)
    0379	PUSHAB	$LOCAL+^X115C(R11)
    037C	CALLS	#1, FOR$IO_T_DS
    0383	CALLS	#0, FOR$IO_END
    038A  L$ICPJ:
									    ; 0302
    038A	CALLG	$LOCAL+^X11C4(R11), LIB$EXTZV
    0393	MOVL	R0, AST_CODE(R11)
									    ; 0303
    0397	PUSHAL	.320
    039D	CVTBL	@LUN(AP), R10
    03A1	PUSHL	R10
    03A3	CALLS	#2, FOR$WRITE_SF
    03AA	MOVW	#32, $LOCAL+^X115C(R11)
    03AE	MOVAB	CES_BITS(R11), $LOCAL+^X1160(R11)

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 32  
					MACCHK.FOR.44       

    03B4	PUSHAB	$LOCAL+^X115C(R11)
    03B7	CALLS	#1, FOR$IO_T_DS
    03BE	PUSHAL	AST_CODE(R11)
    03C1	CALLS	#1, FOR$IO_L_R
    03C8	CALLS	#0, FOR$IO_END
									    ; 0304
    03CF	PUSHAL	.330
    03D5	PUSHL	R10
    03D7	CALLS	#2, FOR$WRITE_SF
    03DE	MULL3	#20, AST_CODE(R11), R0
    03E3	MOVW	#20, $LOCAL+^X115C(R11)
    03E7	MOVAB	ASTLVL(R11)[R0], $LOCAL+^X1160(R11)
    03EE	PUSHAB	$LOCAL+^X115C(R11)
    03F1	CALLS	#1, FOR$IO_T_DS
    03F8	CALLS	#0, FOR$IO_END
									    ; 0305
    03FF	MOVAB	@LUN(AP), $LOCAL+^X11D8(R11)
    0405	CALLG	$LOCAL+^X11D4(R11), LINCHK
									    ; 0306
    040E	PUSHAL	.335
    0414	CVTBL	@LUN(AP), -(SP)
    0418	CALLS	#2, FOR$WRITE_SF
    041F	PUSHAL	EMB$L_MC_UPC(R9)
    0422	CALLS	#1, FOR$IO_L_R
    0429	PUSHAL	EMB$L_MC_VA(R9)
    042C	CALLS	#1, FOR$IO_L_R
    0433	PUSHAL	EMB$L_MC_D(R9)
    0436	CALLS	#1, FOR$IO_L_R
    043D	CALLS	#0, FOR$IO_END
									    ; 0308
    0444	BICL3	#^XFFECFC3E, EMB$L_MC_TBER0(R9), -(SP)
    044D	MOVL	SP, $LOCAL+^X1168(R11)
    0451	CALLG	$LOCAL+^X1164(R11), BITCNT
    0459	ADDL2	#4, SP
    045C	CVTWL	R0, R10
									    ; 0309
    045F	CALLG	$LOCAL+^X11E0(R11), LIB$EXTZV
    0468	MOVL	R0, SIZE(R11)
									    ; 0310
    046C	CMPL	R0, #2
    046F	BLSS	L$ICLK
    0471	ADDL2	#2, R10
    0474  L$ICLK:
									    ; 0311
    0474	ADDL2	#6, R10
    0477	MOVL	R10, TEMP(R11)
									    ; 0312
    047B	MOVAB	@LUN(AP), $LOCAL+^X11F4(R11)
    0481	CALLG	$LOCAL+^X11F0(R11), LINCHK
									    ; 0313
    048A	PUSHAL	.210
    0490	CVTBL	@LUN(AP), R10
    0494	PUSHL	R10
    0496	CALLS	#2, FOR$WRITE_SF
    049D	PUSHAB	$LOCAL+^X11FC(R11)
    04A1	CALLS	#1, FOR$IO_T_DS

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 33  
					MACCHK.FOR.44       

    04A8	PUSHAL	EMB$L_MC_TBER0(R9)
    04AB	CALLS	#1, FOR$IO_L_R
    04B2	CALLS	#0, FOR$IO_END
									    ; 0314
    04B9	BITL	EMB$L_MC_TBER0(R9), BIT(R11)
    04BF	BEQL	L$ICBL
    04C1	PUSHAL	.300
    04C7	PUSHL	R10
    04C9	CALLS	#2, FOR$WRITE_SF
    04D0	MOVW	#32, $LOCAL+^X115C(R11)
    04D4	MOVAB	TBER0_BITS(R11), $LOCAL+^X1160(R11)
    04DA	PUSHAB	$LOCAL+^X115C(R11)
    04DD	CALLS	#1, FOR$IO_T_DS
    04E4	CALLS	#0, FOR$IO_END
    04EB  L$ICBL:
									    ; 0315
    04EB	CMPL	SIZE(R11), #2
    04EF	BLSS	L$ICHL
									    ; 0316
    04F1	PUSHAL	.320
    04F7	PUSHL	R10
    04F9	CALLS	#2, FOR$WRITE_SF
    0500	MOVW	#32, $LOCAL+^X115C(R11)
    0504	MOVAB	TBER0_BITS+32(R11), $LOCAL+^X1160(R11)
    050A	PUSHAB	$LOCAL+^X115C(R11)
    050D	CALLS	#1, FOR$IO_T_DS
    0514	PUSHAL	SIZE(R11)
    0517	CALLS	#1, FOR$IO_L_R
    051E	CALLS	#0, FOR$IO_END
									    ; 0317
    0525	PUSHAL	.330
    052B	PUSHL	R10
    052D	CALLS	#2, FOR$WRITE_SF
    0534	MULL3	#20, SIZE(R11), R0
    0539	MOVW	#20, $LOCAL+^X115C(R11)
    053D	MOVAB	FORCE_TB_PARITY(R11)[R0], $LOCAL+^X1160(R11)
    0544	PUSHAB	$LOCAL+^X115C(R11)
    0547	CALLS	#1, FOR$IO_T_DS
    054E	CALLS	#0, FOR$IO_END
									    ; 0318
    0555  L$ICHL:
									    ; 0319
    0555	MOVAB	@LUN(AP), $LOCAL+^X1210(R11)
    055B	CALLG	$LOCAL+^X120C(R11), BITS_OUTPUT
									    ; 0320
    0564	PUSHAL	.300
    056A	CVTBL	@LUN(AP), R10
    056E	PUSHL	R10
    0570	CALLS	#2, FOR$WRITE_SF
    0577	MOVW	#32, $LOCAL+^X115C(R11)
    057B	MOVAB	TBER0_BITS+320(R11), $LOCAL+^X1160(R11)
    0581	PUSHAB	$LOCAL+^X115C(R11)
    0584	CALLS	#1, FOR$IO_T_DS
    058B	CALLS	#0, FOR$IO_END
									    ; 0321
    0592	BITL	EMB$L_MC_TBER0(R9), BIT+32(R11)

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 34  
					MACCHK.FOR.44       

    0598	BEQL	L$ICNL
    059A	PUSHAL	.340
    05A0	PUSHL	R10
    05A2	CALLS	#2, FOR$WRITE_SF
    05A9	MOVW	#32, $LOCAL+^X115C(R11)
    05AD	MOVAB	TBER0_BITS+256(R11), $LOCAL+^X1160(R11)
    05B3	PUSHAB	$LOCAL+^X115C(R11)
    05B6	CALLS	#1, FOR$IO_T_DS
    05BD	CALLS	#0, FOR$IO_END
    05C4  L$ICNL:
									    ; 0322
    05C4	BITL	EMB$L_MC_TBER0(R9), BIT+36(R11)
    05CA	BEQL	L$ICJM
    05CC	PUSHAL	.340
    05D2	PUSHL	R10
    05D4	CALLS	#2, FOR$WRITE_SF
    05DB	MOVW	#32, $LOCAL+^X115C(R11)
    05DF	MOVAB	TBER0_BITS+288(R11), $LOCAL+^X1160(R11)
    05E5	PUSHAB	$LOCAL+^X115C(R11)
    05E8	CALLS	#1, FOR$IO_T_DS
    05EF	CALLS	#0, FOR$IO_END
    05F6  L$ICJM:
									    ; 0324
    05F6	PUSHAL	.350
    05FC	PUSHL	R10
    05FE	CALLS	#2, FOR$WRITE_SF
    0605	CALLS	#0, FOR$IO_END
									    ; 0326
    060C	BITL	EMB$L_MC_TBER0(R9), BIT+60(R11)
    0612	BEQL	L$ICFN
    0614	MOVB	#1, FS(R11)
    0619  L$ICFN:
									    ; 0327
    0619	BITL	EMB$L_MC_TBER0(R9), BIT+56(R11)
    061F	BEQL	L$ICLN
    0621	MOVB	#1, ADS(R11)
    0626  L$ICLN:
									    ; 0328
    0626	CALLG	$LOCAL+^X1228(R11), LIB$EXTZV
    062F	MOVL	R0, MCT_CODE(R11)
									    ; 0329
    0633	CMPB	FS(R11), #1
    0638	BNEQ	L$ICBO
									    ; 0330
    063A	CVTBL	ADS(R11), R0
    063F	MULL2	#20, R0
    0642	MOVC5	#20, FS1(R11)[R0], #^X20, #32, STRING(R11)
									    ; 0331
    064D	BRB	L$ICHO
    064F  L$ICBO:
									    ; 0332
    064F	MULL3	#2, MCT_CODE(R11), R0
    0654	CVTBL	ADS(R11), R1
    0659	ADDL2	R1, R0
    065C	MULL2	#20, R0
    065F	MOVC5	#20, ADS_MCT_FS0(R11)[R0], #^X20, #32, STRING(R11)

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 35  
					MACCHK.FOR.44       

									    ; 0333
    066A  L$ICHO:
									    ; 0334
    066A	PUSHAL	.360
    0670	CVTBL	@LUN(AP), -(SP)
    0674	CALLS	#2, FOR$WRITE_SF
    067B	PUSHAB	ADS(R11)
    067F	CALLS	#1, FOR$IO_B_R
    0686	PUSHAL	MCT_CODE(R11)
    0689	CALLS	#1, FOR$IO_L_R
    0690	PUSHAB	FS(R11)
    0694	CALLS	#1, FOR$IO_B_R
    069B	PUSHAB	$LOCAL+^X112C(R11)
    069E	CALLS	#1, FOR$IO_T_DS
    06A5	CALLS	#0, FOR$IO_END
									    ; 0336
    06AC	MOVAB	@LUN(AP), $LOCAL+^X1244(R11)
    06B2	CALLG	$LOCAL+^X1240(R11), BITS_OUTPUT
									    ; 0337
    06BB	CALLG	$LOCAL+^X125C(R11), LIB$EXTZV
    06C4	MOVL	R0, TEMP(R11)
									    ; 0338
    06C8	PUSHAL	.320
    06CE	CVTBL	@LUN(AP), R10
    06D2	PUSHL	R10
    06D4	CALLS	#2, FOR$WRITE_SF
    06DB	MOVW	#32, $LOCAL+^X115C(R11)
    06DF	MOVAB	TBER0_BITS+576(R11), $LOCAL+^X1160(R11)
    06E5	PUSHAB	$LOCAL+^X115C(R11)
    06E8	CALLS	#1, FOR$IO_T_DS
    06EF	PUSHAL	TEMP(R11)
    06F2	CALLS	#1, FOR$IO_L_R
    06F9	CALLS	#0, FOR$IO_END
									    ; 0339
    0700	PUSHAL	.330
    0706	PUSHL	R10
    0708	CALLS	#2, FOR$WRITE_SF
    070F	MOVL	TEMP(R11), R9
    0713	MULL3	#20, R9, R0
    0717	MOVW	#20, $LOCAL+^X115C(R11)
    071B	MOVAB	FORCE_REPLACE(R11)[R0], $LOCAL+^X1160(R11)
    0722	PUSHAB	$LOCAL+^X115C(R11)
    0725	CALLS	#1, FOR$IO_T_DS
    072C	CALLS	#0, FOR$IO_END
									    ; 0340
    0733	BITL	EMB$L_MC_TBER0, BIT+80(R11)
    073C	BEQL	L$ICDP
    073E	PUSHAL	.320
    0744	PUSHL	R10
    0746	CALLS	#2, FOR$WRITE_SF
    074D	MOVW	#32, $LOCAL+^X115C(R11)
    0751	MOVAB	TBER0_BITS+640(R11), $LOCAL+^X1160(R11)
    0757	PUSHAB	$LOCAL+^X115C(R11)
    075A	CALLS	#1, FOR$IO_T_DS
    0761	CALLS	#0, FOR$IO_END
    0768  L$ICDP:

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 36  
					MACCHK.FOR.44       

									    ; 0341
    0768	BICL3	#^XFFFFFEAF, EMB$L_MC_TBER1, -(SP)
    0774	MOVL	SP, $LOCAL+^X1168(R11)
    0778	CALLG	$LOCAL+^X1164(R11), BITCNT
    0780	ADDL2	#4, SP
    0783	CVTWL	R0, R9
									    ; 0342
    0786	CALLG	$LOCAL+^X126C(R11), VBITCNT
    078F	CVTWL	R0, R0
    0792	ADDL2	R9, R0
    0795	ADDL3	#2, R0, R9
									    ; 0343
    0799	CALLG	$LOCAL+^X127C(R11), VBITCNT
    07A2	CVTWB	R0, AG0(R11)
									    ; 0344
    07A7	CALLG	$LOCAL+^X128C(R11), VBITCNT
    07B0	CVTWB	R0, AG1(R11)
									    ; 0345
    07B5	CALLG	$LOCAL+^X129C(R11), VBITCNT
    07BE	CVTWB	R0, DG0(R11)
									    ; 0346
    07C3	CALLG	$LOCAL+^X12AC(R11), VBITCNT
    07CC	CVTWB	R0, DG1(R11)
									    ; 0347
    07D1	TSTB	AG0(R11)
    07D5	BEQL	L$ICJP
    07D7	INCL	R9
    07D9  L$ICJP:
									    ; 0348
    07D9	TSTB	AG1(R11)
    07DD	BEQL	L$DDAA
    07DF	INCL	R9
    07E1  L$DDAA:
									    ; 0349
    07E1	TSTB	DG0(R11)
    07E5	BEQL	L$DDGA
    07E7	INCL	R9
    07E9  L$DDGA:
									    ; 0350
    07E9	TSTB	R0
    07EB	BEQL	L$DDMA
    07ED	INCL	R9
    07EF  L$DDMA:
									    ; 0351
    07EF	MOVAB	@LUN(AP), $LOCAL+^X1170(R11)
    07F5	ADDL3	#1, R9, -(SP)
    07F9	MOVL	SP, $LOCAL+^X1174(R11)
    07FE	CALLG	$LOCAL+^X116C(R11), LINCHK
    0806	ADDL2	#4, SP
									    ; 0352
    0809	PUSHAL	.210
    080F	CVTBL	@LUN(AP), R10
    0813	PUSHL	R10
    0815	CALLS	#2, FOR$WRITE_SF
    081C	PUSHAB	$LOCAL+^X12BC(R11)
    0820	CALLS	#1, FOR$IO_T_DS

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 37  
					MACCHK.FOR.44       

    0827	PUSHAL	EMB$L_MC_TBER1
    082D	CALLS	#1, FOR$IO_L_R
    0834	CALLS	#0, FOR$IO_END
									    ; 0353
    083B	BITL	EMB$L_MC_TBER1, BIT+16(R11)
    0844	BEQL	L$DDCB
    0846	PUSHAL	.300
    084C	PUSHL	R10
    084E	CALLS	#2, FOR$WRITE_SF
    0855	MOVW	#32, $LOCAL+^X115C(R11)
    0859	MOVAB	TBER1_BITS(R11), $LOCAL+^X1160(R11)
    085F	PUSHAB	$LOCAL+^X115C(R11)
    0862	CALLS	#1, FOR$IO_T_DS
    0869	CALLS	#0, FOR$IO_END
    0870  L$DDCB:
									    ; 0354
    0870	CALLG	$LOCAL+^X12C4(R11), LIB$EXTZV
    0879	MOVL	R0, TEMP(R11)
									    ; 0355
    087D	PUSHAL	.320
    0883	CVTBL	@LUN(AP), -(SP)
    0887	CALLS	#2, FOR$WRITE_SF
    088E	MOVW	#32, $LOCAL+^X115C(R11)
    0892	MOVAB	TBER1_BITS+32(R11), $LOCAL+^X1160(R11)
    0898	PUSHAB	$LOCAL+^X115C(R11)
    089B	CALLS	#1, FOR$IO_T_DS
    08A2	PUSHAL	TEMP(R11)
    08A5	CALLS	#1, FOR$IO_L_R
    08AC	CALLS	#0, FOR$IO_END
									    ; 0356
    08B3	MOVL	#4, SIZE(R11)
									    ; 0357
    08B7	CLRL	INDEX(R11)
									    ; 0358
    08BA	CALLG	$LOCAL+^X126C(R11), VBITCNT
    08C3	CVTWL	R0, TEMP(R11)
									    ; 0359
    08C7	BEQL	L$DDIB
									    ; 0360
    08C9	MOVL	#1, I(R11)
    08CD  L$DDEC:
									    ; 0361
    08CD	CALLG	$LOCAL+^X12D4(R11), LIB$FFS
    08D6	MOVL	R0, STATUS(R11)
									    ; 0362
    08DA	BLBC	R0, .7000
									    ; 0363
    08DD	ADDL3	#1, FPOS(R11), INDEX(R11)
									    ; 0364
    08E3	PUSHAL	.330
    08E9	CVTBL	@LUN(AP), -(SP)
    08ED	CALLS	#2, FOR$WRITE_SF
    08F4	MULL3	#20, FPOS(R11), R0
    08F9	MOVW	#20, $LOCAL+^X115C(R11)
    08FD	MOVAB	IPA(R11)[R0], $LOCAL+^X1160(R11)
    0904	PUSHAB	$LOCAL+^X115C(R11)

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 38  
					MACCHK.FOR.44       

    0907	CALLS	#1, FOR$IO_T_DS
    090E	CALLS	#0, FOR$IO_END
									    ; 0365
    0915	CMPL	FPOS(R11), #3
    0919	BGEQ	.7000
									    ; 0366
    091B	SUBL3	FPOS(R11), #3, SIZE(R11)
									    ; 0367
    0921	AOBLEQ	TEMP(R11), I(R11), L$DDEC
									    ; 0368
    0927  L$DDIB:
									    ; 0369
    0927  .7000:
									    ; 0370
    0927	BITL	EMB$L_MC_TBER1, BIT+24(R11)
    0930	BEQL	L$DDLE
    0932	PUSHAL	.300
    0938	CVTBL	@LUN(AP), -(SP)
    093C	CALLS	#2, FOR$WRITE_SF
    0943	MOVW	#32, $LOCAL+^X115C(R11)
    0947	MOVAB	TBER1_BITS+64(R11), $LOCAL+^X1160(R11)
    094D	PUSHAB	$LOCAL+^X115C(R11)
    0950	CALLS	#1, FOR$IO_T_DS
    0957	CALLS	#0, FOR$IO_END
    095E  L$DDLE:
									    ; 0371
    095E	BITL	EMB$L_MC_TBER1, BIT+32(R11)
    0967	BEQL	L$DDBF
    0969	PUSHAL	.300
    096F	CVTBL	@LUN(AP), -(SP)
    0973	CALLS	#2, FOR$WRITE_SF
    097A	MOVW	#32, $LOCAL+^X115C(R11)
    097E	MOVAB	TBER1_BITS+128(R11), $LOCAL+^X1160(R11)
    0984	PUSHAB	$LOCAL+^X115C(R11)
    0987	CALLS	#1, FOR$IO_T_DS
    098E	CALLS	#0, FOR$IO_END
    0995  L$DDBF:
									    ; 0372
    0995	ADDB3	AG1(R11), AG0(R11), R0
    099D	BNEQ	L$DDHF
									    ; 0373
    099F	SUBL2	#7, SP
    09A2	MOVC3	#7, $PDATA+^X225, (SP)
    09AA	SUBL2	#17, SP
    09AD	MOVC3	#17, PARITY_BITS+64(R11), (SP)
    09B3	MOVC5	#24, (SP), #^X20, #32, STRING(R11)
    09BB	MOVL	R1, SP
									    ; 0374
    09BE	PUSHAL	.300
    09C4	CVTBL	@LUN(AP), -(SP)
    09C8	CALLS	#2, FOR$WRITE_SF
    09CF	PUSHAB	$LOCAL+^X112C(R11)
    09D2	CALLS	#1, FOR$IO_T_DS
    09D9	CALLS	#0, FOR$IO_END
									    ; 0375
    09E0	BRW	L$DDNF

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 39  
					MACCHK.FOR.44       

    09E3  L$DDHF:
									    ; 0376
    09E3	SUBL2	#7, SP
    09E6	MOVC3	#7, $PDATA+^X225, (SP)
    09EE	SUBL2	#20, SP
    09F1	MOVC3	#20, PARITY_BITS+96(R11), (SP)
    09F7	MOVC5	#27, (SP), #^X20, #32, STRING(R11)
    09FF	MOVL	R1, SP
									    ; 0377
    0A02	PUSHAL	.300
    0A08	CVTBL	@LUN(AP), R7
    0A0C	PUSHL	R7
    0A0E	CALLS	#2, FOR$WRITE_SF
    0A15	PUSHAB	$LOCAL+^X112C(R11)
    0A18	CALLS	#1, FOR$IO_T_DS
    0A1F	CALLS	#0, FOR$IO_END
									    ; 0378
    0A26	MOVL	I(R11), R10
    0A2A	MOVW	LENGTH(R11), R9
    0A2E	MOVW	BEG(R11), R8
    0A32	TSTB	AG0(R11)
    0A36	BNEQ	$CODE+^XA3B
    0A38	BRW	L$DDDG
									    ; 0379
    0A3B	MOVC5	#13, PARITY_BITS+192(R11), #^X20, #32, STRING(R11)
									    ; 0380
    0A45	MOVW	#13, R9
									    ; 0381
    0A48	MOVW	#9, R8
									    ; 0382
    0A4B	CVTWL	R8, R10
    0A4E  L$DDPG:
									    ; 0383
    0A4E	BITL	EMB$L_MC_TBER1, BIT(R11)[R10]
    0A58	BEQL	L$DDAI
									    ; 0384
    0A5A	CVTWL	R8, R0
    0A5D	SUBL2	R10, R0
    0A60	BGEQ	$CODE+^XA65
    0A62	MNEGL	R0, R0
    0A65	ADDL2	R0, R0
    0A68	SUBL2	#2, SP
    0A6B	MOVC3	#2, BYTE(R11)[R0], (SP)
    0A72	CVTWL	R9, R0
    0A75	SUBL2	R0, SP
    0A78	MOVC3	R0, STRING(R11), (SP)
    0A7E	SUBL3	SP, R3, R6
    0A82	ADDL2	#2, R6
    0A85	MOVC5	R6, (SP), #^X20, #32, STRING(R11)
    0A8D	ADDL3	R0, R1, SP
									    ; 0385
    0A91	ADDW2	#2, R9
									    ; 0386
    0A94  L$DDAI:
									    ; 0387
    0A94	AOBLEQ	#11, R10, L$DDPG

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 40  
					MACCHK.FOR.44       

									    ; 0388
    0A98	PUSHAL	.330
    0A9E	PUSHL	R7
    0AA0	CALLS	#2, FOR$WRITE_SF
    0AA7	SUBW3	#1, R9, R0
    0AAB	CVTWL	R0, R0
    0AAE	MOVW	R0, $LOCAL+^X1180(R11)
    0AB3	PUSHAB	$LOCAL+^X1180(R11)
    0AB7	CALLS	#1, FOR$IO_T_DS
    0ABE	CALLS	#0, FOR$IO_END
									    ; 0389
    0AC5  L$DDDG:
									    ; 0390
    0AC5	TSTB	AG1(R11)
    0AC9	BNEQ	$CODE+^XACE
    0ACB	BRW	L$DDGI
									    ; 0391
    0ACE	MOVC5	#13, PARITY_BITS+224(R11), #^X20, #32, STRING(R11)
									    ; 0392
    0AD8	MOVW	#13, R9
									    ; 0393
    0ADB	MOVW	#12, R8
									    ; 0394
    0ADE	CVTWL	R8, R10
    0AE1  L$DDCJ:
									    ; 0395
    0AE1	BITL	EMB$L_MC_TBER1, BIT(R11)[R10]
    0AEB	BEQL	L$DDDK
									    ; 0396
    0AED	CVTWL	R8, R0
    0AF0	SUBL2	R10, R0
    0AF3	BGEQ	$CODE+^XAF8
    0AF5	MNEGL	R0, R0
    0AF8	ADDL2	R0, R0
    0AFB	SUBL2	#2, SP
    0AFE	MOVC3	#2, BYTE(R11)[R0], (SP)
    0B05	CVTWL	R9, R0
    0B08	SUBL2	R0, SP
    0B0B	MOVC3	R0, STRING(R11), (SP)
    0B11	SUBL3	SP, R3, R6
    0B15	ADDL2	#2, R6
    0B18	MOVC5	R6, (SP), #^X20, #32, STRING(R11)
    0B20	ADDL3	R0, R1, SP
									    ; 0397
    0B24	ADDW2	#2, R9
									    ; 0398
    0B27  L$DDDK:
									    ; 0399
    0B27	AOBLEQ	#14, R10, L$DDCJ
									    ; 0400
    0B2B	PUSHAL	.330
    0B31	PUSHL	R7
    0B33	CALLS	#2, FOR$WRITE_SF
    0B3A	SUBW3	#1, R9, R0
    0B3E	CVTWL	R0, R0
    0B41	MOVW	R0, $LOCAL+^X1180(R11)

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 41  
					MACCHK.FOR.44       

    0B46	PUSHAB	$LOCAL+^X1180(R11)
    0B4A	CALLS	#1, FOR$IO_T_DS
    0B51	CALLS	#0, FOR$IO_END
									    ; 0401
    0B58  L$DDGI:
    0B58	MOVW	R8, BEG(R11)
    0B5C	MOVW	R9, LENGTH(R11)
    0B60	MOVL	R10, I(R11)
									    ; 0402
    0B64  L$DDNF:
									    ; 0403
    0B64	ADDB3	DG1(R11), DG0(R11), R0
    0B6C	BNEQ	L$DDJK
									    ; 0404
    0B6E	SUBL2	#7, SP
    0B71	MOVC3	#7, $PDATA+^X22C, (SP)
    0B79	SUBL2	#14, SP
    0B7C	MOVC3	#14, PARITY_BITS+128(R11), (SP)
    0B82	MOVC5	#21, (SP), #^X20, #32, STRING(R11)
    0B8A	MOVL	R1, SP
									    ; 0405
    0B8D	PUSHAL	.300
    0B93	CVTBL	@LUN(AP), -(SP)
    0B97	CALLS	#2, FOR$WRITE_SF
    0B9E	PUSHAB	$LOCAL+^X112C(R11)
    0BA1	CALLS	#1, FOR$IO_T_DS
    0BA8	CALLS	#0, FOR$IO_END
									    ; 0406
    0BAF	BRW	L$DDPK
    0BB2  L$DDJK:
									    ; 0407
    0BB2	SUBL2	#7, SP
    0BB5	MOVC3	#7, $PDATA+^X22C, (SP)
    0BBD	SUBL2	#17, SP
    0BC0	MOVC3	#17, PARITY_BITS+160(R11), (SP)
    0BC6	MOVC5	#24, (SP), #^X20, #32, STRING(R11)
    0BCE	MOVL	R1, SP
									    ; 0408
    0BD1	PUSHAL	.300
    0BD7	CVTBL	@LUN(AP), R7
    0BDB	PUSHL	R7
    0BDD	CALLS	#2, FOR$WRITE_SF
    0BE4	PUSHAB	$LOCAL+^X112C(R11)
    0BE7	CALLS	#1, FOR$IO_T_DS
    0BEE	CALLS	#0, FOR$IO_END
									    ; 0409
    0BF5	MOVL	I(R11), R10
    0BF9	MOVW	LENGTH(R11), R9
    0BFD	MOVW	BEG(R11), R8
    0C01	TSTB	DG0(R11)
    0C05	BNEQ	$CODE+^XC0A
    0C07	BRW	L$DDFL
									    ; 0410
    0C0A	MOVC5	#13, PARITY_BITS+192(R11), #^X20, #32, STRING(R11)
									    ; 0411
    0C14	MOVW	#13, R9

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 42  
					MACCHK.FOR.44       

									    ; 0412
    0C17	MOVW	#15, R8
									    ; 0413
    0C1A	CVTWL	R8, R10
    0C1D  L$DDBM:
									    ; 0414
    0C1D	BITL	EMB$L_MC_TBER1, BIT(R11)[R10]
    0C27	BEQL	L$DDCN
									    ; 0415
    0C29	CVTWL	R8, R0
    0C2C	SUBL2	R10, R0
    0C2F	BGEQ	$CODE+^XC34
    0C31	MNEGL	R0, R0
    0C34	ADDL2	R0, R0
    0C37	SUBL2	#2, SP
    0C3A	MOVC3	#2, BYTE(R11)[R0], (SP)
    0C41	CVTWL	R9, R0
    0C44	SUBL2	R0, SP
    0C47	MOVC3	R0, STRING(R11), (SP)
    0C4D	SUBL3	SP, R3, R6
    0C51	ADDL2	#2, R6
    0C54	MOVC5	R6, (SP), #^X20, #32, STRING(R11)
    0C5C	ADDL3	R0, R1, SP
									    ; 0416
    0C60	ADDW2	#2, R9
									    ; 0417
    0C63  L$DDCN:
									    ; 0418
    0C63	AOBLEQ	#17, R10, L$DDBM
									    ; 0419
    0C67	PUSHAL	.330
    0C6D	PUSHL	R7
    0C6F	CALLS	#2, FOR$WRITE_SF
    0C76	SUBW3	#1, R9, R0
    0C7A	CVTWL	R0, R0
    0C7D	MOVW	R0, $LOCAL+^X1180(R11)
    0C82	PUSHAB	$LOCAL+^X1180(R11)
    0C86	CALLS	#1, FOR$IO_T_DS
    0C8D	CALLS	#0, FOR$IO_END
									    ; 0420
    0C94  L$DDFL:
									    ; 0421
    0C94	TSTB	DG1(R11)
    0C98	BNEQ	$CODE+^XC9D
    0C9A	BRW	L$DDIN
									    ; 0422
    0C9D	MOVC3	#32, PARITY_BITS+224(R11), STRING(R11)
									    ; 0423
    0CA5	MOVW	#13, R9
									    ; 0424
    0CA8	MOVW	#18, R8
									    ; 0425
    0CAB	CVTWL	R8, R10
    0CAE  L$DDEO:
									    ; 0426
    0CAE	BITL	EMB$L_MC_TBER1, BIT(R11)[R10]

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 43  
					MACCHK.FOR.44       

    0CB8	BEQL	L$DDFP
									    ; 0427
    0CBA	CVTWL	R8, R0
    0CBD	SUBL2	R10, R0
    0CC0	BGEQ	$CODE+^XCC5
    0CC2	MNEGL	R0, R0
    0CC5	ADDL2	R0, R0
    0CC8	SUBL2	#2, SP
    0CCB	MOVC3	#2, BYTE(R11)[R0], (SP)
    0CD2	CVTWL	R9, R0
    0CD5	SUBL2	R0, SP
    0CD8	MOVC3	R0, STRING(R11), (SP)
    0CDE	SUBL3	SP, R3, R6
    0CE2	ADDL2	#2, R6
    0CE5	MOVC5	R6, (SP), #^X20, #32, STRING(R11)
    0CED	ADDL3	R0, R1, SP
									    ; 0428
    0CF1	ADDW2	#2, R9
									    ; 0429
    0CF4  L$DDFP:
									    ; 0430
    0CF4	AOBLEQ	#20, R10, L$DDEO
									    ; 0431
    0CF8	PUSHAL	.330
    0CFE	PUSHL	R7
    0D00	CALLS	#2, FOR$WRITE_SF
    0D07	SUBW3	#1, R9, R0
    0D0B	CVTWL	R0, R0
    0D0E	MOVW	R0, $LOCAL+^X1180(R11)
    0D13	PUSHAB	$LOCAL+^X1180(R11)
    0D17	CALLS	#1, FOR$IO_T_DS
    0D1E	CALLS	#0, FOR$IO_END
									    ; 0432
    0D25  L$DDIN:
    0D25	MOVW	R8, BEG(R11)
    0D29	MOVW	R9, LENGTH(R11)
    0D2D	MOVL	R10, I(R11)
									    ; 0433
    0D31  L$DDPK:
									    ; 0434
    0D31	MOVAB	@LUN(AP), $LOCAL+^X12EC(R11)
    0D37	CALLG	$LOCAL+^X12E8(R11), SBITA
									    ; 0435
    0D40	BITL	EMB$L_MC_PARITY, BIT+60(R11)
    0D49	BNEQ	L$KDIA
									    ; 0436
    0D4B	MOVAB	@LUN(AP), $LOCAL+^X12F8(R11)
    0D51	CALLG	$LOCAL+^X12F4(R11), LINCHK
									    ; 0437
    0D5A	PUSHAL	.210
    0D60	CVTBL	@LUN(AP), R10
    0D64	PUSHL	R10
    0D66	CALLS	#2, FOR$WRITE_SF
    0D6D	PUSHAB	$LOCAL+^X1300(R11)
    0D71	CALLS	#1, FOR$IO_T_DS
    0D78	PUSHAL	EMB$L_MC_PARITY

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 44  
					MACCHK.FOR.44       

    0D7E	CALLS	#1, FOR$IO_L_R
    0D85	CALLS	#0, FOR$IO_END
									    ; 0438
    0D8C	PUSHAL	.300
    0D92	PUSHL	R10
    0D94	CALLS	#2, FOR$WRITE_SF
    0D9B	PUSHAB	$LOCAL+^X1308(R11)
    0D9F	CALLS	#1, FOR$IO_T_DS
    0DA6	CALLS	#0, FOR$IO_END
									    ; 0439
    0DAD	BRW	.5000
									    ; 0440
    0DB0  L$KDIA:
									    ; 0441
    0DB0	MOVL	#3, R10
									    ; 0442
    0DB3	CALLG	$LOCAL+^X1310(R11), VBITCNT
    0DBC	CVTWB	R0, DG1(R11)
									    ; 0443
    0DC1	CMPB	R0, #4
    0DC4	BEQL	L$KDEB
    0DC6	INCL	R10
    0DC8  L$KDEB:
									    ; 0444
    0DC8	CALLG	$LOCAL+^X1320(R11), VBITCNT
    0DD1	CVTWB	R0, DG0(R11)
									    ; 0445
    0DD6	CMPB	R0, #4
    0DD9	BEQL	L$KDKB
    0DDB	INCL	R10
    0DDD  L$KDKB:
									    ; 0446
    0DDD	CALLG	$LOCAL+^X1330(R11), VBITCNT
    0DE6	CVTWB	R0, AG0(R11)
									    ; 0447
    0DEB	CMPB	R0, #3
    0DEE	BEQL	L$KDAC
    0DF0	INCL	R10
    0DF2  L$KDAC:
    0DF2	MOVL	R10, TEMP(R11)
									    ; 0448
    0DF6	CALLG	$LOCAL+^X1340(R11), VBITCNT
    0DFF	CVTWB	R0, R6
									    ; 0449
    0E02	CMPB	R6, #3
    0E05	BEQL	L$KDGC
    0E07	INCL	TEMP(R11)
    0E0A  L$KDGC:
									    ; 0450
    0E0A	MOVAB	@LUN(AP), $LOCAL+^X1170(R11)
    0E10	ADDL3	#1, TEMP(R11), -(SP)
    0E15	MOVL	SP, $LOCAL+^X1174(R11)
    0E1A	CALLG	$LOCAL+^X116C(R11), LINCHK
    0E22	ADDL2	#4, SP
									    ; 0451
    0E25	PUSHAL	.210

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 45  
					MACCHK.FOR.44       

    0E2B	CVTBL	@LUN(AP), R7
    0E2F	PUSHL	R7
    0E31	CALLS	#2, FOR$WRITE_SF
    0E38	PUSHAB	$LOCAL+^X1350(R11)
    0E3C	CALLS	#1, FOR$IO_T_DS
    0E43	PUSHAL	EMB$L_MC_PARITY
    0E49	CALLS	#1, FOR$IO_L_R
    0E50	CALLS	#0, FOR$IO_END
									    ; 0452
    0E57	BITL	EMB$L_MC_PARITY, BIT+56(R11)
    0E60	BEQL	L$KDMC
									    ; 0453
    0E62	PUSHAL	.300
    0E68	PUSHL	R7
    0E6A	CALLS	#2, FOR$WRITE_SF
    0E71	MOVW	#32, $LOCAL+^X115C(R11)
    0E75	MOVAB	PARITY_BITS(R11), $LOCAL+^X1160(R11)
    0E7B	PUSHAB	$LOCAL+^X115C(R11)
    0E7E	CALLS	#1, FOR$IO_T_DS
    0E85	CALLS	#0, FOR$IO_END
									    ; 0454
    0E8C	BRB	L$KDCD
    0E8E  L$KDMC:
									    ; 0455
    0E8E	PUSHAL	.300
    0E94	PUSHL	R7
    0E96	CALLS	#2, FOR$WRITE_SF
    0E9D	MOVW	#32, $LOCAL+^X115C(R11)
    0EA1	MOVAB	PARITY_BITS+32(R11), $LOCAL+^X1160(R11)
    0EA7	PUSHAB	$LOCAL+^X115C(R11)
    0EAA	CALLS	#1, FOR$IO_T_DS
    0EB1	CALLS	#0, FOR$IO_END
									    ; 0456
    0EB8  L$KDCD:
									    ; 0457
    0EB8	ADDB3	R6, AG0(R11), R0
    0EBE	CMPB	R0, #6
    0EC1	BNEQ	L$KDID
									    ; 0458
    0EC3	SUBL2	#7, SP
    0EC6	MOVC3	#7, $PDATA+^X233, (SP)
    0ECE	SUBL2	#17, SP
    0ED1	MOVC3	#17, PARITY_BITS+64(R11), (SP)
    0ED7	MOVC5	#24, (SP), #^X20, #32, STRING(R11)
    0EDF	MOVL	R1, SP
									    ; 0459
    0EE2	PUSHAL	.300
    0EE8	PUSHL	R7
    0EEA	CALLS	#2, FOR$WRITE_SF
    0EF1	PUSHAB	$LOCAL+^X112C(R11)
    0EF4	CALLS	#1, FOR$IO_T_DS
    0EFB	CALLS	#0, FOR$IO_END
									    ; 0460
    0F02	BRW	L$KDOD
    0F05  L$KDID:
									    ; 0461

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 46  
					MACCHK.FOR.44       

    0F05	SUBL2	#7, SP
    0F08	MOVC3	#7, $PDATA+^X233, (SP)
    0F10	SUBL2	#20, SP
    0F13	MOVC3	#20, PARITY_BITS+96(R11), (SP)
    0F19	MOVC5	#27, (SP), #^X20, #32, STRING(R11)
    0F21	MOVL	R1, SP
									    ; 0462
    0F24	PUSHAL	.300
    0F2A	PUSHL	R7
    0F2C	CALLS	#2, FOR$WRITE_SF
    0F33	PUSHAB	$LOCAL+^X112C(R11)
    0F36	CALLS	#1, FOR$IO_T_DS
    0F3D	CALLS	#0, FOR$IO_END
									    ; 0463
    0F44	MOVL	I(R11), R10
    0F48	MOVW	LENGTH(R11), R9
    0F4C	MOVW	BEG(R11), R8
    0F50	CMPB	AG0(R11), #3
    0F55	BNEQ	$CODE+^XF5A
    0F57	BRW	L$KDEE
									    ; 0464
    0F5A	MOVC5	#13, PARITY_BITS+192(R11), #^X20, #32, STRING(R11)
									    ; 0465
    0F64	MOVW	#13, R9
									    ; 0466
    0F67	MOVW	#5, R8
									    ; 0467
    0F6A	CVTWL	R8, R10
    0F6D  L$KDAF:
									    ; 0468
    0F6D	BITL	EMB$L_MC_PARITY, BIT(R11)[R10]
    0F77	BNEQ	L$KDBG
									    ; 0469
    0F79	CVTWL	R8, R0
    0F7C	SUBL2	R10, R0
    0F7F	ADDL2	R0, R0
    0F82	SUBL2	#2, SP
    0F85	MOVC3	#2, BYTE(R11)[R0], (SP)
    0F8C	CVTWL	R9, R0
    0F8F	SUBL2	R0, SP
    0F92	MOVC3	R0, STRING(R11), (SP)
    0F98	SUBL3	SP, R3, $LOCAL+^X13BC(R11)
    0F9E	ADDL3	#2, $LOCAL+^X13BC(R11), R0
    0FA4	MOVC5	R0, (SP), #^X20, #32, STRING(R11)
    0FAC	ADDL3	R0, R1, SP
									    ; 0470
    0FB0	ADDW2	#2, R9
									    ; 0471
    0FB3  L$KDBG:
									    ; 0472
    0FB3	ACBL	#3, #-1, R10, L$KDAF
									    ; 0473
    0FBD	PUSHAL	.330
    0FC3	PUSHL	R7
    0FC5	CALLS	#2, FOR$WRITE_SF
    0FCC	SUBW3	#1, R9, R0

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 47  
					MACCHK.FOR.44       

    0FD0	CVTWL	R0, R0
    0FD3	MOVW	R0, $LOCAL+^X1180(R11)
    0FD8	PUSHAB	$LOCAL+^X1180(R11)
    0FDC	CALLS	#1, FOR$IO_T_DS
    0FE3	CALLS	#0, FOR$IO_END
									    ; 0474
    0FEA  L$KDEE:
									    ; 0475
    0FEA	CMPB	R6, #3
    0FED	BNEQ	$CODE+^XFF2
    0FEF	BRW	L$KDHG
									    ; 0476
    0FF2	MOVC5	#13, PARITY_BITS+224(R11), #^X20, #32, STRING(R11)
									    ; 0477
    0FFC	MOVW	#13, R9
									    ; 0478
    0FFF	MOVW	#2, R8
									    ; 0479
    1002	CVTWL	R8, R10
    1005  L$KDDH:
									    ; 0480
    1005	BITL	EMB$L_MC_PARITY, BIT(R11)[R10]
    100F	BNEQ	L$KDEI
									    ; 0481
    1011	CVTWL	R8, R0
    1014	SUBL2	R10, R0
    1017	ADDL2	R0, R0
    101A	SUBL2	#2, SP
    101D	MOVC3	#2, BYTE(R11)[R0], (SP)
    1024	CVTWL	R9, R0
    1027	SUBL2	R0, SP
    102A	MOVC3	R0, STRING(R11), (SP)
    1030	SUBL3	SP, R3, $LOCAL+^X13BC(R11)
    1036	ADDL3	#2, $LOCAL+^X13BC(R11), R0
    103C	MOVC5	R0, (SP), #^X20, #32, STRING(R11)
    1044	ADDL3	R0, R1, SP
									    ; 0482
    1048	ADDW2	#2, R9
									    ; 0483
    104B  L$KDEI:
									    ; 0484
    104B	SOBGEQ	R10, L$KDDH
									    ; 0485
    104E	PUSHAL	.330
    1054	PUSHL	R7
    1056	CALLS	#2, FOR$WRITE_SF
    105D	SUBW3	#1, R9, R0
    1061	CVTWL	R0, R0
    1064	MOVW	R0, $LOCAL+^X1180(R11)
    1069	PUSHAB	$LOCAL+^X1180(R11)
    106D	CALLS	#1, FOR$IO_T_DS
    1074	CALLS	#0, FOR$IO_END
									    ; 0486
    107B  L$KDHG:
    107B	MOVW	R8, BEG(R11)
    107F	MOVW	R9, LENGTH(R11)

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 48  
					MACCHK.FOR.44       

    1083	MOVL	R10, I(R11)
									    ; 0487
    1087  L$KDOD:
    1087	MOVB	R6, AG1(R11)
									    ; 0488
    108C	ADDB3	DG1(R11), DG0(R11), R0
    1094	CMPB	R0, #8
    1097	BNEQ	L$KDKI
									    ; 0489
    1099	SUBL2	#7, SP
    109C	MOVC3	#7, $PDATA+^X23A, (SP)
    10A4	SUBL2	#24, SP
    10A7	MOVC3	#24, PARITY_BITS+128(R11), (SP)
    10AD	MOVC5	#31, (SP), #^X20, #32, STRING(R11)
    10B5	MOVL	R1, SP
									    ; 0490
    10B8	PUSHAL	.300
    10BE	CVTBL	@LUN(AP), -(SP)
    10C2	CALLS	#2, FOR$WRITE_SF
    10C9	PUSHAB	$LOCAL+^X112C(R11)
    10CC	CALLS	#1, FOR$IO_T_DS
    10D3	CALLS	#0, FOR$IO_END
									    ; 0491
    10DA	BRW	L$KDAJ
    10DD  L$KDKI:
									    ; 0492
    10DD	SUBL2	#7, SP
    10E0	MOVC3	#7, $PDATA+^X23A, (SP)
    10E8	SUBL2	#17, SP
    10EB	MOVC3	#17, PARITY_BITS+160(R11), (SP)
    10F1	MOVC5	#24, (SP), #^X20, #32, STRING(R11)
    10F9	MOVL	R1, SP
									    ; 0493
    10FC	PUSHAL	.300
    1102	CVTBL	@LUN(AP), R7
    1106	PUSHL	R7
    1108	CALLS	#2, FOR$WRITE_SF
    110F	PUSHAB	$LOCAL+^X112C(R11)
    1112	CALLS	#1, FOR$IO_T_DS
    1119	CALLS	#0, FOR$IO_END
									    ; 0494
    1120	MOVL	I(R11), R10
    1124	MOVW	LENGTH(R11), R9
    1128	MOVW	BEG(R11), R8
    112C	CMPB	DG0(R11), #4
    1131	BNEQ	$CODE+^X1136
    1133	BRW	L$KDGJ
									    ; 0495
    1136	MOVC3	#32, PARITY_BITS+192(R11), STRING(R11)
									    ; 0496
    113E	MOVW	#13, R9
									    ; 0497
    1141	MOVW	#9, R8
									    ; 0498
    1144	CVTWL	R8, R10
    1147  L$KDCK:

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 49  
					MACCHK.FOR.44       

									    ; 0499
    1147	BITL	EMB$L_MC_PARITY, BIT(R11)[R10]
    1151	BNEQ	L$KDDL
									    ; 0500
    1153	CVTWL	R8, R0
    1156	SUBL2	R10, R0
    1159	ADDL2	R0, R0
    115C	SUBL2	#2, SP
    115F	MOVC3	#2, BYTE(R11)[R0], (SP)
    1166	CVTWL	R9, R0
    1169	SUBL2	R0, SP
    116C	MOVC3	R0, STRING(R11), (SP)
    1172	SUBL3	SP, R3, R6
    1176	ADDL2	#2, R6
    1179	MOVC5	R6, (SP), #^X20, #32, STRING(R11)
    1181	ADDL3	R0, R1, SP
									    ; 0501
    1185	ADDW2	#2, R9
									    ; 0502
    1188  L$KDDL:
									    ; 0503
    1188	ACBL	#6, #-1, R10, L$KDCK
									    ; 0504
    1192	PUSHAL	.330
    1198	PUSHL	R7
    119A	CALLS	#2, FOR$WRITE_SF
    11A1	SUBW3	#1, R9, R0
    11A5	CVTWL	R0, R0
    11A8	MOVW	R0, $LOCAL+^X1180(R11)
    11AD	PUSHAB	$LOCAL+^X1180(R11)
    11B1	CALLS	#1, FOR$IO_T_DS
    11B8	CALLS	#0, FOR$IO_END
									    ; 0505
    11BF  L$KDGJ:
									    ; 0506
    11BF	CMPB	DG1(R11), #4
    11C4	BNEQ	$CODE+^X11C9
    11C6	BRW	L$KDJL
									    ; 0507
    11C9	MOVC3	#32, PARITY_BITS+224(R11), STRING(R11)
									    ; 0508
    11D1	MOVW	#13, R9
									    ; 0509
    11D4	MOVW	R9, R8
									    ; 0510
    11D7	CVTWL	R8, R10
    11DA  L$KDFM:
									    ; 0511
    11DA	BITL	EMB$L_MC_PARITY, BIT(R11)[R10]
    11E4	BNEQ	L$KDGN
									    ; 0512
    11E6	CVTWL	R8, R0
    11E9	SUBL2	R10, R0
    11EC	ADDL2	R0, R0
    11EF	SUBL2	#2, SP
    11F2	MOVC3	#2, BYTE(R11)[R0], (SP)

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 50  
					MACCHK.FOR.44       

    11F9	CVTWL	R9, R0
    11FC	SUBL2	R0, SP
    11FF	MOVC3	R0, STRING(R11), (SP)
    1205	SUBL3	SP, R3, R6
    1209	ADDL2	#2, R6
    120C	MOVC5	R6, (SP), #^X20, #32, STRING(R11)
    1214	ADDL3	R0, R1, SP
									    ; 0513
    1218	ADDW2	#2, R9
									    ; 0514
    121B  L$KDGN:
									    ; 0515
    121B	ACBL	#10, #-1, R10, L$KDFM
									    ; 0516
    1225	PUSHAL	.330
    122B	PUSHL	R7
    122D	CALLS	#2, FOR$WRITE_SF
    1234	SUBW3	#1, R9, R0
    1238	CVTWL	R0, R0
    123B	MOVW	R0, $LOCAL+^X1180(R11)
    1240	PUSHAB	$LOCAL+^X1180(R11)
    1244	CALLS	#1, FOR$IO_T_DS
    124B	CALLS	#0, FOR$IO_END
									    ; 0517
    1252  L$KDJL:
    1252	MOVW	R8, BEG(R11)
    1256	MOVW	R9, LENGTH(R11)
    125A	MOVL	R10, I(R11)
									    ; 0518
    125E  L$KDAJ:
									    ; 0519
    125E  .5000:
									    ; 0520
    125E	MOVAB	@LUN(AP), $LOCAL+^X135C(R11)
    1264	CALLG	$LOCAL+^X1358(R11), SBIER
									    ; 0521
    126D	MOVAB	@LUN(AP), $LOCAL+^X1368(R11)
    1273	CALLG	$LOCAL+^X1364(R11), LINCHK
									    ; 0522
    127C	PUSHAL	.210
    1282	CVTBL	@LUN(AP), -(SP)
    1286	CALLS	#2, FOR$WRITE_SF
    128D	PUSHAB	$LOCAL+^X1370(R11)
    1291	CALLS	#1, FOR$IO_T_DS
    1298	PUSHAL	EMB$L_MC_PC
    129E	CALLS	#1, FOR$IO_L_R
    12A5	CALLS	#0, FOR$IO_END
									    ; 0523
    12AC	MOVAB	@LUN(AP), $LOCAL+^X137C(R11)
    12B2	CALLG	$LOCAL+^X1378(R11), PSL
									    ; 0524
    12BB	RET	
    12BC  B_MACCHK::
    12BC	.WORD	^M<IV,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>
    12BE	MOVAL	$LOCAL+^X10F0, R11
    12C5  L$KDEP:

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 51  
					MACCHK.FOR.44       

									    ; 0526
    12C5	MOVAB	@LUN(AP), $LOCAL+^X11D8(R11)
    12CB	CALLG	$LOCAL+^X11D4(R11), LINCHK
									    ; 0527
    12D4	BLBC	TTY, L$CEAA
									    ; 0528
    12DB	PUSHAL	.10000
    12E1	CVTBL	@LUN(AP), -(SP)
    12E5	CALLS	#2, FOR$WRITE_SF
    12EC	PUSHAB	$LOCAL+^X1134(R11)
    12EF	CALLS	#1, FOR$IO_T_DS
    12F6	CALLS	#0, FOR$IO_END
									    ; 0529
    12FD	BRB	L$CEMA
    12FF  L$CEAA:
									    ; 0530
    12FF	PUSHAL	.10000
    1305	CVTBL	@LUN(AP), -(SP)
    1309	CALLS	#2, FOR$WRITE_SF
    1310	SUBL2	#32, SP
    1313	MOVC3	#32, TITLEB(R11), (SP)
    1318	SUBL2	#63, SP
    131B	MOVC3	#63, TITLEA(R11), (SP)
    1320	MOVZBW	#95, $LOCAL+^X115C(R11)
    1325	MOVL	SP, $LOCAL+^X1160(R11)
    1329	PUSHAB	$LOCAL+^X115C(R11)
    132C	CALLS	#1, FOR$IO_T_V_DS
    1333	CALLS	#0, FOR$IO_END
									    ; 0531
    133A  L$CEMA:
									    ; 0533
    133A	MOVAB	@LUN(AP), $LOCAL+^X1398(R11)
    1340	CALLG	$LOCAL+^X1394(R11), CRYPTK8
									    ; 0534
    1349	RET	
    134A  C_MACCHK::
    134A	.WORD	^M<IV,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>
    134C	MOVAL	$LOCAL+^X10F0, R11
    1353  L$CEID:
									    ; 0536
    1353	MOVAB	@LUN(AP), $LOCAL+^X1368(R11)
    1359	CALLG	$LOCAL+^X1364(R11), LINCHK
									    ; 0537
    1362	MOVAB	@LUN(AP), $LOCAL+^X13AC(R11)
    1368	CALLG	$LOCAL+^X13A8(R11), CRYPTK8
									    ; 0538
    1371	RET	

    0225	.PSECT	$PDATA
    0225	.XBYTE	3C,31,34,3A,30,39,3E
    022C	.XBYTE	3C,32,30,3A,31,35,3E
    0233	.XBYTE	3C,30,35,3A,30,30,3E
    023A	.XBYTE	3C,31,33,3A,30,36,3E
		.END

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 52  
					MACCHK.FOR.44       

PROGRAM SECTIONS

    Name                 Bytes   Attributes

  0 $CODE                 4978   PIC CON REL LCL   SHR   EXE   RD NOWRT LONG
  1 $PDATA                 577   PIC CON REL LCL   SHR NOEXE   RD NOWRT LONG
  2 $LOCAL                5056   PIC CON REL LCL NOSHR NOEXE   RD   WRT LONG
  3 EMB                    500   PIC OVR REL GBL   SHR NOEXE   RD   WRT LONG
  4 SYECOM                2272   PIC OVR REL GBL   SHR NOEXE   RD   WRT LONG


ENTRY POINTS

    Address  Type Name               Address  Type Name               Address  Type Name           

  0-000012BC      B_MACCHK         0-0000134A      C_MACCHK         0-00000000      MACCHK         


VARIABLES

    Address  Type Name               Address  Type Name               Address  Type Name               Address  Type Name           

  2-00001064  L*1 ADS              2-00001062  L*1 AG0              2-00001063  L*1 AG1              2-000010F4  I*4 AST_CODE       
  2-000010EC  I*2 BEG              4-00000008  I*2 DEVSUMCNT        2-00001061  L*1 DG0              2-00001060  L*1 DG1            
  3-00000013  L*1 EMB$B_MC_CACHEF  3-00000012  L*1 EMB$B_MC_OPCODE  3-00000010  L*1 EMB$B_MC_SUMCOD  3-00000011  L*1 EMB$B_MC_TOPF  
  3-00000014  I*4 EMB$L_MC_CES     3-00000020  I*4 EMB$L_MC_D       3-00000030  I*4 EMB$L_MC_PARITY  3-00000038  I*4 EMB$L_MC_PC    
  3-0000003C  I*4 EMB$L_MC_PSL     3-00000034  I*4 EMB$L_MC_SBIERR  3-00000024  I*4 EMB$L_MC_TBER0   3-00000028  I*4 EMB$L_MC_TBER1 
  3-0000002C  I*4 EMB$L_MC_TIMOAD  3-00000018  I*4 EMB$L_MC_UPC     3-0000001C  I*4 EMB$L_MC_VA      3-00000000  I*4 EMB$L_SID      
  3-00000006  R*8 EMB$Q_MC_TIME    3-00000004  I*2 EMB$W_MC_ENTRY   3-0000000E  I*2 EMB$W_MC_ERRSEQ  2-0000110C  I*4 FPOS           
  2-00001065  L*1 FS               2-000010E8  I*2 G0               2-000010EA  I*2 G1               2-00001118  I*4 I              
  2-00001110  I*4 INDEX            2-000010E6  I*2 LENGTH           2-00001114  I*4 LINE_CT         AP-00000004@ L*1 LUN            
  4-00000000  L*4 L_QUESTION       2-000010FC  I*4 MCT_CODE         4-0000000A  I*2 RECCNT           2-00001104  I*4 SIZE           
  2-00001108  I*4 STATUS           2-00001066  CHR STRING           2-00001100  I*4 TEMP             2-000010A6  CHR TITLEA         
  2-00001086  CHR TITLEB           2-000010F8  I*4 TO_CODE          2-000010F0  I*4 TRAP_CODE        4-00000004  L*4 TTY            


ARRAYS

    Address  Type Name		       Bytes  Dimensions

  2-00000DB8  CHR ADS_MCT_FS0            640  (0:1,0:15)
  2-000003A0  CHR ASTLVL                 160  (0:7)
  2-00000000  I*4 BIT                    128  (0:31)
  2-00000DB0  CHR BYTE                     8  (0:3)
  2-00000360  CHR CACHE_FLAGS             64  (2)
  2-00000810  CHR CES_BITS               544  (0:16)
  3-00000000  L*1 EMB                    500  (0:499)
  2-00000210  CHR FORCE_REPLACE           80  (0:3)
  2-000000D0  CHR FORCE_TB_PARITY        320  (0:15)
  2-00001038  CHR FS1                     40  (0:1)
  2-00000440  CHR IPA                     80  (0:3)
  4-0000000C  L*1 NAMDEVSUM              340  (20,0:16)
  2-00000260  CHR PARITY_BITS            256  (8)
  3-00000010  I*4 REG                     48  (0:11)
  2-00000490  CHR SUMCODE                736  (0:22)
  2-00000B10  CHR TBER0_BITS             672  (0:20)

MACCHK          22-Aug-1978 02:52:24	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 53  
					MACCHK.FOR.44       

  2-00000770  CHR TBER1_BITS             160  (4:8)
  2-00000080  CHR TIME_OUT                80  (0:3)
  2-00000A30  CHR TRAP                   224  (7)
  4-00000160  L*1 VOLNAM                1920  (20,0:7,12)


LABELS

    Address   Label       Address   Label       Address   Label       Address   Label       Address   Label       Address   Label   

  1-000000DC  100'      1-00000104  150'      1-000000FC  200'      1-00000159  201'      1-00000139  202'      1-00000172  210'    
  1-0000012B  250'      1-0000017E  300'      1-0000018A  320'      1-00000195  330'      1-0000019C  335'      1-000001E3  340'    
  1-000001EA  350'      1-0000020B  360'          **      500           **      1000          **      2000          **      3000    
      **      4000      0-0000125E  5000          **      6000      0-00000927  7000          **      8000          **      9000    
  1-0000021E  10000'        **      11000         **      12000   


FUNCTIONS AND SUBROUTINES REFERENCED

BITCNT            BITS_OUTPUT       CRYPTK8           LIB$EXTZV         LIB$FFS           LINCHK            PSL            
SBIER             SBITA             VBITCNT        


Total Space Allocated = 13383 Bytes


COMPILER OPTIONS

/CHECK=(NOBOUNDS,OVERFLOW)
/DEBUG=(NOSYMBOLS,TRACEBACK)
/OPTIMIZE  /WARNINGS  /I4  /NOD_LINES  
