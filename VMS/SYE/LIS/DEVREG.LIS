
                22-Aug-1978 02:49:35	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 1   
					DEVREG.FOR.16       

0001    	SUBROUTINE DEVREG (LUN, REGNAM, REG, BITNAM)
         
        C
        C	INCLUDE FILES:
        C
        C			None.
         
         
        C
        C	EQUATED SYMBOLS:
        C
         
        C
        C	OWN STORAGE
        C
0002    	INTEGER*4	L_BIT
0003    	BYTE		CONTROL
0004    	BYTE		INDEX
0005    	BYTE		L
         
        C
        C	EXTERNAL ROUTINES:
        C
0006    	INTEGER*2	BITCNT
         
         
        C++
        C
        C	FUNCTIONAL DESCRIPTION:
        C
        C		Subroutine DEVREG produces the properly paginated
        C	output associated with the individual device register.
        C	The register name and the hexadecimal value of the register
        C	ia always printed by DEVREG.  The complete action of DEVREG
        C	is dependent on the value of formal parameter BITNAM.
        c
        C	If BITNAM(0) is equal to the string '0', then only the 
        C	register name and the hex value of the register is printed.
        C
        C	If BITNAM(0) is equal to the string '1', then the register
        C	name, the hex value of the register, and the decimal value
        C	of the register is printed.    Note that for the decimal 
        C	representation, the register is considered to be a positive
        C	INTEGER*2 value.      Hence, the decimal value printed 
        C	corrresponds to the low-order 15 bits of the register.
        C
        C	If the first character of BITNAM(0) is the character '2',
        C	then the register name and the hex value of the register
        C	followed by the remainder of the BITNAM(0) string and the
        C	decimal value of the register is printed.
        C
        C	If none of the above conditions are true, then the register
        C	name and the hex value of the register are printed, as well
        C	as a meaningful ascii string printed for the set bits in the
        C	register.  As device registers are passed as longwords
        C	(i.e., INTEGER*4), only the low-order 16 bits are considered

DEVREG          22-Aug-1978 02:49:35	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 2   
					DEVREG.FOR.16       

        C	meaningful.  The MBZ high-order 16 bits are checked as a group;
        C	if one or more is set, an appropriate message indicating that
        C	the high-order 16 bits are non-zero is printed.  For each of
        C	the low-order 16 bits that is set, the corresponding bit name
        C	is output.
        C
         
        C
        C	FORMAL PARAMETERS:
        C
0007    	BYTE		LUN
0008    	CHARACTER*(*)	REGNAM
0009    	INTEGER*4	REG
0010    	CHARACTER*(*)	BITNAM(0:15)
         
        C
        C	IMPLICIT INPUTS:
        C
        C				None.
         
        C
        C	IMPLICIT OUTPUTS:
        C
        C				None.
         
        C
        C	SIDE EFFECTS:
        C
        C		In case of an internal consistency check within 
        C	DEVREG, the process will be terminated with a 
        C	" STOP  -  BUGCHK " message.
        C--
0011    	IF(BITNAM(0) .EQ. '0')
        	1	THEN
0012    			CALL LINCHK(LUN,1)
0013    			WRITE(LUN,501)  REGNAM,REG
0014    			RETURN
0015    	ENDIF
         
0016    	IF(BITNAM(0) .EQ. '1')
        	1	THEN
0017    			CALL LINCHK(LUN,1)
0018    			I = IAND(REG,'7FFF'X)
0019    			IF(I .EQ. 0)
        	1		   THEN
0020    				CONTROL = 1
0021    			   ELSE
0022    				CONTROL = 1 + INT(LOG10(FLOAT(I)))
0023    			ENDIF
0024    			WRITE(LUN,501) REGNAM,REG,I
0025    			RETURN
0026    	ENDIF
         
         
0027    	IF(BITNAM(0)(1:1) .EQ. '2')
        	1	THEN

DEVREG          22-Aug-1978 02:49:35	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 3   
					DEVREG.FOR.16       

0028    			CALL LINCHK(LUN,1)
0029    			WRITE(LUN,502)  REGNAM,REG,BITNAM(0)(2:LEN(BITNAM(0))),REG
0030    			RETURN
0031    	ENDIF
         
0032     501	FORMAT(' ',T10,A,T23,Z8,T40,:,I<CONTROL>,'.')
0033     502	FORMAT(' ',T10,A,T23,Z8,T40,A,I7,'.')
         
         
         
0034    	L_BIT	= '8000'X
0035    	INDEX	= 15
         
0036    	IF(IAND(REG,'FFFF0000'X) .NE. 0)
        	1    THEN
0037    		L = BITCNT(IAND(REG,'0000FFFF'X))
0038    		CALL LINCHK(LUN,L+1)
0039    		WRITE(LUN,555)  REGNAM,REG,
        	1			 'HIGH 16 BITS ARE NON-ZERO'
0040    		IF(L .EQ. 0)  RETURN
0041    		INDEX = INDEX - 1
0042    		GO TO 530
0043    	ENDIF
         
0044    	GO TO 510
         
0045    	ENTRY MBAASC(LUN,REGNAM,REG,BITNAM)
         
0046    	L_BIT	= '80000000'X
0047    	INDEX	= 31
         
0048     510	CONTINUE
         
0049    	L	= BITCNT(REG)
         
0050    	IF(L .EQ. 0)
        	1	THEN
0051    			CALL LINCHK(LUN,1)
0052    			WRITE(LUN,501)  REGNAM,REG
0053    			RETURN
0054    	ENDIF
         
0055    	CALL LINCHK(LUN,L)
         
        C
        C	FIND FIRST BIT SET
        C
0056    	DO 520,  I=INDEX,0,-1
0057    	   IF(IAND(REG,L_BIT) .EQ. L_BIT)
        	1	THEN
0058    			WRITE(LUN,502)  REGNAM,REG,BITNAM(I)
0059    			IF(L .EQ. 1)  RETURN
0060    			INDEX	= I - 1
0061    			GO TO 530
0062    	   ENDIF
0063    	   L_BIT = ISHFT(L_BIT,-1)

DEVREG          22-Aug-1978 02:49:35	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 4   
					DEVREG.FOR.16       

0064     520	CONTINUE
         
0065    	STOP 'BUGCHK'
         
0066     530	CONTINUE
         
0067    	DO 540, I=INDEX,0,-1
0068    	   L_BIT = ISHFT(L_BIT,-1)
0069    	   IF(IAND(REG,L_BIT) .EQ. L_BIT) WRITE(LUN,565)  BITNAM(I)
0070     540	CONTINUE
         
0071    	RETURN
         
         
0072     555	FORMAT(' ',T10,A,T23,Z8,T40,A)
0073     565	FORMAT(' ',T40,A)
         
0074    	END

DEVREG          22-Aug-1978 02:49:35	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 5   
					DEVREG.FOR.16       

		.TITLE	DEVREG
		.IDENT	01

    0000	.PSECT	$PDATA
    0000	.LONG	^X00000001
    0004	.XBYTE	48,49,47,48,20,31,36,20,42,49,54,53,20,41,52,45
    0014	.XBYTE	20,4E,4F,4E,2D,5A,45,52,4F
    001D	.LONG	^XFFFFFFFF
    0021	.XBYTE	42,55,47,43,48,4B

    000C	.PSECT	$LOCAL
    000C	.LONG	^X010E0000
    0010	.LONG	^X00000000
    0014	.LONG	^X00000000,^X00000000
    001C	.LONG	^X040E0000
    0020	.LONG	^X00000000
    0024	.LONG	^X01E00000,^X00000000
    002C	.LONG	^X00000000
    0030	.LONG	^X00000000,^X00000000,^X0000000F
    003C	.LONG	^X00000002
    0040	.LONG	^X00000000
    0044	.ADDR	$PDATA
    0048	.LONG	^X010E0000
    004C	.LONG	^X00000000
    0050	.LONG	^X00000001
    0054	.LONG	^X00000000
    0058	.LONG	^X00000002
    005C	.LONG	^X00000000
    0060	.LONG	^X00000000
    0064	.LONG	^X010E0019
    0068	.ADDR	$PDATA+^X4
    006C	.LONG	^X00000002
    0070	.LONG	^X00000000
    0074	.ADDR	L
    0078	.LONG	^X00000002
    007C	.ADDR	L_BIT
    0080	.ADDR	$PDATA+^X1D
    0084	.LONG	^X010E0006
    0088	.ADDR	$PDATA+^X21

    0027	.PSECT	$PDATA
    0027  .501:
    0027	.XBYTE	0F,01,20,0D,0A,29,0D,17,19,08,0D,28,07,98,40
    0036	.ADDR	L$IBAA
    003A	.XBYTE	0F,01,2E,04
    003E  .502:
    003E	.XBYTE	0F,01,20,0D,0A,29,0D,17,19,08,0D,28,29,18,07,0F
    004E	.XBYTE	01,2E,04
    0051  .555:
    0051	.XBYTE	0F,01,20,0D,0A,29,0D,17,19,08,0D,28,29,04
    005F  .565:
    005F	.XBYTE	0F,01,20,0D,28,29,04

    0000	.PSECT	$CODE
    0000  DEVREG::
    0000	.WORD	^M<IV,R2,R3,R4,R5,R9,R10,R11>

DEVREG          22-Aug-1978 02:49:35	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 6   
					DEVREG.FOR.16       

    0002	MOVAL	$LOCAL+^X4, R11
    0009	MOVQ	@REGNAM(AP), R0
    000D	MOVL	R1, $LOCAL+^X10(R11)
    0011	MOVW	R0, $LOCAL+^XC(R11)
    0015	BSBW	L$IAPG
									    ; 0011
    0018	MOVAB	@$LOCAL+^X2C(R11), R10
    001C	CMPC5	$LOCAL+^X1C(R11), (R10), #^X20, #1, #^X30
    0024	BNEQ	L$IAFH
									    ; 0012
    0026	MOVAB	@LUN(AP), $LOCAL+^X40(R11)
    002B	CALLG	$LOCAL+^X3C(R11), LINCHK
									    ; 0013
    0033	PUSHAL	.501
    0039	CVTBL	@LUN(AP), -(SP)
    003D	CALLS	#2, FOR$WRITE_SF
    0044	PUSHAB	$LOCAL+^XC(R11)
    0047	CALLS	#1, FOR$IO_T_DS
    004E	PUSHAL	@REG(AP)
    0051	CALLS	#1, FOR$IO_L_R
    0058	CALLS	#0, FOR$IO_END
									    ; 0014
    005F	RET	
									    ; 0015
    0060  L$IAFH:
									    ; 0016
    0060	CMPC5	$LOCAL+^X1C(R11), (R10), #^X20, #1, #^X31
    0068	BNEQ	L$IAJI
									    ; 0017
    006A	MOVAB	@LUN(AP), $LOCAL+^X40(R11)
    006F	CALLG	$LOCAL+^X3C(R11), LINCHK
									    ; 0018
    0077	BICL3	#^XFFFF8000, @REG(AP), I(R11)
									    ; 0019
    0081	BNEQ	L$IAHK
									    ; 0020
    0083	MOVB	#1, CONTROL(R11)
									    ; 0021
    0087	BRB	L$IANK
    0089  L$IAHK:
									    ; 0022
    0089	CVTLF	I(R11), R0
    008D	JSB	MTH$ALOG10_R5
    0093	CVTFL	R0, R0
    0096	INCL	R0
    0098	CVTLB	R0, CONTROL(R11)
									    ; 0023
    009C  L$IANK:
									    ; 0024
    009C	PUSHAL	.501
    00A2	CVTBL	@LUN(AP), -(SP)
    00A6	CALLS	#2, FOR$WRITE_SF
    00AD	PUSHAB	$LOCAL+^XC(R11)
    00B0	CALLS	#1, FOR$IO_T_DS
    00B7	PUSHAL	@REG(AP)
    00BA	CALLS	#1, FOR$IO_L_R

DEVREG          22-Aug-1978 02:49:35	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 7   
					DEVREG.FOR.16       

    00C1	PUSHAL	I(R11)
    00C4	CALLS	#1, FOR$IO_L_R
    00CB	CALLS	#0, FOR$IO_END
									    ; 0025
    00D2	RET	
									    ; 0026
    00D3  L$IAJI:
									    ; 0027
    00D3	CMPB	(R10), #50
    00D7	BNEQ	L$IADO
									    ; 0028
    00D9	MOVAB	@LUN(AP), $LOCAL+^X40(R11)
    00DE	CALLG	$LOCAL+^X3C(R11), LINCHK
									    ; 0029
    00E6	PUSHAL	.502
    00EC	CVTBL	@LUN(AP), -(SP)
    00F0	CALLS	#2, FOR$WRITE_SF
    00F7	PUSHAB	$LOCAL+^XC(R11)
    00FA	CALLS	#1, FOR$IO_T_DS
    0101	PUSHAL	@REG(AP)
    0104	CALLS	#1, FOR$IO_L_R
    010B	MOVZWL	$LOCAL+^X1C(R11), R0
    010F	DECL	R0
    0111	MOVW	R0, $LOCAL+^X48(R11)
    0115	MOVAB	1(R10), $LOCAL+^X4C(R11)
    011A	PUSHAB	$LOCAL+^X48(R11)
    011D	CALLS	#1, FOR$IO_T_DS
    0124	PUSHAL	@REG(AP)
    0127	CALLS	#1, FOR$IO_L_R
    012E	CALLS	#0, FOR$IO_END
									    ; 0030
    0135	RET	
									    ; 0031
    0136  L$IADO:
									    ; 0034
    0136	MOVZWL	#32768, L_BIT(R11)
									    ; 0035
    013B	MOVB	#15, INDEX(R11)
									    ; 0036
    013F	BITL	@REG(AP), #^XFFFF0000
    0147	BEQL	L$IBLA
									    ; 0037
    0149	BICL3	#^XFFFF0000, @REG(AP), -(SP)
    0152	MOVL	SP, $LOCAL+^X54(R11)
    0156	CALLG	$LOCAL+^X50(R11), BITCNT
    015E	ADDL2	#4, SP
    0161	CVTWB	R0, L(R11)
									    ; 0038
    0165	MOVAB	@LUN(AP), $LOCAL+^X5C(R11)
    016A	ADDB3	#1, L(R11), -(SP)
    016F	MOVL	SP, $LOCAL+^X60(R11)
    0173	CALLG	$LOCAL+^X58(R11), LINCHK
    017B	INCL	SP
									    ; 0039
    017D	PUSHAL	.555
    0183	CVTBL	@LUN(AP), -(SP)

DEVREG          22-Aug-1978 02:49:35	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 8   
					DEVREG.FOR.16       

    0187	CALLS	#2, FOR$WRITE_SF
    018E	PUSHAB	$LOCAL+^XC(R11)
    0191	CALLS	#1, FOR$IO_T_DS
    0198	PUSHAL	@REG(AP)
    019B	CALLS	#1, FOR$IO_L_R
    01A2	PUSHAB	$LOCAL+^X64(R11)
    01A5	CALLS	#1, FOR$IO_T_DS
    01AC	CALLS	#0, FOR$IO_END
									    ; 0040
    01B3	TSTB	L(R11)
    01B6	BNEQ	L$IBHB
    01B8	RET	
    01B9  L$IBHB:
									    ; 0041
    01B9	DECB	INDEX(R11)
									    ; 0042
    01BC	BRW	.530
									    ; 0043
    01BF  L$IBLA:
									    ; 0044
    01BF	BRB	.510
    01C1  MBAASC::
    01C1	.WORD	^M<IV,R2,R3,R4,R5,R9,R10,R11>
    01C3	MOVAL	$LOCAL+^X4, R11
    01CA	MOVQ	@REGNAM(AP), R0
    01CE	MOVL	R1, $LOCAL+^X10(R11)
    01D2	MOVW	R0, $LOCAL+^XC(R11)
    01D6	BSBW	L$IAPG
    01D9  L$IBBD:
									    ; 0046
    01D9	MOVL	#-2147483648, L_BIT(R11)
									    ; 0047
    01E0	MOVB	#31, INDEX(R11)
									    ; 0048
    01E4  .510:
									    ; 0049
    01E4	MOVAL	@REG(AP), $LOCAL+^X54(R11)
    01E9	CALLG	$LOCAL+^X50(R11), BITCNT
    01F1	CVTWB	R0, L(R11)
									    ; 0050
    01F5	TSTB	R0
    01F7	BNEQ	L$IBOD
									    ; 0051
    01F9	MOVAB	@LUN(AP), $LOCAL+^X40(R11)
    01FE	CALLG	$LOCAL+^X3C(R11), LINCHK
									    ; 0052
    0206	PUSHAL	.501
    020C	CVTBL	@LUN(AP), -(SP)
    0210	CALLS	#2, FOR$WRITE_SF
    0217	PUSHAB	$LOCAL+^XC(R11)
    021A	CALLS	#1, FOR$IO_T_DS
    0221	PUSHAL	@REG(AP)
    0224	CALLS	#1, FOR$IO_L_R
    022B	CALLS	#0, FOR$IO_END
									    ; 0053
    0232	RET	

DEVREG          22-Aug-1978 02:49:35	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 9   
					DEVREG.FOR.16       

									    ; 0054
    0233  L$IBOD:
									    ; 0055
    0233	MOVAB	@LUN(AP), $LOCAL+^X70(R11)
    0238	CALLG	$LOCAL+^X6C(R11), LINCHK
									    ; 0056
    0240	CVTBL	INDEX(R11), I(R11)
    0245	MOVAB	@$LOCAL+^X2C(R11), R10
    0249  L$IBKE:
									    ; 0057
    0249	MCOML	L_BIT(R11), R0
    024C	BICL3	R0, @REG(AP), R0
    0251	CMPL	R0, L_BIT(R11)
    0254	BNEQ	L$IBLF
									    ; 0058
    0256	PUSHAL	.502
    025C	CVTBL	@LUN(AP), -(SP)
    0260	CALLS	#2, FOR$WRITE_SF
    0267	PUSHAB	$LOCAL+^XC(R11)
    026A	CALLS	#1, FOR$IO_T_DS
    0271	PUSHAL	@REG(AP)
    0274	CALLS	#1, FOR$IO_L_R
    027B	MOVZWL	$LOCAL+^X1C(R11), R0
    027F	MULL2	I(R11), R0
    0283	MOVW	$LOCAL+^X1C(R11), $LOCAL+^X48(R11)
    0288	MOVAB	(R10)[R0], $LOCAL+^X4C(R11)
    028D	PUSHAB	$LOCAL+^X48(R11)
    0290	CALLS	#1, FOR$IO_T_DS
    0297	CALLS	#0, FOR$IO_END
									    ; 0059
    029E	CMPB	L(R11), #1
    02A2	BNEQ	L$IBBG
    02A4	RET	
    02A5  L$IBBG:
									    ; 0060
    02A5	SUBL3	#1, I(R11), R0
    02AA	CVTLB	R0, INDEX(R11)
									    ; 0061
    02AE	BRB	.530
									    ; 0062
    02B0  L$IBLF:
									    ; 0063
    02B0	CALLG	$LOCAL+^X78(R11), MTH$JISHFT
    02B8	MOVL	R0, L_BIT(R11)
									    ; 0064
    02BB	SOBGEQ	I(R11), L$IBKE
									    ; 0065
    02BF	PUSHAL	$LOCAL+^X84(R11)
    02C3	CALLS	#1, FOR$STOP
									    ; 0066
    02CA  .530:
									    ; 0067
    02CA	CVTBL	INDEX(R11), R10
    02CE	MOVAB	@$LOCAL+^X2C(R11), R9
    02D2  L$IBNH:
									    ; 0068

DEVREG          22-Aug-1978 02:49:35	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 10  
					DEVREG.FOR.16       

    02D2	CALLG	$LOCAL+^X78(R11), MTH$JISHFT
    02DA	MOVL	R0, L_BIT(R11)
									    ; 0069
    02DD	MCOML	R0, R1
    02E0	BICL3	R1, @REG(AP), R0
    02E5	CMPL	R0, L_BIT(R11)
    02E8	BNEQ	L$IBOI
    02EA	PUSHAL	.565
    02F0	CVTBL	@LUN(AP), -(SP)
    02F4	CALLS	#2, FOR$WRITE_SF
    02FB	MOVZWL	$LOCAL+^X1C(R11), R0
    02FF	MULL2	R10, R0
    0302	MOVW	$LOCAL+^X1C(R11), $LOCAL+^X48(R11)
    0307	MOVAB	(R9)[R0], $LOCAL+^X4C(R11)
    030C	PUSHAB	$LOCAL+^X48(R11)
    030F	CALLS	#1, FOR$IO_T_DS
    0316	CALLS	#0, FOR$IO_END
    031D  L$IBOI:
									    ; 0070
    031D	SOBGEQ	R10, L$IBNH
    0320	MOVL	R10, I(R11)
									    ; 0071
    0324	RET	
    0325  L$IAPG:
    0325	MOVQ	@BITNAM(AP), R0
    0329	MOVL	R1, $LOCAL+^X20(R11)
    032D	MOVW	R0, $LOCAL+^X1C(R11)
    0331	MOVAL	$LOCAL+^X1C(R11), R0
    0335	JMP	FOR$INI_DES1_R2
    033B  L$IBAA:
    033B	.WORD	^M<IV>
    033D	CVTBL	CONTROL, R0
    0344	RET	
		.END

DEVREG          22-Aug-1978 02:49:35	VAX-11 FORTRAN IV-PLUS V1.0-2      Page 11  
					DEVREG.FOR.16       

PROGRAM SECTIONS

    Name                 Bytes   Attributes

  0 $CODE                  837   PIC CON REL LCL   SHR   EXE   RD NOWRT LONG
  1 $PDATA                 102   PIC CON REL LCL   SHR NOEXE   RD NOWRT LONG
  2 $LOCAL                 140   PIC CON REL LCL NOSHR NOEXE   RD   WRT LONG


ENTRY POINTS

    Address  Type Name               Address  Type Name           

  0-00000000      DEVREG           0-000001C1      MBAASC         


VARIABLES

    Address  Type Name               Address  Type Name               Address  Type Name               Address  Type Name           

  2-00000000  L*1 CONTROL          2-00000008  I*4 I                2-00000001  L*1 INDEX            2-00000002  L*1 L              
 AP-00000004@ L*1 LUN              2-00000004  I*4 L_BIT           AP-0000000C@ I*4 REG             AP-00000008@ CHR REGNAM         


ARRAYS

    Address  Type Name		       Bytes  Dimensions

 AP-00000010@ CHR BITNAM                  **  (0:15)


LABELS

    Address   Label       Address   Label       Address   Label       Address   Label       Address   Label       Address   Label   

  1-00000027  501'      1-0000003E  502'      0-000001E4  510           **      520       0-000002CA  530           **      540     
  1-00000051  555'      1-0000005F  565'    


FUNCTIONS AND SUBROUTINES REFERENCED

BITCNT            LINCHK            MTH$ALOG10        MTH$JISHFT     


Total Space Allocated = 1079 Bytes


COMPILER OPTIONS

/CHECK=(NOBOUNDS,OVERFLOW)
/DEBUG=(NOSYMBOLS,TRACEBACK)
/OPTIMIZE  /WARNINGS  /I4  /NOD_LINES  
