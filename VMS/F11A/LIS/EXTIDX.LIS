
; Bliss-32 10.1-416	Monday 21-AUG-1978 22:57:12	DBB3:[F11A.SRC]EXTIDX.B32;8					Page 1
;
;	0001	MODULE EXTIDX (
;	0002			LANGUAGE (BLISS32),
;	0003			IDENT = 'A0007'
;	0004			) =
;	0005	BEGIN
;	0006	
;	0007	!
;	0008	! Copyright (c) 1977
;	0009	! Digital Equipment Corporation, Maynard, Massachusetts 01754
;	0010	!
;	0011	! This software is furnished  under a license for use only on a single
;	0012	! computer  system and  may be  copied only with  the inclusion of the
;	0013	! above copyright notice.  This software, or any other copies thereof,
;	0014	! may not be provided or  otherwise made available to any other person
;	0015	! except for use on such system and to one who agrees to these license
;	0016	! terms.  Title to and  ownership of the  software  shall at all times
;	0017	! remain in DEC.
;	0018	!
;	0019	! The information in this software is subject to change without notice
;	0020	! and should  not be construed  as a commitment  by Digital  Equipment
;	0021	! Corporation.
;	0022	!
;	0023	! DEC assumes  no  responsibility  for  the use or  reliability of its
;	0024	! software on equipment which is not supplied by DEC.
;	0025	
;	0026	!++
;	0027	!
;	0028	! FACILITY:  F11ACP Structure Level 1
;	0029	!
;	0030	! ABSTRACT:
;	0031	!
;	0032	!	This routine extends the volume's index file.
;	0033	!
;	0034	! ENVIRONMENT:
;	0035	!
;	0036	!	STARLET operating system, including privileged system services
;	0037	!	and internal exec routines.
;	0038	!
;	0039	!--
;	0040	!
;	0041	!
;	0042	! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  14-Apr-1977  10:44
;	0043	!
;	0044	! REVISION HISTORY:
;	0045	!
;	0046	!   Andrew C. Goldstein, 31-May-1977  10:43
;	0047	!   X0002 - Limit extension to 1000 blocks
;	0048	!
;	0049	!   Andrew C. Goldstein, 14-Jul-1977  15:42
;	0050	!   X0003 - New checksum logic
;	0051	!
;	0052	!   Andrew C. Goldstein, 22-Jul-1977  11:35
;	0053	!   X0004 - Additional arg to TURN_WINDOW
;	0054	!
;	0055	!   Andrew C. Goldstein, 15-Aug-1977  17:46

; Bliss-32 10.1-416	Monday 21-AUG-1978 22:57:12	DBB3:[F11A.SRC]EXTIDX.B32;8					Page 1-1
;
;	0056	!   X0005 - Load PRIMARY_FCB during extend
;	0057	!
;	0058	!   Andrew C. Goldstein, 12-Dec-1977  13:46
;	0059	!   X0006 - file ID interface changes
;	0060	!
;	0061	!   Andrew C. Goldstein, 10-Jul-78  14:55
;	0062	!   A0007 - Zero extend size in user status
;	0063	!
;	0064	!**
;	0065	
;	0066	
;	0067	LIBRARY 'SYS$LIBRARY:LIB.L32';
;	0068	REQUIRE 'SRC$:FCPDEF.B32';

; Bliss-32 10.1-416	Monday 21-AUG-1978 22:57:12	DBB3:[F11A.SRC]EXTIDX.B32;8					Page 2
;
;	0387	GLOBAL ROUTINE EXTEND_INDEX (FILE_NUMBER) : NOVALUE =
;	0388	
;	0389	!++
;	0390	!
;	0391	! FUNCTIONAL DESCRIPTION:
;	0392	!
;	0393	!	This routine extends the volume's index file.
;	0394	!
;	0395	! CALLING SEQUENCE:
;	0396	!	EXTEND_INDEX (ARG1)
;	0397	!
;	0398	! INPUT PARAMETERS:
;	0399	!	ARG1: next file number to be created
;	0400	!
;	0401	! IMPLICIT INPUTS:
;	0402	!	CURRENT_VCB: address of volume VCB
;	0403	!
;	0404	! OUTPUT PARAMETERS:
;	0405	!	NONE
;	0406	!
;	0407	! IMPLICIT OUTPUTS:
;	0408	!	NONE
;	0409	!
;	0410	! ROUTINE VALUE:
;	0411	!	NONE
;	0412	!
;	0413	! SIDE EFFECTS:
;	0414	!	index file extended, index file window and index file FCB modified
;	0415	!
;	0416	!--
;	0417	
;	0418	BEGIN
;	0419	
;	0420	LOCAL
;	0421		FIB		: REF BBLOCK,	! address of FIB for extend operation
;	0422		HEADER		: REF BBLOCK,	! address of index file header
;	0423		FCB		: REF BBLOCK,	! address of index file FCB
;	0424		WINDOW		: REF BBLOCK,	! address of index file window
;	0425		FREE_POINTERS,			! number of free retrieval pointers
;	0426						! in index file window
;	0427		FILES_TO_GO,			! number of files likely to be created
;	0428						! on this volume
;	0429		BLOCKS_NEEDED;			! amount to extend index file by
;	0430	
;	0431	EXTERNAL
;	0432		CLEANUP_FLAGS	: BITVECTOR,	! cleanup action flags
;	0433		USER_STATUS	: VECTOR,	! I/O status block of user
;	0434		CURRENT_VCB	: REF BBLOCK,	! VCB of volume in process
;	0435		PRIMARY_FCB	: REF BBLOCK,	! address of FCB in process
;	0436		CURRENT_WINDOW	: REF BBLOCK,	! address of window in process
;	0437		CURRENT_FIB	: REF BBLOCK,	! address of FIB of current operation
;	0438		SECOND_FIB	: BBLOCK,	! FIB for secondary operation
;	0439		CONTEXT_START,			! context area
;	0440		CONTEXT_SAVE;			! context save area
;	0441	

; Bliss-32 10.1-416	Monday 21-AUG-1978 22:57:12	DBB3:[F11A.SRC]EXTIDX.B32;8					Page 2-1
;
;	0442	EXTERNAL LITERAL
;	0443		CONTEXT_SIZE;			! length of context area
;	0444	
;	0445	EXTERNAL ROUTINE
;	0446		READ_HEADER,			! read file header
;	0447		TURN_WINDOW,			! update file window
;	0448		EXTEND,				! extend a file
;	0449		CHECKSUM,			! compute file header checksum
;	0450		WRITE_HEADER,			! write back file header
;	0451		INIT_FCB;			! update file control block
;	0452	
;	0453	
;	0454	! Extending the index file is a secondary operation, so we must save away the
;	0455	! primary context, and then set up the appropriate context for this operation.
;	0456	!
;	0457	
;	0458	CH$MOVE (CONTEXT_SIZE, CONTEXT_START, CONTEXT_SAVE);
;	0459	CH$FILL (0, CONTEXT_SIZE, CONTEXT_START);
;	0460	CURRENT_FIB = FIB = SECOND_FIB;
;	0461	CH$FILL (0, FIB$C_LENGTH, .FIB);
;	0462	FIB[FIB$W_FID_NUM] = 1;
;	0463	FIB[FIB$W_FID_SEQ] = 1;
;	0464	
;	0465	PRIMARY_FCB = FCB = .CURRENT_VCB[VCB$L_FCBFL];
;	0466	CURRENT_WINDOW = WINDOW = .FCB[FCB$L_WLFL];
;	0467	
;	0468	! Now read the index file header and turn the index file window to VBN 3.
;	0469	! Then compute the number of free retrieval pointers in the index file window,
;	0470	! discounting pointers (if any) that only map the boot and home block.
;	0471	!
;	0472	
;	0473	HEADER = READ_HEADER (0, .FCB);
;	0474	KERNEL_CALL (TURN_WINDOW, .WINDOW, .HEADER, 3, 1);
;	0475	
;	0476	FREE_POINTERS = (.WINDOW[WCB$W_SIZE]-WCB$C_LENGTH)/6 - .WINDOW[WCB$W_NMAP];
;	0477	IF .WINDOW[WCB$L_STVBN] + .WINDOW[WCB$W_P1_COUNT] LEQU 3
;	0478	THEN
;	0479	    BEGIN
;	0480	    FREE_POINTERS = .FREE_POINTERS + 1;
;	0481	    IF .WINDOW[WCB$L_STVBN] + .WINDOW[WCB$W_P1_COUNT] + .WINDOW[WCB$W_P2_COUNT] LEQU 3
;	0482	    THEN FREE_POINTERS = .FREE_POINTERS + 1;
;	0483	    END;
;	0484	IF .FREE_POINTERS LEQ 0 THEN FREE_POINTERS = 1;
;	0485	
;	0486	! Compute the number of files likely to still be created on the volume.  This
;	0487	! is the minimum of the number permitted minus the current number and a
;	0488	! fraction of the number of free blocks on the volume. The amount to extend
;	0489	! the index file by is this quantity divided by the number of available
;	0490	! retrieval pointers in the index file window.
;	0491	!
;	0492	
;	0493	FILES_TO_GO = MINU (.CURRENT_VCB[VCB$L_MAXFILES] - .FILE_NUMBER + 1,
;	0494			.CURRENT_VCB[VCB$L_FREE] / .CURRENT_VCB[VCB$W_CLUSTER] / 4);
;	0495	
;	0496	BLOCKS_NEEDED = MINU (.FILES_TO_GO / .FREE_POINTERS, 1000);

; Bliss-32 10.1-416	Monday 21-AUG-1978 22:57:12	DBB3:[F11A.SRC]EXTIDX.B32;8					Page 2-2
;
;	0497	
;	0498	! Build the extend control in the FIB and call the EXTEND routine.
;	0499	!
;	0500	
;	0501	FIB[FIB$L_EXSZ] = .BLOCKS_NEEDED;
;	0502	FIB[FIB$V_ALCON] = 1;
;	0503	FIB[FIB$V_ALCONB] = 1;
;	0504	FIB[FIB$V_ALDEF] = 1;
;	0505	FIB[FIB$V_NOHDREXT] = 1;
;	0506	
;	0507	EXTEND (.FIB, .HEADER);
;	0508	
;	0509	! Now write the header, update the FCB, and restore the primary context.
;	0510	!
;	0511	
;	0512	CHECKSUM (.HEADER);
;	0513	WRITE_HEADER ();
;	0514	KERNEL_CALL (INIT_FCB, .FCB, .HEADER);
;	0515	
;	0516	CH$MOVE (CONTEXT_SIZE, CONTEXT_SAVE, CONTEXT_START);
;	0517	CONTEXT_SAVE = 0;
;	0518	USER_STATUS[1] = 0;
;	0519	
;	0520	END;					! end of routine EXTEND_INDEX


							    .TITLE  EXTIDX
							    .IDENT  \A0007\

							    .EXTRN  CLEANUP_FLAGS, USER_STATUS, CURRENT_VCB, PRIMARY_FCB
							    .EXTRN  CURRENT_WINDOW, CURRENT_FIB, SECOND_FIB, CONTEXT_START
							    .EXTRN  CONTEXT_SAVE, CONTEXT_SIZE, READ_HEADER, TURN_WINDOW
							    .EXTRN  EXTEND, CHECKSUM, WRITE_HEADER, INIT_FCB, SYS$CMKRNL

							    .PSECT  $CODE$,NOWRT,2

					 07FC 00000 	    .ENTRY  EXTEND_INDEX, Save R2,R3,R4,R5,R6,R7,R8,R9,R10	      ; 0387
		         5A 	0000G  CF  9E 00002 	    MOVAB   CONTEXT_SAVE, R10					      ;
		         59 	0000G  CF  9E 00007 	    MOVAB   CONTEXT_START, R9					      ;
		         58 00000000G  9F  9E 0000C 	    MOVAB   @#SYS$CMKRNL, R8					      ;
		         57 00000000G  8F  D0 00013 	    MOVL    #CONTEXT_SIZE, R7					      ;
	   6A 	         69 	       57  28 0001A 	    MOVC3   R7, CONTEXT_START, CONTEXT_SAVE			      ; 0458
	   00 	         6E 	       00  2C 0001E 	    MOVC5   #0, (SP), #0, R7, CONTEXT_START			      ; 0459
		         69 	       57     00022									      ;
		         56 	0000G  CF  9E 00024 	    MOVAB   SECOND_FIB, FIB					      ; 0460
		  0000G  CF	       56  D0 00029 	    MOVL    FIB, CURRENT_FIB					      ;
	   00 	         6E 	       00  2C 0002E 	    MOVC5   #0, (SP), #0, #44, (FIB)				      ; 0461
		         66 	       2C     00032									      ;
		    04   A6 00010001   8F  D0 00034 	    MOVL    #65537, 4(FIB)					      ; 0462
		         54 	0000G  DF  D0 0003C 	    MOVL    @CURRENT_VCB, FCB					      ; 0465
		  0000G  CF	       54  D0 00041 	    MOVL    FCB, PRIMARY_FCB					      ;
		         52 	  10   A4  D0 00046 	    MOVL    16(FCB), WINDOW					      ; 0466
		  0000G  CF	       52  D0 0004A 	    MOVL    WINDOW, CURRENT_WINDOW				      ;
				       54  DD 0004F 	    PUSHL   FCB							      ; 0473
				       7E  D4 00051 	    CLRL    -(SP)						      ;

; Bliss-32 10.1-416	Monday 21-AUG-1978 22:57:12	DBB3:[F11A.SRC]EXTIDX.B32;8					Page 2-3
;
		  0000G  CF	       02  FB 00053 	    CALLS   #2, READ_HEADER					      ;
		         55 	       50  D0 00058 	    MOVL    R0, HEADER						      ;
				       01  DD 0005B 	    PUSHL   #1							      ; 0474
				       03  DD 0005D 	    PUSHL   #3							      ;
				       24  BB 0005F 	    PUSHR   #^M<R2,R5>						      ;
				       04  DD 00061 	    PUSHL   #4							      ;
				       5E  DD 00063 	    PUSHL   SP							      ;
				0000G  CF  9F 00065 	    PUSHAB  TURN_WINDOW						      ;
		         68 	       07  FB 00069 	    CALLS   #7, SYS$CMKRNL					      ;
		         50 	  08   A2  3C 0006C 	    MOVZWL  8(WINDOW), R0					      ; 0476
		         50 	       24  C2 00070 	    SUBL2   #36, R0						      ;
		         50 	       06  C6 00073 	    DIVL2   #6, R0						      ;
		         53 	  16   A2  3C 00076 	    MOVZWL  22(WINDOW), FREE_POINTERS				      ;
	   53 	         50 	       53  C3 0007A 	    SUBL3   FREE_POINTERS, R0, FREE_POINTERS			      ;
		         50 	  24   A2  3C 0007E 	    MOVZWL  36(WINDOW), R0					      ; 0477
		         50 	  20   A2  C0 00082 	    ADDL2   32(WINDOW), R0					      ;
		         03 	       50  D1 00086 	    CMPL    R0, #3						      ;
				       10  1A 00089 	    BGTRU   1$							      ;
				       53  D6 0008B 	    INCL    FREE_POINTERS					      ; 0480
		         51 	  2A   A2  3C 0008D 	    MOVZWL  42(WINDOW), R1					      ; 0481
		         50 	       51  C0 00091 	    ADDL2   R1, R0						      ;
		         03 	       50  D1 00094 	    CMPL    R0, #3						      ;
				       02  1A 00097 	    BGTRU   1$							      ;
				       53  D6 00099 	    INCL    FREE_POINTERS					      ; 0482
				       53  D5 0009B 1$:     TSTL    FREE_POINTERS					      ; 0484
				       03  14 0009D 	    BGTR    2$							      ;
		         53 	       01  D0 0009F 	    MOVL    #1, FREE_POINTERS					      ;
		         50 	0000G  CF  D0 000A2 2$:     MOVL    CURRENT_VCB, R0					      ; 0493
	   51 	    44   A0	  04   AC  C3 000A7 	    SUBL3   FILE_NUMBER, 68(R0), R1				      ;
				       51  D6 000AD 	    INCL    R1							      ;
		         52 	  3C   A0  3C 000AF 	    MOVZWL  60(R0), R2						      ; 0494
	   50 	    40   A0	       52  C7 000B3 	    DIVL3   R2, 64(R0), R0					      ;
		         50 	       04  C6 000B8 	    DIVL2   #4, R0						      ;
		         50 	       51  D1 000BB 	    CMPL    R1, R0						      ; 0493
				       03  1B 000BE 	    BLEQU   3$							      ;
		         51 	       50  D0 000C0 	    MOVL    R0, R1						      ;
		         50 	       51  D0 000C3 3$:     MOVL    R1, FILES_TO_GO					      ;
		         50 	       53  C6 000C6 	    DIVL2   FREE_POINTERS, R0					      ; 0496
	      000003E8   8F	       50  D1 000C9 	    CMPL    R0, #1000						      ;
				       05  1B 000D0 	    BLEQU   4$							      ;
		         50 	03E8   8F  3C 000D2 	    MOVZWL  #1000, R0						      ;
		    18   A6	       50  D0 000D7 4$:     MOVL    BLOCKS_NEEDED, 24(FIB)				      ; 0501
		    16   A6	020B   8F  A8 000DB 	    BISW2   #523, 22(FIB)					      ; 0505
				       55  DD 000E1 	    PUSHL   HEADER						      ; 0507
				       56  DD 000E3 	    PUSHL   FIB							      ;
		  0000G  CF	       02  FB 000E5 	    CALLS   #2, EXTEND						      ;
				       55  DD 000EA 	    PUSHL   HEADER						      ; 0512
		  0000G  CF	       01  FB 000EC 	    CALLS   #1, CHECKSUM					      ;
		  0000G  CF	       00  FB 000F1 	    CALLS   #0, WRITE_HEADER					      ; 0513
				       30  BB 000F6 	    PUSHR   #^M<R4,R5>						      ; 0514
				       02  DD 000F8 	    PUSHL   #2							      ;
				       5E  DD 000FA 	    PUSHL   SP							      ;
				0000G  CF  9F 000FC 	    PUSHAB  INIT_FCB						      ;
		         68 	       05  FB 00100 	    CALLS   #5, SYS$CMKRNL					      ;
	   69 	         6A 	       57  28 00103 	    MOVC3   R7, CONTEXT_SAVE, CONTEXT_START			      ; 0516

; Bliss-32 10.1-416	Monday 21-AUG-1978 22:57:12	DBB3:[F11A.SRC]EXTIDX.B32;8					Page 2-4
;
				       6A  D4 00107 	    CLRL    CONTEXT_SAVE					      ; 0517
				0000G  CF  D4 00109 	    CLRL    USER_STATUS+4					      ; 0518
					   04 0010D 	    RET     							      ; 0387

; Routine Size:  270 bytes


;	0521	
;	0522	END
;	0523	ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $CODE$         	   270  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]LIB.L32;1		      5582        20         0       232





; Size:		270 code + 0 data bytes
; Run Time:	00:06.9
; Elapsed Time:	00:14.5
; Memory Used:	306 pages
; Compilation Complete
