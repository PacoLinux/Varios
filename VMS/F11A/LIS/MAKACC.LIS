
; Bliss-32 10.1-416	Monday 21-AUG-1978 22:59:43	DBB3:[F11A.SRC]MAKACC.B32;8					Page 1
;
;	0001	MODULE MAKACC (
;	0002			LANGUAGE (BLISS32),
;	0003			IDENT = 'A0003'
;	0004			) =
;	0005	BEGIN
;	0006	
;	0007	!
;	0008	! Copyright (c) 1977
;	0009	! Digital Equipment Corporation, Maynard, Massachusetts 01754
;	0010	!
;	0011	! This software is furnished  under a license for use only on a single
;	0012	! computer  system and  may be  copied only with  the inclusion of the
;	0013	! above copyright notice.  This software, or any other copies thereof,
;	0014	! may not be provided or  otherwise made available to any other person
;	0015	! except for use on such system and to one who agrees to these license
;	0016	! terms.  Title to and  ownership of the  software  shall at all times
;	0017	! remain in DEC.
;	0018	!
;	0019	! The information in this software is subject to change without notice
;	0020	! and should  not be construed  as a commitment  by Digital  Equipment
;	0021	! Corporation.
;	0022	!
;	0023	! DEC assumes  no  responsibility  for  the use or  reliability of its
;	0024	! software on equipment which is not supplied by DEC.
;	0025	
;	0026	!++
;	0027	!
;	0028	! FACILITY:  F11ACP Structure Level 1
;	0029	!
;	0030	! ABSTRACT:
;	0031	!
;	0032	!	This routine makes the necessary hookups in the I/O database to
;	0033	!	reflect a new file access.
;	0034	! ENVIRONMENT:
;	0035	!
;	0036	!	STARLET operating system, including privileged system services
;	0037	!	and internal exec routines. This routine must be called
;	0038	!	in kernel mode.
;	0039	!
;	0040	!--
;	0041	!
;	0042	!
;	0043	! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  20-Dec-1976  17:28
;	0044	!
;	0045	! REVISION HISTORY:
;	0046	!
;	0047	!   Andrew C. Goldstein, 14-Dec-1977  12:54
;	0048	!   X0002 - Maintain open file count in system data base
;	0049	!
;	0050	!   Andrew C. Goldstein, 21-Jun-78  18:27
;	0051	!   A0003 - Add truncate interlock
;	0052	!
;	0053	!**
;	0054	
;	0055	

; Bliss-32 10.1-416	Monday 21-AUG-1978 22:59:43	DBB3:[F11A.SRC]MAKACC.B32;8					Page 1-1
;
;	0056	LIBRARY 'SYS$LIBRARY:LIB.L32';
;	0057	REQUIRE 'SRC$:FCPDEF.B32';

; Bliss-32 10.1-416	Monday 21-AUG-1978 22:59:43	DBB3:[F11A.SRC]MAKACC.B32;8					Page 2
;
;	0376	GLOBAL ROUTINE MAKE_ACCESS (FCB, WINDOW, ABD) : NOVALUE =
;	0377	
;	0378	!++
;	0379	!
;	0380	! FUNCTIONAL DESCRIPTION:
;	0381	!
;	0382	!	This routine makes the necessary hookups in the I/O database to
;	0383	!	reflect a new file access.
;	0384	!
;	0385	! CALLING SEQUENCE:
;	0386	!	MAKE_ACCESS (ARG1, ARG2, ARG3)
;	0387	!
;	0388	! INPUT PARAMETERS:
;	0389	!	ARG1: address of FCB to access
;	0390	!	ARG2: address of window to link up
;	0391	!	ARG3: address of buffer descriptors
;	0392	!
;	0393	! IMPLICIT INPUTS:
;	0394	!	CURRENT_VCB: VCB of volume in process
;	0395	!
;	0396	! OUTPUT PARAMETERS:
;	0397	!	NONE
;	0398	!
;	0399	! IMPLICIT OUTPUTS:
;	0400	!	NONE
;	0401	!
;	0402	! ROUTINE VALUE:
;	0403	!	NONE
;	0404	!
;	0405	! SIDE EFFECTS:
;	0406	!	VCB transaction count bumped, access counts in FCB adjusted,
;	0407	!	FCB and window hooked up.
;	0408	!
;	0409	!--
;	0410	
;	0411	BEGIN
;	0412	
;	0413	MAP
;	0414		FCB		: REF BBLOCK,	! FCB arg
;	0415		WINDOW		: REF BBLOCK,	! window arg
;	0416		ABD		: REF BBLOCKVECTOR [,ABD$C_LENGTH];
;	0417						! buffer descriptor arg
;	0418	
;	0419	EXTERNAL
;	0420		CLEANUP_FLAGS	: BITVECTOR,	! cleanup action flags
;	0421		CURRENT_VCB	: REF BBLOCK,	! VCB
;	0422		PMS$GL_OPEN	: ADDRESSING_MODE (ABSOLUTE),
;	0423						! system count of currently open files
;	0424		PMS$GL_OPENS	: ADDRESSING_MODE (ABSOLUTE);
;	0425						! system count of files opened
;	0426	
;	0427	! If the access count in the FCB is zero, hook it into the FCB list,
;	0428	! since it is not there yet. If, however, the directory LRU
;	0429	! bit is set, the FCB is already in the list. Then clear the bit and
;	0430	! credit an entry to the LRU count.

; Bliss-32 10.1-416	Monday 21-AUG-1978 22:59:43	DBB3:[F11A.SRC]MAKACC.B32;8					Page 2-1
;
;	0431	!
;	0432	
;	0433	IF .FCB[FCB$W_ACNT] EQL 0
;	0434	THEN
;	0435	    BEGIN
;	0436	    IF NOT .FCB[FCB$V_DIR]
;	0437	    THEN INSQUE (.FCB, .CURRENT_VCB[VCB$L_FCBBL])
;	0438	    ELSE
;	0439		BEGIN
;	0440		FCB[FCB$V_DIR] = 0;
;	0441		CURRENT_VCB[VCB$B_LRU_LIM] = .CURRENT_VCB[VCB$B_LRU_LIM] + 1;
;	0442		END;
;	0443	    END;
;	0444	
;	0445	! Now hook the window onto the FCB and adjust the access counts
;	0446	! according to the access control bits in the window.
;	0447	!
;	0448	
;	0449	INSQUE (.WINDOW, .FCB[FCB$L_WLBL]);
;	0450	FCB[FCB$W_ACNT] = .FCB[FCB$W_ACNT] + 1;	! bump access count
;	0451	
;	0452	IF .WINDOW[WCB$V_NOREAD]
;	0453	    THEN FCB[FCB$V_EXCL] = 1;		! set exclusive access
;	0454	
;	0455	IF .WINDOW[WCB$V_NOWRITE]
;	0456	    THEN FCB[FCB$W_LCNT] = .FCB[FCB$W_LCNT] + 1; ! no writers
;	0457	
;	0458	IF .WINDOW[WCB$V_NOTRUNC]
;	0459	    THEN FCB[FCB$W_TCNT] = .FCB[FCB$W_TCNT] + 1; ! no truncates
;	0460	
;	0461	! For a write access, bump the writer count. If this is the
;	0462	! first write, and the file is the index file or the storage map, set
;	0463	! the appropriate flag in the VCB.
;	0464	!
;	0465	
;	0466	IF .WINDOW[WCB$V_WRITE]
;	0467	THEN
;	0468	    BEGIN
;	0469	    IF .FCB[FCB$W_WCNT] EQL 0
;	0470	    THEN
;	0471		BEGIN
;	0472		IF .FCB[FCB$W_FID_NUM] EQL 1
;	0473		    THEN CURRENT_VCB[VCB$V_WRITE_IF] = 1;
;	0474		IF .FCB[FCB$W_FID_NUM] EQL 2
;	0475		    THEN CURRENT_VCB[VCB$V_WRITE_SM] = 1;
;	0476		END;
;	0477	    FCB[FCB$W_WCNT] = .FCB[FCB$W_WCNT] + 1;
;	0478	    END;
;	0479	
;	0480	! Count the access in the volume transaction count and return
;	0481	! the window address for the user's CCB.
;	0482	!
;	0483	
;	0484	PMS$GL_OPEN = .PMS$GL_OPEN + 1;		! bump open file count
;	0485	PMS$GL_OPENS = .PMS$GL_OPENS + 1;	! bump count of opens

; Bliss-32 10.1-416	Monday 21-AUG-1978 22:59:43	DBB3:[F11A.SRC]MAKACC.B32;8					Page 2-2
;
;	0486	CURRENT_VCB[VCB$W_TRANS] = .CURRENT_VCB[VCB$W_TRANS] + 1;
;	0487	
;	0488	ABD[ABD$C_WINDOW, ABD$W_COUNT] = 4;	! enable write-back
;	0489	.ABD[ABD$C_WINDOW, ABD$W_TEXT] + ABD[ABD$C_WINDOW, ABD$W_TEXT] + 1 = .WINDOW;
;	0490						! put window address in buffer text
;	0491	
;	0492	! Mark the access complete in the cleanup action flags.
;	0493	!
;	0494	
;	0495	CLEANUP_FLAGS[CLF_DEACCESS] = 1;
;	0496	
;	0497	END;					! end of routine MAKE_ACCESS


							    .TITLE  MAKACC
							    .IDENT  \A0003\

							    .EXTRN  CLEANUP_FLAGS, CURRENT_VCB, PMS$GL_OPEN, PMS$GL_OPENS

							    .PSECT  $CODE$,NOWRT,2

					 000C 00000 	    .ENTRY  MAKE_ACCESS, Save R2,R3				      ; 0376
		         53 	0000G  CF  9E 00002 	    MOVAB   CURRENT_VCB, R3					      ;
		         51 	  04   AC  D0 00007 	    MOVL    FCB, R1						      ; 0433
				  18   A1  B5 0000B 	    TSTW    24(R1)						      ;
				       14  12 0000E 	    BNEQ    2$							      ;
		         50 	       63  D0 00010 	    MOVL    CURRENT_VCB, R0					      ; 0437
		         06 	  1E   A1  E8 00013 	    BLBS    30(R1), 1$						      ; 0436
		    04   B0	       61  0E 00017 	    INSQUE  (R1), @4(R0)					      ; 0437
				       07  11 0001B 	    BRB     2$							      ; 0436
		    1E   A1	       01  8A 0001D 1$:     BICB2   #1, 30(R1)						      ; 0440
				  49   A0  96 00021 	    INCB    73(R0)						      ; 0441
		         50 	  04   AC  D0 00024 2$:     MOVL    FCB, R0						      ; 0449
		    14   B0	  08   BC  0E 00028 	    INSQUE  @WINDOW, @20(R0)					      ;
		         50 	  04   AC  D0 0002D 	    MOVL    FCB, R0						      ; 0450
				  18   A0  B6 00031 	    INCW    24(R0)						      ;
		         52 	  08   AC  D0 00034 	    MOVL    WINDOW, R2						      ; 0452
	   04 	    15   A2	       02  E1 00038 	    BBC     #2, 21(R2), 3$					      ;
		    1E   A0	       08  88 0003D 	    BISB2   #8, 30(R0)						      ; 0453
		         03 	  14   A2  E9 00041 3$:     BLBC    20(R2), 4$						      ; 0455
				  1A   A0  B6 00045 	    INCW    26(R0)						      ; 0456
	   03 	    15   A2	       03  E1 00048 4$:     BBC     #3, 21(R2), 5$					      ; 0458
				  46   A0  B6 0004D 	    INCW    70(R0)						      ; 0459
	   22 	    0B   A2	       01  E1 00050 5$:     BBC     #1, 11(R2), 8$					      ; 0466
				  1C   A0  B5 00055 	    TSTW    28(R0)						      ; 0469
				       1A  12 00058 	    BNEQ    7$							      ;
		         01 	  20   A0  B1 0005A 	    CMPW    32(R0), #1						      ; 0472
				       07  12 0005E 	    BNEQ    6$							      ;
		         51 	       63  D0 00060 	    MOVL    CURRENT_VCB, R1					      ; 0473
		    0B   A1	       01  88 00063 	    BISB2   #1, 11(R1)						      ;
		         02 	  20   A0  B1 00067 6$:     CMPW    32(R0), #2						      ; 0474
				       07  12 0006B 	    BNEQ    7$							      ;
		         51 	       63  D0 0006D 	    MOVL    CURRENT_VCB, R1					      ; 0475
		    0B   A1	       02  88 00070 	    BISB2   #2, 11(R1)						      ;
				  1C   A0  B6 00074 7$:     INCW    28(R0)						      ; 0477

; Bliss-32 10.1-416	Monday 21-AUG-1978 22:59:43	DBB3:[F11A.SRC]MAKACC.B32;8					Page 2-3
;
			    00000000G  9F  D6 00077 8$:     INCL    @#PMS$GL_OPEN					      ; 0484
			    00000000G  9F  D6 0007D 	    INCL    @#PMS$GL_OPENS					      ; 0485
		         50 	       63  D0 00083 	    MOVL    CURRENT_VCB, R0					      ; 0486
				  0C   A0  B6 00086 	    INCW    12(R0)						      ;
		         51 	  0C   AC  D0 00089 	    MOVL    ABD, R1						      ; 0488
		    02   A1	       04  B0 0008D 	    MOVW    #4, 2(R1)						      ;
		         50 	       61  3C 00091 	    MOVZWL  (R1), R0						      ; 0489
				  01 A140  9F 00094 	    PUSHAB  1(R1)[R0]						      ;
		         9E 	       52  D0 00098 	    MOVL    R2, @(SP)+						      ;
		  0000G  CF	       01  88 0009B 	    BISB2   #1, CLEANUP_FLAGS+2					      ; 0495
					   04 000A0 	    RET     							      ; 0376

; Routine Size:  161 bytes


;	0498	
;	0499	END
;	0500	ELUDOM






;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $CODE$         	   161  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]LIB.L32;1		      5582        22         0       239





; Size:		161 code + 0 data bytes
; Run Time:	00:06.2
; Elapsed Time:	00:14.0
; Memory Used:	292 pages
; Compilation Complete
