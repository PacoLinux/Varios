
; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 1
; Digital Equipment Corporation
;
;	0001	MODULE ININDX (
;	0002			LANGUAGE (BLISS32),
;	0003			IDENT = 'X0005A'
;	0004			) =
;	0005	BEGIN
;	0006	
;	0007	!
;	0008	! Copyright (c) 1977
;	0009	! Digital Equipment Corporation, Maynard, Massachusetts 01754
;	0010	!
;	0011	! This software is furnished  under a license for use only on a single
;	0012	! computer  system and  may be  copied only with  the inclusion of the
;	0013	! above copyright notice.  This software, or any other copies thereof,
;	0014	! may not be provided or  otherwise made available to any other person
;	0015	! except for use on such system and to one who agrees to these license
;	0016	! terms.  Title to and  ownership of the  software  shall at all times
;	0017	! remain in DEC.
;	0018	!
;	0019	! The information in this software is subject to change without notice
;	0020	! and should  not be construed  as a commitment  by Digital  Equipment
;	0021	! Corporation.
;	0022	!
;	0023	! DEC assumes  no  responsibility  for  the use or  reliability of its
;	0024	! software on equipment which is not supplied by DEC.
;	0025	
;	0026	!++
;	0027	!
;	0028	! FACILITY:  INIT Utility Structure Level 1
;	0029	!
;	0030	! ABSTRACT:
;	0031	!
;	0032	!	This module contains the routines that initialize the contents
;	0033	!	of a disk's index file: boot and home blocks, bitmap, and the
;	0034	!	initial file headers.
;	0035	!
;	0036	! ENVIRONMENT:
;	0037	!
;	0038	!	STARLET operating system, including privileged system services
;	0039	!	and internal exec routines.
;	0040	!
;	0041	!--
;	0042	!
;	0043	!
;	0044	! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  14-Nov-1977  10:16
;	0045	!
;	0046	! REVISION HISTORY:
;	0047	!
;	0048	!   Andrew C. Goldstein, 3-Jan-1978  21:58
;	0049	!   X0002 - File header bug fixes
;	0050	!
;	0051	!   Andrew C. Goldstein, 22-Jan-1978  18:18
;	0052	!   X0003 - Change file name in header to ASCII
;	0053	!
;	0054	!   Andrew C. Goldstein, 16-Feb-1978  16:26
;	0055	!   X0004 - Pad format name to 12 characters

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 1-1
; Digital Equipment Corporation
;
;	0056	!
;	0057	!   Andrew C. Goldstein, 23-May-78  14:38
;	0058	!   X0005 - Add Structure Level 2 reserved files
;	0059	!
;	0060	!**
;	0061	
;	0062	
;	0063	LIBRARY 'SYS$LIBRARY:LIB.L32';
;	0064	REQUIRE 'SRC$:INIDEF.B32';
;	0326	REQUIRE 'LIBD$:[VMSLIB.OBJ]INITMSG.B32';
;	0386	
;	0387	
;	0388	FORWARD ROUTINE
;	0389		INIT_INDEX	: NOVALUE,	! main index file initialization
;	0390		WRITE_HOMEBLOCK	: NOVALUE,	! checksum and write home block
;	0391		MAKE_POINTER	: NOVALUE;	! construct retrieval pointer

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 2
; Digital Equipment Corporation
;
;	0392	!+
;	0393	!
;	0394	! Own storage.
;	0395	!
;	0396	! Boot program. The following PDP-11 program will type out the attached
;	0397	! message when the volume is booted on a PDP-11, informing the user that
;	0398	! this is not a system disk.
;	0399	!
;	0400	!-
;	0401	
;	0402	BIND
;	0403		BOOT_PROGRAM	= UPLIT WORD (
;	0404	
;	0405	%O'000240',		     !  BOOTBK:	NOP			; NOP IDENTIFIES BOOT BLOCK
;	0406	%O'012706',  %O'001000',     !		MOV	#1000,SP	; SET TEMP STACK
;	0407	%O'010700',		     !	 	MOV	PC,R0		; SET ADDRESS
;	0408	%O'062700',  %O'000036',     !		ADD	#BOTMSG-.,R0	; OF MESSAGE
;	0409	%O'112001',		     !  10$:	MOVB	(R0)+,R1	; GET NEXT CHARACTER
;	0410	%O'001403',		     !	 	BEQ	20$		; END
;	0411	%O'004767',  %O'000006',     !		CALL	TYPIT		; NO, PRINT IT
;	0412	%O'000773',		     !	 	BR	10$		; LOOP FOR NEXT CHARACTER
;	0413	%O'000005',		     !  20$:	RESET			;
;	0414	%O'000000',		     !	 	HALT			; HALT
;	0415				     !
;	0416				     !
;	0417	%O'110137',  %O'177566',     ! 	TYPIT:	MOVB	R1,@#TPB	; PRINT CHARACTER
;	0418	%O'105737',  %O'177564',     ! 	10$:	TSTB	@#TPS		; DONE?
;	0419	%O'100375',		     !	 	BPL	10$		; NO, WAIT
;	0420	%O'000207'		     !		RETURN			;
;	0421				     !
;	0422				     !
;	0423				     !	BOTMSG:
;	0424	
;	0425				);
;	0426	
;	0427	LITERAL
;	0428		BOOT_PROG_LEN	= 38;
;	0429	
;	0430	!+
;	0431	!
;	0432	! Boot message. Contains the volume label.
;	0433	!
;	0434	!-
;	0435	
;	0436	BIND
;	0437		BOOT_MESSAGE	= UPLIT BYTE (13, 10, 10,
;	0438				  '             is not a system disk', 13, 10, 10, 0);
;	0439	
;	0440	LITERAL
;	0441		BOOT_MESG_LEN	= 40;
;	0442	
;	0443	MACRO
;	0444		BTB$T_VOLNAME	= 38, 0, 0, 0%;	! volume label in boot block message
;	0445	
;	0446	!

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 2-1
; Digital Equipment Corporation
;
;	0447	! Volume format name string
;	0448	!
;	0449	
;	0450	BIND
;	0451		FORMAT_NAME	= UPLIT BYTE ('DECFILE11B  ');
;	0452	
;	0453	!+
;	0454	!
;	0455	! Initial file header. The core image file is used since it is the first
;	0456	! one written.
;	0457	!
;	0458	!-
;	0459	
;	0460	BIND
;	0461		INITIAL_HEADER	= UPLIT (
;	0462							! HEADER area
;	0463		BYTE (FH2$C_LENGTH / 2),		! ident area offset
;	0464		BYTE ((FH2$C_LENGTH + FI2$C_LENGTH)/2),	! map area offset
;	0465		BYTE ($BYTEOFFSET (FH2$W_CHECKSUM)/2),	! access control list offset
;	0466		BYTE ($BYTEOFFSET (FH2$W_CHECKSUM)/2),	! reserved area offset
;	0467		WORD (0),				! file segment number
;	0468		BYTE (1, 2),				! structure version and level
;	0469		WORD (5, 5, 0),				! file ID
;	0470		WORD (0, 0, 0),				! extension file ID
;	0471		BYTE (FAT$C_FIXED),			! fixed length record type
;	0472		BYTE (0),				! no record attributes
;	0473		WORD (512),				! record size
;	0474		LONG (0, 1^16),				! HIBLK and EFBLK
;	0475		WORD (0),				! EOF byte offset
;	0476		BYTE (0, 0),				! bucket size & VFC length
;	0477		WORD (512),				! maximum record length
;	0478		WORD (0),				! default extend size
;	0479		WORD (0, 0, 0, 0, 0, 0),		! unused record attributes
;	0480		LONG (0),				! file characteristics
;	0481		WORD (0),				! spare
;	0482		BYTE (0, 0),				! mapwords in use & access mode
;	0483		LONG (0),				! file owner UIC
;	0484		WORD (0, 0),				! file & record protection
;	0485		LONG (0, 0),				! security mask and limit
;	0486	
;	0487							! IDENT area
;	0488		BYTE ('CORIMG.SYS;1        '),		! file name, type and version
;	0489		WORD (1),				! revision number
;	0490		LONG (0, 0, 0, 0, 0, 0, 0, 0)		! dates
;	0491	
;	0492		);

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 3
; Digital Equipment Corporation
;
;	0493	GLOBAL ROUTINE INIT_INDEX : NOVALUE =
;	0494	
;	0495	!++
;	0496	!
;	0497	! FUNCTIONAL DESCRIPTION:
;	0498	!
;	0499	!	This routine initializes the contents of the disk's index file.
;	0500	!	It writes a dummy boot block, the home blocks, index file bitmap,
;	0501	!	and the initial headers.
;	0502	!
;	0503	!
;	0504	! CALLING SEQUENCE:
;	0505	!	INIT_INDEX ()
;	0506	!
;	0507	! INPUT PARAMETERS:
;	0508	!	NONE
;	0509	!
;	0510	! IMPLICIT INPUTS:
;	0511	!	parser data base
;	0512	!	allocation table in INIDSK
;	0513	!
;	0514	! OUTPUT PARAMETERS:
;	0515	!	NONE
;	0516	!
;	0517	! IMPLICIT OUTPUTS:
;	0518	!	NONE
;	0519	!
;	0520	! ROUTINE VALUE:
;	0521	!	NONE
;	0522	!
;	0523	! SIDE EFFECTS:
;	0524	!	index file blocks written
;	0525	!
;	0526	!--
;	0527	
;	0528	BEGIN
;	0529	
;	0530	BUILTIN
;	0531		ROT;
;	0532	
;	0533	LOCAL
;	0534		DATE_TIME	: VECTOR [2],	! buffer for current date/time
;	0535		LBN,				! current LBN
;	0536		MAP_COUNT,			! count field of map pointer
;	0537		MAP_LBN;			! start LBN of current map pointer
;	0538	
;	0539	EXTERNAL
;	0540		INIT_OPTIONS	: BITVECTOR,	! command options
;	0541		BUFFER		: BBLOCK,	! I/O buffer
;	0542		VOLUME_SIZE,			! size of volume rounded to next cluster
;	0543		PROTECTION,			! volume protection
;	0544		FILE_PROT,			! default file protection
;	0545		RECORD_PROT,			! default record protection
;	0546		MAXIMUM,			! maximum number of files on volume
;	0547		CLUSTER,			! volume cluster factor

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 3-1
; Digital Equipment Corporation
;
;	0548		OWNER_UIC,			! volume owner
;	0549		EXTENSION,			! default file extend
;	0550		WINDOW,				! default window size
;	0551		ACCESSED,			! default directory LRU limit
;	0552		BADBLOCK_TOTAL,			! count of bad blocks on volume
;	0553		LABEL_STRING	: VECTOR,	! string descriptor of volume label
;	0554		USER_NAME	: VECTOR,	! string descriptor of user name
;	0555		ALLOC_TABLE_CNT	: VECTOR,	! allocation count table
;	0556		ALLOC_TABLE_LBN	: VECTOR,	! allocation LBN table
;	0557		BADBLOCK_CNT	: VECTOR,	! bad block count table
;	0558		BADBLOCK_LBN	: VECTOR,	! bad LBN table
;	0559		BOOTBLOCK_CNT,			! boot block cluster block count
;	0560		BOOTBLOCK_LBN,			! boot block cluster LBN
;	0561		HOMEBLOCK1_CNT,			! home block 1 cluster block count
;	0562		HOMEBLOCK1_LBN,			! home block 1 cluster LBN
;	0563		HOMEBLOCK2_CNT,			! home block 2 cluster block count
;	0564		HOMEBLOCK2_LBN,			! home block 2 cluster LBN
;	0565		IDXHDR2_CNT,			! secondary index file header count
;	0566		IDXHDR2_LBN,			! secondary index file header LBN
;	0567		IDXFILE_CNT,			! initial index file count
;	0568		IDXFILE_LBN,			! initial index file LBN
;	0569		BITMAP_CNT,			! storage bitmap block count
;	0570		BITMAP_LBN,			! storage bitmap LBN
;	0571		MFD_CNT,			! MFD block count
;	0572		MFD_LBN,			! MFD LBN
;	0573		REAL_HOMEBLOCK;			! LBN of secondary home block
;	0574	
;	0575	EXTERNAL LITERAL
;	0576		BOOTBLOCK_IDX	: UNSIGNED (6),	! allocation table boot block index
;	0577		IDXFILE_IDX	: UNSIGNED (6);	! allocation table index file index
;	0578	
;	0579	BIND
;	0580		IDENT_AREA	= BUFFER + FH2$C_LENGTH : BBLOCK;
;	0581	
;	0582	EXTERNAL ROUTINE
;	0583		CHECKSUM2,			! compute block checksum
;	0584		WRITE_BLOCK;			! write block to disk
;	0585	
;	0586	
;	0587	! First block to write is the boot block. Set up the message routine for
;	0588	! the -11 and build the message.
;	0589	!
;	0590	
;	0591	CH$COPY (BOOT_PROG_LEN, BOOT_PROGRAM,
;	0592		 BOOT_MESG_LEN, BOOT_MESSAGE,
;	0593		 0, 512, BUFFER);
;	0594	CH$MOVE (.LABEL_STRING[0], .LABEL_STRING[1], BUFFER[BTB$T_VOLNAME]);
;	0595	
;	0596	WRITE_BLOCK (.BOOTBLOCK_LBN, BUFFER);
;	0597	
;	0598	! Now construct the home block. It gets written to the remainder of the boot
;	0599	! block cluster and to the two home block clusters.
;	0600	!
;	0601	
;	0602	$GETTIM (TIMADR = DATE_TIME[0]);

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 3-2
; Digital Equipment Corporation
;
;	0603	CH$FILL (0, 512, BUFFER);
;	0604	
;	0605	BUFFER[HM2$L_HOMELBN]	= .BOOTBLOCK_LBN + 1;
;	0606	BUFFER[HM2$L_ALHOMELBN]	= .REAL_HOMEBLOCK;
;	0607	BUFFER[HM2$L_ALTIDXLBN]	= .IDXHDR2_LBN;
;	0608	BUFFER[HM2$B_STRUCVER]	= 1;
;	0609	BUFFER[HM2$B_STRUCLEV]	= 2;
;	0610	BUFFER[HM2$W_CLUSTER]	= .CLUSTER;
;	0611	BUFFER[HM2$W_HOMEVBN]	= 2;
;	0612	BUFFER[HM2$W_ALHOMEVBN]	= .REAL_HOMEBLOCK - .HOMEBLOCK2_LBN + .CLUSTER * 2 + 1;
;	0613	BUFFER[HM2$W_ALTIDXVBN]	= .CLUSTER * 3 + 1;
;	0614	BUFFER[HM2$W_IBMAPVBN]	= .CLUSTER * 4 + 1;
;	0615	BUFFER[HM2$L_IBMAPLBN]	= .IDXFILE_LBN;
;	0616	BUFFER[HM2$L_MAXFILES]	= .MAXIMUM;
;	0617	BUFFER[HM2$W_IBMAPSIZE]	= (.MAXIMUM + 4095) / 4096;
;	0618	BUFFER[HM2$W_RESFILES]	= 9;
;	0619	BUFFER[HM2$L_VOLOWNER]	= .OWNER_UIC;
;	0620	BUFFER[HM2$W_PROTECT]	= .PROTECTION;
;	0621	BUFFER[HM2$W_VOLCHAR]	= HM2$M_NOPHYS OR HM2$M_NOATTACH;
;	0622	IF .INIT_OPTIONS[OPT_READCHECK]
;	0623	THEN BUFFER[HM2$V_READCHECK] = 1;
;	0624	IF .INIT_OPTIONS[OPT_WRITECHECK]
;	0625	THEN BUFFER[HM2$V_WRITCHECK] = 1;
;	0626	BUFFER[HM2$W_FILEPROT]	= .FILE_PROT;
;	0627	BUFFER[HM2$W_RECPROT]	= .RECORD_PROT;
;	0628	(BUFFER[HM2$Q_CREDATE])<0,32>	= .DATE_TIME[0];
;	0629	(BUFFER[HM2$Q_CREDATE]+4)<0,32>	= .DATE_TIME[1];
;	0630	BUFFER[HM2$B_WINDOW]	= .WINDOW;
;	0631	BUFFER[HM2$B_LRU_LIM]	= .ACCESSED;
;	0632	BUFFER[HM2$W_EXTEND]	= .EXTENSION;
;	0633	
;	0634	CH$FILL (32, HM2$S_STRUCNAME, BUFFER[HM2$T_STRUCNAME]);
;	0635	CH$COPY (.LABEL_STRING[0], .LABEL_STRING[1],
;	0636		 32, HM2$S_VOLNAME, BUFFER[HM2$T_VOLNAME]);
;	0637	CH$COPY (.USER_NAME[0], .USER_NAME[1],
;	0638		 32, HM2$S_OWNERNAME, BUFFER[HM2$T_OWNERNAME]);
;	0639	CH$MOVE (HM2$S_FORMAT, FORMAT_NAME, BUFFER[HM2$T_FORMAT]);
;	0640	
;	0641	DECR J FROM .CLUSTER-1 TO 1 DO
;	0642	    WRITE_HOMEBLOCK ();
;	0643	
;	0644	BUFFER[HM2$L_HOMELBN] = .HOMEBLOCK1_LBN;
;	0645	DECR J FROM .CLUSTER TO 1 DO
;	0646	    WRITE_HOMEBLOCK ();
;	0647	
;	0648	BUFFER[HM2$L_HOMELBN] = .HOMEBLOCK2_LBN;
;	0649	DECR J FROM .CLUSTER TO 1 DO
;	0650	    WRITE_HOMEBLOCK ();
;	0651	
;	0652	! Now write out the initial index file bitmap. The first block contains the
;	0653	! reserved files marked in use; the rest are all zero.
;	0654	!
;	0655	
;	0656	CH$FILL (0, 512, BUFFER);
;	0657	BUFFER<0,32> = %B'111111111';

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 3-3
; Digital Equipment Corporation
;
;	0658	LBN = .IDXFILE_LBN;
;	0659	WRITE_BLOCK (.LBN, BUFFER);
;	0660	
;	0661	BUFFER<0,32> = 0;
;	0662	DECR J FROM (.MAXIMUM+4095)/4096-1 TO 1 DO
;	0663	    BEGIN
;	0664	    LBN = .LBN + 1;
;	0665	    WRITE_BLOCK (.LBN, BUFFER);
;	0666	    END;
;	0667	
;	0668	! Construct and write the initial core image file header.
;	0669	!
;	0670	
;	0671	CH$COPY (FH2$C_LENGTH+FI2$C_LENGTH, INITIAL_HEADER,
;	0672		 0, 512, BUFFER);
;	0673	BUFFER[FH2$L_FILEOWNER] = .OWNER_UIC;
;	0674	BUFFER[FH2$W_FILEPROT] = .FILE_PROT;
;	0675	BUFFER[FH2$W_RECPROT] = .RECORD_PROT;
;	0676	(IDENT_AREA[FI2$Q_CREDATE]) = .DATE_TIME[0];
;	0677	(IDENT_AREA[FI2$Q_CREDATE]+4) = .DATE_TIME[1];
;	0678	(IDENT_AREA[FI2$Q_REVDATE]) = .DATE_TIME[0];
;	0679	(IDENT_AREA[FI2$Q_REVDATE]+4) = .DATE_TIME[1];
;	0680	CHECKSUM2 (BUFFER, $BYTEOFFSET (FH2$W_CHECKSUM));
;	0681	WRITE_BLOCK (.LBN + 5, BUFFER);
;	0682	
;	0683	! Turn the header into the continuation file header and write it.
;	0684	!
;	0685	
;	0686	BUFFER[FH2$W_FID_NUM] = 7;
;	0687	BUFFER[FH2$W_FID_SEQ] = 7;
;	0688	CH$MOVE (6, UPLIT BYTE ('CONTIN'), IDENT_AREA[FI2$T_FILENAME]);
;	0689	CHECKSUM2 (BUFFER, $BYTEOFFSET (FH2$W_CHECKSUM));
;	0690	WRITE_BLOCK (.LBN + 7, BUFFER);
;	0691	
;	0692	! Turn the header into the volume set list file header and write it.
;	0693	!
;	0694	
;	0695	BUFFER[FH2$W_FID_NUM] = 6;
;	0696	BUFFER[FH2$W_FID_SEQ] = 6;
;	0697	BBLOCK [BUFFER[FH2$W_RECATTR], FAT$W_RSIZE] = 64;
;	0698	BBLOCK [BUFFER[FH2$W_RECATTR], FAT$W_MAXREC] = 64;
;	0699	CH$MOVE (6, UPLIT BYTE ('VOLSET'), IDENT_AREA[FI2$T_FILENAME]);
;	0700	CHECKSUM2 (BUFFER, $BYTEOFFSET (FH2$W_CHECKSUM));
;	0701	WRITE_BLOCK (.LBN + 6, BUFFER);
;	0702	
;	0703	! Turn the header into the backup journal file header and write it.
;	0704	!
;	0705	
;	0706	BUFFER[FH2$W_FID_NUM] = 8;
;	0707	BUFFER[FH2$W_FID_SEQ] = 8;
;	0708	CH$MOVE (6, UPLIT BYTE ('BACKUP'), IDENT_AREA[FI2$T_FILENAME]);
;	0709	CHECKSUM2 (BUFFER, $BYTEOFFSET (FH2$W_CHECKSUM));
;	0710	WRITE_BLOCK (.LBN + 8, BUFFER);
;	0711	
;	0712	! Turn the header into the pending bad block log file header and write it.

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 3-4
; Digital Equipment Corporation
;
;	0713	!
;	0714	
;	0715	BUFFER[FH2$W_FID_NUM] = 9;
;	0716	BUFFER[FH2$W_FID_SEQ] = 9;
;	0717	BBLOCK [BUFFER[FH2$W_RECATTR], FAT$W_RSIZE] = 16;
;	0718	BBLOCK [BUFFER[FH2$W_RECATTR], FAT$W_MAXREC] = 16;
;	0719	CH$MOVE (6, UPLIT BYTE ('BADLOG'), IDENT_AREA[FI2$T_FILENAME]);
;	0720	CHECKSUM2 (BUFFER, $BYTEOFFSET (FH2$W_CHECKSUM));
;	0721	WRITE_BLOCK (.LBN + 9, BUFFER);
;	0722	
;	0723	! Turn the header into the index file header and write it.
;	0724	!
;	0725	
;	0726	BUFFER[FH2$W_FID_NUM] = 1;
;	0727	BUFFER[FH2$W_FID_SEQ] = 1;
;	0728	BBLOCK [BUFFER[FH2$W_RECATTR], FAT$W_RSIZE] = 512;
;	0729	BBLOCK [BUFFER[FH2$W_RECATTR], FAT$W_MAXREC] = 512;
;	0730	BBLOCK [BUFFER[FH2$W_RECATTR], FAT$L_HIBLK] = ROT (.CLUSTER*4 + .IDXFILE_CNT, 16);
;	0731	BBLOCK [BUFFER[FH2$W_RECATTR], FAT$L_EFBLK] = ROT (.CLUSTER*4 + (.MAXIMUM+4095)/4096 + 5 + 1, 16);
;	0732	CH$MOVE (6, UPLIT BYTE ('INDEXF'), IDENT_AREA[FI2$T_FILENAME]);
;	0733	MAP_COUNT = .BOOTBLOCK_CNT;
;	0734	MAP_LBN = .BOOTBLOCK_LBN;
;	0735	INCR J FROM BOOTBLOCK_IDX + 1 TO IDXFILE_IDX DO
;	0736	BEGIN
;	0737	    IF .MAP_COUNT + .MAP_LBN EQL .ALLOC_TABLE_LBN[.J]
;	0738	    THEN
;	0739		MAP_COUNT = .MAP_COUNT + .ALLOC_TABLE_CNT[.J]
;	0740	    ELSE
;	0741		BEGIN
;	0742		MAKE_POINTER (.MAP_COUNT, .MAP_LBN);
;	0743		MAP_COUNT = .ALLOC_TABLE_CNT[.J];
;	0744		MAP_LBN = .ALLOC_TABLE_LBN[.J];
;	0745		END;
;	0746	    END;
;	0747	MAKE_POINTER (.MAP_COUNT, .MAP_LBN);
;	0748	
;	0749	CHECKSUM2 (BUFFER, $BYTEOFFSET (FH2$W_CHECKSUM));
;	0750	WRITE_BLOCK (.LBN + 1, BUFFER);
;	0751	WRITE_BLOCK (.IDXHDR2_LBN, BUFFER);
;	0752	
;	0753	! Turn the file header into the bad block file header and write it.
;	0754	!
;	0755	
;	0756	CH$FILL (0, 512-FH2$C_LENGTH-FI2$C_LENGTH, BUFFER+FH2$C_LENGTH+FI2$C_LENGTH);
;	0757	BUFFER[FH2$B_MAP_INUSE] = 0;
;	0758	BUFFER[FH2$W_FID_NUM] = 3;
;	0759	BUFFER[FH2$W_FID_SEQ] = 3;
;	0760	
;	0761	MAP_COUNT = 0;
;	0762	INCR J FROM 0 TO .BADBLOCK_TOTAL-1 DO
;	0763	    MAP_COUNT = .MAP_COUNT + .BADBLOCK_CNT[.J];
;	0764	BBLOCK [BUFFER[FH2$W_RECATTR], FAT$L_HIBLK] = ROT (.MAP_COUNT, 16);
;	0765	BBLOCK [BUFFER[FH2$W_RECATTR], FAT$L_EFBLK] = ROT (.MAP_COUNT+1, 16);
;	0766	
;	0767	CH$MOVE (6, UPLIT BYTE ('BADBLK'), IDENT_AREA[FI2$T_FILENAME]);

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 3-5
; Digital Equipment Corporation
;
;	0768	INCR J FROM 0 TO .BADBLOCK_TOTAL-1 DO
;	0769	    BEGIN
;	0770	    IF .BUFFER[FH2$B_MAP_INUSE] GTR (512 - FH2$C_LENGTH - FI2$C_LENGTH - 2) / 2 - 4
;	0771	    THEN ERR_EXIT (INIT$_MAXBAD);
;	0772	    MAKE_POINTER (.BADBLOCK_CNT[.J], .BADBLOCK_LBN[.J]);
;	0773	    END;
;	0774	CHECKSUM2 (BUFFER, $BYTEOFFSET (FH2$W_CHECKSUM));
;	0775	WRITE_BLOCK (.LBN + 3, BUFFER);
;	0776	
;	0777	! Turn the file header into the storage map file header and write it.
;	0778	!
;	0779	
;	0780	CH$FILL (0, 512-FH2$C_LENGTH-FI2$C_LENGTH, BUFFER+FH2$C_LENGTH+FI2$C_LENGTH);
;	0781	BUFFER[FH2$B_MAP_INUSE] = 0;
;	0782	BUFFER[FH2$W_FID_NUM] = 2;
;	0783	BUFFER[FH2$W_FID_SEQ] = 2;
;	0784	BUFFER[FH2$V_CONTIG] = 1;
;	0785	BBLOCK [BUFFER[FH2$W_RECATTR], FAT$L_HIBLK] = ROT (.BITMAP_CNT, 16);
;	0786	BBLOCK [BUFFER[FH2$W_RECATTR], FAT$L_EFBLK] = ROT ((.VOLUME_SIZE/.CLUSTER+4095)/4096 + 2, 16);
;	0787	
;	0788	CH$MOVE (6, UPLIT BYTE ('BITMAP'), IDENT_AREA[FI2$T_FILENAME]);
;	0789	MAKE_POINTER (.BITMAP_CNT, .BITMAP_LBN);
;	0790	CHECKSUM2 (BUFFER, $BYTEOFFSET (FH2$W_CHECKSUM));
;	0791	WRITE_BLOCK (.LBN + 2, BUFFER);
;	0792	
;	0793	! Turn the file header into the MFD header and write it.
;	0794	!
;	0795	
;	0796	CH$FILL (0, 512-FH2$C_LENGTH-FI2$C_LENGTH, BUFFER+FH2$C_LENGTH+FI2$C_LENGTH);
;	0797	BUFFER[FH2$B_MAP_INUSE] = 0;
;	0798	BUFFER[FH2$W_FID_NUM] = 4;
;	0799	BUFFER[FH2$W_FID_SEQ] = 4;
;	0800	BUFFER[FH2$V_DIRECTORY] = 1;
;	0801	BBLOCK [BUFFER[FH2$W_RECATTR], FAT$L_EFBLK] = ROT (2, 16);
;	0802	BBLOCK [BUFFER[FH2$W_RECATTR], FAT$L_HIBLK] = ROT (.MFD_CNT, 16);
;	0803	BBLOCK [BUFFER[FH2$W_RECATTR], FAT$B_RTYPE] = FAT$C_VARIABLE;
;	0804	BBLOCK [BUFFER[FH2$W_RECATTR], FAT$B_RATTRIB] = FAT$M_NOSPAN;
;	0805	
;	0806	CH$MOVE (10, UPLIT BYTE ('000000.DIR'), IDENT_AREA[FI2$T_FILENAME]);
;	0807	MAKE_POINTER (.MFD_CNT, .MFD_LBN);
;	0808	CHECKSUM2 (BUFFER, $BYTEOFFSET (FH2$W_CHECKSUM));
;	0809	WRITE_BLOCK (.LBN + 4, BUFFER);
;	0810	
;	0811	END;					! end of routine INIT_INDEX


							    .TITLE  ININDX
							    .IDENT  \X0005A\

							    .PSECT  $PLIT$,NOWRT,NOEXE,2

					      00000 P.AAA:  .WORD   160, 5574, 512, 4544, 26048, 30, -27647, 771, 2551, 6, -  ;
								    507, 5, 0, -28577, -138, -29729, -140, -32515, 135	      ;
					      00026	    .BLKB   2
					      00028 P.AAB:  .BYTE   13, 10, 10						      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 3-6
; Digital Equipment Corporation
;
					      0002B 	    .ASCII  \             is not a system disk\			      ;
					      0004C 	    .BYTE   13, 10, 10, 0					      ;
					      00050 P.AAC:  .ASCII  \DECFILE11B  \					      ;
					      0005C P.AAD:  .BYTE   38							      ;
					      0005D 	    .BYTE   65							      ;
					      0005E 	    .BYTE   -1							      ;
					      0005F 	    .BYTE   -1							      ;
					      00060 	    .WORD   0							      ;
					      00062 	    .BYTE   1, 2						      ;
					      00064 	    .WORD   5, 5, 0						      ;
					      0006A 	    .WORD   0, 0, 0						      ;
					      00070 	    .BYTE   1							      ;
					      00071 	    .BYTE   0							      ;
					      00072 	    .WORD   512							      ;
					      00074 	    .LONG   0, 65536						      ;
					      0007C 	    .WORD   0							      ;
					      0007E 	    .BYTE   0, 0						      ;
					      00080 	    .WORD   512							      ;
					      00082 	    .WORD   0							      ;
					      00084 	    .WORD   0, 0, 0, 0, 0, 0					      ;
					      00090 	    .LONG   0							      ;
					      00094 	    .WORD   0							      ;
					      00096 	    .BYTE   0, 0						      ;
					      00098 	    .LONG   0							      ;
					      0009C 	    .WORD   0, 0						      ;
					      000A0 	    .LONG   0, 0						      ;
					      000A8 	    .ASCII  \CORIMG.SYS;1        \				      ;
					      000BC 	    .WORD   1							      ;
					      000BE 	    .LONG   0, 0, 0, 0, 0, 0, 0, 0				      ;
					      000DE	    .BLKB   2
					      000E0 P.AAE:  .ASCII  \CONTIN\						      ;
					      000E6	    .BLKB   2
					      000E8 P.AAF:  .ASCII  \VOLSET\						      ;
					      000EE	    .BLKB   2
					      000F0 P.AAG:  .ASCII  \BACKUP\						      ;
					      000F6	    .BLKB   2
					      000F8 P.AAH:  .ASCII  \BADLOG\						      ;
					      000FE	    .BLKB   2
					      00100 P.AAI:  .ASCII  \INDEXF\						      ;
					      00106	    .BLKB   2
					      00108 P.AAJ:  .ASCII  \BADBLK\						      ;
					      0010E	    .BLKB   2
					      00110 P.AAK:  .ASCII  \BITMAP\						      ;
					      00116	    .BLKB   2
					      00118 P.AAL:  .ASCII  \000000.DIR\					      ;
					      00122	    .BLKB   2

						    BOOT_PROGRAM=	P.AAA
						    BOOT_MESSAGE=	P.AAB
						    FORMAT_NAME=	P.AAC
						    INITIAL_HEADER=	P.AAD
							    .GLOBL  INIT_OPTIONS, BUFFER, VOLUME_SIZE, PROTECTION
							    .GLOBL  FILE_PROT, RECORD_PROT, MAXIMUM, CLUSTER, OWNER_UIC
							    .GLOBL  EXTENSION, WINDOW, ACCESSED, BADBLOCK_TOTAL, LABEL_STRING
							    .GLOBL  USER_NAME, ALLOC_TABLE_CNT, ALLOC_TABLE_LBN, BADBLOCK_CNT

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 3-7
; Digital Equipment Corporation
;
							    .GLOBL  BADBLOCK_LBN, BOOTBLOCK_CNT, BOOTBLOCK_LBN, HOMEBLOCK1_CNT
							    .GLOBL  HOMEBLOCK1_LBN, HOMEBLOCK2_CNT, HOMEBLOCK2_LBN
							    .GLOBL  IDXHDR2_CNT, IDXHDR2_LBN, IDXFILE_CNT, IDXFILE_LBN
							    .GLOBL  BITMAP_CNT, BITMAP_LBN, MFD_CNT, MFD_LBN, REAL_HOMEBLOCK
							    .GLOBL  BOOTBLOCK_IDX, IDXFILE_IDX, CHECKSUM2, WRITE_BLOCK
							    .GLOBL  SYS$GETTIM

							    .PSECT  $CODE$,NOWRT,2

					 0FFC 00000 	    .ENTRY  INIT_INDEX, Save R2,R3,R4,R5,R6,R7,R8,R9,R10,R11	      ; 0493
		         59	0000G  CF  9E 00002 	    MOVAB   CHECKSUM2, R9					      ;
		         5A	0000G  CF  9E 00007 	    MOVAB   WRITE_BLOCK, R10					      ;
		         5B	0000G  CF  9E 0000C 	    MOVAB   BUFFER, R11						      ;
		         5E	       08  C2 00011 	    SUBL2   #8, SP						      ;
	   6B	  0000'  CF	       26  28 00014 	    MOVC3   #38, BOOT_PROGRAM, BUFFER				      ; 0591
	   00	  0000'  CF	       28  2C 0001A 	    MOVC5   #40, BOOT_MESSAGE, #0, #474, (R3)			      ;
		         63	01DA   8F     00020									      ;
      26   AB	  0000G  DF	0000G  CF  28 00024 	    MOVC3   LABEL_STRING, @LABEL_STRING+4, BUFFER+38		      ; 0594
				       5B  DD 0002D 	    PUSHL   R11							      ; 0596
				0000G  CF  DD 0002F 	    PUSHL   BOOTBLOCK_LBN					      ;
		         6A	       02  FB 00033 	    CALLS   #2, WRITE_BLOCK					      ;
				       5E  DD 00036 	    PUSHL   SP							      ; 0602
	      00000000G  9F	       01  FB 00038 	    CALLS   #1, @#SYS$GETTIM					      ;
	   00	         6E	       00  2C 0003F 	    MOVC5   #0, (SP), #0, #512, BUFFER				      ; 0603
		         6B	0200   8F     00043									      ;
	   6B	  0000G  CF	       01  C1 00047 	    ADDL3   #1, BOOTBLOCK_LBN, BUFFER				      ; 0605
		    04   AB	0000G  CF  D0 0004D 	    MOVL    REAL_HOMEBLOCK, BUFFER+4				      ; 0606
		    08   AB	0000G  CF  D0 00053 	    MOVL    IDXHDR2_LBN, BUFFER+8				      ; 0607
		    0C   AB	0201   8F  B0 00059 	    MOVW    #513, BUFFER+12					      ; 0608
		         56	0000G  CF  D0 0005F 	    MOVL    CLUSTER, R6						      ; 0610
		    0E   AB	       56  B0 00064 	    MOVW    R6, BUFFER+14					      ;
		    10   AB	       02  B0 00068 	    MOVW    #2, BUFFER+16					      ; 0611
	   50	  0000G  CF	0000G  CF  C3 0006C 	    SUBL3   HOMEBLOCK2_LBN, REAL_HOMEBLOCK, R0			      ; 0612
		         51	  01 A046  3E 00074 	    MOVAW   1(R0)[R6], R1					      ;
		    12   AB	       51  B0 00079 	    MOVW    R1, BUFFER+18					      ;
	   50	         56	       03  C5 0007D 	    MULL3   #3, R6, R0						      ; 0613
      14   AB	         50	       01  A1 00081 	    ADDW3   #1, R0, BUFFER+20					      ;
	   50	         56	       02  78 00086 	    ASHL    #2, R6, R0						      ; 0614
      16   AB	         50	       01  A1 0008A 	    ADDW3   #1, R0, BUFFER+22					      ;
		    18   AB	0000G  CF  D0 0008F 	    MOVL    IDXFILE_LBN, BUFFER+24				      ; 0615
		    1C   AB	0000G  CF  D0 00095 	    MOVL    MAXIMUM, BUFFER+28					      ; 0616
	   50	  0000G  CF 00000FFF   8F  C1 0009B 	    ADDL3   #4095, MAXIMUM, R0					      ; 0617
	   51	         50 00001000   8F  C7 000A5 	    DIVL3   #4096, R0, R1					      ;
		    20   AB	       51  B0 000AD 	    MOVW    R1, BUFFER+32					      ;
		    22   AB	       09  B0 000B1 	    MOVW    #9, BUFFER+34					      ; 0618
		    2C   AB	0000G  CF  D0 000B5 	    MOVL    OWNER_UIC, BUFFER+44				      ; 0619
		    34   AB	0000G  CF  B0 000BB 	    MOVW    PROTECTION, BUFFER+52				      ; 0620
		    2A   AB	       18  B0 000C1 	    MOVW    #24, BUFFER+42					      ; 0621
	   04	  0000G  CF	       07  E1 000C5 	    BBC     #7, INIT_OPTIONS, 1$				      ; 0622
		    2A   AB	       01  88 000CB 	    BISB2   #1, BUFFER+42					      ; 0623
		         04	0000G  CF  E9 000CF 1$:     BLBC    INIT_OPTIONS+1, 2$					      ; 0624
		    2A   AB	       02  88 000D4 	    BISB2   #2, BUFFER+42					      ; 0625
		    36   AB	0000G  CF  B0 000D8 2$:     MOVW    FILE_PROT, BUFFER+54				      ; 0626
		    38   AB	0000G  CF  B0 000DE 	    MOVW    RECORD_PROT, BUFFER+56				      ; 0627
		         57	       6E  D0 000E4 	    MOVL    DATE_TIME, R7					      ; 0628

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 3-8
; Digital Equipment Corporation
;
		    3C   AB	       57  D0 000E7 	    MOVL    R7, BUFFER+60					      ;
		         58	  04   AE  D0 000EB 	    MOVL    DATE_TIME+4, R8					      ; 0629
		    40   AB	       58  D0 000EF 	    MOVL    R8, BUFFER+64					      ;
		    44   AB	0000G  CF  90 000F3 	    MOVB    WINDOW, BUFFER+68					      ; 0630
		    45   AB	0000G  CF  90 000F9 	    MOVB    ACCESSED, BUFFER+69					      ; 0631
		    46   AB	0000G  CF  B0 000FF 	    MOVW    EXTENSION, BUFFER+70				      ; 0632
	   20	         6E	       00  2C 00105 	    MOVC5   #0, (SP), #32, #12, BUFFER+460			      ; 0634
		  01CC   CB	       0C     00109									      ;
	   20	  0000G  DF	0000G  CF  2C 0010D 	    MOVC5   LABEL_STRING, @LABEL_STRING+4, #32, #12, BUFFER+472       ; 0635
		  01D8   CB	       0C     00115									      ;
	   20	  0000G  DF	0000G  CF  2C 00119 	    MOVC5   USER_NAME, @USER_NAME+4, #32, #12, BUFFER+484	      ; 0637
		  01E4   CB	       0C     00121									      ;
    01F0   CB	  0000'  CF	       0C  28 00125 	    MOVC3   #12, FORMAT_NAME, BUFFER+496			      ; 0639
				       05  11 0012D 	    BRB     4$							      ; 0641
		  0000V  CF	       00  FB 0012F 3$:     CALLS   #0, WRITE_HOMEBLOCK					      ; 0642
		         F8	       56  F5 00134 4$:     SOBGTR  J, 3$						      ; 0641
		         6B	0000G  CF  D0 00137 	    MOVL    HOMEBLOCK1_LBN, BUFFER				      ; 0644
	   52	  0000G  CF	       01  C1 0013C 	    ADDL3   #1, CLUSTER, J					      ; 0645
				       05  11 00142 	    BRB     6$							      ;
		  0000V  CF	       00  FB 00144 5$:     CALLS   #0, WRITE_HOMEBLOCK					      ; 0646
		         F8	       52  F5 00149 6$:     SOBGTR  J, 5$						      ; 0645
		         6B	0000G  CF  D0 0014C 	    MOVL    HOMEBLOCK2_LBN, BUFFER				      ; 0648
	   52	  0000G  CF	       01  C1 00151 	    ADDL3   #1, CLUSTER, J					      ; 0649
				       05  11 00157 	    BRB     8$							      ;
		  0000V  CF	       00  FB 00159 7$:     CALLS   #0, WRITE_HOMEBLOCK					      ; 0650
		         F8	       52  F5 0015E 8$:     SOBGTR  J, 7$						      ; 0649
	   00	         6E	       00  2C 00161 	    MOVC5   #0, (SP), #0, #512, BUFFER				      ; 0656
		         6B	0200   8F     00165									      ;
		         6B	01FF   8F  3C 00169 	    MOVZWL  #511, BUFFER					      ; 0657
		         56	0000G  CF  D0 0016E 	    MOVL    IDXFILE_LBN, LBN					      ; 0658
				0840   8F  BB 00173 	    PUSHR   #^M<R6,R11>						      ; 0659
		         6A	       02  FB 00177 	    CALLS   #2, WRITE_BLOCK					      ;
				       6B  D4 0017A 	    CLRL    BUFFER						      ; 0661
	   50	  0000G  CF 00000FFF   8F  C1 0017C 	    ADDL3   #4095, MAXIMUM, R0					      ; 0662
		         50 00001000   8F  C6 00186 	    DIVL2   #4096, R0						      ;
		         52	       50  D0 0018D 	    MOVL    R0, J						      ;
				       09  11 00190 	    BRB     10$							      ;
				       56  D6 00192 9$:     INCL    LBN							      ; 0664
				0840   8F  BB 00194 	    PUSHR   #^M<R6,R11>						      ; 0665
		         6A	       02  FB 00198 	    CALLS   #2, WRITE_BLOCK					      ;
		         F4	       52  F5 0019B 10$:    SOBGTR  J, 9$						      ; 0662
	   00	  0000'  CF	0082   8F  2C 0019E 	    MOVC5   #130, INITIAL_HEADER, #0, #512, BUFFER		      ; 0671
		         6B	0200   8F     001A6									      ;
		    3C   AB	0000G  CF  D0 001AA 	    MOVL    OWNER_UIC, BUFFER+60				      ; 0673
		    40   AB	0000G  CF  B0 001B0 	    MOVW    FILE_PROT, BUFFER+64				      ; 0674
		    42   AB	0000G  CF  B0 001B6 	    MOVW    RECORD_PROT, BUFFER+66				      ; 0675
		    62   AB	       57  7D 001BC 	    MOVQ    R7, IDENT_AREA+22					      ; 0676
		    6A   AB	       57  7D 001C0 	    MOVQ    R7, IDENT_AREA+30					      ; 0678
		         7E	01FE   8F  3C 001C4 	    MOVZWL  #510, -(SP)						      ; 0680
				       5B  DD 001C9 	    PUSHL   R11							      ;
		         69	       02  FB 001CB 	    CALLS   #2, CHECKSUM2					      ;
				       5B  DD 001CE 	    PUSHL   R11							      ; 0681
				  05   A6  9F 001D0 	    PUSHAB  5(LBN)						      ;
		         6A	       02  FB 001D3 	    CALLS   #2, WRITE_BLOCK					      ;
		    08   AB 00070007   8F  D0 001D6 	    MOVL    #458759, BUFFER+8					      ; 0686

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 3-9
; Digital Equipment Corporation
;
      4C   AB	  0000'  CF	       06  28 001DE 	    MOVC3   #6, P.AAE, IDENT_AREA				      ; 0688
		         7E	01FE   8F  3C 001E5 	    MOVZWL  #510, -(SP)						      ; 0689
				       5B  DD 001EA 	    PUSHL   R11							      ;
		         69	       02  FB 001EC 	    CALLS   #2, CHECKSUM2					      ;
				       5B  DD 001EF 	    PUSHL   R11							      ; 0690
				  07   A6  9F 001F1 	    PUSHAB  7(LBN)						      ;
		         6A	       02  FB 001F4 	    CALLS   #2, WRITE_BLOCK					      ;
		    08   AB 00060006   8F  D0 001F7 	    MOVL    #393222, BUFFER+8					      ; 0695
		    16   AB	  40   8F  9B 001FF 	    MOVZBW  #64, BUFFER+22					      ; 0697
		    24   AB	  40   8F  9B 00204 	    MOVZBW  #64, BUFFER+36					      ; 0698
      4C   AB	  0000'  CF	       06  28 00209 	    MOVC3   #6, P.AAF, IDENT_AREA				      ; 0699
		         7E	01FE   8F  3C 00210 	    MOVZWL  #510, -(SP)						      ; 0700
				       5B  DD 00215 	    PUSHL   R11							      ;
		         69	       02  FB 00217 	    CALLS   #2, CHECKSUM2					      ;
				       5B  DD 0021A 	    PUSHL   R11							      ; 0701
				  06   A6  9F 0021C 	    PUSHAB  6(LBN)						      ;
		         6A	       02  FB 0021F 	    CALLS   #2, WRITE_BLOCK					      ;
		    08   AB 00080008   8F  D0 00222 	    MOVL    #524296, BUFFER+8					      ; 0706
      4C   AB	  0000'  CF	       06  28 0022A 	    MOVC3   #6, P.AAG, IDENT_AREA				      ; 0708
		         7E	01FE   8F  3C 00231 	    MOVZWL  #510, -(SP)						      ; 0709
				       5B  DD 00236 	    PUSHL   R11							      ;
		         69	       02  FB 00238 	    CALLS   #2, CHECKSUM2					      ;
				       5B  DD 0023B 	    PUSHL   R11							      ; 0710
				  08   A6  9F 0023D 	    PUSHAB  8(LBN)						      ;
		         6A	       02  FB 00240 	    CALLS   #2, WRITE_BLOCK					      ;
		    08   AB 00090009   8F  D0 00243 	    MOVL    #589833, BUFFER+8					      ; 0715
		    16   AB	       10  B0 0024B 	    MOVW    #16, BUFFER+22					      ; 0717
		    24   AB	       10  B0 0024F 	    MOVW    #16, BUFFER+36					      ; 0718
      4C   AB	  0000'  CF	       06  28 00253 	    MOVC3   #6, P.AAH, IDENT_AREA				      ; 0719
		         7E	01FE   8F  3C 0025A 	    MOVZWL  #510, -(SP)						      ; 0720
				       5B  DD 0025F 	    PUSHL   R11							      ;
		         69	       02  FB 00261 	    CALLS   #2, CHECKSUM2					      ;
				       5B  DD 00264 	    PUSHL   R11							      ; 0721
				  09   A6  9F 00266 	    PUSHAB  9(LBN)						      ;
		         6A	       02  FB 00269 	    CALLS   #2, WRITE_BLOCK					      ;
		    08   AB 00010001   8F  D0 0026C 	    MOVL    #65537, BUFFER+8					      ; 0726
		    16   AB	0200   8F  B0 00274 	    MOVW    #512, BUFFER+22					      ; 0728
		    24   AB	0200   8F  B0 0027A 	    MOVW    #512, BUFFER+36					      ; 0729
		         50	0000G  CF  D0 00280 	    MOVL    CLUSTER, R0						      ; 0730
		         51	0000GDF40  DE 00285 	    MOVAL   @IDXFILE_CNT[R0], R1				      ;
      18   AB	         51	       10  9C 0028B 	    ROTL    #16, R1, BUFFER+24					      ;
	   51	  0000G  CF 00000FFF   8F  C1 00290 	    ADDL3   #4095, MAXIMUM, R1					      ; 0731
		         51 00001000   8F  C6 0029A 	    DIVL2   #4096, R1						      ;
		         50	  06 A140  DE 002A1 	    MOVAL   6(R1)[R0], R0					      ;
      1C   AB	         50	       10  9C 002A6 	    ROTL    #16, R0, BUFFER+28					      ;
      4C   AB	  0000'  CF	       06  28 002AB 	    MOVC3   #6, P.AAI, IDENT_AREA				      ; 0732
		         57	0000G  CF  D0 002B2 	    MOVL    BOOTBLOCK_CNT, MAP_COUNT				      ; 0733
		         53	0000G  CF  D0 002B7 	    MOVL    BOOTBLOCK_LBN, MAP_LBN				      ; 0734
	   52 00000000G  8F	       01  C3 002BC 	    SUBL3   #1, #BOOTBLOCK_IDX+1, J				      ; 0735
				       29  11 002C4 	    BRB     13$							      ;
	   50	         57	       53  C1 002C6 11$:    ADDL3   MAP_LBN, MAP_COUNT, R0				      ; 0737
		  0000GCF42	       50  D1 002CA 	    CMPL    R0, ALLOC_TABLE_LBN[J]				      ;
				       08  12 002D0 	    BNEQ    12$							      ;
		         57	0000GCF42  C0 002D2 	    ADDL2   ALLOC_TABLE_CNT[J], MAP_COUNT			      ; 0739
				       15  11 002D8 	    BRB     13$							      ; 0737

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 3-10
; Digital Equipment Corporation
;
				       53  DD 002DA 12$:    PUSHL   MAP_LBN						      ; 0742
				       57  DD 002DC 	    PUSHL   MAP_COUNT						      ;
		  0000V  CF	       02  FB 002DE 	    CALLS   #2, MAKE_POINTER					      ;
		         57	0000GCF42  D0 002E3 	    MOVL    ALLOC_TABLE_CNT[J], MAP_COUNT			      ; 0743
		         53	0000GCF42  D0 002E9 	    MOVL    ALLOC_TABLE_LBN[J], MAP_LBN				      ; 0744
	   D3	         52	       00  F3 002EF 13$:    AOBLEQ  #IDXFILE_IDX, J, 11$				      ; 0735
				       53  DD 002F3 	    PUSHL   MAP_LBN						      ; 0747
				       57  DD 002F5 	    PUSHL   MAP_COUNT						      ;
		  0000V  CF	       02  FB 002F7 	    CALLS   #2, MAKE_POINTER					      ;
		         7E	01FE   8F  3C 002FC 	    MOVZWL  #510, -(SP)						      ; 0749
				       5B  DD 00301 	    PUSHL   R11							      ;
		         69	       02  FB 00303 	    CALLS   #2, CHECKSUM2					      ;
				       5B  DD 00306 	    PUSHL   R11							      ; 0750
				  01   A6  9F 00308 	    PUSHAB  1(LBN)						      ;
		         6A	       02  FB 0030B 	    CALLS   #2, WRITE_BLOCK					      ;
				       5B  DD 0030E 	    PUSHL   R11							      ; 0751
				0000G  CF  DD 00310 	    PUSHL   IDXHDR2_LBN						      ;
		         6A	       02  FB 00314 	    CALLS   #2, WRITE_BLOCK					      ;
	   00	         6E	       00  2C 00317 	    MOVC5   #0, (SP), #0, #382, BUFFER+130			      ; 0756
		  0082   CB	017E   8F     0031B									      ;
				  3A   AB  94 00321 	    CLRB    BUFFER+58						      ; 0757
		    08   AB 00030003   8F  D0 00324 	    MOVL    #196611, BUFFER+8					      ; 0758
				       57  D4 0032C 	    CLRL    MAP_COUNT						      ; 0761
		         58	0000G  CF  D0 0032E 	    MOVL    BADBLOCK_TOTAL, R8					      ; 0762
		         50	       01  CE 00333 	    MNEGL   #1, J						      ;
				       06  11 00336 	    BRB     15$							      ;
		         57	0000GCF40  C0 00338 14$:    ADDL2   BADBLOCK_CNT[J], MAP_COUNT				      ; 0763
	   F6	         50	       58  F2 0033E 15$:    AOBLSS  R8, J, 14$						      ; 0762
      18   AB	         57	       10  9C 00342 	    ROTL    #16, MAP_COUNT, BUFFER+24				      ; 0764
				       57  D6 00347 	    INCL    R7							      ; 0765
      1C   AB	         57	       10  9C 00349 	    ROTL    #16, R7, BUFFER+28					      ;
      4C   AB	  0000'  CF	       06  28 0034E 	    MOVC3   #6, P.AAJ, IDENT_AREA				      ; 0767
		         52	       01  CE 00355 	    MNEGL   #1, J						      ; 0768
				       23  11 00358 	    BRB     18$							      ;
		    BA   8F	  3A   AB  91 0035A 16$:    CMPB    BUFFER+58, #186					      ; 0770
				       0D  1B 0035F 	    BLEQU   17$							      ;
			    007580BC   8F  DD 00361 	    PUSHL   #7700668						      ; 0771
	      00000000G  00	       01  FB 00367 	    CALLS   #1, LIB$STOP					      ;
				0000GCF42  DD 0036E 17$:    PUSHL   BADBLOCK_LBN[J]					      ; 0772
				0000GCF42  DD 00373 	    PUSHL   BADBLOCK_CNT[J]					      ;
		  0000V  CF	       02  FB 00378 	    CALLS   #2, MAKE_POINTER					      ;
	   D9	         52	       58  F2 0037D 18$:    AOBLSS  R8, J, 16$						      ; 0768
		         7E	01FE   8F  3C 00381 	    MOVZWL  #510, -(SP)						      ; 0774
				       5B  DD 00386 	    PUSHL   R11							      ;
		         69	       02  FB 00388 	    CALLS   #2, CHECKSUM2					      ;
				       5B  DD 0038B 	    PUSHL   R11							      ; 0775
				  03   A6  9F 0038D 	    PUSHAB  3(LBN)						      ;
		         6A	       02  FB 00390 	    CALLS   #2, WRITE_BLOCK					      ;
	   00	         6E	       00  2C 00393 	    MOVC5   #0, (SP), #0, #382, BUFFER+130			      ; 0780
		  0082   CB	017E   8F     00397									      ;
				  3A   AB  94 0039D 	    CLRB    BUFFER+58						      ; 0781
		    08   AB 00020002   8F  D0 003A0 	    MOVL    #131074, BUFFER+8					      ; 0782
		    34   AB	  80   8F  88 003A8 	    BISB2   #128, BUFFER+52					      ; 0784
      18   AB	  0000G  CF	       10  9C 003AD 	    ROTL    #16, BITMAP_CNT, BUFFER+24				      ; 0785
	   50	  0000G  CF	0000G  CF  C7 003B4 	    DIVL3   CLUSTER, VOLUME_SIZE, R0				      ; 0786

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 3-11
; Digital Equipment Corporation
;
		         50	0FFF   C0  9E 003BC 	    MOVAB   4095(R0), R0					      ;
		         50 00001000   8F  C6 003C1 	    DIVL2   #4096, R0						      ;
		         50	       02  C0 003C8 	    ADDL2   #2, R0						      ;
      1C   AB	         50	       10  9C 003CB 	    ROTL    #16, R0, BUFFER+28					      ;
      4C   AB	  0000'  CF	       06  28 003D0 	    MOVC3   #6, P.AAK, IDENT_AREA				      ; 0788
				0000G  CF  DD 003D7 	    PUSHL   BITMAP_LBN						      ; 0789
				0000G  CF  DD 003DB 	    PUSHL   BITMAP_CNT						      ;
		  0000V  CF	       02  FB 003DF 	    CALLS   #2, MAKE_POINTER					      ;
		         7E	01FE   8F  3C 003E4 	    MOVZWL  #510, -(SP)						      ; 0790
				       5B  DD 003E9 	    PUSHL   R11							      ;
		         69	       02  FB 003EB 	    CALLS   #2, CHECKSUM2					      ;
				       5B  DD 003EE 	    PUSHL   R11							      ; 0791
				  02   A6  9F 003F0 	    PUSHAB  2(LBN)						      ;
		         6A	       02  FB 003F3 	    CALLS   #2, WRITE_BLOCK					      ;
	   00	         6E	       00  2C 003F6 	    MOVC5   #0, (SP), #0, #382, BUFFER+130			      ; 0796
		  0082   CB	017E   8F     003FA									      ;
				  3A   AB  94 00400 	    CLRB    BUFFER+58						      ; 0797
		    08   AB 00040004   8F  D0 00403 	    MOVL    #262148, BUFFER+8					      ; 0798
		    35   AB	       20  88 0040B 	    BISB2   #32, BUFFER+53					      ; 0800
		    1C   AB 00020000   8F  D0 0040F 	    MOVL    #131072, BUFFER+28					      ; 0801
      18   AB	  0000G  CF	       10  9C 00417 	    ROTL    #16, MFD_CNT, BUFFER+24				      ; 0802
		    14   AB	0802   8F  B0 0041E 	    MOVW    #2050, BUFFER+20					      ; 0803
      4C   AB	  0000'  CF	       0A  28 00424 	    MOVC3   #10, P.AAL, IDENT_AREA				      ; 0806
				0000G  CF  DD 0042B 	    PUSHL   MFD_LBN						      ; 0807
				0000G  CF  DD 0042F 	    PUSHL   MFD_CNT						      ;
		  0000V  CF	       02  FB 00433 	    CALLS   #2, MAKE_POINTER					      ;
		         7E	01FE   8F  3C 00438 	    MOVZWL  #510, -(SP)						      ; 0808
				       5B  DD 0043D 	    PUSHL   R11							      ;
		         69	       02  FB 0043F 	    CALLS   #2, CHECKSUM2					      ;
				       5B  DD 00442 	    PUSHL   R11							      ; 0809
				  04   A6  9F 00444 	    PUSHAB  4(LBN)						      ;
		         6A	       02  FB 00447 	    CALLS   #2, WRITE_BLOCK					      ;
					   04 0044A 	    RET     							      ; 0493

; Routine Size:  1099 bytes



; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 4
; Digital Equipment Corporation
;
;	0812	ROUTINE WRITE_HOMEBLOCK : NOVALUE =
;	0813	
;	0814	!++
;	0815	!
;	0816	! FUNCTIONAL DESCRIPTION:
;	0817	!
;	0818	!	This routine computes the checksums in the home block currently
;	0819	!	in the buffer, writes it, and then increments the block numbers
;	0820	!	in the home block for the next write.
;	0821	!
;	0822	!
;	0823	! CALLING SEQUENCE:
;	0824	!	WRITE_HOMEBLOCK ()
;	0825	!
;	0826	! INPUT PARAMETERS:
;	0827	!	NONE
;	0828	!
;	0829	! IMPLICIT INPUTS:
;	0830	!	BUFFER contains home block
;	0831	!
;	0832	! OUTPUT PARAMETERS:
;	0833	!	NONE
;	0834	!
;	0835	! IMPLICIT OUTPUTS:
;	0836	!	NONE
;	0837	!
;	0838	! ROUTINE VALUE:
;	0839	!	NONE
;	0840	!
;	0841	! SIDE EFFECTS:
;	0842	!	home block written
;	0843	!
;	0844	!--
;	0845	
;	0846	BEGIN
;	0847	
;	0848	EXTERNAL
;	0849		BUFFER		: BBLOCK;	! buffer containing home block
;	0850	
;	0851	EXTERNAL ROUTINE
;	0852		CHECKSUM2,			! block checksum routine
;	0853		WRITE_BLOCK;			! write a block to the disk
;	0854	
;	0855	
;	0856	! Compute the two checksums and then write the block.
;	0857	!
;	0858	
;	0859	CHECKSUM2 (BUFFER, $BYTEOFFSET (HM2$W_CHECKSUM1));
;	0860	CHECKSUM2 (BUFFER, $BYTEOFFSET (HM2$W_CHECKSUM2));
;	0861	WRITE_BLOCK (.BUFFER[HM2$L_HOMELBN], BUFFER);
;	0862	
;	0863	! Advance the block numbers to those of the next home block.
;	0864	!
;	0865	
;	0866	BUFFER[HM2$L_HOMELBN] = .BUFFER[HM2$L_HOMELBN] + 1;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 4-1
; Digital Equipment Corporation
;
;	0867	BUFFER[HM2$W_HOMEVBN] = .BUFFER[HM2$W_HOMEVBN] + 1;
;	0868	
;	0869	END;					! end of routine WRITE_HOMEBLOCK





					 0800 0044B WRITE_HOMEBLOCK:
							    .WORD   Save R11						      ; 0812
		         5B	0000G  CF  9E 0044D 	    MOVAB   BUFFER, R11						      ;
				       3A  DD 00452 	    PUSHL   #58							      ; 0859
				       5B  DD 00454 	    PUSHL   R11							      ;
		  0000G  CF	       02  FB 00456 	    CALLS   #2, CHECKSUM2					      ;
		         7E	01FE   8F  3C 0045B 	    MOVZWL  #510, -(SP)						      ; 0860
				       5B  DD 00460 	    PUSHL   R11							      ;
		  0000G  CF	       02  FB 00462 	    CALLS   #2, CHECKSUM2					      ;
				       5B  DD 00467 	    PUSHL   R11							      ; 0861
				       6B  DD 00469 	    PUSHL   BUFFER						      ;
		  0000G  CF	       02  FB 0046B 	    CALLS   #2, WRITE_BLOCK					      ;
				       6B  D6 00470 	    INCL    BUFFER						      ; 0866
				  10   AB  B6 00472 	    INCW    BUFFER+16						      ; 0867
					   04 00475 	    RET     							      ; 0812

; Routine Size:  43 bytes



; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 5
; Digital Equipment Corporation
;
;	0870	ROUTINE MAKE_POINTER (COUNT, LBN) : NOVALUE =
;	0871	
;	0872	!++
;	0873	!
;	0874	! FUNCTIONAL DESCRIPTION:
;	0875	!
;	0876	!	This routine appends a retrieval pointer to the map area of the current
;	0877	!	file header describing the given count and LBN.
;	0878	!
;	0879	!
;	0880	! CALLING SEQUENCE:
;	0881	!	MAKE_POINTER (ARG1, ARG2)
;	0882	!
;	0883	! INPUT PARAMETERS:
;	0884	!	ARG1: block count
;	0885	!	ARG2: start LBN
;	0886	!
;	0887	! IMPLICIT INPUTS:
;	0888	!	BUFFER contains file header
;	0889	!
;	0890	! OUTPUT PARAMETERS:
;	0891	!	NONE
;	0892	!
;	0893	! IMPLICIT OUTPUTS:
;	0894	!	retrieval pointer added to header
;	0895	!
;	0896	! ROUTINE VALUE:
;	0897	!	NONE
;	0898	!
;	0899	! SIDE EFFECTS:
;	0900	!	NONE
;	0901	!
;	0902	!--
;	0903	
;	0904	BEGIN
;	0905	
;	0906	LOCAL
;	0907		MAP_POINTER	: REF BBLOCK;	! pointer to map area
;	0908	
;	0909	EXTERNAL
;	0910		BUFFER		: BBLOCK;	! buffer containing file header
;	0911	
;	0912	
;	0913	! Compute the address in the file header where the pointer should go.
;	0914	! Then determine the format of the pointer and build it.
;	0915	!
;	0916	
;	0917	MAP_POINTER = BUFFER + 2 * (.BUFFER[FH2$B_MPOFFSET] + .BUFFER[FH2$B_MAP_INUSE]);
;	0918	
;	0919	IF .COUNT LEQU 256 AND .LBN LSSU 1^22
;	0920	THEN
;	0921	    BEGIN
;	0922	    MAP_POINTER[FM2$V_FORMAT] = FM2$C_FORMAT1;
;	0923	    MAP_POINTER[FM2$B_COUNT1] = .COUNT - 1;
;	0924	    MAP_POINTER[FM2$V_HIGHLBN] = .LBN<16,6>;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 5-1
; Digital Equipment Corporation
;
;	0925	    MAP_POINTER[FM2$W_LOWLBN] = .LBN<0,16>;
;	0926	    BUFFER[FH2$B_MAP_INUSE] = .BUFFER[FH2$B_MAP_INUSE] + 2;
;	0927	    END
;	0928	
;	0929	ELSE IF .COUNT LEQU 16384
;	0930	THEN
;	0931	    BEGIN
;	0932	    MAP_POINTER[FM2$V_FORMAT] = FM2$C_FORMAT2;
;	0933	    MAP_POINTER[FM2$V_COUNT2] = .COUNT - 1;
;	0934	    MAP_POINTER[FM2$L_LBN2] = .LBN;
;	0935	    BUFFER[FH2$B_MAP_INUSE] = .BUFFER[FH2$B_MAP_INUSE] + 3;
;	0936	    END
;	0937	
;	0938	ELSE IF .COUNT LEQU 1^30
;	0939	THEN
;	0940	    BEGIN
;	0941	    MAP_POINTER[FM2$V_FORMAT] = FM2$C_FORMAT3;
;	0942	    MAP_POINTER[FM2$V_COUNT2] = (.COUNT - 1)<16,14>;
;	0943	    MAP_POINTER[FM2$W_LOWCOUNT] = (.COUNT - 1)<0,16>;
;	0944	    MAP_POINTER[FM2$L_LBN3] = .LBN;
;	0945	    BUFFER[FH2$B_MAP_INUSE] = .BUFFER[FH2$B_MAP_INUSE] + 4;
;	0946	    END
;	0947	
;	0948	ELSE ERR_EXIT (INIT$_LARGECNT);
;	0949	
;	0950	END;					! end of routine MAKE_POINTER





					 0804 00476 MAKE_POINTER:
							    .WORD   Save R2,R11						      ; 0870
		         5B	0000G  CF  9E 00478 	    MOVAB   BUFFER+58, R11					      ;
		         50	  C7   AB  9A 0047D 	    MOVZBL  BUFFER+1, R0					      ; 0917
		         51	       6B  9A 00481 	    MOVZBL  BUFFER+58, R1					      ;
		         50	       51  C0 00484 	    ADDL2   R1, R0						      ;
		         50	  C6 AB40  3E 00487 	    MOVAW   BUFFER[R0], MAP_POINTER				      ;
		         51	  04   AC  D0 0048C 	    MOVL    COUNT, R1						      ; 0919
	      00000100   8F	       51  D1 00490 	    CMPL    R1, #256						      ;
				       23  1A 00497 	    BGTRU   1$							      ;
	      00400000   8F	  08   AC  D1 00499 	    CMPL    LBN, #4194304					      ;
				       19  1E 004A1 	    BGEQU   1$							      ;
	   02	         0E	       01  F0 004A3 	    INSV    #1, #14, #2, (MAP_POINTER)				      ; 0922
				       60     004A7									      ;
	   60	         51	       01  83 004A8 	    SUBB3   #1, R1, (MAP_POINTER)				      ; 0923
	   06	         00	  0A   AC  F0 004AC 	    INSV    LBN, #0, #6, 1(MAP_POINTER)				      ; 0924
				  01   A0     004B1									      ;
		    02   A0	  08   AC  B0 004B3 	    MOVW    LBN, 2(MAP_POINTER)					      ; 0925
		         6B	       02  80 004B8 	    ADDB2   #2, BUFFER+58					      ; 0926
					   04 004BB 	    RET     							      ; 0919
	      00004000   8F	       51  D1 004BC 1$:     CMPL    R1, #16384						      ; 0929
				       17  1A 004C3 	    BGTRU   2$							      ;
	   02	         0E	       02  F0 004C5 	    INSV    #2, #14, #2, (MAP_POINTER)				      ; 0932
				       60     004C9									      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27	DBB3:[INIT.SRC]ININDX.B32;9					Page 5-2
; Digital Equipment Corporation
;
	   52	         51	       01  C3 004CA 	    SUBL3   #1, R1, R2						      ; 0933
	   0E	         00	       52  F0 004CE 	    INSV    R2, #0, #14, (MAP_POINTER)				      ;
				       60     004D2									      ;
		    02   A0	  08   AC  D0 004D3 	    MOVL    LBN, 2(MAP_POINTER)					      ; 0934
		         6B	       03  80 004D8 	    ADDB2   #3, BUFFER+58					      ; 0935
					   04 004DB 	    RET     							      ; 0929
	      40000000   8F	       51  D1 004DC 2$:     CMPL    R1, #1073741824					      ; 0938
				       1C  1A 004E3 	    BGTRU   3$							      ;
		    01   A0	  C0   8F  88 004E5 	    BISB2   #192, 1(MAP_POINTER)				      ; 0941
	   52	         51	       01  C1 004EA 	    ADDL3   #1, R1, R2						      ; 0942
	   0E	         00	       52  F0 004EE 	    INSV    R2, #0, #14, (MAP_POINTER)				      ;
				       60     004F2									      ;
      02   A0	         51	       01  A3 004F3 	    SUBW3   #1, R1, 2(MAP_POINTER)				      ; 0943
		    04   A0	  08   AC  D0 004F8 	    MOVL    LBN, 4(MAP_POINTER)					      ; 0944
		         6B	       04  80 004FD 	    ADDB2   #4, BUFFER+58					      ; 0945
					   04 00500 	    RET     							      ; 0938
			    007580DC   8F  DD 00501 3$:     PUSHL   #7700700						      ; 0948
	      00000000G  00	       01  FB 00507 	    CALLS   #1, LIB$STOP					      ;
					   04 0050E 	    RET     							      ; 0870

; Routine Size:  153 bytes


;	0951	
;	0952	END
;	0953	ELUDOM




							    .GLOBL  LIB$STOP

;				       PSECT SUMMARY
;
;	Name		 Bytes			       Attributes
;
;  $PLIT$         	   292  NOWRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $CODE$         	  1295  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]LIB.L32;1		      5582        78         1       243





; Size:		1295 code + 292 data bytes
; Run Time:	00:45.3

; Bliss-32 7.352	Saturday 22-AUG-1978 00:26:27									Page 5-3
; Digital Equipment Corporation
;
; Elapsed Time:	01:24.0
; Memory Used:	485 pages
; Compilation Complete
