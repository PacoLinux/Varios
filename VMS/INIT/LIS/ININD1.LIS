
; Bliss-32 7.352	Saturday 22-AUG-1978 00:25:23	DBB3:[INIT.SRC]ININD1.B32;14					Page 1
; Digital Equipment Corporation
;
;	0001	MODULE ININD1 (
;	0002			LANGUAGE (BLISS32),
;	0003			IDENT = 'X0006'
;	0004			) =
;	0005	BEGIN
;	0006	
;	0007	!
;	0008	! Copyright (c) 1977
;	0009	! Digital Equipment Corporation, Maynard, Massachusetts 01754
;	0010	!
;	0011	! This software is furnished  under a license for use only on a single
;	0012	! computer  system and  may be  copied only with  the inclusion of the
;	0013	! above copyright notice.  This software, or any other copies thereof,
;	0014	! may not be provided or  otherwise made available to any other person
;	0015	! except for use on such system and to one who agrees to these license
;	0016	! terms.  Title to and  ownership of the  software  shall at all times
;	0017	! remain in DEC.
;	0018	!
;	0019	! The information in this software is subject to change without notice
;	0020	! and should  not be construed  as a commitment  by Digital  Equipment
;	0021	! Corporation.
;	0022	!
;	0023	! DEC assumes  no  responsibility  for  the use or  reliability of its
;	0024	! software on equipment which is not supplied by DEC.
;	0025	
;	0026	!++
;	0027	!
;	0028	! FACILITY:  INIT Utility Structure Level 1
;	0029	!
;	0030	! ABSTRACT:
;	0031	!
;	0032	!	This module contains the routines that initialize the contents
;	0033	!	of a disk's index file for structure level 1: boot and home blocks,
;	0034	!	bitmap, and the	initial file headers.
;	0035	!
;	0036	! ENVIRONMENT:
;	0037	!
;	0038	!	STARLET operating system, including privileged system services
;	0039	!	and internal exec routines.
;	0040	!
;	0041	!--
;	0042	!
;	0043	!
;	0044	! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  14-Nov-1977  10:16
;	0045	!
;	0046	! REVISION HISTORY:
;	0047	!
;	0048	!   Andrew C. Goldstein, 3-Jan-1978  21:58
;	0049	!   X0002 - File header bug fixes
;	0050	!
;	0051	!   Andrew C. Goldstein, 22-Jan-1978  18:18
;	0052	!   X0003 - Change file name in header to ASCII
;	0053	!
;	0054	!   Andrew C. Goldstein, 16-Feb-1978  16:26
;	0055	!   X0004 - Pad format name to 12 characters

; Bliss-32 7.352	Saturday 22-AUG-1978 00:25:23	DBB3:[INIT.SRC]ININD1.B32;14					Page 1-1
; Digital Equipment Corporation
;
;	0056	!
;	0057	!   Andrew C. Goldstein, 23-May-78  14:38
;	0058	!   X0005 - Add Structure Level 2 reserved files
;	0059	!
;	0060	!   Andrew C. Goldstein, 7-Jun-78  21:17
;	0061	!   X0006 - Modify for structure level 1
;	0062	!
;	0063	!**
;	0064	
;	0065	
;	0066	LIBRARY 'SYS$LIBRARY:LIB.L32';
;	0067	REQUIRE 'SRC$:INIDEF.B32';
;	0329	REQUIRE 'LIBD$:[VMSLIB.OBJ]INITMSG.B32';
;	0389	
;	0390	
;	0391	FORWARD ROUTINE
;	0392		INIT_INDEX1	: NOVALUE,	! main index file initialization
;	0393		MAKE_POINTER	: NOVALUE;	! construct retrieval pointer

; Bliss-32 7.352	Saturday 22-AUG-1978 00:25:23	DBB3:[INIT.SRC]ININD1.B32;14					Page 2
; Digital Equipment Corporation
;
;	0394	!+
;	0395	!
;	0396	! Own storage.
;	0397	!
;	0398	! Boot program. The following PDP-11 program will type out the attached
;	0399	! message when the volume is booted on a PDP-11, informing the user that
;	0400	! this is not a system disk.
;	0401	!
;	0402	!-
;	0403	
;	0404	BIND
;	0405		BOOT_PROGRAM	= UPLIT WORD (
;	0406	
;	0407	%O'000240',		     !  BOOTBK:	NOP			; NOP IDENTIFIES BOOT BLOCK
;	0408	%O'012706',  %O'001000',     !		MOV	#1000,SP	; SET TEMP STACK
;	0409	%O'010700',		     !	 	MOV	PC,R0		; SET ADDRESS
;	0410	%O'062700',  %O'000036',     !		ADD	#BOTMSG-.,R0	; OF MESSAGE
;	0411	%O'112001',		     !  10$:	MOVB	(R0)+,R1	; GET NEXT CHARACTER
;	0412	%O'001403',		     !	 	BEQ	20$		; END
;	0413	%O'004767',  %O'000006',     !		CALL	TYPIT		; NO, PRINT IT
;	0414	%O'000773',		     !	 	BR	10$		; LOOP FOR NEXT CHARACTER
;	0415	%O'000005',		     !  20$:	RESET			;
;	0416	%O'000000',		     !	 	HALT			; HALT
;	0417				     !
;	0418				     !
;	0419	%O'110137',  %O'177566',     ! 	TYPIT:	MOVB	R1,@#TPB	; PRINT CHARACTER
;	0420	%O'105737',  %O'177564',     ! 	10$:	TSTB	@#TPS		; DONE?
;	0421	%O'100375',		     !	 	BPL	10$		; NO, WAIT
;	0422	%O'000207'		     !		RETURN			;
;	0423				     !
;	0424				     !
;	0425				     !	BOTMSG:
;	0426	
;	0427				);
;	0428	
;	0429	LITERAL
;	0430		BOOT_PROG_LEN	= 38;
;	0431	
;	0432	!+
;	0433	!
;	0434	! Boot message. Contains the volume label.
;	0435	!
;	0436	!-
;	0437	
;	0438	BIND
;	0439		BOOT_MESSAGE	= UPLIT BYTE (13, 10, 10,
;	0440				  '             is not a system disk', 13, 10, 10, 0);
;	0441	
;	0442	LITERAL
;	0443		BOOT_MESG_LEN	= 40;
;	0444	
;	0445	MACRO
;	0446		BTB$T_VOLNAME	= 38, 0, 0, 0%;	! volume label in boot block message
;	0447	
;	0448	!

; Bliss-32 7.352	Saturday 22-AUG-1978 00:25:23	DBB3:[INIT.SRC]ININD1.B32;14					Page 2-1
; Digital Equipment Corporation
;
;	0449	! Volume format name string
;	0450	!
;	0451	
;	0452	BIND
;	0453		FORMAT_NAME	= UPLIT BYTE ('DECFILE11A  ');
;	0454	
;	0455	!+
;	0456	!
;	0457	! Initial file header. The core image file is used since it is the first
;	0458	! one written.
;	0459	!
;	0460	!-
;	0461	
;	0462	BIND
;	0463		INITIAL_HEADER	= UPLIT (
;	0464							! HEADER area
;	0465		BYTE (FH1$C_LENGTH / 2),		! ident area offset
;	0466		BYTE ((FH1$C_LENGTH + FI1$C_LENGTH)/2),	! map area offset
;	0467		WORD (5, 5),				! file ID
;	0468		BYTE (1, 1),				! structure version and level
;	0469		WORD (0),				! file owner UIC
;	0470		WORD (0),				! file protection
;	0471		WORD (0),				! file characteristics
;	0472		BYTE (0),				! record type
;	0473		BYTE (0),				! no record attributes
;	0474		WORD (0),				! record size
;	0475		LONG (0, 0),				! HIBLK and EFBLK
;	0476		WORD (0),				! EOF byte offset
;	0477		BYTE (0, 0),				! bucket size & VFC length
;	0478		WORD (0),				! maximum record length
;	0479		WORD (0),				! default extend size
;	0480		WORD (0, 0, 0, 0, 0, 0),		! unused record attributes
;	0481	
;	0482							! IDENT area
;	0483		WORD (%RAD50_11'CORIMG   SYS', 1),	! file name, type and version
;	0484		WORD (1),				! revision number
;	0485		BYTE (REP 34 OF (0)),			! dates
;	0486	
;	0487							! MAP area
;	0488		BYTE (0),				! file segment number
;	0489		BYTE (0),				! extension RVN
;	0490		WORD (0, 0),				! extension file ID
;	0491		BYTE (1, 3),				! map pointer count & LBN size
;	0492		BYTE (0),				! map words in use
;	0493		BYTE ((512-2-FH1$C_LENGTH-FI1$C_LENGTH-FM1$C_LENGTH)/2)
;	0494							! map words available
;	0495	
;	0496		);

; Bliss-32 7.352	Saturday 22-AUG-1978 00:25:23	DBB3:[INIT.SRC]ININD1.B32;14					Page 3
; Digital Equipment Corporation
;
;	0497	GLOBAL ROUTINE INIT_INDEX1 : NOVALUE =
;	0498	
;	0499	!++
;	0500	!
;	0501	! FUNCTIONAL DESCRIPTION:
;	0502	!
;	0503	!	This routine initializes the contents of the disk's index file.
;	0504	!	It writes a dummy boot block, the home blocks, index file bitmap,
;	0505	!	and the initial headers.
;	0506	!
;	0507	!
;	0508	! CALLING SEQUENCE:
;	0509	!	INIT_INDEX1 ()
;	0510	!
;	0511	! INPUT PARAMETERS:
;	0512	!	NONE
;	0513	!
;	0514	! IMPLICIT INPUTS:
;	0515	!	parser data base
;	0516	!	allocation table in INIDSK
;	0517	!
;	0518	! OUTPUT PARAMETERS:
;	0519	!	NONE
;	0520	!
;	0521	! IMPLICIT OUTPUTS:
;	0522	!	NONE
;	0523	!
;	0524	! ROUTINE VALUE:
;	0525	!	NONE
;	0526	!
;	0527	! SIDE EFFECTS:
;	0528	!	index file blocks written
;	0529	!
;	0530	!--
;	0531	
;	0532	BEGIN
;	0533	
;	0534	BUILTIN
;	0535		ROT;
;	0536	
;	0537	LOCAL
;	0538		DATE_TIME	: VECTOR [13, BYTE], ! buffer for current date/time
;	0539		LBN,				! current LBN
;	0540		MAP_COUNT,			! count field of map pointer
;	0541		MAP_LBN;			! start LBN of current map pointer
;	0542	
;	0543	EXTERNAL
;	0544		INIT_OPTIONS	: BITVECTOR,	! command options
;	0545		BUFFER		: BBLOCK,	! I/O buffer
;	0546		VOLUME_SIZE,			! size of volume rounded to next cluster
;	0547		PROTECTION,			! volume protection
;	0548		FILE_PROT,			! default file protection
;	0549		MAXIMUM,			! maximum number of files on volume
;	0550		OWNER_UIC,			! volume owner
;	0551		EXTENSION,			! default file extend

; Bliss-32 7.352	Saturday 22-AUG-1978 00:25:23	DBB3:[INIT.SRC]ININD1.B32;14					Page 3-1
; Digital Equipment Corporation
;
;	0552		WINDOW,				! default window size
;	0553		ACCESSED,			! default directory LRU limit
;	0554		BADBLOCK_TOTAL,			! count of bad blocks on volume
;	0555		LABEL_STRING	: VECTOR,	! string descriptor of volume label
;	0556		USER_NAME	: VECTOR,	! string descriptor of user name
;	0557		ALLOC_TABLE_CNT	: VECTOR,	! allocation count table
;	0558		ALLOC_TABLE_LBN	: VECTOR,	! allocation LBN table
;	0559		BADBLOCK_CNT	: VECTOR,	! bad block count table
;	0560		BADBLOCK_LBN	: VECTOR,	! bad LBN table
;	0561		BOOTBLOCK_CNT,			! boot block cluster block count
;	0562		BOOTBLOCK_LBN,			! boot block cluster LBN
;	0563		HOMEBLOCK1_CNT,			! home block 1 cluster block count
;	0564		HOMEBLOCK1_LBN,			! home block 1 cluster LBN
;	0565		IDXFILE_CNT,			! initial index file count
;	0566		IDXFILE_LBN,			! initial index file LBN
;	0567		BITMAP_CNT,			! storage bitmap block count
;	0568		BITMAP_LBN,			! storage bitmap LBN
;	0569		MFD_CNT,			! MFD block count
;	0570		MFD_LBN;			! MFD LBN
;	0571	
;	0572	EXTERNAL LITERAL
;	0573		BOOTBLOCK_IDX	: UNSIGNED (6),	! allocation table boot block index
;	0574		IDXFILE_IDX	: UNSIGNED (6);	! allocation table index file index
;	0575	
;	0576	BIND
;	0577		IDENT_AREA	= BUFFER + FH1$C_LENGTH : BBLOCK,
;	0578		MAP_AREA	= BUFFER + FH1$C_LENGTH + FI1$C_LENGTH : BBLOCK;
;	0579	
;	0580	EXTERNAL ROUTINE
;	0581		GET_TIME,			! get ASCII date/time string
;	0582		CHECKSUM2,			! compute block checksum
;	0583		WRITE_BLOCK;			! write block to disk
;	0584	
;	0585	
;	0586	! First block to write is the boot block. Set up the message routine for
;	0587	! the -11 and build the message.
;	0588	!
;	0589	
;	0590	CH$COPY (BOOT_PROG_LEN, BOOT_PROGRAM,
;	0591		 BOOT_MESG_LEN, BOOT_MESSAGE,
;	0592		 0, 512, BUFFER);
;	0593	CH$MOVE (.LABEL_STRING[0], .LABEL_STRING[1], BUFFER[BTB$T_VOLNAME]);
;	0594	
;	0595	WRITE_BLOCK (.BOOTBLOCK_LBN, BUFFER);
;	0596	
;	0597	! Now construct and write the home block.
;	0598	!
;	0599	
;	0600	GET_TIME (DATE_TIME[0]);
;	0601	CH$FILL (0, 512, BUFFER);
;	0602	
;	0603	BUFFER[HM1$W_IBMAPSIZE]	= (.MAXIMUM + 4095) / 4096;
;	0604	BUFFER[HM1$L_IBMAPLBN]	= ROT (.IDXFILE_LBN, 16);
;	0605	BUFFER[HM1$W_MAXFILES]	= .MAXIMUM;
;	0606	BUFFER[HM1$W_CLUSTER]	= 1;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:25:23	DBB3:[INIT.SRC]ININD1.B32;14					Page 3-2
; Digital Equipment Corporation
;
;	0607	BUFFER[HM1$W_STRUCLEV]	= HM1$C_LEVEL1;
;	0608	CH$COPY (.LABEL_STRING[0], .LABEL_STRING[1],
;	0609		 0, HM1$S_VOLNAME, BUFFER[HM1$T_VOLNAME]);
;	0610	(BUFFER[HM1$W_VOLOWNER])<0,8>	= .OWNER_UIC<0,8>;
;	0611	(BUFFER[HM1$W_VOLOWNER])<8,8>	= .OWNER_UIC<16,8>;
;	0612	BUFFER[HM1$W_PROTECT]	= .PROTECTION;
;	0613	BUFFER[HM1$W_VOLCHAR]	= HM2$M_NOPHYS OR HM2$M_NOATTACH;
;	0614	BUFFER[HM1$W_FILEPROT]	= .FILE_PROT;
;	0615	BUFFER[HM1$B_WINDOW]	= .WINDOW;
;	0616	BUFFER[HM1$B_EXTEND]	= .EXTENSION;
;	0617	BUFFER[HM1$B_LRU_LIM]	= .ACCESSED;
;	0618	
;	0619	CH$MOVE (13, DATE_TIME[0], BUFFER[HM1$T_CREDATE]);
;	0620	CH$COPY (.LABEL_STRING[0], .LABEL_STRING[1],
;	0621		 32, HM1$S_VOLNAME2, BUFFER[HM1$T_VOLNAME2]);
;	0622	CH$COPY (.USER_NAME[0], .USER_NAME[1],
;	0623		 32, HM1$S_OWNERNAME, BUFFER[HM1$T_OWNERNAME]);
;	0624	CH$MOVE (HM1$S_FORMAT, FORMAT_NAME, BUFFER[HM1$T_FORMAT]);
;	0625	
;	0626	CHECKSUM2 (BUFFER, $BYTEOFFSET (HM1$W_CHECKSUM1));
;	0627	CHECKSUM2 (BUFFER, $BYTEOFFSET (HM1$W_CHECKSUM2));
;	0628	WRITE_BLOCK (.HOMEBLOCK1_LBN, BUFFER);
;	0629	
;	0630	! Now write out the initial index file bitmap. The first block contains the
;	0631	! reserved files marked in use; the rest are all zero.
;	0632	!
;	0633	
;	0634	CH$FILL (0, 512, BUFFER);
;	0635	BUFFER<0,32> = %B'11111';
;	0636	LBN = .IDXFILE_LBN;
;	0637	WRITE_BLOCK (.LBN, BUFFER);
;	0638	
;	0639	BUFFER<0,32> = 0;
;	0640	DECR J FROM (.MAXIMUM+4095)/4096-1 TO 1 DO
;	0641	    BEGIN
;	0642	    LBN = .LBN + 1;
;	0643	    WRITE_BLOCK (.LBN, BUFFER);
;	0644	    END;
;	0645	
;	0646	! Construct and write the initial core image file header.
;	0647	!
;	0648	
;	0649	CH$COPY (FH1$C_LENGTH+FI1$C_LENGTH+FM1$C_LENGTH, INITIAL_HEADER,
;	0650		 0, 512, BUFFER);
;	0651	(BUFFER[FH1$W_FILEOWNER])<0,8> = .OWNER_UIC<0,8>;
;	0652	(BUFFER[FH1$W_FILEOWNER])<8,8> = .OWNER_UIC<16,8>;
;	0653	BUFFER[FH1$W_FILEPROT] = .FILE_PROT;
;	0654	CH$MOVE (13, DATE_TIME, IDENT_AREA[FI1$T_REVDATE]);
;	0655	CH$MOVE (13, DATE_TIME, IDENT_AREA[FI1$T_CREDATE]);
;	0656	CHECKSUM2 (BUFFER, $BYTEOFFSET (FH1$W_CHECKSUM));
;	0657	WRITE_BLOCK (.LBN + 5, BUFFER);
;	0658	
;	0659	! Turn the header into the index file header and write it.
;	0660	!
;	0661	

; Bliss-32 7.352	Saturday 22-AUG-1978 00:25:23	DBB3:[INIT.SRC]ININD1.B32;14					Page 3-3
; Digital Equipment Corporation
;
;	0662	BUFFER[FH1$W_FID_NUM] = 1;
;	0663	BUFFER[FH1$W_FID_SEQ] = 1;
;	0664	(IDENT_AREA[FI1$W_FILENAME])<0,32> = %RAD50_11 'INDEXF';
;	0665	INCR J FROM BOOTBLOCK_IDX TO IDXFILE_IDX DO
;	0666	    BEGIN
;	0667	    IF .ALLOC_TABLE_CNT[.J] NEQ 0
;	0668	    THEN MAKE_POINTER (.ALLOC_TABLE_CNT[.J], .ALLOC_TABLE_LBN[.J]);
;	0669	    END;
;	0670	
;	0671	CHECKSUM2 (BUFFER, $BYTEOFFSET (FH1$W_CHECKSUM));
;	0672	WRITE_BLOCK (.LBN + 1, BUFFER);
;	0673	
;	0674	! Turn the file header into the bad block file header and write it.
;	0675	!
;	0676	
;	0677	CH$FILL (0, 512-FH1$C_LENGTH-FI1$C_LENGTH+FM1$C_LENGTH, BUFFER+FH1$C_LENGTH+FI1$C_LENGTH+FM1$C_LENGTH);
;	0678	BUFFER[FH1$W_FID_NUM] = 3;
;	0679	BUFFER[FH1$W_FID_SEQ] = 3;
;	0680	
;	0681	MAP_AREA[FM1$B_INUSE] = 0;
;	0682	MAP_COUNT = 0;
;	0683	INCR J FROM 0 TO .BADBLOCK_TOTAL-1 DO
;	0684	    MAP_COUNT = .MAP_COUNT + .BADBLOCK_CNT[.J];
;	0685	
;	0686	(IDENT_AREA[FI1$W_FILENAME])<0,32> = %RAD50_11 'BADBLK';
;	0687	INCR J FROM 0 TO .BADBLOCK_TOTAL-1 DO
;	0688	    BEGIN
;	0689	    IF .MAP_AREA[FM1$B_INUSE] GTR (512 - FH1$C_LENGTH - FI1$C_LENGTH - FM1$C_LENGTH - 4 - 2) / 2
;	0690	    THEN ERR_EXIT (INIT$_MAXBAD);
;	0691	    MAKE_POINTER (.BADBLOCK_CNT[.J], .BADBLOCK_LBN[.J]);
;	0692	    END;
;	0693	CHECKSUM2 (BUFFER, $BYTEOFFSET (FH1$W_CHECKSUM));
;	0694	WRITE_BLOCK (.LBN + 3, BUFFER);
;	0695	
;	0696	! Turn the file header into the storage map file header and write it.
;	0697	!
;	0698	
;	0699	CH$FILL (0, 512-FH1$C_LENGTH-FI1$C_LENGTH+FM1$C_LENGTH, BUFFER+FH1$C_LENGTH+FI1$C_LENGTH+FM1$C_LENGTH);
;	0700	BUFFER[FH1$W_FID_NUM] = 2;
;	0701	BUFFER[FH1$W_FID_SEQ] = 2;
;	0702	MAP_AREA[FM1$B_INUSE] = 0;
;	0703	
;	0704	(IDENT_AREA[FI1$W_FILENAME])<0,32> = %RAD50_11 'BITMAP';
;	0705	MAKE_POINTER (1, .BITMAP_LBN);
;	0706	MAKE_POINTER (.BITMAP_CNT-1, .BITMAP_LBN+1);
;	0707	CHECKSUM2 (BUFFER, $BYTEOFFSET (FH1$W_CHECKSUM));
;	0708	WRITE_BLOCK (.LBN + 2, BUFFER);
;	0709	
;	0710	! Turn the file header into the MFD header and write it.
;	0711	!
;	0712	
;	0713	CH$FILL (0, 512-FH1$C_LENGTH-FI1$C_LENGTH+FM1$C_LENGTH, BUFFER+FH1$C_LENGTH+FI1$C_LENGTH+FM1$C_LENGTH);
;	0714	MAP_AREA[FM1$B_INUSE] = 0;
;	0715	BUFFER[FH1$W_FID_NUM] = 4;
;	0716	BUFFER[FH1$W_FID_SEQ] = 4;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:25:23	DBB3:[INIT.SRC]ININD1.B32;14					Page 3-4
; Digital Equipment Corporation
;
;	0717	BUFFER[FH1$V_CONTIG] = 1;
;	0718	BBLOCK [BUFFER[FH1$W_RECATTR], FAT$B_RTYPE] = FAT$C_FIXED;
;	0719	BBLOCK [BUFFER[FH1$W_RECATTR], FAT$W_RSIZE] = 16;
;	0720	BBLOCK [BUFFER[FH1$W_RECATTR], FAT$L_EFBLK] = ROT (2, 16);
;	0721	BBLOCK [BUFFER[FH1$W_RECATTR], FAT$L_HIBLK] = ROT (.MFD_CNT, 16);
;	0722	
;	0723	(IDENT_AREA[FI1$W_FILENAME])<0,32> = %RAD50_11 '000000';
;	0724	(IDENT_AREA[FI1$W_FILENAME])<32,32> = %RAD50_11 '   DIR';
;	0725	MAKE_POINTER (.MFD_CNT, .MFD_LBN);
;	0726	CHECKSUM2 (BUFFER, $BYTEOFFSET (FH1$W_CHECKSUM));
;	0727	WRITE_BLOCK (.LBN + 4, BUFFER);
;	0728	
;	0729	END;					! end of routine INIT_INDEX


							    .TITLE  ININD1
							    .IDENT  \X0006\

							    .PSECT  $PLIT$,NOWRT,NOEXE,2

					      00000 P.AAA:  .WORD   160, 5574, 512, 4544, 26048, 30, -27647, 771, 2551, 6, -  ;
								    507, 5, 0, -28577, -138, -29729, -140, -32515, 135	      ;
					      00026	    .BLKB   2
					      00028 P.AAB:  .BYTE   13, 10, 10						      ;
					      0002B 	    .ASCII  \             is not a system disk\			      ;
					      0004C 	    .BYTE   13, 10, 10, 0					      ;
					      00050 P.AAC:  .ASCII  \DECFILE11A  \					      ;
					      0005C P.AAD:  .BYTE   23							      ;
					      0005D 	    .BYTE   46							      ;
					      0005E 	    .WORD   5, 5						      ;
					      00062 	    .BYTE   1, 1						      ;
					      00064 	    .WORD   0							      ;
					      00066 	    .WORD   0							      ;
					      00068 	    .WORD   0							      ;
					      0006A 	    .BYTE   0							      ;
					      0006B 	    .BYTE   0							      ;
					      0006C 	    .WORD   0							      ;
					      0006E 	    .LONG   0, 0						      ;
					      00076 	    .WORD   0							      ;
					      00078 	    .BYTE   0, 0						      ;
					      0007A 	    .WORD   0							      ;
					      0007C 	    .WORD   0							      ;
					      0007E 	    .WORD   0, 0, 0, 0, 0, 0					      ;
					      0008A 	    .RAD50  \CORIMG   SYS\					      ;
					      00092 	    .WORD   1							      ;
					      00094 	    .WORD   1							      ;
					      00096 	    .BYTE   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -;
								    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0		      ;
					      000B8 	    .BYTE   0							      ;
					      000B9 	    .BYTE   0							      ;
					      000BA 	    .WORD   0, 0						      ;
					      000BE 	    .BYTE   1, 3						      ;
					      000C0 	    .BYTE   0							      ;
					      000C1 	    .BYTE   -52							      ;
					      000C2	    .BLKB   2

; Bliss-32 7.352	Saturday 22-AUG-1978 00:25:23	DBB3:[INIT.SRC]ININD1.B32;14					Page 3-5
; Digital Equipment Corporation
;

						    BOOT_PROGRAM=	P.AAA
						    BOOT_MESSAGE=	P.AAB
						    FORMAT_NAME=	P.AAC
						    INITIAL_HEADER=	P.AAD
							    .GLOBL  INIT_OPTIONS, BUFFER, VOLUME_SIZE, PROTECTION
							    .GLOBL  FILE_PROT, MAXIMUM, OWNER_UIC, EXTENSION, WINDOW
							    .GLOBL  ACCESSED, BADBLOCK_TOTAL, LABEL_STRING, USER_NAME
							    .GLOBL  ALLOC_TABLE_CNT, ALLOC_TABLE_LBN, BADBLOCK_CNT
							    .GLOBL  BADBLOCK_LBN, BOOTBLOCK_CNT, BOOTBLOCK_LBN, HOMEBLOCK1_CNT
							    .GLOBL  HOMEBLOCK1_LBN, IDXFILE_CNT, IDXFILE_LBN, BITMAP_CNT
							    .GLOBL  BITMAP_LBN, MFD_CNT, MFD_LBN, BOOTBLOCK_IDX, IDXFILE_IDX
							    .GLOBL  GET_TIME, CHECKSUM2, WRITE_BLOCK

							    .PSECT  $CODE$,NOWRT,2

					 0FFC 00000 	    .ENTRY  INIT_INDEX1, Save R2,R3,R4,R5,R6,R7,R8,R9,R10,R11	      ; 0497
		         57	0000V  CF  9E 00002 	    MOVAB   MAKE_POINTER, R7					      ;
		         58	0000G  CF  9E 00007 	    MOVAB   LABEL_STRING, R8					      ;
		         59	0000G  CF  9E 0000C 	    MOVAB   CHECKSUM2, R9					      ;
		         5A	0000G  CF  9E 00011 	    MOVAB   WRITE_BLOCK, R10					      ;
		         5B	0000G  CF  9E 00016 	    MOVAB   BUFFER, R11						      ;
		         5E	       10  C2 0001B 	    SUBL2   #16, SP						      ;
	   6B	  0000'  CF	       26  28 0001E 	    MOVC3   #38, BOOT_PROGRAM, BUFFER				      ; 0590
	   00	  0000'  CF	       28  2C 00024 	    MOVC5   #40, BOOT_MESSAGE, #0, #474, (R3)			      ;
		         63	01DA   8F     0002A									      ;
      26   AB	    04   B8	       68  28 0002E 	    MOVC3   LABEL_STRING, @LABEL_STRING+4, BUFFER+38		      ; 0593
				       5B  DD 00034 	    PUSHL   R11							      ; 0595
				0000G  CF  DD 00036 	    PUSHL   BOOTBLOCK_LBN					      ;
		         6A	       02  FB 0003A 	    CALLS   #2, WRITE_BLOCK					      ;
				       5E  DD 0003D 	    PUSHL   SP							      ; 0600
		  0000G  CF	       01  FB 0003F 	    CALLS   #1, GET_TIME					      ;
	   00	         6E	       00  2C 00044 	    MOVC5   #0, (SP), #0, #512, BUFFER				      ; 0601
		         6B	0200   8F     00048									      ;
	   50	  0000G  CF 00000FFF   8F  C1 0004C 	    ADDL3   #4095, MAXIMUM, R0					      ; 0603
	   51	         50 00001000   8F  C7 00056 	    DIVL3   #4096, R0, R1					      ;
		         6B	       51  B0 0005E 	    MOVW    R1, BUFFER						      ;
      02   AB	  0000G  CF	       10  9C 00061 	    ROTL    #16, IDXFILE_LBN, BUFFER+2				      ; 0604
		    06   AB	0000G  CF  B0 00068 	    MOVW    MAXIMUM, BUFFER+6					      ; 0605
		    08   AB	       01  B0 0006E 	    MOVW    #1, BUFFER+8					      ; 0606
		    0C   AB	0101   8F  B0 00072 	    MOVW    #257, BUFFER+12					      ; 0607
	   00	    04   B8	       68  2C 00078 	    MOVC5   LABEL_STRING, @LABEL_STRING+4, #0, #12, BUFFER+14	      ; 0608
		    0E   AB	       0C     0007D									      ;
		    1E   AB	0000G  CF  90 00080 	    MOVB    OWNER_UIC, BUFFER+30				      ; 0610
		    1F   AB	0000G  CF  90 00086 	    MOVB    OWNER_UIC+2, BUFFER+31				      ; 0611
		    20   AB	0000G  CF  B0 0008C 	    MOVW    PROTECTION, BUFFER+32				      ; 0612
		    22   AB	       18  B0 00092 	    MOVW    #24, BUFFER+34					      ; 0613
		    24   AB	0000G  CF  B0 00096 	    MOVW    FILE_PROT, BUFFER+36				      ; 0614
		    2C   AB	0000G  CF  90 0009C 	    MOVB    WINDOW, BUFFER+44					      ; 0615
		    2D   AB	0000G  CF  90 000A2 	    MOVB    EXTENSION, BUFFER+45				      ; 0616
		    2E   AB	0000G  CF  90 000A8 	    MOVB    ACCESSED, BUFFER+46					      ; 0617
      3C   AB	         6E	       0D  28 000AE 	    MOVC3   #13, DATE_TIME, BUFFER+60				      ; 0619
	   20	    04   B8	       68  2C 000B3 	    MOVC5   LABEL_STRING, @LABEL_STRING+4, #32, #12, BUFFER+472       ; 0620
		  01D8   CB	       0C     000B8									      ;
	   20	  0000G  DF	0000G  CF  2C 000BC 	    MOVC5   USER_NAME, @USER_NAME+4, #32, #12, BUFFER+484	      ; 0622

; Bliss-32 7.352	Saturday 22-AUG-1978 00:25:23	DBB3:[INIT.SRC]ININD1.B32;14					Page 3-6
; Digital Equipment Corporation
;
		  01E4   CB	       0C     000C4									      ;
    01F0   CB	  0000'  CF	       0C  28 000C8 	    MOVC3   #12, FORMAT_NAME, BUFFER+496			      ; 0624
				       3A  DD 000D0 	    PUSHL   #58							      ; 0626
				       5B  DD 000D2 	    PUSHL   R11							      ;
		         69	       02  FB 000D4 	    CALLS   #2, CHECKSUM2					      ;
		         7E	01FE   8F  3C 000D7 	    MOVZWL  #510, -(SP)						      ; 0627
				       5B  DD 000DC 	    PUSHL   R11							      ;
		         69	       02  FB 000DE 	    CALLS   #2, CHECKSUM2					      ;
				       5B  DD 000E1 	    PUSHL   R11							      ; 0628
				0000G  CF  DD 000E3 	    PUSHL   HOMEBLOCK1_LBN					      ;
		         6A	       02  FB 000E7 	    CALLS   #2, WRITE_BLOCK					      ;
	   00	         6E	       00  2C 000EA 	    MOVC5   #0, (SP), #0, #512, BUFFER				      ; 0634
		         6B	0200   8F     000EE									      ;
		         6B	       1F  D0 000F2 	    MOVL    #31, BUFFER						      ; 0635
		         56	0000G  CF  D0 000F5 	    MOVL    IDXFILE_LBN, LBN					      ; 0636
				0840   8F  BB 000FA 	    PUSHR   #^M<R6,R11>						      ; 0637
		         6A	       02  FB 000FE 	    CALLS   #2, WRITE_BLOCK					      ;
				       6B  D4 00101 	    CLRL    BUFFER						      ; 0639
	   50	  0000G  CF 00000FFF   8F  C1 00103 	    ADDL3   #4095, MAXIMUM, R0					      ; 0640
		         50 00001000   8F  C6 0010D 	    DIVL2   #4096, R0						      ;
		         52	       50  D0 00114 	    MOVL    R0, J						      ;
				       09  11 00117 	    BRB     2$							      ;
				       56  D6 00119 1$:     INCL    LBN							      ; 0642
				0840   8F  BB 0011B 	    PUSHR   #^M<R6,R11>						      ; 0643
		         6A	       02  FB 0011F 	    CALLS   #2, WRITE_BLOCK					      ;
		         F4	       52  F5 00122 2$:     SOBGTR  J, 1$						      ; 0640
	   00	  0000'  CF	0066   8F  2C 00125 	    MOVC5   #102, INITIAL_HEADER, #0, #512, BUFFER		      ; 0649
		         6B	0200   8F     0012D									      ;
		    08   AB	0000G  CF  90 00131 	    MOVB    OWNER_UIC, BUFFER+8					      ; 0651
		    09   AB	0000G  CF  90 00137 	    MOVB    OWNER_UIC+2, BUFFER+9				      ; 0652
		    0A   AB	0000G  CF  B0 0013D 	    MOVW    FILE_PROT, BUFFER+10				      ; 0653
      3A   AB	         6E	       0D  28 00143 	    MOVC3   #13, DATE_TIME, IDENT_AREA+12			      ; 0654
      47   AB	         6E	       0D  28 00148 	    MOVC3   #13, DATE_TIME, IDENT_AREA+25			      ; 0655
		         7E	01FE   8F  3C 0014D 	    MOVZWL  #510, -(SP)						      ; 0656
				       5B  DD 00152 	    PUSHL   R11							      ;
		         69	       02  FB 00154 	    CALLS   #2, CHECKSUM2					      ;
				       5B  DD 00157 	    PUSHL   R11							      ; 0657
				  05   A6  9F 00159 	    PUSHAB  5(LBN)						      ;
		         6A	       02  FB 0015C 	    CALLS   #2, WRITE_BLOCK					      ;
		    02   AB 00010001   8F  D0 0015F 	    MOVL    #65537, BUFFER+2					      ; 0662
		    2E   AB 23063A74   8F  D0 00167 	    MOVL    #587610740, IDENT_AREA				      ; 0664
	   52	         00	       01  C3 0016F 	    SUBL3   #1, #BOOTBLOCK_IDX, J				      ; 0665
				       12  11 00173 	    BRB     4$							      ;
		         50	0000GCF42  D0 00175 3$:     MOVL    ALLOC_TABLE_CNT[J], R0				      ; 0667
				       0A  13 0017B 	    BEQL    4$							      ;
				0000GCF42  DD 0017D 	    PUSHL   ALLOC_TABLE_LBN[J]					      ; 0668
				       50  DD 00182 	    PUSHL   R0							      ;
		         67	       02  FB 00184 	    CALLS   #2, MAKE_POINTER					      ;
	   EA	         52	       00  F3 00187 4$:     AOBLEQ  #IDXFILE_IDX, J, 3$					      ; 0665
		         7E	01FE   8F  3C 0018B 	    MOVZWL  #510, -(SP)						      ; 0671
				       5B  DD 00190 	    PUSHL   R11							      ;
		         69	       02  FB 00192 	    CALLS   #2, CHECKSUM2					      ;
				       5B  DD 00195 	    PUSHL   R11							      ; 0672
				  01   A6  9F 00197 	    PUSHAB  1(LBN)						      ;
		         6A	       02  FB 0019A 	    CALLS   #2, WRITE_BLOCK					      ;

; Bliss-32 7.352	Saturday 22-AUG-1978 00:25:23	DBB3:[INIT.SRC]ININD1.B32;14					Page 3-7
; Digital Equipment Corporation
;
	   00	         6E	       00  2C 0019D 	    MOVC5   #0, (SP), #0, #430, BUFFER+102			      ; 0677
		    66   AB	01AE   8F     001A1									      ;
		    02   AB 00030003   8F  D0 001A6 	    MOVL    #196611, BUFFER+2					      ; 0678
				  64   AB  94 001AE 	    CLRB    MAP_AREA+8						      ; 0681
				       51  D4 001B1 	    CLRL    MAP_COUNT						      ; 0682
		         53	0000G  CF  D0 001B3 	    MOVL    BADBLOCK_TOTAL, R3					      ; 0683
		         50	       01  CE 001B8 	    MNEGL   #1, J						      ;
				       06  11 001BB 	    BRB     6$							      ;
		         51	0000GCF40  C0 001BD 5$:     ADDL2   BADBLOCK_CNT[J], MAP_COUNT				      ; 0684
	   F6	         50	       53  F2 001C3 6$:     AOBLSS  R3, J, 5$						      ; 0683
		    2E   AB 0E6B0CAC   8F  D0 001C7 	    MOVL    #241896620, IDENT_AREA				      ; 0686
		         52	       01  CE 001CF 	    MNEGL   #1, J						      ; 0687
				       21  11 001D2 	    BRB     9$							      ;
		    CA   8F	  64   AB  91 001D4 7$:     CMPB    MAP_AREA+8, #202					      ; 0689
				       0D  1B 001D9 	    BLEQU   8$							      ;
			    007580BC   8F  DD 001DB 	    PUSHL   #7700668						      ; 0690
	      00000000G  00	       01  FB 001E1 	    CALLS   #1, LIB$STOP					      ;
				0000GCF42  DD 001E8 8$:     PUSHL   BADBLOCK_LBN[J]					      ; 0691
				0000GCF42  DD 001ED 	    PUSHL   BADBLOCK_CNT[J]					      ;
		         67	       02  FB 001F2 	    CALLS   #2, MAKE_POINTER					      ;
	   DB	         52	       53  F2 001F5 9$:     AOBLSS  R3, J, 7$						      ; 0687
		         7E	01FE   8F  3C 001F9 	    MOVZWL  #510, -(SP)						      ; 0693
				       5B  DD 001FE 	    PUSHL   R11							      ;
		         69	       02  FB 00200 	    CALLS   #2, CHECKSUM2					      ;
				       5B  DD 00203 	    PUSHL   R11							      ; 0694
				  03   A6  9F 00205 	    PUSHAB  3(LBN)						      ;
		         6A	       02  FB 00208 	    CALLS   #2, WRITE_BLOCK					      ;
	   00	         6E	       00  2C 0020B 	    MOVC5   #0, (SP), #0, #430, BUFFER+102			      ; 0699
		    66   AB	01AE   8F     0020F									      ;
		    02   AB 00020002   8F  D0 00214 	    MOVL    #131074, BUFFER+2					      ; 0700
				  64   AB  94 0021C 	    CLRB    MAP_AREA+8						      ; 0702
		    2E   AB 51780DFC   8F  D0 0021F 	    MOVL    #1366822396, IDENT_AREA				      ; 0704
				0000G  CF  DD 00227 	    PUSHL   BITMAP_LBN						      ; 0705
				       01  DD 0022B 	    PUSHL   #1							      ;
		         67	       02  FB 0022D 	    CALLS   #2, MAKE_POINTER					      ;
	   7E	  0000G  CF	       01  C1 00230 	    ADDL3   #1, BITMAP_LBN, -(SP)				      ; 0706
	   7E	  0000G  CF	       01  C3 00236 	    SUBL3   #1, BITMAP_CNT, -(SP)				      ;
		         67	       02  FB 0023C 	    CALLS   #2, MAKE_POINTER					      ;
		         7E	01FE   8F  3C 0023F 	    MOVZWL  #510, -(SP)						      ; 0707
				       5B  DD 00244 	    PUSHL   R11							      ;
		         69	       02  FB 00246 	    CALLS   #2, CHECKSUM2					      ;
				       5B  DD 00249 	    PUSHL   R11							      ; 0708
				  02   A6  9F 0024B 	    PUSHAB  2(LBN)						      ;
		         6A	       02  FB 0024E 	    CALLS   #2, WRITE_BLOCK					      ;
	   00	         6E	       00  2C 00251 	    MOVC5   #0, (SP), #0, #430, BUFFER+102			      ; 0713
		    66   AB	01AE   8F     00255									      ;
				  64   AB  94 0025A 	    CLRB    MAP_AREA+8						      ; 0714
		    02   AB 00040004   8F  D0 0025D 	    MOVL    #262148, BUFFER+2					      ; 0715
		    0C   AB	  80   8F  88 00265 	    BISB2   #128, BUFFER+12					      ; 0717
		    0E   AB	       01  90 0026A 	    MOVB    #1, BUFFER+14					      ; 0718
		    10   AB	       10  B0 0026E 	    MOVW    #16, BUFFER+16					      ; 0719
		    16   AB 00020000   8F  D0 00272 	    MOVL    #131072, BUFFER+22					      ; 0720
      12   AB	  0000G  CF	       10  9C 0027A 	    ROTL    #16, MFD_CNT, BUFFER+18				      ; 0721
		    2E   AB C04EC04E   8F  D0 00281 	    MOVL    #-1068580786, IDENT_AREA				      ; 0723
	   20	         20 1A7A0000   8F  F0 00289 	    INSV    #444203008, #32, #32, IDENT_AREA			      ; 0724

; Bliss-32 7.352	Saturday 22-AUG-1978 00:25:23	DBB3:[INIT.SRC]ININD1.B32;14					Page 3-8
; Digital Equipment Corporation
;
				  2E   AB     00291									      ;
				0000G  CF  DD 00293 	    PUSHL   MFD_LBN						      ; 0725
				0000G  CF  DD 00297 	    PUSHL   MFD_CNT						      ;
		         67	       02  FB 0029B 	    CALLS   #2, MAKE_POINTER					      ;
		         7E	01FE   8F  3C 0029E 	    MOVZWL  #510, -(SP)						      ; 0726
				       5B  DD 002A3 	    PUSHL   R11							      ;
		         69	       02  FB 002A5 	    CALLS   #2, CHECKSUM2					      ;
				       5B  DD 002A8 	    PUSHL   R11							      ; 0727
				  04   A6  9F 002AA 	    PUSHAB  4(LBN)						      ;
		         6A	       02  FB 002AD 	    CALLS   #2, WRITE_BLOCK					      ;
					   04 002B0 	    RET     							      ; 0497

; Routine Size:  689 bytes



; Bliss-32 7.352	Saturday 22-AUG-1978 00:25:23	DBB3:[INIT.SRC]ININD1.B32;14					Page 4
; Digital Equipment Corporation
;
;	0730	ROUTINE MAKE_POINTER (COUNT, LBN) : NOVALUE =
;	0731	
;	0732	!++
;	0733	!
;	0734	! FUNCTIONAL DESCRIPTION:
;	0735	!
;	0736	!	This routine appends retrieval pointers to the map area of the current
;	0737	!	file header describing the given count and LBN.
;	0738	!
;	0739	!
;	0740	! CALLING SEQUENCE:
;	0741	!	MAKE_POINTER (ARG1, ARG2)
;	0742	!
;	0743	! INPUT PARAMETERS:
;	0744	!	ARG1: block count
;	0745	!	ARG2: start LBN
;	0746	!
;	0747	! IMPLICIT INPUTS:
;	0748	!	BUFFER contains file header
;	0749	!
;	0750	! OUTPUT PARAMETERS:
;	0751	!	NONE
;	0752	!
;	0753	! IMPLICIT OUTPUTS:
;	0754	!	retrieval pointer added to header
;	0755	!
;	0756	! ROUTINE VALUE:
;	0757	!	NONE
;	0758	!
;	0759	! SIDE EFFECTS:
;	0760	!	NONE
;	0761	!
;	0762	!--
;	0763	
;	0764	BEGIN
;	0765	
;	0766	LOCAL
;	0767		CURRENT_COUNT,			! running block count
;	0768		CURRENT_LBN,			! running LBN
;	0769		MAP_AREA	: REF BBLOCK,	! pointer to map area
;	0770		MAP_POINTER	: REF BBLOCK;	! pointer to map area
;	0771	
;	0772	EXTERNAL
;	0773		BUFFER		: BBLOCK;	! buffer containing file header
;	0774	
;	0775	
;	0776	! Compute the address in the file header where the pointer should go.
;	0777	! Then determine the format of the pointer and build it.
;	0778	!
;	0779	
;	0780	MAP_AREA = BUFFER + 2 * (.BUFFER[FH2$B_MPOFFSET]);
;	0781	MAP_POINTER = .MAP_AREA + FM1$C_POINTERS + .MAP_AREA[FM1$B_INUSE]*2;
;	0782	CURRENT_COUNT = .COUNT;
;	0783	CURRENT_LBN = .LBN;
;	0784	

; Bliss-32 7.352	Saturday 22-AUG-1978 00:25:23	DBB3:[INIT.SRC]ININD1.B32;14					Page 4-1
; Digital Equipment Corporation
;
;	0785	DO
;	0786	    BEGIN
;	0787	    MAP_AREA[FM1$B_INUSE] = .MAP_AREA[FM1$B_INUSE] + 2;
;	0788	    MAP_POINTER[FM1$B_HIGHLBN] = .CURRENT_LBN<16,8>;
;	0789	    MAP_POINTER[FM1$B_COUNT] = MIN (.CURRENT_COUNT, 256) - 1;
;	0790	    MAP_POINTER[FM1$W_LOWLBN] = .CURRENT_LBN<0,16>;
;	0791	    MAP_POINTER = .MAP_POINTER + 4;
;	0792	
;	0793	    CURRENT_LBN = .CURRENT_LBN + MIN (.CURRENT_COUNT, 256);
;	0794	    CURRENT_COUNT = .CURRENT_COUNT - MIN (.CURRENT_COUNT, 256);
;	0795	    END
;	0796	UNTIL .CURRENT_COUNT EQL 0;
;	0797	
;	0798	END;					! end of routine MAKE_POINTER





					 001C 002B1 MAKE_POINTER:
							    .WORD   Save R2,R3,R4					      ; 0730
		         50	0000G  CF  9A 002B3 	    MOVZBL  BUFFER+1, R0					      ; 0780
		         51	0000GCF40  3E 002B8 	    MOVAW   BUFFER[R0], MAP_AREA				      ;
		         50	  08   A1  9A 002BE 	    MOVZBL  8(MAP_AREA), R0					      ; 0781
		         50	  0A A140  3E 002C2 	    MOVAW   10(MAP_AREA)[R0], MAP_POINTER			      ;
		         53	  04   AC  7D 002C7 	    MOVQ    COUNT, CURRENT_COUNT				      ; 0782
		    08   A1	       02  80 002CB 1$:     ADDB2   #2, 8(MAP_AREA)					      ; 0787
	   54	         08	       10  EF 002CF 	    EXTZV   #16, #8, CURRENT_LBN, R2				      ; 0788
				       52     002D3									      ;
		         60	       52  90 002D4 	    MOVB    R2, (MAP_POINTER)					      ;
		         52	       53  D0 002D7 	    MOVL    CURRENT_COUNT, R2					      ; 0789
	      00000100   8F	       52  D1 002DA 	    CMPL    R2, #256						      ;
				       05  15 002E1 	    BLEQ    2$							      ;
		         52	0100   8F  3C 002E3 	    MOVZWL  #256, R2						      ;
      01   A0	         52	       01  83 002E8 2$:     SUBB3   #1, R2, 1(MAP_POINTER)				      ;
		    02   A0	       54  B0 002ED 	    MOVW    CURRENT_LBN, 2(MAP_POINTER)				      ; 0790
		         50	       04  C0 002F1 	    ADDL2   #4, MAP_POINTER					      ; 0791
		         54	       52  C0 002F4 	    ADDL2   R2, CURRENT_LBN					      ; 0793
		         53	       52  C2 002F7 	    SUBL2   R2, CURRENT_COUNT					      ; 0794
				       CF  12 002FA 	    BNEQ    1$							      ; 0796
					   04 002FC 	    RET     							      ; 0730

; Routine Size:  76 bytes


;	0799	
;	0800	END
;	0801	ELUDOM




							    .GLOBL  LIB$STOP

;				       PSECT SUMMARY

; Bliss-32 7.352	Saturday 22-AUG-1978 00:25:23	DBB3:[INIT.SRC]ININD1.B32;14					Page 4-2
; Digital Equipment Corporation
;
;
;	Name		 Bytes			       Attributes
;
;  $PLIT$         	   196  NOWRT,  RD ,NOEXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)
;  $CODE$         	   765  NOWRT,  RD ,  EXE,NOSHR,  LCL,  REL,  CON,NOPIC,ALIGN(2)




;				LIBRARY STATISTICS
;
;					     -------- Symbols --------    Blocks
;	File				     Total    Loaded   Percent      Read
;
;  DBA4:[SYSLIB]LIB.L32;1		      5582        54         0       239





; Size:		765 code + 196 data bytes
; Run Time:	00:28.6
; Elapsed Time:	01:02.5
; Memory Used:	404 pages
; Compilation Complete
