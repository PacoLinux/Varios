FORTRAN IV-PLUS V02-51D		03:04:25    22-AUG-78		PAGE 1   
EXPROC.FOR   	/TR:BLOCKS/WR

        C	REVISION HISTORY:
        C		29-06-77	TC	ROUTINE CHKMAK ELIMINATED (2.4)
         
0001    	SUBROUTINE ETOBLS (INSTG, OUTSTG)
         
        C	CONVERTS AN EXPRESSION TO STANDARD BLISS EXPRESSION
        C	SYNTAX.
         
0002    	INCLUDE 'SRC$:MDL.CMN/NOLIST'
         
0016    	INTEGER INSTG(81),OUTSTG(81)
0017    	INTEGER I, ICNT, J, K, L, M, N
         
0018    	K = 2
0019    	J = 2
0020    2	IF (J .GT. (INSTG(1)+1)) GOTO 95
0021    	DO 90 I = J, INSTG (1) + 1
0022    	ICNT = I
0023    	IF (INSTG (I) .NE. '<') GOTO 3
0024    	OUTSTG (K) = '('
0025    	GOTO 80
         
0026    3	IF (INSTG (I) .NE. '>')  GOTO 6
0027    	OUTSTG (K) = ')'
0028    	GOTO 80
         
0029    6	IF (INSTG (I) .NE. '@') GOTO 8
0030    	OUTSTG (K) = '^'
0031    	GOTO 80
         
0032    8	IF (INSTG (I) .NE. '!') GOTO 10
0033    	OUTSTG (K) = ' '
0034    	K = K + 1
0035    	OUTSTG (K) = 'O'
0036    	K = K + 1
0037    	OUTSTG (K) = 'R'
0038    	K = K + 1
0039    	OUTSTG (K) = ' '
0040    	GOTO 80
         
0041    10	IF (INSTG (I) .NE. '&') GOTO 15
0042    	OUTSTG (K) = ' '
0043    	K = K + 1
0044    	OUTSTG (K) = 'A'
0045    	K = K + 1
0046    	OUTSTG (K) = 'N'
0047    	K = K + 1
0048    	OUTSTG (K) = 'D'
0049    	K = K + 1
0050    	OUTSTG (K) = ' '
0051    	GOTO 80
         
0052    15	IF ((INSTG (I) .NE. '^') .OR.
        	1	(INSTG (I + 1) .NE. 'C')) GOTO 20
0053    	OUTSTG (K) = ' '
0054    	K = K + 1
FORTRAN IV-PLUS V02-51D		03:04:25    22-AUG-78		PAGE 2   
EXPROC.FOR   	/TR:BLOCKS/WR

0055    	OUTSTG (K) = 'N'
0056    	K = K + 1
0057    	OUTSTG (K) = 'O'
0058    	K = K + 1
0059    	OUTSTG (K) = 'T'
0060    	K = K + 1
0061    	OUTSTG (K) = ' '
0062    	GOTO 100
         
0063    20	IF ((INSTG (I) .NE. '^') .OR.
        	1	(INSTG (I + 1) .NE. 'B')) GOTO 35
0064    	OUTSTG (K) = '%'
0065    	K = K + 1
0066    	OUTSTG (K) = 'B'
0067    	K = K + 1
0068    	OUTSTG (K) = ''''
0069    	K = K + 1
0070    	L = 0
0071    	DO 25 M = I + 2, INSTG (1) + 1
0072    	IF ((INSTG (M) .NE. '1') .AND.
        	1	(INSTG (M) .NE. '0')) GOTO 30
0073    	L = L + 1
0074    	OUTSTG (K) = INSTG (M)
0075    	K = K + 1
0076    25	CONTINUE
0077    30	OUTSTG (K) = ''''
0078    	GOTO 110
         
0079    35	IF ((INSTG (I) .NE. '^') .OR.
        	1	(INSTG (I + 1) .NE. 'O')) GOTO 50
0080    	OUTSTG (K) = '%'
0081    	K = K + 1
0082    	OUTSTG (K) = 'O'
0083    	K = K + 1
0084    	OUTSTG (K) = ''''
0085    	K = K + 1
0086    	L = 0
0087    	DO 40 M = I + 2, INSTG (1) + 1
0088    	IF ((INSTG (M) .LT. '0') .AND.
        	1	(INSTG (M) .GT. '7')) GOTO 45
0089    	L = L + 1
0090    	OUTSTG (K) = INSTG (M)
0091    	K = K + 1
0092    40	CONTINUE
0093    45	OUTSTG (K) = ''''
0094    	GOTO 110
         
0095    50	IF ((INSTG (I) .NE. '^') .OR.
        	1	(INSTG (I + 1) .NE. 'X')) GOTO 65
0096    	OUTSTG (K) = '%'
0097    	K = K + 1
0098    	OUTSTG (K) = 'X'
0099    	K = K + 1
0100    	OUTSTG (K) = ''''
0101    	K = K + 1
0102    	L = 0
FORTRAN IV-PLUS V02-51D		03:04:25    22-AUG-78		PAGE 3   
EXPROC.FOR   	/TR:BLOCKS/WR

0103    	DO 55 M = I + 2, INSTG (1) + 1
0104    	IF (((INSTG (M) .LT. '0') .OR.
        	1	(INSTG (M) .GT. '9')) .AND.
        	2	((INSTG (M) .LT. 'A') .OR.
        	3	(INSTG (M) .GT. 'F'))) GOTO 60
0105    	L = L + 1
0106    	OUTSTG (K) = INSTG (M)
0107    	K = K + 1
0108    55	CONTINUE
0109    60	OUTSTG (K) = ''''
0110    	GOTO 110
         
         
0111    65	IF ((INSTG (I) .NE. '^') .OR.
        	1	(INSTG (I + 1) .NE. 'A')) GOTO 75
0112    	DELIM = INSTG(I+2)
0113    	OUTSTG (K) = ''''
0114    	K = K + 1
0115    	L = 1
0116    	DO 66 M = (I + 3), (INSTG (1) + 1)
0117    	IF (INSTG (M) .EQ. DELIM) GOTO 67
0118    	OUTSTG (K) = INSTG (M)
0119    	K = K + 1
0120    	L = L + 1
0121    66	CONTINUE
0122    67	OUTSTG (K) = ''''
0123    	L = L + 1
0124    	GOTO 110
         
         
0125    75	OUTSTG (K) = INSTG (I)
         
0126    80	K = K + 1
        C	IF (DEBUG) TYPE 500, K, I, OUTSTG (K - 1), INSTG (I + 1)
0127    500	FORMAT (' OUTOFF ',I3,' INOFF ',I3,' CHAROUT ',A1,' NEXTCHAR ',A1)
         
0128    90	CONTINUE
0129    95	OUTSTG (1) = K - 2
0130    	RETURN
         
0131    100	J = ICNT + 2
0132    	K = K + 1
0133    	GOTO 2
         
0134    110	J = ICNT + 2 + L
0135    	K = K + 1
0136    	GOTO 2
0137    	END
FORTRAN IV-PLUS V02-51D		03:04:25    22-AUG-78		PAGE 4   
EXPROC.FOR   	/TR:BLOCKS/WR

PROGRAM SECTIONS

NUMBER	 NAME	    SIZE		ATTRIBUTES

  1	$CODE1	002612   709		RW,I,CON,LCL
  3	$IDATA	000024    10		RW,D,CON,LCL
  4	$VARS	000020     8		RW,D,CON,LCL
  5	$TEMPS	000004     2		RW,D,CON,LCL
  6	LOG	000036    15		RW,D,OVR,GBL
  7	STGS	001064   282		RW,D,OVR,GBL
  8	MORSTG	000004     2		RW,D,OVR,GBL
  9	CHECKS	000002     1		RW,D,OVR,GBL
 10	PARSE	004160  1080		RW,D,OVR,GBL
 11	FILES	001214   326		RW,D,OVR,GBL
 12	SPCHR	000006     3		RW,D,OVR,GBL
 13	LUNS	000014     6		RW,D,OVR,GBL


ENTRY POINTS

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 ETOBLS	      1-000000


VARIABLES

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 BLANK	I*2  12-000000	 BLBITS	I*2  10-001022	 BLFOFS	I*2  10-001462	 BLI	I*2  13-000002	 BLIPTR	I*2  11-001212
 BLKOUT	L*2   6-000022	 BOFSET	I*2  10-000452	 CBASE	I*2  10-000554	 CINCR	I*2  10-000556	 CONEXP	L*2   6-000026
 DEBUG	I*2   9-000000	 DELIM	I*2   4-000016	 ENDEXP	L*2   6-000024	 ENDFIL	L*2   6-000000	 EOLCH	I*2  12-000004
 ERR	I*2  13-000010	 ERROR	L*2   6-000002	 ERROUT	L*2   6-000016	 FLDLAS	L*2   6-000020	 FOFSET	I*2  10-000442
 FSIGN	I*2  10-000266	 FSIZ	I*2  10-000264	 I	I*2   4-000000	 ICNT	I*2   4-000002	 INP	I*2  13-000000
 INPLIN	I*2  11-000246	 INPTR	I*2  11-000244	 J	I*2   4-000004	 K	I*2   4-000006	 L	I*2   4-000010
 LASLIN	I*2  10-002434	 LFDSIZ	I*2  10-001026	 LINTYP	I*2  10-000446	 LPTR	I*2  10-001030	 LSBSIZ	I*2  10-001024
 M	I*2   4-000012	 MAR	I*2  13-000004	 MARPTR	I*2  11-000630	 MNGCNT	I*2  10-004156	 N	I*2   4-000014
 NEGCNT	I*2  10-004154	 OBBITS	I*2  10-001464	 OFSIZ	I*2  10-001456	 OUNSIZ	I*2  10-001460	 POSOFF	L*2   6-000030
 SMASK	L*2   6-000014	 SOFSET	I*2  10-000440	 STGEQL	L*2   6-000004	 STROK	L*2   6-000006	 TAB	I*2  12-000002
 TMP	I*2  13-000006	 TMPIN	L*2   6-000034	 TMPOUT	L*2   6-000032	 TOKTYP	I*2  10-000120	 TTY	I*2  13-000012
 UNDOK	L*2   6-000010	 UNISIZ	I*2  10-000262	 VMASK	L*2   6-000012	 VOFSET	I*2  10-000444	 VSIZ	I*2  10-000450


ARRAYS

 NAME   TYPE  ADDRESS	    SIZE 	DIMENSIONS

 AMASK	I*2   7-000332	000004     2	(2)
 ASIGN	I*2   7-000626	000004     2	(2)
 BLBASE	I*2  10-002436	000242    81	(81)
 BLIBUF	I*2  11-000632	000360   120	(120)
 BLINCR	I*2  10-003142	000242    81	(81)
 BLSSIZ	I*2   7-000576	000024    10	(10)
 BVALUE	I*2  10-001730	000242    81	(81)
 BYTSIZ	I*2   7-000352	000024    10	(10)
 COMGBL	I*2   7-000664	000014     6	(6)
FORTRAN IV-PLUS V02-51D		03:04:25    22-AUG-78		PAGE 5   
EXPROC.FOR   	/TR:BLOCKS/WR

 COMMAS	I*2   7-000304	000004     2	(2)
 CONBAS	I*2   7-000422	000024    10	(10)
 CONINC	I*2   7-000446	000024    10	(10)
 CONPRE	I*2  10-000454	000040    16	(16)
 CONTAG	I*2  10-000514	000040    16	(16)
 CONTEX	I*2  10-003646	000306    99	(9,11)
 CPAREN	I*2   7-000726	000004     2	(2)
 CPRCOM	I*2   7-000720	000006     3	(3)
 CVALUE	I*2  10-000560	000242    81	(81)
 DEFEND	I*2   7-000114	000024    10	(10)
 DEFINI	I*2   7-000042	000024    10	(10)
 DOLBIT	I*2   7-000736	000032    13	(13)
 DOLBYT	I*2   7-000770	000034    14	(14)
 DOLDEF	I*2   7-000066	000014     6	(6)
 DOLFLD	I*2   7-001024	000030    12	(12)
 DOLGBL	I*2   7-000026	000014     6	(6)
 DOLVLD	I*2   7-000220	000022     9	(9)
 DOTBLK	I*2   7-000336	000014     6	(6)
 DOTEQS	I*2   7-000102	000012     5	(5)
 DOTMAC	I*2   7-000000	000026    11	(11)
 ENDMAC	I*2   7-000140	000022     9	(9)
 EQULST	I*2   7-000262	000022     9	(9)
 EQUTAB	I*2   7-000402	000014     6	(6)
 EXCLSP	I*2   7-000176	000016     7	(7)
 EXPCLO	I*2   7-001060	000004     2	(2)
 EXPOPN	I*2   7-001054	000004     2	(2)
 FLDNAM	I*2  10-000270	000110    36	(36)
 HYPHEN	I*2   7-000660	000004     2	(2)
 INBUF	I*2  11-000000	000244    82	(82)
 INSTG	I*2   F-000002*	000242    81	(81)
 LANHYP	I*2   7-000310	000006     3	(3)
 LITTAB	I*2   7-000472	000022     9	(9)
 MACTAB	I*2   7-000532	000020     8	(8)
 MARBUF	I*2  11-000250	000360   120	(120)
 MRBASE	I*2  10-002700	000242    81	(81)
 MRINCR	I*2  10-003404	000242    81	(81)
 MVALUE	I*2  10-001466	000242    81	(81)
 NEGSGN	I*2   8-000000	000004     2	(2)
 OASIGN	I*2   7-000732	000004     2	(2)
 OFFSET	I*2   7-000552	000024    10	(10)
 ONESHF	I*2   7-000642	000006     3	(3)
 OPAREN	I*2   7-000416	000004     2	(2)
 OSBNAM	I*2  10-001316	000040    16	(16)
 OTGNAM	I*2  10-001356	000040    16	(16)
 OUNTYP	I*2  10-001416	000040    16	(16)
 OUTSTG	I*2   F-000004*	000242    81	(81)
 PCTSEM	I*2   7-000632	000010     4	(4)
 PRENAM	I*2  10-000122	000040    16	(16)
 RANHYP	I*2   7-000324	000006     3	(3)
 RSTLIN	I*2  10-001032	000264    90	(90)
 SEMSPC	I*2   7-000524	000006     3	(3)
 SPCSTG	I*2   7-000376	000004     2	(2)
 SPHYSP	I*2   7-000650	000010     4	(4)
 STRSTG	I*2  10-000222	000040    16	(16)
 SUFDEF	I*2   7-000162	000010     4	(4)
 SUFNAM	I*2  10-000162	000040    16	(16)
FORTRAN IV-PLUS V02-51D		03:04:25    22-AUG-78		PAGE 6   
EXPROC.FOR   	/TR:BLOCKS/WR

 TABEQS	I*2   7-000514	000010     4	(4)
 TABLAN	I*2   7-000316	000006     3	(3)
 TABOPR	I*2   7-000712	000006     3	(3)
 TABPRN	I*2   7-000700	000012     5	(5)
 TABRAN	I*2   7-000254	000006     3	(3)
 TABSTG	I*2   7-000214	000004     2	(2)
 TAGNAM	I*2  10-000400	000040    16	(16)
 TMPVAL	I*2  10-002172	000242    81	(81)
 TOKSTG	I*2  10-000000	000120    40	(40)
 UNITYP	I*2   7-000172	000004     2	(2)
 ZEROSG	I*2   7-000622	000004     2	(2)
 ZRLAHY	I*2   7-000242	000012     5	(5)


LABELS

 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	

 2	 1-000076	 3	 1-000220	 6	 1-000270	 8	 1-000340	 10	 1-000470
 15	 1-000636	 20	 1-001016	 25	    **   	 30	 1-001270	 35	 1-001320
 40	    **   	 45	 1-001572	 50	 1-001622	 55	    **   	 60	 1-002112
 65	 1-002142	 66	    **   	 67	 1-002352	 75	 1-002404	 80	 1-002440
 90	    **   	 95	 1-002472	 100	 1-002522	 110	 1-002554	 500'	    **   


TOTAL SPACE ALLOCATED = 011430  2444

NO FPP INSTRUCTIONS GENERATED
FORTRAN IV-PLUS V02-51D		03:05:08    22-AUG-78		PAGE 7   
EXPROC.FOR   	/TR:BLOCKS/WR

         
        C	REVISION HISTORY:
        C		29-06-77	TC	ROUTINE ADDED (2.4)
         
0001    	LOGICAL FUNCTION MTCHR(SRC,PNT,MCH)
         
        C THIS SUBROUTINE CHECKS TO SEE IF THE STRING IN MCH MATCHES
        C THE STRING IN SRC STARTING AT PNT.
        C VARIABLES:
        C	I	--	INDEXES SRC
        C	J	--	INDEXES MCH
0002    	INTEGER I,J,PNT
0003    	INTEGER SRC(81),MCH(31)
         
        C	INITILIZE
0004    	I=PNT
0005    	J=2
         
        C	MAIN CODE
0006    10	IF (SRC(I) .NE. MCH(J)) GOTO 20
0007    	J=J+1
0008    	IF (J.GT. (MCH(1)+1)) GOTO 30
0009    	I=I+1
0010    	IF (I.GT. (SRC(1)+1)) GOTO 20
0011    	GOTO 10
         
        C	FAILURE
0012    20	MTCHR = .FALSE.
0013    	RETURN
         
        C	SUCCEED
0014    30	MTCHR = .TRUE.
0015    	RETURN
0016    	END
FORTRAN IV-PLUS V02-51D		03:05:08    22-AUG-78		PAGE 8   
EXPROC.FOR   	/TR:BLOCKS/WR

PROGRAM SECTIONS

NUMBER	 NAME	    SIZE		ATTRIBUTES

  1	$CODE1	000240    80		RW,I,CON,LCL
  3	$IDATA	000026    11		RW,D,CON,LCL
  4	$VARS	000004     2		RW,D,CON,LCL


ENTRY POINTS

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 MTCHR	L*2   1-000000


VARIABLES

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 I	I*2   4-000000	 J	I*2   4-000002	 PNT	I*2   F-000004*


ARRAYS

 NAME   TYPE  ADDRESS	    SIZE 	DIMENSIONS

 MCH	I*2   F-000006*	000076    31	(31)
 SRC	I*2   F-000002*	000242    81	(81)


LABELS

 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	

 10	 1-000076	 20	 1-000206	 30	 1-000226


TOTAL SPACE ALLOCATED = 000272    93

NO FPP INSTRUCTIONS GENERATED
FORTRAN IV-PLUS V02-51D		03:05:11    22-AUG-78		PAGE 9   
EXPROC.FOR   	/TR:BLOCKS/WR

         
        C	REVISION HISTORY:
        C		29-06-77	TC	ROUTINE ADDED (2.4)
         
0001    	INTEGER FUNCTION ELIMPF(SRC,PNT,ARGSTR)
         
        C	ELIMINATE THE PSEUDO-FUNCTION WHICH MAY START IN SRC AT PNT.
        C	PLACE THE ARGUMENT IN ARGSTR.  RETURN VALUES ACCORDING TO THE
        C	FOLLOWING SCHEME:
        C		0	--	NO PSEUDO-FUNCTION
        C		1	--	NO "(" FOUND
        C		2	--	NO ")" FOUND
        C		3	--	PSEUDO-FUNCTION WAS $BITPOSITION
        C		4	--	PSEUDO-FUNCTION WAS $BYTEOFFSET
        C		5	--	PSEUDO-FUNCTION WAS $FIELDWIDTH
        C	IF THE VALUE RETURNED US 3, 4 OR 5; PNT IS UPDATED TO POINT
        C	TO THE CHARACTER AFTER THE ")".  THIS MAY BE OFF THE END OF
        C	THE STRING.
        C	VARIABLES:
        C		I	--	INDEXES SRC
        C		J	--	INDEXES ARGSTR.
         
0002    	INCLUDE 'SRC$:MDL.CMN/NOLIST'
         
0016    	INTEGER I,J,PNT
0017    	INTEGER SRC(81),ARGSTR(81)
0018    	LOGICAL MTCHR
         
0019    	I=PNT
0020    	IF (MTCHR(SRC,I,DOLBIT)) GOTO 10
0021    	IF (MTCHR(SRC,I,DOLBYT)) GOTO 20
0022    	IF (MTCHR(SRC,I,DOLFLD)) GOTO 30
         
        C	NOT A PSEUDO-FUNCTION
0023    	ELIMPF=0
0024    	RETURN
         
        C	PSEUDO-FUNCTION IS $BITPOSITION
0025    10	ELIMPF=3
0026    	I=I+DOLBIT(1)
0027    	GOTO 40
         
        C	PSEUDO-FUNCTION IS $BYTEOFFSET
0028    20	ELIMPF=4
0029    	I=I+DOLBYT(1)
0030    	GOTO 40
         
        C	PSEUDO-FUNCTION IS $FIELDWIDTH
0031    30	ELIMPF=5
0032    	I=I+DOLFLD(1)
         
        C	LOOK FOR "(", SKIPPING ANY SPACES
0033    40	IF (I.GT.(SRC(1)+1))GOTO 50
0034    	IF (SRC(I) .EQ. '(') GOTO 60
0035    	IF ((SRC(I).NE.' ') .AND.
        	1	(SRC(I).NE.'	')) GOTO 50
FORTRAN IV-PLUS V02-51D		03:05:11    22-AUG-78		PAGE 10  
EXPROC.FOR   	/TR:BLOCKS/WR

0036    	I=I+1
0037    	GOTO 40
         
        C	COULDN'T FINE "("
0038    50	ELIMPF=1
0039    	RETURN
         
        C	LOOK FOR ")". MOVE CHARACTERS PASSED OVER TO ARGSTR
0040    60	J=2
0041    	I=I+1
0042    70	IF (I.GT.(SRC(1)+1)) GOTO 80
0043    	IF (SRC(I) .EQ. ')') GOTO 90
0044    	ARGSTR(J)=SRC(I)
0045    	I=I+1
0046    	J=J+1
0047    	GOTO 70
         
        C	COULDN'T FIND ")"
0048    80	ELIMPF = 2
0049    	RETURN
         
        C	WE'RE DONE. CLEAN UP AND RETURN.
0050    90	ARGSTR(1)=J-2
0051    	PNT=I+1
0052    	RETURN
0053    	END
FORTRAN IV-PLUS V02-51D		03:05:11    22-AUG-78		PAGE 11  
EXPROC.FOR   	/TR:BLOCKS/WR

PROGRAM SECTIONS

NUMBER	 NAME	    SIZE		ATTRIBUTES

  1	$CODE1	000574   190		RW,I,CON,LCL
  3	$IDATA	000056    23		RW,D,CON,LCL
  4	$VARS	000004     2		RW,D,CON,LCL
  6	LOG	000036    15		RW,D,OVR,GBL
  7	STGS	001064   282		RW,D,OVR,GBL
  8	MORSTG	000004     2		RW,D,OVR,GBL
  9	CHECKS	000002     1		RW,D,OVR,GBL
 10	PARSE	004160  1080		RW,D,OVR,GBL
 11	FILES	001214   326		RW,D,OVR,GBL
 12	SPCHR	000006     3		RW,D,OVR,GBL
 13	LUNS	000014     6		RW,D,OVR,GBL


ENTRY POINTS

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 ELIMPF	I*2   1-000000


VARIABLES

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 BLANK	I*2  12-000000	 BLBITS	I*2  10-001022	 BLFOFS	I*2  10-001462	 BLI	I*2  13-000002	 BLIPTR	I*2  11-001212
 BLKOUT	L*2   6-000022	 BOFSET	I*2  10-000452	 CBASE	I*2  10-000554	 CINCR	I*2  10-000556	 CONEXP	L*2   6-000026
 DEBUG	I*2   9-000000	 ENDEXP	L*2   6-000024	 ENDFIL	L*2   6-000000	 EOLCH	I*2  12-000004	 ERR	I*2  13-000010
 ERROR	L*2   6-000002	 ERROUT	L*2   6-000016	 FLDLAS	L*2   6-000020	 FOFSET	I*2  10-000442	 FSIGN	I*2  10-000266
 FSIZ	I*2  10-000264	 I	I*2   4-000000	 INP	I*2  13-000000	 INPLIN	I*2  11-000246	 INPTR	I*2  11-000244
 J	I*2   4-000002	 LASLIN	I*2  10-002434	 LFDSIZ	I*2  10-001026	 LINTYP	I*2  10-000446	 LPTR	I*2  10-001030
 LSBSIZ	I*2  10-001024	 MAR	I*2  13-000004	 MARPTR	I*2  11-000630	 MNGCNT	I*2  10-004156	 NEGCNT	I*2  10-004154
 OBBITS	I*2  10-001464	 OFSIZ	I*2  10-001456	 OUNSIZ	I*2  10-001460	 PNT	I*2   F-000004*	 POSOFF	L*2   6-000030
 SMASK	L*2   6-000014	 SOFSET	I*2  10-000440	 STGEQL	L*2   6-000004	 STROK	L*2   6-000006	 TAB	I*2  12-000002
 TMP	I*2  13-000006	 TMPIN	L*2   6-000034	 TMPOUT	L*2   6-000032	 TOKTYP	I*2  10-000120	 TTY	I*2  13-000012
 UNDOK	L*2   6-000010	 UNISIZ	I*2  10-000262	 VMASK	L*2   6-000012	 VOFSET	I*2  10-000444	 VSIZ	I*2  10-000450


ARRAYS

 NAME   TYPE  ADDRESS	    SIZE 	DIMENSIONS

 AMASK	I*2   7-000332	000004     2	(2)
 ARGSTR	I*2   F-000006*	000242    81	(81)
 ASIGN	I*2   7-000626	000004     2	(2)
 BLBASE	I*2  10-002436	000242    81	(81)
 BLIBUF	I*2  11-000632	000360   120	(120)
 BLINCR	I*2  10-003142	000242    81	(81)
 BLSSIZ	I*2   7-000576	000024    10	(10)
 BVALUE	I*2  10-001730	000242    81	(81)
 BYTSIZ	I*2   7-000352	000024    10	(10)
 COMGBL	I*2   7-000664	000014     6	(6)
 COMMAS	I*2   7-000304	000004     2	(2)
FORTRAN IV-PLUS V02-51D		03:05:11    22-AUG-78		PAGE 12  
EXPROC.FOR   	/TR:BLOCKS/WR

 CONBAS	I*2   7-000422	000024    10	(10)
 CONINC	I*2   7-000446	000024    10	(10)
 CONPRE	I*2  10-000454	000040    16	(16)
 CONTAG	I*2  10-000514	000040    16	(16)
 CONTEX	I*2  10-003646	000306    99	(9,11)
 CPAREN	I*2   7-000726	000004     2	(2)
 CPRCOM	I*2   7-000720	000006     3	(3)
 CVALUE	I*2  10-000560	000242    81	(81)
 DEFEND	I*2   7-000114	000024    10	(10)
 DEFINI	I*2   7-000042	000024    10	(10)
 DOLBIT	I*2   7-000736	000032    13	(13)
 DOLBYT	I*2   7-000770	000034    14	(14)
 DOLDEF	I*2   7-000066	000014     6	(6)
 DOLFLD	I*2   7-001024	000030    12	(12)
 DOLGBL	I*2   7-000026	000014     6	(6)
 DOLVLD	I*2   7-000220	000022     9	(9)
 DOTBLK	I*2   7-000336	000014     6	(6)
 DOTEQS	I*2   7-000102	000012     5	(5)
 DOTMAC	I*2   7-000000	000026    11	(11)
 ENDMAC	I*2   7-000140	000022     9	(9)
 EQULST	I*2   7-000262	000022     9	(9)
 EQUTAB	I*2   7-000402	000014     6	(6)
 EXCLSP	I*2   7-000176	000016     7	(7)
 EXPCLO	I*2   7-001060	000004     2	(2)
 EXPOPN	I*2   7-001054	000004     2	(2)
 FLDNAM	I*2  10-000270	000110    36	(36)
 HYPHEN	I*2   7-000660	000004     2	(2)
 INBUF	I*2  11-000000	000244    82	(82)
 LANHYP	I*2   7-000310	000006     3	(3)
 LITTAB	I*2   7-000472	000022     9	(9)
 MACTAB	I*2   7-000532	000020     8	(8)
 MARBUF	I*2  11-000250	000360   120	(120)
 MRBASE	I*2  10-002700	000242    81	(81)
 MRINCR	I*2  10-003404	000242    81	(81)
 MVALUE	I*2  10-001466	000242    81	(81)
 NEGSGN	I*2   8-000000	000004     2	(2)
 OASIGN	I*2   7-000732	000004     2	(2)
 OFFSET	I*2   7-000552	000024    10	(10)
 ONESHF	I*2   7-000642	000006     3	(3)
 OPAREN	I*2   7-000416	000004     2	(2)
 OSBNAM	I*2  10-001316	000040    16	(16)
 OTGNAM	I*2  10-001356	000040    16	(16)
 OUNTYP	I*2  10-001416	000040    16	(16)
 PCTSEM	I*2   7-000632	000010     4	(4)
 PRENAM	I*2  10-000122	000040    16	(16)
 RANHYP	I*2   7-000324	000006     3	(3)
 RSTLIN	I*2  10-001032	000264    90	(90)
 SEMSPC	I*2   7-000524	000006     3	(3)
 SPCSTG	I*2   7-000376	000004     2	(2)
 SPHYSP	I*2   7-000650	000010     4	(4)
 SRC	I*2   F-000002*	000242    81	(81)
 STRSTG	I*2  10-000222	000040    16	(16)
 SUFDEF	I*2   7-000162	000010     4	(4)
 SUFNAM	I*2  10-000162	000040    16	(16)
 TABEQS	I*2   7-000514	000010     4	(4)
 TABLAN	I*2   7-000316	000006     3	(3)
FORTRAN IV-PLUS V02-51D		03:05:11    22-AUG-78		PAGE 13  
EXPROC.FOR   	/TR:BLOCKS/WR

 TABOPR	I*2   7-000712	000006     3	(3)
 TABPRN	I*2   7-000700	000012     5	(5)
 TABRAN	I*2   7-000254	000006     3	(3)
 TABSTG	I*2   7-000214	000004     2	(2)
 TAGNAM	I*2  10-000400	000040    16	(16)
 TMPVAL	I*2  10-002172	000242    81	(81)
 TOKSTG	I*2  10-000000	000120    40	(40)
 UNITYP	I*2   7-000172	000004     2	(2)
 ZEROSG	I*2   7-000622	000004     2	(2)
 ZRLAHY	I*2   7-000242	000012     5	(5)


LABELS

 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	

 10	 1-000204	 20	 1-000230	 30	 1-000254	 40	 1-000276	 50	 1-000366
 60	 1-000402	 70	 1-000422	 80	 1-000516	 90	 1-000532


FUNCTIONS AND SUBROUTINES REFERENCED

 MTCHR


TOTAL SPACE ALLOCATED = 007424  1930

NO FPP INSTRUCTIONS GENERATED
FORTRAN IV-PLUS V02-51D		03:05:29    22-AUG-78		PAGE 14  
EXPROC.FOR   	/TR:BLOCKS/WR

         
        C	REVISION HISTORY:
        C		29-06-77	TC	ROUTINE ADDED (2.4)
         
0001    	SUBROUTINE ETOMAR(SRC,DST)
         
        C CONVERTS AN EXPRESSION TO STANDARD MARS SYNTAX.
        C THE FOLLOWING VARIABLES ARE USED:
        C	TMPSTG	--	HOLDS THE ARGUMENT TO A PSEUDO-FUNCTION
        C	I	--	INDEXES THE SOURCE STRING
        C	J	--	INDEXES THE DESTINATION STRING
        C	K	--	INDEXES TMPSTG
        C	CODE	--	RESULT FROM ELIMPF
         
0002    	INTEGER I,J,K,CODE
0003    	INTEGER SRC(81),DST(81),TMPSTG(81)
0004    	INTEGER ELIMPF
         
        C	INITILIZE
0005    	I=2
0006    	J=2
         
        C	MAIN LOOP (THIS IS A FOR LOOP WITH AN INITIAL CHECK)
0007    10	IF (I .GT. (SRC(1)+1)) GOTO 100
0008    	IF (SRC(I) .NE. '$') GOTO 90
         
        C	WE HAVE FOUND A DOLLAR SIGN.  IT MAY BE A PSEUDO-FUNCTION
0009    	CODE = ELIMPF(SRC,I,TMPSTG)
        C	CODE=0 -- NOT A PSEUDO-FUNCTION
0010    	IF (CODE .EQ. 0) GOTO 90
         
        C	CODE=1 -- ERROR: NO OPEN PARENTHESIS
0011    	IF (CODE .EQ. 1) GOTO 70
         
        C	CODE=2 -- ERROR: NO CLOSE PARENTHESIS
0012    	IF (CODE .EQ. 2) GOTO 60
         
        C	CODE=3 -- PSEUDO-FUNCTION WAS $BITPOSITION
0013    	IF (CODE .EQ. 3) GOTO 40
         
        C	CODE=4 -- PSEUDO-FUNCTION WAS $BYTEOFFSET
0014    	IF (CODE .EQ. 4) GOTO 40
         
        C	CODE MUST EQUAL 5 -- PSEUDO-FUNCTION WAS $FIELDWIDTH
        C	WE MUST CHANGE "$V_" IN THE ARGUMENT TO "$S_"
0015    	K=2
0016    20	IF (K .GT. TMPSTG(1)-1) GOTO 80
0017    	IF (TMPSTG(K) .NE. '$') GOTO 30
0018    	IF (TMPSTG(K+1) .NE. 'V') GOTO 30
0019    	IF (TMPSTG(K+2) .NE. '_') GOTO 30
0020    	TMPSTG(K+1)='S'
0021    	GOTO 40
0022    30	K=K+1
0023    	GOTO 20
         
        C	COPY THE PSEUDO-FUNCTION ARGUMENT TO THE DESTINATION STRING
FORTRAN IV-PLUS V02-51D		03:05:29    22-AUG-78		PAGE 15  
EXPROC.FOR   	/TR:BLOCKS/WR

0024    40	K=2
0025    50	IF(K.GT.(TMPSTG(1)+1)) GOTO 10
0026    	DST(J)=TMPSTG(K)
0027    	J=J+1
0028    	K=K+1
0029    	GOTO 50
         
        C	ERROR -- 
0030    60	TYPE 1000
0031    1000	FORMAT(' NO CLOSE PARENTHESIS FOR PSEUDO-FUNCTION')
0032    	GOTO 90
         
        C	ERROR --
0033    70	TYPE 1010
0034    1010	FORMAT(' NO OPEN PARENTHESIS FOR PSEUDO-FUNTION')
0035    	GOTO 90
         
        C	ERROR --
0036    80	TYPE 1020
0037    1020	FORMAT(' ARGUMENT TO $FIELDWIDTH IS NOT A VIELD')
0038    	GOTO 40
         
        C	JUST COPY THE CHARACTER FROM SOURCE TO DESTINATION
0039    90	DST(J)=SRC(I)
0040    	J=J+1
0041    	I=I+1
0042    	GOTO 10
         
        C	END OF THE LOOP
0043    100	DST(1)=J-2
0044    	RETURN
0045    	END
FORTRAN IV-PLUS V02-51D		03:05:29    22-AUG-78		PAGE 16  
EXPROC.FOR   	/TR:BLOCKS/WR

PROGRAM SECTIONS

NUMBER	 NAME	    SIZE		ATTRIBUTES

  1	$CODE1	000656   215		RW,I,CON,LCL
  3	$IDATA	000234    78		RW,D,CON,LCL
  4	$VARS	000252    85		RW,D,CON,LCL


ENTRY POINTS

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 ETOMAR	      1-000000


VARIABLES

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 CODE	I*2   4-000006	 I	I*2   4-000000	 J	I*2   4-000002	 K	I*2   4-000004


ARRAYS

 NAME   TYPE  ADDRESS	    SIZE 	DIMENSIONS

 DST	I*2   F-000004*	000242    81	(81)
 SRC	I*2   F-000002*	000242    81	(81)
 TMPSTG	I*2   4-000010	000242    81	(81)


LABELS

 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	

 10	 1-000076	 20	 1-000246	 30	 1-000336	 40	 1-000352	 50	 1-000366
 60	 1-000446	 70	 1-000476	 80	 1-000526	 90	 1-000556	 100	 1-000626
 1000'	 3-000000	 1010'	 3-000054	 1020'	 3-000126


FUNCTIONS AND SUBROUTINES REFERENCED

 ELIMPF


TOTAL SPACE ALLOCATED = 001364   378

NO FPP INSTRUCTIONS GENERATED

OBJ$:EXPROC,LIS$:EXPROC/-SP=SRC$:EXPROC.FOR
