FORTRAN IV-PLUS V02-51D		02:59:09    22-AUG-78		PAGE 1   
FLDPRO.FOR   	/TR:BLOCKS/WR

        C	REVISION HISTORY:
        C		22-03-77	CP	ADD LOGIC AT LABEL 30 TO SEND LINE TO
        C					THE TMP FILE IF THIS IS A NEGATIVE
        C					FIELD DEFINITION.
        C		04-04-77	TC	ADD LOGIC TO KEEP TRACK OF MNGCNT
        C					(MAXIMUM NEGATIVE COUNT)
         
0001    	SUBROUTINE PFIELD
         
        C	THIS ROUTINE IS CALLED WHEN A LINE HAS BEEN RECOGNIZED
        C	AS A FIELD DEFINITION. THE IMPLICIT ARGUMENT INPTR IS THE OFFSET
        C	TO THE NEXT CHARACTER TO BE READ IN THE INPUT LINE.
         
        C	PFIELD COLLECTS THE ARGUMENTS OF THE FIELD DEFINITION,
        C	AND THEN OUTPUTS APPROPRIATE STATEMENTS TO THE BLISS
        C	AND MARS TRANSLATED FILES.
         
0002    	INCLUDE 'SRC$:MDL.CMN/NOLIST'
         
        C	INITIALIZE THE DEFAULT VALUES FOR UNIT DESCRIPTOR,
        C	NUMBER OF BYTES PER UNIT, NUMBER OF UNITS, AND SIGN.
         
0016    	CALL INIFLD
         
        C	GET THE FIRST TOKEN. VALID TOKENS ARE
        C	ALPHA (THE FIELDNAME) OR COMMA (MEANING THAT NO NAME
        C	IS BEING DEFINED, SPACE IS SIMPLY BEING RESERVED).
         
0017    	CALL GETTOK
0018    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
0019    500	FORMAT (' ',90A1)
0020    	IF (TOKTYP .NE. ALPHA) GOTO 10
0021    	CALL MOVSTG (TOKSTG, FLDNAM)
0022    	IF (DEBUG) TYPE 500, (FLDNAM (I), I = 2, FLDNAM (1) + 1)
0023    	CALL GETTOK
0024    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
         
        C	NAME, IF ANY, HAS BEEN SAVED. NOW LOOK FOR A UNIT
        C	DESCRIPTOR ARGUMENT. VALID CHARACTERS FOR THIS
        C	ARGUMENT ARE L, B, W, Q, AND T.
         
0025    10	IF (DEBUG) TYPE 420, TOKTYP
0026    	IF (TOKTYP .NE. COMMA) GOTO 25
0027    	CALL GETTOK
0028    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
0029    	IF (TOKTYP .NE. ALPHA) GOTO 15
0030    	CALL GETUND
0031    	IF (UNDOK .EQ. .FALSE.) GOTO 100
0032    	CALL GETTOK
0033    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
         
        C	UNIT DESCRIPTOR, IF ANY, HAS BEEN SAVED. NOW LOOK FOR
        C	THE SIZE ARGUMENT.
         
0034    15	IF (DEBUG) TYPE 420, TOKTYP
0035    420	FORMAT (' TOKTYP IS ',I3)
FORTRAN IV-PLUS V02-51D		02:59:09    22-AUG-78		PAGE 2   
FLDPRO.FOR   	/TR:BLOCKS/WR

0036    	IF (TOKTYP .NE. COMMA) GOTO 25
0037    	CALL GETTOK
0038    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
0039    	IF (TOKTYP .NE. NUMBER) GOTO 20
0040    	FSIZ = INTVAL (TOKSTG)
0041    	IF (FSIZ .EQ. -1) GOTO 110
0042    	CALL GETTOK
0043    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
         
        C	SIZE OF FIELD, IF ANY, HAS BEEN SAVED. NOW LOOK FOR
        C	THE SIGN ARGUMENT.
         
0044    20	IF (DEBUG) TYPE 420, TOKTYP
0045    	IF (TOKTYP .NE. COMMA) GOTO 25
        C	IF (DEBUG) TYPE 430
0046    430	FORMAT (' GETTING SIGN')
0047    	CALL GETTOK
0048    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
0049    	IF (TOKTYP .NE. ALPHA) GOTO 25
0050    	IF (TOKSTG (1) .NE. 1) GOTO 120
0051    	IF (TOKSTG (2) .NE. 'S') GOTO 120
0052    	FSIGN = 1
0053    	ASIGN (2) = '1'
0054    	INPTR = INPTR - 1
0055    	GOTO 30
         
        C	THE OFFSET INTO THE INPUT BUFFER IS OFF BY ONE CHARACTER
        C	BECAUSE SOME TRAILING OPTIONAL ARGUMENTS WERE OMITTED.  BACK
        C	UP THE OFFSET BY ONE.
         
0056    25	INPTR = LASTNB (INPTR - 2)
         
        C	IF THIS IS A NEGATIVE FIELD DECLARATION, OUTPUT IT
        C	TO THE TMP FILE.
         
0057    30	IF (POSOFF) GOTO 40
0058    	IF ((.NOT. TMPOUT) .AND. (FLDLAS)) CALL CHKALC
0059    	IF (.NOT. TMPOUT) GOTO 35
0060    	NEGCNT = NEGCNT + FSIZ * UNISIZ
0061    	MNGCNT = MAX0(NEGCNT,MNGCNT)
0062    	CALL OUT2LN
0063    	RETURN
         
0064    35	NEGCNT = FSIZ * UNISIZ
0065    	MNGCNT = NEGCNT
0066    	TMPOUT = .TRUE.
0067    	CALL OUT2LN
0068    	RETURN
         
0069    40	IF (.NOT. TMPOUT) GOTO 45
0070    	CALL OUT2LN
0071    	CALL STANEG
0072    	RETURN
         
        C	FIELDS ARE ALL COLLECTED. NOW OUTPUT LINES TO
        C	BLISS AND MARS.
FORTRAN IV-PLUS V02-51D		02:59:09    22-AUG-78		PAGE 3   
FLDPRO.FOR   	/TR:BLOCKS/WR

         
0073    45	SOFSET = 0
0074    	FLDLAS = .TRUE.
0075    	LFDSIZ = FSIZ * UNISIZ
0076    	LSBSIZ = 0
0077    	CALL SAVSBA
0078    	INBUF (INPTR) = INBUF (1) - INPTR + 1
0079    	CALL GETREM (INPTR)
0080    	CALL OUTFLD
0081    	RETURN
         
        C	ERROR REPORTING
         
0082    100	TYPE 1000
0083    1000	FORMAT (' INVALID UNIT DESCRIPTOR IN FIELD DEFINITION')
0084    	RETURN
         
0085    110	TYPE 1100
0086    1100	FORMAT (' INVALID SIZE IN FIELD DEFINITION')
0087    	RETURN
         
0088    120	TYPE 1200
0089    1200	FORMAT (' INVALID SIGN ARGUMENT IN FIELD DEFINITION')
0090    	END
FORTRAN IV-PLUS V02-51D		02:59:09    22-AUG-78		PAGE 4   
FLDPRO.FOR   	/TR:BLOCKS/WR

PROGRAM SECTIONS

NUMBER	 NAME	    SIZE		ATTRIBUTES

  1	$CODE1	002310   612		RW,I,CON,LCL
  3	$IDATA	000262    89		RW,D,CON,LCL
  4	$VARS	000002     1		RW,D,CON,LCL
  5	$TEMPS	000002     1		RW,D,CON,LCL
  6	LOG	000036    15		RW,D,OVR,GBL
  7	STGS	001064   282		RW,D,OVR,GBL
  8	MORSTG	000004     2		RW,D,OVR,GBL
  9	CHECKS	000002     1		RW,D,OVR,GBL
 10	PARSE	004160  1080		RW,D,OVR,GBL
 11	FILES	001214   326		RW,D,OVR,GBL
 12	SPCHR	000006     3		RW,D,OVR,GBL
 13	LUNS	000014     6		RW,D,OVR,GBL


ENTRY POINTS

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 PFIELD	      1-000000


VARIABLES

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 BLANK	I*2  12-000000	 BLBITS	I*2  10-001022	 BLFOFS	I*2  10-001462	 BLI	I*2  13-000002	 BLIPTR	I*2  11-001212
 BLKOUT	L*2   6-000022	 BOFSET	I*2  10-000452	 CBASE	I*2  10-000554	 CINCR	I*2  10-000556	 CONEXP	L*2   6-000026
 DEBUG	I*2   9-000000	 ENDEXP	L*2   6-000024	 ENDFIL	L*2   6-000000	 EOLCH	I*2  12-000004	 ERR	I*2  13-000010
 ERROR	L*2   6-000002	 ERROUT	L*2   6-000016	 FLDLAS	L*2   6-000020	 FOFSET	I*2  10-000442	 FSIGN	I*2  10-000266
 FSIZ	I*2  10-000264	 I	I*2   4-000000	 INP	I*2  13-000000	 INPLIN	I*2  11-000246	 INPTR	I*2  11-000244
 LASLIN	I*2  10-002434	 LFDSIZ	I*2  10-001026	 LINTYP	I*2  10-000446	 LPTR	I*2  10-001030	 LSBSIZ	I*2  10-001024
 MAR	I*2  13-000004	 MARPTR	I*2  11-000630	 MNGCNT	I*2  10-004156	 NEGCNT	I*2  10-004154	 OBBITS	I*2  10-001464
 OFSIZ	I*2  10-001456	 OUNSIZ	I*2  10-001460	 POSOFF	L*2   6-000030	 SMASK	L*2   6-000014	 SOFSET	I*2  10-000440
 STGEQL	L*2   6-000004	 STROK	L*2   6-000006	 TAB	I*2  12-000002	 TMP	I*2  13-000006	 TMPIN	L*2   6-000034
 TMPOUT	L*2   6-000032	 TOKTYP	I*2  10-000120	 TTY	I*2  13-000012	 UNDOK	L*2   6-000010	 UNISIZ	I*2  10-000262
 VMASK	L*2   6-000012	 VOFSET	I*2  10-000444	 VSIZ	I*2  10-000450


ARRAYS

 NAME   TYPE  ADDRESS	    SIZE 	DIMENSIONS

 AMASK	I*2   7-000332	000004     2	(2)
 ASIGN	I*2   7-000626	000004     2	(2)
 BLBASE	I*2  10-002436	000242    81	(81)
 BLIBUF	I*2  11-000632	000360   120	(120)
 BLINCR	I*2  10-003142	000242    81	(81)
 BLSSIZ	I*2   7-000576	000024    10	(10)
 BVALUE	I*2  10-001730	000242    81	(81)
 BYTSIZ	I*2   7-000352	000024    10	(10)
 COMGBL	I*2   7-000664	000014     6	(6)
 COMMAS	I*2   7-000304	000004     2	(2)
FORTRAN IV-PLUS V02-51D		02:59:09    22-AUG-78		PAGE 5   
FLDPRO.FOR   	/TR:BLOCKS/WR

 CONBAS	I*2   7-000422	000024    10	(10)
 CONINC	I*2   7-000446	000024    10	(10)
 CONPRE	I*2  10-000454	000040    16	(16)
 CONTAG	I*2  10-000514	000040    16	(16)
 CONTEX	I*2  10-003646	000306    99	(9,11)
 CPAREN	I*2   7-000726	000004     2	(2)
 CPRCOM	I*2   7-000720	000006     3	(3)
 CVALUE	I*2  10-000560	000242    81	(81)
 DEFEND	I*2   7-000114	000024    10	(10)
 DEFINI	I*2   7-000042	000024    10	(10)
 DOLBIT	I*2   7-000736	000032    13	(13)
 DOLBYT	I*2   7-000770	000034    14	(14)
 DOLDEF	I*2   7-000066	000014     6	(6)
 DOLFLD	I*2   7-001024	000030    12	(12)
 DOLGBL	I*2   7-000026	000014     6	(6)
 DOLVLD	I*2   7-000220	000022     9	(9)
 DOTBLK	I*2   7-000336	000014     6	(6)
 DOTEQS	I*2   7-000102	000012     5	(5)
 DOTMAC	I*2   7-000000	000026    11	(11)
 ENDMAC	I*2   7-000140	000022     9	(9)
 EQULST	I*2   7-000262	000022     9	(9)
 EQUTAB	I*2   7-000402	000014     6	(6)
 EXCLSP	I*2   7-000176	000016     7	(7)
 EXPCLO	I*2   7-001060	000004     2	(2)
 EXPOPN	I*2   7-001054	000004     2	(2)
 FLDNAM	I*2  10-000270	000110    36	(36)
 HYPHEN	I*2   7-000660	000004     2	(2)
 INBUF	I*2  11-000000	000244    82	(82)
 LANHYP	I*2   7-000310	000006     3	(3)
 LITTAB	I*2   7-000472	000022     9	(9)
 MACTAB	I*2   7-000532	000020     8	(8)
 MARBUF	I*2  11-000250	000360   120	(120)
 MRBASE	I*2  10-002700	000242    81	(81)
 MRINCR	I*2  10-003404	000242    81	(81)
 MVALUE	I*2  10-001466	000242    81	(81)
 NEGSGN	I*2   8-000000	000004     2	(2)
 OASIGN	I*2   7-000732	000004     2	(2)
 OFFSET	I*2   7-000552	000024    10	(10)
 ONESHF	I*2   7-000642	000006     3	(3)
 OPAREN	I*2   7-000416	000004     2	(2)
 OSBNAM	I*2  10-001316	000040    16	(16)
 OTGNAM	I*2  10-001356	000040    16	(16)
 OUNTYP	I*2  10-001416	000040    16	(16)
 PCTSEM	I*2   7-000632	000010     4	(4)
 PRENAM	I*2  10-000122	000040    16	(16)
 RANHYP	I*2   7-000324	000006     3	(3)
 RSTLIN	I*2  10-001032	000264    90	(90)
 SEMSPC	I*2   7-000524	000006     3	(3)
 SPCSTG	I*2   7-000376	000004     2	(2)
 SPHYSP	I*2   7-000650	000010     4	(4)
 STRSTG	I*2  10-000222	000040    16	(16)
 SUFDEF	I*2   7-000162	000010     4	(4)
 SUFNAM	I*2  10-000162	000040    16	(16)
 TABEQS	I*2   7-000514	000010     4	(4)
 TABLAN	I*2   7-000316	000006     3	(3)
 TABOPR	I*2   7-000712	000006     3	(3)
FORTRAN IV-PLUS V02-51D		02:59:09    22-AUG-78		PAGE 6   
FLDPRO.FOR   	/TR:BLOCKS/WR

 TABPRN	I*2   7-000700	000012     5	(5)
 TABRAN	I*2   7-000254	000006     3	(3)
 TABSTG	I*2   7-000214	000004     2	(2)
 TAGNAM	I*2  10-000400	000040    16	(16)
 TMPVAL	I*2  10-002172	000242    81	(81)
 TOKSTG	I*2  10-000000	000120    40	(40)
 UNITYP	I*2   7-000172	000004     2	(2)
 ZEROSG	I*2   7-000622	000004     2	(2)
 ZRLAHY	I*2   7-000242	000012     5	(5)


LABELS

 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	

 10	 1-000414	 15	 1-000760	 20	 1-001326	 25	 1-001604	 30	 1-001646
 35	 1-001756	 40	 1-002024	 45	 1-002062	 100	 1-002200	 110	 1-002230
 120	 1-002260	 420'	 3-000006	 430'	    **   	 500'	 3-000000	 1000'	 3-000026
 1100'	 3-000106	 1200'	 3-000152


FUNCTIONS AND SUBROUTINES REFERENCED

 CHKALC	 GETREM	 GETTOK	 GETUND	 INIFLD	 INTVAL	 LASTNB	 MOVSTG	 OUTFLD	 OUT2LN	 SAVSBA	 STANEG	 $MAX0


TOTAL SPACE ALLOCATED = 011344  2418

NO FPP INSTRUCTIONS GENERATED
FORTRAN IV-PLUS V02-51D		02:59:47    22-AUG-78		PAGE 7   
FLDPRO.FOR   	/TR:BLOCKS/WR

         
0001    	SUBROUTINE PSBFLD
         
        C	THIS ROUTINE IS CALLED WHEN A LINE HAS BEEN RECOGNIZED
        C	AS A SUBFIELD DEFINITION. THE IMPLICIT ARGUMENT
        C	INPTR IS THE OFFSET TO THE NEXT CHARACTER IN THE INPUT LINE.
         
        C	PSBFLD COLLECTS THE NAME OF THE SUBFIELD, THE OFFSET,
        C	THE UNIT, THE SIZE, AND THE SIGN. THEN IT OUTPUTS
        C	APPROPRIATE STATEMENTS TO THE BLISS AND MARS TRANSLATED FILES.
         
0002    	INCLUDE 'SRC$:MDL.CMN/NOLIST'
         
0016    	INTEGER LOCAL, COUNT, OSFSET
         
        C	INITIALIZE THE OFFSET, UNIT TYPE, SIZE, SIGN, AND
        C	NAME FIELDS
         
0017    	LOCAL = -1
0018    	CALL INIFLD
         
        C	PICK UP THE NAME TOKEN
         
0019    	CALL GETTOK
0020    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
0021    500	FORMAT (' ',90A1)
0022    	IF (TOKTYP .NE. ALPHA) GOTO 10
0023    	CALL MOVSTG (TOKSTG, FLDNAM)
0024    	CALL GETTOK
0025    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
         
        C	NAME, IF ANY, IS RETRIEVED. NOW CHECK FOR AN OFFSET ARGUMENT.
         
0026    10	IF (DEBUG) TYPE 420, TOKTYP
0027    420	FORMAT (' TOKTYP IS ',I3)
0028    	IF (TOKTYP .NE. COMMA) GOTO 30
0029    	CALL GETTOK
0030    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
0031    	IF (TOKTYP .NE. NUMBER) GOTO 15
0032    	LOCAL = INTVAL (TOKSTG)
0033    	IF (DEBUG) TYPE 310, LOCAL, SOFSET, LSBSIZ
0034    310	FORMAT (' OFFSET ',I3,' SOFSET ',I3,' LSBSIZ ',I3)
0035    	IF (LOCAL .EQ. -1) GOTO 100
0036    	IF ((LOCAL + BOFSET) .LT. BLFOFS) GOTO 105
         
        C	NOW LOOK FOR A UNIT DESCRIPTOR FIELD.
         
0037    	CALL GETTOK
0038    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
         
        C	OFFSET ARGUMENT, IF ANY, HAS BEEN COLLECTED. NOW LOOK FOR
        C	A UNIT DESCRIPTOR ARGUMENT.
         
0039    15	IF (DEBUG) TYPE 420, TOKTYP
0040    	IF (TOKTYP .NE. COMMA) GOTO 30
0041    	CALL GETTOK
FORTRAN IV-PLUS V02-51D		02:59:47    22-AUG-78		PAGE 8   
FLDPRO.FOR   	/TR:BLOCKS/WR

0042    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
0043    	IF (TOKTYP .NE. ALPHA) GOTO 20
0044    	CALL GETUND (TOKSTG)
0045    	IF (UNDOK .EQ. .FALSE.) GOTO 110
0046    	CALL GETTOK
0047    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
         
        C	UNIT DESCRIPTOR, IF ANY, HAS BEEN SAVED. NOW LOOK FOR
        C	THE SIZE ARGUMENT.
         
0048    20	IF (DEBUG) TYPE 420, TOKTYP
0049    	IF (TOKTYP .NE. COMMA) GOTO 30
0050    	CALL GETTOK
0051    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
0052    	IF (TOKTYP .NE. NUMBER) GOTO 25
0053    	FSIZ = INTVAL (TOKSTG)
0054    	IF (FSIZ .EQ. -1) GOTO 120
0055    	CALL GETTOK
0056    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
         
        C	SIZE OF SUBFIELD, IF ANY, HAS BEEN SAVED. NOW
        C	LOOK FOR THE SIGN ARGUMENT.
         
0057    25	IF (DEBUG) TYPE 420, TOKTYP
0058    	IF (TOKTYP .NE. COMMA) GOTO 30
0059    	CALL GETTOK
0060    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
0061    	IF (TOKTYP .NE. ALPHA) GOTO 30
0062    	IF (TOKSTG (1) .NE. 1) GOTO 130
0063    	IF (TOKSTG (2) .NE. 'S') GOTO 130
0064    	FSIGN = 1
0065    	ASIGN (2) = '1'
0066    	INPTR = INPTR - 1
0067    	GOTO 35
         
        C	FIELDS ARE ALL COLLECTED. NOW OUTPUT LINES TO BLISS AND
        C	MARS, AND UPDATE SUBFIELD OFFSET COUNTER. IF SOME
        C	TRAILING FIELDS WERE OMITTED, THE INPUT LINE POINTER
        C	IS ONE CHARACTER TOO FAR. BACK IT UP TO THE CORRECT
        C	POSITION.
         
0068    30	INPTR = LASTNB (INPTR - 2)
         
0069    35	IF (DEBUG) TYPE 430, BLFOFS, LSBSIZ, FOFSET, SOFSET
0070    430	FORMAT (' BLFOFS ',I3,' LSBSIZ ',I3,' FOFSET ',I3,' SOFSET ',I3)
         
        C	SEE WHAT SORT OF ALLOCATION TO DO.
         
0071    	IF (LOCAL .EQ. -1) GOTO 40
0072    	IF (LOCAL .GT. SOFSET) GOTO 45
0073    	IF (LOCAL .LT. SOFSET) GOTO 50
         
        C	IN THIS CASE, THE OFFSET SPECIFIED IS EQUAL TO THE
        C	CURRENT SUBFIELD OFFSET. JUST OUTPUT THE SIZE OF THE LAST SUBFIELD,
        C	IF ANY.
         
FORTRAN IV-PLUS V02-51D		02:59:47    22-AUG-78		PAGE 9   
FLDPRO.FOR   	/TR:BLOCKS/WR

0074    	IF (DEBUG) TYPE 440, LSBSIZ
0075    440	FORMAT (' OFFSET REMAINS SAME, OUTPUT LSBSIZ ',I3)
0076    	IF (LSBSIZ .NE. 0) CALL OUTBLK (LSBSIZ)
0077    	GOTO 60
         
        C	HERE, NO OFFSET WAS SPECIFIED, JUST OUTPUT THE SIZE OF THE
        C	LAST SUBFIELD.
         
0078    40	IF (DEBUG) TYPE 450, LSBSIZ
0079    450	FORMAT (' NO OFFSET SPECIFIED, OUTPUT LSBSIZ ',I3)
0080    	IF (LSBSIZ .NE. 0) CALL OUTBLK (LSBSIZ)
0081    	GOTO 60
         
        C	HERE, THE OFFSET SPECIFIED WAS GREATER THAN THE CURRENT
        C	SUBFIELD OFFSET. OUTPUT THE SIZE OF THE LAST FIELD, AND THEN
        C	OUTPUT THE ADDITIONAL BYTES TO BRING IT UP TO THE SPECIFIED
        C	OFFSET.
         
0082    45	IF (DEBUG) TYPE 460, LOCAL, LSBSIZ
0083    460	FORMAT (' OFFSET SPECIFIED IS ',I3,' OUTPUT LSBSIZ ',I3)
0084    	IF (LSBSIZ .NE. 0) CALL OUTBLK (LSBSIZ)
0085    	COUNT = LOCAL - SOFSET
0086    	IF (DEBUG) TYPE 470, COUNT
0087    470	FORMAT (' NOW ADDITIONAL SIZE OF ',I3)
0088    	IF (COUNT .NE. 0) CALL OUTBLK (COUNT)
0089    	SOFSET = LOCAL
0090    	GOTO 60
         
        C	HERE, THE OFFSET SPECIFIED WAS LESS THAN THE CURRENT
        C	SUBFIELD OFFSET. REDUCE THE CURRENT OFFSET TO THAT SPECIFIED.
        C	COMPUTE THE NOW REDUCED SIZE OF THE LAST SUBFIELD, AND ALLOCATE
        C	THAT AMOUNT.
         
0091    50	IF (DEBUG) TYPE 480, LOCAL, LSBSIZ
0092    480	FORMAT (' REDUCED OFFSET IS ',I3,', LAST LSBSIZ IS ',I3)
0093    	OSFSET = SOFSET - LSBSIZ
0094    	SOFSET = LOCAL
0095    	LSBSIZ = SOFSET - OSFSET
0096    	IF (DEBUG) TYPE 490, LSBSIZ
0097    490	FORMAT (' NEW LSBSIZ IS ',I3)
0098    	IF (LSBSIZ .NE. 0) CALL OUTBLK (LSBSIZ)
0099    	GOTO 60
         
        C	NOW SET UP ALL THE FIELDS AND OUTPUT THE FIELD NAME.
         
0100    60	IF ((SOFSET + (FSIZ * UNISIZ)) .GT. LFDSIZ) GOTO 125
0101    	FLDLAS = .TRUE.
0102    	LSBSIZ = FSIZ * UNISIZ
0103    	CALL SAVSBA
0104    	INBUF (INPTR) = INBUF (1) - INPTR + 1
0105    	CALL GETREM (INPTR)
0106    	CALL OUTFLD
0107    	RETURN
         
        C	ERROR REPORTING
         
FORTRAN IV-PLUS V02-51D		02:59:47    22-AUG-78		PAGE 10  
FLDPRO.FOR   	/TR:BLOCKS/WR

0108    100	TYPE 1000
0109    1000	FORMAT (' INVALID OFFSET IN SUBFIELD DEFINITION')
0110    	RETURN
         
0111    105	TYPE 1010
0112    1010	FORMAT (' SUBFIELD OFFSET OUT OF ORDER')
0113    	RETURN
         
0114    110	TYPE 1100
0115    1100	FORMAT (' INVALID UNIT DESCRIPTOR IN SUBFIELD DEFINITION')
0116    	RETURN
         
0117    120	TYPE 1200
0118    1200	FORMAT (' INVALID SIZE IN SUBFIELD DEFINITION')
0119    	RETURN
         
0120    125	TYPE 1210
0121    1210	FORMAT (' SUBFIELD SIZE TOO LARGE')
0122    	RETURN
         
0123    130	TYPE 1300
0124    1300	FORMAT (' INVALID SIGN ARGUMENT IN SUBFIELD DEFINITION')
0125    	RETURN
0126    	END
FORTRAN IV-PLUS V02-51D		02:59:47    22-AUG-78		PAGE 11  
FLDPRO.FOR   	/TR:BLOCKS/WR

PROGRAM SECTIONS

NUMBER	 NAME	    SIZE		ATTRIBUTES

  1	$CODE1	003416   903		RW,I,CON,LCL
  3	$IDATA	001134   302		RW,D,CON,LCL
  4	$VARS	000010     4		RW,D,CON,LCL
  5	$TEMPS	000002     1		RW,D,CON,LCL
  6	LOG	000036    15		RW,D,OVR,GBL
  7	STGS	001064   282		RW,D,OVR,GBL
  8	MORSTG	000004     2		RW,D,OVR,GBL
  9	CHECKS	000002     1		RW,D,OVR,GBL
 10	PARSE	004160  1080		RW,D,OVR,GBL
 11	FILES	001214   326		RW,D,OVR,GBL
 12	SPCHR	000006     3		RW,D,OVR,GBL
 13	LUNS	000014     6		RW,D,OVR,GBL


ENTRY POINTS

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 PSBFLD	      1-000000


VARIABLES

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 BLANK	I*2  12-000000	 BLBITS	I*2  10-001022	 BLFOFS	I*2  10-001462	 BLI	I*2  13-000002	 BLIPTR	I*2  11-001212
 BLKOUT	L*2   6-000022	 BOFSET	I*2  10-000452	 CBASE	I*2  10-000554	 CINCR	I*2  10-000556	 CONEXP	L*2   6-000026
 COUNT	I*2   4-000002	 DEBUG	I*2   9-000000	 ENDEXP	L*2   6-000024	 ENDFIL	L*2   6-000000	 EOLCH	I*2  12-000004
 ERR	I*2  13-000010	 ERROR	L*2   6-000002	 ERROUT	L*2   6-000016	 FLDLAS	L*2   6-000020	 FOFSET	I*2  10-000442
 FSIGN	I*2  10-000266	 FSIZ	I*2  10-000264	 I	I*2   4-000006	 INP	I*2  13-000000	 INPLIN	I*2  11-000246
 INPTR	I*2  11-000244	 LASLIN	I*2  10-002434	 LFDSIZ	I*2  10-001026	 LINTYP	I*2  10-000446	 LOCAL	I*2   4-000000
 LPTR	I*2  10-001030	 LSBSIZ	I*2  10-001024	 MAR	I*2  13-000004	 MARPTR	I*2  11-000630	 MNGCNT	I*2  10-004156
 NEGCNT	I*2  10-004154	 OBBITS	I*2  10-001464	 OFSIZ	I*2  10-001456	 OSFSET	I*2   4-000004	 OUNSIZ	I*2  10-001460
 POSOFF	L*2   6-000030	 SMASK	L*2   6-000014	 SOFSET	I*2  10-000440	 STGEQL	L*2   6-000004	 STROK	L*2   6-000006
 TAB	I*2  12-000002	 TMP	I*2  13-000006	 TMPIN	L*2   6-000034	 TMPOUT	L*2   6-000032	 TOKTYP	I*2  10-000120
 TTY	I*2  13-000012	 UNDOK	L*2   6-000010	 UNISIZ	I*2  10-000262	 VMASK	L*2   6-000012	 VOFSET	I*2  10-000444
 VSIZ	I*2  10-000450


ARRAYS

 NAME   TYPE  ADDRESS	    SIZE 	DIMENSIONS

 AMASK	I*2   7-000332	000004     2	(2)
 ASIGN	I*2   7-000626	000004     2	(2)
 BLBASE	I*2  10-002436	000242    81	(81)
 BLIBUF	I*2  11-000632	000360   120	(120)
 BLINCR	I*2  10-003142	000242    81	(81)
 BLSSIZ	I*2   7-000576	000024    10	(10)
 BVALUE	I*2  10-001730	000242    81	(81)
 BYTSIZ	I*2   7-000352	000024    10	(10)
 COMGBL	I*2   7-000664	000014     6	(6)
FORTRAN IV-PLUS V02-51D		02:59:47    22-AUG-78		PAGE 12  
FLDPRO.FOR   	/TR:BLOCKS/WR

 COMMAS	I*2   7-000304	000004     2	(2)
 CONBAS	I*2   7-000422	000024    10	(10)
 CONINC	I*2   7-000446	000024    10	(10)
 CONPRE	I*2  10-000454	000040    16	(16)
 CONTAG	I*2  10-000514	000040    16	(16)
 CONTEX	I*2  10-003646	000306    99	(9,11)
 CPAREN	I*2   7-000726	000004     2	(2)
 CPRCOM	I*2   7-000720	000006     3	(3)
 CVALUE	I*2  10-000560	000242    81	(81)
 DEFEND	I*2   7-000114	000024    10	(10)
 DEFINI	I*2   7-000042	000024    10	(10)
 DOLBIT	I*2   7-000736	000032    13	(13)
 DOLBYT	I*2   7-000770	000034    14	(14)
 DOLDEF	I*2   7-000066	000014     6	(6)
 DOLFLD	I*2   7-001024	000030    12	(12)
 DOLGBL	I*2   7-000026	000014     6	(6)
 DOLVLD	I*2   7-000220	000022     9	(9)
 DOTBLK	I*2   7-000336	000014     6	(6)
 DOTEQS	I*2   7-000102	000012     5	(5)
 DOTMAC	I*2   7-000000	000026    11	(11)
 ENDMAC	I*2   7-000140	000022     9	(9)
 EQULST	I*2   7-000262	000022     9	(9)
 EQUTAB	I*2   7-000402	000014     6	(6)
 EXCLSP	I*2   7-000176	000016     7	(7)
 EXPCLO	I*2   7-001060	000004     2	(2)
 EXPOPN	I*2   7-001054	000004     2	(2)
 FLDNAM	I*2  10-000270	000110    36	(36)
 HYPHEN	I*2   7-000660	000004     2	(2)
 INBUF	I*2  11-000000	000244    82	(82)
 LANHYP	I*2   7-000310	000006     3	(3)
 LITTAB	I*2   7-000472	000022     9	(9)
 MACTAB	I*2   7-000532	000020     8	(8)
 MARBUF	I*2  11-000250	000360   120	(120)
 MRBASE	I*2  10-002700	000242    81	(81)
 MRINCR	I*2  10-003404	000242    81	(81)
 MVALUE	I*2  10-001466	000242    81	(81)
 NEGSGN	I*2   8-000000	000004     2	(2)
 OASIGN	I*2   7-000732	000004     2	(2)
 OFFSET	I*2   7-000552	000024    10	(10)
 ONESHF	I*2   7-000642	000006     3	(3)
 OPAREN	I*2   7-000416	000004     2	(2)
 OSBNAM	I*2  10-001316	000040    16	(16)
 OTGNAM	I*2  10-001356	000040    16	(16)
 OUNTYP	I*2  10-001416	000040    16	(16)
 PCTSEM	I*2   7-000632	000010     4	(4)
 PRENAM	I*2  10-000122	000040    16	(16)
 RANHYP	I*2   7-000324	000006     3	(3)
 RSTLIN	I*2  10-001032	000264    90	(90)
 SEMSPC	I*2   7-000524	000006     3	(3)
 SPCSTG	I*2   7-000376	000004     2	(2)
 SPHYSP	I*2   7-000650	000010     4	(4)
 STRSTG	I*2  10-000222	000040    16	(16)
 SUFDEF	I*2   7-000162	000010     4	(4)
 SUFNAM	I*2  10-000162	000040    16	(16)
 TABEQS	I*2   7-000514	000010     4	(4)
 TABLAN	I*2   7-000316	000006     3	(3)
FORTRAN IV-PLUS V02-51D		02:59:47    22-AUG-78		PAGE 13  
FLDPRO.FOR   	/TR:BLOCKS/WR

 TABOPR	I*2   7-000712	000006     3	(3)
 TABPRN	I*2   7-000700	000012     5	(5)
 TABRAN	I*2   7-000254	000006     3	(3)
 TABSTG	I*2   7-000214	000004     2	(2)
 TAGNAM	I*2  10-000400	000040    16	(16)
 TMPVAL	I*2  10-002172	000242    81	(81)
 TOKSTG	I*2  10-000000	000120    40	(40)
 UNITYP	I*2   7-000172	000004     2	(2)
 ZEROSG	I*2   7-000622	000004     2	(2)
 ZRLAHY	I*2   7-000242	000012     5	(5)


LABELS

 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	

 10	 1-000310	 15	 1-000762	 20	 1-001326	 25	 1-001674	 30	 1-002152
 35	 1-002214	 40	 1-002412	 45	 1-002476	 50	 1-002670	 60	 1-003054
 100	 1-003176	 105	 1-003226	 110	 1-003256	 120	 1-003306	 125	 1-003336
 130	 1-003366	 310'	 3-000026	 420'	 3-000006	 430'	 3-000074	 440'	 3-000156
 450'	 3-000230	 460'	 3-000302	 470'	 3-000360	 480'	 3-000416	 490'	 3-000474
 500'	 3-000000	 1000'	 3-000520	 1010'	 3-000572	 1100'	 3-000632	 1200'	 3-000714
 1210'	 3-000764	 1300'	 3-001020


FUNCTIONS AND SUBROUTINES REFERENCED

 GETREM	 GETTOK	 GETUND	 INIFLD	 INTVAL	 LASTNB	 MOVSTG	 OUTBLK	 OUTFLD	 SAVSBA


TOTAL SPACE ALLOCATED = 013332  2925

NO FPP INSTRUCTIONS GENERATED

OBJ$:FLDPRO,LIS$:FLDPRO/-SP=SRC$:FLDPRO.FOR
