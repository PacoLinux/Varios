FORTRAN IV-PLUS V02-51D		02:55:38    22-AUG-78		PAGE 1   
STPROC.FOR   	/TR:BLOCKS/WR

        C	REVISION HISTORY:
        C		23-03-77	CP	INITIALIZE THE STRING SUFNAM TO
        C					THE SAME STRING OF CHARACTERS AS
        C					THE STRING SUFDEF.
         
0001    	SUBROUTINE GETSTC
         
        C	ONCE A LINE IS IDENTIFIED AS A STRUCTURE DECLARATION,
        C	THIS SUBROUTINE, GETSTC, IS CALLED TO COLLECT THE NAME
        C	OF THE STRUCTURE (HEREAFTER REFERRED TO AS THE PREFIX)
        C	AND THE SUFFIX (OPTIONAL).
         
        C	THE INPUT ARGUMENT IS THE SUBSCRIPT OFFSET TO THE NEXT
        C	CHARACTER TO BE READ IN THE INPUT LINE.
         
        C	IF AN ERROR IS DETECTED, THE LOGICAL VARIABLE STROK IS
        C	SET TO FALSE.
         
0002    	INCLUDE 'SRC$:MDL.CMN/NOLIST'
         
0016    	DATA STRSTG(1)/7/,STRSTG(2)/'$'/,STRSTG(3)/'S'/,
        	1	STRSTG(4)/'T'/,STRSTG(5)/'R'/,STRSTG(6)/'U'/,
        	2	STRSTG(7)/'C'/,STRSTG(8)/'T'/
         
        C	FIRST INITIALIZE THE SUFFIX NAME TO THE DEFAULT VALUE.
        C	ALSO INITIALIZE THE PREFIX NAME TO A LENGTH OF ZERO.
         
0017    	DO 10 I = 1,4
0018    	SUFNAM (I) = SUFDEF (I)
0019    10	CONTINUE
0020    	PRENAM (1) = 0
         
        C	NOW LOOK FOR THE STRUCTURE PREFIX NAME.
         
0021    	IF (DEBUG) TYPE 500
0022    500	FORMAT (' INTO GETSTC')
0023    	CALL GETTOK
0024    	IF (TOKTYP .NE. ALPHA) GOTO 100
0025    	CALL MOVSTG (TOKSTG, PRENAM)
        C	IF (DEBUG) TYPE 510, (PRENAM (I), I = 2, PRENAM (1) + 1)
0026    510	FORMAT (' PREFIX IS ',15A1)
0027    	CALL GETTOK
0028    	IF (TOKTYP .NE. COMMA) GOTO 15
0029    	CALL GETTOK
0030    	IF (TOKTYP .NE. ALPHA) GOTO 100
0031    	CALL MOVSTG (TOKSTG, SUFNAM)
        C	IF (DEBUG) TYPE 520, (SUFNAM (I), I = 2, SUFNAM (1) + 1)
0032    520	FORMAT (' SUFFIX IS ',15A1)
         
0033    15	INPTR = LASTNB (INPTR - 2)
0034    20	CALL OUTSTR
0035    	CALL INISTR
0036    	STROK = .TRUE.
0037    	RETURN
         
0038    100	TYPE 1000
FORTRAN IV-PLUS V02-51D		02:55:38    22-AUG-78		PAGE 2   
STPROC.FOR   	/TR:BLOCKS/WR

0039    1000	FORMAT (' INVALID STRUCTURE DECLARATION')
0040    	STROK = .FALSE.
0041    	END
FORTRAN IV-PLUS V02-51D		02:55:38    22-AUG-78		PAGE 3   
STPROC.FOR   	/TR:BLOCKS/WR

PROGRAM SECTIONS

NUMBER	 NAME	    SIZE		ATTRIBUTES

  1	$CODE1	000342   113		RW,I,CON,LCL
  3	$IDATA	000104    34		RW,D,CON,LCL
  4	$VARS	000002     1		RW,D,CON,LCL
  6	LOG	000036    15		RW,D,OVR,GBL
  7	STGS	001064   282		RW,D,OVR,GBL
  8	MORSTG	000004     2		RW,D,OVR,GBL
  9	CHECKS	000002     1		RW,D,OVR,GBL
 10	PARSE	004160  1080		RW,D,OVR,GBL
 11	FILES	001214   326		RW,D,OVR,GBL
 12	SPCHR	000006     3		RW,D,OVR,GBL
 13	LUNS	000014     6		RW,D,OVR,GBL


ENTRY POINTS

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 GETSTC	      1-000000


VARIABLES

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 BLANK	I*2  12-000000	 BLBITS	I*2  10-001022	 BLFOFS	I*2  10-001462	 BLI	I*2  13-000002	 BLIPTR	I*2  11-001212
 BLKOUT	L*2   6-000022	 BOFSET	I*2  10-000452	 CBASE	I*2  10-000554	 CINCR	I*2  10-000556	 CONEXP	L*2   6-000026
 DEBUG	I*2   9-000000	 ENDEXP	L*2   6-000024	 ENDFIL	L*2   6-000000	 EOLCH	I*2  12-000004	 ERR	I*2  13-000010
 ERROR	L*2   6-000002	 ERROUT	L*2   6-000016	 FLDLAS	L*2   6-000020	 FOFSET	I*2  10-000442	 FSIGN	I*2  10-000266
 FSIZ	I*2  10-000264	 I	I*2   4-000000	 INP	I*2  13-000000	 INPLIN	I*2  11-000246	 INPTR	I*2  11-000244
 LASLIN	I*2  10-002434	 LFDSIZ	I*2  10-001026	 LINTYP	I*2  10-000446	 LPTR	I*2  10-001030	 LSBSIZ	I*2  10-001024
 MAR	I*2  13-000004	 MARPTR	I*2  11-000630	 MNGCNT	I*2  10-004156	 NEGCNT	I*2  10-004154	 OBBITS	I*2  10-001464
 OFSIZ	I*2  10-001456	 OUNSIZ	I*2  10-001460	 POSOFF	L*2   6-000030	 SMASK	L*2   6-000014	 SOFSET	I*2  10-000440
 STGEQL	L*2   6-000004	 STROK	L*2   6-000006	 TAB	I*2  12-000002	 TMP	I*2  13-000006	 TMPIN	L*2   6-000034
 TMPOUT	L*2   6-000032	 TOKTYP	I*2  10-000120	 TTY	I*2  13-000012	 UNDOK	L*2   6-000010	 UNISIZ	I*2  10-000262
 VMASK	L*2   6-000012	 VOFSET	I*2  10-000444	 VSIZ	I*2  10-000450


ARRAYS

 NAME   TYPE  ADDRESS	    SIZE 	DIMENSIONS

 AMASK	I*2   7-000332	000004     2	(2)
 ASIGN	I*2   7-000626	000004     2	(2)
 BLBASE	I*2  10-002436	000242    81	(81)
 BLIBUF	I*2  11-000632	000360   120	(120)
 BLINCR	I*2  10-003142	000242    81	(81)
 BLSSIZ	I*2   7-000576	000024    10	(10)
 BVALUE	I*2  10-001730	000242    81	(81)
 BYTSIZ	I*2   7-000352	000024    10	(10)
 COMGBL	I*2   7-000664	000014     6	(6)
 COMMAS	I*2   7-000304	000004     2	(2)
 CONBAS	I*2   7-000422	000024    10	(10)
FORTRAN IV-PLUS V02-51D		02:55:38    22-AUG-78		PAGE 4   
STPROC.FOR   	/TR:BLOCKS/WR

 CONINC	I*2   7-000446	000024    10	(10)
 CONPRE	I*2  10-000454	000040    16	(16)
 CONTAG	I*2  10-000514	000040    16	(16)
 CONTEX	I*2  10-003646	000306    99	(9,11)
 CPAREN	I*2   7-000726	000004     2	(2)
 CPRCOM	I*2   7-000720	000006     3	(3)
 CVALUE	I*2  10-000560	000242    81	(81)
 DEFEND	I*2   7-000114	000024    10	(10)
 DEFINI	I*2   7-000042	000024    10	(10)
 DOLBIT	I*2   7-000736	000032    13	(13)
 DOLBYT	I*2   7-000770	000034    14	(14)
 DOLDEF	I*2   7-000066	000014     6	(6)
 DOLFLD	I*2   7-001024	000030    12	(12)
 DOLGBL	I*2   7-000026	000014     6	(6)
 DOLVLD	I*2   7-000220	000022     9	(9)
 DOTBLK	I*2   7-000336	000014     6	(6)
 DOTEQS	I*2   7-000102	000012     5	(5)
 DOTMAC	I*2   7-000000	000026    11	(11)
 ENDMAC	I*2   7-000140	000022     9	(9)
 EQULST	I*2   7-000262	000022     9	(9)
 EQUTAB	I*2   7-000402	000014     6	(6)
 EXCLSP	I*2   7-000176	000016     7	(7)
 EXPCLO	I*2   7-001060	000004     2	(2)
 EXPOPN	I*2   7-001054	000004     2	(2)
 FLDNAM	I*2  10-000270	000110    36	(36)
 HYPHEN	I*2   7-000660	000004     2	(2)
 INBUF	I*2  11-000000	000244    82	(82)
 LANHYP	I*2   7-000310	000006     3	(3)
 LITTAB	I*2   7-000472	000022     9	(9)
 MACTAB	I*2   7-000532	000020     8	(8)
 MARBUF	I*2  11-000250	000360   120	(120)
 MRBASE	I*2  10-002700	000242    81	(81)
 MRINCR	I*2  10-003404	000242    81	(81)
 MVALUE	I*2  10-001466	000242    81	(81)
 NEGSGN	I*2   8-000000	000004     2	(2)
 OASIGN	I*2   7-000732	000004     2	(2)
 OFFSET	I*2   7-000552	000024    10	(10)
 ONESHF	I*2   7-000642	000006     3	(3)
 OPAREN	I*2   7-000416	000004     2	(2)
 OSBNAM	I*2  10-001316	000040    16	(16)
 OTGNAM	I*2  10-001356	000040    16	(16)
 OUNTYP	I*2  10-001416	000040    16	(16)
 PCTSEM	I*2   7-000632	000010     4	(4)
 PRENAM	I*2  10-000122	000040    16	(16)
 RANHYP	I*2   7-000324	000006     3	(3)
 RSTLIN	I*2  10-001032	000264    90	(90)
 SEMSPC	I*2   7-000524	000006     3	(3)
 SPCSTG	I*2   7-000376	000004     2	(2)
 SPHYSP	I*2   7-000650	000010     4	(4)
 STRSTG	I*2  10-000222	000040    16	(16)
 SUFDEF	I*2   7-000162	000010     4	(4)
 SUFNAM	I*2  10-000162	000040    16	(16)
 TABEQS	I*2   7-000514	000010     4	(4)
 TABLAN	I*2   7-000316	000006     3	(3)
 TABOPR	I*2   7-000712	000006     3	(3)
 TABPRN	I*2   7-000700	000012     5	(5)
FORTRAN IV-PLUS V02-51D		02:55:38    22-AUG-78		PAGE 5   
STPROC.FOR   	/TR:BLOCKS/WR

 TABRAN	I*2   7-000254	000006     3	(3)
 TABSTG	I*2   7-000214	000004     2	(2)
 TAGNAM	I*2  10-000400	000040    16	(16)
 TMPVAL	I*2  10-002172	000242    81	(81)
 TOKSTG	I*2  10-000000	000120    40	(40)
 UNITYP	I*2   7-000172	000004     2	(2)
 ZEROSG	I*2   7-000622	000004     2	(2)
 ZRLAHY	I*2   7-000242	000012     5	(5)


LABELS

 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	

 10	    **   	 15	 1-000214	 20	    **   	 100	 1-000306	 500'	 3-000000
 510'	    **   	 520'	    **   	 1000'	 3-000020


FUNCTIONS AND SUBROUTINES REFERENCED

 GETTOK	 INISTR	 LASTNB	 MOVSTG	 OUTSTR


TOTAL SPACE ALLOCATED = 007216  1863

NO FPP INSTRUCTIONS GENERATED
FORTRAN IV-PLUS V02-51D		02:55:54    22-AUG-78		PAGE 6   
STPROC.FOR   	/TR:BLOCKS/WR

         
        C	REVISION HISTORY:
        C		22-03-77	CP	CHANGE ORIGIN TO POINTD, PORIG
        C					TO PPOINT. ADD LEGAL DEFINITION
        C					OF 'O', ORIGIN, SETS LINE TYPE TO
        C					ORIGIN AND CALLS PPOINT.
        C					ADD LOGIC TO HANDLE NEGATIVE OFFSETS.
        C					BASICALLY, OF SEE A NEGATIVE FIELD,
        C					OUTPUT THAT LINE AND ALL SUBSEQUENT
        C					LINES UNTIL A POSITIVE FIELD IS SEEN TO
        C					A TMP FILE. WHEN A POSITIVE FIELD IS
        C					SEEN, PROCESS THE TMP FILE AS THOUGH
        C					IT WERE THE SOURCE FILE, PRECEDING ITS
        C					OUTPUT WITH A NEGATIVE BLKB DECLARATION.
        C					THEN RESUME PROCESSING OF THE SOURCE FILE.
         
        C
        C		04-04-77	TC	CORRECT BUG IN RETURNING TO NORMAL
        C					PROCESSING (CORRECTION DUE TO CP)
        C					CHANGE START OF NEGATIVE OFFSET FIELDS
        C					FROM NEGCNT TO MNGCNT (MAXIMUM NEGATIVE
        C					COUNT).
         
0001    	SUBROUTINE STPROC
         
        C	INPUTS LINES UNTIL A $STRUCT DECLARATION IS FOUND.
        C	THEN PROCEEDS TO PROCESS A STRUCTURE THROUGH THE
        C	END STATEMENT OF THE DECLARATION.
         
0002    	INCLUDE 'SRC$:MDL.CMN/NOLIST'
         
        C	INPUT LINES UNTIL A $STRUCT IS FOUND. THE FIRST TOKEN
        C	IN THE LINE SHOULD BE TYPE ALPHA, AND SHOULD MATCH
        C	STRSTG (A COUNTED STRING INITIALIZED TO '$STRUCT').
         
0016    	IF (DEBUG) TYPE 1010
0017    1010	FORMAT (' IN STPROC')
         
0018    10	CALL GETLIN
0019    	IF (.NOT. ENDFIL) GOTO 12
0020    	IF (.NOT. TMPIN) RETURN
0021    	REWIND TMP
0022    	TMPIN = .FALSE.
0023    	ENDFIL = .FALSE.
0024    	GOTO 10
         
0025    12	CALL GETTOK
0026    	IF (DEBUG) TYPE 1000, TOKTYP
0027    1000	FORMAT (' TOKTYP IS ',I2)
0028    	IF (TOKTYP .NE. ALPHA) GOTO 15
0029    	IF (DEBUG) TYPE 1020, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
0030    1020	FORMAT (' TOKSTG IS ',15A1)
0031    	CALL CMPSTG (TOKSTG, STRSTG)
0032    	IF (STGEQL) GOTO 20
         
        C	THIS LINE DOES NOT DECLARE A STRUCTURE. JUST OUTPUT IT
FORTRAN IV-PLUS V02-51D		02:55:54    22-AUG-78		PAGE 7   
STPROC.FOR   	/TR:BLOCKS/WR

        C	TO BOTH BLISS AND MARS AS IS.
         
0033    15	CALL OUT2LN
0034    	GOTO 10
         
        C	STRUCTURE DECLARATION RECOGNIZED. COLLECT THE PREFIX AND
        C	SUFFIX NAMES.
         
0035    20	LINTYP = 0
0036    	BLKOUT = .FALSE.
0037    	CALL GETSTC
0038    	IF (STROK) GOTO 25
0039    	RETURN
         
        C	NOW INPUT A LINE AND SEE WHAT TYPE OF DEFINITION IT IS.
         
0040    25	POSOFF = .TRUE.
0041    	CALL GETLIN
0042    	IF (.NOT. ENDFIL) GOTO 30
0043    	IF (.NOT. TMPIN) RETURN
0044    	REWIND TMP
0045    	TMPIN = .FALSE.
0046    	ENDFIL = .FALSE.
0047    	GOTO 25
         
0048    30	CALL GETTOK
0049    	IF (TOKTYP .EQ. MINUS) GOTO 35
0050    	IF (TOKTYP .NE. PLUS) GOTO 45
0051    	GOTO 40
         
0052    35	POSOFF = .FALSE.
0053    	INBUF (INPTR - 1) = '+'
0054    	IF (.NOT. TMPIN) GOTO 40
0055    	TYPE 2000
0056    2000	FORMAT (' NEGATIVE DEFINITION IN TMP FILE')
0057    	RETURN
         
0058    40	CALL GETTOK
0059    45	IF ((TOKTYP .EQ. ALPHA) .AND.
        	1	(TOKSTG (1) .EQ. 1)) GOTO 55
         
0060    50	CALL OUT2LN
0061    	GOTO 25
         
0062    55	IF (TOKSTG (2) .NE. 'F') GOTO 65
0063    	IF (.NOT. POSOFF) GOTO 60
0064    	IF (FLDLAS) CALL CHKALC
         
0065    60	LINTYP = FIELD
0066    	CALL PFIELD
0067    	GOTO 25
         
0068    65	IF (POSOFF) GOTO 70
0069    	TYPE 2010
0070    2010	FORMAT (' INVALID NEGATIVE DEFINITION')
0071    	GOTO 50
FORTRAN IV-PLUS V02-51D		02:55:54    22-AUG-78		PAGE 8   
STPROC.FOR   	/TR:BLOCKS/WR

         
0072    70	IF (TOKSTG (2) .EQ. 'E') GOTO 155
0073    	IF (TOKSTG (2) .EQ. 'M') GOTO 160
0074    	IF (TOKSTG (2) .EQ. 'P') GOTO 165
0075    	IF (TOKSTG (2) .EQ. 'O') GOTO 170
0076    	IF (TOKSTG (2) .EQ. 'V') GOTO 140
0077    	IF ((TOKSTG (2) .EQ. 'C') .OR.
        	1	(TOKSTG (2) .EQ. 'K')) GOTO 145
0078    	IF (TMPOUT) GOTO 50
0079    	IF (TOKSTG (2) .EQ. 'S') GOTO 135
0080    	IF (TOKSTG (2) .EQ. 'L') GOTO 150
0081    	GOTO 50
         
        C	PROCESS A SUBFIELD DECLARATION
         
0082    135	LINTYP = SBFLD
0083    	CALL PSBFLD
0084    	GOTO 25
         
        C	PROCESS A BITFIELD DECLARATION
         
0085    140	LINTYP = VIELD
0086    	CALL PVIELD
0087    	GOTO 25
         
        C	PROCESS A CONSTANT DECLARATION
         
0088    145		LINTYP = CONST
0089    	CALL PCONST
0090    	GOTO 25
         
        C	PROCESS A LABEL DECLARATION
         
0091    150	IF (FLDLAS) CALL CHKALC
0092    	LINTYP = LABELN
0093    	CALL PLABEL
0094    	GOTO 25
         
        C	PROCESS AN END DECLARATION
         
0095    155	IF (TMPOUT) GOTO 157
0096    	IF (FLDLAS) CALL CHKALC
0097    	CALL OUTSTE 
0098    	RETURN
         
0099    157	CALL OUT2LN
0100    	CALL STANEG
0101    	GOTO 25
         
        C	THIS IS A POSITION MARKING
         
0102    160	LINTYP = MARKPT
0103    	CALL PMARK
0104    	GOTO 25
         
        C	THIS IS A POINT COMMAND
FORTRAN IV-PLUS V02-51D		02:55:54    22-AUG-78		PAGE 9   
STPROC.FOR   	/TR:BLOCKS/WR

         
0105    165	IF (FLDLAS) CALL CHKALC
0106    	LINTYP = POINTD
0107    	CALL PPOINT
0108    	GOTO 25
         
        C	THIS IS A REORIGINING COMMAND
         
0109    170	IF (FLDLAS) CALL CHKALC
0110    	LINTYP = ORIGIN
0111    	CALL PPOINT
0112    	GOTO 25
         
0113    	END
FORTRAN IV-PLUS V02-51D		02:55:54    22-AUG-78		PAGE 10  
STPROC.FOR   	/TR:BLOCKS/WR

PROGRAM SECTIONS

NUMBER	 NAME	    SIZE		ATTRIBUTES

  1	$CODE1	001610   452		RW,I,CON,LCL
  3	$IDATA	000174    62		RW,D,CON,LCL
  4	$VARS	000002     1		RW,D,CON,LCL
  5	$TEMPS	000002     1		RW,D,CON,LCL
  6	LOG	000036    15		RW,D,OVR,GBL
  7	STGS	001064   282		RW,D,OVR,GBL
  8	MORSTG	000004     2		RW,D,OVR,GBL
  9	CHECKS	000002     1		RW,D,OVR,GBL
 10	PARSE	004160  1080		RW,D,OVR,GBL
 11	FILES	001214   326		RW,D,OVR,GBL
 12	SPCHR	000006     3		RW,D,OVR,GBL
 13	LUNS	000014     6		RW,D,OVR,GBL


ENTRY POINTS

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 STPROC	      1-000000


VARIABLES

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 BLANK	I*2  12-000000	 BLBITS	I*2  10-001022	 BLFOFS	I*2  10-001462	 BLI	I*2  13-000002	 BLIPTR	I*2  11-001212
 BLKOUT	L*2   6-000022	 BOFSET	I*2  10-000452	 CBASE	I*2  10-000554	 CINCR	I*2  10-000556	 CONEXP	L*2   6-000026
 DEBUG	I*2   9-000000	 ENDEXP	L*2   6-000024	 ENDFIL	L*2   6-000000	 EOLCH	I*2  12-000004	 ERR	I*2  13-000010
 ERROR	L*2   6-000002	 ERROUT	L*2   6-000016	 FLDLAS	L*2   6-000020	 FOFSET	I*2  10-000442	 FSIGN	I*2  10-000266
 FSIZ	I*2  10-000264	 I	I*2   4-000000	 INP	I*2  13-000000	 INPLIN	I*2  11-000246	 INPTR	I*2  11-000244
 LASLIN	I*2  10-002434	 LFDSIZ	I*2  10-001026	 LINTYP	I*2  10-000446	 LPTR	I*2  10-001030	 LSBSIZ	I*2  10-001024
 MAR	I*2  13-000004	 MARPTR	I*2  11-000630	 MNGCNT	I*2  10-004156	 NEGCNT	I*2  10-004154	 OBBITS	I*2  10-001464
 OFSIZ	I*2  10-001456	 OUNSIZ	I*2  10-001460	 POSOFF	L*2   6-000030	 SMASK	L*2   6-000014	 SOFSET	I*2  10-000440
 STGEQL	L*2   6-000004	 STROK	L*2   6-000006	 TAB	I*2  12-000002	 TMP	I*2  13-000006	 TMPIN	L*2   6-000034
 TMPOUT	L*2   6-000032	 TOKTYP	I*2  10-000120	 TTY	I*2  13-000012	 UNDOK	L*2   6-000010	 UNISIZ	I*2  10-000262
 VMASK	L*2   6-000012	 VOFSET	I*2  10-000444	 VSIZ	I*2  10-000450


ARRAYS

 NAME   TYPE  ADDRESS	    SIZE 	DIMENSIONS

 AMASK	I*2   7-000332	000004     2	(2)
 ASIGN	I*2   7-000626	000004     2	(2)
 BLBASE	I*2  10-002436	000242    81	(81)
 BLIBUF	I*2  11-000632	000360   120	(120)
 BLINCR	I*2  10-003142	000242    81	(81)
 BLSSIZ	I*2   7-000576	000024    10	(10)
 BVALUE	I*2  10-001730	000242    81	(81)
 BYTSIZ	I*2   7-000352	000024    10	(10)
 COMGBL	I*2   7-000664	000014     6	(6)
 COMMAS	I*2   7-000304	000004     2	(2)
FORTRAN IV-PLUS V02-51D		02:55:54    22-AUG-78		PAGE 11  
STPROC.FOR   	/TR:BLOCKS/WR

 CONBAS	I*2   7-000422	000024    10	(10)
 CONINC	I*2   7-000446	000024    10	(10)
 CONPRE	I*2  10-000454	000040    16	(16)
 CONTAG	I*2  10-000514	000040    16	(16)
 CONTEX	I*2  10-003646	000306    99	(9,11)
 CPAREN	I*2   7-000726	000004     2	(2)
 CPRCOM	I*2   7-000720	000006     3	(3)
 CVALUE	I*2  10-000560	000242    81	(81)
 DEFEND	I*2   7-000114	000024    10	(10)
 DEFINI	I*2   7-000042	000024    10	(10)
 DOLBIT	I*2   7-000736	000032    13	(13)
 DOLBYT	I*2   7-000770	000034    14	(14)
 DOLDEF	I*2   7-000066	000014     6	(6)
 DOLFLD	I*2   7-001024	000030    12	(12)
 DOLGBL	I*2   7-000026	000014     6	(6)
 DOLVLD	I*2   7-000220	000022     9	(9)
 DOTBLK	I*2   7-000336	000014     6	(6)
 DOTEQS	I*2   7-000102	000012     5	(5)
 DOTMAC	I*2   7-000000	000026    11	(11)
 ENDMAC	I*2   7-000140	000022     9	(9)
 EQULST	I*2   7-000262	000022     9	(9)
 EQUTAB	I*2   7-000402	000014     6	(6)
 EXCLSP	I*2   7-000176	000016     7	(7)
 EXPCLO	I*2   7-001060	000004     2	(2)
 EXPOPN	I*2   7-001054	000004     2	(2)
 FLDNAM	I*2  10-000270	000110    36	(36)
 HYPHEN	I*2   7-000660	000004     2	(2)
 INBUF	I*2  11-000000	000244    82	(82)
 LANHYP	I*2   7-000310	000006     3	(3)
 LITTAB	I*2   7-000472	000022     9	(9)
 MACTAB	I*2   7-000532	000020     8	(8)
 MARBUF	I*2  11-000250	000360   120	(120)
 MRBASE	I*2  10-002700	000242    81	(81)
 MRINCR	I*2  10-003404	000242    81	(81)
 MVALUE	I*2  10-001466	000242    81	(81)
 NEGSGN	I*2   8-000000	000004     2	(2)
 OASIGN	I*2   7-000732	000004     2	(2)
 OFFSET	I*2   7-000552	000024    10	(10)
 ONESHF	I*2   7-000642	000006     3	(3)
 OPAREN	I*2   7-000416	000004     2	(2)
 OSBNAM	I*2  10-001316	000040    16	(16)
 OTGNAM	I*2  10-001356	000040    16	(16)
 OUNTYP	I*2  10-001416	000040    16	(16)
 PCTSEM	I*2   7-000632	000010     4	(4)
 PRENAM	I*2  10-000122	000040    16	(16)
 RANHYP	I*2   7-000324	000006     3	(3)
 RSTLIN	I*2  10-001032	000264    90	(90)
 SEMSPC	I*2   7-000524	000006     3	(3)
 SPCSTG	I*2   7-000376	000004     2	(2)
 SPHYSP	I*2   7-000650	000010     4	(4)
 STRSTG	I*2  10-000222	000040    16	(16)
 SUFDEF	I*2   7-000162	000010     4	(4)
 SUFNAM	I*2  10-000162	000040    16	(16)
 TABEQS	I*2   7-000514	000010     4	(4)
 TABLAN	I*2   7-000316	000006     3	(3)
 TABOPR	I*2   7-000712	000006     3	(3)
FORTRAN IV-PLUS V02-51D		02:55:54    22-AUG-78		PAGE 12  
STPROC.FOR   	/TR:BLOCKS/WR

 TABPRN	I*2   7-000700	000012     5	(5)
 TABRAN	I*2   7-000254	000006     3	(3)
 TABSTG	I*2   7-000214	000004     2	(2)
 TAGNAM	I*2  10-000400	000040    16	(16)
 TMPVAL	I*2  10-002172	000242    81	(81)
 TOKSTG	I*2  10-000000	000120    40	(40)
 UNITYP	I*2   7-000172	000004     2	(2)
 ZEROSG	I*2   7-000622	000004     2	(2)
 ZRLAHY	I*2   7-000242	000012     5	(5)


LABELS

 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	

 10	 1-000050	 12	 1-000126	 15	 1-000340	 20	 1-000360	 25	 1-000416
 30	 1-000500	 35	 1-000540	 40	 1-000616	 45	 1-000634	 50	 1-000662
 55	 1-000702	 60	 1-000744	 65	 1-000772	 70	 1-001030	 135	 1-001170
 140	 1-001220	 145	 1-001250	 150	 1-001300	 155	 1-001346	 157	 1-001412
 160	 1-001444	 165	 1-001474	 170	 1-001542	 1000'	 3-000016	 1010'	 3-000000
 1020'	 3-000036	 2000'	 3-000060	 2010'	 3-000124


FUNCTIONS AND SUBROUTINES REFERENCED

 CHKALC	 CMPSTG	 GETLIN	 GETSTC	 GETTOK	 OUTSTE	 OUT2LN	 PCONST	 PFIELD	 PLABEL	 PMARK	 PPOINT	 PSBFLD	 PVIELD	 STANEG


TOTAL SPACE ALLOCATED = 010556  2231

NO FPP INSTRUCTIONS GENERATED
FORTRAN IV-PLUS V02-51D		02:56:31    22-AUG-78		PAGE 13  
STPROC.FOR   	/TR:BLOCKS/WR

         
        C	REVISION HISTORY
        C		11-04-77	TC	ELIMINATED EXTRANEOUS STATEMENT
        C					NUMBER.
        C
         
0001    	SUBROUTINE STANEG
         
        C	THIS IS A NEW ROUTINE, VERSION 1.3
        C
        C	THIS CLOSES THE TMP FILE FOR OUTPUT. REWINDS IT.
        C	SETS FLAGS SO THAT INPUT NOW COMES FROM THE TMP
        C	FILE. SETS ALL CONTEXT VARIABLES CORRECTLY.
        C	OUTPUTS NEGATIVE BLOCK ALLOCATION IF NECESSARY.
         
0002    	INCLUDE 'SRC$:MDL.CMN/NOLIST'
         
0016    	END FILE TMP
0017    	REWIND TMP
0018    	TMPIN = .TRUE.
0019    	BLFOFS = BLFOFS - MNGCNT
0020    	BOFSET = BLFOFS
0021    	FOFSET = BLFOFS
0022    	OUNSIZ = 1
0023    	OUNTYP (2) = 'B'
0024    	IF (MNGCNT .GT. 0) CALL OUTBLK (MNGCNT)
0025    	FLDLAS = .FALSE.
0026    	TMPOUT = .FALSE.
0027    	RETURN
0028    	END
FORTRAN IV-PLUS V02-51D		02:56:31    22-AUG-78		PAGE 14  
STPROC.FOR   	/TR:BLOCKS/WR

PROGRAM SECTIONS

NUMBER	 NAME	    SIZE		ATTRIBUTES

  1	$CODE1	000136    47		RW,I,CON,LCL
  3	$IDATA	000004     2		RW,D,CON,LCL
  6	LOG	000036    15		RW,D,OVR,GBL
  7	STGS	001064   282		RW,D,OVR,GBL
  8	MORSTG	000004     2		RW,D,OVR,GBL
  9	CHECKS	000002     1		RW,D,OVR,GBL
 10	PARSE	004160  1080		RW,D,OVR,GBL
 11	FILES	001214   326		RW,D,OVR,GBL
 12	SPCHR	000006     3		RW,D,OVR,GBL
 13	LUNS	000014     6		RW,D,OVR,GBL


ENTRY POINTS

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 STANEG	      1-000000


VARIABLES

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 BLANK	I*2  12-000000	 BLBITS	I*2  10-001022	 BLFOFS	I*2  10-001462	 BLI	I*2  13-000002	 BLIPTR	I*2  11-001212
 BLKOUT	L*2   6-000022	 BOFSET	I*2  10-000452	 CBASE	I*2  10-000554	 CINCR	I*2  10-000556	 CONEXP	L*2   6-000026
 DEBUG	I*2   9-000000	 ENDEXP	L*2   6-000024	 ENDFIL	L*2   6-000000	 EOLCH	I*2  12-000004	 ERR	I*2  13-000010
 ERROR	L*2   6-000002	 ERROUT	L*2   6-000016	 FLDLAS	L*2   6-000020	 FOFSET	I*2  10-000442	 FSIGN	I*2  10-000266
 FSIZ	I*2  10-000264	 INP	I*2  13-000000	 INPLIN	I*2  11-000246	 INPTR	I*2  11-000244	 LASLIN	I*2  10-002434
 LFDSIZ	I*2  10-001026	 LINTYP	I*2  10-000446	 LPTR	I*2  10-001030	 LSBSIZ	I*2  10-001024	 MAR	I*2  13-000004
 MARPTR	I*2  11-000630	 MNGCNT	I*2  10-004156	 NEGCNT	I*2  10-004154	 OBBITS	I*2  10-001464	 OFSIZ	I*2  10-001456
 OUNSIZ	I*2  10-001460	 POSOFF	L*2   6-000030	 SMASK	L*2   6-000014	 SOFSET	I*2  10-000440	 STGEQL	L*2   6-000004
 STROK	L*2   6-000006	 TAB	I*2  12-000002	 TMP	I*2  13-000006	 TMPIN	L*2   6-000034	 TMPOUT	L*2   6-000032
 TOKTYP	I*2  10-000120	 TTY	I*2  13-000012	 UNDOK	L*2   6-000010	 UNISIZ	I*2  10-000262	 VMASK	L*2   6-000012
 VOFSET	I*2  10-000444	 VSIZ	I*2  10-000450


ARRAYS

 NAME   TYPE  ADDRESS	    SIZE 	DIMENSIONS

 AMASK	I*2   7-000332	000004     2	(2)
 ASIGN	I*2   7-000626	000004     2	(2)
 BLBASE	I*2  10-002436	000242    81	(81)
 BLIBUF	I*2  11-000632	000360   120	(120)
 BLINCR	I*2  10-003142	000242    81	(81)
 BLSSIZ	I*2   7-000576	000024    10	(10)
 BVALUE	I*2  10-001730	000242    81	(81)
 BYTSIZ	I*2   7-000352	000024    10	(10)
 COMGBL	I*2   7-000664	000014     6	(6)
 COMMAS	I*2   7-000304	000004     2	(2)
 CONBAS	I*2   7-000422	000024    10	(10)
 CONINC	I*2   7-000446	000024    10	(10)
FORTRAN IV-PLUS V02-51D		02:56:31    22-AUG-78		PAGE 15  
STPROC.FOR   	/TR:BLOCKS/WR

 CONPRE	I*2  10-000454	000040    16	(16)
 CONTAG	I*2  10-000514	000040    16	(16)
 CONTEX	I*2  10-003646	000306    99	(9,11)
 CPAREN	I*2   7-000726	000004     2	(2)
 CPRCOM	I*2   7-000720	000006     3	(3)
 CVALUE	I*2  10-000560	000242    81	(81)
 DEFEND	I*2   7-000114	000024    10	(10)
 DEFINI	I*2   7-000042	000024    10	(10)
 DOLBIT	I*2   7-000736	000032    13	(13)
 DOLBYT	I*2   7-000770	000034    14	(14)
 DOLDEF	I*2   7-000066	000014     6	(6)
 DOLFLD	I*2   7-001024	000030    12	(12)
 DOLGBL	I*2   7-000026	000014     6	(6)
 DOLVLD	I*2   7-000220	000022     9	(9)
 DOTBLK	I*2   7-000336	000014     6	(6)
 DOTEQS	I*2   7-000102	000012     5	(5)
 DOTMAC	I*2   7-000000	000026    11	(11)
 ENDMAC	I*2   7-000140	000022     9	(9)
 EQULST	I*2   7-000262	000022     9	(9)
 EQUTAB	I*2   7-000402	000014     6	(6)
 EXCLSP	I*2   7-000176	000016     7	(7)
 EXPCLO	I*2   7-001060	000004     2	(2)
 EXPOPN	I*2   7-001054	000004     2	(2)
 FLDNAM	I*2  10-000270	000110    36	(36)
 HYPHEN	I*2   7-000660	000004     2	(2)
 INBUF	I*2  11-000000	000244    82	(82)
 LANHYP	I*2   7-000310	000006     3	(3)
 LITTAB	I*2   7-000472	000022     9	(9)
 MACTAB	I*2   7-000532	000020     8	(8)
 MARBUF	I*2  11-000250	000360   120	(120)
 MRBASE	I*2  10-002700	000242    81	(81)
 MRINCR	I*2  10-003404	000242    81	(81)
 MVALUE	I*2  10-001466	000242    81	(81)
 NEGSGN	I*2   8-000000	000004     2	(2)
 OASIGN	I*2   7-000732	000004     2	(2)
 OFFSET	I*2   7-000552	000024    10	(10)
 ONESHF	I*2   7-000642	000006     3	(3)
 OPAREN	I*2   7-000416	000004     2	(2)
 OSBNAM	I*2  10-001316	000040    16	(16)
 OTGNAM	I*2  10-001356	000040    16	(16)
 OUNTYP	I*2  10-001416	000040    16	(16)
 PCTSEM	I*2   7-000632	000010     4	(4)
 PRENAM	I*2  10-000122	000040    16	(16)
 RANHYP	I*2   7-000324	000006     3	(3)
 RSTLIN	I*2  10-001032	000264    90	(90)
 SEMSPC	I*2   7-000524	000006     3	(3)
 SPCSTG	I*2   7-000376	000004     2	(2)
 SPHYSP	I*2   7-000650	000010     4	(4)
 STRSTG	I*2  10-000222	000040    16	(16)
 SUFDEF	I*2   7-000162	000010     4	(4)
 SUFNAM	I*2  10-000162	000040    16	(16)
 TABEQS	I*2   7-000514	000010     4	(4)
 TABLAN	I*2   7-000316	000006     3	(3)
 TABOPR	I*2   7-000712	000006     3	(3)
 TABPRN	I*2   7-000700	000012     5	(5)
 TABRAN	I*2   7-000254	000006     3	(3)
FORTRAN IV-PLUS V02-51D		02:56:31    22-AUG-78		PAGE 16  
STPROC.FOR   	/TR:BLOCKS/WR

 TABSTG	I*2   7-000214	000004     2	(2)
 TAGNAM	I*2  10-000400	000040    16	(16)
 TMPVAL	I*2  10-002172	000242    81	(81)
 TOKSTG	I*2  10-000000	000120    40	(40)
 UNITYP	I*2   7-000172	000004     2	(2)
 ZEROSG	I*2   7-000622	000004     2	(2)
 ZRLAHY	I*2   7-000242	000012     5	(5)


FUNCTIONS AND SUBROUTINES REFERENCED

 OUTBLK


TOTAL SPACE ALLOCATED = 006710  1764

NO FPP INSTRUCTIONS GENERATED
FORTRAN IV-PLUS V02-51D		02:56:42    22-AUG-78		PAGE 17  
STPROC.FOR   	/TR:BLOCKS/WR

         
0001    	SUBROUTINE PLABEL
         
        C	THIS ROUTINE IS CALLED WHEN A LINE HAS BEEN RECOGNIZED
        C	AS A LABEL DEFINITION. THE IMPLIC ARGUMENT INPTR IS THE OFFSET
        C	TO THE NEXT CHARACTER TO BE READ IN THE INPUT LINE.
         
        C	PLABEL COLLECTS THE NAME OF THE LABEL BEING DEFINED AND
        C	THEN OUTPUTS APPROPRIATE STATEMENTS TO THE BLISS AND MARS
        C	TRANSLATED FILES.
         
0002    	INCLUDE 'SRC$:MDL.CMN/NOLIST'
         
0016    	CALL GETTOK
0017    	IF (TOKTYP .NE. ALPHA) GOTO 100
0018    	CALL MOVSTG (TOKSTG, FLDNAM)
0019    	TAGNAM (3) = 'C'
0020    	INPTR = INPTR - 1
0021    	CALL MDOUTL (INPTR)
0022    	CALL BDOUTL (INPTR)
0023    	RETURN
         
        C	ERROR REPORTING
         
0024    100	TYPE 1000
0025    1000	FORMAT (' INVALID LABEL DEFINITION')
0026    	END
FORTRAN IV-PLUS V02-51D		02:56:42    22-AUG-78		PAGE 18  
STPROC.FOR   	/TR:BLOCKS/WR

PROGRAM SECTIONS

NUMBER	 NAME	    SIZE		ATTRIBUTES

  1	$CODE1	000136    47		RW,I,CON,LCL
  3	$IDATA	000050    20		RW,D,CON,LCL
  6	LOG	000036    15		RW,D,OVR,GBL
  7	STGS	001064   282		RW,D,OVR,GBL
  8	MORSTG	000004     2		RW,D,OVR,GBL
  9	CHECKS	000002     1		RW,D,OVR,GBL
 10	PARSE	004160  1080		RW,D,OVR,GBL
 11	FILES	001214   326		RW,D,OVR,GBL
 12	SPCHR	000006     3		RW,D,OVR,GBL
 13	LUNS	000014     6		RW,D,OVR,GBL


ENTRY POINTS

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 PLABEL	      1-000000


VARIABLES

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 BLANK	I*2  12-000000	 BLBITS	I*2  10-001022	 BLFOFS	I*2  10-001462	 BLI	I*2  13-000002	 BLIPTR	I*2  11-001212
 BLKOUT	L*2   6-000022	 BOFSET	I*2  10-000452	 CBASE	I*2  10-000554	 CINCR	I*2  10-000556	 CONEXP	L*2   6-000026
 DEBUG	I*2   9-000000	 ENDEXP	L*2   6-000024	 ENDFIL	L*2   6-000000	 EOLCH	I*2  12-000004	 ERR	I*2  13-000010
 ERROR	L*2   6-000002	 ERROUT	L*2   6-000016	 FLDLAS	L*2   6-000020	 FOFSET	I*2  10-000442	 FSIGN	I*2  10-000266
 FSIZ	I*2  10-000264	 INP	I*2  13-000000	 INPLIN	I*2  11-000246	 INPTR	I*2  11-000244	 LASLIN	I*2  10-002434
 LFDSIZ	I*2  10-001026	 LINTYP	I*2  10-000446	 LPTR	I*2  10-001030	 LSBSIZ	I*2  10-001024	 MAR	I*2  13-000004
 MARPTR	I*2  11-000630	 MNGCNT	I*2  10-004156	 NEGCNT	I*2  10-004154	 OBBITS	I*2  10-001464	 OFSIZ	I*2  10-001456
 OUNSIZ	I*2  10-001460	 POSOFF	L*2   6-000030	 SMASK	L*2   6-000014	 SOFSET	I*2  10-000440	 STGEQL	L*2   6-000004
 STROK	L*2   6-000006	 TAB	I*2  12-000002	 TMP	I*2  13-000006	 TMPIN	L*2   6-000034	 TMPOUT	L*2   6-000032
 TOKTYP	I*2  10-000120	 TTY	I*2  13-000012	 UNDOK	L*2   6-000010	 UNISIZ	I*2  10-000262	 VMASK	L*2   6-000012
 VOFSET	I*2  10-000444	 VSIZ	I*2  10-000450


ARRAYS

 NAME   TYPE  ADDRESS	    SIZE 	DIMENSIONS

 AMASK	I*2   7-000332	000004     2	(2)
 ASIGN	I*2   7-000626	000004     2	(2)
 BLBASE	I*2  10-002436	000242    81	(81)
 BLIBUF	I*2  11-000632	000360   120	(120)
 BLINCR	I*2  10-003142	000242    81	(81)
 BLSSIZ	I*2   7-000576	000024    10	(10)
 BVALUE	I*2  10-001730	000242    81	(81)
 BYTSIZ	I*2   7-000352	000024    10	(10)
 COMGBL	I*2   7-000664	000014     6	(6)
 COMMAS	I*2   7-000304	000004     2	(2)
 CONBAS	I*2   7-000422	000024    10	(10)
 CONINC	I*2   7-000446	000024    10	(10)
FORTRAN IV-PLUS V02-51D		02:56:42    22-AUG-78		PAGE 19  
STPROC.FOR   	/TR:BLOCKS/WR

 CONPRE	I*2  10-000454	000040    16	(16)
 CONTAG	I*2  10-000514	000040    16	(16)
 CONTEX	I*2  10-003646	000306    99	(9,11)
 CPAREN	I*2   7-000726	000004     2	(2)
 CPRCOM	I*2   7-000720	000006     3	(3)
 CVALUE	I*2  10-000560	000242    81	(81)
 DEFEND	I*2   7-000114	000024    10	(10)
 DEFINI	I*2   7-000042	000024    10	(10)
 DOLBIT	I*2   7-000736	000032    13	(13)
 DOLBYT	I*2   7-000770	000034    14	(14)
 DOLDEF	I*2   7-000066	000014     6	(6)
 DOLFLD	I*2   7-001024	000030    12	(12)
 DOLGBL	I*2   7-000026	000014     6	(6)
 DOLVLD	I*2   7-000220	000022     9	(9)
 DOTBLK	I*2   7-000336	000014     6	(6)
 DOTEQS	I*2   7-000102	000012     5	(5)
 DOTMAC	I*2   7-000000	000026    11	(11)
 ENDMAC	I*2   7-000140	000022     9	(9)
 EQULST	I*2   7-000262	000022     9	(9)
 EQUTAB	I*2   7-000402	000014     6	(6)
 EXCLSP	I*2   7-000176	000016     7	(7)
 EXPCLO	I*2   7-001060	000004     2	(2)
 EXPOPN	I*2   7-001054	000004     2	(2)
 FLDNAM	I*2  10-000270	000110    36	(36)
 HYPHEN	I*2   7-000660	000004     2	(2)
 INBUF	I*2  11-000000	000244    82	(82)
 LANHYP	I*2   7-000310	000006     3	(3)
 LITTAB	I*2   7-000472	000022     9	(9)
 MACTAB	I*2   7-000532	000020     8	(8)
 MARBUF	I*2  11-000250	000360   120	(120)
 MRBASE	I*2  10-002700	000242    81	(81)
 MRINCR	I*2  10-003404	000242    81	(81)
 MVALUE	I*2  10-001466	000242    81	(81)
 NEGSGN	I*2   8-000000	000004     2	(2)
 OASIGN	I*2   7-000732	000004     2	(2)
 OFFSET	I*2   7-000552	000024    10	(10)
 ONESHF	I*2   7-000642	000006     3	(3)
 OPAREN	I*2   7-000416	000004     2	(2)
 OSBNAM	I*2  10-001316	000040    16	(16)
 OTGNAM	I*2  10-001356	000040    16	(16)
 OUNTYP	I*2  10-001416	000040    16	(16)
 PCTSEM	I*2   7-000632	000010     4	(4)
 PRENAM	I*2  10-000122	000040    16	(16)
 RANHYP	I*2   7-000324	000006     3	(3)
 RSTLIN	I*2  10-001032	000264    90	(90)
 SEMSPC	I*2   7-000524	000006     3	(3)
 SPCSTG	I*2   7-000376	000004     2	(2)
 SPHYSP	I*2   7-000650	000010     4	(4)
 STRSTG	I*2  10-000222	000040    16	(16)
 SUFDEF	I*2   7-000162	000010     4	(4)
 SUFNAM	I*2  10-000162	000040    16	(16)
 TABEQS	I*2   7-000514	000010     4	(4)
 TABLAN	I*2   7-000316	000006     3	(3)
 TABOPR	I*2   7-000712	000006     3	(3)
 TABPRN	I*2   7-000700	000012     5	(5)
 TABRAN	I*2   7-000254	000006     3	(3)
FORTRAN IV-PLUS V02-51D		02:56:42    22-AUG-78		PAGE 20  
STPROC.FOR   	/TR:BLOCKS/WR

 TABSTG	I*2   7-000214	000004     2	(2)
 TAGNAM	I*2  10-000400	000040    16	(16)
 TMPVAL	I*2  10-002172	000242    81	(81)
 TOKSTG	I*2  10-000000	000120    40	(40)
 UNITYP	I*2   7-000172	000004     2	(2)
 ZEROSG	I*2   7-000622	000004     2	(2)
 ZRLAHY	I*2   7-000242	000012     5	(5)


LABELS

 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	

 100	 1-000106	 1000'	 3-000000


FUNCTIONS AND SUBROUTINES REFERENCED

 BDOUTL	 GETTOK	 MDOUTL	 MOVSTG


TOTAL SPACE ALLOCATED = 006754  1782

NO FPP INSTRUCTIONS GENERATED
FORTRAN IV-PLUS V02-51D		02:56:56    22-AUG-78		PAGE 21  
STPROC.FOR   	/TR:BLOCKS/WR

         
FORTRAN IV-PLUS V02-51D		02:56:56    22-AUG-78		PAGE 22  
STPROC.FOR   	/TR:BLOCKS/WR

         
0001    	SUBROUTINE GETUND
         
        C	ANALYZES AN ALPHA STRING THAT CLAIMS TO BE A UNIT
        C	DESCRIPTOR. IF IT IS VALID, STORES THE LETTER
        C	IN UNITYP AND THE APPROPRIATE SIZE VALUE IN UNISIZ.
        C	ALSO COMPOSES A TAG NAME STRING FROM A DOLLAR SIGN FOLLOWED
        C	BY THE UNIT DESCRIPTOR LETTER, FOLLOWED BY AN UNDERSCORE.
         
        C	THE IMPLICIT ARGUMENT IS THE COUNTED STRING, TOKSTG, THAT IS
        C	THE UNIT DESCRIPTOR LETTER. A LOGICAL VARIABLE IS
        C	SET TO TRUE OR FALSE ACCORDING TO THE VALIDITY OF THE
        C	ARGUMENT.
         
0002    	INCLUDE 'SRC$:MDL.CMN/NOLIST'
         
        C	IF (DEBUG) TYPE 500
0016    500	FORMAT (' IN UNIT DESCRIPTOR ANALYZER')
0017    	IF (TOKSTG (1) .NE. 1) GOTO 100
0018    	IF ((TOKSTG (2) .NE. 'B') .AND.
        	1	(TOKSTG (2) .NE. 'W') .AND.
        	2	(TOKSTG (2) .NE. 'L') .AND.
        	3	(TOKSTG (2) .NE. 'A') .AND.
        	4	(TOKSTG (2) .NE. 'Q') .AND.
        	5	(TOKSTG (2) .NE. 'T')) GOTO 100
0019    	UNITYP (2) = TOKSTG (2)
0020    	TAGNAM (3) = TOKSTG (2)
0021    	IF ((TOKSTG (2) .EQ. 'B') .OR.
        	1	(TOKSTG (2) .EQ. 'T')) GOTO 10
0022    	IF (TOKSTG (2) .EQ. 'W') GOTO 15
0023    	IF ((TOKSTG (2) .EQ. 'L')  .OR.
        	1	(TOKSTG (2) .EQ. 'A')) GOTO 20
0024    	UNISIZ = 8
0025    	BLBITS = 64
0026    	GOTO 30
         
0027    10	UNISIZ = 1
0028    	IF (TOKSTG (2) .EQ. 'T') UNITYP (2) = 'B'
0029    	BLBITS = 8
0030    	GOTO 30
         
0031    15	UNISIZ = 2
0032    	BLBITS = 16
0033    	GOTO 30
         
0034    20	UNISIZ = 4
0035    	IF (TOKSTG (2) .EQ. 'A') UNITYP (2) = 'L'
0036    	BLBITS = 32
         
        C	NOW SET THE TRUTH FLAG TO SHOW THAT THE UNIT DESCRIPTOR
        C	WAS A VALID ONE.
         
0037    30	UNDOK = .TRUE.
0038    	RETURN
         
0039    100	UNDOK = .FALSE.
FORTRAN IV-PLUS V02-51D		02:56:56    22-AUG-78		PAGE 23  
STPROC.FOR   	/TR:BLOCKS/WR

0040    	END
FORTRAN IV-PLUS V02-51D		02:56:56    22-AUG-78		PAGE 24  
STPROC.FOR   	/TR:BLOCKS/WR

PROGRAM SECTIONS

NUMBER	 NAME	    SIZE		ATTRIBUTES

  1	$CODE1	000376   127		RW,I,CON,LCL
  6	LOG	000036    15		RW,D,OVR,GBL
  7	STGS	001064   282		RW,D,OVR,GBL
  8	MORSTG	000004     2		RW,D,OVR,GBL
  9	CHECKS	000002     1		RW,D,OVR,GBL
 10	PARSE	004160  1080		RW,D,OVR,GBL
 11	FILES	001214   326		RW,D,OVR,GBL
 12	SPCHR	000006     3		RW,D,OVR,GBL
 13	LUNS	000014     6		RW,D,OVR,GBL


ENTRY POINTS

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 GETUND	      1-000000


VARIABLES

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 BLANK	I*2  12-000000	 BLBITS	I*2  10-001022	 BLFOFS	I*2  10-001462	 BLI	I*2  13-000002	 BLIPTR	I*2  11-001212
 BLKOUT	L*2   6-000022	 BOFSET	I*2  10-000452	 CBASE	I*2  10-000554	 CINCR	I*2  10-000556	 CONEXP	L*2   6-000026
 DEBUG	I*2   9-000000	 ENDEXP	L*2   6-000024	 ENDFIL	L*2   6-000000	 EOLCH	I*2  12-000004	 ERR	I*2  13-000010
 ERROR	L*2   6-000002	 ERROUT	L*2   6-000016	 FLDLAS	L*2   6-000020	 FOFSET	I*2  10-000442	 FSIGN	I*2  10-000266
 FSIZ	I*2  10-000264	 INP	I*2  13-000000	 INPLIN	I*2  11-000246	 INPTR	I*2  11-000244	 LASLIN	I*2  10-002434
 LFDSIZ	I*2  10-001026	 LINTYP	I*2  10-000446	 LPTR	I*2  10-001030	 LSBSIZ	I*2  10-001024	 MAR	I*2  13-000004
 MARPTR	I*2  11-000630	 MNGCNT	I*2  10-004156	 NEGCNT	I*2  10-004154	 OBBITS	I*2  10-001464	 OFSIZ	I*2  10-001456
 OUNSIZ	I*2  10-001460	 POSOFF	L*2   6-000030	 SMASK	L*2   6-000014	 SOFSET	I*2  10-000440	 STGEQL	L*2   6-000004
 STROK	L*2   6-000006	 TAB	I*2  12-000002	 TMP	I*2  13-000006	 TMPIN	L*2   6-000034	 TMPOUT	L*2   6-000032
 TOKTYP	I*2  10-000120	 TTY	I*2  13-000012	 UNDOK	L*2   6-000010	 UNISIZ	I*2  10-000262	 VMASK	L*2   6-000012
 VOFSET	I*2  10-000444	 VSIZ	I*2  10-000450


ARRAYS

 NAME   TYPE  ADDRESS	    SIZE 	DIMENSIONS

 AMASK	I*2   7-000332	000004     2	(2)
 ASIGN	I*2   7-000626	000004     2	(2)
 BLBASE	I*2  10-002436	000242    81	(81)
 BLIBUF	I*2  11-000632	000360   120	(120)
 BLINCR	I*2  10-003142	000242    81	(81)
 BLSSIZ	I*2   7-000576	000024    10	(10)
 BVALUE	I*2  10-001730	000242    81	(81)
 BYTSIZ	I*2   7-000352	000024    10	(10)
 COMGBL	I*2   7-000664	000014     6	(6)
 COMMAS	I*2   7-000304	000004     2	(2)
 CONBAS	I*2   7-000422	000024    10	(10)
 CONINC	I*2   7-000446	000024    10	(10)
 CONPRE	I*2  10-000454	000040    16	(16)
FORTRAN IV-PLUS V02-51D		02:56:56    22-AUG-78		PAGE 25  
STPROC.FOR   	/TR:BLOCKS/WR

 CONTAG	I*2  10-000514	000040    16	(16)
 CONTEX	I*2  10-003646	000306    99	(9,11)
 CPAREN	I*2   7-000726	000004     2	(2)
 CPRCOM	I*2   7-000720	000006     3	(3)
 CVALUE	I*2  10-000560	000242    81	(81)
 DEFEND	I*2   7-000114	000024    10	(10)
 DEFINI	I*2   7-000042	000024    10	(10)
 DOLBIT	I*2   7-000736	000032    13	(13)
 DOLBYT	I*2   7-000770	000034    14	(14)
 DOLDEF	I*2   7-000066	000014     6	(6)
 DOLFLD	I*2   7-001024	000030    12	(12)
 DOLGBL	I*2   7-000026	000014     6	(6)
 DOLVLD	I*2   7-000220	000022     9	(9)
 DOTBLK	I*2   7-000336	000014     6	(6)
 DOTEQS	I*2   7-000102	000012     5	(5)
 DOTMAC	I*2   7-000000	000026    11	(11)
 ENDMAC	I*2   7-000140	000022     9	(9)
 EQULST	I*2   7-000262	000022     9	(9)
 EQUTAB	I*2   7-000402	000014     6	(6)
 EXCLSP	I*2   7-000176	000016     7	(7)
 EXPCLO	I*2   7-001060	000004     2	(2)
 EXPOPN	I*2   7-001054	000004     2	(2)
 FLDNAM	I*2  10-000270	000110    36	(36)
 HYPHEN	I*2   7-000660	000004     2	(2)
 INBUF	I*2  11-000000	000244    82	(82)
 LANHYP	I*2   7-000310	000006     3	(3)
 LITTAB	I*2   7-000472	000022     9	(9)
 MACTAB	I*2   7-000532	000020     8	(8)
 MARBUF	I*2  11-000250	000360   120	(120)
 MRBASE	I*2  10-002700	000242    81	(81)
 MRINCR	I*2  10-003404	000242    81	(81)
 MVALUE	I*2  10-001466	000242    81	(81)
 NEGSGN	I*2   8-000000	000004     2	(2)
 OASIGN	I*2   7-000732	000004     2	(2)
 OFFSET	I*2   7-000552	000024    10	(10)
 ONESHF	I*2   7-000642	000006     3	(3)
 OPAREN	I*2   7-000416	000004     2	(2)
 OSBNAM	I*2  10-001316	000040    16	(16)
 OTGNAM	I*2  10-001356	000040    16	(16)
 OUNTYP	I*2  10-001416	000040    16	(16)
 PCTSEM	I*2   7-000632	000010     4	(4)
 PRENAM	I*2  10-000122	000040    16	(16)
 RANHYP	I*2   7-000324	000006     3	(3)
 RSTLIN	I*2  10-001032	000264    90	(90)
 SEMSPC	I*2   7-000524	000006     3	(3)
 SPCSTG	I*2   7-000376	000004     2	(2)
 SPHYSP	I*2   7-000650	000010     4	(4)
 STRSTG	I*2  10-000222	000040    16	(16)
 SUFDEF	I*2   7-000162	000010     4	(4)
 SUFNAM	I*2  10-000162	000040    16	(16)
 TABEQS	I*2   7-000514	000010     4	(4)
 TABLAN	I*2   7-000316	000006     3	(3)
 TABOPR	I*2   7-000712	000006     3	(3)
 TABPRN	I*2   7-000700	000012     5	(5)
 TABRAN	I*2   7-000254	000006     3	(3)
 TABSTG	I*2   7-000214	000004     2	(2)
FORTRAN IV-PLUS V02-51D		02:56:56    22-AUG-78		PAGE 26  
STPROC.FOR   	/TR:BLOCKS/WR

 TAGNAM	I*2  10-000400	000040    16	(16)
 TMPVAL	I*2  10-002172	000242    81	(81)
 TOKSTG	I*2  10-000000	000120    40	(40)
 UNITYP	I*2   7-000172	000004     2	(2)
 ZEROSG	I*2   7-000622	000004     2	(2)
 ZRLAHY	I*2   7-000242	000012     5	(5)


LABELS

 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	

 10	 1-000220	 15	 1-000262	 20	 1-000306	 30	 1-000346	 100	 1-000362
 500'	    **   


TOTAL SPACE ALLOCATED = 007144  1842

NO FPP INSTRUCTIONS GENERATED
FORTRAN IV-PLUS V02-51D		02:57:11    22-AUG-78		PAGE 27  
STPROC.FOR   	/TR:BLOCKS/WR

         
        C	REVISION HISTORY:
        C		23-03-77	CP	IF SAVING INPUT IN TMP FILE, SAVE
        C					EACH LINE OF A BITFIELD DECLARATION,
        C					AND RETURN AFTER THE CLOSING RIGHT
        C					ANGLE BRACKET.
        C
        C		22-04-77	TC	CALL BDOUTL AT START AND
        C					END TO OUTPUT COMMENTS INTO
        C					THE BLISS FILE.
         
0001    	SUBROUTINE PVIELD
         
        C	THIS ROUTINE IS CALLED WHEN ALINE HAS BEEN RECOGNIZED
        C	AS A BITFIELD DEFINITION. THE IMPLICIT ARGUMENT
        C	INPTR IS THE OFFSET TO THE NEXT CHARACTER IN THE INPUT LINE.
         
        C	PVIELD COLLECTS THE MASK FLAG FOR THE SET OF BITFIELDS TO
        C	BE DEFINED. THEN IT COLLECTS A BITFIELD DEFINITION AT A TIME.
        C	EACH BITFIELD DEFINITION CAN HAVE A NAME, SIZE, SIGN, AND
        C	INDIVIDUAL MASK. EACH BITFIELD IS PROCESSED AND OUTPUT.
         
        C	WHEN A SINGLE LEADING RIGHT ANGLE BRACKET IS RECOGNIZED,
        C	PROCESSING OF THE VIELD IS COMPLETE.
         
0002    	INCLUDE 'SRC$:MDL.CMN/NOLIST'
         
        C	INITIALIZE MASK AND SIGN ARGUMENTS
         
0016    	VMASK = .FALSE.
0017    	AMASK (1) = 0
0018    	ASIGN (1) = 1
         
0019    	CALL GETTOK
0020    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
0021    500	FORMAT (' ',90A1)
0022    	IF (TOKTYP .NE. LANGLE) GOTO 100
0023    	IF (TMPOUT) GOTO 50
0024    	CALL GETTOK
0025    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
0026    	IF (TOKTYP .NE. ALPHA) GOTO 10
0027    	IF (TOKSTG (1) .NE. 1) GOTO 110
0028    	IF (TOKSTG (2) .NE. 'M') GOTO 110
0029    	VMASK = .TRUE.
0030    	AMASK (1) = 1
0031    	INPTR = INPTR - 1
0032    	GOTO 12
         
        C	THE POINTER INTO THE INPUT LINE IS TOO FAR ALONG, BACK IT
        C	UP ONE POSITION.
         
0033    10	INPTR = LASTNB (INPTR - 2)
         
        C	NOW OUTPUT THE LINE THAT INITIATES A BITFIELD DEFINITION LIST.
         
0034    12	VOFSET = 0
FORTRAN IV-PLUS V02-51D		02:57:11    22-AUG-78		PAGE 28  
STPROC.FOR   	/TR:BLOCKS/WR

0035    	TAGNAM (3) = 'V'
0036    	CALL MDOUTL (INPTR)
0037    	CALL BDOUTL (INPTR)
         
        C	INITIALIZE VARIABLES, AND INPUT A LINE.
         
0038    15	VSIZ = 0
0039    	FSIGN = 0
0040    	SMASK = .FALSE.
0041    	IF (.NOT. VMASK) AMASK (1) = 0
0042    	ASIGN (2) = '0'
0043    	DO 20 I = 1, 15
0044    	FLDNAM (I) = 0
0045    20	CONTINUE
         
0046    21	CALL GETLIN
0047    	IF (.NOT. ENDFIL) GOTO 22
0048    	RETURN
         
        C	CHECK THE FIRST TOKEN. IF IT IS A RIGHT ANGLE,
        C	THIS IS THE LAST STATEMENT IN THE BITFIELD DEFINITIONS.
         
0049    22	CALL GETTOK
0050    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
0051    	IF (DEBUG) TYPE 510, TOKTYP
0052    510	FORMAT (' TOKTYP IS ',I3)
0053    	IF (TOKTYP .EQ. RANGLE) GOTO 90
0054    	IF (TMPOUT) GOTO 50
0055    	LINTYP = BITFNM
         
        C	SEE IF THIS HAS A BITFIELD NAME OR IS END OF LINE
         
0056    	IF (TOKTYP .EQ. ALPHA) GOTO 24
0057    	IF ((TOKTYP .NE. SEMI) .AND.
        	1	(TOKTYP .NE. EOL)) GOTO 25
         
        C	THIS LINE IS BLANK OR ONLY COMMENTS
         
0058    	CALL OUTBCL
0059    	GOTO 21
         
        C	THIS IS A BITFIELD NAME DEFINITION
         
0060    24	CALL MOVSTG (TOKSTG, FLDNAM)
0061    	CALL GETTOK
0062    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
         
        C	NOW LOOK FOR THE SIZE FIELD.
         
0063    25	IF (DEBUG) TYPE 510, TOKTYP
0064    	IF (TOKTYP .NE. COMMA) GOTO 40
0065    	CALL GETTOK
0066    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
0067    	IF (TOKTYP .NE. NUMBER) GOTO 30
0068    	VSIZ = INTVAL (TOKSTG)
0069    	IF (VSIZ .EQ. - 1) GOTO 120
FORTRAN IV-PLUS V02-51D		02:57:11    22-AUG-78		PAGE 29  
STPROC.FOR   	/TR:BLOCKS/WR

0070    	CALL GETTOK
0071    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
         
        C	NOW CHECK FOR A SIGN FIELD.
         
0072    30	IF (DEBUG) TYPE 510, TOKTYP
0073    	IF (TOKTYP .NE. COMMA) GOTO 40
0074    	CALL GETTOK
0075    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
0076    	IF (TOKTYP .NE. ALPHA) GOTO 35
0077    	IF (TOKSTG (1) .NE. 1) GOTO 130
0078    	IF (TOKSTG (2) .NE. 'S') GOTO 130
0079    	FSIGN = 1
0080    	ASIGN (2) = '1'
0081    	CALL GETTOK
0082    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
         
        C	FINALLY, LOOK FOR A MASK ARGUMENT.
         
0083    35	IF (DEBUG) TYPE 510, TOKTYP
0084    	IF (TOKTYP .NE. COMMA) GOTO 40
0085    	CALL GETTOK
0086    	IF (DEBUG) TYPE 500, (TOKSTG (I), I = 2, TOKSTG (1) + 1)
0087    	IF (TOKTYP .NE. ALPHA) GOTO 40
0088    	IF (TOKSTG (1) .NE. 1) GOTO 110
0089    	IF (TOKSTG (2) .NE. 'M') GOTO 110
0090    	SMASK = .TRUE.
0091    	AMASK (1) = 1
0092    	INPTR = INPTR - 1
0093    	GOTO 45
         
        C	THE OFFSET INTO THE INPUT LINE IS ONE CHARACTER OFF
        C	BECAUSE SOME TRAILING OPTIONAL ARGUMENTS WERE OMITTED. BACK UP
        C	THE OFFSET COUNT BY ONE.
         
0094    40	INPTR = LASTNB (INPTR - 2)
         
        C	ARGUMENTS ARE ALL COLLECTED. OUTPUT THE LINE.
         
0095    45	CALL MDOUTL (INPTR)
0096    	CALL BDOUTL (INPTR)
0097    	IF (VSIZ .EQ. 0) VOFSET = VOFSET + 1
0098    	IF (VSIZ .GT. 0) VOFSET = VOFSET + VSIZ
0099    	GOTO 15
         
        C	IF OUTPUTTING TO TMP FILE, JUST DO IT, THEN GO FOR NEXT LINE.
         
0100    50	CALL OUT2LN
0101    	GOTO 21
         
        C	OUTPUT THE FINAL CLOSING OF THE BITFIELD DEFINITIONS.
         
0102    90	IF (TMPOUT) GOTO 95
0103    	LINTYP = VIELDE
0104    	CALL MDOUTL (INPTR)
0105    	CALL BDOUTL (INPTR)
FORTRAN IV-PLUS V02-51D		02:57:11    22-AUG-78		PAGE 30  
STPROC.FOR   	/TR:BLOCKS/WR

0106    	RETURN
         
        C	OUTPUT THE FINAL CLOSING LINE TO TMP FILE AND RETURN.
         
0107    95	CALL OUT2LN
0108    	RETURN
         
        C	ERROR REPORTING
         
0109    100	TYPE 1000
0110    1000	FORMAT (' INVALID BITFIELD DEFINITION')
0111    	RETURN
         
0112    110	TYPE 1100
0113    1100	FORMAT (' INVALID MASK SPECIFICATION')
0114    	RETURN
         
0115    120	TYPE 1200
0116    1200	FORMAT (' INVALID SIZE ARGUMENT IN BITFIELD DEFINITION')
0117    	RETURN
         
0118    130	TYPE 1300
0119    1300	FORMAT (' INVALID SIGN ARGUMENT IN BITFIELD DEFINITION')
0120    	END
FORTRAN IV-PLUS V02-51D		02:57:11    22-AUG-78		PAGE 31  
STPROC.FOR   	/TR:BLOCKS/WR

PROGRAM SECTIONS

NUMBER	 NAME	    SIZE		ATTRIBUTES

  1	$CODE1	003044   786		RW,I,CON,LCL
  3	$IDATA	000310   100		RW,D,CON,LCL
  4	$VARS	000002     1		RW,D,CON,LCL
  5	$TEMPS	000002     1		RW,D,CON,LCL
  6	LOG	000036    15		RW,D,OVR,GBL
  7	STGS	001064   282		RW,D,OVR,GBL
  8	MORSTG	000004     2		RW,D,OVR,GBL
  9	CHECKS	000002     1		RW,D,OVR,GBL
 10	PARSE	004160  1080		RW,D,OVR,GBL
 11	FILES	001214   326		RW,D,OVR,GBL
 12	SPCHR	000006     3		RW,D,OVR,GBL
 13	LUNS	000014     6		RW,D,OVR,GBL


ENTRY POINTS

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 PVIELD	      1-000000


VARIABLES

 NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS    NAME   TYPE  ADDRESS   

 BLANK	I*2  12-000000	 BLBITS	I*2  10-001022	 BLFOFS	I*2  10-001462	 BLI	I*2  13-000002	 BLIPTR	I*2  11-001212
 BLKOUT	L*2   6-000022	 BOFSET	I*2  10-000452	 CBASE	I*2  10-000554	 CINCR	I*2  10-000556	 CONEXP	L*2   6-000026
 DEBUG	I*2   9-000000	 ENDEXP	L*2   6-000024	 ENDFIL	L*2   6-000000	 EOLCH	I*2  12-000004	 ERR	I*2  13-000010
 ERROR	L*2   6-000002	 ERROUT	L*2   6-000016	 FLDLAS	L*2   6-000020	 FOFSET	I*2  10-000442	 FSIGN	I*2  10-000266
 FSIZ	I*2  10-000264	 I	I*2   4-000000	 INP	I*2  13-000000	 INPLIN	I*2  11-000246	 INPTR	I*2  11-000244
 LASLIN	I*2  10-002434	 LFDSIZ	I*2  10-001026	 LINTYP	I*2  10-000446	 LPTR	I*2  10-001030	 LSBSIZ	I*2  10-001024
 MAR	I*2  13-000004	 MARPTR	I*2  11-000630	 MNGCNT	I*2  10-004156	 NEGCNT	I*2  10-004154	 OBBITS	I*2  10-001464
 OFSIZ	I*2  10-001456	 OUNSIZ	I*2  10-001460	 POSOFF	L*2   6-000030	 SMASK	L*2   6-000014	 SOFSET	I*2  10-000440
 STGEQL	L*2   6-000004	 STROK	L*2   6-000006	 TAB	I*2  12-000002	 TMP	I*2  13-000006	 TMPIN	L*2   6-000034
 TMPOUT	L*2   6-000032	 TOKTYP	I*2  10-000120	 TTY	I*2  13-000012	 UNDOK	L*2   6-000010	 UNISIZ	I*2  10-000262
 VMASK	L*2   6-000012	 VOFSET	I*2  10-000444	 VSIZ	I*2  10-000450


ARRAYS

 NAME   TYPE  ADDRESS	    SIZE 	DIMENSIONS

 AMASK	I*2   7-000332	000004     2	(2)
 ASIGN	I*2   7-000626	000004     2	(2)
 BLBASE	I*2  10-002436	000242    81	(81)
 BLIBUF	I*2  11-000632	000360   120	(120)
 BLINCR	I*2  10-003142	000242    81	(81)
 BLSSIZ	I*2   7-000576	000024    10	(10)
 BVALUE	I*2  10-001730	000242    81	(81)
 BYTSIZ	I*2   7-000352	000024    10	(10)
 COMGBL	I*2   7-000664	000014     6	(6)
 COMMAS	I*2   7-000304	000004     2	(2)
FORTRAN IV-PLUS V02-51D		02:57:11    22-AUG-78		PAGE 32  
STPROC.FOR   	/TR:BLOCKS/WR

 CONBAS	I*2   7-000422	000024    10	(10)
 CONINC	I*2   7-000446	000024    10	(10)
 CONPRE	I*2  10-000454	000040    16	(16)
 CONTAG	I*2  10-000514	000040    16	(16)
 CONTEX	I*2  10-003646	000306    99	(9,11)
 CPAREN	I*2   7-000726	000004     2	(2)
 CPRCOM	I*2   7-000720	000006     3	(3)
 CVALUE	I*2  10-000560	000242    81	(81)
 DEFEND	I*2   7-000114	000024    10	(10)
 DEFINI	I*2   7-000042	000024    10	(10)
 DOLBIT	I*2   7-000736	000032    13	(13)
 DOLBYT	I*2   7-000770	000034    14	(14)
 DOLDEF	I*2   7-000066	000014     6	(6)
 DOLFLD	I*2   7-001024	000030    12	(12)
 DOLGBL	I*2   7-000026	000014     6	(6)
 DOLVLD	I*2   7-000220	000022     9	(9)
 DOTBLK	I*2   7-000336	000014     6	(6)
 DOTEQS	I*2   7-000102	000012     5	(5)
 DOTMAC	I*2   7-000000	000026    11	(11)
 ENDMAC	I*2   7-000140	000022     9	(9)
 EQULST	I*2   7-000262	000022     9	(9)
 EQUTAB	I*2   7-000402	000014     6	(6)
 EXCLSP	I*2   7-000176	000016     7	(7)
 EXPCLO	I*2   7-001060	000004     2	(2)
 EXPOPN	I*2   7-001054	000004     2	(2)
 FLDNAM	I*2  10-000270	000110    36	(36)
 HYPHEN	I*2   7-000660	000004     2	(2)
 INBUF	I*2  11-000000	000244    82	(82)
 LANHYP	I*2   7-000310	000006     3	(3)
 LITTAB	I*2   7-000472	000022     9	(9)
 MACTAB	I*2   7-000532	000020     8	(8)
 MARBUF	I*2  11-000250	000360   120	(120)
 MRBASE	I*2  10-002700	000242    81	(81)
 MRINCR	I*2  10-003404	000242    81	(81)
 MVALUE	I*2  10-001466	000242    81	(81)
 NEGSGN	I*2   8-000000	000004     2	(2)
 OASIGN	I*2   7-000732	000004     2	(2)
 OFFSET	I*2   7-000552	000024    10	(10)
 ONESHF	I*2   7-000642	000006     3	(3)
 OPAREN	I*2   7-000416	000004     2	(2)
 OSBNAM	I*2  10-001316	000040    16	(16)
 OTGNAM	I*2  10-001356	000040    16	(16)
 OUNTYP	I*2  10-001416	000040    16	(16)
 PCTSEM	I*2   7-000632	000010     4	(4)
 PRENAM	I*2  10-000122	000040    16	(16)
 RANHYP	I*2   7-000324	000006     3	(3)
 RSTLIN	I*2  10-001032	000264    90	(90)
 SEMSPC	I*2   7-000524	000006     3	(3)
 SPCSTG	I*2   7-000376	000004     2	(2)
 SPHYSP	I*2   7-000650	000010     4	(4)
 STRSTG	I*2  10-000222	000040    16	(16)
 SUFDEF	I*2   7-000162	000010     4	(4)
 SUFNAM	I*2  10-000162	000040    16	(16)
 TABEQS	I*2   7-000514	000010     4	(4)
 TABLAN	I*2   7-000316	000006     3	(3)
 TABOPR	I*2   7-000712	000006     3	(3)
FORTRAN IV-PLUS V02-51D		02:57:11    22-AUG-78		PAGE 33  
STPROC.FOR   	/TR:BLOCKS/WR

 TABPRN	I*2   7-000700	000012     5	(5)
 TABRAN	I*2   7-000254	000006     3	(3)
 TABSTG	I*2   7-000214	000004     2	(2)
 TAGNAM	I*2  10-000400	000040    16	(16)
 TMPVAL	I*2  10-002172	000242    81	(81)
 TOKSTG	I*2  10-000000	000120    40	(40)
 UNITYP	I*2   7-000172	000004     2	(2)
 ZEROSG	I*2   7-000622	000004     2	(2)
 ZRLAHY	I*2   7-000242	000012     5	(5)


LABELS

 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	 LABEL   ADDRESS 	

 10	 1-000410	 12	 1-000452	 15	 1-000512	 20	    **   	 21	 1-000612
 22	 1-000640	 24	 1-001122	 25	 1-001252	 30	 1-001620	 35	 1-002206
 40	 1-002454	 45	 1-002516	 50	 1-002576	 90	 1-002620	 95	 1-002664
 100	 1-002704	 110	 1-002734	 120	 1-002764	 130	 1-003014	 500'	 3-000000
 510'	 3-000006	 1000'	 3-000026	 1100'	 3-000066	 1200'	 3-000124	 1300'	 3-000204


FUNCTIONS AND SUBROUTINES REFERENCED

 BDOUTL	 GETLIN	 GETTOK	 INTVAL	 LASTNB	 MDOUTL	 MOVSTG	 OUTBCL	 OUT2LN


TOTAL SPACE ALLOCATED = 012126  2603

NO FPP INSTRUCTIONS GENERATED

OBJ$:STPROC,LIS$:STPROC/-SP=SRC$:STPROC.FOR
