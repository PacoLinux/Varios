SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      48  DECLARATIONS
   (1)      89  CONDITION TABLES
   (1)     117  TM_SETUP, TM_CLEANUP
   (1)     183  CONDITION SUBROUTINES - SETUP AND CLEANUP 
   (1)     253  FORM_CONDS
   (1)     346  VERIFY
   (1)     459  VFY_CLEANUP
   (1)     514  KERNEL OR EXEC MODE ROUTINE
SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page   1
1.0                                                                                                                              (1)

                                     0000     1 	.TITLE	SATSSS90 SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)
                                     0000     2 	.IDENT	/1.0/
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ;			  COPYRIGHT (c) 1977,1978 BY
                                     0000     6 ;	      DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
                                     0000     9 ; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
                                     0000    10 ; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
                                     0000    11 ; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
                                     0000    12 ; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
                                     0000    13 ; TRANSFERRED.
                                     0000    14 ;
                                     0000    15 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
                                     0000    16 ; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
                                     0000    17 ; CORPORATION.
                                     0000    18 ;
                                     0000    19 ; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
                                     0000    20 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
                                     0000    21 ;
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY:	SYSTST (SATS SYSTEM SERVICE TESTS)
                                     0000    25 ;
                                     0000    26 ; ABSTRACT:
                                     0000    27 ;
                                     0000    28 ;		THIS MODULE CONTAINS SUBROUTINES WHICH, WHEN LINKED
                                     0000    29 ; WITH SUCCOMMON.OBJ, FORM TEST MODULE SATSSS90 TO TEST SUCCESSFUL
                                     0000    30 ; OPERATION OF THE $CMKRNL/EXEC SYSTEM SERVICES. EACH SERVICE IS INVOKED
                                     0000    31 ; UNDER VARIOUS INPUT CONDITIONS WITH VARYING INPUT PARAMETERS. ONLY
                                     0000    32 ; SUCCESSFUL STATUS CODES ARE EXPECTED IN THIS TEST MODULE.  CORRECT 
                                     0000    33 ; OPERATION OF EACH SERVICE FOR EACH OF ITS ISSUANCES IS VERIFIED BY
                                     0000    34 ; CHECKING FOR AN SS$_NORMAL STATUS CODE, EXPECTED RETURN ARGUMENTS
                                     0000    35 ; AND EXPECTED FUNCTIONALITY PERFORMED.
                                     0000    36 ;
                                     0000    37 ; ENVIRONMENT:	USER MODE IMAGE; NEEDS CMKRNL PRIVILEGE,
                                     0000    38 ;		DYNAMICALLY ACQUIRES OTHER PRIVILEGES, AS NEEDED.
                                     0000    39 ;
                                     0000    40 ; AUTHOR: THOMAS L. CAFARELLA,		CREATION DATE: MAY, 1978
                                     0000    41 ;
                                     0000    42 ; MODIFIED BY:
                                     0000    43 ;
                                     0000    44 ;	, : VERSION
                                     0000    45 ; 01	- 
                                     0000    46 ;--
SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page   2
1.0             DECLARATIONS                                                                                                     (1)

                                     0000    48 	.SBTTL	DECLARATIONS
                                     0000    49 ;
                                     0000    50 ; INCLUDE FILES:
                                     0000    51 ;
                                     0000    52 	$PRVDEF				; PRIVILEGE BIT DEFINITIONS
                                     0000    53 	$PHDDEF				; PROCESS HEADER OFFSETS
                                     0000    54 	$PSLDEF				; MODE SYMBOL DEFINITIONS
                                     0000    55 	$LOGDEF				; LOG NAME TABLE DEFINITIONS
                                     0000    56 ;
                                     0000    57 ; MACROS:
                                     0000    58 ;
                                     0000    59 ;
                                     0000    60 ; EQUATED SYMBOLS:
                                     0000    61 ;
                           0000000A  0000    62 RLEN		= 10			; NO. OF RANDOM LWORDS FOR ARG LIST
                           0000003C  0000    63 STRING_MASK	= ^M<R2,R3,R4,R5> 	; REGISTER SAVE MASK FOR CMPC INSTRUCTION
                                     0000    64 ;
                                     0000    65 ; OWN STORAGE:
                                     0000    66 ;
SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page   3
1.0             DECLARATIONS                                                                                                     (1)

                                 00000000    68 	.PSECT	RODATA,RD,NOWRT,NOEXE,LONG
                                     0000    69 TEST_MOD_NAME::	STRING	C,<SATSSS90>	; TEST MODULE NAME
                                     0009    70 TEST_MOD_NAME_D: STRING	I,<SATSSS90>	; TEST MODULE NAME DESCRIPTOR
                                     0019    71 MSG1_INP_CTL:	STRING	I,<  SSCHM!4ZW: CONDITIONS:>
                                     0039    72 					; FAO CTL STRING FOR MSG1 IN SUCCOMMON.MAR
                                     0039    73 MSG3_ERR_CTL::	STRING	I,< *SSCHM!4ZW: !AS> 
                                     0051    74 					; FAO CTL STRING FOR MSG3 IN SUCCOMMON.MAR
                           00000000  0051    75 ARGLST0:	.LONG	0		; ZERO LENGTH ARG LIST
                           00000002  0055    76 PMODE_LOG:	.LONG	2		; UNIQUE LOGICAL NAME ...
                           00000000' 0059    77 		.ADDRESS TESTNUM 	; ... FOR EACH TEST CASE
SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page   4
1.0             DECLARATIONS                                                                                                     (1)

                                 00000000    79 	.PSECT	RWDATA,RD,WRT,NOEXE,LONG
                           00000008  0000    80 PRIVMASK:	.BLKQ	1		; ADDR OF PRIVILEGE MASK (IN PHD)
                           0000000C  0008    81 ARGLST:		.BLKL	1		; HOLDS CURRENT COND 1 TABLE ENTRY
                           0000000A  000C    82 ARGLSTR:	.LONG	RLEN		; ARG LIST TO CONTAIN ...
                           00000038  0010    83 		.BLKL	RLEN		; ... RANDOM DATA
                           00000040  0038    84 ARGLSTDESC1:	.BLKL	2		; DESCRIPTOR FOR ARG LIST (BEFORE RTN CALL)
                                     0040    85 ARGLSTDESC2:	STRING	O,4*<RLEN+1> 	; DESCR'R FOR ARG LIST (DURING RTN CALL)
                           00000075  0074    86 RTNMODE:	.BLKB	1		; MODE IN WHICH PRIV MODE RTN GETS CONTROL
                                     0075    87 PMODE_EQL:	STRING	O,1		; EQUIVALENCE NAME STRING
SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page   5
1.0             CONDITION TABLES                                                                                                 (1)

                                     007E    89 	.SBTTL	CONDITION TABLES
                                     007E    90 ;
                                     007E    91 ;	***** CONDITION TABLES FOR CMKRNL/CMEXEC SYSTEM SERVICES *****
                                     007E    92 ;
                                     007E    93 	COND	1,NOTARG,<ARGUMENT LIST TYPE>,-
                                     007E    94 		  <ARG LIST NOT SPECIFIED>,-
                                     007E    95 		  <ARG LIST SPECIFIED WITH 0 ARGS>,-
                                     007E    96 		  <ARG LIST SPECIFIED WITH SEVERAL ARGS>,-
                                     007E    97  
                           00000000  00F9    98 		    .LONG	0	; ARG LIST NOT SPECIFIED
                           00000051' 00FD    99 		    .ADDRESS	ARGLST0	; ARG LIST WITH 0 ARGS
                           0000000C' 0101   100 		    .ADDRESS	ARGLSTR	; ARG LIST WITH SEVERAL ARGS
                                     0105   101 ;
                                     0105   102 	COND	2,NOTARG,<PRIVILEGED MODE SERVICE>,-
                                     0105   103 		  <$CMKRNL>,-
                                     0105   104 		  <$CMEXEC>,-
                                     0105   105  
                                 00  0136   106 		    .BYTE	PSL$C_KERNEL ; $CMKRNL SERVICE
                                 01  0137   107 		    .BYTE	PSL$C_EXEC   ; $CMEXEC SERVICE
                                     0138   108 ;
                                     0138   109 	COND	3,NULL
                                     0139   110  
                                     0139   111 	COND	4,NULL
                                     013A   112  
                                     013A   113 	COND	5,NULL
                                     013B   114  
                                 00000000   115 	.PSECT	SATSSS90,RD,WRT,EXE
SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page   6
1.0             TM_SETUP, TM_CLEANUP                                                                                             (1)

                                     0000   117 	.SBTTL	TM_SETUP, TM_CLEANUP
                                     0000   118 ;++
                                     0000   119 ; FUNCTIONAL DESCRIPTION:
                                     0000   120 ;
                                     0000   121 ;		TM_SETUP AND TM_CLEANUP ARE CALLED TO PERFORM
                                     0000   122 ; REQUIRED HOUSEKEEPING AT THE BEGINNING AND END, RESPECTIVELY, OF
                                     0000   123 ; TEST MODULE EXECUTION.
                                     0000   124 ;
                                     0000   125 ; CALLING SEQUENCE:
                                     0000   126 ;
                                     0000   127 ;	BSBW TM_SETUP   BSBW TM_CLEANUP
                                     0000   128 ;
                                     0000   129 ; INPUT PARAMETERS:
                                     0000   130 ;
                                     0000   131 ;	NONE
                                     0000   132 ;
                                     0000   133 ; IMPLICIT INPUTS:
                                     0000   134 ;
                                     0000   135 ;	NONE
                                     0000   136 ;
                                     0000   137 ; OUTPUT PARAMETERS:
                                     0000   138 ;
                                     0000   139 ;	NONE
                                     0000   140 ;
                                     0000   141 ; IMPLICIT OUTPUTS:
                                     0000   142 ;
                                     0000   143 ;	TM_SETUP:  COND TABLE INDEX REGISTERS (R2,3,4,5,6) CLEARED;
                                     0000   144 ;		   ALL PRIVILEGES ACQUIRED.
                                     0000   145 ;
                                     0000   146 ; COMPLETION CODES:
                                     0000   147 ;
                                     0000   148 ;	EFLAG SET TO NON-ZERO IF ERROR ENCOUNTERED.
                                     0000   149 ;
                                     0000   150 ; SIDE EFFECTS:
                                     0000   151 ;
                                     0000   152 ;	SS_CHECK AND ERR_EXIT MACROS CAUSE PREMATURE EXIT 
                                     0000   153 ;	(VIA RSB) IF ERROR ENCOUNTERED.
                                     0000   154 ;
                                     0000   155 ;--
                                     0000   156 
                                     0000   157 
                                     0000   158 
                                     0000   159 TM_SETUP::
                          52     D4  0000   160 	CLRL	R2			; INITIALIZE
                          53     D4  0002   161 	CLRL	R3			; .. CONDITION
                          54     D4  0004   162 	CLRL	R4			; .... TABLE
                          55     D4  0006   163 	CLRL	R5			; ...... INDEX
                          56     D4  0008   164 	CLRL	R6			; ........ REGISTERS
                          FFF3'  30  000A   165 	BSBW	MOD_MSG_PRINT		; PRINT TEST MODULE BEGIN MSG
   00000000'EF   00000000'EF     DE  000D   166 	MOVAL	TEST_MOD_SUCC,TMD_ADDR	; ASSUME END MSG WILL SHOW SUCCESS
            00   00000000'8F     F0  0018   167 	INSV	#SUCCESS,#0,#3,MOD_MSG_CODE ; ADJUST STATUS CODE FOR SUCCESS
   00000000'EF            03         001F       
                                     0025   168 	MODE	TO,5$,KRNL		; KERNEL MODE TO ACCESS PHD
            59   00000000'9F     D0  0048   169 	MOVL	@#CTL$GL_PHD,R9		; GET PROCESS HEADER ADDRESS
   00000000'EF            69     DE  004F   170 	MOVAL	PHD$Q_PRIVMSK(R9),PRIVMASK ; GET PRIV MASK ADDRESS
                                     0056   171 	MODE	FROM,5$	; BACK TO USER MODE
                                     0057   172 	PRIV	ADD,ALL			; GET ALL PRIVILEGES
SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page   7
1.0             TM_SETUP, TM_CLEANUP                                                                                             (1)

                                     0080   173 	$SETPRN_S TEST_MOD_NAME_D 	; SET PROCESS NAME
                                     008D   174 	SS_CHECK  NORMAL		; CHECK STATUS CODE RETURNED FROM SETPRN
                          3C     BB  00BB   175 	PUSHR	#STRING_MASK		; SAVE REGS R2-R5 FOR MOVC3
       FF3E CF            28     28  00BD   176 	MOVC3	#4*RLEN,TM_SETUP,ARGLSTR+4 ; GET "RLEN" LWORDS OF RANDOM DATA
                 00000010'EF         00C2       
                          3C     BA  00C7   177 	POPR	#STRING_MASK		; RESTORE REGS R2-R5
                                 05  00C9   178 	RSB				; RETURN TO MAIN ROUTINE
                                     00CA   179 TM_CLEANUP::
                          FF33'  30  00CA   180 	BSBW	MOD_MSG_PRINT		; PRINT TEST MODULE END MSG
                                 05  00CD   181 	RSB				; RETURN TO MAIN ROUTINE
SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page   8
1.0             CONDITION SUBROUTINES - SETUP AND CLEANUP                                                                        (1)

                                     00CE   183 	.SBTTL	CONDITION SUBROUTINES - SETUP AND CLEANUP 
                                     00CE   184 ;++
                                     00CE   185 ; FUNCTIONAL DESCRIPTION:
                                     00CE   186 ;
                                     00CE   187 ;		CONDX AND CONDX_CLEANUP ARE SUBROUTINES WHICH ARE EXECUTED
                                     00CE   188 ; BEFORE AND AFTER THE VERIFY SUBROUTINE, RESPECTIVELY, WHENEVER A NEW
                                     00CE   189 ; CONDITION X VALUE IS SELECTED (SEE FUNCTIONAL DESCRIPTION OF SUCCOMMON
                                     00CE   190 ; ROUTINE IN SUCCOMMON.MAR). ANY SETUP FUNCTION PARTICULAR TO THE 
                                     00CE   191 ; CONDITION X TABLE IS INCLUDED IN THE CONDX SUBROUTINE AND CLEANED
                                     00CE   192 ; UP, IF NECESSARY, IN THE CONDX_CLEANUP SUBROUTINE. THIS INCLUDES,
                                     00CE   193 ; ESPECIALLY, CODE TO DETECT CONFLICTS AMONG CURRENT ENTRIES IN TWO
                                     00CE   194 ; OR MORE CONDITION TABLES. IF A CONFLICT IS DETECTED, A NON-ZERO
                                     00CE   195 ; VALUE IS STORED INTO CONFLICT, WHICH CAUSES THE CALLING ROUTINE
                                     00CE   196 ; (SUCCOMMON) TO SKIP THE CURRENT ENTRY IN THE CONDITION X TABLE.
                                     00CE   197 ;
                                     00CE   198 ; CALLING SEQUENCE:
                                     00CE   199 ;
                                     00CE   200 ;	BSBW CONDX   BSBW CONDX_CLEANUP
                                     00CE   201 ;	  WHERE X = 1,2,3,4,5
                                     00CE   202 ;
                                     00CE   203 ; INPUT PARAMETERS:
                                     00CE   204 ;
                                     00CE   205 ;	CONFLICT = 0
                                     00CE   206 ;
                                     00CE   207 ; IMPLICIT INPUTS:
                                     00CE   208 ;
                                     00CE   209 ;	R2,3,4,5,6 CONTAIN CURRENT CONDITION TABLE INDEX VALUES
                                     00CE   210 ;	  FOR COND TABLES 1,2,3,4,5, RESPECTIVELY.
                                     00CE   211 ;
                                     00CE   212 ; OUTPUT PARAMETERS:
                                     00CE   213 ;
                                     00CE   214 ;	CONFLICT SET TO NON-ZERO IF COND TABLE CONFLICT DETECTED.
                                     00CE   215 ;
                                     00CE   216 ; IMPLICIT OUTPUTS:
                                     00CE   217 ;
                                     00CE   218 ;	R2,3,4,5,6 PRESERVED
                                     00CE   219 ;
                                     00CE   220 ; COMPLETION CODES:
                                     00CE   221 ;
                                     00CE   222 ;	NONE
                                     00CE   223 ;
                                     00CE   224 ; SIDE EFFECTS:
                                     00CE   225 ;
                                     00CE   226 ;	NONE
                                     00CE   227 ;
                                     00CE   228 ;--
                                     00CE   229 
                                     00CE   230 
                                     00CE   231 
                                     00CE   232 COND1::
                                 05  00CE   233 	RSB				; RETURN TO MAIN ROUTINE
                                     00CF   234 COND1_CLEANUP::
                                 05  00CF   235 	RSB				; RETURN TO MAIN ROUTINE
                                     00D0   236 COND2::
                                 05  00D0   237 	RSB				; RETURN TO MAIN ROUTINE
                                     00D1   238 COND2_CLEANUP::
                                 05  00D1   239 	RSB				; RETURN TO MAIN ROUTINE
SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page   9
1.0             CONDITION SUBROUTINES - SETUP AND CLEANUP                                                                        (1)

                                     00D2   240 COND3::
                                 05  00D2   241 	RSB				; RETURN TO MAIN ROUTINE
                                     00D3   242 COND3_CLEANUP::
                                 05  00D3   243 	RSB				; RETURN TO MAIN ROUTINE
                                     00D4   244 COND4::
                                 05  00D4   245 	RSB				; RETURN TO MAIN ROUTINE
                                     00D5   246 COND4_CLEANUP::
                                 05  00D5   247 	RSB				; RETURN TO MAIN ROUTINE
                                     00D6   248 COND5::
                                 05  00D6   249 	RSB				; RETURN TO MAIN ROUTINE
                                     00D7   250 COND5_CLEANUP::
                                 05  00D7   251 	RSB				; RETURN TO MAIN ROUTINE
SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page  10
1.0             FORM_CONDS                                                                                                       (1)

                                     00D8   253 	.SBTTL	FORM_CONDS
                                     00D8   254 ;++
                                     00D8   255 ; FUNCTIONAL DESCRIPTION:
                                     00D8   256 ;
                                     00D8   257 ; 		FORM_CONDS FORMATS AND PRINTS INFORMATION ABOUT
                                     00D8   258 ;  THE CURRENT ELEMENT IN EACH OF THE CONDITION TABLES.
                                     00D8   259 ;
                                     00D8   260 ; CALLING SEQUENCE:
                                     00D8   261 ;
                                     00D8   262 ;	BSBW FORM_CONDS
                                     00D8   263 ;
                                     00D8   264 ; INPUT PARAMETERS:
                                     00D8   265 ;
                                     00D8   266 ;	NONE
                                     00D8   267 ;
                                     00D8   268 ; IMPLICIT INPUTS:
                                     00D8   269 ;
                                     00D8   270 ;	R2,3,4,5,6 CONTAIN CURRENT CONDITION TABLE INDEX VALUES
                                     00D8   271 ;	  FOR COND TABLES 1,2,3,4,5, RESPECTIVELY.
                                     00D8   272 ;	FOR X = 1,2,3,4,5 :
                                     00D8   273 ;		CONDX_T - TITLE TEXT FOR CONDX TABLE
                                     00D8   274 ;		CONDX_TAB - ELEMENT TEXT FOR CONDX TABLE
                                     00D8   275 ;		CONDX_C - CONTEXT OF THE CONDX TABLE
                                     00D8   276 ;		CONDX_E - DATA ELEMENTS OF THE CONDX TABLE
                                     00D8   277 ;
                                     00D8   278 ; OUTPUT PARAMETERS:
                                     00D8   279 ;
                                     00D8   280 ;	NONE
                                     00D8   281 ;
                                     00D8   282 ; IMPLICIT OUTPUTS:
                                     00D8   283 ;
                                     00D8   284 ;	NONE
                                     00D8   285 ;
                                     00D8   286 ; COMPLETION CODES:
                                     00D8   287 ;
                                     00D8   288 ;	NONE
                                     00D8   289 ;
                                     00D8   290 ; SIDE EFFECTS:
                                     00D8   291 ;
                                     00D8   292 ;	NONE
                                     00D8   293 ;
                                     00D8   294 ;--
                                     00D8   295 
                                     00D8   296 
                                     00D8   297 
                                     00D8   298 FORM_CONDS::
                                     00D8   299 	$FAO_S	MSG1_INP_CTL,FAO_LEN,FAO_DESC,TESTNUM
                                     00F7   300 					; FORMAT CONDITIONS HEADER MSG
                          FF06'  30  00F7   301 	BSBW	OUTPUT_MSG		; ... AND PRINT IT
            14            00     91  00FA   302 	CMPB	#COND1_C,#NULL		; IS CONDITION 1 NULL ?
                          03     12  00FD   303 	BNEQU	10$			; NO -- CONTINUE
                          00BF   31  00FF   304 	BRW	FORM_CONDSX		; YES -- SUBROUTINE IS FINISHED
                                     0102   305 10$:
   00000000'EF   0000007E'EF     DE  0102   306 	MOVAL	COND1_T,MSG_A		; SAVE ADDRESS OF CONDITION 1 TITLE FOR FAO
   00000000'EF   00000092'EF42   D0  010D   307 	MOVL	COND1_TAB[R2],MSG_B 	; SAVE ADDR OF COND 1 CURR TEXT ELT FOR FAO
   00000000'EF            00     90  0119   308 	MOVB	#COND1_C,MSG_CTXT 	; SAVE CONDITION 1 CONTEXT FOR FAO
                                     0120   309 	MOV_VAL	COND1_C,COND1_E[R2],MSG_DATA1 ; GIVE COND 1 DATA VALUE TO FAO
SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page  11
1.0             FORM_CONDS                                                                                                       (1)

                          FEDD'  30  0120   310 	BSBW	WRITE_MSG2		; FORMAT AND WRITE CONDITION 1 MSG
            14            00     91  0123   311 	CMPB	#COND2_C,#NULL		; IS CONDITION 2 NULL ?
                          03     12  0126   312 	BNEQU	20$			; NO -- CONTINUE
                          0096   31  0128   313 	BRW	FORM_CONDSX		; YES -- SUBROUTINE IS FINISHED
                                     012B   314 20$:
   00000000'EF   00000105'EF     DE  012B   315 	MOVAL	COND2_T,MSG_A		; SAVE ADDRESS OF CONDITION 2 TITLE FOR FAO
   00000000'EF   0000011E'EF43   D0  0136   316 	MOVL	COND2_TAB[R3],MSG_B 	; SAVE ADDR OF COND 2 CURR TEXT ELT FOR FAO
   00000000'EF            00     90  0142   317 	MOVB	#COND2_C,MSG_CTXT 	; SAVE CONDITION 2 CONTEXT FOR FAO
                                     0149   318 	MOV_VAL	COND2_C,COND2_E[R3],MSG_DATA1 ; GIVE COND 2 DATA VALUE TO FAO
                          FEB4'  30  0149   319 	BSBW	WRITE_MSG2		; FORMAT AND WRITE CONDITION 2 MSG
            14            14     91  014C   320 	CMPB	#COND3_C,#NULL		; IS CONDITION 3 NULL ?
                          03     12  014F   321 	BNEQU	30$			; NO -- CONTINUE
                          006D   31  0151   322 	BRW	FORM_CONDSX		; YES -- SUBROUTINE IS FINISHED
                                     0154   323 30$:
   00000000'EF   00000138'EF     DE  0154   324 	MOVAL	COND3_T,MSG_A		; SAVE ADDRESS OF CONDITION 3 TITLE FOR FAO
   00000000'EF   00000138'EF44   D0  015F   325 	MOVL	COND3_TAB[R4],MSG_B 	; SAVE ADDR OF COND 3 CURR TEXT ELT FOR FAO
   00000000'EF            14     90  016B   326 	MOVB	#COND3_C,MSG_CTXT 	; SAVE CONDITION 3 CONTEXT FOR FAO
                                     0172   327 	MOV_VAL	COND3_C,COND3_E[R4],MSG_DATA1 ; GIVE COND 3 DATA VALUE TO FAO
                          FE8B'  30  0172   328 	BSBW	WRITE_MSG2		; FORMAT AND WRITE CONDITION 3 MSG
            14            14     91  0175   329 	CMPB	#COND4_C,#NULL		; IS CONDITION 4 NULL ?
                          47     13  0178   330 	BEQLU	FORM_CONDSX		; YES -- SUBROUTINE IS FINISHED
   00000000'EF   00000139'EF     DE  017A   331 	MOVAL	COND4_T,MSG_A		; SAVE ADDRESS OF CONDITION 4 TITLE FOR FAO
   00000000'EF   00000139'EF45   D0  0185   332 	MOVL	COND4_TAB[R5],MSG_B 	; SAVE ADDR OF COND 4 CURR TEXT ELT FOR FAO
   00000000'EF            14     90  0191   333 	MOVB	#COND4_C,MSG_CTXT 	; SAVE CONDITION 4 CONTEXT FOR FAO
                                     0198   334 	MOV_VAL	COND4_C,COND4_E[R5],MSG_DATA1 ; GIVE COND 4 DATA VALUE TO FAO
                          FE65'  30  0198   335 	BSBW	WRITE_MSG2		; FORMAT AND WRITE CONDITION 4 MSG
            14            14     91  019B   336 	CMPB	#COND5_C,#NULL		; IS CONDITION 5 NULL ?
                          21     13  019E   337 	BEQLU	FORM_CONDSX		; YES -- SUBROUTINE IS FINISHED
   00000000'EF   0000013A'EF     DE  01A0   338 	MOVAL	COND5_T,MSG_A		; SAVE ADDRESS OF CONDITION 5 TITLE FOR FAO
   00000000'EF   0000013A'EF46   D0  01AB   339 	MOVL	COND5_TAB[R6],MSG_B 	; SAVE ADDR OF COND 5 CURR TEXT ELT FOR FAO
   00000000'EF            14     90  01B7   340 	MOVB	#COND5_C,MSG_CTXT 	; SAVE CONDITION 5 CONTEXT FOR FAO
                                     01BE   341 	MOV_VAL	COND5_C,COND5_E[R6],MSG_DATA1 ; GIVE COND 5 DATA VALUE TO FAO
                          FE3F'  30  01BE   342 	BSBW	WRITE_MSG2		; FORMAT AND WRITE CONDITION 5 MSG
                                     01C1   343 FORM_CONDSX:
                                 05  01C1   344 	RSB				; RETURN TO CALLER
SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page  12
1.0             VERIFY                                                                                                           (1)

                                     01C2   346 	.SBTTL	VERIFY
                                     01C2   347 ;++
                                     01C2   348 ; FUNCTIONAL DESCRIPTION:
                                     01C2   349 ;
                                     01C2   350 ;		VERIFY IS CALLED ONCE FOR EACH COMBINATION OF CONDITION
                                     01C2   351 ; TABLE VALUES (AS DETERMINED BY THE INDEX REGISTERS R2,3,4,5,6 FOR
                                     01C2   352 ; COND TABLES 1,2,3,4,5, RESPECTIVELY). VERIFY ESTABLISHES THE CONDITIONS
                                     01C2   353 ; SPECIFIED BY THE COND TABLES AND ISSUES THE SUBJECT SYSTEM SERVICE
                                     01C2   354 ; ($CMKRNL OR $CMEXEC). THEN, THE SUCCESSFUL OPERATION OF THE SERVICE IS
                                     01C2   355 ; VERIFIED BY EXAMINING THE STATUS CODE RETURNED, THE VALUES FOR RETURN ARGS
                                     01C2   356 ; AND THE FUNCTIONALITY PERFORMED. THE EXAMINATIONS TAKE THE FORM OF 
                                     01C2   357 ; COMPARISONS AGAINST EXPECTED VALUES. ANY FAILING COMPARISON CAUSES AN
                                     01C2   358 ; ERR_EXIT MACRO TO BE EXECUTED (EITHER DIRECTLY, OR INDIRECTLY,
                                     01C2   359 ; THROUGH THE SS_CHECK MACRO); ERR_EXIT SETS EFLAG TO NON-ZERO,
                                     01C2   360 ; PRINTS ERROR MESSAGES AND CAUSES AN IMMEDIATE RSB TO CALLER.
                                     01C2   361 ; WHEN ERR_EXIT IS EXECUTED, FURTHER CALLS TO VERIFY ARE SUPPRESSED,
                                     01C2   362 ; AND, AFTER EXECUTING CLEANUP SUBROUTINES, THE IMAGE EXITS.
                                     01C2   363 ;
                                     01C2   364 ; CALLING SEQUENCE:
                                     01C2   365 ;
                                     01C2   366 ;	BSBW VERIFY
                                     01C2   367 ;
                                     01C2   368 ; INPUT PARAMETERS:
                                     01C2   369 ;
                                     01C2   370 ;	NONE
                                     01C2   371 ;
                                     01C2   372 ; IMPLICIT INPUTS:
                                     01C2   373 ;
                                     01C2   374 ;	R2,3,4,5,6 CONTAIN CURRENT CONDITION TABLE INDEX VALUES
                                     01C2   375 ;	  FOR COND TABLES 1,2,3,4,5, RESPECTIVELY.
                                     01C2   376 ;	FOR X = 1,2,3,4,5 :
                                     01C2   377 ;		CONDX_E - ADDRESS OF TABLE OF DATA VALUES FOR CONDX
                                     01C2   378 ;		  TABLE. IF THE CONTEXT OF TABLE X IS A SYSTEM SERVICE
                                     01C2   379 ;		  ARGUMENT, THE ARGUMENT NAME MAY BE USED AS A SYNONYM
                                     01C2   380 ;		  FOR CONDX_E.
                                     01C2   381 ;
                                     01C2   382 ; OUTPUT PARAMETERS:
                                     01C2   383 ;
                                     01C2   384 ;	NONE
                                     01C2   385 ;
                                     01C2   386 ; IMPLICIT OUTPUTS:
                                     01C2   387 ;
                                     01C2   388 ;	VERIFY HAS NO OUTPUT. SINCE ITS PURPOSE IS TO TEST FOR ERRORS,
                                     01C2   389 ;	IT MERELY RETURNS TO CALLER NORMALLY AFTER THE TESTS, PROVIDING
                                     01C2   390 ;	ALL WERE SUCCESSFUL; IF AN ERROR IS DISCOVERED, RETURN IS VIA
                                     01C2   391 ;	AN ERR_EXIT OR SS_CHECK MACRO, BOTH OF WHICH DOCUMENT DETECTED
                                     01C2   392 ;	ERRORS.
                                     01C2   393 ;
                                     01C2   394 ; COMPLETION CODES:
                                     01C2   395 ;
                                     01C2   396 ;	EFLAG SET TO NON-ZERO IF ERROR ENCOUNTERED.
                                     01C2   397 ;
                                     01C2   398 ; SIDE EFFECTS:
                                     01C2   399 ;
                                     01C2   400 ;	SS_CHECK AND ERR_EXIT MACROS CAUSE PREMATURE EXIT 
                                     01C2   401 ;	(VIA RSB) IF ERROR ENCOUNTERED.
                                     01C2   402 ;
SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page  13
1.0             VERIFY                                                                                                           (1)

                                     01C2   403 ;--
                                     01C2   404 
                                     01C2   405 
                                     01C2   406 
                                     01C2   407 VERIFY::
                 00000000'EF     95  01C2   408 	TSTB	CFLAG			; SHOULD CONDITIONS BE PRINTED ?
                          03     13  01C8   409 	BEQL	5$			; NO -- CONTINUE
                          FF0B   30  01CA   410 	BSBW	FORM_CONDS		; YES -- FMT & PRINT ALL CONDS FOR THIS T.C.
                                     01CD   411 5$:
   00000008'EF   000000F9'EF42   D0  01CD   412 	MOVL	COND1_E[R2],ARGLST 	; GET CURRENT ENTRY OUT OF TABLE
   00000074'EF   00000000'EF     90  01D9   413 	MOVB	ONES,RTNMODE		; INIT MODE FOR EACH TST CASE
   00000010'EF   00000000'EF     B0  01E4   414 	MOVW	TESTNUM,ARGLSTR+4 	; MAKE RANDOM DATA UNIQUE FOR EACH T.C.
                                     01EF   415 ;
                                     01EF   416 ; ****** SYSTEM SERVICE CALL WHICH IS THE SUBJECT OF THIS TEST CASE ******
                                     01EF   417 ;
            00   00000136'EF43   91  01EF   418 	CMPB	COND2_E[R3],#PSL$C_KERNEL ; IS THIS A CMKRNL REQUEST ?
                          15     13  01F7   419 	BEQLU	10$			; YES -- GO DO IT
                                     01F9   420 	$CMEXEC_S  PRIVMODERTN,@ARGLST 	; ISSUE CMEXEC REQUEST
                          13     11  020C   421 	BRB	15$			; ... AND GO CHECK RESULTS
                                     020E   422 10$:
                                     020E   423 	$CMKRNL_S PRIVMODERTN,@ARGLST 	; ISSUE KERNEL REQUEST
                                     0221   424 15$:
            57   00000000'EF     D0  0221   425 	MOVL	ONES,R7			; PREPARE FOR R0 COMPARISON
            57   00000000'EF     B0  0228   426 	MOVW	TESTNUM,R7		; ......
            57            50     D1  022F   427 	CMPL	R0,R7			; DID PRIV MODE RTN RETURN EXPECTED STATUS ?
                          73     13  0232   428 	BEQLU	20$			; YES -- CONTINUE
   00000000'EF            57     D0  0234   429 	MOVL	R7,EXPV			; NO -- LOAD EXPECTED AND ....
   00000000'EF            50     D0  023B   430 	MOVL	R0,RECV			; ... RETURNED VALUES, THEN EXIT
                                     0242   431 	ERR_EXIT LONG,<INCORRECT USER-GENERATED STATUS CODE>, -
                                     0242   432 		      < RETURNED FROM PRIV MODE RTN>
                                     02A7   433 20$:
   00000136'EF43 00000074'EF     91  02A7   434 	CMPB	RTNMODE,COND2_E[R3] 	; DID PRIV MODE RTN REALLY GET EXP MODE ?
                          74     13  02B3   435 	BEQLU	30$			; YES -- CONTINUE
   00000000'EF   00000136'EF43   90  02B5   436 	MOVB	COND2_E[R3],EXPV 	; NO -- LOAD UP EXPECTED AND
   00000000'EF   00000074'EF     90  02C1   437 	MOVB	RTNMODE,RECV		; ... RECEIVED VALUES, THEN EXIT
                                     02CC   438 	ERR_EXIT BYTE,<PRIVILEGED MODE SERVICE GAVE USER>, -
                                     02CC   439 		      < ROUTINE INCORRECT MODE>
                                     0329   440 30$:
   00000038'EF   00000040'EF     D0  0329   441 	MOVL	ARGLSTDESC2,ARGLSTDESC1 ; GET LENGTH OF DESCRIPTOR
   0000003C'EF   00000008'EF     D0  0334   442 	MOVL	ARGLST,ARGLSTDESC1+4 	; ... AND ITS ADDRESS
                          52     D5  033F   443 	TSTL	R2			; 1ST CONDITION 1 ELEMENT ?
                          0B     12  0341   444 	BNEQ	40$			; NO -- CONTINUE
   0000003C'EF   00000051'EF     DE  0343   445 	MOVAL	ARGLST0,ARGLSTDESC1+4 	; YES -- USE 0 ARG LIST
                                     034E   446 40$:
                          3C     BB  034E   447 	PUSHR	#STRING_MASK		; SAVE REGS R2-R5 FOR CMPC
   0000003C'FF   00000038'EF     29  0350   448 	CMPC3	ARGLSTDESC1,@ARGLSTDESC1+4,@ARGLSTDESC2+4
                 00000044'FF         035B       
                                     0360   449 					; IS EXPECTED LIST = ACTUAL LIST ?
                          3C     BA  0360   450 	POPR	#STRING_MASK		; RESTORE REGS R2-R5
                          70     13  0362   451 	BEQLU	VERIFYX			; YES -- ALL FINISHED
   00000000'EF   00000038'EF     7D  0364   452 	MOVQ	ARGLSTDESC1,EXPV 	; NO -- LOAD UP EXPECTED AND
   00000000'EF   00000040'EF     7D  036F   453 	MOVQ	ARGLSTDESC2,RECV 	; ... RECEIVED VALUES, THEN EXIT
                                     037A   454 	ERR_EXIT DESC,<ARG LIST IN PRIV MODE ROUTINE >, -
                                     037A   455 		      <CONTAINS INCORRECT DATA>
                                     03D4   456 VERIFYX:
                                 05  03D4   457 	RSB				; RETURN TO CALLER
SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page  14
1.0             VFY_CLEANUP                                                                                                      (1)

                                     03D5   459 	.SBTTL	VFY_CLEANUP
                                     03D5   460 ;++
                                     03D5   461 ; FUNCTIONAL DESCRIPTION:
                                     03D5   462 ;
                                     03D5   463 ;		VFY_CLEANUP EXECUTES SYSTEM SERVICES TO UNDO THE
                                     03D5   464 ; EFFECT OF THOSE ISSUED IN THE VERIFY SUBROUTINE. VFY_CLEANUP MUST
                                     03D5   465 ; ASSUME THAT VERIFY MAY NOT HAVE EXECUTED IN ITS ENTIRETY (IF AN
                                     03D5   466 ; ERROR IS FOUND). ALSO, VFY_CLEANUP MAY ISSUE SS_CHECK OR ERR_EXIT
                                     03D5   467 ; ONLY AFTER PERFORMING ALL OF ITS CLEANUP OPERATIONS; THIS IS REQUIRED
                                     03D5   468 ; IN THE EVENT THAT VFY_CLEANUP IS CALLED DURING ERROR PROCESSING,
                                     03D5   469 ; WHEN PERFORMING THE REQUIRED CLEANUP IS MORE IMPORTANT THAN
                                     03D5   470 ; POSSIBLY DISCOVERING A SECOND ERROR.
                                     03D5   471 ;
                                     03D5   472 ; CALLING SEQUENCE:
                                     03D5   473 ;
                                     03D5   474 ;	BSBW VFY_CLEANUP
                                     03D5   475 ;
                                     03D5   476 ; INPUT PARAMETERS:
                                     03D5   477 ;
                                     03D5   478 ;	NONE
                                     03D5   479 ;
                                     03D5   480 ; IMPLICIT INPUTS:
                                     03D5   481 ;
                                     03D5   482 ;	R2,3,4,5,6 CONTAIN CURRENT CONDITION TABLE INDEX VALUES
                                     03D5   483 ;	  FOR COND TABLES 1,2,3,4,5, RESPECTIVELY.
                                     03D5   484 ;	FOR X = 1,2,3,4,5 :
                                     03D5   485 ;		CONDX_E - ADDRESS OF TABLE OF DATA VALUES FOR CONDX
                                     03D5   486 ;		  TABLE. IF THE CONTEXT OF TABLE X IS A SYSTEM SERVICE
                                     03D5   487 ;		  ARGUMENT, THE ARGUMENT NAME MAY BE USED AS A SYNONYM
                                     03D5   488 ;		  FOR CONDX_E.
                                     03D5   489 ;
                                     03D5   490 ; OUTPUT PARAMETERS:
                                     03D5   491 ;
                                     03D5   492 ;	NONE
                                     03D5   493 ;
                                     03D5   494 ; IMPLICIT OUTPUTS:
                                     03D5   495 ;
                                     03D5   496 ;	NONE
                                     03D5   497 ;
                                     03D5   498 ; COMPLETION CODES:
                                     03D5   499 ;
                                     03D5   500 ;	EFLAG SET TO NON-ZERO IF ERROR ENCOUNTERED.
                                     03D5   501 ;
                                     03D5   502 ; SIDE EFFECTS:
                                     03D5   503 ;
                                     03D5   504 ;	SS_CHECK AND ERR_EXIT MACROS CAUSE PREMATURE EXIT 
                                     03D5   505 ;	(VIA RSB) IF ERROR ENCOUNTERED.
                                     03D5   506 ;
                                     03D5   507 ;--
                                     03D5   508 
                                     03D5   509 
                                     03D5   510 
                                     03D5   511 VFY_CLEANUP::
                                 05  03D5   512 	RSB				; RETURN TO CALLER
SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page  15
1.0             KERNEL OR EXEC MODE ROUTINE                                                                                      (1)

                                     03D6   514 	.SBTTL KERNEL OR EXEC MODE ROUTINE
                                     03D6   515 ;
                                     03D6   516 ;	THIS ROUTINE IS INVOKED IN THE VERIFY SUBROUTINE BY A $CMKRNL
                                     03D6   517 ;	OR $CMEXEC SYSTEM SERVICE. ITS FUNCTION IS TO ASCERTAIN
                                     03D6   518 ;	ITS EXECUTION MODE, STORING ITS VALUE IN RTNMODE;
                                     03D6   519 ;	SET A RETURN STATUS VALUE IN R0; AND,STORE THE
                                     03D6   520 ;	CONTENTS OF ITS ARGUMENT LIST IN ARGLSTDESC2.
                                     03D6   521 ;	ALL THREE OF THESE DATA BASES (RTNMODE, R0, 
                                     03D6   522 ;	ARGLSTDESC2) WILL BE EXAMINED FOR EXPECTED VALUES
                                     03D6   523 ;	IN THE VERIFY SUBROUTINE.
                                     03D6   524 ;
                                     03D6   525 PRIVMODERTN:
                               0FFC  03D6   526 	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>
                                     03D8   527 ;
                                     03D8   528 ; FIND CURRENT EXECUTION MODE BY MAKING A LOG NAME AND TRANSLATING IT.
                                     03D8   529 ;
                                     03D8   530 	$CRELOG_S TBLFLG=#LOG$C_PROCESS, -  ; DEFINE A LOG NAME
                                     03D8   531 		  LOGNAM=PMODE_LOG,      -
                                     03D8   532 		  EQLNAM=PMODE_EQL
                                     03EF   533 	$TRNLOG_S LOGNAM=PMODE_LOG, -  	; TRAN IT TO RECEIVE MODE
                                     03EF   534 		  RSLBUF=PMODE_EQL, -
                                     03EF   535 		  ACMODE=RTNMODE
                                     040E   536 	$DELLOG_S TBLFLG=#LOG$C_PROCESS, - ; NO LONGER NEED IT
                                     040E   537 		  LOGNAM=PMODE_LOG
                          5C     D5  041F   538 	TSTL	AP			; IS THERE AN ARGUMENT LIST ?
                          0B     12  0421   539 	BNEQ	10$			; YES -- CONTINUE
            58            04     9A  0423   540 	MOVZBL	#4,R8			; NO -- ESTABLISH LENGTH OF NULL LIST
                 00000044'FF     D4  0426   541 	CLRL	@ARGLSTDESC2+4		; ... AND SET ZERO ARGUMENT COUNT
                          0F     11  042C   542 	BRB	20$			; JOIN COMMON CODE
                                     042E   543 10$:
            04            6C     C5  042E   544 	MULL3	(AP),#4,R8		; GET NUMBER OF BYTES IN ARG LIST
                          58         0431       
            58            04     C0  0432   545 	ADDL2	#4,R8			; ... ADD IN LENGTH OF LIST HEADER 
            6C            58     28  0435   546 	MOVC3	R8,(AP),@ARGLSTDESC2+4 	; SAVE ENTIRE ARG LIST INCL HDR
                 00000044'FF         0438       
                                     043D   547 20$:
   00000040'EF            58     D0  043D   548 	MOVL	R8,ARGLSTDESC2		; PUT LENGTH IN DESCRIPTOR
            50   00000000'EF     D0  0444   549 	MOVL	ONES,R0			; SAVE RETURN DATA IN R0 
            50   00000000'EF     B0  044B   550 	MOVW	TESTNUM,R0		; ... MAKE IT UNIQUE TO TEST CASE
                                 04  0452   551 	RET				; EXIT FROM PRIV MODE RTN
                                     0453   552 	.END
SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                     (1)

$$$$           = 00000384 R     05   EXPV             ********   X   05   PHD$L_PCB        00000078            
$$$CHARS       = 00000035            FAO_DESC         ********   X   05   PHD$L_PGFLCNT    00000034            
$$$CHARS1      = 00000007            FAO_LEN          ********   X   05   PHD$L_PGFLQUOTA  0000005C            
$$$CHARS2      = 00000007            FORM_CONDS       000000D8 RG    05   PHD$L_PSL        000000C4            
$$$CHARS3      = 00000000            FORM_CONDSX      000001C1 R     05   PHD$L_PSTBASOFF  00000020            
$$$CHARS4      = 00000000            GBL...         = 00000000            PHD$L_PTWSLELCK  00000064            
$$$CHARS5      = 00000000            LOG$B_AMOD       0000000E            PHD$L_PTWSLEVAL  00000068            
$$$COND_A      = 00000001            LOG$B_TABLE      0000000B            PHD$L_R0         00000088            
$$$STRINGS     = 00000001            LOG$B_TYPE       0000000A            PHD$L_R1         0000008C            
$$$STRINGS2    = 00000005            LOG$C_GROUP    = 00000001            PHD$L_R10        000000B0            
$$T2           = 00000004            LOG$C_LENGTH     00000014            PHD$L_R11        000000B4            
ARGLST           00000008 R     04   LOG$C_NAMLENGTH= 00000040            PHD$L_R12        000000B8            
ARGLST0          00000051 R     03   LOG$C_PROCESS  = 00000002            PHD$L_R13        000000BC            
ARGLSTDESC1      00000038 R     04   LOG$C_SYSTEM   = 00000000            PHD$L_R2         00000090            
ARGLSTDESC2      00000040 R     04   LOG$K_LENGTH     00000014            PHD$L_R3         00000094            
ARGLSTR          0000000C R     04   LOG$L_LTBL       00000004            PHD$L_R4         00000098            
BIT...         = 00000000            LOG$L_LTFL       00000000            PHD$L_R5         0000009C            
BYTE           = 00000001  G         LOG$L_MBXUCB     00000010            PHD$L_R6         000000A0            
CFLAG            ********   X   05   LOG$T_NAME       00000014            PHD$L_R7         000000A4            
CHMRTN           ********   X   05   LOG$W_GROUP      0000000C            PHD$L_R8         000000A8            
CHM_CONT         ********   X   05   LOG$W_SIZE       00000008            PHD$L_R9         000000AC            
COMP_SC          ********   X   05   LONG           = 00000004  G         PHD$L_REFERFLT   00000014            
COND1            000000CE RG    05   MOD_MSG_CODE     ********   X   05   PHD$L_SSP        00000080            
COND1_C        = 00000000            MOD_MSG_PRINT    ********   X   05   PHD$L_USP        00000084            
COND1_CLEANUP    000000CF RG    05   MSG1_INP_CTL     00000019 R     03   PHD$L_WSL        00000118            
COND1_E          000000F9 R     04   MSG3_ERR_CTL     00000039 RG    03   PHD$M_DALCSTX  = 00000002            
COND1_H          00000091 RG    04   MSG_A            ********   X   05   PHD$M_PFMFLG   = 00000001            
COND1_T          0000007E R     04   MSG_B            ********   X   05   PHD$M_WSPEAKCHK= 00000004            
COND1_TAB        00000092 R     04   MSG_CTXT         ********   X   05   PHD$Q_PRIVMSK    00000000            
COND2            000000D0 RG    05   NOTARG         = 00000000  G         PHD$S_ASTLVL   = 00000008            
COND2_C        = 00000000            NULL           = 00000014  G         PHD$S_P0LR     = 00000018            
COND2_CLEANUP    000000D1 RG    05   ONES             ********   X   05   PHD$V_ASTLVL   = 00000018            
COND2_E          00000136 R     04   OUTPUT_MSG       ********   X   05   PHD$V_DALCSTX  = 00000001            
COND2_H          0000011D RG    04   PCV              ********   X   05   PHD$V_P0LR     = 00000000            
COND2_T          00000105 R     04   PHD$B_ASTLVL     000000CF            PHD$V_PFMFLG   = 00000000            
COND2_TAB        0000011E R     04   PHD$B_DFPFC      00000038            PHD$V_WSPEAKCHK= 00000002            
COND3            000000D2 RG    05   PHD$B_PAGFIL     0000001F            PHD$W_ASTLM      00000044            
COND3_C        = 00000014            PHD$B_PGTBPFC    00000039            PHD$W_BAK        00000048            
COND3_CLEANUP    000000D3 RG    05   PHD$C_LENGTH     00000118            PHD$W_DFWSCNT    0000001A            
COND3_H          00000138 RG    04   PHD$C_PHDPAGCTX= 00000008            PHD$W_EMPTPG     000000D8            
COND3_T          00000138 R     04   PHD$K_LENGTH     00000118            PHD$W_EXTDYNWS   00000076            
COND3_TAB        00000138 R     04   PHD$L_BIOCNT     00000054            PHD$W_FILLM      00000060            
COND4            000000D4 RG    05   PHD$L_CPULIM     00000058            PHD$W_FLAGS      0000003A            
COND4_C        = 00000014            PHD$L_CPUTIM     0000003C            PHD$W_PHVINDEX   00000046            
COND4_CLEANUP    000000D5 RG    05   PHD$L_DIOCNT     00000050            PHD$W_PRCLM      00000042            
COND4_H          00000139 RG    04   PHD$L_ESP        0000007C            PHD$W_PST        00000020            
COND4_T          00000139 R     04   PHD$L_FREP0VA    00000028            PHD$W_PSTBASMAX  0000004A            
COND4_TAB        00000139 R     04   PHD$L_FREP1VA    00000030            PHD$W_PSTFREE    00000026            
COND5            000000D6 RG    05   PHD$L_FREPTECNT  0000002C            PHD$W_PSTLAST    00000024            
COND5_C        = 00000014            PHD$L_KSP        00000078            PHD$W_PTCNTACT   00000070            
COND5_CLEANUP    000000D7 RG    05   PHD$L_P0BR       000000C8            PHD$W_PTCNTLCK   0000006C            
COND5_H          0000013A RG    04   PHD$L_P0LRASTL   000000CC            PHD$W_PTCNTMAX   00000072            
COND5_T          0000013A R     04   PHD$L_P1BR       000000D0            PHD$W_PTCNTVAL   0000006E            
COND5_TAB        0000013A R     04   PHD$L_P1LR       000000D4            PHD$W_QUANT      00000040            
CTL$GL_PHD       ********   X   05   PHD$L_PAGEFLTS   0000004C            PHD$W_TQLM       00000062            
DESC           = 00000010  G         PHD$L_PAGFIL     0000001C            PHD$W_WSAUTH     0000000A            
EFLAG            ********   X   05   PHD$L_PC         000000C0            PHD$W_WSDYN      0000000E            
SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page  17
SYMBOL TABLE                                                                                                                     (1)

PHD$W_WSFLUID    00000074            PSL$V_CM       = 0000001F            
PHD$W_WSLAST     00000012            PSL$V_CURMOD   = 00000018            
PHD$W_WSLIST     00000008            PSL$V_DV       = 00000007            
PHD$W_WSLOCK     0000000C            PSL$V_FPD      = 0000001B            
PHD$W_WSLX       0000004A            PSL$V_FU       = 00000006            
PHD$W_WSNEXT     00000010            PSL$V_IPL      = 00000010            
PHD$W_WSQUOTA    00000018            PSL$V_IS       = 0000001A            
PMODE_EQL        00000075 R     04   PSL$V_IV       = 00000005            
PMODE_LOG        00000055 R     03   PSL$V_PRVMOD   = 00000016            
PRIVMASK         00000000 R     04   PSL$V_TBIT     = 00000004            
PRIVMODERTN      000003D6 R     05   PSL$V_TP       = 0000001E            
PROCESS_ERR      ********   X   05   QUAD           = 00000008  G         
PRV$V_ALLSPOOL = 00000004            RECV             ********   X   05   
PRV$V_BUGCHK   = 00000017            REST_REGS        ********   X   05   
PRV$V_CMEXEC   = 00000001            RLEN           = 0000000A            
PRV$V_CMKRNL   = 00000000            RTNMODE          00000074 R     04   
PRV$V_DETACH   = 00000005            SAVE_REGS        ********   X   05   
PRV$V_DIAGNOSE = 00000006            SS$_NORMAL       ********   X   05   
PRV$V_EXQUOTA  = 00000013            STRING_MASK    = 0000003C            
PRV$V_GROUP    = 00000008            SUCCESS          ********   X   05   
PRV$V_GRPNAM   = 00000003            SYS$CMEXEC       ********   X   05   
PRV$V_LOG_IO   = 00000007            SYS$CMKRNL       ********   X   05   
PRV$V_MOUNT    = 00000011            SYS$CRELOG       ********   X   05   
PRV$V_NETMBX   = 00000014            SYS$DELLOG       ********   X   05   
PRV$V_NOACNT   = 00000009            SYS$FAO          ********   X   05   
PRV$V_OPER     = 00000012            SYS$SETPRN       ********   X   05   
PRV$V_PHY_IO   = 00000016            SYS$TRNLOG       ********   X   05   
PRV$V_PRMCEB   = 0000000A            TESTNUM          ********   X   03   
PRV$V_PRMGBL   = 00000018            TEST_MOD_NAME    00000000 RG    03   
PRV$V_PRMMBX   = 0000000B            TEST_MOD_NAME_D  00000009 R     03   
PRV$V_PSWAPM   = 0000000C            TEST_MOD_SUCC    ********   X   05   
PRV$V_SETPRI   = 0000000D            TMD_ADDR         ********   X   05   
PRV$V_SETPRV   = 0000000E            TM_CLEANUP       000000CA RG    05   
PRV$V_SYSGBL   = 00000019            TM_SETUP         00000000 RG    05   
PRV$V_SYSNAM   = 00000002            VERIFY           000001C2 RG    05   
PRV$V_TMPMBX   = 0000000F            VERIFYX          000003D4 R     05   
PRV$V_VOLPRO   = 00000015            VFY_CLEANUP      000003D5 RG    05   
PRV$V_WORLD    = 00000010            WORD           = 00000002  G         
PSL$C_EXEC     = 00000001            WRITE_MSG2       ********   X   05   
PSL$C_KERNEL   = 00000000            
PSL$C_SUPER    = 00000002            
PSL$C_USER     = 00000003            
PSL$M_CM       = 80000000            
PSL$M_CURMOD   = 03000000            
PSL$M_DV       = 00000080            
PSL$M_FPD      = 08000000            
PSL$M_FU       = 00000040            
PSL$M_IPL      = 001F0000            
PSL$M_IS       = 04000000            
PSL$M_IV       = 00000020            
PSL$M_PRVMOD   = 00C00000            
PSL$M_SAFBITS  = 000037FF            
PSL$M_TBIT     = 00000010            
PSL$M_TP       = 40000000            
PSL$S_CURMOD   = 00000002            
PSL$S_IPL      = 00000005            
PSL$S_PRVMOD   = 00000002            
SATSSS90        SATS SYST SERV TESTS  $CMKRNL/EXEC (SUCC S.C.)   22-AUG-1978 04:20:20   VAX-11 MACRO X0.3-11               Page  18
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            0000011C      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RODATA           0000005D      03     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD  NOWRT LONG  
RWDATA           0000013B      04     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD    WRT LONG  
SATSSS90         00000453      05     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
13860. BYTES LEFT IN FREE MEMORY POOL.
594. BYTES OF RECLAIMED MEMORY.
OBJ$:SATSSS90,LIS$:SATSSS90/-SP=EXECML$/ML,LIB$:SYSTST.MLB/ML,SRC$:SATSSS90
44 MLB DIR RDS - 697 GETS TO DEFINE 29 MACROS. 35 INTER. FILE WRITES. 
