SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      48  DECLARATIONS
   (1)     105  CONDITION TABLES
   (1)     139  TM_SETUP, TM_CLEANUP
   (1)     210  CONDITION SUBROUTINES - SETUP AND CLEANUP 
   (1)     286  FORM_CONDS
   (1)     379  VERIFY
   (1)     610  VFY_CLEANUP
   (1)     668  BUILD_CLUST SUBROUTINE
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page   1
1.0                                                                                                                              (1)

                                     0000     1 	.TITLE	SATSSS50 SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)
                                     0000     2 	.IDENT	/1.0/
                                     0000     3 
                                     0000     4 ;
                                     0000     5 ;			  COPYRIGHT (c) 1977,1978 BY
                                     0000     6 ;	      DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
                                     0000     9 ; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
                                     0000    10 ; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
                                     0000    11 ; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
                                     0000    12 ; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
                                     0000    13 ; TRANSFERRED.
                                     0000    14 ;
                                     0000    15 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
                                     0000    16 ; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
                                     0000    17 ; CORPORATION.
                                     0000    18 ;
                                     0000    19 ; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
                                     0000    20 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
                                     0000    21 ;
                                     0000    22 
                                     0000    23 ;++
                                     0000    24 ; FACILITY:	SYSTST (SATS SYSTEM SERVICE TESTS)
                                     0000    25 ;
                                     0000    26 ; ABSTRACT:
                                     0000    27 ;
                                     0000    28 ;		THIS MODULE CONTAINS SUBROUTINES WHICH, WHEN LINKED
                                     0000    29 ; WITH SUCCOMMON.OBJ, FORM TEST MODULE SATSSS50 TO TEST SUCCESSFUL
                                     0000    30 ; OPERATION OF THE $ASCEFC SYSTEM SERVICE. THE SERVICE IS INVOKED
                                     0000    31 ; UNDER VARIOUS INPUT CONDITIONS WITH VARYING INPUT PARAMETERS. ONLY
                                     0000    32 ; SUCCESSFUL STATUS CODES ARE EXPECTED IN THIS TEST MODULE.  CORRECT 
                                     0000    33 ; OPERATION OF THE SERVICE FOR EACH OF ITS ISSUANCES IS VERIFIED BY
                                     0000    34 ; CHECKING FOR AN SS$_NORMAL STATUS CODE, EXPECTED RETURN ARGUMENTS
                                     0000    35 ; AND EXPECTED FUNCTIONALITY PERFORMED.
                                     0000    36 ;
                                     0000    37 ; ENVIRONMENT:	USER MODE IMAGE; NEEDS CMKRNL PRIVILEGE,
                                     0000    38 ;		DYNAMICALLY ACQUIRES OTHER PRIVILEGES, AS NEEDED.
                                     0000    39 ;
                                     0000    40 ; AUTHOR: THOMAS L. CAFARELLA,		CREATION DATE: DEC, 1977
                                     0000    41 ;
                                     0000    42 ; MODIFIED BY:
                                     0000    43 ;
                                     0000    44 ;	, : VERSION
                                     0000    45 ; 01	- 
                                     0000    46 ;--
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page   2
1.0             DECLARATIONS                                                                                                     (1)

                                     0000    48 	.SBTTL	DECLARATIONS
                                     0000    49 ;
                                     0000    50 ; INCLUDE FILES:
                                     0000    51 ;
                                     0000    52 	$PRVDEF				; PRIVILEGE BIT DEFINITIONS
                                     0000    53 	$PHDDEF				; PROCESS HEADER OFFSETS
                                     0000    54 	$PQLDEF				; PROCESS QUOTA CODES
                                     0000    55 	$DIBDEF				; DEVICE INFO BLOCK OFFSETS
                                     0000    56 ;
                                     0000    57 ; MACROS:
                                     0000    58 ;
                                     0000    59 ;
                                     0000    60 ; EQUATED SYMBOLS:
                                     0000    61 ;
                                     0000    62 ;
                                     0000    63 ; BIT NUMBERS FOR FLAGS CONTAINED IN "FLAGS" BYTE:
                                     0000    64 ;
                           00000000  0000    65 FLG_V_CLAOTHEV	= 0			; ASCEFC ISSUED FOR CLUS A, OTHER E.F. GROUP
                           00000001  0000    66 FLG_V_CLAPROC	= 1			; ASCEFC ISSUED FOR CLUSTER A, ...
                                     0000    67 					; ... EVENT FLAG GROUP 2, CREATED PROC
                           00000002  0000    68 FLG_V_MKFORMED	= 2			; CLUSTER A MASK HAS BEEN ... 
                                     0000    69 					; ... FORMED FOR THIS TEST CASE
                                     0000    70 ;
                                     0000    71 ; OWN STORAGE:
                                     0000    72 ;
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page   3
1.0             DECLARATIONS                                                                                                     (1)

                                 00000000    74 	.PSECT	RODATA,RD,NOWRT,NOEXE,LONG
                                     0000    75 TEST_MOD_NAME::	STRING	C,<SATSSS50>	; TEST MODULE NAME
                                     0009    76 TEST_MOD_NAME_D: STRING	I,<SATSSS50>	; TEST MODULE NAME DESCRIPTOR
                                     0019    77 MSG1_INP_CTL:	STRING	I,<  SSASC!4ZW: CONDITIONS:>
                                     0039    78 					; FAO CTL STRING FOR MSG1 IN SUCCOMMON.MAR
                                     0039    79 MSG3_ERR_CTL::	STRING	I,< *SSASC!4ZW: !AS> 
                                     0051    80 					; FAO CTL STRING FOR MSG3 IN SUCCOMMON.MAR
                                     0051    81 CREPRN:		STRING	I,<SATSSS50_CRE> ; CREATED PROCESS NAME
                                     0065    82 CLUS_NAME_A:	STRING	I,<SATSSS50_CLA> ; CLUSTER A NAME
                                     0079    83 CLUS_NAME_B:	STRING	I,<SATSSS50_CLB> ; CLUSTER B NAME
                                     008D    84 IMAGNAM:	STRING	I,<SYSTST$RES:SATSUT04.EXE> ; IMAGE NAME FOR CREATED PROC
                                     00AC    85 QUOTALIST:	$QUOTA	CPULM,0		; INFINITE CPU
                                     00B1    86 		$QUOTA	BYTLM,512	; BYTE LIMIT FOR BUFFERED I/O
                                     00B6    87 		$QUOTA	FILLM,2		; OPEN FILE COUNT LIMIT
                                     00BB    88 		$QUOTA	PGFLQUOTA,10	; PAGING FILE QUOTA
                                     00C0    89 		$QUOTA	PRCLM,2		; SUBPROCESS QUOTA
                                     00C5    90 		$QUOTA	TQELM,3		; TIMER QUEUE ENTRY QUOTA
                                     00CA    91 		$QUOTA	LISTEND		; DEFINES END OF LIST
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page   4
1.0             DECLARATIONS                                                                                                     (1)

                                 00000000    93 	.PSECT	RWDATA,RD,WRT,NOEXE,LONG
                           00000008  0000    94 PRIVMASK:	.BLKQ	1		; ADDR OF PRIVILEGE MASK (IN PHD)
                           0000000C  0008    95 MBXCHAN:	.BLKL	1		; CHAN NO. FOR MAILBOX FOR CREATED PROCESS
                                     000C    96 MBXCHANINFO:	STRING	O,75		; CHANNEL INFO RETURNED BY GETCHN
                           00000063  005F    97 MBXUNIT:	.BLKL	1		; SAVE AREA FOR MAILBOX UNIT NUMBER
                                     0063    98 MBXBUFF:	STRING	O,120		; MAILBOX BUFFER FOR CREATED PROCESS
                           000000E4  00E3    99 ASCTOT:		.BLKB	1		; NO. OF ASCEFC'S (REF COUNT) FOR CLUSTER A
                           000000E8  00E4   100 OTHER_EFN:	.BLKL	1		; SAVE AREA FOR "OTHER THAN SUBJECT" EFN
                           000000EC  00E8   101 CLUS_MASK:	.BLKL	1		; CLUSTER MASK	; USED TO SET CLUSTER A
                           000000F0  00EC   102 CLUS_STATE:	.BLKL	1		; STATE OF CLUSTER A
                                 00  00F0   103 FLAGS:		.BYTE	0		; GEN. PURP. FLAGS; BIT DEFINITIONS ABOVE
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page   5
1.0             CONDITION TABLES                                                                                                 (1)

                                     00F1   105 	.SBTTL	CONDITION TABLES
                                     00F1   106 ;
                                     00F1   107 ;	***** CONDITION TABLES FOR ASCEFC SYSTEM SERVICE *****
                                     00F1   108 ;
                                     00F1   109 	COND	1,LONG,<PERM>,-
                                     00F1   110 		  <PERMANENT>,-
                                     00F1   111 		  <TEMPORARY>,-
                                     00F1   112  
                           00000001  0113   113 		    .LONG	1	; PERMANENT CLUSTER
                           00000000  0117   114 		    .LONG	0	; TEMPORARY CLUSTER
                                     011B   115 ;
                                     011B   116 	COND	2,NOTARG,<PRE-EXISTING ASSOCIATION>,-
                                     011B   117 		  <EVENT FLAG GROUP NOT ALREADY ASSOCIATED>,-
                                     011B   118 		  <EVENT FLAG GROUP ALREADY ASSOCIATED TO SUBJECT CLUSTER>,-
                                     011B   119 		  <EVENT FLAG GROUP ALREADY ASSOCIATED TO NON-SUBJECT CLUSTER>,-
                                     011B   120  
                                     01DB   121 	COND	3,NOTARG,<REFERENCE COUNT FOR SUBJECT CLUSTER>,-
                                     01DB   122 		  <ZERO>,-
                                     01DB   123 		  <ONE>,-
                                     01DB   124 		  <GREATER THAN ONE (TWO)>,-
                                     01DB   125  
                           02 01 00  022C   126 		    .BYTE	0,1,2
                                     022F   127 ;
                                     022F   128 	COND	4,LONG,<EFN>,-
                                     022F   129 		  <EVENT FLAGS 64-95 (EV FLAG GROUP 2)>,-
                                     022F   130 		  <EVENT FLAGS 96-127 (EV FLAG GROUP 3)>,-
                                     022F   131  
                           00000040  0285   132 		    .LONG	64	; EVENT FLAG GROUP 2
                           00000060  0289   133 		    .LONG	96	; EVENT FLAG GROUP 3
                                     028D   134 ;
                                     028D   135 	COND	5,NULL
                                     028E   136  
                                 00000000   137 	.PSECT	SATSSS50,RD,WRT,EXE
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page   6
1.0             TM_SETUP, TM_CLEANUP                                                                                             (1)

                                     0000   139 	.SBTTL	TM_SETUP, TM_CLEANUP
                                     0000   140 ;++
                                     0000   141 ; FUNCTIONAL DESCRIPTION:
                                     0000   142 ;
                                     0000   143 ;		TM_SETUP AND TM_CLEANUP ARE CALLED TO PERFORM
                                     0000   144 ; REQUIRED HOUSEKEEPING AT THE BEGINNING AND END, RESPECTIVELY, OF
                                     0000   145 ; TEST MODULE EXECUTION.
                                     0000   146 ;
                                     0000   147 ; CALLING SEQUENCE:
                                     0000   148 ;
                                     0000   149 ;	BSBW TM_SETUP   BSBW TM_CLEANUP
                                     0000   150 ;
                                     0000   151 ; INPUT PARAMETERS:
                                     0000   152 ;
                                     0000   153 ;	NONE
                                     0000   154 ;
                                     0000   155 ; IMPLICIT INPUTS:
                                     0000   156 ;
                                     0000   157 ;	NONE
                                     0000   158 ;
                                     0000   159 ; OUTPUT PARAMETERS:
                                     0000   160 ;
                                     0000   161 ;	NONE
                                     0000   162 ;
                                     0000   163 ; IMPLICIT OUTPUTS:
                                     0000   164 ;
                                     0000   165 ;	TM_SETUP:  COND TABLE INDEX REGISTERS (R2,3,4,5,6) CLEARED;
                                     0000   166 ;		   ALL PRIVILEGES ACQUIRED.
                                     0000   167 ;
                                     0000   168 ; COMPLETION CODES:
                                     0000   169 ;
                                     0000   170 ;	EFLAG SET TO NON-ZERO IF ERROR ENCOUNTERED.
                                     0000   171 ;
                                     0000   172 ; SIDE EFFECTS:
                                     0000   173 ;
                                     0000   174 ;	SS_CHECK AND ERR_EXIT MACROS CAUSE PREMATURE EXIT 
                                     0000   175 ;	(VIA RSB) IF ERROR ENCOUNTERED.
                                     0000   176 ;
                                     0000   177 ;--
                                     0000   178 
                                     0000   179 
                                     0000   180 
                                     0000   181 TM_SETUP::
                          52     D4  0000   182 	CLRL	R2			; INITIALIZE
                          53     D4  0002   183 	CLRL	R3			; .. CONDITION
                          54     D4  0004   184 	CLRL	R4			; .... TABLE
                          55     D4  0006   185 	CLRL	R5			; ...... INDEX
                          56     D4  0008   186 	CLRL	R6			; ........ REGISTERS
                          FFF3'  30  000A   187 	BSBW	MOD_MSG_PRINT		; PRINT TEST MODULE BEGIN MSG
   00000000'EF   00000000'EF     DE  000D   188 	MOVAL	TEST_MOD_SUCC,TMD_ADDR	; ASSUME END MSG WILL SHOW SUCCESS
            00   00000000'8F     F0  0018   189 	INSV	#SUCCESS,#0,#3,MOD_MSG_CODE ; ADJUST STATUS CODE FOR SUCCESS
   00000000'EF            03         001F       
                                     0025   190 	MODE	TO,5$,KRNL		; KERNEL MODE TO ACCESS PHD
            59   00000000'9F     D0  0048   191 	MOVL	@#CTL$GL_PHD,R9		; GET PROCESS HEADER ADDRESS
   00000000'EF            69     DE  004F   192 	MOVAL	PHD$Q_PRIVMSK(R9),PRIVMASK ; GET PRIV MASK ADDRESS
                                     0056   193 	MODE	FROM,5$	; BACK TO USER MODE
                                     0057   194 	PRIV	ADD,ALL			; GET ALL PRIVILEGES
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page   7
1.0             TM_SETUP, TM_CLEANUP                                                                                             (1)

                                     0080   195 	$SETPRN_S TEST_MOD_NAME_D 	; SET PROCESS NAME
                                     008D   196 	SS_CHECK  NORMAL		; CHECK STATUS CODE RETURNED FROM SETPRN
                                     00BB   197 	$CREMBX_S CHAN=MBXCHAN, LOGNAM=CREPRN, - ; GET MAILBOX FOR PROCESS
                                     00BB   198 		  MAXMSG=#120, PROMSK=#0, BUFQUO=#240
                                     00DE   199 	SS_CHECK NORMAL			; CHECK NORMAL COMPLETION
                                     010C   200 	$GETCHN_S CHAN=MBXCHAN, -
                                     010C   201 		  PRIBUF=MBXCHANINFO	; GET CHAN INFO (UNIT NUMBER)
                                     0126   202 	SS_CHECK NORMAL			; CHECK NORMAL COMPLETION
   0000005F'EF   00000020'EF     3C  0154   203 	MOVZWL	MBXCHANINFO+8+DIB$W_UNIT,MBXUNIT ; SAVE MAILBOX UNIT NUMBER
                                 05  015F   204 	RSB				; RETURN TO MAIN ROUTINE
                                     0160   205 TM_CLEANUP::
                                     0160   206 	$DELMBX_S  MBXCHAN		; DELETE TERMINATION MAILBOX
                          FE8F'  30  016E   207 	BSBW	MOD_MSG_PRINT		; PRINT TEST MODULE END MSG
                                 05  0171   208 	RSB				; RETURN TO MAIN ROUTINE
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page   8
1.0             CONDITION SUBROUTINES - SETUP AND CLEANUP                                                                        (1)

                                     0172   210 	.SBTTL	CONDITION SUBROUTINES - SETUP AND CLEANUP 
                                     0172   211 ;++
                                     0172   212 ; FUNCTIONAL DESCRIPTION:
                                     0172   213 ;
                                     0172   214 ;		CONDX AND CONDX_CLEANUP ARE SUBROUTINES WHICH ARE EXECUTED
                                     0172   215 ; BEFORE AND AFTER THE VERIFY SUBROUTINE, RESPECTIVELY, WHENEVER A NEW
                                     0172   216 ; CONDITION X VALUE IS SELECTED (SEE FUNCTIONAL DESCRIPTION OF SUCCOMMON
                                     0172   217 ; ROUTINE IN SUCCOMMON.MAR). ANY SETUP FUNCTION PARTICULAR TO THE 
                                     0172   218 ; CONDITION X TABLE IS INCLUDED IN THE CONDX SUBROUTINE AND CLEANED
                                     0172   219 ; UP, IF NECESSARY, IN THE CONDX_CLEANUP SUBROUTINE. THIS INCLUDES,
                                     0172   220 ; ESPECIALLY, CODE TO DETECT CONFLICTS AMONG CURRENT ENTRIES IN TWO
                                     0172   221 ; OR MORE CONDITION TABLES. IF A CONFLICT IS DETECTED, A NON-ZERO
                                     0172   222 ; VALUE IS STORED INTO CONFLICT, WHICH CAUSES THE CALLING ROUTINE
                                     0172   223 ; (SUCCOMMON) TO SKIP THE CURRENT ENTRY IN THE CONDITION X TABLE.
                                     0172   224 ;
                                     0172   225 ; CALLING SEQUENCE:
                                     0172   226 ;
                                     0172   227 ;	BSBW CONDX   BSBW CONDX_CLEANUP
                                     0172   228 ;	  WHERE X = 1,2,3,4,5
                                     0172   229 ;
                                     0172   230 ; INPUT PARAMETERS:
                                     0172   231 ;
                                     0172   232 ;	CONFLICT = 0
                                     0172   233 ;
                                     0172   234 ; IMPLICIT INPUTS:
                                     0172   235 ;
                                     0172   236 ;	R2,3,4,5,6 CONTAIN CURRENT CONDITION TABLE INDEX VALUES
                                     0172   237 ;	  FOR COND TABLES 1,2,3,4,5, RESPECTIVELY.
                                     0172   238 ;
                                     0172   239 ; OUTPUT PARAMETERS:
                                     0172   240 ;
                                     0172   241 ;	CONFLICT SET TO NON-ZERO IF COND TABLE CONFLICT DETECTED.
                                     0172   242 ;
                                     0172   243 ; IMPLICIT OUTPUTS:
                                     0172   244 ;
                                     0172   245 ;	R2,3,4,5,6 PRESERVED
                                     0172   246 ;
                                     0172   247 ; COMPLETION CODES:
                                     0172   248 ;
                                     0172   249 ;	NONE
                                     0172   250 ;
                                     0172   251 ; SIDE EFFECTS:
                                     0172   252 ;
                                     0172   253 ;	NONE
                                     0172   254 ;
                                     0172   255 ;--
                                     0172   256 
                                     0172   257 
                                     0172   258 
                                     0172   259 COND1::
                                 05  0172   260 	RSB				; RETURN TO MAIN ROUTINE
                                     0173   261 COND1_CLEANUP::
                                 05  0173   262 	RSB				; RETURN TO MAIN ROUTINE
                                     0174   263 COND2::
                                 05  0174   264 	RSB				; RETURN TO MAIN ROUTINE
                                     0175   265 COND2_CLEANUP::
                                 05  0175   266 	RSB				; RETURN TO MAIN ROUTINE
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page   9
1.0             CONDITION SUBROUTINES - SETUP AND CLEANUP                                                                        (1)

                                     0176   267 COND3::
                 0000022C'EF44   95  0176   268 	TSTB	COND3_E[R4]		; IS REFERENCE COUNT ZERO ?
                          10     12  017D   269 	BNEQU	COND3X			; NO -- ALL IS OK, JUST EXIT
            01            53     91  017F   270 	CMPB	R3,#1			; YES -- DOES COND 2 SPECIFY SAME CLUSTER ?
                          0B     12  0182   271 	BNEQU	COND3X			; NO -- ALL IS OK, JUST EXIT
   00000000'EF   00000000'EF     90  0184   272 	MOVB	ONES,CONFLICT		; YES -- INDICATE CONFLICT
                                     018F   273 COND3X:
                                 05  018F   274 	RSB				; RETURN TO MAIN ROUTINE
                                     0190   275 COND3_CLEANUP::
                                 05  0190   276 	RSB				; RETURN TO MAIN ROUTINE
                                     0191   277 COND4::
                                 05  0191   278 	RSB				; RETURN TO MAIN ROUTINE
                                     0192   279 COND4_CLEANUP::
                                 05  0192   280 	RSB				; RETURN TO MAIN ROUTINE
                                     0193   281 COND5::
                                 05  0193   282 	RSB				; RETURN TO MAIN ROUTINE
                                     0194   283 COND5_CLEANUP::
                                 05  0194   284 	RSB				; RETURN TO MAIN ROUTINE
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page  10
1.0             FORM_CONDS                                                                                                       (1)

                                     0195   286 	.SBTTL	FORM_CONDS
                                     0195   287 ;++
                                     0195   288 ; FUNCTIONAL DESCRIPTION:
                                     0195   289 ;
                                     0195   290 ; 		FORM_CONDS FORMATS AND PRINTS INFORMATION ABOUT
                                     0195   291 ;  THE CURRENT ELEMENT IN EACH OF THE CONDITION TABLES.
                                     0195   292 ;
                                     0195   293 ; CALLING SEQUENCE:
                                     0195   294 ;
                                     0195   295 ;	BSBW FORM_CONDS
                                     0195   296 ;
                                     0195   297 ; INPUT PARAMETERS:
                                     0195   298 ;
                                     0195   299 ;	NONE
                                     0195   300 ;
                                     0195   301 ; IMPLICIT INPUTS:
                                     0195   302 ;
                                     0195   303 ;	R2,3,4,5,6 CONTAIN CURRENT CONDITION TABLE INDEX VALUES
                                     0195   304 ;	  FOR COND TABLES 1,2,3,4,5, RESPECTIVELY.
                                     0195   305 ;	FOR X = 1,2,3,4,5 :
                                     0195   306 ;		CONDX_T - TITLE TEXT FOR CONDX TABLE
                                     0195   307 ;		CONDX_TAB - ELEMENT TEXT FOR CONDX TABLE
                                     0195   308 ;		CONDX_C - CONTEXT OF THE CONDX TABLE
                                     0195   309 ;		CONDX_E - DATA ELEMENTS OF THE CONDX TABLE
                                     0195   310 ;
                                     0195   311 ; OUTPUT PARAMETERS:
                                     0195   312 ;
                                     0195   313 ;	NONE
                                     0195   314 ;
                                     0195   315 ; IMPLICIT OUTPUTS:
                                     0195   316 ;
                                     0195   317 ;	NONE
                                     0195   318 ;
                                     0195   319 ; COMPLETION CODES:
                                     0195   320 ;
                                     0195   321 ;	NONE
                                     0195   322 ;
                                     0195   323 ; SIDE EFFECTS:
                                     0195   324 ;
                                     0195   325 ;	NONE
                                     0195   326 ;
                                     0195   327 ;--
                                     0195   328 
                                     0195   329 
                                     0195   330 
                                     0195   331 FORM_CONDS::
                                     0195   332 	$FAO_S	MSG1_INP_CTL,FAO_LEN,FAO_DESC,TESTNUM
                                     01B4   333 					; FORMAT CONDITIONS HEADER MSG
                          FE49'  30  01B4   334 	BSBW	OUTPUT_MSG		; ... AND PRINT IT
            14            04     91  01B7   335 	CMPB	#COND1_C,#NULL		; IS CONDITION 1 NULL ?
                          03     12  01BA   336 	BNEQU	10$			; NO -- CONTINUE
                          00D7   31  01BC   337 	BRW	FORM_CONDSX		; YES -- SUBROUTINE IS FINISHED
                                     01BF   338 10$:
   00000000'EF   000000F1'EF     DE  01BF   339 	MOVAL	COND1_T,MSG_A		; SAVE ADDRESS OF CONDITION 1 TITLE FOR FAO
   00000000'EF   000000F7'EF42   D0  01CA   340 	MOVL	COND1_TAB[R2],MSG_B 	; SAVE ADDR OF COND 1 CURR TEXT ELT FOR FAO
   00000000'EF            04     90  01D6   341 	MOVB	#COND1_C,MSG_CTXT 	; SAVE CONDITION 1 CONTEXT FOR FAO
                                     01DD   342 	MOV_VAL	COND1_C,COND1_E[R2],MSG_DATA1 ; GIVE COND 1 DATA VALUE TO FAO
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page  11
1.0             FORM_CONDS                                                                                                       (1)

                          FE14'  30  01E9   343 	BSBW	WRITE_MSG2		; FORMAT AND WRITE CONDITION 1 MSG
            14            00     91  01EC   344 	CMPB	#COND2_C,#NULL		; IS CONDITION 2 NULL ?
                          03     12  01EF   345 	BNEQU	20$			; NO -- CONTINUE
                          00A2   31  01F1   346 	BRW	FORM_CONDSX		; YES -- SUBROUTINE IS FINISHED
                                     01F4   347 20$:
   00000000'EF   0000011B'EF     DE  01F4   348 	MOVAL	COND2_T,MSG_A		; SAVE ADDRESS OF CONDITION 2 TITLE FOR FAO
   00000000'EF   00000135'EF43   D0  01FF   349 	MOVL	COND2_TAB[R3],MSG_B 	; SAVE ADDR OF COND 2 CURR TEXT ELT FOR FAO
   00000000'EF            00     90  020B   350 	MOVB	#COND2_C,MSG_CTXT 	; SAVE CONDITION 2 CONTEXT FOR FAO
                                     0212   351 	MOV_VAL	COND2_C,COND2_E[R3],MSG_DATA1 ; GIVE COND 2 DATA VALUE TO FAO
                          FDEB'  30  0212   352 	BSBW	WRITE_MSG2		; FORMAT AND WRITE CONDITION 2 MSG
            14            00     91  0215   353 	CMPB	#COND3_C,#NULL		; IS CONDITION 3 NULL ?
                          03     12  0218   354 	BNEQU	30$			; NO -- CONTINUE
                          0079   31  021A   355 	BRW	FORM_CONDSX		; YES -- SUBROUTINE IS FINISHED
                                     021D   356 30$:
   00000000'EF   000001DB'EF     DE  021D   357 	MOVAL	COND3_T,MSG_A		; SAVE ADDRESS OF CONDITION 3 TITLE FOR FAO
   00000000'EF   00000200'EF44   D0  0228   358 	MOVL	COND3_TAB[R4],MSG_B 	; SAVE ADDR OF COND 3 CURR TEXT ELT FOR FAO
   00000000'EF            00     90  0234   359 	MOVB	#COND3_C,MSG_CTXT 	; SAVE CONDITION 3 CONTEXT FOR FAO
                                     023B   360 	MOV_VAL	COND3_C,COND3_E[R4],MSG_DATA1 ; GIVE COND 3 DATA VALUE TO FAO
                          FDC2'  30  023B   361 	BSBW	WRITE_MSG2		; FORMAT AND WRITE CONDITION 3 MSG
            14            04     91  023E   362 	CMPB	#COND4_C,#NULL		; IS CONDITION 4 NULL ?
                          53     13  0241   363 	BEQLU	FORM_CONDSX		; YES -- SUBROUTINE IS FINISHED
   00000000'EF   0000022F'EF     DE  0243   364 	MOVAL	COND4_T,MSG_A		; SAVE ADDRESS OF CONDITION 4 TITLE FOR FAO
   00000000'EF   00000234'EF45   D0  024E   365 	MOVL	COND4_TAB[R5],MSG_B 	; SAVE ADDR OF COND 4 CURR TEXT ELT FOR FAO
   00000000'EF            04     90  025A   366 	MOVB	#COND4_C,MSG_CTXT 	; SAVE CONDITION 4 CONTEXT FOR FAO
                                     0261   367 	MOV_VAL	COND4_C,COND4_E[R5],MSG_DATA1 ; GIVE COND 4 DATA VALUE TO FAO
                          FD90'  30  026D   368 	BSBW	WRITE_MSG2		; FORMAT AND WRITE CONDITION 4 MSG
            14            14     91  0270   369 	CMPB	#COND5_C,#NULL		; IS CONDITION 5 NULL ?
                          21     13  0273   370 	BEQLU	FORM_CONDSX		; YES -- SUBROUTINE IS FINISHED
   00000000'EF   0000028D'EF     DE  0275   371 	MOVAL	COND5_T,MSG_A		; SAVE ADDRESS OF CONDITION 5 TITLE FOR FAO
   00000000'EF   0000028D'EF46   D0  0280   372 	MOVL	COND5_TAB[R6],MSG_B 	; SAVE ADDR OF COND 5 CURR TEXT ELT FOR FAO
   00000000'EF            14     90  028C   373 	MOVB	#COND5_C,MSG_CTXT 	; SAVE CONDITION 5 CONTEXT FOR FAO
                                     0293   374 	MOV_VAL	COND5_C,COND5_E[R6],MSG_DATA1 ; GIVE COND 5 DATA VALUE TO FAO
                          FD6A'  30  0293   375 	BSBW	WRITE_MSG2		; FORMAT AND WRITE CONDITION 5 MSG
                                     0296   376 FORM_CONDSX:
                                 05  0296   377 	RSB				; RETURN TO CALLER
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page  12
1.0             VERIFY                                                                                                           (1)

                                     0297   379 	.SBTTL	VERIFY
                                     0297   380 ;++
                                     0297   381 ; FUNCTIONAL DESCRIPTION:
                                     0297   382 ;
                                     0297   383 ;		VERIFY IS CALLED ONCE FOR EACH COMBINATION OF CONDITION
                                     0297   384 ; TABLE VALUES (AS DETERMINED BY THE INDEX REGISTERS R2,3,4,5,6 FOR
                                     0297   385 ; COND TABLES 1,2,3,4,5, RESPECTIVELY). VERIFY ESTABLISHES THE CONDITIONS
                                     0297   386 ; SPECIFIED BY THE COND TABLES AND ISSUES THE SUBJECT SYSTEM SERVICE
                                     0297   387 ; ($ASCEFC). THEN, THE SUCCESSFUL OPERATION OF THE SERVICE IS VERIFIED
                                     0297   388 ; BY EXAMINING THE STATUS CODE RETURNED, THE VALUES FOR RETURN ARGUMENTS
                                     0297   389 ; AND THE FUNCTIONALITY PERFORMED. THE EXAMINATIONS TAKE THE FORM OF 
                                     0297   390 ; COMPARISONS AGAINST EXPECTED VALUES. ANY FAILING COMPARISON CAUSES AN
                                     0297   391 ; ERR_EXIT MACRO TO BE EXECUTED (EITHER DIRECTLY, OR INDIRECTLY,
                                     0297   392 ; THROUGH THE SS_CHECK MACRO); ERR_EXIT SETS EFLAG TO NON-ZERO,
                                     0297   393 ; PRINTS ERROR MESSAGES AND CAUSES AN IMMEDIATE RSB TO CALLER.
                                     0297   394 ; WHEN ERR_EXIT IS EXECUTED, FURTHER CALLS TO VERIFY ARE SUPPRESSED,
                                     0297   395 ; AND, AFTER EXECUTING CLEANUP SUBROUTINES, THE IMAGE EXITS.
                                     0297   396 ;
                                     0297   397 ; CALLING SEQUENCE:
                                     0297   398 ;
                                     0297   399 ;	BSBW VERIFY
                                     0297   400 ;
                                     0297   401 ; INPUT PARAMETERS:
                                     0297   402 ;
                                     0297   403 ;	NONE
                                     0297   404 ;
                                     0297   405 ; IMPLICIT INPUTS:
                                     0297   406 ;
                                     0297   407 ;	R2,3,4,5,6 CONTAIN CURRENT CONDITION TABLE INDEX VALUES
                                     0297   408 ;	  FOR COND TABLES 1,2,3,4,5, RESPECTIVELY.
                                     0297   409 ;	FOR X = 1,2,3,4,5 :
                                     0297   410 ;		CONDX_E - ADDRESS OF TABLE OF DATA VALUES FOR CONDX
                                     0297   411 ;		  TABLE. IF THE CONTEXT OF TABLE X IS A SYSTEM SERVICE
                                     0297   412 ;		  ARGUMENT, THE ARGUMENT NAME MAY BE USED AS A SYNONYM
                                     0297   413 ;		  FOR CONDX_E.
                                     0297   414 ;
                                     0297   415 ; OUTPUT PARAMETERS:
                                     0297   416 ;
                                     0297   417 ;	NONE
                                     0297   418 ;
                                     0297   419 ; IMPLICIT OUTPUTS:
                                     0297   420 ;
                                     0297   421 ;	VERIFY HAS NO OUTPUT. SINCE ITS PURPOSE IS TO TEST FOR ERRORS,
                                     0297   422 ;	IT MERELY RETURNS TO CALLER NORMALLY AFTER THE TESTS, PROVIDING
                                     0297   423 ;	ALL WERE SUCCESSFUL; IF AN ERROR IS DISCOVERED, RETURN IS VIA
                                     0297   424 ;	AN ERR_EXIT OR SS_CHECK MACRO, BOTH OF WHICH DOCUMENT DETECTED
                                     0297   425 ;	ERRORS.
                                     0297   426 ;
                                     0297   427 ; COMPLETION CODES:
                                     0297   428 ;
                                     0297   429 ;	EFLAG SET TO NON-ZERO IF ERROR ENCOUNTERED.
                                     0297   430 ;
                                     0297   431 ; SIDE EFFECTS:
                                     0297   432 ;
                                     0297   433 ;	SS_CHECK AND ERR_EXIT MACROS CAUSE PREMATURE EXIT 
                                     0297   434 ;	(VIA RSB) IF ERROR ENCOUNTERED.
                                     0297   435 ;
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page  13
1.0             VERIFY                                                                                                           (1)

                                     0297   436 ;--
                                     0297   437 
                                     0297   438 
                                     0297   439 
                                     0297   440 VERIFY::
                 00000000'EF     95  0297   441 	TSTB	CFLAG			; SHOULD CONDITIONS BE PRINTED ?
                          03     13  029D   442 	BEQL	5$			; NO -- CONTINUE
                          FEF3   30  029F   443 	BSBW	FORM_CONDS		; YES -- FMT & PRINT ALL CONDS FOR THIS T.C.
                                     02A2   444 5$:
                 000000F0'EF     94  02A2   445 	CLRB	FLAGS			; RE-INIT ALL FLAGS FOR NEXT TEST CASE
                 000000E3'EF     94  02A8   446 	CLRB	ASCTOT			; CLEAR REFERENCE CNT FOR (SUBJECT) CLUST A
                          53     D5  02AE   447 	TSTL	R3			; EV FLAG GROUP HAVE PRIOR ASSOCIATION ?
                          7C     13  02B0   448 	BEQL	11$			; NO -- CONTINUE
            53            01     D1  02B2   449 	CMPL	#1,R3			; YES -- PRIOR ASSOCIATION WITH CLUSTER A ?
                          0F     12  02B5   450 	BNEQ	7$			; NO -- MUST BE CLUSTER B
                 000000E3'EF     96  02B7   451 	INCB	ASCTOT			; YES -- INCR REF COUNT FOR CLUSTER A
            57   00000065'EF     DE  02BD   452 	MOVAL	CLUS_NAME_A,R7		; ... AND SET UP CLUSTER NAME FOR ASCEFC
                          07     11  02C4   453 	BRB	9$			; GO ISSUE PRELIMINARY SERVICE
                                     02C6   454 7$:
            57   00000079'EF     DE  02C6   455 	MOVAL	CLUS_NAME_B,R7		; SET UP CLUSTER NAME FOR ASCEFC
                                     02CD   456 9$:
            5A   00000285'EF45   D0  02CD   457 	MOVL	EFN[R5],R10		; EFN MUST BE IN R10 FOR LATER CALL
                                     02D5   458 	$ASCEFC_S EFN=R10, NAME=(R7), PERM=PERM[R2]
                                     02E9   459 	SS_CHECK NORMAL			; CHECK SERVICE COMPLETION
            57   00000065'8F     D1  0317   460 	CMPL	#CLUS_NAME_A,R7		; DID WE ASSOCIATE CLUSTER A ?
                          0E     12  031E   461 	BNEQU	11$			; NO -- SKIP BUILDING OF CLUSTER A
                          0678   30  0320   462 	BSBW	BUILD_CLUST		; BUILD CLUSTER A
                 00000000'EF     95  0323   463 	TSTB	EFLAG			; IS AN ERROR BEING PROCESSED ?
                          03     13  0329   464 	BEQL	11$			; NO -- CONTINUE
                          0623   31  032B   465 	BRW	VERIFYX			; YES -- RETURN IMMEDIATELY
                                     032E   466 11$:
   0000022C'EF44 000000E3'EF     83  032E   467 	SUBB3	ASCTOT,COND3_E[R4],R7 	; CALC. NO. OF ASCEFC'S TO BE ISSUED
                          57         033A       
                          57     95  033B   468 	TSTB	R7			; ANY ASCEFC'S TO ISSUE ?
                          03     12  033D   469 	BNEQU	14$			; YES -- CONTINUE
                          00E5   31  033F   470 	BRW	25$			; NO -- GO ISSUE SUBJECT ASCEFC
                                     0342   471 14$:
                          58     D4  0342   472 	CLRL	R8			; ASSUME SECOND COND 4 ELEMENT
                          55     D5  0344   473 	TSTL	R5			; FIRST COND 4 ELEMENT ?
                          02     12  0346   474 	BNEQU	16$			; NO -- IT'S SECOND COND 4 ELEMENT
                          58     D6  0348   475 	INCL	R8			; YES -- USE R8 AS INDEX TO 2ND ELEMENT
                                     034A   476 16$:
            5A   00000285'EF48   D0  034A   477 	MOVL	EFN[R8],R10		; GET EFN OF "OTHER" EV FLAG GROUP
   000000E4'EF            5A     D0  0352   478 	MOVL	R10,OTHER_EFN		; SAVE EFN OF "OTHER" GROUP
   000000F0'EF            00     E2  0359   479 	BBSS	#FLG_V_CLAOTHEV,FLAGS,.+1 ; INDICATE A LATER $DACEFC IS NEEDED
                          00         0360       
                                     0361   480 	$ASCEFC_S EFN=R10, NAME=CLUS_NAME_A, PERM=PERM[R2]
                                     0379   481 					; ASSOC. "OTHER" EV FLAG GROUP WITH CLUST A
                                     0379   482 	SS_CHECK NORMAL			; CHECK FOR NORMAL COMPLETION
                          05F1   30  03A7   483 	BSBW	BUILD_CLUST		; BUILD CLUSTER A
                 00000000'EF     95  03AA   484 	TSTB	EFLAG			; IS AN ERROR BEING PROCESSED ?
                          03     13  03B0   485 	BEQL	20$			; NO -- CONTINUE
                          059C   31  03B2   486 	BRW	VERIFYX			; YES -- RETURN IMMEDIATELY
                                     03B5   487 20$:
            57            02     91  03B5   488 	CMPB	#2,R7			; MUST WE DO ANOTHER ASCEFC ?
                          6D     12  03B8   489 	BNEQU	25$			; NO -- GO ISSUE SUBJECT ASCEFC
   000000F0'EF            01     E2  03BA   490 	BBSS	#FLG_V_CLAPROC,FLAGS,.+1 ; INDICATE A LATER $DACEFC IS NEEDED
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page  14
1.0             VERIFY                                                                                                           (1)

                          00         03C1       
                                     03C2   491 	$CREPRC_S PRCNAM=CREPRN, IMAGE=IMAGNAM, -
                                     03C2   492 		  MBXUNT=MBXUNIT, QUOTA=QUOTALIST
                                     03F2   493 					; ISSUE ASCEFC IN A CREATED PROCESS
                                     03F2   494 	SS_CHECK NORMAL			; CHECK COMPLETION OF CREPRC
                                     0420   495 	$HIBER_S			; SLEEP UNTIL CREATED PROCESS DOES $ASCEFC
                                     0427   496 25$:
                                     0427   497 ;
                                     0427   498 ; ****** SYSTEM SERVICE CALL WHICH IS THE SUBJECT OF THIS TEST CASE ******
                                     0427   499 ;
                                     0427   500 	$ASCEFC_S EFN=EFN[R5], -
                                     0427   501 		  NAME=CLUS_NAME_A, -
                                     0427   502 		  PERM=PERM[R2]
   00000000'8F            50     D1  0444   503 	CMPL	R0,#SS$_NORMAL		; CODE RECEIVED = CODE EXPECTED ?
                          61     13  044B   504 	BEQLU	30$			; YES -- CONTINUE
   00000000'EF   00000000'8F     D0  044D   505 	MOVL	#SS$_NORMAL,EXPV 	; LOAD UP EXPECTED AND ...
   00000000'EF            50     D0  0458   506 	MOVL	R0,RECV			; ... RECEIVED VALUES, THEN EXIT
                                     045F   507 	ERR_EXIT LONG,<INCORRECT STATUS CODE RETURNED FROM ASCEFC>
                                     04AE   508 30$:
                                     04AE   509 ;
                                     04AE   510 ;  ENSURE THAT SETEF'S CAN BE PROPERLY ISSUED ON CLUSTER A
                                     04AE   511 ;    BY SETTING THE TWO HI-ORDER FLAGS OF THE CLUSTER (I.E.,
                                     04AE   512 ;    94-95 OR 126-127).
                                     04AE   513 ;
            57   00000285'EF45   D0  04AE   514 	MOVL	EFN[R5],R7		; GET FIRST EVENT FLAG OF CLUSTER INTO REG
            57            1E     C0  04B6   515 	ADDL2	#30,R7			; COMPUTE 2ND-TO-HIGHEST EV FLAG NO.
                                     04B9   516 	$SETEF_S  EFN=R7		; ATTEMPT TO SET FLAG IN CLUSTER A
                                     04C2   517 	SS_CHECK WASCLR			; FLAG SHOULD HAVE BEEN CLEAR (FROM ASCEFC)
                          57     D6  04F0   518 	INCL	R7			; POINT REG 7 TO HIGHEST EV FLAG IN CLUSTER
                                     04F2   519 	$SETEF_S  EFN=R7		; SET ANOTHER FLAG FOR GOOD MEASURE
                                     04FB   520 	SS_CHECK WASCLR			; CHECK FOR PRIOR CLEAR CONDITION
                                     0529   521 ;
                                     0529   522 ;   SET UP REG 7 TO CONTAIN THE MASK OF EXPECTED EVENT FLAG SETTINGS
                                     0529   523 ;
   000000F0'EF            02     E0  0529   524 	BBS	#FLG_V_MKFORMED,FLAGS,40$ ; BRANCH IF CLUS_MASK FORMED
                          04         0530       
                          57     D4  0531   525 	CLRL	R7			; SUBJECT ASCEFC GETS NEW CLUSTER; 0 MASK
                          07     11  0533   526 	BRB	45$			; GO SET 2 MORE MASK BITS (FOR SETEF'S ABOVE)
                                     0535   527 40$:
            57   000000E8'EF     D0  0535   528 	MOVL	CLUS_MASK,R7		; USE EXISTING CLUS_MASK
                                     053C   529 45$:
            1E            03     F0  053C   530 	INSV	#^B11,#30,#2,R7		; TURN ON 2 HI-ORDER MASK BITS FOR SETEF'S
            57            02         053F       
                                     0541   531 	$READEF_S EFN=EFN[R5], STATE=CLUS_STATE
                                     0555   532 					; READ CURRENT STATE OF CLUSTER A
            2E            50     E8  0555   533 	BLBS	R0,50$			; CONTINUE IF NORMAL COMPLETION
                                     0558   534 	SS_CHECK NORMAL			; USE SS_CHECK TO TERMINATE TEST MODULE
                                     0586   535 50$:
            57   000000EC'EF     D1  0586   536 	CMPL	CLUS_STATE,R7		; IS CLUSTER A STATE = THAT EXPECTED ?
                          6B     13  058D   537 	BEQLU	55$			; YES -- CONTINUE WITH VERIFICATION
   00000000'EF            57     D0  058F   538 	MOVL	R7,EXPV			; NO -- LOAD EXPECTED AND ...
   00000000'EF   000000EC'EF     D0  0596   539 	MOVL	CLUS_STATE,RECV		; ... RECEIVED VALUES, THEN EXIT
                                     05A1   540 	ERR_EXIT LONG,<PRE-EXISTING CLUSTER STATE NOT OBTAINED AFTER ASCEFC>
                                     05FA   541 55$:
                                     05FA   542     ;
                                     05FA   543     ; TO VERIFY THE ASCEFC REFERENCE COUNT, THE FOLLOWING CODE
                                     05FA   544     ;   ISSUES A DACEFC FOR EACH ASCEFC ISSUED BY THIS TEST CASE.
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page  15
1.0             VERIFY                                                                                                           (1)

                                     05FA   545     ;
                                     05FA   546 	$DACEFC_S EFN=EFN[R5]		; DISASSOCIATE SUBJECT ASCEFC
                                     0608   547 	SS_CHECK NORMAL			; MAKE SURE IT COMPLETED OK
                                     0636   548 60$:
   000000F0'EF            01     E4  0636   549 	BBSC	#FLG_V_CLAPROC,FLAGS,62$ 
                          0A         063D       
                                     063E   550 					; HAVE CREATED PROCESS ISSUE DACEFC IF NEC.
   000000F0'EF            00     E4  063E   551 	BBSC	#FLG_V_CLAOTHEV,FLAGS,63$ ; ISSUE ANOTHER DACEFC IF NEC.
                          05         0645       
                          06     11  0646   552 	BRB	64$			; ALL FLAGS CLEAR; REF COUNT 0
                                     0648   553 62$:
                          0179   31  0648   554 	BRW	80$			; NEED A WORD'S WORTH OF BRANCH
                                     064B   555 63$:
                          020D   31  064B   556 	BRW	85$			; NEED A WORD'S WORTH OF BRANCH
                                     064E   557 64$:
                                     064E   558 ;
                                     064E   559 ;   AT THIS POINT, ASCEFC REFERENCE COUNT SHOULD BE 0.
                                     064E   560 ;   ISSUE ANOTHER ASCEFC TO CHECK PERM/TEMP SETTING OF CLUSTER A
                                     064E   561 ;
                                     064E   562 	$ASCEFC_S EFN=EFN[R5], NAME=CLUS_NAME_A ; ONE MORE ASSOCIATE
                                     0666   563 	SS_CHECK NORMAL			; CHECK IT
                                     0694   564 	$READEF_S EFN=EFN[R5], STATE=CLUS_STATE ; READ CLUSTER A
            2E            50     E8  06A8   565 	BLBS	R0,65$			; CONTINUE IF NORMAL COMPLETION
                                     06AB   566 	SS_CHECK NORMAL			; USE SS_CHECK TO TERMINATE TEST MODULE
                                     06D9   567 65$:
                 00000113'EF42   D5  06D9   568 	TSTL	PERM[R2]		; IS THIS A PERMANENT CLUSTER ?
                          02     12  06E0   569 	BNEQU	70$			; YES -- KEEP EXPECTED STATE VALUE FRM ABOVE
                          57     D4  06E2   570 	CLRL	R7			; NO -- EXPECT A ZERO CLUSTER
                                     06E4   571 70$:
            57   000000EC'EF     D1  06E4   572 	CMPL	CLUS_STATE,R7		; CLUSTER A STATE = THAT EXPECTED ?
                          5D     13  06EB   573 	BEQLU	71$			; YES -- GO FINISH UP
   00000000'EF            57     D0  06ED   574 	MOVL	R7,EXPV			; NO -- LOAD EXPECTED AND ...
   00000000'EF   000000EC'EF     D0  06F4   575 	MOVL	CLUS_STATE,RECV		; ... RECEIVED VALUES, THEN EXIT
                                     06FF   576 	ERR_EXIT LONG,<INCORRECT CLUSTER STATE AFTER DACEFC'S>
                                     074A   577 71$:
                                     074A   578 	$DLCEFC_S NAME=CLUS_NAME_A 	; CLEAR PERM INDICATOR IF PRESENT
                                     0757   579 	SS_CHECK NORMAL			; EXPECT NORMAL COMPLETION
                                     0785   580 	$DACEFC_S EFN=EFN[R5]		; ... AND DISASSOCIATE
                                     0793   581 	SS_CHECK NORMAL			; ...........
                          018D   31  07C1   582 	BRW	VERIFYX			; THIS TEST CASE IS COMPLETE
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page  16
1.0             VERIFY                                                                                                           (1)

                                     07C4   584 80$:
                                     07C4   585 	$WAKE_S PRCNAM=CREPRN		; WAKE CREATED PROCESS TO GET DACEFC ISSUED
                                     07D3   586 	SS_CHECK NORMAL			; CHECK FOR NORMAL STATUS CODE
                                     0801   587 	$QIOW_S	CHAN=MBXCHAN, FUNC=#IO$_READVBLK, -
                                     0801   588 		P1=MBXBUFF+8, P2=MBXBUFF
                                     082A   589 					; ... AND  WAIT FOR IT TO SEND MAIL
                                     082A   590 	SS_CHECK NORMAL			; CHECK FOR NORMAL STATUS CODE
                          FDDB   31  0858   591 	BRW	60$			; GO CHECK FOR MORE DACEFC'S
                                     085B   592 85$:
                                     085B   593 	$READEF_S EFN=OTHER_EFN, STATE=CLUS_STATE
                                     086E   594 					; READ & CHECK CLUSTER BEFORE DACEFC
            2E            50     E8  086E   595 	BLBS	R0,86$			; CONTINUE IF NORMAL COMPLETION
                                     0871   596 	SS_CHECK NORMAL			; USE SS_CHECK TO TERMINATE TEST MODULE
                                     089F   597 86$:
            57   000000EC'EF     D1  089F   598 	CMPL	CLUS_STATE,R7		; CLUSTER A STATE = THAT EXPECTED ?
                          6B     13  08A6   599 	BEQLU	87$			; YES -- GO DISASSOCIATE
   00000000'EF            57     D0  08A8   600 	MOVL	R7,EXPV			; NO -- LOAD EXPECTED AND ...
   00000000'EF   000000EC'EF     D0  08AF   601 	MOVL	CLUS_STATE,RECV		; ... RECEIVED VALUES, THEN EXIT
                                     08BA   602 	ERR_EXIT LONG,<PRE-EXISTING CLUSTER STATE NOT OBTAINED AFTER DACEFC>
                                     0913   603 87$:
                                     0913   604 	$DACEFC_S EFN=OTHER_EFN		; DISASSOC "OTHER" EV FLAG GROUP FROM CLUS A
                                     0920   605 	SS_CHECK NORMAL			; CHECK FOR NORMAL COMPLETION
                          FCE5   31  094E   606 	BRW	60$			; GO CHECK FOR MORE FLAGS
                                     0951   607 VERIFYX:
                                 05  0951   608 	RSB				; RETURN TO CALLER
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page  17
1.0             VFY_CLEANUP                                                                                                      (1)

                                     0952   610 	.SBTTL	VFY_CLEANUP
                                     0952   611 ;++
                                     0952   612 ; FUNCTIONAL DESCRIPTION:
                                     0952   613 ;
                                     0952   614 ;		VFY_CLEANUP EXECUTES SYSTEM SERVICES TO UNDO THE
                                     0952   615 ; EFFECT OF THOSE ISSUED IN THE VERIFY SUBROUTINE. VFY_CLEANUP MUST
                                     0952   616 ; ASSUME THAT VERIFY MAY NOT HAVE EXECUTED IN ITS ENTIRETY (IF AN
                                     0952   617 ; ERROR IS FOUND). ALSO, VFY_CLEANUP MAY ISSUE SS_CHECK OR ERR_EXIT
                                     0952   618 ; ONLY AFTER PERFORMING ALL OF ITS CLEANUP OPERATIONS; THIS IS REQUIRED
                                     0952   619 ; IN THE EVENT THAT VFY_CLEANUP IS CALLED DURING ERROR PROCESSING,
                                     0952   620 ; WHEN PERFORMING THE REQUIRED CLEANUP IS MORE IMPORTANT THAN
                                     0952   621 ; POSSIBLY DISCOVERING A SECOND ERROR.
                                     0952   622 ;
                                     0952   623 ; CALLING SEQUENCE:
                                     0952   624 ;
                                     0952   625 ;	BSBW VFY_CLEANUP
                                     0952   626 ;
                                     0952   627 ; INPUT PARAMETERS:
                                     0952   628 ;
                                     0952   629 ;	NONE
                                     0952   630 ;
                                     0952   631 ; IMPLICIT INPUTS:
                                     0952   632 ;
                                     0952   633 ;	R2,3,4,5,6 CONTAIN CURRENT CONDITION TABLE INDEX VALUES
                                     0952   634 ;	  FOR COND TABLES 1,2,3,4,5, RESPECTIVELY.
                                     0952   635 ;	FOR X = 1,2,3,4,5 :
                                     0952   636 ;		CONDX_E - ADDRESS OF TABLE OF DATA VALUES FOR CONDX
                                     0952   637 ;		  TABLE. IF THE CONTEXT OF TABLE X IS A SYSTEM SERVICE
                                     0952   638 ;		  ARGUMENT, THE ARGUMENT NAME MAY BE USED AS A SYNONYM
                                     0952   639 ;		  FOR CONDX_E.
                                     0952   640 ;
                                     0952   641 ; OUTPUT PARAMETERS:
                                     0952   642 ;
                                     0952   643 ;	NONE
                                     0952   644 ;
                                     0952   645 ; IMPLICIT OUTPUTS:
                                     0952   646 ;
                                     0952   647 ;	NONE
                                     0952   648 ;
                                     0952   649 ; COMPLETION CODES:
                                     0952   650 ;
                                     0952   651 ;	EFLAG SET TO NON-ZERO IF ERROR ENCOUNTERED.
                                     0952   652 ;
                                     0952   653 ; SIDE EFFECTS:
                                     0952   654 ;
                                     0952   655 ;	SS_CHECK AND ERR_EXIT MACROS CAUSE PREMATURE EXIT 
                                     0952   656 ;	(VIA RSB) IF ERROR ENCOUNTERED.
                                     0952   657 ;
                                     0952   658 ;--
                                     0952   659 
                                     0952   660 
                                     0952   661 
                                     0952   662 VFY_CLEANUP::
                                     0952   663 	$DLCEFC_S NAME=CLUS_NAME_A 	; CLEAR PERM INDICATORS IF PRESENT ...
                                     095F   664 	$DLCEFC_S NAME=CLUS_NAME_B 	; ... FOR BOTH CLUSTERS
                                     096C   665 	SS_CHECK NORMAL			; CHECK COMPLETION
                                 05  099A   666 	RSB				; RETURN TO CALLER
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page  18
1.0             BUILD_CLUST SUBROUTINE                                                                                           (1)

                                     099B   668 	.SBTTL	BUILD_CLUST SUBROUTINE
                                     099B   669 ;
                                     099B   670 ; **************************************************************
                                     099B   671 ; *
                                     099B   672 ; *	BUILD_CLUST SUBROUTINE
                                     099B   673 ; *
                                     099B   674 ; *	THIS SUBROUTINE CREATES A 32-BIT CLUSTER MASK BY
                                     099B   675 ; *	  CONCATENATING THE LOW-ORDER BYTES OF REGS R2-R5.
                                     099B   676 ; *	  IT THEN SETS CLUSTER A EQUAL TO THE MASK BY
                                     099B   677 ; *	  ISSUING THE PROPER COMBINATION OF 32 SETEF/CLREF'S.
                                     099B   678 ; *
                                     099B   679 ; *	INPUTS:
                                     099B   680 ; *
                                     099B   681 ; *		R2,R3,R4,R5   -  CONDITION TABLE INDEX VALUES
                                     099B   682 ; *
                                     099B   683 ; *		R10      -       ANY EFN IN CLUSTER A
                                     099B   684 ; *
                                     099B   685 ; *	OUTPUTS:
                                     099B   686 ; *
                                     099B   687 ; *		CLUS_MASK   -    LONGWORD CONTAINING THE CREATED
                                     099B   688 ; *		                   CLUSTER MASK.
                                     099B   689 ; *
                                     099B   690 ; *		CLUSTER A   -    THE SUBJECT EVENT FLAG CLUSTER,
                                     099B   691 ; *		                   UPDATED TO LOOK LIKE CLUS_MASK.
                                     099B   692 ; *
                                     099B   693 ; *		FLG_V_MKFORMED - BIT IN FLAGS BYTE IS SET, IND-
                                     099B   694 ; *		                   ICATING CLUS_MASK IS FORMED.
                                     099B   695 ; *
                                     099B   696 ; *	VOLATILE REGISTERS:
                                     099B   697 ; *
                                     099B   698 ; *		R0, R1, R8, R9
                                     099B   699 ; *
                                     099B   700 ; **************************************************************
                                     099B   701 ;
                                     099B   702 BUILD_CLUST:
   000000F0'EF            02     E3  099B   703 	BBCS	#FLG_V_MKFORMED,FLAGS,10$ ; CONT IF CLUS_MASK NOT YET FORMED
                          03         09A2       
                          00A5   31  09A3   704 	BRW	BUILD_CLUSTX		; MASK ALREADY FORMED; JUST EXIT
                                     09A6   705 10$:
   000000E8'EF            55     90  09A6   706 	MOVB	R5,CLUS_MASK		; BUILD
   000000E9'EF            54     90  09AD   707 	MOVB	R4,CLUS_MASK+1		; .. CLUSTER
   000000EA'EF            53     90  09B4   708 	MOVB	R3,CLUS_MASK+2		; ...... MASK
   000000EB'EF            52     90  09BB   709 	MOVB	R2,CLUS_MASK+3		; ..............
                                     09C2   710 ;
                                     09C2   711 ; THE FOLLOWING CODE SETS CLUSTER A EQUAL TO CLUS_MASK
                                     09C2   712 ;
            58            5A     D0  09C2   713 	MOVL	R10,R8			; ESTABLISH FIRST EFN (EVENT FLAG NO.)
                          59     D4  09C5   714 	CLRL	R9			; INIT OFFSET INTO CLUS_MASK
                                     09C7   715 20$:
   000000E8'EF            59     E0  09C7   716 	BBS	R9,CLUS_MASK,30$ 	; ISSUE $SETEF IF BIT FOR THIS FLAG IS SET
                          3A         09CE       
                                     09CF   717 	$CLREF_S EFN=R8			; ... OTHERWISE, ISSUE $CLREF
            68            50     E8  09D8   718 	BLBS	R0,40$			; IF NORMAL STATUS, PROCESS NEXT EVENT FLAG
                                     09DB   719 	SS_CHECK NORMAL			; USE SS_CHECK TO TERMINATE TEST MODULE
                                     0A09   720 30$:
                                     0A09   721 	$SETEF_S EFN=R8			; SET CURRENT EVENT FLAG
            2E            50     E8  0A12   722 	BLBS	R0,40$			; IF NORMAL STATUS, PROCESS NEXT EVENT FLAG
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page  19
1.0             BUILD_CLUST SUBROUTINE                                                                                           (1)

                                     0A15   723 	SS_CHECK NORMAL			; USE SS_CHECK TO TERMINATE TEST MODULE
                                     0A43   724 40$:
                          58     B6  0A43   725 	INCW	R8			; GET NEXT EFN
            01            1F     9D  0A45   726 	ACBB	#31,#1,R9,20$		; GO DO NEXT EVENT FLAG
            FF7C          59         0A48       
                                     0A4B   727 BUILD_CLUSTX:
                                 05  0A4B   728 	RSB				; RETURN TO CALLER
                                     0A4C   729 	.END
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page  20
SYMBOL TABLE                                                                                                                     (1)

$$$$           = 000008C4 R     05   COND5_H          0000028D RG    04   PHD$B_ASTLVL     000000CF            
$$$CHARS       = 00000034            COND5_T          0000028D R     04   PHD$B_DFPFC      00000038            
$$$CHARS1      = 00000023            COND5_TAB        0000028D R     04   PHD$B_PAGFIL     0000001F            
$$$CHARS2      = 00000024            CONFLICT         ********   X   05   PHD$B_PGTBPFC    00000039            
$$$CHARS3      = 00000000            CREPRN           00000051 R     03   PHD$C_LENGTH     00000118            
$$$CHARS4      = 00000000            CTL$GL_PHD       ********   X   05   PHD$C_PHDPAGCTX= 00000008            
$$$CHARS5      = 00000000            DESC           = 00000010  G         PHD$K_LENGTH     00000118            
$$$COND_A      = 00000001            DIB$B_DEVCLASS   00000004            PHD$L_BIOCNT     00000054            
$$$STRINGS     = 00000001            DIB$B_DEVTYPE    00000005            PHD$L_CPULIM     00000058            
$$$STRINGS2    = 00000005            DIB$C_LENGTH     00000024            PHD$L_CPUTIM     0000003C            
$$T1           = 00000001            DIB$K_LENGTH     00000024            PHD$L_DIOCNT     00000050            
$$T2           = 00000004            DIB$L_DEVCHAR    00000000            PHD$L_ESP        0000007C            
ASCTOT           000000E3 R     04   DIB$L_DEVDEPEND  00000008            PHD$L_FREP0VA    00000028            
BIT...         = 0000000D            DIB$L_OPCNT      0000001C            PHD$L_FREP1VA    00000030            
BUILD_CLUST      0000099B R     05   DIB$L_OWNUIC     00000014            PHD$L_FREPTECNT  0000002C            
BUILD_CLUSTX     00000A4B R     05   DIB$L_PID        00000010            PHD$L_KSP        00000078            
BYTE           = 00000001  G         DIB$W_DEVBUFSIZ  00000006            PHD$L_P0BR       000000C8            
CFLAG            ********   X   05   DIB$W_DEVNAMOFF  0000000E            PHD$L_P0LRASTL   000000CC            
CHMRTN           ********   X   05   DIB$W_ERRCNT     0000001A            PHD$L_P1BR       000000D0            
CHM_CONT         ********   X   05   DIB$W_RECSIZ     00000022            PHD$L_P1LR       000000D4            
CLUS_MASK        000000E8 R     04   DIB$W_UNIT       0000000C            PHD$L_PAGEFLTS   0000004C            
CLUS_NAME_A      00000065 R     03   DIB$W_VOLNAMOFF  00000020            PHD$L_PAGFIL     0000001C            
CLUS_NAME_B      00000079 R     03   DIB$W_VPROT      00000018            PHD$L_PC         000000C0            
CLUS_STATE       000000EC R     04   EFLAG            ********   X   05   PHD$L_PCB        00000078            
COMP_SC          ********   X   05   EFN              00000285 R     04   PHD$L_PGFLCNT    00000034            
COND1            00000172 RG    05   EXPV             ********   X   05   PHD$L_PGFLQUOTA  0000005C            
COND1_C        = 00000004            FAO_DESC         ********   X   05   PHD$L_PSL        000000C4            
COND1_CLEANUP    00000173 RG    05   FAO_LEN          ********   X   05   PHD$L_PSTBASOFF  00000020            
COND1_E          00000113 R     04   FLAGS            000000F0 R     04   PHD$L_PTWSLELCK  00000064            
COND1_H          000000F6 RG    04   FLG_V_CLAOTHEV = 00000000            PHD$L_PTWSLEVAL  00000068            
COND1_T          000000F1 R     04   FLG_V_CLAPROC  = 00000001            PHD$L_R0         00000088            
COND1_TAB        000000F7 R     04   FLG_V_MKFORMED = 00000002            PHD$L_R1         0000008C            
COND2            00000174 RG    05   FORM_CONDS       00000195 RG    05   PHD$L_R10        000000B0            
COND2_C        = 00000000            FORM_CONDSX      00000296 R     05   PHD$L_R11        000000B4            
COND2_CLEANUP    00000175 RG    05   GBL...         = 00000000            PHD$L_R12        000000B8            
COND2_E          000001DB R     04   IMAGNAM          0000008D R     03   PHD$L_R13        000000BC            
COND2_H          00000134 RG    04   IO$_READVBLK     ********   X   05   PHD$L_R2         00000090            
COND2_T          0000011B R     04   LONG           = 00000004  G         PHD$L_R3         00000094            
COND2_TAB        00000135 R     04   MBXBUFF          00000063 R     04   PHD$L_R4         00000098            
COND3            00000176 RG    05   MBXCHAN          00000008 R     04   PHD$L_R5         0000009C            
COND3X           0000018F R     05   MBXCHANINFO      0000000C R     04   PHD$L_R6         000000A0            
COND3_C        = 00000000            MBXUNIT          0000005F R     04   PHD$L_R7         000000A4            
COND3_CLEANUP    00000190 RG    05   MOD_MSG_CODE     ********   X   05   PHD$L_R8         000000A8            
COND3_E          0000022C R     04   MOD_MSG_PRINT    ********   X   05   PHD$L_R9         000000AC            
COND3_H          000001FF RG    04   MSG1_INP_CTL     00000019 R     03   PHD$L_REFERFLT   00000014            
COND3_T          000001DB R     04   MSG3_ERR_CTL     00000039 RG    03   PHD$L_SSP        00000080            
COND3_TAB        00000200 R     04   MSG_A            ********   X   05   PHD$L_USP        00000084            
COND4            00000191 RG    05   MSG_B            ********   X   05   PHD$L_WSL        00000118            
COND4_C        = 00000004            MSG_CTXT         ********   X   05   PHD$M_DALCSTX  = 00000002            
COND4_CLEANUP    00000192 RG    05   MSG_DATA1        ********   X   05   PHD$M_PFMFLG   = 00000001            
COND4_E          00000285 R     04   NOTARG         = 00000000  G         PHD$M_WSPEAKCHK= 00000004            
COND4_H          00000233 RG    04   NULL           = 00000014  G         PHD$Q_PRIVMSK    00000000            
COND4_T          0000022F R     04   ONES             ********   X   05   PHD$S_ASTLVL   = 00000008            
COND4_TAB        00000234 R     04   OTHER_EFN        000000E4 R     04   PHD$S_P0LR     = 00000018            
COND5            00000193 RG    05   OUTPUT_MSG       ********   X   05   PHD$V_ASTLVL   = 00000018            
COND5_C        = 00000014            PCV              ********   X   05   PHD$V_DALCSTX  = 00000001            
COND5_CLEANUP    00000194 RG    05   PERM             00000113 R     04   PHD$V_P0LR     = 00000000            
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page  21
SYMBOL TABLE                                                                                                                     (1)

PHD$V_PFMFLG   = 00000000            PRV$V_NOACNT   = 00000009            
PHD$V_WSPEAKCHK= 00000002            PRV$V_OPER     = 00000012            
PHD$W_ASTLM      00000044            PRV$V_PHY_IO   = 00000016            
PHD$W_BAK        00000048            PRV$V_PRMCEB   = 0000000A            
PHD$W_DFWSCNT    0000001A            PRV$V_PRMGBL   = 00000018            
PHD$W_EMPTPG     000000D8            PRV$V_PRMMBX   = 0000000B            
PHD$W_EXTDYNWS   00000076            PRV$V_PSWAPM   = 0000000C            
PHD$W_FILLM      00000060            PRV$V_SETPRI   = 0000000D            
PHD$W_FLAGS      0000003A            PRV$V_SETPRV   = 0000000E            
PHD$W_PHVINDEX   00000046            PRV$V_SYSGBL   = 00000019            
PHD$W_PRCLM      00000042            PRV$V_SYSNAM   = 00000002            
PHD$W_PST        00000020            PRV$V_TMPMBX   = 0000000F            
PHD$W_PSTBASMAX  0000004A            PRV$V_VOLPRO   = 00000015            
PHD$W_PSTFREE    00000026            PRV$V_WORLD    = 00000010            
PHD$W_PSTLAST    00000024            QUAD           = 00000008  G         
PHD$W_PTCNTACT   00000070            QUOTALIST        000000AC R     03   
PHD$W_PTCNTLCK   0000006C            RECV             ********   X   05   
PHD$W_PTCNTMAX   00000072            REST_REGS        ********   X   05   
PHD$W_PTCNTVAL   0000006E            SAVE_REGS        ********   X   05   
PHD$W_QUANT      00000040            SS$_NORMAL       ********   X   05   
PHD$W_TQLM       00000062            SS$_WASCLR       ********   X   05   
PHD$W_WSAUTH     0000000A            SUCCESS          ********   X   05   
PHD$W_WSDYN      0000000E            SYS$ASCEFC       ********   X   05   
PHD$W_WSFLUID    00000074            SYS$CLREF        ********   X   05   
PHD$W_WSLAST     00000012            SYS$CMKRNL       ********   X   05   
PHD$W_WSLIST     00000008            SYS$CREMBX       ********   X   05   
PHD$W_WSLOCK     0000000C            SYS$CREPRC       ********   X   05   
PHD$W_WSLX       0000004A            SYS$DACEFC       ********   X   05   
PHD$W_WSNEXT     00000010            SYS$DELMBX       ********   X   05   
PHD$W_WSQUOTA    00000018            SYS$DLCEFC       ********   X   05   
PQL$_ASTLM     = 00000001            SYS$FAO          ********   X   05   
PQL$_BIOLM     = 00000002            SYS$GETCHN       ********   X   05   
PQL$_BYTLM     = 00000003            SYS$HIBER        ********   X   05   
PQL$_CPULM     = 00000004            SYS$QIOW         ********   X   05   
PQL$_DIOLM     = 00000005            SYS$READEF       ********   X   05   
PQL$_FILLM     = 00000006            SYS$SETEF        ********   X   05   
PQL$_LENGTH    = 0000000C            SYS$SETPRN       ********   X   05   
PQL$_LISTEND   = 00000000            SYS$WAKE         ********   X   05   
PQL$_PGFLQUOTA = 00000007            TESTNUM          ********   X   05   
PQL$_PRCLM     = 00000008            TEST_MOD_NAME    00000000 RG    03   
PQL$_TQELM     = 00000009            TEST_MOD_NAME_D  00000009 R     03   
PQL$_WSDEFAULT = 0000000B            TEST_MOD_SUCC    ********   X   05   
PQL$_WSQUOTA   = 0000000A            TMD_ADDR         ********   X   05   
PRIVMASK         00000000 R     04   TM_CLEANUP       00000160 RG    05   
PROCESS_ERR      ********   X   05   TM_SETUP         00000000 RG    05   
PRV$V_ALLSPOOL = 00000004            VERIFY           00000297 RG    05   
PRV$V_BUGCHK   = 00000017            VERIFYX          00000951 R     05   
PRV$V_CMEXEC   = 00000001            VFY_CLEANUP      00000952 RG    05   
PRV$V_CMKRNL   = 00000000            WORD           = 00000002  G         
PRV$V_DETACH   = 00000005            WRITE_MSG2       ********   X   05   
PRV$V_DIAGNOSE = 00000006            
PRV$V_EXQUOTA  = 00000013            
PRV$V_GROUP    = 00000008            
PRV$V_GRPNAM   = 00000003            
PRV$V_LOG_IO   = 00000007            
PRV$V_MOUNT    = 00000011            
PRV$V_NETMBX   = 00000014            
SATSSS50        SATS SYSTEM SERVICE TESTS  $ASCEFC (SUCC S.C.)   22-AUG-1978 04:09:42   VAX-11 MACRO X0.3-11               Page  22
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            0000011C      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
RODATA           000000CF      03     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD  NOWRT LONG  
RWDATA           0000028E      04     NOPIC   USR   CON   REL   LCL NOSHR NOEXE   RD    WRT LONG  
SATSSS50         00000A4C      05     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
11064. BYTES LEFT IN FREE MEMORY POOL.
22. BYTES OF RECLAIMED MEMORY.
OBJ$:SATSSS50,LIS$:SATSSS50/-SP=EXECML$/ML,LIB$:SYSTST.MLB/ML,SRC$:SATSSS50
67 MLB DIR RDS - 789 GETS TO DEFINE 42 MACROS. 46 INTER. FILE WRITES. 
