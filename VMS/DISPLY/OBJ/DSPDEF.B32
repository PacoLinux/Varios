!+ 
! 
! Data structures for Display program 
! 
!- 
!...$DCBDEF	
 
! 
! Define display control block offsets.  There is a display control 
! block for each display which uses the standard initialization and 
! display routines. 
! 
 
 
MACRO		DCB$L_TITLE	= 0,0,32,0%; 			! address of title cstring 
MACRO		DCB$L_COUNT	= 4,0,32,0%; 			! number of items in display 
MACRO		DCB$L_ITMSTR	= 8,0,32,0%; 		! address of item token string 
MACRO		DCB$L_INIT	= 12,0,32,0%; 			! address of initialization processor 
MACRO		DCB$L_COLLECT	= 16,0,32,0%; 		! address of collection routine 
MACRO		DCB$L_DISPLAY	= 20,0,32,0%; 		!  default display routine 
MACRO		DCB$W_MIN	= 24,0,16,0%; 			! minimum value 
MACRO		DCB$W_RANGE	= 26,0,16,0%; 			! value range (max-min) 
LITERAL	DCB$C_LENGTH	= 28; 
LITERAL	DCB$K_LENGTH	= 28; 				! size of DCB 

 
! 
! Define Item descriptor block offsets.  There is one IDB for each data item 
! in the standard displays. 
! 
 
!...$IDBDEF	
 
MACRO		IDB$L_SNAME	= 0,0,32,0%; 			! address of short name cstring 
MACRO		IDB$L_LNAME	= 4,0,32,0%; 			! address of long name cstring 
MACRO		IDB$W_ISIZE	= 8,0,16,0%; 			! data size indicator 
MACRO		IDB$W_TYPE	= 10,0,16,0%; 			! data type indicator 
MACRO		IDB$L_ADDR	= 12,0,32,0%; 			! address of data item 
LITERAL	IDB$C_ILENGTH	= 16; 
LITERAL	IDB$K_ILENGTH	= 16; 	 

 
! 
! Define item identifier numbers.  Each data item has an associated 
! value which is used to find its IDB in the item table. 
! 
 
!...$PMSDEF	
 
LITERAL	
$EQULST (PMS$C_,GBL,0,1  
	,(INTERRUPT,) 				! time on interrupt stack 
	,(KERNEL,) 					! time in kernel mode 
	,(EXEC,) 					! time in exec mode 
	,(SUPER,) 					! time in supervisor mode 
	,(USER,) 					! time in user mode 
	,(COMPAT,) 					! time in compat. mode 
	,(IDLE,) 					! idle time 
	,(COLPG,) 					! collided page wait 
	,(MWAIT,) 					! memory wait 
	,(CEF,) 					! common event flag wait 
	,(PFW,) 					! page wait 
	,(LEF,) 					! local event flag wait 
	,(LEFO,) 					! lef wait out of bal. set 
	,(HIB,) 					! hibernating 
	,(HIBO,) 					! 
	,(SUSP,) 					! suspended 
	,(SUSPO,) 					! 
	,(FPG,) 					! 
	,(COM,) 					! computing 
	,(COMO,) 					! 
	,(CUR,) 					! current 
	,(FAULTS,) 					! page fault count 
	,(PREADS,) 					! page reads 
	,(PWRITES,) 					! page writes 
	,(PWRITIO,) 					! physical page write I/O's 
	,(PREADIO,) 					! physical page read I/O's 
	,(WRTINPROG,) 				! faults from write in progress 
	,(FREFLTS,) 					! faults from free list 
	,(MFYFLTS,) 					! faults from modified list 
	,(DZROFLTS,) 				! demand zero faults 
	,(SYSFAULTS,) 				! system page faults 
	,(IRPCNT,) 					! number of packets in look aside 
	,(HOLECNT,) 					! number of blocks in dyn. memory 
	,(BIGHOLE,) 					! largest hole 
	,(SMALLHOLE,) 				! smallest hole 
	,(HOLESUM,) 					! total space in dyn. memory 
	,(SMALLCNT,) 				! number of blocks < 32 bytes in size 
	,(ISWPCNT,) 					! total inswaps 
	,(DIRIO,) 					! count of direct I/Os 
	,(BUFIO,) 					! count of buffered I/Os 
	,(MBREADS,) 					! total mailbox reads 
	,(MBWRITES,) 				! total mailbox writes 
	,(LOGNAM,) 					! logical name translations 
	,(ACCESS,) 					! number of file accesses 
	,(ALLOC,) 					! number of file extends 
	,(FCPCALLS,) 				! total fcp calls 
	,(FCPCREATE,) 				! number of file creations 
	,(FCPREAD,) 					! number of disk reads by FCP 
	,(FCPWRITE,) 				! number of disk writes by FCP 
	,(FCPCACHE,) 				! number of FCP cache hits 
	,(FCPCPU,) 					! number of CPU tics by FCP 
	,(FCPTURN,) 					! number of window turns 
	,(FCPHIT,) 					! number of window hits 
	,(FCPSPLIT,) 				! number of split transfers 
	,(OPENS,) 					! number of file opens 
 
! 
! the following must be the last entry 
! 
 
	,(TABLESIZE,) 				! for allocating table space in 
					! PERFTABLE 
 
	); 

