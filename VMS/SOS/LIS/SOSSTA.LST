SOSSTA - SOS STARTUP CODE	MACRO M1110  22-AUG-78 05:34  PAGE 2


    100						.TITLE	SOSSTA - SOS STARTUP CODE
    200						.IDENT	/020501/
    300					;
    400					; COPYRIGHT 1977, DIGITAL EQUIPMENT CORP., MAYNARD, MASS. 01754
    500					;
    600					; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
    700					; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
    800					;
    900					; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
   1000					; ON A SINGLE COMPUTER SYSTEM AND CAN BE COPIED (WITH INCLUSION
   1100					; OF DEC'S COPYRIGHT NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
   1200					; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
   1300					;
   1400					; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
   1500					; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
   1600					; EQUIPMENT CORPORATION.
   1700					;
   1800						.MCALL	GCMLD$
   1900	000000					GCMLD$
   2000
   2100						.MCALL	GTSK$S,GPRT$S,GLUN$S,EXIT$S
   2200						.MCALL	CLOSE$
   2300
   2400						.IF	NDF,R$$STS
   2500						.MCALL	TTSYM$,QIOSY$,DIR$,QIOW$
   2600	000000					TTSYM$
   2650	000000					QIOSY$
   2700
   2800	000000					DATA$	STA
   2900	000000				TTINI:	QIOW$	IO.GTS,TIOLUN,2,,IOSTS,,<TTIBUF,4,,,,>
   3000
   3100						.ENDC
SOSSTA - SOS STARTUP CODE	MACRO M1110  22-AUG-78 05:34  PAGE 3
MAIN STARTUP AND INITIALZATION

    100						.SBTTL	MAIN STARTUP AND INITIALZATION
    200
    300	000030					CODE$	STA
    400
    500	000000				START1::
    600						.IF	DF,R$$STS		;RSTS ONLY
    700						MOV	#STKINI,SP		;INIT STACK POINTER
    800						MOV	#JOBNUM,R1		;ADR OF 2 WORDS, JOBNUM, SOSTNM
    900						CLR	(R1)			;INIT BOTH BYTES OF JOBNUM
   1000						MOVB	FIRQB+FQJOB,(R1)	;SAVE JOB NUMBER
   1100						ASR	(R1)			;REAL JOB NUM
   1200						MOV	(R1)+,-(SP)		;PUSH JOB NUMBER, R1 POINTS TO SOSTNM
   1300						MOV	#2,-(SP)		;CONVERT 2 DIGITS
   1400						JSR	PC,CNVDEC		;OF JOB NUMBER TO ASCII STRING
   1500						MOVB	(R0)+,(R1)+		;STORE 2 DIGITS IN SOSTNM
   1600						MOVB	(R0),(R1)
   1700						CMP	(SP)+,(SP)+		;CLEAN THE STACK
   1800
   1900						MOV	#7.,20			;SET UP LENGTH OF SST VECTOR
   2000						MOV	#SSTVEC,16		;AND POINTER TO IT
   2100						MOV	#CTLC,24			;^C TRAP HANDLER
   2200						CLR	12			;IF DDT HASN'T GOTTEN ITS SYMBOL
   2300										;TABLE YET, ITS NOT THERE
   2400						CLR	TTOCTL+2		;INIT TTY OUTPUTTERS
   2500						MOV	#TTOBUF,TTOCTL		;BUFFER POINTERS
   2600
   2700						.IFF	;RSX ONLY
   2900
   3000						.IFTF	;RSX AND RSTS
   3100	000000	012700 	000000G			MOV	#BUF,R0			;ADDRESS OF BUFFER ADR AND SIZE
   3200	000004	016720 	000000G			MOV	.TOPAD,(R0)+		;STORE BASE ADDR OF BUFFER
   3300	000010					GPRT$S	,#TTIBUF		;GET PARTITION PARAMETERS
   3400	000026	013710 	000000G			MOV	@#$DSW,(R0)		;BASE ADDRESS OF PARTITION
   3500										;FOR UNMAPPED 11M OR 11S
   3600	000032					GTSK$S	#TTIBUF			;GET TASK PARAMETERS
   3700	000044	066710 	000032G			ADD	TTIBUF+G.TSTS,(R0)	;FORM HIGHEST VIRTUAL ADR
   3800	000050	166010 	177776 			SUB	-2(R0),(R0)		;NO. OF BYTES OF BUFFER SPACE
   3900						.IFF	;RSX ONLY
   4000					;
   4100					; ESTABLISH WHICH RSX SYSTEM THIS IS
   4200					;
   4300	000054	016700 	000034G			MOV	TTIBUF+28.,R0		;GET RSX SYSTEM CODE
   4400	000060	042700 	177760 			BIC	#177760,R0		;STARTING AT 0 THEY ARE
   4500										;11D,11M,11S,IAS,RSTS,CME,MPL
   4600	000064	012767 	000001 	000000G		MOV	#1,SYSTEM		;FORM A BIT NO. FROM THE ENCODED VALUE
   4700	000072	005300 			10$:	DEC	R0			;SHIFT 0 OR MORE TIMES
   4800	000074	002403 				BLT	20$			;BRANCH IF DONE
   4900	000076	006367 	000000G			ASL	SYSTEM			;SHIFT IT ONE BIT
   5000	000102	000773 				BR	10$			;SEE IF DONE YEST
   5100
   5200	000104				20$:	GLUN$S	#TIOLUN,#TTIBUF		;READ THE LUN INFO FOR TI:
   5300	000122	012700 	000002G			MOV	#TTIBUF+G.LUNU,R0	;ADDRESS OF TERMINAL NUMBER
   5400	000126	005001 				CLR	R1			;ZERO EXTEND THE BYTE
   5500	000130	152001 				BISB	(R0)+,R1		;AND LEAVE R0 READY TO FORM 3 BYTE
   5600										;ASCII TERMINAL NUMBER
   5700	000132	032767 	000000G	000000G		BIT	#SYSCME,SYSTEM		;IF RSX CME
   5800	000140	001014 				BNE	40$			;FORM CONTROLLER LETTER AND DECIMAL UNIT
SOSSTA - SOS STARTUP CODE	MACRO M1110  22-AUG-78 05:34  PAGE 3-1
MAIN STARTUP AND INITIALZATION

   5900	000142	012703 	000003 			MOV	#3,R3			;OVERWRITING FIRST 3 BYTES OF TTIBUF
   6000	000146	010102 			30$:	MOV	R1,R2			;GET NEXT OCTAL DIGIT
   6100	000150	042702 	177770 			BIC	#^C<7>,R2		;LOW 3 BITS
   6200	000154	062702 	000060 			ADD	#'0,R2			;FORM ASCII
   6300	000160	110240 				MOVB	R2,-(R0)		;AND STORE IT
   6400
   6500						.IF	DF,R$$EIS		;11 EXTENDED INSTRUCTION SET
   6600	000162	072127 	177775 			ASH	#-3,R1			;DIVIDE BY 8
   6700
   6800						.IFF	;NO EIS AVAILABLE
   6900						ASR	R1			;DIVIDE
   7000						ASR	R1			;  BY
   7100						ASR	R1			;    8
   7200						.ENDC	;R$$EIS
   7300
   7400	000166	077311 				SOB	R3,30$			;ONCE FOR EACH DIGIT
   7500	000170	000424 				BR	60$
   7600	000172	010102 			40$:	MOV	R1,R2			;COPY THE UNIT NUMBER
   7700	000174	042702 	177760 			BIC	#^C<17>,R2		;4 BITS = 16. UNITS PER CONTROLLER
   7800	000200	012703 	000060 			MOV	#'0,R3			;ASSUME UNIT LESS THAN 10.
   7900	000204	020227 	000011 			CMP	R2,#9.			;IS IT?
   8000	000210	003403 				BLE	50$			;BRANCH IF YES
   8100	000212	005203 				INC	R3			;FIX UP HIGH DIGIT
   8200	000214	162702 	000012 			SUB	#10.,R2			;AND FORM LOW DIGIT
   8300	000220	062702 	000060 		50$:	ADD	#'0,R2			;MAKE INTO ASCII DIGIT
   8400	000224	110240 				MOVB	R2,-(R0)		;STORE UNIT NUMBER, LOW CHARACTER
   8500	000226	110340 				MOVB	R3,-(R0)		;HIGH CHARACTER
   8600
   8700						.IF	DF,R$$EIS		;11 EXTENDED INSTRUCTION SET
   8800	000230	072127 	177774 			ASH	#-4,R1			;FORM CONTROLLER NO. FROM HIGH 4 BITS
   8900
   9000						.IFF	;NO EIS AVAILABLE
   9100						ASR	R1			;FORM CONTROLLER
   9200						ASR	R1			; FROM THE HIGH
   9300						ASR	R1			;  4 BITS OF THE
   9400						ASR	R1			;   UNIT NUMBER
   9500						.ENDC	;R$$EIS
   9600
   9700	000234	062701 	000101 			ADD	#'A,R1			;CONTROLLERS START AT "A"
   9800	000240	110140 				MOVB	R1,-(R0)		;STORE CONTROLLER CHARACTER
   9900	000242	004767 	000000G		60$:	JSR	PC,$CAT5		;CONVERT 3 CHAR ASCII STRING
  10000										;POINTED AT BY R0 TO RAD50 WORD
  10100	000246	010167 	000000G			MOV	R1,SOSTNM		;IN R1 AND SAVE IN SOSTNM
  10200
  10800	000252	032767 	000000C	000000G		BIT	#SYS11M!SYS11S!SYSMPL,SYSTEM ;ECHO ALTMODE FOR 11M, 11S, OR MPLUS
  10900	000260	001002 				BNE	70$			;BRANCH IF 11M OR 11S
  11000	000262	105067 	000000G			CLRB	ALTECO			;PATCH ALTMODE ECHO
  11100	000266	004767 	000226 		70$:	JSR	PC,TTQIO		;GET TERMINAL SUPPORT
  11110	000272	103445 				BCS	90$			;BRANCH IF NO INFORMATION AVAILABLE
  11120	000274	032767 	002000 	000000G		BIT	#F1.RST,TTIBUF		;READ WITH SPECIAL TERMINATORS?
  11130	000302	001403 				BEQ	80$			;BRANCH IF NOT AVAILABLE
  11140	000304	112767 	000010 	000000G		MOVB	#10,RSTFLG		;ENABLE READ WITH SPECIAL TERMINATORS
  11150	000312	012767 	000025 	000000G	80$:	MOV	#TC.SMR,TTIBUF		;CODE FOR LOWER CASE FILTERING
  11160	000320	012767 	000026 	000002G		MOV	#TC.SMP,TTIBUF+2	;SEE IF EITHER IS SET IF 11D OR IAS
  11170	000326	012767 	002560 	000002'		MOV	#SF.GMC,TTINI+Q.IOFN	;GET MULTIPLE CHARACTERISTICS
  11180	000334	012700 	000002 			MOV	#2,R0			;ASSUME PARAM COUNT = 2
  11210	000340	032767 	000000C	000000G		BIT	#SYS11D!SYSIAS,SYSTEM	;IF 11D OR IAS
SOSSTA - SOS STARTUP CODE	MACRO M1110  22-AUG-78 05:34  PAGE 3-2
MAIN STARTUP AND INITIALZATION

  11220	000346	001402 				BEQ	82$
  11230	000350	012700 	000004 			MOV	#4,R0			;PARAM COUNT = 4 TO READ BOTH
  11240	000354	010067 	000016'		82$:	MOV	R0,TTINI+Q.IOPL+2	;SET PARAM COUNT
  11260	000360	004767 	000134 			JSR	PC,TTQIO		;READ TERMINAL CHARACTERISTICS
  11270	000364	103410 				BCS	90$			;BRANCH IF CANNOT GET CHARACTERISTICS
  11280	000366	116700 	000001G			MOVB	TTIBUF+1,R0		;TERMINAL DRIVER CONVERTING LOWER
  11285	000372	156700 	000003G			BISB	TTIBUF+3,R0		;CASE TO UPPER CASE?
  11290	000376	001003 				BNE	90$			;BRANCH IF NO
  11300	000400	112767 	000002 	000000G		MOVB	#2,RAISLC		;ALTER MODE MUST CONVERT TOO
  11700						.IFTF	;RSX AND RSTS
  11800	000406	112767 	000017 	000141G	90$:	MOVB	#GE.COM!GE.IND!GE.CLO!GE.LC,GCMLB+G.MODE ;INIT GCML MODE
  11900						.IFF	;RSX ONLY
  11910	000414	032767 	000000C	000000G		BIT	#SYS11D!SYSIAS,SYSTEM	;IF IAS OR 11D
  11920	000422	001402 				BEQ	95$
  11930	000424	004767 	000000G			JSR	PC,IASINI		;BREAK OUT TERMINAL INIT CODE FOR IAS
  12000	000430	004767 	000000G		95$:	JSR	PC,INITCR		;FORCE INITIAL CRLF
  12100						.ENDC	;R$$STS
  12200
  12300	000434	105067 	000000G			CLRB	SEQBAS			;SEQUENCE TYPE UNKNOWN
  12400
  12420						.IF	DF,R$$STS
  12500						JSR	PC,LODSWT		;MAKE SURE INIT MESSAGE IS PRESENT
  12600						JSR	PC,GIVID		;PRINT IDENTIFICATION
  12602						.ENDC
  12604
  12606	000440	012767 	000000G	000000G		MOV	#.ERRBF,NEWLNA		;USE ERROR OUTPUT BUFFER AS NEWLIN
  12610	000446	022727 	000000C	001004 		CMP	#<NEWLNE-NEWLIN>,#516.	;UNLESS NEWLIN BUFFER WAS SPECIFIED
  12612	000454	002403 				BLT	100$			;BY EXTENDING THE NEWLIN PSECT
  12614	000456	012767 	000000G	000000G		MOV	#NEWLIN,NEWLNA		;TO AT LEAST 516. BYTES, THEN USE IT
  12630	000464	005067 	000000G		100$:	CLR	FSTRLST			;ZERO THE FIND
  12640	000470	005067 	000000G			CLR	S1STRLST		; AND SUBSTITUTE
  12650	000474	005067 	000000G			CLR	S2STRLST		;  LISTS
  12660	000500	012746 	000000G			MOV	#EXIT,-(SP)		;LAST RETURN IS TO THE EXIT LOGIC
  12670	000504	010667 	000000G			MOV	SP,SPSAV1		;SET DISASTER STACK POINTER
  12680	000510	010667 	000000G			MOV	SP,SPSAV2		;AND ABORT STACK POINTER
  12790	000514	000167 	000000G			JMP	START2
  12800
  12900						.IF	NDF,R$$STS
  13000	000520				TTQIO:	DIR$	#TTINI			;ISSUE THE QIO AND WAIT
  13100	000526	103007 				BCC	10$			;BRANCH IF NO DIRECTIVE ERROR
  13200	000530	022737 	177777 	000000G		CMP	#IE.UPN,@#$DSW		;NODE POOL EXHAUSTED?
  13300	000536	001006 				BNE	20$			;BRANCH IF SOME OTHER ERROR
  13400	000540	004767 	000000G			JSR	PC,WAITND		;WAIT A BIT
  13500	000544	000765 				BR	TTQIO			;AND TRY AGAIN
  13600	000546	105767 	000000G		10$:	TSTB	IOSTS			;SUCCESSFUL?
  13700	000552	003001 				BGT	30$			;BRANCH IF YES
  13800	000554	000261 			20$:	SEC				;INDICATE ERROR
  13900	000556	000207 			30$:	RTS	PC			;AND RETURN
  13950						.ENDC	;R$$STS
  14000
  14100
  23000	000560				EXIT1::
  23100						.IF	DF,R$$STS
  23200						MOV	#STKINI,SP		;RESET SP STACK
  23300						MOV	#FIRQB+FQFIL,R4		;DO RESET OF ALL
  23400						CLR	(R4)			;CHANNELS AGAIN
  23500						MOVB	#RSTFQ,-(R4)
SOSSTA - SOS STARTUP CODE	MACRO M1110  22-AUG-78 05:34  PAGE 3-3
MAIN STARTUP AND INITIALZATION

  23600						CALFIP
  23700						JSR	PC,IOCHK
  23800
  23900						.TTRST				;RESET ANY CTL O EFFECTS
  24000						.TTECH				;MAKE SURE WE ARE ECHOING
  24100						.EXIT				;AND EXIT SOS
  24200
  24300						.IFF
  24400	000560					CLOSE$	#FILEOUT		;CLOSE THESE JUST IN CASE
  24500	000570					CLOSE$	#FILETMP
  24600	000600	004767 	000000G			JSR	PC,DTACH1		;DETACH TERMINAL (FOR 11D, IAS)
  24700	000604					EXIT$S				;AND EXIT
  24800						.ENDC
  24900
  25000
  25100
  25200		000001 				.END
SOSSTA - SOS STARTUP CODE	MACRO M1110  22-AUG-78 05:34  PAGE 3-4
SYMBOL TABLE

ALTECO= ****** GX	G.TSDU= 000036   	IE.HFU= 177744   	IE.SQC= 177734   	IO.ENA= 006000
BUF   = ****** GX	G.TSFW= 000024   	IE.HWR= 177772   	IE.SRE= 177762   	IO.EOF= 003000
DTACH1= ****** GX	G.TSGC= 000017   	IE.IBS= 177647   	IE.STK= 177706   	IO.EXT= 011400
EXIT  = ****** GX	G.TSMT= 000022   	IE.IDU= 177644   	IE.TCH= 177765   	IO.FDX= 003020
EXIT1   000560RG    003	G.TSNL= 000020   	IE.IEF= 177637   	IE.TMM= 177671   	IO.FLN= 012400
FILEOU= ****** GX	G.TSPC= 000016   	IE.IES= 177656   	IE.TMO= 177666   	IO.FNA= 004400
FILETM= ****** GX	G.TSPN= 000004   	IE.IFC= 177776   	IE.ULK= 177653   	IO.GLC= 016430
FSTRLS= ****** GX	G.TSPR= 000014   	IE.IFU= 177747   	IE.ULN= 177773   	IO.GLI= 016420
F1.ACR= 000001   	G.TSRN= 000010   	IE.ILL= 177726   	IE.UNS= 177774   	IO.GNI= 016410
F1.BTW= 000002   	G.TSSY= 000034   	IE.ILU= 177640   	IE.UPN= 177777   	IO.GRC= 016450
F1.BUF= 000004   	G.TSTN= 000000   	IE.ILV= 177755   	IE.VER= 177774   	IO.GRI= 016440
F1.CCO= 000020   	G.TSTS= 000032   	IE.INS= 177776   	IE.WAC= 177743   	IO.GRN= 016460
F1.ESQ= 000040   	G.TSVA= 000026   	IE.IOP= 177655   	IE.WAT= 177741   	IO.GTS= 002400
F1.HLD= 000100   	G.TSVL= 000030   	IE.IPR= 177641   	IE.WCK= 177652   	IO.HDX= 003010
F1.LWC= 000200   	IASINI= ****** GX	IE.ISQ= 177703   	IE.WER= 177737   	IO.HIS= 015000
F1.RNE= 000400   	IE.ABO= 177761   	IE.ITI= 177643   	IE.WLK= 177764   	IO.HNG= 003000
F1.RPR= 001000   	IE.ACT= 177771   	IE.ITP= 177650   	IE.WOV= 177653   	IO.INI= 014400
F1.RST= 002000   	IE.ADP= 177636   	IE.ITS= 177770   	IE.2DV= 177720   	IO.INL= 002400
F1.RUB= 004000   	IE.ALC= 177654   	IE.IUI= 177645   	INITCR= ****** GX	IO.ITI= 017000
F1.SYN= 010000   	IE.ALG= 177654   	IE.LCK= 177745   	IOSTS = ****** GX	IO.KIL= 000012
F1.TRW= 020000   	IE.ALN= 177736   	IE.LNL= 177646   	IO.ACE= 007400   	IO.LDI= 007000
F1.UIA= 000010   	IE.AST= 177660   	IE.MAP= 177657   	IO.ACR= 006400   	IO.LED= 012000
F1.UTB= 040000   	IE.BAD= 177777   	IE.MOD= 177753   	IO.ACW= 007000   	IO.LEI= 007410
F1.VBF= 100000   	IE.BBE= 177710   	IE.NBF= 177731   	IO.ADS= 014000   	IO.LKE= 012000
F2.ALT= 000020   	IE.BCC= 177676   	IE.NBK= 177727   	IO.APC= 014000   	IO.LOD= 014000
F2.DCH= 000004   	IE.BDI= 177714   	IE.NDR= 177670   	IO.APV= 014010   	IO.LOV= 001010
F2.DKL= 000010   	IE.BDR= 177716   	IE.NFI= 177704   	IO.ATA= 001410   	IO.LSI= 011000
F2.GCH= 000002   	IE.BDV= 177711   	IE.NFW= 177673   	IO.ATT= 001400   	IO.LTI= 007400
F2.SCH= 000001   	IE.BHD= 177700   	IE.NLK= 177661   	IO.CAS= 015420   	IO.LTK= 000050
F2.SFF= 000040   	IE.BLB= 177672   	IE.NLN= 177733   	IO.CBO= 015510   	IO.LTY= 010000
GCMLB = ****** GX	IE.BLK= 177754   	IE.NNC= 177663   	IO.CCI= 014000   	IO.MAO= 003410
GE.BIF= 177775   	IE.BNM= 177712   	IE.NNL= 177662   	IO.CCO= 000440   	IO.MCS= 013400
GE.CLO= 000004   	IE.BTF= 177664   	IE.NNN= 177674   	IO.CIN= 016500   	IO.MDA= 016000
GE.COM= 000001   	IE.BTP= 177725   	IE.NOD= 177751   	IO.CLK= 015000   	IO.MDI= 014400
GE.CON= 000020   	IE.BVR= 177701   	IE.NSF= 177746   	IO.CLN= 003400   	IO.MDO= 015400
GE.EOF= 177766   	IE.BYT= 177755   	IE.NST= 177660   	IO.CNT= 017000   	IO.MLO= 006000
GE.IND= 000002   	IE.CKP= 177766   	IE.NSW= 177756   	IO.CON= 015400   	IO.MOD= 003000
GE.IOR= 177777   	IE.CKS= 177742   	IE.NVR= 177652   	IO.CPR= 015410   	IO.MSO= 005000
GE.LC = 000010   	IE.CLO= 177732   	IE.NVW= 177651   	IO.CPW= 016520   	IO.NLB= 016530
GE.MDE= 177774   	IE.CNR= 177667   	IE.OFL= 177677   	IO.CRC= 001040   	IO.NLK= 011400
GE.OPR= 177776   	IE.CON= 177752   	IE.ONP= 177773   	IO.CRE= 012000   	IO.ONL= 017400
GE.RBG= 177730   	IE.DAA= 177770   	IE.OVR= 177756   	IO.CRJ= 015440   	IO.RAD= 010400
GE.SIZ= 000040   	IE.DAO= 177763   	IE.PES= 177655   	IO.CSI= 013000   	IO.RAL= 001010
G.CMLD= 000146   	IE.DFU= 177750   	IE.PNS= 177642   	IO.CSM= 016470   	IO.RAT= 013000
G.DPRM= 000160   	IE.DNA= 177771   	IE.PRI= 177760   	IO.CTI= 015400   	IO.RBC= 003000
G.ERR = 000140   	IE.DNR= 177775   	IE.PTS= 177775   	IO.CTL= 016400   	IO.RCI= 015000
G.ISIZ= 000020   	IE.DUN= 177767   	IE.RAC= 177724   	IO.CTR= 015610   	IO.RCV= 015000
G.LUCW= 000004   	IE.DUP= 177707   	IE.RAT= 177723   	IO.CTY= 003400   	IO.RDB= 001200
G.LUFB= 000003   	IE.EOF= 177766   	IE.RBG= 177730   	IO.DAC= 010000   	IO.RDD= 010010
G.LUNA= 000000   	IE.EOT= 177702   	IE.RBS= 177761   	IO.DCI= 014400   	IO.RDN= 000022
G.LUNU= 000002   	IE.EOV= 177765   	IE.RCN= 177722   	IO.DEL= 012400   	IO.REL= 013400
G.MODE= 000141   	IE.EXP= 177665   	IE.RER= 177740   	IO.DET= 002000   	IO.RHD= 001010
G.PRFW= 000004   	IE.FEX= 177717   	IE.RNM= 177715   	IO.DIS= 016000   	IO.RLB= 001000
G.PRPB= 000000   	IE.FHE= 177705   	IE.RSU= 177757   	IO.DLB= 016540   	IO.RLV= 001100
G.PRPS= 000002   	IE.FIX= 177767   	IE.SDP= 177635   	IO.DSI= 013400   	IO.RMT= 010020
G.PSDS= 000142   	IE.FLN= 177657   	IE.SNC= 177735   	IO.DTI= 016000   	IO.RNA= 005400
G.SIZE= 000224   	IE.FOP= 177713   	IE.SPC= 177772   	IO.DTY= 006400   	IO.RNC= 001040
SOSSTA - SOS STARTUP CODE	MACRO M1110  22-AUG-78 05:34  PAGE 3-5
SYMBOL TABLE

IO.RNE= 001020   	IO.XNA= 014410   	SE.VAL= 000004   	S2STRL= ****** GX	TC.WID= 000001
IO.RNS= 001020   	IQ.Q  = 000002   	SF.DEF= 000010   	TC.ACR= 000024   	TC.XSP= 000004
IO.RPB= 001040   	IQ.S  = 000004   	SF.GAC= 002600   	TC.ALT= 000031   	TF.AST= 000010
IO.RPR= 004400   	IQ.UMD= 000004   	SF.GMC= 002560   	TC.BLK= 000042   	TF.BIN= 000002
IO.RST= 001001   	IQ.X  = 000001   	SF.GSC= 002540   	TC.BSP= 000023   	TF.CCO= 000040
IO.RTC= 003400   	IS.BV = 000005   	SF.RDF= 002460   	TC.CCF= 000030   	TF.ESQ= 000020
IO.RTI= 016400   	IS.CC = 001401   	SF.SAC= 002620   	TC.CEQ= 000046   	TF.RAL= 000010
IO.RTK= 000060   	IS.CLR= 000000   	SF.SMC= 002440   	TC.DLU= 000041   	TF.RNC= 000040
IO.RTM= 001200   	IS.CR = 006401   	SF.SSC= 002420   	TC.EPA= 000040   	TF.RNE= 000020
IO.RVB= 010400   	IS.EOT= 002001   	SF.STS= 002520   	TC.ESQ= 000035   	TF.RST= 000001
IO.RWD= 002400   	IS.ESC= 015401   	SF.STT= 002500   	TC.FRM= 000043   	TF.SYN= 000200
IO.RWU= 002540   	IS.ESQ= 115401   	SOSTNM= ****** GX	TC.HFF= 000017   	TF.TMO= 000200
IO.R1C= 002400   	IS.PES= 100001   	SPSAV1= ****** GX	TC.HFL= 000013   	TF.WAL= 000010
IO.SAO= 004000   	IS.PND= 000000   	SPSAV2= ****** GX	TC.HHT= 000021   	TF.WBT= 000100
IO.SCS= 013000   	IS.RDD= 000002   	START1  000000RG    003	TC.HLD= 000044   	TF.WMS= 000020
IO.SDI= 013000   	IS.SET= 000002   	START2= ****** GX	TC.IMG= 000032   	TF.XOF= 000100
IO.SDO= 012400   	IS.SPD= 000002   	SYSCME= ****** GX	TC.ISL= 000006   	TIOLUN= ****** GX
IO.SEC= 002520   	IS.SUC= 000001   	SYSIAS= ****** GX	TC.LCP= 000036   	TTIBUF= ****** GX
IO.SET= 000030   	IS.TAB= 004401   	SYSMPL= ****** GX	TC.LPP= 000002   	TTINI   000000R     002
IO.SLO= 005400   	IS.TMO= 000002   	SYSTEM= ****** GX	TC.LVF= 000020   	TTQIO   000520R     003
IO.SMO= 002560   	NEWLIN= ****** GX	SYS11D= ****** GX	TC.MAX= 000064   	T.AS33= 000001
IO.SPB= 002420   	NEWLNA= ****** GX	SYS11M= ****** GX	TC.NEC= 000047   	T.AS35= 000003
IO.SPF= 002440   	NEWLNE= ****** GX	SYS11S= ****** GX	TC.NKB= 000033   	T.KS33= 000002
IO.SPW= 016510   	PAR$$$= 000027   	S.EXTA= 000023   	TC.NL = 000015   	T.LA36= 000006
IO.SSO= 004400   	Q.IOAE= 000012   	S.EXTB= 000024   	TC.NPR= 000034   	T.L180= 000014
IO.STA= 015400   	Q.IOEF= 000006   	S.FDB = 000140   	TC.NST= 000022   	T.L30P= 000005
IO.STC= 002500   	Q.IOFN= 000002   	S.FNAM= 000006   	TC.PAR= 000037   	T.L30S= 000004
IO.STP= 016400   	Q.IOLU= 000004   	S.FNB = 000036   	TC.PRI= 000051   	T.SCR0= 000015
IO.SYN= 003040   	Q.IOPL= 000014   	S.FNBW= 000017   	TC.RAT= 000007   	T.UNK0= 000000
IO.TRM= 002410   	Q.IOPR= 000007   	S.FNTY= 000004   	TC.RSP= 000003   	T.USR0= 000016
IO.UDI= 011410   	Q.IOSB= 000010   	S.FTYP= 000002   	TC.SCP= 000012   	T.USR1= 000017
IO.UEI= 011450   	RAISLC= ****** GX	S.NFEN= 000020   	TC.SCR= 000011   	T.USR2= 000020
IO.UER= 011440   	RONLY$= 000001   	S.0   = 000001   	TC.SFF= 000016   	T.USR3= 000021
IO.ULK= 005000   	RSTFLG= ****** GX	S.100 = 000004   	TC.SLV= 000050   	T.USR4= 000022
IO.UNL= 000042   	RX$IAS= 000043   	S.110 = 000005   	TC.SMO= 000027   	T.VT05= 000007
IO.USI= 011460   	RX$11D= 000040   	S.1200= 000013   	TC.SMP= 000026   	T.VT50= 000010
IO.UTI= 011420   	RX$11M= 000041   	S.134 = 000006   	TC.SMR= 000025   	T.VT52= 000011
IO.UTY= 011430   	RX$11S= 000042   	S.150 = 000007   	TC.STB= 000005   	T.VT55= 000012
IO.WAL= 000410   	R$$EIS= 000001   	S.1800= 000014   	TC.TAP= 000045   	T.VT61= 000013
IO.WAT= 013400   	R$$SHR= 000001   	S.200 = 000010   	TC.TTP= 000010   	WAITND= ****** GX
IO.WBT= 000500   	SEQBAS= ****** GX	S.2000= 000015   	TC.UC0= 000052   	$CAT5 = ****** GX
IO.WDD= 000444   	SE.BIN= 000003   	S.2400= 000016   	TC.UC1= 000053   	$DSW  = ****** GX
IO.WLB= 000400   	SE.FIX= 000002   	S.300 = 000011   	TC.UC2= 000054   	$$MSG = 000000
IO.WLC= 000420   	SE.ICN= 000001   	S.3600= 000017   	TC.UC3= 000055   	$$$ARG= 000006
IO.WLS= 000410   	SE.LPR= 000011   	S.4800= 000020   	TC.UC4= 000056   	$$$OST= 000014
IO.WLT= 000410   	SE.NIH= 000014   	S.50  = 000002   	TC.UC5= 000057   	$$$0ST= 000000
IO.WLV= 000500   	SE.NSC= 000012   	S.600 = 000012   	TC.UC6= 000060   	.CLOSE= ****** G
IO.WMS= 000420   	SE.PAR= 000010   	S.7200= 000021   	TC.UC7= 000061   	.ERRBF= ****** GX
IO.WNS= 000420   	SE.SPD= 000006   	S.75  = 000003   	TC.UC8= 000062   	.TOPAD= ****** GX
IO.WPB= 000440   	SE.SPL= 000007   	S.9600= 000022   	TC.UC9= 000063   	...GBL= 000000
IO.WVB= 011000   	SE.TER= 000005   	S1STRL= ****** GX	TC.VFL= 000014   	...TPC= 000140
IO.XMT= 014400   	SE.UPN= 000013

. ABS.	000000	   000
      	000000	   001
STA.D 	000030	   002
CODE  	000612	   003
SOSSTA - SOS STARTUP CODE	MACRO M1110  22-AUG-78 05:34  PAGE 3-6
SYMBOL TABLE

ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  7236 WORDS  ( 29 PAGES)
DYNAMIC MEMORY:  8052 WORDS  ( 30 PAGES)
ELAPSED TIME:  00:00:30
OBJ$:SOSSTA,LIS$:SOSSTA/-SP/NL:TOC=SRC$:PREFIX,SOSSTA
