SRCH3   -  STRING SEARCH ROUTIN	MACRO M1110  22-AUG-78 05:36  PAGE 2


    100						.TITLE	SRCH3   -  STRING SEARCH ROUTINES
    200						.IDENT	/020501/
    210					;
    220					; CHANGE HISTORY:
    230					;
    240					;	05	22-FEB-78	PETER H. LIPMAN
    250					;
    260					;		CHANGED THE SEPARATOR CLASS GOVERNED BY /SEP FROM
    270					;	".", "$", AND "%" TO ".", "$", AND "_".  THE INTENT IN SOS
    280					;	WAS THAT THESE WERE USED IN SYMBOLS AND ON THE 11'S "%" IS
    290					;	NOT USED IN SYMBOLS AS IT IS ON THE PDP-10 AND ON VAX "_" IS
    300					;	USED IN SYMBOLS.
    310					;
    400		000000 			R0	=	%0
    500		000001 			R1	=	%1
    600		000002 			R2	=	%2
    700		000003 			R3	=	%3
    800		000004 			R4	=	%4
    900		000005 			R5	=	%5
   1000		000006 			SP	=	%6
   1100		000007 			PC	=	%7
   1200
   1300						.GLOBL	SEARCH,NXTLINE,PSTRNG
   1400						.GLOBL	$SAV5,SOSFLG,EMATCH,SEPARATOR,MATCHR
   1500
   1600	000000					CODE$	SRCH
   1700	000000	   001 	   003 	   001 	TABLE:	.BYTE	1,3,1,1,1,7,3,1,1,1,1,1,1,1,3,1
	000003	   001 	   001 	   007
	000006	   003 	   001 	   001
	000011	   001 	   001 	   001
	000014	   001 	   001 	   003
	000017	   001
   1800	000020	   003 	   001 	   001 		.BYTE	3,1,1,1,3,1,7,3,3,1,1,1,3,3,7,1
	000023	   001 	   003 	   001
	000026	   007 	   003 	   003
	000031	   001 	   001 	   001
	000034	   003 	   003 	   007
	000037	   001
   1900	000040	   001 	   001 	   001 		.BYTE	1,1,1,1,10,1,1,1,1,1,1,1,1,1,10,1
	000043	   001 	   010 	   001
	000046	   001 	   001 	   001
	000051	   001 	   001 	   001
	000054	   001 	   001 	   010
	000057	   001
   2000	000060	   000 	   000 	   000 		.BYTE	0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1
	000063	   000 	   000 	   000
	000066	   000 	   000 	   000
	000071	   000 	   001 	   001
	000074	   001 	   001 	   001
	000077	   001
   2100	000100	   001 	   020 	   020 		.BYTE	1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20
	000103	   020 	   020 	   020
	000106	   020 	   020 	   020
	000111	   020 	   020 	   020
	000114	   020 	   020 	   020
	000117	   020
   2200	000120	   020 	   020 	   020 		.BYTE	20,20,20,20,20,20,20,20,20,20,20,1,1,1,1,10
SRCH3   -  STRING SEARCH ROUTIN	MACRO M1110  22-AUG-78 05:36  PAGE 2-1


	000123	   020 	   020 	   020
	000126	   020 	   020 	   020
	000131	   020 	   020 	   001
	000134	   001 	   001 	   001
	000137	   010
   2300	000140	   001 	   020 	   020 		.BYTE	1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20
	000143	   020 	   020 	   020
	000146	   020 	   020 	   020
	000151	   020 	   020 	   020
	000154	   020 	   020 	   020
	000157	   020
   2400	000160	   020 	   020 	   020 		.BYTE	20,20,20,20,20,20,20,20,20,20,20,1,3,1,1,1
	000163	   020 	   020 	   020
	000166	   020 	   020 	   020
	000171	   020 	   020 	   001
	000174	   003 	   001 	   001
	000177	   001
   2500
   2520	000200					DATA$	SRCH
   2540
   2600	000000				CNBOT:
   2700		000036'				.=.+<5*6>			;SPACE FOR ^N STACK
   2800									; 5 ENTRIES, 6 BYTES EACH
   2900	000036				CNSTK:				;LABEL DEFINED
   3000
   3100	000036	000000 			STRFST:	.WORD	0
   3200	000040	000000 			STRLST:	.WORD	0		;ADDRESS OF LAST STRING
   3300	000042	000000 			TXTAD:	.WORD	0		;CURRENT TEXT START ADR
   3400	000044	000000 			NFLG:	.WORD	0		;^N FAIL FLAG
   3500	000046	000000 			LINAD:	.WORD	0		;CURRENT LINE ADDRESS
   3600	000050				ARBPTR:				; POINTER TO ARB ENTRY CURRENT
   3700	000050	000000 			ARBCNT::.WORD	0		; COUNT OF ENTRIES IN ARB TABLE
   3800	000052				ARBTXT::.BLKW	2*50.		; POINTERS TO ARBITRARY TEXT IN LINE
   3900									;  2 WORDS/ENTRY, ROOM FOR 50 ENTRIES
   4000
   4020	000362					CODE$	SRCH
   4040
   4100	000200	000000 			SPCTBL:	.WORD	0	; 0	NULL - RESERVED FOR END OF SEARCH STRING
   4200	000202	001100'				.WORD	LLET	; ^A	ANY LETTER
   4300	000204	000000 				.WORD	0	;RESERVED - NEXT STRING IN S COMMAND
   4400	000206	000000 				.WORD	0	; ^C
   4500	000210	000000 				.WORD	0	; ^D
   4600	000212	001114'				.WORD	LNOT	; ^E	NEGATE NEXT POSITION
   4700	000214	001122'				.WORD	LUPC	; ^F	UPPER CASE LETTER
   4800	000216	000000 				.WORD	0	; ^G BELL
   4900	000220	000000 				.WORD	0	; ^H
   5000	000222	000000 				.WORD	0	; ^I TAB
   5100	000224	000000 				.WORD	0	; ^J LF
   5200	000226	000000 				.WORD	0	; ^K FF
   5300	000230	000000 				.WORD	0	; ^L VT
   5400	000232	000000 				.WORD	0	; ^M CR
   5500	000234	001144'				.WORD	LARBIT	; ^N	ANY NUMBER OF
   5600	000236	000000 				.WORD	0	;RESERVED - NEXT STRING IN S COMMAND
   5700	000240	001242'				.WORD	LDEC	; ^P	DECIMAL DIGIT
   5800	000242	000000 				.WORD	0	; ^Q
   5900	000244	000000 				.WORD	0	; ^R
   6000	000246	000000 				.WORD	0	; ^S
SRCH3   -  STRING SEARCH ROUTIN	MACRO M1110  22-AUG-78 05:36  PAGE 2-2


   6100	000250	001276'				.WORD	LANY	; ^T	MATCH ANY CHARACTER
   6200	000252	000000 				.WORD	0	; ^U
   6300	000254	001144'				.WORD	L1ARB	; ^V	AT LEAST ONE OF
   6400	000256	001314'				.WORD	LLCL	; ^W	LOWER CASE LETTER
   6500	000260	001230'				.WORD	LALP	; ^X	ALPHANUMERIC
   6600	000262	000000 				.WORD	0	; ^Y
   6700	000264	000000 				.WORD	0	; ^Z
   6800	000266	000000 				.WORD	0	;
   6900	000270	001336'				.WORD	LSPC	; 34	SPACE OR TAB
   7000	000272	001354'				.WORD	LEOL	; 35	EITHER END OF LINE
   7100	000274	001432'				.WORD	LQUOT	; 36	^^ QUOTE NEXT CHARACTER
   7200
SRCH3   -  STRING SEARCH ROUTIN	MACRO M1110  22-AUG-78 05:36  PAGE 3


    100	000276					CODE$	SRCH
    200
    300	000276				SEARCH:
    400	000276	004167 	000000G			JSR	R1,$SAV5	;SAVE ALL REGISTERS
    500	000302	012705 	000036'			MOV	#CNSTK,R5	;INIT STACK POINTER TO NULL
    600	000306	016602 	000026 			MOV	26(SP),R2	;ADDRESS OF FIRST LINE
    700	000312	010267 	000046'			MOV	R2,LINAD	;SAVE IT
    800	000316	066602 	000024 			ADD	24(SP),R2	;OFFSET TO START LOOKING AT
    900	000322	062702 	000010 			ADD	#10,R2		;TEXT START OFFSET
   1000	000326	010267 	000042'			MOV	R2,TXTAD	;ADR TO LOOK AT
   1100	000332	016603 	000022 			MOV	22(SP),R3	;STRING ADDRESSES
   1200	000336	011300 				MOV	(R3),R0		;NUMBER OF STRINGS
   1300	000340	006300 				ASL	R0
   1400	000342	060003 				ADD	R0,R3		;ADR OF LAST STRING
   1500	000344	016367 	000002 	000040'		MOV	2(R3),STRLST	;TEXT ADR LAST STRING
   1600	000352	016603 	000022 			MOV	22(SP),R3	;START OF STRINGS AGAIN
   1700	000356	005723 				TST	(R3)+		;FIRST PIOINTER
   1800	000360	010367 	000036'			MOV	R3,STRFST	;SAVE FIRST POINTER ADR
   1900
   2000	000364	016703 	000036'		STLIN:	MOV	STRFST,R3	;INIT STRING POINTER
   2100	000370	012304 			NXSTR:	MOV	(R3)+,R4	;THIS STRING TEXT ADDRESS
   2200	000372	016702 	000042'			MOV	TXTAD,R2	;TEXT TO START COMPARING
   2300	000376	020467 	000040'			CMP	R4,STRLST	;END OF STRINGS?
   2400	000402	001563 				BEQ	FAIL		;YES.  NO MATCH ON THIS PLACE
   2500	000404	105714 				TSTB	(R4)		; NULL STRING AFTER FIRST IS TO
   2600	000406	001770 				BEQ	NXSTR		; BE IGNORED - NO ERROR
   2700	000410	005000 				CLR	R0		;POSITIVE MATCH TO START
   2800	000412	005067 	000044'			CLR	NFLG		;NOT A ^N YET
   2900	000416	012767 	000052'	000050'		MOV	#ARBTXT,ARBPTR	; POINTER TO ARBITRARY TEXT PTRS
   3000
   3100	000424	112401 			REQCHR:	MOVB	(R4)+,R1	;CHAR IN SEARCH STRING
   3200	000426	001002 				BNE	TSTSPC		; CHECK IT IF CHAR THERE
   3300	000430	000167 	000422 			JMP	ERRISS		; BAD IF NONE
   3400	000434	105767 	000000G		TSTSPC:	TSTB	MATCHR		;ARE SPECIAL MATCH CHARACTERS ENABLED?
   3500	000440	001406 				BEQ	TSTCHR		;BRANCH IF NOT
   3600	000442	132761 	000002 	000000'		BITB	#2,TABLE(R1)	;SPECIAL CHARACTER?
   3700	000450	001402 				BEQ	TSTCHR		;NO..TEST FOR SIMPLE MATCH
   3800	000452	000167 	000406 			JMP	SPCCHR		; TRY SPECIAL CHARACTER ROUTINE
   3900	000456	121201 			TSTCHR:	CMPB	(R2),R1		;CHAR MATCH?
   4000	000460	001450 				BEQ	SAME		;YES.  A MATCH
   4100	000462	132761 	000020 	000000'		BITB	#20,TABLE(R1)	;A LETTER?
   4200	000470	001416 				BEQ	DIFF		;NO.  NO MATCH
   4300	000472	032767 	000000G	000000C		BIT	#EMATCH,SOSFLG+<FSFLG*2> ;A NON-EXACT MATCH OK?
   4400	000500	001012 				BNE	DIFF		;NO.  DIFFERENT
   4500	000502	032701 	000040 			BIT	#40,R1		;UPPER OR LOWER
   4600	000506	001003 				BNE	CHLC		;CHARACTER IN LOWER CASE
   4700	000510	052701 	000040 			BIS	#40,R1		;IF UPPER, MAKE LOWER
   4800	000514	000402 				BR	TSTLC
   4900	000516	042701 	000040 		CHLC:	BIC	#40,R1		;MAKE UPPER IF LOWER
   5000	000522	121201 			TSTLC:	CMPB	(R2),R1		;TEST ALTERNATE CASE
   5100	000524	001426 				BEQ	SAME		;TREAT AS SAME IF OK
   5200	000526	005700 			DIFF:	TST	R0		;DID WE WANT POS OR NEG
   5300	000530	100412 				BMI	MATCHA		;WANTED NON-MATCHA..OK
   5400	000532	020527 	000036'		NOMAT:	CMP	R5,#CNSTK	;A ^N PENDING?
   5500	000536	001714 				BEQ	NXSTR		;NO.  STRING FAILED
   5600	000540	005267 	000044'			INC	NFLG	;SET ^N FLAG FOR MATCH
   5700	000544	012567 	000050'			MOV	(R5)+,ARBPTR	; RESTORE POINTER TO STRINGS
SRCH3   -  STRING SEARCH ROUTIN	MACRO M1110  22-AUG-78 05:36  PAGE 3-1


   5800	000550	012502 				MOV	(R5)+,R2	;RESTORE THESE TWO
   5900	000552	012504 				MOV	(R5)+,R4	;POINTERS TO TEXT
   6000	000554	000723 				BR	REQCHR		;TRY ANOTHER OF THE ^N CHAR
   6100
   6200	000556	105712 			MATCHA:	TSTB	(R2)		; IF END OF LINE,
   6210	000560	001412 				BEQ	MATCH		; THEN DON'T ENTER ANOTHER ARBITRARY STRING
   6290	000562	016701 	000050'			MOV	ARBPTR,R1	; MATCH AN ARBITRARY CONSTRUCT
   6300	000566	010221 				MOV	R2,(R1)+	; SAVE STRING DESCRIPTOR IN TABLE
   6400	000570	012721 	000001 			MOV	#1,(R1)+	; SINGLE CHAR MATCHED HERE
   6500	000574	010167 	000050'			MOV	R1,ARBPTR	; NEXT ENTRY POINTER
   6600	000600	000402 				BR	MATCH		; CHAR WAS A MATCH
   6700
   6800	000602	005700 			SAME:	TST	R0		;WANT NEG MATCH?
   6900	000604	100752 				BMI	NOMAT		;YES.  NOT SAME THEN
   7000	000606	005767 	000044'		MATCH:	TST	NFLG		;A ^N PENDING
   7100	000612	001411 				BEQ	NOTN
   7200	000614	162705 	000006 			SUB	#6,R5		;UNDO THE THREE POPS
   7300	000620	005265 	000002 			INC	2(R5)		;AND INC THE TEXT POINTER
   7400	000624	011501 				MOV	(R5),R1		; ARBPTR FOR THIS ^N (+4)
   7500	000626	005261 	177776 			INC	-2(R1)		; LENGTH OF STRING JUST INCREASED
   7600	000632	010167 	000050'			MOV	R1,ARBPTR	; RESTART TABLE AFTER ^N POINT AGAIN
   7700	000636	005067 	000044'		NOTN:	CLR	NFLG		;CLEAR ^N FLAG
   7800	000642	005000 				CLR	R0		;AND POS/NEG INDICATOR
   7900	000644	105712 				TSTB	(R2)		;ANY MORE TEXT IN LINE
   8000	000646	001401 				BEQ	EOL		;NO.
   8100	000650	005202 				INC	R2		;INCREMENT TEXT POINTER
   8200	000652	112401 			EOL:	MOVB	(R4)+,R1	;NEXT SEARCH STRING CHAR
   8300	000654	001267 				BNE	TSTSPC		;NOT AT END..TEST FOR IT
   8400
   8500					;	MATCH FOUND...RETURN INFO ON IT
   8600
   8700	000656				FOUND:
   8800	000656	032767 	000000G	000000C		BIT	#NOMATC,SOSFLG+<2*FSFLG>	; NEGATIVE MATCH WANTED?
   8900	000664	001043 				BNE	RTFAIL			; IF SO, THIS LINE DOESN'T MATCH
   9000
   9100	000666				RTSUC:
   9200	000666	016601 	000016 			MOV	16(SP),R1	;POINTER TO RETURN AREA
   9300	000672	016721 	000046'			MOV	LINAD,(R1)+	;LINE ADDRESS
   9400	000676	016711 	000042'			MOV	TXTAD,(R1)	;COMPUTE OFFSET
   9500	000702	166711 	000046'			SUB	LINAD,(R1)	;TO START OF
   9600	000706	162721 	000010 			SUB	#10,(R1)+	;MATCHING STRING
   9700	000712	010211 				MOV	R2,(R1)		;TEXT LENGTH
   9800	000714	166711 	000042'			SUB	TXTAD,(R1)	;OF MATCHING SYTRING
   9900	000720	016700 	000050'			MOV	ARBPTR,R0	; COMPUTE THE NUMBER OF
  10000	000724	162700 	000052'			SUB	#ARBTXT,R0	; TEXT SUBSTRINGS WE FOUND
  10100	000730	006200 				ASR	R0
  10200	000732	006200 				ASR	R0
  10300	000734	010067 	000050'			MOV	R0,ARBCNT	; MAX VALUE FOR ?* <N> ?*
  10400	000740	010300 				MOV	R3,R0		;COMPUTE THE NUMBER
  10500	000742	166700 	000036'			SUB	STRFST,R0	;OF THE MATCHING STRING
  10600	000746	006200 				ASR	R0
  10700	000750	000207 				RTS	PC		;RETURN TO BLIS CODE
  10800
  10900	000752	105712 			FAIL:	TSTB	(R2)		;AT END OF LINE?
  11000	000754	001403 				BEQ	NXLIN		;YES. GET NEW ONE
  11100	000756	005267 	000042'			INC	TXTAD		;INC POINTER TO TEXT
  11200	000762	000600 				BR	STLIN
SRCH3   -  STRING SEARCH ROUTIN	MACRO M1110  22-AUG-78 05:36  PAGE 3-2


  11300
  11400	000764				NXLIN:
  11500	000764	032767 	000000G	000000C		BIT	#NOMATC,SOSFLG+<2*FSFLG>	; NEGATIVE MATCH WANTED?
  11600	000772	001335 				BNE	RTSUC			; IF SO, THIS LINE IS IT
  11700
  11800	000774				RTFAIL:
  11900	000774	016746 	000046'			MOV	LINAD,-(SP)	;GET ADDRESS OF
  12000	001000	012746 	000001 			MOV	#1,-(SP)	;NEXT LINE IN BUFFER
  12100	001004	004767 	000000G			JSR	PC,NXTLINE
  12200	001010	010067 	000046'			MOV	R0,LINAD	;SAVE LINE POINTER
  12300	001014	010066 	000002 			MOV	R0,2(SP)	;SEE IF PAST OUR RANGE
  12400	001020	016616 	000024 			MOV	24(SP),(SP)	;RANGE POINTER
  12500	001024	062700 	000010 			ADD	#10,R0		;SET TEXT POINTER
  12600	001030	010067 	000042'			MOV	R0,TXTAD
  12700	001034	004767 	000000G			JSR	PC,PSTRNG	;CHECK LIMITS
  12800	001040	022626 				CMP	(SP)+,(SP)+	;POP TWO
  12900	001042	005700 				TST	R0		;TEST RANGE
  13000	001044	001002 				BNE	10$
  13100	001046	000167 	177312 			JMP	STLIN		; OK TO CONTINUE
  13200	001052				10$:
  13300
  13400					;	END OF LINE OR RANGE, NO MATCH FOUND
  13500
  13600	001052	005000 				CLR	R0		;RETURN 0 FOR NO STRING
  13700	001054	000207 				RTS	PC		;RETURN
  13800
  13900	001056	012700 	177777 		ERRISS:	MOV	#-1,R0		;ERROR INDICATOR
  14000	001062	000207 				RTS	PC
  14100
  14200
SRCH3   -  STRING SEARCH ROUTIN	MACRO M1110  22-AUG-78 05:36  PAGE 4


    100	001064	020127 	000174 		SPCCHR:	CMP	R1,#174		; SPECIAL SPECIAL CHAR?
    200	001070	001564 				BEQ	LSEP		; YES .. SEPARATOR REQEST
    300	001072	006301 				ASL	R1		; ALL OTHERS USE JUMP TABLE
    400	001074	000171 	000200'			JMP	@SPCTBL(R1)	; GO TO IT!!!
    500
    600
    700	001100				LLET:			; ^A ?! ANY LETTER
    800	001100	111201 				MOVB	(R2),R1		; CHAR IN TEXT
    900	001102	136127 	000000'	000020 		BITB	TABLE(R1),#20	; IS IT A LETTER?
   1000	001110	001062 				BNE	SPCSAM		; YES..
   1100	001112	000467 				BR	LDIFF		; NO
   1200
   1300	001114				LNOT:			; ^E ?% NOT OF NEXT CHARACTER
   1400	001114	005100 				COM	R0		; SET FLAG
   1500	001116	000167 	177302 			JMP	REQCHR		; MUST HAVE ANOTHER AFTER IT
   1600
   1700	001122				LUPC:			; ^F ?& UPPER CASE LETTER
   1800	001122	111201 				MOVB	(R2),R1		; GET CHAR TO MATCH
   1900	001124	136127 	000000'	000020 		BITB	TABLE(R1),#20	; IS IT A LETTER?
   2000	001132	001457 				BEQ	LDIFF		; NO
   2100	001134	030127 	000040 			BIT	R1,#40		; CHECK CASE
   2200	001140	001054 				BNE	LDIFF		; LOWER - YOU LOOSE
   2300	001142	000445 				BR	SPCSAM		; UPPER - MATCH
   2400
   2500	001144				LARBIT:			; ^N ?) ANY NUMBER OF
   2600	001144				L1ARB:			; ^V ?1 AT LEAST 1 OF
   2700	001144	020527 	000000'			CMP	R5,#CNBOT	; TOO MANY ALREADY?
   2800	001150	001742 				BEQ	ERRISS		; YES - STACK OVERFLOW
   2900	001152	010445 				MOV	R4,-(R5)	; PUSH POINTER TO STRING MATCH CHAR
   3000	001154	010245 				MOV	R2,-(R5)	; AND POINTER INTO TEXT LINE
   3100	001156	016701 	000050'			MOV	ARBPTR,R1	; NEXT ENTRY IN TABLE
   3200	001162	010221 				MOV	R2,(R1)+	; START OF MATCHING STRING
   3300	001164	005021 				CLR	(R1)+		; LEN IS ZERO SO FAR
   3400	001166	010145 				MOV	R1,-(R5)	; SAVE POINTER TO TABLE ENTRY
   3500	001170	010167 	000050'			MOV	R1,ARBPTR	; ALSO FOR NEXT GUY
   3600	001174	126427 	177777 	000026 		CMPB	-1(R4),#'V-100	; WAS IT "1 OR MORE"
   3700	001202	001002 				BNE	10$		; NO..0 OK
   3800	001204	000167 	177322 			JMP	NOMAT		; FORCE AT LEAST ONE
   3900	001210	112401 			10$:	MOVB	(R4)+,R1	; PASS OVER THE CHAR WE MATCH
   4000	001212	001721 				BEQ	ERRISS		; MUST BE ONE THERE
   4100	001214	136127 	000000'	000004 		BITB	TABLE(R1),#4	; PASS OVERABLE?
   4200	001222	001372 				BNE	10$		; YES.
   4300	001224	000167 	177174 			JMP	REQCHR		; MUST HAVE ANOTHER AFTER THIS
   4400
   4500
   4600	001230				LALP:			; ^X ?9 ALPHANUMERIC
   4700	001230	111201 				MOVB	(R2),R1		; CHAR TO TEST
   4800	001232	136127 	000000'	000020 		BITB	TABLE(R1),#20	; A LETTER?
   4900	001240	001006 				BNE	SPCSAM		; YES..DEFINITELY OK
   5000
   5100	001242				LDEC:			; ^P ?+ DECIMAL DIGIT
   5200	001242	121227 	000060 			CMPB	(R2),#'0	; CHECK RANGE
   5300	001246	002411 				BLT	LDIFF
   5400	001250	121227 	000071 			CMPB	(R2),#'9
   5500	001254	003006 				BGT	LDIFF
   5600	001256				SPCSAM:
   5700	001256	005700 				TST	R0			; WANTED AN INVERS MATCH?
SRCH3   -  STRING SEARCH ROUTIN	MACRO M1110  22-AUG-78 05:36  PAGE 4-1


   5800	001260	100402 				BMI	LNOMAT			; YES..NOT A MATCH THEN
   5900	001262	000167 	177270 		LMATA:	JMP	MATCHA			; WAS A MATCH, INCLUDE IN TABLE
   6000	001266	000167 	177240 		LNOMAT:	JMP	NOMAT			; NOT A MATCH
   6100
   6200	001272	000167 	177230 		LDIFF:	JMP	DIFF			; CHARACTERS ARE DIFFERENT
   6300
   6400	001276				LANY:			; ^T ?/ ANY CHARACTER
   6500	001276	005700 				TST	R0		; MATCHING?
   6600	001300	100002 				BPL	10$
   6700	001302	105714 				TSTB	(R4)		; ^E^T MUST BE AT END
   6800	001304	001664 				BEQ	ERRISS
   6900	001306	105712 			10$:	TSTB	(R2)		; ONLY THING NOT MATCHING IS EOL
   7000	001310	001770 				BEQ	LDIFF
   7100	001312	000761 				BR	SPCSAM
   7200
   7300	001314				LLCL:			; ^W ?2 LOWER CASE LETTER
   7400	001314	111201 				MOVB	(R2),R1		; CHAR TO TEST
   7500	001316	136127 	000000'	000020 		BITB	TABLE(R1),#20	; A LETTER?
   7600	001324	001762 				BEQ	LDIFF		; NO
   7700	001326	032701 	000040 			BIT	#40,R1		; CORRECT CASE?
   7800	001332	001757 				BEQ	LDIFF		; NO..DIFFERENT
   7900	001334	000750 				BR	SPCSAM
   8000
   8100	001336				LSPC:			; ^\ ?< SPACE OR TAB
   8200	001336	121227 	000011 			CMPB	(R2),#11
   8300	001342	001745 				BEQ	SPCSAM
   8400	001344	121227 	000040 			CMPB	(R2),#40
   8500	001350	001742 				BEQ	SPCSAM
   8600	001352	000747 				BR	LDIFF
   8700
   8800	001354				LEOL:			; ^] ?> EITHER END OF LINE
   9100	001354	010201 				MOV	R2,R1		; CHECK FOR BEGINNING OF LINE
   9200	001356	166701 	000046'			SUB	LINAD,R1	; COMPUTE OFFSET FROM START
   9300	001362	020127 	000010 			CMP	R1,#10		; TEXT OFFSET?
   9400	001366	001010 				BNE	30$		; NOT SAME, NOT BEGIN OF LINE
   9410	001370	005700 				TST	R0		; WANTED AN INVERSE MATCH?
   9420	001372	100733 				BMI	LMATA		; BRANCH IF YES, TREAT (R2) AS THE CHAR
   9430									; MATCHING "NOT BOL" OR "NOT EOL"
   9470	001374	126414 	177777 			CMPB	-1(R4),(R4)	; IS NEXT MATCH FOR EOL?
   9480	001400	001402 				BEQ	20$		; BRANCH IF YES, CHECK FOR EOL
   9500	001402	000167 	177244 		10$:	JMP	EOL		; DON'T INC LINE TEXT POINTER
   9510	001406	005204 			20$:	INC	R4		; PROCESSING NEXT MATCH CHARACTER
   9520	001410	105712 			30$:	TSTB	(R2)		; AT EOL?
   9530	001412	001327 				BNE	LDIFF		; BRANCH IF NOT
   9540	001414	005700 				TST	R0		; INVERSE MATCH DESIRED?
   9550	001416	100723 				BMI	LNOMAT		; BRANCH IF YES, NOT A MATCH
   9560	001420	126414 	177777 			CMPB	-1(R4),(R4)	; IS NEXT MATCH CHAR IS ALSO FOR EOL?
   9570	001424	001366 				BNE	10$		; BRANCH IF NOT, GOT A MATCH FOR EOL
   9580	001426	005204 				INC	R4		; DOUBLE EOL DOES NOT MATCH
   9590	001430	000716 				BR	LNOMAT
   9700	001432				LQUOT:			; ^^ ?7 QUOTE NEXT CHARACTER
   9800	001432	112401 				MOVB	(R4)+,R1	; GET NEXT CHARACTER
   9900	001434	001610 				BEQ	ERRISS		; MUST BE ONE
  10000	001436	000167 	177014 			JMP	TSTCHR		; TEST IT DIRECTLY
  10100
  10200	001442				LSEP:			; VERTICAL BAR  ?: SEPARATOR
  10300	001442	111201 				MOVB	(R2),R1		; CHAR TO TEST
SRCH3   -  STRING SEARCH ROUTIN	MACRO M1110  22-AUG-78 05:36  PAGE 4-2


  10400	001444	136127 	000000'	000001 		BITB	TABLE(R1),#1	; A SURE SEP?
  10500	001452	001301 				BNE	SPCSAM
  10600	001454	136127 	000000'	000010 		BITB	TABLE(R1),#10	; A MAYBE SEP?
  10700	001462	001703 				BEQ	LDIFF		; NOT EVEN THAT
  10800	001464	032767 	000000G	000000G		BIT	#SEPARATOR,SOSFLG	; /SEPARATOR SET?
  10900	001472	001677 				BEQ	LDIFF
  11000	001474	000670 				BR	SPCSAM
  11100
  11200		000001 				.END
SRCH3   -  STRING SEARCH ROUTIN	MACRO M1110  22-AUG-78 05:36  PAGE 4-3
SYMBOL TABLE

ARBCNT  000050RG    003	LALP    001230R     002	LSEP    001442R     002	NXTLIN= ****** G 	SPCCHR  001064R     002
ARBPTR  000050R     003	LANY    001276R     002	LSPC    001336R     002	PSTRNG= ****** G 	SPCSAM  001256R     002
ARBTXT  000052RG    003	LARBIT  001144R     002	LUPC    001122R     002	REQCHR  000424R     002	SPCTBL  000200R     002
CHLC    000516R     002	LDEC    001242R     002	L1ARB   001144R     002	RONLY$= 000001   	STLIN   000364R     002
CNBOT   000000R     003	LDIFF   001272R     002	MATCH   000606R     002	RTFAIL  000774R     002	STRFST  000036R     003
CNSTK   000036R     003	LEOL    001354R     002	MATCHA  000556R     002	RTSUC   000666R     002	STRLST  000040R     003
DIFF    000526R     002	LINAD   000046R     003	MATCHR= ****** G 	R$$EIS= 000001   	TABLE   000000R     002
EMATCH= ****** G 	LLCL    001314R     002	NFLG    000044R     003	R$$SHR= 000001   	TSTCHR  000456R     002
EOL     000652R     002	LLET    001100R     002	NOMAT   000532R     002	SAME    000602R     002	TSTLC   000522R     002
ERRISS  001056R     002	LMATA   001262R     002	NOMATC= ****** GX	SEARCH  000276RG    002	TSTSPC  000434R     002
FAIL    000752R     002	LNOMAT  001266R     002	NOTN    000636R     002	SEPARA= ****** G 	TXTAD   000042R     003
FOUND   000656R     002	LNOT    001114R     002	NXLIN   000764R     002	SOSFLG= ****** G 	$SAV5 = ****** G
FSFLG = ****** GX	LQUOT   001432R     002	NXSTR   000370R     002

. ABS.	000000	   000
      	000000	   001
CODE  	001476	   002
SRCH.D	000362	   003
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  1008 WORDS  ( 4 PAGES)
DYNAMIC MEMORY:  2772 WORDS  ( 10 PAGES)
ELAPSED TIME:  00:00:08
OBJ$:SRCH3,LIS$:SRCH3/-SP/NL:TOC=SRC$:PREFIX,SRCH3
