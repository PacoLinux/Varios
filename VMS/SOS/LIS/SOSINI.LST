SOSINI - INITIALIZATION  CODE	MACRO M1110  22-AUG-78 05:32  PAGE 2


    100						.TITLE	SOSINI - INITIALIZATION  CODE
    200						.IDENT	/020600/
    300					;
    400					; COPYRIGHT 1978, DIGITAL EQUIPMENT CORP., MAYNARD, MASS. 01754
    500					;
    600					; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
    700					; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
    800					;
    900					; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
   1000					; ON A SINGLE COMPUTER SYSTEM AND CAN BE COPIED (WITH INCLUSION
   1100					; OF DEC'S COPYRIGHT NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
   1200					; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
   1300					;
   1400					; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
   1500					; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
   1600					; EQUIPMENT CORPORATION.
   1610					;
   1620					;	06	7-AUG-78	PETER H. LIPMAN
   1630					;
   1640					;	PLACE GLOBAL ON PRINT LINES PER PAGE FOR TKB GLOBAL PATCH
   1650					;
   1700					;
   1800						.MCALL	FDOF$L,FCSBT$,IOERR$,FSROF$
   1900	000000					FDOF$L
   2000	000000					FCSBT$
   2100	000000					IOERR$
   2200	000000					FSROF$	DEF$L
   2300
   2400						.MCALL	FINIT$,OFNB$,CLOSE$
   2500						.MCALL	GCML$,CSI$1,CSI$2,EXTK$S
SOSINI - INITIALIZATION  CODE	MACRO M1110  22-AUG-78 05:32  PAGE 3
INIT - SOS INITIALIZATION FOR BLISS

    100						.SBTTL	INIT - SOS INITIALIZATION FOR BLISS
    200
    300	000000					CODE$	INI
    310
    315					;
    320					; FAKE A HELP COMMAND, EXECUTE IT AND EXIT
    325					;
    330	000000				INIHLP:
    340	000000	012703 	035110 			MOV	#"H:,R3			;COMMAND AND DELIMITER
    350	000004	016704 	000000G			MOV	HELPAG,R4		;NUMBER TO CONVERT TO DECIMAL STRING
    360	000010	004767 	002202 			JSR	PC,BLDCMD		;BUILD A COMMAND
    370	000014	012746 	177777 			MOV	#-1,-(SP)		;SOSCMD(-1)
    380	000020	012746 	000000G			MOV	#EXIT,-(SP)		;EXIT AFTER EXECUTING THIS COMMAND
    390	000024	000167 	000000G			JMP	SOSCMD			;EXECUTE THE HELP COMMAND
    460					;
    470					; 0(SP) = 0, PARAMETER TO SOSCMD
    480					;
    570	000030	012746 	000000G			MOV	#EXIT,-(SP)		;EXIT AFTER THIS COMMAND
    580	000034	000167 	000000G			JMP	SOSCMD			;EXECUTE THE HELP COMMAND
    590
    600	000040	000167 	000000G		EXIT2:	JMP	EXIT
    610
    700	000044				ENTRY	INIT				;INIT ENTRY POINT
    800	000044	004167 	000000G			JSR	R1,$SAV5		;SAVE ALL REGS
    900	000050					FINIT$				;INIT FCS
   1000	000054	005067 	000000G			CLR	PAGLOW			;INIT THESE GLOBALS
   1100	000060	012767 	177777 	000000G		MOV	#177777,PAGHIG		;LOWEST AND HIGHEST PAGES
   1200	000066	005046 				CLR	-(SP)			;FIRST GET COMMAND LINE FLAG
   1300
   1400	000070	004767 	002056 		TRYAGN:	JSR	PC,INIFLG		;INIT SOSFLG PARAMETERS
   1500
   1600						.IF	NDF,R$$STS
   1700	000074	004767 	000000G			JSR	PC,ATACH1		;ATTACH THE TERMINAL
   1800						.ENDC
   1900
   2000	000100	012767 	054523 	000000G		MOV	#"SY,DFDEV		;INIT DEFAULT TO SY0:
   2100	000106	005067 	000000G			CLR	DFUNIT			;SO RETRY GETS RIGHT ONE
   2200	000112					GCML$	#GCMLB,#INIPR,#INIPRL	;GET COMMAND
   2300	000136	103007 				BCC	50$			;BRANCH IF SUCCESSFUL
   2400	000140	122767 	177766 	000140G		CMPB	#GE.EOF,GCMLB+G.ERR	;IF EOF
   2500	000146	001734 				BEQ	EXIT2			;THEN EXIT QUIETLY
   2600	000150	004767 	000000G			JSR	PC,GCMLER		;ANALYZE THE ERROR
   2700	000154	000745 				BR	TRYAGN			;TRY AGAIN IF REAL ERROR
   2800	000156	005716 			50$:	TST	(SP)			;FIRST COMMAND?
   2900	000160	001003 				BNE	100$			;BRANCH IF NOT
   3000	000162	004767 	000000G			JSR	PC,.GCML4		;READ THROUGH MCR LINE EOF
   3100	000166	005216 				INC	(SP)			;NOT FIRST COMMAND LINE
   3200	000170				100$:
   3300						.IF	NDF,R$$STS
   3400	000170	004767 	000000G			JSR	PC,ATACH1		;REATTTACH AFTER GCML
   3500						.ENDC
   3600
   3700	000174	005767 	000000G			TST	CTLCFL			;CONTROL C SEEN?
   3800	000200	001317 				BNE	EXIT2			;BRANCH IF YES, EXIT QUIETLY
   3900
   4000	000202	005767 	000146G			TST	GCMLB+G.CMLD		;EMPTY LINE?
   4100	000206	001730 				BEQ	TRYAGN			;BRANCH IF YES
SOSINI - INITIALIZATION  CODE	MACRO M1110  22-AUG-78 05:32  PAGE 3-1
INIT - SOS INITIALIZATION FOR BLISS

   4200	000210	004767 	000000G			JSR	PC,LODSWT		;LOAD THE SWITCH TABLES
   4300	000214					CSI$1	#CSIBLK,GCMLB+G.CMLD+2,GCMLB+G.CMLD
   4400	000240	103526 				BCS	210$
   4500	000242	016767 	000002G	000146G		MOV	CSIBLK+C.CMLD,GCMLB+G.CMLD ;GET DESCRIPTOR FOR
   4600	000250	016767 	000004G	000150G		MOV	CSIBLK+C.CMLD+2,GCMLB+G.CMLD+2 ;POSSIBLY BLANK COMPRESSED LINE
   4700	000256	005067 	000000G			CLR	OPTNAM			;INITIALLY NO OPTION STRING
   4800	000262					CSI$2	R0,OUTPUT,#ISWTAB	;PROCESS OUTPUT FILE SWITCHES
   4900	000300	103564 				BCS	240$
   5000	000302	132767 	000040 	000001G		BITB	#CS.EQU,CSIBLK+C.STAT	;INPUT SECIFIER TOO?
   5100	000310	001410 				BEQ	120$			;BRANCH IF NO
   5200	000312					CSI$2	R0,INPUT,#ISWTAB	;PROCESS INPUT SWITCHES
   5300	000330	103550 				BCS	240$
   5400	000332	022767 	000000G	000000G	120$:	CMP	#VALHEL,GIVWRD		;HELP SWITCH SPECIFIED?
   5410	000340	001617 				BEQ	INIHLP			;INITIAL HELP REQUEST
   5490	000342	016701 	000002G			MOV	BUF+2,R1		;BUFFER SPACE AVAILABLE
   5500	000346	016700 	000000C			MOV	SOSFLG+<BUFSZ*2>,R0	;USER SPECIFIED BUFFER EXTENSION
   5600	000352	001005 				BNE	160$			;BRANCH IF SPECIFIED
   5700	000354	020127 	000000G			CMP	R1,#MINBF		;ALREADY HAVE ENOUGH BUFFER SPACE?
   5800										;FROM INS OR RUN /INC=DECIMAL BYTES
   5900	000360	103031 				BHIS	180$			;BRANCH IF YES
   6000	000362	012700 	000000G			MOV	#DFLTBF,R0		;USE DEFAULT BUFFER SIZE
   6100										;TASK BUILD PARAMETER
   6200	000366	010067 	000002G		160$:	MOV	R0,BUF+2		;USE EXACTLY WHAT IS DESIRED
   6300	000372	062700 	000077 			ADD	#77,R0			;ROUND UP
   6400	000376	042700 	000077 			BIC	#77,R0			;TO NEAREST MULTIPLE OF 64. BYTE BLOCKS
   6500					;
   6600					; R0 = NO. OF BYTES DESIRED, R1 = NO. OF BYTES ALREADY AVAILABLE
   6700					;
   6800	000402	042701 	000077 			BIC	#77,R1			;CHOP TO NEAREST 64 BYTES
   6900	000406	160100 				SUB	R1,R0			;NUMBER OF BYTES TO ADD (SUB)
   7000
   7100						.IF	DF,R$$EIS		;EXTENDED INSTRUCTION SET
   7200	000410	006000 				ROR	R0			;MAKE SURE SIGN BIT IS 0
   7300	000412	072027 	177773 			ASH	#-5,R0			;TOTAL OF 6 BITS RIGHT
   7400
   7500						.IFF	;R$$EIS
   7600						.REPT	6
   7700						ROR	R0
   7800						.ENDR
   7900						.ENDC	;R$$EIS
   8000
   8100	000416					EXTK$S	R0			;EXTEND (CONTRACT) TASK
   8200	000430	103005 				BCC	180$			;BRANCH IF SUCCESSFUL
   8300	000432	004167 	000000G			JSR	R1,PRTINL		;PRINT MESSAGE
   8400	000436	002336'				.WORD	NOBUF			;NO TEXT BUFFER SPACE
   8500	000440	000167 	177374 			JMP	EXIT2			;AND EXIT
   8600	000444	016705 	000000G		180$:	MOV	SOSFLG,R5		;SAVE THE FLAG WORD
   8700	000450	004767 	001476 			JSR	PC,INIFLG		;AND REINIT
   8800	000454	032705 	000000G			BIT	#NOOPT,R5		;/NOOPTION ?
   8900	000460	001004 				BNE	200$
   9000	000462	004767 	000000G			JSR	PC,INITSW		;NO, THEN DO SWITCH.INI STUFF
   9100	000466	004767 	000000G			JSR	PC,SWSET		;COMPLETE ANY SWITCH SETTINGS
   9200	000472				200$:	CSI$1	#CSIBLK,GCMLB+G.CMLD+2,GCMLB+G.CMLD ;SET UP TO RESCAN
   9300	000516	103452 			210$:	BCS	230$
   9400	000520	132767 	000040 	000001G		BITB	#CS.EQU,CSIBLK+C.STAT	;WAS IT FILE=FILE?
   9500	000526	001454 				BEQ	250$			;NO. JUST FILE<CR>
   9600	000530					CSI$2	#CSIBLK,INPUT,#ISWTAB	;GET INPUT FILE
SOSINI - INITIALIZATION  CODE	MACRO M1110  22-AUG-78 05:32  PAGE 3-2
INIT - SOS INITIALIZATION FOR BLISS

   9700	000552	103437 				BCS	240$
   9800	000554	012700 	000000G			MOV	#FILEIN,R0		;FDB POINTER
   9900	000560	004767 	001146 			JSR	PC,MOVFIL		;SAVE AND PARSE FILE
  10000	000564					CSI$2	#CSIBLK,OUTPUT,#ISWTAB	;GET OUTPUT FILE NOW
  10100	000606	103421 				BCS	240$
  10200	000610	012700 	000000G			MOV	#FILEOUT,R0		;SET FDB POINTER FOR
  10300	000614	004767 	001112 			JSR	PC,MOVFIL		;FILE AND PARSE IT
  10400	000620	012704 	000116 			MOV	#FO.WRT!FA.NSP,R4	;SET OPEN FLAGS
  10500	000624	012767 	000004 	000000G		MOV	#4,FILUSE		;AND FILE STATUS
  10600	000632	012700 	000000G			MOV	#FILEOUT,R0
  10700	000636	004767 	000744 			JSR	PC,STDFDV		;SET DEFAULT DEV FROM OUT FILE
  10800	000642	000444 				BR	300$
  10900	000644	004567 	001042 		230$:	JSR	R5,ERR			;CSI$1 ERROR
  11000	000650	000000G				.WORD	ERMSG1
  11100	000652	004567 	001034 		240$:	JSR	R5,ERR			;CSI$2 ERROR
  11200	000656	000000G				.WORD	ERMSG2
  11300
  11400	000660				250$:	CSI$2	#CSIBLK,OUTPUT,#ISWTAB	;GET ONLY FILE GIVEN
  11500	000702	103763 			270$:	BCS	240$
  11600	000704	012700 	000000G			MOV	#FILEIN,R0		;FDB POINTER FOR PARSE
  11700	000710	004767 	001016 			JSR	PC,MOVFIL		;SETUP FDB
  11800	000714	012767 	000002 	000000G		MOV	#2,FILUSE		;SINGLE FILE INPUT FLAG
  11900	000722	012700 	000000G			MOV	#FILEIN,R0
  12000	000726	004767 	000654 			JSR	PC,STDFDV		;SET DEFAULT DEV FROM INPUT FILE
  12100	000732	012746 	000000G			MOV	#FILEOUT,-(SP)		;PARAMS FOR DEFAULT
  12200	000736	012746 				MOV	(PC)+,-(SP)		;OF OUTPT FILE
  12300	000740	077447 				.RAD50	/TM1/			;AS SOS0NN.TMP
  12400	000742	004767 	000000G			JSR	PC,SETFIL		;SET IT UP
  12500	000746	022626 				CMP	(SP)+,(SP)+		;POP 2
  12600	000750	012704 	000016 			MOV	#FO.WRT,R4		;OPEN FLAGS..WILL SUPERSCEDE
  12700
  12800	000754	012700 	000000G		300$:	MOV	#FILEIN,R0		;SETUP FDB FOR OPEN
  12900	000760	012760 	001000 	000030 		MOV	#512.,F.OVBS(R0)	;BUFFER SIZE
  13000
  13100						.IF	DF,R$$STS
  13200						MOV	F.DVNM+FILEIN,-(SP)	;SAVE GENERIC DEVICE
  13300						MOV	F.UNIT+FILEIN,-(SP)	;AND UNIT SO WE CAN
  13400						.ENDC				;USE ENTIRE STRUCTURE
  13500	000766	010046 				MOV	R0,-(SP)		;PARAMETER TO OPEN
  13510	000770	004767 	000000G			JSR	PC,OPN1ST		;OPEN INPUT FILE
  13520										;SET UP FOR STREAM MODE IF
  13530										;INTERNAL CARRIAGE CONTROL
  13540	000774	006100 				ROL	R0			;SET C BIT ACCORDING TO SIGN OF R0
  13550	000776	012600 				MOV	(SP)+,R0		;RECOVER FDB ADDRESS
  13600
  13700						.IF	DF,R$$STS
  13800						MOV	(SP)+,F.UNIT+FILEIN	;RESTORE GENERIC UNIT
  13900						MOV	(SP)+,F.DVNM+FILEIN	;RESTORE GENERIC DEVICE
  14000						.ENDC
  14100
  14200	001000	103034 				BCC	390$			;DID IT?
  14300	001002	126727 	000052G	177746 		CMPB	F.ERR+FILEIN,#IE.NSF	;NO SUCH FILE
  14400	001010	001025 				BNE	380$			;NO   BAD ERROR
  14500	001012	022767 	000002 	000000G		CMP	#2,FILUSE		;SINGLE FILE GIVEN?
  14600	001020	001403 				BEQ	360$			;BRANCH IF YES, TRY CREATING IT
  14700	001022	004567 	000664 		340$:	JSR	R5,ERR
  14800	001026	000000G				.WORD	ERMSG3			;INPUT FILE DOES NOT EXIST
SOSINI - INITIALIZATION  CODE	MACRO M1110  22-AUG-78 05:32  PAGE 3-3
INIT - SOS INITIALIZATION FOR BLISS

  14900	001030	032767 	000000G	000000G	360$:	BIT	#RONLY,SOSFLG		;WAS IT SPEC READONLY?
  15000	001036	001371 				BNE	340$			;BRANCH IF YES, DOESN'T EXIST
  15100	001040	012700 	000000G			MOV	#FILEOUT,R0		;SET UP FOR INPUT OF
  15200	001044	004767 	000662 			JSR	PC,MOVFIL		;THE GIVEN FILE
  15300	001050	012767 	000001 	000000G		MOV	#1,FILUSE
  15400	001056	012704 	000016 			MOV	#FO.WRT,R4		;OUTPUT FLAG FOR OPEN
  15500	001062	000427 				BR	440$
  15600	001064	004567 	000602 		380$:	JSR	R5,FERR
  15700	001070	000000G				.WORD	ERMSG4			;INPUT FILE OPEN ERR
  15710
  15720	001072	112767 	000002 	000001G	390$:	MOVB	#FD.CR,FILEOUT+F.RATT	;INITIALIZE CARRIAGE CONTROL
  15730	001100	132760 	000001 	000001 		BITB	#FD.FTN,F.RATT(R0)	;IF INPUT FILE HAS FORTRAN CAR CTL
  15740	001106	001403 				BEQ	395$
  15750	001110	116067 	000001 	000001G		MOVB	F.RATT(R0),FILEOUT+F.RATT ;USE IT FOR OUTPUT AS WELL
  15810	001116	132760 	000041 	000017 	395$:	BITB	#FD.REC!FD.SQD,F.RCTL(R0) ;IF NOT RECORD OR SEQUENTIAL DEVICE
  15820	001124	001006 				BNE	400$
  15830	001126	016067 	000012 	000034G		MOV	F.EFBK+2(R0),FILEOUT+F.CNTG ;USE FILE SIZE FOR OUTPT FILE SIZE
  15840	001134	002402 				BLT	400$			;NEGATIVE ALREADY MEANS VERY BIG FILE
  15850	001136	005467 	000034G			NEG	FILEOUT+F.CNTG		;NEGATIVE FOR NON-CONTIGUOUS.
  15900	001142				400$:
  15950						.IF	DF,R$$STS
  16000						CMP	FILUSE,#2		; IF A SINGLE FILE IS BEING
  16100						BNE	420$			; EDITED, AND IT IS
  16200						MOV	#FILEIN+F.FNB,R0	; UNDER A DIFFERENT ACCOUNT,
  16300										; RSTS MUST MAKE IT FILE=FILE
  16400						TST	N.DID(R0)		;  --DEFAULT ACCOUNT?
  16500						BEQ	420$			;    YES - OK
  16600						MOV	@#.FSRPT,R1
  16700						CMP	N.DID(R0),A.DFUI(R1)	;  --SPECIFIED AS OURSELVES?
  16800						BEQ	420$			;     ALSO OK
  17400						MOV	#FILEOUT+F.FNB,R1	; CHANGE INPUT SPEC TO
  17500						MOV	#S.FNB/2,R2		; FORM  <FILE>=<FILE>
  17600					410$:	MOV	(R0)+,(R1)+
  17700						SOB	R2,410$			;  (FILUSE=4)
  17800						MOV	#FILEOUT+F.FNB,R0
  17900						CLR	N.FID(R0)		; CLEAR FILEID FIELD
  18000						CLR	N.FID+2(R0)		; FOR NEW OPEN
  18100						CLR	N.FID+4(R0)
  18200						CLR	N.FVER(R0)		; VERSION NUMBER FOR NEW FILE
  18400						CLR	N.DID(R0)		; PUT IT IN OUR DIRECTORY IN RSTS
  18700						MOV	#4,FILUSE		; SET NEW FILE STATUS VALUE
  18800						MOV	#FO.WRT!FA.NSP,R4	; SET OUTPUT OPEN OPTIONS
  18900					420$:
  19100						TSTB	FILEIN+F.RTYP		;SEE IF RMS FILE
  19200						BNE	430$			;ATTRIBUTES KNOWN, NO DFLT
  19300						MOVB	#R.STRM,FILEIN+F.RTYP	;SET STREAM INPUT TYPE
  19400						BR	440$			;NO RMS OUTPUT IF NO ATTRIBUTES
  19500					430$:	CMPB	#R.STRM,FILEIN+F.RTYP	;IS IT STREAM INPUT?
  19600						BEQ	440$			;YES..OUTPUT SAME THEN
  19700						BIT	#RMSFIL,CSIBLK+C.MKW1	;/RMS OR /-RMS GIVEN?
  19800						BNE	440$			;YES..LEAVE AS STATED
  19900						BIS	#RMSFIL,SOSFLG		;UNSPEC - DEFAULT TO RMS OUTPUT
  20000						.ENDC
  20100
  20200	001142	032767 	000000G	000000G	440$:	BIT	#RONLY,SOSFLG		;IF READ ONLY MODE
  20300	001150	001036 				BNE	500$			;DON'T OPEN OUTPUT FILE
  20400	001152					OFNB$	#FILEOUT,R4		;OPEN OUTPUT
SOSINI - INITIALIZATION  CODE	MACRO M1110  22-AUG-78 05:32  PAGE 3-4
INIT - SOS INITIALIZATION FOR BLISS

  20500	001166	103027 				BCC	500$			;IT DID!!
  20600	001170					CLOSE$	#FILEIN			;ERROR - CLOSE INPUT
  20700	001200	126727 	000052G	177707 		CMPB	F.ERR+FILEOUT,#IE.DUP	;ALREADY EXIST?
  20800	001206	001003 				BNE	450$			;NO.  BAD ONE
  20900	001210	004567 	000476 			JSR	R5,ERR
  21000	001214	000000G				.WORD	ERMSG5			;OUTPUT FILE EXISTS
  21100	001216	012700 	000000G		450$:	MOV	#FILEOUT,R0		;RECOVER OUTPUT FDB ADDRESS
  21110
  21120						.IF	NDF,R$$STS
  21130	001222	126027 	000052 	177760 		CMPB	F.ERR(R0),#IE.PRI	;IF PRIVILEGE VIOLATION
  21140	001230	001003 				BNE	470$
  21150	001232	004567 	000434 			JSR	R5,FERR
  21160	001236	000000G				.WORD	ERMS15			;DEVICE OR DIRECTORY WRITE PROTECTED
  21170	001240				470$:
  21180						.ENDC
  21190
  21200	001240	004567 	000426 			JSR	R5,FERR
  21300	001244	000000G				.WORD	ERMSG6			;TROUBLE WITH OUTPUT
  21400
  21500	001246	012746 	000000G		500$:	MOV	#BUF,-(SP)		;NOW INITIALIZE BUFFER
  21600	001252	004767 	000000G			JSR	PC,BUFINIT
  21700	001256	005726 				TST	(SP)+			;POP 1
  21800	001260	132767 	000041 	000017G		BITB	#FD.REC!FD.SQD,FILEIN+F.RCTL   ;SEQUENTIAL?
  21900	001266	001402 				BEQ	520$			;NO  NO PROBLEM
  22000	001270	005267 	000032G			INC	BUF+26.			;INSURE NO WRAP IN FILE
  22100	001274	022767 	000002 	000000G	520$:	CMP	#2,FILUSE		;SINGLE FILE?
  22200	001302	001007 				BNE	550$
  22300	001304	032767 	000000C	000000G		BIT	#RONLY!NOBAK,SOSFLG	;EITHER OF THESE OPTIONS?
  22400	001312	001403 				BEQ	550$
  22500	001314	012767 	000003 	000000G		MOV	#3,FILUSE		;YES YES - DO NOT BACKUP
  22600	001322	026727 	000000G	000001 	550$:	CMP	FILUSE,#1		;INPUT A FILE?
  22700	001330	001011 				BNE	600$
  22800	001332	012746 	000000G			MOV	#BUF,-(SP)		;PARAM FOR
  22900	001336	004767 	000000G			JSR	PC,ENDFILE		;ENDFILE ROUTINE
  23000	001342	012716 	002410'			MOV	#MINP,(SP)		;SET INPUT MESSAGE
  23100	001346	012701 	000000G			MOV	#FILEOUT,R1		;FDB POINTER
  23200	001352	000425 				BR	700$
  23300	001354	012746 	000000G		600$:	MOV	#BUF,-(SP)		;PARAM FOR GET
  23400	001360	012746 	000000G			MOV	#FILEIN,-(SP)
  23500	001364	004767 	000000G			JSR	PC,GETLINE		;READ FIRST LINE
  23600	001370	005016 				CLR	(SP)			;SET . SOMEWHERE
  23700	001372	004767 	000000G			JSR	PC,SETDOT
  23800	001376	022626 				CMP	(SP)+,(SP)+		;POP 2
  23900	001400	012701 	000000G			MOV	#FILEIN,R1		;READ OR EDIT FDB
  24000	001404	032767 	000000G	000000G		BIT	#RONLY,SOSFLG		;READONLY FILE?
  24100	001412	001403 				BEQ	650$
  24200	001414	012746 	002422'			MOV	#MREA,-(SP)
  24300	001420	000402 				BR	700$
  24400	001422	012746 	002432'		650$:	MOV	#MEDI,-(SP)		;EDIT MESSAGE
  24500	001426	004767 	000000G		700$:	JSR	PC,PRINT
  24600	001432	010116 				MOV	R1,(SP)			;FDB POINTER
  24700	001434	026727 	000000G	000004 		CMP	FILUSE,#4		; WAS IT FILE=FILE?
  24800	001442	001013 				BNE	720$			; NO - ONLY ONE FILE TO PRINT
  24900	001444	012746 	000004 			MOV	#4,-(SP)		; JUST FILE NAME
  25000	001450	004767 	000000G			JSR	PC,PRTFIL		; NO CR-LF
  25100	001454	012716 	002442'			MOV	#MSGAS,(SP)		;  " AS "
  25200	001460	004767 	000000G			JSR	PC,PRINT
SOSINI - INITIALIZATION  CODE	MACRO M1110  22-AUG-78 05:32  PAGE 3-5
INIT - SOS INITIALIZATION FOR BLISS

  25300	001464	005726 				TST	(SP)+
  25400	001466	012716 	000000G			MOV	#FILEOUT,(SP)		; NEW FILE BEING CREATED
  25500	001472	005046 			720$:	CLR	-(SP)			; FILENAME WITH CR-LF
  25600	001474	004767 	000000G			JSR	PC,PRTFIL
  25700	001500	005726 				TST	(SP)+			;POP 1
  25800
  25900	001502	012716 	000000G			MOV	#FILETMP,(SP)		;FDB FOR DFLT NAME
  26000	001506	012746 				MOV	(PC)+,-(SP)		;EXTENSION
  26100	001510	077450 				.RAD50	/TM2/
  26200	001512	004767 	000000G			JSR	PC,SETFIL
  26300	001516	062706 	000006 			ADD	#6,SP			;CLEAN OFF 2 ARGUMENTS AND 1ST CMD LINE FLAG
  26400
  26410	001522	142767 	000004 	000141G		BICB	#GE.CLO,GCMLB+G.MODE	;LEAVE COMMAND FILE OPEN
  26420
  26430	001530	016767 	000002G	000000C		MOV	BUF+2,SOSFLG+<BUFSZ*2>	;PUT BUFFER SIZE WHERE IT CAN BE SEEN
  26440
  26500	001536	005000 				CLR	R0
  26600	001540	026727 	000000G	000001 		CMP	FILUSE,#1
  26700	001546	001016 				BNE	750$
  26800	001550	012703 	035511 			MOV	#"I;,R3			;FORM INSERT COMMAND
  26820	001554	016704 	000000C			MOV	SOSFLG+<2*ISTEP>,R4	;"I;(STEP)"
  26840	001560	004767 	000432 			JSR	PC,BLDCMD		;BUILD THE COMMAND LINE
  26860	001564	012767 	000001 	000000G		MOV	#1,ILIN			;STARTING PAGE NUMBER
  26880	001572	016767 	000000C	000002G		MOV	SOSFLG+<2*STARTN>,ILIN+2 ;STARTING LINE NUMBER
  26900	001600	012700 	177777 			MOV	#-1,R0			;PASS THROUGH TO SOSCMD
  27400	001604	000207 			750$:	RTS	PC			;EDIT OR READ; VALUE 0
  27500
SOSINI - INITIALIZATION  CODE	MACRO M1110  22-AUG-78 05:32  PAGE 4
INIT - SOS INITIALIZATION FOR BLISS

    100					;
    200					; SET DEFAULT DEVICE FROM FDB IN R0
    300					;
    400						.ENABL	LSB
    500	001606	132760 	000041 	000017 	STDFDV:	BITB	#FD.REC!FD.SQD,F.RCTL(R0) ;IF SEQUENTIAL DEVICE
    600	001614	001015 				BNE	20$			;THEN ERROR
    620
    640						.IF	DF,R$$STS
    700						MOV	F.DVNM(R0),DFDEV
    800						MOV	F.UNIT(R0),DFUNIT
    810
    820						.IFF
    830	001616	012701 	000000G			MOV	#DFDIR,R1		;ADR TO STORE DFLT DIRECTORY AND DEVICE
    840	001622	016021 	000126 			MOV	F.FNB+N.DID(R0),(R1)+	;STORE THE DIRECTORY ID
    850	001626	016021 	000130 			MOV	F.FNB+N.DID+2(R0),(R1)+
    860	001632	016021 	000132 			MOV	F.FNB+N.DID+4(R0),(R1)+
    870	001636	016021 	000134 			MOV	F.DVNM(R0),(R1)+	;STORE DEFAULT DEVICE
    880	001642	016021 	000136 			MOV	F.UNIT(R0),(R1)+	;AND UNIT
    890						.ENDC
    895
    900	001646	000207 				RTS	PC
   1000	001650	012746 	000000G		20$:	MOV	#ERMS10,-(SP)
   1100	001654	022767 	000004 	000000G		CMP	#4,FILUSE		;IF THIS IS OUTPUT FILE SPEC
   1200	001662	001414 				BEQ	30$			;SAY "RANDOM DEVICE REQUIRED"
   1300	001664	012716 	000000G			MOV	#ERMS11,(SP)		;ELSE "EXPLICIT OUTPUT FILE REQUIRED"
   1400	001670	000411 				BR	30$
   1500					;
   1600					; PRINT ERROR AND TRY AGAIN
   1700					;	JSR	R5,ERR
   1800					;	.WORD	ERMSG1
   1900					;  OR
   2000					;	JSR	R5,FERR			;FDB ERROR PRINT, R0 = FDB ADR
   2100					;	.WORD	ERMSG1
   2200					;
   2300	001672	011546 			FERR:	MOV	(R5),-(SP)		;STORE MESSAGE ADDRESS
   2350	001674	010046 			FERR1:	MOV	R0,-(SP)		;PUSH FDB ADDRESS
   2375	001676	004767 	000000G			JSR	PC,LDINER		;LOAD INIT ERROR MESSAGES
   2400	001702	004767 	000000G			JSR	PC,FDBERR		;REPORT FDB ERROR
   2450	001706	005726 				TST	(SP)+			;CLEAN UP 1 WORD
   2500	001710	000405 				BR	FERR2
   2550
   2600	001712	011546 			ERR:	MOV	(R5),-(SP)		;PUSH ERROR MSG POINTER
   2650	001714	004767 	000000G		30$:	JSR	PC,LDINER		;LOAD INIT ERROR MESSAGES
   2675	001720	004767 	000000G			JSR	PC,PRINTC		;PRINT IT
   2700	001724	022626 			FERR2:	CMP	(SP)+,(SP)+		;POP 2
   2750										;2ND WORD IS FROM THE JSR
   2800										;TO ERR, FERR, OR MOVFIL
   2850										;SO STACK IS CORRECT FOR
   2900	001726	000167 	176136 			JMP	TRYAGN			;RESTART AT TRYAGN
   2950
   3300	001732	132767 	000030 	000001G	MOVFIL:	BITB	#CS.WLD!CS.MOR,C.STAT+CSIBLK;FILE SPEC ERRORS?
   3400	001740	001065 				BNE	40$
   3500	001742	132767 	000005 	000001G		BITB	#CS.DVF!CS.NMF,C.STAT+CSIBLK;WAS FILE GIVEN?
   3600	001750	001461 				BEQ	40$			;NO  ERROR;SET
   3700	001752	012702 	000006G			MOV	#CSIBLK+C.DSDS,R2	;DS DESCRIPTOR
   3800	001756	004767 	000000G			JSR	PC,PARSE		;PARSE THE NAME
   3900	001762	103454 				BCS	40$			;BRANCH IF ERROR
SOSINI - INITIALIZATION  CODE	MACRO M1110  22-AUG-78 05:32  PAGE 4-1
INIT - SOS INITIALIZATION FOR BLISS

   4000	001764	026027 	000116 			CMP	F.FNB+N.FTYP(R0),(PC)+	;CHECK FOR A
   4100	001770	006273 				.RAD50	/BAS/			;BASIC+ FILE
   4200	001772	001023 				BNE	32$			;NO
   4300	001774	032767 	000000G	000024G		BIT	#BASIC,CSIBLK+C.MKW1	;WAS /BAS OR /-BAS
   4400	002002	001017 				BNE	32$			;GIVEN?  IF SO, CONTINUE
   4500	002004	032767 	000000G	000000G		BIT	#BASIC,SOSFLG		;WAS IT /BAS?
   4600	002012	001013 				BNE	32$			;YES.  GOOD
   4700	002014	052767 	000000G	000000G		BIS	#BASIC,SOSFLG		;NO.  ASSUME IT
   4800	002022	012746 	000000G			MOV	#ERMS12,-(SP)		;MESSAGE
   4850	002026	004767 	000000G			JSR	PC,LDINER		;LOAD INIT ERROR MESSAGES
   4900	002032	004767 	000000G			JSR	PC,PRINTC
   5000	002036	005726 				TST	(SP)+
   5100	002040	000424 				BR	39$			;DONE WITH CHECKS
   5200
   5300	002042				32$:
   5400						.IF	DF,R$$STS
   5500						CMP	F.FNB+N.FTYP(R0),(PC)+	;CHECK FOR A
   5600						.RAD50	/BAK/			;BACKUP FILE
   5700						BNE	34$
   5800						BIT	#NOBAK,SOSFLG		;EDIT ONLY IF /NOBAK
   5900						BNE	34$
   6000						MOV	#ERMS13,-(SP)
   6100						BR	30$			;ELSE GIVE ERROR
   6200						.ENDC
   6300
   6400	002042	026027 	000110 		34$:	CMP	F.FNB+N.FNAM(R0),(PC)+	;LAST CHECK
   6500	002046	074453 				.RAD50	/SOS/			;IS FOR SOS TEMP FILE
   6600	002050	001020 				BNE	36$
   6700	002052	010046 				MOV	R0,-(SP)		;MUST CHECK LAST 3
   6800	002054	012746 	000000G			MOV	#FILETMP,-(SP)
   6900	002060	012746 				MOV	(PC)+,-(SP)
   7000	002062	077430 				.RAD50	/TMP/
   7100	002064	004767 	000000G			JSR	PC,SETFIL
   7200	002070	022626 				CMP	(SP)+,(SP)+
   7300	002072	012600 				MOV	(SP)+,R0
   7400	002074	026067 	000112 	000112G		CMP	F.FNB+N.FNAM+2(R0),FILETMP+F.FNB+N.FNAM+2
   7500	002102	001003 				BNE	36$			;NOT OUR JOB FILES
   7600	002104	012746 	000000G			MOV	#ERMS14,-(SP)		;SET ERROR MESSAGE
   7700	002110	000701 				BR	30$			;ERROR
   7800
   7900	002112				36$:
   8000
   8100	002112	000207 			39$:	RTS	PC
   8200	002114	012746 	000000G		40$:	MOV	#ERMSG8,-(SP)		;NO SUCH DIRECTORY
   8300	002120	122760 	177746 	000052 		CMPB	#IE.NSF,F.ERR(R0)	;IF NO SUCH FILE FROM PARSE
   8400	002126	001672 				BEQ	30$
   8500
   8600						.IF	NDF,R$$STS
   8700	002130	012716 	000000G			MOV	#ERMSG9,(SP)		;DEVICE NOT MOUNTED
   8800	002134	122760 	177760 	000052 		CMPB	#IE.PRI,F.ERR(R0)	;IF PRIVILEGE VIOLATION FROM PARSE
   8900	002142	001664 				BEQ	30$
   9000						.ENDC
   9100
   9200	002144	012716 	000000G			MOV	#ERMSG7,(SP)		;OTHER ERROR FROM PARSE
   9300	002150	000651 				BR	FERR1
   9400						.DSABL	LSB
   9500
SOSINI - INITIALIZATION  CODE	MACRO M1110  22-AUG-78 05:32  PAGE 4-2
INIT - SOS INITIALIZATION FOR BLISS

   9600	002152	004167 	000000G		INIFLG:	JSR	R1,$SAV2		;SAVE R1,R2
   9700	002156	012701 	000000G			MOV	#SOSFLG,R1
   9800	002162	012702 	002266'			MOV	#SOSIFL,R2
   9900	002166	012700 	000000G			MOV	#SOSFLL,R0
  10000	002172	012221 			5$:	MOV	(R2)+,(R1)+		;INIT SOSFLG VALUES
  10100	002174	077002 				SOB	R0,5$
  10200
  10300						.IF	NDF,R$$STS
  10700	002176	032767 	000000G	000000G		BIT	#SYSCME,SYSTEM		;IF CME
  10800	002204	001403 				BEQ	30$
  10900	002206	052767 	000000G	000000G		BIS	#NOOPT,SOSFLG		;DON'T LOOK FOR SWITCH.INI
  11000	002214				30$:
  11100						.ENDC
  11200
  11300	002214	000207 				RTS	PC
  11400
  11410					;
  11420					; R3 = COMMAND CHARACTER AND SEPARATOR
  11430					; R4 = NUMBER TO CONVERT TO DECIMAL STRING
  11440					;
  11500	002216	012701 	000000G		BLDCMD:	MOV	#TTIBUF,R1		;ADDRESS TO BUILD HELP COMMAND
  11600	002222	012702 	000000G			MOV	#TTICTL,R2		;ADR OF ADR AND SIZE OF INPUT STRING
  11700	002226	010112 				MOV	R1,(R2)			;SET ADDRESS OF INPUT STRING
  11800	002230	010321 				MOV	R3,(R1)+		;COMMAND AND DELIMITER
  11900	002232	010446 				MOV	R4,-(SP)		;NUMBER TO CONVERT TO DECIMAL STRING
  12100	002234	012746 	000001 			MOV	#1,-(SP)		;MINIMUM OF 1 CHARACTER
  12200	002240	004767 	000000G			JSR	PC,CNVDEC		;CONVERT TO DECIMAL STRING
  12300										;ADDRESS OF STRING IN R0
  12400	002244	112021 			10$:	MOVB	(R0)+,(R1)+		;MOVE ASCIZ STRING
  12500	002246	001376 				BNE	10$			;BRANCH IF MORE TO MOVE
  12600	002250	112761 	000015 	177777 	20$:	MOVB	#15,-1(R1)		;CR INSTEAD OF TRAILING NULL
  12700	002256	162201 				SUB	(R2)+,R1		;BYTE COUNT OF STRING
  12800	002260	010112 				MOV	R1,(R2)			;STORE COUNT OF INPUT STRING
  12900	002262	022626 				CMP	(SP)+,(SP)+		;CLEAN OFF 2 WORDS
  13000	002264	000207 				RTS	PC			;AND RETURN
  13100
  21500	002266	000000 	000144 	000000 	SOSIFL:	.WORD	0,100.,0,65533.,16.,0,100.
	002274	177775 	000020 	000000
	002302	000144
  21550	002304	000067 	000001 	000001 	LINPPG::.WORD	55.,1,1,100.,0,0
	002312	000144 	000000 	000000
  21600						.IF	DF,R$$STS
  21700						.WORD	-1
  21800
  21900						.IFF
  22000	002320	000000 				.WORD	0			;INITIAL PRINTER UNIT
  22100						.ENDC
  22200
  22300	002322	000000 				.WORD	0			;BUFFER SIZE
  22400
  22500	002324				INIPR:
  22600						.IF	DF,R$$STS
  22700						.ASCII	/File: /
  22800
  22900						.IFF
  23000	002324	   015 	   012 	   106 		.ASCII	<15><12>/File: /
	002327	   151 	   154 	   145
SOSINI - INITIALIZATION  CODE	MACRO M1110  22-AUG-78 05:32  PAGE 4-3
INIT - SOS INITIALIZATION FOR BLISS

	002332	   072 	   040
  23100						.ENDC
  23200		000010 			INIPRL	=	.-INIPR			;INITIAL PROMPT STRING
  23300						.EVEN
  23400
  26900	002334					PLIT	NOBUF,</Not enough text buffer space available/<15><12>>
  27000	002406					PLIT	MINP,</Input: />
  27100	002420					PLIT	MREA,</Read: />
  27200	002430					PLIT	MEDI,</Edit: />
  27300	002440					PLIT	MSGAS,</ as />
  27400
  27500		000001 				.END
SOSINI - INITIALIZATION  CODE	MACRO M1110  22-AUG-78 05:32  PAGE 4-4
SYMBOL TABLE

ATACH1= ****** GX	ERMS12= ****** GX	FO.APD= 000106   	GE.CLO= 000004   	IE.HFU= 177744
A.BFSR= 000004   	ERMS14= ****** GX	FO.MFY= 000002   	GE.COM= 000001   	IE.IES= 177656
A.DFBC= 000100   	ERMS15= ****** GX	FO.RD = 000001   	GE.CON= 000020   	IE.IFC= 177776
A.DFDR= 000050   	ERR     001712R     002	FO.UPD= 000006   	GE.EOF= 177766   	IE.IFU= 177747
A.DFUI= 000102   	EXIT  = ****** GX	FO.WRT= 000016   	GE.IND= 000002   	IE.ILL= 177726
A.DPB = 000014   	EXIT2   000040R     002	F.ACTL= 000076   	GE.IOR= 177777   	IE.ISQ= 177703
A.EFSR= 000006   	FA.APD= 000100   	F.ALOC= 000040   	GE.LC = 000010   	IE.LCK= 177745
A.FIPR= 000012   	FA.CRE= 000010   	F.BBFS= 000062   	GE.MDE= 177774   	IE.MOD= 177753
A.IOST= 000044   	FA.DLK= 001000   	F.BDB = 000070   	GE.OPR= 177776   	IE.NBF= 177731
A.OWUI= 000010   	FA.ENB= 100000   	F.BGBC= 000057   	GE.RBG= 177730   	IE.NBK= 177727
BASIC = ****** GX	FA.EXC= 002000   	F.BKDN= 000026   	GE.SIZ= 000040   	IE.NDR= 177670
BLDCMD  002216R     002	FA.EXT= 000004   	F.BKDS= 000020   	GIVWRD= ****** GX	IE.NFI= 177704
BUF   = ****** GX	FA.NSP= 000100   	F.BKEF= 000050   	G.CMLD= 000146   	IE.NFW= 177673
BUFINI= ****** GX	FA.POS= 010000   	F.BKP1= 000051   	G.DPRM= 000160   	IE.NLK= 177661
BUFSZ = ****** GX	FA.RD = 000001   	F.BKST= 000024   	G.ERR = 000140   	IE.NLN= 177733
CH.AND= 000001   	FA.RWD= 004000   	F.BKVB= 000064   	G.ISIZ= 000020   	IE.NNC= 177663
CNVDEC= ****** GX	FA.SEQ= 040000   	F.CHR = 000075   	G.MODE= 000141   	IE.NNL= 177662
CSIBLK= ****** GX	FA.SHR= 000040   	F.CNTG= 000034   	G.PSDS= 000142   	IE.NNN= 177674
CS.DIF= 000002   	FA.TMP= 000020   	F.DFNB= 000046   	G.SIZE= 000224   	IE.NOD= 177751
CS.DVF= 000004   	FA.WCK= 020000   	F.DSPT= 000044   	HELPAG= ****** GX	IE.NSF= 177746
CS.EQU= 000040   	FA.WRT= 000002   	F.DVNM= 000134   	IE.ABO= 177761   	IE.NST= 177660
CS.INP= 000001   	FDBERR= ****** GX	F.EFBK= 000010   	IE.ALC= 177654   	IE.OFL= 177677
CS.MOR= 000020   	FD.BLK= 000010   	F.EFN = 000050   	IE.ALN= 177736   	IE.ONP= 177773
CS.NMF= 000001   	FD.CCL= 000002   	F.EOBB= 000032   	IE.AST= 177660   	IE.OVR= 177756
CS.OUT= 000002   	FD.COM= 020000   	F.ERR = 000052   	IE.BAD= 177777   	IE.PES= 177655
CS.WLD= 000010   	FD.CR = 000002   	F.FACC= 000043   	IE.BBE= 177710   	IE.PRI= 177760
CTLCFL= ****** GX	FD.DIR= 000010   	F.FFBY= 000014   	IE.BCC= 177676   	IE.RAC= 177724
C.CMLD= 000002   	FD.FTN= 000001   	F.FNAM= 000110   	IE.BDI= 177714   	IE.RAT= 177723
C.DEVD= 000006   	FD.F11= 040000   	F.FNB = 000102   	IE.BDR= 177716   	IE.RBG= 177730
C.DIRD= 000012   	FD.INS= 000010   	F.FTYP= 000116   	IE.BDV= 177711   	IE.RCN= 177722
C.DSDS= 000006   	FD.ISP= 002000   	F.FVER= 000120   	IE.BHD= 177700   	IE.RER= 177740
C.FILD= 000016   	FD.MNT= 100000   	F.HIBK= 000004   	IE.BLB= 177672   	IE.RNM= 177715
C.MKW1= 000024   	FD.OSP= 004000   	F.LUN = 000042   	IE.BLK= 177754   	IE.RSU= 177757
C.MKW2= 000026   	FD.PLC= 000004   	F.MBCT= 000054   	IE.BNM= 177712   	IE.SNC= 177735
C.SIZE= 000054   	FD.PRN= 000004   	F.MBC1= 000055   	IE.BTF= 177664   	IE.SPC= 177772
C.STAT= 000001   	FD.PSE= 010000   	F.MBFG= 000056   	IE.BTP= 177725   	IE.SQC= 177734
C.SWAD= 000022   	FD.RAH= 000001   	F.NRBD= 000024   	IE.BVR= 177701   	IE.SRE= 177762
C.TYPR= 000000   	FD.RAN= 000002   	F.NREC= 000030   	IE.BYT= 177755   	IE.STK= 177706
DFDEV = ****** GX	FD.REC= 000001   	F.OVBS= 000030   	IE.CKS= 177742   	IE.TMM= 177671
DFDIR = ****** GX	FD.RWM= 000001   	F.RACC= 000016   	IE.CLO= 177732   	IE.TMO= 177666
DFLTBF= ****** GX	FD.SDI= 000020   	F.RATT= 000001   	IE.CNR= 177667   	IE.ULK= 177653
DFUNIT= ****** GX	FD.SQD= 000040   	F.RCNM= 000034   	IE.CON= 177752   	IE.VER= 177774
D.DFDV= 000024   	FD.TTY= 000004   	F.RCTL= 000017   	IE.DAA= 177770   	IE.WAC= 177743
D.DFID= 000016   	FD.WBH= 000002   	F.RSIZ= 000002   	IE.DAO= 177763   	IE.WAT= 177741
D.DFUN= 000026   	FERR    001672R     002	F.RTYP= 000000   	IE.DFU= 177750   	IE.WCK= 177652
ENDFIL= ****** GX	FERR1   001674R     002	F.SEQN= 000100   	IE.DNA= 177771   	IE.WER= 177737
ERMSG1= ****** GX	FERR2   001724R     002	F.SPDV= 000072   	IE.DNR= 177775   	IE.WLK= 177764
ERMSG2= ****** GX	FF.CHR= 000005   	F.SPUN= 000074   	IE.DUN= 177767   	IE.2DV= 177720
ERMSG3= ****** GX	FF.NV = 000003   	F.STBK= 000036   	IE.DUP= 177707   	ILIN  = ****** GX
ERMSG4= ****** GX	FF.POE= 000002   	F.UNIT= 000136   	IE.EOF= 177766   	INIFLG  002152R     002
ERMSG5= ****** GX	FF.RWD= 000001   	F.URBD= 000020   	IE.EOT= 177702   	INIHLP  000000R     002
ERMSG6= ****** GX	FF.RWF= 000006   	F.VBN = 000064   	IE.EOV= 177765   	INIPR   002324R     002
ERMSG7= ****** GX	FF.SPC= 000004   	F.VBSZ= 000060   	IE.EXP= 177665   	INIPRL= 000010
ERMSG8= ****** GX	FILEIN= ****** GX	GCMLB = ****** GX	IE.FEX= 177717   	INIT    000044RG    002
ERMSG9= ****** GX	FILEOU= ****** GX	GCMLER= ****** GX	IE.FHE= 177705   	INITSW= ****** GX
ERMS10= ****** GX	FILETM= ****** GX	GETLIN= ****** GX	IE.FLN= 177657   	ISTEP = ****** GX
ERMS11= ****** GX	FILUSE= ****** GX	GE.BIF= 177775   	IE.FOP= 177713   	ISWTAB= ****** GX
SOSINI - INITIALIZATION  CODE	MACRO M1110  22-AUG-78 05:32  PAGE 4-5
SYMBOL TABLE

IS.BV = 000005   	MSGAS   002442R     002	N.FVER= 000016   	R.SEQ = 000003   	S.FSR2= 000104
IS.CC = 001401   	NB.DEV= 000200   	N.NEXT= 000022   	R.VAR = 000002   	S.FTYP= 000002
IS.CR = 006401   	NB.DIR= 000100   	N.STAT= 000020   	SETDOT= ****** GX	S.NFEN= 000020
IS.EOT= 002001   	NB.NAM= 000004   	N.UNIT= 000034   	SETFIL= ****** GX	TRYAGN  000070R     002
IS.ESC= 015401   	NB.SD1= 000400   	OPN1ST= ****** GX	SOSCMD= ****** GX	TTIBUF= ****** GX
IS.ESQ= 115401   	NB.SD2= 001000   	OPTNAM= ****** GX	SOSFLG= ****** GX	TTICTL= ****** GX
IS.PES= 100001   	NB.SNM= 000040   	PAGHIG= ****** GX	SOSFLL= ****** GX	VALHEL= ****** GX
IS.PND= 000000   	NB.STP= 000020   	PAGLOW= ****** GX	SOSIFL  002266R     002	$SAV2 = ****** GX
IS.RDD= 000002   	NB.SVR= 000010   	PARSE = ****** GX	STARTN= ****** GX	$SAV5 = ****** GX
IS.SUC= 000001   	NB.TYP= 000002   	PAR$$$= 000027   	STDFDV  001606R     002	$$MSG = 000000
IS.TAB= 004401   	NB.VER= 000001   	PRINT = ****** GX	SWSET = ****** GX	.CLOSE= ****** G
IS.TMO= 000002   	NOBAK = ****** GX	PRINTC= ****** GX	SYSCME= ****** GX	.CSI1 = ****** G
LDINER= ****** GX	NOBUF   002336R     002	PRTFIL= ****** GX	SYSTEM= ****** GX	.CSI2 = ****** G
LINPPG  002304RG    002	NOOPT = ****** GX	PRTINL= ****** GX	S.FATT= 000016   	.FINIT= ****** G
LODSWT= ****** GX	N.DID = 000024   	RONLY = ****** GX	S.FDB = 000140   	.GCML1= ****** G
MEDI    002432R     002	N.DVNM= 000032   	RONLY$= 000001   	S.FNAM= 000006   	.GCML4= ****** GX
MINBF = ****** GX	N.FID = 000000   	R$$EIS= 000001   	S.FNB = 000036   	.OPFNB= ****** G
MINP    002410R     002	N.FNAM= 000006   	R$$SHR= 000001   	S.FNBW= 000017   	...GBL= 000000
MOVFIL  001732R     002	N.FTYP= 000014   	R.FIX = 000001   	S.FNTY= 000004   	...TPC= 000030
MREA    002422R     002

. ABS.	000000	   000
      	000000	   001
CODE  	002446	   002
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  6048 WORDS  ( 24 PAGES)
DYNAMIC MEMORY:  6996 WORDS  ( 26 PAGES)
ELAPSED TIME:  00:00:22
OBJ$:SOSINI,LIS$:SOSINI/-SP/NL:TOC=SRC$:PREFIX,SOSINI
