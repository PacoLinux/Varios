SOSOPN - OPEN AND SCANFILE ROUT	MACRO M1110  22-AUG-78 05:33  PAGE 2


    100						.TITLE	SOSOPN - OPEN AND SCANFILE ROUTINES
    200						.IDENT	/020600/
    300					;
    400					; COPYRIGHT 1978, DIGITAL EQUIPMENT CORP., MAYNARD, MASS. 01754
    500					;
    600					; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
    700					; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
    800					;
    900					; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
   1000					; ON A SINGLE COMPUTER SYSTEM AND CAN BE COPIED (WITH INCLUSION
   1100					; OF DEC'S COPYRIGHT NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
   1200					; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
   1300					;
   1400					; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
   1500					; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
   1600					; EQUIPMENT CORPORATION.
   1700					;
   1800					; PETER H. LIPMAN	19-AUG-76
   1810					;
   1820					;	06	28-JUL-78	P. H. LIPMAN
   1830					;
   1840					;	ADD CLSDEL ENTRY POINT FOR USE BY "EQ" COMMAND
   1850					;		FIXES A DELETE ERROR REPORT UNDER SOME CONDITIONS
   1900					;
   2000						.MCALL	FDOF$L,FCSBT$,QIOSY$
   2100	000000					FDOF$L
   2200	000000					FCSBT$
   2300	000000					QIOSY$
   2400
   2500						.MCALL	NMBLK$,OFNB$,OFNB$R,CLOSE$,QIO$,EXTK$S
   2600						.MCALL	CCML$,CSI$1,CSI$2
   2700
   2800	000000					DATA$	OPN
   2900	000000				TMPFNB::NMBLK$
SOSOPN - OPEN AND SCANFILE ROUT	MACRO M1110  22-AUG-78 05:33  PAGE 3
VARIOUS FILE NAME UTILITY ROUTINES

    100						.SBTTL	VARIOUS FILE NAME UTILITY ROUTINES
    200
    300	000036					CODE$	OPN
    400
    500						.ENABL	LSB
    600	000000				ENTRY	SCANFILE			;FILE STRING SCANNER
    700	000000	004167 	000000G			JSR	R1,$SAV4		;NEED 4 REGS
    800	000004	016603 	000014 			MOV	14(SP),R3		;SAVE FDB ADDRESS
    900	000010	005002 				CLR	R2			;BRACKET FLAG CLEARED
   1000	000012	016701 	000000G			MOV	SCSTRT,R1		;STARR OF FILE NAME
   1100	000016	012704 	000200'		10$:	MOV	#SCTAB,R4		;SPECIAL CHAR TABLE
   1200	000022	012700 	000007 			MOV	#SCTABE-SCTAB/4,R0	;NUMBER OF ENTRIES
   1300	000026	121114 			20$:	CMPB	(R1),(R4)		;SPECIAL CHAR?
   1400	000030	001002 				BNE	30$			;NO  NOT THIS ONE
   1600	000032	000174 	000002 			JMP	@2(R4)			;PROCESS SPECIAL ONE
   1700	000036	022424 			30$:	CMP	(R4)+,(R4)+		;POINT TO NEXT ENTRY
   1800	000040	077006 				SOB	R0,20$			;TEST FOR IT
   1900	000042	005201 			40$:	INC	R1			;INCLUDE THIS CHARACTER
   2000	000044	000764 				BR	10$
   2100
   2200	000046	005002 			50$:	CLR	R2			;  9  ]  CHARACTERS
   2300	000050	000774 				BR	40$
   2400	000052	005702 			60$:	TST	R2			;COMMA    END OF NO
   2500	000054	001403 				BEQ	80$			;BRACKETS
   2600	000056	000771 				BR	40$			;OTHERWISE, FILE CHAR
   2700	000060	005202 			70$:	INC	R2			;(   [  CHARACTERS
   2800	000062	000767 				BR	40$
   2900
   3000	000064	016702 	000000G		80$:	MOV	SCSTRT,R2		;FILENAME START
   3100	000070	010167 	000000G			MOV	R1,SCSTRT		;NEXT CHAR AFTER IT
   3200	000074	160201 				SUB	R2,R1			;COMPUTE LENGTH OF NAME
   3300	000076					CSI$1	#CSIBLK,R2,R1		;SYNTAX CHECK NAME
   3400	000116	103425 				BCS	100$			;ERROR
   3500	000120					CSI$2	R0,OUTPUT		;GET THE FILE
   3600	000130	103420 				BCS	100$			;ERROR
   3700	000132	132760 	000070 	000001 		BITB	#CS.WLD!CS.MOR!CS.EQU,C.STAT(R0) ;ONE SPEC, NO WILD CARDS
   3800	000140	001014 				BNE	100$
   3900	000142	132760 	000005 	000001 		BITB	#CS.DVF!CS.NMF,C.STAT(R0) ;DEVICE OR FILE NAME MUST BE SPECIFIED
   4000	000150	001410 				BEQ	100$
   4100	000152	010300 				MOV	R3,R0			;FDB POINTER
   4200	000154	012702 	000006G			MOV	#CSIBLK+C.DSDS,R2	;DS DESCRIPTOR
   4300	000160	004767 	000000G			JSR	PC,PARSE		;PARSE THE NAME
   4400	000164	103402 				BCS	100$			;BRANCH IF ERROR
   4500	000166	005000 				CLR	R0			;SET GOOD RETURN
   4600	000170	000207 				RTS	PC
   4700	000172	012700 	177777 		100$:	MOV	#-1,R0			;SET ERROR IN FILE
   4800	000176	000207 				RTS	PC
   4900
   5000	000200	000015 	000064'		SCTAB:	.WORD	15,80$		;SPECIAL CHARACTER TABLE IN FIELNAMES
   5100	000204	000133 	000060'			.WORD	'[,70$
   5200	000210	000050 	000060'			.WORD	'(,70$
   5300	000214	000135 	000046'			.WORD	'],50$
   5400	000220	000051 	000046'			.WORD	'),50$
   5500	000224	000054 	000052'			.WORD	',,60$
   5600	000230	000057 	000064'			.WORD	'/,80$
   5700		000234'			SCTABE	=	.		;END OF TABLE MARKER
   5800						.DSABL	LSB
SOSOPN - OPEN AND SCANFILE ROUT	MACRO M1110  22-AUG-78 05:33  PAGE 4
FILE UTILITY ROUTINES--OPEN, REOPEN

    100						.SBTTL	FILE UTILITY ROUTINES--OPEN, REOPEN
    110
    120					;
    130					; SWITCH FROM OUTPUT TO INPUT ON THE SPECIFIED FDB
    140					;	2(SP) = FDB ADDRESS
    150					;
    160	000234				ENTRY	CLSOPN
    170	000234	016600 	000002 			MOV	2(SP),R0		;FDB ADDRESS
    180	000240	016046 	000102 			MOV	F.FNB(R0),-(SP)		;SAVE FILE ID FOR FAST REOPEN
    185	000244	010046 				MOV	R0,-(SP)		;FDB ADDRESS IS PARAM TO CLOSE
    190	000246	004767 	000764 			JSR	PC,CLOSE		;CLOSE(FDBADR)
    195	000252	012600 				MOV	(SP)+,R0		;RECOVER FDB ADDRESS
    200	000254	012660 	000102 			MOV	(SP)+,F.FNB(R0)		;RESTORE THE FILE ID
    350					;
    360					; OPEN FILE FOR READ
    370					;	2(SP) = FDB ADDRESS
    380					;
    400	000260				ENTRY	OPEN				;OPEN A FILE FOR READING
    410	000260	016600 	000002 			MOV	2(SP),R0		;FDB ADDRESS
    420	000264	112760 	000001 	000043 		MOVB	#FO.RD,F.FACC(R0)	;SET FILE ACCESS
    430	000272	032767 	000000G	000000G		BIT	#RONLY,SOSFLG		;IF FILE IS BEING OPENED READ ONLY
    440	000300	001403 				BEQ	10$
    450	000302	112760 	000041 	000043 		MOVB	#FO.RD!FA.SHR,F.FACC(R0) ;THEN OPEN FOR SHARED READ
    510	000310	005067 	000000G		10$:	CLR	SVSTRM			;NO GET STREAM CONTEXT
    515	000314	105067 	000000G			CLRB	STRMIN			;NO STREAM INPUT
    520
    530						.IF	DF,R$$DBG
    540						MOV	#1,-(SP)		;***** EVENT 1 FOR OPEN FOR READ
    570						.ENDC
    580
    610	000320	000445 				BR	OPENX			;AND RETURN
    700
    710					;
    720					; OPEN NEW FILE FOR WRITING
    730					;	2(SP) = FDB ADDRESS
    740					;	BUF+24. = FDB ADDRESS OF INPUT FILE IF ANY
    750					;
    800	000322				ENTRY	CRTFIL				;OPEN A NEW FILE FOR OUTPUT
    920	000322	010146 				MOV	R1,-(SP)		;SAVE A REGISTER
    940	000324	016600 	000004 			MOV	4(SP),R0		;GET FDB ADDRESS
   1000	000330	112760 	000116 	000043 		MOVB	#FO.WRT!FA.NSP,F.FACC(R0) ;SET FILE ACCESS
   1500	000336	112760 	000002 	000001 		MOVB	#FD.CR,F.RATT(R0)	;INITIALLY CR, LF IMPLIED
   1600	000344	112760 	000002 	000000 		MOVB	#R.VAR,F.RTYP(R0)	;FIRST PUT WILL DETERMINE
   1620	000352	105067 	000000G			CLRB	SEQBAS			;  THE RECORD TYPE
   1700	000356	016701 	000030G			MOV	BUF+24.,R1		;INPUT FILE FDB ADDRESS
   1800	000362	005761 	000070 			TST	F.BDB(R1)		;INPUT FILE OPEN?
   1900	000366	001421 				BEQ	10$			;BRANCH IF NOT
   2000	000370	132761 	000001 	000001 		BITB	#FD.FTN,F.RATT(R1)	;IF FORTRAN CARRIAGE CONTROL
   2100	000376	001403 				BEQ	4$
   2200	000400	116160 	000001 	000001 		MOVB	F.RATT(R1),F.RATT(R0)	;USE IT FOR OUTPUT AS WELL
   2220					;
   2240					; USE INPUT FILE SIZE FOR INITIAL ALLOCATION OF OUTPUT FILE
   2260					;
   2300	000406	132761 	000041 	000017 	4$:	BITB	#FD.REC!FD.SQD,F.RCTL(R1) ;IF RECORD OR SEQUENTIAL DEVICE
   2400	000414	001006 				BNE	10$			;THEN NO USEFUL FILE SIZE IS PRESENT
   2500	000416	016160 	000012 	000034 		MOV	F.EFBK+2(R1),F.CNTG(R0)	;USE END OF FILE VBN
   2600	000424	002402 				BLT	10$			;IF NEGATIVE, VERY LARGE
SOSOPN - OPEN AND SCANFILE ROUT	MACRO M1110  22-AUG-78 05:33  PAGE 4-1
FILE UTILITY ROUTINES--OPEN, REOPEN

   2700	000426	005460 	000034 			NEG	F.CNTG(R0)		;NEGATIVE FOR NON-CONTIGUOUS ALLOCATION
   3000	000432	012601 			10$:	MOV	(SP)+,R1		;RESTORE SAVED R1
   3090
   3100						.IF	DF,R$$DBG
   3200						MOV	#2,-(SP)		;***** EVENT 2 FOR OPEN FOR WRITE
   3210						.IFTF
   3220	000434				OPENX:
   3230						.IFT
   3300						JSR	PC,RECEVT		;***** RECORD THE EVENT
   3400						TST	(SP)+			;***** CLEAN THE STACK
   3500						.ENDC
   3600
   3620	000434					CCML$	#GCMLB			;CLOSE CMD FILE, AVOID FSR FRAGMENTATION
   3640	000444	016600 	000002 			MOV	2(SP),R0		;RESTORE FDB ADDRESS
   3700	000450	004767 	000004 			JSR	PC,OPNCOM		;OPEN THE FILE
   5400	000454	000167 	000000G		OPENX1:	JMP	FCSDON			;RETURN COMPLETION CODE
   5550
   5560
   5690	000460				OPNCOM::
   5695	000460				10$:	OFNB$				;OPEN BY FILE NAME BLOCK
   5700
   5710						.IF	NDF,R$$STS
   5720	000464	103007 				BCC	30$			;BRANCH IF SUCCESSFUL
   5730	000466	122760 	177751 	000052 		CMPB	#IE.NOD,F.ERR(R0)	;NO NODES FROM FCP?
   5740	000474	001003 				BNE	30$			;BRANCH IF OTHER ERROR
   5750	000476	004767 	000000G			JSR	PC,WAITND		;WAIT FOR A BIT
   5760	000502	000766 				BR	10$			;AND TRY AGAIN
   5770	000504				30$:
   5780						.ENDC	;R$$STS
   5790	000504	000207 				RTS	PC
   6100					;
   6200					; REOPEN THE SPECIFIED FDB, USED FOR OUTPUT FILES AS WELL AS INPUT FILES
   6300					;	NOTE THAT ALL OUTPUT FILES THAT ARE REOPENED MUST BE ON A RANDOM
   6400					;	ACCESS DEVICE SO THAT .POINT CAN BE ISSUED.  THE SEQUENTIAL
   6500					;	DEVICE PATH ONLY WORKS FOR INPUT FILES.
   6600					;
   6620
   6640						.ENABL	LSB
   6660
   6700	000506				ENTRY	REOPNW				;RE-OPEN AN OUTPUT FILE
   6800	000506	016600 	000002 			MOV	2(SP),R0		;FDB ADDRESS
   6900	000512	105067 	000000G			CLRB	SEQBAS			;FIRST PUT DECIDES THE RECORD TYPE
   7000	000516	112760 	000002 	000000 		MOVB	#R.VAR,F.RTYP(R0)	;DEFAULT TO VARIABLE LENGTH
   7050	000524	000412 				BR	10$
   7100	000526				ENTRY	REOPEN				;RE-OPEN AN INPUT FILE
   7200	000526	016600 	000002 			MOV	2(SP),R0		;FDB ADDRESS
   7250	000532	005067 	000000G			CLR	SVSTRM			;NO STREAM INPUT CONTEXT
   7260	000536	032767 	000000G	000000G		BIT	#RONLY,SOSFLG		;IF READ-ONLY
   7270	000544	001002 				BNE	10$			;THEN REMEMBER STREAM INPUT
   7290	000546	105067 	000000G			CLRB	STRMIN
   7300
   7350	000552				10$:
   7400						.IF	DF,R$$DBG
   7500						MOV	#3,-(SP)		;***** EVENT 3
   7600						JSR	PC,RECEVT		;***** RECORD THE EVENT
   7700						TST	(SP)+			;***** CLEAN THE STACK
   7800						.ENDC
SOSOPN - OPEN AND SCANFILE ROUT	MACRO M1110  22-AUG-78 05:33  PAGE 4-2
FILE UTILITY ROUTINES--OPEN, REOPEN

   7900
   8000	000552	132760 	000040 	000017 		BITB	#FD.SQD,F.RCTL(R0)	;IF BLOCK SEQUENTIAL DEVICE
   8100	000560	001225 				BNE	CLSOPN			;THEN MUST CLOSE AND REOPEN
   8200	000562	004167 	000000G		POINT:	JSR	R1,$SAV3		;OTHERWISE JUST REWIND FILE
   8300	000566	005001 				CLR	R1			;BY POINTING BACK TO
   8400	000570	012702 	000001 			MOV	#1,R2			;VIRTUAL BLOCK 1
   8500	000574	005003 				CLR	R3			;BYTE 0
   8600	000576	004767 	000000G			JSR	PC,.POINT		;REPOSITION THE FILE
   8700	000602	000724 				BR	OPENX1
   8800
   8900						.DSABL	LSB
  10100
  10200					;
  10300					; OPEN FILE FOR READING THE FIRST TIME
  10400					;	WILL ALLOCATE A STREAM BUFFER IF INTERNAL CARRIAGE CONTROL
  10410					;	WILL FIX UP END OF FILE IF FILE WAS NOT CLOSED PROPERLY
  10420					;
  10430					;	2(SP) = FDB ADDRESS
  10500					;
  10600	000604				ENTRY	OPN1ST
  10700	000604	010146 				MOV	R1,-(SP)		;SAVE A REGISTER
  10710	000606	016600 	000004 			MOV	4(SP),R0		;FDB ADDRESS
  10712
  10714						.IF	NDF,R$$STS
  10720	000612	162706 	000012 			SUB	#<5*2>,SP		;MAKE ROOM FOR STATISTICS BLOCK
  10730	000616	010660 	000036 			MOV	SP,F.STBK(R0)		;REQUEST STATISTICS BLOCK ON OPEN
  10735	000622	010601 				MOV	SP,R1			;SAVE STATISTICS BLOCK ADDRESS
  10752						.ENDC
  10754
  10760	000624	010046 				MOV	R0,-(SP)
  10900	000626	004767 	177426 			JSR	PC,OPEN			;NORMAL OPEN FOR READ
  11000	000632	005700 				TST	R0			;SEE IF IT SUCCEEDED
  11100	000634	001146 				BNE	40$			;BRANCH IF IT DIDN'T
  11200	000636	011600 				MOV	(SP),R0			;RECOVER FDB ADDRESS
  11202
  11204						.IF	NDF,R$$STS
  11210	000640	005760 	000010 			TST	F.EFBK(R0)		;IF EFBK INDICATES EMPTY FILE
  11220	000644	001062 				BNE	10$			;BRANCH IF NOT EMPTY
  11230	000646	026027 	000012 	000001 		CMP	F.EFBK+2(R0),#1
  11240	000654	101056 				BHI	10$			;BRANCH IF NOT EMPTY
  11250	000656	103403 				BLO	5$			;BRANCH IF EMPTY
  11260	000660	005760 	000014 			TST	F.FFBY(R0)
  11270	000664	001052 				BNE	10$			;BRANCH IF NOT EMPTY
  11280					;
  11290					; FILE IS EMPTY, SET EOF TO END OF ALLOCATED SPACE
  11300					;
  11310	000666	022121 			5$:	CMP	(R1)+,(R1)+		;POINT TO FILE SIZE IN STAT BLOCK
  11315	000670	012160 	000004 			MOV	(R1)+,F.HIBK(R0)
  11320	000674	012160 	000006 			MOV	(R1)+,F.HIBK+2(R0)	;SIZE OF FILE
  11322	000700	024141 				CMP	-(R1),-(R1)		;IF BOTH WORDS OF FILE SIZE ARE EQUAL
  11324	000702	001002 				BNE	7$
  11326	000704	005711 				TST	(R1)			;AND ZERO, THEN FILE IS ACTUALLY EMPTY
  11328	000706	001520 				BEQ	30$
  11330	000710	012160 	000010 		7$:	MOV	(R1)+,F.EFBK(R0)
  11340	000714	011160 	000012 			MOV	(R1),F.EFBK+2(R0)	;END OF FILE
  11350	000720	062760 	000001 	000012 		ADD	#1,F.EFBK+2(R0)		;LAST+1 BLOCK, BYTE 0
  11360	000726	005560 	000010 			ADC	F.EFBK(R0)
SOSOPN - OPEN AND SCANFILE ROUT	MACRO M1110  22-AUG-78 05:33  PAGE 4-3
FILE UTILITY ROUTINES--OPEN, REOPEN

  11365	000732	005060 	000066 			CLR	F.VBN+2(R0)		;FORCE THE READING
  11370	000736	004767 	177620 			JSR	PC,POINT		;  OF THE FIRST VBN
  11380	000742	011600 				MOV	(SP),R0			;RECOVER FDB ADDRESS
  11382	000744	132760 	000004 	000001 		BITB	#FD.PRN,F.RATT(R0)	;IF PRINT FILE CARRIAGE CONTROL
  11384	000752	001076 				BNE	30$			;RECORD TYPE AND CARRIAGE CONTROL ARE OK
  11390	000754	112760 	000002 	000000 		MOVB	#R.VAR,F.RTYP(R0)	;ASSUME VARIABLE LENGTH RECORDS
  11400	000762	112760 	000002 	000001 		MOVB	#FD.CR,F.RATT(R0)	;ASSUME STANDARD CARRIAGE CONTROL
  11410	000770	016001 	000030 			MOV	F.NREC(R0),R1		;POINTER TO FIRST RECORD
  11420	000774	022127 	000002 			CMP	(R1)+,#2		;IF RECORD SIZE IS UNDER 2
  11430	001000	002404 				BLT	10$			;CANNOT BE R.SEQ
  11440	001002	004767 	000174 			JSR	PC,CHKCHR		;SEE IF FIRST 2 DATA BYTES
  11450	001006	004767 	000170 			JSR	PC,CHKCHR		;COULD BE TEXT, IF NOT, R.SEQ
  11470						.ENDC
  11480	001012				10$:
  11490						.IF	DF,R$$STS
  11500						CMPB	#R.STRM,F.RTYP(R0)	;IF RSTS STREAM MODE, SKIP THIS
  11600						BEQ	30$
  11700						.ENDC
  11800
  11900	001012	105760 	000001 			TSTB	F.RATT(R0)		;INTERNAL CARRIAGE CONTROL?
  11910	001016	001414 				BEQ	15$			;BRANCH IF YES
  11920	001020	122760 	000002 	000000 		CMPB	#R.VAR,F.RTYP(R0)	;VARIABLE LENGTH RECORD FILE
  11930	001026	001050 				BNE	30$
  11940	001030	016001 	000030 			MOV	F.NREC(R0),R1		;WITH FF AS FIRST CHAR OF 1ST RECORD
  11950	001034	022127 	000001 			CMP	(R1)+,#1
  11960	001040	003443 				BLE	30$
  11970	001042	121127 	000014 			CMPB	(R1),#14
  11980	001046	001040 				BNE	30$
  11990	001050	105267 	000000G		15$:	INCB	STRMIN			;IS HANDLED AS STREAM INPUT
  12100	001054	016701 	000000G			MOV	STRMBF,R1		;YES, STREAM BUFFER ALREADY ALLOCATED?
  12200	001060	001026 				BNE	25$			;BRANCH IF YES
  12300					;
  12400					; MUST ALLOCATE A 512 BYTE STREAM BUFFER
  12500					;
  12600	001062	016701 	000002G			MOV	BUF+2,R1		;SIZE OF TEXT BUFFER
  12700	001066					EXTK$S	#8.			;TRY EXTENDING TASK BY 8 64 BYTE BLOCKS
  12800	001102	103011 				BCC	20$			;BRANCH IF SUCCESSFUL
  12900	001104	162701 	001000 			SUB	#512.,R1		;TRY TO TAKE A BUFFER AWAY FROM TEXT BUFFER
  13000	001110	020127 	000000G			CMP	R1,#MINBF		;ENOUGH LEFT TO RUN?
  13100	001114	103422 				BLO	60$			;BRANCH IF NOT, SAY CANNOT OPEN
  13200	001116	010167 	000002G			MOV	R1,BUF+2		;SET SMALLER SIZE
  13300	001122	010167 	000000C			MOV	R1,SOSFLG+<BUFSZ*2>	;SET SIZE FOR =BUF
  13500	001126	066701 	000000G		20$:	ADD	BUF,R1			;FORM ADDRESS OF STREAM BUFFER
  13600	001132	010167 	000000G			MOV	R1,STRMBF		;AND STORE IT
  13700	001136	010160 	000022 		25$:	MOV	R1,F.URBD+2(R0)		;RECORD BUFFER ADDRESS
  13800	001142	012760 	000776 	000020 		MOV	#510.,F.URBD(R0)	;AND SIZE
  13900	001150	005000 			30$:	CLR	R0			;INDICATE SUCCESSFUL OPEN
  14000	001152				40$:
  14010						.IF	DF,R$$STS
  14020						TST	(SP)+			;CLEAN FDB ADDRESS OFF STACK
  14030
  14040						.IFF
  14050	001152	062706 	000014 			ADD	#<6*2>,SP		;CLEAN FDB ADR, STATBLK OFF STACK
  14060						.ENDC
  14070
  14100	001156	012601 				MOV	(SP)+,R1		;RESTORE SAVED REGISTER
  14200	001160	000207 				RTS	PC			;AND RETURN
SOSOPN - OPEN AND SCANFILE ROUT	MACRO M1110  22-AUG-78 05:33  PAGE 4-4
FILE UTILITY ROUTINES--OPEN, REOPEN

  14250
  14300	001162				60$:	CLOSE$	R0			;CLOSE THE FILE
  14400	001166	112760 	177731 	000052 		MOVB	#IE.NBF,F.ERR(R0)	;INDICATE NOT ENOUGH BUFFER SPACE
  14450	001174	112700 	177731 			MOVB	#IE.NBF,R0
  14500	001200	000764 				BR	40$			;AND RETURN THROUGH COMMON EXIT
  14600					;
  14700					; IF CHAR POINTED TO BY R1 IS NOT A TEXT CHARACTER, SET R.SEQ RECORD TYPE
  14800					;
  14900						.IF	NDF,R$$STS
  15000	001202	121127 	000007 		CHKCHR:	CMPB	(R1),#7
  15100	001206	002406 				BLT	10$			;BRANCH IF NEG OR LSS "BELL"
  15200	001210	121127 	000040 			CMPB	(R1),#40
  15300	001214	002006 				BGE	20$			;BRANCH IF NOT A CONTROL CHAR
  15400	001216	121127 	000015 			CMPB	(R1),#15
  15500	001222	003403 				BLE	20$			;BRANCH IF FORMAT CHAR OR BELL
  15600	001224	112760 	000003 	000000 	10$:	MOVB	#R.SEQ,F.RTYP(R0)	;SET SEQUENCED RECORD TYPE
  15700	001232	105721 			20$:	TSTB	(R1)+
  15800	001234	000207 				RTS	PC
  15900						.ENDC
SOSOPN - OPEN AND SCANFILE ROUT	MACRO M1110  22-AUG-78 05:33  PAGE 5
FILE UTILITY ROUTINES--OPEN, REOPEN

    100	001236				ENTRY	CLOSE			;CLOSE A FILE
    200	001236	016600 	000002 			MOV	2(SP),R0		;FDB ADDRESS
    300	001242					CLOSE$				;CLOSE THE FDB
    350	001246	103020 				BCC	CLSRET
    400	001250	000167 	000000G			JMP	CLSERR			;REPORT CLOSE ERROR
    500
    600	001254				ENTRY	COPDEF				;COPY FILE NAME BLOCK
    700	001254	004167 	000000G			JSR	R1,$SAV2		;FROM ONE FDB TO ANOTHER
    800	001260	016601 	000010 			MOV	10(SP),R1		;FROM FDB POINTER
    900	001264	016602 	000012 			MOV	12(SP),R2		;TO FDB
   1000	001270	062702 	000102 			ADD	#F.FNB,R2
   1100					;
   1200					; R1=FDB ADDRESS, SAVE FNB PORTION OF THIS FDB
   1300					; R2=FNB ADDRESS TO SAVE IT IN
   1400					; OUTPUT RO,R1,R2 ALTERED
   1500					;
   1600	001274	062701 	000102 		SAVFNB::ADD	#F.FNB,R1
   1700	001300	012700 	000017 			MOV	#S.FNBW,R0		;WORDS IN LENGTH
   1800	001304	012122 			5$:	MOV	(R1)+,(R2)+		;COPY IT
   1900	001306	077002 				SOB	R0,5$
   2000	001310	000207 			CLSRET:	RTS	PC			;THEN RETURN
   2100
   2200					;
   2300					; SWAP THE CONTENTS OF THE SPECIFIED FDB'S
   2400					;
   2500	001312				ENTRY	SWPFDB
   2600	001312	004167 	000000G			JSR	R1,$SAV3		;SAVE SOME REGISTERS
   2700	001316	016601 	000012 			MOV	12(SP),R1		;LOAD THE
   2800	001322	016602 	000014 			MOV	14(SP),R2		;  FDB ADDRESSES
   2900	001326	012700 	000060 			MOV	#S.FDB/2,R0		;NUMBER OF WORDS TO SWAP
   3000	001332	011103 			10$:	MOV	(R1),R3
   3100	001334	011221 				MOV	(R2),(R1)+
   3200	001336	010322 				MOV	R3,(R2)+
   3300	001340	077004 				SOB	R0,10$			;SWAP THEM
   3400	001342	000207 				RTS	PC			;AND RETURN
SOSOPN - OPEN AND SCANFILE ROUT	MACRO M1110  22-AUG-78 05:33  PAGE 6
FILE UTILTY ROUTINES -- CLSDEL, ERASE

    100						.SBTTL	FILE UTILTY ROUTINES -- CLSDEL, ERASE
    110
    120						.ENABL	LSB
    130
    140	001344				ENTRY	CLSDEL				;CLOSE AND DELETE THE FILE
    160	001344	016600 	000002 			MOV	2(SP),R0		;FDB ADDRESS OF FILE
    170										;MUST NOT BE FILEBAK
    190	001350	005760 	000070 			TST	F.BDB(R0)		;IS FILE OPEN
    200	001354	001415 				BEQ	60$			;BRANCH IF NO, SKIP CLOSE, SKIP DELETE
    210	001356					CLOSE$	R0			;CLOSE THE FILE
    220										;AND FALL THROUGH TO DELETE
    230
    300	001362				ENTRY	ERASE
    400	001362	016600 	000002 			MOV	2(SP),R0		;FDB ADDRESS FOR DELETE
    450	001366				10$:
    500
    600						.IF	DF,R$$DBG
    700						MOV	#6,-(SP)		;***** EVENT 6
    800						JSR	PC,RECEVT		;***** RECORD THE EVENT
    900						TST	(SP)+			;***** CLEAN THE STACK
   1000						.ENDC	;R$$DBG
   1100
   1200	001366	020027 	177777 			CMP	R0,#-1			;DELETE .BAK FILE?
   1300
   1400						.IF	DF,R$$STS
   1500						BNE	40$			;NO.  NORMAL ONE
   1600						MOV	#FILELST,-(SP)		;USE FILELST FOR TEMP
   1700						MOV	#FILEIN,-(SP)
   1800						JSR	PC,COPDEF		;NAME BLOCK
   1900						MOV	#FILELST,R0		;SET FDB PTR IN R0
   2000						MOV	BAKBAK,F.FNB+N.FTYP(R0)	;SET .BAK EXTENSION
   2100						CMP	(SP)+,(SP)+		;POP 2
   2200					40$:
   2300						.IFF	;R$$STS
   2400	001372	001406 				BEQ	60$			;NOP FOR RSX11M
   2500	001374	005760 	000120 			TST	F.FVER(R0)		;ZERO VERSION MEANS TROUBLE
   2600
   2700						.IF	NDF,R$$DBG		;RSX DBG ONLY
   2800	001400	001403 				BEQ	60$			;DELETE ZERO VERSION NOT ALLOWED
   2900
   3000						.IFF	;R$$DBG
   3100						BNE	50$			;***** BRANCH IF OK
   3200						CMP	R0,#FILEIN		;***** DISALLOW ON INPUT FDB
   3300						BNE	60$
   3400						JMP	DELBUG			;***** REPORT DELETE BUG AND EXIT
   3500						.ENDC	;R$$DBG
   3600						.ENDC	;R$$STS
   3700
   3800	001402	004767 	000000G		50$:	JSR	PC,.DLFNB		;DELETE THE FILE
   3850	001406	103401 				BCS	70$			;BRANCH IF ERROR
   3900	001410	000207 			60$:	RTS	PC			;WASN'T THAT SIMPLE
   3950	001412	000167 	000000G		70$:	JMP	DELERR			;PRINT DELETE ERROR
   3960
   3970						.DSABL	LSB
   4000
   4100
   4200		000001 				.END
SOSOPN - OPEN AND SCANFILE ROUT	MACRO M1110  22-AUG-78 05:33  PAGE 6-1
SYMBOL TABLE

BUF   = ****** GX	FD.ISP= 002000   	F.NREC= 000030   	IE.FLN= 177657   	IE.SNC= 177735
BUFSZ = ****** GX	FD.MNT= 100000   	F.OVBS= 000030   	IE.FOP= 177713   	IE.SPC= 177772
CHKCHR  001202R     003	FD.OSP= 004000   	F.RACC= 000016   	IE.HFU= 177744   	IE.SQC= 177734
CH.AND= 000001   	FD.PLC= 000004   	F.RATT= 000001   	IE.HWR= 177772   	IE.SRE= 177762
CLOSE   001236RG    003	FD.PRN= 000004   	F.RCNM= 000034   	IE.IBS= 177647   	IE.STK= 177706
CLSDEL  001344RG    003	FD.PSE= 010000   	F.RCTL= 000017   	IE.IDU= 177644   	IE.TCH= 177765
CLSERR= ****** GX	FD.RAH= 000001   	F.RSIZ= 000002   	IE.IEF= 177637   	IE.TMM= 177671
CLSOPN  000234RG    003	FD.RAN= 000002   	F.RTYP= 000000   	IE.IES= 177656   	IE.TMO= 177666
CLSRET  001310R     003	FD.REC= 000001   	F.SEQN= 000100   	IE.IFC= 177776   	IE.ULK= 177653
COPDEF  001254RG    003	FD.RWM= 000001   	F.SPDV= 000072   	IE.IFU= 177747   	IE.ULN= 177773
CRTFIL  000322RG    003	FD.SDI= 000020   	F.SPUN= 000074   	IE.ILL= 177726   	IE.UNS= 177774
CSIBLK= ****** GX	FD.SQD= 000040   	F.STBK= 000036   	IE.ILU= 177640   	IE.UPN= 177777
CS.DIF= 000002   	FD.TTY= 000004   	F.UNIT= 000136   	IE.ILV= 177755   	IE.VER= 177774
CS.DVF= 000004   	FD.WBH= 000002   	F.URBD= 000020   	IE.INS= 177776   	IE.WAC= 177743
CS.EQU= 000040   	FF.CHR= 000005   	F.VBN = 000064   	IE.IOP= 177655   	IE.WAT= 177741
CS.INP= 000001   	FF.NV = 000003   	F.VBSZ= 000060   	IE.IPR= 177641   	IE.WCK= 177652
CS.MOR= 000020   	FF.POE= 000002   	GCMLB = ****** GX	IE.ISQ= 177703   	IE.WER= 177737
CS.NMF= 000001   	FF.RWD= 000001   	IE.ABO= 177761   	IE.ITI= 177643   	IE.WLK= 177764
CS.OUT= 000002   	FF.RWF= 000006   	IE.ACT= 177771   	IE.ITP= 177650   	IE.WOV= 177653
CS.WLD= 000010   	FF.SPC= 000004   	IE.ADP= 177636   	IE.ITS= 177770   	IE.2DV= 177720
C.CMLD= 000002   	FO.APD= 000106   	IE.ALC= 177654   	IE.IUI= 177645   	IO.ACE= 007400
C.DEVD= 000006   	FO.MFY= 000002   	IE.ALG= 177654   	IE.LCK= 177745   	IO.ACR= 006400
C.DIRD= 000012   	FO.RD = 000001   	IE.ALN= 177736   	IE.LNL= 177646   	IO.ACW= 007000
C.DSDS= 000006   	FO.UPD= 000006   	IE.AST= 177660   	IE.MAP= 177657   	IO.ADS= 014000
C.FILD= 000016   	FO.WRT= 000016   	IE.BAD= 177777   	IE.MOD= 177753   	IO.APC= 014000
C.MKW1= 000024   	F.ACTL= 000076   	IE.BBE= 177710   	IE.NBF= 177731   	IO.APV= 014010
C.MKW2= 000026   	F.ALOC= 000040   	IE.BCC= 177676   	IE.NBK= 177727   	IO.ATA= 001410
C.SIZE= 000054   	F.BBFS= 000062   	IE.BDI= 177714   	IE.NDR= 177670   	IO.ATT= 001400
C.STAT= 000001   	F.BDB = 000070   	IE.BDR= 177716   	IE.NFI= 177704   	IO.CAS= 015420
C.SWAD= 000022   	F.BGBC= 000057   	IE.BDV= 177711   	IE.NFW= 177673   	IO.CBO= 015510
C.TYPR= 000000   	F.BKDN= 000026   	IE.BHD= 177700   	IE.NLK= 177661   	IO.CCI= 014000
DELERR= ****** GX	F.BKDS= 000020   	IE.BLB= 177672   	IE.NLN= 177733   	IO.CCO= 000440
ERASE   001362RG    003	F.BKEF= 000050   	IE.BLK= 177754   	IE.NNC= 177663   	IO.CIN= 016500
FA.APD= 000100   	F.BKP1= 000051   	IE.BNM= 177712   	IE.NNL= 177662   	IO.CLK= 015000
FA.CRE= 000010   	F.BKST= 000024   	IE.BTF= 177664   	IE.NNN= 177674   	IO.CLN= 003400
FA.DLK= 001000   	F.BKVB= 000064   	IE.BTP= 177725   	IE.NOD= 177751   	IO.CNT= 017000
FA.ENB= 100000   	F.CHR = 000075   	IE.BVR= 177701   	IE.NSF= 177746   	IO.CON= 015400
FA.EXC= 002000   	F.CNTG= 000034   	IE.BYT= 177755   	IE.NST= 177660   	IO.CPR= 015410
FA.EXT= 000004   	F.DFNB= 000046   	IE.CKP= 177766   	IE.NSW= 177756   	IO.CPW= 016520
FA.NSP= 000100   	F.DSPT= 000044   	IE.CKS= 177742   	IE.NVR= 177652   	IO.CRC= 001040
FA.POS= 010000   	F.DVNM= 000134   	IE.CLO= 177732   	IE.NVW= 177651   	IO.CRE= 012000
FA.RD = 000001   	F.EFBK= 000010   	IE.CNR= 177667   	IE.OFL= 177677   	IO.CRJ= 015440
FA.RWD= 004000   	F.EFN = 000050   	IE.CON= 177752   	IE.ONP= 177773   	IO.CSI= 013000
FA.SEQ= 040000   	F.EOBB= 000032   	IE.DAA= 177770   	IE.OVR= 177756   	IO.CSM= 016470
FA.SHR= 000040   	F.ERR = 000052   	IE.DAO= 177763   	IE.PES= 177655   	IO.CTI= 015400
FA.TMP= 000020   	F.FACC= 000043   	IE.DFU= 177750   	IE.PNS= 177642   	IO.CTL= 016400
FA.WCK= 020000   	F.FFBY= 000014   	IE.DNA= 177771   	IE.PRI= 177760   	IO.CTR= 015610
FA.WRT= 000002   	F.FNAM= 000110   	IE.DNR= 177775   	IE.PTS= 177775   	IO.CTY= 003400
FCSDON= ****** GX	F.FNB = 000102   	IE.DUN= 177767   	IE.RAC= 177724   	IO.DAC= 010000
FD.BLK= 000010   	F.FTYP= 000116   	IE.DUP= 177707   	IE.RAT= 177723   	IO.DCI= 014400
FD.CCL= 000002   	F.FVER= 000120   	IE.EOF= 177766   	IE.RBG= 177730   	IO.DEL= 012400
FD.COM= 020000   	F.HIBK= 000004   	IE.EOT= 177702   	IE.RBS= 177761   	IO.DET= 002000
FD.CR = 000002   	F.LUN = 000042   	IE.EOV= 177765   	IE.RCN= 177722   	IO.DIS= 016000
FD.DIR= 000010   	F.MBCT= 000054   	IE.EXP= 177665   	IE.RER= 177740   	IO.DLB= 016540
FD.FTN= 000001   	F.MBC1= 000055   	IE.FEX= 177717   	IE.RNM= 177715   	IO.DSI= 013400
FD.F11= 040000   	F.MBFG= 000056   	IE.FHE= 177705   	IE.RSU= 177757   	IO.DTI= 016000
FD.INS= 000010   	F.NRBD= 000024   	IE.FIX= 177767   	IE.SDP= 177635   	IO.DTY= 006400
SOSOPN - OPEN AND SCANFILE ROUT	MACRO M1110  22-AUG-78 05:33  PAGE 6-2
SYMBOL TABLE

IO.ENA= 006000   	IO.RAD= 010400   	IO.STA= 015400   	IS.RDD= 000002   	R.FIX = 000001
IO.EOF= 003000   	IO.RAL= 001010   	IO.STC= 002500   	IS.SET= 000002   	R.SEQ = 000003
IO.EXT= 011400   	IO.RAT= 013000   	IO.STP= 016400   	IS.SPD= 000002   	R.VAR = 000002
IO.FDX= 003020   	IO.RBC= 003000   	IO.SYN= 003040   	IS.SUC= 000001   	SAVFNB  001274RG    003
IO.FLN= 012400   	IO.RCI= 015000   	IO.TRM= 002410   	IS.TAB= 004401   	SCANFI  000000RG    003
IO.FNA= 004400   	IO.RCV= 015000   	IO.UDI= 011410   	IS.TMO= 000002   	SCSTRT= ****** GX
IO.GLC= 016430   	IO.RDB= 001200   	IO.UEI= 011450   	MINBF = ****** GX	SCTAB   000200R     003
IO.GLI= 016420   	IO.RDD= 010010   	IO.UER= 011440   	NB.DEV= 000200   	SCTABE= 000234R     003
IO.GNI= 016410   	IO.RDN= 000022   	IO.ULK= 005000   	NB.DIR= 000100   	SEQBAS= ****** GX
IO.GRC= 016450   	IO.REL= 013400   	IO.UNL= 000042   	NB.NAM= 000004   	SOSFLG= ****** GX
IO.GRI= 016440   	IO.RHD= 001010   	IO.USI= 011460   	NB.SD1= 000400   	STRMBF= ****** GX
IO.GRN= 016460   	IO.RLB= 001000   	IO.UTI= 011420   	NB.SD2= 001000   	STRMIN= ****** GX
IO.GTS= 002400   	IO.RLV= 001100   	IO.UTY= 011430   	NB.SNM= 000040   	SVSTRM= ****** GX
IO.HDX= 003010   	IO.RMT= 010020   	IO.WAL= 000410   	NB.STP= 000020   	SWPFDB  001312RG    003
IO.HIS= 015000   	IO.RNA= 005400   	IO.WAT= 013400   	NB.SVR= 000010   	S.FATT= 000016
IO.HNG= 003000   	IO.RNC= 001040   	IO.WBT= 000500   	NB.TYP= 000002   	S.FDB = 000140
IO.INI= 014400   	IO.RNE= 001020   	IO.WDD= 000444   	NB.VER= 000001   	S.FNAM= 000006
IO.INL= 002400   	IO.RNS= 001020   	IO.WLB= 000400   	N.DID = 000024   	S.FNB = 000036
IO.ITI= 017000   	IO.RPB= 001040   	IO.WLC= 000420   	N.DVNM= 000032   	S.FNBW= 000017
IO.KIL= 000012   	IO.RPR= 004400   	IO.WLS= 000410   	N.FID = 000000   	S.FNTY= 000004
IO.LDI= 007000   	IO.RST= 001001   	IO.WLT= 000410   	N.FNAM= 000006   	S.FTYP= 000002
IO.LED= 012000   	IO.RTC= 003400   	IO.WLV= 000500   	N.FTYP= 000014   	S.NFEN= 000020
IO.LEI= 007410   	IO.RTI= 016400   	IO.WMS= 000420   	N.FVER= 000016   	TMPFNB  000000RG    002
IO.LKE= 012000   	IO.RTK= 000060   	IO.WNS= 000420   	N.NEXT= 000022   	WAITND= ****** GX
IO.LOD= 014000   	IO.RTM= 001200   	IO.WPB= 000440   	N.STAT= 000020   	$SAV2 = ****** GX
IO.LOV= 001010   	IO.RVB= 010400   	IO.WVB= 011000   	N.UNIT= 000034   	$SAV3 = ****** GX
IO.LSI= 011000   	IO.RWD= 002400   	IO.XMT= 014400   	OPEN    000260RG    003	$SAV4 = ****** GX
IO.LTI= 007400   	IO.RWU= 002540   	IO.XNA= 014410   	OPENX   000434R     003	$$MSG = 000000
IO.LTK= 000050   	IO.R1C= 002400   	IQ.Q  = 000002   	OPENX1  000454R     003	.CLOSE= ****** G
IO.LTY= 010000   	IO.SAO= 004000   	IQ.S  = 000004   	OPNCOM  000460RG    003	.CSI1 = ****** G
IO.MAO= 003410   	IO.SCS= 013000   	IQ.UMD= 000004   	OPN1ST  000604RG    003	.CSI2 = ****** G
IO.MCS= 013400   	IO.SDI= 013000   	IQ.X  = 000001   	PARSE = ****** GX	.DLFNB= ****** GX
IO.MDA= 016000   	IO.SDO= 012400   	IS.BV = 000005   	PAR$$$= 000000   	.GCML3= ****** G
IO.MDI= 014400   	IO.SEC= 002520   	IS.CC = 001401   	POINT   000562R     003	.OPFNB= ****** G
IO.MDO= 015400   	IO.SET= 000030   	IS.CLR= 000000   	REOPEN  000526RG    003	.POINT= ****** GX
IO.MLO= 006000   	IO.SLO= 005400   	IS.CR = 006401   	REOPNW  000506RG    003	...GBL= 000000
IO.MOD= 003000   	IO.SMO= 002560   	IS.EOT= 002001   	RONLY = ****** GX	...PC1= 000000
IO.MSO= 005000   	IO.SPB= 002420   	IS.ESC= 015401   	RONLY$= 000001   	...PC2= 000014R     002
IO.NLB= 016530   	IO.SPF= 002440   	IS.ESQ= 115401   	R$$EIS= 000001   	...PC3= 000000
IO.NLK= 011400   	IO.SPW= 016510   	IS.PES= 100001   	R$$SHR= 000001   	...TPC= 000140
IO.ONL= 017400   	IO.SSO= 004400   	IS.PND= 000000

. ABS.	000000	   000
      	000000	   001
OPN.D 	000036	   002
CODE  	001416	   003
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  5598 WORDS  ( 22 PAGES)
DYNAMIC MEMORY:  6996 WORDS  ( 26 PAGES)
ELAPSED TIME:  00:00:26
OBJ$:SOSOPN,LIS$:SOSOPN/-SP/NL:TOC=SRC$:PREFIX,SOSOPN
