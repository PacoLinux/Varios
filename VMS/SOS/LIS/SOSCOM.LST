SOSCOM - COMMON ROUTINES	MACRO M1110  22-AUG-78 05:31  PAGE 2


    100						.TITLE	SOSCOM - COMMON ROUTINES
    200						.IDENT	/020600/
    300					;
    400					; COPYRIGHT 1978, DIGITAL EQUIPMENT CORP., MAYNARD, MASS. 01754
    500					;
    600					; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
    700					; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
    800					;
    900					; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
   1000					; ON A SINGLE COMPUTER SYSTEM AND CAN BE COPIED (WITH INCLUSION
   1100					; OF DEC'S COPYRIGHT NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
   1200					; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
   1300					;
   1400					; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
   1500					; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
   1600					; EQUIPMENT CORPORATION.
   1700					;
   1800					; PETER H. LIPMAN	23-FEB-76
   1810					;
   1820					;	06	1-AUG-78	PETER H. LIPMAN
   1830					;
   1840					;	MPLUS DOES NOT NEED THE ENABCP, DSABCP SEQUENCE
   1850					;
   1900					;
   2000						.MCALL	FDOF$L,FCSBT$,QIOSY$
   2100	000000					FDOF$L
   2200	000000					FCSBT$
   2300	000000					QIOSY$
   2400						.MCALL	DIR$,WTSE$S,WSIG$S,QIO$
   2500
   2600						.IF	NDF,R$$STS
   2700						.MCALL	ENCP$S,DSCP$S,TTSYM$,ASTX$S
   2800	000000					TTSYM$
   2900						.ENDC
   3000
   3100	000000					DATA$	COM
   3200
   3300						.IF	NDF,R$$STS
   3400	000000				TTATDT:	QIO$	IO.DET,TIOLUN,1,,IOSTS,,<CTLC>
   3500	000030				TYPDPB::QIO$	IO.WVB,TIOLUN,1,,,,<TTOBUF,,0,,,>
   3600									;IN SOSINI IF RUNNING 11D OR IAS
   3700						.ENDC
   3800
   3900	000060					CODE$	COM
   4000
   4100					; ROOT STARTUP CODE
   4200					;
   4300	000000	000167 	000000G		START:	JMP	START1			;WILL INIT SP FOR RSTS
   4600	000004	000167 	000000G		START2::JMP	SOSGO			;0(SP)=#EXIT
   4700	000010	000167 	000000G		EXIT::	JMP	EXIT1
   4800	000014	000167 	000000G		SOSERR::JMP	SOSRRR			;ROOT ERROR DISPATCHER
   4900	000020	004767 	000000G		LISTN1::JSR	PC,.GCML1		;CALL GCML FROM ROOT
   5000	000024	006146 				ROL	-(SP)			;SAVE CARRY ACROSS AUTOLOAD
   5100	000026	000167 	000000G			JMP	LISTN2			;AND RELOAD LISTEN
   5200	000032	004767 	000000G		LISTN3::JSR	PC,GCMLER		;PROCESS GET COMMAND LINE ERROR
   5300	000036	000167 	000000G			JMP	LISTN4			;AND RELOAD LISTEN
   5400	000042	000167 	000000G		FCFATL::JMP	FCFAT1			;FCS FATAL ERROR
SOSCOM - COMMON ROUTINES	MACRO M1110  22-AUG-78 05:31  PAGE 3
TTY I/O ROUTINES - PRINT & TYPE

    100						.SBTTL	TTY I/O ROUTINES - PRINT & TYPE
    200					;
    300					; PRINT A STRING AND APPEND CR, LF
    400					;
    500	000046				ENTRY	EMSG				;EMSG(PLIT "MSG"))
    600	000046				ENTRY	PRINTC				;PRINTC(PLIT "MSG")
    700	000046	016600 	000002 			MOV	2(SP),R0		;MESSAGE POINTER
    800	000052	004767 	000022 			JSR	PC,PRTR0		;PRINT IT
    900					;
   1000					; TYPE A CR, LF
   1100					;
   1200	000056				ENTRY	TYPECR				;TYPECR()
   1300	000056	012700 	000000G			MOV	#CRLF,R0		;ADD LINE TERM
   1400	000062	000406 				BR	PRTR0
   1500
   1600					;
   1700					; PRINT "IN LINE" MESSAGE
   1800					;	JSR	R1,PRTINL
   1900					;	.WORD	MSGADR			;ADDRESS OF PLIT
   2000					;
   2100	000064	012100 			PRTINL::MOV	(R1)+,R0		;ADDRESS OF MESSAGE
   2200	000066	004767 	000006 			JSR	PC,PRTR0		;PRINT IT
   2300	000072	000201 				RTS	R1			;AND RETURN
   2400
   2500					;
   2600					; PRINT A MESSAGE GIVEN THE ADDRESS OF A BLISS PLIT
   2700					;	2(SP) = ADDRESS OF STRING, WORD ALIGNED
   2800					;	THE WORD PRECEEDING THE STRING CONTAINS ITS SIZE IN WORDS
   2900					;		IF THE ACTUAL STRING SIZE WAS ODD, THE TRAILING BYTE IS 0
   3000					;
   3100					;
   3200	000074				ENTRY	PRINT				;PRINT(PLIT "MSG")
   3300	000074	016600 	000002 			MOV	2(SP),R0		;R0=ADR
   3400	000100	010146 			PRTR0:	MOV	R1,-(SP)
   3500	000102	016001 	177776 			MOV	-2(R0),R1		;R1=LEN
   3600	000106	006301 				ASL	R1			;BYTE LENGTH
   3700	000110	000433 				BR	TYPIT
   3800
   3900	000112				ENTRY	PRINTZ				;PRINTZ(ADR OF ASCIZ STRING)
   4000	000112	016600 	000002 			MOV	2(SP),R0		;POINTER TO DATA
   4100	000116	010146 			PRTZ1:	MOV	R1,-(SP)		;SAVE A REG FOR LEN
   4200	000120	010001 				MOV	R0,R1			;COPY ADDRESS
   4300	000122	105721 			5$:	TSTB	(R1)+			;LOOK FOR END
   4400	000124	001376 				BNE	5$			;OF THE STRING
   4500	000126	160001 				SUB	R0,R1			;COMPUTE LENGTH
   4600	000130	000423 				BR	TYPIT			;GO WRITE THE STRING
   4700
   4800
   4900					;
   5000					; PRINT A NUMBER IN DECIMAL USING SPECIFIED MINIMUM FIELD WIDTH
   5100					;	2(SP) = FIELD WIDTH IN BYTES
   5200					;	4(SP) = VALUE TO CONVERT TO DECIMAL AND PRINT
   5300					;
   5400	000132				ENTRY	PRINTN				;PRINTN(NUMBER,CHAR COUNT)
   5500	000132	016646 	000004 			MOV	4(SP),-(SP)		;SAME TWO PARAMS
   5600	000136	016646 	000004 			MOV	4(SP),-(SP)		;GO TO CNVDEC
   5700	000142	004767 	000000G			JSR	PC,CNVDEC		;CONVERT TO DECIMAL, RETURN ADR IN R0
SOSCOM - COMMON ROUTINES	MACRO M1110  22-AUG-78 05:31  PAGE 3-1
TTY I/O ROUTINES - PRINT & TYPE

   5800	000146	022626 				CMP	(SP)+,(SP)+
   5900	000150	000762 				BR	PRTZ1			;PRINT ASCIZ STRING (ADR IN R0)
   6000
   6300					;
   6400					; TYPE A STRING GIVEN ADDRESS AND BYTE COUNT
   6500					;	2(SP) = ADDRESS OF STRING
   6600					;	4(SP) = SIZE IN BYTES
   6700					;
   6800	000152				ENTRY	TYPSTR				;TYPSTR(BYTE COUNT, ADDRESS)
   6900	000152	010146 				MOV	R1,-(SP)
   7000	000154	016600 	000004 			MOV	4(SP),R0		;ADR OF STRING
   7100	000160	016601 	000006 			MOV	6(SP),R1		;SIZE IN BYTES
   7200	000164	000405 				BR	TYPIT
   7300
   7400					;
   7500					; TYPE A CHARACTER
   7600					;	2(SP) = CHARACTER TO TYPE
   7700					;
   7800	000166				ENTRY	TYPE				;TYPE("*")
   7900	000166	010600 				MOV	SP,R0			;GEN POINTER TO CHAR
   8000	000170	010146 				MOV	R1,-(SP)
   8100	000172	005720 				TST	(R0)+			;CHAR TO TYPE
   8200	000174	012701 	000001 			MOV	#1,R1			;LENGTH
   8300
   8400					;
   8500					; R0 = ADDRESS OF STRING, R1 = BYTE COUNT
   8600					; 0(SP) = SAVED R1
   8700					;
   8800	000200				TYPIT:
   8900						.IF	DF,R$$STS
   9000						MOV	R2,-(SP)		;SAVE A REG
   9100						MOV	TTOCTL,R2		;POINT TO OUTPT BUFFER
   9200					5$:	MOVB	(R0),(R2)+		;COPY A CHARACTER
   9300						INC	TTOCTL+2		;INC LENGTH IN BUFFER
   9400						CMPB	(R0)+,#12		;LINE TERMINATOR?
   9500						BEQ	7$
   9600						CMP	R2,#TTOEND		;OUT OF BUFFER SPACE?
   9700						BHI	7$			;BRANCH IF YES
   9800						SOB	R1,5$			;DO NEXT CHARACTER
   9900						BR	10$
  10000
  10100					7$:	MOV	#XRB+XRBLK,R2		;POINT TO XRB
  10200						CLR	(R2)			;XRBLK=0
  10300						CLR	-(R2)			;XRCI=0 (CHANNEL)
  10400						MOV	#TTOBUF,-(R2)		;XRLOC=ADDRESS
  10500						MOV	TTOCTL+2,-(R2)		;XRBC=LENGTH
  10600						MOV	TTOCTL+2,-(R2)		;XRLEN=LENGTH ALSO
  10700						.WRITE
  10800						JSR	PC,IOCHK		;CHECK FOR TERMINAL ERROR
  10900
  11000						MOV	#TTOBUF,R2		;POINT TO OUTPT BUFFER
  11100						CLR	TTOCTL+2		;ZERO LEN LEFT
  11200						SOB	R1,5$			;NEXT CHAR IN MESSAGE
  11300					10$:	MOV	R2,TTOCTL		;NEXT AVAIL OUTPT LOC
  11400						MOV	(SP)+,R2		;RESTORE REGISTERS
  11500						MOV	(SP)+,R1		;AND
  11600						RTS	PC			;EXIT
SOSCOM - COMMON ROUTINES	MACRO M1110  22-AUG-78 05:31  PAGE 3-2
TTY I/O ROUTINES - PRINT & TYPE

  11700
  11800						.IFF
  11900	000200	010246 				MOV	R2,-(SP)		;SAVE SOME REGISTERS
  12000	000202	010346 				MOV	R3,-(SP)		;
  12100	000204	012703 	000000G			MOV	#TTOCTL,R3		;ADR OF OUTPUT BUF ADR AND SIZE
  12200	000210	012302 				MOV	(R3)+,R2		;ADR TO STORE NEXT CHAR
  12300										;POINT R3 AT OUTPUT COUNT
  12400	000212	122710 	000033 		20$:	CMPB	#33,(R0)		;IF ALTMODE
  12500	000216	001003 				BNE	30$
  12600	000220	116722 	000000G			MOVB	ALTCHR,(R2)+		;OUTPUT SPECIFIED ALTMODE CHAR
  12700	000224	000401 				BR	40$
  12800	000226	111022 			30$:	MOVB	(R0),(R2)+		;MOVE CHAR TO OUTPUT BUFFER
  12900	000230	005213 			40$:	INC	(R3)			;COUNT CHARS IN BUFFER
  13000	000232	122720 	000015 			CMPB	#15,(R0)+		;IF CR, FLUSH BUFFER
  13100	000236	001413 				BEQ	90$
  13200	000240	020227 	000000G			CMP	R2,#TTOEND		;IF BUFFER FULL, FLUSH IT
  13300	000244	101013 				BHI	100$
  13400	000246	077117 			50$:	SOB	R1,20$			;GET NEXT CHAR TO OUTPUT
  13500	000250	010243 				MOV	R2,-(R3)		;NEXT AVAIL OUTPT LOC
  13600	000252	012603 				MOV	(SP)+,R3		;RESTORE SAVED REGISTERS
  13700	000254	012602 				MOV	(SP)+,R2
  13800	000256	012601 				MOV	(SP)+,R1
  13900	000260	000207 				RTS	PC			;AND EXIT
  14000					;
  14100					; THE FOLLOWING CALL CHECKS FOR A QI/O ERROR AND ONLY
  14200					; RETURNS IN LINE IF IT WAS AN "OUT OF NODE POOL" ERROR
  14300					; IN THAT CASE IT WILL HAVE DONE A WAIT FOR SIGNIFICANT EVENT
  14400					;
  14500	000262	004767 	000156 		85$:	JSR	PC,QIOERR
  14600	000266	021327 	000001 		90$:	CMP	(R3),#1			;DON'T OUTPUT JUST A CR
  14700	000272	003765 				BLE	50$
  14800	000274	011367 	000046'		100$:	MOV	(R3),TYPDPB+Q.IOPL+2	;CHAR COUNT TO DPB
  14900	000300					DIR$	#TYPDPB			;ISSUE THE QI/O TO WRITE
  15000	000306	103765 				BCS	85$			;BRANCH IF ERROR
  15100	000310					WTSE$S	#1			;WAIT FOR I/O DONE
  15200	000322	114267 	000000G			MOVB	-(R2),TTOBUF		;ASSUMING LAST IS CR, COPY TO FRONT
  15300	000326	012702 	000000G			MOV	#TTOBUF,R2		;POINT TO OUTPUT BUFFER
  15400	000332	005013 				CLR	(R3)			;RESET COUNT
  15500	000334	122712 	000015 			CMPB	#15,(R2)		;DID THIS OUTPUT END IN CR?
  15600	000340	001342 				BNE	50$			;BRANCH IF NOT
  15700	000342	005202 				INC	R2			;YES, INCLUDE ANOTHER AT FRONT
  15800	000344	005213 				INC	(R3)			;SO THAT PROMPTS WILL START WITH CR, LF
  15900	000346	000737 				BR	50$			;GET MORE CHARACTERS IF ANY
  16000
  16100					;
  16200					; INITIALIZE TTY OUTPUT BUFFER WITH A CR, LF PAIR
  16300					; CALLED FOR RSX11M WHEN AN INPUT LINE IS ENDED (OR REPORTEDLY
  16400					; ENDED) WITH A CR.
  16500					;
  16600	000350	016767 	000000G	000000G	INITCR::MOV	CRLF,TTOBUF
  16700	000356	012767 	000002 	000002G		MOV	#2,TTOCTL+2		;SAY 2 CHARS IN BUFFER
  16800	000364	012767 	000002G	000000G		MOV	#TTOBUF+2,TTOCTL
  16900	000372	000207 				RTS	PC
  17000
  17100						.ENDC
SOSCOM - COMMON ROUTINES	MACRO M1110  22-AUG-78 05:31  PAGE 4
TTY I/O ROUTINES

    100						.SBTTL 	TTY I/O ROUTINES
    200
    300	000374					CODE$	COM
    400
    500						.ENABL	LSB
    600
    700	000374				ENTRY	ENABCP				;ENABLE CHECKPOINTING
    800
    900						.IF	NDF,R$$STS
   1000	000374	032767 	000000C	000000G		BIT	#SYS11M!SYS11S,SYSTEM	;IF 11M, OR 11S
   1100	000402	001413 				BEQ	10$
   1200	000404					ENCP$S				;ENABLE CHECKPOINTING
   1300	000412	000207 				RTS	PC
   1400						.ENDC
   1500
   1600	000414				ENTRY	DSABCP			;DISABLE CHECPOINTING
   1700
   1800						.IF	NDF,R$$STS
   1900	000414	032767 	000000C	000000G		BIT	#SYS11M!SYS11S,SYSTEM	;IF 11M, OR 11S
   2000	000422	001403 				BEQ	10$
   2100	000424					DSCP$S				;DISABLE CHECKPOINTING
   2200						.ENDC
   2300
   2400	000432	000207 			10$:	RTS	PC			;AND RETURN
   2500
   2600						.DSABL	LSB
   2700
   2800	000434				ENTRY	NOCTLO				;NOCTLO()
   2900
   3000						.IF	DF,R$$STS
   3100						.TTRST				;RESET CONTROL O EFFECT
   3200						RTS	PC
   3300
   3400						.IFF
   3500	000434	004767 	000064 			JSR	PC,DTACH1		;DETACH, ATTACH SEQUENCE
   3600	000440	000167 	000040 			JMP	ATACH1			;WILL RESET CONTROL O EFFECT
   3700						.ENDC
SOSCOM - COMMON ROUTINES	MACRO M1110  22-AUG-78 05:31  PAGE 5
SUBROUTINES AND MISC STUFF

    100						.SBTTL	SUBROUTINES AND MISC STUFF
    200
    300						.IF	DF,R$$STS
    400					IOCHK::	TST	IOSTS			;CHECK FOR ANY I/O ERROR
    500						BNE	1$			;TOO BAD.
    600						RTS	PC
    700					1$:	JMP	IOFATL			;FATAL I/O ERROR
    800
    900						.IFF
   1000
   1100	000444	022737 	177777 	000000G	QIOERR::CMP	#IE.UPN,@#$DSW		;IF OUT OF NODE POOL
   1200	000452	001405 				BEQ	20$			;THEN WAIT AND TRY AGAIN
   1300	000454	013767 	000000G	000000G		MOV	@#$DSW,IOSTS		;STORE ERR CODE IN CENTRAL PLACE
   1400	000462	000167 	000000G			JMP	IOFATL			;FATAL I/O ERROR
   1500	000466				20$:
   1600	000466				$ALERR::				;RETRY ALL AUTOLOAD ERRORS
   1650	000466				WAITND::				;WAIT FOR NODE POOL AND RETURN
   1700	000466					WSIG$S				;WAIT A BIT
   1800	000474	000207 				RTS	PC			;AND RETURN FOR ANOTHER TRY
   1900					;
   2000					; ATTACH AND DETACH TERMINAL
   2100					;
   2200						.ENABL	LSB
   2300	000476	105767 	000002'		ATTACH::TSTB	TTATDT+Q.IOFN		;ATTACH ALREADY DONE?
   2400	000502	001026 				BNE	30$			;BRANCH IF YES
   2500	000504	012767 	001410 	000002'	ATACH1::MOV	#IO.ATT!TF.AST,TTATDT+Q.IOFN ;SET ATTACH FUNCTION
   2600	000512	000407 				BR	10$
   2700	000514	032767 	000000C	000000G	DETACH::BIT	#SYS11M!SYS11S!SYSMPL,SYSTEM ;NOP UNLESS 11M, 11S, OR MPLUS
   2800	000522	001416 				BEQ	30$
   2900	000524	012767 	002000 	000002'	DTACH1::MOV	#IO.DET,TTATDT+Q.IOFN	;SET DETACH FUNCTION
   3000	000532				10$:	DIR$	#TTATDT			;ISSUE ATTACH/DETACH
   3100	000540	103405 				BCS	20$			;SKIP THE WAIT IF ERROR
   3200	000542					WTSE$S	#1			;WAIT FOR COMPLETION
   3220	000554	105067 	000003'		20$:	CLRB	TTATDT+Q.IOFN+1		;NOT DOING ATT/DET
   3300	000560	000207 			30$:	RTS	PC
   3400
   3500						.DSABL	LSB
   3600
   3700						.ENDC
   3800
   3900	000562	116000 	000052 		FCSDON::MOVB	F.ERR(R0),R0		;RETURN ERROR CODE
   4000	000566	003401 				BLE	10$			;IT WAS ERROR
   4100	000570	005000 				CLR	R0			;BUT POSITIVE IS OK
   4200	000572	000207 			10$:	RTS	PC			;RETURN
SOSCOM - COMMON ROUTINES	MACRO M1110  22-AUG-78 05:31  PAGE 6
SOSCMD - CALL SOS COMMAND DISPATCHER

    100						.SBTTL	SOSCMD - CALL SOS COMMAND DISPATCHER
    200
    300	000574				ENTRY	SOSCMD
    400	000574	004167 	000000G			JSR	R1,$SAV5		;SET UP COMMAND ABORT STACK FRAME
    500	000600	016746 	000000G			MOV	SPSAV2,-(SP)		;SAVE PREVIOUS ABORT FRAME POINTER
    600	000604	012746 	000640'			MOV	#40$,-(SP)		;RETURN POINT FOR COMMAND ABORT
    700	000610	010667 	000000G			MOV	SP,SPSAV2		;SET ABORT FRAME POINTER
    800	000614	016646 	000022 			MOV	<9.*2>(SP),-(SP)	;COPY SOSCMD ARGUMENT
    900	000620	004767 	000000G		10$:	JSR	PC,SOSCM1		;CALL THE COMMAND DISPATCHER
   1000	000624	005716 				TST	(SP)			;IF NEGATIVE PARAMETER
   1100	000626	002403 				BLT	20$			;THEN RETURN TO CALLER
   1200	000630	022700 	177777 			CMP	#-1,R0			;OTHERWISE LOOP UNTIL -1 RETURN
   1300	000634	001371 				BNE	10$
   1400	000636	022626 			20$:	CMP	(SP)+,(SP)+		;CLEAN OFF 2 WORDS
   1500	000640	012667 	000000G		40$:	MOV	(SP)+,SPSAV2		;RESTORE SAVED ABORT FRAME POINTER
   1600	000644	000207 				RTS	PC			;RESTORE REGISTERS AND RETURN
  10200
  10300	000000					.PSECT	FTLMSG,RO,D,GBL,REL,CON
  10400
  10500						.GLOBL	ERMSGA,ERMSGB
  10600
  10700	000000					PLIT	ERMSGA,</Error reading input file/>
  10800	000032					PLIT	ERMSGB,</Unable to PUT to output file/>
SOSCOM - COMMON ROUTINES	MACRO M1110  22-AUG-78 05:31  PAGE 7
RSX TRAP HANDLING ROUTINES AND SST VECTOR

    100						.SBTTL	RSX TRAP HANDLING ROUTINES AND SST VECTOR
    200
    300						.IF	DF,R$$STS
    400
    500						DATA$	COM
    600
    700					SSTVEC::.WORD	IOCHK			;TRAP TO 4
    800						.WORD 0,0,0
    900						.WORD	IOCHK			;TRAP TO 10
   1000						.WORD	0,0,0
   1100						.ENDC
   1200
   1300	000070					CODE$	COM
   1400	000646				CTLC::
   1500						.IF	DF,R$$STS
   1600						TST	CTLCFL			;^C SEEN BEFORE?
   1700						BEQ	2$			;NOT RECENTLY
   1800						JMP	EXIT			;ABORT IF TWO QUICK
   1900					2$:	INC	CTLCFL			;SET FLAG - WE SAW ONE
   2000						MOV	R1,-(SP)		;SAVE A REG
   2100						MOV	2(SP),R1		;GET OLD PC
   2200						CMP	-2(R1),(PC)+		;WAS IT A .READ
   2300						.READ				;THAT WE WERE DOING
   2400						BNE	5$			;NO.
   2500						CMPB	XRB+XRCI,#8.		;ON KB: CHANNEL?
   2600						BNE	5$			;NO.
   2700						MOV	XRB+XRLOC,R1		;BUFFER POINTER
   2800						MOVB	#15,(R1)+		;FUDGE A LINE
   2900						MOVB	#12,(R1)+
   3000						MOV	#2,XRB+XRBC		;LENGTH WAS 2
   3100					5$:	MOV	(SP)+,R1		;RESTORE R1
   3200						RTI				;AND RETURN
   3300
   3400						.IFF
   3500	000646	042716 	177600 			BIC	#177600,(SP)		;ISOLATE THE UNSOLICITED CHARACTER
   3600	000652	022726 	000003 			CMP	#'C-100,(SP)+		;WAS IT CONTROL C?
   3700	000656	001013 				BNE	10$			;BRANCH IF NOT
   3705					;
   3710					; IF A SUBSEQUENT ^C IS ENTERED BEFORE THE NEXT CALL TO GCML,
   3715					; IT WILL BE INTERCEPTED BY THE COMMAND RECEIVER.
   3720					;
   3730	000660	105767 	000003'			TSTB	TTATDT+Q.IOFN+1		;IN THE ATT/DET WINDOW?
   3735	000664	001006 				BNE	8$			;YES, DON'T INTERFERE
   3740	000666	013746 	000000G			MOV	@#$DSW,-(SP)		;DON'T ALLOW THIS TO DESTROY
   3745										;THE DIRECTIVE STATUS WORD
   3750	000672	004767 	177626 			JSR	PC,DTACH1		;DETACH THE TERMINAL
   3755	000676	012637 	000000G			MOV	(SP)+,@#$DSW		;RESTORE DIRECTIVE STATUS
   3800	000702	005267 	000000G		8$:	INC	CTLCFL			;YES, SET CONTROL C FLAG
   3900	000706				10$:	ASTX$S				;EXIT THE AST
   4000
   4100						.ENDC
   4200
   4300		000000'				.END	START
SOSCOM - COMMON ROUTINES	MACRO M1110  22-AUG-78 05:31  PAGE 7-1
SYMBOL TABLE

ALTCHR= ****** GX	FF.CHR= 000005   	F.VBN = 000064   	IE.DUP= 177707   	IE.RAT= 177723
ATACH1  000504RG    003	FF.NV = 000003   	F.VBSZ= 000060   	IE.EOF= 177766   	IE.RBG= 177730
ATTACH  000476RG    003	FF.POE= 000002   	F1.ACR= 000001   	IE.EOT= 177702   	IE.RBS= 177761
CH.AND= 000001   	FF.RWD= 000001   	F1.BTW= 000002   	IE.EOV= 177765   	IE.RCN= 177722
CNVDEC= ****** GX	FF.RWF= 000006   	F1.BUF= 000004   	IE.EXP= 177665   	IE.RER= 177740
CRLF  = ****** GX	FF.SPC= 000004   	F1.CCO= 000020   	IE.FEX= 177717   	IE.RNM= 177715
CTLC    000646RG    003	FO.APD= 000106   	F1.ESQ= 000040   	IE.FHE= 177705   	IE.RSU= 177757
CTLCFL= ****** GX	FO.MFY= 000002   	F1.HLD= 000100   	IE.FIX= 177767   	IE.SDP= 177635
DETACH  000514RG    003	FO.RD = 000001   	F1.LWC= 000200   	IE.FLN= 177657   	IE.SNC= 177735
DSABCP  000414RG    003	FO.UPD= 000006   	F1.RNE= 000400   	IE.FOP= 177713   	IE.SPC= 177772
DTACH1  000524RG    003	FO.WRT= 000016   	F1.RPR= 001000   	IE.HFU= 177744   	IE.SQC= 177734
EMSG    000046RG    003	F.ACTL= 000076   	F1.RST= 002000   	IE.HWR= 177772   	IE.SRE= 177762
ENABCP  000374RG    003	F.ALOC= 000040   	F1.RUB= 004000   	IE.IBS= 177647   	IE.STK= 177706
ERMSGA  000002RG    004	F.BBFS= 000062   	F1.SYN= 010000   	IE.IDU= 177644   	IE.TCH= 177765
ERMSGB  000034RG    004	F.BDB = 000070   	F1.TRW= 020000   	IE.IEF= 177637   	IE.TMM= 177671
EXIT    000010RG    003	F.BGBC= 000057   	F1.UIA= 000010   	IE.IES= 177656   	IE.TMO= 177666
EXIT1 = ****** GX	F.BKDN= 000026   	F1.UTB= 040000   	IE.IFC= 177776   	IE.ULK= 177653
FA.APD= 000100   	F.BKDS= 000020   	F1.VBF= 100000   	IE.IFU= 177747   	IE.ULN= 177773
FA.CRE= 000010   	F.BKEF= 000050   	F2.ALT= 000020   	IE.ILL= 177726   	IE.UNS= 177774
FA.DLK= 001000   	F.BKP1= 000051   	F2.DCH= 000004   	IE.ILU= 177640   	IE.UPN= 177777
FA.ENB= 100000   	F.BKST= 000024   	F2.DKL= 000010   	IE.ILV= 177755   	IE.VER= 177774
FA.EXC= 002000   	F.BKVB= 000064   	F2.GCH= 000002   	IE.INS= 177776   	IE.WAC= 177743
FA.EXT= 000004   	F.CHR = 000075   	F2.SCH= 000001   	IE.IOP= 177655   	IE.WAT= 177741
FA.NSP= 000100   	F.CNTG= 000034   	F2.SFF= 000040   	IE.IPR= 177641   	IE.WCK= 177652
FA.POS= 010000   	F.DFNB= 000046   	GCMLER= ****** GX	IE.ISQ= 177703   	IE.WER= 177737
FA.RD = 000001   	F.DSPT= 000044   	IE.ABO= 177761   	IE.ITI= 177643   	IE.WLK= 177764
FA.RWD= 004000   	F.DVNM= 000134   	IE.ACT= 177771   	IE.ITP= 177650   	IE.WOV= 177653
FA.SEQ= 040000   	F.EFBK= 000010   	IE.ADP= 177636   	IE.ITS= 177770   	IE.2DV= 177720
FA.SHR= 000040   	F.EFN = 000050   	IE.ALC= 177654   	IE.IUI= 177645   	INITCR  000350RG    003
FA.TMP= 000020   	F.EOBB= 000032   	IE.ALG= 177654   	IE.LCK= 177745   	IOFATL= ****** GX
FA.WCK= 020000   	F.ERR = 000052   	IE.ALN= 177736   	IE.LNL= 177646   	IOSTS = ****** GX
FA.WRT= 000002   	F.FACC= 000043   	IE.AST= 177660   	IE.MAP= 177657   	IO.ACE= 007400
FCFATL  000042RG    003	F.FFBY= 000014   	IE.BAD= 177777   	IE.MOD= 177753   	IO.ACR= 006400
FCFAT1= ****** GX	F.FNAM= 000110   	IE.BBE= 177710   	IE.NBF= 177731   	IO.ACW= 007000
FCSDON  000562RG    003	F.FNB = 000102   	IE.BCC= 177676   	IE.NBK= 177727   	IO.ADS= 014000
FD.BLK= 000010   	F.FTYP= 000116   	IE.BDI= 177714   	IE.NDR= 177670   	IO.APC= 014000
FD.CCL= 000002   	F.FVER= 000120   	IE.BDR= 177716   	IE.NFI= 177704   	IO.APV= 014010
FD.COM= 020000   	F.HIBK= 000004   	IE.BDV= 177711   	IE.NFW= 177673   	IO.ATA= 001410
FD.CR = 000002   	F.LUN = 000042   	IE.BHD= 177700   	IE.NLK= 177661   	IO.ATT= 001400
FD.DIR= 000010   	F.MBCT= 000054   	IE.BLB= 177672   	IE.NLN= 177733   	IO.CAS= 015420
FD.FTN= 000001   	F.MBC1= 000055   	IE.BLK= 177754   	IE.NNC= 177663   	IO.CBO= 015510
FD.F11= 040000   	F.MBFG= 000056   	IE.BNM= 177712   	IE.NNL= 177662   	IO.CCI= 014000
FD.INS= 000010   	F.NRBD= 000024   	IE.BTF= 177664   	IE.NNN= 177674   	IO.CCO= 000440
FD.ISP= 002000   	F.NREC= 000030   	IE.BTP= 177725   	IE.NOD= 177751   	IO.CIN= 016500
FD.MNT= 100000   	F.OVBS= 000030   	IE.BVR= 177701   	IE.NSF= 177746   	IO.CLK= 015000
FD.OSP= 004000   	F.RACC= 000016   	IE.BYT= 177755   	IE.NST= 177660   	IO.CLN= 003400
FD.PLC= 000004   	F.RATT= 000001   	IE.CKP= 177766   	IE.NSW= 177756   	IO.CNT= 017000
FD.PRN= 000004   	F.RCNM= 000034   	IE.CKS= 177742   	IE.NVR= 177652   	IO.CON= 015400
FD.PSE= 010000   	F.RCTL= 000017   	IE.CLO= 177732   	IE.NVW= 177651   	IO.CPR= 015410
FD.RAH= 000001   	F.RSIZ= 000002   	IE.CNR= 177667   	IE.OFL= 177677   	IO.CPW= 016520
FD.RAN= 000002   	F.RTYP= 000000   	IE.CON= 177752   	IE.ONP= 177773   	IO.CRC= 001040
FD.REC= 000001   	F.SEQN= 000100   	IE.DAA= 177770   	IE.OVR= 177756   	IO.CRE= 012000
FD.RWM= 000001   	F.SPDV= 000072   	IE.DAO= 177763   	IE.PES= 177655   	IO.CRJ= 015440
FD.SDI= 000020   	F.SPUN= 000074   	IE.DFU= 177750   	IE.PNS= 177642   	IO.CSI= 013000
FD.SQD= 000040   	F.STBK= 000036   	IE.DNA= 177771   	IE.PRI= 177760   	IO.CSM= 016470
FD.TTY= 000004   	F.UNIT= 000136   	IE.DNR= 177775   	IE.PTS= 177775   	IO.CTI= 015400
FD.WBH= 000002   	F.URBD= 000020   	IE.DUN= 177767   	IE.RAC= 177724   	IO.CTL= 016400
SOSCOM - COMMON ROUTINES	MACRO M1110  22-AUG-78 05:31  PAGE 7-2
SYMBOL TABLE

IO.CTR= 015610   	IO.RCV= 015000   	IO.WLV= 000500   	QIOERR  000444RG    003	S.FTYP= 000002
IO.CTY= 003400   	IO.RDB= 001200   	IO.WMS= 000420   	Q.IOAE= 000012   	S.NFEN= 000020
IO.DAC= 010000   	IO.RDD= 010010   	IO.WNS= 000420   	Q.IOEF= 000006   	S.0   = 000001
IO.DCI= 014400   	IO.RDN= 000022   	IO.WPB= 000440   	Q.IOFN= 000002   	S.100 = 000004
IO.DEL= 012400   	IO.REL= 013400   	IO.WVB= 011000   	Q.IOLU= 000004   	S.110 = 000005
IO.DET= 002000   	IO.RHD= 001010   	IO.XMT= 014400   	Q.IOPL= 000014   	S.1200= 000013
IO.DIS= 016000   	IO.RLB= 001000   	IO.XNA= 014410   	Q.IOPR= 000007   	S.134 = 000006
IO.DLB= 016540   	IO.RLV= 001100   	IQ.Q  = 000002   	Q.IOSB= 000010   	S.150 = 000007
IO.DSI= 013400   	IO.RMT= 010020   	IQ.S  = 000004   	RONLY$= 000001   	S.1800= 000014
IO.DTI= 016000   	IO.RNA= 005400   	IQ.UMD= 000004   	R$$EIS= 000001   	S.200 = 000010
IO.DTY= 006400   	IO.RNC= 001040   	IQ.X  = 000001   	R$$SHR= 000001   	S.2000= 000015
IO.ENA= 006000   	IO.RNE= 001020   	IS.BV = 000005   	R.FIX = 000001   	S.2400= 000016
IO.EOF= 003000   	IO.RNS= 001020   	IS.CC = 001401   	R.SEQ = 000003   	S.300 = 000011
IO.EXT= 011400   	IO.RPB= 001040   	IS.CLR= 000000   	R.VAR = 000002   	S.3600= 000017
IO.FDX= 003020   	IO.RPR= 004400   	IS.CR = 006401   	SE.BIN= 000003   	S.4800= 000020
IO.FLN= 012400   	IO.RST= 001001   	IS.EOT= 002001   	SE.FIX= 000002   	S.50  = 000002
IO.FNA= 004400   	IO.RTC= 003400   	IS.ESC= 015401   	SE.ICN= 000001   	S.600 = 000012
IO.GLC= 016430   	IO.RTI= 016400   	IS.ESQ= 115401   	SE.LPR= 000011   	S.7200= 000021
IO.GLI= 016420   	IO.RTK= 000060   	IS.PES= 100001   	SE.NIH= 000014   	S.75  = 000003
IO.GNI= 016410   	IO.RTM= 001200   	IS.PND= 000000   	SE.NSC= 000012   	S.9600= 000022
IO.GRC= 016450   	IO.RVB= 010400   	IS.RDD= 000002   	SE.PAR= 000010   	TC.ACR= 000024
IO.GRI= 016440   	IO.RWD= 002400   	IS.SET= 000002   	SE.SPD= 000006   	TC.ALT= 000031
IO.GRN= 016460   	IO.RWU= 002540   	IS.SPD= 000002   	SE.SPL= 000007   	TC.BLK= 000042
IO.GTS= 002400   	IO.R1C= 002400   	IS.SUC= 000001   	SE.TER= 000005   	TC.BSP= 000023
IO.HDX= 003010   	IO.SAO= 004000   	IS.TAB= 004401   	SE.UPN= 000013   	TC.CCF= 000030
IO.HIS= 015000   	IO.SCS= 013000   	IS.TMO= 000002   	SE.VAL= 000004   	TC.CEQ= 000046
IO.HNG= 003000   	IO.SDI= 013000   	LISTN1  000020RG    003	SF.DEF= 000010   	TC.DLU= 000041
IO.INI= 014400   	IO.SDO= 012400   	LISTN2= ****** GX	SF.GAC= 002600   	TC.EPA= 000040
IO.INL= 002400   	IO.SEC= 002520   	LISTN3  000032RG    003	SF.GMC= 002560   	TC.ESQ= 000035
IO.ITI= 017000   	IO.SET= 000030   	LISTN4= ****** GX	SF.GSC= 002540   	TC.FRM= 000043
IO.KIL= 000012   	IO.SLO= 005400   	NB.DEV= 000200   	SF.RDF= 002460   	TC.HFF= 000017
IO.LDI= 007000   	IO.SMO= 002560   	NB.DIR= 000100   	SF.SAC= 002620   	TC.HFL= 000013
IO.LED= 012000   	IO.SPB= 002420   	NB.NAM= 000004   	SF.SMC= 002440   	TC.HHT= 000021
IO.LEI= 007410   	IO.SPF= 002440   	NB.SD1= 000400   	SF.SSC= 002420   	TC.HLD= 000044
IO.LKE= 012000   	IO.SPW= 016510   	NB.SD2= 001000   	SF.STS= 002520   	TC.IMG= 000032
IO.LOD= 014000   	IO.SSO= 004400   	NB.SNM= 000040   	SF.STT= 002500   	TC.ISL= 000006
IO.LOV= 001010   	IO.STA= 015400   	NB.STP= 000020   	SOSCMD  000574RG    003	TC.LCP= 000036
IO.LSI= 011000   	IO.STC= 002500   	NB.SVR= 000010   	SOSCM1= ****** GX	TC.LPP= 000002
IO.LTI= 007400   	IO.STP= 016400   	NB.TYP= 000002   	SOSERR  000014RG    003	TC.LVF= 000020
IO.LTK= 000050   	IO.SYN= 003040   	NB.VER= 000001   	SOSGO = ****** GX	TC.MAX= 000064
IO.LTY= 010000   	IO.TRM= 002410   	NOCTLO  000434RG    003	SOSRRR= ****** GX	TC.NEC= 000047
IO.MAO= 003410   	IO.UDI= 011410   	N.DID = 000024   	SPSAV2= ****** GX	TC.NKB= 000033
IO.MCS= 013400   	IO.UEI= 011450   	N.DVNM= 000032   	START   000000R     003	TC.NL = 000015
IO.MDA= 016000   	IO.UER= 011440   	N.FID = 000000   	START1= ****** GX	TC.NPR= 000034
IO.MDI= 014400   	IO.ULK= 005000   	N.FNAM= 000006   	START2  000004RG    003	TC.NST= 000022
IO.MDO= 015400   	IO.UNL= 000042   	N.FTYP= 000014   	SYSMPL= ****** GX	TC.PAR= 000037
IO.MLO= 006000   	IO.USI= 011460   	N.FVER= 000016   	SYSTEM= ****** GX	TC.PRI= 000051
IO.MOD= 003000   	IO.UTI= 011420   	N.NEXT= 000022   	SYS11M= ****** GX	TC.RAT= 000007
IO.MSO= 005000   	IO.UTY= 011430   	N.STAT= 000020   	SYS11S= ****** GX	TC.RSP= 000003
IO.NLB= 016530   	IO.WAL= 000410   	N.UNIT= 000034   	S.EXTA= 000023   	TC.SCP= 000012
IO.NLK= 011400   	IO.WAT= 013400   	PRINT   000074RG    003	S.EXTB= 000024   	TC.SCR= 000011
IO.ONL= 017400   	IO.WBT= 000500   	PRINTC  000046RG    003	S.FATT= 000016   	TC.SFF= 000016
IO.RAD= 010400   	IO.WDD= 000444   	PRINTN  000132RG    003	S.FDB = 000140   	TC.SLV= 000050
IO.RAL= 001010   	IO.WLB= 000400   	PRINTZ  000112RG    003	S.FNAM= 000006   	TC.SMO= 000027
IO.RAT= 013000   	IO.WLC= 000420   	PRTINL  000064RG    003	S.FNB = 000036   	TC.SMP= 000026
IO.RBC= 003000   	IO.WLS= 000410   	PRTR0   000100R     003	S.FNBW= 000017   	TC.SMR= 000025
IO.RCI= 015000   	IO.WLT= 000410   	PRTZ1   000116R     003	S.FNTY= 000004   	TC.STB= 000005
SOSCOM - COMMON ROUTINES	MACRO M1110  22-AUG-78 05:31  PAGE 7-3
SYMBOL TABLE

TC.TAP= 000045   	TC.XSP= 000004   	TF.XOF= 000100   	T.LA36= 000006   	T.VT52= 000011
TC.TTP= 000010   	TF.AST= 000010   	TIOLUN= ****** GX	T.L180= 000014   	T.VT55= 000012
TC.UC0= 000052   	TF.BIN= 000002   	TTATDT  000000R     002	T.L30P= 000005   	T.VT61= 000013
TC.UC1= 000053   	TF.CCO= 000040   	TTOBUF= ****** GX	T.L30S= 000004   	WAITND  000466RG    003
TC.UC2= 000054   	TF.ESQ= 000020   	TTOCTL= ****** GX	T.SCR0= 000015   	$ALERR  000466RG    003
TC.UC3= 000055   	TF.RAL= 000010   	TTOEND= ****** GX	T.UNK0= 000000   	$DSW  = ****** GX
TC.UC4= 000056   	TF.RNC= 000040   	TYPDPB  000030RG    002	T.USR0= 000016   	$SAV5 = ****** GX
TC.UC5= 000057   	TF.RNE= 000020   	TYPE    000166RG    003	T.USR1= 000017   	$$MSG = 000000
TC.UC6= 000060   	TF.RST= 000001   	TYPECR  000056RG    003	T.USR2= 000020   	$$$ARG= 000006
TC.UC7= 000061   	TF.SYN= 000200   	TYPIT   000200R     003	T.USR3= 000021   	$$$OST= 000014
TC.UC8= 000062   	TF.TMO= 000200   	TYPSTR  000152RG    003	T.USR4= 000022   	.GCML1= ****** GX
TC.UC9= 000063   	TF.WAL= 000010   	T.AS33= 000001   	T.VT05= 000007   	...GBL= 000000
TC.VFL= 000014   	TF.WBT= 000100   	T.AS35= 000003   	T.VT50= 000010   	...TPC= 000140
TC.WID= 000001   	TF.WMS= 000020   	T.KS33= 000002

. ABS.	000000	   000
      	000000	   001
COM.D 	000060	   002
CODE  	000714	   003
FTLMSG	000070	   004
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  6626 WORDS  ( 26 PAGES)
DYNAMIC MEMORY:  8052 WORDS  ( 30 PAGES)
ELAPSED TIME:  00:00:27
OBJ$:SOSCOM,LIS$:SOSCOM/-SP/NL:TOC=SRC$:PREFIX,SOSCOM
