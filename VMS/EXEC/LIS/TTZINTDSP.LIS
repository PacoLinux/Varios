TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      91  DZ CONTROL REGISTER DEFINITIONS
   (3)     147  INITIALIZATION OF DZ11 INTERFACE
   (4)     208  TTZ$INITLINE - RESET INDIVIDUAL LINE
   (6)     272  RECEIVER INTERRUPT SERIVCE
   (7)     346  DZ-11 START I/O ROUTINE
   (8)     371  DZ-11 OUTPUT INTERRUPT INTERRUPT SERVICE
   (9)     443  TTZ$TIMER - DIALUP TIMER ROUTINE
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page   1
V06                                                                                                                              (1)

                                     0000     1 
                                     0000     2 	.TITLE	TTZINTDSP - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT
                                     0000     3 	.IDENT	/V06/		;
                                     0000     4 
                                     0000     5 ;
                                     0000     6 ; COPYRIGHT (C) 1978
                                     0000     7 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000     8 ;
                                     0000     9 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000    10 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000    11 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000    12 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000    13 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000    14 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000    15 ; REMAIN IN DEC.
                                     0000    16 ;
                                     0000    17 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000    18 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000    19 ; CORPORATION.
                                     0000    20 ;
                                     0000    21 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000    22 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    23 
                                     0000    24 ;++
                                     0000    25 ; FACILITY:
                                     0000    26 ;
                                     0000    27 ;	VAX/VMS TERMINAL DRIVER
                                     0000    28 ;
                                     0000    29 ; ABSTRACT:
                                     0000    30 ;
                                     0000    31 ;	DZ-11 DEVICE DEPENDENT ROUTINES.
                                     0000    32 ;
                                     0000    33 ; AUTHOR: R.HEINEN 16-OCT-76
                                     0000    34 ;--
                                     0000    35 ;
                                     0000    36 ; EXTERNAL DEFINITIONS:
                                     0000    37 ;
                                     0000    38 	$ACBDEF				; DEFINE ACB
                                     0000    39 	$CRBDEF				; DEFINE CRB
                                     0000    40 	$DDBDEF				; DEFINE DDB
                                     0000    41 	$IDBDEF				; DEFINE IDB OFFSETS
                                     0000    42 	$TTYDEF				; DEFINE TERMINAL DRIVER SYMBOLS
                                     0000    43 	$TTDEF				; DEFINE TERMINAL TYPES
                                     0000    44 	$UCBDEF				; DEFINE UCB
                                     0000    45 	$TTYUCBDEF			; DEFINE TERMINAL DRIVER SYMBOLS
                                     0000    46 	$UBADEF				; DEFINE UBA
                                     0000    47 	$VECDEF				; DEFINE VECTOR FOR CRB
                                     0000    48 	TTYMACS				; DEFINE TERMINAL DRIVER MACROS
                                     0000    49  
                                     0000    50 ;
                                     0000    51 ; LOCAL STORAGE
                                     0000    52 ;
                                 00000000    53 	.PSECT	$$$105_PROLOGUE
                                     0000    54 TT$DPT::				; DRIVER START
                                     0000    55 	DPTAB	-			; DRIVER PROLOGUE TABLE
                                     0000    56 		END=TTZ_END,-		; END OF DRIVER
                                     0000    57 		UCBSIZE=<^X0AC>,-	; SIZE OF UCB
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page   2
V06                                                                                                                              (1)

                                     0000    58 		ADAPTER=UBA,-		; ADAPTER TYPE
                                     0000    59 		NAME=DZDRIVER		; NAME OF DRIVER
                                     001F    60 	DPT_STORE INIT
                                     001F    61 	DPT_STORE UCB,UCB$B_FIPL,B,8	; FORK IPL
                                     0023    62 	DPT_STORE UCB,UCB$L_FPC,L,TTY$FORK_ADDR; FORK DISPATCHER
                                     002A    63 	DPT_STORE UCB,UCB$L_DEVCHAR,L,<-; CHARACTERISTICS
                                     002A    64 			DEV$M_REC!-	;
                                     002A    65 			DEV$M_AVL!-	;
                                     002A    66 			DEV$M_IDV!-	;
                                     002A    67 			DEV$M_ODV!-	;
                                     002A    68 			DEV$M_TRM!-	;
                                     002A    69 			DEV$M_CCL>
                                     0031    70 	DPT_STORE UCB,UCB$B_DEVCLASS,B,DC$_TERM;
                                     0035    71 	DPT_STORE UCB,UCB$B_TT_DETYPE,B,TT$_UNKNOWN; TYPE
                                     0039    72 	DPT_STORE UCB,UCB$W_TT_DESIZE,@W,TTY$GW_DEFBUF; BUFFER SIZE
                                     0040    73 	DPT_STORE UCB,UCB$L_TT_DECHAR,@L,TTY$GL_DEFCHAR; DEFAULT CHARACTERS
                                     0047    74 	DPT_STORE UCB,UCB$B_TT_DESPEE,@B,TTY$GB_DEFSPEED; DEFAULT SPEED
                                     004E    75 	DPT_STORE UCB,UCB$B_DEVTYPE,B,TT$_UNKNOWN; TYPE
                                     0052    76 	DPT_STORE UCB,UCB$W_DEVBUFSIZ,@W,TTY$GW_DEFBUF; BUFFER SIZE
                                     0059    77 	DPT_STORE UCB,UCB$L_DEVDEPEND,@L,TTY$GL_DEFCHAR; DEFAULT CHARACTERS
                                     0060    78 	DPT_STORE UCB,UCB$B_TT_SPEED,@B,TTY$GB_DEFSPEED; DEFAULT SPEED
                                     0067    79 	DPT_STORE UCB,UCB$B_DIPL,B,21	; DEVICE IPL
                                     006B    80  
                                     006B    81 	DPT_STORE REINIT
                                     006B    82 	DPT_STORE DDB,DDB$L_DDT,L,TT$DDT; DDT FOR TERMINALS
                                     0072    83 	DPT_STORE CRB,CRB$L_INTD+4,D,TTZ$INTINP; RECEIVER INTERRUPT
                                     0077    84 	DPT_STORE CRB,CRB$L_INTD2+4,D,TTZ$INTOUT; TRANSMITTER INTERRUPT
                                     007C    85 	DPT_STORE CRB,CRB$L_INTD+VEC$L_INITIAL,D,TTZ$INITIAL; CONTROLLER INIT
                                     0081    86 	DPT_STORE CRB,CRB$L_INTD+VEC$L_UNITINIT,D,TTZ$INITLINE; UNIT INIT
                                     0086    87 	DPT_STORE CRB,CRB$L_INTD+VEC$L_START,D,TTZ$STARTIO; START I/O
                                     008B    88 	DPT_STORE CRB,CRB$L_INTD+VEC$L_UNITDISC,D,TTZ$DISCONNECT
                                     0090    89 	DPT_STORE END
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page   3
V06             DZ CONTROL REGISTER DEFINITIONS                                                                                  (2)

                                     0000    91 	.SBTTL	DZ CONTROL REGISTER DEFINITIONS
                                     0000    92  
                                 00000000    93 	.PSECT	$$$115_DRIVER,LONG
                                     0000    94 ;
                                     0000    95 ; CSR BIT DEFINITIONS ( CSR ) ( READ/WRITE )
                                     0000    96 ;
                           00000003  0000    97 DZ_CSR_MAINT	= 3		; TURN AROUND LINE
                           00000004  0000    98 DZ_CSR_CLEAR	= 4		; CLEAR UNIT
                           00000005  0000    99 DZ_CSR_MASTENAB	= 5		; MASTER SCAN ENABLE
                           00000006  0000   100 DZ_CSR_RCVINT	= 6		; RECEIVER INTERRUPT ENABLE
                           00000007  0000   101 DZ_CSR_RCVRDY	= 7		; RECEIVER READY
                           00000008  0000   102 DZ_CSR_LINE	= 8		; LINE NUMBER 0<=N<=7
                           0000000E  0000   103 DZ_CSR_SNDINT	= 14		; OUTPUT INTERRUPT ENABLE
                           0000000F  0000   104 DZ_CSR_SNDRDY	= 15		; OUTPUT READY
                                     0000   105  
                                     0000   106 ;
                                     0000   107 ; RECEIVER BUFFER ( CSR+2 ) ( READ ONLY )
                                     0000   108 ;
                                     0000   109  
                           00000000  0000   110 DZ_RCV_BUF	= 0		; RECEIVER DATA  ( 8-BITS )
                           00000008  0000   111 DZ_RCV_LINE	= 8		; RECIEVER LINE NUMBER 0<=N<=7
                           0000000C  0000   112 DZ_RCV_PARERR	= 12		; PARITY ERROR
                           0000000D  0000   113 DZ_RCV_FRAMER	= 13		; FRAME ERROR
                           0000000E  0000   114 DZ_RCV_OVERRUN	= 14		; RECEIVER OVERRUN
                           0000000F  0000   115 DZ_RCV_VALID	= 15		; DATA IS VALID
                                     0000   116  
                                     0000   117 ;
                                     0000   118 ; LINE PARAMETER REGICTER ( CSR+2 ) ( WRITE ONLY )
                                     0000   119 ;
                                     0000   120  
                           00000000  0000   121 DZ_LPR_LINE	= 0		; LINE NUMBER 0<=N<=7
                           00000003  0000   122 DZ_LPR_SIZE	= 3		; CHARACTER SIZE ( ALWAYS = 3
                           00000008  0000   123 DZ_LPR_SPEED	= 8		; SPEED OF LINE
                           0000000C  0000   124 DZ_LPR_CLOCK	= 12		; SET RECEIVER CLOCK ON (ALWAYS 1)
                                     0000   125  
                                     0000   126 ;
                                     0000   127 ; TRANSMITTER CONTROL ( CSR+4 ) ( READ/WRITE )
                                     0000   128 ;
                                     0000   129  
                           00000000  0000   130 DZ_TRN_LINE	= 0		; LINE BIT NUMBER
                           00000008  0000   131 DZ_TRN_DTA = 8			; DATA TERMINAL READY MASK
                                     0000   132  
                                     0000   133 ;
                                     0000   134 ; MODEM STATUS( CSR+6 ) ( READ ONLY )
                                     0000   135 ;
                                     0000   136  
                           00000000  0000   137 DZ_MOD_RING	= 0		; RING INDICATOR MASK
                           00000008  0000   138 DZ_MOD_CARRIER	= 8		; CARRIER MASK
                                     0000   139  
                                     0000   140 ;
                                     0000   141 ; TRANSMIT DATA BUFFER ( CSR+6 ) ( WRITE ONLY )
                                     0000   142 ;
                                     0000   143  
                           00000000  0000   144 DZ_SND_BUF	= 0		; SEND DATA BUFFER
                           00000008  0000   145 DZ_SND_BREAK	= 8		; BREAK ON LINE MASK
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page   4
V06             INITIALIZATION OF DZ11 INTERFACE                                                                                 (3)

                                     0000   147 	.SBTTL	INITIALIZATION OF DZ11 INTERFACE
                                     0000   148 ;++
                                     0000   149 ; TTZ$INITIAL - INITIALIZE INTERFACE
                                     0000   150 ;
                                     0000   151 ; FUNCTIONAL DESCRIPTION:
                                     0000   152 ;
                                     0000   153 ; THIS ROUTINE IS ENTERED AT SYSTEM STARTUP AND POWER RECOVERY.
                                     0000   154 ;
                                     0000   155 ; INPUTS:
                                     0000   156 ;
                                     0000   157 ;	R4 = ADDRESS OF THE UNIT CSR
                                     0000   158 ;	R5 = IDB OF UNIT
                                     0000   159 ;	R8 = ADDRESS OF THE UNIT CRB
                                     0000   160 ;
                                     0000   161 ; OUTPUTS:
                                     0000   162 ;
                                     0000   163 ;	ALL REGISTERS ARE SAVED.
                                     0000   164 ;
                                     0000   165 ; IMPLICIT INPUTS:
                                     0000   166 ;
                                     0000   167 ;	IPL = IPL$_POWER
                                     0000   168 ;
                                     0000   169 ;--
                                     0000   170 TTZ$INITIAL::				; INITIALIZE DZ-11 UNIT
                                     0000   171 ;
                                     0000   172 ; SET UP CONTROLLER
                                     0000   173 ;
            64            10     B0  0000   174 	MOVW	#1@DZ_CSR_CLEAR,(R4)	; SET CLEAR AND CONTINUE
            52         64 8F     9A  0003   175 	MOVZBL	#100,R2			; LOOP UNTIL DONE OR FAIL
            64            10     B3  0007   176 15$:	BITW	#1@DZ_CSR_CLEAR,(R4)	; DONE?
                                 01  000A   177 	NOP				; REALEASE UBA
                                 01  000B   178 	NOP
                                 01  000C   179 	NOP
                                 01  000D   180 	NOP
                                 01  000E   181 	NOP
                                 01  000F   182 	NOP
                                 01  0010   183 	NOP
                                 01  0011   184 	NOP
                          03     13  0012   185 	BEQL	20$			; IF EQL THEN YES
            F0            52     F5  0014   186 	SOBGTR	R2,15$			;
            64       4060 8F     B0  0017   187 20$:	MOVW	#<<1@DZ_CSR_MASTENAB>!-	;
                                     001C   188 		<1@DZ_CSR_RCVINT>!-
                                     001C   189 		<1@DZ_CSR_SNDINT>>,(R4);
                                     001C   190 ;
                                     001C   191 ; INSERT CRB ON DIALUP LIST
                                     001C   192 ;
            68   00000000'GF     D0  001C   193 	MOVL	G^IOC$GL_DIALUP,(R8)	; INSERT ON LIST
                          14     12  0023   194 	BNEQ	30$			; CONTINUE IF NEQ
   00000000'GF   00000000'EF     D0  0025   195 	MOVL	TTY$GL_DELTA,G^TTY$GL_TMRDELTA; SET UP TIMER INTERVAL
   FFFFFFEC'GF       019E'CF     9E  0030   196 	MOVAB	W^TTZ$TIMER,G^TTY$GL_TMRDELTA-20; SET UP ROUTINE ADDRESS
   00000000'GF            58     D0  0039   197 30$:	MOVL	R8,G^IOC$GL_DIALUP	; INSERT AT HEAD
                                     0040   198 ;
                                     0040   199 ; INITIALIZE DIALUP STATE
                                     0040   200 ;
            52         06 A4     B0  0040   201 	MOVW	6(R4),R2		; GET CURRENT CARRIER SIGNAL
                          52     94  0044   202 	CLRB	R2			; SET NO LINES
         04 A4            52     B0  0046   203 	MOVW	R2,4(R4)		; SET OR CLEAR DTR BASED ON CURRENT CARRIER
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page   5
V06             INITIALIZATION OF DZ11 INTERFACE                                                                                 (3)

                       04 A8     B4  004A   204 	CLRW	CRB$B_TT_ATTN(R8)	; RESET MODEM FIELDS
         06 A8            01     8E  004D   205 	MNEGB	#1,CRB$B_TT_EXPEC+1(R8)	; SET UP POLLING MASK
                                 05  0051   206 	RSB
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page   6
V06             TTZ$INITLINE - RESET INDIVIDUAL LINE                                                                             (4)

                                     0052   208 	.SBTTL	TTZ$INITLINE - RESET INDIVIDUAL LINE
                                     0052   209 ;++
                                     0052   210 ; TTZ$INITLINE - RESET SPEED, PARITY
                                     0052   211 ;
                                     0052   212 ; FUNCTIONAL DESCRIPTION:
                                     0052   213 ;
                                     0052   214 ; THIS ROUTINE PERFORMS A SIMPLE UNIT INITIALIZATION.
                                     0052   215 ;
                                     0052   216 ; INPUTS:
                                     0052   217 ;
                                     0052   218 ;	R5 = UCB ADDRESS
                                     0052   219 ;
                                     0052   220 ; OUTPUTS:
                                     0052   221 ;
                                     0052   222 ;	R2,R5 ARE PRESERVED.
                                     0052   223 ;--
                                     0052   224 TTZ$INITLINE::				; RESET SINGLE LINE
         58 A5            10     A8  0052   225 	BISW	#UCB$M_ONLINE,UCB$W_STS(R5); SET ONLINE
            54         20 A5     D0  0056   226 	MOVL	UCB$L_CRB(R5),R4	; ADDRESS CRB
         58 A5            05     E0  005A   227 	BBS	#UCB$V_POWER,UCB$W_STS(R5),10$; BR IF POWERFAIL
                          0C         005E       
                       50 A5     B5  005F   228 	TSTW	UCB$W_REFC(R5)		; DEVICE IN USE?
                          07     12  0062   229 	BNEQ	10$			; IF NEQ THEN YES
                          FF99'  30  0064   230 	BSBW	TTY$SETUP_UCB		; INITIALIZE THE UCB IF NOT IN USE
                     0096 C5     94  0067   231 	CLRB	UCB$B_TT_DIAL(R5)	; SET IDLE DIAL
            54         1C B4     D0  006B   232 10$:	MOVL	@CRB$L_INTD+VEC$L_IDB(R4),R4; GET THE CSR ADDRESS VIA CRB
            01         48 A5     78  006F   233 	ASHL	UCB$W_UNIT(R5),#1,R3	; BUILD UNIT'S BIT MASK
                          53         0073       
         70 A5            53     B0  0074   234 	MOVW	R3,UCB$B_ERTCNT(R5)	; SAVE IT
                          7E     D4  0078   235 	CLRL	-(SP)			; RESET A TEMPORARY LOCATION
       009C C5            01     83  007A   236 	SUBB3	#1,UCB$B_TT_SPEED(R5),R3; ADJUST DATA BASE SPEED
                          53         007F       
            53            10     89  0080   237 	BISB3	#<1@<DZ_LPR_CLOCK-8>>,R3,1(SP); INSERT SPEED CODE
                       01 AE         0083       
            53         3F 8F     8A  0085   238 	BICB	#^C<TT$M_PARITY!TT$M_ODD>,R3; RESERVE PARITY FLAGS
         48 A5            18     89  0089   239 	BISB3	#<3@DZ_LPR_SIZE>,UCB$W_UNIT(R5),(SP); INSERT UNIT NUMBER
                          6E         008D       
            6E            53     88  008E   240 	BISB	R3,(SP)			; INSERT PARITY 
         02 A4            8E     F7  0091   241 	CVTLW	(SP)+,2(R4)		; INSERT AS LINE PARAMETER
                                 05  0095   242 	RSB
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page   7
V06             TTZ$INITLINE - RESET INDIVIDUAL LINE                                                                             (5)

                                     0096   244 ;++
                                     0096   245 ; TTZ$DISCONNECT - SHUT OFF UNIT
                                     0096   246 ;
                                     0096   247 ; FUNCTIONAL DESCRIPTION:
                                     0096   248 ;
                                     0096   249 ; THIS ROUTINE IS USED WHEN FOR SOME REASON THE UNIT MUST BE DISCONNECTED.
                                     0096   250 ;
                                     0096   251 ; THIS CAN BEE AT HANGUP OR LAST DEASSIGN. DTR IS CLEARED.
                                     0096   252 ;
                                     0096   253 ; INPUTS:
                                     0096   254 ;
                                     0096   255 ;	R5 = UBC ADDRESS
                                     0096   256 ;
                                     0096   257 ; OUTPUTS:
                                     0096   258 ;
                                     0096   259 ;	R3,R4 ARE USED.
                                     0096   260 ;--
                                     0096   261 TTZ$DISCONNECT::			; DISCONNECT UNIT
            54         20 A5     D0  0096   262 	MOVL	UCB$L_CRB(R5),R4	; ADDR THE CSR VIA CRB
   00000100 8F         48 A5     78  009A   263 	ASHL	UCB$W_UNIT(R5),#^X0100,R3; CLEAR DTR
                          53         00A2       
       0096 C5            09     91  00A3   264 	CMPB	#TTY$C_DS_ATTN3,UCB$B_TT_DIAL(R5); ALREADY IN HANGUP SEQUENCE?
                          09     1B  00A8   265 	BLEQU	10$			; IF LEQU THEN YES
       0096 C5            09     90  00AA   266 	MOVB	#TTY$C_DS_ATTN3,UCB$B_TT_DIAL(R5); SET ATTENTION STATE
         03 A4            53     A8  00AF   267 	BISW	R3,CRB$B_TT_ATTN-1(R4)	; SET ATTENTION FOR TIMER
            54         1C B4     D0  00B3   268 10$:	MOVL	@CRB$L_INTD+VEC$L_IDB(R4),R4; 
         04 A4            53     AA  00B7   269 	BICW	R3,4(R4)		;
                                 05  00BB   270 	RSB
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page   8
V06             RECEIVER INTERRUPT SERIVCE                                                                                       (6)

                                     00BC   272 	.SBTTL	RECEIVER INTERRUPT SERIVCE
                                     00BC   273 ;++
                                     00BC   274 ; TTZ$INTINP - DZ-11 RECEIVER READY INTERRUPTS
                                     00BC   275 ;
                                     00BC   276 ; FUNCTIONAL DESCRIPTION:
                                     00BC   277 ;
                                     00BC   278 ; THIS ROUTINE IS ENTERED WHEN A CHARACTER IS AVAILABLE IN THE UNIT'S
                                     00BC   279 ; SILO. THE CHARACTER IS EXTRACTED AND THE TERMINAL DRIVER'S CHARACTER
                                     00BC   280 ; BUFFER ROUTINE IS CALLED.
                                     00BC   281 ;
                                     00BC   282 ; INPUTS:
                                     00BC   283 ;
                                     00BC   284 ;	00(SP) = ADDRESS OF IDB
                                     00BC   285 ;
                                     00BC   286 ; IMPLICIT INPUTS:
                                     00BC   287 ;
                                     00BC   288 ;	R0,R1,R2,R3,R4,R5 ARE SAVED ON STACK.
                                     00BC   289 ;
                                     00BC   290 ; OUTPUTS:
                                     00BC   291 ;
                                     00BC   292 ;	THE INTERRUPT IS DISMISSED WHEN THE SILO IS EMPTY.
                                     00BC   293 ;
                                     00BC   294 ;--
                                     00BC   295 TTZ$INTINP::				; DZ-11 INPUT INTERRUPTS
                                     00BC   296 ;
                                     00BC   297 ; GET THE CSR ADDRESS
                                     00BC   298 ;
            54            9E     D0  00BC   299 	MOVL	@(SP)+,R4		; GET THE IDB ADDRESS
                          54     DD  00BF   300 	PUSHL	R4			; SAVE IDB ADDRESS
            50            64     D0  00C1   301 	MOVL	(R4),R0			; GET THE CSR ADDRESS
                                     00C4   302 ;
                                     00C4   303 ; GET THE CHARACTER FROM THE INTERFACE
                                     00C4   304 ;
            53         02 A0     B0  00C4   305 25$:	MOVW	2(R0),R3		; GET THE CHARACTER,ERRORS AND LINE NUMBER
                          2A     18  00C8   306 	BGEQ	50$			; IF GEQ THEN SILO EMPTY OR INVALID DATA
            53         F8 8F     78  00CA   307 	ASHL	#-8,R3,R2		; GET THE LINE NUMBER
                          52         00CE       
            52   FFFFFFF8 8F     CA  00CF   308 	BICL	#^C<7>,R2		; 
            53            53     9A  00D6   309 	MOVZBL	R3,R3			; CLEAR THE HIGH BYTES OF CHARACTER
            55         10 A442   D0  00D9   310 	MOVL	IDB$L_UCBLST(R4)[R2],R5	; GET THE UCB FOR THAT LINE
                          E4     13  00DE   311 	BEQL	25$			; IF EQL THEN NOT THERE
                          FF1D'  30  00E0   312 	BSBW	TTY$PUTNEXTCHAR		; BUFFER THE CHARACTER
                          0A     13  00E3   313 	BEQL	30$			; IF EQL THEN NO CHARACTER TO OUTPUT
       0090 C5            53     B0  00E5   314 	MOVW	R3,UCB$W_TT_HOLD(R5)	; SAVE THE CHARACTER IN TANK
         04 A0         70 A5     A8  00EA   315 	BISW	UCB$B_ERTCNT(R5),4(R0)	;  ENABLE LINE
            54            6E     D0  00EF   316 30$:	MOVL	(SP),R4			; GET IDB ADDRESS
                          D0     11  00F2   317 	BRB	25$			; CONTINUE
                                     00F4   318 ;
                                     00F4   319 ; SILO EMPTY OR CHARACTER IN ERROR
                                     00F4   320 ;
            53       7000 8F     B3  00F4   321 50$:	BITW	#<1@DZ_RCV_PARERR>!-	; PARITY, FRAME OR OVERRUN?
                                     00F9   322 		 <1@DZ_RCV_FRAMER>!-
                                     00F9   323 		 <1@DZ_RCV_OVERRUN>,R3	
                          35     13  00F9   324 	BEQL	100$			; IF EQL THEN DONE
                                     00FB   325 ;
                                     00FB   326 ; PROCESS PARITY, FRAME OR OVERRUN ERROR
                                     00FB   327 ;
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page   9
V06             RECEIVER INTERRUPT SERIVCE                                                                                       (6)

            53         F8 8F     78  00FB   328 	ASHL	#-8,R3,R2		; GET LINE NUMBER
                          52         00FF       
            52   FFFFFFF8 8F     CA  0100   329 	BICL	#^C<7>,R2		;
            55         10 A442   D0  0107   330 	MOVL	IDB$L_UCBLST(R4)[R2],R5; GET UCB ADDRESS
                          1B     13  010C   331 	BEQL	70$			; IF EQL THEN NO UCB
            52         74 A5     9E  010E   332 	MOVAB	UCB$L_TT_STATE(R5),R2	; SET UP STATE ADDRESS
                                     0112   333 	IF_NOT_STATE READ,70$		; CONTINUE IF NOT READ STATE
         6C A5       0000'8F     B0  0118   334 	MOVW	#SS$_PARITY,UCB$W_BOFF(R5); SET ERROR CODE TRANSFER DATA TO THAT POINT
                          FEDF'  30  011E   335 	BSBW	TTY$READONE		; COMPLETE REQUEST
                                     0121   336 	IF_NOT_STATE XOFF,70$		; BR IF NO OUTPUT NEEDED
                          FED7'  30  0126   337 	BSBW	TTY$STARTOUTPUT		; CONTINUE OUTPUT AFTER READ
            60       0080 8F     B3  0129   338 70$:	BITW	#^X080,(R0)		; VALID CHARACTER IN SILO NOW?
                          BF     12  012E   339 	BNEQ	30$			; IF NEQ THEN YES
            5E            04     C0  0130   340 100$:	ADDL	#4,SP			; REMOVE IDB ADDRESS
            50            8E     7D  0133   341 	MOVQ	(SP)+,R0		; RESTORE REGISTERS
            52            8E     7D  0136   342 	MOVQ	(SP)+,R2		;
            54            8E     7D  0139   343 	MOVQ	(SP)+,R4		;
                                 02  013C   344 	REI
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page  10
V06             DZ-11 START I/O ROUTINE                                                                                          (7)

                                     013D   346 	.SBTTL	DZ-11 START I/O ROUTINE
                                     013D   347 ;++
                                     013D   348 ; TTZ$STARTIO - START I/O OERATION ON DZ-11
                                     013D   349 ;
                                     013D   350 ; FUNCTIONAL DESCRIPTION:
                                     013D   351 ;
                                     013D   352 ; THIS ROUTINE IS ENTERED FROM THE DEVICE INDEPENDENT TERMINAL STARTIO
                                     013D   353 ; ROUTINE TO ENABLE OUTPUT INTERRUPTS ON AN IDLE DZ-11 UNIT.
                                     013D   354 ;
                                     013D   355 ; INPUTS:
                                     013D   356 ;
                                     013D   357 ;	R5 = UCB ADDRESS
                                     013D   358 ;
                                     013D   359 ; OUTPUTS:
                                     013D   360 ;
                                     013D   361 ;	R5 = UCB ADDRESS
                                     013D   362 ;--
                                     013D   363 TTZ$STARTIO::				; START I/O ON UNIT
       0090 C5            53     B0  013D   364 	MOVW	R3,UCB$W_TT_HOLD(R5)	; SAVE OUTPUT CHARACTER
            51         20 A5     D0  0142   365 	MOVL	UCB$L_CRB(R5),R1	; GET CRB OF UNIT
            51         1C B1     D0  0146   366 	MOVL	@CRB$L_INTD+VEC$L_IDB(R1),R1; GET CSR
         04 A1         70 A5     A8  014A   367 	BISW	UCB$B_ERTCNT(R5),4(R1)	;  ENABLE LINE
                                 05  014F   368 	RSB				; RETURN TO CALLER
                                     0150   369  
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page  11
V06             DZ-11 OUTPUT INTERRUPT INTERRUPT SERVICE                                                                         (8)

                                     0150   371 	.SBTTL	DZ-11 OUTPUT INTERRUPT INTERRUPT SERVICE
                                     0150   372 ;++
                                     0150   373 ; TTZ$INTOUT - DZ-11 OUTPUT INTERRUPT SERVICE
                                     0150   374 ;
                                     0150   375 ; FUNCTIONAL DESCRIPTION:
                                     0150   376 ;
                                     0150   377 ; THIS ROUTINE IS ENTERED WHEN THE DZ-11 FINDS A LINE ENABLED
                                     0150   378 ; AND AN EMPTY UART. THE CORESPONDING UCB IS FOUND AND IF THE UNIT
                                     0150   379 ; IS NOT EXPECTING AN INTERRUPT THEN THE INTERRUPT IS DISMISSED
                                     0150   380 ; AFTER DISABLING INTERRUPTS ON THAT UNIT. IF THE UNIT IS EXPECTING
                                     0150   381 ; AN INTERRUPT, THE DEVICE INDEPENDENT ROUTINE "TTY$GETNEXTCHAR" IS 
                                     0150   382 ; CALLED TO FIND THE NEXT AVAILABLE CHARACTER FOR OUTPUT.
                                     0150   383 ;
                                     0150   384 ; INPUTS:
                                     0150   385 ;
                                     0150   386 ;	SP(00) = ADDRESS OF THE IDB
                                     0150   387 ;
                                     0150   388 ; IMPLICIT INPUTS:
                                     0150   389 ;
                                     0150   390 ;	R0,R1,R2,R3,R4,R5 SAVED ON THE STACK.
                                     0150   391 ;
                                     0150   392 ; OUTPUTS:
                                     0150   393 ;
                                     0150   394 ;	THE INTERRUPT IS DISMISSED.
                                     0150   395 ;
                                     0150   396 ;--
                                     0150   397 TTZ$INTOUT::				; DZ-11 OUTPUT INTERRUPT SERVICE
            54            9E     D0  0150   398 	MOVL	@(SP)+,R4		; GET THE IDB ADDRESS
            50            64     D0  0153   399 	MOVL	(R4),R0			; GET THE CSR ADDRESS
                                     0156   400 ;
                                     0156   401 ; GET THE LINE INFO FROM THE CSR
                                     0156   402 ;
            52            60     3C  0156   403 	MOVZWL	(R0),R2			; GET THE CSR VALUE
            52         F8 8F     78  0159   404 	ASHL	#-8,R2,R2		; GET THE LINE NUMBER
                          52         015D       
            52       FFF8 8F     AA  015E   405 	BICW	#^C<7>,R2		;
            55         10 A442   D0  0163   406 	MOVL	IDB$L_UCBLST(R4)[R2],R5; GET THE UCB ADDRESS
                          2A     13  0168   407 	BEQL	100$			; IF EQL THEN DISMISS INTERRUPT
                                     016A   408 ;
                                     016A   409 ; SEE IF VALID DATA IS IN THE HOLDING TANK
                                     016A   410 ;
            53       0090 C5     B0  016A   411 	MOVW	UCB$W_TT_HOLD(R5),R3	; GET THE HOLDING TANK DATA
                          09     18  016F   412 	BGEQ	20$			; IF GEQ THEN VALID DATA
                                     0171   413 ;
                                     0171   414 ; NO PENDING DATA - LOOK FOR NEXT CHARACTER
                                     0171   415 ;
         58 A5            03     8A  0171   416 	BICB	#UCB$M_TIM!UCB$M_INT,UCB$W_STS(R5); CLEAR TIMEOUT AND EXPECTED
                                     0175   417 ;
                                     0175   418 ; CALL TERMINAL DRIVER ROUTINE
                                     0175   419 ;
                          FE88'  30  0175   420 	BSBW	TTY$GETNEXTCHAR		; GET THE NEXT CHARACTER
                          15     13  0178   421 	BEQL	50$			; IF EQL THEN DISMIS
                                     017A   422 ;
                                     017A   423 ; OUTPUT A CHARACTER TO THE DZ-11
                                     017A   424 ;
         06 A0            53     9B  017A   425 20$:	MOVZBW	R3,6(R0)		; OUTPUT CHARACTER
       0090 C5       8000 8F     B0  017E   426 	MOVW	#^X08000,UCB$W_TT_HOLD(R5); DISABLE HOLDING TANK
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page  12
V06             DZ-11 OUTPUT INTERRUPT INTERRUPT SERVICE                                                                         (8)

            50            8E     7D  0185   427 	MOVQ	(SP)+,R0		; RESTORE REGISTERS
            52            8E     7D  0188   428 	MOVQ	(SP)+,R2		;
            54            8E     7D  018B   429 	MOVQ	(SP)+,R4		;
                                 02  018E   430 	REI				; DISMISS INTERRUPT
                                     018F   431 ;
                                     018F   432 ; DISABLE OUTPUT ON THIS LINE
                                     018F   433 ;
         04 A0         70 A5     AA  018F   434 50$:	BICW	UCB$B_ERTCNT(R5),4(R0)	; RESET THE OUTPUT ENABLE
                                     0194   435 ;
                                     0194   436 ; DISMIS INTERRUPT
                                     0194   437 ;
            50            8E     7D  0194   438 100$:	MOVQ	(SP)+,R0		; RESTORE REGISTERS
            52            8E     7D  0197   439 	MOVQ	(SP)+,R2		;
            54            8E     7D  019A   440 	MOVQ	(SP)+,R4		;
                                 02  019D   441 	REI				; DISSMISS INTERRUPT
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page  13
V06             TTZ$TIMER - DIALUP TIMER ROUTINE                                                                                 (9)

                                     019E   443 	.SBTTL TTZ$TIMER - DIALUP TIMER ROUTINE
                                     019E   444 ;++
                                     019E   445 ; TTZ$TIMER - DIALUP TIMER ROUTINE
                                     019E   446 ;
                                     019E   447 ; FUNCTIONAL DESCRIPTION:
                                     019E   448 ;
                                     019E   449 ; THIS ROUTINE IS A PERMANENT ENTRY IN THE SYSTEM TIMER QUEUE.
                                     019E   450 ; IT RUNS AT INTERVALS SET BY A SYSTEM PARAMETER. IN THE USA THE TIME NEEDED IS
                                     019E   451 ; NOT BE LESS THAN 1 SEC. BUT IN SOME EUROPEAN COUNTRIES THE INTERVAL SHOULD
                                     019E   452 ; BE ON THE ORDER OF 50 TO 100 MILLISEC.
                                     019E   453 ;
                                     019E   454 ; INPUTS:
                                     019E   455 ;
                                     019E   456 ;	NONE
                                     019E   457 ;
                                     019E   458 ; OUTPUTS:
                                     019E   459 ;
                                     019E   460 ;	NONE
                                     019E   461 ;--
                                     019E   462 TTZ$TIMER::				; DIALUP TIMER ROUTINE
                     0060 8F     BB  019E   463 	PUSHR	#^M<R5,R6>
            50   00000000'GF     9E  01A2   464 	MOVAB	G^IOC$GL_DIALUP,R0	; ADDRESS LIST
            50            60     D0  01A9   465 10$:	MOVL	(R0),R0			; GET AN ENTRY
                          05     12  01AC   466 	BNEQ	15$			; IF NEQ THEN MORE TO GO
                     0060 8F     BA  01AE   467 	POPR	#^M<R5,R6>
                                 05  01B2   468 	RSB				; OTHERWISE DONE
                                     01B3   469 ;
                                     01B3   470 ; COMPARE CURRENT CARRIER SIGNAL WITH PREVIOUS
                                     01B3   471 ;
            51         1C A0     D0  01B3   472 15$:	MOVL	CRB$L_INTD+VEC$L_IDB(R0),R1; ADDRESS UNIT IDB
            56            61     D0  01B7   473 20$:	MOVL	(R1),R6			; GET THE CSR ADDRESS
         04 A6       FF00 8F     A8  01BA   474 	BISW	#^X0FF00,4(R6)		; SET DTR ON ALL LINES
            54         06 A6     3C  01C0   475 	MOVZWL	6(R6),R4		; GET CARRIER DATA
            54         F8 8F     78  01C4   476 	ASHL	#-8,R4,R4		; MOVE IT TO POSITION
                          54         01C8       
         05 A0            54     8D  01C9   477 	XORB3	R4,CRB$B_TT_EXPEC(R0),R3; GET CHANGED BITS
                          53         01CD       
                          50     13  01CE   478 	BEQL	50$			; IF EQL THEN PROCESS ATTENTIONS
         05 A0            54     90  01D0   479 	MOVB	R4,CRB$B_TT_EXPEC(R0)	; SAVE NEW VALUE
                                     01D4   480 ;
                                     01D4   481 ; PROCESS EACH LINE WITH A CHANGED SIGNAL
                                     01D4   482 ;
            08            00     EA  01D4   483 25$:	FFS	#0,#8,R3,R4		; GET THE FIRST CHANGED BIT
            54            53         01D7       
                          45     13  01D9   484 	BEQL	50$			; IF EQL THEN DONE
            53            54     E5  01DB   485 	BBCC	R4,R3,30$		; CLEAR BIT
                          00         01DE       
         06 A0            54     E1  01DF   486 30$:	BBC	R4,CRB$B_TT_EXPEC+1(R0),25$; BR IF POLLING NOT ENABLED
                          F0         01E3       
            55         10 A144   D0  01E4   487 	MOVL	IDB$L_UCBLST(R1)[R4],R5	; GET THE UCB ADDRESS
                          E9     13  01E9   488 	BEQL	25$			; IF EQL THEN CONTINUE
         58 A5            04     E1  01EB   489 	BBC	#UCB$V_ONLINE,UCB$W_STS(R5),25$; BR IF NOT ONLINE
                          E4         01EF       
         05 A0            54     E0  01F0   490 	BBS	R4,CRB$B_TT_EXPEC(R0),40$; BR IF CARRIER NOW SET
                          13         01F4       
                                     01F5   491 ;
                                     01F5   492 ; CARRIER NOW CLEAR, WAS SET
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page  14
V06             TTZ$TIMER - DIALUP TIMER ROUTINE                                                                                 (9)

                                     01F5   493 ;
            05   00000000'GF     E9  01F5   494 	BLBC	G^TTY$GB_DIALTYP,35$	; BR IF NORMAL TIMER
       0096 C5            09     90  01FC   495 	MOVB	#TTY$C_DS_ATTN3,UCB$B_TT_DIAL(R5); FORCE HANGUP
         04 A0            54     E2  0201   496 35$:	BBSS	R4,CRB$B_TT_ATTN(R0),25$; SET ATTENTION
                          CE         0205       
                          CC     11  0206   497 	BRB	25$			; CONTINUE
                                     0208   498 ;
                                     0208   499 ; CARRIER NOW SET, WAS CLEAR
                                     0208   500 ;
       0096 C5            09     91  0208   501 40$:	CMPB	#TTY$C_DS_ATTN3,UCB$B_TT_DIAL(R5); ALREADY IN HANGUP SEQUENCE?
                          C5     1B  020D   502 	BLEQU	25$			; IF LEQU THEN YES
       0096 C5            01     90  020F   503 	MOVB	#TTY$C_DS_ACTIVE,UCB$B_TT_DIAL(R5); SET ACTIVE STATE
         3C A5            0D     E2  0214   504 	BBSS	#TT$V_REMOTE,UCB$L_DEVDEPEND(R5),45$; SET REMOTE AND BR IF REMOTE NOW
                          00         0218       
         04 A0            54     E5  0219   505 45$:	BBCC	R4,CRB$B_TT_ATTN(R0),25$; CLEAR ATTENTION
                          B6         021D       
                          B4     11  021E   506 	BRB	25$			; CONTINUE
                                     0220   507 ;
                                     0220   508 ; PROCESS UNITS ALREADY IN HANGUP SEQUENCE
                                     0220   509 ;
                                     0220   510 50$:
            53         04 A0     9A  0220   511 	MOVZBL	CRB$B_TT_ATTN(R0),R3	; GET THE ATTENTION LIST FIRST
                          03     12  0224   512 	BNEQ	65$			; IF NEQ THEN CONTINUE
                          FF80   31  0226   513 60$:	BRW	10$			; DONE OTHERWISE
            08            00     EA  0229   514 65$:	FFS	#0,#8,R3,R4		; GET THE FIRST ATTN
            54            53         022C       
                          F6     13  022E   515 	BEQL	60$			; IF EQL THEN DONE
            53            54     E5  0230   516 	BBCC	R4,R3,70$		; CLEAR THE BIT
                          00         0233       
            55         10 A144   D0  0234   517 70$:	MOVL	IDB$L_UCBLST(R1)[R4],R5	; GET THE UCB
                          EE     13  0239   518 	BEQL	65$			; CONTINUE IF EQL
            01            09     9D  023B   519 	ACBB	#TTY$C_DS_ATTN3,#1,UCB$B_TT_DIAL(R5),65$; ADD AND BR IF NOT FAILURE YET
            FFE6     0096 C5         023E       
                          0B     BB  0243   520 	PUSHR	#^M<R1,R0,R3>		; SAVE CRITICAL REGISTERS
                                     0245   521 	DSBINT	UCB$B_DIPL(R5)		; RAISE IPL TO LOCK UNIT
       0096 C5            0B     91  024C   522 	CMPB	#TTY$C_DS_RESET,UCB$B_TT_DIAL(R5); RESET LINE?
                          45     13  0251   523 	BEQL	85$			; IF EQL THEN YES
                                     0253   524 ;
                                     0253   525 ; TERMINAL HANGUP
                                     0253   526 ;
                          FE40   30  0253   527 	BSBW	TTZ$DISCONNECT		; SHUT THE LINE OFF AND SET STATE
            52         74 A5     9E  0256   528 	MOVAB	UCB$L_TT_STATE(R5),R2	; ADDRESS STATE VECTOR FOR UNIT
            54         7C A5     9E  025A   529 	MOVAB	UCB$L_TT_CTRLY(R5),R4	; ADDRESS CONTROL Y AST LIST
            50            54     D0  025E   530 	MOVL	R4,R0			; COPY LIST ADDRESS
            50            60     D0  0261   531 75$:	MOVL	(R0),R0			; GET NEXT ENTRY
                          08     13  0264   532 	BEQL	80$			; IF EQL THEN DONE
         1C A0       0000'8F     3C  0266   533 	MOVZWL	#SS$_HANGUP,ACB$L_KAST+4(R0); INSERT NEW PARAM FOR AST
                          F3     11  026C   534 	BRB	75$			; CONTINUE UNITL DONE
                 00000000'GF     16  026E   535 80$:	JSB	G^COM$DELATTNAST	; DELIVER THE AST'S
         6C A5       0000'8F     3C  0274   536 	MOVZWL	#SS$_HANGUP,UCB$W_BOFF(R5); SET THE RETURN STATUS
                 00000000'GF     16  027A   537 	JSB	G^TTY$STOPIO		; STOP ALL I/O ON UNIT
                                     0280   538 	ENBINT				; LOWER IPL
            54   00000000'8F     D0  0283   539 	MOVL	#MSG$_TRMHANGUP,R4	; SET MESSAGE TYPE
            53         54 A5     D0  028A   540 	MOVL	UCB$L_AMB(R5),R3	; GET ASSOC MAILBOX
                          1C     13  028E   541 	BEQL	110$			; IF EQL THEN NONE
                 00000000'GF     16  0290   542 	JSB	G^EXE$SNDEVMSG		; INSERT MAILBOX MESSAGE
                          14     11  0296   543 	BRB	110$			; CONTINUE
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page  15
V06             TTZ$TIMER - DIALUP TIMER ROUTINE                                                                                 (9)

                                     0298   544 ;
                                     0298   545 ; POST HANGUP RESET
                                     0298   546 ;
                     0096 C5     94  0298   547 85$:	CLRB	UCB$B_TT_DIAL(R5)	; SET IDLE STATE
         3C A5            0D     E5  029C   548 	BBCC	#TT$V_REMOTE,UCB$L_DEVDEPEND(R5),90$; CLEAR REMOTE
                          00         02A0       
         04 A0            54     E5  02A1   549 90$:	BBCC	R4,CRB$B_TT_ATTN(R0),95$; CLEAR ATTENTION
                          00         02A5       
                          FDA9   30  02A6   550 95$:	BSBW	TTZ$INITLINE		; INITIALIZE LINE
                                     02A9   551 100$:	ENBINT				; RE-ENABLE INTERRUPTS
                          0B     BA  02AC   552 110$:	POPR	#^M<R0,R1,R3>		; RESTORE REGISTERS
                          FF78   31  02AE   553 	BRW	65$			; CONTINUE
                                     02B1   554 	
                                     02B1   555 TTZ_END:
                                     02B1   556 	.END
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page  16
SYMBOL TABLE                                                                                                                     (9)

$$OP           = 00000002            DYN$C_DPT        ********   X   03   TT$DDT           ********   X   03   
ACB$B_RMOD       0000000B            DYN$C_UCB        ********   X   03   TT$DPT           00000000 RG    03   
ACB$B_TYPE       0000000A            DZ_CSR_CLEAR   = 00000004            TT$M_ALTRPAR   = 00000020            
ACB$L_AST        00000010            DZ_CSR_LINE    = 00000008            TT$M_CRFILL    = 00000400            
ACB$L_ASTPRM     00000014            DZ_CSR_MAINT   = 00000003            TT$M_EIGHTBIT  = 00008000            
ACB$L_ASTQBL     00000004            DZ_CSR_MASTENAB= 00000005            TT$M_ESCAPE    = 00000008            
ACB$L_ASTQFL     00000000            DZ_CSR_RCVINT  = 00000006            TT$M_HOLDSCREEN= 00004000            
ACB$L_KAST       00000018            DZ_CSR_RCVRDY  = 00000007            TT$M_HOSTSYNC  = 00000010            
ACB$L_PID        0000000C            DZ_CSR_SNDINT  = 0000000E            TT$M_LFFILL    = 00000800            
ACB$M_QUOTA    = 00000040            DZ_CSR_SNDRDY  = 0000000F            TT$M_LOWER     = 00000080            
ACB$S_MODE     = 00000002            DZ_LPR_CLOCK   = 0000000C            TT$M_MBXDSABL  = 00010000            
ACB$V_KAST     = 00000007            DZ_LPR_LINE    = 00000000            TT$M_MECHTAB   = 00000100            
ACB$V_MODE     = 00000000            DZ_LPR_SIZE    = 00000003            TT$M_NOBRDCST  = 00020000            
ACB$V_QUOTA    = 00000006            DZ_LPR_SPEED   = 00000008            TT$M_NOECHO    = 00000002            
ACB$W_SIZE       00000008            DZ_MOD_CARRIER = 00000008            TT$M_NOTYPEAHD = 00000004            
AT$_UBA          ********   X   03   DZ_MOD_RING    = 00000000            TT$M_ODD       = 00000080            
BIT...         = 00000008            DZ_RCV_BUF     = 00000000            TT$M_PAGE      = FE000000            
COM$DELATTNAST   ********   X   04   DZ_RCV_FRAMER  = 0000000D            TT$M_PARITY    = 00000040            
CRB$B_MASK       0000000E            DZ_RCV_LINE    = 00000008            TT$M_PASSALL   = 00000001            
CRB$B_TT_ATTN    00000004            DZ_RCV_OVERRUN = 0000000E            TT$M_READSYNC  = 00040000            
CRB$B_TT_EXPEC   00000005            DZ_RCV_PARERR  = 0000000C            TT$M_REMOTE    = 00002000            
CRB$B_TYPE       0000000A            DZ_RCV_VALID   = 0000000F            TT$M_SCOPE     = 00001000            
CRB$C_LENGTH     00000038            DZ_SND_BREAK   = 00000008            TT$M_SCRIPT    = 00000040            
CRB$K_LENGTH     00000038            DZ_SND_BUF     = 00000000            TT$M_TTSYNC    = 00000020            
CRB$L_INTD       00000014            DZ_TRN_DTA     = 00000008            TT$M_WRAP      = 00000200            
CRB$L_INTD2      00000038            DZ_TRN_LINE    = 00000000            TT$S_PAGE      = 00000008            
CRB$L_LINK       00000010            EXE$SNDEVMSG     ********   X   04   TT$V_ALTRPAR   = 00000005            
CRB$L_TT_DIAL    00000000            GBL...         = 00000000            TT$V_CRFILL    = 0000000A            
CRB$L_WQBL       00000004            IDB$B_TYPE       0000000A            TT$V_EIGHTBIT  = 0000000F            
CRB$L_WQFL       00000000            IDB$B_UNITS      0000000B            TT$V_ESCAPE    = 00000003            
CRB$M_BSY      = 00000001            IDB$C_LENGTH     00000030            TT$V_HOLDSCREEN= 0000000E            
CRB$V_BSY      = 00000000            IDB$K_LENGTH     00000030            TT$V_HOSTSYNC  = 00000004            
CRB$W_REFC       0000000C            IDB$L_ADP        0000000C            TT$V_LFFILL    = 0000000B            
CRB$W_SIZE       00000008            IDB$L_CSR        00000000            TT$V_LOWER     = 00000007            
DC$_TERM         ********   X   03   IDB$L_OWNER      00000004            TT$V_MBXDSABL  = 00000010            
DDB$B_ACPCLASS   00000013            IDB$L_UCBLST     00000010            TT$V_MECHTAB   = 00000008            
DDB$B_TYPE       0000000A            IDB$W_SIZE       00000008            TT$V_NOBRDCST  = 00000011            
DDB$C_LENGTH     00000034            IOC$GL_DIALUP    ********   X   04   TT$V_NOECHO    = 00000001            
DDB$K_LENGTH     00000034            MSG$_TRMHANGUP   ********   X   04   TT$V_NOTYPEAHD = 00000002            
DDB$L_ACPD       00000010            PR$_IPL          ********   X   04   TT$V_ODD       = 00000007            
DDB$L_DDT        0000000C            SS$_HANGUP       ********   X   04   TT$V_PAGE      = 00000019            
DDB$L_LINK       00000000            SS$_PARITY       ********   X   04   TT$V_PARITY    = 00000006            
DDB$L_UCB        00000004            TT$C_BAUD_110  = 00000003            TT$V_PASSALL   = 00000000            
DDB$T_DRVNAME    00000024            TT$C_BAUD_1200 = 00000008            TT$V_READSYNC  = 00000012            
DDB$T_NAME       00000014            TT$C_BAUD_134  = 00000004            TT$V_REMOTE    = 0000000D            
DDB$W_SIZE       00000008            TT$C_BAUD_150  = 00000005            TT$V_SCOPE     = 0000000C            
DEV$M_AVL        ********   X   03   TT$C_BAUD_1800 = 00000009            TT$V_SCRIPT    = 00000006            
DEV$M_CCL        ********   X   03   TT$C_BAUD_2000 = 0000000A            TT$V_TTSYNC    = 00000005            
DEV$M_IDV        ********   X   03   TT$C_BAUD_2400 = 0000000B            TT$V_WRAP      = 00000009            
DEV$M_ODV        ********   X   03   TT$C_BAUD_300  = 00000006            TT$_LA36       = 00000020            
DEV$M_REC        ********   X   03   TT$C_BAUD_3600 = 0000000C            TT$_LAX        = 00000020            
DEV$M_TRM        ********   X   03   TT$C_BAUD_4800 = 0000000D            TT$_UNKNOWN    = 00000000            
DPT$INITAB       0000001F R     03   TT$C_BAUD_50   = 00000001            TT$_VT05       = 00000001            
DPT$REINITAB     0000006B R     03   TT$C_BAUD_600  = 00000007            TT$_VT52       = 00000040            
DPT$TAB          00000000 R     03   TT$C_BAUD_7200 = 0000000E            TT$_VT55       = 00000041            
DYN$C_CRB        ********   X   03   TT$C_BAUD_75   = 00000002            TT$_VT5X       = 00000040            
DYN$C_DDB        ********   X   03   TT$C_BAUD_9600 = 0000000F            TTY$B_BD_CNT     00000015            
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page  17
SYMBOL TABLE                                                                                                                     (9)

TTY$B_BD_IPL     00000017            TTY$L_BD_MIN     00000028            TTY$V_ST_BRDCST= 00000007            
TTY$B_BD_REFC    00000016            TTY$L_BD_UCB     00000010            TTY$V_ST_CTRLO = 0000000C            
TTY$B_BD_TYPE    0000000A            TTY$L_RB_DATA    00000010            TTY$V_ST_CTRLR = 0000000A            
TTY$B_BD_WHO     00000014            TTY$L_RB_NXT     00000000            TTY$V_ST_CTRLS = 00000002            
TTY$B_TA_TYPE    0000000A            TTY$L_RB_UVA     00000004            TTY$V_ST_CURSOR= 00000004            
TTY$C_BELL     = 00000007            TTY$L_TA_DATA    00000010            TTY$V_ST_DEL   = 0000000D            
TTY$C_BLANK    = 00000020            TTY$L_TA_END     0000000C            TTY$V_ST_EOL   = 00000009            
TTY$C_BS       = 00000008            TTY$L_TA_GET     00000004            TTY$V_ST_ESC   = 00000013            
TTY$C_CR       = 0000000D            TTY$L_TA_PUT     00000000            TTY$V_ST_ESC_O = 0000001A            
TTY$C_CTRLC    = 00000003            TTY$L_WB_DATA    0000000C            TTY$V_ST_FILL  = 00000003            
TTY$C_CTRLO    = 0000000F            TTY$L_WB_END     00000004            TTY$V_ST_GETAHD= 00000018            
TTY$C_CTRLQ    = 00000011            TTY$L_WB_NXT     00000000            TTY$V_ST_MULTI = 00000006            
TTY$C_CTRLR    = 00000012            TTY$M_A        = 00003FFF            TTY$V_ST_NL    = 00000015            
TTY$C_CTRLS    = 00000013            TTY$M_CH_CTRL  = 00000020            TTY$V_ST_NOECHO= 0000000F            
TTY$C_CTRLU    = 00000015            TTY$M_CH_CTRL2 = 00000080            TTY$V_ST_NOFLTR= 00000012            
TTY$C_CTRLX    = 00000018            TTY$M_CH_LOWER = 00000040            TTY$V_ST_PASALL= 0000000E            
TTY$C_CTRLY    = 00000019            TTY$M_CH_SPEC  = 00000010            TTY$V_ST_PROMPT= 00000011            
TTY$C_CTRLZ    = 0000001A            TTY$M_ST_BADESC= 00100000            TTY$V_ST_READ  = 0000000B            
TTY$C_DELETE   = 0000007F            TTY$M_ST_BRDCST= 00000080            TTY$V_ST_SENDLF= 00000005            
TTY$C_DOLLAR   = 00000024            TTY$M_ST_CTRLO = 00001000            TTY$V_ST_SKIPLF= 00000017            
TTY$C_DS_ACTIVE= 00000001            TTY$M_ST_CTRLR = 00000400            TTY$V_ST_TYPFUL= 00000016            
TTY$C_DS_ATTN1 = 00000002            TTY$M_ST_CTRLS = 00000004            TTY$V_ST_UNSOL = 00000019            
TTY$C_DS_ATTN3 = 00000009            TTY$M_ST_CURSOR= 00000010            TTY$V_ST_WRITE = 00000008            
TTY$C_DS_HANG  = 0000000A            TTY$M_ST_DEL   = 00002000            TTY$V_ST_WRTALL= 00000010            
TTY$C_DS_IDLE  = 00000000            TTY$M_ST_EOL   = 00000200            TTY$V_ST_XOFF  = 00000001            
TTY$C_DS_RESET = 0000000B            TTY$M_ST_ESC   = 00080000            TTY$V_ST_XON   = 00000000            
TTY$C_ESCAPE   = 0000001B            TTY$M_ST_ESC_O = 04000000            TTY$W_BD_SIZE    00000008            
TTY$C_FC_N_SET = 00000004            TTY$M_ST_FILL  = 00000008            TTY$W_RB_ORGHOR  0000000C            
TTY$C_FC_READ  = 00000000            TTY$M_ST_GETAHD= 01000000            TTY$W_RB_SIZE    00000008            
TTY$C_FC_SETC  = 00000003            TTY$M_ST_MULTI = 00000040            TTY$W_RB_TIMOS   0000000E            
TTY$C_FC_SETM  = 00000002            TTY$M_ST_NL    = 00200000            TTY$W_TA_SIZE    00000008            
TTY$C_FC_WRITE = 00000001            TTY$M_ST_NOECHO= 00008000            TTY$W_WB_SIZE    00000008            
TTY$C_FF       = 0000000C            TTY$M_ST_NOFLTR= 00040000            TTZ$DISCONNECT   00000096 RG    04   
TTY$C_HIGHIPL  = 00000016            TTY$M_ST_PASALL= 00004000            TTZ$INITIAL      00000000 RG    04   
TTY$C_LF       = 0000000A            TTY$M_ST_PROMPT= 00020000            TTZ$INITLINE     00000052 RG    04   
TTY$C_LOWA     = 00000061            TTY$M_ST_READ  = 00000800            TTZ$INTINP       000000BC RG    04   
TTY$C_LOWZ     = 0000007B            TTY$M_ST_SENDLF= 00000020            TTZ$INTOUT       00000150 RG    04   
TTY$C_NL       = 00000080            TTY$M_ST_SKIPLF= 00800000            TTZ$STARTIO      0000013D RG    04   
TTY$C_ONE      = 00000031            TTY$M_ST_TYPFUL= 00400000            TTZ$TIMER        0000019E RG    04   
TTY$C_PLUS     = 0000002B            TTY$M_ST_UNSOL = 02000000            TTZ_END          000002B1 R     04   
TTY$C_SCRIPT   = 00000060            TTY$M_ST_WRITE = 00000100            UBA$L_BRRVR      00000030            
TTY$C_TAB      = 00000009            TTY$M_ST_WRTALL= 00010000            UBA$L_BRSVR      00000020            
TTY$C_TYPAHDSIZ= 0000004E            TTY$M_ST_XOFF  = 00000002            UBA$L_CR         00000004            
TTY$C_VT       = 0000000B            TTY$M_ST_XON   = 00000001            UBA$L_CSR        00000000            
TTY$C_XOFF     = 00000013            TTY$PUTNEXTCHAR  ********   X   04   UBA$L_DCR        0000000C            
TTY$C_XON      = 00000011            TTY$Q_BD_LINK    00000000            UBA$L_DPR        00000040            
TTY$C_ZERO     = 00000030            TTY$READONE      ********   X   04   UBA$L_FMER       00000010            
TTY$FORK_ADDR    ********   X   03   TTY$SETUP_UCB    ********   X   04   UBA$L_FUBAR      00000014            
TTY$GB_DEFSPEED  ********   X   03   TTY$STARTOUTPUT  ********   X   04   UBA$L_MAP        00000800            
TTY$GB_DIALTYP   ********   X   04   TTY$STOPIO       ********   X   04   UBA$L_SR         00000008            
TTY$GETNEXTCHAR  ********   X   04   TTY$S_A        = 0000000E            UBA$M_BRRVR_AIR= 80000000            
TTY$GL_DEFCHAR   ********   X   03   TTY$V_A        = 00000000            UBA$M_CR_ARLVL = 00000180            
TTY$GL_DELTA     ********   X   04   TTY$V_CH_CTRL  = 00000005            UBA$M_CR_BRIE  = 00000020            
TTY$GL_TMRDELTA  ********   X   04   TTY$V_CH_CTRL2 = 00000007            UBA$M_CR_CNFIE = 00000004            
TTY$GW_DEFBUF    ********   X   03   TTY$V_CH_LOWER = 00000006            UBA$M_CR_IFSIE = 00000040            
TTY$L_BD_DATA    00000018            TTY$V_CH_SPEC  = 00000004            UBA$M_CR_INIT  = 00000001            
TTY$L_BD_FORK    0000000C            TTY$V_ST_BADESC= 00000014            UBA$M_CR_SUEFIE= 00000008            
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page  18
SYMBOL TABLE                                                                                                                     (9)

UBA$M_CR_UBPF  = 00000002            UBA$V_CSR_IS   = 0000001C            UCB$B_SLAVE      00000074            
UBA$M_CR_USEFIE= 00000010            UBA$V_CSR_MT   = 0000001B            UCB$B_SPR        00000075            
UBA$M_CSR_IS   = 10000000            UBA$V_CSR_OT   = 00000015            UCB$B_STATE      00000052            
UBA$M_CSR_MT   = 08000000            UBA$V_CSR_PD   = 00000017            UCB$B_TRACKS     0000003D            
UBA$M_CSR_OT   = 00200000            UBA$V_CSR_PE   = 0000001F            UCB$B_TT_BRDPT   00000098            
UBA$M_CSR_PD   = 00800000            UBA$V_CSR_PU   = 00000016            UCB$B_TT_CRFILL  0000009D            
UBA$M_CSR_PE   = 80000000            UBA$V_CSR_UBIC = 00000010            UCB$B_TT_DECRF   000000A1            
UBA$M_CSR_PU   = 00400000            UBA$V_CSR_UBIIP= 00000012            UCB$B_TT_DELFF   000000A2            
UBA$M_CSR_UBIC = 00010000            UBA$V_CSR_UBPDN= 00000011            UCB$B_TT_DESPEE  000000A0            
UBA$M_CSR_UBIIP= 00040000            UBA$V_CSR_URD  = 0000001D            UCB$B_TT_DETYPE  000000A4            
UBA$M_CSR_UBPDN= 00020000            UBA$V_CSR_WS   = 0000001E            UCB$B_TT_DIAL    00000096            
UBA$M_CSR_URD  = 20000000            UBA$V_CSR_XMFLT= 0000001A            UCB$B_TT_ESC     00000095            
UBA$M_CSR_WS   = 40000000            UBA$V_DPR_ADDR = 00000000            UCB$B_TT_ESC_O   00000099            
UBA$M_CSR_XMFLT= 04000000            UBA$V_DPR_BNE  = 0000001F            UCB$B_TT_FILL    00000097            
UBA$M_DPR_BNE  = 80000000            UBA$V_DPR_DPF  = 0000001D            UCB$B_TT_LFFILL  0000009E            
UBA$M_DPR_DPF  = 20000000            UBA$V_DPR_STATE= 00000010            UCB$B_TT_LINE    00000094            
UBA$M_DPR_XMTER= 40000000            UBA$V_DPR_XMTER= 0000001E            UCB$B_TT_SPEED   0000009C            
UBA$M_MAP_BO   = 02000000            UBA$V_FMER_MRN = 00000000            UCB$B_TYPE       0000000A            
UBA$M_MAP_VALID= 80000000            UBA$V_FUBAR_ADR= 00000000            UCB$B_VERTSZ     0000003F            
UBA$M_SR_BRID  = 00000800            UBA$V_MAP_ADDR = 00000000            UCB$C_LENGTH     00000074            
UBA$M_SR_BRSVF = 10000000            UBA$V_MAP_BO   = 00000019            UCB$C_LOGLNK   = 00000001            
UBA$M_SR_CRD   = 00000100            UBA$V_MAP_DPD  = 00000015            UCB$K_LENGTH     00000074            
UBA$M_SR_CXTER = 00000080            UBA$V_MAP_VALID= 0000001F            UCB$L_AMB        00000054            
UBA$M_SR_CXTMO = 00000040            UBA$V_SR_BRID  = 0000000B            UCB$L_ASTQBL     00000010            
UBA$M_SR_DPPE  = 00000020            UBA$V_SR_BRRVF = 00000018            UCB$L_ASTQFL     0000000C            
UBA$M_SR_IVMR  = 00000010            UBA$V_SR_BRSVF = 0000001C            UCB$L_CPID       0000005C            
UBA$M_SR_LER   = 00000004            UBA$V_SR_CRD   = 00000008            UCB$L_CRB        00000020            
UBA$M_SR_MRPE  = 00000008            UBA$V_SR_CXTER = 00000007            UCB$L_DDB        00000024            
UBA$M_SR_RDS   = 00000200            UBA$V_SR_CXTMO = 00000006            UCB$L_DEVCHAR    00000034            
UBA$M_SR_RDTO  = 00000400            UBA$V_SR_DPPE  = 00000005            UCB$L_DEVDEPEND  0000003C            
UBA$M_SR_RIE   = 20000000            UBA$V_SR_IVMR  = 00000004            UCB$L_DPC        00000080            
UBA$M_SR_SSYNC = 00000001            UBA$V_SR_LER   = 00000002            UCB$L_DUETIM     0000005C            
UBA$M_SR_UBIFS = 40000000            UBA$V_SR_MRPE  = 00000003            UCB$L_DX_BFPNT   0000009C            
UBA$M_SR_UBSTO = 00000002            UBA$V_SR_RDS   = 00000009            UCB$L_DX_BUF     00000098            
UBA$S_BRRVR_IVA= 00000010            UBA$V_SR_RDTO  = 0000000A            UCB$L_DX_RXDB    000000A0            
UBA$S_CR_ARLVL = 00000002            UBA$V_SR_RIE   = 0000001D            UCB$L_EMB        00000078            
UBA$S_CR_MRDSB = 00000005            UBA$V_SR_SSYNC = 00000000            UCB$L_FIRST      00000014            
UBA$S_CSR_ADCOD= 00000008            UBA$V_SR_UBIFS = 0000001E            UCB$L_FPC        0000000C            
UBA$S_DPR_ADDR = 00000010            UBA$V_SR_UBSTO = 00000001            UCB$L_FQBL       00000004            
UBA$S_DPR_STATE= 00000008            UCB$B_AMOD       00000053            UCB$L_FQFL       00000000            
UBA$S_FMER_MRN = 00000009            UCB$B_CEX        00000077            UCB$L_FR3        00000010            
UBA$S_FUBAR_ADR= 00000012            UCB$B_CM1        0000004A            UCB$L_FR4        00000014            
UBA$S_MAP_ADDR = 00000015            UCB$B_CM2        0000004B            UCB$L_IOQBL      00000044            
UBA$S_MAP_DPD  = 00000004            UCB$B_DEVCLASS   00000038            UCB$L_IOQFL      00000040            
UBA$S_SR_BRRVF = 00000004            UCB$B_DEVTYPE    00000039            UCB$L_IRP        0000004C            
UBA$V_BRRVR_AIR= 0000001F            UCB$B_DIPL       00000052            UCB$L_LINK       0000002C            
UBA$V_BRRVR_IVA= 00000000            UCB$B_DX_SCTCNT  000000A6            UCB$L_LOGADR     00000064            
UBA$V_CR_ARLVL = 00000007            UCB$B_ERTCNT     00000070            UCB$L_MAXBLOCK   00000084            
UBA$V_CR_BRIE  = 00000005            UCB$B_ERTMAX     00000071            UCB$L_MEDIA      0000008C            
UBA$V_CR_CNFIE = 00000002            UCB$B_ESCAPE     0000004B            UCB$L_NT_DATSSB  00000074            
UBA$V_CR_IFSIE = 00000006            UCB$B_FEX        00000076            UCB$L_NT_INTSSB  00000078            
UBA$V_CR_INIT  = 00000000            UCB$B_FIPL       0000000B            UCB$L_OPCNT      00000060            
UBA$V_CR_MRDSB = 0000001A            UCB$B_LOCSRV     0000003C            UCB$L_OWNUIC     0000001C            
UBA$V_CR_SUEFIE= 00000003            UCB$B_OFFNDX     00000094            UCB$L_PID        00000028            
UBA$V_CR_UBPF  = 00000001            UCB$B_OFFRTC     00000095            UCB$L_RQBL       00000004            
UBA$V_CR_USEFIE= 00000004            UCB$B_REMSRV     0000003D            UCB$L_RQFL       00000000            
UBA$V_CSR_ADCOD= 00000000            UCB$B_SECTORS    0000003C            UCB$L_SVAPTE     00000068            
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page  19
SYMBOL TABLE                                                                                                                     (9)

UCB$L_SVPN       00000064            UCB$V_JOB      = 00000000            VEC$B_NUMREG     00000012            
UCB$L_TTCHAR     0000003C            UCB$V_LNKPRI   = 00000006            VEC$C_LENGTH     00000024            
UCB$L_TT_BRDCST  00000084            UCB$V_LTYPE    = 00000000            VEC$K_LENGTH     00000024            
UCB$L_TT_CTRLC   00000080            UCB$V_MOUNTING = 00000009            VEC$L_ADP        00000014            
UCB$L_TT_CTRLY   0000007C            UCB$V_MSGACK   = 00000004            VEC$L_IDB        00000008            
UCB$L_TT_DECHAR  000000A8            UCB$V_MSGFLO   = 00000003            VEC$L_INITIAL    0000000C            
UCB$L_TT_MULTI   00000078            UCB$V_NOCNVRT  = 00000002            VEC$L_START      0000001C            
UCB$L_TT_RDUE    0000008C            UCB$V_NT_BFROVF= 00000002            VEC$L_UNITDISC   00000020            
UCB$L_TT_STATE   00000074            UCB$V_NT_BREAK = 00000005            VEC$L_UNITINIT   00000018            
UCB$L_TT_TYPAHD  00000088            UCB$V_NT_NAME  = 00000004            VEC$M_MAPLOCK  = 00008000            
UCB$L_VCB        00000030            UCB$V_ONLINE   = 00000004            VEC$M_PATHLOCK = 00000080            
UCB$M_BACKP    = 00000020            UCB$V_POWER    = 00000005            VEC$Q_DISPATCH   00000000            
UCB$M_BSY      = 00000100            UCB$V_PRMMBX   = 00000000            VEC$S_DATAPATH = 00000007            
UCB$M_CANCEL   = 00000008            UCB$V_SEGFLO   = 00000002            VEC$S_MAPREG   = 0000000F            
UCB$M_DEADMO   = 00000400            UCB$V_TIM      = 00000000            VEC$V_DATAPATH = 00000000            
UCB$M_DELMBX   = 00000002            UCB$V_TIMOUT   = 00000006            VEC$V_MAPLOCK  = 0000000F            
UCB$M_DIAGBUF  = 00000002            UCB$V_TT_NOTIF = 00000002            VEC$V_MAPREG   = 00000000            
UCB$M_DX_WRITE = 00000008            UCB$V_TT_ODD   = 00000007            VEC$V_PATHLOCK = 00000007            
UCB$M_ECC      = 00000001            UCB$V_TT_PARTY = 00000006            VEC$W_MAPREG     00000010            
UCB$M_ERLOGIP  = 00000004            UCB$V_TT_SPEED = 00000000            W              = 00000002            
UCB$M_INT      = 00000002            UCB$V_TT_TIMO  = 00000001            X              = 00000000            
UCB$M_INTTYPE  = 00000080            UCB$V_UNLOAD   = 0000000C            Z              = 00000000            
UCB$M_JOB      = 00000001            UCB$V_VALID    = 0000000B            
UCB$M_MOUNTING = 00000200            UCB$W_BCNT       0000006E            
UCB$M_NOCNVRT  = 00000004            UCB$W_BCR        00000096            
UCB$M_NT_BFROVF= 00000004            UCB$W_BOFF       0000006C            
UCB$M_NT_BREAK = 00000020            UCB$W_BUFQUO     00000018            
UCB$M_NT_NAME  = 00000010            UCB$W_BYTESTOGO  0000003E            
UCB$M_ONLINE   = 00000010            UCB$W_CHARGE     0000004A            
UCB$M_POWER    = 00000020            UCB$W_CYLINDERS  0000003E            
UCB$M_PRMMBX   = 00000001            UCB$W_DA         0000008C            
UCB$M_TIM      = 00000001            UCB$W_DC         0000008E            
UCB$M_TIMOUT   = 00000040            UCB$W_DEVBUFSIZ  0000003A            
UCB$M_TT_NOTIF = 00000004            UCB$W_DEVSTS     0000005A            
UCB$M_TT_ODD   = 00000080            UCB$W_DIRSEQ     00000088            
UCB$M_TT_PARTY = 00000040            UCB$W_DSTADDR    00000018            
UCB$M_TT_SPEED = 0000003F            UCB$W_DX_BCR     000000A4            
UCB$M_TT_TIMO  = 00000002            UCB$W_EC1        00000090            
UCB$M_UNLOAD   = 00001000            UCB$W_EC2        00000092            
UCB$M_VALID    = 00000800            UCB$W_ERRCNT     00000072            
UCB$S_LNKPRI   = 00000002            UCB$W_FUNC       0000007E            
UCB$S_LTYPE    = 00000002            UCB$W_MB_SEED    FFFFFFFC            
UCB$S_TT_ODD   = 00000001            UCB$W_MSGCNT     00000016            
UCB$S_TT_PARTY = 00000001            UCB$W_MSGMAX     00000014            
UCB$S_TT_SPEED = 00000006            UCB$W_NT_CHAN    0000007C            
UCB$T_PARTNER    0000000C            UCB$W_OFFSET     0000008A            
UCB$V_BACKP    = 00000005            UCB$W_REFC       00000050            
UCB$V_BSY      = 00000008            UCB$W_SIZE       00000008            
UCB$V_CANCEL   = 00000003            UCB$W_SRCADDR    0000001A            
UCB$V_DEADMO   = 0000000A            UCB$W_STS        00000058            
UCB$V_DELMBX   = 00000001            UCB$W_TT_CURSOR  0000009A            
UCB$V_DIAGBUF  = 00000001            UCB$W_TT_DESIZE  000000A5            
UCB$V_DX_WRITE = 00000003            UCB$W_TT_HOLD    00000090            
UCB$V_ECC      = 00000000            UCB$W_TT_INAHD   00000092            
UCB$V_ERLOGIP  = 00000002            UCB$W_UNIT       00000048            
UCB$V_INT      = 00000001            UCB$W_VPROT      0000001A            
UCB$V_INTTYPE  = 00000007            VEC$B_DATAPATH   00000013            
TTZINTDSP       - DEVICE DEPENDENT ROUTINES FOR DZ-11 SUPPORT    21-AUG-1978 21:05:31   VAX-11 MACRO X0.3-11               Page  20
PROGRAM SECTION SYNOPSIS                                                                                                         (9)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFE      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$$$105_PROLOGUE  00000091      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$$$115_DRIVER    000002B1      04     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT LONG  


THERE WERE NO ERRORS OR WARNINGS.
8016. BYTES LEFT IN FREE MEMORY POOL.
1208. BYTES OF RECLAIMED MEMORY.
OBJ$:TTZINTDSP,LIS$:TTZINTDSP/-SP=EXECML$/ML,SRC$:TTZINTDSP
11 MLB DIR RDS - 962 GETS TO DEFINE 24 MACROS. 80 INTER. FILE WRITES. 
