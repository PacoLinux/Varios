EXCEPTMSG       - EXCEPTION MESSAGE FORMAT AND PRINT ROUTINE     21-AUG-1978 19:45:17   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      66  EXCEPTION MESSAGE FORMAT AND PRINT ROUTINE
EXCEPTMSG       - EXCEPTION MESSAGE FORMAT AND PRINT ROUTINE     21-AUG-1978 19:45:17   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	EXCEPTMSG - EXCEPTION MESSAGE FORMAT AND PRINT ROUTINE
                                     0000     2 	.IDENT	/01/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; D. N. CUTLER 9-NOV-77
                                     0000    24 ;
                                     0000    25 ; EXCEPTION MEESAGE FORMAT AND PRINT ROUTINE
                                     0000    26 ;
                                     0000    27 ; MACRO LIBRARY CALLS
                                     0000    28 ;
                                     0000    29  
                                     0000    30 	$CHFDEF				;DEFINE CONDITION HANDLING ARGLST OFFSETS
                                     0000    31 	$FABDEF				;DEFINE FAB OFFSETS
                                     0000    32 	$RABDEF				;DEFINE RAB OFFSETS
                                     0000    33  
                                     0000    34 ;
                                     0000    35 ; LOCAL SYMBOLS
                                     0000    36 ;
                                     0000    37 ; ARGUMENT LIST OFFSET DEFINITIONS
                                     0000    38 ;
                                     0000    39  
                           00000004  0000    40 MESSAGE=4				;ADDRESS OF ASCIZ STRING
                           00000008  0000    41 SIGNAL=8				;ADDRESS OF SIGNAL ARGUMENT LIST
                                     0000    42  
                                     0000    43 ;
                                     0000    44 ; OUTPUT FORMAT BUFFER SIZE
                                     0000    45 ;
                                     0000    46  
                           00000050  0000    47 BUFSIZ=80				;
                                     0000    48  
                                     0000    49 ;
                                     0000    50 ; LOCAL DATA
                                     0000    51 ;
                                     0000    52  
                                 00000000    53 	.PSECT	YEXEPAGED,BYTE
79 6C 72 65 70 6F 72 70 6D 49 20 20  0000    54 HEADNG:	.ASCIZ	/  Improperly handled condition, / ;
6E 6F 63 20 64 65 6C 64 6E 61 68 20  000C       
         00 20 2C 6E 6F 69 74 69 64  0018       
72 65 74 73 69 67 65 52 20 20 20 20  0021    55 REGMSG:	.ASCIZ	/    Register dump/	;
EXCEPTMSG       - EXCEPTION MESSAGE FORMAT AND PRINT ROUTINE     21-AUG-1978 19:45:17   VAX-11 MACRO X0.3-11               Page   2
01                                                                                                                               (1)

                  00 70 6D 75 64 20  002D       
20 31 52 20 20 00 20 3D 20 30 52 09  0033    56 REGDMP:	.ASCII	/	R0 = /<0>/  R1 = /<0>/  R2 = /<0>/  R3 = /<0><128> ;
20 00 20 3D 20 32 52 20 20 00 20 3D  003F       
            80 00 20 3D 20 33 52 20  004B       
20 35 52 20 20 00 20 3D 20 34 52 09  0053    57 	.ASCII	/	R4 = /<0>/  R5 = /<0>/  R6 = /<0>/  R7 = /<0><128> ;
20 00 20 3D 20 36 52 20 20 00 20 3D  005F       
            80 00 20 3D 20 37 52 20  006B       
20 39 52 20 20 00 20 3D 20 38 52 09  0073    58 	.ASCII	/	R8 = /<0>/  R9 = /<0>/  R10= /<0>/  R11= /<0><128> ;
20 00 20 3D 30 31 52 20 20 00 20 3D  007F       
            80 00 20 3D 31 31 52 20  008B       
20 50 46 20 20 00 20 3D 20 50 41 09  0093    59 	.ASCII	/	AP = /<0>/  FP = /<0>/  SP = /<0>/  PC = /<0><128> ;
20 00 20 3D 20 50 53 20 20 00 20 3D  009F       
            80 00 20 3D 20 43 50 20  00AB       
            80 00 20 3D 4C 53 50 09  00B3    60 	.ASCII	/	PSL= /<0><128>	;
                        00 20 09 09  00BB    61 SIGCTL:	.ASCIZ	/		 /	;
61 20 6C 61 6E 67 69 53 20 20 20 20  00BF    62 SIGMSG:	.ASCIZ	/    Signal arguments/	;
         00 73 74 6E 65 6D 75 67 72  00CB       
   00 20 3D 20 20 20 65 6D 61 4E 09  00D4    63 SIGNAM:	.ASCIZ	/	Name   = /	;SIGNAL NAME
   00 20 3D 20 72 65 62 6D 75 4E 09  00DF    64 SIGNUM:	.ASCIZ	/	Number = /	;SIGNAL ARGUMENTS NUMBER
EXCEPTMSG       - EXCEPTION MESSAGE FORMAT AND PRINT ROUTINE     21-AUG-1978 19:45:17   VAX-11 MACRO X0.3-11               Page   3
01              EXCEPTION MESSAGE FORMAT AND PRINT ROUTINE                                                                       (1)

                                     00EA    66 	.SBTTL	EXCEPTION MESSAGE FORMAT AND PRINT ROUTINE
                                     00EA    67 ;+
                                     00EA    68 ; EXE$EXCMSG - EXCEPTION MESSAGE FORMAT AND PRINT ROUTINE
                                     00EA    69 ;
                                     00EA    70 ; THIS ROUTINE IS CALLED WHEN NO EXCEPTION HANDLER CAN BE FOUND OR ALL HANDLERS
                                     00EA    71 ; RESIGNAL. ITS FUNCTION IS TO PRINT A SUMMARY OF THE CURRENT PROCESS STATE AND
                                     00EA    72 ; WHY THE PROCESS RECEIVED THE EXCEPTION.
                                     00EA    73 ;
                                     00EA    74 ; INPUTS:
                                     00EA    75 ;
                                     00EA    76 ;	MESSAGE(AP) = ADDRESS OF MESSAGE SUFFIX STRING.
                                     00EA    77 ;	SIGNAL(AP) = ADDRESS OF SIGNAL ARGUMENT LIST.
                                     00EA    78 ;
                                     00EA    79 ; OUTPUTS:
                                     00EA    80 ;
                                     00EA    81 ;	THE HEADING MESSAGE IS FORMATTED BY ADDING THE SPECIFIED SUFFIX AND
                                     00EA    82 ;	IS THEN WRITTEN TO 'SYS$ERROR'. THIS INFORMATION IS FOLLOWED BY A DUMP
                                     00EA    83 ;	OF THE SIGNAL ARGUMENTS AND GENERAL REGISTERS. WHILE THE OUTPUT IS
                                     00EA    84 ;	BEING WRITTEN TO 'SYS$ERROR' IT IS ALSO WRITTEN TO 'SYS$OUTPUT' IF
                                     00EA    85 ;	THEY ARE DIFFERENT FILES.
                                     00EA    86 ;-
                                     00EA    87  
                               0FFC' 00EA    88 	.ENTRY	EXE$EXCMSG,^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>
                          FF11'  30  00EC    89 	BSBW	EXE$OPEN_MSG		;OPEN MESSAGE FILES AND INITIALIZE RAB'S
            5E         B0 AE     9E  00EF    90 	MOVAB	-BUFSIZ(SP),SP		;ALLOCATE SPACE FOR OUTPUT BUFFER
            57            5E     D0  00F3    91 	MOVL	SP,R7			;SAVE ADDRESS OF OUTPUT BUFFER
            5E         BC AE     9E  00F6    92 	MOVAB	-17*4(SP),SP		;ALLOCATE REGISTER SAVE AREA
            56         08 AC     D0  00FA    93 	MOVL	SIGNAL(AP),R6		;GET ADDRESS OF SIGNAL ARGUMENTS
            50            5E     D0  00FE    94 	MOVL	SP,R0			;SET ADDRESS OF REGISTER SAVE AREA
            51         08 A6     D0  0101    95 	MOVL	CHF$L_MCHARGLST(R6),R1	;GET ADDRESS OF MECHANISM ARRAY
            80         0C A1     7D  0105    96 	MOVQ	CHF$L_MCH_SAVR0(R1),(R0)+ ;INSERT ORIGINAL R0 AND R1
            51         14 AD     9E  0109    97 	MOVAB	20(FP),R1		;GET ADDRESS OF SAVED REGISTERS
            52            0A     D0  010D    98 	MOVL	#10,R2			;SET REGISTER COUNT
            80            81     D0  0110    99 10$:	MOVL	(R1)+,(R0)+		;INSERT ORIGINAL REGISTERS
            FA            52     F5  0113   100 	SOBGTR	R2,10$			;ANY MORE REGISTERS TO SAVE?
            80         08 AD     7D  0116   101 	MOVQ	8(FP),(R0)+		;INSERT ARGUMENT AND FRAME POINTERS
            56         04 A6     D0  011A   102 	MOVL	CHF$L_SIGARGLST(R6),R6	;GET ADDRESS OF SIGNAL ARRAY
            55            66     D0  011E   103 	MOVL	(R6),R5			;GET NUMBER OF SIGNAL ARGUMENTS
            80         04 A645   DE  0121   104 	MOVAL	4(R6)[R5],(R0)+		;INSERT STACK POINTER ADDRESS
            80         FC A645   D0  0126   105 	MOVL	-4(R6)[R5],(R0)+	;INSERT SAVED PROGRAM COUNTER
            60            6645   D0  012B   106 	MOVL	(R6)[R5],(R0)		;INSERT SAVED PROCESSOR STATUS
         28 AA            67     9E  012F   107 	MOVAB	(R7),RAB$L_RBF(R10)	;SET ADDRESS OF RECORD BUFFER
         28 AB            67     9E  0133   108 	MOVAB	(R7),RAB$L_RBF(R11)	;SET ADDRESS OF RECORD BUFFER
                          7D     10  0137   109 	BSBB	PUT			;OUTPUT RECORD
            51       FEC3 CF     9E  0139   110 	MOVAB	HEADNG,R1		;GET ADDRESS OF INITIAL HEADING
                          59     10  013E   111 	BSBB	INSERT			;INSERT HEADING IN OUTPUT BUFFER
            51         04 AC     D0  0140   112 	MOVL	MESSAGE(AP),R1		;GET ADDRESS OF MESSAGE SUFFIX
                          6C     10  0144   113 	BSBB	PUTI			;INSERT SUFFIX IN OUTPUT BUFFER AND PRINT
            51       FF75 CF     9E  0146   114 	MOVAB	SIGMSG,R1		;GET ADDRESS OF SIGNAL ARGUMENT MESSAGE
                          65     10  014B   115 	BSBB	PUTI			;INSERT MESSAGE IN OUTPUT BUFFER AND PRINT
            51         8F AF     9E  014D   116 	MOVAB	SIGNUM,R1		;GET ADDRESS OF ARGUMENT NUMBER PREFIX
                          46     10  0151   117 	BSBB	INSERT			;INSERT PREFIX IN OUTPUT BUFFER
            66            01     C3  0153   118 	SUBL3	#1,(R6),R5		;CALCULATE NUMBER OF SIGNAL ARGUMENTS - 1
                          55         0156       
                          55     10  0157   119 	BSBB	PUTC			;CONVERT NUMBER AND OUTPUT RECORD
            51       FF77 CF     9E  0159   120 	MOVAB	SIGNAM,R1		;GET ADDRESS OF SIGNAL NAME PREFIX
                          39     10  015E   121 	BSBB	INSERT			;INSERT PREFIX IN OUTPUT BUFFER
EXCEPTMSG       - EXCEPTION MESSAGE FORMAT AND PRINT ROUTINE     21-AUG-1978 19:45:17   VAX-11 MACRO X0.3-11               Page   4
01              EXCEPTION MESSAGE FORMAT AND PRINT ROUTINE                                                                       (1)

                          4C     10  0160   122 	BSBB	PUTC			;CONVERT NAME AND OUTPUT RECORD
            51       FF55 CF     9E  0162   123 20$:	MOVAB	SIGCTL,R1		;GET ADDRESS OF INDENT MESSAGE
                          30     10  0167   124 	BSBB	INSERT			;INSERT INDENT PREFIX IN OUTPUT BUFFER
                          43     10  0169   125 	BSBB	PUTC			;CONVERT NUMBER AND OUTPUT RECORD
            F4            55     F5  016B   126 	SOBGTR	R5,20$			;ANY MORE TO CONVERT?
                          46     10  016E   127 	BSBB	PUT			;OUTPUT BLANK LINE
            51       FEAD CF     9E  0170   128 	MOVAB	REGMSG,R1		;GET ADDRESS OF REGISTER DUMP MESSAGE
                          3B     10  0175   129 	BSBB	PUTI			;INSERT MESSAGE IN OUTPUT BUFFER AND PRINT
            54            05     D0  0177   130 	MOVL	#5,R4			;SET NUMBER OF LINES TO PRINT
            55       FEB5 CF     9E  017A   131 	MOVAB	REGDMP,R5		;SET ADDRESS OF REGISTER DUMP CONTROL STRING
            56            5E     D0  017F   132 	MOVL	SP,R6			;SET ADDRESS OF REGISTER SAVE AREA
            50            85     98  0182   133 30$:	CVTBL	(R5)+,R0		;GET NEXT BYTE FROM CONTROL STRING
                          04     15  0185   134 	BLEQ	40$			;IF LEQ CONTROL BYTE
                          19     10  0187   135 	BSBB	PUTB			;PUT BYTE IN OUTPUT BUFFER
                          F7     11  0189   136 	BRB	30$			;
                          04     19  018B   137 40$:	BLSS	50$			;IF LSS END OF LINE
                          57     10  018D   138 	BSBB	CONVERT			;CONVERT NEXT REGISTER VALUE
                          F1     11  018F   139 	BRB	30$			;
                          23     10  0191   140 50$:	BSBB	PUT			;OUTPUT RECORD
            EC            54     F5  0193   141 	SOBGTR	R4,30$			;ANY MORE LINES TO PRINT?
                          1E     10  0196   142 	BSBB	PUT			;OUTPUT RECORD
                                 04  0198   143 	RET				;
                                     0199   144  
                                     0199   145 ;
                                     0199   146 ; INSERT TEXT IN OUTPUT BUFFER
                                     0199   147 ;
                                     0199   148  
                                     0199   149 	.ENABL	LSB
            50            81     9A  0199   150 INSERT:	MOVZBL	(R1)+,R0		;GET NEXT BYTE FROM TEXT STRING
                          0F     13  019C   151 	BEQL	10$			;IF EQL END OF TEXT STRING
                          02     10  019E   152 	BSBB	PUTB			;PUT BYTE IN OUTPUT BUFFER
                          F7     11  01A0   153 	BRB	INSERT			;
                                     01A2   154  
                                     01A2   155 ;
                                     01A2   156 ; PUT BYTE IN OUTPUT BUFFER
                                     01A2   157 ;
                                     01A2   158  
                       22 AA     B5  01A2   159 PUTB:	TSTW	RAB$W_RSZ(R10)		;ANY ROOM LEFT IN BUFFER?
                          06     13  01A5   160 	BEQL	10$			;IF EQL NO
                       22 AA     B7  01A7   161 	DECW	RAB$W_RSZ(R10)		;DECREMENT NUMBER OF BYTES REMAINING
            87            50     90  01AA   162 	MOVB	R0,(R7)+		;INSERT BYTE IN OUTPUT BUFFER
                                 05  01AD   163 10$:	RSB				;
                                     01AE   164 	.DSABL	LSB
                                     01AE   165  
                                     01AE   166 ;
                                     01AE   167 ; CONVERT HEXDECIMAL VALUE AND OUTPUT RECORD
                                     01AE   168 ;
                                     01AE   169  
                          36     10  01AE   170 PUTC:	BSBB	CONVERT			;CONVERT HEXDECIMAL VALUE
                          04     11  01B0   171 	BRB	PUT			;OUTPUT RECORD
                                     01B2   172  
                                     01B2   173 ;
                                     01B2   174 ; INSERT TEXT IN OUTPUT BUFFER AND OUTPUT RECORD AND BLANK RECORD
                                     01B2   175 ;
                                     01B2   176  
                          E5     10  01B2   177 PUTI:	BSBB	INSERT			;INSERT TEXT IN BUFFER
                          00     10  01B4   178 	BSBB	PUT			;OUTPUT RECORD
EXCEPTMSG       - EXCEPTION MESSAGE FORMAT AND PRINT ROUTINE     21-AUG-1978 19:45:17   VAX-11 MACRO X0.3-11               Page   5
01              EXCEPTION MESSAGE FORMAT AND PRINT ROUTINE                                                                       (1)

                                     01B6   179  
                                     01B6   180 ;
                                     01B6   181 ; OUTPUT CURRENT RECORD AND RESET RECORD PARAMETERS
                                     01B6   182 ;
                                     01B6   183  
            57         28 AA     C3  01B6   184 PUT:	SUBL3	RAB$L_RBF(R10),R7,R0	;CALCULATE LENGTH OF OUTPUT RECORD
                          50         01BA       
         22 AA            50     B0  01BB   185 	MOVW	R0,RAB$W_RSZ(R10)	;SET LENGTH OF OUTPUT RECORD
         22 AB            50     B0  01BF   186 	MOVW	R0,RAB$W_RSZ(R11)	;SET LENGTH OF OUTPUT RECORD
                                     01C3   187 	$PUT	RAB=(R10)		;OUTPUT RECORD
            57         28 AA     D0  01CC   188 	MOVL	RAB$L_RBF(R10),R7	;RESET OUTPUT RECORD POINTER
         22 AA         50 8F     9B  01D0   189 	MOVZBW	#BUFSIZ,RAB$W_RSZ(R10)	;RESET OUTPUT RECORD BUFFER SIZE
         02 AB         02 AA     B1  01D5   190 	CMPW	RAB$W_ISI(R10),RAB$W_ISI(R11) ;ERROR AND OUTPUT FILES EQUIVALENCT?
                          09     13  01DA   191 	BEQL	10$			;IF EQL YES
                                     01DC   192 	$PUT	RAB=(R11)		;OUTPUT RECORD
                                 05  01E5   193 10$:	RSB				;
                                     01E6   194  
                                     01E6   195 ;
                                     01E6   196 ; CONVERT NUMBER BASE 16
                                     01E6   197 ;
                                     01E6   198  
                                     01E6   199 CONVERT:				;
            52            1C     D0  01E6   200 	MOVL	#28,R2			;SET STARTING BIT NUMBER
            51            86     D0  01E9   201 	MOVL	(R6)+,R1		;GET NUMBER TO BE CONVERTED
            04            52     EF  01EC   202 10$:	EXTZV	R2,#4,R1,R0		;GET NEXT HEXDECIMAL DIGIT
            50            51         01EF       
            50   00000000'EF40   9A  01F1   203 	MOVZBL	EXE$AB_HEXTAB[R0],R0	;CONVERT HEXDIGIT TO ASCII
                          A7     10  01F9   204 	BSBB	PUTB			;PUT BYTE IN OUTPUT BUFFER
         FC 8F            00     9D  01FB   205 	ACBB	#0,#-4,R2,10$		;ANY MORE DIGITS TO CONVERT?
            FFEA          52         01FF       
                                 05  0202   206 	RSB				;
                                     0203   207  
                                     0203   208 	.END
EXCEPTMSG       - EXCEPTION MESSAGE FORMAT AND PRINT ROUTINE     21-AUG-1978 19:45:17   VAX-11 MACRO X0.3-11               Page   6
SYMBOL TABLE                                                                                                                     (1)

$$.TMP1        = 00000001            FAB$M_BLK      = 00000008            FAB$V_CR       = 00000001            
$$.TMP2        = 0000006B            FAB$M_BRO      = 00000040            FAB$V_CTG      = 00000014            
BIT...         = 00000020            FAB$M_CBT      = 00200000            FAB$V_DEL      = 00000002            
BUFSIZ         = 00000050            FAB$M_CIF      = 02000000            FAB$V_DFW      = 00000005            
CHF$L_MCHARGLST  00000008            FAB$M_CR       = 00000002            FAB$V_DLT      = 0000000F            
CHF$L_MCH_ARGS   00000000            FAB$M_CTG      = 00100000            FAB$V_DMO      = 0000000C            
CHF$L_MCH_DEPTH  00000008            FAB$M_DEL      = 00000004            FAB$V_ESC      = 0000001B            
CHF$L_MCH_FRAME  00000004            FAB$M_DFW      = 00000020            FAB$V_EXE      = 00000007            
CHF$L_MCH_SAVR0  0000000C            FAB$M_DLT      = 00008000            FAB$V_FTN      = 00000000            
CHF$L_MCH_SAVR1  00000010            FAB$M_DMO      = 00001000            FAB$V_GET      = 00000001            
CHF$L_SIGARGLST  00000004            FAB$M_ESC      = 08000000            FAB$V_INP      = 00000013            
CHF$L_SIG_ARG1   00000008            FAB$M_EXE      = 00000080            FAB$V_JNL      = 00000016            
CHF$L_SIG_ARGS   00000000            FAB$M_FTN      = 00000001            FAB$V_KFO      = 0000001E            
CHF$L_SIG_NAME   00000004            FAB$M_GET      = 00000002            FAB$V_MSE      = 00000004            
CONVERT          000001E6 R     03   FAB$M_INP      = 00080000            FAB$V_MXV      = 00000001            
EXE$AB_HEXTAB    ********   X   03   FAB$M_JNL      = 00400000            FAB$V_NAM      = 00000018            
EXE$EXCMSG       000000EA RG    03   FAB$M_KFO      = 40000000            FAB$V_NEF      = 0000000A            
EXE$OPEN_MSG     ********   X   03   FAB$M_MSE      = 00000010            FAB$V_NFS      = 00000010            
FAB$B_BID        00000000            FAB$M_MXV      = 00000002            FAB$V_NIL      = 00000005            
FAB$B_BKS        0000003E            FAB$M_NAM      = 01000000            FAB$V_OFP      = 0000001D            
FAB$B_BLN        00000001            FAB$M_NEF      = 00000400            FAB$V_ORG      = 00000004            
FAB$B_DNS        00000035            FAB$M_NFS      = 00010000            FAB$V_POS      = 00000008            
FAB$B_FAC        00000016            FAB$M_NIL      = 00000020            FAB$V_PPF      = 00000012            
FAB$B_FNS        00000034            FAB$M_OFP      = 20000000            FAB$V_PPF_IND  = 0000000E            
FAB$B_FSZ        0000003F            FAB$M_POS      = 00000100            FAB$V_PPF_RAT  = 00000006            
FAB$B_ORG        0000001D            FAB$M_PPF      = 00040000            FAB$V_PRN      = 00000002            
FAB$B_RAT        0000001E            FAB$M_PPF_IND  = 00004000            FAB$V_PUT      = 00000000            
FAB$B_RFM        0000001F            FAB$M_PPF_RAT  = 00003FC0            FAB$V_RCK      = 00000017            
FAB$B_RTV        0000001C            FAB$M_PRN      = 00000004            FAB$V_RWC      = 0000000B            
FAB$B_SHR        00000017            FAB$M_PUT      = 00000001            FAB$V_RWO      = 00000007            
FAB$C_BID      = 00000003            FAB$M_RCK      = 00800000            FAB$V_SCF      = 0000000E            
FAB$C_BLN        00000050            FAB$M_RWC      = 00000800            FAB$V_SHRDEL   = 00000002            
FAB$C_FIX      = 00000001            FAB$M_RWO      = 00000080            FAB$V_SHRGET   = 00000001            
FAB$C_HSH      = 00000030            FAB$M_SCF      = 00004000            FAB$V_SHRPUT   = 00000000            
FAB$C_IDX      = 00000020            FAB$M_SHRDEL   = 00000004            FAB$V_SHRUPD   = 00000003            
FAB$C_MAXRFM   = 00000003            FAB$M_SHRGET   = 00000002            FAB$V_SPL      = 0000000D            
FAB$C_REL      = 00000010            FAB$M_SHRPUT   = 00000001            FAB$V_SQO      = 00000006            
FAB$C_RFM_DFLT = 00000002            FAB$M_SHRUPD   = 00000008            FAB$V_SUP      = 00000002            
FAB$C_SEQ      = 00000000            FAB$M_SPL      = 00002000            FAB$V_TEF      = 0000001C            
FAB$C_UDF      = 00000000            FAB$M_SQO      = 00000040            FAB$V_TMD      = 00000004            
FAB$C_VAR      = 00000002            FAB$M_SUP      = 00000004            FAB$V_TMP      = 00000003            
FAB$C_VFC      = 00000003            FAB$M_TEF      = 10000000            FAB$V_TRN      = 00000004            
FAB$K_BLN        00000050            FAB$M_TMD      = 00000010            FAB$V_UFM      = 0000001A            
FAB$L_ALQ        00000010            FAB$M_TMP      = 00000008            FAB$V_UFO      = 00000011            
FAB$L_CTX        00000018            FAB$M_TRN      = 00000010            FAB$V_UPD      = 00000003            
FAB$L_DEV        00000040            FAB$M_UFM      = 04000000            FAB$V_UPI      = 00000006            
FAB$L_DNA        00000030            FAB$M_UFO      = 00020000            FAB$V_WCK      = 00000009            
FAB$L_FNA        0000002C            FAB$M_UPD      = 00000008            FAB$W_BLS        0000003C            
FAB$L_FOP        00000004            FAB$M_UPI      = 00000040            FAB$W_DEQ        00000014            
FAB$L_JNL        00000020            FAB$M_WCK      = 00000200            FAB$W_IFI        00000002            
FAB$L_MRN        00000038            FAB$S_ORG      = 00000004            FAB$W_MRS        00000036            
FAB$L_NAM        00000028            FAB$S_PPF_RAT  = 00000008            GBL...         = 00000000            
FAB$L_SDC        00000044            FAB$V_BIO      = 00000005            HEADNG           00000000 R     03   
FAB$L_STS        00000008            FAB$V_BLK      = 00000003            INSERT           00000199 R     03   
FAB$L_STV        0000000C            FAB$V_BRO      = 00000006            MESSAGE        = 00000004            
FAB$L_XAB        00000024            FAB$V_CBT      = 00000015            PUT              000001B6 R     03   
FAB$M_BIO      = 00000020            FAB$V_CIF      = 00000019            PUTB             000001A2 R     03   
EXCEPTMSG       - EXCEPTION MESSAGE FORMAT AND PRINT ROUTINE     21-AUG-1978 19:45:17   VAX-11 MACRO X0.3-11               Page   7
SYMBOL TABLE                                                                                                                     (1)

PUTC             000001AE R     03   RAB$M_TPT      = 00000002            
PUTI             000001B2 R     03   RAB$M_UIF      = 00000010            
RAB$B_BID        00000000            RAB$M_ULK      = 00040000            
RAB$B_BLN        00000001            RAB$M_WAT      = 00020000            
RAB$B_KRF        00000035            RAB$M_WBH      = 00000400            
RAB$B_KSZ        00000034            RAB$S_PPF_RAT  = 00000008            
RAB$B_MBC        00000037            RAB$V_ASY      = 00000000            
RAB$B_MBF        00000036            RAB$V_BIO      = 0000000B            
RAB$B_PSZ        00000034            RAB$V_CCO      = 0000001F            
RAB$B_RAC        0000001E            RAB$V_CVT      = 0000001A            
RAB$B_ROP1       00000005            RAB$V_EOF      = 00000008            
RAB$B_ROP2       00000006            RAB$V_FDL      = 00000006            
RAB$B_ROP3       00000007            RAB$V_HSH      = 00000007            
RAB$B_TMO        0000001F            RAB$V_KGE      = 00000015            
RAB$C_BID      = 00000001            RAB$V_KGT      = 00000016            
RAB$C_BLN        00000044            RAB$V_LIM      = 0000000E            
RAB$C_KEY      = 00000001            RAB$V_LOA      = 0000000D            
RAB$C_RFA      = 00000002            RAB$V_LOC      = 00000010            
RAB$C_SEQ      = 00000000            RAB$V_MAS      = 00000005            
RAB$K_BLN        00000044            RAB$V_NLK      = 00000014            
RAB$L_BKT        00000038            RAB$V_NXR      = 00000017            
RAB$L_CTX        00000018            RAB$V_PMT      = 0000001E            
RAB$L_DCT        00000038            RAB$V_PPF_IND  = 0000000E            
RAB$L_FAB        0000003C            RAB$V_PPF_RAT  = 00000006            
RAB$L_KBF        00000030            RAB$V_PTA      = 0000001D            
RAB$L_PBF        00000030            RAB$V_RAH      = 00000009            
RAB$L_RBF        00000028            RAB$V_RLK      = 00000013            
RAB$L_RFA0       00000010            RAB$V_RNE      = 00000018            
RAB$L_RHB        0000002C            RAB$V_RNF      = 0000001B            
RAB$L_ROP        00000004            RAB$V_TMO      = 00000019            
RAB$L_STS        00000008            RAB$V_TPT      = 00000001            
RAB$L_STV        0000000C            RAB$V_UIF      = 00000004            
RAB$L_UBF        00000024            RAB$V_ULK      = 00000012            
RAB$M_ASY      = 00000001            RAB$V_WAT      = 00000011            
RAB$M_BIO      = 00000800            RAB$V_WBH      = 0000000A            
RAB$M_CCO      = 80000000            RAB$W_ISI        00000002            
RAB$M_CVT      = 04000000            RAB$W_RFA        00000010            
RAB$M_EOF      = 00000100            RAB$W_RFA4       00000014            
RAB$M_FDL      = 00000040            RAB$W_RSZ        00000022            
RAB$M_HSH      = 00000080            RAB$W_USZ        00000020            
RAB$M_KGE      = 00200000            REGDMP           00000033 R     03   
RAB$M_KGT      = 00400000            REGMSG           00000021 R     03   
RAB$M_LIM      = 00004000            SIGCTL           000000BB R     03   
RAB$M_LOA      = 00002000            SIGMSG           000000BF R     03   
RAB$M_LOC      = 00010000            SIGNAL         = 00000008            
RAB$M_MAS      = 00000020            SIGNAM           000000D4 R     03   
RAB$M_NLK      = 00100000            SIGNUM           000000DF R     03   
RAB$M_NXR      = 00800000            SYS$PUT          ********  GX   03   
RAB$M_PMT      = 40000000            
RAB$M_PPF_IND  = 00004000            
RAB$M_PPF_RAT  = 00003FC0            
RAB$M_PTA      = 20000000            
RAB$M_RAH      = 00000200            
RAB$M_RLK      = 00080000            
RAB$M_RNE      = 01000000            
RAB$M_RNF      = 08000000            
RAB$M_TMO      = 02000000            
EXCEPTMSG       - EXCEPTION MESSAGE FORMAT AND PRINT ROUTINE     21-AUG-1978 19:45:17   VAX-11 MACRO X0.3-11               Page   8
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            00000050      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
YEXEPAGED        00000203      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
19206. BYTES LEFT IN FREE MEMORY POOL.
1528. BYTES OF RECLAIMED MEMORY.
OBJ$:EXCEPTMSG,LIS$:EXCEPTMSG/-SP=EXECML$/ML,SRC$:EXCEPTMSG
3 MLB DIR RDS - 418 GETS TO DEFINE 12 MACROS. 33 INTER. FILE WRITES. 
