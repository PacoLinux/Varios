ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     21-AUG-1978 19:42:54   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)   10000  LOG DEVICE ERRORS
   (1)   16704  BUILD STARTUP AND POWERFAIL MESSAGES
   (1)   16900  ALLOCATE ERROR MESSAGE BUFFER
   (1)   23500  RELEASE ERROR MESSAGE BUFFER
   (1)   26700  WAKE ERROR LOG FORMAT PROCESS
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     21-AUG-1978 19:42:54   VAX-11 MACRO X0.3-11               Page   1
02                                                                                                                               (1)

                                     0000   100 	.TITLE	ERRORLOG - ERROR LOG SUPPORT ROUTINES
                                     0000   200 	.IDENT	/02/
                                     0000   300  
                                     0000   400 ;
                                     0000   500 ; COPYRIGHT (C) 1977,1978
                                     0000   600 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000   700 ;
                                     0000   800 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000   900 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000  1000 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000  1100 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000  1200 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000  1300 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000  1400 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000  1500 ;
                                     0000  1600 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000  1700 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000  1800 ; EQUIPMENT CORPORATION.
                                     0000  1900 ;
                                     0000  2000 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000  2100 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000  2200 ;
                                     0000  2300 ; D. N. CUTLER 7-MAR-77
                                     0000  2400 ;
                                     0000  2500 ; ERROR LOG SUPPORT ROUTINES
                                     0000  2600 ;
                                     0000  2700 ; MACRO LIBRARY CALLS
                                     0000  2800 ;
                                     0000  2900  
                                     0000  3000 	$DDBDEF				;DEFINE DDB OFFSETS
                                     0000  3100 	$DDTDEF				;DEFINE DDT OFFSETS
                                     0000  3200 	$DEVDEF				;DEFINE DEVICE CHARACTERISTIC BITS
                                     0000  3300 	$EMBDEF				;DEFINE ERROR MESSAGE BUFFER OFFSETS
                                     0000  3350 	$EMBSUDEF			;DEFINE ERROR MESSAGE FOR STARTUP
                                     0000  3400 	$ERLDEF				;DEFINE ERROR ALLOCATION BUFFER OFFSETS
                                     0000  3500 	$FCBDEF				;DEFINE FCB OFFSETS
                                     0000  3600 	$IODEF				;DEFINE I/O FUNCTION VALUES
                                     0000  3700 	$IRPDEF				;DEFINE IRP OFFSETS
                                     0000  3800 	$PRDEF				;DEFINE PROCESSOR REGISTER NUMBERS
                                     0000  3900 	$UCBDEF				;DEFINE UCB OFFSETS
                                     0000  4000 	$WCBDEF				;DEFINE WCB OFFSETS
                                     0000  4100  
                                     0000  4200 ;
                                     0000  4300 ; LOCAL SYMBOLS
                                     0000  4400 ;
                                     0000  4500 ; MAXIMUM NUMBER OF MESSAGES BEFORE WAKE OF FORMAT PROCESS
                                     0000  4600 ;
                                     0000  4700  
                           0000000A  0000  4800 MAXMSG=10				;
                                     0000  4900  
                                     0000  5000 ;
                                     0000  5100 ; MAXIMUM TIME IN SECONDS BEFORE WAKE OF FORMAT PROCESS
                                     0000  5200 ;
                                     0000  5300  
                           0000001E  0000  5400 MAXTIM=30				;
                                     0000  5500  
                                     0000  5600 ;
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     21-AUG-1978 19:42:54   VAX-11 MACRO X0.3-11               Page   2
02                                                                                                                               (1)

                                     0000  5700 ; LOCAL DATA
                                     0000  5800 ;
                                     0000  5900  
                                 00000000  6000 	.PSECT	$$$260,QUAD,WRT
                                 00  0000  6100 BUF1:	.BYTE	0			;COUNT OF BUSY MESSAGES IN BUFFER
                                 00  0001  6200 	.BYTE	0			;COUNT OF COMPLETED MESSAGES IN BUFFER
                                 00  0002  6300 	.BYTE	0			;BUFFER INDICATOR
                           00000004  0003  6400 	.BLKB	1			;SPARE UNUSED BYTE
                           0000000C' 0004  6500 	.LONG	10$			;ADDRESS OF NEXT AVAILABLE SPACE IN BUFFER
                           00000200' 0008  6600 	.LONG	20$			;ADDRESS OF END OF BUFFER + 1
                           00000200  000C  6700 10$:	.BLKB	512-ERL$C_LENGTH	;ACTUAL BUFFER AREA
                                     0200  6800 20$:					;REF LABEL
                                 00  0200  6900 BUF2:	.BYTE	0			;COUNT OF BUSY MESSAGES IN BUFFER
                                 00  0201  7000 	.BYTE	0			;COUNT OF COMPLETED MESSAGES IN BUFFER
                                 01  0202  7100 	.BYTE	1			;BUFFER INDICATOR
                           00000204  0203  7200 	.BLKB	1			;SPARE UNUSED BYTE
                           0000020C' 0204  7300 	.LONG	10$			;ADDRESS OF NEXT AVAILABLE SPACE IN BUFFER
                           00000400' 0208  7400 	.LONG	20$			;ADDRESS OF END OF BUFFER + 1
                           00000400  020C  7500 10$:	.BLKB	512-ERL$C_LENGTH	;ACTUAL BUFFER AREA
                                     0400  7600 20$:					;REF LABEL
                                     0400  7700  
                                     0400  7800 ;
                                     0400  7900 ; GLOBAL DATA
                                     0400  8000 ;
                                     0400  8100 ; ERROR LOG DATA BASE
                                     0400  8200 ;
                                     0400  8300  
                                     0400  8400 ERL$AL_BUFADDR::			;ALLOCATION BUFFER ADDRESS ARRAY
                           00000000' 0400  8500 	.LONG	BUF1			;ADDRESS OF BUFFER 1 DESCRIPTOR
                           00000200' 0404  8600 	.LONG	BUF2			;ADDRESS OF BUFFER 2 DESCRIPTOR
                                     0408  8700 ERL$GB_BUFIND::				;CURRENT ALLOCATION BUFFER INDICATOR
                                 00  0408  8800 	.BYTE	0			;
                                     0409  8900 ERL$GB_BUFFLAG::			;BUFFER STATUS FLAGS
                                 00  0409  9000 	.BYTE	0			;
                                     040A  9100 ERL$GB_BUFPTR::				;FORMAT PROCESS BUFFER INDICATOR
                                 00  040A  9200 	.BYTE	0			;
                                     040B  9300 ERL$GB_BUFTIM::				;FORMAT PROCESS WAKEUP TIMER
                                 1E  040B  9400 	.BYTE	MAXTIM			;
                                     040C  9500 ERL$GL_ERLPID::				;PROCESS ID OF ERROR LOG PROCESS
                           00000000  040C  9600 	.LONG	0			;
                                     0410  9700 ERL$GL_SEQUENCE::			;UNIVERSAL ERROR SEQUENCE NUMBER
                           00000000  0410  9800 	.LONG	0			;
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     21-AUG-1978 19:42:54   VAX-11 MACRO X0.3-11               Page   3
02              LOG DEVICE ERRORS                                                                                                (1)

                                     0414 10000 	.SBTTL	LOG DEVICE ERRORS
                                     0414 10100 ;+
                                     0414 10200 ; ERL$DEVICERR - LOG DEVICE CONTROLLER AND/OR DRIVE ERROR
                                     0414 10300 ; ERL$DEVICTMO - LOG DEVICE TIMEOUT ERROR
                                     0414 10400 ;
                                     0414 10500 ; THIS ROUTINE IS CALLED TO LOG A DEVICE TIMEOUT OR DEVICE CONTROLLER
                                     0414 10600 ; AND/OR DRIVE ERROR.
                                     0414 10700 ;
                                     0414 10800 ; INPUTS:
                                     0414 10900 ;
                                     0414 11000 ;	R5 = DEVICE UNIT UCB ADDRESS.
                                     0414 11100 ;
                                     0414 11200 ; OUTPUTS:
                                     0414 11300 ;
                                     0414 11400 ;	IF AN ERROR LOG ENTRY IS NOT ALREADY IN PROGRESS ON THE UNIT, ERROR
                                     0414 11500 ;	LOGGING IS ENABLED FOR THE UNIT, AND THE CURRENT REQUEST DOES NOT
                                     0414 11600 ;	INHIBIT ERROR LOGGING, THEN AN ERROR MESSAGE BUFFER IS ALLOCATED AND
                                     0414 11700 ;	FILLED IN WITH PERTINENT REQUEST INFORMATION FOLLOWED BY A DUMP OF
                                     0414 11800 ;	THE DEVICE REGISTERS.
                                     0414 11900 ;
                                     0414 12000 ;	ALL REGISTERS ARE PRESERVED ACROSS CALL.
                                     0414 12100 ;-
                                     0414 12200  
                                 00000000 12300 	.PSECT	WIONONPAGED
                                     0000 12400 	.ENABL	LSB
                                     0000 12500 ERL$DEVICERR::				;LOG DEVICE CONTROLLER AND/OR DRIVE ERROR
                          01     DD  0000 12600 	PUSHL	#EMB$C_DE		;SET FOR DEVICE ERROR
                          05     11  0002 12700 	BRB	10$			;
                                     0004 12800 ERL$DEVICTMO::				;LOG DEVICE TIMEOUT ERROR
            7E       0060 8F     3C  0004 12900 	MOVZWL	#EMB$C_DT,-(SP)		;SET FOR DEVICE TIMEOUT
                     004F 8F     BB  0009 13000 10$:	PUSHR	#^M<R0,R1,R2,R3,R6>	;SAVE REGISTERS
            53         24 A5     D0  000D 13100 	MOVL	UCB$L_DDB(R5),R3	;GET ADDRESS OF DDB
            56         0C A3     D0  0011 13200 	MOVL	DDB$L_DDT(R3),R6	;GET ADDRESS OF DDT
            51         16 A6     3C  0015 13300 	MOVZWL	DDT$W_ERRORBUF(R6),R1	;GET SIZE OF ERROR LOG BUFFER IN BYTES
                       72 A5     B6  0019 13400 	INCW	UCB$W_ERRCNT(R5)	;INCREMENT NUMBER OF DEVICE ERRORS
         58 A5            02     E0  001C 13500 	BBS	#UCB$V_ERLOGIP,UCB$W_STS(R5),30$ ;IF SET, ERROR IN PROGRESS
                          69         0020       
         34 A5            16     E1  0021 13600 	BBC	#DEV$V_ELG,UCB$L_DEVCHAR(R5),30$ ;IF CLR, ERROR LOG DISABLED
                          64         0025       
         7E A5            0B     E0  0026 13700 	BBS	#IO$V_INHERLOG,UCB$W_FUNC(R5),30$ ;IF SET, ERROR LOG INHIBITED
                          5F         002A       
                          007F   30  002B 13800 	BSBW	ERL$ALLOCEMB		;ALLOCATE ERROR MESSAGE BUFFER
            59            50     E9  002E 13900 	BLBC	R0,30$			;IF LBC ALLOCATION FAILURE
         78 A5            52     D0  0031 14000 	MOVL	R2,UCB$L_EMB(R5)	;SAVE ADDRESS OF ERROR MESSAGE BUFFER
         58 A5            04     A8  0035 14100 	BISW	#UCB$M_ERLOGIP,UCB$W_STS(R5) ;SET ERROR LOG IN PROGRESS
         04 A2         14 AE     B0  0039 14200 	MOVW	5*4(SP),EMB$W_DV_ENTRY(R2) ;INSERT ENTRY TYPE
            52            1C     C0  003E 14300 	ADDL	#EMB$B_DV_CLASS,R2	;POINT TO DEVICE CLASS
            82         38 A5     B0  0041 14400 	MOVW	UCB$B_DEVCLASS(R5),(R2)+ ;INSERT DEVICE CLASS AND TYPE
            51         4C A5     D0  0045 14500 	MOVL	UCB$L_IRP(R5),R1	;GET ADDRESS OF I/O PACKET
            82         0C A1     D0  0049 14600 	MOVL	IRP$L_PID(R1),(R2)+	;INSERT REQUESTER PROCESS ID
            82         30 A1     7D  004D 14700 	MOVQ	IRP$W_BOFF(R1),(R2)+	;INSERT TRANSFER PARAMETERS
            82         48 A5     B0  0051 14800 	MOVW	UCB$W_UNIT(R5),(R2)+	;INSERT UNIT NUMBER
            82         72 A5     B0  0055 14900 	MOVW	UCB$W_ERRCNT(R5),(R2)+	;INSERT NUMBER OF DEVICE ERRORS
            82         60 A5     D0  0059 15000 	MOVL	UCB$L_OPCNT(R5),(R2)+	;INSERT OPERATIONS COMPLETED
            82         1C A5     D0  005D 15100 	MOVL	UCB$L_OWNUIC(R5),(R2)+	;INSERT VOLUME OWNER UIC
            82         34 A5     D0  0061 15200 	MOVL	UCB$L_DEVCHAR(R5),(R2)+	;INSERT DEVICE CHARACTERISTICS
            82         74 A5     9B  0065 15300 	MOVZBW	UCB$B_SLAVE(R5),(R2)+	;INSERT SLAVE UNIT NUMBER
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     21-AUG-1978 19:42:54   VAX-11 MACRO X0.3-11               Page   4
02              LOG DEVICE ERRORS                                                                                                (1)

            82         20 A1     B0  0069 15400 	MOVW	IRP$W_FUNC(R1),(R2)+	;INSERT FUNCTION VALUE
            51         14 A3     DE  006D 15500 	MOVAL	DDB$T_NAME(R3),R1	;GET ADDRESS OF DEVICE NAME
            53            61     9A  0071 15600 	MOVZBL	(R1),R3			;GET NUMBER OF CHARACTERS TO MOVE
            52            10     C1  0074 15700 	ADDL3	#EMB$L_DV_REGSAV-EMB$T_DV_NAME,R2,R0 ;CALCULATE ADDRESS OF REGISTERS
                          50         0077       
            82            81     90  0078 15800 20$:	MOVB	(R1)+,(R2)+		;MOVE DEVICE NAME TO BUFFER
            FA            53     F4  007B 15900 	SOBGEQ	R3,20$			;ANY MORE CHARACTERS TO MOVE?
            56         10 A6     C1  007E 16000 	ADDL3	DDT$L_REGDUMP(R6),R6,R1	;CALCULATE ADDRESS OF REGISTER DUMP ROUTINE
                          51         0082       
                          03     19  0083 16100 	BLSS	25$			;IF LSS SYSTEM ADDRESS
            51            56     C2  0085 16200 	SUBL	R6,R1			;SUBTRACT OUT BASE ADDRESS
                          61     16  0088 16300 25$:	JSB	(R1)			;CALL REGISTER DUMP ROUTINE
                     004F 8F     BA  008A 16400 30$:	POPR	#^M<R0,R1,R2,R3,R6>	;RESTORE REGISTERS
                          8E     D5  008E 16500 	TSTL	(SP)+			;REMOVE ENTRY TYPE FFROM STACK
                                 05  0090 16600 	RSB				;
                                     0091 16700 	.DSABL	LSB
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     21-AUG-1978 19:42:54   VAX-11 MACRO X0.3-11               Page   5
02              BUILD STARTUP AND POWERFAIL MESSAGES                                                                             (1)

                                     0091 16704 	.SBTTL	BUILD STARTUP AND POWERFAIL MESSAGES
                                     0091 16706 ;+
                                     0091 16708 ; ERL$COLDSTART - LOG COLDSTART (SYSTEMBOOT)
                                     0091 16710 ;
                                     0091 16712 ; THIS ROUTINE IS CALLED BY SYSINIT AFTER CORRECTLY SETTING THE SYSTEM
                                     0091 16714 ; TIME TO LOG THE BOOTING OF THE SYSTEM.
                                     0091 16716 ;
                                     0091 16718 ; ERL$WARMSTART - LOG WARMSTART (POWER RECOVERY)
                                     0091 16720 ;
                                     0091 16722 ; THIS ROUTINE IS CALLED BY POWERFAIL AFTER CORRECTING THE SYSTEM TIME
                                     0091 16724 ; TO LOG THE POWER FAIL AND RECOVERY.
                                     0091 16726 ;
                                     0091 16728 ; INPUTS:
                                     0091 16730 ;	NONE
                                     0091 16732 ;
                                     0091 16734 ; OUTPUTS:
                                     0091 16736 ;
                                     0091 16738 ; AN ERROR LOG BUFFER IS ALLOCATED AND FILLED WITH THE APPROPRIATE MESSAGE
                                     0091 16740 ; IF POSSIBLE AND THE ERROR LOG PROCESS AWAKENED IF NECESSARY.
                                     0091 16742 ;-
                                     0091 16743 	.ENABL	LSB
                                     0091 16744 ERL$COLDSTART::				;
            53            20     3C  0091 16746 	MOVZWL	#EMB$C_CS,R3		;SET TYPE OF MESSAGE TO COLDSTART
                          03     11  0094 16748 	BRB	10$			;
                                     0096 16750 ERL$WARMSTART::				;
            53            24     3C  0096 16752 	MOVZWL	#EMB$C_WS,R3		;SET TYPE OF MESSAGE TO WARMSTART
            51            14     3C  0099 16754 10$:	MOVZWL	#EMB$C_SU_LENGTH,R1	;SET SIZE OF MESSAGE TO ALLOCATE
                          0F     10  009C 16756 	BSBB	ERL$ALLOCEMB		;ALLOCATE AN ERROR LOG BUFFER
            0B            50     E9  009E 16757 	BLBC	R0,20$			;BRANCH IF NONE AVAILABLE
         10 A2            1B     DB  00A1 16758 	MFPR	#PR$_TODR,EMB$L_SU_DAYTIM(R2) ;LOG TIME OF DAY CLOCK
         04 A2            53     B0  00A5 16760 	MOVW	R3,EMB$W_SU_ENTRY(R2)	;SET MESSAGE TYPE
                          0080   30  00A9 16762 	BSBW	ERL$RELEASEMB		;RELEASE BUFFER
                                 05  00AC 16763 20$:	RSB				;
                                     00AD 16764 	.DSABL	LSB			;
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     21-AUG-1978 19:42:54   VAX-11 MACRO X0.3-11               Page   6
02              ALLOCATE ERROR MESSAGE BUFFER                                                                                    (1)

                                     00AD 16900 	.SBTTL	ALLOCATE ERROR MESSAGE BUFFER
                                     00AD 17000 ;+
                                     00AD 17100 ; ERL$ALLOCEMB - ALLOCATE ERROR MESSAGE BUFFER
                                     00AD 17200 ;
                                     00AD 17300 ; THIS ROUTINE IS CALLED TO ALLOCATE AN ERROR LOG MESSAGE BUFFER AND
                                     00AD 17400 ; INITIALIZE ITS HEADER.
                                     00AD 17500 ;
                                     00AD 17600 ; INPUTS:
                                     00AD 17700 ;
                                     00AD 17800 ;	R1 = SIZE OF MESSAGE BUFFER REQUIRED IN BYTES.
                                     00AD 17900 ;
                                     00AD 18000 ; OUTPUTS:
                                     00AD 18100 ;
                                     00AD 18200 ;	R0 LOW BIT CLEAR INDICATES AN ALLOCATION FAILURE.
                                     00AD 18300 ;
                                     00AD 18400 ;	R0 LOW BIT SET INDICATES SUCCESSFUL ALLOCATION WITH:
                                     00AD 18500 ;
                                     00AD 18600 ;		R1 = ERROR SEQUENCE NUMBER.
                                     00AD 18700 ;		R2 = ADDRESS OF ALLOCATED ERROR MESSAGE BUFFER.
                                     00AD 18800 ;
                                     00AD 18900 ;	IN EITHER CASE THE UNIVERSAL ERROR SEQUENCE NUMBER IS INCREMENTED
                                     00AD 19000 ;	AND STORED IN THE BUFFER AT THE STANDARD PLACE, ALONG WITH THE TIME.
                                     00AD 19100 ;	AND THE ERROR LOG PROCESS MAY BE AWAKENED IF AN ERROR ALLOCATION
                                     00AD 19200 ;	BUFFER IS FOUND TO BE FULL.
                                     00AD 19300 ;
                                     00AD 19400 ;	R3 IS PRESERVED ACROSS CALL.
                                     00AD 19500 ;-
                                     00AD 19600  
                                     00AD 19700 ERL$ALLOCEMB::				;ALLOCATE ERROR MESSAGE BUFFER
                                     00AD 19800 	DSBINT				;DISABLE ALL INTERRUPTS
       0409'CF            00     E6  00B3 19900 	BBSSI	#ERL$V_LOCK,W^ERL$GB_BUFFLAG,50$ ;IF SET, RECURSIVE REENTRY ATTEMPTED
                          72         00B8       
            50       0408'CF     9A  00B9 20000 	MOVZBL	W^ERL$GB_BUFIND,R0	;GET CURRENT ALLOCATION BUFFER INDICATOR
            50       0400'CF40   D0  00BE 20100 	MOVL	W^ERL$AL_BUFADDR[R0],R0	;GET ADDRESS OF ALLOCATION BUFFER DESCRIPTOR
            52         04 A0     D0  00C4 20200 10$:	MOVL	ERL$L_NEXT(R0),R2	;GET ADDRESS OF NEXT AVAILABLE SPACE
            52            51     C1  00C8 20300 	ADDL3	R1,R2,ERL$L_NEXT(R0)	;CALCULATE ADDRESS OF NEXT AVAILABLE SPACE
                       04 A0         00CB       
         04 A0         08 A0     D1  00CD 20400 	CMPL	ERL$L_END(R0),ERL$L_NEXT(R0) ;ENTRY FIT WITHIN BUFFER?
                          2E     1E  00D2 20500 	BGEQU	20$			;IF GEQU YES
         04 A0         08 A0     D0  00D4 20600 	MOVL	ERL$L_END(R0),ERL$L_NEXT(R0) ;INDICATE THAT BUFFER IS FULL
       0409'CF            02     88  00D9 20700 	BISB	#ERL$M_TIMER,W^ERL$GB_BUFFLAG ;SET TIMER ACTIVE
       040B'CF            01     90  00DE 20800 	MOVB	#1,W^ERL$GB_BUFTIM	;FORCE ERROR LOG PROCESS WAKE
       0408'CF            01     8C  00E3 20900 	XORB	#1,W^ERL$GB_BUFIND	;SWITCH TO ALTERNATE BUFFER
            50       0408'CF     9A  00E8 21000 	MOVZBL	W^ERL$GB_BUFIND,R0	;GET NEW BUFFER INDICATOR
            50       0400'CF40   D0  00ED 21100 	MOVL	W^ERL$AL_BUFADDR[R0],R0	;GET ADDRESS OF ALLOCATION BUFFER DESCRIPTOR
         04 A0            51     C1  00F3 21200 	ADDL3	R1,ERL$L_NEXT(R0),R2	;CALCULATE ADDRESS OF NEXT AVAILABLE SPACE
                          52         00F7       
            52         08 A0     D1  00F8 21300 	CMPL	ERL$L_END(R0),R2	;ENTRY FIT WITHIN BUFFER?
                          C6     1E  00FC 21400 	BGEQU	10$			;IF GEQU YES
                          50     D4  00FE 21500 	CLRL	R0			;INDICATE ALLOCATION FAILURE
                          1C     11  0100 21600 	BRB	30$			;
            62            51     3C  0102 21700 20$:	MOVZWL	R1,EMB$W_SIZE(R2)	;INITIALIZE MESSAGE HEADER
         02 A2         02 A0     90  0105 21800 	MOVB	ERL$B_BUFIND(R0),EMB$B_BUFIND(R2) ;SET RESPECTIVE BUFFER INDICATOR
                          60     96  010A 21900 	INCB	ERL$B_BUSY(R0)		;INCREMENT MESSAGE BUSY COUNT
            51       0410'CF     D0  010C 22000 	MOVL	W^ERL$GL_SEQUENCE,R1	;GET CURRENT ERROR SEQUENCE NUMBER
         06 A2       0000'CF     7D  0111 22100 	MOVQ	W^EXE$GQ_SYSTIME,EMB$Q_DV_TIME(R2) ;INSERT CURRENT TIME
         0E A2            51     B0  0117 22200 	MOVW	R1,EMB$W_DV_ERRSEQ(R2)	;INSERT ERROR SEQUENCE NUMBER
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     21-AUG-1978 19:42:54   VAX-11 MACRO X0.3-11               Page   7
02              ALLOCATE ERROR MESSAGE BUFFER                                                                                    (1)

            50            01     D0  011B 22300 	MOVL	#1,R0			;SET SUCCESS INDICATOR
                     0410'CF     D6  011E 22400 30$:	INCL	W^ERL$GL_SEQUENCE	;INCREMENT UNIVERSAL ERROR SEQUENCE NUMBER
       0409'CF            01     8A  0122 22500 	BICB	#ERL$M_LOCK,W^ERL$GB_BUFFLAG ;CLEAR ALLOCATION INTERLOCK FLAG
                                     0127 22600 40$:	ENBINT				;ENABLE INTERRUPTS
                                 05  012A 22700 	RSB				;
                                     012B 22800  
                                     012B 22900 ;
                                     012B 23000 ; RECURSIVE REENTRY AT IPL 31
                                     012B 23100 ;
                                     012B 23200  
                                 00  012B 23300 50$:	HALT				;******TEMP******
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     21-AUG-1978 19:42:54   VAX-11 MACRO X0.3-11               Page   8
02              RELEASE ERROR MESSAGE BUFFER                                                                                     (1)

                                     012C 23500 	.SBTTL	RELEASE ERROR MESSAGE BUFFER
                                     012C 23600 ;+
                                     012C 23700 ; ERL$RELEASEMB - RELEASE ERROR MESSAGE BUFFER
                                     012C 23800 ;
                                     012C 23900 ; THIS ROUTINE IS CALLED TO RELEASE AN ERROR MESSAGE BUFFER FOR PROCESSING
                                     012C 24000 ; BY THE ERROR LOG PROCESS.
                                     012C 24100 ;
                                     012C 24200 ; INPUTS:
                                     012C 24300 ;
                                     012C 24400 ;	R2 = ADDRESS OF ERROR MESSAGE BUFFER.
                                     012C 24500 ;
                                     012C 24600 ; OUTPUTS:
                                     012C 24700 ;
                                     012C 24800 ;	THE COMPLETED ERROR MESSAGE COUNT IS INCREMENTED IN THE RESPECTIVE
                                     012C 24900 ;	ALLOCATION BUFFER HEADER, THE MESSAGE IS SET VALID, AND THE BUSY
                                     012C 25000 ;	MESSAGE COUNT IS DECREMENTED IN THE RESPECTIVE ALLOCATION BUFFER
                                     012C 25100 ;	HEADER.
                                     012C 25200 ;
                                     012C 25300 ;	R3 IS PRESERVED ACROSS CALL.
                                     012C 25400 ;-
                                     012C 25500  
                                     012C 25600 ERL$RELEASEMB::				;RELEASE ERROR MESSAGE BUFFER
                       03 A2     96  012C 25700 	INCB	EMB$B_VALID(R2)		;SET MESSAGE BUFFER VALID
            50         02 A2     9A  012F 25800 	MOVZBL	EMB$B_BUFIND(R2),R0	;GET BUFFER INDICATOR OF ALLOCATION BUFFER
            50       0400'CF40   D0  0133 25900 	MOVL	W^ERL$AL_BUFADDR[R0],R0	;GET ADDRESS OF ALLOCATION BUFFER DESCRIPTOR
            60       00FF 8F     A0  0139 26000 	ADDW	#^XFF,ERL$B_BUSY(R0)	;ADJUST BUSY AND COMPLETED MESSAGE COUNT
       0409'CF            01     E3  013E 26100 	BBCS	#ERL$V_TIMER,W^ERL$GB_BUFFLAG,10$ ;IF CLR, NO TIMER RUNNING
                          0B         0143       
         01 A0            0A     91  0144 26200 	CMPB	#MAXMSG,ERL$B_MSGCNT(R0) ;MAXIMUM NUMBER OF MESSAGES EXCEEDED?
                          05     1A  0148 26300 	BGTRU	10$			;IF GTRU NO
       040B'CF            01     90  014A 26400 	MOVB	#1,W^ERL$GB_BUFTIM	;FORCE ERROR LOG PROCESS WAKE
                                 05  014F 26500 10$:	RSB				;
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     21-AUG-1978 19:42:54   VAX-11 MACRO X0.3-11               Page   9
02              WAKE ERROR LOG FORMAT PROCESS                                                                                    (1)

                                     0150 26700 	.SBTTL	WAKE ERROR LOG FORMAT PROCESS
                                     0150 26800 ;+
                                     0150 26900 ; ERL$WAKE - WAKE ERROR LOG FORMAT PROCESS
                                     0150 27000 ;
                                     0150 27100 ; THIS ROUTINE IS CALLED ONCE A SECOND WHEN THE ERROR BUFFER TIMER IS ACTIVE.
                                     0150 27200 ;
                                     0150 27300 ; INPUTS:
                                     0150 27400 ;
                                     0150 27500 ;	NONE.
                                     0150 27600 ;
                                     0150 27700 ; OUTPUTS:
                                     0150 27800 ;
                                     0150 27900 ;	THE ERROR BUFFER TIMER IS DECREMENTED AND IF THE RESULT IS ZERO THE
                                     0150 28000 ;	ERROR LOG FORMAT PROCESS IS AWAKENED.
                                     0150 28100 ;-
                                     0150 28200  
                                     0150 28300 ERL$WAKE::				;WAKE ERROR LOG FORMAT PROCESS
                     040B'CF     97  0150 28400 	DECB	W^ERL$GB_BUFTIM		;DECREMENT TIMER
                          12     12  0154 28500 	BNEQ	10$			;
       0409'CF            02     8A  0156 28600 	BICB	#ERL$M_TIMER,W^ERL$GB_BUFFLAG ;CLEAR TIMER ACTIVE FLAG
       040B'CF            1E     90  015B 28700 	MOVB	#MAXTIM,W^ERL$GB_BUFTIM	;RESET TIMER VALUE
            51       040C'CF     D0  0160 28800 	MOVL	W^ERL$GL_ERLPID,R1	;GET ERROR LOG PROCESS ID
                          FE98'  30  0165 28900 	BSBW	SCH$WAKE		;WAKE ERROR LOG PROCESS
                                 05  0168 29000 10$:	RSB				;
                                     0169 29100  
                                     0169 29200 	.END
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     21-AUG-1978 19:42:54   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (1)

BIT...         = 0000000C            DEV$V_MBX      = 00000014            EMB$K_NF       = 00000023            
BUF1             00000000 R     03   DEV$V_MNT      = 00000013            EMB$K_NM       = 0000002A            
BUF2             00000200 R     03   DEV$V_NET      = 0000000D            EMB$K_OM       = 00000029            
DDB$B_ACPCLASS   00000013            DEV$V_ODV      = 0000001B            EMB$K_SA       = 00000005            
DDB$B_TYPE       0000000A            DEV$V_RCK      = 0000001E            EMB$K_SBC      = 00000028            
DDB$C_LENGTH     00000034            DEV$V_REC      = 00000000            EMB$K_SE       = 00000006            
DDB$K_LENGTH     00000034            DEV$V_RND      = 0000001C            EMB$K_SS       = 00000027            
DDB$L_ACPD       00000010            DEV$V_RTM      = 0000001D            EMB$K_SU_LENGTH  00000014            
DDB$L_DDT        0000000C            DEV$V_SDI      = 00000004            EMB$K_TS       = 00000026            
DDB$L_LINK       00000000            DEV$V_SHR      = 00000010            EMB$K_TS_LENGTH  00000010            
DDB$L_UCB        00000004            DEV$V_SPL      = 00000006            EMB$K_UBC      = 00000070            
DDB$T_DRVNAME    00000024            DEV$V_SQD      = 00000005            EMB$K_UI       = 00000061            
DDB$T_NAME       00000014            DEV$V_SWL      = 00000019            EMB$K_VD       = 00000041            
DDB$W_SIZE       00000008            DEV$V_TRM      = 00000002            EMB$K_VM       = 00000040            
DDT$L_CANCEL     0000000C            DEV$V_WCK      = 0000001F            EMB$K_WS       = 00000024            
DDT$L_FDT        00000008            EMB$B_BUFIND     00000002            EMB$L_DV_CHAR    00000036            
DDT$L_INIT       00000018            EMB$B_DEVCLS     00000005            EMB$L_DV_MEDIA   00000026            
DDT$L_REGDUMP    00000010            EMB$B_DEVTYP     00000004            EMB$L_DV_OPCNT   0000002E            
DDT$L_START      00000000            EMB$B_DV_CLASS   0000001C            EMB$L_DV_OWNUIC  00000032            
DDT$L_UNSOLINT   00000004            EMB$B_DV_ERTCNT  00000010            EMB$L_DV_REGSAV  0000004E            
DDT$W_DIAGBUF    00000014            EMB$B_DV_ERTMAX  00000011            EMB$L_DV_RQPID   0000001E            
DDT$W_ERRORBUF   00000016            EMB$B_DV_SLAVE   0000003A            EMB$L_SU_DAYTIM  00000010            
DEV$M_ALL      = 00800000            EMB$B_DV_TYPE    0000001D            EMB$Q_DV_IOSB    00000012            
DEV$M_AVL      = 00040000            EMB$B_VALID      00000003            EMB$Q_DV_TIME    00000006            
DEV$M_CCL      = 00000002            EMB$C_AW       = 00000007            EMB$Q_HD_TIME    00000006            
DEV$M_DIR      = 00000008            EMB$C_BE       = 00000004            EMB$Q_SU_TIME    00000006            
DEV$M_DMT      = 00200000            EMB$C_CR       = 00000025            EMB$Q_TS_TIME    00000006            
DEV$M_ELG      = 00400000            EMB$C_CS       = 00000020            EMB$T_DV_NAME    0000003E            
DEV$M_FOD      = 00004000            EMB$C_DE       = 00000001            EMB$W_DV_BCNT    00000024            
DEV$M_FOR      = 01000000            EMB$C_DT       = 00000060            EMB$W_DV_BOFF    00000022            
DEV$M_GEN      = 00020000            EMB$C_HE       = 00000008            EMB$W_DV_DEVSTS  0000001A            
DEV$M_IDV      = 04000000            EMB$C_LENGTH     00000004            EMB$W_DV_ENTRY   00000004            
DEV$M_MBX      = 00100000            EMB$C_MC       = 00000002            EMB$W_DV_ERRCNT  0000002C            
DEV$M_MNT      = 00080000            EMB$C_NF       = 00000023            EMB$W_DV_ERRSEQ  0000000E            
DEV$M_NET      = 00002000            EMB$C_NM       = 0000002A            EMB$W_DV_FUNC    0000003C            
DEV$M_ODV      = 08000000            EMB$C_OM       = 00000029            EMB$W_DV_UNIT    0000002A            
DEV$M_RCK      = 40000000            EMB$C_SA       = 00000005            EMB$W_HD_ENTRY   00000004            
DEV$M_REC      = 00000001            EMB$C_SBC      = 00000028            EMB$W_HD_ERRSEQ  0000000E            
DEV$M_RND      = 10000000            EMB$C_SE       = 00000006            EMB$W_SIZE       00000000            
DEV$M_RTM      = 20000000            EMB$C_SS       = 00000027            EMB$W_SU_ENTRY   00000004            
DEV$M_SDI      = 00000010            EMB$C_SU_LENGTH  00000014            EMB$W_SU_ERRSEQ  0000000E            
DEV$M_SHR      = 00010000            EMB$C_TS       = 00000026            EMB$W_TS_ENTRY   00000004            
DEV$M_SPL      = 00000040            EMB$C_TS_LENGTH  00000010            EMB$W_TS_ERRSEQ  0000000E            
DEV$M_SQD      = 00000020            EMB$C_UBC      = 00000070            ERL$ALLOCEMB     000000AD RG    04   
DEV$M_SWL      = 02000000            EMB$C_UI       = 00000061            ERL$AL_BUFADDR   00000400 RG    03   
DEV$M_TRM      = 00000004            EMB$C_VD       = 00000041            ERL$B_BUFIND     00000002            
DEV$M_WCK      = 80000000            EMB$C_VM       = 00000040            ERL$B_BUSY       00000000            
DEV$V_ALL      = 00000017            EMB$C_WS       = 00000024            ERL$B_MSGCNT     00000001            
DEV$V_AVL      = 00000012            EMB$K_AW       = 00000007            ERL$COLDSTART    00000091 RG    04   
DEV$V_CCL      = 00000001            EMB$K_BE       = 00000004            ERL$C_LENGTH     0000000C            
DEV$V_DIR      = 00000003            EMB$K_CR       = 00000025            ERL$DEVICERR     00000000 RG    04   
DEV$V_DMT      = 00000015            EMB$K_CS       = 00000020            ERL$DEVICTMO     00000004 RG    04   
DEV$V_ELG      = 00000016            EMB$K_DE       = 00000001            ERL$GB_BUFFLAG   00000409 RG    03   
DEV$V_FOD      = 0000000E            EMB$K_DT       = 00000060            ERL$GB_BUFIND    00000408 RG    03   
DEV$V_FOR      = 00000018            EMB$K_HE       = 00000008            ERL$GB_BUFPTR    0000040A RG    03   
DEV$V_GEN      = 00000011            EMB$K_LENGTH     00000004            ERL$GB_BUFTIM    0000040B RG    03   
DEV$V_IDV      = 0000001A            EMB$K_MC       = 00000002            ERL$GL_ERLPID    0000040C RG    03   
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     21-AUG-1978 19:42:54   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (1)

ERL$GL_SEQUENCE  00000410 RG    03   IO$M_CREATE    = 00000080            IO$V_MOUNT     = 00000009            
ERL$K_LENGTH     0000000C            IO$M_CTRLCAST  = 00000100            IO$V_NOECHO    = 00000006            
ERL$L_END        00000008            IO$M_CTRLYAST  = 00000080            IO$V_NOFILTR   = 00000009            
ERL$L_NEXT       00000004            IO$M_CVTLOW    = 00000100            IO$V_NOFORMAT  = 00000008            
ERL$M_LOCK     = 00000001            IO$M_DATACHECK = 00004000            IO$V_NOW       = 00000006            
ERL$M_TIMER    = 00000002            IO$M_DELETE    = 00000100            IO$V_NOWAIT    = 00000007            
ERL$RELEASEMB    0000012C RG    04   IO$M_DMOUNT    = 00000400            IO$V_PACKED    = 00000007            
ERL$V_LOCK     = 00000000            IO$M_DSABLMBX  = 00000400            IO$V_PURGE     = 0000000B            
ERL$V_TIMER    = 00000001            IO$M_ENABLMBX  = 00000080            IO$V_READATTN  = 00000007            
ERL$WAKE         00000150 RG    04   IO$M_FCODE     = 0000003F            IO$V_REVERSE   = 00000006            
ERL$WARMSTART    00000096 RG    04   IO$M_HANGUP    = 00000200            IO$V_SHUTDOWN  = 00000007            
EXE$GQ_SYSTIME   ********   X   04   IO$M_INHERLOG  = 00000800            IO$V_STARTUP   = 00000006            
FCB$B_DIRIDX     00000048            IO$M_INHEXTGAP = 00001000            IO$V_SYNCH     = 00000009            
FCB$B_FID_NMX    00000025            IO$M_INHRETRY  = 00008000            IO$V_TIMED     = 00000007            
FCB$B_FID_RVN    00000024            IO$M_INHSEEK   = 00001000            IO$V_TRMNOECHO = 0000000C            
FCB$B_TYPE       0000000A            IO$M_INTERRUPT = 00000040            IO$V_WRTATTN   = 00000008            
FCB$C_LENGTH     00000048            IO$M_INTSKIP   = 00000100            IO$_ACCESS     = 00000032            
FCB$K_LENGTH     00000048            IO$M_MOUNT     = 00000200            IO$_ACPCONTROL = 00000038            
FCB$L_EFBLK      00000040            IO$M_NOECHO    = 00000040            IO$_CREATE     = 00000033            
FCB$L_EXFCB      0000000C            IO$M_NOFILTR   = 00000200            IO$_DEACCESS   = 00000034            
FCB$L_FCBBL      00000004            IO$M_NOFORMAT  = 00000100            IO$_DELETE     = 00000035            
FCB$L_FCBFL      00000000            IO$M_NOW       = 00000040            IO$_DIAGNOSE   = 0000001D            
FCB$L_FILEOWNER  00000038            IO$M_NOWAIT    = 00000080            IO$_DRVCLR     = 00000004            
FCB$L_FILESIZE   00000034            IO$M_PACKED    = 00000080            IO$_ERASETAPE  = 00000006            
FCB$L_HDLBN      00000030            IO$M_PURGE     = 00000800            IO$_LOGICAL    = 0000002F            
FCB$L_STLBN      0000002C            IO$M_READATTN  = 00000080            IO$_MODIFY     = 00000036            
FCB$L_STVBN      00000028            IO$M_REVERSE   = 00000040            IO$_MOUNT      = 00000039            
FCB$L_WLBL       00000014            IO$M_SHUTDOWN  = 00000080            IO$_NOP        = 00000000            
FCB$L_WLFL       00000010            IO$M_STARTUP   = 00000040            IO$_OFFSET     = 00000006            
FCB$V_BADBLK   = 00000002            IO$M_SYNCH     = 00000200            IO$_PACKACK    = 00000008            
FCB$V_DIR      = 00000000            IO$M_TIMED     = 00000080            IO$_PHYSICAL   = 0000001F            
FCB$V_EXCL     = 00000003            IO$M_TRMNOECHO = 00001000            IO$_READHEAD   = 0000000E            
FCB$V_MARKDEL  = 00000001            IO$M_WRTATTN   = 00000100            IO$_READLBLK   = 00000021            
FCB$V_SPOOL    = 00000004            IO$S_FCODE     = 00000006            IO$_READPBLK   = 0000000C            
FCB$W_ACNT       00000018            IO$V_ABORT     = 00000008            IO$_READPRESET = 00000019            
FCB$W_AMOD       0000003E            IO$V_ACCESS    = 00000006            IO$_READPROMPT = 00000037            
FCB$W_DIRSEQ     00000044            IO$V_ATTNAST   = 00000008            IO$_READTRACKD = 00000010            
FCB$W_FID        00000020            IO$V_BINARY    = 00000006            IO$_READVBLK   = 00000031            
FCB$W_FID_NUM    00000020            IO$V_CANCTRLO  = 00000006            IO$_RECAL      = 00000003            
FCB$W_FID_RVN    00000024            IO$V_COMMOD    = 00000006            IO$_RELEASE    = 00000005            
FCB$W_FID_SEQ    00000022            IO$V_CREATE    = 00000007            IO$_RETCENTER  = 00000007            
FCB$W_FILEPROT   0000003C            IO$V_CTRLCAST  = 00000008            IO$_REWIND     = 00000024            
FCB$W_LCNT       0000001A            IO$V_CTRLYAST  = 00000007            IO$_REWINDOFF  = 00000022            
FCB$W_SEGN       00000026            IO$V_CVTLOW    = 00000008            IO$_SEARCH     = 00000009            
FCB$W_SIZE       00000008            IO$V_DATACHECK = 0000000E            IO$_SEEK       = 00000002            
FCB$W_STATUS     0000001E            IO$V_DELETE    = 00000008            IO$_SENSECHAR  = 0000001B            
FCB$W_TCNT       00000046            IO$V_DMOUNT    = 0000000A            IO$_SENSEMODE  = 00000027            
FCB$W_UICGROUP   0000003A            IO$V_DSABLMBX  = 0000000A            IO$_SETCHAR    = 0000001A            
FCB$W_UICMEMBER  00000038            IO$V_ENABLMBX  = 00000007            IO$_SETMODE    = 00000023            
FCB$W_WCNT       0000001C            IO$V_FCODE     = 00000000            IO$_SKIPFILE   = 00000025            
GBL...         = 00000000            IO$V_HANGUP    = 00000009            IO$_SKIPRECORD = 00000026            
IO$M_ABORT     = 00000100            IO$V_INHERLOG  = 0000000B            IO$_SPACEFILE  = 00000002            
IO$M_ACCESS    = 00000040            IO$V_INHEXTGAP = 0000000C            IO$_SPACERECORD= 00000009            
IO$M_ATTNAST   = 00000100            IO$V_INHRETRY  = 0000000F            IO$_STARTSPNDL = 00000019            
IO$M_BINARY    = 00000040            IO$V_INHSEEK   = 0000000C            IO$_UNLOAD     = 00000001            
IO$M_CANCTRLO  = 00000040            IO$V_INTERRUPT = 00000006            IO$_VIRTUAL    = 0000003F            
IO$M_COMMOD    = 00000040            IO$V_INTSKIP   = 00000008            IO$_WRITECHECK = 0000000A            
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     21-AUG-1978 19:42:54   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (1)

IO$_WRITECHECKH= 00000018            IRP$V_PRIVIO   = 00000009            UCB$B_CEX        00000077            
IO$_WRITEHEAD  = 0000000D            IRP$V_SWAPIO   = 00000006            UCB$B_CM1        0000004A            
IO$_WRITELBLK  = 00000020            IRP$V_VIRTUAL  = 00000004            UCB$B_CM2        0000004B            
IO$_WRITEMARK  = 0000001C            IRP$W_ABCNT      0000003C            UCB$B_DEVCLASS   00000038            
IO$_WRITEOF    = 00000028            IRP$W_BCNT       00000032            UCB$B_DEVTYPE    00000039            
IO$_WRITEPBLK  = 0000000B            IRP$W_BOFF       00000030            UCB$B_DIPL       00000052            
IO$_WRITETRACKD= 0000000F            IRP$W_CHAN       00000028            UCB$B_DX_SCTCNT  000000A6            
IO$_WRITEVBLK  = 00000030            IRP$W_FUNC       00000020            UCB$B_ERTCNT     00000070            
IRP$B_CARCON     00000038            IRP$W_OBCNT      0000003E            UCB$B_ERTMAX     00000071            
IRP$B_EFN        00000022            IRP$W_SIZE       00000008            UCB$B_ESCAPE     0000004B            
IRP$B_PRI        00000023            IRP$W_STS        0000002A            UCB$B_FEX        00000076            
IRP$B_RMOD       0000000B            IRP$W_TT_PRMPT   0000003C            UCB$B_FIPL       0000000B            
IRP$B_TYPE       0000000A            MAXMSG         = 0000000A            UCB$B_LOCSRV     0000003C            
IRP$C_LENGTH     0000004C            MAXTIM         = 0000001E            UCB$B_OFFNDX     00000094            
IRP$K_LENGTH     0000004C            PR$_ACCR       = 00000029            UCB$B_OFFRTC     00000095            
IRP$L_AST        00000010            PR$_ACCS       = 00000028            UCB$B_REMSRV     0000003D            
IRP$L_ASTPRM     00000014            PR$_ASTLVL     = 00000013            UCB$B_SECTORS    0000003C            
IRP$L_DIAGBUF    00000044            PR$_ESP        = 00000001            UCB$B_SLAVE      00000074            
IRP$L_IOQBL      00000004            PR$_ICCS       = 00000018            UCB$B_SPR        00000075            
IRP$L_IOQFL      00000000            PR$_ICR        = 0000001A            UCB$B_STATE      00000052            
IRP$L_IOSB       00000024            PR$_IPL        = 00000012            UCB$B_TRACKS     0000003D            
IRP$L_IOST1      00000034            PR$_ISP        = 00000004            UCB$B_TYPE       0000000A            
IRP$L_IOST2      00000038            PR$_KSP        = 00000000            UCB$B_VERTSZ     0000003F            
IRP$L_MEDIA      00000034            PR$_MAPEN      = 00000038            UCB$C_LENGTH     00000074            
IRP$L_PID        0000000C            PR$_NICR       = 00000019            UCB$C_LOGLNK   = 00000001            
IRP$L_SEGVBN     00000040            PR$_P0BR       = 00000008            UCB$K_LENGTH     00000074            
IRP$L_SEQNUM     00000048            PR$_P0LR       = 00000009            UCB$L_AMB        00000054            
IRP$L_SVAPTE     0000002C            PR$_P1BR       = 0000000A            UCB$L_ASTQBL     00000010            
IRP$L_TT_TERM    00000038            PR$_P1LR       = 0000000B            UCB$L_ASTQFL     0000000C            
IRP$L_UCB        0000001C            PR$_PCBB       = 00000010            UCB$L_CPID       0000005C            
IRP$L_WIND       00000018            PR$_PME        = 0000003D            UCB$L_CRB        00000020            
IRP$M_BUFIO    = 00000001            PR$_RXCS       = 00000020            UCB$L_DDB        00000024            
IRP$M_CHAINED  = 00000020            PR$_RXDB       = 00000021            UCB$L_DEVCHAR    00000034            
IRP$M_COMPLX   = 00000008            PR$_SBIER      = 00000034            UCB$L_DEVDEPEND  0000003C            
IRP$M_DIAGBUF  = 00000080            PR$_SBIFS      = 00000030            UCB$L_DPC        00000080            
IRP$M_FUNC     = 00000002            PR$_SBIMT      = 00000033            UCB$L_DUETIM     0000005C            
IRP$M_MBXIO    = 00000400            PR$_SBIQC      = 00000036            UCB$L_DX_BFPNT   0000009C            
IRP$M_PAGIO    = 00000004            PR$_SBIS       = 00000031            UCB$L_DX_BUF     00000098            
IRP$M_PHYSIO   = 00000100            PR$_SBISC      = 00000032            UCB$L_DX_RXDB    000000A0            
IRP$M_PRIVIO   = 00000200            PR$_SBITA      = 00000035            UCB$L_EMB        00000078            
IRP$M_SWAPIO   = 00000040            PR$_SBR        = 0000000C            UCB$L_FIRST      00000014            
IRP$M_VIRTUAL  = 00000010            PR$_SCBB       = 00000011            UCB$L_FPC        0000000C            
IRP$Q_NT_PRVMSK  0000003C            PR$_SID        = 0000003E            UCB$L_FQBL       00000004            
IRP$S_FCODE    = 00000006            PR$_SIRR       = 00000014            UCB$L_FQFL       00000000            
IRP$S_FMOD     = 0000000A            PR$_SISR       = 00000015            UCB$L_FR3        00000010            
IRP$S_MODE     = 00000002            PR$_SLR        = 0000000D            UCB$L_FR4        00000014            
IRP$V_BUFIO    = 00000000            PR$_SSP        = 00000002            UCB$L_IOQBL      00000044            
IRP$V_CHAINED  = 00000005            PR$_TBIA       = 00000039            UCB$L_IOQFL      00000040            
IRP$V_COMPLX   = 00000003            PR$_TBIS       = 0000003A            UCB$L_IRP        0000004C            
IRP$V_DIAGBUF  = 00000007            PR$_TODR       = 0000001B            UCB$L_LINK       0000002C            
IRP$V_FCODE    = 00000000            PR$_TXCS       = 00000022            UCB$L_LOGADR     00000064            
IRP$V_FMOD     = 00000006            PR$_TXDB       = 00000023            UCB$L_MAXBLOCK   00000084            
IRP$V_FUNC     = 00000001            PR$_USP        = 00000003            UCB$L_MEDIA      0000008C            
IRP$V_MBXIO    = 0000000A            PR$_WCSA       = 0000002C            UCB$L_NT_DATSSB  00000074            
IRP$V_MODE     = 00000000            PR$_WCSD       = 0000002D            UCB$L_NT_INTSSB  00000078            
IRP$V_PAGIO    = 00000002            SCH$WAKE         ********   X   04   UCB$L_OPCNT      00000060            
IRP$V_PHYSIO   = 00000008            UCB$B_AMOD       00000053            UCB$L_OWNUIC     0000001C            
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     21-AUG-1978 19:42:54   VAX-11 MACRO X0.3-11               Page  13
SYMBOL TABLE                                                                                                                     (1)

UCB$L_PID        00000028            UCB$V_ONLINE   = 00000004            WCB$M_READ     = 00000001            
UCB$L_RQBL       00000004            UCB$V_POWER    = 00000005            WCB$M_SHRWCB   = 00000008            
UCB$L_RQFL       00000000            UCB$V_PRMMBX   = 00000000            WCB$M_WRITE    = 00000002            
UCB$L_SVAPTE     00000068            UCB$V_SEGFLO   = 00000002            WCB$V_DLOCK    = 00000001            
UCB$L_SVPN       00000064            UCB$V_TIM      = 00000000            WCB$V_NOREAD   = 0000000A            
UCB$L_TTCHAR     0000003C            UCB$V_TIMOUT   = 00000006            WCB$V_NOTFCP   = 00000002            
UCB$L_VCB        00000030            UCB$V_TT_NOTIF = 00000002            WCB$V_NOTRUNC  = 0000000B            
UCB$M_BACKP    = 00000020            UCB$V_TT_TIMO  = 00000001            WCB$V_NOWRITE  = 00000000            
UCB$M_BSY      = 00000100            UCB$V_UNLOAD   = 0000000C            WCB$V_READ     = 00000000            
UCB$M_CANCEL   = 00000008            UCB$V_VALID    = 0000000B            WCB$V_READCK   = 00000009            
UCB$M_DEADMO   = 00000400            UCB$W_BCNT       0000006E            WCB$V_SEQONLY  = 00000006            
UCB$M_DELMBX   = 00000002            UCB$W_BCR        00000096            WCB$V_SHRWCB   = 00000003            
UCB$M_DIAGBUF  = 00000002            UCB$W_BOFF       0000006C            WCB$V_SPOOL    = 00000004            
UCB$M_DX_WRITE = 00000008            UCB$W_BUFQUO     00000018            WCB$V_WRITE    = 00000001            
UCB$M_ECC      = 00000001            UCB$W_BYTESTOGO  0000003E            WCB$V_WRITEAC  = 00000008            
UCB$M_ERLOGIP  = 00000004            UCB$W_CHARGE     0000004A            WCB$V_WRITECK  = 00000005            
UCB$M_INT      = 00000002            UCB$W_CYLINDERS  0000003E            WCB$W_ACON       00000014            
UCB$M_INTTYPE  = 00000080            UCB$W_DA         0000008C            WCB$W_COUNT      00000000            
UCB$M_JOB      = 00000001            UCB$W_DC         0000008E            WCB$W_NMAP       00000016            
UCB$M_MOUNTING = 00000200            UCB$W_DEVBUFSIZ  0000003A            WCB$W_P1_COUNT   00000024            
UCB$M_NOCNVRT  = 00000004            UCB$W_DEVSTS     0000005A            WCB$W_P2_COUNT   0000002A            
UCB$M_NT_BFROVF= 00000004            UCB$W_DIRSEQ     00000088            WCB$W_PREVCOUNT  FFFFFFFA            
UCB$M_NT_BREAK = 00000020            UCB$W_DSTADDR    00000018            WCB$W_REFCNT     0000000E            
UCB$M_NT_NAME  = 00000010            UCB$W_DX_BCR     000000A4            WCB$W_SIZE       00000008            
UCB$M_ONLINE   = 00000010            UCB$W_EC1        00000090            
UCB$M_POWER    = 00000020            UCB$W_EC2        00000092            
UCB$M_PRMMBX   = 00000001            UCB$W_ERRCNT     00000072            
UCB$M_TIM      = 00000001            UCB$W_FUNC       0000007E            
UCB$M_TIMOUT   = 00000040            UCB$W_MB_SEED    FFFFFFFC            
UCB$M_TT_NOTIF = 00000004            UCB$W_MSGCNT     00000016            
UCB$M_TT_TIMO  = 00000002            UCB$W_MSGMAX     00000014            
UCB$M_UNLOAD   = 00001000            UCB$W_NT_CHAN    0000007C            
UCB$M_VALID    = 00000800            UCB$W_OFFSET     0000008A            
UCB$S_LNKPRI   = 00000002            UCB$W_REFC       00000050            
UCB$S_LTYPE    = 00000002            UCB$W_SIZE       00000008            
UCB$T_PARTNER    0000000C            UCB$W_SRCADDR    0000001A            
UCB$V_BACKP    = 00000005            UCB$W_STS        00000058            
UCB$V_BSY      = 00000008            UCB$W_UNIT       00000048            
UCB$V_CANCEL   = 00000003            UCB$W_VPROT      0000001A            
UCB$V_DEADMO   = 0000000A            WCB$B_ACCESS     0000000B            
UCB$V_DELMBX   = 00000001            WCB$B_TYPE       0000000A            
UCB$V_DIAGBUF  = 00000001            WCB$C_LENGTH     00000024            
UCB$V_DX_WRITE = 00000003            WCB$C_MAP        00000024            
UCB$V_ECC      = 00000000            WCB$K_LENGTH     00000024            
UCB$V_ERLOGIP  = 00000002            WCB$K_MAP        00000024            
UCB$V_INT      = 00000001            WCB$L_FCB        00000018            
UCB$V_INTTYPE  = 00000007            WCB$L_LBN        00000002            
UCB$V_JOB      = 00000000            WCB$L_ORGUCB     00000010            
UCB$V_LNKPRI   = 00000006            WCB$L_P1_LBN     00000026            
UCB$V_LTYPE    = 00000000            WCB$L_P2_LBN     0000002C            
UCB$V_MOUNTING = 00000009            WCB$L_PID        0000000C            
UCB$V_MSGACK   = 00000004            WCB$L_PREVLBN    FFFFFFFC            
UCB$V_MSGFLO   = 00000003            WCB$L_RVT        0000001C            
UCB$V_NOCNVRT  = 00000002            WCB$L_STVBN      00000020            
UCB$V_NT_BFROVF= 00000002            WCB$L_WLBL       00000004            
UCB$V_NT_BREAK = 00000005            WCB$L_WLFL       00000000            
UCB$V_NT_NAME  = 00000004            WCB$M_NOTFCP   = 00000004            
ERRORLOG        - ERROR LOG SUPPORT ROUTINES                     21-AUG-1978 19:42:54   VAX-11 MACRO X0.3-11               Page  14
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFE      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$$$260           00000414      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT QUAD  
WIONONPAGED      00000169      04     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  


THERE WERE NO ERRORS OR WARNINGS.
8238. BYTES LEFT IN FREE MEMORY POOL.
3436. BYTES OF RECLAIMED MEMORY.
OBJ$:ERRORLOG,LIS$:ERRORLOG/-SP=EXECML$/ML,SRC$:ERRORLOG
10 MLB DIR RDS - 1012 GETS TO DEFINE 27 MACROS. 73 INTER. FILE WRITES. 
