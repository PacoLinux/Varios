SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 20:36:15   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)      73  CREATE LOGICAL NAME
   (1)     173  DELETE LOGICAL NAME
   (1)     254  CHECK TABLE NUMBER AND PRIVILEGES
   (1)     287  TRANSLATE LOGICAL NAME
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 20:36:15   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	SYSLOGNAM - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES
                                     0000     2 	.IDENT	/01/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; D. N. CUTLER 10-OCT-76
                                     0000    24 ;
                                     0000    25 ; SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES
                                     0000    26 ;
                                     0000    27 ;	CREATE LOGICAL NAME
                                     0000    28 ;	DELETE LOGICAL NAME
                                     0000    29 ;	TRANSLATE LOGICAL NAME
                                     0000    30 ;
                                     0000    31 ; MACRO LIBRARY CALLS
                                     0000    32 ;
                                     0000    33  
                                     0000    34 	$DYNDEF				;DEFINE DATA STRUCTURE TYPE CODES
                                     0000    35 	$IPLDEF				;DEFINE INTERRUPT PRIORITY LEVELS
                                     0000    36 	$LOGDEF				;DEFINE LOG OFFSETS
                                     0000    37 	$PCBDEF				;DEFINE PCB OFFSETS
                                     0000    38 	$PRVDEF				;DEFINE PRIVILEGE BITS
                                     0000    39 	$PSLDEF				;DEFINE PROCESSOR STATUS FIELDS
                                     0000    40 	$SSDEF				;DEFINE SYSTEM STATUS VALUES
                                     0000    41 	$UCBDEF				;DEFINE UCB OFFSETS
                                     0000    42  
                                     0000    43 ;
                                     0000    44 ; LOCAL SYMBOLS
                                     0000    45 ;
                                     0000    46 ; ARGUMENT LIST OFFSET DEFINITIONS FOR CREATE LOGICAL NAME
                                     0000    47 ;
                                     0000    48  
                           00000004  0000    49 TBLFLG=4				;LOGICAL NAME TABLE NUMBER
                           00000008  0000    50 LOGNAM=8				;ADDRESS OF LOGICAL NAME STRING DESCRIPTOR
                           0000000C  0000    51 EQLNAM=12				;ADDRESS OF EQUIVALENCE NAME STRING DESCRIPTOR
                           00000010  0000    52 CRACMODE=16				;ACCESS MODE
                                     0000    53  
                                     0000    54 ;
                                     0000    55 ; ARGUMENT LIST OFFSET DEFINITIONS FOR DELETE LOGICAL NAME
                                     0000    56 ;
                                     0000    57  
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 20:36:15   VAX-11 MACRO X0.3-11               Page   2
01                                                                                                                               (1)

                           00000004  0000    58 TBLFLG=4				;LOGICAL NAME TABLE NUMBER
                           00000008  0000    59 LOGNAM=8				;ADDRESS OF LOGICAL NAME STRING DESCRIPTOR
                           0000000C  0000    60 DLACMODE=12				;ACCESS MODE
                                     0000    61  
                                     0000    62 ;
                                     0000    63 ; ARGUMENT LIST OFFSET DEFINITIONS FOR TRANSLATE LOGICAL NAME
                                     0000    64 ;
                                     0000    65  
                           00000004  0000    66 TRLOGNAM=4				;ADDRESS OF LOGICAL NAME STRING DESCRIPTOR
                           00000008  0000    67 RSLLEN=8				;ADDRESS TO STORE LENGTH OF RESULT STRING
                           0000000C  0000    68 RSLBUF=12				;ADDRESS OF RESULT BUFFER DESCRIPTOR
                           00000010  0000    69 TABLE=16				;ADDRESS TO STORE TRANSLATION TABLE NUMBER
                           00000014  0000    70 TRACMODE=20				;ADDRESS TO STORE ASSIGNMENT ACCESS MODE
                           00000018  0000    71 DSBMSK=24				;TABLE SEARCH DISABLE MASK
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 20:36:15   VAX-11 MACRO X0.3-11               Page   3
01              CREATE LOGICAL NAME                                                                                              (1)

                                     0000    73 	.SBTTL	CREATE LOGICAL NAME
                                     0000    74 ;+
                                     0000    75 ; EXE$CRELOG - CREATE LOGICAL NAME
                                     0000    76 ;
                                     0000    77 ; THIS SERVICE PROVIDES THE CAPABILITY TO INSERT A LOGICAL NAME EQUIVALENCE
                                     0000    78 ; INTO EITHER THE PROCESS, GROUP, OR SYSTEM LOGICAL NAME TABLE. IF THE LOG-
                                     0000    79 ; ICAL NAME ALREADY EXISTS IN THE RESPECTIVE TABLE, THEN THE NEW ENTRY SUPER-
                                     0000    80 ; SEDES THE OLD.
                                     0000    81 ;
                                     0000    82 ; INPUTS:
                                     0000    83 ;
                                     0000    84 ;	TBLFLG(AP) = LOGICAL NAME TABLE NUMBER.
                                     0000    85 ;	LOGNAM(AP) = ADDRESS OF LOGICAL NAME STRING DESCRIPTOR.
                                     0000    86 ;	EQLNAM(AP) = ADDRESS OF EQUIVALENCE NAME STRING DESCRIPTOR.
                                     0000    87 ;	CRACMODE(AP) = ACCESS MODE OF LOGICAL NAME TO BE CREATED.
                                     0000    88 ;
                                     0000    89 ;	R4 = CURRENT PROCESS PCB ADDRESS.
                                     0000    90 ;
                                     0000    91 ; OUTPUTS:
                                     0000    92 ;
                                     0000    93 ;	R0 LOW BIT CLEAR INDICATES FAILURE TO CREATE LOGICAL NAME TABLE ENTRY.
                                     0000    94 ;
                                     0000    95 ;		R0 = SS$_ACCVIO - LOGICAL NAME STRING, LOGICAL NAME STRING
                                     0000    96 ;			DESCRIPTOR, EQUIVALENCE NAME STRING, OR EQUIVALENCE
                                     0000    97 ;			NAME STRING DESCRIPTOR CANNOT BE READ BY CALLING
                                     0000    98 ;			ACCESS MODE.
                                     0000    99 ;
                                     0000   100 ;		R0 = SS$_INSFMEM - SUFFICIENT SYSTEM DYNAMIC MEMORY DOES NOT
                                     0000   101 ;			EXIST TO ALLOCATE LOGICAL NAME TABLE ENTRY AND
                                     0000   102 ;			IMPLICIT RESOURCE WAIT IS NOT ENABLED.
                                     0000   103 ;
                                     0000   104 ;		R0 = SS$_IVLOGNAM - ZERO OR GREATER THAN MAXIMUM LENGTH
                                     0000   105 ;			LOGICAL OR EQUIVALENCE NAME STRING SPECIFIED.
                                     0000   106 ;
                                     0000   107 ;		R0 = SS$_IVLOGTAB - INVALID LOGICAL NAME TABLE NUMBER
                                     0000   108 ;			SPECIFIED.
                                     0000   109 ;
                                     0000   110 ;		R0 = SS$_NOPRIV - PROCESS DOES NOT HAVE PRIVILEGE TO CREATE
                                     0000   111 ;			ENTRY IN SPECIFIED LOGICAL NAME TABLE.
                                     0000   112 ;
                                     0000   113 ;	R0 LOW BIT SET INDICATES SUCCESSFUL COMPLETION.
                                     0000   114 ;
                                     0000   115 ;		R0 = SS$_NORMAL - NORMAL COMPLETION, NEW ENTRY ENTERED IN
                                     0000   116 ;			SPECIFIED LOGICAL NAME TABLE.
                                     0000   117 ;
                                     0000   118 ;		R0 = SS$_SUPERSEDE - NORMAL COMPLETION, NEW ENTRY SUPERSEDED
                                     0000   119 ;			PREVIOUS ENTRY IN SPECIFIED LOGICAL NAME TABLE.
                                     0000   120 ;-
                                     0000   121  
                                 00000000   122 	.PSECT	Y$EXEPAGED
                               01FC' 0000   123 	.ENTRY	EXE$CRELOG,^M<R2,R3,R4,R5,R6,R7,R8>
            02            00     EF  0002   124 	EXTZV	#0,#2,CRACMODE(AP),R0	;GET SPECIFIED ACCESS MODE
            50         10 AC         0005       
                          00FB   30  0008   125 	BSBW	CHECKTABLE		;CHECK TABLE NUMBER AND PRIVILEGE
                          50     D5  000B   126 	TSTL	R0			;LOGICAL NAME SPECIFIED?
                          79     13  000D   127 	BEQL	20$			;IF EQL NO
            57         0C AC     D0  000F   128 	MOVL	EQLNAM(AP),R7		;GET ADDRESS OF EQUIVALENCE NAME STRING DESCRIPTOR
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 20:36:15   VAX-11 MACRO X0.3-11               Page   4
01              CREATE LOGICAL NAME                                                                                              (1)

                                     0013   129 	IFNORD	#8,(R7),30$		;CAN EQUIVALENCE NAME STRING DESCRIPTOR BE READ?
            56            67     3C  0019   130 	MOVZWL	(R7),R6			;GET LENGTH OF EQUIVALENCE NAME STRING
                          6A     13  001C   131 	BEQL	20$			;IF EQL INVALID LOGICAL NAME STRING
            3F            56     B1  001E   132 	CMPW	R6,#LOG$C_NAMLENGTH-1	;LEGAL NAME STRING LENGTH?
                          65     1A  0021   133 	BGTRU	20$			;IF GTRU NO
            57         04 A7     D0  0023   134 	MOVL	4(R7),R7		;GET ADDRESS OF EQUIVALENCE NAME STRING
                                     0027   135 	IFNORD	R6,(R7),30$		;CAN EQUIVALENCE NAME STRING BE READ?
                          0B     BB  002D   136 	PUSHR	#^M<R0,R1,R3>		;SAVE LOGICAL NAME PARAMETERS
            51         1D A046   9E  002F   137 	MOVAB	LOG$C_LENGTH+2+7(R0)[R6],R1 ;CALCULATE SIZE OF LOGICAL NAME ENTRY
            51            07     CA  0034   138 	BICL	#7,R1			;TRUNCATE TO QUADWORD MULTIPLE
                 00000000'EF     9F  0037   139 	PUSHAB	L^EXE$ALOPAGED		;ASSUME SYSTEM OF GROUP NAME
            53            01     E1  003D   140 	BBC	#1,R3,10$		;IF CLR, SYSTEM OR GROUP TABLE
                          0E         0040       
            6E   00000000'EF     9E  0041   141 	MOVAB	L^EXE$ALLOCATE,(SP)	;SET ADDRESS OF ALLOCATION ROUTINE
            53   00000000'9F     9E  0048   142 	MOVAB	@#CTL$GQ_ALLOCREG,R3	;GET ADDRESS OF ALLOCATION LISTHEAD
                                     004F   143 10$:	SETIPL	S^#IPL$_ASTDEL		;RAISE TO AST DELIVERY LEVEL
                          9E     16  0052   144 	JSB	@(SP)+			;ALLOCATE LOGICAL NAME BLOCK
            37            50     E9  0054   145 	BLBC	R0,40$			;IF LBC ALLOCATION FAILURE
                                     0057   146  
                                     0057   147 ;
                                     0057   148 ; FILL OUT LOGICAL NAME BLOCK
                                     0057   149 ;
                                     0057   150  
         08 A2            51     B0  0057   151 	MOVW	R1,LOG$W_SIZE(R2)	;INSERT SIZE OF BLOCK ALLOCATED
                          0B     BA  005B   152 	POPR	#^M<R0,R1,R3>		;RETRIEVE LOGICAL NAME STRING PARAMETERS
            55            52     D0  005D   153 	MOVL	R2,R5			;SAVE ADDRESS OF LOGICAL NAME BLOCK
                          30     BB  0060   154 	PUSHR	#^M<R4,R5>		;SAVE REGISTERS
            52            0A     C0  0062   155 	ADDL	#LOG$B_TYPE,R2		;POINT TO BLOCK TYPE
            82            0B     90  0065   156 	MOVB	#DYN$C_LOG,(R2)+	;SET DATA STRUCTURE TYPE
            82            53     90  0068   157 	MOVB	R3,(R2)+		;SET NAME TABLE NUMBER
            82         22 A4     B0  006B   158 	MOVW	PCB$L_UIC+2(R4),(R2)+	;INSERT CREATOR GROUP
            82            58     9B  006F   159 	MOVZBW	R8,(R2)+		;INSERT CREATION ACCESS MODE
                          82     D4  0072   160 	CLRL	(R2)+			;CLEAR MAILBOX UCB ADDRESS
            82            50     90  0074   161 	MOVB	R0,(R2)+		;SET LENGTH OF LOGICAL NAME STRING
            61            50     28  0077   162 	MOVC	R0,(R1),(R2)		;INSERT LOGICAL NAME STRING
                          62         007A       
            83            56     90  007B   163 	MOVB	R6,(R3)+		;SET LENGTH OF EQUIVALENCE NAME STRING
            67            56     28  007E   164 	MOVC	R6,(R7),(R3)		;INSERT EQUIVALENCE NAME STRING
                          63         0081       
                          30     BA  0082   165 	POPR	#^M<R4,R5>		;RESTORE REGISTERS
                          FF79'  30  0084   166 	BSBW	LOG$INSLOGN		;INSERT LOGICAL NAME BLOCK IN TABLE
                                 04  0087   167 	RET				;
                          00C3   31  0088   168 20$:	BRW	IVLOGN			;
                          00C6   31  008B   169 30$:	BRW	ACCVIO			;
            50       0124 8F     3C  008E   170 40$:	MOVZWL	#SS$_INSFMEM,R0		;SET INSUFFICIENT MEMORY
                                 04  0093   171 	RET				;
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 20:36:15   VAX-11 MACRO X0.3-11               Page   5
01              DELETE LOGICAL NAME                                                                                              (1)

                                     0094   173 	.SBTTL	DELETE LOGICAL NAME
                                     0094   174 ;+
                                     0094   175 ; EXE$DELLOG - DELETE LOGICAL NAME
                                     0094   176 ;
                                     0094   177 ; THIS SERVICE PROVIDES THE CAPABILITY TO DELETE A PREVIOUSLY CREATED LOG-
                                     0094   178 ; ICAL NAME EQUIVALENCE FROM EITHER THE PROCESS, GROUP, OR SYSTEM LOGICAL
                                     0094   179 ; NAME TABLE.
                                     0094   180 ;
                                     0094   181 ; INPUTS:
                                     0094   182 ;
                                     0094   183 ;	TBLFLG(AP) = LOGICAL NAME TABLE NUMBER.
                                     0094   184 ;	LOGNAM(AP) = ADDRESS OF LOGICAL NAME STRING DESCRIPTOR. ZERO
                                     0094   185 ;		IMPLIES ALL.
                                     0094   186 ;	DLACMODE(AP) = ACCESS MODE OF LOGICAL NAME TO BE DELETED.
                                     0094   187 ;
                                     0094   188 ;	R4 = CURRENT PROCESS PCB ADDRESS.
                                     0094   189 ;
                                     0094   190 ; OUTPUTS:
                                     0094   191 ;
                                     0094   192 ;	R0 LOW BIT CLEAR INDICATES FAILURE TO DELETE LOGICAL NAME TABLE ENTRY.
                                     0094   193 ;
                                     0094   194 ;		R0 = SS$_ACCVIO - LOGICAL NAME STRING OR LOGICAL NAME STRING
                                     0094   195 ;			DESCRIPTOR CANNOT BE READ BY CALLING ACCESS MODE.
                                     0094   196 ;
                                     0094   197 ;		R0 = SS$_IVLOGNAM - ZERO OR GREATER THAN MAXIMUM LENGTH
                                     0094   198 ;			LOGICAL NAME STRING SPECIFIED.
                                     0094   199 ;
                                     0094   200 ;		R0 = SS$_IVLOGTAB - INVALID LOGICAL NAME TABLE NUMBER SPECIFIED.
                                     0094   201 ;
                                     0094   202 ;		R0 = SS$_NOLOGNAM - LOGICAL NAME DOES NOT EXIST IN SPECIFIED
                                     0094   203 ;			LOGICAL NAME TABLE OR LOGICAL NAME EXISTS IN PROCESS
                                     0094   204 ;			TABLE BUT WAS ENTERED FROM A MORE PRIVILEGED ACCESS
                                     0094   205 ;			MODE.
                                     0094   206 ;
                                     0094   207 ;		R0 = SS$_NOPRIV - PROCESS DOES NOT HAVE PRIVILEGE TO DELETE
                                     0094   208 ;			ENTRY FROM SPECIFIED LOGICAL NAME TABLE.
                                     0094   209 ;
                                     0094   210 ;	R0 LOW BIT SET INDICATES SUCCESSFUL COMPLETION.
                                     0094   211 ;
                                     0094   212 ;		R0 = SS$_NORMAL - NORMAL COMPLETION.
                                     0094   213 ;-
                                     0094   214  
                               01FC' 0094   215 	.ENTRY	EXE$DELLOG,^M<R2,R3,R4,R5,R6,R7,R8>
            02            00     EF  0096   216 	EXTZV	#0,#2,DLACMODE(AP),R0	;GET SPECIFIED ACCESS MODE
            50         0C AC         0099       
                          68     10  009C   217 	BSBB	CHECKTABLE		;CHECK TABLE NUMBER AND PRIVILEGES
            55            50     7D  009E   218 	MOVQ	R0,R5			;SAVE LOGICAL NAME STRING PARAMETERS
            57            53     D0  00A1   219 	MOVL	R3,R7			;SAVE LOGICAL NAME TABLE NUMBER
                          FF59'  30  00A4   220 	BSBW	LOG$LOCKW		;LOCK NAME TABLE FOR WRITE
            52   00000000'EF47   D0  00A7   221 10$:	MOVL	L^LOG$AL_LOGTBL[R7],R2	;GET ADDRESS OF NAME TABLE LISTHEAD
                          55     D5  00AF   222 	TSTL	R5			;DELETE ALL LOGICAL NAME TABLE ENTRIES?
                          23     12  00B1   223 	BNEQ	40$			;IF NEQ NO
            51            52     D0  00B3   224 	MOVL	R2,R1			;MAKE WORKING COPY OF LINK
            51            61     D0  00B6   225 20$:	MOVL	LOG$L_LTFL(R1),R1	;GET ADDRESS OF NEXT ENTRY IN NAME TABLE
            52            51     D1  00B9   226 	CMPL	R1,R2			;END OF NAME TABLE?
                          3A     13  00BC   227 	BEQL	80$			;IF EQL YES
            57            01     E1  00BE   228 	BBC	#1,R7,30$		;IF CLR, GROUP OR SYSTEM TABLE
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 20:36:15   VAX-11 MACRO X0.3-11               Page   6
01              DELETE LOGICAL NAME                                                                                              (1)

                          08         00C1       
         0E A1            58     91  00C2   229 	CMPB	R8,LOG$B_AMOD(R1)	;CAN ENTRY BE DELETED?
                          EE     14  00C6   230 	BGTR	20$			;IF GTR NO
                          27     11  00C8   231 	BRB	50$			;
            24            57     E9  00CA   232 30$:	BLBC	R7,50$			;IF LBC SYSTEM NAME TABLE
         0C A1         22 A4     B1  00CD   233 	CMPW	PCB$W_GRP(R4),LOG$W_GROUP(R1) ;GROUP NUMBERS MATCH?
                          E2     12  00D2   234 	BNEQ	20$			;IF NEQ NO
                          1B     11  00D4   235 	BRB	50$			;
            50            55     7D  00D6   236 40$:	MOVQ	R5,R0			;RETRIEVE LOGICAL NAME STRING PARAMETERS
            53            03     9A  00D9   237 	MOVZBL	#PSL$C_USER,R3		;SET SEARCH ACCESS MODE
                          FF21'  30  00DC   238 	BSBW	LOG$SEARCHLOG		;SEARCH FOR SPECIFIED LOGICAL NAME
            19            50     E9  00DF   239 	BLBC	R0,90$			;IF LBC SEARCH FAILURE
            57            01     E1  00E2   240 	BBC	#1,R7,50$		;IF CLR, GROUP OR SYSTEM TABLE
                          0B         00E5       
            50       01BC 8F     3C  00E6   241 	MOVZWL	#SS$_NOLOGNAM,R0	;ASSUME LOGICAL NAME CANNOT BE DELETED
         0E A1            58     91  00EB   242 	CMPB	R8,LOG$B_AMOD(R1)	;CAN ENTRY BE DELETED?
                          0A     14  00EF   243 	BGTR	90$			;IF GTR NO
                          FF0C'  30  00F1   244 50$:	BSBW	LOG$DELETE		;DELETE LOGICAL NAME ENTRY
                          55     D5  00F4   245 	TSTL	R5			;DELETE ALL ENTRIES?
                          AF     13  00F6   246 	BEQL	10$			;IF EQL YES
            50            01     3C  00F8   247 80$:	MOVZWL	#SS$_NORMAL,R0		;SET NORMAL COMPLETION
                          50     DD  00FB   248 90$:	PUSHL	R0			;SAVE FINAL STATUS
            53            57     D0  00FD   249 	MOVL	R7,R3			;SET NAME TABLE NUMBER
                          FEFD'  30  0100   250 	BSBW	LOG$UNLOCK		;UNLOCK NAME TABLE
                          01     BA  0103   251 	POPR	#^M<R0>			;RESTORE FINAL STATUS
                                 04  0105   252 	RET				;
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 20:36:15   VAX-11 MACRO X0.3-11               Page   7
01              CHECK TABLE NUMBER AND PRIVILEGES                                                                                (1)

                                     0106   254 	.SBTTL	CHECK TABLE NUMBER AND PRIVILEGES
                                     0106   255 ;
                                     0106   256 ; CHECK TABLE NUMBER AND PRIVILEGES
                                     0106   257 ;
                                     0106   258  
                                     0106   259 CHECKTABLE:				;CHECK TABLE NUMBER AND PRIVILEGES
                 00000000'EF     16  0106   260 	JSB	EXE$MAXACMODE		;MAXIMIZE ACCESS MODE
            58            50     D0  010C   261 	MOVL	R0,R8			;SAVE MAXIMIZED ACCESS MODE
            53         04 AC     9A  010F   262 	MOVZBL	TBLFLG(AP),R3		;GET LOGICAL NAME TABLE NUMBER
            53            02     D1  0113   263 	CMPL	#LOG$C_PROCESS,R3	;LEGAL TABLE NUMBER?
                          2C     19  0116   264 	BLSS	30$			;IF LSS NO
                          09     13  0118   265 	BEQL	10$			;IF EQL PROCESS NAME TABLE
            53            02     C1  011A   266 	ADDL3	#PRV$V_SYSNAM,R3,R2	;CALCULATE PRIVILEGE BIT NUMBER
                          52         011D       
                                     011E   267 	IFNPRIV	R2,40$			;CAN PROCESS CREATE LOGICAL NAME?
            50         08 AC     D0  0123   268 10$:	MOVL	LOGNAM(AP),R0		;GET ADDRESS OF LOGICAL NAME STRING DESCRIPTOR
                          1A     13  0127   269 	BEQL	20$			;IF EQL NO LOGICAL NAME STRING DESCRIPTOR
                                     0129   270 	IFNORD	#8,(R0),ACCVIO		;CAN LOGICAL NAME STRING DESCRIPTOR BE READ?
            51         04 A0     D0  012F   271 	MOVL	4(R0),R1		;GET ADDRESS OF LOGICAL NAME STRING
            50            60     3C  0133   272 	MOVZWL	(R0),R0			;GET LENGTH OF LOGICAL NAME STRING
                          16     13  0136   273 	BEQL	IVLOGN			;IF EQL INVALID LOGICAL NAME STRING
            3F            50     B1  0138   274 	CMPW	R0,#LOG$C_NAMLENGTH-1	;LEGAL NAME STRING LENGTH?
                          11     1A  013B   275 	BGTRU	IVLOGN			;IF GTRU NO
                                     013D   276 	IFNORD	R0,(R1),ACCVIO		;CAN LOGICAL NAME STRING BE READ?
                                 05  0143   277 20$:	RSB				;
            50       015C 8F     3C  0144   278 30$:	MOVZWL	#SS$_IVLOGTAB,R0	;SET INVALID LOGICAL NAME TABLE NUMBER
                                 04  0149   279 	RET				;
            50            24     3C  014A   280 40$:	MOVZWL	#SS$_NOPRIV,R0		;SET NO PRIVILEGE
                                 04  014D   281 	RET				;
            50       0154 8F     3C  014E   282 IVLOGN:	MOVZWL	#SS$_IVLOGNAM,R0	;SET INVALID LOGICAL NAME
                                 04  0153   283 	RET				;
            50            0C     3C  0154   284 ACCVIO:	MOVZWL	#SS$_ACCVIO,R0		;SET ACCESS VIOLATION
                                 04  0157   285 	RET				;
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 20:36:15   VAX-11 MACRO X0.3-11               Page   8
01              TRANSLATE LOGICAL NAME                                                                                           (1)

                                     0158   287 	.SBTTL	TRANSLATE LOGICAL NAME
                                     0158   288 ;+
                                     0158   289 ; EXE$TRNLOG - TRANSLATE LOGICAL NAME
                                     0158   290 ;
                                     0158   291 ; THIS SERVICE PROVIDES THE CAPABILITY TO TRANSLATE A LOGICAL NAME STRING
                                     0158   292 ; TO A RESULTANT NAME STRING. THE TRANSLATION EMPLOYS THE PROCESS, GROUP,
                                     0158   293 ; AND SYSTEM LOGICAL NAME TABLES HEIRARCHICALLY.
                                     0158   294 ;
                                     0158   295 ; INPUTS:
                                     0158   296 ;
                                     0158   297 ;	TRLOGNAM(AP) = ADDRESS OF LOGICAL NAME STRING DESCRIPTOR.
                                     0158   298 ;	RSLLEN(AP) = ADDRESS TO STORE LENGTH OF RESULT STRING.
                                     0158   299 ;	RSLBUF(AP) = ADDRESS OF RESULTANT STRING BUFFER DESCRIPTOR.
                                     0158   300 ;	TABLE(AP) = ADDRESS TO STORE TRANSLATION TABLE NUMBER.
                                     0158   301 ;	TRACMODE(AP) = ADDRESS TO STORE ASSIGNMENT ACCESS MODE.
                                     0158   302 ;	DSBMSK(AP) = TABLE SEARCH DISABLE MASK.
                                     0158   303 ;
                                     0158   304 ;	R4 = CURRENT PROCESS PCB ADDRESS.
                                     0158   305 ;
                                     0158   306 ; OUTPUTS:
                                     0158   307 ;
                                     0158   308 ;	R0 LOW BIT CLEAR INDICATES FAILURE TO TRANSLATE LOGICAL NAME STRING.
                                     0158   309 ;
                                     0158   310 ;		R0 = SS$_ACCVIO - LOGICAL NAME STRING, LOGICAL NAME STRING
                                     0158   311 ;			DESCRIPTOR, OR RESULT BUFFER DESCRIPTOR CANNOT BE
                                     0158   312 ;			READ FROM CALLING ACCESS MODE, OR RESULT BUFFER,
                                     0158   313 ;			RESULT LENGTH, TRANSLATION TABLE NUMBER, OR ASSIGN-
                                     0158   314 ;			MENT ACCESS MODE CANNOT BE WRITTEN BY CALLING ACCESS
                                     0158   315 ;			MODE.
                                     0158   316 ;
                                     0158   317 ;		R0 = SS$_RESULTOVF - ZERO LENGTH RESULT BUFFER OR EQUIVALENCE
                                     0158   318 ;			STRING LARGER THAN RESULT BUFFER.
                                     0158   319 ;
                                     0158   320 ;	R0 LOW BIT SET INDICATES SUCCESSFUL COMPLETION.
                                     0158   321 ;
                                     0158   322 ;		R0 = SS$_NORMAL - NORMAL COMPLETION, EQUIVALENCE STRING IN
                                     0158   323 ;			RESULT BUFFER.
                                     0158   324 ;
                                     0158   325 ;		R0 = SS$_NOTRAN - NORMAL COMPLETION, LOGICAL NAME STRING IN
                                     0158   326 ;			RESULT BUFFER.
                                     0158   327 ;-
                                     0158   328  
                               003C' 0158   329 	.ENTRY	EXE$TRNLOG,^M<R2,R3,R4,R5>
            55         18 AC     D0  015A   330 	MOVL	DSBMSK(AP),R5		;SET TABLE SEARCH DISABLE MASK
            53         0C AC     D0  015E   331 	MOVL	RSLBUF(AP),R3		;GET ADDRESS OF RESULT STRING BUFFER DESCRIPTOR
                                     0162   332 	IFNORD	#8,(R3),ACCVIO		;CAN RESULT STRING BUFFER DESCRIPTOR BE READ?
            50       0214 8F     3C  0168   333 	MOVZWL	#SS$_RESULTOVF,R0	;ASSUME NO BUFFER SPECIFIED
            52            63     3C  016D   334 	MOVZWL	(R3),R2			;GET SIZE OF RESULT STRING BUFFER
                          47     13  0170   335 	BEQL	30$			;IF EQL NULL
            53         04 A3     D0  0172   336 	MOVL	4(R3),R3		;GET ADDRESS OF RESULT STRING BUFFER
                                     0176   337 	IFNOWRT	R2,(R3),ACCVIO		;CAN RESULTANT BUFFER BE WRITTEN?
            51         04 AC     D0  017C   338 	MOVL	TRLOGNAM(AP),R1		;GET ADDRESS OF LOGICAL NAME STRING
                                     0180   339 	IFNORD	#8,(R1),ACCVIO		;CAN LOGICAL NAME DESCRIPTOR BE READ?
                          FE77'  30  0186   340 	BSBW	LOG$TRNSLOGNAME		;TRANSLATE LOGICAL NAME
            2D            50     E9  0189   341 	BLBC	R0,30$			;IF LBC TRANSLATION FAILURE
            55         08 AC     D0  018C   342 	MOVL	RSLLEN(AP),R5		;GET ADDRESS TO STORE RESULT LENGTH
                          09     13  0190   343 	BEQL	10$			;IF EQL NONE SPECIFIED
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 20:36:15   VAX-11 MACRO X0.3-11               Page   9
01              TRANSLATE LOGICAL NAME                                                                                           (1)

                                     0192   344 	IFNOWRT	#2,(R5),ACCVIO		;CAN LENGTH BE WRITTEN?
            65            51     B0  0198   345 	MOVW	R1,(R5)			;STORE RESULT STRING LENGTH
            55         10 AC     D0  019B   346 10$:	MOVL	TABLE(AP),R5		;GET ADDRESS TO STORE TABLE NUMBER
                          09     13  019F   347 	BEQL	20$			;IF EQL NONE SPECIFIED
                                     01A1   348 	IFNOWRT	#1,(R5),ACCVIO		;CAN TABLE NUMBER BE WRITTEN?
            65            52     90  01A7   349 	MOVB	R2,(R5)			;STORE TRANSLATION TABLE NUMBER
            55         14 AC     D0  01AA   350 20$:	MOVL	TRACMODE(AP),R5		;GET ADDRESS TO STORE ASSIGNMENT ACCESS MODE
                          09     13  01AE   351 	BEQL	30$			;IF EQL NONE SPECIFIED
                                     01B0   352 	IFNOWRT	#1,(R5),ACCVIO		;CAN ACCESS MODE BE WRITTEN?
            65            53     90  01B6   353 	MOVB	R3,(R5)			;STORE ASSIGNMENT ACCESS MODE
                                 04  01B9   354 30$:	RET				;
                                     01BA   355  
                                     01BA   356 	.END
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 20:36:15   VAX-11 MACRO X0.3-11               Page  10
SYMBOL TABLE                                                                                                                     (1)

ACCVIO           00000154 R     03   IPL$_POWER     = 0000001F            PCB$V_BATCH    = 0000000E            
BIT...         = 00000000            IPL$_QUEUEAST  = 00000006            PCB$V_DELPEN   = 00000001            
CHECKTABLE       00000106 R     03   IPL$_SCHED     = 00000003            PCB$V_FORCPEN  = 00000002            
CRACMODE       = 00000010            IPL$_SYNCH     = 00000007            PCB$V_HIBER    = 00000013            
CTL$GQ_ALLOCREG  ********   X   03   IPL$_TIMER     = 00000007            PCB$V_INQUAN   = 00000003            
DLACMODE       = 0000000C            IVLOGN           0000014E R     03   PCB$V_LOGIN    = 00000014            
DSBMSK         = 00000018            LOG$AL_LOGTBL    ********   X   03   PCB$V_NETWRK   = 00000015            
DYN$C_ACB      = 00000002            LOG$B_AMOD       0000000E            PCB$V_NOACNT   = 0000000F            
DYN$C_ADP      = 00000001            LOG$B_TABLE      0000000B            PCB$V_NODELET  = 00000017            
DYN$C_AQB      = 00000003            LOG$B_TYPE       0000000A            PCB$V_PHDRES   = 00000012            
DYN$C_BRDCST   = 0000001A            LOG$C_GROUP    = 00000001            PCB$V_PSWAPM   = 00000004            
DYN$C_BUFIO    = 00000013            LOG$C_LENGTH     00000014            PCB$V_PWRAST   = 00000016            
DYN$C_CEB      = 00000004            LOG$C_NAMLENGTH= 00000040            PCB$V_RES      = 00000000            
DYN$C_CRB      = 00000005            LOG$C_PROCESS  = 00000002            PCB$V_RESPEN   = 00000005            
DYN$C_CXB      = 0000001B            LOG$C_SYSTEM   = 00000000            PCB$V_SSFEXC   = 00000006            
DYN$C_DDB      = 00000006            LOG$DELETE       ********   X   03   PCB$V_SSFEXCE  = 00000007            
DYN$C_DPT      = 0000001E            LOG$INSLOGN      ********   X   03   PCB$V_SSFEXCS  = 00000008            
DYN$C_FCB      = 00000007            LOG$K_LENGTH     00000014            PCB$V_SSFEXCU  = 00000009            
DYN$C_FRK      = 00000008            LOG$LOCKW        ********   X   03   PCB$V_SSRWAIT  = 0000000A            
DYN$C_GSD      = 00000015            LOG$L_LTBL       00000004            PCB$V_SUSPEN   = 0000000B            
DYN$C_IDB      = 00000009            LOG$L_LTFL       00000000            PCB$V_SWPVBN   = 00000010            
DYN$C_IRP      = 0000000A            LOG$L_MBXUCB     00000010            PCB$V_WAKEPEN  = 0000000C            
DYN$C_JPB      = 0000001F            LOG$SEARCHLOG    ********   X   03   PCB$V_WALL     = 0000000D            
DYN$C_KFH      = 00000026            LOG$TRNSLOGNAME  ********   X   03   PCB$W_APTCNT     00000034            
DYN$C_KFI      = 00000018            LOG$T_NAME       00000014            PCB$W_ASTCNT     0000003C            
DYN$C_LOG      = 0000000B            LOG$UNLOCK       ********   X   03   PCB$W_BIOCNT     0000003E            
DYN$C_MTL      = 00000019            LOG$W_GROUP      0000000C            PCB$W_BIOLM      00000040            
DYN$C_MVL      = 00000016            LOG$W_SIZE       00000008            PCB$W_BYTCNT     00000042            
DYN$C_NDB      = 0000001C            LOGNAM         = 00000008            PCB$W_BYTLM      00000068            
DYN$C_NET      = 00000017            PCB$B_ASTACT     0000000C            PCB$W_DIOCNT     00000044            
DYN$C_PBH      = 00000020            PCB$B_ASTEN      0000000D            PCB$W_DIOLM      00000046            
DYN$C_PCB      = 0000000C            PCB$B_PRI        0000000B            PCB$W_FILCNT     00000048            
DYN$C_PDB      = 00000021            PCB$B_PRIB       00000033            PCB$W_GPGCNT     00000038            
DYN$C_PFL      = 00000023            PCB$B_TYPE       0000000A            PCB$W_GRP        00000022            
DYN$C_PIB      = 00000022            PCB$B_WEFC       00000032            PCB$W_MEM        00000020            
DYN$C_PQB      = 0000000D            PCB$C_LENGTH     0000007C            PCB$W_MTXCNT     0000000E            
DYN$C_PTR      = 00000025            PCB$K_LENGTH     0000007C            PCB$W_PPGCNT     0000003A            
DYN$C_RVT      = 0000000E            PCB$L_ASTQBL     00000014            PCB$W_PRCCNT     0000006A            
DYN$C_SFT      = 00000024            PCB$L_ASTQFL     00000010            PCB$W_SIZE       00000008            
DYN$C_SSB      = 0000001D            PCB$L_EFC2P      00000058            PCB$W_STATE      00000030            
DYN$C_TQE      = 0000000F            PCB$L_EFC3P      0000005C            PCB$W_TMBU       00000036            
DYN$C_TYPAHD   = 00000014            PCB$L_EFCS       00000050            PCB$W_TQCNT      0000004A            
DYN$C_UCB      = 00000010            PCB$L_EFCU       00000054            PR$_IPL          ********   X   03   
DYN$C_VCB      = 00000011            PCB$L_EFWM       0000004C            PRV$V_ALLSPOOL = 00000004            
DYN$C_WCB      = 00000012            PCB$L_OWNER      0000001C            PRV$V_BUGCHK   = 00000017            
EQLNAM         = 0000000C            PCB$L_PHD        00000064            PRV$V_CMEXEC   = 00000001            
EXE$ALLOCATE     ********   X   03   PCB$L_PHYPCB     00000018            PRV$V_CMKRNL   = 00000000            
EXE$ALOPAGED     ********   X   03   PCB$L_PID        00000060            PRV$V_DETACH   = 00000005            
EXE$CRELOG       00000000 RG    03   PCB$L_PQB        0000004C            PRV$V_DIAGNOSE = 00000006            
EXE$DELLOG       00000094 RG    03   PCB$L_SQBL       00000004            PRV$V_EXQUOTA  = 00000013            
EXE$MAXACMODE    ********   X   03   PCB$L_SQFL       00000000            PRV$V_GROUP    = 00000008            
EXE$TRNLOG       00000158 RG    03   PCB$L_STS        00000028            PRV$V_GRPNAM   = 00000003            
GBL...         = 00000000            PCB$L_UIC        00000020            PRV$V_LOG_IO   = 00000007            
IPL$_ASTDEL    = 00000002            PCB$L_WSSWP      00000024            PRV$V_MOUNT    = 00000011            
IPL$_HWCLK     = 00000018            PCB$L_WTIME      0000002C            PRV$V_NETMBX   = 00000014            
IPL$_IOPOST    = 00000004            PCB$T_LNAME      0000006C            PRV$V_NOACNT   = 00000009            
IPL$_MAILBOX   = 0000000B            PCB$V_ASTPEN   = 00000011            PRV$V_OPER     = 00000012            
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 20:36:15   VAX-11 MACRO X0.3-11               Page  11
SYMBOL TABLE                                                                                                                     (1)

PRV$V_PHY_IO   = 00000016            SS$_BADIRECTORY= 00000828            SS$_FILNOTCNTG = 000002AC            
PRV$V_PRMCEB   = 0000000A            SS$_BADPARAM   = 00000014            SS$_FILNOTEXP  = 000000B4            
PRV$V_PRMGBL   = 00000018            SS$_BADSTACK   = 000002B4            SS$_FLTDIV     = 00000494            
PRV$V_PRMMBX   = 0000000B            SS$_BEGOFFILE  = 00000938            SS$_FLTOVF     = 0000048C            
PRV$V_PSWAPM   = 0000000C            SS$_BLOCKCNTERR= 00000940            SS$_FLTUND     = 0000049C            
PRV$V_SETPRI   = 0000000D            SS$_BREAK      = 00000414            SS$_FORMAT     = 000000BC            
PRV$V_SETPRV   = 0000000E            SS$_BUFBYTALI  = 0000030C            SS$_GPTFULL    = 000000C4            
PRV$V_SYSGBL   = 00000019            SS$_BUFFEROVF  = 00000601            SS$_GSDFULL    = 000000CC            
PRV$V_SYSNAM   = 00000002            SS$_BUGCHECK   = 000002A4            SS$_HANGUP     = 000002CC            
PRV$V_TMPMBX   = 0000000F            SS$_CANCEL     = 00000830            SS$_HEADERFULL = 000008C8            
PRV$V_VOLPRO   = 00000015            SS$_CHANINTLK  = 0000004C            SS$_IDXFILEFULL= 000008D0            
PRV$V_WORLD    = 00000010            SS$_CLIFRCEXT  = 00000980            SS$_ILLBLKNUM  = 000000DC            
PSL$C_EXEC     = 00000001            SS$_CMODSUPR   = 0000041C            SS$_ILLCNTRFUNC= 000000E4            
PSL$C_KERNEL   = 00000000            SS$_CMODUSER   = 00000424            SS$_ILLEFC     = 000000EC            
PSL$C_SUPER    = 00000002            SS$_COMPAT     = 0000042C            SS$_ILLIOFUNC  = 000000F4            
PSL$C_USER     = 00000003            SS$_CONTINUE   = 00000001            SS$_ILLLBLAST  = 00000968            
PSL$M_CM       = 80000000            SS$_CONTROLC   = 00000651            SS$_ILLPAGCNT  = 000000FC            
PSL$M_CURMOD   = 03000000            SS$_CONTROLO   = 00000609            SS$_ILLSEQOP   = 000002DC            
PSL$M_DV       = 00000080            SS$_CONTROLY   = 00000611            SS$_ILLSER     = 00000104            
PSL$M_FPD      = 08000000            SS$_CREATED    = 00000619            SS$_ILLUSRLBLRD= 00000958            
PSL$M_FU       = 00000040            SS$_CTRLERR    = 00000054            SS$_ILLUSRLBLWT= 00000960            
PSL$M_IPL      = 001F0000            SS$_DATACHECK  = 0000005C            SS$_INCVOLLABEL= 0000010C            
PSL$M_IS       = 04000000            SS$_DATAOVERUN = 00000838            SS$_INSFARG    = 00000114            
PSL$M_IV       = 00000020            SS$_DEBUG      = 0000046C            SS$_INSFMEM    = 00000124            
PSL$M_PRVMOD   = 00C00000            SS$_DECOVF     = 000004A4            SS$_INSFRAME   = 0000012C            
PSL$M_SAFBITS  = 000037FF            SS$_DEVACTIVE  = 000002C4            SS$_INSFWSL    = 0000011C            
PSL$M_TBIT     = 00000010            SS$_DEVALLOC   = 00000840            SS$_INTDIV     = 00000484            
PSL$M_TP       = 40000000            SS$_DEVALRALLOC= 00000641            SS$_INTOVF     = 0000047C            
PSL$S_CURMOD   = 00000002            SS$_DEVASSIGN  = 00000848            SS$_IVADDR     = 00000134            
PSL$S_IPL      = 00000005            SS$_DEVFOREIGN = 00000064            SS$_IVCHAN     = 0000013C            
PSL$S_PRVMOD   = 00000002            SS$_DEVICEFULL = 00000850            SS$_IVCHNLSEC  = 0000026C            
PSL$V_CM       = 0000001F            SS$_DEVMOUNT   = 0000006C            SS$_IVDEVNAM   = 00000144            
PSL$V_CURMOD   = 00000018            SS$_DEVNOTALLOC= 00000858            SS$_IVGSDNAM   = 0000014C            
PSL$V_DV       = 00000007            SS$_DEVNOTMBX  = 00000074            SS$_IVLOGNAM   = 00000154            
PSL$V_FPD      = 0000001B            SS$_DEVNOTMOUNT= 0000007C            SS$_IVLOGTAB   = 0000015C            
PSL$V_FU       = 00000006            SS$_DEVOFFLINE = 00000084            SS$_IVPROTECT  = 000002F4            
PSL$V_IPL      = 00000010            SS$_DIRFULL    = 00000860            SS$_IVQUOTAL   = 00000164            
PSL$V_IS       = 0000001A            SS$_DRVERR     = 0000008C            SS$_IVSECFLG   = 0000016C            
PSL$V_IV       = 00000005            SS$_DUPFILENAME= 00000868            SS$_IVSECIDCTL = 000002E4            
PSL$V_PRVMOD   = 00000016            SS$_DUPLNAM    = 00000094            SS$_IVSSRQ     = 00000174            
PSL$V_TBIT     = 00000004            SS$_ENDOFFILE  = 00000870            SS$_IVSTSFLG   = 0000017C            
PSL$V_TP       = 0000001E            SS$_ENDOFTAPE  = 00000878            SS$_IVTIME     = 00000184            
RSLBUF         = 0000000C            SS$_ENDOFUSRLBL= 00000970            SS$_LCKPAGFUL  = 000000D4            
RSLLEN         = 00000008            SS$_EXQUOTA    = 0000001C            SS$_LENVIO     = 0000018C            
SS$_ABORT      = 0000002C            SS$_EXTIDXFILE = 00000880            SS$_LKWSETFUL  = 00000194            
SS$_ACCONFLICT = 00000800            SS$_FCPREADERR = 00000888            SS$_MBFULL     = 000008D8            
SS$_ACCVIO     = 0000000C            SS$_FCPREPSTN  = 00000988            SS$_MBTOOSML   = 0000019C            
SS$_ACPVAFUL   = 000002FC            SS$_FCPREWNDERR= 00000890            SS$_MCHECK     = 000002BC            
SS$_ARTRES     = 00000474            SS$_FCPSPACERR = 00000898            SS$_MEDOFL     = 000001A4            
SS$_ASTFLT     = 0000040C            SS$_FCPWRITERR = 000008A0            SS$_MSGNOTFND  = 00000621            
SS$_BADATTRIB  = 00000034            SS$_FILACCERR  = 0000009C            SS$_MTLBLLONG  = 00000304            
SS$_BADCHKSUM  = 00000808            SS$_FILALRACC  = 000000A4            SS$_MUSTCLOSEFL= 00000948            
SS$_BADESCAPE  = 0000003C            SS$_FILELOCKED = 000008A8            SS$_NOAQB      = 00000314            
SS$_BADFILEHDR = 00000810            SS$_FILENUMCHK = 000008B0            SS$_NODATA     = 000001AC            
SS$_BADFILENAME= 00000818            SS$_FILESEQCHK = 000008B8            SS$_NOHANDLER  = 000008F8            
SS$_BADFILEVER = 00000820            SS$_FILESTRUCT = 000008C0            SS$_NOHOMEBLK  = 000008E0            
SS$_BADIMGHDR  = 00000044            SS$_FILNOTACC  = 000000AC            SS$_NOIOCHAN   = 000001B4            
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 20:36:15   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (1)

SS$_NOLINKS    = 0000027C            SS$_WASECC     = 00000639            UCB$L_IRP        0000004C            
SS$_NOLOGNAM   = 000001BC            SS$_WASSET     = 00000009            UCB$L_LINK       0000002C            
SS$_NOMBX      = 00000274            SS$_WRITLCK    = 0000025C            UCB$L_LOGADR     00000064            
SS$_NOMOREFILES= 00000930            SS$_WRONGACP   = 0000031C            UCB$L_MAXBLOCK   00000084            
SS$_NONEXDRV   = 000001C4            TABLE          = 00000010            UCB$L_MEDIA      0000008C            
SS$_NONEXPR    = 000008E8            TBLFLG         = 00000004            UCB$L_NT_DATSSB  00000074            
SS$_NONLOCAL   = 000008F0            TRACMODE       = 00000014            UCB$L_NT_INTSSB  00000078            
SS$_NOPRIV     = 00000024            TRLOGNAM       = 00000004            UCB$L_OPCNT      00000060            
SS$_NORMAL     = 00000001            UCB$B_AMOD       00000053            UCB$L_OWNUIC     0000001C            
SS$_NOSIGNAL   = 00000900            UCB$B_CEX        00000077            UCB$L_PID        00000028            
SS$_NOSOLICIT  = 00000284            UCB$B_CM1        0000004A            UCB$L_RQBL       00000004            
SS$_NOSUCHDEV  = 00000908            UCB$B_CM2        0000004B            UCB$L_RQFL       00000000            
SS$_NOSUCHFILE = 00000910            UCB$B_DEVCLASS   00000038            UCB$L_SVAPTE     00000068            
SS$_NOSUCHNODE = 0000028C            UCB$B_DEVTYPE    00000039            UCB$L_SVPN       00000064            
SS$_NOSUCHSEC  = 00000978            UCB$B_DIPL       00000052            UCB$L_TTCHAR     0000003C            
SS$_NOTAPEOP   = 00000264            UCB$B_DX_SCTCNT  000000A6            UCB$L_VCB        00000030            
SS$_NOTFILEDEV = 000001CC            UCB$B_ERTCNT     00000070            UCB$M_BACKP    = 00000020            
SS$_NOTINTBLSZ = 000001D4            UCB$B_ERTMAX     00000071            UCB$M_BSY      = 00000100            
SS$_NOTLABELMT = 000001DC            UCB$B_ESCAPE     0000004B            UCB$M_CANCEL   = 00000008            
SS$_NOTMODIFIED= 00000659            UCB$B_FEX        00000076            UCB$M_DEADMO   = 00000400            
SS$_NOTNETDEV  = 000002EC            UCB$B_FIPL       0000000B            UCB$M_DELMBX   = 00000002            
SS$_NOTRAN     = 00000629            UCB$B_LOCSRV     0000003C            UCB$M_DIAGBUF  = 00000002            
SS$_NOTSQDEV   = 000001E4            UCB$B_OFFNDX     00000094            UCB$M_DX_WRITE = 00000008            
SS$_OPCCUS     = 00000434            UCB$B_OFFRTC     00000095            UCB$M_ECC      = 00000001            
SS$_OPCDEC     = 0000043C            UCB$B_REMSRV     0000003D            UCB$M_ERLOGIP  = 00000004            
SS$_OPINCOMPL  = 000002D4            UCB$B_SECTORS    0000003C            UCB$M_INT      = 00000002            
SS$_PAGOWNVIO  = 000001EC            UCB$B_SLAVE      00000074            UCB$M_INTTYPE  = 00000080            
SS$_PAGRDERR   = 00000444            UCB$B_SPR        00000075            UCB$M_JOB      = 00000001            
SS$_PARITY     = 000001F4            UCB$B_STATE      00000052            UCB$M_MOUNTING = 00000200            
SS$_PARTESCAPE = 000001FC            UCB$B_TRACKS     0000003D            UCB$M_NOCNVRT  = 00000004            
SS$_PFMBSY     = 00000204            UCB$B_TYPE       0000000A            UCB$M_NT_BFROVF= 00000004            
SS$_PLHLDR     = 00000404            UCB$B_VERTSZ     0000003F            UCB$M_NT_BREAK = 00000020            
SS$_PSTFULL    = 0000020C            UCB$C_LENGTH     00000074            UCB$M_NT_NAME  = 00000010            
SS$_RADRMOD    = 0000044C            UCB$C_LOGLNK   = 00000001            UCB$M_ONLINE   = 00000010            
SS$_REJECT     = 00000294            UCB$K_LENGTH     00000074            UCB$M_POWER    = 00000020            
SS$_REMOTE     = 00000649            UCB$L_AMB        00000054            UCB$M_PRMMBX   = 00000001            
SS$_RESIGNAL   = 00000918            UCB$L_ASTQBL     00000010            UCB$M_TIM      = 00000001            
SS$_RESULTOVF  = 00000214            UCB$L_ASTQFL     0000000C            UCB$M_TIMOUT   = 00000040            
SS$_ROPRAND    = 00000454            UCB$L_CPID       0000005C            UCB$M_TT_NOTIF = 00000004            
SS$_SECTBLFUL  = 0000021C            UCB$L_CRB        00000020            UCB$M_TT_TIMO  = 00000002            
SS$_SSFAIL     = 0000045C            UCB$L_DDB        00000024            UCB$M_UNLOAD   = 00001000            
SS$_SUBRNG     = 000004AC            UCB$L_DEVCHAR    00000034            UCB$M_VALID    = 00000800            
SS$_SUPERSEDE  = 00000631            UCB$L_DEVDEPEND  0000003C            UCB$S_LNKPRI   = 00000002            
SS$_TAPEPOSLOST= 00000224            UCB$L_DPC        00000080            UCB$S_LTYPE    = 00000002            
SS$_TBIT       = 00000464            UCB$L_DUETIM     0000005C            UCB$T_PARTNER    0000000C            
SS$_TIMEOUT    = 0000022C            UCB$L_DX_BFPNT   0000009C            UCB$V_BACKP    = 00000005            
SS$_TOOMANYVER = 00000990            UCB$L_DX_BUF     00000098            UCB$V_BSY      = 00000008            
SS$_TOOMUCHDATA= 0000029C            UCB$L_DX_RXDB    000000A0            UCB$V_CANCEL   = 00000003            
SS$_UNASEFC    = 00000234            UCB$L_EMB        00000078            UCB$V_DEADMO   = 0000000A            
SS$_UNSAFE     = 0000023C            UCB$L_FIRST      00000014            UCB$V_DELMBX   = 00000001            
SS$_UNWIND     = 00000920            UCB$L_FPC        0000000C            UCB$V_DIAGBUF  = 00000001            
SS$_UNWINDING  = 00000928            UCB$L_FQBL       00000004            UCB$V_DX_WRITE = 00000003            
SS$_VASFULL    = 00000244            UCB$L_FQFL       00000000            UCB$V_ECC      = 00000000            
SS$_VECINUSE   = 0000024C            UCB$L_FR3        00000010            UCB$V_ERLOGIP  = 00000002            
SS$_VOLINV     = 00000254            UCB$L_FR4        00000014            UCB$V_INT      = 00000001            
SS$_WAITUSRLBL = 00000950            UCB$L_IOQBL      00000044            UCB$V_INTTYPE  = 00000007            
SS$_WASCLR     = 00000001            UCB$L_IOQFL      00000040            UCB$V_JOB      = 00000000            
SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 20:36:15   VAX-11 MACRO X0.3-11               Page  13
SYMBOL TABLE                                                                                                                     (1)

UCB$V_LNKPRI   = 00000006            
UCB$V_LTYPE    = 00000000            
UCB$V_MOUNTING = 00000009            
UCB$V_MSGACK   = 00000004            
UCB$V_MSGFLO   = 00000003            
UCB$V_NOCNVRT  = 00000002            
UCB$V_NT_BFROVF= 00000002            
UCB$V_NT_BREAK = 00000005            
UCB$V_NT_NAME  = 00000004            
UCB$V_ONLINE   = 00000004            
UCB$V_POWER    = 00000005            
UCB$V_PRMMBX   = 00000000            
UCB$V_SEGFLO   = 00000002            
UCB$V_TIM      = 00000000            
UCB$V_TIMOUT   = 00000006            
UCB$V_TT_NOTIF = 00000002            
UCB$V_TT_TIMO  = 00000001            
UCB$V_UNLOAD   = 0000000C            
UCB$V_VALID    = 0000000B            
UCB$W_BCNT       0000006E            
UCB$W_BCR        00000096            
UCB$W_BOFF       0000006C            
UCB$W_BUFQUO     00000018            
UCB$W_BYTESTOGO  0000003E            
UCB$W_CHARGE     0000004A            
UCB$W_CYLINDERS  0000003E            
UCB$W_DA         0000008C            
UCB$W_DC         0000008E            
UCB$W_DEVBUFSIZ  0000003A            
UCB$W_DEVSTS     0000005A            
UCB$W_DIRSEQ     00000088            
UCB$W_DSTADDR    00000018            
UCB$W_DX_BCR     000000A4            
UCB$W_EC1        00000090            
UCB$W_EC2        00000092            
UCB$W_ERRCNT     00000072            
UCB$W_FUNC       0000007E            
UCB$W_MB_SEED    FFFFFFFC            
UCB$W_MSGCNT     00000016            
UCB$W_MSGMAX     00000014            
UCB$W_NT_CHAN    0000007C            
UCB$W_OFFSET     0000008A            
UCB$W_REFC       00000050            
UCB$W_SIZE       00000008            
UCB$W_SRCADDR    0000001A            
UCB$W_STS        00000058            
UCB$W_UNIT       00000048            
UCB$W_VPROT      0000001A            


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFE      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
Y$EXEPAGED       000001BA      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  

SYSLOGNAM       - SYSTEM SERVICES TO MANIPULATE LOGICAL NAMES    21-AUG-1978 20:36:15   VAX-11 MACRO X0.3-11               Page  14
PROGRAM SECTION SYNOPSIS                                                                                                         (1)


THERE WERE NO ERRORS OR WARNINGS.
10028. BYTES LEFT IN FREE MEMORY POOL.
3550. BYTES OF RECLAIMED MEMORY.
OBJ$:SYSLOGNAM,LIS$:SYSLOGNAM/-SP=EXECML$/ML,SRC$:SYSLOGNAM
8 MLB DIR RDS - 867 GETS TO DEFINE 21 MACROS. 67 INTER. FILE WRITES. 
