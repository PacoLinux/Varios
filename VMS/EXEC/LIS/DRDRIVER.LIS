DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)     328  RM03 FUNCTION DECISION TABLE
   (1)     433  START I/O OPERATION
   (1)     853  RM03 HARDWARE FUNCTION EXECUTION
   (1)    1203  RM03 REGISTER DUMP ROUTINE
   (1)    1243  RM03 DISK DRIVE INITIALIZATION
   (1)    1287  RM03 UNSOLICITED INTERRUPT ROUTINE
   (1)    1320  CLASSIFY RM03 DRIVE TYPE AND SET PARAMETERS
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	DRDRIVER - RM03 DISK DRIVER
                                     0000     2 	.IDENT	/01/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; D. N. CUTLER, LEN KAWELL 23-NOV-77
                                     0000    24 ;
                                     0000    25 ; RM03 DISK DRIVER
                                     0000    26 ;
                                     0000    27 ; MACRO LIBRARY CALLS
                                     0000    28 ;
                                     0000    29  
                                     0000    30 	$CRBDEF				;DEFINE CRB OFFSETS
                                     0000    31 	$DDBDEF				;DEFINE DDB OFFSETS
                                     0000    32 	$DPTDEF				;DEFINE DPT OFFSETS
                                     0000    33 	$EMBDEF				;DEFINE EMB OFFSETS
                                     0000    34 	$IDBDEF				;DEFINE IDB OFFSETS
                                     0000    35 	$IODEF				;DEFINE I/O FUNCTION CODES
                                     0000    36 	$IRPDEF				;DEFINE IRP OFFSETS
                                     0000    37 	$MBADEF				;DEFINE MBA REGISTER OFFSETS
                                     0000    38 	$UCBDEF				;DEFINE UCB OFFSETS
                                     0000    39 	$VECDEF				;DEFINE INTERRUPT DISPATCH VECTOR OFFSETS
                                     0000    40  
                                     0000    41 ;
                                     0000    42 ; LOCAL MACROS
                                     0000    43 ;
                                     0000    44 ; EXECUTE FUNCTION AND BRANCH ON RETRIABLE ERROR CONDITION
                                     0000    45 ;
                                     0000    46  
                                     0000    47 	.MACRO	EXFUNC BDST,FCODE
                                     0000    48 		.IF NB	FCODE
                                     0000    49 		MOVZBL	#CD'FCODE,R0
                                     0000    50 		.ENDC
                                     0000    51 		BSBW	FEX
                                     0000    52 		.BYTE	BDST-.-1
                                     0000    53 	.ENDM
                                     0000    54  
                                     0000    55 ;
                                     0000    56 ; GENERATE FUNCTION TABLE ENTRY AND CASE TABLE INDEX SYMBOL
                                     0000    57 ;
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page   2
01                                                                                                                               (1)

                                     0000    58  
                                     0000    59 	.MACRO	GENF FCODE
                                     0000    60 		CD'FCODE=.-FTAB
                                     0000    61 		.BYTE	FCODE!RM_CS1_M_GO
                                     0000    62 	.ENDM
                                     0000    63  
                                     0000    64 ;
                                     0000    65 ; LOCAL SYMBOLS
                                     0000    66 ;
                                     0000    67 ; RM03 MASSBUS REGISTER OFFSETS
                                     0000    68 ;
                                     0000    69  
                                     0000    70 	$DEFINI	RM
                                     0000    71  
                                     0000    72 $DEF	RM_CS1		.BLKL	1	;DRIVE CONTROL REGISTER
                                     0004    73 	_VIELD	RM_CS1,0,<-		; DRIVE CONTROL REGISTER BIT DEFINITIONS
                                     0004    74 		<GO,,M>,-		; GO BIT
                                     0004    75 		<FCODE,5>-		; FUNCTION CODE
                                     0004    76 	>				;
                                     0004    77 $DEF	RM_DS		.BLKL	1	;DRIVE STATUS REGISTER
                                     0008    78 	_VIELD	RM_DS,0,<-		; DRIVE STATUS REGISTER BIT DEFINITIONS
                                     0008    79 		<OM,,M>,-		; OFFSET MODE
                                     0008    80 		<,5>,-			; RESERVED BITS
                                     0008    81 		<VV,,M>,-		; VOLUME VALID
                                     0008    82 		<DRY,,M>,-		; DRIVE READY
                                     0008    83 		<DPR,,M>,-		; DRIVE PRESENT
                                     0008    84 		<PGM,,M>,-		; PROGRAMMABLE
                                     0008    85 		<LST,,M>,-		; LAST SECTOR TRANSFERED
                                     0008    86 		<WRL,,M>,-		; DRIVE WRITE LOCKED
                                     0008    87 		<MOL,,M>,-		; MEDIUM ONLINE
                                     0008    88 		<PIP,,M>,-		; POSITIONING IN PROGRESS
                                     0008    89 		<ERR,,M>,-		; COMPOSITE ERROR
                                     0008    90 		<ATA,,M>-		; ATTENTION ACTIVE
                                     0008    91 	>				;
                                     0008    92 $DEF	RM_ER1		.BLKL	1	;ERROR REGISTER 1
                                     000C    93 	_VIELD	RM_ER1,0,<-		; ERROR REGISTER 1 BIT DEFINITIONS
                                     000C    94 		<ILF,,M>,-		; ILLEGAL FUNCTION
                                     000C    95 		<ILR,,M>,-		; ILLEGAL REGISTER
                                     000C    96 		<RMR,,M>,-		; REGISTER MODIFY REFUSED
                                     000C    97 		<PAR,,M>,-		; PARITY ERROR
                                     000C    98 		<FER,,M>,-		; FORMAT ERROR
                                     000C    99 		<WCF,,M>,-		; WRITE CLOCK FAIL
                                     000C   100 		<ECH,,M>,-		; ECC HARD ERROR
                                     000C   101 		<HCE,,M>,-		; HEADER COMPARE ERROR
                                     000C   102 		<HCRC,,M>,-		; HEADER CRC ERROR
                                     000C   103 		<AOE,,M>,-		; ADDRESS OVERFLOW ERROR
                                     000C   104 		<IAE,,M>,-		; ILLEGAL ADDRESS ERROR
                                     000C   105 		<WLE,,M>,-		; WRITE LOCK ERROR
                                     000C   106 		<DTE,,M>,-		; DRIVE TIMING ERROR
                                     000C   107 		<OPI,,M>,-		; OPERATION INCOMPLETE
                                     000C   108 		<UNS,,M>,-		; DRIVE UNSAFE
                                     000C   109 		<DCK,,M>-		; DATA CHECK ERROR
                                     000C   110 	>				;
                                     000C   111 $DEF	RM_MR		.BLKL	1	;MAINTENANCE REGISTER
                                     0010   112 $DEF	RM_AS		.BLKL	1	;ATTENTION SUMMARY REGISTER
                                     0014   113 $DEF	RM_DA		.BLKL	1	;DESIRED SECTOR/TRACK ADDRESS REGISTER
                                     0018   114 	_VIELD	RM_DA,0,<-		; DESIRED ADDRESS FIELD DEFINITIONS
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page   3
01                                                                                                                               (1)

                                     0018   115 		<SA,5>,-		; DESIRED SECTOR ADDRESS
                                     0018   116 		<,3>,-			; RESERVED BITS
                                     0018   117 		<TA,5>-			; DESIRED TRACK ADDRESS
                                     0018   118 	>				;
                                     0018   119 $DEF	RM_DT		.BLKL	1	;DRIVE TYPE REGISTER
                                     001C   120 	_VIELD	RM_DT,0,<-		; DRIVE TYPE REGISTER FIELD DEFINITIONS
                                     001C   121 		<DTN,9>,-		; DRIVE TYPE NUMBER
                                     001C   122 		<,2>,-			; RESERVED BITS
                                     001C   123 		<DRQ,,M>-		; DRIVE REQUEST REQUIRED
                                     001C   124 	>				;
                                     001C   125 $DEF	RM_LA		.BLKL	1	;LOOKAHEAD REGISTER
                                     0020   126 $DEF	RM_SN		.BLKL	1	;SERIAL NUMBER REGISTER
                                     0024   127 $DEF	RM_OF		.BLKL	1	;OFFSET REGISTER
                                     0028   128 	_VIELD	RM_OF,0,<-		; OFFSET REGISTER BIT DEFINITIONS
                                     0028   129 		<OFF,8>,-		; OFFSET VALUE
                                     0028   130 		<DCK,,M>,-		; DATA CHECK IN PROGRESS (SOFTWARE)
                                     0028   131 		<OM,,M>,-		; OFFSET MODE (SOFTWARE)
                                     0028   132 		<HCI,,M>,-		; HEADER COMPARE INHIBIT
                                     0028   133 		<ECI,,M>,-		; ECC INHIBIT
                                     0028   134 		<FMT,,M>,-		; 16-BIT FORMAT
                                     0028   135 		<,1>,-			; RESERVED
                                     0028   136 		<MTD,,M>,-		; MOVE TRACK DESCRIPTOR
                                     0028   137 		<CMO,,M>-		; COMMAND MODIFIER
                                     0028   138 	>				;
                                     0028   139 $DEF	RM_DC		.BLKL	1	;DESIRED CYLINDER ADDRESS
                                     002C   140 $DEF	RM_UNUSED	.BLKL	1	;UNUSED
                                     0030   141 $DEF	RM_MR2		.BLKL	1	;MAINTENANCE REGISTER 2
                                     0034   142 $DEF	RM_ER2		.BLKL	1	;ERROR REGISTER 2
                                     0038   143 	_VIELD	RM_ER2,3,<-		; ERROR REGISTER 2 BIT DEFINITIONS
                                     0038   144 		<DPE,,M>,-		; DATA PARITY ERROR
                                     0038   145 		<,3>,-			; RESERVED BITS
                                     0038   146 		<DVC,,M>,-		; DEVICE CHECK ERROR
                                     0038   147 		<,2>,-			; RESERVED BITS
                                     0038   148 		<LBC,,M>,-		; LOSS OF BIT CLOCK ERROR
                                     0038   149 		<LSC,,M>,-		; LOSS OF SYSTEM CLOCK ERROR
                                     0038   150 		<IVC,,M>,-		; INVALID COMMAND ERROR
                                     0038   151 		<OPE,,M>,-		; OPERATOR PLUG ERROR
                                     0038   152 		<SKI,,M>,-		; SEEK INCOMPLETE ERROR
                                     0038   153 		<BSE,,M>-		; BAD SECTOR ERROR
                                     0038   154 	>				;
                                     0038   155 $DEF	RM_EC1		.BLKL	1	;ECC POSITION REGISTER
                                     003C   156 	_VIELD	RM_EC1,0,<<POS,13>>	; ECC POSITION FIELD
                                     003C   157 $DEF	RM_EC2		.BLKL	1	;ECC PATTERN REGISTER
                                     0040   158 	_VIELD	RM_EC2,0,<<PAT,11>>	; ECC PATTERN FIELD
                                     0040   159  
                                     0040   160 	$DEFEND	RM
                                     0000   161  
                                     0000   162 ;
                                     0000   163 ; DEFINE DEVICE DEPENDENT UNIT CONTROL BLOCK OFFSETS
                                     0000   164 ;
                                     0000   165  
                                     0000   166 	$DEFINI	UCB
                                     0000   167  
                           00000098  0000   168 .=UCB$W_BCR+2				;
                                     0098   169  
                                     0098   170 $DEF	UCB$L_DR_SR	.BLKL	1	;SAVED MBA STATUS REGISTER
                                     009C   171 $DEF	UCB$W_DR_ER2	.BLKW	1	;SAVED RM03 ERROR REGISTER 2
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page   4
01                                                                                                                               (1)

                                     009E   172 $DEF	UCB$W_DR_MR	.BLKW	1	;MAINTENANCE REGISTER
                                     00A0   173  
                                     00A0   174 	$DEFEND	UCB
                                     0000   175  
                                     0000   176 ;
                                     0000   177 ; HARDWARE FUNCTION CODES
                                     0000   178 ;
                                     0000   179  
                           00000000  0000   180 F_NOP=0*2				;NO OPERATION
                           00000004  0000   181 F_SEEK=2*2				;SEEK CYLINDER
                           00000006  0000   182 F_RECAL=3*2				;RECALIBRATE
                           00000008  0000   183 F_DRVCLR=4*2				;DRIVE CLEAR
                           0000000A  0000   184 F_RELEASE=5*2				;RELEASE DRIVE
                           0000000C  0000   185 F_OFFSET=6*2				;OFFSET HEADS
                           0000000E  0000   186 F_RETCENTER=7*2				;RETURN TO CENTERLINE
                           00000010  0000   187 F_READPRESET=8*2			;READ IN PRESET
                           00000012  0000   188 F_PACKACK=9*2				;PACK ACKNOWLEDGE
                           00000018  0000   189 F_SEARCH=12*2				;SEARCH FOR SECTOR
                           00000018  0000   190 F_SEARCHA=12*2				;SEARCH AHEAD FOR SECTOR
                           0000001C  0000   191 F_DIAGNOSE=14*2				;DIAGNOSE DRIVE
                           00000028  0000   192 F_WRITECHECK=20*2			;WRITE CHECK DATA
                           0000002A  0000   193 F_WRITECHECKH=21*2			;WRITE CHECK HEADER AND DATA
                           00000030  0000   194 F_WRITEDATA=24*2			;WRITE DATA
                           00000032  0000   195 F_WRITEHEAD=25*2			;WRITE HEADER AND DATA
                           00000034  0000   196 F_WRITETRACKD=26*2			;WRITE TRACK DESCRIPTOR
                           00000038  0000   197 F_READDATA=28*2				;READ DATA
                           0000003A  0000   198 F_READHEAD=29*2				;READ HEADER AND DATA
                           0000003C  0000   199 F_READTRACKD=30*2			;READ TRACK DESCRIPTOR
                                     0000   200  
                                     0000   201 ;
                                     0000   202 ; LOCAL DATA
                                     0000   203 ;
                                     0000   204 ; DRIVER PROLOGUE TABLE
                                     0000   205 ;
                                     0000   206  
                                     0000   207 	DPTAB	-			;DEFINE DRIVER PROLOGUE TABLE
                                     0000   208 		END=DR_END,-		;END OF DRIVER
                                     0000   209 		ADAPTER=MBA,-		;ADAPTER TYPE
                                     0000   210 		FLAGS=DPT$M_SVP,-	;SYSTEM PAGE TABLE ENTRY REQUIRED
                                     0000   211 		UCBSIZE=160,-		;UCB SIZE
                                     0000   212 		NAME=DRDRIVER		;DRIVER NAME
                                     001F   213 	DPT_STORE INIT			;CONTROL BLOCK INIT VALUES
                                     001F   214 	DPT_STORE DDB,DDB$L_ACPD,L,<^A\F11\> ;DEFAULT ACP NAME
                                     0026   215 	DPT_STORE DDB,DDB$L_ACPD+3,B,1	;ACP CLASS
                                     002A   216 	DPT_STORE UCB,UCB$B_FIPL,B,8	;FORK IPL
                                     002E   217 	DPT_STORE UCB,UCB$L_DEVCHAR,L,-	;DEVICE CHARACTERISTICS
                                     002E   218 		<DEV$M_FOD-		; FILES ORIENTED
                                     002E   219 		!DEV$M_DIR-		; DIRECTORY STRUCTURED
                                     002E   220 		!DEV$M_AVL-		; AVAILABLE
                                     002E   221 		!DEV$M_ELG-		; ERROR LOGGING ENABLED
                                     002E   222 		!DEV$M_SHR-		; SHAREABLE
                                     002E   223 		!DEV$M_IDV-		; INPUT DEVICE
                                     002E   224 		!DEV$M_ODV-		; OUTPUT DEVICE
                                     002E   225 		!DEV$M_RND>		; RANDOM ACCESS
                                     0035   226 	DPT_STORE UCB,UCB$B_DEVCLASS,B,DC$_DISK ;DEVICE CLASS
                                     0039   227 	DPT_STORE UCB,UCB$W_DEVBUFSIZ,W,512 ;DEFAULT BUFFER SIZE
                                     003E   228 	DPT_STORE UCB,UCB$B_DIPL,B,21	;DEVICE IPL
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page   5
01                                                                                                                               (1)

                                     0042   229 	DPT_STORE UCB,UCB$B_ERTCNT,B,8	;ERROR RETRY COUNT
                                     0046   230 	DPT_STORE UCB,UCB$B_ERTMAX,B,8	;MAX ERROR RETRY COUNT
                                     004A   231 	DPT_STORE REINIT		;CONTROL BLOCK RE-INIT VALUES
                                     004A   232 	DPT_STORE CRB,CRB$L_INTD+VEC$L_UNITINIT,D,DR_UNIT_INIT ;UNIT INIT
                                     004F   233 	DPT_STORE DDB,DDB$L_DDT,D,DR$DDT ;DDT ADDRESS
                                     0054   234 	DPT_STORE END			;
                                     0000   235  
                                     0000   236 ;
                                     0000   237 ; DRIVER DISPATCH TABLE
                                     0000   238 ;
                                     0000   239  
                                     0000   240 	DDTAB	DR,-			;DRIVER DISPATCH TABLE
                                     0000   241 		DR_STARTIO,-		;START I/O OPERATION
                                     0000   242 		DR_UNSOLNT,-		;UNSOLICITED INTERRUPT
                                     0000   243 		DR_FUNCTABLE,-		;FUNCTION DECISION TABLE
                                     0000   244 		0,-			;CANCEL I/O ENTRY POINT
                                     0000   245 		DR_REGDUMP,-		;REGISTER DUMP ROUTINE
                                     0000   246 		<<RM_EC2+4+MBA$L_BCR+4+8>+<<3+5+1>*4>>,- ;DIAG BUFF SIZE
                                     0000   247 		<<RM_EC2+4+MBA$L_BCR+4+8>+<1*4>+<EMB$L_DV_REGSAV>> ;ERROR BUFF SIZE
                                     0018   248  
                                     0018   249 ;
                                     0018   250 ; DATA CHECK FUNCTION TRANSLATION TABLE
                                     0018   251 ;
                                     0018   252  
                                     0018   253 CHECKTAB:				;
                                 0A' 0018   254 	.BYTE	CDF_WRITECHECK		;WRITE DATA
                                 0A' 0019   255 	.BYTE	CDF_WRITECHECK		;READ DATA
                                 11' 001A   256 	.BYTE	CDF_WRITECHECKH		;WRITE HEADER AND DATA
                                 11' 001B   257 	.BYTE	CDF_WRITECHECKH		;READ HEADER AND DATA
                                     001C   258  
                                     001C   259 ;
                                     001C   260 ; DRIVE TYPE DESCRIPTOR TABLE
                                     001C   261 ;
                                     001C   262 DR_DTDESC:				;
                               0014  001C   263 	.WORD	^X14			; RM03
                                 00' 001E   264 	.BYTE	DT$_RM03		;
                                 20  001F   265 	.BYTE	32			; 32 SECTORS
                                 05  0020   266 	.BYTE	5			; 5 TRACKS
                               0337  0021   267 	.WORD	823			; 823 CYLINDERS
                           00020260  0023   268 	.LONG	823*5*32		; MAXIMUM BLOCKS
                           0000000B  0027   269 DR_DTDESCLEN=.-DR_DTDESC		;LENGTH OF DRIVE TYPE DESCRIPTOR
                                     0027   270 
                               0020  0027   271 	.WORD	^X20			; RP07
                                 00' 0029   272 	.BYTE	DT$_RP07		;
                                 22  002A   273 	.BYTE	34			; 34 SECTORS
                                 1E  002B   274 	.BYTE	30			; 30 TRACKS
                               0230  002C   275 	.WORD	560			; 560 CYLINDERS
                           0008B740  002E   276 	.LONG	560*30*34		; MAXIMUM BLOCKS
                                     0032   277 
                               0021  0032   278 	.WORD	^X21			; RP07 W/ HEAD PER TRACK
                                 00' 0034   279 	.BYTE	DT$_RP07HT		;
                                 22  0035   280 	.BYTE	34			; 34 SECTORS
                                 1E  0036   281 	.BYTE	30			; 30 TRACKS
                               0232  0037   282 	.WORD	562			; 562 CYLINDERS
                           0008BF38  0039   283 	.LONG	562*30*34		; MAXIMUM BLOCKS
                                     003D   284 
                           00000048  003D   285 	.BLKB	DR_DTDESCLEN		; SPARE DRIVE TYPE SLOT
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page   6
01                                                                                                                               (1)

                           00000053  0048   286 	.BLKB	DR_DTDESCLEN		; SPARE DRIVE TYPE SLOT
                                     0053   287 
                               0000  0053   288 	.WORD	0			; END OF TABLE
                                     0055   289 
                                     0055   290 ;
                                     0055   291 ; HARDWARE I/O FUNCTION CODE TABLE
                                     0055   292 ;
                                     0055   293  
                                     0055   294 FTAB:					;
                                     0055   295 	GENF	F_NOP			;NO OPERATION
                                     0056   296 	GENF	F_NOP			;(NO UNLOAD FUNCTION)
                                     0057   297 	GENF	F_SEEK			;SEEK CYLINDER
                                     0058   298 	GENF	F_RECAL			;RECALIBRATE
                                     0059   299 	GENF	F_DRVCLR		;DRIVE CLEAR
                                     005A   300 	GENF	F_RELEASE		;RELEASE PORT
                                     005B   301 	GENF	F_OFFSET		;OFFSET HEADS
                                     005C   302 	GENF	F_RETCENTER		;RETURN HEADS TO CENTERLINE
                                     005D   303 	GENF	F_PACKACK		;PACK ACKNOWLEDGE
                                     005E   304 	GENF	F_SEARCH		;SEARCH FOR SECTOR
                                     005F   305 	GENF	F_WRITECHECK		;WRITE CHECK
                                     0060   306 	GENF	F_WRITEDATA		;WRITE DATA
                                     0061   307 	GENF	F_READDATA		;READ DATA
                                     0062   308 	GENF	F_WRITEHEAD		;WRITE HEADER AND DATA
                                     0063   309 	GENF	F_READHEAD		;READ HEADER AND DATA
                                     0064   310 	GENF	F_WRITETRACKD		;WRITE TRACK DESCRIPTOR
                                     0065   311 	GENF	F_READTRACKD		;READ TRACK DESCRIPTOR
                                     0066   312 	GENF	F_WRITECHECKH		;WRITE CHECK HEADER AND DATA
                                     0067   313 	GENF	F_READPRESET		;READ IN PRESET
                                     0068   314 	GENF	F_DIAGNOSE		;DIAGNOSE THE DRIVE
                                     0069   315 	GENF	F_SEARCHA		;SEARCH AHEAD OF SECTOR
                                     006A   316  
                                     006A   317 ;
                                     006A   318 ; OFFSET TABLE FOR RM03
                                     006A   319 ;
                                     006A   320  
                                     006A   321 OFFTAB:					;
                                 00  006A   322 	.BYTE	0			;RETURN TO CENTERLINE
                                 01  006B   323 	.BYTE	^X01			;+ OFFSET (BIT 0 = OFFSET FLAG)
                                 81  006C   324 	.BYTE	^X81			;- OFFSET (BIT 0 = OFFSET FLAG)
                                 00  006D   325 	.BYTE	0			;RETURN TO CENTERLINE
                           00000004  006E   326 OFFSIZ=.-OFFTAB				;SIZE OF OFFSET TABLE
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page   7
01              RM03 FUNCTION DECISION TABLE                                                                                     (1)

                                     006E   328 	.SBTTL	RM03 FUNCTION DECISION TABLE
                                     006E   329 ;+
                                     006E   330 ; RM03 FUNCTION DECISION TABLE
                                     006E   331 ;-
                                     006E   332  
                                     006E   333 DR_FUNCTABLE:				;FUNCTION DECISION TABLE
                                     006E   334 	FUNCTAB	,-			;LEGAL FUNCTIONS
                                     006E   335 		<NOP,-			;NO OPERATION
                                     006E   336 		SEEK,-			;SEEK CYLINDER
                                     006E   337 		RECAL,-			;RECALIBRATE
                                     006E   338 		DRVCLR,-		;DRIVE CLEAR
                                     006E   339 		RELEASE,-		;RELEASE PORT
                                     006E   340 		OFFSET,-		;OFFSET HEADS
                                     006E   341 		RETCENTER,-		;RETURN HEADS TO CENTERLINE
                                     006E   342 		PACKACK,-		;PACK ACKNOWLEDGE
                                     006E   343 		SEARCH,-		;SEARCH FOR SECTOR
                                     006E   344 		READPRESET,-		;READ IN PRESET
                                     006E   345 		SENSECHAR,-		;SENSE CHARACTERISTICS
                                     006E   346 		SETCHAR,-		;SET CHARACTERISTICS
                                     006E   347 		SENSEMODE,-		;SENSE MODE
                                     006E   348 		SETMODE,-		;SET MODE
                                     006E   349 		WRITECHECK,-		;WRITE CHECK
                                     006E   350 		WRITEHEAD,-		;WRITE HEADER AND DATA
                                     006E   351 		READHEAD,-		;READ HEADER AND DATA
                                     006E   352 		WRITETRACKD,-		;WRITE TRACK DESCRIPTOR
                                     006E   353 		READTRACKD,-		;READ TRACK DESCRIPTOR
                                     006E   354 		WRITECHECKH,-		;WRITE CHECK HEADER AND DATA
                                     006E   355 		DIAGNOSE,-		;DIAGNOSE THE DRIVE
                                     006E   356 		READLBLK,-		;READ LOGICAL BLOCK
                                     006E   357 		WRITELBLK,-		;WRITE LOGICAL BLOCK
                                     006E   358 		READPBLK,-		;READ PHYSICAL BLOCK
                                     006E   359 		WRITEPBLK,-		;WRITE PHYSICAL BLOCK
                                     006E   360 		READVBLK,-		;READ VIRTUAL BLOCK
                                     006E   361 		WRITEVBLK,-		;WRITE VIRTUAL BLOCK
                                     006E   362 		ACCESS,-		;ACCESS FILE AND/OR FIND DIRECTORY ENTRY
                                     006E   363 		ACPCONTROL,-		;ACP CONTROL FUNCTION
                                     006E   364 		CREATE,-		;CREATE FILE AND/OR CREATE DIRECTORY ENTRY
                                     006E   365 		DEACCESS,-		;DEACCESS FILE
                                     006E   366 		DELETE,-		;DELETE FILE AND/OR DIRECTORY ENTRY
                                     006E   367 		MODIFY,-		;MODIFY FILE ATTRIBUTES
                                     006E   368 		MOUNT>			;MOUNT VOLUME
                                     0076   369 	FUNCTAB	,-			;BUFFERED I/O FUNCTIONS
                                     0076   370 		<NOP,-			;NO OPERATION
                                     0076   371 		 SEEK,-			;SEEK CYLINDER
                                     0076   372 		 RECAL,-		;RECALIBRATE
                                     0076   373 		 DRVCLR,-		;DRIVE CLEAR
                                     0076   374 		 RELEASE,-		;RELEASE PORT
                                     0076   375 		 OFFSET,-		;OFFSET HEADS
                                     0076   376 		 RETCENTER,-		;RETURN HEADS TO CENTERLINE
                                     0076   377 		 PACKACK,-		;PACK ACKNOWLEDGE
                                     0076   378 		 SEARCH,-		;SEARCH FOR SECTOR
                                     0076   379 		 READPRESET,-		;READ IN PRESET
                                     0076   380 		 DIAGNOSE,-		;DIAGNOSE DRIVE
                                     0076   381 		 SENSECHAR,-		;SENSE CHARACTERISTICS
                                     0076   382 		 SETCHAR,-		;SET CHARACTERISTICS
                                     0076   383 		 SENSEMODE,-		;SENSE MODE
                                     0076   384 		 SETMODE,-		;SET MODE
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page   8
01              RM03 FUNCTION DECISION TABLE                                                                                     (1)

                                     0076   385 		 ACCESS,-		;ACCESS FILE AND/OR FIND DIRECTORY ENTRY
                                     0076   386 		 ACPCONTROL,-		;ACP CONTROL FUNCTION
                                     0076   387 		 CREATE,-		;CREATE FILE AND/OR CREATE DIRECTORY ENTRY
                                     0076   388 		 DEACCESS,-		;DEACCESS FILE
                                     0076   389 		 DELETE,-		;DELETE FILE AND/OR DIRECTORY ENTRY
                                     0076   390 		 MODIFY,-		;MODIFY FILE ATTRIBUTES
                                     0076   391 		 MOUNT>			;MOUNT VOLUME
                                     007E   392 	FUNCTAB	+ACP$READBLK,-		;READ FUNCTIONS
                                     007E   393 		<READTRACKD,-		;READ TRACK DESCRIPTOR
                                     007E   394 		 READHEAD,-		;READ HEADER
                                     007E   395 		 READLBLK,-		;READ LOGICAL BLOCK
                                     007E   396 		 READPBLK,-		;READ PHYSICAL BLOCK
                                     007E   397 		 READVBLK>		;READ VIRTUAL BLOCK
                                     008A   398 	FUNCTAB	+ACP$WRITEBLK,-		;WRITE FUNCTIONS
                                     008A   399 		<WRITETRACKD,-		;WRITE TRACK DESCRIPTOR
                                     008A   400 		 WRITECHECK,-		;WRITE CHECK
                                     008A   401 		 WRITECHECKH,-		;WRITE CHECK HEADER AND DATA
                                     008A   402 		 WRITEHEAD,-		;WRITE HEADER
                                     008A   403 		 WRITELBLK,-		;WRITE LOGICAL BLOCK
                                     008A   404 		 WRITEPBLK,-		;WRITE PHYSICAL BLOCK
                                     008A   405 		 WRITEVBLK>		;WRITE VIRTUAL BLOCK
                                     0096   406 	FUNCTAB	+ACP$ACCESS,<ACCESS,CREATE> ;ACCESS AND CREATE FILE OR DIRECTORY
                                     00A2   407 	FUNCTAB	+ACP$DEACCESS,<DEACCESS> ;DEACCESS FILE
                                     00AE   408 	FUNCTAB	+ACP$MODIFY,-		;
                                     00AE   409 		<ACPCONTROL,-		;ACP CONTROL FUNCTION
                                     00AE   410 		 DELETE,-		;DELETE FILE OR DIRECTORY ENTRY
                                     00AE   411 		 MODIFY>		;MODIFY FILE ATTRIBUTES
                                     00BA   412 	FUNCTAB	+ACP$MOUNT,<MOUNT>	;MOUNT VOLUME
                                     00C6   413 	FUNCTAB	+EXE$ZEROPARM,-		;ZERO PARAMETER FUNCTIONS
                                     00C6   414 		<NOP,-			;NO OPERATION
                                     00C6   415 		 RECAL,-		;RECALIBRATE
                                     00C6   416 		 DRVCLR,-		;DRIVE CLEAR
                                     00C6   417 		 RELEASE,-		;RELEASE PORT
                                     00C6   418 		 RETCENTER,-		;RETURN HEADS TO CENTERLINE
                                     00C6   419 		 READPRESET,-		;READ IN PRESET
                                     00C6   420 		 PACKACK>		;PACK ACKNOWLEDGE
                                     00D2   421 	FUNCTAB	+EXE$ONEPARM,-		;ONE PARAMETER FUNCTIONS
                                     00D2   422 		<SEEK,-			;SEEK CYLINDER
                                     00D2   423 		 OFFSET,-		;OFFSET HEADS
                                     00D2   424 		 SEARCH,-		;SEARCH FOR SECTOR
                                     00D2   425 		 DIAGNOSE>		;DIAGNOSE THE DRIVE
                                     00DE   426 	FUNCTAB	+EXE$SENSEMODE,-	;
                                     00DE   427 		<SENSECHAR,-		;SENSE CHARACTERISTICS
                                     00DE   428 		 SENSEMODE>		;SENSE MODE
                                     00EA   429 	FUNCTAB	+EXE$SETCHAR,-		;
                                     00EA   430 		<SETCHAR,-		;SET CHARACTERISTICS
                                     00EA   431 		 SETMODE>		;SET MODE
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page   9
01              START I/O OPERATION                                                                                              (1)

                                     00F6   433 	.SBTTL	START I/O OPERATION
                                     00F6   434 ;+
                                     00F6   435 ; DR_STARTIO - START I/O OPERATION ON DEVICE UNIT
                                     00F6   436 ;
                                     00F6   437 ; THIS ENTRY POINT IS ENTERED TO START AN I/O OPERATION ON A DEVICE UNIT.
                                     00F6   438 ;
                                     00F6   439 ; INPUTS:
                                     00F6   440 ;
                                     00F6   441 ;	R3 = ADDRESS OF I/O PACKET.
                                     00F6   442 ;	R5 = UCB ADDRESS OF DEVICE UNIT.
                                     00F6   443 ;
                                     00F6   444 ; OUTPUTS:
                                     00F6   445 ;
                                     00F6   446 ;	FUNCTION DEPENDENT PARAMETERS ARE STORED IN THE DEVICE UCB, THE ERROR
                                     00F6   447 ;	RETRY COUNT IS RESET, AND THE FUNCTION IS EXECUTED. AT FUNCTION COMPLETION
                                     00F6   448 ;	THE OPERATION IS TERMINATED THROUGH REQUEST COMPLETE.
                                     00F6   449 ;-
                                     00F6   450  
                                     00F6   451 DR_STARTIO:				;START I/O OPERATION
         70 A5         71 A5     90  00F6   452 	MOVB	UCB$B_ERTMAX(R5),UCB$B_ERTCNT(R5) ;INITIALIZE ERROR RETRY COUNT
         7E A5         20 A3     B0  00FB   453 	MOVW	IRP$W_FUNC(R3),UCB$W_FUNC(R5) ;SAVE FUNCTION CODE AND MODIFIERS
                     009E C5     B4  0100   454 	CLRW	UCB$W_DR_MR(R5)		;CLEAR THE MAINTENANCE VALUE
            50         34 A3     D0  0104   455 	MOVL	IRP$L_MEDIA(R3),R0	;GET PARAMETER LONGWORD
                                     0108   456  
                                     0108   457 ;
                                     0108   458 ; MOVE FUNCTION DEPENDENT PARAMETERS TO UCB
                                     0108   459 ;
                                     0108   460  
                          00     EF  0108   461 10$:	EXTZV	#IRP$V_FCODE,#IRP$S_FCODE,- ;EXTRACT I/O FUNCTION CODE
         20 A3            06         010A   462 		IRP$W_FUNC(R3),R1	;
                          51         010D       
            51            02     91  010E   463 	CMPB	#IO$_SEEK,R1 		;SEEK FUNCTION?
                          1E     13  0111   464 	BEQL	20$			;IF EQL YES
            51            06     91  0113   465 	CMPB	#IO$_OFFSET,R1 		;OFFSET FUNCTION?
                          20     13  0116   466 	BEQL	30$			;IF EQL YES
            51            09     91  0118   467 	CMPB	#IO$_SEARCH,R1		;SEARCH FUNCTION?
                          22     13  011B   468 	BEQL	40$			;IF EQL YES
            51            1D     91  011D   469 	CMPB	#IO$_DIAGNOSE,R1	;DIAGNOSE FUNCTION?
                          24     13  0120   470 	BEQL	45$			;IF EQL YES
       008C C5            50     D0  0122   471 	MOVL	R0,UCB$W_DA(R5)		;STORE PARAMETER LONGWORD
            51            18     91  0127   472 	CMPB	#IO$_WRITECHECKH,R1	;DISJOINT FUNCTION CODE?
                          22     1A  012A   473 	BGTRU	50$			;IF GTRU NO
            51            07     A2  012C   474 	SUBW	#IO$_WRITECHECKH-IO$_READTRACKD-1,R1 ;MAKE A FUNCTION TABLE INDEX
                          1D     11  012F   475 	BRB	50$			;
                                     0131   476  
                                     0131   477 ;
                                     0131   478 ; SEEK FUNCTION - SET CYLINDER ADDRESS
                                     0131   479 ;
                                     0131   480  
       008E C5            50     B0  0131   481 20$:	MOVW	R0,UCB$W_DC(R5)		;SET CYLINDER ADDRESS
                          16     11  0136   482 	BRB	50$			;
                                     0138   483  
                                     0138   484 ;
                                     0138   485 ; OFFSET FUNCTION - SET CURRENT OFFSET VALUE
                                     0138   486 ;
                                     0138   487  
       008A C5            50     90  0138   488 30$:	MOVB	R0,UCB$W_OFFSET(R5)	;SET OFFSET VALUE
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  10
01              START I/O OPERATION                                                                                              (1)

                          0F     11  013D   489 	BRB	50$			;
                                     013F   490  
                                     013F   491 ;
                                     013F   492 ; SEARCH FUNCTION - SET SECTOR ADDRESS
                                     013F   493 ;
                                     013F   494  
       008C C5            50     90  013F   495 40$:	MOVB	R0,UCB$W_DA(R5)		;SET SECTOR ADDRESS
                          08     11  0144   496 	BRB	50$			;
                                     0146   497 
                                     0146   498 ;
                                     0146   499 ; DIAGNOSE FUNCTION - SET MAINTENANCE VALUE
                                     0146   500 ;
                                     0146   501 
       009E C5            50     B0  0146   502 45$:	MOVW	R0,UCB$W_DR_MR(R5)	;SET MAINTENANCE VALUE
            51            03     A2  014B   503 	SUBW	#IO$_DIAGNOSE-IO$_READPRESET-1,R1 ;MAKE A FUNCTION TABLE INDEX
                                     014E   504  
                                     014E   505 ;
                                     014E   506 ; FINISH PREPROCESSING
                                     014E   507 ;
                                     014E   508  
         76 A5            51     90  014E   509 50$:	MOVB	R1,UCB$B_FEX(R5)	;SAVE FUNCTION DISPATCH INDEX
            54         20 A5     D0  0152   510 	MOVL	UCB$L_CRB(R5),R4	;GET ADDRESS OF CRB
            54         1C B4     D0  0156   511 	MOVL	@CRB$L_INTD+VEC$L_IDB(R4),R4 ;GET FIRST CONTROLLER CSR ADDRESS
         5A A5            00     E4  015A   512 	BBSC	#UCB$V_ECC,UCB$W_DEVSTS(R5),FDISPATCH ;CLEAR ECC CORRECTION MADE
                          00         015E       
                                     015F   513  
                                     015F   514 ;
                                     015F   515 ; CENTRAL FUNCTION DISPATCH
                                     015F   516 ;
                                     015F   517  
                                     015F   518 FDISPATCH:				;FUNCTION DISPATCH
            53         4C A5     D0  015F   519 	MOVL	UCB$L_IRP(R5),R3	;RETRIEVE ADDRESS OF I/O PACKET
         2A A3            08     E0  0163   520 	BBS	#IRP$V_PHYSIO,IRP$W_STS(R3),10$ ;IF SET, PHYSICAL I/O FUNCTION
                          0D         0167       
         58 A5            0B     E0  0168   521 	BBS	#UCB$V_VALID,UCB$W_STS(R5),10$ ;IF SET, VOLUME SOFTWARE VALID
                          08         016C       
            50       0000'8F     3C  016D   522 	MOVZWL	#SS$_VOLINV,R0		;SET VOLUME INVALID STATUS
                          041E   31  0172   523 	BRW	RESETXFR		;
                                     0175   524  
                                     0175   525 ;
                                     0175   526 ; UNIT IS SOFTWARE VALID OR FUNCTION IS PHYSICAL I/O
                                     0175   527 ;
                                     0175   528  
            50         76 A5     9A  0175   529 10$:	MOVZBL	UCB$B_FEX(R5),R0	;GET DISPATCH FUNCTION CODE
       008B C5            10     90  0179   530 	MOVB	#RM_OF_M_FMT/256,UCB$W_OFFSET+1(R5) ;CLEAR ECI, HCI, AND SET FORMAT
       0095 C5            01     90  017E   531 	MOVB	#1,UCB$B_OFFRTC(R5)	;SET INITIAL OFFSET RETRY COUNT
                     0094 C5     94  0183   532 	CLRB	UCB$B_OFFNDX(R5)	;CLEAR INITIAL OFFSET TABLE INDEX
                                     0187   533 	CASE	R0,<-			;DISPATCH TO FUNCTION HANDLING ROUTINE
                                     0187   534 		WRITECHECK,-		;WRITE CHECK DATA
                                     0187   535 		WRITEDATA,-		;WRITE DATA
                                     0187   536 		READDATA,-		;READ DATA
                                     0187   537 		WRITEHEAD,-		;WRITE HEADER AND DATA
                                     0187   538 		READHEAD,-		;READ HEADER AND DATA
                                     0187   539 		WRITETRACKD,-		;WRITE TRACK DESCRIPTOR
                                     0187   540 		READTRACKD,-		;READ TRACK DESCRIPTOR
                                     0187   541 		WRITECHECKH,-		;WRITE CHECK HEADER AND DATA
                                     0187   542 		READPRESET,-		;READIN PRESET
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  11
01              START I/O OPERATION                                                                                              (1)

                                     0187   543 		DIAGNOSE,-		;DIAGNOSE DRIVE
                                     0187   544 		>,LIMIT=#CDF_WRITECHECK	;
                                     019F   545  
                                     019F   546 ;
                                     019F   547 ; NO OPERATION, SEEK, RECALIBRATE, DRIVE CLEAR, RELEASE, OFFSET,
                                     019F   548 ; RETURN TO CENTER LINE, PACK ACKNOWLEDGE, SEARCH, AND READ IN PRESET
                                     019F   549 ;
                                     019F   550  
                                     019F   551 NOP:					;NO OPERATION
                                     019F   552 SEEK:					;SEEK CYLINDER
                                     019F   553 RECAL:					;RECALIBRATE
                                     019F   554 DRVCLR:					;DRIVE CLEAR
                                     019F   555 RELEASE:				;RELEASE PORT
                                     019F   556 OFFSET:					;OFFSET READ HEADS
                                     019F   557 RETCENTER:				;RETURN TO CENTERLINE
                                     019F   558 PACKACK:				;PACK ACKNOWLEDGE
                                     019F   559 SEARCH:					;SEARCH FOR SECTOR
                                     019F   560 READPRESET:				;READIN PRESET
                                     019F   561 	EXFUNC	RETRY			;EXECUTE HOUSEKEEPING FUNCTION
                          75     11  01A3   562 	BRB	NORMAL			;
                                     01A5   563  
                                     01A5   564 ;
                                     01A5   565 ; WRITE CHECK DATA AND WRITE CHECK HEADER AND DATA
                                     01A5   566 ;
                                     01A5   567  
                                     01A5   568 WRITECHECK:				;WRITE CHECK DATA
                                     01A5   569 WRITECHECKH:				;WRITE CHECK HEADER AND DATA
         7E A5            0E     E4  01A5   570 	BBSC	#IO$V_DATACHECK,UCB$W_FUNC(R5),WRITEDATA ;CLEAR DATA CHECK REQUEST
                          00         01A9       
                                     01AA   571  
                                     01AA   572 ;
                                     01AA   573 ; WRITE TRACK DESCRIPTOR, WRITE DATA, WRITE HEADER AND DATA,
                                     01AA   574 ; WRITE CHECK DATA, AND WRITE CHECK HEADER AND DATA
                                     01AA   575 ;
                                     01AA   576  
                                     01AA   577 WRITETRACKD:				;WRITE TRACK DESCRIPTOR
                                     01AA   578 WRITEDATA:				;WRITE DATA
                                     01AA   579 WRITEHEAD:				;WRITE HEADER AND DATA
       008B C5            08     88  01AA   580 	BISB	#RM_OF_M_ECI/256,UCB$W_OFFSET+1(R5) ;INHIBIT ECC CORRECTION 
                                     01AF   581  
                                     01AF   582 ;
                                     01AF   583 ; READ TRACK DESCRIPTOR, READ DATA, READ HEADER AND DATA, 
                                     01AF   584 ; WRITE TRACK DESCRIPTOR, WRITE DATA, WRITE HEADER AND DATA,
                                     01AF   585 ; WRITE CHECK DATA, AND WRITE CHECK HEADER AND DATA
                                     01AF   586 ;
                                     01AF   587  
                                     01AF   588 READTRACKD:				;READ TRACK DESCRIPTOR
                                     01AF   589 READDATA:				;READ DATA
                                     01AF   590 READHEAD:				;READ HEADER AND DATA
         7E A5            0C     E0  01AF   591 	BBS	#IO$V_INHSEEK,UCB$W_FUNC(R5),TRANRQCH ;IF SET, NO EXPLICIT SEEK
                          12         01B3       
                                     01B4   592 	EXFUNC	RETRY,F_SEARCHA		;SEARCH AHEAD OF STARTING SECTOR
                                     01BB   593  
                                     01BB   594 ;
                                     01BB   595 ; CHECK FOR COMMAND MODIFIER
                                     01BB   596 ;
                                     01BB   597 
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  12
01              START I/O OPERATION                                                                                              (1)

         7E A5            06     E1  01BB   598 	BBC	#IO$V_COMMOD,UCB$W_FUNC(R5),TRANRQCH ;IF CLEAR, NO MODIFIER
                          06         01BF       
       008B C5         80 8F     88  01C0   599 	BISB	#RM_OF_M_CMO/256,UCB$W_OFFSET+1(R5) ;SET COMMAND MODIFIER
                                     01C6   600 
                                     01C6   601 ;
                                     01C6   602 ; DATA TRANSFER OR DIAGNOSE - REQUEST CHANNEL
                                     01C6   603 ;
                                     01C6   604  
                                     01C6   605 DIAGNOSE:				;DIAGNOSE 
                                     01C6   606 TRANRQCH:				;DATA TRANSFER
                                     01C6   607 	REQPCHAN LOW			;REQUEST PRIMARY CHANNEL
                                     01CC   608  
                                     01CC   609 ;
                                     01CC   610 ; DATA TRANSFER - CHANNEL ALREADY OWNED
                                     01CC   611 ;
                                     01CC   612  
                                     01CC   613 TRANNOCH:				;DATA TRANSFER CHANNEL OWNED
            50         76 A5     9A  01CC   614 	MOVZBL	UCB$B_FEX(R5),R0	;GET FUNCTION DISPATCH INDEX
                                     01D0   615 	EXFUNC	TRANXT			;EXECUTE TRANSFER FUNCTION
                                     01D4   616  
                                     01D4   617 ;
                                     01D4   618 ; DATA CHECK
                                     01D4   619 ;
                                     01D4   620  
                                     01D4   621 DATACHECK:				;DATA CHECK
         7E A5            0E     E1  01D4   622 	BBC	#IO$V_DATACHECK,UCB$W_FUNC(R5),NORMAL ;IF CLR, NO DATA CHECK
                          41         01D8       
            50       0000'8F     3C  01D9   623 	MOVZWL	#SS$_WASECC,R0		;ASSUME ECC CORRECTION WAS MADE
         5A A5            00     E0  01DE   624 	BBS	#UCB$V_ECC,UCB$W_DEVSTS(R5),CHECKXT ;IF SET, ECC CORRECTION MADE
                          3C         01E2       
                                     01E3   625 	RELCHAN				;RELEASE CHANNEL
       008B C5            19     90  01E9   626 	MOVB	#<RM_OF_M_DCK!-		;SET DATA CHECK IN PROGRESS,
                                     01EE   627 		RM_OF_M_ECI!-		;INHIBIT ECC CORRECTION, AND
                                     01EE   628 		RM_OF_M_FMT>/256,UCB$W_OFFSET+1(R5) ;SET FORMAT
       0095 C5            01     90  01EE   629 	MOVB	#1,UCB$B_OFFRTC(R5)	;SET INITIAL OFFSET RETRY COUNT
                     0094 C5     94  01F3   630 	CLRB	UCB$B_OFFNDX(R5)	;CLEAR INITIAL OFFSET TABLE INDEX
            52         4C A5     D0  01F7   631 	MOVL	UCB$L_IRP(R5),R2	;GET ADDRESS OF IRP
         68 A5         2C A2     7D  01FB   632 	MOVQ	IRP$L_SVAPTE(R2),UCB$L_SVAPTE(R5) ;RESET TRANSFER PARAMETERS
       008C C5         34 A2     D0  0200   633 	MOVL	IRP$L_MEDIA(R2),UCB$W_DA(R5) ;
                                     0206   634  
                                     0206   635 ;
                                     0206   636 ; DATA CHECK RETRY
                                     0206   637 ;
                                     0206   638  
                                     0206   639 CHECKRETRY:				;DATA CHECK RETRY
                                     0206   640 	REQPCHAN LOW			;REQUEST PRIMARY CHANNEL FOR DATA CHECK
            50         76 A5     9A  020C   641 	MOVZBL	UCB$B_FEX(R5),R0	;GET FUNCTION DISPATCH INDEX
            50       FDF8 CF40   9A  0210   642 	MOVZBL	CHECKTAB-CDF_WRITEDATA[R0],R0 ;GET CASE TABLE INDEX
                                     0216   643 	EXFUNC	TRANXT			;EXECUTE DATA CHECK FUNCTION
                                     021A   644  
                                     021A   645 ;
                                     021A   646 ; SUCCESSFUL OPERATION COMPLETION
                                     021A   647 ;
                                     021A   648  
                                     021A   649 NORMAL:					;
            50       0000'8F     3C  021A   650 	MOVZWL	#SS$_NORMAL,R0		;SET NORMAL COMPLETION STATUS
                                     021F   651 CHECKXT:				;
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  13
01              START I/O OPERATION                                                                                              (1)

                          0189   31  021F   652 	BRW	FUNCXT			;
                                     0222   653  
                                     0222   654 ;
                                     0222   655 ; TRANSFER ENDED WITH A RETRIABLE ERROR
                                     0222   656 ;
                                     0222   657  
                                     0222   658 TRANXT:					;TRANSFER EXIT
         77 A5            0B     91  0222   659 	CMPB	#CDF_WRITEDATA,UCB$B_CEX(R5) ;WRITE DATA FUNCTION?
                          1F     13  0226   660 	BEQL	RETRY			;IF EQL YES
         77 A5            0D     91  0228   661 	CMPB	#CDF_WRITEHEAD,UCB$B_CEX(R5) ;WRITE HEADER FUNCTION?
                          19     13  022C   662 	BEQL	RETRY			;IF EQL YES
            51   00060F74 8F     D3  022E   663 	BITL	#MBA$M_SR_DLT!-		;DATA LATE OR,
                                     0235   664 		MBA$M_SR_INVMAP!-	;INVALID MAP REGISTER OR,
                                     0235   665 		MBA$M_SR_MAPPE!-	;MAP REGISTER PARITY ERROR OR,
                                     0235   666 		MBA$M_SR_MCPE!-		;MASSBUS CONTROL PARITY ERROR OR,
                                     0235   667 		MBA$M_SR_MDPE!-		;MASSBUS DATA PARITY ERROR OR,
                                     0235   668 		MBA$M_SR_MXF!-		;MISSED TRANSFER OR,
                                     0235   669 		MBA$M_SR_NED!-		;NONEXISTENT DISK OR,
                                     0235   670 		MBA$M_SR_RDS!-		;READ DATA SUBSTITUTE OR,
                                     0235   671 		MBA$M_SR_WCKLWR!-	;WRITE CHECK LOWER BYTE OR,
                                     0235   672 		MBA$M_SR_WCKUPR,R1	;WRITE CHECK UPPER BYTE?
                          10     12  0235   673 	BNEQ	RETRY			;IF NEQ YES - RETRY FUNCTION
       009C C5       1C88 8F     B3  0237   674 	BITW	#RM_ER2_M_DPE!-		;DATA PARITY ERROR OR,
                                     023E   675 		RM_ER2_M_DVC!-		;DEVICE CHECK OR,
                                     023E   676 		RM_ER2_M_LBC!-		;LOSS OF BIT CLOCK OR,
                                     023E   677 		RM_ER2_M_LSC!-		;LOSS OF SYSTEM CLOCK OR,
                                     023E   678 		RM_ER2_M_IVC,UCB$W_DR_ER2(R5) ;INVALID COMMAND?
                          07     12  023E   679 	BNEQ	RETRY			;IF NEQ YES - RETRY FUNCTION
            52       20A8 8F     B3  0240   680 	BITW	#RM_ER1_M_OPI!-		;OPERATION INCOMPLETE OR,
                                     0245   681 		RM_ER1_M_PAR!-		;PARITY ERROR OR,
                                     0245   682 		RM_ER1_M_HCE!-		;HEADER COMPARE ERROR OR,
                                     0245   683 		RM_ER1_M_WCF,R2		;WRITE CLOCK FAIL?
                          03     13  0245   684 	BEQL	ECC			;IF EQL NO
                                     0247   685 RETRY:					;
                          00BC   31  0247   686 	BRW	RETRYERR		;RETRIABLE ERROR
                                     024A   687  
                                     024A   688 ;
                                     024A   689 ; ECC, DRIVE TIMING, OR HEADER ERROR - APPLY ECC OR PERFORM OFFSET RECOVERY
                                     024A   690 ;
                                     024A   691  
                                     024A   692 ECC:					;ECC CORRECTION
            50       0096 C5     3C  024A   693 	MOVZWL	UCB$W_BCR(R5),R0	;GET NEGATIVE NUMBER OF BYTES REMAINING
            50         6E A5     A0  024F   694 	ADDW	UCB$W_BCNT(R5),R0	;CALCULATE NUMBER OF BYTES TRANSFERED
            51            50     D0  0253   695 	MOVL	R0,R1			;COPY NUMBER OF BYTES TRANSFERED
                          34     13  0256   696 	BEQL	OFF			;IF EQL NONE - PERFORM OFFSET RECOVERY
            52            08     E0  0258   697 	BBS	#RM_ER1_V_HCRC,R2,10$	;IF SET, HEADER CRC ERROR
                          02         025B       
                          50     D7  025C   698 	DECL	R0			;SET TO TRUNCATE LAST BLOCK TRANSFERED
            50       01FF 8F     AA  025E   699 10$:	BICW	#^X1FF,R0		;TRUNCATE RESIDUAL BYTES TRANSFERED
            52       1140 8F     B3  0263   700 	BITW	#RM_ER1_M_DTE!-		;DRIVE TIMING ERROR OR,
                                     0268   701 		RM_ER1_M_ECH!-		;ECC HARD ERROR OR,
                                     0268   702 		RM_ER1_M_HCRC,R2	;HEADER CRC ERROR?
                          22     12  0268   703 	BNEQ	OFF			;IF NEQ YES - PERFORM OFFSET RECOVERY
       008A C5            0B     E0  026A   704 	BBS	#RM_OF_V_ECI,UCB$W_OFFSET(R5),OFF ;IF SET, ECC INHIBITED
                          1C         026F       
                          51     DD  0270   705 	PUSHL	R1			;SAVE TOTAL NUMBER OF BYTES TRANSFERED
                 00000000'GF     16  0272   706 	JSB	G^IOC$APPLYECC		;APPLY ECC CORRECTION
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  14
01              START I/O OPERATION                                                                                              (1)

                          50   8ED0  0278   707 	POPL	R0			;RETRIEVE TRANSFERED BYTE COUNT
                 00000000'GF     16  027B   708 	JSB	G^IOC$UPDATRANSP	;UPDATE TRANSFER PARAMETERS
                       6E A5     B5  0281   709 	TSTW	UCB$W_BCNT(R5)		;ANY MORE TO TRANSFER?
                          03     13  0284   710 	BEQL	20$			;IF EQL NO
                          FF43   31  0286   711 	BRW	TRANNOCH		;TRANSFER NEXT SEGMENT
                          FF48   31  0289   712 20$:	BRW	DATACHECK		;CHECK FOR WRITE CHECK
                                     028C   713  
                                     028C   714 ;
                                     028C   715 ; OFF - OFFSET RECOVERY
                                     028C   716 ;
                                     028C   717 ; THIS CODE IS EXECUTED WHEN A DRIVE TIMING ERROR, HEADER CRC, OR ECC
                                     028C   718 ; HARD ERROR IS DETECTED ON A READ FUNCTION.
                                     028C   719 ;
                                     028C   720  
                                     028C   721 OFF:					;OFFSET RECOVERY
                          50     D5  028C   722 	TSTL	R0			;ANY GOOD DATA TRANSFERED?
                          25     13  028E   723 	BEQL	20$			;IF EQL NO
                                     0290   724  
                                     0290   725 ;
                                     0290   726 ; THE TRANSFER ENDED IN AN ERROR BUT THERE WERE SECTORS TRANSFERED THAT
                                     0290   727 ; CONTAINED GOOD DATA. SINCE THE ERROR COULD HAVE BEEN CAUSED BY A CYLIN-
                                     0290   728 ; DER CROSSING, THE GOOD DATA IS SAVED AND THE TRANSFER IS RETRIED FROM THE
                                     0290   729 ; POINT OF ERROR.
                                     0290   730 ;
                                     0290   731  
                 00000000'GF     16  0290   732 	JSB	G^IOC$UPDATRANSP	;UPDATE TRANSFER PARAMETERS
                     0094 C5     94  0296   733 	CLRB	UCB$B_OFFNDX(R5)	;RESET OFFSET TABLE INDEX
       0095 C5            10     90  029A   734 10$:	MOVB	#16,UCB$B_OFFRTC(R5)	;SET OFFSET RETRY COUNT
       0094 C5            04     91  029F   735 	CMPB	#OFFSIZ,UCB$B_OFFNDX(R5) ;ALL OFFSETS TRIED?
                          55     13  02A4   736 	BEQL	80$			;IF EQL YES
                                     02A6   737 	RELCHAN				;RELEASE CHANNEL
       008A C5       0200 8F     AA  02AC   738 	BICW	#RM_OF_M_OM,UCB$W_OFFSET(R5) ;CLEAR OFFSET MODE
                          35     11  02B3   739 	BRB	50$			;
                                     02B5   740 
                                     02B5   741 ;
                                     02B5   742 ; NO GOOD DATA TRANSFERED - CHECK IF CHANGE IN OFFSET NEEDED
                                     02B5   743 ;
                                     02B5   744  
            52       9040 8F     B3  02B5   745 20$:	BITW	#RM_ER1_M_DCK!-		;DATA CHECK OR,
                                     02BA   746 		RM_ER1_M_DTE!-		;DRIVE TIMING OR,
                                     02BA   747 		RM_ER1_M_ECH,R2		;ECC HARD ERROR?
                          05     12  02BA   748 	BNEQ	30$			;IF NEQ YES
       008B C5            04     88  02BC   749 	BISB	#RM_OF_M_HCI/256,UCB$W_OFFSET+1(R5) ;SET HEADER COMPARE INHIBIT
                     0095 C5     97  02C1   750 30$:	DECB	UCB$B_OFFRTC(R5)	;CHANGE CURRENT OFFSET?
                          28     12  02C5   751 	BNEQ	60$			;IF NEQ NO
                     0094 C5     96  02C7   752 	INCB	UCB$B_OFFNDX(R5)	;UPDATE OFFSET TABLE INDEX
            50       0094 C5     9A  02CB   753 	MOVZBL	UCB$B_OFFNDX(R5),R0	;GET NEXT OFFSET TABLE INDEX
       008A C5       FD94 CF40   90  02D0   754 	MOVB	OFFTAB-1[R0],UCB$W_OFFSET(R5) ;GET NEXT OFFSET VALUE
                          C0     13  02D8   755 	BEQL	10$			;IF EQL RETURN TO CENTERLINE
       0095 C5            02     90  02DA   756 	MOVB	#2,UCB$B_OFFRTC(R5)	;SET OFFSET RETRY COUNT
                                     02DF   757 	RELCHAN				;RELEASE CHANNEL
       008B C5            02     88  02E5   758 	BISB	#RM_OF_M_OM/256,UCB$W_OFFSET+1(R5) ;SET OFFSET MODE
       008B C5            04     8A  02EA   759 50$:	BICB	#RM_OF_M_HCI/256,UCB$W_OFFSET+1(R5) ;CLEAR HEADER COMPARE INHIBIT
       008A C5            08     E0  02EF   760 60$:	BBS	#RM_OF_V_DCK,UCB$W_OFFSET(R5),70$ ;IF SET, DATA CHECK FUNCTION
                          03         02F4       
                          FECE   31  02F5   761 	BRW	TRANRQCH		;TRY FUNCTION AGAIN
                          FF0B   31  02F8   762 70$:	BRW	CHECKRETRY		;TRY DATA CHECK AGAIN
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  15
01              START I/O OPERATION                                                                                              (1)

                                     02FB   763  
            50         04 A3     D0  02FB   764 80$:	MOVL	RM_DS(R3),R0		;GET DRIVE STATUS
            51       0098 C5     D0  02FF   765 	MOVL	UCB$L_DR_SR(R5),R1	;GET MBA STATUS
                          24     11  0304   766 	BRB	FATALERR		;
                                     0306   767 
                                     0306   768 ;
                                     0306   769 ; RETRIABLE ERROR
                                     0306   770 ;
                                     0306   771  
                                     0306   772 RETRYERR:				;RETRIABLE ERROR
       009C C5            0E     E0  0306   773 	BBS	#RM_ER2_V_SKI,UCB$W_DR_ER2(R5),10$ ;IF SET, SEEK INCOMPLETE
                          04         030B       
            52            07     E1  030C   774 	BBC	#RM_ER1_V_HCE,R2,20$	;IF CLR, HEADER COMPARED
                          0C         030F       
                                     0310   775 10$:	EXFUNC	FATALERR,F_RECAL	;RECALIBRATE HEADS
            52       2000 8F     3C  0317   776 	MOVZWL	#RM_ER1_M_OPI,R2	;SET AN ERROR FOR CALLER TO SEE
                       70 A5     97  031C   777 20$:	DECB	UCB$B_ERTCNT(R5)	;ANY RETRIES LEFT?
                          09     13  031F   778 	BEQL	FATALERR		;IF EQL NO
                                     0321   779 	RELCHAN				;RELEASE CHANNEL IF OWNED
                          FE35   31  0327   780 	BRW	FDISPATCH		;
                                     032A   781  
                                     032A   782 ;
                                     032A   783 ; FATAL CONTROLLER/DRIVE ERROR, ERROR RETRY COUNT EXHAUSTED, ERROR RETRY
                                     032A   784 ; INHIBITED, OR FINAL OFFSET TRIED
                                     032A   785 ;
                                     032A   786  
                                     032A   787 FATALERR:				;FATAL ERROR - SET STATUS
            50            0C     E1  032A   788 	BBC	#RM_DS_V_MOL,R0,10$	;IF CLR, MEDIUM OFFLINE
                          71         032D       
            50            06     E1  032E   789 	BBC	#RM_DS_V_VV,R0,20$	;IF CLR, VOLUME INVALID
                          74         0331       
            50       0000'8F     3C  0332   790 	MOVZWL	#SS$_UNSAFE,R0		;SET DRIVE UNSAFE STATUS
            52            0E     E0  0337   791 	BBS	#RM_ER1_V_UNS,R2,FUNCXT	;IF SET, DRIVE UNSAFE
                          70         033A       
            50       0000'8F     3C  033B   792 	MOVZWL	#SS$_OPINCOMPL,R0	;SET OPERATION INCOMPLETE STATUS
            52            0D     E0  0340   793 	BBS	#RM_ER1_V_OPI,R2,FUNCXT	;IF SET, OPERATION INCOMPLETE
                          67         0343       
            50       0000'8F     3C  0344   794 	MOVZWL	#SS$_FORMAT,R0		;SET FORMAT ERROR STATUS
            52            04     E0  0349   795 	BBS	#RM_ER1_V_FER,R2,FUNCXT	;IF SET, FORMAT ERROR
                          5E         034C       
                                     034D   796 ;	MOVZWL	#SS$_BADBLK,R0		;SET BAD BLOCK ERROR STATUS
                                     034D   797 ;	BBS	#RM_ER2_V_BSE,UCB$W_DR_ER2(R5),FUNCXT ;IF SET, BAD SECTOR ERROR
            50       0000'8F     3C  034D   798 	MOVZWL	#SS$_WRITLCK,R0		;SET WRITE LOCK ERROR STATUS
            52            0B     E0  0352   799 	BBS	#RM_ER1_V_WLE,R2,FUNCXT	;IF SET, WRITE LOCK ERROR
                          55         0355       
            50       0000'8F     3C  0356   800 	MOVZWL	#SS$_IVADDR,R0		;SET INVALID DISK ADDRESS STATUS
            52       0600 8F     B3  035B   801 	BITW	#RM_ER1_M_AOE!-		;DISK ADDRESS OVERFLOW OR,
                                     0360   802 		RM_ER1_M_IAE,R2		;INVALID DISK ADDRESS ERROR?
                          49     12  0360   803 	BNEQ	FUNCXT			;IF NEQ YES
            50       0000'8F     3C  0362   804 	MOVZWL	#SS$_DRVERR,R0		;SET DRIVE ERROR STATUS
            52       1027 8F     B3  0367   805 	BITW	#RM_ER1_M_DTE!-		;DRIVE TIMING ERROR OR,
                                     036C   806 		RM_ER1_M_ILF!-		;ILLEGAL FUNCTION OR,
                                     036C   807 		RM_ER1_M_ILR!-		;ILLEGAL REGISTER OR,
                                     036C   808 		RM_ER1_M_RMR!-		;REGISTER MODIFY REFUSE OR,
                                     036C   809 		RM_ER1_M_WCF,R2		;WRITE CLOCK FAIL ERROR?
                          3D     12  036C   810 	BNEQ	FUNCXT			;IF NEQ YES
            50       0000'8F     3C  036E   811 	MOVZWL	#SS$_PARITY,R0		;SET PARITY ERROR STATUS
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  16
01              START I/O OPERATION                                                                                              (1)

            52       81C8 8F     B3  0373   812 	BITW	#RM_ER1_M_DCK!-		;DATA CHECK ERROR OR,
                                     0378   813 		RM_ER1_M_ECH!-		;ECC HARD ERROR OR,
                                     0378   814 		RM_ER1_M_HCE!-		;HEADER COMPARE ERROR OR,
                                     0378   815 		RM_ER1_M_HCRC!-		;HEADER CRC ERROR OR,
                                     0378   816 		RM_ER1_M_PAR,R2		;PARITY ERROR?
                          31     12  0378   817 	BNEQ	FUNCXT			;IF NEQ YES
            51   00020064 8F     D3  037A   818 	BITL	#MBA$M_SR_MAPPE!-	;MAP PARITY ERROR OR,
                                     0381   819 		MBA$M_SR_MCPE!-		;MASSBUS CONTROL PARITY ERROR OR,
                                     0381   820 		MBA$M_SR_MDPE!-		;MASSBUS DATA PARITY ERROR OR,
                                     0381   821 		MBA$M_SR_RDS,R1		;READ DATA SUBSTITUTE?
                          28     12  0381   822 	BNEQ	FUNCXT			;IF NEQ YES
            50       0000'8F     3C  0383   823 	MOVZWL	#SS$_DATACHECK,R0	;SET DATA CHECK ERROR STATUS
            51       0600 8F     B3  0388   824 	BITW	#MBA$M_SR_WCKLWR!-	;WRITE CHECK ERROR LOWER BYTE OR,
                                     038D   825 		MBA$M_SR_WCKUPR,R1	;WRITE CHECK ERROR UPPER BYTE?
                          1C     12  038D   826 	BNEQ	FUNCXT			;IF NEQ YES
            50       0000'8F     3C  038F   827 	MOVZWL	#SS$_NONEXDRV,R0	;SET NONEXISTENT DRIVE STATUS
            51            12     E0  0394   828 	BBS	#MBA$V_SR_NED,R1,FUNCXT	;IF SET, NONEXISTENT DRIVE
                          13         0397       
            50       0000'8F     3C  0398   829 	MOVZWL	#SS$_CTRLERR,R0		;SET CONTROLLER ERROR STATUS
                          0C     11  039D   830 	BRB	FUNCXT			;
            50       0000'8F     3C  039F   831 10$:	MOVZWL	#SS$_MEDOFL,R0		;SET MEDIUM OFFLINE STATUS
                          05     11  03A4   832 	BRB	FUNCXT			;
            50       0000'8F     3C  03A6   833 20$:	MOVZWL	#SS$_VOLINV,R0		;SET VOLUME INVALID STATUS
                                     03AB   834  
                                     03AB   835 ;
                                     03AB   836 ; FUNCTION COMPLETION COMMON EXIT
                                     03AB   837 ;
                                     03AB   838  
                                     03AB   839 FUNCXT:					;FUNCTION EXIT
                          50     DD  03AB   840 	PUSHL	R0			;SAVE FINAL REQUEST STATUS
                 00000000'GF     16  03AD   841 	JSB	G^IOC$DIAGBUFILL		;FILL DIAGNOSTIC BUFFER IF PRESENT
                                     03B3   842 	RELCHAN				;RELEASE CHANNEL IF OWNED
         76 A5            0A     91  03B9   843 	CMPB	#CDF_WRITECHECK,UCB$B_FEX(R5) ;DRIVE RELATED FUNCTION?
                          12     1A  03BD   844 	BGTRU	10$			;IF GTRU YES
         76 A5            12     91  03BF   845 	CMPB	#CDF_READPRESET,UCB$B_FEX(R5) ;DRIVE RELATED FUNCTION?
                          0C     1B  03C3   846 	BLEQU	10$			;IF LEQU YES
            52         4C A5     D0  03C5   847 	MOVL	UCB$L_IRP(R5),R2	;RETRIEVE ADDRESS OF IRP
         32 A2       0096 C5     A1  03C9   848 	ADDW3	UCB$W_BCR(R5),IRP$W_BCNT(R2),2(SP) ;CALCULATE BYTES TRANSFERED
                       02 AE         03CF       
                          51     D4  03D1   849 10$:	CLRL	R1			;CLEAR SECOND STATUS LONGWORD
                          50   8ED0  03D3   850 	POPL	R0			;RETRIEVE FINAL REQUEST STATUS
                                     03D6   851 	REQCOM				;COMPLETE REQUEST
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  17
01              RM03 HARDWARE FUNCTION EXECUTION                                                                                 (1)

                                     03DC   853 	.SBTTL	RM03 HARDWARE FUNCTION EXECUTION
                                     03DC   854 ;
                                     03DC   855 ; FEX - RM03 HARDWARE FUNCTION EXECUTION
                                     03DC   856 ;
                                     03DC   857 ; THIS ROUTINE IS CALLED VIA A BSB WITH A BYTE IMMEDIATELY FOLLOWING THAT
                                     03DC   858 ; SPECIFIES THE ADDRESS OF AN ERROR ROUTINE. ALL DATA IS ASSUMED TO HAVE BEEN
                                     03DC   859 ; SET UP IN THE UCB BEFORE THE CALL. THE APPROPRIATE PARAMETERS ARE LOADED
                                     03DC   860 ; INTO DEVICE REGISTERS AND THE FUNCTION IS INITIATED. IF THE FUNCTION IS AN
                                     03DC   861 ; IMMEDIATE FUNCTION CONTROL RETURNS IMMEDIATELY. ELSE THE RETURN ADDRESS
                                     03DC   862 ; IS STORED IN THE UCB AND A WAITFOR INTERRUPT IS EXECUTED. WHEN THE INTER-
                                     03DC   863 ; RUPT OCCURS, CONTROL IS RETURNED TO THE CALLER.
                                     03DC   864 ;
                                     03DC   865 ; INPUTS:
                                     03DC   866 ;
                                     03DC   867 ;	R0 = FUNCTION TABLE DISPATCH INDEX.
                                     03DC   868 ;	R3 = ADDRESS OF DRIVE CONTROL STATUS REGISTER 1.
                                     03DC   869 ;	R4 = ADDRESS OF MBA CONFIGURATION STATUS REGISTER.
                                     03DC   870 ;	R5 = DEVICE UNIT UCB ADDRESS.
                                     03DC   871 ;
                                     03DC   872 ;	00(SP) = RETURN ADDRESS OF CALLER.
                                     03DC   873 ;	04(SP) = RETURN ADDRESS OF CALLER'S CALLER.
                                     03DC   874 ;
                                     03DC   875 ;	IMMEDIATELY FOLLOWING INLINE AT THE CALL SITE IS A BYTE WHICH CONTAINS
                                     03DC   876 ;	A BRANCH DESTINATION TO AN ERROR RETRY ROUTINE.
                                     03DC   877 ;
                                     03DC   878 ; OUTPUTS:
                                     03DC   879 ;
                                     03DC   880 ;	THERE ARE FOUR EXITS FROM THIS ROUTINE:
                                     03DC   881 ;
                                     03DC   882 ;	1. SPECIAL CONDITION - THIS EXIT IS TAKEN IF A POWER FAILURE OCCURS
                                     03DC   883 ;		OR THE OPERATION TIMES OUT. IT IS A JUMP TO THE APPROPRIATE
                                     03DC   884 ;		ERROR ROUTINE.
                                     03DC   885 ;
                                     03DC   886 ;	2. FATAL ERROR - THIS EXIT IS TAKEN IF A FATAL CONTROLLER OR DRIVE
                                     03DC   887 ;		ERROR OCCURS OR IF ANY ERROR OCCURS AND ERROR RETRY IS
                                     03DC   888 ;		INHIBITED. IT IS A JUMP TO THE FATAL ERROR EXIT ROUTINE.
                                     03DC   889 ;
                                     03DC   890 ;	3. RETRIABLE ERROR - THIS EXIT IS TAKEN IF A RETRIABLE CONTROLLER
                                     03DC   891 ;		OR DRIVE ERROR OCCURS AND ERROR RETRY IS NOT INHIBITED.
                                     03DC   892 ;		IT CONSISTS OF TAKING THE ERROR BRANCH EXIT.
                                     03DC   893 ;
                                     03DC   894 ;	4. SUCCESSFUL OPERATION - THIS EXIT IS TAKEN IF NO ERROR OCCURS
                                     03DC   895 ;		DURING THE OPERATION. IT CONSISTS OF A RETURN INLINE.
                                     03DC   896 ;
                                     03DC   897 ;	IN ALL CASES IF AN ERROR OCCURS, AN ATTEMPT IS MADE TO LOG THE ERROR.
                                     03DC   898 ;
                                     03DC   899 ;	IN ALL CASES FINAL DRIVE AND CONTROLLER REGISTERS ARE RETURNED VIA
                                     03DC   900 ;	THE GENERAL REGISTERS R0, R1, AND R2, AND THE UCB.
                                     03DC   901 ;
                                     03DC   902 ;	R0 = DRIVE STATUS REGISTER.
                                     03DC   903 ;	R1 = MBA STATUS REGISTER.
                                     03DC   904 ;	R2 = DRIVE ERROR REGISTER 1.
                                     03DC   905 ;
                                     03DC   906 ;	UCB$W_EC1(R5) = ECC POSITION REGISTER.
                                     03DC   907 ;	UCB$W_EC2(R5) = ECC PATTERN REGISTER.
                                     03DC   908 ;	UCB$W_BCR(R5) = BYTE COUNT REGISTER.
                                     03DC   909 ;	UCB$W_DR_ER2(R5) = DRIVE ERROR REGISTER 2.
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  18
01              RM03 HARDWARE FUNCTION EXECUTION                                                                                 (1)

                                     03DC   910 ;
                                     03DC   911  
                                     03DC   912 FEX:					;FUNCTION EXECUTOR
                     0080 C5   8ED0  03DC   913 	POPL	UCB$L_DPC(R5)		;SAVE DRIVER PC VALUE
         77 A5            50     90  03E1   914 	MOVB	R0,UCB$B_CEX(R5)	;SAVE CASE INDEX
            53         75 A5     9A  03E5   915 	MOVZBL	UCB$B_SLAVE+1(R5),R3	;GET DRIVE OFFSET CONSTANT
            53       0400 C443   DE  03E9   916 	MOVAL	MBA$L_ERB(R4)[R3],R3	;GET ADDRESS OF DRIVE REGISTERS
                                     03EF   917 	CASE	R0,<-			;DISPATCH TO PROPER FUNCTION ROUTINE
                                     03EF   918 		POSIT,-			;SEEK CYLINDER
                                     03EF   919 		EXFNC,-			;RECALIBRATE
                                     03EF   920 		IMMED,-			;DRIVE CLEAR
                                     03EF   921 		IMMED,-			;RELEASE DRIVE
                                     03EF   922 		IMMED,-			;OFFSET HEADS
                                     03EF   923 		EXFNC,-			;RETURN TO CENTERLINE
                                     03EF   924 		IMMED,-			;PACK ACKNOWLEDGE
                                     03EF   925 		POSIT,-			;SEARCH FOR SECTOR
                                     03EF   926 		XFER,-			;WRITE CHECK
                                     03EF   927 		XFER,-			;WRITE DATA
                                     03EF   928 		XFER,-			;READ DATA
                                     03EF   929 		XFER,-			;WRITE HEADER AND DATA
                                     03EF   930 		XFER,-			;READ HEADER AND DATA
                                     03EF   931 		XFER,-			;WRITE TRACK DESCRIPTOR
                                     03EF   932 		XFER,-			;READ TRACK DESCRIPTOR
                                     03EF   933 		XFER,-			;WRITE CHECK HEADER AND DATA
                                     03EF   934 		IMMED,-			;READIN PRESET
                                     03EF   935 		EXFNC,-			;DIAGNOSE
                                     03EF   936 		SEARCHA,-		;SEARCH AHEAD
                                     03EF   937 		>,LIMIT=#CDF_SEEK	;
                                     0419   938  
                                     0419   939 ;
                                     0419   940 ; IMMEDIATE FUNCTION EXECUTION
                                     0419   941 ;
                                     0419   942 ;	FUNCTIONS INCLUDE:
                                     0419   943 ;
                                     0419   944 ;		NO OPERATION,
                                     0419   945 ;		DRIVE CLEAR,
                                     0419   946 ;		RELEASE PORT,
                                     0419   947 ;		OFFSET,
                                     0419   948 ;		READ IN PRESET, AND
                                     0419   949 ;		PACK ACKNOWLEDGE.
                                     0419   950 ;
                                     0419   951 ; THESE FUNCTIONS ARE EXECUTED IMMEDIATELY AND THE FINAL DEVICE REGISTERS
                                     0419   952 ; ARE RETURNED TO THE CALLER.
                                     0419   953 ;
                                     0419   954  
                                     0419   955 IMMED:					;IMMEDIATE FUNCTION EXECUTION
                                     0419   956 	DSBINT				;DISABLE INTERRUPTS
         58 A5            05     E0  041F   957 	BBS	#UCB$V_POWER,UCB$W_STS(R5),10$ ;IF SET, POWER HAS FAILED
                          09         0423       
            63            09     9A  0424   958 	MOVZBL	#F_DRVCLR!1,RM_CS1(R3)	;CLEAR DRIVE ERRORS
            63       FC29 CF40   9A  0427   959 	MOVZBL	FTAB[R0],RM_CS1(R3)	;EXECUTE FUNCTION
                          0087   31  042D   960 10$:	BRW	ENBXIT			;
                                     0430   961 
                                     0430   962 ;
                                     0430   963 ; SEARCH AHEAD FUNCTION EXECUTION
                                     0430   964 ;
                                     0430   965 ; THIS FUNCTION MINIMIZES ROTATIONAL LATENCY BY SEARCHING FOR THE SECTOR THAT IS
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  19
01              RM03 HARDWARE FUNCTION EXECUTION                                                                                 (1)

                                     0430   966 ; FOUR SECTORS AHEAD OF THE STARTING SECTOR OF A TRANSFER.
                                     0430   967 ;
                                     0430   968 ; THE DESIRED CYLINDER, TRACK, AND SECTOR ADDRESS REGISTERS ARE LOADED, THE
                                     0430   969 ; FUNCTION IS INITIATED, AND A WAITFOR INTERRUPT IS EXECUTED. WHEN THE INTER-
                                     0430   970 ; RUPT OCCURS, THE FINAL DEVICE REGISTERS ARE RETURNED TO THE CALLER.
                                     0430   971 ;
                                     0430   972 
                                     0430   973 SEARCHA:				;
            51       008C C5     3C  0430   974 	MOVZWL	UCB$W_DA(R5),R1		;GET DESIRED TRACK AND SECTOR ADDRESS
            51            04     82  0435   975 	SUBB	#4,R1			;COMPUTE FOUR SECTORS BEFORE IT
                          04     18  0438   976 	BGEQ	10$			;IF GEQ BEFORE SECTOR ZERO
            51         3C A5     80  043A   977 	ADDB	UCB$B_SECTORS(R5),R1 	;CONVERT TO AFTER SECTOR ZERO
         14 A3            51     D0  043E   978 10$:	MOVL	R1,RM_DA(R3)		;SET TRACK AND SECTOR ADDRESS
                          14     11  0442   979 	BRB	LDCYL			;
                                     0444   980  
                                     0444   981 ;
                                     0444   982 ; TRANSFER FUNCTION EXECUTION
                                     0444   983 ;
                                     0444   984 ;	FUNCTIONS INCLUDE:
                                     0444   985 ;
                                     0444   986 ;		WRITE TRACK DESCRIPTOR,
                                     0444   987 ;		WRITE CHECK,
                                     0444   988 ;		WRITE CHECK HEADER AND DATA,
                                     0444   989 ;		WRITE DATA,
                                     0444   990 ;		WRITE HEADER AND DATA,
                                     0444   991 ;		READ TRACK DESCRIPTOR,
                                     0444   992 ;		READ DATA, AND
                                     0444   993 ;		READ HEADER AND DATA.
                                     0444   994 ;
                                     0444   995 ; THE MAP REGISTERS, BYTE COUNT REGISTER, AND VIRTUAL ADDRESS REGISTER ARE
                                     0444   996 ; LOADED FOLLOWED BY THE DESIRED CYLINDER, TRACK, AND SECTOR ADDRESS REGISTERS.
                                     0444   997 ; THE FUNCTION IS INITIATED AND A WAITFOR INTERRUPT IS EXECUTED. WHEN THE
                                     0444   998 ; INTERRUPT OCCURS, THE FINAL DEVICE REGISTERS ARE RETURNED TO THE CALLER.
                                     0444   999 ;
                                     0444  1000 ; IT ASSUMED THAT THE CALLER OWNS THE CHANNEL ON WHICH THE I/O IS TO OCCUR.
                                     0444  1001 ;
                                     0444  1002  
                                     0444  1003 XFER:					;TRANSFER FUNCTION EXECUTION
         08 A4            00     D2  0444  1004 	MCOML	#0,MBA$L_SR(R4)		;CLEAR MASSBUS ADAPTER ERRORS
                                     0448  1005 	LOADMBA				;LOAD MAP, BYTE COUNT, AND VIRTUAL ADDRESS
            50         77 A5     9A  044E  1006 	MOVZBL	UCB$B_CEX(R5),R0	;RETRIEVE FUNCTION TABLE INDEX
                                     0452  1007  
                                     0452  1008 ;
                                     0452  1009 ; POSITIONING FUNCTION EXECUTION
                                     0452  1010 ;
                                     0452  1011 ;	FUNCTIONS INCLUDE:
                                     0452  1012 ;
                                     0452  1013 ;		SEEK CYLINDER, AND
                                     0452  1014 ;		SEARCH FOR SECTOR.
                                     0452  1015 ;
                                     0452  1016 ; THE DESIRED CYLINDER, TRACK, AND SECTOR ADDRESS REGISTERS ARE LOADED, THE
                                     0452  1017 ; FUNCTION IS INITIATED, AND A WAITFOR INTERRUPT IS EXECUTED. WHEN THE INTER-
                                     0452  1018 ; RUPT OCCURS, THE FINAL DEVICE REGISTERS ARE RETURNED TO THE CALLER.
                                     0452  1019 ;
                                     0452  1020  
                                     0452  1021 POSIT:					;POSITION FUNCTION EXECUTION
         14 A3       008C C5     3C  0452  1022 	MOVZWL	UCB$W_DA(R5),RM_DA(R3)	;SET DESIRED TRACK AND SECTOR ADDRESS
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  20
01              RM03 HARDWARE FUNCTION EXECUTION                                                                                 (1)

                                     0458  1023 LDCYL:					;
         28 A3       008E C5     3C  0458  1024 	MOVZWL	UCB$W_DC(R5),RM_DC(R3)	;SET DESIRED CYLINDER ADDRESS
                                     045E  1025  
                                     045E  1026 ;
                                     045E  1027 ; INTERRUPT WAIT FUNCTION EXECUTION
                                     045E  1028 ;
                                     045E  1029 ;	FUNCTIONS INCLUDE:
                                     045E  1030 ;
                                     045E  1031 ;		DIAGNOSE,
                                     045E  1032 ;		RECALIBRATE, AND
                                     045E  1033 ;		RETURN TO CENTERLINE.
                                     045E  1034 ;
                                     045E  1035 ; THE OFFSET REGISTER IS LOADED, THE FUNCTION IS INITIATED, AND A WAITFOR
                                     045E  1036 ; INTERRUPT IS EXECUTED. WHEN THE INTERRUPT OCCURS, THE FINAL DEVICE REGISTERS
                                     045E  1037 ; ARE RETURNED TO THE CALLER.
                                     045E  1038 ;
                                     045E  1039  
                                     045E  1040 EXFNC:					;EXECUTE FUNCTION
            63            09     9A  045E  1041 	MOVZBL	#F_DRVCLR!1,RM_CS1(R3)	;CLEAR DRIVE ERRORS
       008A C5            09     E1  0461  1042 	BBC	#RM_OF_V_OM,UCB$W_OFFSET(R5),10$ ;IF CLR, NO OFFSET ACTIVE
                          03         0466       
            63            0D     9A  0467  1043 	MOVZBL	#F_OFFSET!1,RM_CS1(R3)	;SET DRIVE IN OFFSET MODE
                                     046A  1044 10$:	DSBINT				;DISABLE INTERRUPTS
         58 A5            05     E0  0470  1045 	BBS	#UCB$V_POWER,UCB$W_STS(R5),ENBXIT ;IF SET, POWER FAILED
                          42         0474       
         0C A3       009E C5     3C  0475  1046 	MOVZWL	UCB$W_DR_MR(R5),RM_MR(R3)	;SET DIAGNOSTIC INFO
         24 A3       008A C5     3C  047B  1047 	MOVZWL	UCB$W_OFFSET(R5),RM_OF(R3) ;SET FORMAT, INHIBIT BITS, AND OFFSET
         04 A3            13     78  0481  1048 	ASHL	#31-RM_DS_V_MOL,RM_DS(R3),R2 ;MEDIUM ONLINE?
                          52         0485       
                          1E     18  0486  1049 	BGEQ	15$			;IF GEQ NO
            63       FBC8 CF40   9A  0488  1050 	MOVZBL	FTAB[R0],RM_CS1(R3)	;INITIATE FUNCTION
                                     048E  1051 	WFIKPCH	RETREG,#6		;WAITFOR INTERRUPT AND KEEP CHANNEL
       0098 C5         08 A4     D0  0498  1052 	MOVL	MBA$L_SR(R4),UCB$L_DR_SR(R5) ;SAVE FINAL CONTROLLER STATUS
                                     049E  1053 	IOFORK				;CREATE FORK PROCESS
                          14     11  04A4  1054 	BRB	RETREG			;
                                     04A6  1055  
                                     04A6  1056 ;
                                     04A6  1057 ; MEDIUM OFFLINE AT START OF FUNCTION
                                     04A6  1058 ;
                                     04A6  1059  
                                     04A6  1060 15$:	ENBINT				;ENABLE INTERRUPTS
                       77 A5     94  04A9  1061 	CLRB	UCB$B_CEX(R5)		;FORCE DRIVE FUNCTION
            50       4000 8F     3C  04AC  1062 	MOVZWL	#RM_DS_M_ERR,R0		;SET DRIVE ERROR
                     0098 C5     D4  04B1  1063 	CLRL	UCB$L_DR_SR(R5)		;CLEAR SAVED MBA STATUS REGISTER
                          1F     11  04B5  1064 	BRB	ERROR			;
                                     04B7  1065  
                                     04B7  1066 ;
                                     04B7  1067 ; ENABLE INTERRUPTS
                                     04B7  1068 ;
                                     04B7  1069  
                                     04B7  1070 ENBXIT:					;
                                     04B7  1071 	ENBINT				;ENABLE INTERRUPTS
                                     04BA  1072  
                                     04BA  1073 ;
                                     04BA  1074 ; RETURN REGISTERS
                                     04BA  1075 ;
                                     04BA  1076  
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  21
01              RM03 HARDWARE FUNCTION EXECUTION                                                                                 (1)

                                     04BA  1077 	.ENABL	LSB
                                     04BA  1078 RETREG:					;RETURN FINAL DEVICE REGISTERS
       009C C5         34 A3     F7  04BA  1079 	CVTLW	RM_ER2(R3),UCB$W_DR_ER2(R5) ;SAVE ERROR REGISTER 2
       0090 C5         38 A3     F7  04C0  1080 	CVTLW	RM_EC1(R3),UCB$W_EC1(R5) ;SAVE ECC POSITION REGISTER
       0092 C5         3C A3     F7  04C6  1081 	CVTLW	RM_EC2(R3),UCB$W_EC2(R5) ;SAVE ECC PATTERN REGISTER
       0096 C5         10 A4     F7  04CC  1082 	CVTLW	MBA$L_BCR(R4),UCB$W_BCR(R5) ;SAVE BYTE COUNT REGISTER
            50         04 A3     D0  04D2  1083 	MOVL	RM_DS(R3),R0		;GET CONTENTS OF DRIVE STATUS REGISTER
                                     04D6  1084 ERROR:					;
            51       0098 C5     D0  04D6  1085 	MOVL	UCB$L_DR_SR(R5),R1	;RETRIEVE FINAL CONTROLLER STATUS
            52         08 A3     D0  04DB  1086 	MOVL	RM_ER1(R3),R2		;GET CONTENTS OF DRIVE ERROR REGISTER 1
         58 A5       0060 8F     B3  04DF  1087 	BITW	#UCB$M_POWER!-		;POWER FAIL OR DEVICE TIMEOUT?
                                     04E5  1088 		UCB$M_TIMOUT,UCB$W_STS(R5) ;
                          6E     12  04E5  1089 	BNEQ	50$			;IF NEQ YES - SPECIAL CONDITION
         77 A5            0A     91  04E7  1090 	CMPB	#CDF_WRITECHECK,UCB$B_CEX(R5) ;DRIVE RELATED FUNCTION?
                          2C     1A  04EB  1091 	BGTRU	10$			;IF GTRU YES
         77 A5            12     91  04ED  1092 	CMPB	#CDF_READPRESET,UCB$B_CEX(R5) ;DRIVE RELATED FUNCTION?
                          26     1B  04F1  1093 	BLEQU	10$			;IF LEQU YES
                                     04F3  1094  
                                     04F3  1095 ;
                                     04F3  1096 ; CONTROLLER RELATED FUNCTION
                                     04F3  1097 ;
                                     04F3  1098  
            51   000E1FFF 8F     D3  04F3  1099 	BITL	#MBA$M_ERROR,R1		;ANY CONTROLLER ERRORS?
                          4E     13  04FA  1100 	BEQL	30$			;IF EQL NO
                 00000000'GF     16  04FC  1101 	JSB	G^ERL$DEVICERR		;ALLOCATE AND FILL ERROR MESSAGE BUFFER
         7E A5            0F     E0  0502  1102 	BBS	#IO$V_INHRETRY,UCB$W_FUNC(R5),40$ ;IF SET, RETRY INHIBITED
                          4B         0506       
            51   0008000B 8F     D3  0507  1103 	BITL	#MBA$M_SR_ERCONF!-	;ERROR CONFIRMATION OR,
                                     050E  1104 		MBA$M_SR_ISTO!-		;INTERFACE SEQUENCE TIMEOUT OR,
                                     050E  1105 		MBA$M_SR_PGE!-		;PROGRAMMING ERROR OR,
                                     050E  1106 		MBA$M_SR_RDTO,R1	;READ TIMEOUT?
                          42     12  050E  1107 	BNEQ	40$			;IF NEQ YES - FATAL CONTROLLER ERROR
            51   00060FF4 8F     D3  0510  1108 	BITL	#MBA$M_SR_DLT!-		;DATA LATE OR,
                                     0517  1109 		MBA$M_SR_INVMAP!-	;INVALID MAP REGISTER OR,
                                     0517  1110 		MBA$M_SR_MAPPE!-	;MAP REGISTER PARITY ERROR OR,
                                     0517  1111 		MBA$M_SR_MBEXC!-	;MASSBUS EXCEPTION OR,
                                     0517  1112 		MBA$M_SR_MCPE!-		;MASSBUS CONTROL PARITY ERROR OR,
                                     0517  1113 		MBA$M_SR_MDPE!-		;MASSBUS DATA PARITY ERROR OR,
                                     0517  1114 		MBA$M_SR_MXF!-		;MISSED TRANSFER OR,
                                     0517  1115 		MBA$M_SR_NED!-		;NONEXISTENT DRIVE OR,
                                     0517  1116 		MBA$M_SR_RDS!-		;READ DATA SUBSTITUTE OR,
                                     0517  1117 		MBA$M_SR_WCKLWR!-	;WRITE CHECK LOWER BYTE OR,
                                     0517  1118 		MBA$M_SR_WCKUPR,R1	;WRITE CHECK UPPER BYTE?
                          0F     12  0517  1119 	BNEQ	20$			;IF NEQ YES - RETRIABLE CONTROLLER ERROR
                                     0519  1120  
                                     0519  1121 ;
                                     0519  1122 ; DRIVE RELATED FUNCTION
                                     0519  1123 ;
                                     0519  1124  
            50            0E     E1  0519  1125 10$:	BBC	#RM_DS_V_ERR,R0,30$	;IF CLR, NO DRIVE ERRORS
                          2D         051C       
                 00000000'GF     16  051D  1126 	JSB	G^ERL$DEVICERR		;ALLOCATE AND FILL ERROR MESSAGE BUFFER
         7E A5            0F     E0  0523  1127 	BBS	#IO$V_INHRETRY,UCB$W_FUNC(R5),40$ ;IF SET, RETRY INHIBITED
                          2A         0527       
            50            0C     E1  0528  1128 20$:	BBC	#RM_DS_V_MOL,R0,40$	;IF CLR, MEDIUM OFFLINE
                          26         052B       
            50            06     E1  052C  1129 	BBC	#RM_DS_V_VV,R0,40$	;IF CLR, INVALID VOLUME
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  22
01              RM03 HARDWARE FUNCTION EXECUTION                                                                                 (1)

                          22         052F       
            52       4E17 8F     B3  0530  1130 	BITW	#RM_ER1_M_AOE!-		;ADDRESS OVERFLOW OR,
                                     0535  1131 		RM_ER1_M_FER!-		;FORMAT ERROR OR,
                                     0535  1132 		RM_ER1_M_IAE!-		;INVALID ADDRESS OR,
                                     0535  1133 		RM_ER1_M_ILF!-		;ILLEGAL FUNCTION OR,
                                     0535  1134 		RM_ER1_M_ILR!-		;ILLEGAL REGISTER OR,
                                     0535  1135 		RM_ER1_M_RMR!-		;REGISTER MODIFY REFUSE OR,
                                     0535  1136 		RM_ER1_M_UNS!-		;DRIVE UNSAFE OR,
                                     0535  1137 		RM_ER1_M_WLE,R2		;WRITE LOCK ERROR?
                          1B     12  0535  1138 	BNEQ	40$			;IF NEQ YES - FATAL DRIVE ERROR
       009C C5       A000 8F     B3  0537  1139 	BITW	#RM_ER2_M_BSE!-		;BAD SECTOR ERROR OR,
                                     053E  1140 		RM_ER2_M_OPE,UCB$W_DR_ER2(R5) ;OPERATOR PLUG ERROR?
                          12     12  053E  1141 	BNEQ	40$			;IF NEQ YES - FATAL DRIVE ERROR
                                     0540  1142  
                                     0540  1143 ;
                                     0540  1144 ; RETRIABLE ERROR EXIT
                                     0540  1145 ;
                                     0540  1146  
            7E       0080 D5     98  0540  1147 	CVTBL	@UCB$L_DPC(R5),-(SP)	;GET BRANCH DISPLACEMENT
       0080 C5            8E     C0  0545  1148 	ADDL	(SP)+,UCB$L_DPC(R5)	;CALCULATE RETURN ADDRESS - 1
                     0080 C5     D6  054A  1149 30$:	INCL	UCB$L_DPC(R5)		;ADJUST TO CORRECT RETURN ADDRESS
                     0080 D5     17  054E  1150 	JMP	@UCB$L_DPC(R5)		;RETURN TO DRIVER
                                     0552  1151  
                                     0552  1152 ;
                                     0552  1153 ; FATAL CONTROLLER OR DRIVE ERROR EXIT
                                     0552  1154 ;
                                     0552  1155  
                          FDD5   31  0552  1156 40$:	BRW	FATALERR		;
                                     0555  1157 
                                     0555  1158 ;
                                     0555  1159 ; SPECIAL CONDITION (POWER FAILURE OR DEVICE TIME OUT)
                                     0555  1160 ;
                                     0555  1161  
         58 A5            05     E4  0555  1162 50$:	BBSC	#UCB$V_POWER,UCB$W_STS(R5),70$ ;IF SET, POWER FAILURE
                          46         0559       
                                     055A  1163  
                                     055A  1164 ;
                                     055A  1165 ; DEVICE TIME OUT
                                     055A  1166 ;
                                     055A  1167  
                 00000000'GF     16  055A  1168 	JSB	G^ERL$DEVICTMO		;LOG DEVICE TIME OUT
            53         20 A5     D0  0560  1169 	MOVL	UCB$L_CRB(R5),R3	;GET ADDRESS OF CRB
            53         1C A3     D0  0564  1170 	MOVL	CRB$L_INTD+VEC$L_IDB(R3),R3 ;GET ADDRESS OF IDB
         04 A3            55     D1  0568  1171 	CMPL	R5,IDB$L_OWNER(R3)	;DEVICE OWN CONTROLLER?
                          08     12  056C  1172 	BNEQ	60$			;IF NEQ NO
         04 A4            01     D0  056E  1173 	MOVL	#MBA$M_CR_INIT,MBA$L_CR(R4) ;INITIALIZE ENTIRE MBA
         04 A4            04     D0  0572  1174 	MOVL	#MBA$M_CR_IE,MBA$L_CR(R4) ;ENABLE DEVICE INTERRUPTS
                                     0576  1175 60$:	SETIPL	UCB$B_FIPL(R5)		;LOWER TO FORK LEVEL
            50       0000'8F     3C  057A  1176 	MOVZWL	#SS$_TIMEOUT,R0		;SET DEVICE TIMEOUT STATUS
                       70 A5     97  057F  1177 	DECB	UCB$B_ERTCNT(R5)	;ANY ERROR RETRIES REMAINING?
                          0F     13  0582  1178 	BEQL	RESETXFR		;IF EQL NO
                                     0584  1179 	RELCHAN				;RELEASE CHANNEL IF OWNED
         58 A5       0040 8F     AA  058A  1180 	BICW	#UCB$M_TIMOUT,UCB$W_STS(R5) ;CLEAR TIME OUT STATUS
                          FBCC   31  0590  1181 	BRW	FDISPATCH		;
                                     0593  1182  
                                     0593  1183 ;
                                     0593  1184 ; RESET TRANSFER BYTE COUNT TO ZERO
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  23
01              RM03 HARDWARE FUNCTION EXECUTION                                                                                 (1)

                                     0593  1185 ;
                                     0593  1186  
                                     0593  1187 RESETXFR:				;
            53         4C A5     D0  0593  1188 	MOVL	UCB$L_IRP(R5),R3	;RETRIEVE ADDRESS OF I/O PACKET
       0096 C5         32 A3     AE  0597  1189 	MNEGW	IRP$W_BCNT(R3),UCB$W_BCR(R5) ;RESET TRANSFER BYTE COUNT
                          FE0B   31  059D  1190 	BRW	FUNCXT			;
                                     05A0  1191  
                                     05A0  1192 ;
                                     05A0  1193 ; POWER FAILURE
                                     05A0  1194 ;
                                     05A0  1195  
                                     05A0  1196 70$:	RELCHAN				;RELEASE CHANNEL
            53         4C A5     D0  05A6  1197 	MOVL	UCB$L_IRP(R5),R3	;RETRIEVE ADDRESS OF I/O PACKET
         68 A5         2C A3     7D  05AA  1198 	MOVQ	IRP$L_SVAPTE(R3),UCB$L_SVAPTE(R5) ;RESTORE TRANSFER PARAMETERS
                          FB44   31  05AF  1199 	BRW	DR_STARTIO			;
                                     05B2  1200 	.DSABL	LSB
                                     05B2  1201 
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  24
01              RM03 REGISTER DUMP ROUTINE                                                                                       (1)

                                     05B2  1203 	.SBTTL	RM03 REGISTER DUMP ROUTINE
                                     05B2  1204 ;
                                     05B2  1205 ; DR_REGDUMP - RM03 REGISTER DUMP ROUTINE
                                     05B2  1206 ;
                                     05B2  1207 ; THIS ROUTINE IS CALLED TO SAVE THE CONTROLLER AND DRIVE REGISTERS IN A
                                     05B2  1208 ; SPECIFIED BUFFER. IT IS CALLED FROM THE DEVICE ERROR LOGGING ROUTINE AND
                                     05B2  1209 ; FROM THE DIAGNOSTIC BUFFER FILL ROUTINE.
                                     05B2  1210 ;
                                     05B2  1211 ; INPUTS:
                                     05B2  1212 ;
                                     05B2  1213 ;	R0 = ADDRESS OF REGISTER SAVE BUFFER.
                                     05B2  1214 ;	R4 = ADDRESS OF ADAPTER CONFIGURATION REGISTER.
                                     05B2  1215 ;	R5 = DEVICE UNIT UCB ADDRESS.
                                     05B2  1216 ;
                                     05B2  1217 ; OUTPUTS:
                                     05B2  1218 ;
                                     05B2  1219 ;	THE CONTROLLER AND DRIVE REGISTERS ARE SAVED IN THE SPECIFIED BUFFER.
                                     05B2  1220 ;
                                     05B2  1221  
                                     05B2  1222 DR_REGDUMP:				;RM03 REGISTER DUMP ROUTINE
            80            17     D0  05B2  1223 	MOVL	#<RM_EC2+4+MBA$L_BCR+4+8>/4,(R0)+ ;INSERT NUMBER OF DEVICE REGISTERS
            80            64     D0  05B5  1224 	MOVL	MBA$L_CSR(R4),(R0)+	;SAVE CONFIGURATION REGISTER
            80         04 A4     D0  05B8  1225 	MOVL	MBA$L_CR(R4),(R0)+	;SAVE CONTROL REGISTER
            80       0098 C5     D0  05BC  1226 	MOVL	UCB$L_DR_SR(R5),(R0)+	;SAVE STATUS REGISTER
            80         0C A4     D0  05C1  1227 	MOVL	MBA$L_VAR(R4),(R0)+	;SAVE VIRTUAL ADDRESS REGISTER
            80         10 A4     D0  05C5  1228 	MOVL	MBA$L_BCR(R4),(R0)+	;SAVE BYTE COUNT REGISTER
            08            09     EF  05C9  1229 	EXTZV	#9,#8,-8(R0),R1		;GET FINAL MAP REGISTER NUMBER
            51         F8 A0         05CC       
            80       0800 C441   D0  05CF  1230 	MOVL	MBA$L_MAP(R4)[R1],(R0)+	;SAVE FINAL MAP REGISTER CONTENTS
                          80     D4  05D5  1231 	CLRL	(R0)+			;ASSUME NO PREVIOUS MAP REGISTER
                          51     D7  05D7  1232 	DECL	R1			;CALCULATE PREVIOUS MAP REGISTER NUMBER
                          07     19  05D9  1233 	BLSS	10$			;IF LSS NONE
         FC A0       0800 C441   D0  05DB  1234 	MOVL	MBA$L_MAP(R4)[R1],-4(R0) ;SAVE PREVIOUS MAP REGISTER CONTENTS
            51            10     9A  05E2  1235 10$:	MOVZBL	#<RM_EC2+4>/4,R1	;SET NUMBER OF DRIVE REGISTERS TO SAVE
            52         75 A5     9A  05E5  1236 	MOVZBL	UCB$B_SLAVE+1(R5),R2	;GET DRIVE OFFSET CONSTANT
            52       0400 C442   DE  05E9  1237 	MOVAL	MBA$L_ERB(R4)[R2],R2	;GET ADDRESS OF DRIVE REGISTERS
            80            82     D0  05EF  1238 20$:	MOVL	(R2)+,(R0)+		;SAVE DRIVE REGISTER
            FA            51     F5  05F2  1239 	SOBGTR	R1,20$			;ANY MORE TO SAVE?
                                 05  05F5  1240 	RSB				;
                                     05F6  1241  
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  25
01              RM03 DISK DRIVE INITIALIZATION                                                                                   (1)

                                     05F6  1243 	.SBTTL	RM03 DISK DRIVE INITIALIZATION
                                     05F6  1244 ;
                                     05F6  1245 ; DR_UNIT_INIT - RM03 DISK DRIVE UNIT INITIALIZATION
                                     05F6  1246 ;
                                     05F6  1247 ; THIS ROUTINE IS CALLED AT SYSTEM INITIALIZATION AND AT POWER RECOVERY TO SET
                                     05F6  1248 ; DRIVE PARAMETERS AND TO WAIT FOR ONLINE DRIVES TO SPIN UP.
                                     05F6  1249 ;
                                     05F6  1250 ; INPUTS:
                                     05F6  1251 ;
                                     05F6  1252 ;	R4 = ADDRESS OF MBA CONFIGURATION STATUS REGISTER.
                                     05F6  1253 ;	R5 = DEVICE UNIT UCB ADDRESS.
                                     05F6  1254 ;
                                     05F6  1255 ; OUTPUTS:
                                     05F6  1256 ;
                                     05F6  1257 ;	UNIT PARAMETERS ARE ESTABLISHED AND THE DRIVE IS SPUN UP IF IT WAS ONLINE.
                                     05F6  1258 ;
                                     05F6  1259  
                                     05F6  1260 DR_UNIT_INIT:				;RM03 DISK DRIVE UNIT INITIALIZATION
            53         48 A5     3C  05F6  1261 	MOVZWL	UCB$W_UNIT(R5),R3	;GET DRIVE UNIT NUMBER
         74 A5            53     90  05FA  1262 	MOVB	R3,UCB$B_SLAVE(R5)	;SET SLAVE UNIT NUMBER
            53            20     C4  05FE  1263 	MULL	#<1@7>/4,R3		;CALCULATE DRIVE OFFSET CONSTANT
         75 A5            53     90  0601  1264 	MOVB	R3,UCB$B_SLAVE+1(R5)	;SET SLAVE OFFSET CONSTANT
            53       0400 C443   DE  0605  1265 	MOVAL	MBA$L_ERB(R4)[R3],R3	;GET ADDRESS OF DRIVE CONTROL REGISTER
            63            09     9A  060B  1266 	MOVZBL	#F_DRVCLR!1,RM_CS1(R3)	;CLEAR DRIVE
            7E         58 A5     3C  060E  1267 	MOVZWL	UCB$W_STS(R5),-(SP)	;SAVE CURRENT UNIT STATUS
                       08 A4     DD  0612  1268 	PUSHL	MBA$L_SR(R4)		;READ MBA STATUS REGISTER
         58 A5       0810 8F     AA  0615  1269 	BICW	#UCB$M_ONLINE!UCB$M_VALID,UCB$W_STS(R5) ;SET UNIT OFFLINE/INVALID
            6E            12     E0  061B  1270 	BBS	#MBA$V_SR_NED,(SP),40$	;IF SET, NONEXISTENT DISK
                          32         061E       
         58 A5            10     A8  061F  1271 	BISW	#UCB$M_ONLINE,UCB$W_STS(R5) ;SET UNIT ONLINE
                          0061   30  0623  1272 	BSBW	DR_DTYPE		;CLASSIFY DRIVE TYPE
         58 A5            04     E1  0626  1273 	BBC	#UCB$V_ONLINE,UCB$W_STS(R5),30$ ;IF CLR, UNKNOWN DRIVE TYPE
                          23         062A       
         04 AE            0B     E1  062B  1274 	BBC	#UCB$V_VALID,4(SP),30$	;IF CLR, VOLUME SOFTWARE INVALID
                          1E         062F       
            63            09     9A  0630  1275 10$:	MOVZBL	#F_DRVCLR!1,RM_CS1(R3)	;CLEAR DRIVE
            63            13     9A  0633  1276 	MOVZBL	#F_PACKACK!1,RM_CS1(R3)	;ACKNOWLEDGE PACK
         04 A3            19     78  0636  1277 	ASHL	#31-RM_DS_V_VV,RM_DS(R3),R2 ;VOLUME VALID?
                          52         063A       
                          0B     19  063B  1278 	BLSS	20$			;IF LSS YES
                 00000000'GF     16  063D  1279 	JSB	G^EXE$PWRTIMCHK		;CHECK FOR MAXIMUM TIME EXCEEDED
            EA            50     E8  0643  1280 	BLBS	R0,10$			;IF LBS MORE TIME TO GO
                          06     11  0646  1281 	BRB	30$			;
         58 A5       0800 8F     A8  0648  1282 20$:	BISW	#UCB$M_VALID,UCB$W_STS(R5) ;SET VOLUME SOFTWARE VALID
            63            09     9A  064E  1283 30$:	MOVZBL	#F_DRVCLR!1,RM_CS1(R3)	;CLEAR DRIVE
            8E            8E     C9  0651  1284 40$:	BISL3	(SP)+,(SP)+,MBA$L_SR(R4) ;CLEAR MBA STATUS
                       08 A4         0654       
                                 05  0656  1285 	RSB				;
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  26
01              RM03 UNSOLICITED INTERRUPT ROUTINE                                                                               (1)

                                     0657  1287 	.SBTTL	RM03 UNSOLICITED INTERRUPT ROUTINE
                                     0657  1288 ;
                                     0657  1289 ; DR_UNSOLNT - RM03 UNSOLICITED INTERRUPT ROUTINE
                                     0657  1290 ;
                                     0657  1291 ; THIS ROUTINE IS CALLED WHEN AN UNSOLICITED ATTENTION CONDITION IS DETECTED FOR
                                     0657  1292 ; AN RM03 TYPE DRIVE.
                                     0657  1293 ;
                                     0657  1294 ; INPUTS:
                                     0657  1295 ;
                                     0657  1296 ;	R4 = ADDRESS OF CONFIGURATION STATUS REGISTER.
                                     0657  1297 ;	R5 = DEVICE UNIT UCB ADDRESS.
                                     0657  1298 ;
                                     0657  1299 ; OUTPUTS:
                                     0657  1300 ;
                                     0657  1301 ;	IF VOLUME VALID IS CLEAR, THEN SOFTWARE VOLUME VALID IS CLEARED. THE
                                     0657  1302 ;	UNIT STATUS IS CHANGED TO ONLINE AND THE DRIVE TYPE AND PARAMETERS ARE
                                     0657  1303 ;	CLASSIFIED.
                                     0657  1304 ;
                                     0657  1305  
                                     0657  1306 DR_UNSOLNT:				;RM03 UNSOLICITED INTERRUPT
            53         75 A5     9A  0657  1307 	MOVZBL	UCB$B_SLAVE+1(R5),R3	;GET DRIVE OFFSET CONSTANT
            53       0400 C443   DE  065B  1308 	MOVAL	MBA$L_ERB(R4)[R3],R3	;GET ADDRESS OF DRIVE CONTROL REGISTER
         58 A5            10     A8  0661  1309 	BISW	#UCB$M_ONLINE,UCB$W_STS(R5) ;SET UNIT ONLINE
                          001F   30  0665  1310 	BSBW	DR_DTYPE		;CLASSIFY DRIVE TYPE
         58 A5            04     E1  0668  1311 	BBC	#UCB$V_ONLINE,UCB$W_STS(R5),10$ ;IF CLR, UNKNOWN DRIVE TYPE
                          13         066C       
         58 A5            0B     E1  066D  1312 	BBC	#UCB$V_VALID,UCB$W_STS(R5),20$ ;IF CLR, VOLUME SOFTWARE INVALID
                          14         0671       
         04 A3            13     78  0672  1313 	ASHL	#31-RM_DS_V_MOL,RM_DS(R3),R2 ;MEDIUM ONLINE?
                          52         0676       
                          07     18  0677  1314 	BGEQ	10$			;IF GEQ NO
         04 A3            19     78  0679  1315 	ASHL	#31-RM_DS_V_VV,RM_DS(R3),R2 ;VOLUME VALID?
                          52         067D       
                          06     19  067E  1316 	BLSS	20$			;IF LSS YES
         58 A5       0800 8F     AA  0680  1317 10$:	BICW	#UCB$M_VALID,UCB$W_STS(R5) ;CLEAR SOFTWARE VOLUME VALID
                                 05  0686  1318 20$:	RSB				;
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  27
01              CLASSIFY RM03 DRIVE TYPE AND SET PARAMETERS                                                                      (1)

                                     0687  1320 	.SBTTL	CLASSIFY RM03 DRIVE TYPE AND SET PARAMETERS
                                     0687  1321 ;
                                     0687  1322 ; RM_DTYPE - CLASSIFY RM03 DRIVE TYPE AND SET PARAMETERS
                                     0687  1323 ;
                                     0687  1324 ; THIS ROUTINE IS CALLED WHEN AN UNSOLICITED INTERRUPT OCCURS ON A DRIVE, DURING
                                     0687  1325 ; SYSTEM INITIALIZATION, AND AT POWER RECOVERY TO DETERMINE THE DRIVE TYPE AND
                                     0687  1326 ; SET UNIT PARAMETERS.
                                     0687  1327 ;
                                     0687  1328 ; INPUTS:
                                     0687  1329 ;
                                     0687  1330 ;	R3 = ADDRESS OF DRIVE CONTROL REGISTER.
                                     0687  1331 ;	R4 = ADDRESS OF MBA CONFIGURATION STATUS REGISTER.
                                     0687  1332 ;	R5 = DEVICE UNIT UCB ADDRESS.
                                     0687  1333 ;
                                     0687  1334 ; OUTPUTS:
                                     0687  1335 ;
                                     0687  1336 ;	THE DRIVE TYPE REGISTER IS INTERROGATED AND UNIT PARAMETERS ARE SET.
                                     0687  1337 ;
                                     0687  1338  
                                     0687  1339 DR_DTYPE:				;CLASSIFY DRIVE TYPE AND SET PARAMETERS
                       18 A3     DD  0687  1340 	PUSHL	RM_DT(R3)		;READ DRIVE TYPE REGISTER
            6E       FE00 8F     AA  068A  1341 	BICW	#^C<^X1FF>,(SP)		;CLEAR EXTRANEOUS BITS
            52       F989 CF     9E  068F  1342 	MOVAB	DR_DTDESC,R2		;GET ADDRESS OF DESCRIPTOR TABLE
            82            6E     B1  0694  1343 10$:	CMPW	(SP),(R2)+		;DRIVE TYPE MATCH?
                          0E     13  0697  1344 	BEQL	20$			;IF EQL YES
            52            09     C0  0699  1345 	ADDL	#DR_DTDESCLEN-2,R2	;ADVANCE TO NEXT ENTRY
                          62     B5  069C  1346 	TSTW	(R2)			;END OF TABLE?
                          F4     12  069E  1347 	BNEQ	10$			;IF NEQ NO
         58 A5            10     AA  06A0  1348 	BICW	#UCB$M_ONLINE,UCB$W_STS(R5) ;SET UNIT OFFLINE
            52            09     C2  06A4  1349 	SUBL	#DR_DTDESCLEN-2,R2	;BACK UP TO LAST DRIVE DESCRIPTOR
         39 A5            82     90  06A7  1350 20$:	MOVB	(R2)+,UCB$B_DEVTYPE(R5)	;SET DEVICE TYPE
         3C A5            82     D0  06AB  1351 	MOVL	(R2)+,UCB$L_DEVDEPEND(R5) ;SET DISK PACK GEOMETRY
       0084 C5            62     D0  06AF  1352 	MOVL	(R2),UCB$L_MAXBLOCK(R5) ;SET MAXIMUM BLOCKS PER PACK
                          8E     D5  06B4  1353 	TSTL	(SP)+			;REMOVE DRIVE TYPE FROM STACK
                                 05  06B6  1354 	RSB				;
                                     06B7  1355 DR_END:					;ADDRESS OF LAST LOCATION IN DRIVER
                                     06B7  1356 
                                     06B7  1357 	.END
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  28
SYMBOL TABLE                                                                                                                     (1)

$$OP           = 00000002            DDB$L_UCB        00000004            EMB$B_DEVTYP     00000004            
ACP$ACCESS       ********   X   04   DDB$T_DRVNAME    00000024            EMB$B_DV_CLASS   0000001C            
ACP$DEACCESS     ********   X   04   DDB$T_NAME       00000014            EMB$B_DV_ERTCNT  00000010            
ACP$MODIFY       ********   X   04   DDB$W_SIZE       00000008            EMB$B_DV_ERTMAX  00000011            
ACP$MOUNT        ********   X   04   DEV$M_AVL        ********   X   03   EMB$B_DV_SLAVE   0000003A            
ACP$READBLK      ********   X   04   DEV$M_DIR        ********   X   03   EMB$B_DV_TYPE    0000001D            
ACP$WRITEBLK     ********   X   04   DEV$M_ELG        ********   X   03   EMB$B_VALID      00000003            
AT$_MBA          ********   X   03   DEV$M_FOD        ********   X   03   EMB$C_AW       = 00000007            
BIT...         = 0000000B            DEV$M_IDV        ********   X   03   EMB$C_BE       = 00000004            
CDF_DIAGNOSE   = 00000013            DEV$M_ODV        ********   X   03   EMB$C_CR       = 00000025            
CDF_DRVCLR     = 00000004            DEV$M_RND        ********   X   03   EMB$C_CS       = 00000020            
CDF_NOP        = 00000001            DEV$M_SHR        ********   X   03   EMB$C_DE       = 00000001            
CDF_OFFSET     = 00000006            DIAGNOSE         000001C6 R     04   EMB$C_DT       = 00000060            
CDF_PACKACK    = 00000008            DPT$B_ADPTYPE    0000000C            EMB$C_HE       = 00000008            
CDF_READDATA   = 0000000C            DPT$B_FLAGS      0000000D            EMB$C_LENGTH     00000004            
CDF_READHEAD   = 0000000E            DPT$B_REFC       0000000B            EMB$C_MC       = 00000002            
CDF_READPRESET = 00000012            DPT$B_TYPE       0000000A            EMB$C_NF       = 00000023            
CDF_READTRACKD = 00000010            DPT$C_LENGTH     00000022            EMB$C_NM       = 0000002A            
CDF_RECAL      = 00000003            DPT$INITAB       0000001F R     03   EMB$C_OM       = 00000029            
CDF_RELEASE    = 00000005            DPT$K_LENGTH     00000022            EMB$C_SA       = 00000005            
CDF_RETCENTER  = 00000007            DPT$L_BLINK      00000004            EMB$C_SBC      = 00000028            
CDF_SEARCH     = 00000009            DPT$L_FLINK      00000000            EMB$C_SE       = 00000006            
CDF_SEARCHA    = 00000014            DPT$M_NOUNLOAD = 00000004            EMB$C_SS       = 00000027            
CDF_SEEK       = 00000002            DPT$M_SUBCNTRL = 00000001            EMB$C_TS       = 00000026            
CDF_WRITECHECK = 0000000A            DPT$M_SVP      = 00000002            EMB$C_TS_LENGTH  00000010            
CDF_WRITECHECKH= 00000011            DPT$REINITAB     0000004A R     03   EMB$C_UBC      = 00000070            
CDF_WRITEDATA  = 0000000B            DPT$TAB          00000000 R     03   EMB$C_UI       = 00000061            
CDF_WRITEHEAD  = 0000000D            DPT$T_NAME       00000016            EMB$C_VD       = 00000041            
CDF_WRITETRACKD= 0000000F            DPT$V_NOUNLOAD = 00000002            EMB$C_VM       = 00000040            
CHECKRETRY       00000206 R     04   DPT$V_SUBCNTRL = 00000000            EMB$C_WS       = 00000024            
CHECKTAB         00000018 R     04   DPT$V_SVP      = 00000001            EMB$K_AW       = 00000007            
CHECKXT          0000021F R     04   DPT$W_INITTAB    00000010            EMB$K_BE       = 00000004            
CRB$B_MASK       0000000E            DPT$W_REINITTAB  00000012            EMB$K_CR       = 00000025            
CRB$B_TT_ATTN    00000004            DPT$W_SIZE       00000008            EMB$K_CS       = 00000020            
CRB$B_TT_EXPEC   00000005            DPT$W_UCBSIZE    0000000E            EMB$K_DE       = 00000001            
CRB$B_TYPE       0000000A            DPT$W_UNLOAD     00000014            EMB$K_DT       = 00000060            
CRB$C_LENGTH     00000038            DR$DDT           00000000 RG    04   EMB$K_HE       = 00000008            
CRB$K_LENGTH     00000038            DRVCLR           0000019F R     04   EMB$K_LENGTH     00000004            
CRB$L_INTD       00000014            DR_DTDESC        0000001C R     04   EMB$K_MC       = 00000002            
CRB$L_INTD2      00000038            DR_DTDESCLEN   = 0000000B            EMB$K_NF       = 00000023            
CRB$L_LINK       00000010            DR_DTYPE         00000687 R     04   EMB$K_NM       = 0000002A            
CRB$L_TT_DIAL    00000000            DR_END           000006B7 R     04   EMB$K_OM       = 00000029            
CRB$L_WQBL       00000004            DR_FUNCTABLE     0000006E R     04   EMB$K_SA       = 00000005            
CRB$L_WQFL       00000000            DR_REGDUMP       000005B2 R     04   EMB$K_SBC      = 00000028            
CRB$M_BSY      = 00000001            DR_STARTIO       000000F6 R     04   EMB$K_SE       = 00000006            
CRB$V_BSY      = 00000000            DR_UNIT_INIT     000005F6 R     04   EMB$K_SS       = 00000027            
CRB$W_REFC       0000000C            DR_UNSOLNT       00000657 R     04   EMB$K_TS       = 00000026            
CRB$W_SIZE       00000008            DT$_RM03         ********   X   04   EMB$K_TS_LENGTH  00000010            
DATACHECK        000001D4 R     04   DT$_RP07         ********   X   04   EMB$K_UBC      = 00000070            
DC$_DISK         ********   X   03   DT$_RP07HT       ********   X   04   EMB$K_UI       = 00000061            
DDB$B_ACPCLASS   00000013            DYN$C_CRB        ********   X   03   EMB$K_VD       = 00000041            
DDB$B_TYPE       0000000A            DYN$C_DDB        ********   X   03   EMB$K_VM       = 00000040            
DDB$C_LENGTH     00000034            DYN$C_DPT        ********   X   03   EMB$K_WS       = 00000024            
DDB$K_LENGTH     00000034            DYN$C_UCB        ********   X   03   EMB$L_DV_CHAR    00000036            
DDB$L_ACPD       00000010            ECC              0000024A R     04   EMB$L_DV_MEDIA   00000026            
DDB$L_DDT        0000000C            EMB$B_BUFIND     00000002            EMB$L_DV_OPCNT   0000002E            
DDB$L_LINK       00000000            EMB$B_DEVCLS     00000005            EMB$L_DV_OWNUIC  00000032            
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  29
SYMBOL TABLE                                                                                                                     (1)

EMB$L_DV_REGSAV  0000004E            IDB$B_TYPE       0000000A            IO$V_CTRLCAST  = 00000008            
EMB$L_DV_RQPID   0000001E            IDB$B_UNITS      0000000B            IO$V_CTRLYAST  = 00000007            
EMB$Q_DV_IOSB    00000012            IDB$C_LENGTH     00000030            IO$V_CVTLOW    = 00000008            
EMB$Q_DV_TIME    00000006            IDB$K_LENGTH     00000030            IO$V_DATACHECK = 0000000E            
EMB$Q_HD_TIME    00000006            IDB$L_ADP        0000000C            IO$V_DELETE    = 00000008            
EMB$Q_TS_TIME    00000006            IDB$L_CSR        00000000            IO$V_DMOUNT    = 0000000A            
EMB$T_DV_NAME    0000003E            IDB$L_OWNER      00000004            IO$V_DSABLMBX  = 0000000A            
EMB$W_DV_BCNT    00000024            IDB$L_UCBLST     00000010            IO$V_ENABLMBX  = 00000007            
EMB$W_DV_BOFF    00000022            IDB$W_SIZE       00000008            IO$V_FCODE     = 00000000            
EMB$W_DV_DEVSTS  0000001A            IMMED            00000419 R     04   IO$V_HANGUP    = 00000009            
EMB$W_DV_ENTRY   00000004            IO$M_ABORT     = 00000100            IO$V_INHERLOG  = 0000000B            
EMB$W_DV_ERRCNT  0000002C            IO$M_ACCESS    = 00000040            IO$V_INHEXTGAP = 0000000C            
EMB$W_DV_ERRSEQ  0000000E            IO$M_ATTNAST   = 00000100            IO$V_INHRETRY  = 0000000F            
EMB$W_DV_FUNC    0000003C            IO$M_BINARY    = 00000040            IO$V_INHSEEK   = 0000000C            
EMB$W_DV_UNIT    0000002A            IO$M_CANCTRLO  = 00000040            IO$V_INTERRUPT = 00000006            
EMB$W_HD_ENTRY   00000004            IO$M_COMMOD    = 00000040            IO$V_INTSKIP   = 00000008            
EMB$W_HD_ERRSEQ  0000000E            IO$M_CREATE    = 00000080            IO$V_MOUNT     = 00000009            
EMB$W_SIZE       00000000            IO$M_CTRLCAST  = 00000100            IO$V_NOECHO    = 00000006            
EMB$W_TS_ENTRY   00000004            IO$M_CTRLYAST  = 00000080            IO$V_NOFILTR   = 00000009            
EMB$W_TS_ERRSEQ  0000000E            IO$M_CVTLOW    = 00000100            IO$V_NOFORMAT  = 00000008            
ENBXIT           000004B7 R     04   IO$M_DATACHECK = 00004000            IO$V_NOW       = 00000006            
ERL$DEVICERR     ********   X   04   IO$M_DELETE    = 00000100            IO$V_NOWAIT    = 00000007            
ERL$DEVICTMO     ********   X   04   IO$M_DMOUNT    = 00000400            IO$V_PACKED    = 00000007            
ERROR            000004D6 R     04   IO$M_DSABLMBX  = 00000400            IO$V_PURGE     = 0000000B            
EXE$IOFORK       ********   X   04   IO$M_ENABLMBX  = 00000080            IO$V_READATTN  = 00000007            
EXE$ONEPARM      ********   X   04   IO$M_FCODE     = 0000003F            IO$V_REVERSE   = 00000006            
EXE$PWRTIMCHK    ********   X   04   IO$M_HANGUP    = 00000200            IO$V_SHUTDOWN  = 00000007            
EXE$SENSEMODE    ********   X   04   IO$M_INHERLOG  = 00000800            IO$V_STARTUP   = 00000006            
EXE$SETCHAR      ********   X   04   IO$M_INHEXTGAP = 00001000            IO$V_SYNCH     = 00000009            
EXE$ZEROPARM     ********   X   04   IO$M_INHRETRY  = 00008000            IO$V_TIMED     = 00000007            
EXFNC            0000045E R     04   IO$M_INHSEEK   = 00001000            IO$V_TRMNOECHO = 0000000C            
FATALERR         0000032A R     04   IO$M_INTERRUPT = 00000040            IO$V_WRTATTN   = 00000008            
FDISPATCH        0000015F R     04   IO$M_INTSKIP   = 00000100            IO$_ACCESS     = 00000032            
FEX              000003DC R     04   IO$M_MOUNT     = 00000200            IO$_ACPCONTROL = 00000038            
FTAB             00000055 R     04   IO$M_NOECHO    = 00000040            IO$_CREATE     = 00000033            
FUNCXT           000003AB R     04   IO$M_NOFILTR   = 00000200            IO$_DEACCESS   = 00000034            
F_DIAGNOSE     = 0000001C            IO$M_NOFORMAT  = 00000100            IO$_DELETE     = 00000035            
F_DRVCLR       = 00000008            IO$M_NOW       = 00000040            IO$_DIAGNOSE   = 0000001D            
F_NOP          = 00000000            IO$M_NOWAIT    = 00000080            IO$_DRVCLR     = 00000004            
F_OFFSET       = 0000000C            IO$M_PACKED    = 00000080            IO$_ERASETAPE  = 00000006            
F_PACKACK      = 00000012            IO$M_PURGE     = 00000800            IO$_LOGICAL    = 0000002F            
F_READDATA     = 00000038            IO$M_READATTN  = 00000080            IO$_MODIFY     = 00000036            
F_READHEAD     = 0000003A            IO$M_REVERSE   = 00000040            IO$_MOUNT      = 00000039            
F_READPRESET   = 00000010            IO$M_SHUTDOWN  = 00000080            IO$_NOP        = 00000000            
F_READTRACKD   = 0000003C            IO$M_STARTUP   = 00000040            IO$_OFFSET     = 00000006            
F_RECAL        = 00000006            IO$M_SYNCH     = 00000200            IO$_PACKACK    = 00000008            
F_RELEASE      = 0000000A            IO$M_TIMED     = 00000080            IO$_PHYSICAL   = 0000001F            
F_RETCENTER    = 0000000E            IO$M_TRMNOECHO = 00001000            IO$_READHEAD   = 0000000E            
F_SEARCH       = 00000018            IO$M_WRTATTN   = 00000100            IO$_READLBLK   = 00000021            
F_SEARCHA      = 00000018            IO$S_FCODE     = 00000006            IO$_READPBLK   = 0000000C            
F_SEEK         = 00000004            IO$V_ABORT     = 00000008            IO$_READPRESET = 00000019            
F_WRITECHECK   = 00000028            IO$V_ACCESS    = 00000006            IO$_READPROMPT = 00000037            
F_WRITECHECKH  = 0000002A            IO$V_ATTNAST   = 00000008            IO$_READTRACKD = 00000010            
F_WRITEDATA    = 00000030            IO$V_BINARY    = 00000006            IO$_READVBLK   = 00000031            
F_WRITEHEAD    = 00000032            IO$V_CANCTRLO  = 00000006            IO$_RECAL      = 00000003            
F_WRITETRACKD  = 00000034            IO$V_COMMOD    = 00000006            IO$_RELEASE    = 00000005            
GBL...         = 00000000            IO$V_CREATE    = 00000007            IO$_RETCENTER  = 00000007            
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  30
SYMBOL TABLE                                                                                                                     (1)

IO$_REWIND     = 00000024            IRP$M_CHAINED  = 00000020            MBA$M_CSR_WS   = 40000000            
IO$_REWINDOFF  = 00000022            IRP$M_COMPLX   = 00000008            MBA$M_CSR_XMFLT= 04000000            
IO$_SEARCH     = 00000009            IRP$M_DIAGBUF  = 00000080            MBA$M_ERROR    = 000E1FFF            
IO$_SEEK       = 00000002            IRP$M_FUNC     = 00000002            MBA$M_SR_ATTN  = 00010000            
IO$_SENSECHAR  = 0000001B            IRP$M_MBXIO    = 00000400            MBA$M_SR_CRD   = 20000000            
IO$_SENSEMODE  = 00000027            IRP$M_PAGIO    = 00000004            MBA$M_SR_DLT   = 00000800            
IO$_SETCHAR    = 0000001A            IRP$M_PHYSIO   = 00000100            MBA$M_SR_DTABT = 00001000            
IO$_SETMODE    = 00000023            IRP$M_PRIVIO   = 00000200            MBA$M_SR_DTBUSY= 80000000            
IO$_SKIPFILE   = 00000025            IRP$M_SWAPIO   = 00000040            MBA$M_SR_DTCOMP= 00002000            
IO$_SKIPRECORD = 00000026            IRP$M_VIRTUAL  = 00000010            MBA$M_SR_ERCONF= 00000008            
IO$_SPACEFILE  = 00000002            IRP$Q_NT_PRVMSK  0000003C            MBA$M_SR_INVMAP= 00000010            
IO$_SPACERECORD= 00000009            IRP$S_FCODE    = 00000006            MBA$M_SR_ISTO  = 00000002            
IO$_STARTSPNDL = 00000019            IRP$S_FMOD     = 0000000A            MBA$M_SR_MAPPE = 00000020            
IO$_UNLOAD     = 00000001            IRP$S_MODE     = 00000002            MBA$M_SR_MBEXC = 00000080            
IO$_VIRTUAL    = 0000003F            IRP$V_BUFIO    = 00000000            MBA$M_SR_MCPE  = 00020000            
IO$_WRITECHECK = 0000000A            IRP$V_CHAINED  = 00000005            MBA$M_SR_MDPE  = 00000040            
IO$_WRITECHECKH= 00000018            IRP$V_COMPLX   = 00000003            MBA$M_SR_MXF   = 00000100            
IO$_WRITEHEAD  = 0000000D            IRP$V_DIAGBUF  = 00000007            MBA$M_SR_NED   = 00040000            
IO$_WRITELBLK  = 00000020            IRP$V_FCODE    = 00000000            MBA$M_SR_NRCONF= 40000000            
IO$_WRITEMARK  = 0000001C            IRP$V_FMOD     = 00000006            MBA$M_SR_PGE   = 00080000            
IO$_WRITEOF    = 00000028            IRP$V_FUNC     = 00000001            MBA$M_SR_RDS   = 00000004            
IO$_WRITEPBLK  = 0000000B            IRP$V_MBXIO    = 0000000A            MBA$M_SR_RDTO  = 00000001            
IO$_WRITETRACKD= 0000000F            IRP$V_MODE     = 00000000            MBA$M_SR_WCKLWR= 00000200            
IO$_WRITEVBLK  = 00000030            IRP$V_PAGIO    = 00000002            MBA$M_SR_WCKUPR= 00000400            
IOC$APPLYECC     ********   X   04   IRP$V_PHYSIO   = 00000008            MBA$S_CSR_ADCOD= 00000008            
IOC$DIAGBUFILL   ********   X   04   IRP$V_PRIVIO   = 00000009            MBA$S_ERB_UNIT = 00000003            
IOC$LOADMBAMAP   ********   X   04   IRP$V_SWAPIO   = 00000006            MBA$V_CR_ABORT = 00000001            
IOC$RELCHAN      ********   X   04   IRP$V_VIRTUAL  = 00000004            MBA$V_CR_IE    = 00000002            
IOC$REQCOM       ********   X   04   IRP$W_ABCNT      0000003C            MBA$V_CR_INIT  = 00000000            
IOC$REQPCHANL    ********   X   04   IRP$W_BCNT       00000032            MBA$V_CSR_ADCOD= 00000000            
IOC$RETURN       ********   X   04   IRP$W_BOFF       00000030            MBA$V_CSR_MT   = 0000001B            
IOC$UPDATRANSP   ********   X   04   IRP$W_CHAN       00000028            MBA$V_CSR_OT   = 00000015            
IOC$WFIKPCH      ********   X   04   IRP$W_FUNC       00000020            MBA$V_CSR_PD   = 00000017            
IRP$B_CARCON     00000038            IRP$W_OBCNT      0000003E            MBA$V_CSR_PE   = 0000001F            
IRP$B_EFN        00000022            IRP$W_SIZE       00000008            MBA$V_CSR_PU   = 00000016            
IRP$B_PRI        00000023            IRP$W_STS        0000002A            MBA$V_CSR_URD  = 0000001D            
IRP$B_RMOD       0000000B            IRP$W_TT_PRMPT   0000003C            MBA$V_CSR_WS   = 0000001E            
IRP$B_TYPE       0000000A            LDCYL            00000458 R     04   MBA$V_CSR_XMFLT= 0000001A            
IRP$C_LENGTH     0000004C            MASKH          = 00000008            MBA$V_ERB_UNIT = 00000007            
IRP$K_LENGTH     0000004C            MASKL          = 04000000            MBA$V_SR_ATTN  = 00000010            
IRP$L_AST        00000010            MBA$L_AS         00000410            MBA$V_SR_CRD   = 0000001D            
IRP$L_ASTPRM     00000014            MBA$L_BCR        00000010            MBA$V_SR_DLT   = 0000000B            
IRP$L_DIAGBUF    00000044            MBA$L_CR         00000004            MBA$V_SR_DTABT = 0000000C            
IRP$L_IOQBL      00000004            MBA$L_CSR        00000000            MBA$V_SR_DTBUSY= 0000001F            
IRP$L_IOQFL      00000000            MBA$L_ERB        00000400            MBA$V_SR_DTCOMP= 0000000D            
IRP$L_IOSB       00000024            MBA$L_MAP        00000800            MBA$V_SR_ERCONF= 00000003            
IRP$L_IOST1      00000034            MBA$L_SR         00000008            MBA$V_SR_INVMAP= 00000004            
IRP$L_IOST2      00000038            MBA$L_VAR        0000000C            MBA$V_SR_ISTO  = 00000001            
IRP$L_MEDIA      00000034            MBA$M_CR_ABORT = 00000002            MBA$V_SR_MAPPE = 00000005            
IRP$L_PID        0000000C            MBA$M_CR_IE    = 00000004            MBA$V_SR_MBEXC = 00000007            
IRP$L_SEGVBN     00000040            MBA$M_CR_INIT  = 00000001            MBA$V_SR_MCPE  = 00000011            
IRP$L_SEQNUM     00000048            MBA$M_CSR_MT   = 08000000            MBA$V_SR_MDPE  = 00000006            
IRP$L_SVAPTE     0000002C            MBA$M_CSR_OT   = 00200000            MBA$V_SR_MXF   = 00000008            
IRP$L_TT_TERM    00000038            MBA$M_CSR_PD   = 00800000            MBA$V_SR_NED   = 00000012            
IRP$L_UCB        0000001C            MBA$M_CSR_PE   = 80000000            MBA$V_SR_NRCONF= 0000001E            
IRP$L_WIND       00000018            MBA$M_CSR_PU   = 00400000            MBA$V_SR_PGE   = 00000013            
IRP$M_BUFIO    = 00000001            MBA$M_CSR_URD  = 20000000            MBA$V_SR_RDS   = 00000002            
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  31
SYMBOL TABLE                                                                                                                     (1)

MBA$V_SR_RDTO  = 00000000            RM_DS_V_WRL    = 0000000B            RM_ER2_V_IVC   = 0000000C            
MBA$V_SR_WCKLWR= 00000009            RM_DT            00000018            RM_ER2_V_LBC   = 0000000A            
MBA$V_SR_WCKUPR= 0000000A            RM_DT_M_DRQ    = 00000800            RM_ER2_V_LSC   = 0000000B            
NOP              0000019F R     04   RM_DT_S_DTN    = 00000009            RM_ER2_V_OPE   = 0000000D            
NORMAL           0000021A R     04   RM_DT_V_DRQ    = 0000000B            RM_ER2_V_SKI   = 0000000E            
OFF              0000028C R     04   RM_DT_V_DTN    = 00000000            RM_LA            0000001C            
OFFSET           0000019F R     04   RM_EC1           00000038            RM_MR            0000000C            
OFFSIZ         = 00000004            RM_EC1_S_POS   = 0000000D            RM_MR2           00000030            
OFFTAB           0000006A R     04   RM_EC1_V_POS   = 00000000            RM_OF            00000024            
PACKACK          0000019F R     04   RM_EC2           0000003C            RM_OF_M_CMO    = 00008000            
POSIT            00000452 R     04   RM_EC2_S_PAT   = 0000000B            RM_OF_M_DCK    = 00000100            
PR$_IPL          ********   X   04   RM_EC2_V_PAT   = 00000000            RM_OF_M_ECI    = 00000800            
READDATA         000001AF R     04   RM_ER1           00000008            RM_OF_M_FMT    = 00001000            
READHEAD         000001AF R     04   RM_ER1_M_AOE   = 00000200            RM_OF_M_HCI    = 00000400            
READPRESET       0000019F R     04   RM_ER1_M_DCK   = 00008000            RM_OF_M_MTD    = 00004000            
READTRACKD       000001AF R     04   RM_ER1_M_DTE   = 00001000            RM_OF_M_OM     = 00000200            
RECAL            0000019F R     04   RM_ER1_M_ECH   = 00000040            RM_OF_S_OFF    = 00000008            
RELEASE          0000019F R     04   RM_ER1_M_FER   = 00000010            RM_OF_V_CMO    = 0000000F            
RESETXFR         00000593 R     04   RM_ER1_M_HCE   = 00000080            RM_OF_V_DCK    = 00000008            
RETCENTER        0000019F R     04   RM_ER1_M_HCRC  = 00000100            RM_OF_V_ECI    = 0000000B            
RETREG           000004BA R     04   RM_ER1_M_IAE   = 00000400            RM_OF_V_FMT    = 0000000C            
RETRY            00000247 R     04   RM_ER1_M_ILF   = 00000001            RM_OF_V_HCI    = 0000000A            
RETRYERR         00000306 R     04   RM_ER1_M_ILR   = 00000002            RM_OF_V_MTD    = 0000000E            
RM_AS            00000010            RM_ER1_M_OPI   = 00002000            RM_OF_V_OFF    = 00000000            
RM_CS1           00000000            RM_ER1_M_PAR   = 00000008            RM_OF_V_OM     = 00000009            
RM_CS1_M_GO    = 00000001            RM_ER1_M_RMR   = 00000004            RM_SN            00000020            
RM_CS1_S_FCODE = 00000005            RM_ER1_M_UNS   = 00004000            RM_UNUSED        0000002C            
RM_CS1_V_FCODE = 00000001            RM_ER1_M_WCF   = 00000020            SEARCH           0000019F R     04   
RM_CS1_V_GO    = 00000000            RM_ER1_M_WLE   = 00000800            SEARCHA          00000430 R     04   
RM_DA            00000014            RM_ER1_V_AOE   = 00000009            SEEK             0000019F R     04   
RM_DA_S_SA     = 00000005            RM_ER1_V_DCK   = 0000000F            SS$_CTRLERR      ********   X   04   
RM_DA_S_TA     = 00000005            RM_ER1_V_DTE   = 0000000C            SS$_DATACHECK    ********   X   04   
RM_DA_V_SA     = 00000000            RM_ER1_V_ECH   = 00000006            SS$_DRVERR       ********   X   04   
RM_DA_V_TA     = 00000008            RM_ER1_V_FER   = 00000004            SS$_FORMAT       ********   X   04   
RM_DC            00000028            RM_ER1_V_HCE   = 00000007            SS$_IVADDR       ********   X   04   
RM_DS            00000004            RM_ER1_V_HCRC  = 00000008            SS$_MEDOFL       ********   X   04   
RM_DS_M_ATA    = 00008000            RM_ER1_V_IAE   = 0000000A            SS$_NONEXDRV     ********   X   04   
RM_DS_M_DPR    = 00000100            RM_ER1_V_ILF   = 00000000            SS$_NORMAL       ********   X   04   
RM_DS_M_DRY    = 00000080            RM_ER1_V_ILR   = 00000001            SS$_OPINCOMPL    ********   X   04   
RM_DS_M_ERR    = 00004000            RM_ER1_V_OPI   = 0000000D            SS$_PARITY       ********   X   04   
RM_DS_M_LST    = 00000400            RM_ER1_V_PAR   = 00000003            SS$_TIMEOUT      ********   X   04   
RM_DS_M_MOL    = 00001000            RM_ER1_V_RMR   = 00000002            SS$_UNSAFE       ********   X   04   
RM_DS_M_OM     = 00000001            RM_ER1_V_UNS   = 0000000E            SS$_VOLINV       ********   X   04   
RM_DS_M_PGM    = 00000200            RM_ER1_V_WCF   = 00000005            SS$_WASECC       ********   X   04   
RM_DS_M_PIP    = 00002000            RM_ER1_V_WLE   = 0000000B            SS$_WRITLCK      ********   X   04   
RM_DS_M_VV     = 00000040            RM_ER2           00000034            TRANNOCH         000001CC R     04   
RM_DS_M_WRL    = 00000800            RM_ER2_M_BSE   = 00008000            TRANRQCH         000001C6 R     04   
RM_DS_V_ATA    = 0000000F            RM_ER2_M_DPE   = 00000008            TRANXT           00000222 R     04   
RM_DS_V_DPR    = 00000008            RM_ER2_M_DVC   = 00000080            UCB$B_AMOD       00000053            
RM_DS_V_DRY    = 00000007            RM_ER2_M_IVC   = 00001000            UCB$B_CEX        00000077            
RM_DS_V_ERR    = 0000000E            RM_ER2_M_LBC   = 00000400            UCB$B_CM1        0000004A            
RM_DS_V_LST    = 0000000A            RM_ER2_M_LSC   = 00000800            UCB$B_CM2        0000004B            
RM_DS_V_MOL    = 0000000C            RM_ER2_M_OPE   = 00002000            UCB$B_DEVCLASS   00000038            
RM_DS_V_OM     = 00000000            RM_ER2_M_SKI   = 00004000            UCB$B_DEVTYPE    00000039            
RM_DS_V_PGM    = 00000009            RM_ER2_V_BSE   = 0000000F            UCB$B_DIPL       00000052            
RM_DS_V_PIP    = 0000000D            RM_ER2_V_DPE   = 00000003            UCB$B_DX_SCTCNT  000000A6            
RM_DS_V_VV     = 00000006            RM_ER2_V_DVC   = 00000007            UCB$B_ERTCNT     00000070            
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  32
SYMBOL TABLE                                                                                                                     (1)

UCB$B_ERTMAX     00000071            UCB$M_BACKP    = 00000020            UCB$V_TT_TIMO  = 00000001            
UCB$B_ESCAPE     0000004B            UCB$M_BSY      = 00000100            UCB$V_UNLOAD   = 0000000C            
UCB$B_FEX        00000076            UCB$M_CANCEL   = 00000008            UCB$V_VALID    = 0000000B            
UCB$B_FIPL       0000000B            UCB$M_DEADMO   = 00000400            UCB$W_BCNT       0000006E            
UCB$B_LOCSRV     0000003C            UCB$M_DELMBX   = 00000002            UCB$W_BCR        00000096            
UCB$B_OFFNDX     00000094            UCB$M_DIAGBUF  = 00000002            UCB$W_BOFF       0000006C            
UCB$B_OFFRTC     00000095            UCB$M_DX_WRITE = 00000008            UCB$W_BUFQUO     00000018            
UCB$B_REMSRV     0000003D            UCB$M_ECC      = 00000001            UCB$W_BYTESTOGO  0000003E            
UCB$B_SECTORS    0000003C            UCB$M_ERLOGIP  = 00000004            UCB$W_CHARGE     0000004A            
UCB$B_SLAVE      00000074            UCB$M_INT      = 00000002            UCB$W_CYLINDERS  0000003E            
UCB$B_SPR        00000075            UCB$M_INTTYPE  = 00000080            UCB$W_DA         0000008C            
UCB$B_STATE      00000052            UCB$M_JOB      = 00000001            UCB$W_DC         0000008E            
UCB$B_TRACKS     0000003D            UCB$M_MOUNTING = 00000200            UCB$W_DEVBUFSIZ  0000003A            
UCB$B_TYPE       0000000A            UCB$M_NOCNVRT  = 00000004            UCB$W_DEVSTS     0000005A            
UCB$B_VERTSZ     0000003F            UCB$M_NT_BFROVF= 00000004            UCB$W_DIRSEQ     00000088            
UCB$C_LENGTH     00000074            UCB$M_NT_BREAK = 00000020            UCB$W_DR_ER2     0000009C            
UCB$C_LOGLNK   = 00000001            UCB$M_NT_NAME  = 00000010            UCB$W_DR_MR      0000009E            
UCB$K_LENGTH     00000074            UCB$M_ONLINE   = 00000010            UCB$W_DSTADDR    00000018            
UCB$L_AMB        00000054            UCB$M_POWER    = 00000020            UCB$W_DX_BCR     000000A4            
UCB$L_ASTQBL     00000010            UCB$M_PRMMBX   = 00000001            UCB$W_EC1        00000090            
UCB$L_ASTQFL     0000000C            UCB$M_TIM      = 00000001            UCB$W_EC2        00000092            
UCB$L_CPID       0000005C            UCB$M_TIMOUT   = 00000040            UCB$W_ERRCNT     00000072            
UCB$L_CRB        00000020            UCB$M_TT_NOTIF = 00000004            UCB$W_FUNC       0000007E            
UCB$L_DDB        00000024            UCB$M_TT_TIMO  = 00000002            UCB$W_MB_SEED    FFFFFFFC            
UCB$L_DEVCHAR    00000034            UCB$M_UNLOAD   = 00001000            UCB$W_MSGCNT     00000016            
UCB$L_DEVDEPEND  0000003C            UCB$M_VALID    = 00000800            UCB$W_MSGMAX     00000014            
UCB$L_DPC        00000080            UCB$S_LNKPRI   = 00000002            UCB$W_NT_CHAN    0000007C            
UCB$L_DR_SR      00000098            UCB$S_LTYPE    = 00000002            UCB$W_OFFSET     0000008A            
UCB$L_DUETIM     0000005C            UCB$T_PARTNER    0000000C            UCB$W_REFC       00000050            
UCB$L_DX_BFPNT   0000009C            UCB$V_BACKP    = 00000005            UCB$W_SIZE       00000008            
UCB$L_DX_BUF     00000098            UCB$V_BSY      = 00000008            UCB$W_SRCADDR    0000001A            
UCB$L_DX_RXDB    000000A0            UCB$V_CANCEL   = 00000003            UCB$W_STS        00000058            
UCB$L_EMB        00000078            UCB$V_DEADMO   = 0000000A            UCB$W_UNIT       00000048            
UCB$L_FIRST      00000014            UCB$V_DELMBX   = 00000001            UCB$W_VPROT      0000001A            
UCB$L_FPC        0000000C            UCB$V_DIAGBUF  = 00000001            VEC$B_DATAPATH   00000013            
UCB$L_FQBL       00000004            UCB$V_DX_WRITE = 00000003            VEC$B_NUMREG     00000012            
UCB$L_FQFL       00000000            UCB$V_ECC      = 00000000            VEC$C_LENGTH     00000024            
UCB$L_FR3        00000010            UCB$V_ERLOGIP  = 00000002            VEC$K_LENGTH     00000024            
UCB$L_FR4        00000014            UCB$V_INT      = 00000001            VEC$L_ADP        00000014            
UCB$L_IOQBL      00000044            UCB$V_INTTYPE  = 00000007            VEC$L_IDB        00000008            
UCB$L_IOQFL      00000040            UCB$V_JOB      = 00000000            VEC$L_INITIAL    0000000C            
UCB$L_IRP        0000004C            UCB$V_LNKPRI   = 00000006            VEC$L_START      0000001C            
UCB$L_LINK       0000002C            UCB$V_LTYPE    = 00000000            VEC$L_UNITDISC   00000020            
UCB$L_LOGADR     00000064            UCB$V_MOUNTING = 00000009            VEC$L_UNITINIT   00000018            
UCB$L_MAXBLOCK   00000084            UCB$V_MSGACK   = 00000004            VEC$M_MAPLOCK  = 00008000            
UCB$L_MEDIA      0000008C            UCB$V_MSGFLO   = 00000003            VEC$M_PATHLOCK = 00000080            
UCB$L_NT_DATSSB  00000074            UCB$V_NOCNVRT  = 00000002            VEC$Q_DISPATCH   00000000            
UCB$L_NT_INTSSB  00000078            UCB$V_NT_BFROVF= 00000002            VEC$S_DATAPATH = 00000007            
UCB$L_OPCNT      00000060            UCB$V_NT_BREAK = 00000005            VEC$S_MAPREG   = 0000000F            
UCB$L_OWNUIC     0000001C            UCB$V_NT_NAME  = 00000004            VEC$V_DATAPATH = 00000000            
UCB$L_PID        00000028            UCB$V_ONLINE   = 00000004            VEC$V_MAPLOCK  = 0000000F            
UCB$L_RQBL       00000004            UCB$V_POWER    = 00000005            VEC$V_MAPREG   = 00000000            
UCB$L_RQFL       00000000            UCB$V_PRMMBX   = 00000000            VEC$V_PATHLOCK = 00000007            
UCB$L_SVAPTE     00000068            UCB$V_SEGFLO   = 00000002            VEC$W_MAPREG     00000010            
UCB$L_SVPN       00000064            UCB$V_TIM      = 00000000            WRITECHECK       000001A5 R     04   
UCB$L_TTCHAR     0000003C            UCB$V_TIMOUT   = 00000006            WRITECHECKH      000001A5 R     04   
UCB$L_VCB        00000030            UCB$V_TT_NOTIF = 00000002            WRITEDATA        000001AA R     04   
DRDRIVER        - RM03 DISK DRIVER                               21-AUG-1978 20:51:14   VAX-11 MACRO X0.3-11               Page  33
SYMBOL TABLE                                                                                                                     (1)

WRITEHEAD        000001AA R     04   
WRITETRACKD      000001AA R     04   
XFER             00000444 R     04   


PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFE      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$$$105_PROLOGUE  00000055      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$$$115_DRIVER    000006B7      04     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT LONG  


THERE WERE NO ERRORS OR WARNINGS.
4018. BYTES LEFT IN FREE MEMORY POOL.
40. BYTES OF RECLAIMED MEMORY.
OBJ$:DRDRIVER,LIS$:DRDRIVER/-SP=EXECML$/ML,SRC$:DRDRIVER
23 MLB DIR RDS - 1102 GETS TO DEFINE 39 MACROS. 105 INTER. FILE WRITES. 
