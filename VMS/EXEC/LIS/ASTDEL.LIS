ASTDEL          - AST ENQUEUE AND DELIVERY                       21-AUG-1978 19:37:25   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)    3400  HISTORY			; DETAILED
   (1)    4300  DECLARATIONS
   (1)    6700  SCH$ASTDEL - AST DELIVERY INTERRUPT HANDLER
   (1)   31600  SCH$QAST - ENQUEUE AST CONTROL BLOCK FOR PROCES
ASTDEL          - AST ENQUEUE AND DELIVERY                       21-AUG-1978 19:37:25   VAX-11 MACRO X0.3-11               Page   1
X01                                                                                                                              (1)

                                     0000   100 
                                     0000   200 	.TITLE	ASTDEL - AST ENQUEUE AND DELIVERY
                                     0000   300 	.IDENT	/X01/
                                     0000   400 
                                     0000   500 ;
                                     0000   600 ; COPYRIGHT (C) 1977,1978
                                     0000   700 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
                                     0000   800 ;
                                     0000   900 ; THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
                                     0000  1000 ; COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
                                     0000  1100 ; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
                                     0000  1200 ; MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
                                     0000  1300 ; EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
                                     0000  1400 ; TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
                                     0000  1500 ; REMAIN IN DEC.
                                     0000  1600 ;
                                     0000  1700 ; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
                                     0000  1800 ; AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
                                     0000  1900 ; CORPORATION.
                                     0000  2000 ;
                                     0000  2100 ; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
                                     0000  2200 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000  2300 
                                     0000  2400 ;++
                                     0000  2500 ; FACILITY: EXECUTIVE, SCHEDULER
                                     0000  2600 ;
                                     0000  2700 ; ABSTRACT:
                                     0000  2800 ;	ASTDEL CONTAINS THE AST DELIVERY INTERRUPT SERVICE ROUTINE AND THE
                                     0000  2850 ;	ASSOCIATED SUBROUTINES SCH$QAST AND SCH$NEWLVL.  THESE ROUTINES
                                     0000  2875 ;	IMPLEMENT THE PRIMITIVE AST QUEUEING AND DELIVERY MECHANISMS.
                                     0000  2887 ;
                                     0000  2900 ; ENVIRONMENT:
                                     0000  3000 ;	MODE = KERNEL
                                     0000  3100 ;--
                                     0000  3200 ;
                                     0000  3300 ;	.PAGE
                                     0000  3400 	.SBTTL	HISTORY			; DETAILED
                                     0000  3500 ;
                                     0000  3600 ; AUTHOR:	R. HUSTVEDT	 CREATION DATE: 1-SEP-76
                                     0000  3700 ;
                                     0000  3800 ; MODIFIED BY:
                                     0000  3900 ;	, : VERSION
                                     0000  4000 ; 01	 -
                                     0000  4100 
ASTDEL          - AST ENQUEUE AND DELIVERY                       21-AUG-1978 19:37:25   VAX-11 MACRO X0.3-11               Page   2
X01             DECLARATIONS                                                                                                     (1)

                                     0000  4300 	.SBTTL	DECLARATIONS
                                     0000  4400 
                                     0000  4500 ;
                                     0000  4600 ; INCLUDE FILES:
                                     0000  4700 ;
                                     0000  4800 	$ACBDEF				; AST CONTROL BLOCK DEFINITIONS
                                     0000  4900 	$IPLDEF				; IPL DEFINITIONS
                                     0000  5000 	$PCBDEF				; PCB DEFINITIONS
                                     0000  5100 	$PHDDEF				; PHD DEFINITIONS
                                     0000  5200 	$PRDEF				; PROCESSOR REGISTER DEFINITIONS
                                     0000  5300 	$PRIDEF				; PRIORITY INCREMENT CLASS DEFS
                                     0000  5400 	$PSLDEF				; PSL FIELD DEFINITIONS
                                     0000  5500 	$SSDEF				; STATUS CODE DEFINITIONS
                                     0000  5600 
                                     0000  5700 ;
                                     0000  5800 ; EQUATED SYMBOLS:
                                     0000  5900 ;
                           00000000  0000  6000 ASTEXIT=0				; AST EXIT CHANGE MODE CODE
                                     0000  6100 ;
                                     0000  6200 ; OWN STORAGE:
                                     0000  6300 ;
                                 00000000  6400 	.PSECT	A$EXENONPAGED,LONG
                                     0000  6500 
ASTDEL          - AST ENQUEUE AND DELIVERY                       21-AUG-1978 19:37:25   VAX-11 MACRO X0.3-11               Page   3
X01             SCH$ASTDEL - AST DELIVERY INTERRUPT HANDLER                                                                      (1)

                                     0000  6700 	.SBTTL	SCH$ASTDEL - AST DELIVERY INTERRUPT HANDLER
                                     0000  6800 
                                     0000  6900 ;++
                                     0000  7000 ; FUNCTIONAL DESCRIPTION:
                                     0000  7100 ;	SCH$ASTDEL RECEIVES THE AST DELIVERY INTERRUPT (IPL - 2) WHICH
                                     0000  7200 ;	IS INITIATED BY AN REI INSTRUCTION DETECTING ASTLVL LESS THAN
                                     0000  7300 ;	OR EQUAL TO PSL<CURRENT_MODE>.  THE HEAD OF THE AST QUEUE
                                     0000  7400 ;	FOR THE CURRENT PROCESS IS REMOVED AND PROCESSED.  SPECIAL
                                     0000  7500 ;	KERNEL MODE ASTS ARE PROCESSED WITH IPL REMAINING AT IPL 2.
                                     0000  7600 ;	NORMAL ASTS ARE DELIVERED BY PUSHING THE AST INFORMATION ON 
                                     0000  7700 ;	THE STACK OF THE MODE RECEIVING THE AST AND THE AST ACTIVE
                                     0000  7800 ;	BIT FOR THAT MODE IS SET TO PREVENT SUBSEQUENT ASTS UNTIL THE
                                     0000  7900 ;	CURRENT ONE FOR THAT MODE HAS BEEN PROCESSED.
                                     0000  8000 ;	SPURIOUS AST INTERRUPTS WILL BE DETECTED AND IGNORED.
                                     0000  8100 ;
                                     0000  8200 ;
                                     0000  8300 ; CALLING SEQUENCE:
                                     0000  8400 ;	IPL - 2  INTERRUPT
                                     0000  8500 ;
                                     0000  8600 ;
                                     0000  8700 ; INPUT PARAMETERS:
                                     0000  8800 ;	00(SP) = PC AT AST DELIVERY INTERRUPT
                                     0000  8900 ;	04(SP) = PSL AT AST DELIVERY INTERRUPT
                                     0000  9000 ;
                                     0000  9100 ; IMPLICIT INPUTS:
                                     0000  9200 ;	PCB OF CURRENT PROCESS LOCATED VIA SCH$GL_CURPCB
                                     0000  9300 ;	AST CONTROL BLOCK AT HEAD OF AST QUEUE FOR PROCESS
                                     0000  9400 ;
                                     0000  9500 ;
                                     0000  9600 ; OUTPUT PARAMETERS:
                                     0000  9700 ;	NONE
                                     0000  9800 ;
                                     0000  9900 ; IMPLICIT OUTPUTS:
                                     0000 10000 ;	*** TBS ***
                                     0000 10100 ;
                                     0000 10200 ; COMPLETION CODES:
                                     0000 10300 ;	NONE
                                     0000 10400 ;
                                     0000 10500 ; SIDE EFFECTS:
                                     0000 10600 ;	*** TBS ***
                                     0000 10700 ;
                                     0000 10800 ;--
                                     0000 10900 
                                     0000 11000 	.ALIGN	LONG			; INTERRUPT ROUTINES ON LW BOUND
                                     0000 11100 SCH$ASTDEL::				; AST DELIVERY INTERRUPT HANDLER
                          3F     BB  0000 11200 	PUSHR	#^M<R0,R1,R2,R3,R4,R5>	; SAVE R0-R5
            54       0000'CF     D0  0002 11300 	MOVL	W^SCH$GL_CURPCB,R4	; GET POINTER TO CURRENT PCB
                                     0007 11350 	SETIPL	#IPL$_SYNCH		; BLOCK SYSTEM EVENTS
         28 A4            11     E7  000A 11400 	BBCCI	#PCB$V_ASTPEN,PCB$L_STS(R4),10$	; CLEAR AST PENDING STATUS
                          00         000E       
            55         10 B4     0F  000F 11500 10$:	REMQUE	@PCB$L_ASTQFL(R4),R5	; AND REMOVE HEAD OF QUEUE
                          12     1D  0013 11600 	BVS	ASTDEXIT		; EXIT IF QUEUE EMPTY
         0B A5            07     E5  0015 11700 	BBCC	#ACB$V_KAST,ACB$B_RMOD(R5),NORM	; BR IF NORMAL AST
                          50         0019       
ASTDEL          - AST ENQUEUE AND DELIVERY                       21-AUG-1978 19:37:25   VAX-11 MACRO X0.3-11               Page   4
X01             SCH$ASTDEL - AST DELIVERY INTERRUPT HANDLER                                                                      (1)

                                     001A 11900 ;
                                     001A 12000 ;	THE KERNEL AST ROUTINE IS ENTERED VIA A JSB TO THE SPECIFIED
                                     001A 12100 ;	ADDRESS WITH IPL=2 AND THE POINTER TO THE AST CONTROL BLOCK
                                     001A 12200 ;	IN R5.  IT IS THE RESPONSIBILITY OF THE KERNEL AST ROUTINE
                                     001A 12300 ;	TO PROPERLY RELEASE OR OTHERWISE DISPOSE OF THE AST CONTROL
                                     001A 12400 ;	BLOCK.  THE PCB BASE ADDRESS IS IN R4.
                                     001A 12500 ;
                                     001A 12600 ;	REGISTERS R0-R5 HAVE BEEN PRESERVED AND ARE AVAILABLE FOR 
                                     001A 12700 ;	USE BY THE AST ROUTINE.
                                     001A 12800 ;
                                     001A 12850 	SETIPL	#IPL$_ASTDEL		; DROP IPL TO PERMIT SYSTEM EVENTS
                       18 B5     16  001D 12900 	JSB	@ACB$L_KAST(R5)		; DO KERNEL MODE AST
            54       0000'CF     D0  0020 13000 	MOVL	W^SCH$GL_CURPCB,R4	; RESTORE PCB ADDRESS
                          03     10  0025 13100 	BSBB	SCH$NEWLVL		; COMPUTE NEW ASTLVL
                                     0027 13200 ASTDEXIT:				; AST DELIVERY EXIT
                          3F     BA  0027 13300 	POPR	#^M<R0,R1,R2,R3,R4,R5>	; RESTORE REGISTERS R0-R5
                                 02  0029 13400 	REI				; AND RETURN
ASTDEL          - AST ENQUEUE AND DELIVERY                       21-AUG-1978 19:37:25   VAX-11 MACRO X0.3-11               Page   5
X01             SCH$ASTDEL - AST DELIVERY INTERRUPT HANDLER                                                                      (1)

                                     002A 13600 ;
                                     002A 13700 ;	SCH$NEWLVL - COMPUTE NEW ASTLVL
                                     002A 13800 ;
                                     002A 13900 ; INPUT:
                                     002A 14000 ;	R4 - ADDRESS OF CURRENT PCB
                                     002A 14100 ;
                                     002A 14200 ; OUTPUT:
                                     002A 14300 ;	PR$_ASTLVL - NEW AST LEVEL
                                     002A 14400 ;	PHD$V_ASTLVL - NEW AST LEVEL
                                     002A 14500 ;
                                     002A 14600 SCH$NEWLVL::				; COMPUTE NEW AST LEVEL
            50         10 A4     DE  002A 14700 	MOVAL	PCB$L_ASTQFL(R4),R0	; GET ADDRESS OF AST QUEUE
                                     002E 14800 	DSBINT	#IPL$_SYNCH		; DISABLE SYSTEM EVENTS
            51            60     D0  0034 14900 	MOVL	(R0),R1			; GET FLINK
            51            50     D1  0037 15000 	CMPL	R0,R1			; AND CHECK FOR EMPTY QUEUE
                          19     13  003A 15100 	BEQL	20$			; YES, QUEUE IS EMPTY
            02            00     EF  003C 15200 	EXTZV	#0,#2,ACB$B_RMOD(R1),R2	; GET REQUEST MODE
            52         0B A1         003F       
         0B A1            07     E1  0042 15300 	BBC	#ACB$V_KAST,ACB$B_RMOD(R1),10$	; NOT A KERNEL AST
                          04         0046       
                          52     D4  0047 15400 	CLRL	R2			; SET TO KERNEL MODE
                          0D     11  0049 15500 	BRB	30$			; FOR ASTLVL
         0D A4         0C A4     8B  004B 15600 10$:	BICB3	PCB$B_ASTACT(R4),PCB$B_ASTEN(R4),R0 ; COMPUTE DELIVERABLE
                          50         0050       
            50            52     E0  0051 15700 	BBS	R2,R0,30$		; YES, CAN BE DELIVERED
                          03         0054       
            52            04     D0  0055 15800 20$:	MOVL	#4,R2			; NONE DELIVERABLE, NULL ASTLVL
            13            52     DA  0058 15900 30$:	MTPR	R2,#PR$_ASTLVL		; SET ASTLVL REGISTER
            50         64 A4     D0  005B 16000 	MOVL	PCB$L_PHD(R4),R0	; GET ADDRESS OF PHD
            18            52     F0  005F 16100 	INSV	R2,#PHD$V_ASTLVL,#PHD$S_ASTLVL,PHD$L_P0LRASTL(R0)
       00CC C0            08         0062       
                                     0066 16200 	ENBINT				; ENABLE SYSTEM EVENTS AGAIN
                                 05  0069 16300 	RSB				; RETURN
ASTDEL          - AST ENQUEUE AND DELIVERY                       21-AUG-1978 19:37:25   VAX-11 MACRO X0.3-11               Page   6
X01             SCH$ASTDEL - AST DELIVERY INTERRUPT HANDLER                                                                      (1)

                                     006A 16500 ;
                                     006A 16600 ;	AT THIS POINT THE KERNEL STACK IS:
                                     006A 16700 ;	00(SP) = SAVED R0
                                     006A 16800 ;	04(SP) = SAVED R1
                                     006A 16900 ;	08(SP) = SAVED R2
                                     006A 17000 ;	12(SP) = SAVED R3
                                     006A 17100 ;	16(SP) = SAVED R4
                                     006A 17200 ;	20(SP) = SAVED R5
                                     006A 17300 ;	24(SP) = SAVED PC
                                     006A 17400 ;	28(SP) = SAVED PSL
                                     006A 17500 ;
                                     006A 17600 
                                     006A 17700 NORM:					; NORMAL AST DELIVERY
            02            00     EF  006A 17800 	EXTZV	#ACB$V_MODE,#ACB$S_MODE,ACB$B_RMOD(R5),R3 ; GET AST REQUEST MODE
            53         0B A5         006D       
            02            18     ED  0070 17900 	CMPZV	#PSL$V_CURMOD,#PSL$S_CURMOD,28(SP),R3  ; IS CURRENT MODE LEGAL
            53         1C AE         0073       
                          0B     18  0076 18000 	BGEQ	20$			; YES, NOT SPURIOUS
         10 A4            65     0E  0078 18200 10$:	INSQUE	(R5),PCB$L_ASTQFL(R4)	; REQUEUE AT HEAD OF QUEUE
         28 A4            11     E2  007C 18250 	BBSS	#PCB$V_ASTPEN,PCB$L_STS(R4),ASTDEXIT	; SET AST PENDING
                          A6         0080       
                          A4     11  0081 18300 	BRB	ASTDEXIT		; AND EXIT
         0D A4            53     E1  0083 18700 20$:	BBC	R3,PCB$B_ASTEN(R4),10$	; BR IF AST DISABLED
                          F0         0087       
         0C A4            53     E2  0088 18725 	BBSS	R3,PCB$B_ASTACT(R4),10$	; SET AST ACTIVE
                          EB         008C       
         0B A5            06     E5  008D 18750 	BBCC	#ACB$V_QUOTA,ACB$B_RMOD(R5),30$	; SKIP IF NO QUOTA ACCOUNTING
                          03         0091       
                       3C A4     B6  0092 18800 	INCW	PCB$W_ASTCNT(R4)	; UPDATE OUTSTANDING COUNT
                                     0095 19100 30$:					; AND DELIVER AST
                          93     10  0095 19200 	BSBB	SCH$NEWLVL		; COMPUTE NEW AST LEVEL
                                     0097 19250 	SETIPL	#IPL$_ASTDEL		; NOW DROP IPL TO PERMIT SYSTEM EVENTS
                                     009A 19300 ;
                                     009A 19400 ;	A NEW VALUE FOR ASTLVL HAS NOW BEEN COMPUTED AND SET.
                                     009A 19500 ;	THE AST REPRESENTED BY THE AST CONTROL BLOCK LOCATED VIA
                                     009A 19600 ;	R5 CAN NOW BE DELIVERED.
                                     009A 19700 ;
                          53     D5  009A 19800 	TSTL	R3			; CHECK FOR DELIVERY TO KERNEL
                          30     12  009C 19900 	BNEQ	NOTKMODE		; NOT KERNEL MODE
ASTDEL          - AST ENQUEUE AND DELIVERY                       21-AUG-1978 19:37:25   VAX-11 MACRO X0.3-11               Page   7
X01             SCH$ASTDEL - AST DELIVERY INTERRUPT HANDLER                                                                      (1)

                                     009E 20100 ;
                                     009E 20200 ;	DELIVER NORMAL AST TO KERNEL MODE
                                     009E 20300 ;
                          03     BA  009E 20400 	POPR	#^M<R0,R1>		; RESTORE R0,R1
                                     00A0 20500 ;
                                     00A0 20600 ;	00(SP) = R2, 04(SP) = R3, 08(SP) = R4, 12(SP) = R5,
                                     00A0 20700 ;	16(SP) = PC, 20(SP) = PSL
                                     00A0 20800 ;
            7E         08 AE     7D  00A0 20900 	MOVQ	8(SP),-(SP)		; SHUFFLE STACK
                                     00A4 21000 ;
                                     00A4 21100 ;	00(SP) = R4, 04(SP) = R5, 08(SP) = R2, 12(SP) = R3,
                                     00A4 21200 ;	16(SP) = R4, 20(SP) = R5, 24(SP) = PC, 28(SP) = PSL
                                     00A4 21300 ;
            7E         08 AE     7D  00A4 21400 	MOVQ	8(SP),-(SP)		; OPEN FOR AST ARG LIST
                                     00A8 21500 ;
                                     00A8 21600 ;	00(SP) = R2, 04(SP) = R3, 08(SP) = R4, 12(SP) = R5,
                                     00A8 21700 ;	16(SP) = R2, 20(SP) = R3, 24(SP) = R4, 28(SP) = R5,
                                     00A8 21800 ;	32(SP) = PC, 36(SP) = PSL
                                     00A8 21900 ;
         18 AE            50     7D  00A8 22000 	MOVQ	R0,24(SP)		; SET R0,R1 IN ARG LIST
         14 AE         14 A5     D0  00AC 22100 	MOVL	ACB$L_ASTPRM(R5),20(SP)	; SET AST PARAMETER IN ARG LIST
         10 AE            05     D0  00B1 22200 	MOVL	#5,16(SP)		; SET COUNT FOR ARGUMENT LIST
            50            55     D0  00B5 22300 	MOVL	R5,R0			; RELEASE AST CONTROL BLOCK
                       10 A5     DD  00B8 22400 	PUSHL	ACB$L_AST(R5)		; SAVE AST ROUTINE ADDRESS
                          FF42'  30  00BB 22500 	BSBW	EXE$DEANONPAGED		; TO DYNAMIC POOL
                          3E     BA  00BE 22600 	POPR	#^M<R1,R2,R3,R4,R5>	; RESTORE R1-R5
                                     00C0 22700 	SETIPL	#0			; DROP IPL TO ZERO
                                     00C3 22800 ;	BRB	EXE$ASTDEL		; FALL THROUGH TO CALL AST ROUTINE
ASTDEL          - AST ENQUEUE AND DELIVERY                       21-AUG-1978 19:37:25   VAX-11 MACRO X0.3-11               Page   8
X01             SCH$ASTDEL - AST DELIVERY INTERRUPT HANDLER                                                                      (1)

                                     00C3 23000 ;
                                     00C3 23100 ;	CALL AST ROUTINE WITH AST ARGUMENT LIST
                                     00C3 23200 ;
                                     00C3 23300 ;	THE CALL IS EXECUTED AT THE MODE WHICH RECEIVED THE AST WITH
                                     00C3 23400 ;	THE AST ARGUMENT LIST ON THE TOP OF THE STACK.  WHEN THE
                                     00C3 23500 ;	AST ROUTINE RETURNS FROM THE CALL, AN ASTEXIT CHANGE MODE
                                     00C3 23600 ;	TO KERNEL INSTRUCTION WILL BE ISSUED.  ASTEXIT WILL RESET 
                                     00C3 23700 ;	THE AST ACTIVE BIT FOR THE CURRENT MODE AND MAY CAUSE DELIVERY 
                                     00C3 23800 ;	OF ADDITIONAL ASTS.
                                     00C3 23900 ;
                                     00C3 24000 ;	AST ARGUMENT LIST:
                                     00C3 24100 ;	------------------
                                     00C3 24200 ;
                                     00C3 24300 ;	00(SP) = NUMBER OF ARGUMENTS, =5
                                     00C3 24400 ;	04(SP) = AST PARAMETER
                                     00C3 24500 ;	08(SP) = SAVED R0
                                     00C3 24600 ;	12(SP) = SAVED R1
                                     00C3 24700 ;	16(SP) = SAVED PC
                                     00C3 24800 ;	20(SP) = SAVED PSL
                                     00C3 24900 ;
                                     00C3 25000 EXE$ASTDEL:				; DELIVER AST CALL
            61            6E     FA  00C3 25100 	CALLG	(SP),(R1)		; CALL AST ROUTINE
            5E            08     C0  00C6 25200 	ADDL	#8,SP			; REMOVE ARG COUNT AND ASTPRM
                          00     BC  00C9 25300 	CHMK	S^#ASTEXIT		; AND EXIT FROM AST ROUTINE
                          03     BA  00CB 25400 	POPR	#^M<R0,R1>		; RESTORE R0,R1
                                 02  00CD 25500 	REI				; EXECUTE REI IN MODE OF AST
                                     00CE 25600 
                                     00CE 25700 ;
                                     00CE 25800 ;	A WINDOW EXISTS BETWEEN THE ASTEXIT CHMK AND THE REI, DURING
                                     00CE 25900 ;	WHICH 4 LONGWORDS REMAIN ON THE STACK OF THE ACCESS MODE EXITING
                                     00CE 26000 ;	THE AST.  IF ASTS OCCUR MORE RAPIDLY FOR AN ACCESS LEVEL THAN
                                     00CE 26100 ;	THEY CAN BE PROCESSED, THERE WILL BE AN ACCUMULATION OF THESE
                                     00CE 26200 ;	4 LONGWORD UNITS ON THE STACK OF THAT MODE UNTIL THE STACK
                                     00CE 26300 ;	OVERFLOWS.
                                     00CE 26400 ;	
                                     00CE 26500 ;	IF THIS BECOMES A PROBLEM THE ASTEXIT CHMK CAN BE MADE TO 
                                     00CE 26600 ;	CONCLUDE THE STACK CLEANING AT A SUBSTANTIAL COST IN TIME
                                     00CE 26700 ;	AND CODE.  
                                     00CE 26800 
ASTDEL          - AST ENQUEUE AND DELIVERY                       21-AUG-1978 19:37:25   VAX-11 MACRO X0.3-11               Page   9
X01             SCH$ASTDEL - AST DELIVERY INTERRUPT HANDLER                                                                      (1)

                                     00CE 27000 ;
                                     00CE 27100 ;	DELIVER NORMAL AST FOR EXEC, SUPER AND USER MODE
                                     00CE 27200 ;
                                     00CE 27300 
                                     00CE 27400 NOTKMODE:				; NOT AN AST FOR KERNEL MODE
                                     00CE 27500 ;
            51            53     DB  00CE 27600 	MFPR	R3,R1			; GET STACK POINTER
                                     00D1 27700 	IFNOWRT	#24,-24(R1),STACKERR,R3	; ENOUGH STACK SPACE??
            71         18 AE     7D  00D8 27800 	MOVQ	24(SP),-(R1)		; MOVE PC,PSL TO PROPER STACK
            71            8E     7D  00DC 27900 	MOVQ	(SP)+,-(R1)		; AND R0,R1 FROM KERNEL STACK
            71         14 A5     D0  00DF 28000 	MOVL	ACB$L_ASTPRM(R5),-(R1)	; AST PARAMETER
            71            05     D0  00E3 28100 	MOVL	#5,-(R1)		; AND FINALLY, ARGUMENT COUNT OF 5
            53            51     DA  00E6 28200 	MTPR	R1,R3			; SAVE UPDATED STACK POINTER
                       10 A5     DD  00E9 28300 	PUSHL	ACB$L_AST(R5)		; STACK AST ENTRY POINT
         14 AE         D4 AF     DE  00EC 28400 	MOVAL	EXE$ASTDEL,20(SP)	; SET PC TO AST DELIVERY CALL
            50            55     D0  00F1 28500 	MOVL	R5,R0			; SET ADDRESS OF ACB FOR RELEASE
            53            05     C4  00F4 28600 	MULL	#1+<1@<PSL$V_CURMOD-PSL$V_PRVMOD>>,R3	; CURRENT MODE = PREVIOUS MODE
            53            16     78  00F7 28700 	ASHL	#PSL$V_PRVMOD,R3,24(SP)	; SYNTHESIZE PSL FOR PROPER MODE
                       18 AE         00FA       
                          FF01'  30  00FC 28800 	BSBW	EXE$DEANONPAGED		; RELEASE AST CONTROL BLOCK
                          3E     BA  00FF 28900 	POPR	#^M<R1,R2,R3,R4,R5>	; RESTORE R1-R5
                                 02  0101 29000 	REI				; AND ENTER AST MODE
                                     0102 29100 					; DROPS IPL TO ZERO
                                     0102 29200 
                                     0102 29300 ;
                                     0102 29400 ;	REFLECT STACK ERROR
                                     0102 29500 ;
                                     0102 29600 STACKERR:				; ERROR IN STACK MOVE
         0C A4            53     E7  0102 29700 	BBCCI	R3,PCB$B_ASTACT(R4),10$	; CLEAR AST ACTIVE BIT
                          00         0106       
            7E         10 AE     7D  0107 29800 10$:	MOVQ	16(SP),-(SP)		; CREATE SPACE ON STACK
            7E         10 AE     7D  010B 29900 	MOVQ	16(SP),-(SP)		; BY MOVING R2-R5 DOWN
         20 AE         28 AE     7D  010F 30000 	MOVQ	40(SP),32(SP)		; SAVE PC,PSL AT INTERRUPT
         28 AE         10 A5     D0  0114 30100 	MOVL	ACB$L_AST(R5),40(SP)	; SET PC AT FAULT TO AST ADDRESS
         1C AE         14 A5     D0  0119 30200 	MOVL	ACB$L_ASTPRM(R5),28(SP)	; SET ASTPRM IN ARGLIST
         18 AE            51     D0  011E 30300 	MOVL	R1,24(SP)		; SAVE STACK VA AT FAULT
            53            05     C4  0122 30400 	MULL	#1+<1@<PSL$V_CURMOD-PSL$V_PRVMOD>>,R3	; CURRENT MODE = PREV
            53            16     9C  0125 30500 	ROTL	#PSL$V_PRVMOD,R3,44(SP)	; SYNTHESIZE NEW PSL FOR FAULT
                       2C AE         0128       
            50            55     D0  012A 30600 	MOVL	R5,R0			; SET ADDRESS FOR RELEASE OF ACB
                          FED0'  30  012D 30700 	BSBW	EXE$DEANONPAGED		; AND DEALLOCATE IT
                          FEF7   30  0130 30800 	BSBW	SCH$NEWLVL		; COMPUTE NEW ASTLEVEL
                          3C     BA  0133 30900 	POPR	#^M<R2,R3,R4,R5>	; RESTORE ALL REGISTERS
                          03     BA  0135 31000 	POPR	#^M<R0,R1>		; FROM POINT OF INTERRUPT
                                     0137 31100 	SETIPL	#0			; DROP IPL TO 0
                          FEC3'  31  013A 31200 	BRW	EXE$ASTFLT		; REFLECT EXCEPTION
                                     013D 31300 
                                     013D 31400 
ASTDEL          - AST ENQUEUE AND DELIVERY                       21-AUG-1978 19:37:25   VAX-11 MACRO X0.3-11               Page  10
X01             SCH$QAST - ENQUEUE AST CONTROL BLOCK FOR PROCES                                                                  (1)

                                     013D 31600 	.SBTTL	SCH$QAST - ENQUEUE AST CONTROL BLOCK FOR PROCESS
                                     013D 31700 
                                     013D 31800 ;++
                                     013D 31900 ;
                                     013D 32000 ; FUNCTIONAL DESCRIPTION:
                                     013D 32100 ;	SCH$QAST INSERTS THE AST CONTROL BLOCK SUPPLIED IN THE PROPER
                                     013D 32200 ;	POSITION BY ACCESS MODE IN THE AST QUEUE OF THE PROCESS SPECIFIED
                                     013D 32300 ;	BYT THE PID FIELD OF THE AST CONTROL BLOCK.  AN AST ARRIVAL EVENT
                                     013D 32400 ;	IS THEN REPORTED FOR THE PROCESS TO REACTIVATE FROM A WAIT STATE
                                     013D 32500 ;	IF APPROPRIATE.  THE AST CONTROL BLOCK WILL BE RELEASED IMMEDIATELY
                                     013D 32600 ;	IF THE PID SPECIFIES A NON-EXISTENT PROCESS.
                                     013D 32700 ;
                                     013D 32800 ; CALLING SEQUENCE:
                                     013D 32900 ;	BSB/JSB	SCH$QAST
                                     013D 33000 ;
                                     013D 33100 ; INPUT PARAMETERS:
                                     013D 33200 ;	R2 - PRIORITY INCREMENT CLASS
                                     013D 33300 ;	R5 - POINTER TO AST CONTROL BLOCK
                                     013D 33400 ;
                                     013D 33500 ; IMPLICIT INPUTS:
                                     013D 33600 ;	PCB OF PROCESS IDENTIFIED BY PID FIELD
                                     013D 33700 ;
                                     013D 33800 ; OUTPUT PARAMETERS:
                                     013D 33900 ;	R0 - COMPLETION STATUS CODE
                                     013D 34000 ;	R4 - PCB ADDRESS OF PROCESS FOR WHICH AST WAS QUEUED
                                     013D 34100 ;
                                     013D 34200 ; IMPLICIT OUTPUTS:
                                     013D 34300 ;	*** TBS ***
                                     013D 34400 ;
                                     013D 34500 ; SIDE EFFECTS:
                                     013D 34600 ;	THE PROCESS IDENTIFIED BY THE PID IN THE AST CONTROL BLOCK
                                     013D 34700 ;	WILL BE MADE EXECUTABLE IF NOT SUSPENDED.
                                     013D 34800 ;
                                     013D 34900 ; COMPLETION CODES:
                                     013D 35000 ;	SS$_NORMAL  -  NORMAL SUCCESSFUL COMPLETION STATUS
                                     013D 35100 ;	SS$_NONEXPR -  NON-EXISTENT PROCESS
                                     013D 35200 ;
                                     013D 35300 ;--
                                     013D 35400 
                                     013D 35500 SCH$QAST::				; ENQUEUE AST FOR PROCESS
            50         0C A5     3C  013D 35600 	MOVZWL	ACB$L_PID(R5),R0	; GET PROCESS INDEX FOR AST TARGET
                                     0141 35700 	DSBINT	#IPL$_SYNCH		; DISABLE SYSTEM EVENTS
            54       0000'DF40   D0  0147 35800 	MOVL	@W^SCH$GL_PCBVEC[R0],R4	; LOOK UP PCB ADDRESS
         60 A4         0C A5     D1  014D 35900 	CMPL	ACB$L_PID(R5),PCB$L_PID(R4) ; CHECK FOR MATCH IN PID
                          0F     13  0152 36000 	BEQL	20$			; OK, PID MATCHES
                                     0154 36100 10$:					; PROCESS NOT FOUND
            50            55     D0  0154 36200 	MOVL	R5,R0			; RELEASE AST CONTROL BLOCK
                          FEA6'  30  0157 36300 	BSBW	EXE$DEANONPAGED		; IF NO SUCH PROCESS
                                     015A 36400 
                                     015A 36500 	ENBINT				; ENABLE INTERRUPTS
            50       08E8 8F     3C  015D 36600 	MOVZWL	#SS$_NONEXPR,R0		; SET ERROR STATUS CODE
                                 05  0162 36700 	RSB				; AND RETURN
                                     0163 36800 
                                     0163 36900 20$:					; PROCESS EXISTS
            02            00     EF  0163 37000 	EXTZV	#ACB$V_MODE,#ACB$S_MODE,ACB$B_RMOD(R5),R0  ; EXTRACT REQUEST ACCESS MODE
            50         0B A5         0166       
            51         10 A4     DE  0169 37100 	MOVAL	PCB$L_ASTQFL(R4),R1	; POINT TO QUEUE HEADER
ASTDEL          - AST ENQUEUE AND DELIVERY                       21-AUG-1978 19:37:25   VAX-11 MACRO X0.3-11               Page  11
X01             SCH$QAST - ENQUEUE AST CONTROL BLOCK FOR PROCES                                                                  (1)

            53            61     D0  016D 37200 	MOVL	(R1),R3			; AND COPY HEADER ADDRESS
            53            51     D1  0170 37400 30$:	CMPL	R1,R3			; CHECK FOR END OF QUEUE
                          17     13  0173 37500 	BEQL	40$			; INSERT IF AT END
         0B A5            07     E0  0175 37550 	BBS	#ACB$V_KAST,ACB$B_RMOD(R5),37$	; BR IF SPECIAL KERNEL AST
                          0D         0179       
            02            00     ED  017A 37600 	CMPZV	#0,#2,ACB$B_RMOD(R3),R0	; COMPARE ACCESS MODES
            50         0B A3         017D       
                          05     14  0180 37700 	BGTR	37$			; IF GTR AT RIGHT PLACE
            53            63     D0  0182 37800 35$:	MOVL	(R3),R3			; FLINK ON TO NEXT ACB
                          E9     11  0185 37900 	BRB	30$			; AND TRY AGAIN
         0B A3            07     E0  0187 37950 37$:	BBS	#ACB$V_KAST,ACB$B_RMOD(R3),35$	; BR TO QUEUE KAST FIFO
                          F6         018B       
                                     018C 38000 40$:					; INSERT IN AST QUEUE
         04 B3            65     0E  018C 38100 	INSQUE	(R5),@ACB$L_ASTQBL(R3)	; INSERT AFTER PREVIOUS
            26         28 A4     E9  0190 38200 	BLBC	PCB$L_STS(R4),55$	; DONT SET ASTLVL IF NOT RESIDENT
            51         10 A4     D0  0194 38300 	MOVL	PCB$L_ASTQFL(R4),R1	; ADDRESS OF AST QUEUE HEAD
                          50     D4  0198 38400 	CLRL	R0			; ASSUME KERNEL AST
                       0B A1     95  019A 38500 	TSTB	ACB$B_RMOD(R1)		; KERNAL AST REQUESTED?
                          10     19  019D 38600 	BLSS	50$			; AN INTERNAL AST
            02            00     EF  019F 38700 	EXTZV	#ACB$V_MODE,#ACB$S_MODE,ACB$B_RMOD(R1),R0 ; GET MOST PRIVILEGED AST LEVEL
            50         0B A1         01A2       
         0D A4         0C A4     8B  01A5 38800 	BICB3	PCB$B_ASTACT(R4),PCB$B_ASTEN(R4),R1  ; COMPUTE INACTIVE ENABLED
                          51         01AA       
            51            50     E1  01AB 38900 	BBC	R0,R1,80$		; SKIP IF ACTIVE OR DISABLED
                          1E         01AE       
            51         64 A4     D0  01AF 39000 50$:	MOVL	PCB$L_PHD(R4),R1	; POINT TO PROCESS HEADER
            18            50     F0  01B3 39100 	INSV	R0,#PHD$V_ASTLVL,#PHD$S_ASTLVL,PHD$L_P0LRASTL(R1)
       00CC C1            08         01B6       
         28 A4            11     E2  01BA 39200 55$:	BBSS	#PCB$V_ASTPEN,PCB$L_STS(R4),60$	; SET AST PENDING
                          00         01BE       
            54       0000'CF     D1  01BF 39300 60$:	CMPL	W^SCH$GL_CURPCB,R4	; IS PROCESS CURRENT PROCESS
                          03     12  01C4 39400 	BNEQ	70$			; NO,
            13            50     DA  01C6 39500 	MTPR	R0,#PR$_ASTLVL		; ALSO SET ASTLVL REGISTER
                                     01C9 39600 70$:	RPTEVT	AST			; REPORT AST ARRIVAL
                                     01CD 39700 80$:	ENBINT				; ENABLE INTERRUPTS
            50            01     3C  01D0 39800 	MOVZWL	#SS$_NORMAL,R0		; SET SUCCESS STATUS CODE
                                 05  01D3 39900 	RSB				; AND RETURN
                                     01D4 40000  
                                     01D4 40100 	.END
ASTDEL          - AST ENQUEUE AND DELIVERY                       21-AUG-1978 19:37:25   VAX-11 MACRO X0.3-11               Page  12
SYMBOL TABLE                                                                                                                     (1)

ACB$B_RMOD       0000000B            PCB$L_WSSWP      00000024            PHD$L_ESP        0000007C            
ACB$B_TYPE       0000000A            PCB$L_WTIME      0000002C            PHD$L_FREP0VA    00000028            
ACB$L_AST        00000010            PCB$T_LNAME      0000006C            PHD$L_FREP1VA    00000030            
ACB$L_ASTPRM     00000014            PCB$V_ASTPEN   = 00000011            PHD$L_FREPTECNT  0000002C            
ACB$L_ASTQBL     00000004            PCB$V_BATCH    = 0000000E            PHD$L_KSP        00000078            
ACB$L_ASTQFL     00000000            PCB$V_DELPEN   = 00000001            PHD$L_P0BR       000000C8            
ACB$L_KAST       00000018            PCB$V_FORCPEN  = 00000002            PHD$L_P0LRASTL   000000CC            
ACB$L_PID        0000000C            PCB$V_HIBER    = 00000013            PHD$L_P1BR       000000D0            
ACB$M_QUOTA    = 00000040            PCB$V_INQUAN   = 00000003            PHD$L_P1LR       000000D4            
ACB$S_MODE     = 00000002            PCB$V_LOGIN    = 00000014            PHD$L_PAGEFLTS   0000004C            
ACB$V_KAST     = 00000007            PCB$V_NETWRK   = 00000015            PHD$L_PAGFIL     0000001C            
ACB$V_MODE     = 00000000            PCB$V_NOACNT   = 0000000F            PHD$L_PC         000000C0            
ACB$V_QUOTA    = 00000006            PCB$V_NODELET  = 00000017            PHD$L_PCB        00000078            
ACB$W_SIZE       00000008            PCB$V_PHDRES   = 00000012            PHD$L_PGFLCNT    00000034            
ASTDEXIT         00000027 R     03   PCB$V_PSWAPM   = 00000004            PHD$L_PGFLQUOTA  0000005C            
ASTEXIT        = 00000000            PCB$V_PWRAST   = 00000016            PHD$L_PSL        000000C4            
BIT...         = 00000000            PCB$V_RES      = 00000000            PHD$L_PSTBASOFF  00000020            
EVT$_AST         ********   X   03   PCB$V_RESPEN   = 00000005            PHD$L_PTWSLELCK  00000064            
EXE$ASTDEL       000000C3 R     03   PCB$V_SSFEXC   = 00000006            PHD$L_PTWSLEVAL  00000068            
EXE$ASTFLT       ********   X   03   PCB$V_SSFEXCE  = 00000007            PHD$L_R0         00000088            
EXE$DEANONPAGED  ********   X   03   PCB$V_SSFEXCS  = 00000008            PHD$L_R1         0000008C            
GBL...         = 00000000            PCB$V_SSFEXCU  = 00000009            PHD$L_R10        000000B0            
IPL$_ASTDEL    = 00000002            PCB$V_SSRWAIT  = 0000000A            PHD$L_R11        000000B4            
IPL$_HWCLK     = 00000018            PCB$V_SUSPEN   = 0000000B            PHD$L_R12        000000B8            
IPL$_IOPOST    = 00000004            PCB$V_SWPVBN   = 00000010            PHD$L_R13        000000BC            
IPL$_MAILBOX   = 0000000B            PCB$V_WAKEPEN  = 0000000C            PHD$L_R2         00000090            
IPL$_POWER     = 0000001F            PCB$V_WALL     = 0000000D            PHD$L_R3         00000094            
IPL$_QUEUEAST  = 00000006            PCB$W_APTCNT     00000034            PHD$L_R4         00000098            
IPL$_SCHED     = 00000003            PCB$W_ASTCNT     0000003C            PHD$L_R5         0000009C            
IPL$_SYNCH     = 00000007            PCB$W_BIOCNT     0000003E            PHD$L_R6         000000A0            
IPL$_TIMER     = 00000007            PCB$W_BIOLM      00000040            PHD$L_R7         000000A4            
NORM             0000006A R     03   PCB$W_BYTCNT     00000042            PHD$L_R8         000000A8            
NOTKMODE         000000CE R     03   PCB$W_BYTLM      00000068            PHD$L_R9         000000AC            
PCB$B_ASTACT     0000000C            PCB$W_DIOCNT     00000044            PHD$L_REFERFLT   00000014            
PCB$B_ASTEN      0000000D            PCB$W_DIOLM      00000046            PHD$L_SSP        00000080            
PCB$B_PRI        0000000B            PCB$W_FILCNT     00000048            PHD$L_USP        00000084            
PCB$B_PRIB       00000033            PCB$W_GPGCNT     00000038            PHD$L_WSL        00000118            
PCB$B_TYPE       0000000A            PCB$W_GRP        00000022            PHD$M_DALCSTX  = 00000002            
PCB$B_WEFC       00000032            PCB$W_MEM        00000020            PHD$M_PFMFLG   = 00000001            
PCB$C_LENGTH     0000007C            PCB$W_MTXCNT     0000000E            PHD$M_WSPEAKCHK= 00000004            
PCB$K_LENGTH     0000007C            PCB$W_PPGCNT     0000003A            PHD$Q_PRIVMSK    00000000            
PCB$L_ASTQBL     00000014            PCB$W_PRCCNT     0000006A            PHD$S_ASTLVL   = 00000008            
PCB$L_ASTQFL     00000010            PCB$W_SIZE       00000008            PHD$S_P0LR     = 00000018            
PCB$L_EFC2P      00000058            PCB$W_STATE      00000030            PHD$V_ASTLVL   = 00000018            
PCB$L_EFC3P      0000005C            PCB$W_TMBU       00000036            PHD$V_DALCSTX  = 00000001            
PCB$L_EFCS       00000050            PCB$W_TQCNT      0000004A            PHD$V_P0LR     = 00000000            
PCB$L_EFCU       00000054            PHD$B_ASTLVL     000000CF            PHD$V_PFMFLG   = 00000000            
PCB$L_EFWM       0000004C            PHD$B_DFPFC      00000038            PHD$V_WSPEAKCHK= 00000002            
PCB$L_OWNER      0000001C            PHD$B_PAGFIL     0000001F            PHD$W_ASTLM      00000044            
PCB$L_PHD        00000064            PHD$B_PGTBPFC    00000039            PHD$W_BAK        00000048            
PCB$L_PHYPCB     00000018            PHD$C_LENGTH     00000118            PHD$W_DFWSCNT    0000001A            
PCB$L_PID        00000060            PHD$C_PHDPAGCTX= 00000008            PHD$W_EMPTPG     000000D8            
PCB$L_PQB        0000004C            PHD$K_LENGTH     00000118            PHD$W_EXTDYNWS   00000076            
PCB$L_SQBL       00000004            PHD$L_BIOCNT     00000054            PHD$W_FILLM      00000060            
PCB$L_SQFL       00000000            PHD$L_CPULIM     00000058            PHD$W_FLAGS      0000003A            
PCB$L_STS        00000028            PHD$L_CPUTIM     0000003C            PHD$W_PHVINDEX   00000046            
PCB$L_UIC        00000020            PHD$L_DIOCNT     00000050            PHD$W_PRCLM      00000042            
ASTDEL          - AST ENQUEUE AND DELIVERY                       21-AUG-1978 19:37:25   VAX-11 MACRO X0.3-11               Page  13
SYMBOL TABLE                                                                                                                     (1)

PHD$W_PST        00000020            PR$_USP        = 00000003            SS$_BADIMGHDR  = 00000044            
PHD$W_PSTBASMAX  0000004A            PR$_WCSA       = 0000002C            SS$_BADIRECTORY= 00000828            
PHD$W_PSTFREE    00000026            PR$_WCSD       = 0000002D            SS$_BADPARAM   = 00000014            
PHD$W_PSTLAST    00000024            PRI$_IOCOM     = 00000001            SS$_BADSTACK   = 000002B4            
PHD$W_PTCNTACT   00000070            PRI$_NULL      = 00000000            SS$_BEGOFFILE  = 00000938            
PHD$W_PTCNTLCK   0000006C            PRI$_RESAVL    = 00000002            SS$_BLOCKCNTERR= 00000940            
PHD$W_PTCNTMAX   00000072            PRI$_TICOM     = 00000004            SS$_BREAK      = 00000414            
PHD$W_PTCNTVAL   0000006E            PRI$_TIMER     = 00000002            SS$_BUFBYTALI  = 0000030C            
PHD$W_QUANT      00000040            PRI$_TOCOM     = 00000003            SS$_BUFFEROVF  = 00000601            
PHD$W_TQLM       00000062            PSL$C_EXEC     = 00000001            SS$_BUGCHECK   = 000002A4            
PHD$W_WSAUTH     0000000A            PSL$C_KERNEL   = 00000000            SS$_CANCEL     = 00000830            
PHD$W_WSDYN      0000000E            PSL$C_SUPER    = 00000002            SS$_CHANINTLK  = 0000004C            
PHD$W_WSFLUID    00000074            PSL$C_USER     = 00000003            SS$_CLIFRCEXT  = 00000980            
PHD$W_WSLAST     00000012            PSL$M_CM       = 80000000            SS$_CMODSUPR   = 0000041C            
PHD$W_WSLIST     00000008            PSL$M_CURMOD   = 03000000            SS$_CMODUSER   = 00000424            
PHD$W_WSLOCK     0000000C            PSL$M_DV       = 00000080            SS$_COMPAT     = 0000042C            
PHD$W_WSLX       0000004A            PSL$M_FPD      = 08000000            SS$_CONTINUE   = 00000001            
PHD$W_WSNEXT     00000010            PSL$M_FU       = 00000040            SS$_CONTROLC   = 00000651            
PHD$W_WSQUOTA    00000018            PSL$M_IPL      = 001F0000            SS$_CONTROLO   = 00000609            
PR$_ACCR       = 00000029            PSL$M_IS       = 04000000            SS$_CONTROLY   = 00000611            
PR$_ACCS       = 00000028            PSL$M_IV       = 00000020            SS$_CREATED    = 00000619            
PR$_ASTLVL     = 00000013            PSL$M_PRVMOD   = 00C00000            SS$_CTRLERR    = 00000054            
PR$_ESP        = 00000001            PSL$M_SAFBITS  = 000037FF            SS$_DATACHECK  = 0000005C            
PR$_ICCS       = 00000018            PSL$M_TBIT     = 00000010            SS$_DATAOVERUN = 00000838            
PR$_ICR        = 0000001A            PSL$M_TP       = 40000000            SS$_DEBUG      = 0000046C            
PR$_IPL        = 00000012            PSL$S_CURMOD   = 00000002            SS$_DECOVF     = 000004A4            
PR$_ISP        = 00000004            PSL$S_IPL      = 00000005            SS$_DEVACTIVE  = 000002C4            
PR$_KSP        = 00000000            PSL$S_PRVMOD   = 00000002            SS$_DEVALLOC   = 00000840            
PR$_MAPEN      = 00000038            PSL$V_CM       = 0000001F            SS$_DEVALRALLOC= 00000641            
PR$_NICR       = 00000019            PSL$V_CURMOD   = 00000018            SS$_DEVASSIGN  = 00000848            
PR$_P0BR       = 00000008            PSL$V_DV       = 00000007            SS$_DEVFOREIGN = 00000064            
PR$_P0LR       = 00000009            PSL$V_FPD      = 0000001B            SS$_DEVICEFULL = 00000850            
PR$_P1BR       = 0000000A            PSL$V_FU       = 00000006            SS$_DEVMOUNT   = 0000006C            
PR$_P1LR       = 0000000B            PSL$V_IPL      = 00000010            SS$_DEVNOTALLOC= 00000858            
PR$_PCBB       = 00000010            PSL$V_IS       = 0000001A            SS$_DEVNOTMBX  = 00000074            
PR$_PME        = 0000003D            PSL$V_IV       = 00000005            SS$_DEVNOTMOUNT= 0000007C            
PR$_RXCS       = 00000020            PSL$V_PRVMOD   = 00000016            SS$_DEVOFFLINE = 00000084            
PR$_RXDB       = 00000021            PSL$V_TBIT     = 00000004            SS$_DIRFULL    = 00000860            
PR$_SBIER      = 00000034            PSL$V_TP       = 0000001E            SS$_DRVERR     = 0000008C            
PR$_SBIFS      = 00000030            SCH$ASTDEL       00000000 RG    03   SS$_DUPFILENAME= 00000868            
PR$_SBIMT      = 00000033            SCH$GL_CURPCB    ********   X   03   SS$_DUPLNAM    = 00000094            
PR$_SBIQC      = 00000036            SCH$GL_PCBVEC    ********   X   03   SS$_ENDOFFILE  = 00000870            
PR$_SBIS       = 00000031            SCH$NEWLVL       0000002A RG    03   SS$_ENDOFTAPE  = 00000878            
PR$_SBISC      = 00000032            SCH$QAST         0000013D RG    03   SS$_ENDOFUSRLBL= 00000970            
PR$_SBITA      = 00000035            SCH$RSE          ********   X   03   SS$_EXQUOTA    = 0000001C            
PR$_SBR        = 0000000C            SS$_ABORT      = 0000002C            SS$_EXTIDXFILE = 00000880            
PR$_SCBB       = 00000011            SS$_ACCONFLICT = 00000800            SS$_FCPREADERR = 00000888            
PR$_SID        = 0000003E            SS$_ACCVIO     = 0000000C            SS$_FCPREPSTN  = 00000988            
PR$_SIRR       = 00000014            SS$_ACPVAFUL   = 000002FC            SS$_FCPREWNDERR= 00000890            
PR$_SISR       = 00000015            SS$_ARTRES     = 00000474            SS$_FCPSPACERR = 00000898            
PR$_SLR        = 0000000D            SS$_ASTFLT     = 0000040C            SS$_FCPWRITERR = 000008A0            
PR$_SSP        = 00000002            SS$_BADATTRIB  = 00000034            SS$_FILACCERR  = 0000009C            
PR$_TBIA       = 00000039            SS$_BADCHKSUM  = 00000808            SS$_FILALRACC  = 000000A4            
PR$_TBIS       = 0000003A            SS$_BADESCAPE  = 0000003C            SS$_FILELOCKED = 000008A8            
PR$_TODR       = 0000001B            SS$_BADFILEHDR = 00000810            SS$_FILENUMCHK = 000008B0            
PR$_TXCS       = 00000022            SS$_BADFILENAME= 00000818            SS$_FILESEQCHK = 000008B8            
PR$_TXDB       = 00000023            SS$_BADFILEVER = 00000820            SS$_FILESTRUCT = 000008C0            
ASTDEL          - AST ENQUEUE AND DELIVERY                       21-AUG-1978 19:37:25   VAX-11 MACRO X0.3-11               Page  14
SYMBOL TABLE                                                                                                                     (1)

SS$_FILNOTACC  = 000000AC            SS$_NOIOCHAN   = 000001B4            SS$_WASCLR     = 00000001            
SS$_FILNOTCNTG = 000002AC            SS$_NOLINKS    = 0000027C            SS$_WASECC     = 00000639            
SS$_FILNOTEXP  = 000000B4            SS$_NOLOGNAM   = 000001BC            SS$_WASSET     = 00000009            
SS$_FLTDIV     = 00000494            SS$_NOMBX      = 00000274            SS$_WRITLCK    = 0000025C            
SS$_FLTOVF     = 0000048C            SS$_NOMOREFILES= 00000930            SS$_WRONGACP   = 0000031C            
SS$_FLTUND     = 0000049C            SS$_NONEXDRV   = 000001C4            STACKERR         00000102 R     03   
SS$_FORMAT     = 000000BC            SS$_NONEXPR    = 000008E8            
SS$_GPTFULL    = 000000C4            SS$_NONLOCAL   = 000008F0            
SS$_GSDFULL    = 000000CC            SS$_NOPRIV     = 00000024            
SS$_HANGUP     = 000002CC            SS$_NORMAL     = 00000001            
SS$_HEADERFULL = 000008C8            SS$_NOSIGNAL   = 00000900            
SS$_IDXFILEFULL= 000008D0            SS$_NOSOLICIT  = 00000284            
SS$_ILLBLKNUM  = 000000DC            SS$_NOSUCHDEV  = 00000908            
SS$_ILLCNTRFUNC= 000000E4            SS$_NOSUCHFILE = 00000910            
SS$_ILLEFC     = 000000EC            SS$_NOSUCHNODE = 0000028C            
SS$_ILLIOFUNC  = 000000F4            SS$_NOSUCHSEC  = 00000978            
SS$_ILLLBLAST  = 00000968            SS$_NOTAPEOP   = 00000264            
SS$_ILLPAGCNT  = 000000FC            SS$_NOTFILEDEV = 000001CC            
SS$_ILLSEQOP   = 000002DC            SS$_NOTINTBLSZ = 000001D4            
SS$_ILLSER     = 00000104            SS$_NOTLABELMT = 000001DC            
SS$_ILLUSRLBLRD= 00000958            SS$_NOTMODIFIED= 00000659            
SS$_ILLUSRLBLWT= 00000960            SS$_NOTNETDEV  = 000002EC            
SS$_INCVOLLABEL= 0000010C            SS$_NOTRAN     = 00000629            
SS$_INSFARG    = 00000114            SS$_NOTSQDEV   = 000001E4            
SS$_INSFMEM    = 00000124            SS$_OPCCUS     = 00000434            
SS$_INSFRAME   = 0000012C            SS$_OPCDEC     = 0000043C            
SS$_INSFWSL    = 0000011C            SS$_OPINCOMPL  = 000002D4            
SS$_INTDIV     = 00000484            SS$_PAGOWNVIO  = 000001EC            
SS$_INTOVF     = 0000047C            SS$_PAGRDERR   = 00000444            
SS$_IVADDR     = 00000134            SS$_PARITY     = 000001F4            
SS$_IVCHAN     = 0000013C            SS$_PARTESCAPE = 000001FC            
SS$_IVCHNLSEC  = 0000026C            SS$_PFMBSY     = 00000204            
SS$_IVDEVNAM   = 00000144            SS$_PLHLDR     = 00000404            
SS$_IVGSDNAM   = 0000014C            SS$_PSTFULL    = 0000020C            
SS$_IVLOGNAM   = 00000154            SS$_RADRMOD    = 0000044C            
SS$_IVLOGTAB   = 0000015C            SS$_REJECT     = 00000294            
SS$_IVPROTECT  = 000002F4            SS$_REMOTE     = 00000649            
SS$_IVQUOTAL   = 00000164            SS$_RESIGNAL   = 00000918            
SS$_IVSECFLG   = 0000016C            SS$_RESULTOVF  = 00000214            
SS$_IVSECIDCTL = 000002E4            SS$_ROPRAND    = 00000454            
SS$_IVSSRQ     = 00000174            SS$_SECTBLFUL  = 0000021C            
SS$_IVSTSFLG   = 0000017C            SS$_SSFAIL     = 0000045C            
SS$_IVTIME     = 00000184            SS$_SUBRNG     = 000004AC            
SS$_LCKPAGFUL  = 000000D4            SS$_SUPERSEDE  = 00000631            
SS$_LENVIO     = 0000018C            SS$_TAPEPOSLOST= 00000224            
SS$_LKWSETFUL  = 00000194            SS$_TBIT       = 00000464            
SS$_MBFULL     = 000008D8            SS$_TIMEOUT    = 0000022C            
SS$_MBTOOSML   = 0000019C            SS$_TOOMANYVER = 00000990            
SS$_MCHECK     = 000002BC            SS$_TOOMUCHDATA= 0000029C            
SS$_MEDOFL     = 000001A4            SS$_UNASEFC    = 00000234            
SS$_MSGNOTFND  = 00000621            SS$_UNSAFE     = 0000023C            
SS$_MTLBLLONG  = 00000304            SS$_UNWIND     = 00000920            
SS$_MUSTCLOSEFL= 00000948            SS$_UNWINDING  = 00000928            
SS$_NOAQB      = 00000314            SS$_VASFULL    = 00000244            
SS$_NODATA     = 000001AC            SS$_VECINUSE   = 0000024C            
SS$_NOHANDLER  = 000008F8            SS$_VOLINV     = 00000254            
SS$_NOHOMEBLK  = 000008E0            SS$_WAITUSRLBL = 00000950            
ASTDEL          - AST ENQUEUE AND DELIVERY                       21-AUG-1978 19:37:25   VAX-11 MACRO X0.3-11               Page  15
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            0000011C      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
A$EXENONPAGED    000001D4      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT LONG  


THERE WERE NO ERRORS OR WARNINGS.
12434. BYTES LEFT IN FREE MEMORY POOL.
3348. BYTES OF RECLAIMED MEMORY.
OBJ$:ASTDEL,LIS$:ASTDEL/-SP=EXECML$/ML,SRC$:ASTDEL
8 MLB DIR RDS - 802 GETS TO DEFINE 22 MACROS. 55 INTER. FILE WRITES. 
