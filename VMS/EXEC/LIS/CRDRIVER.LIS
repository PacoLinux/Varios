CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (1)     673  CR11 FUNCTION DECISION TABLE
   (1)     711  CANCEL I/O ON CHANNEL
   (1)     739  READ FUNCTION PROCESSING
   (1)     808  START I/O OPERATION ON CR11 CARD READER
   (1)     974  CR11 CARD READER INTDERRUPTS
   (1)    1027  CARD READER INITIALIZATION
   (1)    1049  CARD READER UNIT INITIALIZATION
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page   1
01                                                                                                                               (1)

                                     0000     1 	.TITLE	CRDRIVER - CR11 CARD READER DRIVER
                                     0000     2 	.IDENT	/01/
                                     0000     3  
                                     0000     4 ;
                                     0000     5 ; COPYRIGHT (C) 1977
                                     0000     6 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     7 ;
                                     0000     8 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     9 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000    10 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    11 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    12 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    13 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    14 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    15 ;
                                     0000    16 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    17 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    18 ; EQUIPMENT CORPORATION.
                                     0000    19 ;
                                     0000    20 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    21 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    22 ;
                                     0000    23 ; D. N. CUTLER 1-SEP-77
                                     0000    24 ;
                                     0000    25 ; CR11 CARD READER DRIVER
                                     0000    26 ;
                                     0000    27 ; MACRO LIBRARY CALLS
                                     0000    28 ;
                                     0000    29  
                                     0000    30 	$CRBDEF				;DEFINE CRB OFFSETS
                                     0000    31 	$CRDEF				;DEFINE CARD READER STATUS BITS
                                     0000    32 	$DDBDEF				;DEFINE DDB OFFSETS
                                     0000    33 	$DPTDEF				;DEFINE DPT OFFSETS
                                     0000    34 	$IDBDEF				;DEFINE IDB OFFSETS
                                     0000    35 	$IODEF				;DEFINE I/O FUNCTION CODES
                                     0000    36 	$IRPDEF				;DEFINE IRP OFFSETS
                                     0000    37 	$MSGDEF				;DEFINE SYSTEM MESSAGE TYPES
                                     0000    38 	$PCBDEF				;DEFINE PCB OFFSETS
                                     0000    39 	$UCBDEF				;DEFINE UCB OFFSETS
                                     0000    40 	$VECDEF				;DEFINE VEC OFFSETS
                                     0000    41  
                                     0000    42 ;
                                     0000    43 ; LOCAL SYMBOLS
                                     0000    44 ;
                                     0000    45 ; ARGUMENT LIST OFFSET DEFINITIONS
                                     0000    46 ;
                                     0000    47  
                           00000000  0000    48 P1=0					;FIRST FUNCTION DEPENDENT PARAMETER
                           00000004  0000    49 P2=4					;SECOND FUNCTION DEPENDENT PARAMETER
                           00000008  0000    50 P3=8					;THIRD FUNCTION DEPENDENT PARAMETER
                           0000000C  0000    51 P4=12					;FOURTH FUNCTION DEPENDENT PARAMETER
                           00000010  0000    52 P5=16					;FIFTH FUNCTION DEPENDENT PARAMETER
                           00000014  0000    53 P6=20					;SIZTH FUNCTION DEPENDENT PARAMETER
                                     0000    54  
                                     0000    55 ;
                                     0000    56 ; SPECIAL CARD COLUMN PATTERNS
                                     0000    57 ;
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page   2
01                                                                                                                               (1)

                                     0000    58  
                           00000F0F  0000    59 CR_EOF=^B111100001111			;END OF FILE (12-11-0-1-6-7-8-9)
                           000008A2  0000    60 CR_026=^B100010100010			;TRANSLATE 026 CARD CODE (12-2-4-8)
                           00000AAA  0000    61 CR_029=^B101010101010			;TRANSLATE 029 CARD CODE (12-0-2-4-6-8)
                                     0000    62  
                                     0000    63 ;
                                     0000    64 ; CR11 CONTROLLER REGISTER OFFSET DEFINITIONS
                                     0000    65 ;
                                     0000    66  
                                     0000    67 	$DEFINI	CR
                                     0000    68  
                                     0000    69 $DEF	CR_CSR		.BLKW	1	;CONTROL STATUS REGISTER
                                     0002    70 	_VIELD	CR_CSR,0,<-		; CONTROL STATUS REGISTER FIELD DEFINITIONS
                                     0002    71 		<READ,,M>,-		; READ CARD
                                     0002    72 		<EJECT,,M>,-		; EJECT CARD
                                     0002    73 		<,4>,-			; RESERVED BITS
                                     0002    74 		<IE,,M>,-		; INTERRUPT ENABLE
                                     0002    75 		<CLDONE,,M>,-		; COLUMN DONE
                                     0002    76 		<OFFLIN,,M>,-		; READER OFFLINE
                                     0002    77 		<BUSY,,M>,-		; CARD BEING READ
                                     0002    78 		<ONLINE,,M>,-		; READER ONLINE
                                     0002    79 		<TIMERR,,M>,-		; TIMING ERROR
                                     0002    80 		<MCHECK,,M>,-		; MOTION CHECK
                                     0002    81 		<HCHECK,,M>,-		; HOPPER CHECK
                                     0002    82 		<CRDONE,,M>,-		; CARD DONE
                                     0002    83 		<ERROR,,M>,-		; ERROR CONDITION
                                     0002    84 		>			;
                                     0002    85 $DEF	CR_CRB1		.BLKW	1	;CARD READ DATA BUFFER 1 (BINARY)
                                     0004    86 $DEF	CR_CRB2		.BLKW	1	;CARD READ DATA BUFFER 2 (PACKED)
                                     0006    87  
                                     0006    88 	$DEFEND	CR
                                     0000    89  
                                     0000    90 ;
                                     0000    91 ; DEFINE DEVICE DEPENDENT UNIT CONTROL BLOCK OFFSETS
                                     0000    92 ;
                                     0000    93  
                                     0000    94 	$DEFINI	UCB
                                     0000    95  
                           00000074  0000    96 .=UCB$K_LENGTH				;
                                     0074    97  
                                     0074    98 $DEF	UCB$B_CR_COLCNT	.BLKB	1	;CURRENT COLUMN COUNT
                                     0075    99 $DEF	UCB$B_CR_EOFCNT	.BLKB	1	;END OF FILE PUNCH COUNT
                                     0076   100 $DEF	UCB$B_CR_EOFCOL	.BLKB	1	;NUMBER OF END OF FILE PUNCHES REQUIRED
                                     0077   101 $DEF	UCB$B_CR_OFLCNT	.BLKB	1	;OFFLINE TIME COUNTER
                                     0078   102 $DEF	UCB$W_CR_FSTCOL	.BLKW	1	;FIRST COLUMN BINARY DATA
                                     007A   103 $DEF	UCB$W_CR_CSR	.BLKW	1	;SAVED FINAL CONTROL STATUS REGISTER
                                     007C   104  
                                     007C   105 	$DEFEND	UCB
                                     0000   106  
                                     0000   107 ;
                                     0000   108 ; LOCAL DATA
                                     0000   109 ;
                                     0000   110 ; DRIVER PROLOGUE TABLE
                                     0000   111 ;
                                     0000   112  
                                     0000   113 	DPTAB	-			;DEFINE DRIVER PROLOGUE TABLE
                                     0000   114 		END=CR_END,-		;END OF DRIVER
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page   3
01                                                                                                                               (1)

                                     0000   115 		ADAPTER=UBA,-		;ADAPTER TYPE
                                     0000   116 		UCBSIZE=124,-		;UCB SIZE
                                     0000   117 		NAME=CRDRIVER		;DRIVER NAME
                                     001F   118 	DPT_STORE INIT			;CONTROL BLOCK INIT VALUES
                                     001F   119 	DPT_STORE UCB,UCB$B_FIPL,B,8	;FORK IPL
                                     0023   120 	DPT_STORE UCB,UCB$L_DEVCHAR,L,-	;DEVICE CHARACTERISTICS
                                     0023   121 		<DEV$M_REC-		; RECORD ORIENTED
                                     0023   122 		!DEV$M_AVL-		; AVAILABLE
                                     0023   123 		!DEV$M_IDV>		; INPUT DEVICE
                                     002A   124 	DPT_STORE UCB,UCB$B_DEVCLASS,B,DC$_CARD ;DEVICE CLASS
                                     002E   125 	DPT_STORE UCB,UCB$B_DEVTYPE,B,DT$_CR11 ;DEVICE TYPE
                                     0032   126 	DPT_STORE UCB,UCB$W_DEVBUFSIZ,W,80 ;DEFAULT BUFFER SIZE
                                     0037   127 	DPT_STORE UCB,UCB$L_DEVDEPEND,L,CR$K_T029 ;DEFAULT TRANSLATION MODE
                                     003E   128 	DPT_STORE UCB,UCB$B_DIPL,B,22	;DEVICE IPL
                                     0042   129 	DPT_STORE REINIT		;CONTROL BLOCK RE-INIT VALUES
                                     0042   130 	DPT_STORE CRB,CRB$L_INTD+4,D,CR$INT ;INTERRUPT SERVICE ROUTINE ADDRESS
                                     0047   131 	DPT_STORE CRB,CRB$L_INTD+VEC$L_INITIAL,D,CR_INITIAL ;CONTROLLER INIT
                                     004C   132 	DPT_STORE CRB,CRB$L_INTD+VEC$L_UNITINIT,D,CR_CR11_INIT ;UNIT INIT
                                     0051   133 	DPT_STORE DDB,DDB$L_DDT,D,CR$DDT ;DDT ADDRESS
                                     0056   134 	DPT_STORE END			;
                                     0000   135  
                                     0000   136 ;
                                     0000   137 ; DRIVER DISPATCH TABLE
                                     0000   138 ;
                                     0000   139  
                                     0000   140 	DDTAB	CR,-			;DRIVER DISPATCH TABLE
                                     0000   141 		CR_STARTIO,-		;START I/O OPERATION
                                     0000   142 		0,-			;UNSOLICITED INTERRUPT
                                     0000   143 		CR_FUNCTABLE,-		;FUNCTION DECISION TABLE
                                     0000   144 		CR_CANCELIO,-		;CANCEL I/O OPERATION
                                     0000   145 		0,-			;REGISTER DUMP ROUTINE
                                     0000   146 		0,-			;SIZE OF DIAGNOSTIC BUFFER
                                     0000   147 		0			;SIZE OF ERROR LOG BUFFER
                                     0018   148  
                                     0018   149 ;
                                     0018   150 ; 029 CONVERSION TABLE
                                     0018   151 ;
                                     0018   152  
                                     0018   153 CR_CVT029:				;029 TRANSLATE TABLE
                                 20  0018   154 	.BYTE	^A/ /			;   0   ^X00   ^O000
                                 31  0019   155 	.BYTE	^A/1/			;   1   ^X01   ^O001
                                 32  001A   156 	.BYTE	^A/2/			;   2   ^X02   ^O002
                                 33  001B   157 	.BYTE	^A/3/			;   3   ^X03   ^O003
                                 34  001C   158 	.BYTE	^A/4/			;   4   ^X04   ^O004
                                 35  001D   159 	.BYTE	^A/5/			;   5   ^X05   ^O005
                                 36  001E   160 	.BYTE	^A/6/			;   6   ^X06   ^O006
                                 37  001F   161 	.BYTE	^A/7/			;   7   ^X07   ^O007
                                 38  0020   162 	.BYTE	^A/8/			;   8   ^X08   ^O010
                                 60  0021   163 	.BYTE	^A/`/			;   9   ^X09   ^O011
                                 3A  0022   164 	.BYTE	^A/:/			;  10   ^X0A   ^O012
                                 23  0023   165 	.BYTE	^A/#/			;  11   ^X0B   ^O013
                                 40  0024   166 	.BYTE	^A/@/			;  12   ^X0C   ^O014
                                 27  0025   167 	.BYTE	^A/'/			;  13   ^X0D   ^O015
                                 3D  0026   168 	.BYTE	^A/=/			;  14   ^X0E   ^O016
                                 22  0027   169 	.BYTE	^A/"/			;  15   ^X0F   ^O017
                                 39  0028   170 	.BYTE	^A/9/			;  16   ^X10   ^O020
                                 5C  0029   171 	.BYTE	^A/\/			;  17   ^X11   ^O021
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page   4
01                                                                                                                               (1)

                                 16  002A   172 	.BYTE	^X16 			;  18   ^X12   ^O022
                                 5C  002B   173 	.BYTE	^A/\/			;  19   ^X13   ^O023
                                 5C  002C   174 	.BYTE	^A/\/			;  20   ^X14   ^O024
                                 5C  002D   175 	.BYTE	^A/\/			;  21   ^X15   ^O025
                                 5C  002E   176 	.BYTE	^A/\/			;  22   ^X16   ^O026
                                 04  002F   177 	.BYTE	^X04 			;  23   ^X17   ^O027
                                 5C  0030   178 	.BYTE	^A/\/			;  24   ^X18   ^O030
                                 5C  0031   179 	.BYTE	^A/\/			;  25   ^X19   ^O031
                                 5C  0032   180 	.BYTE	^A/\/			;  26   ^X1A   ^O032
                                 5C  0033   181 	.BYTE	^A/\/			;  27   ^X1B   ^O033
                                 14  0034   182 	.BYTE	^X14 			;  28   ^X1C   ^O034
                                 15  0035   183 	.BYTE	^X15 			;  29   ^X1D   ^O035
                                 5C  0036   184 	.BYTE	^A/\/			;  30   ^X1E   ^O036
                                 1A  0037   185 	.BYTE	^X1A 			;  31   ^X1F   ^O037
                                 30  0038   186 	.BYTE	^A/0/			;  32   ^X20   ^O040
                                 2F  0039   187 	.BYTE	^A\/\			;  33   ^X21   ^O041
                                 53  003A   188 	.BYTE	^A/S/			;  34   ^X22   ^O042
                                 54  003B   189 	.BYTE	^A/T/			;  35   ^X23   ^O043
                                 55  003C   190 	.BYTE	^A/U/			;  36   ^X24   ^O044
                                 56  003D   191 	.BYTE	^A/V/			;  37   ^X25   ^O045
                                 57  003E   192 	.BYTE	^A/W/			;  38   ^X26   ^O046
                                 58  003F   193 	.BYTE	^A/X/			;  39   ^X27   ^O047
                                 59  0040   194 	.BYTE	^A/Y/			;  40   ^X28   ^O050
                                 5C  0041   195 	.BYTE	^A/\/			;  41   ^X29   ^O051
                                 5C  0042   196 	.BYTE	^A/\/			;  42   ^X2A   ^O052
                                 2C  0043   197 	.BYTE	^A/,/			;  43   ^X2B   ^O053
                                 25  0044   198 	.BYTE	^A/%/			;  44   ^X2C   ^O054
                                 5F  0045   199 	.BYTE	^A/_/			;  45   ^X2D   ^O055
                                 3E  0046   200 	.BYTE	^A/>/			;  46   ^X2E   ^O056
                                 3F  0047   201 	.BYTE	^A/?/			;  47   ^X2F   ^O057
                                 5A  0048   202 	.BYTE	^A/Z/			;  48   ^X30   ^O060
                                 5C  0049   203 	.BYTE	^A/\/			;  49   ^X31   ^O061
                                 5C  004A   204 	.BYTE	^A/\/			;  50   ^X32   ^O062
                                 5C  004B   205 	.BYTE	^A/\/			;  51   ^X33   ^O063
                                 5C  004C   206 	.BYTE	^A/\/			;  52   ^X34   ^O064
                                 0A  004D   207 	.BYTE	^X0A 			;  53   ^X35   ^O065
                                 17  004E   208 	.BYTE	^X17 			;  54   ^X36   ^O066
                                 1B  004F   209 	.BYTE	^X1B 			;  55   ^X37   ^O067
                                 5C  0050   210 	.BYTE	^A/\/			;  56   ^X38   ^O070
                                 5C  0051   211 	.BYTE	^A/\/			;  57   ^X39   ^O071
                                 5C  0052   212 	.BYTE	^A/\/			;  58   ^X3A   ^O072
                                 5C  0053   213 	.BYTE	^A/\/			;  59   ^X3B   ^O073
                                 5C  0054   214 	.BYTE	^A/\/			;  60   ^X3C   ^O074
                                 05  0055   215 	.BYTE	^X05 			;  61   ^X3D   ^O075
                                 06  0056   216 	.BYTE	^X06 			;  62   ^X3E   ^O076
                                 07  0057   217 	.BYTE	^X07 			;  63   ^X3F   ^O077
                                 2D  0058   218 	.BYTE	^A/-/			;  64   ^X40   ^O100
                                 4A  0059   219 	.BYTE	^A/J/			;  65   ^X41   ^O101
                                 4B  005A   220 	.BYTE	^A/K/			;  66   ^X42   ^O102
                                 4C  005B   221 	.BYTE	^A/L/			;  67   ^X43   ^O103
                                 4D  005C   222 	.BYTE	^A/M/			;  68   ^X44   ^O104
                                 4E  005D   223 	.BYTE	^A/N/			;  69   ^X45   ^O105
                                 4F  005E   224 	.BYTE	^A/O/			;  70   ^X46   ^O106
                                 50  005F   225 	.BYTE	^A/P/			;  71   ^X47   ^O107
                                 51  0060   226 	.BYTE	^A/Q/			;  72   ^X48   ^O110
                                 5C  0061   227 	.BYTE	^A/\/			;  73   ^X49   ^O111
                                 5D  0062   228 	.BYTE	^A/]/			;  74   ^X4A   ^O112
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page   5
01                                                                                                                               (1)

                                 24  0063   229 	.BYTE	^A/$/			;  75   ^X4B   ^O113
                                 2A  0064   230 	.BYTE	^A/*/			;  76   ^X4C   ^O114
                                 29  0065   231 	.BYTE	^A/)/			;  77   ^X4D   ^O115
                                 3B  0066   232 	.BYTE	^A/;/			;  78   ^X4E   ^O116
                                 5E  0067   233 	.BYTE	^A/^/			;  79   ^X4F   ^O117
                                 52  0068   234 	.BYTE	^A/R/			;  80   ^X50   ^O120
                                 11  0069   235 	.BYTE	^X11 			;  81   ^X51   ^O121
                                 12  006A   236 	.BYTE	^X12 			;  82   ^X52   ^O122
                                 13  006B   237 	.BYTE	^X13 			;  83   ^X53   ^O123
                                 5C  006C   238 	.BYTE	^A/\/			;  84   ^X54   ^O124
                                 5C  006D   239 	.BYTE	^A/\/			;  85   ^X55   ^O125
                                 08  006E   240 	.BYTE	^X08 			;  86   ^X56   ^O126
                                 5C  006F   241 	.BYTE	^A/\/			;  87   ^X57   ^O127
                                 18  0070   242 	.BYTE	^X18 			;  88   ^X58   ^O130
                                 19  0071   243 	.BYTE	^X19 			;  89   ^X59   ^O131
                                 5C  0072   244 	.BYTE	^A/\/			;  90   ^X5A   ^O132
                                 5C  0073   245 	.BYTE	^A/\/			;  91   ^X5B   ^O133
                                 1C  0074   246 	.BYTE	^X1C 			;  92   ^X5C   ^O134
                                 1D  0075   247 	.BYTE	^X1D 			;  93   ^X5D   ^O135
                                 1E  0076   248 	.BYTE	^X1E 			;  94   ^X5E   ^O136
                                 1F  0077   249 	.BYTE	^X1F 			;  95   ^X5F   ^O137
                                 7D  0078   250 	.BYTE	^A/}/			;  96   ^X60   ^O140
                                 7E  0079   251 	.BYTE	^A/~/			;  97   ^X61   ^O141
                                 73  007A   252 	.BYTE	^A/s/			;  98   ^X62   ^O142
                                 74  007B   253 	.BYTE	^A/t/			;  99   ^X63   ^O143
                                 75  007C   254 	.BYTE	^A/u/			; 100   ^X64   ^O144
                                 76  007D   255 	.BYTE	^A/v/			; 101   ^X65   ^O145
                                 77  007E   256 	.BYTE	^A/w/			; 102   ^X66   ^O146
                                 78  007F   257 	.BYTE	^A/x/			; 103   ^X67   ^O147
                                 79  0080   258 	.BYTE	^A/y/			; 104   ^X68   ^O150
                                 5C  0081   259 	.BYTE	^A/\/			; 105   ^X69   ^O151
                                 5C  0082   260 	.BYTE	^A/\/			; 106   ^X6A   ^O152
                                 5C  0083   261 	.BYTE	^A/\/			; 107   ^X6B   ^O153
                                 5C  0084   262 	.BYTE	^A/\/			; 108   ^X6C   ^O154
                                 5C  0085   263 	.BYTE	^A/\/			; 109   ^X6D   ^O155
                                 5C  0086   264 	.BYTE	^A/\/			; 110   ^X6E   ^O156
                                 5C  0087   265 	.BYTE	^A/\/			; 111   ^X6F   ^O157
                                 7A  0088   266 	.BYTE	^A/z/			; 112   ^X70   ^O160
                                 5C  0089   267 	.BYTE	^A/\/			; 113   ^X71   ^O161
                                 5C  008A   268 	.BYTE	^A/\/			; 114   ^X72   ^O162
                                 5C  008B   269 	.BYTE	^A/\/			; 115   ^X73   ^O163
                                 5C  008C   270 	.BYTE	^A/\/			; 116   ^X74   ^O164
                                 5C  008D   271 	.BYTE	^A/\/			; 117   ^X75   ^O165
                                 5C  008E   272 	.BYTE	^A/\/			; 118   ^X76   ^O166
                                 5C  008F   273 	.BYTE	^A/\/			; 119   ^X77   ^O167
                                 5C  0090   274 	.BYTE	^A/\/			; 120   ^X78   ^O170
                                 5C  0091   275 	.BYTE	^A/\/			; 121   ^X79   ^O171
                                 5C  0092   276 	.BYTE	^A/\/			; 122   ^X7A   ^O172
                                 5C  0093   277 	.BYTE	^A/\/			; 123   ^X7B   ^O173
                                 5C  0094   278 	.BYTE	^A/\/			; 124   ^X7C   ^O174
                                 5C  0095   279 	.BYTE	^A/\/			; 125   ^X7D   ^O175
                                 5C  0096   280 	.BYTE	^A/\/			; 126   ^X7E   ^O176
                                 5C  0097   281 	.BYTE	^A/\/			; 127   ^X7F   ^O177
                                 26  0098   282 	.BYTE	^A/&/			; 128   ^X80   ^O200
                                 41  0099   283 	.BYTE	^A/A/			; 129   ^X81   ^O201
                                 42  009A   284 	.BYTE	^A/B/			; 130   ^X82   ^O202
                                 43  009B   285 	.BYTE	^A/C/			; 131   ^X83   ^O203
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page   6
01                                                                                                                               (1)

                                 44  009C   286 	.BYTE	^A/D/			; 132   ^X84   ^O204
                                 45  009D   287 	.BYTE	^A/E/			; 133   ^X85   ^O205
                                 46  009E   288 	.BYTE	^A/F/			; 134   ^X86   ^O206
                                 47  009F   289 	.BYTE	^A/G/			; 135   ^X87   ^O207
                                 48  00A0   290 	.BYTE	^A/H/			; 136   ^X88   ^O210
                                 5C  00A1   291 	.BYTE	^A/\/			; 137   ^X89   ^O211
                                 5B  00A2   292 	.BYTE	^A/[/			; 138   ^X8A   ^O212
                                 2E  00A3   293 	.BYTE	^A/./			; 139   ^X8B   ^O213
                                 3C  00A4   294 	.BYTE	^A/</			; 140   ^X8C   ^O214
                                 28  00A5   295 	.BYTE	^A/(/			; 141   ^X8D   ^O215
                                 2B  00A6   296 	.BYTE	^A/+/			; 142   ^X8E   ^O216
                                 21  00A7   297 	.BYTE	^A/!/			; 143   ^X8F   ^O217
                                 49  00A8   298 	.BYTE	^A/I/			; 144   ^X90   ^O220
                                 01  00A9   299 	.BYTE	^X01 			; 145   ^X91   ^O221
                                 02  00AA   300 	.BYTE	^X02 			; 146   ^X92   ^O222
                                 03  00AB   301 	.BYTE	^X03 			; 147   ^X93   ^O223
                                 5C  00AC   302 	.BYTE	^A/\/			; 148   ^X94   ^O224
                                 09  00AD   303 	.BYTE	^X09 			; 149   ^X95   ^O225
                                 5C  00AE   304 	.BYTE	^A/\/			; 150   ^X96   ^O226
                                 FF  00AF   305 	.BYTE	^XFF 			; 151   ^X97   ^O227
                                 5C  00B0   306 	.BYTE	^A/\/			; 152   ^X98   ^O230
                                 5C  00B1   307 	.BYTE	^A/\/			; 153   ^X99   ^O231
                                 5C  00B2   308 	.BYTE	^A/\/			; 154   ^X9A   ^O232
                                 0B  00B3   309 	.BYTE	^X0B 			; 155   ^X9B   ^O233
                                 0C  00B4   310 	.BYTE	^X0C 			; 156   ^X9C   ^O234
                                 0D  00B5   311 	.BYTE	^X0D 			; 157   ^X9D   ^O235
                                 0E  00B6   312 	.BYTE	^X0E 			; 158   ^X9E   ^O236
                                 0F  00B7   313 	.BYTE	^X0F 			; 159   ^X9F   ^O237
                                 7B  00B8   314 	.BYTE	^A/{/			; 160   ^XA0   ^O240
                                 61  00B9   315 	.BYTE	^A/a/			; 161   ^XA1   ^O241
                                 62  00BA   316 	.BYTE	^A/b/			; 162   ^XA2   ^O242
                                 63  00BB   317 	.BYTE	^A/c/			; 163   ^XA3   ^O243
                                 64  00BC   318 	.BYTE	^A/d/			; 164   ^XA4   ^O244
                                 65  00BD   319 	.BYTE	^A/e/			; 165   ^XA5   ^O245
                                 66  00BE   320 	.BYTE	^A/f/			; 166   ^XA6   ^O246
                                 67  00BF   321 	.BYTE	^A/g/			; 167   ^XA7   ^O247
                                 68  00C0   322 	.BYTE	^A/h/			; 168   ^XA8   ^O250
                                 5C  00C1   323 	.BYTE	^A/\/			; 169   ^XA9   ^O251
                                 5C  00C2   324 	.BYTE	^A/\/			; 170   ^XAA   ^O252
                                 5C  00C3   325 	.BYTE	^A/\/			; 171   ^XAB   ^O253
                                 5C  00C4   326 	.BYTE	^A/\/			; 172   ^XAC   ^O254
                                 5C  00C5   327 	.BYTE	^A/\/			; 173   ^XAD   ^O255
                                 5C  00C6   328 	.BYTE	^A/\/			; 174   ^XAE   ^O256
                                 5C  00C7   329 	.BYTE	^A/\/			; 175   ^XAF   ^O257
                                 69  00C8   330 	.BYTE	^A/i/			; 176   ^XB0   ^O260
                                 5C  00C9   331 	.BYTE	^A/\/			; 177   ^XB1   ^O261
                                 5C  00CA   332 	.BYTE	^A/\/			; 178   ^XB2   ^O262
                                 5C  00CB   333 	.BYTE	^A/\/			; 179   ^XB3   ^O263
                                 5C  00CC   334 	.BYTE	^A/\/			; 180   ^XB4   ^O264
                                 5C  00CD   335 	.BYTE	^A/\/			; 181   ^XB5   ^O265
                                 5C  00CE   336 	.BYTE	^A/\/			; 182   ^XB6   ^O266
                                 5C  00CF   337 	.BYTE	^A/\/			; 183   ^XB7   ^O267
                                 5C  00D0   338 	.BYTE	^A/\/			; 184   ^XB8   ^O270
                                 5C  00D1   339 	.BYTE	^A/\/			; 185   ^XB9   ^O271
                                 5C  00D2   340 	.BYTE	^A/\/			; 186   ^XBA   ^O272
                                 5C  00D3   341 	.BYTE	^A/\/			; 187   ^XBB   ^O273
                                 5C  00D4   342 	.BYTE	^A/\/			; 188   ^XBC   ^O274
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page   7
01                                                                                                                               (1)

                                 5C  00D5   343 	.BYTE	^A/\/			; 189   ^XBD   ^O275
                                 5C  00D6   344 	.BYTE	^A/\/			; 190   ^XBE   ^O276
                                 5C  00D7   345 	.BYTE	^A/\/			; 191   ^XBF   ^O277
                                 7C  00D8   346 	.BYTE	^A/|/			; 192   ^XC0   ^O300
                                 6A  00D9   347 	.BYTE	^A/j/			; 193   ^XC1   ^O301
                                 6B  00DA   348 	.BYTE	^A/k/			; 194   ^XC2   ^O302
                                 6C  00DB   349 	.BYTE	^A/l/			; 195   ^XC3   ^O303
                                 6D  00DC   350 	.BYTE	^A/m/			; 196   ^XC4   ^O304
                                 6E  00DD   351 	.BYTE	^A/n/			; 197   ^XC5   ^O305
                                 6F  00DE   352 	.BYTE	^A/o/			; 198   ^XC6   ^O306
                                 70  00DF   353 	.BYTE	^A/p/			; 199   ^XC7   ^O307
                                 71  00E0   354 	.BYTE	^A/q/			; 200   ^XC8   ^O310
                                 5C  00E1   355 	.BYTE	^A/\/			; 201   ^XC9   ^O311
                                 5C  00E2   356 	.BYTE	^A/\/			; 202   ^XCA   ^O312
                                 5C  00E3   357 	.BYTE	^A/\/			; 203   ^XCB   ^O313
                                 5C  00E4   358 	.BYTE	^A/\/			; 204   ^XCC   ^O314
                                 5C  00E5   359 	.BYTE	^A/\/			; 205   ^XCD   ^O315
                                 5C  00E6   360 	.BYTE	^A/\/			; 206   ^XCE   ^O316
                                 5C  00E7   361 	.BYTE	^A/\/			; 207   ^XCF   ^O317
                                 72  00E8   362 	.BYTE	^A/r/			; 208   ^XD0   ^O320
                                 5C  00E9   363 	.BYTE	^A/\/			; 209   ^XD1   ^O321
                                 5C  00EA   364 	.BYTE	^A/\/			; 210   ^XD2   ^O322
                                 5C  00EB   365 	.BYTE	^A/\/			; 211   ^XD3   ^O323
                                 5C  00EC   366 	.BYTE	^A/\/			; 212   ^XD4   ^O324
                                 5C  00ED   367 	.BYTE	^A/\/			; 213   ^XD5   ^O325
                                 5C  00EE   368 	.BYTE	^A/\/			; 214   ^XD6   ^O326
                                 5C  00EF   369 	.BYTE	^A/\/			; 215   ^XD7   ^O327
                                 5C  00F0   370 	.BYTE	^A/\/			; 216   ^XD8   ^O330
                                 10  00F1   371 	.BYTE	^X10 			; 217   ^XD9   ^O331
                                 5C  00F2   372 	.BYTE	^A/\/			; 218   ^XDA   ^O332
                                 5C  00F3   373 	.BYTE	^A/\/			; 219   ^XDB   ^O333
                                 5C  00F4   374 	.BYTE	^A/\/			; 220   ^XDC   ^O334
                                 5C  00F5   375 	.BYTE	^A/\/			; 221   ^XDD   ^O335
                                 5C  00F6   376 	.BYTE	^A/\/			; 222   ^XDE   ^O336
                                 5C  00F7   377 	.BYTE	^A/\/			; 223   ^XDF   ^O337
                                 5C  00F8   378 	.BYTE	^A/\/			; 224   ^XE0   ^O340
                                 5C  00F9   379 	.BYTE	^A/\/			; 225   ^XE1   ^O341
                                 5C  00FA   380 	.BYTE	^A/\/			; 226   ^XE2   ^O342
                                 5C  00FB   381 	.BYTE	^A/\/			; 227   ^XE3   ^O343
                                 5C  00FC   382 	.BYTE	^A/\/			; 228   ^XE4   ^O344
                                 5C  00FD   383 	.BYTE	^A/\/			; 229   ^XE5   ^O345
                                 5C  00FE   384 	.BYTE	^A/\/			; 230   ^XE6   ^O346
                                 5C  00FF   385 	.BYTE	^A/\/			; 231   ^XE7   ^O347
                                 5C  0100   386 	.BYTE	^A/\/			; 232   ^XE8   ^O350
                                 5C  0101   387 	.BYTE	^A/\/			; 233   ^XE9   ^O351
                                 5C  0102   388 	.BYTE	^A/\/			; 234   ^XEA   ^O352
                                 5C  0103   389 	.BYTE	^A/\/			; 235   ^XEB   ^O353
                                 5C  0104   390 	.BYTE	^A/\/			; 236   ^XEC   ^O354
                                 5C  0105   391 	.BYTE	^A/\/			; 237   ^XED   ^O355
                                 5C  0106   392 	.BYTE	^A/\/			; 238   ^XEE   ^O356
                                 5C  0107   393 	.BYTE	^A/\/			; 239   ^XEF   ^O357
                                 5C  0108   394 	.BYTE	^A/\/			; 240   ^XF0   ^O360
                                 5C  0109   395 	.BYTE	^A/\/			; 241   ^XF1   ^O361
                                 5C  010A   396 	.BYTE	^A/\/			; 242   ^XF2   ^O362
                                 5C  010B   397 	.BYTE	^A/\/			; 243   ^XF3   ^O363
                                 5C  010C   398 	.BYTE	^A/\/			; 244   ^XF4   ^O364
                                 5C  010D   399 	.BYTE	^A/\/			; 245   ^XF5   ^O365
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page   8
01                                                                                                                               (1)

                                 5C  010E   400 	.BYTE	^A/\/			; 246   ^XF6   ^O366
                                 5C  010F   401 	.BYTE	^A/\/			; 247   ^XF7   ^O367
                                 5C  0110   402 	.BYTE	^A/\/			; 248   ^XF8   ^O370
                                 5C  0111   403 	.BYTE	^A/\/			; 249   ^XF9   ^O371
                                 5C  0112   404 	.BYTE	^A/\/			; 250   ^XFA   ^O372
                                 5C  0113   405 	.BYTE	^A/\/			; 251   ^XFB   ^O373
                                 5C  0114   406 	.BYTE	^A/\/			; 252   ^XFC   ^O374
                                 5C  0115   407 	.BYTE	^A/\/			; 253   ^XFD   ^O375
                                 5C  0116   408 	.BYTE	^A/\/			; 254   ^XFE   ^O376
                                 5C  0117   409 	.BYTE	^A/\/			; 255   ^XFF   ^O377
                                     0118   410  
                                     0118   411 ;
                                     0118   412 ; 026 CONVERSION TABLE
                                     0118   413 ;
                                     0118   414  
                                     0118   415 CR_CVT026:				;026 TRANSLATE TABLE
                                 20  0118   416 	.BYTE	^A/ /			;   0   ^X00   ^O000
                                 31  0119   417 	.BYTE	^A/1/			;   1   ^X01   ^O001
                                 32  011A   418 	.BYTE	^A/2/			;   2   ^X02   ^O002
                                 33  011B   419 	.BYTE	^A/3/			;   3   ^X03   ^O003
                                 34  011C   420 	.BYTE	^A/4/			;   4   ^X04   ^O004
                                 35  011D   421 	.BYTE	^A/5/			;   5   ^X05   ^O005
                                 36  011E   422 	.BYTE	^A/6/			;   6   ^X06   ^O006
                                 37  011F   423 	.BYTE	^A/7/			;   7   ^X07   ^O007
                                 38  0120   424 	.BYTE	^A/8/			;   8   ^X08   ^O010
                                 60  0121   425 	.BYTE	^A/`/			;   9   ^X09   ^O011
                                 5F  0122   426 	.BYTE	^A/_/			;  10   ^X0A   ^O012
                                 3D  0123   427 	.BYTE	^A/=/			;  11   ^X0B   ^O013
                                 40  0124   428 	.BYTE	^A/@/			;  12   ^X0C   ^O014
                                 5E  0125   429 	.BYTE	^A/^/			;  13   ^X0D   ^O015
                                 27  0126   430 	.BYTE	^A/'/			;  14   ^X0E   ^O016
                                 5C  0127   431 	.BYTE	^A/\/			;  15   ^X0F   ^O017
                                 39  0128   432 	.BYTE	^A/9/			;  16   ^X10   ^O020
                                 5C  0129   433 	.BYTE	^A/\/			;  17   ^X11   ^O021
                                 16  012A   434 	.BYTE	^X16 			;  18   ^X12   ^O022
                                 5C  012B   435 	.BYTE	^A/\/			;  19   ^X13   ^O023
                                 5C  012C   436 	.BYTE	^A/\/			;  20   ^X14   ^O024
                                 5C  012D   437 	.BYTE	^A/\/			;  21   ^X15   ^O025
                                 5C  012E   438 	.BYTE	^A/\/			;  22   ^X16   ^O026
                                 04  012F   439 	.BYTE	^X04 			;  23   ^X17   ^O027
                                 5C  0130   440 	.BYTE	^A/\/			;  24   ^X18   ^O030
                                 5C  0131   441 	.BYTE	^A/\/			;  25   ^X19   ^O031
                                 5C  0132   442 	.BYTE	^A/\/			;  26   ^X1A   ^O032
                                 5C  0133   443 	.BYTE	^A/\/			;  27   ^X1B   ^O033
                                 14  0134   444 	.BYTE	^X14 			;  28   ^X1C   ^O034
                                 15  0135   445 	.BYTE	^X15 			;  29   ^X1D   ^O035
                                 5C  0136   446 	.BYTE	^A/\/			;  30   ^X1E   ^O036
                                 1A  0137   447 	.BYTE	^X1A 			;  31   ^X1F   ^O037
                                 30  0138   448 	.BYTE	^A/0/			;  32   ^X20   ^O040
                                 2F  0139   449 	.BYTE	^A\/\			;  33   ^X21   ^O041
                                 53  013A   450 	.BYTE	^A/S/			;  34   ^X22   ^O042
                                 54  013B   451 	.BYTE	^A/T/			;  35   ^X23   ^O043
                                 55  013C   452 	.BYTE	^A/U/			;  36   ^X24   ^O044
                                 56  013D   453 	.BYTE	^A/V/			;  37   ^X25   ^O045
                                 57  013E   454 	.BYTE	^A/W/			;  38   ^X26   ^O046
                                 58  013F   455 	.BYTE	^A/X/			;  39   ^X27   ^O047
                                 59  0140   456 	.BYTE	^A/Y/			;  40   ^X28   ^O050
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page   9
01                                                                                                                               (1)

                                 5C  0141   457 	.BYTE	^A/\/			;  41   ^X29   ^O051
                                 3B  0142   458 	.BYTE	^A/;/			;  42   ^X2A   ^O052
                                 2C  0143   459 	.BYTE	^A/,/			;  43   ^X2B   ^O053
                                 28  0144   460 	.BYTE	^A/(/			;  44   ^X2C   ^O054
                                 22  0145   461 	.BYTE	^A/"/			;  45   ^X2D   ^O055
                                 23  0146   462 	.BYTE	^A/#/			;  46   ^X2E   ^O056
                                 25  0147   463 	.BYTE	^A/%/			;  47   ^X2F   ^O057
                                 5A  0148   464 	.BYTE	^A/Z/			;  48   ^X30   ^O060
                                 5C  0149   465 	.BYTE	^A/\/			;  49   ^X31   ^O061
                                 5C  014A   466 	.BYTE	^A/\/			;  50   ^X32   ^O062
                                 5C  014B   467 	.BYTE	^A/\/			;  51   ^X33   ^O063
                                 5C  014C   468 	.BYTE	^A/\/			;  52   ^X34   ^O064
                                 0A  014D   469 	.BYTE	^X0A 			;  53   ^X35   ^O065
                                 17  014E   470 	.BYTE	^X17 			;  54   ^X36   ^O066
                                 1B  014F   471 	.BYTE	^X1B 			;  55   ^X37   ^O067
                                 5C  0150   472 	.BYTE	^A/\/			;  56   ^X38   ^O070
                                 5C  0151   473 	.BYTE	^A/\/			;  57   ^X39   ^O071
                                 5C  0152   474 	.BYTE	^A/\/			;  58   ^X3A   ^O072
                                 5C  0153   475 	.BYTE	^A/\/			;  59   ^X3B   ^O073
                                 5C  0154   476 	.BYTE	^A/\/			;  60   ^X3C   ^O074
                                 05  0155   477 	.BYTE	^X05 			;  61   ^X3D   ^O075
                                 06  0156   478 	.BYTE	^X06 			;  62   ^X3E   ^O076
                                 07  0157   479 	.BYTE	^X07 			;  63   ^X3F   ^O077
                                 2D  0158   480 	.BYTE	^A/-/			;  64   ^X40   ^O100
                                 4A  0159   481 	.BYTE	^A/J/			;  65   ^X41   ^O101
                                 4B  015A   482 	.BYTE	^A/K/			;  66   ^X42   ^O102
                                 4C  015B   483 	.BYTE	^A/L/			;  67   ^X43   ^O103
                                 4D  015C   484 	.BYTE	^A/M/			;  68   ^X44   ^O104
                                 4E  015D   485 	.BYTE	^A/N/			;  69   ^X45   ^O105
                                 4F  015E   486 	.BYTE	^A/O/			;  70   ^X46   ^O106
                                 50  015F   487 	.BYTE	^A/P/			;  71   ^X47   ^O107
                                 51  0160   488 	.BYTE	^A/Q/			;  72   ^X48   ^O110
                                 5C  0161   489 	.BYTE	^A/\/			;  73   ^X49   ^O111
                                 3A  0162   490 	.BYTE	^A/:/			;  74   ^X4A   ^O112
                                 24  0163   491 	.BYTE	^A/$/			;  75   ^X4B   ^O113
                                 2A  0164   492 	.BYTE	^A/*/			;  76   ^X4C   ^O114
                                 5B  0165   493 	.BYTE	^A/[/			;  77   ^X4D   ^O115
                                 3E  0166   494 	.BYTE	^A/>/			;  78   ^X4E   ^O116
                                 26  0167   495 	.BYTE	^A/&/			;  79   ^X4F   ^O117
                                 52  0168   496 	.BYTE	^A/R/			;  80   ^X50   ^O120
                                 11  0169   497 	.BYTE	^X11 			;  81   ^X51   ^O121
                                 12  016A   498 	.BYTE	^X12 			;  82   ^X52   ^O122
                                 13  016B   499 	.BYTE	^X13 			;  83   ^X53   ^O123
                                 5C  016C   500 	.BYTE	^A/\/			;  84   ^X54   ^O124
                                 5C  016D   501 	.BYTE	^A/\/			;  85   ^X55   ^O125
                                 08  016E   502 	.BYTE	^X08 			;  86   ^X56   ^O126
                                 5C  016F   503 	.BYTE	^A/\/			;  87   ^X57   ^O127
                                 18  0170   504 	.BYTE	^X18 			;  88   ^X58   ^O130
                                 19  0171   505 	.BYTE	^X19 			;  89   ^X59   ^O131
                                 5C  0172   506 	.BYTE	^A/\/			;  90   ^X5A   ^O132
                                 5C  0173   507 	.BYTE	^A/\/			;  91   ^X5B   ^O133
                                 1C  0174   508 	.BYTE	^X1C 			;  92   ^X5C   ^O134
                                 1D  0175   509 	.BYTE	^X1D 			;  93   ^X5D   ^O135
                                 1E  0176   510 	.BYTE	^X1E 			;  94   ^X5E   ^O136
                                 1F  0177   511 	.BYTE	^X1F 			;  95   ^X5F   ^O137
                                 7D  0178   512 	.BYTE	^A/}/			;  96   ^X60   ^O140
                                 7E  0179   513 	.BYTE	^A/~/			;  97   ^X61   ^O141
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  10
01                                                                                                                               (1)

                                 73  017A   514 	.BYTE	^A/s/			;  98   ^X62   ^O142
                                 74  017B   515 	.BYTE	^A/t/			;  99   ^X63   ^O143
                                 75  017C   516 	.BYTE	^A/u/			; 100   ^X64   ^O144
                                 76  017D   517 	.BYTE	^A/v/			; 101   ^X65   ^O145
                                 77  017E   518 	.BYTE	^A/w/			; 102   ^X66   ^O146
                                 78  017F   519 	.BYTE	^A/x/			; 103   ^X67   ^O147
                                 79  0180   520 	.BYTE	^A/y/			; 104   ^X68   ^O150
                                 5C  0181   521 	.BYTE	^A/\/			; 105   ^X69   ^O151
                                 5C  0182   522 	.BYTE	^A/\/			; 106   ^X6A   ^O152
                                 5C  0183   523 	.BYTE	^A/\/			; 107   ^X6B   ^O153
                                 5C  0184   524 	.BYTE	^A/\/			; 108   ^X6C   ^O154
                                 5C  0185   525 	.BYTE	^A/\/			; 109   ^X6D   ^O155
                                 5C  0186   526 	.BYTE	^A/\/			; 110   ^X6E   ^O156
                                 5C  0187   527 	.BYTE	^A/\/			; 111   ^X6F   ^O157
                                 7A  0188   528 	.BYTE	^A/z/			; 112   ^X70   ^O160
                                 5C  0189   529 	.BYTE	^A/\/			; 113   ^X71   ^O161
                                 5C  018A   530 	.BYTE	^A/\/			; 114   ^X72   ^O162
                                 5C  018B   531 	.BYTE	^A/\/			; 115   ^X73   ^O163
                                 5C  018C   532 	.BYTE	^A/\/			; 116   ^X74   ^O164
                                 5C  018D   533 	.BYTE	^A/\/			; 117   ^X75   ^O165
                                 5C  018E   534 	.BYTE	^A/\/			; 118   ^X76   ^O166
                                 5C  018F   535 	.BYTE	^A/\/			; 119   ^X77   ^O167
                                 5C  0190   536 	.BYTE	^A/\/			; 120   ^X78   ^O170
                                 5C  0191   537 	.BYTE	^A/\/			; 121   ^X79   ^O171
                                 5C  0192   538 	.BYTE	^A/\/			; 122   ^X7A   ^O172
                                 5C  0193   539 	.BYTE	^A/\/			; 123   ^X7B   ^O173
                                 5C  0194   540 	.BYTE	^A/\/			; 124   ^X7C   ^O174
                                 5C  0195   541 	.BYTE	^A/\/			; 125   ^X7D   ^O175
                                 5C  0196   542 	.BYTE	^A/\/			; 126   ^X7E   ^O176
                                 5C  0197   543 	.BYTE	^A/\/			; 127   ^X7F   ^O177
                                 2B  0198   544 	.BYTE	^A/+/			; 128   ^X80   ^O200
                                 41  0199   545 	.BYTE	^A/A/			; 129   ^X81   ^O201
                                 42  019A   546 	.BYTE	^A/B/			; 130   ^X82   ^O202
                                 43  019B   547 	.BYTE	^A/C/			; 131   ^X83   ^O203
                                 44  019C   548 	.BYTE	^A/D/			; 132   ^X84   ^O204
                                 45  019D   549 	.BYTE	^A/E/			; 133   ^X85   ^O205
                                 46  019E   550 	.BYTE	^A/F/			; 134   ^X86   ^O206
                                 47  019F   551 	.BYTE	^A/G/			; 135   ^X87   ^O207
                                 48  01A0   552 	.BYTE	^A/H/			; 136   ^X88   ^O210
                                 5C  01A1   553 	.BYTE	^A/\/			; 137   ^X89   ^O211
                                 3F  01A2   554 	.BYTE	^A/?/			; 138   ^X8A   ^O212
                                 2E  01A3   555 	.BYTE	^A/./			; 139   ^X8B   ^O213
                                 29  01A4   556 	.BYTE	^A/)/			; 140   ^X8C   ^O214
                                 5D  01A5   557 	.BYTE	^A/]/			; 141   ^X8D   ^O215
                                 3C  01A6   558 	.BYTE	^A/</			; 142   ^X8E   ^O216
                                 21  01A7   559 	.BYTE	^A/!/			; 143   ^X8F   ^O217
                                 49  01A8   560 	.BYTE	^A/I/			; 144   ^X90   ^O220
                                 01  01A9   561 	.BYTE	^X01 			; 145   ^X91   ^O221
                                 02  01AA   562 	.BYTE	^X02 			; 146   ^X92   ^O222
                                 03  01AB   563 	.BYTE	^X03 			; 147   ^X93   ^O223
                                 5C  01AC   564 	.BYTE	^A/\/			; 148   ^X94   ^O224
                                 09  01AD   565 	.BYTE	^X09 			; 149   ^X95   ^O225
                                 5C  01AE   566 	.BYTE	^A/\/			; 150   ^X96   ^O226
                                 FF  01AF   567 	.BYTE	^XFF 			; 151   ^X97   ^O227
                                 5C  01B0   568 	.BYTE	^A/\/			; 152   ^X98   ^O230
                                 5C  01B1   569 	.BYTE	^A/\/			; 153   ^X99   ^O231
                                 5C  01B2   570 	.BYTE	^A/\/			; 154   ^X9A   ^O232
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  11
01                                                                                                                               (1)

                                 0B  01B3   571 	.BYTE	^X0B 			; 155   ^X9B   ^O233
                                 0C  01B4   572 	.BYTE	^X0C 			; 156   ^X9C   ^O234
                                 0D  01B5   573 	.BYTE	^X0D 			; 157   ^X9D   ^O235
                                 0E  01B6   574 	.BYTE	^X0E 			; 158   ^X9E   ^O236
                                 0F  01B7   575 	.BYTE	^X0F 			; 159   ^X9F   ^O237
                                 7B  01B8   576 	.BYTE	^A/{/			; 160   ^XA0   ^O240
                                 61  01B9   577 	.BYTE	^A/a/			; 161   ^XA1   ^O241
                                 62  01BA   578 	.BYTE	^A/b/			; 162   ^XA2   ^O242
                                 63  01BB   579 	.BYTE	^A/c/			; 163   ^XA3   ^O243
                                 64  01BC   580 	.BYTE	^A/d/			; 164   ^XA4   ^O244
                                 65  01BD   581 	.BYTE	^A/e/			; 165   ^XA5   ^O245
                                 66  01BE   582 	.BYTE	^A/f/			; 166   ^XA6   ^O246
                                 67  01BF   583 	.BYTE	^A/g/			; 167   ^XA7   ^O247
                                 68  01C0   584 	.BYTE	^A/h/			; 168   ^XA8   ^O250
                                 5C  01C1   585 	.BYTE	^A/\/			; 169   ^XA9   ^O251
                                 5C  01C2   586 	.BYTE	^A/\/			; 170   ^XAA   ^O252
                                 5C  01C3   587 	.BYTE	^A/\/			; 171   ^XAB   ^O253
                                 5C  01C4   588 	.BYTE	^A/\/			; 172   ^XAC   ^O254
                                 5C  01C5   589 	.BYTE	^A/\/			; 173   ^XAD   ^O255
                                 5C  01C6   590 	.BYTE	^A/\/			; 174   ^XAE   ^O256
                                 5C  01C7   591 	.BYTE	^A/\/			; 175   ^XAF   ^O257
                                 69  01C8   592 	.BYTE	^A/i/			; 176   ^XB0   ^O260
                                 5C  01C9   593 	.BYTE	^A/\/			; 177   ^XB1   ^O261
                                 5C  01CA   594 	.BYTE	^A/\/			; 178   ^XB2   ^O262
                                 5C  01CB   595 	.BYTE	^A/\/			; 179   ^XB3   ^O263
                                 5C  01CC   596 	.BYTE	^A/\/			; 180   ^XB4   ^O264
                                 5C  01CD   597 	.BYTE	^A/\/			; 181   ^XB5   ^O265
                                 5C  01CE   598 	.BYTE	^A/\/			; 182   ^XB6   ^O266
                                 5C  01CF   599 	.BYTE	^A/\/			; 183   ^XB7   ^O267
                                 5C  01D0   600 	.BYTE	^A/\/			; 184   ^XB8   ^O270
                                 5C  01D1   601 	.BYTE	^A/\/			; 185   ^XB9   ^O271
                                 5C  01D2   602 	.BYTE	^A/\/			; 186   ^XBA   ^O272
                                 5C  01D3   603 	.BYTE	^A/\/			; 187   ^XBB   ^O273
                                 5C  01D4   604 	.BYTE	^A/\/			; 188   ^XBC   ^O274
                                 5C  01D5   605 	.BYTE	^A/\/			; 189   ^XBD   ^O275
                                 5C  01D6   606 	.BYTE	^A/\/			; 190   ^XBE   ^O276
                                 5C  01D7   607 	.BYTE	^A/\/			; 191   ^XBF   ^O277
                                 7C  01D8   608 	.BYTE	^A/|/			; 192   ^XC0   ^O300
                                 6A  01D9   609 	.BYTE	^A/j/			; 193   ^XC1   ^O301
                                 6B  01DA   610 	.BYTE	^A/k/			; 194   ^XC2   ^O302
                                 6C  01DB   611 	.BYTE	^A/l/			; 195   ^XC3   ^O303
                                 6D  01DC   612 	.BYTE	^A/m/			; 196   ^XC4   ^O304
                                 6E  01DD   613 	.BYTE	^A/n/			; 197   ^XC5   ^O305
                                 6F  01DE   614 	.BYTE	^A/o/			; 198   ^XC6   ^O306
                                 70  01DF   615 	.BYTE	^A/p/			; 199   ^XC7   ^O307
                                 71  01E0   616 	.BYTE	^A/q/			; 200   ^XC8   ^O310
                                 5C  01E1   617 	.BYTE	^A/\/			; 201   ^XC9   ^O311
                                 5C  01E2   618 	.BYTE	^A/\/			; 202   ^XCA   ^O312
                                 5C  01E3   619 	.BYTE	^A/\/			; 203   ^XCB   ^O313
                                 5C  01E4   620 	.BYTE	^A/\/			; 204   ^XCC   ^O314
                                 5C  01E5   621 	.BYTE	^A/\/			; 205   ^XCD   ^O315
                                 5C  01E6   622 	.BYTE	^A/\/			; 206   ^XCE   ^O316
                                 5C  01E7   623 	.BYTE	^A/\/			; 207   ^XCF   ^O317
                                 72  01E8   624 	.BYTE	^A/r/			; 208   ^XD0   ^O320
                                 5C  01E9   625 	.BYTE	^A/\/			; 209   ^XD1   ^O321
                                 5C  01EA   626 	.BYTE	^A/\/			; 210   ^XD2   ^O322
                                 5C  01EB   627 	.BYTE	^A/\/			; 211   ^XD3   ^O323
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  12
01                                                                                                                               (1)

                                 5C  01EC   628 	.BYTE	^A/\/			; 212   ^XD4   ^O324
                                 5C  01ED   629 	.BYTE	^A/\/			; 213   ^XD5   ^O325
                                 5C  01EE   630 	.BYTE	^A/\/			; 214   ^XD6   ^O326
                                 5C  01EF   631 	.BYTE	^A/\/			; 215   ^XD7   ^O327
                                 5C  01F0   632 	.BYTE	^A/\/			; 216   ^XD8   ^O330
                                 10  01F1   633 	.BYTE	^X10 			; 217   ^XD9   ^O331
                                 5C  01F2   634 	.BYTE	^A/\/			; 218   ^XDA   ^O332
                                 5C  01F3   635 	.BYTE	^A/\/			; 219   ^XDB   ^O333
                                 5C  01F4   636 	.BYTE	^A/\/			; 220   ^XDC   ^O334
                                 5C  01F5   637 	.BYTE	^A/\/			; 221   ^XDD   ^O335
                                 5C  01F6   638 	.BYTE	^A/\/			; 222   ^XDE   ^O336
                                 5C  01F7   639 	.BYTE	^A/\/			; 223   ^XDF   ^O337
                                 5C  01F8   640 	.BYTE	^A/\/			; 224   ^XE0   ^O340
                                 5C  01F9   641 	.BYTE	^A/\/			; 225   ^XE1   ^O341
                                 5C  01FA   642 	.BYTE	^A/\/			; 226   ^XE2   ^O342
                                 5C  01FB   643 	.BYTE	^A/\/			; 227   ^XE3   ^O343
                                 5C  01FC   644 	.BYTE	^A/\/			; 228   ^XE4   ^O344
                                 5C  01FD   645 	.BYTE	^A/\/			; 229   ^XE5   ^O345
                                 5C  01FE   646 	.BYTE	^A/\/			; 230   ^XE6   ^O346
                                 5C  01FF   647 	.BYTE	^A/\/			; 231   ^XE7   ^O347
                                 5C  0200   648 	.BYTE	^A/\/			; 232   ^XE8   ^O350
                                 5C  0201   649 	.BYTE	^A/\/			; 233   ^XE9   ^O351
                                 5C  0202   650 	.BYTE	^A/\/			; 234   ^XEA   ^O352
                                 5C  0203   651 	.BYTE	^A/\/			; 235   ^XEB   ^O353
                                 5C  0204   652 	.BYTE	^A/\/			; 236   ^XEC   ^O354
                                 5C  0205   653 	.BYTE	^A/\/			; 237   ^XED   ^O355
                                 5C  0206   654 	.BYTE	^A/\/			; 238   ^XEE   ^O356
                                 5C  0207   655 	.BYTE	^A/\/			; 239   ^XEF   ^O357
                                 5C  0208   656 	.BYTE	^A/\/			; 240   ^XF0   ^O360
                                 5C  0209   657 	.BYTE	^A/\/			; 241   ^XF1   ^O361
                                 5C  020A   658 	.BYTE	^A/\/			; 242   ^XF2   ^O362
                                 5C  020B   659 	.BYTE	^A/\/			; 243   ^XF3   ^O363
                                 5C  020C   660 	.BYTE	^A/\/			; 244   ^XF4   ^O364
                                 5C  020D   661 	.BYTE	^A/\/			; 245   ^XF5   ^O365
                                 5C  020E   662 	.BYTE	^A/\/			; 246   ^XF6   ^O366
                                 5C  020F   663 	.BYTE	^A/\/			; 247   ^XF7   ^O367
                                 5C  0210   664 	.BYTE	^A/\/			; 248   ^XF8   ^O370
                                 5C  0211   665 	.BYTE	^A/\/			; 249   ^XF9   ^O371
                                 5C  0212   666 	.BYTE	^A/\/			; 250   ^XFA   ^O372
                                 5C  0213   667 	.BYTE	^A/\/			; 251   ^XFB   ^O373
                                 5C  0214   668 	.BYTE	^A/\/			; 252   ^XFC   ^O374
                                 5C  0215   669 	.BYTE	^A/\/			; 253   ^XFD   ^O375
                                 5C  0216   670 	.BYTE	^A/\/			; 254   ^XFE   ^O376
                                 5C  0217   671 	.BYTE	^A/\/			; 255   ^XFF   ^O377
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  13
01              CR11 FUNCTION DECISION TABLE                                                                                     (1)

                                     0218   673 	.SBTTL	CR11 FUNCTION DECISION TABLE
                                     0218   674 ;
                                     0218   675 ; CR11 FUNCTION DECISION TABLE
                                     0218   676 ;
                                     0218   677  
                                     0218   678 CR_FUNCTABLE:				;FUNCTION DECISION TABLE
                                     0218   679 	FUNCTAB	,-			;LEGAL FUNCTION
                                     0218   680 		<READLBLK,-		;READ LOGICAL BLOCK
                                     0218   681 		 READPBLK,-		;READ PHYSICAL BLOCK
                                     0218   682 		 READVBLK,-		;READ VIRTUAL BLOCK
                                     0218   683 		 SENSEMODE,-		;SENSE READ MODE
                                     0218   684 		 SENSECHAR,-		;SENSE READER CHARACTERISTICS
                                     0218   685 		 SETMODE,-		;SET READER MODE
                                     0218   686 		 SETCHAR,-		;SET READER CHARACTERISTICS
                                     0218   687 		>			;
                                     0220   688 	FUNCTAB	,-			;BUFFERED I/O FUNCTIONS
                                     0220   689 		<READLBLK,-		;READ LOGICAL BLOCK
                                     0220   690 		 READPBLK,-		;READ PHYSICAL BLOCK
                                     0220   691 		 READVBLK,-		;READ VIRTUAL BLOCK
                                     0220   692 		 SENSEMODE,-		;SENSE READ MODE
                                     0220   693 		 SENSECHAR,-		;SENSE READER CHARACTERISTICS
                                     0220   694 		 SETMODE,-		;SET READER MODE
                                     0220   695 		 SETCHAR,-		;SET READER CHARACTERISTICS
                                     0220   696 		>			;
                                     0228   697 	FUNCTAB	CR_READ,-		;READ FUNCTIONS
                                     0228   698 		<READLBLK,-		;READ LOGICAL BLOCK
                                     0228   699 		 READPBLK,-		;READ PHYSICAL BLOCK
                                     0228   700 		 READVBLK,-		;READ VIRTUAL BLOCK
                                     0228   701 		>			;
                                     0234   702 	FUNCTAB	+EXE$SETMODE,-		;SET MODE/CHARACTERISTICS FUNCTIONS
                                     0234   703 		<SETCHAR,-		;SET READER CHARACTERISTICS
                                     0234   704 		 SETMODE,-		;SET READER MODE
                                     0234   705 		>			;
                                     0240   706 	FUNCTAB	+EXE$SENSEMODE,-	;SENSE MODE/CHARACTERISTICS FUNCTIONS
                                     0240   707 		<SENSECHAR,-		;SENSE READER CHARACTERISTICS
                                     0240   708 		 SENSEMODE,-		;SENSE READER MODE
                                     0240   709 		>			;
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  14
01              CANCEL I/O ON CHANNEL                                                                                            (1)

                                     024C   711 	.SBTTL	CANCEL I/O ON CHANNEL
                                     024C   712 ;+
                                     024C   713 ; CR_CANCELIO - CANCEL I/O ON CHANNEL
                                     024C   714 ;
                                     024C   715 ; THIS ROUTINE IS CALLED WHEN THE LAST CHANNEL ASSIGNED TO A DEVICE IS DEASSIGNED,
                                     024C   716 ; THE DEVICE IS DEALLOCATED, AND WHEN THE CANCEL I/O ON CHANNEL SYSTEM SERVICE IS
                                     024C   717 ; EXECUTED.
                                     024C   718 ;
                                     024C   719 ; INPUTS:
                                     024C   720 ;
                                     024C   721 ;	R2 = NEGATIVE CHANNEL NUMBER.
                                     024C   722 ;	R3 = ADDRESS OF CURRENT I/O REQUEST PACKET.
                                     024C   723 ;	R4 = CURRENT PROCESS PCB ADDRESS.
                                     024C   724 ;	R5 = DEVICE UCB ADDRESS.
                                     024C   725 ;
                                     024C   726 ; OUTPUTS:
                                     024C   727 ;
                                     024C   728 ;	THE DEVICE INDEPENDENT CANCEL I/O ROUTINE IS CALLED AND A CHECK IS MADE
                                     024C   729 ;	TO SEE IF THE UCB REFERENCE COUNT IS ZERO. IF THE REFERENCE COUNT IS ZERO,
                                     024C   730 ;	THEN THE MESSAGE SENT TO JOB CONTROLLER BIT IS CLEARED.
                                     024C   731 ;-
                                     024C   732  
                                     024C   733 CR_CANCELIO:				;CANCEL I/O ON CHANNEL
                       50 A5     B5  024C   734 	TSTW	UCB$W_REFC(R5)		;REFERENCE COUNT ZERO?
                          04     12  024F   735 	BNEQ	10$			;IF NEQ NO
         5A A5            01     AA  0251   736 	BICW	#UCB$M_JOB,UCB$W_DEVSTS(R5) ;CLEAR MESSAGE SENT BIT
                 00000000'GF     17  0255   737 10$:	JMP	G^IOC$CANCELIO		;CANCEL I/O ON CHANNEL
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  15
01              READ FUNCTION PROCESSING                                                                                         (1)

                                     025B   739 	.SBTTL	READ FUNCTION PROCESSING
                                     025B   740 ;+
                                     025B   741 ; CR_READ - READ FUNCTION PROCESSING
                                     025B   742 ;
                                     025B   743 ; THIS ROUTINE IS CALLED FROM THE FUNCTION DECISION TABLE DISPATCHER TO PROCESS
                                     025B   744 ; A READ LOGICAL, READ PHYSICAL, OR READ VIRTUAL FUNCTION TO A CARD READER.
                                     025B   745 ;
                                     025B   746 ; INPUTS:
                                     025B   747 ;
                                     025B   748 ;	R0 = SCRATCH.
                                     025B   749 ;	R1 = SCRATCH.
                                     025B   750 ;	R2 = SCRATCH.
                                     025B   751 ;	R3 = ADDRESS OF I/O REQUEST PACKET.
                                     025B   752 ;	R4 = CURRENT PROCESS PCB ADDRESS.
                                     025B   753 ;	R5 = ASSIGNED DEVICE UCB ADDRESS.
                                     025B   754 ;	R6 = ADDRESS OF CCB.
                                     025B   755 ;	R7 = I/O FUNCTION CODE.
                                     025B   756 ;	R8 = FUNCTION DECISION TABLE DISPATCH ADDRESS.
                                     025B   757 ;	R9 = SCRATCH.
                                     025B   758 ;	R10 = SCRATCH.
                                     025B   759 ;	R11 = SCRATCH.
                                     025B   760 ;	AP = ADDRESS OF FIRST FUNCTION DEPENDENT PARAMETER.
                                     025B   761 ;
                                     025B   762 ; OUTPUTS:
                                     025B   763 ;
                                     025B   764 ;	THE FUNCTION PARAMETERS ARE CHECKED AND A BUFFER IS ALLOCATED FOR THE
                                     025B   765 ;	CARD READER DRIVER TO READ A CARD IMAGE INTO.
                                     025B   766 ;-
                                     025B   767  
                                     025B   768 CR_READ:				;READ FUNCTION PROCESSING
            50            6C     D0  025B   769 	MOVL	P1(AP),R0		;GET ADDRESS OF USER BUFFER
            51         04 AC     3C  025E   770 	MOVZWL	P2(AP),R1		;GET LENGTH OF USER BUFFER
                          52     13  0262   771 	BEQL	30$			;IF EQL ZERO LENGTH TRANSFER
                 00000000'GF     16  0264   772 	JSB	G^EXE$READCHK		;CHECK ACCESSIBILITY OF USER BUFFER
         32 A3            51     B0  026A   773 	MOVW	R1,IRP$W_BCNT(R3)	;INSERT LENGTH OF USER BUFFER
                          09     BB  026E   774 	PUSHR	#^M<R0,R3>		;SAVE BUFFER AND I/O PACKET ADDRESSES
            51         50 8F     9A  0270   775 	MOVZBL	#80,R1			;SET LENGTH REQUIRED FOR ASCII READ
         20 A3            06     E1  0274   776 	BBC	#IO$V_BINARY,IRP$W_FUNC(R3),10$ ;IF CLR, ASCII READ
                          03         0278       
            51            02     C4  0279   777 	MULL	#2,R1			;SET LENGTH REQUIRED FOR BINARY READ
         32 A3            51     B1  027C   778 10$:	CMPW	R1,IRP$W_BCNT(R3)	;LENGTH OF READ LARGER THAN USER BUFFER?
                          04     1E  0280   779 	BGEQU	20$			;IF GEQU YES
         32 A3            51     B0  0282   780 	MOVW	R1,IRP$W_BCNT(R3)	;SET LENGTH OF USER BUFFER TO SIZE OF READ
            51            0C     C0  0286   781 20$:	ADDL	#12,R1			;ACCOUNT FOR BUFFER OVERHEAD
                 00000000'GF     16  0289   782 	JSB	G^EXE$BUFFRQUOTA	;CHECK IF PROCESS HAS SUFFICIENT QUOTA
            2F            50     E9  028F   783 	BLBC	R0,40$			;IF LBC QUOTA CHECK FAILURE
                 00000000'GF     16  0292   784 	JSB	G^EXE$ALLOCBUF		;ALLOCATE BUFFER FOR CARD READ
            26            50     E9  0298   785 	BLBC	R0,40$			;IF LBC ALLOCATION FAILURE
                          09     BA  029B   786 	POPR	#^M<R0,R3>		;RETRIEVE BUFFER AND I/O PACKET ADDRESSES
         2C A3            52     D0  029D   787 	MOVL	R2,IRP$L_SVAPTE(R3)	;INSERT ADDRESS OF READ BUFFER
         30 A3            51     B0  02A1   788 	MOVW	R1,IRP$W_BOFF(R3)	;INSERT NUMBER OF QUOTA BYTES CHARGED
         42 A4            51     A2  02A5   789 	SUBW	R1,PCB$W_BYTCNT(R4)	;CHARGE PROCESS FOR BUFFER
            82         0C A2     9E  02A9   790 	MOVAB	12(R2),(R2)+		;INSERT ADDRESS OF DATA AREA
            62            50     D0  02AD   791 	MOVL	R0,(R2)			;SAVE ADDRESS OF USER BUFFER
                 00000000'GF     17  02B0   792 	JMP	G^EXE$QIODRVPKT		;QUEUE DRIVER PACKET
                                     02B6   793  
                                     02B6   794 ;
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  16
01              READ FUNCTION PROCESSING                                                                                         (1)

                                     02B6   795 ; ZERO LENGTH TRANSFER
                                     02B6   796 ;
                                     02B6   797  
            50       0000'8F     3C  02B6   798 30$:	MOVZWL	#SS$_NORMAL,R0		;SET NORMAL COMPLETION STATUS
                 00000000'GF     17  02BB   799 	JMP	G^EXE$FINISHIOC		;FINISH I/O
                                     02C1   800  
                                     02C1   801 ;
                                     02C1   802 ; QUOTA OR BUFFER ALLOCATION FAILURE
                                     02C1   803 ;
                                     02C1   804  
                          0C     BA  02C1   805 40$:	POPR	#^M<R2,R3>		;RETRIEVE I/O PACKET ADDRESS
                 00000000'GF     17  02C3   806 	JMP	G^EXE$ABORTIO		;ABORT I/O OPERATION
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  17
01              START I/O OPERATION ON CR11 CARD READER                                                                          (1)

                                     02C9   808 	.SBTTL	START I/O OPERATION ON CR11 CARD READER
                                     02C9   809 ;+
                                     02C9   810 ; CR_STARTIO - START I/O OPERATION ON CR11 CARD READER
                                     02C9   811 ;
                                     02C9   812 ; THIS ROUTINE IS ENTERED WHEN THE ASSOCIATED UNIT IS IDLE AND A PACKET IS
                                     02C9   813 ; AVAILABLE FOR PROCESSING.
                                     02C9   814 ;
                                     02C9   815 ; INPUTS:
                                     02C9   816 ;
                                     02C9   817 ;	R3 = ADDRESS OF I/O REQUEST PACKET.
                                     02C9   818 ;	R5 = ADDRESS OF DEVICE UNIT UCB.
                                     02C9   819 ;
                                     02C9   820 ; OUTPUTS:
                                     02C9   821 ;
                                     02C9   822 ;	CARD MOTION IS STARTED BY SETTING THE APPROPRIATE FUNCTION BITS IN THE
                                     02C9   823 ;	CONTROL STATUS REGISTER. AS EACH COLUMN INTERRUPT OCCURS, THE DATA FROM
                                     02C9   824 ;	THE DATA BUFFER REGISTER(S) IS STORED IN THE BUFFER ALLOCATED BY THE
                                     02C9   825 ;	FDT ROUTINE. WHEN ALL 80 COLUMNS HAVE BEEN READ, A FORK PROCESS IS CREAT-
                                     02C9   826 ;	ED, THE COLUMN DATA IS CONVERTED ACCORDING TO THE I/O FUNCTION CODE, AND
                                     02C9   827 ;	REQUEST COMPLETE IS CALLED FOR POST PROCESSING.
                                     02C9   828 ;-
                                     02C9   829  
                                     02C9   830 CR_STARTIO:				;START I/O OPERATION
                          00     ED  02C9   831 	CMPZV	#IRP$V_FCODE,#IRP$S_FCODE,- ;SET MODE FUNCTION?
         20 A3            06         02CB   832 		IRP$W_FUNC(R3),#IO$_SETMODE ;
                          23         02CE       
                          0D     13  02CF   833 	BEQL	10$			;IF EQL YES
                          00     ED  02D1   834 	CMPZV	#IRP$V_FCODE,#IRP$S_FCODE,- ;SET CHARACTERISTICS FUNCTION?
         20 A3            06         02D3   835 		IRP$W_FUNC(R3),#IO$_SETCHAR ;
                          1A         02D6       
                          12     12  02D7   836 	BNEQ	20$			;IF NEQ NO
                                     02D9   837  
                                     02D9   838 ;
                                     02D9   839 ; SET READER CHARACTERISTICS
                                     02D9   840 ;
                                     02D9   841  
         3C A5         34 A3     B0  02D9   842 	MOVW	IRP$L_MEDIA(R3),UCB$L_DEVDEPEND(R5) ;SET DEVICE CLASS AND TYPE
                                     02DE   843  
                                     02DE   844 ;
                                     02DE   845 ; SET READER MODE
                                     02DE   846 ;
                                     02DE   847  
         3A A5         36 A3     B0  02DE   848 10$:	MOVW	IRP$L_MEDIA+2(R3),UCB$W_DEVBUFSIZ(R5) ;SET DEFAULT BUFFER SIZE
         3C A5         38 A3     D0  02E3   849 	MOVL	IRP$L_MEDIA+4(R3),UCB$L_DEVDEPEND(R5) ;SET DEVICE DEPENDENT FLAGS
                          0134   31  02E8   850 	BRW	140$			;
                                     02EB   851  
                                     02EB   852 ;
                                     02EB   853 ; SET UP PARAMETERS AND READ CARD
                                     02EB   854 ;
                                     02EB   855  
         68 A5         2C B3     D0  02EB   856 20$:	MOVL	@IRP$L_SVAPTE(R3),UCB$L_SVAPTE(R5) ;SET ADDRESS OF BUFFER
         75 A5            01     90  02F0   857 	MOVB	#1,UCB$B_CR_EOFCNT(R5)	;SET END OF FILE COUNT FOR ASCII
         20 A3            06     E1  02F4   858 	BBC	#IO$V_BINARY,IRP$W_FUNC(R3),30$ ;IF CLR, ASCII READ
                          04         02F8       
         75 A5            08     90  02F9   859 	MOVB	#8,UCB$B_CR_EOFCNT(R5)	;SET END OF FILE COUNT FOR BINARY
         76 A5         75 A5     90  02FD   860 30$:	MOVB	UCB$B_CR_EOFCNT(R5),UCB$B_CR_EOFCOL(R5) ;SET REQUIRED NUMBER
         74 A5            01     8E  0302   861 	MNEGB	#1,UCB$B_CR_COLCNT(R5)	;SET INITIAL COLUMN COUNT
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  18
01              START I/O OPERATION ON CR11 CARD READER                                                                          (1)

                       77 A5     94  0306   862 	CLRB	UCB$B_CR_OFLCNT(R5)	;SET INITIAL OFFLINE COUNT
            54         20 A5     D0  0309   863 	MOVL	UCB$L_CRB(R5),R4	;GET ADDRESS OF CRB
            54         1C B4     D0  030D   864 	MOVL	@CRB$L_INTD+VEC$L_IDB(R4),R4 ;GET DEVICE CSR ADDRESS
                                     0311   865 40$:	DSBINT				;DISABLE INTERRUPTS
            64       0100 8F     B3  0317   866 	BITW	#CR_CSR_M_OFFLIN,CR_CSR(R4) ;READER OFFLINE?
                          47     13  031C   867 	BEQL	70$			;IF EQL NO
                                     031E   868 	WFIKPCH	50$,#2			;WAIT FOR TIMEOUT
                                     0328   869 	IOFORK				;CREATE FORK PROCESS
                          E1     11  032E   870 	BRB	40$			;
                                     0330   871  
                                     0330   872 ;
                                     0330   873 ; READER TIME OUT OR DEVICE ERROR
                                     0330   874 ;
                                     0330   875  
            64         40 8F     9B  0330   876 50$:	MOVZBW	#CR_CSR_M_IE,CR_CSR(R4)	;CLEAR READER ERRORS
                                     0334   877 	SETIPL	UCB$B_FIPL(R5)		;LOWER TO DEVICE FORK LEVEL
         58 A5            03     E0  0338   878 	BBS	#UCB$V_CANCEL,UCB$W_STS(R5),60$ ;IF SET, CANCEL I/O REQUESTED
                          20         033C       
            01            0F     9D  033D   879 	ACBB	#15,#1,UCB$B_CR_OFLCNT(R5),40$ ;IF SET, NOT TIME FOR MESSAGE
            FFCD       77 A5         0340       
                       77 A5     94  0344   880 	CLRB	UCB$B_CR_OFLCNT(R5)	;CLEAR OFFLINE COUNT
                          18     BB  0347   881 	PUSHR	#^M<R3,R4>		;SAVE REGISTERS
            54            05     9A  0349   882 	MOVZBL	#MSG$_DEVOFFLIN,R4	;SET DEVICE MESSAGE NUMBER
            53   00000000'GF     9E  034C   883 	MOVAB	G^SYS$GL_OPRMBX,R3	;GET ADDRESS OF OPERATOR MAILBOX
                 00000000'GF     16  0353   884 	JSB	G^EXE$SNDEVMSG		;SEND MESSAGE TO OPERATOR
                          18     BA  0359   885 	POPR	#^M<R3,R4>		;RESTORE REGISTERS
                          B4     11  035B   886 	BRB	40$			;
                                     035D   887  
                                     035D   888 ;
                                     035D   889 ; CANCEL CURRENT READ REQUEST
                                     035D   890 ;
                                     035D   891  
            50       0000'8F     3C  035D   892 60$:	MOVZWL	#SS$_ABORT,R0		;SET ABORT STATUS
                          00C5   31  0362   893 	BRW	150$			;
                                     0365   894  
                                     0365   895 ;
                                     0365   896 ; INITIATE READ
                                     0365   897 ;
                                     0365   898  
                       02 A4     B5  0365   899 70$:	TSTW	CR_CRB1(R4)		;CLEAR COLUMN BUFFER
                                 9B  0368   900 	MOVZBW	#CR_CSR_M_IE!CR_CSR_M_READ,- ;ENABLE INTERRUPTS AND START READ
            64         41 8F         0369   901 		CR_CSR(R4)		;
                                     036C   902 80$:	WFIKPCH	50$,#3			;WAITFOR INTERRUPT OR TIMEOUT
            64       C000 8F     B3  0376   903 	BITW	#CR_CSR_M_CRDONE!CR_CSR_M_ERROR,CR_CSR(R4) ;CARD DONE OR ERROR?
                          3D     12  037B   904 	BNEQ	120$			;IF NEQ YES
            51         02 A4     B0  037D   905 	MOVW	CR_CRB1(R4),R1		;READ BINARY COLUMN
            52         04 A4     B0  0381   906 	MOVW	CR_CRB2(R4),R2		;READ PACKED COLUMN
                       74 A5     96  0385   907 	INCB	UCB$B_CR_COLCNT(R5)	;INCREMENT COLUMN COUNT
                          04     12  0388   908 	BNEQ	90$			;IF NEQ NOT FIRST COLUMN
         78 A5            51     B0  038A   909 	MOVW	R1,UCB$W_CR_FSTCOL(R5)	;SAVE FIRST COLUMN BINARY DATA
         74 A5         76 A5     91  038E   910 90$:	CMPB	UCB$B_CR_EOFCOL(R5),UCB$B_CR_COLCNT(R5) ;PAST END OF FILE DATA?
                          0A     15  0393   911 	BLEQ	100$			;IF LEQ YES
            51       0F0F 8F     B1  0395   912 	CMPW	#CR_EOF,R1		;END OF FILE PUNCH?
                          03     12  039A   913 	BNEQ	100$			;IF NEQ NO
                       75 A5     97  039C   914 	DECB	UCB$B_CR_EOFCNT(R5)	;DECREMENT END OF FILE COUNT
         68 B5            52     90  039F   915 100$:	MOVB	R2,@UCB$L_SVAPTE(R5)	;STORE PACKED COLUMN
         20 A3            06     E1  03A3   916 	BBC	#IO$V_BINARY,IRP$W_FUNC(R3),110$ ;IF CLR, ASCII READ
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  19
01              START I/O OPERATION ON CR11 CARD READER                                                                          (1)

                          07         03A7       
         68 B5            51     B0  03A8   917 	MOVW	R1,@UCB$L_SVAPTE(R5)	;STORE BINARY COLUMN
                       68 A5     D6  03AC   918 	INCL	UCB$L_SVAPTE(R5)	;UPDATE BUFFER ADDRESS
                       68 A5     D6  03AF   919 110$:	INCL	UCB$L_SVAPTE(R5)	;UPDATE BUFFER ADDRESS
                                     03B2   920 	DSBINT				;DISABLE INTERRUPTS
                          B2     11  03B8   921 	BRB	80$			;
                                     03BA   922  
                                     03BA   923 ;
                                     03BA   924 ; SPECIAL CONDITION
                                     03BA   925 ;
                                     03BA   926  
         7A A5            64     B0  03BA   927 120$:	MOVW	CR_CSR(R4),UCB$W_CR_CSR(R5) ;SAVE READER STATUS
            64         40 8F     9B  03BE   928 	MOVZBW	#CR_CSR_M_IE,CR_CSR(R4)	;CLEAR READER ERRORS
                                     03C2   929 	IOFORK				;CREATE FORK PROCESS
            50       0000'8F     3C  03C8   930 	MOVZWL	#SS$_ENDOFFILE,R0	;ASSUME END OF FILE ENCOUNTERED
                       75 A5     95  03CD   931 	TSTB	UCB$B_CR_EOFCNT(R5)	;END OF FILE?
                          58     13  03D0   932 	BEQL	150$			;IF EQL YES
            50       0000'8F     3C  03D2   933 	MOVZWL	#SS$_DATAOVERUN,R0	;ASSUME TIMING ERROR
         7A A5            0B     E0  03D7   934 	BBS	#CR_CSR_V_TIMERR,UCB$W_CR_CSR(R5),150$ ;IF SET, TIMING ERROR
                          4E         03DB       
            64       9000 8F     B3  03DC   935 	BITW	#CR_CSR_M_ERROR!-	;ERROR OR,
                                     03E1   936 		CR_CSR_M_MCHECK,CR_CSR(R4) ;MOTION CHECK ERROR?
                          5D     12  03E1   937 	BNEQ	180$			;IF NEQ YES
         20 A3       00C0 8F     B3  03E3   938 	BITW	#IO$M_BINARY!IO$M_PACKED,IRP$W_FUNC(R3) ;BINARY OR PACKED READ?
                          34     12  03E9   939 	BNEQ	140$			;IF NEQ YES
         78 A5       0AAA 8F     B1  03EB   940 	CMPW	#CR_029,UCB$W_CR_FSTCOL(R5) ;CHANGE MODE TO 029 TRANSLATION?
                          3F     13  03F1   941 	BEQL	160$			;IF EQL YES
         78 A5       08A2 8F     B1  03F3   942 	CMPW	#CR_026,UCB$W_CR_FSTCOL(R5) ;CHANGE MODE TO 026 TRANSLATION?
                          3F     13  03F9   943 	BEQL	170$			;IF EQL YES
            50       FC19 CF     9E  03FB   944 	MOVAB	CR_CVT029,R0		;GET ADDRESS OF 029 TRANSLATION TABLE
                          00     ED  0400   945 	CMPZV	#CR$V_TMODE,#CR$S_TMODE,- ;029 TRANSLATION MODE?
         3C A5            04         0402   946 		UCB$L_DEVDEPEND(R5),#CR$K_T029 ;
                          01         0405       
                          05     13  0406   947 	BEQL	130$			;IF EQL YES
            50       FD0C CF     9E  0408   948 	MOVAB	CR_CVT026,R0		;GET ADDRESS OF 026 TRANSLATION TABLE
                          55     DD  040D   949 130$:	PUSHL	R5			;SAVE ADDRESS OF UCB
            51         2C B3     D0  040F   950 	MOVL	@IRP$L_SVAPTE(R3),R1	;GET ADDRESS OF I/O BUFFER
            61         32 A3     2E  0413   951 	MOVTC	IRP$W_BCNT(R3),(R1),#0,(R0),IRP$W_BCNT(R3),(R1) ;TRANSLATE
            60            00         0417       
            61         32 A3         0419       
                          55   8ED0  041C   952 	POPL	R5			;RETRIEVE ADDRESS OF UCB
            50       0000'8F     3C  041F   953 140$:	MOVZWL	#SS$_NORMAL,R0		;SET NORMAL COMPLETION
            10         6E A5     F0  0424   954 	INSV	UCB$W_BCNT(R5),#16,#16,R0 ;INSERT TRANSFER BYTE COUNT
            50            10         0428       
                          51     D4  042A   955 150$:	CLRL	R1			;CLEAR SECOND I/O LONGWORD
                                     042C   956 	REQCOM				;COMPLETE REQUEST
                                     0432   957  
                                     0432   958 ;
                                     0432   959 ; SET 029 TRANSLATION MODE
                                     0432   960 ;
                                     0432   961  
                          01     F0  0432   962 160$:	INSV	#CR$K_T029,#CR$V_TMODE,- ;SET 029 TRANSLATION MODE
            04            00         0434   963 		#CR$S_TMODE,UCB$L_DEVDEPEND(R5) ;
                       3C A5         0436       
                          06     11  0438   964 	BRB	180$			;
                                     043A   965  
                                     043A   966 ;
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  20
01              START I/O OPERATION ON CR11 CARD READER                                                                          (1)

                                     043A   967 ; SET 026 TRANSLATION MODE
                                     043A   968 ;
                                     043A   969  
                          00     F0  043A   970 170$:	INSV	#CR$K_T026,#CR$V_TMODE,- ;SET 026 TRANSLATION MODE
            04            00         043C   971 		#CR$S_TMODE,UCB$L_DEVDEPEND(R5) ;
                       3C A5         043E       
                          FEA8   31  0440   972 180$:	BRW	20$			;
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  21
01              CR11 CARD READER INTDERRUPTS                                                                                     (1)

                                     0443   974 	.SBTTL	CR11 CARD READER INTDERRUPTS
                                     0443   975 ;+
                                     0443   976 ; CR$INT - CR11 CARD READER INTERRUPTS
                                     0443   977 ;
                                     0443   978 ; THIS ROUTINE IS ENTERED VIA A JSB INSTRUCTION WHEN AN INTERRUPT OCCURS ON A
                                     0443   979 ; CR11 CARD READER CONTROLLER. THE STATE OF THE STACK ON ENTRY IS:
                                     0443   980 ;
                                     0443   981 ;	00(SP) = ADDRESS OF IDB ADDRESS.
                                     0443   982 ;	04(SP) = SAVED R3.
                                     0443   983 ;	08(SP) = SAVED R4.
                                     0443   984 ;	12(SP) = SAVED R5.
                                     0443   985 ;	16(SP) = INTERRUPT PC.
                                     0443   986 ;	20(SP) = INTERRUPT PSL.
                                     0443   987 ;
                                     0443   988 ; INTERRUPT DISPATCHING OCCURS AS FOLLOWS:
                                     0443   989 ;
                                     0443   990 ;MUMBLE
                                     0443   991 ;-
                                     0443   992  
                                     0443   993 CR$INT::				;CARD READER INTERRUPT
            53            9E     D0  0443   994 	MOVL	@(SP)+,R3		;GET ADDRESS OF IDB
            54            63     7D  0446   995 	MOVQ	IDB$L_CSR(R3),R4	;GET CONTROLLER CSR AND OWNER UCB ADDRESS
         58 A5            01     E5  0449   996 	BBCC	#UCB$V_INT,UCB$W_STS(R5),10$ ;IF CLR, INTERRUPT NOT EXPECTED
                          11         044D       
            53         10 A5     D0  044E   997 	MOVL	UCB$L_FR3(R5),R3	;RESTORE REMAINING DRIVER CONTEXT
                       0C B5     16  0452   998 	JSB	@UCB$L_FPC(R5)		;CALL DRIVER
            50            8E     7D  0455   999 	MOVQ	(SP)+,R0		;RESTORE REGISTERS
            52            8E     7D  0458  1000 	MOVQ	(SP)+,R2		;
            54            8E     7D  045B  1001 	MOVQ	(SP)+,R4		;
                                 02  045E  1002 	REI				;
                                     045F  1003  
                                     045F  1004 ;
                                     045F  1005 ; UNSOLICITED INTERRUPT
                                     045F  1006 ;
                                     045F  1007  
            64       0400 8F     B3  045F  1008 10$:	BITW	#CR_CSR_M_ONLINE,CR_CSR(R4) ;READER TRANSITION TO ONLINE?
                          10     13  0464  1009 	BEQL	20$			;IF EQL NO
                       50 A5     B5  0466  1010 	TSTW	UCB$W_REFC(R5)		;DEVICE ASSIGNED OR ALLOCATED?
                          0B     12  0469  1011 	BNEQ	20$			;IF NEQ YES
            64         40 8F     9B  046B  1012 	MOVZBW	#CR_CSR_M_IE,CR_CSR(R4)	;CLEAR READER STATUS
         5A A5            00     E2  046F  1013 	BBSS	#UCB$V_JOB,UCB$W_DEVSTS(R5),20$ ;IF SET, MESSAGE ALREADY SENT
                          02         0473       
                          0A     10  0474  1014 	BSBB	30$			;SEND MESSAGE TO JOB CONTROLLER
            50            8E     7D  0476  1015 20$:	MOVQ	(SP)+,R0		;RESTORE REGISTERS
            52            8E     7D  0479  1016 	MOVQ	(SP)+,R2		;
            54            8E     7D  047C  1017 	MOVQ	(SP)+,R4		;
                                 02  047F  1018 	REI				;
                 00000000'GF     16  0480  1019 30$:	JSB	G^EXE$FORK		;CREATE FORK PROCESS
            54            02     9A  0486  1020 	MOVZBL	#MSG$_CRUNSOLIC,R4	;SET MESSAGE TYPE
            53   00000000'GF     9E  0489  1021 	MOVAB	G^SYS$GL_JOBCTLMB,R3	;SET ADDRESS OF JOB CONTROLLER MAILBOX
                 00000000'GF     16  0490  1022 	JSB	G^EXE$SNDEVMSG		;SENT MESSAGE TO JOB CONTROLLER
            04            50     E8  0496  1023 	BLBS	R0,40$			;IF LBS SUCCESSFUL NOTIFICATION
         5A A5            01     AA  0499  1024 	BICW	#UCB$M_JOB,UCB$W_DEVSTS(R5) ;CLEAR MESSAGE SENT BIT
                                 05  049D  1025 40$:	RSB				;
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  22
01              CARD READER INITIALIZATION                                                                                       (1)

                                     049E  1027 	.SBTTL	CARD READER INITIALIZATION
                                     049E  1028 ;+
                                     049E  1029 ; CR_INITIAL - CR11 CARD READER INITIALIZATION
                                     049E  1030 ;
                                     049E  1031 ; THIS ROUTINE IS CALLED AT SYSTEM STARTUP AND AFTER A POWER FAILURE. THE CSR
                                     049E  1032 ; ADDRESS OF THE RESPECTIVE CR11 CONTROLLER IS READ TO INSURE ITS PRESENCE ON
                                     049E  1033 ; THE UBA AND THEN CARD READER INTERRUPTS ARE ENABLED.
                                     049E  1034 ;
                                     049E  1035 ; INPUTS:
                                     049E  1036 ;
                                     049E  1037 ;	R4 = CR11 CONTROLLER CSR ADDRESS.
                                     049E  1038 ;	R5 = IDB ADDRESS OF DEVICE UNIT.
                                     049E  1039 ;
                                     049E  1040 ; OUTPUTS:
                                     049E  1041 ;
                                     049E  1042 ;	ALL REGISTERS ARE PRESERVED.
                                     049E  1043 ;-
                                     049E  1044  
                                     049E  1045 CR_INITIAL:				;CR11 INITIALIZATION
            64         40 8F     9B  049E  1046 	MOVZBW	#CR_CSR_M_IE,CR_CSR(R4)	;ENABLE CR11 INTERRUPTS
                                 05  04A2  1047 	RSB				;
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  23
01              CARD READER UNIT INITIALIZATION                                                                                  (1)

                                     04A3  1049 	.SBTTL	CARD READER UNIT INITIALIZATION
                                     04A3  1050 ;+
                                     04A3  1051 ; CR_CR11_INIT - CARD READER UNIT INITIALIZATION
                                     04A3  1052 ;
                                     04A3  1053 ; THIS ROUTINE IS CALLED AT SYSTEM STARTUP AND AFTER A POWER FAILURE. THE
                                     04A3  1054 ; ONLINE BIT IS SET IN THE DEVICE UCB.
                                     04A3  1055 ;
                                     04A3  1056 ; INPUTS:
                                     04A3  1057 ;
                                     04A3  1058 ;	R5 = ADDRESS OF DEVICE UCB.
                                     04A3  1059 ;
                                     04A3  1060 ; OUTPUTS:
                                     04A3  1061 ;
                                     04A3  1062 ;	THE ONLINE BIT IS SET IN THE DEVICE UCB AND THE ADDRESS OF THE UCB
                                     04A3  1063 ;	IS FILLED INTO THE OWNER FIELD OF THE IDB.
                                     04A3  1064 ;-
                                     04A3  1065  
                                     04A3  1066 CR_CR11_INIT:				;CARD READER UNIT INITIALIZATION
         58 A5            10     A8  04A3  1067 	BISW	#UCB$M_ONLINE,UCB$W_STS(R5) ;SET UNIT ONLINE
            50         20 A5     D0  04A7  1068 	MOVL	UCB$L_CRB(R5),R0	;GET ADDRESS OF CRB
            50         1C A0     D0  04AB  1069 	MOVL	CRB$L_INTD+VEC$L_IDB(R0),R0 ;GET ADDRESS OF IDB
         04 A0            55     D0  04AF  1070 	MOVL	R5,IDB$L_OWNER(R0)	;SET ADDRESS OF DEVICE UCB
                                 05  04B3  1071 	RSB				;
                                     04B4  1072 CR_END:					;ADDRESS OF LAST LOCATION IN DRIVER
                                     04B4  1073  
                                     04B4  1074 	.END
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  24
SYMBOL TABLE                                                                                                                     (1)

$$OP           = 00000002            CR_CVT026        00000118 R     04   EXE$QIODRVPKT    ********   X   04   
AT$_UBA          ********   X   03   CR_CVT029        00000018 R     04   EXE$READCHK      ********   X   04   
BIT...         = 00000010            CR_END           000004B4 R     04   EXE$SENSEMODE    ********   X   04   
CR$DDT           00000000 RG    04   CR_EOF         = 00000F0F            EXE$SETMODE      ********   X   04   
CR$INT           00000443 RG    04   CR_FUNCTABLE     00000218 R     04   EXE$SNDEVMSG     ********   X   04   
CR$K_T026      = 00000000            CR_INITIAL       0000049E R     04   GBL...         = 00000000            
CR$K_T029      = 00000001            CR_READ          0000025B R     04   IDB$B_TYPE       0000000A            
CR$M_TMODE     = 0000000F            CR_STARTIO       000002C9 R     04   IDB$B_UNITS      0000000B            
CR$S_TMODE     = 00000004            DC$_CARD         ********   X   03   IDB$C_LENGTH     00000030            
CR$V_TMODE     = 00000000            DDB$B_ACPCLASS   00000013            IDB$K_LENGTH     00000030            
CRB$B_MASK       0000000E            DDB$B_TYPE       0000000A            IDB$L_ADP        0000000C            
CRB$B_TT_ATTN    00000004            DDB$C_LENGTH     00000034            IDB$L_CSR        00000000            
CRB$B_TT_EXPEC   00000005            DDB$K_LENGTH     00000034            IDB$L_OWNER      00000004            
CRB$B_TYPE       0000000A            DDB$L_ACPD       00000010            IDB$L_UCBLST     00000010            
CRB$C_LENGTH     00000038            DDB$L_DDT        0000000C            IDB$W_SIZE       00000008            
CRB$K_LENGTH     00000038            DDB$L_LINK       00000000            IO$M_ABORT     = 00000100            
CRB$L_INTD       00000014            DDB$L_UCB        00000004            IO$M_ACCESS    = 00000040            
CRB$L_INTD2      00000038            DDB$T_DRVNAME    00000024            IO$M_ATTNAST   = 00000100            
CRB$L_LINK       00000010            DDB$T_NAME       00000014            IO$M_BINARY    = 00000040            
CRB$L_TT_DIAL    00000000            DDB$W_SIZE       00000008            IO$M_CANCTRLO  = 00000040            
CRB$L_WQBL       00000004            DEV$M_AVL        ********   X   03   IO$M_COMMOD    = 00000040            
CRB$L_WQFL       00000000            DEV$M_IDV        ********   X   03   IO$M_CREATE    = 00000080            
CRB$M_BSY      = 00000001            DEV$M_REC        ********   X   03   IO$M_CTRLCAST  = 00000100            
CRB$V_BSY      = 00000000            DPT$B_ADPTYPE    0000000C            IO$M_CTRLYAST  = 00000080            
CRB$W_REFC       0000000C            DPT$B_FLAGS      0000000D            IO$M_CVTLOW    = 00000100            
CRB$W_SIZE       00000008            DPT$B_REFC       0000000B            IO$M_DATACHECK = 00004000            
CR_026         = 000008A2            DPT$B_TYPE       0000000A            IO$M_DELETE    = 00000100            
CR_029         = 00000AAA            DPT$C_LENGTH     00000022            IO$M_DMOUNT    = 00000400            
CR_CANCELIO      0000024C R     04   DPT$INITAB       0000001F R     03   IO$M_DSABLMBX  = 00000400            
CR_CR11_INIT     000004A3 R     04   DPT$K_LENGTH     00000022            IO$M_ENABLMBX  = 00000080            
CR_CRB1          00000002            DPT$L_BLINK      00000004            IO$M_FCODE     = 0000003F            
CR_CRB2          00000004            DPT$L_FLINK      00000000            IO$M_HANGUP    = 00000200            
CR_CSR           00000000            DPT$M_NOUNLOAD = 00000004            IO$M_INHERLOG  = 00000800            
CR_CSR_M_BUSY  = 00000200            DPT$M_SUBCNTRL = 00000001            IO$M_INHEXTGAP = 00001000            
CR_CSR_M_CLDONE= 00000080            DPT$M_SVP      = 00000002            IO$M_INHRETRY  = 00008000            
CR_CSR_M_CRDONE= 00004000            DPT$REINITAB     00000042 R     03   IO$M_INHSEEK   = 00001000            
CR_CSR_M_EJECT = 00000002            DPT$TAB          00000000 R     03   IO$M_INTERRUPT = 00000040            
CR_CSR_M_ERROR = 00008000            DPT$T_NAME       00000016            IO$M_INTSKIP   = 00000100            
CR_CSR_M_HCHECK= 00002000            DPT$V_NOUNLOAD = 00000002            IO$M_MOUNT     = 00000200            
CR_CSR_M_IE    = 00000040            DPT$V_SUBCNTRL = 00000000            IO$M_NOECHO    = 00000040            
CR_CSR_M_MCHECK= 00001000            DPT$V_SVP      = 00000001            IO$M_NOFILTR   = 00000200            
CR_CSR_M_OFFLIN= 00000100            DPT$W_INITTAB    00000010            IO$M_NOFORMAT  = 00000100            
CR_CSR_M_ONLINE= 00000400            DPT$W_REINITTAB  00000012            IO$M_NOW       = 00000040            
CR_CSR_M_READ  = 00000001            DPT$W_SIZE       00000008            IO$M_NOWAIT    = 00000080            
CR_CSR_M_TIMERR= 00000800            DPT$W_UCBSIZE    0000000E            IO$M_PACKED    = 00000080            
CR_CSR_V_BUSY  = 00000009            DPT$W_UNLOAD     00000014            IO$M_PURGE     = 00000800            
CR_CSR_V_CLDONE= 00000007            DT$_CR11         ********   X   03   IO$M_READATTN  = 00000080            
CR_CSR_V_CRDONE= 0000000E            DYN$C_CRB        ********   X   03   IO$M_REVERSE   = 00000040            
CR_CSR_V_EJECT = 00000001            DYN$C_DDB        ********   X   03   IO$M_SHUTDOWN  = 00000080            
CR_CSR_V_ERROR = 0000000F            DYN$C_DPT        ********   X   03   IO$M_STARTUP   = 00000040            
CR_CSR_V_HCHECK= 0000000D            DYN$C_UCB        ********   X   03   IO$M_SYNCH     = 00000200            
CR_CSR_V_IE    = 00000006            EXE$ABORTIO      ********   X   04   IO$M_TIMED     = 00000080            
CR_CSR_V_MCHECK= 0000000C            EXE$ALLOCBUF     ********   X   04   IO$M_TRMNOECHO = 00001000            
CR_CSR_V_OFFLIN= 00000008            EXE$BUFFRQUOTA   ********   X   04   IO$M_WRTATTN   = 00000100            
CR_CSR_V_ONLINE= 0000000A            EXE$FINISHIOC    ********   X   04   IO$S_FCODE     = 00000006            
CR_CSR_V_READ  = 00000000            EXE$FORK         ********   X   04   IO$V_ABORT     = 00000008            
CR_CSR_V_TIMERR= 0000000B            EXE$IOFORK       ********   X   04   IO$V_ACCESS    = 00000006            
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  25
SYMBOL TABLE                                                                                                                     (1)

IO$V_ATTNAST   = 00000008            IO$_READTRACKD = 00000010            IRP$M_CHAINED  = 00000020            
IO$V_BINARY    = 00000006            IO$_READVBLK   = 00000031            IRP$M_COMPLX   = 00000008            
IO$V_CANCTRLO  = 00000006            IO$_RECAL      = 00000003            IRP$M_DIAGBUF  = 00000080            
IO$V_COMMOD    = 00000006            IO$_RELEASE    = 00000005            IRP$M_FUNC     = 00000002            
IO$V_CREATE    = 00000007            IO$_RETCENTER  = 00000007            IRP$M_MBXIO    = 00000400            
IO$V_CTRLCAST  = 00000008            IO$_REWIND     = 00000024            IRP$M_PAGIO    = 00000004            
IO$V_CTRLYAST  = 00000007            IO$_REWINDOFF  = 00000022            IRP$M_PHYSIO   = 00000100            
IO$V_CVTLOW    = 00000008            IO$_SEARCH     = 00000009            IRP$M_PRIVIO   = 00000200            
IO$V_DATACHECK = 0000000E            IO$_SEEK       = 00000002            IRP$M_SWAPIO   = 00000040            
IO$V_DELETE    = 00000008            IO$_SENSECHAR  = 0000001B            IRP$M_VIRTUAL  = 00000010            
IO$V_DMOUNT    = 0000000A            IO$_SENSEMODE  = 00000027            IRP$Q_NT_PRVMSK  0000003C            
IO$V_DSABLMBX  = 0000000A            IO$_SETCHAR    = 0000001A            IRP$S_FCODE    = 00000006            
IO$V_ENABLMBX  = 00000007            IO$_SETMODE    = 00000023            IRP$S_FMOD     = 0000000A            
IO$V_FCODE     = 00000000            IO$_SKIPFILE   = 00000025            IRP$S_MODE     = 00000002            
IO$V_HANGUP    = 00000009            IO$_SKIPRECORD = 00000026            IRP$V_BUFIO    = 00000000            
IO$V_INHERLOG  = 0000000B            IO$_SPACEFILE  = 00000002            IRP$V_CHAINED  = 00000005            
IO$V_INHEXTGAP = 0000000C            IO$_SPACERECORD= 00000009            IRP$V_COMPLX   = 00000003            
IO$V_INHRETRY  = 0000000F            IO$_STARTSPNDL = 00000019            IRP$V_DIAGBUF  = 00000007            
IO$V_INHSEEK   = 0000000C            IO$_UNLOAD     = 00000001            IRP$V_FCODE    = 00000000            
IO$V_INTERRUPT = 00000006            IO$_VIRTUAL    = 0000003F            IRP$V_FMOD     = 00000006            
IO$V_INTSKIP   = 00000008            IO$_WRITECHECK = 0000000A            IRP$V_FUNC     = 00000001            
IO$V_MOUNT     = 00000009            IO$_WRITECHECKH= 00000018            IRP$V_MBXIO    = 0000000A            
IO$V_NOECHO    = 00000006            IO$_WRITEHEAD  = 0000000D            IRP$V_MODE     = 00000000            
IO$V_NOFILTR   = 00000009            IO$_WRITELBLK  = 00000020            IRP$V_PAGIO    = 00000002            
IO$V_NOFORMAT  = 00000008            IO$_WRITEMARK  = 0000001C            IRP$V_PHYSIO   = 00000008            
IO$V_NOW       = 00000006            IO$_WRITEOF    = 00000028            IRP$V_PRIVIO   = 00000009            
IO$V_NOWAIT    = 00000007            IO$_WRITEPBLK  = 0000000B            IRP$V_SWAPIO   = 00000006            
IO$V_PACKED    = 00000007            IO$_WRITETRACKD= 0000000F            IRP$V_VIRTUAL  = 00000004            
IO$V_PURGE     = 0000000B            IO$_WRITEVBLK  = 00000030            IRP$W_ABCNT      0000003C            
IO$V_READATTN  = 00000007            IOC$CANCELIO     ********   X   04   IRP$W_BCNT       00000032            
IO$V_REVERSE   = 00000006            IOC$REQCOM       ********   X   04   IRP$W_BOFF       00000030            
IO$V_SHUTDOWN  = 00000007            IOC$RETURN       ********   X   04   IRP$W_CHAN       00000028            
IO$V_STARTUP   = 00000006            IOC$WFIKPCH      ********   X   04   IRP$W_FUNC       00000020            
IO$V_SYNCH     = 00000009            IRP$B_CARCON     00000038            IRP$W_OBCNT      0000003E            
IO$V_TIMED     = 00000007            IRP$B_EFN        00000022            IRP$W_SIZE       00000008            
IO$V_TRMNOECHO = 0000000C            IRP$B_PRI        00000023            IRP$W_STS        0000002A            
IO$V_WRTATTN   = 00000008            IRP$B_RMOD       0000000B            IRP$W_TT_PRMPT   0000003C            
IO$_ACCESS     = 00000032            IRP$B_TYPE       0000000A            MASKH          = 00000080            
IO$_ACPCONTROL = 00000038            IRP$C_LENGTH     0000004C            MASKL          = 08000000            
IO$_CREATE     = 00000033            IRP$K_LENGTH     0000004C            MSG$_ABOOPR    = 00000011            
IO$_DEACCESS   = 00000034            IRP$L_AST        00000010            MSG$_ABORT     = 00000030            
IO$_DELETE     = 00000035            IRP$L_ASTPRM     00000014            MSG$_ACCRSP    = 00000021            
IO$_DIAGNOSE   = 0000001D            IRP$L_DIAGBUF    00000044            MSG$_CONFIRM   = 00000031            
IO$_DRVCLR     = 00000004            IRP$L_IOQBL      00000004            MSG$_CONNECT   = 00000032            
IO$_ERASETAPE  = 00000006            IRP$L_IOQFL      00000000            MSG$_CRUNSOLIC = 00000002            
IO$_LOGICAL    = 0000002F            IRP$L_IOSB       00000024            MSG$_DELPROC   = 00000003            
IO$_MODIFY     = 00000036            IRP$L_IOST1      00000034            MSG$_DELSMB    = 00000014            
IO$_MOUNT      = 00000039            IRP$L_IOST2      00000038            MSG$_DEVOFFLIN = 00000005            
IO$_NOP        = 00000000            IRP$L_MEDIA      00000034            MSG$_DEVONLIN  = 00000007            
IO$_OFFSET     = 00000006            IRP$L_PID        0000000C            MSG$_DISCON    = 00000033            
IO$_PACKACK    = 00000008            IRP$L_SEGVBN     00000040            MSG$_EXIT      = 00000034            
IO$_PHYSICAL   = 0000001F            IRP$L_SEQNUM     00000048            MSG$_INIOPR    = 00000010            
IO$_READHEAD   = 0000000E            IRP$L_SVAPTE     0000002C            MSG$_INTMSG    = 00000035            
IO$_READLBLK   = 00000021            IRP$L_TT_TERM    00000038            MSG$_OPREPLY   = 00000009            
IO$_READPBLK   = 0000000C            IRP$L_UCB        0000001C            MSG$_OPRQST    = 00000008            
IO$_READPRESET = 00000019            IRP$L_WIND       00000018            MSG$_PATHLOST  = 00000036            
IO$_READPROMPT = 00000037            IRP$M_BUFIO    = 00000001            MSG$_PROTOCOL  = 00000037            
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  26
SYMBOL TABLE                                                                                                                     (1)

MSG$_REJECT    = 00000038            PCB$V_NETWRK   = 00000015            UCB$B_ESCAPE     0000004B            
MSG$_RESOPR    = 00000013            PCB$V_NOACNT   = 0000000F            UCB$B_FEX        00000076            
MSG$_SCANBAD   = 00000028            PCB$V_NODELET  = 00000017            UCB$B_FIPL       0000000B            
MSG$_SCANRSP   = 00000029            PCB$V_PHDRES   = 00000012            UCB$B_LOCSRV     0000003C            
MSG$_SMBDON    = 00000009            PCB$V_PSWAPM   = 00000004            UCB$B_OFFNDX     00000094            
MSG$_SMBINI    = 00000008            PCB$V_PWRAST   = 00000016            UCB$B_OFFRTC     00000095            
MSG$_SMBRSP    = 00000020            PCB$V_RES      = 00000000            UCB$B_REMSRV     0000003D            
MSG$_SNDACC    = 0000000A            PCB$V_RESPEN   = 00000005            UCB$B_SECTORS    0000003C            
MSG$_SNDSMB    = 00000004            PCB$V_SSFEXC   = 00000006            UCB$B_SLAVE      00000074            
MSG$_SUSOPR    = 00000012            PCB$V_SSFEXCE  = 00000007            UCB$B_SPR        00000075            
MSG$_THIRDPARTY= 00000039            PCB$V_SSFEXCS  = 00000008            UCB$B_STATE      00000052            
MSG$_TIMEOUT   = 0000003A            PCB$V_SSFEXCU  = 00000009            UCB$B_TRACKS     0000003D            
MSG$_TRMHANGUP = 00000006            PCB$V_SSRWAIT  = 0000000A            UCB$B_TYPE       0000000A            
MSG$_TRMUNSOLIC= 00000001            PCB$V_SUSPEN   = 0000000B            UCB$B_VERTSZ     0000003F            
MSG$_XM_ATTN   = 0000000D            PCB$V_SWPVBN   = 00000010            UCB$C_LENGTH     00000074            
MSG$_XM_DATAVL = 0000000B            PCB$V_WAKEPEN  = 0000000C            UCB$C_LOGLNK   = 00000001            
MSG$_XM_SHUTDN = 0000000C            PCB$V_WALL     = 0000000D            UCB$K_LENGTH     00000074            
P1             = 00000000            PCB$W_APTCNT     00000034            UCB$L_AMB        00000054            
P2             = 00000004            PCB$W_ASTCNT     0000003C            UCB$L_ASTQBL     00000010            
P3             = 00000008            PCB$W_BIOCNT     0000003E            UCB$L_ASTQFL     0000000C            
P4             = 0000000C            PCB$W_BIOLM      00000040            UCB$L_CPID       0000005C            
P5             = 00000010            PCB$W_BYTCNT     00000042            UCB$L_CRB        00000020            
P6             = 00000014            PCB$W_BYTLM      00000068            UCB$L_DDB        00000024            
PCB$B_ASTACT     0000000C            PCB$W_DIOCNT     00000044            UCB$L_DEVCHAR    00000034            
PCB$B_ASTEN      0000000D            PCB$W_DIOLM      00000046            UCB$L_DEVDEPEND  0000003C            
PCB$B_PRI        0000000B            PCB$W_FILCNT     00000048            UCB$L_DPC        00000080            
PCB$B_PRIB       00000033            PCB$W_GPGCNT     00000038            UCB$L_DUETIM     0000005C            
PCB$B_TYPE       0000000A            PCB$W_GRP        00000022            UCB$L_DX_BFPNT   0000009C            
PCB$B_WEFC       00000032            PCB$W_MEM        00000020            UCB$L_DX_BUF     00000098            
PCB$C_LENGTH     0000007C            PCB$W_MTXCNT     0000000E            UCB$L_DX_RXDB    000000A0            
PCB$K_LENGTH     0000007C            PCB$W_PPGCNT     0000003A            UCB$L_EMB        00000078            
PCB$L_ASTQBL     00000014            PCB$W_PRCCNT     0000006A            UCB$L_FIRST      00000014            
PCB$L_ASTQFL     00000010            PCB$W_SIZE       00000008            UCB$L_FPC        0000000C            
PCB$L_EFC2P      00000058            PCB$W_STATE      00000030            UCB$L_FQBL       00000004            
PCB$L_EFC3P      0000005C            PCB$W_TMBU       00000036            UCB$L_FQFL       00000000            
PCB$L_EFCS       00000050            PCB$W_TQCNT      0000004A            UCB$L_FR3        00000010            
PCB$L_EFCU       00000054            PR$_IPL          ********   X   04   UCB$L_FR4        00000014            
PCB$L_EFWM       0000004C            SS$_ABORT        ********   X   04   UCB$L_IOQBL      00000044            
PCB$L_OWNER      0000001C            SS$_DATAOVERUN   ********   X   04   UCB$L_IOQFL      00000040            
PCB$L_PHD        00000064            SS$_ENDOFFILE    ********   X   04   UCB$L_IRP        0000004C            
PCB$L_PHYPCB     00000018            SS$_NORMAL       ********   X   04   UCB$L_LINK       0000002C            
PCB$L_PID        00000060            SYS$GL_JOBCTLMB  ********   X   04   UCB$L_LOGADR     00000064            
PCB$L_PQB        0000004C            SYS$GL_OPRMBX    ********   X   04   UCB$L_MAXBLOCK   00000084            
PCB$L_SQBL       00000004            UCB$B_AMOD       00000053            UCB$L_MEDIA      0000008C            
PCB$L_SQFL       00000000            UCB$B_CEX        00000077            UCB$L_NT_DATSSB  00000074            
PCB$L_STS        00000028            UCB$B_CM1        0000004A            UCB$L_NT_INTSSB  00000078            
PCB$L_UIC        00000020            UCB$B_CM2        0000004B            UCB$L_OPCNT      00000060            
PCB$L_WSSWP      00000024            UCB$B_CR_COLCNT  00000074            UCB$L_OWNUIC     0000001C            
PCB$L_WTIME      0000002C            UCB$B_CR_EOFCNT  00000075            UCB$L_PID        00000028            
PCB$T_LNAME      0000006C            UCB$B_CR_EOFCOL  00000076            UCB$L_RQBL       00000004            
PCB$V_ASTPEN   = 00000011            UCB$B_CR_OFLCNT  00000077            UCB$L_RQFL       00000000            
PCB$V_BATCH    = 0000000E            UCB$B_DEVCLASS   00000038            UCB$L_SVAPTE     00000068            
PCB$V_DELPEN   = 00000001            UCB$B_DEVTYPE    00000039            UCB$L_SVPN       00000064            
PCB$V_FORCPEN  = 00000002            UCB$B_DIPL       00000052            UCB$L_TTCHAR     0000003C            
PCB$V_HIBER    = 00000013            UCB$B_DX_SCTCNT  000000A6            UCB$L_VCB        00000030            
PCB$V_INQUAN   = 00000003            UCB$B_ERTCNT     00000070            UCB$M_BACKP    = 00000020            
PCB$V_LOGIN    = 00000014            UCB$B_ERTMAX     00000071            UCB$M_BSY      = 00000100            
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  27
SYMBOL TABLE                                                                                                                     (1)

UCB$M_CANCEL   = 00000008            UCB$V_VALID    = 0000000B            
UCB$M_DEADMO   = 00000400            UCB$W_BCNT       0000006E            
UCB$M_DELMBX   = 00000002            UCB$W_BCR        00000096            
UCB$M_DIAGBUF  = 00000002            UCB$W_BOFF       0000006C            
UCB$M_DX_WRITE = 00000008            UCB$W_BUFQUO     00000018            
UCB$M_ECC      = 00000001            UCB$W_BYTESTOGO  0000003E            
UCB$M_ERLOGIP  = 00000004            UCB$W_CHARGE     0000004A            
UCB$M_INT      = 00000002            UCB$W_CR_CSR     0000007A            
UCB$M_INTTYPE  = 00000080            UCB$W_CR_FSTCOL  00000078            
UCB$M_JOB      = 00000001            UCB$W_CYLINDERS  0000003E            
UCB$M_MOUNTING = 00000200            UCB$W_DA         0000008C            
UCB$M_NOCNVRT  = 00000004            UCB$W_DC         0000008E            
UCB$M_NT_BFROVF= 00000004            UCB$W_DEVBUFSIZ  0000003A            
UCB$M_NT_BREAK = 00000020            UCB$W_DEVSTS     0000005A            
UCB$M_NT_NAME  = 00000010            UCB$W_DIRSEQ     00000088            
UCB$M_ONLINE   = 00000010            UCB$W_DSTADDR    00000018            
UCB$M_POWER    = 00000020            UCB$W_DX_BCR     000000A4            
UCB$M_PRMMBX   = 00000001            UCB$W_EC1        00000090            
UCB$M_TIM      = 00000001            UCB$W_EC2        00000092            
UCB$M_TIMOUT   = 00000040            UCB$W_ERRCNT     00000072            
UCB$M_TT_NOTIF = 00000004            UCB$W_FUNC       0000007E            
UCB$M_TT_TIMO  = 00000002            UCB$W_MB_SEED    FFFFFFFC            
UCB$M_UNLOAD   = 00001000            UCB$W_MSGCNT     00000016            
UCB$M_VALID    = 00000800            UCB$W_MSGMAX     00000014            
UCB$S_LNKPRI   = 00000002            UCB$W_NT_CHAN    0000007C            
UCB$S_LTYPE    = 00000002            UCB$W_OFFSET     0000008A            
UCB$T_PARTNER    0000000C            UCB$W_REFC       00000050            
UCB$V_BACKP    = 00000005            UCB$W_SIZE       00000008            
UCB$V_BSY      = 00000008            UCB$W_SRCADDR    0000001A            
UCB$V_CANCEL   = 00000003            UCB$W_STS        00000058            
UCB$V_DEADMO   = 0000000A            UCB$W_UNIT       00000048            
UCB$V_DELMBX   = 00000001            UCB$W_VPROT      0000001A            
UCB$V_DIAGBUF  = 00000001            VEC$B_DATAPATH   00000013            
UCB$V_DX_WRITE = 00000003            VEC$B_NUMREG     00000012            
UCB$V_ECC      = 00000000            VEC$C_LENGTH     00000024            
UCB$V_ERLOGIP  = 00000002            VEC$K_LENGTH     00000024            
UCB$V_INT      = 00000001            VEC$L_ADP        00000014            
UCB$V_INTTYPE  = 00000007            VEC$L_IDB        00000008            
UCB$V_JOB      = 00000000            VEC$L_INITIAL    0000000C            
UCB$V_LNKPRI   = 00000006            VEC$L_START      0000001C            
UCB$V_LTYPE    = 00000000            VEC$L_UNITDISC   00000020            
UCB$V_MOUNTING = 00000009            VEC$L_UNITINIT   00000018            
UCB$V_MSGACK   = 00000004            VEC$M_MAPLOCK  = 00008000            
UCB$V_MSGFLO   = 00000003            VEC$M_PATHLOCK = 00000080            
UCB$V_NOCNVRT  = 00000002            VEC$Q_DISPATCH   00000000            
UCB$V_NT_BFROVF= 00000002            VEC$S_DATAPATH = 00000007            
UCB$V_NT_BREAK = 00000005            VEC$S_MAPREG   = 0000000F            
UCB$V_NT_NAME  = 00000004            VEC$V_DATAPATH = 00000000            
UCB$V_ONLINE   = 00000004            VEC$V_MAPLOCK  = 0000000F            
UCB$V_POWER    = 00000005            VEC$V_MAPREG   = 00000000            
UCB$V_PRMMBX   = 00000000            VEC$V_PATHLOCK = 00000007            
UCB$V_SEGFLO   = 00000002            VEC$W_MAPREG     00000010            
UCB$V_TIM      = 00000000            
UCB$V_TIMOUT   = 00000006            
UCB$V_TT_NOTIF = 00000002            
UCB$V_TT_TIMO  = 00000001            
UCB$V_UNLOAD   = 0000000C            
CRDRIVER        - CR11 CARD READER DRIVER                        21-AUG-1978 20:47:53   VAX-11 MACRO X0.3-11               Page  28
PROGRAM SECTION SYNOPSIS                                                                                                         (1)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFE      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$$$105_PROLOGUE  00000057      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$$$115_DRIVER    000004B4      04     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT LONG  


THERE WERE NO ERRORS OR WARNINGS.
8554. BYTES LEFT IN FREE MEMORY POOL.
1662. BYTES OF RECLAIMED MEMORY.
OBJ$:CRDRIVER,LIS$:CRDRIVER/-SP=EXECML$/ML,SRC$:CRDRIVER
17 MLB DIR RDS - 1026 GETS TO DEFINE 31 MACROS. 82 INTER. FILE WRITES. 
