TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page   0
TABLE OF CONTENTS   

   (2)      54  TTY$GETNEXTCHAR - GET NEXT CHARACTER FOR OUTPUT
   (3)     103  OUTPUT STATE ACTION ROUTINES
   (4)     151  MOVEREADATA - MOVE CHARACTER FROM TYPEAHEAD TO 
   (11)    483  DELETE CHARACTER ROUTINE
   (12)    593  FORMAT_CHAR - FORMAT CHARACTER FOR OUTPUT
   (13)    661  OUTPUTANDWAIT - OUTPUT CHARACTER AND WAIT FOR I
   (25)   1132  ESCAPE SEQUENCE ACTION ROUTINES
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page   1
V06                                                                                                                              (1)

                                     0000     1 	.TITLE	TTYCHARO - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES
                                     0000     2 	.IDENT	/V06/
                                     0000     3 ;
                                     0000     4 ; COPYRIGHT (C) 1978
                                     0000     5 ; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
                                     0000     6 ;
                                     0000     7 ; THIS SOFTWARE IS FURNISHED UNDER  A LICENSE FOR USE ONLY  ON  A
                                     0000     8 ; SINGLE COMPUTER SYSTEM AND MAY BE  COPIED ONLY WITH  THE INCLU-
                                     0000     9 ; SION OF  THE  ABOVE  COPYRIGHT NOTICE.  THIS SOFTWARE,  OR  ANY
                                     0000    10 ; OTHER COPIES THEREOF, MAY NOT BE  PROVIDED  OR  OTHERWISE  MADE
                                     0000    11 ; AVAILABLE TO ANY OTHER PERSON EXCEPT  FOR  USE  ON  SUCH SYSTEM
                                     0000    12 ; AND TO  ONE WHO AGREES  TO  THESE LICENSE  TERMS.  TITLE TO AND
                                     0000    13 ; OWNERSHIP OF THE SOFTWARE SHALL AT ALL TIMES REMAIN IN DEC.
                                     0000    14 ;
                                     0000    15 ; THE INFORMATION IN THIS SOFTWARE  IS  SUBJECT TO CHANGE WITHOUT
                                     0000    16 ; NOTICE AND SHOULD NOT BE CONSTRUED  AS  A COMMITMENT BY DIGITAL
                                     0000    17 ; EQUIPMENT CORPORATION.
                                     0000    18 ;
                                     0000    19 ; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
                                     0000    20 ; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
                                     0000    21 ;
                                     0000    22 ;++
                                     0000    23 ; FACILITY:
                                     0000    24 ;
                                     0000    25 ;	VAX/VMS TERMINAL DRIVER
                                     0000    26 ;
                                     0000    27 ; ABSTRACT:
                                     0000    28 ;
                                     0000    29 ;	THIS MODULE CONTAINS ROUTINES USED FOR THE OUTPUT OF CHARACTERS.
                                     0000    30 ;
                                     0000    31 ; AUTHOR:
                                     0000    32 ;
                                     0000    33 ;	R.HEINEN 11-AUG-1976
                                     0000    34 ;--
                                     0000    35 ;
                                     0000    36 ; EXTERNAL SYMBOLS
                                     0000    37 ;
                                     0000    38 	$CRBDEF				; DEFINE CRB
                                     0000    39 	$IODEF				; DEFINE I/O FUNCTION CODES
                                     0000    40 	$IPLDEF				; DEFINE IPL'S
                                     0000    41 	$IRPDEF				; DEFINE IRP
                                     0000    42 	$PRDEF				; DEFINE PROCESSOR REGISTERS
                                     0000    43 	$PRIDEF				; DEFINE PRIORITY CLASSES
                                     0000    44 	$RSNDEF				; DEFINE RESOURCE NUMBERS
                                     0000    45 	$UCBDEF				; DEFINE UCB
                                     0000    46 	$TTYDEF				; DEFINE TERMINAL DRIVER SYMBOLS
                                     0000    47 	$TTDEF				; DEFINE TERMINAL CHARACTERISTICS
                                     0000    48 	$TTYUCBDEF			; DEFINE TERMINAL DRIVER SYMBOLS
                                     0000    49 	$VECDEF				; DEFINE CRB VECTOR
                                     0000    50 	TTYMACS				; DEFINE TERMINAL MACROS
                                     0000    51  
                                 00000000    52 	.PSECT	$$$115_DRIVER,LONG	; DEFINE NON-PAGED PSECT
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page   2
V06             TTY$GETNEXTCHAR - GET NEXT CHARACTER FOR OUTPUT                                                                  (2)

                                     0000    54 	.SBTTL	TTY$GETNEXTCHAR - GET NEXT CHARACTER FOR OUTPUT ON UNIT
                                     0000    55 ;++
                                     0000    56 ; TTY$GETNEXTCHAR - GET NEXT CHARACTER FOR OUTPUT ON UNIT
                                     0000    57 ;
                                     0000    58 ; FUNCTIONAL DESCRIPTION:
                                     0000    59 ;
                                     0000    60 ; THIS ROUTINE RETURNS WITH THE NEXT CHARACTER TO BE OUTPUT ON THE UNIT.
                                     0000    61 ;
                                     0000    62 ; INPUTS:
                                     0000    63 ;
                                     0000    64 ;	R5 = UCB ADDRESS
                                     0000    65 ; 
                                     0000    66 ; OUTPUTS:
                                     0000    67 ;
                                     0000    68 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     0000    69 ;	R3 = CHARACTER TO OUTPUT  (CC = EQL IF NO CHARACTER)
                                     0000    70 ;	R5 = UCB ADDRESS
                                     0000    71 ;--
                                     0000    72 TTY$GETNEXTCHAR::
            52         74 A5     9E  0000    73 	MOVAB	UCB$L_TT_STATE(R5),R2	; ADDRESS STATE OF UNIT
                                     0004    74 ;
                                     0004    75 ; GET CURRENT STATE OF THE OUTPUT
                                     0004    76 ;
                                     0004    77 GETNEXTCHAR:				; INTERNAL ENTRY
            62       0100 8F     B1  0004    78 	CMPW	#TTY$M_ST_WRITE,(R2)	; TRY WRITING GENERAL CASE FIRST
                          2B     13  0009    79 	BEQL	WRITING			; IF EQL THEN GO
            62       0800 8F     B1  000B    80 	CMPW	#TTY$M_ST_READ,(R2)	; TRY READING GENERAL CASE NEXT
                          5B     13  0010    81 	BEQL	MOVEREADATA		; IF EQL THEN GO
            0C            00     EA  0012    82 	FFS	#0,#TTY$V_ST_READ+1,(R2),R4; GET THE NEXT MOST IMPORTANT OUTPUT STATE
            54            62         0015       
                                     0017    83 	CASE	R4,TYPE=B,<-		; ENTER THAT STATE'S ROUTINE
                                     0017    84 	XON,-				; SEND XON
                                     0017    85 	XOFF,-				; SEND XOFF
                                     0017    86 	INTEXIT,-			; CONTROL S
                                     0017    87 	FILLING,-			; FILL IN PROGESS
                                     0017    88 	CURSOROVRFLOW,-			; CURSOR OVERFLOW
                                     0017    89 	SENDLINEFEED,-			; LINE FEED TO BE INSERTED
                                     0017    90 	MULTIECHOING,-			; MULTI ECHO IS PROGRESS
                                     0017    91 	BRDCST,-			; BROADCAST IN PROGRESS
                                     0017    92 	WRITING,-			; WRITE IN PROGRESS
                                     0017    93 	EOLSEEN,-			; EOL SEEN
                                     0017    94 	CONTROLR,-			; CONTROL R IN PROGRESS
                                     0017    95 	MOVEREADATA>			; READ IN PROGRESS
                                     0033    96 ;
                                     0033    97 ; EXIT INTERRUPT
                                     0033    98 ;
                                     0033    99 INTEXIT:				; EXIT INTERRUPT
                          53     D4  0033   100 	CLRL	R3			; SET NO RETURN CHARACTER
                                 05  0035   101 	RSB				; RETURN
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page   3
V06             OUTPUT STATE ACTION ROUTINES                                                                                     (3)

                                     0036   103 	.SBTTL OUTPUT STATE ACTION ROUTINES
                                     0036   104 ;++
                                     0036   105 ; WRITING - CONTINUE WRITE I/O OUTPUT
                                     0036   106 ;
                                     0036   107 ; FUNCTIONAL DESCRIPTION:
                                     0036   108 ;
                                     0036   109 ; THIS ROUTINE IS ENTERED WHEN ALL EXTRA OUTPUT IS COMPLETE
                                     0036   110 ; AND A WRITE OPERATION IS IN PROGRESS.
                                     0036   111 ;
                                     0036   112 ; THE NEXT AVAILABLE CHARACTER IS EXTRACTED FROM THE USER BUFFER
                                     0036   113 ; AND GIVEN TO THE ECHO FORMAT ROUTINES TO OUTPUT CORRECTLY.
                                     0036   114 ;
                                     0036   115 ; IF CONTROL O HAS STOPED THE OUTPUT THE OPERATION IS COMPLETED.
                                     0036   116 ;
                                     0036   117 ; INPUTS:
                                     0036   118 ;
                                     0036   119 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     0036   120 ;	R5 = UCB ADDRESS
                                     0036   121 ;
                                     0036   122 ; OUTPUTS:
                                     0036   123 ;
                                     0036   124 ;	R2 = ADDRESS OF THE TERMINAL STATE VECTOR
                                     0036   125 ;	R3 = CHARACTER TO OUTPUT IF ANY
                                     0036   126 ;	R5 = UCB ADDRESS
                                     0036   127 ;--
                                     0036   128 WRITING:
            54         68 A5     D0  0036   129 	MOVL	UCB$L_SVAPTE(R5),R4	; ADDRESS BUFFER BLOCK
                                     003A   130 	IF_STATE CTRLO,60$		; COMPLETE I/O OF CONTROL O
            53            64     D0  0040   131 	MOVL	TTY$L_WB_NXT(R4),R3	; GET ADDRESS OF NEXT CHARACTER
         04 A4            53     D1  0043   132 	CMPL	R3,TTY$L_WB_END(R4)	; DONE?
                          08     1E  0047   133 	BGEQU	50$			; IF GEQU THEN YES
            53            63     9A  0049   134 	MOVZBL	(R3),R3			; GET THE NEXT CHARACTER
                          64     D6  004C   135 	INCL	TTY$L_WB_NXT(R4)	; ADJUST CHARACTER POINTER
                          030D   31  004E   136 	BRW	FORMAT_CHAR		; FORMAT CHARACTER FOR OUTPUT
                                     0051   137 ;
                                     0051   138 ; WRITE I/O DONE
                                     0051   139 ;
         6C A5         00'8F     9B  0051   140 50$:	MOVZBW	#SS$_NORMAL,UCB$W_BOFF(R5); SET STATUS
                          06     11  0056   141 	BRB	70$			; CONTINUE
                                     0058   142 ;
                                     0058   143 ; CONTROL O TYPED OR CONTROL Y OR C
                                     0058   144 ;
         6C A5       0000'8F     B0  0058   145 60$:	MOVW	#SS$_CONTROLO,UCB$W_BOFF(R5); SET STATUS
         04 A4            64     C3  005E   146 70$:	SUBL3	TTY$L_WB_NXT(R4),TTY$L_WB_END(R4),R4; GET NUMBER NOT PUT OUT
                          54         0062       
         6E A5            54     A2  0063   147 	SUBW	R4,UCB$W_BCNT(R5)	; AND ADJUST TRANSFER COUNT
                          FF96'  30  0067   148 	BSBW	TTY$WRITEDONE		; DO I/O DONE
                          FF97   31  006A   149 	BRW	GETNEXTCHAR		; CONTINUE
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page   4
V06             MOVEREADATA - MOVE CHARACTER FROM TYPEAHEAD TO                                                                   (4)

                                     006D   151 	.SBTTL MOVEREADATA - MOVE CHARACTER FROM TYPEAHEAD TO READ BUFFER
                                     006D   152 ;++
                                     006D   153 ; MOVEREADATA -- MOVE CHARACTER FROM TYPEAHEAD BUFFER TO READ BUFFER
                                     006D   154 ;
                                     006D   155 ; FUNCTIONAL DESCRIPTION:
                                     006D   156 ;
                                     006D   157 ; THIS ROUTINE MOVES A CHARACTER FROM THE TYPEAHEAD BUFFER AND STARTS
                                     006D   158 ; THE ECHO. 
                                     006D   159 ;
                                     006D   160 ; NON-IMMEDIATE ACTION CONTROL SEQUENCES ARE HANDLED HERE.
                                     006D   161 ;
                                     006D   162 ; BEFORE RETURNING A CHARACTER FOR ECHO IT IS CONVERTED TO ITS
                                     006D   163 ; MULTIPLE ECHO STRING IF APPROPRIATE. IN THIS CASE THE CHARACTER
                                     006D   164 ; RETURNED IS THE FIRST OF THE MULTIPLE ECHO CHARACTERS.
                                     006D   165 ;
                                     006D   166 ; INPUTS:
                                     006D   167 ;	R5 = UCB ADDRESS
                                     006D   168 ;
                                     006D   169 ; OUTPUTS:
                                     006D   170 ;
                                     006D   171 ;	R3 = CHARACTER IF ANY (CC = EQL )
                                     006D   172 ;	R5 = UCB ADDRESS
                                     006D   173 ;--
                                     006D   174 MOVEREADATA:				;
                     0092 C5     B5  006D   175 	TSTW	UCB$W_TT_INAHD(R5)	; ANY TYPEAHEAD DATA?
                          23     13  0071   176 	BEQL	35$			; IF EQL THEN NO
                                     0073   177 ;
                                     0073   178 ; MOVE CHARACTER OUT OF TYPEAHEAD BUFFER
                                     0073   179 ;
            54       0088 C5     D0  0073   180 	MOVL	UCB$L_TT_TYPAHD(R5),R4	; ADDRESS TYPEAHEAD BUFFER
            53         04 B4     9A  0078   181 	MOVZBL	@TTY$L_TA_GET(R4),R3	; GET THE CHARACTER
                                     007C   182 ;
                                     007C   183 ; SEE IF DELETE SEQUENCE SHOULD BE TERMINATED
                                     007C   184 ;
                                     007C   185 	IF_NOT_STATE DEL,50$		; IN DELETE STATE?
         7F 8F            53     91  0082   186 	CMPB	R3,#TTY$C_DELETE	; IS THIS CHARACTER A DELETE?
                          22     13  0086   187 	BEQL	50$			; IF YES THEN GO ON
                                     0088   188 	CLR_STATE DEL			; TERMINATE DELETE SEQUENCE
                                     008C   189 ;
                                     008C   190 ; TERMINATE DELETE SEQUENCE IF NOT IN NO-ECHO
                                     008C   191 ;
            53         5C 8F     9A  008C   192 	MOVZBL	#^A/\/,R3		; SET OUTPUT CHARACTER
                          02CB   31  0090   193 	BRW	FORMAT_CHAR		; FORMAT THE CHARACTER
                                     0093   194 ;
                                     0093   195 ; TYPEAHEAD BUFFER EXHAUSTED
                                     0093   196 ;
                          0182   31  0093   197 20$:	BRW	XON			; CONTINUE
                                     0096   198 35$:	IF_STATE <TYPFUL>,20$		; BR IF TYPEAHEAD FULL
                                     009D   199 ;
                                     009D   200 ; DISMIS INTERRUPT
                                     009D   201 ;
                          53     D4  009D   202 	CLRL	R3			; SET NO RETURN CHARACTER
                                 05  009F   203 	RSB
                                     00A0   204 ;
                                     00A0   205 ; ALTMODE - CHANGE ^O176 TO ALT IF NOT LOWER CASE TERMINAL
                                     00A0   206 ;
         3C A5            07     E0  00A0   207 45$:	BBS	#TT$V_LOWER,UCB$L_DEVDEPEND(R5),150$; IF LOWER CASE THEN 175 IS ACCEPTED
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page   5
V06             MOVEREADATA - MOVE CHARACTER FROM TYPEAHEAD TO                                                                   (4)

                          2C         00A4       
            53            1B     9A  00A5   208 	MOVZBL	#TTY$C_ESCAPE,R3	; CHANGE CHARACTER TO ESCAPE OTHERWISE
                          27     11  00A8   209 	BRB	150$			; CONTINUE
                                     00AA   210 ;
                                     00AA   211 ; ACTUALLY REMOVE CHARACTER FROM BUFFER
                                     00AA   212 ;
                     0092 C5     B7  00AA   213 50$:	DECW	UCB$W_TT_INAHD(R5)	; ADJUST NUMBER OF TYPEAHEAD CHARACTERS
                                     00AE   214 ;
                                     00AE   215 ; CHECK FOR BUFFER WRAP AROUND
                                     00AE   216 ;
         04 A4         0C A4     F2  00AE   217 	AOBLSS	TTY$L_TA_END(R4),TTY$L_TA_GET(R4),60$; POINTER PAST END?
                          05         00B3       
         04 A4         10 A4     9E  00B4   218 	MOVAB	TTY$L_TA_DATA(R4),TTY$L_TA_GET(R4); RESET POINTER
                                     00B9   219 ;
                                     00B9   220 ; SKIP TESTS FOR SECOND CONTROL SEQUENCE SET IF PASSALL
                                     00B9   221 ;
                                     00B9   222 60$:	IF_STATE <PASALL,NOFLTR>,150$	; 
                                     00C1   223 	CASE	W^TTY$A_TYPE[R3],TYPE=B,LIMIT=#1@TTY$V_CH_CTRL2,-
                                     00C1   224 		<CTRLR,CTRLU,45$,DELCHAR>
                                     00D1   225 ;
                                     00D1   226 ; INSERT THE CHARACTER
                                     00D1   227 ;
            51         4C A5     D0  00D1   228 150$:	MOVL	UCB$L_IRP(R5),R1	; ADDRESS PACKET
                                     00D5   229 	IF_STATE	<PASALL,ESC>,155$; IF PASSALL OR ESC THEN NO CONVERT
         3C A5            07     E1  00DD   230 	BBC	#TT$V_LOWER,UCB$L_DEVDEPEND(R5),153$; BR IF NO LOWER CASR ON UNIT
                          05         00E1       
         20 A1            08     E1  00E2   231 	BBC	#IO$V_CVTLOW,IRP$W_FUNC(R1),155$; BR IF NOT CONVERT LOW
                          0A         00E6       
       0000'CF43          06     E1  00E7   232 153$:	BBC	#TTY$V_CH_LOWER,W^TTY$A_TYPE[R3],155$; BR IF NOT LOWER CHARACTER
                          03         00ED       
            53            20     AA  00EE   233 	BICW	#^X020,R3		; CONVERT TO UPPER CASE
            54         68 A5     D0  00F1   234 155$:	MOVL	UCB$L_SVAPTE(R5),R4	; ADDRESS READ BUFFER BLOCK
         00 B4            53     90  00F5   235 	MOVB	R3,@TTY$L_RB_NXT(R4)	; INSERT CHARACTER
                          64     D6  00F9   236 	INCL	TTY$L_RB_NXT(R4)	; ADJUST POINTER
                       6E A5     B6  00FB   237 	INCW	UCB$W_BCNT(R5)		; ADD TO COUNT
                                     00FE   238 ;
                                     00FE   239 ; PROCESS ESCAPE SEQUENCES AND ESCAPES
                                     00FE   240 ;
         3C A5            03     E1  00FE   241 	BBC	#TT$V_ESCAPE,UCB$L_DEVDEPEND(R5),200$; BR IF NOT ESCAPE TERMINAL
                          5C         0102       
                                     0103   242 	IF_STATE ESC,160$		; ALREADY IN ESCAPE SEQUENCE?
            1B            53     91  0109   243 	CMPB	R3,#TTY$C_ESCAPE	; ESCAPE CHARACTER?
                          51     12  010C   244 	BNEQ	200$			; CONTINUE NORMALLY
                     0095 C5     94  010E   245 	CLRB	UCB$B_TT_ESC(R5)	; SET FIRST SYNTAX RULE
                                     0112   246 	SET_STATE ESC			; BEGIN ESCAPE SEQUENCE
         34 A1            53     B0  0116   247 	MOVW	R3,IRP$L_MEDIA(R1)	; SET TERMINATOR CHARACTER
                       36 A1     B6  011A   248 	INCW	IRP$L_MEDIA+2(R1)	; START TERMINATOR SIZE
                          45     11  011D   249 	BRB	210$			; CONTINUE
                                     011F   250 ;
                                     011F   251 ; ESCAPE SEQUENCE IN PROGRESS - CHECK SYNTAX
                                     011F   252 ;
                       36 A1     B6  011F   253 160$:	INCW	IRP$L_MEDIA+2(R1)	; ADJUST SIZE OF ESCAPE SEQUENCE
            54       0095 C5     9A  0122   254 	MOVZBL	UCB$B_TT_ESC(R5),R4	; GET SYNTAX RULE
       0000'CF44          53     91  0127   255 165$:	CMPB	R3,W^TTY$A_ESCAPE[R4]	; CHECK RANGE OF CHARACTER
                          14     1F  012D   256 	BLSSU	190$			; IF LSSU THEN NOT THIS RULE
       0001'CF44          53     91  012F   257 	CMPB	R3,W^TTY$A_ESCAPE+1[R4]	; LOWER THAN HIGH LIMIT?
                          0C     1A  0135   258 	BGTRU	190$			; LOOK TO NEXT RULE
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page   6
V06             MOVEREADATA - MOVE CHARACTER FROM TYPEAHEAD TO                                                                   (4)

       0095 C5       0002'CF44   90  0137   259 	MOVB	W^TTY$A_ESCAPE+2[R4],UCB$B_TT_ESC(R5); SAVE NEXT RULE
                          23     12  013F   260 	BNEQ	210$			; IF NEQ THEN CONTINUE INPUT
                          10     11  0141   261 	BRB	197$			; COMPLETE THE SEQUENCE
                                     0143   262 ;
                                     0143   263 ; CONTINUE ESCAPE SEQUENCE
                                     0143   264 ;
                     0002'CF44   95  0143   265 190$:	TSTB	W^TTY$A_ESCAPE+2[R4]	; ANY NEXT RULE?
                          05     13  0148   266 	BEQL	195$			; IF EQL THEN NO
            54            03     C0  014A   267 	ADDL	#3,R4			; POINT TO NEXT RULE
                          D8     11  014D   268 	BRB	165$			; AND COUNTINUE
                                     014F   269 ;
                                     014F   270 ; ESCAPE SYNTAX ERROR
                                     014F   271 ;
                                     014F   272 195$:	SET_STATE BADESC		; SET BAD ESCAPE
                                     0153   273 197$:	CLR_STATE ESC			; SET SEQUENCE DONE
         20 A1       1000 8F     A8  0157   274 	BISW	#IO$M_TRMNOECHO,IRP$W_FUNC(R1); SET TO FORCE NO ECHO
                          1E     11  015D   275 	BRB	221$			; AND SEQUENCE IS OVER
                                     015F   276 ;
                                     015F   277 ; NON ESCAPE SEQUENCE TERMINATION TEST
                                     015F   278 ;
         38 B1            53     E0  015F   279 200$:	BBS	R3,@IRP$B_CARCON(R1),220$; BR IF TERMINATOR
                          12         0163       
                                     0164   280 ;
                                     0164   281 ; CHECK FOR FULL BUFFER
                                     0164   282 ;
         32 A1         6E A5     B1  0164   283 210$:	CMPW	UCB$W_BCNT(R5),IRP$W_BCNT(R1); TEST BUFFER FULL
                          20     1F  0169   284 	BLSSU	230$			; IF LSS THEN NOT FULL
                       34 A1     B4  016B   285 	CLRW	IRP$L_MEDIA(R1)		; SET NO TERMINATOR
         20 A1       1000 8F     AA  016E   286 	BICW	#IO$M_TRMNOECHO,IRP$W_FUNC(R1); FORCE POSSIBLE ECHO
                          07     11  0174   287 	BRB	221$			; AND CONTINUE
                                     0176   288 ;
                                     0176   289 ; TERMINATOR FOUND BUT BUFFER NOT FULL
                                     0176   290 ;
         34 A1            53     B0  0176   291 220$:	MOVW	R3,IRP$L_MEDIA(R1)	; SAVE LAST CHARACTER FOR STATUS
                       36 A1     B6  017A   292 	INCW	IRP$L_MEDIA+2(R1)	; SET TERMINATOR SIZE
         6E A5         36 A1     A2  017D   293 221$:	SUBW	IRP$L_MEDIA+2(R1),UCB$W_BCNT(R5); ADJUST TRANSFER SIZE
                                     0182   294 	SET_STATE <EOL>			; SET END OF LINE SEEN
         20 A1            0C     E0  0186   295 225$:	BBS	#IO$V_TRMNOECHO,IRP$W_FUNC(R1),240$; BR IF NOT TERM NOECHO
                          0B         018A       
                                     018B   296 ;
                                     018B   297 ; TEST FOR ECHO NEEDS
                                     018B   298 ;
                                     018B   299 230$:	IF_STATE	<NOECHO,ESC>,240$; IF NOECHO OR ESC THEN CONTINUE
                          01C8   31  0193   300 	BRW	FORMAT_CHAR		;
                          FE6B   31  0196   301 240$:	BRW	GETNEXTCHAR		; VECTOR TO TRANSFER MORE CHARACTERS
                                     0199   302  
                                     0199   303 	.ENABL	LSB
                                     0199   304 
                                     0199   305 ;
                                     0199   306 ; CONTROL U PROCESSING
                                     0199   307 ;
                                     0199   308 CTRLU:	IF_NOT_STATE ESC,10$		; IF IN ESCAPE SEQUENCE THEN DELETE ESCAPE
                          00CF   30  019F   309 	BSBW	DELESCAPE		; DELETE THE ESCAPE SEQUENCE
                       6E A5     B4  01A2   310 10$:	CLRW	UCB$W_BCNT(R5)		; GET NO BUFFERED CHARACTERS
         68 A5            10     C1  01A5   311 	ADDL3	#TTY$L_RB_DATA,UCB$L_SVAPTE(R5),@UCB$L_SVAPTE(R5); ADJUST POINTER
                       68 B5         01A9       
                                     01AB   312 	IF_STATE NOECHO,12$		; DONE IF NO ECHO
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page   7
V06             MOVEREADATA - MOVE CHARACTER FROM TYPEAHEAD TO                                                                   (4)

            54       0000'CF     9E  01B2   313 	MOVAB	W^TTY$A_CTRLU,R4	; ADDRESS MULTIECHO STRING
                                     01B7   314 	IF_STATE PROMPT,20$		; IF PROMPT THEN TREAT SPECIAL
                          24     11  01BD   315 	BRB	40$			; CONTINUE
            54         6C A5     3C  01BF   316 12$:	MOVZWL	UCB$W_BOFF(R5),R4	; GET PROMPT SIZE
         68 A5            54     C1  01C3   317 	ADDL3	R4,UCB$L_SVAPTE(R5),@UCB$L_SVAPTE(R5); ADJUST POINTERFOR NOECHO
                       68 B5         01C7       
                          FEA1   31  01C9   318 15$:	BRW	MOVEREADATA		;
                                     01CC   319 ;
                                     01CC   320 ; CONTROL R PROCESSING
                                     01CC   321 ;
                                     01CC   322 CTRLR:	IF_STATE <ESC,NOECHO>,15$	; NO ACTION IF ESCAPE OR NO ECHO
         68 A5            10     C1  01D4   323 	ADDL3	#TTY$L_RB_DATA,UCB$L_SVAPTE(R5),@UCB$L_SVAPTE(R5);RESET POINTER
                       68 B5         01D8       
            54       0000'CF     9E  01DA   324 	MOVAB	W^TTY$A_CTRLR,R4	; ADDRESS MULTIECHO STRING
                                     01DF   325 20$:	SET_STATE	<CTRLR>		; SET CONTROL R STATE
                          03C6   31  01E3   326 40$:	BRW	STRTMULTI		; START MULTIPLE OUTPUT SEQUENCE
                                     01E6   327  
                                     01E6   328 	.DSABL	LSB
                                     01E6   329 ;
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page   8
V06             MOVEREADATA - MOVE CHARACTER FROM TYPEAHEAD TO                                                                   (5)

                                     01E6   331 ;++
                                     01E6   332 ; FILLING - CONTINUE FILL OUTPUT
                                     01E6   333 ;
                                     01E6   334 ; FUNCTIONAL DESCRIPTION:
                                     01E6   335 ;
                                     01E6   336 ; THIS ROUTINE IS ENTERED WHILE THE TRM$V_FILL STATE IS ON.
                                     01E6   337 ; THE FILL COUNT IS DECREMENTED AND IF NON 0 A FILL IS OUTPUT
                                     01E6   338 ; IF THE COUNT GOES TO 0 THEN THE FILL STATE IS CLEARED.
                                     01E6   339 ;
                                     01E6   340 ; INPUTS:
                                     01E6   341 ;
                                     01E6   342 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     01E6   343 ;	R5 = UCB ADDRESS
                                     01E6   344 ;
                                     01E6   345 ; OUTPUTS:
                                     01E6   346 ;
                                     01E6   347 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     01E6   348 ;	R3 = 0
                                     01E6   349 ;	R5 = UCB ADDRESS
                                     01E6   350 ;--
                                     01E6   351 FILLING:				; OUTPUT CONTINUING FILLS
                     0097 C5     97  01E6   352 	DECB	UCB$B_TT_FILL(R5)	; ADJUST FILL COUNT
                          03     12  01EA   353 	BNEQ	25$			; IF NEQ THEN NOT DONE YET
                                     01EC   354 	CLR_STATE FILL			; SET CONDITION OFF
                          53     D4  01EF   355 25$:	CLRL	R3			; SET FILL CHARACTER
                          01CC   31  01F1   356 	BRW	OUTPUTANDWAIT		; OUTPUT THE CHARACTER
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page   9
V06             MOVEREADATA - MOVE CHARACTER FROM TYPEAHEAD TO                                                                   (6)

                                     01F4   358 ;++
                                     01F4   359 ; EOLSEEN - END OF LINE SEEN
                                     01F4   360 ;
                                     01F4   361 ; FUNCTIONAL DESCRIPTION:
                                     01F4   362 ;
                                     01F4   363 ; THIS ROUTINE IS ENTERED AFTER AN END OF LINE CHARACTER HAS
                                     01F4   364 ; TERMINATED A READ RECORD AND THE ECHO OF THAT CHARACTER IS COMPLETE.
                                     01F4   365 ;
                                     01F4   366 ; THE ACTION IS TO COMPLETE THE READ OPERATION AND IF NECESSARY,
                                     01F4   367 ; SEND AN XOFF.
                                     01F4   368 ;
                                     01F4   369 ; INPUTS:
                                     01F4   370 ;
                                     01F4   371 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     01F4   372 ;	R5 = UCB ADDRESS
                                     01F4   373 ;
                                     01F4   374 ; OUTPUTS:
                                     01F4   375 ;
                                     01F4   376 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     01F4   377 ;	R5 = UCB ADDRESS
                                     01F4   378 ;--
                                     01F4   379 EOLSEEN:				; END READ OPERATION
         6C A5         00'8F     9B  01F4   380 	MOVZBW	#SS$_NORMAL,UCB$W_BOFF(R5); SET STATUS
                          FE04'  30  01F9   381 	BSBW	TTY$READONE		; COMPLETE THE I/O
                          FE05   31  01FC   382 	BRW	GETNEXTCHAR		; CONTINUE
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  10
V06             MOVEREADATA - MOVE CHARACTER FROM TYPEAHEAD TO                                                                   (7)

                                     01FF   384 	.ENABL	LSB
                                     01FF   385  
                                     01FF   386 ;++
                                     01FF   387 ; XOFF - SEND XOFF
                                     01FF   388 ; XON - SEND XON
                                     01FF   389 ;
                                     01FF   390 ; FUNCTIONAL DESCRIPTION:
                                     01FF   391 ;
                                     01FF   392 ; THIS ROUTINE IS USED TO COMPLETE THE SENDING OF AN XON OR XOFF
                                     01FF   393 ; AS A RESULT OF THE STATE BIT BEING SET ACCORDINGLY.
                                     01FF   394 ;
                                     01FF   395 ; INPUTS:
                                     01FF   396 ;
                                     01FF   397 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     01FF   398 ;	R5 = UCB ADDRESS
                                     01FF   399 ;
                                     01FF   400 ; OUTPUTS:
                                     01FF   401 ;
                                     01FF   402 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     01FF   403 ;	R3 = XON OR XOFF
                                     01FF   404 ;	R5 = UCB ADDRESS
                                     01FF   405 ;--
                                     01FF   406 XOFF:					; OUTPUT AN XOFF
                                     01FF   407 	CLR_STATE XOFF
                                     0202   408 	IF_NOT_STATE TYPFUL,10$		; IF NOT TYPEAHEAD FUL THEN BR
         3C A5            04     E0  0209   409 	BBS	#TT$V_HOSTSYNC,UCB$L_DEVDEPEND(R5),10$; BR IF CORRECT
                          05         020D       
            53            07     9A  020E   410 	MOVZBL	#TTY$C_BELL,R3		; OTHERWISE BELL
                          2B     11  0211   411 	BRB	25$			; CONTINUE
            53            13     9A  0213   412 10$:	MOVZBL	#TTY$C_XOFF,R3		; SET THE CHARACTER
                          19     11  0216   413 	BRB	20$			; AND CONTINUE
                                     0218   414 XON:					; SEND AN XON
                                     0218   415 	CLR_STATE <XON,TYPFUL>
            53            11     9A  021F   416 	MOVZBL	#TTY$C_XON,R3		; SET XON CHARACTER
         3C A5            06     E1  0222   417 	BBC	#TT$V_SCRIPT,UCB$L_DEVDEPEND(R5),20$; BR IF NOT SCRIPT TERMINAL
                          0A         0226       
         78 A5       0000'CF     9E  0227   418 	MOVAB	W^TTY$A_SCRIPT,UCB$L_TT_MULTI(R5); SET MULTI ECHO STRING
                                     022D   419 	SET_STATE MULTI			; BEGIN MULTI ECHO
         3C A5   00040010 8F     D3  0231   420 20$:	BITL	#TT$M_HOSTSYNC!TT$M_READSYNC,UCB$L_DEVDEPEND(R5); HOST OR READ SYNC?
                          03     12  0239   421 	BNEQ	25$			; BR IF NOT NEEDED
                          FDC6   31  023B   422 	BRW	GETNEXTCHAR		;
                          017F   31  023E   423 25$:	BRW	OUTPUTANDWAIT		; OUTPUT CHARACTER
                                     0241   424  
                                     0241   425 	.DSABL	LSB
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  11
V06             MOVEREADATA - MOVE CHARACTER FROM TYPEAHEAD TO                                                                   (8)

                                     0241   427 ;++
                                     0241   428 ; CONTROLR - CONTINUE OUTPUT AFTER A CONTROL R
                                     0241   429 ;
                                     0241   430 ; FUNCTIONAL DESCRIPTION:
                                     0241   431 ;
                                     0241   432 ; THIS ROUTINE OUTPUTS THE DATA CONTAINED IN THE READ OPERATION
                                     0241   433 ; BUFFERED I/O BLOCK. 
                                     0241   434 ;
                                     0241   435 ; INPUTS:
                                     0241   436 ;
                                     0241   437 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     0241   438 ;	R5 = UCB ADDRESS
                                     0241   439 ;
                                     0241   440 ; OUTPUTS:
                                     0241   441 ;
                                     0241   442 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     0241   443 ;	R3 = CHARACTER TO OUTPUT IF ANY
                                     0241   444 ;	R5 = UCB ADDRESS
                                     0241   445 ;--
                                     0241   446 CONTROLR:				; CONTINUE CONTROL R OUTPUT
                                     0241   447 ;
                                     0241   448 ; CONTINUE CONTROL R OUTPUT
                                     0241   449 ;
            54         6C A5     3C  0241   450 	MOVZWL	UCB$W_BOFF(R5),R4	; GET PROMPT SIZE
            53         6E A5     3C  0245   451 	MOVZWL	UCB$W_BCNT(R5),R3	; GET CURRENT NUMBER OF BUFFERED CHARACTERS
            53            54     C0  0249   452 	ADDL	R4,R3			; CALC TOTAL
            54         68 A5     D0  024C   453 	MOVL	UCB$L_SVAPTE(R5),R4	; ADDRESS READ BUFFER BLOCK
            53            54     C0  0250   454 	ADDL	R4,R3			; POINT TO LAST CHARACTER IN READ BUFFER
            64            53     D1  0253   455 	CMPL	R3,TTY$L_RB_NXT(R4)	; DONE?
                          0F     13  0256   456 	BEQL	120$			; IF EQL THEN YES
                                     0258   457 	IF_STATE CTRLO,120$		; ALSO DONE IF CONTROL O
            53         00 B4     9A  025E   458 	MOVZBL	@TTY$L_RB_NXT(R4),R3	; GET NEXT CHARACTER
                          64     D6  0262   459 	INCL	TTY$L_RB_NXT(R4)	; ADJUST POINTER
                          00F7   31  0264   460 	BRW	FORMAT_CHAR		; OUTPUT READ DATA
                                     0267   461 ;
                                     0267   462 ; END OF CONTROL R
                                     0267   463 ;
                                     0267   464 120$:	CLR_STATE <CTRLR,CTRLO>
            64            53     D0  026B   465 	MOVL	R3,TTY$L_RB_NXT(R4)	; RESET PUT POINTER IN READ BUFFER
                          FD93   31  026E   466 	BRW	GETNEXTCHAR
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  12
V06             MOVEREADATA - MOVE CHARACTER FROM TYPEAHEAD TO                                                                  (10)

                                     0271   468 
                                     0271   469 ;
                                     0271   470 ; DELETE AN ESCAPE SEQUENCE IN PROGRESS
                                     0271   471 ;
                                     0271   472 ; THIS ROUTINE IS USED BY THE CONTROL U AND DELETE LOGIC TO RESET
                                     0271   473 ; AND DELETE THE ESCAPE SEQUENCE IN PROGRESS
                                     0271   474 ;
                                     0271   475 DELESCAPE:				; DELETE CURRENT ESCAPE SEQUENCE
            54         4C A5     D0  0271   476 	MOVL	UCB$L_IRP(R5),R4	; GET ADDRESS OF PACKET
            54         34 A4     3C  0275   477 	MOVZWL	IRP$L_MEDIA(R4),R4	; GET THE SIZE OF THE SEQUENCE
         6E A5            54     A2  0279   478 	SUBW	R4,UCB$W_BCNT(R5)	; ADJUST TRANSFER SIZE FOR SEQUENCE
         68 B5            54     A2  027D   479 	SUBW	R4,@UCB$L_SVAPTE(R5)	; ADJUST DATA POINTER
                                     0281   480 	CLR_STATE <ESC,BADESC>
                                 05  0285   481 10$:	RSB				; RETURN
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  13
V06             DELETE CHARACTER ROUTINE                                                                                        (11)

                                     0286   483 	.SBTTL	DELETE CHARACTER ROUTINE
                                     0286   484 ;++
                                     0286   485 ; DELCHAR - DELETE CHARACTER ROUTINE
                                     0286   486 ;
                                     0286   487 ; FUNCTIONAL DESCRIPTION:
                                     0286   488 ;
                                     0286   489 ; THIS ROUTINE DELETES THE LAST TYPED CHARACTER FROM THE READ BUFFER.
                                     0286   490 ; THEN IT SETS UP THE PROPER ECHO SEQUENCE FOR THE DELETED CHARACTER.
                                     0286   491 ;
                                     0286   492 ; INPUTS:
                                     0286   493 ;
                                     0286   494 ;	R2 = ADDRESS OF TTY STATE VECTOR
                                     0286   495 ;	R5 = UCB ADDRESS
                                     0286   496 ;
                                     0286   497 ; OUTPUTS:
                                     0286   498 ;
                                     0286   499 ;	R2 = ADDRESS OF TTY STATE VECTOR
                                     0286   500 ;	R5 = UCB ADDRESS
                                     0286   501 ;--
                                     0286   502 DELCHAR:				;
                       6E A5     B5  0286   503 	TSTW	UCB$W_BCNT(R5)		; ANY DATA?
                          69     13  0289   504 	BEQL	30$			; IF EQL THEN NO
                                     028B   505 ;
                                     028B   506 ; IF ESCAPE SEQUENCE IN PROGRESS THEN DELETE ENTIRE STRING
                                     028B   507 ;
                                     028B   508 	IF_STATE ESC,25$		; DELETE ESCAPE SEQUENCE
                       6E A5     B7  0291   509 	DECW	UCB$W_BCNT(R5)		; ADJUST COUNT OF DATA CHARACTERS
            54         68 A5     D0  0294   510 	MOVL	UCB$L_SVAPTE(R5),R4	; ADDRESS READ BUFFER BLOCK
                          64     D7  0298   511 	DECL	TTY$L_RB_NXT(R4)	; ADJUST POINTER WORD
            53         00 B4     9A  029A   512 	MOVZBL	@TTY$L_RB_NXT(R4),R3	; GET THE CHARACTER
                                     029E   513 	IF_STATE NOECHO,30$		;
                                     02A5   514 ;
                                     02A5   515 ; TEST FOR SPECIAL DELETES
                                     02A5   516 ;
            09            53     91  02A5   517 	CMPB	R3,#TTY$C_TAB		; TAB?
                          4F     12  02A8   518 	BNEQ	55$			; IF NEQ THEN OUTPUT JUST THE CHARACTER
         3C A5            0C     E1  02AA   519 	BBC	#TT$V_SCOPE,UCB$L_DEVDEPEND(R5),40$; BR IF NOT SCOPE
                          48         02AE       
                                     02AF   520 ;
                                     02AF   521 ; DELETE A TAB ON A SCOPE
                                     02AF   522 ;
            53            64     D0  02AF   523 	MOVL	TTY$L_RB_NXT(R4),R3	; POINT TO END OF DATA
            54         10 A4     9E  02B2   524 	MOVAB	TTY$L_RB_DATA(R4),R4	; POINT TO DATA START
                          7E     D4  02B6   525 	CLRL	-(SP)			; SET UP CURSOR COUNTER
            54            53     D1  02B8   526 10$:	CMPL	R3,R4			; BUFFER START?
                          19     13  02BB   527 	BEQL	15$			; THEN REFERENCE POINT FOUND
            0D            73     91  02BD   528 	CMPB	-(R3),#TTY$C_CR		; CARRIAGE RETURN?
                          18     13  02C0   529 	BEQL	20$			; IF EQL THEN REFERENCE POINT FOUND
            09            63     91  02C2   530 	CMPB	(R3),#TTY$C_TAB		; TAB?
                          13     13  02C5   531 	BEQL	20$			; IF EQL THEN REFERENCE POINT FOUND
            20            63     91  02C7   532 	CMPB	(R3),#TTY$C_BLANK	; CURSOR CHANGE CHARACTER?
                          EC     1F  02CA   533 	BLSSU	10$			; IF LSSU THEN NO
                          6E     D6  02CC   534 	INCL	(SP)			; ADJUST FAKE CURSOR
         3A A5            6E     B1  02CE   535 	CMPW	(SP),UCB$W_DEVBUFSIZ(R5); WRAP AROUND OCCUR?
                          06     13  02D2   536 	BEQL	20$			; IF EQL THEN REF POINT FOUND
                          E2     11  02D4   537 	BRB	10$			; CONTINUE
            6E         FC A4     A0  02D6   538 15$:	ADDW	TTY$W_RB_ORGHOR-TTY$L_RB_DATA(R4),(SP); IF BUFFER START FOUND, ASSUME INIT
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  14
V06             DELETE CHARACTER ROUTINE                                                                                        (11)

            8E   FFFFFFF8 8F     CB  02DA   539 20$:	BICL3	#^X0FFFFFFF8,(SP)+,R4	; GET MOD 8 OF CURSOR
                          54         02E1       
            54       009A C5     B1  02E2   540 	CMPW	UCB$W_TT_CURSOR(R5),R4	; CURRENT CURSOR LEQ BACKSPACE NUMBER?
                          20     1B  02E7   541 	BLEQU	60$			; IF LEQU THEN CONTROL R
            54       0000'CF44   9E  02E9   542 	MOVAB	W^TTY$A_DELCRTTAB[R4],R4; ADDRESS DELETE STRING
                          3C     11  02EF   543 	BRB	70$			; START THE OUTPUT
                          FF7D   30  02F1   544 25$:	BSBW	DELESCAPE		; DELETE ESCAPE SEQUENCE
                          FD76   31  02F4   545 30$:	BRW	MOVEREADATA		; VECTOR TO CONTINUE
                          39     11  02F7   546 40$:	BRB	75$			; VECTOR
                                     02F9   547 ;
                                     02F9   548 ; NORMAL CHARACTER DELETE
                                     02F9   549 ;
                                     02F9   550 55$:	
            20            53     91  02F9   551 	CMPB	R3,#TTY$C_BLANK		; NON PRINTING CHARACTERS GET NO RUBOUT
                          F6     1F  02FC   552 	BLSSU	30$			; EXIT ROUTINE
         3C A5            0C     E1  02FE   553 	BBC	#TT$V_SCOPE,UCB$L_DEVDEPEND(R5),75$; BR IF NOT SCOPE
                          2F         0302       
                                     0303   554 ;
                                     0303   555 ; IF THE CURSOR IS AT THE LEFT MARGIN AND DATA IS PRESENT,
                                     0303   556 ; FORCE A CONTROL R IN STEAD OF A BACKSPACE.
                                     0303   557 ;
                     009A C5     B5  0303   558 	TSTW	UCB$W_TT_CURSOR(R5)	; CURSOR AT LEFT MARGIN?
                          14     12  0307   559 	BNEQ	66$			; BR IF NORMAL BACKSPACE NEEDED
                                     0309   560 ;
                                     0309   561 ; FORCE CONTROL R FOR RUBOUT RESPONSE
                                     0309   562 ;
                                     0309   563 60$:	
                       6E A5     B5  0309   564 	TSTW	UCB$W_BCNT(R5)		; DATA PRESENT?
                          E6     13  030C   565 	BEQL	30$			; IF NO DATA THEN NO RESPONSE
         68 A5            10     C1  030E   566 	ADDL3	#TTY$L_RB_DATA,UCB$L_SVAPTE(R5),@UCB$L_SVAPTE(R5); SET UP INITIAL POINTER
                       68 B5         0312       
                                     0314   567 	SET_STATE <CTRLR,NL>		;
                          FF24   31  031A   568 65$:	BRW	CONTROLR		; START CONTROL R OUTPUT
                                     031D   569 ;
                                     031D   570 ; NORMAL BACKSPACE RUBOUT RESPONSE
                                     031D   571 ;
            53            20     9A  031D   572 66$:	MOVZBL	#TTY$C_BLANK,R3		; ASSUME SPACE IS FIRST CHARACTER
         3A A5       009A C5     B1  0320   573 	CMPW	UCB$W_TT_CURSOR(R5),UCB$W_DEVBUFSIZ(R5); AND EXTREME RIGHT?
                          23     13  0326   574 	BEQL	100$			; IF YES THEN ONLY OUTPUT SPACE
                                     0328   575 ;
                                     0328   576 ; DELETE IS IN MID SCREEN
                                     0328   577 ;
            54       0001'CF     9E  0328   578 	MOVAB	W^TTY$A_BACKSPACE+1,R4	; ADDRESS BACKSPACE STRING
            53            08     9A  032D   579 70$:	MOVZBL	#TTY$C_BS,R3		; START STRING WITH BACKSPACE
                          0F     11  0330   580 	BRB	90$			; START OUTPUT
            62            0D     E2  0332   581 75$:	BBSS	#TTY$V_ST_DEL,(R2),95$	; IF NOT FIRST TIME THEN OUTPUT CHARACTER
                          13         0335       
            54         18 A5     9E  0336   582 	MOVAB	UCB$W_BUFQUO(R5),R4	; ADDRESS STRING SPACE
            64            53     9B  033A   583 	MOVZBW	R3,(R4)			; AND PUT THE CHARACTERS THERE
                                     033D   584 ;
                                     033D   585 ; OUTPUT "\" TO START OR END DELETE SEQUENCE
                                     033D   586 ;
            53         5C 8F     90  033D   587 80$:	MOVB	#^A@\@,R3		; FOR FIRST TIME OUTPUT "\"
         78 A5            54     D0  0341   588 90$:	MOVL	R4,UCB$L_TT_MULTI(R5)	; ADDRESS STRING
                                     0345   589 	SET_STATE MULTI			;
                          13     11  0349   590 95$:	BRB	FORMAT_CHAR		; START UP OUTPUT
                          0072   31  034B   591 100$:	BRW	OUTPUTANDWAIT		; VECTOR FOR SPACE ONLY RESPONSE
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  15
V06             FORMAT_CHAR - FORMAT CHARACTER FOR OUTPUT                                                                       (12)

                                     034E   593 	.SBTTL	FORMAT_CHAR - FORMAT CHARACTER FOR OUTPUT
                                     034E   594  
                                     034E   595 	.ENABL	LSB
                                     034E   596 ;++
                                     034E   597 ; FORMAT_CHAR - FIND PROPER OUTPUT FOR SPECIFIED CHARACTER
                                     034E   598 ;
                                     034E   599 ; FUNCTIONAL DESCRIPTION:
                                     034E   600 ;
                                     034E   601 ; THIS ROUTINE TRANSLATES THE SPECIFIED CHARACTER FOR OUTPUT
                                     034E   602 ; ON THE TARGET UNIT. THE OUTPUT OF THE SEQUENCE IS EITHER
                                     034E   603 ; THE ORIGIONAL CHARACTER OR A STARTUP OF THE PROPER MULTIECHO
                                     034E   604 ; STRING. CURSOR ADJUSTMENT IS ALSO DONE HERE FOR PRINTING
                                     034E   605 ; CHARACTERS AND FORM CHARACTERS. IT IS POSSIBLE FOR THE RESULT TO BE NO OUTPUT.
                                     034E   606 ;
                                     034E   607 ; SEE EACH SPECIAL CHARACTER ROUTINE FOR MORE DETAILS ON ECHOING.
                                     034E   608 ;
                                     034E   609 ; INPUTS:
                                     034E   610 ;
                                     034E   611 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     034E   612 ;	R3 = CHARACTER TO TRANSLATE
                                     034E   613 ;	R5 = UCB ADDRESS
                                     034E   614 ;
                                     034E   615 ; OUTPUTS:
                                     034E   616 ;
                                     034E   617 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     034E   618 ;	R3 = CHARACTER TO OUTPUT NEXT IF ANY
                                     034E   619 ;	R5 = UCB ADDRESS
                                     034E   620 ;--
                                     034E   621 5$:	IF_NOT_STATE <ESC_O>,OUTPUTANDWAIT; BR IF NOT OUTPUT ESC
                     0099 C5     97  0354   622 	DECB	UCB$B_TT_ESC_O(R5)	; ADJUST SEQUENCE SIZE
                          66     12  0358   623 	BNEQ	OUTPUTANDWAIT		; IF NEQ THEN OK
            62            1A     E4  035A   624 	BBSC	#TTY$V_ST_ESC_O,(R2),OUTPUTANDWAIT; CLEAR STATE AND BR ALWAYS
                          62         035D       
                                     035E   625 FORMAT_CHAR:
                                     035E   626 	IF_STATE <PASALL,ESC_O,WRTALL>,5$	; BR IF FORMAT NOT NEEDED
                                     0368   627 	CASE	W^TTY$A_TYPE[R3],LIMIT=#1@TTY$V_CH_SPEC,TYPE=B,<-		
                                     0368   628 			BSPACE,-
                                     0368   629 			TAB,-
                                     0368   630 			LINEFEED,-
                                     0368   631 			VTAB,-
                                     0368   632 			FORM,-
                                     0368   633 			CARRIAGE,-
                                     0368   634 			CTRLZ,-
                                     0368   635 			ESCAPE>
         3C A5            07     E0  037F   636 	BBS	#TT$V_LOWER,UCB$L_DEVDEPEND(R5),UPCURSOR; BR IF LOWER TERMINAL
                          0A         0383       
       0000'CF43          06     E1  0384   637 	BBC	#TTY$V_CH_LOWER,W^TTY$A_TYPE[R3],UPCURSOR; BR IF NOT LOWER CHAR
                          03         038A       
            53            20     8A  038B   638 	BICB	#^X020,R3		; CONVERT TO UPPER CASE
                                     038E   639 UPCURSOR:				; ADJUST CURSOR AND OUTPUT
            20            53     91  038E   640 	CMPB	R3,#^A/ /		; CURSOR UP?
                          2D     19  0391   641 	BLSS	OUTPUTANDWAIT		; IF LSSU THEN NO
         7F 8F            53     91  0393   642 	CMPB	R3,#TTY$C_DELETE	; DELETE?
                          27     13  0397   643 	BEQL	OUTPUTANDWAIT
                                     0399   644 ;
                                     0399   645 ; NOTE THAT BECAUSE OF ACBB DOING A BLEQ IT IS NOT APPROPRIATE HERE
                                     0399   646 ;
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  16
V06             FORMAT_CHAR - FORMAT CHARACTER FOR OUTPUT                                                                       (12)

                     009A C5     B6  0399   647 	INCW	UCB$W_TT_CURSOR(R5)	; ADJUST CURSOR
            54         3A A5     3C  039D   648 	MOVZWL	UCB$W_DEVBUFSIZ(R5),R4	; GET WIDTH OF UNIT
                          18     13  03A1   649 	BEQL	25$			; IF EQL THEN DON'T CARE
            54       009A C5     B1  03A3   650 	CMPW	UCB$W_TT_CURSOR(R5),R4	; OVER RUN?
                          11     1F  03A8   651 	BLSSU	25$			; IF LSSU THEN NO
         3C A5            09     E0  03AA   652 	BBS	#TT$V_WRAP,UCB$L_DEVDEPEND(R5),10$; BR IF WRAP ENABLED
                          09         03AE       
                          0A     13  03AF   653 	BEQL	25$			; IF EQL THEN AT END OF LINE AND OK
                     009A C5     B7  03B1   654 	DECW	UCB$W_TT_CURSOR(R5)	; SET CURSOR TO MAX AND DROP CHARACTER
                          007A   31  03B5   655 	BRW	DROP			;
                                     03B8   656 10$:	SET_STATE	CURSOR		; SET CURSOR OVERFLOWED
                                     03BB   657 25$:	CLR_STATE	<NL,SKIPLF>	; SET NOT AT NEWLINE
                                     03C0   658  
                                     03C0   659 	.DSABL	LSB
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  17
V06             OUTPUTANDWAIT - OUTPUT CHARACTER AND WAIT FOR I                                                                 (13)

                                     03C0   661 	.SBTTL	OUTPUTANDWAIT - OUTPUT CHARACTER AND WAIT FOR INTERRUPT
                                     03C0   662 ;++
                                     03C0   663 ; OUTPUTANDWAIT - OUTPUT A CHARACTER AND WAIT INTERRUPT
                                     03C0   664 ;
                                     03C0   665 ; FUNCTIONAL DESCRIPTION:
                                     03C0   666 ;
                                     03C0   667 ; THIS ROUTINE IS USED BY THE OUTPUT INTERRUPT ROUTINES TO RETURN
                                     03C0   668 ; TO THE DEVICE DEPENDENT CODE TO OUTPUT A CHARACTER. THEIR RETURN
                                     03C0   669 ; CAUSES THE UNIT TO ENTER A WAIT FOR INTERRUPT STATE.
                                     03C0   670 ;
                                     03C0   671 ; INPUTS:
                                     03C0   672 ;
                                     03C0   673 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     03C0   674 ;	R3 = CHARACTER TO OUTPUT
                                     03C0   675 ;	R5 = UCB ADDRESS
                                     03C0   676 ;
                                     03C0   677 ; OUTPUTS:
                                     03C0   678 ;
                                     03C0   679 ;	THE UNIT IS PLACED IN A WAIT FOR INTERRUPT STATE
                                     03C0   680 ;
                                     03C0   681 ;	R5 = UCB ADDRESS
                                     03C0   682 ;--
                                     03C0   683 OUTPUTANDWAIT:				; OUTPUT CHARACTER AND WAIT ENTRY
   00000000'GF            05     C1  03C0   684 	ADDL3	#5,G^EXE$GL_ABSTIM,UCB$L_DUETIM(R5); SET FUTURE TIMEOUT
                       5C A5         03C7       
                                     03C9   685 	DSBINT	,R4			; SET TO POWER FAIL LEVEL
         58 A5            05     E0  03CF   686 	BBS	#UCB$V_POWER,UCB$W_STS(R5),10$; POWER FAILED BEFORE HERE?
                          08         03D3       
         58 A5            03     88  03D4   687 	BISB	#UCB$M_INT!UCB$M_TIM,UCB$W_STS(R5); ENABLE TIMER AND INTERRUPT
                                     03D8   688 	ENBINT	R4			; ENABLE INTERRUPTS
                                 05  03DB   689 	RSB				; AND RETURN WITH CHARACTER
                                     03DC   690 ;
                                     03DC   691 ; POWER FAIL EXIT
                                     03DC   692 ;
                                     03DC   693 10$:	ENBINT	R4			; RE-ENABLE INTERRUPTS
         58 A5            20     AA  03DF   694 	BICW	#UCB$M_POWER,UCB$W_STS(R5); RESET POWERFAIL
                          FC1A'  30  03E3   695 	BSBW	TTY$RESTARTIO		; SET UP THE CURRENT I/O
                          FC1B   31  03E6   696 	BRW	GETNEXTCHAR		; CONTINUE AGAIN
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  18
V06             OUTPUTANDWAIT - OUTPUT CHARACTER AND WAIT FOR I                                                                 (14)

                                     03E9   698 	.ENABL	LSB
                                     03E9   699 ;++
                                     03E9   700 ; CURSOROVRFLOW - INSERT A NEWLINE IN THE OUTPUT STREAM
                                     03E9   701 ;
                                     03E9   702 ; FUNCTIONAL DESCRIPTION:
                                     03E9   703 ;
                                     03E9   704 ; THIS ROUTINE IS ENTERED TO INJECT A CR/LF IN THE OUTPUT
                                     03E9   705 ; STREAM REGARDLESS OF THE CURRENT STATE.
                                     03E9   706 ;
                                     03E9   707 ; INPUTS:
                                     03E9   708 ;
                                     03E9   709 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     03E9   710 ;	R5 = UCB ADDRESS
                                     03E9   711 ;
                                     03E9   712 ; OUTPUTS:
                                     03E9   713 ;
                                     03E9   714 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     03E9   715 ;	R3 = TTY$C_CR
                                     03E9   716 ;	R5 = UCB ADDRESS
                                     03E9   717 ;--
                                     03E9   718 CURSOROVRFLOW:				;
                                     03E9   719 	CLR_STATE CURSOR		; CLEAR THE CONDITION
            53            0D     9A  03EC   720 	MOVZBL	#TTY$C_CR,R3		; SET FIRST CHARACTER IS CARRIAGE RETURN
                          1A     11  03EF   721 	BRB	110$			; CONTINUE WITH CARRIAGE RETURN CODE
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  19
V06             OUTPUTANDWAIT - OUTPUT CHARACTER AND WAIT FOR I                                                                 (15)

                                     03F1   723 ;++
                                     03F1   724 ; CARRIAGE - FORMAT FOR CARRIAGE RETURN
                                     03F1   725 ;
                                     03F1   726 ; FUNCTIONAL DESCRIPTION:
                                     03F1   727 ;
                                     03F1   728 ; THIS ROUTINE SETS UP THE PROPER FILL FOR A CARRIAGE RETURN ON
                                     03F1   729 ; THE TARGET UNIT.
                                     03F1   730 ;
                                     03F1   731 ; INPUTS:
                                     03F1   732 ;
                                     03F1   733 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     03F1   734 ;	R3 = TTY$C_CR
                                     03F1   735 ;	R5 = UCB ADDRESS
                                     03F1   736 ;
                                     03F1   737 ; OUTPUTS:
                                     03F1   738 ;
                                     03F1   739 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     03F1   740 ;	R3 = TTY$C_CR
                                     03F1   741 ;	R5 = UCB ADDRESS
                                     03F1   742 ;--
                                     03F1   743 CARRIAGE:				;
                                     03F1   744 	IF_NOT_STATE READ,115$		; IF NOT READ THEN NO SPECIAL STATES
                                     03F7   745 	IF_NOT_STATE CTRLR,110$		; 
            54         6C A5     3C  03FD   746 	MOVZWL	UCB$W_BOFF(R5),R4	; GET PROMPT SIZE
            54         68 A5     C0  0401   747 	ADDL	UCB$L_SVAPTE(R5),R4	; CALC ADDRESS OF PROMPT END
            54         68 B5     D1  0405   748 	CMPL	@UCB$L_SVAPTE(R5),R4	; IS THIS CR PAST END OF PROMPT?
                          0E     1F  0409   749 	BLSSU	115$			; IF LSSU THEN NO AUTO LINE FEED
                                     040B   750 110$:	IF_STATE	SKIPLF,115$	; IF SKIP LF ALREADY SET THEN NO LF'S
                                     0412   751 	SET_STATE <SENDLF,SKIPLF>	; SET STATE TO FORCE LF AND SKIP NEXT REAL ONE
                                     0419   752 ;
                                     0419   753 ; OPTIMIZE THE CARRIAGE RETURN OUTPUT IF CURSOR IS AT 0
                                     0419   754 ;
                     009A C5     B5  0419   755 115$:	TSTW	UCB$W_TT_CURSOR(R5)	; CURSOR ALREADY AT 0?
                          13     13  041D   756 	BEQL	DROP			; IF EQL THEN NO CR NEEDED
                     009A C5     B4  041F   757 	CLRW	UCB$W_TT_CURSOR(R5)	; RESET HORIZON
       0097 C5       009D C5     90  0423   758 	MOVB	UCB$B_TT_CRFILL(R5),UCB$B_TT_FILL(R5); SET UP FILL
                          03     13  042A   759 	BEQL	120$			; IF EQL THEN OUTPUT
                                     042C   760 	SET_STATE FILL			; OTHERWISE OUTPUT
                          FF8E   31  042F   761 120$:	BRW	OUTPUTANDWAIT
                          FBCF   31  0432   762 DROP:	BRW	GETNEXTCHAR		; CONTINUE IN NEXT LOGICAL STATE
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  20
V06             OUTPUTANDWAIT - OUTPUT CHARACTER AND WAIT FOR I                                                                 (16)

                                     0435   764 ;++
                                     0435   765 ; SENDLINEFEED - INSERT LINE FEED IN OUTPUT STREAM
                                     0435   766 ;
                                     0435   767 ; FUNCTIONAL DESCRIPTION:
                                     0435   768 ;
                                     0435   769 ; THIS ROUTINE IS USED TO INSERT A LINE FEED IN THE OUTPUT STREAM.
                                     0435   770 ;
                                     0435   771 ; INPUTS:
                                     0435   772 ;
                                     0435   773 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     0435   774 ;	R5 = UCB ADDRESS
                                     0435   775 ;
                                     0435   776 ; OUTPUTS:
                                     0435   777 ;
                                     0435   778 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     0435   779 ;	R3 = TTY$C_LF
                                     0435   780 ;	R5 = UCB ADDRESS
                                     0435   781 ;--
                                     0435   782 SENDLINEFEED:				; SEND OUT A LINE FEED
                                     0435   783 	CLR_STATE SENDLF		; CLEAR CONDITION
            53            0A     9A  0438   784 	MOVZBL	#TTY$C_LF,R3		; SET TO OUTPUT LINE FEED
                          04     11  043B   785 	BRB	200$			; CONTINUE IN LINE FEED CODE
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  21
V06             OUTPUTANDWAIT - OUTPUT CHARACTER AND WAIT FOR I                                                                 (17)

                                     043D   787 ;++
                                     043D   788 ; LINEFEED - FORMAT LINE FEED FOR TARGET UNIT
                                     043D   789 ;
                                     043D   790 ; FUNCTIONAL DESCRIPTION:
                                     043D   791 ;
                                     043D   792 ; THIS ROUTINE SETS UP THE PROPER FILL FOR A LINE FEED ON THE TARGET
                                     043D   793 ; UNIT AND ADJUSTS THE CURSOR AND VERTICLE LINE COUNT.
                                     043D   794 ;
                                     043D   795 ; INPUTS:
                                     043D   796 ;
                                     043D   797 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     043D   798 ;	R3 = TTY$C_LF
                                     043D   799 ;	R5 = UCB ADDRESS
                                     043D   800 ;
                                     043D   801 ; OUTPUTS:
                                     043D   802 ;
                                     043D   803 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     043D   804 ;	R3 = TTY$C_LF
                                     043D   805 ;	R5 = UCB ADDRESS
                                     043D   806 ;--
                                     043D   807 LINEFEED:
            62            17     E4  043D   808 	BBSC	#TTY$V_ST_SKIPLF,(R2),DROP; SKIP AND SET OFF SKIP CONDITION
                          F1         0440       
                                     0441   809 ;
                                     0441   810 ; NOTE THAT BECAUSE OF ACBB'S SIGNED BRANCH IT IS NOT APPROPRIATE HERE.
                                     0441   811 ;
                     009A C5     B5  0441   812 200$:	TSTW	UCB$W_TT_CURSOR(R5)	; LINE FEED AT CURSOR 0 IS NEWLINE
                          04     12  0445   813 	BNEQ	210$			; IF NEQ THEN NO NL POSSIBLE
                                     0447   814 	SET_STATE NL			; SET NEW LINE
                     0094 C5     96  044B   815 210$:	INCB	UCB$B_TT_LINE(R5)	; ADJUST VERTICLE COUNT
         3F A5       0094 C5     91  044F   816 	CMPB	UCB$B_TT_LINE(R5),UCB$L_DEVDEPEND+3(R5);
                          04     1F  0455   817 	BLSSU	215$			; IF LSSU THEN NO PAGE CROSS
                     0094 C5     94  0457   818 	CLRB	UCB$B_TT_LINE(R5)	; RESET VERTICLE POSITION IF PAGE CROSS
                                     045B   819 215$:	IF_NOT_STATE WRITE,220$		; BR IF NOT WRITE
            54         4C A5     D0  0461   820 	MOVL	UCB$L_IRP(R5),R4	; ADDRESS CURRENT PACKET
                       34 A4     B6  0465   821 	INCW	IRP$L_MEDIA(R4)		; COUNT LINE
       0097 C5       009E C5     90  0468   822 220$:	MOVB	UCB$B_TT_LFFILL(R5),UCB$B_TT_FILL(R5); INSERT TO CAUSE FILL
                          03     13  046F   823 	BEQL	225$			; OUTPUT IF NO FILL NEEDED
                                     0471   824 	SET_STATE FILL			; OUTPUT FILL CHARACTERS
                          FF49   31  0474   825 225$:	BRW	OUTPUTANDWAIT
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  22
V06             OUTPUTANDWAIT - OUTPUT CHARACTER AND WAIT FOR I                                                                 (18)

                                     0477   827 ;++
                                     0477   828 ; ESCAPE - FORMAT A ESCAPE BASED ON OPERATION AND TARGET UNIT
                                     0477   829 ;
                                     0477   830 ; FUNCTIONAL DESCRIPTION:
                                     0477   831 ;
                                     0477   832 ; THIS ROUTINE FORMATS ESCAPES.
                                     0477   833 ;
                                     0477   834 ; READ OPERATION:
                                     0477   835 ;
                                     0477   836 ;	A "$" IS ECHOED IF THE ESCAPE IS A TERMINATOR.
                                     0477   837 ;
                                     0477   838 ; WRITE OPERATION:
                                     0477   839 ;
                                     0477   840 ;	THE ESCAPE IS OUTPUT. ON TERMINALS WITH THE CHARACTERISTIC TT$M_ESCAPE,
                                     0477   841 ;	THE REMAINDER OF THE SEQUENCE IS CHECKED FOR EFFECT ON THE CURSOR
                                     0477   842 ;	POSITION.
                                     0477   843 ;
                                     0477   844 ; INPUTS:
                                     0477   845 ;
                                     0477   846 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     0477   847 ;	R3 = ESCAPE
                                     0477   848 ;	R5 = UCB ADDRESS
                                     0477   849 ;
                                     0477   850 ; OUTPUTS:
                                     0477   851 ;
                                     0477   852 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     0477   853 ;	R3 = ESCAPE OR "$"
                                     0477   854 ;	R5 = UCB ADDRESS
                                     0477   855 ;--
                                     0477   856 ESCAPE:					; OUTPUT ESCAPE STRING
                                     0477   857 	IF_NOT_STATE EOL,250$		; ALSO IF NOT TERMINATOR
            53            24     9A  047D   858 	MOVZBL	#TTY$C_DOLLAR,R3	; OTHERWISE ECHO DOLLAR SIGN
                          FF0B   31  0480   859 	BRW	UPCURSOR		; ADJUST CURSOR AND OUTPUT
                                     0483   860 ;
                                     0483   861 ; OUTPUT ESCAPE ON WRITE OR CONTROL R
                                     0483   862 ;
         3C A5            03     E0  0483   863 250$:	BBS	#TT$V_ESCAPE,UCB$L_DEVDEPEND(R5),255$; BR IF ESCAPE TERMINAL
                          0E         0487       
         39 A5         40 8F     91  0488   864 	CMPB	#TT$_VT5X,UCB$B_DEVTYPE(R5); VT5X TERMINAL?
                          73     1A  048D   865 	BGTRU	300$			; IF GTRU THEN NO
         39 A5         60 8F     91  048F   866 	CMPB	#TT$_VT5X+32,UCB$B_DEVTYPE(R5);
                          6C     1B  0494   867 	BLEQU	300$			; IF LEQU THEN NO
            54         68 A5     D0  0496   868 255$:	MOVL	UCB$L_SVAPTE(R5),R4	; ADDRESS WRITE BUFFER OR READ BUFFER
            7E            50     7D  049A   869 	MOVQ	R0,-(SP)		; SAVE REGISTERS
            7E            53     D0  049D   870 	MOVL	R3,-(SP)		;
                       FC'AF     9F  04A0   871 	PUSHAB	B^290$			; SET UP RETURN
                                     04A3   872 	IF_NOT_STATE READ,260$		; IF NOT READ THEN WRITE
                                     04A9   873 	IF_NOT_STATE CTRLR,280$		; IF NOT CTRLR THEN CAN'T DO
         6E A5         6C A5     A1  04AF   874 	ADDW3	UCB$W_BOFF(R5),UCB$W_BCNT(R5),R3; GET OFFSET IN BLOCK TO DATA END
                          53         04B4       
            53            53     3C  04B5   875 	MOVZWL	R3,R3			; CLEAR UPPER WORD
            53            54     C0  04B8   876 	ADDL	R4,R3			;
            53            64     C2  04BB   877 	SUBL	TTY$L_RB_NXT(R4),R3	; CALC SIZE
                          0B     11  04BE   878 	BRB	270$			; CONTINUE IN COMMON
                                     04C0   879 260$:	IF_NOT_STATE	WRITE,280$	; BR IF NOT IN WRITE EITHER
         04 A4            64     C3  04C6   880 	SUBL3	TTY$L_WB_NXT(R4),TTY$L_WB_END(R4),R3; GET REMAINING STRING SIZE
                          53         04CA       
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  23
V06             OUTPUTANDWAIT - OUTPUT CHARACTER AND WAIT FOR I                                                                 (18)

                          2E     13  04CB   881 270$:	BEQL	280$			; IF EQL THEN NO SEQUENCE
            50       0000'CF     9A  04CD   882 	MOVZBL	W^TTY$A_ESC_OUT,R0	; GET THE SIZE
            50         00 B4     3A  04D2   883 	LOCC	@TTY$L_WB_NXT(R4),R0,W^TTY$A_ESC_OUT+1; FIND CHARACTER
                     0001'CF         04D6       
                                     04D9   884 ;
                                     04D9   885 ; ENTER ACTION ROUTINE BASED ON POSITION IN TABLE
                                     04D9   886 ;
                                     04D9   887 ; ACTION ROUTINES ARE BELOW
                                     04D9   888 ;
                                     04D9   889 	CASE	TYPE=B,LIMIT=#1,R0,<-
                                     04D9   890 		ESC_SING,ESC_SING,ESC_SING,ESC_SING,- ; ESCAPE F,G,K,Z
                                     04D9   891 		ESC_SING,ESC_SING,ESC_SING,ESC_SING,- ; ESCAPE >,=,\,[
                                     04D9   892 		ESC_Y,-			; ESC Y
                                     04D9   893 		ESC_I,-			; ESC I
                                     04D9   894 		ESC_H,-			; ESC H
                                     04D9   895 		ESC_D,-			; ESC D
                                     04D9   896 		ESC_C,-			; ESC C
                                     04D9   897 		ESC_B,-			; ESC B
                                     04D9   898 		ESC_A,-			; ESC A
                                     04D9   899 		>
                                 05  04FB   900 280$:	RSB
            53            8E     D0  04FC   901 290$:	MOVL	(SP)+,R3
            50            8E     7D  04FF   902 	MOVQ	(SP)+,R0
                          FEBB   31  0502   903 300$:	BRW	OUTPUTANDWAIT		; OUTPUT THE CHARACTER
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  24
V06             OUTPUTANDWAIT - OUTPUT CHARACTER AND WAIT FOR I                                                                 (19)

                                     0505   905 ;++
                                     0505   906 ; CTRLZ - OUTPUT A CONTROL Z BASED ON THE OPERATION
                                     0505   907 ;
                                     0505   908 ; FUNCTIONAL DESCRIPTION:
                                     0505   909 ;
                                     0505   910 ; IF THE CURRENT OPERATION IS A READ AND THE ^Z IS A TERMINATOR THE ECHO ^Z.
                                     0505   911 ;
                                     0505   912 ; INPUTS:
                                     0505   913 ;
                                     0505   914 ; 	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     0505   915 ;	R3 = CONTROL Z
                                     0505   916 ;	R5 = UCB ADDRESS
                                     0505   917 ;
                                     0505   918 ; OUTPUTS:
                                     0505   919 ;
                                     0505   920 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     0505   921 ;	R3 = CONTROL Z
                                     0505   922 ;	R4 = ADDRESS OF THE MULTIECHO STRING FOR CONTROL Z IF APPROP.
                                     0505   923 ;	R5 = UCB ADDRESS
                                     0505   924 ;--
                                     0505   925 CTRLZ:					; CONTROL Z
                                     0505   926 	IF_NOT_STATE READ,300$		; OUTPUT 26(8) IF NOT READ
                                     050B   927 	IF_NOT_STATE EOL,300$		; ^Z IF TERMINATOR
            54       0000'CF     9E  0511   928 	MOVAB	W^TTY$A_CTRLZ,R4	; ADDRESS MULTIECHO STRING
                          0093   31  0516   929 	BRW	STRTMULTI		; START OUTPUT
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  25
V06             OUTPUTANDWAIT - OUTPUT CHARACTER AND WAIT FOR I                                                                 (20)

                                     0519   931 ;++
                                     0519   932 ; BACKSPACE - OUTPUT A BACKSPACE
                                     0519   933 ;
                                     0519   934 ; FUNCTIONAL DESCRI@PTION:
                                     0519   935 ;
                                     0519   936 ; THIS ROUTINE OUTPUTS A BACKSPACE ON  A TERMINAL.
                                     0519   937 ; SEVERAL CONDITIONS EXIST:
                                     0519   938 ;
                                     0519   939 ; MULTIPLE ECHO IS PROGRESS --
                                     0519   940 ;
                                     0519   941 ;		DECREMENT THE CURSOR AND CONTINUE.
                                     0519   942 ;
                                     0519   943 ; HORIZON = 0 -- DO NOTHING.
                                     0519   944 ;
                                     0519   945 ; READ IN PROGRESS AND NO DATA -- DO NOTHING.
                                     0519   946 ;
                                     0519   947 ; READ IN PROGRESS AND DATA -- OUTPUT A BS/SPACE/BS STRING.
                                     0519   948 ;
                                     0519   949 ; WRITE IN PROGRESS -- OUTPUT BS.
                                     0519   950 ;
                                     0519   951 ; INPUTS:
                                     0519   952 ;
                                     0519   953 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     0519   954 ;	R3 = TTY$C_BS
                                     0519   955 ;	R5 = UCB ADDRESS
                                     0519   956 ;
                                     0519   957 ; OUTPUTS:
                                     0519   958 ;
                                     0519   959 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     0519   960 ;	R3 = TTY$C_BS
                                     0519   961 ;	R4 = ADDRESS OF THE BS/SPACE/BS STRING IF APPROP.
                                     0519   962 ;	R5 = UCB ADDRESS
                                     0519   963 ;--
                                     0519   964 BSPACE:					; BACKSPACE
                                     0519   965 	IF_STATE MULTI,430$		; IF MULTI STATE THE OUTPUT
                                     051F   966 ;
                                     051F   967 ; IF THE HORIZON IS ZERO THEN NOOP
                                     051F   968 ;
                     009A C5     B5  051F   969 	TSTW	UCB$W_TT_CURSOR(R5)	; ANY CHARACTERS?
                          18     13  0523   970 	BEQL	435$			; IF EQL THEN NO
                                     0525   971 ;
                                     0525   972 ; IF NOT IN READ THEN OUTPUT DIRECTLY
                                     0525   973 ;
                                     0525   974 	IF_NOT_STATE READ,430$		;
                                     052B   975 ;
                                     052B   976 ; IF IN READ THEN ECHO BS/SPACE/BS IF ANY PRESENT DATA
                                     052B   977 ;
                       6E A5     B5  052B   978 	TSTW	UCB$W_BCNT(R5)		; ANY DATA YET?
                          0D     13  052E   979 	BEQL	435$			; IF EQL THEN NO OUTPUT
         78 A5       0001'CF     9E  0530   980 	MOVAB	W^TTY$A_BACKSPACE+1,UCB$L_TT_MULTI(R5); ADDRESS MULTIECHO STRING
                                     0536   981 ;
                                     0536   982 ; WRITE OF A BACKSPACE
                                     0536   983 ;
                     009A C5     B7  0536   984 430$:	DECW	UCB$W_TT_CURSOR(R5)	; ADJUST HORIZON
                          FE83   31  053A   985 	BRW	OUTPUTANDWAIT		; OUTPUT THE CHARACTER
                          FAC4   31  053D   986 435$:	BRW	GETNEXTCHAR		; CONTINUE
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  26
V06             OUTPUTANDWAIT - OUTPUT CHARACTER AND WAIT FOR I                                                                 (21)

                                     0540   988 ;++
                                     0540   989 ; VTAB - OUTPUT A VERTICLE TAB
                                     0540   990 ; FORM - OUTPUT A FORM FEED
                                     0540   991 ;
                                     0540   992 ; FUNCTIONAL DESCRIPTION:
                                     0540   993 ;
                                     0540   994 ; THIS ROUTINE SETS UP THE PROPER OUTPUT STRING FOR A VTAB OF FORM FEED
                                     0540   995 ; ON THE TARGET UNIT.  VTAB TRANSLATES TO 4 LINE FEEDS. AND FORM FEED
                                     0540   996 ; TO MULTIPLE LINE FEEDS BASED ON THE PRESENCE OF MECHANICAL HELP
                                     0540   997 ; AND THE CURRENT VERTICLE LINE POSITION. TO AVOID THE NECESSITY
                                     0540   998 ; FOR A LARGE NUMBER OF LF DATA BYTES THE FORM FEED CAUSES A MULTI
                                     0540   999 ; ECHO STRING OF 4 LINE FEEDS FOLLOWED BY ANOTHER FORM FEED TO BE
                                     0540  1000 ; OUTPUT UNTIL A PAGE CROSS TAKES PLACE.
                                     0540  1001 ;
                                     0540  1002 ; INPUTS:
                                     0540  1003 ;
                                     0540  1004 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     0540  1005 ;	R3 = C_VTAB OR C_FF
                                     0540  1006 ;	R5 = UCB ADDRESS
                                     0540  1007 ;
                                     0540  1008 ; OUTPUTS:
                                     0540  1009 ;
                                     0540  1010 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     0540  1011 ;	R5 = UCB ADDRESS
                                     0540  1012 ;--
            54       0000'CF     9E  0540  1013 VTAB:	MOVAB	W^TTY$A_VTAB,R4		; SET UP OUTPUT
                          65     11  0545  1014 	BRB	STRTMULTI		; START MULTIPLE OUTPUT
                                     0547  1015 ;
                                     0547  1016 ; FORM FEED
                                     0547  1017 ;
                          54     D4  0547  1018 FORM:	CLRL	R4			; CLEAR A REGISTER
         3F A5       0094 C5     83  0549  1019 	SUBB3	UCB$B_TT_LINE(R5),UCB$L_DEVDEPEND+3(R5),R4; GET NUMBER TO END OF PAGE
                          54         054F       
            04            54     91  0550  1020 	CMPB	R4,#4			; OUTPUT THE LF'S IN GROUPS OF 8
                          0C     1A  0553  1021 	BGTRU	520$			; IF GTRU THEN MORE THAN 4 TO OUTPUT
            04            54     C3  0555  1022 510$:	SUBL3	R4,#4,R4		; ADJUST FOR OFFSET FROM 4
                          54         0558       
            54       0000'CF44   9E  0559  1023 	MOVAB	W^TTY$A_VTAB[R4],R4	; GET THE ADDRESS OF THE STRING
                          4B     11  055F  1024 	BRB	STRTMULTI		; START OUTPUT
            54       0000'CF     9E  0561  1025 520$:	MOVAB	W^TTY$A_LONGFORM,R4	; GET ADDRESS TO STRING
                          44     11  0566  1026 	BRB	STRTMULTI		;
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  27
V06             OUTPUTANDWAIT - OUTPUT CHARACTER AND WAIT FOR I                                                                 (22)

                                     0568  1028 ;++
                                     0568  1029 ; TAB - OUTPUT A TAB ON THE TARGET TERMINAL BASED ON CURSOR POSITION
                                     0568  1030 ;
                                     0568  1031 ; FUNCTIONAL DESCRIPTION:
                                     0568  1032 ;
                                     0568  1033 ; THIS ROUTINE IS ENTERED TO OUTPUT A TAB ON THE TARGET UNIT.
                                     0568  1034 ; IF THE TERMINAL HAS MECHANICAL TAB THEN THE TAB GOES DIRECT.
                                     0568  1035 ; OTHERWISE, THE CURSOR POSITION IS USED TO CALC. HOW MANY BLANKS
                                     0568  1036 ; TO OUTPUT TO MOVE THE CURSOR TO THE NEXT TAB STOP.
                                     0568  1037 ;
                                     0568  1038 ; INPUTS:
                                     0568  1039 ;
                                     0568  1040 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     0568  1041 ;	R3 = TTY$C_TAB
                                     0568  1042 ;	R5 = UCB ADDRESS
                                     0568  1043 ;
                                     0568  1044 ; OUTPUTS:
                                     0568  1045 ;
                                     0568  1046 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     0568  1047 ;	R3 = TTY$C_TAB
                                     0568  1048 ;	R4 = ADDRESS OF TAB MULTIECHO STRING IF APPROP.
                                     0568  1049 ;	R5 = UCB ADDRESS
                                     0568  1050 ;--
            03            00     EF  0568  1051 TAB:	EXTZV	#0,#3,UCB$W_TT_CURSOR(R5),R4; GET HORIZON POINTER
            54       009A C5         056B       
         3C A5            08     E0  056F  1052 	BBS	#TT$V_MECHTAB,UCB$L_DEVDEPEND(R5),530$; OUTPUT IF MECHANICAL HELP
                          08         0573       
            54       0000'CF44   9E  0574  1053 525$:	MOVAB	W^TTY$A_TAB[R4],R4	; ADDRESS STRING TO OUTPUT
                          30     11  057A  1054 	BRB	STRTMULTI		; START MULTIPLE OUTPUT
                                     057C  1055 ;
                                     057C  1056 ; MECHANICAL TAB TERMINAL
                                     057C  1057 ;
                                     057C  1058 ; THIS ROUTINE ASSUMES THAT THE TABS ARE SET ON 8'S
                                     057C  1059 ;
         39 A5         40 8F     91  057C  1060 530$:	CMPB	#TT$_VT5X,UCB$B_DEVTYPE(R5); IN RANGE FOR SPECIAL CASE VT5X
                          18     1A  0581  1061 	BGTRU	535$			; IF GTR THEN NO
         39 A5         60 8F     91  0583  1062 	CMPB	#TT$_VT5X+32,UCB$B_DEVTYPE(R5); 
                          11     1B  0588  1063 	BLEQU	535$			; 
         3A A5       009A C5     A3  058A  1064 	SUBW3	UCB$W_TT_CURSOR(R5),UCB$W_DEVBUFSIZ(R5),R3; DISTANCE FROM RIGHT
                          53         0590       
                          05     1B  0591  1065 	BLEQU	534$			; IF LEQU THEN SKIP TEST
            53            08     B1  0593  1066 	CMPW	#8,R3			; IN LAST TAB SPACE?
                          DC     1E  0596  1067 	BGEQU	525$			; IF TRUE THEN SKIP MECH TAB
            53            09     9A  0598  1068 534$:	MOVZBL	#TTY$C_TAB,R3		;
       009A C5            54     AA  059B  1069 535$:	BICW	R4,UCB$W_TT_CURSOR(R5)	; SETUP CURSOR STOP ON 8
       009A C5            08     A0  05A0  1070 	ADDW	#8,UCB$W_TT_CURSOR(R5)	;
                                     05A5  1071 	CLR_STATE NL
                          FE14   31  05A9  1072 	BRW	OUTPUTANDWAIT		;
                                     05AC  1073  
                                     05AC  1074 	.DSABL	LSB
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  28
V06             OUTPUTANDWAIT - OUTPUT CHARACTER AND WAIT FOR I                                                                 (23)

                                     05AC  1076 ;++
                                     05AC  1077 ; STRTMULTI - START MULTIECHO ON UNIT
                                     05AC  1078 ;
                                     05AC  1079 ; FUNCTIONAL DESCRIPTION:
                                     05AC  1080 ;
                                     05AC  1081 ; THIS ROUTINE STARTS A SPECIFIED MULTIECHO STRING OUT ON A UNIT.
                                     05AC  1082 ; THE FIRST CHARACTER IS PICKED OUT AND THE ADDRESS OF THE REMAINDER
                                     05AC  1083 ; IS PLACED IN UCB$L_MULTIECHO FOLLOWED BY THE SETTING OF THE MULTIECHO
                                     05AC  1084 ; IN PROGRESS STATE.
                                     05AC  1085 ;
                                     05AC  1086 ; INPUTS:
                                     05AC  1087 ;
                                     05AC  1088 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     05AC  1089 ;	R4 = ADDRESS OF THE MULTIECHO STRING
                                     05AC  1090 ;	R5 = UCB ADDRESS
                                     05AC  1091 ;
                                     05AC  1092 ; OUTPUTS:
                                     05AC  1093 ;
                                     05AC  1094 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     05AC  1095 ;	R3 = FIRST CHARACTER
                                     05AC  1096 ;	R5 = UCB ADDRESS
                                     05AC  1097 ;--
                                     05AC  1098 STRTMULTI:
                                     05AC  1099 	SET_STATE MULTI			; SET THE STATE
         78 A5            54     D0  05B0  1100 	MOVL	R4,UCB$L_TT_MULTI(R5)	; INSERT ADDRESS TO REMAINDER
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  29
V06             OUTPUTANDWAIT - OUTPUT CHARACTER AND WAIT FOR I                                                                 (24)

                                     05B4  1102 ;++
                                     05B4  1103 ; MULTIECHOING - CONTINUE MULTIECHO STRING OUTPUT
                                     05B4  1104 ;
                                     05B4  1105 ; FUNCTIONAL DESCRIPTION:
                                     05B4  1106 ;
                                     05B4  1107 ; THIS ROUTINE IS ENTERED WHEN TTY$V_ST_MULTI IS SET. THE NEXT
                                     05B4  1108 ; CHARACTER IN THE STRING ADDRESSED BY UCB$L_MULTIECHO IS OUTPUT.
                                     05B4  1109 ; IF THE NEXT CHARACTER IS ZERO THEN THE STRING OUTPUT IS COMPLETE
                                     05B4  1110 ; AND THE MULTIECHO CONDITION IS RESET FOLLOWED BY A RETURN TO
                                     05B4  1111 ; THE OUTPUT STATE ANALYSIS ROUTINE IN GETNEXTCHAR.
                                     05B4  1112 ;
                                     05B4  1113 ; INPUTS:
                                     05B4  1114 ;
                                     05B4  1115 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     05B4  1116 ;	R5 = UCB ADDRESS
                                     05B4  1117 ;
                                     05B4  1118 ; OUTPUTS:
                                     05B4  1119 ;
                                     05B4  1120 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     05B4  1121 ;	R3 = CHARACTER TO OUTPUT ( FALL THROUGH TO ECHOFORMAT )
                                     05B4  1122 ;	R5 = UCB ADDRESS
                                     05B4  1123 ;--
                                     05B4  1124 MULTIECHOING:				; CONTINUE STRING MULTI ECHO
            53         78 B5     9A  05B4  1125 	MOVZBL	@UCB$L_TT_MULTI(R5),R3	; GET NEXT MULTI ECHO CHARACTER
                          07     12  05B8  1126 	BNEQ	10$			; IF NEQ THEN CONTINUE
                                     05BA  1127 	CLR_STATE MULTI			; RESET STATE
                          FA43   31  05BE  1128 	BRW	GETNEXTCHAR		; CONTINUE
                       78 A5     D6  05C1  1129 10$:	INCL	UCB$L_TT_MULTI(R5)	; ADJUST POINTER
                          FD97   31  05C4  1130 	BRW	FORMAT_CHAR		;
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  30
V06             ESCAPE SEQUENCE ACTION ROUTINES                                                                                 (25)

                                     05C7  1132 	.SBTTL	ESCAPE SEQUENCE ACTION ROUTINES
                                     05C7  1133 ;++
                                     05C7  1134 ; ESCAPE SEQUENCE ACTION ROUTINES
                                     05C7  1135 ;
                                     05C7  1136 ; THESE ROUTINES ARE ENTERED ON ESCAPE SEQUENCE OUTPUT.
                                     05C7  1137 ;
                                     05C7  1138 ; INPUTS:
                                     05C7  1139 ;
                                     05C7  1140 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     05C7  1141 ;	R3 = SIZE OF REMIANING OUTPUT
                                     05C7  1142 ;	R4 = ADDRESS OF THE OUTPUT BUFFER BLOCK
                                     05C7  1143 ;	R5 = UCB ADDRESS
                                     05C7  1144 ;
                                     05C7  1145 ; OUTPUTS:
                                     05C7  1146 ;
                                     05C7  1147 ;	R5 = UCB ADDRESS
                                     05C7  1148 ;
                                     05C7  1149 ; R0,R1,R3 ARE AVAILABLE FOR USE
                                     05C7  1150 ;
                                     05C7  1151 ;--
                                     05C7  1152 ESC_I:					; CURSOR UP
                     0094 C5     95  05C7  1153 ESC_A:	TSTB	UCB$B_TT_LINE(R5)	; TOP OF SCREEN?
                          36     13  05CB  1154 	BEQL	ESC_SING		; IF EQL THEN YES
                     0094 C5     97  05CD  1155 	DECB	UCB$B_TT_LINE(R5)	; MOVE CURSOR UP
                          30     11  05D1  1156 	BRB	ESC_SING
                                     05D3  1157 ESC_B:					; MOVE CURSOR DOWN
         3F A5       0094 C5     91  05D3  1158 	CMPB	UCB$B_TT_LINE(R5),UCB$L_DEVDEPEND+3(R5); AT BOTTOM?
                          28     1E  05D9  1159 	BGEQU	ESC_SING		; IF GEQU THEN YES
                     0094 C5     96  05DB  1160 	INCB	UCB$B_TT_LINE(R5)	; MOVE CURSOR DOWN
                          22     11  05DF  1161 	BRB	ESC_SING
                                     05E1  1162 ESC_C:					; MOVE CURSOR RIGHT
         3A A5       009A C5     B1  05E1  1163 	CMPW	UCB$W_TT_CURSOR(R5),UCB$W_DEVBUFSIZ(R5); AT RIGHT?
                          1A     1E  05E7  1164 	BGEQU	ESC_SING		; IF GEQU THEN YES
                     009A C5     B6  05E9  1165 	INCW	UCB$W_TT_CURSOR(R5)	; MOVE RIGHT
                          14     11  05ED  1166 	BRB	ESC_SING
                                     05EF  1167 ESC_D:					; MOVE CURSOR LEFT
                     009A C5     B5  05EF  1168 	TSTW	UCB$W_TT_CURSOR(R5)	; AT LEFT?
                          0E     13  05F3  1169 	BEQL	ESC_SING		; IF EQL THEN YES
                     009A C5     B7  05F5  1170 	DECW	UCB$W_TT_CURSOR(R5)	; ADJUST
                          08     11  05F9  1171 	BRB	ESC_SING
                                     05FB  1172 ESC_H:					; HOME
                     009A C5     94  05FB  1173 	CLRB	UCB$W_TT_CURSOR(R5)	;
                     0094 C5     94  05FF  1174 	CLRB	UCB$B_TT_LINE(R5)	;
                                     0603  1175 ESC_SING:				; SET STATE FOR NO FORMAT
                                     0603  1176 	SET_STATE ESC_O			; SET THE STATE
       0099 C5            01     90  0607  1177 	MOVB	#1,UCB$B_TT_ESC_O(R5)	;
                                 05  060C  1178 	RSB
                                     060D  1179 ESC_Y:					; DIRECT CURSOR ADDRESS
            53            03     D1  060D  1180 	CMPL	#3,R3			; ENTIRE SEQUENCE PRESENT?
                          33     1A  0610  1181 	BGTRU	20$			; IF GTRU THEN NO
                                     0612  1182 	SET_STATE ESC_O
       0099 C5            03     90  0616  1183 	MOVB	#3,UCB$B_TT_ESC_O(R5)	; SET SIZE OF SEQUENCE
            64            01     C1  061B  1184 	ADDL3	#1,TTY$L_WB_NXT(R4),R4	; GET ADDRESS OF LINE POS
                          54         061E       
            84            20     83  061F  1185 	SUBB3	#^A/ /,(R4)+,R3		; GET VALUE
                          53         0622       
         3F A5            53     91  0623  1186 	CMPB	R3,UCB$L_DEVDEPEND+3(R5); IN RANGE?
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  31
V06             ESCAPE SEQUENCE ACTION ROUTINES                                                                                 (25)

                          05     1A  0627  1187 	BGTRU	10$			; IF GTRU THEN NO CHANGE (NOT VT50)
       0094 C5            53     90  0629  1188 	MOVB	R3,UCB$B_TT_LINE(R5)	; SET LINE 
            64            20     83  062E  1189 10$:	SUBB3	#^A/ /,(R4),R3		; GET VALUE
                          53         0631       
       009A C5            53     9B  0632  1190 	MOVZBW	R3,UCB$W_TT_CURSOR(R5)	; SET NEW CURSOR
         3A A5       009A C5     B1  0637  1191 	CMPW	UCB$W_TT_CURSOR(R5),UCB$W_DEVBUFSIZ(R5); IN RANGE?
                          06     1B  063D  1192 	BLEQU	20$			; IF LEQU THEN CORRECT
       009A C5         3A A5     B0  063F  1193 	MOVW	UCB$W_DEVBUFSIZ(R5),UCB$W_TT_CURSOR(R5); SET MAX
                                 05  0645  1194 20$:	RSB
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  32
V06             ESCAPE SEQUENCE ACTION ROUTINES                                                                                 (27)

                                     0646  1197 ;++
                                     0646  1198 ; BRDCST - CONTINUE IN PROGRESS BROADCAST 
                                     0646  1199 ;
                                     0646  1200 ; FUNCTIONAL DESCRIPTION:
                                     0646  1201 ;
                                     0646  1202 ; THIS ROUTINE IS ENTERED WHEN THE BROADCAST STATE IS SET TO RETURN THE NEXT
                                     0646  1203 ; CHARACTER IN THE BROADCAST MESSAGE. IF THE BROADCAST MESSAGE IS DONE THE NEXT
                                     0646  1204 ; APPROPRIATE BROADCAST MESSAGE IS BEGUN. IF NO MORE BROADCASTS EXIST, THEN NORMAL
                                     0646  1205 ; PROCESSING IS RESTORED.
                                     0646  1206 ;
                                     0646  1207 ; INPUTS:
                                     0646  1208 ;
                                     0646  1209 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     0646  1210 ;	R5 = UCB ADDRESS
                                     0646  1211 ;
                                     0646  1212 ; OUTPUTS:
                                     0646  1213 ;
                                     0646  1214 ;	R2,R5 ARE PRESERVED.
                                     0646  1215 ;--
                                     0646  1216 BRDCST:					; CONTINUE BROADCAST
            54       0084 C5     D0  0646  1217 	MOVL	UCB$L_TT_BRDCST(R5),R4	; GET ADDRESS OF THE CURRENT BLOCK
            53       0098 C5     9A  064B  1218 	MOVZBL	UCB$B_TT_BRDPT(R5),R3	; GET MESSAGE OFFSET
         15 A4            53     91  0650  1219 	CMPB	R3,TTY$B_BD_CNT(R4)	; DONE?
                          24     1A  0654  1220 	BGTRU	20$			; IF GTRU THEN DONE
                          0C     13  0656  1221 	BEQL	10$			; IF EQL THEN  RESET MODE
            53         18 A443   9A  0658  1222 	MOVZBL	TTY$L_BD_DATA(R4)[R3],R3; GET THE NEXT CHARACTER
                     0098 C5     96  065D  1223 	INCB	UCB$B_TT_BRDPT(R5)	; ADJUST POINTER
                          FCFA   31  0661  1224 	BRW	FORMAT_CHAR		; OUTPUT THE CHARACTER
         3C A5            0E     E1  0664  1225 10$:	BBC	#TT$V_HOLDSCREEN,UCB$L_DEVDEPEND(R5),20$; IF NOT HOLD SCREEN THEN CONTINUE
                          11         0668       
                     0098 C5     96  0669  1226 	INCB	UCB$B_TT_BRDPT(R5)	; RESET FOR NEXT CHECK
         78 A5       0000'CF     9E  066D  1227 	MOVAB	W^TTY$A_HLDSCREEN,UCB$L_TT_MULTI(R5); SET UP NEW HOLD SCREEN
                                     0673  1228 	SET_STATE MULTI			; SET MULTI OUTPUT STATE
                          FF32   31  0677  1229 	BRW	STRTMULTI		; CONTINUE
                                     067A  1230 ;
                                     067A  1231 ; COMPLETE THIS MESSAGE 
                                     067A  1232 ;
                          0036   30  067A  1233 20$:	BSBW	COMPLETE_BRDCST
            53   00000000'GF     9E  067D  1234 	MOVAB	G^IOC$GQ_BRDCST,R3	; ADDRESS BROADCAST LIST HEAD
            54            64     D0  0684  1235 70$:	MOVL	(R4),R4			; LINK TO NEXT
            54            53     D1  0687  1236 75$:	CMPL	R3,R4			; AT LIST HEAD?
                          1D     13  068A  1237 	BEQL	150$			; IF EQL THEN YES
                                     068C  1238 	CASE	TYPE=B,TTY$B_BD_WHO(R4),<80$,85$,90$>
         10 A4            55     D1  0697  1239 80$:	CMPL	R5,TTY$L_BD_UCB(R4)	; THIS UNIT?
                          E7     12  069B  1240 	BNEQ	70$			; CONTINUE IN NEQ
                          05     11  069D  1241 	BRB	90$			; START THIS BROADCAST
                       50 A5     B5  069F  1242 85$:	TSTW	UCB$W_REFC(R5)		; IN USE?
                          E0     13  06A2  1243 	BEQL	70$			; IF EQL THEN NO
                          2D     10  06A4  1244 90$:	BSBB	TTY$STRT_BRDCST		; SET UP THE BROADCAST
                          F95B   31  06A6  1245 	BRW	GETNEXTCHAR		; AND BEGIN AGAIN
                                     06A9  1246 ;
                                     06A9  1247 ; NO MORE BROADCASTS
                                     06A9  1248 ;
                                     06A9  1249 150$:	CLR_STATE BRDCST		; RESET BROADCAST STATE
                          F950'  30  06AD  1250 	BSBW	TTY$RESTARTIO		; RESTART THE CURRENT I/O IF ANY
                          F951   31  06B0  1251 	BRW	GETNEXTCHAR		; CONTINUE
                                     06B3  1252 ;
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  33
V06             ESCAPE SEQUENCE ACTION ROUTINES                                                                                 (27)

                                     06B3  1253 ; COMPLETE BROADCAST SUBROUTINE
                                     06B3  1254 ;
                                     06B3  1255 COMPLETE_BRDCST:			; COMPLETE BROADCAST
                       16 A4     97  06B3  1256 	DECB	TTY$B_BD_REFC(R4)	; ADJUST REF COUNT
                          1A     12  06B6  1257 	BNEQ	40$			; IF NEQ THEN THIS ONE IS NOT DONE
                          34     BB  06B8  1258 	PUSHR	#^M<R2,R4,R5>		; SAVE CRUTIAL REGS
            55         0C A4     9E  06BA  1259 	MOVAB	TTY$L_BD_FORK(R4),R5	; ADDRESS FORK BLOCK
                       D0'AF     9F  06BE  1260 	PUSHAB	B^20$			; SET RETURN ADDRESS
                                     06C1  1261 	FORK				; CREATE FORK TO RELEASE RESOURCE
                                     06C7  1262 ;
                                     06C7  1263 ; RELEASE BREAKTHROUGH RESOURCE FORK ROUTINE
                                     06C7  1264 ;
            50            06     9A  06C7  1265 	MOVZBL	#RSN$_BRKTHRU,R0	; SET RESOURCE NUMBER
                 00000000'GF     17  06CA  1266 	JMP	G^SCH$RAVAIL		; DELCARE RESOURCE
                          34     BA  06D0  1267 20$:	POPR	#^M<R2,R4,R5>		; RESTORE REGISTERS
                                 05  06D2  1268 40$:	RSB				; RETURN
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  34
V06             ESCAPE SEQUENCE ACTION ROUTINES                                                                                 (28)

                                     06D3  1270 ;++
                                     06D3  1271 ; TTY$STRT_BRDCST - START BROADCAST OPERATION
                                     06D3  1272 ;
                                     06D3  1273 ; FUNCTIPONAL DESCRIPTION:
                                     06D3  1274 ;
                                     06D3  1275 ; THIS ROUTINE SETS UP THE STATE TO BEGIN A BROADCAST OPERATION
                                     06D3  1276 ;
                                     06D3  1277 ; INPUTS:
                                     06D3  1278 ;
                                     06D3  1279 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     06D3  1280 ;	R4 = ADDRESS OF THE BLOCK TO START
                                     06D3  1281 ;	R5 = UCB ADDRESS
                                     06D3  1282 ;
                                     06D3  1283 ; OUTPUTS:
                                     06D3  1284 ;
                                     06D3  1285 ;	R2,R4,R5 ARE PRESERVED
                                     06D3  1286 ;--
                                     06D3  1287 TTY$STRT_BRDCST::			; START BROADCAST OPERATION
       0084 C5            54     D0  06D3  1288 	MOVL	R4,UCB$L_TT_BRDCST(R5)	; SAVE BLOCK ADDRESS
                     0098 C5     94  06D8  1289 	CLRB	UCB$B_TT_BRDPT(R5)	; START AT FIRST CHARACTER
                                     06DC  1290 	SET_STATE BRDCST		; SET STATE
                                     06E0  1291 	CLR_STATE CTRLS			; SET NO CONTROL S STATE
         3C A5            0E     E1  06E3  1292 	BBC	#TT$V_HOLDSCREEN,UCB$L_DEVDEPEND(R5),10$; BR IF NOT IN HOLD SCREEN
                          0A         06E7       
         78 A5       0000'CF     9E  06E8  1293 	MOVAB	W^TTY$A_RLSCREEN,UCB$L_TT_MULTI(R5); RELEASE THE SCREEN
                                     06EE  1294 	SET_STATE MULTI			;
                                 05  06F2  1295 10$:	RSB				; RETURN
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  35
V06             ESCAPE SEQUENCE ACTION ROUTINES                                                                                 (29)

                                     06F3  1297 ;++
                                     06F3  1298 ; TTY$STOP_BRDCST - STOP ALL BROADCASTS ON THIS UNIT
                                     06F3  1299 ;
                                     06F3  1300 ; FUNCTIONAL DESCRIPTION:
                                     06F3  1301 ;
                                     06F3  1302 ; THIS ROUTINE FLUSHES ALL PENDING BROADCAST MESSAGES FOR THIS UNIT.
                                     06F3  1303 ;
                                     06F3  1304 ; INPUTS:
                                     06F3  1305 ;
                                     06F3  1306 ;	R2 = ADDRESS OF THE UNIT STATE VECTOR
                                     06F3  1307 ;	R5 = UCB ADDRESS
                                     06F3  1308 ;
                                     06F3  1309 ; OUTPUTS:
                                     06F3  1310 ;
                                     06F3  1311 ;	R2,R5 ARE PRESERVED.
                                     06F3  1312 ;--
                                     06F3  1313 TTY$STOP_BRDCST::			; STOP BROADCASTS ON UNIT
            54       0084 C5     D0  06F3  1314 	MOVL	UCB$L_TT_BRDCST(R5),R4	; GET ADDRESS OF THE CURRENT BLOCK
                 00000000'GF     9F  06F8  1315 	PUSHAB	G^IOC$GQ_BRDCST		; SAVE LIST HEAD ADDRESS
                                     06FE  1316 10$:	CLR_STATE BRDCST
                          FFAE   30  0702  1317 	BSBW	COMPLETE_BRDCST		; COMPLETE THIS ONE
            54            64     D0  0705  1318 15$:	MOVL	(R4),R4			; LINK TO NEXT BLOCK
            6E            54     D1  0708  1319 	CMPL	R4,(SP)			; DONE?
                          1A     13  070B  1320 	BEQL	40$			; IF EQL THEN YES
                                     070D  1321 	CASE	TYPE=B,TTY$B_BD_WHO(R4),<25$,30$,10$>	; SEE IF THIS IS APPROPRIATE
         10 A4            55     D1  0718  1322 25$:	CMPL	R5,TTY$L_BD_UCB(R4)	; THIS UNIT?
                          E0     13  071C  1323 	BEQL	10$			; IF EQL THEN COMPLETE
                          E5     11  071E  1324 	BRB	15$			; OTHERWISE CONTINUE
                       50 A5     B5  0720  1325 30$:	TSTW	UCB$W_REFC(R5)		; REF COUNT 0?
                          D9     12  0723  1326 	BNEQ	10$			; IF NEQ THEN COMPLETE
                          DE     11  0725  1327 	BRB	15$			; 
                          8E     D5  0727  1328 40$:	TSTL	(SP)+			; REMOVE LIST HEAD ADDRESS
                                 05  0729  1329 	RSB				; RETURN
                                     072A  1330  
                                     072A  1331 	.END
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  36
SYMBOL TABLE                                                                                                                    (29)

BIT...         = 00000008            IO$M_DATACHECK = 00004000            IO$V_NOW       = 00000006            
BRDCST           00000646 R     03   IO$M_DELETE    = 00000100            IO$V_NOWAIT    = 00000007            
BSPACE           00000519 R     03   IO$M_DMOUNT    = 00000400            IO$V_PACKED    = 00000007            
CARRIAGE         000003F1 R     03   IO$M_DSABLMBX  = 00000400            IO$V_PURGE     = 0000000B            
COMPLETE_BRDCST  000006B3 R     03   IO$M_ENABLMBX  = 00000080            IO$V_READATTN  = 00000007            
CONTROLR         00000241 R     03   IO$M_FCODE     = 0000003F            IO$V_REVERSE   = 00000006            
CRB$B_MASK       0000000E            IO$M_HANGUP    = 00000200            IO$V_SHUTDOWN  = 00000007            
CRB$B_TT_ATTN    00000004            IO$M_INHERLOG  = 00000800            IO$V_STARTUP   = 00000006            
CRB$B_TT_EXPEC   00000005            IO$M_INHEXTGAP = 00001000            IO$V_SYNCH     = 00000009            
CRB$B_TYPE       0000000A            IO$M_INHRETRY  = 00008000            IO$V_TIMED     = 00000007            
CRB$C_LENGTH     00000038            IO$M_INHSEEK   = 00001000            IO$V_TRMNOECHO = 0000000C            
CRB$K_LENGTH     00000038            IO$M_INTERRUPT = 00000040            IO$V_WRTATTN   = 00000008            
CRB$L_INTD       00000014            IO$M_INTSKIP   = 00000100            IO$_ACCESS     = 00000032            
CRB$L_INTD2      00000038            IO$M_MOUNT     = 00000200            IO$_ACPCONTROL = 00000038            
CRB$L_LINK       00000010            IO$M_NOECHO    = 00000040            IO$_CREATE     = 00000033            
CRB$L_TT_DIAL    00000000            IO$M_NOFILTR   = 00000200            IO$_DEACCESS   = 00000034            
CRB$L_WQBL       00000004            IO$M_NOFORMAT  = 00000100            IO$_DELETE     = 00000035            
CRB$L_WQFL       00000000            IO$M_NOW       = 00000040            IO$_DIAGNOSE   = 0000001D            
CRB$M_BSY      = 00000001            IO$M_NOWAIT    = 00000080            IO$_DRVCLR     = 00000004            
CRB$V_BSY      = 00000000            IO$M_PACKED    = 00000080            IO$_ERASETAPE  = 00000006            
CRB$W_REFC       0000000C            IO$M_PURGE     = 00000800            IO$_LOGICAL    = 0000002F            
CRB$W_SIZE       00000008            IO$M_READATTN  = 00000080            IO$_MODIFY     = 00000036            
CTRLR            000001CC R     03   IO$M_REVERSE   = 00000040            IO$_MOUNT      = 00000039            
CTRLU            00000199 R     03   IO$M_SHUTDOWN  = 00000080            IO$_NOP        = 00000000            
CTRLZ            00000505 R     03   IO$M_STARTUP   = 00000040            IO$_OFFSET     = 00000006            
CURSOROVRFLOW    000003E9 R     03   IO$M_SYNCH     = 00000200            IO$_PACKACK    = 00000008            
DELCHAR          00000286 R     03   IO$M_TIMED     = 00000080            IO$_PHYSICAL   = 0000001F            
DELESCAPE        00000271 R     03   IO$M_TRMNOECHO = 00001000            IO$_READHEAD   = 0000000E            
DROP             00000432 R     03   IO$M_WRTATTN   = 00000100            IO$_READLBLK   = 00000021            
EOLSEEN          000001F4 R     03   IO$S_FCODE     = 00000006            IO$_READPBLK   = 0000000C            
ESCAPE           00000477 R     03   IO$V_ABORT     = 00000008            IO$_READPRESET = 00000019            
ESC_A            000005C7 R     03   IO$V_ACCESS    = 00000006            IO$_READPROMPT = 00000037            
ESC_B            000005D3 R     03   IO$V_ATTNAST   = 00000008            IO$_READTRACKD = 00000010            
ESC_C            000005E1 R     03   IO$V_BINARY    = 00000006            IO$_READVBLK   = 00000031            
ESC_D            000005EF R     03   IO$V_CANCTRLO  = 00000006            IO$_RECAL      = 00000003            
ESC_H            000005FB R     03   IO$V_COMMOD    = 00000006            IO$_RELEASE    = 00000005            
ESC_I            000005C7 R     03   IO$V_CREATE    = 00000007            IO$_RETCENTER  = 00000007            
ESC_SING         00000603 R     03   IO$V_CTRLCAST  = 00000008            IO$_REWIND     = 00000024            
ESC_Y            0000060D R     03   IO$V_CTRLYAST  = 00000007            IO$_REWINDOFF  = 00000022            
EXE$FORK         ********   X   03   IO$V_CVTLOW    = 00000008            IO$_SEARCH     = 00000009            
EXE$GL_ABSTIM    ********   X   03   IO$V_DATACHECK = 0000000E            IO$_SEEK       = 00000002            
FILLING          000001E6 R     03   IO$V_DELETE    = 00000008            IO$_SENSECHAR  = 0000001B            
FORM             00000547 R     03   IO$V_DMOUNT    = 0000000A            IO$_SENSEMODE  = 00000027            
FORMAT_CHAR      0000035E R     03   IO$V_DSABLMBX  = 0000000A            IO$_SETCHAR    = 0000001A            
GBL...         = 00000000            IO$V_ENABLMBX  = 00000007            IO$_SETMODE    = 00000023            
GETNEXTCHAR      00000004 R     03   IO$V_FCODE     = 00000000            IO$_SKIPFILE   = 00000025            
INTEXIT          00000033 R     03   IO$V_HANGUP    = 00000009            IO$_SKIPRECORD = 00000026            
IO$M_ABORT     = 00000100            IO$V_INHERLOG  = 0000000B            IO$_SPACEFILE  = 00000002            
IO$M_ACCESS    = 00000040            IO$V_INHEXTGAP = 0000000C            IO$_SPACERECORD= 00000009            
IO$M_ATTNAST   = 00000100            IO$V_INHRETRY  = 0000000F            IO$_STARTSPNDL = 00000019            
IO$M_BINARY    = 00000040            IO$V_INHSEEK   = 0000000C            IO$_UNLOAD     = 00000001            
IO$M_CANCTRLO  = 00000040            IO$V_INTERRUPT = 00000006            IO$_VIRTUAL    = 0000003F            
IO$M_COMMOD    = 00000040            IO$V_INTSKIP   = 00000008            IO$_WRITECHECK = 0000000A            
IO$M_CREATE    = 00000080            IO$V_MOUNT     = 00000009            IO$_WRITECHECKH= 00000018            
IO$M_CTRLCAST  = 00000100            IO$V_NOECHO    = 00000006            IO$_WRITEHEAD  = 0000000D            
IO$M_CTRLYAST  = 00000080            IO$V_NOFILTR   = 00000009            IO$_WRITELBLK  = 00000020            
IO$M_CVTLOW    = 00000100            IO$V_NOFORMAT  = 00000008            IO$_WRITEMARK  = 0000001C            
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  37
SYMBOL TABLE                                                                                                                    (29)

IO$_WRITEOF    = 00000028            IRP$V_FMOD     = 00000006            PR$_TODR       = 0000001B            
IO$_WRITEPBLK  = 0000000B            IRP$V_FUNC     = 00000001            PR$_TXCS       = 00000022            
IO$_WRITETRACKD= 0000000F            IRP$V_MBXIO    = 0000000A            PR$_TXDB       = 00000023            
IO$_WRITEVBLK  = 00000030            IRP$V_MODE     = 00000000            PR$_USP        = 00000003            
IOC$GQ_BRDCST    ********   X   03   IRP$V_PAGIO    = 00000002            PR$_WCSA       = 0000002C            
IPL$_ASTDEL    = 00000002            IRP$V_PHYSIO   = 00000008            PR$_WCSD       = 0000002D            
IPL$_HWCLK     = 00000018            IRP$V_PRIVIO   = 00000009            PRI$_IOCOM     = 00000001            
IPL$_IOPOST    = 00000004            IRP$V_SWAPIO   = 00000006            PRI$_NULL      = 00000000            
IPL$_MAILBOX   = 0000000B            IRP$V_VIRTUAL  = 00000004            PRI$_RESAVL    = 00000002            
IPL$_POWER     = 0000001F            IRP$W_ABCNT      0000003C            PRI$_TICOM     = 00000004            
IPL$_QUEUEAST  = 00000006            IRP$W_BCNT       00000032            PRI$_TIMER     = 00000002            
IPL$_SCHED     = 00000003            IRP$W_BOFF       00000030            PRI$_TOCOM     = 00000003            
IPL$_SYNCH     = 00000007            IRP$W_CHAN       00000028            RSN$_ASTWAIT   = 00000001            
IPL$_TIMER     = 00000007            IRP$W_FUNC       00000020            RSN$_BRKTHRU   = 00000006            
IRP$B_CARCON     00000038            IRP$W_OBCNT      0000003E            RSN$_IACLOCK   = 00000007            
IRP$B_EFN        00000022            IRP$W_SIZE       00000008            RSN$_MAILBOX   = 00000002            
IRP$B_PRI        00000023            IRP$W_STS        0000002A            RSN$_NPDYNMEM  = 00000003            
IRP$B_RMOD       0000000B            IRP$W_TT_PRMPT   0000003C            RSN$_PGDYNMEM  = 00000005            
IRP$B_TYPE       0000000A            LINEFEED         0000043D R     03   RSN$_PGFILE    = 00000004            
IRP$C_LENGTH     0000004C            MOVEREADATA      0000006D R     03   SCH$RAVAIL       ********   X   03   
IRP$K_LENGTH     0000004C            MULTIECHOING     000005B4 R     03   SENDLINEFEED     00000435 R     03   
IRP$L_AST        00000010            OUTPUTANDWAIT    000003C0 R     03   SS$_CONTROLO     ********   X   03   
IRP$L_ASTPRM     00000014            PR$_ACCR       = 00000029            SS$_NORMAL       ********   X   03   
IRP$L_DIAGBUF    00000044            PR$_ACCS       = 00000028            STRTMULTI        000005AC R     03   
IRP$L_IOQBL      00000004            PR$_ASTLVL     = 00000013            TAB              00000568 R     03   
IRP$L_IOQFL      00000000            PR$_ESP        = 00000001            TT$C_BAUD_110  = 00000003            
IRP$L_IOSB       00000024            PR$_ICCS       = 00000018            TT$C_BAUD_1200 = 00000008            
IRP$L_IOST1      00000034            PR$_ICR        = 0000001A            TT$C_BAUD_134  = 00000004            
IRP$L_IOST2      00000038            PR$_IPL        = 00000012            TT$C_BAUD_150  = 00000005            
IRP$L_MEDIA      00000034            PR$_ISP        = 00000004            TT$C_BAUD_1800 = 00000009            
IRP$L_PID        0000000C            PR$_KSP        = 00000000            TT$C_BAUD_2000 = 0000000A            
IRP$L_SEGVBN     00000040            PR$_MAPEN      = 00000038            TT$C_BAUD_2400 = 0000000B            
IRP$L_SEQNUM     00000048            PR$_NICR       = 00000019            TT$C_BAUD_300  = 00000006            
IRP$L_SVAPTE     0000002C            PR$_P0BR       = 00000008            TT$C_BAUD_3600 = 0000000C            
IRP$L_TT_TERM    00000038            PR$_P0LR       = 00000009            TT$C_BAUD_4800 = 0000000D            
IRP$L_UCB        0000001C            PR$_P1BR       = 0000000A            TT$C_BAUD_50   = 00000001            
IRP$L_WIND       00000018            PR$_P1LR       = 0000000B            TT$C_BAUD_600  = 00000007            
IRP$M_BUFIO    = 00000001            PR$_PCBB       = 00000010            TT$C_BAUD_7200 = 0000000E            
IRP$M_CHAINED  = 00000020            PR$_PME        = 0000003D            TT$C_BAUD_75   = 00000002            
IRP$M_COMPLX   = 00000008            PR$_RXCS       = 00000020            TT$C_BAUD_9600 = 0000000F            
IRP$M_DIAGBUF  = 00000080            PR$_RXDB       = 00000021            TT$M_ALTRPAR   = 00000020            
IRP$M_FUNC     = 00000002            PR$_SBIER      = 00000034            TT$M_CRFILL    = 00000400            
IRP$M_MBXIO    = 00000400            PR$_SBIFS      = 00000030            TT$M_EIGHTBIT  = 00008000            
IRP$M_PAGIO    = 00000004            PR$_SBIMT      = 00000033            TT$M_ESCAPE    = 00000008            
IRP$M_PHYSIO   = 00000100            PR$_SBIQC      = 00000036            TT$M_HOLDSCREEN= 00004000            
IRP$M_PRIVIO   = 00000200            PR$_SBIS       = 00000031            TT$M_HOSTSYNC  = 00000010            
IRP$M_SWAPIO   = 00000040            PR$_SBISC      = 00000032            TT$M_LFFILL    = 00000800            
IRP$M_VIRTUAL  = 00000010            PR$_SBITA      = 00000035            TT$M_LOWER     = 00000080            
IRP$Q_NT_PRVMSK  0000003C            PR$_SBR        = 0000000C            TT$M_MBXDSABL  = 00010000            
IRP$S_FCODE    = 00000006            PR$_SCBB       = 00000011            TT$M_MECHTAB   = 00000100            
IRP$S_FMOD     = 0000000A            PR$_SID        = 0000003E            TT$M_NOBRDCST  = 00020000            
IRP$S_MODE     = 00000002            PR$_SIRR       = 00000014            TT$M_NOECHO    = 00000002            
IRP$V_BUFIO    = 00000000            PR$_SISR       = 00000015            TT$M_NOTYPEAHD = 00000004            
IRP$V_CHAINED  = 00000005            PR$_SLR        = 0000000D            TT$M_ODD       = 00000080            
IRP$V_COMPLX   = 00000003            PR$_SSP        = 00000002            TT$M_PAGE      = FE000000            
IRP$V_DIAGBUF  = 00000007            PR$_TBIA       = 00000039            TT$M_PARITY    = 00000040            
IRP$V_FCODE    = 00000000            PR$_TBIS       = 0000003A            TT$M_PASSALL   = 00000001            
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  38
SYMBOL TABLE                                                                                                                    (29)

TT$M_READSYNC  = 00040000            TTY$C_BELL     = 00000007            TTY$M_A        = 00003FFF            
TT$M_REMOTE    = 00002000            TTY$C_BLANK    = 00000020            TTY$M_CH_CTRL  = 00000020            
TT$M_SCOPE     = 00001000            TTY$C_BS       = 00000008            TTY$M_CH_CTRL2 = 00000080            
TT$M_SCRIPT    = 00000040            TTY$C_CR       = 0000000D            TTY$M_CH_LOWER = 00000040            
TT$M_TTSYNC    = 00000020            TTY$C_CTRLC    = 00000003            TTY$M_CH_SPEC  = 00000010            
TT$M_WRAP      = 00000200            TTY$C_CTRLO    = 0000000F            TTY$M_ST_BADESC= 00100000            
TT$S_PAGE      = 00000008            TTY$C_CTRLQ    = 00000011            TTY$M_ST_BRDCST= 00000080            
TT$V_ALTRPAR   = 00000005            TTY$C_CTRLR    = 00000012            TTY$M_ST_CTRLO = 00001000            
TT$V_CRFILL    = 0000000A            TTY$C_CTRLS    = 00000013            TTY$M_ST_CTRLR = 00000400            
TT$V_EIGHTBIT  = 0000000F            TTY$C_CTRLU    = 00000015            TTY$M_ST_CTRLS = 00000004            
TT$V_ESCAPE    = 00000003            TTY$C_CTRLX    = 00000018            TTY$M_ST_CURSOR= 00000010            
TT$V_HOLDSCREEN= 0000000E            TTY$C_CTRLY    = 00000019            TTY$M_ST_DEL   = 00002000            
TT$V_HOSTSYNC  = 00000004            TTY$C_CTRLZ    = 0000001A            TTY$M_ST_EOL   = 00000200            
TT$V_LFFILL    = 0000000B            TTY$C_DELETE   = 0000007F            TTY$M_ST_ESC   = 00080000            
TT$V_LOWER     = 00000007            TTY$C_DOLLAR   = 00000024            TTY$M_ST_ESC_O = 04000000            
TT$V_MBXDSABL  = 00000010            TTY$C_DS_ACTIVE= 00000001            TTY$M_ST_FILL  = 00000008            
TT$V_MECHTAB   = 00000008            TTY$C_DS_ATTN1 = 00000002            TTY$M_ST_GETAHD= 01000000            
TT$V_NOBRDCST  = 00000011            TTY$C_DS_ATTN3 = 00000009            TTY$M_ST_MULTI = 00000040            
TT$V_NOECHO    = 00000001            TTY$C_DS_HANG  = 0000000A            TTY$M_ST_NL    = 00200000            
TT$V_NOTYPEAHD = 00000002            TTY$C_DS_IDLE  = 00000000            TTY$M_ST_NOECHO= 00008000            
TT$V_ODD       = 00000007            TTY$C_DS_RESET = 0000000B            TTY$M_ST_NOFLTR= 00040000            
TT$V_PAGE      = 00000019            TTY$C_ESCAPE   = 0000001B            TTY$M_ST_PASALL= 00004000            
TT$V_PARITY    = 00000006            TTY$C_FC_N_SET = 00000004            TTY$M_ST_PROMPT= 00020000            
TT$V_PASSALL   = 00000000            TTY$C_FC_READ  = 00000000            TTY$M_ST_READ  = 00000800            
TT$V_READSYNC  = 00000012            TTY$C_FC_SETC  = 00000003            TTY$M_ST_SENDLF= 00000020            
TT$V_REMOTE    = 0000000D            TTY$C_FC_SETM  = 00000002            TTY$M_ST_SKIPLF= 00800000            
TT$V_SCOPE     = 0000000C            TTY$C_FC_WRITE = 00000001            TTY$M_ST_TYPFUL= 00400000            
TT$V_SCRIPT    = 00000006            TTY$C_FF       = 0000000C            TTY$M_ST_UNSOL = 02000000            
TT$V_TTSYNC    = 00000005            TTY$C_HIGHIPL  = 00000016            TTY$M_ST_WRITE = 00000100            
TT$V_WRAP      = 00000009            TTY$C_LF       = 0000000A            TTY$M_ST_WRTALL= 00010000            
TT$_LA36       = 00000020            TTY$C_LOWA     = 00000061            TTY$M_ST_XOFF  = 00000002            
TT$_LAX        = 00000020            TTY$C_LOWZ     = 0000007B            TTY$M_ST_XON   = 00000001            
TT$_UNKNOWN    = 00000000            TTY$C_NL       = 00000080            TTY$Q_BD_LINK    00000000            
TT$_VT05       = 00000001            TTY$C_ONE      = 00000031            TTY$READONE      ********   X   03   
TT$_VT52       = 00000040            TTY$C_PLUS     = 0000002B            TTY$RESTARTIO    ********   X   03   
TT$_VT55       = 00000041            TTY$C_SCRIPT   = 00000060            TTY$STOP_BRDCST  000006F3 RG    03   
TT$_VT5X       = 00000040            TTY$C_TAB      = 00000009            TTY$STRT_BRDCST  000006D3 RG    03   
TTY$A_BACKSPACE  ********   X   03   TTY$C_TYPAHDSIZ= 0000004E            TTY$S_A        = 0000000E            
TTY$A_CTRLR      ********   X   03   TTY$C_VT       = 0000000B            TTY$V_A        = 00000000            
TTY$A_CTRLU      ********   X   03   TTY$C_XOFF     = 00000013            TTY$V_CH_CTRL  = 00000005            
TTY$A_CTRLZ      ********   X   03   TTY$C_XON      = 00000011            TTY$V_CH_CTRL2 = 00000007            
TTY$A_DELCRTTAB  ********   X   03   TTY$C_ZERO     = 00000030            TTY$V_CH_LOWER = 00000006            
TTY$A_ESCAPE     ********   X   03   TTY$GETNEXTCHAR  00000000 RG    03   TTY$V_CH_SPEC  = 00000004            
TTY$A_ESC_OUT    ********   X   03   TTY$L_BD_DATA    00000018            TTY$V_ST_BADESC= 00000014            
TTY$A_HLDSCREEN  ********   X   03   TTY$L_BD_FORK    0000000C            TTY$V_ST_BRDCST= 00000007            
TTY$A_LONGFORM   ********   X   03   TTY$L_BD_MIN     00000028            TTY$V_ST_CTRLO = 0000000C            
TTY$A_RLSCREEN   ********   X   03   TTY$L_BD_UCB     00000010            TTY$V_ST_CTRLR = 0000000A            
TTY$A_SCRIPT     ********   X   03   TTY$L_RB_DATA    00000010            TTY$V_ST_CTRLS = 00000002            
TTY$A_TAB        ********   X   03   TTY$L_RB_NXT     00000000            TTY$V_ST_CURSOR= 00000004            
TTY$A_TYPE       ********   X   03   TTY$L_RB_UVA     00000004            TTY$V_ST_DEL   = 0000000D            
TTY$A_VTAB       ********   X   03   TTY$L_TA_DATA    00000010            TTY$V_ST_EOL   = 00000009            
TTY$B_BD_CNT     00000015            TTY$L_TA_END     0000000C            TTY$V_ST_ESC   = 00000013            
TTY$B_BD_IPL     00000017            TTY$L_TA_GET     00000004            TTY$V_ST_ESC_O = 0000001A            
TTY$B_BD_REFC    00000016            TTY$L_TA_PUT     00000000            TTY$V_ST_FILL  = 00000003            
TTY$B_BD_TYPE    0000000A            TTY$L_WB_DATA    0000000C            TTY$V_ST_GETAHD= 00000018            
TTY$B_BD_WHO     00000014            TTY$L_WB_END     00000004            TTY$V_ST_MULTI = 00000006            
TTY$B_TA_TYPE    0000000A            TTY$L_WB_NXT     00000000            TTY$V_ST_NL    = 00000015            
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  39
SYMBOL TABLE                                                                                                                    (29)

TTY$V_ST_NOECHO= 0000000F            UCB$C_LENGTH     00000074            UCB$M_ERLOGIP  = 00000004            
TTY$V_ST_NOFLTR= 00000012            UCB$C_LOGLNK   = 00000001            UCB$M_INT      = 00000002            
TTY$V_ST_PASALL= 0000000E            UCB$K_LENGTH     00000074            UCB$M_INTTYPE  = 00000080            
TTY$V_ST_PROMPT= 00000011            UCB$L_AMB        00000054            UCB$M_JOB      = 00000001            
TTY$V_ST_READ  = 0000000B            UCB$L_ASTQBL     00000010            UCB$M_MOUNTING = 00000200            
TTY$V_ST_SENDLF= 00000005            UCB$L_ASTQFL     0000000C            UCB$M_NOCNVRT  = 00000004            
TTY$V_ST_SKIPLF= 00000017            UCB$L_CPID       0000005C            UCB$M_NT_BFROVF= 00000004            
TTY$V_ST_TYPFUL= 00000016            UCB$L_CRB        00000020            UCB$M_NT_BREAK = 00000020            
TTY$V_ST_UNSOL = 00000019            UCB$L_DDB        00000024            UCB$M_NT_NAME  = 00000010            
TTY$V_ST_WRITE = 00000008            UCB$L_DEVCHAR    00000034            UCB$M_ONLINE   = 00000010            
TTY$V_ST_WRTALL= 00000010            UCB$L_DEVDEPEND  0000003C            UCB$M_POWER    = 00000020            
TTY$V_ST_XOFF  = 00000001            UCB$L_DPC        00000080            UCB$M_PRMMBX   = 00000001            
TTY$V_ST_XON   = 00000000            UCB$L_DUETIM     0000005C            UCB$M_TIM      = 00000001            
TTY$WRITEDONE    ********   X   03   UCB$L_DX_BFPNT   0000009C            UCB$M_TIMOUT   = 00000040            
TTY$W_BD_SIZE    00000008            UCB$L_DX_BUF     00000098            UCB$M_TT_NOTIF = 00000004            
TTY$W_RB_ORGHOR  0000000C            UCB$L_DX_RXDB    000000A0            UCB$M_TT_ODD   = 00000080            
TTY$W_RB_SIZE    00000008            UCB$L_EMB        00000078            UCB$M_TT_PARTY = 00000040            
TTY$W_RB_TIMOS   0000000E            UCB$L_FIRST      00000014            UCB$M_TT_SPEED = 0000003F            
TTY$W_TA_SIZE    00000008            UCB$L_FPC        0000000C            UCB$M_TT_TIMO  = 00000002            
TTY$W_WB_SIZE    00000008            UCB$L_FQBL       00000004            UCB$M_UNLOAD   = 00001000            
UCB$B_AMOD       00000053            UCB$L_FQFL       00000000            UCB$M_VALID    = 00000800            
UCB$B_CEX        00000077            UCB$L_FR3        00000010            UCB$S_LNKPRI   = 00000002            
UCB$B_CM1        0000004A            UCB$L_FR4        00000014            UCB$S_LTYPE    = 00000002            
UCB$B_CM2        0000004B            UCB$L_IOQBL      00000044            UCB$S_TT_ODD   = 00000001            
UCB$B_DEVCLASS   00000038            UCB$L_IOQFL      00000040            UCB$S_TT_PARTY = 00000001            
UCB$B_DEVTYPE    00000039            UCB$L_IRP        0000004C            UCB$S_TT_SPEED = 00000006            
UCB$B_DIPL       00000052            UCB$L_LINK       0000002C            UCB$T_PARTNER    0000000C            
UCB$B_DX_SCTCNT  000000A6            UCB$L_LOGADR     00000064            UCB$V_BACKP    = 00000005            
UCB$B_ERTCNT     00000070            UCB$L_MAXBLOCK   00000084            UCB$V_BSY      = 00000008            
UCB$B_ERTMAX     00000071            UCB$L_MEDIA      0000008C            UCB$V_CANCEL   = 00000003            
UCB$B_ESCAPE     0000004B            UCB$L_NT_DATSSB  00000074            UCB$V_DEADMO   = 0000000A            
UCB$B_FEX        00000076            UCB$L_NT_INTSSB  00000078            UCB$V_DELMBX   = 00000001            
UCB$B_FIPL       0000000B            UCB$L_OPCNT      00000060            UCB$V_DIAGBUF  = 00000001            
UCB$B_LOCSRV     0000003C            UCB$L_OWNUIC     0000001C            UCB$V_DX_WRITE = 00000003            
UCB$B_OFFNDX     00000094            UCB$L_PID        00000028            UCB$V_ECC      = 00000000            
UCB$B_OFFRTC     00000095            UCB$L_RQBL       00000004            UCB$V_ERLOGIP  = 00000002            
UCB$B_REMSRV     0000003D            UCB$L_RQFL       00000000            UCB$V_INT      = 00000001            
UCB$B_SECTORS    0000003C            UCB$L_SVAPTE     00000068            UCB$V_INTTYPE  = 00000007            
UCB$B_SLAVE      00000074            UCB$L_SVPN       00000064            UCB$V_JOB      = 00000000            
UCB$B_SPR        00000075            UCB$L_TTCHAR     0000003C            UCB$V_LNKPRI   = 00000006            
UCB$B_STATE      00000052            UCB$L_TT_BRDCST  00000084            UCB$V_LTYPE    = 00000000            
UCB$B_TRACKS     0000003D            UCB$L_TT_CTRLC   00000080            UCB$V_MOUNTING = 00000009            
UCB$B_TT_BRDPT   00000098            UCB$L_TT_CTRLY   0000007C            UCB$V_MSGACK   = 00000004            
UCB$B_TT_CRFILL  0000009D            UCB$L_TT_DECHAR  000000A8            UCB$V_MSGFLO   = 00000003            
UCB$B_TT_DECRF   000000A1            UCB$L_TT_MULTI   00000078            UCB$V_NOCNVRT  = 00000002            
UCB$B_TT_DELFF   000000A2            UCB$L_TT_RDUE    0000008C            UCB$V_NT_BFROVF= 00000002            
UCB$B_TT_DESPEE  000000A0            UCB$L_TT_STATE   00000074            UCB$V_NT_BREAK = 00000005            
UCB$B_TT_DETYPE  000000A4            UCB$L_TT_TYPAHD  00000088            UCB$V_NT_NAME  = 00000004            
UCB$B_TT_DIAL    00000096            UCB$L_VCB        00000030            UCB$V_ONLINE   = 00000004            
UCB$B_TT_ESC     00000095            UCB$M_BACKP    = 00000020            UCB$V_POWER    = 00000005            
UCB$B_TT_ESC_O   00000099            UCB$M_BSY      = 00000100            UCB$V_PRMMBX   = 00000000            
UCB$B_TT_FILL    00000097            UCB$M_CANCEL   = 00000008            UCB$V_SEGFLO   = 00000002            
UCB$B_TT_LFFILL  0000009E            UCB$M_DEADMO   = 00000400            UCB$V_TIM      = 00000000            
UCB$B_TT_LINE    00000094            UCB$M_DELMBX   = 00000002            UCB$V_TIMOUT   = 00000006            
UCB$B_TT_SPEED   0000009C            UCB$M_DIAGBUF  = 00000002            UCB$V_TT_NOTIF = 00000002            
UCB$B_TYPE       0000000A            UCB$M_DX_WRITE = 00000008            UCB$V_TT_ODD   = 00000007            
UCB$B_VERTSZ     0000003F            UCB$M_ECC      = 00000001            UCB$V_TT_PARTY = 00000006            
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  40
SYMBOL TABLE                                                                                                                    (29)

UCB$V_TT_SPEED = 00000000            VEC$W_MAPREG     00000010            
UCB$V_TT_TIMO  = 00000001            VTAB             00000540 R     03   
UCB$V_UNLOAD   = 0000000C            W              = 00000080            
UCB$V_VALID    = 0000000B            WRITING          00000036 R     03   
UCB$W_BCNT       0000006E            X              = 00000000            
UCB$W_BCR        00000096            XOFF             000001FF R     03   
UCB$W_BOFF       0000006C            XON              00000218 R     03   
UCB$W_BUFQUO     00000018            Z              = 00000000            
UCB$W_BYTESTOGO  0000003E            
UCB$W_CHARGE     0000004A            
UCB$W_CYLINDERS  0000003E            
UCB$W_DA         0000008C            
UCB$W_DC         0000008E            
UCB$W_DEVBUFSIZ  0000003A            
UCB$W_DEVSTS     0000005A            
UCB$W_DIRSEQ     00000088            
UCB$W_DSTADDR    00000018            
UCB$W_DX_BCR     000000A4            
UCB$W_EC1        00000090            
UCB$W_EC2        00000092            
UCB$W_ERRCNT     00000072            
UCB$W_FUNC       0000007E            
UCB$W_MB_SEED    FFFFFFFC            
UCB$W_MSGCNT     00000016            
UCB$W_MSGMAX     00000014            
UCB$W_NT_CHAN    0000007C            
UCB$W_OFFSET     0000008A            
UCB$W_REFC       00000050            
UCB$W_SIZE       00000008            
UCB$W_SRCADDR    0000001A            
UCB$W_STS        00000058            
UCB$W_TT_CURSOR  0000009A            
UCB$W_TT_DESIZE  000000A5            
UCB$W_TT_HOLD    00000090            
UCB$W_TT_INAHD   00000092            
UCB$W_UNIT       00000048            
UCB$W_VPROT      0000001A            
UPCURSOR         0000038E R     03   
VEC$B_DATAPATH   00000013            
VEC$B_NUMREG     00000012            
VEC$C_LENGTH     00000024            
VEC$K_LENGTH     00000024            
VEC$L_ADP        00000014            
VEC$L_IDB        00000008            
VEC$L_INITIAL    0000000C            
VEC$L_START      0000001C            
VEC$L_UNITDISC   00000020            
VEC$L_UNITINIT   00000018            
VEC$M_MAPLOCK  = 00008000            
VEC$M_PATHLOCK = 00000080            
VEC$Q_DISPATCH   00000000            
VEC$S_DATAPATH = 00000007            
VEC$S_MAPREG   = 0000000F            
VEC$V_DATAPATH = 00000000            
VEC$V_MAPLOCK  = 0000000F            
VEC$V_MAPREG   = 00000000            
VEC$V_PATHLOCK = 00000007            
TTYCHARO        - TERMINAL DRIVER CHARACTER OUTPUT ROUTINES      21-AUG-1978 21:04:20   VAX-11 MACRO X0.3-11               Page  41
PROGRAM SECTION SYNOPSIS                                                                                                        (29)



PROGRAM SECTION SYNOPSIS

.  ABS  .        00000000      00     NOPIC   USR   CON   ABS   LCL NOSHR NOEXE NORD  NOWRT BYTE  
. BLANK .        00000000      01     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT BYTE  
$ABS$            FFFFFFFE      02     NOPIC   USR   CON   ABS   LCL NOSHR   EXE   RD    WRT BYTE  
$$$115_DRIVER    0000072A      03     NOPIC   USR   CON   REL   LCL NOSHR   EXE   RD    WRT LONG  


THERE WERE NO ERRORS OR WARNINGS.
6318. BYTES LEFT IN FREE MEMORY POOL.
470. BYTES OF RECLAIMED MEMORY.
OBJ$:TTYCHARO,LIS$:TTYCHARO/-SP=EXECML$/ML,SRC$:TTYCHARO
13 MLB DIR RDS - 1054 GETS TO DEFINE 26 MACROS. 111 INTER. FILE WRITES. 
