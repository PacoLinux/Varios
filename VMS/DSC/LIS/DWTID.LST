DWTID	X0006 - WRITE INDEX FIL	MACRO M1110  21-AUG-78 20:46  PAGE 3


      1	000000					$BEGIN	DWTID,0006,<WRITE INDEX FILE DATA>
						.TITLE	DWTID	X0006 - WRITE INDEX FILE DATA
						.IDENT	"X0006"
      2
      3					;
      4					; COPYRIGHT (C) 1976 BY DIGITAL EQUIPMENT CORPORATION,
      5					; MAYNARD, MASSACHUSETTS
      6					;
      7					; THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ONLY ON A
      8					; SINGLE  COMPUTER  SYSTEM AND MAY BE COPIED ONLY WITH THE IN-
      9					; CLUSION OF THE ABOVE COPYRIGHT NOTICE.   THIS  SOFTWARE,  OR
     10					; ANY  OTHER  COPIES THEREOF, MAY NOT BE PROVIDED OR OTHERWISE
     11					; MADE AVAILABLE TO ANY OTHER PERSON EXCEPT FOR  USE  ON  SUCH
     12					; SYSTEM  AND TO ONE WHO AGREES TO THESE LICENSE TERMS.  TITLE
     13					; TO AND OWNERSHIP OF THE SOFTWARE SHALL AT ALL  TIMES  REMAIN
     14					; IN DIGITAL.
     15					;
     16					; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITH-
     17					; OUT  NOTICE  AND  SHOULD NOT BE CONSTRUED AS A COMMITMENT BY
     18					; DIGITAL EQUIPMENT CORPORATION.
     19					;
     20					; DIGITAL EQUIPMENT CORPORATION ASSUMES NO RESPONSIBILITY  FOR
     21					; THE USE OR RELIABILITY OF ITS SOFTWARE ON EQUIPMENT WHICH IS
     22					; NOT SUPPLIED BY DIGITAL.
     23					;
     24					; ANDREW C. GOLDSTEIN  3-AUG-78  16:34
     25
     26						.MCALL	FHDL2$,HMBL2$
     27	000000					FHDL2$				; DEFINE FILE HEADER OFFSETS
     28	000000					HMBL2$				; DEFINE HOME BLOCK OFFSETS
DWTID	X0006 - WRITE INDEX FIL	MACRO M1110  21-AUG-78 20:46  PAGE 4


     30					;+
     31					;
     32					; *** - $DWTID	WRITE INDEX FILE DATA
     33					;
     34					; THIS ROUTINE WRITES THE INITIAL DATA INTO THE INDEX FILE. ON ITS
     35					; FIRST CALL, IT COPIES THE BOOT AND HOME BLOCKS INTO THE INDEX FILE.
     36					; ON SUBSEQUENT CALLS, IT CREATES DELETED FILE HEADERS FOR THE LISTED
     37					; FILE ID'S.
     38					;
     39					; INPUTS:
     40					;
     41					;	INDEX FILE DATA IN $BUF2
     42					;	OUTPUT LUN ASSIGNED TO DISK
     43					;	$OUDEV POINTS TO DEVICE TABLE ENTRY
     44					;
     45					; OUTPUTS:
     46					;
     47					;	INDEX FILE DATA WRITTEN
     48					;	R2,R3 PRESERVED, OTHER REGISTERS CLOBBERED
     49					;-
     50
     51	000000				$DWTID::
     52	000000					PUSH R2,R3			; SAVE "VBN"
     53	000004					IF R2 EQ #0 AND R3 EQ #1	; IF FIRST CALL
     54					;
     55					; $BUF2 CONTAINS THE BOOT BLOCK AND THE HOME BLOCK IN THAT ORDER.
     56					;
     57	000016					  LET $BOLBN := $B2DAT+6	; SAVE BOOT FILE LBN
     58	000024					  LET $BOLBN+2 := $B2DAT+4
     59	000032					  LET B.SIZ+P.CNT(R4) := #512.	; SET COUNT TO 1 BLOCK
     60	000040					  $CALL $DWTDA <,,,,#$B2HD>	; WRITE BOOT BLOCK
     61	000050					  $CALL $BUFCK <,,,,#$B2HD>	; WAIT FOR TRANSFER COMPLETION.
     62					;
     63					; COPY THE HOME BLOCK TO THE BEGINNING OF THE BUFFER
     64					;
     65	000060					  LET R1 := #$BUF2
     66	000064					  LET R2 := #$B2DAT+512.
     67	000070					  THRU R0 := #256.
     68	000074					    LET (R1)+ := (R2)+
     69	000076					  END LOOP
     70	000102					  LET R0 := $OUDEV		; GET DEVICE TABLE ENTRY
     71	000106					  LET R5 := #$BUF2
     72	000112					  LET H.HBVB(R5) := #2		; FIRST HOME BLOCK VBN
     73	000120					  LET H.AHLB(R5) := $HM2LB	; SET ALTERNATE HOME BLOCK LBN.
     74	000126					  LET H.AHLB+2(R5) := $HM2LB+2
     75	000134					  LET H.IHLB(R5) := $IXHD2+4	; SET BACKUP IDX HDR LBN.
     76	000142					  LET H.IHLB+2(R5) := $IXHD2+6
     77	000150					  LET R1 := V.CLF(R0)		; GET CLUSTER FACTOR
     78	000154	006301 				  ASL R1			; *2
     79	000156					  LET R1 := R1 + #1 + $HM2LB - $HOME2+4	; COMPUTE ALT HOME BLOCK VBN
     80	000170					  LET H.AHVB(R5) := R1		; AND STORE IN HOME BLOCK
     81	000174					  LET H.IBLB(R5) := V.IBLB(R0)	; SET UP NEW INDEX FILE LBN.
     82	000202					  LET H.IBLB+2(R5) := V.IBLB+2(R0)
     83					;
     84					; FILL OUT THE BOOT BLOCK CLUSTER WITH HOME BLOCKS.
     85					;
     86	000210					  LET R0 := $OUDEV
DWTID	X0006 - WRITE INDEX FIL	MACRO M1110  21-AUG-78 20:46  PAGE 4-1


     87	000214					  LET R1 := V.CLF(R0) - #1	; CLUSTER SIZE MINUS BOOT BLOCK
     88	000222					  IF RESULT IS GT
     89	000224					    LET H.HBLB(R5) := $BOOTB+4 + #01 ; INIT BLOCK LBN
     90	000240					    LET H.HBLB+2(R5) := $BOOTB+6 + CARRY
     91	000252					    THRU R1
     92	000252					      $CALL WHMBLK		; WRITE ONE HOME BLOCK.
     93	000256					    END
     94	000262					  END
     95					;
     96					; WRITE THE HOME BLOCK CLUSTER, WHICH COULD BE EITHER THE REAL ONE OR
     97					; DUMMIES.
     98					;
     99	000262					  LET H.HBLB(R5) := $HOME1+4
    100	000270					  LET H.HBLB+2(R5) := $HOME1+6
    101	000276					  LET R0 := $OUDEV
    102	000302					  LET R1 := V.CLF(R0)
    103	000306					  THRU R1
    104	000306					    $CALL WHMBLK		; WRITE ONE HOME BLOCK.
    105	000312					  END
    106					;
    107					; FILL OUT THE BACKUP HOME BLOCK CLUSTER.
    108					;
    109	000316					  LET H.HBLB(R5) := $HOME2+4	; SET LBN FROM ALLOC TABLE.
    110	000324					  LET H.HBLB+2(R5) := $HOME2+6
    111	000332					  LET R0 := $OUDEV
    112	000336					  LET R1 := V.CLF(R0)
    113	000342					  THRU R1
    114	000342					    $CALL WHMBLK		; WRITE ONE HOME BLOCK.
    115	000346					  END
    116					;
    117					; NOW INITIALIZE THE INDEX FILE BITMAP
    118					;
    119	000352					  $CALL INIXBM			; INIT INDEX FILE BITMAP.
    120	000356					  POP R3,R2
    121	000362					  RETURN NOERROR
    122	000366					END
DWTID	X0006 - WRITE INDEX FIL	MACRO M1110  21-AUG-78 20:46  PAGE 5


    124					;
    125					; TO HERE FOR SUBSEQUENT CALLS. $BUF2 CONTAINS A LIST OF INACTIVE
    126					; FILE HEADERS WITH THEIR FILE SEQUENCE NUMBERS. FOR EACH ONE,
    127					; CONSTRUCT A DELETED FILE HEADER AND WRITE IT.
    128					;
    129	000366					$CALL $BUFCK <,,,,#$B1HD>	; USE BUF1
    130	000376					LET B.STAT(R4) := #1		; MARK BUSY
    131	000404					LET R0 := #$BUF1
    132	000410					LET R5 := R0
    133	000412					LET R1 := #$OXBF		; POINT TO INDEX FILE HEADER
    134	000416					THRU R2 := #256.		; AS A PROTOTYPE HEADER
    135	000422					  LET (R0)+ := (R1)+		; COPY IT IN
    136	000424					END LOOP
    137	000430					LET R0 := #$B2DAT		; POINT TO DATA
    138	000434					REPEAT				; LOOP FOR ALL ENTRIES
    139	000434					  LET H.FNUM(R5) := (R0)+	; GET FILE NUMBER
    140	000440					  IF RESULT IS EQ LEAVE LOOP	; ZERO MEANS NO MORE
    141	000442	005720 				  TST (R0)+			; 2ND WORD IS DUMMY
    142	000444					  LET H.FSEQ(R5) := (R0)+	; GET FILE SEQ NUMBER
    143	000450					  PUSH R0			; SAVE POINTER
    144	000452					  $CALL $DLHDR <,,,,R4,R5>	; WRITE DELETED HEADER
    145	000456					  POP R0
    146	000460					UNTIL R0 HI #$B2DAT+2048.-6
    147	000466					LET $B1HD+B.STAT := #0		; RELEASE THE BUFFERS
    148	000472					LET $B2HD+B.STAT := #0
    149	000476					POP R3,R2
    150	000502					RETURN
    151
    152
DWTID	X0006 - WRITE INDEX FIL	MACRO M1110  21-AUG-78 20:46  PAGE 6


    154					;
    155					; SUBROUTINE TO WRITE ONE HOME BLOCK.
    156					;
    157	000504				WHMBLK:
    158	000504					PUSH  	R1
    159	000506					$CALL	$CKSM1  <,#H.CHK1/2,,,,R5>  ; COMPUTE NEW CHECKSUMS.
    160	000516					$CALL	$CKSUM  <,,,,,R5>
    161	000522					$CALL	$WRI1B  <,,H.HBLB+2(R5),H.HBLB(R5),#$B2HD>
    162	000542					$CALL	$BUFCK	<,,,,R4>
    163	000546	005265 	000020 			INC	H.HBVB(R5)		; INC VBN IN HOME BLOCK.
    164	000552	062765 	000001 	000000 		ADD	#1,H.HBLB(R5)		; INC LBN IN HOME BLOCK.
    165	000560	005565 	000002 			ADC	H.HBLB+2(R5)
    166	000564					POP  	R1
    167	000566					RETURN
    168					;
    169					; SUBROUTINE TO INITIALIZE THE INDEX FILE BITMAP.
    170					;
    171	000570				INIXBM:
    172	000570					LET R0 := #$BUF2
    173	000574					THRU R1 := #256.
    174	000600					  LET (R0)+ := #0		; ZERO OUT THE BUFFER
    175	000602					END LOOP
    176	000606					LET R0 := $OUDEV
    177	000612					LET R3 := V.IBLB(R0)		; GET INDEX BITMAP LBN
    178	000616					LET R2 := V.IBLB+2(R0)
    179	000622					PUSH V.IBSZ(R0)			; GET BLOCK COUNT
    180	000626					LET $BUF2 := #7			; TURN ON BITS FOR FIRST 3 FILES
    181	000634					FOR (SP) := (SP) DOWNTO #0
    182	000634					  $CALL $WRI1B <,,R2,R3,#$B2HD> ; WRITE THE BLOCK
    183	000644					  $CALL $WAITO <,,,,R4>
    184	000650					  ON.ERROR THEN ERROR ER.WXB
    185	000654					  LET R3 := R3 + #01		; BUMP LBN
    186	000660					  LET R2 := R2 + CARRY
    187	000662					  LET $BUF2 := #0		; CLEAR FIRST WORD FOR NEXT TIME
    188	000666					END LOOP
    189	000676	005726 				TST (SP)+			; CLEAN THE STACK
    190	000700					LET $B2HD+B.STAT := #0		; RELEASE THE BUFFER
    191	000704					RETURN
    192
    193		000001 				.END
DWTID	X0006 - WRITE INDEX FIL	MACRO M1110  21-AUG-78 20:46  PAGE 6-1
SYMBOL TABLE

A3    = 000001   	H.DVTY= 000044   	H.RSOF= 000003   	L3      000654R  	$EF$  = 000000
B.SIZ = ****** GX	H.EFNU= 000016   	H.RSVF= 000042   	P.CNT = ****** GX	$E$   = 000001
B.STAT= ****** GX	H.EFSQ= 000020   	H.RVN = 000046   	SC.BAD= 000100   	$HM2LB= ****** GX
B0      000074R  	H.ERVN= 000022   	H.SBCL= 000016   	SC.DIR= 000040   	$HOME1= ****** GX
B1      000252R  	H.FCHA= 000064   	H.SCHA= 000065   	SC.MDL= 000200   	$HOME2= ****** GX
B2      000306R  	H.FIEX= 000106   	H.SEMK= 000104   	S.HDHD= 000114   	$IXHD2= ****** GX
B3      000342R  	H.FLEV= 000006   	H.SMMX= 000110   	S.IDHD= 000202   	$I$   = 000001
B4      000422R  	H.FMAX= 000034   	H.SNAM= 000714   	S.MPHD= 000000   	$K$   = 000005
B5      000434R  	H.FNUM= 000010   	H.UCHA= 000064   	TYPS0 = 000002   	$K$L  = 000005
B6      000600R  	H.FOWN= 000074   	H.UFAT= 000024   	TYPS1 = 000000   	$K$T  = 000005
B7      000634R  	H.FPRO= 000100   	H.USE = 000072   	TYPS2 = 000006   	$L    = 000010
ER.WXB= ****** GX	H.FRVN= 000014   	H.VCHA= 000052   	UC.CON= 000200   	$L$   = 000000
E0      000102R  	H.FSEG= 000004   	H.VDAT= 000074   	UC.DLK= 000100   	$OUDEV= ****** GX
E1      000262R  	H.FSEQ= 000012   	H.VLEV= 000014   	V.CLF = ****** GX	$OXBF = ****** GX
E2      000316R  	H.HBLB= 000000   	H.VOWN= 000054   	V.IBLB= ****** GX	$O$   = 000000
E3      000352R  	H.HBVB= 000020   	H.VPRO= 000064   	V.IBSZ= ****** GX	$R    = 177777
E4      000430R  	H.IBLB= 000030   	H.VSMX= 000060   	WHMBLK  000504R  	$SUPMC= 000043
E5      000466R  	H.IBSZ= 000040   	H.WISZ= 000104   	$BOLBN= ****** GX	$T    = 000004
E6      000606R  	H.IBVB= 000026   	IIII  = 177777   	$BOOTB= ****** GX	$T1   = 000002
E7      000676R  	H.IDOF= 000000   	INIXBM  000570R  	$BUFCK= ****** GX	$T2   = 000007
FP.DEL= 000010   	H.IHLB= 000010   	I.BKDT= 000052   	$BUF1 = ****** GX	$WAITO= ****** GX
FP.EXE= 000004   	H.IHVB= 000024   	I.CRDT= 000022   	$BUF2 = ****** GX	$WRI1B= ****** GX
FP.RDV= 000001   	H.INDF= 000760   	I.EXDT= 000042   	$B1HD = ****** GX	$XXX$ = 000001
FP.WRV= 000002   	H.INDN= 000730   	I.FNAM= 000000   	$B2DAT= ****** GX	$Y$   = 000007
H.ACOF= 000002   	H.INDO= 000744   	I.RVDT= 000032   	$B2HD = ****** GX	$Z$   = 000000
H.AHLB= 000004   	H.LRUC= 000105   	I.RVNO= 000020   	$CKSM1= ****** GX	$$S   = 000000
H.AHVB= 000022   	H.MPOF= 000001   	I.ULAB= 000062   	$CKSUM= ****** GX	$$T   = 000003
H.CHK1= 000072   	H.NVOL= 000050   	LBLS0 = 000007   	$DIDDO= 000000   	$$TT  = 000002
H.CHK2= 000776   	H.PRIV= 000073   	LBLS1 = 000003   	$DLHDR= ****** GX	.$T   = 000005
H.CKSM= 000776   	H.PROG= 000074   	LBLS2 = 000001   	$DWTDA= ****** GX	...GBL= 000000
H.DFPR= 000066   	H.PROJ= 000076   	L0      000366R  	$DWTID  000000RG 	...TPC= 001000
H.DRPR= 000070   	H.RPRO= 000102   	L1      000262R

. ABS.	000000	   000
      	000706	   001
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  13310 WORDS  ( 52 PAGES)
DYNAMIC MEMORY:  14388 WORDS  ( 55 PAGES)
ELAPSED TIME:  00:02:23
EXE$:DWTID,LIS$:DWTID/-SP=SRC$:SMAC/PA:1,DSCPRE,DWTID
