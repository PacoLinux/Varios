SWDSK	X0006 - SWITCH DISK UNI	MACRO M1110  21-AUG-78 20:56  PAGE 3


      1	000000					$BEGIN	SWDSK,0006,<SWITCH DISK UNIT>
						.TITLE	SWDSK	X0006 - SWITCH DISK UNIT
						.IDENT	"X0006"
      2
      3					;
      4					; COPYRIGHT (C) 1976 BY DIGITAL EQUIPMENT CORPORATION,
      5					; MAYNARD, MASSACHUSETTS
      6					;
      7					; THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ONLY ON A
      8					; SINGLE  COMPUTER  SYSTEM AND MAY BE COPIED ONLY WITH THE IN-
      9					; CLUSION OF THE ABOVE COPYRIGHT NOTICE.   THIS  SOFTWARE,  OR
     10					; ANY  OTHER  COPIES THEREOF, MAY NOT BE PROVIDED OR OTHERWISE
     11					; MADE AVAILABLE TO ANY OTHER PERSON EXCEPT FOR  USE  ON  SUCH
     12					; SYSTEM  AND TO ONE WHO AGREES TO THESE LICENSE TERMS.  TITLE
     13					; TO AND OWNERSHIP OF THE SOFTWARE SHALL AT ALL  TIMES  REMAIN
     14					; IN DIGITAL.
     15					;
     16					; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITH-
     17					; OUT  NOTICE  AND  SHOULD NOT BE CONSTRUED AS A COMMITMENT BY
     18					; DIGITAL EQUIPMENT CORPORATION.
     19					;
     20					; DIGITAL EQUIPMENT CORPORATION ASSUMES NO RESPONSIBILITY  FOR
     21					; THE USE OR RELIABILITY OF ITS SOFTWARE ON EQUIPMENT WHICH IS
     22					; NOT SUPPLIED BY DIGITAL.
     23					;
     24					; ANDREW C. GOLDSTEIN  1-NOV-76  23:17
     25
     26
     27						.MCALL	ALUN$S
SWDSK	X0006 - SWITCH DISK UNI	MACRO M1110  21-AUG-78 20:56  PAGE 4


     29					;+
     30					;
     31					; *** - $SWID	SWITCH INPUT DISK UNIT
     32					;
     33					; THIS ROUTINE SWITCHES THE INPUT LUN TO THE DISK UNIT IN
     34					; THE UNIT TABLE THAT HAS THE CORRECT RVN.
     35					;
     36					; INPUTS:
     37					;
     38					;	R1 = RVN
     39					;
     40					; OUTPUTS:
     41					;
     42					;	CC - C	CLEAR IF NO ERRORS
     43					;		SET IF RVN NOT FOUND
     44					;	INLUN ASSIGNED TO INPUT UNIT
     45					;	$INDEV POINTS TO NEW INPUT DEVICE TABLE ENTRY
     46					;	R0,R1 CLOBBERED, OTHER REGISTERS PRESERVED
     47					;
     48					; *** - $SWOD	SWITCH OUTPUT DISK UNIT
     49					;
     50					; THIS ROUTINE SWITCHES THE OUTPUT LUN TO THE DISK UNIT IN
     51					; THE UNIT TABLE THAT HAS THE CORRECT RVN.
     52					;
     53					; INPUTS:
     54					;
     55					;	R1 = RVN
     56					;
     57					; OUTPUTS:
     58					;
     59					;	CC - C	CLEAR IF NO ERRORS
     60					;		SET IF RVN NOT FOUND
     61					;	OUTLUN ASSIGNED TO OUTPUT UNIT
     62					;	$OUDEV POINTS TO NEW OUTPUT DEVICE TABLE ENTRY
     63					;	R0,R1 CLOBBERED, OTHER REGISTERS PRESERVED
     64					;
     65					; *** - $SWID1	SWITCH INPUT DISK UNIT
     66					;
     67					; THIS ROUTINE SWITCHES THE INPUT LUN TO THE DISK UNIT IN
     68					; THE INDICATED UNIT TABLE ENTRY.
     69					;
     70					; INPUTS:
     71					;
     72					;	R0 = UNIT TABLE ADDRESS
     73					;
     74					; OUTPUTS:
     75					;
     76					;	INLUN ASSIGNED TO INPUT UNIT
     77					;	$INDEV POINTS TO NEW INPUT DEVICE TABLE ENTRY
     78					;	R0,R1 CLOBBERED, OTHER REGISTERS PRESERVED
     79					;
     80					; *** - $SWOD1	SWITCH OUTPUT DISK UNIT
     81					;
     82					; THIS ROUTINE SWITCHES THE OUTPUT LUN TO THE DISK UNIT IN
     83					; THE INDICATED UNIT TABLE ENTRY.
     84					;
     85					; INPUTS:
SWDSK	X0006 - SWITCH DISK UNI	MACRO M1110  21-AUG-78 20:56  PAGE 4-1


     86					;
     87					;	R0 = UNIT TABLE ADDRESS
     88					;
     89					; OUTPUTS:
     90					;
     91					;	OUTLUN ASSIGNED TO OUTPUT UNIT
     92					;	$OUDEV POINTS TO NEW OUTPUT DEVICE TABLE ENTRY
     93					;	R0,R1 CLOBBERED, OTHER REGISTERS PRESERVED
     94					;
     95					;-
     96
     97	000000				$SWID1::
     98	000000					LET R1 := #$ALUNI		; SET UP FOR INPUT
     99	000004					GOTO SWIDC1
    100
    101	000006				$SWOD1::
    102	000006					LET R1 := #$ALUNO		; SET UP FOR OUTPUT
    103	000012					GOTO SWIDC1
    104
    105	000014				$SWID::
    106	000014					LET R0 := #$IVTAB		; POINT TO INPUT DEVICE TABLE
    107	000020					PUSH #$ALUNI
    108	000024					GOTO SWIDC
    109
    110	000026				$SWOD::
    111	000026					LET R0 := #$OVTAB		; POINT TO OUTPUT DEVICE TABLE
    112	000032					PUSH #$ALUNO
    113					;
    114					; SEARCH THE APPROPRIATE TABLE FOR THE RVN
    115					;
    116	000036				SWIDC:	IF R1 EQ #0			; 0 RVN MEANS SAME UNIT
    117	000042	005726 				  TST (SP)+			; CLEAN STACK
    118	000044					  RETURN
    119	000046					END
    120	000046					BEGIN SEARCH
    121	000046					  PUSH R2
    122	000050					  THRU R2 := #V.LENG
    123	000054					    IF V.RVN(R0) EQ R1 LEAVE SEARCH
    124	000062					    LET R0 := R0 + #V.SIZ	; TRY NEXT ENTRY
    125	000066					  END LOOP
    126	000072					  LET R0 := R1			; RVN FOR ERROR MESSAGE
    127	000074					  ERROR ER.RVN			; RVN NOT FOUND
    128	000076					END SEARCH
    129	000076					POP R2,R1
    130					;
    131					; FOUND THE RIGHT RVN - ASSIGN IT
    132					;
    133	000102				SWIDC1:	$CALL $SAVAL
    134	000106					$CALL (R1)			; ASSIGN THE APPROPRIATE LUN
    135	000110					ON.ERROR			; IF WE SWITCHED DEVICES
    136	000112					  LET R3 := V.IBLB(R0) + V.IBSZ(R0) ; COMPUTE INDEX FILE
    137	000122					  LET R2 := V.IBLB+2(R0) + CARRY ; HEADER LBN
    138	000130					  LET R0 := R1			; GET LUN IN R0
    139	000132					  LET B.STAT(R4) := #0		; DISCARD OLD INDEX FILE HEADER
    140	000136					  $CALL $RDWLN <R0,#512.,R2,R3,R4> ; READ INDEX FILE HEADER
    141	000146					  ON.ERROR
    142	000150					    IF R4 EQ #$IXHD		; IF IT WAS INPUT DISK
SWDSK	X0006 - SWITCH DISK UNI	MACRO M1110  21-AUG-78 20:56  PAGE 4-2


    143	000156					      ERROR ER.IXH		; USE INPUT MESSAGE
    144	000160					    ELSE
    145	000162					      LET $FLAG1 := $FLAG1 SET.BY #KY.NIP
    146	000170					      ERROR ER.IXO		; ELSE OUTPUT MESSAGE
    147	000172					    END
    148	000172					  END
    149	000172					END
    150	000172					RETURN
SWDSK	X0006 - SWITCH DISK UNI	MACRO M1110  21-AUG-78 20:56  PAGE 5


    152					;+
    153					;
    154					; *** - $ALUNI	ASSIGN INPUT LUN
    155					;
    156					; *** - $ALUNO	ASSIGN OUTPUT LUN
    157					;
    158					; THESE ROUTINES ASSIGN THEIR RESPECTIVE LUNS TO THE DEVICE INDICATED
    159					; BY THE SUPPLIED DEVICE TABLE ENTRY.
    160					;
    161					; INPUTS:
    162					;
    163					;	R0 = ADDRESS OF DEVICE TABLE ENTRY
    164					;
    165					; OUTPUTS:
    166					;
    167					;	R1 = LUN NUMBER
    168					;	R4 = CORRESPONDING INDEX FILE HEADER BUFFER ADDRESS
    169					;	LUN ASSIGNED TO DEVICE
    170					;	OTHER REGISTERS PRESERVED
    171					;
    172					;-
    173
    174	000174				$ALUNI::
    175	000174					PUSH $INDEV			; SAVE OLD TABLE POINTER
    176	000200					LET $INDEV := R0		; SET NEW ONE
    177	000204					LET R1 := #INLUN		; GET LUN
    178	000210					LET R4 := #$IXHD		; AND BUFFER
    179	000214					GOTO ALUNC
    180
    181	000216				$ALUNO::
    182	000216					PUSH $OUDEV			; SAVE OLD TABLE POINTER
    183	000222					LET $OUDEV := R0		; SET NEW ONE
    184	000226					LET R1 := #OUTLUN		; GET LUN
    185	000232					LET R4 := #$OXHD		; AND BUFFER
    186	000236				ALUNC:	ALUN$S R1,(R0), 2(R0)		; ASSIGN THE LUN
    187	000254					IF R0 NE (SP)+			; IF WE CHANGED DEVICES
    188	000260					  RETURN ERROR
    189	000264					ELSE
    190	000266					  RETURN NOERROR
    191	000272					END
    192
    193
    194
    195		000001 				.END
SWDSK	X0006 - SWITCH DISK UNI	MACRO M1110  21-AUG-78 20:56  PAGE 5-1
SYMBOL TABLE

ALUNC   000236R  	LBLS1 = 000002   	TYPS1 = 000000   	$INDEV= ****** GX	$SAVAL= ****** GX
A3    = 000002   	LBLS2 = 000004   	TYPS2 = 000000   	$IVTAB= ****** GX	$SUPMC= 000043
B.STAT= ****** GX	L0      000046R  	V.IBLB= ****** GX	$IXHD = ****** GX	$SWID   000014RG
B0      000046R  	L1      000172R  	V.IBSZ= ****** GX	$I$   = 000001   	$SWID1  000000RG
B1      000054R  	L2      000172R  	V.LENG= ****** GX	$K$   = 000000   	$SWOD   000026RG
ER.IXH= ****** GX	L3      000162R  	V.RVN = ****** GX	$L    = 000002   	$SWOD1  000006RG
ER.IXO= ****** GX	L4      000172R  	V.SIZ = ****** GX	$L$   = 000000   	$T    = 000007
ER.RVN= ****** GX	L5      000266R  	$ALUNI  000174RG 	$OUDEV= ****** GX	$T1   = 000000
E0      000076R  	L6      000272R  	$ALUNO  000216RG 	$OVTAB= ****** GX	$T2   = 000006
E1      000072R  	OUTLUN= ****** GX	$DIDDO= 000000   	$OXHD = ****** GX	$Y$   = 000000
IIII  = 177777   	SEARCH= 000000   	$EF$  = 000000   	$O$   = 000000   	$Z$   = 000000
INLUN = ****** GX	SWIDC   000036R  	$E$   = 000001   	$R    = 177777   	$$TT  = 000001
KY.NIP= ****** GX	SWIDC1  000102R  	$FLAG1= ****** GX	$RDWLN= ****** GX	.$T   = 000005
LBLS0 = 000006   	TYPS0 = 000000

. ABS.	000000	   000
      	000272	   001
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  11517 WORDS  ( 45 PAGES)
DYNAMIC MEMORY:  12276 WORDS  ( 47 PAGES)
ELAPSED TIME:  00:01:04
EXE$:SWDSK,LIS$:SWDSK/-SP=SRC$:SMAC/PA:1,DSCPRE,SWDSK
