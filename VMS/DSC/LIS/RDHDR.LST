RDHDR	X0013 - READ FILE HEADE	MACRO M1110  21-AUG-78 20:52  PAGE 3


      1	000000					$BEGIN	RDHDR,0013,<READ FILE HEADER>
						.TITLE	RDHDR	X0013 - READ FILE HEADER
						.IDENT	"X0013"
      2
      3					;
      4					; COPYRIGHT (C) 1977 BY DIGITAL EQUIPMENT CORPORATION,
      5					; MAYNARD, MASSACHUSETTS
      6					;
      7					; THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ONLY ON A
      8					; SINGLE  COMPUTER  SYSTEM AND MAY BE COPIED ONLY WITH THE IN-
      9					; CLUSION OF THE ABOVE COPYRIGHT NOTICE.   THIS  SOFTWARE,  OR
     10					; ANY  OTHER  COPIES THEREOF, MAY NOT BE PROVIDED OR OTHERWISE
     11					; MADE AVAILABLE TO ANY OTHER PERSON EXCEPT FOR  USE  ON  SUCH
     12					; SYSTEM  AND TO ONE WHO AGREES TO THESE LICENSE TERMS.  TITLE
     13					; TO AND OWNERSHIP OF THE SOFTWARE SHALL AT ALL  TIMES  REMAIN
     14					; IN DIGITAL.
     15					;
     16					; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITH-
     17					; OUT  NOTICE  AND  SHOULD NOT BE CONSTRUED AS A COMMITMENT BY
     18					; DIGITAL EQUIPMENT CORPORATION.
     19					;
     20					; DIGITAL EQUIPMENT CORPORATION ASSUMES NO RESPONSIBILITY  FOR
     21					; THE USE OR RELIABILITY OF ITS SOFTWARE ON EQUIPMENT WHICH IS
     22					; NOT SUPPLIED BY DIGITAL.
     23					;
     24					; ANDREW C. GOLDSTEIN  17-AUG-76  23:15
     25
     26
     27						.MCALL	FHDL2$
     28	000000					FHDL2$				; DEFINE FILE HEADER FORMAT
RDHDR	X0013 - READ FILE HEADE	MACRO M1110  21-AUG-78 20:52  PAGE 4


     30					;+
     31					;
     32					; *** - $RDHDR	READ FILE HEADER FROM INPUT DISK
     33					;
     34					; *** - $RDHDO	READ FILE HEADER FROM OUTPUT DISK
     35					;
     36					; THIS ROUTINE READS THE HEADER FOR THE INDICATED FILE INTO THE
     37					; APPROPRIATE HEADER BUFFER AND CHECKS ITS CORRECTNESS.
     38					;
     39					; INPUTS:
     40					;
     41					;	R2, R3 = FILE NUMBER OF HEADER
     42					;
     43					; OUTPUTS:
     44					;
     45					;	CC - C	CLEAR IF ALL OK
     46					;		SET IF ERROR (MESSAGE PRINTED)
     47					;	R4 = BUFFER CONTROL BLOCK ADDRESS
     48					;	R5 = ADDRESS OF HEADER BUFFER
     49					;	$FNU CONTAINS FILE NUMBER
     50					;	HEADER READ INTO $IHBF OR $OHBF
     51					;	OTHER REGISTERS CLOBBERED
     52					;
     53					;
     54					; *** - $VFYHD	VERIFY FILE HEADER
     55					;
     56					; THIS ROUTINE VERIFIES THAT THE INDICATED BLOCK IS A FILE HEADER.
     57					;
     58					; INPUTS:
     59					;
     60					;	R4 = BCB OF HEADER
     61					;	R5 = ADDRESS OF HEADER
     62					;
     63					; OUTPUTS:
     64					;
     65					;	CC - C	CLEAR IF HEADER
     66					;		SET IF NOT
     67					;	R4, R5 PRESERVED, OTHER REGISTERS CLOBBERED
     68					;
     69					;-
     70
     71	000000				$RDHDR::
     72	000000					LET R4 := #$IHHD		; USE INPUT HEADER BUFFER
     73	000004				RDHDR1:	LET R0 := #INLUN		; READ FROM INPUT DEVICE
     74	000010					LET R1 := $INDEV		; GET DEVICE TABLE ADDR
     75	000014					IF #KY.NIP SET.IN $FLAG1	;IF TAPE O.P. FLAGGED
     76	000024						LET R5 := #$OXBF
     77	000030					ELSE
     78	000032						LET R5 := #$IXBF	; AND INPUT INDEX FILE HEADER
     79	000036					END
     80	000036					GOTO RDCOM
     81
     82	000040				$RDHDO::
     83	000040					LET R4 := #$OHHD		; USE OUTPUT HEADER BUFFER
     84	000044				RDHDO1:	LET R0 := #OUTLUN		; READ FROM OUTPUT DEVICE
     85	000050					LET R1 := $OUDEV		; GET DEVICE TABLE ADDR
     86	000054					LET R5 := #$OXBF		; AND OUTPUT INDEX FILE HEADER
RDHDR	X0013 - READ FILE HEADE	MACRO M1110  21-AUG-78 20:52  PAGE 4-1


     87
     88	000060				RDCOM:	LET $FNU := R3			; SAVE FILE NUMBER
     89	000064					PUSH R0				; AND LUN
     90	000066					LET R3 := R3 + V.IBSZ(R1)	; ADD SIZE OF INDEX FILE BITMAP
     91	000072					LET R2 := R2 + CARRY		; TO FILE NUMBER
     92					;
     93					; ACCOUNT FOR THE BOOT BLOCK, HOME BLOCK, BACKUP HOME BLOCK AND
     94					; THE BACKUP COPY OF THE INDEX FILE HEADER.
     95					;
     96					; EACH OCCUPIES ONE CLUSTER OF VBNS AND LBNS. (CLUSTER FACTOR*4)+1
     97					;
     98	000074	016146 	000000G			MOV  V.CLF(R1),-(SP)		; CLUSTER FACTOR TO TEMP.
     99	000100	006316 				ASL  (SP)			; MULT BY
    100	000102	006316 				ASL  (SP)			;         FOUR.
    101	000104	062603 				ADD  (SP)+,R3
    102	000106	005502 				ADC  R2
    103	000110					$CALL $MPVBN <,,R2,R3,,R5>	; MAP TO LBN
    104	000114					POP R0				; GET LUN INTO R0
    105	000116					ON.ERROR
    106	000120					  ERRP ER.FNU			; FILE NUMBER NOT MAPPED
    107	000122					  JUMPTO EXIT
    108	000126					END
    109	000126					  $CALL $RDWLN <R0,,R2,R3,R4>	; READ THE HEADER
    110	000132					  ON.ERROR
    111	000134					    ERRP ER.RHD
    112	000136					  ELSE
    113					;
    114					; MAKE SURE THAT THIS IS A REAL FILE HEADER
    115					;
    116	000140				$VFYHD::    				; ENTRY TO VERIFY A HEADER
    117	000140					    IF H.FLEV(R5) NE #1001	; CHECK FILE STRUCTURE LEVEL
    118	000150					      ERRP ER.FLV
    119	000152					    ELSE
    120	000154					      IF H.FNUM(R5) EQ #0
    121	000162						   ERRP ER.DEL
    122	000164					      ELSE
    123	000166					         IFB  #SC.MDL SET.IN H.SCHA(R5)
    124	000176						   ERRP ER.DEL
    125	000200						 ELSE
    126	000202				      	      		IF H.FNUM(R5) NE $FNU	; CHECK FILE NUMBER
    127	000212								ERRP ER.FNO
    128	000214							ELSE
    129	000216						  		$CALL $CKSUM		; CHECK THE CHECKSUM
    130	000222						  		ON.ERROR THEN ERRP ER.HCK
    131	000226					      		END
    132	000226						END
    133	000226					    END
    134	000226					  END
    135	000226					END
    136	000226				EXIT:	ON.ERROR THEN LET B.STAT(R4) := B.STAT(R4) OFF.BY B.STAT(R4)
    137	000236					RETURN
RDHDR	X0013 - READ FILE HEADE	MACRO M1110  21-AUG-78 20:52  PAGE 5


    139					;+
    140					;
    141					; *** - $RDNXH	READ NEXT EXTENSION HEADER FROM INPUT DISK
    142					;
    143					; *** - $RDNXO	READ NEXT EXTENSION HEADER FROM OUTPUT DISK
    144					;
    145					; THIS ROUTINE READS THE NEXT EXTENSION HEADER OF THE INDICATED FILE.
    146					; AN ERROR RETURN IS MADE IF NONE EXISTS OR IF AN ERROR OCCURRED.
    147					;
    148					; INPUTS:
    149					;
    150					;	R4 = BUFFER CONTROL BLOCK FOR NEW HEADER
    151					;	R5 = ADDRESS OF PRESENT HEADER
    152					;
    153					; OUTPUTS:
    154					;
    155					;	CC - C	CLEAR IF NO ERRORS
    156					;		SET IF ERROR OR NO EXTENSION HEADER
    157					;	R5 = BUFFER ADDRESS OF NEW HEADER
    158					;	$BAVBN UPDATED (INPUT FILES ONLY)
    159					;	APPROPRIATE LUN ASSIGNED TO NEW DISK
    160					;
    161					;-
    162
    163	000240				$RDNXH::
    164	000240					PUSH  #0			; SET FLAG FOR INPUT
    165	000244					GOTO RDNXCM
    166
    167	000246				$RDNXO::
    168	000246					PUSH  #1			; SET FLAG FOR OUTPUT
    169
    170	000252				RDNXCM:
    171	000252					POP R0
    172	000254	016546 	000004 			MOV  H.FSEG(R5),-(SP)		; SAVE EXTENSION SEGMENT NUMBER.
    173	000260					LET  R1  :=  H.ERVN(R5)		; GET EXTENSION RVN.
    174	000264					LET R2  :=  R1			; HI PART OF FILE # TO R2.
    175	000266	000302 				SWAB  	R2
    176	000270	042702 	177400 			BIC	#^C<377>,R2
    177	000274					LET R3  :=  H.EFNU(R5)
    178	000300					IF RESULT IS NE			; IF EXTENSION HEADER EXISTS
    179	000302					  PUSH H.EFSQ(R5)		; GET EXTENSION FILE SEQ #
    180	000306					  IF R0 EQ #0			; IF INPUT
    181	000312					    $CALL $SWID <,R1>		; SWITCH TO NEW VOLUME
    182	000316					    ON.NOERROR THEN $CALL RDHDR1 <,,R2,R3,R4>
    183	000324					  ELSE				; IF OUTPUT DEVICE
    184	000326					    $CALL $SWOD <,R1>		; SWITCH TO NEW VOLUME
    185	000332					    ON.NOERROR THEN $CALL RDHDO1 <,,R2,R3,R4>
    186	000340					  END
    187	000340					  ON.NOERROR
    188					;
    189					; CHECK THE EXTENSION HEADER FOR CONSISTENCY
    190					;
    191	000342					    IF (SP)+ EQ H.FSEQ(R5)	; CHECK FILE SEQUENCE NUMBER
    192	000350					      LET (SP) := (SP) + #1	; BUMP SAVED SEGMENT NUMBER
    193	000352					      IF (SP)+ EQ H.FSEG(R5)	; CHECK SEGMENT NUMBER
    194	000360						RETURN NOERROR		; GOOD EXTENSION HEADER
    195	000364					      ELSE
RDHDR	X0013 - READ FILE HEADE	MACRO M1110  21-AUG-78 20:52  PAGE 5-1


    196	000366						ERRP ER.ESN
    197	000370					      END
    198	000370					    ELSE
    199	000372					      ERRP ER.ESQ
    200	000374	005726 				      TST (SP)+			; CLEAN SEG NUMBER FROM STACK
    201	000376					    END
    202	000376					  ELSE				; ERROR READING HEADER -
    203	000400	022626 				    CMP (SP)+,(SP)+		; MESSAGE ALREADY PRINTED
    204	000402					  END
    205	000402					ELSE
    206	000404	005726 				  TST (SP)+			; CLEAN THE STACK
    207	000406					END
    208	000406					RETURN ERROR
    209		000001 				.END
RDHDR	X0013 - READ FILE HEADE	MACRO M1110  21-AUG-78 20:52  PAGE 5-2
SYMBOL TABLE

B.STAT= ****** GX	H.MPOF= 000001   	L0      000032R  	RDCOM   000060R  	$IXBF = ****** GX
ER.DEL= ****** GX	H.PRIV= 000073   	L1      000036R  	RDHDO1  000044R  	$I$   = 000001
ER.ESN= ****** GX	H.PROG= 000074   	L10     000226R  	RDHDR1  000004R  	$L    = 000000
ER.ESQ= ****** GX	H.PROJ= 000076   	L11     000202R  	RDNXCM  000252R  	$L$   = 000000
ER.FLV= ****** GX	H.RPRO= 000102   	L12     000226R  	SC.BAD= 000100   	$MPVBN= ****** GX
ER.FNO= ****** GX	H.RSOF= 000003   	L13     000216R  	SC.DIR= 000040   	$OHHD = ****** GX
ER.FNU= ****** GX	H.SCHA= 000065   	L14     000226R  	SC.MDL= 000200   	$OUDEV= ****** GX
ER.HCK= ****** GX	H.SEMK= 000104   	L15     000226R  	S.HDHD= 000114   	$OXBF = ****** GX
ER.RHD= ****** GX	H.SMMX= 000110   	L16     000236R  	S.IDHD= 000202   	$O$   = 000000
EXIT    000226R  	H.UCHA= 000064   	L17     000404R  	S.MPHD= 000000   	$R    = 177777
FP.DEL= 000010   	H.UFAT= 000024   	L2      000126R  	TYPS0 = 000000   	$RDHDO  000040RG
FP.EXE= 000004   	H.USE = 000072   	L20     000326R  	TYPS1 = 000000   	$RDHDR  000000RG
FP.RDV= 000001   	IIII  = 177777   	L21     000324R  	TYPS2 = 000000   	$RDNXH  000240RG
FP.WRV= 000002   	INLUN = ****** GX	L22     000340R  	TYPS3 = 000000   	$RDNXO  000246RG
H.ACOF= 000002   	I.BKDT= 000052   	L23     000340R  	TYPS4 = 000000   	$RDWLN= ****** GX
H.CKSM= 000776   	I.CRDT= 000022   	L24     000400R  	TYPS5 = 000000   	$SUPMC= 000043
H.EFNU= 000016   	I.EXDT= 000042   	L25     000372R  	UC.CON= 000200   	$SWID = ****** GX
H.EFSQ= 000020   	I.FNAM= 000000   	L26     000366R  	UC.DLK= 000100   	$SWOD = ****** GX
H.ERVN= 000022   	I.RVDT= 000032   	L27     000370R  	V.CLF = ****** GX	$T    = 000033
H.FCHA= 000064   	I.RVNO= 000020   	L3      000140R  	V.IBSZ= ****** GX	$T1   = 000000
H.FLEV= 000006   	I.ULAB= 000062   	L30     000376R  	$CKSUM= ****** GX	$T2   = 000032
H.FNUM= 000010   	KY.NIP= ****** GX	L31     000402R  	$DIDDO= 000000   	$VFYHD  000140RG
H.FOWN= 000074   	LBLS0 = 000032   	L32     000406R  	$EF$  = 000000   	$Y$   = 000000
H.FPRO= 000100   	LBLS1 = 000031   	L4      000226R  	$E$   = 000001   	$Z$   = 000000
H.FRVN= 000014   	LBLS2 = 000030   	L5      000154R  	$FLAG1= ****** GX	$$T   = 000023
H.FSEG= 000004   	LBLS3 = 000027   	L6      000226R  	$FNU  = ****** GX	.$T   = 000002
H.FSEQ= 000012   	LBLS4 = 000014   	L7      000166R  	$IHHD = ****** GX	...GBL= 000000
H.IDOF= 000000   	LBLS5 = 000015   	OUTLUN= ****** GX	$INDEV= ****** GX	...TPC= 000000

. ABS.	000000	   000
      	000412	   001
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  13096 WORDS  ( 52 PAGES)
DYNAMIC MEMORY:  14388 WORDS  ( 55 PAGES)
ELAPSED TIME:  00:01:31
EXE$:RDHDR,LIS$:RDHDR/-SP=SRC$:SMAC/PA:1,DSCPRE,RDHDR
