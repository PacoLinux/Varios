GTCML - GET COMMAND LINE WITH C	MACRO M1110  21-AUG-78 21:24  PAGE 3


      1						.TITLE	GTCML - GET COMMAND LINE WITH CONTINUATIONS
      2
      3						.IDENT	"V0010"
      4
      5					;
      6					; COPYRIGHT (C)   1976,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
      7					; COPYRIGHT (C)   1975,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
      8					; COPYRIGHT (C)   1974,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
      9					;
     10					; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
     11					; ON A  SINGLE COMPUTER SYSTEM AND CAN BE COPIED (WITH INCLUSION
     12					; OF DEC'S COPYRIGHT NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
     13					; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
     14					;
     15					; THE  INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
     16					; NOTICE AND  SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
     17					; EQUIPMENT CORPORATION.
     18					;
     19					; DEC  ASSUMES NO  RESPONSIBILITY  FOR  THE  USE  OR RELIABILITY
     20					; OF ITS  SOFTWARE ON  EQUIPMENT WHICH  IS NOT SUPPLIED BY DEC.
     21					;
     22					; ANDREW C. GOLDSTEIN  14-SEP-76  15:25
     23					; MODIFIED 8-24-77 G.RITTENBURG EXIT WITH STATUS ADDED
     24						;ON-LINE VERSION ONLY   ***GR1
     25					;
     26
     27					;
     28					; THIS ROUTINE ACCEPTS A COMMAND LINE WITH CONTINUATIONS FOR THE FILES
     29					; MCR FUNCTIONS. IT FIRST GETS THE MCR COMMAND LINE. IF THERE IS NONE,
     30					; OR IF CONTINUATIONS ARE CALLED FOR, IT PROMPTS AND READS INPUT FROM
     31					; THE TASK'S LUN #1, WHICH IS HOPEFULLY ASSIGNED TO TI. ALL ERROR
     32					; HANDLING IS DONE INTERNALLY.
     33					;
     34
     35		000001 				R$$11M = 1
     36
     37		000001 			LUN = 1				; LUN FOR CONSOLE I/O
     38		000001 			EFN = 1				; LIKEWISE EFN
     39
     40		000015 			CR  = 15			; CARRIAGE RETURN CHAR
     41
     42						.MCALL	QIOW$,QIOW$S,GMCR$,DIR$,CALL,RETURN,EXIT$S
     43
     44						.IF	DF,R$$11M
     45					.MACRO	SOB	RX,ADDR
     46						DEC	RX
     47						BNE	ADDR
     48					.ENDM	SOB
     49						.ENDC
     50					;
     51					; BUFFER TO BUILD COMMAND LINE
     52					;
     53		001000 			BUFSIZ = 512.
     54
     55						.IF	NDF,R$$11S
     56	000000				BUFFER:	GMCR$
     57	000122					.BLKB	BUFSIZ+BUFFER+G.MCRB-.
GTCML - GET COMMAND LINE WITH C	MACRO M1110  21-AUG-78 21:24  PAGE 3-1


     58						.IFF
     59					BUFFER:	.BLKB	BUFSIZ
     60						.ENDC
     61					;
     62					; QIO TO OUTPUT PROMPT TO TERMINAL
     63					;
     64	001002				PROMPT:	QIOW$	IO.WVB,LUN,EFN,,IOSTAT,,<,,<'$>>
     65
     66	001032				IOSTAT:	.BLKW	2		; I/O STATUS BLOCK
     67					;
     68					; ERROR MESSAGES FOR VARIOUS FORMS OF LOSSAGE
     69					;
     70	001036	   015 	   130 	   130 	IOERRM:	.ASCII	<CR>"XXX -- COMMAND I/O ERROR"
	001041	   130 	   040 	   055
	001044	   055 	   040 	   103
	001047	   117 	   115 	   115
	001052	   101 	   116 	   104
	001055	   040 	   111 	   057
	001060	   117 	   040 	   105
	001063	   122 	   122 	   117
	001066	   122
     71		000031 			IOERRL = .-IOERRM
     72
     73	001067	   015 	   130 	   130 	OVERM:	.ASCII	<CR>"XXX -- COMMAND TOO LONG"
	001072	   130 	   040 	   055
	001075	   055 	   040 	   103
	001100	   117 	   115 	   115
	001103	   101 	   116 	   104
	001106	   040 	   124 	   117
	001111	   117 	   040 	   114
	001114	   117 	   116 	   107
     74		000030 			OVERL = .-OVERM
     75
     76						.EVEN
GTCML - GET COMMAND LINE WITH C	MACRO M1110  21-AUG-78 21:24  PAGE 4


     78					;+
     79					;
     80					; *** - .GTCML - GET COMMAND LINE WITH CONTINUATION
     81					;
     82					; THIS ROUTINE OBTAINS A COMMAND LINE FROM THE MCR COMMAND LINE
     83					; BUFFER OR FROM THE CONSOLE TERMINAL. A TRAILING HYPHEN (-)
     84					; CAUSES CONTINUATION: THE ROUTINE PROMPTS AND ACCEPTS ANOTHER
     85					; LINE FROM THE CONSOLE TERMINAL.
     86					;
     87					; INPUTS:
     88					;
     89					;	R3 = LENGTH OF PROMPT STRING
     90					;	R4 = ADDRESS OF PROMPT STRING
     91					;
     92					; OUTPUTS:
     93					;
     94					;	R3 = LENGTH OF COMMAND STRING
     95					;	R4 = ADDRESS OF COMMAND STRING
     96					;	R0-R2 ARE GARBAGED
     97					;
     98					;-
     99
    100						.ENABL	LSB
    101
    102	001120				.GTCML::
    103	001120	010467 	177672 			MOV	R4,PROMPT+Q.IOPL ; SET UP PROMPT STRING
    104	001124	010367 	177670 			MOV	R3,PROMPT+Q.IOPL+2 ; IN QIO DPB
    105						.IF	NDF,R$$11S
    106	001130	012701 	001000 			MOV	#BUFSIZ,R1	; AND MAXIMUM BYTE COUNT
    107	001134					DIR$	#BUFFER		; TRY FOR MCR COMMAND BUFFER
    108	001142	103423 				BCS	30$		; BRANCH IF NONE
    109	001144	013703 	000000G			MOV	@#$DSW,R3	; PICK UP THE BYTE COUNT
    110	001150	001420 				BEQ	30$		; BRANCH IF NULL
    111	001152	160301 				SUB	R3,R1		; COMPUTE SPACE LEFT
    112	001154	012704 	000002'			MOV	#BUFFER+G.MCRB,R4 ; POINT TO START OF ACTUAL COMMAND LINE
    113	001160				10$:	CALL	SPTEST		; SEARCH FOR THE FIRST SPACE
    114	001164	103004 				BCC	20$
    115	001166	005204 				INC	R4		; TRY NEXT CHARACTER
    116	001170					SOB	R3,10$
    117	001174	000406 				BR	30$		; NO SPACES - THROW COMMAND LINE AWAY
    118
    119	001176				20$:	CALL	SPTEST		; NOW LOOK FOR FIRST REAL COMMAND CHAR
    120	001202	103415 				BCS	40$
    121	001204	005204 				INC	R4		; TRY THE NEXT
    122	001206					SOB	R3,20$
    123						.ENDC
    124					;
    125					; THERE IS NO MCR COMMAND LINE, EITHER BECAUSE THE DIRECTIVE FAILED
    126					; OR THERE WAS NO USEFUL INFORMATION IN IT. SET UP TO GET COMMAND
    127					; FROM THE TERMINAL.
    128					;
    129	001212	012704 	000002'		30$:	MOV	#BUFFER+G.MCRB,R4 ; RE-INIT POINTER
    130	001216	005003 				CLR	R3
    131	001220	012701 	001000 			MOV	#BUFSIZ,R1	; R1 = SPACE AVAILABLE
    132	001224	010400 				MOV	R4,R0		; R0 = ADDRESS FOR INPUT
    133	001226	005767 	000000G			TST	GCLFLG		; SEE IF THERE WAS AN MCR COMMAND LINE
    134	001232	001163 				BNE	90$		; YES - EXIT IN ONE SHOT MODE
GTCML - GET COMMAND LINE WITH C	MACRO M1110  21-AUG-78 21:24  PAGE 4-1


    135	001234	000413 				BR	60$
    136						.IF	NDF,R$$11S
    137					;
    138					; WE HAVE A GOOD MCR COMMAND LINE. UPDATE VARIOUS REGISTERS.
    139					;
    140	001236	005267 	000000G		40$:	INC	GCLFLG		; SET MCR FLAG
    141	001242	010400 				MOV	R4,R0		; POINT TO END OF DATA
    142	001244	060300 				ADD	R3,R0
    143						.ENDC
    144					;
    145					; WE HAVE A COMMAND LINE FROM SOMEWHERE. LOOK FOR CONTINUATION.
    146					;
    147	001246	126027 	177777 	000055 	50$:	CMPB	-1(R0),#'-	; CONTINUATION CHARACTER IS A "-"
    148	001254	001054 				BNE	EOL1		; NO - ALL DONE
    149	001256	005300 				DEC	R0		; YES - THROW IT AWAY
    150	001260	005201 				INC	R1
    151	001262	005303 				DEC	R3		; ADJUST THE CHARACTER COUNT
    152					;
    153					; READ AN INPUT LINE FROM THE TERMINAL.
    154					;
    155	001264				60$:	DIR$	#PROMPT		; OUTPUT THE PROMPT STRING
    156	001272	103467 				BCS	IOERR		; CHECK FOR DIRECTIVE ERROR
    157	001274	105767 	177532 			TSTB	IOSTAT		; AND FOR I/O ERROR
    158	001300	002464 				BLT	IOERR
    159	001302					QIOW$S	#IO.RVB,#LUN,#EFN,,#IOSTAT,,<R0,R1,<#' >>
    160	001352	103437 				BCS	IOERR		; DIRECTIVE ERROR
    161	001354	105767 	177452 			TSTB	IOSTAT
    162	001360	002434 				BLT	IOERR		; I/O ERROR
    163	001362	105767 	177445 			TSTB	IOSTAT+1	; CHECK FOR A TERMINATED LINE
    164	001366	001442 				BEQ	OVER		; NO - BUFFER HAS OVERFLOWED
    165	001370	016702 	177440 			MOV	IOSTAT+2,R2	; GET THE BYTE COUNT
    166	001374	001424 				BEQ	EOL		; RETURN ON NULL LINE
    167	001376	160201 				SUB	R2,R1		; ADJUST THE REMAINING SPACE COUNT
    168	001400	060203 				ADD	R2,R3		; ACCUMULATE BYTE COUNT
    169	001402	060200 				ADD	R2,R0		; POINT TO NEW END OF DATA
    170	001404	000720 				BR	50$		; AND LOOK FOR CONTINUATION AGAIN
    171					;
    172					; END OF LINE
    173					;
    174	001406				EOL1:	PUSH	R0	; CONVERT L.C. TO UPPER CASE
    175	001410					PUSH	R3	; IF NECESSARY
    176	001412				EOL1A:	IFB 	-(R0) LT #141 THEN GOTO EOL2  ; NO CONV. NECESSARY
    177	001422					IFB	(R0)  GT #172 THEN GOTO EOL2  ; NO CONV. NECESSARY
    178	001432	142710 	000040 			BICB	#40,(R0)
    179	001436				EOL2:	SOB	R3,EOL1A		;CONTINUE IF R3 GT #0
    180	001442					POP	R3
    181	001444					POP	R0
    182	001446	105010 			EOL:	CLRB	(R0)		; THROW IN A TERMINATING NULL
    183	001450					RETURN
    184					;
    185					; TO HERE ON I/O ERROR
    186					;
    187	001452	126727 	177354 	000000G	IOERR:	CMPB	IOSTAT,#IE.EOF	; LOOK FOR CONTROL Z
    188	001460	001450 				BEQ	90$		; YES - JUST GET OUT QUIETLY
    189	001462	012700 	001036'			MOV	#IOERRM,R0	; SET UP MESSAGE POINTER
    190	001466	012701 	000031 			MOV	#IOERRL,R1	; AND BYTE COUNT
    191	001472	000404 				BR	70$
GTCML - GET COMMAND LINE WITH C	MACRO M1110  21-AUG-78 21:24  PAGE 4-2


    192					;
    193					; TO HERE IF THE INPUT BUFFER OVERFLOWS
    194					;
    195	001474	012700 	001067'		OVER:	MOV	#OVERM,R0
    196	001500	012701 	000030 			MOV	#OVERL,R1
    197	001504	010002 			70$:	MOV	R0,R2
    198	001506	005202 				INC	R2
    199	001510	012703 	000003 			MOV	#3,R3		; COUNT 3 BYTES OF THE PROMPT STRING
    200	001514	016704 	177276 			MOV	PROMPT+Q.IOPL,R4 ; POINT TO PROMPT STRING
    201	001520	112422 			80$:	MOVB	(R4)+,(R2)+	; COPY PROMPT INTO ERROR MESSAGE
    202	001522					SOB	R3,80$
    203	001526					QIOW$S	#IO.WVB,#LUN,#EFN,,,,<R0,R1,<#' >>
    204	001574					LET $ESTAT := #4	; SET SEVERE ERROR
    205	001602				90$:
    206					; THE NEXT 10 LINES MODIFIED 8-24-77		***GR1
    207						.IF	NDF,R$$11S
    208	001602					IF $ESTAT  LT #0	; IF NO ERRORS
    209	001610					  LET R0  := #EX$SUC	;INDICATE SUCCESS
    210	001614					ELSE
    211	001616						LET R0 := $ESTAT
    212	001622					END
    213	001622					JUMPTO $EXST		; AND EXIT
    214						.IFF
    215						BR	30$
    216						.ENDC		;ADDED 8-24-77 ***GR1
    217
    218
    219					;
    220					; SUBROUTINE TO CHECK FOR BLANKS OR TABS. R4 POINTS TO CHARACTER
    221					; BEING TESTED. CARRY CLEAR MEANS BLANK OR TAB.
    222					;
    223	001626	121427 	000040 		SPTEST:	CMPB	(R4),#40	; BLANK?
    224	001632	001405 				BEQ	100$		; YES
    225	001634	121427 	000011 			CMPB	(R4),#11	; TAB?
    226	001640	001402 				BEQ	100$		; YES
    227	001642	000261 				SEC			; NEITHER
    228	001644					RETURN
    229	001646	000241 			100$:	CLC
    230	001650					RETURN
    231
    232						.DSABL	LSB
    233
    234
    235
    236		000001 				.END
GTCML - GET COMMAND LINE WITH C	MACRO M1110  21-AUG-78 21:24  PAGE 4-3
SYMBOL TABLE

BUFFER  000000R  	IIII  = 177777   	L3      001622R  	R$$11M= 000001   	$O$   = 000000
BUFSIZ= 001000   	IOERR   001452R  	OVER    001474R  	SPTEST  001626R  	$R    = 177777
CR    = 000015   	IOERRL= 000031   	OVERL = 000030   	TYPS0 = 000000   	$SUPMC= 000043
EFN   = 000001   	IOERRM  001036R  	OVERM   001067R  	$DIDDO= 000000   	$T    = 000004
EOL     001446R  	IOSTAT  001032R  	PROMPT  001002R  	$DSW  = ****** GX	$T1   = 000000
EOL1    001406R  	IO.RVB= ****** GX	Q.IOAE= 000012   	$EF$  = 000000   	$T2   = 000003
EOL1A   001412R  	IO.WVB= ****** GX	Q.IOEF= 000006   	$ESTAT= ****** GX	$Y$   = 000000
EOL2    001436R  	LBLS0 = 000003   	Q.IOFN= 000002   	$EXST = ****** GX	$Z$   = 000000
EX$SUC= ****** GX	LUN   = 000001   	Q.IOLU= 000004   	$E$   = 000001   	$$T   = 000001
GCLFLG= ****** GX	L0      001422R  	Q.IOPL= 000014   	$I$   = 000001   	$$$ARG= 000002
G.MCRB= 000002   	L1      001432R  	Q.IOPR= 000007   	$L    = 000000   	$$$OST= 000014
IE.EOF= ****** GX	L2      001616R  	Q.IOSB= 000010   	$L$   = 000000   	.GTCML  001120RG

. ABS.	000000	   000
      	001652	   001
ERRORS DETECTED:  0

VIRTUAL MEMORY USED:  12564 WORDS  ( 50 PAGES)
DYNAMIC MEMORY:  14388 WORDS  ( 55 PAGES)
ELAPSED TIME:  00:00:42
EXE$:GTCML,LIS$:GTCML/-SP=SRC$:SMAC/PA:1,DSCPRE,GTCML
